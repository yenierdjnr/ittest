{
  "description": "The Amazon Web Services Certified SysOps Administrator (ACSA) certification is designed for professionals responsible for supporting deployments running in the AWS cloud. Topics covered include managing cloud based database instances, implementing security in the cloud and supporting virtual servers. The ACSA is an associate level certification intended as a starting point for technicians seeking AWS certification.",
  "descriptionMD": "",
  "length": "47849",
  "name": "AWS Certified SysOps Administrator",
  "practiceExam": false,
  "subtitle": "ACSA",
  "tagUrl": "network-admin",
  "topics": [
    {
      "episodes": [
        {
          "description": "The Amazon Web Services Certified SysOps Administrator (ACSA) certification is designed for professionals responsible for supporting deployments running in the AWS cloud. Topics covered include managing cloud based database instances, implementing security in the cloud and supporting virtual servers. The ACSA is an associate level certification intended as a starting point for technicians seeking AWS certification.",
          "length": "444",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/amazon-acsa/amazon-acsa-0-0-0-overview-113017-PGM.00_00_05_27.Still001.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/amazon-acsa/amazon-acsa-0-0-0-overview-113017-PGM.00_00_05_27.Still001-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/amazon-acsa/amazon-acsa-0-0-0-overview-113017-PGM.00_00_05_27.Still001-sm.jpg",
          "title": "Overview",
          "transcript": "",
          "vimeoId": "245433709"
        },
        {
          "description": "In this episode, Daniel and Don explore security in Amazon Web Services, both what AWS implements to keep our environment secure as well as what the customer is responsible for. They begin with AWS security measures, specifically infrastructure security like, power redundancy, cooling, and proper data disposal. AWS also provides hardware redundancy, hypervisor isolation, and firewalling.",
          "length": "2004",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/amazon-acsa/amazon-acsa-1-1-aws_security-111615-1.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/amazon-acsa/amazon-acsa-1-1-aws_security-111615-1-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/amazon-acsa/amazon-acsa-1-1-aws_security-111615-1-sm.jpg",
          "title": "AWS Security",
          "transcript": "WEBVTT\n\n1\n00:00:00.000 --> 00:00:10.000\n[MUSIC]\n\n2\n00:00:11.911 --> 00:00:14.095\nAll right, greetings everyone, and\n\n3\n00:00:14.095 --> 00:00:18.611\nwelcome to another exciting episode of\nITProTV I'm your host Daniel Lowrie.\n\n4\n00:00:18.611 --> 00:00:21.440\nAnd in this episode we're gonna\ngo over the AWS sysops admin\n\n5\n00:00:21.440 --> 00:00:23.360\ncertification available from Amazon.\n\n6\n00:00:23.360 --> 00:00:28.670\nAnd joining me in the studio today to\nhelp us guide through this little thing\n\n7\n00:00:28.670 --> 00:00:32.060\nhere is none other than Mr.\nDon Pizzat How's it going today, Don?\n\n8\n00:00:32.060 --> 00:00:32.850\nIt is going great, Daniel.\n\n9\n00:00:32.850 --> 00:00:34.250\nThanks for having me on the show.\n\n10\n00:00:34.250 --> 00:00:35.100\nAnd I'm kind of excited.\n\n11\n00:00:35.100 --> 00:00:37.930\nWe're gonna kick things off with one\nof the most important topics, and\n\n12\n00:00:37.930 --> 00:00:39.930\nthat's just security in\nAmazon web services.\n\n13\n00:00:39.930 --> 00:00:42.780\nI know everybody's concerned\nabout security these days, or\n\n14\n00:00:42.780 --> 00:00:43.560\neverybody should be.\n\n15\n00:00:43.560 --> 00:00:45.680\nSo, we're gonna take a look at it.\n\n16\n00:00:45.680 --> 00:00:47.870\nYeah, my favorite thing to do\nis just turn on the server and\n\n17\n00:00:47.870 --> 00:00:50.320\nturn on every service possible and\nlet it crack.\n\n18\n00:00:50.320 --> 00:00:51.100\nKeep it open.\n\n19\n00:00:51.100 --> 00:00:52.190\nWell, that way you know it works.\n\n20\n00:00:52.190 --> 00:00:53.985\nYeah, I'm never getting\nblocked by a firewall.\n\n21\n00:00:53.985 --> 00:00:57.670\n[LAUGH] Hard to be blocked by a firewall\nwhen you turn the firewall off.\n\n22\n00:00:57.670 --> 00:00:58.390\nThat's exactly right.\n\n23\n00:00:58.390 --> 00:01:02.340\nWell now I know what a lot of you guys\nare probably thinking is, security in AWS,\n\n24\n00:01:02.340 --> 00:01:05.240\nit's a cloud service right?\n\n25\n00:01:05.240 --> 00:01:07.400\nWe throw our systems up into the cloud and\nthey host it for us.\n\n26\n00:01:07.400 --> 00:01:11.160\nIs it even something that\nwe need to worry about?\n\n27\n00:01:11.160 --> 00:01:15.140\nAnd the answer is yeah, it's always\nsomething something we need to worry\n\n28\n00:01:15.140 --> 00:01:18.020\nabout, even let's just assume for\na moment that Amazon said, yep.\n\n29\n00:01:18.020 --> 00:01:19.620\nThis is a fully managed cloud service.\n\n30\n00:01:19.620 --> 00:01:21.900\nYou don't have to worry\nabout security at all.\n\n31\n00:01:21.900 --> 00:01:23.030\nWhat should that say to you?\n\n32\n00:01:23.030 --> 00:01:24.260\nI don't have to do anything at all.\n\n33\n00:01:24.260 --> 00:01:27.120\nIt should say to you, I need to\ndouble check what Amazon is doing.\n\n34\n00:01:27.120 --> 00:01:28.530\n[LAUGH] That's a pretty big claim.\n\n35\n00:01:28.530 --> 00:01:31.480\nSo, you never want to put all of your\nsecurity faith in one company or\n\n36\n00:01:31.480 --> 00:01:33.640\nin one resource, one system, whatever.\n\n37\n00:01:33.640 --> 00:01:37.340\nWe always wanna make sure we double\ncheck and with Amazon, the key thing\n\n38\n00:01:37.340 --> 00:01:40.790\nto remember Remember, is that they don't\nactually provide everything you need.\n\n39\n00:01:40.790 --> 00:01:42.670\nI know it seems like that- Those liars.\n\n40\n00:01:42.670 --> 00:01:45.640\nWhen you, like here, when I, when I pull\nup the AWS console, this is where I always\n\n41\n00:01:45.640 --> 00:01:48.630\nI, I look at this and I'm like, my gosh,\nis there something they don't provide?\n\n42\n00:01:48.630 --> 00:01:49.730\nLook at all these buttons.\n\n43\n00:01:49.730 --> 00:01:50.830\nThey provide a lot.\n\n44\n00:01:50.830 --> 00:01:56.110\nThey do a lot of different things for\nus, but there's things they don't do.\n\n45\n00:01:56.110 --> 00:01:59.140\nThere's actually a very Well defined\nline that's drawn that says,\n\n46\n00:01:59.140 --> 00:02:03.720\nhere's what Amazon takes care of,\nand here's what's left to you.\n\n47\n00:02:03.720 --> 00:02:07.860\nNow Don, I could hear the CIOs now going,\nwell what did we purchase this whole cloud\n\n48\n00:02:07.860 --> 00:02:10.660\nsolution for I thought that was so\nthat we didn't have to do that.\n\n49\n00:02:10.660 --> 00:02:14.270\nReduce our administrative tasks,\nespecially when it comes to security,\n\n50\n00:02:14.270 --> 00:02:15.510\nthat's a big bear to tackle.\n\n51\n00:02:15.510 --> 00:02:16.120\nYeah.\n\n52\n00:02:16.120 --> 00:02:20.950\nWell, there's a lot of things that Amazon\nprovides that we can't normally have.\n\n53\n00:02:20.950 --> 00:02:22.370\nAnd the key thing to remember here,\n\n54\n00:02:22.370 --> 00:02:26.750\nespecially for the exam,\nis that the word security covers a lot.\n\n55\n00:02:26.750 --> 00:02:29.630\nI know when somebody says to me like,\nhey I work in IT security.\n\n56\n00:02:29.630 --> 00:02:31.990\nI immediately think they must do\nfirewalls, intrusion prevention,\n\n57\n00:02:31.990 --> 00:02:33.280\nkeep the hackers out, right.\n\n58\n00:02:33.280 --> 00:02:38.290\nBut it could be that they're An air\nconditioning maintenance repairman.\n\n59\n00:02:38.290 --> 00:02:40.890\nRight?\nBecause air conditioning is a key piece of\n\n60\n00:02:40.890 --> 00:02:41.510\nnetwork security.\n\n61\n00:02:41.510 --> 00:02:45.420\nNow, if you're wondering how,\nthink about what happens.\n\n62\n00:02:45.420 --> 00:02:47.730\nIf I have a data center with\na thousand servers in it and\n\n63\n00:02:47.730 --> 00:02:49.830\nthe air conditioning stops working,\nWorking.\n\n64\n00:02:49.830 --> 00:02:52.620\nWhat's gonna happen to those 1000 servers?\n\n65\n00:02:52.620 --> 00:02:53.628\nThermal shutdown, all over the place.\n\n66\n00:02:53.628 --> 00:02:54.230\n[LAUGH] Thermal shutdown.\n\n67\n00:02:54.230 --> 00:02:57.280\nAnd it's actually a really low tech\nway to do a denial of service, right?\n\n68\n00:02:57.280 --> 00:03:01.000\nThere could be a multi-million dollar,\nmulti-billion dollar data center in your\n\n69\n00:03:01.000 --> 00:03:04.530\nneighborhood, and if you just go and stick\na crowbar in the big air conditioning fans\n\n70\n00:03:04.530 --> 00:03:09.560\nout side the building You'll\nshut that network down, right?\n\n71\n00:03:09.560 --> 00:03:14.910\nSo security expends a lot further than\njust firewalls and hacking, right?\n\n72\n00:03:14.910 --> 00:03:16.460\nAnd this is where Amazon really excels.\n\n73\n00:03:16.460 --> 00:03:18.630\nAmazon has data centers\naround the globe and\n\n74\n00:03:18.630 --> 00:03:21.700\nat those data centers they usually\nhave multiple availability zones.\n\n75\n00:03:21.700 --> 00:03:23.310\nSo it's not just one data center.\n\n76\n00:03:23.310 --> 00:03:27.160\nLike in Virginia there's four availability\nzones, and well depending on when And\n\n77\n00:03:27.160 --> 00:03:31.950\nwhen you watch this video who knows, there\nmight be five or 20 by the time you watch\n\n78\n00:03:31.950 --> 00:03:34.940\nthis, but each availability\nzone is completely independent.\n\n79\n00:03:34.940 --> 00:03:37.880\nOne AZ could go down and the other\nthree are still running and happy.\n\n80\n00:03:37.880 --> 00:03:40.820\nSeparate power, separate network,\nseparate air conditioning,\n\n81\n00:03:40.820 --> 00:03:43.350\nseparate generators,separate staff,\nseparate everything.\n\n82\n00:03:43.350 --> 00:03:44.530\nLike completely Completely separate.\n\n83\n00:03:44.530 --> 00:03:46.200\nThe only thing that's\ncommon is usually the land.\n\n84\n00:03:46.200 --> 00:03:51.900\nAnd if you're thinking, well, what if\na hurricane hits or an earthquake hits?\n\n85\n00:03:51.900 --> 00:03:55.890\nWell, in Virginia,\nthat's one of their data centers then\n\n86\n00:03:55.890 --> 00:03:58.515\nthey've got one's on the West coast, and\none's in other Other countries, right?\n\n87\n00:03:58.515 --> 00:04:00.655\nSo you can get completely\ndifferent continents if you want.\n\n88\n00:04:00.655 --> 00:04:03.765\nIt's up to you to pick how\ndiverse you want that to be.\n\n89\n00:04:03.765 --> 00:04:07.635\nAnd that's kind of an example\nof how that line gets drawn.\n\n90\n00:04:07.635 --> 00:04:09.895\nIf I want fully redundant power,\n\n91\n00:04:09.895 --> 00:04:12.580\nfully redundant network,\nfully redundant Redundant staff.\n\n92\n00:04:12.580 --> 00:04:14.940\nAmazon will give that to me.\n\n93\n00:04:14.940 --> 00:04:16.240\nThey'll provide that.\n\n94\n00:04:16.240 --> 00:04:19.940\nI just have to choose it when\nI go to deploy my system.\n\n95\n00:04:19.940 --> 00:04:22.700\nIf I put all of my EC2 instances\nin one availability zone.\n\n96\n00:04:22.700 --> 00:04:24.780\nI'm basically telling Amazon.\n\n97\n00:04:24.780 --> 00:04:26.770\nYeah I don't want database redundancy.\n\n98\n00:04:26.770 --> 00:04:29.060\nAnd that's my choice right.\n\n99\n00:04:29.060 --> 00:04:31.890\nBe aware that while.\n\n100\n00:04:31.890 --> 00:04:34.250\nAmazon does provide a lot of this stuff.\n\n101\n00:04:34.250 --> 00:04:36.340\nYou can easily choose not\nto take advantage of it.\n\n102\n00:04:36.340 --> 00:04:39.750\nAnd in that case you start\nto lose the advantage.\n\n103\n00:04:39.750 --> 00:04:41.570\nBut take a company like ours here,\nITProTV.\n\n104\n00:04:41.570 --> 00:04:44.060\nWe're not a large company,\nwe don't have a ton of employees, and\n\n105\n00:04:44.060 --> 00:04:44.745\nwe use cloud service.\n\n106\n00:04:44.745 --> 00:04:46.745\nFor almost all of our servers.\n\n107\n00:04:46.745 --> 00:04:54.305\nI say almost, actually I think we do use\nCloud services for all of our servers.\n\n108\n00:04:54.305 --> 00:04:56.195\nDo we have any servers here?\n\n109\n00:04:56.195 --> 00:04:56.730\nI don't know.\n\n110\n00:04:56.730 --> 00:04:59.720\n[LAUGH] [CROSSTALK] So if you're If\nyou're watching this episode right now,\n\n111\n00:04:59.720 --> 00:05:02.250\nI can guarantee you 100% of this stream\nis being delivered from servers that\n\n112\n00:05:02.250 --> 00:05:03.460\nare well outside of this building.\n\n113\n00:05:03.460 --> 00:05:07.120\nAnd it's nice that we don't have to worry\nabout those, that if we were to deploy\n\n114\n00:05:07.120 --> 00:05:11.140\nstreaming servers here, we would\nhave to have battery backups, right,\n\n115\n00:05:11.140 --> 00:05:13.860\nUPS's to keep our systems\nup if the power goes out.\n\n116\n00:05:13.860 --> 00:05:17.880\nPower goes out in Florida all the time,\nstorms, hurricanes, stuff like that.\n\n117\n00:05:17.880 --> 00:05:22.070\nWe would have to have generators if\nwe had a long-term power outage.\n\n118\n00:05:22.070 --> 00:05:24.010\nOutage.\nWe need power for that.\n\n119\n00:05:24.010 --> 00:05:26.660\nWe need security officers here\nat the building in case we\n\n120\n00:05:26.660 --> 00:05:28.490\nhad people try to break in and get things.\n\n121\n00:05:28.490 --> 00:05:32.290\nWe would have to have a lot of\ninfrastructure that we don't want\n\n122\n00:05:32.290 --> 00:05:33.000\nto do, right?\n\n123\n00:05:33.000 --> 00:05:36.550\nAnd so what we do instead is we,\n\n124\n00:05:36.550 --> 00:05:41.520\nWe basically outsource it,\nwe let amazon take care of that,\n\n125\n00:05:41.520 --> 00:05:45.010\nor we let one of the other cloud\nproviders take care of it.\n\n126\n00:05:45.010 --> 00:05:46.760\nAnd they have world class data centers.\n\n127\n00:05:46.760 --> 00:05:47.670\nMassive generators.\n\n128\n00:05:47.670 --> 00:05:50.990\nThey don't just have two internet\nconnections, they usually have five or\n\n129\n00:05:50.990 --> 00:05:52.880\neven ten different service providers.\n\n130\n00:05:52.880 --> 00:05:54.670\nDifferent connections to\na backbone in a lot of.\n\n131\n00:05:54.670 --> 00:05:55.180\nLot of cases.\n\n132\n00:05:55.180 --> 00:05:56.620\nSo, tons of available bandwidth.\n\n133\n00:05:56.620 --> 00:06:00.840\nThey have some of the highest talent\nNetwork Operation Center operators,\n\n134\n00:06:00.840 --> 00:06:02.700\nthe NOC operators, in the world, right?\n\n135\n00:06:02.700 --> 00:06:05.980\nBecause they're such a large data center,\nthey can afford that.\n\n136\n00:06:05.980 --> 00:06:09.540\nThis is the advantage of going\nwith a cloud service and\n\n137\n00:06:09.540 --> 00:06:11.850\nit's some of the stuff that they provide.\n\n138\n00:06:11.850 --> 00:06:12.730\nIt's really impressive.\n\n139\n00:06:12.730 --> 00:06:14.280\nNow Don, are they keeping our data around?\n\n140\n00:06:14.280 --> 00:06:17.290\nI know that's one of the The big\nthings we have to worry about when it\n\n141\n00:06:17.290 --> 00:06:21.310\ncomes to data protection is, what do I\ndo with the data when I'm done with it.\n\n142\n00:06:21.310 --> 00:06:22.910\nHow is it gotten rid of?\n\n143\n00:06:22.910 --> 00:06:24.570\nThey provide that as well, right?\n\n144\n00:06:24.570 --> 00:06:25.410\nAbsolutely.\n\n145\n00:06:25.410 --> 00:06:28.540\nI've done this, right,\nwhere I have a computer.\n\n146\n00:06:28.540 --> 00:06:31.440\nAnd it gets old and\nI decide to replace it.\n\n147\n00:06:31.440 --> 00:06:32.270\nI get a new computer.\n\n148\n00:06:32.270 --> 00:06:36.940\nWell, I recognize that I have my\npersonal data on the old computer.\n\n149\n00:06:36.940 --> 00:06:39.220\nComputer and, Daniel, tell me if you've\ndone this because I know I have.\n\n150\n00:06:39.220 --> 00:06:41.180\nI'll take the hard drive out\nbefore I throw the computer away.\n\n151\n00:06:41.180 --> 00:06:42.080\nI'm like all right,\n\n152\n00:06:42.080 --> 00:06:44.350\nI just toss that computer,\nI took the hard drive out though.\n\n153\n00:06:44.350 --> 00:06:46.600\nI'm gonna dispose of this\nproperly when I get a chance.\n\n154\n00:06:46.600 --> 00:06:51.470\nAnd then a year goes by, two years,\nall of a sudden it's five years later and\n\n155\n00:06:51.470 --> 00:06:54.430\nI see that hard drive sitting there,\nI'm like man,\n\n156\n00:06:54.430 --> 00:06:56.540\nI'm just gonna chuck it, and\nI just throw it in the trash, and\n\n157\n00:06:56.540 --> 00:06:59.990\nit's probably Probably still a functional\nhard drive, it's still got my data on it.\n\n158\n00:06:59.990 --> 00:07:02.000\nI just let data get out.\n\n159\n00:07:02.000 --> 00:07:02.760\nRight?\nIt's easy for\n\n160\n00:07:02.760 --> 00:07:05.130\nindividuals to make that mistake.\n\n161\n00:07:05.130 --> 00:07:08.200\nAt the Amazon datacenters though they're\nspecifically trained to handle that.\n\n162\n00:07:08.200 --> 00:07:11.020\nThey actually go Way above what we need,\nright.\n\n163\n00:07:11.020 --> 00:07:14.670\nBecause when I think of data disposal,\nI think of old hard drives.\n\n164\n00:07:14.670 --> 00:07:17.150\nAnd with old hard drives,\nthey actually drill and shred them.\n\n165\n00:07:17.150 --> 00:07:19.740\nThey have a neat video posted on\none of their YouTube channels for\n\n166\n00:07:19.740 --> 00:07:22.850\nAmazon where they show taking a hard\ndrive, drilling out the core and\n\n167\n00:07:22.850 --> 00:07:24.850\nthen throwing it in a mechanical shredder.\n\n168\n00:07:24.850 --> 00:07:25.780\nThey degauss the drives.\n\n169\n00:07:25.780 --> 00:07:27.210\nThey run the magnets over them to.\n\n170\n00:07:28.630 --> 00:07:29.320\nTo erase them.\n\n171\n00:07:29.320 --> 00:07:31.330\nFor the SSDs,\nthey do it there also, right?\n\n172\n00:07:31.330 --> 00:07:35.210\nThey destroy those when they're\nnot in a suitable life term.\n\n173\n00:07:35.210 --> 00:07:39.010\nSo, if hard drive fails,\nthey actually destroy it.\n\n174\n00:07:39.010 --> 00:07:41.650\nBut they also take steps\nwhen a drive is healthy.\n\n175\n00:07:41.650 --> 00:07:42.580\nThink about it.\n\n176\n00:07:42.580 --> 00:07:46.020\nWhen I deploy a virtual machine,\nI see this instance, right?\n\n177\n00:07:46.020 --> 00:07:47.380\nMy EC2 instance is up and running.\n\n178\n00:07:47.380 --> 00:07:48.850\nRunning on some hardware at Amazon.\n\n179\n00:07:48.850 --> 00:07:50.840\nI don't know what hardware that is, right?\n\n180\n00:07:50.840 --> 00:07:51.660\nAnd we never see that.\n\n181\n00:07:51.660 --> 00:07:53.001\nI don't know what kind of server is.\n\n182\n00:07:53.001 --> 00:07:55.114\nI don't know how much\nmemory that server has.\n\n183\n00:07:55.114 --> 00:07:58.797\nI just know that my instance has\na certain amount of CPUs in memory.\n\n184\n00:07:58.797 --> 00:08:03.897\nWell, when I I shut that instance down,\nit frees up the physical hardware and\n\n185\n00:08:03.897 --> 00:08:06.889\nAmazon then gives that\nto another customer.\n\n186\n00:08:06.889 --> 00:08:11.037\nSo, what if another customer\nspun up an instance and\n\n187\n00:08:11.037 --> 00:08:15.189\ntheir virtual storage was\naligned with the blocks or\n\n188\n00:08:15.189 --> 00:08:18.889\nsectors that my virtual\nstorage used to be on?\n\n189\n00:08:18.889 --> 00:08:22.293\nCould they run some undelete or\ndrive scrubbing software and\n\n190\n00:08:22.293 --> 00:08:24.639\npotentially see the data underlying it?\n\n191\n00:08:24.639 --> 00:08:26.181\nMaybe.\n\n192\n00:08:26.181 --> 00:08:31.764\nCould they run memory analysis RAM scans\nand potentially find residual data there?\n\n193\n00:08:31.764 --> 00:08:33.306\nMaybe, right.\n\n194\n00:08:33.306 --> 00:08:34.181\nIt's really hard.\n\n195\n00:08:34.181 --> 00:08:37.331\nIt would be a really\nsophisticated type of attack, but\n\n196\n00:08:37.331 --> 00:08:39.597\nAmazon doesn't take a chance on that.\n\n197\n00:08:39.597 --> 00:08:43.268\nWhen you take an instance down,\nwhen you delete a zone from route 53,\n\n198\n00:08:43.268 --> 00:08:46.631\nwhen you wipe out a database in RDS,\nbefore they assign that RAM or\n\n199\n00:08:46.631 --> 00:08:50.050\nthat hard drive storage to another\ncustomer, they zero it out.\n\n200\n00:08:50.050 --> 00:08:56.030\nThey actually do an erase on that data\nbefore they provision it to anybody else.\n\n201\n00:08:56.030 --> 00:09:00.066\nSo, when you release that instance,\nwhen you terminate an instance and\n\n202\n00:09:00.066 --> 00:09:04.514\nit gets deleted, that storage is not\nimmediately go back into Amazon's pool.\n\n203\n00:09:04.514 --> 00:09:05.431\nIt gets scrubbed.\n\n204\n00:09:05.431 --> 00:09:07.390\nThey do a great job with that.\n\n205\n00:09:07.390 --> 00:09:11.389\nAnd not just that, but\neven the virtual machine isolation, right?\n\n206\n00:09:11.389 --> 00:09:15.249\nAmazon, all this stuff, when we're\nrunning EC2s is really running on top of\n\n207\n00:09:15.249 --> 00:09:17.306\nan open-source hypervisor called Xen.\n\n208\n00:09:17.306 --> 00:09:21.038\nAnd in Xen,\nit's doing isolation between the Vms, so\n\n209\n00:09:21.038 --> 00:09:23.972\npeople can't do RAM jumping between VMs.\n\n210\n00:09:23.972 --> 00:09:28.254\nAnd there have been several governmental\nagencies, like the CIA, that have done\n\n211\n00:09:28.254 --> 00:09:32.431\nanalyses on these and determined that\nit's a very, very suitable partition.\n\n212\n00:09:32.431 --> 00:09:37.224\nThis data is separated and protected, so\nyou're not at risk of one customer jumping\n\n213\n00:09:37.224 --> 00:09:41.557\nover into your space, or even you\njumping into another customer's space.\n\n214\n00:09:41.557 --> 00:09:46.046\nYou might have an attacker that's running\na VM right on the same physical hardware,\n\n215\n00:09:46.046 --> 00:09:50.029\nright next to your VM, and they're\neffectively invisible to each other,\n\n216\n00:09:50.029 --> 00:09:52.514\nright, completely protected and isolated.\n\n217\n00:09:52.514 --> 00:09:56.500\nThat's some of the security\nthat Amazon provides.\n\n218\n00:09:56.500 --> 00:09:57.200\nVery, very nice.\n\n219\n00:09:57.200 --> 00:09:58.322\nThey provide a lot of services, Don,\n\n220\n00:09:58.322 --> 00:09:59.805\nand they do it very well,\naccording to you so far.\n\n221\n00:09:59.805 --> 00:10:00.381\n[LAUGH] According to me.\n\n222\n00:10:00.381 --> 00:10:04.720\n[LAUGH] According to Don, these are\nobviously the the godsends that we've been\n\n223\n00:10:04.720 --> 00:10:09.306\nwaiting for for our infrastructure, but\nthey also provide a lot more stuff.\n\n224\n00:10:09.306 --> 00:10:11.098\nright.\nCooling is another one of the things\n\n225\n00:10:11.098 --> 00:10:11.681\nthey provide?\n\n226\n00:10:11.681 --> 00:10:13.652\nYeah, I mentioned air conditioning, and\n\n227\n00:10:13.652 --> 00:10:16.555\nif you're thinking in terms of\nyour office air conditioning,\n\n228\n00:10:16.555 --> 00:10:19.806\nthat's not even close to the type of\ncooling that a data center needs.\n\n229\n00:10:19.806 --> 00:10:20.914\nWhen you have a data center,\n\n230\n00:10:20.914 --> 00:10:24.051\nyou have rows and rows of servers and you\nhave hot aisles and you have cool aisles,\n\n231\n00:10:24.051 --> 00:10:26.780\nand there's a lot of planning and\nengineering that goes into that.\n\n232\n00:10:26.780 --> 00:10:30.390\nYou have chillers and\nblowers and air-handlers and\n\n233\n00:10:30.390 --> 00:10:31.740\nall these different components,\n\n234\n00:10:31.740 --> 00:10:35.820\nand they are at a very high grade of\nequipment, really expensive stuff.\n\n235\n00:10:35.820 --> 00:10:37.220\nWell, Amazon deals with all that.\n\n236\n00:10:37.220 --> 00:10:39.161\nWe don't have to worry about that, right?\n\n237\n00:10:39.161 --> 00:10:40.889\nThat's part of the infrastructure.\n\n238\n00:10:40.889 --> 00:10:46.223\nYou hear Amazon referred to as a IAAS,\na PAAS, a SAAS.\n\n239\n00:10:46.223 --> 00:10:49.061\nRight?\nSo, IAAS is infrastructure as a service,\n\n240\n00:10:49.061 --> 00:10:53.030\nand infrastructure's referring to\nthat hardware under the hood of\n\n241\n00:10:53.030 --> 00:10:56.928\nthe software that you use and\nthis stuff, this air conditioning,\n\n242\n00:10:56.928 --> 00:11:00.340\nthe UPSs the generators,\nthe network operation center,\n\n243\n00:11:00.340 --> 00:11:04.472\nall that stuff kind of falls under\nthe infrastructure as a serve side.\n\n244\n00:11:04.472 --> 00:11:08.722\nIf hard drive fails in your server,\nyou usually don't even know it, right?\n\n245\n00:11:08.722 --> 00:11:12.514\nThey respond, they replace the drive, they\nget it back up and running and healthy.\n\n246\n00:11:12.514 --> 00:11:13.347\nYou never even saw it.\n\n247\n00:11:13.347 --> 00:11:15.514\nYou just know your virtual machine's\nstill running and it's happy.\n\n248\n00:11:15.514 --> 00:11:17.930\nAnd that's really the glory\nof using a service like this.\n\n249\n00:11:17.930 --> 00:11:21.846\nAnd that's the security they're\nproviding and encompassing for us.\n\n250\n00:11:21.846 --> 00:11:24.470\nSo, the next topic we have to cover.\n\n251\n00:11:24.470 --> 00:11:25.320\nAnd this is my favorite,\n\n252\n00:11:25.320 --> 00:11:29.350\nthis is why I would definitely go to\nthe cloud, is hardware redundancy, right?\n\n253\n00:11:29.350 --> 00:11:32.346\nI don't have to keep a bunch of hot\nsomethings sitting around waiting for\n\n254\n00:11:32.346 --> 00:11:33.140\nsomething to die.\n\n255\n00:11:33.140 --> 00:11:35.555\nThey take care of that for\nme, they handle that.\n\n256\n00:11:35.555 --> 00:11:37.639\nA drive dies, they work it out.\n\n257\n00:11:37.639 --> 00:11:41.573\nYeah, hard drives,\npower supplies, network adapters,\n\n258\n00:11:41.573 --> 00:11:45.515\nnothing that you're running\non is not redundant, right.\n\n259\n00:11:45.515 --> 00:11:46.556\nEverything has redundancy.\n\n260\n00:11:46.556 --> 00:11:49.931\nNow, there are some services\nthey offer like with S3.\n\n261\n00:11:49.931 --> 00:11:52.122\nWhen you do S3 storage,\nand even some EC2 systems,\n\n262\n00:11:52.122 --> 00:11:55.550\nwhere you can do what's called\nreduced redundancy storage.\n\n263\n00:11:55.550 --> 00:11:57.010\nAnd when you do that, it's cheaper.\n\n264\n00:11:57.010 --> 00:11:58.360\nYou save some money.\n\n265\n00:11:58.360 --> 00:11:59.960\nBut on the reduced redundancy storage,\n\n266\n00:11:59.960 --> 00:12:03.680\nif a hard drive fails, you'll actually\nsee it, your data goes offline.\n\n267\n00:12:03.680 --> 00:12:07.119\nBut with reduced redundancy they'll\nrestore it, they'll put it back,\n\n268\n00:12:07.119 --> 00:12:10.847\nit'll come back and be healthy, but\nit'll just be offline during the repair.\n\n269\n00:12:10.847 --> 00:12:14.655\nBut the normal storage, the regular\nEBS and stuff like that that we use,\n\n270\n00:12:14.655 --> 00:12:18.222\nif there's a hard drive that fails there,\nyou don't even notice.\n\n271\n00:12:18.222 --> 00:12:20.183\nIt's all redundant under the hood, and\n\n272\n00:12:20.183 --> 00:12:22.556\ntheir people respond to\nthat failed hard drive.\n\n273\n00:12:22.556 --> 00:12:26.712\nSo we don't have to worry about server\nwarranties, calling in a ticket,\n\n274\n00:12:26.712 --> 00:12:27.660\nall that stuff.\n\n275\n00:12:27.660 --> 00:12:29.790\nIt doesn't matter how much you\nlike Dell or HP or Lenovo,\n\n276\n00:12:29.790 --> 00:12:33.010\nIBM, whoever it is you're buying your\nservice from, it doesn't really matter.\n\n277\n00:12:33.010 --> 00:12:37.800\nNo matter how much you love that company,\neverybody hates doing a support call.\n\n278\n00:12:37.800 --> 00:12:39.889\nI do.\nI absolutely hate it.\n\n279\n00:12:39.889 --> 00:12:42.644\nI know with DELL I have the little hotline\nI can call to get an engineer, and\n\n280\n00:12:42.644 --> 00:12:45.722\neven with that, I still don't like to call\nthem because it's just such a hassle.\n\n281\n00:12:45.722 --> 00:12:46.764\nDid you update the firmware, Don?\n\n282\n00:12:46.764 --> 00:12:48.681\n[LAUGH] Did you reboot the server\nto get blah, blah, blah?\n\n283\n00:12:48.681 --> 00:12:55.264\n[LAUGH] And so with Amazon, they just take\ncare of it, and it is fully redundant.\n\n284\n00:12:55.264 --> 00:12:57.568\nThey have their own\nservers they've designed,\n\n285\n00:12:57.568 --> 00:13:00.722\nthey actually have batteries built\ninto the servers themselves.\n\n286\n00:13:00.722 --> 00:13:03.014\nThey kind of each have\ntheir own individual UPS.\n\n287\n00:13:03.014 --> 00:13:06.290\nIf a server fails, they just move\nyour instance over to another server.\n\n288\n00:13:06.290 --> 00:13:08.380\nIf a data center fails and\n\n289\n00:13:08.380 --> 00:13:12.080\nyou've got it configured correctly, it'll\njust come up in another availability zone.\n\n290\n00:13:12.080 --> 00:13:15.514\nIt's actually really stable and\nwe don't have to worry about that design.\n\n291\n00:13:15.514 --> 00:13:16.765\nThat's kinda the key lesson there.\n\n292\n00:13:16.765 --> 00:13:18.014\nVery awesome.\nVery awesome.\n\n293\n00:13:18.014 --> 00:13:20.780\nHardware redundancy's a big deal.\n\n294\n00:13:20.780 --> 00:13:23.022\nAlso hypervisor security\nis also a big deal, and\n\n295\n00:13:23.022 --> 00:13:25.710\nit is also something that\nAmazon provides for us, right?\n\n296\n00:13:25.710 --> 00:13:29.318\nYeah, and that goes back to what I\nmentioned earlier with the virtual machine\n\n297\n00:13:29.318 --> 00:13:30.323\nisolation, right.\n\n298\n00:13:30.323 --> 00:13:33.470\nThat's a key piece that any\nhypervizer out there has to provide.\n\n299\n00:13:33.470 --> 00:13:37.400\nSo if you're running VMware, like ESX,\nif you're running Citrix's version of Xen\n\n300\n00:13:37.400 --> 00:13:39.740\nserver, if you're running\nMicrosoft's HyperV, all of those,\n\n301\n00:13:39.740 --> 00:13:41.470\nthey've got to provide that isolation.\n\n302\n00:13:41.470 --> 00:13:42.980\nBut it's even more important for\n\n303\n00:13:42.980 --> 00:13:45.860\nAmazon, because you've got more than\none customer that's laid out there.\n\n304\n00:13:45.860 --> 00:13:49.389\nBut on top of that, you've got\nmore than just the isolation side.\n\n305\n00:13:49.389 --> 00:13:52.055\nYou gotta keep the underlying\nhypervisor up to date right?\n\n306\n00:13:52.055 --> 00:13:53.556\nI said Amazon's running Xen.\n\n307\n00:13:53.556 --> 00:13:56.414\nWell, Xen typically runs on top of Linux,\nand so\n\n308\n00:13:56.414 --> 00:14:01.298\nthat means somewhere under the hood of all\nthis stuff, there's a bunch of physical\n\n309\n00:14:01.298 --> 00:14:06.184\nhardware running a Linux operating system,\nrunning Xen and your EC2 instances,\n\n310\n00:14:06.184 --> 00:14:10.700\nyour RDS database instances,\nthey're all running on top of that, right.\n\n311\n00:14:10.700 --> 00:14:12.310\nSo who's updating those?\n\n312\n00:14:12.310 --> 00:14:14.420\nWho's updating those hypervisor servers?\n\n313\n00:14:14.420 --> 00:14:16.581\nAnd if they have to reboot\na hypervisor server,\n\n314\n00:14:16.581 --> 00:14:18.806\nwho's making sure it\ndoesn't impact your VMs.\n\n315\n00:14:18.806 --> 00:14:20.764\nWell, its not you, it's Amazon.\n\n316\n00:14:20.764 --> 00:14:21.640\nAmazon's doing that.\n\n317\n00:14:21.640 --> 00:14:23.681\nThey take care of that underlying\nhypervisor architecture.\n\n318\n00:14:23.681 --> 00:14:26.487\nSo for some of you, well,\nprobably not most of you guys,\n\n319\n00:14:26.487 --> 00:14:29.233\nbecause most of you have worked\nwith AWS a while, but for\n\n320\n00:14:29.233 --> 00:14:32.639\nsome of you this might be the first\ntime you have heard mention of Xen.\n\n321\n00:14:32.639 --> 00:14:34.978\nYou might not even know the hypervisor\nthat's under the hood, and\n\n322\n00:14:34.978 --> 00:14:36.645\nreally at the end of the day,\nwhat do you care?\n\n323\n00:14:36.645 --> 00:14:38.223\nCuz its not like you can see it.\n\n324\n00:14:38.223 --> 00:14:39.097\nIt's not like you can configure it.\n\n325\n00:14:39.097 --> 00:14:40.972\nIt's all invisible to you.\n\n326\n00:14:40.972 --> 00:14:42.015\nBut it is there.\n\n327\n00:14:42.015 --> 00:14:43.931\nAnd that's fully managed by Amazon.\n\n328\n00:14:43.931 --> 00:14:45.014\nVery cool.\n\n329\n00:14:45.014 --> 00:14:48.222\nDon, do they do any firewalling for us?\n\n330\n00:14:48.222 --> 00:14:48.806\nYeah.\n\n331\n00:14:48.806 --> 00:14:52.300\nThat's one of the additional\nsecurity features they have,\n\n332\n00:14:52.300 --> 00:14:54.639\nwhen we go beyond the hardware, right.\n\n333\n00:14:54.639 --> 00:14:56.799\nWhen we go beyond the physical\ninfrastructure, and\n\n334\n00:14:56.799 --> 00:14:59.015\nwe start getting into some\nof the advanced features.\n\n335\n00:14:59.015 --> 00:15:01.902\nA little bit later in the episode,\nI'll run down kind of some neat\n\n336\n00:15:01.902 --> 00:15:04.895\nstuff that they provide, but\nfirewalling is one of the key pieces,\n\n337\n00:15:04.895 --> 00:15:07.386\nbecause normally that would\nbe hardware to us, right.\n\n338\n00:15:07.386 --> 00:15:09.120\nI'd say okay well I'm going to have a DMZ.\n\n339\n00:15:09.120 --> 00:15:11.139\nI'm going to have some servers\nthat are exposed to the internet.\n\n340\n00:15:11.139 --> 00:15:14.963\nI need to go and get a CISCO ASA or\na Juniper SSG or something like that, and\n\n341\n00:15:14.963 --> 00:15:18.413\nthrow it front of my servers, so\nI can filter traffic coming to and\n\n342\n00:15:18.413 --> 00:15:19.515\nfrom the Internet.\n\n343\n00:15:19.515 --> 00:15:22.181\nWell, Amazon, it's two sided, right?\n\n344\n00:15:22.181 --> 00:15:24.722\nOne is a value to the customer.\n\n345\n00:15:24.722 --> 00:15:26.097\nThey provide firewalling.\n\n346\n00:15:26.097 --> 00:15:30.017\nAnd so, you don't have to put a hardware\nfirewall in there, you can use theirs,\n\n347\n00:15:30.017 --> 00:15:33.724\nwhich they manage, and it's nice,\nright, so you've got that function.\n\n348\n00:15:33.724 --> 00:15:35.930\nBut I say it's a double sided feature.\n\n349\n00:15:35.930 --> 00:15:39.460\nThe one side that benefits us is that they\ngive us basically firewalls for free.\n\n350\n00:15:39.460 --> 00:15:42.346\nThe other side that benefits\nthem is at the end of the day,\n\n351\n00:15:42.346 --> 00:15:44.222\nthey don't trust you as a customer.\n\n352\n00:15:44.222 --> 00:15:46.763\nThey trust you to pay your bill, right?\n\n353\n00:15:46.763 --> 00:15:49.121\nBut they don't trust you\nto secure your own servers.\n\n354\n00:15:49.121 --> 00:15:53.118\nYou could go and do something really\nstupid on your server and create a system\n\n355\n00:15:53.118 --> 00:15:57.179\nthat is extremely vulnerable, and they\nneed to be able to take action to block\n\n356\n00:15:57.179 --> 00:16:01.050\nthat server off to stop it from impacting\nany other Any other customers and\n\n357\n00:16:01.050 --> 00:16:04.445\nby providing that firewall service,\nthey're able to do that.\n\n358\n00:16:04.445 --> 00:16:05.600\nSo it's kind of a win-win.\n\n359\n00:16:05.600 --> 00:16:09.600\nWe get a free firewall, they get a way to\ncontrol rogue systems on their network.\n\n360\n00:16:09.600 --> 00:16:12.710\nBut it is a very valuable service and\n\n361\n00:16:12.710 --> 00:16:16.260\nthe best part in my opinion is I\ndon't have to buy it or set it up.\n\n362\n00:16:16.260 --> 00:16:19.510\nI just, well you do have to set it\nup a little bit, you have to go and\n\n363\n00:16:19.510 --> 00:16:23.260\nopen up ports and things but\nwe'll see that later on in the series.\n\n364\n00:16:23.260 --> 00:16:25.911\nBut for\nthe most part it's taken care of for us,\n\n365\n00:16:25.911 --> 00:16:27.230\nand it's one less thing to worry about.\n\n366\n00:16:27.230 --> 00:16:27.854\nThat's very awesome.\n\n367\n00:16:27.854 --> 00:16:30.860\nObviously AWS is providing us\na lot of different services.\n\n368\n00:16:30.860 --> 00:16:33.400\nActually we just rattled off\nquite a laundry list of different\n\n369\n00:16:33.400 --> 00:16:36.020\nsecurity features that\nthey are enabling for us.\n\n370\n00:16:36.020 --> 00:16:40.110\nBut Don, when we started this talk we were\nsaying how we have some responsibility\n\n371\n00:16:40.110 --> 00:16:44.670\nas an end-user, someone who is taking\nadvantage of these services, and security.\n\n372\n00:16:44.670 --> 00:16:45.930\nWe need to do some securing.\n\n373\n00:16:45.930 --> 00:16:49.757\nYou make it sound like there's\nnothing that needs to be touched.\n\n374\n00:16:49.757 --> 00:16:51.341\nWe covered just about everything.\n\n375\n00:16:51.341 --> 00:16:54.999\nThis is really important for the exam\nbecause in all the marketing material,\n\n376\n00:16:54.999 --> 00:16:58.374\nthe whole promotion is AWS makes you\nnot have to worry about your servers\n\n377\n00:16:58.374 --> 00:16:59.007\never again.\n\n378\n00:16:59.007 --> 00:17:01.426\nAnd we're halfway through this episode and\n\n379\n00:17:01.426 --> 00:17:04.507\neverything I've said is great\nstuff that Amazon does.\n\n380\n00:17:04.507 --> 00:17:06.799\nBut you need to understand the limits.\n\n381\n00:17:06.799 --> 00:17:10.632\nUnderstand the things\nthat Amazon does not do.\n\n382\n00:17:10.632 --> 00:17:12.466\nFor many of Amazon's services.\n\n383\n00:17:12.466 --> 00:17:14.341\nWell, they're kind of a mixed platform.\n\n384\n00:17:14.341 --> 00:17:19.550\nYou'll see a lot of IAAS and\nPAAS functions kind of under the hood.\n\n385\n00:17:19.550 --> 00:17:22.160\nBut for the most part, Amazon is IAAS,\ninfrastructure as a service.\n\n386\n00:17:22.160 --> 00:17:26.868\nIn other words, they're gonna take\ncare of the infrastructure and\n\n387\n00:17:26.868 --> 00:17:31.091\nit's up to you to take care of\nthe platform and the software.\n\n388\n00:17:31.091 --> 00:17:33.423\nNow, again,\nyou should be familiar with these terms.\n\n389\n00:17:33.423 --> 00:17:36.920\nThe infrastructure, that's really\nthe hardware under the hood and\n\n390\n00:17:36.920 --> 00:17:37.830\nnetwork access.\n\n391\n00:17:37.830 --> 00:17:40.550\nThe platform,\nthat's your operating system.\n\n392\n00:17:40.550 --> 00:17:41.310\nAnd then the software,\n\n393\n00:17:41.310 --> 00:17:45.820\nwell that's the programs that\nwe run on that operating system.\n\n394\n00:17:45.820 --> 00:17:49.870\nSo if I whip up an EC2 instance, for\nexample if I whip up a Linux instance.\n\n395\n00:17:49.870 --> 00:17:53.200\nJust a quick AMI and I fire it up.\n\n396\n00:17:53.200 --> 00:17:56.270\nWell that instance,\nit's up to me to go in and update it.\n\n397\n00:17:56.270 --> 00:17:59.260\nIt's up to me to create\nsecure user accounts on it.\n\n398\n00:17:59.260 --> 00:18:01.560\nIf I deploy Apache on it and\nbuild a web server,\n\n399\n00:18:01.560 --> 00:18:05.470\nit's up to me to make sure that\nApache is configured correctly.\n\n400\n00:18:05.470 --> 00:18:11.250\nIf I fire up Engine X or an FTP server,\nif I wanna configure it unsecurely I can.\n\n401\n00:18:11.250 --> 00:18:12.470\nThat's not a word is it?\n\n402\n00:18:12.470 --> 00:18:13.360\nInsecurely?\n\n403\n00:18:13.360 --> 00:18:13.890\nInsecurely.\n\n404\n00:18:13.890 --> 00:18:15.850\nIf I can configure it insecurely,\nit's insecure,\n\n405\n00:18:15.850 --> 00:18:16.815\nit's got some self-esteem issues.\n\n406\n00:18:16.815 --> 00:18:19.700\n[LAUGH] If I can figure it that way,\nthat's my prerogative.\n\n407\n00:18:19.700 --> 00:18:20.480\nI can do that, right?\n\n408\n00:18:20.480 --> 00:18:22.920\nI can make the service\nas weak as possible.\n\n409\n00:18:22.920 --> 00:18:26.200\nIt might get me in trouble with Amazon,\nthere does come a point, there's limits.\n\n410\n00:18:26.200 --> 00:18:28.470\nBut I'm responsible for that.\n\n411\n00:18:28.470 --> 00:18:31.216\nAnd it does vary a little\nbit from service to service.\n\n412\n00:18:31.216 --> 00:18:33.216\nSo when we talk about EC2.\n\n413\n00:18:33.216 --> 00:18:38.419\nEC2 is by far the most commonly used of\nthe various services from the AWS and\n\n414\n00:18:38.419 --> 00:18:42.230\nit is straight up IAAS,\ninfrastructure as a service.\n\n415\n00:18:42.230 --> 00:18:45.435\nThe platform and the operating\nsystem is completely managed by you.\n\n416\n00:18:45.435 --> 00:18:48.295\nIf you spin up a Windows machine,\nif you spin up a Linux machine,\n\n417\n00:18:48.295 --> 00:18:55.325\nAmazon does a great job of making sure\nthe AMI you're deploying is secured.\n\n418\n00:18:55.325 --> 00:18:59.685\nSo when you initially spin up that Windows\nserver, when you initially spin up that\n\n419\n00:18:59.685 --> 00:19:02.681\nRed Hat or Linux AMI from Amazon,\nit's gonna be secure.\n\n420\n00:19:02.681 --> 00:19:05.100\nBut then you can go and\nstart weakening it.\n\n421\n00:19:05.100 --> 00:19:06.850\nPulling out, not doing updates,\nthings like that.\n\n422\n00:19:06.850 --> 00:19:08.060\nThat's fully within your power.\n\n423\n00:19:08.060 --> 00:19:11.440\nIf you start deploying AMIs from\nthe marketplace, developed by\n\n424\n00:19:11.440 --> 00:19:15.240\nother people on Amazon, they may not even\nbe secure the moment you deploy them.\n\n425\n00:19:15.240 --> 00:19:16.650\nBut that's your problem.\n\n426\n00:19:16.650 --> 00:19:20.610\nAmazon is making sure that\nthe infrastructure is secure.\n\n427\n00:19:20.610 --> 00:19:24.610\nIt's up to you to take the platform and\nbeyond, and make it secure.\n\n428\n00:19:24.610 --> 00:19:26.080\nNow that's not always the case.\n\n429\n00:19:26.080 --> 00:19:29.484\nSome services, we will see these\nlater on in the series, like RDS,\n\n430\n00:19:29.484 --> 00:19:31.299\nthe Relational Database Service.\n\n431\n00:19:31.299 --> 00:19:36.173\nWhen I launch a database in RDS,\nlet me show you here on the console.\n\n432\n00:19:36.173 --> 00:19:38.551\nSo if i jump in here and\ni start to look, like here's EC2,\n\n433\n00:19:38.551 --> 00:19:40.120\nlike if I want to go fire up instances.\n\n434\n00:19:40.120 --> 00:19:43.380\nIf i go way down here, I got good old RDS.\n\n435\n00:19:43.380 --> 00:19:47.330\nSo if I go into RDS what I'm doing\nis I can fire up Databases, right?\n\n436\n00:19:47.330 --> 00:19:50.640\nI don't have any right now so\nI get my getting started screen.\n\n437\n00:19:50.640 --> 00:19:52.480\nAnd when I come in and\n\n438\n00:19:52.480 --> 00:19:56.510\ntell it I'm gonna fire up a database it's\njust gonna ask me a few basic questions.\n\n439\n00:19:56.510 --> 00:19:58.650\nI'll do, well, we'll stick with MySQL.\n\n440\n00:19:58.650 --> 00:20:01.180\nAnd you'll see I picked\nmy database software.\n\n441\n00:20:01.180 --> 00:20:03.860\nSo now we're starting\nto talk about software.\n\n442\n00:20:03.860 --> 00:20:04.870\nSoftware as a service.\n\n443\n00:20:04.870 --> 00:20:06.370\nRight?\nAnd so if I go through here and\n\n444\n00:20:06.370 --> 00:20:10.050\nstart to pick, I'll tell it what I want to\ndo, and I'll just go with the defaults.\n\n445\n00:20:10.050 --> 00:20:12.110\nRight?\nSo, we'll do general,\n\n446\n00:20:12.110 --> 00:20:16.470\nI probably don't want to do a large for\nthis one, but whatever, it doesn't matter.\n\n447\n00:20:16.470 --> 00:20:19.833\nSo, we'll go crazy.\nI'm gonna spin up this database and\n\n448\n00:20:19.833 --> 00:20:26.020\nI do have to give it a few settings like\na data, maybe this will be a Sales DB and\n\n449\n00:20:26.020 --> 00:20:30.591\nI'll create a username for\nit and I'll set a password.\n\n450\n00:20:30.591 --> 00:20:31.770\nLet's see if it complains about\nhow weak this password is.\n\n451\n00:20:31.770 --> 00:20:36.265\nOops, which I apparently didn't\neven- Which you can't type twice.\n\n452\n00:20:36.265 --> 00:20:39.630\n[LAUGH] Yeah, it's so weak,\nI can't even type it twice.\n\n453\n00:20:39.630 --> 00:20:41.860\nSo here we go, so\nI'm just whipping up this database server.\n\n454\n00:20:41.860 --> 00:20:43.472\nNow, what am I doing here, right?\n\n455\n00:20:43.472 --> 00:20:46.430\nI'm going into RDS and I'm telling\nyou hey, I need a MySQL database.\n\n456\n00:20:46.430 --> 00:20:48.510\nAnd here's the username and\npassword that I need for, and\n\n457\n00:20:48.510 --> 00:20:51.250\nI just need this database online and\nI want to throw data in it.\n\n458\n00:20:51.250 --> 00:20:52.760\nI don't understand servers.\n\n459\n00:20:52.760 --> 00:20:55.860\nI don't understand UPSs and\nnetwork redundancy.\n\n460\n00:20:55.860 --> 00:20:58.740\nI don't understand Linux,\ndon't know what it is.\n\n461\n00:20:58.740 --> 00:21:00.467\nI just need a database.\n\n462\n00:21:00.467 --> 00:21:03.730\nThis is something that a DB admin,\n\n463\n00:21:03.730 --> 00:21:08.466\nlike a DBA or a programmer,\na developer might do.\n\n464\n00:21:08.466 --> 00:21:12.546\nI want to deploy my PHP application and I\nneed to store some data in a database, but\n\n465\n00:21:12.546 --> 00:21:15.256\nI don't know how databases\nare built under the hood.\n\n466\n00:21:15.256 --> 00:21:16.966\nLet me just spin this up.\n\n467\n00:21:16.966 --> 00:21:20.716\nWhen I do this,\nthis is not software as a service.\n\n468\n00:21:20.716 --> 00:21:23.113\nI mean, well, I guess you could\nsort of look at it that way, but\n\n469\n00:21:23.113 --> 00:21:25.420\nthis is really platform as a service.\n\n470\n00:21:25.420 --> 00:21:29.370\nWhat they're doing is they're spinning\nup a physical hardware server\n\n471\n00:21:29.370 --> 00:21:30.690\nin the background, right.\n\n472\n00:21:30.690 --> 00:21:33.400\nYou saw in that one screen where I told\nI wanted 15 gigs of RAM, and all that.\n\n473\n00:21:33.400 --> 00:21:36.000\nSo it's a physical server,\na physical instance, right?\n\n474\n00:21:36.000 --> 00:21:38.280\nA virtual machine that's being fired up\nin the background on a physical server.\n\n475\n00:21:38.280 --> 00:21:42.940\nAnd then in that,\nthey're deploying an operating system.\n\n476\n00:21:42.940 --> 00:21:45.730\nI actually don't know what operating\nsystem it is, it never asked me.\n\n477\n00:21:45.730 --> 00:21:46.340\nIs it Linux?\n\n478\n00:21:46.340 --> 00:21:47.360\nIs it Windows?\n\n479\n00:21:47.360 --> 00:21:48.257\nI don't know, right?\n\n480\n00:21:48.257 --> 00:21:51.170\nI just told it the database I wanted.\n\n481\n00:21:51.170 --> 00:21:52.870\nI said I don't care what the OS is,\nI need mySQL.\n\n482\n00:21:52.870 --> 00:21:56.540\nAnd so it could have done it on Windows,\nit would suck if it did.\n\n483\n00:21:56.540 --> 00:22:00.640\nBut they could have done it, and\nthey could have done it on Linux also and\n\n484\n00:22:00.640 --> 00:22:02.090\nthen it deployed mySQL.\n\n485\n00:22:02.090 --> 00:22:05.880\nAnd they're actually probably was a screen\nwhere it asked me what version of mySQL,\n\n486\n00:22:05.880 --> 00:22:07.740\nbut I glanced over it\ndoing the defaults here,\n\n487\n00:22:07.740 --> 00:22:10.788\nso I don't even know what\nversion of mySQL it spun up.\n\n488\n00:22:10.788 --> 00:22:13.630\nNow, when it's done,\nI'll have a database instance, right?\n\n489\n00:22:13.630 --> 00:22:17.440\nAnd so, when I come in here,\ninto my RDS dashboard.\n\n490\n00:22:17.440 --> 00:22:22.369\nAnd I go into my instances I can\nsee I've got a MySQL database\n\n491\n00:22:22.369 --> 00:22:24.549\nright here called Sales.\n\n492\n00:22:24.549 --> 00:22:26.350\nAnd it's currently creating it.\n\n493\n00:22:26.350 --> 00:22:28.650\nAnd it whipped up A db.m3.\n\n494\n00:22:28.650 --> 00:22:30.799\nextra large server.\n\n495\n00:22:30.799 --> 00:22:35.674\nIt whipped it up in the us-east\nlittle VPC that I made.\n\n496\n00:22:35.674 --> 00:22:37.965\nSo it's in one particular zone.\n\n497\n00:22:37.965 --> 00:22:41.883\nBut if you look up here I've got Multi-AZ,\nright?\n\n498\n00:22:41.883 --> 00:22:44.060\nMultiple availability zones,\nit set it up for redundancy.\n\n499\n00:22:44.060 --> 00:22:47.260\nWell, that's nice.\n\n500\n00:22:47.260 --> 00:22:49.800\nNormally, I would have to\nspin up two Linux servers.\n\n501\n00:22:49.800 --> 00:22:51.090\nOne in each AZ.\n\n502\n00:22:51.090 --> 00:22:53.570\nAnd then I would have to install mySQL.\n\n503\n00:22:53.570 --> 00:22:56.550\nAnd then I'd have to go into mySQL and set\none as the master and one a read replica,\n\n504\n00:22:56.550 --> 00:22:57.600\nand I'd have to define that.\n\n505\n00:22:57.600 --> 00:22:59.466\nAnd I'd have to set up\nthat synchronization.\n\n506\n00:22:59.466 --> 00:23:02.458\nAnd if the master ever failed,\nI would have to go to the read replica and\n\n507\n00:23:02.458 --> 00:23:03.591\ntell it to become active.\n\n508\n00:23:03.591 --> 00:23:04.466\nWell, you know what?\n\n509\n00:23:04.466 --> 00:23:05.757\nThey did all that for me.\n\n510\n00:23:05.757 --> 00:23:07.690\nIt's all done.\n\n511\n00:23:07.690 --> 00:23:09.450\nIt's being done right now,\nactually, it's not done yet.\n\n512\n00:23:09.450 --> 00:23:12.240\nBut it's setting it up for\nme and all I have to do\n\n513\n00:23:12.240 --> 00:23:15.780\nis connect to the Sales database and\nI can start loading my data in it.\n\n514\n00:23:15.780 --> 00:23:16.340\nAll right?\n\n515\n00:23:16.340 --> 00:23:20.380\nIn this scenario, Amazon is securing and\nupdating the operating system.\n\n516\n00:23:20.380 --> 00:23:24.280\nI don't even I don't even know\nwhat operating system it is.\n\n517\n00:23:24.280 --> 00:23:26.410\nAnd they're securing and updating mySQL.\n\n518\n00:23:26.410 --> 00:23:29.970\nSo, when you configure this, we'll see\nit more on the RDS shows, but you can\n\n519\n00:23:29.970 --> 00:23:34.130\nactually set a maintenance window where\nthey'll do updates and you can stop them.\n\n520\n00:23:34.130 --> 00:23:36.050\nYou can say, I don't want updates and\n\n521\n00:23:36.050 --> 00:23:38.650\nnow you're weakening\nthe security of your system.\n\n522\n00:23:38.650 --> 00:23:40.216\nBut by default, Amazon is going further.\n\n523\n00:23:40.216 --> 00:23:44.382\nSo, understand that not all services\nfrom AWS are created equal.\n\n524\n00:23:44.382 --> 00:23:49.674\nSometimes we do get a lot of additional\nsecurity features, like this with RDS.\n\n525\n00:23:49.674 --> 00:23:51.279\nSometimes we don't.\n\n526\n00:23:51.279 --> 00:23:54.806\nIf you do the Dynamo DB,\nif you do some of the other ones,\n\n527\n00:23:54.806 --> 00:23:58.048\nlike in cloud front a lot\nof the streaming servers.\n\n528\n00:23:58.048 --> 00:24:00.696\nOr S3, the storage servers themselves.\n\n529\n00:24:00.696 --> 00:24:03.158\nYou never see Underlying OS.\n\n530\n00:24:03.158 --> 00:24:05.944\nYou just create your buckets and\nyou share the data, all right?\n\n531\n00:24:05.944 --> 00:24:08.343\nThat is a platform as a service.\n\n532\n00:24:08.343 --> 00:24:10.187\nAnd they provide a lot more there.\n\n533\n00:24:10.187 --> 00:24:13.813\nBut a lot of what you deploy is\na lot more dangerous than that.\n\n534\n00:24:13.813 --> 00:24:15.462\nFor example in EC2.\n\n535\n00:24:15.462 --> 00:24:18.319\nIn EC2,\nthey're just giving us the hardware.\n\n536\n00:24:18.319 --> 00:24:23.008\nAnd when I whip up an instance, like this\nLinux server right here that I whipped up.\n\n537\n00:24:23.008 --> 00:24:26.074\nSo this is just\na micro-instance that's up and\n\n538\n00:24:26.074 --> 00:24:29.533\nrunning, It's in us-east-1a,\nand that's it.\n\n539\n00:24:29.533 --> 00:24:30.879\nIt's only in one availability zone.\n\n540\n00:24:30.879 --> 00:24:32.900\nI don't have a copy of it anywhere else.\n\n541\n00:24:32.900 --> 00:24:34.084\nIt's up and it's healthy, right?\n\n542\n00:24:34.084 --> 00:24:37.911\nSo it seems good enough, but\nonce that instance is up,\n\n543\n00:24:37.911 --> 00:24:43.255\nAmazon turns it over to me, and I can\nnow do whatever I want with that system.\n\n544\n00:24:43.255 --> 00:24:47.389\nSo, if I go and remote into it, right?\n\n545\n00:24:47.389 --> 00:24:51.005\nSo I'm just connected into that instance,\nonce I'm there, for\n\n546\n00:24:51.005 --> 00:24:55.305\nthose of you that are big Linux users,\nI've got my little dollar sign there.\n\n547\n00:24:55.305 --> 00:24:57.628\nAnd that's letting me know that I'm root.\n\n548\n00:24:57.628 --> 00:25:02.063\nI can do things that are root\nlevel privilege on this system.\n\n549\n00:25:02.063 --> 00:25:06.149\nIf I start to jump in here and start to\nmess around with it, and, am I not root?\n\n550\n00:25:06.149 --> 00:25:06.777\nNo, no, no.\n\n551\n00:25:06.777 --> 00:25:07.843\nRoot is the hash.\n\n552\n00:25:07.843 --> 00:25:08.495\nShoot.\n\n553\n00:25:08.495 --> 00:25:09.934\nWell, you know what?\n\n554\n00:25:09.934 --> 00:25:12.209\nWe'll just, don't know my password.\n\n555\n00:25:12.209 --> 00:25:13.580\n[LAUGH] Don't know my password.\n\n556\n00:25:13.580 --> 00:25:16.621\nThat's right, well we can use sudo then,\nif I'm not root.\n\n557\n00:25:16.621 --> 00:25:20.893\nSo let's just do like a sudo yum update.\n\n558\n00:25:20.893 --> 00:25:25.537\nAnd there we go, so I did sudu,\nwhich is super user do.\n\n559\n00:25:25.537 --> 00:25:27.372\nSo I'm running something as a super user.\n\n560\n00:25:27.372 --> 00:25:29.762\nAnd it didn't even prompt me for\na password, right?\n\n561\n00:25:29.762 --> 00:25:31.551\nI'm already authenticated,\nI'm already doing it.\n\n562\n00:25:31.551 --> 00:25:35.706\nAnd do I even need to do that?\n\n563\n00:25:35.706 --> 00:25:38.540\nWell, it's a new instance so\nit's already got it.\n\n564\n00:25:38.540 --> 00:25:41.604\nWell there it goes, so\nit's telling me I need to be root, right?\n\n565\n00:25:41.604 --> 00:25:43.672\nSo, dollar sign is not root.\n\n566\n00:25:43.672 --> 00:25:44.229\nHash is.\n\n567\n00:25:44.229 --> 00:25:44.809\nHash is, yeah.\n\n568\n00:25:44.809 --> 00:25:45.862\n[LAUGH] So what do I say, for\n\n569\n00:25:45.862 --> 00:25:47.595\nthose of you that are big Linux users,\napparently I'm not one.\n\n570\n00:25:47.595 --> 00:25:49.266\n[LAUGH] But there we go.\n\n571\n00:25:49.266 --> 00:25:53.933\nSo you can see like, it didn't stop\nme from doing root commands, right?\n\n572\n00:25:53.933 --> 00:26:00.737\nSo if I want to do something stupid,\nlike sudo rm -rf /etc/*.\n\n573\n00:26:00.737 --> 00:26:01.503\nThat's a bad idea.\n\n574\n00:26:01.503 --> 00:26:04.636\nThat's probably a bad idea, I'm gonna\nwipe out all my configuration files and\n\n575\n00:26:04.636 --> 00:26:05.776\nreally hose this server up.\n\n576\n00:26:05.776 --> 00:26:10.197\nAnd I guess that's kind of an advantage of\nAWS is that this is a new install and so\n\n577\n00:26:10.197 --> 00:26:12.347\nif I blow this server up, what do I do?\n\n578\n00:26:12.347 --> 00:26:16.225\nI just delete the instance, or terminate\nit, and then spin up another one.\n\n579\n00:26:16.225 --> 00:26:19.705\nBut if this is a production instance,\nnow I've really got a problem, and\n\n580\n00:26:19.705 --> 00:26:22.192\nthey're not gonna stop me from doing that,\nright?\n\n581\n00:26:22.192 --> 00:26:26.231\nThey're not gonna stop you from weakening\nthis system, you're the customer.\n\n582\n00:26:26.231 --> 00:26:29.513\nYou're the customer, and they're giving\nyou the tools to be successful, and\n\n583\n00:26:29.513 --> 00:26:31.828\nyou can use those tools to not\nbe successful if you want.\n\n584\n00:26:31.828 --> 00:26:32.965\nSo we've gotta be careful with that.\n\n585\n00:26:32.965 --> 00:26:37.458\nThere's actually a number of services\nfrom them that do provide root access\n\n586\n00:26:37.458 --> 00:26:38.167\nlike this.\n\n587\n00:26:38.167 --> 00:26:41.463\nRDS, like I showed you a minute ago,\nthat's an example of when they don't.\n\n588\n00:26:41.463 --> 00:26:45.108\nWith RDS,\nthere is a Linux install under the hood.\n\n589\n00:26:45.108 --> 00:26:49.476\nWhen I go back here, and I go into\nmy EC2 dashboard on my instances,\n\n590\n00:26:49.476 --> 00:26:54.397\nI don't see anything other than this\none server that I spun up here, right?\n\n591\n00:26:54.397 --> 00:26:59.853\nBut I know that I've got another instance\nthat if I jump back over to RDS,\n\n592\n00:26:59.853 --> 00:27:05.935\nand I go to my instances here, I can see\nthis db-m3-large sitting right here,\n\n593\n00:27:05.935 --> 00:27:11.584\nso I know there's another instance,\nbut I can't get root access into it.\n\n594\n00:27:11.584 --> 00:27:14.458\nIf you go through the API, you actually\ncan open a shell on that system and\n\n595\n00:27:14.458 --> 00:27:15.228\npoke around on it.\n\n596\n00:27:15.228 --> 00:27:18.875\nThere's a few different ways to do it,\nbut you don't have root access on it, and\n\n597\n00:27:18.875 --> 00:27:21.034\nthat's because Amazon is managing it for\nyou.\n\n598\n00:27:21.034 --> 00:27:25.051\nSo be careful there that some\nsystems are stronger than others.\n\n599\n00:27:25.051 --> 00:27:27.093\nAmazon is managing more of\nthat aspect than others.\n\n600\n00:27:27.093 --> 00:27:30.204\nYeah, this is probably a very\ntestable little item right here.\n\n601\n00:27:30.204 --> 00:27:32.580\nIf you're running this or\nif you're running that,\n\n602\n00:27:32.580 --> 00:27:34.640\nwhat level of security\nis Amazon providing?\n\n603\n00:27:34.640 --> 00:27:37.787\nSo this is a really good place for\nyou to sit down, study,\n\n604\n00:27:37.787 --> 00:27:41.657\nmake sure you have those terms and\nobligations by Amazon under wraps in\n\n605\n00:27:41.657 --> 00:27:46.146\nthe old brain, stamped and ready to rock,\nbefore you sit in that testing booth.\n\n606\n00:27:46.146 --> 00:27:47.562\nYep, absolutely.\n\n607\n00:27:47.562 --> 00:27:50.046\nNow there is one other thing\nthat I do want to mention.\n\n608\n00:27:50.046 --> 00:27:51.528\nRegardless of which solution you do,\n\n609\n00:27:51.528 --> 00:27:54.133\nwhether you do one that gives you\nroot access, one that doesn't.\n\n610\n00:27:54.133 --> 00:27:56.756\nOne that is fully managed,\none that's not managed.\n\n611\n00:27:56.756 --> 00:28:00.682\nThere are some additional security\nfeatures that Amazon provides that do\n\n612\n00:28:00.682 --> 00:28:04.734\nsome really neat things that operate\nindependent of whether you want them or\n\n613\n00:28:04.734 --> 00:28:05.511\nnot, right?\n\n614\n00:28:05.511 --> 00:28:07.718\n[LAUGH] They're for your benefit but\n\n615\n00:28:07.718 --> 00:28:11.699\nAmazon does things like denial\nof service protection, right?\n\n616\n00:28:11.699 --> 00:28:15.131\nThey will identify when a denial\nof service attack is happening and\n\n617\n00:28:15.131 --> 00:28:16.737\nthey'll resolve it, right?\n\n618\n00:28:16.737 --> 00:28:20.797\nBecause normally what's gonna happen is an\nattacker is going to be targeting either\n\n619\n00:28:20.797 --> 00:28:24.647\nyour server specifically or the network\ninfrastructure between you and them.\n\n620\n00:28:24.647 --> 00:28:26.637\nWell, the network\ninfrastructure between you and\n\n621\n00:28:26.637 --> 00:28:29.011\nthe attacker is normally shared\nby other Amazon customers.\n\n622\n00:28:29.011 --> 00:28:30.800\nSo, they detect that, and they stop it.\n\n623\n00:28:30.800 --> 00:28:32.377\nIt benefits them to do that.\n\n624\n00:28:32.377 --> 00:28:35.721\nSo, denial of service protection,\nit's on, it's running.\n\n625\n00:28:35.721 --> 00:28:36.569\nYou can't turn it off.\n\n626\n00:28:36.569 --> 00:28:38.405\nThat's Amazon monitoring\ntheir own network.\n\n627\n00:28:38.405 --> 00:28:41.423\nThat's one of their built-in features.\n\n628\n00:28:41.423 --> 00:28:44.255\nSome of the other things we have,\nredundant routes, right?\n\n629\n00:28:44.255 --> 00:28:48.319\nOn the network side, Amazon uses multiple\nconnections to Internet backbones.\n\n630\n00:28:48.319 --> 00:28:50.391\nAnd so, if they're having\nany kind of backbone issue,\n\n631\n00:28:50.391 --> 00:28:51.988\nthey can just reroute you to another side.\n\n632\n00:28:51.988 --> 00:28:55.214\nThere's even multiple routes in\nbetween the availability zones.\n\n633\n00:28:55.214 --> 00:28:57.118\nAnd in between the different\nVPC's that you create.\n\n634\n00:28:57.118 --> 00:29:00.091\nThere's a lot of redundancy there,\nwe never have to worry about any of that.\n\n635\n00:29:00.091 --> 00:29:01.715\nThey take care of it.\n\n636\n00:29:01.715 --> 00:29:04.387\nIP spoofing restrictions.\n\n637\n00:29:04.387 --> 00:29:07.752\nWhen you whip up an instance,\nit's assigned an IP.\n\n638\n00:29:07.752 --> 00:29:10.754\nAnd it might be a static,\none of the elastic IPs that you assign or\n\n639\n00:29:10.754 --> 00:29:12.652\nit might just be one of the dynamic ones.\n\n640\n00:29:12.652 --> 00:29:15.809\nBut your host is only allowed\nto communicate with that IP.\n\n641\n00:29:15.809 --> 00:29:17.597\nIt's not allowed to\ncommunicate with any other IP.\n\n642\n00:29:17.597 --> 00:29:20.268\nThey actually do IP spoofing protection.\n\n643\n00:29:20.268 --> 00:29:24.439\nAnd they do that because what if another,\nlike an attacker brought up a VM on\n\n644\n00:29:24.439 --> 00:29:27.765\nthe hardware that you were on and\nstarted spoofing your IP?\n\n645\n00:29:27.765 --> 00:29:30.862\nWell they're in Amazon's system,\nin the data system already.\n\n646\n00:29:30.862 --> 00:29:32.023\nThat'd be pretty risky.\n\n647\n00:29:32.023 --> 00:29:36.086\nSo they're basically preventing IP\nspoofing and man in the middle attacks,\n\n648\n00:29:36.086 --> 00:29:39.649\nby locking those IPs down to\nthe instances as they're created, and\n\n649\n00:29:39.649 --> 00:29:41.790\nthat's not something you can turn off.\n\n650\n00:29:41.790 --> 00:29:44.445\nYou can ask them and\nbeg until you're blue in the face,\n\n651\n00:29:44.445 --> 00:29:48.393\nthey won't turn that off because it's\nprotecting you and the other customers.\n\n652\n00:29:48.393 --> 00:29:50.088\nLet's see,\nI feel like I'm leaving some things off.\n\n653\n00:29:50.088 --> 00:29:52.410\nSMTP limits, that's a big one.\n\n654\n00:29:52.410 --> 00:29:54.867\nIf you've ever tried to bring\nan email server up in AWS,\n\n655\n00:29:54.867 --> 00:29:57.448\nyou've run into this fast,\na website that sends emails.\n\n656\n00:29:57.448 --> 00:29:58.796\nI know I've done it.\n\n657\n00:29:58.796 --> 00:30:02.580\nThey actually limit the amount of SMTP\nmessages you can generate per day.\n\n658\n00:30:02.580 --> 00:30:06.983\nAnd if you actually have a mail server,\nif you actually have a need to generate\n\n659\n00:30:06.983 --> 00:30:10.979\na large quantity of emails,\nyou can do a support ticket with them, and\n\n660\n00:30:10.979 --> 00:30:13.848\nwhat they do is they'll\nbump the limit up for you.\n\n661\n00:30:13.848 --> 00:30:16.732\nAnd they put some special rules\nin place so they can monitor for\n\n662\n00:30:16.732 --> 00:30:17.794\nwhen you exceed that.\n\n663\n00:30:17.794 --> 00:30:20.024\nSo that they are still\nkeeping an eye on you, right?\n\n664\n00:30:20.024 --> 00:30:22.902\nBut they don't want people\nsending spam out of AWS.\n\n665\n00:30:22.902 --> 00:30:25.411\nThey don't wanna get their\nIPs on the spam block list.\n\n666\n00:30:25.411 --> 00:30:29.491\nSo they control that, they watch it and\nif your machine gets infected,\n\n667\n00:30:29.491 --> 00:30:32.213\nwith a virus or\nan attacker just penetrates it.\n\n668\n00:30:32.213 --> 00:30:34.420\nYou don't have to worry about them\nturning you into some kind of spam bot.\n\n669\n00:30:34.420 --> 00:30:36.184\nSo that's another nice little feature.\n\n670\n00:30:36.184 --> 00:30:36.951\nVery cool.\n\n671\n00:30:36.951 --> 00:30:40.447\nNow Don, we talked about some of\nthe things that we need to worry about\n\n672\n00:30:40.447 --> 00:30:43.176\nourselves and\nwe've shown what Amazon does as well.\n\n673\n00:30:43.176 --> 00:30:46.629\nSo letting me know that I do need to\ntake some responsibility as far as\n\n674\n00:30:46.629 --> 00:30:50.038\nsecurity goes starts gearing my\nmind toward pen testing, right?\n\n675\n00:30:50.038 --> 00:30:53.679\nBecause if I've got servers here and\nI'm responsible for them, I've gotta\n\n676\n00:30:53.679 --> 00:30:57.505\npenetration test them, I gotta make\nsure they are as solid as they can be.\n\n677\n00:30:57.505 --> 00:31:00.110\nCan I do this with\nthe AWS servers as well?\n\n678\n00:31:00.110 --> 00:31:03.225\nSo one of the things that I said back in\nthe very beginning of the episode was,\n\n679\n00:31:03.225 --> 00:31:06.245\nif Amazon told me they were providing\n100% of my security features and\n\n680\n00:31:06.245 --> 00:31:07.628\nI didn't have to worry about it.\n\n681\n00:31:07.628 --> 00:31:09.276\nI'd still worry about it, right?\n\n682\n00:31:09.276 --> 00:31:11.568\nAnd that's where penetration\ntesting comes in is,\n\n683\n00:31:11.568 --> 00:31:13.294\nyou want to double check your servers.\n\n684\n00:31:13.294 --> 00:31:16.497\nYou want to scan your servers and check\nto make sure they are actually secure.\n\n685\n00:31:16.497 --> 00:31:18.611\nAmazon is telling me\nthere's redundant routes.\n\n686\n00:31:18.611 --> 00:31:20.584\nThey're telling me there\nis IP spoofing protection.\n\n687\n00:31:20.584 --> 00:31:22.348\nBut, do I really know that?\n\n688\n00:31:22.348 --> 00:31:23.440\nMaybe I wanna test it.\n\n689\n00:31:23.440 --> 00:31:26.761\nSo the temptation may be there for\nyou to do pen testing on your server.\n\n690\n00:31:26.761 --> 00:31:28.154\nBe very careful, all right?\n\n691\n00:31:28.154 --> 00:31:30.742\nIt's actually in the Amazon terms of\nservice that you're not allowed to pen\n\n692\n00:31:30.742 --> 00:31:31.520\ntest your own server.\n\n693\n00:31:31.520 --> 00:31:33.564\nBut that doesn't mean you can't do it.\n\n694\n00:31:33.564 --> 00:31:36.702\nThe reason they put that in there is\nif you start pen testing your server,\n\n695\n00:31:36.702 --> 00:31:39.647\nthey're gonna view it as an attack and\nthey're gonna block it off.\n\n696\n00:31:39.647 --> 00:31:41.783\nSo your pen test isn't gonna work, right?\n\n697\n00:31:41.783 --> 00:31:43.872\nOr I guess technically,\nyou could say that it did work, right?\n\n698\n00:31:43.872 --> 00:31:44.964\nThat it was protected.\n\n699\n00:31:44.964 --> 00:31:47.332\nBut if you actually\nwanna scan your system.\n\n700\n00:31:47.332 --> 00:31:50.769\nAll that they ask is that you open\na support ticket with them first.\n\n701\n00:31:50.769 --> 00:31:55.499\nOpen a support ticket and say hey, I'd\nlike to run a security scan on my system.\n\n702\n00:31:55.499 --> 00:32:00.049\nI'm gonna be coming from this IP, you need\nto tell them the IP you're coming from,\n\n703\n00:32:00.049 --> 00:32:02.000\nand I'm gonna scan it at this time.\n\n704\n00:32:02.000 --> 00:32:04.160\nAnd then wait for their approval,\nthey'll give you approval.\n\n705\n00:32:04.160 --> 00:32:05.926\nIf you just submit the ticket and\nthen do the scan,\n\n706\n00:32:05.926 --> 00:32:07.620\nthen you might as well\nnot have done the ticket.\n\n707\n00:32:07.620 --> 00:32:11.077\nBut if you get their approval,\nthen they'll open up a window,\n\n708\n00:32:11.077 --> 00:32:13.239\na time where they allow your IP to scan.\n\n709\n00:32:13.239 --> 00:32:17.881\nAnd it's actually pretty nice because\nthey'll disable some of the Amazon checks\n\n710\n00:32:17.881 --> 00:32:21.389\nthat happen on that IP to let you\nget a true scan of that server.\n\n711\n00:32:21.389 --> 00:32:26.342\nSo, definitely be aware of that,\neven if you're pen testing from another\n\n712\n00:32:26.342 --> 00:32:30.048\ninstance in the same VPC,\nthey're still scanning it.\n\n713\n00:32:30.048 --> 00:32:34.589\nAll traffic in a VPC, even traffic going\nbetween two hosts in the same VPC,\n\n714\n00:32:34.589 --> 00:32:37.200\nstill pass through the firewall service.\n\n715\n00:32:37.200 --> 00:32:39.127\nAmazon still sees it.\n\n716\n00:32:39.127 --> 00:32:42.042\nSo even though our hosts think they're on\nthe same network and talk to each other\n\n717\n00:32:42.042 --> 00:32:44.708\ndirectly, they're actually going\nthrough Amazon security filters.\n\n718\n00:32:44.708 --> 00:32:47.842\nSo you've always got to open a support\nteam with them first, really important.\n\n719\n00:32:47.842 --> 00:32:48.608\nAwesome stuff.\n\n720\n00:32:48.608 --> 00:32:51.581\nThank you so much Don, for\nexplaining some of this AWS security.\n\n721\n00:32:51.581 --> 00:32:55.151\nWhat they're responsible for, what we're\nresponsible for, how that mixes up,\n\n722\n00:32:55.151 --> 00:32:58.268\nwhere it is and when it happens,\nthat's important stuff for us to know.\n\n723\n00:32:58.268 --> 00:33:00.613\nIs there anything else we need to\ncover before we close the show?\n\n724\n00:33:00.613 --> 00:33:01.263\nI think that's it.\n\n725\n00:33:01.263 --> 00:33:04.025\nI wanna move onto some other topics\nwhere we'll take a look at some of\n\n726\n00:33:04.025 --> 00:33:07.239\nthe actual security features,\nespecially identity and access management.\n\n727\n00:33:07.239 --> 00:33:09.399\nBut that's for another show.\n\n728\n00:33:09.399 --> 00:33:11.488\nYeah, time is short and fleeting.\n\n729\n00:33:11.488 --> 00:33:13.207\nSo that being said, we'll go ahead and\nclose this show down.\n\n730\n00:33:13.207 --> 00:33:14.367\nThanks for watching.\n\n731\n00:33:14.367 --> 00:33:15.923\nI've been your host Daniel Lowery.\n\n732\n00:33:15.923 --> 00:33:16.759\nAnd I'm Don Pezet.\n\n733\n00:33:16.759 --> 00:33:18.547\nAnd we'll see you next time.\n\n734\n00:33:18.547 --> 00:33:24.300\n[SOUND]\n\n",
          "vimeoId": "146639216"
        },
        {
          "description": "In this episode, Don and Daniel explain what Identity and Access Management(IAM) is and the different components therein. They start by explaining the different types of credentials that can be used with IAM; things like passwords, access keys, key pairs, and x.509 certificates, then quickly touching on IAM users, groups, roles and policies. Then they discuss when you would use one form of access over the others and even when NOT to use an access type.",
          "length": "1983",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/amazon-acsa/amazon-acsa-1-2-iam_components-111615-1.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/amazon-acsa/amazon-acsa-1-2-iam_components-111615-1-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/amazon-acsa/amazon-acsa-1-2-iam_components-111615-1-sm.jpg",
          "title": "IAM Components",
          "transcript": "WEBVTT\n\n1\n00:00:00.000 --> 00:00:10.000\n[MUSIC]\n\n2\n00:00:11.887 --> 00:00:13.247\nAll right, greetings everyone.\n\n3\n00:00:13.247 --> 00:00:16.253\nWelcome to another exciting\nepisode of ITProTV.\n\n4\n00:00:16.253 --> 00:00:17.810\nI'm your host, Daniel Lowrie.\n\n5\n00:00:17.810 --> 00:00:20.770\nAnd in this episode we're\ngonna talk about the IAM.\n\n6\n00:00:20.770 --> 00:00:22.028\nThat's right.\n\n7\n00:00:22.028 --> 00:00:26.638\nIt is the Identity and\nAccess Management for Amazon Web Services,\n\n8\n00:00:26.638 --> 00:00:30.357\nspecifically looking at\nthe SysOps certification.\n\n9\n00:00:30.357 --> 00:00:34.811\nAnd joining me in the studio today to help\nus work through this little hairy bit of\n\n10\n00:00:34.811 --> 00:00:37.150\na topic is none other than Mr. Don Pezet.\n\n11\n00:00:37.150 --> 00:00:38.251\nWelcome to the show, Don.\n\n12\n00:00:38.251 --> 00:00:40.662\n>> All right, Daniel, thanks for\nhaving me back on the show and\n\n13\n00:00:40.662 --> 00:00:43.407\nI'm pretty excited to talk about\nthis cuz it's an important topic,\n\n14\n00:00:43.407 --> 00:00:45.134\nand it's one that wasn't always around.\n\n15\n00:00:45.134 --> 00:00:49.350\nIf you guys started with AWS in\nthe early days, IAM didn't exist.\n\n16\n00:00:49.350 --> 00:00:51.916\nYou signed in with a username and\npassword and that was the end of it.\n\n17\n00:00:51.916 --> 00:00:57.174\nAnd it's really evolved over the years to\ninclude a lot of additional functionality,\n\n18\n00:00:57.174 --> 00:00:59.775\nand just a much stronger form of security.\n\n19\n00:00:59.775 --> 00:01:02.433\nWe get a lot of power with IAM, so\nwe definitely need to take a look at it.\n\n20\n00:01:02.433 --> 00:01:04.770\nWe need to understand each of\nthe individual components and\n\n21\n00:01:04.770 --> 00:01:06.833\nwhen they're appropriate for\nthe right solution.\n\n22\n00:01:06.833 --> 00:01:08.110\nSo that's what we're gonna tackle.\n\n23\n00:01:08.110 --> 00:01:09.329\n>> Awesome, well,\nit's gonna be a lot of fun.\n\n24\n00:01:09.329 --> 00:01:12.892\nIt's a very interesting topic as I\nwas looking this over for the show.\n\n25\n00:01:12.892 --> 00:01:16.001\nNow, Don,\nI've played around with AWS before and\n\n26\n00:01:16.001 --> 00:01:20.482\nI've spun up a little microinstance,\na very easy, simple thing to do and\n\n27\n00:01:20.482 --> 00:01:24.409\nall I used was a username and\npassword, so that was pretty easy.\n\n28\n00:01:24.409 --> 00:01:28.089\nBut what it looks like is, it gets\na little more complex than doing that.\n\n29\n00:01:28.089 --> 00:01:30.803\nHelp us out with this,\ntell us some of the components,\n\n30\n00:01:30.803 --> 00:01:34.400\nsome of the ways that we can use\nother than usernames and passwords.\n\n31\n00:01:34.400 --> 00:01:37.439\n>> This is one of the areas where people\ncan sometimes have problems on the exam,\n\n32\n00:01:37.439 --> 00:01:39.352\nbecause a lot of people do\nset up a demo on a trial,\n\n33\n00:01:39.352 --> 00:01:42.674\nor whatever, they're experimenting with\nand you just log in with your username and\n\n34\n00:01:42.674 --> 00:01:43.743\npassword, works great.\n\n35\n00:01:43.743 --> 00:01:45.403\nBut think about a company.\n\n36\n00:01:45.403 --> 00:01:49.282\nWhat if you're a company and\nyou have 20 system admins, right.\n\n37\n00:01:49.282 --> 00:01:50.048\nOr 20 SysOps or\n\n38\n00:01:50.048 --> 00:01:53.681\nwhatever DEV, DEVOP, whatever crazy\nterms they're calling us these days.\n\n39\n00:01:53.681 --> 00:01:58.114\nSo you have 20 staff and you want them\nall to be able to get in there and\n\n40\n00:01:58.114 --> 00:02:03.310\nwork on your S3 buckets,\nyour RDS databases, your EC2 instances.\n\n41\n00:02:03.310 --> 00:02:06.260\nWell, you might have some employees you\nwant to have access to one resource and\n\n42\n00:02:06.260 --> 00:02:08.370\nother employees access\nto different resources.\n\n43\n00:02:08.370 --> 00:02:11.010\nYou would have different levels\nof access you wanna grant.\n\n44\n00:02:11.010 --> 00:02:15.097\nLike your help desk, you might want them\nto be able to login and see everything,\n\n45\n00:02:15.097 --> 00:02:16.442\nbut not change anything.\n\n46\n00:02:16.442 --> 00:02:21.949\nBut then your DBAs, you want them to have\nfull control over your RDS deployment.\n\n47\n00:02:21.949 --> 00:02:24.440\nWell, with the username and\npassword like Daniel described,\n\n48\n00:02:24.440 --> 00:02:26.470\nyou don't really have that granularity,\nright?\n\n49\n00:02:26.470 --> 00:02:30.029\nI don't wanna just share this one username\nand password with all of my staff,\n\n50\n00:02:30.029 --> 00:02:33.667\ncuz then they all have full access and\nin theory could really wreak some havoc.\n\n51\n00:02:33.667 --> 00:02:37.033\nAnd if an employee leaves the company,\nnow I've gotta change the username and\n\n52\n00:02:37.033 --> 00:02:38.161\npassword for everybody.\n\n53\n00:02:38.161 --> 00:02:42.560\nSo, fortunately Amazon gives us a lot\nof different ways to authenticate and\n\n54\n00:02:42.560 --> 00:02:45.323\na lot of different ways\nto dole out privileges.\n\n55\n00:02:45.323 --> 00:02:49.128\nInstead of giving somebody the whole set,\nwhich is really the easiest route,\n\n56\n00:02:49.128 --> 00:02:52.933\nwe can go a little bit tighter and we can\nreally be specific about this is the type\n\n57\n00:02:52.933 --> 00:02:56.567\nof access that I want that user to have\nand that's all I'm gonna give them,\n\n58\n00:02:56.567 --> 00:02:57.686\nnot anything beyond.\n\n59\n00:02:57.686 --> 00:02:58.882\nThat is a standard security practice.\n\n60\n00:02:58.882 --> 00:03:00.856\nIt's got a name in the security world,\nwhat do they call it,\n\n61\n00:03:00.856 --> 00:03:02.040\nthe principal of least privilege?\n\n62\n00:03:02.040 --> 00:03:03.456\n>> Yep, principal of least privilege,\nthat's it.\n\n63\n00:03:03.456 --> 00:03:05.081\n>> There we go, I remember some\nthings from security training.\n\n64\n00:03:05.081 --> 00:03:05.743\n>> Very nice.\n\n65\n00:03:05.743 --> 00:03:06.588\n[LAUGH]\n>> So\n\n66\n00:03:06.588 --> 00:03:10.036\nprincipal of least privilege says you\nshouldn't give somebody any more access\n\n67\n00:03:10.036 --> 00:03:13.278\nthan the bare minimum they need,\nbecause even if they're not malicious,\n\n68\n00:03:13.278 --> 00:03:15.042\nthey could potentially make mistakes.\n\n69\n00:03:15.042 --> 00:03:17.979\nAnd you don't want them making mistakes\noutside of the area that they work in.\n\n70\n00:03:17.979 --> 00:03:20.033\nIt's okay if they mess their own stuff up.\n\n71\n00:03:20.033 --> 00:03:21.275\n>> Yeah, well, good for them, right?\n\n72\n00:03:21.275 --> 00:03:23.341\n>> [LAUGH]\n>> Go ahead, enjoy that.\n\n73\n00:03:23.341 --> 00:03:28.252\nSo now we can separate out people, and\nthis is just common security practice.\n\n74\n00:03:28.252 --> 00:03:31.041\nIf you're running a Windows operating\nsystem you're probably running\n\n75\n00:03:31.041 --> 00:03:31.736\nmultiple users.\n\n76\n00:03:31.736 --> 00:03:33.870\nSame kind of idea applies right here.\n\n77\n00:03:33.870 --> 00:03:36.590\nSo that if Don does something,\nit was Don that did it,\n\n78\n00:03:36.590 --> 00:03:39.805\nwe can see it was Don that did it,\nand not Daniel, he can't fire me.\n\n79\n00:03:39.805 --> 00:03:40.400\n[LAUGH]\n>> All right, so\n\n80\n00:03:40.400 --> 00:03:43.720\nlet's take a look at our AWS console, and\nwe'll get a chance to see how this works.\n\n81\n00:03:43.720 --> 00:03:46.392\nAnd so\nI'm logged in to my console here, and\n\n82\n00:03:46.392 --> 00:03:51.171\nIAM actually has its own little area way\ndown here under Security & Identity.\n\n83\n00:03:51.171 --> 00:03:53.608\nSo that's what I'm looking for,\nis Identity & Access Management.\n\n84\n00:03:53.608 --> 00:03:57.230\nAnd you'll see the description,\nManage User Access and Encryption Keys.\n\n85\n00:03:57.230 --> 00:03:58.774\nThat's exactly what I want.\n\n86\n00:03:58.774 --> 00:04:02.105\nThere's other stuff, like\nDirectory Services, the Inspector, WAF,\n\n87\n00:04:02.105 --> 00:04:02.813\nthose things.\n\n88\n00:04:02.813 --> 00:04:06.506\nBut IAM is the one that's on the exam,\nand it's a decent part on the exam.\n\n89\n00:04:06.506 --> 00:04:09.037\nYou're gonna have a couple of\nquestions on this at least, so\n\n90\n00:04:09.037 --> 00:04:10.487\nyou can pretty much count on that.\n\n91\n00:04:10.487 --> 00:04:12.903\nThey stress security a lot on the exam.\n\n92\n00:04:12.903 --> 00:04:17.163\nSo when you jump in the IAM,\nfirst off, they welcome you to it.\n\n93\n00:04:17.163 --> 00:04:20.622\nThey really want you to use this, so\nthey try to make it as easy as possible.\n\n94\n00:04:20.622 --> 00:04:23.492\nAnd so right here,\nI'm basically seeing my sign-on link,\n\n95\n00:04:23.492 --> 00:04:26.207\nif I wanna sign into my account,\nthis is where I can go to.\n\n96\n00:04:26.207 --> 00:04:28.910\nNow I don't normally worry about that.\n\n97\n00:04:28.910 --> 00:04:34.542\nWhen I go to log in, I just go to\nconsole.aws.amazon.com and I log in as me.\n\n98\n00:04:34.542 --> 00:04:36.469\nBut that's because I own the account.\n\n99\n00:04:36.469 --> 00:04:40.430\nIf I'm a user on the account, though,\nI have to go to this address.\n\n100\n00:04:40.430 --> 00:04:42.990\nSo you can customize that,\nchange it to a unique name.\n\n101\n00:04:42.990 --> 00:04:46.230\nYou can do a CNAME in DNS to\nmake it easier for your users.\n\n102\n00:04:46.230 --> 00:04:49.330\nBut they need that so that Amazon will\nknow what account they're tied to and\n\n103\n00:04:49.330 --> 00:04:51.285\nthen you can start to\ncreate user accounts.\n\n104\n00:04:51.285 --> 00:04:53.939\nYou'll see I already have one\nuser account on my system.\n\n105\n00:04:53.939 --> 00:04:56.553\nBut it's giving me some security\nstatus messages down here and\n\n106\n00:04:56.553 --> 00:04:58.130\nI'm even getting some warnings.\n\n107\n00:04:58.130 --> 00:05:01.390\nAnd it's telling me I need to\ndelete my root access keys.\n\n108\n00:05:01.390 --> 00:05:04.672\nNow I've got a green check mark, or\na green box with a white check mark,\n\n109\n00:05:04.672 --> 00:05:06.600\ntelling me that I've already done that.\n\n110\n00:05:06.600 --> 00:05:08.300\nSo some things I've kind\nof already brought up.\n\n111\n00:05:08.300 --> 00:05:10.962\nBut I haven't activated MFA.\n\n112\n00:05:10.962 --> 00:05:14.121\nI haven't, well I guess I have,\ncreated individual IAM users.\n\n113\n00:05:14.121 --> 00:05:17.059\nI haven't used groups\nto assign permissions.\n\n114\n00:05:17.059 --> 00:05:19.079\nThese are things that\nwe need to implement.\n\n115\n00:05:19.079 --> 00:05:23.118\nAmazon does not require them because\nthis has evolved over the years.\n\n116\n00:05:23.118 --> 00:05:26.485\nSo it was deployed originally\nwhere you had root access keys,\n\n117\n00:05:26.485 --> 00:05:30.175\na single key that would give you\nfull access to the whole system, and\n\n118\n00:05:30.175 --> 00:05:33.240\nyou just shared that with\nthe employees that needed it.\n\n119\n00:05:33.240 --> 00:05:35.020\nIt was risky, right?\n\n120\n00:05:35.020 --> 00:05:37.980\nAnd now we've moved beyond it so\nyou don't need those anymore.\n\n121\n00:05:37.980 --> 00:05:41.800\nSo if you still have them, it'll tell\nyou you should really delete them.\n\n122\n00:05:41.800 --> 00:05:43.042\nOkay.\n\n123\n00:05:43.042 --> 00:05:45.591\nIf you don't know if you\nstill have those old keys,\n\n124\n00:05:45.591 --> 00:05:47.442\nyou can go up to your account up here.\n\n125\n00:05:47.442 --> 00:05:49.456\nSo I'm just gonna click\non my account name and\n\n126\n00:05:49.456 --> 00:05:51.634\nunder there you'll see\nsecurity credentials.\n\n127\n00:05:51.634 --> 00:05:55.058\nAnd you can jump under security\ncredentials and it's gonna warn us.\n\n128\n00:05:55.058 --> 00:05:56.680\nIt's gonna say, wait a minute.\n\n129\n00:05:56.680 --> 00:06:00.620\nAre you sure you wanna go to this screen,\nbecause IAM has replaced this.\n\n130\n00:06:00.620 --> 00:06:01.886\nSo that's what it's telling me.\n\n131\n00:06:01.886 --> 00:06:06.081\nAnd I can get started with IAM users if I\nwant, but I want to continue to security\n\n132\n00:06:06.081 --> 00:06:09.146\ncredentials cuz I want to see\nthe old way of doing things.\n\n133\n00:06:09.146 --> 00:06:12.838\nAnd if I jump in here, I can start\nto see my security credentials.\n\n134\n00:06:12.838 --> 00:06:14.444\nNow, I know what you guys are thinking,\n\n135\n00:06:14.444 --> 00:06:17.100\nis Don about to bring up his security\ncredentials up on the screen?\n\n136\n00:06:17.100 --> 00:06:17.842\nWell, absolutely.\n\n137\n00:06:17.842 --> 00:06:20.792\n>> [LAUGH]\n>> So the neat part about a lot of these\n\n138\n00:06:20.792 --> 00:06:24.126\ncredentials is once you create them in\nthe system, it won't actually show you\n\n139\n00:06:24.126 --> 00:06:27.383\nthe passwords anymore and a lot of times,\nAmazon doesn't even store them.\n\n140\n00:06:27.383 --> 00:06:30.519\nIf you don't store the copy,\nthen it's just gone forever.\n\n141\n00:06:30.519 --> 00:06:33.851\nBut if I had a password,\nwe would see that set right here and\n\n142\n00:06:33.851 --> 00:06:35.823\nI can change my password if I want.\n\n143\n00:06:35.823 --> 00:06:40.863\nIf I've done multi-factor authentication,\nMFA, I can see if it's turned on.\n\n144\n00:06:40.863 --> 00:06:41.896\nI have not.\n\n145\n00:06:41.896 --> 00:06:44.215\nThat's why I was getting that warning\na moment ago so I could turn this on.\n\n146\n00:06:44.215 --> 00:06:49.504\nThe user account that owns this\ndeployment is called the root account and\n\n147\n00:06:49.504 --> 00:06:53.500\nthis is my root account and\nI should activate MFA on it.\n\n148\n00:06:53.500 --> 00:06:56.333\nWe'll talk more about why and\nwhat it does and why it's important.\n\n149\n00:06:56.333 --> 00:07:01.550\nBut you'll also see the access keys, and\nthese are the old style access keys.\n\n150\n00:07:01.550 --> 00:07:06.200\nAnd basically the way it worked\nis you had an access key ID, and\n\n151\n00:07:06.200 --> 00:07:08.352\nyou had a access secret key.\n\n152\n00:07:08.352 --> 00:07:11.109\nAnd the secret key you saw\nwhen you created it, and\n\n153\n00:07:11.109 --> 00:07:14.597\nthen Amazon throws it away and\nwon't show it to you ever again.\n\n154\n00:07:14.597 --> 00:07:17.806\nSo that's why I don't mind showing these\naccess keys on the screen because I know\n\n155\n00:07:17.806 --> 00:07:20.750\nyou need the secret, and I don't even\nhave the secret for these anymore.\n\n156\n00:07:20.750 --> 00:07:22.320\n[LAUGH] I've lost them a long time ago.\n\n157\n00:07:22.320 --> 00:07:24.685\nYou'll see these were\ncreated earlier this year.\n\n158\n00:07:24.685 --> 00:07:26.305\n>> So these are basically useless now.\n\n159\n00:07:26.305 --> 00:07:27.785\n>> Yeah, well, and\nthey're all deleted too.\n\n160\n00:07:27.785 --> 00:07:29.625\nSee how I've got this deleted column?\n\n161\n00:07:29.625 --> 00:07:33.293\nSo I've got a record of the fact that\nthey did exist, but they are deleted.\n\n162\n00:07:33.293 --> 00:07:37.150\nIf I create a new one, right, so if I\ngo in here and create a new access key,\n\n163\n00:07:37.150 --> 00:07:38.529\nI can hit Show Access Key.\n\n164\n00:07:38.529 --> 00:07:43.134\nHere's my access key ID and\nhere's my secret access key.\n\n165\n00:07:43.134 --> 00:07:46.435\nIn theory, if somebody's watching\nthe show live and they're fast enough,\n\n166\n00:07:46.435 --> 00:07:49.378\nthey can get this information,\nload it in, connect to my account and\n\n167\n00:07:49.378 --> 00:07:51.134\nstart spinning up instances right now.\n\n168\n00:07:51.134 --> 00:07:52.492\nOkay.\nAlmost there Don.\n\n169\n00:07:52.492 --> 00:07:54.512\n>> I know [LAUGH]\n>> So you've got to have that.\n\n170\n00:07:54.512 --> 00:07:58.333\nNow once I close this if I don't download\nthe key final, basically you created that\n\n171\n00:07:58.333 --> 00:08:01.950\nkey, there it is, and then it will never\nshow me that secret access key again.\n\n172\n00:08:01.950 --> 00:08:05.630\nThat's it, it's gone,\nas far as their concerned.\n\n173\n00:08:05.630 --> 00:08:07.889\nIf I lose it right,\nI didn't download it, I didn't save it,\n\n174\n00:08:07.889 --> 00:08:09.720\nI guess we could go back and\nwatch the video again.\n\n175\n00:08:09.720 --> 00:08:13.240\nIf I don't have a copy of it,\nthis key is no longer good to me.\n\n176\n00:08:13.240 --> 00:08:17.360\nRight.\nIf I feel like the key might have\n\n177\n00:08:17.360 --> 00:08:22.300\ngotten compromised, I can always go over\nhere and choose to make it inactive, and\n\n178\n00:08:22.300 --> 00:08:24.860\nthat make inactive option is nice\nbecause you can just turn it off.\n\n179\n00:08:24.860 --> 00:08:28.740\nAnd then if I find that it wasn't\ncompromised I can always make it active\n\n180\n00:08:28.740 --> 00:08:29.730\nagain, right?\n\n181\n00:08:29.730 --> 00:08:32.160\nBut if it was compromised,\nI can just choose delete and\n\n182\n00:08:32.160 --> 00:08:33.280\nthat's going to wipe it out.\n\n183\n00:08:33.280 --> 00:08:35.350\nSo here it's just letting me know\nthat it's going to delete it,\n\n184\n00:08:35.350 --> 00:08:36.810\nand I'll say yes to that.\n\n185\n00:08:36.810 --> 00:08:38.590\nAnd now it's gone.\n\n186\n00:08:38.590 --> 00:08:39.520\nWell, it's not gone gone, right?\n\n187\n00:08:39.520 --> 00:08:44.170\nHere it is, November 16th, there's the key\nand it just shows as deleted, right?\n\n188\n00:08:44.170 --> 00:08:46.670\nSo, this is the old way of doing things.\n\n189\n00:08:46.670 --> 00:08:49.839\nAnd the problem was we didn't\nget a lot of granular control.\n\n190\n00:08:49.839 --> 00:08:51.797\nIt doesn't mean we didn't have anything.\n\n191\n00:08:51.797 --> 00:08:56.101\nWe had other security features we could\nuse, but this was the key one and\n\n192\n00:08:56.101 --> 00:08:57.339\nthat's all we had.\n\n193\n00:08:57.339 --> 00:09:00.590\nSo, now we can go a lot further than that.\n\n194\n00:09:00.590 --> 00:09:03.350\nAnd here I'm kind of showing you\nguys on my root account, right?\n\n195\n00:09:03.350 --> 00:09:05.214\nThere was the password, right?\n\n196\n00:09:05.214 --> 00:09:08.339\nWhich was just a use name and a password.\n\n197\n00:09:08.339 --> 00:09:11.771\nFor the root account, it's your\nemail address is the user name and\n\n198\n00:09:11.771 --> 00:09:14.172\nthen whatever the password\nis that you chose.\n\n199\n00:09:14.172 --> 00:09:16.797\nFor additional users that you've create,\nyou give them a use name.\n\n200\n00:09:16.797 --> 00:09:18.797\nIt doesn't have to be an email address.\n\n201\n00:09:18.797 --> 00:09:21.060\nThen the MFA side,\nwe can turn that on if we wanted.\n\n202\n00:09:21.060 --> 00:09:23.390\nThe access keys I just showed you,\n\n203\n00:09:24.400 --> 00:09:27.650\nwe also have CloudFront key pairs and\nX509 certificates.\n\n204\n00:09:27.650 --> 00:09:30.132\nThose two are actually really similar.\n\n205\n00:09:30.132 --> 00:09:33.464\nThese key pairs are more like\nSSL certificates, right.\n\n206\n00:09:33.464 --> 00:09:36.257\nPrivate key, public key pairs.\n\n207\n00:09:36.257 --> 00:09:39.784\nWhere Amazon generates a public key\nthat they stick on their server and\n\n208\n00:09:39.784 --> 00:09:42.472\nthey generate a private key\nthat they give to you, and\n\n209\n00:09:42.472 --> 00:09:44.470\nthen Amazon throws a private key away.\n\n210\n00:09:44.470 --> 00:09:46.130\nThey don't have it anymore.\n\n211\n00:09:46.130 --> 00:09:47.100\nRight?\nYou have the only copy of\n\n212\n00:09:47.100 --> 00:09:47.600\nthat private key.\n\n213\n00:09:47.600 --> 00:09:51.210\nAnd when you want to communicate with that\nsystem, you need to use the private key\n\n214\n00:09:51.210 --> 00:09:54.010\nto decrypt the data to be\nable to communicate with it.\n\n215\n00:09:54.010 --> 00:09:57.160\nSo that private key becomes\nreally really important.\n\n216\n00:09:57.160 --> 00:09:58.550\nYou can create key pairs here.\n\n217\n00:09:58.550 --> 00:10:01.440\nIf you already have a key,\nyou can upload it and\n\n218\n00:10:01.440 --> 00:10:05.150\nget it thrown in to the system,\nand he X509 certificates also.\n\n219\n00:10:05.150 --> 00:10:06.520\nAll different ways.\n\n220\n00:10:06.520 --> 00:10:10.383\nNotice that some of these have\nlimitations, like the X509.\n\n221\n00:10:10.383 --> 00:10:14.631\nI can't log in to the AWS console\nwith an X509 certificate.\n\n222\n00:10:14.631 --> 00:10:18.694\nThese are just used for soap requests,\nand they don't say it here, but\n\n223\n00:10:18.694 --> 00:10:22.300\nI think the only place I know of\nthat still uses it is Amazon S3.\n\n224\n00:10:22.300 --> 00:10:25.600\nBut it looks like I'm going to learn\nsomething here on the show myself.\n\n225\n00:10:25.600 --> 00:10:28.120\nIt looks like Amazon Mechanical Turk\nstill uses it.\n\n226\n00:10:28.120 --> 00:10:30.750\nI thought S3 was the only system that\nstill used the X.509 certificates,\n\n227\n00:10:30.750 --> 00:10:31.820\nbut there's a couple.\n\n228\n00:10:31.820 --> 00:10:34.390\nWith S3, the way they're used there,\nI've used this a few times,\n\n229\n00:10:34.390 --> 00:10:39.110\nwhere you put a file in S3 and\nyou want to distribute it, but\n\n230\n00:10:39.110 --> 00:10:41.200\nyou don't want people\ndirect linking to the file.\n\n231\n00:10:41.200 --> 00:10:43.460\nSo you can create\nan authenticated request,\n\n232\n00:10:43.460 --> 00:10:47.310\nwhere somebody has to request with\nan authentication token to be able to get\n\n233\n00:10:47.310 --> 00:10:51.740\nthat file, and, you can do that with and\nX.509 certificate, right?\n\n234\n00:10:51.740 --> 00:10:54.810\nThey have to have a key that\nlet's them access the file.\n\n235\n00:10:54.810 --> 00:10:56.840\nDownload so\nyou control who has that access.\n\n236\n00:10:56.840 --> 00:11:01.140\nSo this isn't really used for you\nlogging in to the console, it's used for\n\n237\n00:11:01.140 --> 00:11:03.131\nyou securing some other service.\n\n238\n00:11:03.131 --> 00:11:07.128\nAnd some of these, like X509 have kind\nof really started to dwindle, and\n\n239\n00:11:07.128 --> 00:11:11.256\neventually will go away, because there's\nother ways to do this now, right?\n\n240\n00:11:11.256 --> 00:11:14.974\nThere's other API functionality\nthat Amazons introduced or\n\n241\n00:11:14.974 --> 00:11:18.048\nother security technology\nthey've introduced,\n\n242\n00:11:18.048 --> 00:11:21.940\nthat kind of supplant what this\nwas originally designed to do.\n\n243\n00:11:21.940 --> 00:11:24.047\nSo just because you see a ton of options,\ndoesn't mean you have to do them.\n\n244\n00:11:24.047 --> 00:11:26.505\nAnd often times I'll leave this out.\n\n245\n00:11:26.505 --> 00:11:31.210\nFor example if I go under users here,\nI created this test user earlier for me.\n\n246\n00:11:31.210 --> 00:11:34.180\nAnd if I go under it's security\n\n247\n00:11:34.180 --> 00:11:37.390\ncredentials you'll see where we've\ngot those same basic options.\n\n248\n00:11:37.390 --> 00:11:38.170\nNot as many here.\n\n249\n00:11:38.170 --> 00:11:41.280\nI've got access keys,\nsigning credentials, and so on.\n\n250\n00:11:41.280 --> 00:11:47.060\nIf I go under sign on credentials, notice\nhere user name and password, password no.\n\n251\n00:11:47.060 --> 00:11:49.010\nI didn't put a password on this user.\n\n252\n00:11:49.010 --> 00:11:50.190\nIsn't that crazy?\n\n253\n00:11:50.190 --> 00:11:53.840\nAren't I at risk having a user\naccount with no password?\n\n254\n00:11:53.840 --> 00:11:55.550\nNo.\nI'm just not allowing that type\n\n255\n00:11:55.550 --> 00:11:56.680\nof authentication.\n\n256\n00:11:56.680 --> 00:12:00.560\nThis user is not allowed to log\nin with a user name and password.\n\n257\n00:12:00.560 --> 00:12:03.515\nThis user is only allowed to\nlog in with an access key and\n\n258\n00:12:03.515 --> 00:12:04.940\nthey do have access keys.\n\n259\n00:12:04.940 --> 00:12:08.300\nAnd there will be a private or\nsecret key that goes along with these,\n\n260\n00:12:08.300 --> 00:12:11.090\nthese are the ones that are actually\nactive, are these both active,\n\n261\n00:12:11.090 --> 00:12:12.080\nyeah these are both active.\n\n262\n00:12:12.080 --> 00:12:14.950\nSo these are the ones that are active for\nthat user right now.\n\n263\n00:12:14.950 --> 00:12:19.310\nBut that's the type of authentication\nI'm allowing for this user.\n\n264\n00:12:19.310 --> 00:12:19.994\nAll right, so\n\n265\n00:12:19.994 --> 00:12:23.590\nwhen you create these you can limit\nhow they're allowed to authenticate.\n\n266\n00:12:23.590 --> 00:12:26.845\nAnd this is going to be really\nimportant later on in this series,\n\n267\n00:12:26.845 --> 00:12:29.880\nbecause we're going to talk\nabout all those limitations.\n\n268\n00:12:29.880 --> 00:12:33.672\nAll right, so that's basically,\ndid I leave any off?\n\n269\n00:12:33.672 --> 00:12:35.922\nThe X509, the key pairs.\n\n270\n00:12:35.922 --> 00:12:39.631\nYou know, let me talk a little bit more on\nkey pairs before we move on on that one.\n\n271\n00:12:39.631 --> 00:12:43.245\nBecause, with key pairs,\nwe kind of, whoops.\n\n272\n00:12:43.245 --> 00:12:46.060\n[LAUGH] I want to see how many crazy\nthings I can do on my screen here.\n\n273\n00:12:46.060 --> 00:12:47.770\nSo, with key pairs, right.\n\n274\n00:12:47.770 --> 00:12:52.430\nWhen you create a key pair that can\nbe used for authentication, and for\n\n275\n00:12:52.430 --> 00:12:55.080\nusers, when I go in here, I can create\nsign in credentials, access keys.\n\n276\n00:12:55.080 --> 00:12:57.088\nI can create these things.\n\n277\n00:12:57.088 --> 00:13:00.048\nThere's MFA, signing certificates.\n\n278\n00:13:00.048 --> 00:13:02.798\nWell, the signing certificates\nare really just used for\n\n279\n00:13:02.798 --> 00:13:05.214\ndigitally signing code\nthat's being uploaded.\n\n280\n00:13:05.214 --> 00:13:07.150\nLike here, you'll see with AWS\ncode commit and other services.\n\n281\n00:13:07.150 --> 00:13:09.210\nThey're not really used for\nauthentication.\n\n282\n00:13:09.210 --> 00:13:12.700\nFor the key pairs,\nthere's actually several different kinds.\n\n283\n00:13:12.700 --> 00:13:14.930\nThere's some that are used for\nauthentication.\n\n284\n00:13:14.930 --> 00:13:17.110\nThere's some that are used for\nencryption and decryption.\n\n285\n00:13:17.110 --> 00:13:20.100\nSome of the services actually\ndo support encryption.\n\n286\n00:13:20.100 --> 00:13:23.100\nLet me give you an example.\n\n287\n00:13:23.100 --> 00:13:24.116\nEBS, the Elastic Block Store.\n\n288\n00:13:24.116 --> 00:13:26.845\nI think I mentioned in\nan earlier episode how Amazon,\n\n289\n00:13:26.845 --> 00:13:31.365\nthey provide you certain security,\nespecially on the infrastructure level.\n\n290\n00:13:31.365 --> 00:13:35.839\nBut then when you start getting to the\nplatform and above it's up to you, right?\n\n291\n00:13:35.839 --> 00:13:40.718\nSo, if I deploy an EC2 instance and\nit´s running Linux,\n\n292\n00:13:40.718 --> 00:13:43.714\nand I attach some EBS storage to it.\n\n293\n00:13:43.714 --> 00:13:48.214\nWell, when the data´s written to that hard\ndrive I´m trusting that Amazon secures it.\n\n294\n00:13:48.214 --> 00:13:50.131\nI might not trust Amazon.\n\n295\n00:13:50.131 --> 00:13:53.211\nI might say, you know what I´m\ngoing to encrypt the data anyway,\n\n296\n00:13:53.211 --> 00:13:54.838\nI want to encrypt the data myself.\n\n297\n00:13:54.838 --> 00:13:57.507\nAnd that way if Amazon\ndoesn´t do their job,\n\n298\n00:13:57.507 --> 00:14:01.520\nthen I´m still okay because I know\nthe data was encrypted, right?\n\n299\n00:14:01.520 --> 00:14:04.910\nNow normally we'd have to provide that\nourselves and if you're running Windows or\n\n300\n00:14:04.910 --> 00:14:06.160\nLinux, right, they've all got stuff.\n\n301\n00:14:06.160 --> 00:14:10.798\nI mean Windows you can do Bitlocker,\nLinux you can just do, shoot.\n\n302\n00:14:10.798 --> 00:14:11.757\n>> PGP?\n\n303\n00:14:11.757 --> 00:14:12.631\n>> You could do PGP.\n\n304\n00:14:12.631 --> 00:14:14.665\nWhat's the one that's\nbuilt in the file system,\n\n305\n00:14:14.665 --> 00:14:16.370\nthe EXT3 has like it's own encryption.\n\n306\n00:14:16.370 --> 00:14:17.881\nI can't remember the name.\n\n307\n00:14:17.881 --> 00:14:18.420\n>> Yeah, I can't think of it.\n>> So\n\n308\n00:14:18.420 --> 00:14:21.230\nanyhow there's all sorts\nof different types.\n\n309\n00:14:21.230 --> 00:14:23.330\nIn Red Hat, you can do the LVM encryption,\n\n310\n00:14:23.330 --> 00:14:26.710\nthere's all sorts of different\nstuff that you can do.\n\n311\n00:14:26.710 --> 00:14:29.530\nIt's really just up to you, you pick.\n\n312\n00:14:29.530 --> 00:14:32.206\nBut Amazon will actually let\nyou encrypt some data and\n\n313\n00:14:32.206 --> 00:14:34.297\nthey'll handle the encryption for you.\n\n314\n00:14:34.297 --> 00:14:38.902\nNow, the main reason to encrypt data\ninside of AWS is that you don't trust\n\n315\n00:14:38.902 --> 00:14:39.505\nAmazon.\n\n316\n00:14:39.505 --> 00:14:41.778\nSo, when you let them encrypt data for\nyou,\n\n317\n00:14:41.778 --> 00:14:44.672\nyou're still kind of trusting\nAmazon in a way, right?\n\n318\n00:14:44.672 --> 00:14:49.296\nSo I don't know how many people use this,\nI've never used it in production, but\n\n319\n00:14:49.296 --> 00:14:51.608\nlet me show you guys here in the console,\n\n320\n00:14:51.608 --> 00:14:55.440\nwhen I'm in my IAM screen, so\nlet me kind of repeat my path here.\n\n321\n00:14:55.440 --> 00:14:59.552\nSo I went into the console,\nI went to Identity & Access management.\n\n322\n00:14:59.552 --> 00:15:02.960\nIf I look all the way down here at\nthe bottom, there's Encryption Keys.\n\n323\n00:15:02.960 --> 00:15:05.230\nAnd if I go to Encryption Keys,\n\n324\n00:15:05.230 --> 00:15:08.210\nhere's where it's going to talk about\nthe AWS Key Management Service,\n\n325\n00:15:08.210 --> 00:15:14.860\nwhere we can actually build keys and\nthen use them to encrypt our data.\n\n326\n00:15:14.860 --> 00:15:15.400\nAll right?\n\n327\n00:15:15.400 --> 00:15:19.006\nAnd you can use that with things like\nthe elastic block storage or EBS.\n\n328\n00:15:19.006 --> 00:15:21.339\nAnd you'll see it kind of breaks\nit down here with other areas.\n\n329\n00:15:21.339 --> 00:15:25.785\nSo it's telling us, seamless integration\nwith services like Amazon S3,\n\n330\n00:15:25.785 --> 00:15:28.780\nAmazon EBS, Amazon redshift, and others.\n\n331\n00:15:28.780 --> 00:15:30.631\nSo now we can actually\ncontrol the keys themselves.\n\n332\n00:15:30.631 --> 00:15:32.882\nAnd why is that important?\n\n333\n00:15:32.882 --> 00:15:37.117\nWell, when you encrypt data,\nif it's encrypted with a key,\n\n334\n00:15:37.117 --> 00:15:38.750\nthe key has a lifetime.\n\n335\n00:15:38.750 --> 00:15:40.960\nLet's say the lifetime is one year.\n\n336\n00:15:40.960 --> 00:15:44.653\nAnd I'm worried about Amazon potentially\nthrowing hard drives away, or whatever,\n\n337\n00:15:44.653 --> 00:15:45.482\nthat my data is on.\n\n338\n00:15:45.482 --> 00:15:48.830\nThe drives can be encrypted,\nand it they're encrypted,\n\n339\n00:15:48.830 --> 00:15:51.917\nnow my data is safe if it\ngets improperly disposed of.\n\n340\n00:15:51.917 --> 00:15:52.435\nBut also,\n\n341\n00:15:52.435 --> 00:15:56.248\nI can revoke that certificate and stop\ndata Data from being encrypted with it.\n\n342\n00:15:56.248 --> 00:15:59.536\nI have that control myself,\nI can yank that and turn it off.\n\n343\n00:15:59.536 --> 00:16:03.001\nSo having that control is kind of\na valuable thing for some people.\n\n344\n00:16:03.001 --> 00:16:05.614\nI would normally deploy\nthis inside of my own OS.\n\n345\n00:16:05.614 --> 00:16:08.078\nBut if we choose Get Started Now,\nyou can come in here and\n\n346\n00:16:08.078 --> 00:16:11.495\nyou'll see where you can create keys and\nactually, I've already got a key.\n\n347\n00:16:11.495 --> 00:16:13.561\nNow, I didn't make that one, right?\n\n348\n00:16:13.561 --> 00:16:15.141\nAmazon made that one for me.\n\n349\n00:16:15.141 --> 00:16:18.194\nThis is an EBS key that they\ncreated sometime back in May.\n\n350\n00:16:18.194 --> 00:16:19.984\nI probably created an EBS volume and\n\n351\n00:16:19.984 --> 00:16:23.575\nchecked the little box that said\nplease encrypt this, so they made it.\n\n352\n00:16:23.575 --> 00:16:25.643\nBut you can actually go in and\ndo your own thing, but\n\n353\n00:16:25.643 --> 00:16:28.787\nyou'll see where you can Enable,\nDisable, you can Schedule key deletion.\n\n354\n00:16:28.787 --> 00:16:32.154\nSo I can say,\nit's almost like a dead trigger, right?\n\n355\n00:16:32.154 --> 00:16:35.520\nIf you don't hear from me in a month,\ndelete this key, right.\n\n356\n00:16:35.520 --> 00:16:40.327\nAnd once a month you remember to go in and\nchange that to say, delete it next month.\n\n357\n00:16:40.327 --> 00:16:41.035\n[LAUGH] So you can set that up.\n\n358\n00:16:41.035 --> 00:16:43.955\nBut we can create a key here and\nwe can start to set our alias and\n\n359\n00:16:43.955 --> 00:16:45.335\nactually generate the key.\n\n360\n00:16:45.335 --> 00:16:51.083\nSo I might have one that's going\nto be ITProTV-database7-storage,\n\n361\n00:16:51.083 --> 00:16:54.768\nor something, yeah,\nthis might be too long.\n\n362\n00:16:54.768 --> 00:16:59.345\nAnd so I can just kinda whip this up and\nwhen we move forward,\n\n363\n00:16:59.345 --> 00:17:03.720\nit's gonna ask who is allowed\nto administer this key.\n\n364\n00:17:03.720 --> 00:17:07.460\nI can pick from my users,\nI can assign a role or a user or whatever.\n\n365\n00:17:07.460 --> 00:17:09.060\nI'll grant it to this guy.\n\n366\n00:17:09.060 --> 00:17:10.935\nAnd then we'll see Allow key\nadministrators to delete the key.\n\n367\n00:17:10.935 --> 00:17:12.607\nDo I wanna let them do that or not?\n\n368\n00:17:12.607 --> 00:17:15.669\nI might want to always keep that\nkey in there because if I fire that\n\n369\n00:17:15.669 --> 00:17:19.086\nadministrator, I need access to that\nkey so I can go to recover my data.\n\n370\n00:17:19.086 --> 00:17:20.786\nI probably don't want\nto let them delete it,\n\n371\n00:17:20.786 --> 00:17:22.550\nwhich would be a pretty\nmalicious thing to do.\n\n372\n00:17:23.790 --> 00:17:25.230\nAnd then how the key's gonna get used.\n\n373\n00:17:25.230 --> 00:17:28.550\nWho's allowed to actually use the key,\nI'll just keep that same user for now.\n\n374\n00:17:28.550 --> 00:17:29.857\nWe're gonna talk more about\nthese user accounts later.\n\n375\n00:17:29.857 --> 00:17:33.986\nAnd then, here's my key policy,\nwho's allowed to use the key and\n\n376\n00:17:33.986 --> 00:17:35.623\nwho's allowed to see it.\n\n377\n00:17:35.623 --> 00:17:40.600\nSo it's gonna whip that up and it's gonna\ngenerate that key for me, and there it is.\n\n378\n00:17:40.600 --> 00:17:42.130\nSo it just built the key.\n\n379\n00:17:42.130 --> 00:17:46.252\nNow notice how this key was entirely\nbuilt in Amazon's system, right.\n\n380\n00:17:46.252 --> 00:17:48.527\nThat's what we're still\ntrusting Amazon to do this.\n\n381\n00:17:48.527 --> 00:17:53.042\nSo they do kinda leave it up to you,\nyou can generate your own keys and\n\n382\n00:17:53.042 --> 00:17:58.290\nyour own encryption and do it on your own\nin your own OS, or we can do it this way.\n\n383\n00:17:58.290 --> 00:17:59.427\nNow I will throw out one caveat.\n\n384\n00:17:59.427 --> 00:18:05.267\nWhen you use their keys like this and\nyou apply encryption like my EBS one here,\n\n385\n00:18:05.267 --> 00:18:10.155\nright, they won't let you do that\non like a EC2 Micro instance.\n\n386\n00:18:10.155 --> 00:18:14.032\nOr even a small instance,\nI think there's a minimum threshold.\n\n387\n00:18:14.032 --> 00:18:18.356\nI wanna say it's like an M3,\none of the medium instances,\n\n388\n00:18:18.356 --> 00:18:20.441\nthat is where they start it.\n\n389\n00:18:20.441 --> 00:18:22.688\nAnd that's cuz it takes CPU cycles, and\n\n390\n00:18:22.688 --> 00:18:25.660\nthose CPU cycles count\nagainst your instance.\n\n391\n00:18:25.660 --> 00:18:29.177\nSo now if I'm doing encryption on the fly,\neven though Amazon's providing it,\n\n392\n00:18:29.177 --> 00:18:31.920\nI still need to make sure I've\nchosen a virtual machine that has\n\n393\n00:18:31.920 --> 00:18:34.476\nthe infrastructure to be able\nto handle that encryption.\n\n394\n00:18:34.476 --> 00:18:35.915\nThat's kind of an important piece.\n\n395\n00:18:35.915 --> 00:18:38.698\n>> Yeah, it's nice that they provide that\nfunctionality right there with inside of\n\n396\n00:18:38.698 --> 00:18:39.315\nthe AWS console.\n\n397\n00:18:39.315 --> 00:18:42.707\nJust go in there, create what we need,\napply it as we need it, and\n\n398\n00:18:42.707 --> 00:18:46.618\nthen move along accordingly and\nyou can administrate, all from one stop.\n\n399\n00:18:46.618 --> 00:18:49.520\nThat's always a nice thing,\nhaving that one stop console.\n\n400\n00:18:49.520 --> 00:18:53.092\nNow Don,\nI was looking at your screen there,\n\n401\n00:18:53.092 --> 00:18:58.173\nwe've talked a lot about of\ndifferent ways and types of the IAM.\n\n402\n00:18:58.173 --> 00:19:01.820\nBut we also had the users and roles and\nyou mention a little bit about that.\n\n403\n00:19:01.820 --> 00:19:05.752\nIf I got a user account and I can log in,\nI can do everything I want to do,\n\n404\n00:19:05.752 --> 00:19:09.610\nwhy would I even need to mess with or\nbother with those things?\n\n405\n00:19:09.610 --> 00:19:10.855\n>> It's the best part of IAM.\n\n406\n00:19:10.855 --> 00:19:14.300\nI remember, I know,\nwhy didn't we talk about this first?\n\n407\n00:19:14.300 --> 00:19:18.052\nI remember when IAM first released to\nthe public, became a common feature, and\n\n408\n00:19:18.052 --> 00:19:19.733\nI was so excited to get it deployed.\n\n409\n00:19:19.733 --> 00:19:23.790\nBecause they really made it super\neasy to dole out permissions and\n\n410\n00:19:23.790 --> 00:19:25.202\ncreate granularity.\n\n411\n00:19:25.202 --> 00:19:27.741\nAnd it's through these users and\ngroups and so on, so\n\n412\n00:19:27.741 --> 00:19:29.499\nlet's talk briefly about each one.\n\n413\n00:19:29.499 --> 00:19:34.480\nSo if we take a look at Users, here's\nwhere I can start to create user accounts.\n\n414\n00:19:34.480 --> 00:19:36.200\nAnd this would be what\nI'm doling out to people.\n\n415\n00:19:36.200 --> 00:19:38.920\nSo if I have a help desk staff,\nI've got five people on help desk, and\n\n416\n00:19:38.920 --> 00:19:41.670\nI want them to be able to log in and\njust monitor the servers,\n\n417\n00:19:41.670 --> 00:19:44.970\nI would create each of\nthem a user account here.\n\n418\n00:19:44.970 --> 00:19:48.791\nNow, each user gets their own set\nof credentials, that's the power.\n\n419\n00:19:48.791 --> 00:19:51.891\nIf one employee quits,\nI just disable their account.\n\n420\n00:19:51.891 --> 00:19:54.596\nThe other people work like normal,\nno big deal.\n\n421\n00:19:54.596 --> 00:19:58.337\nIf we were all sharing a key,\nwhen one employee quits I gotta go and\n\n422\n00:19:58.337 --> 00:20:00.865\nchange the key, everybody gets affected.\n\n423\n00:20:00.865 --> 00:20:03.006\nSo having separate user\naccounts is really powerful and\n\n424\n00:20:03.006 --> 00:20:05.247\nthis is definitely something\nyou'll take advantage of.\n\n425\n00:20:05.247 --> 00:20:06.953\nYou just come in and\ncreate as many users as you want.\n\n426\n00:20:06.953 --> 00:20:11.190\nSo I might create a user for Daniel,\nso I'll create a dlowrie account.\n\n427\n00:20:11.190 --> 00:20:13.722\nAnd I'll generate an access key for him.\n\n428\n00:20:13.722 --> 00:20:19.423\nAnd when I go and create that, I can view\nhis key right there, so there's his key.\n\n429\n00:20:19.423 --> 00:20:22.303\nAnd again, I know what you're thinking,\nlike wait a minute.\n\n430\n00:20:22.303 --> 00:20:25.880\nDon, you're showing the key on screen,\nthat's a problem.\n\n431\n00:20:25.880 --> 00:20:27.550\nWell, it really isn't, right?\n\n432\n00:20:27.550 --> 00:20:29.267\nYes, this is an access\nkey that he can use, and\n\n433\n00:20:29.267 --> 00:20:31.000\nyes it's valid right now\nat this very moment.\n\n434\n00:20:31.000 --> 00:20:35.399\nBut, I haven't really given\nhim permission to do anything.\n\n435\n00:20:35.399 --> 00:20:38.681\nSo if you were to write this key down\nright now and try and login as him,\n\n436\n00:20:38.681 --> 00:20:42.520\nall you'd be able to do is view\nthe status of his account, and that's it.\n\n437\n00:20:42.520 --> 00:20:45.730\nThat's the cool part about users, they\nhave no access until I give them access.\n\n438\n00:20:45.730 --> 00:20:47.890\nAnd we can make it very specific,\n\n439\n00:20:47.890 --> 00:20:51.822\nwhere each user has a different\nset of access than another one.\n\n440\n00:20:51.822 --> 00:20:56.397\nAnd then two users have a different\nexperience, so limited by what their\n\n441\n00:20:56.397 --> 00:21:00.600\nrole is, that principle of least\nprivilege I mentioned earlier.\n\n442\n00:21:00.600 --> 00:21:03.097\nSo I'm not gonna download it so it's\ngonna get mad at me, but there we go, so\n\n443\n00:21:03.097 --> 00:21:03.927\nnow I've got a dlowrie.\n\n444\n00:21:03.927 --> 00:21:09.387\nNow, when I look at my users and I see\nthat dlowrie right there, notice Groups,\n\n445\n00:21:09.387 --> 00:21:13.890\n0, no password set, password not used,\n1 active access key.\n\n446\n00:21:13.890 --> 00:21:17.750\nI get some quick basic stats and that 0\ngroups thing is kind of important to me.\n\n447\n00:21:17.750 --> 00:21:22.250\nThat means that this user\nwill only have access if\n\n448\n00:21:22.250 --> 00:21:26.652\nit's been specifically\ngranted to this user.\n\n449\n00:21:26.652 --> 00:21:27.257\nAnd we can do that.\n\n450\n00:21:27.257 --> 00:21:33.610\nI can say, I want Daniel to be able to\nupload and delete files from an S3 bucket.\n\n451\n00:21:33.610 --> 00:21:38.130\nSo I'm gonna go and\ngrant him those privileges, right to him.\n\n452\n00:21:38.130 --> 00:21:40.595\nBut what happens if next week I say boy,\n\n453\n00:21:40.595 --> 00:21:45.248\nI don't know if Daniel's just bad at\nhis job or if he's got too much work.\n\n454\n00:21:45.248 --> 00:21:46.247\nHe's not getting stuff done.\n\n455\n00:21:46.247 --> 00:21:49.770\nI need to hire a second person\nto help manage that S3 bucket.\n\n456\n00:21:49.770 --> 00:21:53.476\nAnd so I hire somebody else and\nI wanna give them the same privileges.\n\n457\n00:21:53.476 --> 00:21:56.945\nWell now I've gotta look at\nthe privileges I gave Daniel, and\n\n458\n00:21:56.945 --> 00:22:01.225\nI've gotta copy them over or just redo\nthem from scratch from this new user.\n\n459\n00:22:01.225 --> 00:22:04.304\nIt's kind of lot of work I gotta go\nthrough because I assigned permissions\n\n460\n00:22:04.304 --> 00:22:05.255\ndirectly to the user.\n\n461\n00:22:05.255 --> 00:22:08.691\nSo Amazon recommends you don't\nassign permissions to user at all,\n\n462\n00:22:08.691 --> 00:22:09.663\nanywhere, ever.\n\n463\n00:22:09.663 --> 00:22:13.830\nAnd instead,\nwe assign the permissions to a group.\n\n464\n00:22:13.830 --> 00:22:18.389\nWhen we assigned permissions to a group,\nyou can take users and move them in and\n\n465\n00:22:18.389 --> 00:22:21.030\nout of a group and\nthey get those privileges.\n\n466\n00:22:21.030 --> 00:22:22.529\nWe don't have to reinvent the wheel.\n\n467\n00:22:22.529 --> 00:22:27.950\nSo if I needed an S3 bucket admin, I could\ncreate a group called S3 bucket admin.\n\n468\n00:22:27.950 --> 00:22:30.970\nGive it all the permissions,\ntake Daniel and put him in there and\n\n469\n00:22:30.970 --> 00:22:32.145\nnow he's got the access.\n\n470\n00:22:32.145 --> 00:22:35.720\nAnd when I hire another S3 bucket admin\nI can just throw them in the same group.\n\n471\n00:22:35.720 --> 00:22:37.730\nAnd now they get the access,\nI don't have to reinvent the wheel.\n\n472\n00:22:37.730 --> 00:22:41.156\nAnd as I add new buckets, I can just\ncontinue to give those permissions\n\n473\n00:22:41.156 --> 00:22:44.130\nto the group and I don't have\nto edit every individual user.\n\n474\n00:22:44.130 --> 00:22:47.495\nAnd if a user changes their job role,\nI can just move them out of the group and\n\n475\n00:22:47.495 --> 00:22:48.947\nmove it to another one, right?\n\n476\n00:22:48.947 --> 00:22:52.300\nAnd you guys might have noticed when I\nlogged into the IAM dashboard here, and\n\n477\n00:22:52.300 --> 00:22:55.357\nit's giving me their best practices,\nright, the security status.\n\n478\n00:22:55.357 --> 00:23:00.268\nYou'll notice that one of the entries\nhere is, Create individual IAM users, and\n\n479\n00:23:00.268 --> 00:23:02.704\nthen Use groups to assign permissions.\n\n480\n00:23:02.704 --> 00:23:03.771\nThose two go hand in hand.\n\n481\n00:23:03.771 --> 00:23:06.190\nCreate the users, put them into groups.\n\n482\n00:23:06.190 --> 00:23:10.066\nSo when we're looking at it, we've got\nusers right here and groups above it.\n\n483\n00:23:10.066 --> 00:23:11.703\nAnd I get this question from time to time.\n\n484\n00:23:11.703 --> 00:23:15.337\nWhy did Amazon choose to put Groups\nat the top and Users beneath it?\n\n485\n00:23:15.337 --> 00:23:20.480\nAnd the reason is, I only go into\nUsers when I hire a new employee.\n\n486\n00:23:20.480 --> 00:23:23.522\nThat's the only time I come here, or\nfire somebody, right, you gotta enable or\n\n487\n00:23:23.522 --> 00:23:24.484\ndisable their account.\n\n488\n00:23:24.484 --> 00:23:27.723\nBut I go into Groups every\ntime I change permissions.\n\n489\n00:23:27.723 --> 00:23:29.875\nAnd you'll find that you\nchange permissions, well,\n\n490\n00:23:29.875 --> 00:23:32.700\nmaybe you change permissions more\noften than you hire and fire people.\n\n491\n00:23:32.700 --> 00:23:36.670\nSo that's why they put that one first.\n\n492\n00:23:36.670 --> 00:23:39.274\nBut under Groups, I can create\nthose groups, give it a name, so\n\n493\n00:23:39.274 --> 00:23:41.120\nI might have my s3bucket-admins, right?\n\n494\n00:23:41.120 --> 00:23:45.372\nJust something that I can remember\nwhat the purpose is, what it's for.\n\n495\n00:23:45.372 --> 00:23:48.510\nAnd then I can move forward and\nI can start to do security policies.\n\n496\n00:23:48.510 --> 00:23:51.200\nWe're gonna do security policies later,\nso I'll just get past that.\n\n497\n00:23:51.200 --> 00:23:52.623\nAnd then I can create the group.\n\n498\n00:23:52.623 --> 00:23:56.230\nAnd now that the group is created,\nI can start to put people in there.\n\n499\n00:23:56.230 --> 00:23:58.192\nAnd we can do it a few different ways.\n\n500\n00:23:58.192 --> 00:24:01.310\nWe'll see it later but if I click on that,\nI'll get Add Users to Groups and\n\n501\n00:24:01.310 --> 00:24:03.137\nI can start filling people in, all right?\n\n502\n00:24:03.137 --> 00:24:06.204\nAll of this is gonna tie together\nto one big security policy so\n\n503\n00:24:06.204 --> 00:24:08.381\nI'm gonna hold off adding much more to it.\n\n504\n00:24:08.381 --> 00:24:10.219\nI just wanna kinda go over\nthe components right now.\n\n505\n00:24:10.219 --> 00:24:12.467\nAll right, so that's Users and Groups.\n\n506\n00:24:12.467 --> 00:24:15.257\nAnother one that's really confusing,\nRoles.\n\n507\n00:24:15.257 --> 00:24:17.713\nRoles, from a Microsoft world,\n\n508\n00:24:17.713 --> 00:24:21.932\nthere's not much difference\nbetween a role and a group.\n\n509\n00:24:21.932 --> 00:24:23.592\nA role is like a job role.\n\n510\n00:24:23.592 --> 00:24:26.320\nWell my job role might\nbe an S3 bucket admin.\n\n511\n00:24:26.320 --> 00:24:28.120\nThat's my job,\nthat's what I do, it's my role.\n\n512\n00:24:28.120 --> 00:24:31.900\nBut I made a group called S3 Bucket Admin,\nthis is my group too so\n\n513\n00:24:31.900 --> 00:24:33.450\nwhat's the difference?\n\n514\n00:24:34.670 --> 00:24:37.369\nWell, in Amazon world,\n[LAUGH] in Amazon land,\n\n515\n00:24:37.369 --> 00:24:40.730\nthe two terms actually mean\nvery different things.\n\n516\n00:24:40.730 --> 00:24:44.694\nA group is gonna contain users that\nare right here in your account.\n\n517\n00:24:44.694 --> 00:24:48.636\nSo when I go to groups, and I go to add\nusers, I'm seeing these people right here,\n\n518\n00:24:48.636 --> 00:24:49.964\nthese users in my account.\n\n519\n00:24:49.964 --> 00:24:55.979\nBut when I go to roles,\nroles are not users in your account.\n\n520\n00:24:55.979 --> 00:24:59.519\nThey're identities that\nare outside of your account.\n\n521\n00:24:59.519 --> 00:25:00.924\nNow, what kind of\nidentities would those be?\n\n522\n00:25:00.924 --> 00:25:02.724\nCould be software, right?\n\n523\n00:25:02.724 --> 00:25:05.674\nWhen software accesses\nyour AWS account and\n\n524\n00:25:05.674 --> 00:25:10.386\ndoes it through the API, it can\nassume the identity of a role, right?\n\n525\n00:25:10.386 --> 00:25:12.025\nYour software isn't a person.\n\n526\n00:25:12.025 --> 00:25:13.609\nYour software doesn't\nhave an user account.\n\n527\n00:25:13.609 --> 00:25:16.176\nBut it needs to login,\nit needs to authenticate.\n\n528\n00:25:16.176 --> 00:25:19.612\nYou don't want just anybody to be able to\ncome into the API, so it assumes a role.\n\n529\n00:25:19.612 --> 00:25:26.010\nA role just represents a non-person,\na non-account identity.\n\n530\n00:25:26.010 --> 00:25:28.018\nSo in this case it might be software.\n\n531\n00:25:28.018 --> 00:25:31.791\nBut more commonly it's an external user.\n\n532\n00:25:31.791 --> 00:25:35.208\nSo for example, and\nwe'll talk about this one later too,\n\n533\n00:25:35.208 --> 00:25:38.360\nwe might have a Microsoft\nactive directory, right?\n\n534\n00:25:38.360 --> 00:25:40.415\nAn LDAP database, open LDAP, whatever.\n\n535\n00:25:40.415 --> 00:25:43.458\nAnd it's packed full of all of our user\naccounts that we use every single day.\n\n536\n00:25:43.458 --> 00:25:47.070\nAnd I wanna use those same\nuser accounts in AWS, right?\n\n537\n00:25:47.070 --> 00:25:48.880\nI don't want people to have\nto have a new password.\n\n538\n00:25:48.880 --> 00:25:51.706\nI want them to use their\nexisting password, so\n\n539\n00:25:51.706 --> 00:25:54.686\nwe can create a single sign on solution,\nright?\n\n540\n00:25:54.686 --> 00:25:56.764\nWe'll see the ticketing service later,\nhow this works.\n\n541\n00:25:56.764 --> 00:26:00.489\nBut basically it can tie that\nin to our LDAP environment or\n\n542\n00:26:00.489 --> 00:26:03.126\nwhatever database it is that we have, so\n\n543\n00:26:03.126 --> 00:26:08.341\nthat when users login they get a token and\nthe token represents their identity.\n\n544\n00:26:08.341 --> 00:26:11.730\nAnd that token is assigned a role which\nis how they get their privileges.\n\n545\n00:26:11.730 --> 00:26:14.940\nSo if you have external accounts\nyou'll wanna go under roles and\n\n546\n00:26:14.940 --> 00:26:16.967\nstart to create those roles right here.\n\n547\n00:26:16.967 --> 00:26:19.462\nAnd that's what you'll assign\npermissions to, right?\n\n548\n00:26:19.462 --> 00:26:23.832\nBut if you're not using external accounts\nthen you actually just completely ignore\n\n549\n00:26:23.832 --> 00:26:25.070\nroles and never use it.\n\n550\n00:26:25.070 --> 00:26:27.542\nThat's very common,\na lot of people don't use it.\n\n551\n00:26:27.542 --> 00:26:31.077\nBut if you want to integrate with\nan external user database than\n\n552\n00:26:31.077 --> 00:26:32.615\nyou certainly can do that.\n\n553\n00:26:32.615 --> 00:26:34.822\nThere's a lot of work to it,\nwe'll talk about it.\n\n554\n00:26:34.822 --> 00:26:37.538\nThe exam doesn't expect you to be able\nto do it all from scratch or anything.\n\n555\n00:26:37.538 --> 00:26:39.140\nThey just want you to\nunderstand the concept.\n\n556\n00:26:39.140 --> 00:26:42.379\nAll right, I'm leaving one out, policies.\n\n557\n00:26:42.379 --> 00:26:44.817\nPolicies are really important.\n\n558\n00:26:44.817 --> 00:26:48.598\nIf I create users and\nI put them in groups, that's great, but\n\n559\n00:26:48.598 --> 00:26:49.707\nwhat can they do?\n\n560\n00:26:49.707 --> 00:26:51.298\nAnd the short answer to that is nothing.\n\n561\n00:26:51.298 --> 00:26:52.713\nThey can't do anything, right?\n\n562\n00:26:52.713 --> 00:26:57.980\nUntil we give them the permissions they\nneed, and policies are how we do that.\n\n563\n00:26:57.980 --> 00:26:58.952\nI created a group called S3 Bucket Admins.\n\n564\n00:26:58.952 --> 00:27:02.736\nThe name would imply that they can\ndo whatever they want in S3, but\n\n565\n00:27:02.736 --> 00:27:06.672\nI need to create a policy that\nactually gives them those privileges.\n\n566\n00:27:06.672 --> 00:27:09.054\nAnd so we'll take a look at\nhow to create policies and\n\n567\n00:27:09.054 --> 00:27:11.067\nhow to put them in place\nin another episode.\n\n568\n00:27:11.067 --> 00:27:15.057\nBut basically you specify here's what\nthey're allowed to do in S3, here's what\n\n569\n00:27:15.057 --> 00:27:18.876\nthey're allowed to do in EC2, here's\nwhat they're not allowed to do in RDS,\n\n570\n00:27:18.876 --> 00:27:20.996\nyou can allow and\nyou can deny permissions.\n\n571\n00:27:20.996 --> 00:27:25.581\nSo, you set that up exactly how you\nwant your S3 Bucket Admins to be and\n\n572\n00:27:25.581 --> 00:27:28.160\nthen you assign that policy to a group.\n\n573\n00:27:28.160 --> 00:27:32.911\nYou put the users in the group and now the\nusers get the permissions from the policy.\n\n574\n00:27:32.911 --> 00:27:35.709\nSo users go into a group,\ngroup gets a policy.\n\n575\n00:27:35.709 --> 00:27:40.638\nOr users get assigned to a role, now the\nusers would be external at that point, and\n\n576\n00:27:40.638 --> 00:27:42.932\nthe role gets a policy assigned to it.\n\n577\n00:27:42.932 --> 00:27:46.546\nSo the policies are really kind of key no\nmatter where that user is coming from.\n\n578\n00:27:46.546 --> 00:27:48.624\nThis is how we actually get\nthe permissions we use.\n\n579\n00:27:48.624 --> 00:27:51.940\n>> Very cool and Don you've kind\nof been going over this and\n\n580\n00:27:51.940 --> 00:27:56.047\nshowing us when would be using this,\nwhen would we not be using this?\n\n581\n00:27:56.047 --> 00:27:58.603\n>> All right, I always try and use this.\n\n582\n00:27:58.603 --> 00:28:02.620\nIf ever I can I use IAM\nto manage my permissions.\n\n583\n00:28:02.620 --> 00:28:05.010\nCuz it's nice to have one place to go.\n\n584\n00:28:05.010 --> 00:28:08.327\nIf I have a user whose having\na problem accessing S3, or\n\n585\n00:28:08.327 --> 00:28:12.296\nI have a user whose having a problem\nconnecting to an RDS database.\n\n586\n00:28:12.296 --> 00:28:14.706\nI wanna just be able to go\nto one place and see it, and\n\n587\n00:28:14.706 --> 00:28:17.637\ngoing into the IAM policies is\nusually the best way to do that.\n\n588\n00:28:17.637 --> 00:28:20.144\nBut some of the services\nhave their own stuff.\n\n589\n00:28:20.144 --> 00:28:24.650\nSo for example, if you go into Amazon S3,\nlike here, let me show you.\n\n590\n00:28:24.650 --> 00:28:29.515\nSo here in my account, I've got my account\npolicies, but if I go back to my dashboard\n\n591\n00:28:29.515 --> 00:28:34.272\nand I go into S3, and inside of S3 I pick\na bucket, which fortunately I have one.\n\n592\n00:28:34.272 --> 00:28:36.769\nInside of the bucket I\ncan go to permissions and\n\n593\n00:28:36.769 --> 00:28:40.553\nyou'll see right here in the bucket\nI can add a bucket policy, right?\n\n594\n00:28:40.553 --> 00:28:46.158\nThe bucket policy can't do anything\nthat the IAM policy can't do also.\n\n595\n00:28:46.158 --> 00:28:47.298\nThey both do the same thing.\n\n596\n00:28:47.298 --> 00:28:50.233\nThe difference here is it's assigned\nto this bucket specifically.\n\n597\n00:28:50.233 --> 00:28:54.203\nSo now, if a user has a problem\naccessing a bucket, I've gotta look at\n\n598\n00:28:54.203 --> 00:28:58.060\nmy IAM policies and I gotta come here and\nlook at these policies too.\n\n599\n00:28:58.060 --> 00:28:59.140\nIt's a headache.\n\n600\n00:28:59.140 --> 00:29:03.316\nWell, these are the old ones that existed\nbefore we had the IAM policies, so\n\n601\n00:29:03.316 --> 00:29:07.568\nyou might have some of those in your\nenvironment, but ideally, you don't.\n\n602\n00:29:07.568 --> 00:29:09.897\nIdeally you don't have a bucket\npolicy here at all and\n\n603\n00:29:09.897 --> 00:29:12.085\neverything's been done\nback under the IAM sign.\n\n604\n00:29:12.085 --> 00:29:14.500\nNow there's still sometimes where\nyou might choose to use these.\n\n605\n00:29:14.500 --> 00:29:17.018\nBut that's an example of where\nthose policies might be spread out.\n\n606\n00:29:17.018 --> 00:29:20.060\nI want to use the centralized\nIAM policies to do this,\n\n607\n00:29:20.060 --> 00:29:21.963\nI don't wanna have to come here.\n\n608\n00:29:21.963 --> 00:29:27.268\nBut there are times where we're\nnot gonna use IAM policies.\n\n609\n00:29:27.268 --> 00:29:31.726\nIAM is not magic, it can't protect\neverything in your entire environment.\n\n610\n00:29:31.726 --> 00:29:37.151\nSo for example, it might control access\nto say who can get to an EC2 instance.\n\n611\n00:29:37.151 --> 00:29:41.391\nSo I could create an IAM policy that\nsaid Daniel is allowed to login to this\n\n612\n00:29:41.391 --> 00:29:45.579\nparticular EC2 instance or he can\nstart it up and shut it down, right?\n\n613\n00:29:45.579 --> 00:29:46.612\nI can give him that access.\n\n614\n00:29:46.612 --> 00:29:50.199\nI can restrict his access to\ndelete the instance, okay.\n\n615\n00:29:50.199 --> 00:29:51.766\nSo I can do that with IAM.\n\n616\n00:29:51.766 --> 00:29:54.590\nBut, if Daniel can log in to the instance,\n\n617\n00:29:54.590 --> 00:29:58.675\nI can't stop him from deleting\nfiles inside of the instance.\n\n618\n00:29:58.675 --> 00:30:02.906\nI can't stop him from installing\nmalicious software on the instance.\n\n619\n00:30:02.906 --> 00:30:07.620\nIAM does not see inside of your\nvirtual machines, it doesn't see that.\n\n620\n00:30:07.620 --> 00:30:12.174\nIt doesn't see inside of your database, so\nto the individual tables or cells, right?\n\n621\n00:30:12.174 --> 00:30:17.476\nIt's up to you to secure those with the\nsoftware features provided by that system.\n\n622\n00:30:17.476 --> 00:30:20.452\nSo if it's a Linux server,\nI might go into the user accounts and\n\n623\n00:30:20.452 --> 00:30:23.329\nput Daniel in a group that only\ngives him the access he needs.\n\n624\n00:30:23.329 --> 00:30:26.266\nAnd I might restrict his\nability to install software.\n\n625\n00:30:26.266 --> 00:30:29.900\nIf it's a database, I can go and\nI can set up constraints, or triggers, or\n\n626\n00:30:29.900 --> 00:30:33.599\nall sorts of permissions inside of\nwhatever database software I'm using,\n\n627\n00:30:33.599 --> 00:30:36.620\nto limit the data he's\nallowed to change there.\n\n628\n00:30:36.620 --> 00:30:40.673\nSo IAM is not always the solution,\nit's usually part of the solution.\n\n629\n00:30:40.673 --> 00:30:43.558\nBut then we gotta combine\nit with something else.\n\n630\n00:30:43.558 --> 00:30:45.751\nSo you might even choose\nnot to use IAM at all.\n\n631\n00:30:45.751 --> 00:30:48.995\nRemember there are some services,\nand I think I mentioned this before,\n\n632\n00:30:48.995 --> 00:30:52.186\nthere are some services in Amazon where\nthey give you full root access to\n\n633\n00:30:52.186 --> 00:30:53.800\nthe underlying software, right?\n\n634\n00:30:53.800 --> 00:30:59.058\nEC2 Is an example, when you spin up\na Linux instance, you have root access.\n\n635\n00:30:59.058 --> 00:31:02.823\nI ran SUDO in another show, and you were\nable to get in there and run admin stuff.\n\n636\n00:31:02.823 --> 00:31:06.990\nSo right there you're well\nbeyond what IAM can do.\n\n637\n00:31:06.990 --> 00:31:09.705\nSome of the other ones, this is,\nI'm gonna just kinda mention this,\n\n638\n00:31:09.705 --> 00:31:11.697\nsomething you might want to remember for\nthe exam.\n\n639\n00:31:11.697 --> 00:31:16.904\nSo EC2 you can get root access on elastic\nbean stalk, all elastic bean stalk is,\n\n640\n00:31:16.904 --> 00:31:21.894\nis multiple EC2 instances strung\ntogether in a particular configuration.\n\n641\n00:31:21.894 --> 00:31:23.809\nSo you can get root access there also.\n\n642\n00:31:23.809 --> 00:31:27.757\nOps work,\nthe automation package that we have for\n\n643\n00:31:27.757 --> 00:31:33.400\ndoing orchestration and deployments,\nit very much like EBS, right?\n\n644\n00:31:33.400 --> 00:31:37.043\nIt's kind of a replacement for the elastic\nbean stalk, I shouldn't say EBS.\n\n645\n00:31:37.043 --> 00:31:40.135\nBut anyhow, that one ops work,\nyou can get full root\n\n646\n00:31:40.135 --> 00:31:44.858\naccess to the underlying layer and\nelastic map reduce, that's the other one.\n\n647\n00:31:44.858 --> 00:31:50.559\nThose four, elastic map reduce,\nops work, EC2, and elastic bean stalk.\n\n648\n00:31:50.559 --> 00:31:55.201\nYou can get root access to the underlying\ninfrastructure and in that scenario,\n\n649\n00:31:55.201 --> 00:31:58.744\nIAM can't protect what's going\non inside of that, right?\n\n650\n00:31:58.744 --> 00:31:59.766\nInside of that platform.\n\n651\n00:31:59.766 --> 00:32:02.257\nAnd so you're gonna need\nsomething else to secure it and\n\n652\n00:32:02.257 --> 00:32:04.324\nyou're gonna need to not be an idiot,\nright?\n\n653\n00:32:04.324 --> 00:32:05.943\n>> [LAUGH]\n>> Not make things weak and\n\n654\n00:32:05.943 --> 00:32:07.961\ninsecure when you're in\nthere working with it.\n\n655\n00:32:07.961 --> 00:32:09.585\nYou've gotta deploy more.\n\n656\n00:32:09.585 --> 00:32:14.588\nSo IAM is not 100% of the solution, but\nit is a piece of it, a big part of it.\n\n657\n00:32:14.588 --> 00:32:15.505\n>> Yeah, very, very cool.\n\n658\n00:32:15.505 --> 00:32:17.130\nNow Don,\nI'm taking a look at our clock here.\n\n659\n00:32:17.130 --> 00:32:20.630\nI know we're just now really getting\ninto the nitty gritty of using IAM and\n\n660\n00:32:20.630 --> 00:32:22.053\nthe components inside of it.\n\n661\n00:32:22.053 --> 00:32:23.959\nBut we're going to have to call this,\n\n662\n00:32:23.959 --> 00:32:26.351\nI know you've got plenty\nmore to cover though.\n\n663\n00:32:26.351 --> 00:32:29.821\n>> Yeah, we've talked about the concepts,\nwhich are really important, right?\n\n664\n00:32:29.821 --> 00:32:31.924\nI mean, that's really what you\nneed to know for the exam, but\n\n665\n00:32:31.924 --> 00:32:33.227\nI want to show you guys this in action.\n\n666\n00:32:33.227 --> 00:32:35.419\nSo I want to show you creating some users,\nthrowing them in a group,\n\n667\n00:32:35.419 --> 00:32:37.625\nassigning a policy, you know,\ngetting the permissions enacted.\n\n668\n00:32:37.625 --> 00:32:39.297\nSo, well do that in the next episode.\n\n669\n00:32:39.297 --> 00:32:42.516\n>> Yeah, that'll be fun, so hang in there\nwith us and we'll do a part two to this,\n\n670\n00:32:42.516 --> 00:32:45.181\nand that's where all the really\ngood stuff Don's gonna show us.\n\n671\n00:32:45.181 --> 00:32:46.214\nIt's gonna be in that episode.\n\n672\n00:32:46.214 --> 00:32:48.849\nBut watch this one as well,\nbecause this builds up to that.\n\n673\n00:32:48.849 --> 00:32:51.438\nThat being said, we'll go ahead and\nclose this show down.\n\n674\n00:32:51.438 --> 00:32:53.980\nSigning off for ITProTV,\nI've been your host Daniel Lowry.\n\n675\n00:32:53.980 --> 00:32:54.933\n>> And I'm Don Pezet.\n\n676\n00:32:54.933 --> 00:32:56.499\n>> And we'll see you next time.\n\n677\n00:32:56.499 --> 00:33:03.190\n[MUSIC]\n\n",
          "vimeoId": "146522883"
        },
        {
          "description": "In this episode, Daniel and Don continue explaining different Identity and Access Management(IAM) components, specifically access methods. The next access methods include using Root Keys, User Keys, and Multi-Factor authentication or MFA which adds security by increasing the number of authentication methods that must be satisfied before granting access.",
          "length": "1379",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/amazon-acsa/amazon-acsa-1-3-iam_credentials-111615-1.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/amazon-acsa/amazon-acsa-1-3-iam_credentials-111615-1-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/amazon-acsa/amazon-acsa-1-3-iam_credentials-111615-1-sm.jpg",
          "title": "IAM Credentials",
          "transcript": "WEBVTT\n\n1\n00:00:00.000 --> 00:00:10.000\n[MUSIC]\n\n2\n00:00:11.961 --> 00:00:16.672\nAll right, greetings everyone, welcome\nto another exciting episode of ITProTV.\n\n3\n00:00:16.672 --> 00:00:18.179\nI'm your host Daniel Lowrie, and\n\n4\n00:00:18.179 --> 00:00:21.507\nin this episode we're gonna continue\n[INAUDIBLE] part two of our identity and\n\n5\n00:00:21.507 --> 00:00:25.049\naccess management, looking at the AWS\nsysop certification that's out there.\n\n6\n00:00:25.049 --> 00:00:28.220\nAnd who better to help us continue\non that road is none other than Mr.\n\n7\n00:00:28.220 --> 00:00:29.411\nDon Pezet himself.\n\n8\n00:00:29.411 --> 00:00:30.540\nHow's it going today Don?\n\n9\n00:00:30.540 --> 00:00:31.590\n>> It is going great Daniel.\n\n10\n00:00:31.590 --> 00:00:34.300\nThanks for having me back for\nwell, you know, part two.\n\n11\n00:00:34.300 --> 00:00:38.950\nThere's stuff that I didn't get to in\nthe last episode that I really wanted to.\n\n12\n00:00:38.950 --> 00:00:41.640\nAnd I wanted to take a better look at the,\nIM credentials.\n\n13\n00:00:41.640 --> 00:00:46.580\nSo we got a chance to see those access\nkeys, and I think I, really quick, whipped\n\n14\n00:00:46.580 --> 00:00:50.620\none up in the show because I was running\nlow on time, but we didn't actually get to\n\n15\n00:00:50.620 --> 00:00:53.980\nsee them in use, and so I want to show you\nguys how those work, how you can use them,\n\n16\n00:00:53.980 --> 00:00:56.760\nand really Hopefully, you know, and\nhow are we going to put it to use for us?\n\n17\n00:00:56.760 --> 00:00:57.503\n>> Less talk, more do, Mr. Don.\n\n18\n00:00:57.503 --> 00:00:59.010\n[LAUGH]\n>> [LAUGH] That's right, that's right.\n\n19\n00:00:59.010 --> 00:01:01.930\nYou know, you have to make sure\nyou understand the concept.\n\n20\n00:01:01.930 --> 00:01:02.870\n>> True.\n>> Because that's\n\n21\n00:01:02.870 --> 00:01:05.370\nultimately what the exam is really\ntesting on, is the concept.\n\n22\n00:01:05.370 --> 00:01:08.510\nBut seeing them in action,\nthat really helps to drive that home.\n\n23\n00:01:08.510 --> 00:01:09.940\nAnd the exam, I love the exam.\n\n24\n00:01:09.940 --> 00:01:12.950\nI was telling Daniel before the show,\nAmazon does this great thing, they say,\n\n25\n00:01:12.950 --> 00:01:17.670\nalright, we know, a lot of stuff has\nto be done from the command line.\n\n26\n00:01:17.670 --> 00:01:18.490\nAnd all that.\n\n27\n00:01:18.490 --> 00:01:22.220\nBut we also know that you guys are just\ngonna google how to do it in real life, so\n\n28\n00:01:22.220 --> 00:01:26.800\nthey don't harp on you like writing\nmanual security policies by hand.\n\n29\n00:01:26.800 --> 00:01:27.500\nThey don't do that.\n\n30\n00:01:27.500 --> 00:01:29.910\n>> Well, in the Sysco exam, [LAUGH]\n>> It's pretty straightforward.\n\n31\n00:01:29.910 --> 00:01:31.490\nI think it's great exam.\n\n32\n00:01:31.490 --> 00:01:32.620\nAll right.\n\n33\n00:01:32.620 --> 00:01:35.850\nLet's jump back and\ntake a look at those credentials.\n\n34\n00:01:35.850 --> 00:01:40.810\nNow I mentioned how are root account when\nyou create that very first account in\n\n35\n00:01:40.810 --> 00:01:44.050\nAmazon Web Services that it's gonna\nhave a user name and a password.\n\n36\n00:01:44.050 --> 00:01:48.160\nAnd you can use that to log into the\nmanagement interface and all that right?\n\n37\n00:01:48.160 --> 00:01:51.050\nBut for all of your additional\nuser accounts that we create\n\n38\n00:01:51.050 --> 00:01:54.180\nWe oftentimes won't create a password for\nthem at all, right?\n\n39\n00:01:54.180 --> 00:01:55.390\nYou can if you want, right?\n\n40\n00:01:55.390 --> 00:01:57.490\nLet me, let me jump back in here.\n\n41\n00:01:57.490 --> 00:02:02.070\nSo if I go into my console, and I go down\nto identity and access management, and\n\n42\n00:02:02.070 --> 00:02:04.520\nI drill down into my users,\nI can start to create user accounts.\n\n43\n00:02:04.520 --> 00:02:06.940\nLike, I created one for\nDaniel Lowry right here.\n\n44\n00:02:06.940 --> 00:02:09.840\nAnd for his user account,\nyou'll see where he has no password and\n\n45\n00:02:09.840 --> 00:02:11.230\nI could jump in here and set one if.\n\n46\n00:02:11.230 --> 00:02:15.160\nAnd if I want it and we can assign\nan auto generated password if we want.\n\n47\n00:02:15.160 --> 00:02:17.740\nWe can make him have to change\nit the next time he logs in.\n\n48\n00:02:17.740 --> 00:02:22.770\nSo we've kind of got that option and we\ncan get that set and put in place right?\n\n49\n00:02:22.770 --> 00:02:28.200\nNow when we do that I could view your\ncredentials which I'm not gonna do.\n\n50\n00:02:28.200 --> 00:02:29.620\nAnd we'll just leave that out.\n\n51\n00:02:29.620 --> 00:02:33.750\nAnd we've created new, and I don't\nactually know what your password is.\n\n52\n00:02:33.750 --> 00:02:37.400\nSo I've created a password, and he could\nnow in theory, come to the web page, for\n\n53\n00:02:37.400 --> 00:02:40.042\nthe console, and\nlog in with that user name and password.\n\n54\n00:02:40.042 --> 00:02:41.050\nNow you.\n\n55\n00:02:41.050 --> 00:02:44.650\nYou might think yourself,\nthat seems like a pretty important thing.\n\n56\n00:02:44.650 --> 00:02:47.230\nWell the reality is, once you start\ncreating your infrastructure,\n\n57\n00:02:47.230 --> 00:02:49.900\nyou don't normally need people to come and\nlog into the console.\n\n58\n00:02:49.900 --> 00:02:52.610\nSure, there'll be a couple of people\nyou'll want to log into the web-based\n\n59\n00:02:52.610 --> 00:02:55.550\nconsole, but most people are gonna be\nconnecting directly to the services\n\n60\n00:02:55.550 --> 00:02:57.560\nthemselves, like logging into\nan EC2 instance and so on.\n\n61\n00:02:57.560 --> 00:03:00.680\nSo you might find that it's\nactually a very small portion\n\n62\n00:03:00.680 --> 00:03:03.830\nof your staff that needs to log\ninto the console right here.\n\n63\n00:03:03.830 --> 00:03:09.080\nSo we We can use a password for\nthat, and we can create it.\n\n64\n00:03:09.080 --> 00:03:12.270\nBut more often than not you're gonna\nfind yourself using access keys\n\n65\n00:03:12.270 --> 00:03:14.160\ninstead of passwords, all right?\n\n66\n00:03:14.160 --> 00:03:15.950\nAnd there's a few different for that,\n\n67\n00:03:15.950 --> 00:03:17.870\nbut one main reason is access\nkeys are a lot more secure.\n\n68\n00:03:17.870 --> 00:03:21.860\nThe username is actually a complex\nstring of letters and numbers,\n\n69\n00:03:21.860 --> 00:03:26.120\nand the password is an even more complex\nstring that's a hash of a password.\n\n70\n00:03:26.120 --> 00:03:28.100\nSo Access keys are a lot more restrictive.\n\n71\n00:03:28.100 --> 00:03:32.200\nYou'll see where Daniel's account\nhere already has an access key.\n\n72\n00:03:32.200 --> 00:03:34.350\nNow, why does it have an access key?\n\n73\n00:03:34.350 --> 00:03:40.870\nWell, because when I created his account\nit asked me if I wanted one, right?\n\n74\n00:03:40.870 --> 00:03:45.960\nHere, I'll create a new user and\nI'll call this itprotv-tester321.\n\n75\n00:03:45.960 --> 00:03:48.520\nAnd see how it's got generate and\naccess key for each user.\n\n76\n00:03:48.520 --> 00:03:50.550\nI don't have Have to choose that.\n\n77\n00:03:50.550 --> 00:03:52.250\nIf I don't have to choose it,\n\n78\n00:03:52.250 --> 00:03:55.360\nI can still give them a password and\nthey can log in that way.\n\n79\n00:03:55.360 --> 00:03:59.120\nBut if I want them to use the AWS\ncommand line they're not gonna be\n\n80\n00:03:59.120 --> 00:04:00.430\nable to do that very well.\n\n81\n00:04:00.430 --> 00:04:01.600\nThey really need an access key for that.\n\n82\n00:04:01.600 --> 00:04:03.950\nSo we're normally gonna\ncreate an access key for\n\n83\n00:04:03.950 --> 00:04:05.817\nthat user to be able to connect in.\n\n84\n00:04:05.817 --> 00:04:06.750\nNow.\nThe way those work.\n\n85\n00:04:06.750 --> 00:04:09.380\nLet me just go and we'll take Daniel.\n\n86\n00:04:09.380 --> 00:04:13.820\nYou know I don't actually know\nwhat your access keys secret is.\n\n87\n00:04:13.820 --> 00:04:16.240\nDo I?\nI didn't I didn't save that either.\n\n88\n00:04:16.240 --> 00:04:17.490\nSo let me show you that.\n\n89\n00:04:17.490 --> 00:04:18.800\nSo just really kind of quick and dirty.\n\n90\n00:04:18.800 --> 00:04:22.370\nThe old way that we use to, to do this\nis that we had a root access key, And\n\n91\n00:04:22.370 --> 00:04:24.290\nI'm sure that I had one at one point.\n\n92\n00:04:24.290 --> 00:04:26.280\nThe new way to do it is to create\naccess keys for each user.\n\n93\n00:04:26.280 --> 00:04:33.586\nFor Daniel,\nif I don't know his access key,\n\n94\n00:04:33.586 --> 00:04:39.356\nI can always inactivate this one and\n\n95\n00:04:39.356 --> 00:04:46.471\njust create a [INAUDIBLE]\nOnce I've go that,\n\n96\n00:04:46.471 --> 00:04:52.624\nnow I can turn those keys over to him and\n\n97\n00:04:52.624 --> 00:04:58.560\nhe can start to use them for the CLI.\n\n98\n00:04:58.560 --> 00:05:00.230\nFor the root account,\nwe can do the same thing.\n\n99\n00:05:00.230 --> 00:05:03.490\nFor like my account, for\nthe one I'm logged in with right now.\n\n100\n00:05:03.490 --> 00:05:05.240\nBut that's done from a different place,\n\n101\n00:05:05.240 --> 00:05:09.520\nyou have to go up here to your user name,\nand go to security credentials.\n\n102\n00:05:09.520 --> 00:05:12.430\nAnd it's gonna warn you cuz this\nis the old way of doing things.\n\n103\n00:05:12.430 --> 00:05:14.180\nI'm gonna continue to it though.\n\n104\n00:05:14.180 --> 00:05:17.000\nAnd right in here you can set\nthe access keys for your root account.\n\n105\n00:05:17.000 --> 00:05:19.500\nSo if you wanted to find one here,\nyou can and\n\n106\n00:05:19.500 --> 00:05:22.240\nyou're going to have full access to the\nsystem to do whatever the heck you want.\n\n107\n00:05:22.240 --> 00:05:23.580\nRight?\nYou can really get in there and\n\n108\n00:05:23.580 --> 00:05:24.170\ncause some damage.\n\n109\n00:05:24.170 --> 00:05:27.880\nI'm just for show here I'll create a new\none and let me download that one too.\n\n110\n00:05:27.880 --> 00:05:32.810\nAnd I'm downloading this one\nbecause I need a, notice here\n\n111\n00:05:32.810 --> 00:05:37.820\nI don't have a user name tied to it and\nthat's because this is my A root account.\n\n112\n00:05:37.820 --> 00:05:41.470\nRoot account doesn't technically have\na username, it's tied to my email address,\n\n113\n00:05:41.470 --> 00:05:44.560\nbut it's just giving me the access\nkey ID and the secret key.\n\n114\n00:05:44.560 --> 00:05:46.280\nDaniel's was the same way, right?\n\n115\n00:05:46.280 --> 00:05:48.850\nWhen I looked at his,\nit had his username that I assigned,\n\n116\n00:05:48.850 --> 00:05:52.330\nas well as his access key and\nhis secret, right?\n\n117\n00:05:52.330 --> 00:05:58.610\nNow, either one of these can\nbe used from the Command line.\n\n118\n00:05:58.610 --> 00:06:02.540\nSo if I jump over to a terminal for\nexample, I could run aws configure and\n\n119\n00:06:02.540 --> 00:06:06.150\nit's gonna prompt me for\nwhat my access key id is.\n\n120\n00:06:06.150 --> 00:06:08.790\nAnd I'll just paste in\nthat access key id and\n\n121\n00:06:08.790 --> 00:06:10.640\nnow it's going to ask me for my secret.\n\n122\n00:06:10.640 --> 00:06:13.540\nSo I'll come over here and copy that one.\n\n123\n00:06:13.540 --> 00:06:18.510\nAnd I'll, I'll pace that one, there we go.\n\n124\n00:06:18.510 --> 00:06:21.100\nAnd then it's just gonna ask me for my\ndefault region and my default output, and\n\n125\n00:06:21.100 --> 00:06:21.780\nI'm gonna go to text.\n\n126\n00:06:21.780 --> 00:06:26.360\nYou can go HTML, JSON or whatever it is\nthat you wanna use for that output format.\n\n127\n00:06:26.360 --> 00:06:27.740\nThere's a few different options.\n\n128\n00:06:27.740 --> 00:06:28.820\nBut I'll stick with that.\n\n129\n00:06:28.820 --> 00:06:31.670\nRight?\nNow, I've got that access key tied to\n\n130\n00:06:31.670 --> 00:06:32.560\nmy command line.\n\n131\n00:06:32.560 --> 00:06:39.440\nAnd so I can start to issue commands\nEnds to perform actions, right.\n\n132\n00:06:39.440 --> 00:06:44.030\nFor example,\nif I wanna create a new Amazon S3 bucket.\n\n133\n00:06:44.030 --> 00:06:44.590\nRight.\nWell,\n\n134\n00:06:44.590 --> 00:06:47.100\nI know that I could go\nhere into the webuli.\n\n135\n00:06:47.100 --> 00:06:49.040\nAnd I could go down to S3.\n\n136\n00:06:49.040 --> 00:06:52.300\nAnd inside of S3, I could use the giant\ncreate bucket button right there.\n\n137\n00:06:52.300 --> 00:06:55.400\nAnd that works great if we just\nwant to do something one time.\n\n138\n00:06:55.400 --> 00:06:57.500\nBut if we want to do it\nprogrammatically hundreds of times,\n\n139\n00:06:57.500 --> 00:07:00.110\nI need to automate that,\nI need to script it,\n\n140\n00:07:00.110 --> 00:07:03.040\nand using my access keys are gonna\nbe a better way to do it.\n\n141\n00:07:03.040 --> 00:07:06.330\nSo here, you can see I've got bucket1,\nbucket2.\n\n142\n00:07:06.330 --> 00:07:10.862\nIf I want to make bucket3,\nI can just say aws s3 make bucket, and\n\n143\n00:07:10.862 --> 00:07:14.700\nthen I I can give it a name like this.\n\n144\n00:07:14.700 --> 00:07:15.200\nThere we go.\n\n145\n00:07:16.780 --> 00:07:20.020\nAnd it's going to reach out and\nit's going to make it.\n\n146\n00:07:20.020 --> 00:07:22.800\nAnd there it goes, it made a bucket,\nor I assume it did.\n\n147\n00:07:22.800 --> 00:07:25.680\nWe can always go, I could do a list\nbucket or I can go back here and\n\n148\n00:07:25.680 --> 00:07:27.110\njust kind of refresh this screen.\n\n149\n00:07:27.110 --> 00:07:30.190\nAnd oops, that's not what I,\nWhat I meant to do.\n\n150\n00:07:30.190 --> 00:07:32.940\nThere is a nice little refresh\nbutton I could have hit but\n\n151\n00:07:32.940 --> 00:07:36.070\nI guess this will work too.\n\n152\n00:07:36.070 --> 00:07:37.110\nAnd there's bucket three.\n\n153\n00:07:37.110 --> 00:07:39.460\nNow I'm in here and\nI'm creating those resources.\n\n154\n00:07:39.460 --> 00:07:43.280\nI'm using access keys gain access and\nthis is what most of us are going to use.\n\n155\n00:07:43.280 --> 00:07:46.300\nThis is a great way to gain access\nto be able to work with the system.\n\n156\n00:07:46.300 --> 00:07:49.470\nAnd the cool part here is if\nwe're doing it per user you\n\n157\n00:07:49.470 --> 00:07:54.140\ncan revoke an The individual users key and\nit doesn't affect all the others.\n\n158\n00:07:54.140 --> 00:07:56.670\nVersus if I revoke that root key\nthat's a bigger challenge, right?\n\n159\n00:07:56.670 --> 00:07:59.774\nAnd let me just show you that revoke\nbecause I probably need to do that\n\n160\n00:07:59.774 --> 00:08:02.503\nanyway since the world now has\nmy root key which is awesome.\n\n161\n00:08:02.503 --> 00:08:05.001\nSo if I go back under\nsecurity credentials, and\n\n162\n00:08:05.001 --> 00:08:07.378\nactually it should be\nwarning me about that.\n\n163\n00:08:07.378 --> 00:08:10.422\nIf I go to IAM There we go.\n\n164\n00:08:10.422 --> 00:08:11.796\nDelete your root access key.\n\n165\n00:08:11.796 --> 00:08:14.592\nSee I got a nice little warning, that I\nshouldn't have a root access key anyway.\n\n166\n00:08:14.592 --> 00:08:19.132\nAnd so if I go in here and\nI go right back into my access keys,\n\n167\n00:08:19.132 --> 00:08:23.052\nI can find that root key and\nI can make it inactive.\n\n168\n00:08:23.052 --> 00:08:26.246\nAnd the way we make it inactive is you've\ngot that link right there to make it\n\n169\n00:08:26.246 --> 00:08:28.900\ninactive, which I just did, and\nyou can outright delete it.\n\n170\n00:08:28.900 --> 00:08:30.563\nNow, I don't wanna have\nmine around anymore, so\n\n171\n00:08:30.563 --> 00:08:31.801\nI'm gonna delete that out of there.\n\n172\n00:08:31.801 --> 00:08:33.634\nAnd now it's gone, okay.\n\n173\n00:08:33.634 --> 00:08:36.551\nNow, once it's gone,\nthat takes effect immediately.\n\n174\n00:08:36.551 --> 00:08:39.775\nIf I go back to my shell here and\nI try to make another bucket,\n\n175\n00:08:39.775 --> 00:08:41.592\nI'm gonna try to make bucket4.\n\n176\n00:08:41.592 --> 00:08:45.092\nIt's gonna reach out and do it,\nand I get that it failed, right?\n\n177\n00:08:45.092 --> 00:08:48.176\nIt failed,\nI got a client error InvalidAccessKeyId.\n\n178\n00:08:48.176 --> 00:08:52.008\nThat key is no longer good,\nI can't do anything with it, right?\n\n179\n00:08:52.008 --> 00:08:53.286\nAnd I've got Daniel's key, but\n\n180\n00:08:53.286 --> 00:08:55.759\nI haven't actually assigned any\npermission to Daniel's key.\n\n181\n00:08:55.759 --> 00:08:56.987\nSo if I were to connect with him,\n\n182\n00:08:56.987 --> 00:08:59.591\nI'm not really gonna be able to\nget much done there either, right?\n\n183\n00:08:59.591 --> 00:09:03.171\nBut if it was Daniel that was the problem,\nhe's just not getting his work done,\n\n184\n00:09:03.171 --> 00:09:06.760\nI'm gonna hire a new employee replace him,\nI might wanna go and revoke his key.\n\n185\n00:09:06.760 --> 00:09:11.260\nSo, I can jump under Users,\nI can come here and I can find Daniel.\n\n186\n00:09:11.260 --> 00:09:16.217\nI can find his access key and I can\nrender it inactive or I can delete it.\n\n187\n00:09:16.217 --> 00:09:20.948\nNow, even if I delete it, notice,\nwhen I did it with the root keys,\n\n188\n00:09:20.948 --> 00:09:22.950\nthey hung around.\n\n189\n00:09:22.950 --> 00:09:25.259\nWhen I delete his, they're gone.\n\n190\n00:09:25.259 --> 00:09:28.481\nSo make inactive is a lot more useful if\nyou wanna keep a record of who had what\n\n191\n00:09:28.481 --> 00:09:30.592\nkey versus here I delete them and\nthey're gone.\n\n192\n00:09:30.592 --> 00:09:34.217\nNow I don't know that key ever existed,\nright?\n\n193\n00:09:34.217 --> 00:09:36.839\nNow at this stage,\nDaniel's got a password still, so\n\n194\n00:09:36.839 --> 00:09:39.560\nhe could still log in if he\nknew what the password was.\n\n195\n00:09:39.560 --> 00:09:42.467\nWell I guess I never even\nsaw the password, did I?\n\n196\n00:09:42.467 --> 00:09:44.092\n>> No, we did not see it at all.\n\n197\n00:09:44.092 --> 00:09:45.926\n>> The most secure password\nis a password nobody knows.\n\n198\n00:09:45.926 --> 00:09:46.737\n>> Is one you never know [LAUGH]\n>> [LAUGH] So,\n\n199\n00:09:46.737 --> 00:09:50.046\nwell I shouldn't say that cuz an attacker\ncould guess it if we're not even trying\n\n200\n00:09:50.046 --> 00:09:50.592\nto guess it.\n\n201\n00:09:50.592 --> 00:09:52.051\n>> That's true.\n\n202\n00:09:52.051 --> 00:09:54.751\n>> But, well you know,\nspeaking of guessing,\n\n203\n00:09:54.751 --> 00:09:59.025\nI mean there are other alternatives\nto a password that we can jump into.\n\n204\n00:09:59.025 --> 00:10:01.948\nDaniel, I know you use a lot\nof different websites,\n\n205\n00:10:01.948 --> 00:10:05.676\nhave you ever seen anything like,\nwhose somebody that does this?\n\n206\n00:10:05.676 --> 00:10:09.286\nLike Microsoft or Google, or whatever,\nwhere passwords are starting to become\n\n207\n00:10:09.286 --> 00:10:11.740\na bit of a problem because\nthey get leaked out, right?\n\n208\n00:10:11.740 --> 00:10:15.050\nHave you seen anything\nelse that was out there?\n\n209\n00:10:15.050 --> 00:10:19.454\n>> Nothing here recently, but I do know\nthat a lot of times a website or anything,\n\n210\n00:10:19.454 --> 00:10:22.870\nthey'll ask you for\na little bit more than just a password.\n\n211\n00:10:22.870 --> 00:10:26.720\nThey want something else to make sure you\nare who you say you are because passwords\n\n212\n00:10:26.720 --> 00:10:29.560\nare getting more and\nmore easily compromised.\n\n213\n00:10:29.560 --> 00:10:31.467\n>> Absolutely, and\nI'm putting you on the spot.\n\n214\n00:10:31.467 --> 00:10:34.561\n>> Yeah. [LAUGH] >> And it's one of\nthe driving things that we're seeing now,\n\n215\n00:10:34.561 --> 00:10:37.295\nis that one form of authentication\nis not enough, right?\n\n216\n00:10:37.295 --> 00:10:40.544\nWhen I logged in with that access key,\nthere was the key id and\n\n217\n00:10:40.544 --> 00:10:42.467\nthen there was the secret, right?\n\n218\n00:10:42.467 --> 00:10:46.040\nWhen I log in with a username and\na password there's my user ID and\n\n219\n00:10:46.040 --> 00:10:46.843\nmy password.\n\n220\n00:10:46.843 --> 00:10:52.301\nThe access ID and the user ID are really\npublic and people can find those out.\n\n221\n00:10:52.301 --> 00:10:56.759\nBut the secret key, the password, that's\nthe part that you don't wanna get out.\n\n222\n00:10:56.759 --> 00:10:57.717\nThat's the part someone can use to get in.\n\n223\n00:10:57.717 --> 00:11:00.842\nBut it's just one thing, right?\n\n224\n00:11:00.842 --> 00:11:02.009\nIt's just a password.\n\n225\n00:11:02.009 --> 00:11:05.552\nIf one of you guys was really,\nwell I guess it's too late now, but\n\n226\n00:11:05.552 --> 00:11:09.050\na few moments ago, if one of you\nguys had written down my secret.\n\n227\n00:11:09.050 --> 00:11:12.426\nYou could've logged in as me, and\nhave full access to the system.\n\n228\n00:11:12.426 --> 00:11:13.551\nIt was there for you, right?\n\n229\n00:11:13.551 --> 00:11:15.842\nWell, for you if you're fast.\n\n230\n00:11:15.842 --> 00:11:20.425\nBut, we can also do what's called\nmulti-factor authentication, or MFA.\n\n231\n00:11:20.425 --> 00:11:25.384\nMFA is where you need to have two or\nmore things to log in, right?\n\n232\n00:11:25.384 --> 00:11:30.384\nYou might need a username and password,\nthat's one thing, and a fingerprint.\n\n233\n00:11:30.384 --> 00:11:35.176\nOr a username and a password and something\nelse, or a retinal scan or whatever.\n\n234\n00:11:35.176 --> 00:11:37.217\nIt's called multi-factor authentication.\n\n235\n00:11:37.217 --> 00:11:39.555\nA lot of people call it dual factor,\nI'm guilty of this,\n\n236\n00:11:39.555 --> 00:11:41.176\nI'll call it dual factor all the time.\n\n237\n00:11:41.176 --> 00:11:43.305\nCuz you normally have two\nfactors of authentication, but\n\n238\n00:11:43.305 --> 00:11:45.967\nthere's nothing stopping you from\nhaving three, four, five things.\n\n239\n00:11:45.967 --> 00:11:49.301\nIt just gets really annoying to log in.\n\n240\n00:11:49.301 --> 00:11:51.160\nBut Amazon supports MFA.\n\n241\n00:11:51.160 --> 00:11:54.792\nThey really only support one form of it,\nthough,\n\n242\n00:11:54.792 --> 00:11:59.551\nwhich is the user name and\npassword combined with a code, right?\n\n243\n00:11:59.551 --> 00:12:03.030\nA six or eight digit code that\nyou gotta punch in to log in and\n\n244\n00:12:03.030 --> 00:12:05.640\nthat code is changing every 30 seconds.\n\n245\n00:12:05.640 --> 00:12:10.343\nNow if it changes every 30 seconds,\nhow can you memorize that?\n\n246\n00:12:10.343 --> 00:12:11.760\nYou really can't, right?\n\n247\n00:12:11.760 --> 00:12:14.134\nAnd so we need some kind of extra\ndevice to be able to help us.\n\n248\n00:12:14.134 --> 00:12:17.853\nAnd that's really the second factor\nof the authentication, not the code,\n\n249\n00:12:17.853 --> 00:12:19.842\nbut the device that generates the code.\n\n250\n00:12:19.842 --> 00:12:23.716\nIn other words to log in, I've gotta\nknow my user name and password, and\n\n251\n00:12:23.716 --> 00:12:26.967\nI've gotta have my device that\ngenerates the code, right?\n\n252\n00:12:26.967 --> 00:12:28.467\nThose are the two factors.\n\n253\n00:12:28.467 --> 00:12:32.286\nAnd in the security world they call it\nsomething you have and something you know,\n\n254\n00:12:32.286 --> 00:12:32.801\nright?.\n\n255\n00:12:32.801 --> 00:12:35.425\nI know my password, I have my device.\n\n256\n00:12:35.425 --> 00:12:38.664\nThe other option is something you are,\nwhich would be like fingerprint,\n\n257\n00:12:38.664 --> 00:12:39.717\nretinal scan, right?\n\n258\n00:12:39.717 --> 00:12:41.681\nThat's biometrics, that's who you are,\n\n259\n00:12:41.681 --> 00:12:44.342\nwhich Amazon doesn't directly\nsupport right now, okay?\n\n260\n00:12:44.342 --> 00:12:47.091\nBut on the code,\nthe something you have, they do.\n\n261\n00:12:47.091 --> 00:12:48.051\nAnd it's actually really easy to use.\n\n262\n00:12:48.051 --> 00:12:51.717\nYou can it on for the root account, and\nyou can turn it on for individual users.\n\n263\n00:12:51.717 --> 00:12:53.301\nLet me show you.\n\n264\n00:12:53.301 --> 00:12:56.986\nSo, from here, if I were to go back\nup to my user account, and go to\n\n265\n00:12:56.986 --> 00:13:01.944\nSecurity Credentials, and just continue to\nit, you'll see where I can turn on MFA, or\n\n266\n00:13:01.944 --> 00:13:05.967\nmulti-factor authentication, for\nmy root account right from here.\n\n267\n00:13:05.967 --> 00:13:11.302\nI can also go to Users, and\nI can go to Daniel Lowry here.\n\n268\n00:13:11.302 --> 00:13:16.342\nAnd for him, where he's got a password,\nI can turn on MFA just for him, right.\n\n269\n00:13:16.342 --> 00:13:19.429\nI can turn on that multi-factor\nauthentication I've got an extra level of\n\n270\n00:13:19.429 --> 00:13:20.801\nsecurity when somebody logs in.\n\n271\n00:13:20.801 --> 00:13:24.259\nThis is pretty useful cuz somebody\nwould have to have that device.\n\n272\n00:13:24.259 --> 00:13:28.252\nSo let's say that I'm just sick and tired\nof seeing this warning here about not\n\n273\n00:13:28.252 --> 00:13:31.841\nhaving MFA turned on for my root\naccount so I want to turn it on, right?\n\n274\n00:13:31.841 --> 00:13:35.354\nWell, all we have to do is go into that\ncredential screen and we can turn it on,\n\n275\n00:13:35.354 --> 00:13:36.884\nactually let me go the other way.\n\n276\n00:13:36.884 --> 00:13:40.064\nSo I'm gonna go up here to the old screen,\nand\n\n277\n00:13:40.064 --> 00:13:43.509\nunder MFA you'll see\nthat Activate MFA button.\n\n278\n00:13:43.509 --> 00:13:48.133\nThat's the same thing as if I go under\nthe Dashboard and choose Manage MFA here.\n\n279\n00:13:48.133 --> 00:13:49.850\nSo they both take you to the same place.\n\n280\n00:13:49.850 --> 00:13:52.259\nAnd they ask us,\nwhat type of device do you have?\n\n281\n00:13:52.259 --> 00:13:54.250\nCuz it's gotta be something you have,\nright?\n\n282\n00:13:54.250 --> 00:13:55.884\nYou have to have an item\nto generate the code.\n\n283\n00:13:55.884 --> 00:14:00.801\nAnd Amazon supports a virtual MFA\ndevice and a hardware MFA device.\n\n284\n00:14:00.801 --> 00:14:04.134\nThere's a couple of different companies\nout there that make hardware devices.\n\n285\n00:14:04.134 --> 00:14:08.438\nActual tokens, these little key fobs or\nwhatever, you stick on your key chain,\n\n286\n00:14:08.438 --> 00:14:10.990\nthat are generating\na code every 30 seconds.\n\n287\n00:14:10.990 --> 00:14:13.480\nNow, on a positive side,\nthey work really well.\n\n288\n00:14:13.480 --> 00:14:16.776\nOn a negative side,\nit's an extra thing on your key chain, and\n\n289\n00:14:16.776 --> 00:14:19.842\nyou gotta keep track of it,\nit's one more device to have.\n\n290\n00:14:19.842 --> 00:14:23.301\nSo a virtual MFA is by\nfar the more popular.\n\n291\n00:14:23.301 --> 00:14:26.820\nAnd what you can do is you can\nuse things like your cell phone.\n\n292\n00:14:26.820 --> 00:14:30.084\nSo I've got an Android phone right here,\nthey've got it for\n\n293\n00:14:30.084 --> 00:14:33.093\niPhone too, where you can use\nit as your key generator.\n\n294\n00:14:33.093 --> 00:14:36.359\nSo instead of having to have an extra\ntoken on my key chain I can just use my\n\n295\n00:14:36.359 --> 00:14:36.967\ncellphone.\n\n296\n00:14:36.967 --> 00:14:38.509\nI'm always gonna have my\ncellphone with me anyway.\n\n297\n00:14:38.509 --> 00:14:42.680\nSo I can use it as my token and\nthat's becoming the most popular.\n\n298\n00:14:42.680 --> 00:14:46.930\nSo the people who make the hardware tokens\nare starting to lose money on this.\n\n299\n00:14:46.930 --> 00:14:49.301\nBut if we wanna configure this,\nit's really pretty straight forward.\n\n300\n00:14:49.301 --> 00:14:52.466\nWe can choose that we're gonna\ndo a virtual MFA device.\n\n301\n00:14:52.466 --> 00:14:57.263\nAnd then from here if we move to our next\nstep it's just gonna tell us that we're\n\n302\n00:14:57.263 --> 00:14:59.870\ngonna need some MFA software, right?\n\n303\n00:14:59.870 --> 00:15:02.550\nSome software to run on our\ndevice that will support it.\n\n304\n00:15:02.550 --> 00:15:07.042\nAnd Amazon officially supports two things,\nthere's the Google Authenticator,\n\n305\n00:15:07.042 --> 00:15:09.425\nfrom Google, you might have heard of them.\n\n306\n00:15:09.425 --> 00:15:13.484\nAnd then the other one is the, and\nI'm gonna cheat and look at my phone here,\n\n307\n00:15:13.484 --> 00:15:14.635\nthe AWS Virtual MFA.\n\n308\n00:15:14.635 --> 00:15:17.426\nIt's an app, you can search the Android\napp store and you can find it.\n\n309\n00:15:17.426 --> 00:15:18.680\nI don't think it's on iPhone,\n\n310\n00:15:18.680 --> 00:15:21.009\nI think on iPhone you have to\nuse the Google Authenticator.\n\n311\n00:15:21.009 --> 00:15:22.070\nBut the AWS Virtual MFA is one\nthat's out there on Android.\n\n312\n00:15:22.070 --> 00:15:26.884\nNow, they say those\nare the two they support.\n\n313\n00:15:26.884 --> 00:15:31.126\nThey'll actually support any system that\nsupports importing a QR code to generate\n\n314\n00:15:31.126 --> 00:15:31.801\nyour codes.\n\n315\n00:15:31.801 --> 00:15:34.967\nSo I use a product called Authy,\nA-U-T-H-Y.\n\n316\n00:15:34.967 --> 00:15:37.347\nI love Authy, I use it for\na ton of different things, and\n\n317\n00:15:37.347 --> 00:15:39.134\nit generates my codes, works just fine.\n\n318\n00:15:39.134 --> 00:15:43.215\nSo you're not limited, but if you ever\ncall Amazon's tech support they can\n\n319\n00:15:43.215 --> 00:15:46.548\nonly help you with Google Authenticator\nand AWS Virtual MFA.\n\n320\n00:15:46.548 --> 00:15:50.314\nThey're both free, you can go into\nthe app store and download them, and\n\n321\n00:15:50.314 --> 00:15:51.220\nyou can have it.\n\n322\n00:15:51.220 --> 00:15:53.342\nSo here it's just telling me I need\nto have that application, all right?\n\n323\n00:15:53.342 --> 00:15:56.546\nAnd then on the next page,\nI see the important part.\n\n324\n00:15:56.546 --> 00:16:00.146\nNow just like before, where I said\nif you wrote down my secret ID,\n\n325\n00:16:00.146 --> 00:16:02.837\nthat you'd be able to log\ninto the account as me?\n\n326\n00:16:02.837 --> 00:16:05.737\nWell if you were to really quick\ntake a snapshot of this QR code,\n\n327\n00:16:05.737 --> 00:16:07.337\nyou'd be able to login as Daniel.\n\n328\n00:16:07.337 --> 00:16:08.046\nRight?\n\n329\n00:16:08.046 --> 00:16:09.629\nThis is that second piece.\n\n330\n00:16:09.629 --> 00:16:11.519\nYou'd need his password too so\n\n331\n00:16:11.519 --> 00:16:14.800\nI guess that limitation that\nwe haven't seen it yet.\n\n332\n00:16:14.800 --> 00:16:17.860\nBut this QR code, what I'm gonna\ndo is I'm gonna take my phone and\n\n333\n00:16:17.860 --> 00:16:19.480\nI'm gonna take a picture of this QR code.\n\n334\n00:16:19.480 --> 00:16:20.940\nNow, you can't normally see this and so\n\n335\n00:16:20.940 --> 00:16:25.080\nI've got a little Program fired up here\nthat's gonna let you see my android phone.\n\n336\n00:16:25.080 --> 00:16:27.770\nSo, here's my android phone\nover here on the left.\n\n337\n00:16:27.770 --> 00:16:30.750\nAnd, let me just minimize that, there.\n\n338\n00:16:30.750 --> 00:16:33.190\nAnd so\nI've got the QR code there in the back.\n\n339\n00:16:33.190 --> 00:16:37.070\nAnd so, I'm gonna take my phone and\nI'm gonna fire up my AWS virtual.\n\n340\n00:16:37.070 --> 00:16:38.860\nMFA.\nAnd, like I said, I like better.\n\n341\n00:16:38.860 --> 00:16:42.090\nSee how that text looks really\nsmall on the screen there?\n\n342\n00:16:42.090 --> 00:16:44.550\nIt's really small in real life.\n\n343\n00:16:44.550 --> 00:16:47.690\nThe AWS MFA does not scale very well.\n\n344\n00:16:47.690 --> 00:16:52.770\nBut I can barely read right here where it\nsays press menu to begin The boot strap.\n\n345\n00:16:52.770 --> 00:16:56.030\nAnd so I'm gonna bring up my menu and\n\n346\n00:16:56.030 --> 00:16:58.490\nyou'll see where I can scan a bar code,\nright?\n\n347\n00:16:58.490 --> 00:17:00.870\nAnd it's kind of hard to see,\nbut there you go.\n\n348\n00:17:00.870 --> 00:17:04.910\nSo, I can scan a bar code and\nthat's what I want to do right there.\n\n349\n00:17:04.910 --> 00:17:06.870\nI'm gonna choose to scan it and\n\n350\n00:17:06.870 --> 00:17:08.780\nit's gonna to tell me I've got\nto install a bar code scanner.\n\n351\n00:17:08.780 --> 00:17:10.570\nThey support this zing, Barcode scanner.\n\n352\n00:17:10.570 --> 00:17:15.290\nSo, I'll need to install that real quick,\nwhich you can just fire up real quick and\n\n353\n00:17:15.290 --> 00:17:15.990\nget it installed.\n\n354\n00:17:15.990 --> 00:17:18.990\nAnd, they're sending me\nto the Amazon store.\n\n355\n00:17:18.990 --> 00:17:21.740\nLet me get it from Google\nstore real quick, and\n\n356\n00:17:21.740 --> 00:17:24.180\nwe'll get that one thrown on there.\n\n357\n00:17:24.180 --> 00:17:29.330\nNow, once I've got it then We'll be\n\n358\n00:17:29.330 --> 00:17:34.650\nable to scan this barcode and\nactually see that barcode come in.\n\n359\n00:17:34.650 --> 00:17:38.040\nNow, what the QR code is doing,\nis it's giving us a seed.\n\n360\n00:17:39.360 --> 00:17:43.825\nBasically our program is going\nto Sit here and run for awhile.\n\n361\n00:17:43.825 --> 00:17:48.685\nAnd it's gonna be running a mathematical\nalgorithm, a little mathematical formula\n\n362\n00:17:48.685 --> 00:17:53.695\nagainst a code and it's gonna come up\nwith a number based on the date and time.\n\n363\n00:17:53.695 --> 00:17:59.465\nNow, that code is gonna be being\ncalculated by Amazon also.\n\n364\n00:17:59.465 --> 00:18:03.890\nAmazon's running the same\nformula against this same seed.\n\n365\n00:18:03.890 --> 00:18:07.850\nTo generate a code and so when I provide\nmy code it should match their code.\n\n366\n00:18:07.850 --> 00:18:10.510\nAnd it's tied to the time so\nit's constantly changing.\n\n367\n00:18:10.510 --> 00:18:15.360\nSo, I'm just going to go right back in\nhere and we're going to scan a barcode.\n\n368\n00:18:15.360 --> 00:18:17.050\nAnd now you can see my computer here.\n\n369\n00:18:17.050 --> 00:18:18.950\nLet's see how well it works for us.\n\n370\n00:18:18.950 --> 00:18:21.550\nI'm going to have to\nmove that a little bit.\n\n371\n00:18:21.550 --> 00:18:25.540\nAnd it's not gonna let me move that,\nis it?\n\n372\n00:18:25.540 --> 00:18:27.880\nSo, we'll have to kind of pick and\nchoose what we get to see.\n\n373\n00:18:27.880 --> 00:18:29.920\nI gotta move this over so\nI can see enough of the code.\n\n374\n00:18:29.920 --> 00:18:33.452\nBut you'll see here on my phone,\nI'm basically gonna move, and I got it.\n\n375\n00:18:33.452 --> 00:18:35.287\n[LAUGH] Just like that, there we go.\n\n376\n00:18:35.287 --> 00:18:38.110\nAll right, so it got it,\nand now I can see that I've\n\n377\n00:18:38.110 --> 00:18:40.700\ngot this root account MFA added\nhere on my system, right?\n\n378\n00:18:40.700 --> 00:18:44.720\nSo, there's that device, and\nit's not a very friendly name.\n\n379\n00:18:44.720 --> 00:18:47.870\nIs it, but if I click on it,\nit's now gonna show me a code, okay?\n\n380\n00:18:47.870 --> 00:18:51.490\nAnd this code is gonna change\nevery 30 seconds, right?\n\n381\n00:18:51.490 --> 00:18:52.980\nSee how it just disappeared on me?\n\n382\n00:18:52.980 --> 00:18:55.930\nAnd if I click on it,\nit's gonna come back but\n\n383\n00:18:55.930 --> 00:18:58.770\nit's gonna stay up for a little bit and\neventually it'll change.\n\n384\n00:18:58.770 --> 00:19:03.170\nAnd what I can do, is I can take that\ncode and I can punch it in back here.\n\n385\n00:19:03.170 --> 00:19:04.840\nSo, I'm gonna punch in, 301784, right?\n\n386\n00:19:04.840 --> 00:19:07.630\nThat's the code That I\njust got on this one.\n\n387\n00:19:07.630 --> 00:19:08.840\nAt least I think it was.\n\n388\n00:19:08.840 --> 00:19:10.910\n301 784, all right.\n\n389\n00:19:10.910 --> 00:19:15.350\nNow, that code is going to expire and\nthen I have to enter in the next code.\n\n390\n00:19:15.350 --> 00:19:19.020\nAnd so, it's got authentication code too.\n\n391\n00:19:19.020 --> 00:19:21.160\nSo, I've gotta wait for\nthat one to change.\n\n392\n00:19:21.160 --> 00:19:22.720\nThere we go, and now it's changed.\n\n393\n00:19:22.720 --> 00:19:25.600\n534 676.\nSo, I'll put in 534, 676, all right.\n\n394\n00:19:25.600 --> 00:19:29.730\nAnd then I'm gonna hit activate and\nit's gonna check those codes.\n\n395\n00:19:29.730 --> 00:19:32.050\nIf the codes are right now\nthe MFA is active, and\n\n396\n00:19:32.050 --> 00:19:35.390\nwhenever Daniel logs in he'll have to\nput in his username and password and\n\n397\n00:19:35.390 --> 00:19:38.040\nit'll ask him for\nthe current code on his phone, and he'll\n\n398\n00:19:38.040 --> 00:19:42.090\nhave to take his phone and hit the button\nto pull up that code and punch it in.\n\n399\n00:19:42.090 --> 00:19:45.480\nNow, if somebody's running a key logger\nand they capture this over the network,\n\n400\n00:19:45.480 --> 00:19:47.320\nand they capture his\ncode it's no big deal,\n\n401\n00:19:47.320 --> 00:19:50.990\nbecause the code Codes are also OTP,\nThat's one time passwords.\n\n402\n00:19:50.990 --> 00:19:53.840\nIn other words,\nyou can only use them once.\n\n403\n00:19:53.840 --> 00:19:57.140\nSo, Daniel uses a code,\nit's then burned up.\n\n404\n00:19:57.140 --> 00:19:59.220\nIf somebody captured it,\nthey can't even use it.\n\n405\n00:19:59.220 --> 00:20:02.305\nEven if they tried within the 30\nsecond window that code Is good for,\n\n406\n00:20:02.305 --> 00:20:04.255\nonce it's used once it's dead.\n\n407\n00:20:04.255 --> 00:20:08.945\nThat means that if Daniel logs in and\nthen logs out immediately,\n\n408\n00:20:08.945 --> 00:20:12.345\nhe might have to wait up to 30 seconds\nto log in again to get a new code.\n\n409\n00:20:12.345 --> 00:20:16.195\nBut the important part is,\nif somebody figured out Daniels password,\n\n410\n00:20:16.195 --> 00:20:20.165\nit's not gonna help them,\nunless the have the code generator also.\n\n411\n00:20:20.165 --> 00:20:22.180\nIt's two factors of authentication.\n\n412\n00:20:22.180 --> 00:20:26.560\nHis password, and his code, and\nit's super easy to turn on,\n\n413\n00:20:26.560 --> 00:20:30.430\nand once you've got it turned on,\nnow it's secured, you know,\n\n414\n00:20:30.430 --> 00:20:34.890\nI said it was your account,\nI did that on my root account didn't I?\n\n415\n00:20:34.890 --> 00:20:36.840\nI think I did.\nThat's not good if I don't remember\n\n416\n00:20:36.840 --> 00:20:38.040\nwhat account it was I turned it on for.\n\n417\n00:20:38.040 --> 00:20:42.440\nBut basically it's now on, and now we're\nsecured, and if we jump back here, and\n\n418\n00:20:42.440 --> 00:20:44.370\nif I log out and log back in.\n\n419\n00:20:44.370 --> 00:20:48.450\nBack in, which I'm gonna hold off on\ndoing cuz I can't remember which account\n\n420\n00:20:48.450 --> 00:20:49.270\ni turned it on for now.\n\n421\n00:20:49.270 --> 00:20:50.230\n>> [LAUGH]\n>> But actually it said it was\n\n422\n00:20:50.230 --> 00:20:50.880\na root account, right?\n\n423\n00:20:50.880 --> 00:20:51.950\nSo, it should be on for me.\n\n424\n00:20:51.950 --> 00:20:55.290\nBut now we've got that second factor and\nso somebody would have to not only figure\n\n425\n00:20:55.290 --> 00:20:58.780\nout what my password is but also steal my\nphone to be able to log in, all right?\n\n426\n00:20:58.780 --> 00:21:00.390\nNow, if you lose your phone\nit's not the end of the world.\n\n427\n00:21:00.390 --> 00:21:02.850\nAmazon does have some backup\nprocesses you can go through.\n\n428\n00:21:02.850 --> 00:21:06.000\nIf you have another administrator\naccount you could always go through and\n\n429\n00:21:06.000 --> 00:21:09.070\nfix it that way or\nyou can do a support to give it to Amazon.\n\n430\n00:21:09.070 --> 00:21:10.580\nObviously you don't\nwant to use your phone.\n\n431\n00:21:10.580 --> 00:21:14.130\nAnd that QR code you could actually\ntake a picture of it from more than one\n\n432\n00:21:14.130 --> 00:21:15.780\ndevice and\nhave more than one code generator.\n\n433\n00:21:15.780 --> 00:21:18.330\nIt is just a seed for a formula,\nso that does work there too.\n\n434\n00:21:18.330 --> 00:21:21.540\nBut MFAs is a great way to secure things\nand make it a little bit stronger and\n\n435\n00:21:21.540 --> 00:21:24.420\na little more secure for your environment.\n\n436\n00:21:24.420 --> 00:21:28.200\n>> Yeah, Don I'm having a hard time\nfiguring out why I would not wanna use\n\n437\n00:21:28.200 --> 00:21:29.140\n>> Uses especially for\n\n438\n00:21:29.140 --> 00:21:32.230\npeople that are going to be administrators\non our system, it's probably\n\n439\n00:21:32.230 --> 00:21:35.750\nsomething you want to implement for\nsomething that has that role.\n\n440\n00:21:35.750 --> 00:21:37.580\n>> Yeah, if you want people coming in and\n\n441\n00:21:37.580 --> 00:21:40.650\nmanaging your system and\nlogging in, it is important.\n\n442\n00:21:40.650 --> 00:21:43.080\nAnd let me just kinda show\nyou guys here real quick.\n\n443\n00:21:43.080 --> 00:21:44.830\n>> I just logged out real quick.\n\n444\n00:21:44.830 --> 00:21:47.780\nAnd so if I log in with my account,\nnotice I'm putting in my password here and\n\n445\n00:21:47.780 --> 00:21:51.950\nas soon as I hit Sign On,\nnow it's asking for my code.\n\n446\n00:21:51.950 --> 00:21:53.790\nRight.\nThat's my second factor and\n\n447\n00:21:53.790 --> 00:21:54.400\nI gotta put it in.\n\n448\n00:21:54.400 --> 00:21:57.100\nSo, an attacker might guess\nmy password but not my code.\n\n449\n00:21:57.100 --> 00:21:57.770\nCode.\n\n450\n00:21:57.770 --> 00:22:01.380\nAnd so they would have to have both\npieces, and now I can log in, and I'm in.\n\n451\n00:22:01.380 --> 00:22:02.410\nIt doesn't cost you any extra money.\n\n452\n00:22:02.410 --> 00:22:04.660\nIt takes a little bit of extra time,\n\n453\n00:22:04.660 --> 00:22:08.530\nbut it protects you from\npeople guessing your password.\n\n454\n00:22:08.530 --> 00:22:10.030\nOr key loggers.\n\n455\n00:22:10.030 --> 00:22:13.830\nIt completely protects you from key\nloggers, so really great system.\n\n456\n00:22:13.830 --> 00:22:15.860\n>> Yeah, so\nthe extra four seconds it takes you to\n\n457\n00:22:15.860 --> 00:22:16.570\n>> Get that code and\n\n458\n00:22:16.570 --> 00:22:17.860\nput it in the system and log in.\n\n459\n00:22:17.860 --> 00:22:22.140\nAnd it gives you the whole\nexponentially more level of security.\n\n460\n00:22:22.140 --> 00:22:23.720\nIt's definitely worth the effort.\n\n461\n00:22:23.720 --> 00:22:24.760\n>> Yeah, absolutely.\n\n462\n00:22:24.760 --> 00:22:25.830\n>> All right, Don.\n\n463\n00:22:25.830 --> 00:22:29.160\nAnything else we need to cover when\nit comes to this multi- Factor.\n\n464\n00:22:29.160 --> 00:22:31.610\n>> The next thing I wanna jump\ninto are security policies and\n\n465\n00:22:31.610 --> 00:22:33.780\nnow we can actually give\npermissions to people.\n\n466\n00:22:33.780 --> 00:22:37.010\nBut as far as our credentials,\nthat's probably enough for us right there.\n\n467\n00:22:37.010 --> 00:22:37.890\n>> All right, Don.\nThank you so\n\n468\n00:22:37.890 --> 00:22:40.500\nmuch for those explanations on\nthis how we can keep ourselves\n\n469\n00:22:40.500 --> 00:22:41.920\na little more secure when it comes to AWS.\n\n470\n00:22:41.920 --> 00:22:44.320\nAnd that being said,\nwe'll go ahead and sign off.\n\n471\n00:22:44.320 --> 00:22:45.350\nClose the episode down.\n\n472\n00:22:45.350 --> 00:22:47.920\nI've been your hot for\nITProTV, Daniel Lowry.\n\n473\n00:22:47.920 --> 00:22:48.640\n>> And I'm Don Pizet.\n\n474\n00:22:48.640 --> 00:22:50.354\n>> And we'll see you next time.\n\n475\n00:22:50.354 --> 00:22:55.567\n[NOISE]\n\n",
          "vimeoId": "146522898"
        },
        {
          "description": "In this episode, Daniel and Don dive further into the Identity and Access Management groups and roles. They start by explaining how access is granted to user accounts through their group membership. Then they explain how Roles allow you to grant access to users outside of your AWS systems. Finally they cover the Security Token Service(STS) to integrate federation services using Security Assertion Markup Language compatible systems like Microsoft Active Directory Federation Services and Shibboleth.",
          "length": "1723",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/amazon-acsa/amazon-acsa-1-4-iam_groups_and_roles-111715-1.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/amazon-acsa/amazon-acsa-1-4-iam_groups_and_roles-111715-1-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/amazon-acsa/amazon-acsa-1-4-iam_groups_and_roles-111715-1-sm.jpg",
          "title": "IAM Groups and Roles",
          "transcript": "WEBVTT\n\n1\n00:00:00.000 --> 00:00:10.000\n[MUSIC]\n\n2\n00:00:12.130 --> 00:00:13.671\nAll right, greetings everyone.\n\n3\n00:00:13.671 --> 00:00:16.880\nWelcome to an exciting\nepisode of IT pro TV.\n\n4\n00:00:16.880 --> 00:00:20.992\nI am your host Daniel Lowrie and in today\nepisode we are going to be going over\n\n5\n00:00:20.992 --> 00:00:23.870\na little more of that AWS\ncertified system add min.\n\n6\n00:00:23.870 --> 00:00:26.110\nAnd joining me in the studio\ntoday to help us out with that,\n\n7\n00:00:26.110 --> 00:00:27.960\nnone other than my good friend Mr.\nDon Pezet.\n\n8\n00:00:27.960 --> 00:00:29.025\nHow's it going today Don?\n\n9\n00:00:29.025 --> 00:00:30.370\n>> It's going great, Daniel.\n\n10\n00:00:30.370 --> 00:00:33.300\nGlad to be back on the show and\nready to dive right back into the AWS.\n\n11\n00:00:33.300 --> 00:00:35.570\nIn this episode,\nwe're gonna be taking a look at groups and\n\n12\n00:00:35.570 --> 00:00:40.950\nrolls which are a pretty important part\nof doing IAM inside of our environment,\n\n13\n00:00:40.950 --> 00:00:42.380\nidentity and access management.\n\n14\n00:00:42.380 --> 00:00:44.441\nSo, that's what we're\ngonna be looking at today.\n\n15\n00:00:44.441 --> 00:00:46.780\n>> Yeah, well Don, it must be pretty\nimportant because if I'm remembering\n\n16\n00:00:46.780 --> 00:00:50.960\nRemembering correctly, we talked about\ngroups and roles in a previous episode so\n\n17\n00:00:50.960 --> 00:00:54.280\nI'm interested to see how much more depth\nwe could go into in this very subject.\n\n18\n00:00:54.280 --> 00:00:57.050\n>> It's so important, we're just gonna\nkeep covering it over and over and\n\n19\n00:00:57.050 --> 00:00:57.690\nover again.\n\n20\n00:00:57.690 --> 00:01:00.010\nWell, we did mention it\nin another episode, and\n\n21\n00:01:00.010 --> 00:01:04.380\nreally we just talked about it in concept.\n\n22\n00:01:04.380 --> 00:01:07.680\nAnd in our next episode,\nthe one coming after this one.\n\n23\n00:01:07.680 --> 00:01:09.938\nWe're gonna be taking a look at policies.\n\n24\n00:01:09.938 --> 00:01:12.910\n[INAUDIBLE] permissions, and\nwhen you start doing policies it's really\n\n25\n00:01:12.910 --> 00:01:15.510\nimportant that you have a good\nunderstanding of those groups and roles,\n\n26\n00:01:15.510 --> 00:01:18.900\nso I wanna take a little bit more time and\ntalk about that.\n\n27\n00:01:18.900 --> 00:01:21.260\nAlso the exam can be a little\nbit more in depth on roles, and\n\n28\n00:01:21.260 --> 00:01:23.350\nI know that's something a lot\nof people don't work with,\n\n29\n00:01:23.350 --> 00:01:26.150\nand so I wanna make sure that we spend\nsome time so that we can see that.\n\n30\n00:01:26.150 --> 00:01:27.650\nIt can be a pretty complex topic.\n\n31\n00:01:27.650 --> 00:01:31.422\nSo, it'll be a little bit of Deja vu for\nus but a little bit more information.\n\n32\n00:01:31.422 --> 00:01:32.005\n>> Awesome.\n\n33\n00:01:32.005 --> 00:01:35.254\nI guess the next question is,\nwhere do we begin groups or roles?\n\n34\n00:01:35.254 --> 00:01:37.378\n>> All right, let's begin with users.\n\n35\n00:01:37.378 --> 00:01:39.129\n>> [LAUGH]\n>> [CROSSTALK] Way to throw me off.\n\n36\n00:01:39.129 --> 00:01:41.470\n[LAUGH]\n>> So,\n\n37\n00:01:41.470 --> 00:01:45.550\nit really does all start with users and\n>> Groups\n\n38\n00:01:45.550 --> 00:01:50.020\nreally help us with managing\npermissions for more than one user.\n\n39\n00:01:50.020 --> 00:01:52.240\nIf you are a single AWS administrator and\n\n40\n00:01:52.240 --> 00:01:55.770\nthere's no other admins if your company,\nit's just you running the whole thing,\n\n41\n00:01:55.770 --> 00:01:58.800\nthen you don't really care about groups or\nroles at all.\n\n42\n00:01:58.800 --> 00:02:00.610\nYou just create a user and\nthat's what you work, run.\n\n43\n00:02:00.610 --> 00:02:03.680\nAnd so a lot of us, when we're\nstudying and we're learning, we go and\n\n44\n00:02:03.680 --> 00:02:06.330\nwe sign up for that free AWS account, and\nwe start using that free usage tier to\n\n45\n00:02:06.330 --> 00:02:10.440\nspin up services, and learn, and we don't\nactually have a need for groups and\n\n46\n00:02:10.440 --> 00:02:13.790\nroles because it's just us, but then\n>> When you get to a company and\n\n47\n00:02:13.790 --> 00:02:16.770\ngo to deploy this stuff, and you've got 20\nengineers and they all need access and we\n\n48\n00:02:16.770 --> 00:02:20.820\ngotta manage them all independently, that\nwhole user scenario starts to break down.\n\n49\n00:02:20.820 --> 00:02:23.130\nIt really does become a bit of a problem,\nand\n\n50\n00:02:23.130 --> 00:02:26.420\nso we need the groups to\nbe able to manage that.\n\n51\n00:02:26.420 --> 00:02:28.290\nSo, let's take a look at how that works,\nand\n\n52\n00:02:28.290 --> 00:02:31.650\nthen we'll kinda dive into some of\nthe nitty gritty details from there.\n\n53\n00:02:31.650 --> 00:02:35.610\nFirst off, I'm just gonna jump into my AWS\nconsole here and jump over to identity and\n\n54\n00:02:35.610 --> 00:02:36.570\naccess management.\n\n55\n00:02:36.570 --> 00:02:40.120\nAnd Once I'm in there I'm going\nto go right down here to users.\n\n56\n00:02:40.120 --> 00:02:41.640\nAnd I don't have any users right now.\n\n57\n00:02:41.640 --> 00:02:45.870\nSo, as of this various sack end,\nI've just got the root account, right?\n\n58\n00:02:45.870 --> 00:02:48.420\nThe account that I logged in with\nthat's tied to my email address.\n\n59\n00:02:48.420 --> 00:02:51.040\nBut I can create new users accounts for\nmy system.\n\n60\n00:02:51.040 --> 00:02:53.080\nAnd maybe I want to create an account for\nme and\n\n61\n00:02:53.080 --> 00:02:55.330\nI want to create an account for\nDaniel, right?\n\n62\n00:02:55.330 --> 00:02:57.910\nSo, I'm just going to whip\nup some accounts for us.\n\n63\n00:02:57.910 --> 00:03:00.000\nAnd kinda tack them here into the system.\n\n64\n00:03:00.000 --> 00:03:02.080\nWe'll generate some access keys for\nthose users, there we go.\n\n65\n00:03:02.080 --> 00:03:07.980\nAnd I will download those to save them so\nthat I've got those keys.\n\n66\n00:03:07.980 --> 00:03:12.550\nAll right, so now I've got a couple\nof users, and here they are.\n\n67\n00:03:12.550 --> 00:03:16.060\nAnd, when we get into the policy section,\nI just started assigning permissions.\n\n68\n00:03:16.060 --> 00:03:19.650\nAnd I can give some permissions to Daniel\nand I can give some permissions to me and\n\n69\n00:03:19.650 --> 00:03:22.330\nmix and match and\ncustomize it however we want.\n\n70\n00:03:22.330 --> 00:03:24.860\nWhen you choose a user you'll see\nthey've got a Permissions tab, and\n\n71\n00:03:24.860 --> 00:03:28.430\nyou can attach a policy right to them,\nyou don't have to go to groups,\n\n72\n00:03:28.430 --> 00:03:32.600\nyou don't have to go to roles,\nyou can do it all from right here, right?\n\n73\n00:03:32.600 --> 00:03:37.670\nBut, if you don't like reinventing the\nwheel, if you don't like doing the same\n\n74\n00:03:37.670 --> 00:03:41.500\njob over and over and over again, that's\nwhere the groups really help us, right?\n\n75\n00:03:41.500 --> 00:03:44.850\nSo, when it comes to groups what you\nneed to do is create groups that are.\n\n76\n00:03:44.850 --> 00:03:47.150\nBased on the job rules you\nexpect people to perform.\n\n77\n00:03:47.150 --> 00:03:52.120\nSo, for example, under groups, you'll see\nthat I've created a s3bucket-admins group.\n\n78\n00:03:52.120 --> 00:03:58.485\nSo, these are people that I want to\nhave full access to my s3 three buckets.\n\n79\n00:03:58.485 --> 00:04:01.805\nThey can do whatever the heck they want,\nthey're going to get all access, and\n\n80\n00:04:01.805 --> 00:04:05.985\nthen I might create another group that\nI might call my S3 bucket read only.\n\n81\n00:04:05.985 --> 00:04:11.797\nHere are people that I want to be able\nto read file out S3 and that's it.\n\n82\n00:04:11.797 --> 00:04:14.397\nAnd I'm not gonna attach a policy\nright now but you'll see a lot\n\n83\n00:04:14.397 --> 00:04:18.697\nof these pre-built policies that are laid\nout here where you can give people access.\n\n84\n00:04:18.697 --> 00:04:24.010\nAnd as you see there's an S3\nfull access and an S3 read only\n\n85\n00:04:24.010 --> 00:04:28.690\naccess right here that I could use, and\nsave myself a little bit of time, right?\n\n86\n00:04:28.690 --> 00:04:32.440\nWe'll see custom policies in the next\nepisode, but I can go and assign that, and\n\n87\n00:04:32.440 --> 00:04:36.490\nso now that one's gonna get that read-only\nprivilege on my S3 buckets, right?\n\n88\n00:04:36.490 --> 00:04:38.520\nAnd I didn't assign one to admin,\nso I might go in here and\n\n89\n00:04:38.520 --> 00:04:39.480\ndo the same thing, right?\n\n90\n00:04:39.480 --> 00:04:46.620\nSo, I'll go and attach policy, and\nI'll give this one The S3 full access.\n\n91\n00:04:46.620 --> 00:04:50.390\nWe're gonna give them everything so\nthey can do whatever they want.\n\n92\n00:04:50.390 --> 00:04:53.210\nSo, now I've got these two groups.\n\n93\n00:04:53.210 --> 00:04:54.790\nNow.\nwhy is that important?\n\n94\n00:04:54.790 --> 00:04:58.870\nWell, if I start hiring on more employees,\nI start bringing on more people and\n\n95\n00:04:58.870 --> 00:05:01.890\nI want to give them more access,\nI don't want to have to go and\n\n96\n00:05:01.890 --> 00:05:03.440\nstart editing their individual policies.\n\n97\n00:05:03.440 --> 00:05:08.000\nIf I go to users, and create new users,\nand I start creating Accounts for\n\n98\n00:05:08.000 --> 00:05:11.130\nsome of the other hosts here on the show.\n\n99\n00:05:11.130 --> 00:05:14.160\nSo, maybe Mike and Ronnie and\nWes, all our other show hosts.\n\n100\n00:05:14.160 --> 00:05:16.050\nLet's just start adding them in.\n\n101\n00:05:16.050 --> 00:05:18.060\nI'm going to create some accounts for\nthem.\n\n102\n00:05:18.060 --> 00:05:18.940\nAll right.\n\n103\n00:05:18.940 --> 00:05:22.135\nAnd as I create those accounts I'm not\neven gonna both with her credentials,\n\n104\n00:05:22.135 --> 00:05:23.960\n[LAUGH] and so\nas I start creating, whoops.\n\n105\n00:05:23.960 --> 00:05:27.330\nAs I start creating their accounts,\nthere they are.\n\n106\n00:05:27.330 --> 00:05:31.700\nWhat if I want Mike to be an S3 admin,\nto have full access, and I want Ronny and\n\n107\n00:05:31.700 --> 00:05:34.570\nWes to just have that read-only access?\n\n108\n00:05:34.570 --> 00:05:39.760\nWell, I could go one by one to\neach of them, and grant them that\n\n109\n00:05:39.760 --> 00:05:44.630\npermission in their policy and I would\nhave to do it on a one by one basis but\n\n110\n00:05:44.630 --> 00:05:48.320\nbecause I've got groups I can\njust reuse those now right.\n\n111\n00:05:48.320 --> 00:05:52.330\nI can go to my groups,\nI can take S3 bucket admins and\n\n112\n00:05:52.330 --> 00:05:55.390\nunder the users tab I can\nadd users to that group.\n\n113\n00:05:55.390 --> 00:05:58.520\nSo, nobody's in here right now,\nI might add myself and we'll add Mike.\n\n114\n00:05:58.520 --> 00:06:00.680\nSo, Mike and\nI are gonna be S3 admins alright.\n\n115\n00:06:00.680 --> 00:06:01.650\nAnd so I'll add those users.\n\n116\n00:06:01.650 --> 00:06:04.160\nAnd then I can go back to my groups and\n\n117\n00:06:04.160 --> 00:06:09.040\nI can go to S3 bucket read only,\nand I can add users to that group.\n\n118\n00:06:09.040 --> 00:06:11.925\nAnd I can add in Daniel and\nRonnie and Wes, right?\n\n119\n00:06:11.925 --> 00:06:14.510\nSo, I'm putting them into those groups.\n\n120\n00:06:14.510 --> 00:06:19.140\nThis is far easier than going User\nby user and adding the permissions.\n\n121\n00:06:19.140 --> 00:06:23.020\nAnd a user can be in more than one group,\nso I might have a group like this for\n\n122\n00:06:23.020 --> 00:06:23.910\nS3 bucket admins, right.\n\n123\n00:06:23.910 --> 00:06:28.170\nBut I might have another one for\nEC2, right.\n\n124\n00:06:28.170 --> 00:06:34.300\nSo, I might create another group\nthat I'll call my EC2 admins.\n\n125\n00:06:34.300 --> 00:06:37.320\nAnd when I come into my\npermissions here I can I can find,\n\n126\n00:06:37.320 --> 00:06:40.780\nI'm sure there's an EC two full access,\nthere we go.\n\n127\n00:06:40.780 --> 00:06:42.420\nI'll just reuse that one.\n\n128\n00:06:42.420 --> 00:06:46.000\nI can get it put in place, and so\nnow I've got my S3 bucket admins,\n\n129\n00:06:46.000 --> 00:06:49.080\nI guess I should have just called it\nS3 admins instead of bucket admins.\n\n130\n00:06:49.080 --> 00:06:51.750\nUnfortunately you can't really\nchange the name from the.\n\n131\n00:06:51.750 --> 00:06:55.640\nYou can't change the name of these\ngroups once you've made them.\n\n132\n00:06:55.640 --> 00:06:59.690\nFrom the API you can do different things,\nbut, so this ones kind of already made.\n\n133\n00:06:59.690 --> 00:07:01.830\nBut I've got my EC two admins here,\nso I can come in and\n\n134\n00:07:01.830 --> 00:07:05.100\nI can add, and maybe I want Daniel and\nmyself to be EC two admins, right?\n\n135\n00:07:05.100 --> 00:07:11.490\nDaniel is now in the EC2 Admins group and\nhe's in the S3 bucket read-only group.\n\n136\n00:07:11.490 --> 00:07:14.250\nAnd so he's gonna get the combination\nof those permissions.\n\n137\n00:07:14.250 --> 00:07:16.330\nHe'll be able to do\nwhatever he wants in EC2,\n\n138\n00:07:16.330 --> 00:07:19.770\nbut he'll have a much more\nlimited level access in S3.\n\n139\n00:07:19.770 --> 00:07:22.710\nYou'll just be able to read from\nthe buckets that are there.\n\n140\n00:07:22.710 --> 00:07:24.230\nRight?\n\n141\n00:07:24.230 --> 00:07:27.520\nAnd the cool thing here is\nif I promote Daniel, right?\n\n142\n00:07:27.520 --> 00:07:28.820\nHypothetically, right?\n\n143\n00:07:28.820 --> 00:07:30.510\nThe things that might never happen.\n\n144\n00:07:30.510 --> 00:07:32.210\nIf we promote Daniel,\nwe decide you know what?\n\n145\n00:07:32.210 --> 00:07:35.530\nIt's time for him to take on more\nresponsibility in S3, all I have to\n\n146\n00:07:35.530 --> 00:07:38.900\ndo is take him out of the S3 Read-only\ngroup, and put him into the s3 admins.\n\n147\n00:07:38.900 --> 00:07:41.050\nI don't actually even have to\ntake him out of s3 read-only,\n\n148\n00:07:41.050 --> 00:07:43.860\nI can stick him into s3 admins so\nhe's in both.\n\n149\n00:07:43.860 --> 00:07:47.546\nAnd he'll get the higher-level privilege,\nhe'll get the s3 admin privilege, and\n\n150\n00:07:47.546 --> 00:07:48.722\nbe able to do what he needs.\n\n151\n00:07:48.722 --> 00:07:51.080\nSo, now I'm just moving\nusers between the groups.\n\n152\n00:07:51.080 --> 00:07:55.996\nThe cool part here is you set permissions\none time, and then you Use mover users\n\n153\n00:07:55.996 --> 00:08:00.410\nin and out of those groups, and\nit really, really makes life easier.\n\n154\n00:08:00.410 --> 00:08:05.020\nIf you've worked with things like\nthe Microsoft Active Directory or Mac or\n\n155\n00:08:05.020 --> 00:08:09.923\nLinux, Unix file sharing, using groups\nis a great way to control permission so\n\n156\n00:08:09.923 --> 00:08:15.069\nyou're not constantly having to go back\nand edit permissions over and over again.\n\n157\n00:08:15.069 --> 00:08:18.777\nOn a small scale like this I'm not\nreally doling out a lot of permissions.\n\n158\n00:08:18.777 --> 00:08:20.653\nBut it can get really complex.\n\n159\n00:08:20.653 --> 00:08:26.630\nI'm going call this my aws admins, right?\n\n160\n00:08:26.630 --> 00:08:30.710\nI want these people to have control\nover a lot inside of my AWS account.\n\n161\n00:08:30.710 --> 00:08:35.319\nAnd so I might want them to have\nEC2 full access, S3 full access.\n\n162\n00:08:35.319 --> 00:08:38.919\nI might here let me just filter by\nfull access, there, okay and so\n\n163\n00:08:38.919 --> 00:08:43.304\nI might wanna choose to give them full\naccess to a lot of different things right,\n\n164\n00:08:43.304 --> 00:08:45.611\nnot just the ones that we've seen so far.\n\n165\n00:08:45.611 --> 00:08:51.174\nSo I might also wanna give them,\nwell what else is here, glacier access,\n\n166\n00:08:51.174 --> 00:08:56.320\nwe might want RDS, route 53, so\nI can start to grant that access.\n\n167\n00:08:56.320 --> 00:09:00.190\nAnd these are permissions across\nseveral Different Amazon applications.\n\n168\n00:09:00.190 --> 00:09:02.720\nIf I were doing this on\na person by person policy,\n\n169\n00:09:02.720 --> 00:09:06.241\nyour security policy is now getting\nmore and more and more complex,\n\n170\n00:09:06.241 --> 00:09:10.152\nmeans it's getting harder to write and\nthis would be really challenging.\n\n171\n00:09:10.152 --> 00:09:13.005\nBut by doing it here,\nit becomes pretty simple.\n\n172\n00:09:13.005 --> 00:09:17.070\nAnd we get it put in place,\nit´s done and then off we go, right.\n\n173\n00:09:17.070 --> 00:09:21.168\nLet´s see what other access, I'm just\nkinda throwing some access in here for\n\n174\n00:09:21.168 --> 00:09:21.986\nthe heck of it.\n\n175\n00:09:21.986 --> 00:09:24.821\n>> Check all Don [LAUGH]\n>> Yeah I know, here I'll do it, I am full\n\n176\n00:09:24.821 --> 00:09:27.836\naccess that´s a dangerous one right there\nbecause they can go in and start to manage\n\n177\n00:09:27.836 --> 00:09:30.570\nthe user accounts, which means they\ncan manage the permissions, right?\n\n178\n00:09:30.570 --> 00:09:33.112\nSo you'd have to really\ntrust somebody to do that.\n\n179\n00:09:33.112 --> 00:09:35.133\nBut it's gonna basically\nbuild up that policy and\n\n180\n00:09:35.133 --> 00:09:38.319\nnow I can start putting people in that\ngroup and now they'll have that access.\n\n181\n00:09:38.319 --> 00:09:41.440\nSo really, really powerful stuff there.\n\n182\n00:09:41.440 --> 00:09:44.150\n>> Now Don, you mentioned about the groups\nlike who, you have the read only\n\n183\n00:09:44.150 --> 00:09:47.790\naccess and then you said, if you promoted\nme, you put me into the full access.\n\n184\n00:09:47.790 --> 00:09:49.485\nAnd then you just leave\nme in the other ones.\n\n185\n00:09:49.485 --> 00:09:50.611\nIs that a dangerous thing to do?\n\n186\n00:09:50.611 --> 00:09:51.236\nIs that okay?\n\n187\n00:09:51.236 --> 00:09:52.736\nIs that the best practice?\n\n188\n00:09:52.736 --> 00:09:55.290\n>> From a paperwork standpoint,\nit gets confusing.\n\n189\n00:09:55.290 --> 00:09:58.704\nWhen you're troubleshooting an issue,\nyou've gotta look at people's different\n\n190\n00:09:58.704 --> 00:10:01.875\nmemberships to figure that out, so it is\na good idea to take them out of one group\n\n191\n00:10:01.875 --> 00:10:04.736\nand put them in the other but\nyou don't have to it just gets confusing.\n\n192\n00:10:04.736 --> 00:10:08.332\nThe only time where it really becomes\na problem is if you specifically\n\n193\n00:10:08.332 --> 00:10:10.569\ndenied somebody access, you can do that.\n\n194\n00:10:10.569 --> 00:10:13.971\nWhen you write a policy,\npolicies can allow and they can deny and\n\n195\n00:10:13.971 --> 00:10:16.870\nif it's just all allows,\nthen the policies combine.\n\n196\n00:10:16.870 --> 00:10:18.630\nPeople get the best priviledge but\n\n197\n00:10:18.630 --> 00:10:21.480\nif there's denies in there it\nstarts to block that and so\n\n198\n00:10:21.480 --> 00:10:25.194\nit might be specifically allowed in\none policy, and denied in another.\n\n199\n00:10:25.194 --> 00:10:27.462\nNow you've gotta troubleshoot and\nfigure out where their denied and so\n\n200\n00:10:27.462 --> 00:10:28.610\nthat becomes really challenging.\n\n201\n00:10:28.610 --> 00:10:31.737\nI try not to use denies whenever\npossible but sometimes you need them,\n\n202\n00:10:31.737 --> 00:10:33.069\nthat's why they're there.\n\n203\n00:10:33.069 --> 00:10:33.940\nOtherwise it wouldn't be a feature.\n\n204\n00:10:33.940 --> 00:10:36.030\nSo you just have to remember\nto double check that.\n\n205\n00:10:36.030 --> 00:10:37.370\n>> Awesome stuff.\n\n206\n00:10:37.370 --> 00:10:39.780\nOkay, we've a User's,\nwe've seen groups now, and\n\n207\n00:10:39.780 --> 00:10:41.480\nnow we gotta move into the roles area.\n\n208\n00:10:41.480 --> 00:10:44.241\nNow, this is a very interesting section,\n\n209\n00:10:44.241 --> 00:10:48.319\nbecause roles is about users that\nare outside of our business?\n\n210\n00:10:48.319 --> 00:10:49.900\n>> That's right, yeah.\n\n211\n00:10:49.900 --> 00:10:54.054\nIf you're just Administering AWS and\neverything exists within AWS then you have\n\n212\n00:10:54.054 --> 00:10:56.569\nno need for roles and\nyou're not gonna use them.\n\n213\n00:10:56.569 --> 00:11:00.420\nIt'll just be empty, you'll pretend\nit's not there and that's it, right?\n\n214\n00:11:00.420 --> 00:11:04.430\nWhich is partly why that makes these\nharder questions on the exam because\n\n215\n00:11:04.430 --> 00:11:07.050\nit's something a lot of people don't use.\n\n216\n00:11:07.050 --> 00:11:11.054\nBut if you wanna integrate some\nexternal system with Amazon,\n\n217\n00:11:11.054 --> 00:11:13.527\nthen you will need to use these roles.\n\n218\n00:11:13.527 --> 00:11:18.269\nAnd a great example of that is where\nmaybe you've got email servers or\n\n219\n00:11:18.269 --> 00:11:20.010\nS3 buckets, right?\n\n220\n00:11:20.010 --> 00:11:21.569\nWe'll use S3 buckets.\n\n221\n00:11:21.569 --> 00:11:24.102\nWe've got S3 buckets for\nfile storage setup and\n\n222\n00:11:24.102 --> 00:11:28.220\nI want people in my company to be\nable to access those S3 buckets.\n\n223\n00:11:28.220 --> 00:11:31.700\nBut I don't want them to have\na new username and password,\n\n224\n00:11:31.700 --> 00:11:32.970\nI want single sign on.\n\n225\n00:11:32.970 --> 00:11:36.300\nMaybe I have\na Microsoft Active Directory and\n\n226\n00:11:36.300 --> 00:11:38.210\nI want them to be able to\naccess the S3 bucket and\n\n227\n00:11:38.210 --> 00:11:41.210\nuse their Microsoft Active Directory\nusername and password to login.\n\n228\n00:11:41.210 --> 00:11:45.090\nAnd that way they can access it with the\naccount that they've got that they're used\n\n229\n00:11:45.090 --> 00:11:47.900\nto, they don't have to learn a new one,\nbut I still maintain security.\n\n230\n00:11:47.900 --> 00:11:50.110\nAnd if they need to reset their password,\nthey go and\n\n231\n00:11:50.110 --> 00:11:52.830\nreset it in Windows and\nnow it's updated here.\n\n232\n00:11:52.830 --> 00:11:55.590\nIt's not a second account\nthat we're tacking on.\n\n233\n00:11:55.590 --> 00:12:00.840\nWhen you create users in AWS, what you're\ndoing is creating a second account, right?\n\n234\n00:12:00.840 --> 00:12:02.410\nOr it might be their 512th account.\n\n235\n00:12:02.410 --> 00:12:04.480\nI shudder when I look at my last pass and\n\n236\n00:12:04.480 --> 00:12:08.500\nthe amount of user accounts that I have\nin there from all these different sites.\n\n237\n00:12:08.500 --> 00:12:10.760\nSo, if we can minimize that\nthe better off that we'll be,\n\n238\n00:12:10.760 --> 00:12:13.090\nand that´s what rolls are all about.\n\n239\n00:12:13.090 --> 00:12:14.500\nSo when I go into rolls,\n\n240\n00:12:14.500 --> 00:12:17.840\nit actually looks really similar\nto what we saw with groups, right.\n\n241\n00:12:17.840 --> 00:12:20.949\nWhen I go into groups,\nI see the list of groups that I have,\n\n242\n00:12:20.949 --> 00:12:24.690\nI have a create New Group option, and\nyou'll see where I can delete and\n\n243\n00:12:24.690 --> 00:12:27.945\nedit groups and so on, which,\nwe can edit a group name.\n\n244\n00:12:27.945 --> 00:12:29.902\nApparently, I'm gonna learn\nsomething on this show.\n\n245\n00:12:29.902 --> 00:12:32.693\nLet's see if that [CROSSTALK]\n>> As of yesterday, they added [LAUGH].\n\n246\n00:12:32.693 --> 00:12:35.481\n>> I know, I thought in the GUI you\ncouldn't change a group name but\n\n247\n00:12:35.481 --> 00:12:37.611\nit certainly looks like\nthey've changed that.\n\n248\n00:12:37.611 --> 00:12:41.486\nSo if I make these my s3admins,\nwe'll see if this works.\n\n249\n00:12:41.486 --> 00:12:43.696\nI've always had to do it\nfrom the command line.\n\n250\n00:12:43.696 --> 00:12:45.026\nAnd that's how Amazon is.\n\n251\n00:12:45.026 --> 00:12:47.058\nYou know sometimes\na feature will roll out and\n\n252\n00:12:47.058 --> 00:12:49.153\nit always rolls out on\nthe command line first.\n\n253\n00:12:49.153 --> 00:12:49.819\nRight?\n\n254\n00:12:49.819 --> 00:12:52.610\nBecause it'll be part of the API and then\nthey'll update the GUI to add support.\n\n255\n00:12:52.610 --> 00:12:55.230\nThis unfortunately could have\nbeen around for years and\n\n256\n00:12:55.230 --> 00:12:58.570\nI haven't noticed just because\nI get used to doing it one way.\n\n257\n00:12:58.570 --> 00:13:03.622\nBut there you can change the name\nright here so that it's convenient.\n\n258\n00:13:03.622 --> 00:13:07.360\nAll right, so there we go, so\nwe got some nice new names.\n\n259\n00:13:07.360 --> 00:13:11.320\nNow, here we can create groups and\nyou got your various group actions.\n\n260\n00:13:11.320 --> 00:13:13.120\nIf I go down to roles\nI can create roles and\n\n261\n00:13:13.120 --> 00:13:14.920\nI can lead various role actions, right?\n\n262\n00:13:14.920 --> 00:13:17.110\nAnd when you look under my roles actions.\n\n263\n00:13:17.110 --> 00:13:21.880\nI don't have a whole lot in there,\nI've got Delete Role and that's it.\n\n264\n00:13:21.880 --> 00:13:27.450\nAnd that's because these roles are really\nkinda fake, right, it's not a real group.\n\n265\n00:13:27.450 --> 00:13:32.220\nWhat it is is a mapping to some\nkinda collection of identities or\n\n266\n00:13:32.220 --> 00:13:35.190\nmaybe even a single identity,\nthat resides outside of AWS.\n\n267\n00:13:35.190 --> 00:13:36.694\nIt resides somewhere else.\n\n268\n00:13:36.694 --> 00:13:39.942\nOkay, so in the example I gave you\nof Microsoft Active Directory,\n\n269\n00:13:39.942 --> 00:13:43.828\nthey've got a user account and a password\nover there in the Active Directory and\n\n270\n00:13:43.828 --> 00:13:45.120\nthat's what I wanna use.\n\n271\n00:13:45.120 --> 00:13:47.940\nI don't wanna use a user\nfrom right here in AWS.\n\n272\n00:13:47.940 --> 00:13:50.190\nSo, I can use a role instead.\n\n273\n00:13:50.190 --> 00:13:52.050\nAnd that's the most common use for a role.\n\n274\n00:13:52.050 --> 00:13:55.130\nThere is another use which is if\nyou have an application, right.\n\n275\n00:13:55.130 --> 00:13:59.694\nSo let's say you write a program and you\nneed the program to be able to access S3.\n\n276\n00:13:59.694 --> 00:14:00.910\nAnd access it securely.\n\n277\n00:14:00.910 --> 00:14:03.180\nWell, you don't need to create\na user account for the program.\n\n278\n00:14:03.180 --> 00:14:04.340\nYou can create a role and\n\n279\n00:14:04.340 --> 00:14:07.530\nit can generate an authentication\ntoken that ties it to the role.\n\n280\n00:14:07.530 --> 00:14:10.193\nAnd then it can login and\nwork with the system based on that.\n\n281\n00:14:10.193 --> 00:14:13.950\nSo your role will usually be\nmapped to either an application or\n\n282\n00:14:13.950 --> 00:14:18.648\nmapped to a user or a collection of users\nthat exists in an external directly,\n\n283\n00:14:18.648 --> 00:14:22.940\nall right and if I go here to create\na new roll, I can give it a name.\n\n284\n00:14:22.940 --> 00:14:30.401\nAnd so I might call this my msad,\ncuz my Microsoft Active Directory.\n\n285\n00:14:30.401 --> 00:14:34.194\nSo this would end up be\nmy msad administrators.\n\n286\n00:14:34.194 --> 00:14:37.278\nAll right and so\nI´m gonna create this roll and\n\n287\n00:14:37.278 --> 00:14:40.990\nthen it´s gonna ask what\nkinda role this is gonna be.\n\n288\n00:14:40.990 --> 00:14:42.390\nIs this gonna be an EC2 role?\n\n289\n00:14:42.390 --> 00:14:44.910\nRight?\nSo that people will be able to access\n\n290\n00:14:44.910 --> 00:14:46.290\ninstances with this identity?\n\n291\n00:14:46.290 --> 00:14:48.440\nIs it gonna be for\ndirectory services and so on.\n\n292\n00:14:48.440 --> 00:14:52.444\nAnd you'll see all the stuff kinda\nlaid out we can map this role too.\n\n293\n00:14:52.444 --> 00:14:54.930\nRight?\nWho it is we're gonna be giving access to.\n\n294\n00:14:54.930 --> 00:14:57.478\nAnd when you look at it,\nwe've got Service Roles,\n\n295\n00:14:57.478 --> 00:15:00.277\nwhich are what our application's\nnormally gonna use.\n\n296\n00:15:00.277 --> 00:15:05.232\nBut then down here you'll see\nCross Account Access and Role for\n\n297\n00:15:05.232 --> 00:15:07.486\nIdentity Provider Access.\n\n298\n00:15:07.486 --> 00:15:11.470\nHere's where we really start to see\nthat this is something outside.\n\n299\n00:15:11.470 --> 00:15:15.610\nThis is on the outside of AWS, and\nif I go to that role for Cross Account,\n\n300\n00:15:15.610 --> 00:15:19.487\nyou'll see provide access between\nAWS accounts you own, right?\n\n301\n00:15:19.487 --> 00:15:22.580\nThat would be more than one AWS account,\nand\n\n302\n00:15:22.580 --> 00:15:27.861\nthen allows IM users from a third party\nAWS account to access this account.\n\n303\n00:15:27.861 --> 00:15:29.611\nThat's what we would use for consultants.\n\n304\n00:15:29.611 --> 00:15:33.430\nMaybe you hire some AWS consultants, and\nyou wanna give them access to your AWS,\n\n305\n00:15:33.430 --> 00:15:35.690\nbut you don't wanna create accounts for\nthem.\n\n306\n00:15:35.690 --> 00:15:38.140\nThey've already got accounts, right?\n\n307\n00:15:38.140 --> 00:15:40.790\nWe can use this to map to\ntheir existing AWS account so\n\n308\n00:15:40.790 --> 00:15:42.486\nyou can give them access to ours.\n\n309\n00:15:42.486 --> 00:15:45.028\nBoth of these are cross account.\n\n310\n00:15:45.028 --> 00:15:47.777\nTalking about cross AWS accounts.\n\n311\n00:15:47.777 --> 00:15:50.694\nAnd then when we get down here,\nrole for identity provider.\n\n312\n00:15:50.694 --> 00:15:54.736\nHere's where we start talking about people\nwho are outside of the organization.\n\n313\n00:15:54.736 --> 00:15:56.166\nOutside of AWS entirely.\n\n314\n00:15:56.166 --> 00:15:59.166\nSo you'll see things like\nWeb Single Sign On and\n\n315\n00:15:59.166 --> 00:16:03.903\nSAML which are ways we can start to\nintegrate with these external systems.\n\n316\n00:16:03.903 --> 00:16:07.965\nAnd if you haven't heard these terms\nbefore, they're pretty standard.\n\n317\n00:16:07.965 --> 00:16:14.606\nSAML is\nthe Security Assertion Markup Language.\n\n318\n00:16:14.606 --> 00:16:18.918\nAnd what it is, is a standardized format\nthat security credentials can be exchanged\n\n319\n00:16:18.918 --> 00:16:19.900\nbetween systems.\n\n320\n00:16:19.900 --> 00:16:24.220\nIf you think about it, if I've got\nMicrosoft Active Directory on one side,\n\n321\n00:16:24.220 --> 00:16:27.870\nand AWS on the other,\nthey login two very different ways.\n\n322\n00:16:27.870 --> 00:16:29.260\nThey have two very different credentials.\n\n323\n00:16:29.260 --> 00:16:31.200\nHow do they match up?\n\n324\n00:16:31.200 --> 00:16:34.800\nThey need a standard format and\nso, SAML is that standard format.\n\n325\n00:16:34.800 --> 00:16:38.870\nYou'll see a lot of systems that are out\nthere supportive and allow us to do that,\n\n326\n00:16:38.870 --> 00:16:39.670\nthat common connection.\n\n327\n00:16:39.670 --> 00:16:42.280\nThere's other alternatives\nthat are out there,\n\n328\n00:16:42.280 --> 00:16:44.530\nbut SAML is probably the most common.\n\n329\n00:16:45.960 --> 00:16:50.230\n>> So, Don, that kind leads us into, we\nsee that we can integrate these types of\n\n330\n00:16:50.230 --> 00:16:54.712\nservices, obviously these roles as well,\ninto things like Active Directory.\n\n331\n00:16:54.712 --> 00:16:55.793\nThat's always very nice.\n\n332\n00:16:55.793 --> 00:17:00.607\nObviously, just AWS users and\nthat generally isn't, but\n\n333\n00:17:00.607 --> 00:17:03.794\nwhere else can we integrate into into?\n\n334\n00:17:03.794 --> 00:17:08.169\n>> So, it's kind of a funny question and\nthe official answer is anywhere.\n\n335\n00:17:08.169 --> 00:17:09.876\nYou can really get it to\nauthenticate anywhere.\n\n336\n00:17:09.876 --> 00:17:11.670\nNow, I know what that sounds like but wow.\n\n337\n00:17:11.670 --> 00:17:12.795\nWow.\nI can integrate with anything.\n\n338\n00:17:12.795 --> 00:17:14.700\nThis is easy.\n\n339\n00:17:14.700 --> 00:17:16.731\n>> My own computer [LAUGH]\n>> It is not easy by any means, okay?\n\n340\n00:17:16.731 --> 00:17:19.937\nAnd in fact, on the exam you're likely to\nsee a question that this phrase this way\n\n341\n00:17:19.937 --> 00:17:23.285\nthat you need to answer, let's say this is\nnot easy, this is really really stinking\n\n342\n00:17:23.285 --> 00:17:26.230\nhard, and so it's not something\nthat we can just flip on, right?\n\n343\n00:17:26.230 --> 00:17:30.780\nAnd let me give you an example so\nI told you it's SAML compliant, all\n\n344\n00:17:30.780 --> 00:17:33.810\nright well it is, it is SAML compliant, we\nsee right here SAML providers wonderful.\n\n345\n00:17:33.810 --> 00:17:37.430\nBut if I wanna use that is my Microsoft\n\n346\n00:17:37.430 --> 00:17:41.610\nactive directory SAML\ncompliant well not in default.\n\n347\n00:17:41.610 --> 00:17:42.490\nI have to set up what\n\n348\n00:17:42.490 --> 00:17:46.080\nare called the Active Directory\nFederation Services, ADFS.\n\n349\n00:17:46.080 --> 00:17:48.150\nAnd ADFS is what makes it SAML compliant.\n\n350\n00:17:48.150 --> 00:17:51.640\nAnd then I've got to configure\nthese two things to talk.\n\n351\n00:17:51.640 --> 00:17:54.360\nAnd when they talk, I've gotta have\nsome kind of controller in-between.\n\n352\n00:17:54.360 --> 00:17:56.840\nAnd ADFS can do that, and\nthat can be the controller.\n\n353\n00:17:56.840 --> 00:17:57.540\nOr if it's Microsoft.\n\n354\n00:17:57.540 --> 00:18:01.294\nBut if it's some other database, right?\n\n355\n00:18:01.294 --> 00:18:04.335\nAnd maybe I've got a mainframe\nthat I wanna authenticate again.\n\n356\n00:18:04.335 --> 00:18:06.252\nMaybe I've got a Apple Open Directory.\n\n357\n00:18:06.252 --> 00:18:08.410\nMaybe I've got a Novell e-directory or\nwhatever.\n\n358\n00:18:08.410 --> 00:18:10.720\nThere's all sort of directory services.\n\n359\n00:18:10.720 --> 00:18:11.780\nOpen LDAP, right?\n\n360\n00:18:11.780 --> 00:18:13.910\nMaybe I just have open LDAP.\n\n361\n00:18:13.910 --> 00:18:17.930\nWell, I need it to be communicating\n\n362\n00:18:17.930 --> 00:18:22.280\nin that standard manner using SAML and so\nto do that I've got a couple of choices.\n\n363\n00:18:22.280 --> 00:18:24.760\nRight?\nOne is, I put a controller in between it\n\n364\n00:18:24.760 --> 00:18:30.350\nand probably the most popular controller\nthat's out there because the educational\n\n365\n00:18:30.350 --> 00:18:33.630\nenvironments have all locked on to\nit is a product called Shibboleth.\n\n366\n00:18:33.630 --> 00:18:34.190\nRight?\n\n367\n00:18:34.190 --> 00:18:36.630\nAnd what Shibboleth is,\nis it's a controller.\n\n368\n00:18:36.630 --> 00:18:40.970\nIt's designed to sit between\ntwo disparate systems, right?\n\n369\n00:18:40.970 --> 00:18:44.340\nSo, you get an AWS on one side,\nand Active Directory on the other.\n\n370\n00:18:44.340 --> 00:18:47.010\nOr AWS on one side, and\nyour mainframe on the other.\n\n371\n00:18:47.010 --> 00:18:48.820\nNouvelle E-directory, whatever it is,\n\n372\n00:18:48.820 --> 00:18:52.480\nwhatever your directory service is and\nthen somebody can develop.\n\n373\n00:18:52.480 --> 00:18:56.630\nSomebody can write a program\nthat interacts between the two.\n\n374\n00:18:56.630 --> 00:18:59.990\nAnd you could write a program that could\ninteract between your directory and\n\n375\n00:18:59.990 --> 00:19:03.410\nAWS but where Shibboleth comes in\nhandy is a lot of people are writing\n\n376\n00:19:03.410 --> 00:19:05.940\nintegrations between their product and\nShibboleth.\n\n377\n00:19:05.940 --> 00:19:08.310\nIt's like a common ground in the middle.\n\n378\n00:19:08.310 --> 00:19:10.620\nAnd Shibboleth is open source, it's free.\n\n379\n00:19:10.620 --> 00:19:14.020\nYou can Download it and install it,\nit is not easy to get running.\n\n380\n00:19:14.020 --> 00:19:16.970\nThere's a lot of work involved,\nbut the key thing here is,\n\n381\n00:19:16.970 --> 00:19:18.410\nthere will be development work.\n\n382\n00:19:18.410 --> 00:19:22.380\nYou will need application developers or\nprogrammers to be able to get in and\n\n383\n00:19:22.380 --> 00:19:25.310\ncreate this integration, so\nthat your authentication credentials from\n\n384\n00:19:25.310 --> 00:19:28.040\nyour database are in the right\nformat to be recognized by AWS.\n\n385\n00:19:28.040 --> 00:19:29.990\nThere's a lot of A lot of work.\n\n386\n00:19:29.990 --> 00:19:32.242\nIf you do some google searching and\nhunt around there's a lot of countries\n\n387\n00:19:32.242 --> 00:19:34.294\nthat have already written this\nsoftware and can save you the time.\n\n388\n00:19:34.294 --> 00:19:38.241\nBut on the exam if it asks what are some\nof the initial steps in getting this set\n\n389\n00:19:38.241 --> 00:19:41.090\nup, one of the initial steps\nis the development work.\n\n390\n00:19:41.090 --> 00:19:43.640\nYou've got to develop that and\nthat's beyond the scope of the exam, so\n\n391\n00:19:43.640 --> 00:19:45.300\nthey're not going to\nask you to set this up.\n\n392\n00:19:45.300 --> 00:19:48.210\nThey're not going to ask you all\nthe steps to getting it set up.\n\n393\n00:19:48.210 --> 00:19:49.780\nThey just want you to\nunderstand the concept.\n\n394\n00:19:49.780 --> 00:19:51.050\nHow does this work?\n\n395\n00:19:51.050 --> 00:19:54.790\nAnd the way it works is\nactually kinda neat.\n\n396\n00:19:54.790 --> 00:19:56.411\nBut before I jump into the how it works,\n\n397\n00:19:56.411 --> 00:19:59.126\nthere's one more thing I need to\nmention or I'm gonna forget it.\n\n398\n00:19:59.126 --> 00:20:03.430\nSAML is great, it's a standard,\na lot of people support it.\n\n399\n00:20:03.430 --> 00:20:06.630\nIf you put Shibboleth in between,\nyou get great easy support there, but\n\n400\n00:20:06.630 --> 00:20:08.280\nit's not the only option.\n\n401\n00:20:08.280 --> 00:20:11.760\nIf you want one that's a little\nless painful, you can do OpenID.\n\n402\n00:20:11.760 --> 00:20:15.890\nAnd you'll see up here I've got this grant\naccess to web identity providers and\n\n403\n00:20:15.890 --> 00:20:20.920\na little list of different providers\nlike Amazon, Facebook, Google, OpenID.\n\n404\n00:20:20.920 --> 00:20:25.110\nA lot of these guys have already\ncreated a standards-based system\n\n405\n00:20:25.110 --> 00:20:27.820\nthat's ready to adopt and OpenID is\nwhat's kind of push that forward and\n\n406\n00:20:27.820 --> 00:20:29.580\nso you might want to consider doing that.\n\n407\n00:20:29.580 --> 00:20:31.450\nNow, Open ID is not technically CML.\n\n408\n00:20:31.450 --> 00:20:35.740\nIt actually is very, very similar,\nbut it's not technically there.\n\n409\n00:20:35.740 --> 00:20:40.470\nIt's kind of like its own standard and\nit's another one that's out there.\n\n410\n00:20:40.470 --> 00:20:43.560\nYou can go to the Open ID foundation site,\nOpenID.net, and\n\n411\n00:20:43.560 --> 00:20:45.610\nAmazon already has\nintegrations to Open ID.\n\n412\n00:20:45.610 --> 00:20:48.850\nSo, if you have a database,\nsome kind of user directory that\n\n413\n00:20:48.850 --> 00:20:51.470\nalready has integration OpenID,\nyour work might be done.\n\n414\n00:20:51.470 --> 00:20:52.970\nYou might not need development.\n\n415\n00:20:52.970 --> 00:20:57.540\nIf you support open ID and Amazon supports\nopen ID, then the work is already done.\n\n416\n00:20:57.540 --> 00:21:01.220\nYou're ready to rock and that can kind\nof take away he pain on this, right?\n\n417\n00:21:01.220 --> 00:21:04.917\nBut not everybody supports this,\nlike Microsoft doesn't support it so\n\n418\n00:21:04.917 --> 00:21:07.044\nyou'll bump into that from time to time.\n\n419\n00:21:07.044 --> 00:21:10.180\nDifferent people choose different\nstandards, I guess, and\n\n420\n00:21:10.180 --> 00:21:12.544\nleave it to Microsoft to\npick a different one.\n\n421\n00:21:12.544 --> 00:21:15.211\nBut, at least it's something so\njust keep that in mind.\n\n422\n00:21:15.211 --> 00:21:18.425\nAll right,\nnow when we go to set this stuff up.\n\n423\n00:21:18.425 --> 00:21:21.545\nWe really just need to know that\nthere is gonna be development work,\n\n424\n00:21:21.545 --> 00:21:22.565\nthere has to be integrations, and\n\n425\n00:21:22.565 --> 00:21:25.795\nthen we need to understand\nthe steps that are gonna happen.\n\n426\n00:21:25.795 --> 00:21:26.495\nOkay?\n\n427\n00:21:26.495 --> 00:21:28.405\nAnd the steps,\nbasically it works like this,\n\n428\n00:21:28.405 --> 00:21:30.745\nthere's really three\nthings that they go on.\n\n429\n00:21:30.745 --> 00:21:33.510\nIn Amazon, In AWS,\nwe have what's called the STS, and\n\n430\n00:21:33.510 --> 00:21:34.960\nthe STS is the security token service,\nall right.\n\n431\n00:21:34.960 --> 00:21:37.650\nWhat it does is, you've got a user account\nout in a directory, and let's just say\n\n432\n00:21:37.650 --> 00:21:41.600\nthat it's an Active Directory,\nright, a Microsoft Active Directory.\n\n433\n00:21:41.600 --> 00:21:45.790\nSo, there's a user account and a password\nover there and when you login in Microsoft\n\n434\n00:21:45.790 --> 00:21:52.420\nworld, it generates a token and you use\nthat token to And access stuff, right?\n\n435\n00:21:52.420 --> 00:21:54.211\nWell, that token doesn't work in AWS.\n\n436\n00:21:54.211 --> 00:22:00.520\nAnd so, when you log into OWS,\nwhat we need to map to is a role.\n\n437\n00:22:00.520 --> 00:22:03.400\nAnd the roll will have a token tied to it.\n\n438\n00:22:03.400 --> 00:22:06.470\nAnd you'll use that token\nwhen accessing AWS resources.\n\n439\n00:22:06.470 --> 00:22:09.750\nSo, the way the system\nworks is when you log in,\n\n440\n00:22:09.750 --> 00:22:13.780\nthis security token service,\nthe STS, is kind of a pivotal\n\n441\n00:22:13.780 --> 00:22:17.230\npiece because what it's doing is it's\nrunning us through the login process.\n\n442\n00:22:17.230 --> 00:22:18.490\nIt's reaching out to your directory.\n\n443\n00:22:18.490 --> 00:22:20.940\nIt always authenticates the user\nagainst your directory first,\n\n444\n00:22:20.940 --> 00:22:22.530\nright, that's the first step.\n\n445\n00:22:22.530 --> 00:22:25.350\nSo, authenticates the user\nthere cuz if the username and\n\n446\n00:22:25.350 --> 00:22:28.340\npassword is invalid over there\nthen we just need to stop, right.\n\n447\n00:22:28.340 --> 00:22:31.010\nSo it validates against\nthe external directory first,\n\n448\n00:22:31.010 --> 00:22:34.880\nthen it validates against The AWS\nenvironment, alright, and\n\n449\n00:22:34.880 --> 00:22:37.960\nthen lastly it generates a token,\nthere's actually this function called,\n\n450\n00:22:37.960 --> 00:22:42.680\nwhat is it, like, get off token,\nor something like that.\n\n451\n00:22:42.680 --> 00:22:44.440\nGet federation token, there we go.\n\n452\n00:22:44.440 --> 00:22:45.830\nSo, it does a get federation token,\n\n453\n00:22:45.830 --> 00:22:50.010\nit generates that token,\nwhich matches up with the role, and then.\n\n454\n00:22:50.010 --> 00:22:51.720\nYou now have a token\nto access services and\n\n455\n00:22:51.720 --> 00:22:54.490\nyou got all the permissions that role has.\n\n456\n00:22:54.490 --> 00:22:56.350\nAnd now you function in\nthe AWS environment.\n\n457\n00:22:56.350 --> 00:22:59.670\nAnd you never actually had to provide\na separate username and password to AWS.\n\n458\n00:22:59.670 --> 00:23:03.260\nIt matched you to the role and\nthen you get that access.\n\n459\n00:23:03.260 --> 00:23:04.690\nThat's what's going on in the background.\n\n460\n00:23:04.690 --> 00:23:06.520\nSo, it's really just\na three phase process.\n\n461\n00:23:06.520 --> 00:23:11.140\nAuthenticating it through a remote\ndirectory, authenticating against AWS, and\n\n462\n00:23:11.140 --> 00:23:12.610\nthen generate a token for the role.\n\n463\n00:23:12.610 --> 00:23:13.940\nAnd get to work.\n\n464\n00:23:13.940 --> 00:23:17.852\nSo, that's kind of the three pieces or\nsteps that happen there, and\n\n465\n00:23:17.852 --> 00:23:20.686\nthere's three components\nwe need to be aware of or\n\n466\n00:23:20.686 --> 00:23:24.877\non the exam terms that you might see,\none of which is the identity broker.\n\n467\n00:23:24.877 --> 00:23:26.430\nThe identity broker,\n\n468\n00:23:26.430 --> 00:23:31.836\nthat's what's actually matching the remote\nuser account with a role in AWS.\n\n469\n00:23:31.836 --> 00:23:35.086\nThat broker,\nthat's where the development comes in.\n\n470\n00:23:35.086 --> 00:23:36.711\nThat broker might be Shibboleth.\n\n471\n00:23:36.711 --> 00:23:38.211\nIt might be something you wrote yourself.\n\n472\n00:23:38.211 --> 00:23:40.711\nIt might be Microsoft Active\nDirectory Federation Services.\n\n473\n00:23:40.711 --> 00:23:42.336\nI might be any number of things.\n\n474\n00:23:42.336 --> 00:23:46.211\nThere was another one,\nTarantella I think was another one.\n\n475\n00:23:46.211 --> 00:23:48.168\nThere has been a bunch over the years.\n\n476\n00:23:48.168 --> 00:23:52.196\nThe guys who made Solaris,\nSun Microsystems,\n\n477\n00:23:52.196 --> 00:23:55.120\nthey used to have a really big one.\n\n478\n00:23:55.120 --> 00:23:55.752\nI can't remember what it's name was,\nthat's how big it was.\n\n479\n00:23:55.752 --> 00:23:57.127\n>> [LAUGH] It was huge.\n\n480\n00:23:57.127 --> 00:23:58.961\n>> So, anyhow, but it was huge.\n\n481\n00:23:58.961 --> 00:24:02.590\nSo, that is your identity broker.\n\n482\n00:24:02.590 --> 00:24:05.120\nThat's what's matching\nthese things together.\n\n483\n00:24:05.120 --> 00:24:07.640\nAnd then on the remote side,\nand even on the local side,\n\n484\n00:24:07.640 --> 00:24:09.120\nyou have your identity store.\n\n485\n00:24:09.120 --> 00:24:11.168\nThe identity store, that's where\nall these user accounts reside.\n\n486\n00:24:11.168 --> 00:24:15.178\nSo, it might Be your active directory,\nyour LDAP database, like OpenLDAP,\n\n487\n00:24:15.178 --> 00:24:19.371\nit might be Apple's Open Directory, it\ncould be any number of different things,\n\n488\n00:24:19.371 --> 00:24:22.167\nbut it's where your user\nUser accounts restored, and\n\n489\n00:24:22.167 --> 00:24:25.974\nthen lastly we've got the identities\nthemselves, and the identities.\n\n490\n00:24:25.974 --> 00:24:28.575\nI always get in this habit of just\nthinking of them as users, but\n\n491\n00:24:28.575 --> 00:24:30.882\nidentities can be more than a user,\nit could be a group,\n\n492\n00:24:30.882 --> 00:24:32.570\nit could be a computer account, right?\n\n493\n00:24:32.570 --> 00:24:34.700\nI might not be authenticating the user,\n\n494\n00:24:34.700 --> 00:24:37.120\nI might be authenticating their\nphysical computer, right?\n\n495\n00:24:37.120 --> 00:24:38.030\nThat's an identity.\n\n496\n00:24:38.030 --> 00:24:39.440\n>> So, it's more like an object.\n\n497\n00:24:39.440 --> 00:24:41.591\n>> Yeah, a great way to look at it.\n\n498\n00:24:41.591 --> 00:24:44.209\nAnything that you need to\nvalidate the identity of and\n\n499\n00:24:44.209 --> 00:24:47.127\nI don't wanna use the word in\nit's definition but, yeah.\n\n500\n00:24:47.127 --> 00:24:49.252\nMake sure they are who they say they are.\n\n501\n00:24:49.252 --> 00:24:51.137\nThat's something that's an identity.\n\n502\n00:24:51.137 --> 00:24:53.864\nSo, all that kinda gets\nwrapped together and\n\n503\n00:24:53.864 --> 00:24:56.780\nis what creates this ultimate solution.\n\n504\n00:24:56.780 --> 00:25:01.590\nSo, I could, well no, I really couldn't,\nI could run through a whole lab area and\n\n505\n00:25:01.590 --> 00:25:03.040\nshow you exactly how How to set this up,\nbut\n\n506\n00:25:03.040 --> 00:25:05.770\nit is well beyond the scope of\nthe exam because they know every\n\n507\n00:25:05.770 --> 00:25:08.520\nenvironment's a little different,\nyou've got to develop it yourself.\n\n508\n00:25:08.520 --> 00:25:12.830\nBasically, the way that it works is you\ncome in here in your dashboard, and\n\n509\n00:25:12.830 --> 00:25:16.050\neven before you create rules, like don't\nbother creating rules in the beginning,\n\n510\n00:25:16.050 --> 00:25:18.620\njust jump right down here\nto Identity Providers.\n\n511\n00:25:18.620 --> 00:25:20.750\nAnd under Identity Providers,\nhere's where you've got a map for\n\n512\n00:25:20.750 --> 00:25:21.595\nthat external provider.\n\n513\n00:25:21.595 --> 00:25:23.683\nSo you can create a provider.\n\n514\n00:25:23.683 --> 00:25:26.974\nAnd it's gonna ask you is\nthis gonna be SAML or OpenID.\n\n515\n00:25:26.974 --> 00:25:31.165\nAnd if it's OpenID, boy, that's the easy\none, that's the one you wanna do\n\n516\n00:25:31.165 --> 00:25:35.470\nif your system supports it, but\nif it doesn't you can choose SAML.\n\n517\n00:25:35.470 --> 00:25:39.180\nNow, you've got to provide a provider\nname and feed it a metadata document.\n\n518\n00:25:39.180 --> 00:25:42.680\nAnd that metadata document,\nthat's what contains all the set up for\n\n519\n00:25:42.680 --> 00:25:44.210\nwhere our authentication\ntickets have to be sent.\n\n520\n00:25:44.210 --> 00:25:47.770\nAnd where that's gonna be deposited,\nwhere our service broker resides, and\n\n521\n00:25:47.770 --> 00:25:49.130\nall that other information.\n\n522\n00:25:49.130 --> 00:25:51.632\nIt's actually a very complex file that\nhopefully whatever system you choose\n\n523\n00:25:51.632 --> 00:25:52.293\ngenerates for you.\n\n524\n00:25:52.293 --> 00:25:56.251\nSo, for example, Shibboleth can\nactually generate these files and\n\n525\n00:25:56.251 --> 00:26:00.630\nthen you can just load them in here and\nit kinda takes away that pain, right?\n\n526\n00:26:00.630 --> 00:26:03.150\nAnd then it's gonna verify that and\nonce it's verified,\n\n527\n00:26:03.150 --> 00:26:07.570\nnow I've got a provider Setup, somebody\nwho, that I can reach out and talk to.\n\n528\n00:26:07.570 --> 00:26:12.530\nAnd from there we can jump under roles and\nstart to add our roles and\n\n529\n00:26:12.530 --> 00:26:18.040\nmap them to those other providers, and so\nthat was where I saw, way down here under\n\n530\n00:26:18.040 --> 00:26:23.370\nRole for Identity Provider Access, that\nwe can come in here and grant access to\n\n531\n00:26:23.370 --> 00:26:27.050\nsingle sign-on or SAML, and API access,\nso I might choose to do this one.\n\n532\n00:26:27.050 --> 00:26:30.280\nAnd you You can pick who your SAML\nprovider is, which I don't have one and\n\n533\n00:26:30.280 --> 00:26:33.880\nspecify the value and any other\nconditions for who this is gonna match.\n\n534\n00:26:33.880 --> 00:26:37.140\nSo, you might have a condition\nthat says if this is a user,\n\n535\n00:26:37.140 --> 00:26:40.790\nthe username has to equal this, or if it's\na group the group name has to equal this.\n\n536\n00:26:40.790 --> 00:26:43.470\nAnd so you can set the conditions\nthat match this and\n\n537\n00:26:43.470 --> 00:26:46.530\nthen you can set a policy that\nget the permissions right.\n\n538\n00:26:46.530 --> 00:26:50.070\nSo, it's a lot of work,\nthere's a lot of steps to this but\n\n539\n00:26:50.070 --> 00:26:53.035\nonce it's done you don't have\npeople with two accounts.\n\n540\n00:26:53.035 --> 00:26:56.266\nThey just have one account,\nthat's how they access the system and\n\n541\n00:26:56.266 --> 00:26:59.337\nit takes away that pain of getting\nlogged into a remote system.\n\n542\n00:26:59.337 --> 00:27:03.222\n>> Yeah like you said it's always nice to\nhave that single sign on option where.\n\n543\n00:27:03.222 --> 00:27:06.781\nYou could go look in you last batch,\nyou've got 45 different user names and\n\n544\n00:27:06.781 --> 00:27:07.890\naccounts and all that.\n\n545\n00:27:07.890 --> 00:27:12.150\nThat's not the way we wanna go, we wanna\nconsolidate as much as possible so\n\n546\n00:27:12.150 --> 00:27:14.680\nbeing able to use an account\nthat already exists\n\n547\n00:27:14.680 --> 00:27:17.625\nis a very nice feature that's at us\nusing this type of functionality.\n\n548\n00:27:17.625 --> 00:27:21.030\nDon, is there anything else we need\nto know about this type of role?\n\n549\n00:27:21.030 --> 00:27:22.800\n>> Not as far as the type of role just for\nthe exam.\n\n550\n00:27:22.800 --> 00:27:25.338\nThey're really going to hammer\nyou on the terminology, right?\n\n551\n00:27:25.338 --> 00:27:26.508\nBe familiar with those terms.\n\n552\n00:27:26.508 --> 00:27:29.549\nAll the terms that I've mentioned\ngoing through here, you know.\n\n553\n00:27:29.549 --> 00:27:32.669\nThe identity broker,\neach of those different pieces.\n\n554\n00:27:32.669 --> 00:27:35.266\nThey just want you to be\nfamiliar with those concepts, and\n\n555\n00:27:35.266 --> 00:27:37.970\nwhat needs to be in place to\ncreate the solution, all right.\n\n556\n00:27:37.970 --> 00:27:41.525\nThey don't actually expect you to\ncreate the solution cuz that's a high\n\n557\n00:27:41.525 --> 00:27:42.754\ndollar consulting job.\n\n558\n00:27:42.754 --> 00:27:45.172\n>> You write your own check at that point.\n\n559\n00:27:45.172 --> 00:27:46.090\n[LAUGH]\n>> Or\n\n560\n00:27:46.090 --> 00:27:47.376\nhave somebody else write a check for you.\n\n561\n00:27:47.376 --> 00:27:49.449\n[LAUGH]\n>> This is a number I would like,\n\n562\n00:27:49.449 --> 00:27:49.968\nplease, sir.\n\n563\n00:27:49.968 --> 00:27:51.183\nI don't do that now.\n\n564\n00:27:51.183 --> 00:27:52.930\nAll right, Don, well excellent stuff.\n\n565\n00:27:52.930 --> 00:27:55.630\n>> We now understand a little\nbit more when it comes to users,\n\n566\n00:27:55.630 --> 00:27:58.860\ngroups and roles and how we can\nintegrate that with different systems.\n\n567\n00:27:58.860 --> 00:28:00.690\nThat makes our job a whole lot nicer and\n\n568\n00:28:00.690 --> 00:28:03.040\nhopefully that'll help you out\nwhen it comes to that exam time.\n\n569\n00:28:03.040 --> 00:28:05.464\nLike Don said,\nyou don't have to be an uber-developer and\n\n570\n00:28:05.464 --> 00:28:08.092\nget into the depth of this,\njust kinda understand the process.\n\n571\n00:28:08.092 --> 00:28:10.962\nSo, if you have to go over this\na couple of times until that starts\n\n572\n00:28:10.962 --> 00:28:11.931\nto make sense to you.\n\n573\n00:28:11.931 --> 00:28:14.471\nAnd Don, I really think you did\na good job of explaining that for us.\n\n574\n00:28:14.471 --> 00:28:15.471\nSo, thank you for that!\n\n575\n00:28:15.471 --> 00:28:19.793\nAnything else that we want to cover before\nwe let these good people go for the day?\n\n576\n00:28:19.793 --> 00:28:20.554\n>> That's all I've got.\n\n577\n00:28:20.554 --> 00:28:21.632\nThis is a good spot to write this away.\n\n578\n00:28:21.632 --> 00:28:24.255\nKeep in mind that I do want to talk\nmore about this because we haven't seen\n\n579\n00:28:24.255 --> 00:28:26.798\nsecurity policies yet, so\nthat'll be coming up in the next episode.\n\n580\n00:28:26.798 --> 00:28:27.512\nStay tuned for that.\n\n581\n00:28:27.512 --> 00:28:28.860\n>> All right, I'm looking forward to it.\n\n582\n00:28:28.860 --> 00:28:32.850\nSo, like Don says, good spot for\nus to close down.signing off for ITpro.TV,\n\n583\n00:28:32.850 --> 00:28:35.255\nI've been your host, Daniel Lowrie\n>> And I'm Don Pezet.\n\n584\n00:28:35.255 --> 00:28:37.265\n>> We'll see you next time.\n\n585\n00:28:37.265 --> 00:28:43.450\n[MUSIC]\n\n",
          "vimeoId": "146522921"
        },
        {
          "description": "In this episode, Don and Daniel explain Identity and Access Management(IAM) security policies. They start by defining IAM security policies, both what they are and how they are implemented for granting access. Then they show you how to implement prebuilt security polices or create custom IAM security policies that are better suited for your environment.",
          "length": "2058",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/amazon-acsa/amazon-acsa-1-5-iam_security_policies-111715-CLN.mp4.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/amazon-acsa/amazon-acsa-1-5-iam_security_policies-111715-CLN.mp4-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/amazon-acsa/amazon-acsa-1-5-iam_security_policies-111715-CLN.mp4-sm.jpg",
          "title": "IAM Security Policies",
          "transcript": "WEBVTT\n\n1\n00:00:00.000 --> 00:00:01.730\n[MUSIC]\n\n2\n00:00:01.730 --> 00:00:02.315\nAll right, greetings everyone.\n\n3\n00:00:02.315 --> 00:00:07.935\nWelcome to another great episode of\nITProTV. I'm your host Daniel Lowrie,\n\n4\n00:00:07.935 --> 00:00:14.676\nand today's episode we're continuing\n\n5\n00:00:14.676 --> 00:00:23.211\non with more\nAWS Certified SysOps Administrator.\n\n6\n00:00:23.211 --> 00:00:26.150\nTrying to get you ready for\nthat certification exam.\n\n7\n00:00:26.150 --> 00:00:29.430\nAnd who better to help me out with that\nthan none other than my good friend and\n\n8\n00:00:29.430 --> 00:00:31.880\ncolleague the illustrious Mr. Don Pezet.\n\n9\n00:00:31.880 --> 00:00:33.230\nHow's it going today Don.\n\n10\n00:00:33.230 --> 00:00:33.750\n>> Illustrious.\n\n11\n00:00:33.750 --> 00:00:35.180\nI should've worn a wig.\n\n12\n00:00:35.180 --> 00:00:37.500\nHi, I'm glad to be back\non the show Daniel and\n\n13\n00:00:37.500 --> 00:00:39.880\nwe're ready to move into\na really important topic.\n\n14\n00:00:39.880 --> 00:00:43.070\nWe've been talking about IAM a lot right,\nidentity and access management.\n\n15\n00:00:43.070 --> 00:00:46.800\nAnd in this episode we're gonna\ntake a look at security policies.\n\n16\n00:00:46.800 --> 00:00:49.700\nAnd if you're working IAM and\nyou're not using security policies,\n\n17\n00:00:49.700 --> 00:00:51.300\nyou kind of missed the point, right?\n\n18\n00:00:51.300 --> 00:00:54.170\nThis is the whole point of doing IAM\nis that it can filter the access that\n\n19\n00:00:54.170 --> 00:00:56.470\npeople get, and\nwe use security policies to do that.\n\n20\n00:00:56.470 --> 00:01:00.030\nSo we're gonna see how to do\nthat right here in this episode.\n\n21\n00:01:00.030 --> 00:01:02.785\n>> Yeah well it sounds like Don,\nas you're kind of defining what\n\n22\n00:01:02.785 --> 00:01:04.035\n>> We mean by security policies,\n\n23\n00:01:04.035 --> 00:01:07.415\nit seems like it's really just a fancy\nAWS term for like a Nexus control list.\n\n24\n00:01:07.415 --> 00:01:08.775\n>> That's exactly what it is.\n\n25\n00:01:08.775 --> 00:01:09.405\nAn ACL.\n\n26\n00:01:09.405 --> 00:01:14.325\nYeah, and where it gets a little more\ncomplex is if you think about like in\n\n27\n00:01:14.325 --> 00:01:18.910\nMicrosoft, Windows, or Unix,\neven on Mac you have file permissions.\n\n28\n00:01:18.910 --> 00:01:20.140\nAnd you can take that file and\n\n29\n00:01:20.140 --> 00:01:24.930\nyou can say Daniel has read access and\nI have write access.\n\n30\n00:01:24.930 --> 00:01:26.960\nWell that's how these policies work.\n\n31\n00:01:26.960 --> 00:01:31.510\nExcept they go far beyond just read and\nwrite access.\n\n32\n00:01:31.510 --> 00:01:36.130\nYou can say for example that Daniel has\npermission to stop this one EC2 instance.\n\n33\n00:01:36.130 --> 00:01:38.830\nAnd he has permission to\nwrite to this other S3.\n\n34\n00:01:38.830 --> 00:01:41.720\nAnd he has permission to\ncreate databases in RDS, but\n\n35\n00:01:41.720 --> 00:01:43.760\nhe doesn't have permission in dynamo DB.\n\n36\n00:01:43.760 --> 00:01:47.480\nSo you can get really\nspecific into these services,\n\n37\n00:01:47.480 --> 00:01:51.280\nand that makes it a lot more\npowerful than just file ACL.\n\n38\n00:01:51.280 --> 00:01:54.080\nIf you think of it as a file ACL,\nthat is basically how it works.\n\n39\n00:01:54.080 --> 00:01:57.327\nWe write a list of all the things\nsomebody is allowed to do.\n\n40\n00:01:57.327 --> 00:01:59.130\nAnd the way this use to work,\n\n41\n00:01:59.130 --> 00:02:03.210\nis that you'd create these securities\npolicies on each individual service.\n\n42\n00:02:03.210 --> 00:02:07.360\nSo I would have to go into RDS and define\nall sorts of policies there for my users.\n\n43\n00:02:07.360 --> 00:02:09.220\nAnd then I would have to go to S3 and\n\n44\n00:02:09.220 --> 00:02:11.200\ndefine all sorts of bucket policies for\nmy users.\n\n45\n00:02:11.200 --> 00:02:12.740\nBut now, with IAM,\n\n46\n00:02:12.740 --> 00:02:17.330\nwe can put all the policies in one\ncentralized place, and that is a godsend.\n\n47\n00:02:17.330 --> 00:02:20.010\nIt really makes things so\nmuch more convenient to manage.\n\n48\n00:02:20.010 --> 00:02:22.187\nWe go to one place, we create the policy.\n\n49\n00:02:22.187 --> 00:02:26.970\nAnd the policy can refer to any\nnumber of resources in our system.\n\n50\n00:02:26.970 --> 00:02:30.830\nIt can map together RDS and S3 and EC2 and\n\n51\n00:02:30.830 --> 00:02:34.750\nall the other different\nfeatures that are out there.\n\n52\n00:02:34.750 --> 00:02:36.300\nIt does make life a lot easier.\n\n53\n00:02:36.300 --> 00:02:38.560\n>> As you say this,\nI'm thinking to myself,\n\n54\n00:02:38.560 --> 00:02:42.050\nI've been around the AWS a little bit and\nthen played around inside of there.\n\n55\n00:02:42.050 --> 00:02:44.410\nThere's a lot of different\nthings that you can configure.\n\n56\n00:02:44.410 --> 00:02:48.564\nLike you said, it gets down to some really\nfine control, and that makes me think\n\n57\n00:02:48.564 --> 00:02:52.420\nwhere do I even begin to make a correct\npolicy for a user or a group account.\n\n58\n00:02:52.420 --> 00:02:56.160\n>> Well, we are going to jump into IAM.\n\n59\n00:02:56.160 --> 00:02:59.810\nWe're going to go into policies and\nwe're gonna create them there.\n\n60\n00:02:59.810 --> 00:03:04.330\nIf you know exactly what you want to dole\nout permissions for, you can do that.\n\n61\n00:03:04.330 --> 00:03:06.990\nBut, I recommend starting one step back.\n\n62\n00:03:06.990 --> 00:03:09.730\nAnd saying, I need to think\nabout what I'm going to secure.\n\n63\n00:03:09.730 --> 00:03:11.890\nAm I gonna be securing an S3 bucket?\n\n64\n00:03:11.890 --> 00:03:14.390\nAm I going to be securing an EC2 instance?\n\n65\n00:03:14.390 --> 00:03:15.920\nAm I gonna be securing an RDS database?\n\n66\n00:03:15.920 --> 00:03:21.220\nBecause when we write this policy,\nwe have to tell it what we're securing.\n\n67\n00:03:21.220 --> 00:03:26.420\nAnd in AWS it uses what are called AR\nAmazon Resource Names refer to everything.\n\n68\n00:03:26.420 --> 00:03:29.100\nWe need to know the ARNs\nbefore we can write a pulse.\n\n69\n00:03:29.100 --> 00:03:31.710\nEven if we use the wizard,\nthat makes life easy for us,\n\n70\n00:03:31.710 --> 00:03:32.890\nyou still need to know the ARNs.\n\n71\n00:03:32.890 --> 00:03:36.030\nSo if you're not familiar with those,\nthat's where you really need to start.\n\n72\n00:03:36.030 --> 00:03:40.580\nIf you're already familiar with it though,\nyou can skip right past it.\n\n73\n00:03:40.580 --> 00:03:43.220\nBy this point, I think most of\nyou watching this video probably\n\n74\n00:03:43.220 --> 00:03:44.670\nare comfortable with it.\n\n75\n00:03:44.670 --> 00:03:47.330\nBut just, as a quick refresher\nI've got Amazon's help page for\n\n76\n00:03:47.330 --> 00:03:48.410\nARNs pulled up here.\n\n77\n00:03:48.410 --> 00:03:51.700\nAnd if we take a look at it you'll see\nwhere it's just talking about those\n\n78\n00:03:51.700 --> 00:03:52.660\nAmazon Resource Names.\n\n79\n00:03:52.660 --> 00:03:55.650\nAnd they give us some great example\nARNs down here that you can\n\n80\n00:03:55.650 --> 00:03:58.230\nsee kind of what they look like.\n\n81\n00:03:58.230 --> 00:04:02.030\nAnd they're easy to spot because\nthey always start with arn: right?\n\n82\n00:04:02.030 --> 00:04:06.480\nSo we know it's an arn since it tells\nus that and then the next part would\n\n83\n00:04:06.480 --> 00:04:10.740\nusually say aws, and after that we'll\nstart to see what the service is.\n\n84\n00:04:10.740 --> 00:04:15.310\nSo like here's arn:aws:autoscaling or\narn:aws:cloudtrail.\n\n85\n00:04:15.310 --> 00:04:19.400\nLogs, you'll see code come int and\nsome other other guys.\n\n86\n00:04:19.400 --> 00:04:21.730\nOr EC2 dynamoDB right.\n\n87\n00:04:21.730 --> 00:04:25.160\nSo we start with arn:aws\nfollowed by the service.\n\n88\n00:04:25.160 --> 00:04:29.440\nAfter that,\nall consistency's out the window\n\n89\n00:04:29.440 --> 00:04:33.290\nbecause in s3bucket You're dealing\nwith files and folders, right?\n\n90\n00:04:33.290 --> 00:04:34.850\nNot really folders, tags.\n\n91\n00:04:34.850 --> 00:04:37.840\nIn EC2, you're dealing with\nvirtual machines or instances.\n\n92\n00:04:37.840 --> 00:04:41.690\nIn RDS, you're dealing with databases,\nso they're dealing with different types\n\n93\n00:04:41.690 --> 00:04:46.400\nof data, and so anything beyond that third\nentry is not necessarily standardized.\n\n94\n00:04:46.400 --> 00:04:48.080\nSo, you've gotta understand the service.\n\n95\n00:04:48.080 --> 00:04:51.150\nFor EC2, I might see something like here.\n\n96\n00:04:51.150 --> 00:04:55.283\nWhere we got arn:aws:ec2 followed\nby a region, then my account-id,\n\n97\n00:04:55.283 --> 00:04:58.560\nthen my customer-gateway and\nthen lastly this right here.\n\n98\n00:04:58.560 --> 00:04:59.820\nIf I'm referring to a gateway.\n\n99\n00:04:59.820 --> 00:05:00.970\nIf we're doing an instance,\n\n100\n00:05:00.970 --> 00:05:04.370\nit would be here in instance\nfollowed by the instance-id.\n\n101\n00:05:04.370 --> 00:05:06.880\nThat's a lot different than\n\n102\n00:05:06.880 --> 00:05:10.880\nif I'm doing s3 where I don't\nnecessarily worry about regions right.\n\n103\n00:05:10.880 --> 00:05:15.730\nSo if I, let me see if can find S3\nhere real quick, and...did I skip it?\n\n104\n00:05:15.730 --> 00:05:17.480\n>> Is it all the way at the bottom?\n\n105\n00:05:17.480 --> 00:05:19.370\n>> Is it?\nIt's right there.\n\n106\n00:05:19.370 --> 00:05:23.890\nSo, S3, see how where I would have region\nand account ID for like an instance,\n\n107\n00:05:23.890 --> 00:05:26.230\nhere they're just blank,\nright, colon, colon, colon.\n\n108\n00:05:26.230 --> 00:05:27.790\nJust two gaps.\nAnd the bucket name.\n\n109\n00:05:27.790 --> 00:05:29.640\nAnd maybe a path after that.\n\n110\n00:05:29.640 --> 00:05:33.550\nSo, the ARNs can be different, depending\non the service that we're securing.\n\n111\n00:05:33.550 --> 00:05:35.340\nSo we need to be aware of that.\n\n112\n00:05:35.340 --> 00:05:37.450\nAnd we need to know\nthe ARNs of our object.\n\n113\n00:05:37.450 --> 00:05:40.980\nUnless we're just trying\nto do something really big.\n\n114\n00:05:40.980 --> 00:05:45.170\nLike, I want Daniel to have full\ncontrol over all of my s3 environment.\n\n115\n00:05:45.170 --> 00:05:47.000\nI don't need to know ARNs for that.\n\n116\n00:05:47.000 --> 00:05:47.580\nThat's big, right?\n\n117\n00:05:47.580 --> 00:05:50.460\nI just need to know arn:s3,\ndone, or ARN aws:s3, but\n\n118\n00:05:50.460 --> 00:05:54.720\nif I'm trying to secure it down\nto an individual resource,\n\n119\n00:05:54.720 --> 00:05:57.870\nI need to do my research first,\nI need to get this information.\n\n120\n00:05:57.870 --> 00:06:00.840\nSo for example,\nif I wanna secure an instance,\n\n121\n00:06:00.840 --> 00:06:04.630\nI probably need to go in here to my\ninstances, and get my instance IDs.\n\n122\n00:06:04.630 --> 00:06:08.340\nI'm gonna need these IDs to\nlock that down in the policy.\n\n123\n00:06:08.340 --> 00:06:10.930\nSo step one,\ndo some information gathering.\n\n124\n00:06:10.930 --> 00:06:14.580\nGet a piece of paper and a pencil and\nstart writing down, here's the resources I\n\n125\n00:06:14.580 --> 00:06:17.990\nwanna secure, here's the permissions\nthat I wanna create.\n\n126\n00:06:17.990 --> 00:06:20.530\nStep two, we go and\ncreate the policies, all right?\n\n127\n00:06:20.530 --> 00:06:22.400\nNow when we go to create the policies,\n\n128\n00:06:22.400 --> 00:06:26.410\nthere's actually multiple\nplaces we can create them.\n\n129\n00:06:26.410 --> 00:06:29.540\nSo for example, if I wanted to\nsecure a particular service,\n\n130\n00:06:29.540 --> 00:06:32.090\nlike an S3 bucket,\nI could go into my S3 bucket.\n\n131\n00:06:32.090 --> 00:06:34.610\nAnd you have what are called\nbucket policies, right?\n\n132\n00:06:34.610 --> 00:06:39.320\nSo if I come in here and take this bucket,\nbucket1, my creative naming,\n\n133\n00:06:39.320 --> 00:06:43.300\nI can go into permissions, and I could add\na That is a bucket policy right there.\n\n134\n00:06:43.300 --> 00:06:47.640\nThat is a policy for all intensive\npurposes that's just for us three but\n\n135\n00:06:47.640 --> 00:06:49.830\nwe lose the central management.\n\n136\n00:06:49.830 --> 00:06:53.090\nSo where I really want\nto do it is under IAM.\n\n137\n00:06:53.090 --> 00:06:56.610\nSo if I jump back to my console,\nand I go to IAM, and\n\n138\n00:06:56.610 --> 00:07:02.600\nI come in here I got my users and my\ngroups and down here I've got my Policies.\n\n139\n00:07:02.600 --> 00:07:07.160\nNow, I can come down to policies, and\ncreate them here from scratch, and\n\n140\n00:07:07.160 --> 00:07:10.170\njust write a policy that's\nnot really tied to anything.\n\n141\n00:07:10.170 --> 00:07:12.410\nBut, normally we want our policies\nto either be tied to a user or\n\n142\n00:07:12.410 --> 00:07:13.275\na group, right.\n\n143\n00:07:13.275 --> 00:07:14.035\nI recommend a group.\n\n144\n00:07:14.035 --> 00:07:17.575\nBecause if I wanna gives Daniel permission\nto access a particular server, and\n\n145\n00:07:17.575 --> 00:07:22.445\nthen a month from now, I want to give\nsomebody else access to that same server.\n\n146\n00:07:22.445 --> 00:07:24.935\nIf I tie it to a group, all I have\nto do is take the other person and\n\n147\n00:07:24.935 --> 00:07:26.140\nstick them in the group.\n\n148\n00:07:26.140 --> 00:07:27.190\nRight?\n\n149\n00:07:27.190 --> 00:07:30.870\nVersus if I had written the policy\njust for Daniel, when I wanna give\n\n150\n00:07:30.870 --> 00:07:34.140\npermission to somebody else, I've gotta go\nand edit the policy just for that person.\n\n151\n00:07:34.140 --> 00:07:35.820\nI gotta redo the work a second time.\n\n152\n00:07:35.820 --> 00:07:37.640\nIt's better to have it on a group.\n\n153\n00:07:37.640 --> 00:07:39.500\nSo you could come right\ndown here to policies and\n\n154\n00:07:39.500 --> 00:07:41.670\ncreate them, but\nI don't really do it that way.\n\n155\n00:07:41.670 --> 00:07:44.380\nI normally go up here to Groups and\nstart from here.\n\n156\n00:07:44.380 --> 00:07:45.230\nHere, okay?\n\n157\n00:07:45.230 --> 00:07:50.030\nAnd when you create a group,\nyou create it with an idea, right?\n\n158\n00:07:50.030 --> 00:07:53.355\nSo I might have S3 admins.\nI want S3 admins to be able to access all\n\n159\n00:07:53.355 --> 00:07:54.590\nof my S3 stuff.\n\n160\n00:07:54.590 --> 00:08:00.673\nOr I might create a new group like,\nmaybe it's my Route 53 admins, right?\n\n161\n00:08:00.673 --> 00:08:03.590\nI want these guys to have all\nsorts of access to route 53.\n\n162\n00:08:03.590 --> 00:08:07.270\nAnd as we move forward, here's where\nit asked us to attach a policy.\n\n163\n00:08:07.270 --> 00:08:11.870\nIf we had written the policy ahead of\ntime, we can add it right here, right?\n\n164\n00:08:11.870 --> 00:08:17.080\nBut, if you haven't written the policy,\nwell it's not gonna show\n\n165\n00:08:17.080 --> 00:08:20.190\nup in our list then we can't add\nsomething that doesn't exist, right?\n\n166\n00:08:20.190 --> 00:08:21.430\nSo a little bit of a problem for us.\n\n167\n00:08:21.430 --> 00:08:24.510\nSo we can always come back and\nwrite one after the fact, right?\n\n168\n00:08:24.510 --> 00:08:28.430\nSo I usually create the group first and\nthen we'll stick the policy on it.\n\n169\n00:08:28.430 --> 00:08:33.550\nNow, there are a number of built in\npolicies that already exist, right?\n\n170\n00:08:33.550 --> 00:08:38.110\nAmazon created some policies\nthat are designed to be kind of\n\n171\n00:08:38.110 --> 00:08:39.430\na common scenario type thing.\n\n172\n00:08:39.430 --> 00:08:42.910\nAnd my scenario here of route 53 admins,\nthat's fairly common.\n\n173\n00:08:42.910 --> 00:08:46.780\nIf I go up here to the policy and\njust type route, it'll filter it down.\n\n174\n00:08:46.780 --> 00:08:51.070\nAnd you'll see where I've got\nthe different options here that I\n\n175\n00:08:51.070 --> 00:08:51.800\ncan pick from.\n\n176\n00:08:51.800 --> 00:08:55.330\nMy giant Mickey Mouse cursor, not letting\nme stretch that column out there.\n\n177\n00:08:55.330 --> 00:08:59.621\nBut you'll see, we've got like DomainsRead\nonly, ReadOnlyforalltheAccess or\n\n178\n00:08:59.621 --> 00:09:03.335\nthie general access,\nDomainsFullAccess and Route53FullAccess.\n\n179\n00:09:03.335 --> 00:09:06.120\nDomainsFullAccess means you can go in and\n\n180\n00:09:06.120 --> 00:09:10.210\nyou can modify the domains but\nyou can't create new domains.\n\n181\n00:09:10.210 --> 00:09:13.840\nAnd then the Route53FullAccess\nmeans you've got everything,\n\n182\n00:09:13.840 --> 00:09:15.130\neven creating new zones.\n\n183\n00:09:15.130 --> 00:09:16.240\nSo, I'm gonna check that, right?\n\n184\n00:09:16.240 --> 00:09:18.520\nThese are gonna be my\nfull route 53 admins.\n\n185\n00:09:18.520 --> 00:09:21.520\nNow, these are ones that Amazon wrote,\nokay?\n\n186\n00:09:21.520 --> 00:09:24.440\nIf you go up here to policy type,\nyou can change that, and\n\n187\n00:09:24.440 --> 00:09:27.640\nyou can tell it to show me just\nCustomer Managed Policies.\n\n188\n00:09:27.640 --> 00:09:29.120\nThose are ones that you wrote, right?\n\n189\n00:09:29.120 --> 00:09:31.400\nI haven't written any, so it's blank.\n\n190\n00:09:31.400 --> 00:09:34.290\nSo I'm gonna change that back to managed\nand I'll see that policy right there.\n\n191\n00:09:34.290 --> 00:09:35.720\nThe Amazon ones are great.\n\n192\n00:09:35.720 --> 00:09:38.180\nThey're not designed to be edited, right?\n\n193\n00:09:38.180 --> 00:09:41.980\nSo the policy is there,\nit already serves some kind of function.\n\n194\n00:09:41.980 --> 00:09:44.970\nYou can use it or\nyou can ignore it, right?\n\n195\n00:09:44.970 --> 00:09:48.810\nThe customer managed ones\nare the ones that we created and\n\n196\n00:09:48.810 --> 00:09:51.150\nyou can write them from scratch or\n\n197\n00:09:51.150 --> 00:09:54.630\nyou can copy one of these policies to\ncreate a user as a starting point.\n\n198\n00:09:54.630 --> 00:09:57.360\nAnd then kind of elaborate from there,\nright?\n\n199\n00:09:57.360 --> 00:09:59.760\nSo I'll just use this built-in one for\nright now.\n\n200\n00:09:59.760 --> 00:10:02.750\n>> So these are really templative or\nfoundational for us, and gets us going,\n\n201\n00:10:02.750 --> 00:10:06.760\nand then once we get that foundation,\nwe use it as a template to build our own.\n\n202\n00:10:06.760 --> 00:10:08.040\n>> Exactly right.\n\n203\n00:10:08.040 --> 00:10:09.970\nAnd they do meet the needs\nof a lot of people, but\n\n204\n00:10:09.970 --> 00:10:11.880\nthey don't meet everybody's needs.\n\n205\n00:10:11.880 --> 00:10:13.845\nIf I wanna get somebody\naccess to one S3 Bucket.\n\n206\n00:10:13.845 --> 00:10:15.693\nWell, Amazon doesn't know\nas S3 Bucket names so\n\n207\n00:10:15.693 --> 00:10:18.075\nthey can't create those policies for\nus ahead of time, right?\n\n208\n00:10:18.075 --> 00:10:20.210\nCuz they don't know what\nbuckets we're gonna create.\n\n209\n00:10:20.210 --> 00:10:22.470\nWe would have to come in and\ncreate our own there.\n\n210\n00:10:22.470 --> 00:10:24.800\nSo, often, you'll do a mix and a match.\n\n211\n00:10:24.800 --> 00:10:28.880\nYou use some of the Amazon ones, and\nthen you'll write your own, right.\n\n212\n00:10:28.880 --> 00:10:30.610\nSo, I'm gonna go ahead and\njust create that.\n\n213\n00:10:30.610 --> 00:10:32.200\nAnd now, I've got that route 53 admins.\n\n214\n00:10:32.200 --> 00:10:34.940\nAnd if I put users in there,\nthey'll get that policy, right.\n\n215\n00:10:34.940 --> 00:10:39.660\nWell, on the left here,\nI'm gonna jump over to policies, and\n\n216\n00:10:39.660 --> 00:10:43.080\nI'm gonna create my own policy this time,\nall right.\n\n217\n00:10:43.080 --> 00:10:45.130\nMaybe I have a couple of S3 buckets and\n\n218\n00:10:45.130 --> 00:10:47.740\nI wanna give Daniel access\nto one of those buckets.\n\n219\n00:10:47.740 --> 00:10:51.890\nAnd I wanna give him access to\njust the bucket number two, right.\n\n220\n00:10:51.890 --> 00:10:55.270\nAnd I gotta remember all my\nbuckets that I've got here.\n\n221\n00:10:55.270 --> 00:10:59.100\nSo if I jump over to my S3 environment.\n\n222\n00:10:59.100 --> 00:11:02.440\nI've actually got itprotvawsdemo.bucket1,\nbucket2, bucket3.\n\n223\n00:11:02.440 --> 00:11:04.630\nI wanna get Daniel assess to bucket2,\nright.\n\n224\n00:11:04.630 --> 00:11:08.830\nNone of the other buckets,\njust bucket2 all right.\n\n225\n00:11:08.830 --> 00:11:10.640\n>> It's the best bucket so [LAUGH].\n\n226\n00:11:10.640 --> 00:11:13.710\n>> And well yeah that's\nwhere all the good stuff is.\n\n227\n00:11:13.710 --> 00:11:16.265\nSo, I don't have a built-in Amazon\npolicy that's gonna do that, right.\n\n228\n00:11:16.265 --> 00:11:18.103\nBecause they didn't know I was\ngonna have bucket2, right.\n\n229\n00:11:18.103 --> 00:11:19.707\nI made that.\nSo I'm gonna have to create a custom\n\n230\n00:11:19.707 --> 00:11:20.400\npolicy for that.\n\n231\n00:11:20.400 --> 00:11:23.260\nSo I can choose get started and\nI can whip one up.\n\n232\n00:11:23.260 --> 00:11:24.230\nNow notice.\n\n233\n00:11:24.230 --> 00:11:26.040\nWhen I choose Get Started,\nI see all their policies.\n\n234\n00:11:26.040 --> 00:11:28.210\nKnow what?\nWhy do I see their policies?\n\n235\n00:11:28.210 --> 00:11:31.260\nWell, I might wanna view what the policy\ndoes, and you can click on it.\n\n236\n00:11:31.260 --> 00:11:33.000\nAnd you can actually see\nwhat that policy does.\n\n237\n00:11:33.000 --> 00:11:35.410\nAnd this is a great example of here of\n\n238\n00:11:35.410 --> 00:11:38.040\none of the policies because\nthis one's pretty simple.\n\n239\n00:11:38.040 --> 00:11:40.350\nRight.\nI just clicked on the s3,\n\n240\n00:11:40.350 --> 00:11:42.425\nthe full control one.\n\n241\n00:11:42.425 --> 00:11:43.920\nRight.\nAnd if you look at what it does.\n\n242\n00:11:43.920 --> 00:11:50.560\nThese documents are basically like\nlittle XML documents almost, right?\n\n243\n00:11:50.560 --> 00:11:53.500\nAnd when you look at it,\nthey'll say things like the version.\n\n244\n00:11:53.500 --> 00:11:55.010\nAnd this one's got a version\nof October 17, 2012.\n\n245\n00:11:55.010 --> 00:11:55.800\nWell, we're in 2015.\n\n246\n00:11:55.800 --> 00:11:57.260\nThis is pretty old.\n\n247\n00:11:57.260 --> 00:11:59.550\nThese policies haven't changed much.\n\n248\n00:11:59.550 --> 00:12:04.300\nAnd so Amazon hasn't updated this one,\nand they probably won't ever, right.\n\n249\n00:12:04.300 --> 00:12:05.550\nThey don't really need to.\n\n250\n00:12:05.550 --> 00:12:08.610\nBut if you look it's got a statement and\n\n251\n00:12:08.610 --> 00:12:10.860\nthe statement has three\nvalues inside of it.\n\n252\n00:12:10.860 --> 00:12:12.670\nAn Effect, an Action, and a Resource.\n\n253\n00:12:12.670 --> 00:12:15.820\nThe effect, are we allowing or\ndenying, right?\n\n254\n00:12:15.820 --> 00:12:17.340\nWhat is it we're giving?\n\n255\n00:12:17.340 --> 00:12:19.420\nUsually we allow,\nwe're granting somebody access.\n\n256\n00:12:19.420 --> 00:12:22.630\nBut you can deny just as well.\n\n257\n00:12:22.630 --> 00:12:24.190\nThe Action, here it's s3:*.\n\n258\n00:12:24.190 --> 00:12:27.080\nIn other words,\nevery action possible for s3.\n\n259\n00:12:27.080 --> 00:12:27.770\nRight?\n\n260\n00:12:27.770 --> 00:12:29.490\nSo this is a pretty big one.\n\n261\n00:12:29.490 --> 00:12:30.250\nAnd then the Resource,\n\n262\n00:12:30.250 --> 00:12:34.930\nevery resource, that star, that wild\ncard means everything inside of s3.\n\n263\n00:12:34.930 --> 00:12:36.410\nSo this is a pretty all\nencompassing policy,\n\n264\n00:12:36.410 --> 00:12:40.950\nbut it shows you guys the structure before\nwe make one that's a little more specific.\n\n265\n00:12:40.950 --> 00:12:44.840\nI wanna give Daniel\njust Access to bucket2.\n\n266\n00:12:44.840 --> 00:12:48.170\nSo I need something a little more\nspecific than what this is doing.\n\n267\n00:12:48.170 --> 00:12:50.370\nAnd this action is set to star.\n\n268\n00:12:50.370 --> 00:12:54.101\nThat's gonna be read, write,\ndelete, create folders,\n\n269\n00:12:54.101 --> 00:12:57.470\nall the little sub-actions\nthat are underneath it.\n\n270\n00:12:57.470 --> 00:13:00.210\nI might not wanna give\nhim all those either.\n\n271\n00:13:00.210 --> 00:13:02.650\nI might wanna give his just read access.\n\n272\n00:13:02.650 --> 00:13:04.210\nSo I'll have to create a custom policy.\n\n273\n00:13:04.210 --> 00:13:08.170\nNow, notice my cursor has this great big\ncircle with a line slash through it.\n\n274\n00:13:08.170 --> 00:13:09.190\nI can't edit this, right?\n\n275\n00:13:09.190 --> 00:13:09.980\nIt's not gonna let me.\n\n276\n00:13:09.980 --> 00:13:13.290\nIf I click and start to type,\nwhoops, nothing happens,right?\n\n277\n00:13:13.290 --> 00:13:13.880\nIt's ready only.\n\n278\n00:13:13.880 --> 00:13:15.660\nThe Amazon policies is ready only.\n\n279\n00:13:15.660 --> 00:13:18.850\nBut I can go to policies and\nI can create a new policy.\n\n280\n00:13:18.850 --> 00:13:25.420\nAnd when I do, I have the option to\ncopy one of the managed policies.\n\n281\n00:13:25.420 --> 00:13:30.450\nSo I can copy theirs and use it as a\nstarting point, and then build from there.\n\n282\n00:13:30.450 --> 00:13:32.730\nAnd that can be useful if you're\ngonna be writing it by hand, but\n\n283\n00:13:32.730 --> 00:13:35.550\nmost of the time we're\nnot writing it by hand.\n\n284\n00:13:35.550 --> 00:13:38.250\nIf you're really hardcore you can\ngo right down here to the bottom,\n\n285\n00:13:38.250 --> 00:13:40.570\nCreate Your Own Policy, and\nyou can truly write it by hand.\n\n286\n00:13:40.570 --> 00:13:43.760\nIf you know the format and\nyou know everything or copying and\n\n287\n00:13:43.760 --> 00:13:45.340\npasting from an example on Google.\n\n288\n00:13:45.340 --> 00:13:50.100\nLittle more accurate, I guess,\nrealistic, then you can do that.\n\n289\n00:13:50.100 --> 00:13:52.660\nBut for\nmost of us the Policy Generator is the one\n\n290\n00:13:52.660 --> 00:13:54.810\nthat's really gonna help us, right?\n\n291\n00:13:54.810 --> 00:13:56.950\nIf I go to the Policy Generator, and\n\n292\n00:13:56.950 --> 00:13:59.290\nI'll just choose Select over\nhere to start that one.\n\n293\n00:13:59.290 --> 00:14:00.880\nI can tell it what I'm doing.\n\n294\n00:14:00.880 --> 00:14:03.820\nAnd notice, I've got my Effect,\nmy Service, my Actions, and my ARN.\n\n295\n00:14:03.820 --> 00:14:09.110\nHere's where I'm basically building\nwhat this policy is gonna do.\n\n296\n00:14:09.110 --> 00:14:12.662\nAnd I can say I want to\nallow Daniel some access.\n\n297\n00:14:12.662 --> 00:14:16.350\nI'm gonna choose S3,\nwhich is buried in here somewhere.\n\n298\n00:14:16.350 --> 00:14:17.170\nThere we go.\n\n299\n00:14:17.170 --> 00:14:19.810\nAnd then for the actions,\nthis is the most valuable part.\n\n300\n00:14:19.810 --> 00:14:20.830\nBecause there's a lot of actions.\n\n301\n00:14:20.830 --> 00:14:25.430\nAnd you more than likely don't have them\nmemorized unless you are extremely bored.\n\n302\n00:14:25.430 --> 00:14:28.570\nSo when I go in here it kind of looks\nlike not a lot in the beginning.\n\n303\n00:14:28.570 --> 00:14:29.790\nBut then you start to scroll.\n\n304\n00:14:29.790 --> 00:14:31.400\nAnd you'll see there's a ton of actions.\n\n305\n00:14:31.400 --> 00:14:33.070\nWhat do I want to allow him to do?\n\n306\n00:14:33.070 --> 00:14:36.170\nI can give him everything,\nhe's gonna be my S3 admin.\n\n307\n00:14:36.170 --> 00:14:37.660\nI'll give him everything, right.\n\n308\n00:14:37.660 --> 00:14:39.670\nOr, I can say, well I don't want\nyou to create or delete buckets.\n\n309\n00:14:39.670 --> 00:14:41.772\nI don't want you to delete objects.\n\n310\n00:14:41.772 --> 00:14:46.700\nI don't want you to pull up\nthe cross domain stuff or whatever.\n\n311\n00:14:46.700 --> 00:14:50.410\nI just want you to be able\nto get some files, right?\n\n312\n00:14:50.410 --> 00:14:52.920\nSo I might give you GetObject, right?\n\n313\n00:14:52.920 --> 00:14:55.180\nAnd as I go down I might\nwant you to have ListBucket,\n\n314\n00:14:55.180 --> 00:14:57.370\nand that's one that a lot\nof people always overlook.\n\n315\n00:14:57.370 --> 00:14:59.460\nIn order to get an object you need to\nbe able to navigate into the bucket\n\n316\n00:14:59.460 --> 00:15:00.990\nwhich means you need ListBucket also.\n\n317\n00:15:00.990 --> 00:15:03.310\nIf you don't have that,\nit kind of causes some problems.\n\n318\n00:15:03.310 --> 00:15:05.830\nYou'll see some of these other\noptions here that you may or\n\n319\n00:15:05.830 --> 00:15:08.380\nmay not actually need,\nI don't want them to put anything.\n\n320\n00:15:08.380 --> 00:15:10.640\nSo, those two,\nthat's probably good enough.\n\n321\n00:15:10.640 --> 00:15:12.020\nRight?\nI want to be able to list\n\n322\n00:15:12.020 --> 00:15:15.530\nthe bucket to see what's in it, and I want\nhim to be able to get objects, right?\n\n323\n00:15:15.530 --> 00:15:19.240\nAnd you just check off those\npermissions that you want.\n\n324\n00:15:19.240 --> 00:15:21.620\nAnd then you need to specify the ARN.\n\n325\n00:15:21.620 --> 00:15:22.640\nHopefully, you know it.\n\n326\n00:15:22.640 --> 00:15:25.790\nIf you went and you gathered the ARN\nbefore, then you know it and\n\n327\n00:15:25.790 --> 00:15:26.480\nyou can punch it in.\n\n328\n00:15:26.480 --> 00:15:29.590\nSo in this case,\nmy ARN is gonna be something like,\n\n329\n00:15:29.590 --> 00:15:32.810\nwell, I guess it depends on how\nrestrictive I wanna be on this one.\n\n330\n00:15:32.810 --> 00:15:35.120\nI'm gonna do, what was mine?\n\n331\n00:15:35.120 --> 00:15:36.710\nIt was ITProTV AWS demo-bucket launch.\n\n332\n00:15:36.710 --> 00:15:41.347\nSo I'm gonna say arn:aws:s3.\n\n333\n00:15:41.347 --> 00:15:44.450\nAnd then remember we don't have a region\nor an account ID to specify here.\n\n334\n00:15:44.450 --> 00:15:48.349\nSo I'll do my three colons.\n\n335\n00:15:48.349 --> 00:15:50.360\nAnd then I need to specify my bucket name.\n\n336\n00:15:50.360 --> 00:15:54.205\nWhich mine was called itprotv-awsdemo\n\n337\n00:15:54.205 --> 00:15:58.961\nDash bucket two is what\nI'm giving him access to.\n\n338\n00:15:58.961 --> 00:16:00.520\nAll right.\n\n339\n00:16:00.520 --> 00:16:01.980\nAnd then I can add other conditions.\n\n340\n00:16:01.980 --> 00:16:03.520\nThe conditions you can go crazy with.\n\n341\n00:16:03.520 --> 00:16:04.630\nRight?\nYou can say\n\n342\n00:16:04.630 --> 00:16:06.900\nlike he'll have this access\nin between these times.\n\n343\n00:16:06.900 --> 00:16:11.510\nOr you'll be able to access\nfiles that have this file name.\n\n344\n00:16:11.510 --> 00:16:14.400\nYou can get really kind of\nspecific with the conditions and\n\n345\n00:16:14.400 --> 00:16:17.160\ngo crazy with it,\ni'm not going to bother with those.\n\n346\n00:16:17.160 --> 00:16:20.510\nNow notice the button here doesn't\nsay finish it says add statement.\n\n347\n00:16:20.510 --> 00:16:22.470\nI can add more than one statement, and\n\n348\n00:16:22.470 --> 00:16:27.580\nthat's important because this arn right\nhere is pointing to the bucket itself.\n\n349\n00:16:27.580 --> 00:16:31.070\nI also need to apply this to\nthe contents inside of the bucket.\n\n350\n00:16:31.070 --> 00:16:34.550\nSo I'm going to go ahead and\nadd this statement, right?\n\n351\n00:16:34.550 --> 00:16:38.150\nAnd then, you'll see it kind of make it\nonto the screen down there at the bottom.\n\n352\n00:16:38.150 --> 00:16:43.260\nI'm gonna do this again and I'm gonna\nchange the way I wrote this so that\n\n353\n00:16:43.260 --> 00:16:48.470\nI'll be allowing S3, and for the actions\nI'll pick those some actions, right?\n\n354\n00:16:48.470 --> 00:16:53.670\nSo it was like GetObject and\nListBucket, where is it?\n\n355\n00:16:53.670 --> 00:16:58.390\nThere we go, ListBucket, and there we go.\n\n356\n00:16:58.390 --> 00:17:00.680\nOkay, so ListBucket.\n\n357\n00:17:00.680 --> 00:17:05.630\nAnd then for the ARN this time,\nI'm gonna add to the end /*, okay?\n\n358\n00:17:05.630 --> 00:17:08.940\nThat slashed r means not just\nthe bucket but everything inside of it.\n\n359\n00:17:08.940 --> 00:17:11.810\nThe get object, I don't really want\nthem to get the bucket folder itself.\n\n360\n00:17:11.810 --> 00:17:13.780\nI want them to get the stuff\ninside of the bucket, so\n\n361\n00:17:13.780 --> 00:17:17.660\nI'm gonna give them that permission there\nand I'm gonna add that as a statement.\n\n362\n00:17:17.660 --> 00:17:22.410\n>> How come you wouldn't just do\nthat in the original statement.\n\n363\n00:17:22.410 --> 00:17:25.250\nHow come you just put that one thing and\nbe done with it?\n\n364\n00:17:25.250 --> 00:17:26.830\n>> Well, you know, it's kind of funny.\n\n365\n00:17:26.830 --> 00:17:29.520\nThe slash star doesn't actually\ninclude the bucket itself.\n\n366\n00:17:29.520 --> 00:17:30.600\nAnd so, you have to do the two.\n\n367\n00:17:30.600 --> 00:17:33.420\nOtherwise, you can't get into the bucket\nin the first place to get at all\n\n368\n00:17:33.420 --> 00:17:34.260\nthe stuff inside of it.\n\n369\n00:17:34.260 --> 00:17:34.850\nIt's kind of quirky.\n\n370\n00:17:34.850 --> 00:17:37.840\nAnd that goes back to the whole different\nservices function different ways.\n\n371\n00:17:37.840 --> 00:17:39.470\nRight?\nAnd experience is how you learn that.\n\n372\n00:17:39.470 --> 00:17:41.340\nSo, that's why I have\nto do it as two lines.\n\n373\n00:17:41.340 --> 00:17:44.870\nAnd there is actually one\nmore thing I need to do.\n\n374\n00:17:44.870 --> 00:17:47.360\nIf I want you to just be able\nto see what buckets exist,\n\n375\n00:17:47.360 --> 00:17:50.760\nI need to give you that permission\neven above this bucket, right?\n\n376\n00:17:50.760 --> 00:17:55.120\nSo I might choose to add another\nentry in here where I say Amazon S3.\n\n377\n00:17:55.120 --> 00:17:58.690\nAnd for the action,\nI'm gonna give you list all my buckets.\n\n378\n00:17:58.690 --> 00:18:00.330\nIt's in here somewhere.\n\n379\n00:18:00.330 --> 00:18:01.620\nThere we go.\n\n380\n00:18:01.620 --> 00:18:06.000\nList all my buckets, right?\n\n381\n00:18:06.000 --> 00:18:08.690\nAnd for the ARN on this,\nwell, I could just,\n\n382\n00:18:08.690 --> 00:18:11.960\nyou know, lay it out for you for\nthe whole thing, so I might say,\n\n383\n00:18:11.960 --> 00:18:16.560\nARN colon AWS colon S3...and then...just\nthrow in, like, a :::*, right?\n\n384\n00:18:16.560 --> 00:18:18.650\nSo just the whole shebang, right?\n\n385\n00:18:18.650 --> 00:18:22.270\nAnd actually I think, let's see what\nit'll let me get away with here.\n\n386\n00:18:22.270 --> 00:18:24.690\nIf I remember right,\nwe can actually leave a little bit of,\n\n387\n00:18:24.690 --> 00:18:29.410\nwell sometimes you can leave a little\nbit of this off, sometimes you can't.\n\n388\n00:18:29.410 --> 00:18:33.300\nI'll just do it this way, this is\nthe proper syntax, so I'll leave it there.\n\n389\n00:18:33.300 --> 00:18:34.590\nSo we'll go ahead and add that in.\n\n390\n00:18:34.590 --> 00:18:37.170\nSo now if I take a look at\nthe policy it's kinda building for\n\n391\n00:18:37.170 --> 00:18:39.140\nme at the bottom of the screen.\n\n392\n00:18:39.140 --> 00:18:45.170\nI can see where it's got, allowing\nthe GetObject and ListBucket, for that\n\n393\n00:18:45.170 --> 00:18:49.340\nbucket2, and I've got the ListAllMyBuckets\nfor the s3 account, right?\n\n394\n00:18:49.340 --> 00:18:51.170\nSo I'm building the permissions\nI want him to have.\n\n395\n00:18:52.290 --> 00:18:55.510\nAnd once that's done, I can move forward.\n\n396\n00:18:55.510 --> 00:18:57.720\nAnd now it's actually\nwriting the real policy.\n\n397\n00:18:57.720 --> 00:18:59.960\nSo what we were seeing there wasn't\nactually the real policy at all.\n\n398\n00:18:59.960 --> 00:19:01.160\nThe real policy is right here.\n\n399\n00:19:01.160 --> 00:19:03.980\nAnd so I can see where it's\ncreating this statement,\n\n400\n00:19:03.980 --> 00:19:05.700\nthe effect that it's allowing the action.\n\n401\n00:19:05.700 --> 00:19:07.430\nAnd you'll see that it's an array now.\n\n402\n00:19:07.430 --> 00:19:11.610\nThere's more than one action unlike\nlike the example we saw earlier.\n\n403\n00:19:11.610 --> 00:19:13.460\nThe resource is listed right here,\nand that's an array, too.\n\n404\n00:19:13.460 --> 00:19:15.150\nI could start to combine these lines.\n\n405\n00:19:15.150 --> 00:19:17.210\nYou can optimize them a bit if you want.\n\n406\n00:19:17.210 --> 00:19:18.640\nIt usually doesn't matter.\n\n407\n00:19:18.640 --> 00:19:22.730\nAnd then down here we can see the next\nline where we're allowing the other\n\n408\n00:19:22.730 --> 00:19:25.370\naccess, so it's putting all of\nthis together into one policy.\n\n409\n00:19:25.370 --> 00:19:28.130\nNow, if you're writing this by hand,\nyou certainly can do that.\n\n410\n00:19:28.130 --> 00:19:30.140\nOn the exam I'm not gonna ask\nyou to write write them by hand.\n\n411\n00:19:30.140 --> 00:19:31.790\nBut they do want you to\nunderstand this process.\n\n412\n00:19:31.790 --> 00:19:35.280\nAnd, basically, if you write them by hand,\nit real easy to make mistakes.\n\n413\n00:19:35.280 --> 00:19:37.240\nAnd, so its got a validate\npolicy button down here,\n\n414\n00:19:37.240 --> 00:19:40.060\nwhere it will check to\nsee if there's any error.\n\n415\n00:19:40.060 --> 00:19:41.880\nIt is just checking for typos.\n\n416\n00:19:41.880 --> 00:19:43.140\nIt is not going to check for\n\n417\n00:19:43.140 --> 00:19:48.230\nthings like, you assigned the wrong\npermission, it doesn't check for that.\n\n418\n00:19:48.230 --> 00:19:51.150\nSo it is really just checking\nour syntax to make that works.\n\n419\n00:19:51.150 --> 00:19:54.020\nAnd then once that is good\nwe can create the policy.\n\n420\n00:19:54.020 --> 00:19:57.230\nNow, notice my policy name,\nthis one just rolls right off the tongue.\n\n421\n00:19:57.230 --> 00:19:58.820\nThis is policy gen2015 blah blah blah.\n\n422\n00:19:58.820 --> 00:19:59.860\nThat doesn't really help me, so\n\n423\n00:19:59.860 --> 00:20:03.560\nI'm going to call this my S3\nbucket 2 read only policy.\n\n424\n00:20:03.560 --> 00:20:04.070\nRight?\n\n425\n00:20:04.070 --> 00:20:05.550\nSo I can remember what it is?\n\n426\n00:20:05.550 --> 00:20:08.740\nI'm gonna assign this policy I might\nuse it in more than one place.\n\n427\n00:20:08.740 --> 00:20:09.290\nYou can do that.\n\n428\n00:20:09.290 --> 00:20:13.010\nAnd so I'll go ahead and create that\npolicy and now I've got a new policy.\n\n429\n00:20:13.010 --> 00:20:19.919\nAnd so I can go back to my groups and\nI can find something like S3 read only,\n\n430\n00:20:19.919 --> 00:20:26.393\nor I can create a new group here\ncalled S3-bucket2- read-only.\n\n431\n00:20:26.393 --> 00:20:27.204\nRight.\n\n432\n00:20:27.204 --> 00:20:32.130\nAnd now, when I go to assign a policy, I\ncan filter to my customer manage policies.\n\n433\n00:20:32.130 --> 00:20:34.330\nAnd I can pick that one that I just made.\n\n434\n00:20:34.330 --> 00:20:34.860\nRight.\n\n435\n00:20:34.860 --> 00:20:40.310\nAnd once we've made that,\nnow it's tied to the group,\n\n436\n00:20:40.310 --> 00:20:43.470\nand any user that I stick in that group\nwill get read access on bucket two.\n\n437\n00:20:43.470 --> 00:20:48.290\nAnd any user I take out of it will lose\nit unless they get it from another group.\n\n438\n00:20:48.290 --> 00:20:52.890\nSo, I'm picking on Daniel today so if I\ngo up here to users and I go to Daniel,\n\n439\n00:20:52.890 --> 00:20:56.500\nright, when I go under his permissions I\ncan see he's got a few policies attached.\n\n440\n00:20:56.500 --> 00:20:58.840\nHe's already got read only for S3.\n\n441\n00:20:58.840 --> 00:21:03.550\nI need to get that off of him, or I guess\nI could use a different user, I guess.\n\n442\n00:21:03.550 --> 00:21:07.900\nBut if I go under Groups here I can\njust pull them out of that group.\n\n443\n00:21:07.900 --> 00:21:11.485\nI'll leave him in EC-2 Admins,\nwhat do I care about that.\n\n444\n00:21:11.485 --> 00:21:14.340\n[LAUGH] Our instances,\nthose aren't important.\n\n445\n00:21:14.340 --> 00:21:15.900\nI gotta protect my buckets.\n\n446\n00:21:15.900 --> 00:21:19.280\nBut now when I go under permissions, see\nhow he's just got that EC-2 full access?\n\n447\n00:21:19.280 --> 00:21:23.820\nAnd so I can now attach\na policy to him if I want.\n\n448\n00:21:23.820 --> 00:21:26.630\nOr, it's all ready attached to a group,\nso I can just stick him that group.\n\n449\n00:21:26.630 --> 00:21:28.560\nAnd so that's what I'm gonna do.\n\n450\n00:21:28.560 --> 00:21:32.710\nI'll give him that S32 bucket to\nread only, and now he's got that.\n\n451\n00:21:32.710 --> 00:21:34.160\nAll right?\nSo, he's in those,\n\n452\n00:21:34.160 --> 00:21:36.920\nhe's got those permissions,\nlet's see if it works.\n\n453\n00:21:36.920 --> 00:21:37.710\nRight?\nHow can we test it?\n\n454\n00:21:37.710 --> 00:21:40.200\nThe easiest way to test it is\nreally like the command line.\n\n455\n00:21:40.200 --> 00:21:46.760\nSo if I jump to my command line, and\nwe can have a little bit of fun with this.\n\n456\n00:21:46.760 --> 00:21:51.490\nSo from the command line,\nI can just use my AWSCLI.\n\n457\n00:21:51.490 --> 00:21:54.550\nAnd I can start to reach into these and\nkind of query, and see what's what.\n\n458\n00:21:54.550 --> 00:21:58.120\nSo for example, if I want to do,\nlike, aws s3 ls, right?\n\n459\n00:21:58.120 --> 00:22:03.500\nSo I just want to pull up\na listing of my s3 environment.\n\n460\n00:22:03.500 --> 00:22:07.230\nAnd I'll do it as myself, right?\n\n461\n00:22:07.230 --> 00:22:10.770\nSo, I can see bucket one,\nbucket two, bucket three.\n\n462\n00:22:10.770 --> 00:22:15.940\nAll right,\nwell let me try that same thing as Daniel.\n\n463\n00:22:15.940 --> 00:22:18.530\nAnd I got bucket 1, bucket 2 and bucket 3.\n\n464\n00:22:18.530 --> 00:22:20.930\nNow I gave Daniel just access to bucket 2,\nright?\n\n465\n00:22:20.930 --> 00:22:21.440\nI did.\n\n466\n00:22:21.440 --> 00:22:22.590\nBut he sees all three buckets.\n\n467\n00:22:22.590 --> 00:22:24.760\nAnd he sees all three of them\nbecause I gave him the list all my\n\n468\n00:22:24.760 --> 00:22:25.690\nbuckets permission, right?\n\n469\n00:22:25.690 --> 00:22:28.300\nThat was part of that group and\nso he sees all the buckets.\n\n470\n00:22:28.300 --> 00:22:31.410\nIf he tries to start looking\ninside of the buckets.\n\n471\n00:22:31.410 --> 00:22:34.260\nThat's where things are gonna\nget a little flakier.\n\n472\n00:22:34.260 --> 00:22:36.290\nOr, they should,\nassuming I did this right.\n\n473\n00:22:36.290 --> 00:22:37.650\nI could have screwed it up, I suppose.\n\n474\n00:22:37.650 --> 00:22:38.150\n[LAUGH] [INAUDIBLE]\n>> [LAUGH] It does happen.\n\n475\n00:22:38.150 --> 00:22:38.889\n>> [LAUGH] It is a possibility.\n\n476\n00:22:38.889 --> 00:22:41.850\nSo if I get a little more specific, here.\n\n477\n00:22:41.850 --> 00:22:43.550\nAnd I'll throw in a path.\n\n478\n00:22:43.550 --> 00:22:46.270\nI called mine IT pro TV AWS\ndemo dash bucket one.\n\n479\n00:22:46.270 --> 00:22:50.780\nSo I want to pull up a listing of\nwhat's in bucket one, there we go.\n\n480\n00:22:50.780 --> 00:22:52.340\nClient error access denied.\n\n481\n00:22:52.340 --> 00:22:58.180\nHe doesn't have permission\nto look in bucket one.\n\n482\n00:22:58.180 --> 00:23:03.700\nBut if I change that to bucket two\nhe sees the files inside of it.\n\n483\n00:23:03.700 --> 00:23:08.060\nThe policy's attached to the group,\nhe is in the group, he gets the access.\n\n484\n00:23:08.060 --> 00:23:13.370\nIf I go and take him out of that group, so\nif I jump back here to Daniel's account.\n\n485\n00:23:13.370 --> 00:23:16.390\nAnd I take him and\nremove him from the bucket to read only.\n\n486\n00:23:16.390 --> 00:23:18.180\nI'll remove him out of there.\n\n487\n00:23:18.180 --> 00:23:19.240\nNow he's just in EC2 admins.\n\n488\n00:23:19.240 --> 00:23:20.920\nWhen I go back to my terminal and\n\n489\n00:23:20.920 --> 00:23:23.390\nI rerun that same command I just ran,\naccess denied.\n\n490\n00:23:23.390 --> 00:23:24.130\nIt's instantaneous.\n\n491\n00:23:24.130 --> 00:23:25.110\nRight?\n\n492\n00:23:25.110 --> 00:23:29.970\nIt's not like if you're a Windows admin\nyou know, you have to call somebody and\n\n493\n00:23:29.970 --> 00:23:34.680\nsay, can you log out, log back in,\ncuz group memberships are like that.\n\n494\n00:23:34.680 --> 00:23:38.090\nNot in AWS, it's instantaneous, right?\n\n495\n00:23:38.090 --> 00:23:41.343\nSo I just gave you guys an example using\nS3, but this really applies to all\n\n496\n00:23:41.343 --> 00:23:44.031\nof the services,\nthe ARN's really all that's different.\n\n497\n00:23:44.031 --> 00:23:49.842\nSo if I wanted to dole out EC2 privileges,\nright, we could write a policy that said,\n\n498\n00:23:49.842 --> 00:23:55.267\nyou have this access on all of EC2, or\nyou have access just for this one entity.\n\n499\n00:23:55.267 --> 00:23:55.779\nRight.\n\n500\n00:23:55.779 --> 00:23:59.192\nSo if I have I had a particular\ninstance that was just for Daniel.\n\n501\n00:23:59.192 --> 00:24:03.010\nAnd so I want him to be able\nto do whatever he wants\n\n502\n00:24:03.010 --> 00:24:05.690\nwith that particular instance.\n\n503\n00:24:05.690 --> 00:24:07.600\nI can jump over to my EC2 environment.\n\n504\n00:24:07.600 --> 00:24:10.272\nI could find the server\nthat I was interested in.\n\n505\n00:24:10.272 --> 00:24:14.870\nSo I'll take this Web 02 here,\nand grab its instance ID.\n\n506\n00:24:14.870 --> 00:24:18.390\nRight?\nSo I'm just gonna try and copy that.\n\n507\n00:24:18.390 --> 00:24:19.030\nThere we go.\n\n508\n00:24:19.030 --> 00:24:24.140\nSo I've got that instance ID copied,\nand now when I go back to IAM and\n\n509\n00:24:24.140 --> 00:24:27.680\nstart to write a policy,\nI can set that up for web02 to do that.\n\n510\n00:24:27.680 --> 00:24:31.426\nSo, I'll come down here to policies and\nI'll create a new policy and\n\n511\n00:24:31.426 --> 00:24:35.624\nI'll just use the policy generator again\nso I don't have to write it by hand,\n\n512\n00:24:35.624 --> 00:24:39.590\nalthough I guess we could write it by\nhand if we really wanted to go crazy.\n\n513\n00:24:39.590 --> 00:24:40.499\n>> Don't be scared, Don.\n\n514\n00:24:40.499 --> 00:24:44.088\n[LAUGH] [CROSSTALK] [LAUGH]\n>> Actually here, screw it, we'll go.\n\n515\n00:24:44.088 --> 00:24:48.106\n[LAUGH] Do we have time, we've got\nfive minutes [CROSSTALK] [LAUGH].\n\n516\n00:24:48.106 --> 00:24:50.951\nAll right so\nI'm going to go [INAUDIBLE] policies and\n\n517\n00:24:50.951 --> 00:24:55.198\nyeah this time Daniels calling me out so\nI'm going to write this one by hand.\n\n518\n00:24:55.198 --> 00:24:58.141\nI'll go to create my own policy so\n\n519\n00:24:58.141 --> 00:25:02.790\nI'm going to select that and\nI'm gonna write it.\n\n520\n00:25:02.790 --> 00:25:07.190\nI'm gonna call this one,\nmine was called itprotv-us-east-1-web02.\n\n521\n00:25:07.190 --> 00:25:14.670\nSo this is the web server and I'll just\nsay like it's going to be full access.\n\n522\n00:25:14.670 --> 00:25:17.464\nSo, that's the name of my server and\nI'm just picking that so\n\n523\n00:25:17.464 --> 00:25:18.770\nI can remember what this is.\n\n524\n00:25:18.770 --> 00:25:21.797\nBecause I'm bad about\nforgetting these things, so\n\n525\n00:25:21.797 --> 00:25:24.150\na good naming convention is a good idea.\n\n526\n00:25:24.150 --> 00:25:28.730\nSo, this is going to be full\naccess to web02 instance.\n\n527\n00:25:28.730 --> 00:25:30.190\n>> You want to play policy roulette?\n\n528\n00:25:30.190 --> 00:25:31.150\nIs this the right one?\n\n529\n00:25:31.150 --> 00:25:31.895\nI don't know.\n\n530\n00:25:31.895 --> 00:25:33.233\n[LAUGH]\n>> I'll screw it up.\n\n531\n00:25:33.233 --> 00:25:34.910\nAll right, so\nnow I can start to write my policy now.\n\n532\n00:25:34.910 --> 00:25:38.494\nWriting a policy is tricky because you\nhave to give it a version number and\n\n533\n00:25:38.494 --> 00:25:42.666\nall that, and Amazon is pretty particular\nabout this stuff so I'm gonna go ahead and\n\n534\n00:25:42.666 --> 00:25:44.520\nwrite it in here and so we'll start.\n\n535\n00:25:44.520 --> 00:25:47.667\nThe other problem I always bump\ninto is the syntax formatting and\n\n536\n00:25:47.667 --> 00:25:51.221\nthey added this new feature a while\nback that says use auto formatting for\n\n537\n00:25:51.221 --> 00:25:54.147\npolicy editing,\nyou want that on because it'll help out.\n\n538\n00:25:54.147 --> 00:25:58.140\nBut basically I'm going to start\nout with a version, right.\n\n539\n00:25:58.140 --> 00:26:02.717\nAnd I'm just gonna steal,\nI'm looking over at my paper here\n\n540\n00:26:02.717 --> 00:26:07.310\nbecause I'm going to steal\nthe version that we saw earlier.\n\n541\n00:26:07.310 --> 00:26:08.899\nIt was 2012-10-17.\nThis is not a version that you get to\n\n542\n00:26:08.899 --> 00:26:12.313\nmake up, this is a version that Amazon set\nsaying that the format of this file is\n\n543\n00:26:12.313 --> 00:26:15.180\naccording to the version as\ndefined October 17th, 2012.\n\n544\n00:26:15.180 --> 00:26:16.950\nSo I'm just gonna set that so\nI've got the version number set.\n\n545\n00:26:16.950 --> 00:26:18.840\nAnd then I'm gonna do my first statement.\n\n546\n00:26:18.840 --> 00:26:21.170\nWhich I'm really only\ngonna have one statement.\n\n547\n00:26:21.170 --> 00:26:21.950\nAnd so I'll do a statement.\n\n548\n00:26:21.950 --> 00:26:26.706\nBut if I wanna set myself up for\nadding more things, you know,\n\n549\n00:26:26.706 --> 00:26:30.381\nyou wanna make sure you\nalways use a [INAUDIBLE].\n\n550\n00:26:30.381 --> 00:26:34.166\nAnd so I'll do square brackets, so\nthat I can easily add more stuff later on.\n\n551\n00:26:34.166 --> 00:26:38.542\nSo my first entry is going to be,\nlet's see.\n\n552\n00:26:38.542 --> 00:26:41.020\nWe need to do an effect.\n\n553\n00:26:41.020 --> 00:26:44.016\nAnd my effect is going to be to allow.\n\n554\n00:26:44.016 --> 00:26:46.625\nI want to allow Daniel\nto access this resource,\n\n555\n00:26:46.625 --> 00:26:49.439\nwell anybody to access this resource,\nall right?\n\n556\n00:26:49.439 --> 00:26:55.792\nMy action is going to be,\nlet's see, what do I wanna do here?\n\n557\n00:26:55.792 --> 00:26:58.552\nThis is going to be everything, right?\n\n558\n00:26:58.552 --> 00:26:59.232\nI cheated.\n\n559\n00:26:59.232 --> 00:27:00.132\nSo I'll do.\n\n560\n00:27:00.132 --> 00:27:01.600\n>> Mm-hm.\n>> EC2, colon, star.\n\n561\n00:27:01.600 --> 00:27:05.432\nI wanna give him every\nEC2 action available.\n\n562\n00:27:05.432 --> 00:27:07.057\nJust the whole shebang, right?\n\n563\n00:27:07.057 --> 00:27:10.649\nSo you'll be able to start the instance,\nstop the instance, terminate the instance.\n\n564\n00:27:10.649 --> 00:27:11.928\nYou can delete if if you want, right?\n\n565\n00:27:11.928 --> 00:27:13.406\n>> True administrator.\n>> Yeah, yep.\n\n566\n00:27:13.406 --> 00:27:15.127\nYou really, you have some fun with it.\n\n567\n00:27:15.127 --> 00:27:16.169\nLet's see, what else do we need?\n\n568\n00:27:16.169 --> 00:27:17.970\nThen we need the resource, right?\n\n569\n00:27:17.970 --> 00:27:22.120\nThe resource is kinda the important part,\nbecause it's what we're giving access to.\n\n570\n00:27:22.120 --> 00:27:24.560\nAnd this is the hardest one with EC2.\n\n571\n00:27:24.560 --> 00:27:26.286\nI probably picked a hard example here,\n\n572\n00:27:26.286 --> 00:27:28.390\nbecause the resource is\nreally long with EC2.\n\n573\n00:27:28.390 --> 00:27:30.630\nThere's just so\nmuch that goes into the resource name.\n\n574\n00:27:30.630 --> 00:27:33.125\nSo when I go to put this part in.\n\n575\n00:27:33.125 --> 00:27:37.165\nI need to say that\nthe resource is arn:aws:ec2.\n\n576\n00:27:37.165 --> 00:27:38.125\nSo that we kinda know.\n\n577\n00:27:38.125 --> 00:27:42.645\nThen I need to follow that up\nby the region that it's in.\n\n578\n00:27:42.645 --> 00:27:44.145\nAnd mine is in us-east-1.\n\n579\n00:27:44.145 --> 00:27:49.625\nYou'd put whatever region your\ninstance happened to be in.\n\n580\n00:27:49.625 --> 00:27:53.710\nAnd then I need the account number,\nand I forgot to get my account number.\n\n581\n00:27:53.710 --> 00:27:55.088\nSo I'm gonna leave that blank for\nright now.\n\n582\n00:27:55.088 --> 00:27:57.917\nLet me just put account number so\nI remember to do that.\n\n583\n00:27:57.917 --> 00:28:02.562\nAnd then after the account number is\nwhere we put in that this is going to be\n\n584\n00:28:02.562 --> 00:28:03.510\nan instance.\n\n585\n00:28:03.510 --> 00:28:05.340\nAnd in the instance ID, right.\n\n586\n00:28:05.340 --> 00:28:08.880\nAnd that's why I didn't go get my\naccount number, I wanted to save it so\n\n587\n00:28:08.880 --> 00:28:11.360\nI could just kind of copy that and\nput int in there.\n\n588\n00:28:11.360 --> 00:28:13.610\nAnd you know,\nactually I do have my account number here.\n\n589\n00:28:13.610 --> 00:28:16.941\nIf you don't have your account number you\ncan just click on your name up at the top\n\n590\n00:28:16.941 --> 00:28:19.940\nof the menu bar and go in your account\nsettings and it's right in there.\n\n591\n00:28:19.940 --> 00:28:23.405\nBut it will be a long string of digits,\nI've got mine written on this little\n\n592\n00:28:23.405 --> 00:28:25.880\nnote I left for myself,\napparently thinking ahead.\n\n593\n00:28:25.880 --> 00:28:27.910\nAnd so I will try and\nput this one in here.\n\n594\n00:28:27.910 --> 00:28:31.360\nAnd let me just make sure that is right.\n\n595\n00:28:31.360 --> 00:28:32.950\nBlah blah blah, and, there we go.\n\n596\n00:28:32.950 --> 00:28:38.885\nIf you get the account number wrong\nthis whole thing kinda doesn't work.\n\n597\n00:28:38.885 --> 00:28:39.760\n>> [LAUGH] Chestnut.\n\n598\n00:28:39.760 --> 00:28:43.630\n>> It's sort of important,\nso we'll get that in there.\n\n599\n00:28:43.630 --> 00:28:46.500\nSo I've got that privilege set.\n\n600\n00:28:46.500 --> 00:28:48.040\nAnd that should all be\nall that I need there.\n\n601\n00:28:48.040 --> 00:28:48.730\nI can close that out.\n\n602\n00:28:48.730 --> 00:28:49.540\nAnd am I short?\n\n603\n00:28:49.540 --> 00:28:52.092\nI think I'm short a trailing.\n\n604\n00:28:52.092 --> 00:28:54.023\nYou know what?\n\n605\n00:28:54.023 --> 00:28:54.795\nIt's just off my screen.\n\n606\n00:28:54.795 --> 00:28:56.900\nThere it is, a trailing bracket.\n\n607\n00:28:56.900 --> 00:28:59.550\nAll right, so that resource name,\nthat one's pretty long.\n\n608\n00:28:59.550 --> 00:29:01.840\nBut it contains the region.\n\n609\n00:29:01.840 --> 00:29:04.206\nMy account number.\n\n610\n00:29:04.206 --> 00:29:07.065\nThe fact that it's an instance and\nthe instance ID right there.\n\n611\n00:29:07.065 --> 00:29:07.960\nAnd I'm giving him access\nto every function.\n\n612\n00:29:07.960 --> 00:29:11.050\nEvery action on that instance,\nhe can do whatever he wants, right?\n\n613\n00:29:11.050 --> 00:29:16.394\nSo, this policy here is\nreally straight forward.\n\n614\n00:29:16.394 --> 00:29:19.484\nNow, because I did write it myself,\nI probably have a mistake in there.\n\n615\n00:29:19.484 --> 00:29:21.891\nSo, I'm going to hit validate policy.\n\n616\n00:29:21.891 --> 00:29:22.640\nAnd now with Don.\n>> There we go.\n\n617\n00:29:22.640 --> 00:29:23.592\nI'll tell you,\n\n618\n00:29:23.592 --> 00:29:27.816\nthe number one problem people have is\nwhen they set that version to a date.\n\n619\n00:29:27.816 --> 00:29:31.942\nThey go I'll set it to today's date, and\nit doesn't work and it's because there has\n\n620\n00:29:31.942 --> 00:29:35.577\nto be a date that Amazon released\nan update for it and so it's pretty picky.\n\n621\n00:29:35.577 --> 00:29:36.690\nAll right, so we've got that written.\n\n622\n00:29:36.690 --> 00:29:39.070\nI'll go ahead and create that policy.\n\n623\n00:29:39.070 --> 00:29:42.490\nAnd now, I made a group, or\nat least in my head I did.\n\n624\n00:29:42.490 --> 00:29:46.660\nI guess I haven't done it yet\nso I'll go and create a group.\n\n625\n00:29:46.660 --> 00:29:48.676\nWhich I'll call web02 admins.\nAnd then for the policy,\n\n626\n00:29:48.676 --> 00:29:52.150\nI'll just attach that policy I just wrote.\n\n627\n00:29:52.150 --> 00:29:55.178\nSo here it is and I'm giving that access,\nand so when I do that,\n\n628\n00:29:55.178 --> 00:29:56.960\nnow the policy is tied to that group.\n\n629\n00:29:56.960 --> 00:29:59.510\nIf I put Daniel in the group he'll\nnow have access to that instance.\n\n630\n00:29:59.510 --> 00:30:04.201\nHe won't necessarily be able to into it,\nright?\n\n631\n00:30:04.201 --> 00:30:06.217\nYou still have a security key\nyou've got to give him, but\n\n632\n00:30:06.217 --> 00:30:09.037\nhe'll be able to start the instance,\nstop the instance, all that good stuff.\n\n633\n00:30:09.037 --> 00:30:11.991\nSo if I go in and find Daniel.\n\n634\n00:30:11.991 --> 00:30:14.280\nI can add him to a group and\nI'll stick him in that web 02 admins.\n\n635\n00:30:14.280 --> 00:30:17.533\nThere we go.\nAnd now if I jump back to my CLI,\n\n636\n00:30:17.533 --> 00:30:24.000\nwhat I should be able to do is as\nDaniel be able to stop that instance.\n\n637\n00:30:24.000 --> 00:30:25.127\nYou know, stop it.\n\n638\n00:30:25.127 --> 00:30:27.029\nI don't have to necessarily terminate it.\n\n639\n00:30:27.029 --> 00:30:35.166\nSo I can say aws ec2\nstop-instances --instance.\n\n640\n00:30:35.166 --> 00:30:37.378\nAnd my instance IDs.\n\n641\n00:30:37.378 --> 00:30:39.517\nHere we go.\n\n642\n00:30:39.517 --> 00:30:42.342\nMove this on my screen a little bit,\ntrying.\n\n643\n00:30:42.342 --> 00:30:43.922\nMy head's going to cover up some of this.\n\n644\n00:30:43.922 --> 00:30:45.594\nSo I've got the instance ID's and\n\n645\n00:30:45.594 --> 00:30:48.718\nthen I'll specify the instance\nthat I'm actually wiping out.\n\n646\n00:30:48.718 --> 00:30:50.435\nI do need to tell it the region.\n\n647\n00:30:50.435 --> 00:30:52.715\nAnd here's where the word wrap comes in.\n\n648\n00:30:52.715 --> 00:30:54.417\nSo mine's in us-east-1.\n\n649\n00:30:54.417 --> 00:30:58.678\nAnd then I'm gonna use the profile for\nDaniel to do it, okay?\n\n650\n00:30:58.678 --> 00:31:00.739\nSo he's gonna try and stop that instance.\n\n651\n00:31:00.739 --> 00:31:03.182\nHe should have that privilege and\nthere we go.\n\n652\n00:31:03.182 --> 00:31:04.674\nCurrent state is now stopping.\n\n653\n00:31:04.674 --> 00:31:06.262\nRight?\nSo he's actually stopping it.\n\n654\n00:31:06.262 --> 00:31:08.597\nIf I were to try one\nof my other instances.\n\n655\n00:31:08.597 --> 00:31:11.244\nLet me go and pull a different one.\n\n656\n00:31:11.244 --> 00:31:15.650\nI think I've only got one more so\nI've got somewhat limited choices here.\n\n657\n00:31:15.650 --> 00:31:18.886\nBut if I go into my instances and\nI find my other one, this guy.\n\n658\n00:31:18.886 --> 00:31:21.271\nWe'll see if Daniel can stop that one for\nus.\n\n659\n00:31:21.271 --> 00:31:25.696\nSo I'm just gonna take that same\ncommand line I ran a second ago and\n\n660\n00:31:25.696 --> 00:31:29.249\nI'm just gonna change that\ninstance ID right here.\n\n661\n00:31:29.249 --> 00:31:32.129\nAnd I'll run that one, and.\n\n662\n00:31:32.129 --> 00:31:33.103\nApparently I went a little aggressive.\n\n663\n00:31:33.103 --> 00:31:34.265\nI must have an error in mine.\n\n664\n00:31:34.265 --> 00:31:38.490\nSee how it now says stopping.\n\n665\n00:31:39.820 --> 00:31:41.298\nSo, it's actually stopping.\n\n666\n00:31:41.298 --> 00:31:42.610\nI made a mistake.\n\n667\n00:31:42.610 --> 00:31:43.920\nYou're still in the EC2 admins group.\n\n668\n00:31:43.920 --> 00:31:44.920\n>> I forgot about that, right?\n\n669\n00:31:44.920 --> 00:31:47.632\nSo, this is an important part about\nwriting policies is that you can have\n\n670\n00:31:47.632 --> 00:31:48.750\ncrossing policies like I do.\n\n671\n00:31:48.750 --> 00:31:50.513\nIf you go into identity and\naccess management and\n\n672\n00:31:50.513 --> 00:31:51.890\nI look at Daniel's account, right?\n\n673\n00:31:51.890 --> 00:31:53.830\nDaniel's in more than one group.\n\n674\n00:31:53.830 --> 00:31:58.405\nI had put him earlier in a group\ncalled EC2 admins where I gave him\n\n675\n00:31:58.405 --> 00:32:00.200\ncontrol of everything.\n\n676\n00:32:00.200 --> 00:32:02.340\nRight?\nAnd so that's a bit of a problem.\n\n677\n00:32:02.340 --> 00:32:04.410\nSo I need to pull him out of that.\n\n678\n00:32:04.410 --> 00:32:05.480\nI gave you too much access.\n\n679\n00:32:05.480 --> 00:32:07.190\nI gave you too much credit.\n\n680\n00:32:07.190 --> 00:32:12.180\nAnd so now I've got a VM shutting\ndown that shouldn't be shutting down.\n\n681\n00:32:12.180 --> 00:32:15.078\nSo I'm going to start that\nturkey back up again and\n\n682\n00:32:15.078 --> 00:32:18.260\nwe'll just get that one fired up,\ngo ahead and start.\n\n683\n00:32:18.260 --> 00:32:19.940\nOkay, so that one is starting.\n\n684\n00:32:19.940 --> 00:32:21.150\nAnd actually,\nI've mixed them up haven't I.\n\n685\n00:32:21.150 --> 00:32:22.774\nSo I'll go ahead and\nstart the other one too.\n\n686\n00:32:22.774 --> 00:32:25.390\nSo, [LAUGH], that way I don't\nhave to remember which is which.\n\n687\n00:32:25.390 --> 00:32:26.730\nSo I'm gonna start them back up.\n\n688\n00:32:26.730 --> 00:32:30.497\nSo they're starting and now if Daniel were\nto reach in there and try and stop them,\n\n689\n00:32:30.497 --> 00:32:32.750\nwe should see something\na little bit different.\n\n690\n00:32:32.750 --> 00:32:38.470\nThat if he tries to stop that instance,\nwe should get unauthorized operation.\n\n691\n00:32:38.470 --> 00:32:41.760\nHe wasn't allowed to do it, he tried to\ncall out a server and he couldn't do it.\n\n692\n00:32:41.760 --> 00:32:42.600\nIt wouldn't let him stop it.\n\n693\n00:32:42.600 --> 00:32:46.620\nIf we try the other one,\nwhich was this one.\n\n694\n00:32:46.620 --> 00:32:48.180\nIt's stopping.\n\n695\n00:32:48.180 --> 00:32:50.440\nRight so\nnow he has that fine grain privilege.\n\n696\n00:32:50.440 --> 00:32:51.970\nThese security policies\nare really powerful.\n\n697\n00:32:51.970 --> 00:32:57.050\nI definitely encourage you always\nattach them to a group if you can.\n\n698\n00:32:57.050 --> 00:32:59.570\nIt's just gonna make life\na heck of a lot easier for you.\n\n699\n00:32:59.570 --> 00:33:00.510\n>> Yeah.\nVery, very cool.\n\n700\n00:33:00.510 --> 00:33:03.442\nNow, I understand a lot of you are\nprobably looking at this and think, man,\n\n701\n00:33:03.442 --> 00:33:04.650\nI'm drinking from a fire hose.\n\n702\n00:33:04.650 --> 00:33:05.640\nThis is a lot of information.\n\n703\n00:33:05.640 --> 00:33:08.940\nBut, if you really break it down,\nyou'll see that it's not that difficult.\n\n704\n00:33:08.940 --> 00:33:12.150\nEven though the policies can get complex,\nand making sure that they're\n\n705\n00:33:12.150 --> 00:33:16.170\nattached correctly,\nis something that we have to take care of.\n\n706\n00:33:16.170 --> 00:33:18.698\nBut, creating them?\nI mean, they give you a lot of tools to\n\n707\n00:33:18.698 --> 00:33:22.687\nenable you to create good policies\nthat work exactly how you need them.\n\n708\n00:33:22.687 --> 00:33:26.923\nThey even have policies available for\nyou that are prebuilt that you can use as\n\n709\n00:33:26.923 --> 00:33:31.890\ntemplates, or just use them, exclusively,\nto assign privileges and permissions too.\n\n710\n00:33:31.890 --> 00:33:34.909\nDon is there anything else we need to\nknow when it comes to these policies?\n\n711\n00:33:34.909 --> 00:33:35.915\n>> I think that's about it.\n\n712\n00:33:35.915 --> 00:33:36.970\nJust remember the sky's the limit.\n\n713\n00:33:36.970 --> 00:33:37.860\nThey are hard to write.\n\n714\n00:33:37.860 --> 00:33:39.830\nYou do have the policy generator,\nyou can use that.\n\n715\n00:33:39.830 --> 00:33:40.910\nYou've got the built in\npolicies you can copy.\n\n716\n00:33:40.910 --> 00:33:43.230\nAnd you can write your own from scratch.\n\n717\n00:33:43.230 --> 00:33:43.740\nIt does work.\n\n718\n00:33:43.740 --> 00:33:44.690\nWe saw it happen here.\n\n719\n00:33:44.690 --> 00:33:47.230\nJust choose whichever one's best for you.\n\n720\n00:33:47.230 --> 00:33:50.010\nOn the exam they'll expect you\nto be able to read a policy and\n\n721\n00:33:50.010 --> 00:33:51.310\nunderstand what it does.\n\n722\n00:33:51.310 --> 00:33:55.080\nSo if they show you a policy and say this\nuser doesn't have the access they should,\n\n723\n00:33:55.080 --> 00:33:57.290\nyou need to be able to\nidentify why that isn't, or\n\n724\n00:33:57.290 --> 00:33:58.700\nwhy they don't have that privilege.\n\n725\n00:33:58.700 --> 00:34:00.390\nSo make sure you're familiar\nwith that format and\n\n726\n00:34:00.390 --> 00:34:02.470\nthat you understand how they work.\n\n727\n00:34:02.470 --> 00:34:03.502\n>> Awesome.\nWell, Don, thank you so\n\n728\n00:34:03.502 --> 00:34:04.211\nmuch for showing us that.\n\n729\n00:34:04.211 --> 00:34:05.973\nAnd thank you for watching.\n\n730\n00:34:05.973 --> 00:34:08.950\nWe're going to go ahead and\nsign off for IT Pro TV.\n\n731\n00:34:08.950 --> 00:34:12.660\nI've been your host Daniel Lowrie.\n\n732\n00:34:12.660 --> 00:34:14.580\n>> And I'm Don Pazet.\n\n733\n00:34:14.580 --> 00:34:15.700\n>> And we'll see you next time.\n\n734\n00:34:15.700 --> 00:34:16.480\n[SOUND]\n\n",
          "vimeoId": "146522930"
        },
        {
          "description": "In this episode, Daniel and Don explore some of the additional security tools and practices available to you in Amazon Web Services. First they discuss the AWS Trusted Advisor tool which scans your system testing for best practices which helps you verify your IAM configuration and security. Then they go over the regulatory compliance (e.g. HIPPA/SOX) aspect of your AWS systems to help prepare you in the event your environment is subject to compliance auditing.",
          "length": "861",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/amazon-acsa/amazon-acsa-1-6-additional_security_tools-111715-1.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/amazon-acsa/amazon-acsa-1-6-additional_security_tools-111715-1-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/amazon-acsa/amazon-acsa-1-6-additional_security_tools-111715-1-sm.jpg",
          "title": "Additional Security Tools",
          "transcript": "WEBVTT\n\n1\n00:00:00.055 --> 00:00:10.055\n[MUSIC]\n\n2\n00:00:12.197 --> 00:00:14.080\nAll right, greetings, everyone!\n\n3\n00:00:14.080 --> 00:00:17.320\nWelcome to another exciting\nepisode of ITProTV.\n\n4\n00:00:17.320 --> 00:00:20.180\nI'm your host, Daniel Lowrie and\nin this episode,\n\n5\n00:00:20.180 --> 00:00:24.029\nwe're continuing on with more\nAWS Certified SysOps Administrator.\n\n6\n00:00:24.029 --> 00:00:28.384\nAnd joining me in the studio today to help\nlend his expertise on this set exam is\n\n7\n00:00:28.384 --> 00:00:30.210\nnone other than Mr. Don Pezet.\n\n8\n00:00:30.210 --> 00:00:31.500\nHow's it going today, Don?\n\n9\n00:00:31.500 --> 00:00:34.641\nIt is going great, Daniel,\nglad to be back on the show and\n\n10\n00:00:34.641 --> 00:00:39.210\nready to jump into what I'm going to call\nour security, what is it on Jeopardy?\n\n11\n00:00:39.210 --> 00:00:39.720\n>> Bonus round?\n\n12\n00:00:39.720 --> 00:00:42.330\n>> Potpourri, yeah,\njust a collection of miscellaneous junk\n\n13\n00:00:42.330 --> 00:00:44.710\nthat I didn't mentioned\nin the other episodes.\n\n14\n00:00:44.710 --> 00:00:48.040\nWe've seen a lot on Identity and\nAccess Management, and\n\n15\n00:00:48.040 --> 00:00:49.710\nwe've seen pretty much\nwhat's gonna be on the exam.\n\n16\n00:00:49.710 --> 00:00:51.540\nBut there's a few other little\nquestions that could pop up so\n\n17\n00:00:51.540 --> 00:00:55.030\nI want to talk about some other tools\nthat we can find inside of AWS,\n\n18\n00:00:55.030 --> 00:00:57.610\nthat are just important for\nus to be aware of.\n\n19\n00:00:57.610 --> 00:01:00.958\n>> Yeah, you make a really good point\nthere Don, cause we go through all this\n\n20\n00:01:00.958 --> 00:01:04.360\ntime and effort to set up these systems\nand make sure they're as secure as we\n\n21\n00:01:04.360 --> 00:01:06.861\ncan make them, but\n>> How do we know that we've actually\n\n22\n00:01:06.861 --> 00:01:07.814\nsucceeded on that?\n\n23\n00:01:07.814 --> 00:01:09.695\nOther than I haven't gotten hacked yet.\n\n24\n00:01:09.695 --> 00:01:11.855\nSomebody hasn't deleted something yet.\n\n25\n00:01:11.855 --> 00:01:13.782\nThat's basically our standard.\n\n26\n00:01:13.782 --> 00:01:15.547\nBut Amazon does help us out with that.\n\n27\n00:01:15.547 --> 00:01:18.843\nThey do give us some tools\nto do a little verification.\n\n28\n00:01:18.843 --> 00:01:22.293\n>> Yeah and if you sit down and\nyou read all of the Amazon white papers,\n\n29\n00:01:22.293 --> 00:01:26.065\nwhich is fun, you'll learn exactly\nhow Amazon wants you to set this up.\n\n30\n00:01:26.065 --> 00:01:29.269\nThey're recommended, they're best\npractices for getting it configured.\n\n31\n00:01:29.269 --> 00:01:31.790\nBut even if you've read them,\neven if you have the best intentions,\n\n32\n00:01:31.790 --> 00:01:32.884\nit's easy to make mistakes.\n\n33\n00:01:32.884 --> 00:01:34.295\nSince we set all this stuff up,\n\n34\n00:01:34.295 --> 00:01:37.564\nyou guys have seen it's really spread\nout in a lot of different places.\n\n35\n00:01:37.564 --> 00:01:41.397\nIt's centralized in IAM which is nice but\nthen you've got your users, your groups,\n\n36\n00:01:41.397 --> 00:01:42.152\nyour policies.\n\n37\n00:01:42.152 --> 00:01:44.690\nAnd the policies can be applied\nin more than one place and\n\n38\n00:01:44.690 --> 00:01:45.937\nIt's easy to mess that up.\n\n39\n00:01:45.937 --> 00:01:49.746\nAnd so in AWS, we have what's\ncalled the a Trusted Advisor.\n\n40\n00:01:49.746 --> 00:01:52.368\nAnd it's a utility that will\nscan your environment and\n\n41\n00:01:52.368 --> 00:01:54.990\ngive you recommendations\nabout your configuration.\n\n42\n00:01:54.990 --> 00:01:57.480\nIt's really just looking at IAM and\nwhat it does.\n\n43\n00:01:57.480 --> 00:01:58.710\nAlright, let's take a look at it.\n\n44\n00:01:58.710 --> 00:02:00.040\nSo here in my console,\nif I look down here,\n\n45\n00:02:00.040 --> 00:02:04.860\nit's actually under management\ntools not under security.\n\n46\n00:02:04.860 --> 00:02:06.530\nWhich is kind of odd.\n\n47\n00:02:06.530 --> 00:02:09.880\nBut if you go under management tools,\nyou'll see Trusted Advisor right here and\n\n48\n00:02:09.880 --> 00:02:12.490\nsee how it says optimize performance and\nsecurity.\n\n49\n00:02:12.490 --> 00:02:16.366\nIt's not just security, which is\nwhy it's not under security tools,\n\n50\n00:02:16.366 --> 00:02:17.799\nit's performance also.\n\n51\n00:02:17.799 --> 00:02:20.555\nIt's looking at the way that we\nwe've got our system set up and\n\n52\n00:02:20.555 --> 00:02:23.258\nevaluating whether we've done\nit in the best way possible.\n\n53\n00:02:23.258 --> 00:02:26.480\nIt's looking at things like\nyour cost optimization.\n\n54\n00:02:26.480 --> 00:02:28.128\nAre you doing things\nthe most effective way?\n\n55\n00:02:28.128 --> 00:02:31.725\nAmazon doesn't want to bilk you for\nevery dime they can get out of you.\n\n56\n00:02:31.725 --> 00:02:35.055\nThey want you to use their system\nwisely so that you see the benefits and\n\n57\n00:02:35.055 --> 00:02:36.359\nyou keep using it, right.\n\n58\n00:02:36.359 --> 00:02:38.396\nIf you look at an increasing\nbill month after month,\n\n59\n00:02:38.396 --> 00:02:40.730\nyou're gonna say man how\ncan I get away from Amazon.\n\n60\n00:02:40.730 --> 00:02:44.589\nThey want you to stay so how can we\noptimized our cost, our performance,\n\n61\n00:02:44.589 --> 00:02:47.387\nour security, our fault tolerance,\neach of them.\n\n62\n00:02:47.387 --> 00:02:48.600\nAnd the Trust Advisor,\n\n63\n00:02:48.600 --> 00:02:51.699\nthe cool thing about it is I\ndon't have to schedule it to run.\n\n64\n00:02:51.699 --> 00:02:53.442\nIt's always running on its own.\n\n65\n00:02:53.442 --> 00:02:55.948\nSo you'll see here,\nmy checks have been refreshed.\n\n66\n00:02:55.948 --> 00:02:57.691\nI didn't tell it to do that,\nI just came to the page.\n\n67\n00:02:57.691 --> 00:02:58.712\nIt did it for me.\n\n68\n00:02:58.712 --> 00:03:01.222\nAnd it's telling me,\nwelcome to the console apparently,\n\n69\n00:03:01.222 --> 00:03:04.600\nthis is my first time coming here so I\ndefinitely didn't tell it to do anything.\n\n70\n00:03:04.600 --> 00:03:08.502\nBut now I can see what it's looking at.\n\n71\n00:03:08.502 --> 00:03:12.217\nMy Cost Optimization, see how they're all\ngray, they're all zeros, well so far,\n\n72\n00:03:12.217 --> 00:03:15.070\neverything I've done has been\nwithin the free use, usage tier.\n\n73\n00:03:15.070 --> 00:03:17.010\nI haven't done anything\nto deviate from it.\n\n74\n00:03:17.010 --> 00:03:20.150\nIf you start watching in our DC2 episodes,\nactually in the route 53 episodes\n\n75\n00:03:20.150 --> 00:03:23.210\nwhen I do redundancy,\nwe'll start racking up some costs.\n\n76\n00:03:23.210 --> 00:03:27.120\nAnd so you'll start to see messages here\nthat indicate areas you might be able to\n\n77\n00:03:27.120 --> 00:03:28.235\nimprove upon.\n\n78\n00:03:28.235 --> 00:03:32.307\nYou might have auto scaling turned on,\nand you spawn up 50 VMs,\n\n79\n00:03:32.307 --> 00:03:35.950\nand you never set a policy to\nreduce them back off, right?\n\n80\n00:03:35.950 --> 00:03:38.783\nAnd actually take systems out\nof the auto scaling pool.\n\n81\n00:03:38.783 --> 00:03:42.103\nAnd so, you might be wasting resources\nthere to help you identify that.\n\n82\n00:03:42.103 --> 00:03:45.152\nUnder performance, you can see that I've\ngot one green check right there, and\n\n83\n00:03:45.152 --> 00:03:46.572\nthings are looking pretty healthy.\n\n84\n00:03:46.572 --> 00:03:50.444\nBut under security, I've got one\ngreen check and two orange triangles,\n\n85\n00:03:50.444 --> 00:03:53.270\nwhich is letting me know\nI've got two warnings.\n\n86\n00:03:53.270 --> 00:03:56.450\nI don't have any errors, I don't have\nany really big glaring problems but\n\n87\n00:03:56.450 --> 00:03:59.078\nI do have some warnings something\nI could be doing better.\n\n88\n00:03:59.078 --> 00:04:02.990\nThis is the Amazon looking at their best\npractices, everything that's in their\n\n89\n00:04:02.990 --> 00:04:06.700\nwhite papers looking at what I'm doing and\nshowing me the difference.\n\n90\n00:04:06.700 --> 00:04:09.340\nAnd so if I look down here,\nI can see the recommended actions and\n\n91\n00:04:09.340 --> 00:04:10.350\nhere's the two warnings.\n\n92\n00:04:10.350 --> 00:04:13.047\nI can also start to see those\ngreen check marks and things.\n\n93\n00:04:13.047 --> 00:04:16.136\nSo like the green check mark\nthat I had here for performance,\n\n94\n00:04:16.136 --> 00:04:17.723\nI can see my service limits.\n\n95\n00:04:17.723 --> 00:04:23.009\nAnd it says here checks for usage that is\nmore than 80 percent of the service limit,\n\n96\n00:04:23.009 --> 00:04:26.297\n0 of 31 items have usages\nmore than 80 percent.\n\n97\n00:04:26.297 --> 00:04:29.644\nSo if I have a server that's\nrunning at 90 percent CPU,\n\n98\n00:04:29.644 --> 00:04:33.784\nthen Amazon recognizes that my\nperformance is not gonna be very good.\n\n99\n00:04:33.784 --> 00:04:37.208\nAnd so they're gonna warn me and\nsay I should consider spinning\n\n100\n00:04:37.208 --> 00:04:41.618\nout more instances, or well it's the old\nargument do I scale up or do I scale out.\n\n101\n00:04:41.618 --> 00:04:44.136\nMy web server's at 90 percent CPU so\ndo I scale it up and\n\n102\n00:04:44.136 --> 00:04:47.150\nadd more CPU power to it or do I scale\nit out and add more web servers.\n\n103\n00:04:47.150 --> 00:04:52.140\nDecision's up to me but it lets me know\nthat it's time to make that decision.\n\n104\n00:04:52.140 --> 00:04:54.282\nOn the security side though,\n\n105\n00:04:54.282 --> 00:04:57.770\nI've got security groups\nspecific ports unrestricted.\n\n106\n00:04:57.770 --> 00:04:59.940\nWhat's it talking about there?\n\n107\n00:04:59.940 --> 00:05:02.980\nWell, that means that I've got\nsome security groups, right.\n\n108\n00:05:02.980 --> 00:05:04.940\nThe software firewall in AWS.\n\n109\n00:05:04.940 --> 00:05:09.338\nI've got the firewall configured and\nthere's access that's being\n\n110\n00:05:09.338 --> 00:05:13.521\ngranted to the entire network,\nright, to the entire internet.\n\n111\n00:05:13.521 --> 00:05:14.682\nWhat's that all about?\n\n112\n00:05:14.682 --> 00:05:19.016\nWell, expect to see this one on your\naccount too, because the default security\n\n113\n00:05:19.016 --> 00:05:23.367\ngroup has SSH enabled for the whole world,\nand that's a management protocol.\n\n114\n00:05:23.367 --> 00:05:25.140\nAnd so they're warning me about that.\n\n115\n00:05:25.140 --> 00:05:29.075\nI should change that so that SSH is\nonly allowed for my office's IP or\n\n116\n00:05:29.075 --> 00:05:30.879\nmy home IP if I have a static IP.\n\n117\n00:05:30.879 --> 00:05:32.922\nI should limit that as much as possible.\n\n118\n00:05:32.922 --> 00:05:36.380\nBecause otherwise, people could try to\nbrute force their way in via SSH and\n\n119\n00:05:36.380 --> 00:05:37.840\ngain access to your server.\n\n120\n00:05:37.840 --> 00:05:41.420\nYou'll also see it's warning me\nabout MFA on my root account.\n\n121\n00:05:41.420 --> 00:05:43.410\nI haven't turned on MFA yet.\n\n122\n00:05:43.410 --> 00:05:45.850\nFor the Root Account,\nI should turn that on.\n\n123\n00:05:45.850 --> 00:05:48.860\nIt's going to give me\na warning until I do that.\n\n124\n00:05:48.860 --> 00:05:52.050\nAnd to take the action,\nI can just click on this and\n\n125\n00:05:52.050 --> 00:05:54.880\nit will take me straight there,\nand I can go and set it up.\n\n126\n00:05:54.880 --> 00:05:57.880\nIn fact, here I just jumped to the IAM\nscreen, and you'll notice it was\n\n127\n00:05:57.880 --> 00:06:01.046\nalready warning me about that and\nwarning me about an IAM password policy.\n\n128\n00:06:01.046 --> 00:06:04.863\nWell, the Trusted Advisor didn't\ncheck that password policy did it?\n\n129\n00:06:04.863 --> 00:06:06.097\nThe Trusted Advisor is not magic.\n\n130\n00:06:06.097 --> 00:06:08.863\nIt's not this massive\nall-encompassing thing.\n\n131\n00:06:08.863 --> 00:06:09.775\nIt has a few basic checks and\n\n132\n00:06:09.775 --> 00:06:11.810\nit should make sure that we're\non the right course, right?\n\n133\n00:06:11.810 --> 00:06:13.180\nBut it's not hard to run.\n\n134\n00:06:13.180 --> 00:06:17.350\nIt's very easy to turn the Trusted Advisor\non, get it doing its stuff.\n\n135\n00:06:17.350 --> 00:06:22.700\nIn fact to turn it on,\nall I did was clicked on Trusted Advisor.\n\n136\n00:06:22.700 --> 00:06:25.170\nThat's it not a whole heck\nof a lot to go there.\n\n137\n00:06:25.170 --> 00:06:29.940\nBut it's also telling me I have\na limited number of checks available\n\n138\n00:06:29.940 --> 00:06:32.830\nbecause I'm in the free version.\n\n139\n00:06:32.830 --> 00:06:36.190\nThere is a paid version of the Trusted\nAdvisor that we can step up to and\n\n140\n00:06:36.190 --> 00:06:37.690\nif we go to the the paid versions,\n\n141\n00:06:37.690 --> 00:06:40.410\nyou get a lot more in terms\nof checks that are available.\n\n142\n00:06:40.410 --> 00:06:44.770\nAnd you'll see, were we can monitor\nthings like recent changes, so\n\n143\n00:06:44.770 --> 00:06:48.560\nyou can match it up with change\ntickets in your organization.\n\n144\n00:06:48.560 --> 00:06:51.800\nYou can create excluded items,\nyou can do five minute refreshes,\n\n145\n00:06:51.800 --> 00:06:55.080\nversus the automatic refresh\nit does in the background.\n\n146\n00:06:55.080 --> 00:07:00.270\nSo there's all sorts of different things\nyou can configure and setup for it.\n\n147\n00:07:00.270 --> 00:07:03.300\nAnd it does cost a little bit of money\nbased on how many systems you're securing.\n\n148\n00:07:03.300 --> 00:07:04.024\nSo the free one is free.\n\n149\n00:07:04.024 --> 00:07:05.840\nBut then,\nif you go to the developer level,\n\n150\n00:07:05.840 --> 00:07:07.519\nit's $50 a month which is not so bad.\n\n151\n00:07:07.519 --> 00:07:10.066\nAnd then it goes up based\non how many systems,\n\n152\n00:07:10.066 --> 00:07:12.711\nyou can get as much as $15,000 a month.\n\n153\n00:07:12.711 --> 00:07:18.180\nIt can actually be a lot, but that one\nis doing a huge amount of checks for\n\n154\n00:07:18.180 --> 00:07:20.880\nsecurity and performance, all right.\n\n155\n00:07:20.880 --> 00:07:24.872\n>> For $15,000, it should be basically\nlike you just hired a security expert.\n\n156\n00:07:24.872 --> 00:07:25.792\n[LAUGH]\n>> Well let's talk about how it isn't.\n\n157\n00:07:25.792 --> 00:07:27.830\n[LAUGH]\n>> So here's the problem,\n\n158\n00:07:27.830 --> 00:07:31.550\nthere's certain things the trusted\nadvisor just can't do.\n\n159\n00:07:31.550 --> 00:07:33.960\nFor example,\nif I I have a Linux AMI that I've spun up,\n\n160\n00:07:33.960 --> 00:07:36.190\nwhich actually I think I have, right?\n\n161\n00:07:36.190 --> 00:07:37.800\nDon't I have some instances?\n\n162\n00:07:37.800 --> 00:07:41.553\nSo I've spun up some instances, and\nit's watching these instances and\n\n163\n00:07:41.553 --> 00:07:44.567\ntelling me, yeah,\nthey're not at over 80 percent,\n\n164\n00:07:44.567 --> 00:07:48.890\nor their disk IO is within the tolerances,\nyou have enough IOPSs available for it.\n\n165\n00:07:48.890 --> 00:07:50.910\nWell, it'll tell me that, but\n\n166\n00:07:50.910 --> 00:07:55.760\nwill it tell me that I have haven't\ndone my package updates inside of Linux.\n\n167\n00:07:55.760 --> 00:07:57.800\nNo.\nIt doesn't see inside of your\n\n168\n00:07:57.800 --> 00:07:58.520\noperating system.\n\n169\n00:07:58.520 --> 00:08:01.280\nSo the Trust Advisor, even if you pay for\nit even if you pay for the big giant full\n\n170\n00:08:01.280 --> 00:08:05.890\npackage, it's not a replacement for\nstandard security processes.\n\n171\n00:08:05.890 --> 00:08:09.310\nYou still need to be checking for\nupdates inside of your instances.\n\n172\n00:08:09.310 --> 00:08:10.480\nIt is a limit, right.\n\n173\n00:08:10.480 --> 00:08:14.190\nThere's only so much that the trust\nadvisor can actually monitor for.\n\n174\n00:08:14.190 --> 00:08:16.070\nSo be you aware that\nit's not a magic wand.\n\n175\n00:08:16.070 --> 00:08:18.940\nIt doesn't just solve all your security\nproblems with a click of a button.\n\n176\n00:08:18.940 --> 00:08:22.610\nYou know, this is when you\nstill need a security admin.\n\n177\n00:08:22.610 --> 00:08:23.920\n>> But it's still pretty cool though.\n\n178\n00:08:23.920 --> 00:08:26.800\nIt gives you a nice overview of\nwhat your systems are doing.\n\n179\n00:08:26.800 --> 00:08:27.870\nChecks for that optimization.\n\n180\n00:08:27.870 --> 00:08:29.190\nChecks for that best practices.\n\n181\n00:08:29.190 --> 00:08:30.338\nThat's always a good thing.\n\n182\n00:08:30.338 --> 00:08:32.322\nNow when it comes to practices,\n\n183\n00:08:32.322 --> 00:08:36.223\nobviously a lot of times there\nare compliance issues, right?\n\n184\n00:08:36.223 --> 00:08:38.058\nYou have to be compliant.\n\n185\n00:08:38.058 --> 00:08:40.278\nMaybe you work in\nthe health care industry,\n\n186\n00:08:40.278 --> 00:08:44.358\nmaybe you work in the banking industry,\nthose have a lot of standardizations and\n\n187\n00:08:44.358 --> 00:08:48.498\ncompliances that they have to make sure\nthat they are following under now Amazon,\n\n188\n00:08:48.498 --> 00:08:51.200\nthey have helped us out with this as well,\nright Don?\n\n189\n00:08:51.200 --> 00:08:51.967\n>> To an extent, yeah.\n\n190\n00:08:51.967 --> 00:08:54.526\nI like to think that most companies want\nthere systems to be secure because they\n\n191\n00:08:54.526 --> 00:08:55.630\nknow it's the right thing to do.\n\n192\n00:08:55.630 --> 00:08:57.050\nBut a lot of companies don't.\n\n193\n00:08:57.050 --> 00:08:59.610\nA lot of companies don't care about it,\nright?\n\n194\n00:08:59.610 --> 00:09:02.980\nThey worry about features first and\nsecurity second.\n\n195\n00:09:02.980 --> 00:09:06.199\nAnd so, in those scenarios oftentimes,\nthe government will step in and\n\n196\n00:09:06.199 --> 00:09:07.640\nthey'll create a regulation.\n\n197\n00:09:07.640 --> 00:09:12.890\nThey'll create something like HIPAA,\nI don't know.\n\n198\n00:09:12.890 --> 00:09:13.746\nThere's some of the ISO\nstandards that are out there.\n\n199\n00:09:13.746 --> 00:09:15.315\nThey'll create these things and\n\n200\n00:09:15.315 --> 00:09:18.520\nthey'll basically force your\norganization to obey them, right?\n\n201\n00:09:18.520 --> 00:09:19.370\nHippa compliance.\n\n202\n00:09:19.370 --> 00:09:22.730\nIf you carry medical records, you have\nto encrypt them to a certain standards,\n\n203\n00:09:22.730 --> 00:09:25.820\nall defined as part of HIPAA compliance.\n\n204\n00:09:25.820 --> 00:09:30.890\nWell, Amazon knows that and Amazon knows\nthat if you're using their servers,\n\n205\n00:09:30.890 --> 00:09:33.564\nthat they need to be HIPAA compliant,\nor or\n\n206\n00:09:33.564 --> 00:09:35.947\nwhatever it is,\nthey need to follow those same practices.\n\n207\n00:09:35.947 --> 00:09:41.070\nSo they've actually done that for a lot\nof it and Amazon has a great web page.\n\n208\n00:09:41.070 --> 00:09:46.180\nLet me just pull this up here which\nis the AWS cloud compliance page.\n\n209\n00:09:46.180 --> 00:09:49.720\nNow this page shows some of\nthe different standards that\n\n210\n00:09:49.720 --> 00:09:51.490\nAmazon already lives up to, PCI.\n\n211\n00:09:51.490 --> 00:09:53.500\nPCI compliance is the payment\ncard industry, and\n\n212\n00:09:53.500 --> 00:09:56.160\nthat's a real important one If you\naccept credit cards on your website,\n\n213\n00:09:56.160 --> 00:10:00.310\nyou have to be PCI-compliant or\nyour credit card processors will drop you.\n\n214\n00:10:00.310 --> 00:10:01.260\nRight?\n\n215\n00:10:01.260 --> 00:10:05.610\nSo Amazon's data centers\nare PCI-compliant.\n\n216\n00:10:05.610 --> 00:10:08.630\nWell, you'll notice that they're\nSOC-compliant, they're ISO 9001,\n\n217\n00:10:08.630 --> 00:10:09.140\nMTCS Tier 3.\n\n218\n00:10:09.140 --> 00:10:11.470\nYou'll see a bunch of other ones.\n\n219\n00:10:11.470 --> 00:10:14.810\nHPAA, FERPA, ITAR, all these great ones,\nalready done, right?\n\n220\n00:10:14.810 --> 00:10:17.250\nIf I take a look at HIPAA.\n\n221\n00:10:17.250 --> 00:10:23.628\nThey break it down here for me and let me\nknow that we are HIPAA compliant on AWS.\n\n222\n00:10:23.628 --> 00:10:25.630\nSort of, right?\n\n223\n00:10:25.630 --> 00:10:27.380\nNow, what's the sort of?\n\n224\n00:10:27.380 --> 00:10:31.760\nNotice this link right here, architecting\nfor HIPAA security and compliance on AWS.\n\n225\n00:10:31.760 --> 00:10:35.955\nIf Amazon is already HIPAA compliant,\nwhy do I have to architect for it?\n\n226\n00:10:35.955 --> 00:10:37.585\nHaven't they done it?\n\n227\n00:10:37.585 --> 00:10:40.655\nWell they have for their stuff,\nremember that Amazon for\n\n228\n00:10:40.655 --> 00:10:44.565\nsome services like EC2,\nthey are infrastructures of service.\n\n229\n00:10:44.565 --> 00:10:47.840\nThey're taking care of the hardware and\non the hardware side.\n\n230\n00:10:47.840 --> 00:10:48.860\nYeah they're HIPAA compliant.\n\n231\n00:10:48.860 --> 00:10:50.030\nThey've taken care of it.\n\n232\n00:10:50.030 --> 00:10:51.410\nData is being destroyed properly.\n\n233\n00:10:51.410 --> 00:10:53.150\nSystems are being backed up properly.\n\n234\n00:10:53.150 --> 00:10:55.530\nThey're taking care of that.\n\n235\n00:10:55.530 --> 00:10:58.910\nBut when you create an instance,\nyou're in charge of the instance.\n\n236\n00:10:58.910 --> 00:11:02.360\nAnd you may not be treating it\nin a HIPAA compliant manner.\n\n237\n00:11:02.360 --> 00:11:03.700\nAnd so now you're not compliant.\n\n238\n00:11:03.700 --> 00:11:07.820\nAnd nowhere is that more true than with\nPCI, right with the payment card industry.\n\n239\n00:11:07.820 --> 00:11:09.910\nSo if you're accepting credit\ncards on your website,\n\n240\n00:11:09.910 --> 00:11:14.220\nyeah Amazon's got you taken care\non the infrastructure side.\n\n241\n00:11:14.220 --> 00:11:18.530\nBut if you're website is not using SSL,\nthen you're not PCI compliant and\n\n242\n00:11:18.530 --> 00:11:20.440\nAmazon's not gonna stop you\nbecause it's your website.\n\n243\n00:11:20.440 --> 00:11:22.300\nYou control it.\nYou can take credit cards without\n\n244\n00:11:22.300 --> 00:11:23.220\nSSL if you want.\n\n245\n00:11:23.220 --> 00:11:25.280\nBut you're not PCI compliant anymore.\n\n246\n00:11:25.280 --> 00:11:25.820\nRight?\n\n247\n00:11:25.820 --> 00:11:31.530\nSo it's not that we can just show\nthis webpage to our auditor and be\n\n248\n00:11:31.530 --> 00:11:35.840\nlike \" this is right here, we're covered,\ndon't bother me, we're done.\" But no, and\n\n249\n00:11:35.840 --> 00:11:39.200\nif you've ever seen a PCI compliance,\naudit form, it's 50, 60 pages long.\n\n250\n00:11:39.200 --> 00:11:41.680\nIt takes forever to fill out\neven if you know the answers,\n\n251\n00:11:41.680 --> 00:11:42.610\nit takes forever to fill out.\n\n252\n00:11:42.610 --> 00:11:44.730\nIf you don't know\nthe answers it takes months,\n\n253\n00:11:44.730 --> 00:11:46.820\nit's crazy, you don't want to do it.\n\n254\n00:11:46.820 --> 00:11:49.670\nWell if you're looking at Amazon\nto be your crutch for this,\n\n255\n00:11:49.670 --> 00:11:50.320\nit's not gonna happen.\n\n256\n00:11:50.320 --> 00:11:53.150\nThey are taken care of on their end.\n\n257\n00:11:53.150 --> 00:11:54.680\nIt's up to you to do the rest.\n\n258\n00:11:54.680 --> 00:11:55.800\nRight?\nYour servers, and so on.\n\n259\n00:11:55.800 --> 00:11:58.990\nSo, things like the trust advisor\nthat I showed you a little earlier?\n\n260\n00:11:58.990 --> 00:12:00.960\nIt doesn't even bother with compliance.\n\n261\n00:12:00.960 --> 00:12:03.940\nBecause Amazon already knows\nthey're compliant, and\n\n262\n00:12:03.940 --> 00:12:05.820\nthey can't check your systems to do it.\n\n263\n00:12:05.820 --> 00:12:08.930\nThey don't have that visibility inside of\nyour systems, and so it's left to you.\n\n264\n00:12:08.930 --> 00:12:12.470\nSo be careful, this page is really\ntempting to look at and say, I'm covered,\n\n265\n00:12:12.470 --> 00:12:15.670\nproblem solved,\nI'll just show that to the auditors,\n\n266\n00:12:15.670 --> 00:12:16.950\nbecause they'll just eat you alive.\n\n267\n00:12:16.950 --> 00:12:19.970\nYour systems may very well\nnot be in compliance.\n\n268\n00:12:19.970 --> 00:12:24.160\nBut, the nice thing here is that Amazon\ndoes publish some articles on these.\n\n269\n00:12:24.160 --> 00:12:27.060\nSo if I want to become,\nlet's go with HIPAA,\n\n270\n00:12:27.060 --> 00:12:30.630\nI can go to this Architecting for\nHIPAA Security and Compliance on AWS, and\n\n271\n00:12:30.630 --> 00:12:34.950\nthey've got a whole white paper here that\nlists, here's the things that you need\n\n272\n00:12:34.950 --> 00:12:37.930\nto do for each of these different\nservices, EC2, Redshift, S3.\n\n273\n00:12:37.930 --> 00:12:40.560\nHow do I encrypt and\nprotect my data, right?\n\n274\n00:12:40.560 --> 00:12:43.090\nAnd then, oops,\nclicked on the dad-gum thing.\n\n275\n00:12:43.090 --> 00:12:46.840\nAnd then it breaks down other areas that\nwe can go to improve those systems and\n\n276\n00:12:46.840 --> 00:12:49.685\nmake sure that we are HIPAA\ncompliant with our own data.\n\n277\n00:12:49.685 --> 00:12:51.830\nBut it is up to us.\n\n278\n00:12:51.830 --> 00:12:53.030\nHow do we do auditing?\n\n279\n00:12:53.030 --> 00:12:53.720\nHow do we do backups?\n\n280\n00:12:53.720 --> 00:12:56.320\nHow do we do disaster recovery,\nall laid out, right here.\n\n281\n00:12:56.320 --> 00:12:59.410\nBut you've gotta do it, all right.\n\n282\n00:12:59.410 --> 00:13:01.220\nDon't discount the Amazon white papers.\n\n283\n00:13:01.220 --> 00:13:03.330\nI know a lot of companies,\nyou buy a product,\n\n284\n00:13:03.330 --> 00:13:07.580\nlike here read the white paper,\nand you just throw it away.\n\n285\n00:13:07.580 --> 00:13:08.440\nThat's what I do.\n\n286\n00:13:08.440 --> 00:13:10.400\nBut with Amazon, they actually have value.\n\n287\n00:13:10.400 --> 00:13:12.320\nThey're actually bringing this to you and\nsaying,\n\n288\n00:13:12.320 --> 00:13:13.420\nhere's the steps you need to follow.\n\n289\n00:13:13.420 --> 00:13:14.740\nIt's a really wonderful thing.\n\n290\n00:13:14.740 --> 00:13:17.120\n>> Yeah, it's never fun to get a white\npaper and it's basically saying,\n\n291\n00:13:17.120 --> 00:13:19.694\nyou need to secure your stuff and\ngood luck with that.\n\n292\n00:13:19.694 --> 00:13:20.704\n[LAUGH] You throw those away.\n\n293\n00:13:20.704 --> 00:13:24.450\nAmazon on there actually trying to help\nyou out, make sure that you are compliant.\n\n294\n00:13:24.450 --> 00:13:25.030\nVery cool.\nAnd\n\n295\n00:13:25.030 --> 00:13:28.810\nit is still a good thing that when\nyou purchase services from Amazon,\n\n296\n00:13:28.810 --> 00:13:32.860\nyou know that whatever you're\npurchasing from them, like Don said,\n\n297\n00:13:32.860 --> 00:13:35.280\nthe hardware is under HIPAA compliance.\n\n298\n00:13:35.280 --> 00:13:37.400\nIt's under all those\ndifferent compliances.\n\n299\n00:13:37.400 --> 00:13:40.660\nThat you at least have that\nportion of compliance under wraps.\n\n300\n00:13:40.660 --> 00:13:41.940\nYou don't have to worry about it.\n\n301\n00:13:41.940 --> 00:13:43.310\nThey have taken a lot off your plate.\n\n302\n00:13:43.310 --> 00:13:46.690\nNow you just have to deal with\nwhatever it is your environment is\n\n303\n00:13:46.690 --> 00:13:48.390\nthat you're responsible for.\n\n304\n00:13:48.390 --> 00:13:51.260\nAll right, Don, is there anything\nelse we need to cover when\n\n305\n00:13:51.260 --> 00:13:52.610\nit comes to your extra security tools?\n\n306\n00:13:52.610 --> 00:13:53.470\n>> That's basically it.\n\n307\n00:13:53.470 --> 00:13:56.300\nI mean, there are a few other ones but\nthese are the only ones that really show\n\n308\n00:13:56.300 --> 00:13:58.100\nup on the exam,\nthe ones that you need to know.\n\n309\n00:13:58.100 --> 00:14:00.690\nIn real life, take advantage of every\ntool that's available to you but\n\n310\n00:14:00.690 --> 00:14:02.410\nI think we've covered.\n\n311\n00:14:02.410 --> 00:14:04.040\nFor what we need to be exam ready.\n\n312\n00:14:04.040 --> 00:14:04.600\n>> Well, awesome.\n\n313\n00:14:04.600 --> 00:14:08.370\nThanks so much for those demonstrations\nand explaining how we can use them.\n\n314\n00:14:08.370 --> 00:14:09.610\nAnd thank you for watching.\n\n315\n00:14:09.610 --> 00:14:11.530\nWe're gonna go ahead and\nsign off for ITProTV.\n\n316\n00:14:11.530 --> 00:14:13.870\nI've been your host, Daniel Lowrie.\n\n317\n00:14:13.870 --> 00:14:17.240\nAnd I'm Don Pezet.\n\n318\n00:14:17.240 --> 00:14:19.222\n>> We'll see you next time.\n\n319\n00:14:19.222 --> 00:14:20.981\n[SOUND]\n\n",
          "vimeoId": "146523422"
        }
      ],
      "title": "Identity & Access Management"
    },
    {
      "episodes": [
        {
          "description": "In this episode, Don and Daniel get into cloud networking with AWS Virtual Private Cloud(VPC). They begin by explaining what VPC is and how it works and then they jump right into creating and configuring a VPC. Once they get the VPC created they then show you how to get it connected to the internet.",
          "length": "1852",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/amazon-acsa/amazon-acsa-0-0-1-virtual_private_clouds-121815-1.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/amazon-acsa/amazon-acsa-0-0-1-virtual_private_clouds-121815-1-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/amazon-acsa/amazon-acsa-0-0-1-virtual_private_clouds-121815-1-sm.jpg",
          "title": "Virtual Private Cloud",
          "transcript": "WEBVTT\n\n1\n00:00:00.538 --> 00:00:10.538\n[MUSIC]\n\n2\n00:00:12.409 --> 00:00:16.549\nAll right, greetings everyone and welcome\nto another great episode of ITProTV.\n\n3\n00:00:16.549 --> 00:00:18.433\nI'm your host Daniel Lowrie and\n\n4\n00:00:18.433 --> 00:00:22.970\ntoday's episode we're continuing on\nthe trail of the Amazon Certified, or\n\n5\n00:00:22.970 --> 00:00:26.686\nthe AWS, I'll shorten it down,\nAWS Certified SysOps Admin.\n\n6\n00:00:26.686 --> 00:00:29.785\nAnd joining us on the studio today well,\nit's none other than Don Pezet.\n\n7\n00:00:29.785 --> 00:00:32.040\nDon, welcome to the show,\nhow you doing today, sir?\n\n8\n00:00:32.040 --> 00:00:32.760\n>> Doing great, Daniel.\n\n9\n00:00:32.760 --> 00:00:34.155\nThanks for having me back.\n\n10\n00:00:34.155 --> 00:00:39.136\nAnd in this episode we're gonna be taking\na look at VPCs, or virtual private clouds,\n\n11\n00:00:39.136 --> 00:00:41.570\nwhich are a pretty important part of AWS.\n\n12\n00:00:41.570 --> 00:00:43.920\nIt's one of those things that you\ncan actually choose to ignore.\n\n13\n00:00:43.920 --> 00:00:46.290\nThere's a default configuration\nthat does work for some people.\n\n14\n00:00:46.290 --> 00:00:48.690\nBut most of us are gonna find\nthat we need to get in there and\n\n15\n00:00:48.690 --> 00:00:50.440\ntweak the way that the VPCs work.\n\n16\n00:00:50.440 --> 00:00:54.140\nAnd so it's a good idea to understand what\nthe heck they are in case you don't know.\n\n17\n00:00:54.140 --> 00:00:56.910\nAnd then how we can use\nthem to provide networking\n\n18\n00:00:56.910 --> 00:00:59.130\nin various scenarios\ninside of Amazon Cloud.\n\n19\n00:00:59.130 --> 00:01:00.860\nSo that's what we've got lined up for\ntoday.\n\n20\n00:01:00.860 --> 00:01:04.680\n>> Now Don, this is obviously, you hit\nthe big buzz word there, networking.\n\n21\n00:01:04.680 --> 00:01:08.770\nThis is something to do with connecting\ndifferent things together over some sort\n\n22\n00:01:08.770 --> 00:01:10.970\nof network connection.\n\n23\n00:01:10.970 --> 00:01:13.409\nVPCs obviously does that.\n\n24\n00:01:13.409 --> 00:01:15.540\nHow is it any different than\ntraditional networking?\n\n25\n00:01:15.540 --> 00:01:17.740\nIt is really where the brass\ntacks hits the floor.\n\n26\n00:01:17.740 --> 00:01:20.138\nSo, help us out with that.\n\n27\n00:01:20.138 --> 00:01:20.821\n>> Sure.\n\n28\n00:01:20.821 --> 00:01:23.360\nSo, when you setup an on premises\nsolution, you have to buy switches.\n\n29\n00:01:23.360 --> 00:01:25.540\nYou have to buy routers,\nyou have to buy firewalls.\n\n30\n00:01:25.540 --> 00:01:30.447\nAnd you get all that setup and\nconfigured and it's all physical hardware.\n\n31\n00:01:30.447 --> 00:01:31.318\nRight?\n\n32\n00:01:31.318 --> 00:01:34.469\nWith AWS, Amazon has that stuff,\nthey have firewalls, they have routers,\n\n33\n00:01:34.469 --> 00:01:35.840\nthey have switches.\n\n34\n00:01:35.840 --> 00:01:37.910\nBut you can't see them,\nyou don't have access to them,\n\n35\n00:01:37.910 --> 00:01:39.550\nyou don't have that kind of control.\n\n36\n00:01:39.550 --> 00:01:44.544\nSo what VPCs are, are basically like\na logical representation of all those\n\n37\n00:01:44.544 --> 00:01:46.210\nother components.\n\n38\n00:01:46.210 --> 00:01:50.160\nAnd so when we go to set these things up,\nwhat you're doing when you create a VPC\n\n39\n00:01:50.160 --> 00:01:53.170\nis, ultimately, if you're a network\nengineer, you know about this.\n\n40\n00:01:53.170 --> 00:01:56.326\nYou're creating what are called VLANs,\nor virtual local area networks.\n\n41\n00:01:56.326 --> 00:02:01.230\nYou're dividing up pieces of\nAmazon's network to be private and\n\n42\n00:02:01.230 --> 00:02:03.710\nisolated just to contain your systems.\n\n43\n00:02:03.710 --> 00:02:06.668\nSo, for example, I might not need that.\n\n44\n00:02:06.668 --> 00:02:08.810\nI might wanna have five web\nservers stored up in AWS, and\n\n45\n00:02:08.810 --> 00:02:11.420\nI want them all to be publicly\naccessible and that's it.\n\n46\n00:02:11.420 --> 00:02:15.140\nSo I just have one network, I put all\nthose servers in the same network,\n\n47\n00:02:15.140 --> 00:02:17.190\nI expose them to the internet and\nthat's it.\n\n48\n00:02:17.190 --> 00:02:19.458\nBut I might wanna have separate networks.\n\n49\n00:02:19.458 --> 00:02:23.650\nI might wanna have web servers that\nare public and exposed to the internet.\n\n50\n00:02:23.650 --> 00:02:26.040\nAnd I might wanna have database\nservers that are private,\n\n51\n00:02:26.040 --> 00:02:28.860\non the back-end that the internet's\nnot allowed to access.\n\n52\n00:02:28.860 --> 00:02:30.362\nRight?\nMaybe for security reasons,\n\n53\n00:02:30.362 --> 00:02:34.046\nyou don't want people on the outside\nhaving direct access to your database\n\n54\n00:02:34.046 --> 00:02:34.581\nservers.\n\n55\n00:02:34.581 --> 00:02:38.370\nSo, on a physical network, I would use\nseparate switches, use separate routers.\n\n56\n00:02:38.370 --> 00:02:41.290\nYou'll put them on a separate network and\nthat would take care of it.\n\n57\n00:02:41.290 --> 00:02:45.460\nIn Amazon Cloud we can use VPCs, we can\ncreate a virtual private cloud just for\n\n58\n00:02:45.460 --> 00:02:49.700\nour database servers, and a virtual\nprivate cloud just for our web servers.\n\n59\n00:02:49.700 --> 00:02:54.740\nOr, you can create one virtual\nprivate cloud and divide it up.\n\n60\n00:02:54.740 --> 00:02:57.220\nSo I might have a virtual private\ncloud that lines up with my web app.\n\n61\n00:02:57.220 --> 00:03:00.230\nI have a web application and\nthis is its cloud.\n\n62\n00:03:00.230 --> 00:03:04.670\nAnd then inside of that cloud,\nI create separate subnets, one for\n\n63\n00:03:04.670 --> 00:03:07.930\neach of the different service levels or\nservice types that I have.\n\n64\n00:03:07.930 --> 00:03:10.780\nSo I might have database servers,\nweb servers, app servers, whatever, and\n\n65\n00:03:10.780 --> 00:03:12.570\nthey're all kind of divided\nup on their subnets.\n\n66\n00:03:12.570 --> 00:03:14.670\nYou get a lot of control,\na lot of flexibility.\n\n67\n00:03:14.670 --> 00:03:17.900\nNow there's different times where you\nuse different parts of the solution, so\n\n68\n00:03:17.900 --> 00:03:20.100\nI'll point that out as the show goes on.\n\n69\n00:03:20.100 --> 00:03:24.660\nBut, one key thing we need to remember\nis that when you create a VPC,\n\n70\n00:03:24.660 --> 00:03:26.470\na VPC is tied to a region.\n\n71\n00:03:26.470 --> 00:03:30.530\nSo if I create a virtual private\ncloud in the US East region,\n\n72\n00:03:30.530 --> 00:03:33.240\nin Virginia, that's where it resides.\n\n73\n00:03:33.240 --> 00:03:36.980\nIt doesn't reside in US West,\nor in Europe West, or wherever.\n\n74\n00:03:36.980 --> 00:03:40.570\nIf the US East data center goes down,\nmy VPC goes down.\n\n75\n00:03:40.570 --> 00:03:43.360\nSo the odds are you're going to\nneed more than one VPC to be\n\n76\n00:03:43.360 --> 00:03:45.960\nable to cover the different\nregions that are out there.\n\n77\n00:03:45.960 --> 00:03:49.336\nAnd then within a region,\nyou have availability zones.\n\n78\n00:03:49.336 --> 00:03:51.645\nRight?\nSo I'll use US East again as an example,\n\n79\n00:03:51.645 --> 00:03:53.150\ncuz that's the biggest one.\n\n80\n00:03:53.150 --> 00:03:55.270\nAnd in there they have\nfive availability zones.\n\n81\n00:03:55.270 --> 00:03:58.798\nSo when you create a VPC it's\ngonna bond to four of them, and\n\n82\n00:03:58.798 --> 00:04:00.785\nyou can have subnets in all four.\n\n83\n00:04:00.785 --> 00:04:01.500\nRight?\n\n84\n00:04:01.500 --> 00:04:03.680\nThe subnets are part of your\nvirtual private cloud, but\n\n85\n00:04:03.680 --> 00:04:06.130\nnow you're spreading across\nthose availability zones.\n\n86\n00:04:06.130 --> 00:04:11.130\nSo depending on the level of redundancy I\nwant, I may be able to use just one VPC\n\n87\n00:04:11.130 --> 00:04:14.670\nspread across multiple availability\nzones in a single region.\n\n88\n00:04:14.670 --> 00:04:18.710\nOr I might need more than one\nVPC spread across regions on\n\n89\n00:04:18.710 --> 00:04:23.330\nthe planet to get that geolocation and\ngeoredundancy and have all that in place.\n\n90\n00:04:23.330 --> 00:04:25.770\nSo you get a lot of flexibility and\ncontrol.\n\n91\n00:04:25.770 --> 00:04:29.400\nKey thing to remember is that what most\nof us are gonna work with are subnets.\n\n92\n00:04:29.400 --> 00:04:33.320\nThe subnets where we divide our\nnetwork up based on IP address.\n\n93\n00:04:33.320 --> 00:04:37.980\nAnd a subnet can only exist in one\navailability zone and in one region.\n\n94\n00:04:37.980 --> 00:04:41.420\nNow, when you're tied to a region, you can\ndivide it up into smaller networks, and\n\n95\n00:04:41.420 --> 00:04:43.450\nthose can be spread across the AZs, but\n\n96\n00:04:43.450 --> 00:04:48.180\na single subnet exists in a single AZ,\na single availability zone.\n\n97\n00:04:48.180 --> 00:04:52.990\nYou can't have one subnet that\nspans across AZs or regions, even.\n\n98\n00:04:52.990 --> 00:04:54.350\nIt doesn't do that.\n\n99\n00:04:54.350 --> 00:04:57.139\nFortunately, if you do your design\nright for your web application,\n\n100\n00:04:57.139 --> 00:04:59.891\nyou're not really beholding to those IPs,\nand so you don't care.\n\n101\n00:04:59.891 --> 00:05:00.437\nRight?\n\n102\n00:05:00.437 --> 00:05:03.675\nIf you're using DNS, DHEP,\nthe various combinations and\n\n103\n00:05:03.675 --> 00:05:07.820\nreferencing things by their name and\nnot their IP, IPs can change.\n\n104\n00:05:07.820 --> 00:05:10.720\nAnd you need that because if you're\nauto scaling you don't know what your IP\n\n105\n00:05:10.720 --> 00:05:12.510\nis gonna be until it\nscales an instance up.\n\n106\n00:05:12.510 --> 00:05:17.600\nSo by removing that dependence on an IP,\nwe have a lot more flexibility and\n\n107\n00:05:17.600 --> 00:05:19.570\na lot more structure and\nwe'll see that as we go through and\n\n108\n00:05:19.570 --> 00:05:21.650\nstart to set up some of these VPCs.\n\n109\n00:05:21.650 --> 00:05:25.240\nNow the subnet side,\nas we kinda segregate our network,\n\n110\n00:05:25.240 --> 00:05:27.701\nthat's kinda what a switch would\ndo on our physical network.\n\n111\n00:05:27.701 --> 00:05:29.170\nRight?\nSo you'd use a switch,\n\n112\n00:05:29.170 --> 00:05:31.430\nyou'd create VLANs on it, and\nthat would divide things up.\n\n113\n00:05:31.430 --> 00:05:32.720\nAnd then you have a router.\n\n114\n00:05:32.720 --> 00:05:36.090\nWell, with the VPC, you have an internet\ngateway which is effectively a router.\n\n115\n00:05:36.090 --> 00:05:38.780\nYou can stick that on your VPC,\nand now it has internet access.\n\n116\n00:05:38.780 --> 00:05:41.179\nYou can take it off the VPC, and\nnow you don't have internet access.\n\n117\n00:05:41.179 --> 00:05:43.420\nIt's like turning a router on and off.\n\n118\n00:05:43.420 --> 00:05:46.330\nAnd then you have security groups and\nnetwork ACLs.\n\n119\n00:05:46.330 --> 00:05:48.360\nThose are like your firewalls.\n\n120\n00:05:48.360 --> 00:05:50.970\nYou put those in place and\nyou can filter what traffic's allowed in,\n\n121\n00:05:50.970 --> 00:05:52.450\nwhat traffic's allowed out.\n\n122\n00:05:52.450 --> 00:05:55.160\nSo you're turning on and\noff that firewall functionality.\n\n123\n00:05:55.160 --> 00:06:00.290\nSo routers, switches,\nfirewalls, become VPC subnets,\n\n124\n00:06:00.290 --> 00:06:03.790\ninternet gateways, and\nsecurity groups and network ACLs.\n\n125\n00:06:03.790 --> 00:06:06.540\nThe concepts are the same,\nlike what they do is the same.\n\n126\n00:06:06.540 --> 00:06:08.560\nIt's just the names that are different.\n\n127\n00:06:08.560 --> 00:06:10.080\nAnd it's all virtual in AWS.\n\n128\n00:06:10.080 --> 00:06:11.850\nIt takes a little bit\nof getting used to it.\n\n129\n00:06:11.850 --> 00:06:15.730\n>> Now Don, does this remove me from\nhaving to know things like Cisco and\n\n130\n00:06:15.730 --> 00:06:16.670\nthings like that?\n\n131\n00:06:16.670 --> 00:06:17.610\nI no longer need that?\n\n132\n00:06:17.610 --> 00:06:19.086\nI can just use Amazon?\n\n133\n00:06:19.086 --> 00:06:20.072\n>> Well.\n\n134\n00:06:20.072 --> 00:06:22.812\n>> [LAUGH]\n>> I guess it depends on who you are.\n\n135\n00:06:22.812 --> 00:06:24.729\nIf you're Amazon, then yes,\nthat's what you say.\n\n136\n00:06:24.729 --> 00:06:25.727\n>> [LAUGH] That's true.\n\n137\n00:06:25.727 --> 00:06:28.727\n>> There's actually some really good\nreason why you might still deal with\n\n138\n00:06:28.727 --> 00:06:29.431\nother vendors.\n\n139\n00:06:29.431 --> 00:06:31.194\nRight?\n\n140\n00:06:31.194 --> 00:06:34.820\nWhen we talk about network ACLs and\nsecurity groups, what do they do?\n\n141\n00:06:34.820 --> 00:06:39.289\nThey filter traffic based on source and\ndestination ports and that's about it.\n\n142\n00:06:39.289 --> 00:06:40.080\nRight?\n\n143\n00:06:40.080 --> 00:06:41.510\nBut if I want to do\nsomething more advanced,\n\n144\n00:06:41.510 --> 00:06:46.660\nlike filtering based on a time frame,\nor I want to do VPN connectivity,\n\n145\n00:06:46.660 --> 00:06:51.020\nI want to do application inspection,\nlike next-gen firewall stuff.\n\n146\n00:06:51.020 --> 00:06:52.210\nIt doesn't do that.\n\n147\n00:06:52.210 --> 00:06:53.890\nAnd so, if I want to do things like that,\n\n148\n00:06:53.890 --> 00:06:57.370\nmalware scans all that, well that's\nwhere we can leverage other vendors.\n\n149\n00:06:57.370 --> 00:07:02.460\nAnd CISCO actually has a virtual appliance\nwhere you can deploy a CISCO ASA Firewall.\n\n150\n00:07:02.460 --> 00:07:05.280\nThat's a virtual appliance\nin Amazon Web Services.\n\n151\n00:07:05.280 --> 00:07:07.160\nAnd so now you've got\nthe equivalent of a Cisco firewall,\n\n152\n00:07:07.160 --> 00:07:10.850\nwhich can do firewalling and\ngateway services inside of your VPC.\n\n153\n00:07:10.850 --> 00:07:12.330\nYou can still do that.\n\n154\n00:07:12.330 --> 00:07:14.850\nAnd a lot of the vendors that are out\nthere have started doing that.\n\n155\n00:07:14.850 --> 00:07:16.940\nCheckpoint Firewall has one.\n\n156\n00:07:16.940 --> 00:07:17.450\nCisco.\n\n157\n00:07:17.450 --> 00:07:19.460\nI'm pretty sure Dell Sonic Wall has one.\n\n158\n00:07:19.460 --> 00:07:20.790\nThere's a couple of different vendors.\n\n159\n00:07:20.790 --> 00:07:22.890\nCisco is the one that I\nhave worked with the most.\n\n160\n00:07:22.890 --> 00:07:24.500\nBut you'll see those out there.\n\n161\n00:07:24.500 --> 00:07:26.980\nBut you don't have to,\nyou don't have to do that.\n\n162\n00:07:26.980 --> 00:07:30.510\nThe Amazon functionality is really\nperfectly good for most of us, and so\n\n163\n00:07:30.510 --> 00:07:32.690\nit meet your needs,\nyou get that implemented in your business.\n\n164\n00:07:32.690 --> 00:07:33.570\n>> Awesome.\nWell Don,\n\n165\n00:07:33.570 --> 00:07:36.150\nI'm sure everybody out there,\nand I know myself,\n\n166\n00:07:36.150 --> 00:07:40.750\nwe are ready see how this thing actually\nworks, let's do it, let's see it happen.\n\n167\n00:07:40.750 --> 00:07:44.960\n>> All right, well, the first thing is,\nif you wanna configure VPCs,\n\n168\n00:07:44.960 --> 00:07:48.328\nif you have a new Amazon account,\nyou're already done.\n\n169\n00:07:48.328 --> 00:07:49.697\nRight?\nIf you sign up for\n\n170\n00:07:49.697 --> 00:07:52.959\nan Amazon account today,\nyou will have at least one VPC.\n\n171\n00:07:52.959 --> 00:07:55.699\nAmazon creates a default\nvirtual private cloud for you.\n\n172\n00:07:55.699 --> 00:07:57.278\nIt's in place, it's there already.\n\n173\n00:07:57.278 --> 00:07:58.020\nAll right?\n\n174\n00:07:58.020 --> 00:07:58.925\nNow.\n\n175\n00:07:58.925 --> 00:07:59.693\nWhy do I bring that up?\n\n176\n00:07:59.693 --> 00:08:00.877\nI bring up cuz it is important.\n\n177\n00:08:00.877 --> 00:08:05.181\nIf you have an older account,\nlike when I originally signed up for AWS,\n\n178\n00:08:05.181 --> 00:08:06.990\nVPCs didn't exist.\n\n179\n00:08:06.990 --> 00:08:10.139\nAnd so there's a different mode,\nit's what's called EC2-Classic.\n\n180\n00:08:10.139 --> 00:08:13.460\nAnd with EC2-Classic you\ndon't have VPCs that\n\n181\n00:08:13.460 --> 00:08:17.469\nall of your servers are fully exposed to\nthe internet, they've all got public IPs.\n\n182\n00:08:18.880 --> 00:08:22.740\nAnd their basically just tied to\nwhatever AC they were deployed in.\n\n183\n00:08:22.740 --> 00:08:24.500\nAnd you have a lot less flexibility.\n\n184\n00:08:24.500 --> 00:08:25.390\nA lot less functionality.\n\n185\n00:08:25.390 --> 00:08:29.040\nYou have your network security groups and\nthat's really about it.\n\n186\n00:08:29.040 --> 00:08:31.560\nAside from that you lose of the other\ncool things that are available.\n\n187\n00:08:31.560 --> 00:08:34.970\nSo if you have an older account\nyou might not have any VPCs.\n\n188\n00:08:34.970 --> 00:08:38.940\nBut if you have a newer one\nthen you should have one VPC.\n\n189\n00:08:38.940 --> 00:08:40.860\nAnd one internet gateway.\n\n190\n00:08:40.860 --> 00:08:44.410\nYou have a virtual private cloud that's\nbeen created that all of your instances\n\n191\n00:08:44.410 --> 00:08:44.930\nand stuff are in.\n\n192\n00:08:44.930 --> 00:08:48.120\nAnd then it'll have an internet gateway\nthat's granting it internet access.\n\n193\n00:08:48.120 --> 00:08:50.590\nAnd so then all you've gotta do\nis start deploying instances, and\n\n194\n00:08:50.590 --> 00:08:51.490\nyou're in business.\n\n195\n00:08:51.490 --> 00:08:53.070\nAnd that should be how my account is here.\n\n196\n00:08:53.070 --> 00:08:54.070\nIf we pull up my console.\n\n197\n00:08:56.060 --> 00:08:57.660\nI've messed with my\naccount quite a bit but\n\n198\n00:08:57.660 --> 00:09:00.450\nI should still be pretty\nclose to the default on VPCs.\n\n199\n00:09:00.450 --> 00:09:05.130\nIf I go down here to my VPCs, and\nI look, so here's my VPC dashboard, and\n\n200\n00:09:05.130 --> 00:09:10.620\nyou can see where I've got 1 VPC,\n4 subnets, and 1 Internet gateway.\n\n201\n00:09:10.620 --> 00:09:14.680\nAll right, and if I look at my VPC,\nit's got a cool name, itprotv-default.\n\n202\n00:09:14.680 --> 00:09:18.360\nRight, and if I kinda look around here,\nthe default tenancy, default VPC,\n\n203\n00:09:18.360 --> 00:09:20.300\nthat's what I was looking for.\n\n204\n00:09:20.300 --> 00:09:20.990\nYes.\n\n205\n00:09:20.990 --> 00:09:24.030\nThis is the one that Amazon made for me.\n\n206\n00:09:24.030 --> 00:09:26.160\nNow, on yours,\nit probably won't have a name.\n\n207\n00:09:26.160 --> 00:09:27.770\nI've apparently renamed this one.\n\n208\n00:09:27.770 --> 00:09:30.900\nSo it might look a little different.\n\n209\n00:09:30.900 --> 00:09:32.600\nMight look like that.\n\n210\n00:09:32.600 --> 00:09:34.310\n[LAUGH] and have no name.\n\n211\n00:09:34.310 --> 00:09:36.770\nI like to name these things so that I\ndon't screw it up later on down the road,\n\n212\n00:09:36.770 --> 00:09:40.900\nand that's kind of important, because\nyou can actually delete the default VPC.\n\n213\n00:09:40.900 --> 00:09:43.170\nIf you don't like VPCs and\n\n214\n00:09:43.170 --> 00:09:46.970\nyou wanna go back to the EC2-Classic mode,\nyou can just take that VPC and delete it.\n\n215\n00:09:46.970 --> 00:09:47.590\nIt'll let you do it.\n\n216\n00:09:47.590 --> 00:09:51.180\nBut there's no way to make it again,\nso if you get rid of the default VPC,\n\n217\n00:09:51.180 --> 00:09:53.980\nit's just gone, and\nnow you gotta create your own, all right?\n\n218\n00:09:53.980 --> 00:09:58.460\nAnd there's certain functions the default\nVPC has that a new VPC doesn't.\n\n219\n00:09:58.460 --> 00:10:00.510\nFor example, the default VPC, by default.\n\n220\n00:10:01.710 --> 00:10:02.990\nI'm getting a little redundant here.\n\n221\n00:10:02.990 --> 00:10:04.830\nAllows all traffic to go\nout to the internet and\n\n222\n00:10:04.830 --> 00:10:08.282\nallows communication between\nother VPCs you've create.\n\n223\n00:10:08.282 --> 00:10:08.800\nRight?\nBut\n\n224\n00:10:08.800 --> 00:10:12.690\nif I create a new VPC,\nit denies traffic by default.\n\n225\n00:10:12.690 --> 00:10:14.800\nAnd I gotta in specifically,\nthat was a little more secure,\n\n226\n00:10:14.800 --> 00:10:16.240\nbut it's usually what we want.\n\n227\n00:10:16.240 --> 00:10:18.680\nBut it is different behavior,\nif you delete your default VPC,\n\n228\n00:10:18.680 --> 00:10:21.110\nthere is actually one\nway to get recreated.\n\n229\n00:10:21.110 --> 00:10:23.090\nYou can email tech support,\n[LAUGH] they can create it,\n\n230\n00:10:23.090 --> 00:10:24.960\nthere's no way to recreate yourself.\n\n231\n00:10:24.960 --> 00:10:27.030\nBut you probably already have one.\n\n232\n00:10:27.030 --> 00:10:30.140\nAnd the same thing goes for\nyour subnets and your internet gateways.\n\n233\n00:10:30.140 --> 00:10:33.090\nAnd so when I look at my internet\ngateways here, I've got one and\n\n234\n00:10:33.090 --> 00:10:37.440\nit's attached to somebody,\nmore than likely, itprotv-default.\n\n235\n00:10:37.440 --> 00:10:39.970\nSo this is the gateway attached to it and\nit doesn't have a name, so\n\n236\n00:10:39.970 --> 00:10:44.480\nI might call this my itprotv-default-gw.\n\n237\n00:10:44.480 --> 00:10:47.842\nSo that's the gateway.\n\n238\n00:10:47.842 --> 00:10:52.730\nAnd I like to assign names to\nthese things because you're\n\n239\n00:10:52.730 --> 00:10:55.530\ngonna create a lot of these things\nthroughout the course of your account as\n\n240\n00:10:55.530 --> 00:10:57.280\nyou start building up more services.\n\n241\n00:10:57.280 --> 00:11:01.280\nAnd it gets easy to kinda lose\ntrack of what's tied to what.\n\n242\n00:11:01.280 --> 00:11:02.300\nThere's my default VPC.\n\n243\n00:11:02.300 --> 00:11:06.262\nI've got a default internet gateway,\nand if I go to subnets.\n\n244\n00:11:06.262 --> 00:11:09.893\nYou'll see where I've got not one but\nfour default subnets.\n\n245\n00:11:09.893 --> 00:11:12.750\nSee how I've got 172.31.0.0/16.\n\n246\n00:11:12.750 --> 00:11:20.300\nAnd that same subnet is spread\nacross these 4 different entries.\n\n247\n00:11:20.300 --> 00:11:23.320\nNow why do I have four\ncopies of the same subnet?\n\n248\n00:11:23.320 --> 00:11:27.590\nThe reason is they're being spread\nacross the four availability zones.\n\n249\n00:11:27.590 --> 00:11:29.310\nNow I know what you're thinking.\n\n250\n00:11:29.310 --> 00:11:34.040\nI specifically said a subnet can\nonly exist in one availability zone.\n\n251\n00:11:34.040 --> 00:11:39.930\nAnd here I've got 172.31.0.0/16 spread\nacross four availability zones.\n\n252\n00:11:39.930 --> 00:11:41.120\nWhy am I lying to you?\n\n253\n00:11:41.120 --> 00:11:41.960\nWell, I'm not.\n\n254\n00:11:41.960 --> 00:11:43.260\n>> Because your pathological?\n\n255\n00:11:43.260 --> 00:11:44.160\n[LAUGH]\n>> Because I\n\n256\n00:11:44.160 --> 00:11:45.660\nwant to get a lot of support tickets.\n\n257\n00:11:45.660 --> 00:11:48.190\nI don't know.\n[LAUGH] I like getting email.\n\n258\n00:11:48.190 --> 00:11:50.560\nThis is how I get people to talk to me.\n\n259\n00:11:50.560 --> 00:11:53.600\nSo, if I scroll over though,\nyou'll see what's going on,\n\n260\n00:11:53.600 --> 00:11:57.120\nis I've actually taken that network,\nI say I've done it, Amazon did it for me.\n\n261\n00:11:57.120 --> 00:11:58.610\nRight?\nThis was part of the account.\n\n262\n00:11:58.610 --> 00:12:00.350\nAnd they've broken it up.\n\n263\n00:12:00.350 --> 00:12:02.740\nInto four smaller networks, right?\n\n264\n00:12:02.740 --> 00:12:04.410\nThis network is a /16.\n\n265\n00:12:04.410 --> 00:12:09.800\nThat means 16 bits of the address\nis tied to the subnet.\n\n266\n00:12:09.800 --> 00:12:15.070\nAnd a 16 bit subnet can\nsupport 65,534 IP addresses.\n\n267\n00:12:15.070 --> 00:12:17.560\nWell, they've divided\nit up into four blocks,\n\n268\n00:12:17.560 --> 00:12:23.240\nfour blocks that have 4091\navailable IPs in them.\n\n269\n00:12:23.240 --> 00:12:26.800\nAnd if you look at that, if you add\nthat up, that only adds up to 17-18,000.\n\n270\n00:12:26.800 --> 00:12:30.690\nWhat happened to the other\n40,000 addresses?\n\n271\n00:12:30.690 --> 00:12:32.325\nWell, they're just not being used.\n\n272\n00:12:32.325 --> 00:12:35.370\nThey've divided them into these smaller\n/20 networks and laid them out here.\n\n273\n00:12:35.370 --> 00:12:39.030\nAnd left a room for me to continue\nto add if I need to add more.\n\n274\n00:12:39.030 --> 00:12:40.939\nBut each one of these is tied\nto an availability zone.\n\n275\n00:12:40.939 --> 00:12:46.981\nSo if I scroll over a little more,\nsee how I've got us-east 1e, 1a, 1c, 1d.\n\n276\n00:12:46.981 --> 00:12:50.119\nThat we've got each of\nthem kind of laid out and\n\n277\n00:12:50.119 --> 00:12:53.750\nnotice how this one has\nonly 4090 available IPs.\n\n278\n00:12:55.720 --> 00:12:56.930\nWhat happened to the 4091st?\n\n279\n00:12:56.930 --> 00:12:58.340\nWhere's that other one?\n\n280\n00:12:58.340 --> 00:13:00.810\nWell I probably already have\nan instance spun up, and\n\n281\n00:13:00.810 --> 00:13:02.780\nthe instance is taking one of those IPs.\n\n282\n00:13:02.780 --> 00:13:04.880\nAnd so, let me check that real quick.\n\n283\n00:13:04.880 --> 00:13:07.630\nLet me jump over to my instances and\nI bet that's the case.\n\n284\n00:13:07.630 --> 00:13:09.890\nSo if I go into EC2.\n\n285\n00:13:09.890 --> 00:13:11.590\nAnd I go in to my instances.\n\n286\n00:13:12.870 --> 00:13:14.250\nI don't have a running instance but\n\n287\n00:13:14.250 --> 00:13:17.460\neven in the instances stop it\nstill uses an internal IP.\n\n288\n00:13:17.460 --> 00:13:21.270\nAnd these are internal IPs, and so\nif I take a look at that instance.\n\n289\n00:13:21.270 --> 00:13:23.160\nAnd scroll into it's details.\n\n290\n00:13:24.160 --> 00:13:25.772\nYou can see it's got this private IP.\n\n291\n00:13:25.772 --> 00:13:29.090\n172.31 right, so it's kinda\nfalling into one of those ranges.\n\n292\n00:13:29.090 --> 00:13:31.110\nActually, that's a 172.31.5.\n\n293\n00:13:31.110 --> 00:13:33.330\nThat's not in the range, is it?\n\n294\n00:13:33.330 --> 00:13:35.740\nSo that IP might be taken up\nby a gateway or something.\n\n295\n00:13:35.740 --> 00:13:38.500\nSomething's using that IP\nis what's going on there.\n\n296\n00:13:38.500 --> 00:13:41.240\nSo you'll see those numbers\nshrink as you deploy them out.\n\n297\n00:13:41.240 --> 00:13:42.410\nSo that happens.\n\n298\n00:13:42.410 --> 00:13:45.580\nBut you can create more of these subnets\nas you need to to create the redundancy\n\n299\n00:13:45.580 --> 00:13:48.130\nand availability and\nyou'll get that coverage.\n\n300\n00:13:50.020 --> 00:13:50.990\nOh, you know what,\n\n301\n00:13:50.990 --> 00:13:54.650\nactually, 172.31.5 would fall\nin that network, and so that is.\n\n302\n00:13:54.650 --> 00:13:55.850\nThat's one instance that has it.\n\n303\n00:13:55.850 --> 00:13:58.290\nSo there we go, we tracked that one down.\n\n304\n00:13:58.290 --> 00:13:59.229\nMystery solved!\n\n305\n00:13:59.229 --> 00:14:00.700\n>> [LAUGH]\n>> CSI episode here.\n\n306\n00:14:00.700 --> 00:14:01.900\n>> Don, the great detective.\n\n307\n00:14:01.900 --> 00:14:03.940\n>> So\nthat's basically what a VPC is right?\n\n308\n00:14:03.940 --> 00:14:06.710\nWe create a virtual private cloud,\nand we divide it up into subnets.\n\n309\n00:14:06.710 --> 00:14:08.510\nAnd these subnets.\n\n310\n00:14:08.510 --> 00:14:10.470\nWe can then start to\nplace our servers in it.\n\n311\n00:14:10.470 --> 00:14:13.230\nAnd some of the subnets,\nwe might give internet access.\n\n312\n00:14:13.230 --> 00:14:14.640\nAnd some, we might not.\n\n313\n00:14:14.640 --> 00:14:17.280\nSome we might allow to talk to other VPCs.\n\n314\n00:14:17.280 --> 00:14:18.530\nSome we might not.\n\n315\n00:14:18.530 --> 00:14:20.970\nSome we might allow external\nweb traffic to come into.\n\n316\n00:14:20.970 --> 00:14:23.650\nOthers, we might not allow any\nexternal traffic to come into.\n\n317\n00:14:23.650 --> 00:14:25.670\nBut we have that granular control.\n\n318\n00:14:25.670 --> 00:14:30.450\nWe control what's going on in there, and\nI could create more than one subnet.\n\n319\n00:14:30.450 --> 00:14:32.320\nIn the same availability zone.\n\n320\n00:14:32.320 --> 00:14:34.860\nBecause I might wanna\nhave my web servers and\n\n321\n00:14:34.860 --> 00:14:39.510\nmy database servers in the same AZ\nto reduce latency between them.\n\n322\n00:14:39.510 --> 00:14:42.600\nThey'll get the fastest possible\nconnection if they're in the same AZ.\n\n323\n00:14:42.600 --> 00:14:45.830\nI still want other AZs for\nredundancy purposes.\n\n324\n00:14:45.830 --> 00:14:48.280\nBut getting the database,\nmy web servers in the same AZ for\n\n325\n00:14:48.280 --> 00:14:50.940\nthe primary stuff will\ngive me low latency and\n\n326\n00:14:50.940 --> 00:14:55.480\nthen I have other copies I fail over to in\nthe other AZs for that so, for redundancy.\n\n327\n00:14:55.480 --> 00:14:58.390\nSo that's kind of the idea\nbehind what we've got here.\n\n328\n00:14:58.390 --> 00:15:02.890\nAnd then one thing I wanna throw out\ncuz this may well turn up on the exam.\n\n329\n00:15:02.890 --> 00:15:08.350\nThat, when you configure a VPC,\nyou can make your VPCs talk to each other.\n\n330\n00:15:08.350 --> 00:15:11.100\nRight, so they can exchange\ninformation and you control that and\n\n331\n00:15:11.100 --> 00:15:13.230\nyou control it's access to the internet.\n\n332\n00:15:13.230 --> 00:15:18.850\nYou can actually make your VPC able\nto talk to other people's VPCs.\n\n333\n00:15:18.850 --> 00:15:21.920\nSo for example, I might be a contractor,\nand I might have workstations and\n\n334\n00:15:21.920 --> 00:15:23.930\nservers or whatever up in AWS.\n\n335\n00:15:23.930 --> 00:15:27.820\nAnd I start doing a contract for\nanother company, and so I say, all right.\n\n336\n00:15:27.820 --> 00:15:30.880\nCan you guys open up and\nlet my VPC talk to your VPC?\n\n337\n00:15:30.880 --> 00:15:34.890\nAmazon calls this VPC peering,\nand when you set up a VPC peer,\n\n338\n00:15:34.890 --> 00:15:38.480\nit lets your private cloud talk to\nanother customer's private cloud, and\n\n339\n00:15:38.480 --> 00:15:41.330\nyou basically both have to create\nsecurity rules that allow that.\n\n340\n00:15:41.330 --> 00:15:44.380\nAnd when both ends of creative, the\nsecurity roles now, you can exchange data.\n\n341\n00:15:44.380 --> 00:15:48.720\nSo, VPCs are not tied to just your little\nworld, you can have it communicate between\n\n342\n00:15:48.720 --> 00:15:52.730\ncompanies and when you do that, when\nyour VPC talks to another company's VPC.\n\n343\n00:15:52.730 --> 00:15:55.432\nIt's kinda bypassing your whole\ninternet parties isn't it?\n\n344\n00:15:55.432 --> 00:15:58.995\nYou're staying on Amazon's network,\nyou get amazing bandwidth and\n\n345\n00:15:58.995 --> 00:16:02.026\nreliability either a great\nconnection to pass through so.\n\n346\n00:16:02.026 --> 00:16:05.430\nIt's a neat system and\nit just takes a little bit of setting up.\n\n347\n00:16:05.430 --> 00:16:09.970\nSo, let's take a look at that set\nup process and kinda go through it.\n\n348\n00:16:09.970 --> 00:16:12.510\nSo, I don't want to just use the default,\nthat's no fun.\n\n349\n00:16:12.510 --> 00:16:15.510\nSo, I'm gonna go here into my\nvirtual private clouds and\n\n350\n00:16:15.510 --> 00:16:17.350\nI'm gonna create a new one now.\n\n351\n00:16:17.350 --> 00:16:19.410\nI could just hit start the VPC wizard.\n\n352\n00:16:19.410 --> 00:16:23.490\nAnd it's got a really simple wizard where\nyou can create VPC's with public and\n\n353\n00:16:23.490 --> 00:16:25.130\nprivate subnets or whatever.\n\n354\n00:16:25.130 --> 00:16:26.760\nSo, you've got control there.\n\n355\n00:16:26.760 --> 00:16:29.990\nBut on the exam they want you to know\nhow to do all of the individual pieces.\n\n356\n00:16:29.990 --> 00:16:31.430\nSo, I'm gonna skip that wizard.\n\n357\n00:16:31.430 --> 00:16:32.780\nAnd we'll do it the hard way.\n\n358\n00:16:32.780 --> 00:16:33.420\nRight?\n\n359\n00:16:33.420 --> 00:16:35.800\nSo, the hard way, it's not that hard.\n\n360\n00:16:35.800 --> 00:16:36.960\nIt's just a lot of steps.\n\n361\n00:16:36.960 --> 00:16:38.680\nThe first thing I need to do\nis I need to create a VPC.\n\n362\n00:16:38.680 --> 00:16:42.710\nSo, I'm gonna go down here to your\nVPCs and I'll create a new one.\n\n363\n00:16:42.710 --> 00:16:46.140\nAnd let's say this is gonna be a new web\napplication that I'm supporting, right.\n\n364\n00:16:46.140 --> 00:16:49.200\nSo, I'm gonna call this my webapp1-vpc,\nright?\n\n365\n00:16:49.200 --> 00:16:51.660\nSo, it's a bit of virtual private club for\n\n366\n00:16:51.660 --> 00:16:55.810\nwebapp1 and\nI need to give it a CIDR block.\n\n367\n00:16:55.810 --> 00:17:00.090\nNow CIDR, that is for Classless Inter\nDomain Routing and it's a network,\n\n368\n00:17:00.090 --> 00:17:01.650\nit's an IP address term, IPV4.\n\n369\n00:17:01.650 --> 00:17:05.910\nAnd with IPV4, you have a ranges\nof IP address that you can use and\n\n370\n00:17:05.910 --> 00:17:07.920\nI need to pick the range that I wanna use.\n\n371\n00:17:07.920 --> 00:17:12.580\nSo, I'm gonna use 172.16.0.0 or you know\nwhat let's pick something a lot easier.\n\n372\n00:17:12.580 --> 00:17:18.140\nI'll just use,\nhow about 10.10 Now let's see,\n\n373\n00:17:18.140 --> 00:17:20.750\nI'm trying to think of something nice and\neasy.\n\n374\n00:17:20.750 --> 00:17:23.240\nThere's a few ranges\nthat you supposed to use.\n\n375\n00:17:23.240 --> 00:17:28.730\nYou supposed to use private ranges and see\nother recommending like 10.0.0.0 up here.\n\n376\n00:17:28.730 --> 00:17:33.180\nSo there's 10 dot whatever, there's\n172.16 all the way through 172.31 and\n\n377\n00:17:33.180 --> 00:17:38.200\nthen there's 192.168 dot whatever that you\ncan pick from and so I might choose to do-\n\n378\n00:17:38.200 --> 00:17:40.445\n>> Tenths probably, it's easiest to type.\n\n379\n00:17:40.445 --> 00:17:41.680\n[LAUGH].\n>> Ten is the easiest to type,\n\n380\n00:17:41.680 --> 00:17:44.510\nthe problem with it is, is really big and\n\n381\n00:17:44.510 --> 00:17:47.230\nyou run this potential of overlapping\nwith your other applications.\n\n382\n00:17:47.230 --> 00:17:50.020\nYou always wanna make sure there's really\nroom and that's why I normally used\n\n383\n00:17:50.020 --> 00:17:54.890\nthe 172s cuz you can do like 172.16 for\none set of apps and 172 dot 17 for\n\n384\n00:17:54.890 --> 00:17:59.420\nanother, once eventually 18, and\neach one has 65,000 IPs in it.\n\n385\n00:17:59.420 --> 00:18:02.890\nIt can get really really large,\nso that's users right to go.\n\n386\n00:18:02.890 --> 00:18:05.770\nThe ten dot, we've got millions of IPs and\n\n387\n00:18:05.770 --> 00:18:10.455\nit's very very large Can absolutely\nuse it or any sub-variation of it but,\n\n388\n00:18:10.455 --> 00:18:15.915\nI guess 172.16, I also do that\nzero dot zero slash 16, right.\n\n389\n00:18:15.915 --> 00:18:18.995\nSo, basically every computer\nthat's a part of this VPC,\n\n390\n00:18:18.995 --> 00:18:23.635\nevery instance is gonna start with 172.16\nand end with something else, right?\n\n391\n00:18:23.635 --> 00:18:26.665\nNow, on the tenancy side,\nthis is important,\n\n392\n00:18:26.665 --> 00:18:27.785\nthis we will turn up on the exam.\n\n393\n00:18:27.785 --> 00:18:30.196\nI have to pick between default and\ndedicated.\n\n394\n00:18:30.196 --> 00:18:35.660\nAll right, the default is that\nwhen you deploy your instances,\n\n395\n00:18:35.660 --> 00:18:39.440\nit's going on hardware on Amazon's data\ncenter that's shared with other customers.\n\n396\n00:18:39.440 --> 00:18:42.290\nSo, you might be running right\nbeside a direct competitor of yours.\n\n397\n00:18:42.290 --> 00:18:43.250\nBut you never see that, right?\n\n398\n00:18:43.250 --> 00:18:43.830\nIt's all hidden.\n\n399\n00:18:43.830 --> 00:18:45.840\nAnd that's where Amazon\nreally gets the cost savings,\n\n400\n00:18:45.840 --> 00:18:48.400\nbecause they're using their full hardware.\n\n401\n00:18:48.400 --> 00:18:52.760\nBut if I choose dedicated This VPC is\ngonna get created on a set of servers in\n\n402\n00:18:52.760 --> 00:18:58.330\nAmazon's data center and only my staff\nwill go on it, no other customers.\n\n403\n00:18:58.330 --> 00:19:00.070\nNow, that sounds great but\n\n404\n00:19:00.070 --> 00:19:03.080\nit's really expensive,\nit doesn't really say it right here.\n\n405\n00:19:03.080 --> 00:19:07.890\nBut as soon as I do that, I'm effectively\nreserving all the CPU, all the memory,\n\n406\n00:19:07.890 --> 00:19:09.520\nall the network bandwidth For\n\n407\n00:19:09.520 --> 00:19:13.230\nthat piece of hardware that I'm on and\nit's really expensive.\n\n408\n00:19:13.230 --> 00:19:16.460\nIf I were to just spin up one\nT2-micro on it, I'm paying for\n\n409\n00:19:16.460 --> 00:19:19.370\nthe whole physical box and\nit's really expensive.\n\n410\n00:19:19.370 --> 00:19:23.630\nSo, you really gotta need that true\ndedicated service before you do this one.\n\n411\n00:19:23.630 --> 00:19:25.310\nNormally the default is\nexactly what we want.\n\n412\n00:19:25.310 --> 00:19:27.650\nSo, I'm gonna stick with that and\nI'll create it.\n\n413\n00:19:27.650 --> 00:19:28.360\nAll right.\n\n414\n00:19:28.360 --> 00:19:31.820\nNow, I created it with just one subnet.\n\n415\n00:19:31.820 --> 00:19:34.990\nThe next step is I need to take\nthat network that we just made,\n\n416\n00:19:34.990 --> 00:19:39.810\nthis CIDR block, and divide it up\ninto smaller subnet's that will\n\n417\n00:19:39.810 --> 00:19:42.510\nactually reside in the availability zones,\nokay.\n\n418\n00:19:42.510 --> 00:19:44.270\nAnd I can create as many\nof those as I want.\n\n419\n00:19:44.270 --> 00:19:48.170\nBut, each smaller subnet I make is\ngonna be tied to one availability zone.\n\n420\n00:19:48.170 --> 00:19:50.760\nAnd so that's where I got to\ndecide how I wanna go about that.\n\n421\n00:19:50.760 --> 00:19:52.710\nI'm gonna jump over here to subnets.\n\n422\n00:19:52.710 --> 00:19:56.880\nAnd let say that I got web servers and\ndatabase servers.\n\n423\n00:19:56.880 --> 00:20:01.480\nAnd I want to be in separate subnets so\nI can control the access that they have.\n\n424\n00:20:01.480 --> 00:20:02.080\nRight.\n\n425\n00:20:02.080 --> 00:20:07.625\nSo, I'm gonna come in here and create a\nsubnet, and my first subnet I call webapp1\n\n426\n00:20:07.625 --> 00:20:10.800\n-webservers, right, so\n\n427\n00:20:10.800 --> 00:20:14.690\nthis is where my webservers are gonna be,\nor I can just call it webapp1-web.\n\n428\n00:20:14.690 --> 00:20:15.390\nThat'll work.\n\n429\n00:20:15.390 --> 00:20:18.660\nSo, this will be where my\nweb servers reside, and\n\n430\n00:20:18.660 --> 00:20:24.150\nI can pick the VPC it's gonna be a part of\nand I'm gonna add it to the webapp1-vpc.\n\n431\n00:20:24.150 --> 00:20:26.890\nAnd then the availability zone,\nI can pick what it's tied to.\n\n432\n00:20:26.890 --> 00:20:29.630\nNow, you can leave it to no\npreference if you don't really care.\n\n433\n00:20:29.630 --> 00:20:32.290\nBut remember I said I want my\ndatabases and my web servers to be in\n\n434\n00:20:32.290 --> 00:20:34.980\nthe same availability zone for\nthe best performance.\n\n435\n00:20:34.980 --> 00:20:37.770\nSo, I'm going to pick US1A so\nI can remember that one.\n\n436\n00:20:37.770 --> 00:20:40.310\nAnd then the CIDR block.\n\n437\n00:20:40.310 --> 00:20:43.040\nNow, why do I have to give it another\nCIDR block if I already picked one?\n\n438\n00:20:43.040 --> 00:20:45.390\nThis is the smaller network.\n\n439\n00:20:45.390 --> 00:20:50.280\nAnd so what I'm gonna do is I'm gonna\n\n440\n00:20:50.280 --> 00:20:55.014\nsay that my web servers\nare in 172.16.0.0/24.\n\n441\n00:20:55.014 --> 00:20:56.610\nA /24 network only has 254 usable IPs.\n\n442\n00:20:56.610 --> 00:21:00.050\nThis is a very small network.\n\n443\n00:21:00.050 --> 00:21:02.320\nIt basically is 172.116.0.1.\n\n444\n00:21:02.320 --> 00:21:03.900\nAll the way through 172.16.0.254, right.\n\n445\n00:21:03.900 --> 00:21:08.240\nAnd then,\nI'll do my database servers and then,\n\n446\n00:21:08.240 --> 00:21:12.060\nanother one that would be\n172.16.1 all the way to 254 so,\n\n447\n00:21:12.060 --> 00:21:16.280\nyou know, it's kinda picking up\nthose ranges and dividing this up.\n\n448\n00:21:16.280 --> 00:21:18.530\nAnd so,\nI'm gonna create that one and then,\n\n449\n00:21:18.530 --> 00:21:21.960\nI'll create another one right\nafterwards from my databases.\n\n450\n00:21:21.960 --> 00:21:25.960\nNow, if I want redundancy,\nthese are all the same availability zone.\n\n451\n00:21:25.960 --> 00:21:27.320\nSo, I'm not going to get it am I?\n\n452\n00:21:27.320 --> 00:21:29.070\nSo, I probably want to create some more,\nright?\n\n453\n00:21:29.070 --> 00:21:33.660\nSo, as I go through I might want to\ncome in and create a webapp1-web.\n\n454\n00:21:33.660 --> 00:21:37.600\nYou know maybe I'll call this one,\nlike, 1D.\n\n455\n00:21:38.860 --> 00:21:41.880\nAnd I'll set that web at VPC.\n\n456\n00:21:41.880 --> 00:21:47.410\nAnd for the availabilities then\nI'll put this one in 1d instead.\n\n457\n00:21:47.410 --> 00:21:52.594\nRight?\nAnd I might make this one 172.16.2.0/24.\n\n458\n00:21:52.594 --> 00:21:55.530\nSo, just another kind of range in there.\n\n459\n00:21:55.530 --> 00:21:56.750\nAs I create that.\n\n460\n00:21:56.750 --> 00:21:59.840\nAnd I need to change my other one so\nit says like web 1A so\n\n461\n00:21:59.840 --> 00:22:01.770\nI can remember which\navailability zone they're in.\n\n462\n00:22:01.770 --> 00:22:05.170\nWe normally see it but I like to put it in\na name so it's easier for me to remember.\n\n463\n00:22:05.170 --> 00:22:07.610\nSo, I'm going to come and\nedit this other one and\n\n464\n00:22:07.610 --> 00:22:08.910\nset that to just stick with 1A at the end.\n\n465\n00:22:08.910 --> 00:22:09.800\nAll right.\n\n466\n00:22:09.800 --> 00:22:12.670\nAnd then I'm going to create one for\nmy databases too.\n\n467\n00:22:12.670 --> 00:22:20.520\nSo, I'll call this one Webapp1- db1a and\nI'll pick that webapp VPC,\n\n468\n00:22:20.520 --> 00:22:25.060\nI'll put it in 1a, and I'll give this one,\n172.16.1.0/24, all right.\n\n469\n00:22:25.060 --> 00:22:32.310\nSo, when I'm done, I'll have three VPCs,\ntwo for webservers.\n\n470\n00:22:32.310 --> 00:22:33.410\nAnd one for databases.\n\n471\n00:22:34.470 --> 00:22:38.140\nAnd the web server and\ndatabase ones,the first ones I creates,\n\n472\n00:22:38.140 --> 00:22:41.270\nare in the same availability zone.\n\n473\n00:22:41.270 --> 00:22:44.340\nI'll sort these by name, there we go.\n\n474\n00:22:44.340 --> 00:22:48.280\nSo, we can see the two web servers there,\nthey're in different availability zones,\n\n475\n00:22:48.280 --> 00:22:50.360\nand this database one here\nis kinda in it's zone.\n\n476\n00:22:50.360 --> 00:22:53.030\nI can add another one for\ndatabases too if I want to continue on and\n\n477\n00:22:53.030 --> 00:22:55.510\nset up multi AZ databases.\n\n478\n00:22:55.510 --> 00:23:00.880\nWhere I want my primary to be in 1a, and\nthen I want the read replica to be in 1d,\n\n479\n00:23:00.880 --> 00:23:02.790\nright, so I could come in and\nadd another one.\n\n480\n00:23:02.790 --> 00:23:04.150\nYou just keep adding more and\n\n481\n00:23:04.150 --> 00:23:07.130\nmore subnets, spreading them\nacross these availability zones.\n\n482\n00:23:07.130 --> 00:23:11.030\nBut it's, a subnet can only exist in 1az,\nI can't take one subnet and\n\n483\n00:23:11.030 --> 00:23:13.680\nspread it across the az's I have\nto create more than one subnet.\n\n484\n00:23:13.680 --> 00:23:14.519\nSo that's what I'm doing here.\n\n485\n00:23:16.060 --> 00:23:19.500\nFrom now on,\nwhenever I spin up an instance,\n\n486\n00:23:19.500 --> 00:23:22.450\nI can choose to throw it into one\nof these availability zones, and\n\n487\n00:23:22.450 --> 00:23:24.000\nthat's the network that\nit's going to reside on.\n\n488\n00:23:24.000 --> 00:23:26.460\nIt's going to exist right in there, and\n\n489\n00:23:26.460 --> 00:23:29.910\nit'll have access to the other resources\nthat are in that same AZ with it.\n\n490\n00:23:29.910 --> 00:23:32.950\nSo, I can continue to throw in there.\n\n491\n00:23:32.950 --> 00:23:36.860\nYou can have,\nI've created one VPC here in this region.\n\n492\n00:23:36.860 --> 00:23:40.710\nYou can have five VPCs in\nthe same region if you want.\n\n493\n00:23:40.710 --> 00:23:42.160\nThat's Amazon's limit.\n\n494\n00:23:42.160 --> 00:23:43.920\nYou can actually email their support and\nget it to go higher.\n\n495\n00:23:43.920 --> 00:23:46.380\nBut by default, I can create five VPCs.\n\n496\n00:23:46.380 --> 00:23:51.394\nBut within a VPC, I can create\nany number of subnets like this.\n\n497\n00:23:51.394 --> 00:23:55.598\nAnd so you can divide these up any number\nof ways and create really big networks,\n\n498\n00:23:55.598 --> 00:23:58.925\nreally small networks,\nhave just a handful, have hundreds or\n\n499\n00:23:58.925 --> 00:24:00.008\nthousands of them.\n\n500\n00:24:00.008 --> 00:24:02.167\nAnd it's kind of up to you how you\nwanna divide it up inside of here.\n\n501\n00:24:02.167 --> 00:24:05.306\nSo I don't know anybody that's\never needed more than five VPCs\n\n502\n00:24:05.306 --> 00:24:06.555\nin a particular region.\n\n503\n00:24:06.555 --> 00:24:08.448\nMost people just use one VPC, and\n\n504\n00:24:08.448 --> 00:24:11.770\nthen in that one VPC they\nthen divide it into subnets.\n\n505\n00:24:11.770 --> 00:24:14.170\nThe time where you see an exception\nto that is when we're gonna peer with\n\n506\n00:24:14.170 --> 00:24:15.260\nanother customer.\n\n507\n00:24:15.260 --> 00:24:19.670\nThen you might create a dedicated VPC just\nfor that peering arrangement, so that\n\n508\n00:24:19.670 --> 00:24:23.150\nthe other customer has access to some of\nyour systems but not all of your systems.\n\n509\n00:24:23.150 --> 00:24:24.940\nYou kind of control and\nfilter based on that.\n\n510\n00:24:24.940 --> 00:24:29.980\nSo, you get a little bit of flexibility\nthere with what you want to handle and\n\n511\n00:24:29.980 --> 00:24:30.680\nwhat you want to create.\n\n512\n00:24:32.060 --> 00:24:36.700\nNow when I create these VPCs,\nthey get put in place, they have a subnet.\n\n513\n00:24:36.700 --> 00:24:38.740\nAmazon is actually creating\na routing table for them.\n\n514\n00:24:38.740 --> 00:24:41.580\nOver here on the left side you see\nhow I've got this Route Tables?\n\n515\n00:24:41.580 --> 00:24:43.240\nAnd I can go to route tables.\n\n516\n00:24:43.240 --> 00:24:48.560\nAnd I can see where it's\ngot 172.16.0.0 right there.\n\n517\n00:24:48.560 --> 00:24:51.580\nThat's the subnet that we made\nthat we attached the VPC.\n\n518\n00:24:51.580 --> 00:24:55.560\nAnd if I click on it right down here,\nI can see the routes that are in it.\n\n519\n00:24:55.560 --> 00:24:58.164\nAnd it just has one route.\n\n520\n00:24:58.164 --> 00:25:02.967\nAnd the route is 172.16.0.0/16\nwhich means any of the subnets that\n\n521\n00:25:02.967 --> 00:25:06.860\nare inside of this VPC are gonna\nbe able to see each other, right?\n\n522\n00:25:06.860 --> 00:25:08.300\nSo they can see each other.\n\n523\n00:25:08.300 --> 00:25:09.980\nWe might be restricting their access.\n\n524\n00:25:09.980 --> 00:25:12.490\nWe'll see that with our\nsecurity ACLs later on.\n\n525\n00:25:12.490 --> 00:25:16.950\nBut at a minimum they see each other,\nthey can try and communicate.\n\n526\n00:25:16.950 --> 00:25:20.960\nAnd if I go to subnet associations,\nhere's where I can start to see\n\n527\n00:25:20.960 --> 00:25:23.750\nwhether any subnets are associated\nwith this routing table.\n\n528\n00:25:23.750 --> 00:25:25.180\nAnd notice how none of them are?\n\n529\n00:25:25.180 --> 00:25:25.790\nRight?\n\n530\n00:25:25.790 --> 00:25:27.690\nNone of them are actually\nattached to this routing table.\n\n531\n00:25:27.690 --> 00:25:30.340\nIt made the routing table,\nit's in the right range, but\n\n532\n00:25:30.340 --> 00:25:31.480\nthe subnets aren't attached to it.\n\n533\n00:25:31.480 --> 00:25:33.760\nAnd so that means they're\nnot taking advantage of it.\n\n534\n00:25:33.760 --> 00:25:38.830\nSo as that stands right now, each of\nthese subnets are actually isolated.\n\n535\n00:25:38.830 --> 00:25:42.500\nThey could try and communicate but their\nnot properly attached, so there's a little\n\n536\n00:25:42.500 --> 00:25:45.130\nbit more leg work we have to do to\nget this kind of straightened out.\n\n537\n00:25:45.130 --> 00:25:50.420\nAnd so one of the next things that I would\ndo is go in and attach these subnets\n\n538\n00:25:50.420 --> 00:25:53.160\nto this routing table unless I wanted\nthem all to have separate routing tables.\n\n539\n00:25:53.160 --> 00:25:56.580\nThere are times where you might want to\nhave one subnet that gets a specifically\n\n540\n00:25:56.580 --> 00:25:59.860\ndifferent set of routes than the others\nand so you could go through and do that.\n\n541\n00:25:59.860 --> 00:26:07.420\nBut I'm just going to associate all of\nmy subnets with this one routing table.\n\n542\n00:26:07.420 --> 00:26:10.280\nNow once that's done,\nI can start to determine\n\n543\n00:26:10.280 --> 00:26:13.040\nthings like whether I want them to\nhave internet access or not, and\n\n544\n00:26:13.040 --> 00:26:15.470\nin fact, I might have different\nbehaviors that I want.\n\n545\n00:26:15.470 --> 00:26:20.380\nSo for example,\nI had this one routing table but honestly,\n\n546\n00:26:20.380 --> 00:26:24.060\nI might not want my database servers to\nbe able to get out to the internet and\n\n547\n00:26:24.060 --> 00:26:26.220\nI might want my web servers to\nbe able to get to the internet.\n\n548\n00:26:26.220 --> 00:26:30.020\nSo that would be a scenario where I\nneed different route associations and so\n\n549\n00:26:30.020 --> 00:26:31.600\nlet me take the database servers back out.\n\n550\n00:26:31.600 --> 00:26:32.589\nAnd it's easy enough, right?\n\n551\n00:26:32.589 --> 00:26:36.100\nYou just go in and\nuncheck them, save that.\n\n552\n00:26:36.100 --> 00:26:37.200\nIt's now it's gonna take it back out,\n\n553\n00:26:37.200 --> 00:26:38.910\nI might want that to have\nit's own routing table and\n\n554\n00:26:38.910 --> 00:26:40.480\nwe'll see as we start to\ncreate some gateways.\n\n555\n00:26:41.720 --> 00:26:45.050\nSo basically at this point,\nI've created them.\n\n556\n00:26:45.050 --> 00:26:46.660\nThey're up and they're going.\n\n557\n00:26:46.660 --> 00:26:48.910\nI stuck my web apps here\ninto the routing table.\n\n558\n00:26:48.910 --> 00:26:52.210\nThey're able to see each other now,\nbut that's about it.\n\n559\n00:26:52.210 --> 00:26:53.270\nThere's not much else.\n\n560\n00:26:53.270 --> 00:26:54.940\nSee, we know that one network is local,\n\n561\n00:26:54.940 --> 00:26:58.180\nbut we don't necessarily know\nabout how to get to the Internet.\n\n562\n00:26:58.180 --> 00:27:03.100\nSo if I want Internet connectivity,\nthe last piece that I need is a gateway.\n\n563\n00:27:03.100 --> 00:27:05.570\nI've gotta give it a gateway so\nit knows how to get out to the internet.\n\n564\n00:27:05.570 --> 00:27:08.754\nSo if I go over here to my internet\ngateways, I've got the default one for\n\n565\n00:27:08.754 --> 00:27:09.380\nmy default VPC.\n\n566\n00:27:09.380 --> 00:27:10.590\nBut this is an all new VPC.\n\n567\n00:27:10.590 --> 00:27:13.900\nSo I'm gonna create a new gateway and\nI'll give it a name.\n\n568\n00:27:13.900 --> 00:27:17.851\nAnd I'll just call this\nlike webapp1-web-gw.\n\n569\n00:27:17.851 --> 00:27:18.889\nSo this is gonna be my gateway.\n\n570\n00:27:19.980 --> 00:27:23.660\nAnd when I create it, what it's\nbasically doing is making a router.\n\n571\n00:27:23.660 --> 00:27:26.719\nSo this is a router that is spinning up,\n\n572\n00:27:26.719 --> 00:27:30.816\nthat's going to allow\ntraffic on my 172.16.\n\n573\n00:27:30.816 --> 00:27:33.356\nI think it was .0 is the network\nI used for the web servers.\n\n574\n00:27:33.356 --> 00:27:36.170\nIt's going to allow them\nto get out to the internet.\n\n575\n00:27:36.170 --> 00:27:37.860\nRight.\nAnd if they get assigned to public IP,\n\n576\n00:27:37.860 --> 00:27:39.330\nthen they're gonna go out with that.\n\n577\n00:27:39.330 --> 00:27:43.260\nSo, [COUGH] basically I just need\nto take this one and attach it.\n\n578\n00:27:43.260 --> 00:27:46.550\nNow see when I added it,\nit came up as detached, right.\n\n579\n00:27:46.550 --> 00:27:48.320\nI'm not quite sure why Amazon doesn't ask\n\n580\n00:27:48.320 --> 00:27:49.920\nyou to attach it during the wizard,\nbut they don't.\n\n581\n00:27:49.920 --> 00:27:52.913\nSo they create it and\nthen you've got to attach it to a VPC.\n\n582\n00:27:52.913 --> 00:27:56.460\nSo I'm gonna go ahead and\ndo that and I'll pick my web app.\n\n583\n00:27:56.460 --> 00:27:58.510\nAnd see how I can't pick the default one?\n\n584\n00:27:58.510 --> 00:28:01.490\nYou can only have one gateway per VPC.\n\n585\n00:28:01.490 --> 00:28:05.460\nMy default VPC already has a gateway so\nit's not on the list.\n\n586\n00:28:05.460 --> 00:28:06.380\nWebapp1 is the only one.\n\n587\n00:28:06.380 --> 00:28:07.090\nRight.\n\n588\n00:28:07.090 --> 00:28:08.170\nI'm gonna go ahead and\n\n589\n00:28:08.170 --> 00:28:13.500\nattach that and now, I've got\na router attached to that network.\n\n590\n00:28:13.500 --> 00:28:16.740\nAnd if I adjust this a little bit,\nthere it is, so\n\n591\n00:28:16.740 --> 00:28:22.311\nhere's this webapp1 web gateway and it's\nattached to the 172.16.0.0/16 network.\n\n592\n00:28:23.570 --> 00:28:25.790\nAnd now if I want people\nto have internet access,\n\n593\n00:28:25.790 --> 00:28:29.760\nall I've got to do is set up a default\nroute, for them to go through this\n\n594\n00:28:29.760 --> 00:28:32.390\nrouter on the way out to the internet,\nand that's gonna give them that access.\n\n595\n00:28:32.390 --> 00:28:37.440\nSo I'm gonna go back to my routing table,\nand in the routing table I'm gonna take\n\n596\n00:28:37.440 --> 00:28:42.750\nthat routing table for our web app VPC,\nand I'm gonna go down here to Routes and\n\n597\n00:28:42.750 --> 00:28:45.980\nI'm gonna edit it, and I need to put\nin what's called the default route.\n\n598\n00:28:45.980 --> 00:28:49.060\nAnd what a default route is is it says\nif you want to get to a network that's\n\n599\n00:28:49.060 --> 00:28:52.090\nnot in this list, who do you go to?\n\n600\n00:28:52.090 --> 00:28:55.630\nThere are tens of thousands of\nnetworks out there on the internet.\n\n601\n00:28:55.630 --> 00:28:58.310\nI'm not gonna enter everyone of them\nin here and tell it how to get there.\n\n602\n00:28:58.310 --> 00:29:02.221\nSo I need a catch all route that says\nanything that's not in this list,\n\n603\n00:29:02.221 --> 00:29:03.970\nsend to that router.\n\n604\n00:29:03.970 --> 00:29:08.975\nSo when I choose to add another route,\nthe catch-all network, is all zeros.\n\n605\n00:29:08.975 --> 00:29:12.555\n0.0.0.0/0, all right.\n\n606\n00:29:12.555 --> 00:29:15.580\nIt's kinda weird to write that but\nthat's a catch-all.\n\n607\n00:29:15.580 --> 00:29:20.370\nThat means every other network\nthat's not in this list.\n\n608\n00:29:20.370 --> 00:29:23.600\nAnd then where I wanna send it,\nnotice the moment I click on it,\n\n609\n00:29:23.600 --> 00:29:25.510\nit starts listing my gateways.\n\n610\n00:29:25.510 --> 00:29:27.270\nAnd you're only gonna\nhave one gateway here, so\n\n611\n00:29:27.270 --> 00:29:30.610\nyou'll just choose that one,\nthat's the gateway that we just created.\n\n612\n00:29:30.610 --> 00:29:36.180\nAnd I can save that, and now the VPCs\nwill be able to see each other,\n\n613\n00:29:36.180 --> 00:29:38.870\nwell, the VPCs that I attached\nto this routing table.\n\n614\n00:29:38.870 --> 00:29:42.778\nSo my two web subnets that I made.\n\n615\n00:29:42.778 --> 00:29:45.420\nThose subnets will be able\nto see each other, and,\n\n616\n00:29:45.420 --> 00:29:49.420\nthey'll be able to hit this gateway and\nget out to the internet.\n\n617\n00:29:49.420 --> 00:29:53.300\nAnd as long as they have a public IP\nattached to them, they're gonna be able to\n\n618\n00:29:53.300 --> 00:29:56.260\nget out to the internet and people in\nthe internet will be able to get to them,\n\n619\n00:29:56.260 --> 00:29:58.820\nassuming they haven't blocked it\nwith security groups and so on.\n\n620\n00:29:58.820 --> 00:30:02.350\nBut they're now internet enabled and\nready to rock.\n\n621\n00:30:02.350 --> 00:30:02.900\n>> Awesome Don.\n\n622\n00:30:02.900 --> 00:30:05.090\nObviously the stars have\nall aligned finally,\n\n623\n00:30:05.090 --> 00:30:07.830\nwe're able to get to the internet,\nsomething that most people.\n\n624\n00:30:07.830 --> 00:30:10.170\nThat's exactly what they're looking for\nbut\n\n625\n00:30:10.170 --> 00:30:12.910\nI got a feeling there's\na whole lot more to this.\n\n626\n00:30:12.910 --> 00:30:16.880\nWe have just scratched the surface on\nthe networking inside these VPCs, but\n\n627\n00:30:16.880 --> 00:30:21.850\nlooking at our clock, we are well out of\ntime and I know you got plenty more to\n\n628\n00:30:21.850 --> 00:30:25.500\ntalk about so,\nlooks like a part two is in store for us.\n\n629\n00:30:25.500 --> 00:30:27.800\n>> I think so, you know,\nwe've given these people internet access.\n\n630\n00:30:27.800 --> 00:30:30.350\nBut there's other types of internet\naccess we might want to do,\n\n631\n00:30:30.350 --> 00:30:31.120\nwe need to see that and\n\n632\n00:30:31.120 --> 00:30:33.710\nthere's a few other things that show up on\nthe exam that I definitely want to cover.\n\n633\n00:30:33.710 --> 00:30:35.290\nSo let's break that up\ninto another episode.\n\n634\n00:30:35.290 --> 00:30:37.190\n>> Yes definitely, so\nI look forward to part two.\n\n635\n00:30:37.190 --> 00:30:38.500\nHopefully you do as well.\n\n636\n00:30:38.500 --> 00:30:40.960\nAs for this episode,\nsigning off for ITProTv.\n\n637\n00:30:40.960 --> 00:30:42.760\nI've been your host Daniel Lowry.\n\n638\n00:30:42.760 --> 00:30:43.390\n>> And I'm Don Pizette.\n\n639\n00:30:43.390 --> 00:30:45.014\n>> And we'll see you next time\n\n640\n00:30:45.014 --> 00:30:51.680\n[MUSIC]\n\n",
          "vimeoId": "150834853"
        },
        {
          "description": "In this episode, Don and Daniel pick right back up with Virtual Private Clouds; specifically getting them internet connectivity. Then they explain how employ NAT to allow internet access while blocking outside exposure. They also show you other security measures like using network ACLs. Finally they touch upon AWS Direct Connect which allows you to connect on-premises networks to a VPC.",
          "length": "2089",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/amazon-acsa/amazon-acsa-0-0-2-virtual_private_clouds_pt2-121815-1.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/amazon-acsa/amazon-acsa-0-0-2-virtual_private_clouds_pt2-121815-1-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/amazon-acsa/amazon-acsa-0-0-2-virtual_private_clouds_pt2-121815-1-sm.jpg",
          "title": "Virtual Private Cloud Part 2",
          "transcript": "WEBVTT\n\n1\n00:00:00.945 --> 00:00:10.945\n[MUSIC]\n\n2\n00:00:12.170 --> 00:00:17.350\nAll right, greetings everyone and welcome\nto another exciting episode of ITProTV.\n\n3\n00:00:17.350 --> 00:00:18.620\nI'm your host, Daniel Lowrie.\n\n4\n00:00:18.620 --> 00:00:23.310\nAnd in today's episode we're continuing\non at AWS Certified SysOps Admin.\n\n5\n00:00:23.310 --> 00:00:23.980\nAnd joining me yet\n\n6\n00:00:23.980 --> 00:00:27.790\nagain one more time today is none other\nthan my good friend, Mr. Don Pezet.\n\n7\n00:00:27.790 --> 00:00:28.700\nDon, welcome to the show.\n\n8\n00:00:28.700 --> 00:00:29.580\nOr welcome back to the show.\n\n9\n00:00:29.580 --> 00:00:31.620\n>> Welcome back, thanks for\nhaving me, Daniel.\n\n10\n00:00:31.620 --> 00:00:35.030\nYou know, we're gonna pick back up\nwith virtual private clouds and\n\n11\n00:00:35.030 --> 00:00:36.210\nworking with them, getting them created.\n\n12\n00:00:36.210 --> 00:00:39.060\nWe kinda left off hopefully,\nyou watched the first part or\n\n13\n00:00:39.060 --> 00:00:41.350\notherwise you will be confused while\nwe're starting up in the middle.\n\n14\n00:00:41.350 --> 00:00:45.350\nBut we had created some subnets\nthat were tied to some AZ's.\n\n15\n00:00:45.350 --> 00:00:49.620\nThey were inside one VPC, I'm gonna\nuse as many acronyms as I can here.\n\n16\n00:00:49.620 --> 00:00:51.550\nAnd so, we had that VPC set up.\n\n17\n00:00:51.550 --> 00:00:52.830\nWe created some web server.\n\n18\n00:00:52.830 --> 00:00:55.810\nWe created some database server subnets.\n\n19\n00:00:55.810 --> 00:00:57.370\nAnd kind of got those put into place.\n\n20\n00:00:57.370 --> 00:01:01.894\nAnd the last thing that we did is\nwe took an internet gateway and\n\n21\n00:01:01.894 --> 00:01:06.337\nattached it to the subnets that\nwere part of our web servers.\n\n22\n00:01:06.337 --> 00:01:09.920\nNow once we did that, technically\nthose subnets have internet access.\n\n23\n00:01:09.920 --> 00:01:13.230\nBut I actually left out one step\nthat was kind of important.\n\n24\n00:01:13.230 --> 00:01:15.380\nI didn't notice it until during the break.\n\n25\n00:01:15.380 --> 00:01:17.960\nIn between the show I went ahead and\nspun up a few instances,\n\n26\n00:01:17.960 --> 00:01:19.950\njust a few servers to chuck them in there.\n\n27\n00:01:19.950 --> 00:01:21.780\nAnd I noticed what I forgot real quick.\n\n28\n00:01:21.780 --> 00:01:22.940\nSo let me show you.\n\n29\n00:01:22.940 --> 00:01:27.058\nSo here on my console,\nif I go down to VPCs.\n\n30\n00:01:27.058 --> 00:01:30.743\nWhat we did is we went into\nour internet gateways and\n\n31\n00:01:30.743 --> 00:01:36.069\nI added this internet gateway right here,\nwebapp1-web-gw, right.\n\n32\n00:01:36.069 --> 00:01:37.636\nThat was the gateway.\n\n33\n00:01:37.636 --> 00:01:41.670\nAnd I attached it to my subnets\nthat actually had that.\n\n34\n00:01:41.670 --> 00:01:43.009\nSo if I go to my routing tables.\n\n35\n00:01:44.170 --> 00:01:46.445\nAnd I look, I've got a routing table here.\n\n36\n00:01:46.445 --> 00:01:51.540\nIt's tied at the webapp1-vpc and\nin that routing table,\n\n37\n00:01:51.540 --> 00:01:55.010\nif I go down to my routes, there's\nthe route that includes that gateway.\n\n38\n00:01:55.010 --> 00:01:57.310\nSo I've got this local\nnetwork of 172.16.0.0/16 and\n\n39\n00:01:57.310 --> 00:02:01.620\nnow I've got the default route for\nthe gateway.\n\n40\n00:02:01.620 --> 00:02:04.010\nThat was how we ended\nthe episode right there.\n\n41\n00:02:04.010 --> 00:02:06.520\nWell, during the break I jumped up here.\n\n42\n00:02:06.520 --> 00:02:08.990\nAnd I went to my instances.\n\n43\n00:02:08.990 --> 00:02:11.520\nAnd I started firing up\nsome virtual machines.\n\n44\n00:02:11.520 --> 00:02:15.640\nI fired up one web server in each\nof the two web server subnets.\n\n45\n00:02:15.640 --> 00:02:18.670\nAnd I fired up one database server and\nstuck it back in the database one.\n\n46\n00:02:18.670 --> 00:02:22.407\nSo notice how I've got a database and\na web server in us-east-1a.\n\n47\n00:02:22.407 --> 00:02:23.499\nAnd I've got one in us-east-1d, right?\n\n48\n00:02:23.499 --> 00:02:27.590\nThose are the three subnets that we made,\nthe three availability zones we covered.\n\n49\n00:02:27.590 --> 00:02:32.999\nNow, if I scroll over,\nI can see that they're healthy and\n\n50\n00:02:32.999 --> 00:02:35.140\nif I just kinda look at all their data,\n\n51\n00:02:35.140 --> 00:02:40.770\nyou'll notice this nice big gap right\nhere under public DNS and public IP.\n\n52\n00:02:40.770 --> 00:02:41.880\nRight.\n\n53\n00:02:41.880 --> 00:02:47.320\nWhen you create a VPC,\nthe default is that it is private.\n\n54\n00:02:47.320 --> 00:02:52.080\nIt's a virtual private cloud,\nit's local addresses only and that's it.\n\n55\n00:02:52.080 --> 00:02:55.368\nAnd what that means is that it's not gonna\nbe able to talk to the internet because\n\n56\n00:02:55.368 --> 00:02:56.596\nit's got fake IP addresses,\n\n57\n00:02:56.596 --> 00:02:59.317\nit's got internal IP addresses\nthat are not internet routable.\n\n58\n00:02:59.317 --> 00:03:03.413\nSo when I added that gateway, that\nconnected my machines to the internet but\n\n59\n00:03:03.413 --> 00:03:07.509\nthey're not gonna be able to get out\nto the internet because they don't have\n\n60\n00:03:07.509 --> 00:03:08.099\na real IP.\n\n61\n00:03:08.099 --> 00:03:12.090\nThey've got a 172.16 address, and any\ninternet routers instructed to drop those.\n\n62\n00:03:12.090 --> 00:03:15.760\nThose are private IPs, you have to\ntranslate over to a public one.\n\n63\n00:03:15.760 --> 00:03:18.030\nThere's two ways I can get around this.\n\n64\n00:03:18.030 --> 00:03:21.009\nIf I want these VPCs\nto be internet facing.\n\n65\n00:03:22.060 --> 00:03:25.460\nThen I just need to assign public IPs to\nmatch up with those internal systems.\n\n66\n00:03:25.460 --> 00:03:27.690\nIf they're web servers,\nyou want them to have public IPs and\n\n67\n00:03:27.690 --> 00:03:29.240\nI need to do that, right?\n\n68\n00:03:29.240 --> 00:03:34.170\nNow what I should have done was\nback when I set up those subnets,\n\n69\n00:03:34.170 --> 00:03:36.920\nI should have told it to assign\npublic IPs and I didn't.\n\n70\n00:03:36.920 --> 00:03:38.480\nIf I go back here to my VPCs.\n\n71\n00:03:40.920 --> 00:03:42.320\nWhen we jump into the VPC and\n\n72\n00:03:42.320 --> 00:03:46.830\nwe take a look at like the webapp1-vpc,\nthis guy right here, and\n\n73\n00:03:46.830 --> 00:03:50.870\nyou look at its various options,\nall it asked me for was a CIDR block.\n\n74\n00:03:50.870 --> 00:03:52.730\nAnd that was it,\nI assigned it a CIDR block.\n\n75\n00:03:52.730 --> 00:03:55.660\nIt never mentioned\nanything about public IPs.\n\n76\n00:03:55.660 --> 00:04:01.200\nAnd that's because we can then go subnet\nby subnet and customize the public IPs.\n\n77\n00:04:01.200 --> 00:04:06.230\nAnd so if I jump over to my subnets,\nand I take web1d, for example,\n\n78\n00:04:06.230 --> 00:04:11.860\nnotice in web1d, there's this option right\ndown here, Auto-assign Public IP, no.\n\n79\n00:04:11.860 --> 00:04:14.150\nSo they're not gonna get public IPs,\nand for\n\n80\n00:04:14.150 --> 00:04:16.030\nmy database servers, that's what I want.\n\n81\n00:04:16.030 --> 00:04:18.810\nI don't want them to have\npublic IPS because then\n\n82\n00:04:18.810 --> 00:04:21.620\nsomebody on the internet could try and\naccess the database server directly.\n\n83\n00:04:21.620 --> 00:04:23.390\nI have to make sure I\nput security groups in.\n\n84\n00:04:23.390 --> 00:04:26.650\nBut if I just have internal IPs,\nnobody on the internet can access it,\n\n85\n00:04:26.650 --> 00:04:29.670\ncuz it's not a routable IP, right?\n\n86\n00:04:29.670 --> 00:04:31.770\nOr not an internet routable IP.\n\n87\n00:04:31.770 --> 00:04:35.940\nSo, I need to change my subnets for\nmy web servers to auto-assign public IPs.\n\n88\n00:04:35.940 --> 00:04:38.890\nSo, I'm just gonna take these guys.\n\n89\n00:04:38.890 --> 00:04:43.127\nAnd if we dig into their settings,\nyou'll see where you can modify\n\n90\n00:04:43.127 --> 00:04:47.531\nthe auto-assign public IP option\nright here under subnet actions.\n\n91\n00:04:47.531 --> 00:04:51.700\nI'm just gonna turn that on, and\nI'll do that for both them, right?\n\n92\n00:04:51.700 --> 00:04:57.395\nSo I just did it for web1d, now I'll\ndo it for web1a, and I'll turn that on.\n\n93\n00:04:57.395 --> 00:04:59.120\nNow, usually I'm much better\nabout remembering this.\n\n94\n00:04:59.120 --> 00:05:02.330\nSo, I actually don't know if that's gonna\napply to my existing instances or not.\n\n95\n00:05:02.330 --> 00:05:03.630\nSo, I'll have to double check, but\n\n96\n00:05:03.630 --> 00:05:07.110\nI can see right down here that auto\nassign public IP is now set to yes.\n\n97\n00:05:07.110 --> 00:05:09.870\nAnd if I jump over to my instances.\n\n98\n00:05:09.870 --> 00:05:11.080\nLet's see if it did it for me.\n\n99\n00:05:12.150 --> 00:05:15.160\nWe'll find out real quick and I didn't.\n\n100\n00:05:15.160 --> 00:05:15.830\nShoot.\n\n101\n00:05:15.830 --> 00:05:19.850\nAll right, so as I started spinning up\nnew ones they'll get those public IPs but\n\n102\n00:05:19.850 --> 00:05:22.110\nsince these guys were already here,\nthey don't have it so\n\n103\n00:05:22.110 --> 00:05:25.110\nI'm gonna have to edit those and\nkinda reassign it.\n\n104\n00:05:25.110 --> 00:05:28.900\nSo when you go into like your instance\nsettings, you'll see we got all sorts of\n\n105\n00:05:28.900 --> 00:05:31.770\ndifferent stuff that you can mess with\nunder networking, here's where you can\n\n106\n00:05:31.770 --> 00:05:35.520\nmanage your private IP address and you\ncan attach network interfaces and so on.\n\n107\n00:05:36.570 --> 00:05:39.060\nBut, they don't actually have a public IP.\n\n108\n00:05:39.060 --> 00:05:40.660\nSo there is a few ways I can resolve this,\n\n109\n00:05:40.660 --> 00:05:45.080\nI could spit up new instances, or\nI could just do some elastic IPs and\n\n110\n00:05:45.080 --> 00:05:48.590\nattach them, which works also, and\nthen they would have those public IPs.\n\n111\n00:05:48.590 --> 00:05:50.770\nBut that's one step that\nI kind of left out,\n\n112\n00:05:50.770 --> 00:05:52.970\nin last episode that is kind of important.\n\n113\n00:05:52.970 --> 00:05:54.960\nBut once I have that public IP,\nthey've got a gateway,\n\n114\n00:05:54.960 --> 00:05:57.130\nthey can pass through the gateway\nto go out to the internet and now,\n\n115\n00:05:57.130 --> 00:06:00.010\nthey've got that internet access and\nthey'll be in business, so.\n\n116\n00:06:00.010 --> 00:06:02.200\nYeah, I was kinda hoping it would\nauto assign them, but it didn't.\n\n117\n00:06:02.200 --> 00:06:05.650\n>> Well Don, I was gonna say,\nunless you have something else?\n\n118\n00:06:05.650 --> 00:06:06.190\n>> Oh, no, go ahead.\n\n119\n00:06:06.190 --> 00:06:08.490\n>> Okay.\nHere's what I'm thinking.\n\n120\n00:06:08.490 --> 00:06:13.520\nWe've just created an internet\naccessible machine, right?\n\n121\n00:06:13.520 --> 00:06:14.690\nWe've got an instance.\n\n122\n00:06:14.690 --> 00:06:18.330\nIt is now able to get out to the internet,\nand the internet is able to get back to\n\n123\n00:06:18.330 --> 00:06:20.540\nthat, and sometimes,\nthat's exactly what we want.\n\n124\n00:06:20.540 --> 00:06:22.430\nBut sometimes that's not\nexactly what we want.\n\n125\n00:06:22.430 --> 00:06:25.690\nSometimes I want to have a server or\njust an instance for\n\n126\n00:06:25.690 --> 00:06:27.000\nwhatever reason I'm using it for.\n\n127\n00:06:27.000 --> 00:06:28.690\nI want it to be able to\nget to the internet, but\n\n128\n00:06:28.690 --> 00:06:30.950\nI don't want the internet\nto be able to get to it.\n\n129\n00:06:30.950 --> 00:06:33.140\nDon, what do I do in that scenario?\n\n130\n00:06:33.140 --> 00:06:35.960\n>> All right, well we can certainly\nhandle that with security groups,\n\n131\n00:06:35.960 --> 00:06:39.020\nif you wanna go through setting up\nthe security rules and all that.\n\n132\n00:06:39.020 --> 00:06:42.000\nBut the other option is I could just\nleave them with internal only IPs,\n\n133\n00:06:42.000 --> 00:06:43.110\nlike my database servers.\n\n134\n00:06:43.110 --> 00:06:45.400\nThey just have internal IPs and that's it.\n\n135\n00:06:45.400 --> 00:06:46.570\nAnd if that's the case,\n\n136\n00:06:46.570 --> 00:06:50.760\nnobody will be able to get to them from\noutside because it's a private IP range.\n\n137\n00:06:50.760 --> 00:06:54.530\nSo if I want that, if I want that,\nI'm already set that way.\n\n138\n00:06:54.530 --> 00:06:57.820\nMy database servers are isolated and\nthat's it.\n\n139\n00:06:57.820 --> 00:07:00.140\nBut what if I wanna do simple things?\n\n140\n00:07:00.140 --> 00:07:02.462\nI want to update the operating system.\n\n141\n00:07:02.462 --> 00:07:05.130\nI wanna download some new\nsoftware application to it.\n\n142\n00:07:05.130 --> 00:07:06.740\nThey're gonna need internet access.\n\n143\n00:07:06.740 --> 00:07:10.350\nSo I might wanna give them internet\naccess but not give them a public IP.\n\n144\n00:07:11.450 --> 00:07:16.950\nIf that's the case, what I need to do is\nsetup NAT, Network Address Translation.\n\n145\n00:07:16.950 --> 00:07:21.390\nNetwork Address Translation is where when\nyour system crosses and hits that router.\n\n146\n00:07:21.390 --> 00:07:25.290\nThe router takes the fake IP and\nswaps it out for a real IP and\n\n147\n00:07:25.290 --> 00:07:26.570\nsends it out to the internet.\n\n148\n00:07:26.570 --> 00:07:29.075\nAnd then replies can comeback to\nthe real IP and swaps it back out for\n\n149\n00:07:29.075 --> 00:07:30.970\nthe private IP and brings it in.\n\n150\n00:07:30.970 --> 00:07:35.038\nBut if somebody from the outside tries\nto come in, it's not allowed, or\n\n151\n00:07:35.038 --> 00:07:37.855\npeople are only allowed\nto reply to your request.\n\n152\n00:07:37.855 --> 00:07:42.022\nA great way to give your database servers\nthe way to auto update without actually\n\n153\n00:07:42.022 --> 00:07:44.147\nexposing them to the internet, right?\n\n154\n00:07:44.147 --> 00:07:45.905\nNow, here's the thing get a little fun.\n\n155\n00:07:45.905 --> 00:07:49.481\nAmazon is constantly adding\nnew features to AWS and\n\n156\n00:07:49.481 --> 00:07:53.737\nsetting up NAT actually was kind\nof a pain in the butt before.\n\n157\n00:07:53.737 --> 00:07:55.431\nIt took a lot of work.\n\n158\n00:07:55.431 --> 00:07:57.398\nBut, just yesterday, so, I guess,\n\n159\n00:07:57.398 --> 00:07:59.927\nit depends on when you watch this video,\nright?\n\n160\n00:07:59.927 --> 00:08:04.207\nBut, if you're watching this live, just\nyesterday, Amazon announced a new feature,\n\n161\n00:08:04.207 --> 00:08:05.700\nwhich is called a NAT gateway.\n\n162\n00:08:05.700 --> 00:08:10.530\nAnd so, when I come in here, into my VPC\ndashboard, notice this guy right here,\n\n163\n00:08:10.530 --> 00:08:12.420\nNAT gateways.\n\n164\n00:08:12.420 --> 00:08:16.971\nAll right, I can add a NAT gateway, and\nI just come in here and tell it to create\n\n165\n00:08:16.971 --> 00:08:21.660\na NAT gateway, I specify the sub-net\nthat I wanna provide the gateway for.\n\n166\n00:08:21.660 --> 00:08:27.050\nSo, I might pick my webapp1 database1 so,\nfor\n\n167\n00:08:27.050 --> 00:08:33.730\nmy database servers and then, I can give\nit an elastic IP to use and when any of my\n\n168\n00:08:33.730 --> 00:08:38.110\ndatabase servers go out to the Internet,\nthey will share this one elastic IP,\n\n169\n00:08:38.110 --> 00:08:42.800\ngo out to the Internet, and get replies\nback, and be able to communicate.\n\n170\n00:08:42.800 --> 00:08:45.520\nBut people on the outside will not\nbe able to initiate connections in,\n\n171\n00:08:45.520 --> 00:08:47.280\nthat was securely access.\n\n172\n00:08:47.280 --> 00:08:49.130\nSo I can create a new elastic IP.\n\n173\n00:08:49.130 --> 00:08:52.410\nThere you go, aust did one, and\nI'm gonna create NAT gateway.\n\n174\n00:08:52.410 --> 00:08:54.180\nAnd I'm done, all right.?\n\n175\n00:08:54.180 --> 00:08:57.700\nIt's done, I've got a NAT gateway,\nand we're in business.\n\n176\n00:08:57.700 --> 00:09:02.510\nOkay it's that easy and now those\nsystems that don't have a public IP\n\n177\n00:09:02.510 --> 00:09:04.630\nwill be able to get out to the Internet,\nright?\n\n178\n00:09:04.630 --> 00:09:07.270\nNow you saw how easy that was,\n\n179\n00:09:07.270 --> 00:09:09.245\nunfortunately this just\ncame out yesterday.\n\n180\n00:09:09.245 --> 00:09:11.015\nSo what does the exam have?\n\n181\n00:09:11.015 --> 00:09:13.615\nIt's got the hard way,\nright, and the hard way\n\n182\n00:09:13.615 --> 00:09:17.965\nis where I actually have to bring up\nan EC2 instance that acts as a NAT router.\n\n183\n00:09:17.965 --> 00:09:20.615\nAnd it's a little bit involved and\nnormally,\n\n184\n00:09:20.615 --> 00:09:22.995\nin real-life-land,\nyou're never gonna do that again.\n\n185\n00:09:22.995 --> 00:09:26.580\nNow that we have NAT gateways, that's the\nway you're gonna do it in real-life-land,\n\n186\n00:09:26.580 --> 00:09:30.130\nbefore the exam, I need to show\nyou that the hard way, okay?\n\n187\n00:09:30.130 --> 00:09:32.120\nSo, the hard ways a lot more involved.\n\n188\n00:09:32.120 --> 00:09:34.980\nI've gotta go through a lot of steps I'm\nbasically going to build up a virtual\n\n189\n00:09:34.980 --> 00:09:37.840\nmachine that's gonna act as this NAT\nRouter and there's a lot of weird little\n\n190\n00:09:37.840 --> 00:09:41.220\npermissions and quirks and some things\nwe've got to set that make it kinda hard.\n\n191\n00:09:41.220 --> 00:09:43.920\nAmazon's automated it,\nnotice how long it's taking to apply that,\n\n192\n00:09:43.920 --> 00:09:47.420\nhow it's still as pending cuz it's going\nthrough all the steps I'm about to show\n\n193\n00:09:47.420 --> 00:09:51.970\nyou in the background, so if I want\nto get one of these created, right?\n\n194\n00:09:51.970 --> 00:09:54.970\nSo if I wanna get this put in place,\nthe first thing I need to do\n\n195\n00:09:54.970 --> 00:09:57.530\nis I need to create a security group for\nthe NAT router.\n\n196\n00:09:57.530 --> 00:09:59.980\nI need to create a security\ngroup that defines,\n\n197\n00:09:59.980 --> 00:10:04.760\nwhat traffic is going to allowed or\nbe allowed to be NATed, to be translated.\n\n198\n00:10:04.760 --> 00:10:09.534\nSo my database servers, I need to\npay attention what their subnet is\n\n199\n00:10:09.534 --> 00:10:14.324\ncuz I can't remember,\nso, it's 172.16.1.0/24.\n\n200\n00:10:14.324 --> 00:10:18.793\nAll right, so, 172, hope you remember that\nDaniel, 172.16.1 is the network that I\n\n201\n00:10:18.793 --> 00:10:21.690\nwant to allow to be translated\nto go out to the Internet.\n\n202\n00:10:21.690 --> 00:10:22.310\nRight.\n\n203\n00:10:22.310 --> 00:10:25.034\nSo, I'm gonna go to my security groups and\n\n204\n00:10:25.034 --> 00:10:28.480\nI'm just gonna create\na new security group.\n\n205\n00:10:28.480 --> 00:10:35.250\nAnd I'm gonna call this my\nWebapp1NATsecurity group all right?\n\n206\n00:10:35.250 --> 00:10:39.155\nAnd I'll give it a group name,\nand a great description, so\n\n207\n00:10:39.155 --> 00:10:44.011\nthis would be NAT security group for\nDB servers, or something like that.\n\n208\n00:10:44.011 --> 00:10:46.843\nAnd then I pick the VPC\nthat it's attached to, and\n\n209\n00:10:46.843 --> 00:10:49.414\nI want this to be attached\nto my Web app 1 VPC.\n\n210\n00:10:49.414 --> 00:10:50.401\nRight?\nThat's where my\n\n211\n00:10:50.401 --> 00:10:51.910\ndatabase servers are residing.\n\n212\n00:10:51.910 --> 00:10:55.370\nAll right, so\nI'm gonna create that security group and\n\n213\n00:10:55.370 --> 00:10:58.320\nthis is just a regular security group\nlike what you've attached to an easy two\n\n214\n00:10:58.320 --> 00:11:01.680\ninstance because ultimately I am\ngonna attach it to an instance.\n\n215\n00:11:01.680 --> 00:11:05.230\nBut once that security group is created,\nI can go to the inbound rules and\n\n216\n00:11:05.230 --> 00:11:08.619\nnotice the default rules, no traffic\nis allowed to come in to this thing,\n\n217\n00:11:08.619 --> 00:11:11.890\nand at the outbound rule all\ntraffics is allowed to go out.\n\n218\n00:11:11.890 --> 00:11:15.380\nSo I need to adjust what inbound rules\na little bit, the first thing I'm gonna do\n\n219\n00:11:15.380 --> 00:11:18.440\nis I'm gonna add a rule that\nlet's me SSH into it, right.\n\n220\n00:11:18.440 --> 00:11:21.420\nBecause it is an instance that's\nrunning that I might need to manage,\n\n221\n00:11:21.420 --> 00:11:24.240\nif I do the Amazon NAT gateway,\n\n222\n00:11:24.240 --> 00:11:26.730\nthe one I showed you earlier,\nI never need to SSH into that.\n\n223\n00:11:26.730 --> 00:11:29.270\nThey manage that completely,\nit's not a big deal, but\n\n224\n00:11:29.270 --> 00:11:32.350\nI'm gonna have to manage this one so\nI'm gonna add SSH to it.\n\n225\n00:11:32.350 --> 00:11:37.220\nAnd for the source you can add who you\nwant to be allowed to remote in to it.\n\n226\n00:11:37.220 --> 00:11:39.790\nI might put the IP address\nof my building here or\n\n227\n00:11:39.790 --> 00:11:42.570\nI might just go for the whole Internet.\n\n228\n00:11:42.570 --> 00:11:44.290\nAnd just say anybody can\nSSH into this thing.\n\n229\n00:11:44.290 --> 00:11:45.680\nYou still have to have a username and\npassword so\n\n230\n00:11:45.680 --> 00:11:50.690\nit's not completely unsecure, then I'll\nadd another route and for this one.\n\n231\n00:11:50.690 --> 00:11:56.560\nI'm gonna create a All Traffic rule,\nI'm going to allow all traffic to pass\n\n232\n00:11:59.090 --> 00:12:03.628\ninto this thing from 172.16.1.0/24.\n\n233\n00:12:03.628 --> 00:12:08.290\nAll right, that's the subnet that\nI've assigned to my database servers.\n\n234\n00:12:08.290 --> 00:12:12.700\nSo my database servers would allowed\nto go into this NAT Gateway and\n\n235\n00:12:12.700 --> 00:12:15.250\nit will translate them and\nsend them out to the Internet.\n\n236\n00:12:15.250 --> 00:12:18.550\nAnd then people will be\nable to respond back but\n\n237\n00:12:18.550 --> 00:12:20.620\nnobody else will be able\nto pass this NAT Gateway.\n\n238\n00:12:20.620 --> 00:12:23.260\nI don't want hackers bouncing\nthrough my equipment and\n\n239\n00:12:23.260 --> 00:12:24.910\nmaking it look like attacks\nare coming from me, right?\n\n240\n00:12:24.910 --> 00:12:27.430\nWe don't want that, so that's why\nwe gotta be specific on this one.\n\n241\n00:12:27.430 --> 00:12:31.580\nI'm gonna allow all traffic on my database\nservers and I can be even more specific.\n\n242\n00:12:31.580 --> 00:12:33.920\nIf I just want my database servers\nto be able to browse the web,\n\n243\n00:12:33.920 --> 00:12:37.220\nI can just add an HTTP rule,\nmaybe HTTPS also.\n\n244\n00:12:37.220 --> 00:12:40.620\nOr if I went into FTP file update,\nso I might add FTP and that's it.\n\n245\n00:12:40.620 --> 00:12:41.410\nBut I'm doing all traffic,\n\n246\n00:12:41.410 --> 00:12:44.020\nI'm just gonna allow them to\nhave whatever they need, okay.\n\n247\n00:12:44.020 --> 00:12:46.290\nSo that's my security group,\n\n248\n00:12:46.290 --> 00:12:51.400\nI haven't actually created the gateway\nyet, right, so I kinda need to do that.\n\n249\n00:12:51.400 --> 00:12:55.185\nNow for creating the gateway,\nit used to be really hard,\n\n250\n00:12:55.185 --> 00:12:58.640\nyou use to spin up a Linux AMI or\nyou can do Windows for that matter.\n\n251\n00:12:58.640 --> 00:13:01.360\nAnd you have to configured NAT\nrouting inside of it that you have to\n\n252\n00:13:01.360 --> 00:13:02.230\nsetup a routing table,\n\n253\n00:13:02.230 --> 00:13:05.820\nyou have to setup address translation and\npools and so on and so forth.\n\n254\n00:13:05.820 --> 00:13:09.320\nBut Amazon actually has\nan AMI built up for it.\n\n255\n00:13:09.320 --> 00:13:13.640\nSo they've got an AMI that we can use it's\nalready configured for everything we need\n\n256\n00:13:13.640 --> 00:13:17.310\nIt just needs a security group, and\nto be attached to the right place.\n\n257\n00:13:17.310 --> 00:13:20.180\nSo if I want to get\nsomething like that setup,\n\n258\n00:13:20.180 --> 00:13:22.950\nI just need to go up to my instances,\nso I'm going to jump over to EC2.\n\n259\n00:13:22.950 --> 00:13:27.300\nI'm going to go into my instances and\nI'm going to launch an new instance.\n\n260\n00:13:27.300 --> 00:13:30.320\nAnd instead of creating one of these\nblank operating system instances,\n\n261\n00:13:30.320 --> 00:13:34.120\nI'm going to go to the community AMI's.\n\n262\n00:13:34.120 --> 00:13:37.980\nAnd I'm gonna search for\nthe NAT router AMIs that they have.\n\n263\n00:13:37.980 --> 00:13:42.830\nNow if you wanna find them you can search,\nif you wanna find them all,\n\n264\n00:13:42.830 --> 00:13:50.190\nif you do an amzn-ami-vpc-nat,\nthat will return them all.\n\n265\n00:13:50.190 --> 00:13:54.590\nI guess if I spell Amazon right\n[LAUGH] A f or return them all, or\n\n266\n00:13:54.590 --> 00:13:55.560\nabsolutely nothing.\n\n267\n00:13:55.560 --> 00:14:02.644\nSo, there we go, so, you'll see I've\ngot this amzn-ami-vpc-nat hvm pv.\n\n268\n00:14:02.644 --> 00:14:06.545\nSome of them are the different\nvirtualization types.\n\n269\n00:14:06.545 --> 00:14:10.340\nHvm is the new stuff,\nthe para virtual is the old stuff.\n\n270\n00:14:10.340 --> 00:14:11.970\nWe've got general purpose,\n\n271\n00:14:11.970 --> 00:14:16.440\ngp2, the general purpose ssd\nstorage versus ebs storage.\n\n272\n00:14:16.440 --> 00:14:21.280\nSo you can pick from different storage\ntypes and whether they're 64 bit versus\n\n273\n00:14:21.280 --> 00:14:24.500\n32 bit, although I don't see any\n32 bit ones in the list any more.\n\n274\n00:14:24.500 --> 00:14:27.770\nBut you'll find all sorts of different\nones based on what your needs are, okay.\n\n275\n00:14:27.770 --> 00:14:32.541\nIf you know exactly which one you want,\nyou can search a little more specifically,\n\n276\n00:14:32.541 --> 00:14:35.420\nso for example, I might want,\nwhat one do I want?\n\n277\n00:14:35.420 --> 00:14:37.318\nI want to make sure I do an HVM and\n\n278\n00:14:37.318 --> 00:14:41.640\nthis is one of the things I write down\nbecause I always use the same one.\n\n279\n00:14:41.640 --> 00:14:46.730\nSo I might want to use the HVM 1 and\nI might want to make sure it's a 2015.\n\n280\n00:14:46.730 --> 00:14:50.167\nBecause you will see some in\nthere that are like 2012 and\n\n281\n00:14:50.167 --> 00:14:52.520\nstuff that are a little bit older.\n\n282\n00:14:52.520 --> 00:14:54.070\nThat narrowed down my choice, and so\n\n283\n00:14:54.070 --> 00:14:58.490\nnow I'm just picking between storage\ntypes whether I want GP2 or EBS.\n\n284\n00:14:58.490 --> 00:14:59.420\nAnd these are all HVM and oh,\n\n285\n00:14:59.420 --> 00:15:04.130\nthere's a new one right there,\nI haven't seen that one before.\n\n286\n00:15:04.130 --> 00:15:07.400\nWhich you might be tempted to use\ncuz I haven't seen it before,\n\n287\n00:15:07.400 --> 00:15:10.120\nI'm gonna leave that one be and\nI'm gonna go with this one down here.\n\n288\n00:15:10.120 --> 00:15:12.950\nThis guy's EBS versus gp2,\nyou can do gp2 if you want.\n\n289\n00:15:12.950 --> 00:15:15.710\nI'm gonna do EBS just because\nI know that it's going to\n\n290\n00:15:17.990 --> 00:15:20.360\nbasically have\nthe performance that I need.\n\n291\n00:15:20.360 --> 00:15:25.200\nIf you go GP2 that general purpose SSD,\nthat's great for\n\n292\n00:15:25.200 --> 00:15:27.760\ndisk access but\nat the end of the day this is a router.\n\n293\n00:15:27.760 --> 00:15:30.730\nIt's gonna do most of it works in RAM and\nso I'm not really concerned about that.\n\n294\n00:15:30.730 --> 00:15:33.460\nAll right, but it's up to you,\nso I'll go ahead and\n\n295\n00:15:33.460 --> 00:15:36.910\npick that one, I can then pick the size,\nnow be careful on this.\n\n296\n00:15:36.910 --> 00:15:40.140\nAll right, a lot of people don't realize\nit and Amazon doesn't document it\n\n297\n00:15:40.140 --> 00:15:45.240\nvery well but the bigger the instance,\nthe more network bandwidth it has.\n\n298\n00:15:45.240 --> 00:15:48.940\nSo if you ever seen network performance\nreally sagging inside of a VPC were\n\n299\n00:15:48.940 --> 00:15:49.604\nyou NATing.\n\n300\n00:15:49.604 --> 00:15:54.485\nYou might need to increase the size of\nyour NAT instance, so if I do a T2 micro\n\n301\n00:15:54.485 --> 00:15:59.925\nA t2 micro, honestly, is probably good\nenough to route a basic amount of traffic.\n\n302\n00:15:59.925 --> 00:16:04.254\nBut, as I start doing more, and more, and\nmore, every packet that passes through it,\n\n303\n00:16:04.254 --> 00:16:07.470\nit has to take the packet,\nit has to decode layer one, layer two,\n\n304\n00:16:07.470 --> 00:16:09.953\nand layer three of the seven\nlayers of the packet.\n\n305\n00:16:09.953 --> 00:16:12.487\nAnd once it decodes the third layer,\n\n306\n00:16:12.487 --> 00:16:17.004\nit has to change the source IP\naddress from the fake IP to a real IP.\n\n307\n00:16:17.004 --> 00:16:19.892\nAnd then it's got to re-encode the packet\nagain, which means it's gotta do\n\n308\n00:16:19.892 --> 00:16:23.170\na little mathematical operation to\ncalculate what's called a CRC checksum.\n\n309\n00:16:23.170 --> 00:16:26.630\nIt's math, and\nmath equals CPU utilization.\n\n310\n00:16:26.630 --> 00:16:29.680\nSo the slower a CPU that I pick,\n\n311\n00:16:29.680 --> 00:16:32.450\nthe less traffic I'm gonna be able\nto move through at the same time.\n\n312\n00:16:32.450 --> 00:16:34.370\nAnd I'm gonna start seeing\nlatency as a result.\n\n313\n00:16:34.370 --> 00:16:37.160\nSo don't go too cheap on\nyour net instance, right.\n\n314\n00:16:37.160 --> 00:16:40.280\nYou might need to spin something up\na little beefier than the t2 micro.\n\n315\n00:16:40.280 --> 00:16:43.273\nSo I'm just gonna start\nmine off as an m4.large.\n\n316\n00:16:43.273 --> 00:16:45.550\nAnd I'll monitor performance, right.\n\n317\n00:16:45.550 --> 00:16:47.420\nUse CloudWatch, keep track on it, and\n\n318\n00:16:47.420 --> 00:16:50.290\nif you see the network getting sluggish,\ncontinue to bump it up.\n\n319\n00:16:50.290 --> 00:16:53.090\nAnd you'll see that you actually get\nbetter network performance, not just\n\n320\n00:16:53.090 --> 00:16:56.600\nbecause of CPU, but because of actual\nnetwork limitations that Amazon has.\n\n321\n00:16:56.600 --> 00:16:58.800\nAs you bump it up, you get more and\nmore network bandwidth.\n\n322\n00:17:00.020 --> 00:17:02.190\nAll right, but like I said,\nthey don't document it very well.\n\n323\n00:17:02.190 --> 00:17:03.210\nIf you look here,\n\n324\n00:17:03.210 --> 00:17:07.830\nwhat you get is this one little column all\nthe way over here, Network Performance.\n\n325\n00:17:07.830 --> 00:17:11.873\nAnd see on most of them say low to\nmoderate and then, I chose this large\n\n326\n00:17:11.873 --> 00:17:15.945\ninstance to see how it's the first\none to just say moderate, right?\n\n327\n00:17:15.945 --> 00:17:17.730\nAnd then,\nwe start getting in the high performance.\n\n328\n00:17:17.730 --> 00:17:21.820\nIf I want high network performance and\nif I want ten gigabit right,\n\n329\n00:17:21.820 --> 00:17:24.230\nwe can start jumping up to that,\nbut obviously it gets more and\n\n330\n00:17:24.230 --> 00:17:28.020\nmore expensive as you go so, you got to\nchoose the right one for your environment.\n\n331\n00:17:29.290 --> 00:17:32.920\nAll right, so once I've got that,\nI can go into my instance details.\n\n332\n00:17:32.920 --> 00:17:36.040\nI'm gonna spit out one instance,\nI don't need more than one for this.\n\n333\n00:17:36.040 --> 00:17:38.660\nI can pick the network, right, and\n\n334\n00:17:38.660 --> 00:17:40.630\nit's kind of important to get\nthis one on the right network,\n\n335\n00:17:40.630 --> 00:17:45.430\nso I'm gonna get this on my webapp1-vpc,\nand then I can attach it to a subnet.\n\n336\n00:17:45.430 --> 00:17:48.830\nAnd I need to attach this to the subnet\nthat I'm going to be translating for.\n\n337\n00:17:48.830 --> 00:17:51.040\nI want this to be translating for\nmy databases.\n\n338\n00:17:51.040 --> 00:17:55.526\nSo I'm gonna put this on my\nwebapp1-db1a subnet, okay.\n\n339\n00:17:55.526 --> 00:17:58.268\nAnd then it's got auto-assign a Public IP.\n\n340\n00:17:58.268 --> 00:18:02.890\nWell my subnets aren't auto assigning\npublic IPs, I've got that turned off.\n\n341\n00:18:02.890 --> 00:18:06.630\nSo I might need to change that to make\nsure that it does get a public IP.\n\n342\n00:18:06.630 --> 00:18:10.040\nOr I can attach an elastic IP to it later.\n\n343\n00:18:10.040 --> 00:18:13.710\nIf I change this to yes, it's gonna\nget a temporary IP that might change.\n\n344\n00:18:13.710 --> 00:18:15.290\nOn this one I actually\ndon't want it to change,\n\n345\n00:18:15.290 --> 00:18:16.440\nI want people to use it as a gateway, so\n\n346\n00:18:16.440 --> 00:18:18.410\nI'm gonna patch an elastic\nIP to it after the fact.\n\n347\n00:18:18.410 --> 00:18:20.142\nSo I'll just leave that be.\n\n348\n00:18:20.142 --> 00:18:22.450\nAll right, let's see what else\ndo I need to do on this thing?\n\n349\n00:18:22.450 --> 00:18:25.440\nI think that's about it,\nI do need to pick a security group,\n\n350\n00:18:25.440 --> 00:18:28.939\nwhich is on the next screen, so\nlet me just move forward on that.\n\n351\n00:18:30.210 --> 00:18:33.000\nI'm not gonna add a new storage to it,\nwe don't need anything crazy there.\n\n352\n00:18:33.000 --> 00:18:37.045\nI'll give it a name, so\nI'm gonna call this webapp1-db-net.\n\n353\n00:18:38.660 --> 00:18:43.019\nAnd then for the security group, I'm gonna\nselect an existing security group and\n\n354\n00:18:43.019 --> 00:18:47.273\nI'll pick that security group we made\na moment ago, that webapp1-nat-sg.\n\n355\n00:18:47.273 --> 00:18:50.270\nAnd we'll review and launch.\n\n356\n00:18:50.270 --> 00:18:54.308\nNow, it's gonna ask me what kind of\nstorage I wanted, I told it just to do\n\n357\n00:18:54.308 --> 00:18:58.283\nregular which it's, looks like it's\npicking General Purpose SSD for\n\n358\n00:18:58.283 --> 00:19:01.730\nthe boot volume, which I'm okay with that.\n\n359\n00:19:01.730 --> 00:19:06.092\nLet's see, what else oh,\nit's asking what I want them to do, is for\n\n360\n00:19:06.092 --> 00:19:11.240\nmy whole account, I'm just gonna\nstick with regular for this one.\n\n361\n00:19:11.240 --> 00:19:12.310\nAll right, there we go.\n\n362\n00:19:12.310 --> 00:19:15.530\nAnd I'm not in the free usage tier,\nbut I'm okay with that.\n\n363\n00:19:15.530 --> 00:19:17.270\nSo all right, so\nwe're gonna launch that one.\n\n364\n00:19:17.270 --> 00:19:22.314\nNow while it's launching I'm gonna go and\nassign an elastic IP to this one, okay.\n\n365\n00:19:22.314 --> 00:19:24.045\nI want to make sure this guy\nalways has the same IP and\n\n366\n00:19:24.045 --> 00:19:25.830\nI don't have to worry about it changing.\n\n367\n00:19:25.830 --> 00:19:28.650\nSo I'm gonna go down to my elastic IPs.\n\n368\n00:19:28.650 --> 00:19:31.720\nAnd I'm gonna allocate a new address,\nor do I have one sitting around?\n\n369\n00:19:31.720 --> 00:19:33.330\nNo, no I don't, all right.\n\n370\n00:19:33.330 --> 00:19:37.128\nSo I'm gonna allocate a new address,\nand I'll just take this address and\n\n371\n00:19:37.128 --> 00:19:38.610\nattach it to that instance.\n\n372\n00:19:38.610 --> 00:19:44.010\nSo I'll allocate that, oops wait,\nI will associate that address,\n\n373\n00:19:44.010 --> 00:19:47.250\nand I'm gonna pick that nat instance,\nthere we go.\n\n374\n00:19:48.630 --> 00:19:52.830\nAll right, now notice for the private IP\naddress down here that Scott had already\n\n375\n00:19:52.830 --> 00:19:54.880\nchosen for me, I got 172.16.1.14.\n\n376\n00:19:54.880 --> 00:19:57.120\nIt's in that network\nwith my database servers.\n\n377\n00:19:57.120 --> 00:19:59.490\nAnd they're gonna be using that for\nthe default gateway.\n\n378\n00:19:59.490 --> 00:20:02.770\nAnd you could, in theory,\nmess around with that if you wanted but\n\n379\n00:20:02.770 --> 00:20:04.790\nI'm fine with it being the way that it is.\n\n380\n00:20:04.790 --> 00:20:07.430\nAnd we'll associate it, and there we go.\n\n381\n00:20:07.430 --> 00:20:10.960\nIt's important to assign that public IP\notherwise the the NAT router won't be able\n\n382\n00:20:10.960 --> 00:20:13.640\nto get out to the Internet,\ncuz it will just have a private IP and\n\n383\n00:20:13.640 --> 00:20:14.860\nthat kinda kills the whole thing,\n\n384\n00:20:14.860 --> 00:20:18.310\nso you gotta have that public IP,\nit's just an extra step to do.\n\n385\n00:20:18.310 --> 00:20:21.590\nAll right.\nSo now the nat instance is spining up,\n\n386\n00:20:21.590 --> 00:20:26.630\nthere's one more thing,\nby default, Amazon has software\n\n387\n00:20:26.630 --> 00:20:31.360\nsecurity measures on the back end, that\nwhen network traffic hits an instance,\n\n388\n00:20:31.360 --> 00:20:36.310\nif that traffic is not destined for\nthat instance, it throws it away.\n\n389\n00:20:36.310 --> 00:20:39.250\nSo when these people are trying\nto route through my NAT instance,\n\n390\n00:20:39.250 --> 00:20:41.220\nthe NAT instance is gonna see that and\njust throw it away.\n\n391\n00:20:41.220 --> 00:20:43.790\nSo they do what's called source and\ndestination checking.\n\n392\n00:20:43.790 --> 00:20:46.610\nIf traffic comes to an instance,\nit needs to either be the source,\n\n393\n00:20:46.610 --> 00:20:49.570\nwhich means it would be exiting traffic,\nor, it needs to be the destination,\n\n394\n00:20:49.570 --> 00:20:51.070\nit would be incoming traffic.\n\n395\n00:20:51.070 --> 00:20:54.180\nFor the NAT router,\nI have to allow it to do both.\n\n396\n00:20:54.180 --> 00:20:58.430\nSource and destinations for other people,\nbecause it's acting like a router.\n\n397\n00:20:58.430 --> 00:21:00.730\nAnd that's disabled by default,\nit's blocked.\n\n398\n00:21:00.730 --> 00:21:03.782\nSo I'm gonna go back to my instances, and\n\n399\n00:21:03.782 --> 00:21:09.202\nI'm gonna find my NAT router here,\nthis is that instance we just spun up.\n\n400\n00:21:09.202 --> 00:21:13.637\nAnd if you go under Actions and\nNetworking, under Networking you'll\n\n401\n00:21:13.637 --> 00:21:18.300\nactually see Change Source and\nDestination Check right there.\n\n402\n00:21:18.300 --> 00:21:21.730\nAnd I'm gonna take that and\nthe only option is to disable it, and\n\n403\n00:21:21.730 --> 00:21:24.510\nthat's what I wanna do, I gotta disable\nthe source and destination check.\n\n404\n00:21:24.510 --> 00:21:27.310\nNow you might think,\nboy I'm weakening the security.\n\n405\n00:21:27.310 --> 00:21:29.220\nWell, you sort of are, right?\n\n406\n00:21:29.220 --> 00:21:32.060\nBut, this instance is already\nhardened to be protected from that,\n\n407\n00:21:32.060 --> 00:21:33.540\nand I've gotta have it.\n\n408\n00:21:33.540 --> 00:21:37.120\nI've gotta have this ability to travel,\nor to move people's traffic\n\n409\n00:21:37.120 --> 00:21:39.249\nthat's not destined for this system,\ncuz it is acting like a router.\n\n410\n00:21:41.200 --> 00:21:45.207\n>> Well Don, is that all it takes to\nget these Internet capabilities adding,\n\n411\n00:21:45.207 --> 00:21:45.786\nworking?\n\n412\n00:21:45.786 --> 00:21:49.435\nObviously the two click\nis a much nicer option.\n\n413\n00:21:49.435 --> 00:21:50.870\n>> [LAUGH]\n>> I might even wait for\n\n414\n00:21:50.870 --> 00:21:53.610\nthat to [LAUGH] become part\nof the exam before I take it.\n\n415\n00:21:53.610 --> 00:21:54.460\n>> [LAUGH]\n>> [LAUGH] Because this\n\n416\n00:21:54.460 --> 00:21:55.600\nseems pretty involved.\n\n417\n00:21:55.600 --> 00:21:58.020\n>> This is probably the hardest part\nof the exam is going through it.\n\n418\n00:21:58.020 --> 00:21:59.370\nAnd they don't ask you to set one up.\n\n419\n00:21:59.370 --> 00:22:02.250\nThey just ask you like, troubleshooting,\nhey this isn't working.\n\n420\n00:22:02.250 --> 00:22:02.780\nWhy not?\n\n421\n00:22:02.780 --> 00:22:05.792\nAnd you got to think of all the different\nsteps that have to be done to complete\n\n422\n00:22:05.792 --> 00:22:07.360\nthis, and which one might be left out.\n\n423\n00:22:07.360 --> 00:22:10.330\nAnd, in fact we have\nleft out one more step.\n\n424\n00:22:10.330 --> 00:22:13.850\nYou remember when I added the Internet\ngateway earlier, the last thing that I did\n\n425\n00:22:13.850 --> 00:22:18.240\nwas update the routing table for\nthe VPC to use it as a default gateway.\n\n426\n00:22:18.240 --> 00:22:21.030\nI need to create a new routing table for\nthe databases,\n\n427\n00:22:21.030 --> 00:22:22.940\ncuz I don't think they have\na routing table right now.\n\n428\n00:22:22.940 --> 00:22:25.633\nAnd I need to set their default gateway\nto be that, in that instance, right?\n\n429\n00:22:25.633 --> 00:22:27.708\nSo that's the last step that I need to do.\n\n430\n00:22:27.708 --> 00:22:32.400\nSo, I'm gonna jump over to my VPCs and\nwe'll just knock that out real quick.\n\n431\n00:22:32.400 --> 00:22:35.067\nSo here under my VPCs,\nI'm gonna go to Route Tables, and\n\n432\n00:22:35.067 --> 00:22:37.790\nI'm gonna create a new routing table.\n\n433\n00:22:37.790 --> 00:22:42.610\nAnd this new routing table, I'll just\ncall it webapp1-db, so and maybe -rt so\n\n434\n00:22:42.610 --> 00:22:48.515\nI can remember it's a routing table, and\nI'm going to attach it to the webapp1-vpc.\n\n435\n00:22:49.780 --> 00:22:50.830\nSo I'll go ahead and create that.\n\n436\n00:22:53.700 --> 00:22:56.070\nAnd then once its created.\n\n437\n00:22:56.070 --> 00:23:00.350\nThere it is,\nI'm gonna go Subnet Associations, and\n\n438\n00:23:00.350 --> 00:23:05.520\nI'm going to attach the db subnet to it,\nright.\n\n439\n00:23:05.520 --> 00:23:08.760\nSo now the database subnet is\ngonna use this routing table.\n\n440\n00:23:08.760 --> 00:23:11.420\nThe web subnets are using their\nown routing table which just has\n\n441\n00:23:11.420 --> 00:23:12.410\na regular Internet gateway.\n\n442\n00:23:12.410 --> 00:23:14.500\nThey have public IPs,\nthey can go right out.\n\n443\n00:23:14.500 --> 00:23:16.920\nThese guys don't have public IPs.\n\n444\n00:23:16.920 --> 00:23:21.180\nSo now that they've got their own routing\ntable, I can jump over to Routes.\n\n445\n00:23:21.180 --> 00:23:23.360\nAnd I can add a new route.\n\n446\n00:23:23.360 --> 00:23:27.213\nAnd what I wanna do is, I wanna do\none of those catch-all routes, so\n\n447\n00:23:27.213 --> 00:23:31.881\nI send anything that's not in the routing\ntable already, and I can send it to, and\n\n448\n00:23:31.881 --> 00:23:35.830\nI'm gonna send it right there to\nthat NAT instance that we just made.\n\n449\n00:23:35.830 --> 00:23:39.093\nAnd so now their traffic,\nwhen they try and go to somebody outside,\n\n450\n00:23:39.093 --> 00:23:43.290\nthey'll go through the NAT router, the NAT\nrouter will translate them to a public IP.\n\n451\n00:23:43.290 --> 00:23:46.269\nAnd they'll be able to go out to\nthe Internet and access those resources,\n\n452\n00:23:46.269 --> 00:23:47.094\nand work just fine.\n\n453\n00:23:47.094 --> 00:23:49.509\nSo, that's the final step.\n\n454\n00:23:49.509 --> 00:23:51.922\nNow my database servers can\nget to the Internet and\n\n455\n00:23:51.922 --> 00:23:53.424\nbe hidden behind a NAT router.\n\n456\n00:23:53.424 --> 00:23:57.633\nMy web server's gonna be connected to the\nInternet and have their own public IPs,\n\n457\n00:23:57.633 --> 00:24:00.750\ntwo very different configurations\nall within the same VPC.\n\n458\n00:24:00.750 --> 00:24:03.900\nAnd so that kind of shows you the power\nthat you have inside of that.\n\n459\n00:24:03.900 --> 00:24:06.770\n>> You just made me think of\nsomething when you said that they're\n\n460\n00:24:06.770 --> 00:24:08.260\nall inside that same VPC.\n\n461\n00:24:08.260 --> 00:24:10.680\nObviously we've accomplished\ninternet access, right,\n\n462\n00:24:10.680 --> 00:24:15.090\nwe've accomplished adding two\nvery important aspects but\n\n463\n00:24:15.090 --> 00:24:19.854\nwhat if I have two VPCs and\nI want them to talk?\n\n464\n00:24:19.854 --> 00:24:24.670\n>> Yeah, well two VPCs or even two subnets\ninside of the same VPC, if we want\n\n465\n00:24:24.670 --> 00:24:28.190\nthem to talk, it's simply a matter of\nmodifying our access control list, right?\n\n466\n00:24:28.190 --> 00:24:32.720\nYou can use security groups and define\nwhat traffic's allowed to pass between\n\n467\n00:24:32.720 --> 00:24:35.620\nthese systems and\neven specify systems in other VPCs.\n\n468\n00:24:35.620 --> 00:24:38.070\nBegin using network ACLs also and\nthe two are very similar.\n\n469\n00:24:38.070 --> 00:24:39.750\nSo let me tell you the difference.\n\n470\n00:24:39.750 --> 00:24:41.270\nIn a security group,\n\n471\n00:24:41.270 --> 00:24:45.200\nwhat I set up just a few moments\nago that's tied to an instance.\n\n472\n00:24:45.200 --> 00:24:50.080\nBut a network ACL, is tied to a VPC.\n\n473\n00:24:50.080 --> 00:24:54.550\nSo you can have a VPC's ACL that defines\nwhether or not it can talk to other VPCs.\n\n474\n00:24:54.550 --> 00:24:57.000\nLet me show you guys this really quick.\n\n475\n00:24:57.000 --> 00:24:59.130\nOn the exam you need to understand\nthe concept on when to use\n\n476\n00:24:59.130 --> 00:25:01.560\none versus the other not necessarily\nhow to use them, but I'll show you.\n\n477\n00:25:01.560 --> 00:25:02.060\nIt's really easy.\n\n478\n00:25:02.060 --> 00:25:07.800\nBasically, when you're here in your VPC\nscreen way down here under Security,\n\n479\n00:25:07.800 --> 00:25:10.710\nyou've got Network ACLs and\nSecurity Groups.\n\n480\n00:25:10.710 --> 00:25:14.260\nAnd if I go to Security Groups I'll see\nthings like the nat security group I made,\n\n481\n00:25:14.260 --> 00:25:16.660\ndefine what traffic was allowed\nto go into the nat router.\n\n482\n00:25:16.660 --> 00:25:19.500\nAnd that specifically\napplied to an instance.\n\n483\n00:25:19.500 --> 00:25:20.840\nNot necessarily the whole VPC.\n\n484\n00:25:20.840 --> 00:25:24.900\nIf I go to network ACLs though, here,\n\n485\n00:25:24.900 --> 00:25:29.780\nI'm seeing access control lists\nthat are tied to the VPCs.\n\n486\n00:25:29.780 --> 00:25:33.790\nSo, see I've got one for\nthe default VPC and one for my webapp.\n\n487\n00:25:33.790 --> 00:25:38.970\nAnd I can go on to my webapps VPC,\nthis guy, And\n\n488\n00:25:38.970 --> 00:25:41.710\nI can set inbound and outbound rules.\n\n489\n00:25:41.710 --> 00:25:45.720\nAnd the default is all traffic is allowed\nin and all traffic is allowed out.\n\n490\n00:25:45.720 --> 00:25:48.380\nIn other words,\nthe default does absolutely nothing.\n\n491\n00:25:48.380 --> 00:25:50.765\nSo, there's a lot of people that don't\neven know these ACLs networks exist.\n\n492\n00:25:50.765 --> 00:25:52.795\nIs this cuz they don't do anything, right?\n\n493\n00:25:52.795 --> 00:25:55.245\nBut the point is I can come in and\nadd rules.\n\n494\n00:25:55.245 --> 00:25:58.335\nI can get rid of that allow all\ntraffic and I can start to change it.\n\n495\n00:25:58.335 --> 00:26:03.095\nAnd when I do that, now I can dictate what\ntraffic's allowed to enter the VPC as\n\n496\n00:26:03.095 --> 00:26:06.075\na whole and what traffic's allowed\nto exit the VPC as a whole.\n\n497\n00:26:06.075 --> 00:26:09.960\nYou normally want anything to be able to\nexit so we don't normally mess with that.\n\n498\n00:26:09.960 --> 00:26:14.190\nOn the inbound side, this is where we can\ncome in and we can say, you know what,\n\n499\n00:26:14.190 --> 00:26:16.840\nthere's only certain traffic that\nI want to be allowed to come in.\n\n500\n00:26:16.840 --> 00:26:20.090\nAnd so I might say that all\ntraffic is not allowed,\n\n501\n00:26:20.090 --> 00:26:23.940\nI might get rid of this first line,\nand then add other lines that say,\n\n502\n00:26:23.940 --> 00:26:28.040\nweb traffic is allowed to go to\nthis subnet and SSH traffic, so\n\n503\n00:26:28.040 --> 00:26:32.110\nI'll have to go to this other subnet or\ntraffic from a particular VPC.\n\n504\n00:26:32.110 --> 00:26:35.730\nWhen you specify this, you tell it\nthe type of traffic you want and\n\n505\n00:26:35.730 --> 00:26:37.450\nthen you tell it the source.\n\n506\n00:26:37.450 --> 00:26:41.910\nAnd the source could be an IP range like\nthis or if you click on it, you'll see,\n\n507\n00:26:41.910 --> 00:26:45.950\nlike if I start typing It'll actually\nsuggest other VPCs, which apparently,\n\n508\n00:26:45.950 --> 00:26:46.750\nI don't have any.\n\n509\n00:26:46.750 --> 00:26:49.210\nSo, I'll have to type in subnets for\nmine, then.\n\n510\n00:26:49.210 --> 00:26:51.940\nSo you can punch in those subnets and\nspecify whether they're allowed, and so\n\n511\n00:26:51.940 --> 00:26:53.080\nhere's where you'd clear it for\n\n512\n00:26:53.080 --> 00:26:55.800\nother VPCs to be able to communicate\nwith this one or vice versa.\n\n513\n00:26:55.800 --> 00:26:58.310\nThe default is, they'll be allowed,\nbut you come in here, and\n\n514\n00:26:58.310 --> 00:27:00.270\nyou can override that behavior.\n\n515\n00:27:00.270 --> 00:27:05.900\nThey key thing to remember for the exam A\nnetwork ACL applies to the VPC as a whole,\n\n516\n00:27:05.900 --> 00:27:08.520\na security group applies\nto individual instances.\n\n517\n00:27:08.520 --> 00:27:10.540\nSo you have more granularity\nwith security groups and\n\n518\n00:27:10.540 --> 00:27:12.790\na lot of people just choose\nthese those out of hand.\n\n519\n00:27:12.790 --> 00:27:17.830\nBut this is nice because we're gonna apply\nto the VPC and as we add new instances,\n\n520\n00:27:17.830 --> 00:27:19.400\nthey're kinda wrap up inside of that and\n\n521\n00:27:19.400 --> 00:27:21.340\nI haven't to worry about whether\nI got the right security group.\n\n522\n00:27:21.340 --> 00:27:25.400\nBut a security group will\noverride A network ACL.\n\n523\n00:27:25.400 --> 00:27:27.160\nIf I allow something\non the network ACL and\n\n524\n00:27:27.160 --> 00:27:30.310\nthen I block it in a security group,\nit's blocked.\n\n525\n00:27:30.310 --> 00:27:33.740\nIf I block it in the ACL and\nallow it in the security group,\n\n526\n00:27:33.740 --> 00:27:36.140\nwell it's blocked before you\neven get to the security group.\n\n527\n00:27:36.140 --> 00:27:37.640\nSo they can bump into each other.\n\n528\n00:27:37.640 --> 00:27:38.450\nYou can get conflicts.\n\n529\n00:27:38.450 --> 00:27:40.520\nYou just need to be aware of\nthe order they are applied in.\n\n530\n00:27:40.520 --> 00:27:44.510\nThe network ACL applies first, and\nthen the security group applies second.\n\n531\n00:27:44.510 --> 00:27:45.495\nAnd that's how those work.\n\n532\n00:27:45.495 --> 00:27:49.270\n>> Awesome,well, Don,\nthe only other thing I can think of to\n\n533\n00:27:49.270 --> 00:27:51.740\nask you about what we're talking\nabout network connectivity.\n\n534\n00:27:51.740 --> 00:27:54.780\nWe still live in a day and\ntime where I have on premises equipment,\n\n535\n00:27:54.780 --> 00:27:55.910\nI still might have servers here.\n\n536\n00:27:55.910 --> 00:28:00.690\nI've routers and switches and networks\ninside of my actual physical building.\n\n537\n00:28:00.690 --> 00:28:02.350\nCan I get Amazon to talk to them?\n\n538\n00:28:02.350 --> 00:28:03.950\nCan I get that connection going?\n\n539\n00:28:03.950 --> 00:28:05.470\n>> Yeah.\nThese VPCs are nice,\n\n540\n00:28:05.470 --> 00:28:06.500\ncuz they're all up in the cloud.\n\n541\n00:28:06.500 --> 00:28:07.360\nThey can all see each other.\n\n542\n00:28:07.360 --> 00:28:09.000\nThey're all on Amazon's network, but\n\n543\n00:28:09.000 --> 00:28:12.620\nyour on premises side,\nit's kind of like its own VPC, right?\n\n544\n00:28:12.620 --> 00:28:15.940\nIt's a virtual private cloud that you have\nsuch exclusive control over that Amazon\n\n545\n00:28:15.940 --> 00:28:16.851\ndoesn't even know about it.\n\n546\n00:28:16.851 --> 00:28:17.545\n>> [LAUGH]\n>> Right?\n\n547\n00:28:17.545 --> 00:28:18.787\nSo, you can still connect it, and\n\n548\n00:28:18.787 --> 00:28:22.290\nthere's two main ways to connect it\nyou need to be aware of for the exam.\n\n549\n00:28:22.290 --> 00:28:24.830\nThe first one is the most common,\nand that's to build a VPN.\n\n550\n00:28:24.830 --> 00:28:30.140\nYou can build a VPN tunnel between your on\npremises network, and an individual VPC.\n\n551\n00:28:30.140 --> 00:28:31.750\nYou don't have to bill to to all of them,\n\n552\n00:28:31.750 --> 00:28:35.140\nyou can pick particular VPCs to connect\nand now you'll be able to communicate.\n\n553\n00:28:35.140 --> 00:28:37.790\nAnd those network ACLs become\nkind of important there too.\n\n554\n00:28:37.790 --> 00:28:40.720\nIf you wanna set that up\nhere in your VPC dashboard.\n\n555\n00:28:40.720 --> 00:28:44.290\nIf you just scroll down you'll see\nVPN connections, right down here, and\n\n556\n00:28:44.290 --> 00:28:48.180\nwhat you have to do is, first you\nhave to set up a customer gateway.\n\n557\n00:28:48.180 --> 00:28:50.630\nAnd a customer gateway\nis usually a firewall or\n\n558\n00:28:50.630 --> 00:28:52.270\na router that's at your location.\n\n559\n00:28:52.270 --> 00:28:54.900\nAnd so you define it right here,\nwhat is your router and\n\n560\n00:28:54.900 --> 00:28:57.850\nfirewall in its basically\nit's configuration.\n\n561\n00:28:57.850 --> 00:28:58.960\nOkay?\n\n562\n00:28:58.960 --> 00:29:02.230\nTo get this all to work you have to\nhave border gateway protocol, or BGP.\n\n563\n00:29:02.230 --> 00:29:04.960\nAnd BGP uses these autonomous\nsystem numbers, or ASN's.\n\n564\n00:29:04.960 --> 00:29:08.090\nAnd so you have to define what autonomous\nsystem number you're going to use at your\n\n565\n00:29:08.090 --> 00:29:10.320\noffice versus up here in the Cloud.\n\n566\n00:29:10.320 --> 00:29:12.870\nAnd so\nonce you define that router as connected.\n\n567\n00:29:12.870 --> 00:29:15.700\nAnd then you tell it the networks\nthat you want to be a part of that.\n\n568\n00:29:15.700 --> 00:29:18.100\nAnd so you go down here to\nvirtual Private Gateways,\n\n569\n00:29:18.100 --> 00:29:21.150\nthen you actually start to define the VPCs\n\n570\n00:29:21.150 --> 00:29:24.520\nthat are gonna be tied to this to\nallow the communications between it.\n\n571\n00:29:24.520 --> 00:29:27.940\nAnd so those are kind of the VPN\nconnections that we can build.\n\n572\n00:29:27.940 --> 00:29:30.510\nAnd once the VPN is up,\n\n573\n00:29:30.510 --> 00:29:35.680\nnow you're able to flow traffic between\nyour on-premises side and Amazon, right.\n\n574\n00:29:35.680 --> 00:29:39.750\nThere is one other service that's\nvery very similar to this.\n\n575\n00:29:39.750 --> 00:29:41.630\nSo these were VPN's.\n\n576\n00:29:41.630 --> 00:29:45.730\nThe problem with VPN's is that they're not\nreally efficient as far as moving a lot\n\n577\n00:29:45.730 --> 00:29:46.540\nof traffic.\n\n578\n00:29:46.540 --> 00:29:50.870\nBandwidth wise, you're having to encrypt\nand decrypt and you're subject to Amazon's\n\n579\n00:29:50.870 --> 00:29:55.740\nincoming bandwidth rules, which Incoming\nbandwidth is free, but that means\n\n580\n00:29:55.740 --> 00:29:59.240\nit's slower, and so you don't necessarily\nget the greatest bandwidth out of it.\n\n581\n00:29:59.240 --> 00:30:01.610\nAnd VPN tunnels usually\nrebuild every 24 hours.\n\n582\n00:30:01.610 --> 00:30:04.510\nThere's these little micro outages\nthat happen with VPN tunnels that\n\n583\n00:30:04.510 --> 00:30:05.570\nare kind of annoying.\n\n584\n00:30:05.570 --> 00:30:07.190\nIt's just how the protocols work.\n\n585\n00:30:08.280 --> 00:30:12.140\nIf you wanna get away from that, if you\nwant a super stable connection that's\n\n586\n00:30:12.140 --> 00:30:14.660\nalways up that has very high bandwidth,\n\n587\n00:30:14.660 --> 00:30:18.840\nthere's another service that may show up\non this service called direct connect.\n\n588\n00:30:18.840 --> 00:30:20.920\nIf I go back to my AWS dashboard,\n\n589\n00:30:20.920 --> 00:30:24.010\nhere's my VPCs and\nright beneath it I've got direct connect.\n\n590\n00:30:24.010 --> 00:30:27.930\nAnd inside direct connect you\ncan create a connection and\n\n591\n00:30:27.930 --> 00:30:30.060\nto reconnect is very similar.\n\n592\n00:30:30.060 --> 00:30:32.860\nYou have a private connection that runs\nbetween your own premises equipment\n\n593\n00:30:32.860 --> 00:30:34.090\nand Amazon.\n\n594\n00:30:34.090 --> 00:30:35.450\nAnd you can float traffic over it.\n\n595\n00:30:35.450 --> 00:30:37.710\nSounds just like the VPNs, right?\n\n596\n00:30:37.710 --> 00:30:40.740\nThe difference here,\nit's actually a physical connection.\n\n597\n00:30:40.740 --> 00:30:44.790\nYou can get an MPLS line or\na point-to-point T1 or\n\n598\n00:30:44.790 --> 00:30:48.240\nsome kind of actual physical line,\na Metro Ethernet line.\n\n599\n00:30:48.240 --> 00:30:51.910\nThat's a point to point line\nbetween you and Amazon.\n\n600\n00:30:51.910 --> 00:30:55.020\nAnd so that means you gotta pay for\nthe line on both ends.\n\n601\n00:30:55.020 --> 00:30:56.180\nYou've gotta get this physically set up.\n\n602\n00:30:56.180 --> 00:30:58.620\nThis isn't something in software where I\ncan click some check boxes and turn on.\n\n603\n00:30:58.620 --> 00:31:02.020\nI've actually got a order service and\npay a monthly bill and all that.\n\n604\n00:31:02.020 --> 00:31:04.380\nBut at the end of the day its a permanent,\n\n605\n00:31:04.380 --> 00:31:07.100\nalways on connection\nwith dedicated bandwidth.\n\n606\n00:31:07.100 --> 00:31:09.964\nAnd so if I go here and\ncreate a new connection,\n\n607\n00:31:09.964 --> 00:31:12.251\nI can tell it who I'm connecting to.\n\n608\n00:31:12.251 --> 00:31:16.233\nAnd you'll see Equinix, that's the company\nthat kinda manages for Amazon.\n\n609\n00:31:16.233 --> 00:31:19.423\nAnd they've got connections in Ashburn,\nVirginia,\n\n610\n00:31:19.423 --> 00:31:23.320\nfor US East and Dallas, Texas, for\none of the other data centers.\n\n611\n00:31:23.320 --> 00:31:24.720\nI can't remember what they call that one.\n\n612\n00:31:24.720 --> 00:31:26.660\nAnd then you've got this\none over here in New York.\n\n613\n00:31:26.660 --> 00:31:29.730\nNotice they don't have connections\nin US West or Europe or whatever.\n\n614\n00:31:29.730 --> 00:31:32.670\nWell, that's partly influenced because\nI've got north Virginia chosen up here\n\n615\n00:31:32.670 --> 00:31:35.900\nas my Out of my region,\nif I flip that all start to change.\n\n616\n00:31:35.900 --> 00:31:40.250\nBut you have to basically buy a physical\nconnection that runs from your office to\n\n617\n00:31:40.250 --> 00:31:41.840\none of these locations.\n\n618\n00:31:41.840 --> 00:31:44.648\nAnd then you specify the Port Speed,\nand they offered gigabyte or\n\n619\n00:31:44.648 --> 00:31:45.884\nten gigabyte connections.\n\n620\n00:31:45.884 --> 00:31:49.421\nAnd you, if you buy the gigabyte\nconnection you know how to dedicated link\n\n621\n00:31:49.421 --> 00:31:51.317\nto Amazon that bypasses the internet.\n\n622\n00:31:51.317 --> 00:31:55.160\nThat's the point to point link that you\ndon't pay bandwidth on because you're\n\n623\n00:31:55.160 --> 00:31:56.200\npaying for the line.\n\n624\n00:31:56.200 --> 00:31:58.470\nAnd you get dedicated\naccess right up there.\n\n625\n00:31:58.470 --> 00:32:02.391\nSo if you need a permanent connection for\nyour on premises equipment to AWS,\n\n626\n00:32:02.391 --> 00:32:03.810\nthis is a great way to do it.\n\n627\n00:32:03.810 --> 00:32:05.260\nBut there's a lot more work.\n\n628\n00:32:05.260 --> 00:32:07.750\nI mean you can click Create.\n\n629\n00:32:07.750 --> 00:32:11.350\nIf I hit that button what it actually does\nis it creates a support ticket to Amazon.\n\n630\n00:32:11.350 --> 00:32:14.120\nAnd then they say hey,\nwe think you might have chosen this by\n\n631\n00:32:14.120 --> 00:32:16.930\naccident because 99% of the people\ndon't actually understand what it is.\n\n632\n00:32:16.930 --> 00:32:19.450\nAnd then they say, if you really\nwanna do this let us know and\n\n633\n00:32:19.450 --> 00:32:23.070\nlet's start a service order and you\nactually go through and do that process.\n\n634\n00:32:23.070 --> 00:32:26.170\nBut once you've got it then\nyou'll have a connection,\n\n635\n00:32:26.170 --> 00:32:28.990\nlike I have one here that's\njust kinda pending right now.\n\n636\n00:32:28.990 --> 00:32:31.480\nYou'll have this connection\nthat runs up and\n\n637\n00:32:31.480 --> 00:32:33.930\nyou gotta go and\norder a physical line and attach it.\n\n638\n00:32:33.930 --> 00:32:37.020\nAnd once it's there you'll\nhave virtual interfaces.\n\n639\n00:32:37.020 --> 00:32:40.310\nAnd you can take those virtual interfaces\nand attach them to each of your subnets.\n\n640\n00:32:40.310 --> 00:32:44.590\nNow, these virtual interfaces\nare 802.1Q VLAN tagged instances, and\n\n641\n00:32:44.590 --> 00:32:49.240\nthat means you could have more than\none VLAN on your local network\n\n642\n00:32:49.240 --> 00:32:52.490\ntied to different subnets\nup in your VPCs in Amazon.\n\n643\n00:32:52.490 --> 00:32:55.610\nSo, you can have several\ndifferent segregated networks all\n\n644\n00:32:55.610 --> 00:32:56.430\ncrossing this one line.\n\n645\n00:32:56.430 --> 00:32:59.440\nIt's really neat stuff but\nit's really involved.\n\n646\n00:32:59.440 --> 00:33:03.700\nFor the exam, you just need to know\nthat if bandwidth is a concern,\n\n647\n00:33:03.700 --> 00:33:07.510\nif you need a permanent high bandwidth\nreliable connection to Amazon,\n\n648\n00:33:07.510 --> 00:33:09.040\nDirectConnect's the way to go.\n\n649\n00:33:09.040 --> 00:33:11.750\nBut if you just need a straight up\nconnection for management purposes or\n\n650\n00:33:11.750 --> 00:33:13.040\ntransferring little bits of data,\n\n651\n00:33:13.040 --> 00:33:17.300\nsomething that's not 100% reliable, the\nVPN technology is far easier to implement,\n\n652\n00:33:17.300 --> 00:33:19.830\nfar less expensive, and\neasy to get deployed and in place.\n\n653\n00:33:19.830 --> 00:33:24.060\nSo those are the two ways that we\ncan connect on premises into a VPC.\n\n654\n00:33:24.060 --> 00:33:25.740\n>> Very impressive Don.\n\n655\n00:33:25.740 --> 00:33:27.550\nI was unaware completely that,\n\n656\n00:33:27.550 --> 00:33:30.080\nthat's basically a traditional leased\nline that connects to the cloud right?\n\n657\n00:33:30.080 --> 00:33:30.800\n>> That's exactly it, yeah.\n\n658\n00:33:30.800 --> 00:33:32.500\n>> Awesome, that's awesome stuff.\n\n659\n00:33:32.500 --> 00:33:36.390\nSo now if you are one of those people\nthat, I'm used to using these type of WAN\n\n660\n00:33:36.390 --> 00:33:40.760\ntechnologies, well, you can continue\ndoing that and use the cloud as well.\n\n661\n00:33:40.760 --> 00:33:41.820\nThat's very awesome.\n\n662\n00:33:41.820 --> 00:33:45.000\nDon, any parting words of wisdom\nthat you have for our viewers?\n\n663\n00:33:45.000 --> 00:33:46.190\n>> I think that's about it.\n\n664\n00:33:46.190 --> 00:33:47.460\nRun through the process.\n\n665\n00:33:47.460 --> 00:33:50.430\nIn the show note I'll put a link to\na Amazon article where they do the step\n\n666\n00:33:50.430 --> 00:33:54.050\nby step exactly how to set up those\nNAT instances, it's kinda daunting.\n\n667\n00:33:54.050 --> 00:33:56.640\nFor the exam, they're not gonna ask\nyou to set up an add instance, but\n\n668\n00:33:56.640 --> 00:33:59.680\nwhat they are gonna do is ask you some\nbasic troubleshooting questions, and\n\n669\n00:33:59.680 --> 00:34:01.810\nit always boils down to skipping a step.\n\n670\n00:34:01.810 --> 00:34:04.470\nSo you wanna run through that\nprocess a few times, get used to it,\n\n671\n00:34:04.470 --> 00:34:07.610\nget comfortable with it so you can\nrecognize when a step has been missed.\n\n672\n00:34:07.610 --> 00:34:09.540\nIt happens.\nI missed a step when I was setting it up.\n\n673\n00:34:09.540 --> 00:34:12.310\nI didn't have public IPs on my web\nservers, so they couldn't get out.\n\n674\n00:34:12.310 --> 00:34:13.716\nWell, I guess that wasn't NAT, that was-\n>> Still.\n\n675\n00:34:13.716 --> 00:34:14.970\n[LAUGH]\n>> Well, whatever, whatever.\n\n676\n00:34:14.970 --> 00:34:16.610\nSo it's easy to forget things, right.\n\n677\n00:34:16.610 --> 00:34:19.250\nSo we wanna make sure that we have that,\nthat we're comfortable with it, and\n\n678\n00:34:19.250 --> 00:34:19.880\njust run through it.\n\n679\n00:34:19.880 --> 00:34:24.020\nBut at the end of the day, VPCs are very\npowerful, they're not that hard to get set\n\n680\n00:34:24.020 --> 00:34:29.000\nup, and thanks to the new NAT gateway that\nAmazon rolled out literally yesterday,\n\n681\n00:34:29.000 --> 00:34:32.780\nthe net stuff is just two clicks away,\nbut for the exam, know the full process.\n\n682\n00:34:32.780 --> 00:34:35.830\n>> All right, Don, well thanks for\njoining us today, and those explanations.\n\n683\n00:34:35.830 --> 00:34:37.200\nThank you guys for watching.\n\n684\n00:34:37.200 --> 00:34:38.242\nWe're going to go ahead and sign off.\n\n685\n00:34:38.242 --> 00:34:40.900\nFor ITProTV I've been your Daniel Lowery.\n\n686\n00:34:40.900 --> 00:34:41.590\n>> And I'm Donald Pizette.\n\n687\n00:34:41.590 --> 00:34:42.780\n>> And we'll see you next time.\n\n688\n00:34:42.780 --> 00:34:49.380\n[MUSIC]\n\n",
          "vimeoId": "150834858"
        }
      ],
      "title": "Virtual Private Cloud"
    },
    {
      "episodes": [
        {
          "description": "In this episode, Daniel and Don take a look at disk storage in EC2. They start off by describing Volume types, those being the Root volume and then any additional volumes. Then they look at Storage types in AWS; these being Instance Store, also known as Ephemeral storage, and Elastic Block Storage(EBS). They then move on to EC2 Storage Media which can be standard magnetic storage, General Purpose SSD, or Provisioned IOPS SSD and their attributes.",
          "length": "1998",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/amazon-acsa/amazon-acsa-3-1-1-ec2-disk_storage-121415-1.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/amazon-acsa/amazon-acsa-3-1-1-ec2-disk_storage-121415-1-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/amazon-acsa/amazon-acsa-3-1-1-ec2-disk_storage-121415-1-sm.jpg",
          "title": "EC2 Disk Storage",
          "transcript": "WEBVTT\n\n1\n00:00:00.000 --> 00:00:10.000\n[MUSIC]\n\n2\n00:00:11.747 --> 00:00:16.413\nAll right, greetings everyone and welcome\nto another great episode of ITProTv.\n\n3\n00:00:16.413 --> 00:00:18.070\nI'm your host, Daniel Lowrie, and\n\n4\n00:00:18.070 --> 00:00:22.210\nin today's episode we're taking a look at\nthe AWS certified sys ops administrator.\n\n5\n00:00:22.210 --> 00:00:25.260\nJoining me in the studio today is none\nother than my good friend, Mr. Don Pezet.\n\n6\n00:00:25.260 --> 00:00:26.200\nDon, welcome to the show.\n\n7\n00:00:26.200 --> 00:00:27.080\nHow you doing today, sir?\n\n8\n00:00:27.080 --> 00:00:27.857\n>> I am doing great Daniel.\n\n9\n00:00:27.857 --> 00:00:30.758\nThanks for having me here, and\nexcited to jump back into the world\n\n10\n00:00:30.758 --> 00:00:34.280\nof Amazon Web Services and\nthe sys ops administrator certification.\n\n11\n00:00:34.280 --> 00:00:35.692\nWe got a cool show lined up for you today.\n\n12\n00:00:35.692 --> 00:00:39.750\nWe're gonna be tackling EC2\ndisk storage and I know it\n\n13\n00:00:39.750 --> 00:00:43.310\nseems kinda weird because the whole point\nis that Amazon manages this stuff for\n\n14\n00:00:43.310 --> 00:00:47.030\nus, but we do need to be aware of some\nof the little ins and outs of storage.\n\n15\n00:00:47.030 --> 00:00:50.352\nAnd you guys have learned previously\nabout Amazon instances and\n\n16\n00:00:50.352 --> 00:00:53.243\nspinning up VMs and\ngetting them running up in EC2, but\n\n17\n00:00:53.243 --> 00:00:57.137\nthere's a lot of decisions that we\nmake about storage that are important.\n\n18\n00:00:57.137 --> 00:00:59.730\nAnd so I wanna make sure that we cover\neach of the little ins and outs.\n\n19\n00:00:59.730 --> 00:01:02.058\nAnd make sure we're choosing\nthe right storage for the right job.\n\n20\n00:01:02.058 --> 00:01:02.920\nAnd it is important.\n\n21\n00:01:02.920 --> 00:01:06.799\n>> Yeah Don, I was kinda hoping it was\njust gonna be, here's some storage,\n\n22\n00:01:06.799 --> 00:01:08.050\nmake it this size.\n\n23\n00:01:08.050 --> 00:01:08.700\nAnd you're done.\n\n24\n00:01:08.700 --> 00:01:10.621\nBut obviously I'm looking\nover your notes here.\n\n25\n00:01:10.621 --> 00:01:13.049\nIt seems to be a little\nmore complex than that.\n\n26\n00:01:13.049 --> 00:01:14.147\nSo where do we begin?\n\n27\n00:01:14.147 --> 00:01:15.208\n>> All right, well, you know,\n\n28\n00:01:15.208 --> 00:01:17.718\nhonestly Daniel, you certainly could\ntreat it the way that you said.\n\n29\n00:01:17.718 --> 00:01:22.370\nWhich is, if you go to spin up a new EC2\ninstance, you can just click next a bunch\n\n30\n00:01:22.370 --> 00:01:26.765\nof times and finish the wizard and\nnot even blink an eye at storage, right.\n\n31\n00:01:26.765 --> 00:01:30.846\nBut there's actually several decisions\nthat we make throughout the process, and\n\n32\n00:01:30.846 --> 00:01:34.530\nlet me just kind of show you how we\ndon't necessarily see what's going on.\n\n33\n00:01:34.530 --> 00:01:38.050\nSo, I've got my EC2 council\npulled up right here.\n\n34\n00:01:38.050 --> 00:01:43.260\nAnd if I go into EC2 and\nI'll spin up a new instance, right?\n\n35\n00:01:43.260 --> 00:01:48.500\nSo I'll go here under Instances and\nI'll just launch a new instance, and\n\n36\n00:01:48.500 --> 00:01:51.590\nwhen I go through, I'm going to pick\nmy AMI that I want to go with and\n\n37\n00:01:51.590 --> 00:01:54.360\nI'll pick like,\nan Amazon Linux AMI, all right?\n\n38\n00:01:54.360 --> 00:01:59.080\nWell, when I do that, it's actually\nalready making one decision for me.\n\n39\n00:01:59.080 --> 00:02:03.470\nNotice right here how it\nsays root device type EBS.\n\n40\n00:02:03.470 --> 00:02:05.540\nOkay, that means that the root drive for\n\n41\n00:02:05.540 --> 00:02:09.100\nthis system is going to\nbe elastic block storage.\n\n42\n00:02:09.100 --> 00:02:11.990\nWhen you spin up a VM there's actually\ntwo different types of storage.\n\n43\n00:02:11.990 --> 00:02:15.280\nWe don't see this a lot, cuz it's\nall kind of behind the scenes, but\n\n44\n00:02:15.280 --> 00:02:19.210\nthere's elastic block storage and\nthere's instance store storage.\n\n45\n00:02:19.210 --> 00:02:22.610\nThat's kind of redundant, but that's what\nit's called, instance store storage.\n\n46\n00:02:22.610 --> 00:02:25.688\nAnd when you spin up a VM, its important\nthat we understand what those are.\n\n47\n00:02:25.688 --> 00:02:29.825\nAll right, well where it starts to get\na little complex is that you're VM isn't\n\n48\n00:02:29.825 --> 00:02:32.913\nnecessarily going to be just EBS or\njust instance store, or\n\n49\n00:02:32.913 --> 00:02:35.490\nit could actually be a mixture of the two.\n\n50\n00:02:35.490 --> 00:02:38.980\nYou could have some drives on your\nsystem that are instance stored and\n\n51\n00:02:38.980 --> 00:02:40.930\nothers that are EBS.\n\n52\n00:02:40.930 --> 00:02:41.680\nIt is very possible.\n\n53\n00:02:41.680 --> 00:02:45.370\nIt's not necessarily a great idea,\nbut you certainly can do it.\n\n54\n00:02:45.370 --> 00:02:48.860\nSo we need to understand that, and\nbefore we can understand that,\n\n55\n00:02:48.860 --> 00:02:50.640\nwe need to understand\nwhen each is appropriate,\n\n56\n00:02:50.640 --> 00:02:53.410\nso let's start out talking\nabout the other part here.\n\n57\n00:02:53.410 --> 00:02:57.330\nIt's telling me the root device is EBS,\nall right?\n\n58\n00:02:57.330 --> 00:02:58.750\nSo what does it mean by that?\n\n59\n00:02:58.750 --> 00:03:02.490\nWell, in Amazon land,\nwhen you spin up a new instance,\n\n60\n00:03:02.490 --> 00:03:05.410\nat a minimum you're gonna\nhave one storage drive.\n\n61\n00:03:05.410 --> 00:03:07.549\nBecause you gotta put the operating\nsystem somewhere, right?\n\n62\n00:03:07.549 --> 00:03:09.310\nYou're gonna boot up a virtual machine.\n\n63\n00:03:09.310 --> 00:03:13.080\nIt's got an operating system, it's gonna\nbe Linux, or Windows, or whatever.\n\n64\n00:03:13.080 --> 00:03:15.140\nIt's gotta store that OS somewhere,\nand for\n\n65\n00:03:15.140 --> 00:03:17.780\nthat it's gonna do it on the root device.\n\n66\n00:03:17.780 --> 00:03:22.210\nAnd then you may choose to have\nother drives, or you may not.\n\n67\n00:03:22.210 --> 00:03:25.820\nAnd if you do choose to have other drives,\nthat's where your data is going to go.\n\n68\n00:03:25.820 --> 00:03:28.490\nAnd Amazon just calls those\nadditional disks, right?\n\n69\n00:03:28.490 --> 00:03:30.860\nSo you've got a root device, and\nthen you've got additional disks.\n\n70\n00:03:30.860 --> 00:03:32.590\nSo those are the official terms.\n\n71\n00:03:32.590 --> 00:03:36.830\nAnd the root device, the type is\ngonna be determined right away.\n\n72\n00:03:36.830 --> 00:03:39.960\nWhen you spin up that instance,\nit's gonna be determined.\n\n73\n00:03:39.960 --> 00:03:42.740\nAnd there is not a good way to\nchange from one to the other.\n\n74\n00:03:42.740 --> 00:03:44.690\nLike when you spin up one, it's that one.\n\n75\n00:03:44.690 --> 00:03:47.680\nAnd I'll talk a little bit later\nabout how you kind of convert it for\n\n76\n00:03:47.680 --> 00:03:48.670\nadditional disks.\n\n77\n00:03:48.670 --> 00:03:51.840\nBut for root devices it's very,\nvery difficult to change that over.\n\n78\n00:03:51.840 --> 00:03:53.400\nSo we need to be aware of that.\n\n79\n00:03:53.400 --> 00:03:54.310\nWe need to understand it.\n\n80\n00:03:54.310 --> 00:03:56.440\nNow why is this all important?\n\n81\n00:03:56.440 --> 00:04:00.320\nWell, the root device is probably the most\nimportant, cuz it's where our operating\n\n82\n00:04:00.320 --> 00:04:04.240\nsystem is, and depending on the storage\ntype that we choose, it's gonna impact\n\n83\n00:04:04.240 --> 00:04:08.640\nwhether or not this data is what's\ncalled persistent, or ephemeral, right?\n\n84\n00:04:08.640 --> 00:04:11.980\nPersistent data is data that's\nalways gonna be there for me.\n\n85\n00:04:11.980 --> 00:04:15.990\nIf I shut those instance down and I bring\nit back up, if I fail it over to another\n\n86\n00:04:15.990 --> 00:04:21.340\nregion, if I terminate the incidents, this\nis data that's gonna stay around for me.\n\n87\n00:04:21.340 --> 00:04:24.340\nEphemeral storage,\nthat's data that comes and goes, right?\n\n88\n00:04:24.340 --> 00:04:26.480\nThat I can't count on\nbeing there tomorrow.\n\n89\n00:04:26.480 --> 00:04:29.910\nThis can't be sensitive critical data,\ncuz it's data that might be gone.\n\n90\n00:04:29.910 --> 00:04:31.450\nSo, depending on the choices I make,\n\n91\n00:04:31.450 --> 00:04:34.950\nI'm actually choosing between whether I\nwant persistent storage and ephemeral.\n\n92\n00:04:34.950 --> 00:04:36.630\nAnd so we need to make sure\nwe've got a grasp on that.\n\n93\n00:04:36.630 --> 00:04:41.350\nSo let's just start with kind of\ntalking about those root disks, right?\n\n94\n00:04:41.350 --> 00:04:45.560\nSo the root device, when you spin up\na new instance it's determining right?\n\n95\n00:04:45.560 --> 00:04:47.580\nSo this one is EBS.\n\n96\n00:04:47.580 --> 00:04:50.940\nAnd if I look down the list here at\nthe ones that Amazon's recommending for\n\n97\n00:04:50.940 --> 00:04:54.300\nme, I mean they're just EBS\nall the way down the line.\n\n98\n00:04:54.300 --> 00:04:56.250\nIn fact, are they all EBS these days?\n\n99\n00:04:56.250 --> 00:04:57.860\nI think they probably are.\n\n100\n00:04:57.860 --> 00:05:01.220\nI don't wanna bore us by going\nthrough the full list of 10,000 AMIs.\n\n101\n00:05:01.220 --> 00:05:03.110\nBut, of the 20 or so\n\n102\n00:05:03.110 --> 00:05:07.085\nthat are default AMIs here,\nevery one of them had that root type EBS.\n\n103\n00:05:07.085 --> 00:05:10.820\nOkay, but, it wasn't always like that.\n\n104\n00:05:10.820 --> 00:05:12.310\nEBS wasn't always around, right?\n\n105\n00:05:12.310 --> 00:05:15.150\nSo before EBS,\neverything was instance store.\n\n106\n00:05:15.150 --> 00:05:18.990\nAnd so, even today, when you go to spin up\nvirtual machines, when you go to spin up\n\n107\n00:05:18.990 --> 00:05:21.950\na new instance, you'll still find\nones that are instance store.\n\n108\n00:05:21.950 --> 00:05:28.110\nLet me show you, if I go down here to like\nthe AWS, I'll go to the Community AMIs.\n\n109\n00:05:28.110 --> 00:05:30.836\nIf I go to the Community AMIs right, and\n\n110\n00:05:30.836 --> 00:05:35.547\nI use my filter over here on the left,\nI can actually use my filter and\n\n111\n00:05:35.547 --> 00:05:40.526\ntell it to show me just devices where\nthe root device is instance store.\n\n112\n00:05:40.526 --> 00:05:43.553\nAnd when I check that off I'm\ngonna see some instances and\n\n113\n00:05:43.553 --> 00:05:45.150\nincluding ones from Amazon.\n\n114\n00:05:45.150 --> 00:05:46.910\nHere's an Amazon Linux AMI,\n\n115\n00:05:46.910 --> 00:05:52.170\nthis one's from Amazon and it's from 2012,\nit's a little bit old right.\n\n116\n00:05:52.170 --> 00:05:54.810\nSo, it's easy to think well,\nthese are the old the old VM's,\n\n117\n00:05:54.810 --> 00:05:57.380\nthe new AMI's aren't\ngoing to be like that.\n\n118\n00:05:57.380 --> 00:05:59.120\nWell, that's not necessarily true.\n\n119\n00:05:59.120 --> 00:06:03.434\nIf I scroll around, here's one\nright here from September of 2015.\n\n120\n00:06:03.434 --> 00:06:05.609\nThat's what, like two months ago,\nthree months ago?\n\n121\n00:06:05.609 --> 00:06:07.940\nSo that's not very far back.\n\n122\n00:06:07.940 --> 00:06:11.710\nAnd here's one where the root device\ntype is instance store, right.\n\n123\n00:06:11.710 --> 00:06:16.640\nSo when you spin up a new AMI, or\nnew instance based on the AMI,\n\n124\n00:06:16.640 --> 00:06:19.840\nthat's where it's determining what\nthat root type is going to be, and so\n\n125\n00:06:19.840 --> 00:06:22.220\nit can be instance store or it can be EBS.\n\n126\n00:06:22.220 --> 00:06:26.670\nNow, when we start adding additional\ndrives, additional drives like\n\n127\n00:06:26.670 --> 00:06:29.340\nin Microsoft Windows, those are gonna be,\nyou have your C drive.\n\n128\n00:06:29.340 --> 00:06:31.660\nThat's your root drive, your OS drive.\n\n129\n00:06:31.660 --> 00:06:35.110\nThen you have D and E and F and all those\nother drive letters that are out there.\n\n130\n00:06:35.110 --> 00:06:37.840\nIn Linux, well you can mount\nthem wherever you want right?\n\n131\n00:06:37.840 --> 00:06:40.150\nSo you have your slash,\nthat's usually your root drive.\n\n132\n00:06:40.150 --> 00:06:41.940\nBut then after that you\ncan mount them wherever.\n\n133\n00:06:41.940 --> 00:06:48.360\nSo you have a /dev/sdb1, /dev/stc1 and\nso on depending on how you do it.\n\n134\n00:06:48.360 --> 00:06:53.480\nYou might see like /dev/xvdd or whatever.\n\n135\n00:06:53.480 --> 00:06:56.700\nSo it can kind of vary there but\nthat's just the drive name and\n\n136\n00:06:56.700 --> 00:06:58.010\nthen you mount it to\nwhatever folder you want.\n\n137\n00:06:58.010 --> 00:07:01.430\nBut those additional disks,\nthey can be spun up as EBS, and\n\n138\n00:07:01.430 --> 00:07:04.200\nthat's kind of what the default is,\nthey spin up as EBS.\n\n139\n00:07:04.200 --> 00:07:06.570\nAnd that's kind of what we've got.\n\n140\n00:07:06.570 --> 00:07:08.705\nNow, why do I care?\n\n141\n00:07:08.705 --> 00:07:11.450\n[LAUGH] That's a great place to go, right?\n\n142\n00:07:11.450 --> 00:07:14.150\nWhy do I care if it's instance store or\nEBS?\n\n143\n00:07:14.150 --> 00:07:16.890\nWell, instance store is\nthe older technology.\n\n144\n00:07:16.890 --> 00:07:20.570\nIt does still have a place,\nit is still useful in certain scenarios.\n\n145\n00:07:20.570 --> 00:07:22.178\nMostly cuz it's cheaper, right?\n\n146\n00:07:22.178 --> 00:07:24.500\nThey actually charge a little bit less for\ninstance store than they do for\n\n147\n00:07:24.500 --> 00:07:28.480\nEBS, but for most of us,\nwe already use EBS for everything.\n\n148\n00:07:28.480 --> 00:07:30.020\nBut for the exam,\nyou need to know about both,\n\n149\n00:07:30.020 --> 00:07:33.270\nbecause if you go out to\nsupport an AWS environment,\n\n150\n00:07:33.270 --> 00:07:36.710\nsomebody might be running instances\nthat were spun up five years ago, right?\n\n151\n00:07:36.710 --> 00:07:40.821\nAWS has been around a while, and there's\nno good way to migrate from instance store\n\n152\n00:07:40.821 --> 00:07:44.520\nto EBS, and so while EBS might be better,\nyou may still encounter machines\n\n153\n00:07:44.520 --> 00:07:47.482\nthat are running instance store\nbecause that's how it is.\n\n154\n00:07:47.482 --> 00:07:51.134\nOr if you're doing marketplace AMIs, where\na third party's building them for you,\n\n155\n00:07:51.134 --> 00:07:54.784\nif they've chosen to build it as instance\nstore, that's what they've chosen, and\n\n156\n00:07:54.784 --> 00:07:58.026\nthat's what you've got to go with, so\nthat's why we need to be aware of it,\n\n157\n00:07:58.026 --> 00:07:58.563\nall right?\n\n158\n00:07:58.563 --> 00:08:01.736\nSo let's talk about Instant Store.\n\n159\n00:08:01.736 --> 00:08:06.026\nI kinda talk about it and I make it\nsound bad, because technically it is.\n\n160\n00:08:06.026 --> 00:08:07.381\n>> [LAUGH]\n>> But it does have a purpose.\n\n161\n00:08:07.381 --> 00:08:10.585\nSo let's talk a little bit\nabout why I say it's bad.\n\n162\n00:08:10.585 --> 00:08:13.383\nYou'll hear, even on the exam.\n\n163\n00:08:13.383 --> 00:08:15.900\nThey use these terms interchangeably where\nthey don't always call it Instant Store.\n\n164\n00:08:15.900 --> 00:08:17.840\nSometimes they call it ephemeral storage.\n\n165\n00:08:17.840 --> 00:08:20.050\nIn the very, very early days of Amazon.\n\n166\n00:08:20.050 --> 00:08:21.499\nThey called it a ephemoral storage.\n\n167\n00:08:21.499 --> 00:08:23.915\nNow they call it Instant Store,\nbut you see both.\n\n168\n00:08:23.915 --> 00:08:26.040\nEven in the documentation on the website.\n\n169\n00:08:26.040 --> 00:08:29.180\nAnd, the reason they were calling it\na ephemoral is they wanted you to\n\n170\n00:08:29.180 --> 00:08:32.430\nabsolutely understand that\nthis was not permanent data.\n\n171\n00:08:32.430 --> 00:08:36.510\nThat if I spun up a web server, and\nI had a website that was on it.\n\n172\n00:08:36.510 --> 00:08:38.954\nAnd I terminated that instance,\nthe website was now gone.\n\n173\n00:08:38.954 --> 00:08:44.180\nOr, if there was an underlying failure in\nthe Amazon hardware, and they had to move\n\n174\n00:08:44.180 --> 00:08:47.480\nthat instance to another region, or\neven another rack in the same region.\n\n175\n00:08:47.480 --> 00:08:49.470\nThat data was gone, right?\n\n176\n00:08:49.470 --> 00:08:51.607\nThat that data would get\nlost at the drop of a hat.\n\n177\n00:08:51.607 --> 00:08:53.604\nIn fact, the only time that data stays.\n\n178\n00:08:53.604 --> 00:08:54.823\nWell, I guess it was two times.\n\n179\n00:08:54.823 --> 00:08:59.519\nOne, when the server's running\nlike normal, the data stays.\n\n180\n00:09:00.580 --> 00:09:02.020\nOr if you reboot it.\n\n181\n00:09:02.020 --> 00:09:04.360\nIf you reboot the instance,\nthe data stays.\n\n182\n00:09:04.360 --> 00:09:06.840\nBut if you shut the instance down,\nor actually.\n\n183\n00:09:06.840 --> 00:09:09.268\nYou can't shut an Instant Store\ninstance down.\n\n184\n00:09:09.268 --> 00:09:13.747\nIf you spin up an instance where\nthe root store is an instant store.\n\n185\n00:09:13.747 --> 00:09:16.221\nThat root drive is an instant store,\nyou can't shut it down.\n\n186\n00:09:16.221 --> 00:09:17.882\nYou can reboot it.\n\n187\n00:09:17.882 --> 00:09:18.902\nYou can terminate it.\n\n188\n00:09:18.902 --> 00:09:19.760\nBut you can't shut it down.\n\n189\n00:09:19.760 --> 00:09:21.040\nYou can't stop it.\n\n190\n00:09:21.040 --> 00:09:24.080\n>> If you shut it down we would lose\neverything on that drive, right?\n\n191\n00:09:24.080 --> 00:09:25.730\n>> Yeah and so\nyou might as well terminate it, right?\n\n192\n00:09:25.730 --> 00:09:29.730\nBecause if you think about it,\nwhen you stop an instance, what happens?\n\n193\n00:09:29.730 --> 00:09:31.520\nYou give the CPU back to Amazon.\n\n194\n00:09:31.520 --> 00:09:33.510\nYou give the RAM back to Amazon.\n\n195\n00:09:33.510 --> 00:09:36.080\nYou give everything back to\nAmazon except the storage.\n\n196\n00:09:36.080 --> 00:09:37.900\nAnd so while that instance is stopped.\n\n197\n00:09:37.900 --> 00:09:40.450\nYou're only paying your storage bill.\n\n198\n00:09:40.450 --> 00:09:43.130\nSo on an instance with EBS,\nwhere your data's preserved.\n\n199\n00:09:43.130 --> 00:09:43.720\nThat makes sense.\n\n200\n00:09:43.720 --> 00:09:45.470\nLike hey,\nI'm not using that server right now.\n\n201\n00:09:45.470 --> 00:09:47.640\nLet me shut it down so\nI can save some money.\n\n202\n00:09:47.640 --> 00:09:50.310\nBut if you get ephemeral storage,\nif it's temporary.\n\n203\n00:09:50.310 --> 00:09:53.590\nIf you were to shut it down,\nyou'd give the RAM back to Amazon.\n\n204\n00:09:53.590 --> 00:09:55.480\nYou'd give the CPU back to Amazon.\n\n205\n00:09:55.480 --> 00:09:58.240\nAnd you just pay your storage,\nbut it's temporary storage.\n\n206\n00:09:58.240 --> 00:09:58.870\nSo what's to save?\n\n207\n00:09:58.870 --> 00:10:00.430\nYou might as well just terminate it.\n\n208\n00:10:00.430 --> 00:10:02.020\nAnd then you don't pay anything.\n\n209\n00:10:02.020 --> 00:10:03.596\nYou don't pay storage, you don't pay rent.\n\n210\n00:10:03.596 --> 00:10:04.491\nYou don't pay anything.\n\n211\n00:10:04.491 --> 00:10:06.880\nIt's absolutely free at that point,\ncuz it's gone.\n\n212\n00:10:06.880 --> 00:10:08.990\nAnd then you just spin up a new\ninstance when you need it.\n\n213\n00:10:08.990 --> 00:10:13.200\nSo that's why you can't stop a system\nthat has a root drive that's on\n\n214\n00:10:13.200 --> 00:10:14.200\nan instance store.\n\n215\n00:10:14.200 --> 00:10:14.770\nAll right.\n\n216\n00:10:14.770 --> 00:10:17.590\nSo, a little, that,\nthat can turn up on the exam actually.\n\n217\n00:10:17.590 --> 00:10:19.300\nSo I'm kinda glad you mentioned it.\n\n218\n00:10:19.300 --> 00:10:22.120\nBut that is a big difference\nthat we have there.\n\n219\n00:10:22.120 --> 00:10:23.220\nA few other things to think about.\n\n220\n00:10:23.220 --> 00:10:25.680\nLet's see, when I spin up an instance.\n\n221\n00:10:25.680 --> 00:10:27.820\nAll right,\nlet's go back to my wizard here.\n\n222\n00:10:27.820 --> 00:10:29.340\nWhen I spin up in instance, right?\n\n223\n00:10:29.340 --> 00:10:32.250\nLet me just go to the quick start AMIs.\n\n224\n00:10:32.250 --> 00:10:34.930\nAnd I'm gonna pick this\nAmazon Linux instance here.\n\n225\n00:10:34.930 --> 00:10:38.590\nAnd see how that root device type is EBS,\nokay.\n\n226\n00:10:38.590 --> 00:10:41.790\nIf I select that and\nstarting moving through.\n\n227\n00:10:41.790 --> 00:10:43.480\nI'll just jump all the way\nup to Add Storage.\n\n228\n00:10:43.480 --> 00:10:46.859\nWhen we go to look at the storage,\nnotice the storage right here.\n\n229\n00:10:46.859 --> 00:10:49.693\nThe root drive is /dev/xvda.\n\n230\n00:10:49.693 --> 00:10:52.760\nI'm glad I mentioned that X earlier,\ncuz it does show up that way sometimes.\n\n231\n00:10:52.760 --> 00:10:55.990\nI see a snapshot, I see a size,\nit's general purpose.\n\n232\n00:10:55.990 --> 00:10:57.900\nAnd then right over here\nI've got this column.\n\n233\n00:10:57.900 --> 00:10:59.450\nDelete on termination.\n\n234\n00:10:59.450 --> 00:11:00.244\nAll right.\n\n235\n00:11:00.244 --> 00:11:06.420\nThe default for EBS, when you delete,\nor when you terminate an instance.\n\n236\n00:11:06.420 --> 00:11:10.530\nIf there's EBS volumes attached to it,\nit's going to get deleted.\n\n237\n00:11:10.530 --> 00:11:12.310\nDelete on termination for\nthat root volume.\n\n238\n00:11:12.310 --> 00:11:13.880\nThe root volume's going to go away.\n\n239\n00:11:13.880 --> 00:11:15.960\nSo it kind of treats it\nlike a ephemoral storage.\n\n240\n00:11:15.960 --> 00:11:16.830\nRight?\n\n241\n00:11:16.830 --> 00:11:18.625\nBut I can change that with a check.\n\n242\n00:11:18.625 --> 00:11:21.560\n[LAUGH] This will be the most\ncomplex thing I do today.\n\n243\n00:11:21.560 --> 00:11:25.500\nSo as you uncheck it, and\nnow if I were to terminate this instance\n\n244\n00:11:25.500 --> 00:11:27.790\nthe root volume will stay\nthere in my volume list.\n\n245\n00:11:27.790 --> 00:11:28.908\nI'll have a copy of it and\n\n246\n00:11:28.908 --> 00:11:31.797\nI'll be able to access it in case\nI actually put some data there.\n\n247\n00:11:31.797 --> 00:11:35.674\nNow Amazon tells you,\ndon't put data on the root drive.\n\n248\n00:11:35.674 --> 00:11:38.618\nBecause of this very reason, right,\nbecause of that delete on termination\n\n249\n00:11:38.618 --> 00:11:41.500\nmight be turned on,\nyou terminate your VM you lose it, right?\n\n250\n00:11:41.500 --> 00:11:44.765\nInstead they say hey, if you're going\nto start storing some real data,\n\n251\n00:11:44.765 --> 00:11:45.576\nadd a new volume.\n\n252\n00:11:45.576 --> 00:11:50.509\nAdd a new volume on there,\nsee how it's /dev/sdb, right.\n\n253\n00:11:50.509 --> 00:11:53.179\nSo there's that device name that is given.\n\n254\n00:11:53.179 --> 00:11:56.900\nAnd see how it doesn't delete\non termination by default?\n\n255\n00:11:56.900 --> 00:11:58.850\nRemember that for the exam,\nthat might turn up.\n\n256\n00:11:58.850 --> 00:12:00.317\nHint, hint.\n\n257\n00:12:00.317 --> 00:12:04.798\nSo Delete on Termination is on for\nthe root volume.\n\n258\n00:12:04.798 --> 00:12:08.955\nOff for any additional discs that you\nadd when it comes to EBS volumes.\n\n259\n00:12:08.955 --> 00:12:12.280\nYou can turn it on and now they're\nbasically gonna be treated like ephemeral.\n\n260\n00:12:12.280 --> 00:12:15.510\nIf I terminate this instance they'll\nboth delete, and that's that.\n\n261\n00:12:15.510 --> 00:12:18.810\nKey thing to remember,\nyou can't change this after the fact.\n\n262\n00:12:18.810 --> 00:12:22.080\nOnce you've spun this instance up,\nthese values are now set.\n\n263\n00:12:22.080 --> 00:12:24.000\nSo you've gotta make the decision now.\n\n264\n00:12:24.000 --> 00:12:24.510\nRight?\n\n265\n00:12:24.510 --> 00:12:26.034\nDo I want to enable this or not?\n\n266\n00:12:26.034 --> 00:12:31.014\nAnd a lot of times, if you're really good\nabout not storing data on your root drive.\n\n267\n00:12:31.014 --> 00:12:31.896\nThen this is what you want.\n\n268\n00:12:31.896 --> 00:12:34.770\nGo ahead and\ndelete the root drive when you terminate.\n\n269\n00:12:34.770 --> 00:12:35.980\nBut save my data discs.\n\n270\n00:12:35.980 --> 00:12:38.400\nThat way I might need to attach\nthem to another instance.\n\n271\n00:12:38.400 --> 00:12:41.007\nOr just access data from them,\nor whatever, right?\n\n272\n00:12:41.007 --> 00:12:43.446\nBut if you're bad about\nseparating the data.\n\n273\n00:12:43.446 --> 00:12:46.410\nYou gotta have self-honesty\nwhen you work with the Cloud.\n\n274\n00:12:46.410 --> 00:12:48.280\nSo if you're bad about storing\ndata on that root drive.\n\n275\n00:12:48.280 --> 00:12:49.952\nYou might wanna turn that off.\n\n276\n00:12:49.952 --> 00:12:52.355\nAnd then when you do terminate this.\n\n277\n00:12:52.355 --> 00:12:54.230\nIf you know there's no\ndata on that root drive.\n\n278\n00:12:54.230 --> 00:12:55.210\nYou can just go and delete the volume.\n\n279\n00:12:55.210 --> 00:12:58.330\nYou just have to manually delete the\nvolume when you terminate the instance.\n\n280\n00:12:58.330 --> 00:13:01.180\n>> So, this doesn't sound too much\ndifferent than with what we normally with\n\n281\n00:13:01.180 --> 00:13:02.050\nphysical equipment.\n\n282\n00:13:02.050 --> 00:13:04.920\nWe normally get a drive,\nwe install an operating system.\n\n283\n00:13:04.920 --> 00:13:06.725\nAnd then we add other drives and\n\n284\n00:13:06.725 --> 00:13:11.043\nthen we have people access those drive\nto stay away from the system drive.\n\n285\n00:13:11.043 --> 00:13:12.320\nWe have something happen with the system.\n\n286\n00:13:12.320 --> 00:13:14.460\nWe're good to go, we just re-install.\n\n287\n00:13:14.460 --> 00:13:15.770\nAll our data's still there.\n\n288\n00:13:15.770 --> 00:13:19.010\nAnd we're probably taking multiple\nbackups of that data as well.\n\n289\n00:13:19.010 --> 00:13:21.952\n>> Yeah, all of this stuff is really\nmodeled off of what we do of physical\n\n290\n00:13:21.952 --> 00:13:22.524\nequipment.\n\n291\n00:13:22.524 --> 00:13:26.423\nThe only difference here is just so\neasy to rapidly provision stuff and\n\n292\n00:13:26.423 --> 00:13:30.998\neliminate stuff that it's just on way\nfaster than we do with physical equipment.\n\n293\n00:13:30.998 --> 00:13:31.660\nAll right now.\n\n294\n00:13:31.660 --> 00:13:35.162\nSo you'll notice on the left side here\nwhen I added this additional volume that\n\n295\n00:13:35.162 --> 00:13:35.862\nit's got EBS.\n\n296\n00:13:35.862 --> 00:13:39.035\nAnd if I drop that down,\nit's a massive list of selections here for\n\n297\n00:13:39.035 --> 00:13:40.340\nme to pick from.\n\n298\n00:13:40.340 --> 00:13:43.450\nYou know, EBS and that's it.\n\n299\n00:13:43.450 --> 00:13:47.218\nSo, it's not like I can flip from EBS\nto instant store on this one, right?\n\n300\n00:13:47.218 --> 00:13:51.096\nSo this one's got me locked in but\nthere are some AMIs that you'll choose.\n\n301\n00:13:51.096 --> 00:13:54.206\nEspecially older AMIs where you can drop\nthat down and pick instant store and\n\n302\n00:13:54.206 --> 00:13:56.840\nthat's where I was saying you\ncan actually mix and match.\n\n303\n00:13:56.840 --> 00:13:59.277\nSo if you've ever wondered,\nif you're new to AWS, right?\n\n304\n00:13:59.277 --> 00:14:01.856\nIf you're just getting started this year.\n\n305\n00:14:01.856 --> 00:14:03.959\nThen you're like,\nwhy the heck is that even a drop down box,\n\n306\n00:14:03.959 --> 00:14:04.920\nit's only got one option?\n\n307\n00:14:04.920 --> 00:14:05.950\nThis is dumb.\n\n308\n00:14:05.950 --> 00:14:07.650\nWell, the reason is for\n\n309\n00:14:07.650 --> 00:14:10.950\nolder AMIs, you actually had\nthe ability to switch between them.\n\n310\n00:14:10.950 --> 00:14:12.310\nEBS wasn't always around.\n\n311\n00:14:12.310 --> 00:14:14.240\nIt was new for a while and\npeople didn't like it.\n\n312\n00:14:14.240 --> 00:14:17.240\nAnd so you'd switch back over to\nInstanteStore and kind of run with that.\n\n313\n00:14:17.240 --> 00:14:21.844\nAnd I know what you're thinking is,\npeople didn't like saving their data.\n\n314\n00:14:21.844 --> 00:14:22.981\n>> [LAUGH]\n>> That's crazy talk.\n\n315\n00:14:22.981 --> 00:14:25.118\nWell we had a number of solutions for\nthat.\n\n316\n00:14:25.118 --> 00:14:28.997\nAnd what you were supposed to do, or\nthe way that you'll find people that\n\n317\n00:14:28.997 --> 00:14:31.680\nstarted in AWS four or\nfive years ago do it.\n\n318\n00:14:31.680 --> 00:14:34.560\nIs, let's say I have a web server, right?\n\n319\n00:14:34.560 --> 00:14:37.390\nAnd I know that I'm gonna have\nmy website stored in this VM.\n\n320\n00:14:37.390 --> 00:14:40.370\nAnd I don't want to lose my\nwebsite every time I terminate, or\n\n321\n00:14:40.370 --> 00:14:41.980\nshut down an instance or whatever.\n\n322\n00:14:41.980 --> 00:14:44.270\nI want to keep that data around.\n\n323\n00:14:44.270 --> 00:14:46.180\nBut I want to do things like auto-scale.\n\n324\n00:14:46.180 --> 00:14:49.890\nI want to have not just one server,\nbut maybe 100 web servers right now.\n\n325\n00:14:49.890 --> 00:14:53.520\nMaybe 50 later, maybe 35,\nwhatever I wanna be able to move.\n\n326\n00:14:53.520 --> 00:14:55.350\nAnd they all need to have this data.\n\n327\n00:14:55.350 --> 00:14:59.280\nAnd so what we would do is you'd spin\nup servers that had ephemeral storage.\n\n328\n00:14:59.280 --> 00:15:01.881\nYou wanted it to be ephemeral because\nwhen you terminated an instance.\n\n329\n00:15:01.881 --> 00:15:03.550\nYou didn't wanna pay for it anymore.\n\n330\n00:15:03.550 --> 00:15:08.425\nSo if I have 35 servers now, and\nthe site gets busy and I spin up to 50.\n\n331\n00:15:08.425 --> 00:15:11.722\nWhen I drop back down to 35 again.\n\n332\n00:15:11.722 --> 00:15:14.763\nThose 15 machines that I just terminated,\nI don't want to pay a dime for\n\n333\n00:15:14.763 --> 00:15:15.770\nthem any more.\n\n334\n00:15:15.770 --> 00:15:18.460\nEven the storage that we would\nsave which EBS would do.\n\n335\n00:15:18.460 --> 00:15:20.230\nSo I want them to be gone.\n\n336\n00:15:20.230 --> 00:15:21.340\nEverything gone about them.\n\n337\n00:15:21.340 --> 00:15:22.768\nBut, when I spin up a new instance.\n\n338\n00:15:22.768 --> 00:15:24.359\nWhere does it get the website from?\n\n339\n00:15:24.359 --> 00:15:26.227\nYou could bake it into the AMI.\n\n340\n00:15:26.227 --> 00:15:28.567\nBut then every time you update your\nwebsite you have got to go and\n\n341\n00:15:28.567 --> 00:15:29.106\nedit the AMI.\n\n342\n00:15:29.106 --> 00:15:31.847\nAnd then you've got all these existing\nservers you'd have to terminate so\n\n343\n00:15:31.847 --> 00:15:33.510\nthat the new ones would\ncome up to replace it.\n\n344\n00:15:33.510 --> 00:15:34.440\nIt's a hassle.\n\n345\n00:15:34.440 --> 00:15:37.000\nSo instead,\nwhat Amazon always recommended was.\n\n346\n00:15:37.000 --> 00:15:40.410\nWhy don't you take all your website and\nstore it in S3.\n\n347\n00:15:40.410 --> 00:15:41.853\nPut it in an S3 bucket.\n\n348\n00:15:41.853 --> 00:15:45.174\nAnd then when your web server comes up,\nas part of its boot process.\n\n349\n00:15:45.174 --> 00:15:49.074\nTry to reach out and grab a copy of\nthe website and cache it from S3.\n\n350\n00:15:49.074 --> 00:15:51.593\nAnd that way your web servers always\nhave the latest copy of the web site.\n\n351\n00:15:51.593 --> 00:15:54.830\nAnd if you want to edit your website\nyou just go to S3 and add it in, right.\n\n352\n00:15:54.830 --> 00:15:58.304\nOr you could spin up your own instance on\nthe backend and have it do like rsync,\n\n353\n00:15:58.304 --> 00:16:00.610\nor whatever to sync the web\npage to these machines.\n\n354\n00:16:00.610 --> 00:16:04.614\nSo they come up with temporary storage,\nand if they get shut down it's all gone.\n\n355\n00:16:04.614 --> 00:16:06.665\nBut when they boot back up they\njust sync it right back again from\n\n356\n00:16:06.665 --> 00:16:08.491\nthe central storage, and\nit's the perfect solution.\n\n357\n00:16:08.491 --> 00:16:11.950\nSo a lot of people had that deployed and\nwere very very happy with it.\n\n358\n00:16:11.950 --> 00:16:15.290\nSo when EBS came out, it was great,\nbut a lot of people didn't need it.\n\n359\n00:16:15.290 --> 00:16:16.770\nThey already had a solution.\n\n360\n00:16:16.770 --> 00:16:20.140\nAnd a solution that worked well,\na solution that I still use today.\n\n361\n00:16:20.140 --> 00:16:23.042\nAnd so,\nwhat I do is kinda a mixture of both.\n\n362\n00:16:23.042 --> 00:16:29.300\nCuz I'll spin up EBS back instances but,\nI'll leave those check marks right here.\n\n363\n00:16:29.300 --> 00:16:32.820\nThis say delete on termination,\nI'll check both of those off, right.\n\n364\n00:16:32.820 --> 00:16:36.980\nSo when I'm spinning up, if we look at the\nwizard again, when I spin up these drives,\n\n365\n00:16:36.980 --> 00:16:39.310\nI'll come in and\nI leave both of this checked.\n\n366\n00:16:39.310 --> 00:16:41.940\nIf I know this is gonna be part\nof an auto scaling group, and\n\n367\n00:16:41.940 --> 00:16:45.500\nI know I'm syncing my data from somewhere\nelse I don't need my data anymore.\n\n368\n00:16:45.500 --> 00:16:48.267\nWhen this instance terminates, let it go.\n\n369\n00:16:48.267 --> 00:16:51.904\nBut if this were a database server, and\nthat database was really important to me,\n\n370\n00:16:51.904 --> 00:16:54.400\nI'd make sure those additional\ndisks were unchecked.\n\n371\n00:16:54.400 --> 00:16:56.810\nAnd that way,\nif I ever terminated this instance,\n\n372\n00:16:56.810 --> 00:17:00.430\nI still had a copy of that database saved\nas a volume, and I could go and access it.\n\n373\n00:17:00.430 --> 00:17:02.721\nAnd when I was done with it, I could just\ngo and delete the volume when I was ready.\n\n374\n00:17:02.721 --> 00:17:08.160\nAll right, a couple other things to\nthink about here, instant store.\n\n375\n00:17:08.160 --> 00:17:10.230\nInstant store was the original one, and\n\n376\n00:17:10.230 --> 00:17:15.070\nif your root volume is instant store,\nit's limited to ten gigabytes in size.\n\n377\n00:17:15.070 --> 00:17:17.310\nCan't go bigger than ten gigs, right?\n\n378\n00:17:17.310 --> 00:17:21.420\nAnd Amazon, what they said was, hey you\nshouldn't be storing data on the root\n\n379\n00:17:21.420 --> 00:17:24.340\ndrive anyway, so\nten gigs is tons of space.\n\n380\n00:17:24.340 --> 00:17:27.860\nIt's plenty of space for\na Linux distribution to fit, and\n\n381\n00:17:27.860 --> 00:17:31.101\nthe windows one fits well enough.\n\n382\n00:17:31.101 --> 00:17:34.200\n[LAUGH] So they force it in there, but\n\n383\n00:17:34.200 --> 00:17:38.300\nyou get that 10 gig limit on an instant\nstore from the root drive, all right?\n\n384\n00:17:38.300 --> 00:17:41.070\nIf you were to add additional disks for\nroot drive, you can go higher.\n\n385\n00:17:41.070 --> 00:17:45.370\nSo for example, if I go back here and,\nlet me spin up another instance.\n\n386\n00:17:45.370 --> 00:17:47.830\nAnd I guess technically I\nnever spun that one up did I?\n\n387\n00:17:47.830 --> 00:17:50.630\nBut I'm going to go back to community\nAMIs and I'm going to filter for\n\n388\n00:17:50.630 --> 00:17:52.060\ninstant store, guys.\n\n389\n00:17:52.060 --> 00:17:54.190\nAnd I'll take,\nwhat's that latest greatest here?\n\n390\n00:17:54.190 --> 00:17:56.210\nI'll take this latest and\ngreatest amazon one.\n\n391\n00:17:56.210 --> 00:17:59.330\nSo this is the amazon AMI Linux.\n\n392\n00:17:59.330 --> 00:18:01.360\nAnd it's the instant store root device.\n\n393\n00:18:01.360 --> 00:18:06.360\nI'm gonna pick that one, and when I start\nto go through it, if I go to add storage.\n\n394\n00:18:06.360 --> 00:18:08.630\nSee how it doesn't show any storage?\n\n395\n00:18:08.630 --> 00:18:12.420\nIt's not showing storage because\nthe instance store that's holding the OS\n\n396\n00:18:12.420 --> 00:18:16.570\nis completely managed by Amazon,\nso I can't even see it.\n\n397\n00:18:16.570 --> 00:18:20.180\nBut if I add a new volume, see how\nit's got that instance store set, so\n\n398\n00:18:20.180 --> 00:18:23.400\nI'm instance store volumes, and\nnow we can start to mess with it.\n\n399\n00:18:23.400 --> 00:18:27.200\nBut as I look at it across the line here,\nmy sizes and stuff are all being held\n\n400\n00:18:27.200 --> 00:18:31.220\ndown, and actually, I might have\npicked a bad image on this one.\n\n401\n00:18:31.220 --> 00:18:35.590\nCuz it should let me edit that.\n\n402\n00:18:35.590 --> 00:18:41.071\nLet me switch to a different image, oops.\n\n403\n00:18:41.071 --> 00:18:43.021\n[LAUGH] Let me switch to a different one,\nyeah,\n\n404\n00:18:43.021 --> 00:18:44.878\nthat one didn't seem\nto have what I wanted.\n\n405\n00:18:44.878 --> 00:18:49.466\nSo as you go to atom though you'll see\nthat you have this limit of ten gigs,\n\n406\n00:18:49.466 --> 00:18:51.170\nwhich is kind of a problem.\n\n407\n00:18:51.170 --> 00:18:54.330\nIf you're adding additional discs and\nyou need a lot of storage, well for\n\n408\n00:18:54.330 --> 00:18:57.590\na website ten gigs is more than enough,\nand so that works out great.\n\n409\n00:18:57.590 --> 00:18:58.915\nThis wasn't really a problem.\n\n410\n00:18:58.915 --> 00:19:01.825\nBut if you're spinning up something\nlike a database server that's not\n\n411\n00:19:01.825 --> 00:19:02.535\ngoing to fly, right?\n\n412\n00:19:02.535 --> 00:19:05.815\nSo, that's where we have to start\nkind of working around that and\n\n413\n00:19:05.815 --> 00:19:08.015\nkind of figure out what's\ngoing to work for us.\n\n414\n00:19:08.015 --> 00:19:09.655\nOh, maybe it's because I chose a minimum,\n\n415\n00:19:09.655 --> 00:19:11.985\nlet me try one of these other ones,\nwe'll see.\n\n416\n00:19:11.985 --> 00:19:14.355\nI'm not too terribly worried\nabout it if it doesn't go,\n\n417\n00:19:14.355 --> 00:19:16.850\nbut, yeah it's doing it too.\n\n418\n00:19:16.850 --> 00:19:17.990\nAll right, well we won't worry about it.\n\n419\n00:19:17.990 --> 00:19:21.535\nBut just be aware that if you do\nan instance store drive it is limited to\n\n420\n00:19:21.535 --> 00:19:23.730\nten gigs for the root volume.\n\n421\n00:19:23.730 --> 00:19:25.570\nIf you go EBS it can go much larger.\n\n422\n00:19:25.570 --> 00:19:30.699\nOn an EBS one, there's two different\nanswers to this, I'm gonna give you both.\n\n423\n00:19:31.770 --> 00:19:34.440\nOn the exam they'll only have\none of these as an answer, but\n\n424\n00:19:34.440 --> 00:19:39.610\nthere are many places in\nthe AWS documentation where\n\n425\n00:19:39.610 --> 00:19:44.860\nit says one terabyte for\nthe root drive if you do EBS.\n\n426\n00:19:44.860 --> 00:19:46.030\nBut if you actually go and\n\n427\n00:19:46.030 --> 00:19:48.110\nspin one up you'll see where\nyou can set it two terabytes.\n\n428\n00:19:48.110 --> 00:19:50.760\nYou can bump it even higher, they just\nhaven't updated the documentation.\n\n429\n00:19:50.760 --> 00:19:55.470\nSo, on the exam they probably won't\ncall it out, but if they do it will\n\n430\n00:19:55.470 --> 00:19:58.590\nprobably be listed as one terabyte because\nthat is what's in the documentation.\n\n431\n00:19:58.590 --> 00:20:01.500\nSo be careful with that cuz some things\nhave changed on the website that\n\n432\n00:20:01.500 --> 00:20:03.010\nhaven't been updated on the exam yet.\n\n433\n00:20:03.010 --> 00:20:05.810\nSo, just if you have to remember it,\nremember it is one terabyte.\n\n434\n00:20:05.810 --> 00:20:08.180\nSo EBS root volumes can be much,\nmuch larger.\n\n435\n00:20:08.180 --> 00:20:11.714\nAnd the reason Amazon did that is they\nsaid hey, these are elastic block storage,\n\n436\n00:20:11.714 --> 00:20:14.130\nthey're persistent storage now.\n\n437\n00:20:14.130 --> 00:20:15.685\nThey'll be saved through a termination.\n\n438\n00:20:15.685 --> 00:20:17.570\nYou'll have access to them if you need it.\n\n439\n00:20:17.570 --> 00:20:19.420\nSo, let's give you more room.\n\n440\n00:20:19.420 --> 00:20:23.016\nAnd if you wanna those people that likes\nto break the rule and put storage or\n\n441\n00:20:23.016 --> 00:20:25.404\nput sensitive data on your root drive,\nyou can.\n\n442\n00:20:25.404 --> 00:20:26.741\nAnd it's now protected,\n\n443\n00:20:26.741 --> 00:20:30.660\nunlike instance store where they\nactively wanted to prevent you.\n\n444\n00:20:30.660 --> 00:20:32.070\nBecause there were people\nwho just didn't know.\n\n445\n00:20:32.070 --> 00:20:36.750\nThey'd spin up these instances, they'd put\nthis hand crafted web site on there and\n\n446\n00:20:36.750 --> 00:20:38.300\nthen they'd terminate it or\n\n447\n00:20:38.300 --> 00:20:41.090\nwhat ever and lose everything that\nthey had and really get angry.\n\n448\n00:20:41.090 --> 00:20:43.120\nSo it was kinda trying to\nprotect you from yourself.\n\n449\n00:20:43.120 --> 00:20:44.437\n>> They blame Amazon the whole time,\nright?\n\n450\n00:20:44.437 --> 00:20:45.212\n[LAUGH]\n>> Well you know-\n\n451\n00:20:45.212 --> 00:20:46.409\n>> What've you done to my website.\n\n452\n00:20:46.409 --> 00:20:47.220\n>> Gotta blame somebody.\n\n453\n00:20:47.220 --> 00:20:48.852\nCouldn't possibly be my fault.\n\n454\n00:20:48.852 --> 00:20:49.830\n>> [LAUGH] No, no.\n\n455\n00:20:49.830 --> 00:20:51.510\n>> So let's see what else do we have?\n\n456\n00:20:51.510 --> 00:20:53.520\nI think that's about it for\ninstance store.\n\n457\n00:20:53.520 --> 00:20:54.840\nIt is the old stuff, right, so\n\n458\n00:20:54.840 --> 00:20:58.800\nwe really don't want to use instance store\nif we can avoid it, but it is out there.\n\n459\n00:20:58.800 --> 00:21:03.570\nOn the EBS side they're persistent it\ncan go up to a terabyte in size or\n\n460\n00:21:03.570 --> 00:21:04.876\ntwo which is nice, it can go pretty big.\n\n461\n00:21:04.876 --> 00:21:07.198\nThat terabyte inside,\n\n462\n00:21:07.198 --> 00:21:11.540\nas I said you can go up two terabytes\nin the wizard when you create them.\n\n463\n00:21:11.540 --> 00:21:16.050\nBe careful because your operating system\nhas to support it also and most OS's do\n\n464\n00:21:16.050 --> 00:21:19.630\nsupport drives that large these days, but\nsome OS's can kinda flake out about it.\n\n465\n00:21:19.630 --> 00:21:21.061\nIf you're running like\nan older Linux Kernel or\n\n466\n00:21:21.061 --> 00:21:22.779\nsomething you might have to\nmake sure you're updated but\n\n467\n00:21:22.779 --> 00:21:24.191\nmost people aren't gonna\nhave that problem.\n\n468\n00:21:24.191 --> 00:21:28.580\n>> Yeah,\nnow Don we do have a plethora of device.\n\n469\n00:21:28.580 --> 00:21:32.290\nThere's a couple of types of\nstorage media that are out there.\n\n470\n00:21:32.290 --> 00:21:34.110\nDo we get that ability?\n\n471\n00:21:34.110 --> 00:21:38.100\nLike if I had a physical server I could\nchoose, I could buy either magnetic\n\n472\n00:21:38.100 --> 00:21:40.980\nstorage or I could buy SSD,\nI could buy whatever I needed.\n\n473\n00:21:40.980 --> 00:21:44.280\nSizes, however it came down,\nI could purchase that.\n\n474\n00:21:44.280 --> 00:21:47.790\nAm I able to do the same kind\nof thing here in Native US?\n\n475\n00:21:47.790 --> 00:21:48.510\n>> Absolutely, and\n\n476\n00:21:48.510 --> 00:21:50.760\nthat's another choice we have when\nwe go to spin up an instance, right?\n\n477\n00:21:50.760 --> 00:21:52.340\nLet me, I'll run do it again.\n\n478\n00:21:52.340 --> 00:21:54.940\nWe'll see how many failed\nlaunches I can do here today.\n\n479\n00:21:54.940 --> 00:21:59.180\nSo if I go an spin up\nanother Amazon Linux AMI, and\n\n480\n00:21:59.180 --> 00:22:00.990\nI just go through and pick what I'm doing.\n\n481\n00:22:00.990 --> 00:22:04.250\nI'm actually going to bump up to a\nslightly higher tier this time cuz there's\n\n482\n00:22:04.250 --> 00:22:05.970\nsome things that are a little bit limited.\n\n483\n00:22:05.970 --> 00:22:09.670\nWhen you do a T2 micro they kind of limit\nall the options that you have and so\n\n484\n00:22:09.670 --> 00:22:10.800\nthere's some options it doesn't see.\n\n485\n00:22:10.800 --> 00:22:12.880\nSo I'm gonna bump up to an M4 large.\n\n486\n00:22:12.880 --> 00:22:15.670\nAnd when I go to set this up and\nI go to add storage.\n\n487\n00:22:15.670 --> 00:22:20.610\nYou'll notice that the root drive has\ndefaulted to EBS, and I can see that it's\n\n488\n00:22:20.610 --> 00:22:24.410\ncreated it, it's got an eight gig size,\nand so I can start to add more.\n\n489\n00:22:24.410 --> 00:22:27.590\nAnd it's showing that\ngeneral purpose volume type.\n\n490\n00:22:27.590 --> 00:22:30.390\nNow the volume type is where I'm actually\npicking the type of storage that it's\n\n491\n00:22:30.390 --> 00:22:33.310\nbeing put on, and\nyou'll see I've got three choices.\n\n492\n00:22:33.310 --> 00:22:36.460\nIf I had done at T2 micro,\nI wouldn't have had provisioned iOPS,\n\n493\n00:22:36.460 --> 00:22:37.430\nI can't pick that one.\n\n494\n00:22:37.430 --> 00:22:39.000\nSo that's why I wanted to go this route.\n\n495\n00:22:39.000 --> 00:22:41.810\nSo you got three, magnetic,\ngeneral purpose SSD, and\n\n496\n00:22:41.810 --> 00:22:44.610\nprovisioned iOPS SSD, all right?\n\n497\n00:22:44.610 --> 00:22:45.710\nWhat are those?\n\n498\n00:22:45.710 --> 00:22:48.620\nWell when you choose one\nlike if you choose magnetic,\n\n499\n00:22:48.620 --> 00:22:50.480\nmagnetic is the old storage.\n\n500\n00:22:50.480 --> 00:22:53.370\nThese are the hard drives that actually\nhave a spinning disc inside of\n\n501\n00:22:53.370 --> 00:22:54.680\nthem with an arm that moves around.\n\n502\n00:22:54.680 --> 00:22:57.910\nIt's what all of us had in our\ncomputers up until a year or two ago.\n\n503\n00:22:57.910 --> 00:23:01.500\nAnd you may still have in your computer\nright now, because you can buy.\n\n504\n00:23:01.500 --> 00:23:04.480\nMy computer at home,\nI think I got it less than a year ago and\n\n505\n00:23:04.480 --> 00:23:06.010\nit has traditional magnetic media in it.\n\n506\n00:23:06.010 --> 00:23:08.760\nSo a lot of us use it in some places.\n\n507\n00:23:08.760 --> 00:23:11.585\nBut other devices, like my laptop,\nI think your laptop, Daniel.\n\n508\n00:23:11.585 --> 00:23:13.930\n>> Mm-hm.\n>> Yep, most of us have moved over to SSD,\n\n509\n00:23:13.930 --> 00:23:15.610\nthe solid state digital.\n\n510\n00:23:15.610 --> 00:23:19.450\nSSD is more reliable, it fails less often\nbecause it doesn't have any moving parts\n\n511\n00:23:19.450 --> 00:23:20.850\nand it's also faster.\n\n512\n00:23:20.850 --> 00:23:25.900\nSo SSD is obviously preferred, but Amazon\nwill let you go magnetic if you want.\n\n513\n00:23:25.900 --> 00:23:30.530\nThe only reason for going magnetic,\nis if you want to save money, right?\n\n514\n00:23:30.530 --> 00:23:34.000\nSSD beats magnetic in every way possible,\nexcept for cost.\n\n515\n00:23:34.000 --> 00:23:37.620\nSo if you're trying to run a VM, an\ninstance on a, like, a shoestring budget,\n\n516\n00:23:37.620 --> 00:23:40.830\ntry and keep your costs as low as\npossible, you can go magnetic, right?\n\n517\n00:23:41.860 --> 00:23:44.670\nBut notice this column over here, IOPS.\n\n518\n00:23:44.670 --> 00:23:48.260\nThis is input-output\noperations per second.\n\n519\n00:23:48.260 --> 00:23:52.330\nSo this is how many reads and writes\nyou can perform in any given second.\n\n520\n00:23:52.330 --> 00:23:53.790\nAnd when I choose magnetic, it goes to NA.\n\n521\n00:23:53.790 --> 00:23:56.330\nNow, that doesn't mean that\nI can't read and write.\n\n522\n00:23:56.330 --> 00:24:01.356\nIt means that Amazon will not guarantee\nany particular performance level for it.\n\n523\n00:24:01.356 --> 00:24:02.492\nNo guarantees.\n\n524\n00:24:02.492 --> 00:24:04.000\nYou can read and write, sure.\n\n525\n00:24:04.000 --> 00:24:08.142\nBut it might be slow sometimes,\nfast sometimes, it just depends.\n\n526\n00:24:08.142 --> 00:24:15.112\nBut if I change that to General Purpose\n(SSD), it goes to, well, 24 of 3000.\n\n527\n00:24:15.112 --> 00:24:17.049\nOkay, what does that mean?\n\n528\n00:24:17.049 --> 00:24:19.302\nWell, General Purpose (SSD),\n\n529\n00:24:19.302 --> 00:24:25.450\nwhat they do is they give you 3000 IOPS as\nwhat's called your baseline performance.\n\n530\n00:24:25.450 --> 00:24:32.620\nSo, at any given time you should be\nable to perform 3.000 IOs per second.\n\n531\n00:24:32.620 --> 00:24:34.616\nAll right, that's a lot.\n\n532\n00:24:34.616 --> 00:24:38.251\nIt's a lot for a file server,\nfor a web server, for a small or\n\n533\n00:24:38.251 --> 00:24:41.480\neven a medium database, that's a lot.\n\n534\n00:24:41.480 --> 00:24:47.590\nFor a large database, for a OLAP type\ndatabase, that's not gonna be enough.\n\n535\n00:24:47.590 --> 00:24:51.460\nFor something where I need a heavy amount\nof disk IO, code compiling, whatever,\n\n536\n00:24:51.460 --> 00:24:55.590\nthings like that where there's a lot\nof disk IO, it's not gonna be enough.\n\n537\n00:24:55.590 --> 00:24:59.290\nBut for general purpose, for just about\neverything else this is the way to go.\n\n538\n00:24:59.290 --> 00:25:03.230\nAnd so the majority of time this is\nthe storage you're going to want to pick.\n\n539\n00:25:03.230 --> 00:25:06.420\nIt's SSD, it's Solid State Digital drives.\n\n540\n00:25:06.420 --> 00:25:08.250\nAnd so you know they're fast.\n\n541\n00:25:08.250 --> 00:25:10.960\nAnd they're guaranteeing you\na certain level of IOPS.\n\n542\n00:25:10.960 --> 00:25:12.677\nNow why does it say 24 / 3000?\n\n543\n00:25:12.677 --> 00:25:19.550\nWell, 3000 is considered my baseline,\nbut 24 is what I'm being guaranteed.\n\n544\n00:25:19.550 --> 00:25:22.170\nI'm being guaranteed only 24.\n\n545\n00:25:22.170 --> 00:25:23.880\nWhere did that number come from?\n\n546\n00:25:23.880 --> 00:25:27.410\nWell it's three times\nwhatever size you put.\n\n547\n00:25:27.410 --> 00:25:32.330\nSo if I were to bump this up to a ten\ngig drive, see how it went to 30?\n\n548\n00:25:32.330 --> 00:25:34.850\nWell if I do a 100 gig drive,\nit went to 300, right.\n\n549\n00:25:35.880 --> 00:25:39.620\nSo this was how we increased\nthe performance of a drive in the past.\n\n550\n00:25:39.620 --> 00:25:42.490\nIf you had a database on a drive and\ndisc IO was starting to\n\n551\n00:25:42.490 --> 00:25:45.680\nbottle neck a little bit, we'll see in the\nmonitoring episodes how we can monitor and\n\n552\n00:25:45.680 --> 00:25:49.230\nsee when that bottle necking is happening,\nthat we could take a look at it.\n\n553\n00:25:49.230 --> 00:25:54.110\nSee where that was kind of choking and\nsay all right, I need more IOs per second.\n\n554\n00:25:54.110 --> 00:25:57.280\nAnd the solution, well,\nin a real data center,\n\n555\n00:25:57.280 --> 00:26:00.390\nlike Daniel, do you know, if you had\na drive that was running too slow,\n\n556\n00:26:00.390 --> 00:26:02.400\nwhat are our solutions\nin a real data center?\n\n557\n00:26:02.400 --> 00:26:03.600\n>> We'd buy a better drive.\n\n558\n00:26:03.600 --> 00:26:04.910\n>> You can buy a better drive, right?\n\n559\n00:26:04.910 --> 00:26:09.310\nMaybe you had 5,400 RPM magnetic drives,\nyou go to 7,200 RPMs.\n\n560\n00:26:09.310 --> 00:26:12.770\nBut if you've got SSD's in\nthere your only solution is to\n\n561\n00:26:12.770 --> 00:26:13.840\nbreak out in a raid array right.\n\n562\n00:26:13.840 --> 00:26:15.180\nScale out, add more drives and\n\n563\n00:26:15.180 --> 00:26:17.870\nspread your data across them\nto improve your disk access.\n\n564\n00:26:17.870 --> 00:26:20.560\nWell that's effectively what Amazon\ndoes except I can't come in here and\n\n565\n00:26:20.560 --> 00:26:22.000\nsay increase my drives.\n\n566\n00:26:22.000 --> 00:26:25.280\nThe way you do it is by\nincreasing the size of the drive.\n\n567\n00:26:25.280 --> 00:26:28.194\nSo if I want to truly get those 3,000 IOs,\n\n568\n00:26:28.194 --> 00:26:31.820\nI actually have to create\na one terabyte drive.\n\n569\n00:26:31.820 --> 00:26:35.402\nAnd see how when I go to a 1\nterabyte drive I get the 3,000 IOs?\n\n570\n00:26:35.402 --> 00:26:38.370\nNow, watch what happens\nif I start going higher.\n\n571\n00:26:38.370 --> 00:26:39.720\nWell, it keeps going up.\n\n572\n00:26:39.720 --> 00:26:42.370\nIt keeps going up for a while, right?\n\n573\n00:26:42.370 --> 00:26:44.699\nLet's see if I can spot\nwhere that limit is.\n\n574\n00:26:46.150 --> 00:26:50.090\nAll right, so here I just went to 3,300 or\n3.3 terabytes and\n\n575\n00:26:50.090 --> 00:26:54.520\nit went up to 9,900, so\nI'm getting close to the limit.\n\n576\n00:26:54.520 --> 00:26:56.806\nThere's a limit, it's 10,000, I know what\nthe limit is I'm just trying to hit it.\n\n577\n00:26:56.806 --> 00:26:57.596\nThere we go.\n\n578\n00:26:57.596 --> 00:27:02.388\nSo when I get to 3,400 I got 10,000 IOs,\nand if I go to 3,500,\n\n579\n00:27:02.388 --> 00:27:04.410\nit's still 10,000 IOs.\n\n580\n00:27:04.410 --> 00:27:07.840\nIn fact, if I start bumping this up and\nI do like a 4TB drive,\n\n581\n00:27:07.840 --> 00:27:10.700\nit's still 10,000 IOs.\n\n582\n00:27:10.700 --> 00:27:16.085\nSo General Purpose SSD will\ngive you 3,000 IOs baseline,\n\n583\n00:27:16.085 --> 00:27:21.786\nand then you get 3 IOs for\nevery gig in size up to 10,000 IOs.\n\n584\n00:27:22.910 --> 00:27:25.540\nWhat if I need more than 10,000 IOs?\n\n585\n00:27:25.540 --> 00:27:28.885\nWell that's when Amazon says,\nyou're a special case, you're not normal.\n\n586\n00:27:28.885 --> 00:27:32.400\n[LAUGH] You're that strange kid\nin the back of the class, and\n\n587\n00:27:32.400 --> 00:27:35.830\nso what they do is they say,\nyou just have to pay more, right?\n\n588\n00:27:35.830 --> 00:27:38.403\nSometimes the solution is to\nthrow money at a problem.\n\n589\n00:27:38.403 --> 00:27:39.020\n[LAUGH]\n>> It's so\n\n590\n00:27:39.020 --> 00:27:40.620\neasy how that works out, isn't it?\n\n591\n00:27:40.620 --> 00:27:42.300\n[LAUGH]\n>> That's exactly how this one is.\n\n592\n00:27:42.300 --> 00:27:45.320\nSo if you need more IOs at that point,\ndon't use General Purpose.\n\n593\n00:27:45.320 --> 00:27:47.250\nSwitch to Provisioned IOPS.\n\n594\n00:27:47.250 --> 00:27:51.550\nWith Provisioned IOPS, you pay for\nhow many IOPS you want.\n\n595\n00:27:51.550 --> 00:27:56.930\nSo I might have a 200 gig drive, but\nI can reserve 20,000 IOPS for it, right?\n\n596\n00:27:56.930 --> 00:27:59.900\nAnd I'm pretty sure 20,000's the max,\nso let's make sure.\n\n597\n00:27:59.900 --> 00:28:04.800\nIf I go too high, oops,\nif I go too high, let me do it.\n\n598\n00:28:04.800 --> 00:28:05.950\nI don't think that will save.\n\n599\n00:28:05.950 --> 00:28:08.290\nI'm pretty sure the match\nis 20,000 on this one.\n\n600\n00:28:08.290 --> 00:28:11.330\nBut I can have a 200 gig drive and\nI don't have to go to a two or four or\n\n601\n00:28:11.330 --> 00:28:12.670\neight terabyte system.\n\n602\n00:28:12.670 --> 00:28:15.900\nNow that's important because notice what\nhappened, you guys probably saw this,\n\n603\n00:28:15.900 --> 00:28:18.820\nI didn't point it out, but\nwhen I took that root volume and\n\n604\n00:28:18.820 --> 00:28:22.560\nI started bumping it up to a terabyte,\nwell we didn't get any complaints, right?\n\n605\n00:28:22.560 --> 00:28:25.500\nAnd then when I bumped it up to two\nterabytes, still no complaints.\n\n606\n00:28:25.500 --> 00:28:30.070\nBut when I got to like three or four\nterabytes, there it is, specifying this\n\n607\n00:28:30.070 --> 00:28:33.770\nsize of a root volume may result in\nthe instance not booting successfully.\n\n608\n00:28:33.770 --> 00:28:36.740\nRemember what I said earlier\nabout that root volume.\n\n609\n00:28:36.740 --> 00:28:40.730\nAnd I said when you have an EBS root\nvolume in the documentation they tell you\n\n610\n00:28:40.730 --> 00:28:44.610\nthe maximum size is one terabyte, but\nyou can actually set it to two terabytes.\n\n611\n00:28:44.610 --> 00:28:48.480\nWell when I did that, when I was at two\nterabytes, I didn't get any complaints.\n\n612\n00:28:48.480 --> 00:28:52.030\nBut as soon as I start getting over that,\nlike here just 2.1 terabytes,\n\n613\n00:28:52.030 --> 00:28:53.350\nI started getting that warning.\n\n614\n00:28:53.350 --> 00:28:55.640\nI've exceeded that limit and\nthat's what we need to know.\n\n615\n00:28:55.640 --> 00:28:58.400\nAnd so on the exam they may\nstill say one terabyte,\n\n616\n00:28:58.400 --> 00:28:59.720\nin real life it is two terabytes.\n\n617\n00:28:59.720 --> 00:29:00.950\nWe see that right here.\n\n618\n00:29:00.950 --> 00:29:04.966\nBut if I need two terabytes what I\nneed to really do is stop messing with\n\n619\n00:29:04.966 --> 00:29:05.942\nmy boot volume.\n\n620\n00:29:05.942 --> 00:29:06.590\nRight?\n\n621\n00:29:06.590 --> 00:29:09.670\nThis boot volume was only eight\ngigs in size in the beginning and\n\n622\n00:29:09.670 --> 00:29:13.360\nso if I really need that much storage\nI need to add an additional disc.\n\n623\n00:29:13.360 --> 00:29:15.770\nAnd when I add an additional EBS disk,\nI can come in and\n\n624\n00:29:15.770 --> 00:29:19.440\nI can make this one three terabytes and\nsee no warning.\n\n625\n00:29:19.440 --> 00:29:21.660\nIt's your boot volume\nthat can't be that big.\n\n626\n00:29:21.660 --> 00:29:24.090\nAn EBS volume can be very, very large.\n\n627\n00:29:24.090 --> 00:29:25.750\nYour operating system\nwill choke after a while.\n\n628\n00:29:25.750 --> 00:29:28.840\nA lot of OSes have problems with\ndrives over four terabytes.\n\n629\n00:29:28.840 --> 00:29:31.340\nSo you'll consider that\nwhen you add more drives.\n\n630\n00:29:31.340 --> 00:29:36.180\nBut so I can add this three, or\neven bump it up to a four terabyte drive.\n\n631\n00:29:36.180 --> 00:29:41.020\nAnd as an EBS disk, I can come in and\nstart to reserve IOs.\n\n632\n00:29:41.020 --> 00:29:42.940\nNow, notice what happened here.\n\n633\n00:29:42.940 --> 00:29:47.890\nI created a four terabyte EBS drive,\nand how many IOs do I have?\n\n634\n00:29:47.890 --> 00:29:49.965\nZero.\n\n635\n00:29:49.965 --> 00:29:54.110\nWell, what happened to that whole\nthree times whatever stuff?\n\n636\n00:29:54.110 --> 00:29:55.650\nWell, the three times whatever stuff?\n\n637\n00:29:55.650 --> 00:29:58.480\nIt's probably a technical term for\nthat, I mean I'll just call it that.\n\n638\n00:29:58.480 --> 00:30:00.713\nThat applies to the root volume, right?\n\n639\n00:30:00.713 --> 00:30:05.040\nWith additional disks you\ndon't get reserved IOs.\n\n640\n00:30:05.040 --> 00:30:08.760\nWhat you have is baselined IOPS and\nburst IOPS.\n\n641\n00:30:08.760 --> 00:30:11.630\nAnd there's this crazy thing\nthat goes on in the background\n\n642\n00:30:11.630 --> 00:30:13.490\nthat's called an IOPS credit.\n\n643\n00:30:13.490 --> 00:30:17.450\nAnd so when you spin up that extra\ninstance, so this extra volume that I'm\n\n644\n00:30:17.450 --> 00:30:22.250\nadding right here,\nI get some IOPS credits.\n\n645\n00:30:22.250 --> 00:30:26.427\nFor the record, I doubt this will be on\nthe exam, but I get 5.4 million credits.\n\n646\n00:30:26.427 --> 00:30:29.240\nNow, that means nothing to us, right?\n\n647\n00:30:29.240 --> 00:30:31.759\nIt's like\n>> 5.4 million rupees or something.\n\n648\n00:30:31.759 --> 00:30:33.550\n[LAUGH]\n>> It's like learning a foreign currency.\n\n649\n00:30:33.550 --> 00:30:34.280\n>> Yeah.\n>> Really is.\n\n650\n00:30:34.280 --> 00:30:37.500\nIf I tell you it cost 5.4 million rupees,\n\n651\n00:30:37.500 --> 00:30:39.230\nI don't know what\nthe conversion rate is and\n\n652\n00:30:39.230 --> 00:30:44.700\nso when I look here at that number I get\n5.4 million credits what does that mean?\n\n653\n00:30:44.700 --> 00:30:51.090\nWell, that means that this disk could\nrun at 3,000 IOPS for 30 minutes, right?\n\n654\n00:30:51.090 --> 00:30:54.830\nThey give me 30 minutes worth\nof credits to run at 3,000 IOPS.\n\n655\n00:30:54.830 --> 00:31:01.240\nOkay, and so if I run at 3,000 IOPS for\n30 minutes, I've burned up all my credits,\n\n656\n00:31:01.240 --> 00:31:05.270\nand when those credits are out,\nit kind of becomes like magnetic media.\n\n657\n00:31:05.270 --> 00:31:09.350\nIt's still SSD so it's still fast but\nother people might get prioritized over\n\n658\n00:31:09.350 --> 00:31:13.230\nme so the disk might be slower or\nfaster depending on when I use it.\n\n659\n00:31:13.230 --> 00:31:17.267\nAnd then anytime I'm\nrunning below 3,000 IOPS,\n\n660\n00:31:17.267 --> 00:31:21.340\nI start accruing credits, so\nyou kinda build your credits.\n\n661\n00:31:21.340 --> 00:31:23.300\nSo Amazon rewards you for\n\n662\n00:31:23.300 --> 00:31:27.740\nnot being at peak performance all the time\nand basically their stance is this,\n\n663\n00:31:27.740 --> 00:31:32.360\nif you went 3,000 IOPS all the time,\nyou've got to use Provision IOPS.\n\n664\n00:31:32.360 --> 00:31:34.247\nSwitch to Provision IOps then\nyou'll always have 3000,\n\n665\n00:31:34.247 --> 00:31:35.491\nyou don't have to worry about credits.\n\n666\n00:31:35.491 --> 00:31:36.560\nRight?\n\n667\n00:31:36.560 --> 00:31:41.160\nBut if you have bursty traffic, I know\nevery now and then this database gets busy\n\n668\n00:31:41.160 --> 00:31:45.900\nor it only gets busy when I do backups,\nor it only gets busy when I compile code.\n\n669\n00:31:45.900 --> 00:31:48.120\nIn that case,\njust go with the General Purpose.\n\n670\n00:31:48.120 --> 00:31:50.830\nYou'll build up tons of credits in\nthe background and never even notice and\n\n671\n00:31:50.830 --> 00:31:53.960\nanytime you have to hit 3000\nIOPS you'll be able to do it.\n\n672\n00:31:53.960 --> 00:31:55.940\nBut if you're consistently\nrunning that high,\n\n673\n00:31:55.940 --> 00:31:57.860\nthen you'll need to bump\nover to provision storage.\n\n674\n00:31:57.860 --> 00:32:02.470\nNow, I'll show you,\ndefinitely don't have time to,\n\n675\n00:32:02.470 --> 00:32:04.960\nI'll show you how to convert from\nGeneral Purpose to Provision.\n\n676\n00:32:04.960 --> 00:32:07.380\nIt's not easy, it's not something you\nshould do, so, you want to plan for\n\n677\n00:32:07.380 --> 00:32:08.480\nthis ahead of time.\n\n678\n00:32:08.480 --> 00:32:11.720\nIt's not like a check mark you check, so\nthis decision is pretty important when I\n\n679\n00:32:11.720 --> 00:32:15.980\nspin up these disks, but\nunderstand your data.\n\n680\n00:32:15.980 --> 00:32:17.510\nAmazon does know what you're\ndoing with your data.\n\n681\n00:32:17.510 --> 00:32:19.120\nSo, you've got to understand your data.\n\n682\n00:32:19.120 --> 00:32:23.750\nIs this bursty type or is this something\nwhere I absolutely need those iOS?\n\n683\n00:32:23.750 --> 00:32:25.440\nLet's get them reserve and\nget them put in place.\n\n684\n00:32:25.440 --> 00:32:27.170\nSo, that's the decision I make here.\n\n685\n00:32:27.170 --> 00:32:29.590\nAnd it's a decision I can't easily change.\n\n686\n00:32:29.590 --> 00:32:30.840\nSame thing with magnetic.\n\n687\n00:32:30.840 --> 00:32:33.580\nIf I choose magnetic,\nI can't easily change that.\n\n688\n00:32:33.580 --> 00:32:35.180\nYou really end up having to redeploy.\n\n689\n00:32:35.180 --> 00:32:37.600\nAnd just, in case you don't see\nthe episode where I show this.\n\n690\n00:32:37.600 --> 00:32:40.329\nThe process is basically,\nyou take a snapshot of the disk,\n\n691\n00:32:40.329 --> 00:32:43.604\nyou blow the disk away, you provision\na new disk from the snapshot, and\n\n692\n00:32:43.604 --> 00:32:46.388\nwhen you're provisioning that\nnew disk from the snapshot,\n\n693\n00:32:46.388 --> 00:32:49.780\nyou can choose the other media type and\nthen you can reattach the VM.\n\n694\n00:32:49.780 --> 00:32:51.860\nThat means you've got downtime and\nit's kind of a hassle.\n\n695\n00:32:51.860 --> 00:32:53.360\nYou go through all those steps to do it.\n\n696\n00:32:53.360 --> 00:32:54.580\nSo it kind of stinks.\n\n697\n00:32:54.580 --> 00:32:58.260\nSo, that's the way it's done and\nI'll show how to do it in another episode.\n\n698\n00:32:58.260 --> 00:33:01.410\n>> Awesome, well Don, let's just say\nwe have definitely run out of time for\n\n699\n00:33:01.410 --> 00:33:04.940\nthis episode, really looking forward to\nseeing that part two though, thank you for\n\n700\n00:33:04.940 --> 00:33:07.730\njoining us, and\nthank you guys out there for watching.\n\n701\n00:33:07.730 --> 00:33:10.650\nSigning off for ITproTV,\nI've been your host Daniel Lowry.\n\n702\n00:33:10.650 --> 00:33:11.260\n>> And I'm Don Pizet.\n\n703\n00:33:11.260 --> 00:33:13.895\n>> And we'll see you next time.\n\n704\n00:33:13.895 --> 00:33:18.470\n[SOUND]\n\n",
          "vimeoId": "148922093"
        },
        {
          "description": "In this episode, Daniel and Don continue to take a look at disk storage in EC2. They pick up where they left off; looking at EC2 Storage Media attributes. They they show you how to allocate EC2 storage, walking you through each step and describing the options as they are encountered.",
          "length": "1448",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/amazon-acsa/amazon-acsa-3-1-2-ec2-disk_storage_pt2-121415-1.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/amazon-acsa/amazon-acsa-3-1-2-ec2-disk_storage_pt2-121415-1-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/amazon-acsa/amazon-acsa-3-1-2-ec2-disk_storage_pt2-121415-1-sm.jpg",
          "title": "EC2 Disk Storage Part 2",
          "transcript": "WEBVTT\n\n1\n00:00:00.100 --> 00:00:10.100\n[MUSIC]\n\n2\n00:00:11.941 --> 00:00:16.341\nAlright, greetings everyone and\nwelcome to another episode of IT Pro TV.\n\n3\n00:00:16.341 --> 00:00:19.289\nI'm your host Daniel Lowrie and\nin today's episode,\n\n4\n00:00:19.289 --> 00:00:23.820\nwe're actually continuing looking at\nAWS Certified SysOps Administrator.\n\n5\n00:00:23.820 --> 00:00:25.441\nAnd that EC2 storage types and\n\n6\n00:00:25.441 --> 00:00:29.550\njoining me again today here in the studio\nis none other than Mr. Don Pezet.\n\n7\n00:00:29.550 --> 00:00:31.220\nDon, welcome back to the show,\nhow's it going?\n\n8\n00:00:31.220 --> 00:00:31.930\n>> It is going great,\n\n9\n00:00:31.930 --> 00:00:36.030\nDaniel, and ready to jump right\nback into that EC2 disk storage.\n\n10\n00:00:36.030 --> 00:00:38.575\nWe had a few things, things that I wanted\nto get to that we just couldn't get\n\n11\n00:00:38.575 --> 00:00:40.015\nin that last episode.\n\n12\n00:00:40.015 --> 00:00:42.905\nAnd I'm kind of glad it worked out,\ncuz as I skimmed over my notes,\n\n13\n00:00:42.905 --> 00:00:45.185\nI noticed a few things that I left out.\n\n14\n00:00:45.185 --> 00:00:47.095\nSo, let's pick back up\nwith where we left off,\n\n15\n00:00:47.095 --> 00:00:51.817\nwhich was talking about the differences\nbetween going with magnetic storage,\n\n16\n00:00:51.817 --> 00:00:57.947\nthe general purpose SSD, and\nthe provisioned IOPS SSD, right?\n\n17\n00:00:57.947 --> 00:01:00.937\nSo, it's kind of giving you the rundown on\nthose and just as a real quick summary.\n\n18\n00:01:00.937 --> 00:01:04.267\nMagnetic, that's the old\ntype of storage where amazon\n\n19\n00:01:04.267 --> 00:01:07.147\ndoesn't guarantee you a service level,\nright?\n\n20\n00:01:07.147 --> 00:01:09.777\nYou just get what you get with it,\nthere's no guaranteed level of IOPS.\n\n21\n00:01:09.777 --> 00:01:10.280\nNow.\n\n22\n00:01:10.280 --> 00:01:13.390\nOne of the things I forgot to mention was\nthat there is a baseline IOPS for it,\n\n23\n00:01:13.390 --> 00:01:14.000\nit's a 100 IOPS.\n\n24\n00:01:14.000 --> 00:01:18.960\nNo matter what the size of your magnetic\nstorage is, your baseline is 100, and\n\n25\n00:01:18.960 --> 00:01:22.055\nthat means that Amazon expects you\nto stay right around 100 IOPS or\n\n26\n00:01:22.055 --> 00:01:24.480\ninput/output operations per second.\n\n27\n00:01:24.480 --> 00:01:26.610\nAnd, maybe you do, maybe you don't.\n\n28\n00:01:26.610 --> 00:01:31.190\nIf it's a low yield server, if it's an OS\ndrive that's maybe not getting hit a lot,\n\n29\n00:01:31.190 --> 00:01:32.300\nthat might work out.\n\n30\n00:01:32.300 --> 00:01:34.260\nMost of the time we're going to exceed it,\nright.\n\n31\n00:01:34.260 --> 00:01:36.900\nAnd that's where we get\ninto our other disks.\n\n32\n00:01:36.900 --> 00:01:41.590\nSo, you talk about the general\npurpose where we saw that it had that\n\n33\n00:01:41.590 --> 00:01:46.250\nkinda base line of 3,000 IOPS, but it was\nreally three time the amount of gigs that\n\n34\n00:01:46.250 --> 00:01:49.770\nwe had up to a certain level and\n10,000 aps was the max.\n\n35\n00:01:49.770 --> 00:01:54.213\nAnd then, once we went to that\nprovisioned IOPS that's where we could\n\n36\n00:01:54.213 --> 00:01:59.500\nspecifically reserve an amount of\nI/O operations up to 20,000 IOPS.\n\n37\n00:01:59.500 --> 00:02:01.060\nSo, it'd actually go really high, and\n\n38\n00:02:01.060 --> 00:02:02.990\nit wasn't based on the size\nof the disk anymore.\n\n39\n00:02:02.990 --> 00:02:05.940\nSo, I didn't have to create a giant disk\nwhen in reality all I needed were some\n\n40\n00:02:05.940 --> 00:02:06.650\nextra IOPS.\n\n41\n00:02:07.750 --> 00:02:12.570\nAnother thing I kinda just didn't mention,\nwas that when you create magnetic storage,\n\n42\n00:02:12.570 --> 00:02:14.900\nthe magnetic storage can be\nup to 1 terabyte in size.\n\n43\n00:02:14.900 --> 00:02:17.390\nBut that's it.\nThat's the max is 1 terabyte.\n\n44\n00:02:17.390 --> 00:02:19.640\nBut when you go general-purpose SSD or\n\n45\n00:02:19.640 --> 00:02:24.300\nif you go provisioned IOPS, you can\nactually do up to 16 terabytes in size.\n\n46\n00:02:24.300 --> 00:02:27.640\nAnd I showed larger drives\non the show in part one, but\n\n47\n00:02:27.640 --> 00:02:29.000\nI didn't actually mention\nthat upper limit.\n\n48\n00:02:29.000 --> 00:02:30.770\nAnd on the exam,\nthey can ask you that upper limit.\n\n49\n00:02:30.770 --> 00:02:33.310\nSo magnetic, it's 1 terabyte for the max.\n\n50\n00:02:33.310 --> 00:02:38.250\nFor provision to IOPS and for general\npurpose SSD, both of those 16 terabytes.\n\n51\n00:02:38.250 --> 00:02:39.300\nYou can go pretty large on them.\n\n52\n00:02:40.455 --> 00:02:44.940\nAlright, now let's say that performance\nis your big concern, right?\n\n53\n00:02:44.940 --> 00:02:47.890\nI need just the best performance possible.\n\n54\n00:02:47.890 --> 00:02:50.370\nWell, that's where\nprovisioned IOPS comes in.\n\n55\n00:02:50.370 --> 00:02:53.290\nAnd so, you're gonna want to deploy\nyour disks as provisioned IOPS,\n\n56\n00:02:53.290 --> 00:02:56.680\nso you can set the amount of input\noutput operations per second, and\n\n57\n00:02:56.680 --> 00:02:59.260\nhave that kind of reserved and\nnot have to worry about the credits and\n\n58\n00:02:59.260 --> 00:03:00.630\nall the other things\nthat we mentioned before.\n\n59\n00:03:02.240 --> 00:03:05.050\nBut, there's a little neat thing,\nI'm gonna call it neat,\n\n60\n00:03:05.050 --> 00:03:10.180\nit's actually annoying, that people don't\nknow about the way Amazon handles storage\n\n61\n00:03:10.180 --> 00:03:11.750\nthat we need to be aware of.\n\n62\n00:03:11.750 --> 00:03:14.650\nSo, one of the things that I hear\nfrom people in the field, is.\n\n63\n00:03:14.650 --> 00:03:16.720\nWhen they say, hey,\nI need to deploy a new server.\n\n64\n00:03:16.720 --> 00:03:19.810\nAnd I say, are you gonna put it in\nthe cloud, or are you doing traditional?\n\n65\n00:03:19.810 --> 00:03:21.540\nAnd they say,\nwe're thinking about doing traditional.\n\n66\n00:03:21.540 --> 00:03:24.070\nAnd I'll say, you know, you should\nreally consider using a cloud service.\n\n67\n00:03:24.070 --> 00:03:26.880\nBecause you just get so\nmuch great functionality and\n\n68\n00:03:26.880 --> 00:03:28.220\ncost efficiencies out of it.\n\n69\n00:03:28.220 --> 00:03:30.020\nIt's really a great solution.\n\n70\n00:03:30.020 --> 00:03:33.500\nAnd one of the feedback\nthat I hear just so often.\n\n71\n00:03:33.500 --> 00:03:36.400\nIs yeah, but\nI really don't think my data's safe.\n\n72\n00:03:36.400 --> 00:03:39.730\nI don't wanna put my data up there in\nthe cloud and then, have it at risk.\n\n73\n00:03:39.730 --> 00:03:41.560\nAnd that's a common thought.\n\n74\n00:03:41.560 --> 00:03:42.970\nA lot of people feel that way.\n\n75\n00:03:42.970 --> 00:03:45.680\nAnd Amazon has a lot of measures\nthat I know we've talked about in\n\n76\n00:03:45.680 --> 00:03:49.090\nother episodes to help ensure\nthat your data is always safe.\n\n77\n00:03:49.090 --> 00:03:54.150\nOne of the best measures is that whenever\nyou use disk storage with Amazon,\n\n78\n00:03:54.150 --> 00:03:57.960\nwhen you turn it back over to them,\nwhen you deprovision the disk and\n\n79\n00:03:57.960 --> 00:04:00.920\ngive it back to Amazon, they erase it.\n\n80\n00:04:00.920 --> 00:04:04.680\nThey do a DOD level sweep on it to make\nsure that data's completely released\n\n81\n00:04:04.680 --> 00:04:06.800\nbefore assigning it to another customer.\n\n82\n00:04:06.800 --> 00:04:10.710\nAnd then, when that other customer\ngets that data disk, it's been erased.\n\n83\n00:04:10.710 --> 00:04:14.390\nAnd so, if they were to run a disk\nanalysis software suite in their VM,\n\n84\n00:04:14.390 --> 00:04:16.620\nin their instance, you can do that.\n\n85\n00:04:16.620 --> 00:04:18.310\nBut it'll scan it and\nit'll find no data, right?\n\n86\n00:04:18.310 --> 00:04:20.580\nSo that's great,\nit's a great security feature.\n\n87\n00:04:20.580 --> 00:04:22.690\nBut what Amazon doesn't\nreally tell you about,\n\n88\n00:04:22.690 --> 00:04:28.040\nis that they don't actually scrub\nit until you go to use it again.\n\n89\n00:04:28.040 --> 00:04:32.220\nSo, what'll happen is, let's say that,\nlet's say Daniel spins up a server, right?\n\n90\n00:04:32.220 --> 00:04:35.270\nAnd he puts some sensitive data on there,\nit's got all sorts of critical stuff, and\n\n91\n00:04:35.270 --> 00:04:36.580\nthen, he decommissions the server.\n\n92\n00:04:36.580 --> 00:04:38.240\nSo, it's gone.\nHe terminates the instance,\n\n93\n00:04:38.240 --> 00:04:40.280\ndeletes the volumes, and they're gone.\n\n94\n00:04:40.280 --> 00:04:43.740\nAnd then, I come along as another\ncustomer and I spin up my own server.\n\n95\n00:04:43.740 --> 00:04:45.530\nAnd I allocate some storage, and\n\n96\n00:04:45.530 --> 00:04:49.990\nit just happens to be on the same\nphysical disk that Daniel is using, okay?\n\n97\n00:04:49.990 --> 00:04:52.120\nWell, the data actually\nhasn't been erased yet.\n\n98\n00:04:53.190 --> 00:04:55.790\nPotentially, it would be\nextremely unlikely, but\n\n99\n00:04:55.790 --> 00:04:59.070\nlet's say he had a 64 gig drive and\nI provision a 64 gig drive, and\n\n100\n00:04:59.070 --> 00:05:02.900\nso, they just happen to line up exactly\non the same drives, the same place.\n\n101\n00:05:02.900 --> 00:05:05.270\nTechnically, his data is still there,\nright?\n\n102\n00:05:05.270 --> 00:05:07.640\nEven though it's been assigned to me.\n\n103\n00:05:07.640 --> 00:05:11.560\nAnd then,\nthe first time I go to access that disk,\n\n104\n00:05:11.560 --> 00:05:16.500\nwhen I go to access block one,\nin the background, Amazon erases it.\n\n105\n00:05:16.500 --> 00:05:17.990\nAnd they erase it then.\n\n106\n00:05:17.990 --> 00:05:20.210\nAnd so, what they're doing is\nthey're saying, hey you know,\n\n107\n00:05:20.210 --> 00:05:24.130\nwe could do a seven pass sweep or\na three pass sweep.\n\n108\n00:05:24.130 --> 00:05:27.020\nYou run an erase operation on every single\n\n109\n00:05:27.020 --> 00:05:29.350\nbit of data every time\nit gets provisioned.\n\n110\n00:05:29.350 --> 00:05:33.150\nBut the reality is most people\nprovision more data than we need and\n\n111\n00:05:33.150 --> 00:05:34.690\nwe never use it all.\n\n112\n00:05:34.690 --> 00:05:37.270\nSo, I might provision myself\na 1 terabyte drive and\n\n113\n00:05:37.270 --> 00:05:39.490\nthen I only use like 200 gigs of it.\n\n114\n00:05:39.490 --> 00:05:42.000\nAnd then, when I'm done, I turn it back\ninto Amazon and they provision it back to\n\n115\n00:05:42.000 --> 00:05:43.750\nsomeone else, and\nmaybe they don't use the whole terabyte.\n\n116\n00:05:43.750 --> 00:05:47.030\nAnd so, Amazon would spend\na lot of time erasing storage\n\n117\n00:05:47.030 --> 00:05:48.270\nthat actually didn't have tobe erased.\n\n118\n00:05:48.270 --> 00:05:49.470\nNobody ever accessed it.\n\n119\n00:05:49.470 --> 00:05:50.220\nRight?\n\n120\n00:05:50.220 --> 00:05:53.440\nAnd so, what they do is they erase\nit the first time it's used.\n\n121\n00:05:53.440 --> 00:05:56.450\nSo, if I were to run a disk analysis\nprogram and start scanning that disk,\n\n122\n00:05:56.450 --> 00:05:59.390\nit would be erasing in the background\nbefore the scan happened.\n\n123\n00:05:59.390 --> 00:06:02.880\nOr, if I start writing my data, it would\nerase, and then I would write the data.\n\n124\n00:06:02.880 --> 00:06:05.490\nAmazon does that, so they can turn\nstorage around more quickly and\n\n125\n00:06:05.490 --> 00:06:07.750\nthey can extend the life of the storage.\n\n126\n00:06:07.750 --> 00:06:10.340\nRemember with SSD,\nyou can only write to a SSD so\n\n127\n00:06:10.340 --> 00:06:12.750\nmany times before it starts to degrade.\n\n128\n00:06:12.750 --> 00:06:15.800\nAnd so, by minimizing the erase\noperations they can make that stuff\n\n129\n00:06:15.800 --> 00:06:18.390\nlast a lot longer, so\nthere's a lot of reasons for it.\n\n130\n00:06:18.390 --> 00:06:21.360\nNow, for most of us we didn't need that\nlittle bit of information that I just\n\n131\n00:06:21.360 --> 00:06:22.510\nrattled on about.\n\n132\n00:06:22.510 --> 00:06:24.170\nSo, why did I bother mentioning it?\n\n133\n00:06:24.170 --> 00:06:28.160\nWell, first of all if it can be on the\nexam it's important to know, but secondly,\n\n134\n00:06:28.160 --> 00:06:32.650\nif you're doing provisioned IO then, the\nodds are you're worried about performance.\n\n135\n00:06:32.650 --> 00:06:33.930\nAnd if you're worried\nabout performance and\n\n136\n00:06:33.930 --> 00:06:37.630\nyou spin up a provision IOPS\ndisc you expect to have.\n\n137\n00:06:37.630 --> 00:06:40.920\nLet's say I reserve 10,000 IOPS for\na 200 gig disc.\n\n138\n00:06:40.920 --> 00:06:43.260\nI want 10,000 IOPS right now.\n\n139\n00:06:43.260 --> 00:06:44.670\nI'm not gonna get it.\n\n140\n00:06:44.670 --> 00:06:48.770\nWhen I start writing that disc Amazon's\ngonna start erasing in the background, and\n\n141\n00:06:48.770 --> 00:06:52.830\nI'm not gonna get 10,000 IOPS,\nand if it's a 200 gig disc and\n\n142\n00:06:52.830 --> 00:06:55.040\nI write 50 gigs to it now.\n\n143\n00:06:55.040 --> 00:06:58.640\nThe other 150 gigs have not been.\n\n144\n00:06:58.640 --> 00:06:59.750\nNot been erased yet.\n\n145\n00:06:59.750 --> 00:07:00.270\nRight.\n\n146\n00:07:00.270 --> 00:07:02.060\nAnd so, over the next year.\n\n147\n00:07:02.060 --> 00:07:02.650\nTwo years.\n\n148\n00:07:02.650 --> 00:07:03.200\nHowever long.\n\n149\n00:07:03.200 --> 00:07:05.250\nAs I continually write data to it,\n\n150\n00:07:05.250 --> 00:07:08.790\nthere's going to be times where I don't\nget those 10,000 apps that I'm paying for.\n\n151\n00:07:08.790 --> 00:07:09.510\nRight.\n\n152\n00:07:09.510 --> 00:07:11.610\nAnd so, if that's the case.\n\n153\n00:07:11.610 --> 00:07:13.910\nIf you're really worried\nabout performance.\n\n154\n00:07:13.910 --> 00:07:17.230\nThen, we need to do what's\ncalled pre-warming the disk.\n\n155\n00:07:17.230 --> 00:07:19.410\nSo, Amazon,\nthey've got some really weird words for\n\n156\n00:07:19.410 --> 00:07:21.250\nthis if you dig deep in\nthe technical documents.\n\n157\n00:07:21.250 --> 00:07:24.370\nI think they assume nobody's\ngonna read these things, and\n\n158\n00:07:24.370 --> 00:07:27.480\nso, they call it amortizing the IOPS.\n\n159\n00:07:27.480 --> 00:07:30.180\nIt's kind of like taking\na mortgage on a house where\n\n160\n00:07:30.180 --> 00:07:32.610\nyou pay the interest throughout the loan.\n\n161\n00:07:32.610 --> 00:07:36.320\nSo, you're taking this hit on iops\nthroughout the lifecycle of that storage,\n\n162\n00:07:36.320 --> 00:07:37.960\nand so, most people never notice.\n\n163\n00:07:37.960 --> 00:07:39.430\nYeah, you take a little\nIOPS hit throughout\n\n164\n00:07:39.430 --> 00:07:41.440\nthe life of this drive you might run for\nthree years.\n\n165\n00:07:41.440 --> 00:07:43.440\nAnd so,\nyou just don't notice it spreads out.\n\n166\n00:07:43.440 --> 00:07:46.910\nBut if you're a high performance person,\nyou notice.\n\n167\n00:07:46.910 --> 00:07:47.710\nYou notice right away.\n\n168\n00:07:47.710 --> 00:07:50.380\nHey, performance of my database sucks,\nthe first day.\n\n169\n00:07:50.380 --> 00:07:51.187\nAnd then, the second day is great.\n\n170\n00:07:51.187 --> 00:07:52.139\nThird day is great.\n\n171\n00:07:52.139 --> 00:07:54.911\nI need a good right here\nat the very beginning.\n\n172\n00:07:54.911 --> 00:07:59.327\nSo, the way we do pre-warming\nIf you simply either read or\n\n173\n00:07:59.327 --> 00:08:03.310\nwrite to the entire disk as\nsoon as you provision it.\n\n174\n00:08:03.310 --> 00:08:07.390\nSo, you provision the disk,\nand maybe it's a 250 GB disk.\n\n175\n00:08:07.390 --> 00:08:09.840\nI'm gonna put a database on it.\n\n176\n00:08:09.840 --> 00:08:11.370\nRight?\nSo, it's 250 GB, and\n\n177\n00:08:11.370 --> 00:08:13.990\nI know my database is only 30 GB in size.\n\n178\n00:08:13.990 --> 00:08:16.690\nSo, I could go ahead and\ncopy my database to it and that would\n\n179\n00:08:16.690 --> 00:08:21.110\nprovision out the first 30 Gigs and\nit would basically pre-warm those 30 Gigs.\n\n180\n00:08:21.110 --> 00:08:23.930\nBut as the database grows it's going\nto keep hitting that limit and\n\n181\n00:08:23.930 --> 00:08:26.360\nkeep having to extend and\nerase in the background.\n\n182\n00:08:26.360 --> 00:08:30.785\nSo, instead I need to perform 1 big\nsweep and just write to the whole thing.\n\n183\n00:08:30.785 --> 00:08:34.495\nAnd there's a few different ways to do\nthat, but the best way, in my opinion,\n\n184\n00:08:34.495 --> 00:08:36.345\nis to simply format the drive.\n\n185\n00:08:36.345 --> 00:08:38.165\nWhen you format the drive, you format it.\n\n186\n00:08:38.165 --> 00:08:40.185\nYou write 0's to all of the sector's and\n\n187\n00:08:40.185 --> 00:08:44.850\nthat will cause Amazon to basically\nerase the drive in the background.\n\n188\n00:08:44.850 --> 00:08:46.710\nRight?\nAnd you can erase it all out, and\n\n189\n00:08:46.710 --> 00:08:47.760\ndo it all out at once.\n\n190\n00:08:47.760 --> 00:08:49.060\nWe don't normally like to do that.\n\n191\n00:08:49.060 --> 00:08:49.590\nWell, here.\n\n192\n00:08:49.590 --> 00:08:51.030\nLet me show you an example.\n\n193\n00:08:51.030 --> 00:08:54.120\nSo, let me jump into my dashboard, and\nI'm just going to go down here to volumes.\n\n194\n00:08:54.120 --> 00:08:56.280\nAnd I'm gonna create a new volume, and so\n\n195\n00:08:56.280 --> 00:08:59.520\nI know I'm gonna have something going\non where I need that performance and so\n\n196\n00:08:59.520 --> 00:09:02.450\nI'm going to come in here and\nchoose provisioned iOPS and\n\n197\n00:09:02.450 --> 00:09:05.910\nI'll define the size in the iOPS, and\nI'm gonna pick something really small here\n\n198\n00:09:05.910 --> 00:09:08.990\njust cause I don't wanna wait around\nall day while this thing prewarms.\n\n199\n00:09:10.070 --> 00:09:14.410\nSo, I'll come in and just do the bare\nminimum, a four gig disk of 100 iOPS And\n\n200\n00:09:14.410 --> 00:09:17.870\nI'll attach that to the right region,\nand we'll get that one creating.\n\n201\n00:09:17.870 --> 00:09:19.780\nAll right.\nNow, that one's gonna provision, and\n\n202\n00:09:19.780 --> 00:09:23.770\nit's easy to spot one that are provisioned\nI/O versus magnetic or whatever.\n\n203\n00:09:23.770 --> 00:09:26.170\nYou've got this volume type column, and\n\n204\n00:09:26.170 --> 00:09:30.000\nin here you'll see io1,\nthose are provisioned I/O.\n\n205\n00:09:30.000 --> 00:09:33.720\nGp2, those are general purpose SSD,\nand then you'll see standard,\n\n206\n00:09:33.720 --> 00:09:34.610\nwhich are magnetic.\n\n207\n00:09:34.610 --> 00:09:37.120\nI don't have any magnetic here,\nlet's whip one up real quick.\n\n208\n00:09:37.120 --> 00:09:41.940\nSo, if I whip up a magnetic\nHere I could specify,\n\n209\n00:09:41.940 --> 00:09:44.720\nyou see how IOPS is kind of grayed out,\nI can't even click on that.\n\n210\n00:09:44.720 --> 00:09:47.400\nThat's because it's no\nguarantees on this one.\n\n211\n00:09:47.400 --> 00:09:49.730\nSo, we'll just kind of\nwhip one of those up and\n\n212\n00:09:49.730 --> 00:09:51.650\nall of my servers are in one C right now.\n\n213\n00:09:51.650 --> 00:09:52.490\nSo, when that one gets in there,\n\n214\n00:09:52.490 --> 00:09:54.890\nsee it just says standard,\nit's not as cool as the others.\n\n215\n00:09:54.890 --> 00:09:57.550\nThere's no abbreviation for that one.\n\n216\n00:09:57.550 --> 00:09:58.850\nSo, you have standard io1 gp2.\n\n217\n00:09:58.850 --> 00:10:01.630\nThe one I just spun up a minute ago\nis this guy right here, this io1.\n\n218\n00:10:01.630 --> 00:10:05.590\nAnd I can take that and\nI can attach it to a server, right.\n\n219\n00:10:05.590 --> 00:10:07.420\nSo, I've got a Window server\nsitting in the background.\n\n220\n00:10:07.420 --> 00:10:09.280\nI'll just attach it to that.\n\n221\n00:10:09.280 --> 00:10:11.860\nSo, we'll go and attach it to ITProTV db1.\n\n222\n00:10:11.860 --> 00:10:14.370\nAnd we'll get that attached.\n\n223\n00:10:14.370 --> 00:10:15.800\nAnd it's gonna attach it to it.\n\n224\n00:10:15.800 --> 00:10:20.100\nNow, that disk is 4 gigs in size.\n\n225\n00:10:20.100 --> 00:10:22.440\nProvisioned IO, 100 IOs per second.\n\n226\n00:10:23.530 --> 00:10:27.600\nBut the first time I start to use it, it's\ngonna be erasing in the background, so\n\n227\n00:10:27.600 --> 00:10:29.560\nI'm not really gonna get 100 IOs.\n\n228\n00:10:29.560 --> 00:10:31.800\nAnd if I access the whole disk at once,\nit's no big deal, but\n\n229\n00:10:31.800 --> 00:10:35.950\nif I'm accessing it slowly, like growing\nover years, then it is a big deal then it\n\n230\n00:10:35.950 --> 00:10:40.250\ndoes hurt performance and so that's where\nI need to just write to the whole disk at\n\n231\n00:10:40.250 --> 00:10:43.120\nonce and I'm just waiting for that little\nwheel to finish spinning right there and\n\n232\n00:10:43.120 --> 00:10:45.920\nthat'll tell me that its\nattached to the server and\n\n233\n00:10:45.920 --> 00:10:49.110\nonce its attached to the server then\nI can go in and I just do a format.\n\n234\n00:10:49.110 --> 00:10:55.120\nNow, in Linux you almost always do\na full format and so you just FSCK or\n\n235\n00:10:55.120 --> 00:10:59.250\nMKFS sorry to make the file system and\ndrop it on there and format that thing.\n\n236\n00:10:59.250 --> 00:11:03.360\nI mentioned FSEK, you can do a file\nsystem check, and as long as you tell\n\n237\n00:11:03.360 --> 00:11:06.290\nit to test every sector,\nthat causes a read on every sector,\n\n238\n00:11:06.290 --> 00:11:10.450\nwhich will also cause Amazon to do their\nerase, so that's how it works under Lenox.\n\n239\n00:11:10.450 --> 00:11:14.590\nBut, under Windows,\nwe can jump into our Windows machine, and\n\n240\n00:11:14.590 --> 00:11:16.900\nwe can get into our computer management.\n\n241\n00:11:17.910 --> 00:11:20.990\nand I should see that\nfour gig disk in there.\n\n242\n00:11:20.990 --> 00:11:23.140\nSo, when i look at\nthe disks that are present,\n\n243\n00:11:23.140 --> 00:11:24.570\nI've got a couple of disks on this thing.\n\n244\n00:11:24.570 --> 00:11:27.420\nHere is the four gig one\nthat I'm looking for, and\n\n245\n00:11:27.420 --> 00:11:31.990\nif I bring it online, and\nthen I initialize it.\n\n246\n00:11:31.990 --> 00:11:35.960\nSo, we'll go and get that one initialized,\nand I'm going to go in here and\n\n247\n00:11:35.960 --> 00:11:40.260\ndo a new simple line And\nwhen you start to spin off this volume,\n\n248\n00:11:40.260 --> 00:11:42.210\nit's going to be 4 gigs in size.\n\n249\n00:11:42.210 --> 00:11:46.470\nAnd by default, Microsoft wants to\ndo what's called a quick format.\n\n250\n00:11:46.470 --> 00:11:51.380\nNow, if you do a quick format, it only\nformats the file table and that's it.\n\n251\n00:11:51.380 --> 00:11:55.920\nThe rest of the drive it actually doesn't\ntouch which doesn't prewarm the disk.\n\n252\n00:11:55.920 --> 00:11:59.390\nBut if you uncheck that It's\ngoing to perform a full format.\n\n253\n00:11:59.390 --> 00:12:01.790\nIt's going to format every single sector,\n\n254\n00:12:01.790 --> 00:12:04.810\nwriting a zero to every\nsector on that storage.\n\n255\n00:12:04.810 --> 00:12:08.770\nWhich in the background is going to cause\nAmazon to erase every single sector or\n\n256\n00:12:08.770 --> 00:12:09.760\nevery block.\n\n257\n00:12:09.760 --> 00:12:12.870\nAnd so by doing that,\nit's going to take a lot longer, right?\n\n258\n00:12:12.870 --> 00:12:14.900\nFormatting this disk,\nwell it's only 4 gigs.\n\n259\n00:12:14.900 --> 00:12:15.540\nIt won't be that bad.\n\n260\n00:12:15.540 --> 00:12:17.550\nBut if this was a terrabyte drive?\n\n261\n00:12:17.550 --> 00:12:21.360\nIt could take an hour or two,\nespecially with degraded IO, right?\n\n262\n00:12:21.360 --> 00:12:24.260\nThis is even slower than formatting\na disk in your own office, right?\n\n263\n00:12:24.260 --> 00:12:28.590\nCuz in the background it's doing an erase\noperation on the storage first and\n\n264\n00:12:28.590 --> 00:12:30.610\nthen doing my formats right.\n\n265\n00:12:30.610 --> 00:12:34.530\nAnd when it's done I'll have\na four gig disk that is\n\n266\n00:12:34.530 --> 00:12:38.720\nnow running at a full 100 IOPS\nbecause that's where it's at.\n\n267\n00:12:38.720 --> 00:12:40.120\nIt's not having to do that\nerase on the backend.\n\n268\n00:12:40.120 --> 00:12:42.290\nSo, that's called pre-warming a disk.\n\n269\n00:12:42.290 --> 00:12:46.200\nI know we talked about\npre-warming virtual machines and\n\n270\n00:12:46.200 --> 00:12:47.990\nother things in previous shows.\n\n271\n00:12:47.990 --> 00:12:48.750\nI think we did.\n\n272\n00:12:50.300 --> 00:12:51.630\nShoot, what do we pre-warn before?\n\n273\n00:12:51.630 --> 00:12:53.130\nI think it was a VM.\n\n274\n00:12:53.130 --> 00:12:56.570\nIf you have an auto-scale group or\nwhatever, you can pre-warm those.\n\n275\n00:12:56.570 --> 00:12:58.670\nOr we pre-warmed a load balancer.\n\n276\n00:12:58.670 --> 00:13:00.480\nAnd when we pre-warmed a load balancer,\n\n277\n00:13:00.480 --> 00:13:04.210\nwe actually had to send a ticket to\nAmazon to get them to pre-warm it for us.\n\n278\n00:13:04.210 --> 00:13:07.840\nBut in this scenario, pre-warming storage,\nwe don't, we can do it ourselves.\n\n279\n00:13:07.840 --> 00:13:08.990\nYou just have to write to every sector.\n\n280\n00:13:08.990 --> 00:13:10.380\nSo, that's going to write.\n\n281\n00:13:10.380 --> 00:13:11.220\nI'm only 35% done.\n\n282\n00:13:11.220 --> 00:13:12.500\nYou see.\nIt takes awhile, but\n\n283\n00:13:12.500 --> 00:13:13.860\nthat disk now will be pre warmed.\n\n284\n00:13:13.860 --> 00:13:15.340\n>> Now, Don.\nWe should probably.\n\n285\n00:13:15.340 --> 00:13:18.840\nIf you have provision IO's and you're\nadding or that provision type of storage,\n\n286\n00:13:18.840 --> 00:13:20.640\nand you're adding that to your machine.\n\n287\n00:13:20.640 --> 00:13:22.690\nYou should probably do\nthe pre warming every time.\n\n288\n00:13:22.690 --> 00:13:23.290\nRight.\n\n289\n00:13:23.290 --> 00:13:23.860\n>> Pretty much.\n\n290\n00:13:23.860 --> 00:13:27.940\nI mean if you're in a hurry you can\nalways deal with it later possibly,\n\n291\n00:13:27.940 --> 00:13:31.430\nif you do a big fat read operation\non the thing it will do it, so\n\n292\n00:13:31.430 --> 00:13:33.990\nif you're in a hurry you can skip it and\ncatch it later.\n\n293\n00:13:33.990 --> 00:13:35.140\nBut generally, I do.\n\n294\n00:13:35.140 --> 00:13:38.490\nYeah, if I'm going to go through\nthe trouble of using provision IO then I'm\n\n295\n00:13:38.490 --> 00:13:39.140\ngoing to do this.\n\n296\n00:13:39.140 --> 00:13:41.480\nAll right, now speaking of doing it later,\n\n297\n00:13:41.480 --> 00:13:45.870\nthere are times where I might have\na disc that all ready has data on it and\n\n298\n00:13:45.870 --> 00:13:48.340\nif I already have data on it,\nI don't wanna format it, right?\n\n299\n00:13:48.340 --> 00:13:51.120\nAnd that's where you can do things like\na check disk or whatever that are normally\n\n300\n00:13:51.120 --> 00:13:54.840\ncompletely pointless on an instance,\ncause they're virtual, right?\n\n301\n00:13:54.840 --> 00:13:58.820\nBut just the fact that they cause you to\nread every sector is enough to prewarm\n\n302\n00:13:58.820 --> 00:13:59.950\nthat disk, all right.\n\n303\n00:13:59.950 --> 00:14:03.200\nAnd let me give you a scenario where you\nmight already have data on that disk.\n\n304\n00:14:03.200 --> 00:14:08.220\nAnd that would be Maybe the disk\nwasn't originally for vision IO.\n\n305\n00:14:08.220 --> 00:14:13.050\nSo, for example on this computer,\nI've got a 250 gig disk up here.\n\n306\n00:14:13.050 --> 00:14:13.930\nIt is right here.\n\n307\n00:14:13.930 --> 00:14:17.460\nThis is 250 gigs and\nit's where I'm storing my database or\n\n308\n00:14:17.460 --> 00:14:19.520\nif I had a database in here,\nwhere it would really be.\n\n309\n00:14:19.520 --> 00:14:22.450\nSo, right now I just have this little\ntext file with a bunch of junk in\n\n310\n00:14:22.450 --> 00:14:23.150\nit and that's it.\n\n311\n00:14:23.150 --> 00:14:24.990\nThis is a 250 gig drive.\n\n312\n00:14:24.990 --> 00:14:29.100\nWell, when I provision that,\nit's right here, and I can see,\n\n313\n00:14:29.100 --> 00:14:30.760\noh, not that one, this one.\n\n314\n00:14:30.760 --> 00:14:31.490\nI provisioned it.\n\n315\n00:14:31.490 --> 00:14:37.570\nThis is itprotv-db01-db, and\nI provisioned it as general purpose SSD.\n\n316\n00:14:37.570 --> 00:14:41.070\nAnd at the time, I might have\nthought that was a good idea, and\n\n317\n00:14:41.070 --> 00:14:45.390\nnow I've been running for a few months and\nI'm noticing that I'm getting throttled.\n\n318\n00:14:45.390 --> 00:14:47.960\nWe'll talk about it in the monitoring\nepisode out of cs happening.\n\n319\n00:14:47.960 --> 00:14:50.530\nBut I'm getting throttled and\nI know that I need\n\n320\n00:14:50.530 --> 00:14:53.750\na guarantee of IOPS that's better\nthan what I'm getting over here.\n\n321\n00:14:53.750 --> 00:14:56.840\nRight now I'm guaranteed 750 IOPS\nbecause of the size of the drive but\n\n322\n00:14:56.840 --> 00:15:00.840\nI need a true 3000 IOPS all the time or\nsomething of that nature.\n\n323\n00:15:00.840 --> 00:15:05.560\nWell, what I can do is I can convert\nthis over to Provision IO but\n\n324\n00:15:05.560 --> 00:15:07.070\nit's not easy, all right?\n\n325\n00:15:07.070 --> 00:15:07.580\nFirst off,\n\n326\n00:15:07.580 --> 00:15:12.090\nI'm going to have to detach this disk\nfrom the operating system underneath it\n\n327\n00:15:12.090 --> 00:15:16.050\nwhich means that if I'm running something\nlike Microsoft SQL server, I'm going to\n\n328\n00:15:16.050 --> 00:15:20.430\nhave to stop that server or you know, if\nthis is a Linux server running Apache or\n\n329\n00:15:20.430 --> 00:15:23.710\nwhatever, I'm going to have to stop that\nservice so it's not relying on that disk.\n\n330\n00:15:23.710 --> 00:15:29.450\nAnd then I need to detach the disk from\nthe instance, take a snapshot of it,\n\n331\n00:15:29.450 --> 00:15:33.780\nand then I can restore that snapshot and\nrestore it as provisioned io.\n\n332\n00:15:33.780 --> 00:15:35.990\nReattach it to the VM,\nand I'm back in business.\n\n333\n00:15:35.990 --> 00:15:39.960\nIt sounds somewhat complicated,\nbut it's really not that bad.\n\n334\n00:15:39.960 --> 00:15:44.814\nNow, the first part is I need to get that\ndetached, and so what I'm gonna do I'm\n\n335\n00:15:44.814 --> 00:15:49.681\ngoing to jump over to my virtual machine,\nand here I am in computer management.\n\n336\n00:15:49.681 --> 00:15:54.141\nIn Linux we would use the mount command,\nor the unmount command to unmount it, but\n\n337\n00:15:54.141 --> 00:15:58.148\nhere I'm going to use Just the computer\nmanagement utility in Windows and\n\n338\n00:15:58.148 --> 00:16:00.880\nyou can take a disc and\nyou can mark those offline.\n\n339\n00:16:00.880 --> 00:16:02.730\nSo, I'm gonna take that one offline, so\n\n340\n00:16:02.730 --> 00:16:05.260\nnot it's not being used\nby the operating system.\n\n341\n00:16:05.260 --> 00:16:07.460\nAnd now that that's happened I\ncan come back here to my UI and\n\n342\n00:16:07.460 --> 00:16:12.660\nI can choose that volume, and\nI can go up to actions and detach volume.\n\n343\n00:16:12.660 --> 00:16:17.460\nNow, I already unplugged it in Windows,\nso Windows will be happy about it, right?\n\n344\n00:16:17.460 --> 00:16:20.200\nOr in Linux, you can use unmount,\nand it will be happy about it.\n\n345\n00:16:20.200 --> 00:16:22.060\nIf you don't have time for\nthat, you can force detach it.\n\n346\n00:16:22.060 --> 00:16:25.570\nBut the risk there is that you might be\nin the middle of a write operation, and\n\n347\n00:16:25.570 --> 00:16:26.470\nyou force detach it.\n\n348\n00:16:26.470 --> 00:16:28.690\nNow you've got corrupt data\nthat you're about to upgrade.\n\n349\n00:16:28.690 --> 00:16:30.290\nAnd there's not a whole\nlot of point in that.\n\n350\n00:16:30.290 --> 00:16:33.410\nSo I'm going to just detach it,\nregular style.\n\n351\n00:16:33.410 --> 00:16:36.620\nAnd we'll say yes to that,\nand hopefully it succeeds.\n\n352\n00:16:36.620 --> 00:16:40.100\nOnce it's detached,\nI can't just convert it to Provision IO,\n\n353\n00:16:40.100 --> 00:16:40.980\nthey don't let you do that.\n\n354\n00:16:40.980 --> 00:16:42.540\nWhen you provisioned it originally,\n\n355\n00:16:42.540 --> 00:16:45.090\nyou picked the type of storage\nyou wanted and that's it.\n\n356\n00:16:45.090 --> 00:16:50.000\nSo now what I need to do is take\na snapshot and restore the snapshot.\n\n357\n00:16:50.000 --> 00:16:50.580\nAll right?\n\n358\n00:16:50.580 --> 00:16:53.120\nSo I'm going to give it a second\nhere while it detaches and\n\n359\n00:16:53.120 --> 00:16:56.270\nas soon as it detaches we'll just\ngo right up here under actions and\n\n360\n00:16:56.270 --> 00:16:58.000\ndo creative snapshot, all right?\n\n361\n00:16:58.000 --> 00:17:00.190\nIt shouldn't take,\nusually doesn't take this long.\n\n362\n00:17:00.190 --> 00:17:02.970\nIt's kind of spinning away there, but\nwe'll give it a second while it does that.\n\n363\n00:17:02.970 --> 00:17:05.210\nMaybe if I hit refresh enough\ntimes it will finish faster.\n\n364\n00:17:05.210 --> 00:17:05.836\nAnd it did.\n\n365\n00:17:05.836 --> 00:17:06.423\nLook at that.\n\n366\n00:17:06.423 --> 00:17:08.250\n>> Mm-hm.\n>> See, sometimes you just hit refresh.\n\n367\n00:17:08.250 --> 00:17:11.030\nSo I'm gonna check out that disk and\nI'll go up here to actions and\n\n368\n00:17:11.030 --> 00:17:12.530\ncreate a snapshot.\n\n369\n00:17:12.530 --> 00:17:18.430\nAnd I'm gonna call this it protv-db01-db.\n\n370\n00:17:18.430 --> 00:17:24.170\nAnd I'll call this\nthe Snapshot of the GP2 disk,\n\n371\n00:17:24.170 --> 00:17:27.390\njust so I can remember,\nand I'll create that one.\n\n372\n00:17:27.390 --> 00:17:30.770\nIf you don't name your snapshot,\nit is a pain to find a snapshot.\n\n373\n00:17:30.770 --> 00:17:34.910\nBut now that I've got it I can jump\ndown here to snapshots, and there's\n\n374\n00:17:34.910 --> 00:17:38.070\nmy snapshot being created, so I can just\ngive that a moment while it creates.\n\n375\n00:17:38.070 --> 00:17:40.280\nIt's a pretty small disk with\nvery little data on it, so\n\n376\n00:17:40.280 --> 00:17:42.140\nthe snapshot should happen pretty quick.\n\n377\n00:17:42.140 --> 00:17:44.830\nThe larger the disk and\nthe more data you have in it,\n\n378\n00:17:44.830 --> 00:17:47.300\nthe longer that snapshot takes to create.\n\n379\n00:17:47.300 --> 00:17:50.040\nBut as soon as it's done\nwe'll be able to choose it.\n\n380\n00:17:50.040 --> 00:17:55.210\nGo up here to action and you'll be able to\ncreate a volume based on that snapshot.\n\n381\n00:17:55.210 --> 00:17:58.620\nAnd when you create the new volume,\nyou can pick whatever you want.\n\n382\n00:17:58.620 --> 00:18:01.270\nRight.\nAnd so I can move it to Provisioned IO,\n\n383\n00:18:01.270 --> 00:18:03.000\nand it's got the same data.\n\n384\n00:18:03.000 --> 00:18:05.380\nThen I just need to attach it\nto the virtual machine again and\n\n385\n00:18:05.380 --> 00:18:07.090\nwe'll be back in business, right?\n\n386\n00:18:07.090 --> 00:18:09.200\nSo, looks like it finished,\nso it's completed.\n\n387\n00:18:09.200 --> 00:18:10.840\nAnd I'll go to Action > Create Volume.\n\n388\n00:18:10.840 --> 00:18:14.550\nAnd when I go to create the volume,\nhere it is.\n\n389\n00:18:14.550 --> 00:18:17.170\nIt's General Purpose SSD cuz that's\nwhere it came from, right, so\n\n390\n00:18:17.170 --> 00:18:19.310\nit's just kinda reflecting\nwhat it had before.\n\n391\n00:18:19.310 --> 00:18:24.580\nAnd I can switch that to Provisioned IO,\nand now it's going to set to its defaults.\n\n392\n00:18:24.580 --> 00:18:28.030\nI'm getting 7500 IO as its default.\n\n393\n00:18:28.030 --> 00:18:28.669\nLet's see if it will let me lower that.\n\n394\n00:18:28.669 --> 00:18:30.543\nI need to move it US-1c.\n\n395\n00:18:30.543 --> 00:18:33.627\nI just wanted 3000 IO's.\n\n396\n00:18:33.627 --> 00:18:35.336\nI'm not trying to be greedy.\n\n397\n00:18:35.336 --> 00:18:36.377\nI'll set that.\n\n398\n00:18:36.377 --> 00:18:38.840\nNow it's going to be Provisioned IO.\n\n399\n00:18:38.840 --> 00:18:41.550\nI can go create that, and there it goes.\n\n400\n00:18:41.550 --> 00:18:44.270\nBut I gotta be aware that\nit just made a volume,\n\n401\n00:18:44.270 --> 00:18:49.870\na volume with my data on it that is\nprovision IO but its not pre warmed.\n\n402\n00:18:49.870 --> 00:18:52.050\nRight.\nSo it's not pre warmed when it does this,\n\n403\n00:18:52.050 --> 00:18:56.240\nand that means that, I'm not gonna get\nthe full IO right at the beginning.\n\n404\n00:18:56.240 --> 00:18:59.140\nBut now I can jump to my volumes, and\n\n405\n00:18:59.140 --> 00:19:03.130\nI should have this new volume right\nhere that just got provisioned.\n\n406\n00:19:03.130 --> 00:19:05.102\nAnd I can see that it's io1, right?\n\n407\n00:19:05.102 --> 00:19:11.297\nAnd I can name it cuz this is\ngonna be the new itprotv-db01-db.\n\n408\n00:19:11.297 --> 00:19:12.502\nRight?\n\n409\n00:19:12.502 --> 00:19:14.459\nAnd then this one down here\nI'll just rename it so\n\n410\n00:19:14.459 --> 00:19:16.340\nI that I can remember that\nthis is like the old.\n\n411\n00:19:18.060 --> 00:19:20.627\nThat's the old one that\nwas generally purpose SSD.\n\n412\n00:19:20.627 --> 00:19:23.580\nHere's the new one that's provisioned IO.\n\n413\n00:19:23.580 --> 00:19:27.170\nAnd i'm gonna go and\nattach it to the volume now.\n\n414\n00:19:27.170 --> 00:19:30.640\nI did kinda skip something because\nin Windows it doesn't matter.\n\n415\n00:19:30.640 --> 00:19:34.590\nIn the Linux world, we probably need\nto pay attention to where it's mounted.\n\n416\n00:19:34.590 --> 00:19:39.460\nIf it's mounted to slash dev slash sdb,\nversus slash dev slash sde,\n\n417\n00:19:39.460 --> 00:19:43.410\nright, you wanna make sure it's mounted\nthe same way, and that way your\n\n418\n00:19:43.410 --> 00:19:46.970\nfstab table will stay the same, and\nyou'll mount, everything will be great.\n\n419\n00:19:46.970 --> 00:19:49.830\nIn the Windows world it's gonna see\nthe volume, it sees the data, and\n\n420\n00:19:49.830 --> 00:19:51.850\nit actually recognizes it and\nattaches the drive letter back to it.\n\n421\n00:19:51.850 --> 00:19:53.420\nSo I don't really care\nabout it in Windows.\n\n422\n00:19:53.420 --> 00:19:56.480\nIn the Linux world, you do wanna make\nsure you write down where it was mounted.\n\n423\n00:19:56.480 --> 00:20:00.070\nSee how this one's gonna\nmake it as device xvdh.\n\n424\n00:20:00.070 --> 00:20:02.660\nWell, was it xvdh before?\n\n425\n00:20:02.660 --> 00:20:04.350\nI don't know.\nI don't remember, I didn't pay attention.\n\n426\n00:20:04.350 --> 00:20:05.890\nSo that's my fault.\n\n427\n00:20:05.890 --> 00:20:06.890\nBut in Windows,\n\n428\n00:20:06.890 --> 00:20:09.400\nWindows will deal with that cuz Windows\nputs a drive signature on there.\n\n429\n00:20:09.400 --> 00:20:10.580\nBut Linux doesn't do that.\n\n430\n00:20:10.580 --> 00:20:12.720\nAnd so on Linux, we just need to\nremember what it was mounted as and\n\n431\n00:20:12.720 --> 00:20:13.880\nput it to be the same.\n\n432\n00:20:13.880 --> 00:20:19.200\nOr know that we might have to edit\nour x tab cable to reflect that.\n\n433\n00:20:19.200 --> 00:20:22.220\nSo, I'm gonna attach that, and it's\ngonna stick the disc back on there and\n\n434\n00:20:22.220 --> 00:20:26.735\nonce the disc is start back on Windows\nwill see that, or I hope it will.\n\n435\n00:20:26.735 --> 00:20:31.510\n[LAUGH] And all my data is still in there,\nbut the other line data is not\n\n436\n00:20:31.510 --> 00:20:34.899\nprovisioned IO and so\nif I jump over to my Windows machine.\n\n437\n00:20:36.060 --> 00:20:39.770\nAnd I got a couple of disk\nthat are showing up here.\n\n438\n00:20:39.770 --> 00:20:41.820\nI don't know which one.\n\n439\n00:20:41.820 --> 00:20:43.890\nI should've done a unique file size so\nI can recognize.\n\n440\n00:20:43.890 --> 00:20:45.720\nI guess I can bring all these guys online.\n\n441\n00:20:45.720 --> 00:20:48.060\nWe just bring all these disks online.\n\n442\n00:20:48.060 --> 00:20:49.880\nAnd it was the first one I picked.\n\n443\n00:20:49.880 --> 00:20:52.870\nWhen I brought this disk online\nnotice how it has a drive letter, D.\n\n444\n00:20:52.870 --> 00:20:55.880\nI didn't assign it a drive letter,\nit's already got it\n\n445\n00:20:55.880 --> 00:20:58.890\nversus the other one here that's unknown,\nno drive letter, whatever.\n\n446\n00:20:58.890 --> 00:21:03.450\nThis one is already formatted, and\nif I open it up there is my data.\n\n447\n00:21:03.450 --> 00:21:05.990\nSo now I'm on Provision IO,\nthat's how we convert.\n\n448\n00:21:05.990 --> 00:21:07.530\nIt's not easy, it's a lot of steps.\n\n449\n00:21:07.530 --> 00:21:09.770\nThe server had to go offline for\nme to do it.\n\n450\n00:21:09.770 --> 00:21:15.920\nBut you can do it, if you've been running\nthis instance for a year, two years,\n\n451\n00:21:15.920 --> 00:21:19.310\nyou're noticing performance is slow,\nthis is the process you go to upgrade it.\n\n452\n00:21:19.310 --> 00:21:22.570\nOr maybe it's just an old instance and it\nwas made before Provision IO was offered.\n\n453\n00:21:22.570 --> 00:21:23.740\nIt wasn't always offered.\n\n454\n00:21:23.740 --> 00:21:26.565\nAnd so you might be on EBS or\neven Instance Store.\n\n455\n00:21:26.565 --> 00:21:28.465\nAnd this is a good way to move over and\n\n456\n00:21:28.465 --> 00:21:30.715\nget this converted over\ninto newer storage.\n\n457\n00:21:30.715 --> 00:21:34.655\n>> I take it this happens a lot because\nyou start off you say, normally I\n\n458\n00:21:34.655 --> 00:21:39.255\ncreate a database, I got my little online\nstore going on or whatever the case is.\n\n459\n00:21:39.255 --> 00:21:42.485\nAnd then as it starts to grow,\nas your business starts to grow you start\n\n460\n00:21:42.485 --> 00:21:47.025\ngetting more customers, well that general\npurpose that worked great before, and\n\n461\n00:21:47.025 --> 00:21:49.570\nnow you're the next big thing,\nand now you've gotta move.\n\n462\n00:21:49.570 --> 00:21:52.840\nSo I'm guessing that's normally why\nwe'd end up doing something like this.\n\n463\n00:21:52.840 --> 00:21:55.190\n>> Yeah, you basically,\nwe'll see this in the monitoring show,\n\n464\n00:21:55.190 --> 00:21:57.350\nyou monitor your credits, your IOPS.\n\n465\n00:21:57.350 --> 00:21:59.520\nI mean you can monitor either one,\nthe credits or the IOPS.\n\n466\n00:21:59.520 --> 00:22:02.650\nAnd if you just see that you're\nconsistently hitting your limit and\n\n467\n00:22:02.650 --> 00:22:03.780\nthat you're getting throttled,\n\n468\n00:22:03.780 --> 00:22:06.710\nthat you have this que that's starting to\nbuild up whenever you write to a disc.\n\n469\n00:22:06.710 --> 00:22:08.320\nThat's your red flag.\n\n470\n00:22:08.320 --> 00:22:11.400\nAnd for a little while you\ncan just add more storage.\n\n471\n00:22:11.400 --> 00:22:14.210\nWith general purpose SSD,\nyou just increase the size of the drive,\n\n472\n00:22:14.210 --> 00:22:15.393\nthat increases the.\n\n473\n00:22:15.393 --> 00:22:17.502\nRight?\nAnd you can do that up to 10,000.\n\n474\n00:22:17.502 --> 00:22:20.211\nBut that storage comes at a cost.\n\n475\n00:22:20.211 --> 00:22:24.186\nFor every gig of storage you're adding,\n10 cents an hour or\n\n476\n00:22:24.186 --> 00:22:27.252\nsomething, whatever it is, or .09 cents.\n\n477\n00:22:27.252 --> 00:22:28.280\nI don't know, it's something really cheap.\n\n478\n00:22:28.280 --> 00:22:29.620\nBut it still adds up.\n\n479\n00:22:29.620 --> 00:22:34.180\nSo, if I only need 50 gigs of storage but\nI have to provision out a terabyte of\n\n480\n00:22:34.180 --> 00:22:37.940\nstorage to get the IOPS I want it might\nactually be cheaper to switch over and\n\n481\n00:22:37.940 --> 00:22:40.630\ndo provisioned IO for\n50 gigs and get that.\n\n482\n00:22:40.630 --> 00:22:41.220\nIt may not.\n\n483\n00:22:41.220 --> 00:22:42.200\nSometimes that doesn't work out.\n\n484\n00:22:42.200 --> 00:22:44.860\nYou gotta kinda do the math on it and\nsee which one works.\n\n485\n00:22:44.860 --> 00:22:46.980\nBut this would be the way to move and\nget the guaranteed IOPS,\n\n486\n00:22:46.980 --> 00:22:48.080\nto know that you're gonna support that.\n\n487\n00:22:48.080 --> 00:22:51.730\nNow, most people have bursty traffic.\n\n488\n00:22:51.730 --> 00:22:54.850\nYou have busy time and you have slow\ntime and so Provision IO becomes too\n\n489\n00:22:54.850 --> 00:22:58.950\nexpensive because you're paying for high\nIO through times when you're not using it.\n\n490\n00:22:58.950 --> 00:23:01.660\nSo it's not always though\nthe great solution.\n\n491\n00:23:01.660 --> 00:23:05.285\nI would say nine times out of ten\nI'm doing general purpose SSD.\n\n492\n00:23:05.285 --> 00:23:10.295\nSo Provision IO is definitely kind\nof the exception, not the rule.\n\n493\n00:23:10.295 --> 00:23:13.805\n>> Well Don, obviously there's\na lot of cool things we can do with\n\n494\n00:23:13.805 --> 00:23:17.620\nthese different data storage types, and\nthe instance and things that we have.\n\n495\n00:23:17.620 --> 00:23:20.080\nIs there anything else that\nwe need to cover before,\n\n496\n00:23:20.080 --> 00:23:21.735\nwell we're almost running\nout of time here?\n\n497\n00:23:21.735 --> 00:23:22.627\n[LAUGH]\n>> I think that's it on these.\n\n498\n00:23:22.627 --> 00:23:23.930\nWe've got a lot more.\n\n499\n00:23:23.930 --> 00:23:27.280\nI know I've mentioned the monitoring\nepisode 20 times in this episode alone, so\n\n500\n00:23:27.280 --> 00:23:28.410\ndefinitely stay tuned for that.\n\n501\n00:23:28.410 --> 00:23:29.650\nWe're gonna see how to monitor this and\n\n502\n00:23:29.650 --> 00:23:31.830\nsee when you're hitting your limits and\nother things.\n\n503\n00:23:31.830 --> 00:23:32.910\nThere's cool stuff there.\n\n504\n00:23:32.910 --> 00:23:34.920\nWe've got a few other little\nstorage things to cover.\n\n505\n00:23:34.920 --> 00:23:38.788\nWe haven't even broken the tip of\nthe iceberg for things like backup and\n\n506\n00:23:38.788 --> 00:23:39.377\nrestore.\n\n507\n00:23:39.377 --> 00:23:40.711\nSo we'll get to see those later too.\n\n508\n00:23:40.711 --> 00:23:44.366\nBut these decisions are important to\nwhat we covered in the last two episodes\n\n509\n00:23:44.366 --> 00:23:48.380\nbecause the decisions you make when you\ndeploy the instance in the very beginning.\n\n510\n00:23:48.380 --> 00:23:50.970\nSo, you can make mistakes early on and\nthey kind of become.\n\n511\n00:23:50.970 --> 00:23:54.550\nsomewhat permanent, just difficult to fix,\nnot necessarily permanent.\n\n512\n00:23:54.550 --> 00:23:57.450\n>> Awesome, well thank you for that,\nand thank you, everyone, for watching.\n\n513\n00:23:57.450 --> 00:23:58.660\nWe're gonna go ahead and sign off.\n\n514\n00:23:58.660 --> 00:24:01.045\nFor ITProTV,\nI've been your host Daniel Lowrie.\n\n515\n00:24:01.045 --> 00:24:03.587\n>> And I'm Don Pezet.\n>> And we'll see you next time.\n\n516\n00:24:03.587 --> 00:24:08.510\n[MUSIC]\n\n",
          "vimeoId": "148922105"
        },
        {
          "description": "In this episode, Don and Daniel show you how to monitor your EC2 Instance performance. Watch here as they utilize CloudWatch to enable monitoring and explain how to interpret the data being displayed in CloudWatch. They also show you how to configure both system and instance status checks. Next they look at metrics available for Instances and EBS Volumes as well as Roles, which are used to assign access to CloudWatch. Also covered is setting up Alarms and the triggers that define them.",
          "length": "1867",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/amazon-acsa/amazon-acsa-3-2-monitoring_ec2_performance-121415-1.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/amazon-acsa/amazon-acsa-3-2-monitoring_ec2_performance-121415-1-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/amazon-acsa/amazon-acsa-3-2-monitoring_ec2_performance-121415-1-sm.jpg",
          "title": "Monitoring EC2 Performance",
          "transcript": "WEBVTT\n\n1\n00:00:00.008 --> 00:00:10.008\n[MUSIC]\n\n2\n00:00:11.504 --> 00:00:12.296\nAll right.\n\n3\n00:00:12.296 --> 00:00:16.000\nGreetings everyone and welcome to another\ngreat episode Episode of ITProTV.\n\n4\n00:00:16.000 --> 00:00:17.700\nI'm your host, Daniel Lowrie.\n\n5\n00:00:17.700 --> 00:00:21.644\nAnd in today's episode, we are continuing\non with our AWS Certified Sys Ops Admin\n\n6\n00:00:21.644 --> 00:00:23.546\nshow series that we've started here.\n\n7\n00:00:23.546 --> 00:00:27.525\nHopefully you're enjoying it, and joining\nme yet again is our resident expert here,\n\n8\n00:00:27.525 --> 00:00:28.297\nMr. Don Pezet.\n\n9\n00:00:28.297 --> 00:00:30.010\nDon, welcome to the show.\n\n10\n00:00:30.010 --> 00:00:30.840\nHow you doing today, sir?\n\n11\n00:00:30.840 --> 00:00:31.980\n>> Thanks for having me back, Daniel.\n\n12\n00:00:31.980 --> 00:00:34.280\nExcited to jump back\ninto the world of AWS.\n\n13\n00:00:34.280 --> 00:00:36.421\nAnd just see some of the neat\nstuff that's out there.\n\n14\n00:00:36.421 --> 00:00:39.712\nIn this episode we're going to\nbe tackling monitoring for EC2.\n\n15\n00:00:39.712 --> 00:00:41.962\nBecause you deploy a bunch\nof junk out there.\n\n16\n00:00:41.962 --> 00:00:45.120\nYou need to kind of keep an eye on it make\nsure it's doing what it's supposed to do.\n\n17\n00:00:45.120 --> 00:00:48.080\nSo we'll run through some of the different\nways we can monitor our systems.\n\n18\n00:00:48.080 --> 00:00:49.680\nMonitor them for health,\nfor performance, and\n\n19\n00:00:49.680 --> 00:00:51.837\nall the other things we need to do\nto make sure that we keep our job.\n\n20\n00:00:51.837 --> 00:00:53.296\nAnd that we rest easy each night.\n\n21\n00:00:53.296 --> 00:00:54.810\nSo kind of important stuff.\n\n22\n00:00:54.810 --> 00:00:55.730\n>> Yeah it was a nice thing.\n\n23\n00:00:55.730 --> 00:00:58.320\nNow this is where we're talking\nabout things like solar winds right,\n\n24\n00:00:58.320 --> 00:00:59.620\nthat's what we're going to use.\n\n25\n00:00:59.620 --> 00:01:01.270\n>> Well you certainly can.\n\n26\n00:01:01.270 --> 00:01:03.991\nAt the end of the day when you deploy\nyour instances you can monitor them\n\n27\n00:01:03.991 --> 00:01:05.296\nwith whatever the heck you want.\n\n28\n00:01:05.296 --> 00:01:07.220\nBut there's a lot of stuff built\nright into AWS that we can use.\n\n29\n00:01:07.220 --> 00:01:11.070\nAnd it kind of stops us from having to\ndeploy extra infrastructure like that.\n\n30\n00:01:11.070 --> 00:01:12.265\n>> Yeah.\nThat's very expensive too.\n\n31\n00:01:12.265 --> 00:01:12.900\n>> [LAUGH] Yeah.\n\n32\n00:01:12.900 --> 00:01:14.520\nSave you a bunch of money.\n\n33\n00:01:14.520 --> 00:01:16.730\nSo let's talk about what Amazon's got for\nus.\n\n34\n00:01:16.730 --> 00:01:18.630\nNow, Amazon's monitoring\nhas a really cool name.\n\n35\n00:01:18.630 --> 00:01:19.454\nIt's called Cloud Watch.\n\n36\n00:01:19.454 --> 00:01:22.570\nAnd so you want to use it anyways,\nit's just got a cool name.\n\n37\n00:01:22.570 --> 00:01:25.150\nBut the best part about it\nis it's built into AWS.\n\n38\n00:01:25.150 --> 00:01:28.990\nBasically what Amazon did is they\nsaid look, we need to bill you.\n\n39\n00:01:28.990 --> 00:01:30.380\nYou've got to pay us money.\n\n40\n00:01:30.380 --> 00:01:35.140\nAnd they wanna bill you\nbased on the CPU you use.\n\n41\n00:01:35.140 --> 00:01:36.920\nThe disk IO that you use.\n\n42\n00:01:36.920 --> 00:01:38.540\nThe amount of disk storage that you use.\n\n43\n00:01:38.540 --> 00:01:41.380\nSo, they have to collect that\ndata to know what to bill you.\n\n44\n00:01:41.380 --> 00:01:45.260\nSo, they said hey why not make this\ndata available to the end users too.\n\n45\n00:01:45.260 --> 00:01:46.990\nWe have to collect it anyway for\nbilling purposes.\n\n46\n00:01:46.990 --> 00:01:48.720\nSo, let's just share it with you guys too.\n\n47\n00:01:48.720 --> 00:01:51.370\nAnd now you can use it for\nmonitoring part of that health.\n\n48\n00:01:51.370 --> 00:01:54.480\nThey also needed to monitor your\ninstances to make sure they were healthy.\n\n49\n00:01:54.480 --> 00:01:55.880\nBecause if there was a failure.\n\n50\n00:01:55.880 --> 00:01:58.470\nThey needed to know to move you\nover to new racks, and so on.\n\n51\n00:01:58.470 --> 00:02:00.920\nAnd so again,\nthey had to monitor it themselves.\n\n52\n00:02:00.920 --> 00:02:02.620\nWhy not share it with you?\n\n53\n00:02:02.620 --> 00:02:05.450\nAnd so CloudWatch is built into AWS.\n\n54\n00:02:05.450 --> 00:02:07.570\nIt's actually turned on by default.\n\n55\n00:02:07.570 --> 00:02:09.750\nIt's running, monitoring your systems.\n\n56\n00:02:09.750 --> 00:02:12.900\nAnd it does a lot of really good stuff,\njust right out of the box.\n\n57\n00:02:12.900 --> 00:02:14.240\nBut you can make it better.\n\n58\n00:02:14.240 --> 00:02:17.090\nThere's extra things you could do\nit to improve it, to change it,\n\n59\n00:02:17.090 --> 00:02:19.890\nto make it work meeting your needs.\n\n60\n00:02:19.890 --> 00:02:22.430\nAnd basically avoid using\nan external system and\n\n61\n00:02:22.430 --> 00:02:23.790\nmonitor like Daniel was mentioning.\n\n62\n00:02:23.790 --> 00:02:26.120\nAnd so\nthat's where it really gets kind of cool.\n\n63\n00:02:26.120 --> 00:02:30.790\nNow CloudWatch is enable by default but\nthere's actually two levels of CloudWatch.\n\n64\n00:02:30.790 --> 00:02:33.910\nIf you ever look at the Amazon pricing\npage you'll see that there's one level of\n\n65\n00:02:33.910 --> 00:02:36.490\nCloudWatch that falls\nunder the free usage tier.\n\n66\n00:02:36.490 --> 00:02:38.120\nAnd then there's one level that doesn't.\n\n67\n00:02:38.120 --> 00:02:39.940\nThe free usage tier CloudWatch,\n\n68\n00:02:39.940 --> 00:02:42.050\nit's collecting your\nmetrics every five minutes.\n\n69\n00:02:42.050 --> 00:02:44.650\nThat's all Amazon needs for their billing,\nand so that's what they give you,\n\n70\n00:02:44.650 --> 00:02:45.570\nand it's free.\n\n71\n00:02:45.570 --> 00:02:48.830\nSo it's monitoring things like your\nCPU and network and platform and\n\n72\n00:02:48.830 --> 00:02:50.950\nall that good stuff every five minutes.\n\n73\n00:02:50.950 --> 00:02:53.930\nAnd if that's all you need, you can get\nsome great information out of there,\n\n74\n00:02:53.930 --> 00:02:55.320\ndoesn't cost you a dime.\n\n75\n00:02:56.350 --> 00:03:00.530\nBut you can turn on what's called\nCloudwatch Detailed Monitoring.\n\n76\n00:03:00.530 --> 00:03:03.520\nDetailed Monitoring moves\nit up to every one minute.\n\n77\n00:03:03.520 --> 00:03:05.740\nSo you get much more relevant\ndata much more quickly.\n\n78\n00:03:05.740 --> 00:03:07.360\nYou can dial it down to a smaller time.\n\n79\n00:03:07.360 --> 00:03:09.180\nIt's more granular, right?\n\n80\n00:03:09.180 --> 00:03:11.900\nAnd you get some enhanced\nmonitoring functionality like\n\n81\n00:03:11.900 --> 00:03:14.230\ncustom metrics that we'll\nsee in another episode.\n\n82\n00:03:14.230 --> 00:03:17.160\nThat are pretty neat and\nreally open up some power.\n\n83\n00:03:17.160 --> 00:03:19.970\nAnd when you have that,\nthe sky's the limit.\n\n84\n00:03:19.970 --> 00:03:21.790\nYou can really monitor a lot of stuff.\n\n85\n00:03:21.790 --> 00:03:24.500\nNow, when you wanna switch\nto detailed monitoring.\n\n86\n00:03:24.500 --> 00:03:26.300\nYou guys have probably noticed it before,\nright?\n\n87\n00:03:26.300 --> 00:03:28.920\nLet me show you here in my console.\n\n88\n00:03:28.920 --> 00:03:32.530\nIf I go into my EC2 console,\nand I spin up an instance.\n\n89\n00:03:32.530 --> 00:03:35.870\nWhen you spin up a new instance it\nactually asks you in the wizard.\n\n90\n00:03:35.870 --> 00:03:37.740\nAs you move through the wizard and\n\n91\n00:03:37.740 --> 00:03:40.750\nyou'll see all the different\noptions that we get and so on.\n\n92\n00:03:40.750 --> 00:03:44.350\nAnd then right here at the bottom\nof this page I've got Monitoring,\n\n93\n00:03:44.350 --> 00:03:46.650\nEnable CloudWatch detailed monitoring.\n\n94\n00:03:46.650 --> 00:03:47.990\nAdditional charges apply.\n\n95\n00:03:47.990 --> 00:03:52.150\nIf I leave that turned off, that doesn't\nmean that I don't have CloudWatch.\n\n96\n00:03:52.150 --> 00:03:56.360\nI do, it is gonna monitor\nthe server every five minutes.\n\n97\n00:03:56.360 --> 00:03:59.390\nBut if I check that,\nit's gonna monitor it every one minute.\n\n98\n00:03:59.390 --> 00:04:00.003\nAnd that's kind of nice.\n\n99\n00:04:00.003 --> 00:04:01.350\nSo you get it much more relevant.\n\n100\n00:04:01.350 --> 00:04:04.380\nBut you also get some more\ndetailed metrics out of it.\n\n101\n00:04:04.380 --> 00:04:07.170\nNow, if you do that,\nif you turn it on, that's great.\n\n102\n00:04:07.170 --> 00:04:08.860\nIf you didn't do it.\n\n103\n00:04:08.860 --> 00:04:11.420\nMaybe somebody else spun up\nthe instance and has not enabled,\n\n104\n00:04:11.420 --> 00:04:13.430\nyou can enable it after the fact.\n\n105\n00:04:13.430 --> 00:04:17.680\nAll you do is take an instance and\nwhen you go into the action menu up top,\n\n106\n00:04:17.680 --> 00:04:19.390\nit's right down here.\n\n107\n00:04:19.390 --> 00:04:23.420\nWe can go to the action menu,\ngo to CloudWatch monitoring.\n\n108\n00:04:23.420 --> 00:04:27.629\nAnd you can enable, or disable that\ndetailed monitoring whenever you choose.\n\n109\n00:04:27.629 --> 00:04:30.821\nOkay, be careful with that because\nwhat CloudWatch does on the back\n\n110\n00:04:30.821 --> 00:04:32.837\nend when you turn it on detail monitoring.\n\n111\n00:04:32.837 --> 00:04:36.629\nIt's gonna store your information for\ntwo weeks.\n\n112\n00:04:36.629 --> 00:04:38.707\nOkay, and\nthen after two weeks it ages that out and\n\n113\n00:04:38.707 --> 00:04:40.254\nreplaces it with the new data right?\n\n114\n00:04:40.254 --> 00:04:45.270\nSo data today is replacing your\ndata from 14 days ago, right?\n\n115\n00:04:45.270 --> 00:04:47.910\nWell if I turn on detail\nmonitoring right now.\n\n116\n00:04:47.910 --> 00:04:50.520\nI don't just magically have\n14 days worth of data there.\n\n117\n00:04:50.520 --> 00:04:52.140\nIt starts today.\n\n118\n00:04:52.140 --> 00:04:55.280\nSo if I'm having a performance\nissue on my server and I go and\n\n119\n00:04:55.280 --> 00:04:57.350\nturn on detail monitoring right now.\n\n120\n00:04:57.350 --> 00:04:58.440\nIt doesn't really help.\n\n121\n00:04:58.440 --> 00:05:00.890\nI mean unless I want to sit around for\na few days and collect some new data and\n\n122\n00:05:00.890 --> 00:05:02.060\nhave bad performance that whole time.\n\n123\n00:05:02.060 --> 00:05:04.880\nSo we want to make sure that\nwe turn on detailed monitoring\n\n124\n00:05:04.880 --> 00:05:06.490\nbefore we have an issue.\n\n125\n00:05:06.490 --> 00:05:08.610\nAnd that way when the issue starts\nwe can go in and we can look,\n\n126\n00:05:08.610 --> 00:05:10.940\nand we have relevant\ndata already there right?\n\n127\n00:05:10.940 --> 00:05:15.090\nSo better to have it and not need it,\nthen to need it and not have it.\n\n128\n00:05:15.090 --> 00:05:17.720\nIt's one of those kinda things,\nand it's not that expensive.\n\n129\n00:05:17.720 --> 00:05:21.070\nThey charge you based on how\nmany polls you do on the data.\n\n130\n00:05:21.070 --> 00:05:24.587\nSo if you have enough instances that\nare all running every single minute.\n\n131\n00:05:24.587 --> 00:05:26.211\nIt can start to add up a little bit.\n\n132\n00:05:26.211 --> 00:05:29.830\nBut it's worth it in the end, cuz you get\nsome really good monitoring in the system.\n\n133\n00:05:29.830 --> 00:05:31.697\nSo we can turn that on and\noff just whenever it's needed.\n\n134\n00:05:31.697 --> 00:05:34.962\n>> Now Don, it's excellent that they\nalready have this on by default.\n\n135\n00:05:34.962 --> 00:05:38.630\nSomething I can use and that makes me,\nI've got a server, right?\n\n136\n00:05:38.630 --> 00:05:41.130\nSay I've whipped up a server and\nI say you know what?\n\n137\n00:05:41.130 --> 00:05:44.070\nI want a monitor.\nWhat is the best way to actually see\n\n138\n00:05:44.070 --> 00:05:45.570\nsome of the health of that server.\n\n139\n00:05:45.570 --> 00:05:48.227\n>> Well you actually get the really high\nlevel checks right here on the console\n\n140\n00:05:48.227 --> 00:05:49.337\nthat I'm already at, right.\n\n141\n00:05:49.337 --> 00:05:53.080\nSo when you're in the EC2 dashboard and\nyou go under instances.\n\n142\n00:05:53.080 --> 00:05:56.292\nYou've got your instance panel here,\nand as you look at it you'll see\n\n143\n00:05:56.292 --> 00:05:59.680\nyou've got an instance state that\nsays whether it's up or down.\n\n144\n00:05:59.680 --> 00:06:01.570\nAnd then you got status checks.\n\n145\n00:06:01.570 --> 00:06:03.960\nSee I've got a terminated\ninstance here with no checks.\n\n146\n00:06:03.960 --> 00:06:08.310\nBut I've got a running instance, and it's\nsaying that i'm passing two of two checks.\n\n147\n00:06:08.310 --> 00:06:12.110\nThose two checks,\nthose are actually a part of CloudWatch.\n\n148\n00:06:12.110 --> 00:06:15.810\nThose are the basic CloudWatch services\nthat Amazon is using themselves\n\n149\n00:06:15.810 --> 00:06:18.870\nto determine whether or not they need\nto move your instance somewhere else.\n\n150\n00:06:18.870 --> 00:06:22.000\nIf the physical server you're on or\nthe rack that you're in.\n\n151\n00:06:22.000 --> 00:06:23.670\nIf it has some kind of failure.\n\n152\n00:06:23.670 --> 00:06:25.560\nThey'll move their\ninstance to another rack.\n\n153\n00:06:25.560 --> 00:06:29.910\nThey'll move your instance to another zone\nwithin the same region if they need to.\n\n154\n00:06:29.910 --> 00:06:31.550\nBut they need to know when to do that.\n\n155\n00:06:31.550 --> 00:06:33.150\nAnd that's what these\nchecks are all about.\n\n156\n00:06:33.150 --> 00:06:34.110\nIt's a really high level.\n\n157\n00:06:34.110 --> 00:06:34.850\nYou can just look at that.\n\n158\n00:06:34.850 --> 00:06:36.900\nAnd if you see a green\ncheckmark there you're okay.\n\n159\n00:06:36.900 --> 00:06:38.100\nAll right.\n\n160\n00:06:38.100 --> 00:06:40.210\nBut you even get some other\ndetailed information.\n\n161\n00:06:40.210 --> 00:06:42.020\nLike down here on the bottom.\n\n162\n00:06:42.020 --> 00:06:43.330\nIf you choose an instance,\n\n163\n00:06:43.330 --> 00:06:46.280\nyou'll see the little tab at\nthe bottom that says status checks.\n\n164\n00:06:46.280 --> 00:06:49.350\nAnd it's telling me here there's\ntwo of two status checks.\n\n165\n00:06:49.350 --> 00:06:51.540\nRight here I can see what\nthose two checks are.\n\n166\n00:06:51.540 --> 00:06:55.620\nI've got a systems status check,\nand an instance status check.\n\n167\n00:06:55.620 --> 00:06:59.220\nAnd those are giving me basically\ndetails about this instance and\n\n168\n00:06:59.220 --> 00:07:00.280\nkind of what they got.\n\n169\n00:07:00.280 --> 00:07:02.700\nAnd I expect to see\ncertain colors in there.\n\n170\n00:07:02.700 --> 00:07:04.940\nLike green means it's good.\n\n171\n00:07:04.940 --> 00:07:09.110\nAmber or red means it's got a problem,\nand I need to do something about it.\n\n172\n00:07:09.110 --> 00:07:10.950\nSo I can see right now\nboth of mine are healthy.\n\n173\n00:07:10.950 --> 00:07:14.230\nAnd that's what you're gonna see most\nof the time because Amazon's working\n\n174\n00:07:14.230 --> 00:07:15.840\nto resolve these issues, too.\n\n175\n00:07:15.840 --> 00:07:19.450\nSo if there was an actual system status\ncheck, Amazon's normally on top of it and\n\n176\n00:07:19.450 --> 00:07:20.670\nworking to resolve it.\n\n177\n00:07:20.670 --> 00:07:24.590\nIf not, then you may actually see\nthat amber or red warning here.\n\n178\n00:07:25.920 --> 00:07:29.020\nNow, these are a couple of\nthe status checks that we've got.\n\n179\n00:07:29.020 --> 00:07:31.550\nThe way these work, let me tell\nyou about each one a little bit.\n\n180\n00:07:32.590 --> 00:07:34.670\nThe system status check for example.\n\n181\n00:07:34.670 --> 00:07:38.940\nThis one is reporting really on\nthe managed services that Amazon provides.\n\n182\n00:07:38.940 --> 00:07:41.010\nSo we're talking about hardware, right?\n\n183\n00:07:41.010 --> 00:07:44.870\nIs the physical server your\ninstance is on, is it healthy?\n\n184\n00:07:44.870 --> 00:07:45.900\nDoes it have power?\n\n185\n00:07:45.900 --> 00:07:47.360\nDoes it have network?\n\n186\n00:07:47.360 --> 00:07:49.070\nIs it, you know, up and running?\n\n187\n00:07:49.070 --> 00:07:50.571\nIs the operating system working properly?\n\n188\n00:07:50.571 --> 00:07:54.735\nBecause under the hood, Amazon is\nrunning the Zen Virtualization platform,\n\n189\n00:07:54.735 --> 00:07:56.194\nwhich runs on top of Linux.\n\n190\n00:07:56.194 --> 00:08:00.124\nAnd so, is the underlying Linux\noperating system okay and healthy?\n\n191\n00:08:00.124 --> 00:08:02.953\nIf they are, great,\nyou get a green check mark or\n\n192\n00:08:02.953 --> 00:08:05.380\na green system reach ability check pass.\n\n193\n00:08:05.380 --> 00:08:07.900\nBut if they aren't,\nthen you'll get an amber or\n\n194\n00:08:07.900 --> 00:08:09.590\na red letting you know\nthat there's a problem.\n\n195\n00:08:09.590 --> 00:08:11.830\nSo that's what that one is monitoring.\n\n196\n00:08:11.830 --> 00:08:13.520\nAnd then under Instance Checks,\n\n197\n00:08:13.520 --> 00:08:17.270\nthis is where it's monitoring\nyour instance itself, right?\n\n198\n00:08:17.270 --> 00:08:19.690\nIs your virtual machine doing okay?\n\n199\n00:08:19.690 --> 00:08:20.880\nIs it out of RAM?\n\n200\n00:08:20.880 --> 00:08:22.030\nHas it locked up?\n\n201\n00:08:22.030 --> 00:08:23.350\nRight?\nWhat kinda problem's there?\n\n202\n00:08:23.350 --> 00:08:26.000\nAnd if it's got a problem,\nyou'll get amber or\n\n203\n00:08:26.000 --> 00:08:28.920\nred on that one, but otherwise it'll\nstay green just like we're seeing.\n\n204\n00:08:28.920 --> 00:08:31.220\nSo that's kinda what these two checks are.\n\n205\n00:08:31.220 --> 00:08:34.595\nRemember that system status checks, that's\nthe physical platform that Amazon deals\n\n206\n00:08:34.595 --> 00:08:38.605\nwith, and in Instance Status Checks that's\nyour virtual machine that it's monitoring.\n\n207\n00:08:38.605 --> 00:08:41.175\n>> So Don, what do I do,\nsay I'm monitoring my servers,\n\n208\n00:08:41.175 --> 00:08:45.165\nI come into work one day, I sit down,\nI come in here and I take a look and I see\n\n209\n00:08:45.165 --> 00:08:49.875\nsome of those horrible red little status\nchecks or maybe an amber or something.\n\n210\n00:08:49.875 --> 00:08:52.385\nSo let's say I'm doing\na System Status Check.\n\n211\n00:08:52.385 --> 00:08:54.870\nWhat do I do at that point?\n\n212\n00:08:54.870 --> 00:08:56.360\nMost of the time you're\nnot gonna see this,\n\n213\n00:08:56.360 --> 00:08:57.730\ncuz Amazon's gonna resolve them for you.\n\n214\n00:08:57.730 --> 00:09:01.310\nBut if you do see one, you can open\nup a ticket with Amazon, right,\n\n215\n00:09:01.310 --> 00:09:02.920\nthat's probably the best thing.\n\n216\n00:09:02.920 --> 00:09:04.580\nThey probably are already\naware of it though, so\n\n217\n00:09:04.580 --> 00:09:05.650\nyou probably don't even have to do that.\n\n218\n00:09:05.650 --> 00:09:09.370\nBut if you're in a super hurry when\nyou have a system status check\n\n219\n00:09:09.370 --> 00:09:11.400\nthat means the underlying\nhardware has failed.\n\n220\n00:09:11.400 --> 00:09:13.790\nAnd you can't fix the underlying hardware,\ncan you?\n\n221\n00:09:13.790 --> 00:09:17.760\nSo if you still have access to the machine\none of the best tactics you can do\n\n222\n00:09:17.760 --> 00:09:19.710\nis shut the instance down.\n\n223\n00:09:19.710 --> 00:09:22.220\nIf you shut the instance\ndown it's gonna stop and\n\n224\n00:09:22.220 --> 00:09:24.930\nthen when it stops you can start it again,\nand\n\n225\n00:09:24.930 --> 00:09:30.140\nwhenever you start an instance it will\nnot start an instance on bad hardware.\n\n226\n00:09:30.140 --> 00:09:31.820\nIt'll move you to another rack.\n\n227\n00:09:31.820 --> 00:09:34.650\nAnd so you can stop this instance to start\nit again, and usually that'll jump you\n\n228\n00:09:34.650 --> 00:09:37.360\nover to a new rack with this healthy,\nyou'll come up, and now you're back in\n\n229\n00:09:37.360 --> 00:09:40.670\nbusiness and you didn't even have to\nreach out to Amazon to do it, right.\n\n230\n00:09:40.670 --> 00:09:42.620\nThat's probably what they're\ndoing on the back end,\n\n231\n00:09:42.620 --> 00:09:45.210\nthough, so it's probably\nresolved before you get to it.\n\n232\n00:09:45.210 --> 00:09:46.710\nSo that one's easy.\n\n233\n00:09:46.710 --> 00:09:48.450\nThe one that's a little\nharder is this guy over here,\n\n234\n00:09:48.450 --> 00:09:50.440\nthe Instance Status Checks all right.\n\n235\n00:09:50.440 --> 00:09:54.923\nBecause it could be that your guest\noperating system is locked up.\n\n236\n00:09:54.923 --> 00:09:56.320\nWhat could cause that?\n\n237\n00:09:56.320 --> 00:10:01.200\nWell, maybe you spun up a CentOS Linux\ndistro and you've done some updates.\n\n238\n00:10:01.200 --> 00:10:02.130\nYou updated the kernel.\n\n239\n00:10:02.130 --> 00:10:05.280\nAnd the kernel's not compatible with\nthe underlying virtualization platform.\n\n240\n00:10:05.280 --> 00:10:06.890\nAnd so it locks up and now it won't boot.\n\n241\n00:10:06.890 --> 00:10:07.650\nOkay?\n\n242\n00:10:07.650 --> 00:10:10.220\nWell, what's Amazon gonna say to that?\n\n243\n00:10:10.220 --> 00:10:11.460\nWell it's your virtual machine.\n\n244\n00:10:11.460 --> 00:10:13.940\nYou upgraded it, you did this,\nyou need to fix the kernel.\n\n245\n00:10:13.940 --> 00:10:14.830\nGood luck.\n\n246\n00:10:14.830 --> 00:10:16.900\nSo if it's up to you, what do you do.\n\n247\n00:10:16.900 --> 00:10:19.690\nWell, hopefully you've got a snapshot\nthat you can restore to or\n\n248\n00:10:19.690 --> 00:10:21.360\na backup that you can restore to,\nthat'll work.\n\n249\n00:10:21.360 --> 00:10:24.880\nIf you can still get into the instance\nmaybe you can downgrade that kernel or\n\n250\n00:10:24.880 --> 00:10:26.900\nput it back or\nwhatever it was you had before.\n\n251\n00:10:26.900 --> 00:10:31.780\nSo you can try and fix it, but\nIt could be as simple as just rebooting.\n\n252\n00:10:31.780 --> 00:10:34.010\nIn the Windows world,\njust reboot maybe that will fix it.\n\n253\n00:10:34.010 --> 00:10:35.407\nOftentimes it will, so that it ends up.\n\n254\n00:10:35.407 --> 00:10:36.162\n>> Typical IT answer, right.\n\n255\n00:10:36.162 --> 00:10:38.043\n>> [LAUGH]\n>> Just start it over, did we start that.\n\n256\n00:10:38.043 --> 00:10:40.260\n>> It's sad, I hate to say it but\nit just works so often.\n\n257\n00:10:40.260 --> 00:10:44.560\n>> [LAUGH]\n>> So always an option there.\n\n258\n00:10:44.560 --> 00:10:47.344\nThis one is a little bit\nmore our problem though and\n\n259\n00:10:47.344 --> 00:10:50.870\nit could be potentially it could\nbe something on Amazon sites.\n\n260\n00:10:50.870 --> 00:10:53.270\nDon't hesitate to open a ticket with them.\n\n261\n00:10:53.270 --> 00:10:55.520\nBut don't be surprised when\nthey come back and say,\n\n262\n00:10:55.520 --> 00:10:58.380\nyou need to restore this\ninstance from a backup.\n\n263\n00:10:58.380 --> 00:11:01.290\nAnd for people who are new\nto cloud virtualization,\n\n264\n00:11:01.290 --> 00:11:03.130\nthey get really mad about that.\n\n265\n00:11:03.130 --> 00:11:07.090\nBut the reality is, it's so fast and easy\nto restore from cloud backup that it's not\n\n266\n00:11:07.090 --> 00:11:08.290\na big deal when they tell you to do that.\n\n267\n00:11:08.290 --> 00:11:12.430\nSo you should have taken the time\nahead of time to set up a backup and\n\n268\n00:11:12.430 --> 00:11:13.640\nrestore infrastructure.\n\n269\n00:11:13.640 --> 00:11:16.350\nIt's super easy to do,\nwe'll see in the backup episodes.\n\n270\n00:11:16.350 --> 00:11:18.690\n>> So Don, I guess that brings us to,\n\n271\n00:11:18.690 --> 00:11:22.350\nobviously when we're looking at it\nfrom this high little view, it's nice.\n\n272\n00:11:22.350 --> 00:11:24.210\nWe can kinda see if things are working or\nnot.\n\n273\n00:11:24.210 --> 00:11:26.220\nWhat if I need that more\ndetailed information?\n\n274\n00:11:26.220 --> 00:11:28.130\nI'm looking for specifics here.\n\n275\n00:11:28.130 --> 00:11:29.500\nWhere do I go, what do I do?\n\n276\n00:11:29.500 --> 00:11:32.530\n>> All right, so you're not gonna\nget detailed information from this\n\n277\n00:11:32.530 --> 00:11:33.750\nscreen, right?\n\n278\n00:11:33.750 --> 00:11:36.120\nThis is running cloud\nwatch on the back end.\n\n279\n00:11:36.120 --> 00:11:40.050\nAnd so we want the detailed data, we need\nto jump over a cloud watch to see it.\n\n280\n00:11:40.050 --> 00:11:45.660\nSo if I go back to my main dashboard here,\nright back to the AWS console.\n\n281\n00:11:45.660 --> 00:11:48.290\nIn here I can jump into cloud watch.\n\n282\n00:11:48.290 --> 00:11:50.030\nAnd when I go into cloud watch,\n\n283\n00:11:50.030 --> 00:11:53.010\nthis is where I'll be able\nto see my detailed metrics.\n\n284\n00:11:53.010 --> 00:11:55.970\nAnd along the left side here,\nI'm gonna see metrics.\n\n285\n00:11:55.970 --> 00:11:57.137\nAnd under metrics, I'll see EC2.\n\n286\n00:11:57.137 --> 00:11:59.740\nAnd when I click on that,\nI'm gonna see metrics.\n\n287\n00:11:59.740 --> 00:12:02.610\nAnd this screen is not\nnecessarily intuitive.\n\n288\n00:12:02.610 --> 00:12:05.840\nWhat it's doing is it's laying out\nall the metrics that are stored and\n\n289\n00:12:05.840 --> 00:12:08.090\nI can see each of my instances,right?\n\n290\n00:12:08.090 --> 00:12:14.161\nAnd notice that I've got like\nITProTV Web 01, I've got itprotv-db01.\n\n291\n00:12:14.161 --> 00:12:16.065\nNow for\nthose of you that were sharp item watch.\n\n292\n00:12:16.065 --> 00:12:17.702\nYou might have noticed\nthat one was terminated.\n\n293\n00:12:17.702 --> 00:12:19.501\nI've terminated itprotv-db01.\n\n294\n00:12:19.501 --> 00:12:21.020\nI don't have that instance.\n\n295\n00:12:21.020 --> 00:12:25.000\nAnd actually I've got a couple unnamed\ninstances that I don't have anymore.\n\n296\n00:12:25.000 --> 00:12:26.300\nWhat's all that about?\n\n297\n00:12:26.300 --> 00:12:29.950\nWell remember how I said that Cloud Watch\nwas gonna save our data for two weeks.\n\n298\n00:12:29.950 --> 00:12:33.440\nIt's gonna save your data for two weeks,\neven if you terminate the instance.\n\n299\n00:12:33.440 --> 00:12:36.730\nSo you could have an instance that's\ncompletely gone, not even in your panel\n\n300\n00:12:36.730 --> 00:12:39.930\nanymore and you'll still see it in here so\nyou can look at the metrics, all right?\n\n301\n00:12:39.930 --> 00:12:41.070\nThey save it for two weeks.\n\n302\n00:12:41.070 --> 00:12:45.390\nIf I were to film this episode two weeks\nfrom now, these guys would be gone and\n\n303\n00:12:45.390 --> 00:12:48.782\nI would just have new instances\nthat would show up in there.\n\n304\n00:12:48.782 --> 00:12:52.787\nIf you come up here into your little\nsearch box, you can search a metric and\n\n305\n00:12:52.787 --> 00:12:55.940\nfilter that out so\nthat you only see one instance.\n\n306\n00:12:55.940 --> 00:12:58.650\nBut otherwise you can just browse down and\nfind the instance.\n\n307\n00:12:58.650 --> 00:12:59.840\nAnd so here's mine.\n\n308\n00:12:59.840 --> 00:13:02.450\nThe Itprotv-web01, right?\n\n309\n00:13:02.450 --> 00:13:04.460\nAnd I see the metrics\nthat it's monitoring.\n\n310\n00:13:04.460 --> 00:13:06.190\nMy CPU credit balance.\n\n311\n00:13:06.190 --> 00:13:08.250\nMy disk read bytes.\n\n312\n00:13:08.250 --> 00:13:09.670\nDisk read operations.\n\n313\n00:13:09.670 --> 00:13:12.867\nDisk write bytes.\n\n314\n00:13:12.867 --> 00:13:14.400\nIt's really hard to say.\n\n315\n00:13:14.400 --> 00:13:15.280\nNetwork in.\n\n316\n00:13:15.280 --> 00:13:16.310\nNetwork out.\n\n317\n00:13:16.310 --> 00:13:18.370\nSystem status check failed.\n\n318\n00:13:18.370 --> 00:13:20.510\nSo you know it's gonna keep track of that.\n\n319\n00:13:20.510 --> 00:13:23.860\nStatus check failed for\ninstance status failed for the system.\n\n320\n00:13:23.860 --> 00:13:27.260\nThat's the two different status\nchecks that we saw a moment ago.\n\n321\n00:13:27.260 --> 00:13:30.250\nAnd so I can come in here and\nI can see this historically.\n\n322\n00:13:30.250 --> 00:13:33.410\nLike, I mentioned how Amazon can\nsolve these things really fast.\n\n323\n00:13:33.410 --> 00:13:35.340\nSometimes before we even see them.\n\n324\n00:13:35.340 --> 00:13:37.880\nSo what if I had a system failure.\n\n325\n00:13:37.880 --> 00:13:38.920\nI never saw it.\n\n326\n00:13:38.920 --> 00:13:43.120\nWell, I could come in here and I can\nclick on this system status check failed\n\n327\n00:13:43.120 --> 00:13:48.690\ninstance and the instance once that's\nthe one that's kinda our problem.\n\n328\n00:13:48.690 --> 00:13:50.820\nThe system one,\nthat's the one that's Amazon's problem.\n\n329\n00:13:50.820 --> 00:13:51.830\nLet me switch to system.\n\n330\n00:13:51.830 --> 00:13:55.480\nSo if I go to system,\nwhen I click on that down at the bottom.\n\n331\n00:13:55.480 --> 00:13:58.800\nI start to get the more\ndetailed information, and\n\n332\n00:13:58.800 --> 00:14:01.810\nlet me just kinda re size this window so\nI can see it.\n\n333\n00:14:01.810 --> 00:14:05.590\nSo right down here,\nI'm seeing I have zero system failures.\n\n334\n00:14:05.590 --> 00:14:08.350\nAnd so maybe a failure happened\nat 1:00 AM last night.\n\n335\n00:14:08.350 --> 00:14:10.020\nAnd so this jumps up to one.\n\n336\n00:14:10.020 --> 00:14:12.190\nAnd then Amazon resolved it,\nand it goes back to zero.\n\n337\n00:14:12.190 --> 00:14:13.700\nAnd so now we're back and healthy.\n\n338\n00:14:13.700 --> 00:14:16.280\nWe may never have even\nknown that happened, but\n\n339\n00:14:16.280 --> 00:14:19.180\nI'll be able to see it right here and\nknow that it happened, right?\n\n340\n00:14:19.180 --> 00:14:23.834\nThere's a historical data and\nsome of these other ones like\n\n341\n00:14:23.834 --> 00:14:29.230\nCPU utilization there.\n\n342\n00:14:29.230 --> 00:14:31.830\nI can look at my CPU and\nsee how busy it is.\n\n343\n00:14:31.830 --> 00:14:34.650\nNow when I look at this graph,\nthis looks kinda bad, right?\n\n344\n00:14:34.650 --> 00:14:39.330\nBut if you look at the scaling over here,\nthis is actually scaled pretty low.\n\n345\n00:14:39.330 --> 00:14:44.600\nSo when I come across here,\nsee how I'm using less than 1% of my CPU.\n\n346\n00:14:44.600 --> 00:14:47.822\nI'm using 0.798% of my CPU.\n\n347\n00:14:47.822 --> 00:14:49.816\nSo while it looks bad,\nit's been scaled, and\n\n348\n00:14:49.816 --> 00:14:52.770\nI'm actually using less than\n1% over this period of time.\n\n349\n00:14:52.770 --> 00:14:55.520\nSo you can break that down and\nyou can adjust your time intervals.\n\n350\n00:14:55.520 --> 00:14:58.760\nSo maybe I wanna see it for\nthe whole day or for the last six hours.\n\n351\n00:14:58.760 --> 00:15:01.130\nAnd so\nover the last six hours use my trend.\n\n352\n00:15:01.130 --> 00:15:02.470\nWhere I guess I was a little bit busy.\n\n353\n00:15:02.470 --> 00:15:05.956\nI was at almost 1.5% CPU earlier.\n\n354\n00:15:05.956 --> 00:15:07.686\nIt's probably when I spun up\nthe instance or something.\n\n355\n00:15:07.686 --> 00:15:10.330\n[LAUGH] So then it's just kinda sat alone.\n\n356\n00:15:10.330 --> 00:15:13.920\nSo we can track all this and see it and\nyou can get the detailed information and\n\n357\n00:15:13.920 --> 00:15:16.680\nAmazon collects this for billing,\nso you might as well use it.\n\n358\n00:15:16.680 --> 00:15:21.930\nNow, if you have regular old cloud watch,\nthis is on a five minute interval.\n\n359\n00:15:21.930 --> 00:15:26.690\nBut if you have detailed turn on,\nthen it's at one minute intervals.\n\n360\n00:15:26.690 --> 00:15:30.030\nAnd you'll be able to see much\nmore detailed data in here,\n\n361\n00:15:30.030 --> 00:15:33.928\nbroken down that way, depending on what\nlevel of cloud watch you have turned on.\n\n362\n00:15:33.928 --> 00:15:35.958\nAll right,\n\n363\n00:15:35.958 --> 00:15:39.210\nso as far as being able to monitor\nthe detailed information it's here.\n\n364\n00:15:39.210 --> 00:15:41.660\nThese are metrics are ones\nthat Amazon has predetermine.\n\n365\n00:15:41.660 --> 00:15:46.230\nWe actually have custom metrics that\nwe can use also, and you can monitor\n\n366\n00:15:46.230 --> 00:15:50.226\nwhatever the heck you want, and that's\nwhere, like you mentioned solar winds.\n\n367\n00:15:50.226 --> 00:15:52.953\n>> Right?\nIf you have Zabbix, Zena, MRTG,\n\n368\n00:15:52.953 --> 00:15:59.204\nany of the various platforms that are out\nthere that you can use to monitor systems.\n\n369\n00:15:59.204 --> 00:16:01.911\nThey have tons of metrics in\nthere that you can monitor.\n\n370\n00:16:01.911 --> 00:16:06.303\nThings that don't even show up here,\nlike I've got my DiskReadBytes,\n\n371\n00:16:06.303 --> 00:16:10.190\nDiskReadOps, DiskWriteBytes,\nDiskWriteOps, right?\n\n372\n00:16:10.190 --> 00:16:13.090\nBut I don't have disk utilization.\n\n373\n00:16:13.090 --> 00:16:15.090\nHow do I know if my\ndisk's about to be full?\n\n374\n00:16:15.090 --> 00:16:16.570\nIt doesn't monitor it, okay?\n\n375\n00:16:16.570 --> 00:16:19.440\nAnd the reason it doesn't is\nAmazon basically said, look.\n\n376\n00:16:19.440 --> 00:16:21.820\nWe don't bill you based on how\nmuch disk you actually use.\n\n377\n00:16:21.820 --> 00:16:24.830\nWe bill you based on the disks\nthat you provisioned.\n\n378\n00:16:24.830 --> 00:16:27.700\nSo, they don't need the information,\nbut we might.\n\n379\n00:16:28.810 --> 00:16:33.190\nSo they say, well you can use\na third party software to do it.\n\n380\n00:16:33.190 --> 00:16:37.550\nWell, you can create a Custom Metric\nthat is something like this utilization.\n\n381\n00:16:37.550 --> 00:16:41.050\nAnd you can pop that data into here, so\nall of your metrics are in one place,\n\n382\n00:16:41.050 --> 00:16:44.720\nthat's kind of a nice feature to have,\nand if you do that, well,\n\n383\n00:16:44.720 --> 00:16:47.610\nyou have to create a custom metric, and\nit's a little bit of an involved process,\n\n384\n00:16:47.610 --> 00:16:49.250\nso I'm gonna push that\noff to a separate show.\n\n385\n00:16:49.250 --> 00:16:52.650\nWe'll give you the chance to see Custom\nMetrics in the next episode, but just know\n\n386\n00:16:52.650 --> 00:16:57.530\nthat this can be extended, and you can\nmonitor darn near anything in here.\n\n387\n00:16:57.530 --> 00:17:00.720\nAs long as you take the time\nto use the Amazon scripts and\n\n388\n00:17:00.720 --> 00:17:04.270\npush the data into CloudWatch, it'll take\nit and then you can feed it in there.\n\n389\n00:17:04.270 --> 00:17:06.440\nThat does not work in\nthe free usage tier though.\n\n390\n00:17:06.440 --> 00:17:08.530\nYou have to go to the paid CloudWatch for\nthat.\n\n391\n00:17:08.530 --> 00:17:09.130\n>> Gotcha.\n\n392\n00:17:09.130 --> 00:17:12.760\nWell Don, what if I want to\nmonitor my disk performance.\n\n393\n00:17:12.760 --> 00:17:14.220\nThis is probably one of the big ones,\n\n394\n00:17:14.220 --> 00:17:16.130\nespecially if you're running\nsomething like a database.\n\n395\n00:17:16.130 --> 00:17:17.360\nYou need to check those guys and\n\n396\n00:17:17.360 --> 00:17:20.600\nmake sure that you're not being\nthrottled down or anything like that.\n\n397\n00:17:20.600 --> 00:17:23.960\nYou've actually even mentioned this\nquote a bit in previous shows.\n\n398\n00:17:23.960 --> 00:17:25.870\nShow me the money, show me how to do this.\n\n399\n00:17:25.870 --> 00:17:29.170\n>> All right, I've mentioned this\nseveral times in the storage episode,\n\n400\n00:17:29.170 --> 00:17:30.620\ncompletely forgot about it.\n\n401\n00:17:30.620 --> 00:17:32.900\nI've kind of been focusing\non ECT2 instances.\n\n402\n00:17:32.900 --> 00:17:34.640\nRight?\nMy virtual machines.\n\n403\n00:17:34.640 --> 00:17:38.430\nBut disk IO is really important it's\nusually our biggest bottleneck.\n\n404\n00:17:38.430 --> 00:17:40.710\nAnd if you're dealing with\nthings like Provisioned IO or\n\n405\n00:17:40.710 --> 00:17:43.240\nmaybe you just have general purpose SSD\nand you're trying to figure out if it's\n\n406\n00:17:43.240 --> 00:17:46.270\ntime to go Provisioned IO,\nyou need to see your disk performance.\n\n407\n00:17:46.270 --> 00:17:48.140\nAnd there's a few\ndifferent places to see it.\n\n408\n00:17:48.140 --> 00:17:51.550\nLet me go back to my ECT2 dashboard.\n\n409\n00:17:51.550 --> 00:17:54.510\nWhen we started this,\nI went to my EC2 dashboard and\n\n410\n00:17:54.510 --> 00:17:58.030\nI showed you guys the system\nchecks tied to an instance, right.\n\n411\n00:17:58.030 --> 00:18:01.520\nSo, I went into an instance\nlike itprotv-web01 here, and\n\n412\n00:18:01.520 --> 00:18:05.030\nI saw the 2 of 2 system\nchecks that were healthy.\n\n413\n00:18:05.030 --> 00:18:06.350\nAnd then, I saw those down here.\n\n414\n00:18:06.350 --> 00:18:09.515\nThe system status checks and\nthe instance status checks.\n\n415\n00:18:09.515 --> 00:18:11.870\nWel, your EBS volumes have that too.\n\n416\n00:18:11.870 --> 00:18:13.920\nYour elastic block storage.\n\n417\n00:18:13.920 --> 00:18:17.230\nThey've got status checks also.\n\n418\n00:18:17.230 --> 00:18:18.390\nSo, if I go on the left side here and\n\n419\n00:18:18.390 --> 00:18:22.220\nI go down to volumes under elastic\nblock store, and I find a volume.\n\n420\n00:18:22.220 --> 00:18:26.010\nLike I'm gonna find,\nwhich one's my operating system disk?\n\n421\n00:18:26.010 --> 00:18:27.930\nI guess I'll take this one.\n\n422\n00:18:27.930 --> 00:18:30.700\nIf you take one of these for\nlike and AVM or\n\n423\n00:18:30.700 --> 00:18:34.010\na data disk it doesn't matter you've\ngot status checks down at the bottom.\n\n424\n00:18:34.010 --> 00:18:36.660\nAnd if you choose status checks\n\n425\n00:18:36.660 --> 00:18:40.220\nit doesn't break it up into\nthe system versus instance.\n\n426\n00:18:40.220 --> 00:18:41.840\nBecause this is really all system.\n\n427\n00:18:41.840 --> 00:18:44.160\nThis is all stuff that Amazon manages.\n\n428\n00:18:44.160 --> 00:18:48.770\nAmazon completely masks the infrastructure\nof storage behind the scene.\n\n429\n00:18:48.770 --> 00:18:50.080\nSo.\n\n430\n00:18:50.080 --> 00:18:52.670\nUnlike the other ones where\nmaybe I need to stop the VM and\n\n431\n00:18:52.670 --> 00:18:55.450\nstart it again to cause it to\nmove to another hardware set.\n\n432\n00:18:55.450 --> 00:18:58.530\nOr, I need to reboot the VM to try and\nget it to unlock.\n\n433\n00:18:58.530 --> 00:19:00.180\nOn storage, you don't have any of that, so\n\n434\n00:19:00.180 --> 00:19:03.800\nyou really just get one check, and\nit'll usually say volume status, okay.\n\n435\n00:19:03.800 --> 00:19:05.150\nAll right?\n\n436\n00:19:05.150 --> 00:19:09.600\nBut there are a few other status' that you\nmight see there and this is important for\n\n437\n00:19:09.600 --> 00:19:12.490\nthe exam because it can turn up,\nand we don't look at this a lot.\n\n438\n00:19:12.490 --> 00:19:15.210\nNotice how it's not like green,\nor red, or whatever,\n\n439\n00:19:15.210 --> 00:19:17.190\nwe don't have color codes for storage.\n\n440\n00:19:17.190 --> 00:19:19.650\nInstead you just have\nvarious status messages.\n\n441\n00:19:19.650 --> 00:19:25.050\nAnd the ones that are really important,\nthere are few different ones, but if\n\n442\n00:19:25.050 --> 00:19:29.970\nyou see one that says impaired, impaired\nis really bad, okay, it doesn't sound so\n\n443\n00:19:29.970 --> 00:19:32.610\nbad, you're like, impaired, okay,\nwell it has a little bit of a problem?\n\n444\n00:19:32.610 --> 00:19:33.990\nNo, impaired is really bad.\n\n445\n00:19:33.990 --> 00:19:39.370\nSo, when you see a status of impaired that\nmeans that your performance is degraded or\n\n446\n00:19:39.370 --> 00:19:42.570\ncompletely unavailable, and\nso, if it says impaired,\n\n447\n00:19:42.570 --> 00:19:45.000\nthat drive might not\nbe functioning at all.\n\n448\n00:19:45.000 --> 00:19:49.880\nIt's just completely dead and unavailable,\nand your only action at that point is just\n\n449\n00:19:49.880 --> 00:19:52.120\nto open up a ticket with Amazon and\nsay, what the heck, guys?\n\n450\n00:19:52.120 --> 00:19:56.000\nAnd usually, it means that\na storage array has died at Amazon.\n\n451\n00:19:56.000 --> 00:19:57.990\nAnd they need to move your storage off.\n\n452\n00:19:57.990 --> 00:20:01.990\nWell, they do local replication and\nother things to make sure that data is\n\n453\n00:20:01.990 --> 00:20:03.820\nprotected, so\nthey can bring you up pretty quickly.\n\n454\n00:20:03.820 --> 00:20:06.930\nAnd so, it's normally just dealt with and\nyou don't have to worry about it.\n\n455\n00:20:06.930 --> 00:20:09.810\nBut if you ever see that impaired status,\nthat is a big problem.\n\n456\n00:20:09.810 --> 00:20:11.430\nSo, impaired is really bad.\n\n457\n00:20:11.430 --> 00:20:14.770\nYou definitely don't wanna see that one.\n\n458\n00:20:14.770 --> 00:20:17.330\nWe got a couple of other statuses\nthat might turn up in there, so\n\n459\n00:20:17.330 --> 00:20:22.380\nmostly this is gonna be monitoring things\nlike the performance on the system.\n\n460\n00:20:22.380 --> 00:20:23.920\nWhether it's functioning correctly.\n\n461\n00:20:23.920 --> 00:20:25.880\nWhen you get that kind of\nhigh level view there?\n\n462\n00:20:25.880 --> 00:20:29.430\nIf you want the detailed view\nwe can jump up to CloudWatch, so\n\n463\n00:20:29.430 --> 00:20:30.990\nI'm gonna go back to my CloudWatch panel.\n\n464\n00:20:32.170 --> 00:20:35.580\nAnd in CloudWatch,\nI was looking at the EC2 metrics.\n\n465\n00:20:35.580 --> 00:20:37.980\nBut notice right above it\nthere's the EBS metrics.\n\n466\n00:20:37.980 --> 00:20:42.400\nAnd so, I can go right into EBS and\nnow, I can start to monitor by volume.\n\n467\n00:20:42.400 --> 00:20:45.170\nAnd so, I'll see each of my\nlittle disc volumes in here, and\n\n468\n00:20:45.170 --> 00:20:46.510\nI can choose one of them to monitor.\n\n469\n00:20:46.510 --> 00:20:50.920\nAnd when you look at what you can monitor,\nyou've got VolumeConsumedReadWriteOps,\n\n470\n00:20:50.920 --> 00:20:53.790\nVolumeIdleTime, VolumeQueueLength,\nand so on.\n\n471\n00:20:53.790 --> 00:20:55.490\nThere's a lot of stuff in here.\n\n472\n00:20:55.490 --> 00:20:57.710\nLet me tell you the important ones\nyou need to remember for the exam.\n\n473\n00:20:58.730 --> 00:21:01.990\nYou've got the ReadOps and WriteOps.\n\n474\n00:21:01.990 --> 00:21:04.200\nThose are what count toward your IOPS,\nright?\n\n475\n00:21:04.200 --> 00:21:06.800\nSo, IOPS are input and\noutput or reads and writes.\n\n476\n00:21:06.800 --> 00:21:09.900\nAnd so, you can track the amount\nof operations you're using and\n\n477\n00:21:09.900 --> 00:21:11.990\nsee how close you're getting to that.\n\n478\n00:21:11.990 --> 00:21:16.410\nAnd you've got this\nVolumeConsumedReadWriteOps.\n\n479\n00:21:16.410 --> 00:21:18.690\nThat one's kind of special, all right.\n\n480\n00:21:18.690 --> 00:21:20.550\nVolumeReadOps and VolumeWriteOps.\n\n481\n00:21:20.550 --> 00:21:21.930\nThat works on pretty much any volume so\n\n482\n00:21:21.930 --> 00:21:24.180\nyou can see how many IOPS\nyou're generating, right.\n\n483\n00:21:24.180 --> 00:21:26.300\nYou add those two together,\nyou've got your total IOPS.\n\n484\n00:21:26.300 --> 00:21:27.920\nBut VolumeConsumedReadWriteOps,\n\n485\n00:21:27.920 --> 00:21:31.830\nthat only applies to volumes\nthat are provisioned io.\n\n486\n00:21:31.830 --> 00:21:34.750\nSo, if you're provisioned IO and\nyou've provisioned it with 3,000 IOPS this\n\n487\n00:21:34.750 --> 00:21:38.360\nis gonna show how much you've\nconsumed of your total.\n\n488\n00:21:38.360 --> 00:21:42.400\nWell, on a general purpose SSD\nyou don't have a total, right?\n\n489\n00:21:42.400 --> 00:21:44.290\nYou've got this base line,\nbut you've got burst, and so,\n\n490\n00:21:44.290 --> 00:21:45.280\nthere's nothing for them to work off of.\n\n491\n00:21:45.280 --> 00:21:47.040\nAnd that's why that counter\ndoesn't work with them but\n\n492\n00:21:47.040 --> 00:21:48.040\nit does work for provisioned IO.\n\n493\n00:21:49.470 --> 00:21:52.440\nBut this is the one I normally\npay attention to right here,\n\n494\n00:21:52.440 --> 00:21:54.250\nVolume Queue Length, all right?\n\n495\n00:21:54.250 --> 00:21:59.040\nVolume Queue Length is how\nmany rewrite operations or\n\n496\n00:21:59.040 --> 00:22:02.820\nhow many IOs are waiting for\naccess to the disk.\n\n497\n00:22:02.820 --> 00:22:04.610\nIn other words, who is being slowed down?\n\n498\n00:22:04.610 --> 00:22:09.080\nWe want to access the disk, but\nthere's no available IOPS right now.\n\n499\n00:22:09.080 --> 00:22:11.620\nThat should always be zero.\n\n500\n00:22:11.620 --> 00:22:16.230\nIf it's ever above zero that means people\nare having to wait for access to the disk.\n\n501\n00:22:16.230 --> 00:22:18.340\nThat means you don't have\nenough IOPS available.\n\n502\n00:22:18.340 --> 00:22:19.040\nThat may be okay,\n\n503\n00:22:19.040 --> 00:22:22.250\nmaybe this is like a one off thing and\nI know my servers are busy today but\n\n504\n00:22:22.250 --> 00:22:24.710\ntomorrow they're going to be back to\nnormal, I'm just going to ignore it.\n\n505\n00:22:24.710 --> 00:22:27.730\nOr the occasional spike every here and\nthere.\n\n506\n00:22:27.730 --> 00:22:31.460\nBut, if I see this consistently\nabove zero for any length of time,\n\n507\n00:22:31.460 --> 00:22:34.720\nthat means I don't have enough IOPS, and\nI need to do something to improve that.\n\n508\n00:22:34.720 --> 00:22:39.560\nOn a general purpose SSD,\nyou can just increase the size,\n\n509\n00:22:39.560 --> 00:22:41.950\nthat will add more IOPS and you're fine.\n\n510\n00:22:41.950 --> 00:22:45.790\nOn a provisioned IOPS disk you just add\nfor IOPS to it and that takes care of it\n\n511\n00:22:45.790 --> 00:22:48.400\nbut that's really the one that I watch\nbecause it's so easy to interpret.\n\n512\n00:22:48.400 --> 00:22:53.040\nYou know, you just click on it, and\ndown here you get a nice little chart.\n\n513\n00:22:53.040 --> 00:22:55.660\nLet me find a volume that's\nactually in use, here we go.\n\n514\n00:22:55.660 --> 00:22:59.370\nAnd so here we've got a volume that's in\nuse, and remember how I said I love for\n\n515\n00:22:59.370 --> 00:23:00.650\nit to be zero?\n\n516\n00:23:00.650 --> 00:23:04.230\nBut on this one, I can see it's actually\ncreeped up just a little bit, but\n\n517\n00:23:04.230 --> 00:23:06.350\nboy, it's, it's not very high right.\n\n518\n00:23:06.350 --> 00:23:10.070\n0.0004, so a really small amount\nof things waiting in the queue,\n\n519\n00:23:10.070 --> 00:23:13.015\nthat means that things are going in and\nout of the queue very fast.\n\n520\n00:23:13.015 --> 00:23:15.485\nFast, right, so it's not even hitting one.\n\n521\n00:23:15.485 --> 00:23:20.085\nI wouldn't worry about this one, this one\nis operating within its normal patterns.\n\n522\n00:23:20.085 --> 00:23:24.475\nYou can track this, and if you\nconsistently see that going high for\n\n523\n00:23:24.475 --> 00:23:27.375\nlong periods of time, then you know,\nit's time to upgrade.\n\n524\n00:23:27.375 --> 00:23:31.990\nThat volume queue length has exceeded\nits level, and now you've got a problem.\n\n525\n00:23:31.990 --> 00:23:35.765\n>> So,that might be when I'm monitoring\non an even daily basis, probably,\n\n526\n00:23:35.765 --> 00:23:37.320\nor maybe a weekly.\n\n527\n00:23:37.320 --> 00:23:39.190\nYeah, well.\n\n528\n00:23:39.190 --> 00:23:40.730\n>> Depending on your database.\n\n529\n00:23:40.730 --> 00:23:42.890\n>> I don't like to monitor things at all,\npersonally.\n\n530\n00:23:42.890 --> 00:23:43.750\nYou want to monitor them,\n\n531\n00:23:43.750 --> 00:23:46.610\nbut I don't want to have to come in and\ncheck on it everyday.\n\n532\n00:23:46.610 --> 00:23:49.710\nSo, we'll normally set up\nan alert to handle that.\n\n533\n00:23:49.710 --> 00:23:54.229\nOn this screen I kinda see actually,\nmy head sitting on top of it.\n\n534\n00:23:54.229 --> 00:23:54.818\nTake this server here.\n\n535\n00:23:54.818 --> 00:23:58.219\nLet's say I'm really worried about it,\nand if it ever hits one For\n\n536\n00:23:58.219 --> 00:24:00.790\nan extended period of time,\nI wanna be notified.\n\n537\n00:24:00.790 --> 00:24:04.600\nSo on the right side, under Actions,\nsee how I can create an alarm?\n\n538\n00:24:04.600 --> 00:24:08.840\nI can create an alarm, and in the Alarm\nscreen, I can come in here, and\n\n539\n00:24:08.840 --> 00:24:09.890\nI can tell it what I wanna do.\n\n540\n00:24:09.890 --> 00:24:15.373\nSo this would be Itprotv-web01-,\nand I'll call this one diskqueue.\n\n541\n00:24:15.373 --> 00:24:17.505\nSo this is gonna be my alarm.\n\n542\n00:24:17.505 --> 00:24:22.732\nAnd I'll say, Disk Queue exceeds 1 for\n\n543\n00:24:22.732 --> 00:24:26.588\nmore than 5 minutes, okay.\n\n544\n00:24:26.588 --> 00:24:29.408\nI'm just giving a name and a description\nso I can remember what the heck this thing\n\n545\n00:24:29.408 --> 00:24:32.388\nis when I find it six months from now and\nI'm like, why do I have that?\n\n546\n00:24:32.388 --> 00:24:35.420\nSo I'm gonna come in here and\nsay what my period is going to be.\n\n547\n00:24:35.420 --> 00:24:38.780\nNow notice the period down here\nis set to 5 minutes, right.\n\n548\n00:24:38.780 --> 00:24:41.370\nIf you've got just regular\nold CloudWatch turned on,\n\n549\n00:24:41.370 --> 00:24:43.220\n5 minutes is what you get, right.\n\n550\n00:24:43.220 --> 00:24:46.490\nBut if you've got detailed CloudWatch\nturned on you can drop down to 1 minute.\n\n551\n00:24:46.490 --> 00:24:48.420\nAnd so\nI might set my period to be 1 minute, so\n\n552\n00:24:48.420 --> 00:24:49.450\nI'm looking at it every 1 minute.\n\n553\n00:24:49.450 --> 00:24:58.240\nAnd I'll say that if my VolumeQueueLength\nis >= 1 for 5 consecutive periods.\n\n554\n00:24:58.240 --> 00:25:01.110\nAll right, so I've got detailed\nCloudWatch monitoring turned on,\n\n555\n00:25:01.110 --> 00:25:03.160\nit's collecting metrics every 1 minute.\n\n556\n00:25:03.160 --> 00:25:08.150\nAnd if my queue length is over 1 for\n5 minutes, if it doesn't clear\n\n557\n00:25:08.150 --> 00:25:10.920\nup within that 5 minute period,\nthen I wanna generate an alarm.\n\n558\n00:25:10.920 --> 00:25:15.363\nAnd down here I can come in and\nI can say, if the state is alarm,\n\n559\n00:25:15.363 --> 00:25:16.998\nsend a notification.\n\n560\n00:25:16.998 --> 00:25:18.603\nAnd I'll send a notification to me.\n\n561\n00:25:18.603 --> 00:25:20.780\nJust punch in my email address there.\n\n562\n00:25:20.780 --> 00:25:23.700\nYou can create a new list, you can have\na whole list of people you can alert.\n\n563\n00:25:23.700 --> 00:25:25.850\nAnd so now we can add that notification.\n\n564\n00:25:25.850 --> 00:25:28.825\nAnd once that's in there, now I'm gonna\nget notified, or actually hang on,\n\n565\n00:25:28.825 --> 00:25:31.500\nI'm adding another notification,\nI don't want that, there we go.\n\n566\n00:25:31.500 --> 00:25:33.240\nNow I'm gonna get notified, so\nI don't have to monitor this.\n\n567\n00:25:33.240 --> 00:25:36.150\nI don't have to come in the morning,\nsay let me go look at some charts.\n\n568\n00:25:36.150 --> 00:25:37.740\nI can just say you know what,\nno, it's done.\n\n569\n00:25:37.740 --> 00:25:41.328\nI know that if it exceeds 1 for a period\nof 5 minutes, that's time to upgrade,\n\n570\n00:25:41.328 --> 00:25:43.120\nit's probably past time to upgrade.\n\n571\n00:25:43.120 --> 00:25:45.530\nI probably should have been watching\nas it creeped up over time,\n\n572\n00:25:45.530 --> 00:25:47.030\nright, our trend analysis.\n\n573\n00:25:47.030 --> 00:25:49.570\nAnd you can see over here kind\nof what your estimate is.\n\n574\n00:25:49.570 --> 00:25:53.500\nThe red line is my alarm, and the blue\nline are the actual metric values for\n\n575\n00:25:53.500 --> 00:25:54.110\nwhere it's been.\n\n576\n00:25:54.110 --> 00:25:57.150\nSo I can get an idea of whether\nI'm really close to that or not.\n\n577\n00:25:57.150 --> 00:25:59.110\nSo, everything looks good there.\n\n578\n00:25:59.110 --> 00:26:03.760\nSo I can go down here and create\nthe alarm, and now it's gonna let me know.\n\n579\n00:26:03.760 --> 00:26:07.770\nAnd up here, notice my alarms, I just got\nthis big INSUFFICIENT warning, right?\n\n580\n00:26:07.770 --> 00:26:10.510\nSo there's my INSUFFICIENT_DATA\ncuz I just created the alarm.\n\n581\n00:26:10.510 --> 00:26:13.340\nSo it's going to start running and\ncollecting that data and\n\n582\n00:26:13.340 --> 00:26:14.310\nbuilding it up for this alarm.\n\n583\n00:26:14.310 --> 00:26:17.640\nAnd so I'll see that change\neventually to green for OK.\n\n584\n00:26:17.640 --> 00:26:20.828\nIt'll take five minutes for that to happen\nbut when that's done it'll be green.\n\n585\n00:26:20.828 --> 00:26:24.047\nAnd you'll see like,\nI've already got an alarm here for, oh,\n\n586\n00:26:24.047 --> 00:26:27.052\nif my EstimatedCharges are greater\nthan a certain amount.\n\n587\n00:26:27.052 --> 00:26:30.590\nAnd we'll cover this again in\nthe cost optimization episode where,\n\n588\n00:26:30.590 --> 00:26:33.823\nif you're billing,\nit's a certain level that can alert you so\n\n589\n00:26:33.823 --> 00:26:36.328\nI've got one there and\nit's got plenty of data.\n\n590\n00:26:36.328 --> 00:26:38.240\nOh, my other one just converted,\nthere we go.\n\n591\n00:26:38.240 --> 00:26:42.068\nSo, itprotv-web01-diskqueue\njust switched to green,\n\n592\n00:26:42.068 --> 00:26:45.387\nit's got enough data now,\nand it's up and running.\n\n593\n00:26:45.387 --> 00:26:48.710\nAnd if that disk queue ever starts to\nexceed that level, I'll get an alert.\n\n594\n00:26:48.710 --> 00:26:49.990\nSo, definitely cool stuff.\n\n595\n00:26:49.990 --> 00:26:51.150\n>> Does that alert get emailed?\n\n596\n00:26:51.150 --> 00:26:54.290\nCan we set that up or is it just,\nI gotta come into the CloudWatch and\n\n597\n00:26:54.290 --> 00:26:55.260\ncheck it from there?\n\n598\n00:26:55.260 --> 00:26:55.850\n>> They both work.\n\n599\n00:26:55.850 --> 00:26:58.650\nSo that was one of the things\nwhen I defined this alarm, right?\n\n600\n00:26:58.650 --> 00:27:03.910\nSo if I go take this alarm and hit Modify,\nwhen I defined it, right down here\n\n601\n00:27:03.910 --> 00:27:08.630\nunder Actions, I set it to notify me and I\nset that email list to point to me, right?\n\n602\n00:27:08.630 --> 00:27:12.680\nSo you could put a new list with whatever\nyou wanted in there, and you can have it\n\n603\n00:27:12.680 --> 00:27:16.020\ndo all sorts of crazy things but\nusually an email is what we want.\n\n604\n00:27:16.020 --> 00:27:17.680\nSo, easy enough to do that.\n\n605\n00:27:17.680 --> 00:27:21.440\n>> Well Don, obviously the CloudWatch is\na very robust solution to give us both\n\n606\n00:27:21.440 --> 00:27:23.210\nmonitoring and alerting.\n\n607\n00:27:23.210 --> 00:27:28.040\nIs there anything else we need to know\nabout monitoring in general using Amazon?\n\n608\n00:27:28.040 --> 00:27:30.920\n>> Yeah, just a couple of things Daniel,\njust for completeness here.\n\n609\n00:27:30.920 --> 00:27:35.194\nI know when I talked about the system\nchecks for EBS volumes I mentioned okay,\n\n610\n00:27:35.194 --> 00:27:37.250\nright, which means it's working.\n\n611\n00:27:37.250 --> 00:27:38.827\nAnd I mentioned impaired,\nwhich is really bad,\n\n612\n00:27:38.827 --> 00:27:40.830\nthat's when things are offline, right?\n\n613\n00:27:40.830 --> 00:27:43.390\nThere is a third status, which is warning.\n\n614\n00:27:43.390 --> 00:27:46.460\nAnd warning means that your\nperformance is degraded.\n\n615\n00:27:46.460 --> 00:27:50.500\nAnd degraded means that maybe it's on\na storage array where one hard drive\n\n616\n00:27:50.500 --> 00:27:51.500\nhas failed.\n\n617\n00:27:51.500 --> 00:27:53.680\nAnd you haven't lost your data,\nthe volume's still online,\n\n618\n00:27:53.680 --> 00:27:55.242\nbut your not performing at full IOPS.\n\n619\n00:27:55.242 --> 00:27:58.970\nOr something's happened to that rack\nwhere Amazon's over-provisioned it, and\n\n620\n00:27:58.970 --> 00:28:00.030\nthey'll work to correct that.\n\n621\n00:28:00.030 --> 00:28:02.800\nBut that's a warning, and for warnings\nthere's really not much you can do.\n\n622\n00:28:02.800 --> 00:28:04.410\nYou just wait, and Amazon resolves it.\n\n623\n00:28:04.410 --> 00:28:09.405\nSo okay is healthy,\nwarning means degraded performance, and\n\n624\n00:28:09.405 --> 00:28:12.250\nthen impaired usually means it's offline.\n\n625\n00:28:12.250 --> 00:28:14.720\nIf it is online it's not reliable and\nso that's really bad, right.\n\n626\n00:28:14.720 --> 00:28:16.670\nRemember the impaired is the worst one.\n\n627\n00:28:16.670 --> 00:28:18.960\nSo those are the three warning statuses.\n\n628\n00:28:18.960 --> 00:28:23.280\nAnd the other thing I wanna mention is\nCloudWatch is really, really powerful.\n\n629\n00:28:23.280 --> 00:28:26.985\nAnd Daniel, you asked with these\nalerts can it email you or\n\n630\n00:28:26.985 --> 00:28:28.350\ndo you log into the panel.\n\n631\n00:28:28.350 --> 00:28:31.050\nI like to do email, cuz you can\njust email anybody with them, and\n\n632\n00:28:31.050 --> 00:28:32.490\nthey don't have to have an account.\n\n633\n00:28:32.490 --> 00:28:34.870\nBut you can give somebody\npermission to log in and\n\n634\n00:28:34.870 --> 00:28:37.420\nview the CloudWatch data\non your Amazon account.\n\n635\n00:28:37.420 --> 00:28:40.060\nYou just do it through IAM,\nyou can whip up a quick role of it.\n\n636\n00:28:40.060 --> 00:28:40.750\nLet me show you here.\n\n637\n00:28:40.750 --> 00:28:44.660\nSo for example,\nif I jump into my AWS panel,\n\n638\n00:28:44.660 --> 00:28:49.759\nI can go down to IAM,\nthe Identity & Access Management.\n\n639\n00:28:49.759 --> 00:28:51.525\nAnd in Identity & Access Management,\n\n640\n00:28:51.525 --> 00:28:54.680\nwe can create user accounts to\nlet people login and see things.\n\n641\n00:28:54.680 --> 00:28:56.580\nBut you can create roles too.\n\n642\n00:28:56.580 --> 00:29:01.722\nAnd so I might create a role, here, I'll\njust create a new one, which I'll call my\n\n643\n00:29:01.722 --> 00:29:06.970\nitprotv-cloudwatch-reader, right.\n\n644\n00:29:06.970 --> 00:29:09.470\nI wanna give somebody read-only\naccess to CloudWatch so\n\n645\n00:29:09.470 --> 00:29:11.740\nthey'll be able to log in and\nsee that panel.\n\n646\n00:29:11.740 --> 00:29:15.040\nAnd when you move forward, it's gonna ask\nyou what kinda role type you're picking,\n\n647\n00:29:15.040 --> 00:29:17.830\nand you'll see all the different\nthings that you can choose from, and\n\n648\n00:29:17.830 --> 00:29:21.120\nthis is EC2, right,\ncuz we're monitoring EC2 instances.\n\n649\n00:29:21.120 --> 00:29:22.430\nSo I'm just gonna select that one.\n\n650\n00:29:23.580 --> 00:29:27.210\nAnd then in the roles,\nif you just type cloudwatch,\n\n651\n00:29:27.210 --> 00:29:29.400\nyou'll see that there's several\nthat are already created.\n\n652\n00:29:29.400 --> 00:29:32.760\nAnd the ones I want to just point\nout are CloudWatchFullAccess.\n\n653\n00:29:32.760 --> 00:29:37.180\nThat'll give somebody access to all of\nCloudWatch, including modifying alarms,\n\n654\n00:29:37.180 --> 00:29:39.200\nwhich is not necessarily\nwhat you wanna do.\n\n655\n00:29:39.200 --> 00:29:42.910\nAnd then you can do\nCloudWatchReadOnlyAccess.\n\n656\n00:29:42.910 --> 00:29:46.430\nNow they can log into AWS,\ngo to the CloudWatch panel and\n\n657\n00:29:46.430 --> 00:29:49.690\nsee all the CloudWatch metrics, but\nnot be able to mess with anything, right?\n\n658\n00:29:49.690 --> 00:29:51.380\nAnd so that's a great way\nthat we can give that out.\n\n659\n00:29:51.380 --> 00:29:54.230\nAnd then you've got the same\nthing just for the logs, right?\n\n660\n00:29:54.230 --> 00:29:55.900\nWith the logs,\nthat means they don't get the web UI,\n\n661\n00:29:55.900 --> 00:29:58.780\nthey've gotta go through\nthe API to access the logs.\n\n662\n00:29:58.780 --> 00:30:01.380\nAnd so you can give somebody\nfull access to the logs, or\n\n663\n00:30:01.380 --> 00:30:03.130\nread only access to the logs.\n\n664\n00:30:03.130 --> 00:30:06.750\nFull access means they can actually post\nlog events to it, and even remove events,\n\n665\n00:30:06.750 --> 00:30:09.050\nwhich is not necessarily\nthe greatest thing in the world.\n\n666\n00:30:09.050 --> 00:30:11.300\nSo read only is what you're\nnormally gonna use there.\n\n667\n00:30:11.300 --> 00:30:13.240\nYou can create a role and\nyou can attach something,\n\n668\n00:30:13.240 --> 00:30:16.415\nlike I'll do CloudWatchReadOnlyAccess.\n\n669\n00:30:16.415 --> 00:30:20.375\nAnd now I can create users and\nstick them in this role and\n\n670\n00:30:20.375 --> 00:30:22.715\nthey'll have the permission to come and\nlook at my CloudWatch data.\n\n671\n00:30:22.715 --> 00:30:25.735\nSo just be aware of that, I know we talked\nabout it in the roles episode too, but\n\n672\n00:30:25.735 --> 00:30:28.335\nI just wanted to mention it here so\nyou guys would be aware.\n\n673\n00:30:28.335 --> 00:30:30.702\n>> Awesome, well Don, this actually\nreminds me of back when we used to work\n\n674\n00:30:30.702 --> 00:30:33.342\ntogether and you would delegate\nresponsibilities out to me.\n\n675\n00:30:33.342 --> 00:30:35.972\nAnd so you could play Free Cell or\nwhatever you did in your office.\n\n676\n00:30:35.972 --> 00:30:36.879\n>> Back before you knew better.\n\n677\n00:30:36.879 --> 00:30:38.674\n>> Yeah, that's back before I knew better,\nthat's right.\n\n678\n00:30:38.674 --> 00:30:42.336\nAll right Don,\nwell obviously we've covered a lot here.\n\n679\n00:30:42.336 --> 00:30:44.012\nSo, if you're watching\nthis it can be a lot,\n\n680\n00:30:44.012 --> 00:30:46.422\ncan sometimes feel like you're\ndrinking from a fire hose.\n\n681\n00:30:46.422 --> 00:30:49.222\nBut Don, I think you did a great\njob explaining how we can\n\n682\n00:30:49.222 --> 00:30:53.110\nmonitor our systems using CloudWatch,\nsetting up alerts, very, very cool stuff.\n\n683\n00:30:53.110 --> 00:30:54.430\nThank you so much for that.\n\n684\n00:30:54.430 --> 00:30:56.350\nThank you guys for\nwatching and joining us today.\n\n685\n00:30:56.350 --> 00:30:58.161\nWe're gonna go ahead and\nsign off for ITProTV.\n\n686\n00:30:58.161 --> 00:30:59.930\nI've been your host Daniel Lowrie.\n\n687\n00:30:59.930 --> 00:31:01.698\n>> And I'm Don Pezet.\n>> And we'll see you next time.\n\n688\n00:31:01.698 --> 00:31:07.580\n[SOUND]\n\n",
          "vimeoId": "148922120"
        },
        {
          "description": "In this episode, Don and Daniel describe how to perform advanced monitoring with custom metrics in AWS CloudWatch. First they define what a custom metric is and then walk you through creating custom metrics that will be viewable in CloudWatch. In that endeavor, you will also see how to create an Identity and Access Management(IAM) role.",
          "length": "1934",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/amazon-acsa/amazon-acsa-3-3-monitoring_custom_metrics-121515-1.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/amazon-acsa/amazon-acsa-3-3-monitoring_custom_metrics-121515-1-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/amazon-acsa/amazon-acsa-3-3-monitoring_custom_metrics-121515-1-sm.jpg",
          "title": "Monitoring Custom Metrics",
          "transcript": "WEBVTT\n\n1\n00:00:00.305 --> 00:00:10.305\n[MUSIC]\n\n2\n00:00:11.903 --> 00:00:12.681\n>> All right.\n\n3\n00:00:12.681 --> 00:00:16.485\nGreetings, everyone, and welcome to\nanother great episode of IT Pro TV.\n\n4\n00:00:16.485 --> 00:00:19.515\nI'm your host, Daniel Lowrie,\nand in today's episode we're\n\n5\n00:00:19.515 --> 00:00:23.075\ngoing to continue taking a look at\nour AWS Certified Sys Ops Admin.\n\n6\n00:00:23.075 --> 00:00:24.895\nYes, that is a long thing to say.\n\n7\n00:00:24.895 --> 00:00:28.355\nAnd joining me in the studio today to\nlend his expertise on that topic is\n\n8\n00:00:28.355 --> 00:00:30.275\nnone other than my good friend,\nMr. Don Pezet.\n\n9\n00:00:30.275 --> 00:00:31.925\nDon, welcome to the show and\nhow you doing sir?\n\n10\n00:00:31.925 --> 00:00:33.845\n>> I am doing great, Daniel,\nThanks for having me back and\n\n11\n00:00:33.845 --> 00:00:37.675\nI'm excited to jump right back into\nthe world of monitoring our EC2 instances.\n\n12\n00:00:37.675 --> 00:00:41.440\nI know in the last episode, we had a\nchance to see how we could use CloudWatch\n\n13\n00:00:41.440 --> 00:00:45.660\nto monitor our systems, and see all that\ngood data that Amazon's collecting, and\n\n14\n00:00:45.660 --> 00:00:48.750\nuse that to make that decisions about\nwhen to upgrade, when to scale up,\n\n15\n00:00:48.750 --> 00:00:50.420\nwhen to scale out, and all that.\n\n16\n00:00:50.420 --> 00:00:52.310\nToday, we're gonna take\na look at custom metrics,\n\n17\n00:00:52.310 --> 00:00:55.430\nwhich are a little bit more\nadvanced way of getting\n\n18\n00:00:55.430 --> 00:00:58.990\neven more detailed information about\nour instances in the CloudWatch.\n\n19\n00:00:58.990 --> 00:01:01.150\nIt's a neat system,\nit's one you'll wanna see, and\n\n20\n00:01:01.150 --> 00:01:03.610\nhopefully one you'll take advantage\nof out there in the real world.\n\n21\n00:01:03.610 --> 00:01:07.240\n>> Now, this is gonna be actually pretty\ncool because CloudWatch does a lot\n\n22\n00:01:07.240 --> 00:01:09.110\nof monitoring by default.\n\n23\n00:01:09.110 --> 00:01:12.220\nBut Don, you're gonna show us what we\ncan do that's not the defaults, right?\n\n24\n00:01:12.220 --> 00:01:16.560\nThis is basically normally what we would\ndo with third party software, right?\n\n25\n00:01:16.560 --> 00:01:20.200\n>> Yeah, I mean, if you think about it,\nwhat's in CloudWatch already\n\n26\n00:01:20.200 --> 00:01:22.710\nare the things that Amazon needs\nto know to bill you, right.\n\n27\n00:01:22.710 --> 00:01:24.420\nAnd I don't mean that in a negative way.\n\n28\n00:01:24.420 --> 00:01:25.630\nIt's actually a good thing.\n\n29\n00:01:25.630 --> 00:01:27.710\nThey've gotta collect the data for\nbilling purposes, and\n\n30\n00:01:27.710 --> 00:01:32.020\nthey share it with you at no extra charge\nif you do regular CloudWatch monitoring,\n\n31\n00:01:32.020 --> 00:01:33.590\nnot the detailed monitoring, right.\n\n32\n00:01:33.590 --> 00:01:36.240\nIf you do detailed monitoring,\nit gets a little bit above that, right.\n\n33\n00:01:36.240 --> 00:01:39.290\nRegular monitoring is every five minutes\nwhere they're collecting that data.\n\n34\n00:01:39.290 --> 00:01:41.530\nDetailed monitoring is every one\nminute where they collect that data.\n\n35\n00:01:41.530 --> 00:01:42.980\nBut it's still the same data.\n\n36\n00:01:42.980 --> 00:01:47.940\nIt's still catching CPU utilization,\nit's catching disk utilization as\n\n37\n00:01:47.940 --> 00:01:51.180\nfar as disk IO,\nit's capturing network bandwidth, right.\n\n38\n00:01:51.180 --> 00:01:55.200\nThe 3 main things that Amazon bills for\nas well as the system health checks.\n\n39\n00:01:55.200 --> 00:01:56.890\nThose are the 4 kind of default areas.\n\n40\n00:01:56.890 --> 00:01:58.910\nThey don't bill you for\nthe system health checks.\n\n41\n00:01:58.910 --> 00:02:02.410\nSo, those 4 things it's gathering,\nit's recording them and storing them.\n\n42\n00:02:02.410 --> 00:02:04.000\nBut what about other things, right?\n\n43\n00:02:04.000 --> 00:02:05.910\nThere's plenty of stuff\nthat they're not recording.\n\n44\n00:02:05.910 --> 00:02:08.470\nFor example,\nthey are recording your disk utilization.\n\n45\n00:02:08.470 --> 00:02:10.834\nThey need to know how much\ndisk I/O you're generating,\n\n46\n00:02:10.834 --> 00:02:14.378\nbecause if you're doing a provisioned disk\nIOPS drive, or even if you're just doing\n\n47\n00:02:14.378 --> 00:02:17.185\na regular general purpose SSD,\nthey have a certain service level,\n\n48\n00:02:17.185 --> 00:02:19.499\na certain base line of IOPS\nthey wanna provide you with So\n\n49\n00:02:19.499 --> 00:02:22.785\nthey need to monitor the IOPS you're\nusing to be able to measure against that.\n\n50\n00:02:22.785 --> 00:02:26.422\nAnd that's not even counting things that\nyou're doing like the credits that you\n\n51\n00:02:26.422 --> 00:02:29.257\nearn for IOPS, if you,\nif you're doing general purpose SSD or\n\n52\n00:02:29.257 --> 00:02:32.110\neven the regular, old baseline,\nif you're doing magnetic.\n\n53\n00:02:32.110 --> 00:02:34.080\nAll that stuff has to be tracked.\n\n54\n00:02:34.080 --> 00:02:36.590\nBut what about other storage metrics?\n\n55\n00:02:36.590 --> 00:02:40.610\nWhat if I want to know how\nmuch disk space I'm using?\n\n56\n00:02:40.610 --> 00:02:44.480\nI've got a 64 gig drive and\nI start filling it up with data.\n\n57\n00:02:44.480 --> 00:02:47.950\nAm I 50% full, am I 80% full,\nam I 90% full?\n\n58\n00:02:47.950 --> 00:02:50.250\nIs that important, do I care?\n\n59\n00:02:50.250 --> 00:02:51.300\nYes, I care.\n\n60\n00:02:51.300 --> 00:02:54.450\nIf my drive fills up I need to know about\nit, especially because in EC2 it's so\n\n61\n00:02:54.450 --> 00:02:56.940\neasy to add more space if I need it.\n\n62\n00:02:56.940 --> 00:02:59.310\nI just need to know to do that, right?\n\n63\n00:02:59.310 --> 00:03:01.800\nBut CloudWatch doesn't\nrecord that by default.\n\n64\n00:03:01.800 --> 00:03:06.400\nAnd that's because Amazon, when you\nprovision that drive, you provision\n\n65\n00:03:06.400 --> 00:03:10.090\nan 80 gig drive, Amazon says okay well\nyou need to pay for 80 gigs, right.\n\n66\n00:03:10.090 --> 00:03:11.790\nYou're paying for what you use.\n\n67\n00:03:11.790 --> 00:03:15.770\nThey don't care if you, inside of that,\nare using 40 gigs or 20 gigs or\n\n68\n00:03:15.770 --> 00:03:20.130\n1 gig, they're not concerned,\nbut you should be.\n\n69\n00:03:20.130 --> 00:03:23.870\nAnd so Amazon's suggestion\non that is kinda two-fold.\n\n70\n00:03:23.870 --> 00:03:25.370\nThey're not monitoring it by default.\n\n71\n00:03:25.370 --> 00:03:28.880\nAnd so it's not baked into CloudWatch,\nit's not a part of that regular system.\n\n72\n00:03:28.880 --> 00:03:32.540\nIt's not there, but\nyou can do one of two things.\n\n73\n00:03:32.540 --> 00:03:35.290\nYou can, one, you can do what most\npeople use, is what Daniel said,\n\n74\n00:03:35.290 --> 00:03:37.120\nis third-party software.\n\n75\n00:03:37.120 --> 00:03:41.190\nSo there's products out there like\nSolar Wind's network performance monitor,\n\n76\n00:03:41.190 --> 00:03:48.420\nZenoss, Zabixx, MRTG, what are some\nof the bigger ones, like Cacti,\n\n77\n00:03:48.420 --> 00:03:52.370\nthere's a ton of them that are out there\nthat you can use to monitor your systems,\n\n78\n00:03:52.370 --> 00:03:56.460\nand it will show you things like how much\nbandwidth you're using over time and\n\n79\n00:03:56.460 --> 00:04:00.280\nhow much disk utilization you're using,\nhow much ram utilization.\n\n80\n00:04:00.280 --> 00:04:02.740\nNotice I'll just talk about\nmetrics I never mentioned RAM.\n\n81\n00:04:02.740 --> 00:04:05.580\nWhen you spin up an instance,\nthat instance has eight gigs of RAM, or\n\n82\n00:04:05.580 --> 00:04:08.540\nfour gigs of RAM, or two gigs of RAM,\nwhatever it is you choose when you spin\n\n83\n00:04:08.540 --> 00:04:12.170\nout the instance,\nAmazon never tracks utilization on that.\n\n84\n00:04:12.170 --> 00:04:15.080\nSo you might be fully saturated and\nusing all the RAM for\n\n85\n00:04:15.080 --> 00:04:17.700\nyour VM, Amazon doesn't track it.\n\n86\n00:04:17.700 --> 00:04:18.300\nRight?\nSo\n\n87\n00:04:18.300 --> 00:04:20.814\nif I want that data,\nI can use third-party software,\n\n88\n00:04:20.814 --> 00:04:23.230\nit'll gather that information for\nme and report it back.\n\n89\n00:04:23.230 --> 00:04:26.320\nAnd I can even use that third-party\nsoftware to monitor the things that\n\n90\n00:04:26.320 --> 00:04:27.510\nCloudWatch is already monitoring.\n\n91\n00:04:27.510 --> 00:04:31.613\nThat way, I've got it all one place and\nI can rely on that third-party system.\n\n92\n00:04:31.613 --> 00:04:36.020\nThe only negative about going the\nthird-party route is you gotta administer\n\n93\n00:04:36.020 --> 00:04:39.200\nit, so you have to support it yourself,\nand it can be kind of expensive.\n\n94\n00:04:39.200 --> 00:04:41.390\nI I love Solar Wind's\nnetwork performance monitor.\n\n95\n00:04:41.390 --> 00:04:44.560\nI think it's great software,\nbut boy is it expensive.\n\n96\n00:04:44.560 --> 00:04:45.310\nSo if you're a small or\n\n97\n00:04:45.310 --> 00:04:48.420\nmedium organization you may\nnot be able to afford it.\n\n98\n00:04:48.420 --> 00:04:51.350\nThen you start going to the open source\nside and on the open source side there's\n\n99\n00:04:51.350 --> 00:04:56.180\ngreat products there too like Zabix and\nZenas those are great too but they're\n\n100\n00:04:56.180 --> 00:05:00.000\na bit of a bear to implement, they're\ntough to get in place and start recording.\n\n101\n00:05:00.000 --> 00:05:01.130\nBut if you got the time you can do,\n\n102\n00:05:01.130 --> 00:05:04.280\nits very rewarding you get a lot\nof great information out of it.\n\n103\n00:05:04.280 --> 00:05:07.520\nYou get it implemented and you have it\nversus the cloud watch monitoring where we\n\n104\n00:05:07.520 --> 00:05:10.200\ndon't get all of those metrics but\nits just done,\n\n105\n00:05:10.200 --> 00:05:13.810\nits there its running its already being\ntracked and you get that information.\n\n106\n00:05:13.810 --> 00:05:17.590\nSo those are kind of the two choices\nas far as Amazon is concerned.\n\n107\n00:05:17.590 --> 00:05:19.694\nThe third party software is normally\nthe way they want you to go.\n\n108\n00:05:19.694 --> 00:05:22.940\n>> Yeah, but I'm probably the other\nviewer out there right now,\n\n109\n00:05:22.940 --> 00:05:26.690\nif you're thinking like I am,\nI don't want to have to jump to multiple.\n\n110\n00:05:26.690 --> 00:05:29.740\nI already got enough screens\nopen on at desktop as it is.\n\n111\n00:05:29.740 --> 00:05:32.960\nI don't need to add another one,\nespecially a very complex one.\n\n112\n00:05:32.960 --> 00:05:39.120\nHow do I do or can I do all the things\nin one spot and just use CloudWatch?\n\n113\n00:05:39.120 --> 00:05:41.760\nIt seems like that would\nbe the best way to go.\n\n114\n00:05:41.760 --> 00:05:43.450\n>> Yeah.\nAnd you can.\n\n115\n00:05:43.450 --> 00:05:46.730\nSo Amazon didn't always do this but\na few years ago they opened it up\n\n116\n00:05:46.730 --> 00:05:50.400\nto where you can actually push whatever\nmetric you want into CloudWatch.\n\n117\n00:05:50.400 --> 00:05:52.330\nRight?\nAnd they called it doing a custom metric.\n\n118\n00:05:52.330 --> 00:05:55.630\nSo they monitor the metrics\nthat are important to them and\n\n119\n00:05:55.630 --> 00:05:58.230\nthey share that with you,\nso we benefit from that.\n\n120\n00:05:58.230 --> 00:06:00.700\nBut if there's other things\nlike disk utilization or\n\n121\n00:06:00.700 --> 00:06:04.870\nRAM utilization that are important to us,\nwe can actually collect that data and\n\n122\n00:06:04.870 --> 00:06:06.380\nsend it into CloudWatch.\n\n123\n00:06:06.380 --> 00:06:07.880\nNow they charge for that.\n\n124\n00:06:07.880 --> 00:06:09.640\nYou can't do this in the free usage tier,\nbut\n\n125\n00:06:09.640 --> 00:06:12.270\nif you're doing the paid\nversion of CloudWatch,\n\n126\n00:06:12.270 --> 00:06:16.480\nwhich is not expensive, then you can\nstart pushing your own data in there.\n\n127\n00:06:16.480 --> 00:06:20.980\nAnd the advantage of doing this is\nyou don't need third party software.\n\n128\n00:06:20.980 --> 00:06:23.370\nYou can just do it right through AWS.\n\n129\n00:06:23.370 --> 00:06:25.460\nAll of your metrics\nare stored in one place.\n\n130\n00:06:25.460 --> 00:06:28.630\nYou go to your CloudWatch portal,\nyou see all your data right there.\n\n131\n00:06:28.630 --> 00:06:31.800\nAnd it's all right as part of CloudWatch.\n\n132\n00:06:31.800 --> 00:06:34.170\nYou're not deploying third party software\nthat you have to manage and maintain.\n\n133\n00:06:34.170 --> 00:06:36.190\nSo that makes life really easy.\n\n134\n00:06:36.190 --> 00:06:40.100\nThe only challenge is Amazon\ndoesn't really have an agent\n\n135\n00:06:40.100 --> 00:06:42.855\nthat you can use to collect\nthe data in the first place, so\n\n136\n00:06:42.855 --> 00:06:44.570\nyou're gonna have to rely on scripts for\nthis.\n\n137\n00:06:44.570 --> 00:06:46.392\nAnd they do publish scripts for Linux.\n\n138\n00:06:46.392 --> 00:06:49.590\nSo there's a series of Python\nscripts that Amazon posted and\n\n139\n00:06:49.590 --> 00:06:52.740\nI will post the link in the show notes for\nthis episode, and\n\n140\n00:06:52.740 --> 00:06:55.355\nI will also show it here in\nthe video when we get it installed.\n\n141\n00:06:55.355 --> 00:06:59.240\nBut they publish some scripts, they do not\npublish scripts for Windows, but you can\n\n142\n00:06:59.240 --> 00:07:04.410\nuse PowerShell or the WMI to gather data\nand sent it up into AWS, so you can do\n\n143\n00:07:04.410 --> 00:07:08.820\nit from Windows too and so if you want to\nmonitor something like disk utilization,\n\n144\n00:07:08.820 --> 00:07:12.180\nyou can create a custom metric for\nthat and start pushing data to it.\n\n145\n00:07:12.180 --> 00:07:15.770\nAnd then when you log into Cloud watch,\nyou'll see all the nice normal metrics and\n\n146\n00:07:15.770 --> 00:07:18.970\nyou'll see the custom metrics, you'll be\nable to view them and get at that data,\n\n147\n00:07:18.970 --> 00:07:20.580\nand that's what custom\nmetrics are all about.\n\n148\n00:07:21.800 --> 00:07:24.300\nAlright, so, let's see how this works.\n\n149\n00:07:24.300 --> 00:07:29.130\nWell, step one to implementing a custom\nmetric is, we need our virtual machines,\n\n150\n00:07:29.130 --> 00:07:32.740\nour Amazon EC2 instances,\nto be allowed to write to cloud watch.\n\n151\n00:07:32.740 --> 00:07:34.740\nAnd by default they're not allowed to,\nalright?\n\n152\n00:07:34.740 --> 00:07:38.008\nBy default Amazon is\nmonitoring your machines, and\n\n153\n00:07:38.008 --> 00:07:41.800\nthey're writing to CloudWatch,\nnot your instances.\n\n154\n00:07:41.800 --> 00:07:45.150\nSo by default no instance is\nallowed to write to CloudWatch, and\n\n155\n00:07:45.150 --> 00:07:48.728\nif we want to collect custom metric data,\nwe've got to allow the instance to do it.\n\n156\n00:07:48.728 --> 00:07:55.380\nSo step one is to create a roll in\nIAM that grants that permission.\n\n157\n00:07:55.380 --> 00:07:56.443\nLet me show you how that's done.\n\n158\n00:07:56.443 --> 00:08:00.647\nI'm in my Amazon console here and I'm\ngoing to jump out of the main console and\n\n159\n00:08:00.647 --> 00:08:03.680\ngo down to identity and access management.\n\n160\n00:08:03.680 --> 00:08:07.220\nAnd I wanna create a custom role, so.\n\n161\n00:08:07.220 --> 00:08:08.767\nI'm gonna jump into Roles, and\n\n162\n00:08:08.767 --> 00:08:11.932\nI've already got a few custom\nroles that I've made beforehand.\n\n163\n00:08:11.932 --> 00:08:14.304\nIn fact, you'll see I've got\na cloudwatch-reader, and\n\n164\n00:08:14.304 --> 00:08:15.307\na cloudwatch-writer.\n\n165\n00:08:15.307 --> 00:08:18.166\nThese are ones that I've made for\nwriting to Cloudwatch, but\n\n166\n00:08:18.166 --> 00:08:19.708\nlet's create one from scratch.\n\n167\n00:08:19.708 --> 00:08:24.364\nSo I'm gonna create a new role,\nand I'll call this my\n\n168\n00:08:24.364 --> 00:08:30.381\nitprotv-demo-cw-writer so\nthis would be my CloudWatch writer.\n\n169\n00:08:31.780 --> 00:08:34.430\nAnd anybody who has this role\n\n170\n00:08:34.430 --> 00:08:37.940\nwill be allowed to write\nmetric data into CloudWatch.\n\n171\n00:08:37.940 --> 00:08:40.280\nSo that's important for an instance.\n\n172\n00:08:40.280 --> 00:08:43.370\nThen, I need to give it what\ntype of role it's going to be.\n\n173\n00:08:43.370 --> 00:08:45.940\nAnd you'll see there's all sorts of\ndifferent role in here, but right at\n\n174\n00:08:45.940 --> 00:08:49.810\nthe top are the Amazon EC2 permissions and\nthat's exactly what I wanted.\n\n175\n00:08:49.810 --> 00:08:52.000\nSo I'm gonna select that EC2 side.\n\n176\n00:08:53.590 --> 00:08:55.864\nAnd then I can pick\na policy to attach to it.\n\n177\n00:08:55.864 --> 00:08:59.250\nNow here's where things get a little\nbit tricky, because the policies,\n\n178\n00:08:59.250 --> 00:09:02.260\nthere's some pre-built ones,\nif I do a search for Cloudwatch.\n\n179\n00:09:02.260 --> 00:09:06.763\nBut when you look at the Cloudwatch\npermissions, the things like read only,\n\n180\n00:09:06.763 --> 00:09:11.610\nfull access, and so on, these are talking\nabout access to the Cloudwatch portal,\n\n181\n00:09:11.610 --> 00:09:14.150\naccess to the Cloudwatch logs.\n\n182\n00:09:14.150 --> 00:09:16.020\nI need the ability to write\nin to CloudWatch, and\n\n183\n00:09:16.020 --> 00:09:17.478\nnone of these actually give that access.\n\n184\n00:09:17.478 --> 00:09:19.650\nI'm gonna have to create a custom policy,\nand\n\n185\n00:09:19.650 --> 00:09:21.580\nunfortunately they won't let\nme do that from right here.\n\n186\n00:09:21.580 --> 00:09:25.660\nSo what I'm gonna do is, let's see, I'm\npretty sure they won't let me do it, yeah,\n\n187\n00:09:25.660 --> 00:09:26.460\nthey won't let me do it from here.\n\n188\n00:09:26.460 --> 00:09:29.300\nSo I'm just gonna skip this and\nnot assign any policy whatsoever,\n\n189\n00:09:29.300 --> 00:09:30.860\nI'll attach one in a second.\n\n190\n00:09:30.860 --> 00:09:33.190\nAnd I'll just hit Next Step,\nand I'll create that role.\n\n191\n00:09:33.190 --> 00:09:34.870\nNow, when I create the role,\n\n192\n00:09:34.870 --> 00:09:39.210\nit's kinda pointless cuz the roll\nhas no real permissions right?\n\n193\n00:09:39.210 --> 00:09:43.290\nSo I'm gonna go over here to Policies and\nwhip up a policy that will grant those\n\n194\n00:09:43.290 --> 00:09:46.150\npermissions, so\ninside of my policies here.\n\n195\n00:09:46.150 --> 00:09:50.730\nI'm just gonna create a new policy and\nI'm gonna use the policy generator for\n\n196\n00:09:50.730 --> 00:09:52.000\nthis one, that's the easiest,\n\n197\n00:09:52.000 --> 00:09:54.180\nyou could actually just create\nyour own and type it out.\n\n198\n00:09:54.180 --> 00:09:58.600\nI've actually got, let me show you guys a\npolicy that I wrote before the show here,\n\n199\n00:09:58.600 --> 00:10:00.772\nthat would grant the permissions\nthat I'm talking about.\n\n200\n00:10:00.772 --> 00:10:02.800\nThere's four permissions that we need for\n\n201\n00:10:02.800 --> 00:10:06.180\na machine to be able to\nwrite to CloudWatch.\n\n202\n00:10:06.180 --> 00:10:08.880\nThe first three are pretty understandable,\nright?\n\n203\n00:10:08.880 --> 00:10:11.620\nSo, cloudwatch:GetMetricsStatistics.\n\n204\n00:10:11.620 --> 00:10:15.509\nWe need to be able to see the metrics\nto be able to write to them.\n\n205\n00:10:15.509 --> 00:10:16.880\nAnd cloudwatch:ListMetrics.\n\n206\n00:10:16.880 --> 00:10:19.979\nAgain, same thing, we need to be able\nto see the metrics to write to them.\n\n207\n00:10:19.979 --> 00:10:23.218\nAnd then we've got\ncloudwatch:PutMetricsData.\n\n208\n00:10:23.218 --> 00:10:26.820\nThat's what's gonna let us write\nour data to the custom metrics.\n\n209\n00:10:26.820 --> 00:10:28.560\nWe've gotta have that too.\n\n210\n00:10:28.560 --> 00:10:31.304\nBut then the one that,\none I always forget, is down here.\n\n211\n00:10:31.304 --> 00:10:34.902\nWe actually have to have\nec2:DescribeTags turned on.\n\n212\n00:10:34.902 --> 00:10:38.594\nAnd the reason is when we write the\nmetric, we also need to write our instance\n\n213\n00:10:38.594 --> 00:10:42.360\nname, and we need to be able to query\nthe name, and the name is stored as a tag.\n\n214\n00:10:42.360 --> 00:10:45.410\nOtherwise we don't know our name to write\nit, and now you've got metric data, and\n\n215\n00:10:45.410 --> 00:10:46.990\nyou don't know what instance it's tied to.\n\n216\n00:10:46.990 --> 00:10:48.440\nAnd so that's kind of a problem.\n\n217\n00:10:48.440 --> 00:10:50.750\nSo those are the four things that we need.\n\n218\n00:10:50.750 --> 00:10:54.321\nAnd this is a full security policy\nright here that would let it do it,\n\n219\n00:10:54.321 --> 00:10:57.015\nbut I'm going to just kinda\ngenerate one on my own,\n\n220\n00:10:57.015 --> 00:10:59.039\nlike you guys would in real life land.\n\n221\n00:10:59.039 --> 00:11:01.384\nSo I'll just go to the Policy Generator.\n\n222\n00:11:01.384 --> 00:11:06.428\nAnd in the policy generator, the first\nthing I'm gonna do is I'm going to allow,\n\n223\n00:11:06.428 --> 00:11:10.593\nand I need to allow an EC2 permission,\nso I'm gonna come in here and\n\n224\n00:11:10.593 --> 00:11:11.780\nfind Amazon EC2.\n\n225\n00:11:11.780 --> 00:11:16.970\nAnd I'm gonna find that DescribeTags,\nright?\n\n226\n00:11:16.970 --> 00:11:21.490\nSo it was buried in here,\nit's alphabetized, so\n\n227\n00:11:21.490 --> 00:11:22.410\nI should be able to find it.\n\n228\n00:11:22.410 --> 00:11:23.744\nDescribeTags.\n\n229\n00:11:23.744 --> 00:11:26.433\n>> Don,\nis there a list of descriptions for\n\n230\n00:11:26.433 --> 00:11:29.687\neach one of these different\nactions we can take?\n\n231\n00:11:29.687 --> 00:11:33.067\n>> Boy, there is in the EC2 documentation.\n\n232\n00:11:33.067 --> 00:11:34.946\nThey have all of these\ndifferent permissions.\n\n233\n00:11:34.946 --> 00:11:37.360\nActually, in the IAM documentation,\nyou'll find even more.\n\n234\n00:11:37.360 --> 00:11:39.427\nBut it's usually spread\nout across the services.\n\n235\n00:11:39.427 --> 00:11:41.622\nSo for the EC2 tags,\nI have to go look there.\n\n236\n00:11:41.622 --> 00:11:43.107\nFor the CloudWatch side,\nI have to go look there.\n\n237\n00:11:43.107 --> 00:11:44.477\nSo it's kind of spread out.\n\n238\n00:11:44.477 --> 00:11:46.184\nYou just end up having to\nsearch the documentation.\n\n239\n00:11:46.184 --> 00:11:47.425\nIt is kind of challenging.\n\n240\n00:11:47.425 --> 00:11:49.670\nAll right, so I'm gonna add this one.\n\n241\n00:11:49.670 --> 00:11:52.870\nAnd for the ARN, the resource name,\nI'm just gonna put a star.\n\n242\n00:11:52.870 --> 00:11:56.760\nAnd the reason is, I'm gonna use this\npolicy for more than one instance.\n\n243\n00:11:56.760 --> 00:11:58.850\nSo I don't want to tie it to one instance.\n\n244\n00:11:58.850 --> 00:12:01.780\nIf I did, I'd have to write\na separate policy for every\n\n245\n00:12:01.780 --> 00:12:04.960\ninstance that we were gonna work with and\nI'd get pretty tired of that pretty quick.\n\n246\n00:12:04.960 --> 00:12:06.790\nSo I'm just gonna do\na star to add that one.\n\n247\n00:12:06.790 --> 00:12:10.280\nAll right, so that's my first permission,\nec2DescribeTags.\n\n248\n00:12:10.280 --> 00:12:14.380\nThe other three were all part of\nCloudWatch and so up here under\n\n249\n00:12:14.380 --> 00:12:20.010\nAWS Service, I can come in here and\nI can find CloudWatch, right here.\n\n250\n00:12:20.010 --> 00:12:22.420\nAnd I can grant the three\npermissions that I need.\n\n251\n00:12:22.420 --> 00:12:25.055\nAnd the three that we need are,\nPutMetricData.\n\n252\n00:12:26.580 --> 00:12:31.090\nWe needed GetMetricStatistics,\nand we needed ListMetrics.\n\n253\n00:12:31.090 --> 00:12:32.060\nThose three right there.\n\n254\n00:12:32.060 --> 00:12:34.110\nSo I can check them all at once,\nwhich is kinda nice.\n\n255\n00:12:34.110 --> 00:12:36.660\nThey ARN defaults to asterisk on this one.\n\n256\n00:12:36.660 --> 00:12:37.940\nAnd I'll add that statement.\n\n257\n00:12:37.940 --> 00:12:41.040\nAnd so\nnow if I look at the bottom of my screen,\n\n258\n00:12:41.040 --> 00:12:45.420\nthere's the four metrics you saw in\nthe scripted policy that I wrote.\n\n259\n00:12:45.420 --> 00:12:47.430\nWell, here is the same thing.\n\n260\n00:12:47.430 --> 00:12:51.940\nAnd if I go to my next step,\nit's gonna generate that policy, and\n\n261\n00:12:51.940 --> 00:12:52.760\nI can see it right here.\n\n262\n00:12:52.760 --> 00:12:56.600\nAnd this, this should be exactly what I\nhad in that text window a moment ago,\n\n263\n00:12:56.600 --> 00:12:58.930\ncuz it's doing the exact same thing.\n\n264\n00:12:58.930 --> 00:13:01.480\nThe Statement unique IDs\nmight be different, but\n\n265\n00:13:01.480 --> 00:13:03.369\neverything else should be the same.\n\n266\n00:13:03.369 --> 00:13:09.267\nAnd I can give it a name, which I\ncalled mine ITprotv-demo-cw-writer.\n\n267\n00:13:09.267 --> 00:13:10.740\nThat was the role.\n\n268\n00:13:10.740 --> 00:13:12.330\nAnd I'm gonna give\nthe policy the same name.\n\n269\n00:13:12.330 --> 00:13:13.470\nThey don't have to be the same.\n\n270\n00:13:13.470 --> 00:13:15.580\nThis is something I like to\ndo to keep things straight.\n\n271\n00:13:15.580 --> 00:13:17.660\nThis is the policy that\ngoes with that role.\n\n272\n00:13:17.660 --> 00:13:19.760\nAnd now I can kind of\nremember what the heck it is.\n\n273\n00:13:19.760 --> 00:13:24.570\nSo, I'll give it that same name,\nand I'll create that policy, right?\n\n274\n00:13:24.570 --> 00:13:25.860\nNow I can go back to my role.\n\n275\n00:13:26.940 --> 00:13:30.890\nAnd we made that role\nthe itprotv-demo-cw-writer.\n\n276\n00:13:30.890 --> 00:13:33.660\nAnd if I click on that I\ncan attach a policy to it.\n\n277\n00:13:33.660 --> 00:13:41.350\nAnd so I'm going to attach that custom\npolicy, demo-cw-writer, I'll attach that.\n\n278\n00:13:41.350 --> 00:13:48.060\nAnd now anybody who has this role will be\nallowed to write into CloudWatch, right?\n\n279\n00:13:48.060 --> 00:13:49.690\nAnd I say anybody.\n\n280\n00:13:49.690 --> 00:13:50.760\nWe could assign it to a person.\n\n281\n00:13:50.760 --> 00:13:54.340\nAnd that person would now be allowed\nto push metrics into CloudWatch.\n\n282\n00:13:54.340 --> 00:13:57.830\nBut we're going to assign it to an\ninstance to allow the instance to push its\n\n283\n00:13:57.830 --> 00:13:59.200\nown data into CloudWatch.\n\n284\n00:13:59.200 --> 00:14:00.950\nAnd that's normally what you're gonna do.\n\n285\n00:14:00.950 --> 00:14:02.410\nBut that sets up those permissions.\n\n286\n00:14:02.410 --> 00:14:03.970\nThat's got them ready.\n\n287\n00:14:03.970 --> 00:14:06.660\nAnd well,\nwe're pretty much done with those guys.\n\n288\n00:14:06.660 --> 00:14:08.950\n>> So Don, that's basically\nwhere we're at then right?\n\n289\n00:14:08.950 --> 00:14:13.690\nWe take this and we assign that to our\ninstance and we're off to the races.\n\n290\n00:14:13.690 --> 00:14:15.755\n>> You'd think it would be that easy.\n\n291\n00:14:15.755 --> 00:14:18.090\n>> [LAUGH]\n>> We just created the role.\n\n292\n00:14:18.090 --> 00:14:21.210\nThe role that would give an instance\npermissions to write to CloudWatch.\n\n293\n00:14:21.210 --> 00:14:23.709\nAnd so yes,\nwe need to assign that to our instances.\n\n294\n00:14:24.710 --> 00:14:29.820\nThe problem is there's only one time when\nyou can assign a role to an instance and\n\n295\n00:14:29.820 --> 00:14:31.950\nthat's when you create the instance.\n\n296\n00:14:31.950 --> 00:14:37.640\nSo if you've got 50 instances already,\nsorry, we can't attach this role to them.\n\n297\n00:14:37.640 --> 00:14:40.090\nWe can't do it to get them\nto push into CloudWatch.\n\n298\n00:14:40.090 --> 00:14:44.130\nInstead what we would have to do\nis reprovision those instances.\n\n299\n00:14:44.130 --> 00:14:48.440\nSo, you can make an AMI out of your\ninstances and then redeploy the AMI and\n\n300\n00:14:48.440 --> 00:14:49.630\nattach the role to it then.\n\n301\n00:14:49.630 --> 00:14:51.910\nThat's how you would do it\nto an existing instance.\n\n302\n00:14:51.910 --> 00:14:55.190\nOr if you're creating a new one, you\ncan apply it when you create a new one.\n\n303\n00:14:55.190 --> 00:14:56.180\nLet me show you what I mean.\n\n304\n00:14:56.180 --> 00:15:00.650\nIf I jump into EC2,\nI'm gonna spin up a new instance, so\n\n305\n00:15:00.650 --> 00:15:04.250\nI'll go here into my instances, and\nI'm gonna launch a new instance.\n\n306\n00:15:05.700 --> 00:15:08.770\nAnd let's say that I'll\njust launch a Linux AMI, so\n\n307\n00:15:08.770 --> 00:15:10.720\njust your standard Amazon Linux.\n\n308\n00:15:10.720 --> 00:15:14.108\nAnd I'll do a t2 micro,\nit doesn't have to be anything special.\n\n309\n00:15:14.108 --> 00:15:18.808\nAnd when I get into Instance Details,\nnotice right here I have my IAM role and\n\n310\n00:15:18.808 --> 00:15:22.699\nI can specify what role it's gonna\nhave and I can drop it down and\n\n311\n00:15:22.699 --> 00:15:25.579\nthere's that itprotv-demo-cw-writer.\n\n312\n00:15:25.579 --> 00:15:28.654\nSo I can choose that and\nnow it's got the writer permissions and\n\n313\n00:15:28.654 --> 00:15:31.810\nit's going to be allowed to write\ninto CloudWatch, all right?\n\n314\n00:15:31.810 --> 00:15:35.150\nSo I've got that nice little\noption here that I can check and\n\n315\n00:15:35.150 --> 00:15:37.690\nthen we can move forward,\nchoose anything else that we want to do.\n\n316\n00:15:37.690 --> 00:15:42.050\nI'll give this one a name of,\nmaybe this will be web02.\n\n317\n00:15:42.050 --> 00:15:45.580\n>> So this is what we do to make sure that\nthe instance can write into CloudWatch.\n\n318\n00:15:45.580 --> 00:15:46.610\n>> That's correct, yep.\n\n319\n00:15:46.610 --> 00:15:49.340\nAnd that's the important part, right, we\nneed it to be able to write to CloudWatch,\n\n320\n00:15:49.340 --> 00:15:50.380\notherwise it's not gonna have access.\n\n321\n00:15:50.380 --> 00:15:55.438\nBy default, instances are not allowed to\nwrite to CloudWatch, that's the default.\n\n322\n00:15:55.438 --> 00:16:00.558\nSo any of my existing instances,\nthey aren't gonna be able to write there.\n\n323\n00:16:00.558 --> 00:16:02.092\nAll right, so here we go.\n\n324\n00:16:02.092 --> 00:16:06.207\nI'm just going to launch that instance and\nI'll pick a key that I've already got.\n\n325\n00:16:06.207 --> 00:16:07.039\nAnd then get that in place.\n\n326\n00:16:07.039 --> 00:16:08.044\nAll right.\n\n327\n00:16:08.044 --> 00:16:10.127\nWhat if I already had an instance though?\n\n328\n00:16:10.127 --> 00:16:10.765\nRight.\n\n329\n00:16:10.765 --> 00:16:15.680\nSo if I go back to my instances,\nI already had an instance, itprotv-web01.\n\n330\n00:16:15.680 --> 00:16:18.940\nOkay.\nWhat if I want to change its role?\n\n331\n00:16:18.940 --> 00:16:22.980\nWell, if you go up here to actions, you'll\nnotice there's instance settings and\n\n332\n00:16:22.980 --> 00:16:25.240\nthere's nothing in here that\nindicates I could change the role.\n\n333\n00:16:25.240 --> 00:16:27.930\nI can add tags,\nI can change my scaling group.\n\n334\n00:16:27.930 --> 00:16:29.878\nChange my Termination Protection,\n\n335\n00:16:29.878 --> 00:16:34.050\nView/Change User Data, nothing in\nhere about changing my IAM role.\n\n336\n00:16:34.050 --> 00:16:36.030\nAnd if I go to Image,\n\n337\n00:16:36.030 --> 00:16:40.400\nNetworking, CloudWatch Monitoring,\nnone of them have the ability to do that.\n\n338\n00:16:40.400 --> 00:16:42.930\nI can turn on Detailed Monitoring\nif I want, right?\n\n339\n00:16:42.930 --> 00:16:46.380\nSo maybe I'll enable that for\nthis instance, and that's exciting, right?\n\n340\n00:16:46.380 --> 00:16:48.000\nSo now I've got that up and going, but\n\n341\n00:16:48.000 --> 00:16:52.470\notherwise I can't really\ntweak what that's doing.\n\n342\n00:16:52.470 --> 00:16:55.030\nThe IAM role is assigned when\nyou create the instance.\n\n343\n00:16:55.030 --> 00:17:00.440\nSo if I want to change that role, I'd have\nto take an image of this, so build an AMI.\n\n344\n00:17:00.440 --> 00:17:02.470\nYou could actually do a snapshot\nif you really wanted to.\n\n345\n00:17:02.470 --> 00:17:03.580\nBut an AMI's better.\n\n346\n00:17:03.580 --> 00:17:06.520\nAnd then once you've got that,\ndelete this instance.\n\n347\n00:17:06.520 --> 00:17:10.500\nReprovision it from the AMI and\nat that point, attach the IAM role to it.\n\n348\n00:17:10.500 --> 00:17:13.640\nSo just a couple of extra steps\ninvolved in getting that done.\n\n349\n00:17:13.640 --> 00:17:17.650\nAnd that's true even if you go here,\nlike if I go into the IAM screen, and\n\n350\n00:17:17.650 --> 00:17:20.000\nI go into that role, right?\n\n351\n00:17:20.000 --> 00:17:20.640\nYou can take a role.\n\n352\n00:17:20.640 --> 00:17:22.780\nHere's my IT Pro TV demo writer.\n\n353\n00:17:22.780 --> 00:17:26.540\nAnd I can attach policies but\nsee how I can't attach people to it,\n\n354\n00:17:26.540 --> 00:17:30.050\nright, and if I go to users,\nI can attach users to it.\n\n355\n00:17:30.050 --> 00:17:34.740\nSo if I take myself and\nhere's my various groups that I'm in and\n\n356\n00:17:34.740 --> 00:17:39.750\nif I go to my groups I can take a group\nand I can add a role to the group, but\n\n357\n00:17:39.750 --> 00:17:43.570\nthe problem is I can't add\nan instance to a group.\n\n358\n00:17:43.570 --> 00:17:46.600\nAnd so if I take like a just\none of these guys here,\n\n359\n00:17:46.600 --> 00:17:50.830\nyou'll see the users that are inside of\nit and I've got the add users option.\n\n360\n00:17:50.830 --> 00:17:52.690\nThere's no add an instance option.\n\n361\n00:17:52.690 --> 00:17:54.260\nIt's just done at creation and that's it.\n\n362\n00:17:55.310 --> 00:17:56.910\nAll right, but once I'm in there,\n\n363\n00:17:56.910 --> 00:18:01.070\nonce I've got that IAM role, the machine\nis now allowed to write to cloud watch and\n\n364\n00:18:01.070 --> 00:18:03.280\nso it'll be able to push\nits details out there.\n\n365\n00:18:03.280 --> 00:18:05.240\nAnd we'll start getting some\nnew CloudWatch metrics.\n\n366\n00:18:06.708 --> 00:18:11.490\nAll right now, at this point we're set\nup to write, we actually need to write.\n\n367\n00:18:11.490 --> 00:18:15.480\nAnd I said that Amazon has published\nscripts that let us do it for\n\n368\n00:18:15.480 --> 00:18:16.290\nLinux, right.\n\n369\n00:18:16.290 --> 00:18:18.720\nSo you can use those and they work great.\n\n370\n00:18:18.720 --> 00:18:20.390\nOn the Windows side you're going\nto have to write your own.\n\n371\n00:18:20.390 --> 00:18:23.410\nAnd if you do a Google search, there's\na ton of people that are doing them out\n\n372\n00:18:23.410 --> 00:18:26.182\nthere for\nWMI queries to then push up to EC2.\n\n373\n00:18:26.182 --> 00:18:30.740\nI'm gonna jump back to my\ninstances real quick and\n\n374\n00:18:30.740 --> 00:18:32.670\nI'm just gonna enable detailed monitoring.\n\n375\n00:18:32.670 --> 00:18:37.050\nYou don't have to have detailed\nmonitoring enabled to use custom metrics.\n\n376\n00:18:37.050 --> 00:18:40.160\nThe custom measures will push you\ninto the paid tier automatically.\n\n377\n00:18:40.160 --> 00:18:41.060\nI mean, that's just gonna happen.\n\n378\n00:18:41.060 --> 00:18:44.210\nSo you might as well turn on the detailed\nmetrics and get all the benefits.\n\n379\n00:18:44.210 --> 00:18:47.110\nBut I turned on detailed metrics for\nthis bottom one for\n\n380\n00:18:47.110 --> 00:18:49.250\nmy instance that I just spun up.\n\n381\n00:18:49.250 --> 00:18:50.610\nI can't remember if I turned it on or not.\n\n382\n00:18:50.610 --> 00:18:53.130\nI think I didn't, so\nI'm just gonna enable that.\n\n383\n00:18:54.400 --> 00:18:57.379\nThere we go and we'll give that a moment.\n\n384\n00:18:57.379 --> 00:19:01.385\nOver here under monitoring see how I've\ngot that monitoring is enabled on these\n\n385\n00:19:01.385 --> 00:19:04.630\nand so it's telling me I've got\nmy detailed monitor turned on.\n\n386\n00:19:04.630 --> 00:19:07.560\nAll right, once I have that machine up and\nready to go,\n\n387\n00:19:07.560 --> 00:19:11.260\nthen I can start getting it configured for\nreporting in to EC2.\n\n388\n00:19:11.260 --> 00:19:12.920\nNow, it's initializing.\n\n389\n00:19:12.920 --> 00:19:16.170\nLet's see if I can get into it even\nthough it's still initializing.\n\n390\n00:19:16.170 --> 00:19:21.210\nI'm gonna SSH into that system and\n\n391\n00:19:21.210 --> 00:19:26.257\nlet's just do a quick connection\n\n392\n00:19:26.257 --> 00:19:33.530\nhere and I gotta remember my username.\n\n393\n00:19:33.530 --> 00:19:41.150\nEC2 user at that name, and\nthere we go, so I'm in.\n\n394\n00:19:41.150 --> 00:19:45.250\nSo here's this brand new Linux instance\nthat I just spun up a minute ago, and\n\n395\n00:19:45.250 --> 00:19:48.840\nit's just sitting here being happy\nlike Linux instances tend to do.\n\n396\n00:19:48.840 --> 00:19:49.560\nAll right.\n\n397\n00:19:49.560 --> 00:19:53.400\nAnd I need to get this configured\nto report into CloudWatch.\n\n398\n00:19:53.400 --> 00:19:55.230\nSo, fortunately the process is not so\n\n399\n00:19:55.230 --> 00:19:57.890\nbad on Linux cuz Amazon gives\nus the scripts to do it.\n\n400\n00:19:57.890 --> 00:20:00.550\nThe first thing we need to do is we\nneed to set up some prerequisites.\n\n401\n00:20:00.550 --> 00:20:03.680\nI always recommend that the first thing,\njust right off the bat,\n\n402\n00:20:03.680 --> 00:20:05.480\nyou do any updates the machine has, right.\n\n403\n00:20:05.480 --> 00:20:09.700\nSee how it's telling me up here that\nI've got 27 updates available, and\n\n404\n00:20:09.700 --> 00:20:13.780\nthat 11 packages are needed for security,\nso I probably need to update this system.\n\n405\n00:20:13.780 --> 00:20:18.400\nSo I would do a sudo yum update -y,\ngo ahead and\n\n406\n00:20:18.400 --> 00:20:19.620\njust get it to apply those 27 updates.\n\n407\n00:20:19.620 --> 00:20:22.090\nSo it'll churn through and\ndo those pretty quick.\n\n408\n00:20:22.090 --> 00:20:24.740\nRemember these updates are coming\nfrom Amazon's server, so\n\n409\n00:20:24.740 --> 00:20:26.320\nit's not reaching out to the Internet for\nthese.\n\n410\n00:20:26.320 --> 00:20:27.750\nThe updates happen pretty quick.\n\n411\n00:20:27.750 --> 00:20:31.050\nNo excuses for not updating a new machine.\n\n412\n00:20:31.050 --> 00:20:34.600\nOnce that's updated, there's a few\nprerequisites that I need to add.\n\n413\n00:20:34.600 --> 00:20:40.110\nNot much, mostly it's time handling for\nthe time stamp to be properly set.\n\n414\n00:20:40.110 --> 00:20:42.190\nWhen you're sending logs\nup into CloudWatch,\n\n415\n00:20:42.190 --> 00:20:46.080\nthe time stamp is really important so\nthat it knows when it actually happens.\n\n416\n00:20:46.080 --> 00:20:49.412\nWe've got to have our time synchronized\nbetween this instance and CloudWatch and\n\n417\n00:20:49.412 --> 00:20:51.350\nso that's part of what\nthe prerequisites are.\n\n418\n00:20:51.350 --> 00:20:54.680\nWe also have to have a little\nPerl software to support it,\n\n419\n00:20:54.680 --> 00:20:57.090\nbecause it is Perl that it's using for\nits scripting.\n\n420\n00:20:57.090 --> 00:20:57.650\nAll right.\n\n421\n00:20:57.650 --> 00:20:59.780\nSo it's cleaning up right there and\nas soon as it's done.\n\n422\n00:20:59.780 --> 00:21:00.310\nThere we go.\n\n423\n00:21:00.310 --> 00:21:02.000\nNow I can do my prerequisites.\n\n424\n00:21:02.000 --> 00:21:05.520\nSo I'm going to do a sudo yum install and\nthe stuff I need to install.\n\n425\n00:21:05.520 --> 00:21:07.837\nI need to install Perl-DateTime.\n\n426\n00:21:07.837 --> 00:21:12.398\nI need to install perl-Sys-Syslog,\nwhich is going to allow the Perl\n\n427\n00:21:12.398 --> 00:21:17.128\nscripting language to be able to access\nthe syslog, I kind of need that.\n\n428\n00:21:17.128 --> 00:21:22.538\nI will do perl-LWP-Protocol-https because\n\n429\n00:21:22.538 --> 00:21:27.410\nit's gonna be doing SSL posting, right?\n\n430\n00:21:27.410 --> 00:21:30.660\nWhen it posts up into CloudWatch,\nit's gonna be doing this encrypted.\n\n431\n00:21:30.660 --> 00:21:32.780\nIt doesn't go out on the Internet,\nit's all kinda private,\n\n432\n00:21:32.780 --> 00:21:35.260\nbut Amazon still encrypts\nit to be on the safe side.\n\n433\n00:21:35.260 --> 00:21:36.534\nSo I'm just gonna add those real quick.\n\n434\n00:21:37.535 --> 00:21:40.395\nAnd you'll see where I just\nadded three packages, but\n\n435\n00:21:40.395 --> 00:21:45.145\nit's actually installing 46 packages\nbecause of dependencies and all of that.\n\n436\n00:21:45.145 --> 00:21:47.825\nBut now I've got everything that we\nneed to be able to write to CloudWatch,\n\n437\n00:21:47.825 --> 00:21:48.965\nI just need to get it set up.\n\n438\n00:21:48.965 --> 00:21:52.235\nAnd to get that set up, I'm gonna\nneed some scripts from Amazon, so\n\n439\n00:21:52.235 --> 00:21:56.525\nI'm gonna download those real quick and\nso I'll just use wget to pull those.\n\n440\n00:21:56.525 --> 00:22:03.786\nSo I'm gonna pull from\naws-cloudwatch.s3.amazonaws.com/downloads-\n\n441\n00:22:03.786 --> 00:22:08.441\n/CloudWatchmonitoring, if\nI spell this right\n\n442\n00:22:08.441 --> 00:22:13.451\nit'll work the best, scripts-1.2.1.zip,\n\n443\n00:22:13.451 --> 00:22:19.110\nwhich as of this very moment\nthat's the most recent one.\n\n444\n00:22:19.110 --> 00:22:22.870\nWhen you're watching this episode there\nmight be newer versions of the script that\n\n445\n00:22:22.870 --> 00:22:24.220\nare out there so be sure to check that.\n\n446\n00:22:24.220 --> 00:22:27.260\nJust do a Google search for CloudWatch\nmonitoring scripts and they'll turn up,\n\n447\n00:22:27.260 --> 00:22:28.670\nyou'll find the Linux ones.\n\n448\n00:22:28.670 --> 00:22:31.080\nAnd you'll find a lot of posts for\npeople asking for them for Windows,\n\n449\n00:22:31.080 --> 00:22:34.130\nwhich they don't make so\ndon't waste your time searching for those.\n\n450\n00:22:34.130 --> 00:22:35.280\nAll right, so\nI'm just gonna download that and\n\n451\n00:22:35.280 --> 00:22:38.410\nthat's gonna give me the script files\nthat I need and I can just unzip those.\n\n452\n00:22:38.410 --> 00:22:41.963\nI'm in my root directory here,\nmy user account's root directory,\n\n453\n00:22:41.963 --> 00:22:44.860\nthe home directory, and so\nI'm just gonna unzip that.\n\n454\n00:22:47.110 --> 00:22:47.970\nAnd so that'll unzip.\n\n455\n00:22:47.970 --> 00:22:52.000\nAnd see how it's gonna create for\nme a little AWS scripts-mon folder.\n\n456\n00:22:52.000 --> 00:22:54.106\nYou can leave it in that folder or\nyou can move it somewhere else,\n\n457\n00:22:54.106 --> 00:22:55.046\nthat's entirely up to you.\n\n458\n00:22:55.046 --> 00:22:57.825\nIt doesn't really matter where\nthey sit as long as your user\n\n459\n00:22:57.825 --> 00:22:59.170\naccount has access to them.\n\n460\n00:22:59.170 --> 00:23:03.403\nAll right, once that's unzipped,\nwe can get rid of the original zip file,\n\n461\n00:23:03.403 --> 00:23:05.650\nwe don't need that one anymore.\n\n462\n00:23:05.650 --> 00:23:07.360\nAnd I can change into that directory,\n\n463\n00:23:07.360 --> 00:23:10.230\nand that's where I'm gonna\nsee the scripts they gave me.\n\n464\n00:23:10.230 --> 00:23:13.160\nAnd the ones that I care about\nare just these two little pl files,\n\n465\n00:23:13.160 --> 00:23:14.350\nthey're Perl scripts.\n\n466\n00:23:14.350 --> 00:23:20.060\nI've got one that's mon-put-instance-data,\nand one that's mon-get-instance-data.\n\n467\n00:23:20.060 --> 00:23:25.420\nSo one script takes data from Linux and\npushes it into CloudWatch and\n\n468\n00:23:25.420 --> 00:23:28.700\nthe other script gets data from\nCloudWatch and displays it to us.\n\n469\n00:23:28.700 --> 00:23:30.670\nNow we're not normally\ngonna use the get script.\n\n470\n00:23:30.670 --> 00:23:33.740\nI don't think I've ever actually used it\nin production because once I'm pushing\n\n471\n00:23:33.740 --> 00:23:36.750\ndata to CloudWatch, if I want to get\nit back I can just go to CloudWatch,\n\n472\n00:23:36.750 --> 00:23:41.340\nI don't go into one of my instances to get\nit so we don't necessarily need that one.\n\n473\n00:23:41.340 --> 00:23:44.090\nBut what we do need is\nthis guy right here.\n\n474\n00:23:44.090 --> 00:23:45.550\nThat's the important one.\n\n475\n00:23:45.550 --> 00:23:47.630\nAll the other files I don't really need.\n\n476\n00:23:47.630 --> 00:23:51.020\nNotice that I've got\nthis AWScreds.template.\n\n477\n00:23:51.020 --> 00:23:53.840\nIf I didn't go through that whole\nprocess of creating a role and\n\n478\n00:23:53.840 --> 00:23:57.521\nassigning positions, I could actually\njust put my AWS credentials right there.\n\n479\n00:23:57.521 --> 00:24:00.053\nMy private key and my private secret,\nI could stick them in there and\n\n480\n00:24:00.053 --> 00:24:02.310\nthen it would be able\nto access it that way.\n\n481\n00:24:02.310 --> 00:24:05.060\nBut what happens if somebody\nbreaks into the instance?\n\n482\n00:24:05.060 --> 00:24:07.993\nNow they got my private key and\nthat's not good, right?\n\n483\n00:24:07.993 --> 00:24:09.068\nSo, I don't like to do that so\n\n484\n00:24:09.068 --> 00:24:11.266\nthat's why we set up the role\nin the first place, all right?\n\n485\n00:24:11.266 --> 00:24:15.498\nYou do need this AWS signature though,\nthat's how it's gonna validate when it\n\n486\n00:24:15.498 --> 00:24:19.416\nconnects to CloudWatch that it's\nactually connecting to CloudWatch and\n\n487\n00:24:19.416 --> 00:24:21.265\nnot some man in the middle attack.\n\n488\n00:24:21.265 --> 00:24:26.061\nBut now I can use that\nmon-put-instancedata.pl script,\n\n489\n00:24:26.061 --> 00:24:30.850\nI can use that to push data into AWS,\ninto a CloudWatch.\n\n490\n00:24:30.850 --> 00:24:35.330\nAnd so when I run it, it's got a lot of\nlittle modifiers that we can do on it, but\n\n491\n00:24:35.330 --> 00:24:37.340\nif I wanna push memory utilization and\n\n492\n00:24:37.340 --> 00:24:39.780\ndisk utilization two things that\nAmazon doesn't have, right?\n\n493\n00:24:39.780 --> 00:24:41.830\nOr they don't have in\ncloud watch by default.\n\n494\n00:24:41.830 --> 00:24:47.710\nI can push it by saying --menuTill for\nmemory utilization.\n\n495\n00:24:47.710 --> 00:24:53.670\nAnd I can say --disk space util for\nmy disk space utilization.\n\n496\n00:24:53.670 --> 00:24:55.600\nAnd I need to tell it what\ndisk to monitor, right?\n\n497\n00:24:55.600 --> 00:24:57.965\nSo I'm gonna say dash dash disk-path,\n\n498\n00:24:57.965 --> 00:25:03.159\nand I'm just gonna monitor the root,\nright, so I'll just do =/.\n\n499\n00:25:03.159 --> 00:25:06.905\nYou could specify whatever\nmounted drives you wanted there.\n\n500\n00:25:06.905 --> 00:25:08.395\nAnd then I'm gonna come in and say that,\n\n501\n00:25:08.395 --> 00:25:11.515\nactually that should\nbe enough right there.\n\n502\n00:25:11.515 --> 00:25:12.385\nSo, when I reach out for\n\n503\n00:25:12.385 --> 00:25:15.495\nthat, I'm just gonna do a quick\ntest to see if it fails, right?\n\n504\n00:25:15.495 --> 00:25:18.305\nIf I push my metrics up there and\nit fails, then I know I've got a problem.\n\n505\n00:25:18.305 --> 00:25:21.650\nBut in this case, it pushed them see how\nit says successfully reported metrics to\n\n506\n00:25:21.650 --> 00:25:22.640\ncloud watch.\n\n507\n00:25:22.640 --> 00:25:25.310\nHere's my reference id if I\nneed to track the transaction.\n\n508\n00:25:25.310 --> 00:25:28.730\nAt this point I've successfully\npushed my memory utilization and\n\n509\n00:25:28.730 --> 00:25:30.590\nmy disk utilization right into CloudWatch.\n\n510\n00:25:30.590 --> 00:25:34.860\n>> So now we can just jump over to\nCloudWatch and check out these statistics?\n\n511\n00:25:34.860 --> 00:25:35.760\n>> Yeah, absolutely.\n\n512\n00:25:35.760 --> 00:25:40.370\nNow there is one more step with I like to\ndo here which is I pushed my stats But\n\n513\n00:25:40.370 --> 00:25:41.460\nI've only done it once.\n\n514\n00:25:41.460 --> 00:25:43.960\nWe kind of like to have that\nhappen more often, right?\n\n515\n00:25:43.960 --> 00:25:47.690\nSo if I'm doing detailed monitoring,\nI wanna push this stuff once a minute.\n\n516\n00:25:47.690 --> 00:25:49.460\nIf I'm doing regular\nmonitoring every five minutes,\n\n517\n00:25:49.460 --> 00:25:52.210\nit's up to you what the interval is but\nI want this to continue running.\n\n518\n00:25:52.210 --> 00:25:55.040\nAnd so\nlet me just whip up a quick crom job that\n\n519\n00:25:55.040 --> 00:25:57.670\nwill run this in the background over and\nover and over again, right?\n\n520\n00:25:57.670 --> 00:26:00.910\nSo I'm gonna just copy\nthat command that we ran.\n\n521\n00:26:02.010 --> 00:26:07.020\nSo that I've got it, and then I'm gonna\nrun crontab-e to edit my cron table,\n\n522\n00:26:07.020 --> 00:26:09.010\nand this will let me schedule a job.\n\n523\n00:26:09.010 --> 00:26:11.700\nAnd so I can put in here how\noften I want this to run,\n\n524\n00:26:11.700 --> 00:26:15.790\nand I'm gonna say that I want it to run,\nI'm gonna do once a minute.\n\n525\n00:26:15.790 --> 00:26:19.990\nSo I'll just do */1 which is gonna\ntell it to run once a minute.\n\n526\n00:26:19.990 --> 00:26:23.290\nAnd then you have day, month, hour, right?\n\n527\n00:26:23.290 --> 00:26:23.930\nAnd all those other ones.\n\n528\n00:26:23.930 --> 00:26:25.940\nI'm just going to put all stars in for\nthat, right?\n\n529\n00:26:25.940 --> 00:26:30.090\nSo star slash one is run at once\na minute and then the rest of it.\n\n530\n00:26:30.090 --> 00:26:33.970\nAnd then, I'm gonna tell it what to\nrun and so I'm gonna run that script.\n\n531\n00:26:33.970 --> 00:26:36.400\nI'm putting a tilt slash cuz\nit's in my home directory, and\n\n532\n00:26:36.400 --> 00:26:39.680\nthen after that you've got\nput-instance and all of that.\n\n533\n00:26:39.680 --> 00:26:46.770\nAnd I'm gonna add one more little entry\nhere at the end, which is --from-cron.\n\n534\n00:26:46.770 --> 00:26:50.220\nAnd that way there'll be a little tag on\nthis data in CloudWatch that'll let it\n\n535\n00:26:50.220 --> 00:26:53.770\nknow that this is an automated one,\nversus a manual one that we ran.\n\n536\n00:26:53.770 --> 00:26:55.210\nCuz you can actually search and\nfilter on that,\n\n537\n00:26:55.210 --> 00:26:57.910\nlike show me manual runs versus automatic.\n\n538\n00:26:57.910 --> 00:26:59.460\nAnd so\nI'm just gonna add that little note.\n\n539\n00:26:59.460 --> 00:27:01.880\nWe don't technically have to have it,\nbut I'm gonna add it.\n\n540\n00:27:02.952 --> 00:27:07.450\nAll right, so I'm going to save that, and\nnow once a minute that's going to run, and\n\n541\n00:27:07.450 --> 00:27:09.750\nnow I'm going to start pushing\nmy data more routinely.\n\n542\n00:27:09.750 --> 00:27:11.790\nAnd at this point I'm\nready to view the data.\n\n543\n00:27:11.790 --> 00:27:14.770\nAnd like Daniel said, we can just jump\nright into CloudWatch and we can see it,\n\n544\n00:27:14.770 --> 00:27:18.980\nand I know we did that in another episode,\nbut we looked at built-in metrics.\n\n545\n00:27:18.980 --> 00:27:20.290\nLet's go find our custom ones.\n\n546\n00:27:20.290 --> 00:27:23.390\nNow, I set up this other virtual\nmachine before the show so\n\n547\n00:27:23.390 --> 00:27:25.380\nI would have some good data\nthat was already sitting.\n\n548\n00:27:25.380 --> 00:27:27.140\nThat machine's been up for\nat least an hour.\n\n549\n00:27:27.140 --> 00:27:29.480\nSo it should have some good\ndata already sitting in there.\n\n550\n00:27:29.480 --> 00:27:33.930\nIf I jump to my console,\nand I go to CloudWatch,\n\n551\n00:27:33.930 --> 00:27:37.630\nwhen you go into CloudWatch it\nhighlights all of their metrics right?\n\n552\n00:27:37.630 --> 00:27:41.900\nSo if I go to CloudWatch and Metrics,\nI'll see Billing Metrics and\n\n553\n00:27:41.900 --> 00:27:43.450\nEBS Metrics, and so on, right?\n\n554\n00:27:43.450 --> 00:27:46.780\nThose are the ones that\nAmazon tracks really for\n\n555\n00:27:46.780 --> 00:27:52.570\nbilling purposes but notice I've got\nthis one over here Linux system metrics.\n\n556\n00:27:52.570 --> 00:27:53.960\nWhat's that all about?\n\n557\n00:27:53.960 --> 00:27:57.840\nWell, those are my custom metrics\nthat are coming in from Linux and\n\n558\n00:27:57.840 --> 00:27:59.890\nif I had a Windows ones,\nit would say Windows metrics,\n\n559\n00:27:59.890 --> 00:28:02.140\nsince it's actually identifying\nthat operating system.\n\n560\n00:28:02.140 --> 00:28:05.360\nAnd over on the left side\nhere if I go over to EC2.\n\n561\n00:28:05.360 --> 00:28:09.640\nI'm gonna see my EC2 metrics in here and\nas I scroll down and\n\n562\n00:28:09.640 --> 00:28:15.020\nstart to look at some of these,\nyou'll see network, disk, CPU, right?\n\n563\n00:28:15.020 --> 00:28:19.680\nThese are all the ones that we get from\nAmazon normally, but if I go all the way\n\n564\n00:28:19.680 --> 00:28:24.390\ndown here to Linux system, now I'm gonna\nsee the ones that we've been pushing up.\n\n565\n00:28:24.390 --> 00:28:28.730\nAnd right here I can see my two instances,\nthe one I brought up before the show and\n\n566\n00:28:28.730 --> 00:28:30.630\nthe one that I just brought up.\n\n567\n00:28:30.630 --> 00:28:34.830\nI can see I've got disk utilization and\nmemory utilization for both of them.\n\n568\n00:28:34.830 --> 00:28:38.060\nNow if I look at the one I just brought\nup, it's not gonna have a lot of data.\n\n569\n00:28:38.060 --> 00:28:39.750\nBut if I look at the one\nfrom before the show,\n\n570\n00:28:39.750 --> 00:28:43.760\nI can click on it and\nhere's the disk space utilization for it.\n\n571\n00:28:43.760 --> 00:28:47.620\nAnd I can see when I started\nmonitoring it, it jumped right up and\n\n572\n00:28:47.620 --> 00:28:53.410\nI was sitting at about 17.9% and\nnow that it's been running for an hour\n\n573\n00:28:53.410 --> 00:28:57.350\nit was 17.9% and it tracked it once\na minute during that whole time, right?\n\n574\n00:28:59.210 --> 00:29:01.560\nAnd if I look at memory utilization.\n\n575\n00:29:03.480 --> 00:29:05.930\nSo if I just,\noops that's not what I wanted.\n\n576\n00:29:05.930 --> 00:29:07.840\nSo if I just go back to\nmy Linux system here and\n\n577\n00:29:07.840 --> 00:29:11.500\nI pick my Is it not gonna\nlet me get out of here?\n\n578\n00:29:11.500 --> 00:29:13.236\nWell here let's just jump\nforward with our good old arrow.\n\n579\n00:29:13.236 --> 00:29:14.757\nApparently I'm trapped.\n\n580\n00:29:14.757 --> 00:29:16.170\n>> [LAUGH]\n>> All right let's go this way.\n\n581\n00:29:16.170 --> 00:29:19.010\nSo if I jump over to\nmy memory utilization,\n\n582\n00:29:19.010 --> 00:29:21.380\nsorry my windows\nare giving me a hard time.\n\n583\n00:29:21.380 --> 00:29:23.120\nIf I jump into my memory utilization,\nhere we go, and\n\n584\n00:29:23.120 --> 00:29:26.970\nyou can see where I booted up and\nstarted running and, oh did I pick Web 02?\n\n585\n00:29:26.970 --> 00:29:30.200\nI bet this was Web 02 that I picked,\nI didn't pay attention.\n\n586\n00:29:30.200 --> 00:29:31.900\nSee how it jumped up suddenly here?\n\n587\n00:29:31.900 --> 00:29:34.740\nSo that means I probably did something\nmaybe I started a web server,\n\n588\n00:29:34.740 --> 00:29:38.090\nmaybe I performed some updates right?\n\n589\n00:29:38.090 --> 00:29:40.040\nI installed pearl instead\nof cloud watch and so\n\n590\n00:29:40.040 --> 00:29:43.830\ni took a little bit of a memory hit for\nthat but I can see the percentage of usage\n\n591\n00:29:43.830 --> 00:29:47.400\nI was at 9.7% memory utilization and\nthen I jumped up to 10.5%.\n\n592\n00:29:47.400 --> 00:29:52.710\nAnd so now I'm tracking memory utilization\nright here in CloudWatch, right?\n\n593\n00:29:52.710 --> 00:29:55.610\nData that Amazon doesn't care about,\ncuz it'll boo you for it, but\n\n594\n00:29:55.610 --> 00:29:57.800\nyou care about it and\nnow you don't see third party software.\n\n595\n00:29:57.800 --> 00:30:01.310\nYou can monitor it all right\nhere from CloudWatch and\n\n596\n00:30:01.310 --> 00:30:03.030\nyour data is all in one place.\n\n597\n00:30:03.030 --> 00:30:04.760\nSo pretty useful thing.\n\n598\n00:30:04.760 --> 00:30:09.220\nAll done with custom metrics,\nyou just have to set it up to do it.\n\n599\n00:30:09.220 --> 00:30:11.740\nAnd the hardest part is remembering\nto set up that IAM role,\n\n600\n00:30:11.740 --> 00:30:15.110\ncuz it has to be done when the instance\nis created otherwise you've got to put\n\n601\n00:30:15.110 --> 00:30:16.490\nyour secret key in your VM.\n\n602\n00:30:16.490 --> 00:30:18.040\nAnd you don't want to do that.\n\n603\n00:30:18.040 --> 00:30:20.920\nI guess you could create a secret key\nthat had really limited permissions\n\n604\n00:30:20.920 --> 00:30:22.560\nthat wouldn't be so bad.\n\n605\n00:30:22.560 --> 00:30:26.250\nBut still I hate putting those\nkeys into a VM, if I can avoid it.\n\n606\n00:30:26.250 --> 00:30:29.560\n>> Yeah, and the real advantage\nof this comes in when you,\n\n607\n00:30:29.560 --> 00:30:32.990\nremember we're doing this on one server,\ntwo servers, technically.\n\n608\n00:30:32.990 --> 00:30:38.100\nBut when you've got 20 servers, you've got\n200 servers, this all of a sudden becomes\n\n609\n00:30:38.100 --> 00:30:41.110\nawesome for you,\nbecause now you just jump into CloudWatch,\n\n610\n00:30:41.110 --> 00:30:44.130\nand you have all your metrics there,\nand you can see what's going on.\n\n611\n00:30:44.130 --> 00:30:46.250\nThere it is, I go to this server,\nI go to that server.\n\n612\n00:30:46.250 --> 00:30:49.250\nI'm not having to bounce from server\nto server or use third party software,\n\n613\n00:30:49.250 --> 00:30:51.340\neven though It's amazing stuff.\n\n614\n00:30:51.340 --> 00:30:54.490\nI can use the one utility I've\nalready been provided to my advantage.\n\n615\n00:30:54.490 --> 00:30:55.290\nAwesome stuff.\nNow is there\n\n616\n00:30:55.290 --> 00:30:56.830\nanything else we need to know about this?\n\n617\n00:30:56.830 --> 00:30:59.700\n>> Just remember that custom measure tool\nwill move you out of the free usage tier\n\n618\n00:30:59.700 --> 00:31:01.440\nfor CloudWatch so you will have to pay.\n\n619\n00:31:01.440 --> 00:31:04.090\nBut, CloudWatch, it's so\nridiculously cheap.\n\n620\n00:31:04.090 --> 00:31:06.940\nIt's something like, I think you get,\n\n621\n00:31:06.940 --> 00:31:11.050\nI don't know, it's a 100,000 data points\nper month for free, or something.\n\n622\n00:31:11.050 --> 00:31:16.210\nSo, if I'm posting once a minute over\nthe course of a day, that's 1,444 minutes.\n\n623\n00:31:16.210 --> 00:31:16.750\nIs that right?\n\n624\n00:31:16.750 --> 00:31:18.920\n>> Is that how many it is?\n\n625\n00:31:18.920 --> 00:31:20.420\n>> 2,880, I don't know,\nsomething like that.\n\n626\n00:31:20.420 --> 00:31:23.510\nBut it would take many servers to\nadd up to what that free limit is.\n\n627\n00:31:23.510 --> 00:31:24.740\nAnd then after that you start paying.\n\n628\n00:31:24.740 --> 00:31:27.870\nAnd it's a fraction of a penny for\neach metric that goes up there.\n\n629\n00:31:27.870 --> 00:31:32.540\nSo in exchange for\na full monitoring system, it's worth it.\n\n630\n00:31:32.540 --> 00:31:36.050\nIt's definitely worth it versus setting\nup your own or the price that you pay for\n\n631\n00:31:36.050 --> 00:31:37.560\nsome of the other ones.\n\n632\n00:31:37.560 --> 00:31:41.010\nSome of the systems that are out there\nlike SolarWinds, they work great.\n\n633\n00:31:41.010 --> 00:31:44.050\nYou don't have to write scripts, you\ncan monitor all your different systems,\n\n634\n00:31:44.050 --> 00:31:45.160\nthey have some real power to them.\n\n635\n00:31:45.160 --> 00:31:48.700\nSo don't discount third party software,\nbut if third party software is too\n\n636\n00:31:48.700 --> 00:31:52.010\nexpensive, this is a great alternative\nthat's built right into AWS and\n\n637\n00:31:52.010 --> 00:31:52.920\nit's pretty inexpensive.\n\n638\n00:31:52.920 --> 00:31:54.550\nSo definitely take a look at it.\n\n639\n00:31:54.550 --> 00:31:55.120\n>> Excellent stuff.\n\n640\n00:31:55.120 --> 00:31:57.230\nWell Don, thank you so\nmuch for showing us and\n\n641\n00:31:57.230 --> 00:32:01.360\nwalking us through using the monitor and\nthe custom monitor systems and CloudWatch.\n\n642\n00:32:01.360 --> 00:32:02.600\nThank you guys for watching.\n\n643\n00:32:02.600 --> 00:32:04.380\nWe're gonna go ahead and\nsign off for IT Pro TV.\n\n644\n00:32:04.380 --> 00:32:06.350\nI've been your host Daniel Lowrie.\n\n645\n00:32:06.350 --> 00:32:07.160\n>> And I'm Don Pezet.\n\n646\n00:32:07.160 --> 00:32:08.179\n>> We'll see you next time.\n\n647\n00:32:08.179 --> 00:32:14.060\n[MUSIC]\n\n",
          "vimeoId": "149198757"
        }
      ],
      "title": "Elastic Compute Cloud"
    },
    {
      "episodes": [
        {
          "description": "In this episode, Don and Daniel take a look at leveraging AWS services to provide an environment with high availability. They begin by defining the term \"high availability\" and concepts for safeguarding against outages, specifically backup/redundancy, elasticity, and scalability. Then they show you how to orchestrate services like Elastic Load Balancers and Auto-Scaling to ensure a highly available system or service at all times.",
          "length": "2363",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/amazon-acsa/amazon-acsa-4-1-high_availability-121715-1.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/amazon-acsa/amazon-acsa-4-1-high_availability-121715-1-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/amazon-acsa/amazon-acsa-4-1-high_availability-121715-1-sm.jpg",
          "title": "High Availability",
          "transcript": "WEBVTT\n\n1\n00:00:00.012 --> 00:00:02.825\n[SOUND]\n\n2\n00:00:02.825 --> 00:00:11.554\n[MUSIC]\n\n3\n00:00:11.554 --> 00:00:13.597\nAll right, greetings, everyone, and\n\n4\n00:00:13.597 --> 00:00:16.700\nwelcome to another exciting\nepisode of ITProTV.\n\n5\n00:00:16.700 --> 00:00:18.025\nI'm your host Daniel Lowrie.\n\n6\n00:00:18.025 --> 00:00:20.670\nIn today's episode we're\ncontinuing on our series with\n\n7\n00:00:20.670 --> 00:00:23.260\nthe AWS Certified SysOps Admin, and\n\n8\n00:00:23.260 --> 00:00:25.860\njoining me again in the studio\ntoday is none other than Don Pezet.\n\n9\n00:00:25.860 --> 00:00:28.270\nDon, welcome to the show,\nhow you doing today sir?\n\n10\n00:00:28.270 --> 00:00:29.190\n>> I'm doing great, Daniel.\n\n11\n00:00:29.190 --> 00:00:32.900\nExcited to talk about high\navailability which is one\n\n12\n00:00:32.900 --> 00:00:38.260\nof the really shining points of AWS is\nthat it gives us so many different ways.\n\n13\n00:00:38.260 --> 00:00:41.650\nTo make sure that our services\nare always available and\n\n14\n00:00:41.650 --> 00:00:43.080\npeople are able to access them.\n\n15\n00:00:43.080 --> 00:00:46.531\nWe're done and see that we couldnt even,\nwe usually couldn't even afford,\n\n16\n00:00:46.531 --> 00:00:48.919\nin our own data centers it's\neasy to deploy up an AWS,\n\n17\n00:00:48.919 --> 00:00:51.278\nyou really get to take\nadvantage of some neat stuff.\n\n18\n00:00:51.278 --> 00:00:53.180\nYou need to know it's there,\nyou need to understand how it works.\n\n19\n00:00:53.180 --> 00:00:56.640\nAnd more importantly for the exam, we need\nto know how Amazon intends us to use it.\n\n20\n00:00:56.640 --> 00:00:59.700\nSo that's what we're gonna take a look at\nin this episode as we move through some of\n\n21\n00:00:59.700 --> 00:01:05.265\nthe different key pieces of creating\na highly available solution in AWS.\n\n22\n00:01:05.265 --> 00:01:08.345\n>> Yeah, having something in your\nnetwork not be available to,\n\n23\n00:01:08.345 --> 00:01:11.535\nthink if your web server went down,\nnot good right, especially if your\n\n24\n00:01:11.535 --> 00:01:16.430\na web based company, if IT PRO TV websites\nwere down that would not be good for us.\n\n25\n00:01:16.430 --> 00:01:20.700\nSo we have to make sure that we stay\nup as long as humanly possible.\n\n26\n00:01:20.700 --> 00:01:24.590\nNow, Don, this is something that Amazon\nsays they can protect us from, right?\n\n27\n00:01:24.590 --> 00:01:26.130\n>> Yeah.\n>> How do they do that?\n\n28\n00:01:26.130 --> 00:01:27.500\n>> And who would know better than them?\n\n29\n00:01:27.500 --> 00:01:29.360\nThey're an online retailer\n>> That's true.\n\n30\n00:01:29.360 --> 00:01:30.780\n>> and they have no physical stores.\n\n31\n00:01:30.780 --> 00:01:33.210\nSo if their website goes down,\nwhat happens to them?\n\n32\n00:01:33.210 --> 00:01:34.380\nThey stop making money.\n\n33\n00:01:34.380 --> 00:01:38.810\nSo the choice for them is the site is up\nand we make money or the site is down and\n\n34\n00:01:38.810 --> 00:01:39.760\nwe don't make money.\n\n35\n00:01:39.760 --> 00:01:40.989\nWhich state that we wanna be in?\n\n36\n00:01:40.989 --> 00:01:42.920\nIt's an easy choice,\nyou always wanna be up.\n\n37\n00:01:42.920 --> 00:01:44.225\nSo they've all ready done this for\n\n38\n00:01:44.225 --> 00:01:47.156\nthere own site and then they offer the\nfeatures to use, so you can do the same.\n\n39\n00:01:47.156 --> 00:01:50.864\nThe key thing to remember about the\navailability, is people often times don't\n\n40\n00:01:50.864 --> 00:01:53.757\nrealize all the different things\nthat affect availability.\n\n41\n00:01:53.757 --> 00:01:58.253\nThat the definition of availability\nis that a customer can come to your\n\n42\n00:01:58.253 --> 00:02:02.860\napplication and perform the action\nyou intend them to perform.\n\n43\n00:02:02.860 --> 00:02:07.163\nAnd whatever your application, is it might\nbe an email server, it might be a file\n\n44\n00:02:07.163 --> 00:02:11.177\ntransfer server, it might be a online\nshopping cart, it might be a forum.\n\n45\n00:02:11.177 --> 00:02:14.447\nLet's say a forum, they need to be able\nto browse through your webpage and\n\n46\n00:02:14.447 --> 00:02:15.305\nread forum posts.\n\n47\n00:02:15.305 --> 00:02:18.090\nAnd they need to be able to post and\nadd new posts to it.\n\n48\n00:02:18.090 --> 00:02:21.310\nAnd if anything stops them\nfrom being able to do that,\n\n49\n00:02:21.310 --> 00:02:23.840\nyour site is down,\nit doesn't have to be a hardware failure.\n\n50\n00:02:23.840 --> 00:02:26.580\nPeople think of power outage,\na hard drive failing,\n\n51\n00:02:26.580 --> 00:02:31.410\na server dying right, but\nthat's only one aspect of availability.\n\n52\n00:02:31.410 --> 00:02:35.020\nIt could be down because of\na bad software configuration,\n\n53\n00:02:35.020 --> 00:02:38.390\nit could be down because of a hacker,\nsomebody gets in and defaces our website.\n\n54\n00:02:38.390 --> 00:02:41.620\nIt could be that our server is so\nover loaded with traffic.\n\n55\n00:02:41.620 --> 00:02:43.770\nWe had a video that went viral and\nnow we have so\n\n56\n00:02:43.770 --> 00:02:46.360\nmuch traffic the server\ncan't handle it anymore.\n\n57\n00:02:46.360 --> 00:02:50.260\nThose are all things that could\nmake our server unavailable.\n\n58\n00:02:50.260 --> 00:02:54.420\nSo the server might actually be up and\nhappy and responding to traffic and\n\n59\n00:02:54.420 --> 00:02:58.060\nit's just overwhelmed, and it creates\nthe same environment as if server was down\n\n60\n00:02:58.060 --> 00:03:00.560\non the first place, but\naffects availability.\n\n61\n00:03:00.560 --> 00:03:01.726\nSo when you're planning for\n\n62\n00:03:01.726 --> 00:03:04.211\nhigh availability it's not\nall redundant power supplies.\n\n63\n00:03:04.211 --> 00:03:09.021\nIt's not all that, it's making sure\nthe server stays up even when these odd\n\n64\n00:03:09.021 --> 00:03:13.697\nconditions are happening, and\noften times a backup isn't good enough.\n\n65\n00:03:13.697 --> 00:03:16.650\nCuz, if the server goes down and I have to\nrestore from backup, I've got down time.\n\n66\n00:03:16.650 --> 00:03:21.380\nHighly available means being\nonline even during the failure.\n\n67\n00:03:21.380 --> 00:03:22.880\nBackup and\nrestore isn't gonna handle that.\n\n68\n00:03:22.880 --> 00:03:26.630\nSo we need to think about the other stuff\nthat's available that can help us to\n\n69\n00:03:26.630 --> 00:03:29.340\nsurvive through anything that\nwould affect availability.\n\n70\n00:03:29.340 --> 00:03:32.990\n>> Yeah, you really bring up the question\nthat comes to the mind is, okay,\n\n71\n00:03:32.990 --> 00:03:37.720\nwe do have these weird,\nodd things do cause non availability.\n\n72\n00:03:37.720 --> 00:03:40.810\nWhat can we do to just stop that,\ndominigate that problem?\n\n73\n00:03:40.810 --> 00:03:42.800\n>> All right.\nSo I mentioned back to restores.\n\n74\n00:03:42.800 --> 00:03:46.300\nIf its a significant failure,\nlike data center goes down or\n\n75\n00:03:46.300 --> 00:03:49.920\nwe have some operating system lock up or\nwhat ever.\n\n76\n00:03:49.920 --> 00:03:53.080\nWe can always bring up a new server,\nrestore our data and off we go.\n\n77\n00:03:53.080 --> 00:03:57.610\nBut that doesnt really help availability\nThat helps just durability I guess,\n\n78\n00:03:57.610 --> 00:04:00.050\ngetting your system back online and\nmaking it available.\n\n79\n00:04:00.050 --> 00:04:02.970\nIt doesn't keep us available\nduring the failure.\n\n80\n00:04:02.970 --> 00:04:07.730\nSo that's kinda out, so what we need to\ndo is rely on a couple other concepts,\n\n81\n00:04:07.730 --> 00:04:11.460\nmostly elasticity and scalability.\n\n82\n00:04:11.460 --> 00:04:14.450\nWe can leverage those two things\nto make sure that we stay online\n\n83\n00:04:14.450 --> 00:04:16.380\neven when we have a failure.\n\n84\n00:04:16.380 --> 00:04:18.150\nSo it's two kinda key concepts.\n\n85\n00:04:18.150 --> 00:04:21.570\nYou see it spread all throughout\nthe Amazon console, elasticity this, and\n\n86\n00:04:21.570 --> 00:04:22.830\nscalability that.\n\n87\n00:04:22.830 --> 00:04:24.130\nAnd when you leverage both of them,\n\n88\n00:04:24.130 --> 00:04:26.630\nyou can get a really,\nreally highly available environment.\n\n89\n00:04:26.630 --> 00:04:29.090\n>> Yeah, and Don, I don't wanna stop\nhere on a good train of thought there,\n\n90\n00:04:29.090 --> 00:04:30.910\nbut you're saying elasticity and\n\n91\n00:04:30.910 --> 00:04:35.330\nscalability, really sounds like it's\nthe same thing to be honest with you.\n\n92\n00:04:35.330 --> 00:04:37.800\n>> Yeah, it is confusing, and for\n\n93\n00:04:37.800 --> 00:04:39.750\nmost of us we use the terms\ninterchangeably, right?\n\n94\n00:04:39.750 --> 00:04:41.080\nLet's talk about the terms themselves,\nright.\n\n95\n00:04:41.080 --> 00:04:46.090\nSo elasticity, that means that I\ncan maintain a small environment.\n\n96\n00:04:46.090 --> 00:04:49.890\nAnd if my system starts to get\nreally busy, if it gets overwhelmed,\n\n97\n00:04:49.890 --> 00:04:55.820\nit can stretch and expand to have more\nsystems in it, to cover the high load.\n\n98\n00:04:55.820 --> 00:04:57.230\nAnd then as the load goes away and\n\n99\n00:04:57.230 --> 00:05:01.770\nrecedes, it can shrink back into\nit's original size, it's elastic.\n\n100\n00:05:01.770 --> 00:05:04.240\nSo I might have five web servers now, and\n\n101\n00:05:04.240 --> 00:05:06.170\nthen an hour from now I\nhave ten web servers.\n\n102\n00:05:06.170 --> 00:05:08.140\nAnd two hours now I'm\nback to five web servers.\n\n103\n00:05:08.140 --> 00:05:09.580\nRight.\nThat's elasticity.\n\n104\n00:05:09.580 --> 00:05:11.060\nWe grow and we shrink.\n\n105\n00:05:11.060 --> 00:05:15.610\nOkay, scalability, same idea.\n\n106\n00:05:15.610 --> 00:05:18.230\nI've got a set of systems, and\nthey can handle a certain load.\n\n107\n00:05:18.230 --> 00:05:22.440\nAnd as that load increases I can\nscale them either up or out.\n\n108\n00:05:22.440 --> 00:05:25.710\nScale them to grow in my\nenvironment to handle that load,\n\n109\n00:05:25.710 --> 00:05:28.000\nthat sounds just like elasticity,\ndoesn't it?\n\n110\n00:05:28.000 --> 00:05:31.750\nWell the difference is kind of really\non the shrink back side, okay.\n\n111\n00:05:31.750 --> 00:05:34.400\nElasticity is designed to be temporary.\n\n112\n00:05:34.400 --> 00:05:37.210\nThat means I get some high\nutilization on my system right now,\n\n113\n00:05:37.210 --> 00:05:40.370\nso I go from five servers to ten servers.\n\n114\n00:05:40.370 --> 00:05:43.900\nBut then that traffic goes away, it was\njust a peak, it was a one time thing.\n\n115\n00:05:43.900 --> 00:05:47.090\nAnd so we shrink back to the original\nfive servers, that's elasticity.\n\n116\n00:05:48.390 --> 00:05:53.450\nScalability on the other hand is usually\nlong term and it's usually permanent.\n\n117\n00:05:53.450 --> 00:05:57.290\nThat maybe when I brought up\nthe server I had 100 customers.\n\n118\n00:05:57.290 --> 00:05:59.170\nNow I've got 1000 customers.\n\n119\n00:05:59.170 --> 00:06:02.970\nSo I scale my systems to be able to\nhandle that load of 1000 customers.\n\n120\n00:06:02.970 --> 00:06:05.700\nNow am I planning on losing all\nmy customers the next month?\n\n121\n00:06:05.700 --> 00:06:08.100\nHopefully not, I've got 1,000\ncustomers I wanna keep them.\n\n122\n00:06:08.100 --> 00:06:11.570\nIn fact, I wanna grow to 2,000 customers,\nor 5,000 or 10,000 customers.\n\n123\n00:06:11.570 --> 00:06:15.380\nAnd so we scale to support\nthat load of customers.\n\n124\n00:06:15.380 --> 00:06:18.800\nSo elasticity is temporary, short term.\n\n125\n00:06:18.800 --> 00:06:21.800\nScalability is usually permanent and\nlong term.\n\n126\n00:06:21.800 --> 00:06:22.910\nBut you can scale back, too.\n\n127\n00:06:22.910 --> 00:06:23.630\nYou've got that.\n\n128\n00:06:23.630 --> 00:06:25.030\nBut that's not usually\nwhen we're doing it.\n\n129\n00:06:25.030 --> 00:06:28.650\nWe're normally thinking of permanent\ngrowth to support our organization.\n\n130\n00:06:28.650 --> 00:06:30.550\nThe two systems work very similar.\n\n131\n00:06:30.550 --> 00:06:32.920\nThe difference is whether\nwe automate them, right.\n\n132\n00:06:32.920 --> 00:06:35.160\nElasticity is normally automated.\n\n133\n00:06:35.160 --> 00:06:38.830\nWe need the servers to react on their\nown to this one time burst of traffic or\n\n134\n00:06:38.830 --> 00:06:41.160\nwhatever, so\nthat our site doesn't go down.\n\n135\n00:06:41.160 --> 00:06:45.010\nIf we have a video go viral and\nmillions of people are coming to our site,\n\n136\n00:06:45.010 --> 00:06:47.570\nwe want those millions of people\nto be able to get the traffic.\n\n137\n00:06:47.570 --> 00:06:50.200\nBut we know eventually the hype\nwill die down for that video.\n\n138\n00:06:50.200 --> 00:06:52.790\nWe'll just go back to our regular\ntraffic levels which might be very,\n\n139\n00:06:52.790 --> 00:06:54.170\nvery small, right?\n\n140\n00:06:54.170 --> 00:06:57.900\nSo we need elasticity for that, automated,\nhandle the load when it happens.\n\n141\n00:06:58.900 --> 00:07:02.240\nBut scalability,\nwe look at our traffic and we say,\n\n142\n00:07:02.240 --> 00:07:04.620\nboy, we doubled our\ncustomer base this year.\n\n143\n00:07:04.620 --> 00:07:08.060\nSo next year if we continue on this\ntrend we're gonna be at this level,\n\n144\n00:07:08.060 --> 00:07:10.300\nlet's scale our system to\nbe able to handle that.\n\n145\n00:07:10.300 --> 00:07:12.290\nAnd we scale it, and we leave it.\n\n146\n00:07:12.290 --> 00:07:15.680\nAnd we leave it at that level, and\nwe continue scaling as our system grows,\n\n147\n00:07:15.680 --> 00:07:18.430\nit's long term and\ntypically permanent, right?\n\n148\n00:07:18.430 --> 00:07:21.390\nNow in terms of the technology we use,\nthere's really not much difference\n\n149\n00:07:21.390 --> 00:07:23.490\naside from whether we\nautomate the process or not.\n\n150\n00:07:23.490 --> 00:07:26.180\nBut that's kinda the key\ndifference between the two.\n\n151\n00:07:26.180 --> 00:07:28.860\nNow when I talk about elasticity.\n\n152\n00:07:28.860 --> 00:07:36.070\nElasticity is always talking about scaling\nout, adding more servers to cover a need.\n\n153\n00:07:36.070 --> 00:07:40.900\nBut when we talk about scalability,\nwe could be scaling out or scaling up.\n\n154\n00:07:40.900 --> 00:07:42.820\nAnd on the exam you'll see it\nwritten two different ways.\n\n155\n00:07:42.820 --> 00:07:46.366\nThere's scaling up, which means\nyou take a piece of hardware, and\n\n156\n00:07:46.366 --> 00:07:47.808\nyou improve the hardware.\n\n157\n00:07:47.808 --> 00:07:52.039\nSo if I have an instance running that\nhas four gigs of RAM and two CPUs and\n\n158\n00:07:52.039 --> 00:07:56.658\nit starts getting busy, I might bump it\nup to eight gigs of RAM and four CPUs.\n\n159\n00:07:56.658 --> 00:08:01.404\nMove it from a C4 large to a C.\n\n160\n00:08:01.404 --> 00:08:03.937\nFive, or a C4 extra large.\n\n161\n00:08:03.937 --> 00:08:08.060\nSo I might bump it up to the next instance\ntype to get more resources out of it.\n\n162\n00:08:08.060 --> 00:08:09.820\nThat's scaling up.\n\n163\n00:08:09.820 --> 00:08:12.060\nIt's also called scaling vertically.\n\n164\n00:08:12.060 --> 00:08:14.610\nAnd scaling vertically is great, cuz you\ncan do it while the server's online.\n\n165\n00:08:14.610 --> 00:08:16.590\nAnd it doesn't require any\nspecial configuration.\n\n166\n00:08:16.590 --> 00:08:18.890\nYou just go and edit the server's\nproperties and scale it up.\n\n167\n00:08:18.890 --> 00:08:21.370\nWe can do it whenever we want.\n\n168\n00:08:21.370 --> 00:08:22.980\nBut the problem is there's a limit.\n\n169\n00:08:22.980 --> 00:08:25.800\nThere comes a time where you hit a limit,\nand\n\n170\n00:08:25.800 --> 00:08:29.320\nwhen you hit that limit,\nyou can't scale up anymore.\n\n171\n00:08:29.320 --> 00:08:33.170\nAnd so depending on what\nregion you're in and so on,\n\n172\n00:08:33.170 --> 00:08:39.100\nthat limit might be 64 processors and\n256 gigs of RAM, right?\n\n173\n00:08:39.100 --> 00:08:40.930\nAnd so you finally hit that limit.\n\n174\n00:08:40.930 --> 00:08:42.430\nAnd now what do you do?\n\n175\n00:08:42.430 --> 00:08:43.420\nYou're out of luck.\n\n176\n00:08:43.420 --> 00:08:46.840\nSo scaling vertically works, but it does\nhave a limit that you're going to hit and\n\n177\n00:08:46.840 --> 00:08:47.810\nyou're going to hit it eventually.\n\n178\n00:08:49.060 --> 00:08:52.990\nScaling out, on the other hand,\nis where we have one server and\n\n179\n00:08:52.990 --> 00:08:55.920\nit starts to get where it's\nrunning out of resources.\n\n180\n00:08:55.920 --> 00:08:57.940\nAnd before we run out,\nif you want to stay available,\n\n181\n00:08:57.940 --> 00:09:01.070\nif you want to stay online,\nyou've got to do this beforehand.\n\n182\n00:09:01.070 --> 00:09:03.850\nAnd before it runs out,\nwe had the second server.\n\n183\n00:09:03.850 --> 00:09:07.000\nAnd now the two servers are carrying that\nload, and then I had a third server, and\n\n184\n00:09:07.000 --> 00:09:09.030\na fourth server, a 500th server.\n\n185\n00:09:09.030 --> 00:09:13.080\nHowever many it is that I need to\ncover the load of my customer base,\n\n186\n00:09:13.080 --> 00:09:15.480\nand there's not a limit to this.\n\n187\n00:09:15.480 --> 00:09:18.180\nI can scale out to my heart's content.\n\n188\n00:09:18.180 --> 00:09:20.920\nAnd I can scale up within those servers,\nbut I'm scaling on\n\n189\n00:09:20.920 --> 00:09:25.040\nhaving more servers to cover the load,\nand that gives us a lot more power.\n\n190\n00:09:25.040 --> 00:09:27.630\nNow scaling out is also called\nscaling horizontally, right,\n\n191\n00:09:27.630 --> 00:09:29.000\nthat's why I keep doing\nthe hand motion like that.\n\n192\n00:09:29.000 --> 00:09:32.270\nIn other words, adding more and\nmore servers scaling horizontally or\n\n193\n00:09:32.270 --> 00:09:33.600\nscaling out.\n\n194\n00:09:33.600 --> 00:09:37.010\nNow, when you have an environment that's\nstarting to come under utilization,\n\n195\n00:09:37.010 --> 00:09:38.650\nmaybe it's a denial of service attack.\n\n196\n00:09:38.650 --> 00:09:42.350\nMaybe it's a Black Friday sale and\nyou got more customers than normal.\n\n197\n00:09:42.350 --> 00:09:44.670\nIt's up to you to choose whether\nyou wanna scale up or scale out.\n\n198\n00:09:44.670 --> 00:09:47.940\nScaling up is easier, but\nscaling out is not actually that hard.\n\n199\n00:09:47.940 --> 00:09:50.028\nI'm gonna show you the process\na little bit later this episode.\n\n200\n00:09:50.028 --> 00:09:54.421\n>> So it's sounds like done there is\ndefinitely a specific time when I would\n\n201\n00:09:54.421 --> 00:09:56.941\nchoose scaling up versus scaling out, or\n\n202\n00:09:56.941 --> 00:10:01.837\nI guess that brings up that question is\nthere anytime when you're looking out and\n\n203\n00:10:01.837 --> 00:10:05.900\nyou're going, should I scale up here or\nshould I scale out?\n\n204\n00:10:05.900 --> 00:10:07.510\nWhen those scenarios happen,\nwhat do we do?\n\n205\n00:10:07.510 --> 00:10:09.600\n>> All right, so on the exam\n>> [LAUGH]\n\n206\n00:10:09.600 --> 00:10:11.480\n>> It's easy, scaling out or\n\n207\n00:10:11.480 --> 00:10:13.980\nscaling horizontally is almost\nalways the right answer.\n\n208\n00:10:13.980 --> 00:10:17.075\nSo that's what Amazon want you to do,\nthat's the recommend model and\n\n209\n00:10:17.075 --> 00:10:19.460\nthat's absolutely true even in real\nlife not just in exam scenario.\n\n210\n00:10:19.460 --> 00:10:22.830\nBut in real life you normally\nwanna scale out whenever possible.\n\n211\n00:10:22.830 --> 00:10:24.804\nBut there are time when\nthat it doesn't work, and\n\n212\n00:10:24.804 --> 00:10:26.640\na great example is a database, right?\n\n213\n00:10:26.640 --> 00:10:29.719\nIf I've got a database and\nRDS and I bring it up and\n\n214\n00:10:29.719 --> 00:10:32.360\nI bring it online, I can set up replicas.\n\n215\n00:10:32.360 --> 00:10:33.510\nRight?\n\n216\n00:10:33.510 --> 00:10:35.030\nBut the replicas are read-only and\n\n217\n00:10:35.030 --> 00:10:37.660\nif I'm trying to balance out read traffic,\nI can do that.\n\n218\n00:10:37.660 --> 00:10:41.510\nI can bring up an aurora database,\nI can have 16 replicas and\n\n219\n00:10:41.510 --> 00:10:43.450\nnow I've got reads spread\naround 16 servers.\n\n220\n00:10:43.450 --> 00:10:44.918\nThat's scaling out.\n\n221\n00:10:44.918 --> 00:10:46.790\nBut what about my writes?\n\n222\n00:10:46.790 --> 00:10:50.870\nThe write operations on the database\nhappen on the primary server, one server.\n\n223\n00:10:50.870 --> 00:10:53.850\nAnd that's it,\nI can't do writes on more than one server.\n\n224\n00:10:53.850 --> 00:10:55.120\nI would get inconsistent writes.\n\n225\n00:10:55.120 --> 00:10:56.496\nI would get conflicting writes left and\nright.\n\n226\n00:10:56.496 --> 00:10:58.940\nIt would be a problem, right?\n\n227\n00:10:58.940 --> 00:11:01.190\nSee how many times I say write\nin the same sentence there.\n\n228\n00:11:01.190 --> 00:11:02.790\nBut that wouldn't work.\n\n229\n00:11:02.790 --> 00:11:07.450\nAnd so with a database,\nthe write side of it, the OLTP,\n\n230\n00:11:07.450 --> 00:11:10.760\nthe transaction side of it,\nyou can always scale up.\n\n231\n00:11:10.760 --> 00:11:13.210\nIt's when you scale the writes up.\n\n232\n00:11:13.210 --> 00:11:16.680\nAnd if you get to a point where you've\nreached the limit of scaling up on\n\n233\n00:11:16.680 --> 00:11:19.520\nthe writes, you kinda stuck.\n\n234\n00:11:19.520 --> 00:11:21.870\nAnd so that point you're through\nit's called Database Sharding.\n\n235\n00:11:21.870 --> 00:11:23.590\nDatabase Sharding is where\nyou take your database and\n\n236\n00:11:23.590 --> 00:11:26.890\nyou break it up into slices and\nyou have more than one database.\n\n237\n00:11:26.890 --> 00:11:29.350\nAnd now you can be scaling up\nthose individual database.\n\n238\n00:11:29.350 --> 00:11:33.110\nAnd the problem there is your software\nhas to be aware that that's happening.\n\n239\n00:11:33.110 --> 00:11:35.310\nSo, it knows when it goes to the right,\nit has to divide it up.\n\n240\n00:11:35.310 --> 00:11:38.540\nA great example might be,\nmaybe you run a department store.\n\n241\n00:11:38.540 --> 00:11:39.938\nYour company has five branches.\n\n242\n00:11:39.938 --> 00:11:41.889\nRight?\nFive stores in five different cities.\n\n243\n00:11:41.889 --> 00:11:45.440\nAnd you've got a database that's\ndesigned for processing your orders.\n\n244\n00:11:45.440 --> 00:11:48.780\nWell, you sell a product that everybody\nloves and you're getting a ton of orders.\n\n245\n00:11:48.780 --> 00:11:50.680\nThe orders have to be\nwritten to the database and\n\n246\n00:11:50.680 --> 00:11:54.880\nyou scaled up your writeable database as\nhigh as it could go, can't go any higher.\n\n247\n00:11:54.880 --> 00:11:55.568\nOkay.\n\n248\n00:11:55.568 --> 00:11:58.951\nSo what you're going to have to do is\ntake the orders table, in the database\n\n249\n00:11:58.951 --> 00:12:02.028\nwhere your orders are going, and\nyou're going to have to shard it.\n\n250\n00:12:02.028 --> 00:12:04.560\nYou're going to have to\nbreak it up into shards.\n\n251\n00:12:04.560 --> 00:12:07.990\nAnd so that each store has it's own shard.\n\n252\n00:12:07.990 --> 00:12:10.978\nSo store one, store two, store three,\nstore four and store five,\n\n253\n00:12:10.978 --> 00:12:12.348\neach one has its own database.\n\n254\n00:12:12.348 --> 00:12:16.360\nAnd now they can scale up, and\nthey can write to their own database.\n\n255\n00:12:16.360 --> 00:12:19.870\nBut now when I run a report on the company\nand I wanna pull up all the orders for\n\n256\n00:12:19.870 --> 00:12:23.700\nall the stores, my software has to know to\ngo to these five different databases to\n\n257\n00:12:23.700 --> 00:12:27.660\ncollate all that data and\nbring it up as one big report, right.\n\n258\n00:12:27.660 --> 00:12:29.710\nThat becomes an application side issue.\n\n259\n00:12:29.710 --> 00:12:34.470\nOn the server side,\nyou can only write to a single database.\n\n260\n00:12:34.470 --> 00:12:37.437\nYou can't write to the replicas\notherwise you'd get inconsistencies and\n\n261\n00:12:37.437 --> 00:12:38.340\nthat's a challenge.\n\n262\n00:12:38.340 --> 00:12:42.110\nSo sometimes scaling out is not\nan option in which case you can scale.\n\n263\n00:12:42.110 --> 00:12:45.805\nYou can always scale up\nuntil you hit that limit.\n\n264\n00:12:45.805 --> 00:12:47.800\nAll right, so scaling up.\n\n265\n00:12:47.800 --> 00:12:49.678\nLet me show you kind of\na demonstration of how that works.\n\n266\n00:12:49.678 --> 00:12:53.000\nThere's this pretty easy, actually yeah,\nlet me show you scaling up.\n\n267\n00:12:53.000 --> 00:12:55.790\nAnd then we'll talk about scaling out and\nthe ways that we can do it.\n\n268\n00:12:55.790 --> 00:12:58.640\nWith scaling up, all I have to\ndo is go and find an instance.\n\n269\n00:12:58.640 --> 00:13:03.330\nAnd I'll do it in EC2, but\nI could do this in RDS for example.\n\n270\n00:13:03.330 --> 00:13:05.710\nAt any time you want.\n\n271\n00:13:05.710 --> 00:13:09.810\nYou could jump in and take an instance\nin EC2 and you just choose it and\n\n272\n00:13:09.810 --> 00:13:13.300\nyou go up here to actions and\nyou can modify the instance, right.\n\n273\n00:13:13.300 --> 00:13:16.980\nIf I go into the Instance Settings, you'll\nsee where I've got Change Instance Type.\n\n274\n00:13:16.980 --> 00:13:18.060\nAnd that's me scaling it up.\n\n275\n00:13:18.060 --> 00:13:19.500\nAnd this guy's turned off right now,\n\n276\n00:13:19.500 --> 00:13:21.600\nbut you can do a lot of\nwhat was turned on also.\n\n277\n00:13:21.600 --> 00:13:22.310\nAnd we come in here and\n\n278\n00:13:22.310 --> 00:13:25.590\nwe just take that instance type,\nbump it up to another instance, right?\n\n279\n00:13:25.590 --> 00:13:29.670\nAnd I've got a ton of choices, all the way\nup to some of these special high high i0,\n\n280\n00:13:29.670 --> 00:13:33.760\nor high compute ones, or\nthe D2s, there are 3s and so on.\n\n281\n00:13:33.760 --> 00:13:38.030\nSo I can pick what I wanted and\nmaybe I'm a C4 large right now and so\n\n282\n00:13:38.030 --> 00:13:42.360\nI go to C4 extra large and\nthen I go to a 2X, or a 4X, 8X, right?\n\n283\n00:13:42.360 --> 00:13:45.070\nJust moving up that tier,\ngetting it larger and larger and\n\n284\n00:13:45.070 --> 00:13:47.330\nlarger until I finally hit the limit.\n\n285\n00:13:47.330 --> 00:13:50.160\nAnd when I hit the limit, then I'm stuck.\n\n286\n00:13:50.160 --> 00:13:54.450\nSo on an instance, we normally pick\na nice middle of the road tier and\n\n287\n00:13:54.450 --> 00:13:58.060\nthen we clone more of that\nserver to kinda meet our needs.\n\n288\n00:13:58.060 --> 00:14:01.100\nThat would be scaling up and\nRDS is the same way.\n\n289\n00:14:01.100 --> 00:14:04.310\nI don't think I have any databases right\nnow but if I jump back out here and\n\n290\n00:14:04.310 --> 00:14:10.710\ngo to RDS, if you have a database\ninstance running which I don't but\n\n291\n00:14:10.710 --> 00:14:14.030\nif I have one you would just\nchoose it under instance actions.\n\n292\n00:14:14.030 --> 00:14:17.900\nYou can modify that instance and bump it\nup, you can scale it up to another tier.\n\n293\n00:14:17.900 --> 00:14:20.640\nSo that's really easy and\nyou just do it right here,\n\n294\n00:14:20.640 --> 00:14:22.050\nit's a manual process you've put in place.\n\n295\n00:14:23.270 --> 00:14:26.600\nBut scaling out,\nscaling out is a little bit harder.\n\n296\n00:14:26.600 --> 00:14:28.500\nThe biggest problem is if\nI have one web server, and\n\n297\n00:14:28.500 --> 00:14:31.940\nall of my people are going to that one\nweb server and it's getting too busy.\n\n298\n00:14:31.940 --> 00:14:34.830\nAnd I decide to add a second web server.\n\n299\n00:14:34.830 --> 00:14:37.370\nRight.\nSo if I go back to my EC2 instances,\n\n300\n00:14:37.370 --> 00:14:38.520\nfor example.\n\n301\n00:14:38.520 --> 00:14:40.580\nAnd I've got this web server\nsitting right here and\n\n302\n00:14:40.580 --> 00:14:42.390\nit's not doing a good job,\nbecause it's powered off.\n\n303\n00:14:42.390 --> 00:14:44.080\nI should have probably\npowered that thing on.\n\n304\n00:14:44.080 --> 00:14:48.080\nSo if I go in here and I started that\nthing up, and so now that's my one web\n\n305\n00:14:48.080 --> 00:14:51.400\nserver and it's a T2 micro so it's not\ngoing to handle a whole lot of traffic.\n\n306\n00:14:51.400 --> 00:14:52.655\nRight?\nSo I decide, boy,\n\n307\n00:14:52.655 --> 00:14:54.950\nI need to add another instance.\n\n308\n00:14:54.950 --> 00:14:55.730\nWell what do I have to do?\n\n309\n00:14:55.730 --> 00:14:57.320\nI've got to go and launch an instance.\n\n310\n00:14:57.320 --> 00:14:58.280\nI've got to spin it up.\n\n311\n00:14:58.280 --> 00:15:00.340\nI've got to put my website on it.\n\n312\n00:15:00.340 --> 00:15:02.440\nI've got to get it configured and\n\n313\n00:15:02.440 --> 00:15:07.320\nthen I have to have some way to\ntell my end users to be able to\n\n314\n00:15:07.320 --> 00:15:11.590\nbrowse to the two servers, to distribute\ntraffic across the two different systems.\n\n315\n00:15:12.750 --> 00:15:13.920\nHow do I do that?\n\n316\n00:15:13.920 --> 00:15:16.750\nWell, normally we'd use\nan elastic load balancer.\n\n317\n00:15:16.750 --> 00:15:18.960\nAn elastic load balancer\ncan contain one instance.\n\n318\n00:15:18.960 --> 00:15:21.510\nI can create an ELB that\ncontain this one instance.\n\n319\n00:15:21.510 --> 00:15:23.600\nAnd that's where all my traffic would go.\n\n320\n00:15:23.600 --> 00:15:26.960\nAnd then when things started getting busy\nI could spin up another instance and\n\n321\n00:15:26.960 --> 00:15:29.020\nI could stick it in the ELB.\n\n322\n00:15:29.020 --> 00:15:31.420\nAnd then my traffic would get\ndistributed across the two instances and\n\n323\n00:15:31.420 --> 00:15:33.780\nI got a third and a fourth and so\non and it would start to grow.\n\n324\n00:15:33.780 --> 00:15:35.510\nBut it's a bit of a manual process.\n\n325\n00:15:35.510 --> 00:15:38.670\nI'll remember to spin these instances\nup and stick them in the ELB.\n\n326\n00:15:40.160 --> 00:15:44.200\nInstead, we'd be better off\nusing an auto scaling group.\n\n327\n00:15:44.200 --> 00:15:47.671\nAn auto scaling group will\nmonitor our performance and\n\n328\n00:15:47.671 --> 00:15:51.908\nadd more nodes as needed to cover\nthe load and it can do elasticity.\n\n329\n00:15:51.908 --> 00:15:55.865\nWhich means if our systems start to get\nslow it can reduce the number of instances\n\n330\n00:15:55.865 --> 00:15:59.425\nso we're not paying for servers that\naren't actually doing any work.\n\n331\n00:15:59.425 --> 00:16:03.216\nSo we can grow and shrink our environment,\nhave a truly elastic environment.\n\n332\n00:16:03.216 --> 00:16:05.350\nSo if somebody performs\na denial of servers attack.\n\n333\n00:16:05.350 --> 00:16:08.800\nOr I have a video that goes viral and\nI start getting a huge amount of traffic.\n\n334\n00:16:08.800 --> 00:16:10.750\nMy server doesn't get overwhelmed and\ngo down.\n\n335\n00:16:10.750 --> 00:16:13.120\nInstead it just starts cloning itself and\ncreating more and more and\n\n336\n00:16:13.120 --> 00:16:15.620\nmore of these instances and\nit handles the load just fine.\n\n337\n00:16:15.620 --> 00:16:16.250\nAnd so\n\n338\n00:16:16.250 --> 00:16:20.080\nyesterday I might have only needed five\nservers, but today I need 5,000 servers.\n\n339\n00:16:20.080 --> 00:16:21.160\nIt can do that.\n\n340\n00:16:21.160 --> 00:16:23.710\nNow you will hit your\naccount limit at some point.\n\n341\n00:16:23.710 --> 00:16:25.588\nSo you'll have to reach out to Amazon and\n\n342\n00:16:25.588 --> 00:16:28.580\nbump up the amount of instances\nthat you're allowed to launch.\n\n343\n00:16:28.580 --> 00:16:29.680\nIt's for your protection, right?\n\n344\n00:16:29.680 --> 00:16:32.820\nSo if somebody hacks in, they can't\njust spin up a ton of instances.\n\n345\n00:16:32.820 --> 00:16:36.610\nBut it's got that capability and you can\nhave tons of instances that are up and\n\n346\n00:16:36.610 --> 00:16:37.740\nrunning and supporting your account.\n\n347\n00:16:39.010 --> 00:16:42.060\nTo set that up,\nwe actually need two different pieces.\n\n348\n00:16:42.060 --> 00:16:46.840\nWe need a load balancer and we need an\nauto scaling group to get put in place and\n\n349\n00:16:46.840 --> 00:16:48.300\nit's actually not that hard.\n\n350\n00:16:48.300 --> 00:16:51.090\nBut before I jump in to that I wanna\nmention something that's completely off\n\n351\n00:16:51.090 --> 00:16:54.380\nthe beat and record here,\nwhich is a bastion host.\n\n352\n00:16:54.380 --> 00:16:57.582\nIn your reading of Amazon white paper or\njust even out there on the Internet,\n\n353\n00:16:57.582 --> 00:16:59.094\nyou might of heard of bastion host.\n\n354\n00:16:59.094 --> 00:17:04.590\nAnd a bastion host sounds a lot like an\nELB, a lot like an elastic load balancer.\n\n355\n00:17:04.590 --> 00:17:07.878\nWhat I want to talk about here,\nI doubt it will show up on your exam but\n\n356\n00:17:07.878 --> 00:17:10.845\njust in case it does,\nbastion hosts are not load balancers.\n\n357\n00:17:10.845 --> 00:17:13.481\nAll right, if you never heard the term,\nlet me bring up a diagram here and\n\n358\n00:17:13.481 --> 00:17:15.540\nshow you what a bastion host is.\n\n359\n00:17:15.540 --> 00:17:19.040\nThe way a bastion host works is you\nbasically build up an instance,\n\n360\n00:17:19.040 --> 00:17:22.000\nan instance that's in a public VPC,\nright, so\n\n361\n00:17:22.000 --> 00:17:24.750\npeople on the internet can access the VPC.\n\n362\n00:17:24.750 --> 00:17:28.520\nAnd then you create a private VPC and\nyou put all your servers behind it.\n\n363\n00:17:28.520 --> 00:17:31.990\nYou might have one server, you might have\nfive servers, you might have 500 servers.\n\n364\n00:17:31.990 --> 00:17:37.560\nBut the people in the Cloud don't\naccess the servers directly.\n\n365\n00:17:37.560 --> 00:17:42.250\nThey go through the bastion host which is\nvery similar to the ELB I'm describing,\n\n366\n00:17:42.250 --> 00:17:44.190\nright and\nwe have an elastic load balancer.\n\n367\n00:17:44.190 --> 00:17:46.120\nPeople on the internet go to\nthe elastic load balancer and\n\n368\n00:17:46.120 --> 00:17:48.020\nthen it distributes them\nacross the servers.\n\n369\n00:17:48.020 --> 00:17:48.610\nRight?\n\n370\n00:17:48.610 --> 00:17:50.430\nSo, a bastion sounds similar.\n\n371\n00:17:50.430 --> 00:17:53.520\nBut a bastion actually does not\nimprove performance one single bit.\n\n372\n00:17:53.520 --> 00:17:56.410\nA bastion is actually security technique.\n\n373\n00:17:56.410 --> 00:17:56.960\nRight?\n\n374\n00:17:56.960 --> 00:17:59.790\nIf I don't want to expose all\nthese servers to the Internet,\n\n375\n00:17:59.790 --> 00:18:03.960\nI can take one server, and\nit expose it to the Internet.\n\n376\n00:18:03.960 --> 00:18:06.920\nAnd then use it,\nas what's called a reverse proxy.\n\n377\n00:18:06.920 --> 00:18:09.156\nPeople in the internet connect\nto the bastion host and\n\n378\n00:18:09.156 --> 00:18:11.870\nthen the bastion host directs\nthem to the internal servers.\n\n379\n00:18:11.870 --> 00:18:12.640\nRight.\nYou\n\n380\n00:18:12.640 --> 00:18:15.530\nbounced through the bastion\nhost on the way to the inside.\n\n381\n00:18:15.530 --> 00:18:18.392\nSo for example,\nif I have a my SQL database right here.\n\n382\n00:18:18.392 --> 00:18:20.340\nI might wanna expose\nthe database in the internet.\n\n383\n00:18:20.340 --> 00:18:24.190\nAnd then I wanna to configure firewall\nrules and all those other things for it.\n\n384\n00:18:24.190 --> 00:18:28.110\nSo instead, I could set up a bastion\nhost that supported SSH and\n\n385\n00:18:28.110 --> 00:18:31.300\nI could expose it to the internet,\nin just the SSH traffic.\n\n386\n00:18:31.300 --> 00:18:32.860\nAnd from my client,\n\n387\n00:18:32.860 --> 00:18:37.840\nI could build up an SSH tunnel from\nmy laptop to the bastion host.\n\n388\n00:18:37.840 --> 00:18:43.240\nAnd once that tunnel was up, I could then\nsend MySQL traffic over that tunnel, and\n\n389\n00:18:43.240 --> 00:18:48.590\nthe bastion host could send it on the\nMySQL TCP 3306 port to the MySQL sever.\n\n390\n00:18:48.590 --> 00:18:50.790\nAnd I can connect to it, and\nI can work with it, right?\n\n391\n00:18:50.790 --> 00:18:54.830\nBut the SQL server is not exposed to the\nInternet, that's what bastion hosts do.\n\n392\n00:18:54.830 --> 00:18:59.770\nThey're not designed to load\nbalance across a bunch of systems,\n\n393\n00:18:59.770 --> 00:19:01.530\nthey're not designed for a elasticity,\n\n394\n00:19:01.530 --> 00:19:04.310\nthey're not designed for\navailability or even scalability.\n\n395\n00:19:04.310 --> 00:19:06.100\nThey're designed for security.\n\n396\n00:19:06.100 --> 00:19:10.110\nSo on the exam, you're not likely to see\na question about bashing a specifically,\n\n397\n00:19:10.110 --> 00:19:13.120\nyou're more likely to see it as\na wrong answer on a question.\n\n398\n00:19:13.120 --> 00:19:16.060\nSo just be careful, don't get tripped\nup on that cuz it does seem a lot like\n\n399\n00:19:16.060 --> 00:19:18.420\na load balancer, but\nit doesn't perform that function.\n\n400\n00:19:18.420 --> 00:19:20.126\nSo it's really just a security concept.\n\n401\n00:19:20.126 --> 00:19:22.280\nAll right.\n\n402\n00:19:22.280 --> 00:19:23.290\nEnough about the wrong answer though.\n\n403\n00:19:23.290 --> 00:19:24.530\nLet's talk about the right answer.\n\n404\n00:19:24.530 --> 00:19:26.870\nThe right answer of these\nthings is to use auto scaling.\n\n405\n00:19:26.870 --> 00:19:31.020\nBut you almost always use auto scaling in\nconjunction with an elastic load balancer.\n\n406\n00:19:31.020 --> 00:19:33.580\nSo I want to show you the process\nof getting that set up.\n\n407\n00:19:33.580 --> 00:19:36.200\nNow in my console,\nI've got this one instance set up.\n\n408\n00:19:36.200 --> 00:19:38.190\nIt's just a simple little web server.\n\n409\n00:19:38.190 --> 00:19:42.280\nAnd it's got a webpage on it that\njust displays the server information.\n\n410\n00:19:42.280 --> 00:19:46.370\nSo if I were to browse to that webpage\nright now, I get this little page here.\n\n411\n00:19:46.370 --> 00:19:47.980\nThis is my, I call it my heartbeat page.\n\n412\n00:19:47.980 --> 00:19:50.260\nThis is what I put on servers to\ntest whether they are working.\n\n413\n00:19:50.260 --> 00:19:53.210\nSo it just says it's alive and\nit gives me the servers information, so\n\n414\n00:19:53.210 --> 00:19:54.832\nI can see I connected to it.\n\n415\n00:19:54.832 --> 00:19:57.940\nAll right,\nnow if I want to be able to autoscale and\n\n416\n00:19:57.940 --> 00:20:00.760\nclone this web server over and\nover and over again.\n\n417\n00:20:00.760 --> 00:20:03.560\nI don't want to just\nlaunch new Linux AMIs.\n\n418\n00:20:03.560 --> 00:20:06.280\nI need to already have my webpage,\nI need to already be configured for\n\n419\n00:20:06.280 --> 00:20:07.510\nmy application.\n\n420\n00:20:07.510 --> 00:20:11.780\nSo what we need to do is we need to\ntake our web server and create an AMI,\n\n421\n00:20:11.780 --> 00:20:13.280\nan Amazon Machine Image based on.\n\n422\n00:20:13.280 --> 00:20:15.420\nSo its already got all my data in it.\n\n423\n00:20:15.420 --> 00:20:18.200\nNow we've talked about it in other\nepisodes, but just real quickly,\n\n424\n00:20:18.200 --> 00:20:21.340\nwhat you would do is configure\nan instance exactly the way you want it.\n\n425\n00:20:21.340 --> 00:20:26.320\nGet it setup with everything you need and\nthen you go up here to Actions.\n\n426\n00:20:26.320 --> 00:20:30.100\nAnd under Image, you can create an image.\n\n427\n00:20:30.100 --> 00:20:31.360\nNow be careful with this.\n\n428\n00:20:31.360 --> 00:20:35.500\nIf I store the webpage\nright here on my AMI and\n\n429\n00:20:35.500 --> 00:20:38.260\nit's a month old,\nI've got a month old copy of my webpage.\n\n430\n00:20:38.260 --> 00:20:39.630\nI need to keep it up to date.\n\n431\n00:20:39.630 --> 00:20:40.690\nSo I've got two choices.\n\n432\n00:20:40.690 --> 00:20:43.650\nOne, I can routinely create new AMIs.\n\n433\n00:20:43.650 --> 00:20:46.390\nEvery time I change my webpage\nI gotta come recreate the AMI.\n\n434\n00:20:46.390 --> 00:20:46.890\nYou can do that.\n\n435\n00:20:48.040 --> 00:20:51.550\nBut the better option is when you\nconfigure this AMI, configure it so\n\n436\n00:20:51.550 --> 00:20:56.060\nthat every time it boots up, it does\nsomething like runs rsync to get the copy\n\n437\n00:20:56.060 --> 00:21:00.240\nof the latest webpage or it uses the S3\nfile system to reach out to S3 and\n\n438\n00:21:00.240 --> 00:21:04.060\nget a copy of the latest webpage or\nit's pointing to database\n\n439\n00:21:04.060 --> 00:21:05.770\nwhere the webpage is actually\nstored in the database.\n\n440\n00:21:05.770 --> 00:21:07.260\nThat's what, like, WordPress does.\n\n441\n00:21:07.260 --> 00:21:10.590\nAnd that way I can boot up here,\nand not have the latest data, but\n\n442\n00:21:10.590 --> 00:21:12.940\nas soon as I boot I get it,\nand I have the latest data.\n\n443\n00:21:12.940 --> 00:21:13.990\nRight?\nThat's the better way to go,\n\n444\n00:21:13.990 --> 00:21:14.590\nto script that.\n\n445\n00:21:14.590 --> 00:21:17.040\nBut it's gonna depend on your\napplication how that's done.\n\n446\n00:21:17.040 --> 00:21:20.260\nSo for right now I've just stored\nmy webpage right here in the image.\n\n447\n00:21:20.260 --> 00:21:22.410\nAnd so you can create an AMI on that, and\n\n448\n00:21:22.410 --> 00:21:25.450\nonce it's done,\nyou'll have here under your AMIs.\n\n449\n00:21:25.450 --> 00:21:27.390\nNow I just created one before\nthe show cuz it takes a while.\n\n450\n00:21:28.470 --> 00:21:29.220\nI created this image.\n\n451\n00:21:29.220 --> 00:21:30.340\nI called it itprotv-web.\n\n452\n00:21:30.340 --> 00:21:32.590\nAll right,\nthat's an image of that web server.\n\n453\n00:21:34.080 --> 00:21:38.685\nOnce you've got that,\nthen you can create a load balancer.\n\n454\n00:21:38.685 --> 00:21:40.325\nAnd I've created a load\nbalancer ahead of time.\n\n455\n00:21:40.325 --> 00:21:42.545\nWe've covered it in\nthe load balancing episode.\n\n456\n00:21:42.545 --> 00:21:44.545\nBut if I go down here\nto my load balancers,\n\n457\n00:21:44.545 --> 00:21:45.595\nyou'll see where I've whipped one up.\n\n458\n00:21:45.595 --> 00:21:46.865\nAnd I haven't really\nset up anything on it.\n\n459\n00:21:46.865 --> 00:21:50.724\nI just created it and\nopened up a security group for\n\n460\n00:21:50.724 --> 00:21:52.590\nso that it would allow web traffic in.\n\n461\n00:21:52.590 --> 00:21:53.340\nAnd that's it.\n\n462\n00:21:53.340 --> 00:21:55.000\nIn fact, if I looked at instances,\n\n463\n00:21:55.000 --> 00:21:57.250\nit doesn't even have any\ninstances attached to it.\n\n464\n00:21:57.250 --> 00:21:59.350\nSo it's actually a dead load balancer.\n\n465\n00:21:59.350 --> 00:22:02.250\nIt's not doing anything as long\nas the instance count is zero,\n\n466\n00:22:02.250 --> 00:22:03.930\nthis load balancer is dead in the water.\n\n467\n00:22:03.930 --> 00:22:07.850\nBut I can point my customers\nto this load balancer and\n\n468\n00:22:07.850 --> 00:22:10.170\nit'll access the servers\nthat are behind it.\n\n469\n00:22:10.170 --> 00:22:14.160\nSo what I'm gonna do is I'm gonna create\nan autoscaling group that will say,\n\n470\n00:22:14.160 --> 00:22:17.050\ncreate a web server, and\nstick it in this load balancer.\n\n471\n00:22:17.050 --> 00:22:20.140\nAnd as the load balancer gets busier and\nbusier, as those instances gets busier and\n\n472\n00:22:20.140 --> 00:22:21.540\nbusier, let's add more instances.\n\n473\n00:22:21.540 --> 00:22:23.840\nAnd it will grow those\nbehind the load balancer.\n\n474\n00:22:23.840 --> 00:22:27.830\nThe people in the Internet only see the\nload balancer, but on the backend i might\n\n475\n00:22:27.830 --> 00:22:31.520\nhave 5, 50, 100 servers,\nthey'll just see the load balancer.\n\n476\n00:22:31.520 --> 00:22:36.440\nAll right, so step one create an AMI,\nstep two create a load-balancer.\n\n477\n00:22:36.440 --> 00:22:40.020\nOnce those are done,\nnow we deal with the scalability, right.\n\n478\n00:22:40.020 --> 00:22:43.250\nSo on the left side here, I'm just\ngonna scroll down to Auto Scaling.\n\n479\n00:22:43.250 --> 00:22:45.580\nAnd for Auto Scaling to work,\nit works with two pieces, and\n\n480\n00:22:45.580 --> 00:22:48.320\nyou have to have both, so the wizard's\ngonna create both of them for us.\n\n481\n00:22:48.320 --> 00:22:49.940\nYou need a launch configuration.\n\n482\n00:22:49.940 --> 00:22:51.620\nThat tells it what AMI to use.\n\n483\n00:22:51.620 --> 00:22:54.920\nAnd what subnet to put it in,\nwhere to launch it, what region,\n\n484\n00:22:54.920 --> 00:22:55.650\nall that stuff right.\n\n485\n00:22:55.650 --> 00:22:58.440\nThe launch configuration for\nfire up new instances.\n\n486\n00:22:58.440 --> 00:23:01.350\nAnd then you need the auto-scaling\ngroup which is where we'll\n\n487\n00:23:01.350 --> 00:23:03.370\ntie all those instances together and\n\n488\n00:23:03.370 --> 00:23:06.940\nlink them to a security group into\nthe load balancer, all right.\n\n489\n00:23:06.940 --> 00:23:09.680\nSo to get this set up, the first\nthing I'm gonna do is I'm just gonna\n\n490\n00:23:09.680 --> 00:23:14.940\ngo down here to launch configurations and\nI'm gonna create an Auto Scaling group.\n\n491\n00:23:14.940 --> 00:23:17.890\nNow notice I didn't click on\nAuto Scaling groups, I could have.\n\n492\n00:23:17.890 --> 00:23:20.690\nIf you've already created\nan auto scaling group,\n\n493\n00:23:20.690 --> 00:23:21.930\nyou'll actually see two buttons here.\n\n494\n00:23:21.930 --> 00:23:24.100\nOne where you can create\na new launch configuration or\n\n495\n00:23:24.100 --> 00:23:24.910\njust an auto scaling group.\n\n496\n00:23:24.910 --> 00:23:27.490\nBut either way, when you click it,\nit's going to end up doing both,\n\n497\n00:23:27.490 --> 00:23:30.160\ncreating a launch configuration and\nan auto scaling group.\n\n498\n00:23:30.160 --> 00:23:31.410\nSo I'm gonna choose to create that group.\n\n499\n00:23:31.410 --> 00:23:33.299\nAnd so here it is, and what's Step 1?\n\n500\n00:23:33.299 --> 00:23:35.580\nCreate a launch configuration.\n\n501\n00:23:35.580 --> 00:23:37.231\nSo it really doesn't matter\nwhich one you go to.\n\n502\n00:23:37.231 --> 00:23:42.079\nSo I'm gonna create this configuration,\nand it's gonna ask me what AMI to use.\n\n503\n00:23:42.079 --> 00:23:44.430\nNow if I use If I use\none of Amazon's AMIs.\n\n504\n00:23:44.430 --> 00:23:46.340\nIt's just an OS that's gonna fire up.\n\n505\n00:23:46.340 --> 00:23:46.932\nIt's not gonna have a web server.\n\n506\n00:23:46.932 --> 00:23:49.319\nIt's not gonna be set up for\nmy application.\n\n507\n00:23:49.319 --> 00:23:57.819\nBut if I go over here to My AMIs There's\nthe AMI I made on my web server.\n\n508\n00:23:57.819 --> 00:24:01.620\nAnd that does have my webpage or\nit's set up to reach out to my database.\n\n509\n00:24:01.620 --> 00:24:03.700\nIt's configured the way that I need it.\n\n510\n00:24:03.700 --> 00:24:05.730\nAnd so\nthat's the one that I'm gonna choose.\n\n511\n00:24:05.730 --> 00:24:10.070\nI'm gonna select the AMI that I made and\nnow I can pick the default scale.\n\n512\n00:24:10.070 --> 00:24:15.480\nAnd I'll just do T2 micros but you might\nwant yours to be C4 larges or whatever.\n\n513\n00:24:15.480 --> 00:24:18.570\nYou pick the scale that you need\nto support your environment.\n\n514\n00:24:18.570 --> 00:24:21.450\nAll right,\non the next here I'll pick my details.\n\n515\n00:24:21.450 --> 00:24:23.310\nWhat I wanna name this\nlaunch configuration,\n\n516\n00:24:23.310 --> 00:24:25.080\nI'll just call this IT Pro TV dash web.\n\n517\n00:24:25.080 --> 00:24:29.530\nSince this is gonna be a web server, and\nthen I can pick if it's got an IM role.\n\n518\n00:24:29.530 --> 00:24:33.690\nIf I want detailed monitoring turn on and\nI may or may not want detailed monitoring.\n\n519\n00:24:33.690 --> 00:24:36.740\nIt depends on how fast I\nwant this to respond right?\n\n520\n00:24:36.740 --> 00:24:40.320\nThe way he knows a system is busy\nis by using CloudWatch Metrics.\n\n521\n00:24:40.320 --> 00:24:43.650\nAnd the default CloudWatch Metrics\nare only checking every five minutes.\n\n522\n00:24:43.650 --> 00:24:47.850\nSo if I wanna be really precise and scale\nto the minute I need to turn on detail.\n\n523\n00:24:47.850 --> 00:24:50.210\nBut if I'm okay with every five\nminutes then I could leave it with\n\n524\n00:24:50.210 --> 00:24:52.660\njust the regular and\nit doesn't cost any extra.\n\n525\n00:24:52.660 --> 00:24:56.410\nEven the details doesn't cost that much,\nbut I'll just leave it off for now.\n\n526\n00:24:56.410 --> 00:24:58.760\nIt can get expensive if\nyou scale enough servers,\n\n527\n00:24:58.760 --> 00:25:01.440\nlike a 500 servers all that\nmonitoring does start to add up.\n\n528\n00:25:01.440 --> 00:25:03.360\nAll right.\n\n529\n00:25:03.360 --> 00:25:06.500\nOn the storage side its got the storage\nfrom my MAI I dont need to change any of\n\n530\n00:25:06.500 --> 00:25:07.820\nthat, so I'll leave it be.\n\n531\n00:25:07.820 --> 00:25:10.300\nBut this is an area I really need\nto pay attention to right here,\n\n532\n00:25:10.300 --> 00:25:12.170\ndelete on termination okay.\n\n533\n00:25:12.170 --> 00:25:13.780\nWhen you do auto scaling,\n\n534\n00:25:13.780 --> 00:25:17.640\nits really important that you have\ndelete on termination turned on.\n\n535\n00:25:17.640 --> 00:25:22.850\nOtherwise, every time it adds in instance,\nit's gonna create volumes, EBS Volumes.\n\n536\n00:25:22.850 --> 00:25:26.020\nAnd when it terminates the instance,\nif these are the checks it's gonna leave\n\n537\n00:25:26.020 --> 00:25:30.240\nthe volumes behind and so, you might\nscale up to a 100 servers today and then,\n\n538\n00:25:30.240 --> 00:25:34.530\nback down to ten servers tomorrow and\nyou have 90 EBS volumes sitting\n\n539\n00:25:34.530 --> 00:25:37.950\nthat you're paying storage on right,\neven though the servers are on up.\n\n540\n00:25:37.950 --> 00:25:41.710\nBut, if you delete it on termination, they\ngo away, and the next time you spit up\n\n541\n00:25:41.710 --> 00:25:45.040\nmore servers, it's pulling it\nfrom the AMI, from the image.\n\n542\n00:25:45.040 --> 00:25:46.710\nSo, you don't need them\nlaying around anymore.\n\n543\n00:25:46.710 --> 00:25:49.100\nSo, you really wanna make\nsure that's turned on.\n\n544\n00:25:49.100 --> 00:25:52.940\nYou can't change this after the fact for\nan instance once it's up, so\n\n545\n00:25:52.940 --> 00:25:54.300\nwe need to set it now.\n\n546\n00:25:54.300 --> 00:25:56.540\nIf we don't,\nwhat we need to do is turn it on.\n\n547\n00:25:56.540 --> 00:25:59.940\nYou can turn it on after the fact but\nit won't affect your current instances, so\n\n548\n00:25:59.940 --> 00:26:02.320\nyou'll just need to go through them and\nterminate all the existing instances and\n\n549\n00:26:02.320 --> 00:26:05.942\nmanually delete their volumes, and the new\ninstance that fires up will auto delete.\n\n550\n00:26:05.942 --> 00:26:10.670\nAll right, so I've got that\nset the way that I want it and\n\n551\n00:26:10.670 --> 00:26:13.310\nI can pick my security group for\nthese servers.\n\n552\n00:26:13.310 --> 00:26:15.320\nAnd I've already got a security group for\nmy web server so\n\n553\n00:26:15.320 --> 00:26:16.550\nI'm just gonna pick that one.\n\n554\n00:26:16.550 --> 00:26:20.900\nIt's buried in here, I put it to be\nweb 01 and it's nothing fancy, right?\n\n555\n00:26:20.900 --> 00:26:23.820\nIt's just allowing SSH and\nHTTP to get through.\n\n556\n00:26:23.820 --> 00:26:24.900\nIt's a web server, I need that.\n\n557\n00:26:26.220 --> 00:26:28.310\nAll right, when that's done.\n\n558\n00:26:28.310 --> 00:26:30.510\nHere's my little review screen\nwhere I can see all my stuff.\n\n559\n00:26:30.510 --> 00:26:32.030\nAnd I'll just click create\nlaunch configuration.\n\n560\n00:26:32.030 --> 00:26:33.550\nAnd it's gonna create it.\n\n561\n00:26:33.550 --> 00:26:35.490\nI need to pick and SSH key pair to use.\n\n562\n00:26:35.490 --> 00:26:38.380\nI'll use my existing key here for\nthe instances.\n\n563\n00:26:38.380 --> 00:26:39.470\nAll right.\n\n564\n00:26:39.470 --> 00:26:41.420\nNow i've got the launch configuration.\n\n565\n00:26:41.420 --> 00:26:43.540\nIt knows how to spin up a new instance.\n\n566\n00:26:44.580 --> 00:26:49.070\nNow we need the auto scaling group to\ntell it when to spin up the instance.\n\n567\n00:26:49.070 --> 00:26:50.530\nIt knows the how.\n\n568\n00:26:50.530 --> 00:26:51.450\nNow we need to tell it the when.\n\n569\n00:26:51.450 --> 00:26:54.535\nAll right, and so\nI'll create an auto scaling group called\n\n570\n00:26:54.535 --> 00:26:59.710\nitprotv-web and a group size.\n\n571\n00:26:59.710 --> 00:27:01.790\nHow many instances do I wanna start with?\n\n572\n00:27:01.790 --> 00:27:03.590\nI'm gonna tell it to start with one,\nright?\n\n573\n00:27:03.590 --> 00:27:06.790\nActually, you know what I lied,\nI'll start it with two.\n\n574\n00:27:06.790 --> 00:27:08.050\nHow many do I want at all times?\n\n575\n00:27:08.050 --> 00:27:09.310\nThat's basically what this means.\n\n576\n00:27:09.310 --> 00:27:12.240\nAt all times,\nwhat's the minimum amount I wanna have?\n\n577\n00:27:12.240 --> 00:27:14.170\nI'm gonna say two just for redundancy.\n\n578\n00:27:14.170 --> 00:27:17.250\nIf one locks up, then it flipped over\nto the other one so I'm gonna say two.\n\n579\n00:27:17.250 --> 00:27:20.500\nYou might wanna start with ten, base it\noff of whatever your current user base is.\n\n580\n00:27:20.500 --> 00:27:22.430\nWhatever your current utilization is.\n\n581\n00:27:22.430 --> 00:27:24.430\nThen what network, if I've got a VPC.\n\n582\n00:27:24.430 --> 00:27:28.450\nAnd inside of that network what subnet,\nwhich is really what availability.\n\n583\n00:27:28.450 --> 00:27:29.620\nAnd I'll just pick 1a here for mine.\n\n584\n00:27:29.620 --> 00:27:32.310\nThen you've got your other details.\n\n585\n00:27:32.310 --> 00:27:36.530\nYou actually can have an ELB that covers\ninstances that are in more than one AZ,\n\n586\n00:27:36.530 --> 00:27:38.120\nmore than one availability zone.\n\n587\n00:27:38.120 --> 00:27:40.100\nIt can only be within one region, though.\n\n588\n00:27:40.100 --> 00:27:43.390\nIf you need instances in\nmore than one region,\n\n589\n00:27:43.390 --> 00:27:46.350\nthen what I need to do is create another\nELB, create another load balancer.\n\n590\n00:27:46.350 --> 00:27:49.560\nI can have a load balancer\nin the US East region, and\n\n591\n00:27:49.560 --> 00:27:52.510\nanother load balancer in\nthe US West two region.\n\n592\n00:27:52.510 --> 00:27:57.540\nAnd then I use a DNS record with waiting\nto send the people the two different ELBs,\n\n593\n00:27:57.540 --> 00:27:59.500\nand they can have a hundreds of\ninstances behind each of them.\n\n594\n00:27:59.500 --> 00:28:01.250\nSo that's how you get\nthe redundancy there.\n\n595\n00:28:01.250 --> 00:28:04.820\nBut as far as one ELB, it's really just\ngonna be tied to this one instance, or\n\n596\n00:28:04.820 --> 00:28:05.560\nthis one region.\n\n597\n00:28:05.560 --> 00:28:08.628\nSo I've got US East one as [INAUDIBLE].\n\n598\n00:28:08.628 --> 00:28:11.390\nAll right, then made policy.\n\n599\n00:28:11.390 --> 00:28:14.770\nThe default is to keep the group at\nthe initial size manually scaling,\n\n600\n00:28:14.770 --> 00:28:16.400\nyou can increase or decrease it by hand.\n\n601\n00:28:16.400 --> 00:28:17.950\nBut that kind it takes all\nthe fun out of it, all right.\n\n602\n00:28:17.950 --> 00:28:21.540\nWe wanna make sure we actually scale it\non our stud, we scale it automatically.\n\n603\n00:28:21.540 --> 00:28:23.440\nSo I'm gonna choose to create a policy,\nand\n\n604\n00:28:23.440 --> 00:28:28.080\nthe policy is going to define when it's\nscale's out and when scale's back in.\n\n605\n00:28:28.080 --> 00:28:30.860\nRight when we add instances or\nremove instances.\n\n606\n00:28:30.860 --> 00:28:34.240\nSo I'm gonna say that I'm gonna\nscale between two and ten instances.\n\n607\n00:28:34.240 --> 00:28:37.690\nI'm gonna set a max,\nI never want more than ten instances.\n\n608\n00:28:37.690 --> 00:28:40.660\nAnd then I'm gonna tell it\nwhen to increase the size and\n\n609\n00:28:40.660 --> 00:28:42.550\nwhen to decrease the size.\n\n610\n00:28:42.550 --> 00:28:45.460\nOn the increase size,\nI'm gonna need to create a new alarm.\n\n611\n00:28:45.460 --> 00:28:46.820\nI don't think I have one that I can use.\n\n612\n00:28:46.820 --> 00:28:48.610\nYeah, so I'm gonna add a new alarm.\n\n613\n00:28:48.610 --> 00:28:51.120\nAnd for the alarm,\nI don't want it to send a notification.\n\n614\n00:28:51.120 --> 00:28:52.590\nI don't want an email\nevery time it scales.\n\n615\n00:28:52.590 --> 00:28:53.990\nI just want it to do it.\n\n616\n00:28:53.990 --> 00:28:57.260\nAnd so I'm gonna say if the average\nCPU utilization is greater than or\n\n617\n00:28:57.260 --> 00:29:02.650\nequal to 80% for\none consecutive period of five minutes,\n\n618\n00:29:02.650 --> 00:29:05.009\nwith regular CloudWatch monitoring\nI get every five minutes.\n\n619\n00:29:06.090 --> 00:29:07.730\nIf I was doing detailed,\n\n620\n00:29:07.730 --> 00:29:11.550\nI could actually say five consecutive\nperiods of one minute, right?\n\n621\n00:29:11.550 --> 00:29:12.960\nBut, I'm not doing detailed,\nso I can't do that.\n\n622\n00:29:12.960 --> 00:29:14.190\nI'll just leave it at one.\n\n623\n00:29:14.190 --> 00:29:16.200\nOr, you might wanna go tow,\nonly scale every ten minutes.\n\n624\n00:29:16.200 --> 00:29:17.740\nYou're picking your granularity here,\nright?\n\n625\n00:29:17.740 --> 00:29:20.830\nHow often is it going to scale?\n\n626\n00:29:20.830 --> 00:29:28.280\nAnd I'll just call this\nthe itprotv-web-scale out alarm, right?\n\n627\n00:29:28.280 --> 00:29:32.090\nAnd so I'll go ahead and\ncreate that alarm, and\n\n628\n00:29:32.090 --> 00:29:35.440\nthat's gonna tell it what to do and we\nneed to tell it how many instances to add.\n\n629\n00:29:35.440 --> 00:29:38.750\nWell if I wanna add just one instance, or\nif I wanna add two, or three, or four.\n\n630\n00:29:38.750 --> 00:29:39.720\nHow many do I want it?\n\n631\n00:29:39.720 --> 00:29:42.180\nCuz you can add in groups, I'll add one.\n\n632\n00:29:42.180 --> 00:29:42.770\nAll right.\n\n633\n00:29:42.770 --> 00:29:46.180\nSo I'm gonna add one instance\nwhen the CPU realization,\n\n634\n00:29:46.180 --> 00:29:49.920\nmy existing instances is over 80% for\nmore than five minutes.\n\n635\n00:29:49.920 --> 00:29:50.630\nOkay.\n\n636\n00:29:50.630 --> 00:29:52.210\nAnd so then it's gonna speed it up.\n\n637\n00:29:52.210 --> 00:29:53.550\nNow notice this little line right here,\n\n638\n00:29:53.550 --> 00:29:57.790\nInstances need, sometimes you spend an\ninstance up it takes a little while to get\n\n639\n00:29:57.790 --> 00:30:02.780\nhealthy if your scripts are telling\nit you need to do updates, you\n\n640\n00:30:02.780 --> 00:30:06.690\nneed to update your operating system, you\nneed to download a copy of the webpage.\n\n641\n00:30:06.690 --> 00:30:07.760\nMaybe takes five minutes for\n\n642\n00:30:07.760 --> 00:30:09.890\nit to complete all that\nstuff before it's healthy.\n\n643\n00:30:09.890 --> 00:30:13.520\nThen I may need to put a timer in\nhere to tell how long to wait.\n\n644\n00:30:13.520 --> 00:30:16.360\nBecause what happens is if it spins up\nan instance and it doesn't become healthy\n\n645\n00:30:16.360 --> 00:30:21.100\nfast enough, then it'll actually delete\nthe instance and spin up a new one.\n\n646\n00:30:21.100 --> 00:30:23.260\nIt'll assume that it's bad and try again.\n\n647\n00:30:23.260 --> 00:30:25.980\nAnd so if I don't give it enough time,\nit'll just continually fail and delete,\n\n648\n00:30:25.980 --> 00:30:28.380\nfail and delete, fail and\ndelete and never succeed.\n\n649\n00:30:28.380 --> 00:30:30.100\nSo I may need to increase this window.\n\n650\n00:30:30.100 --> 00:30:31.970\nThat's true if you have a lot of scripts,\nright?\n\n651\n00:30:31.970 --> 00:30:34.430\nIf you have a lot of scripts,\nyou have a choice.\n\n652\n00:30:34.430 --> 00:30:37.950\nEliminate the scripts, not really\na choice cuz you kinda need them, or\n\n653\n00:30:37.950 --> 00:30:39.670\nincrease this time.\n\n654\n00:30:39.670 --> 00:30:42.510\nYou could bake better things into\nthe AMI to make it go a little faster.\n\n655\n00:30:42.510 --> 00:30:45.540\nBut really increasing this time\nis kinda the way to do it.\n\n656\n00:30:45.540 --> 00:30:47.770\nAll right, after that when do I decrease?\n\n657\n00:30:47.770 --> 00:30:49.600\nMaybe I don't,\nmaybe I don't want to decrease.\n\n658\n00:30:49.600 --> 00:30:51.710\nScrew it, just add systems and\nleave it be.\n\n659\n00:30:51.710 --> 00:30:52.640\nRight, but\n\n660\n00:30:52.640 --> 00:30:56.360\nusually if we want elasticity, we want\nit to take a way those systems too.\n\n661\n00:30:56.360 --> 00:30:58.470\nSo I can come in here and\ncreate another alarm for that one and\n\n662\n00:30:59.640 --> 00:31:02.510\nthis one always gets a little weird,\ncuz sometimes it doesn't detect the alarm.\n\n663\n00:31:02.510 --> 00:31:05.130\nBut I'm gonna turn off the notification.\n\n664\n00:31:05.130 --> 00:31:08.720\nI'll say if the average CPU\nutilization is less than or\n\n665\n00:31:08.720 --> 00:31:10.170\nequal to, I'll go 70% on this one.\n\n666\n00:31:11.420 --> 00:31:14.577\nSo it's actually gotta come\ndown below that 80%, right?\n\n667\n00:31:14.577 --> 00:31:18.240\nSo I'm not just gonna scale\nagain right after this.\n\n668\n00:31:18.240 --> 00:31:22.460\nSo if we get below 70% for two consecutive\nperiods of five minutes, right?\n\n669\n00:31:22.460 --> 00:31:25.800\nGive it a little bit longer than\nwe're gonna take away some hosts,\n\n670\n00:31:25.800 --> 00:31:32.610\nI'll call this itproty-web-scalein so I\ngotta scale out alarm and scale in alarm.\n\n671\n00:31:32.610 --> 00:31:34.840\n>> Little more wiggle room\non that scaling-end stuff.\n\n672\n00:31:34.840 --> 00:31:37.430\n>> Yeah.\nYou know what I don't want is I don't\n\n673\n00:31:37.430 --> 00:31:40.310\nwanna take away some instances, and\nthen immediately need them again.\n\n674\n00:31:40.310 --> 00:31:42.708\nEspecially if they take a few\nminutes to spin up, right?\n\n675\n00:31:42.708 --> 00:31:46.598\nIf they've gotta run scripts and\nall that, and they take a little while,\n\n676\n00:31:46.598 --> 00:31:49.985\nI would rather have them for\na little extra longer and pay for it,\n\n677\n00:31:49.985 --> 00:31:53.210\nthan to need them and have to wait for\nthem to come up, right.\n\n678\n00:31:53.210 --> 00:31:55.102\nI'd rather my customers\nhad a better experience so\n\n679\n00:31:55.102 --> 00:31:57.261\nthat's why I'm gonna set that\na little bit differently.\n\n680\n00:31:57.261 --> 00:31:59.686\nAnd I'll just tell it to\nremove one instance at a time.\n\n681\n00:31:59.686 --> 00:32:03.720\nSo if I'm cruising it below 70%\nutilization, just take away one.\n\n682\n00:32:03.720 --> 00:32:07.560\nAnd if I continue to cruise at 70%\nthen take away another one and\n\n683\n00:32:07.560 --> 00:32:09.610\njust slowly take them away.\n\n684\n00:32:09.610 --> 00:32:13.590\nI don't wanna react too fast because my\nsystems might take a long time to come up.\n\n685\n00:32:13.590 --> 00:32:16.894\nIf the systems come up really\nfast then it's okay to do it.\n\n686\n00:32:16.894 --> 00:32:19.199\nIt might not actually come really fast so\nI could go ahead and\n\n687\n00:32:19.199 --> 00:32:21.330\nset it to react a lot faster but\nI'll leave it this way.\n\n688\n00:32:22.362 --> 00:32:25.610\nAll right, it didn't happen to me, but\nthere are times where if you try and\n\n689\n00:32:25.610 --> 00:32:28.850\npick an alarm here it\ndoesn't necessarily show up.\n\n690\n00:32:28.850 --> 00:32:31.100\nI bumped into that, so you might\njust have to save your policy and\n\n691\n00:32:31.100 --> 00:32:31.870\ncome back and edit it.\n\n692\n00:32:31.870 --> 00:32:34.460\nBut it worked fine for\nme here so I'll leave it be.\n\n693\n00:32:34.460 --> 00:32:36.755\nAll right, so\nnext I can set up notifications.\n\n694\n00:32:36.755 --> 00:32:37.620\nRight?\n\n695\n00:32:37.620 --> 00:32:40.480\nDo I want it to send me an email\nevery time it scales or whatever.\n\n696\n00:32:40.480 --> 00:32:41.260\nAnd I don't wanna do that.\n\n697\n00:32:41.260 --> 00:32:42.180\nSo I'm just gonna leave it be.\n\n698\n00:32:42.180 --> 00:32:45.760\nAnd then I'll go to configure\nany tags that I've got.\n\n699\n00:32:45.760 --> 00:32:47.280\nI don't have any set.\n\n700\n00:32:47.280 --> 00:32:49.178\nAnd then I'll finish that up.\n\n701\n00:32:49.178 --> 00:32:49.880\nOkay.\n\n702\n00:32:49.880 --> 00:32:52.720\nNow as I set this up you might have\nnoticed one thing that was missing.\n\n703\n00:32:52.720 --> 00:32:54.430\nI've created an auto scale group.\n\n704\n00:32:54.430 --> 00:32:56.150\nIt knows to spin up these instances.\n\n705\n00:32:56.150 --> 00:32:58.580\nAnd it's actually gonna start spinning up\nsome instances in the back cuz I set it\n\n706\n00:32:58.580 --> 00:33:00.030\nwith a minimum of two.\n\n707\n00:33:00.030 --> 00:33:03.170\nBut I never actually attached\nit to the load balancer.\n\n708\n00:33:03.170 --> 00:33:05.430\nAnd the reason I didn't,\nit's in one of the advanced options.\n\n709\n00:33:05.430 --> 00:33:07.270\nI just always forget it, and\nI did it right here too.\n\n710\n00:33:07.270 --> 00:33:08.870\nI forgot to attach it\nto the load balancer.\n\n711\n00:33:08.870 --> 00:33:11.040\nSo I'm gonna fix that real quick.\n\n712\n00:33:11.040 --> 00:33:13.900\nI'm gonna choose that auto\nscaling group that I just made.\n\n713\n00:33:13.900 --> 00:33:16.080\nAnd I'll go to Actions and Edit.\n\n714\n00:33:16.080 --> 00:33:19.670\nAnd then, down here it's one of\nthe first options that we see down here,\n\n715\n00:33:19.670 --> 00:33:22.630\nwe can attach it to a load balancer and\nit's right here.\n\n716\n00:33:22.630 --> 00:33:26.440\nSo, I've got my Launch Configuration and\nthen, what load balancer, how many use?\n\n717\n00:33:26.440 --> 00:33:29.733\nI'm gonna click on that, I'll choose\nthe load balancer that I made earlier.\n\n718\n00:33:29.733 --> 00:33:30.890\nAnd then, I'll just save that.\n\n719\n00:33:30.890 --> 00:33:31.802\nAll right?\n\n720\n00:33:31.802 --> 00:33:35.730\nAnd then save but it's kind of tucked away\nover here into my head but, if I save that\n\n721\n00:33:37.150 --> 00:33:40.750\nnow it's gonna know to attach these\ninstances to the load balancer.\n\n722\n00:33:40.750 --> 00:33:43.720\nAnd so what I should see is\nback here in the background,\n\n723\n00:33:43.720 --> 00:33:48.120\nif I go to my instances, it should be\nspending up two web servers right now.\n\n724\n00:33:48.120 --> 00:33:48.920\nThere they are.\n\n725\n00:33:48.920 --> 00:33:50.410\nI've got two web servers.\n\n726\n00:33:50.410 --> 00:33:51.690\nAnd they're still initializing.\n\n727\n00:33:51.690 --> 00:33:53.280\nThey haven't passed their status checks.\n\n728\n00:33:53.280 --> 00:33:55.330\nAnd I didn't sign a name policy either.\n\n729\n00:33:55.330 --> 00:33:56.140\nI should have done that.\n\n730\n00:33:56.140 --> 00:33:59.650\nYou can set a name policy so\nthat I'veeat names, but I didn't bother.\n\n731\n00:33:59.650 --> 00:34:03.590\nSo I'm spinning up my two web servers and\nit may take it a moment, but\n\n732\n00:34:03.590 --> 00:34:05.680\nit'll move them into\nthe load balancer too.\n\n733\n00:34:05.680 --> 00:34:08.610\nNow they're not gonna be healthy right\naway, on your load balancer you can set\n\n734\n00:34:08.610 --> 00:34:12.320\na health check that says, check to see\nif this web page exists, for example.\n\n735\n00:34:12.320 --> 00:34:17.310\nI don't have that configured on mine, but\nif I go down here to my load balancer,\n\n736\n00:34:18.640 --> 00:34:21.980\nhere's my ITProTV web load balancer,\nand in the status for\n\n737\n00:34:21.980 --> 00:34:24.860\nit I can see that it now has 2 Instances,\nokay?\n\n738\n00:34:24.860 --> 00:34:26.470\nBut the 2 Instances might\nnot be healthy yet.\n\n739\n00:34:26.470 --> 00:34:29.620\nIf I go down here to my Instances,\nI can see them and see how they're\n\n740\n00:34:29.620 --> 00:34:32.750\nshowing as OutOfService, they haven't\npassed their health check yet.\n\n741\n00:34:32.750 --> 00:34:36.220\nSo, if I go to the Health Check tab,\nI can see my health check.\n\n742\n00:34:36.220 --> 00:34:41.070\nIt's looking for them to be running\nHTTP:80, so run a web server, and\n\n743\n00:34:41.070 --> 00:34:43.088\nit's looking for index.php.\n\n744\n00:34:43.088 --> 00:34:47.490\nAnd I've got it checking every 30 seconds\nso it's gonna take a little while for\n\n745\n00:34:47.490 --> 00:34:50.710\nthose servers to boot up,\nfor Apache to start and for\n\n746\n00:34:50.710 --> 00:34:53.280\nthis thing to do another check\nto see that they're online.\n\n747\n00:34:53.280 --> 00:34:57.480\nBut as soon as that happens, those will go\nhealthy and they'll show us InService and\n\n748\n00:34:57.480 --> 00:35:00.180\nactually it happened while I was talking\nso now they're both showing us InService.\n\n749\n00:35:01.390 --> 00:35:05.330\nNow instead of pointing my\ncustomers to an individual server,\n\n750\n00:35:05.330 --> 00:35:07.900\nI just point them to the load balancer.\n\n751\n00:35:07.900 --> 00:35:12.490\nSo when I go to my load balancer's\nDescription here I can see the DNS Name.\n\n752\n00:35:12.490 --> 00:35:16.310\nAnd what I would do is I would\ncreate like a cname in DNS.\n\n753\n00:35:16.310 --> 00:35:21.940\nThat said point www.itpro.tv to this host.\n\n754\n00:35:21.940 --> 00:35:26.050\nAnd now when people browse to it, here's\nwhere I browsed to my one server earlier.\n\n755\n00:35:26.050 --> 00:35:28.500\nI'm gonna paste in that ELB address.\n\n756\n00:35:29.910 --> 00:35:32.240\nI'm going to attempt to\npaste in that ELB address.\n\n757\n00:35:32.240 --> 00:35:33.223\nThere we go.\n\n758\n00:35:33.223 --> 00:35:37.176\nAnd I get a webpage, or what effectively\nlooks like the same webpage.\n\n759\n00:35:37.176 --> 00:35:38.676\nRight?\nBut let's watch that IP.\n\n760\n00:35:38.676 --> 00:35:42.399\nSee how it's 52.91.56.233?\n\n761\n00:35:42.399 --> 00:35:45.660\nAll right?\nI'm just gonna refresh this a few times.\n\n762\n00:35:45.660 --> 00:35:46.970\nAnd there we go.\n\n763\n00:35:46.970 --> 00:35:48.710\nSee how it changed IPs?\n\n764\n00:35:48.710 --> 00:35:50.210\nI just connected to the other host.\n\n765\n00:35:50.210 --> 00:35:52.040\nIf I sit here and hit refresh over and\nover and over again,\n\n766\n00:35:52.040 --> 00:35:53.220\nit's bouncing me between the two hosts.\n\n767\n00:35:53.220 --> 00:35:54.590\nIt's load balancing.\n\n768\n00:35:54.590 --> 00:35:58.560\nAnd as those hosts get busier, if they get\nto 80% CPU, which would be kinda hard for\n\n769\n00:35:58.560 --> 00:36:00.840\nme to generate,\nit will spin up a 3rd host.\n\n770\n00:36:00.840 --> 00:36:01.940\nAnd then a 4th host, and\n\n771\n00:36:01.940 --> 00:36:04.420\nthen a 5th host all the way up to\nthe ten host maximum that I set.\n\n772\n00:36:04.420 --> 00:36:07.230\nAnd so I could have ten servers up and\nrunning when this gets busy.\n\n773\n00:36:07.230 --> 00:36:12.750\nAnd then as things slow down, it'll prune\nthem off and get us down back to two.\n\n774\n00:36:12.750 --> 00:36:15.640\nSo now I'm not taking\nbackups of my systems.\n\n775\n00:36:15.640 --> 00:36:18.550\nThese aren't snapshots that I can go and\nrestore from.\n\n776\n00:36:18.550 --> 00:36:22.300\nBut if I get a video that goes viral,\nI get a high amount of traffic,\n\n777\n00:36:22.300 --> 00:36:24.700\nI get a denial of service attack,\n\n778\n00:36:24.700 --> 00:36:27.525\nwe start spending up the host\nto be able to survive that.\n\n779\n00:36:27.525 --> 00:36:28.210\nRight?\nAnd\n\n780\n00:36:28.210 --> 00:36:31.600\nnow our systems stay online even\nunder these averse conditions.\n\n781\n00:36:31.600 --> 00:36:34.710\nIt's a different type of availability\nthe most people think of but\n\n782\n00:36:34.710 --> 00:36:38.270\nit's really important and\nit really wasn't all that hard to set up.\n\n783\n00:36:38.270 --> 00:36:39.994\nWe had to create an AMI.\n\n784\n00:36:39.994 --> 00:36:42.132\nRight.\nAn image of an operating system or\n\n785\n00:36:42.132 --> 00:36:45.960\nan instance that is setup\nto perform our application.\n\n786\n00:36:45.960 --> 00:36:50.710\nWe had to create an ELB, a load balancer\nto hide all the complexity for end users.\n\n787\n00:36:50.710 --> 00:36:55.260\nAnd then we had to create an auto-scaling\ngroup in launch configuration that set\n\n788\n00:36:55.260 --> 00:36:59.830\nwhen to add new hosts, what kind of host\nto add, and when to take away those hosts.\n\n789\n00:36:59.830 --> 00:37:04.230\nAnd all of that working together\ncreates a highly available solution\n\n790\n00:37:04.230 --> 00:37:05.880\nthat's really quite powerful.\n\n791\n00:37:05.880 --> 00:37:07.860\nYou couple that with\nanother load balancer and\n\n792\n00:37:07.860 --> 00:37:10.110\nanother region doing the exact same thing.\n\n793\n00:37:10.110 --> 00:37:13.520\nAnd a DNS cname record that's doing\nweighted loads across them with\n\n794\n00:37:13.520 --> 00:37:14.640\na health check.\n\n795\n00:37:14.640 --> 00:37:17.260\nIf one region fails it\nautomatically flips to the other.\n\n796\n00:37:17.260 --> 00:37:19.320\nNow you can scale to huge levels.\n\n797\n00:37:19.320 --> 00:37:23.730\nYou can even do the DNS records with\nthe geo location where it says,\n\n798\n00:37:23.730 --> 00:37:26.140\nif you're in Europe I'm gonna send\nyou to our European load balancer and\n\n799\n00:37:26.140 --> 00:37:29.030\nif you're in Australia we'll send\nyou to the Australian balancer.\n\n800\n00:37:29.030 --> 00:37:31.430\nSo now we get people getting\nthe fastest response possible.\n\n801\n00:37:31.430 --> 00:37:33.530\nNow your website can get even bigger.\n\n802\n00:37:33.530 --> 00:37:35.739\nSo if you've ever wondered how Twitter,\nFacebook,\n\n803\n00:37:35.739 --> 00:37:38.740\nNetflix how those guys handle the massive\namounts of traffic they have?\n\n804\n00:37:38.740 --> 00:37:40.910\nIt's this right here.\n\n805\n00:37:40.910 --> 00:37:41.860\nThis is the way that they do it.\n\n806\n00:37:41.860 --> 00:37:43.720\nNetflix actually started on AWS.\n\n807\n00:37:43.720 --> 00:37:45.490\nTwitter, I think, still is on AWS.\n\n808\n00:37:45.490 --> 00:37:49.350\nSo this is the way they survive\nthose mass amount of traffic.\n\n809\n00:37:49.350 --> 00:37:50.560\nAnd it's all dynamic.\n\n810\n00:37:50.560 --> 00:37:52.980\nSo when the systems are slow,\nyou're prune it back and\n\n811\n00:37:52.980 --> 00:37:54.850\nyou're not paying for\nresources you're not using.\n\n812\n00:37:54.850 --> 00:37:55.600\nIt's really impressive.\n\n813\n00:37:55.600 --> 00:37:58.770\n>> Yeah, Don what I love about this\nis the fact that it really seems very\n\n814\n00:37:58.770 --> 00:37:59.530\ncomplex, right?\n\n815\n00:37:59.530 --> 00:38:01.840\nIt seems just like a lot\nof stuff going on.\n\n816\n00:38:01.840 --> 00:38:03.800\nYou're watching this\nepisode probably thinking,\n\n817\n00:38:03.800 --> 00:38:05.375\nman I'm drinking from a firehose.\n\n818\n00:38:05.375 --> 00:38:06.720\nDon you gotta slow this down.\n\n819\n00:38:06.720 --> 00:38:09.530\nIt should have been a nine farther but\nif you think about it,\n\n820\n00:38:09.530 --> 00:38:12.700\na lot of stuffs that Don are showing\nyou is very simple things, right?\n\n821\n00:38:12.700 --> 00:38:13.330\nCreating AMIs.\n\n822\n00:38:13.330 --> 00:38:14.150\nIt's not hard, right?\n\n823\n00:38:14.150 --> 00:38:14.975\nWe did a whole show on that.\n\n824\n00:38:14.975 --> 00:38:16.290\nThat's very simple thing to do.\n\n825\n00:38:16.290 --> 00:38:18.300\nCreating a load balancer, all the things,\n\n826\n00:38:18.300 --> 00:38:20.840\nall the components we need we\nalready know how to do it.\n\n827\n00:38:20.840 --> 00:38:23.490\nNow, we just gotta put it all together and\n\n828\n00:38:23.490 --> 00:38:26.565\nmake our availability go\nup using those techniques.\n\n829\n00:38:26.565 --> 00:38:27.950\nDon, very very cool stuff.\n\n830\n00:38:27.950 --> 00:38:31.620\nAnything else you wanna\ngive to our wisdom nuggets.\n\n831\n00:38:31.620 --> 00:38:34.910\n>> Just remember there's a lot of\ndifferent components in AWS and\n\n832\n00:38:34.910 --> 00:38:36.340\nindividually they're awesome.\n\n833\n00:38:36.340 --> 00:38:38.030\nWhen you put them\ntogether they're amazing.\n\n834\n00:38:38.030 --> 00:38:39.580\nAnd that's really the key.\n\n835\n00:38:39.580 --> 00:38:43.410\nThat's the real difference between\nsomebody whose a novice at AWS and\n\n836\n00:38:43.410 --> 00:38:44.250\nsomebody whose an expert.\n\n837\n00:38:44.250 --> 00:38:48.500\nThe expert just knows how to put those\npieces together to get an amazing network\n\n838\n00:38:48.500 --> 00:38:50.660\nthat you wouldn't possibly\nafford to build yourself.\n\n839\n00:38:50.660 --> 00:38:53.550\nIt just would be an exorbitant expense.\n\n840\n00:38:53.550 --> 00:38:56.570\nAmazon's already done the legwork,\nwe just take advantage of it.\n\n841\n00:38:56.570 --> 00:38:57.840\n>> That's actually right.\n\n842\n00:38:57.840 --> 00:38:59.800\nDon excellent presentation, thank you for\n\n843\n00:38:59.800 --> 00:39:03.990\nthis explanation letting us know how we\ncan bring those components together and\n\n844\n00:39:03.990 --> 00:39:07.750\nuse that to create a high available\nenvironment for ourselves.\n\n845\n00:39:07.750 --> 00:39:10.440\nThat being said well we finally\ncome to the end of this episode.\n\n846\n00:39:10.440 --> 00:39:11.910\nThank you guys so much for watching.\n\n847\n00:39:11.910 --> 00:39:13.860\nWe're gonna go ahead and\nsign off for ITProTV.\n\n848\n00:39:13.860 --> 00:39:15.740\nI've been your host Danny O'Leary.\n\n849\n00:39:15.740 --> 00:39:16.400\n>> And I'm Don Pezet.\n\n850\n00:39:16.400 --> 00:39:17.576\n>> And we'll see you next time.\n\n851\n00:39:17.576 --> 00:39:23.470\n[MUSIC]\n\n",
          "vimeoId": "150834861"
        }
      ],
      "title": "High Availability"
    },
    {
      "episodes": [
        {
          "description": "In this episode, Daniel and Don dive into Amazon's fault tolerance service known as Elastic Load Balancing. First they go over the basics of ELB, both the abilities and limitations, then they move on to the different types of ELB available (Public and Private types). They also take a look at implementing Health-checks with ELB.",
          "length": "1906",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/amazon-acsa/amazon-acsa-5-1-elastic_load_balancing-111915-1.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/amazon-acsa/amazon-acsa-5-1-elastic_load_balancing-111915-1-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/amazon-acsa/amazon-acsa-5-1-elastic_load_balancing-111915-1-sm.jpg",
          "title": "Elastic Load Balancing",
          "transcript": "WEBVTT\n\n1\n00:00:00.107 --> 00:00:04.088\n[MUSIC]\n\n2\n00:00:04.088 --> 00:00:09.516\nAll right, greetings, everyone and\n\n3\n00:00:09.516 --> 00:00:16.140\nwelcome to another great\nepisode of ITProTV.\n\n4\n00:00:16.140 --> 00:00:20.090\nI'm your host Daniel Lowrie and in today's\nepisode we're gonna be going over some\n\n5\n00:00:20.090 --> 00:00:24.730\nmore AWS certified CIS ops\nadmin available from Amazon.\n\n6\n00:00:24.730 --> 00:00:28.740\nAnd who better to help us trudge through\nthat jungle is no better than Mr.\n\n7\n00:00:28.740 --> 00:00:30.010\nDon Pezet himself.\n\n8\n00:00:30.010 --> 00:00:30.850\nWelcome to the show Don.\n\n9\n00:00:30.850 --> 00:00:31.850\nHow you doing today?\n\n10\n00:00:31.850 --> 00:00:32.680\n>> I am doing great Daniel.\n\n11\n00:00:32.680 --> 00:00:33.910\nThanks for having me back on the show.\n\n12\n00:00:33.910 --> 00:00:38.235\nAnd we're gonna be jumping back in and\ntaking a look at elastic load balancers.\n\n13\n00:00:38.235 --> 00:00:43.285\nWhich I have to say are really one of\nmy most favorite features inside AWS.\n\n14\n00:00:43.285 --> 00:00:45.995\nI guess auto-scaling is\nreally my favorite feature.\n\n15\n00:00:45.995 --> 00:00:47.955\nBut ELB is really cool.\n\n16\n00:00:47.955 --> 00:00:51.515\nAnd it's because I've had to setup\nphysical load balancers before and\n\n17\n00:00:51.515 --> 00:00:52.525\nit's not a good time.\n\n18\n00:00:52.525 --> 00:00:54.280\nAnd it's incredibly expensive.\n\n19\n00:00:54.280 --> 00:00:57.340\nELBs are super easy and\ndo just as good a job.\n\n20\n00:00:57.340 --> 00:00:58.980\nSo we're gonna get\na chance to see that and\n\n21\n00:00:58.980 --> 00:01:00.680\nit's definitely a technology\nyou want to implement.\n\n22\n00:01:00.680 --> 00:01:03.650\nIt's also definitely a technology\nthat's gonna turn up on the exam.\n\n23\n00:01:03.650 --> 00:01:07.310\n>> Yeah, also ELBs are very,\nvery cool to be able to say you know what?\n\n24\n00:01:07.310 --> 00:01:10.970\nI'm gonna spread out my data, right,\nlet some of this handle over here,\n\n25\n00:01:10.970 --> 00:01:12.580\nlet some of that handle over there.\n\n26\n00:01:12.580 --> 00:01:17.600\nBut maybe, I know I for myself am\nnot as familiar with how that works,\n\n27\n00:01:17.600 --> 00:01:22.380\nhow Amazon's ELBs, the elastic load\nbalancers, actually do what it is they do.\n\n28\n00:01:22.380 --> 00:01:23.340\nSo Don you're gonna help us out and\n\n29\n00:01:23.340 --> 00:01:27.070\ngive us a little bit of a basic\nrundown of how we can use ELBs, right?\n\n30\n00:01:27.070 --> 00:01:27.590\n>> Absolutely.\n\n31\n00:01:27.590 --> 00:01:29.420\nCuz there's a lot of different\nways that we can use them.\n\n32\n00:01:29.420 --> 00:01:31.290\nAnd if you're watching\nthese shows in order,\n\n33\n00:01:31.290 --> 00:01:34.470\nI guess it all kind of falls in place, but\nif you're jumping around in the series,\n\n34\n00:01:34.470 --> 00:01:37.340\nyou might have already watched\nsome our our route 53 shows.\n\n35\n00:01:37.340 --> 00:01:41.900\nAnd in route 53, you can actually do\nsome basic load distribution, you know,\n\n36\n00:01:41.900 --> 00:01:44.890\nto send people to different nodes.\n\n37\n00:01:44.890 --> 00:01:48.220\nAnd really kind of distribute\nthe load of traffic on your network.\n\n38\n00:01:48.220 --> 00:01:49.430\nBut it's not very accurate.\n\n39\n00:01:49.430 --> 00:01:51.210\nIt's not really the best way to do it.\n\n40\n00:01:51.210 --> 00:01:54.260\nSo there's other options that are out\nthere, and ELB is one of them.\n\n41\n00:01:54.260 --> 00:01:57.460\nNow, a lot of times,\nwe'll use ELBs in combination.\n\n42\n00:01:57.460 --> 00:01:59.960\nWith route 53 to get\nthe best of both worlds,\n\n43\n00:01:59.960 --> 00:02:02.310\nwhich we'll see in the route 53 episodes.\n\n44\n00:02:02.310 --> 00:02:05.330\nBut for right now,\nlet's just focus in on ELB.\n\n45\n00:02:05.330 --> 00:02:08.530\nNow by this point you guys have already\nmoved through, got some good experience\n\n46\n00:02:08.530 --> 00:02:11.440\nwith AWS, so you've more than\nlikely already worked with ELBs.\n\n47\n00:02:11.440 --> 00:02:12.750\nBut just as a quick recap,\n\n48\n00:02:12.750 --> 00:02:16.730\nlet me show you how these things work,\ngot a little diagram fired up here.\n\n49\n00:02:16.730 --> 00:02:19.200\nNormally, when people\nare outside on the internet and\n\n50\n00:02:19.200 --> 00:02:23.160\nthey want to come to a web page,\nthe old model was that you had one server.\n\n51\n00:02:23.160 --> 00:02:25.650\nEverybody would browse that one server.\n\n52\n00:02:25.650 --> 00:02:27.860\nSo all the traffic would go right here.\n\n53\n00:02:27.860 --> 00:02:31.780\nBut, what happened when things\ngot too busy for that server?\n\n54\n00:02:31.780 --> 00:02:33.550\nWell, we had to make a choice.\n\n55\n00:02:33.550 --> 00:02:36.410\nYou could scale up, or scale out.\n\n56\n00:02:36.410 --> 00:02:42.510\nScaling up meant add more memory, add more\ncpu, right just make the server stronger.\n\n57\n00:02:42.510 --> 00:02:45.610\nNow, you can do that right,\nit's certainly within our capabilities.\n\n58\n00:02:45.610 --> 00:02:46.520\nIn the physical word,\n\n59\n00:02:46.520 --> 00:02:49.360\nwhen you're buying physical servers\nit's kind of a challenge, right?\n\n60\n00:02:49.360 --> 00:02:54.490\nDaniel have you ever bought like a server\nthat was a four processor server,\n\n61\n00:02:54.490 --> 00:02:56.150\nbut you only bought it with two CPU's.\n\n62\n00:02:56.150 --> 00:02:58.530\nAnd you say, hey, down the road,\nI can add some more CPU's.\n\n63\n00:02:58.530 --> 00:02:59.190\nHave you ever done it?\n\n64\n00:02:59.190 --> 00:03:00.020\n>> Yes.\n\n65\n00:03:00.020 --> 00:03:01.953\n>> How easy was it for\nyou to find those CPU's?\n\n66\n00:03:01.953 --> 00:03:02.990\n>> [LAUGH] Yeah.\n\n67\n00:03:02.990 --> 00:03:06.110\nIt does get a little bit challenging\nwhen you're ready to scale that thing up\n\n68\n00:03:06.110 --> 00:03:08.540\nbecause especially if it's\ngotten a little bit older,\n\n69\n00:03:08.540 --> 00:03:10.460\nthen it can really get difficult to find.\n\n70\n00:03:10.460 --> 00:03:11.720\n>> Yep.\nAnd expensive.\n\n71\n00:03:11.720 --> 00:03:13.850\nAnd you've gotta do processor matching and\nall that.\n\n72\n00:03:13.850 --> 00:03:15.280\nIt's really challenging.\n\n73\n00:03:15.280 --> 00:03:18.620\nSo scaling up isn't always\nthe easiest thing to do.\n\n74\n00:03:18.620 --> 00:03:21.900\nAnd even if it easy, there's a limit.\n\n75\n00:03:21.900 --> 00:03:24.630\nWhat's the maximum amount of\nmemory you can get in that server?\n\n76\n00:03:24.630 --> 00:03:27.240\nWhat's the maximum number of\nCPUs you can get in that server.\n\n77\n00:03:27.240 --> 00:03:29.140\nThere is a limit.\n\n78\n00:03:29.140 --> 00:03:32.660\nAnd even if there wasn't a limit that\none server is a single point of failure.\n\n79\n00:03:32.660 --> 00:03:35.520\nIf that server goes down,\nyou just lost everything.\n\n80\n00:03:35.520 --> 00:03:39.780\nSo scaling up really only\nworks out to a certain level.\n\n81\n00:03:39.780 --> 00:03:44.030\nAnd when I say it can be easy on AWS,\nif you have an EC2 instance,\n\n82\n00:03:44.030 --> 00:03:45.680\nit is super easy to scale up.\n\n83\n00:03:45.680 --> 00:03:47.390\nYou can just throw more memory at one.\n\n84\n00:03:47.390 --> 00:03:51.380\nAnd I think the limit right now,\nyou can do I know you can do 128,\n\n85\n00:03:51.380 --> 00:03:53.420\ncan you do 256 gigs of memory?\n\n86\n00:03:53.420 --> 00:03:55.460\nI think they have some\nof the bigger ones now.\n\n87\n00:03:55.460 --> 00:03:57.860\nBut you do still have\nthat limit you'll hit.\n\n88\n00:03:57.860 --> 00:04:02.140\nAnd it's usually RAM, that's the big limit\nand then you just can't scale up anymore.\n\n89\n00:04:02.140 --> 00:04:04.650\nSo scale out's the better option and\nwhen we scale out,\n\n90\n00:04:04.650 --> 00:04:06.310\nwe're just adding more servers.\n\n91\n00:04:06.310 --> 00:04:09.040\nAnd when you add more servers,\nyou get some cool stuff here, right?\n\n92\n00:04:09.040 --> 00:04:12.290\nThe first cool thing is you don't have\na single point of failure anymore.\n\n93\n00:04:12.290 --> 00:04:16.810\nIf I scale out to five servers and\none fails, I still have four more.\n\n94\n00:04:16.810 --> 00:04:18.070\nI'm doing okay.\n\n95\n00:04:18.070 --> 00:04:21.980\nAnd if I'm using something like\nauto-scaling, I can have it grow and\n\n96\n00:04:21.980 --> 00:04:24.810\nshrink the number of those\nservers based on the load on\n\n97\n00:04:24.810 --> 00:04:26.830\nmy network at that given time.\n\n98\n00:04:26.830 --> 00:04:29.920\nAnd so\nI might need ten servers during peak time,\n\n99\n00:04:29.920 --> 00:04:33.420\nand only need two servers\nduring the middle of the night.\n\n100\n00:04:33.420 --> 00:04:37.200\nAnd so I can scale up and then scale back\ndown, but really I'm scaling out and\n\n101\n00:04:37.200 --> 00:04:39.680\nscaling back in based on\nthe load on my network.\n\n102\n00:04:39.680 --> 00:04:42.590\nAnd I'm only paying for what I use,\nthat's really powerful.\n\n103\n00:04:42.590 --> 00:04:44.860\nBut the challenge of having\nmore than one server is,\n\n104\n00:04:44.860 --> 00:04:47.550\nhow do I get my users, right,\nlet's say it's a website.\n\n105\n00:04:47.550 --> 00:04:51.850\nSo the visitors to my website How do I get\nthem distributed across those systems?\n\n106\n00:04:51.850 --> 00:04:53.390\nSystems can't really do it themselves.\n\n107\n00:04:53.390 --> 00:04:54.330\nWell they can try right.\n\n108\n00:04:54.330 --> 00:04:56.310\nLike Microsoft Windows has some\nstuff where they can try and\n\n109\n00:04:56.310 --> 00:04:57.240\nbalance them themselves.\n\n110\n00:04:57.240 --> 00:04:58.900\nAnd even in the Linux world you can try.\n\n111\n00:04:58.900 --> 00:05:01.410\nYou can use DNS to do distribution.\n\n112\n00:05:01.410 --> 00:05:03.410\nAnd with DNS you can do\nlike round robin DNS,\n\n113\n00:05:03.410 --> 00:05:06.680\nwhere one person does the DNS hookup for\nyour website and they go to one server,\n\n114\n00:05:06.680 --> 00:05:09.520\nthe next person gets a different result\nand they go to a different server.\n\n115\n00:05:09.520 --> 00:05:12.320\nBut DNS doesn't do a great\njob of evaluating whether, or\n\n116\n00:05:12.320 --> 00:05:15.540\nnot the nodes are actually\nonline at a given time.\n\n117\n00:05:15.540 --> 00:05:19.420\nSo, the traditional solution is\nto get a hardware load balancer.\n\n118\n00:05:19.420 --> 00:05:21.850\nAnd there's like the F five big IP boxes.\n\n119\n00:05:21.850 --> 00:05:23.060\nI've worked with those.\n\n120\n00:05:23.060 --> 00:05:24.900\nThere's the lone wolf boxes.\n\n121\n00:05:24.900 --> 00:05:26.180\nThere are several others out there.\n\n122\n00:05:26.180 --> 00:05:29.480\nThat our hardware devices that\ncan load balance your systems so\n\n123\n00:05:29.480 --> 00:05:33.700\nthat when clients come in,\nit evenly distributes across the nodes.\n\n124\n00:05:33.700 --> 00:05:39.150\nWell in AWS, specifically in EC2, we have\nelastic load balancers that do that.\n\n125\n00:05:39.150 --> 00:05:41.230\nAnd so we go back to my diagram,\nthat's kinda what I'm showing here.\n\n126\n00:05:41.230 --> 00:05:44.240\nAn ELB, I used a router icon.\n\n127\n00:05:44.240 --> 00:05:48.060\nIt's not necessarily a router,\nbut oftentimes it is.\n\n128\n00:05:48.060 --> 00:05:51.420\nAnd what happens is the traffic\ncomes into that system, and\n\n129\n00:05:51.420 --> 00:05:54.360\nwhoever's outside on the Internet,\nthey just see the load down.\n\n130\n00:05:54.360 --> 00:05:56.410\nSo, they don't see all\nthe stuff that's behind it.\n\n131\n00:05:56.410 --> 00:05:59.570\nAnd when they hit that load down server,\nit then makes a decision.\n\n132\n00:05:59.570 --> 00:06:01.790\nAnd it says, okay,\nI'm going to send you over to this server.\n\n133\n00:06:01.790 --> 00:06:04.800\nI'm going to send the next person over to\nthis server, and another person over here.\n\n134\n00:06:04.800 --> 00:06:06.850\nAnd it starts distributing evenly.\n\n135\n00:06:06.850 --> 00:06:09.150\nNow that kind of sounds like round robin.\n\n136\n00:06:09.150 --> 00:06:09.970\nI just bounce my\n\n137\n00:06:09.970 --> 00:06:12.430\nusers across these different servers\nover and over and over again.\n\n138\n00:06:12.430 --> 00:06:16.810\nBut here's the problem,\nwhat if this is a webpage, and\n\n139\n00:06:16.810 --> 00:06:18.930\none person comes and\nhits the first server.\n\n140\n00:06:18.930 --> 00:06:22.560\nAnd they're like doing a lot of research,\nbefore making their purchase, right.\n\n141\n00:06:22.560 --> 00:06:25.200\nSo they're browsing through\nyour entire catalog.\n\n142\n00:06:25.200 --> 00:06:26.770\nThey're looking at all of\nthese different items.\n\n143\n00:06:26.770 --> 00:06:28.560\nSo they're doing a lot of browsing.\n\n144\n00:06:28.560 --> 00:06:31.670\nAnother person comes to the second server,\nthey just look at one thing and\n\n145\n00:06:31.670 --> 00:06:32.680\nthen they leave the site.\n\n146\n00:06:32.680 --> 00:06:34.710\nTheir connection is over really fast.\n\n147\n00:06:34.710 --> 00:06:37.760\nThe first user is still connected\nto this server up here,\n\n148\n00:06:37.760 --> 00:06:39.600\nthe second user's already moved on.\n\n149\n00:06:39.600 --> 00:06:41.950\nSo, now this server is not\nreally doing anything.\n\n150\n00:06:41.950 --> 00:06:45.570\nIf we're round robining,\nthe next person goes to the third server.\n\n151\n00:06:45.570 --> 00:06:49.220\nAnd then the fourth person goes\nright back to this first server.\n\n152\n00:06:49.220 --> 00:06:52.650\nWell, the fourth person is hitting the\nserver the same time as that first person.\n\n153\n00:06:52.650 --> 00:06:55.030\nThe first person is still there and\nbrowsing.\n\n154\n00:06:55.030 --> 00:06:56.630\nRound Robin DNS doesn't know that.\n\n155\n00:06:56.630 --> 00:06:58.640\nIt doesn't pay attention to that piece.\n\n156\n00:06:58.640 --> 00:07:00.830\nAnd so it's not even load balancing.\n\n157\n00:07:01.870 --> 00:07:04.940\nWe need to do a DNS Round Robin,\nit's not uncommon to come in and\n\n158\n00:07:04.940 --> 00:07:09.580\nfind, 40% of your load is on this server\nand 10% of your load is on this server.\n\n159\n00:07:09.580 --> 00:07:12.510\nIt's very uneven because it's\nnot tracking those sessions.\n\n160\n00:07:12.510 --> 00:07:15.230\nELB does track those sessions.\n\n161\n00:07:15.230 --> 00:07:19.010\nELB is aware that you still have\na user active on that first server,\n\n162\n00:07:19.010 --> 00:07:21.160\neven though it's an hour later,\nor however long.\n\n163\n00:07:21.160 --> 00:07:24.050\nIt's aware of that happening,\nand it balances accordingly so\n\n164\n00:07:24.050 --> 00:07:25.460\nit can go out of order.\n\n165\n00:07:25.460 --> 00:07:27.970\nIt can say,\nI know I just sent somebody to server one,\n\n166\n00:07:27.970 --> 00:07:29.760\nI'm gonna skip server two this time and\n\n167\n00:07:29.760 --> 00:07:32.780\nassign the next person to server three\nbecause server two is just a little busy.\n\n168\n00:07:32.780 --> 00:07:36.440\n>> So it's a much more intelligent system\nof choosing where it should go and\n\n169\n00:07:36.440 --> 00:07:37.410\nwhere it shouldn't go.\n\n170\n00:07:37.410 --> 00:07:38.160\n>> Absolutely.\n\n171\n00:07:38.160 --> 00:07:39.440\nAnd you're never gonna have it perfect.\n\n172\n00:07:39.440 --> 00:07:40.290\nYou're never gonna walk in and\n\n173\n00:07:40.290 --> 00:07:43.470\nsee exactly 33% of your traffic\non each of these servers.\n\n174\n00:07:43.470 --> 00:07:45.120\nAll right.\nIt's always gonna be a little off.\n\n175\n00:07:45.120 --> 00:07:46.360\nBut it'll be close.\n\n176\n00:07:46.360 --> 00:07:48.610\nYou might have 40% here,\n30% here, 30% here.\n\n177\n00:07:48.610 --> 00:07:51.250\nSomething where it's at least close.\n\n178\n00:07:51.250 --> 00:07:53.454\nWith round robining it'll\noften be way off and\n\n179\n00:07:53.454 --> 00:07:55.894\nit's because it's not\ntracking those sessions.\n\n180\n00:07:55.894 --> 00:07:58.726\nSo getting an ELB to do\nthis is pretty awesome.\n\n181\n00:07:58.726 --> 00:08:02.581\nWhere it gets even better,\nbut wait there's more,\n\n182\n00:08:02.581 --> 00:08:03.520\n>> [LAUGH]\n\n183\n00:08:03.520 --> 00:08:05.930\n>> is these nodes that are behind the ELB,\n\n184\n00:08:05.930 --> 00:08:09.320\nthey don't have to be in\nthe same availability zone,\n\n185\n00:08:09.320 --> 00:08:12.130\nthey can be in different\navailability zones.\n\n186\n00:08:12.130 --> 00:08:16.120\nNow remember, and this is important on the\nexam, when we talk about AWS, and we talk\n\n187\n00:08:16.120 --> 00:08:19.540\nabout the EC2 data centers that are out\nthere, just all that it is, data centers.\n\n188\n00:08:19.540 --> 00:08:22.940\nYou have regions and\nyou have availability zones.\n\n189\n00:08:22.940 --> 00:08:23.740\nAll right.\n\n190\n00:08:23.740 --> 00:08:26.590\nThe regions are talking about\nthe geographic locations.\n\n191\n00:08:26.590 --> 00:08:30.360\nSo, here in the US, we have US east,\nwhich is north Virginia.\n\n192\n00:08:30.360 --> 00:08:35.510\nWe have US west Oregon, and\nthen we have US west California.\n\n193\n00:08:35.510 --> 00:08:36.490\nWhat do they call that one?\n\n194\n00:08:36.490 --> 00:08:38.030\nHang on.\nLet's see if we can\n\n195\n00:08:38.030 --> 00:08:39.290\nlook that up here real quick.\n\n196\n00:08:39.290 --> 00:08:45.140\nSo, if I do my AWS regions,\nwe'll just pull this up real quick here.\n\n197\n00:08:45.140 --> 00:08:49.650\nSo, in the US, though, we have a couple\nof different ones that are out there, and\n\n198\n00:08:49.650 --> 00:08:53.910\nbasically, when you pick, here we go, so\n\n199\n00:08:53.910 --> 00:08:58.090\nwe've got US east, which is\nNorth Virginia, we've got US west,\n\n200\n00:08:58.090 --> 00:09:01.230\nwhich is North, they just call it Northern\nCalifornia, that's not very exciting.\n\n201\n00:09:01.230 --> 00:09:02.530\nAnd then Oregon, right?\n\n202\n00:09:02.530 --> 00:09:04.890\nSo those are regions, all right?\n\n203\n00:09:04.890 --> 00:09:09.790\nBut inside of a region, so\ninside of US East North Virginia,\n\n204\n00:09:09.790 --> 00:09:12.710\nthere's multiple availability zones.\n\n205\n00:09:12.710 --> 00:09:14.940\nAnd in some locations, there might not be.\n\n206\n00:09:14.940 --> 00:09:17.330\nThere might just be one AZ and that's it.\n\n207\n00:09:17.330 --> 00:09:20.040\nIn other locations like US East,\nthere might be four or\n\n208\n00:09:20.040 --> 00:09:21.960\neven five availability zones.\n\n209\n00:09:21.960 --> 00:09:23.200\nAnd what does that mean?\n\n210\n00:09:23.200 --> 00:09:26.800\nWell, it means if I were to get in my\ncar and drive to North Virginia and\n\n211\n00:09:26.800 --> 00:09:30.240\ngo to the Amazon Data Center and\nmanage to get there and not get arrested,\n\n212\n00:09:31.290 --> 00:09:35.630\nthat I would actually find four\ncompletely separate data centers.\n\n213\n00:09:35.630 --> 00:09:40.220\nFour completely isolated and independent,\nautonomous environments, right?\n\n214\n00:09:40.220 --> 00:09:42.950\nIf one data center failed,\nthe other three would still be up and\n\n215\n00:09:42.950 --> 00:09:44.220\nrunning and be happy.\n\n216\n00:09:44.220 --> 00:09:48.500\nWell, that means if I put my\nnodes in these different AZs,\n\n217\n00:09:48.500 --> 00:09:53.710\nI'm getting redundant network connections,\nredundant power, redundant knock staff.\n\n218\n00:09:53.710 --> 00:09:55.480\nRight, all full of redundant.\n\n219\n00:09:55.480 --> 00:09:57.680\nThe problem is though,\nif I start spreading this out is,\n\n220\n00:09:57.680 --> 00:10:01.340\nhow do I balance my traffic across those,\nand the ELBs will do that.\n\n221\n00:10:01.340 --> 00:10:04.290\nSo I might have this node in one\n\n222\n00:10:04.290 --> 00:10:07.420\navailability zone in this one in\nanother and this one in a third.\n\n223\n00:10:07.420 --> 00:10:09.990\nAnd now I've got redundancy\nacross those AZs.\n\n224\n00:10:09.990 --> 00:10:15.580\nRight, but\nI can't do a redundancy across regions.\n\n225\n00:10:15.580 --> 00:10:20.250\nIf I want to have one server in U.S.\neast, and one server in U.S.\n\n226\n00:10:20.250 --> 00:10:25.100\nwest, and another serve in EU west,\nright the European west or Ireland.\n\n227\n00:10:25.100 --> 00:10:29.050\nRight, I can't use one\nELB in front of that.\n\n228\n00:10:29.050 --> 00:10:34.920\nInstead what I'll have to do is\nplace one ELB in each region,\n\n229\n00:10:34.920 --> 00:10:38.440\nand then I can use DNS round robining, or\n\n230\n00:10:38.440 --> 00:10:42.000\nany of the various DNS route policies,\nif you watch our DNS shows, you'll see.\n\n231\n00:10:42.000 --> 00:10:45.670\nBut I can use DNS to then map to the ELBs.\n\n232\n00:10:45.670 --> 00:10:48.870\nAnd then the ELBs will map to\nthe servers and the AZs behind.\n\n233\n00:10:48.870 --> 00:10:54.070\nSo that's where I say we normally use\na combination of DNS redundancy and\n\n234\n00:10:54.070 --> 00:10:58.110\nELBs to get that nice resilient\nenvironment that we want.\n\n235\n00:10:58.110 --> 00:11:01.510\nBut an ELB can have hosts behind\nit that are in more than one AZ.\n\n236\n00:11:01.510 --> 00:11:02.990\nBut definitely remember that for the exam,\n\n237\n00:11:02.990 --> 00:11:07.070\nthe difference between a region\nIn an availability zone, right?\n\n238\n00:11:07.070 --> 00:11:10.500\nAZ as availability zones\nare inside of the region.\n\n239\n00:11:10.500 --> 00:11:12.890\nAnd an ELB is tied to a region.\n\n240\n00:11:12.890 --> 00:11:14.780\n>> Now Don, are there any other\nlimitations that we need to be\n\n241\n00:11:14.780 --> 00:11:16.309\naware of when it comes to these ELBs?\n\n242\n00:11:17.920 --> 00:11:23.360\n>> The EOBs themselves, Amazon manages\nthem, so they are actually Linux servers.\n\n243\n00:11:23.360 --> 00:11:24.480\nWhen you spin up an ELB,\n\n244\n00:11:24.480 --> 00:11:28.210\nit is actually firing up a Linux server\nin the instance that's running, but\n\n245\n00:11:28.210 --> 00:11:31.690\nit's completely managed by Amazon,\nso you don't have access to it.\n\n246\n00:11:31.690 --> 00:11:34.470\nYou don't know what operating system it's\nrunning, you don't do updates for it,\n\n247\n00:11:34.470 --> 00:11:36.710\nAmazon manages it all.\n\n248\n00:11:36.710 --> 00:11:39.970\nBut there is a limitation here\nas far as their resiliency.\n\n249\n00:11:39.970 --> 00:11:41.990\nAmazon tries to make them redundant, but\n\n250\n00:11:41.990 --> 00:11:45.540\nat the end of the day,\nthat ELB is tied to a region.\n\n251\n00:11:45.540 --> 00:11:47.810\nAnd if that ELB were to fail for\nsome reason,\n\n252\n00:11:48.970 --> 00:11:52.610\nwell it doesn't matter how many nodes\nyou have behind it, the ELB is offline.\n\n253\n00:11:52.610 --> 00:11:57.460\nAnd so if you need true high availability,\nyou need to\n\n254\n00:11:57.460 --> 00:12:00.960\nhave ELBs in more than one region, and you\nneed to use DNS to achieve that, right.\n\n255\n00:12:00.960 --> 00:12:05.750\nSo, ELB cannot be the full 100%\nsolution for high availability.\n\n256\n00:12:05.750 --> 00:12:09.270\nIt does happen, and a lot of people think\nthat this eliminates a single point of\n\n257\n00:12:09.270 --> 00:12:12.480\nfailure, but the ELB itself\nis a single point of failure.\n\n258\n00:12:12.480 --> 00:12:15.670\nOne that Amazon manages, and\nmake sure that they react to you very,\n\n259\n00:12:15.670 --> 00:12:18.060\nvery quickly, but\nit is still a single point failure.\n\n260\n00:12:18.060 --> 00:12:21.820\n>> Okay.\n>> All right, so let's see this in action.\n\n261\n00:12:21.820 --> 00:12:23.108\nIf we want to work with ELBS,\n\n262\n00:12:23.108 --> 00:12:26.030\nI'm going to jump over to my\ncouncil wherever I left that thing.\n\n263\n00:12:26.030 --> 00:12:27.210\nHere it is.\n\n264\n00:12:27.210 --> 00:12:31.980\nAnd in my council, I'm just going to right\ninto EC2, and in my EC2 I'm going to\n\n265\n00:12:31.980 --> 00:12:35.350\nsee my instances, and I've got a couple\nof instances floating around here so\n\n266\n00:12:35.350 --> 00:12:40.180\nI've got these US East web01,\nUS East web02, and if I look at them,\n\n267\n00:12:40.180 --> 00:12:46.375\nsee how they are both in this us-east-1c,\nor I guess its kind of small, there we go.\n\n268\n00:12:46.375 --> 00:12:49.070\nUs-east-1c.\n\n269\n00:12:49.070 --> 00:12:53.680\nUs East one,\nthat is the region that this is in.\n\n270\n00:12:53.680 --> 00:12:57.500\nAnd then c,\nthat is my availability zone, right.\n\n271\n00:12:57.500 --> 00:13:02.560\nYou create an instance, so if I make\na new instance, and I'll just a launch\n\n272\n00:13:02.560 --> 00:13:07.560\na T1 micro here real quick, and\nwhen I go to launch it, it's\n\n273\n00:13:07.560 --> 00:13:10.770\ngoing to ask me some information here like\nthe number of instances I want to spin up,\n\n274\n00:13:10.770 --> 00:13:15.380\nnetwork that I want to choose and see how\nmy network here is just my default vpc, so\n\n275\n00:13:15.380 --> 00:13:18.230\nI've got this itprotveast one and\nthat's that.\n\n276\n00:13:18.230 --> 00:13:18.850\nRight?\n\n277\n00:13:18.850 --> 00:13:22.790\nBut the next question it\nasks Is my subnet, right.\n\n278\n00:13:22.790 --> 00:13:28.140\nAnd my subnet now says no preference,\ndefault subnet in any availability zone.\n\n279\n00:13:29.420 --> 00:13:31.650\nRolling the dice on this one,\nwho knows what we will get.\n\n280\n00:13:31.650 --> 00:13:36.470\nBut if I drop that down, here I can\npick between the availability zones.\n\n281\n00:13:36.470 --> 00:13:41.530\nAnd I've got a, c, d, and e, the four\navailability zones in North Virginia.\n\n282\n00:13:41.530 --> 00:13:43.040\nWhat happened to b?\n\n283\n00:13:43.040 --> 00:13:47.220\nI actually don't know the history on this\none, but b is not available for uses and\n\n284\n00:13:47.220 --> 00:13:48.230\navailability zone.\n\n285\n00:13:48.230 --> 00:13:50.410\nI'm not even sure that\nb even exists any more.\n\n286\n00:13:50.410 --> 00:13:52.760\nIt might be a data center that\nthey phased out for some reason.\n\n287\n00:13:52.760 --> 00:13:54.810\nBut it doesn't show up as\na usable availability zone.\n\n288\n00:13:54.810 --> 00:13:56.560\nBut it doesn't matter,\nwe've got a, c, d, and e.\n\n289\n00:13:56.560 --> 00:13:58.800\nYou've got four different\nones you can pick from.\n\n290\n00:13:58.800 --> 00:14:02.360\nWell my two servers that\nI already have are in c.\n\n291\n00:14:02.360 --> 00:14:04.280\nNow why are they in C?\n\n292\n00:14:04.280 --> 00:14:08.170\nWell, it's because I didn't pick,\nwhen I created those two instances I just\n\n293\n00:14:08.170 --> 00:14:10.250\nlaunched through the wizard\nas fast as I could.\n\n294\n00:14:10.250 --> 00:14:14.210\nAnd so Amazon looked at their\nown zones and they said\n\n295\n00:14:14.210 --> 00:14:18.080\nthat zone C has the least amount of stuff\nin it right now, so we'll put you there.\n\n296\n00:14:18.080 --> 00:14:22.510\nRight, so Amazon is basing this on their\nown availability, but I need to get\n\n297\n00:14:22.510 --> 00:14:27.110\ninvolved now, because I want to make\nsure that I have redundancy beyond AZ.\n\n298\n00:14:27.110 --> 00:14:31.990\nIt's nice that zone C is the least used\nright now, but I want to put somebody in\n\n299\n00:14:31.990 --> 00:14:36.120\nput zone D so that I have more than one\nzone involved in this load balancer.\n\n300\n00:14:36.120 --> 00:14:39.280\nSo, I'm going to whip up\nanother instance right here and\n\n301\n00:14:39.280 --> 00:14:42.420\nI'll just leave the rest as the defaults,\nyou know you would come in and\n\n302\n00:14:42.420 --> 00:14:45.050\nset these however you need for\nyour instance.\n\n303\n00:14:45.050 --> 00:14:47.470\nAll right, I won't mess with my storage.\n\n304\n00:14:47.470 --> 00:14:53.734\nFor a tag I'll call this\none itprotv_us_east_web03.\n\n305\n00:14:53.734 --> 00:14:56.550\nThis is my third web server.\n\n306\n00:14:56.550 --> 00:15:00.650\nAnd we'll get tied to a configuration,\nor a security group.\n\n307\n00:15:00.650 --> 00:15:03.510\nLet's see, I've got one for\nweb servers, there we go.\n\n308\n00:15:03.510 --> 00:15:05.040\nAnd we'll spin that up, right.\n\n309\n00:15:05.040 --> 00:15:07.370\nSo now I'm launching an instance and\n\n310\n00:15:07.370 --> 00:15:13.030\nthat instance is going to be in\nthis other availability zone, okay.\n\n311\n00:15:13.030 --> 00:15:17.020\nNow right now, I've got these little\ninstances up, and they're web servers.\n\n312\n00:15:17.020 --> 00:15:21.450\nIf a user wanted to browse to one of these\nthings they could by its individual IP.\n\n313\n00:15:21.450 --> 00:15:25.150\nSo if I return back to my instance screen\nand I take on server that's already up,\n\n314\n00:15:25.150 --> 00:15:26.760\nlike I'll take web01 here.\n\n315\n00:15:26.760 --> 00:15:32.240\nI can come down here and find its\nIP address, and I'll just copy that\n\n316\n00:15:33.630 --> 00:15:38.750\nand I can browse that IP, and\nI should get its webpage.\n\n317\n00:15:38.750 --> 00:15:39.530\nThere it is.\n\n318\n00:15:39.530 --> 00:15:40.560\nOkay, so I can get to that node.\n\n319\n00:15:41.640 --> 00:15:43.710\nBut if this node goes offline\nI can't get to it anymore.\n\n320\n00:15:43.710 --> 00:15:48.319\nSo if I create a DNS entry that says\nwww.itprotv.net is tied to this IP, and\n\n321\n00:15:48.319 --> 00:15:51.853\nthat node goes down,\nI can't get to the web page, right?\n\n322\n00:15:51.853 --> 00:15:56.881\nSo no redundancy, and I'm not getting\nany kind of distribution of load.\n\n323\n00:15:56.881 --> 00:15:58.650\nAll the work is being\ndone by this one server.\n\n324\n00:15:58.650 --> 00:16:01.887\nIf it gets really busy, Mean it's kind\nof like a denial of service, right?\n\n325\n00:16:01.887 --> 00:16:03.442\nThat you just can't access the page.\n\n326\n00:16:03.442 --> 00:16:05.170\nThe server's too busy.\n\n327\n00:16:05.170 --> 00:16:06.590\nSo, I wanna balance that.\n\n328\n00:16:06.590 --> 00:16:09.650\nNot just on this one node, but\nacross more than one node, and\n\n329\n00:16:09.650 --> 00:16:10.420\nI'll use an ELB to do it.\n\n330\n00:16:10.420 --> 00:16:11.740\nAll right.\n\n331\n00:16:11.740 --> 00:16:14.190\nFortunately, ELB's\nare really easy to setup.\n\n332\n00:16:14.190 --> 00:16:16.460\nAll we have to do is right\nhere in our dashboard.\n\n333\n00:16:16.460 --> 00:16:20.270\nIf you go on the left side, you'll\nfind the load balancers right there.\n\n334\n00:16:20.270 --> 00:16:22.250\nAnd here's where we can\ncreate some load balancers.\n\n335\n00:16:22.250 --> 00:16:24.050\nAnd I've actually already got one created,\napparently.\n\n336\n00:16:24.050 --> 00:16:25.040\nI'll create a new one.\n\n337\n00:16:25.040 --> 00:16:28.290\nSo, I'm gonna whip up a new load balancer,\nand I'll give it a name.\n\n338\n00:16:28.290 --> 00:16:32.494\nAnd so\nI'll call this one itprotv-us-east-web.\n\n339\n00:16:33.590 --> 00:16:35.560\nWhich I think is actually what\nthe other one was called, so\n\n340\n00:16:35.560 --> 00:16:37.770\nI'll call this one web server.\n\n341\n00:16:37.770 --> 00:16:40.120\nSo, you don't want to duplicate the name.\n\n342\n00:16:40.120 --> 00:16:43.520\nWhen I name it, notice how I am\ncalling it itprotv because that is us,\n\n343\n00:16:43.520 --> 00:16:44.680\nI want to remember that what it is.\n\n344\n00:16:44.680 --> 00:16:47.720\nIf you deal with multiple clients then it\nis nice to have names that differentiate\n\n345\n00:16:47.720 --> 00:16:48.550\nthis stuff pretty easily.\n\n346\n00:16:48.550 --> 00:16:51.675\nAnd I also said us-east,\nnow why did I do that?\n\n347\n00:16:51.675 --> 00:16:54.579\nRemember your load balancers\nare tied to your region and\n\n348\n00:16:54.579 --> 00:16:58.361\nI'm gonna know what region it's in\ncuz I'll see it right here in the UI.\n\n349\n00:16:58.361 --> 00:17:01.351\nBut at the end of the month when I'm\nlooking at billing reports and things like\n\n350\n00:17:01.351 --> 00:17:04.580\nthat, it can be kind of confusing so I\nlike to have the name include the region.\n\n351\n00:17:04.580 --> 00:17:05.560\nThat's just something I do.\n\n352\n00:17:05.560 --> 00:17:06.620\nYou don't have to do it that way.\n\n353\n00:17:06.620 --> 00:17:08.380\nYou can name them whatever you want.\n\n354\n00:17:08.380 --> 00:17:10.650\nBut the next thing is\nwhat's really important.\n\n355\n00:17:10.650 --> 00:17:15.890\nBecause it says Create LB Inside and\nI've gotta pick a VPC.\n\n356\n00:17:15.890 --> 00:17:19.930\nNow I mentioned How my load\nbalancer can contain nodes\n\n357\n00:17:19.930 --> 00:17:22.530\nthat are in more than one\navailability zone, right?\n\n358\n00:17:22.530 --> 00:17:24.700\nAnd that's true, I didn't lie to you.\n\n359\n00:17:24.700 --> 00:17:28.840\nBut I forgot to mention one thing,\nwhich is the nodes can be in more\n\n360\n00:17:28.840 --> 00:17:31.930\nthan one availability zone, but\nthey have to be in the same VPC.\n\n361\n00:17:33.120 --> 00:17:35.460\nYour load balancer is tied to a region.\n\n362\n00:17:35.460 --> 00:17:40.680\nAnd it's really tied to a VPC, and\na VPC can only exist in one region.\n\n363\n00:17:40.680 --> 00:17:42.930\nAnd so\nthat's where that region tie comes in.\n\n364\n00:17:42.930 --> 00:17:48.080\nSo if I have more than one VPC,\nif I have more than one network,\n\n365\n00:17:48.080 --> 00:17:50.010\nI've gotta pick which one\nthis ELB is gonna balance.\n\n366\n00:17:50.010 --> 00:17:53.600\nNow, Usually it's gonna be tied\nto whichever one is mapped to our\n\n367\n00:17:53.600 --> 00:17:54.690\npublic systems.\n\n368\n00:17:54.690 --> 00:17:55.270\nRight?\n\n369\n00:17:55.270 --> 00:17:57.370\nBut when you create a Load Balancer\nthere's actually two types of\n\n370\n00:17:57.370 --> 00:17:58.240\nLoad Balancer.\n\n371\n00:17:58.240 --> 00:18:00.170\nThere's an internal or an external.\n\n372\n00:18:00.170 --> 00:18:01.670\nNow the default is an external.\n\n373\n00:18:01.670 --> 00:18:03.020\nWe wanna balance traffic,\n\n374\n00:18:03.020 --> 00:18:06.180\npeople coming from the internet\nthat are coming to our system.\n\n375\n00:18:06.180 --> 00:18:08.440\nLike I showed here in this diagram, right?\n\n376\n00:18:08.440 --> 00:18:15.170\nBut what if these were web servers and\nthey all needed to reach to a database?\n\n377\n00:18:15.170 --> 00:18:17.980\nSo I had a MySQL database\non the back end and so\n\n378\n00:18:17.980 --> 00:18:19.920\nmaybe I'm a shopping website, right?\n\n379\n00:18:19.920 --> 00:18:20.770\nLike Amazon.\n\n380\n00:18:20.770 --> 00:18:21.390\n>> Amazon.\n[LAUGH]\n\n381\n00:18:21.390 --> 00:18:23.250\n>> There's a company that does it.\n\n382\n00:18:23.250 --> 00:18:27.000\nSo I want users to be bounced\nacross all my web front ends.\n\n383\n00:18:27.000 --> 00:18:27.640\nRight?\n\n384\n00:18:27.640 --> 00:18:29.600\nBut when you go to Amazon's website,\nyou see the webpage and\n\n385\n00:18:29.600 --> 00:18:30.610\nthen you search for a product.\n\n386\n00:18:30.610 --> 00:18:34.480\nSo I searched for a flashlight, so I typed\nthe word flashlight and I hit search,\n\n387\n00:18:34.480 --> 00:18:36.395\nor torch, for our British viewers.\n\n388\n00:18:36.395 --> 00:18:40.420\n[LAUGH] So I go to search for a torch,\nand I type that in and I search for it.\n\n389\n00:18:40.420 --> 00:18:44.140\nNow when I go to search those\nweb servers turn around and\n\n390\n00:18:44.140 --> 00:18:47.550\nthey talk to a database server, and\nthey search the database for that term.\n\n391\n00:18:47.550 --> 00:18:51.260\nWell, I might wanna load\nbalance The web server's\n\n392\n00:18:51.260 --> 00:18:53.340\ntalking to a back end database server.\n\n393\n00:18:53.340 --> 00:18:57.380\nI might have 20 read only\ndatabases on the back end just for\n\n394\n00:18:57.380 --> 00:18:59.940\nthese queries, and\nI might wanna load balance there.\n\n395\n00:18:59.940 --> 00:19:04.730\nThat's where I'm gonna use an ELB to\nbalance traffic that's only internal.\n\n396\n00:19:04.730 --> 00:19:07.920\nSo that's the difference between\nan internal and an external load balancer.\n\n397\n00:19:07.920 --> 00:19:11.060\nAnd when we create it,\nwe've got that option right here.\n\n398\n00:19:11.060 --> 00:19:11.690\nI can choose it.\n\n399\n00:19:11.690 --> 00:19:16.960\nNow if I choose that external connections\nwill not be allowed to this ELB.\n\n400\n00:19:16.960 --> 00:19:17.480\nRight?\n\n401\n00:19:17.480 --> 00:19:19.590\nOnly internal connections.\n\n402\n00:19:19.590 --> 00:19:22.650\nWhen I uncheck it,\nexternal connections are allowed.\n\n403\n00:19:22.650 --> 00:19:26.470\nThis ELB will actually be\nassigned a public IP address.\n\n404\n00:19:26.470 --> 00:19:30.240\nIf I make it internal, it will only\nbe assigned an internal IP address.\n\n405\n00:19:30.240 --> 00:19:31.470\nIt won't have a public IP,\n\n406\n00:19:31.470 --> 00:19:34.870\nand that means You won't be able\nto get to it from the outside.\n\n407\n00:19:34.870 --> 00:19:38.840\nBut otherwise ELB functions the same, it's\njust where we plan on implementing it.\n\n408\n00:19:40.160 --> 00:19:42.780\nAll right, now I've only got one VPC,\nso I'm gonna stick with that.\n\n409\n00:19:42.780 --> 00:19:44.360\nBut if I had more than one VPC,\n\n410\n00:19:44.360 --> 00:19:48.965\nI would need to make sure that I chose the\none that contained my web servers, right?\n\n411\n00:19:48.965 --> 00:19:51.990\nCause that's what I'm gonna be load\nbalancing here, are my web servers.\n\n412\n00:19:51.990 --> 00:19:55.610\nThen I can choose to enable\nthe advance VPC configuration.\n\n413\n00:19:55.610 --> 00:19:56.740\nWell, what's that all about?\n\n414\n00:19:56.740 --> 00:20:00.470\nWell, if you check it, you'll notice,\nnot much happens, right?\n\n415\n00:20:00.470 --> 00:20:01.190\n>> That's advanced.\n\n416\n00:20:01.190 --> 00:20:02.760\nIt's obvious what you want.\n\n417\n00:20:02.760 --> 00:20:04.120\n>> It's so advanced.\n\n418\n00:20:04.120 --> 00:20:07.230\nBut, at first glance, I remember\nthe first time I checked this, and\n\n419\n00:20:07.230 --> 00:20:09.890\nI thought to myself, like,\nwow, that was productive.\n\n420\n00:20:09.890 --> 00:20:13.800\nBut if I zoom all the way out here, when\nyou check that advance VPC, you'll notice\n\n421\n00:20:13.800 --> 00:20:18.230\ndown at the bottom, some stuff does\nappear, We can pick our subnets,\n\n422\n00:20:19.500 --> 00:20:24.460\nand in each VPC,\nthe VPC is tied to the region, and\n\n423\n00:20:24.460 --> 00:20:29.390\nso inside of that region, you might have\nmore than one availability zone, and\n\n424\n00:20:29.390 --> 00:20:32.840\nso here I'm seeing those.\n\n425\n00:20:32.840 --> 00:20:35.770\nAnd you'll see what it's done for\nme in my VPC, it's taken 172.31.0.0,\n\n426\n00:20:35.770 --> 00:20:42.140\nwhich is a Class B/16 network and\nits divided up into four slash 20's.\n\n427\n00:20:42.140 --> 00:20:44.430\nOne in each availability zone.\n\n428\n00:20:44.430 --> 00:20:50.360\nSo if I create this ELB by default\nit's gonna support all four zones.\n\n429\n00:20:50.360 --> 00:20:51.850\nBut I might not want that.\n\n430\n00:20:51.850 --> 00:20:53.880\nI have a hard time thinking of\nwhere you wouldn't want that, but\n\n431\n00:20:53.880 --> 00:20:55.010\nmaybe I don't want that.\n\n432\n00:20:55.010 --> 00:20:59.550\nYou could actually come in here and\nyou could eliminate zones.\n\n433\n00:20:59.550 --> 00:21:03.230\nYou could say this ELB's only\ngoing to service zones A and C.\n\n434\n00:21:03.230 --> 00:21:05.720\nAnd it's not going to do D and E.\n\n435\n00:21:05.720 --> 00:21:10.490\nOr you could go in and\nyou could change the subnet IP addresses.\n\n436\n00:21:10.490 --> 00:21:15.860\nI might want to use a special subnet\njust for the stuff behind the ELB.\n\n437\n00:21:15.860 --> 00:21:18.880\nIt'll still be on the same VPC, but\nit'll have a different IP range,\n\n438\n00:21:18.880 --> 00:21:21.650\nwhich makes it easy for me to identify\nhosts that are a part of that ELB.\n\n439\n00:21:21.650 --> 00:21:23.370\nSo you might choose to go that route.\n\n440\n00:21:23.370 --> 00:21:27.130\nA lot of people don't bother with that,\nbut you certainly can.\n\n441\n00:21:27.130 --> 00:21:29.700\nAnd so here I've got my selected subnets\nand I can start to add those in.\n\n442\n00:21:29.700 --> 00:21:35.670\nSo if I just want A and C,\nI can add them in, And they're down here.\n\n443\n00:21:35.670 --> 00:21:38.080\nOr I can take them back out again.\n\n444\n00:21:38.080 --> 00:21:38.830\nAnd there we go.\n\n445\n00:21:38.830 --> 00:21:41.430\nBut it's telling me I need at least\ntwo subnets or I've kind of defeated\n\n446\n00:21:41.430 --> 00:21:44.400\nthe purpose of trying to get\nany kind of high availability.\n\n447\n00:21:44.400 --> 00:21:47.870\nAll right, if you leave that turned off.\n\n448\n00:21:47.870 --> 00:21:49.430\nIt's just gonna default to using all four.\n\n449\n00:21:49.430 --> 00:21:50.460\nSo they're all gonna be there.\n\n450\n00:21:50.460 --> 00:21:51.830\nWe can always change\nthis after the fact too.\n\n451\n00:21:51.830 --> 00:21:52.680\nSo it's easy enough to fix.\n\n452\n00:21:53.940 --> 00:21:55.030\nThen we've got the listener.\n\n453\n00:21:55.030 --> 00:21:57.290\nNow the listener is really important.\n\n454\n00:21:57.290 --> 00:22:00.870\nWhen you setup a load balancer,\nyou're not necessarily balancing a 100%\n\n455\n00:22:00.870 --> 00:22:05.110\nof the traffic, every single port,\nyou can't, it's not a great idea.\n\n456\n00:22:05.110 --> 00:22:08.120\nUsually there's a purpose\nthe server provides.\n\n457\n00:22:08.120 --> 00:22:09.740\nSo in my case they're web servers.\n\n458\n00:22:09.740 --> 00:22:12.720\nSo I want to load balance, HTTP and\n\n459\n00:22:12.720 --> 00:22:15.640\nthat's kind of the default, that's what\nmost people are load balancing but\n\n460\n00:22:15.640 --> 00:22:19.840\nI gave the example of a data base server,\nright, so this might my mySQL.\n\n461\n00:22:19.840 --> 00:22:22.188\nDaniel do you remember the mySQL board?\n\n462\n00:22:22.188 --> 00:22:25.690\n>> [CROSSTALK] Okay.\n>> It's like 13 92 or something like that.\n\n463\n00:22:25.690 --> 00:22:29.160\n14 94 I think was the my Microsoft SQL,\nand but whatever it is.\n\n464\n00:22:29.160 --> 00:22:33.170\nSo, your different database software\nwill have port numbers that it uses.\n\n465\n00:22:33.170 --> 00:22:36.410\nAnd, so you can add that port number in,\nand now you're load balancing for\n\n466\n00:22:36.410 --> 00:22:37.790\nthose database connections, right?\n\n467\n00:22:37.790 --> 00:22:40.600\nSo, you can specify whatever you want.\n\n468\n00:22:40.600 --> 00:22:44.440\nNow, there are limits to what\nthe ELB can really truly understand,\n\n469\n00:22:44.440 --> 00:22:48.610\nbut as far as looking for a port number\nand a packet, it can certainly see that.\n\n470\n00:22:48.610 --> 00:22:49.590\nAnd it can bring it in.\n\n471\n00:22:49.590 --> 00:22:52.100\nSo this listener is kind of a key piece.\n\n472\n00:22:52.100 --> 00:22:55.120\nI can add listeners for\nother protocols, too.\n\n473\n00:22:55.120 --> 00:23:01.350\nI can do HTTPS, SSL, I can even do TCP for\njust any old protocol that I want.\n\n474\n00:23:01.350 --> 00:23:04.170\nAnd here's where I'd come in and\nI would put, like I don't know,\n\n475\n00:23:04.170 --> 00:23:05.270\nmaybe it's remote desktop.\n\n476\n00:23:05.270 --> 00:23:05.800\n3389, right?\n\n477\n00:23:05.800 --> 00:23:08.310\nMaybe this is gonna be\na terminal services farm.\n\n478\n00:23:08.310 --> 00:23:10.730\nAnd so I wanna list them for\nconnections on 3389,\n\n479\n00:23:10.730 --> 00:23:13.900\nand then distribute them across a bunch\nof terminal servers that I have.\n\n480\n00:23:13.900 --> 00:23:15.010\nSo you can specify that.\n\n481\n00:23:15.010 --> 00:23:17.600\nNow the Load Balancer Protocol\n\n482\n00:23:17.600 --> 00:23:21.390\ndoesn't necessarily have to match\nwhat's called the Instance Protocol.\n\n483\n00:23:21.390 --> 00:23:26.470\nSo on the other side of this I've got\nthe option to pick the instance protocol.\n\n484\n00:23:26.470 --> 00:23:29.380\nAnd so what we can do is we can say maybe\nthe connection comes in on 3389 but\n\n485\n00:23:29.380 --> 00:23:33.840\nthen I change it to something else.\n\n486\n00:23:33.840 --> 00:23:36.620\nAnd you can adjust that to\na different port number.\n\n487\n00:23:36.620 --> 00:23:41.560\nSo for example,\nI might not want it to be 3389 on the ELB,\n\n488\n00:23:41.560 --> 00:23:45.750\nI might want to convert it to,\nmayve it's like 8080 there.\n\n489\n00:23:45.750 --> 00:23:47.080\nAnd there's something\ndifferent on the inside.\n\n490\n00:23:47.080 --> 00:23:50.400\nYou see that with web servers too,\nwhere it might be 80 to the ELB, and\n\n491\n00:23:50.400 --> 00:23:53.030\nthen 8080 to the individual nodes,\nor some other port number.\n\n492\n00:23:53.030 --> 00:23:55.930\nSo you can adjust those if you want,\nall right?\n\n493\n00:23:55.930 --> 00:23:57.682\nWhoops.\n[LAUGH] You've got a lot of power there as\n\n494\n00:23:57.682 --> 00:24:01.017\nfar as what you want to set up for your\nlistener, and get all that configured, and\n\n495\n00:24:01.017 --> 00:24:02.266\nkind of get that put in place.\n\n496\n00:24:02.266 --> 00:24:04.966\nSo I'm just gonna leave this here, and\nagain, we can adjust this after the fact.\n\n497\n00:24:04.966 --> 00:24:07.844\nNow Don, are we able to do my\nfavorite option that we have\n\n498\n00:24:07.844 --> 00:24:09.147\nin Amazon Web Services?\n\n499\n00:24:09.147 --> 00:24:13.279\nWhich is provide health checks so I can\nalways make sure that my ELBs are running\n\n500\n00:24:13.279 --> 00:24:16.100\nand doing the things like\nwe do with our servers.\n\n501\n00:24:16.100 --> 00:24:17.510\nYeah, you absolutely can.\n\n502\n00:24:17.510 --> 00:24:20.170\nAnd as we get this setup,\nyou'll kind of see.\n\n503\n00:24:20.170 --> 00:24:24.000\nIt's not terribly obvious but we've got\nthis breadcrumb thing across the top here.\n\n504\n00:24:24.000 --> 00:24:26.740\nAnd so,\nwe're in the Define Load Balancer part.\n\n505\n00:24:26.740 --> 00:24:28.570\nWe still have to assign security groups.\n\n506\n00:24:28.570 --> 00:24:30.620\nWe gotta configure our security settings.\n\n507\n00:24:30.620 --> 00:24:32.590\nAnd then,\nwe've gotta configure our health checks.\n\n508\n00:24:32.590 --> 00:24:33.770\nWe're gonna have to set that so\n\n509\n00:24:33.770 --> 00:24:37.430\nthat it will understand cuz we don't\nwanna send traffic to a node that's down.\n\n510\n00:24:37.430 --> 00:24:39.130\nAnd so, that's really important.\n\n511\n00:24:39.130 --> 00:24:42.280\nAnd what's gonna happen is,\nwhen we create this ELB.\n\n512\n00:24:42.280 --> 00:24:43.830\nIt's gonna watch the nodes inside of it.\n\n513\n00:24:43.830 --> 00:24:47.780\nAnd it's gonna track whether they're\nin-service or out of service.\n\n514\n00:24:47.780 --> 00:24:48.660\nWe'll have to tell it how to do it.\n\n515\n00:24:48.660 --> 00:24:51.680\nSo the health checks\nare actually baked into ELB.\n\n516\n00:24:51.680 --> 00:24:55.750\nIt's not like in Route 53 where we have\nto choose to add the health checks,\n\n517\n00:24:55.750 --> 00:24:56.800\nhere they're baked into it.\n\n518\n00:24:56.800 --> 00:24:58.910\nSo we're gonna see that in just a second.\n\n519\n00:24:58.910 --> 00:25:01.840\nNow I've got this listener configured\nnow for port 80, so I'm listening for\n\n520\n00:25:01.840 --> 00:25:03.130\nweb traffic.\n\n521\n00:25:03.130 --> 00:25:05.470\nSo I need to set,\nI guess I have to give it a name too.\n\n522\n00:25:05.470 --> 00:25:07.460\nI should probably have thought of that.\n\n523\n00:25:07.460 --> 00:25:09.100\nI lost it.\nI had typed it earlier.\n\n524\n00:25:09.100 --> 00:25:10.835\nWell anyhow so I called it,\nwhat did I call it?\n\n525\n00:25:10.835 --> 00:25:13.182\nus-east-web servers.\n\n526\n00:25:13.182 --> 00:25:15.880\nAll right so then we will go\nto assign the security groups.\n\n527\n00:25:15.880 --> 00:25:17.930\nIf I am listening for\n\n528\n00:25:17.930 --> 00:25:21.850\nport 80 traffic coming in, then I\nprobably need a port 80 to get to it.\n\n529\n00:25:21.850 --> 00:25:25.258\nI might want to create a security group\nanyway that will limit access to it while\n\n530\n00:25:25.258 --> 00:25:27.340\nI'm getting it set up and\nconfigured and so on.\n\n531\n00:25:27.340 --> 00:25:28.605\nSo we can certainly do that,\n\n532\n00:25:28.605 --> 00:25:32.330\nI actually have an existing security\ngroup that I am going to use, this one.\n\n533\n00:25:32.330 --> 00:25:34.020\nThat already allows port 80.\n\n534\n00:25:34.020 --> 00:25:36.465\nSo I'm gonna do that one, but\nyou can create your own and\n\n535\n00:25:36.465 --> 00:25:39.030\nspecify whatever protocol it\nis that you're balancing.\n\n536\n00:25:40.700 --> 00:25:43.720\nThen, it's just asking me here\nto verify my security settings.\n\n537\n00:25:43.720 --> 00:25:46.580\nAnd I don't have much here cuz I\ndidn't create a new security group.\n\n538\n00:25:46.580 --> 00:25:47.790\nIf I did a new one,\nhere's where I would set it up.\n\n539\n00:25:47.790 --> 00:25:51.246\nAnd so it's just warning me that I do\nhave HTTP open and it's open to the whole\n\n540\n00:25:51.246 --> 00:25:54.824\nworld, and I should really consider using\nHTTPS or SSL but I'll pass on that.\n\n541\n00:25:54.824 --> 00:25:59.590\nAnd then here is the health\ncheck Daniel asked about.\n\n542\n00:25:59.590 --> 00:26:03.410\nSo, how does it know if a node is up and\nrunning and\n\n543\n00:26:03.410 --> 00:26:06.930\nyou can tell it to check for\nHTTP or anything.\n\n544\n00:26:06.930 --> 00:26:10.278\nIf it's a database server I can tell it\nto reach out and do TCP connections or\n\n545\n00:26:10.278 --> 00:26:12.580\nMicrosoft Remote Desktop,\nthe terminal server.\n\n546\n00:26:12.580 --> 00:26:14.689\nSo I can say, hey, try and\nconnect on TCP 3389.\n\n547\n00:26:14.689 --> 00:26:17.950\nIf you get a connection, the node is up.\n\n548\n00:26:17.950 --> 00:26:19.810\nNow, it's not very advanced.\n\n549\n00:26:19.810 --> 00:26:22.560\nIt can't test and\nsay can I actually log in and\n\n550\n00:26:22.560 --> 00:26:24.380\nget a desktop,\nit doesn't know how to do that.\n\n551\n00:26:24.380 --> 00:26:25.900\nIt's just seeing if the ports open,\n\n552\n00:26:25.900 --> 00:26:27.950\nif that server is responding\non that port number.\n\n553\n00:26:27.950 --> 00:26:31.060\nSo the server could actually be down and\nyou see that with database servers a lot.\n\n554\n00:26:31.060 --> 00:26:34.530\nWhere the hard drive storing the database\nmight have failed so the database is\n\n555\n00:26:34.530 --> 00:26:38.710\noffline but the service is still running\nand still answering on that port.\n\n556\n00:26:38.710 --> 00:26:42.760\nSo it might not know it's down, with HTTP\nit can be a little more sophisticated cuz\n\n557\n00:26:42.760 --> 00:26:46.840\nwe can actually request a particular\npage so I might have a php app so\n\n558\n00:26:46.840 --> 00:26:50.960\nI specifically request index.PHP, and\nI probably need to put that on port 80.\n\n559\n00:26:50.960 --> 00:26:54.470\nThere we go, so it will do that request\na little more intelligently, and\n\n560\n00:26:54.470 --> 00:26:56.420\nthen I can specify how\noften I want to check.\n\n561\n00:26:56.420 --> 00:26:58.320\nNow the defaults are pretty good.\n\n562\n00:26:58.320 --> 00:27:01.040\nThe way it works is we're\ngonna request that page and\n\n563\n00:27:01.040 --> 00:27:05.890\nif we don't get that page back in\nfive seconds, it's a failure, right.\n\n564\n00:27:05.890 --> 00:27:09.700\nYou might wanna give it longer if we know\nthe page takes a long time to render, but\n\n565\n00:27:09.700 --> 00:27:12.840\nI think in the marketing world they always\ntell you that a page should load in under\n\n566\n00:27:12.840 --> 00:27:15.020\ntwo seconds or\nyou're gonna lose your customer anyway, so\n\n567\n00:27:15.020 --> 00:27:16.670\nfive seconds is probably\nmore than generous.\n\n568\n00:27:18.030 --> 00:27:20.170\nThen we've got out health check interval,\nright.\n\n569\n00:27:20.170 --> 00:27:21.220\nHow often do we check?\n\n570\n00:27:21.220 --> 00:27:23.850\nAnd the default is every 30 seconds.\n\n571\n00:27:23.850 --> 00:27:27.774\nNow every 30 seconds sounds like a lot but\nthere's a little problem because the very\n\n572\n00:27:27.774 --> 00:27:29.860\nnext thing here is\nthe unhealthy threshold.\n\n573\n00:27:29.860 --> 00:27:33.450\nHow many failures have to happen\nbefore we decide a node is dead?\n\n574\n00:27:33.450 --> 00:27:38.810\nIf we're checking every 30 seconds and\nwe have an unhealthy threshold of 2.\n\n575\n00:27:38.810 --> 00:27:43.680\nThat means every 60 seconds, that's how\nlong it would take us to detect a failure.\n\n576\n00:27:43.680 --> 00:27:47.630\nCuz the first failure happens, we wait\nanother 30 seconds, we try again and\n\n577\n00:27:47.630 --> 00:27:48.490\nthen we see the failure.\n\n578\n00:27:48.490 --> 00:27:49.490\nSo it'll take a minute.\n\n579\n00:27:49.490 --> 00:27:51.450\nOur website could be down for\nan entire minute.\n\n580\n00:27:51.450 --> 00:27:54.240\nSo I might wanna shrink this\ndown a good bit and try and\n\n581\n00:27:54.240 --> 00:27:58.360\nminimize that to make it where\nthe detection happens a lot faster.\n\n582\n00:27:58.360 --> 00:28:02.380\nSo I can come in and I can say, I'm gonna\nmake my response time three seconds.\n\n583\n00:28:02.380 --> 00:28:05.010\nIf I don't get that page back in\nthree seconds, it's a failure.\n\n584\n00:28:05.010 --> 00:28:06.630\nAnd I can set my health check interval.\n\n585\n00:28:06.630 --> 00:28:08.740\nMaybe I'll do every ten seconds.\n\n586\n00:28:08.740 --> 00:28:10.730\nSo I'm gonna check every ten seconds and\n\n587\n00:28:10.730 --> 00:28:13.780\nif I have two failures,\nthen I know the page is dead.\n\n588\n00:28:13.780 --> 00:28:15.880\nAnd that's gonna be 20 seconds now.\n\n589\n00:28:15.880 --> 00:28:19.950\nSo in two times ten or\ntwo intervals of ten.\n\n590\n00:28:19.950 --> 00:28:22.400\nWe'll give that 20 seconds, we'll know\nthe page is down and we'll fail it over.\n\n591\n00:28:22.400 --> 00:28:24.880\nAnd then how do we decide\nit's healthy again?\n\n592\n00:28:24.880 --> 00:28:29.930\nWell, I might want to give it say four\nchecks before I bring it healthy.\n\n593\n00:28:29.930 --> 00:28:31.860\nSo when the server comes back up,\n\n594\n00:28:31.860 --> 00:28:35.070\ntest it four times before I\nactually allow it to come back up.\n\n595\n00:28:35.070 --> 00:28:36.990\nAnd that way if it's flapping,\nlike it comes up and\n\n596\n00:28:36.990 --> 00:28:39.530\nthen crashes again, I won't just\nimmediately throw it back into the pool.\n\n597\n00:28:41.240 --> 00:28:43.450\nAll right, then I can pick my instances.\n\n598\n00:28:43.450 --> 00:28:47.550\nAnd I can pick instances I've already got\nor I can add them later on after the fact.\n\n599\n00:28:47.550 --> 00:28:49.970\nAnd a lot of times we'll attach\nthese to an auto scaling group.\n\n600\n00:28:49.970 --> 00:28:53.060\nSo it's adding new instances, and\nautomatically throwing them in here.\n\n601\n00:28:53.060 --> 00:28:55.950\nBut I'll just pick all my servers,\nlet's go crazy.\n\n602\n00:28:55.950 --> 00:28:56.490\nAnd add them in.\n\n603\n00:28:56.490 --> 00:29:01.190\nNow notice I'm getting servers in\nthose different availability zones,\n\n604\n00:29:01.190 --> 00:29:04.480\nI've got two servers in 1c and one in 1d.\n\n605\n00:29:04.480 --> 00:29:09.530\nSo now, if 1c were to completely go\noffline, I've still got a node over in 1d,\n\n606\n00:29:09.530 --> 00:29:10.720\nor vice-versa.\n\n607\n00:29:10.720 --> 00:29:13.090\nSo now I've got redundancy\nwithin the availability zones.\n\n608\n00:29:13.090 --> 00:29:16.587\nBut they are all in the same region,\nso if the region has an outage,\n\n609\n00:29:16.587 --> 00:29:17.850\nI'm still in trouble.\n\n610\n00:29:17.850 --> 00:29:21.230\nAll right.\n\n611\n00:29:21.230 --> 00:29:22.270\nNow down at the bottom,\n\n612\n00:29:22.270 --> 00:29:26.810\nthere's a little check mark here that\nsays Enable Cross-Zone Load Balancing.\n\n613\n00:29:26.810 --> 00:29:30.210\nIf I turn that off, my servers\nwill have to be in the same zone.\n\n614\n00:29:31.310 --> 00:29:33.130\nWhich there's not a lot of reason for\nthat.\n\n615\n00:29:33.130 --> 00:29:34.690\nThat's why it's on by default,\n\n616\n00:29:34.690 --> 00:29:37.770\nbut you can disable that if you want,\nand you can set that.\n\n617\n00:29:37.770 --> 00:29:39.679\nThere's one other option here\nwhich is connection draining.\n\n618\n00:29:40.730 --> 00:29:42.430\nIf I need to shut a server down,\n\n619\n00:29:42.430 --> 00:29:46.050\nif I need to take a server out of the\npool, you can do what's called draining.\n\n620\n00:29:46.050 --> 00:29:48.760\nDraining says, don't just shut down\nright now, because anybody who's\n\n621\n00:29:48.760 --> 00:29:51.750\nconnected to that server is gonna\nget moved over to another server.\n\n622\n00:29:51.750 --> 00:29:52.790\nAnd what if they had a shopping cart?\n\n623\n00:29:52.790 --> 00:29:54.720\nRight, what if they were in\nthe middle of a purchase?\n\n624\n00:29:54.720 --> 00:29:55.880\nThey're gonna lose that.\n\n625\n00:29:55.880 --> 00:29:57.080\nConnection draining says,\n\n626\n00:29:57.080 --> 00:30:00.450\nwhen I go to shut a server down\ndon't send anymore traffic to it.\n\n627\n00:30:00.450 --> 00:30:04.060\nDon't send any,\nwell don't send any new traffic to it.\n\n628\n00:30:04.060 --> 00:30:08.660\nBut let the existing sessions continue for\nup to 5 minutes, 300 seconds, so\n\n629\n00:30:08.660 --> 00:30:10.120\nthey can finish what they're doing.\n\n630\n00:30:10.120 --> 00:30:11.310\nIf they haven't finished in that time,\n\n631\n00:30:11.310 --> 00:30:13.060\nthen we take it out and\nthey lose it, right?\n\n632\n00:30:13.060 --> 00:30:16.390\nYou might wanna set that to a higher\nnumber, so that people have time to finish\n\n633\n00:30:16.390 --> 00:30:18.760\ntheir transaction, finish buying\nwhatever it is they're buying.\n\n634\n00:30:18.760 --> 00:30:20.670\nYou don't wanna give your\ncustomers a bad experience just\n\n635\n00:30:20.670 --> 00:30:22.040\ncuz you're doing maintenance on a server.\n\n636\n00:30:23.960 --> 00:30:24.921\nAll right.\nOnce that's done,\n\n637\n00:30:24.921 --> 00:30:27.230\nwhen we're ready to move forward to\nthe last screen here which is add tags.\n\n638\n00:30:27.230 --> 00:30:29.100\nI'm not gonna add any tags right now.\n\n639\n00:30:29.100 --> 00:30:31.310\nAnd we'll get that ELB created.\n\n640\n00:30:31.310 --> 00:30:33.450\nOnce it's created, we're ready to rock.\n\n641\n00:30:33.450 --> 00:30:34.310\nRight?\n\n642\n00:30:34.310 --> 00:30:38.680\nWell there's a little bit more that we\nneed to do to get this thing in place.\n\n643\n00:30:38.680 --> 00:30:40.850\nBut at this point,\nI think we've seen the load balancer.\n\n644\n00:30:40.850 --> 00:30:41.600\nWe've seen what it can do.\n\n645\n00:30:41.600 --> 00:30:44.270\nWe've seen the basic configuration.\n\n646\n00:30:44.270 --> 00:30:46.980\nWhat I need to continue showing\nyou guys is how to monitor this,\n\n647\n00:30:46.980 --> 00:30:50.660\nhow to make sure it's working, and see\nhow to actually use it in production so\n\n648\n00:30:50.660 --> 00:30:52.180\nthat's what's gonna be coming up next.\n\n649\n00:30:52.180 --> 00:30:55.680\nBut for this one, I think let's see,\ndid I leave anything out?\n\n650\n00:30:55.680 --> 00:30:57.855\nYou know I did leave some other stuff out.\n\n651\n00:30:57.855 --> 00:31:00.245\nWe'll probably have to do a part two\ncuz we don't have time on this one.\n\n652\n00:31:00.245 --> 00:31:02.753\nYeah, you've bumped your\ngums quite a bit there, Don.\n\n653\n00:31:02.753 --> 00:31:05.495\n[LAUGH] All right, so let's round this up.\n\n654\n00:31:05.495 --> 00:31:06.955\nWe'll do a part two, definitely come back,\n\n655\n00:31:06.955 --> 00:31:10.335\ncuz there's more configuration features\nthat we don't see in the setup wizard, but\n\n656\n00:31:10.335 --> 00:31:12.305\nI wanna cover cuz they\ncan turn up in the exam.\n\n657\n00:31:12.305 --> 00:31:13.635\nWe'll stick them in the next episode.\n\n658\n00:31:13.635 --> 00:31:14.255\nAwesome stuff, Don.\n\n659\n00:31:14.255 --> 00:31:18.365\nThis is really intriguing, to have that\nability to do the load balancing and\n\n660\n00:31:18.365 --> 00:31:20.860\nset these up now,\nwe're starting to see how that works.\n\n661\n00:31:20.860 --> 00:31:24.480\nHow we need to implement them in our\nenvironments, and how we can do that.\n\n662\n00:31:24.480 --> 00:31:28.510\nThank you for showing us that, we look\nforward to part two, finishing this up and\n\n663\n00:31:28.510 --> 00:31:31.180\ngetting all the way\nthrough an ELB instance.\n\n664\n00:31:31.180 --> 00:31:32.360\nSo, hopefully we'll see you there.\n\n665\n00:31:32.360 --> 00:31:35.220\nAs for this episode,\nwe're gonna go ahead and close it down.\n\n666\n00:31:35.220 --> 00:31:38.040\nSigning off for ITProTV,\nI've been your host, Daniel Lowrie.\n\n667\n00:31:38.040 --> 00:31:39.700\nAnd I'm Don Pezet.\n\n668\n00:31:39.700 --> 00:31:43.930\nAnd we'll see you next time.\n\n669\n00:31:43.930 --> 00:31:45.640\n[MUSIC]\n\n",
          "vimeoId": "146523440"
        },
        {
          "description": "In this episode, Daniel and Don dive into Amazon's fault tolerance service known as Elastic Load Balancing. First they go over the basics of ELB, both the abilities and limitations, then they move on to the different types of ELB available (Public and Private types). They also take a look at implementing Health-checks with ELB.",
          "length": "1120",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/amazon-acsa/amazon-acsa-5-1-elastic_load_balancing_pt2-111915-2.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/amazon-acsa/amazon-acsa-5-1-elastic_load_balancing_pt2-111915-2-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/amazon-acsa/amazon-acsa-5-1-elastic_load_balancing_pt2-111915-2-sm.jpg",
          "title": "Elastic Load Balancing Part 2",
          "transcript": "WEBVTT\n\n1\n00:00:00.000 --> 00:00:10.000\n[MUSIC]\n\n2\n00:00:11.744 --> 00:00:16.480\nAll right, greetings everyone and welcome\nto another exciting episode of ITPro TV.\n\n3\n00:00:16.480 --> 00:00:21.360\nI'm your host, Daniel Lowrie, and in this\nepisode we're continuing on with our\n\n4\n00:00:21.360 --> 00:00:25.960\nAWS Sys Ops Administrator, that lovely new\ncertification they have out there for you.\n\n5\n00:00:25.960 --> 00:00:28.230\nSo, if your preparing for\nthat, this is the place to be.\n\n6\n00:00:28.230 --> 00:00:32.020\nAnd, joining us in the studio today, he'll\ncontinue on a little subject we have been\n\n7\n00:00:32.020 --> 00:00:34.400\npreviously working on,\nis none other than Don Pezet.\n\n8\n00:00:34.400 --> 00:00:35.290\nHow's it going today, Don?\n\n9\n00:00:35.290 --> 00:00:36.390\n>> It is going great, Daniel.\n\n10\n00:00:36.390 --> 00:00:37.390\nExcited to be back and\n\n11\n00:00:37.390 --> 00:00:40.130\nready to continue talking about\nthose elastic load balancers.\n\n12\n00:00:40.130 --> 00:00:42.900\nI know we got the whole\nconfiguration in the last episode,\n\n13\n00:00:42.900 --> 00:00:45.750\nbut there's always a little bit more\nthat we'd like to take a look at.\n\n14\n00:00:45.750 --> 00:00:48.460\nSo I'd definitely want to go through that\nand just kind of get a chance to see some\n\n15\n00:00:48.460 --> 00:00:51.630\nof the other little nuts and\nbolts behind the scenes of the ELBs.\n\n16\n00:00:51.630 --> 00:00:53.780\n>> Yeah.\nI'm actually pretty interested about\n\n17\n00:00:53.780 --> 00:00:57.780\nthis because when we were working on\nthe other show you were saying that\n\n18\n00:00:57.780 --> 00:01:01.660\nelastic low balancers are basically,\nwe set them up, we say I need one,\n\n19\n00:01:01.660 --> 00:01:05.900\nI need it here and you kind of just\ntell Amazon where to put them.\n\n20\n00:01:05.900 --> 00:01:08.520\nBut you said that they handle it.\n\n21\n00:01:08.520 --> 00:01:10.870\nWe don't go in and settle the settings.\n\n22\n00:01:10.870 --> 00:01:13.600\nIs set up for getting Amazon handles that.\n\n23\n00:01:13.600 --> 00:01:16.495\nSo I'll be interested in\nseeing what else is left.\n\n24\n00:01:16.495 --> 00:01:18.290\n[LAUGH] What else is left?\n\n25\n00:01:18.290 --> 00:01:20.590\n>> And the ELB as we deployed\nit in the last episode,\n\n26\n00:01:20.590 --> 00:01:22.370\nis probably gonna be fine for most people.\n\n27\n00:01:22.370 --> 00:01:23.230\nAll right?\n\n28\n00:01:23.230 --> 00:01:26.010\nBut there are a few scenarios where\nwe might need to go in there and\n\n29\n00:01:26.010 --> 00:01:27.270\ntweak it's behavior a little bit.\n\n30\n00:01:27.270 --> 00:01:30.110\nAnd, unfortunately, in some of these\nscenarios, you can't tweak it yourself.\n\n31\n00:01:30.110 --> 00:01:32.290\nAnd there's a great example\nthat I wanna talk about,\n\n32\n00:01:32.290 --> 00:01:34.450\nwhat's called pre-warming in ELB.\n\n33\n00:01:34.450 --> 00:01:35.480\nAll right?\n\n34\n00:01:35.480 --> 00:01:38.130\nNow, when you create an elastic\nload balancer, what's going on is,\n\n35\n00:01:38.130 --> 00:01:40.560\non the back end Amazon is\ncreating a Linux server.\n\n36\n00:01:40.560 --> 00:01:42.370\nThey're spinning up this\ninstance that's running.\n\n37\n00:01:42.370 --> 00:01:43.560\nKinda like when you configure your nat,\n\n38\n00:01:43.560 --> 00:01:46.078\nthey're actually spinning up\na Linux installs in that router.\n\n39\n00:01:46.078 --> 00:01:47.570\nHere they're spinning up in the ELB.\n\n40\n00:01:47.570 --> 00:01:49.950\nI'm glad that I mentioned that.\n\n41\n00:01:49.950 --> 00:01:53.150\nI know there's some confusion out\nthere where some people will say,\n\n42\n00:01:53.150 --> 00:01:56.150\nis the ELB like a replacement for nat?\n\n43\n00:01:56.150 --> 00:01:59.740\nRight, cuz if I nat more than one\nhost behind a single IP then isn't\n\n44\n00:01:59.740 --> 00:02:03.320\nthat kind of like an ELB and they're\nreally two different things, right.\n\n45\n00:02:03.320 --> 00:02:07.520\nNat is were we mask our internal ips\nbehind a single external ip on their way\n\n46\n00:02:07.520 --> 00:02:08.620\nout of a network.\n\n47\n00:02:08.620 --> 00:02:11.490\nOn the way into the network, and\nthat really just screws things up and\n\n48\n00:02:11.490 --> 00:02:13.940\nyou have to do port redirections and\nall that mess.\n\n49\n00:02:13.940 --> 00:02:17.790\nAnd ELB, on the other hand, is not really\ndesigned for inside going out, it's\n\n50\n00:02:17.790 --> 00:02:21.650\ndesigned for outside coming in, and then\nwe can distribute people across systems.\n\n51\n00:02:21.650 --> 00:02:25.340\nAnd, so you might even use the two\ntogether, you might have ELB and NAT, but\n\n52\n00:02:25.340 --> 00:02:28.700\none is not a replacement for the other,\nso make sure you don't mix those two up.\n\n53\n00:02:28.700 --> 00:02:33.360\nBut basically, when we configure that ELB,\nAmazon creates that instance.\n\n54\n00:02:33.360 --> 00:02:35.590\nThat Linux server that's gonna be\nthe balancing, they spin it up and\n\n55\n00:02:35.590 --> 00:02:38.180\nit's got all of their\ndefault configuration on it.\n\n56\n00:02:38.180 --> 00:02:42.740\nNow, Amazon spins up tens of\nthousands of ELB's in any given day.\n\n57\n00:02:42.740 --> 00:02:46.270\nAnd they don't want to waste a ton of\nresources on these because their build\n\n58\n00:02:46.270 --> 00:02:48.500\na lot less expensively then an instance.\n\n59\n00:02:48.500 --> 00:02:52.410\nIf you brought up an instance itself to be\nan ELB you'd end up paying a lot more for\n\n60\n00:02:52.410 --> 00:02:53.430\nit, right?\n\n61\n00:02:53.430 --> 00:02:57.730\nAnd so what they do is they spin down\nthe amount of RAM in that system.\n\n62\n00:02:57.730 --> 00:03:02.430\nThey spin down the amount of CPU to match\nthe load of traffic that you've got.\n\n63\n00:03:02.430 --> 00:03:06.520\nSo I might have an ELB with\n500 servers behind it, but\n\n64\n00:03:06.520 --> 00:03:11.140\nif it's idle on the network maybe\nthis is a brand new webpage I'm\n\n65\n00:03:11.140 --> 00:03:14.030\nabout to launch to the public, but for\nright now I'm just keeping it idle,\n\n66\n00:03:14.030 --> 00:03:16.830\nI'm setting it up,\nI've got my 500 instances spun up.\n\n67\n00:03:16.830 --> 00:03:20.790\nThe ELB might only be running with\nenough resources to bounce across two or\n\n68\n00:03:20.790 --> 00:03:23.340\nthree hosts,\nbecause your system is effectively empty.\n\n69\n00:03:23.340 --> 00:03:28.500\nAnd then as soon as traffic starts to\npick up, Amazon will detect that and\n\n70\n00:03:28.500 --> 00:03:32.490\nstart scaling up that ELB adding\nmore processor adding more RAM\n\n71\n00:03:32.490 --> 00:03:36.740\nadding more resources to it so\nthat it can handle the additional traffic.\n\n72\n00:03:36.740 --> 00:03:41.580\nSo that when you want to jump to all 500\nhosts, well it'll scale that ELB up and\n\n73\n00:03:41.580 --> 00:03:43.540\nit does it without you messing with it.\n\n74\n00:03:43.540 --> 00:03:47.510\nBut, what if you know there is\ngonna be a surge of traffic and\n\n75\n00:03:47.510 --> 00:03:48.960\nthere's a ton of websites\nthat don't do this.\n\n76\n00:03:48.960 --> 00:03:49.690\nYou see it all the time.\n\n77\n00:03:49.690 --> 00:03:54.370\nIn fact we're coming up on Cyber Monday\nright the Black Friday/Cyber Monday sales,\n\n78\n00:03:54.370 --> 00:03:57.200\nit's American consumers\nsome of it's greatest,\n\n79\n00:03:57.200 --> 00:04:01.610\nthat what you're gonna see is is\na website where, even Amazon does this,\n\n80\n00:04:01.610 --> 00:04:04.680\nwhere they'll say alright\nwe're gonna have a special.\n\n81\n00:04:04.680 --> 00:04:08.740\nWe're gonna sell this TV that's normally\n$1000, we're gonna sell it for $100 bucks.\n\n82\n00:04:08.740 --> 00:04:12.240\nAnd it's gonna happen Monday at midnight.\n\n83\n00:04:12.240 --> 00:04:17.760\nAnd so I know Monday at midnight I'm\ngonna get slammed with traffic, right.\n\n84\n00:04:17.760 --> 00:04:21.880\nOr it could be concert ticket sales,\nright, maybe I sell tickets\n\n85\n00:04:21.880 --> 00:04:26.670\non the Internet and I know that a concert\nis gonna go on sale at a particular time.\n\n86\n00:04:26.670 --> 00:04:28.820\nApple does it, a new iPhone or\niPad's gonna go on sale,\n\n87\n00:04:28.820 --> 00:04:32.600\nthey know they're gonna get a surge\nof traffic at a particular time.\n\n88\n00:04:32.600 --> 00:04:37.420\nWell, if that surge happens and the EOBs\nnot ready for it, what's going to happen?\n\n89\n00:04:37.420 --> 00:04:39.800\nYou're going to get people where\nthey can't get to the webpage and\n\n90\n00:04:39.800 --> 00:04:42.580\nthey get a bad experience where\nthey are constantly refreshing\n\n91\n00:04:42.580 --> 00:04:46.070\nwhich just generates more\ntraffic which overloads the EOD.\n\n92\n00:04:46.070 --> 00:04:48.580\nIt takes time to grow up,\nto fill that space.\n\n93\n00:04:48.580 --> 00:04:50.610\nSo it will, but it takes time.\n\n94\n00:04:50.610 --> 00:04:53.650\nSo if you know there's going\nto be a surge in traffic\n\n95\n00:04:53.650 --> 00:04:55.840\nYou can do what's called pre-warming.\n\n96\n00:04:55.840 --> 00:04:57.480\nUnfortunately, you can't do it.\n\n97\n00:04:57.480 --> 00:04:59.570\nYou have to get Amazon to do it.\n\n98\n00:04:59.570 --> 00:05:00.740\nYou open up a support ticket.\n\n99\n00:05:00.740 --> 00:05:04.250\nYou send them a support ticket and\nyou say, guys, I'm doing a big sale, and\n\n100\n00:05:04.250 --> 00:05:07.100\nit's gonna happen tomorrow at midnight,\nUS Eastern, or\n\n101\n00:05:07.100 --> 00:05:11.990\nwhatever time's on your end, and\nI need the ELB to be at this capacity.\n\n102\n00:05:11.990 --> 00:05:14.820\nI need it to be ready to handle\nthe 500 servers that are behind it at\n\n103\n00:05:14.820 --> 00:05:15.450\nfull bandwidth.\n\n104\n00:05:15.450 --> 00:05:17.086\nI need it to be ready.\n\n105\n00:05:17.086 --> 00:05:20.180\nAnd they'll pre warm it, they'll start\nadding the resources, they don't even bill\n\n106\n00:05:20.180 --> 00:05:23.730\nyou for it, it's just part of the regular\nELB you just have to give them a heads up.\n\n107\n00:05:23.730 --> 00:05:26.720\nBecause otherwise,\nthe surge will hit the ELB and\n\n108\n00:05:26.720 --> 00:05:30.960\nit has to grow to contain that traffic,\nand you can get a bad experience for\n\n109\n00:05:30.960 --> 00:05:33.610\na little while even though you thought\nyou had the resources that were there.\n\n110\n00:05:33.610 --> 00:05:35.310\nSo be aware of that pre warming.\n\n111\n00:05:35.310 --> 00:05:36.770\nIt's something you can't do yourself,\n\n112\n00:05:36.770 --> 00:05:39.210\nyou have to get Amazon to\nhelp cuz they manage the ELP.\n\n113\n00:05:39.210 --> 00:05:40.060\n>> That's pretty cool.\n\n114\n00:05:40.060 --> 00:05:44.480\nIt's nice to know that I just have to\ncall Amazon, say hey, we're preparing for\n\n115\n00:05:44.480 --> 00:05:48.190\na real surge, an increase,\nan uptick in connectivity to my server,\n\n116\n00:05:48.190 --> 00:05:50.290\nso we need to have you do that for me.\n\n117\n00:05:50.290 --> 00:05:52.560\nSo still kinda pushing it off to Amazon,\n\n118\n00:05:52.560 --> 00:05:55.810\nother than we initiate the fact\nthat they need to do something.\n\n119\n00:05:55.810 --> 00:05:57.970\nNow Dan is that the only\nother thing we need to do?\n\n120\n00:05:57.970 --> 00:06:00.020\nIs that the extent of it?\n\n121\n00:06:00.020 --> 00:06:00.690\n>> For most people,\n\n122\n00:06:00.690 --> 00:06:03.580\nlike I said what we did in the last\nepisode that pretty much rounds it off and\n\n123\n00:06:03.580 --> 00:06:07.770\nyou're done but we might have a few other\nthings that we want to tinker with.\n\n124\n00:06:07.770 --> 00:06:12.040\nNow when Amazon deploys your\nELB It's running a little algorithm,\n\n125\n00:06:12.040 --> 00:06:15.130\na little formula, it's not even\nanything too terribly special.\n\n126\n00:06:15.130 --> 00:06:17.450\nIt's just looking at the amount of\nconnections that are coming in and\n\n127\n00:06:17.450 --> 00:06:21.030\ntrying to balance the connections evenly\nacross the nodes that you have behind it,\n\n128\n00:06:21.030 --> 00:06:23.530\nthe instances that\nare running behind that ELB.\n\n129\n00:06:23.530 --> 00:06:29.830\nWell, in your environment, you might have\nsomething special that you want to use to\n\n130\n00:06:29.830 --> 00:06:34.380\nensure that people go back to\nthe same node every time, right?\n\n131\n00:06:34.380 --> 00:06:37.080\nI think I gave an example\nof like a shopping cart.\n\n132\n00:06:37.080 --> 00:06:40.040\nSo if I'm doing an online sales website,\nand somebody comes in and\n\n133\n00:06:40.040 --> 00:06:42.500\nthey add five products\nto their shopping cart.\n\n134\n00:06:42.500 --> 00:06:44.820\nAnd then they kind of idle for\na little while,\n\n135\n00:06:44.820 --> 00:06:47.030\nmaybe they browse through some\nother pages, and they come back.\n\n136\n00:06:47.030 --> 00:06:50.380\nAnd when they come back The ELB\nmoves them to another node.\n\n137\n00:06:50.380 --> 00:06:54.520\nAnd when they get moved to that other\nnode now their shopping cart is empty.\n\n138\n00:06:54.520 --> 00:06:56.740\nWell, is that gonna affect\nthat customer experience?\n\n139\n00:06:56.740 --> 00:06:58.630\nCould I potentially lose a sale there?\n\n140\n00:06:58.630 --> 00:06:59.400\nYeah.\n\n141\n00:06:59.400 --> 00:07:01.160\nSo I might wanna tweak that.\n\n142\n00:07:01.160 --> 00:07:05.490\nI might wanna tweak how we monitor our\nusers and how we track those sessions.\n\n143\n00:07:05.490 --> 00:07:07.830\nAnd try and\ncreate what's called stickiness,\n\n144\n00:07:07.830 --> 00:07:10.230\nto stick people to a particular instance.\n\n145\n00:07:10.230 --> 00:07:13.800\nNow, if they've logged in,\nwe can just use user sessions for that and\n\n146\n00:07:13.800 --> 00:07:14.800\nthat's what most people do.\n\n147\n00:07:14.800 --> 00:07:18.920\nMost people use cookies, so you go to\na website and it creates a cookie on your\n\n148\n00:07:18.920 --> 00:07:21.500\nhard drive and then anytime you come back,\nno matter what node you hit.\n\n149\n00:07:21.500 --> 00:07:26.100\nYou've got a cookie, it identifies who you\nare and it maps you to a shopping cart.\n\n150\n00:07:26.100 --> 00:07:30.990\nBut in the day and age of security and\npeople are deploying ad blockers and\n\n151\n00:07:30.990 --> 00:07:33.340\ncookie filters and things like that.\n\n152\n00:07:33.340 --> 00:07:36.090\nYou might not be able to use\na cookie on somebody elses station.\n\n153\n00:07:36.090 --> 00:07:39.040\nIn fact, in the European Union\nthere are a lot of strict\n\n154\n00:07:39.040 --> 00:07:41.430\nrules now about how cookies can be used.\n\n155\n00:07:41.430 --> 00:07:44.240\nYou can't go to a website these days\nwithout a little banner appearing at\n\n156\n00:07:44.240 --> 00:07:47.620\nthe top of the website saying this\nuses cookies, are you ok with that?\n\n157\n00:07:47.620 --> 00:07:50.590\nAnd if you say no,\nthe site effectively breaks, right.\n\n158\n00:07:50.590 --> 00:07:53.730\nYou could login and every time you click\non another page you gotta login again.\n\n159\n00:07:53.730 --> 00:07:56.850\nSo the cookies are really\nimportant to a lot of pages.\n\n160\n00:07:56.850 --> 00:08:00.630\nBut, with ELBs you could actually\nmake this happen without cookies.\n\n161\n00:08:00.630 --> 00:08:04.980\nYou can have it where the first\ntime a user connects But\n\n162\n00:08:04.980 --> 00:08:11.240\nELB can track their session\nbased on their characteristics.\n\n163\n00:08:11.240 --> 00:08:12.540\nTheir ip and so on.\n\n164\n00:08:12.540 --> 00:08:15.810\nAnd it can generate a cookie and\nstore it on the ELB.\n\n165\n00:08:15.810 --> 00:08:18.030\nSo now the cookie's not stored\non the person's computer.\n\n166\n00:08:18.030 --> 00:08:21.460\nThe cookie's stored on the ELB,\nand each time they come to access\n\n167\n00:08:21.460 --> 00:08:25.080\nIt can match them up with that cookie, and\nit can tie them into a particular host.\n\n168\n00:08:25.080 --> 00:08:28.640\nAnd because we're not storing the cookie\non the end user's machine, we don't\n\n169\n00:08:28.640 --> 00:08:33.040\nrun afoul of the various rules that\nsome organizations are starting to pass.\n\n170\n00:08:33.040 --> 00:08:36.620\nSo that stickiness is\nsomething we can configure.\n\n171\n00:08:36.620 --> 00:08:37.890\nNow, it's turned off by default.\n\n172\n00:08:37.890 --> 00:08:40.820\nBy default, it's not doing any of that\nbecause most websites use cookies.\n\n173\n00:08:40.820 --> 00:08:42.650\nThat's how they achieve this and\nthey don't need it.\n\n174\n00:08:42.650 --> 00:08:45.830\nSo, if I jump in here,\nlet me go into my configuration.\n\n175\n00:08:45.830 --> 00:08:50.550\nIf I go into EC2 and I go to the load\nbalancer that we created in the last show,\n\n176\n00:08:50.550 --> 00:08:53.580\nso here's that load balancer\nthat we created, and\n\n177\n00:08:53.580 --> 00:08:56.910\nif I take a look at his information\ndown here at the bottom of the screen.\n\n178\n00:08:58.730 --> 00:09:02.900\nRight here under description,\nI can see port configuration port 80,\n\n179\n00:09:02.900 --> 00:09:05.830\nI created a port 80 listener right,\nlistening for web traffic.\n\n180\n00:09:05.830 --> 00:09:07.910\nStickiness disabled.\n\n181\n00:09:07.910 --> 00:09:11.730\nIn other words, it's just up to me and\n\n182\n00:09:11.730 --> 00:09:14.250\nmy development team to create\ncookies to actually track people.\n\n183\n00:09:14.250 --> 00:09:17.140\nCuz otherwise, the ELB could send them\nto whatever instance they wanted.\n\n184\n00:09:17.140 --> 00:09:18.630\nAnd the ELB will.\n\n185\n00:09:18.630 --> 00:09:21.400\nI wanna say the default\nsession time on an ELB,\n\n186\n00:09:21.400 --> 00:09:23.650\nI don't remember the default,\nI believe it's 60 seconds.\n\n187\n00:09:23.650 --> 00:09:24.580\nIt's not long.\n\n188\n00:09:24.580 --> 00:09:28.020\nSo have you ever gone to a website added\nsome stuff to a shopping cart without\n\n189\n00:09:28.020 --> 00:09:32.530\nlogging in and maybe went to another page\nfor a minute or you just got sidetracked\n\n190\n00:09:32.530 --> 00:09:34.650\ntook a phone call and\nthen you came back and went to purchase?\n\n191\n00:09:34.650 --> 00:09:36.910\nImagine if your cart was empty\nevery time that happened?\n\n192\n00:09:36.910 --> 00:09:38.230\nThat'd be super annoying.\n\n193\n00:09:38.230 --> 00:09:41.970\nSo if we want to avoid that we need\nto come in and configure stickiness.\n\n194\n00:09:41.970 --> 00:09:42.590\nAll right.\n\n195\n00:09:42.590 --> 00:09:43.350\nSo to do that,\n\n196\n00:09:43.350 --> 00:09:45.720\nall we have to do is hit edit right\nthere by that stickiness disabled.\n\n197\n00:09:45.720 --> 00:09:46.500\nAnd we'll get some choices.\n\n198\n00:09:46.500 --> 00:09:49.760\nAnd there's three choices,\ndisabled being the default.\n\n199\n00:09:49.760 --> 00:09:54.630\nThe other two, we've got Enable Load\nBalancer Generated Cookie Stickiness.\n\n200\n00:09:54.630 --> 00:09:56.480\nThat's the one I was\ntalking about a minute ago.\n\n201\n00:09:56.480 --> 00:09:58.460\nInstead of having the client\nstore the cookie,\n\n202\n00:09:58.460 --> 00:09:59.870\nwe can store it right here in the ELB.\n\n203\n00:09:59.870 --> 00:10:02.320\nIt can generate it based on\nthat clients information.\n\n204\n00:10:02.320 --> 00:10:06.370\nSo we can generate the cookie there and\nthe ELB can set a timer for it.\n\n205\n00:10:06.370 --> 00:10:09.280\nSo it can determine how long we\nwant that session to be valid for.\n\n206\n00:10:09.280 --> 00:10:11.930\nSo when I choose that,\nhere's my expiration period.\n\n207\n00:10:11.930 --> 00:10:16.070\nAnd so I can set that to make it five\nminutes, make it thirty minutes.\n\n208\n00:10:16.070 --> 00:10:17.710\nIf I leave it empty.\n\n209\n00:10:17.710 --> 00:10:18.920\nDisable cookie expiration.\n\n210\n00:10:18.920 --> 00:10:20.430\nIt will last forever.\n\n211\n00:10:20.430 --> 00:10:21.730\nEvery time somebody connects,\n\n212\n00:10:21.730 --> 00:10:25.110\nthey'll always be sent to the same\ninstance unless that instance goes down.\n\n213\n00:10:25.110 --> 00:10:27.220\nIf it fails, yeah,\nit'll send them to another instance, but\n\n214\n00:10:27.220 --> 00:10:28.990\notherwise they're always\ngonna go to the same one.\n\n215\n00:10:28.990 --> 00:10:33.060\nNow, I can preserve their session\neven if they come back the next day,\n\n216\n00:10:33.060 --> 00:10:36.900\nassuming their characteristics haven't\nchanged, if they're on the same computer,\n\n217\n00:10:36.900 --> 00:10:39.880\nsame IP, all that stuff's the same,\nthen they'll end up in the same place.\n\n218\n00:10:39.880 --> 00:10:40.430\nAll right.\n\n219\n00:10:40.430 --> 00:10:43.180\nSo that's one option that I can do.\n\n220\n00:10:43.180 --> 00:10:46.540\nThe other option is Enable Application\nGenerated Cookie Stickiness.\n\n221\n00:10:46.540 --> 00:10:51.380\nAnd with this, what happens is your web\napp, so your shopping cart program,\n\n222\n00:10:51.380 --> 00:10:55.390\nyour web software, whatever it is that\nyou use, it generates the cookie.\n\n223\n00:10:55.390 --> 00:10:58.780\nAnd the ELB will actually\nintercept the cookie.\n\n224\n00:10:58.780 --> 00:11:02.250\nInstead of sending it down to the client,\nit will intercept it and store it.\n\n225\n00:11:02.250 --> 00:11:04.900\nSo we have to tell it\nthe name of that cookie.\n\n226\n00:11:04.900 --> 00:11:05.400\nRight?\n\n227\n00:11:05.400 --> 00:11:08.450\nSo this might be the itprotv web app.\n\n228\n00:11:08.450 --> 00:11:08.970\nRight?\n\n229\n00:11:08.970 --> 00:11:11.970\nAnd in my web software I would tell it,\nhey generate a cookie and\n\n230\n00:11:11.970 --> 00:11:12.850\ngive it this name.\n\n231\n00:11:12.850 --> 00:11:14.020\nThe names have to match.\n\n232\n00:11:14.020 --> 00:11:15.970\nAnd if it matches we'll now intercept it.\n\n233\n00:11:15.970 --> 00:11:18.840\nBut it's up to my application to\ngenerate that cookie cuz the ELB\n\n234\n00:11:18.840 --> 00:11:20.010\nwon't do it itself.\n\n235\n00:11:20.010 --> 00:11:20.580\nRight?\nBut\n\n236\n00:11:20.580 --> 00:11:23.720\nI have more control over that now because\nwe're kind of making it on our side.\n\n237\n00:11:23.720 --> 00:11:28.110\nSo these are different options we can\nchoose that creates that stickiness.\n\n238\n00:11:28.110 --> 00:11:29.830\nNow, when we do\nan application generator one,\n\n239\n00:11:29.830 --> 00:11:31.940\nnotice how I don't have a timer anymore,\nright?\n\n240\n00:11:31.940 --> 00:11:34.940\nAnd it's because it's up to\nthe application to set the timer.\n\n241\n00:11:34.940 --> 00:11:37.830\nIt's gonna create the cookie that's\ngonna include the timer in it, right?\n\n242\n00:11:37.830 --> 00:11:40.280\nAnd it's gonna do all the legwork\nthere and send it over,\n\n243\n00:11:40.280 --> 00:11:42.140\nwe're just gonna intercept it, right?\n\n244\n00:11:42.140 --> 00:11:45.140\nBut if I choose to let\nthe ELB generate it,\n\n245\n00:11:45.140 --> 00:11:46.610\nI've got to set the timer and specify it.\n\n246\n00:11:46.610 --> 00:11:49.890\nSo I might want to set it for\nfive minutes, 300 seconds, right?\n\n247\n00:11:49.890 --> 00:11:52.470\nAnd now I can save it and\nthat's going to be my stickiness mode.\n\n248\n00:11:52.470 --> 00:11:55.340\nNow for most of us,\nwe're not going to worry about this.\n\n249\n00:11:55.340 --> 00:11:57.300\nCookies are a regular routine thing.\n\n250\n00:11:57.300 --> 00:12:00.410\nWhen people go to a website and even\nin Europe, you throw the banner up and\n\n251\n00:12:00.410 --> 00:12:03.440\nyou say we use cookies, and if someone\nsays no, Well then your sites broken,\n\n252\n00:12:03.440 --> 00:12:07.420\nthat's it they chose no they could have\nchosen yes and we did the disclaimer of\n\n253\n00:12:07.420 --> 00:12:10.340\nwhat the cookies are used for and\nthen everything would work just fine.\n\n254\n00:12:10.340 --> 00:12:13.065\nRight, << They don't like\nyour cookie site then.\n\n255\n00:12:13.065 --> 00:12:18.160\n<< Well, it's just like popups there\nare plenty of websites that use popups and\n\n256\n00:12:18.160 --> 00:12:20.770\nif you choose to block\nthe popups as well you block\n\n257\n00:12:20.770 --> 00:12:25.280\nthe functionality of the site it's not\ngoing to work And so that's how it is.\n\n258\n00:12:25.280 --> 00:12:30.010\nBut in a sales environment,\nit's hard to tell the CEO that.\n\n259\n00:12:30.010 --> 00:12:31.160\nLike, well the customer chose it.\n\n260\n00:12:31.160 --> 00:12:33.990\nAnd the CEO says well can't\nwe sell it to them anyway?\n\n261\n00:12:33.990 --> 00:12:36.280\nThis is a sale, you're turning down money.\n\n262\n00:12:36.280 --> 00:12:39.390\nAnd we don't want that, so\nthat's where these become more important.\n\n263\n00:12:39.390 --> 00:12:42.770\nWe can start to set these options and\nit is a pretty handy thing to do.\n\n264\n00:12:42.770 --> 00:12:44.550\nThis is all influencing stickiness.\n\n265\n00:12:44.550 --> 00:12:49.390\nAnd just as an example,\nI mentioned Microsoft Terminal Servers.\n\n266\n00:12:49.390 --> 00:12:54.100\nIf you have the Remote Desktop Services or\nRemote Desktop Gateway, whatever,\n\n267\n00:12:54.100 --> 00:12:57.080\nthey change the name with every version\nit seems, but the old terminal server.\n\n268\n00:12:57.080 --> 00:13:01.870\nEven Citrix servers that do this,\nwhere you remote into a hosted desktop.\n\n269\n00:13:01.870 --> 00:13:05.280\nWell, I might want somebody to\nalways go to the same instance so\n\n270\n00:13:05.280 --> 00:13:07.210\nthey can get their active running session.\n\n271\n00:13:07.210 --> 00:13:10.820\nIf I send them to a new instance,\nthey might get an all new desktop, and\n\n272\n00:13:10.820 --> 00:13:12.470\nall their running software is gone, right?\n\n273\n00:13:12.470 --> 00:13:14.740\nThe documents they were working\non they hadn't saved are gone.\n\n274\n00:13:14.740 --> 00:13:16.780\nSo for that, I can come in here and\n\n275\n00:13:16.780 --> 00:13:21.226\nchoose to let the load balancer generate\na cookie because, does RDP use cookies?\n\n276\n00:13:21.226 --> 00:13:22.723\nNo, right?\n\n277\n00:13:22.723 --> 00:13:24.690\n>> [LAUGH]\n>> So it doesn't even generate them, so\n\n278\n00:13:24.690 --> 00:13:26.280\nI can let the ELB generate it itself.\n\n279\n00:13:26.280 --> 00:13:29.810\nFor a system that wouldn't even normally\nuse cookies, it can do it for me.\n\n280\n00:13:29.810 --> 00:13:33.720\nSo it's kinda neat that we can retrofit\nconnections that don't even use cookies to\n\n281\n00:13:33.720 --> 00:13:35.750\nbe able to take advantage of this,\nso it's cool functionality.\n\n282\n00:13:35.750 --> 00:13:38.760\n>> So Don, would you say that\nthe load balancer generated\n\n283\n00:13:38.760 --> 00:13:42.440\ncookie ability would be the\n>> The better way to go than\n\n284\n00:13:42.440 --> 00:13:44.090\nan application generated?\n\n285\n00:13:44.090 --> 00:13:45.380\n>> That's a tough one to say right?\n\n286\n00:13:45.380 --> 00:13:49.860\nBecause when you do the ELB one it doesn't\nhave a whole lot in that cookie so if\n\n287\n00:13:49.860 --> 00:13:53.550\nyou're using that cookie for other things\nyou'll want to generate it yourself.\n\n288\n00:13:54.870 --> 00:13:58.440\nIt just depends on the environment\nwhich route their gonna go on that one.\n\n289\n00:13:58.440 --> 00:13:59.570\nI've used all three of these,\n\n290\n00:13:59.570 --> 00:14:03.890\nhonestly 99% of the time I don't use\nstickiness at all because I know that\n\n291\n00:14:03.890 --> 00:14:07.910\nI've got my own cookie system in place and\n>> For auto-scaling,\n\n292\n00:14:07.910 --> 00:14:10.910\nyou really don't want to get\nlocked down to instances, right?\n\n293\n00:14:10.910 --> 00:14:14.530\nLet me give you an example there, so\nlet's say that I turn on stickiness and\n\n294\n00:14:14.530 --> 00:14:20.190\nI've got a five node, I've got five\ninstances behind my load balancer,\n\n295\n00:14:20.190 --> 00:14:22.830\nand so everybody's coming in, everybody's\nconnecting, they're getting mapped across\n\n296\n00:14:22.830 --> 00:14:28.010\nthese five nodes And then I see them at\n100% utilization, so I add one more node.\n\n297\n00:14:28.010 --> 00:14:31.150\nI go to six, add some more,\nmaybe I add two or three more.\n\n298\n00:14:32.490 --> 00:14:35.350\nWell, if I do that,\nI add those three nodes, I sit there and\n\n299\n00:14:35.350 --> 00:14:40.200\nI wait, I might see the three new nodes\nare sitting there at zero utilization.\n\n300\n00:14:40.200 --> 00:14:42.650\nIt didn't balance,\nwhat the heck's going on?\n\n301\n00:14:42.650 --> 00:14:45.790\n>> Well, it's because I've\noverridden the balancing algorithm.\n\n302\n00:14:45.790 --> 00:14:50.190\nEverybody who's currently connected\nhas their instances stuck or\n\n303\n00:14:50.190 --> 00:14:53.850\nhas their sessions stuck to\nthe instances that already existed.\n\n304\n00:14:53.850 --> 00:14:58.060\nOnly new users would get moved\nover to these three new nodes and\n\n305\n00:14:58.060 --> 00:14:58.780\nnow I'm kind of screwed.\n\n306\n00:14:58.780 --> 00:15:02.420\n>> Yeah, you're basically marrying\nthe session with the node.\n\n307\n00:15:02.420 --> 00:15:04.900\n>> So capacity planning\nbecomes really challenging and\n\n308\n00:15:04.900 --> 00:15:07.720\nso if you're gonna do this\n>> What you have to\n\n309\n00:15:07.720 --> 00:15:08.770\ndo is you have to react early.\n\n310\n00:15:08.770 --> 00:15:09.850\nYou have to react early.\n\n311\n00:15:09.850 --> 00:15:13.020\nYou have to add more space well\nbefore you actually need it.\n\n312\n00:15:13.020 --> 00:15:16.310\nBecause if you hit the point where you\nneed it, everybody is already mapped.\n\n313\n00:15:16.310 --> 00:15:20.190\nEverybody is already stuck, so\nonly new people get sent to the new nodes.\n\n314\n00:15:20.190 --> 00:15:24.520\nAnd the only option there is to scale up,\nto take those existing instances and\n\n315\n00:15:24.520 --> 00:15:27.890\nadd some more CPU to them or drain them,\nor you could shut those instances down and\n\n316\n00:15:27.890 --> 00:15:29.160\nforce people to be remapped.\n\n317\n00:15:29.160 --> 00:15:31.150\nThat's going to create a great experience,\nright?\n\n318\n00:15:31.150 --> 00:15:32.970\nAnd you're under a heavy\nload when that happens,\n\n319\n00:15:32.970 --> 00:15:35.890\nwhich means you're doing the most business\npossible, the worst time to do it.\n\n320\n00:15:35.890 --> 00:15:39.470\nSo if you adjust these stickiness values,\n\n321\n00:15:39.470 --> 00:15:42.440\nkeep in mind that you are overriding\nthat algorithm, and so\n\n322\n00:15:42.440 --> 00:15:47.860\nyou need to make sure that you react\nto any kind of utilization issues.\n\n323\n00:15:47.860 --> 00:15:50.930\nNormally I might say, Hey I'm going\nto wait till my servers get to 80%\n\n324\n00:15:50.930 --> 00:15:55.370\nutilization Before I start adding more\nnodes to that auto scale group, right?\n\n325\n00:15:55.370 --> 00:15:58.235\nBut if I override the stickiness,\nI might do it at 70% or\n\n326\n00:15:58.235 --> 00:16:02.540\n60% like, let's keep these servers\nrunning at lower utilization, and\n\n327\n00:16:02.540 --> 00:16:05.750\nthat way when the systems do get busy,\npeople can stay stuck\n\n328\n00:16:05.750 --> 00:16:08.700\nto their instances and\nthere's still headroom above it, right?\n\n329\n00:16:08.700 --> 00:16:11.700\nThey still have a little bit of gap, so\ndefinitely part of the plan when it comes\n\n330\n00:16:11.700 --> 00:16:16.310\nin there When you override this, you're\nbasically saying, I know more than Amazon.\n\n331\n00:16:16.310 --> 00:16:18.270\nI can do this better than Amazon.\n\n332\n00:16:18.270 --> 00:16:19.480\nAnd so, there's gonna be some work there.\n\n333\n00:16:19.480 --> 00:16:21.870\nSo you can actually do\nit better than Amazon.\n\n334\n00:16:21.870 --> 00:16:23.140\n>> So grab a rack and settle in.\n\n335\n00:16:23.140 --> 00:16:24.445\nYou're gonna have some work ahead of you.\n\n336\n00:16:24.445 --> 00:16:25.390\n>> [LAUGH]\n>> Now the only other question\n\n337\n00:16:25.390 --> 00:16:29.370\nI would have about this Don, would be\nbecause I ask questions like this.\n\n338\n00:16:29.370 --> 00:16:32.550\nIs can you run a mixed environment\nof the load balance generated and\n\n339\n00:16:32.550 --> 00:16:36.040\nthe application generated And\nis that practical.\n\n340\n00:16:36.040 --> 00:16:38.070\n>> It's not practical within one ELB.\n\n341\n00:16:38.070 --> 00:16:38.720\n>> Okay.\n\n342\n00:16:38.720 --> 00:16:41.390\n>> Right?\nBut you could always create two ELBs,\n\n343\n00:16:41.390 --> 00:16:42.040\nright?\n\n344\n00:16:42.040 --> 00:16:44.400\nCuz like these,\nif you come in here and look.\n\n345\n00:16:44.400 --> 00:16:45.880\nLike, let me pull this guy up.\n\n346\n00:16:45.880 --> 00:16:49.900\nSo here's the ELB I made in the last\nshow and when I take a look at\n\n347\n00:16:49.900 --> 00:16:54.310\nthe instances in it, see how I've added\nthese three web servers to it, right?\n\n348\n00:16:54.310 --> 00:16:57.610\nBut I made this other ELB I don't know,\nsome other show,\n\n349\n00:16:57.610 --> 00:17:00.585\nat some point, apparently I've made it and\nleft it behind, so I'm paying for it.\n\n350\n00:17:00.585 --> 00:17:02.540\n[LAUGH] Cuz that's apparently what I do.\n\n351\n00:17:02.540 --> 00:17:05.670\nSo, I've got this other ELB, and notice\nthat I've got some of the same instances.\n\n352\n00:17:05.670 --> 00:17:07.680\nI've got instance overlap, right?\n\n353\n00:17:07.680 --> 00:17:10.110\nOne instance can be in more than one ELB.\n\n354\n00:17:10.110 --> 00:17:14.030\nSo, I could create two ELBs, one that was\nusing just the standard algorithm and\n\n355\n00:17:14.030 --> 00:17:16.020\none that was using a sticky instance.\n\n356\n00:17:16.020 --> 00:17:20.800\nAnd I could have different DNS names tied\nto these so that people accessing one DNS\n\n357\n00:17:20.800 --> 00:17:24.570\nname did get stickiness and one accessing\nanother DNS name didn't get stickiness.\n\n358\n00:17:24.570 --> 00:17:29.230\nSo I might say like once you've\nlogged in your logged in,\n\n359\n00:17:29.230 --> 00:17:32.610\nI don't need that sticky stuff anymore cuz\nI can track it all through your account\n\n360\n00:17:32.610 --> 00:17:35.500\nand so once you log in I might transition\nyou over to this other DNS name where\n\n361\n00:17:35.500 --> 00:17:37.230\nthe algorithms don't apply anymore.\n\n362\n00:17:37.230 --> 00:17:40.990\nBut if your not logged in, if your\nannonomyous I need the stickiness because\n\n363\n00:17:40.990 --> 00:17:44.490\nI need I don't have a login to track\nyou by and so we take it that way,\n\n364\n00:17:44.490 --> 00:17:46.850\nit would have to be two dns names.\n\n365\n00:17:46.850 --> 00:17:49.900\nThere are other ways to do it but\nthat would be the easiest Very cool.\n\n366\n00:17:50.980 --> 00:17:53.890\nJust for thoroughness side I threw\nthat one in there for our viewers.\n\n367\n00:17:53.890 --> 00:17:56.680\nAll right Don is there anything else\nthat we would need to, or just for\n\n368\n00:17:56.680 --> 00:17:59.480\nthe AWS SysOps certification\n\n369\n00:17:59.480 --> 00:18:02.520\npurposes that we would need to know\nabout this stickiness business?\n\n370\n00:18:02.520 --> 00:18:03.320\n>> That's about it.\n\n371\n00:18:03.320 --> 00:18:05.980\nAnd really as far as getting\nthe ELBs configured that's about it.\n\n372\n00:18:05.980 --> 00:18:08.220\nWe really don't need to know a ton on\nthem cuz they are pretty simple and\n\n373\n00:18:08.220 --> 00:18:09.530\nthey are managed by By Amazon.\n\n374\n00:18:09.530 --> 00:18:10.730\nSo we've kinda seen it.\n\n375\n00:18:10.730 --> 00:18:14.300\nI do wanna talk a little bit about\nhow to monitor the ELBs, but\n\n376\n00:18:14.300 --> 00:18:15.690\nlet's save that for the next episode.\n\n377\n00:18:15.690 --> 00:18:17.590\nWe'll chunk it in there and\nget a chance to see it.\n\n378\n00:18:17.590 --> 00:18:18.630\n>> All right, sounds good.\n\n379\n00:18:18.630 --> 00:18:22.280\nThank you so much for\nthose Explanations on using these ELBs,\n\n380\n00:18:22.280 --> 00:18:24.320\ngetting them spun up and running for us.\n\n381\n00:18:24.320 --> 00:18:27.225\nAnd then maybe even employing that\nstickiness if we feel so strong.\n\n382\n00:18:27.225 --> 00:18:30.750\n[LAUGH] That being said, we're gonna\ngo ahead and sign off for IT pro TV.\n\n383\n00:18:30.750 --> 00:18:32.750\nI've been your host, Daniel Lowery.\n\n384\n00:18:32.750 --> 00:18:33.430\n>> And I'm Don Pezet.\n\n385\n00:18:33.430 --> 00:18:34.552\n>> And we'll see you next time.\n\n",
          "vimeoId": "146523434"
        },
        {
          "description": "In this episode, Daniel and Don explore the monitoring services available for AWS users that are employing Elastic Load Balancing. Here they go over basic monitoring as well as the advanced monitoring features in CloudWatch. They also walk you through some of the error codes you may encounter when monitoring an ELB instance.",
          "length": "1203",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/amazon-acsa/amazon-acsa-5-2-monitoring_elb-111915-1.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/amazon-acsa/amazon-acsa-5-2-monitoring_elb-111915-1-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/amazon-acsa/amazon-acsa-5-2-monitoring_elb-111915-1-sm.jpg",
          "title": "Monitoring ELB",
          "transcript": "WEBVTT\n\n1\n00:00:00.171 --> 00:00:10.171\n[MUSIC]\n\n2\n00:00:11.375 --> 00:00:12.304\nAll right.\n\n3\n00:00:12.304 --> 00:00:13.610\nGreetings everyone.\n\n4\n00:00:13.610 --> 00:00:16.120\nWelcome to another great\nepisode of IT Pro TV.\n\n5\n00:00:16.120 --> 00:00:19.250\nI'm your host Daniel Lowrie,\nand in this episode,\n\n6\n00:00:19.250 --> 00:00:23.450\nwe're gonna continue on with more\nAmazon AWS certified sysops admin.\n\n7\n00:00:23.450 --> 00:00:27.480\nAnd who better to help us out with that\ntopic than my good friend, Don Pezet.\n\n8\n00:00:27.480 --> 00:00:29.600\nHe's here with us today,\nwelcome to the show Don.\n\n9\n00:00:29.600 --> 00:00:30.400\nHow are you?\n\n10\n00:00:30.400 --> 00:00:31.260\n>> Doing great Daniel.\n\n11\n00:00:31.260 --> 00:00:35.310\nAnd glad to be back talking a little\nbit more about elastic load balancers.\n\n12\n00:00:35.310 --> 00:00:38.780\nI know we've seen how to set them up,\nwe saw some of the advanced features.\n\n13\n00:00:38.780 --> 00:00:41.740\nNow we just need to round things off with\na little bit of monitoring to make sure\n\n14\n00:00:41.740 --> 00:00:44.350\nthat, you know we configured the things.\n\n15\n00:00:44.350 --> 00:00:45.750\nDo we even know if they are working?\n\n16\n00:00:45.750 --> 00:00:47.950\nSo we're gonna get a chance to\nsee that in this episode and\n\n17\n00:00:47.950 --> 00:00:49.940\nkind of wind down on the old ELB world.\n\n18\n00:00:49.940 --> 00:00:52.580\n>> Yeah unfortunately\nit's part of our days.\n\n19\n00:00:52.580 --> 00:00:55.510\nWe are sys admins,\nwe're gonna be monitoring systems and\n\n20\n00:00:55.510 --> 00:00:59.930\nif we've sweat up some ELB's, we're using\nELB's, well that's part of our system.\n\n21\n00:00:59.930 --> 00:01:03.540\nWe need to check and make sure everything\nis working as it's supposed to.\n\n22\n00:01:03.540 --> 00:01:04.810\nSo Don, you're gonna take us through that.\n\n23\n00:01:04.810 --> 00:01:08.060\nYou're gonna show us how to set\nup the monitoring sessions, and\n\n24\n00:01:08.060 --> 00:01:10.220\nsee what kind of information\nwe get back from them.\n\n25\n00:01:10.220 --> 00:01:12.980\n>> Yeah and\nactually it's funny you say it that way,\n\n26\n00:01:12.980 --> 00:01:16.420\nI'm gonna show you how to set this up and\nnormally what would I think?\n\n27\n00:01:16.420 --> 00:01:21.550\nI wanna monitor something in AWS all right\nwell it's time to fire up old cloudwatch,\n\n28\n00:01:21.550 --> 00:01:23.460\nand start to configure all\nthe different counters, and\n\n29\n00:01:23.460 --> 00:01:25.860\nall that other good stuff in there and\nget things going.\n\n30\n00:01:25.860 --> 00:01:27.970\nWell you actually do, right?\n\n31\n00:01:27.970 --> 00:01:29.880\nSo we've got a way to monitor the system.\n\n32\n00:01:29.880 --> 00:01:31.420\nBut there's some things we\nneed to be aware of, right?\n\n33\n00:01:31.420 --> 00:01:34.130\nFirst off, basically, AWS.\n\n34\n00:01:34.130 --> 00:01:37.120\nWhen we deploy an ELB,\nAmazon does that for us, right?\n\n35\n00:01:37.120 --> 00:01:38.390\nThey manage the server.\n\n36\n00:01:38.390 --> 00:01:41.130\nSo they're already doing\nsome monitoring for us.\n\n37\n00:01:41.130 --> 00:01:44.250\nThey're polling your ELB every 60 seconds.\n\n38\n00:01:44.250 --> 00:01:46.790\nSo once minute, they poll the ELB.\n\n39\n00:01:46.790 --> 00:01:48.500\nAnd you might remember,\nin the last episode,\n\n40\n00:01:48.500 --> 00:01:50.970\nwhere we talked about pre-warming an ELB.\n\n41\n00:01:50.970 --> 00:01:54.050\nWell they're looking at it once\na minute to look at your traffic, and\n\n42\n00:01:54.050 --> 00:01:56.770\ndetermine whether you need to increase or\ndecrease the hardware on it.\n\n43\n00:01:56.770 --> 00:01:59.430\nAnd that's why we might need to pre warm,\nbecause that could be a whole minute that\n\n44\n00:01:59.430 --> 00:02:02.840\nour website is down before it\nscales up to increase bandwidth.\n\n45\n00:02:02.840 --> 00:02:06.680\nSo they're monitoring that every\nsixty seconds and reporting on it.\n\n46\n00:02:06.680 --> 00:02:09.260\nSo we'll be able to get in and\nsee that information.\n\n47\n00:02:09.260 --> 00:02:12.890\nBut there is something real important\nto remember, especially on the exam.\n\n48\n00:02:12.890 --> 00:02:16.380\nIf you're setting up a new ELB or\nyou've taken an ELB out of service,\n\n49\n00:02:16.380 --> 00:02:19.430\nor your website sucks and\nit just isn't very popular.\n\n50\n00:02:19.430 --> 00:02:24.240\nIf you don't have any traffic on the ELB,\nit won't report.\n\n51\n00:02:24.240 --> 00:02:28.010\nSo what happens is,\nit's actually a push report.\n\n52\n00:02:28.010 --> 00:02:33.060\nThe ELB generates its own data and\npushes it over to cloud watch.\n\n53\n00:02:33.060 --> 00:02:36.270\nSo every 60 seconds,\nit's pushing that data.\n\n54\n00:02:36.270 --> 00:02:39.590\nAnd if it has no traffic,\nit just doesn't push the data.\n\n55\n00:02:39.590 --> 00:02:43.000\nSo when we go to view our reports\nit won't show up as zeroes,\n\n56\n00:02:43.000 --> 00:02:45.560\nit'll show up as nothing,\nno reporting data whatsoever.\n\n57\n00:02:45.560 --> 00:02:48.030\nThat gets to be a little confusing,\nespecially if you're practicing for\n\n58\n00:02:48.030 --> 00:02:48.930\nthe exam.\n\n59\n00:02:48.930 --> 00:02:53.300\nCuz you might whip up an ELB and then wait\nan hour and go to look at reports, and\n\n60\n00:02:53.300 --> 00:02:54.140\nthere's no data there.\n\n61\n00:02:54.140 --> 00:02:55.260\nYou're like, what the heck?\n\n62\n00:02:55.260 --> 00:02:57.760\nThere's no information,\nIt's cuz you've got a flow traffic.\n\n63\n00:02:57.760 --> 00:03:00.100\nIf you don't have any traffic,\nyou won't get any reporting.\n\n64\n00:03:00.100 --> 00:03:02.990\n>> So these reports Don, obviously\nwe're gonna wanna take a look at them.\n\n65\n00:03:02.990 --> 00:03:05.980\nAnd I think you mentioned that\nthis is done in cloud watch.\n\n66\n00:03:05.980 --> 00:03:08.310\nThis isn't something that's\nalready kind of enabled or\n\n67\n00:03:08.310 --> 00:03:09.480\non the free tier or whatever.\n\n68\n00:03:09.480 --> 00:03:11.405\n>> Well\n>> It's actually kind of a mix right?\n\n69\n00:03:11.405 --> 00:03:14.435\nBecause normally we say cloud watch and\nit's like a red flag.\n\n70\n00:03:14.435 --> 00:03:15.032\nYou're like crap.\n\n71\n00:03:15.032 --> 00:03:16.605\n>> [LAUGH]\n>> I gotta go set up cloud watch,\n\n72\n00:03:16.605 --> 00:03:19.935\nand I'm gonna have to pay some money, cuz\nyou get the free usage tier, which comes\n\n73\n00:03:19.935 --> 00:03:23.415\nwith some cloud watch monitoring but\nthen the advanced stuff costs more.\n\n74\n00:03:23.415 --> 00:03:27.340\nWell in this case the ELBs\nare managed by Amazon.\n\n75\n00:03:27.340 --> 00:03:29.680\nAnd Amazon kind of owns all of this stuff.\n\n76\n00:03:29.680 --> 00:03:32.120\nSo, they enable all the cloud\nwatched services for\n\n77\n00:03:32.120 --> 00:03:34.270\nthe eob's right out of the box.\n\n78\n00:03:34.270 --> 00:03:35.180\nSo it's up and running.\n\n79\n00:03:35.180 --> 00:03:37.400\nThe only time you really have\nto mess with the cloud watch for\n\n80\n00:03:37.400 --> 00:03:41.170\nthe eob's, is if you want to do monitoring\nmore frequently than every 60 seconds,\n\n81\n00:03:41.170 --> 00:03:45.120\nand they won't even let you configure that\nyou have to work with Amazon to do that.\n\n82\n00:03:45.120 --> 00:03:49.530\nSo, if we want to get the information\nIt's actually already set up for us.\n\n83\n00:03:49.530 --> 00:03:52.610\nI told Daniel earlier today like this\nis the, probably the only show we'll go\n\n84\n00:03:52.610 --> 00:03:57.000\nthrough where we don't actually have to\nconfigure anything it's all configured for\n\n85\n00:03:57.000 --> 00:04:00.000\nus, it's all already set up and\nit's really easy to do.\n\n86\n00:04:00.000 --> 00:04:01.870\nLet me show you how we work this.\n\n87\n00:04:01.870 --> 00:04:07.369\nBasically when you go into EC2 and\nyou go into your load balancers.\n\n88\n00:04:09.040 --> 00:04:10.920\nSo right in here,\nyou can pick a load balancer, so like,\n\n89\n00:04:10.920 --> 00:04:12.990\nI could take this guy up here.\n\n90\n00:04:12.990 --> 00:04:16.140\nAnd then down below, you'll see\nwhere we've got our health checks,\n\n91\n00:04:16.140 --> 00:04:19.120\nour instances, things we work with,\nand you've got a monitoring tab, and\n\n92\n00:04:19.120 --> 00:04:20.540\nin the monitoring tab,\n\n93\n00:04:20.540 --> 00:04:26.120\nit's already got Cloud Watch configured\nto view all of this information.\n\n94\n00:04:26.120 --> 00:04:30.740\nAnd so it's collecting that data, and you\ncan choose view all Cloud Watch metrics.\n\n95\n00:04:30.740 --> 00:04:34.500\nAnd when you pull that up, it's gonna\npull up the detailed CloudWatch data,\n\n96\n00:04:34.500 --> 00:04:39.500\nand it's all already set up, so it's all\nhere, and see mine, total metrics, 293,\n\n97\n00:04:39.500 --> 00:04:40.810\nthat's a couple.\n\n98\n00:04:40.810 --> 00:04:44.860\nIt's got some good information\nthat's already being gathered, and\n\n99\n00:04:44.860 --> 00:04:46.720\nI didn't have to set it up, which is nice.\n\n100\n00:04:48.460 --> 00:04:51.080\nAll right,\nnow what is all this information?\n\n101\n00:04:51.080 --> 00:04:53.050\nBecause this is a lot,\nkinda, tucked away in here.\n\n102\n00:04:53.050 --> 00:04:54.910\nWhen we go to monitor this stuff,\n\n103\n00:04:54.910 --> 00:04:57.530\nit basically starts by\ngiving us some charts, here.\n\n104\n00:04:57.530 --> 00:05:00.580\nAnd, these are the things that are really\nthe most commonly useful for us.\n\n105\n00:05:00.580 --> 00:05:03.980\nSo, we'll see several metrics in here,\nthat each have a particular meaning.\n\n106\n00:05:03.980 --> 00:05:07.150\nAnd let me just kind of run through\nsome of the more important ones.\n\n107\n00:05:07.150 --> 00:05:10.870\nLike for this ELB, actually let me\npick the one I made in the other show,\n\n108\n00:05:10.870 --> 00:05:12.490\nmaybe it's got some better data.\n\n109\n00:05:12.490 --> 00:05:13.650\nNo, it's pretty lame too.\n\n110\n00:05:13.650 --> 00:05:16.190\nWell, anyhow, we'll use this one.\n\n111\n00:05:16.190 --> 00:05:18.270\nSo my other ELB's not really flowing data,\nso\n\n112\n00:05:18.270 --> 00:05:19.630\nit's not got a lot of information in it.\n\n113\n00:05:19.630 --> 00:05:21.860\nMy new ELB doesn't have\na lot of data either cuz I'm\n\n114\n00:05:21.860 --> 00:05:23.220\nnot flowing a lot through it.\n\n115\n00:05:23.220 --> 00:05:26.310\nSo, when I look at it here I've\ngot my Healthy Hosts Count.\n\n116\n00:05:26.310 --> 00:05:30.470\nWell, I'll give you three\nguesses as to what that means.\n\n117\n00:05:30.470 --> 00:05:35.110\nIt's how many healthy instances\nwe have behind the load bouncer.\n\n118\n00:05:35.110 --> 00:05:39.440\nWhen you choose a load bouncer\nyou go to the instances tab,\n\n119\n00:05:39.440 --> 00:05:44.220\nit will list the instances in it, and I\ncan see instances that are out of service,\n\n120\n00:05:44.220 --> 00:05:46.080\nand instances that are in the service.\n\n121\n00:05:46.080 --> 00:05:48.050\nSo when I look at mine,\nI've got three instances.\n\n122\n00:05:48.050 --> 00:05:49.630\nTwo of them are out of service.\n\n123\n00:05:49.630 --> 00:05:50.650\nWhy is that?\n\n124\n00:05:50.650 --> 00:05:52.130\nWhy are they out of service?\n\n125\n00:05:52.130 --> 00:05:54.390\nWell, you can float over here and\nget a little bit of information.\n\n126\n00:05:54.390 --> 00:05:56.940\nBasically it's telling us\nthe health check has failed.\n\n127\n00:05:56.940 --> 00:06:00.135\nAnd so if I go and look at my health\ncheck, well I set this to look for\n\n128\n00:06:00.135 --> 00:06:04.810\nindex.php So, maybe they don't\nhave that index.php on there.\n\n129\n00:06:04.810 --> 00:06:05.820\nMaybe they're not rendering.\n\n130\n00:06:05.820 --> 00:06:07.590\nMaybe the Apache service has stopped.\n\n131\n00:06:07.590 --> 00:06:09.920\nMaybe the security group\nis configured wrong.\n\n132\n00:06:09.920 --> 00:06:11.770\nThere's any number of things\nthat could cause it, but\n\n133\n00:06:11.770 --> 00:06:13.490\nthe point is it's not\npassing the health check,\n\n134\n00:06:13.490 --> 00:06:17.640\nso the load balancer is not\nsending any traffic to that node.\n\n135\n00:06:17.640 --> 00:06:21.420\nIf I fix the node, then it'll start\nresponding and we'll be in business,\n\n136\n00:06:21.420 --> 00:06:24.390\nor if I change my health check, right?\n\n137\n00:06:24.390 --> 00:06:26.580\nSo my health check is just looking for\nthat index.php.\n\n138\n00:06:26.580 --> 00:06:31.460\nIf I were to edit that, and\nmake it, like, index.html, or\n\n139\n00:06:31.460 --> 00:06:33.480\nsomething else that did work.\n\n140\n00:06:33.480 --> 00:06:36.030\nThen we could connect that way and see.\n\n141\n00:06:36.030 --> 00:06:39.130\nI might, you know,\nchange to some other protocol.\n\n142\n00:06:39.130 --> 00:06:42.230\nWhatever it is that it takes to get\nthat kind of fixed and squared away.\n\n143\n00:06:42.230 --> 00:06:44.030\nTo bring those nodes healthy again.\n\n144\n00:06:44.030 --> 00:06:46.490\nBut in my case I can kinda\nsee that a little more here.\n\n145\n00:06:46.490 --> 00:06:48.110\nSo in the monitoring screen,\n\n146\n00:06:48.110 --> 00:06:51.760\nas we use the cloud watch side of things,\nit's not magic.\n\n147\n00:06:51.760 --> 00:06:54.670\nIt's not gonna tell you why\nsystems are broken, but\n\n148\n00:06:54.670 --> 00:06:56.070\nit's gonna let you know that they are.\n\n149\n00:06:56.070 --> 00:06:57.050\nAnd you can start to take action.\n\n150\n00:06:57.050 --> 00:07:00.710\nSo I can see I've got this one\nhealthy node and it's been like that.\n\n151\n00:07:00.710 --> 00:07:02.570\nFor awhile, right?\n\n152\n00:07:02.570 --> 00:07:06.400\nAnd my reporting data here kind of started\nwhen I created that ELB not too long ago.\n\n153\n00:07:06.400 --> 00:07:10.170\nIf I look at my older one,\nthis one's been up a lot longer.\n\n154\n00:07:10.170 --> 00:07:11.810\nAnd so when I look at its information I\n\n155\n00:07:13.010 --> 00:07:15.150\ncan see it's only got that\none healthy node also.\n\n156\n00:07:15.150 --> 00:07:18.420\nSo I apparently don't have\nany very healthy ELBs.\n\n157\n00:07:18.420 --> 00:07:19.135\nI need to get to work.\n\n158\n00:07:19.135 --> 00:07:21.110\n[LAUGH] So healthy host is a good one.\n\n159\n00:07:21.110 --> 00:07:23.550\nYou also have unhealthy host,\nwhich, again,\n\n160\n00:07:23.550 --> 00:07:25.540\nI'll give you three guesses\nas to what that one is.\n\n161\n00:07:25.540 --> 00:07:27.370\nThese are the ones that are not so\nhealthy, and\n\n162\n00:07:27.370 --> 00:07:29.360\nI've only got one\nunhealthy host in this one.\n\n163\n00:07:29.360 --> 00:07:30.830\nI have two in the other.\n\n164\n00:07:30.830 --> 00:07:32.600\nSo it's basically metering that.\n\n165\n00:07:32.600 --> 00:07:34.840\nI can get an idea that I have\nsome unhealthy hosts, and\n\n166\n00:07:34.840 --> 00:07:37.420\nI can see how long it's been.\n\n167\n00:07:37.420 --> 00:07:41.270\nLooking at this, see how I'm really only\nseeing about an hour's worth of data?\n\n168\n00:07:41.270 --> 00:07:45.928\n>> If I click on that chart, it zooms it\nout, and I can see on this one, going back\n\n169\n00:07:45.928 --> 00:07:49.971\nfurther, and this is adjustable,\nso we can start to scroll back.\n\n170\n00:07:49.971 --> 00:07:54.431\nI'm gonna change it from the last hour\nto maybe the last 24 hours, right?\n\n171\n00:07:54.431 --> 00:07:57.629\nAnd I can see where I spun up the ELB.\n\n172\n00:07:57.629 --> 00:08:01.515\nAnd then I had that unhealthy node, and\nit's been unhealthy the whole time.\n\n173\n00:08:01.515 --> 00:08:03.980\nSo that's not a great sign.\n\n174\n00:08:03.980 --> 00:08:05.270\nBut you can go through and\n\n175\n00:08:05.270 --> 00:08:08.030\nstart to kind of dial down when this\nfailure happened for that node.\n\n176\n00:08:08.030 --> 00:08:09.860\nAnd then you can go to\nyour change tickets,\n\n177\n00:08:09.860 --> 00:08:11.355\ncuz you know you kept great documentation.\n\n178\n00:08:11.355 --> 00:08:13.840\nSay what changed at that time\nthat caused this to fail?\n\n179\n00:08:13.840 --> 00:08:17.100\nOr, you can start your research\nbecause nobody documented anything and\n\n180\n00:08:17.100 --> 00:08:18.310\nthen try to figure it out from there.\n\n181\n00:08:18.310 --> 00:08:20.430\nThat's the type of data\nthat we get from here.\n\n182\n00:08:20.430 --> 00:08:22.460\nYou'll see this is\nCloudWatch Monitoring Details, but\n\n183\n00:08:22.460 --> 00:08:24.430\nI didn't have to set it up,\nit's just automatically there.\n\n184\n00:08:25.812 --> 00:08:28.460\nAll right, so let's see,\nthat was healthy and unhealthy hosts,\n\n185\n00:08:28.460 --> 00:08:29.700\nwhat other ones do we have?\n\n186\n00:08:29.700 --> 00:08:30.235\nAverage latency.\n\n187\n00:08:30.235 --> 00:08:35.621\nThe average latency, what this is talking\nabout is if a client does a request,\n\n188\n00:08:35.621 --> 00:08:38.408\nthe request makes it to the ELB, right.\n\n189\n00:08:38.408 --> 00:08:42.502\nThis is latency from the ELB\nto the back-end server.\n\n190\n00:08:42.502 --> 00:08:45.825\nSo when it goes to request that web\npage how long did it take to get\n\n191\n00:08:45.825 --> 00:08:47.350\nthat web page back?\n\n192\n00:08:47.350 --> 00:08:49.090\nAnd so\nthis will help me to measure whether or\n\n193\n00:08:49.090 --> 00:08:52.130\nnot my back end nodes are getting\ntoo sluggish, getting overwhelmed,\n\n194\n00:08:52.130 --> 00:08:56.320\nperforming too much work, and\nmy latency starts to grow for some reason.\n\n195\n00:08:56.320 --> 00:08:57.230\nRight?\nSo I can see that.\n\n196\n00:08:57.230 --> 00:09:01.000\nThis is not latency to the ELB,\nit's latency between the ELB and\n\n197\n00:09:01.000 --> 00:09:02.970\nyour instances inside of it.\n\n198\n00:09:02.970 --> 00:09:04.390\nSo that's what it's measuring,\nand I can see that.\n\n199\n00:09:04.390 --> 00:09:06.382\nSee how I don't have any data?\n\n200\n00:09:06.382 --> 00:09:09.010\nThis is what I expect to see\nwhen I don't have any traffic.\n\n201\n00:09:09.010 --> 00:09:09.520\nRight?\nSo,\n\n202\n00:09:09.520 --> 00:09:12.410\nit's not reporting every 60 seconds\nbecause I don't have traffic,\n\n203\n00:09:12.410 --> 00:09:16.721\nI have to generate some traffic data\nhere to actually get this to have,\n\n204\n00:09:16.721 --> 00:09:20.130\nwell something useful.\n\n205\n00:09:20.130 --> 00:09:23.690\n>> Because normally, when I'm monitoring,\nI want my go-to monitor,\n\n206\n00:09:23.690 --> 00:09:26.520\nright, that shows me here's\nwhere the trouble is.\n\n207\n00:09:26.520 --> 00:09:28.980\nI'm just looking for issues normally.\n\n208\n00:09:28.980 --> 00:09:32.140\nI mean, if a server's up and running, then\nit's doing everything, I'm probably not\n\n209\n00:09:32.140 --> 00:09:35.110\ngonna be looking at the monitor that says,\nhey, that server's up and running and\n\n210\n00:09:35.110 --> 00:09:38.200\ndoing its thing, I'm looking for\nissues, I'm looking for trouble.\n\n211\n00:09:38.200 --> 00:09:41.542\nWhat's going to be my go-to monitor\ninside of here that's gonna show that.\n\n212\n00:09:41.542 --> 00:09:43.830\n>> All right, there's two counters\nthat are really important, and\n\n213\n00:09:43.830 --> 00:09:45.070\nI'll be honest with you guys.\n\n214\n00:09:45.070 --> 00:09:47.430\nI'd pretty much ignore all the other\ncounters except for these two.\n\n215\n00:09:47.430 --> 00:09:48.560\nI always shoot right for them.\n\n216\n00:09:48.560 --> 00:09:51.310\nThey're down towards the bottom here,\nlet's bring this up.\n\n217\n00:09:51.310 --> 00:09:55.420\nSo if I scroll down,\nthe first one is surge queue length.\n\n218\n00:09:55.420 --> 00:09:56.920\nOkay, surge queue length.\n\n219\n00:09:56.920 --> 00:09:57.750\nWhat the heck is that.\n\n220\n00:09:57.750 --> 00:10:01.300\nWell, remember I talked\nabout pre warming RELB's.\n\n221\n00:10:01.300 --> 00:10:04.460\nThe ELBs only have so\nmuch processor memory network bandwidth.\n\n222\n00:10:04.460 --> 00:10:09.100\nAnd as our network gets busier they scale\nup to allow more traffic to pass through.\n\n223\n00:10:09.100 --> 00:10:11.610\nWell, if I start reaching\nout to an ELB and\n\n224\n00:10:11.610 --> 00:10:14.520\nit's getting overwhelmed,\npeople start getting queued.\n\n225\n00:10:14.520 --> 00:10:16.240\nThey have to wait in line.\n\n226\n00:10:16.240 --> 00:10:20.020\nThese are people that are waiting\nat the ELB to be sent\n\n227\n00:10:20.020 --> 00:10:21.620\nto an instance on the backend.\n\n228\n00:10:21.620 --> 00:10:24.790\nAll right,\nI expect to see there be a que right?\n\n229\n00:10:24.790 --> 00:10:27.320\nYou expect to see this happen because\n\n230\n00:10:27.320 --> 00:10:30.270\npeople are accessing the sight\nDOB scales up scales down.\n\n231\n00:10:30.270 --> 00:10:35.490\nBut if this queue is really big, that's a\nlot of people waiting to get to your site,\n\n232\n00:10:35.490 --> 00:10:38.810\nand really think of it that way,\nthink of each entry in here\n\n233\n00:10:38.810 --> 00:10:42.290\nas being a single persons instance,\ntheir experience on the website.\n\n234\n00:10:42.290 --> 00:10:45.850\nSo if I have 100 in here,\nwhich you see mine's measured in zero\n\n235\n00:10:45.850 --> 00:10:48.150\npoint whatever because I\ndon't have any real traffic.\n\n236\n00:10:48.150 --> 00:10:51.010\nBut If I had a queue length of 100,\n\n237\n00:10:51.010 --> 00:10:54.780\nthat would mean there's 100 sessions\nright now, 100 web browsers.\n\n238\n00:10:54.780 --> 00:10:56.710\nAnd it might be more than one\ntab on the same browser, but\n\n239\n00:10:56.710 --> 00:11:01.410\nit's more than likely 100 different people\nall waiting for access to my website.\n\n240\n00:11:01.410 --> 00:11:04.850\nThat means that my ELB is not\nkeeping up with the load.\n\n241\n00:11:04.850 --> 00:11:07.740\nAll right, and so I might need to do a\nsupport ticket with Amazon to get them to\n\n242\n00:11:07.740 --> 00:11:09.320\nbump it up even faster but\n\n243\n00:11:09.320 --> 00:11:12.580\nit normally reacts pretty\nquickly to get things in place.\n\n244\n00:11:12.580 --> 00:11:15.437\nThe other thing is,\nif I've got servers on the back end and\n\n245\n00:11:15.437 --> 00:11:17.023\nI'm not autoscaling, right?\n\n246\n00:11:17.023 --> 00:11:21.581\nSo maybe I've got an ELB and I've only\ngot five servers on the back end and\n\n247\n00:11:21.581 --> 00:11:23.466\npeople are hitting that ELB.\n\n248\n00:11:23.466 --> 00:11:26.427\nThe ELB has kind of already hit its\nmaximum, there's only five servers.\n\n249\n00:11:26.427 --> 00:11:29.488\nAnd so the ELB's not gonna\nscale up anymore because it's\n\n250\n00:11:29.488 --> 00:11:32.740\nalready hit the limit of what\nyour servers can handle.\n\n251\n00:11:32.740 --> 00:11:35.800\nSo I might need to autoscale,\nadd more servers on the back end,\n\n252\n00:11:35.800 --> 00:11:38.900\nand then the ELB will continue to scale\nup to be able to handle that, right?\n\n253\n00:11:38.900 --> 00:11:41.260\nIt's not gonna scale beyond\nwhat you can handle.\n\n254\n00:11:41.260 --> 00:11:43.590\nCuz there's no point, it's just gonna\noverwhelm your servers on the back end, so\n\n255\n00:11:43.590 --> 00:11:44.870\nAmazon doesn't do it.\n\n256\n00:11:44.870 --> 00:11:47.780\nBut this queue length is definitely\nsomething you want to monitor.\n\n257\n00:11:47.780 --> 00:11:51.260\nYou do not wanna see it be a high\nnumber for any long period of time.\n\n258\n00:11:51.260 --> 00:11:53.150\nSpikes, we expect to see those, right?\n\n259\n00:11:53.150 --> 00:11:55.830\nEbbs and flows, or peaks and valleys,\nthat's what you want to see.\n\n260\n00:11:55.830 --> 00:11:58.060\nYou don't want to see it\nconstantly being high.\n\n261\n00:11:58.060 --> 00:11:59.710\nThat's going to indicate a problem.\n\n262\n00:12:00.912 --> 00:12:04.950\nAll right, and then the other one is\nright next to it, the spill over count.\n\n263\n00:12:04.950 --> 00:12:05.590\nOkay.\n\n264\n00:12:05.590 --> 00:12:09.430\nNow, spill over count is really bad.\n\n265\n00:12:09.430 --> 00:12:11.800\nYou want your spill over count to be 0.\n\n266\n00:12:11.800 --> 00:12:16.090\nWhen we have a queue, that's people\nwaiting in line to get to the site.\n\n267\n00:12:16.090 --> 00:12:20.250\nWhen you have spill over, that means\nyou have exceeded what the ELB can do.\n\n268\n00:12:20.250 --> 00:12:24.930\nAnd instead of getting queued up,\nthe queue's full, you get thrown out.\n\n269\n00:12:24.930 --> 00:12:29.380\nSo somebody tries to get to your site,\nthe ELB is maxed out and\n\n270\n00:12:29.380 --> 00:12:30.400\nthey just get rejected.\n\n271\n00:12:30.400 --> 00:12:33.100\nRight, they can't contact server,\nthey get an error.\n\n272\n00:12:33.100 --> 00:12:35.970\nAnd when that happens,\nthat's a bad experience for them.\n\n273\n00:12:35.970 --> 00:12:38.120\nIt's a bad experience for\nyou, there's a problem.\n\n274\n00:12:38.120 --> 00:12:40.990\nIt usually means you don't have\nenough instances in your ELB.\n\n275\n00:12:40.990 --> 00:12:42.370\nIf you're auto scaling,\nthat shouldn't happen but\n\n276\n00:12:42.370 --> 00:12:44.020\nmaybe you've hit your auto scale max.\n\n277\n00:12:44.020 --> 00:12:48.630\nYou can set a maximum threshold on your\nauto scale to say maximum of 20 servers.\n\n278\n00:12:48.630 --> 00:12:50.210\nWell, maybe you hit that max.\n\n279\n00:12:50.210 --> 00:12:53.830\nAnd the ELB is at its max, and\nthen people are just getting dropped off.\n\n280\n00:12:53.830 --> 00:12:55.760\nIt could be that there's\na denial of service going on.\n\n281\n00:12:55.760 --> 00:12:58.480\nRight?\nThat your ELB is being slammed.\n\n282\n00:12:58.480 --> 00:13:00.640\nAnd Amazon gives you denial\nof service protection, so,\n\n283\n00:13:00.640 --> 00:13:02.110\nthey'll usually fix it pretty fast.\n\n284\n00:13:02.110 --> 00:13:03.520\nBut if they haven't fixed it yet,\n\n285\n00:13:03.520 --> 00:13:07.460\nyou might see this spill over\naccount really going over the edge.\n\n286\n00:13:07.460 --> 00:13:10.290\nSo, that's one you're gonna\nwanna keep an eye on to.\n\n287\n00:13:10.290 --> 00:13:13.330\nIt's gonna indicate that your\nELB can't handle the load and\n\n288\n00:13:13.330 --> 00:13:15.930\nthat means either you're under attack or\n\n289\n00:13:15.930 --> 00:13:18.810\nyou haven't specced out your\nservers right, just like the queue.\n\n290\n00:13:18.810 --> 00:13:22.470\nSo I treat it as like the Queue Length\nis kind of my warning and\n\n291\n00:13:22.470 --> 00:13:24.540\nthen the Spillover's my emergency.\n\n292\n00:13:24.540 --> 00:13:26.520\nYou want to react when\nit's just a warning.\n\n293\n00:13:26.520 --> 00:13:28.640\nBy the time you see spillover,\nit's too late.\n\n294\n00:13:28.640 --> 00:13:30.930\nCustomers are getting\na really bad experience.\n\n295\n00:13:30.930 --> 00:13:32.900\nIt's not a slow page, it's no page.\n\n296\n00:13:32.900 --> 00:13:33.815\nThat's what they're getting, right?\n\n297\n00:13:33.815 --> 00:13:35.576\nSo you definitely don't want that and\n\n298\n00:13:35.576 --> 00:13:39.272\nthose are the two counters that I really\ndial in on when I start monitoring this.\n\n299\n00:13:39.272 --> 00:13:43.404\n>> Yeah, now those counters are obviously\ngonna be very, very helpful Don.\n\n300\n00:13:43.404 --> 00:13:45.406\nYou didn't mention anything about errors.\n\n301\n00:13:45.406 --> 00:13:48.739\nI'm looking for\nerror issues with my systems there,\n\n302\n00:13:48.739 --> 00:13:52.230\nI wanna see when that's evident,\nwhere the errors at.\n\n303\n00:13:52.230 --> 00:13:54.980\n>> This is one of the confusing\nthings that happens to people.\n\n304\n00:13:54.980 --> 00:13:57.590\nAnd on the exam it can\ncertainly be confusing.\n\n305\n00:13:57.590 --> 00:13:59.980\nA lot of times when you\nthink about errors.\n\n306\n00:13:59.980 --> 00:14:00.840\nI wanna see errors.\n\n307\n00:14:00.840 --> 00:14:03.560\nAnd you might have noticed here when I\nwas looking at the Cloud Watch Data.\n\n308\n00:14:03.560 --> 00:14:08.760\nWe've got things like these HTTP 2XX,\n4XX, 5XX.\n\n309\n00:14:08.760 --> 00:14:13.150\nWe've got some more of them here\nlike back end connection errors, and\n\n310\n00:14:13.150 --> 00:14:14.300\nI didn't even mention those.\n\n311\n00:14:14.300 --> 00:14:16.325\nYou said how do we spot errors and\n\n312\n00:14:16.325 --> 00:14:18.890\nI didn't even talk about these\nguys that have error in the name.\n\n313\n00:14:18.890 --> 00:14:24.630\nWell, the reason is errors per se, don't\nreally happen on the load bouncer at all.\n\n314\n00:14:24.630 --> 00:14:26.090\nErrors really happen on\nour web server right.\n\n315\n00:14:27.610 --> 00:14:30.700\nThe load balancer, it's either\nbalancing your traffic or its not.\n\n316\n00:14:30.700 --> 00:14:32.480\nAnd then we take action from there.\n\n317\n00:14:32.480 --> 00:14:34.500\nThat's why those two other\ncounters that I pointed out.\n\n318\n00:14:34.500 --> 00:14:37.190\nThe spillover and the surge queue.\n\n319\n00:14:37.190 --> 00:14:40.330\nThose are the two that I like to watch\nbecause that's what's going on in the ELB.\n\n320\n00:14:40.330 --> 00:14:42.900\nRight, but\nyou could have problems elsewhere.\n\n321\n00:14:42.900 --> 00:14:44.890\nAnd that's what all these\nother counters are.\n\n322\n00:14:44.890 --> 00:14:48.030\nIf I go up here, I'm just gonna do\nthe view all cloud watch metrics and\n\n323\n00:14:48.030 --> 00:14:49.580\npull up the full page.\n\n324\n00:14:49.580 --> 00:14:54.420\nWhen you start to look at this information\nhere and it breaks things down,\n\n325\n00:14:54.420 --> 00:14:57.620\nwell what I'm seeing are the metrics\nthat are being brought in and you've got\n\n326\n00:14:57.620 --> 00:15:01.820\nall the different categories here and\nunder ELB we can go and pull these down.\n\n327\n00:15:01.820 --> 00:15:04.860\nAnd I'm just gonna jump into one of these.\n\n328\n00:15:04.860 --> 00:15:08.010\nAnd we'll see those same\nentries here like back end 2XX,\n\n329\n00:15:08.010 --> 00:15:13.270\nback end 4XX, and some of the other\nones that are out there, like here.\n\n330\n00:15:13.270 --> 00:15:17.150\nNow notice the difference on these,\ncuz it does get a little confusing.\n\n331\n00:15:17.150 --> 00:15:21.074\nSo some of them say HTTPCode_Backend,\n\n332\n00:15:21.074 --> 00:15:24.910\nsome say HTTPCode_ELB, all right?\n\n333\n00:15:24.910 --> 00:15:26.140\nSo what's that all about?\n\n334\n00:15:26.140 --> 00:15:29.567\nWell, what these are are all\nstandard web error codes.\n\n335\n00:15:29.567 --> 00:15:33.221\nYou ever go to a server and\nyou click on a link, and it's a bad link,\n\n336\n00:15:33.221 --> 00:15:34.280\nand what do we get?\n\n337\n00:15:34.280 --> 00:15:36.080\n404, page not found right.\n\n338\n00:15:36.080 --> 00:15:39.116\nSo 404, that would be a 4xx error,\n\n339\n00:15:39.116 --> 00:15:43.533\n4 followed by two digits,\nand 404 is page not found.\n\n340\n00:15:43.533 --> 00:15:47.630\nThere's 403s, there's 408s,\nthere's other errors that you can get.\n\n341\n00:15:47.630 --> 00:15:48.610\n500 errors.\n\n342\n00:15:48.610 --> 00:15:50.940\n500 errors are server errors.\n\n343\n00:15:50.940 --> 00:15:53.600\nRight?\nSo, a 501 is one that happens a lot.\n\n344\n00:15:53.600 --> 00:15:54.348\nOr, what's a gateway time out?\n\n345\n00:15:54.348 --> 00:15:56.547\nIts like 502.3.\n\n346\n00:15:56.547 --> 00:15:58.466\nIts got some, gateway time out.\n\n347\n00:15:58.466 --> 00:15:59.761\nBut those are server errors.\n\n348\n00:15:59.761 --> 00:16:02.849\nNow those types of errors\nhappen on web servers.\n\n349\n00:16:02.849 --> 00:16:03.847\nIs your ELB a web server?\n\n350\n00:16:03.847 --> 00:16:09.300\nNot really it's more of\na router if anything right?\n\n351\n00:16:09.300 --> 00:16:10.870\nKind of sending you to the web servers.\n\n352\n00:16:10.870 --> 00:16:13.650\nSo you're not gonna get\na page not found from an ELB.\n\n353\n00:16:13.650 --> 00:16:17.510\nYou're gonna get a page not found from\nyour instances on the backend and\n\n354\n00:16:17.510 --> 00:16:18.980\nthat's what these notations mean.\n\n355\n00:16:18.980 --> 00:16:23.250\nThese are backend errors\nversus front end versus ELB.\n\n356\n00:16:23.250 --> 00:16:26.870\nSo on the ELB,\nyou might get a 500 server error,\n\n357\n00:16:26.870 --> 00:16:30.010\nwhich would indicate a problem with\nthe ELB, and you need to open up a support\n\n358\n00:16:30.010 --> 00:16:32.180\nticket with Amazon cuz you\ncan't fix it yourself, right?\n\n359\n00:16:32.180 --> 00:16:34.430\nCuz you don't have access to that machine,\nright?\n\n360\n00:16:34.430 --> 00:16:36.260\nBut more likely you're not gonna get it.\n\n361\n00:16:36.260 --> 00:16:40.790\nAnd then remember that here the term\nerror is used in the programming sense.\n\n362\n00:16:40.790 --> 00:16:44.270\nIn the world of programming an error\nis just data you get back from\n\n363\n00:16:44.270 --> 00:16:45.390\nan application.\n\n364\n00:16:45.390 --> 00:16:48.070\nIt's not good, it's not bad,\nit's just information.\n\n365\n00:16:48.070 --> 00:16:51.330\nI mean it could be interpreted as good,\nit could be interpreted as bad.\n\n366\n00:16:51.330 --> 00:16:57.830\nAnd so when we look at these, a 400 or\na 500 series, that's usually bad, right?\n\n367\n00:16:57.830 --> 00:17:00.230\nA 200 though is a success.\n\n368\n00:17:00.230 --> 00:17:01.760\nA 200 is something that worked.\n\n369\n00:17:01.760 --> 00:17:03.430\nI requested a webpage and I got it.\n\n370\n00:17:03.430 --> 00:17:07.097\nThat's a 200.\nWhether it be two, zero, whatever.\n\n371\n00:17:07.097 --> 00:17:08.556\nA 300?\n\n372\n00:17:08.556 --> 00:17:11.720\nThat means I did something that\nrequires additional action, right?\n\n373\n00:17:11.720 --> 00:17:13.740\nSo user input required.\n\n374\n00:17:13.740 --> 00:17:16.410\nI got a pop up that's waiting you\nknow okay something like that.\n\n375\n00:17:16.410 --> 00:17:17.764\nThat's a 300.\n\n376\n00:17:17.764 --> 00:17:21.560\nBut 400s or 500s those are the ones\nthat what we truly consider errors.\n\n377\n00:17:21.560 --> 00:17:24.110\nAnd then what you wanna watch for\nare these back end ones.\n\n378\n00:17:24.110 --> 00:17:25.790\nThe back end ones you control.\n\n379\n00:17:25.790 --> 00:17:30.760\nA back-end error, that means the ELB\ntried to reach to your web server and\n\n380\n00:17:30.760 --> 00:17:31.640\ngot a 404, or got a 501, or\n\n381\n00:17:31.640 --> 00:17:35.330\ngot an error like that and\nyou'll be able to see those counts here.\n\n382\n00:17:35.330 --> 00:17:37.020\nThat's a problem you need to fix.\n\n383\n00:17:38.070 --> 00:17:42.720\nIf it's an ELB error that's a problem\nthat happened on the load balancer and\n\n384\n00:17:43.830 --> 00:17:46.470\nyou'll likely need to contact Amazon for\nthat.\n\n385\n00:17:46.470 --> 00:17:49.070\nSo those are there but, they just,\n\n386\n00:17:49.070 --> 00:17:52.010\nthey aren't something that we\nnormally have to deal with right.\n\n387\n00:17:52.010 --> 00:17:55.120\nYour web developer should be making sure\nthat we don't have bad links on the site.\n\n388\n00:17:55.120 --> 00:17:56.540\nThat 404s aren't happening.\n\n389\n00:17:56.540 --> 00:17:59.920\nThat their web applications are\noperational so you're not getting 501s.\n\n390\n00:17:59.920 --> 00:18:00.780\nThings like that.\n\n391\n00:18:00.780 --> 00:18:03.290\nThat stuff you should already be\nhandling outside of the ELB so\n\n392\n00:18:03.290 --> 00:18:05.800\nI don't think of those as ELB monitoring.\n\n393\n00:18:05.800 --> 00:18:13.800\nSo I guess you could say in the scenario\nof like these ELB 400s and 500s.\n\n394\n00:18:13.800 --> 00:18:16.860\nIf you're watching those,\nyou might want to keep an eye for those.\n\n395\n00:18:16.860 --> 00:18:19.000\nAnd if you see them,\nopen up a support ticket with Amazon.\n\n396\n00:18:19.000 --> 00:18:20.700\nBut these other guys up here,\n\n397\n00:18:20.700 --> 00:18:23.950\nyou're normally going to be seeing those\nin the logs for your web application.\n\n398\n00:18:23.950 --> 00:18:26.790\nAnd so I don't normally pay\nattention to them here either, so\n\n399\n00:18:26.790 --> 00:18:29.580\nthat's why I don't really pay a lot\nof attention to those counters.\n\n400\n00:18:29.580 --> 00:18:32.350\nBut they could in theory be on\nthe exam and that's what they are.\n\n401\n00:18:32.350 --> 00:18:35.130\nEach one is just a little bit different,\nbut just remember,\n\n402\n00:18:35.130 --> 00:18:38.830\nthe ones that say HTTP followed\nby a number, those are back-end.\n\n403\n00:18:38.830 --> 00:18:42.860\nAnd the ones that say ELB followed\nby a number, those are the ones that\n\n404\n00:18:42.860 --> 00:18:47.310\nare on the front-end, those are the ELB\nitself, which you can't fix.\n\n405\n00:18:47.310 --> 00:18:48.030\n>> Very, very cool.\n\n406\n00:18:48.030 --> 00:18:51.160\nNow we know a little bit\nmore about the monitoring.\n\n407\n00:18:51.160 --> 00:18:53.180\nIf we're gonna spin up ELBs,\nwe're gonna use them,\n\n408\n00:18:53.180 --> 00:18:56.880\nwe do have some monitoring enabled,\nwe can see kinda what's going on in there.\n\n409\n00:18:56.880 --> 00:19:00.400\nAnd if we do see one of those 500 errors,\ngotta open a ticket with Amazon,\n\n410\n00:19:00.400 --> 00:19:03.420\nlet them take care of the business, but\nforget some of those other types of errors\n\n411\n00:19:03.420 --> 00:19:06.860\nwe know, we've got an issue on our end,\nwe need to check that out.\n\n412\n00:19:06.860 --> 00:19:10.460\nDon, any parting nuggets\nof ELB monitoring wisdom?\n\n413\n00:19:10.460 --> 00:19:11.210\n>> That's it.\n\n414\n00:19:11.210 --> 00:19:12.920\nELBs are one of the more\nsimple technologies,\n\n415\n00:19:12.920 --> 00:19:14.240\ncuz it is fully managed by Amazon.\n\n416\n00:19:14.240 --> 00:19:15.610\nYou just create them and\nthrow them in there.\n\n417\n00:19:15.610 --> 00:19:19.910\nWe are gonna revisit ELBs a little\nbit when we get into Route 53.\n\n418\n00:19:19.910 --> 00:19:22.890\nSo if you wanna learn more about ELBs\n\n419\n00:19:22.890 --> 00:19:26.700\nyou can jump to the Route 53\nepisode where we cover fail over.\n\n420\n00:19:26.700 --> 00:19:32.070\nCuz we'll map DNS entries there and\nmake aliases to ELBs.\n\n421\n00:19:32.070 --> 00:19:36.190\nTo combine the two technologies to\nget the best redundancy possible, but\n\n422\n00:19:36.190 --> 00:19:38.650\notherwise as far as ELBs themselves,\nthey're really straightforward.\n\n423\n00:19:38.650 --> 00:19:39.370\n>> Yeah, very awesome.\n\n424\n00:19:39.370 --> 00:19:41.110\nWell, thank you so much for\njoining us today and\n\n425\n00:19:41.110 --> 00:19:43.640\nshowing us how to check\nout this monitoring stuff.\n\n426\n00:19:43.640 --> 00:19:47.400\nI know it's gonna help anybody,\neven if you're not working on the exam.\n\n427\n00:19:47.400 --> 00:19:50.150\nYou might just have ELBs, and you want\nto monitor and see how that's working.\n\n428\n00:19:50.150 --> 00:19:51.320\nSo, great stuff.\n\n429\n00:19:51.320 --> 00:19:52.490\nThank you for watching.\n\n430\n00:19:52.490 --> 00:19:54.950\nWe're gonna go ahead and\nsign off for ITProTV.\n\n431\n00:19:54.950 --> 00:19:56.265\nI've been your host Daniel Lowry.\n\n432\n00:19:56.265 --> 00:19:57.139\n>> And I'm Don Pezet.\n\n433\n00:19:57.139 --> 00:19:58.221\n>> And we'll see you next time.\n\n434\n00:19:58.221 --> 00:20:03.470\n[MUSIC]\n\n",
          "vimeoId": "146523480"
        }
      ],
      "title": "Elastic Load Balancer"
    },
    {
      "episodes": [
        {
          "description": "In this episode, Daniel and Don explore redundancy features in the Domain Name Service(DNS) system, Route 53. They start with a Route 53, DNS overview; explaining DNS zones and record sets (A/CNAME/MX/etc.). They then move into providing DNS redundancy through Route 53 Routing Policies. Here they cover routing policies like Simple, Round-Robin policies as well as Weighted policies that allow you to handle DNS traffic through setting custom priorities.",
          "length": "1915",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/amazon-acsa/amazon-acsa-6-1-redundancy_with_route-53-111815-1.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/amazon-acsa/amazon-acsa-6-1-redundancy_with_route-53-111815-1-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/amazon-acsa/amazon-acsa-6-1-redundancy_with_route-53-111815-1-sm.jpg",
          "title": "Redundancy with Route 53",
          "transcript": "WEBVTT\n\n1\n00:00:00.000 --> 00:00:10.000\n[MUSIC]\n\n2\n00:00:11.353 --> 00:00:16.834\nAll right, greetings everyone, welcome\nto another exciting episode of ITPROTV.\n\n3\n00:00:16.834 --> 00:00:19.988\nI'm your host, Daniel Lowrie,\nand in today's episode,\n\n4\n00:00:19.988 --> 00:00:23.838\nwe're gonna be going over a little\nmore of that AWS SysOps Administrator\n\n5\n00:00:23.838 --> 00:00:26.005\ncertification available from Amazon.\n\n6\n00:00:26.005 --> 00:00:30.694\nAnd who better to lend his expertise\non that subject is Mr. Don Pezet?\n\n7\n00:00:30.694 --> 00:00:31.566\nJoining me in the studio today.\n\n8\n00:00:31.566 --> 00:00:32.354\nHow's it going today Don?\n\n9\n00:00:32.354 --> 00:00:33.572\n>> It is going great, Daniel.\n\n10\n00:00:33.572 --> 00:00:37.698\nAnd I am excited to be back on the show,\nready to jump into the world of Route 53,\n\n11\n00:00:37.698 --> 00:00:40.940\nwhich is the DNS or\nname resolutions service from Amazon.\n\n12\n00:00:40.940 --> 00:00:43.830\nYou guys have all had experience\nwith it by now I'm I'm sure.\n\n13\n00:00:43.830 --> 00:00:46.980\nWe are gonna take a look at some of\nthe advanced functionality that's kind of\n\n14\n00:00:46.980 --> 00:00:48.500\nbuilt into it some stuff we can do.\n\n15\n00:00:48.500 --> 00:00:53.310\nAnd we'll really get a chance to\nsee how we can set up redundancy\n\n16\n00:00:53.310 --> 00:00:54.160\nby using route 53.\n\n17\n00:00:54.160 --> 00:00:57.680\nWhich is a great purpose for\nhaving really neat integrations for\n\n18\n00:00:57.680 --> 00:00:58.420\nsome of the EC2 services.\n\n19\n00:00:58.420 --> 00:01:01.150\n>> Yeah Don I'm really looking\nforward to this episode because DNS,\n\n20\n00:01:01.150 --> 00:01:02.750\nIt's one of those things\nwe kind of live and die by.\n\n21\n00:01:02.750 --> 00:01:05.991\nWe got to kind of have to know this stuff\nif we're going to be sys administrators.\n\n22\n00:01:05.991 --> 00:01:10.089\nThat being said I guess it'd be a good\nidea to kind of do some review over\n\n23\n00:01:10.089 --> 00:01:13.143\nroute 53 and DNS, and\nkind of the nuts and bolts and\n\n24\n00:01:13.143 --> 00:01:16.498\nhow that works before we move\ninto more advanced topics.\n\n25\n00:01:16.498 --> 00:01:17.218\nSo help us out with that.\n\n26\n00:01:17.218 --> 00:01:18.010\nGive us a little bit of\nof a review if you will.\n\n27\n00:01:19.070 --> 00:01:20.760\nAll right.\nSo like I said for the exam,\n\n28\n00:01:20.760 --> 00:01:23.340\nyou guys should already have\nexperience with route 53 at least\n\n29\n00:01:23.340 --> 00:01:24.080\nfrom the basic side.\n\n30\n00:01:24.080 --> 00:01:27.024\nSo let's just do a quick kind of a review\nover a basic route 53 implementation.\n\n31\n00:01:27.024 --> 00:01:29.640\nAnd then we'll move into the more\nadvanced redundancy side,\n\n32\n00:01:29.640 --> 00:01:32.274\nwhich is what they're really\ngonna hammer you on on the exam.\n\n33\n00:01:32.274 --> 00:01:36.799\nSo we'll take a look at my computer here\nand I'm going into my My AWS console and\n\n34\n00:01:36.799 --> 00:01:39.622\nroute 53 is buried way\ndown here at the bottom.\n\n35\n00:01:39.622 --> 00:01:41.097\nSo I'm gonna go into route 53.\n\n36\n00:01:41.097 --> 00:01:42.522\nNow, when you go into route 53,\n\n37\n00:01:42.522 --> 00:01:45.237\nyou'll see there's three different\nthings that you can set up.\n\n38\n00:01:45.237 --> 00:01:47.814\nHosted zones, health checks, and domains.\n\n39\n00:01:47.814 --> 00:01:51.576\nAnd when I look at mine, I can see some\nof the different things I've got here.\n\n40\n00:01:51.576 --> 00:01:53.909\nI've got one hosted zone,\nI've got no health checks, and no domains.\n\n41\n00:01:53.909 --> 00:01:57.941\nNow, this screen gets a little confusing\nfor people where it's the first time they\n\n42\n00:01:57.941 --> 00:02:01.600\nand they've used route 53 because in DNS,\nisn't a zone a domain?\n\n43\n00:02:01.600 --> 00:02:04.570\nAren't they the same thing?\n\n44\n00:02:04.570 --> 00:02:07.920\nWell, yes, yes, they are so why does\nthis have one zone but no domains?\n\n45\n00:02:07.920 --> 00:02:09.570\nHow can I have a zone that's not a domain?\n\n46\n00:02:09.570 --> 00:02:12.550\nWell, a zone is normally a domain.\n\n47\n00:02:12.550 --> 00:02:15.530\nSo the one I've got\nregistered is ITPROTV.net\n\n48\n00:02:15.530 --> 00:02:16.640\n>> So if I go into my hosted zones,\n\n49\n00:02:16.640 --> 00:02:18.890\nthere is my domain name right there.\n\n50\n00:02:18.890 --> 00:02:21.032\nI have got a domain, clear as day.\n\n51\n00:02:21.032 --> 00:02:25.740\nAll right, well on that dashboard, what\nthey are actually talking about over here\n\n52\n00:02:25.740 --> 00:02:29.815\nwith domains means that you have\npurchased And registered through Amazon.\n\n53\n00:02:29.815 --> 00:02:32.705\nSo if I have a great new name.\n\n54\n00:02:32.705 --> 00:02:34.697\nWhat's a website you want to start Daniel?\n\n55\n00:02:34.697 --> 00:02:35.357\n>> Hatsforcats.com.\n\n56\n00:02:35.357 --> 00:02:37.935\n[LAUGH]\n>> It's probably already taken but\n\n57\n00:02:37.935 --> 00:02:41.170\nif I want that I can jump over here to\ndomains and I can register a domain.\n\n58\n00:02:41.170 --> 00:02:43.480\nOr I can transfer one\nthat I own into Amazon.\n\n59\n00:02:43.480 --> 00:02:44.107\nAll right.\nAnd\n\n60\n00:02:44.107 --> 00:02:48.135\nthen it'll actually be completely\ncontrolled through Amazon's service, and\n\n61\n00:02:48.135 --> 00:02:52.292\nthat's great if you want to go all in with\nAWS, but sometimes you don't want that.\n\n62\n00:02:52.292 --> 00:02:54.906\nFor example, my domain,\nthe itprotv.net, well,\n\n63\n00:02:54.906 --> 00:02:58.403\nI have that, and that's actually\nregistered through somebody else.\n\n64\n00:02:58.403 --> 00:03:01.804\nI didn't want to transfer it in, and so\nwhat I did is I added it to my route 53.\n\n65\n00:03:01.804 --> 00:03:03.628\nI went into route 53,\n\n66\n00:03:03.628 --> 00:03:08.101\nAnd I created a hosted zone and\nI added that domain of mine.\n\n67\n00:03:08.101 --> 00:03:13.604\nNow, when you add in a zone you've got\ntwo types of zones that you can do.\n\n68\n00:03:13.604 --> 00:03:16.772\nYou've got a public hosted zone and\na private zone.\n\n69\n00:03:16.772 --> 00:03:19.802\nThe public hosted one, that's one\nthat's available to the whole world.\n\n70\n00:03:19.802 --> 00:03:21.834\nEverybody will be able to\ndo look ups against it.\n\n71\n00:03:21.834 --> 00:03:27.082\nYou might wanna create a DNS zone just for\nuse inside of your VPCs, right?\n\n72\n00:03:27.082 --> 00:03:30.515\nInside of your private networks\nthat you might be setting up, so\n\n73\n00:03:30.515 --> 00:03:31.921\nyou can choose to do that.\n\n74\n00:03:31.921 --> 00:03:36.175\nIf it's a private one,\nit doesn't have to be publicly registered.\n\n75\n00:03:36.175 --> 00:03:39.055\nYou can actually make up a name,\nuse it privately just inside of your VPCs.\n\n76\n00:03:39.055 --> 00:03:41.945\nYou can even use it to\noverride other public zones.\n\n77\n00:03:41.945 --> 00:03:45.125\nWe don't normally use it for\nthat but you can.\n\n78\n00:03:45.125 --> 00:03:48.655\nIf it's public though we\nexpect people to use it.\n\n79\n00:03:48.655 --> 00:03:50.290\nNow if you registered it with Amazon.\n\n80\n00:03:50.290 --> 00:03:51.560\nIf you actually purchased it from them,\n\n81\n00:03:51.560 --> 00:03:55.130\nit'll be added in here automatically and\nthen you've got it.\n\n82\n00:03:55.130 --> 00:03:57.750\nBut if you did what I did and\njust added in my own and\n\n83\n00:03:57.750 --> 00:03:59.870\nsaid it was public, that's great.\n\n84\n00:03:59.870 --> 00:04:03.927\nBut it's not actually going to work until\nyou set your servers to point to it.\n\n85\n00:04:03.927 --> 00:04:06.411\nSo I registered this within\nthe another company.\n\n86\n00:04:06.411 --> 00:04:07.932\nSo I had to go to that other company.\n\n87\n00:04:07.932 --> 00:04:16.360\nAnd on this zone I had to tell it that\nthese were my name servers, right.\n\n88\n00:04:16.360 --> 00:04:20.140\nSo if you registered with Register.com or\nGoDaddy, or Hover or\n\n89\n00:04:20.140 --> 00:04:24.900\none of those companies your zone will\nhave their DNS servers listed by default.\n\n90\n00:04:24.900 --> 00:04:27.528\nAnd so I had to edit that and\npoint them to the Amazon ones.\n\n91\n00:04:27.528 --> 00:04:30.720\nAmazon's got four available, so\nwe've got a .com, a .net, a .org.\n\n92\n00:04:30.720 --> 00:04:34.250\nWe've also got one that's mapped to\nthe UK, and any of those four, or\n\n93\n00:04:34.250 --> 00:04:37.240\nall of those four,\nwill point right back to here.\n\n94\n00:04:37.240 --> 00:04:40.920\nI've done that for mine already, so that's\nhow I'm able to get a domain in here,\n\n95\n00:04:40.920 --> 00:04:44.100\nwithout actually registering\nit through Amazon.\n\n96\n00:04:44.100 --> 00:04:46.821\nYou don't have to transfer the the domain\nto Amazon, you can do like I did.\n\n97\n00:04:46.821 --> 00:04:50.304\nAnd when that happens your dashboard\nwill show up just like this.\n\n98\n00:04:50.304 --> 00:04:53.648\nI've got a perfectly valid hosted zone,\nbut I don't have any domains.\n\n99\n00:04:53.648 --> 00:04:57.741\nAnd if I were to fire up a terminal for\nexample, and\n\n100\n00:04:57.741 --> 00:05:02.237\nI'll do a dig for itprotv.net,\nand take a look at it.\n\n101\n00:05:02.237 --> 00:05:06.582\nWhen I look at the information for\nthat domain I can see,\n\n102\n00:05:06.582 --> 00:05:09.089\nI did a query for itprotv.net.\n\n103\n00:05:09.089 --> 00:05:14.365\nAnd if I look down here for the start\nof authority, well under the authority\n\n104\n00:05:14.365 --> 00:05:18.994\nsection here I can see itprotv.net,\nand my SOA is set to Amazon.\n\n105\n00:05:18.994 --> 00:05:22.066\nI didn't register it from Amazon,\nbut I set it up that way so\n\n106\n00:05:22.066 --> 00:05:23.549\nthe lookups would go there.\n\n107\n00:05:23.549 --> 00:05:27.352\nAnd so now I can jump in and\nstart to create records, and\n\n108\n00:05:27.352 --> 00:05:30.590\nit's all done right here through Route 53.\n\n109\n00:05:30.590 --> 00:05:33.640\nAnd when we talk about those records,\nwell, what are they?\n\n110\n00:05:33.640 --> 00:05:35.030\nIf I browse into a domain\nI can create a record set.\n\n111\n00:05:35.030 --> 00:05:39.220\nAnd the record sets are these little\nentries like the SOA and name server.\n\n112\n00:05:39.220 --> 00:05:40.914\nNormally we're creating A records but\n\n113\n00:05:40.914 --> 00:05:42.974\nthere's a ton of different\nones we can create.\n\n114\n00:05:42.974 --> 00:05:44.797\nAnd let me just kinda run\nthrough that list real quick.\n\n115\n00:05:44.797 --> 00:05:46.893\nI'm gonna hit create record and\n\n116\n00:05:46.893 --> 00:05:52.183\nthen over here we'll start to see some of\nthe different records that we can make.\n\n117\n00:05:52.183 --> 00:05:57.230\nWe give it a name.\nAnd so I might create www.itprotv.net.\n\n118\n00:05:57.230 --> 00:05:59.850\nAll right so I'm,\nI'm gonna create that entry.\n\n119\n00:05:59.850 --> 00:06:01.270\nIt's gonna be a web server.\n\n120\n00:06:01.270 --> 00:06:03.452\nAnd when I choose the type,\nI've got a lot of choices here.\n\n121\n00:06:03.452 --> 00:06:06.700\nSo let's run down this list, you guys\nare probably already familiar with these,\n\n122\n00:06:06.700 --> 00:06:08.695\nso it won't hurt my feelings\nif you fast forward.\n\n123\n00:06:08.695 --> 00:06:12.307\nBut A, that's an A record, that\nusually means an address or a host, so\n\n124\n00:06:12.307 --> 00:06:14.729\nit I'm gonna point this\nthrough a specific IP.\n\n125\n00:06:14.729 --> 00:06:18.037\nI can choose a record and then I can\ncome in here and put in the IPs.\n\n126\n00:06:18.037 --> 00:06:21.067\nI can do a CNAME or a canonical name.\n\n127\n00:06:21.067 --> 00:06:22.310\nThis is when it's like an alias.\n\n128\n00:06:22.310 --> 00:06:24.701\nA name that points to another name.\n\n129\n00:06:24.701 --> 00:06:29.418\nSo, for\nexample I might have www.itprotv.net and\n\n130\n00:06:29.418 --> 00:06:34.574\nI might choose to point that to 1.1.1.1,\nright?\n\n131\n00:06:34.574 --> 00:06:35.920\nNow I'm just gonna do a fake IP.\n\n132\n00:06:35.920 --> 00:06:38.241\nOr actually, you know I've got some\nreal servers sitting around here.\n\n133\n00:06:38.241 --> 00:06:40.540\nI guess I could not be lazy and\nuse a real server.\n\n134\n00:06:40.540 --> 00:06:41.121\nLet's do that.\n\n135\n00:06:41.121 --> 00:06:42.375\n>> Don't phone it in, Don.\n\n136\n00:06:42.375 --> 00:06:43.269\nDon't phone it in.\n\n137\n00:06:43.269 --> 00:06:43.815\n>> I know, I know.\n\n138\n00:06:43.815 --> 00:06:45.034\nI'm gonna use an actual server here.\n\n139\n00:06:45.034 --> 00:06:47.193\n>> [LAUGH]\n>> So I'll point to this server and\n\n140\n00:06:47.193 --> 00:06:48.618\nI'll get that set\n>> I'm just gonna go\n\n141\n00:06:48.618 --> 00:06:49.363\nahead and create that.\n\n142\n00:06:49.363 --> 00:06:50.978\nSo that's an A record, right?\n\n143\n00:06:50.978 --> 00:06:55.083\nAnd I can create another record set, and\nthis time instead of doing an A record,\n\n144\n00:06:55.083 --> 00:06:56.015\nI'll do a CNAME.\n\n145\n00:06:56.015 --> 00:06:59.393\nAnd so for the name for this one,\nI'll just do it like Web.\n\n146\n00:06:59.393 --> 00:07:01.702\nSo this will be web.itprotv.net.\n\n147\n00:07:01.702 --> 00:07:04.478\nAnd instead of an A record,\nI'll choose CNAME.\n\n148\n00:07:04.478 --> 00:07:08.182\nAnd with a canonical name,\nyou can point to another domain name.\n\n149\n00:07:08.182 --> 00:07:13.370\nI'm going to point this\nto www.itprotv.net there.\n\n150\n00:07:13.370 --> 00:07:17.925\nSo now, when somebody does a lookup for\nweb.itprotv.net,\n\n151\n00:07:17.925 --> 00:07:21.517\nit'll just turn around and\ndo another lookup for\n\n152\n00:07:21.517 --> 00:07:25.120\nwww.itprotv.net and\ngive us that IP address.\n\n153\n00:07:25.120 --> 00:07:26.240\nSo it's like an alias.\n\n154\n00:07:26.240 --> 00:07:29.410\nYou'll notice there's an option here\nto say alias, and I'm not choosing it.\n\n155\n00:07:29.410 --> 00:07:32.310\nAnd if I said I'm creating an alias\nwhy would I not choose that?\n\n156\n00:07:32.310 --> 00:07:34.830\nThis is when we do an alias\nto an AWS service.\n\n157\n00:07:34.830 --> 00:07:36.380\nI'm gonna show you that\nlater because we'll\n\n158\n00:07:36.380 --> 00:07:37.820\nuse that with some of our load balancers.\n\n159\n00:07:37.820 --> 00:07:41.510\nBut, you can map to all sorts of services,\nlike S3,\n\n160\n00:07:41.510 --> 00:07:45.780\nload balancer's where I really use it,\nElastic Beanstalk.\n\n161\n00:07:45.780 --> 00:07:46.860\nThere's a few different\nplaces you can map to.\n\n162\n00:07:46.860 --> 00:07:49.715\nAnd so we'll see that when\nwe do redundancy, all right?\n\n163\n00:07:49.715 --> 00:07:53.920\nAnd so I can create this record, and\nnow I've got an A and a CNAME, right?\n\n164\n00:07:53.920 --> 00:07:56.810\nAnd if I keep going,\nI can create other record sets.\n\n165\n00:07:56.810 --> 00:08:00.200\nI'm not gonna bore us to\ndeath with all of these.\n\n166\n00:08:00.200 --> 00:08:00.932\nBut MX, Mail Exchange.\n\n167\n00:08:00.932 --> 00:08:03.796\nIf I'm an email server, I need to\ntell it where the mail server is.\n\n168\n00:08:03.796 --> 00:08:07.421\nA four A record,\nwhich is for IPv6 addresses.\n\n169\n00:08:07.421 --> 00:08:14.520\nSo I might have Have www.itprotv.net\nthe point's doing IPv6 address.\n\n170\n00:08:14.520 --> 00:08:17.620\nThat's just for\nraw text that we can put in the record.\n\n171\n00:08:17.620 --> 00:08:19.110\nNow, why would we do that?\n\n172\n00:08:19.110 --> 00:08:23.852\nWell, normally we see that with\nthings like the anti-spam,\n\n173\n00:08:23.852 --> 00:08:27.055\nthe SPF, heck, what does SPF stand for?\n\n174\n00:08:27.055 --> 00:08:27.555\nI've forgotten now.\n>> Sun protection factor.\n\n175\n00:08:27.555 --> 00:08:30.565\n[LAUGH] >> It's something.\n\n176\n00:08:30.565 --> 00:08:34.725\nSo we use it to validate whether an email\nserver's allowed to send an email for\n\n177\n00:08:34.725 --> 00:08:35.305\na domain.\n\n178\n00:08:35.305 --> 00:08:37.340\nOr, it might be SFP, SPF, whatever.\n\n179\n00:08:37.340 --> 00:08:39.230\nSo you can create those text records.\n\n180\n00:08:39.230 --> 00:08:42.330\nThere's other things that you\ncan use text records for also.\n\n181\n00:08:42.330 --> 00:08:43.950\n>> There it is right there.\n\n182\n00:08:43.950 --> 00:08:44.700\nRight below it.\n\n183\n00:08:44.700 --> 00:08:46.880\n>> What? SPF. >> Sender policy framework.\n\n184\n00:08:46.880 --> 00:08:48.250\nIf I look at the stinking screen.\n\n185\n00:08:48.250 --> 00:08:50.270\nYou know it's funny they call it SPF here.\n\n186\n00:08:50.270 --> 00:08:52.594\nThis is kind of important,\nI'm glad you pointed it out, Daniel.\n\n187\n00:08:52.594 --> 00:08:55.354\nI said that we could use text records for\nSPF, so\n\n188\n00:08:55.354 --> 00:08:58.054\nwhy is there SPF here in the list also,\nright.\n\n189\n00:08:58.054 --> 00:08:59.190\nThis might turn up on the exam.\n\n190\n00:08:59.190 --> 00:09:02.679\nIn the original SPF standard,\nwhen they originally launched it,\n\n191\n00:09:02.679 --> 00:09:06.852\nthey created a special DNS record called\nan SPF record and they said that's what\n\n192\n00:09:06.852 --> 00:09:10.715\nyou're gonna use to say that you're\nusing the Sender Policy Framework,\n\n193\n00:09:10.715 --> 00:09:12.610\nwhich I now know what it stands for.\n\n194\n00:09:12.610 --> 00:09:16.152\nBut, what they found was that most\nDNS servers didn't support it and\n\n195\n00:09:16.152 --> 00:09:17.570\npeople weren't using it.\n\n196\n00:09:17.570 --> 00:09:19.245\nIt was killing off the standard\nbefore it even started.\n\n197\n00:09:19.245 --> 00:09:21.253\nAnd so within a year they revised that and\n\n198\n00:09:21.253 --> 00:09:24.576\nthey said from now on we're just\ngonna use standard text records.\n\n199\n00:09:24.576 --> 00:09:26.564\nAnd that's where your\nSPF record is gonna be.\n\n200\n00:09:26.564 --> 00:09:28.423\nAmazon supports both.\n\n201\n00:09:28.423 --> 00:09:32.741\nVery few e-mail servers support both and\nvery few DNS servers support both.\n\n202\n00:09:32.741 --> 00:09:36.460\nSo even though you've got the ability to\ndo the SPF record here, you really don't.\n\n203\n00:09:36.460 --> 00:09:38.200\nBecause nobody's gonna use it.\n\n204\n00:09:38.200 --> 00:09:39.730\nYou really do wanna do\na regular text record.\n\n205\n00:09:39.730 --> 00:09:41.560\nAmazon's just doing it here for\ncompleteness.\n\n206\n00:09:41.560 --> 00:09:42.268\nThat's why we see that one right.\nBut\n\n207\n00:09:42.268 --> 00:09:46.714\nbe aware that that's not really what\nyou wanna use if you're doing SPF.\n\n208\n00:09:46.714 --> 00:09:49.584\nI've dealt with a lot of\npeople out there where they\n\n209\n00:09:49.584 --> 00:09:51.800\nsay I set up SPF in my Route 53 domain.\n\n210\n00:09:51.800 --> 00:09:52.450\nAnd it's not working.\n\n211\n00:09:52.450 --> 00:09:54.250\nMy email server says\nthere's no SPF record.\n\n212\n00:09:54.250 --> 00:09:57.010\nAnd that's because your email\nserver's looking for the text record.\n\n213\n00:09:57.010 --> 00:09:59.040\nYou can actually do both\nif you really wanted to.\n\n214\n00:09:59.040 --> 00:10:04.190\nBut the text record's the only one\nthat's really used these days.\n\n215\n00:10:04.190 --> 00:10:06.366\nPTRs. Those are pointers.\nPointers are like A records,\n\n216\n00:10:06.366 --> 00:10:09.825\nexcept instead of a name to an IP,\nthis is an IP to a name.\n\n217\n00:10:09.825 --> 00:10:12.390\nAnd so you usually only create\nPTRs in reverse lookup zone.\n\n218\n00:10:12.390 --> 00:10:13.400\nThis is a forward lookup zone.\n\n219\n00:10:13.400 --> 00:10:16.470\nI'm doing names to IP addresses, right?\n\n220\n00:10:16.470 --> 00:10:20.837\nSo, I see like this A record\nis a name to an IP.\n\n221\n00:10:20.837 --> 00:10:22.512\nBut, in a reverse lookup zone.\n\n222\n00:10:22.512 --> 00:10:25.200\nWhen you do IPs to name.\n\n223\n00:10:25.200 --> 00:10:27.520\nAnd that's where we have PTRs.\n\n224\n00:10:27.520 --> 00:10:29.250\nSRVs, which are service locators.\n\n225\n00:10:29.250 --> 00:10:33.640\nThese are if we're trying to tell\npeople where to find a service.\n\n226\n00:10:33.640 --> 00:10:34.710\nNot a host, but a service.\n\n227\n00:10:34.710 --> 00:10:39.532\nSo I might do a request for HTTP.\nAnd that's mapped to www.ITProTV.net\n\n228\n00:10:39.532 --> 00:10:42.833\non port 80 or port 80 80.\n\n229\n00:10:42.833 --> 00:10:44.175\nYou can actually give alternate ports.\n\n230\n00:10:44.175 --> 00:10:45.660\nAnd so that's kind of a nice feature.\n\n231\n00:10:45.660 --> 00:10:48.763\nPort numbers are not normally\na part of a DNS record lookup.\n\n232\n00:10:48.763 --> 00:10:51.174\nBut with SRV they are.\n\n233\n00:10:51.174 --> 00:10:52.776\nAnd then NS and SOA.\n\n234\n00:10:52.776 --> 00:10:53.849\nNS is a name server.\n\n235\n00:10:53.849 --> 00:10:56.471\nThese are the DNS servers responsible for\nour domain.\n\n236\n00:10:56.471 --> 00:11:01.280\nAnd SOA is the start of authority, the\nperson who actually controls the domains\n\n237\n00:11:01.280 --> 00:11:05.110\nregistration, and so\nyou can put each of those values in here.\n\n238\n00:11:05.110 --> 00:11:07.290\nNotice SOA I can't change, and\n\n239\n00:11:07.290 --> 00:11:12.560\nthat's because that's defined when I\nadd the domain to AWS or to route 53.\n\n240\n00:11:12.560 --> 00:11:14.554\nI can't do it after the fact, all right?\n\n241\n00:11:14.554 --> 00:11:17.140\nSo, those are the main records\nthat we can create and\n\n242\n00:11:17.140 --> 00:11:21.430\nwith each one there is not\na whole heck of a lot of options.\n\n243\n00:11:21.430 --> 00:11:22.830\nWe've got this TTL Time To Live and\n\n244\n00:11:22.830 --> 00:11:27.948\nnotice the time to live default to 300\nseconds to which is five minutes right?\n\n245\n00:11:27.948 --> 00:11:30.802\nRight, so,\nif someone does a DNS lookup and\n\n246\n00:11:30.802 --> 00:11:35.835\ngets one of these addresses they're going\nto cache it for up to five minutes.\n\n247\n00:11:35.835 --> 00:11:38.529\nAnd if its been more than five minutes\nthe next time they do a lookup,\n\n248\n00:11:38.529 --> 00:11:40.726\nthey'll ask for\na new copy just in case it's changed.\n\n249\n00:11:40.726 --> 00:11:42.936\nSo I don't know if you guys\nhave ever dealt with this but\n\n250\n00:11:42.936 --> 00:11:44.489\nsometimes you'll go to a DNS server.\n\n251\n00:11:44.489 --> 00:11:48.343\nYou'll make a change and you'll get that\nmessage that says you may need to wait 24\n\n252\n00:11:48.343 --> 00:11:50.344\nto 48 hours for the change to propagate.\n\n253\n00:11:50.344 --> 00:11:54.356\nPropagate around the world, and what\nthey're saying is you've changed on your\n\n254\n00:11:54.356 --> 00:11:57.550\nserver but all the other servers\nout there might have cached it.\n\n255\n00:11:57.550 --> 00:12:00.063\nAnd the cache values could\nbe as great as 48 hours,\n\n256\n00:12:00.063 --> 00:12:03.488\nthat's maximum cache value for DNS and\nif you want to make that change,\n\n257\n00:12:03.488 --> 00:12:07.511\nyou want to ensure everybody's seeing it,\nyou might have to wait up to 48 hours.\n\n258\n00:12:07.511 --> 00:12:09.912\nBut if you set your time to\nlive really low like this,\n\n259\n00:12:09.912 --> 00:12:13.407\nthen whenever you make a change you can\nrest assured that hey that's going to\n\n260\n00:12:13.407 --> 00:12:15.011\ntake effect within five minutes.\n\n261\n00:12:15.011 --> 00:12:18.262\nYou'll see different records\nhave different defaults.\n\n262\n00:12:18.262 --> 00:12:21.592\nI say that and all of these seem\nto have the same don't they.\n\n263\n00:12:21.592 --> 00:12:24.150\nSome of them do have different defaults,\nI might be lying.\n\n264\n00:12:24.150 --> 00:12:25.374\nBut you can always go in and\n\n265\n00:12:25.374 --> 00:12:28.220\nchange it and override there and\nset it to whatever you want.\n\n266\n00:12:28.220 --> 00:12:30.334\nThese don't seem to be.\nI could have sworn some of them had\n\n267\n00:12:30.334 --> 00:12:31.256\na lower default.\n\n268\n00:12:31.256 --> 00:12:32.103\nI guess not.\n\n269\n00:12:32.103 --> 00:12:33.428\nI guess I'm a big fat liar.\n\n270\n00:12:33.428 --> 00:12:36.447\nSo anyhow, if you wanna set it lower,\nyou certainly can.\n\n271\n00:12:36.447 --> 00:12:41.017\nIf you've got a mission critical system,\nif you're using DNS to provide redundancy,\n\n272\n00:12:41.017 --> 00:12:43.671\nyou may want people to not\nuse a cash value because it\n\n273\n00:12:43.671 --> 00:12:45.480\nmight be pointing at a bad server.\n\n274\n00:12:45.480 --> 00:12:47.619\nYou might want it to\npoint at a good server.\n\n275\n00:12:47.619 --> 00:12:51.064\nAnd if I've got a five minute TTL,\nthat means a failure can happen,\n\n276\n00:12:51.064 --> 00:12:54.889\nit can be up to five minutes before\npeople get redirected to my good server.\n\n277\n00:12:54.889 --> 00:12:56.221\nNow, is that okay?\n\n278\n00:12:56.221 --> 00:12:56.794\nMaybe.\n\n279\n00:12:56.794 --> 00:12:58.747\nMaybe I'm okay with\na five minute down time.\n\n280\n00:12:58.747 --> 00:13:00.969\nBut if I'm not,\nI'm gonna need something shorter.\n\n281\n00:13:00.969 --> 00:13:04.480\nAnd you'll see where Amazon will let\nus take it down to a single minute.\n\n282\n00:13:04.480 --> 00:13:05.790\nYou can actually even take it down lower.\n\n283\n00:13:05.790 --> 00:13:08.980\nI wanna say the lowest they'll\nlet you do is 15 seconds.\n\n284\n00:13:08.980 --> 00:13:11.590\nWe'll see if I can get away\nwith something really low.\n\n285\n00:13:11.590 --> 00:13:13.030\nCan I do like five?\n\n286\n00:13:13.030 --> 00:13:14.928\nWe'll try five seconds,\nsee what that does for\n\n287\n00:13:14.928 --> 00:13:16.640\nus, or\ndoes it tell us what the minimum is?\n\n288\n00:13:16.640 --> 00:13:20.469\nThere is a minimum,\nI just don't remember what it is.\n\n289\n00:13:20.469 --> 00:13:23.826\nSo, we can lower that down,\nwe can set it to whatever we need, and\n\n290\n00:13:23.826 --> 00:13:25.366\nget that kind of put in place.\n\n291\n00:13:25.366 --> 00:13:29.026\nSo the lower the value,\nthe faster your records will update.\n\n292\n00:13:29.026 --> 00:13:31.081\nUsually we hesitate to set lower numbers,\n\n293\n00:13:31.081 --> 00:13:33.656\nbecause it creates more of\na burden on the DNS server.\n\n294\n00:13:33.656 --> 00:13:37.746\nBut Amazon's DNS servers are very\npowerful, and their price for\n\n295\n00:13:37.746 --> 00:13:39.463\nDNS look ups is really low.\n\n296\n00:13:39.463 --> 00:13:42.591\nThe free usage tier includes hundreds\nof thousands of DNS lookups.\n\n297\n00:13:42.591 --> 00:13:44.897\nSo most of us never even get a bill for\nRoute 53.\n\n298\n00:13:44.897 --> 00:13:48.051\nBut if you set it really low you\nprobably will start to get that bill.\n\n299\n00:13:48.051 --> 00:13:50.468\nAnd at the end of the month\nwhen you're paying that $1.24,\n\n300\n00:13:50.468 --> 00:13:52.992\nyou know it's easy to just discount\nthat and say all right, fine.\n\n301\n00:13:52.992 --> 00:13:55.068\nI've got a great redundant solution here.\n\n302\n00:13:55.068 --> 00:13:56.442\nI'm gonna stick with that lower number.\n\n303\n00:13:56.442 --> 00:13:58.702\nSo you can set it to whatever\nit is that you need.\n\n304\n00:13:58.702 --> 00:14:00.406\n>> Well that's awesome Don.\n\n305\n00:14:00.406 --> 00:14:05.105\nThat's a really nice overview, looking at\nRoute 53, we should all be up to speed.\n\n306\n00:14:05.105 --> 00:14:06.385\nSo now we can send\nthe kids out of the room.\n\n307\n00:14:06.385 --> 00:14:09.446\nWe can start doing the adult talk and\nget into the meat and\n\n308\n00:14:09.446 --> 00:14:13.570\npotatoes of this Route 53 option that\nwe have, which is its redundancy.\n\n309\n00:14:13.570 --> 00:14:20.107\nThe ability to fail over or allow us to\nhave multiple points of access or failure.\n\n310\n00:14:20.107 --> 00:14:22.411\nThis is what we really want to look at,\nright?\n\n311\n00:14:22.411 --> 00:14:23.281\n>> Absolutely.\n\n312\n00:14:23.281 --> 00:14:28.578\nSo when I created a record a minute ago,\nI created a record for www.itprotv.net.\n\n313\n00:14:28.578 --> 00:14:31.426\nRight, and\nI just pointed it to a singe IP.\n\n314\n00:14:31.426 --> 00:14:32.962\nSo if somebody goes to that address,\n\n315\n00:14:32.962 --> 00:14:36.389\nthey're gonna get pointed to that server\nand that's what they're going to get.\n\n316\n00:14:36.389 --> 00:14:41.330\nIf the server fails, the DNS record is\nnow still pointing at a failed server.\n\n317\n00:14:41.330 --> 00:14:44.762\nAnd if I know about it I can go and edit\nthat DNS record and point somewhere else,\n\n318\n00:14:44.762 --> 00:14:46.540\nand now it will be back up again, right?\n\n319\n00:14:46.540 --> 00:14:47.724\nBut that's a manual process.\n\n320\n00:14:47.724 --> 00:14:49.128\nWe want this to be automatic,\n\n321\n00:14:49.128 --> 00:14:51.778\nand in DNS there's several\nways to go about doing that.\n\n322\n00:14:51.778 --> 00:14:55.530\nSo I want to show you each one because on\nthe exam you need to know the difference\n\n323\n00:14:55.530 --> 00:14:58.844\nbetween each and know when one\nmethod is appropriate over another.\n\n324\n00:14:58.844 --> 00:15:01.813\nAll right, I want to start with simple.\n\n325\n00:15:01.813 --> 00:15:06.357\nWhen I take an entry, so\ntaking this www.itprotv.net.\n\n326\n00:15:06.357 --> 00:15:11.711\nI created this entry and\nif I look over here I made an entry,\n\n327\n00:15:11.711 --> 00:15:15.549\nwhy is it showing me\nthe CNAME on this one.\n\n328\n00:15:15.549 --> 00:15:17.248\nI'm clicking on the CNAME.\n\n329\n00:15:17.248 --> 00:15:18.220\nThat would probably do that.\n\n330\n00:15:18.220 --> 00:15:19.491\nThere we go.\nIf I click on the right record,\n\n331\n00:15:19.491 --> 00:15:20.570\nthat's where we're gonna start.\n\n332\n00:15:20.570 --> 00:15:21.410\nOn the right side here,\n\n333\n00:15:21.410 --> 00:15:24.239\nI'll see where that's an A record that's\npointing to an address, all right?\n\n334\n00:15:24.239 --> 00:15:25.522\nIt's not an alias.\n\n335\n00:15:25.522 --> 00:15:30.771\nIt's got a 300 millisecond time to live\nthere, which is a little on the high side.\n\n336\n00:15:30.771 --> 00:15:33.049\nI'm gonna drop that down to 15.\n\n337\n00:15:33.049 --> 00:15:35.565\nAnd it's pointing to that one IP address,\nokay?\n\n338\n00:15:35.565 --> 00:15:37.915\nThe routing policy down here.\n\n339\n00:15:37.915 --> 00:15:41.625\nThe routing policy is what's going to\ndetermine what happens during a failure\n\n340\n00:15:41.625 --> 00:15:44.221\nand my routing policy you'll\nsee defaults to simple.\n\n341\n00:15:44.221 --> 00:15:49.322\nWith simple, when somebody does a lookup\nfor this system they're just going\n\n342\n00:15:49.322 --> 00:15:54.517\nto get an address back and that's it and\nif I put more than one address in there.\n\n343\n00:15:54.517 --> 00:15:56.394\nI can start to get a little\nbit of redundancy.\n\n344\n00:15:56.394 --> 00:15:57.922\nLet me show you what I mean.\n\n345\n00:15:57.922 --> 00:16:01.574\nIf I go in here and\nI'm gonna create a new record set.\n\n346\n00:16:01.574 --> 00:16:05.475\nAnd I'm gonna call this\nsimple.itprotv.net.\n\n347\n00:16:05.475 --> 00:16:06.712\nAnd it'll be an A record.\n\n348\n00:16:06.712 --> 00:16:11.462\nAnd I'm gonna come in and put the IP\naddress of some of my web servers.\n\n349\n00:16:11.462 --> 00:16:15.644\nAnd I've got a few web servers\nparked here in the background in\n\n350\n00:16:15.644 --> 00:16:20.644\ndifferent availability zones,\nin different data centers with Amazon.\n\n351\n00:16:20.644 --> 00:16:25.475\nSo I've got one here in US-East,\nand so I'm gonna add that guy.\n\n352\n00:16:25.475 --> 00:16:31.541\nAnd then I've got a web server in US-West\nover in Oregon, and so I'll add that one,\n\n353\n00:16:31.541 --> 00:16:37.021\nand then I've got one over in Ireland in\nthe EU and so I'll throw that one in.\n\n354\n00:16:37.021 --> 00:16:40.973\nSo three different web servers\nthat I'm adding to that.\n\n355\n00:16:40.973 --> 00:16:42.667\nSo each one is in the list.\n\n356\n00:16:42.667 --> 00:16:46.487\nNow if I look at my routing\npolicy it's set to simple, and\n\n357\n00:16:46.487 --> 00:16:50.478\nwhat that's going to do is\nwhat's called round robin DNS.\n\n358\n00:16:50.478 --> 00:16:53.194\nI'm going to lower this\ntime to live down to,\n\n359\n00:16:53.194 --> 00:16:55.772\nwe'll see if it will\nlet me do ten seconds.\n\n360\n00:16:55.772 --> 00:16:59.976\nSo we'll set that nice and low and\nI'm going to create that record.\n\n361\n00:16:59.976 --> 00:17:04.186\nWhen I create that record I can come\nover here and see simple.itprotv.net and\n\n362\n00:17:04.186 --> 00:17:06.499\nit's got those three servers in the list.\n\n363\n00:17:06.499 --> 00:17:07.196\nAll right.\n\n364\n00:17:07.196 --> 00:17:10.368\nAnd now, the way round robin\nworks is if you do a DNS lookup.\n\n365\n00:17:10.368 --> 00:17:13.123\nAnd if you're watching this show live, you\ncould actually do this lookup right now.\n\n366\n00:17:13.123 --> 00:17:14.540\nIt might take a few\nseconds to take effect.\n\n367\n00:17:14.540 --> 00:17:17.090\nBut you'll get those three IPs.\n\n368\n00:17:17.090 --> 00:17:20.758\nAnd it's gonna show one address first,\na second address second, and\n\n369\n00:17:20.758 --> 00:17:21.950\nthird address third.\n\n370\n00:17:21.950 --> 00:17:23.947\nThat's probably the dumbest thing that\nI've said in one of these shows ever.\n\n371\n00:17:23.947 --> 00:17:27.077\nBut the reason I say that is,\nif I do the look up again,\n\n372\n00:17:27.077 --> 00:17:30.287\nthe address that was first\nmight not be first anymore.\n\n373\n00:17:30.287 --> 00:17:31.959\nThe address that was second\nmight be first now, right?\n\n374\n00:17:31.959 --> 00:17:34.467\nIt shifts through them,\nit's rotating through.\n\n375\n00:17:34.467 --> 00:17:36.047\nSo when somebody does a Lookup,\n\n376\n00:17:36.047 --> 00:17:38.866\nthey've got a one in three\nchance of getting the same IP.\n\n377\n00:17:38.866 --> 00:17:40.841\nIt's rotating through the IPs.\n\n378\n00:17:40.841 --> 00:17:44.694\nThat's cool because, if one node fails,\nI can do the lookup again,\n\n379\n00:17:44.694 --> 00:17:46.155\nand I get the next node, so\n\n380\n00:17:46.155 --> 00:17:49.821\nthen I get to the website, and\nwe can kind of roll forward on that.\n\n381\n00:17:49.821 --> 00:17:52.809\nIf I drop to a command prompt here and\ndo a quick nslookup,\n\n382\n00:17:52.809 --> 00:17:55.188\nlet's see if this has\ntaken effect already.\n\n383\n00:17:55.188 --> 00:18:00.419\nFor simple.itprotv.net and I do a look up.\n\n384\n00:18:00.419 --> 00:18:02.044\nSee how I get three addresses?\n\n385\n00:18:02.044 --> 00:18:07.756\nI get three addresses and\n52 to 34 to 85, that 198 is first.\n\n386\n00:18:07.756 --> 00:18:08.964\nAll right.\nThat's the first one.\n\n387\n00:18:08.964 --> 00:18:13.908\nAnd if I look over here that's actually\nthe second one I put in the list, right.\n\n388\n00:18:13.908 --> 00:18:15.837\nSo I got it a little bit out of order.\n\n389\n00:18:15.837 --> 00:18:18.947\nAnd if I keep doing that lookup.\n\n390\n00:18:18.947 --> 00:18:19.970\nSee how I did.\n\n391\n00:18:19.970 --> 00:18:22.128\nThe lookup that I did at first.\n\n392\n00:18:22.128 --> 00:18:23.824\n198 was first.\n\n393\n00:18:23.824 --> 00:18:25.727\nAnd then when I did\nthe lookup a second time.\n\n394\n00:18:25.727 --> 00:18:26.911\n206 is first.\n\n395\n00:18:26.911 --> 00:18:27.445\nThis other one.\n\n396\n00:18:27.445 --> 00:18:29.767\n54.165.179.206.\n\n397\n00:18:29.767 --> 00:18:31.276\nIt's rotating through them.\n\n398\n00:18:31.276 --> 00:18:31.788\nRight.\n\n399\n00:18:31.788 --> 00:18:34.217\nIt's called round robin DNS, and\n\n400\n00:18:34.217 --> 00:18:38.497\nit's one of the most simple ways\nto do basic load balancing.\n\n401\n00:18:38.497 --> 00:18:41.912\nI hate to call it that cuz it's not very\naccurate, but basic load balancing and\n\n402\n00:18:41.912 --> 00:18:42.811\nbasic redundancy.\n\n403\n00:18:42.811 --> 00:18:45.943\nIt's balancing through these servers so\nthat, if a server goes down,\n\n404\n00:18:45.943 --> 00:18:48.095\nwe still have the other\nones that are available.\n\n405\n00:18:48.095 --> 00:18:52.295\n>> So Don, when we have, we got our\nthree servers, if one of those fails,\n\n406\n00:18:52.295 --> 00:18:55.943\nwe got that round robin set up,\nand one of those servers fail.\n\n407\n00:18:55.943 --> 00:18:58.148\nWe just move to the next server?\n\n408\n00:18:58.148 --> 00:19:00.100\n>> Well [LAUGH] I'm glad\nyou mentioned that, so\n\n409\n00:19:00.100 --> 00:19:01.698\nthere is a weakness to round robin.\n\n410\n00:19:01.698 --> 00:19:03.740\nRound robin is not smart, right?\n\n411\n00:19:03.740 --> 00:19:07.015\nSo if a server goes down,\nround robin doesn't know that.\n\n412\n00:19:07.015 --> 00:19:08.594\nIt doesn't know the server's down.\n\n413\n00:19:08.594 --> 00:19:09.917\nAnd so what does it do?\n\n414\n00:19:09.917 --> 00:19:13.979\nWell one out of three people are still\ngonna get that bad IP first.\n\n415\n00:19:13.979 --> 00:19:14.932\nRight?\n\n416\n00:19:14.932 --> 00:19:17.115\nSo, when I go, I might get a bad IP.\n\n417\n00:19:17.115 --> 00:19:20.760\nAnd then I hit refresh, and\nI get a good IP, I get there, right?\n\n418\n00:19:20.760 --> 00:19:25.589\nSo, 33% of my customers are gonna have\na bad experience unless they know to\n\n419\n00:19:25.589 --> 00:19:26.494\nhit refresh.\n\n420\n00:19:26.494 --> 00:19:29.520\nAnd then everybody else will be able\nto access the site and move on.\n\n421\n00:19:29.520 --> 00:19:31.563\nSo, that can be a bit of a problem.\n\n422\n00:19:31.563 --> 00:19:35.789\nAnd if you have a low cache or\nlow ttl on your system.\n\n423\n00:19:35.789 --> 00:19:37.895\nOther people might be\nconstantly refreshing, and so\n\n424\n00:19:37.895 --> 00:19:40.387\nthey've got a one in three chance\nof getting that bad address.\n\n425\n00:19:40.387 --> 00:19:44.691\nRound robin is not terribly effective\nwhen it's pointed directly at\n\n426\n00:19:44.691 --> 00:19:45.959\nservers like this.\n\n427\n00:19:45.959 --> 00:19:50.744\nOkay, if it's pointed at something like an\nelastic load balancer on the other hand,\n\n428\n00:19:50.744 --> 00:19:55.195\nthen it becomes a lot more effective\nbecause the ELB's are already redundant in\n\n429\n00:19:55.195 --> 00:19:56.338\nand of themselves.\n\n430\n00:19:56.338 --> 00:19:58.451\nAnd then they can have\nmultiple servers behind them.\n\n431\n00:19:58.451 --> 00:19:59.079\nRight?\n\n432\n00:19:59.079 --> 00:20:00.679\nBut even ELB can go offline and\n\n433\n00:20:00.679 --> 00:20:03.433\nround robin won't be smart\nenough to detect that.\n\n434\n00:20:03.433 --> 00:20:07.768\nSo this round robin DNS,\nwe use it if we're in a hurry.\n\n435\n00:20:07.768 --> 00:20:11.804\nIf we're trying to get quick, easy, simple\nto implement redundancy we can throw this\n\n436\n00:20:11.804 --> 00:20:15.729\nin, but it's not gonna be good enough for\nmost companies, companies that have a web\n\n437\n00:20:15.729 --> 00:20:19.240\npresence that needs to always be online,\nthis is not gonna be good enough.\n\n438\n00:20:19.240 --> 00:20:20.841\nSo simple is certainly available.\n\n439\n00:20:20.841 --> 00:20:23.605\nIt's there, it's easy, but\nit's not really recommended.\n\n440\n00:20:23.605 --> 00:20:24.115\nAll right?\n\n441\n00:20:24.115 --> 00:20:27.413\nAnd I'm spanning across\nmore than one zone here.\n\n442\n00:20:27.413 --> 00:20:30.896\nSo I'm getting the EU,\nUS west, US east, so\n\n443\n00:20:30.896 --> 00:20:34.396\nI've got kind of regional redundancy here.\n\n444\n00:20:34.396 --> 00:20:36.069\nIt's just not very good redundancy.\n\n445\n00:20:36.069 --> 00:20:40.833\n>> So now that we see kind of the, I guess\nthe what's the word I'm looking for?\n\n446\n00:20:40.833 --> 00:20:41.740\nThe simplicity.\n\n447\n00:20:41.740 --> 00:20:43.186\n>> [LAUGH]\n>> And the not so\n\n448\n00:20:43.186 --> 00:20:45.292\ngreatness of Round Robin.\n\n449\n00:20:45.292 --> 00:20:47.799\nIt's there for us as a quick and\ndirty kind of idea.\n\n450\n00:20:47.799 --> 00:20:50.098\nBut like you were saying.\n\n451\n00:20:50.098 --> 00:20:54.695\nWhat do we do if we ever wanted to move\ninto more robust type of redundancy.\n\n452\n00:20:54.695 --> 00:20:57.330\nWhat does Amazon have available\nwhen it comes to that?\n\n453\n00:20:57.330 --> 00:20:58.410\n>> All right.\nSo for that we've got our\n\n454\n00:20:58.410 --> 00:21:00.660\nother routing policies, and\nthere's a couple of different ones.\n\n455\n00:21:00.660 --> 00:21:02.795\nSome that gives us redundancies,\nsome that don't.\n\n456\n00:21:02.795 --> 00:21:06.576\nThere's one that's called failover and\nthat's probably a pretty good indicator.\n\n457\n00:21:06.576 --> 00:21:07.970\nThat one gives us great redundancy.\n\n458\n00:21:07.970 --> 00:21:09.339\nI'm going to save that one for last.\n\n459\n00:21:09.339 --> 00:21:12.402\nSo let's take a look at some of the other\nones that are available in Route 53 and\n\n460\n00:21:12.402 --> 00:21:13.147\nsee what we can do.\n\n461\n00:21:13.147 --> 00:21:14.888\nThe other ones are all optional but\n\n462\n00:21:14.888 --> 00:21:18.980\nwhat they do is they take what would be\ncrappy round robin and make it far better.\n\n463\n00:21:18.980 --> 00:21:20.556\nMake it something a lot more useful.\n\n464\n00:21:20.556 --> 00:21:25.059\nSo if I go back here into my zone,\nwhen I went to create that under this\n\n465\n00:21:25.059 --> 00:21:29.799\nrouting policy, yeah we went with\nsimple last time, which is great but\n\n466\n00:21:29.799 --> 00:21:35.194\nif I drop that down you'll see weighted,\nlatency, failover and geolocation.\n\n467\n00:21:35.194 --> 00:21:36.447\nLet's start with weighted.\n\n468\n00:21:36.447 --> 00:21:38.410\nWeighted is kind of a neat one.\n\n469\n00:21:38.410 --> 00:21:40.520\nBecause with weighted,\nwhat I can do, is I can say,\n\n470\n00:21:40.520 --> 00:21:42.030\nI'm not gonna do exactly like Round Robin.\n\n471\n00:21:42.030 --> 00:21:44.170\nRound Robin is an even distribution.\n\n472\n00:21:44.170 --> 00:21:47.723\nWith weighted, I can tell it to send\na certain amount of traffic one way,\n\n473\n00:21:47.723 --> 00:21:49.950\nand a certain amount of\ntraffic another way.\n\n474\n00:21:49.950 --> 00:21:53.735\nI can do uneven load balancing, so it's\nnot really balancing at all, it's more\n\n475\n00:21:53.735 --> 00:21:57.537\nlike uneven load distribution, I guess\nwould be the better way of putting that.\n\n476\n00:21:57.537 --> 00:21:59.880\nI'm sure there's an official name for\nit that I just don't know.\n\n477\n00:21:59.880 --> 00:22:03.270\nBut, basically we can set that up and you\ncan get, really kind of, complex with it.\n\n478\n00:22:03.270 --> 00:22:06.650\nSo let's say that I wanna create one and\nI'll create a record set, and\n\n479\n00:22:06.650 --> 00:22:12.510\nI'm gonna call this one Weighted, which\nI will try my hardest to spell right.\n\n480\n00:22:12.510 --> 00:22:16.880\nSo, is it i before e unless after c, and\nweighted is an exception, or something?\n\n481\n00:22:16.880 --> 00:22:17.670\nThere we go.\n\n482\n00:22:17.670 --> 00:22:18.300\nSo anyhow.\n\n483\n00:22:18.300 --> 00:22:19.293\nSo you've got weighted.\n\n484\n00:22:19.293 --> 00:22:21.939\nAnd it's going to be\nweighted at itprotv.net and\n\n485\n00:22:21.939 --> 00:22:23.453\nI'll give it an IP address.\n\n486\n00:22:23.453 --> 00:22:27.851\nNow, I'm just going to put the IP address\nof one my servers in here, right?\n\n487\n00:22:27.851 --> 00:22:29.917\nSo, let me get the IP of a server.\n\n488\n00:22:29.917 --> 00:22:33.748\nI'll pick the one that is\nover in Virginia, all right.\n\n489\n00:22:33.748 --> 00:22:36.604\nSo we're just gonna throw\nthat one in there, all right.\n\n490\n00:22:36.604 --> 00:22:41.132\nAnd then for the policy I'm gonna\ndrop it down and choose weighted.\n\n491\n00:22:41.132 --> 00:22:44.485\nNow as soon as I choose weighted, I'm\ngonna see some interesting things pop up.\n\n492\n00:22:44.485 --> 00:22:46.322\nMy head's gonna cover some of this, but\n\n493\n00:22:46.322 --> 00:22:48.548\nbasically I've got two\nvalues I can put in here.\n\n494\n00:22:48.548 --> 00:22:51.868\nI've got weight and Set ID.\n\n495\n00:22:51.868 --> 00:22:53.099\nSet ID is the easy one.\n\n496\n00:22:53.099 --> 00:22:57.119\nWhen I create this record, I just need\nsome kind of visual identifier so\n\n497\n00:22:57.119 --> 00:22:58.533\nI know what server it is.\n\n498\n00:22:58.533 --> 00:22:59.670\nThat's all the Set ID is.\n\n499\n00:22:59.670 --> 00:23:01.318\nIt's an ID that we use.\n\n500\n00:23:01.318 --> 00:23:02.596\nThe end users never see it.\n\n501\n00:23:02.596 --> 00:23:03.222\nIt doesn't really matter.\n\n502\n00:23:03.222 --> 00:23:04.290\nIt's just to help us.\n\n503\n00:23:04.290 --> 00:23:07.666\nSo, I might put in here us-virginia,\njust so\n\n504\n00:23:07.666 --> 00:23:10.708\nthat I can remember that what this one is.\n\n505\n00:23:10.708 --> 00:23:11.775\nIt just kind helps me out.\n\n506\n00:23:11.775 --> 00:23:14.637\nAnd they even give an example here,\nMy Seattle Data Center, or\n\n507\n00:23:14.637 --> 00:23:16.967\nwhatever you want to put just so\nwe can remember it.\n\n508\n00:23:16.967 --> 00:23:19.638\nAnd then for the weight,\nI'm going to put a number.\n\n509\n00:23:19.638 --> 00:23:23.144\nNow a lot of people use percentages for\nthis.\n\n510\n00:23:23.144 --> 00:23:26.881\nAnd they say okay I want 50% of my\ntraffic to come to this one server.\n\n511\n00:23:26.881 --> 00:23:28.438\nAnd so they would put a 50 here.\n\n512\n00:23:28.438 --> 00:23:32.725\nAnd you can do that, you can treat\nit as basically one through 100 and\n\n513\n00:23:32.725 --> 00:23:34.380\nuse those as percentages.\n\n514\n00:23:34.380 --> 00:23:36.520\nJust make sure they total up to 100.\n\n515\n00:23:36.520 --> 00:23:40.200\nBut the reality is you can actually\nput zero through 255 in here.\n\n516\n00:23:40.200 --> 00:23:43.078\nAnd you're not gonna have 255%\nof your traffic go to one place.\n\n517\n00:23:43.078 --> 00:23:45.670\n>> [LAUGH]\n>> So what really happens is Amazon just\n\n518\n00:23:45.670 --> 00:23:48.628\ntakes the numbers you put in and\nbalances based on that.\n\n519\n00:23:48.628 --> 00:23:53.349\nSo for example I have three servers, if I\nwant 50% of my traffic to go to one server\n\n520\n00:23:53.349 --> 00:23:57.336\nand 25% to go to another server and\n25% to go to the third server.\n\n521\n00:23:57.336 --> 00:23:59.171\nRight, that adds up to 100%.\n\n522\n00:23:59.171 --> 00:24:00.337\nUsing percentages makes sense.\n\n523\n00:24:00.337 --> 00:24:04.531\nBut I could also just put a two for\nthis server, and a one for this server and\n\n524\n00:24:04.531 --> 00:24:06.030\na one for the last server.\n\n525\n00:24:06.030 --> 00:24:08.798\nAnd now it's gonna say, all right,\nif I add those together,\n\n526\n00:24:08.798 --> 00:24:10.140\ntwo plus one plus one is four.\n\n527\n00:24:10.140 --> 00:24:13.860\nSo, for every four requests, I'll send\ntwo to one server, one to the next, and\n\n528\n00:24:13.860 --> 00:24:15.034\none to the next, right?\n\n529\n00:24:15.034 --> 00:24:16.520\nAnd so it doesn't have to be percentages.\n\n530\n00:24:16.520 --> 00:24:20.467\nThat's confusing, because on a lot of\nwebsites, they treat it like a percentage.\n\n531\n00:24:20.467 --> 00:24:21.808\nAnd then you get on the exam, and\n\n532\n00:24:21.808 --> 00:24:24.461\nyou might see an example that\ndoesn't use percentages at all.\n\n533\n00:24:24.461 --> 00:24:28.640\nYou might see 88 for one, 44 for\nanother, and 44 for another.\n\n534\n00:24:28.640 --> 00:24:30.665\nAnd you look at that, and you're like,\nwell that adds up to more than 100%.\n\n535\n00:24:30.665 --> 00:24:32.173\nAmazon's crazy.\n\n536\n00:24:32.173 --> 00:24:33.680\nThey're not crazy.\n\n537\n00:24:33.680 --> 00:24:36.300\nIt means 50% goes to one,\n25 to another, 25 to another.\n\n538\n00:24:36.300 --> 00:24:38.990\nJust, you gotta kinda do the math on it.\n\n539\n00:24:38.990 --> 00:24:41.665\nSo, for my weight here,\nI'll go ahead and set this one to 50.\n\n540\n00:24:41.665 --> 00:24:46.059\nI'm gonna send 50% of my traffic\nto this particular server.\n\n541\n00:24:46.059 --> 00:24:50.373\nAll right, and it gives me the option\nto associate with that health check.\n\n542\n00:24:50.373 --> 00:24:53.480\nNow, what's a health check?\n\n543\n00:24:53.480 --> 00:24:58.096\nThe big problem with Round Robin DNS\nis it doesn't know if my server's\n\n544\n00:24:58.096 --> 00:24:59.200\nhealthy or not.\n\n545\n00:24:59.200 --> 00:25:03.300\nThe server could be down,\nit could be failed and it doesn't know.\n\n546\n00:25:03.300 --> 00:25:06.044\nSo, with these guys,\nthese advanced routing policies,\n\n547\n00:25:06.044 --> 00:25:09.348\nwe can associate them with the health\ncheck will then actually monitor\n\n548\n00:25:09.348 --> 00:25:11.040\nthe server to tell me if it's down.\n\n549\n00:25:11.040 --> 00:25:13.110\nAnd if it's down,\nthey'll take it out of the group.\n\n550\n00:25:13.110 --> 00:25:14.955\nDon't send 50% of my traffic here.\n\n551\n00:25:14.955 --> 00:25:15.962\nIf the server's down, that's crazy.\n\n552\n00:25:15.962 --> 00:25:18.168\nAnd so it'll check and it'll find that.\n\n553\n00:25:18.168 --> 00:25:20.224\nNow I haven't created a health check yet.\n\n554\n00:25:20.224 --> 00:25:23.015\nSo I'm just gonna create the records,\nand then we'll add a health check so\n\n555\n00:25:23.015 --> 00:25:24.184\nwe can take advantage of that.\n\n556\n00:25:24.184 --> 00:25:28.276\n>> Now Don, quick question about this\nweighted system You're saying that I\n\n557\n00:25:28.276 --> 00:25:33.103\ncan send 50% of my traffic to this server,\n25% to this server, 25 to this one.\n\n558\n00:25:33.103 --> 00:25:37.943\nHow do I know which server, do I do that\nwith the really good server gets 50%, and\n\n559\n00:25:37.943 --> 00:25:41.630\nthe kind of hardware junk I got\nlaying over here gets the other?\n\n560\n00:25:41.630 --> 00:25:45.482\nHopefully those users out there just\ndon't recognize the difference.\n\n561\n00:25:45.482 --> 00:25:50.074\n>> Back in the day, when I would manage\nphysical data centers, you have hundreds\n\n562\n00:25:50.074 --> 00:25:54.402\nor thousands of physical servers right\nthere in the room with you, yeah.\n\n563\n00:25:54.402 --> 00:25:58.707\nYou'd have some servers that had 8\nprocessors and some that only had 4, or\n\n564\n00:25:58.707 --> 00:26:02.490\n1 server that had 16 gigs of RAM and\nanother had 32 gigs of RAM.\n\n565\n00:26:02.490 --> 00:26:07.260\nAnd see you'd say, boy that server with\n32 gigs of RAM can handles more traffic.\n\n566\n00:26:07.260 --> 00:26:08.010\nI'll send it more data, right?\n\n567\n00:26:08.010 --> 00:26:11.653\nBut with AWS and EC2,\nusually your servers are pretty equal.\n\n568\n00:26:11.653 --> 00:26:13.949\nBecause it's not like the old days\nwhere I had a physical server and\n\n569\n00:26:13.949 --> 00:26:15.605\nit was a pain in the butt to upgrade it.\n\n570\n00:26:15.605 --> 00:26:18.335\nIf I had a server that\nonly had 8 gigs of RAM and\n\n571\n00:26:18.335 --> 00:26:19.575\nI was bringing up a new one with 16.\n\n572\n00:26:19.575 --> 00:26:22.045\nI would just go to the old one and\ndial up 16 also.\n\n573\n00:26:22.045 --> 00:26:23.635\nSo we don't normally balance out but\nyou certainly can.\n\n574\n00:26:23.635 --> 00:26:26.430\nYou might be balancing\nthis based on resource.\n\n575\n00:26:26.430 --> 00:26:30.127\nBut normally what I balance it\nbased on is the number of servers.\n\n576\n00:26:30.127 --> 00:26:34.051\nI have servers in the Virginia data\ncenter and in the Oregon data center, so\n\n577\n00:26:34.051 --> 00:26:37.415\nUS-East and US-West, and\nI've got some in Ireland in the EU,\n\n578\n00:26:37.415 --> 00:26:40.116\nI think it's EU-West is\nwhat Ireland's called.\n\n579\n00:26:40.116 --> 00:26:45.940\nSo I've got servers in those three\nlocations, but I might have five servers\n\n580\n00:26:45.940 --> 00:26:51.400\nin US-East I might have two servers\nin US West and one server in EU West.\n\n581\n00:26:51.400 --> 00:26:53.357\nAnd so\nI might choose the balance based on that.\n\n582\n00:26:53.357 --> 00:26:56.375\nSend less traffic to Ireland cuz\nI've only got one server there.\n\n583\n00:26:56.375 --> 00:26:58.563\nSend a little more to Oregon\nbecause I've got two.\n\n584\n00:26:58.563 --> 00:27:00.982\nSend the bulk of the traffic to US East.\n\n585\n00:27:00.982 --> 00:27:04.890\nSo you can basically dole it out based\non where the bulk of your servers are.\n\n586\n00:27:04.890 --> 00:27:06.290\nAll right.\n\n587\n00:27:06.290 --> 00:27:08.370\nSo I'm gonna go ahead and\ncreate this record.\n\n588\n00:27:08.370 --> 00:27:11.626\nNow I set it with only one server.\n\n589\n00:27:11.626 --> 00:27:12.508\nThis is where it gets tricky.\n\n590\n00:27:12.508 --> 00:27:16.061\nRemember with Round Robin I pasted\nall the IPs into one record.\n\n591\n00:27:16.061 --> 00:27:18.406\nAnd that's because,\nwell they're all treated equally.\n\n592\n00:27:18.406 --> 00:27:19.938\nRight?\nSo they're all in one record.\n\n593\n00:27:19.938 --> 00:27:23.182\nBut with weighted I actually have\nto start creating more records.\n\n594\n00:27:23.182 --> 00:27:28.156\nI need to create another record set,\nthat I'm gonna call the same thing.\n\n595\n00:27:28.156 --> 00:27:29.605\nNow, normally that's crazy,\n\n596\n00:27:29.605 --> 00:27:32.350\nlike why would you create two\ndns records with the same name?\n\n597\n00:27:32.350 --> 00:27:35.635\nBut here I need to cuz I've gotta add\nthe other servers with their weights.\n\n598\n00:27:35.635 --> 00:27:37.085\nSo I'll call this one weighted.\n\n599\n00:27:37.085 --> 00:27:41.320\nAnd I'm going to paste in the address\nof one of my other servers.\n\n600\n00:27:41.320 --> 00:27:45.965\nHere's the one from Oregon and\nI'll throw that one in here.\n\n601\n00:27:45.965 --> 00:27:48.835\nAnd I guess I could tack Ireland on this\none cause their going to have the same\n\n602\n00:27:48.835 --> 00:27:51.403\nweight but I'll add it separate just so\nI can do a different set ID.\n\n603\n00:27:51.403 --> 00:27:56.425\nAnd then I come down here and I'll say\nthat this ones going to be weighted and\n\n604\n00:27:56.425 --> 00:27:59.150\nin the weight I'll set this one to 25.\n\n605\n00:27:59.150 --> 00:28:03.320\nAnd I'll give it the US-West name just so\nI can remember, and I'll create that one.\n\n606\n00:28:03.320 --> 00:28:07.520\nAnd see how it didn't complain, like,\nyou've got a record with the same name.\n\n607\n00:28:07.520 --> 00:28:09.960\nIf these were a records\nit would have complained.\n\n608\n00:28:09.960 --> 00:28:13.702\nIt would have said no you can't do that or\na records on a simple routing policy, but\n\n609\n00:28:13.702 --> 00:28:17.080\nbecause I set the weighted routing\npolicy it allows me to duplicate that.\n\n610\n00:28:17.080 --> 00:28:20.650\nAnd then I can add in my third one\nwhich again I'll just called weighted.\n\n611\n00:28:20.650 --> 00:28:23.300\nI hope I'm spelling right.\n\n612\n00:28:23.300 --> 00:28:23.857\nOkay.\nAnd\n\n613\n00:28:23.857 --> 00:28:26.410\nI might have said a lower\ntt on the other one.\n\n614\n00:28:26.410 --> 00:28:27.010\nI've forgotten.\n\n615\n00:28:27.010 --> 00:28:29.070\nI'll just leave it I guess.\n\n616\n00:28:29.070 --> 00:28:32.600\nNothing like good dedicated\nattention to detail here.\n\n617\n00:28:32.600 --> 00:28:36.790\nSo we go in and\nset this other one to be weighted 25 and\n\n618\n00:28:36.790 --> 00:28:39.585\nthis one's going to be EU-West and\n\n619\n00:28:39.585 --> 00:28:44.510\nI guess I'll probably need to put\nin an IP address on this one.\n\n620\n00:28:44.510 --> 00:28:47.576\nSo I'll go get my IP from Ireland and\nI'll throw that one in too.\n\n621\n00:28:47.576 --> 00:28:51.738\nOkay, now once I've got that\nI created the records and\n\n622\n00:28:51.738 --> 00:28:56.261\nnow I can see that I've got three\nrecords in here that are all\n\n623\n00:28:56.261 --> 00:29:00.264\nweighted.itprotv.net and\nif I scroll over here.\n\n624\n00:29:00.264 --> 00:29:01.607\nHere's the weights.\n\n625\n00:29:01.607 --> 00:29:03.325\nAnd my head's covering it.\n\n626\n00:29:03.325 --> 00:29:05.110\nCan we get rid of my head for a second?\n\n627\n00:29:05.110 --> 00:29:06.746\nSo if we look, you'll see right here.\n\n628\n00:29:06.746 --> 00:29:09.393\neu-west, us-virginia, us-west.\n\n629\n00:29:09.393 --> 00:29:11.626\nThere's those set IDs,\nwhich are really useful for\n\n630\n00:29:11.626 --> 00:29:13.717\nus if we're trying to\nfigure out which is which.\n\n631\n00:29:13.717 --> 00:29:17.040\nI can see that us-virginia's gonna\nbe getting 50% of my traffic.\n\n632\n00:29:17.040 --> 00:29:19.510\nAnd then 25 and 25 to the other guys.\n\n633\n00:29:19.510 --> 00:29:23.143\nSo that's kinda weighted being put in\nplace, and I did leave my TTLs at 300 for\n\n634\n00:29:23.143 --> 00:29:24.112\nall of them, right.\n\n635\n00:29:24.112 --> 00:29:28.845\nAnd now if I start doing DNS lookups for\nthis, well,\n\n636\n00:29:28.845 --> 00:29:34.775\nI can come down here and\ndo a lookup for weighted.itprotv.net.\n\n637\n00:29:34.775 --> 00:29:36.931\nAnd when I do that lookup,\n\n638\n00:29:36.931 --> 00:29:41.840\nremember with round robin how\nI got all three address back.\n\n639\n00:29:41.840 --> 00:29:42.751\nHere, I only get one address.\n\n640\n00:29:42.751 --> 00:29:46.796\nAnd that's because it said,\n50% of the traffic is gonna go to this IP.\n\n641\n00:29:46.796 --> 00:29:47.957\n50% of the lookups.\n\n642\n00:29:47.957 --> 00:29:49.699\nAnd so I'm gonna poll that IP.\n\n643\n00:29:49.699 --> 00:29:53.553\n206, which I assume is us-east.\n\n644\n00:29:53.553 --> 00:29:54.900\nAnd so it's gonna give me that IP.\n\n645\n00:29:54.900 --> 00:29:57.546\nAnother person might do that lookup and\nget a different one.\n\n646\n00:29:57.546 --> 00:30:00.666\nAs you see, I ran it again and\nI got it a different one, and so\n\n647\n00:30:00.666 --> 00:30:02.927\nit's balancing me across the other ones.\n\n648\n00:30:02.927 --> 00:30:07.948\nI'm getting balanced and laid across\nthose and if I fire up the actual,\n\n649\n00:30:07.948 --> 00:30:11.880\nif I actually browse to the page,\nwell that's not it.\n\n650\n00:30:11.880 --> 00:30:12.530\nWhere's the page?\n\n651\n00:30:12.530 --> 00:30:14.010\nHere.\n\n652\n00:30:14.010 --> 00:30:18.968\nSo if I fire up the actual page and\ntry and browse to weighted.itprotv.net,\n\n653\n00:30:18.968 --> 00:30:24.153\nI created this little sample page that it\nwould tell me and see how when I get here,\n\n654\n00:30:24.153 --> 00:30:28.216\nI can see the ip that I'm connected to and\nit says compute-1.\n\n655\n00:30:28.216 --> 00:30:29.980\nCompute-1 is the us-east data center.\n\n656\n00:30:29.980 --> 00:30:32.600\nThat's the one in Virginia.\n\n657\n00:30:32.600 --> 00:30:35.530\nSo I'm connected to that, that was\nthe very first one that Amazon made.\n\n658\n00:30:35.530 --> 00:30:37.460\nThe other ones actually named\na little more appropriately.\n\n659\n00:30:37.460 --> 00:30:42.279\nNow Safari here is going to cache that\nDNS lookup and it's going to hold it.\n\n660\n00:30:42.279 --> 00:30:44.679\nI might have to wait 5 minutes\nbefore it does lookup again or\n\n661\n00:30:44.679 --> 00:30:47.320\nend up somewhere else and\nthen I'm back on that 206 this time.\n\n662\n00:30:47.320 --> 00:30:49.790\nSo now I got that weighted distribution.\n\n663\n00:30:49.790 --> 00:30:52.458\nNot really done with it, I'd normally\nwant to tack on health checks, so\n\n664\n00:30:52.458 --> 00:30:54.864\nthat now if one server goes down,\nwe stop sending people there but\n\n665\n00:30:54.864 --> 00:30:57.210\nwe'll see health checks when we\nstart to do the failover side.\n\n666\n00:30:57.210 --> 00:30:59.236\nCuz they're really important, but\n\n667\n00:30:59.236 --> 00:31:01.860\nthat would be the next\nstep to get this one done.\n\n668\n00:31:01.860 --> 00:31:06.282\n>> Yeah Don, we do have actually quite\na bit more to cover when it comes to and\n\n669\n00:31:06.282 --> 00:31:08.817\nDNS and\nall the cool stuff we can do with it, but\n\n670\n00:31:08.817 --> 00:31:11.176\nour clock has ticked\ndown to its last tock.\n\n671\n00:31:11.176 --> 00:31:13.080\nAnd this show here has no more time.\n\n672\n00:31:13.080 --> 00:31:16.998\nSo any parting words for\nour guest before we move into a part two.\n\n673\n00:31:16.998 --> 00:31:20.528\n>> For the exam, you really need to be\nfamiliar with these routing policies.\n\n674\n00:31:20.528 --> 00:31:22.942\nWhich one is the right one for\nwhat scenario?\n\n675\n00:31:22.942 --> 00:31:26.239\nAnd so far we've only seen simple and\nweighted.\n\n676\n00:31:26.239 --> 00:31:29.953\nWe're still gonna talk about latency and\ngeolocation, which are really important.\n\n677\n00:31:29.953 --> 00:31:32.330\nAnd then failover which is\nprobably the most important.\n\n678\n00:31:32.330 --> 00:31:34.716\nThat's usually the one\nthat pops up on the exam.\n\n679\n00:31:34.716 --> 00:31:37.272\nWe're gonna run through all of them,\nso we'll see in the upcoming episodes,\n\n680\n00:31:37.272 --> 00:31:38.291\ndefinitely tune in for those.\n\n681\n00:31:38.291 --> 00:31:39.963\n>> Awesome, thank you so\nmuch, Don, for that.\n\n682\n00:31:39.963 --> 00:31:41.449\nAnd thank you for watching.\n\n683\n00:31:41.449 --> 00:31:42.842\nHopefully we'll see you in part two.\n\n684\n00:31:42.842 --> 00:31:45.907\nSigning off for ITProTV,\nI've been your host Daniel Lowry.\n\n685\n00:31:45.907 --> 00:31:47.068\n>> And I'm Don Pizet.\n\n686\n00:31:47.068 --> 00:31:49.019\n>> And we'll see you next time.\n\n687\n00:31:49.019 --> 00:31:55.390\n[MUSIC]\n\n",
          "vimeoId": "146546749"
        },
        {
          "description": "In this episode, Daniel and Don continue exploring Route 53 Routing Policies, this time looking at the Latency and Geolocation Routing Policies which allow you to direct DNS traffic based on speed and distance respectfully. They also show you how to set up health-checks which verify the operating status of your systems. Health-checks also integrate with certain types of Routing Policies.",
          "length": "1530",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/amazon-acsa/amazon-acsa-6-1-redundancy_with_route_53_pt2-111815-1.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/amazon-acsa/amazon-acsa-6-1-redundancy_with_route_53_pt2-111815-1-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/amazon-acsa/amazon-acsa-6-1-redundancy_with_route_53_pt2-111815-1-sm.jpg",
          "title": "Redundancy with Route 53 Part 2",
          "transcript": "WEBVTT\n\n1\n00:00:00.000 --> 00:00:10.000\n[MUSIC]\n\n2\n00:00:11.277 --> 00:00:16.057\nAll right, greetings everyone, welcome\nto another great episode of ITPro TV,\n\n3\n00:00:16.057 --> 00:00:20.906\nI'm your host Daniel Lowrie and in this\nepisode we're continuing on with a little\n\n4\n00:00:20.906 --> 00:00:25.573\nmore of that AWS SysOps Certified\nAdministrator Certification from Amazon.\n\n5\n00:00:25.573 --> 00:00:30.556\nAnd again back with us here in the studio\nto help weed us through that little bit\n\n6\n00:00:30.556 --> 00:00:33.635\nof a jungle is none other than,\nMr. Don Pezet.\n\n7\n00:00:33.635 --> 00:00:34.523\nHow's it going today Don?\n\n8\n00:00:34.523 --> 00:00:37.045\n>> It is going great Dan,\nI'm glad to be back on the show and\n\n9\n00:00:37.045 --> 00:00:38.810\nready to continue on with route 53.\n\n10\n00:00:38.810 --> 00:00:44.080\nYou'll remember in the last episode we\ngot a chance to see how to do some simple\n\n11\n00:00:44.080 --> 00:00:44.610\nrecord sets.\n\n12\n00:00:44.610 --> 00:00:46.670\nJust regular A record type things.\n\n13\n00:00:46.670 --> 00:00:49.889\nWe also got a chance to see how\nto do weighted record sets.\n\n14\n00:00:49.889 --> 00:00:52.466\nAnd DNS round robin so\na couple of neat little features for\n\n15\n00:00:52.466 --> 00:00:55.741\ndoing a bit of redundancy, a bit of\ndistribution inside of Route 53 and\n\n16\n00:00:55.741 --> 00:00:58.231\nwe're going to continue on\nwith that in this episode.\n\n17\n00:00:58.231 --> 00:01:02.851\n>> Now Don I know you want to get on to\nthe other routing policies that we have\n\n18\n00:01:02.851 --> 00:01:03.395\nthere.\n\n19\n00:01:03.395 --> 00:01:07.454\nBut I was really intrigued and since\nit's my show and I'm a little selfish,\n\n20\n00:01:07.454 --> 00:01:10.637\nI want you to expound on this for\nme, was the health checks.\n\n21\n00:01:10.637 --> 00:01:13.937\nI thought that looked really interesting\nand it seems to be an integral part of\n\n22\n00:01:13.937 --> 00:01:16.397\nthis type of operation, so\ncan you help us out with that?\n\n23\n00:01:16.397 --> 00:01:17.540\nShow us a little bit of that?\n\n24\n00:01:17.540 --> 00:01:21.058\n>> Sure if you don't remember or\nif you skipped the other episode,\n\n25\n00:01:21.058 --> 00:01:23.824\none of the things I did was when\nI set up DNS round robbining\n\n26\n00:01:23.824 --> 00:01:27.284\nit was rotating between three IPs and\nif one of those servers went down,\n\n27\n00:01:27.284 --> 00:01:30.477\nI said it's still gonna send a third\nof your people to that bad IP.\n\n28\n00:01:30.477 --> 00:01:34.179\nWhen we configured weighted as our route\npolicy it gave us the option to tie it to\n\n29\n00:01:34.179 --> 00:01:38.277\na health check and health check is awesome\nbecause that's where route 53 is checking\n\n30\n00:01:38.277 --> 00:01:40.598\nto see whether that server\nis actually working.\n\n31\n00:01:40.598 --> 00:01:43.412\nAnd if it is working it'll\nkeep sending traffic to it,\n\n32\n00:01:43.412 --> 00:01:46.852\nbut if the server stops working it\nwill stop sending traffic to it.\n\n33\n00:01:46.852 --> 00:01:50.404\nIt's a great way to take that\nbad server out of the pool and\n\n34\n00:01:50.404 --> 00:01:53.003\novercome the limitation of round robin.\n\n35\n00:01:53.003 --> 00:01:55.707\nNow you can still do round robin with\nweighted, you just give all the servers\n\n36\n00:01:55.707 --> 00:01:58.490\nequal weight, and\nnow it's basically gonna round robin.\n\n37\n00:01:58.490 --> 00:02:01.993\nBut the ability to do health checks\nis where that extra power comes in.\n\n38\n00:02:01.993 --> 00:02:03.832\nSo let's see how these health checks work.\n\n39\n00:02:03.832 --> 00:02:08.408\nSo I'm gonna jump into my Amazon dashboard\nhere, and if I get get back to my console,\n\n40\n00:02:08.408 --> 00:02:10.220\nI'll just dive into Route 53.\n\n41\n00:02:10.220 --> 00:02:14.173\nAnd on the main Route 53 dashboard,\nyou'll see your hosted zones, and\n\n42\n00:02:14.173 --> 00:02:15.335\nyour health checks.\n\n43\n00:02:15.335 --> 00:02:16.635\nAnd I don't currently have any.\n\n44\n00:02:16.635 --> 00:02:18.957\nSo I'm gonna create a health check.\n\n45\n00:02:18.957 --> 00:02:22.847\nAnd a health check is basically telling\nit how to determine whether the server is\n\n46\n00:02:22.847 --> 00:02:23.376\nup or not.\n\n47\n00:02:23.376 --> 00:02:26.567\nAnd what it's actually doing is in\nthe background it's using Cloud Watch.\n\n48\n00:02:26.567 --> 00:02:30.001\nSo we're really setting up basic\nAmazon Cloud watch services, but\n\n49\n00:02:30.001 --> 00:02:34.098\nit's not a replacement for Cloud Watch\nbecause Cloud Watch can monitor all sorts\n\n50\n00:02:34.098 --> 00:02:37.410\nof great stuff such as performance,\nhere it's really limited,\n\n51\n00:02:37.410 --> 00:02:39.665\nwe're just trying to\nsee if it works right.\n\n52\n00:02:39.665 --> 00:02:41.981\nThe server can be really slow,\nwe don't care about that,\n\n53\n00:02:41.981 --> 00:02:44.171\nwe just need to make sure\nit's actually functioning.\n\n54\n00:02:44.171 --> 00:02:47.759\nSo when I go to create a health check,\nI need to give it a name and\n\n55\n00:02:47.759 --> 00:02:49.837\nI'm gonna tell it what to monitor.\n\n56\n00:02:49.837 --> 00:02:52.128\nAnd I can tell it to monitor\nthe end point itself, or\n\n57\n00:02:52.128 --> 00:02:55.609\nto monitor some other health check that\nI might have made over in Cloud Watch.\n\n58\n00:02:55.609 --> 00:02:58.060\nSo you can kind of tie to together\nif you wanna get really advanced.\n\n59\n00:02:58.060 --> 00:02:59.690\nNow, notice this little\ninformational blurb.\n\n60\n00:02:59.690 --> 00:03:04.171\nIf we monitor the endpoint, it's actually\ncovered by the free usage tier in AWS.\n\n61\n00:03:04.171 --> 00:03:06.394\nIf we choose to monitor another check,\nwell,\n\n62\n00:03:06.394 --> 00:03:08.788\nnow we start to move beyond\nthe free usage tier, so\n\n63\n00:03:08.788 --> 00:03:12.838\nthe advanced stuff does cost a little bit,\nbut it's actually really inexpensive.\n\n64\n00:03:12.838 --> 00:03:17.069\nWe need to give the health check a name,\nand then we tell it what we're going\n\n65\n00:03:17.069 --> 00:03:20.574\nto be monitoring and\nyou'll notice the IP address is needed.\n\n66\n00:03:20.574 --> 00:03:24.513\nI've got multiple servers so I'm going\nto need to create a health check for\n\n67\n00:03:24.513 --> 00:03:28.139\neach one to be able to keep tabs on\nwhether or not it's functioning and\n\n68\n00:03:28.139 --> 00:03:30.974\nyou can monitor it by an IP address or\nby a domain name.\n\n69\n00:03:30.974 --> 00:03:34.116\nWhen you're doing things like\na shared DNS entry, you don't want\n\n70\n00:03:34.116 --> 00:03:37.611\nto monitor the shared DNS entry cuz\nyou'd be monitoring all the servers.\n\n71\n00:03:37.611 --> 00:03:40.101\nYou need to monitor the individual nodes.\n\n72\n00:03:40.101 --> 00:03:43.702\nSo I may come in here and say I'm\ngonna create this first one for my.\n\n73\n00:03:43.702 --> 00:03:47.604\nThis'll be my US-EAST server\nthat I'm gonna monitor.\n\n74\n00:03:47.604 --> 00:03:52.789\nAnd I'm going to monitor that particular\nend point and its HTTP, it's a web server,\n\n75\n00:03:52.789 --> 00:03:57.541\nand I need the IP address to that server\nwhich I have right here so I'll choose to\n\n76\n00:03:57.541 --> 00:04:02.032\nmonitor that and I'll punch in an IP or\nI could do that host name if I had it.\n\n77\n00:04:02.032 --> 00:04:02.989\nI'm going to leave that empty.\n\n78\n00:04:02.989 --> 00:04:07.960\nI'm going to monitor on port 80 and\nI'm going to look for index.PHP, right?\n\n79\n00:04:07.960 --> 00:04:09.686\nThat's my main index file.\n\n80\n00:04:09.686 --> 00:04:13.902\nIf I can resolve that file,\nthen the server must be up, right?\n\n81\n00:04:13.902 --> 00:04:15.530\nIf I can't resolve that file,\nthen it's not.\n\n82\n00:04:15.530 --> 00:04:16.560\nNow that's a pretty basic check.\n\n83\n00:04:16.560 --> 00:04:19.259\nYou'll see where you can do HTTPS or\neven TCP.\n\n84\n00:04:19.259 --> 00:04:20.769\nIf you've got like a database server,\n\n85\n00:04:20.769 --> 00:04:23.852\nyou might choose to do a TCP connection to\nsee if you can connect to the database.\n\n86\n00:04:23.852 --> 00:04:25.402\nBut it's not a very advanced check.\n\n87\n00:04:25.402 --> 00:04:27.639\nIt's not saying can I query this table?\n\n88\n00:04:27.639 --> 00:04:28.986\nCan I run this application?\n\n89\n00:04:28.986 --> 00:04:31.911\nIt's just saying if I go to this\npage do I get something back?\n\n90\n00:04:31.911 --> 00:04:32.569\nRight?\n\n91\n00:04:32.569 --> 00:04:35.748\nSo if you want something more advanced\nthat's where you kind of have to go to\n\n92\n00:04:35.748 --> 00:04:38.579\nCloud Watch and that's why it gets\nyou out of that free usage tier.\n\n93\n00:04:38.579 --> 00:04:41.497\nSo I'm just going to monitor to\nsee if I can get to that page and\n\n94\n00:04:41.497 --> 00:04:42.537\nif I can't, great.\n\n95\n00:04:42.537 --> 00:04:43.193\nAll right?\n\n96\n00:04:43.193 --> 00:04:46.863\nIf I already had other healthchecks I\ncould choose that and you can see where I\n\n97\n00:04:46.863 --> 00:04:50.647\nstart to pick other healthchecks that I\nmight have and I get nothing when I click\n\n98\n00:04:50.647 --> 00:04:54.545\non that because I don't have any other\nhealthchecks in Cloud Watch or whatever so\n\n99\n00:04:54.545 --> 00:04:57.380\nI'll flip back to endpoint and\njust kind of run with that.\n\n100\n00:04:57.380 --> 00:05:00.425\nSo this is a basic health check,\nno additional charges, and\n\n101\n00:05:00.425 --> 00:05:01.510\nI'll just hit Next.\n\n102\n00:05:01.510 --> 00:05:03.718\nThen it's gonna say,\nwhat do I do if there's an alarm?\n\n103\n00:05:03.718 --> 00:05:08.070\nNow, it's got whether I wanna create an\nalarm when it fails, and I can choose no.\n\n104\n00:05:08.070 --> 00:05:10.680\nWhy wouldn't I wanna create an alarm?\n\n105\n00:05:10.680 --> 00:05:13.491\nWell, I might not actually care that it\nfailed, I just wanna take it out of DNS,\n\n106\n00:05:13.491 --> 00:05:15.760\nright, so I wouldn't necessarily\nI have an alarm, but\n\n107\n00:05:15.760 --> 00:05:17.600\nif I say yes I can choose\nto create that and\n\n108\n00:05:17.600 --> 00:05:20.750\ntell it to send me an email and\nit'll fire off an email to me if I want.\n\n109\n00:05:20.750 --> 00:05:24.717\nI'm not gonna create an alarm for\nmine, and I'll create that check.\n\n110\n00:05:24.717 --> 00:05:28.584\nNow that check is created for\nmy US East server, I want to continue and\n\n111\n00:05:28.584 --> 00:05:31.801\ncreate these from my other\nservers to check for them too.\n\n112\n00:05:31.801 --> 00:05:34.913\nSo I would need to do my US West and\nmy other one.\n\n113\n00:05:34.913 --> 00:05:38.609\nSo I'll just kinda whip through\nhere real quick and do US West,\n\n114\n00:05:38.609 --> 00:05:40.017\nmonitor the endpoint.\n\n115\n00:05:40.017 --> 00:05:43.250\nPunch in that IP and look for INDEX.PHP.\n\n116\n00:05:43.250 --> 00:05:46.926\nSo pretty simple,\nif not a little on the repetitive side.\n\n117\n00:05:46.926 --> 00:05:51.361\nSo, we'll get that one created and\nmy last one was EU-WEST.\n\n118\n00:05:51.361 --> 00:05:53.502\nMy server that's over in Ireland.\n\n119\n00:05:53.502 --> 00:05:55.420\nAnd so I'll come in here and grab its IP.\n\n120\n00:05:55.420 --> 00:06:00.454\nKeep in mind, you hope,\nthat you're using elastic IP's,\n\n121\n00:06:00.454 --> 00:06:03.327\nthe static IP's for these nodes.\n\n122\n00:06:03.327 --> 00:06:05.848\nOr these are load balancer\nIPs that you're monitoring.\n\n123\n00:06:05.848 --> 00:06:08.711\nIf you're monitoring a dynamic IP and\nthe IP changes,\n\n124\n00:06:08.711 --> 00:06:10.710\nit'll cause a health check failure.\n\n125\n00:06:10.710 --> 00:06:11.825\nSo remember that.\n\n126\n00:06:11.825 --> 00:06:13.523\nAll right, so we'll punch that in.\n\n127\n00:06:13.523 --> 00:06:15.030\nAnd there's my last check.\n\n128\n00:06:15.030 --> 00:06:16.649\nAnd so,\nnow I've got my three health checks.\n\n129\n00:06:16.649 --> 00:06:19.623\nNow notice their status is unknown,\nI have to wait.\n\n130\n00:06:19.623 --> 00:06:21.937\nIt is going to query out to those\nsystems and check them, but\n\n131\n00:06:21.937 --> 00:06:23.568\nit's not the fastest thing in the world.\n\n132\n00:06:23.568 --> 00:06:26.269\nWhich is probably a good thing that we're\ndoing this in the beginning of the show\n\n133\n00:06:26.269 --> 00:06:27.901\nbecause it will give them\ntime to come healthy.\n\n134\n00:06:27.901 --> 00:06:30.677\nIf you take a look at\nthe monitoring side of each,\n\n135\n00:06:30.677 --> 00:06:35.150\nyou can see whether they're actually\nmonitoring or not, and see how mine sets\n\n136\n00:06:35.150 --> 00:06:39.009\nthe last hour health check status no data,\nso I need to just kind of,\n\n137\n00:06:39.009 --> 00:06:42.923\nI can sit here I guess and be bored,\nhit refresh over and over again.\n\n138\n00:06:42.923 --> 00:06:47.218\nBut eventually it's gonna do that check\nand we'll be able to see that status and\n\n139\n00:06:47.218 --> 00:06:51.912\nso for mine, still no health check status,\nso we'll just have to wait a little while.\n\n140\n00:06:51.912 --> 00:06:55.531\nSometimes if you refresh up here\nin the console, there we go!\n\n141\n00:06:55.531 --> 00:06:58.428\nTwo of them went healthy, so\nthe US EU West is the last one I added so\n\n142\n00:06:58.428 --> 00:07:01.430\nI've gotta wait, but\nmy other ones are showing healthy.\n\n143\n00:07:01.430 --> 00:07:03.290\nIf those servers go down\nthe health check fails.\n\n144\n00:07:03.290 --> 00:07:04.740\nNow what does that do?\n\n145\n00:07:04.740 --> 00:07:06.146\nNothing.\n\n146\n00:07:06.146 --> 00:07:07.408\nIt does nothing, it's great, it's awesome.\n\n147\n00:07:07.408 --> 00:07:11.160\nBut it generates an alarm if you set that,\nI didn't so mine literally does nothing.\n\n148\n00:07:11.160 --> 00:07:14.950\nBut if I tie that to my DNS records,\nnow it does something.\n\n149\n00:07:14.950 --> 00:07:19.239\nSo now I can jump back to my dashboard,\nI can jump into my zones and\n\n150\n00:07:19.239 --> 00:07:23.450\ngo into ITProTV.net and\nI can take those weighted records that\n\n151\n00:07:23.450 --> 00:07:26.796\nwe created in the last episode and\nI can find them.\n\n152\n00:07:26.796 --> 00:07:28.323\nAnd I'll take the first one here,\n\n153\n00:07:28.323 --> 00:07:30.650\nwhich I've kind of forgotten\nwhich is which right.\n\n154\n00:07:30.650 --> 00:07:32.235\nI see the IP, maybe I've memorized it.\n\n155\n00:07:32.235 --> 00:07:33.170\nI haven't.\n\n156\n00:07:33.170 --> 00:07:35.314\nBut fortunately I did a set ID.\n\n157\n00:07:35.314 --> 00:07:37.702\nSo this one has a set ID of EU-West and\n\n158\n00:07:37.702 --> 00:07:41.093\nI can tell it to associate\nthat with a health check and\n\n159\n00:07:41.093 --> 00:07:45.790\nnow I'll have that option to come\ndown here and pick the health check.\n\n160\n00:07:45.790 --> 00:07:49.183\nAnd so I can say, this is EU-WEST,\nand I'm gonna tie it to it.\n\n161\n00:07:49.183 --> 00:07:52.380\nIf that health check fails,\ndon't ever return this server.\n\n162\n00:07:52.380 --> 00:07:55.087\nEven though I've got it set to\nsend 25% of the traffic to it.\n\n163\n00:07:55.087 --> 00:07:57.504\nIf the health check fails,\ndon't even do that, right?\n\n164\n00:07:57.504 --> 00:08:03.212\nNow, I've got a much more\nredundancy type of environment.\n\n165\n00:08:03.212 --> 00:08:06.170\nAnd I can go to each of the other ones and\nI can set them.\n\n166\n00:08:06.170 --> 00:08:06.930\nSo here's US Virginia.\n\n167\n00:08:06.930 --> 00:08:08.590\nI'll tie it to a health check.\n\n168\n00:08:08.590 --> 00:08:10.150\nWhich is going to be tied to?\n\n169\n00:08:10.150 --> 00:08:14.400\nLet's see that's going\nto be tied to US East.\n\n170\n00:08:14.400 --> 00:08:15.760\nSo I'll get that one.\n\n171\n00:08:15.760 --> 00:08:17.480\nOne set, and\n\n172\n00:08:17.480 --> 00:08:20.635\nthen the last one which is going to\nbe US West, unless I've gone crazy.\n\n173\n00:08:20.635 --> 00:08:25.692\n>> [CROSSTALK]\n>> Well I could have, so there we go.\n\n174\n00:08:25.692 --> 00:08:29.198\nSo we'll send that to US West, and\nnow I've hot health checks in place.\n\n175\n00:08:29.198 --> 00:08:32.319\nAnd those health checks are going to\nensure that I'm only serving up good\n\n176\n00:08:32.319 --> 00:08:33.146\nservers, right.\n\n177\n00:08:33.146 --> 00:08:35.661\nThat I'm not serving up bad ones that we\nare always giving people servers that\n\n178\n00:08:35.661 --> 00:08:36.330\nare up, all right.\n\n179\n00:08:36.330 --> 00:08:40.790\nSo health checks are pretty important\nespecially when we get to failover\n\n180\n00:08:40.790 --> 00:08:41.690\nbecause failover needs it.\n\n181\n00:08:41.690 --> 00:08:46.410\nBut here, if I set each of these servers\nto have the same weight, I've effectively\n\n182\n00:08:46.410 --> 00:08:50.920\ncreated round robining, but with a health\ncheck and that's better than just regular\n\n183\n00:08:50.920 --> 00:08:54.060\nold round robin, so if you're planning\non doing simple round robin, don't.\n\n184\n00:08:54.060 --> 00:08:56.790\nJust skip over that and\ngo right into weighted and\n\n185\n00:08:56.790 --> 00:08:59.020\nset them all to have the same weight.\n\n186\n00:08:59.020 --> 00:09:01.610\nBut mine's uneven way, but\nI've got health checks too.\n\n187\n00:09:01.610 --> 00:09:02.610\nI get the best of both worlds.\n\n188\n00:09:02.610 --> 00:09:06.210\nThis is really one of the best ways\nto build redundancy right here.\n\n189\n00:09:06.210 --> 00:09:08.130\nSo for a lot of people,\n\n190\n00:09:08.130 --> 00:09:14.180\nweighted is the solution that you're going\nto use for setting up redundancy in DNS.\n\n191\n00:09:14.180 --> 00:09:15.690\n>> Don, I'm not really seeing\nany disadvantage to setting up,\n\n192\n00:09:15.690 --> 00:09:16.600\n>> These health tests.\n\n193\n00:09:16.600 --> 00:09:19.310\nObviously, they're there to\nactually create an advantage for\n\n194\n00:09:19.310 --> 00:09:22.660\nus to make sure that those servers\nare up and running, and if they're not,\n\n195\n00:09:22.660 --> 00:09:26.050\nthen the other servers just take over\nthe bulk of the load and all that.\n\n196\n00:09:26.050 --> 00:09:29.040\nAnd all that would go to the server that\nis down is just being passed to them,\n\n197\n00:09:29.040 --> 00:09:32.410\nand it kinda gets out of the game, and\nwe don't have to worry about that, right?\n\n198\n00:09:32.410 --> 00:09:33.940\n>> Yeah, yeah,\nthat's exactly right, Daniel.\n\n199\n00:09:33.940 --> 00:09:35.710\nI mean, this stuff is pretty\neasy to get put in place.\n\n200\n00:09:35.710 --> 00:09:38.680\nIt gives you great load balancing,\ngreat resiliency, great redundancy, and\n\n201\n00:09:38.680 --> 00:09:40.270\nit's really not hard\n>> Hard to do,\n\n202\n00:09:40.270 --> 00:09:43.410\nso you definitely wanna\ntake advantage of it.\n\n203\n00:09:43.410 --> 00:09:46.700\nAnd we've only seen two of\nthe routing policies so far, right?\n\n204\n00:09:46.700 --> 00:09:48.280\nThere's other routing policies we can use.\n\n205\n00:09:48.280 --> 00:09:50.920\n>> Yeah, well speaking of\nthose other routing policies,\n\n206\n00:09:50.920 --> 00:09:53.160\nDon you've kinda hinted at them\nwhat they can and can't do.\n\n207\n00:09:53.160 --> 00:09:54.370\nLet's go ahead and jump into that.\n\n208\n00:09:54.370 --> 00:09:58.900\nAnd not only that, do they offer the same\nkind of redundancy that the other\n\n209\n00:09:58.900 --> 00:10:00.410\npolicies that you've shown us\n>> Yeah,\n\n210\n00:10:00.410 --> 00:10:03.770\nsome of the other ones\nare a little more special use.\n\n211\n00:10:03.770 --> 00:10:06.400\nRight.\nSo I've set up redundancy here with\n\n212\n00:10:06.400 --> 00:10:07.910\nweighted balancing.\n\n213\n00:10:07.910 --> 00:10:11.220\nSo you'll notice I have\nservers in Ireland and\n\n214\n00:10:11.220 --> 00:10:14.580\nservers that are in Oregon and\nservers that are in Virginia.\n\n215\n00:10:14.580 --> 00:10:16.760\nSo two in the US one in Europe and\n\n216\n00:10:16.760 --> 00:10:20.440\nso I'm just balancing across them\nbased on numbers that I made up.\n\n217\n00:10:20.440 --> 00:10:24.860\nBut what if I had users in In Ireland,\nor France for that matter.\n\n218\n00:10:24.860 --> 00:10:26.630\nIf I have a user in France,\n\n219\n00:10:26.630 --> 00:10:30.720\nthey're gonna get a better experience\nif they go to the server in Ireland,\n\n220\n00:10:30.720 --> 00:10:33.660\nthen they will if they come to the US\nright, either of our servers here.\n\n221\n00:10:33.660 --> 00:10:36.670\nIf I have a user in the US,\nif they're on the west coast, they'll get\n\n222\n00:10:36.670 --> 00:10:40.120\na better experience off of Oregon then\nthey will off of Virginia, right?\n\n223\n00:10:40.120 --> 00:10:41.070\nSo, it would be nice if.\n\n224\n00:10:41.070 --> 00:10:42.230\nNow it's not based on percentages,\n\n225\n00:10:42.230 --> 00:10:45.210\nbut balanced based on Geolocation,\nwhere these people reside.\n\n226\n00:10:45.210 --> 00:10:49.370\nAnd so that's the next type of record or\nrouting policy I want to show you guys.\n\n227\n00:10:49.370 --> 00:10:53.370\nSo, I've created a few different\nrecord sets to this point and\n\n228\n00:10:53.370 --> 00:10:54.700\nlet's create another one.\n\n229\n00:10:54.700 --> 00:10:57.700\nSo I'm going to whip up another\none here which I'm going to call,\n\n230\n00:10:58.710 --> 00:11:01.920\ngot my caps lock on here,\nI'll just call it a Geolocation.\n\n231\n00:11:01.920 --> 00:11:05.002\n>> You were gonna call\nit Geolocation [LAUGH]\n\n232\n00:11:05.002 --> 00:11:06.859\n>> Really, really a lot of emphasis here.\n\n233\n00:11:06.859 --> 00:11:09.112\nSo geolocation.ITProTV.net.\n\n234\n00:11:09.112 --> 00:11:11.062\nIt'll be an A record just like the others.\n\n235\n00:11:11.062 --> 00:11:12.260\nAnd I'm gonna come over here and\nget my US East.\n\n236\n00:11:12.260 --> 00:11:17.560\nThis is the Virginia IP, and I'll come\nin and fill that one in, all right?\n\n237\n00:11:17.560 --> 00:11:21.360\n>> And then after that I can pick my\nrouting policy and instead of simple,\n\n238\n00:11:21.360 --> 00:11:26.530\nI'm gonna come down here and\npick Geolocation.\n\n239\n00:11:26.530 --> 00:11:29.020\nWhich actually the last one in the list,\nright?\n\n240\n00:11:29.020 --> 00:11:32.560\nAnd when I click Geolocation,\nnow I can tell it what the location is.\n\n241\n00:11:32.560 --> 00:11:35.730\nAnd in the location you'll see\nI've got continents, countries,\n\n242\n00:11:35.730 --> 00:11:37.200\nyou can get really specific.\n\n243\n00:11:37.200 --> 00:11:39.620\nDo I wanna send all of Europe to this or\n\n244\n00:11:39.620 --> 00:11:45.360\ndo I wanna send just a particular\ncountry in Europe to it, right?\n\n245\n00:11:45.360 --> 00:11:46.700\nSo you can get really specific and\n\n246\n00:11:46.700 --> 00:11:49.670\nthere's even other things that\nare kind of tucked away in here.\n\n247\n00:11:49.670 --> 00:11:50.860\nSo you got a ton of options.\n\n248\n00:11:50.860 --> 00:11:55.400\nFor me, I might choose North America\nto send here to this one\n\n249\n00:11:55.400 --> 00:11:59.290\nserver versus Europe I\nsend to another server.\n\n250\n00:11:59.290 --> 00:11:59.880\nI'll do that.\n\n251\n00:11:59.880 --> 00:12:01.700\nI guess I could go into the United States.\n\n252\n00:12:01.700 --> 00:12:03.480\nI'll just go North America.\n\n253\n00:12:03.480 --> 00:12:07.900\nI'm going to say North American and I'll\nset this as a set ID of US East, right.\n\n254\n00:12:07.900 --> 00:12:10.830\nI'm doing that because for the IP up here,\n\n255\n00:12:10.830 --> 00:12:15.480\nI've pointed to my server\nthat's in the US East, and so\n\n256\n00:12:15.480 --> 00:12:18.960\nI'll Geolocate it so people in\nNorth America will get the US East record.\n\n257\n00:12:18.960 --> 00:12:21.340\nAnd I can associate that with\nthe health check if I wanna,\n\n258\n00:12:21.340 --> 00:12:22.430\nI'll leave it off for right now.\n\n259\n00:12:22.430 --> 00:12:24.419\nAnd I'll go ahead and create that.\n\n260\n00:12:24.419 --> 00:12:29.510\nAnd then I'm gonna create\nanother record and I'm,\n\n261\n00:12:29.510 --> 00:12:33.890\nI'm going to call this one\ngeolocation.itprotv.net same name, right?\n\n262\n00:12:33.890 --> 00:12:38.594\nAnd this time when I go down to the bottom\nhere, I'll choose to do that Geolocation\n\n263\n00:12:38.594 --> 00:12:43.420\nagain and this time, I'm going to choose\nfor my continent, I'll choose Europe.\n\n264\n00:12:43.420 --> 00:12:45.620\nAnd I'm going to say people in Europe so\n\n265\n00:12:45.620 --> 00:12:48.780\nthis would be EU West is where\nI'm gonna send these people.\n\n266\n00:12:48.780 --> 00:12:52.800\nAnd I need to, I keep forgetting\nan important part here, to put in an IP so\n\n267\n00:12:52.800 --> 00:12:55.570\nI need to get the IP of\nmy server in Ireland.\n\n268\n00:12:55.570 --> 00:12:58.280\nSo here's my server in Ireland.\n\n269\n00:12:58.280 --> 00:12:59.520\nAnd I'll put that one in.\n\n270\n00:12:59.520 --> 00:13:04.590\nSo now if you are in Europe,\nyou're going to get this IP back.\n\n271\n00:13:04.590 --> 00:13:08.040\nAnd if you're in North America\nyou're gonna get the other IP back,\n\n272\n00:13:08.040 --> 00:13:08.610\nit's Geolocation.\n\n273\n00:13:08.610 --> 00:13:10.570\nBut I can still tie to a health check.\n\n274\n00:13:10.570 --> 00:13:14.130\nAnd if I tie it to a health check and\nthat server goes down.\n\n275\n00:13:14.130 --> 00:13:17.920\nEven if you're in Europe\nyou won't get this IP.\n\n276\n00:13:17.920 --> 00:13:20.330\nIt'll give you the IP for the US server.\n\n277\n00:13:20.330 --> 00:13:21.330\nYou'll failover to the US.\n\n278\n00:13:21.330 --> 00:13:24.850\nNormally, it'll go to Europe\nunless that server is down right.\n\n279\n00:13:24.850 --> 00:13:27.010\nSo tying it to a health check\nkind of solves that problem.\n\n280\n00:13:27.010 --> 00:13:28.400\nI guess I could stop being lazy and\n\n281\n00:13:28.400 --> 00:13:32.880\ngo ahead and assign it a health check and\nI'll go ahead and create that.\n\n282\n00:13:32.880 --> 00:13:35.860\nAnd I guess I should update my\nother record to do the same.\n\n283\n00:13:35.860 --> 00:13:39.140\nSo, we'll go in and\njust assign that to a health check.\n\n284\n00:13:39.140 --> 00:13:40.790\nOops, if I can click on it.\n\n285\n00:13:40.790 --> 00:13:48.780\nAnd I'm gonna set that one's health\ncheck and tie it to US East.\n\n286\n00:13:48.780 --> 00:13:49.420\nThere, all right.\n\n287\n00:13:49.420 --> 00:13:52.300\nSo now what I've got is two records for\ngeolocation.itprotv.net.\n\n288\n00:13:52.300 --> 00:13:57.260\nAnd I'm not load balancing based\non number of people or a weight or\n\n289\n00:13:57.260 --> 00:13:58.120\nanything like that.\n\n290\n00:13:58.120 --> 00:14:01.300\nI'm just sending people to this server\nthat's physically close to them.\n\n291\n00:14:01.300 --> 00:14:04.370\nAnd for the most part that's going\nto give you the best experience.\n\n292\n00:14:04.370 --> 00:14:08.020\nGoing to a server that's near you will\nusually have a faster response time,\n\n293\n00:14:08.020 --> 00:14:10.260\nyou'll get your images and stuff quicker.\n\n294\n00:14:10.260 --> 00:14:14.320\nAnd it can even keep that customer's\ndata in the right region,\n\n295\n00:14:14.320 --> 00:14:17.430\nwhich is becoming important with new\nprivacy laws that are coming out.\n\n296\n00:14:17.430 --> 00:14:21.170\nFor example, in the EU they require us\nto keep our customer data in the EU, and\n\n297\n00:14:21.170 --> 00:14:24.520\nso here, I'm gonna send them to\nthose servers, or I might want\n\n298\n00:14:24.520 --> 00:14:29.330\nto send them to a website that has all the\npricing in euros, versus here in the US,\n\n299\n00:14:29.330 --> 00:14:32.620\nI wanna send them to a website that\nhas all the pricing in dollars.\n\n300\n00:14:32.620 --> 00:14:36.600\nAnd so now I'm sending them to\nthe appropriate webserver based on that.\n\n301\n00:14:36.600 --> 00:14:40.620\nBased on Geolocation, so that's some\nof the stuff that we can do with that.\n\n302\n00:14:40.620 --> 00:14:45.560\nNow for me, I'm in the US and\nso if I do a lookup for\n\n303\n00:14:45.560 --> 00:14:48.780\nthis entry,\nI should get this dot 206 address back.\n\n304\n00:14:48.780 --> 00:14:52.020\nI'm saying should just as my\ncover up in case it doesn't work.\n\n305\n00:14:52.020 --> 00:14:55.150\nBut I'll do a lookup for\ngeolocation.itprotv.net.\n\n306\n00:14:55.150 --> 00:14:59.360\nAnd when I look it up, I get no answer\nwhich means I either can't spell or\n\n307\n00:14:59.360 --> 00:15:00.370\nthe record hasn't propagated yet.\n\n308\n00:15:00.370 --> 00:15:01.840\nWe just created these.\n\n309\n00:15:01.840 --> 00:15:03.110\nSo let me double check and make sure.\n\n310\n00:15:03.110 --> 00:15:04.890\nI called it joelocation.itprotv.net.\n\n311\n00:15:04.890 --> 00:15:05.960\nSo I did name it correctly.\n\n312\n00:15:05.960 --> 00:15:07.390\nIt probably just hasn't propagated yet.\n\n313\n00:15:07.390 --> 00:15:10.920\nSo if I wait a little while,\nthat record should turn up.\n\n314\n00:15:10.920 --> 00:15:12.830\nBut my IP should show as being in.\n\n315\n00:15:12.830 --> 00:15:15.530\nNorth America, and\nas long as the health check passes,\n\n316\n00:15:15.530 --> 00:15:17.000\nthen we should be able to get in there.\n\n317\n00:15:17.000 --> 00:15:18.790\nSo we should be in good shape there.\n\n318\n00:15:18.790 --> 00:15:24.790\nBut the other thing is, when we started\nenabling these, it's kinda hard to test.\n\n319\n00:15:24.790 --> 00:15:27.380\nSo you might wanna use a VPN service or\n\n320\n00:15:27.380 --> 00:15:30.670\nsomething to move yourself to another\ncontinent to be able to try it.\n\n321\n00:15:30.670 --> 00:15:32.670\nSo I know I use a little\nthird party service.\n\n322\n00:15:32.670 --> 00:15:35.350\nDo I have it actually set up here?\n\n323\n00:15:35.350 --> 00:15:36.560\nYeah.\nYou'll see where I've got this little\n\n324\n00:15:36.560 --> 00:15:39.240\nservice set up that I use\nwhere I can switch myself to\n\n325\n00:15:39.240 --> 00:15:41.330\nbeing in the Netherlands or UK.\n\n326\n00:15:41.330 --> 00:15:43.250\nI can be US East or US West.\n\n327\n00:15:43.250 --> 00:15:45.462\nSo I can kinda flip where\nI'm at on my laptop.\n\n328\n00:15:45.462 --> 00:15:48.516\nAnd a lot of people use that to get\nNetflix illegally or whatever, but\n\n329\n00:15:48.516 --> 00:15:50.203\nfor troubleshooting your networks,\n\n330\n00:15:50.203 --> 00:15:52.520\nit's actually really useful\nto use the same tools,\n\n331\n00:15:52.520 --> 00:15:56.172\nbecause now you can appear like you're\nfrom a different continent to test it out.\n\n332\n00:15:56.172 --> 00:15:58.380\n>> With great power, Don,\ncomes great responsibility.\n\n333\n00:15:58.380 --> 00:15:59.337\n[LAUGH]\n>> I know.\n\n334\n00:15:59.337 --> 00:16:03.384\nI wish it came with great patience cuz,\nI'm getting impatient waiting on this, but\n\n335\n00:16:03.384 --> 00:16:05.640\neventually that geolocation.\n\n336\n00:16:05.640 --> 00:16:07.442\nDid I?\nI did spell it right, itprotv.net, yeah.\n\n337\n00:16:07.442 --> 00:16:09.663\nSo, we just have to wait to\nget that lookup back, but\n\n338\n00:16:09.663 --> 00:16:11.786\nonce it's there we'll\nstart to get that result.\n\n339\n00:16:11.786 --> 00:16:15.134\nSo, pretty easy to put those in place,\nthat's geolocation.\n\n340\n00:16:15.134 --> 00:16:19.262\nAnd there's another one that we might\nwant to use, which is called latency.\n\n341\n00:16:19.262 --> 00:16:22.475\nAnd latency what we can do with it,\nis we can basically say,\n\n342\n00:16:22.475 --> 00:16:26.738\nwhen somebody does a lookup, I want to\nsend them to a server that's near them.\n\n343\n00:16:26.738 --> 00:16:29.972\nWhere they'll get the best response, so\nthat the least delay between them and\n\n344\n00:16:29.972 --> 00:16:31.255\nthe server they're going to.\n\n345\n00:16:31.255 --> 00:16:32.276\n>> Hold on, hold on.\n\n346\n00:16:32.276 --> 00:16:34.516\n[LAUGH] One second there Mr. Pezet.\n\n347\n00:16:34.516 --> 00:16:36.339\nNow I know I made it to\nthird grade in school, but.\n\n348\n00:16:36.339 --> 00:16:38.221\n[LAUGH]\n>> [LAUGH]\n\n349\n00:16:38.221 --> 00:16:39.444\n>> You just said it's gonna\n\n350\n00:16:39.444 --> 00:16:40.434\nsend them latency,\n\n351\n00:16:40.434 --> 00:16:44.610\nyou setup a latency policy it sends\nthem to a sever that's close to them.\n\n352\n00:16:44.610 --> 00:16:46.810\nHow is that any different\nthan the geolocation?\n\n353\n00:16:46.810 --> 00:16:48.230\nIsn't that sending them to\nservers that are close to them?\n\n354\n00:16:48.230 --> 00:16:49.560\n>> In a perfect world, they are identical.\n\n355\n00:16:49.560 --> 00:16:53.333\nIn a perfect world, there's really no\ndifference between the two services.\n\n356\n00:16:53.333 --> 00:16:54.862\nBut the world is not perfect.\n\n357\n00:16:54.862 --> 00:17:00.301\nSo what you might find is maybe\nI have 2 servers in Ireland and\n\n358\n00:17:00.301 --> 00:17:03.330\nI have 20 servers in Virginia.\n\n359\n00:17:03.330 --> 00:17:05.910\nIn here in the US,\nI'm sending people to Virginia.\n\n360\n00:17:05.910 --> 00:17:08.440\nAnd over in Europe,\nI'm sending everybody to Ireland.\n\n361\n00:17:08.440 --> 00:17:09.342\nWell, Europe is really big.\n\n362\n00:17:09.342 --> 00:17:10.677\nThere's a lot of countries there.\n\n363\n00:17:10.677 --> 00:17:11.769\nThere's a lot of people there.\n\n364\n00:17:11.769 --> 00:17:14.124\nAnd those two servers in\nIreland might not keep up.\n\n365\n00:17:14.124 --> 00:17:16.795\nAnd so they might start to\noverwhelm those servers.\n\n366\n00:17:16.795 --> 00:17:18.893\nAnd the servers are getting slower and\nslower and slower, and\n\n367\n00:17:18.893 --> 00:17:20.277\nthe response gets more and more latent.\n\n368\n00:17:20.277 --> 00:17:23.226\nIf I'm doing latency-based routing,\n\n369\n00:17:23.226 --> 00:17:28.960\nwhat it's going to do is say you actually\nget a pretty bad response on those.\n\n370\n00:17:28.960 --> 00:17:31.460\nI'm gonna send you to the US.\n\n371\n00:17:31.460 --> 00:17:32.309\nThe US is further away but\n\n372\n00:17:32.309 --> 00:17:34.660\nbecause there's more servers you\nmight get a faster response time.\n\n373\n00:17:34.660 --> 00:17:37.460\nSo the latency routing is more\npowerful in that scenario.\n\n374\n00:17:37.460 --> 00:17:41.259\nNow in a perfect world the way you're\nsupposed to do it is you set up\n\n375\n00:17:41.259 --> 00:17:43.622\nthose servers in Ireland to auto scale.\n\n376\n00:17:43.622 --> 00:17:45.624\nSo if they start getting busy\nyou just scale out more, and\n\n377\n00:17:45.624 --> 00:17:47.051\nthen geo-location is the one you want.\n\n378\n00:17:47.051 --> 00:17:51.449\nSo geo-location is the way I normally go\non this, but latency is an option and\n\n379\n00:17:51.449 --> 00:17:56.590\nit can allow you to basically flip people\nover to other continents if necessary.\n\n380\n00:17:56.590 --> 00:18:00.920\nWith geo-location it won't\nnormally flip you over unless all\n\n381\n00:18:00.920 --> 00:18:03.540\nthe servers are down in your country.\n\n382\n00:18:03.540 --> 00:18:06.535\nIf there's even one server up in your\narea it's gonna send you to that one.\n\n383\n00:18:06.535 --> 00:18:08.935\nLatency wont, right?\nSo if I create another record set, and\n\n384\n00:18:08.935 --> 00:18:10.776\nI'll call this one latency.\n\n385\n00:18:10.776 --> 00:18:16.050\nSo I'm creating latency.itprotv.net and\nI can give it a record.\n\n386\n00:18:16.050 --> 00:18:18.152\nAnd so I can come in here and\nstart to put in some IPs.\n\n387\n00:18:18.152 --> 00:18:22.950\nI'll grab my us-east, all right,\nand I'll throw that one in.\n\n388\n00:18:22.950 --> 00:18:25.842\nAnd for my routing policy,\n\n389\n00:18:25.842 --> 00:18:30.884\nI'm gonna come in here and\nI'll pick latency.\n\n390\n00:18:30.884 --> 00:18:35.551\nAnd with latency, I can pick my region.\n\n391\n00:18:35.551 --> 00:18:36.642\nSo this one's gonna be us-east, and I can\nset it in ID which I'll just call us-east.\n\n392\n00:18:36.642 --> 00:18:37.520\nNothing too fancy there, right?\n\n393\n00:18:37.520 --> 00:18:40.152\nAnd, you can come through and you can\nstart to specify the different regions for\n\n394\n00:18:40.152 --> 00:18:40.710\nthese records.\n\n395\n00:18:40.710 --> 00:18:42.510\nI'm gonna set this one up.\n\n396\n00:18:42.510 --> 00:18:45.580\nI'm not gonna set a health check on\nthis one, so it'll come in faster.\n\n397\n00:18:45.580 --> 00:18:47.980\nSo I'll get that created.\n\n398\n00:18:47.980 --> 00:18:49.611\nAnd then I can create\nanother record set and\n\n399\n00:18:49.611 --> 00:18:51.924\nstart to add the other ones in\npointing to the other regions.\n\n400\n00:18:51.924 --> 00:18:58.048\nSo, I might come in and\ncreate another one called latency and\n\n401\n00:18:58.048 --> 00:19:04.664\nset it to the IP address of us-west,\nand I'll throw that one in.\n\n402\n00:19:04.664 --> 00:19:09.630\nAnd I'll set that one down here to\nlatency, and then we'll tell it us-west.\n\n403\n00:19:09.630 --> 00:19:12.870\nAnd see it already knew\nto go US West on that?.\n\n404\n00:19:12.870 --> 00:19:15.950\nBecause it looked at the IP and\nsaw where it was.\n\n405\n00:19:15.950 --> 00:19:17.796\nSo it's already set and\nI can create that, and so now.\n\n406\n00:19:17.796 --> 00:19:21.220\nI've got to set an ID,\nthat's kind of important.\n\n407\n00:19:21.220 --> 00:19:23.850\nWe'll create that, there we go.\n\n408\n00:19:23.850 --> 00:19:27.000\nAll right, so now I've got this\nlatency.itprotv.net set up.\n\n409\n00:19:27.000 --> 00:19:31.630\nAnd when you do a query EC2, or\nreally route53, is gonna look at that and\n\n410\n00:19:31.630 --> 00:19:36.570\nsay which server would get you the best\nresponse time and send you based on that.\n\n411\n00:19:36.570 --> 00:19:38.594\nIt doesn't care where you're coming from,\n\n412\n00:19:38.594 --> 00:19:41.163\nit cares where you're going to and\nroutes based on that.\n\n413\n00:19:41.163 --> 00:19:44.309\nGeo-location cares where you're coming\nfrom, so a little bit of a difference.\n\n414\n00:19:44.309 --> 00:19:48.349\nAt first glance, the two do look\nidentical, but they are different.\n\n415\n00:19:48.349 --> 00:19:51.859\nLatency will gladly send you\nto a different country or\n\n416\n00:19:51.859 --> 00:19:56.622\na different region if they think you'll\nget a better response out of it.\n\n417\n00:19:56.622 --> 00:19:57.663\nGeo-location will always\n\n418\n00:19:57.663 --> 00:19:59.930\nsend you to the same region\nunless all the servers are down.\n\n419\n00:19:59.930 --> 00:20:02.508\n>> So the method for latency,\nthen, is time instead of distance.\n\n420\n00:20:02.508 --> 00:20:06.300\nIt's analogous to, if I had two\ncities I wanted to go to from here.\n\n421\n00:20:06.300 --> 00:20:08.929\nOne's five miles away,\none's ten miles away, but\n\n422\n00:20:08.929 --> 00:20:12.830\nI've got to go through tons of traffic\nto get to one even though it's closer.\n\n423\n00:20:12.830 --> 00:20:15.880\nI'm gonna get to the city that's\nfarther away distance wise, faster,\n\n424\n00:20:15.880 --> 00:20:17.140\nbecause it's less traffic.\n\n425\n00:20:17.140 --> 00:20:18.192\n>> Yeah.\nAnd the best part is,\n\n426\n00:20:18.192 --> 00:20:19.815\nwe don't have to figure that out.\n\n427\n00:20:19.815 --> 00:20:21.520\nAmazon figures it all out for us.\n\n428\n00:20:21.520 --> 00:20:22.530\nThey're doing this on an ongoing basis.\n\n429\n00:20:22.530 --> 00:20:26.170\nWhen people do their DNS lookups,\nthis is all happening In the background.\n\n430\n00:20:26.170 --> 00:20:27.697\nThis is really powerful stuff.\n\n431\n00:20:27.697 --> 00:20:30.323\nI know a lot of people\nsay route 53 is just DNS.\n\n432\n00:20:30.323 --> 00:20:31.299\nWhat do I care about that?\n\n433\n00:20:31.299 --> 00:20:35.819\nBut, there's a lot of logic that goes\non behind the scenes in these routing\n\n434\n00:20:35.819 --> 00:20:36.550\npolicies.\n\n435\n00:20:36.550 --> 00:20:38.266\nIf you don't mess with\nthe routing policies,\n\n436\n00:20:38.266 --> 00:20:39.550\nthen yeah it's just a DNS server.\n\n437\n00:20:39.550 --> 00:20:41.630\nIt's not any different than\nif you whipped up your own.\n\n438\n00:20:41.630 --> 00:20:43.490\nWell I guess it's a lot more redundant.\n\n439\n00:20:43.490 --> 00:20:46.053\nBut when you start using the routing\npolicies that's when you get\n\n440\n00:20:46.053 --> 00:20:46.710\nthe real power.\n\n441\n00:20:46.710 --> 00:20:48.790\nAnd we've really just touched\nthe tip of the iceberg.\n\n442\n00:20:48.790 --> 00:20:51.580\nWe've see all the policies except for\none which is fail over, and\n\n443\n00:20:51.580 --> 00:20:55.060\nfail over is one of the coolest,\nbut by being one of the coolest it\n\n444\n00:20:55.060 --> 00:20:56.860\nmeans it gonna take me a little\nlonger to cover it and\n\n445\n00:20:56.860 --> 00:20:59.930\nso, Dan, we might need to split\nthat one off into another episode.\n\n446\n00:20:59.930 --> 00:21:01.030\n>> You can't do it in seven minutes?.\n\n447\n00:21:01.030 --> 00:21:02.154\nCome on, Don!\n>> [LAUGH]\n\n448\n00:21:02.154 --> 00:21:03.107\n>> Actually, before we move on\n\n449\n00:21:03.107 --> 00:21:05.965\nbeyond that, I haven't even tested\nthe latency one to see if that one's up.\n\n450\n00:21:05.965 --> 00:21:06.830\n>> That's true.\n\n451\n00:21:06.830 --> 00:21:11.400\n>> So let me jump down to a terminal here\nand see if my latency records are up.\n\n452\n00:21:11.400 --> 00:21:15.603\nAnd I might remove the health checks on\nthe geo-location one to get it go a little\n\n453\n00:21:15.603 --> 00:21:17.000\nfaster, but there we go.\n\n454\n00:21:17.000 --> 00:21:20.294\nSo I'm doing a query on latency and\nwhen I do my lookup,\n\n455\n00:21:20.294 --> 00:21:22.240\nagain I'm only getting one IP.\n\n456\n00:21:22.240 --> 00:21:25.710\nEven though there's two I'm only getting\none because that's the one that Amazon\n\n457\n00:21:25.710 --> 00:21:27.676\ndecided I would get\nthe best experience with.\n\n458\n00:21:27.676 --> 00:21:30.155\nIf you're watching the show live and\nyou do this query,\n\n459\n00:21:30.155 --> 00:21:32.382\nyou might get the other\nIP than what I'm getting.\n\n460\n00:21:32.382 --> 00:21:35.943\nIf you're watching this recorded, I've\nprobably deleted the records by then, but\n\n461\n00:21:35.943 --> 00:21:36.940\nyou could still try it.\n\n462\n00:21:36.940 --> 00:21:37.550\nIt could be fun.\n\n463\n00:21:37.550 --> 00:21:39.240\nBut, if I sit here and\ndo the load up over and over again.\n\n464\n00:21:39.240 --> 00:21:42.835\nSee how I just keep getting the same IP?\n\n465\n00:21:42.835 --> 00:21:45.687\nWell, the performance on the server isn't\nchanging, my latency isn't changing,\n\n466\n00:21:45.687 --> 00:21:46.647\nthat's what I'm getting.\n\n467\n00:21:46.647 --> 00:21:50.065\nBut if I start to see performance\nbottlenecks on the network,\n\n468\n00:21:50.065 --> 00:21:52.974\nthen it might choose to flip\nme over somewhere else.\n\n469\n00:21:52.974 --> 00:21:55.006\nAnd, networks change, right?\n\n470\n00:21:55.006 --> 00:21:57.630\nWe can use the Internet Health Report\nwebsite, or\n\n471\n00:21:57.630 --> 00:22:00.265\nInternet Traffic Report's\nkind of a fun one too.\n\n472\n00:22:00.265 --> 00:22:02.203\nLet's pull that one up.\n\n473\n00:22:02.203 --> 00:22:04.490\nIf I go to internettrafficreport.com,\nyou can start to kind of see.\n\n474\n00:22:04.490 --> 00:22:08.010\nActually, let's do\nthe Internet Health Report.\n\n475\n00:22:08.010 --> 00:22:09.975\nThat one actually gives us a cooler\none cuz it shows all the backbones.\n\n476\n00:22:09.975 --> 00:22:12.782\nSo if I take a look at like\nInternet Health Report, this guy.\n\n477\n00:22:12.782 --> 00:22:16.173\nHere's a map of all the backbones that\nare out there on the Internet that we\n\n478\n00:22:16.173 --> 00:22:17.992\ngo through, or at least here in the US.\n\n479\n00:22:17.992 --> 00:22:23.040\nAnd you'll see XO Communications and\nCogent are having some issues right now.\n\n480\n00:22:23.040 --> 00:22:24.448\nGetting a little bit of packet loss.\n\n481\n00:22:24.448 --> 00:22:27.154\n3.39% package loss between those two ISPs.\n\n482\n00:22:27.154 --> 00:22:28.940\nThat's not good.\n\n483\n00:22:28.940 --> 00:22:31.882\nAnd so, that could influence which server\nit is that I'm gonna go to when route 53\n\n484\n00:22:31.882 --> 00:22:33.750\nfigures out which one's gonna be the best,\nright?\n\n485\n00:22:33.750 --> 00:22:37.688\nWhen I see packet loss like that,\nI'm having to retransmit those packets and\n\n486\n00:22:37.688 --> 00:22:39.010\nthat creates latency.\n\n487\n00:22:39.010 --> 00:22:41.690\nNot just excessive band width or\nanything like that.\n\n488\n00:22:41.690 --> 00:22:45.860\nSo, any of that stuff can impact\nwhich one we're gonna get back.\n\n489\n00:22:45.860 --> 00:22:50.333\n>> Now, Don, with the latency can we go in\nand say we've decided that, something like\n\n490\n00:22:50.333 --> 00:22:54.690\nthat's happening where we're having some\nissues and packet loss is occurring.\n\n491\n00:22:54.690 --> 00:22:58.360\nCan I go in and change my latency values\nand say this is better than that one or\n\n492\n00:22:58.360 --> 00:23:00.950\ndoes it,\nall of that stuff is handled by Amazon?\n\n493\n00:23:00.950 --> 00:23:01.710\n>> It's really all handled by Amazon.\n\n494\n00:23:01.710 --> 00:23:06.030\nAs far as the GUI's concerned, what you\nsaw right there, that's the whole set up.\n\n495\n00:23:06.030 --> 00:23:12.690\nBut from the API, you can actually do a\nlittle bit of tweaking to it but not much.\n\n496\n00:23:12.690 --> 00:23:14.630\nFor the most part it's\ncontrolled on their end.\n\n497\n00:23:14.630 --> 00:23:18.298\nAnd it is because some pretty\nsophisticated lookups that are happening,\n\n498\n00:23:18.298 --> 00:23:21.030\nand they do it all seamlessly\nbehind the scenes for us.\n\n499\n00:23:21.030 --> 00:23:23.152\n>> I really wouldn't want to get\ninto that game anyway right?\n\n500\n00:23:23.152 --> 00:23:24.552\n[LAUGH]\n>> Yeah, yeah, it's complex.\n\n501\n00:23:24.552 --> 00:23:26.114\nAll right, so\nwe've seen all of those, Daniel.\n\n502\n00:23:26.114 --> 00:23:29.485\nI do wanna talk about failover which\nwould be next, but let's hold that off.\n\n503\n00:23:29.485 --> 00:23:31.109\nWe'll do another part on this one,\npart three.\n\n504\n00:23:31.109 --> 00:23:33.443\nEverything good's in a trilogy.\n\n505\n00:23:33.443 --> 00:23:34.467\n>> Rocky III was pretty good.\n\n506\n00:23:34.467 --> 00:23:36.606\n[LAUGH]\n>> Now, if we follow the trilogy formula,\n\n507\n00:23:36.606 --> 00:23:39.193\nthe first episode is supposed\nto give us some kind of victory,\n\n508\n00:23:39.193 --> 00:23:40.110\nwe end on a high note.\n\n509\n00:23:40.110 --> 00:23:42.891\nThe second one is supposed\nto end on a depressing note,\n\n510\n00:23:42.891 --> 00:23:45.058\nsomebody gets kidnapped or\nkilled or whatever.\n\n511\n00:23:45.058 --> 00:23:47.232\n[CROSSTALK]\n>> Looks like the protagonists are losing.\n\n512\n00:23:47.232 --> 00:23:49.191\n>> So\nhow are we gonna bring this one down?\n\n513\n00:23:49.191 --> 00:23:52.732\nWe're gonna say, we just configured\nall those but they all stink, and\n\n514\n00:23:52.732 --> 00:23:53.449\nthen go away?\n\n515\n00:23:53.449 --> 00:23:54.212\n>> Yeah, nothing works.\n>> [LAUGH]\n\n516\n00:23:54.212 --> 00:23:55.651\n>> And Don has scabies now.\n\n517\n00:23:55.651 --> 00:23:57.772\n[LAUGH]\n>> Well, I'll tell you guys,\n\n518\n00:23:57.772 --> 00:24:01.666\nof the different rounding policies that\nwe're going to see, the weighted and\n\n519\n00:24:01.666 --> 00:24:02.555\ngeo-location.\n\n520\n00:24:02.555 --> 00:24:03.622\nThose are two that are most useful.\n\n521\n00:24:03.622 --> 00:24:05.841\nAnd weighted is the one\nthat I normally use, right.\n\n522\n00:24:05.841 --> 00:24:08.912\nWeighted gives us the best\nbecause we can distribute\n\n523\n00:24:08.912 --> 00:24:10.946\nacross all of our servers at once.\n\n524\n00:24:10.946 --> 00:24:14.232\nAnd if one goes down we can just and\ntake it out of the pool.\n\n525\n00:24:14.232 --> 00:24:15.567\nIt really gives you the best balance.\n\n526\n00:24:15.567 --> 00:24:17.111\nSo, weighted is the one\nI normally go with.\n\n527\n00:24:17.111 --> 00:24:18.899\nGeo-location would be number two for me.\n\n528\n00:24:18.899 --> 00:24:21.616\nThat's another really useful one if\nyou wanna tie people into those areas.\n\n529\n00:24:21.616 --> 00:24:23.462\nLatency would be number three.\n\n530\n00:24:23.462 --> 00:24:25.110\nWe're gonna see failover next.\n\n531\n00:24:25.110 --> 00:24:28.868\nAnd failover's a little bit different from\nthe other ones, because with failover\n\n532\n00:24:28.868 --> 00:24:32.475\nwe're gonna dictate servers that are\nprimary and servers that are secondary.\n\n533\n00:24:32.475 --> 00:24:36.260\nAnd the primary ones are actively\nanswering customer requests.\n\n534\n00:24:36.260 --> 00:24:39.087\nThe secondaries are sitting\nthere doing nothing.\n\n535\n00:24:39.087 --> 00:24:42.538\nSo, unlike the others where we're\ntaking advantage of all our servers,\n\n536\n00:24:42.538 --> 00:24:43.550\nfailover doesn't.\n\n537\n00:24:43.550 --> 00:24:45.455\nAnd because of that I\ndon't normally use it,\n\n538\n00:24:45.455 --> 00:24:47.420\ncuz I want to take advantage\nof all my servers.\n\n539\n00:24:47.420 --> 00:24:49.287\nBut thanks to Amazon we only pay for\nwhat we use, so\n\n540\n00:24:49.287 --> 00:24:52.410\nhaving those other servers up and running\ndoesn't normally cost us a lot of money.\n\n541\n00:24:52.410 --> 00:24:55.576\nSo you could set it up where your\nprimary was on one continent and\n\n542\n00:24:55.576 --> 00:24:57.908\nyour secondary was on another continent,\nand\n\n543\n00:24:57.908 --> 00:25:00.838\nnow you had protection from\nan environmental disasters,\n\n544\n00:25:00.838 --> 00:25:05.290\nnatural disasters, things like that, that\ncould really give you some protection.\n\n545\n00:25:05.290 --> 00:25:06.230\nSo, it definitely has its place.\n\n546\n00:25:06.230 --> 00:25:10.612\nI definitely want to talk about it,\nbut we'll see it in part three.\n\n547\n00:25:10.612 --> 00:25:12.035\n>> Yeah.\nAwesome stuff, and thanks for\n\n548\n00:25:12.035 --> 00:25:13.273\nthat teaser trailer for failover.\n\n549\n00:25:13.273 --> 00:25:14.688\n>> [LAUGH]\n>> Hopefully we'll see you there in\n\n550\n00:25:14.688 --> 00:25:15.202\npart three.\n\n551\n00:25:15.202 --> 00:25:17.420\nAs for this episode,\nwe'll go ahead and call it a day.\n\n552\n00:25:17.420 --> 00:25:21.030\nSigning off for ITPro TV,\nI've been your host, Daniel Lowrie.\n\n553\n00:25:21.030 --> 00:25:23.540\n>> And I'm Don Pezet.\n\n554\n00:25:23.540 --> 00:25:27.130\n>> And we'll see you next time.\n\n555\n00:25:27.130 --> 00:25:29.640\n[MUSIC]\n\n",
          "vimeoId": "146546729"
        },
        {
          "description": "In this episode, Daniel and Don finish describing Route 53 Routing Policies with the Failover policy. They detail how the Failover policy works much like a traditional hot-standby secondary system, which takes over if a primary system loses connectivity and show you how to set that up in Route 53.",
          "length": "1398",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/amazon-acsa/amazon-acsa-6-1-redundancy_with_route_53_pt3-111815-1.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/amazon-acsa/amazon-acsa-6-1-redundancy_with_route_53_pt3-111815-1-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/amazon-acsa/amazon-acsa-6-1-redundancy_with_route_53_pt3-111815-1-sm.jpg",
          "title": "Redundancy with Route 53 Part 3",
          "transcript": "WEBVTT\n\n1\n00:00:00.000 --> 00:00:10.000\n[MUSIC]\n\n2\n00:00:12.150 --> 00:00:13.032\nAll right.\n\n3\n00:00:13.032 --> 00:00:16.979\nGreetings everyone, and welcome to\nanother exciting episode of ITProTV.\n\n4\n00:00:16.979 --> 00:00:21.227\nI'm your host Daniel Lowrie, and\nin this episode, we're going\n\n5\n00:00:21.227 --> 00:00:25.878\nto continue on with more certified\nAmazon AWS Certified SysOps admin.\n\n6\n00:00:25.878 --> 00:00:29.959\nThat's kind of a mouthful, and to help me\nget through all that mouthful business,\n\n7\n00:00:29.959 --> 00:00:33.130\nis none other than Mr.\nDon Pezet joining us on the show today.\n\n8\n00:00:33.130 --> 00:00:34.060\nHow's it going today Don?\n\n9\n00:00:34.060 --> 00:00:34.720\n>> It is going great, Daniel.\n\n10\n00:00:34.720 --> 00:00:37.330\nThanks for having me back and\nI'm excited to round off Route 53.\n\n11\n00:00:37.330 --> 00:00:40.820\nYou know, we've been taking a look at our,\nour routing policies\n\n12\n00:00:40.820 --> 00:00:44.220\nnow each one works and each one does\nsomething a little bit different.\n\n13\n00:00:44.220 --> 00:00:48.442\nNow, we're gonna take a look at the last\none which is the failover routing policy\n\n14\n00:00:48.442 --> 00:00:49.747\nwhich is pretty handy for\n\n15\n00:00:49.747 --> 00:00:53.245\nwell, when we want to failover from\none set of servers to another.\n\n16\n00:00:53.245 --> 00:00:55.673\nIt's all built right into Route 53 and\nwe're gonna see it here.\n\n17\n00:00:55.673 --> 00:00:58.446\n>> Now Don when you said\nwhen it comes to redundancy,\n\n18\n00:00:58.446 --> 00:01:00.450\nthis is the Mack daddy of them all.\n\n19\n00:01:00.450 --> 00:01:02.240\nAnd AWS, this is the guy we wanna use.\n\n20\n00:01:02.240 --> 00:01:04.490\nBecause it offers us the most flexibility,\nthe most redundancy,\n\n21\n00:01:04.490 --> 00:01:05.980\nand the most reliability.\n\n22\n00:01:05.980 --> 00:01:06.830\nRight?\n>> Yeah.\n\n23\n00:01:06.830 --> 00:01:08.210\nIt's really great for that.\n\n24\n00:01:08.210 --> 00:01:09.340\nIt's really good at what it does.\n\n25\n00:01:09.340 --> 00:01:11.956\nIt delivers on its name, right.\n\n26\n00:01:11.956 --> 00:01:15.997\nBut a key thing to remember about failover\nthat sets it apart from the other\n\n27\n00:01:15.997 --> 00:01:20.953\npolicies is when we setup failover records\nin Route 53, that failover routing policy,\n\n28\n00:01:20.953 --> 00:01:24.146\nit basically allows us to set\nwhich servers are primary and\n\n29\n00:01:24.146 --> 00:01:25.871\nwhich servers are secondary.\n\n30\n00:01:25.871 --> 00:01:28.707\nThe primary servers are the ones we're\ngonna be handing out to customers.\n\n31\n00:01:28.707 --> 00:01:33.277\nSo when somebody does a DNS lookup for our\nrecord, they're gonna get the primaries.\n\n32\n00:01:33.277 --> 00:01:36.479\nThey won't see the secondaries, the\nsecondaries won't show up at all, right.\n\n33\n00:01:36.479 --> 00:01:41.094\nAnd then if the primaries fail,\nthen the secondaries kick in,\n\n34\n00:01:41.094 --> 00:01:44.678\nthen we start to get those coming in,\nall right.\n\n35\n00:01:44.678 --> 00:01:48.226\nSo what that means, is that not all of\nyour servers are going to be active.\n\n36\n00:01:48.226 --> 00:01:51.611\nYou may have secondaries that\nare in place that never get\n\n37\n00:01:51.611 --> 00:01:53.923\nused as long as the primaries are out.\n\n38\n00:01:53.923 --> 00:01:56.993\nAnd so some people look at that in\nthe view as kind of wasted money, right?\n\n39\n00:01:56.993 --> 00:01:59.396\nNow why would I have these\nother secondary servers up and\n\n40\n00:01:59.396 --> 00:02:01.040\nrunning if I'm not going to use them?\n\n41\n00:02:01.040 --> 00:02:02.800\nAnd there's some truth to that right?\n\n42\n00:02:02.800 --> 00:02:05.470\nWhat failover really does is it matches\nthe old model of disaster recovery,\n\n43\n00:02:05.470 --> 00:02:08.700\nwhere we would say you know what I'm going\nto put some servers in the United States.\n\n44\n00:02:08.700 --> 00:02:11.500\nBut what if something\nhappens in the United States?\n\n45\n00:02:11.500 --> 00:02:13.770\nWhat if there's an earthquake,\nor something happens there?\n\n46\n00:02:13.770 --> 00:02:16.070\nAnd I wanna have redundant\nservers somewhere else.\n\n47\n00:02:16.070 --> 00:02:19.620\nI might choose to put some\nservers in Europe, and now,\n\n48\n00:02:19.620 --> 00:02:21.230\nno matter how big\nthe disaster is in the US,\n\n49\n00:02:21.230 --> 00:02:24.180\nI've got servers on an entirely\ndifferent continent, all right?\n\n50\n00:02:24.180 --> 00:02:27.110\nAnd so they can just sit there idle\nbecause I don't want my customers to have\n\n51\n00:02:27.110 --> 00:02:29.230\nto go all the way over to Europe\nif they're here in the US,\n\n52\n00:02:29.230 --> 00:02:30.640\nthey're gonna get a slow response.\n\n53\n00:02:30.640 --> 00:02:33.220\nAnd so that was the old way of doing\nthings is that we would suppress\n\n54\n00:02:33.220 --> 00:02:36.070\nthe secondary servers to make sure\npeople went to the primaries,\n\n55\n00:02:36.070 --> 00:02:37.790\nwhich were our better servers.\n\n56\n00:02:37.790 --> 00:02:41.750\nBut in today's world, you normally use\nlike Geolocation, or latency balancing,\n\n57\n00:02:41.750 --> 00:02:42.550\nor even just waited.\n\n58\n00:02:42.550 --> 00:02:45.750\nAnd say, those servers sitting\nover in Europe, I can use them.\n\n59\n00:02:45.750 --> 00:02:47.080\nWhat about my customers in Europe?\n\n60\n00:02:47.080 --> 00:02:50.050\nI might want them to just go\nto these backup servers, and\n\n61\n00:02:50.050 --> 00:02:52.510\nhave them all be active and\nfailover can't do that, right?\n\n62\n00:02:52.510 --> 00:02:55.540\nSo if you want all your\nservers to be active,\n\n63\n00:02:55.540 --> 00:02:57.080\ndon't use the failover routing policy.\n\n64\n00:02:57.080 --> 00:03:00.130\nBut if you want to set\nup primary servers and\n\n65\n00:03:00.130 --> 00:03:03.660\nthen backup servers,\nthat's where failover comes in.\n\n66\n00:03:03.660 --> 00:03:07.420\nBut there's a little bit of extra leg work\nwe need to do to get failover working\n\n67\n00:03:07.420 --> 00:03:10.040\nproperly, and so I kinda wanna\nshow you guys that, all right?\n\n68\n00:03:10.040 --> 00:03:14.010\nWhen we looked at some of the other\nrouting policies, things like latency,\n\n69\n00:03:14.010 --> 00:03:17.480\nGeolocation, even weighted,\nwe had the option to do health checks.\n\n70\n00:03:17.480 --> 00:03:20.620\nAnd I mentioned how health checks\nwere kinda kind of important.\n\n71\n00:03:20.620 --> 00:03:22.970\nBecause, if a server failed, we don't\nwanna be giving that IP out to customers.\n\n72\n00:03:22.970 --> 00:03:24.850\nYou configure a health check and\nthat takes care of it.\n\n73\n00:03:24.850 --> 00:03:26.410\nWell, they were always optional.\n\n74\n00:03:26.410 --> 00:03:27.880\nWith failover, they're required.\n\n75\n00:03:27.880 --> 00:03:31.060\nWe have to have health checks\ncause it has to know when to\n\n76\n00:03:31.060 --> 00:03:34.310\nfail from primary to secondary,\notherwise it's never gonna failover.\n\n77\n00:03:34.310 --> 00:03:36.500\nSo health checks become really important.\n\n78\n00:03:36.500 --> 00:03:40.010\nSo if you didn't watch\nthe earlier episodes,\n\n79\n00:03:40.010 --> 00:03:42.360\ngetting a health check\nset up is really easy.\n\n80\n00:03:42.360 --> 00:03:43.780\nAll we do is jump into our console.\n\n81\n00:03:43.780 --> 00:03:45.640\nAnd here,\nI'll run through the process real quick.\n\n82\n00:03:45.640 --> 00:03:47.590\nIf I jump into my console,\nand I go down to Route 53.\n\n83\n00:03:47.590 --> 00:03:51.070\nIn my Route 53 dashboard,\nI'll see my health checks right here.\n\n84\n00:03:51.070 --> 00:03:53.400\nAnd I can go in and\nI can whip up some health checks.\n\n85\n00:03:53.400 --> 00:03:56.990\nNow my network is not looking\ntoo terribly healthy right now.\n\n86\n00:03:56.990 --> 00:04:01.800\nMy servers are all showing as unhealthy,\nso that's not a good sign.\n\n87\n00:04:02.800 --> 00:04:03.410\nWonder why that is?\n\n88\n00:04:03.410 --> 00:04:05.620\nMy servers were healthy\njust a few moments ago.\n\n89\n00:04:05.620 --> 00:04:07.720\n>> We just had an extinction\nlevel even Don.\n\n90\n00:04:07.720 --> 00:04:08.520\n>> I know.\nApparently,\n\n91\n00:04:08.520 --> 00:04:10.850\nsomething bad has happened there so\nI'll have to check.\n\n92\n00:04:10.850 --> 00:04:12.320\nNotice it says 30 minutes ago so, anyhow.\n\n93\n00:04:12.320 --> 00:04:14.910\nIf I want to create some new health\nchecks, I can create a health check.\n\n94\n00:04:14.910 --> 00:04:18.100\nAnd then I can tell it\nwhat I want to monitor.\n\n95\n00:04:18.100 --> 00:04:21.660\nYou give it a name, some name that you can\nremember, and then you tell it whether\n\n96\n00:04:21.660 --> 00:04:24.460\nyou're gonna monitor that endpoint or\nnot, and you'll specify it.\n\n97\n00:04:24.460 --> 00:04:25.150\nIf it's a web server,\n\n98\n00:04:25.150 --> 00:04:28.330\nwe normally just tell it to query a\nparticular page and see if we can get it.\n\n99\n00:04:28.330 --> 00:04:32.610\nSo if I take a look at one of my servers,\nwhich these are my servers right here so\n\n100\n00:04:32.610 --> 00:04:39.120\nlet's just double check to make sure this\nthing is up and going and there we go.\n\n101\n00:04:39.120 --> 00:04:40.720\nYeah, server's up.\n\n102\n00:04:40.720 --> 00:04:44.710\nSo this server is up and healthy, so\nwhen I create a health check for it,\n\n103\n00:04:44.710 --> 00:04:47.180\nI can come in and give it a name.\n\n104\n00:04:47.180 --> 00:04:50.160\nSo this might be my US East web01 server.\n\n105\n00:04:50.160 --> 00:04:54.660\nAnd I can give it an IP and that\ninformation, which, let's take that IP.\n\n106\n00:04:54.660 --> 00:04:57.350\nAnd then I'll tell it to look for\na particular page, which for\n\n107\n00:04:57.350 --> 00:04:57.920\nme is index.PHP.\n\n108\n00:04:57.920 --> 00:05:03.041\nOkay, so I'll punch that in there and\nI'll go ahead and hit next.\n\n109\n00:05:03.041 --> 00:05:06.942\nAnd once I've got that created,\nI don't necessarily need an alarm.\n\n110\n00:05:06.942 --> 00:05:09.751\nAn alarm would be if you wanted it to\nemail or send you a text or whatever.\n\n111\n00:05:09.751 --> 00:05:10.354\nI don't need that.\n\n112\n00:05:10.354 --> 00:05:11.880\nI'll just stick with the basic one.\n\n113\n00:05:11.880 --> 00:05:13.562\n>> I ignore enough of my e-mails.\n\n114\n00:05:13.562 --> 00:05:14.940\n[LAUGH]\n>> And I'll create that health check.\n\n115\n00:05:14.940 --> 00:05:17.593\nAnd now when you create a health check, it\ndoesn't necessarily go active right away.\n\n116\n00:05:17.593 --> 00:05:19.318\nIt might take a while and\nyou know what, actually,\n\n117\n00:05:19.318 --> 00:05:20.552\nI think I might see what the problem is.\n\n118\n00:05:20.552 --> 00:05:23.432\nSee how I've got \"INDEX.PHP\"\nall capitalized, well,\n\n119\n00:05:23.432 --> 00:05:26.160\nthat shouldn't be case sensitive,\nshould it?\n\n120\n00:05:26.160 --> 00:05:27.280\nI wouldn't think so.\n\n121\n00:05:27.280 --> 00:05:28.880\n>> It would be.\n>> Let's double check and\n\n122\n00:05:28.880 --> 00:05:29.760\nsee if it's case-sensitive.\n\n123\n00:05:29.760 --> 00:05:31.780\nIt may be that I made those capitalized.\n\n124\n00:05:31.780 --> 00:05:35.530\nI think I had my caps lock on\nin that episode or something so\n\n125\n00:05:35.530 --> 00:05:36.840\nthat maybe what our problem is.\n\n126\n00:05:36.840 --> 00:05:37.426\nThat's exactly what it is.\n\n127\n00:05:37.426 --> 00:05:40.458\nSo I might need to go back and\nedit these other health checks,\n\n128\n00:05:40.458 --> 00:05:44.324\nyou know kind of fix my own mistake here,\nbut basically, these health checks\n\n129\n00:05:44.324 --> 00:05:47.734\nare just to let us know whether\nthe servers are up and running or not.\n\n130\n00:05:47.734 --> 00:05:52.470\nAnd it'd probably be faster for\nme to just make new ones.\n\n131\n00:05:52.470 --> 00:05:56.290\nSo, if I had US East and US West, I can\nstart to come in and punch in each of\n\n132\n00:05:57.330 --> 00:06:01.600\nthese health checks, and I probably need\nto give them the right IP addresses,\n\n133\n00:06:01.600 --> 00:06:04.630\nso I got my East and West mixed up,\nand I'm okay with that.\n\n134\n00:06:04.630 --> 00:06:09.290\nSo, if I come through and set each one\nof these, then it'll be checking to make\n\n135\n00:06:09.290 --> 00:06:13.620\nsure that those servers are healthy so\nwe don't send bad traffic there.\n\n136\n00:06:13.620 --> 00:06:15.630\nNow, the main reason I need\nthese health checks is so\n\n137\n00:06:15.630 --> 00:06:18.410\nthat I know when to flip from\nprimary to secondary, right?\n\n138\n00:06:18.410 --> 00:06:19.920\nHow do I know when to do that?\n\n139\n00:06:19.920 --> 00:06:22.040\nAnd the health check is what's\ngonna determine that, right?\n\n140\n00:06:22.040 --> 00:06:23.530\n>> So, it's like a condition\nthat needs to be met,\n\n141\n00:06:23.530 --> 00:06:26.030\nand then it allows that\ncondition to be there.\n\n142\n00:06:26.030 --> 00:06:26.980\n>> Right.\nRight, right.\n\n143\n00:06:26.980 --> 00:06:28.040\nThat is exactly it.\n\n144\n00:06:28.040 --> 00:06:31.490\nSo there I've got some health\nchecks created that I can use and\n\n145\n00:06:31.490 --> 00:06:32.650\nthese'll go healthy here pretty fast.\n\n146\n00:06:32.650 --> 00:06:34.290\nWell, in a moment.\n\n147\n00:06:34.290 --> 00:06:35.740\nIf I wait.\nUsually it takes about 30 seconds\n\n148\n00:06:35.740 --> 00:06:38.550\nbefore the first check happens,\nand then it's checking every so\n\n149\n00:06:38.550 --> 00:06:42.040\noften so if I sit here and refresh for\nlong enough they'll go healthy.\n\n150\n00:06:42.040 --> 00:06:46.750\nBut while we wait on that, we'll go and\ncreate our actual failover, entries.\n\n151\n00:06:46.750 --> 00:06:51.050\nSo I'm gonna jump back to my dashboard and\ngo into my zones,\n\n152\n00:06:51.050 --> 00:06:52.460\nand I'll go into itprotv.net here.\n\n153\n00:06:52.460 --> 00:06:55.820\nI'm gonna create a new record\nset called failover.itprotv.net.\n\n154\n00:06:55.820 --> 00:06:59.610\nNow just like the other guys, I'm gonna\nend up creating more than one of these\n\n155\n00:06:59.610 --> 00:07:03.340\nfailovers cause I have to designate who's\nthe primary and who's the secondary.\n\n156\n00:07:03.340 --> 00:07:07.060\nAnd so for failover,\nI might want to set my, let me do, shoot,\n\n157\n00:07:07.060 --> 00:07:11.100\nlet me do US East as my primary.\n\n158\n00:07:11.100 --> 00:07:12.680\nSo this is going to be my primary.\n\n159\n00:07:12.680 --> 00:07:17.070\nSo i'm going to punch in that\nIP address right here, and then,\n\n160\n00:07:17.070 --> 00:07:22.570\nnow that that's going be my\nprimary down here I can come and\n\n161\n00:07:22.570 --> 00:07:27.760\nand say I want to do the failover.\"\nFailover as the routing policy.\n\n162\n00:07:27.760 --> 00:07:31.450\nAnd then I can tell it whether\nthis is primary or secondary.\n\n163\n00:07:31.450 --> 00:07:33.020\nRight, I want this to be primary.\n\n164\n00:07:33.020 --> 00:07:36.750\nI want people to go to US East\nunless the servers are all down, and\n\n165\n00:07:36.750 --> 00:07:39.850\nthen we'll fail over to\nUS West as my secondary.\n\n166\n00:07:39.850 --> 00:07:42.630\nAnd so I would give it an ID,\nthe default here is failover-Primary,\n\n167\n00:07:42.630 --> 00:07:43.250\nI'll stick with that.\n\n168\n00:07:43.250 --> 00:07:45.680\nAnd then we can associate\nit with a health check.\n\n169\n00:07:45.680 --> 00:07:48.130\nIf you don't associate\nwith a health check,\n\n170\n00:07:48.130 --> 00:07:50.680\nyou might as well not do this\nbecause it will never fail over.\n\n171\n00:07:50.680 --> 00:07:54.030\nYou've got to associate it with\na Health Check for this to work.\n\n172\n00:07:54.030 --> 00:07:58.050\nSo I'll choose that, I'll come in here and\ntell it to monitor to US East.\n\n173\n00:07:58.050 --> 00:07:59.740\nSo now, I've got it created.\n\n174\n00:07:59.740 --> 00:08:05.520\nSo there's my primary, and\nthis was this failover.itprotv.net.\n\n175\n00:08:05.520 --> 00:08:09.550\nI need to create a new record set,\nwhich I'll call failover,\n\n176\n00:08:09.550 --> 00:08:12.600\nsame name, and\nI'll set this one to the IP for US west.\n\n177\n00:08:12.600 --> 00:08:16.050\nI could add in Ireland or\nwhatever else locations I might have,\n\n178\n00:08:16.050 --> 00:08:19.190\njust start to throw those in there.\n\n179\n00:08:19.190 --> 00:08:23.130\nAnd then after that, I need to map\nthat one to the failover policy.\n\n180\n00:08:23.130 --> 00:08:27.980\nAnd I will set this one\nto be the secondary.\n\n181\n00:08:27.980 --> 00:08:32.240\nAnd then it's giving me a warning that\nI'm not associated with the Health Check,\n\n182\n00:08:32.240 --> 00:08:34.860\nso I'll associate it, and\nI'll associate this one with us-west.\n\n183\n00:08:34.860 --> 00:08:37.870\nYou notice I have to have a health\ncheck on my secondary also.\n\n184\n00:08:37.870 --> 00:08:38.660\nWhy is that?\n\n185\n00:08:38.660 --> 00:08:42.990\nIf I'm already failed to secondary,\nwhere else am I going to go, right?\n\n186\n00:08:42.990 --> 00:08:46.150\nWell the reason is we\nneed to know to fail back\n\n187\n00:08:46.150 --> 00:08:48.450\nin the event the other solution comes.\n\n188\n00:08:48.450 --> 00:08:52.950\nComes out, the other side comes back up so\nwe've got to have it on both sides.\n\n189\n00:08:52.950 --> 00:08:54.730\nSo I'll go and create that.\n\n190\n00:08:54.730 --> 00:08:55.850\nOkay.\nSo there we go.\n\n191\n00:08:55.850 --> 00:08:58.760\nI've got two failover .ittprotv.nets and\nthey're gonna use those health checks.\n\n192\n00:08:58.760 --> 00:09:03.335\nI should get the primary address all\nthe time unless the primary fails.\n\n193\n00:09:03.335 --> 00:09:08.275\nAnd if the primary fails, then I should\ndive back over to the other one.\n\n194\n00:09:08.275 --> 00:09:10.615\nSo, in my scenario here, I should be good.\n\n195\n00:09:10.615 --> 00:09:12.735\nLet me go check my health checks again and\nsee where they're at.\n\n196\n00:09:12.735 --> 00:09:16.500\nAnd yeah, my two health checks are up and\nhealthy, so we're good there.\n\n197\n00:09:16.500 --> 00:09:18.170\nNow I did put my IP's in\nbackwards though didn't I,\n\n198\n00:09:18.170 --> 00:09:20.180\nso I probably need to straighten that out.\n\n199\n00:09:20.180 --> 00:09:22.330\nMy US west one is actually my US east IP.\n\n200\n00:09:22.330 --> 00:09:23.840\nSo let me actually fix this and\n\n201\n00:09:23.840 --> 00:09:27.340\nlet me add a little more so\nI don't have duplicate names.\n\n202\n00:09:27.340 --> 00:09:35.195\nAnd so I'm just gonna fix these names cuz\nI apparently don't know what I'm doing.\n\n203\n00:09:37.120 --> 00:09:41.110\nAnd then I'll fix my records so\nthese in the right health check.\n\n204\n00:09:41.110 --> 00:09:44.690\nSo now if I go back to my zones and\nI come in and I take those records.\n\n205\n00:09:44.690 --> 00:09:47.300\nI can flip those health checks around.\n\n206\n00:09:47.300 --> 00:09:50.555\nAnd that will solve that problem so I'm\ngonna make my primary, is gonna be tied to\n\n207\n00:09:50.555 --> 00:09:55.000\nus-east, which is exactly what I wanted,\nand then my, whoops.\n\n208\n00:09:55.000 --> 00:09:55.810\nA little too zoomed there.\n\n209\n00:09:56.950 --> 00:10:00.620\nAnd then my secondary,\nwhich tied to the other one.\n\n210\n00:10:00.620 --> 00:10:04.920\nSo, what's gonna happen now is as\nmy customers start to do lookups,\n\n211\n00:10:04.920 --> 00:10:08.240\nthey will always get US East.\n\n212\n00:10:08.240 --> 00:10:12.970\nThey're always gonna get US East\nunless US East fails, Okay.\n\n213\n00:10:12.970 --> 00:10:18.070\nSo if I were to drop down\nto my terminal here and\n\n214\n00:10:18.070 --> 00:10:23.760\ndo a look up for failover.itprotv.net.\n\n215\n00:10:23.760 --> 00:10:26.370\nThere, I get 54.165.179.206,\nwhich is my primary.\n\n216\n00:10:26.370 --> 00:10:28.760\nOkay, that's US East, right?\n\n217\n00:10:28.760 --> 00:10:30.580\nAnd I know that because if I take that IP.\n\n218\n00:10:30.580 --> 00:10:34.254\nOr actually, I could just\nbrowse to it in my web browser.\n\n219\n00:10:34.254 --> 00:10:40.987\nBut if I take that IP,\nand I browse to it here.\n\n220\n00:10:40.987 --> 00:10:42.310\nI can see that it's up,\nand I'm in comput one.\n\n221\n00:10:42.310 --> 00:10:44.650\nWhich is the US East data center,\nso I know that I'm there and\n\n222\n00:10:44.650 --> 00:10:47.130\nI'm getting to the right system, okay.\n\n223\n00:10:47.130 --> 00:10:48.390\nNow, what if that system fails?\n\n224\n00:10:48.390 --> 00:10:50.920\nWell, when I created a health check,\n\n225\n00:10:50.920 --> 00:10:54.450\nas part of the health check it gives\nyou the ability to set timers.\n\n226\n00:10:54.450 --> 00:10:56.590\nAnd the timers are that it's\nchecking every Every 30 seconds.\n\n227\n00:10:56.590 --> 00:11:00.400\nAnd if it sees enough failures, then\nit'll determine that server's down and\n\n228\n00:11:00.400 --> 00:11:02.040\ntake it out of the pool.\n\n229\n00:11:02.040 --> 00:11:02.960\nI didn't adjust those.\n\n230\n00:11:02.960 --> 00:11:06.640\nA smarter me would've set it to a smaller\ninterval so it'll fail over faster.\n\n231\n00:11:06.640 --> 00:11:09.270\nThe faster you want it to fail over,\nthe smaller you need those timers to be.\n\n232\n00:11:09.270 --> 00:11:11.970\nBut if I go and take this server and\nbring it down, right?\n\n233\n00:11:11.970 --> 00:11:15.420\nSo I'm gonna go into EC2,\nI'll go into my instances,\n\n234\n00:11:15.420 --> 00:11:18.190\nand I'll find that USE server right here.\n\n235\n00:11:18.190 --> 00:11:20.190\nAnd I'm just gonna shut it down.\n\n236\n00:11:20.190 --> 00:11:23.550\nAnd so when I shut that thing down\nit's gonna stop answering calls and\n\n237\n00:11:23.550 --> 00:11:25.090\nthe health check is gonna fail.\n\n238\n00:11:25.090 --> 00:11:25.850\nAll right?\n\n239\n00:11:25.850 --> 00:11:28.110\nNow the health check might\nnot fail right away.\n\n240\n00:11:28.110 --> 00:11:29.770\nIt might take a little while.\n\n241\n00:11:29.770 --> 00:11:32.480\nIf I go back into my route 53 and\nI go back into my health checks.\n\n242\n00:11:33.770 --> 00:11:36.530\nRight, I've got all\nthese bad health checks,\n\n243\n00:11:36.530 --> 00:11:39.140\nwhich I might as well just delete\nthem cuz they're not good.\n\n244\n00:11:39.140 --> 00:11:40.126\nSo I'll get rid of those.\n\n245\n00:11:40.126 --> 00:11:45.770\nBut of my two, see how it still\nshows as healthy for US East?\n\n246\n00:11:45.770 --> 00:11:49.980\nAnd that one I know is not\nhealthy if I were to take\n\n247\n00:11:49.980 --> 00:11:51.570\nthis link that it is checking.\n\n248\n00:11:53.260 --> 00:11:57.200\nOpen up a new tab over here,\nand try and browse to it,\n\n249\n00:11:58.760 --> 00:12:02.510\nI'm getting nothing, its sitting here,\nits waiting, its kind of stuck, right?\n\n250\n00:12:02.510 --> 00:12:05.330\nI know its down, but\nit doesn't know its down yet.\n\n251\n00:12:05.330 --> 00:12:10.410\nAnd it doesn't know it's down yet because\nif I look down here in its configuration,\n\n252\n00:12:10.410 --> 00:12:12.660\nrequest interval 30 seconds,\nfailure threshold three.\n\n253\n00:12:12.660 --> 00:12:15.360\nThat means it is checking\nevery 30 seconds, and\n\n254\n00:12:15.360 --> 00:12:17.960\nif it's these 3 failures,\nthen it determines we're down.\n\n255\n00:12:17.960 --> 00:12:19.450\nThat's a minute and a half.\n\n256\n00:12:19.450 --> 00:12:23.130\nThat means my website could be down for\na minute and\n\n257\n00:12:23.130 --> 00:12:25.780\na half before this took any action.\n\n258\n00:12:25.780 --> 00:12:27.480\nAnd that's not a great thing, right?\n\n259\n00:12:27.480 --> 00:12:30.190\nI might wanna set up a health\ncheck that's a little more\n\n260\n00:12:30.190 --> 00:12:32.510\naggressive at detecting\nthat failure faster.\n\n261\n00:12:32.510 --> 00:12:34.680\nAnd this one is not going to do it for me.\n\n262\n00:12:34.680 --> 00:12:37.060\nSo, I'm gonna edit that health check.\n\n263\n00:12:37.060 --> 00:12:39.820\nAnd when you edit the health check,\nyou can come in here, and\n\n264\n00:12:39.820 --> 00:12:45.600\nit's buried under advanced configuration\nwhere you can set the fail over threshold,\n\n265\n00:12:45.600 --> 00:12:46.490\nand that request interval.\n\n266\n00:12:46.490 --> 00:12:47.180\nNow, the request interval.\n\n267\n00:12:47.180 --> 00:12:48.800\nActually, looks like you can't edit that,\ncan you?\n\n268\n00:12:48.800 --> 00:12:51.910\nHm, could have swore or\nyou could edit that.\n\n269\n00:12:51.910 --> 00:12:54.260\nSo, anyhow, I'm gonna take this and\njust lower it down to one.\n\n270\n00:12:54.260 --> 00:12:56.270\nSo if it hits one failure\nit'll pick it up, or\n\n271\n00:12:56.270 --> 00:12:59.630\nif I wanna set the other one,\nI could actually go and create a new one.\n\n272\n00:12:59.630 --> 00:13:00.510\nMaybe we'll do that so\n\n273\n00:13:00.510 --> 00:13:03.420\nwe can get what I actually want,\nnot what I'm being forced to use.\n\n274\n00:13:03.420 --> 00:13:05.810\n>> At least with that you've still\ndropped it down by a third of the time.\n\n275\n00:13:05.810 --> 00:13:08.650\nIt was gonna be a minute and a half,\nand now it's, at the most, 30 seconds.\n\n276\n00:13:08.650 --> 00:13:09.380\n>> That is true, yeah.\n\n277\n00:13:09.380 --> 00:13:13.100\nSo when we come through and redefine\nit here, if I redefine my health check.\n\n278\n00:13:13.100 --> 00:13:15.370\nAnd I'll just do the primary.\n\n279\n00:13:15.370 --> 00:13:18.460\nSo I'm gonna come in here and redefine it.\n\n280\n00:13:18.460 --> 00:13:19.990\nSo this is what I'm looking for.\n\n281\n00:13:19.990 --> 00:13:20.800\nThis page that I wanna get.\n\n282\n00:13:20.800 --> 00:13:25.920\nAnd under advanced, here I can come in,\nand I can set that threshold.\n\n283\n00:13:25.920 --> 00:13:28.590\nAnd see how I've got a standard.\n\n284\n00:13:28.590 --> 00:13:31.970\nI can flip it over to fast\nwhich is every 10 seconds, and\n\n285\n00:13:31.970 --> 00:13:33.940\nif I lower it down to one failure.\n\n286\n00:13:33.940 --> 00:13:36.980\nIf I get a single failure it\nwill flip over to secondary.\n\n287\n00:13:36.980 --> 00:13:40.780\nSo now my website will never be down for\nmore than 10 seconds.\n\n288\n00:13:40.780 --> 00:13:44.890\nThat might not be so good though, because\nthat one failure maybe just something\n\n289\n00:13:44.890 --> 00:13:46.620\nhappened there and\nthe servers actually up.\n\n290\n00:13:46.620 --> 00:13:49.190\nSo I might wanna set it to two,\nnow it's 20 seconds.\n\n291\n00:13:49.190 --> 00:13:53.840\nIf I want something more aggressive\nI'm gonna have to use cloud watch.\n\n292\n00:13:53.840 --> 00:13:56.740\nInstead of monitoring an endpoint you can\nchoose to monitor other health check,\n\n293\n00:13:56.740 --> 00:13:59.070\nand you can use cloud watch to\nget really aggressive, and so\n\n294\n00:13:59.070 --> 00:14:00.860\nnow I can handle that\nfail over even faster.\n\n295\n00:14:00.860 --> 00:14:03.720\nBut in my case I'll just stick with this,\nI'll do the best that I can which is 10\n\n296\n00:14:03.720 --> 00:14:06.080\nseconds, 1 failure Threshold\nmore on with that.\n\n297\n00:14:06.080 --> 00:14:07.690\nAll right?\n\n298\n00:14:07.690 --> 00:14:09.760\nSo, I'll go ahead and move forward on it.\n\n299\n00:14:09.760 --> 00:14:14.110\nAnd I'll have a nice new health check\nthat is gonna be more aggressive.\n\n300\n00:14:14.110 --> 00:14:17.500\nAnd I guess while I waited the other\none did fail, so that's long enough,\n\n301\n00:14:17.500 --> 00:14:19.300\nso we'll go ahead and run with that then.\n\n302\n00:14:19.300 --> 00:14:21.970\nSo it failed, and\nnow that the health check has failed,\n\n303\n00:14:21.970 --> 00:14:24.780\nDNS should start handing out\nthe secondary instead of the primary.\n\n304\n00:14:24.780 --> 00:14:28.370\nAnd so if I jump back to my terminal,\nI can where I got the primary before.\n\n305\n00:14:28.370 --> 00:14:30.860\nHere's where things get a little tricky.\n\n306\n00:14:30.860 --> 00:14:36.870\nif my system has cached the old IP,\nif my time to live was too large,\n\n307\n00:14:36.870 --> 00:14:40.740\nthen when I go to look it up again\nI'll just get the cache value and\n\n308\n00:14:40.740 --> 00:14:42.710\nI won't take advantage of this fail over.\n\n309\n00:14:42.710 --> 00:14:44.570\nBut if my time to live was nice and\n\n310\n00:14:44.570 --> 00:14:47.690\nshort when I go to do the lookup I\nshould get the new address and I did.\n\n311\n00:14:47.690 --> 00:14:48.630\nWell I used NS lookup.\n\n312\n00:14:48.630 --> 00:14:51.610\nAnd NS lookup always\ndoes a new query right.\n\n313\n00:14:51.610 --> 00:14:56.650\nright, it doesn't use the cache,\nbut your web browser might, and so\n\n314\n00:14:56.650 --> 00:15:02.360\nyou probably will want to couple this\nwith a more aggressive time to live.\n\n315\n00:15:02.360 --> 00:15:06.150\nSo, when I go back into my zones and\ninto my records, I might go in here and\n\n316\n00:15:06.150 --> 00:15:10.320\nfind fail over at ITVPro.net and\nset this time to live lower, and in fact,\n\n317\n00:15:10.320 --> 00:15:15.250\nif I had been paying attention,\nit warns you about it somewhere in here,\n\n318\n00:15:15.250 --> 00:15:18.850\nwhere it'll say like, is it here?\n\n319\n00:15:18.850 --> 00:15:21.540\nSomewhere in here it actually does\ngive you a little message that says,\n\n320\n00:15:21.540 --> 00:15:24.450\nyou probably wanna set this to\nsomething below 60 seconds.\n\n321\n00:15:24.450 --> 00:15:25.470\nTo have good fail over right?\n\n322\n00:15:25.470 --> 00:15:27.940\nIt's in here somewhere\nit warns you about that.\n\n323\n00:15:27.940 --> 00:15:31.730\nBut I'll tell you guys, even 60 seconds\nisn't long enough you really want\n\n324\n00:15:31.730 --> 00:15:33.440\nto base it on your\nfailure threshold right?\n\n325\n00:15:33.440 --> 00:15:36.410\nIf I'm monitoring every 30 seconds,\nand three failures counts for\n\n326\n00:15:36.410 --> 00:15:38.060\nfail over that's a minute and a half,\n\n327\n00:15:38.060 --> 00:15:43.120\nI want to make sure my time to live is\nlower than a minute and a half right.\n\n328\n00:15:43.120 --> 00:15:46.570\nThat way, when a failure happens,\npeople will find out right away, right?\n\n329\n00:15:46.570 --> 00:15:47.930\nMine is super aggressive.\n\n330\n00:15:47.930 --> 00:15:48.700\nEvery ten seconds.\n\n331\n00:15:48.700 --> 00:15:50.420\nSo I want to set this really low if I can.\n\n332\n00:15:50.420 --> 00:15:53.790\nI'm gonna set it down to ten\nseconds if it'll let me.\n\n333\n00:15:53.790 --> 00:15:55.190\nAnd we'll save that.\n\n334\n00:15:55.190 --> 00:15:58.190\nAnd now Now I've got a time to\nlive that's super low, right.\n\n335\n00:15:58.190 --> 00:16:02.433\nAnd so now when somebody caches this\nrecord, they won't cache it for\n\n336\n00:16:02.433 --> 00:16:03.905\nmore than ten seconds.\n\n337\n00:16:03.905 --> 00:16:06.387\nAnd if I have a fail over\nthe next time they do a look up,\n\n338\n00:16:06.387 --> 00:16:07.828\nthey'll get the new address.\n\n339\n00:16:07.828 --> 00:16:10.990\nMy website would never be down for\nmore than ten seconds.\n\n340\n00:16:10.990 --> 00:16:13.120\nSo I get some good coverage there.\n\n341\n00:16:13.120 --> 00:16:13.950\n>> Awesome stuff man.\n\n342\n00:16:13.950 --> 00:16:17.620\nObviously DNS is A little more than\njust hey what's that IP address of this\n\n343\n00:16:17.620 --> 00:16:18.220\nhost name?\n\n344\n00:16:18.220 --> 00:16:21.810\nEspecially inside AWS services here and\nroute 53.\n\n345\n00:16:21.810 --> 00:16:26.691\nYou got to kind of know the internals of\nit so that you can most effectively and\n\n346\n00:16:26.691 --> 00:16:28.840\nefficiently Work your routing.\n\n347\n00:16:28.840 --> 00:16:33.676\n>> And while you were saying that,\nI just remembered something that I really\n\n348\n00:16:33.676 --> 00:16:38.870\nshould have probably covered back in\nthe first part of this little series.\n\n349\n00:16:38.870 --> 00:16:42.650\nAll this time, I've been creating these\nrecords and pointing to the IP of servers.\n\n350\n00:16:42.650 --> 00:16:47.199\nOf instances, of actual individual\nInstances, and that's okay for\n\n351\n00:16:47.199 --> 00:16:48.440\nsmall companies.\n\n352\n00:16:48.440 --> 00:16:51.224\nBut what if you have something\nlike auto scaling set up and\n\n353\n00:16:51.224 --> 00:16:53.780\nyou've got 50 web servers or\n500 web servers?\n\n354\n00:16:53.780 --> 00:16:55.980\nThis system kind of\nbreaks down a bit there.\n\n355\n00:16:55.980 --> 00:16:58.340\nEspecially if you have dynamic IPs\nthat are constantly changing and\n\n356\n00:16:58.340 --> 00:16:59.360\nthings really become Become a problem.\n\n357\n00:16:59.360 --> 00:17:00.520\nRight?\n\n358\n00:17:00.520 --> 00:17:05.263\nSo instead of mapping to IPs like\nI've done in every example so far,\n\n359\n00:17:05.263 --> 00:17:09.440\nwe might choose to map to\nan elastic load balancer instead.\n\n360\n00:17:09.440 --> 00:17:13.824\nIf you have an elastic load balancer,\nit can be the front facing IP For\n\n361\n00:17:13.824 --> 00:17:17.690\none server or a thousand servers,\nall masked behind one IP.\n\n362\n00:17:17.690 --> 00:17:22.837\nSo I might set up a load balancer in\nIreland, a load balancer in US east, and\n\n363\n00:17:22.837 --> 00:17:28.260\na load balancer in US west, and then those\nare the three DNS records that I use.\n\n364\n00:17:28.260 --> 00:17:31.577\nAnd behind those load balancers, I might\nhave one server, 50, or 500 servers, but\n\n365\n00:17:31.577 --> 00:17:34.300\nnow I get easy, good load balancing\nBalancing and configuration there.\n\n366\n00:17:34.300 --> 00:17:35.890\nSo the examples that I've\ndone are all accurate,\n\n367\n00:17:35.890 --> 00:17:39.200\nthey all work great if you just have\none server in each of those regions.\n\n368\n00:17:39.200 --> 00:17:42.430\nBut if you wanna have more,\na load balancer really becomes important.\n\n369\n00:17:42.430 --> 00:17:42.966\nAll right?\nSo\n\n370\n00:17:42.966 --> 00:17:46.347\nI actually do have some load balancers\nlaying around that we can use,\n\n371\n00:17:46.347 --> 00:17:47.411\nwhich is fortunate.\n\n372\n00:17:47.411 --> 00:17:48.408\n>> [LAUGH]\n>> Load balancers,\n\n373\n00:17:48.408 --> 00:17:50.797\nwhen you spin them up at first it\ntakes a little while for them For\n\n374\n00:17:50.797 --> 00:17:51.530\nthem to go active.\n\n375\n00:17:51.530 --> 00:17:56.200\nSo like if I jump here into my instances,\nI'm in the north Virginia or\n\n376\n00:17:56.200 --> 00:17:57.980\nUS East region right now.\n\n377\n00:17:57.980 --> 00:17:59.923\nAnd if I go down to my load balancers,\n\n378\n00:17:59.923 --> 00:18:04.150\nI've got a load balancer that I created\nearlier called Called IT Pro TV Us East.\n\n379\n00:18:04.150 --> 00:18:09.150\nI've also got one in US west,\nand I've got one in Ireland.\n\n380\n00:18:09.150 --> 00:18:13.130\nSo instead of mapping to the web servers\nthemselves, I can map to the load\n\n381\n00:18:13.130 --> 00:18:17.631\nbalancer, and if I look at the instances,\nI'll see where those web servers are in\n\n382\n00:18:17.631 --> 00:18:21.830\nthe load balancer anyway, so we're\nbasically gonna get to the same place.\n\n383\n00:18:21.830 --> 00:18:24.208\nSo from here, what I can do is,\n\n384\n00:18:24.208 --> 00:18:28.417\nback in route 53 When I go to\nmap one of these records so\n\n385\n00:18:28.417 --> 00:18:34.750\nwe'll go way back to the first example I\ndid where I had www.itprotv.net right?\n\n386\n00:18:34.750 --> 00:18:40.700\nThis guy right here, and I came in and\nI mapped it to an IP address and\n\n387\n00:18:40.700 --> 00:18:45.398\nI pointed it right to that\nserver that was in US east.\n\n388\n00:18:45.398 --> 00:18:47.675\nInstead of pointing\nPointing it to US-East.\n\n389\n00:18:47.675 --> 00:18:52.939\nWhat I could done is I could've\nsaid that this is an Alias and\n\n390\n00:18:52.939 --> 00:18:57.060\nit's an Alias for\nsome other Amazon service.\n\n391\n00:18:57.060 --> 00:18:59.020\nThis is different than a C-name.\n\n392\n00:18:59.020 --> 00:19:01.120\nA C-name points to another DNS name right.\n\n393\n00:19:01.120 --> 00:19:02.540\nAnother A record somewhere else, right?.\n\n394\n00:19:02.540 --> 00:19:07.360\nBut an alias points to an Amazon service.\n\n395\n00:19:07.360 --> 00:19:10.010\nAnd when you click on it see what I get?\n\n396\n00:19:10.010 --> 00:19:11.530\nS3 website endpoints.\nElastic load balancers.\n\n397\n00:19:11.530 --> 00:19:15.800\nCloud front distributions, and\nother record sets in this zone.\n\n398\n00:19:15.800 --> 00:19:17.346\nAnd I see simple, failover, geolocation,\n\n399\n00:19:17.346 --> 00:19:19.270\nall of those other record\nsets that we've been making.\n\n400\n00:19:19.270 --> 00:19:22.760\nBut the load balancers\nare what I care about.\n\n401\n00:19:22.760 --> 00:19:25.220\nAnd if you don't see your load\nbalancers right away, just wait.\n\n402\n00:19:25.220 --> 00:19:28.425\nSometimes it can take 15, 20 minutes after\nyou create a load balancer before it'll\n\n403\n00:19:28.425 --> 00:19:29.390\nshow up here in this list.\n\n404\n00:19:29.390 --> 00:19:32.384\nAnd the reason is that Route 53\ncaches these names differently and\n\n405\n00:19:32.384 --> 00:19:33.760\nthey just pull Every so often.\n\n406\n00:19:33.760 --> 00:19:34.410\nSo you might have to wait.\n\n407\n00:19:34.410 --> 00:19:35.211\nBut mine show up.\n\n408\n00:19:35.211 --> 00:19:40.412\nAnd so for www.itprotv.net I might want\nto point that to this load balancer.\n\n409\n00:19:40.412 --> 00:19:41.560\nAnd now it's gonna map to it.\n\n410\n00:19:41.560 --> 00:19:44.778\nAnd if I have 1 server behind it or\n500 servers behind it,\n\n411\n00:19:44.778 --> 00:19:46.050\nmy end users get one IP.\n\n412\n00:19:46.050 --> 00:19:50.190\nAnd then the load balancer sends\nthem the individual nodes.\n\n413\n00:19:50.190 --> 00:19:51.240\nRight?\n\n414\n00:19:51.240 --> 00:19:53.830\nSo that's using an alias here for\njust a standard, simple record.\n\n415\n00:19:53.830 --> 00:19:58.240\nBut let's say I go back to my fail over.\n\n416\n00:19:58.240 --> 00:20:02.264\nAnd here's my fail over record that\nI created that pointed to my US East.\n\n417\n00:20:02.264 --> 00:20:10.623\nI could change that to an Alias that\npointed to US East And I'll save that.\n\n418\n00:20:10.623 --> 00:20:13.640\nAnd then I'll take my other fail\nover that pointed the US west.\n\n419\n00:20:13.640 --> 00:20:18.360\nAnd I'm gonna change it to an alias and\npoint that to my US west load balancer.\n\n420\n00:20:18.360 --> 00:20:19.810\nAnd I'll save that.\n\n421\n00:20:19.810 --> 00:20:22.876\nAnd now ive got a primary in\nUS east where I might and\n\n422\n00:20:22.876 --> 00:20:26.290\nhave an auto scaling pool\nthat's got 500 servers.\n\n423\n00:20:26.290 --> 00:20:28.959\nAnd then I've got my secondary\npointed to US west where I might\n\n424\n00:20:28.959 --> 00:20:31.180\nhave an auto scaling pool\nthat only has one server.\n\n425\n00:20:31.180 --> 00:20:35.674\nAnd as soon as I fail over to\nit auto server kicks in and\n\n426\n00:20:35.674 --> 00:20:38.860\nit spawns out 499 more servers.\n\n427\n00:20:38.860 --> 00:20:40.810\nAnd now I've got 500 servers over\nthere just like I had in US east.\n\n428\n00:20:40.810 --> 00:20:41.520\nRight.\n\n429\n00:20:41.520 --> 00:20:43.739\nSo, I don't have to spend a bunch\nof money on my secondary and\n\n430\n00:20:43.739 --> 00:20:45.710\nhave a bunch of servers\nsitting there doing nothing.\n\n431\n00:20:45.710 --> 00:20:47.930\nI can just have an auto\nscaling pool waiting.\n\n432\n00:20:47.930 --> 00:20:51.786\nAnd as soon as we fail over,\nit ramps up those servers real fast, and\n\n433\n00:20:51.786 --> 00:20:52.810\ngets up to speed.\n\n434\n00:20:52.810 --> 00:20:54.450\nAnd now we're in business.\n\n435\n00:20:54.450 --> 00:20:56.430\nThat's kind of a good way\nto take advantage of this.\n\n436\n00:20:56.430 --> 00:20:59.268\nWe we're only paying for\nthe service that we use and\n\n437\n00:20:59.268 --> 00:21:02.250\nknowing that all our production\nstuff is in one area.\n\n438\n00:21:02.250 --> 00:21:05.340\nWhich is a good thing and\na bad thing at the same time.\n\n439\n00:21:05.340 --> 00:21:06.020\nSo, but the knowing is there.\n\n440\n00:21:06.020 --> 00:21:10.260\nSo we get a lot of power and\nflexibility there to be able to do it.\n\n441\n00:21:10.260 --> 00:21:15.189\nAll right, now I'm getting a warning\nabout my, my target zone is messed up,\n\n442\n00:21:15.189 --> 00:21:18.220\nso, yeah we can still save\nthe record set there.\n\n443\n00:21:18.220 --> 00:21:19.160\nIt'll be all right.\n\n444\n00:21:19.160 --> 00:21:23.123\nSo My target zone for my secondary,\nit's set to US West, and\n\n445\n00:21:23.123 --> 00:21:26.250\nthat was the secondary\nentry that we made here.\n\n446\n00:21:26.250 --> 00:21:29.477\nAnd it's actually in a different zone,\nand so it's a little upset about that,\n\n447\n00:21:29.477 --> 00:21:31.420\nbecause my load balancer's\nin the wrong zone.\n\n448\n00:21:31.420 --> 00:21:34.390\nBut that's just a misconfiguration\nI did on my end.\n\n449\n00:21:34.390 --> 00:21:38.870\nBut basically once this is in place,\nyou really Really do get a lot of power.\n\n450\n00:21:38.870 --> 00:21:40.975\nAnd if you look at the records themselves,\n\n451\n00:21:40.975 --> 00:21:45.020\nsee how failover.itprotv.net is pointing\nto well, these different entries.\n\n452\n00:21:45.020 --> 00:21:48.191\nNot IPs any more, but\nthe names of those load balancers and\n\n453\n00:21:48.191 --> 00:21:51.270\nthat's really gonna get you\nsome of the best results.\n\n454\n00:21:51.270 --> 00:21:55.240\nSo I'll often times deploy load balancers\neven if there's one server behind it and\n\n455\n00:21:55.240 --> 00:21:57.633\nit's just because I know\nI can use these aliases.\n\n456\n00:21:57.633 --> 00:21:59.420\nAnd the server's IP could change and\n\n457\n00:21:59.420 --> 00:22:03.401\nit really wouldn't matter because\neverybody's pointing To the load balancer.\n\n458\n00:22:03.401 --> 00:22:03.901\n>> All right.\n\n459\n00:22:03.901 --> 00:22:04.818\nVery, very cool stuff.\n\n460\n00:22:04.818 --> 00:22:08.057\nObviously, there is some\nlevels of complexity to it.\n\n461\n00:22:08.057 --> 00:22:09.843\nIt takes a little bit of\ntrying to figure out,\n\n462\n00:22:09.843 --> 00:22:12.480\nmake sure you understand the logic\nbehind why you're doing what.\n\n463\n00:22:12.480 --> 00:22:15.190\nHow you're coupling the services together.\n\n464\n00:22:15.190 --> 00:22:16.870\nLoad balancing.\nThing is obviously a very,\n\n465\n00:22:16.870 --> 00:22:17.900\nvery nice thing.\n\n466\n00:22:17.900 --> 00:22:22.633\nBut, all at the end of the day really what\nit sounds like we're doing Don is just\n\n467\n00:22:22.633 --> 00:22:27.250\ncreating hot spares of servers to failover\nto in case our primaries go down.\n\n468\n00:22:27.250 --> 00:22:28.530\n>> That's basically it.\n\n469\n00:22:28.530 --> 00:22:30.952\nAnd if it's coupled with an An auto\nscaling pool that are not even hot spares.\n\n470\n00:22:30.952 --> 00:22:33.638\nThey're like invisible spares\nthat are just ready to go and\n\n471\n00:22:33.638 --> 00:22:35.526\nmagically appear the moment you need it.\n\n472\n00:22:35.526 --> 00:22:37.520\nIt's just the cool part\nabout using the Cloud.\n\n473\n00:22:37.520 --> 00:22:38.530\n>> Your fairy godmother that is AWS,\nthank you.\n\n474\n00:22:38.530 --> 00:22:39.150\n[LAUGH] Very, very cool, Don.\n\n475\n00:22:39.150 --> 00:22:43.300\nIs there anything else we need to\ntalk about before we close the show?\n\n476\n00:22:43.300 --> 00:22:44.090\n>> That is all I've got, Daniel.\n\n477\n00:22:44.090 --> 00:22:46.900\nI'm out of Route 53 stuff,\nat least what's on the exam.\n\n478\n00:22:46.900 --> 00:22:50.092\nObviously, there's a lot more that\nyou can do with Route 53, but\n\n479\n00:22:50.092 --> 00:22:53.676\non the exam they really want you to be\nfamiliar with how you can use it to create\n\n480\n00:22:53.676 --> 00:22:56.308\nredundant environments under\ndifferent scenarios and\n\n481\n00:22:56.308 --> 00:22:59.350\nwe've seen those scenarios\nthrough out these three episodes.\n\n482\n00:22:59.350 --> 00:23:02.688\n>> Awesome well thank you so\nmuch for walking us through this,\n\n483\n00:23:02.688 --> 00:23:06.850\nshowing us how these things work together,\nthank you guys for watching.\n\n484\n00:23:06.850 --> 00:23:09.160\nWe're going to go ahead and\nclose the show down.\n\n485\n00:23:09.160 --> 00:23:13.470\nSigning off for IT pro T.V I've\nbeen your host Daniel Lowry.\n\n486\n00:23:13.470 --> 00:23:14.470\n>> And I'm Don Paset.\n\n487\n00:23:14.470 --> 00:23:16.050\n>> We'll see you next time.\n\n488\n00:23:16.050 --> 00:23:17.680\n[MUSIC]\n\n",
          "vimeoId": "146523486"
        }
      ],
      "title": "Route 53"
    },
    {
      "episodes": [
        {
          "description": "In this episode, Daniel and Don take a look at AWS Relational Database Service (RDS) redundancy features. They begin by covering the basics of RDS and explaining the different databases available. Then they show you the ways to enable redundancy for your databases. This includes using the setup wizard during the database creation, as well as methods for making already running databases redundant.",
          "length": "1807",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/amazon-acsa/amazon-acsa-7-1-rds_redundancy-112015-high.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/amazon-acsa/amazon-acsa-7-1-rds_redundancy-112015-high-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/amazon-acsa/amazon-acsa-7-1-rds_redundancy-112015-high-sm.jpg",
          "title": "RDS Redundancy",
          "transcript": "WEBVTT\n\n1\n00:00:00.208 --> 00:00:10.208\n[MUSIC]\n\n2\n00:00:11.702 --> 00:00:16.040\nAll right, greetings everyone and welcome\nto another great episode of ITProTV.\n\n3\n00:00:16.040 --> 00:00:20.150\nI'm your host, Daniel Lowrie and in this\nepisode we are continuing on with our\n\n4\n00:00:20.150 --> 00:00:23.600\nAWS Certified SysOps Admin,\nwow that's a mouthful to say.\n\n5\n00:00:23.600 --> 00:00:25.069\nAvailable from Amazon and\n\n6\n00:00:25.069 --> 00:00:29.550\nwho better to help us go through this\njungle than none other than Mr. Don Pezet.\n\n7\n00:00:29.550 --> 00:00:31.520\nHere with us today,\nDon welcome to the show.\n\n8\n00:00:31.520 --> 00:00:32.360\nHow are you?\n\n9\n00:00:32.360 --> 00:00:35.640\n>> I am doing great Daniel, glad to be\nback on and jumping into a new topic.\n\n10\n00:00:35.640 --> 00:00:38.840\nIn this episode, we are going\nto start taking a look at RDS,\n\n11\n00:00:38.840 --> 00:00:42.390\nthe relational database service\nfrom Amazon web services.\n\n12\n00:00:42.390 --> 00:00:47.220\nAnd what we're really gonna focus on\nhere is keeping RDS up and running and\n\n13\n00:00:47.220 --> 00:00:47.830\nbeing happy.\n\n14\n00:00:47.830 --> 00:00:49.820\nSo we're gonna look at some\nredundancy techniques and\n\n15\n00:00:49.820 --> 00:00:53.330\nsome other things we can do to\nmake our servers nice and stable.\n\n16\n00:00:53.330 --> 00:00:58.250\n>> Yes, well unfortunately the databases,\nI'm a huge hater on databases.\n\n17\n00:00:58.250 --> 00:01:01.180\nThey're a bear to me and\nI hate working with them, but\n\n18\n00:01:01.180 --> 00:01:05.150\nit is a necessity when it comes to\nout jobs as Systems Administrators.\n\n19\n00:01:05.150 --> 00:01:07.460\nYou're gonna mess with\nthe database from time to time.\n\n20\n00:01:07.460 --> 00:01:10.110\nSo Don, I think a good place to\nstart would probably be a recap.\n\n21\n00:01:10.110 --> 00:01:14.555\nA quick, how do we use databases,\nespecially inside of AWS?\n\n22\n00:01:14.555 --> 00:01:17.440\n>> So, by this point, you guys\nshould already be familiar with RDS.\n\n23\n00:01:17.440 --> 00:01:19.920\nBut if you haven't worked with it in\na while, let's just do a quick recap.\n\n24\n00:01:19.920 --> 00:01:23.370\nAnd basically,\nRDS is a relational database service and\n\n25\n00:01:23.370 --> 00:01:25.260\nit's really designed to help developers.\n\n26\n00:01:25.260 --> 00:01:27.820\nIt can help anybody, but\nit's really designed for developers.\n\n27\n00:01:27.820 --> 00:01:31.910\nIn the past, if you were a dev, and\nyou needed a database for your software.\n\n28\n00:01:31.910 --> 00:01:34.600\nWell, you could spin up a Linux\ninstance if you wanted and\n\n29\n00:01:34.600 --> 00:01:36.970\nthen you could install MySQL on it.\n\n30\n00:01:36.970 --> 00:01:40.590\nBut the problem is you had to know how to\ninstall MySQL, you had to keep it updated,\n\n31\n00:01:40.590 --> 00:01:43.180\nyou had to tune it, you had to\ndo a lot of work under the hood.\n\n32\n00:01:43.180 --> 00:01:46.620\nAnd that's something that system admins\nnormally did, but if you're a developer\n\n33\n00:01:46.620 --> 00:01:49.810\nthat's not something you normally do,\nand so understanding the performance\n\n34\n00:01:49.810 --> 00:01:54.020\ncharacteristics that's something you\nworry about on a day to day basis.\n\n35\n00:01:54.020 --> 00:01:58.180\nSo at RDS, Amazon says,\nwe're gonna manage all of that for you, so\n\n36\n00:01:58.180 --> 00:01:59.890\nyou don't have to worry about it.\n\n37\n00:01:59.890 --> 00:02:02.080\nThey'll take care of\nthe underlying operating system.\n\n38\n00:02:02.080 --> 00:02:05.620\nThey'll take care of even\nthe database software itself.\n\n39\n00:02:05.620 --> 00:02:08.790\nYou just go in there and\nconnect to the database and get to work.\n\n40\n00:02:08.790 --> 00:02:09.310\nRight?\n\n41\n00:02:09.310 --> 00:02:12.080\nSo know a developer doesn't have to worry\nabout that annoying infrastructure now.\n\n42\n00:02:12.080 --> 00:02:14.840\nEven for a system admin,\nthat's a good thing because.\n\n43\n00:02:14.840 --> 00:02:18.545\nWell I'm like no on how to manage\nthat server and how to back it up and\n\n44\n00:02:18.545 --> 00:02:20.490\nall that, I just don't wanna do it,\nit's not being lazy,\n\n45\n00:02:20.490 --> 00:02:22.830\nit's just you might have to\nmany systems to manage that.\n\n46\n00:02:22.830 --> 00:02:25.140\nSo RDS takes care of it for us.\n\n47\n00:02:25.140 --> 00:02:28.570\nThis is one of the times that Amazon\nmoves beyond being an infrastructure as\n\n48\n00:02:28.570 --> 00:02:33.620\na service and starts to become sort of a\nhybrid, between platform as a service and\n\n49\n00:02:33.620 --> 00:02:35.120\nsoftware as a service.\n\n50\n00:02:35.120 --> 00:02:38.510\nAt a minimum, Amazon is completely\nmanaging the hardware and\n\n51\n00:02:38.510 --> 00:02:41.250\nthe operating system for RDS.\n\n52\n00:02:41.250 --> 00:02:44.790\nSo, you don't even necessarily know what\nthe operating system is under the hood.\n\n53\n00:02:44.790 --> 00:02:46.890\nThat's platform as a service, right?\n\n54\n00:02:46.890 --> 00:02:50.550\nBut in many cases,\nthey're also managing the back-ups, and\n\n55\n00:02:50.550 --> 00:02:53.420\ntuning your server, and\nmanaging redundancy.\n\n56\n00:02:53.420 --> 00:02:54.880\nThat becomes software as a service, right.\n\n57\n00:02:54.880 --> 00:02:56.880\nThey're going all the way to\nthe database software, so\n\n58\n00:02:56.880 --> 00:02:58.200\nyou don't even worry about that.\n\n59\n00:02:58.200 --> 00:03:00.930\nYou just create your databases and\ngo, right.\n\n60\n00:03:00.930 --> 00:03:03.870\nSo, let me just do a quick kind of\na example of whipping up one of\n\n61\n00:03:03.870 --> 00:03:04.750\nthese things.\n\n62\n00:03:04.750 --> 00:03:09.109\nIf I jump into my AWS console,\nI can jump right down here to RDS,\n\n63\n00:03:10.270 --> 00:03:13.890\nand inside of RDS,\nI can whip up a new instance.\n\n64\n00:03:13.890 --> 00:03:17.090\nYou'll see where it is promoting\nlike doing an Aurora DB instance.\n\n65\n00:03:17.090 --> 00:03:21.290\nThere's actually several different\ninstance types that we can spin up, and\n\n66\n00:03:21.290 --> 00:03:22.680\nif I go here to launch an instance.\n\n67\n00:03:22.680 --> 00:03:24.680\nI can pick between the different options.\n\n68\n00:03:24.680 --> 00:03:28.660\nNow the options,\nnotice how MySQL is the default.\n\n69\n00:03:28.660 --> 00:03:30.130\nThat's cause its the most common.\n\n70\n00:03:30.130 --> 00:03:34.310\nMySQL's an open source database solution,\nit's a relational database.\n\n71\n00:03:34.310 --> 00:03:35.600\nIt's used by tons and\n\n72\n00:03:35.600 --> 00:03:39.000\ntons of organizations\nincluding us here at ITProTV.\n\n73\n00:03:39.000 --> 00:03:41.680\nA lot of people use MySQL,\nthat's the default.\n\n74\n00:03:41.680 --> 00:03:46.190\nAnd on the exam,\nit's primarily gonna focus on MySQL also.\n\n75\n00:03:46.190 --> 00:03:48.170\nBut keep in mind, there are other options.\n\n76\n00:03:48.170 --> 00:03:51.450\nThere's PostgreSQL, which is\nstarting to gain popularity again.\n\n77\n00:03:51.450 --> 00:03:52.480\nIt kind of ebbed for a while.\n\n78\n00:03:52.480 --> 00:03:54.690\nBut it's gaining popularity again,\ncuz it's really stable.\n\n79\n00:03:54.690 --> 00:03:59.820\nPart of what's driving that, is that\nOracle took over MySQL and once they\n\n80\n00:03:59.820 --> 00:04:03.340\ndid that they started kind of interfering\nwith the Open Source development of it.\n\n81\n00:04:03.340 --> 00:04:05.950\nAnd so\nsome people moved over to PostgreSQL.\n\n82\n00:04:05.950 --> 00:04:08.060\nOther people moved to\nwhat's called MariaDB.\n\n83\n00:04:08.060 --> 00:04:11.250\nMariaDB is a fork of MySQL.\n\n84\n00:04:11.250 --> 00:04:13.500\nAnd for\nthe most part they're identical these two.\n\n85\n00:04:13.500 --> 00:04:16.740\nIf you're doing something in MySQL,\nit works under MariaDB also.\n\n86\n00:04:16.740 --> 00:04:18.655\nBut Oracle's not in charge of that one.\n\n87\n00:04:18.655 --> 00:04:21.067\nAnd the open source community can\nmaintain it a little bit better,\n\n88\n00:04:21.067 --> 00:04:23.005\nat least in their opinion they can.\n\n89\n00:04:23.005 --> 00:04:26.305\nYou got the full blown version\nof Oracle down here and\n\n90\n00:04:26.305 --> 00:04:28.195\nthe full blown version\nof Microsoft SQL Server.\n\n91\n00:04:28.195 --> 00:04:32.795\nNow keep in mind that these two incur a\nlicensing fee, they're not open source and\n\n92\n00:04:32.795 --> 00:04:34.795\nso, they are more expensive\nif you choose them, but\n\n93\n00:04:34.795 --> 00:04:38.085\nAmazon will host them just the same and\nthey'll take care of the licensing but\n\n94\n00:04:38.085 --> 00:04:40.625\nthey will just charge you a higher\nrate for using those instances.\n\n95\n00:04:41.640 --> 00:04:43.860\nAnd then lastly,\nwe've got the new Amazon Aurora.\n\n96\n00:04:43.860 --> 00:04:46.670\nNow, Aurora is not really\nfeatured on this exam.\n\n97\n00:04:46.670 --> 00:04:49.130\nOr at least I haven't heard of\nanybody getting a question on it.\n\n98\n00:04:49.130 --> 00:04:51.415\nBut it will be added soon,\nso I wanna go ahead and\n\n99\n00:04:51.415 --> 00:04:55.070\nkind of mention it here to make\nsure you're prepared if it happens.\n\n100\n00:04:55.070 --> 00:04:57.880\nAurora, it is actually\nbased on MySQL also.\n\n101\n00:04:57.880 --> 00:04:59.410\nSo these first three are really all MySQL.\n\n102\n00:04:59.410 --> 00:05:02.108\nBut Aurora has been optimized by Amazon,\nand\n\n103\n00:05:02.108 --> 00:05:04.950\nthey've added a lot of\nreally neat stuff to it.\n\n104\n00:05:04.950 --> 00:05:07.560\nSo, I'm gonna point out those\ndifferences as we go through.\n\n105\n00:05:07.560 --> 00:05:11.700\nBut if you were to pick any of these first\nthree, they're all MySQL compatible.\n\n106\n00:05:11.700 --> 00:05:12.820\nSo you can treat them the same.\n\n107\n00:05:12.820 --> 00:05:14.930\nBut it doesn't really matter\nwhich of these three,\n\n108\n00:05:14.930 --> 00:05:17.390\nI need to think about the other\noptions and bells and whistles.\n\n109\n00:05:17.390 --> 00:05:20.380\nBut if I want MySQL,\nI'm just gonna choose MySQL.\n\n110\n00:05:20.380 --> 00:05:21.390\nAnd I'm gonna spit it out.\n\n111\n00:05:21.390 --> 00:05:21.890\nRight?\n\n112\n00:05:21.890 --> 00:05:24.730\nSo that's the cool part about RDS.\n\n113\n00:05:24.730 --> 00:05:26.260\nI pick the platform.\n\n114\n00:05:26.260 --> 00:05:27.450\nI didn't pick an operating system.\n\n115\n00:05:27.450 --> 00:05:31.020\nI didn't have to say, I want Windows or\nI want Linux, I want Red Hat,\n\n116\n00:05:31.020 --> 00:05:32.170\nor CentOS, or Ubuntu.\n\n117\n00:05:32.170 --> 00:05:33.970\nI don't have to tell it that.\n\n118\n00:05:33.970 --> 00:05:36.230\nIf I pick Microsoft SQL, well,\n\n119\n00:05:36.230 --> 00:05:39.490\nAmazon's gonna pick the best\noperating system for me.\n\n120\n00:05:39.490 --> 00:05:43.145\nWhich in this case, will probably be\nserver 2012, but it might be server 2008.\n\n121\n00:05:43.145 --> 00:05:48.082\nI don't know right, and if I pick MySQL,\nthey will pick the best platform for me,\n\n122\n00:05:48.082 --> 00:05:51.446\nwhich might be the Linux CentOS\nvariant name they have or\n\n123\n00:05:51.446 --> 00:05:53.665\nit might be full on Red Hat or Ubuntu,\n\n124\n00:05:53.665 --> 00:05:58.627\nthey'll pick the best one that their team\nis gonna fully tune and optimize for us.\n\n125\n00:05:58.627 --> 00:06:01.870\nSo we put that out of our mind and\nwe don't have to worry about it.\n\n126\n00:06:01.870 --> 00:06:04.370\nThat's basically the way that RDS works.\n\n127\n00:06:04.370 --> 00:06:09.750\nYou don't whip up a database really quick,\nso I might whip up a MariaDB instance here\n\n128\n00:06:09.750 --> 00:06:12.800\nand we can just run\nthrough a quick wizard.\n\n129\n00:06:12.800 --> 00:06:17.120\nAnd just set a few little values here,\nwhat level of machine I want,\n\n130\n00:06:17.120 --> 00:06:20.680\nwhether I want it to be redundant or\nnot, what kind of storage I want.\n\n131\n00:06:20.680 --> 00:06:23.921\nI'll pick my database name and so\n\n132\n00:06:23.921 --> 00:06:28.913\nmaybe I'll make this TD3 and\nI can set a user name.\n\n133\n00:06:28.913 --> 00:06:32.660\nYou can just kind of whip\nup a few basic things here.\n\n134\n00:06:32.660 --> 00:06:39.320\nAnd when I'm done, what I end up with is\na database server that is up and running.\n\n135\n00:06:39.320 --> 00:06:41.950\nAnd as a developer,\nI can now just connect to it and\n\n136\n00:06:41.950 --> 00:06:43.550\nstart putting in my data\nwhich is what I really want.\n\n137\n00:06:43.550 --> 00:06:45.960\nSo that's what RDS is,\nthat's what it does and\n\n138\n00:06:45.960 --> 00:06:48.980\nthat's why it's such a useful\ntechnology for us to have.\n\n139\n00:06:48.980 --> 00:06:54.150\n>> What's cool about that though,\nis Don is, you created that database and\n\n140\n00:06:54.150 --> 00:06:56.150\nright in that wizard, and so,\ndo you want to make this redundant?\n\n141\n00:06:56.150 --> 00:06:57.000\nAnd you jumped in.\n\n142\n00:06:57.000 --> 00:06:59.580\nIs that the only way\nthat you do redundancy?\n\n143\n00:06:59.580 --> 00:07:02.330\nOr is there other different ways\nwithin RDS to make them redundant?\n\n144\n00:07:02.330 --> 00:07:04.000\n>> There's plenty of\ndifferent ways to do it.\n\n145\n00:07:04.000 --> 00:07:05.910\nBut the wizard really is the easiest way.\n\n146\n00:07:05.910 --> 00:07:08.180\nNow, let's talk about redundancy for\na second.\n\n147\n00:07:08.180 --> 00:07:09.130\nSo.\n\n148\n00:07:09.130 --> 00:07:11.850\nI just whipped a database and\nI chose not to make it redundant.\n\n149\n00:07:11.850 --> 00:07:14.060\nSo, what it did is it created an instance.\n\n150\n00:07:14.060 --> 00:07:17.670\nIt created an EC2 instance in\nthe background that I can't see.\n\n151\n00:07:17.670 --> 00:07:18.420\nIt's invisible to me.\n\n152\n00:07:18.420 --> 00:07:20.660\nIt's managed by Amazon.\n\n153\n00:07:20.660 --> 00:07:26.200\nAnd they whip it up, and they put it\nin one availability zone in one region.\n\n154\n00:07:26.200 --> 00:07:28.200\nSo, it's just in a single place.\n\n155\n00:07:28.200 --> 00:07:30.550\nIf that server goes down,\nmy database goes down.\n\n156\n00:07:30.550 --> 00:07:33.760\nIf that AZ goes down,\nmy database goes down.\n\n157\n00:07:33.760 --> 00:07:35.530\nIf that region goes down,\nmy database goes down.\n\n158\n00:07:35.530 --> 00:07:37.380\nIt is not redundant.\n\n159\n00:07:37.380 --> 00:07:39.840\nAll right,\nif I want it to be redundant, though,\n\n160\n00:07:39.840 --> 00:07:42.660\nit's as easy as hitting that option\ninside of the wizard, right.\n\n161\n00:07:42.660 --> 00:07:48.010\nSo if I choose to launch another DB\ninstance, and I'll do MySQL this time.\n\n162\n00:07:48.010 --> 00:07:50.260\nAnd, if I choose yes.\n\n163\n00:07:50.260 --> 00:07:53.567\nUse a multi A Z deployment.\n\n164\n00:07:53.567 --> 00:07:58.861\nWhat it's gonna do is, it's going\nto create a primary and a standby.\n\n165\n00:07:58.861 --> 00:08:02.552\nAnd it's gonna deploy the primary\nin one availability zone, and\n\n166\n00:08:02.552 --> 00:08:06.410\nit's gonna deploy the standby\nin another availability zone.\n\n167\n00:08:06.410 --> 00:08:09.710\nNow, they'll both be in the same region,\nwhichever region I'm in right now.\n\n168\n00:08:09.710 --> 00:08:13.230\nSo for me, I'm in North Virginia,\nor the US East region.\n\n169\n00:08:13.230 --> 00:08:14.560\nThat's where I am right now.\n\n170\n00:08:14.560 --> 00:08:17.390\nSo, when I spin this up,\nit's gonna create a primary and\n\n171\n00:08:17.390 --> 00:08:21.770\na standby in two AZs inside\nof the US East region.\n\n172\n00:08:21.770 --> 00:08:26.140\nIf I switch my region, then it'll create\nit in whatever other region it is.\n\n173\n00:08:26.140 --> 00:08:27.510\nAnd I think there's just one or\n\n174\n00:08:27.510 --> 00:08:29.670\ntwo regions now that only\nhave one availability zone.\n\n175\n00:08:29.670 --> 00:08:32.150\nAnd so I might not even be able to do it,\nthe option would be grayed out.\n\n176\n00:08:32.150 --> 00:08:36.040\nBut in most of them, we have at least two\navailability zones, Virginia has four.\n\n177\n00:08:36.040 --> 00:08:38.160\nSo I got plenty there to choose from.\n\n178\n00:08:38.160 --> 00:08:41.640\nI'd just say yes, and\nwhen I move forward that's it.\n\n179\n00:08:41.640 --> 00:08:45.260\nI'm gonna create a redundant environment\njust with a simple menu choice.\n\n180\n00:08:45.260 --> 00:08:47.760\nAnd so I can come in here and\nspecify that I want this to be,\n\n181\n00:08:47.760 --> 00:08:49.900\nwhat database number am I up to now?\n\n182\n00:08:49.900 --> 00:08:53.680\nI think I did DB4 a second ago,\nso I'll make this DB5.\n\n183\n00:08:53.680 --> 00:08:56.560\nAnd I can come in here and\nset my user account.\n\n184\n00:08:56.560 --> 00:09:00.750\nEverything else is the same, I just told\nit that I wanted it to be redundant.\n\n185\n00:09:00.750 --> 00:09:05.530\nNow when I do it this way, it's gonna take\na lot longer to create this database.\n\n186\n00:09:05.530 --> 00:09:09.410\nSo, I don't know, maybe I wanna create a\nmarketing database or sales or accounting,\n\n187\n00:09:09.410 --> 00:09:10.730\nthis will be accounting, all right?\n\n188\n00:09:10.730 --> 00:09:12.640\nSo I'm gonna create\nan accounting database and\n\n189\n00:09:12.640 --> 00:09:15.690\nI'm just gonna leave everything kinda\nat the defaults here and launch it up.\n\n190\n00:09:15.690 --> 00:09:19.232\nWhen I do that,\nit's gonna create the primary first,\n\n191\n00:09:19.232 --> 00:09:21.697\nthen it's gonna create the standby.\n\n192\n00:09:21.697 --> 00:09:26.990\nThen it's gonna configure replication for\nme, then it's gonna sync it all up.\n\n193\n00:09:26.990 --> 00:09:27.800\nAnd once it's done,\n\n194\n00:09:27.800 --> 00:09:33.100\nI'm gonna end up with a redundant\ndatabase, just like that, right?\n\n195\n00:09:33.100 --> 00:09:37.640\nAnd I didn't have to understand all the\nunderlying infrastructure, they set it up.\n\n196\n00:09:37.640 --> 00:09:43.630\nAnd what's even better is they map one\nDNS name, one endpoint, to this system.\n\n197\n00:09:43.630 --> 00:09:48.230\nAnd if there's a failure, it'll\nautomatically repoint that to the standby.\n\n198\n00:09:48.230 --> 00:09:51.600\nI don't even have to do the failover,\nit takes care of it for me.\n\n199\n00:09:51.600 --> 00:09:55.450\nAnd all my applications, as long as\nI point them to that one endpoint,\n\n200\n00:09:55.450 --> 00:09:57.580\nthen they're always gonna\nget either the primary or\n\n201\n00:09:57.580 --> 00:10:00.570\nthe standby depending on which one\nhas gone active at that given time.\n\n202\n00:10:00.570 --> 00:10:03.490\nIt's the easiest kind of\nredundancy you can set up.\n\n203\n00:10:03.490 --> 00:10:06.290\nEspecially when you consider on\nthe backend there's more than one type of\n\n204\n00:10:06.290 --> 00:10:07.740\nredundancy.\n\n205\n00:10:07.740 --> 00:10:09.980\nSo for example, if I do MySQL or\n\n206\n00:10:09.980 --> 00:10:13.500\nMariaDB, those two guys,\nthey use the primary standby model.\n\n207\n00:10:13.500 --> 00:10:15.490\nSo does PostgreSQL right?.\n\n208\n00:10:15.490 --> 00:10:18.790\nSo if I pick any of those\nguys then what's happening is\n\n209\n00:10:18.790 --> 00:10:21.900\nAmazon is whipping up a primary and\nthey're setting up\n\n210\n00:10:21.900 --> 00:10:25.630\nphysical storage replication between\nthe primary and the standby.\n\n211\n00:10:25.630 --> 00:10:28.970\nSo, the storage, the hard drives that\nI'm actually storing my database on,\n\n212\n00:10:28.970 --> 00:10:31.120\nthose are being replicated\nto the other side.\n\n213\n00:10:31.120 --> 00:10:35.930\nIf I choose Microsoft SQL Server, well,\nthey don't do storage replication there,\n\n214\n00:10:35.930 --> 00:10:40.140\nthey actually use the native database\nmirroring feature inside of SQL.\n\n215\n00:10:40.140 --> 00:10:42.282\nAnd they'll mirror that to the other AZ.\n\n216\n00:10:42.282 --> 00:10:46.091\nI don't have to know that, I don't have\nto know that those two platforms have two\n\n217\n00:10:46.091 --> 00:10:50.260\ncompletely different replication\nmechanisms, Amazon figures it out for me.\n\n218\n00:10:50.260 --> 00:10:54.160\nI do what Daniel said, right,\nI click that Multi-AZ deployment link.\n\n219\n00:10:54.160 --> 00:10:56.100\nAnd then I go forward and\nit's going to spin it up.\n\n220\n00:10:56.100 --> 00:11:00.400\nNow, keep in mind when you do that,\nit makes deploying it take a lot longer.\n\n221\n00:11:00.400 --> 00:11:05.230\nNotice my DB5, I've been jawing on for\na few minutes here and\n\n222\n00:11:05.230 --> 00:11:06.340\nif you look it's still creating.\n\n223\n00:11:06.340 --> 00:11:08.438\nWhy is it taking so long?\n\n224\n00:11:08.438 --> 00:11:12.100\nWell, it's gotta create the primary,\nand then it has to create the standby.\n\n225\n00:11:12.100 --> 00:11:14.802\nIt's spinning up instances right now,\nnew machines.\n\n226\n00:11:14.802 --> 00:11:18.410\nThey've got to boot up, and then it's\nconfiguring the replication between them\n\n227\n00:11:18.410 --> 00:11:22.090\nand the replication's going\nbetween availability zones.\n\n228\n00:11:22.090 --> 00:11:24.300\nNow how do I know that's\nactually happening?\n\n229\n00:11:24.300 --> 00:11:30.640\nWell, if I expand out that server and I go\ndown here into my details for the server.\n\n230\n00:11:30.640 --> 00:11:33.940\nI can see, looking under here,\nunder Security and\n\n231\n00:11:33.940 --> 00:11:39.080\nNetwork, my availability\nzone says us-east-1d, right?\n\n232\n00:11:39.080 --> 00:11:42.100\nSo United States, east, 1d.\n\n233\n00:11:42.100 --> 00:11:44.900\nBut then if I look down a little bit,\ndown here somewhere,\n\n234\n00:11:44.900 --> 00:11:49.030\nwe can find it, right here,\navailability and durability.\n\n235\n00:11:49.030 --> 00:11:53.930\nAnd I can see my DB instant status\nis creating, my Multi AZ is yes,\n\n236\n00:11:53.930 --> 00:11:54.990\nit is enabled.\n\n237\n00:11:54.990 --> 00:12:00.140\nBut I don't actually have a DB\ninstance in another AZ yet, right?\n\n238\n00:12:00.140 --> 00:12:01.550\nSo I'm not actually redundant yet.\n\n239\n00:12:01.550 --> 00:12:06.720\nIt's still creating, and that's why\nthis database isn't technically online.\n\n240\n00:12:06.720 --> 00:12:08.490\nTechnically, I'm gonna have an endpoint.\n\n241\n00:12:08.490 --> 00:12:10.300\nBut see how the endpoint\nis not available yet?\n\n242\n00:12:10.300 --> 00:12:16.110\nIt's still being created, but when I have\nit, it's gonna be a single endpoint.\n\n243\n00:12:16.110 --> 00:12:19.649\nThat will point to both,\nthe primary and the standby.\n\n244\n00:12:19.649 --> 00:12:22.519\nAnd I won't have to sweat any\nof them fail over stuff myself,\n\n245\n00:12:22.519 --> 00:12:25.010\nit is just going to be built in there and\nkind of do it.\n\n246\n00:12:25.010 --> 00:12:27.392\nSo, it's really easy to get this deployed.\n\n247\n00:12:27.392 --> 00:12:30.190\nAgain, to think about who it is designed\nfor, it is designed for developers.\n\n248\n00:12:30.190 --> 00:12:33.240\nAmazon wants the developers to develop\nsoftware, to be able to get in there,\n\n249\n00:12:33.240 --> 00:12:36.170\nwrite their code and not have to\nworry about this underlying stuff,\n\n250\n00:12:36.170 --> 00:12:38.360\nso it's super easy to get\nredundancy put in place.\n\n251\n00:12:38.360 --> 00:12:39.610\n>> Very, very cool Don.\n\n252\n00:12:39.610 --> 00:12:41.526\nNow what else do we have\navailable when it comes to this?\n\n253\n00:12:41.526 --> 00:12:44.072\nI mean, we've seen some,\nthe redundancy obviously,\n\n254\n00:12:44.072 --> 00:12:46.020\nthat's a important factor on this.\n\n255\n00:12:46.020 --> 00:12:49.080\nBut where do we want to go from here?\n\n256\n00:12:49.080 --> 00:12:52.440\n>> So, I kinda talked about\nhow we build this redundancy.\n\n257\n00:12:52.440 --> 00:12:55.420\nAnd the one platform I left off is kinda\nthat one that's probably not going to be\n\n258\n00:12:55.420 --> 00:12:56.390\non your exam, but might be.\n\n259\n00:12:56.390 --> 00:12:58.160\nAnd that's Amazon Aurora, right?\n\n260\n00:12:58.160 --> 00:13:04.120\nLet's talk about it for a second, if I go\nback here, to creating a new RDS database,\n\n261\n00:13:04.120 --> 00:13:07.780\nright, so,\nI'm just gonna get back up here.\n\n262\n00:13:07.780 --> 00:13:11.760\nAnd I'll launch a new DB instance, and\nI'm gonna choose Amazon Aurora this time.\n\n263\n00:13:11.760 --> 00:13:12.960\nNotice when I choose the other guys,\n\n264\n00:13:12.960 --> 00:13:14.900\nit just tells me what the name\nof the software is, or\n\n265\n00:13:14.900 --> 00:13:16.200\nif there's multiple editions.\n\n266\n00:13:16.200 --> 00:13:19.110\nBut when I choose Aurora, it gives\nme this whole big spiel here, right?\n\n267\n00:13:19.110 --> 00:13:19.970\nWhat's it talking about?\n\n268\n00:13:19.970 --> 00:13:24.600\nWell Aurora is built off of MySQL,\nit's MySQL-compatible.\n\n269\n00:13:24.600 --> 00:13:27.040\nSo you can treat it the same as MySQL.\n\n270\n00:13:27.040 --> 00:13:30.610\nBut Amazon has super mega optimized\nit on the back end, and so\n\n271\n00:13:30.610 --> 00:13:34.780\nthey are telling you here you will\nget up to 5X the throughput and\n\n272\n00:13:34.780 --> 00:13:37.088\nup to 10X the capacity,\nthat's amazing right?\n\n273\n00:13:37.088 --> 00:13:42.220\nThat in it of itself is great, but the\nbest feature in my opinion, is right here.\n\n274\n00:13:42.220 --> 00:13:47.030\nUp to six way replication across\nthree availability zones.\n\n275\n00:13:47.030 --> 00:13:49.090\nWith MySQL and PostgreSQL and\n\n276\n00:13:49.090 --> 00:13:54.150\nMicrosoftSQL or SQL, you can only have\na primary and a standby, and that's it.\n\n277\n00:13:54.150 --> 00:13:58.320\nSo you have two way replication, you\nhave these two nodes and then that's it.\n\n278\n00:13:58.320 --> 00:14:02.510\nBut with Aurora, similar names,\nwith AuroraDB, you can\n\n279\n00:14:02.510 --> 00:14:06.900\nactually have six way\nreplication across three AZ's.\n\n280\n00:14:06.900 --> 00:14:09.580\nYou can have a primary and two standbys.\n\n281\n00:14:09.580 --> 00:14:12.070\nWhich means you could have\ntwo instances fail, and\n\n282\n00:14:12.070 --> 00:14:14.630\nstill have another one up and running.\n\n283\n00:14:14.630 --> 00:14:18.540\nSo it gives you a little extra\nredundancy that's available right here.\n\n284\n00:14:18.540 --> 00:14:21.160\nAnd it's pretty sweet and it's all\nmanaged right here through the system.\n\n285\n00:14:21.160 --> 00:14:25.500\nSo, little bit different from the other\nguys, in that it has one extra node.\n\n286\n00:14:25.500 --> 00:14:28.430\nSo just be aware of that if you\nget a question on the exam about\n\n287\n00:14:28.430 --> 00:14:31.475\nhaving a database that survives\ntwo instance failures,\n\n288\n00:14:31.475 --> 00:14:33.390\nAuroraDB's going to be your winner there.\n\n289\n00:14:33.390 --> 00:14:36.220\nBut all the other ones can really\nonly survive one instance failure.\n\n290\n00:14:37.510 --> 00:14:38.830\nAll right, so that's AuroraDB,\n\n291\n00:14:38.830 --> 00:14:42.350\nafter that once you spin it up\nit's really not any different.\n\n292\n00:14:42.350 --> 00:14:44.950\nSo when I come in here I pick\nthe class of server I want.\n\n293\n00:14:44.950 --> 00:14:48.900\nNotice they limit me here, on the other\none's I could choose like t2 micros and\n\n294\n00:14:48.900 --> 00:14:50.750\nthose really tiny cheap servers.\n\n295\n00:14:50.750 --> 00:14:53.847\nHere I got to go large which means you\ncan't do this under the free usage tier\n\n296\n00:14:53.847 --> 00:14:55.040\nit's gonna cost you money.\n\n297\n00:14:55.040 --> 00:14:58.725\nAnd if I do Multi-AZ,\nI can choose to create that replica and\n\n298\n00:14:58.725 --> 00:15:01.772\nits gonna get me set up\nwith the extra redundancy.\n\n299\n00:15:01.772 --> 00:15:06.435\nAnd so I can give this one\nanother this will be DB4,\n\n300\n00:15:06.435 --> 00:15:12.081\nsince I skipped that earlier and\nI can set up an account for it.\n\n301\n00:15:12.081 --> 00:15:15.623\nAnd there we go so\nwe'll get that one in place.\n\n302\n00:15:15.623 --> 00:15:18.610\nAnd then once I spin that up, it's just\ngonna ask the same basic questions.\n\n303\n00:15:18.610 --> 00:15:23.180\nIt's asking which availability zone I want\nthe primary to be in and so I can pick.\n\n304\n00:15:23.180 --> 00:15:24.620\nMaybe I want to primary to be in 1a.\n\n305\n00:15:24.620 --> 00:15:27.883\nAnd it's not letting me pick for\nthe others, for the replicas,\n\n306\n00:15:27.883 --> 00:15:29.460\nlike where do I want them to go?\n\n307\n00:15:29.460 --> 00:15:31.710\nIt'll figure that out based on utility.\n\n308\n00:15:31.710 --> 00:15:34.540\nAnd it's basically looking at\nwhich AZ's are least busy, and\n\n309\n00:15:34.540 --> 00:15:35.900\nthat's where it'll park them.\n\n310\n00:15:35.900 --> 00:15:38.155\nAnd I can pick my security group and\nstuff.\n\n311\n00:15:38.155 --> 00:15:40.563\nWe'll just kinda leave it at the default,\nand\n\n312\n00:15:40.563 --> 00:15:43.360\nI can create a database\ncluster identifier, right?\n\n313\n00:15:43.360 --> 00:15:45.570\nCuz it's not just a primary and standby.\n\n314\n00:15:45.570 --> 00:15:48.820\nIt's actually a cluster, and so\nI've gotta give it that identifier, and\n\n315\n00:15:48.820 --> 00:15:50.069\nI can set the database name.\n\n316\n00:15:50.069 --> 00:15:55.312\nWe called this awsdemo-db5.\n\n317\n00:15:55.312 --> 00:15:58.594\nAnd maybe this will be my.\n\n318\n00:15:58.594 --> 00:16:00.149\nExecutive database.\n\n319\n00:16:00.149 --> 00:16:02.286\nAll right, so we'll create that.\n\n320\n00:16:02.286 --> 00:16:07.550\nAnd we'll go ahead and leave our backups\nkinda set here and launch that one up.\n\n321\n00:16:07.550 --> 00:16:09.460\nSo now it's gonna spin up that Aurora DB.\n\n322\n00:16:09.460 --> 00:16:12.760\nCool thing here is that Aurora DB\nis fully My SQL compatible,\n\n323\n00:16:12.760 --> 00:16:16.400\nso if I have software that is My SQL/q I\ncan just point it right over here to\n\n324\n00:16:16.400 --> 00:16:19.290\nAurora and we'll be in business.\n\n325\n00:16:19.290 --> 00:16:21.440\nSo, it is a little bit\ndifferent from the other guys.\n\n326\n00:16:22.570 --> 00:16:25.188\nBoy my bill for\ntoday is going to be expensive.\n\n327\n00:16:25.188 --> 00:16:26.620\nIf you look at what I've launched,\n\n328\n00:16:26.620 --> 00:16:30.226\nI've launched some aurora, I've launched\nsome MySQL, I've launched some maria DB.\n\n329\n00:16:30.226 --> 00:16:32.749\nThe cool part is they're all really\ncompatible so I can run queries and\n\n330\n00:16:32.749 --> 00:16:34.649\nsoftware against these guys so\nit's going to work.\n\n331\n00:16:34.649 --> 00:16:37.061\n>> That's awesome.\nEverything will work together and\n\n332\n00:16:37.061 --> 00:16:38.740\nthat's a nice thing.\n\n333\n00:16:38.740 --> 00:16:43.470\nIf you got one DBA and\nhe's more experienced with Maria DB.\n\n334\n00:16:43.470 --> 00:16:46.920\nHappier using My SQL or, so\nthis is I don't care what you give me,\n\n335\n00:16:46.920 --> 00:16:48.190\nI'll throw down.\n\n336\n00:16:48.190 --> 00:16:51.050\nYou can throw that Aurora at them and\nyou get that added flexibility that Aurora\n\n337\n00:16:51.050 --> 00:16:52.270\ncan, even though it does\ncost a little more.\n\n338\n00:16:52.270 --> 00:16:54.900\nBut I believe the juice is\nwell worth the squeeze.\n\n339\n00:16:54.900 --> 00:16:56.270\n>> Yeah, absolutely.\n\n340\n00:16:56.270 --> 00:16:59.340\nYou know, speaking of things\nbeing worth the squeeze,\n\n341\n00:16:59.340 --> 00:17:02.930\nI guess I probably would never\nsay that [LAUGH] But speaking of\n\n342\n00:17:02.930 --> 00:17:06.040\nthat when I was running through the setup\nthere, there's one setting I want to\n\n343\n00:17:06.040 --> 00:17:09.860\ncall out because I know some people\nstruggle with this on the exam.\n\n344\n00:17:09.860 --> 00:17:11.720\nI get a lot of questions\nfrom viewers on it.\n\n345\n00:17:11.720 --> 00:17:13.270\nWhen you're picking your storage for\n\n346\n00:17:13.270 --> 00:17:16.390\nthe databases, I kind of kept\ngoing with the defaults on these.\n\n347\n00:17:16.390 --> 00:17:20.080\nAnd I'm not gonna launch another instance,\nbut I'll run through the wizard a bit.\n\n348\n00:17:20.080 --> 00:17:23.800\nWhen I go to create one of these\ndatabases, and I start moving forward and\n\n349\n00:17:23.800 --> 00:17:25.190\nI do the configuration,\n\n350\n00:17:25.190 --> 00:17:29.800\none of the questions that it asks that I\nkind of skipped over is this storage type.\n\n351\n00:17:29.800 --> 00:17:33.070\nAnd it's got provisioned IOPS be default.\n\n352\n00:17:33.070 --> 00:17:33.640\nAll right.\n\n353\n00:17:33.640 --> 00:17:38.210\nNow, if you're used to EC2 instances,\nif you're spinning things up yourself,\n\n354\n00:17:38.210 --> 00:17:42.660\nyou know that you normally have a choice\nhere between general-purpose SSD and\n\n355\n00:17:42.660 --> 00:17:44.340\nmagnetic, okay.\n\n356\n00:17:44.340 --> 00:17:46.650\nAnd here we have a third choice,\nthis provisioned IOPS.\n\n357\n00:17:46.650 --> 00:17:49.040\nAnd you actually have this\nchoice under EC2 now, but\n\n358\n00:17:49.040 --> 00:17:52.950\nmost people ignore it,\nMagnetic is the old storage with Amazon.\n\n359\n00:17:52.950 --> 00:17:55.750\nThose are traditional spinning hard\ndrives the ones that have a fairly high\n\n360\n00:17:55.750 --> 00:17:58.250\nfailure rate and a fairly slow seek time.\n\n361\n00:17:58.250 --> 00:18:02.870\nAnd solid state digital the newer type\ndrives that have a really long mean time\n\n362\n00:18:02.870 --> 00:18:07.110\nbetween failure and they're super\nfast as far as doing seeks and\n\n363\n00:18:07.110 --> 00:18:08.970\nall that cuz they don't\nhave many moving parts.\n\n364\n00:18:08.970 --> 00:18:11.370\nSo you've got these two choices normally.\n\n365\n00:18:12.410 --> 00:18:13.880\nWhat is Provisioned IOPS?\n\n366\n00:18:15.280 --> 00:18:18.996\nWell, IOPS, those\nare Input/Output Operations Per Second.\n\n367\n00:18:18.996 --> 00:18:21.816\nSo anytime you write to a drive,\nwhich is like an input or\n\n368\n00:18:21.816 --> 00:18:25.008\nyou read from a drive,\nwhich would be an output for that drive.\n\n369\n00:18:25.008 --> 00:18:25.995\nSo IOPS's.\n\n370\n00:18:25.995 --> 00:18:31.470\nWhen you're touching that drive, well that\ndrive is a virtual hard drive, right?\n\n371\n00:18:31.470 --> 00:18:35.440\nYou're accessing a portion of a drive\nlocated in Amazon's data centers.\n\n372\n00:18:35.440 --> 00:18:39.050\nThere might be other\ncustomers on that drive also.\n\n373\n00:18:39.050 --> 00:18:43.630\nSo you might be on very fast SSD,\nbut so are 20 other customers.\n\n374\n00:18:43.630 --> 00:18:45.220\nAnd so\nwhen you start accessing that hard drive,\n\n375\n00:18:45.220 --> 00:18:47.760\nyou're competing against the other\ncustomers for that access.\n\n376\n00:18:47.760 --> 00:18:49.150\nAnd normally we don't care about that,\nright?\n\n377\n00:18:49.150 --> 00:18:51.620\nA web server, whatever, it's fine,\nwe don't think about it.\n\n378\n00:18:51.620 --> 00:18:56.530\nBut on a database server, it can really\nbe important that if you're competing for\n\n379\n00:18:56.530 --> 00:18:59.010\naccess against the drive\nwith another customer.\n\n380\n00:18:59.010 --> 00:19:00.620\nThat can slow the database down.\n\n381\n00:19:00.620 --> 00:19:03.260\nSo we'll normally go with\nprovision IOs all right.\n\n382\n00:19:03.260 --> 00:19:06.090\nWhat that means is yeah I'm\ngonna share a hard drive.\n\n383\n00:19:06.090 --> 00:19:11.390\nBut I have a guaranteed minimum level\nof IOPS that are gonna be available for\n\n384\n00:19:11.390 --> 00:19:12.630\nme at any given time.\n\n385\n00:19:12.630 --> 00:19:18.980\nAnd so you'll the default here is 100\nGB with 1,000 IOPS by default, okay?\n\n386\n00:19:18.980 --> 00:19:21.430\nAmazon kinda has this\nlittle formula they use.\n\n387\n00:19:21.430 --> 00:19:23.310\nThey say that basically,\n\n388\n00:19:23.310 --> 00:19:28.430\nto ensure the best performance you usually\nwant to have ten times the storage for\n\n389\n00:19:28.430 --> 00:19:34.100\nIOPSs right for each gig of storage\nI have I should ten IOs per seconds.\n\n390\n00:19:34.100 --> 00:19:38.580\nSo see how I defaulted to a 100\ngig database and 1000 IOPSs, so\n\n391\n00:19:38.580 --> 00:19:43.410\nit's assuming I'm gonna do 1000\ninput output operations per second.\n\n392\n00:19:43.410 --> 00:19:45.300\nThat might be high that might be low.\n\n393\n00:19:45.300 --> 00:19:46.770\nAnd so we might need to adjust this.\n\n394\n00:19:46.770 --> 00:19:49.850\nAnd we're gonna do another\nepisode on monitoring RDS and\n\n395\n00:19:49.850 --> 00:19:53.720\nI'll show you guys how to monitor how\nmuch IOPS you're actually doing so\n\n396\n00:19:53.720 --> 00:19:56.660\nyou can find out your real number and\ncome back and tune this later on.\n\n397\n00:19:56.660 --> 00:20:00.520\nCuz the bigger this number is,\nthe more expensive that storage becomes.\n\n398\n00:20:00.520 --> 00:20:03.020\nYou gotta pay for those reserved IOs.\n\n399\n00:20:03.020 --> 00:20:05.170\nAnd if you're not actually using them,\nyou're wasting money.\n\n400\n00:20:05.170 --> 00:20:07.720\nOr if you're not getting enough IOPS,\n\n401\n00:20:07.720 --> 00:20:09.420\nthen the performance of\nyour database gets hurt.\n\n402\n00:20:09.420 --> 00:20:11.590\nSo be aware of that as you provision it.\n\n403\n00:20:11.590 --> 00:20:13.130\nThis is kind of an important thing.\n\n404\n00:20:13.130 --> 00:20:15.850\nIt's a little bit hard to\nchange this down the road,\n\n405\n00:20:15.850 --> 00:20:20.850\nso you pretty much want to chose\nthat provisioned IOPS by default.\n\n406\n00:20:20.850 --> 00:20:23.650\nAnd then you can always\nadjust the provision IOPS\n\n407\n00:20:23.650 --> 00:20:25.350\nto suit your needs down the road.\n\n408\n00:20:25.350 --> 00:20:29.470\nBut switching from like SSD over\nto Provision IO, well it requires\n\n409\n00:20:29.470 --> 00:20:32.550\nreally restoring a backup of your server\nso you can restore the new storage.\n\n410\n00:20:32.550 --> 00:20:34.540\nIt's not necessarily\nthe easiest thing in the world.\n\n411\n00:20:34.540 --> 00:20:36.090\n>> At least it's there for us, right?\n\n412\n00:20:36.090 --> 00:20:37.281\n[LAUGH]\n>> You can do it.\n\n413\n00:20:37.281 --> 00:20:40.248\n>> I'd rather have it and\nnot need it than need it and not have it.\n\n414\n00:20:40.248 --> 00:20:44.365\nNow that being said, we've been walking\nthrough this recreated databases and\n\n415\n00:20:44.365 --> 00:20:48.210\nenabled, the redundancy, but\nDon what if I already have a database?\n\n416\n00:20:48.210 --> 00:20:51.420\nI don't know maybe a few of them and\nI want to go and make them redundant?\n\n417\n00:20:51.420 --> 00:20:52.170\n>> Good point right.\n\n418\n00:20:52.170 --> 00:20:53.630\nSometimes we're not great planners.\n\n419\n00:20:53.630 --> 00:20:54.360\n>> Right.\n>> And so\n\n420\n00:20:54.360 --> 00:20:57.960\nyou might create a database it's already\nin place and it's just not redundant.\n\n421\n00:20:57.960 --> 00:21:00.930\nAnd so you decide you want to\nadd it after the fact all right?\n\n422\n00:21:00.930 --> 00:21:03.550\nWell there's really three different ways\nthat we can create a redundant database.\n\n423\n00:21:03.550 --> 00:21:07.670\nAnd I'm only showed you one which is\ndoing it when you create the database.\n\n424\n00:21:07.670 --> 00:21:11.390\nI could create an all new database,\nwhich would get me an all new endpoint,\n\n425\n00:21:11.390 --> 00:21:14.070\nI could make it multi\nAZ during creation and\n\n426\n00:21:14.070 --> 00:21:16.390\nthen point all my software\nto this new database.\n\n427\n00:21:16.390 --> 00:21:16.980\nThat's a good time.\n\n428\n00:21:16.980 --> 00:21:19.380\nWe should definitely do that, right?\n\n429\n00:21:19.380 --> 00:21:23.000\nBut most of the time we don't want that,\nso there are other ways to do it.\n\n430\n00:21:23.000 --> 00:21:28.160\nThe easiest way If you can take your\ndatabase offline, if it is ok for you\n\n431\n00:21:28.160 --> 00:21:32.110\nto take your database offline, the easiest\nway to do is to modify the database.\n\n432\n00:21:32.110 --> 00:21:32.640\nRight?\n\n433\n00:21:32.640 --> 00:21:34.330\nIf I go back to my RDS console,\n\n434\n00:21:34.330 --> 00:21:38.130\nI am sure I created atleast one\ndatabase that wasn't redundant, right.\n\n435\n00:21:38.130 --> 00:21:38.730\nLet's see here.\n\n436\n00:21:38.730 --> 00:21:44.060\nIf I got to my instances and\nif I look for multi AZ ones here, Looking\n\n437\n00:21:44.060 --> 00:21:47.170\nat these databases, I can see which ones\nare redundant and which ones aren't.\n\n438\n00:21:47.170 --> 00:21:51.830\nAnd you might notice here, I've got these\nthat actually say 2 zones versus yes.\n\n439\n00:21:51.830 --> 00:21:54.990\nWell for Maria DB and MySQL,\nthey'll either say yes or no.\n\n440\n00:21:54.990 --> 00:21:56.090\nEither yes, they're redundant.\n\n441\n00:21:56.090 --> 00:21:58.350\nThey have a primary and\na standby or no they don't.\n\n442\n00:21:58.350 --> 00:22:03.300\nFor Aurora DB, it's going to say\ntwo zones or three zones, right?\n\n443\n00:22:03.300 --> 00:22:05.560\nBy default it is only doing two,\nso that's why it says that.\n\n444\n00:22:05.560 --> 00:22:07.950\nThose are my Aurora ones.\n\n445\n00:22:07.950 --> 00:22:11.400\nBut then down here, I can see I have\na couple that aren't redundant, right?\n\n446\n00:22:11.400 --> 00:22:15.380\nAnd these data bases, if I come over\nhere and look at them as db2 and\n\n447\n00:22:15.380 --> 00:22:18.432\ndb3, I'll take db2, which is my MySQL.\n\n448\n00:22:18.432 --> 00:22:22.320\nAll right, so I want to take that one and\nI want to make it redundant.\n\n449\n00:22:22.320 --> 00:22:26.230\nIf I can take it offline, if I can get\na window of time when the database doesn't\n\n450\n00:22:26.230 --> 00:22:31.980\nneed to be available I can just go up\nhere to instance actions and modify and\n\n451\n00:22:31.980 --> 00:22:36.910\nin the modify options,\nI can just flip it to multi AZ, okay.\n\n452\n00:22:36.910 --> 00:22:40.670\nWhen I do that, when I flip to multi\nAZ I can come down here and save it.\n\n453\n00:22:43.100 --> 00:22:48.330\nAnd when I finish that it's going to\nmodify the database and make it redundant.\n\n454\n00:22:48.330 --> 00:22:51.800\nIt's going to take a snapshot\nof the main database.\n\n455\n00:22:51.800 --> 00:22:53.350\nIt's going to bring up a standby.\n\n456\n00:22:53.350 --> 00:22:55.240\nIt's going to restore that\nsnapshot over to the standby.\n\n457\n00:22:55.240 --> 00:22:56.610\nIt's going to set up replication.\n\n458\n00:22:56.610 --> 00:23:00.270\nThe physical replication on the Mac end,\nand then we'll be in business or if it'\n\n459\n00:23:00.270 --> 00:23:02.750\nMicrosoft Siegel we'll set up a logical\nreplication on the back end, right.\n\n460\n00:23:02.750 --> 00:23:04.760\nBecause it does that database mirroring.\n\n461\n00:23:04.760 --> 00:23:09.040\nSo it's gonna do that and\nthen we well we should be done.\n\n462\n00:23:09.040 --> 00:23:13.800\nSo notice that my database says that\nit's available right now, okay.\n\n463\n00:23:13.800 --> 00:23:17.330\nIt only went offline for\na little while while it did that snapshot.\n\n464\n00:23:17.330 --> 00:23:19.970\nNow that it's done,\nthe primary is back up, and\n\n465\n00:23:19.970 --> 00:23:21.740\nit's working on making it redundant.\n\n466\n00:23:21.740 --> 00:23:23.010\nEither that or I picked the wrong one.\n\n467\n00:23:23.010 --> 00:23:25.470\nLet's check and\nmake sure I didn't pick the other one.\n\n468\n00:23:25.470 --> 00:23:26.200\nOkay, yup.\n\n469\n00:23:26.200 --> 00:23:29.760\nSo, this one down here, database five,\nsee how it says modifying?\n\n470\n00:23:29.760 --> 00:23:32.870\nThat's one that's actually doing some\nwork and it's not active right now.\n\n471\n00:23:32.870 --> 00:23:34.530\nBut the one I just did was this db2.\n\n472\n00:23:34.530 --> 00:23:37.620\nIt's already available again, but\nit did go offline for a little while.\n\n473\n00:23:37.620 --> 00:23:38.500\nAll right.\n\n474\n00:23:38.500 --> 00:23:41.230\nIf I can't have it go offline.\n\n475\n00:23:41.230 --> 00:23:43.340\nIf going offline is not an option.\n\n476\n00:23:43.340 --> 00:23:45.610\nThen, I've only got one other choice.\n\n477\n00:23:45.610 --> 00:23:49.579\nAnd, that choice is to take\na snapshot of the database and\n\n478\n00:23:49.579 --> 00:23:51.657\nrestore it to a new database.\n\n479\n00:23:51.657 --> 00:23:54.777\nAnd, when I do that I can make\nthe new database multi AZ.\n\n480\n00:23:54.777 --> 00:23:56.657\nIt's going to get a new endpoint.\n\n481\n00:23:56.657 --> 00:23:58.380\nIt's going to get a new name.\n\n482\n00:23:58.380 --> 00:24:00.446\nAnd I'll have to switch my\nsoftware over to that new name.\n\n483\n00:24:00.446 --> 00:24:02.410\nSo, that's going to take\na little bit of effort, but\n\n484\n00:24:02.410 --> 00:24:04.170\nthe database will always stay online,\nright?\n\n485\n00:24:04.170 --> 00:24:05.920\nAt some point,\nyou'll switch over to the other one, but\n\n486\n00:24:05.920 --> 00:24:07.620\nyou don't necessarily have down time.\n\n487\n00:24:07.620 --> 00:24:08.970\nThe best thing to do is to go ahead and\n\n488\n00:24:08.970 --> 00:24:12.860\neat the, I don't know, maybe 20 seconds\nof down time that we got there.\n\n489\n00:24:12.860 --> 00:24:14.540\nAnd do that modified and make it.\n\n490\n00:24:14.540 --> 00:24:15.840\nBut once that's done that it.\n\n491\n00:24:15.840 --> 00:24:17.960\nI don't have to go through anything crazy.\n\n492\n00:24:17.960 --> 00:24:20.340\nIt's really just a flip of a switch,\nit's pretty convenient.\n\n493\n00:24:20.340 --> 00:24:21.900\n>> Yeah, it sounds like the.\n\n494\n00:24:21.900 --> 00:24:25.780\nThe whole going in and creating another,\nbasically a copy instance, and\n\n495\n00:24:25.780 --> 00:24:27.260\nthen renaming everything.\n\n496\n00:24:27.260 --> 00:24:30.280\nI mean, I can't think of a reason,\nI mean you say the database can't go down,\n\n497\n00:24:30.280 --> 00:24:31.460\nthat makes sense.\n\n498\n00:24:31.460 --> 00:24:33.500\nI can't bring this database down.\n\n499\n00:24:33.500 --> 00:24:37.040\nBut, man that would be a lot of work\nto go back and change anything that's\n\n500\n00:24:37.040 --> 00:24:39.680\npointing to that old database to\nnow point to the new database.\n\n501\n00:24:39.680 --> 00:24:40.440\n>> Yeah.\n\n502\n00:24:40.440 --> 00:24:41.580\nYeah.\nNow, if you're like me and\n\n503\n00:24:41.580 --> 00:24:42.700\nyou don't trust this stuff,\n\n504\n00:24:42.700 --> 00:24:44.820\nonce you get it put in place it\nis a good idea to test it out.\n\n505\n00:24:44.820 --> 00:24:46.580\nAnd there's a few ways to test it.\n\n506\n00:24:46.580 --> 00:24:47.980\nLet me show you,\nI've got one that finished here.\n\n507\n00:24:47.980 --> 00:24:51.190\nSo, let me show you how we can\nkinda verify this is working.\n\n508\n00:24:51.190 --> 00:24:54.020\nSo, I've got a MySQL database right here,\nit's my DB1.\n\n509\n00:24:54.020 --> 00:24:55.120\nIt's available.\n\n510\n00:24:55.120 --> 00:24:58.700\nIf I scroll over here I can see\nthese are some m3 extra larges.\n\n511\n00:24:58.700 --> 00:25:01.960\nI can see that Multi AZ is yes, right.\n\n512\n00:25:01.960 --> 00:25:06.040\nIf I expand it out and\nI go into it's details,\n\n513\n00:25:06.040 --> 00:25:10.130\nI can see right here that my main\navailability zone is us-east-1c.\n\n514\n00:25:10.130 --> 00:25:14.838\nAll right, so that's where the primary is,\nand if I look down here a bit,\n\n515\n00:25:14.838 --> 00:25:18.680\nsomewhere right here.\n\n516\n00:25:18.680 --> 00:25:21.060\nI can see my instance status is available,\nand\n\n517\n00:25:21.060 --> 00:25:25.690\nMulti AZ and\nmy secondary zone is us-east-1a.\n\n518\n00:25:25.690 --> 00:25:28.760\nBut primary is in 1C,\nthe standby is in 1A.\n\n519\n00:25:29.870 --> 00:25:32.590\nSo, my database is up and\ngoing, I am redundant.\n\n520\n00:25:32.590 --> 00:25:36.290\nAnything that I write to the primary\nis being replicated to the standby, and\n\n521\n00:25:36.290 --> 00:25:37.970\nI can fail over at a moment's notice.\n\n522\n00:25:37.970 --> 00:25:38.560\nOkay.\n\n523\n00:25:38.560 --> 00:25:41.780\nAnd if you ever want to test failover,\nthere's a few ways you can do it.\n\n524\n00:25:41.780 --> 00:25:44.800\nYou could shut down in Endpoint,\nif you want to shut down an instance,\n\n525\n00:25:44.800 --> 00:25:46.270\nthat would work.\n\n526\n00:25:46.270 --> 00:25:47.810\nBut it's actually kind\nof difficult to do that.\n\n527\n00:25:47.810 --> 00:25:51.800\nAnd I find the easiest way to test,\nis if I take DB1.\n\n528\n00:25:51.800 --> 00:25:53.220\nBut let's remember in our minds right.\n\n529\n00:25:53.220 --> 00:25:56.560\nThe primary was in 1C,\nand the backup was in 1A.\n\n530\n00:25:56.560 --> 00:25:57.830\nRight, the standby.\n\n531\n00:25:57.830 --> 00:26:02.400\nSo, if I take that instance and I go to\ninstance actions, I can choose reboot, and\n\n532\n00:26:02.400 --> 00:26:07.020\nwhen I go to reboot it one of the options\nright here is Reboot with Failover.\n\n533\n00:26:07.020 --> 00:26:07.920\nIf you choose that,\n\n534\n00:26:07.920 --> 00:26:10.620\nwhat it is going to do is it's going\nto reboot the primary instance,\n\n535\n00:26:10.620 --> 00:26:13.680\nwhichever one that happens to be,\nI don't even have to know which one it is.\n\n536\n00:26:13.680 --> 00:26:18.310\nAnd it's gonna reboot it, and it'll fail\nover to the stand by while it reboots.\n\n537\n00:26:18.310 --> 00:26:20.140\nAnd so, if I do that, there it goes.\n\n538\n00:26:20.140 --> 00:26:21.120\nSo, it's rebooting.\n\n539\n00:26:21.120 --> 00:26:24.130\nI can see that status message right there.\n\n540\n00:26:24.130 --> 00:26:29.270\nAnd while it's rebooting,\nwhat I should see is in my details.\n\n541\n00:26:29.270 --> 00:26:32.130\nMy availability zone right now is 1C.\n\n542\n00:26:32.130 --> 00:26:34.430\nAnd my secondary zone is 1A.\n\n543\n00:26:34.430 --> 00:26:36.940\nIt should be flipping over to 1A.\n\n544\n00:26:36.940 --> 00:26:41.910\nAnd I might have to refresh a handful of\ntimes before I can actually see that.\n\n545\n00:26:41.910 --> 00:26:44.250\nIf I just kinda sit here and\nwait patiently,\n\n546\n00:26:44.250 --> 00:26:47.090\nwhich is admittedly one of\nmy weakest things to do.\n\n547\n00:26:47.090 --> 00:26:50.790\nSo, I'm gonna sit here and refresh a few\ntimes, and then we'll expand that out.\n\n548\n00:26:50.790 --> 00:26:54.830\nAnd what we should see is that\nkind of flip around on me, so\n\n549\n00:26:54.830 --> 00:26:55.960\nthat I can see that it happens.\n\n550\n00:26:55.960 --> 00:26:59.120\nAnd so, right now,\nI've still got my availability zone as 1C.\n\n551\n00:26:59.120 --> 00:27:00.590\nIt hasn't flipped over yet.\n\n552\n00:27:00.590 --> 00:27:03.630\nI didn't tune any of the detection stuff,\nso it may take it a moment to actually\n\n553\n00:27:03.630 --> 00:27:05.900\ndetect that, but give it enough\ntime that it'll flip over and\n\n554\n00:27:05.900 --> 00:27:08.330\nit's a great way to test and\nmake sure that it flips over.\n\n555\n00:27:08.330 --> 00:27:11.260\nSo, here I can see my\ninstant status is rebooting,\n\n556\n00:27:11.260 --> 00:27:16.450\nmy secondary zone is still 1A and\nit should have flipped over.\n\n557\n00:27:16.450 --> 00:27:20.950\nSo, at this point though, all my software\nis set to point to this end point\n\n558\n00:27:20.950 --> 00:27:25.280\nright here, at least it should be, and\nif it is, when the fail-overs happen,\n\n559\n00:27:25.280 --> 00:27:27.370\nthey just get redirected\nto the other side.\n\n560\n00:27:27.370 --> 00:27:29.510\nAnd when the first part\nbecomes healthy again,\n\n561\n00:27:29.510 --> 00:27:31.750\nit will automatically\nflip them right back.\n\n562\n00:27:31.750 --> 00:27:33.890\nAnd so, that's pretty cool stuff,\n\n563\n00:27:33.890 --> 00:27:37.280\nanother thing worth mentioning about\nAurora DB while I'm thinking about it.\n\n564\n00:27:37.280 --> 00:27:42.450\nWith MySQL, with MariaDB/, with PostSQL\nyou have a primary and a standby.\n\n565\n00:27:42.450 --> 00:27:45.540\nIf the primary dies, there's the standby,\nand you've got that and\n\n566\n00:27:45.540 --> 00:27:46.900\nthat's that, right?\n\n567\n00:27:46.900 --> 00:27:48.590\nWhat happens if the standby dies?\n\n568\n00:27:48.590 --> 00:27:51.830\nSo, if you lose both of them, well their\ndatabase is down, and that's that.\n\n569\n00:27:51.830 --> 00:27:53.280\nRight.\nSo you're kind of out of luck.\n\n570\n00:27:53.280 --> 00:27:55.960\nWith Aurora DB,\nAmazon actually does one extra thing.\n\n571\n00:27:55.960 --> 00:28:00.170\nIf your primary fails, and your standby\nfails, and if you have a third,\n\n572\n00:28:00.170 --> 00:28:01.110\na second standby, I guess.\n\n573\n00:28:01.110 --> 00:28:05.190\nIf that one fails, if all three of them\nfail, they'll look for your last backup.\n\n574\n00:28:05.190 --> 00:28:07.500\nAnd they'll restore it and\nspin that up for you.\n\n575\n00:28:07.500 --> 00:28:08.950\nAnd so, and this is all automatic.\n\n576\n00:28:08.950 --> 00:28:11.760\nSo, it'll spin up an all new instance,\nall through your last snapshot.\n\n577\n00:28:11.760 --> 00:28:13.260\nAnd so, it'll just come up,\nand now you're up.\n\n578\n00:28:13.260 --> 00:28:15.570\nAnd sure you might've lost data,\nbut you know what,\n\n579\n00:28:15.570 --> 00:28:16.460\nyou were gonna lose data anyway.\n\n580\n00:28:16.460 --> 00:28:17.630\nAll three of your instances went down.\n\n581\n00:28:17.630 --> 00:28:19.710\nSo, they just say we'll\ntake that last backup.\n\n582\n00:28:19.710 --> 00:28:20.970\nFully managed redundancy.\n\n583\n00:28:20.970 --> 00:28:22.150\nIt's really a great solution.\n\n584\n00:28:22.150 --> 00:28:24.430\nIf you haven't checked out Aurora DB,\nit's exciting.\n\n585\n00:28:24.430 --> 00:28:26.370\nIt's definitely what you wanna switch to.\n\n586\n00:28:26.370 --> 00:28:28.990\nAnd I'm certain we'll start seeing\nquestions on the exam soon,\n\n587\n00:28:28.990 --> 00:28:30.980\nbecause it is a great product.\n\n588\n00:28:30.980 --> 00:28:33.670\n>> Well, Don that leaves me with the only\nquestion I have left for you today.\n\n589\n00:28:33.670 --> 00:28:35.585\nWhich is what is the atomic\nweight of cobalt?\n\n590\n00:28:35.585 --> 00:28:36.842\n>> 58.9.\n>> Well there you go.\n\n591\n00:28:36.842 --> 00:28:40.050\n>> [LAUGH] From the man that knows.\n\n592\n00:28:40.050 --> 00:28:40.560\nThank you.\n\n593\n00:28:40.560 --> 00:28:42.410\nYour going to explain.\n\n594\n00:28:42.410 --> 00:28:44.190\n>> That was my Ghostbusters\nknowledge right there.\n\n595\n00:28:44.190 --> 00:28:44.710\n>> That's right.\n\n596\n00:28:44.710 --> 00:28:46.150\n>> I'm trying to think\nif I missed anything.\n\n597\n00:28:46.150 --> 00:28:49.310\nI think, that's basically here, I feel\nlike there was something else I wanted to\n\n598\n00:28:49.310 --> 00:28:51.690\nmention since I was scanning, scanning,\nscanning my notes real quick.\n\n599\n00:28:52.780 --> 00:28:57.170\nBut basically, do keep in mind that\nredundancy is not a substitute for\n\n600\n00:28:57.170 --> 00:28:58.120\nbackups.\n\n601\n00:28:58.120 --> 00:29:00.860\nSo, you probably noticed that I had\nautomatic backups turned off in one or\n\n602\n00:29:00.860 --> 00:29:02.010\ntwo of my instances.\n\n603\n00:29:02.010 --> 00:29:03.040\nNot a great idea.\n\n604\n00:29:03.040 --> 00:29:04.680\nRight?\nYou still need backups,\n\n605\n00:29:04.680 --> 00:29:07.820\nbecause if your instances go offline,\nyou've lost your data.\n\n606\n00:29:07.820 --> 00:29:11.650\nOr if somebody malicious gets in your\ndatabase and starts deleting things.\n\n607\n00:29:11.650 --> 00:29:14.510\nIt replicates those deletes\nto the standbys, right?\n\n608\n00:29:14.510 --> 00:29:19.040\nSo, database replication like this,\nthe Multi AZ redundancy\n\n609\n00:29:19.040 --> 00:29:23.200\nis not a substitute for backups,\nyou still need your database snapshots\n\n610\n00:29:23.200 --> 00:29:25.990\nbecause there's times where you'll have to\ngo back to them, and that's the way you're\n\n611\n00:29:25.990 --> 00:29:29.800\ngoing to recover from accidental deletion,\nmalicious attacks, things like that.\n\n612\n00:29:29.800 --> 00:29:32.290\n>> We've been down that road and\nit is not pretty.\n\n613\n00:29:32.290 --> 00:29:34.400\nYes, Don is right,\nmake sure those backups are good to go.\n\n614\n00:29:34.400 --> 00:29:37.260\nDon, is there anything else we need\nto cover before we close the show?\n\n615\n00:29:37.260 --> 00:29:40.150\n>> That's it, I do want to talk about\nread replicas but we'll save that for\n\n616\n00:29:40.150 --> 00:29:44.590\nthe next episode because read replicas\nare also very different than multi AZ\n\n617\n00:29:44.590 --> 00:29:47.150\ndeployments and a lot of people confuse\nthem, so for the exam we need to\n\n618\n00:29:47.150 --> 00:29:50.750\nunderstand the difference between them, so\nwe will visit those in the next episode.\n\n619\n00:29:50.750 --> 00:29:53.040\n>> Awesome, well I look forward\nto that I'm sure you do as well.\n\n620\n00:29:53.040 --> 00:29:54.390\nAnd hopefully, we'll see you there.\n\n621\n00:29:54.390 --> 00:29:56.870\nThanks, Don, for joining us,\nand thanks for watching.\n\n622\n00:29:56.870 --> 00:30:00.250\nSigning off for IT Pro TV,\nI've been your host, Daniel Lowrie.\n\n623\n00:30:00.250 --> 00:30:00.870\n>> And I'm Don Pezet.\n\n624\n00:30:00.870 --> 00:30:01.960\n>> And we'll see you next time.\n\n625\n00:30:01.960 --> 00:30:07.260\n[MUSIC]\n\n",
          "vimeoId": "146914192"
        }
      ],
      "title": "Relational Database Service"
    },
    {
      "episodes": [
        {
          "description": "In this episode, Don and Daniel explore AWS Orchestration services, which includes CloudFormation, Elastic Beanstalk, and OpsWork. They describe the differences and similarities between the services as well as explain why you would use one over the other. Then they demonstrate each one of these services to give you a practical look at each one in action.",
          "length": "1906",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/amazon-acsa/amazon-acsa-8-1-automation_orchestration-121615-1.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/amazon-acsa/amazon-acsa-8-1-automation_orchestration-121615-1-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/amazon-acsa/amazon-acsa-8-1-automation_orchestration-121615-1-sm.jpg",
          "title": "Automation and Orchestration",
          "transcript": "WEBVTT\n\n1\n00:00:00.005 --> 00:00:03.327\n[SOUND]\n\n2\n00:00:03.327 --> 00:00:12.046\n[MUSIC]\n\n3\n00:00:12.046 --> 00:00:16.349\nAll right, greetings everyone and welcome\nto another great episode of ITProTV,\n\n4\n00:00:16.349 --> 00:00:20.649\nI'm your host Daniel Lowrie and todays\nepisode we're continuing on our series,\n\n5\n00:00:20.649 --> 00:00:22.560\nAWOS Certified Sysops admin.\n\n6\n00:00:22.560 --> 00:00:25.146\nAnd joining us again is none\nother than my good friend Mr.\n\n7\n00:00:25.146 --> 00:00:27.070\nDon Pazette, Don, welcome to the show.\n\n8\n00:00:27.070 --> 00:00:27.950\nWe're glad to have you sir.\n\n9\n00:00:27.950 --> 00:00:29.270\n>> Thanks for having me back Daniel.\n\n10\n00:00:29.270 --> 00:00:34.052\nAnd in this episode we're gonna be diving\ninto a neat topic, it is the biggest\n\n11\n00:00:34.052 --> 00:00:38.628\nwords for a topic ever, the Automation and\nOrchestration Pieces of AWS.\n\n12\n00:00:38.628 --> 00:00:43.126\nThere's some really cool functionality\nbuilt into AWS, that's designed to make\n\n13\n00:00:43.126 --> 00:00:46.791\nlife easier for people that\nare following into the developer role or\n\n14\n00:00:46.791 --> 00:00:50.470\neven the DevOps role that we're\nseeing a lot more of out there.\n\n15\n00:00:50.470 --> 00:00:55.170\nSo we're gonna take a look at ways\nthat we can manage our assets to\n\n16\n00:00:55.170 --> 00:00:58.780\npush applications into AWS with\nas little effort as possible.\n\n17\n00:00:58.780 --> 00:01:01.730\nAnd take full advantage of\nwhat's available inside AWS, so\n\n18\n00:01:01.730 --> 00:01:03.510\nwe've got some great topics\nto cover on this one.\n\n19\n00:01:03.510 --> 00:01:06.417\n>> Yeah I'm really looking forward to\nthis, cuz when I see automation and\n\n20\n00:01:06.417 --> 00:01:07.677\norchestration put together,\n\n21\n00:01:07.677 --> 00:01:10.075\nI think scatter systems that\nbuild musical instruments.\n\n22\n00:01:10.075 --> 00:01:11.003\nBut probably not.\n\n23\n00:01:11.003 --> 00:01:11.671\n[LAUGH]\n>> [LAUGH]\n\n24\n00:01:11.671 --> 00:01:13.553\n>> It's actually us being able to have\n\n25\n00:01:13.553 --> 00:01:18.150\na more fine-tuned control and then let the\nsystem take care of itself, right, Don?\n\n26\n00:01:18.150 --> 00:01:20.680\n>> Yeah.\nApplications are a lot more complex today\n\n27\n00:01:20.680 --> 00:01:21.830\nthan they used to be.\n\n28\n00:01:21.830 --> 00:01:23.820\nSo back in the day,\nif I had an application what did I do?\n\n29\n00:01:23.820 --> 00:01:26.580\nI had a server and I just installed\nthe application on there and that was it.\n\n30\n00:01:26.580 --> 00:01:27.940\nIt did its work.\n\n31\n00:01:27.940 --> 00:01:31.160\nBut now applications\nare spread out a little more.\n\n32\n00:01:31.160 --> 00:01:32.910\nYou've got a web server.\n\n33\n00:01:32.910 --> 00:01:34.080\nYou've got a database server.\n\n34\n00:01:34.080 --> 00:01:35.650\nThe web server, the clients connect to.\n\n35\n00:01:35.650 --> 00:01:38.100\nThe web server connects to\nthe database to get the data.\n\n36\n00:01:38.100 --> 00:01:42.230\nYou might have an application server\nthat's sitting in between that's\n\n37\n00:01:42.230 --> 00:01:46.760\nperforming some other kind of action that\nthe users are actually interacting with.\n\n38\n00:01:46.760 --> 00:01:49.680\nThen you might have\nvarious virtual networks.\n\n39\n00:01:49.680 --> 00:01:50.630\nYou might have static IPs.\n\n40\n00:01:50.630 --> 00:01:52.660\nYou might have elastic load balancers.\n\n41\n00:01:52.660 --> 00:01:55.570\nAll these different\ncomponents that come together\n\n42\n00:01:55.570 --> 00:01:58.740\nto form what people see\nas your application.\n\n43\n00:01:58.740 --> 00:02:01.920\nSo your one application is made\nup of many different components.\n\n44\n00:02:01.920 --> 00:02:05.950\nAnd you can set it up as each of those\ncomponents individually, but there's so\n\n45\n00:02:05.950 --> 00:02:07.380\nmuch room for mistake.\n\n46\n00:02:07.380 --> 00:02:09.710\nAnd if you ever need to\nclone your environment,\n\n47\n00:02:09.710 --> 00:02:12.930\nyou've gotta clone all those little\npieces and how they work together.\n\n48\n00:02:12.930 --> 00:02:13.880\nAnd that's a nightmare.\n\n49\n00:02:13.880 --> 00:02:15.650\nIt's really, really difficult.\n\n50\n00:02:15.650 --> 00:02:21.550\nWell, Amazon has not one, not two,\nbut three different solutions for\n\n51\n00:02:21.550 --> 00:02:25.890\nbundling all that stuff together so\nit can be treated as one big object.\n\n52\n00:02:25.890 --> 00:02:28.700\nInstead of having treated as\nall the individual pieces.\n\n53\n00:02:28.700 --> 00:02:30.260\nAnd then if I ever need\nto clone the environment,\n\n54\n00:02:30.260 --> 00:02:33.070\nI just clone this one big bundle and\nit all comes along.\n\n55\n00:02:33.070 --> 00:02:34.980\nOr if I ever have a failure and\nI need to restore,\n\n56\n00:02:34.980 --> 00:02:38.860\nI can restore just that bundle and\nit restores my entire application.\n\n57\n00:02:38.860 --> 00:02:42.930\nIt makes it super easy to develop\nan application in one Amazon account and\n\n58\n00:02:42.930 --> 00:02:45.100\nthen turn around and deploy it in another.\n\n59\n00:02:45.100 --> 00:02:47.780\nSo if you're a developer, you might\ncreate it in your own demo account and\n\n60\n00:02:47.780 --> 00:02:49.900\nthen move it off to your\nclient's account afterwards.\n\n61\n00:02:49.900 --> 00:02:52.733\nSo you get some really neat\nflexibility and functionality.\n\n62\n00:02:52.733 --> 00:02:56.837\nNow, I mention there's three different\nplatforms, which one do we use?\n\n63\n00:02:56.837 --> 00:03:00.130\nWell, we need to take a look at each of\nthe different three and figure out which\n\n64\n00:03:00.130 --> 00:03:03.575\none meets out needs and Amazon has one in\nparticular that they want you to use, but\n\n65\n00:03:03.575 --> 00:03:05.770\nyou really have all\nthree at your disposal.\n\n66\n00:03:05.770 --> 00:03:09.760\n>> Yeah, the first question that pops\nin my head is, why do we have three,\n\n67\n00:03:09.760 --> 00:03:11.940\nif they all basically do the same thing.\n\n68\n00:03:11.940 --> 00:03:15.120\nWhat's the purpose of having\nthree of them that are available?\n\n69\n00:03:15.120 --> 00:03:19.150\nI'm assuming its because some do\nthings that the others don't do but\n\n70\n00:03:19.150 --> 00:03:20.060\nor they do it better.\n\n71\n00:03:20.060 --> 00:03:21.900\n>> Well, it is and it isn't.\n\n72\n00:03:21.900 --> 00:03:26.010\nIt is really more about the fact\nthat this is really important.\n\n73\n00:03:26.010 --> 00:03:27.520\nRight?\nYou can roll up your\n\n74\n00:03:27.520 --> 00:03:29.420\nentire application in this framework.\n\n75\n00:03:29.420 --> 00:03:32.020\nAnd so if Amazon called one day and\nsay, hey we released this new thing,\n\n76\n00:03:32.020 --> 00:03:35.090\nwe want you to switch to,\nwe're getting rid of the old one.\n\n77\n00:03:35.090 --> 00:03:38.540\nYeah, you're gonna choke like oh my gosh,\nI got my entire application.\n\n78\n00:03:38.540 --> 00:03:40.160\nNot one piece, not two pieces,\n\n79\n00:03:40.160 --> 00:03:42.820\nbut the entire application is\nrolled up in this infrastructure.\n\n80\n00:03:42.820 --> 00:03:47.762\nAnd so some of these Amazon capes run just\nbecause backwards compatibility, right?\n\n81\n00:03:47.762 --> 00:03:50.090\nTo support people that were already\ndeployed in the environment.\n\n82\n00:03:50.090 --> 00:03:53.240\nSo for example, the first one\nreleased was elastic bean stalk.\n\n83\n00:03:53.240 --> 00:03:56.240\nAnd if you have your\napplication fully automated,\n\n84\n00:03:56.240 --> 00:04:00.200\ndeployed in Elastic Beanstalk\nthere might not be an advantage to\n\n85\n00:04:00.200 --> 00:04:03.260\nsome of the newer platforms that\nyou're ready to take advantage of.\n\n86\n00:04:03.260 --> 00:04:05.620\nSo you just stay in Elastic Beanstalk,\nand you can do that.\n\n87\n00:04:05.620 --> 00:04:07.470\nAmazon is not getting rid of it, right?\n\n88\n00:04:07.470 --> 00:04:10.380\nBut they make it easy to migrate\ninto the next one that came out\n\n89\n00:04:10.380 --> 00:04:12.070\nwhich was CloudFormation.\n\n90\n00:04:12.070 --> 00:04:14.480\nBut then after CloudFormation,\nwe had OpsWorks.\n\n91\n00:04:14.480 --> 00:04:15.560\nThat's the third one.\n\n92\n00:04:15.560 --> 00:04:17.720\nAnd OpsWorks is the one that\nAmazon wants you to use today.\n\n93\n00:04:17.720 --> 00:04:20.170\nSo if you're doing a new deployment,\nyou deploy into OpsWorks.\n\n94\n00:04:20.170 --> 00:04:21.240\nThat's the way to go.\n\n95\n00:04:21.240 --> 00:04:24.360\nBut if you were in one of the previous\ntwo, they're still there, right, so\n\n96\n00:04:24.360 --> 00:04:25.770\nyou can choose to use them.\n\n97\n00:04:25.770 --> 00:04:29.250\nAnd each one is kind of suited for\na slightly different environment.\n\n98\n00:04:29.250 --> 00:04:31.091\nRight?\nLet's take a look at each of them and\n\n99\n00:04:31.091 --> 00:04:32.810\nget kind of a chance to see it.\n\n100\n00:04:32.810 --> 00:04:34.810\nThe first one I want to talk\nabout is cloud formation.\n\n101\n00:04:34.810 --> 00:04:35.795\nIt is kind of the middle one.\n\n102\n00:04:35.795 --> 00:04:37.900\nI'll go out of order on release times.\n\n103\n00:04:37.900 --> 00:04:41.120\nCloud formation was really designed for\ndevelopers, right?\n\n104\n00:04:41.120 --> 00:04:42.010\nI'm not a developer.\n\n105\n00:04:42.010 --> 00:04:45.365\nI had took a couple semester in\ncollege and haven't kept up with it so\n\n106\n00:04:45.365 --> 00:04:49.090\nI'm not a developer, but if you're\nsomebody who writes applications,\n\n107\n00:04:49.090 --> 00:04:54.530\nyou can create these templates and\nthe template can define your application.\n\n108\n00:04:54.530 --> 00:04:58.660\nSo you can say, I need a web server that's\nconfigured this way, I need five database\n\n109\n00:04:58.660 --> 00:05:02.260\nservers and ten web servers, I need\nan application server that does this.\n\n110\n00:05:02.260 --> 00:05:04.550\nI need a load balancer\nconfigure to do that and\n\n111\n00:05:04.550 --> 00:05:07.040\nyou can define it all in\nwhat are called JSON files.\n\n112\n00:05:07.040 --> 00:05:11.370\nAnd JSON files are just text files that\ngive detailed information laid out in\n\n113\n00:05:11.370 --> 00:05:14.650\na certain kind of schema,\nit's a very similar to XML.\n\n114\n00:05:14.650 --> 00:05:19.030\nAnd you can upload those JSON\nfiles into cloud formation and\n\n115\n00:05:19.030 --> 00:05:22.600\nit will spin up the exact\nenvironment that you asked for.\n\n116\n00:05:22.600 --> 00:05:26.600\nAnd so you can instantly\ndeploy a very complex solution\n\n117\n00:05:26.600 --> 00:05:28.930\nby just submitting some\nvery complex config files.\n\n118\n00:05:28.930 --> 00:05:31.430\n[LAUGH] So even if I show you that,\nhere, let me go into the console.\n\n119\n00:05:31.430 --> 00:05:35.280\nIf I jump into CloudFormation,\nyou'll even see it in the description for\n\n120\n00:05:35.280 --> 00:05:37.740\nCloud formation right here\nwhere it says create and\n\n121\n00:05:37.740 --> 00:05:40.850\nmanage resources with templates, right?\n\n122\n00:05:40.850 --> 00:05:44.560\nIf you have a template,\nyou can jump right in here.\n\n123\n00:05:44.560 --> 00:05:46.700\nYou can do what's called creating a stack.\n\n124\n00:05:47.720 --> 00:05:51.540\nAnd the stack, well,\nit's gonna have your template, all right?\n\n125\n00:05:51.540 --> 00:05:53.910\nNow a stack is a collection of resources.\n\n126\n00:05:53.910 --> 00:05:57.190\nAnd inside of a stack you have layers and\neach layer represents something.\n\n127\n00:05:57.190 --> 00:06:02.100\nYou might have web server layer, database\nlayer, application server layer and\n\n128\n00:06:02.100 --> 00:06:04.490\nso on,\nall wrapped up into this one big stack.\n\n129\n00:06:04.490 --> 00:06:06.690\nThat's that bundle I was talking about.\n\n130\n00:06:06.690 --> 00:06:08.770\nAnd if you've got a template,\nyou can upload one, right?\n\n131\n00:06:08.770 --> 00:06:12.350\nSo I can upload a template right into\nS3 if I've written my own JSON files.\n\n132\n00:06:12.350 --> 00:06:15.110\nI can pick from an existing template,\nand they've got a few.\n\n133\n00:06:15.110 --> 00:06:17.500\nMaybe I wanna do a WordPress blog, right?\n\n134\n00:06:17.500 --> 00:06:21.850\nAnd so I can choose that, and it's got\nthe servers and resources that we need or\n\n135\n00:06:21.850 --> 00:06:23.090\nwe can create our own.\n\n136\n00:06:23.090 --> 00:06:26.040\nAnd the design a template thing is\nactually kinda neat cuz it's almost like\n\n137\n00:06:26.040 --> 00:06:27.630\na graphical user interface.\n\n138\n00:06:27.630 --> 00:06:32.290\nYou can come in here and you can add,\nI'm gonna add an auto scaling group.\n\n139\n00:06:32.290 --> 00:06:35.730\nAnd an auto scaling group is gonna need\na launch configuration to tell it what to\n\n140\n00:06:35.730 --> 00:06:36.790\nlaunch, right.\n\n141\n00:06:36.790 --> 00:06:38.210\nAnd we can link these together.\n\n142\n00:06:38.210 --> 00:06:40.520\nWe can start to add in other things.\n\n143\n00:06:40.520 --> 00:06:45.560\nLike if I go into EC2, I'll probably\nneed an instance for a web server.\n\n144\n00:06:45.560 --> 00:06:47.720\nI'll need another instance for\na database server.\n\n145\n00:06:47.720 --> 00:06:50.390\nOr maybe I don't want to do just regular\ninstances for my database server.\n\n146\n00:06:50.390 --> 00:06:52.670\nMaybe I want to come in here and find RDS.\n\n147\n00:06:52.670 --> 00:06:55.270\nAnd I wanna launch a database.\n\n148\n00:06:56.340 --> 00:06:58.960\nSo I'll pick a database instance.\n\n149\n00:06:58.960 --> 00:07:04.190\nAnd so now maybe I've got a web server,\nan application server, a data base server.\n\n150\n00:07:04.190 --> 00:07:07.080\nI've got my auto scaling group for\nthe web servers and\n\n151\n00:07:07.080 --> 00:07:09.280\nlaunch configurations there,\nI might need a load balance server.\n\n152\n00:07:09.280 --> 00:07:14.060\nWhich I think I scrolled past earlier but\nyour elastic load balancing.\n\n153\n00:07:14.060 --> 00:07:17.350\nSo I can grab a loud balancer and\nthrow it in and you start building this.\n\n154\n00:07:17.350 --> 00:07:19.940\nAnd with each of these you'll notice\ndown at the bottom this little text.\n\n155\n00:07:19.940 --> 00:07:23.550\nThis is the JSON file that's building up\nthat describes that load balancer and\n\n156\n00:07:23.550 --> 00:07:29.090\nI've got to come in and provide additional\ndata that explains what depends on what,\n\n157\n00:07:29.090 --> 00:07:31.270\nwhat's linked to what, and so on.\n\n158\n00:07:31.270 --> 00:07:34.284\nAnd so there's a little bit\nto it as we go through and\n\n159\n00:07:34.284 --> 00:07:37.172\nwe start to connect these\ndifferent resources.\n\n160\n00:07:37.172 --> 00:07:40.780\nSee these little purple and pink dots?\n\n161\n00:07:40.780 --> 00:07:43.710\nAs I float over each one,\nthey mean something different, right.\n\n162\n00:07:43.710 --> 00:07:45.837\nSo if I take this database,\nwell here, let me take a web server.\n\n163\n00:07:45.837 --> 00:07:47.379\nSo this'll be my web server.\n\n164\n00:07:47.379 --> 00:07:51.813\nIf I float over a purple dot, this one\nis talking about a PlacementGroup,\n\n165\n00:07:51.813 --> 00:07:56.176\nthis purple dot is talking about\na NetworkInterface, this purple dot is\n\n166\n00:07:56.176 --> 00:08:00.921\ntalking about a SecurityGroup, and so\nover here if I find my Security Groups.\n\n167\n00:08:00.921 --> 00:08:06.730\nSo if I go under EC2 and I find a security\ngroup, I can deploy a security group and\n\n168\n00:08:06.730 --> 00:08:11.586\nthen, when I come up here,\nI can find my security group setting and\n\n169\n00:08:11.586 --> 00:08:16.110\nI can link that together and\nnow those are tied together.\n\n170\n00:08:16.110 --> 00:08:19.670\nSo when this instance deploys, it'll\nhave this security group applied to it.\n\n171\n00:08:19.670 --> 00:08:24.020\nAnd then there's a depends on, this pink\none and I can say it depends on this\n\n172\n00:08:24.020 --> 00:08:28.130\ndatabase, the web server is not going to\nfunction unless this database is online.\n\n173\n00:08:28.130 --> 00:08:29.690\nThat's where it's going\nto get it's data from, so\n\n174\n00:08:29.690 --> 00:08:31.700\nyou start to set these relationships and\n\n175\n00:08:31.700 --> 00:08:36.720\nthis is all getting defined\ndown here in these JSON files.\n\n176\n00:08:36.720 --> 00:08:39.380\nSo if I go under my metadata now I've\ngot a little bit more information, but\n\n177\n00:08:39.380 --> 00:08:43.990\nif I go to my mappings, my parameters,\nand I start choosing these resources,\n\n178\n00:08:43.990 --> 00:08:46.660\nif I choose the web server and\nI go to DependsOn,\n\n179\n00:08:46.660 --> 00:08:51.460\nnow it's got that DependsOn tied\nto that database identifier.\n\n180\n00:08:51.460 --> 00:08:54.650\nSo it's building that config file and you\ncan create a custom environment here, and\n\n181\n00:08:54.650 --> 00:08:59.010\nwhen you deploy it's going to deploy out,\nand\n\n182\n00:08:59.010 --> 00:09:02.860\nall of these resources will get\npublished and put in there, okay?\n\n183\n00:09:02.860 --> 00:09:05.380\nAnd so you can whip up a complex\nenvironment very quickly.\n\n184\n00:09:05.380 --> 00:09:08.520\nAnd because it's all defined in JSON\nfiles, you can save those files, and\n\n185\n00:09:08.520 --> 00:09:12.180\nyou can then deploy it in anybody's\nAmazon account, that infrastructure, and\n\n186\n00:09:12.180 --> 00:09:15.550\nit goes in, it just takes a lot of work to\nkind of map it out and get it in place.\n\n187\n00:09:15.550 --> 00:09:18.100\nI guess if you choose one of the sample\ntemplates it's less work, but\n\n188\n00:09:18.100 --> 00:09:21.720\nbuilding it yourself It's just a lot of\ninformation that has to go into it, right?\n\n189\n00:09:21.720 --> 00:09:25.640\nBut you can build that up and\ndo a full and quick deployment, right?\n\n190\n00:09:25.640 --> 00:09:28.450\nNow cloud formation, for the most part,\n\n191\n00:09:28.450 --> 00:09:31.480\ndoes require us to write\na lot of config files.\n\n192\n00:09:31.480 --> 00:09:34.410\nElastic Beanstalk wasn't\ndesigned that way.\n\n193\n00:09:34.410 --> 00:09:38.760\nElastic Beanstalk actually came first, and\nwhat it did is it made things really easy,\n\n194\n00:09:38.760 --> 00:09:40.790\nand the sacrifice was control.\n\n195\n00:09:40.790 --> 00:09:44.600\nCloud formation gives me\nthe most control possible.\n\n196\n00:09:44.600 --> 00:09:46.540\nYou guys saw,\nI can drive in every element.\n\n197\n00:09:46.540 --> 00:09:47.610\nI can setup my dependencies.\n\n198\n00:09:47.610 --> 00:09:50.480\nI control every aspect of cloud formation.\n\n199\n00:09:50.480 --> 00:09:51.850\nWhich means, it's a lot of work.\n\n200\n00:09:51.850 --> 00:09:52.490\nRight?\n\n201\n00:09:52.490 --> 00:09:55.700\nAnd for a regular admin, you don't have\n\n202\n00:09:55.700 --> 00:09:58.430\nnecessarily any answer to all\nthe questions that are in cloud formation.\n\n203\n00:09:58.430 --> 00:09:59.320\nAs a developer you do.\n\n204\n00:09:59.320 --> 00:10:01.100\nSo, it's very developer-centric.\n\n205\n00:10:01.100 --> 00:10:04.870\nRight, well, developers don't\nnecessarily have the answers\n\n206\n00:10:04.870 --> 00:10:07.090\nto the questions that an admin would.\n\n207\n00:10:07.090 --> 00:10:10.600\nSo for example, a developer might say I\nneed a database server, but I don't know\n\n208\n00:10:10.600 --> 00:10:14.580\nwhether I need provisioned IOPs or\nthis or that, they don't know that.\n\n209\n00:10:14.580 --> 00:10:19.690\nSo for a developer, elastic beanstalk is\nanother option, because they can deploy\n\n210\n00:10:19.690 --> 00:10:22.240\ntheir app and not have to worry about\nany of the underlying infrastructure.\n\n211\n00:10:22.240 --> 00:10:24.990\nYou give up a lot of control\nwith elastic bean stalk.\n\n212\n00:10:24.990 --> 00:10:30.170\nSo, if I go back out here to my console,\nand I go to elastic bean stalk.\n\n213\n00:10:31.310 --> 00:10:33.780\nI can come in here and\nI can deploy an application.\n\n214\n00:10:33.780 --> 00:10:37.960\nApparently, I deployed one earlier,\nso I've left one running.\n\n215\n00:10:37.960 --> 00:10:39.150\nBut you can deploy an application, and\n\n216\n00:10:39.150 --> 00:10:43.170\nwhen you deploy one in here, it's actually\npretty neat the way that it works.\n\n217\n00:10:43.170 --> 00:10:45.800\nI'm just going to hit\nCreate New Application up here.\n\n218\n00:10:45.800 --> 00:10:53.390\nBecause I give it a name, and so\nmaybe this is itprotv-webapp02,\n\n219\n00:10:53.390 --> 00:10:57.090\nand I'll go and deploy it.\n\n220\n00:10:57.090 --> 00:10:59.950\nAnd what it's going to ask me is,\nis what I want to create.\n\n221\n00:10:59.950 --> 00:11:02.900\nAnd see how its asking me if I\nwant to create a web server or\n\n222\n00:11:02.900 --> 00:11:04.330\na worker environment, right?\n\n223\n00:11:04.330 --> 00:11:07.770\nSo, is this going to be running some\nprogram or is it just a web application?\n\n224\n00:11:07.770 --> 00:11:10.220\nAnd mine's a web application so\nI'll create a web server.\n\n225\n00:11:10.220 --> 00:11:12.820\nAnd after that,\nit's going to ask me a few questions,\n\n226\n00:11:12.820 --> 00:11:15.950\nand It can start to get a little\ncomplex on some of these.\n\n227\n00:11:15.950 --> 00:11:20.640\nWe can choose to go really detailed\non this, or we can go really simple.\n\n228\n00:11:20.640 --> 00:11:24.610\nAnd this is the important part, is we can\nchoose a pre-configured configuration.\n\n229\n00:11:24.610 --> 00:11:28.260\nWe can say look, I don't know about hard\ndrives and databases and I don't know\n\n230\n00:11:28.260 --> 00:11:31.976\nabout all that stuff, I just know that\nI've written the sweetest PHP app ever.\n\n231\n00:11:31.976 --> 00:11:33.470\nAnd I want to run that PHP app and\n\n232\n00:11:33.470 --> 00:11:35.790\nI just need an environment\nthat can handle it, okay.\n\n233\n00:11:35.790 --> 00:11:36.520\nSo we tell it that.\n\n234\n00:11:36.520 --> 00:11:40.610\nWe tell it, hey, I want PHP and yeah,\nlet's do load balancing auto scaling.\n\n235\n00:11:40.610 --> 00:11:42.550\nThat sounds awesome, sure, right.\n\n236\n00:11:42.550 --> 00:11:43.830\nBut I don't know how to configure it.\n\n237\n00:11:43.830 --> 00:11:47.560\nWe just turn that on and\nthen we move forward.\n\n238\n00:11:47.560 --> 00:11:50.540\nAnd it's going to ask me\nwhere is my application?\n\n239\n00:11:50.540 --> 00:11:52.700\nOkay, well I wrote a PHP application.\n\n240\n00:11:52.700 --> 00:11:53.570\nI don't actually write it,\n\n241\n00:11:53.570 --> 00:11:57.060\nI download it from Amazon and\nI'm just going to upload it to the server.\n\n242\n00:11:57.060 --> 00:11:58.790\nAnd so, I can come in here and\ntell that I'm going to upload it or\n\n243\n00:11:58.790 --> 00:12:02.840\nyou can come from S3 if you want, and some\nupload it from a file in my hard drive.\n\n244\n00:12:02.840 --> 00:12:09.400\nAnd so I'll take this file and\nthat contains my PHP application.\n\n245\n00:12:09.400 --> 00:12:13.200\nAnd so we're going to upload that,\nand if I choose to,\n\n246\n00:12:13.200 --> 00:12:14.810\nI can start to modify my environment.\n\n247\n00:12:14.810 --> 00:12:17.860\nBut honestly, at this point,\nI can just let it ride.\n\n248\n00:12:17.860 --> 00:12:20.880\nYou know, it's got a URL that\nI can access it at, right?\n\n249\n00:12:20.880 --> 00:12:27.160\nSo this one's going to be\nitvprotvwebappo2-env.elasticbeanstalk.com,\n\n250\n00:12:27.160 --> 00:12:28.680\nand the rest of this,\n\n251\n00:12:28.680 --> 00:12:32.200\nI can really honestly just click\nnext a bunch on every other option.\n\n252\n00:12:32.200 --> 00:12:36.730\nYou can tweet things like whether we\nwant an RDS database created with it.\n\n253\n00:12:36.730 --> 00:12:39.350\nDo I need a database that\ngoes along with this one?\n\n254\n00:12:39.350 --> 00:12:41.240\nShould it be created in its own VPC?\n\n255\n00:12:41.240 --> 00:12:46.070\nI don't have to know how to do those\nthings, I just need to tell it to do it.\n\n256\n00:12:46.070 --> 00:12:46.610\nRight.\n\n257\n00:12:46.610 --> 00:12:51.670\nAnd then as I move forward, I can\nconfigure my SSH keys and access if I need\n\n258\n00:12:51.670 --> 00:12:57.400\nthat, if I don't I can just not mess with\nit, but I'll set mine to my access here.\n\n259\n00:12:57.400 --> 00:13:00.270\nMost of these are actually optional, you\ndon't have to fill them out, let's see if\n\n260\n00:13:00.270 --> 00:13:05.250\nit complains, so see I just move right\npast it and we can set those values and\n\n261\n00:13:05.250 --> 00:13:10.220\nonce it's done, it's going to upload\nthat file that contained my PHP app.\n\n262\n00:13:10.220 --> 00:13:13.100\nAnd in the background it's actually\nspinning up an instance, it's setting up\n\n263\n00:13:13.100 --> 00:13:15.970\nload balancing or auto-scaling or\nwhatever it is that I asked for it.\n\n264\n00:13:15.970 --> 00:13:20.230\nSetting up all that stuff, and\nI didn't have to know how to do it.\n\n265\n00:13:20.230 --> 00:13:23.100\nOh, it is actually asking\nme to set a roll here,\n\n266\n00:13:23.100 --> 00:13:24.560\nwhich I'll just go with the default and\nallow that.\n\n267\n00:13:25.700 --> 00:13:30.700\nAnd there we go, so now it's going to\ndeploy this and my PHP application will\n\n268\n00:13:30.700 --> 00:13:34.050\nnow be up and running, and all I had to\nknow was how to write a PHP application\n\n269\n00:13:34.050 --> 00:13:38.240\nbecause developers focus on what they\nknow, but we give up a lot of control,\n\n270\n00:13:38.240 --> 00:13:41.530\nI don't know what instances I have in\nthe background I don't know what size they\n\n271\n00:13:41.530 --> 00:13:45.140\nare right, it's kind of taking care of\nthat for me and it's speeding it up, but\n\n272\n00:13:45.140 --> 00:13:49.050\non the flip side of that coin I don't\nhave to worry about it, I don't have to\n\n273\n00:13:49.050 --> 00:13:53.590\nworry about what version of PHP I'm\nrunning, or whether PHP's been updated.\n\n274\n00:13:53.590 --> 00:13:54.737\nThey're going to take care of that,\n\n275\n00:13:54.737 --> 00:13:57.142\nI don't have to worry about what operating\nsystem my instances are running,\n\n276\n00:13:57.142 --> 00:13:58.840\nbecause they're going\nto take care of that.\n\n277\n00:13:58.840 --> 00:14:01.592\nIf I spun up a database, I don't have to\nworry about backing it up because they're\n\n278\n00:14:01.592 --> 00:14:02.740\ngoing to take care of that.\n\n279\n00:14:02.740 --> 00:14:06.520\nAll I had to do was upload my PHP\napplication, or Ruby, Python, Pearl,\n\n280\n00:14:06.520 --> 00:14:09.810\nthey've got all sorts of languages,\nyou guys saw the drop down box.\n\n281\n00:14:09.810 --> 00:14:11.760\nThat you can upload and get in there.\n\n282\n00:14:11.760 --> 00:14:16.049\nAnd then once it's in there, I can just\nbrowse that URL that we saw earlier.\n\n283\n00:14:16.049 --> 00:14:18.848\nMine won't be up yet, but\n\n284\n00:14:18.848 --> 00:14:24.589\nit was\nitprotvwebapp2.elasticbeanstalk.com.\n\n285\n00:14:24.589 --> 00:14:27.302\nAnd whenever that comes up,\nI'll be able to browse to it and\n\n286\n00:14:27.302 --> 00:14:30.613\nI'll just see the little web page that\nis my sad little app that I put up and\n\n287\n00:14:30.613 --> 00:14:32.560\nthat will be up and functioning.\n\n288\n00:14:32.560 --> 00:14:37.710\nWhat Elastic Beanstalk does is it\nbundles all those resources together,\n\n289\n00:14:37.710 --> 00:14:41.320\nbut hides them from you, so\nyou don't necessarily see them.\n\n290\n00:14:41.320 --> 00:14:45.260\nCloud formation bundled all these things\ntogether, but they were very visible.\n\n291\n00:14:45.260 --> 00:14:49.070\nWe built the template, we know exactly\nwhat's going on behind the scenes.\n\n292\n00:14:49.070 --> 00:14:49.800\nAnd the reality is,\n\n293\n00:14:49.800 --> 00:14:54.310\nwhen Amazon released Cloud Formation, they\nactually made Elastic Beanstalk where when\n\n294\n00:14:54.310 --> 00:14:58.270\nit would deploy it creates a cloud\nformation management bundle.\n\n295\n00:14:58.270 --> 00:15:04.340\nSo if I go back to my Cloud formation,\nwhen I look over here,\n\n296\n00:15:04.340 --> 00:15:07.410\nsee how I've got a new stack being\nbuilt here in Cloud formation?\n\n297\n00:15:07.410 --> 00:15:10.200\nSo even though I used Elastic Beanstalk\nit's actually tied here into\n\n298\n00:15:10.200 --> 00:15:10.910\nCloud formation.\n\n299\n00:15:10.910 --> 00:15:12.790\nAnd so it's building it up right there.\n\n300\n00:15:12.790 --> 00:15:17.440\nAnd that'll be that PHP web app that I\njust deployed, so it's going to basically\n\n301\n00:15:17.440 --> 00:15:20.223\nfire up, and then when it's done I can\nactually go in and edit it's template and\n\n302\n00:15:20.223 --> 00:15:23.110\nkind of see its layout and how it\nbuilt the dependencies and all that.\n\n303\n00:15:23.110 --> 00:15:24.580\nSo you can use the two together.\n\n304\n00:15:24.580 --> 00:15:28.720\nYou can use Elastic Beanstalk by itself,\nyou can use cloud formation by itself, but\n\n305\n00:15:28.720 --> 00:15:30.260\nif you use Elastic Beanstalk by itself,\n\n306\n00:15:30.260 --> 00:15:31.960\nit's actually creating\nthings in cloud formation.\n\n307\n00:15:31.960 --> 00:15:33.430\nSo you kind of end up using both of them.\n\n308\n00:15:33.430 --> 00:15:38.500\n>> So, Don, would you say Elastic\nBeanstalk is a really good place to start\n\n309\n00:15:38.500 --> 00:15:42.540\nif you're new to AWS, get your feet wet\nwith Elastic Beanstalk, just kind of doing\n\n310\n00:15:42.540 --> 00:15:48.240\nstuff for you, assumes a lower level\nof understanding and since it ties into\n\n311\n00:15:48.240 --> 00:15:52.420\nour cloud formation, you can then start\nmigrating your way toward using that?\n\n312\n00:15:52.420 --> 00:15:54.420\n>> Well you certainly could do that.\n\n313\n00:15:54.420 --> 00:15:56.712\nI would agree with most of what you said,\nright?\n\n314\n00:15:56.712 --> 00:15:59.535\nThat Elastic Beanstock is easier\nbecause you don't have to know\n\n315\n00:15:59.535 --> 00:16:00.587\nthe underlying stuff.\n\n316\n00:16:00.587 --> 00:16:03.446\nCloudFormation gives you the control so\nyou can really get involved, and\n\n317\n00:16:03.446 --> 00:16:06.160\nmaybe you progress from one\nto the other over time.\n\n318\n00:16:06.160 --> 00:16:10.530\nBut in my opinion, the best thing to do,\non the exam we need to know all three, but\n\n319\n00:16:10.530 --> 00:16:12.840\nin real life, the best thing to\ndo is if this is new to you,\n\n320\n00:16:12.840 --> 00:16:16.040\njust skip Elastic Beanstalk and\nCloudFormation, go right to OpsWorks.\n\n321\n00:16:16.040 --> 00:16:19.250\nRight, Amazon, or AWS OpsWork,\n\n322\n00:16:19.250 --> 00:16:24.090\nits a new management product, I say its\nnew, its actually built on top of Chef,\n\n323\n00:16:24.090 --> 00:16:27.370\nChef has been around in\nthe Linux world for a long time,\n\n324\n00:16:27.370 --> 00:16:32.598\nits a very robust management platform and\nits just integrated in to AWS now.\n\n325\n00:16:32.598 --> 00:16:38.130\nAnd what OpsWorks does is it let's you\ndecide how involved you wanna get.\n\n326\n00:16:38.130 --> 00:16:42.420\nYou can get really involved in the\nconfiguration and deployment templates or\n\n327\n00:16:42.420 --> 00:16:45.060\nyou can go really high level and\nnot get involved at all.\n\n328\n00:16:45.060 --> 00:16:46.760\nIt's up to you to choose.\n\n329\n00:16:46.760 --> 00:16:51.760\nSo versus Elastic being really easy and\nthen CloudFormation\n\n330\n00:16:51.760 --> 00:16:55.660\nbeing hard here it's OpsWorks, and\nit can be both, it can be easy and hard.\n\n331\n00:16:55.660 --> 00:16:59.980\nAnd the best part about that is, you can\nstart easy and as you learn more and\n\n332\n00:16:59.980 --> 00:17:03.120\ndevelop more and want more control,\nyou can start taking that control.\n\n333\n00:17:03.120 --> 00:17:04.730\nAnd you're not having to\nmigrate to a different service,\n\n334\n00:17:04.730 --> 00:17:06.070\nit's all done in OpsWorks.\n\n335\n00:17:06.070 --> 00:17:09.610\nSo any time I talk to somebody\nin the field and they're like,\n\n336\n00:17:09.610 --> 00:17:11.270\nI'm trying to pick between these three.\n\n337\n00:17:11.270 --> 00:17:13.480\nI tell them, it's not really a pick,\njust go with OpsWorks.\n\n338\n00:17:13.480 --> 00:17:14.620\nJust do that one.\nBut,\n\n339\n00:17:14.620 --> 00:17:15.830\non the exam you need to know all three.\n\n340\n00:17:15.830 --> 00:17:18.410\nJust know that\nElastic Beanstalk is great for\n\n341\n00:17:18.410 --> 00:17:20.960\ndevelopers who don't care about\nthe underlying infrastructure.\n\n342\n00:17:20.960 --> 00:17:24.980\nI have the next great\nInternet startup company.\n\n343\n00:17:24.980 --> 00:17:25.870\nI've got this web app.\n\n344\n00:17:25.870 --> 00:17:27.590\nI'm creating the next Twitter.\n\n345\n00:17:27.590 --> 00:17:30.880\nAnd I just wanna role it out, I know PHP,\nI wrote this great thing or I know Ruby,\n\n346\n00:17:30.880 --> 00:17:33.480\nI know Perl, I wrote this great thing and\nI want it running.\n\n347\n00:17:33.480 --> 00:17:36.860\nI don't wanna hire system admins,\nI don't wanna run, you know,\n\n348\n00:17:36.860 --> 00:17:38.850\nyou didn't deal with\nthe lower infrastructure.\n\n349\n00:17:38.850 --> 00:17:40.770\nElastic Beanstalk works great.\n\n350\n00:17:40.770 --> 00:17:43.280\nOr, hey this is gonna scale fast.\n\n351\n00:17:43.280 --> 00:17:46.040\nI need staging environments,\nI need to be able to re-deploy quickly but\n\n352\n00:17:46.040 --> 00:17:47.130\nI want complete control.\n\n353\n00:17:47.130 --> 00:17:49.889\nLet's go CloudFormation, let's get\nthat all setup and get it deployed.\n\n354\n00:17:51.370 --> 00:17:54.170\nBut if it's all new let's\njust jump into OpsWorks and\n\n355\n00:17:54.170 --> 00:17:56.560\ngo that route cuz\nOpsWorks lets us do both.\n\n356\n00:17:56.560 --> 00:17:59.820\nLet me give you kind of a quick\nrundown of OpsWorks and\n\n357\n00:17:59.820 --> 00:18:00.870\nsome of the information about it.\n\n358\n00:18:00.870 --> 00:18:04.550\nSo it works with stacks and\nlayers just like I described before.\n\n359\n00:18:04.550 --> 00:18:05.280\nSo we have a stack.\n\n360\n00:18:05.280 --> 00:18:07.430\nThat's basically our application.\n\n361\n00:18:07.430 --> 00:18:08.840\nAnd inside of it we have layers.\n\n362\n00:18:08.840 --> 00:18:10.930\nAnd each layer represents some component.\n\n363\n00:18:10.930 --> 00:18:14.340\nIt might be our web servers,\nit might be our S3 storage,\n\n364\n00:18:14.340 --> 00:18:17.780\nit might be our application servers,\ndatabase servers and so on.\n\n365\n00:18:17.780 --> 00:18:19.220\nThey're all stored in layers.\n\n366\n00:18:19.220 --> 00:18:21.560\nAnd each layer can be\nconfigured independently.\n\n367\n00:18:21.560 --> 00:18:24.940\nSo I can have a load\nbalancer on one layer for\n\n368\n00:18:24.940 --> 00:18:26.840\ncustomers coming into the web front end.\n\n369\n00:18:26.840 --> 00:18:29.510\nI can have another load balancer\non my database layer for\n\n370\n00:18:29.510 --> 00:18:31.720\nload balancing across read replicas,\nright.\n\n371\n00:18:31.720 --> 00:18:32.940\nSo you can get some power there.\n\n372\n00:18:32.940 --> 00:18:35.730\nAnd you configure it on each layer.\n\n373\n00:18:35.730 --> 00:18:37.650\nBut it's all part of the same stack.\n\n374\n00:18:37.650 --> 00:18:40.700\nAnd so if I ever need to clone the\napplication, I just redeploy the stack.\n\n375\n00:18:40.700 --> 00:18:44.860\nOr if my application becomes damaged, I\ncan just delete it and redeploy the stack.\n\n376\n00:18:44.860 --> 00:18:48.639\nYou can quickly redeploy it, if everything\nis configured exactly the way that\n\n377\n00:18:48.639 --> 00:18:51.788\nit needed to be to get that application\nback up and running nice and\n\n378\n00:18:51.788 --> 00:18:55.911\nfast and if you're storing your data in\nS3, when you redeploy the new application,\n\n379\n00:18:55.911 --> 00:18:59.604\nit can just read the data from S3 and\nyou know its like nothing ever changed.\n\n380\n00:18:59.604 --> 00:19:02.327\nYou can rapidly repair an application, so\n\n381\n00:19:02.327 --> 00:19:07.631\nif you're about to roll out version 2.0,\nwell you build a new stack for 2.0.\n\n382\n00:19:07.631 --> 00:19:11.047\nYou've got you've got your stack for\n1.9 or whatever current version you're on,\n\n383\n00:19:11.047 --> 00:19:14.060\nyou roll out 2.0 and things blow up,\nlet me just delete it.\n\n384\n00:19:14.060 --> 00:19:16.270\nRedeploy 1.9 and\nnow you're back to that version.\n\n385\n00:19:16.270 --> 00:19:19.170\nEverything's fine, all your data's\ncurrent and you're back in business.\n\n386\n00:19:19.170 --> 00:19:20.760\nSo it makes life really, really easy.\n\n387\n00:19:20.760 --> 00:19:23.770\nSo, that's some of the stuff\nthat OpsWorks can do.\n\n388\n00:19:23.770 --> 00:19:28.020\nSome of the types of layers,\nI mentioned the main ones, web server,\n\n389\n00:19:28.020 --> 00:19:29.780\napplication server, database layer.\n\n390\n00:19:29.780 --> 00:19:32.370\nBut it could be load balancers,\nit could be caching servers.\n\n391\n00:19:32.370 --> 00:19:35.580\nIf you've got Memcached or Redis,\nif you're using ElastiCache,\n\n392\n00:19:35.580 --> 00:19:37.120\nyou can put that in there as a layer.\n\n393\n00:19:37.120 --> 00:19:40.570\nAnd distribute that across servers,\nthat makes it really convenient.\n\n394\n00:19:40.570 --> 00:19:44.310\nLet's see, some of the other things,\nwhen you deploy an instance,\n\n395\n00:19:44.310 --> 00:19:46.490\nan instance could be in\nmore than one layer.\n\n396\n00:19:46.490 --> 00:19:51.140\nSo I might have a database server\nthat's part of more than one layer, or\n\n397\n00:19:51.140 --> 00:19:53.640\na load balancer that's part\nof more than one layer.\n\n398\n00:19:53.640 --> 00:19:58.550\nEverything has to be on at least one\nlayer in order to be in the stack.\n\n399\n00:19:58.550 --> 00:20:01.200\nSo you can't have an instance that's not\nattached to a layer otherwise you wouldn't\n\n400\n00:20:01.200 --> 00:20:02.330\nbe doing anything, right?\n\n401\n00:20:02.330 --> 00:20:05.170\nBut it can be attached to more\nthan one layer if you need it.\n\n402\n00:20:05.170 --> 00:20:08.240\nI don't normally do that, I normally like\nto break things out but if it's a really\n\n403\n00:20:08.240 --> 00:20:12.620\nsmall app, I might be running the database\nand the web server on the same system,\n\n404\n00:20:12.620 --> 00:20:15.790\nit's all becomes a part of two layers,\nright, which you can certainly do.\n\n405\n00:20:15.790 --> 00:20:18.005\nWhich is not normally the best practice.\n\n406\n00:20:18.005 --> 00:20:19.900\n[LAUGH] Let's see.\n\n407\n00:20:19.900 --> 00:20:20.950\nSome of the other things.\n\n408\n00:20:22.870 --> 00:20:23.970\nAutomation, right?\n\n409\n00:20:23.970 --> 00:20:28.310\nAs far as automation, when we build\nup this package, this stack, and\n\n410\n00:20:28.310 --> 00:20:31.860\nget ready to deploy it, it's not just\ncontaining a bunch of instances or\n\n411\n00:20:31.860 --> 00:20:33.210\ndatabases and that's it.\n\n412\n00:20:33.210 --> 00:20:37.090\nIt's also containing other things like\nauto-scaling groups and load balancers.\n\n413\n00:20:37.090 --> 00:20:39.140\nSo if I wanna have autoscaling for\nmy web servers,\n\n414\n00:20:39.140 --> 00:20:41.300\nI can have the autoscale\nconfiguration as a part of it,\n\n415\n00:20:41.300 --> 00:20:44.680\nand they can be set up and\nready to run when it gets deployed.\n\n416\n00:20:44.680 --> 00:20:49.003\nSo automating things like that,\nautomating operating system updates,\n\n417\n00:20:49.003 --> 00:20:51.242\neven software application updates.\n\n418\n00:20:51.242 --> 00:20:53.290\nWe can automate that as part of the stack.\n\n419\n00:20:53.290 --> 00:20:54.990\nYou can build in how that's configured.\n\n420\n00:20:54.990 --> 00:20:59.100\nSo I might have 500 instances, and\nI decide to push an update out to that OS.\n\n421\n00:20:59.100 --> 00:21:03.120\nI can do it through OpsWorks,\nit gives you full management and control.\n\n422\n00:21:03.120 --> 00:21:05.110\nI mentioned it's using\nChef under the hood.\n\n423\n00:21:05.110 --> 00:21:07.880\nSo Chef is just automation software,\nthat's what it is.\n\n424\n00:21:07.880 --> 00:21:10.390\nAnd in Chef you build recipes.\n\n425\n00:21:10.390 --> 00:21:12.071\nAnd it's a Chef, recipes.\n\n426\n00:21:12.071 --> 00:21:13.099\n>> [LAUGH]\n>> [LAUGH] And so,\n\n427\n00:21:13.099 --> 00:21:16.780\nit's one of those silly names but\nit's easy to remember, right?\n\n428\n00:21:16.780 --> 00:21:20.300\nYou build these recipes, the recipes\nare telling the chef what to do.\n\n429\n00:21:20.300 --> 00:21:21.630\nAll the chef does is\nread the instructions.\n\n430\n00:21:21.630 --> 00:21:24.428\nOkay, I need to throw in a half a clove\nof garlic, I need a cup of sugar,\n\n431\n00:21:24.428 --> 00:21:26.475\nI need water,\nI don't know what I'm making here.\n\n432\n00:21:26.475 --> 00:21:27.650\n>> That sounds horrible.\n\n433\n00:21:27.650 --> 00:21:31.132\n>> Yeah, it's gonna be disgusting but\nwe tell it what to do.\n\n434\n00:21:31.132 --> 00:21:32.231\nThat's how OpsWorks functions.\n\n435\n00:21:32.231 --> 00:21:35.850\nRight, we tell it what to do, we build\nup our stack and then Chef just goes and\n\n436\n00:21:35.850 --> 00:21:39.520\ntakes care of it for us, deploys it,\ngets it put out in place, right?\n\n437\n00:21:39.520 --> 00:21:41.203\nAnd if there's a problem, what do we do?\n\n438\n00:21:41.203 --> 00:21:43.643\nWe send our dish back to the kitchen and\nthey re-cook it.\n\n439\n00:21:43.643 --> 00:21:45.764\nThat's how it works here,\nwe just blow away the application,\n\n440\n00:21:45.764 --> 00:21:46.800\nhave Chef redeploy it.\n\n441\n00:21:46.800 --> 00:21:48.600\nAnd then out it comes and there it goes.\n\n442\n00:21:48.600 --> 00:21:50.580\nWe don't necessarily worry\nabout freshness, but\n\n443\n00:21:50.580 --> 00:21:51.570\nwe do want it to function, right?\n\n444\n00:21:51.570 --> 00:21:55.280\nSo that's basically the way that\nthis thing works, all right.\n\n445\n00:21:55.280 --> 00:21:57.970\nNow, if you've never seen it before\nthen this sounds like a whole bunch of\n\n446\n00:21:57.970 --> 00:21:58.660\nmumbo jumbo.\n\n447\n00:21:58.660 --> 00:22:03.194\nSo let me kinda run through setting\nup an application in OpsWorks and\n\n448\n00:22:03.194 --> 00:22:04.714\ngetting it deployed.\n\n449\n00:22:04.714 --> 00:22:05.990\nYou'll see it's kinda neat.\n\n450\n00:22:05.990 --> 00:22:08.410\nNot necessarily the fastest thing on the\nplanet but it certainly does work well.\n\n451\n00:22:09.620 --> 00:22:10.770\nSo I'm gonna start here with my console.\n\n452\n00:22:10.770 --> 00:22:14.540\nI'm just gonna jump down to OpsWorks and\nI don't have any applications right now so\n\n453\n00:22:14.540 --> 00:22:17.630\nwhen I come in here it's the whole\nintroduction and all that.\n\n454\n00:22:17.630 --> 00:22:20.460\nAnd the first thing it's wanting\nme to do is to add my first stack.\n\n455\n00:22:20.460 --> 00:22:25.353\nNow for the exam, this button might come\nup over here, Register instances okay.\n\n456\n00:22:25.353 --> 00:22:30.237\nIf you're not using automation software at\nall, and you've got your application in,\n\n457\n00:22:30.237 --> 00:22:33.669\nyou just manually controlled\nall the different components,\n\n458\n00:22:33.669 --> 00:22:37.233\nyou brought up a regular instance,\na database server and so on,\n\n459\n00:22:37.233 --> 00:22:41.190\nyou can register them in OpsWorks and\nbuild a package around them.\n\n460\n00:22:41.190 --> 00:22:43.660\nSo you can kind of like retrofit\nyour current environment.\n\n461\n00:22:43.660 --> 00:22:46.750\nYou can also bring in on-premises servers.\n\n462\n00:22:46.750 --> 00:22:50.450\nIf you've got a connection, a VPN\ntunnel between your local network and\n\n463\n00:22:50.450 --> 00:22:53.860\nthe VPC, you can start to register those\nin, and they can become a part of it too.\n\n464\n00:22:53.860 --> 00:22:58.300\nWhich is pretty neat, because you can\nredeploy on-premises stuff, which is fun.\n\n465\n00:22:58.300 --> 00:23:01.610\nSo that one may come up,\nthat you can do that.\n\n466\n00:23:01.610 --> 00:23:04.260\nBut I'm gonna add my first stack,\nand when we go to add a stack,\n\n467\n00:23:04.260 --> 00:23:05.170\nit's gonna ask me to pick.\n\n468\n00:23:05.170 --> 00:23:08.080\nAnd they've got some samples,\nI'm not gonna use those,\n\n469\n00:23:08.080 --> 00:23:12.180\nwhere you can pick between Linux or\nWindows and it's just no JS.\n\n470\n00:23:12.180 --> 00:23:14.150\nLot of people are developing in no JS.\n\n471\n00:23:14.150 --> 00:23:16.350\nI've got a sample application\nnotice it's written in PHP so\n\n472\n00:23:16.350 --> 00:23:17.490\nthis isn't gonna help me.\n\n473\n00:23:17.490 --> 00:23:20.800\nSo I can choose between Chef 12 and\nChef 11.\n\n474\n00:23:20.800 --> 00:23:25.470\nOkay, with Chef 12,\nyou bring your own cookbooks.\n\n475\n00:23:25.470 --> 00:23:28.520\nSee how that says bring your own\ncookbooks or use community cookbooks.\n\n476\n00:23:28.520 --> 00:23:32.100\nSo, a cookbook is a collection of\nrecipes that builds an environment.\n\n477\n00:23:32.100 --> 00:23:35.090\nAnd if you go out and do a Google\nsearch you can find Chef recipes and\n\n478\n00:23:35.090 --> 00:23:36.940\ncookbooks for all sorts of stuff.\n\n479\n00:23:36.940 --> 00:23:39.750\nFull WordPress deployments,\nfull Drupal and so\n\n480\n00:23:39.750 --> 00:23:41.740\non, that´s all managed and easy to deploy.\n\n481\n00:23:43.010 --> 00:23:47.000\nBut if you do Chef 11,\nthey have built-in cookbooks.\n\n482\n00:23:47.000 --> 00:23:50.265\nAnd so if you wanna start with something\nthat's already pre-built, that's already\n\n483\n00:23:50.265 --> 00:23:53.547\nstored up on Amazon, we can use Chef 11,\nand that'll take care of that, all right?\n\n484\n00:23:53.547 --> 00:23:55.228\nChef 12 does have some advantages, but\n\n485\n00:23:55.228 --> 00:23:57.588\nAmazon hasn't rolled out any\npre-built recipes for it.\n\n486\n00:23:57.588 --> 00:24:00.922\nSo you're kinda on your own to go out and\nget those cookbooks.\n\n487\n00:24:00.922 --> 00:24:07.902\nThen I come in and I define my stack,\nso I'm gonna call this itprotv-webapp01.\n\n488\n00:24:07.902 --> 00:24:09.620\nAnd I don't think that one's taken.\n\n489\n00:24:09.620 --> 00:24:12.000\nI pick the region I want it to exist in.\n\n490\n00:24:12.000 --> 00:24:15.960\nI pick what operating system I want to\nrun on, I'll stick with Amazon Linux.\n\n491\n00:24:15.960 --> 00:24:20.230\nI can pick an SSH key, now the whole\npoint of this is we can rapidly deploy\n\n492\n00:24:20.230 --> 00:24:23.520\nan application and\nnever even have to log into our instances.\n\n493\n00:24:23.520 --> 00:24:25.690\nRight, but if you ever do need to log in,\n\n494\n00:24:25.690 --> 00:24:27.110\nit's kind of a good\nidea to have a key set.\n\n495\n00:24:27.110 --> 00:24:30.180\nSo I'll pick one of my admin\nkeys to be able to get to it.\n\n496\n00:24:30.180 --> 00:24:32.190\nI can pick the version\nof Chef I wanna support,\n\n497\n00:24:32.190 --> 00:24:34.060\nwhether I'm gonna use a custom cookbook or\nnot.\n\n498\n00:24:34.060 --> 00:24:36.020\nI'm not, I'm gonna use built-in stuff, and\n\n499\n00:24:36.020 --> 00:24:39.290\nthen the color of the stack, cuz you\ncan have more than one application.\n\n500\n00:24:39.290 --> 00:24:41.010\nYou assign it a color to keep track of it.\n\n501\n00:24:41.010 --> 00:24:43.899\nYou might have applications that are\nlinked, so you give them the same color.\n\n502\n00:24:45.300 --> 00:24:49.190\nAll right, when I go to add the stack,\nhere it goes.\n\n503\n00:24:49.190 --> 00:24:52.741\nIt's gonna create it,\nit tells me itprotv-webapp01.\n\n504\n00:24:52.741 --> 00:24:56.541\nThere it is, so\nI've got this new application here,\n\n505\n00:24:56.541 --> 00:25:00.110\nit's very, very, incredibly exciting.\n\n506\n00:25:00.110 --> 00:25:03.560\nAnd I need to come in and\nadd my first layer,\n\n507\n00:25:03.560 --> 00:25:05.890\nthe stack is useless without a layer,\nso that's kind of where I start.\n\n508\n00:25:05.890 --> 00:25:09.390\nNow, you see where I can add instances,\napps, resources, and so on.\n\n509\n00:25:09.390 --> 00:25:12.090\nI'm gonna start with just adding a layer,\nand for\n\n510\n00:25:12.090 --> 00:25:16.440\nmy layer, I'm gonna add my app server.\n\n511\n00:25:16.440 --> 00:25:19.670\nNow my app server, I said, was it gonna\nbe PHP, and it defaulted to Rails, so\n\n512\n00:25:19.670 --> 00:25:21.440\nI'm just gonna change that to PHP.\n\n513\n00:25:21.440 --> 00:25:25.450\nBut you can see all of these other ones\nthat I can pick from, MySQL, Ganglia,\n\n514\n00:25:25.450 --> 00:25:27.230\nRails, Node.js and so on.\n\n515\n00:25:27.230 --> 00:25:30.330\nSo you pick the language that your\napp is goinna be running, mine's PHP.\n\n516\n00:25:30.330 --> 00:25:36.761\nYou can also do ECS or RDS right, so, if\nI have some kind of database application,\n\n517\n00:25:36.761 --> 00:25:40.693\nbut that's far less common,\nso, I'll do a PHP.\n\n518\n00:25:40.693 --> 00:25:45.030\nSo I'm gonna deploy a PHP app and I could\nchoose if I wanna do a load balancer.\n\n519\n00:25:45.030 --> 00:25:47.570\nThis one's really small, so\nI'll leave the load balancer off for now,\n\n520\n00:25:47.570 --> 00:25:50.190\nno sense in doing that and\nI'll add a layer.\n\n521\n00:25:50.190 --> 00:25:52.500\nOkay, so now I've got my first my layer.\n\n522\n00:25:52.500 --> 00:25:57.150\nI might continue to add more layers\nas I add database servers and\n\n523\n00:25:57.150 --> 00:25:58.210\nother things right?\n\n524\n00:25:58.210 --> 00:26:01.060\nSo if I want that RDS Layer beneath this,\n\n525\n00:26:01.060 --> 00:26:04.190\nI can come in and I can add that layer\nI can say that it's going to be RDS,\n\n526\n00:26:04.190 --> 00:26:07.878\nand I can pick an existing database and\nwhat I'm gonna connect.\n\n527\n00:26:07.878 --> 00:26:09.920\nNow it does expect me to have\nalready made the database and\n\n528\n00:26:09.920 --> 00:26:13.040\nyou'll see I've got several here\nthat I've made for the show.\n\n529\n00:26:13.040 --> 00:26:17.380\nSo I could pick one of those and\nlet's see,\n\n530\n00:26:17.380 --> 00:26:19.870\nif I maybe remember my\npassword this one might fail.\n\n531\n00:26:19.870 --> 00:26:21.300\nBut we can come in and punch that in and\n\n532\n00:26:21.300 --> 00:26:23.770\nregister it with a stack, let's and\nsee if it works, it worked okay.\n\n533\n00:26:23.770 --> 00:26:26.480\nSo now I've got a database layer, too, and\n\n534\n00:26:26.480 --> 00:26:30.940\nnotice over here on the side that for\nthe application, it says Instances,\n\n535\n00:26:30.940 --> 00:26:35.270\nno Instances, or add an instance, and\nthen for the database, No apps, right?\n\n536\n00:26:35.270 --> 00:26:37.680\nI haven't actually added a database\napplication or anything, and\n\n537\n00:26:37.680 --> 00:26:38.270\nI'm not going to.\n\n538\n00:26:38.270 --> 00:26:40.590\nI just have a simple PHP application, and\n\n539\n00:26:40.590 --> 00:26:43.100\nI need that PHP application to\nrun right on these web servers.\n\n540\n00:26:43.100 --> 00:26:45.960\nThat's where I want it to run, and so\nI'm gonna need instances for that.\n\n541\n00:26:45.960 --> 00:26:49.570\nSo I'm gonna go ahead and\nchoose to add an instance and\n\n542\n00:26:49.570 --> 00:26:50.820\nI'll tell it what kinda instance.\n\n543\n00:26:50.820 --> 00:26:54.460\nAnd this one, it defaulted to being\ncalled php-app1, I'm okay with that.\n\n544\n00:26:54.460 --> 00:26:57.380\nI'll pick the size, c3.large might be\na little overkill for what I want.\n\n545\n00:26:57.380 --> 00:27:02.730\nLet's go with a, I got t2_micro\nwould probably be fine [LAUGH].\n\n546\n00:27:02.730 --> 00:27:05.590\nAnd you can pick from other\nOpsWorks deployments.\n\n547\n00:27:05.590 --> 00:27:07.520\nYou can pick from existing instances,\n\n548\n00:27:07.520 --> 00:27:10.400\nif you've got them, to bring them\ninto this OpsWorks stack if you want.\n\n549\n00:27:10.400 --> 00:27:11.903\nI'm just gonna do a new one.\n\n550\n00:27:11.903 --> 00:27:14.783\nAll right, so I'll add that one in,\nand they always come up stopped, so\n\n551\n00:27:14.783 --> 00:27:17.239\nI'm just gonna hit Start over here,\nto get this one started,\n\n552\n00:27:17.239 --> 00:27:18.719\nand let that boot in the background.\n\n553\n00:27:19.730 --> 00:27:20.550\nAll right,\n\n554\n00:27:20.550 --> 00:27:24.730\nnow I've got an application layer and it's\ngot at least one instance inside of that.\n\n555\n00:27:24.730 --> 00:27:26.872\nI could spin up more\ninstances if I needed more,\n\n556\n00:27:26.872 --> 00:27:29.026\njust depends on what kinda\nload I wanna handle.\n\n557\n00:27:29.026 --> 00:27:32.590\nI didn't put a load balancer on this one,\nso I'll just stick with one instance.\n\n558\n00:27:32.590 --> 00:27:35.620\nAnd then over here under Apps,\nI can see my application.\n\n559\n00:27:35.620 --> 00:27:37.920\nAnd I mentioned I had\na little PHP application,\n\n560\n00:27:37.920 --> 00:27:41.200\nit's nothing too special,\nthat I can add in, and so\n\n561\n00:27:41.200 --> 00:27:46.370\nI can give it a name, I'll call mine my\nPHP Web App because I'm terribly creative.\n\n562\n00:27:46.370 --> 00:27:49.600\nFor my type I'll stick with\nPHP cuz that's what it is.\n\n563\n00:27:49.600 --> 00:27:53.050\nThe document root, this is a web page,\nso is it going to be in the subfolder or\n\n564\n00:27:53.050 --> 00:27:53.930\nis it going to be in the root?\n\n565\n00:27:53.930 --> 00:27:57.800\nI want it in root, so I'll just leave that\nempty, and then, what's the data source,\n\n566\n00:27:57.800 --> 00:27:59.260\nwhere am I getting my data from?\n\n567\n00:27:59.260 --> 00:28:03.590\nWell I've got a database attached, so\nI can get my data right from there, right?\n\n568\n00:28:03.590 --> 00:28:07.420\nThis PHP app might be expecting data and\nthis is gonna create the dependency.\n\n569\n00:28:07.420 --> 00:28:09.850\nWell, I did add a database, but\nI don't actually have anything in it.\n\n570\n00:28:09.850 --> 00:28:12.250\nSo I'm just gonna choose None for\nmy data source.\n\n571\n00:28:12.250 --> 00:28:14.590\nAnd then where does it\nget the application?\n\n572\n00:28:14.590 --> 00:28:19.360\nYou can store the application in S3 or\non your own servers or\n\n573\n00:28:19.360 --> 00:28:22.060\nyou can store it in Git or Subversion.\n\n574\n00:28:22.060 --> 00:28:26.610\nAnd that way you can be doing code\nmanagement in Git, for example, and\n\n575\n00:28:26.610 --> 00:28:29.180\nthen when you're ready to push,\nyou just reach out and grab it from here.\n\n576\n00:28:29.180 --> 00:28:33.303\nAnd so I've actually got my application\nin Git, so I'm just gonna point to that.\n\n577\n00:28:33.303 --> 00:28:42.878\nAnd so let's see\ngithub.com/dompezit/awsdemophpwebapp.\n\n578\n00:28:42.878 --> 00:28:45.600\nI should have given that a shorter name,\nbut that's my web application.\n\n579\n00:28:45.600 --> 00:28:49.714\nI have it stored in Github, and I can\nreach out and grab that and bring it down.\n\n580\n00:28:49.714 --> 00:28:53.360\nAnd what I have is a simple PHP page\nthat shows you the name of the server,\n\n581\n00:28:53.360 --> 00:28:55.680\nthe IP address, and lets you know\nthat it is up and running, and\n\n582\n00:28:55.680 --> 00:28:59.010\nso this is a homepage that is\ndifferent then the default.\n\n583\n00:28:59.010 --> 00:29:02.810\nWhen I spin up an instance and I tell it\nI want it to be a PHP server like we did\n\n584\n00:29:02.810 --> 00:29:07.080\na minute ago, it's gonna add Apache,\nit's gonna add PHP,\n\n585\n00:29:07.080 --> 00:29:09.720\nit's gonna add each of those resources and\nturn them on.\n\n586\n00:29:09.720 --> 00:29:11.482\nIf I were to browse that server right now,\n\n587\n00:29:11.482 --> 00:29:16.320\nI'll just see the Apache home page that\ncomes up and say hey, Apache is running.\n\n588\n00:29:16.320 --> 00:29:19.100\nBut when I deploy this app\nI'm gonna see my homepage.\n\n589\n00:29:19.100 --> 00:29:21.840\nI'm gonna see my application instead,\nright.\n\n590\n00:29:21.840 --> 00:29:24.510\nYou're gonna assign any\nenvironment variables you need.\n\n591\n00:29:24.510 --> 00:29:27.670\nYou can define your domain name if\nyou're gonna be overriding that in DNS.\n\n592\n00:29:27.670 --> 00:29:31.110\nI'm not going to, and then if you want\nSSL for the application, I'm not.\n\n593\n00:29:31.110 --> 00:29:33.310\nIf you do SSL,\nyou just have to upload your certificates.\n\n594\n00:29:34.470 --> 00:29:36.830\nAll right, so\nI'm gonna add that application.\n\n595\n00:29:36.830 --> 00:29:41.140\nNow the application is a part of my stack,\nbut it's not actually on the instances\n\n596\n00:29:41.140 --> 00:29:44.440\nyet, and the reason it does it this way\nis I might wanna update the application.\n\n597\n00:29:44.440 --> 00:29:46.050\nI can come in and\nupdate this whenever I want.\n\n598\n00:29:46.050 --> 00:29:51.260\nAnd when I update it, I can redeploy\nit to my instances to update them so\n\n599\n00:29:51.260 --> 00:29:52.970\nthey've got the latest version of the app.\n\n600\n00:29:52.970 --> 00:29:56.333\nWell, my instances don't have anything,\nso I need to deploy it, and\n\n601\n00:29:56.333 --> 00:29:59.873\nwhen you deploy it you can pick what\nyou're gonna do, I'm gonna deploy.\n\n602\n00:29:59.873 --> 00:30:03.130\nAnd if I had more that one instance\nit would actually let me choose but\n\n603\n00:30:03.130 --> 00:30:06.733\nhere actually saw me I have no running\ninstances because they're not up and\n\n604\n00:30:06.733 --> 00:30:07.380\nonline yet.\n\n605\n00:30:07.380 --> 00:30:10.770\nSo I need a way for the instance to come\nonline and then I'll be able to push it.\n\n606\n00:30:10.770 --> 00:30:14.520\nNow, it's taking a while for\na T2 micro to come up, why is that?\n\n607\n00:30:14.520 --> 00:30:19.960\nWell, it has to install Apache, it has to\ninstall PHP, it has to create a security\n\n608\n00:30:19.960 --> 00:30:23.170\ngroup that allows the web traffic to get\nto it, and it's gotta do server updates.\n\n609\n00:30:23.170 --> 00:30:28.590\nIt's doing all that in the background so\nit takes longer to deploy an instance in\n\n610\n00:30:28.590 --> 00:30:31.720\nOpsWorks than it does to just go and\ndeploy it yourself.\n\n611\n00:30:31.720 --> 00:30:33.610\nSo if I had brought in an instance,\nthat might have it.\n\n612\n00:30:33.610 --> 00:30:36.440\nBut if you bring in your own instance\nit might not be configured properly\n\n613\n00:30:36.440 --> 00:30:37.550\nfor access.\n\n614\n00:30:37.550 --> 00:30:40.720\nThat's why it was important for\nme to pick that as a SSH key earlier for\n\n615\n00:30:40.720 --> 00:30:42.190\naccess purposes, all right.\n\n616\n00:30:42.190 --> 00:30:44.980\nSo, I'm kinda tied on\nwaiting on this instance.\n\n617\n00:30:44.980 --> 00:30:47.710\nSee how it says that it is booting so\nit's building up.\n\n618\n00:30:47.710 --> 00:30:50.650\nMaybe if I had picked a,\nyou try to do that large,\n\n619\n00:30:50.650 --> 00:30:54.140\nI probably should have just left it as\na large to spin up a little faster.\n\n620\n00:30:54.140 --> 00:30:58.040\nMaybe I'll add one, so add that and\nit's gonna fire up this other instance and\n\n621\n00:30:58.040 --> 00:30:59.660\nit might actually beat the other one.\n\n622\n00:30:59.660 --> 00:31:03.060\nLittle more CPU power,\nlittle more RAM to get that booted up, but\n\n623\n00:31:03.060 --> 00:31:08.180\nonce it's up, I can deploy my application\nto it and then I'm basically done.\n\n624\n00:31:08.180 --> 00:31:12.040\nI can fire up a web browser and I can\npoint to the URL for this application and\n\n625\n00:31:12.040 --> 00:31:13.472\nI should see my app.\n\n626\n00:31:13.472 --> 00:31:16.430\nNever mind the fact that in the background\nI've got a database, I've got web servers,\n\n627\n00:31:16.430 --> 00:31:18.650\nI've got multiple layers that\nare all tying this together.\n\n628\n00:31:18.650 --> 00:31:22.560\nAnd if I ever have anything go wrong,\nI can just redeploy the application.\n\n629\n00:31:22.560 --> 00:31:24.440\nAnd from now on as I update my software,\n\n630\n00:31:24.440 --> 00:31:28.210\nI just come in here under apps and\nI update the application.\n\n631\n00:31:28.210 --> 00:31:31.010\nIt's tied to GitHub in this case, so\nit's gonna be pulling it from GitHub.\n\n632\n00:31:31.010 --> 00:31:34.410\nI just do commits over in GitHub,\nand that updates here and\n\n633\n00:31:34.410 --> 00:31:38.470\nI can redeploy whenever I'm ready and\nit updates across those instances.\n\n634\n00:31:38.470 --> 00:31:40.690\nSo at this point,\nwe just have to wait for that to finish.\n\n635\n00:31:40.690 --> 00:31:43.670\nWe'll see, if it finishes shortly\nthen we'll get a chance to see it,\n\n636\n00:31:43.670 --> 00:31:45.550\nthat one's still booting.\n\n637\n00:31:45.550 --> 00:31:48.550\nThis is where I start getting\na little impatient and clicking and\n\n638\n00:31:48.550 --> 00:31:50.480\ndoing things that kind of mess stuff up.\n\n639\n00:31:50.480 --> 00:31:54.213\nYou know, while we're waiting on that\nit's booting the stuff in the background,\n\n640\n00:31:54.213 --> 00:31:56.629\nit's setting up a lot of\nthe stuff in the background.\n\n641\n00:31:56.629 --> 00:32:00.389\nIf I go back to my console and\njust go to EC2, and\n\n642\n00:32:00.389 --> 00:32:06.796\nI go into my instances here in EC2 You'll\nsee those instances coming up in here.\n\n643\n00:32:06.796 --> 00:32:07.296\nRight?\n\n644\n00:32:07.296 --> 00:32:10.872\nSo, it's not like they're locked away and\nhidden in OpsWorks.\n\n645\n00:32:10.872 --> 00:32:12.990\nYou see them spread\nthroughout your environment.\n\n646\n00:32:12.990 --> 00:32:17.435\nSo, I can see right here,\nthe itprotv-webapp01 and itprotv-webapp02,\n\n647\n00:32:17.435 --> 00:32:20.831\nsome of the different things\nwe've created in this show, and\n\n648\n00:32:20.831 --> 00:32:22.880\nit's spinning those instances up.\n\n649\n00:32:22.880 --> 00:32:25.740\nThere's that c3.large\nthat I'd just launched.\n\n650\n00:32:25.740 --> 00:32:27.600\nIt's right there, and\nsee how they say they're running.\n\n651\n00:32:27.600 --> 00:32:29.720\nIt thinks they're up, right?\n\n652\n00:32:29.720 --> 00:32:31.700\nThe bottom one, in fact,\nhas already passed its health checks.\n\n653\n00:32:31.700 --> 00:32:33.800\nThat means the operating system is up.\n\n654\n00:32:33.800 --> 00:32:34.330\nOkay.\n\n655\n00:32:34.330 --> 00:32:36.770\nBut, it´s not available in OpsWorks yet\ncuz it´s still doing updates and\n\n656\n00:32:36.770 --> 00:32:38.590\nother things and\nit´ll probably reboot before it´s done.\n\n657\n00:32:39.620 --> 00:32:41.960\nOther things that we´ll see,\nas you start looking around,\n\n658\n00:32:41.960 --> 00:32:44.940\nI chose a database, oh,\nI chose one that already existed, right?\n\n659\n00:32:44.940 --> 00:32:46.690\nSo, that won´t show anything new.\n\n660\n00:32:46.690 --> 00:32:51.630\nBut, you may see security groups pop up,\nand you go in here and your like, wow,\n\n661\n00:32:51.630 --> 00:32:53.440\nwhere did all these\nsecurity groups come from?\n\n662\n00:32:53.440 --> 00:32:58.550\nSome of these came from Elastic Beanstalk,\nbut many of them came from OpsWorks.\n\n663\n00:32:58.550 --> 00:33:03.260\nAnd so you can see OpsWorks created a Java\napp, nodejs, ones that I'm not even using.\n\n664\n00:33:03.260 --> 00:33:03.840\nRight?\n\n665\n00:33:03.840 --> 00:33:05.645\nIt created them so\nthat when I do use them,\n\n666\n00:33:05.645 --> 00:33:08.500\nit'll have the security groups already\nin place and they can reference those.\n\n667\n00:33:08.500 --> 00:33:12.240\nSo, understand that OpsWorks is creating\nthings all throughout your account.\n\n668\n00:33:12.240 --> 00:33:14.060\nWhich means that if you ever\nwant to get rid of OpsWorks,\n\n669\n00:33:14.060 --> 00:33:14.860\nit's kind of messy, right?\n\n670\n00:33:14.860 --> 00:33:16.710\nThere's a lot of stuff\nkinda spread out there, but\n\n671\n00:33:16.710 --> 00:33:18.250\nyou can really ignore most of it.\n\n672\n00:33:18.250 --> 00:33:21.890\nBut, that is kinda being pumped in there,\nand it's all being done automatically.\n\n673\n00:33:21.890 --> 00:33:23.670\nThat's really the glory of OpsWorks.\n\n674\n00:33:23.670 --> 00:33:24.970\nIt's orchestration, right?\n\n675\n00:33:24.970 --> 00:33:28.180\nIt's taking multiple band members and\ngetting them all to play the same song.\n\n676\n00:33:28.180 --> 00:33:29.140\nThat's what we're doing here.\n\n677\n00:33:29.140 --> 00:33:32.530\nWe're getting multiple pieces of AWS all\nworking together to support the same\n\n678\n00:33:32.530 --> 00:33:33.290\napplication.\n\n679\n00:33:33.290 --> 00:33:35.810\n>> Yeah, and it also seems like it's\nremoving a lot of the legwork that we\n\n680\n00:33:35.810 --> 00:33:36.680\nwould normally have to do,\n\n681\n00:33:36.680 --> 00:33:39.480\nif you wanted to create this\nenvironment yourself, right?\n\n682\n00:33:39.480 --> 00:33:41.930\nInstead of having to create the security\ngroups, it does it for you.\n\n683\n00:33:41.930 --> 00:33:45.565\nIt realizes, oh, you wanna do this,\ntherefore you're going to need that.\n\n684\n00:33:45.565 --> 00:33:48.672\nLemme just create that for\nyou in the background and it's all done.\n\n685\n00:33:48.672 --> 00:33:53.970\nYou shop at one store for all your needs\nand, almost like you have a helper\n\n686\n00:33:53.970 --> 00:33:57.420\nthat come and goes, well, if you're gonna\nbuy that you're gonna need this as well.\n\n687\n00:33:57.420 --> 00:34:00.863\nOr going along with our chef analogy,\nis that you're baking it into the pie and\n\n688\n00:34:00.863 --> 00:34:04.357\ninstead of, oh, well, I'm gonna eat\nan apple and I'm gonna eat some crust and\n\n689\n00:34:04.357 --> 00:34:06.090\nI'm gonna have some sugar.\n\n690\n00:34:06.090 --> 00:34:08.040\nYou could make a pie out of it and\neat that.\n\n691\n00:34:08.040 --> 00:34:11.110\n>> Well, one of the big things that\nAmazon pushes on this is about it's\n\n692\n00:34:11.110 --> 00:34:12.720\nreproducible, right?\n\n693\n00:34:12.720 --> 00:34:17.140\nSo, using the chef example, maybe you make\na pie one day and it is the best pie ever.\n\n694\n00:34:17.140 --> 00:34:20.000\nWhatever you did that time was perfect,\nthe right amount of ingredients and\n\n695\n00:34:20.000 --> 00:34:21.720\nthe next time you make this is not good.\n\n696\n00:34:21.720 --> 00:34:25.660\nWell, here, because it's all part of\na package, I can redeploy this application\n\n697\n00:34:25.660 --> 00:34:30.030\nover and over and over again, and\nit's always done exactly the same.\n\n698\n00:34:30.030 --> 00:34:31.540\nThat's the best part about this.\n\n699\n00:34:31.540 --> 00:34:34.770\nIf you're working on a team\nwith 20 DevOps admins,\n\n700\n00:34:34.770 --> 00:34:37.700\nwell, you might be deploying it today,\nsomebody else might be do it tomorrow.\n\n701\n00:34:37.700 --> 00:34:41.790\nBut, because it's package-based, the\ndeployment's always going to be the same.\n\n702\n00:34:41.790 --> 00:34:43.960\nOop, my first instance just went active.\n\n703\n00:34:43.960 --> 00:34:48.750\nSo, the active status here, it went to\nrunning setup for a few moments and\n\n704\n00:34:48.750 --> 00:34:49.650\nthen it switched to online.\n\n705\n00:34:49.650 --> 00:34:52.930\nSo, I've got one app that's active,\nor one instance that's active now.\n\n706\n00:34:52.930 --> 00:34:56.820\nSo, I can go to my app and\nin my app I can choose to deploy.\n\n707\n00:34:56.820 --> 00:34:59.710\nAnd when you deploy it,\n\n708\n00:34:59.710 --> 00:35:02.660\nright here it's telling me OpsWorks will\nrun this command on 1 of 2 instances.\n\n709\n00:35:02.660 --> 00:35:03.770\nThe one that's online.\n\n710\n00:35:03.770 --> 00:35:06.940\nBut you can actually pick and choose and\nsay, like, I don't wanna run on this guy,\n\n711\n00:35:06.940 --> 00:35:08.270\nor I do wanna run on this one.\n\n712\n00:35:08.270 --> 00:35:10.210\nSo you've got a little\nbit of flexibility there.\n\n713\n00:35:10.210 --> 00:35:10.780\nRight?\n\n714\n00:35:10.780 --> 00:35:11.930\nAnd whoops.\n\n715\n00:35:11.930 --> 00:35:13.100\nI'm going into Custom JSON.\n\n716\n00:35:13.100 --> 00:35:15.180\nThat's not what I wanted to do.\n\n717\n00:35:15.180 --> 00:35:17.670\nSo once we've got that,\nyou can just hit Deploy.\n\n718\n00:35:17.670 --> 00:35:20.520\nAnd when we hit Deploy.\n\n719\n00:35:20.520 --> 00:35:25.759\nIt's gonna reach out to GitHub, it's\ngonna get a copy of my little PHP app and\n\n720\n00:35:25.759 --> 00:35:28.440\nit's gonna install it on php-app1.\n\n721\n00:35:28.440 --> 00:35:30.040\nAnd that's what it's doing right now,\nis installing.\n\n722\n00:35:30.040 --> 00:35:32.600\nThe bigger your app is\nthe longer this'll take.\n\n723\n00:35:32.600 --> 00:35:35.560\nMine is, I think, 4k in size.\n\n724\n00:35:35.560 --> 00:35:37.040\nIt's like really, really tiny.\n\n725\n00:35:37.040 --> 00:35:40.424\nSo, mine should happen pretty quick,\nbut once this deployed,\n\n726\n00:35:40.424 --> 00:35:42.867\nwe should be able to\nbrowse to that server, and\n\n727\n00:35:42.867 --> 00:35:46.340\nsee this web page come back for\nus and have access to that web app.\n\n728\n00:35:46.340 --> 00:35:49.070\nSo, we'll give that a second\nwhile it deploys it.\n\n729\n00:35:49.070 --> 00:35:52.660\nNow, the cool part here is that it's\nreaching out to GitHub to get my app.\n\n730\n00:35:52.660 --> 00:35:56.230\nSo, if I've committed new changes,\nit's automatically got them and\n\n731\n00:35:56.230 --> 00:35:59.110\nit's ready to deploy, and I can manage\nit in software that I'm already using.\n\n732\n00:35:59.110 --> 00:36:00.730\nRight, you may not be using GitHub.\n\n733\n00:36:00.730 --> 00:36:03.710\nSo, you might point this to a URL in\nyour own system and that's fine, too.\n\n734\n00:36:03.710 --> 00:36:05.055\nThere we go, yep, so the host name.\n\n735\n00:36:05.055 --> 00:36:07.490\nIt's got a little green checkmark\nright there letting me know that it\n\n736\n00:36:07.490 --> 00:36:08.198\nfinished the deployment.\n\n737\n00:36:08.198 --> 00:36:09.500\nIt was successful.\n\n738\n00:36:09.500 --> 00:36:14.860\nAnd, it should be good to go,\nas far as I know.\n\n739\n00:36:14.860 --> 00:36:17.650\nAnd I can't really think of\nanything too crazy there.\n\n740\n00:36:17.650 --> 00:36:20.998\nI'm just gonna scroll down here to\nthe Public DNS for this server, and\n\n741\n00:36:20.998 --> 00:36:22.090\nI'm gonna copy that.\n\n742\n00:36:24.750 --> 00:36:27.745\nAnd when I browse to it,\ninstead of seeing the Apache homepage,\n\n743\n00:36:27.745 --> 00:36:30.940\nlike I would of on a normal one,\nwe see my test page that I made.\n\n744\n00:36:30.940 --> 00:36:32.270\nAnd so it's telling me,\n\n745\n00:36:32.270 --> 00:36:34.960\nhere is the name of that instance cuz I\ndidn't know the name of the instance.\n\n746\n00:36:34.960 --> 00:36:36.110\nI hadn't seen it before.\n\n747\n00:36:36.110 --> 00:36:36.690\nBut there it is,\n\n748\n00:36:36.690 --> 00:36:40.780\nit's up, it's running and it tells me that\nApache is happy and serving up web pages.\n\n749\n00:36:40.780 --> 00:36:42.710\nThere's my web app, all deployed.\n\n750\n00:36:42.710 --> 00:36:47.000\nAnd the best part about that,\nI never SSH'd into the instance.\n\n751\n00:36:47.000 --> 00:36:48.730\nI never logged in\nthe instance a single time.\n\n752\n00:36:48.730 --> 00:36:52.160\nBut I just deployed my application,\npotentially on top of a very complexive\n\n753\n00:36:52.160 --> 00:36:54.480\nenvironment, without having to\nmess with those components.\n\n754\n00:36:54.480 --> 00:36:55.980\nThat's what OpsWork is all about.\n\n755\n00:36:55.980 --> 00:36:57.950\nThat's what Elastic Beanstalk\nis all about.\n\n756\n00:36:57.950 --> 00:37:00.470\nThat's what, to a lesser extent,\ncloud formation is all about.\n\n757\n00:37:00.470 --> 00:37:03.220\nIt's kinda up to you which\ntool is gonna suit your needs.\n\n758\n00:37:03.220 --> 00:37:05.610\nBut, OpsWorks is really the one\nthey want you to move to.\n\n759\n00:37:05.610 --> 00:37:08.910\n>> Well, it's obviously a very awesome,\npowerful and robust tool.\n\n760\n00:37:08.910 --> 00:37:12.810\nSo, it would definitely benefit\nus to learn how to use it and\n\n761\n00:37:12.810 --> 00:37:14.200\ntake advantage of it in our environments.\n\n762\n00:37:14.200 --> 00:37:17.630\nDon is there anything else that you wanna\nadd to this before we close the show?\n\n763\n00:37:17.630 --> 00:37:19.460\n>> I think I've dragged this\none out long enough waiting for\n\n764\n00:37:19.460 --> 00:37:21.930\nthat one deployment to happen,\nsorry about that guys.\n\n765\n00:37:21.930 --> 00:37:24.320\nBut it's rolled out,\nyou got a chance to see how it works.\n\n766\n00:37:24.320 --> 00:37:27.340\nOn the exam, they're not gonna ask you\nto deploy something with OpsWorks.\n\n767\n00:37:27.340 --> 00:37:29.770\nBut, I wanted you to see how\nthat works to understand it.\n\n768\n00:37:29.770 --> 00:37:32.235\nBecause they are gonna\nask you how it works.\n\n769\n00:37:32.235 --> 00:37:33.020\nYou need to understand that.\n\n770\n00:37:33.020 --> 00:37:35.840\nAnd you need to remember that\nterminology about stacks and layers.\n\n771\n00:37:35.840 --> 00:37:39.470\nYou need to understand about chef being\nunder the hood and what a recipe is.\n\n772\n00:37:39.470 --> 00:37:40.531\nYou need to know those concepts.\n\n773\n00:37:40.531 --> 00:37:43.471\nAnd so we got a chance to see it here,\nkinda from start to finish,\n\n774\n00:37:43.471 --> 00:37:45.491\nhow to deploy that And\nget it up and running.\n\n775\n00:37:45.491 --> 00:37:47.323\nIt's really cool stuff,\nif you're not using it yet\n\n776\n00:37:47.323 --> 00:37:48.810\nyou should take advantage of it.\n\n777\n00:37:48.810 --> 00:37:51.270\n>> Well, thank you so much, Don,\nfor explaining that for us.\n\n778\n00:37:51.270 --> 00:37:54.680\nNow, we have a little better grasp\nof those concepts and terms.\n\n779\n00:37:54.680 --> 00:37:56.750\nAs for the show, though,\nwe're gonna go ahead and close her down.\n\n780\n00:37:56.750 --> 00:37:57.770\nThanks for watching.\n\n781\n00:37:57.770 --> 00:38:00.890\nAnd signing off for ITProTV,\nI've been your host, Daniel Lowery.\n\n782\n00:38:00.890 --> 00:38:01.520\n>> And I'm Don Pezet.\n\n783\n00:38:01.520 --> 00:38:02.675\n>> And we'll see you next time.\n\n784\n00:38:02.675 --> 00:38:09.190\n[SOUND]\n\n",
          "vimeoId": "150898512"
        }
      ],
      "title": "Orchestration"
    },
    {
      "episodes": [
        {
          "description": "In this episode, Don and Daniel take you through a tour of the backup and recovery services provided by the many AWS services. They start by explaining Disaster Recovery concepts like Recovery Time Objective(RTO) and Recovery Point Objective (RPO) and what is involved with traditional DR. Then they look at AWSs DR solutions like Regions, S3, Glacier, EBS, and AWS Storage Gateway.",
          "length": "2023",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/amazon-acsa/amazon-acsa-9-1-1-backup_recovery_services-121515-1.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/amazon-acsa/amazon-acsa-9-1-1-backup_recovery_services-121515-1-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/amazon-acsa/amazon-acsa-9-1-1-backup_recovery_services-121515-1-sm.jpg",
          "title": "Backup and Recovery Services",
          "transcript": "WEBVTT\n\n1\n00:00:00.008 --> 00:00:10.008\n[MUSIC]\n\n2\n00:00:11.966 --> 00:00:13.655\n>> All right, greetings, everyone.\n\n3\n00:00:13.655 --> 00:00:16.395\nAnd welcome to another\ngreat episode of ITProTV.\n\n4\n00:00:16.395 --> 00:00:19.105\nI'm your host, Daniel Lowrie,\nand in today's episode,\n\n5\n00:00:19.105 --> 00:00:23.755\nwe're continuing on our series of\nthe AWS Certified Sysops Admin.\n\n6\n00:00:23.755 --> 00:00:26.492\nJoining me yet again today is\nnone other than my good friend,\n\n7\n00:00:26.492 --> 00:00:30.952\nmy colleague, and happens to be\nmy boss as well, Mr. Don Pezet.\n\n8\n00:00:30.952 --> 00:00:32.132\nHow's it going today, Don?\n\n9\n00:00:32.132 --> 00:00:33.112\n>> It is going great, Daniel.\n\n10\n00:00:33.112 --> 00:00:34.162\nGlad to be back on this show.\n\n11\n00:00:34.162 --> 00:00:35.892\nAnd we're kicking off a new section here.\n\n12\n00:00:35.892 --> 00:00:38.242\nAnd we're jumping into backup and\nrecovery services.\n\n13\n00:00:38.242 --> 00:00:42.132\nSo what I want to do for\nour first episode on this is to\n\n14\n00:00:42.132 --> 00:00:46.332\nfocus in on any one particular service,\nbut instead take a look at the whole,\n\n15\n00:00:46.332 --> 00:00:50.630\nwhat should we call it,\nthe backup portfolio from AWS.\n\n16\n00:00:50.630 --> 00:00:53.440\nOn the exam, they really expect\nyou to know how to back up and\n\n17\n00:00:53.440 --> 00:00:55.280\nrestore EC2 instances.\n\n18\n00:00:55.280 --> 00:00:58.940\nAnd they expect you to know how\nto back up and restore RDS, so\n\n19\n00:00:58.940 --> 00:01:01.330\nthe relational databases,\nespecially MySQL, right.\n\n20\n00:01:01.330 --> 00:01:03.090\nThose are the two they really hit on.\n\n21\n00:01:03.090 --> 00:01:07.270\nBut all the other services, they want\nyou to be familiar with the options.\n\n22\n00:01:07.270 --> 00:01:08.110\nWhat's available.\n\n23\n00:01:08.110 --> 00:01:09.420\nYou don't necessarily have\nto know how to do it,\n\n24\n00:01:09.420 --> 00:01:12.110\njust know what options\nare available inside of AWS.\n\n25\n00:01:12.110 --> 00:01:14.710\nAnd it's pretty impressive, all\nthe different things that are available.\n\n26\n00:01:14.710 --> 00:01:17.580\nIt's a big system, it's very redundant,\n\n27\n00:01:17.580 --> 00:01:20.500\ntons of cool features, some of them\nwe just have to remember to turn on.\n\n28\n00:01:20.500 --> 00:01:22.560\nAnd once it's on, we get a nice,\nstable environment.\n\n29\n00:01:22.560 --> 00:01:26.400\n>> Now, Don, I think a good place to begin\nto start with this, since we're talking\n\n30\n00:01:26.400 --> 00:01:31.910\nabout backup, is traditional and\njust backup topics, and standard\n\n31\n00:01:31.910 --> 00:01:35.930\nthings that we're normally used to dealing\nwith, before we jump in to see how Amazon.\n\n32\n00:01:35.930 --> 00:01:37.470\nSo let's start there.\n\n33\n00:01:37.470 --> 00:01:38.910\n>> Sure.\n>> Let's cover some of those topics.\n\n34\n00:01:38.910 --> 00:01:43.730\n>> So, two terms that you're going to see\non the exam, guaranteed, is RTO and RPO,\n\n35\n00:01:43.730 --> 00:01:44.460\nall right?\n\n36\n00:01:44.460 --> 00:01:48.480\nIf you're not familiar with those,\nRTO is recovery time objective.\n\n37\n00:01:48.480 --> 00:01:51.190\nWhen you have a failure\na server goes offline, right?\n\n38\n00:01:51.190 --> 00:01:54.480\nNow your customers are not able to access\nthat server, or your own employees are not\n\n39\n00:01:54.480 --> 00:01:57.180\nable to access that server,\nit depends on who it's designed to serve.\n\n40\n00:01:57.180 --> 00:01:58.880\nIt's now offline and it's not functioning.\n\n41\n00:01:59.970 --> 00:02:03.840\nHow long can you allow that to be\ndown before you have a problem?\n\n42\n00:02:03.840 --> 00:02:06.820\nNow if you're a small business,\nyou might have days, weeks.\n\n43\n00:02:06.820 --> 00:02:08.860\nIt might not even matter,\nthe server goes down you don't care.\n\n44\n00:02:08.860 --> 00:02:11.270\nSo your RTO might be very, very large.\n\n45\n00:02:11.270 --> 00:02:15.810\n>> But if you are a mission critical type\nenvironment, you're dealing with medical\n\n46\n00:02:15.810 --> 00:02:20.600\nrecords or financial or whatever, you\nmight only be able to have a few seconds.\n\n47\n00:02:20.600 --> 00:02:23.630\nSo different people have\ndifferent objectives here, and\n\n48\n00:02:23.630 --> 00:02:27.140\nwhen you have a failure, you need\nto recover as quickly as possible.\n\n49\n00:02:27.140 --> 00:02:29.890\nThe smaller your RTO is,\nyour recovery time objective,\n\n50\n00:02:29.890 --> 00:02:34.250\nthe smaller that is, the less amount\nof downtime you can have, right?\n\n51\n00:02:34.250 --> 00:02:38.660\nSo you'll hear people talk about\nshooting for five-nines of downtime or\n\n52\n00:02:38.660 --> 00:02:39.505\nof availability.\n\n53\n00:02:39.505 --> 00:02:42.630\nFive-nines means you're\nup 99.999% of the time.\n\n54\n00:02:42.630 --> 00:02:44.220\nAnd if you work that out,\n\n55\n00:02:44.220 --> 00:02:46.880\nthat works out to just a handful of\nseconds per year that you can be down.\n\n56\n00:02:46.880 --> 00:02:49.130\nHow do you keep the system up?\n\n57\n00:02:50.360 --> 00:02:52.870\nWith only a few seconds\nof downtime a year.\n\n58\n00:02:52.870 --> 00:02:55.540\nIf it's a Linux box and\nI do an update and I need to reboot.\n\n59\n00:02:55.540 --> 00:02:57.960\nOr a Windows box, I do an update and\nI need to reboot.\n\n60\n00:02:57.960 --> 00:03:00.220\nThe reboot's going to take\nmore than a few seconds and so\n\n61\n00:03:00.220 --> 00:03:03.400\nnow I've blown my five nine's\navailability and I have a hit.\n\n62\n00:03:03.400 --> 00:03:07.380\nWell you can still achieve\nit through redundancy.\n\n63\n00:03:07.380 --> 00:03:08.670\nHaving not just one server, but\n\n64\n00:03:08.670 --> 00:03:12.350\nmore than one server so that when one\ngoes offline another one takes over.\n\n65\n00:03:12.350 --> 00:03:14.910\nAnd that's very difficult to do\nin the traditional model, but\n\n66\n00:03:14.910 --> 00:03:16.880\nin the virtual model\nit's very easy to do and\n\n67\n00:03:16.880 --> 00:03:19.880\nso maintaining high levels\nof availability are easier.\n\n68\n00:03:19.880 --> 00:03:20.640\nBut your RTO,\n\n69\n00:03:20.640 --> 00:03:24.130\nyour recovery time objective,\nit's important you know it ahead of time.\n\n70\n00:03:24.130 --> 00:03:26.610\nYou need to know how much\ndowntime you can have, so\n\n71\n00:03:26.610 --> 00:03:28.690\nyou plan your resources accordingly.\n\n72\n00:03:28.690 --> 00:03:31.220\nAnd I'll just give you a little\nstory here, I used to work for\n\n73\n00:03:31.220 --> 00:03:32.270\na bank out in Seattle.\n\n74\n00:03:32.270 --> 00:03:36.720\nAnd at the bank, I asked them,\nwe were implementing a new system,\n\n75\n00:03:36.720 --> 00:03:38.850\nI said what level of redundancy\nare we shooting for here?\n\n76\n00:03:38.850 --> 00:03:40.210\nWhat up time do we need?\n\n77\n00:03:40.210 --> 00:03:43.060\nAnd the CIO said well,\nit should always be up.\n\n78\n00:03:43.060 --> 00:03:45.200\nAnd I said okay, I can make that.\n\n79\n00:03:45.200 --> 00:03:49.010\nI can make it where this system\nis always up, what's my budget.\n\n80\n00:03:49.010 --> 00:03:50.830\nAnd, you know, that's how it works right.\n\n81\n00:03:50.830 --> 00:03:53.440\nIf you want it to always be up you're\ngonna need millions of dollars for\n\n82\n00:03:53.440 --> 00:03:54.870\nthe infrastructure to\nbe able to deploy that.\n\n83\n00:03:54.870 --> 00:03:59.010\nBut if that's what you truly need,\nthen you can do it, right.\n\n84\n00:03:59.010 --> 00:04:02.180\nAnd so when I started asking the budget\nquestions, that's when the conversation\n\n85\n00:04:02.180 --> 00:04:05.600\nturned to, well how much does it cost for\navailability?\n\n86\n00:04:05.600 --> 00:04:07.520\nAnd how much can I get by with\nthis amount, this amount.\n\n87\n00:04:07.520 --> 00:04:09.990\nAnd at the end of the day\nwe reached out to the FDIC.\n\n88\n00:04:09.990 --> 00:04:11.650\nWe were insured through the FDIC.\n\n89\n00:04:11.650 --> 00:04:16.190\nAnd they had this rule and it said that\nthe bank could actually be down for\n\n90\n00:04:16.190 --> 00:04:17.984\n72 hours down for three days.\n\n91\n00:04:17.984 --> 00:04:23.230\nAnd that we weren't backed up in\nthree days, they would take us over.\n\n92\n00:04:23.230 --> 00:04:25.560\nAnd they would get it backed\nup which really bad for\n\n93\n00:04:25.560 --> 00:04:27.352\nbank because they don't give it back.\n\n94\n00:04:27.352 --> 00:04:31.360\nSo, [LAUGH] so you know what can happen,\nbut the reality was in three days.\n\n95\n00:04:31.360 --> 00:04:34.321\nSo if we ever had a failure we\ncould let the bank be down and\n\n96\n00:04:34.321 --> 00:04:38.610\nnot servicing people's money for three\ndays, I know it sounds terrible right?\n\n97\n00:04:38.610 --> 00:04:39.840\nFor people out there, right?\n\n98\n00:04:39.840 --> 00:04:42.870\nBut that was our actual true RTO.\n\n99\n00:04:42.870 --> 00:04:44.730\nSo, when we started planning for\nback up and\n\n100\n00:04:44.730 --> 00:04:48.830\nrecovery, I didn't need to\nbe backed up in seconds.\n\n101\n00:04:48.830 --> 00:04:51.430\nI could have it take minutes or hours or\n\n102\n00:04:51.430 --> 00:04:53.950\neven days as long as it didn't\ntake more than three days.\n\n103\n00:04:53.950 --> 00:04:56.980\nSo, as we start to look\nat all of the different\n\n104\n00:04:56.980 --> 00:04:58.530\nresources that are available to us.\n\n105\n00:04:58.530 --> 00:04:59.550\nSome are amazing.\n\n106\n00:04:59.550 --> 00:05:00.410\nSome are phenomenal.\n\n107\n00:05:00.410 --> 00:05:03.300\nSome will stop you from having\neven one second of down time.\n\n108\n00:05:03.300 --> 00:05:04.700\nBut they won't have a cost\nassociated with them,\n\n109\n00:05:04.700 --> 00:05:06.890\nand you don't necessarily\nhave to incur that.\n\n110\n00:05:06.890 --> 00:05:09.720\nNow if you're a hospital and\nyou've got a server that's stored\n\n111\n00:05:09.720 --> 00:05:14.220\nin the AWS that's responsible for doling\nout medication or something like that,\n\n112\n00:05:14.220 --> 00:05:17.560\nyou don't want that to be down even for\na second, and so your RTO is very small.\n\n113\n00:05:17.560 --> 00:05:20.930\nBut we need to understand our recovery\ntime objective, our RTO, the amount\n\n114\n00:05:20.930 --> 00:05:25.542\nof downtime that we can handle, before\nwe plan what recovery we're going to do.\n\n115\n00:05:25.542 --> 00:05:26.770\nAll right?\n\n116\n00:05:26.770 --> 00:05:31.930\nAnd right along side of that is the RPO,\nrecovery point objective.\n\n117\n00:05:31.930 --> 00:05:33.840\nThere very similar so\nit's easy to confuse them but\n\n118\n00:05:33.840 --> 00:05:38.950\na recovery point objective that's how\nmuch data you can afford to lose, right?\n\n119\n00:05:38.950 --> 00:05:39.920\nThink about it.\n\n120\n00:05:39.920 --> 00:05:43.820\nFor your company, for your organization,\nhow much data can you afford to lose?\n\n121\n00:05:43.820 --> 00:05:45.590\nLet's just think about it for\nme personally.\n\n122\n00:05:45.590 --> 00:05:47.520\nAnd maybe my email, right?\n\n123\n00:05:47.520 --> 00:05:48.800\nSo I have an email box.\n\n124\n00:05:48.800 --> 00:05:52.410\nAnd I get, I don't know,\nhundreds of emails a day.\n\n125\n00:05:52.410 --> 00:05:53.760\nIt's frustrating sometimes.\n\n126\n00:05:53.760 --> 00:05:55.920\nBut I get a ton of emails a day.\n\n127\n00:05:55.920 --> 00:06:02.350\nIf my mailbox were to fail, how much email\ncould I lose before I was really upset?\n\n128\n00:06:02.350 --> 00:06:06.070\nIf I lost one day of email would\nthat be the end of the world?\n\n129\n00:06:06.070 --> 00:06:06.930\nProbably not.\n\n130\n00:06:06.930 --> 00:06:08.290\nI could lose a day of email I'd be okay.\n\n131\n00:06:08.290 --> 00:06:11.470\nThere's some people who'd wonder\nwhy I wasn't responding to them but\n\n132\n00:06:11.470 --> 00:06:13.833\nI don't respond to people anyway, so\nit's not that big of a deal right?\n\n133\n00:06:13.833 --> 00:06:17.490\n>> Yeah,I can attest to the fact that\nDon does not answer his emails [LAUGH].\n\n134\n00:06:17.490 --> 00:06:20.790\n>> So with that in mind if I'm not going\nto answer them anyway I can afford to lose\n\n135\n00:06:20.790 --> 00:06:23.700\na day or a week or a month or\neven all of my emails I don't care, right?\n\n136\n00:06:23.700 --> 00:06:25.900\nBut I've got a lot of\nimportant stuff in my mailbox.\n\n137\n00:06:25.900 --> 00:06:28.870\nAnd if were to lose more than a few days,\nI'd get pretty frustrated.\n\n138\n00:06:28.870 --> 00:06:33.440\nSo my RPO my recovery point objective for\nmy email might be three days.\n\n139\n00:06:33.440 --> 00:06:34.140\nRight?\n\n140\n00:06:34.140 --> 00:06:38.400\nBut if you are Amazon.com right?\n\n141\n00:06:38.400 --> 00:06:42.210\nAnd you are doing retail\ntransactions every single minute.\n\n142\n00:06:42.210 --> 00:06:45.090\nAmazon moves over a million dollars\nin transactions per minute.\n\n143\n00:06:45.090 --> 00:06:47.630\nI mean it's a ton of money\nthat moves through them.\n\n144\n00:06:47.630 --> 00:06:51.930\nSo, if they were to lose a minute's worth\nof transactions, that's a lot of money.\n\n145\n00:06:51.930 --> 00:06:54.570\nAnd so their RPO is very, very small.\n\n146\n00:06:54.570 --> 00:06:57.550\nAnd we need to know the RPO cuz that's\ngonna determine how often we need to back\n\n147\n00:06:57.550 --> 00:06:58.830\nup our data, right.\n\n148\n00:06:58.830 --> 00:07:00.590\nThink about in the traditional sense.\n\n149\n00:07:00.590 --> 00:07:04.870\nThe old model was if I had a physical\nserver sitting here on the floor beside me\n\n150\n00:07:04.870 --> 00:07:10.660\nand my RPO was 24 hours, then I needed\nto back it up every 24 hours right?\n\n151\n00:07:10.660 --> 00:07:12.560\nSo I back up to tape every 24 hours.\n\n152\n00:07:12.560 --> 00:07:14.700\nAnd if I back up at midnight,\n\n153\n00:07:14.700 --> 00:07:19.110\nand I have a failure at noon,\nwell than I can go to my backup tape.\n\n154\n00:07:19.110 --> 00:07:21.790\nAnd my backup tape was\nmade 12 hours before,\n\n155\n00:07:21.790 --> 00:07:24.058\nwhich means I just lost\n12 hours of transactions.\n\n156\n00:07:24.058 --> 00:07:27.310\nBut that's okay, because I said my\nRPO is one day, 24 hours, right?\n\n157\n00:07:27.310 --> 00:07:31.880\nBut if my RPO is one minute, I need to\nbe backing up my server every minute.\n\n158\n00:07:31.880 --> 00:07:32.730\nRight?\n\n159\n00:07:32.730 --> 00:07:35.920\nAnd that way if the server fails and\nI lose my data, I can go to my backup.\n\n160\n00:07:35.920 --> 00:07:37.620\nMy backup's less than a minute old.\n\n161\n00:07:37.620 --> 00:07:39.270\nAnd I can restore it and get it in place.\n\n162\n00:07:39.270 --> 00:07:40.820\nThat's really hard to do.\n\n163\n00:07:40.820 --> 00:07:43.370\nIt's really hard to back up and\ntape every single minute.\n\n164\n00:07:43.370 --> 00:07:45.260\nIt can be done, it's just not easy.\n\n165\n00:07:45.260 --> 00:07:46.546\nIt's very expensive.\n\n166\n00:07:46.546 --> 00:07:50.806\nSo at AWS, you'll see we've got several\nservices that'll let us actually achieve\n\n167\n00:07:50.806 --> 00:07:54.286\nthat kind of level of redundancy,\nwhere you can have a server fail and\n\n168\n00:07:54.286 --> 00:07:56.400\nyou lose seconds of data, right?\n\n169\n00:07:56.400 --> 00:07:57.700\nAll based on your RPO.\n\n170\n00:07:57.700 --> 00:08:01.100\nSo recovery time objective,\nhow long you can afford to be down.\n\n171\n00:08:01.100 --> 00:08:05.275\nRecovery point objective, how much\ndata you can lose when you go down and\n\n172\n00:08:05.275 --> 00:08:06.170\nstill be okay.\n\n173\n00:08:06.170 --> 00:08:09.757\nIt's okay for this to be zero,\njust know that it's gonna be expensive.\n\n174\n00:08:09.757 --> 00:08:15.237\n>> Yeah, I've been apart of traditional\ndisaster recovery type of implementations\n\n175\n00:08:15.237 --> 00:08:19.680\nand to say that you can use AWS to\ngive you that one minute of RPO.\n\n176\n00:08:19.680 --> 00:08:23.760\nThat is insane, that's very very nice,\nbecause to think of\n\n177\n00:08:23.760 --> 00:08:27.450\nall the things of the infrastructure\nthat you need to put into place, Don.\n\n178\n00:08:27.450 --> 00:08:30.182\nIt's massive in scale and it takes\na lot of administrative effort as well.\n\n179\n00:08:30.182 --> 00:08:32.610\n>> You know, Daniel and\nI, we used to work for\n\n180\n00:08:32.610 --> 00:08:36.610\nthe same insurance company back in the day\nand we had a traditional back up method,\n\n181\n00:08:36.610 --> 00:08:38.500\nwhere all of our servers\nbacked up to tape.\n\n182\n00:08:38.500 --> 00:08:41.980\nAnd so you had employees that had to\ngo and rotate out tapes every day.\n\n183\n00:08:41.980 --> 00:08:44.410\nWe eventually put in tape\nrobots to handle that, but\n\n184\n00:08:44.410 --> 00:08:46.800\nit was just people power in the beginning.\n\n185\n00:08:46.800 --> 00:08:50.920\nSo we had to swap out tapes, and the tapes\nhad to be sent off site because what if\n\n186\n00:08:50.920 --> 00:08:53.230\nyour building was destroyed,\nyou had to have the tapes somewhere else.\n\n187\n00:08:53.230 --> 00:08:54.735\nAnd so we used a third party company,\n\n188\n00:08:54.735 --> 00:08:56.960\nwe'd ship the tapes off to a vault and\nstore them.\n\n189\n00:08:56.960 --> 00:08:58.640\nAnd we did a tape rotation every day.\n\n190\n00:08:58.640 --> 00:09:01.210\nSo they would come back and\npick up new tapes every day.\n\n191\n00:09:01.210 --> 00:09:04.960\nWell, I can't remember if you were\nwith the company when we did this.\n\n192\n00:09:04.960 --> 00:09:09.500\nDid you ever have to retrieve\ntapes from the vault company?\n\n193\n00:09:09.500 --> 00:09:13.520\n>> Well, what's interesting is we stopped\nactually using the vault company because\n\n194\n00:09:13.520 --> 00:09:16.835\nwe would get the box back and it'd look\nlike somebody ran it over with a truck.\n\n195\n00:09:16.835 --> 00:09:17.360\n>> [LAUGH]\n>> Right?\n\n196\n00:09:17.360 --> 00:09:19.040\nSo, you got to think about that right?\n\n197\n00:09:19.040 --> 00:09:20.710\n>> Yep.\n>> When it comes to a disaster occurring.\n\n198\n00:09:20.710 --> 00:09:23.230\nThe people we're entrusting\nour tapes to could\n\n199\n00:09:23.230 --> 00:09:25.150\nactually have been destroying our tapes.\n\n200\n00:09:25.150 --> 00:09:28.539\nBut yes, I had to retrieve it from them\nwhich was a pain and also had to do,\n\n201\n00:09:28.539 --> 00:09:31.585\nwe actually created a safe where\nI trucked through snow and mud.\n\n202\n00:09:31.585 --> 00:09:34.790\n[LAUGH] And put the tapes in\na fire proof safe off-site.\n\n203\n00:09:34.790 --> 00:09:36.590\n>> We had a fault while I was there once.\n\n204\n00:09:36.590 --> 00:09:41.430\nIt was 2 am in the morning and I'm on\nthe phone trying to retrieve our tapes and\n\n205\n00:09:41.430 --> 00:09:44.220\nI couldn't get anybody on\nthe phone to retrieve the tapes.\n\n206\n00:09:44.220 --> 00:09:48.500\nAnd these are the challenges that you have\nwith the traditional back up model, right?\n\n207\n00:09:48.500 --> 00:09:53.630\nWell, fortunately with Amazon, boy,\nthey have some hardware for you, right?\n\n208\n00:09:53.630 --> 00:09:56.340\nThey have some technologies that\nare in place that are amazing\n\n209\n00:09:56.340 --> 00:09:58.790\nthat alleviate all of this, right?\n\n210\n00:09:58.790 --> 00:10:02.820\nAnd what's probably their best\nfeature are their regions.\n\n211\n00:10:02.820 --> 00:10:06.670\nWhen you work with Amazon services,\nregardless of the service that you pick,\n\n212\n00:10:06.670 --> 00:10:10.320\nall of their services are supported\nin at least two regions and\n\n213\n00:10:10.320 --> 00:10:13.780\nwhen I say a region, that's a data center,\nat least one data center.\n\n214\n00:10:13.780 --> 00:10:17.600\nSome of them like the US West, I'm sorry\nnot US, US West Virginia, that one.\n\n215\n00:10:17.600 --> 00:10:21.740\nThe one that's in Virginia it\nactually has five data centers\n\n216\n00:10:21.740 --> 00:10:24.510\njust built all right next to each\nother but five completely independent,\n\n217\n00:10:24.510 --> 00:10:26.800\nseparate data centers that\nare all part of that region.\n\n218\n00:10:26.800 --> 00:10:29.143\nAnd so some regions have\nmore than one data center,\n\n219\n00:10:29.143 --> 00:10:31.310\nwhich is a high level of availability.\n\n220\n00:10:31.310 --> 00:10:36.100\nBut I can have my servers in one region,\nlike in Virginia, and then I can\n\n221\n00:10:36.100 --> 00:10:41.430\nhave a copy of them in another region,\nlike Ireland or somewhere like that.\n\n222\n00:10:41.430 --> 00:10:42.698\nOne of the different regions.\n\n223\n00:10:42.698 --> 00:10:45.790\nIn fact here let me pull up, I've got\nAmazon's page that shows all of their\n\n224\n00:10:45.790 --> 00:10:50.260\nregions here and here's the main\nregions that are available.\n\n225\n00:10:50.260 --> 00:10:54.920\nSo we've got Asia Pacific,\nTokyo, Singapore, Sydney.\n\n226\n00:10:54.920 --> 00:10:57.130\nIn Europe we've got Ireland and Frankfurt.\n\n227\n00:10:57.130 --> 00:11:00.740\nIn the U.S. or South America,\nyou've got Sao Paulo.\n\n228\n00:11:00.740 --> 00:11:03.481\nYou've got U.S. east, U.S.\nwest, and there's U.S.\n\n229\n00:11:03.481 --> 00:11:07.040\nwest 1 and 2, so you've got north\nVirginia, north California and Oregon.\n\n230\n00:11:07.040 --> 00:11:09.820\nI think I said West Virginia a minute ago,\nI mixed up my Virginias.\n\n231\n00:11:09.820 --> 00:11:15.340\nSo anyhow, so you've got these\ndifferent regions all across the world.\n\n232\n00:11:15.340 --> 00:11:20.200\nSo if you're worried about things\nlike earthquakes, hurricanes right?\n\n233\n00:11:20.200 --> 00:11:22.370\nHere in Florida we get hurricanes,\nthey happen,\n\n234\n00:11:22.370 --> 00:11:24.300\nit's just part what of Florida gets.\n\n235\n00:11:24.300 --> 00:11:27.035\nOver in California they get earthquakes,\nthey don't get hurricanes.\n\n236\n00:11:27.035 --> 00:11:27.836\nBut we don't get earthquakes.\n\n237\n00:11:27.836 --> 00:11:29.055\nIt's a tradeoff, right?\n\n238\n00:11:29.055 --> 00:11:33.873\nSo if I'm worried about hurricanes, I\nmight want to have some of my data here in\n\n239\n00:11:33.873 --> 00:11:37.950\nU.S. east and the rest cloned over to U.S.\nwest, right?\n\n240\n00:11:37.950 --> 00:11:40.820\nOr if I'm worried about earthquakes over\non the west, I might clone them over here\n\n241\n00:11:40.820 --> 00:11:43.808\nto U.S. east, but I stay in the same\ncontinent so I get good connectivity.\n\n242\n00:11:43.808 --> 00:11:45.800\nMaybe I'm multi-continent.\n\n243\n00:11:45.800 --> 00:11:50.160\nMaybe I'm worried about North America\nsinking beneath the ocean, and so\n\n244\n00:11:50.160 --> 00:11:53.420\nI wanna store my data on another\ncontinent, so I push it over to Ireland or\n\n245\n00:11:53.420 --> 00:11:57.020\nsomewhere just geographically far away.\n\n246\n00:11:57.020 --> 00:12:00.010\nYou can do that, and Amazon data\ncenters are connected to each other,\n\n247\n00:12:00.010 --> 00:12:03.760\nthey've got rapid bandwidth,\nthey can move that data all internally and\n\n248\n00:12:03.760 --> 00:12:07.520\nyou get a lot of power, so\nno more having to ship tapes offsite.\n\n249\n00:12:07.520 --> 00:12:11.060\nIt's all already offsite,\nit's all already available for us, and\n\n250\n00:12:11.060 --> 00:12:11.980\nthe data centers are there.\n\n251\n00:12:11.980 --> 00:12:16.212\nI don't have to build a disaster recovery\ncenter, which can cost a ton of money.\n\n252\n00:12:16.212 --> 00:12:19.200\nIt costs millions of dollars to build\na disaster recovery center that\n\n253\n00:12:19.200 --> 00:12:21.820\nyou're only gonna use if a failure\nhappens, so most of the time,\n\n254\n00:12:21.820 --> 00:12:24.128\nit's just sitting there idle,\ndoing nothing.\n\n255\n00:12:24.128 --> 00:12:27.410\nWell, with AWS you can have a disaster\nrecovery center that's idle,\n\n256\n00:12:27.410 --> 00:12:28.260\nsitting there doing nothing.\n\n257\n00:12:28.260 --> 00:12:29.180\nAnd you're not paying much for it.\n\n258\n00:12:29.180 --> 00:12:31.070\nAnd then when you need it, you spit it up.\n\n259\n00:12:31.070 --> 00:12:32.020\nAnd that's when you start paying.\n\n260\n00:12:32.020 --> 00:12:34.280\nSo it's far more economical and\n\n261\n00:12:34.280 --> 00:12:36.400\njust easier to maintain\nthan your own DR center.\n\n262\n00:12:36.400 --> 00:12:39.050\n>> Yeah, and probably a whole\nlot better hardware as well.\n\n263\n00:12:39.050 --> 00:12:39.794\nI mean Amazon,\n\n264\n00:12:39.794 --> 00:12:44.270\nthey're getting some of the best pieces of\nmachinery out there that are available.\n\n265\n00:12:44.270 --> 00:12:47.460\nFor you right and\nyou're getting to take advantage of that.\n\n266\n00:12:47.460 --> 00:12:51.344\nIf we had to buy that equipment it would,\noh, I don't have that kind of money.\n\n267\n00:12:51.344 --> 00:12:52.930\n[LAUGH]\n>> I'll tell you what most places do.\n\n268\n00:12:52.930 --> 00:12:55.160\nMost places have their\nproduction data center and\n\n269\n00:12:55.160 --> 00:12:56.680\nthen when the servers start to get old and\n\n270\n00:12:56.680 --> 00:12:59.890\nout of warranty they take those servers\nand they send them to their DR site.\n\n271\n00:12:59.890 --> 00:13:01.360\nAnd they buy new servers in productions.\n\n272\n00:13:01.360 --> 00:13:04.270\nThey've always got these nice new\nshiny servers in production and\n\n273\n00:13:04.270 --> 00:13:06.440\ntheir old out of warranty servers at DR.\n\n274\n00:13:06.440 --> 00:13:08.795\nWell what happens when you\nhave a main center failure?\n\n275\n00:13:08.795 --> 00:13:12.470\nYou're gonna fail over to DR now\nyou're on your old crappy servers and\n\n276\n00:13:12.470 --> 00:13:15.740\nthey're not under warranty and you start\nhaving hard drive failures, cuz that's\n\n277\n00:13:15.740 --> 00:13:20.290\nwhat happens when you let hard drives\nidle for too long, and it's a disaster.\n\n278\n00:13:20.290 --> 00:13:23.170\nAnd your disaster recovery center's\nsupposed to help you recover and\n\n279\n00:13:23.170 --> 00:13:25.823\nyou're failing over to this\nenvironment that's already bad.\n\n280\n00:13:25.823 --> 00:13:29.581\nWith Amazon, the servers that you spin\nup in DR are the same as the servers you\n\n281\n00:13:29.581 --> 00:13:32.458\nspin up in production and\nyou can spin up to them any time and\n\n282\n00:13:32.458 --> 00:13:35.452\nif a server comes out of warranty\nthey take it out of the rack,\n\n283\n00:13:35.452 --> 00:13:37.908\nthey put a new one in place and\nnow you've got it.\n\n284\n00:13:37.908 --> 00:13:39.040\nYou don't have to worry about any of that.\n\n285\n00:13:39.040 --> 00:13:39.810\nThat's the big advantage,\n\n286\n00:13:39.810 --> 00:13:43.310\nso take advantage of those regions any\ntime that you have a service that can be\n\n287\n00:13:43.310 --> 00:13:47.720\nspread across more than one region you can\ndo that and you get true total redundancy.\n\n288\n00:13:47.720 --> 00:13:49.880\nYou can do redundancy\nwithin a region though.\n\n289\n00:13:49.880 --> 00:13:54.930\nSo for example in US east,\nthere's US east 1a, 1b, 1c, 1d, 1e, right?\n\n290\n00:13:54.930 --> 00:13:59.640\nThere's five different data centers, five\ndifferent availability zones, or AZ's.\n\n291\n00:13:59.640 --> 00:14:02.700\nAn availability zone is\na completely independent entity.\n\n292\n00:14:02.700 --> 00:14:07.380\nIts own power, its own redundant\ngenerators, its own network connectivity,\n\n293\n00:14:07.380 --> 00:14:10.355\nits own knock staff monitoring the thing,\nright?\n\n294\n00:14:10.355 --> 00:14:13.620\nSo an AZ could go down,\nthat whole data center could go down and\n\n295\n00:14:13.620 --> 00:14:17.160\nthe other four would still be there so you\ncould spread your services across those.\n\n296\n00:14:17.160 --> 00:14:20.241\nAnd you use elastic load balancers\nto hide the fact that your servers\n\n297\n00:14:20.241 --> 00:14:23.268\nare in more than one AZ and\nnow you've got ultimate flexibility and\n\n298\n00:14:23.268 --> 00:14:26.290\nend users never even notice it,\nthey just see the load balancer.\n\n299\n00:14:26.290 --> 00:14:28.459\nThat's kind of the power\nof using Amazon for this.\n\n300\n00:14:29.792 --> 00:14:33.230\nAll right, so, the concepts we just talked\nabout, those are really general, right?\n\n301\n00:14:33.230 --> 00:14:36.510\nThose are things that really\napply to every service.\n\n302\n00:14:36.510 --> 00:14:40.150\nBut what I want to do now is I want to run\nthrough some of the different services in\n\n303\n00:14:40.150 --> 00:14:44.130\nAWS and just talk about the backup\nmechanisms that are built into Amazon.\n\n304\n00:14:44.130 --> 00:14:46.790\nNow, the ones I'm going to talk\nabout are the important ones,\n\n305\n00:14:46.790 --> 00:14:48.280\nthe ones that are on the exam.\n\n306\n00:14:48.280 --> 00:14:53.090\nBut in real life understand that Amazon\ndoes offer some great backup solutions but\n\n307\n00:14:53.090 --> 00:14:54.420\nyou don't have to use them.\n\n308\n00:14:54.420 --> 00:14:55.510\nYou can use your own.\n\n309\n00:14:55.510 --> 00:14:58.960\nIt might be that you've got some other\nbackup solution that works better for you.\n\n310\n00:14:58.960 --> 00:14:59.960\nGreat!\nUse it, that's fine,\n\n311\n00:14:59.960 --> 00:15:01.240\nyou're not limited to these.\n\n312\n00:15:01.240 --> 00:15:02.360\nBut for the exam they're gonna hit you for\n\n313\n00:15:02.360 --> 00:15:04.140\nthe Amazon one so\nwe need to make sure we know them.\n\n314\n00:15:05.150 --> 00:15:07.940\nAll right so let's start with storage.\n\n315\n00:15:07.940 --> 00:15:10.720\nStorage is the one that\nAmazon's the most proud of.\n\n316\n00:15:10.720 --> 00:15:15.730\nWhen you go into S3 and you create right\nhere in our simple storage environment,\n\n317\n00:15:15.730 --> 00:15:17.770\nyou can start to create buckets.\n\n318\n00:15:17.770 --> 00:15:23.160\nAnd those buckets, Amazon really\ndoesn't let you see much about them.\n\n319\n00:15:23.160 --> 00:15:27.560\nLike if I create a bucket, it has to\nbe for a name and I pick a region.\n\n320\n00:15:27.560 --> 00:15:29.740\nAnd when I pick that region,\n\n321\n00:15:29.740 --> 00:15:32.810\nit's not even letting me data\ncenter inside of the region, right.\n\n322\n00:15:32.810 --> 00:15:36.440\nSo I can pick US standard,\nwhich is really US east.\n\n323\n00:15:36.440 --> 00:15:39.900\nAnd when I choose that,\nit's not asking me to pick 1a, 1b, 1c,\n\n324\n00:15:39.900 --> 00:15:43.540\nit's just saying,\nhere pick this one, right?\n\n325\n00:15:43.540 --> 00:15:46.360\nAnd what's happening is Amazon\n\n326\n00:15:46.360 --> 00:15:49.280\nis guaranteeing the redundancy\non the backend of this.\n\n327\n00:15:49.280 --> 00:15:52.880\nThey're cloning and backing up\nyour data and they're storing it.\n\n328\n00:15:52.880 --> 00:15:56.515\nAnd they actually offer,\nwhat's the number, I'm gonna cheat and\n\n329\n00:15:56.515 --> 00:15:57.546\nuse my notes here.\n\n330\n00:15:57.546 --> 00:16:02.922\n99.999999999%.\n\n331\n00:16:02.922 --> 00:16:03.712\n>> Eleven nines.\n\n332\n00:16:03.712 --> 00:16:05.336\n>> Durability.\nIt's eleven nines.\n\n333\n00:16:05.336 --> 00:16:06.462\nYep, eleven nines of durability.\n\n334\n00:16:06.462 --> 00:16:10.421\nNow That's durability, not availability.\n\n335\n00:16:10.421 --> 00:16:12.500\nAll right,\nnow what's the difference there?\n\n336\n00:16:12.500 --> 00:16:16.930\nSo, durability,\nthat means no matter what happens,\n\n337\n00:16:16.930 --> 00:16:19.750\nif this server fails,\nif this hardware array fails,\n\n338\n00:16:19.750 --> 00:16:23.500\nif the hard drive fails,\nif the whole building catches on fire,\n\n339\n00:16:23.500 --> 00:16:29.040\ndurability means your data is intact and\nthey can still recreate it.\n\n340\n00:16:29.040 --> 00:16:33.600\nIf a power outage happens and you're half\nway through writing a file and it fails\n\n341\n00:16:33.600 --> 00:16:36.980\nthey can still recover the full file\nthat's not corrupt from the partial write.\n\n342\n00:16:36.980 --> 00:16:38.560\nThat's what durability is all about.\n\n343\n00:16:38.560 --> 00:16:42.110\nIt doesn't mean your data will be online\nbut it means it will be online soon.\n\n344\n00:16:42.110 --> 00:16:42.736\nThey'll get it back.\n\n345\n00:16:42.736 --> 00:16:44.735\nAvailability is different.\n\n346\n00:16:44.735 --> 00:16:49.210\nEleven nines of availability is very,\nvery difficult to achieve, but\n\n347\n00:16:49.210 --> 00:16:52.220\navailability is saying, not only is\nthe data there, but it's available,\n\n348\n00:16:52.220 --> 00:16:54.390\nwe can get to it and actually use it.\n\n349\n00:16:54.390 --> 00:16:56.657\nAnd for that,\nit's kind of a different story, but\n\n350\n00:16:56.657 --> 00:16:58.470\nthey offer eleven nines of durability.\n\n351\n00:16:58.470 --> 00:17:02.710\nThat means your data, if it's in S3,\nit's safe, and that yes,\n\n352\n00:17:02.710 --> 00:17:05.670\nit might go down at some point but\ndon't worry, you didn't lose your data.\n\n353\n00:17:05.670 --> 00:17:07.720\nAmazon will recover it,\nthey do eleven nines of that.\n\n354\n00:17:07.720 --> 00:17:09.060\nSo, really impressive stuff.\n\n355\n00:17:09.060 --> 00:17:12.230\nAnd when you configure a bucket,\nlike if I take one of these guys here,\n\n356\n00:17:12.230 --> 00:17:15.100\nI'll take my AWS demo bucket.\n\n357\n00:17:15.100 --> 00:17:18.170\nAnd you go over here, you'll see\nyou've actually got an option here for\n\n358\n00:17:18.170 --> 00:17:20.502\ncross region replication.\n\n359\n00:17:20.502 --> 00:17:27.590\nAll right, by default, it is replicating\nyour data between AZ's in the same region.\n\n360\n00:17:27.590 --> 00:17:31.540\nSo when I pick US east, or\njust US standard, there's five\n\n361\n00:17:31.540 --> 00:17:35.940\nAZ's in the US east data center, and\nit's replicating my data between those.\n\n362\n00:17:35.940 --> 00:17:38.630\nSo they're storing a copy of the data for\nme already.\n\n363\n00:17:38.630 --> 00:17:41.470\nBut I can even go cross region if I want,\nand\n\n364\n00:17:41.470 --> 00:17:44.000\nthis would let me store a copy\nof the data somewhere else.\n\n365\n00:17:44.000 --> 00:17:47.030\nSo even if I don't do this,\nit's still being replicated.\n\n366\n00:17:47.030 --> 00:17:48.880\nThey're giving me the eleven\nnines of durability.\n\n367\n00:17:48.880 --> 00:17:50.472\nBut if I turn this on\nI'll have a little more.\n\n368\n00:17:50.472 --> 00:17:52.490\nNow notice I don't have\nmy versioning turned on.\n\n369\n00:17:52.490 --> 00:17:53.890\nIf you look up here at versioning,\n\n370\n00:17:53.890 --> 00:17:56.290\nversioning lets you track more\nthan one version of a file.\n\n371\n00:17:56.290 --> 00:17:58.470\nIf I change a file,\nit will keep the old one and\n\n372\n00:17:58.470 --> 00:18:02.080\nthe new one, and we have to have\nthat turned on for cross-region.\n\n373\n00:18:02.080 --> 00:18:05.186\nSo if I turn that on, there we go,\nnow it's on, that was hard,\n\n374\n00:18:05.186 --> 00:18:08.780\nthen we can go to cross-region and\nyou'll see where we can enable that.\n\n375\n00:18:08.780 --> 00:18:11.840\nAnd again, boy,\nthis one is really challenging.\n\n376\n00:18:11.840 --> 00:18:13.362\n>> It's some complex stuff right there,\nDon.\n\n377\n00:18:13.362 --> 00:18:15.260\n[LAUGH]\n>> You just turn it on, and\n\n378\n00:18:15.260 --> 00:18:19.010\nyou pick what region you want it to go to,\nand so I've got the bucket or\n\n379\n00:18:19.010 --> 00:18:22.370\na particular prefix in the bucket, like\nif I had a folder I wanted to use, and\n\n380\n00:18:22.370 --> 00:18:24.930\nthen I can specify that\ndestination region.\n\n381\n00:18:24.930 --> 00:18:28.650\nAnd I'm in US standard, so see how I've\ngot Oregon and Northern California,\n\n382\n00:18:28.650 --> 00:18:31.530\nthat's the US West, but\nI could also say Ireland.\n\n383\n00:18:31.530 --> 00:18:32.350\nLet's send it over there.\n\n384\n00:18:32.350 --> 00:18:36.040\nAnd I can pick a bucket and now it's gonna\nstart replicating the data over there.\n\n385\n00:18:36.040 --> 00:18:38.962\nSo not only do I get the full\navailability of US East,\n\n386\n00:18:38.962 --> 00:18:43.360\nbut I also get the availability of\nEurope West, right, Ireland if I want.\n\n387\n00:18:43.360 --> 00:18:45.860\nAnd so you can choose that and\nget it set up.\n\n388\n00:18:45.860 --> 00:18:47.400\nSo kind of a neat feature.\n\n389\n00:18:47.400 --> 00:18:51.820\nThe key thing to take away here\nis that S3 already has amazing\n\n390\n00:18:51.820 --> 00:18:52.980\nredundancy built into it.\n\n391\n00:18:52.980 --> 00:18:54.850\nYou're not going to lose your data.\n\n392\n00:18:54.850 --> 00:18:58.060\nBut it couldn't go off line, and so\nif that's something you want to avoid,\n\n393\n00:18:58.060 --> 00:19:01.170\nyou can do cross-region replication and\nyou can store it that way.\n\n394\n00:19:01.170 --> 00:19:04.610\nOr, you can just have two buckets\nin two different regions and\n\n395\n00:19:04.610 --> 00:19:05.740\nsync your data yourself, right?\n\n396\n00:19:05.740 --> 00:19:08.740\nPeople use our sync and other things\nto make sure those stay up to date.\n\n397\n00:19:08.740 --> 00:19:10.170\nAnd you can store it that way too.\n\n398\n00:19:10.170 --> 00:19:11.610\nSo it's kinda up to you how\nyou want to go about it.\n\n399\n00:19:11.610 --> 00:19:14.420\nBut these are pretty easy to turn\non if you know they're there and\n\n400\n00:19:14.420 --> 00:19:15.030\nyou want to turn them on.\n\n401\n00:19:15.030 --> 00:19:16.420\nNow it does cost you more money.\n\n402\n00:19:16.420 --> 00:19:17.920\nYou're doubling your data storage.\n\n403\n00:19:17.920 --> 00:19:20.900\nSo I'm gonna turn this off\nsince I'm not using it.\n\n404\n00:19:20.900 --> 00:19:25.740\nBut if your data is important to you,\nthen you can go ahead and turn that on.\n\n405\n00:19:25.740 --> 00:19:28.890\nSo that's S3, S3 isn't the only storage\nservice that's available from Amazon.\n\n406\n00:19:28.890 --> 00:19:29.700\nThere are other ones.\n\n407\n00:19:29.700 --> 00:19:33.030\nIf I go back to my console,\nYou'll see where I've got like CloudFront,\n\n408\n00:19:33.030 --> 00:19:35.520\nElastic File System, Glacier, and so on.\n\n409\n00:19:35.520 --> 00:19:38.113\nGlacier is one they hit on\non the exam a good bit.\n\n410\n00:19:38.113 --> 00:19:39.213\nAll right.\n\n411\n00:19:39.213 --> 00:19:40.730\nS3.\n\n412\n00:19:40.730 --> 00:19:42.470\nS3 stores my data.\n\n413\n00:19:42.470 --> 00:19:43.300\nThey replicate it.\n\n414\n00:19:43.300 --> 00:19:44.300\nThey've got copies of it.\n\n415\n00:19:44.300 --> 00:19:46.330\nThey're offering me eleven\nnines of durability.\n\n416\n00:19:46.330 --> 00:19:47.790\nMy data will be there.\n\n417\n00:19:47.790 --> 00:19:50.010\nS3 is awesome, right?\n\n418\n00:19:50.010 --> 00:19:51.730\nBut it has a cost associated with it.\n\n419\n00:19:51.730 --> 00:19:54.470\nAnd that cost, it depends, but\nit's usually somewhere around $0.10\n\n420\n00:19:54.470 --> 00:19:58.030\nper gigabyte is what they're\ncharging you for, right.\n\n421\n00:19:58.030 --> 00:20:01.450\nNow, they have another\nservice called Glacier,\n\n422\n00:20:01.450 --> 00:20:06.930\nwhich lets you store your data\non much lower-cost storage.\n\n423\n00:20:06.930 --> 00:20:11.760\nIt's usually around $0.01 per gigabyte, so\nsignificantly cheaper than S3, all right.\n\n424\n00:20:11.760 --> 00:20:15.580\nSo you might ask yourself,\nwhy not use Glacier instead of S3?\n\n425\n00:20:15.580 --> 00:20:19.010\nWith S3 if I go and ask for\na file I immediately get it.\n\n426\n00:20:19.010 --> 00:20:20.300\nWith Glacier when I go and\n\n427\n00:20:20.300 --> 00:20:24.420\nask for a file it tells me your file\nwill be ready in three to five hours.\n\n428\n00:20:25.520 --> 00:20:27.650\nThree to five hours.\n\n429\n00:20:27.650 --> 00:20:30.340\nIf a user clicks on a link\nthey expect a file right now.\n\n430\n00:20:30.340 --> 00:20:31.330\nGlacier doesn't do that.\n\n431\n00:20:31.330 --> 00:20:33.040\nRight?\nSo Glacier's not really suitable for\n\n432\n00:20:33.040 --> 00:20:34.370\nour normal files.\n\n433\n00:20:34.370 --> 00:20:35.760\nBut for a backup?\n\n434\n00:20:35.760 --> 00:20:38.940\nIf I need to go to a backup,\ncan I wait three to five hours?\n\n435\n00:20:38.940 --> 00:20:39.680\nMaybe.\n\n436\n00:20:39.680 --> 00:20:41.150\nIt comes down to my RTO.\n\n437\n00:20:41.150 --> 00:20:42.260\nRight?\nMy recovery time objective.\n\n438\n00:20:42.260 --> 00:20:44.040\nCan I be down for three to five hours?\n\n439\n00:20:44.040 --> 00:20:45.540\nIf I need this file, can I wait?\n\n440\n00:20:45.540 --> 00:20:47.310\nRight?\nWe use it here for our videos.\n\n441\n00:20:47.310 --> 00:20:51.460\nWhen we record an episode, the video\nfiles, the raw files are pretty large.\n\n442\n00:20:51.460 --> 00:20:53.870\nSo we stuff them up into\nGlacier where it's cheap.\n\n443\n00:20:53.870 --> 00:20:56.792\nAnd if we ever need those raw files again,\nwhich is pretty rarely, we can go put\n\n444\n00:20:56.792 --> 00:20:59.629\na request in and within three to five\nhours we'll have the raw file available\n\n445\n00:20:59.629 --> 00:21:02.830\nagain for an episode and we can edit it\nand do whatever we need with it, right?\n\n446\n00:21:02.830 --> 00:21:05.368\nSo it's great for stuff like that\nwhere you're not urgently needing it.\n\n447\n00:21:05.368 --> 00:21:10.340\nAnd so what Amazon recommends is you set\nup what's called a tiered backup plan,\n\n448\n00:21:10.340 --> 00:21:14.180\nwhere your mission critical stuff is in\nS3, where you can get at it immediately,\n\n449\n00:21:14.180 --> 00:21:18.030\nand your non mission critical\nstuff is in Glacier, all right.\n\n450\n00:21:18.030 --> 00:21:23.730\nOr, your backup for\nyesterday is stored in S3 but your backup\n\n451\n00:21:23.730 --> 00:21:27.990\nfrom the day before or the month before or\nthe year before, that's in Glacier.\n\n452\n00:21:27.990 --> 00:21:32.940\nBecause, if I have a failure, I normally\nwant the latest and greatest backup.\n\n453\n00:21:32.940 --> 00:21:36.550\nI want the backup from as new as possible.\n\n454\n00:21:36.550 --> 00:21:37.733\nSo have that in S3.\n\n455\n00:21:37.733 --> 00:21:40.730\nBut how often do we go to old backups?\n\n456\n00:21:40.730 --> 00:21:43.940\nOh Bob in accounting deleted that\ndocument on the file server last week and\n\n457\n00:21:43.940 --> 00:21:45.210\nhe just now realized it.\n\n458\n00:21:45.210 --> 00:21:47.540\nOkay well can Bob wait\nthree to five hours?\n\n459\n00:21:47.540 --> 00:21:48.480\nHe sure can.\n\n460\n00:21:48.480 --> 00:21:50.140\nRight?\nSo Glacier works out great.\n\n461\n00:21:50.140 --> 00:21:53.960\nSo on the exam if they ever ask anything\nabout like a tiered backup solution it's\n\n462\n00:21:53.960 --> 00:21:58.730\nnormally talking about having S3 for your\ncritical stuff that you need urgently and\n\n463\n00:21:58.730 --> 00:22:02.770\nGlacier for the stuff that you just\ndon't need for three to five hours.\n\n464\n00:22:02.770 --> 00:22:04.530\nSo Glacier, you set up a vault in there.\n\n465\n00:22:04.530 --> 00:22:05.660\nIt basically works like S3.\n\n466\n00:22:05.660 --> 00:22:08.510\nWe'll cover this in another episode,\n\n467\n00:22:08.510 --> 00:22:11.710\nbut in S3 you can set up what's\ncalled a life cycle policy.\n\n468\n00:22:11.710 --> 00:22:14.450\nAnd you can say any data\nthat goes into this bucket,\n\n469\n00:22:14.450 --> 00:22:19.230\nafter it's been here 24 hours or\nseven days or a month, move it to Glacier.\n\n470\n00:22:19.230 --> 00:22:22.060\nAnd so it can actually handle it for you\nas part of the life cycle of that data.\n\n471\n00:22:22.060 --> 00:22:24.490\nIt can even handle things\nlike data retention,\n\n472\n00:22:24.490 --> 00:22:28.860\nif you've got regulatory compliance,\nyou need to save the data for ten years.\n\n473\n00:22:28.860 --> 00:22:29.590\nAll right.\n\n474\n00:22:29.590 --> 00:22:30.690\nI don't need the data.\n\n475\n00:22:30.690 --> 00:22:32.130\nBut I'm saving it cuz\nthe government told me to.\n\n476\n00:22:32.130 --> 00:22:33.890\nSo I'll put it in Glacier\nwhere it's cheap.\n\n477\n00:22:33.890 --> 00:22:36.450\nAnd if the lawyers ever come after me for\nit, I'll say, all right,\n\n478\n00:22:36.450 --> 00:22:38.390\njust give me three to five hours,\nI'll get that data for you.\n\n479\n00:22:38.390 --> 00:22:39.720\nAnd that way you're saving some money.\n\n480\n00:22:39.720 --> 00:22:42.700\nSo tiered backup solution, S3 and Glacier.\n\n481\n00:22:42.700 --> 00:22:45.250\n>> Yeah we actually had that\nhappen at a company I work for,\n\n482\n00:22:45.250 --> 00:22:48.100\nactually the company Don and\nI worked for after you left,\n\n483\n00:22:48.100 --> 00:22:52.500\nwe had some lawyers come in and say hey we\nneed some files and that was a real bear.\n\n484\n00:22:52.500 --> 00:22:55.810\nSo after that point we started\narchiving our tape backups.\n\n485\n00:22:55.810 --> 00:23:00.990\nI had a whole shelf full of tape backups\nthat I had to manually make sure,\n\n486\n00:23:00.990 --> 00:23:04.260\nokay, here they're labelled and\nput it on so we know what they were.\n\n487\n00:23:04.260 --> 00:23:07.080\nAnd keep that around just in case\nsomebody came knocking and said, hey,\n\n488\n00:23:07.080 --> 00:23:08.510\nwe need that data.\n\n489\n00:23:08.510 --> 00:23:10.860\nUsing Glacier would have\nbeen a whole lot nicer.\n\n490\n00:23:10.860 --> 00:23:11.760\n>> Yep, absolutely.\n\n491\n00:23:12.840 --> 00:23:14.300\nThere's other services that are available.\n\n492\n00:23:14.300 --> 00:23:17.910\nIf you watch the EC2 episodes you\nknow that when we create an instance\n\n493\n00:23:17.910 --> 00:23:20.980\nif the instance is storing\nits data on an EBS volume,\n\n494\n00:23:20.980 --> 00:23:25.240\nright, an Elastic Block Storage volume,\n\n495\n00:23:25.240 --> 00:23:29.920\nI gotta remember here, an EBS volume,\nthat we can take snapshots of EBS volumes.\n\n496\n00:23:29.920 --> 00:23:34.260\nAnd you could write a script to take\nan EBS snapshot every 24 hours.\n\n497\n00:23:34.260 --> 00:23:37.500\nOr to take an EBS snapshot every five\nminutes, if you want to go crazy.\n\n498\n00:23:37.500 --> 00:23:40.220\nAmazon doesn't give you\na way to automate that.\n\n499\n00:23:40.220 --> 00:23:42.370\nYou have to do it yourself, so\nyou can write scripts that do it.\n\n500\n00:23:42.370 --> 00:23:44.620\nYou'll do it through the API or whatever.\n\n501\n00:23:44.620 --> 00:23:46.574\nAnd you can start taking\nthose snapshots and so,\n\n502\n00:23:46.574 --> 00:23:50.440\nif I need to recover data from a volume,\nI can just go in and access the snapshots.\n\n503\n00:23:50.440 --> 00:23:52.864\nWell, what they don't tell\nyou is that those snapshots,\n\n504\n00:23:52.864 --> 00:23:55.295\nthey're actually stored in S3,\nyou just don't see it.\n\n505\n00:23:55.295 --> 00:23:58.396\nSo when I go to EC2 and\nI take one of my instances, so\n\n506\n00:23:58.396 --> 00:24:01.714\nI'll take one of my web servers here and\nit's online so\n\n507\n00:24:01.714 --> 00:24:06.710\nit's not gonna be happy about it, but\nI'm gonna take a snapshot anyway.\n\n508\n00:24:06.710 --> 00:24:08.269\nSo if I come in here and\n\n509\n00:24:08.269 --> 00:24:12.790\nI tell it to take a snapshot Which\nis buried in here somewhere.\n\n510\n00:24:12.790 --> 00:24:14.712\nOh shoot,\nI don't need to take a snapshot of the VM,\n\n511\n00:24:14.712 --> 00:24:16.660\nI need to take a snapshot of its volume.\n\n512\n00:24:16.660 --> 00:24:19.500\nSo if I go down here to my Volumes,\nthere we go.\n\n513\n00:24:19.500 --> 00:24:22.600\nI can pick one of the volumes from my\nmachines and I can take a snapshot of it.\n\n514\n00:24:22.600 --> 00:24:26.640\nAnd when I create a snapshot,\nI'll just call this itprotv-web01,\n\n515\n00:24:26.640 --> 00:24:31.730\nand this is my web server,\nand I'll create a snapshot.\n\n516\n00:24:31.730 --> 00:24:32.550\nWhere's that snapshot go?\n\n517\n00:24:32.550 --> 00:24:36.280\nWell, the easy answer is it goes right\nhere into the Snapshot folder, right?\n\n518\n00:24:36.280 --> 00:24:38.440\nBut the reality is that it's\ngoing to create a snapshot and\n\n519\n00:24:38.440 --> 00:24:39.670\nit's going to store it in S3.\n\n520\n00:24:39.670 --> 00:24:40.320\nThat's where it's going.\n\n521\n00:24:40.320 --> 00:24:41.360\nAll right?\n\n522\n00:24:41.360 --> 00:24:42.980\nBut I don't see that in my S3 account.\n\n523\n00:24:42.980 --> 00:24:46.100\nBut all of the advantages of S3\nwhere the data is replicated at\n\n524\n00:24:46.100 --> 00:24:47.080\n11 9's of durability.\n\n525\n00:24:47.080 --> 00:24:49.030\nThat means my snapshot\nhas 11 9's of durability.\n\n526\n00:24:49.030 --> 00:24:52.530\nRight, when I have a failure,\nAmazon has given\n\n527\n00:24:52.530 --> 00:24:55.720\nme an 11 9's guarantee that I'll be\nable to get to that snapshot and\n\n528\n00:24:55.720 --> 00:24:58.310\npotentially return it,\nrestore it to my system.\n\n529\n00:24:59.390 --> 00:25:04.370\nOk, that's a pretty neat little thing\nthat goes on that we don't even see, but\n\n530\n00:25:04.370 --> 00:25:07.840\nthe snapshots themselves\nare a great way to access data.\n\n531\n00:25:07.840 --> 00:25:11.260\nIf I'm doing snapshots of my machine\nevery day and someone calls and says,\n\n532\n00:25:11.260 --> 00:25:13.430\noh yeah I deleted this file on Tuesday.\n\n533\n00:25:13.430 --> 00:25:16.370\nI can go on and\nfind the snapshot from Tuesday and\n\n534\n00:25:16.370 --> 00:25:20.540\nI can create a new volume based on that\nsnapshot and mount it to another VM and\n\n535\n00:25:20.540 --> 00:25:22.650\naccess that data and\nrestore the file that I'm missing.\n\n536\n00:25:22.650 --> 00:25:25.410\nSo we can get data out of\nthe snapshots whenever we need it.\n\n537\n00:25:25.410 --> 00:25:27.450\nSo that's another one\nthat we've got there.\n\n538\n00:25:27.450 --> 00:25:28.970\n>> How quickly does that eat up data?\n\n539\n00:25:28.970 --> 00:25:32.710\nOr storage, should I say,\ncreating snapshots and that.\n\n540\n00:25:32.710 --> 00:25:34.110\nIs that affecting our S3 account?\n\n541\n00:25:34.110 --> 00:25:35.000\nAre we paying for that?\n\n542\n00:25:35.000 --> 00:25:37.230\n>> Well, so yes and no.\n\n543\n00:25:37.230 --> 00:25:38.920\n>> Yeah.\n>> Yes, you pay for everything right?\n\n544\n00:25:38.920 --> 00:25:40.430\n>> Yeah.\n>> The first snapshot you take is\n\n545\n00:25:40.430 --> 00:25:43.940\na complete image of your instance and\nyou're gonna pay for that.\n\n546\n00:25:43.940 --> 00:25:46.450\nBut your followup snapshots that\nyou do are actually incremental.\n\n547\n00:25:46.450 --> 00:25:49.870\nAnd so, they're not that big, I mean\nthey'll show as being the full size but\n\n548\n00:25:49.870 --> 00:25:52.670\non the back end they're really just\nthe changes from the last snapshot.\n\n549\n00:25:52.670 --> 00:25:56.240\nAnd so it doesn't add up to be that\nmuch and so you can create a bunch.\n\n550\n00:25:56.240 --> 00:25:59.190\nBut you usually want to make sure that\nif you're doing an automated creation of\n\n551\n00:25:59.190 --> 00:26:02.790\nsnapshots, that your scripts are also\nremoving old snapshots as they go.\n\n552\n00:26:02.790 --> 00:26:05.580\nRight, do a rolling window,\nyou don't wanna keep things for too long.\n\n553\n00:26:05.580 --> 00:26:07.522\nYou'll run yourself broke in storage fees.\n\n554\n00:26:07.522 --> 00:26:08.920\n>> [LAUGH] Yes you will.\n\n555\n00:26:08.920 --> 00:26:11.000\n>> Let's see what else do we have?\n\n556\n00:26:11.000 --> 00:26:14.990\nSo let's say that you have\na ton of data on site.\n\n557\n00:26:14.990 --> 00:26:19.150\nAnd you want to get that data into AWS,\nbut it's a ton of data.\n\n558\n00:26:19.150 --> 00:26:21.900\nMaybe you have like 50 terabytes of data.\n\n559\n00:26:21.900 --> 00:26:24.870\nWell, if you were to upload that into AWS,\nthey don't charge you for\n\n560\n00:26:24.870 --> 00:26:25.920\nuploads into AWS.\n\n561\n00:26:25.920 --> 00:26:27.840\nSo you wouldn't have to pay for\nthe 50 terabytes you're uploading.\n\n562\n00:26:27.840 --> 00:26:29.060\nYou would have to pay for\nthe storage of it, but\n\n563\n00:26:29.060 --> 00:26:30.570\nyou wouldn't have to pay for\nthe bandwidth.\n\n564\n00:26:30.570 --> 00:26:32.690\nBut how long is it going to take\nyou to upload 50 terabytes of data?\n\n565\n00:26:32.690 --> 00:26:34.950\nIt could take a long time.\n\n566\n00:26:34.950 --> 00:26:37.860\nSo they have a service\ncalled AWS import/export.\n\n567\n00:26:37.860 --> 00:26:40.010\nAnd what that does,\nthey basically let you take your data and\n\n568\n00:26:40.010 --> 00:26:43.140\nput it on hard drives and\nmail the hard drives to them.\n\n569\n00:26:43.140 --> 00:26:46.880\nSometimes it's faster to mail hard drives\nto somebody then it would be to try to\n\n570\n00:26:46.880 --> 00:26:50.490\nupload it over the internet,\ncuz you got bandwidth restrictions.\n\n571\n00:26:50.490 --> 00:26:52.070\nSo you mail them the hard drives and\n\n572\n00:26:52.070 --> 00:26:57.110\nthey will import that data into a S3\nvolume or whatever it is that you want.\n\n573\n00:26:57.110 --> 00:26:58.630\nThey'll put the data where you want.\n\n574\n00:26:58.630 --> 00:27:01.250\nAnd now it just happens nice and fast.\n\n575\n00:27:01.250 --> 00:27:03.540\nSo I don't have a cool little\nwebpage to show up for this one.\n\n576\n00:27:03.540 --> 00:27:05.260\nYou basically just have to\ngo up here to Support and\n\n577\n00:27:05.260 --> 00:27:06.610\nreach out to the support center.\n\n578\n00:27:06.610 --> 00:27:09.750\nOpen up a ticket with them and tell them\nyou want to do the AWS import/export.\n\n579\n00:27:09.750 --> 00:27:11.130\nNow I'm talking about import.\n\n580\n00:27:11.130 --> 00:27:14.160\nYou can do export too, where they'll\nbasically write these to drives.\n\n581\n00:27:14.160 --> 00:27:17.360\nOr they can even do transfers in\nbetween regions where they don't cross\n\n582\n00:27:17.360 --> 00:27:20.070\nthe Internet at all, they just go\nstraight through Amazon's own network.\n\n583\n00:27:20.070 --> 00:27:24.590\nSo there's a few ways to do that and\nmove your data between the systems.\n\n584\n00:27:24.590 --> 00:27:26.690\nSo, you know, it's a neat service.\n\n585\n00:27:26.690 --> 00:27:29.220\nDo keep in mind if you send them the hard\ndrives they don't send them back,\n\n586\n00:27:29.220 --> 00:27:31.220\nthe hard drives get shredded\nafter they're done, so\n\n587\n00:27:31.220 --> 00:27:33.298\nthat's just part of the cost\nof uploading to it.\n\n588\n00:27:33.298 --> 00:27:33.830\nThat is import/export.\n\n589\n00:27:33.830 --> 00:27:38.180\nThe last one I want to talk about in this\nepisode, I got a lot more to talk about,\n\n590\n00:27:38.180 --> 00:27:41.500\nbut the last one for this episode\nis one that a lot of people don't\n\n591\n00:27:41.500 --> 00:27:44.590\nknow about even though it does have a nice\nlittle button right here on the screen.\n\n592\n00:27:44.590 --> 00:27:48.950\nNow under our storage and content\ndelivery you'll see storage gateway.\n\n593\n00:27:48.950 --> 00:27:53.960\nOkay, storage gateway is one of\nthe coolest features that Amazon has.\n\n594\n00:27:53.960 --> 00:27:57.420\nOne challenge you'll have is that a lot of\norganizations are still doing things like\n\n595\n00:27:57.420 --> 00:27:58.700\nbacking up to tape.\n\n596\n00:27:58.700 --> 00:28:01.380\nRight, and boy is it hard to\nget them to go away from tape.\n\n597\n00:28:01.380 --> 00:28:03.430\nThey just love that idea of having tapes,\nand\n\n598\n00:28:03.430 --> 00:28:05.530\nbeing able to rotate tapes, and get at it.\n\n599\n00:28:05.530 --> 00:28:08.940\nSo when you start talking to them\nabout pushing data into the cloud,\n\n600\n00:28:08.940 --> 00:28:11.110\nthey get kinda hesitant, right?\n\n601\n00:28:11.110 --> 00:28:14.780\nFor those people,\nthe Amazon Storage Gateway is amazing.\n\n602\n00:28:14.780 --> 00:28:16.580\nWhat it is, is actually a virtual plan.\n\n603\n00:28:16.580 --> 00:28:18.180\nSee how it's telling me to download and\n\n604\n00:28:18.180 --> 00:28:22.480\ndeploy a virtual machine on\na host in my own data center?\n\n605\n00:28:22.480 --> 00:28:25.590\nWhy is Amazon telling me to do\nsomething in my own data center?\n\n606\n00:28:25.590 --> 00:28:28.350\nWhat they do is they have a virtual\nmachine that you can deploy.\n\n607\n00:28:28.350 --> 00:28:30.350\nSo let's say you have like VMWare ESX, or\n\n608\n00:28:30.350 --> 00:28:31.750\nsomething like that running\nin your environment.\n\n609\n00:28:31.750 --> 00:28:36.050\nYou can deploy this VM and\nit creates an iSCSI appliance, and\n\n610\n00:28:36.050 --> 00:28:40.120\non your local network it actually\nlooks like a tape server.\n\n611\n00:28:40.120 --> 00:28:45.150\nIt looks like a tape robot, and\nyou start backing up to this tape robot.\n\n612\n00:28:45.150 --> 00:28:49.980\nAnd it just shows us having constantly\nfresh new rotated up tapes.\n\n613\n00:28:49.980 --> 00:28:52.910\nEvery single day it shows us having fresh,\nbrand new tapes that are all empty,\n\n614\n00:28:52.910 --> 00:28:53.820\nready to be backed up onto.\n\n615\n00:28:53.820 --> 00:28:55.930\nAnd you start backing up.\n\n616\n00:28:55.930 --> 00:28:59.910\nAnd when you back up, what you're\nbacking up to is what's called a VTL,\n\n617\n00:28:59.910 --> 00:29:02.430\na Virtual Tape Library, okay?\n\n618\n00:29:02.430 --> 00:29:05.700\nAnd with each virtual tape\ninstance you provision\n\n619\n00:29:05.700 --> 00:29:07.070\nit's creating a separate gateway.\n\n620\n00:29:07.070 --> 00:29:09.090\nSo you'd have a list here\nof virtual tape gateways.\n\n621\n00:29:09.090 --> 00:29:11.930\nI don't have any, but\nthat's what would show up here.\n\n622\n00:29:11.930 --> 00:29:15.400\nAnd then with those gateways,\nthose tapes are really being stored in S3.\n\n623\n00:29:15.400 --> 00:29:16.660\nWe don't see it, it's hidden.\n\n624\n00:29:16.660 --> 00:29:18.120\nThey look like tapes to us.\n\n625\n00:29:18.120 --> 00:29:20.640\nSo maybe use Symantec Backup Exec or\n\n626\n00:29:20.640 --> 00:29:25.700\nCommVault or IBM's Tivloli, Arcserve,\none of those traditional backup programs.\n\n627\n00:29:25.700 --> 00:29:28.930\nThey just see this is a tape robot and\nthey start backing-up to it.\n\n628\n00:29:28.930 --> 00:29:32.960\nAnd then, here in the UI you can\ncreate what is called a Tape Shelf,\n\n629\n00:29:32.960 --> 00:29:37.430\nwhere you take the tapes out of the\nlibrary which is like the auto loader and\n\n630\n00:29:37.430 --> 00:29:39.940\nyou move into a shelf which is GLACIER.\n\n631\n00:29:39.940 --> 00:29:44.470\nSo you've got Amazon S3 and\nyou've got Amazon GLACIER, so now you've\n\n632\n00:29:44.470 --> 00:29:47.630\ngot tapes that are available immediately,\nthey are in the loader, they are ready.\n\n633\n00:29:47.630 --> 00:29:49.150\nRight, they're in\nthe Virtual Tape Library,\n\n634\n00:29:49.150 --> 00:29:53.560\nand you've got tapes that are in storage\nthat will take three to five hours to get.\n\n635\n00:29:53.560 --> 00:29:56.340\nWell, how long is it gonna take me to\ncall one of those third-party vault\n\n636\n00:29:56.340 --> 00:29:59.750\ncompanies to say, I need tape 75, and\nthey've gotta get it out of the vault,\n\n637\n00:29:59.750 --> 00:30:00.680\nthey've gotta drive it over,\n\n638\n00:30:00.680 --> 00:30:03.450\nthree to five hours is probably right\nin line with what that's gonna take.\n\n639\n00:30:03.450 --> 00:30:06.640\nSo, the Virtual Tape Shelf does that,\nand it keeps the storage down.\n\n640\n00:30:06.640 --> 00:30:10.450\nSo if you're a tape environment and\nyou really don't wanna get rid of tapes,\n\n641\n00:30:10.450 --> 00:30:13.560\nyou have this model in place,\nyou got procedures built to run,\n\n642\n00:30:13.560 --> 00:30:15.480\nyou've got software you've invested in.\n\n643\n00:30:15.480 --> 00:30:19.060\nThis is a great way to leverage S3 and\nGLACIER for your storage, but\n\n644\n00:30:19.060 --> 00:30:21.110\nstill keep the tape model, right?\n\n645\n00:30:21.110 --> 00:30:24.140\nThis device up here,\nwe've got Deploy a new Gateway.\n\n646\n00:30:24.140 --> 00:30:26.660\nYou can choose to deploy a gateway, and\n\n647\n00:30:26.660 --> 00:30:28.660\nthis is where its going to ask\nyou what kind your gonna do and\n\n648\n00:30:28.660 --> 00:30:31.940\nwhat I'm talking about is\nthe Gateway-Virtual Tape Library and\n\n649\n00:30:31.940 --> 00:30:37.050\nso it lets you create this virtual machine\nthat looks like a tape server okay.\n\n650\n00:30:37.050 --> 00:30:39.740\nThat's not the only one you can actually\ndo these other ones Gateway-Cached\n\n651\n00:30:39.740 --> 00:30:42.430\nvolumes and Gateway-Stored\nvolumes these are other ones\n\n652\n00:30:42.430 --> 00:30:45.630\nthese don't look like tape libraries all\nright these are a little bit different.\n\n653\n00:30:45.630 --> 00:30:47.650\nThe tape library that's\nthe coolest one I think.\n\n654\n00:30:47.650 --> 00:30:53.490\nBut the other two, basically what\nyou can do is one of two things.\n\n655\n00:30:53.490 --> 00:30:56.920\nIf you want your primary\ndata to be up in AWS,\n\n656\n00:30:56.920 --> 00:31:01.100\nbut you want a copy of\nall of your data locally.\n\n657\n00:31:01.100 --> 00:31:04.700\nLet's say your biggest fear is that Amazon\ngoes out of business tomorrow right?\n\n658\n00:31:04.700 --> 00:31:07.440\nWhat happens if Amazon goes\nout of business tomorrow?\n\n659\n00:31:07.440 --> 00:31:08.810\nI just lost all my data.\n\n660\n00:31:08.810 --> 00:31:12.700\nAnd maybe they go in to bankruptcy filing\nand the courts freeze all the data, and\n\n661\n00:31:12.700 --> 00:31:14.100\nI can't get at it.\n\n662\n00:31:14.100 --> 00:31:17.150\nThis happened to a company\nnot too long ago.\n\n663\n00:31:17.150 --> 00:31:22.770\nThe australian file upload site, that\ncrazy guy Kim.com, do you know that one?\n\n664\n00:31:22.770 --> 00:31:24.110\n>> No I didn't know-\n>> Mega Upload,\n\n665\n00:31:24.110 --> 00:31:25.050\nthat's what it was-\n>> Oh, Mega Upload.\n\n666\n00:31:25.050 --> 00:31:25.670\n>> Mega Upload.\nPeople\n\n667\n00:31:25.670 --> 00:31:29.740\ncould store all this data in Mega Upload\nand it was a lot of illegal stuff, and so\n\n668\n00:31:29.740 --> 00:31:32.320\nthey got shut down, and\npeople lost their data.\n\n669\n00:31:32.320 --> 00:31:36.140\nAnd it was two years before the courts\nfinally said here's the way you can get at\n\n670\n00:31:36.140 --> 00:31:37.380\nyour data, right.\n\n671\n00:31:37.380 --> 00:31:39.260\nSo imagine if that happened with Amazon.\n\n672\n00:31:39.260 --> 00:31:42.840\nWell, with the Gateway-Cached\nvolumes what you can do\n\n673\n00:31:42.840 --> 00:31:47.040\nis you can store all your data up in\nAmazon and you run this gateway appliance.\n\n674\n00:31:47.040 --> 00:31:50.250\nAgain a virtual machine that's running\ndown on your system that will cache\n\n675\n00:31:50.250 --> 00:31:55.430\nall of the volumes you have in Amazon and\nbring those down locally.\n\n676\n00:31:55.430 --> 00:31:57.620\nOkay, so you'll have a copy locally.\n\n677\n00:31:57.620 --> 00:31:58.890\nAnd if you need to access the data,\n\n678\n00:31:58.890 --> 00:32:02.930\nyou can access the local copy faster\nthan you can going out to the cloud, and\n\n679\n00:32:02.930 --> 00:32:05.330\nif Amazon goes out of business\nyou've got a copy of all the data.\n\n680\n00:32:05.330 --> 00:32:06.880\nSo that's kind of one way to do it.\n\n681\n00:32:06.880 --> 00:32:11.840\nThat's primary data in Amazon,\nback up copy at your facility.\n\n682\n00:32:11.840 --> 00:32:13.130\nYou can also do the opposite.\n\n683\n00:32:13.130 --> 00:32:15.820\nThe opposite is a gateway stored volume.\n\n684\n00:32:15.820 --> 00:32:18.360\nThe volumes of data is stored on premise.\n\n685\n00:32:18.360 --> 00:32:19.140\nIt's your network.\n\n686\n00:32:19.140 --> 00:32:23.250\nYou've got the data there,\nthen you upload, you backup to S3 and\n\n687\n00:32:23.250 --> 00:32:24.700\nstore your data.\n\n688\n00:32:24.700 --> 00:32:26.660\nThat's very similar to\nthe virtual tape library, but\n\n689\n00:32:26.660 --> 00:32:28.970\nit gets that whole tape thing\nout of the picture, right?\n\n690\n00:32:28.970 --> 00:32:31.450\nNow, we're just backing up\nour data right into S3.\n\n691\n00:32:31.450 --> 00:32:35.300\nAnd the way that the appliance works\nis it's a virtual machine that you run.\n\n692\n00:32:35.300 --> 00:32:38.270\nIt builds a VPN tunnel back to Amazon.\n\n693\n00:32:38.270 --> 00:32:40.950\nAnd that's what connects it in and\nit uploads over this secure,\n\n694\n00:32:40.950 --> 00:32:43.020\nencrypted connection to backup your data.\n\n695\n00:32:43.020 --> 00:32:46.750\nSo three different systems right\nthere that let you back up your data.\n\n696\n00:32:46.750 --> 00:32:48.880\nOne that emulates a tape drive.\n\n697\n00:32:48.880 --> 00:32:51.570\nOne that backs up Amazon data to you.\n\n698\n00:32:51.570 --> 00:32:54.110\nAnd the third that backs\nup your data to Amazon.\n\n699\n00:32:54.110 --> 00:32:57.970\nBe aware of the three of those, and on the\nexam, they're kind of easy to confuse, so\n\n700\n00:32:57.970 --> 00:33:00.295\nmake sure you remember which does which,\nright?\n\n701\n00:33:00.295 --> 00:33:01.580\nGateway-cached?\n\n702\n00:33:01.580 --> 00:33:04.485\nThat's where the data is at Amazon and\nthe backup is on your side.\n\n703\n00:33:04.485 --> 00:33:09.240\nGateway-stored, that's where the data is\non your side and the backup is on Amazon.\n\n704\n00:33:09.240 --> 00:33:11.970\nAnd then the virtual tape library,\ndata is on your side and\n\n705\n00:33:11.970 --> 00:33:14.190\nit's backed up through\nthe virtual tapes up to Amazon,\n\n706\n00:33:14.190 --> 00:33:16.370\nso definitely know the difference\nbetween those three.\n\n707\n00:33:16.370 --> 00:33:17.150\n>> Awesome stuff, Don.\n\n708\n00:33:17.150 --> 00:33:21.200\nWell, I know you've got\ntons of more backup and\n\n709\n00:33:21.200 --> 00:33:25.635\nrecovery type options for us available\nin AWS, but we have run out of time.\n\n710\n00:33:25.635 --> 00:33:27.350\n>> [LAUGH]\n>> Really looking forward to that part\n\n711\n00:33:27.350 --> 00:33:28.760\ntwo, so thank you for this part one.\n\n712\n00:33:28.760 --> 00:33:31.065\nThank you guys for watching,\nwe're gonna sign off, and\n\n713\n00:33:31.065 --> 00:33:32.615\nhopefully we'll see you in part two.\n\n714\n00:33:32.615 --> 00:33:35.355\nSigning off for ITProTV,\nI've been your host Daniel Lowrie.\n\n715\n00:33:35.355 --> 00:33:35.925\n>> And I'm Don Pezet.\n\n716\n00:33:35.925 --> 00:33:36.937\n>> And we'll see you next time.\n\n717\n00:33:36.937 --> 00:33:42.900\n[MUSIC]\n\n",
          "vimeoId": "149198699"
        },
        {
          "description": "In this episode, Don and Daniel continue their exposition of AWS Disaster Recovery options available in the different AWS services. They pick up with AWS Compute (Amazon Machine Images, Availability Zones, and EC2 VM Import Connector). Then they look at networking backup/redundancy options found in Route 53, Elastic Load Balancers(ELB) and Virtual Private Clouds. From there they jump to database services; Relation Database Service(RDS), DynamoDB, and Redshift. Finally they look at Deployment Orchestration services, specifically CloudFormation, Elastic Beanstalk, and OpsWorks.",
          "length": "1920",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/amazon-acsa/amazon-acsa-9-1-2-backup_and_recovery_services_pt2-121615-1.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/amazon-acsa/amazon-acsa-9-1-2-backup_and_recovery_services_pt2-121615-1-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/amazon-acsa/amazon-acsa-9-1-2-backup_and_recovery_services_pt2-121615-1-sm.jpg",
          "title": "Backup and Recovery Services Part 2",
          "transcript": "WEBVTT\n\n1\n00:00:00.009 --> 00:00:10.009\n[MUSIC]\n\n2\n00:00:11.994 --> 00:00:13.360\nAll right, greetings everyone.\n\n3\n00:00:13.360 --> 00:00:16.600\nAnd welcome to another\ngreat episode of IT Pro TV.\n\n4\n00:00:16.600 --> 00:00:19.650\nI'm your host Daniel Lowrie and\nin today's episode we're continuing on\n\n5\n00:00:19.650 --> 00:00:23.670\nwith our\nAWS Certified SysOps Administrator series.\n\n6\n00:00:23.670 --> 00:00:25.500\nJoining me, well you know who he is,\n\n7\n00:00:25.500 --> 00:00:29.590\nhe's the certified SysOps admin himself,\nMr. Don Pezet.\n\n8\n00:00:29.590 --> 00:00:30.860\nDon, welcome to the show, sir.\n\n9\n00:00:30.860 --> 00:00:34.166\n>> Thanks for having me back Daniel and\nI'm glad to be back on the show,\n\n10\n00:00:34.166 --> 00:00:36.312\nespecially since we're\ndoing a part two for\n\n11\n00:00:36.312 --> 00:00:40.198\nyesterday's episode where we got through\na lot of information on the backup and\n\n12\n00:00:40.198 --> 00:00:43.620\nrecovery services available in AWS,\nwe focused really on storage and\n\n13\n00:00:43.620 --> 00:00:47.065\nI had a lot more I wanted to cover so\nthat's what we're gonna do today.\n\n14\n00:00:47.065 --> 00:00:50.056\nWe're gonna take a look at some of\nthe other services that are out there and\n\n15\n00:00:50.056 --> 00:00:52.481\nreally, just get a chance to\nsee what's available for us.\n\n16\n00:00:52.481 --> 00:00:55.557\nRemember on the exam there's some things\nthey expect you to know how to do and\n\n17\n00:00:55.557 --> 00:00:56.677\nwe're gonna cover those.\n\n18\n00:00:56.677 --> 00:00:59.521\nBut there's other things where they just\nwant you to be aware of the options,\n\n19\n00:00:59.521 --> 00:01:00.850\nwhere you know what's available.\n\n20\n00:01:00.850 --> 00:01:03.810\nAnd so we're gonna get a chance to see\nthat, and some of the different services\n\n21\n00:01:03.810 --> 00:01:06.880\nand how the back up and recovery solutions\nkind of fall into place for them.\n\n22\n00:01:06.880 --> 00:01:09.510\n>> Yeah, and\nin our part one we covered storage,\n\n23\n00:01:09.510 --> 00:01:12.160\nwe hit it pretty hard actually,\nand for good reason, right?\n\n24\n00:01:12.160 --> 00:01:15.720\nWe do want to be backing up all of\nour storage, all of our instances and\n\n25\n00:01:15.720 --> 00:01:21.010\nthings of that nature, but Don,\nAWS provides a lot of different services.\n\n26\n00:01:21.010 --> 00:01:24.400\nAnd from what I can tell they all\nhave their own kind of backup or\n\n27\n00:01:24.400 --> 00:01:27.680\nrecovery type of solution and\nthat's where we're gonna start today.\n\n28\n00:01:27.680 --> 00:01:28.610\nWhat, where do we begin?\n\n29\n00:01:29.630 --> 00:01:31.660\n>> It is, it's all over the place.\n\n30\n00:01:31.660 --> 00:01:32.580\nWe focused on storage,\n\n31\n00:01:32.580 --> 00:01:35.860\nthat one's knocked out, let's just move\non to the next biggest thing, all right?\n\n32\n00:01:35.860 --> 00:01:38.200\nWhen most people think of AWS,\nthey think of instances,\n\n33\n00:01:38.200 --> 00:01:41.120\nthey think of virtual machines\nrunning in the cloud.\n\n34\n00:01:41.120 --> 00:01:42.980\nAnd we need to back those up.\n\n35\n00:01:42.980 --> 00:01:46.410\nWell, there's actually two different\nsolutions available for backing up EC2,\n\n36\n00:01:46.410 --> 00:01:49.540\nand there's even other things\nthat get kind of involved, right?\n\n37\n00:01:49.540 --> 00:01:52.150\nLet's not even talk about backups,\nlet's talk about regions, right?\n\n38\n00:01:52.150 --> 00:01:54.160\nI mentioned regions in the last episode.\n\n39\n00:01:54.160 --> 00:01:58.410\nWhen you spin up an instance,\nthere's a chance that instance could fail.\n\n40\n00:01:58.410 --> 00:02:00.040\nSo what do I do?\n\n41\n00:02:00.040 --> 00:02:01.640\nIf I have backups I can always restore it,\n\n42\n00:02:01.640 --> 00:02:04.960\nbut If I'm having to restore from\na backup, that means I've got down time.\n\n43\n00:02:04.960 --> 00:02:07.290\nAnd if I want to avoid\nthat down time altogether,\n\n44\n00:02:07.290 --> 00:02:08.640\nthat doesn't necessarily help me, right?\n\n45\n00:02:08.640 --> 00:02:13.130\nI mean, it helps you recover, but\nif you're trying to keep your down time,\n\n46\n00:02:13.130 --> 00:02:19.750\nyour RTO, as low as possible, then what's\nbetter is to have a second instance.\n\n47\n00:02:19.750 --> 00:02:22.810\nAnd maybe even a second\ninstance in a different region.\n\n48\n00:02:22.810 --> 00:02:25.800\nSo I might have five servers\nhere in US East, and\n\n49\n00:02:25.800 --> 00:02:28.130\nthen have five more\nservers over in US West.\n\n50\n00:02:28.130 --> 00:02:31.570\nAnd then that way if the East servers\nfail, then we jump over to West.\n\n51\n00:02:31.570 --> 00:02:33.200\nAnd that's where they are up and going.\n\n52\n00:02:33.200 --> 00:02:37.550\nI can still be running my restores to\nget those VM's fixed over in US East.\n\n53\n00:02:37.550 --> 00:02:39.030\nBut the ones in US West are up and going.\n\n54\n00:02:39.030 --> 00:02:42.470\nRight, so the regions are really a great\nexample of something we can use to\n\n55\n00:02:42.470 --> 00:02:46.160\nprovide redundancy and\nits really redundancy not backup.\n\n56\n00:02:46.160 --> 00:02:50.247\nNow that's a question I get a lot is well\nif I've got more then one server do I need\n\n57\n00:02:50.247 --> 00:02:51.896\nto do backups anymore, right?\n\n58\n00:02:51.896 --> 00:02:53.663\nCan I just ignore the backups?\n\n59\n00:02:53.663 --> 00:02:55.163\nAnd the answers no and\n\n60\n00:02:55.163 --> 00:02:59.925\nthat's because when you have more\nthen one server the answer is no.\n\n61\n00:02:59.925 --> 00:03:03.128\nI'm saying the answer is whatever\nmeans you still have to do backup.\n\n62\n00:03:03.128 --> 00:03:04.420\n>> [LAUGH]\n>> That's what I'm trying to say.\n\n63\n00:03:04.420 --> 00:03:08.240\nYou still have to do the backups,\nbecause what happens is yes,\n\n64\n00:03:08.240 --> 00:03:10.710\nif one server fails then you've\ngot another one over there, right?\n\n65\n00:03:10.710 --> 00:03:12.420\nSo it's up and going.\n\n66\n00:03:12.420 --> 00:03:15.660\nBut when you have servers that\nare serving up the same website or\n\n67\n00:03:15.660 --> 00:03:17.860\nthe same database or\nwhatever, what do you do?\n\n68\n00:03:17.860 --> 00:03:21.130\nYou replicate between them so\nyou have the same data on them.\n\n69\n00:03:21.130 --> 00:03:24.740\nWhat happens if a user accidentally\ndeletes data from one server?\n\n70\n00:03:24.740 --> 00:03:28.470\nWell the delete replicates over to\nthe other one and you lose it there, too.\n\n71\n00:03:28.470 --> 00:03:32.720\nAnd so now, if I need to recover\nfrom a human error, what can I do?\n\n72\n00:03:32.720 --> 00:03:34.804\nWell, the other servers\naren't gonna help me there.\n\n73\n00:03:34.804 --> 00:03:37.080\nI need my backups.\n\n74\n00:03:37.080 --> 00:03:43.061\nAnd the two primary ways to back up\nan instance inside of AWS is to use AMIs,\n\n75\n00:03:43.061 --> 00:03:48.120\nthe Amazon Machine Images,\nor to use snapshots, right?\n\n76\n00:03:48.120 --> 00:03:50.680\nBoth are effective, and\nboth kind of serve a different purpose.\n\n77\n00:03:50.680 --> 00:03:52.390\nLet me show you here on my console.\n\n78\n00:03:52.390 --> 00:03:56.530\nSo if I jump into my console and\nI go into EC2, and\n\n79\n00:03:56.530 --> 00:04:00.120\nI go into my Instances,\nI've got an instance right here.\n\n80\n00:04:00.120 --> 00:04:01.430\nSo this is a web server.\n\n81\n00:04:01.430 --> 00:04:02.620\nIt's nothing too special.\n\n82\n00:04:02.620 --> 00:04:04.290\nIt's just a Linux box.\n\n83\n00:04:04.290 --> 00:04:06.130\nIt's got Apache on it and that's it.\n\n84\n00:04:06.130 --> 00:04:07.480\nRight?\nSo it's up and running.\n\n85\n00:04:07.480 --> 00:04:11.320\nAnd if I want to back it up so\nthat if somebody comes along and\n\n86\n00:04:11.320 --> 00:04:15.480\ndeletes a file by accident,\na snapshot's a great way to do that.\n\n87\n00:04:15.480 --> 00:04:18.750\nI can come up here to actions and\nI can go into my instance and\n\n88\n00:04:18.750 --> 00:04:19.580\nI can take a snapshot.\n\n89\n00:04:19.580 --> 00:04:21.760\nAnd actually I can't do it from here.\n\n90\n00:04:21.760 --> 00:04:27.180\nWhen you do a snapshot, a snapshot is\nreally just a snapshot of the hard drives,\n\n91\n00:04:27.180 --> 00:04:29.550\nof the volumes that\nare attached to the disk.\n\n92\n00:04:29.550 --> 00:04:32.230\nAnd so when I choose the instance and\nI go to Actions, you'll notice under\n\n93\n00:04:32.230 --> 00:04:36.410\nInstant Settings, Image, and so on,\nI don't have the snapshot option.\n\n94\n00:04:36.410 --> 00:04:37.340\nIt's not in these menus.\n\n95\n00:04:37.340 --> 00:04:40.360\nI would have to do\nthe snapshot of its volumes.\n\n96\n00:04:40.360 --> 00:04:43.450\nSo if I take this Instance here, and\n\n97\n00:04:43.450 --> 00:04:47.330\nI go down to my volumes and\nfind the drives that are attached in.\n\n98\n00:04:47.330 --> 00:04:50.270\nI've got two drives attached to mine,\nI should probably label these so\n\n99\n00:04:50.270 --> 00:04:53.390\nI can remember what they are,\nbut you can take these drives and\n\n100\n00:04:53.390 --> 00:04:56.250\nyou can go to action and\ncreate a snapshot, and so\n\n101\n00:04:56.250 --> 00:05:01.220\nI can take a snapshot of that disk and now\nI've got a backup of the disk as it is,\n\n102\n00:05:01.220 --> 00:05:04.570\nand if a user comes along and accidentally\ndeletes something, I can just bring\n\n103\n00:05:04.570 --> 00:05:09.370\nthe snapshot right back again, and\nI can either replace this disk or\n\n104\n00:05:09.370 --> 00:05:14.040\nI can add it as a third disk, and that\nway, we can go and recover from there.\n\n105\n00:05:14.040 --> 00:05:17.460\nSo you've got a few different options\nas far as how you wanna go about that\n\n106\n00:05:17.460 --> 00:05:18.050\nwith the snapshot.\n\n107\n00:05:18.050 --> 00:05:20.420\nThe thing about a snapshot is,\n\n108\n00:05:20.420 --> 00:05:24.090\nthey really intend you to restore a\nsnapshot to the original virtual machine.\n\n109\n00:05:24.090 --> 00:05:26.220\nYou don't have to,\nyou can restore it to other ones, but\n\n110\n00:05:26.220 --> 00:05:28.100\nit's really intended to go\nto the virtual machine.\n\n111\n00:05:28.100 --> 00:05:33.270\nAnd the snapshots are really\ndesigned just for your data disks.\n\n112\n00:05:33.270 --> 00:05:34.530\nYour additional disks.\n\n113\n00:05:34.530 --> 00:05:36.840\nWhat about your boot volume?\n\n114\n00:05:36.840 --> 00:05:39.320\nThe volume that this system\nactually boots off of.\n\n115\n00:05:39.320 --> 00:05:41.380\nWell, you can take snapshots on those.\n\n116\n00:05:41.380 --> 00:05:43.010\nBut there's a little bit of a problem.\n\n117\n00:05:43.010 --> 00:05:46.330\nWhen you restore a snapshot,\nit's not bootable.\n\n118\n00:05:46.330 --> 00:05:49.170\nAnd so I can't use a snapshot\nto build up these new\n\n119\n00:05:49.170 --> 00:05:50.730\nvirtual machines in many scenarios.\n\n120\n00:05:50.730 --> 00:05:52.200\nThere are some scenarios\nwhere it does work, but\n\n121\n00:05:52.200 --> 00:05:54.920\nthere's a lot more scenarios\nwhere it doesn't work.\n\n122\n00:05:54.920 --> 00:05:59.220\nSo snapshots aren't so great for basically\nbringing up an all new bootable instance.\n\n123\n00:05:59.220 --> 00:06:02.970\nSo if mu server is really flaking out,\nmaybe there's a bad update and\n\n124\n00:06:02.970 --> 00:06:05.030\nI can't even log in to it any more.\n\n125\n00:06:05.030 --> 00:06:07.230\nWell, I got the snapshot so\nI've got my data.\n\n126\n00:06:07.230 --> 00:06:10.810\nI can still get at my data, but\nif I want that server operational again,\n\n127\n00:06:10.810 --> 00:06:13.670\nit's better to have\nan image of the machine.\n\n128\n00:06:13.670 --> 00:06:15.370\nAnd an image, an AMI,\n\n129\n00:06:15.370 --> 00:06:18.870\nan Amazon Machine Image is a collection\nof the whole thing that can be restored.\n\n130\n00:06:18.870 --> 00:06:22.840\nYou're basically reprovisioning a new\nvirtual machine that is bootable,\n\n131\n00:06:22.840 --> 00:06:24.150\nthat is stable.\n\n132\n00:06:24.150 --> 00:06:28.261\nAnd so Amazon actually recommends\nthat we use both, that every now and\n\n133\n00:06:28.261 --> 00:06:30.990\nthen you take an image of your server,\nright?\n\n134\n00:06:30.990 --> 00:06:34.380\nSo maybe once a month I take\nan image of the server.\n\n135\n00:06:34.380 --> 00:06:39.700\nAnd then, every day, or every hour,\nI take snapshots of the data disks.\n\n136\n00:06:39.700 --> 00:06:44.266\nAnd that way, if there's ever a failure,\nI can provision a new VM from the image,\n\n137\n00:06:44.266 --> 00:06:45.690\nwhich might be a month old.\n\n138\n00:06:46.790 --> 00:06:49.320\nBut then once that new VM comes up,\n\n139\n00:06:49.320 --> 00:06:53.790\nI can just restore the snapshot of\nthe data disks and now it's current.\n\n140\n00:06:53.790 --> 00:06:58.560\nSo you use the two in tandem to\nreally get that good configuration.\n\n141\n00:06:58.560 --> 00:07:03.200\nThe other thing is with snapshots when\nwe go here, if we take a snapshot, and\n\n142\n00:07:03.200 --> 00:07:06.950\nright here,\nhave I even taken any snapshots?\n\n143\n00:07:06.950 --> 00:07:07.740\nI've got one.\n\n144\n00:07:07.740 --> 00:07:10.120\nSo here I've got a snapshot\nsitting in available.\n\n145\n00:07:10.120 --> 00:07:15.390\nIf I go up here to actions I can create\na volume off of that snapshot and\n\n146\n00:07:15.390 --> 00:07:16.950\nI can create an image.\n\n147\n00:07:16.950 --> 00:07:20.180\nAnd I get this question from people a lot\nof times, what's the difference if I can\n\n148\n00:07:20.180 --> 00:07:23.720\ncreate a volume and create an image\nthe snapshot is just out of volume.\n\n149\n00:07:23.720 --> 00:07:26.720\nThe question here is whether or not it's\ngoing to end up being bootable, right?\n\n150\n00:07:26.720 --> 00:07:29.970\nIf we create that's supposed\nto be a bootable one, but\n\n151\n00:07:29.970 --> 00:07:31.450\na lot of times that doesn't work.\n\n152\n00:07:31.450 --> 00:07:34.150\nRIght, a lot of the pair virtualized\nones and stuff that doesn't work, and\n\n153\n00:07:34.150 --> 00:07:36.190\nthat's where the AMI works better for us.\n\n154\n00:07:36.190 --> 00:07:41.321\nBut I can create a volume, and I can spin\nup another copy of that original volume,\n\n155\n00:07:41.321 --> 00:07:44.958\nand I can attach this to another VM and\nget that data back.\n\n156\n00:07:44.958 --> 00:07:50.332\nIf you watched our episode on storage\nwhere you're talking about converting\n\n157\n00:07:50.332 --> 00:07:55.962\na disk from general purpose SSD over to\nprovisioned iOPS, we actually did that.\n\n158\n00:07:55.962 --> 00:07:59.898\nWe took a snapshot of the disk\nWe remove the original disk.\n\n159\n00:07:59.898 --> 00:08:02.717\nWe redeploy the disk from this snapshot,\nand\n\n160\n00:08:02.717 --> 00:08:07.810\nit was a great way for us to change what\ntype of disk it was at that time, right?\n\n161\n00:08:07.810 --> 00:08:09.960\nSo if you wanna see that in action,\njump over there and\n\n162\n00:08:09.960 --> 00:08:11.780\nthen we see that whole snapshot process.\n\n163\n00:08:11.780 --> 00:08:14.740\nThe only thing we didn't do was\nthe image side of things, right?\n\n164\n00:08:14.740 --> 00:08:16.200\nIf I want to create an image,\n\n165\n00:08:16.200 --> 00:08:19.800\nwell, snapshots are just\nsnapshots of individual volumes.\n\n166\n00:08:19.800 --> 00:08:23.850\nIt doesn't include things like your\nnetwork interface configurations,\n\n167\n00:08:23.850 --> 00:08:30.140\nyour multiple disks, and all the other\nthings that become a part of a instance.\n\n168\n00:08:30.140 --> 00:08:35.287\nSo when I go back up to instances and I\ntake this server, I can go up to Actions >\n\n169\n00:08:35.287 --> 00:08:41.650\nImage > Create an Image and\nI can build an AMI based on this.\n\n170\n00:08:41.650 --> 00:08:44.180\nAnd as you look at it see how I can give\nit an image name and a description and\n\n171\n00:08:44.180 --> 00:08:46.205\nit includes both the disks.\n\n172\n00:08:46.205 --> 00:08:49.150\nIt's not like a snapshot where its\njust one volume here its both and\n\n173\n00:08:49.150 --> 00:08:54.170\nits getting my root disk in\naddition to my data disk right?\n\n174\n00:08:54.170 --> 00:08:57.650\nSo its gonna grab both of those and\nI can even add more volumes if I want\n\n175\n00:08:57.650 --> 00:08:59.940\nbecause this image is not\nthe original machine.\n\n176\n00:08:59.940 --> 00:09:03.430\nThis is basically a new instance, like\na template that I can start deploying out\n\n177\n00:09:03.430 --> 00:09:05.940\nto build new servers if I need it, right?\n\n178\n00:09:05.940 --> 00:09:08.715\nAnd, so, I might call this,\nwhat was that server called?\n\n179\n00:09:08.715 --> 00:09:13.410\nItprotv_web01, so\nI'll call this my ITProtv-web01-ami or\n\n180\n00:09:13.410 --> 00:09:15.800\nmaybe I don't wanna call it web01, right?\n\n181\n00:09:15.800 --> 00:09:20.680\nMaybe I wanna just call it web-ami and\nanytime I need a new web server\n\n182\n00:09:20.680 --> 00:09:24.230\nI can just deploy this ami and\nit has everything setup the way I like it.\n\n183\n00:09:24.230 --> 00:09:25.750\nIt's already got Apache installed.\n\n184\n00:09:25.750 --> 00:09:28.120\nIt's already got my website on it,\nor whatever.\n\n185\n00:09:28.120 --> 00:09:29.830\nIt's already configured the way I need it.\n\n186\n00:09:29.830 --> 00:09:32.410\nNormally, we put things in\nhere like scripts that say.\n\n187\n00:09:32.410 --> 00:09:36.820\nWhen the system boots up, use RSync to\nget the latest copy of the webpage.\n\n188\n00:09:36.820 --> 00:09:41.890\nAnd, that way, if this server, this AMI is\nfive months old and I spin it up today.\n\n189\n00:09:41.890 --> 00:09:46.250\nIt will boot up and then the description\ntell to do operating system updates.\n\n190\n00:09:46.250 --> 00:09:47.340\nAnd so, it does that.\n\n191\n00:09:47.340 --> 00:09:50.230\nAnd then, it R Syncs to a or\nnot necessarily,\n\n192\n00:09:50.230 --> 00:09:53.150\nI just think we need to use the S3\nfile transfer and reach out to S3 and\n\n193\n00:09:53.150 --> 00:09:54.810\ngrab a copy of our website and\nbring it in here.\n\n194\n00:09:54.810 --> 00:09:57.940\nAnd so now whenever I spin up\nan instance based on this,\n\n195\n00:09:57.940 --> 00:10:00.600\nit's gonna be all up to date,\nall current and ready to rock.\n\n196\n00:10:01.720 --> 00:10:04.590\nYou'll have this all ready if\nyou're doing auto scaling, right?\n\n197\n00:10:04.590 --> 00:10:08.570\nAnd we'll cover auto scaling in another\nepisode, but if you're doing auto scaling,\n\n198\n00:10:08.570 --> 00:10:10.830\nyou need this cuz you're constantly\nspitting out new machines.\n\n199\n00:10:10.830 --> 00:10:13.450\nThey need to be updated and\nthey need to have a copy of your data.\n\n200\n00:10:13.450 --> 00:10:15.860\nBut here I can do it for\nthis individual machine.\n\n201\n00:10:15.860 --> 00:10:20.790\nIf I said that this ITPro TV Web 0.1\none and this is not set to do updates,\n\n202\n00:10:20.790 --> 00:10:24.920\nthis is not set to automatically\nsynchronize a page or anything like that.\n\n203\n00:10:24.920 --> 00:10:29.380\nThis is just gonna be a straight\nup back up of ITPro TV Web 0.1.\n\n204\n00:10:29.380 --> 00:10:34.370\nAnd if I just go here to hit Create Image\nit's gonna build an AMI off of that.\n\n205\n00:10:34.370 --> 00:10:38.090\nAnd now whenever I go to provision and\ninstance I can choose that AMI and\n\n206\n00:10:38.090 --> 00:10:40.540\nI'll create effectively\na clone of ITPro Web 101.\n\n207\n00:10:40.540 --> 00:10:45.350\nWe do have to be careful about a few\nlittle things, for example you'll\n\n208\n00:10:45.350 --> 00:10:48.860\nnotice when I created that it was grabbing\nboth of my volumes, it got that data.\n\n209\n00:10:48.860 --> 00:10:51.810\nBut I didn't mention\nthe network interfaces, right?\n\n210\n00:10:51.810 --> 00:10:53.750\nAnd, with network interfaces,\n\n211\n00:10:53.750 --> 00:10:56.530\na lot of time you do things\nlike elastic IPs, right?\n\n212\n00:10:56.530 --> 00:10:59.090\nSo, over here on the left side,\nif I go to my elastic IPs,\n\n213\n00:10:59.090 --> 00:11:04.590\nI can allocate an address and so\nhere's a nice little static IP that I got.\n\n214\n00:11:04.590 --> 00:11:09.360\nAnd, I can take that and I can\nassociate that with a instance, right?\n\n215\n00:11:09.360 --> 00:11:15.020\nSo I can attach that to my ITProTVWeb01,\nand I'll associate that, all right?\n\n216\n00:11:15.020 --> 00:11:16.830\nSo, now that instance\nwill always have that IP.\n\n217\n00:11:16.830 --> 00:11:22.200\nAnd if I ever need to restore from that\nAMI, I can deploy a new VM, and I can\n\n218\n00:11:22.200 --> 00:11:27.520\ncome in here to this elastic IP, and I can\njust go to Actions > Associate Address and\n\n219\n00:11:27.520 --> 00:11:31.580\nI can do a reassociation and\nattach it with the new instance.\n\n220\n00:11:31.580 --> 00:11:35.270\nAnd it moves the IP over to the new\ninstance, and then off we go, right?\n\n221\n00:11:35.270 --> 00:11:39.530\nThat works out great, and\nit's really all most people need but\n\n222\n00:11:39.530 --> 00:11:44.380\nyou do have to be a little bit careful\nbecause sometimes, you might have software\n\n223\n00:11:44.380 --> 00:11:49.300\nthat well,\nyou usually see it with licensing.\n\n224\n00:11:49.300 --> 00:11:54.210\nWhere you have software that's licensed to\nthe MAC address of your network adapter.\n\n225\n00:11:54.210 --> 00:11:58.090\nAnd so, when I spin up this new AMI,\nit's gonna have a network adapter.\n\n226\n00:11:58.090 --> 00:12:01.000\nAnd it's gonna get this IP address,\nso we'll have the same IP, but\n\n227\n00:12:01.000 --> 00:12:02.780\nits MAC address will change.\n\n228\n00:12:02.780 --> 00:12:04.900\nAnd so, elastic IPs,\nwe use all the time, but\n\n229\n00:12:04.900 --> 00:12:06.620\nthere's another feature\na lot of people don't use.\n\n230\n00:12:06.620 --> 00:12:10.730\nWhich is, under Networking and Security\nover here, you have Network Interfaces.\n\n231\n00:12:10.730 --> 00:12:14.640\nAnd you can actually create\nstatic network interfaces and\n\n232\n00:12:14.640 --> 00:12:18.580\nyou can take these and\nattach them to different VMs or whatever.\n\n233\n00:12:18.580 --> 00:12:21.750\nSo I can create a network\ninterface right here and\n\n234\n00:12:21.750 --> 00:12:24.930\nwhen you do it this way\nthe network interface is not\n\n235\n00:12:24.930 --> 00:12:28.110\ntied to the virtual machine\nI mean it is while it's on.\n\n236\n00:12:28.110 --> 00:12:32.860\nBut when you restore your VM when you\nrestore that AMI you can come in here and\n\n237\n00:12:32.860 --> 00:12:35.560\nyou can attach the previous interface.\n\n238\n00:12:35.560 --> 00:12:38.460\nSee how I can detach it and re-attach it?\n\n239\n00:12:38.460 --> 00:12:43.230\nAnd that way the MAC address stays the\nsame on this new AMI when it comes up so\n\n240\n00:12:43.230 --> 00:12:46.570\nthose are some of the neat things we\ncan do in addition to the AMI image.\n\n241\n00:12:46.570 --> 00:12:49.730\nBut just remember that snapshots\nare not a replacement for\n\n242\n00:12:49.730 --> 00:12:54.270\nAMIs and AMIs are not a replacement for\nsnapshots you're typically gonna use both.\n\n243\n00:12:54.270 --> 00:12:57.250\nUse the AMI to get a full\nback up to that server, and\n\n244\n00:12:57.250 --> 00:13:02.390\nthen use snapshots to do backups\nkind of periodically every hour,\n\n245\n00:13:02.390 --> 00:13:06.490\nevery day, whatever it is that you RPO is,\nyour recovery point objective.\n\n246\n00:13:06.490 --> 00:13:10.390\nThink about how much data you can lose,\nand if you can lose six hours of data,\n\n247\n00:13:10.390 --> 00:13:14.030\nthen you need to be doing back up at\nleast once every six hours, right?\n\n248\n00:13:14.030 --> 00:13:16.610\nMaybe more just in case a backup fails for\nsome reason,\n\n249\n00:13:16.610 --> 00:13:17.980\nyou don't want it to go beyond that.\n\n250\n00:13:19.150 --> 00:13:25.170\nSo those are some of the things, there is\none more thing I want to mention on EC2\n\n251\n00:13:25.170 --> 00:13:31.330\nwhich is we might not be wanting to back\nup the instances that are already in EC2.\n\n252\n00:13:31.330 --> 00:13:34.630\nWe might be wanting to back up\nservers in our own facility.\n\n253\n00:13:34.630 --> 00:13:37.280\nYou might already have serves locally, and\n\n254\n00:13:37.280 --> 00:13:39.600\nyou just want a backup of\nthem to sit up in EC2.\n\n255\n00:13:39.600 --> 00:13:42.150\nAnd in the event that something\nhappens to your data center,\n\n256\n00:13:42.150 --> 00:13:43.730\nyou can fail over to AWS.\n\n257\n00:13:43.730 --> 00:13:46.510\nAnd it can basically bring\nyour data center back online.\n\n258\n00:13:46.510 --> 00:13:48.680\nWell, if you're running\na VMware environment,\n\n259\n00:13:48.680 --> 00:13:54.290\nit's actually written by a third party,\nbut Amazon approved this.\n\n260\n00:13:54.290 --> 00:13:57.590\nThe Amazon EC2 VM IMport Connector.\n\n261\n00:13:57.590 --> 00:13:58.260\nRight.\nAnd\n\n262\n00:13:58.260 --> 00:14:01.230\nthey actually have a few different ones,\nthis is the one for VMware vCenter.\n\n263\n00:14:01.230 --> 00:14:04.290\nBut what it lets you do is, if you've got\nvirtual machines that are running in your\n\n264\n00:14:04.290 --> 00:14:08.140\nown, on premises equipment,\nyou can use this connector.\n\n265\n00:14:08.140 --> 00:14:12.550\nAnd it will let you take that virtual\nmachine and clone it up into EC2.\n\n266\n00:14:12.550 --> 00:14:16.710\nAnd now you got a clone, a back up up in\nEC2, an instance just sitting there ready.\n\n267\n00:14:16.710 --> 00:14:20.390\nAnd when you had a data center failure,\nyou can redirect your DNS, your UC names\n\n268\n00:14:20.390 --> 00:14:26.890\nor whatever and point everybody\nback over to your AWS environment.\n\n269\n00:14:26.890 --> 00:14:29.010\nAnd now your servers are online,\npeople get in there, and\n\n270\n00:14:29.010 --> 00:14:31.230\nyou really get some cool access.\n\n271\n00:14:31.230 --> 00:14:35.030\nSo EC2 gives us a lot of neat tools for\nbackup and recovery.\n\n272\n00:14:35.030 --> 00:14:37.160\nAnd we just need to be\naware of what's out there.\n\n273\n00:14:37.160 --> 00:14:38.550\nWe're not going to\nnecessarily use all of them.\n\n274\n00:14:38.550 --> 00:14:41.840\nSome of you may never use this import\nconnector, but we need to be aware of it,\n\n275\n00:14:41.840 --> 00:14:43.460\nespecially for the exam.\n\n276\n00:14:43.460 --> 00:14:46.570\n>> Now Don, networking you were\nkind of jumping up over there or\n\n277\n00:14:46.570 --> 00:14:50.680\ntaking a look at the IPs that\nare available and things like that, but\n\n278\n00:14:50.680 --> 00:14:53.310\nAmazon actually has a few\nnetworking services as well.\n\n279\n00:14:53.310 --> 00:14:58.880\nAnd they also have A couple of disaster\nrecover type of options as well right?\n\n280\n00:14:58.880 --> 00:15:02.120\n>> Absolutely, if you've watched\nour DNS episodes already,\n\n281\n00:15:02.120 --> 00:15:06.410\nyou've kind of seen how route 53 can\nprovide redundancy and failover.\n\n282\n00:15:06.410 --> 00:15:10.980\nAnd I kind of mentioned it a second ago,\nif I have servers that are on premises and\n\n283\n00:15:10.980 --> 00:15:12.810\nI'm cloning them up to AWS and\n\n284\n00:15:12.810 --> 00:15:17.860\na failure happens,\nhow do I redirect everybody over to AWS?\n\n285\n00:15:17.860 --> 00:15:20.530\nAnd how can I do that and\nmake it automatic or whatever?\n\n286\n00:15:20.530 --> 00:15:23.810\nWell, there's tools available\ninside a route 53 that can do that.\n\n287\n00:15:23.810 --> 00:15:25.200\nThey're really impressive.\n\n288\n00:15:25.200 --> 00:15:29.510\nJust to show you one example cuz we\ndo have a whole episode on it, but\n\n289\n00:15:29.510 --> 00:15:35.540\nif I do into my route 53 service and\nI've got a hosted zone in here.\n\n290\n00:15:35.540 --> 00:15:37.880\nWhat do we have?\nITProTV.net, okay.\n\n291\n00:15:37.880 --> 00:15:41.070\nI might have a web server or\na mail server or something like that.\n\n292\n00:15:41.070 --> 00:15:44.913\nAnd I could come in and I could define, oh\ngood I left these over from the DNS ago.\n\n293\n00:15:44.913 --> 00:15:47.730\nI could create something\nlike this guy right here,\n\n294\n00:15:47.730 --> 00:15:52.383\nI called it weighted.itprotv.net but\nyou could have done it www.itprotv.net or\n\n295\n00:15:52.383 --> 00:15:53.639\nwhatever you wanted.\n\n296\n00:15:53.639 --> 00:15:56.519\nSo here's this web server.\n\n297\n00:15:56.519 --> 00:16:01.900\nAnd by default, I might want people\nto go to my on premises equipment.\n\n298\n00:16:01.900 --> 00:16:07.390\nBut if the on premises stop fails then I\nwanna them to come over to AWS, right.\n\n299\n00:16:07.390 --> 00:16:12.420\nAnd if you do a waited environment,\nyou can actually configure this where,\n\n300\n00:16:12.420 --> 00:16:15.540\nlet's say the servers were full\nsynchronized and inactive or\n\n301\n00:16:15.540 --> 00:16:17.320\nan inactive active type of environment.\n\n302\n00:16:17.320 --> 00:16:22.350\nYou can send 90% of your traffic to\non premises and 10% to AWS right?\n\n303\n00:16:22.350 --> 00:16:24.820\nAnd that way you've got some\ntraffic going to AWS so\n\n304\n00:16:24.820 --> 00:16:27.395\nyou know those servers are operational and\nfunctional, right?\n\n305\n00:16:27.395 --> 00:16:30.422\nCuz you don't want to just hope\nthey're working when you fail over.\n\n306\n00:16:30.422 --> 00:16:32.660\nBut 90% of the traffic is\ngoing to on premises and\n\n307\n00:16:32.660 --> 00:16:33.700\nyou can do that with a weighted record.\n\n308\n00:16:33.700 --> 00:16:37.130\nSee how I have these two records and\nthey both point to different IPs?\n\n309\n00:16:37.130 --> 00:16:39.800\nAnd if I look over here\nat the configuration,\n\n310\n00:16:39.800 --> 00:16:42.145\nI've got a weight of 50 assigned to them.\n\n311\n00:16:42.145 --> 00:16:43.370\nRight?\nLet's assume that this\n\n312\n00:16:43.370 --> 00:16:45.400\nfirst one was my production environment.\n\n313\n00:16:45.400 --> 00:16:47.860\nThen I might want to come in\nhere a give it a weight of 90.\n\n314\n00:16:47.860 --> 00:16:51.720\nAnd then I could take the other one and.\n\n315\n00:16:51.720 --> 00:16:53.690\nOh, I don't have a health check assigned,\nshoot.\n\n316\n00:16:53.690 --> 00:16:56.830\nWell anyhow, I could assign this one to\na 90, and the other one I could assign 10.\n\n317\n00:16:56.830 --> 00:16:59.430\nAnd that would divide that traffic up.\n\n318\n00:16:59.430 --> 00:17:01.390\nAnd get it kinda balanced out for me.\n\n319\n00:17:01.390 --> 00:17:04.860\nNow, the health check that just warned me\nabout, again if you watch our DNS show,\n\n320\n00:17:04.860 --> 00:17:06.230\nwe show you how to do all this,\n\n321\n00:17:06.230 --> 00:17:10.280\nbut the health checks can\nmake the fail-over automatic.\n\n322\n00:17:10.280 --> 00:17:13.960\nIf it's set to check for a webpage or\nconnect to a database port, or\n\n323\n00:17:13.960 --> 00:17:15.890\nsomething like that, and it can't connect.\n\n324\n00:17:15.890 --> 00:17:16.760\nIt's assume there's fail and\n\n325\n00:17:16.760 --> 00:17:19.360\njust automatically flip people\nover to the other side.\n\n326\n00:17:19.360 --> 00:17:23.320\nSo route 53 is now giving us automatic\nfail-over even between different data\n\n327\n00:17:23.320 --> 00:17:25.050\ncenters and that's really powerful.\n\n328\n00:17:25.050 --> 00:17:27.000\nSo really just a great resource.\n\n329\n00:17:27.000 --> 00:17:31.090\nI know a lot of people tell me, yeah we\nhave DNS host on our internal servers,\n\n330\n00:17:31.090 --> 00:17:34.660\nor I registered a domain with this\ncompany and I just their DNS servers.\n\n331\n00:17:34.660 --> 00:17:36.310\nThat's fine, you can do that.\n\n332\n00:17:36.310 --> 00:17:40.840\nBut, Route 53 is really cheap and\nboy, it's got some cool features.\n\n333\n00:17:40.840 --> 00:17:43.070\nSo definitely check out our DNS\nepisode cuz we cover all that.\n\n334\n00:17:44.190 --> 00:17:44.950\nLet's see, what else do we have?\n\n335\n00:17:44.950 --> 00:17:47.780\nThe elastic load balancers,\nthe ELBs, right?\n\n336\n00:17:47.780 --> 00:17:51.600\nElastic load balancers are another way\nthat we can have automatic fail-over.\n\n337\n00:17:51.600 --> 00:17:55.900\nYou can configure an ELB, then you can\nput any number of servers behind it.\n\n338\n00:17:55.900 --> 00:18:00.680\nAnd if one server fails, ELBs do health\nchecks, just like Route 53 does.\n\n339\n00:18:00.680 --> 00:18:02.930\nAnd if that server's not activated,\njust stop sending traffic to it,\n\n340\n00:18:02.930 --> 00:18:04.030\nsend it to other servers.\n\n341\n00:18:04.030 --> 00:18:06.090\nRight?\nSo, that gives us fail-over.\n\n342\n00:18:06.090 --> 00:18:08.575\nIt's not a replacement for back ups, but\n\n343\n00:18:08.575 --> 00:18:13.555\nit does help overcome a server failure so\nit's more recovery type technique.\n\n344\n00:18:13.555 --> 00:18:16.505\nIf it's really focused on availability,\nright?\n\n345\n00:18:16.505 --> 00:18:18.165\nSo not necessarily durability.\n\n346\n00:18:18.165 --> 00:18:21.105\nDurability is making\nsure your data is safe\n\n347\n00:18:21.105 --> 00:18:24.785\nno matter how significant the failure is,\nELB can't do that, right.\n\n348\n00:18:24.785 --> 00:18:27.425\nYou can have failures in\nmy ELB that you can't hide.\n\n349\n00:18:27.425 --> 00:18:30.985\nBut if it's an individual instance\nfailing then, it will recover from that.\n\n350\n00:18:30.985 --> 00:18:35.040\nThe things that you can't hide is,\nif I've got 50 web servers behind an ELB,\n\n351\n00:18:35.040 --> 00:18:39.350\nand they're all synchronizing a copy of\nmy website, and somebody hacks in and\n\n352\n00:18:39.350 --> 00:18:42.170\ndefaces the website,\nthey're all gonna synchronize that, and\n\n353\n00:18:42.170 --> 00:18:44.780\nnow all 50 servers are gonna\nhave this defaced website.\n\n354\n00:18:44.780 --> 00:18:46.590\nELBs can't help you with that, right?\n\n355\n00:18:46.590 --> 00:18:49.280\nSo you've gotta have a backup of\nyour clean website to restore and\n\n356\n00:18:49.280 --> 00:18:50.580\nget back in place, right?\n\n357\n00:18:51.660 --> 00:18:53.540\nIt will be a question on the exam.\n\n358\n00:18:53.540 --> 00:18:55.880\nRemember that a lot of this stuff\nis not a replacement for backups.\n\n359\n00:18:55.880 --> 00:18:59.460\nYou still gotta have that so\nwe still need our snapshots, our AMIs, and\n\n360\n00:18:59.460 --> 00:19:01.450\ntechniques like that.\n\n361\n00:19:01.450 --> 00:19:03.980\nAnd now let's see what else do we have.\n\n362\n00:19:03.980 --> 00:19:06.050\nVPCs, the virtual private connections,\n\n363\n00:19:06.050 --> 00:19:10.400\nthe VPC networks that you\ncreate inside of Amazon.\n\n364\n00:19:10.400 --> 00:19:13.950\nIf you're not using these, well you might\nbe using it and not even realize it.\n\n365\n00:19:13.950 --> 00:19:17.640\nIt used to be that VPCs were an option,\nand so when you spun up an instance it\n\n366\n00:19:17.640 --> 00:19:19.950\ncould just be directly connected\nto the Internet and that was it.\n\n367\n00:19:19.950 --> 00:19:23.840\nBut Amazon now forces everybody\nto have at least one VPC.\n\n368\n00:19:23.840 --> 00:19:26.660\nAnd so you can spin up an instance and\nnot even know it and\n\n369\n00:19:26.660 --> 00:19:28.360\nyou've got a VPC on the back end.\n\n370\n00:19:28.360 --> 00:19:32.780\nBut you can use VPCs to create\nseparate isolated networks.\n\n371\n00:19:32.780 --> 00:19:37.560\nAnd the best part is you can build a VPN\ntunnel between your on-premises network\n\n372\n00:19:37.560 --> 00:19:39.110\nand the VPC.\n\n373\n00:19:39.110 --> 00:19:42.850\nAnd the way I've seen a lot of people\nuse this is where they create a disaster\n\n374\n00:19:42.850 --> 00:19:47.770\nrecovery center in AWS, but\nthey don't open it to the world.\n\n375\n00:19:47.770 --> 00:19:48.380\nIt's private.\n\n376\n00:19:48.380 --> 00:19:49.590\nIt's completely hidden from the world.\n\n377\n00:19:49.590 --> 00:19:51.750\nIt's on a separate VPC.\n\n378\n00:19:51.750 --> 00:19:53.420\nAnd there's a VPN tunnel\nback to their office.\n\n379\n00:19:53.420 --> 00:19:57.040\nSo their office can get to this\nenvironment but nobody else can.\n\n380\n00:19:57.040 --> 00:19:59.200\nAnd they clone all their servers up there.\n\n381\n00:19:59.200 --> 00:20:03.790\nAnd if there's ever a failure,\ntheir home office or on premises equipment\n\n382\n00:20:03.790 --> 00:20:07.580\nis all down, they just take the VPC\nthat's up in Amazon's cloud and\n\n383\n00:20:07.580 --> 00:20:10.360\nthey opened up the world and\nnow their center's back up.\n\n384\n00:20:10.360 --> 00:20:12.590\nCuz they had this clone\nbasically sitting up there.\n\n385\n00:20:12.590 --> 00:20:14.590\nIf you haven't messed with them,\nwe haven't done it yet, but\n\n386\n00:20:14.590 --> 00:20:17.800\nwe are gonna do a show on VPCs and we'll\ntalk about how to build those up, but\n\n387\n00:20:17.800 --> 00:20:23.260\njust kind of real quick,\nif I go into AWS it's not under EC2.\n\n388\n00:20:23.260 --> 00:20:26.380\nA lot of people think the configuring\nnetwork would be there but\n\n389\n00:20:26.380 --> 00:20:29.780\nit's actually got its own\nthing right down here, VPCs.\n\n390\n00:20:29.780 --> 00:20:33.100\nWhen you go in to VPCs, here's where you\ncan start to create your separate networks\n\n391\n00:20:33.100 --> 00:20:35.950\nand you'll see I only got one and\nI didn't even make this one.\n\n392\n00:20:35.950 --> 00:20:39.050\nThis is one that they made and\nI renamed it but\n\n393\n00:20:39.050 --> 00:20:41.640\nthey assigned it to my\naccount when I created it.\n\n394\n00:20:41.640 --> 00:20:46.590\nAnd when you create one of these things,\nthe VPC, it resides in a certain region.\n\n395\n00:20:46.590 --> 00:20:48.330\nThis one's in US East one.\n\n396\n00:20:48.330 --> 00:20:52.070\nI can create more virtual networks,\nin US East one, or\n\n397\n00:20:52.070 --> 00:20:54.960\nI can create virtual networks\nin other regions if I wanted.\n\n398\n00:20:54.960 --> 00:20:58.770\nI could spread these out, so I can have\nhosts that are kind of laid out there.\n\n399\n00:20:58.770 --> 00:21:02.310\nBy default,\na VPC is gonna reside in one region.\n\n400\n00:21:02.310 --> 00:21:06.440\nBut it has subnets in multiple\navailability zones in that region.\n\n401\n00:21:06.440 --> 00:21:09.480\nSo when I look at this it looks\nlike just one network, but\n\n402\n00:21:09.480 --> 00:21:11.620\nit's actually gonna be\nprobably four networks.\n\n403\n00:21:11.620 --> 00:21:12.640\nI'd have to see.\n\n404\n00:21:12.640 --> 00:21:14.520\nProbably four networks in that region and\n\n405\n00:21:14.520 --> 00:21:17.500\nit will have a couple of different\navailability zones inside of it.\n\n406\n00:21:17.500 --> 00:21:22.760\nAnd so as I start bringing instances\ninto that VPC, they can actually go in,\n\n407\n00:21:22.760 --> 00:21:25.200\nin one of four different\navailability zones inside of that.\n\n408\n00:21:25.200 --> 00:21:28.340\nAnd you'll see over here the different\nthings that you can configure,\n\n409\n00:21:28.340 --> 00:21:31.220\nthe end points for people getting into it,\nDHCP options, and so on,\n\n410\n00:21:31.220 --> 00:21:33.590\nwe'll see a lot of this\nin the VPC episodes.\n\n411\n00:21:33.590 --> 00:21:36.220\n>> Yeah, it's actually one of\nthe coolest features, I think,\n\n412\n00:21:36.220 --> 00:21:39.960\nVPC's a very neat thing\nthat AWS allows for us.\n\n413\n00:21:39.960 --> 00:21:42.490\nNow another thing that allow for\nus is databases.\n\n414\n00:21:42.490 --> 00:21:44.780\nDatabases are very prevalent right?\n\n415\n00:21:44.780 --> 00:21:45.530\nWe all know them.\n\n416\n00:21:45.530 --> 00:21:46.190\nWe all love them.\n\n417\n00:21:46.190 --> 00:21:49.160\nWe all probably have one of them, and\nwe've got to make sure that that data,\n\n418\n00:21:49.160 --> 00:21:53.980\nbecause it's probably some of the most\nimportant data in our environments,\n\n419\n00:21:53.980 --> 00:21:54.710\nis getting backed up.\n\n420\n00:21:54.710 --> 00:21:57.080\nWe have an ability to recover that.\n\n421\n00:21:57.080 --> 00:21:59.110\nGet the data back if\nsomething were to happen.\n\n422\n00:21:59.110 --> 00:22:01.970\nAmazon does not leave us out in the lurch\nwith this one either, do they John?\n\n423\n00:22:01.970 --> 00:22:03.640\n>> That's right, and\nit's one of my favorite things.\n\n424\n00:22:03.640 --> 00:22:08.290\nBecause I've been a DBA, I've supported\nlarge databases and it's a nightmare.\n\n425\n00:22:08.290 --> 00:22:11.360\nAnd trying to keep them backed up,\nand up to date, and safe and stable.\n\n426\n00:22:12.360 --> 00:22:15.578\nAnd, with Amazon's RDS,\nthe Relational Database Service,\n\n427\n00:22:15.578 --> 00:22:17.560\nthey take all that out of your hands.\n\n428\n00:22:17.560 --> 00:22:20.180\nThey take care of the backups for you,\nso you don't have to worry about it,\n\n429\n00:22:20.180 --> 00:22:21.880\nwhich is really nice.\n\n430\n00:22:21.880 --> 00:22:24.150\nAnd, we're gonna do an episode on these,\ntoo.\n\n431\n00:22:24.150 --> 00:22:25.780\nAll lot of these,\nI wanna show you guys how to do it.\n\n432\n00:22:25.780 --> 00:22:28.230\nBut in this episode,\nI just wanna cover what's available, so\n\n433\n00:22:28.230 --> 00:22:29.980\nthat's why we're kinda\nbeing brief on these.\n\n434\n00:22:29.980 --> 00:22:34.580\nBut, if we take a look at my console If I\ngo and spin up like RDS, for example.\n\n435\n00:22:35.710 --> 00:22:40.210\nWhen I go in here and I spin up a new\ninstance I can launch whatever instance\n\n436\n00:22:40.210 --> 00:22:44.440\ntype it is that I want, but\nas a part of launching that instance,\n\n437\n00:22:44.440 --> 00:22:48.090\nit asks me to set up a backup plan.\n\n438\n00:22:48.090 --> 00:22:48.790\nRight?\n\n439\n00:22:48.790 --> 00:22:52.200\nAnd the backup focuses on availability and\ndurability.\n\n440\n00:22:52.200 --> 00:22:55.740\nSo for availability,\nit's asking me if I want to go Multi-AZ.\n\n441\n00:22:55.740 --> 00:22:59.390\nIt can deploy a replica of my server\nin another availability zone, so\n\n442\n00:22:59.390 --> 00:23:03.010\nif the main server fails it can\nautomatically fail over to that replica\n\n443\n00:23:03.010 --> 00:23:05.010\nand now we are in business, and\nall I had to do is click a button.\n\n444\n00:23:05.010 --> 00:23:08.070\nRight?\nI didn't have to set up credentials,\n\n445\n00:23:08.070 --> 00:23:11.830\nopen a firewall port, set up replication,\nI didn't need to do all of that stuff.\n\n446\n00:23:11.830 --> 00:23:15.440\nI just clicked a radio button, that's\nwhat really makes this stuff awesome and\n\n447\n00:23:15.440 --> 00:23:17.380\nworth the money.\n\n448\n00:23:17.380 --> 00:23:21.730\nAnd then as we move forward it's gonna\nask me another question in here,\n\n449\n00:23:21.730 --> 00:23:22.870\nwhich apparently is on the next page.\n\n450\n00:23:22.870 --> 00:23:24.640\nSo let me just give it some\ndummy information here.\n\n451\n00:23:24.640 --> 00:23:25.960\nI'll tell it I'm gonna\nspin up an instance.\n\n452\n00:23:25.960 --> 00:23:28.400\nThat Multi-AZ is still selected.\n\n453\n00:23:28.400 --> 00:23:30.270\nNot quite sure why it asked that twice.\n\n454\n00:23:30.270 --> 00:23:31.750\nBut anyhow, it does.\n\n455\n00:23:31.750 --> 00:23:34.850\nAnd I'll just call this itprotv-demodb2.\n\n456\n00:23:34.850 --> 00:23:37.650\nAnd I'll give it an account.\n\n457\n00:23:38.820 --> 00:23:40.020\nFor it's master account.\n\n458\n00:23:40.020 --> 00:23:41.070\nAnd it must be on the next page.\n\n459\n00:23:41.070 --> 00:23:44.510\nBut it's gonna ask me about how I want\nto handle backups on this instance.\n\n460\n00:23:44.510 --> 00:23:47.213\nAnd so when I go through,\nhere it's letting me pick the VPC,\n\n461\n00:23:47.213 --> 00:23:50.665\ndefine a database, there it is,\nthat's what I'm looking for right there.\n\n462\n00:23:50.665 --> 00:23:53.586\nI want it backed up, and\nyou'll see this one wants to back up and\n\n463\n00:23:53.586 --> 00:23:55.086\nretain backups for seven days.\n\n464\n00:23:55.086 --> 00:23:57.782\nSo it's gonna hold backups for\nseven days for me.\n\n465\n00:23:57.782 --> 00:24:00.405\nAnd then, I can specify a backup window.\n\n466\n00:24:00.405 --> 00:24:03.005\nAnd, a backup window is,\nwhen is it gonna take the backup?\n\n467\n00:24:03.005 --> 00:24:03.560\nRight?\n\n468\n00:24:03.560 --> 00:24:06.560\nI can tell it, I wanna take\nthe backup between these hours.\n\n469\n00:24:06.560 --> 00:24:08.240\nBetween 1 AM and 3 AM.\n\n470\n00:24:08.240 --> 00:24:09.270\nOr, I can say, No Preference.\n\n471\n00:24:09.270 --> 00:24:11.680\nAnd, they'll just take it when they think,\nthe server's idle.\n\n472\n00:24:11.680 --> 00:24:13.390\nThat works sometimes\ndoesn't work other times.\n\n473\n00:24:13.390 --> 00:24:17.060\nYou can kinda choose, but\nthey're gonna take care of my backups.\n\n474\n00:24:17.060 --> 00:24:19.520\nAnd I don't have to worry about it,\nthey're backing up the database and\n\n475\n00:24:19.520 --> 00:24:20.750\nwe can do point time restores.\n\n476\n00:24:20.750 --> 00:24:23.900\nSo if you wanna see more about\nthat check out our RDS backup and\n\n477\n00:24:23.900 --> 00:24:26.750\nrecovery episode that'll kinda cover that.\n\n478\n00:24:26.750 --> 00:24:29.000\nBut each of the different\ndatabase types have that.\n\n479\n00:24:29.000 --> 00:24:32.760\nSo for example, I showed you RDS but\nif I go to DynamoDB, right?\n\n480\n00:24:32.760 --> 00:24:37.440\nDynamo that's when you've got those\nreally, really big databases, right.\n\n481\n00:24:37.440 --> 00:24:41.030\nThese can be, hundreds of gigs,\nterabytes of data,\n\n482\n00:24:41.030 --> 00:24:43.120\nand that's tough to back up, isn't it?\n\n483\n00:24:43.120 --> 00:24:45.430\nIt's even tougher to restore,\nbut it's the same way.\n\n484\n00:24:45.430 --> 00:24:48.820\nWhen we go in here and create a table,\nit's going to basically set up\n\n485\n00:24:48.820 --> 00:24:52.770\nthat backup system for us and\nthen we can go in and restore as needed.\n\n486\n00:24:52.770 --> 00:24:57.380\nSo if I just create a Demo table here and\n\n487\n00:24:57.380 --> 00:25:00.890\nmy primary key, I'll just call\nit id which will be a number.\n\n488\n00:25:03.050 --> 00:25:05.490\nAnd let's see that should be good enough.\n\n489\n00:25:05.490 --> 00:25:10.100\nNotice for the default setting here, no\nsecondary indexes, provisions set 5 reads,\n\n490\n00:25:10.100 --> 00:25:13.500\n5 writes, basic alarms nothing\nreally mentioning backups there.\n\n491\n00:25:13.500 --> 00:25:18.260\nBut once it gets created, Amazon is\nmanaging this DynamoDB for me, and\n\n492\n00:25:18.260 --> 00:25:19.850\nso they're doing backups of it.\n\n493\n00:25:19.850 --> 00:25:21.220\nAnd if I ever need to restore data,\n\n494\n00:25:21.220 --> 00:25:24.640\nI can just jump right in,\naccess those backups and restore them.\n\n495\n00:25:24.640 --> 00:25:29.460\nIt's actually a pretty slick\nsystem that works really well.\n\n496\n00:25:29.460 --> 00:25:30.790\nAnd I'm not gonna wait for\nthat to be provisioned.\n\n497\n00:25:30.790 --> 00:25:32.370\nIt can take a little while.\n\n498\n00:25:32.370 --> 00:25:37.302\nThe other ones like Red Shift and even\nElastiCache those are other ones that,\n\n499\n00:25:37.302 --> 00:25:41.760\nwe can add managed backups for.\n\n500\n00:25:41.760 --> 00:25:45.020\nRedshift, again,\nis really large database warehousing.\n\n501\n00:25:45.020 --> 00:25:46.800\nDynamoDB is NoSQL.\n\n502\n00:25:46.800 --> 00:25:50.660\nRedshift is, kind of, it's own thing,\nwhere it has just massive amounts of data.\n\n503\n00:25:50.660 --> 00:25:56.282\nElastiCache, that's memcached,\nor, shoot, what's the other one?\n\n504\n00:25:56.282 --> 00:25:57.115\nI should've written it down.\n\n505\n00:25:57.115 --> 00:26:01.830\nSo, it's, well here,\nif I click on it, it'll tell me.\n\n506\n00:26:01.830 --> 00:26:02.335\nIt's, oh, Redis.\nRight.\n\n507\n00:26:02.335 --> 00:26:03.820\nMemcached and Redis.\n\n508\n00:26:03.820 --> 00:26:07.785\nSo Redis is just another database and\nMemcached is it's own weird little\n\n509\n00:26:07.785 --> 00:26:10.220\ndatabase and so\nit does back ups there too.\n\n510\n00:26:10.220 --> 00:26:14.000\nNow those are cached things so a lot of\ntimes we don't care about the backup,\n\n511\n00:26:14.000 --> 00:26:17.470\nif you lose the cache you can just rebuild\nit again but people are sensitive that\n\n512\n00:26:17.470 --> 00:26:21.110\npeople don't want to rebuild a full cache,\nespecially if you have a large data set.\n\n513\n00:26:21.110 --> 00:26:22.290\nAnd so it can do backups too.\n\n514\n00:26:22.290 --> 00:26:26.730\nSo notice here under the ElastiCache\ndashboard, I've got Snapshots.\n\n515\n00:26:26.730 --> 00:26:30.910\nAnd we can do snapshots just like we do\nwith our EC2 instances or databases and\n\n516\n00:26:30.910 --> 00:26:32.060\nwe can recover from those.\n\n517\n00:26:32.060 --> 00:26:36.850\nSo you got that functionality right in\nthere for doing recovery and restore.\n\n518\n00:26:38.270 --> 00:26:39.220\n>> Well we.\n\n519\n00:26:39.220 --> 00:26:42.380\n>> We've gone through a lot\nof stuff here that they have.\n\n520\n00:26:42.380 --> 00:26:45.480\nWe've gone through backing up instances,\nwe've looked at networking,\n\n521\n00:26:45.480 --> 00:26:46.475\nwe've looked at databases.\n\n522\n00:26:46.475 --> 00:26:50.180\nSo any other odds and ends, things that\nprobably wouldn't just jump out at us and\n\n523\n00:26:50.180 --> 00:26:52.110\nsay this is a recovery type of option.\n\n524\n00:26:52.110 --> 00:26:53.508\n>> Well let's go with a really crazy one.\n\n525\n00:26:53.508 --> 00:26:57.010\nRight?\nThe orchestration systems inside of AWS.\n\n526\n00:26:57.010 --> 00:27:01.493\nSo all the things we've talked about,\ndatabases, networking, instances.\n\n527\n00:27:01.493 --> 00:27:03.400\nRight?\nThese are all usually components of\n\n528\n00:27:03.400 --> 00:27:04.580\nsomething bigger.\n\n529\n00:27:04.580 --> 00:27:07.640\nSo, if you're rolling out a web\napplication, for example, right?\n\n530\n00:27:07.640 --> 00:27:09.565\nYour web application,\nit's not just a website, is it?\n\n531\n00:27:09.565 --> 00:27:14.070\nYou've probably got a web server,\nthat's kind of a given, I guess.\n\n532\n00:27:14.070 --> 00:27:16.910\nBut you probably have a database server,\nwhere your data's coming from.\n\n533\n00:27:16.910 --> 00:27:18.620\nYou've got a network configuration,\nthat's a part of it.\n\n534\n00:27:18.620 --> 00:27:20.140\nYou've got some static IPs.\n\n535\n00:27:20.140 --> 00:27:23.590\nYou've probably got a load balancer or\ntwo involved in the mix.\n\n536\n00:27:23.590 --> 00:27:27.430\nYou've probably got other components,\nyou've probably got an S3 bucket or\n\n537\n00:27:27.430 --> 00:27:29.860\nwherever the data is being stored and\nsynchronized from.\n\n538\n00:27:29.860 --> 00:27:33.130\nSo you've got several different components\nthat make up that web application.\n\n539\n00:27:33.130 --> 00:27:36.270\nAnd what we've seen over\nthe last 20 minutes or\n\n540\n00:27:36.270 --> 00:27:40.500\nso is all the different backup\ntechniques we have for each one, right?\n\n541\n00:27:40.500 --> 00:27:42.550\nSo you can handle them individually.\n\n542\n00:27:42.550 --> 00:27:45.430\nBut, if you use some of\nthe orchestration systems in AWS,\n\n543\n00:27:45.430 --> 00:27:47.630\nyou can actually collect this all at once.\n\n544\n00:27:47.630 --> 00:27:48.570\nAnd let me just show you,\n\n545\n00:27:48.570 --> 00:27:52.310\nif I go back to my console,\nyou've got a couple of big ones.\n\n546\n00:27:52.310 --> 00:27:57.070\nThe ones that show up on the exam\nare CloudFormation and OpsWorks,\n\n547\n00:27:57.070 --> 00:27:58.210\nthose are the two big ones, right?\n\n548\n00:27:58.210 --> 00:27:59.720\nCloudFormation and OpsWorks.\n\n549\n00:27:59.720 --> 00:28:03.160\nAnd you'll see Elastic Beanstalk also,\nwhich is not under Management Tools,\n\n550\n00:28:03.160 --> 00:28:05.390\nit's actually up here under Compute.\n\n551\n00:28:05.390 --> 00:28:09.430\nElastic Beanstalk is the original one,\nand then they've kind of added onto it.\n\n552\n00:28:09.430 --> 00:28:13.870\nSo if you're not familiar with these,\nElastic Beanstalk allowed you to\n\n553\n00:28:13.870 --> 00:28:19.040\nbasically, if you were a developer, it\nallowed you to completely ignore the fact\n\n554\n00:28:19.040 --> 00:28:23.370\nthat you had instances or databases or\nwhatever that was all hidden from you.\n\n555\n00:28:23.370 --> 00:28:24.670\nYou just went to Elastic Beanstalk and\n\n556\n00:28:24.670 --> 00:28:29.070\nyou said hey I've written\nthis sweet Ruby application.\n\n557\n00:28:29.070 --> 00:28:30.500\nI need somebody to host it.\n\n558\n00:28:30.500 --> 00:28:32.308\nAnd so you would come in\nhere to Elastic Beanstalk.\n\n559\n00:28:32.308 --> 00:28:35.419\nYou would tell it your platform and\nlet's see, oh,\n\n560\n00:28:35.419 --> 00:28:37.480\ngood I picked one that support it.\n\n561\n00:28:37.480 --> 00:28:39.297\n[LAUGH] And so you tell it you want Ruby.\n\n562\n00:28:39.297 --> 00:28:41.070\nAnd see what it's telling me beneath it?\n\n563\n00:28:41.070 --> 00:28:43.350\nLike hey, we're gonna use Amazon Linux.\n\n564\n00:28:43.350 --> 00:28:46.391\nWe're going to create\nan environment running Ruby 2.2.\n\n565\n00:28:46.391 --> 00:28:48.118\nThey're gonna set it all up for me.\n\n566\n00:28:48.118 --> 00:28:52.590\nAnd I can go ahead and say launch and\nhey, get me set up with that Beanstalk.\n\n567\n00:28:52.590 --> 00:28:56.730\nAnd now all I have to do is go in here and\nupload my application into it.\n\n568\n00:28:56.730 --> 00:28:57.990\nAnd it's gonna run.\n\n569\n00:28:57.990 --> 00:29:00.330\nWell, what about those\ninstances under the hood?\n\n570\n00:29:00.330 --> 00:29:01.850\nWhat about a database, if I have one?\n\n571\n00:29:01.850 --> 00:29:02.950\nWhat about a load balancer,\n\n572\n00:29:02.950 --> 00:29:05.810\nwhat about all these other components\nthat I may be bringing into here?\n\n573\n00:29:05.810 --> 00:29:09.348\nWell, it's all a part of this\nElastic Beanstalk application, and\n\n574\n00:29:09.348 --> 00:29:10.536\nit is being backed up.\n\n575\n00:29:10.536 --> 00:29:14.323\nAnd if there's a problem, we could\nredeploy the whole application and\n\n576\n00:29:14.323 --> 00:29:17.173\nAmazon rebuilds everything\nthat's underneath it.\n\n577\n00:29:17.173 --> 00:29:17.930\nRight?\n\n578\n00:29:17.930 --> 00:29:20.060\nWe just go through and\nredeploy our applications.\n\n579\n00:29:20.060 --> 00:29:23.840\nSo these are really nice because\nall those underlying features,\n\n580\n00:29:23.840 --> 00:29:25.530\nwe don't have to worry about\nthe individual components.\n\n581\n00:29:25.530 --> 00:29:26.951\nAnd it's gotten more\nadvanced over the years.\n\n582\n00:29:26.951 --> 00:29:28.429\nRight?\nSo Elastic Beanstalk is one of them.\n\n583\n00:29:29.450 --> 00:29:32.470\nIf you go to Cloud Formation,\nwhich is kinda the next one,\n\n584\n00:29:32.470 --> 00:29:35.360\nCloud Formation gives you\nbasically these templates.\n\n585\n00:29:35.360 --> 00:29:37.890\nAnd you create your own templates, and\n\n586\n00:29:37.890 --> 00:29:40.880\nyou'll see where Elastic Beanstalk\nactually made a template for me.\n\n587\n00:29:40.880 --> 00:29:42.870\nThis is the one [COUGH]\nthat's going on right now.\n\n588\n00:29:43.930 --> 00:29:47.180\nAnd if I had a Elastic\n[COUGH] Beanstalk failure,\n\n589\n00:29:47.180 --> 00:29:49.810\nI could actually just come here and\nuse this template, and\n\n590\n00:29:49.810 --> 00:29:53.890\ncreate a new stack off of it and basically\nhave that environment built right back up.\n\n591\n00:29:53.890 --> 00:29:57.403\nIt's useful for backup undercover, it's\nalso useful for building like staging and\n\n592\n00:29:57.403 --> 00:29:58.780\ntest environments.\n\n593\n00:29:58.780 --> 00:30:01.330\nI need a staging environment,\nan exact corner production, so\n\n594\n00:30:01.330 --> 00:30:03.310\nI can test something out and\nsee if it works, right?\n\n595\n00:30:03.310 --> 00:30:07.085\nOr test this deployment, see if my\ncustomers will have any problems.\n\n596\n00:30:07.085 --> 00:30:09.445\nBut the coolest one in\nmy opinion is OpsWorks.\n\n597\n00:30:09.445 --> 00:30:13.465\nOpsWorks is the newest one, and\nit is kind of a middle of the road.\n\n598\n00:30:13.465 --> 00:30:16.175\nYou don't have to write crazy templates\nfor it if you don't want to but\n\n599\n00:30:16.175 --> 00:30:19.225\nyou can, or\nyou can just deploy apps straight out and\n\n600\n00:30:19.225 --> 00:30:20.945\nnot even know about\nthe underlying infrastructure.\n\n601\n00:30:20.945 --> 00:30:23.850\nIt really lets you pick the level\nof control that you want.\n\n602\n00:30:23.850 --> 00:30:28.260\nIt's the same thing where you're gonna\nhave instances, databases, load balancers,\n\n603\n00:30:28.260 --> 00:30:31.560\nnetwork configurations that\nare all a part of this stack.\n\n604\n00:30:31.560 --> 00:30:33.430\nAnd here you can quickly and\neasily redeploy it.\n\n605\n00:30:33.430 --> 00:30:36.310\nIf there's ever a failure, you just\nblow away your production environment,\n\n606\n00:30:36.310 --> 00:30:37.860\nredeploy it, you're back in business.\n\n607\n00:30:37.860 --> 00:30:40.510\nIt takes minutes, and\nyou've kind of recovered.\n\n608\n00:30:40.510 --> 00:30:43.980\nSo, these guys they're called\norchestration software,\n\n609\n00:30:43.980 --> 00:30:49.490\nbecause Amazon knows that it's rare that\none instance does everything you need.\n\n610\n00:30:49.490 --> 00:30:52.470\nIt's rare that one S3 bucket\ndoes everything you need.\n\n611\n00:30:52.470 --> 00:30:54.750\nIt's all normally used in conjunction.\n\n612\n00:30:54.750 --> 00:30:56.480\nMultiple things working together.\n\n613\n00:30:56.480 --> 00:30:59.820\nAnd so orchestration software ties all\nthat together and let's us restore it and\n\n614\n00:30:59.820 --> 00:31:01.270\nbring it back all together.\n\n615\n00:31:01.270 --> 00:31:04.240\nWe're gonna do an episode on\nthe orchestration software so\n\n616\n00:31:04.240 --> 00:31:05.870\nwe'll get a chance to see how that works.\n\n617\n00:31:05.870 --> 00:31:09.630\nBut it's another quick way to get back up\nand running when you have a failure and\n\n618\n00:31:09.630 --> 00:31:14.920\nthis one just kinda covers all the stuff\nthat we talked about in the first\n\n619\n00:31:14.920 --> 00:31:16.690\nreally half of the series this episode.\n\n620\n00:31:16.690 --> 00:31:19.200\n>> And do we get the cool robot I think\n[LAUGH] I saw that on the screen.\n\n621\n00:31:19.200 --> 00:31:21.080\n>> They do have a cool\noutsource robot don't they?\n\n622\n00:31:21.080 --> 00:31:22.842\n>> That's what I want, I want the robot.\n\n623\n00:31:22.842 --> 00:31:23.950\n>> [LAUGH]\n>> [LAUGH] All right, Don,\n\n624\n00:31:23.950 --> 00:31:24.720\nwe've covered a lot of stuff.\n\n625\n00:31:24.720 --> 00:31:28.130\nIs there anything else that we need to\ngo over right before we close the show?\n\n626\n00:31:28.130 --> 00:31:28.840\n>> Those are the main things.\n\n627\n00:31:28.840 --> 00:31:31.580\nJust remember, I wanted to do this episode\nbecause it does come up on the exam.\n\n628\n00:31:31.580 --> 00:31:34.740\nThey just want you to be\naware of backups are done\n\n629\n00:31:34.740 --> 00:31:37.480\nindividually on multiple services,\nbut can be done all together, and\n\n630\n00:31:37.480 --> 00:31:39.420\norchestration, just know\nwhat options are out there.\n\n631\n00:31:39.420 --> 00:31:42.180\nThere's a lot of options,\nyou may not use half of them, but\n\n632\n00:31:42.180 --> 00:31:43.580\njust be aware of them for the exam.\n\n633\n00:31:43.580 --> 00:31:45.190\n>> All right, Don,\nthank you so much for that.\n\n634\n00:31:45.190 --> 00:31:46.975\nAnd thank you guys for watching.\n\n635\n00:31:46.975 --> 00:31:49.865\nI guess we're gonna go ahead and sign off\nfor another great episode here at ITProTV.\n\n636\n00:31:49.865 --> 00:31:51.885\nI've been your host Daniel Lowry.\n\n637\n00:31:51.885 --> 00:31:52.642\n>> And I'm Don Pezet.\n\n638\n00:31:52.642 --> 00:31:53.720\n>> And we'll see you next time.\n\n639\n00:31:53.720 --> 00:31:59.660\n[MUSIC]\n\n",
          "vimeoId": "149771510"
        },
        {
          "description": "In this episode, Don and Daniel explore a few different methods for backing up and restoring your on-premises environment with AWS. They start by looking at Pilot Light, which is a low-cost, minimalistic approach to Disaster Recovery in AWS. Then they move to more robust solutions to Disaster Recovery, specifically the Warm Standby and Multi-Site models.",
          "length": "1906",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/amazon-acsa/amazon-acsa-9-2-backup_and_restore_scenarios-121715-1.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/amazon-acsa/amazon-acsa-9-2-backup_and_restore_scenarios-121715-1-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/amazon-acsa/amazon-acsa-9-2-backup_and_restore_scenarios-121715-1-sm.jpg",
          "title": "Backup and Restore Scenarios",
          "transcript": "WEBVTT\n\n1\n00:00:00.000 --> 00:00:10.000\n[MUSIC]\n\n2\n00:00:11.045 --> 00:00:13.421\nAll right, greetings, everyone.\n\n3\n00:00:13.421 --> 00:00:16.290\nAnd welcome to another episode of ITProTV.\n\n4\n00:00:16.290 --> 00:00:17.570\nI'm your host, Daniel Lowrie and\n\n5\n00:00:17.570 --> 00:00:22.070\nin today's episode we're continuing on in\nour AWS Certified SysOps Administrator.\n\n6\n00:00:22.070 --> 00:00:23.630\nAnd yes, that is difficult to say.\n\n7\n00:00:23.630 --> 00:00:27.100\nAnd joining us to lend his\nexpertise on this topic\n\n8\n00:00:27.100 --> 00:00:28.910\nis none other than my good friend,\nMr. Don Pezet.\n\n9\n00:00:28.910 --> 00:00:29.680\nDon, welcome to the show.\n\n10\n00:00:29.680 --> 00:00:30.660\nHow are you doing today, sir?\n\n11\n00:00:30.660 --> 00:00:31.580\n>> I'm doing great, Daniel.\n\n12\n00:00:31.580 --> 00:00:33.290\nReady to talk about more backup and\n\n13\n00:00:33.290 --> 00:00:37.210\nrecovery scenarios that\nare available inside of AWS.\n\n14\n00:00:37.210 --> 00:00:40.900\nAt this point, you guys have already\nseen a number of the backup and\n\n15\n00:00:40.900 --> 00:00:42.610\nrecovery tools that are available, right?\n\n16\n00:00:42.610 --> 00:00:46.390\nAnd there's a ton of them depending\non whether you're on EC2 or RDS or\n\n17\n00:00:46.390 --> 00:00:49.600\nwhatever it is you're doing, there's\ntons of ways to backup your systems,\n\n18\n00:00:49.600 --> 00:00:51.960\nto restore your systems,\nto make them redundant.\n\n19\n00:00:51.960 --> 00:00:53.800\nSo if a failure occurs we don't\neven have to do a restore,\n\n20\n00:00:53.800 --> 00:00:55.400\nit's just already in place.\n\n21\n00:00:55.400 --> 00:00:58.850\nThey're all great solutions, all right?\n\n22\n00:00:58.850 --> 00:01:01.860\nBut depending on your organization,\nyou're going to have to build a model\n\n23\n00:01:01.860 --> 00:01:03.380\naround that,\nto make sure that you're protected.\n\n24\n00:01:03.380 --> 00:01:06.800\nAnd if you're entirely in the cloud,\nif all of your stuff is in AWS,\n\n25\n00:01:06.800 --> 00:01:10.920\nyou just use the tools we talked about,\nand you're in business.\n\n26\n00:01:10.920 --> 00:01:13.860\nBut what if not everything\nis in the cloud?\n\n27\n00:01:13.860 --> 00:01:16.140\nWhat if you have on-premises equipment?\n\n28\n00:01:16.140 --> 00:01:19.370\nWell you can still leverage\nAWS as your backup.\n\n29\n00:01:19.370 --> 00:01:22.500\nAnd there's a few different scenarios that\nAmazon wants you to be aware of for that.\n\n30\n00:01:22.500 --> 00:01:25.798\nAnd that's what we're gonna\ntake a look at in this episode,\n\n31\n00:01:25.798 --> 00:01:28.904\nare the three different primary\nscenarios Amazon has for\n\n32\n00:01:28.904 --> 00:01:33.645\nleveraging AWS to make your on premises\nequipment redundant and highly available.\n\n33\n00:01:33.645 --> 00:01:38.580\n>> So, Don, this is going to be\na breaking away from the traditional\n\n34\n00:01:38.580 --> 00:01:41.903\ntype of redundancy and\nbackup solutions and\n\n35\n00:01:41.903 --> 00:01:46.415\ngoing right into AWS and\nletting them do everything for us?\n\n36\n00:01:46.415 --> 00:01:48.087\nSort of, yeah, I wouldn't say letting them\ndo everything because we kind of have to\n\n37\n00:01:48.087 --> 00:01:49.211\nget it set up but once it's set up,\nyeah, they do a lot.\n\n38\n00:01:49.211 --> 00:01:52.807\n>> Think about the traditional model,\nall right, so\n\n39\n00:01:52.807 --> 00:01:58.450\nlet's say that you are the systems admin\nfor a company that has a data center.\n\n40\n00:01:58.450 --> 00:02:01.760\nMaybe not a giant data center, maybe\nyou've got 100 servers, but you run them,\n\n41\n00:02:01.760 --> 00:02:04.050\nyou run all 100 of those servers.\n\n42\n00:02:04.050 --> 00:02:09.008\nAnd your CIO comes down to you one day and\nsays, hey Don, we've got these 100\n\n43\n00:02:09.008 --> 00:02:11.510\nservers but we're really worried cuz\nwe're all right here in the building.\n\n44\n00:02:11.510 --> 00:02:13.490\nSo if we have a failure here,\npower outage,\n\n45\n00:02:13.490 --> 00:02:16.860\nthe building gets destroyed,\nall of our service are gone.\n\n46\n00:02:16.860 --> 00:02:18.350\nSo we want availability.\n\n47\n00:02:18.350 --> 00:02:21.290\nWe want a second set of\nserver somewhere else.\n\n48\n00:02:21.290 --> 00:02:22.240\nAll right, well what do we do?\n\n49\n00:02:22.240 --> 00:02:26.420\nUnder the traditional model we pick up\nour phone and start making phone calls.\n\n50\n00:02:26.420 --> 00:02:28.990\nAnd we make a pretty big decision.\n\n51\n00:02:28.990 --> 00:02:33.730\nThe decision is either a,\nwe co-locate our servers, right?\n\n52\n00:02:33.730 --> 00:02:35.410\nWe find someone whose\nalready got a data center.\n\n53\n00:02:35.410 --> 00:02:38.940\nAnd we buy physical servers, and\nwe stick in their data center, and\n\n54\n00:02:38.940 --> 00:02:40.450\nwe trust them to run that.\n\n55\n00:02:40.450 --> 00:02:41.870\nAnd we put our physical servers there.\n\n56\n00:02:41.870 --> 00:02:43.630\nAnd now we got them in a second place,\nright?\n\n57\n00:02:43.630 --> 00:02:47.420\nWe've got our on premises servers, and\nwe've got some in a co-location facility.\n\n58\n00:02:47.420 --> 00:02:48.670\nLot of complexities there.\n\n59\n00:02:48.670 --> 00:02:50.120\nWe've got to maintain the hardware.\n\n60\n00:02:50.120 --> 00:02:52.380\nWe've got to trust the provider\nwe're storing it with.\n\n61\n00:02:52.380 --> 00:02:54.610\nYou know,\nour remote access to it may be limited.\n\n62\n00:02:54.610 --> 00:02:57.710\nWe may have all sorts of things we\nhave to go through with that but\n\n63\n00:02:57.710 --> 00:02:59.040\nit's a good model, right?\n\n64\n00:03:00.130 --> 00:03:03.690\nOption b, we could build our\nown disaster recovery center.\n\n65\n00:03:03.690 --> 00:03:06.610\nWe could go and buy a building\nsomewhere else, say, in another state,\n\n66\n00:03:06.610 --> 00:03:10.260\nin another country, where ever it was and\nbuild up a data center.\n\n67\n00:03:10.260 --> 00:03:14.996\nNetwork, power, generator, security,\nracks, servers, all of that,\n\n68\n00:03:14.996 --> 00:03:16.400\nwe incur the cost.\n\n69\n00:03:16.400 --> 00:03:19.860\nWe build that up and\nnow we got us a data center, right?\n\n70\n00:03:19.860 --> 00:03:22.060\nIts a lot of administration and\na lot of cost.\n\n71\n00:03:22.060 --> 00:03:24.300\nBut at least we fully control it so\nthere is that.\n\n72\n00:03:25.610 --> 00:03:28.904\nOr option c we just say, you know what,\nforget it, we're not gonna get rid of it.\n\n73\n00:03:28.904 --> 00:03:31.080\n[LAUGH] We'll just have\none set of data and\n\n74\n00:03:31.080 --> 00:03:33.530\nthat's it, that's the traditional model.\n\n75\n00:03:33.530 --> 00:03:35.400\nAnd so what Amazon wants to\ndo is they wanna step in and\n\n76\n00:03:35.400 --> 00:03:38.698\nsay look, there's now an option d,\nsomething you didn't have before.\n\n77\n00:03:38.698 --> 00:03:43.850\nYou can co-locate but not have to pay for\nthe servers, not have to pay for\n\n78\n00:03:43.850 --> 00:03:47.145\nall this extra stuff that you had to pay\nfor before and only pay for what you use.\n\n79\n00:03:47.145 --> 00:03:50.170\nIt's a big difference from the old model,\nso\n\n80\n00:03:50.170 --> 00:03:55.160\ntheir services kinda take the place of\nthat old model and give us a redundant\n\n81\n00:03:55.160 --> 00:03:58.900\ndisaster recovery location that's\nseparate from our on-premises equipment.\n\n82\n00:03:58.900 --> 00:04:02.295\nSo you can maintain 100% of your\nproduction infrastructure right there\n\n83\n00:04:02.295 --> 00:04:03.468\non-premises, right?\n\n84\n00:04:03.468 --> 00:04:05.820\nYou have 100% control of it.\n\n85\n00:04:05.820 --> 00:04:09.230\nBut your disaster recovery\ncenter is now up in AWS.\n\n86\n00:04:09.230 --> 00:04:13.170\nAnd the cost to that is far lower than\ntrying to manage your own data center,\n\n87\n00:04:13.170 --> 00:04:14.940\neven if you do co-location.\n\n88\n00:04:14.940 --> 00:04:16.344\nSo that's kind of the point there.\n\n89\n00:04:16.344 --> 00:04:19.220\n>> All right Dan, so\nnow that we know what we're looking at,\n\n90\n00:04:19.220 --> 00:04:23.140\nwhat we're really talking about, where\ndo we begin, what are some of the steps\n\n91\n00:04:23.140 --> 00:04:26.310\nthat we need to take to prepare ourselves\nto work in this type of environment?\n\n92\n00:04:26.310 --> 00:04:30.470\n>> All right, well first off, we need to\nknow that if our data's already in AWS,\n\n93\n00:04:30.470 --> 00:04:32.380\nthen these scenarios don't really apply,\nright?\n\n94\n00:04:32.380 --> 00:04:34.940\nThese are scenarios that apply if\nyou have on-premises equipment, and\n\n95\n00:04:34.940 --> 00:04:36.900\nyou're trying to leverage AWS for\nrecovery.\n\n96\n00:04:36.900 --> 00:04:41.050\nIf you've got your data already in AWS,\nuse AWS tools, right?\n\n97\n00:04:41.050 --> 00:04:45.465\nWe've already seen them in other\nepisodes like snapshots and images for\n\n98\n00:04:45.465 --> 00:04:46.710\neasy-to instances.\n\n99\n00:04:46.710 --> 00:04:49.000\nWe got snapshots for our RDS data bases.\n\n100\n00:04:49.000 --> 00:04:53.710\nWe've got multi AZ deployments for RDS\ndata bases, you've got snapshots for S3,\n\n101\n00:04:53.710 --> 00:04:55.490\nprevious versions of files for S3.\n\n102\n00:04:55.490 --> 00:04:58.820\nThere's all sorts of different\ntechniques in there, right?\n\n103\n00:04:58.820 --> 00:05:01.090\nAnd you need to make\nsure you leverage those.\n\n104\n00:05:01.090 --> 00:05:04.350\nAnd one thing I do wanna point out\ncuz this does turn up on the exam is,\n\n105\n00:05:05.610 --> 00:05:09.600\neven if you've got on-premises data and\nyou're just backing up data into S3, for\n\n106\n00:05:09.600 --> 00:05:12.890\nexample, you can still leverage\nsome of those features.\n\n107\n00:05:12.890 --> 00:05:17.680\nI think I talked about this when we\ntalked about the virtual tape gateway,\n\n108\n00:05:17.680 --> 00:05:22.260\nthat you can have where you backup your\non premises data to S3 buckets, right?\n\n109\n00:05:22.260 --> 00:05:26.340\nSo now your backups are stored in S3 and\n\n110\n00:05:26.340 --> 00:05:29.780\nyou get the 11-9s of durability\nthat Amazon promises and so\n\n111\n00:05:29.780 --> 00:05:33.730\nyou get really nice safe stable\nbackups that are going up there.\n\n112\n00:05:33.730 --> 00:05:36.850\nBut as you add more and more and\nmore, it starts getting expensive,\n\n113\n00:05:36.850 --> 00:05:41.170\nyou can leverage S3 and\nGlacier to have that set up,\n\n114\n00:05:41.170 --> 00:05:45.580\nso that your older backups get sent to\nGlacier storage, which is slower, right?\n\n115\n00:05:45.580 --> 00:05:48.480\nIt can take three to five hours to\nretrieve something out of glacier, but\n\n116\n00:05:48.480 --> 00:05:49.990\nit's far less expensive.\n\n117\n00:05:49.990 --> 00:05:54.300\nAnd so now you can have a multi-tier\ntype solution, where you've got nice,\n\n118\n00:05:54.300 --> 00:05:57.160\nfast storage for your recent backups,\nyou've got slower,\n\n119\n00:05:57.160 --> 00:05:59.910\ndelayed access storage for\nyour older backups.\n\n120\n00:05:59.910 --> 00:06:02.880\nAnd then you could eliminate data\nafter a certain period of time.\n\n121\n00:06:02.880 --> 00:06:06.140\nYou've always gotta remember\nyour retention period, right?\n\n122\n00:06:06.140 --> 00:06:08.150\nYour company needs to agree\non a retention period.\n\n123\n00:06:08.150 --> 00:06:10.450\nHow long do you hold data for?\n\n124\n00:06:10.450 --> 00:06:12.680\nAt some point it's important\nto get rid of data.\n\n125\n00:06:12.680 --> 00:06:13.920\nIt's just too old to worry about.\n\n126\n00:06:13.920 --> 00:06:14.800\nAnd don't plan for it.\n\n127\n00:06:14.800 --> 00:06:16.860\nYou know, it's just old data.\n\n128\n00:06:16.860 --> 00:06:19.396\nBut a lot of us have government\nregulations, compliance,\n\n129\n00:06:19.396 --> 00:06:21.180\nthings like that we've gotta deal with.\n\n130\n00:06:21.180 --> 00:06:24.653\nSo, now to reach out to your legal team,\nreach out to your executives and find out\n\n131\n00:06:24.653 --> 00:06:28.093\nwhat it is for your organization and\nyou can build them all around that, right?\n\n132\n00:06:28.093 --> 00:06:31.690\nIf you don't know what I'm talking about,\nlet me bring up my console here.\n\n133\n00:06:31.690 --> 00:06:35.610\nAnd if I jump in to S3,\nwhen we create an S3 bucket, so\n\n134\n00:06:35.610 --> 00:06:39.050\nlet's say I'm going to be backing up my on\npremises equipment here into an S3 bucket.\n\n135\n00:06:39.050 --> 00:06:42.018\nI'll just take one of these existing\nbuckets that I already have,\n\n136\n00:06:42.018 --> 00:06:44.412\nI've got this,\nI expect it to be AWS demo bucket one.\n\n137\n00:06:44.412 --> 00:06:46.650\nIf I go into that bucket,\nI've just got a couple of files,\n\n138\n00:06:46.650 --> 00:06:48.180\nnothing too fancy in here.\n\n139\n00:06:48.180 --> 00:06:53.140\nBut if I go to the bucket properties, in\nthe properties for the bucket, you'll see\n\n140\n00:06:53.140 --> 00:06:57.550\nwe've got a ton of different stuff we\ncan do including versioning, right?\n\n141\n00:06:57.550 --> 00:07:00.940\nWith versioning,\nI can turn that on and now,\n\n142\n00:07:00.940 --> 00:07:07.460\nwhenever I change a file, it's actually\ngonna store the previous version of file.\n\n143\n00:07:07.460 --> 00:07:10.758\nSo, if I wanna maintain more than one\ncopy of file as it changes overtime,\n\n144\n00:07:10.758 --> 00:07:13.385\nI can do that and\nS3 will provide that information for me.\n\n145\n00:07:13.385 --> 00:07:15.850\nSo versioning, that's one\nfeature I can take advantage of.\n\n146\n00:07:15.850 --> 00:07:18.390\nIf my data is in the Cloud or\nif it's on premises and\n\n147\n00:07:18.390 --> 00:07:19.180\nI'm backing it up to the Cloud.\n\n148\n00:07:20.620 --> 00:07:23.500\nAfter versioning, I can do a Lifecycle and\n\n149\n00:07:23.500 --> 00:07:26.830\nthe Lifecycle is where we can come in and\nwe can create rules that tells that what\n\n150\n00:07:26.830 --> 00:07:29.330\nto do with data after\na certain period of time.\n\n151\n00:07:29.330 --> 00:07:33.340\nSo I can add a rule in here where I'll say\nI'm just gonna do the whole bucket, but\n\n152\n00:07:33.340 --> 00:07:35.460\nyou can actually do it prefix,\nlike a folder inside of it.\n\n153\n00:07:35.460 --> 00:07:37.390\nSo I'm gonna do my whole bucket.\n\n154\n00:07:37.390 --> 00:07:40.216\nAnd I'm gonna tell it what I wanna do and\n\n155\n00:07:40.216 --> 00:07:45.528\nI can say transition to the\nStandard-Infrequent Access Storage Class,\n\n156\n00:07:45.528 --> 00:07:49.058\nI can archive to Glacier Storage or\nI can Expire.\n\n157\n00:07:49.058 --> 00:07:54.409\nI might wanna say, take my data and\nafter 30 days, okay?\n\n158\n00:07:54.409 --> 00:07:58.346\n30 days after it's created in this\nS3 bucket and move it to Glacier.\n\n159\n00:07:58.346 --> 00:07:59.670\n>> Because Glacier's\ngonna be a lot cheaper.\n\n160\n00:07:59.670 --> 00:08:03.149\nAnd if I have a failure,\nwhich backup do I want?\n\n161\n00:08:03.149 --> 00:08:04.580\nI want the backup I took yesterday.\n\n162\n00:08:04.580 --> 00:08:07.960\nI want the backup that's\nas recent as possible.\n\n163\n00:08:07.960 --> 00:08:11.120\nI don't want to go to some\nbackup from 30 days ago.\n\n164\n00:08:11.120 --> 00:08:14.920\nIf I have to go to a backup that's two\nmonths old, Bob in accounting calls up and\n\n165\n00:08:14.920 --> 00:08:17.310\nsays I deleted my spreadsheet\na couple of weeks ago,\n\n166\n00:08:17.310 --> 00:08:19.730\nI thought I wouldn't need it anymore,\nturns out I do.\n\n167\n00:08:19.730 --> 00:08:22.110\nThen we just tell Bob, hey,\nits gonna be three to five hours,\n\n168\n00:08:22.110 --> 00:08:24.650\nlet me go retrieve that file for\nyou, and we'll get it back.\n\n169\n00:08:24.650 --> 00:08:25.400\nAnd Bob'll wait three to five hours.\n\n170\n00:08:25.400 --> 00:08:28.490\nIt's been weeks since he lost it anyway,\nright?\n\n171\n00:08:28.490 --> 00:08:32.120\nSo, we can set that so\nit removes that cheaper storage.\n\n172\n00:08:32.120 --> 00:08:35.560\nBut if we have retention,\nthen we might want to say expire, that,\n\n173\n00:08:35.560 --> 00:08:38.620\nhey, after two years,\nwhat will two years be?\n\n174\n00:08:38.620 --> 00:08:39.300\nLike, 720 days?\n\n175\n00:08:39.300 --> 00:08:40.200\nIs that good math?\n\n176\n00:08:40.200 --> 00:08:41.439\nIs that 730 days?\n\n177\n00:08:42.650 --> 00:08:43.990\nI don't know, something like that.\n\n178\n00:08:43.990 --> 00:08:44.820\nSo, we could say 730 days.\n\n179\n00:08:44.820 --> 00:08:48.630\nSo, after two years the date\nis not valid anymore, right?\n\n180\n00:08:48.630 --> 00:08:50.110\nWell, let's terminate it and\nget rid of it.\n\n181\n00:08:50.110 --> 00:08:52.340\nIf I haven't accessed it in two years,\nI'm not gonna need it.\n\n182\n00:08:52.340 --> 00:08:53.410\nIt's gonna go.\nCheck with your lawyers.\n\n183\n00:08:53.410 --> 00:08:56.650\nCheck with your executives, cuz they\nprobably have something different.\n\n184\n00:08:56.650 --> 00:09:01.130\nSo, for example, in insurance world is\nvery common to see ten years, right?\n\n185\n00:09:01.130 --> 00:09:02.620\nSo, I might need to set this for\n3,650 days.\n\n186\n00:09:02.620 --> 00:09:06.870\nWhich is a little bigger than\nwhat I can see there, but\n\n187\n00:09:06.870 --> 00:09:09.110\nbasically I can say 10 years.\n\n188\n00:09:09.110 --> 00:09:12.650\nAfter 10 years, if there is still come\ndata in there, just get rid of it,\n\n189\n00:09:12.650 --> 00:09:13.640\nit's expired.\n\n190\n00:09:13.640 --> 00:09:15.473\nSo, I've now set up a life cycle and\n\n191\n00:09:15.473 --> 00:09:19.341\nwe can see the life cycle preview here\nwhere it shows what's gonna happen.\n\n192\n00:09:19.341 --> 00:09:21.409\nOn day zero an object is uploaded,\nall right?\n\n193\n00:09:21.409 --> 00:09:22.580\nIt comes in.\n\n194\n00:09:22.580 --> 00:09:25.200\nOn day 30 it gets Archive to Glacier,\n\n195\n00:09:25.200 --> 00:09:27.640\nthat's the current storage class for\nGlacier.\n\n196\n00:09:27.640 --> 00:09:32.400\nAnd then, after day 3,650,\n10 years later, it gets expired and\n\n197\n00:09:32.400 --> 00:09:33.660\nit gets deleted, right?\n\n198\n00:09:33.660 --> 00:09:35.070\nDeleted or overwritten.\n\n199\n00:09:35.070 --> 00:09:38.250\nSo, that's my life cycle that\nI just set up for this data.\n\n200\n00:09:38.250 --> 00:09:41.590\nAnd I can take my previous versions and\ndo the same things.\n\n201\n00:09:41.590 --> 00:09:44.370\nHow many previous\nversions do I wanna save?\n\n202\n00:09:44.370 --> 00:09:46.060\nProbably not that many, right?\n\n203\n00:09:46.060 --> 00:09:49.700\nSo, I can come in here and\nI can say permanently delete\n\n204\n00:09:49.700 --> 00:09:54.850\nprevious versions 14 days after\nbecoming a previous version.\n\n205\n00:09:54.850 --> 00:09:59.030\nSo, if I modify a file, I'll save\nthe previous version for two weeks.\n\n206\n00:09:59.030 --> 00:10:00.760\nAnd after two weeks we'll\njust get rid of it.\n\n207\n00:10:00.760 --> 00:10:04.380\nOr you can set other various things here\nto kinda change how you want that to be.\n\n208\n00:10:04.380 --> 00:10:06.250\nAnd now I can see the life cycle for that.\n\n209\n00:10:06.250 --> 00:10:07.540\nSomebody makes a change.\n\n210\n00:10:07.540 --> 00:10:10.110\nAnd on day zero we save\nthe previous version.\n\n211\n00:10:10.110 --> 00:10:11.450\nAfter 14 days we expire it.\n\n212\n00:10:11.450 --> 00:10:14.340\nNow, if they continue to make changes I\nmight have more than one previous version.\n\n213\n00:10:14.340 --> 00:10:17.670\nAnd they'll all stay for\n14 days each, right?\n\n214\n00:10:17.670 --> 00:10:19.960\nSo, you may have more than\none at the same time.\n\n215\n00:10:19.960 --> 00:10:23.470\nSo, notice this little warning\nthat I'm getting here.\n\n216\n00:10:23.470 --> 00:10:26.340\nIts just telling me that\nmy files are really small.\n\n217\n00:10:26.340 --> 00:10:29.110\nAnd really small files don't do so\ngreat Glacier.\n\n218\n00:10:29.110 --> 00:10:31.890\nGlacier has a minimum price\nthreshold that you have to hit.\n\n219\n00:10:31.890 --> 00:10:34.770\nAnd so, they're telling me that my storage\nmight actually get more expensive by\n\n220\n00:10:34.770 --> 00:10:35.990\nusing Glacier.\n\n221\n00:10:35.990 --> 00:10:37.650\nMost people don't have\nsmall files like this.\n\n222\n00:10:37.650 --> 00:10:39.014\nMine, I just have a couple of text files.\n\n223\n00:10:39.014 --> 00:10:39.692\nThey're really tiny.\n\n224\n00:10:39.692 --> 00:10:42.890\nSee how my average size is only 22k,\nright?\n\n225\n00:10:42.890 --> 00:10:45.860\nBut if you've got files that are larger,\n\n226\n00:10:45.860 --> 00:10:48.080\nthen when you move them over to\nGlacier you actually save a lot.\n\n227\n00:10:48.080 --> 00:10:50.770\nSo, it's just warning me here cuz Amazon\nwants to make sure that I'm doing\n\n228\n00:10:50.770 --> 00:10:53.920\nthe right thing in not paying\nthem more money than I have to.\n\n229\n00:10:53.920 --> 00:10:55.310\nIf I'm not gonna save\nmoney going to Glacier,\n\n230\n00:10:55.310 --> 00:10:57.310\nI might as well just keep it\nall right here in S3, right?\n\n231\n00:10:57.310 --> 00:10:58.660\nThat makes sense.\n\n232\n00:10:58.660 --> 00:11:02.240\nSo, we want to make sure that\nwe're always aware of the costs.\n\n233\n00:11:02.240 --> 00:11:03.792\nAnd once that's done,\nI can put that in place.\n\n234\n00:11:03.792 --> 00:11:13.833\nAnd now I'll call this\nthe ITProTVMulti-Tier Storage Policy.\n\n235\n00:11:13.833 --> 00:11:17.160\nAnd so, now I've got this mulit-tier\npolicy, and I'll create that and\n\n236\n00:11:17.160 --> 00:11:18.150\nit's in place.\n\n237\n00:11:18.150 --> 00:11:20.270\nAnd so, now all I have to do is\ntake my production system and say,\n\n238\n00:11:20.270 --> 00:11:23.500\nhey, when you run a backup,\nstick it right here in this S3 bucket.\n\n239\n00:11:23.500 --> 00:11:25.220\nAnd then, I do that every single day.\n\n240\n00:11:25.220 --> 00:11:27.070\nEvery day backing it up to the S3 bucket.\n\n241\n00:11:27.070 --> 00:11:30.150\nAnd after 30 days the old backups\nwill get sent over to Glacier.\n\n242\n00:11:30.150 --> 00:11:33.261\nAnd after 10 years the old\nbackups will get deleted.\n\n243\n00:11:33.261 --> 00:11:33.820\nRight?\n\n244\n00:11:33.820 --> 00:11:35.370\nSo it's all automated for me.\n\n245\n00:11:35.370 --> 00:11:37.840\nSo here I'm leveraging\ntwo different pieces.\n\n246\n00:11:37.840 --> 00:11:42.321\nI'm leveraging on-premises equipment,\nand I'm leveraging S3 up in and\n\n247\n00:11:42.321 --> 00:11:44.350\na feature of S3 to be able to set that.\n\n248\n00:11:44.350 --> 00:11:47.210\nSo always be aware that there's\na good mixture to be found.\n\n249\n00:11:47.210 --> 00:11:49.600\nYou don't have to let go\nof those local servers.\n\n250\n00:11:49.600 --> 00:11:52.220\nA lot of executives just\ndon't wanna do that.\n\n251\n00:11:52.220 --> 00:11:53.590\nThey don't wanna let go of those servers.\n\n252\n00:11:53.590 --> 00:11:54.850\nThey've had them for so long.\n\n253\n00:11:54.850 --> 00:11:56.580\nThis is a way to kinda get around that.\n\n254\n00:11:56.580 --> 00:11:58.710\n>> And, Don, you also said,\nI think on a previous show,\n\n255\n00:11:58.710 --> 00:12:02.850\nabout if you do have servers\nthat you wanna back up to, and\n\n256\n00:12:02.850 --> 00:12:06.450\nin a more traditional way, I should say,\nsomething like a virtual server.\n\n257\n00:12:06.450 --> 00:12:08.580\nSay we had a virtual\nenvironment on premises,\n\n258\n00:12:08.580 --> 00:12:10.000\nwe can back that up to the Cloud as well.\n\n259\n00:12:10.000 --> 00:12:11.010\n>> Oh, yeah, yeah.\n\n260\n00:12:11.010 --> 00:12:14.690\nYou've got the virtual machine instance\nconnector that you could run that'll\n\n261\n00:12:14.690 --> 00:12:17.740\nactually import those up into AWS and\nlet them sit there.\n\n262\n00:12:17.740 --> 00:12:22.000\nAnd that's a really useful way to\nmigrate to AWS if you want to.\n\n263\n00:12:22.000 --> 00:12:24.860\nOr at least to set up a DR site, that\nyou've got your virtual machines up there\n\n264\n00:12:24.860 --> 00:12:26.890\nand I'll talk about that\nhere in just a second.\n\n265\n00:12:26.890 --> 00:12:28.610\nThere is one more thing I wanna mention.\n\n266\n00:12:28.610 --> 00:12:30.360\nI showed you S3,\nthat's not the only one, right?\n\n267\n00:12:30.360 --> 00:12:34.030\nRemember, we've got EC2 and the other\nguys, they've got snapshots backups.\n\n268\n00:12:34.030 --> 00:12:36.280\nJust leverage all those\npieces as is right for you.\n\n269\n00:12:36.280 --> 00:12:38.120\nLet me talk about what you said, Daniel.\n\n270\n00:12:38.120 --> 00:12:42.360\nSo, Daniel mentioned importing those\nvirtual machines up into the Cloud.\n\n271\n00:12:42.360 --> 00:12:43.000\nRight?\n\n272\n00:12:43.000 --> 00:12:46.680\nNow, I know that makes sense if\nI wanna migrate to the Cloud.\n\n273\n00:12:46.680 --> 00:12:50.160\nIf I wanna migrate to AWS, get all my\nstuff up there and just run from AWS,\n\n274\n00:12:50.160 --> 00:12:51.670\nthat makes sense.\n\n275\n00:12:51.670 --> 00:12:54.520\nBut what if my CIO is coming to me and\nsaying, you know what Don,\n\n276\n00:12:54.520 --> 00:12:55.210\nwe're not ready for that.\n\n277\n00:12:55.210 --> 00:12:56.080\nWe don't wanna run from the Cloud.\n\n278\n00:12:56.080 --> 00:12:58.070\nWe wanna run from our\non-premises machines.\n\n279\n00:12:58.070 --> 00:12:59.300\nYou can back up to the Cloud if you want.\n\n280\n00:12:59.300 --> 00:13:01.440\nWe need a DR site, we need that.\n\n281\n00:13:01.440 --> 00:13:03.970\nBut our production needs to stay on site,\nokay?\n\n282\n00:13:03.970 --> 00:13:07.300\nWell, if that's the case,\nI can do a hybrid deployment.\n\n283\n00:13:07.300 --> 00:13:10.050\nAnd Amazon actually has three\ndifferent scenarios for that, and\n\n284\n00:13:10.050 --> 00:13:13.170\nyou need to know all of three for\nthe exam because they turn up.\n\n285\n00:13:13.170 --> 00:13:14.910\nLet me start with the first one.\n\n286\n00:13:14.910 --> 00:13:18.602\nThe first one Amazon calls\na Pilot Light Deployment.\n\n287\n00:13:18.602 --> 00:13:19.380\nAll right?\nNow,\n\n288\n00:13:19.380 --> 00:13:22.750\nif you're not familiar with that term\nPilot Light, it comes from the gas world.\n\n289\n00:13:22.750 --> 00:13:24.810\nI have a gas water heater at home.\n\n290\n00:13:24.810 --> 00:13:26.770\nAnd that means there's\nnatural gas pumped into it.\n\n291\n00:13:26.770 --> 00:13:29.645\nAnd there's a little flame\nthat's running all the time.\n\n292\n00:13:29.645 --> 00:13:31.380\nRight?\nIt's always burning just a little\n\n293\n00:13:31.380 --> 00:13:32.440\nbit of gas.\n\n294\n00:13:32.440 --> 00:13:35.920\nAnd then, when the heater needs\nto kick on the gas increases.\n\n295\n00:13:35.920 --> 00:13:38.190\nAnd it's on fire already, and it heats up.\n\n296\n00:13:38.190 --> 00:13:39.365\nAnd the house stays nice and warm.\n\n297\n00:13:39.365 --> 00:13:42.630\nRight?\nBut there's always a little flame running.\n\n298\n00:13:42.630 --> 00:13:45.950\nWith the Pilot Light model,\nthat's how your virtual environment is.\n\n299\n00:13:45.950 --> 00:13:48.270\nSo, you have your on-premises systems,\nright?\n\n300\n00:13:48.270 --> 00:13:52.340\nSo, here I've got a couple of web servers,\nI've got a app server,\n\n301\n00:13:52.340 --> 00:13:53.550\nand a database server.\n\n302\n00:13:53.550 --> 00:13:55.220\nAnd these are my production systems.\n\n303\n00:13:55.220 --> 00:13:59.150\nAnd anybody out there on the internet\nis coming into my on premises system,\n\n304\n00:13:59.150 --> 00:14:02.810\nhitting my web servers, getting data from\nthe application and database servers.\n\n305\n00:14:02.810 --> 00:14:05.850\nSo, all of that's happening on premises.\n\n306\n00:14:05.850 --> 00:14:08.930\nBut I know that something could\nhappen to destroy my building.\n\n307\n00:14:08.930 --> 00:14:14.000\nSo, I reach out to Amazon and I create\na pilot light disaster recovery center.\n\n308\n00:14:14.000 --> 00:14:19.350\nThat's where I create the bare minimum\nnecessary to support my company.\n\n309\n00:14:19.350 --> 00:14:21.910\nThink about that flame that's\nunder my water heater at home.\n\n310\n00:14:21.910 --> 00:14:25.130\nThe bare minimum flame necessary\nto keep that gas burning so\n\n311\n00:14:25.130 --> 00:14:26.920\nI can turn it up when I'm ready.\n\n312\n00:14:26.920 --> 00:14:27.670\nOkay?\n\n313\n00:14:27.670 --> 00:14:34.330\nAnd so, if you look at the side over here,\nI've only got one web server, not two.\n\n314\n00:14:34.330 --> 00:14:34.930\nRight?\n\n315\n00:14:34.930 --> 00:14:37.930\nAnd it's powered off,\nthe one is that red are powered off.\n\n316\n00:14:37.930 --> 00:14:39.270\nThe one's that are green are powered on.\n\n317\n00:14:39.270 --> 00:14:42.570\nSo, I've got one web server and\nit's turned off.\n\n318\n00:14:42.570 --> 00:14:46.000\nAnd I've got one app server and\nit's turned off also.\n\n319\n00:14:46.000 --> 00:14:47.210\nAnd I've got a database server.\n\n320\n00:14:47.210 --> 00:14:48.440\nNow, it's on.\n\n321\n00:14:48.440 --> 00:14:51.280\nAnd the reason it's on is I'm\ndoing database replication.\n\n322\n00:14:51.280 --> 00:14:54.500\nI'm sending my data up to this database so\nthat it's current.\n\n323\n00:14:54.500 --> 00:14:55.270\nOkay?\n\n324\n00:14:55.270 --> 00:15:01.420\nNow, by doing this, these two servers\nhere, I'm only paying for storage.\n\n325\n00:15:01.420 --> 00:15:03.350\nI'm not paying for CPU, or RAM.\n\n326\n00:15:03.350 --> 00:15:04.900\nI'm not paying for their size.\n\n327\n00:15:04.900 --> 00:15:06.398\nRight?\nBecause it's just storage.\n\n328\n00:15:06.398 --> 00:15:08.190\nHowever big their hard\ndrives are that's it.\n\n329\n00:15:08.190 --> 00:15:09.250\nAnd they sit there.\n\n330\n00:15:09.250 --> 00:15:12.250\nAnd storage is pretty cheap on Amazon,\non AWS.\n\n331\n00:15:12.250 --> 00:15:15.150\nThe database server,\nI need it online, though.\n\n332\n00:15:15.150 --> 00:15:16.950\nI need it on so it can receive changes.\n\n333\n00:15:16.950 --> 00:15:18.500\nBut that's all it's doing\nis receiving changes.\n\n334\n00:15:18.500 --> 00:15:19.950\nSo, it could be a T2 micro.\n\n335\n00:15:19.950 --> 00:15:23.060\nIt could be a really small instance\nthat's not costing me a lot of money.\n\n336\n00:15:23.060 --> 00:15:25.850\nIt's just receiving the data and\nholding onto it.\n\n337\n00:15:25.850 --> 00:15:28.640\nBut otherwise this\nsystem is doing nothing.\n\n338\n00:15:28.640 --> 00:15:32.730\nIt's just sitting there receiving changes\nand waiting for the time that I need it.\n\n339\n00:15:32.730 --> 00:15:34.890\nNow, if I do co-location with somebody,\n\n340\n00:15:34.890 --> 00:15:38.230\nwith some other data center out there,\nI've gotta pay for my physical servers.\n\n341\n00:15:38.230 --> 00:15:40.130\nI've gotta keep them under warranty and\nmaintain them.\n\n342\n00:15:40.130 --> 00:15:42.320\nI've gotta patch them,\nkeep them up to date.\n\n343\n00:15:42.320 --> 00:15:45.670\nI've gotta pay the co-location\nfacility to rent that space.\n\n344\n00:15:45.670 --> 00:15:48.710\nA year might go by and\nI never use the DR site once.\n\n345\n00:15:48.710 --> 00:15:50.880\nI still have to pay for\nit all throughout the year.\n\n346\n00:15:50.880 --> 00:15:53.106\nBut with Amazon,\nI only pay for what I use.\n\n347\n00:15:53.106 --> 00:15:55.353\nSo, we're only paying for\nstorage on these guys.\n\n348\n00:15:55.353 --> 00:15:57.723\nAnd we're paying for the small\ninstance we keep for this database.\n\n349\n00:15:57.723 --> 00:15:59.418\nIt's a very small amount.\n\n350\n00:15:59.418 --> 00:16:02.943\nBut the moment I need more,\nit's available.\n\n351\n00:16:02.943 --> 00:16:04.570\nSo let's say a failure happens.\n\n352\n00:16:04.570 --> 00:16:07.050\nA failure happens and\nmy main centre is gone.\n\n353\n00:16:07.050 --> 00:16:10.880\nWhen that happens I need to\ntake my customer traffic, and\n\n354\n00:16:10.880 --> 00:16:15.740\nI need to redirect it over to Amazon.\n\n355\n00:16:15.740 --> 00:16:16.370\nRight.\n\n356\n00:16:16.370 --> 00:16:18.820\nNow this web server's off so\nI obviously need to power it on.\n\n357\n00:16:18.820 --> 00:16:19.780\nSo I'm gonna go power it on.\n\n358\n00:16:19.780 --> 00:16:23.090\nIf I have an elastic load-balancer and\nan autoscaling group,\n\n359\n00:16:23.090 --> 00:16:25.460\nwhich we'll talk about in\nthe availability episodes,\n\n360\n00:16:25.460 --> 00:16:28.390\nit can then start spinning up\nmore web servers at that time.\n\n361\n00:16:28.390 --> 00:16:30.680\nSo if I need five web servers,\nit can spin them up.\n\n362\n00:16:30.680 --> 00:16:32.110\nI just need one to serve as a template.\n\n363\n00:16:32.110 --> 00:16:33.280\nAnd I don't even really need that.\n\n364\n00:16:33.280 --> 00:16:35.330\nI can have an AMI that's ready,\nthat's already set up, and\n\n365\n00:16:35.330 --> 00:16:36.920\njust start spinning those up as needed.\n\n366\n00:16:36.920 --> 00:16:40.461\nSo it can start spinning those up and\ncreating the web servers them.\n\n367\n00:16:40.461 --> 00:16:42.050\nI need them.\nThe app server.\n\n368\n00:16:42.050 --> 00:16:42.980\nWe powered on.\n\n369\n00:16:42.980 --> 00:16:43.500\nIt's ready.\n\n370\n00:16:43.500 --> 00:16:44.930\nRight.\nThis web server is configured to go\n\n371\n00:16:44.930 --> 00:16:45.870\nthis app server.\n\n372\n00:16:45.870 --> 00:16:48.830\nAnd this app server is configured to go\nto this database which is already on,\n\n373\n00:16:48.830 --> 00:16:50.950\nbut it's a T2 micro.\n\n374\n00:16:50.950 --> 00:16:55.050\nSo I just scaled it up and I make it a C4\nlarge or whatever it is that I need.\n\n375\n00:16:55.050 --> 00:16:58.010\nAnd now, I'm running from this site.\n\n376\n00:16:58.010 --> 00:16:59.320\nAnd now I'm paying for it, right.\n\n377\n00:16:59.320 --> 00:17:02.310\nAnd now I'm paying for\nthe RAM and CPU and all that but,\n\n378\n00:17:02.310 --> 00:17:04.400\nI need to because my main site is down.\n\n379\n00:17:04.400 --> 00:17:07.554\nAnd if I go an entire year and\nnever use it, I only pay for\n\n380\n00:17:07.554 --> 00:17:09.692\nstorage in this one minor instance.\n\n381\n00:17:09.692 --> 00:17:13.358\nBut, the day I need it, I can rip it up,\nit just takes a handful of minutes to\n\n382\n00:17:13.358 --> 00:17:17.770\ngo and then, power on in a few instances\nand change their sizes to bump them up.\n\n383\n00:17:17.770 --> 00:17:20.740\nAnd I've got a fully functional\nDR center ready to go.\n\n384\n00:17:20.740 --> 00:17:22.540\nAnd I didn't have to pay rent,\n\n385\n00:17:22.540 --> 00:17:26.670\nI didn't have to set up UPSs,\nredundant network connections.\n\n386\n00:17:26.670 --> 00:17:31.570\nAll I had to do was redirect my customer\ndata and power a few things on.\n\n387\n00:17:31.570 --> 00:17:33.830\nAnd that redirecting a customer data,\nthat can even be automated,\n\n388\n00:17:33.830 --> 00:17:39.170\nif you're using Route 53 and we do like\nwaited or a fail over DNS centuries,\n\n389\n00:17:39.170 --> 00:17:42.390\nwe can have this fail over automatically\nof course, we don't have to do it,\n\n390\n00:17:42.390 --> 00:17:45.410\nif you haven't seen or watch at Route\n53 episode just see how to do that or\n\n391\n00:17:45.410 --> 00:17:47.900\nit could be a manual entry,\nwe change it and point it over there.\n\n392\n00:17:47.900 --> 00:17:49.790\nBut, it's pretty straight-forward and\n\n393\n00:17:49.790 --> 00:17:53.030\nit gives us a great way to\nmake overdone in environment.\n\n394\n00:17:53.030 --> 00:17:57.970\nPilot lights are a really low-cost way\nto get a disaster recovery center, and\n\n395\n00:17:57.970 --> 00:17:59.170\nit is a wonderful option.\n\n396\n00:17:59.170 --> 00:18:02.400\n>> Don, this is a really impressive\nsystem they have up and running here.\n\n397\n00:18:02.400 --> 00:18:05.930\nThe pilot light system is definitely\nsomething I would wanna take advantage of.\n\n398\n00:18:05.930 --> 00:18:09.980\nIt seems lowest cost probably,\nand quickly,\n\n399\n00:18:09.980 --> 00:18:13.900\nit didn't seem like it would take very\nlong to fail over to that if necessary.\n\n400\n00:18:13.900 --> 00:18:16.328\nThat being said, I know you've got\na couple of more tricks [CROSSTALK].\n\n401\n00:18:16.328 --> 00:18:17.450\n>> Yep.\n\n402\n00:18:17.450 --> 00:18:19.610\nI said a lot of nice things\nabout that one, right?\n\n403\n00:18:19.610 --> 00:18:21.910\nBut there are some problems with it.\n\n404\n00:18:21.910 --> 00:18:23.596\nThe first problem is how\nlong it takes to spin up?\n\n405\n00:18:23.596 --> 00:18:24.824\n[LAUGH] Minutes, right?\n\n406\n00:18:24.824 --> 00:18:26.734\n>> [LAUGH] Yeah, all of those minutes Don.\n\n407\n00:18:26.734 --> 00:18:27.660\n[LAUGH]\n>> If you've ever done\n\n408\n00:18:27.660 --> 00:18:29.552\na physical through failover.\n\n409\n00:18:29.552 --> 00:18:30.359\nThey could dig days sometimes.\n\n410\n00:18:30.359 --> 00:18:31.610\n>> [LAUGH]\n>> So when it's minutes,\n\n411\n00:18:31.610 --> 00:18:35.030\nit's like the joke about people\nwaiting for a microwave to finish, and\n\n412\n00:18:35.030 --> 00:18:37.200\nlike try cooking it in the oven and\nsee how it goes.\n\n413\n00:18:37.200 --> 00:18:39.370\nBut with this stuff it\ndoes take a few minutes,\n\n414\n00:18:39.370 --> 00:18:40.690\nit takes a little bit of manual effort,\nright.\n\n415\n00:18:40.690 --> 00:18:42.620\nSo it's not necessarily automated.\n\n416\n00:18:42.620 --> 00:18:44.850\nThe other thing is,\nremember how the web server and\n\n417\n00:18:44.850 --> 00:18:46.650\nthe app server were powered off?\n\n418\n00:18:46.650 --> 00:18:48.260\nThey're powered off so\n\n419\n00:18:48.260 --> 00:18:51.660\nwhen I power them on,\nwhat if they're not configured properly?\n\n420\n00:18:51.660 --> 00:18:55.200\nI need a way to really test them out and\nmake sure they're running smoothly and\n\n421\n00:18:55.200 --> 00:18:57.760\nmaybe I tested them but\nit was six months ago.\n\n422\n00:18:57.760 --> 00:19:00.130\nAmazon says you should test often, right?\n\n423\n00:19:00.130 --> 00:19:03.110\nBut maybe I haven't and so\nif I haven't, the disaster hits,\n\n424\n00:19:03.110 --> 00:19:04.540\nI go to spin these things up and\nthey don't work.\n\n425\n00:19:04.540 --> 00:19:06.150\nAnd so now I've got a bit of a problem.\n\n426\n00:19:06.150 --> 00:19:08.990\nSo what we might want to do is give up\n\n427\n00:19:08.990 --> 00:19:11.000\nsome of the benefits of\nthe cost-savings of this.\n\n428\n00:19:11.000 --> 00:19:14.350\nCuz this really is cost-efficient and\ngo to the second model.\n\n429\n00:19:14.350 --> 00:19:19.140\nThe second model is what's\ncalled a warm standby.\n\n430\n00:19:19.140 --> 00:19:21.770\nAnd notice with the warm standby,\nI'm not changing my hardware,\n\n431\n00:19:21.770 --> 00:19:23.180\nit's basically the same hardware.\n\n432\n00:19:23.180 --> 00:19:24.970\nBut the big difference between these two,\n\n433\n00:19:24.970 --> 00:19:27.430\nI'm gonna give you a seizure by\nswitching back and forth so fast.\n\n434\n00:19:27.430 --> 00:19:30.920\nBut the big difference between the two\nif you look are these two servers.\n\n435\n00:19:30.920 --> 00:19:32.930\nSee these two servers\nhow they're powered off?\n\n436\n00:19:32.930 --> 00:19:36.000\nIn a warm standby model that powered on,\nokay?\n\n437\n00:19:36.000 --> 00:19:38.200\nAnd what we've got is just one web server.\n\n438\n00:19:38.200 --> 00:19:40.290\nI still don't need five web servers.\n\n439\n00:19:40.290 --> 00:19:43.200\nI can have one behind a load balancer and\nan auto scaling group and\n\n440\n00:19:43.200 --> 00:19:46.520\nwe can spin up more when we actually\nneed them but right now I just need one.\n\n441\n00:19:46.520 --> 00:19:48.690\nAnd maybe it's a T2 micro, right?\n\n442\n00:19:48.690 --> 00:19:51.820\nNot a big instance, just the smallest\ninstance I can possibly do.\n\n443\n00:19:51.820 --> 00:19:56.740\nAnd it's got an app's server, same thing,\nmaybe it's a t2 micro and it's spun up.\n\n444\n00:19:56.740 --> 00:20:00.010\nAnd I've got my database server\nonline receiving replication.\n\n445\n00:20:00.010 --> 00:20:04.390\nBut I can figure the web server\nhere to use this app server and\n\n446\n00:20:04.390 --> 00:20:08.380\nI can figure this app server to use\nour production database server.\n\n447\n00:20:08.380 --> 00:20:09.170\nAll right.\n\n448\n00:20:09.170 --> 00:20:12.940\nThe advantage of doing this, is this app\nserver is connected to the production\n\n449\n00:20:12.940 --> 00:20:15.810\ndatabase server, so I can run tests on it.\n\n450\n00:20:15.810 --> 00:20:17.860\nI can browse to this web server,\nand log in.\n\n451\n00:20:17.860 --> 00:20:19.060\nAnd see if my app works.\n\n452\n00:20:19.060 --> 00:20:20.940\nSee if things are functioning properly.\n\n453\n00:20:20.940 --> 00:20:24.450\nAnd because these servers are online, when\nI make a change to web servers here or\n\n454\n00:20:24.450 --> 00:20:27.520\napp servers here, I push them over to\nthese servers, because their online.\n\n455\n00:20:27.520 --> 00:20:28.150\nRight.\n\n456\n00:20:28.150 --> 00:20:32.670\nA warm standby is a little bit better of\na safety net because it's already on.\n\n457\n00:20:32.670 --> 00:20:33.300\nIt's already up.\n\n458\n00:20:33.300 --> 00:20:34.790\nit may not be scaled right.\n\n459\n00:20:34.790 --> 00:20:37.990\nIt might be, we might need to\nscale up to better instances or\n\n460\n00:20:37.990 --> 00:20:39.890\nscale out to add more instances, but\n\n461\n00:20:39.890 --> 00:20:43.590\nit's got the bare minimum that actually\nserve the app up at any given time.\n\n462\n00:20:43.590 --> 00:20:46.430\nSo any day when I'm bored I\ncan browse this web server\n\n463\n00:20:46.430 --> 00:20:48.250\nlog in to make sure\neverything's working smooth.\n\n464\n00:20:48.250 --> 00:20:52.210\nMakes it way easier to test,\nit's not that much more of a cost.\n\n465\n00:20:52.210 --> 00:20:55.060\nThis two instances are just\nrunning 24 hours a day now.\n\n466\n00:20:55.060 --> 00:20:58.990\nBut it does give us this safety net\nwhere we have a little coverage.\n\n467\n00:20:58.990 --> 00:21:02.410\nAnd if a failure occurs we just\nhave one more step, right?\n\n468\n00:21:02.410 --> 00:21:05.910\nIf a failure occurs,\nwe take our customer traffic and\n\n469\n00:21:05.910 --> 00:21:08.830\nwe redirect that over\nto these web servers.\n\n470\n00:21:08.830 --> 00:21:13.870\nWell, obviously let the load bouncer auto\nspin up more instances behind it and\n\n471\n00:21:13.870 --> 00:21:16.590\nthen I have to take this app server and\n\n472\n00:21:16.590 --> 00:21:19.540\ntell it,\nwell that didn't work the way I wanted it.\n\n473\n00:21:19.540 --> 00:21:20.960\nI have to take this app server and\n\n474\n00:21:20.960 --> 00:21:25.500\ntell it to connect to this\ndata base server instead.\n\n475\n00:21:25.500 --> 00:21:28.630\nOkay, so you can actually set\nthat up programmatically.\n\n476\n00:21:28.630 --> 00:21:33.080\nIf you're using like MySQL, you can have\na primary and a backup server and so\n\n477\n00:21:33.080 --> 00:21:35.940\nwhen the primary becomes unreachable it\njust automatically flips to this one.\n\n478\n00:21:35.940 --> 00:21:37.470\nSo that might not even be a manual thing.\n\n479\n00:21:37.470 --> 00:21:40.400\nThat might just happen on it's own that\nit jumps over to this database server and\n\n480\n00:21:40.400 --> 00:21:41.830\nit's in business, right.\n\n481\n00:21:41.830 --> 00:21:45.669\nSo now, I've got a what's\nkind of like a pilot light?\n\n482\n00:21:45.669 --> 00:21:47.320\nExcept it's running all the time.\n\n483\n00:21:47.320 --> 00:21:48.130\nMakes it easier to test.\n\n484\n00:21:48.130 --> 00:21:52.090\nMakes it a little more trustworthy cuz\nwe know it's functioning and ready.\n\n485\n00:21:52.090 --> 00:21:57.010\nAnd when a true disaster happens, we know\nthat environment's already technically up.\n\n486\n00:21:57.010 --> 00:21:59.170\nWe just have to redirect that traffic and\nyou're in business.\n\n487\n00:21:59.170 --> 00:22:01.450\nAnd so that does make life a lot easier.\n\n488\n00:22:01.450 --> 00:22:05.380\n>> So we get all the wonderful features we\nhave grown to love about pilot light but\n\n489\n00:22:05.380 --> 00:22:09.710\nwe also get a little less\ntime to fill over to it.\n\n490\n00:22:09.710 --> 00:22:12.340\nAnd a little more assurance\ncoz we can test it.\n\n491\n00:22:12.340 --> 00:22:13.650\nIt's live.\nIt's always on.\n\n492\n00:22:13.650 --> 00:22:15.570\nWe can make sure it's\nworking at any given time.\n\n493\n00:22:15.570 --> 00:22:16.820\n>> Absolutely.\n\n494\n00:22:16.820 --> 00:22:18.700\nNow, let's go one step beyond that.\n\n495\n00:22:18.700 --> 00:22:19.320\nRight?\n\n496\n00:22:19.320 --> 00:22:21.570\nWhat if money is no object.\n\n497\n00:22:21.570 --> 00:22:23.300\nIt's not so much even about money.\n\n498\n00:22:23.300 --> 00:22:24.422\nWhat if we want to be sure?\n\n499\n00:22:24.422 --> 00:22:27.820\nWe wanna know that data center is\nready to handle our production load.\n\n500\n00:22:27.820 --> 00:22:29.910\nAnd we want things to just be automatic.\n\n501\n00:22:29.910 --> 00:22:32.140\nI don't want to have to mess\naround with failing things over.\n\n502\n00:22:32.140 --> 00:22:36.597\nIf the main data center goes down, I just\nwant things to be running up in AWS and\n\n503\n00:22:36.597 --> 00:22:37.846\nnot even skip a beat.\n\n504\n00:22:37.846 --> 00:22:38.450\nRight?\n\n505\n00:22:38.450 --> 00:22:42.050\nI'm trying to get the best\navailability I can.\n\n506\n00:22:42.050 --> 00:22:45.770\nEven an entire building is destroyed and\nwe're still up and running.\n\n507\n00:22:45.770 --> 00:22:46.590\nOkay.\n\n508\n00:22:46.590 --> 00:22:50.770\nWell then what we do is move to the third\nscenario, which is a multi site scenario.\n\n509\n00:22:50.770 --> 00:22:51.360\nRight.\n\n510\n00:22:51.360 --> 00:22:53.670\nThis ones a lot different on\nwhat we saw on the other.\n\n511\n00:22:53.670 --> 00:22:55.360\nLike I shouldnt say a lot that different.\n\n512\n00:22:55.360 --> 00:22:58.678\nBut what your gonna see here are few\ninteresting things going on here.\n\n513\n00:22:58.678 --> 00:23:03.360\nIn a multi-site scenario,\nour AWS deployment, for\n\n514\n00:23:03.360 --> 00:23:06.180\nthe most part,\nmirrors our production deployment.\n\n515\n00:23:06.180 --> 00:23:08.760\nSo, if I have two web servers here,\nI've got two web servers here.\n\n516\n00:23:08.760 --> 00:23:11.520\nAnd you might fudge that a little\nbit with auto scaling, but\n\n517\n00:23:11.520 --> 00:23:14.780\nthe odds the idea is that we\ncan figure things the same.\n\n518\n00:23:14.780 --> 00:23:17.480\nWe've got our web servers that are\npointing down to an app server over here.\n\n519\n00:23:17.480 --> 00:23:21.060\nOur web servers up in AWS are pointing\nto an app server up there.\n\n520\n00:23:21.060 --> 00:23:21.820\nRight?\n\n521\n00:23:21.820 --> 00:23:26.430\nAnd then the app servers on both sides\nare pointing to the production database.\n\n522\n00:23:26.430 --> 00:23:28.770\nUsually you only have\none writeable database,\n\n523\n00:23:28.770 --> 00:23:30.460\nthey both have to point to the same one.\n\n524\n00:23:30.460 --> 00:23:31.830\nBut it's replicating, and\n\n525\n00:23:31.830 --> 00:23:36.030\nI just mentioned a minute ago how we can\nhave automated failover to that other,\n\n526\n00:23:36.030 --> 00:23:39.880\nwhat might be a read-only instance, that\ncan automate a failover to keep it live.\n\n527\n00:23:41.370 --> 00:23:45.850\nThen we take our customer traffic and we\nsend our customer traffic to both sides.\n\n528\n00:23:45.850 --> 00:23:47.100\nBoth sides work, right?\n\n529\n00:23:47.100 --> 00:23:50.880\nEither one works, so\nwe can send customer traffic to both.\n\n530\n00:23:50.880 --> 00:23:52.412\nWe might not wanna go 50-50.\n\n531\n00:23:52.412 --> 00:23:57.032\nWe might use a weighted DNS record to\nsay send 90% of my traffic to production\n\n532\n00:23:57.032 --> 00:24:00.116\non my on-premises and\nsend 10% of my traffic to.\n\n533\n00:24:00.116 --> 00:24:01.858\nThe cloud, right?\n\n534\n00:24:01.858 --> 00:24:05.907\nBy doing this, you're running in more than\none site at the same time, and you know\n\n535\n00:24:05.907 --> 00:24:10.073\nit's working, because you've got customers\ngoing through the site in AWS, so you\n\n536\n00:24:10.073 --> 00:24:14.440\ndon't even really have to test it anymore,\nbecause you know it's working already.\n\n537\n00:24:14.440 --> 00:24:15.450\n>> They're testing it for you.\n\n538\n00:24:15.450 --> 00:24:18.060\n>> They really are, and the only thing\nthat's not really being tested is\n\n539\n00:24:18.060 --> 00:24:22.140\nflipping that app server over to\nthe database server up in AWS, right?\n\n540\n00:24:22.140 --> 00:24:25.930\nWhich, you could test that at any given\ntime by doing a quick fail over and\n\n541\n00:24:25.930 --> 00:24:27.340\nsee, right?\n\n542\n00:24:27.340 --> 00:24:30.660\nSo in this model, customer traffic's\nalready flowing through both.\n\n543\n00:24:30.660 --> 00:24:32.770\nIf it's a weighted DNS\nrecord in route 53 and\n\n544\n00:24:32.770 --> 00:24:37.000\nwe do a health check, the instant it\nsees the health of the main site fail,\n\n545\n00:24:37.000 --> 00:24:38.890\nit just starts sending all\nthe traffic over here.\n\n546\n00:24:38.890 --> 00:24:40.080\nAutomated failover.\n\n547\n00:24:40.080 --> 00:24:43.240\nAnd because this is already\nscaled to the right size,\n\n548\n00:24:43.240 --> 00:24:45.420\nthere isn't even any scaling\nwe have to worry about.\n\n549\n00:24:45.420 --> 00:24:50.050\nAnd here with Apps Server, if it's set\nto automatically flip over which MySQL,\n\n550\n00:24:50.050 --> 00:24:51.860\nMicrosoft SQL, Oracle,\nthey can all do that.\n\n551\n00:24:51.860 --> 00:24:53.980\nIt automatically flips over.\n\n552\n00:24:53.980 --> 00:24:58.380\nYou can have a total building disaster and\nstay on line and\n\n553\n00:24:58.380 --> 00:25:01.750\nnot even have to do anything about it,\nthat's the really cool part.\n\n554\n00:25:01.750 --> 00:25:04.600\nThe story I give is during\nthe September 11th attacks,\n\n555\n00:25:04.600 --> 00:25:07.670\nthere's the New York Stock Exchange,\nthe NYSE.\n\n556\n00:25:07.670 --> 00:25:11.670\nThey had a data center in the Twin Towers,\nthey're primary data center.\n\n557\n00:25:11.670 --> 00:25:13.780\nAnd after the attacks,\nthe building was destroyed,\n\n558\n00:25:13.780 --> 00:25:14.900\ntheir data center was destroyed.\n\n559\n00:25:14.900 --> 00:25:16.940\nThey lost not just equipment, but staff.\n\n560\n00:25:16.940 --> 00:25:21.270\nThe people that run this, and that's\nthe real loss, because it's hard to bring\n\n561\n00:25:21.270 --> 00:25:25.070\na data center back on, when you've lost\nthe experts who know how to run it, right?\n\n562\n00:25:25.070 --> 00:25:26.870\nAnd so they closed for three days.\n\n563\n00:25:26.870 --> 00:25:28.220\nThey were just closed.\n\n564\n00:25:28.220 --> 00:25:30.560\nThe Stock Exchange was down for\nthree days.\n\n565\n00:25:30.560 --> 00:25:33.980\nBut what a lot of people don't know is,\nthey did that voluntarily.\n\n566\n00:25:33.980 --> 00:25:36.700\nThat they had a second data\ncenter over in New Jersey.\n\n567\n00:25:36.700 --> 00:25:40.960\nAnd when the main data center was\ndestroyed, they had, it was something\n\n568\n00:25:40.960 --> 00:25:44.890\nlike, I can't remember, it was like\nthree or four seconds of downtime.\n\n569\n00:25:44.890 --> 00:25:49.010\nAnd the other center was up and\nrunning and carrying out stock exchange.\n\n570\n00:25:49.010 --> 00:25:50.160\nIt was doing stock trades.\n\n571\n00:25:50.160 --> 00:25:54.439\nAnd it was later that day they decided,\nout of respect for everybody, to close for\n\n572\n00:25:54.439 --> 00:25:55.130\nthree days.\n\n573\n00:25:55.130 --> 00:25:56.860\nSo they voluntarily closed.\n\n574\n00:25:56.860 --> 00:25:58.460\nIt wasn't because their data\ncenters weren't working.\n\n575\n00:25:58.460 --> 00:25:59.580\nThey were working.\n\n576\n00:25:59.580 --> 00:26:01.880\nIt was within seconds it was working.\n\n577\n00:26:01.880 --> 00:26:03.090\nBut they chose to close it.\n\n578\n00:26:03.090 --> 00:26:04.590\nAnd that's what you can do with this.\n\n579\n00:26:04.590 --> 00:26:09.680\nIs your main data center can be destroyed\nabsolutely, your staff could be destroyed.\n\n580\n00:26:09.680 --> 00:26:11.340\nHopefully not, but it could.\n\n581\n00:26:11.340 --> 00:26:14.460\nAnd this other site would just\nautomatically be running.\n\n582\n00:26:14.460 --> 00:26:15.340\nThat's the real power.\n\n583\n00:26:15.340 --> 00:26:18.540\nAnd so, that scenario is a great one.\n\n584\n00:26:18.540 --> 00:26:22.130\nAnd when you're set up like that,\nyou still have your on-premises equipment.\n\n585\n00:26:22.130 --> 00:26:25.480\nSo your executives, your staff that\ndoesn't wanna give up those local servers,\n\n586\n00:26:25.480 --> 00:26:26.240\nthat wants that control.\n\n587\n00:26:26.240 --> 00:26:27.550\nThey've got it.\n\n588\n00:26:27.550 --> 00:26:28.520\nBut then you're already in the cloud.\n\n589\n00:26:28.520 --> 00:26:30.590\nIt's also a great way to migrate\nbecause then if you say,\n\n590\n00:26:30.590 --> 00:26:32.410\nall right,\nwe're done with this on-premises stuff.\n\n591\n00:26:32.410 --> 00:26:37.190\nLet's just move up to AWS, you just go and\nchange the waiting on your DNS record so\n\n592\n00:26:37.190 --> 00:26:40.320\nthat 90% of the traffic goes up to\nthe cloud and 10% stays with you.\n\n593\n00:26:40.320 --> 00:26:43.390\nAnd maybe you become the disaster recovery\nsite just in case something happens to\n\n594\n00:26:43.390 --> 00:26:44.650\nAmazon, right?\n\n595\n00:26:44.650 --> 00:26:49.580\nBut more ideally, you would just set up\nanother site in another region in AWS and\n\n596\n00:26:49.580 --> 00:26:51.110\nnow it's all in the cloud.\n\n597\n00:26:51.110 --> 00:26:53.310\nAnd you don't have physical\nequipment to worry about anymore.\n\n598\n00:26:53.310 --> 00:26:55.800\nAnd the cost savings alone is significant.\n\n599\n00:26:55.800 --> 00:26:59.150\nBut Amazon's data centers are so\nstate-of-the-art, so\n\n600\n00:26:59.150 --> 00:27:02.280\ncutting edge that it would be really\ndifficult for you to replicate that on\n\n601\n00:27:02.280 --> 00:27:05.644\nyour own within any reasonable budget\nunless you worked for the US government.\n\n602\n00:27:05.644 --> 00:27:07.550\n[LAUGH] Always gotta\nthrow that one in there.\n\n603\n00:27:07.550 --> 00:27:08.750\n>> They have a couple of bucks.\n\n604\n00:27:08.750 --> 00:27:10.130\nDon, you sit here and\n\n605\n00:27:10.130 --> 00:27:13.749\ntouted the greatness of using cloud\nservice as disaster recovery.\n\n606\n00:27:14.770 --> 00:27:20.210\nIs there any room for traditional\nDR setting anymore to be honest?\n\n607\n00:27:20.210 --> 00:27:22.110\n>> Personally for me, not usually.\n\n608\n00:27:22.110 --> 00:27:25.400\nFor me if I gonna build some kind of\nDR I'm always looking at cloud services,\n\n609\n00:27:25.400 --> 00:27:26.350\nthat's usually I will go.\n\n610\n00:27:26.350 --> 00:27:27.468\nBut there are times we can't.\n\n611\n00:27:27.468 --> 00:27:31.580\nSo maybe you're a hospital and\nyou're doing medical records and\n\n612\n00:27:31.580 --> 00:27:33.520\nyour worried about\nthe safety of those records.\n\n613\n00:27:33.520 --> 00:27:35.860\nWell, Amazon has encrypted data.\n\n614\n00:27:35.860 --> 00:27:39.080\nYou can encrypt an S3 bucket,\nyou can encrypt your Glacier Storage,\n\n615\n00:27:39.080 --> 00:27:41.720\nyou can encrypt your\nvirtual tape libraries.\n\n616\n00:27:41.720 --> 00:27:45.170\nThey just rolled out the other day,\nyou've been able to encrypt EBS,\n\n617\n00:27:45.170 --> 00:27:46.350\nthe elastic block storage.\n\n618\n00:27:46.350 --> 00:27:48.450\nYou've been able to do that for\na long time.\n\n619\n00:27:48.450 --> 00:27:51.500\nBut they just rolled out where you\ncan now encrypt your operating system\n\n620\n00:27:51.500 --> 00:27:53.270\npartition for EBS back instance.\n\n621\n00:27:53.270 --> 00:27:55.700\nYou can have entire instances\nthat are encrypted.\n\n622\n00:27:55.700 --> 00:27:59.120\nThe data is very safe and\nAmazon provides great partitioning.\n\n623\n00:27:59.120 --> 00:28:03.120\nThey are certified for\nnumerous regulatory compliance laws.\n\n624\n00:28:03.120 --> 00:28:04.420\nSo they've got you covered.\n\n625\n00:28:05.800 --> 00:28:08.950\nBut there's still that trust, right?\n\n626\n00:28:08.950 --> 00:28:11.220\nName an employee at Amazon.\n\n627\n00:28:11.220 --> 00:28:12.105\n>> I couldn't tell you one.\n\n628\n00:28:12.105 --> 00:28:12.607\n>> Jeff Bezos.\n>> [LAUGH]\n\n629\n00:28:12.607 --> 00:28:13.109\n>> That's it.\n\n630\n00:28:13.109 --> 00:28:14.380\n[CROSSTALK]\n\n631\n00:28:14.380 --> 00:28:14.880\n>> [LAUGH] [CROSSTALK]\n\n632\n00:28:14.880 --> 00:28:15.832\n>> I've got the big guy.\n\n633\n00:28:15.832 --> 00:28:16.528\n>> You did one, I got zero.\n\n634\n00:28:16.528 --> 00:28:18.623\n>> I can not name a single other employee\n\n635\n00:28:18.623 --> 00:28:22.712\nat Amazon and so we trust these people\nthat we don't even know, right?\n\n636\n00:28:22.712 --> 00:28:25.094\nAnd so if you don't have that trust,\n\n637\n00:28:25.094 --> 00:28:28.310\nthen that's the time where the Cloud\nis not an option, but there's no\n\n638\n00:28:28.310 --> 00:28:31.720\ntechnical reason that you couldn't use it.\nThere's no financial reason that you\n\n639\n00:28:31.720 --> 00:28:33.870\ncouldn't use it.\nThere's no technical desire reason,\n\n640\n00:28:33.870 --> 00:28:37.500\nit's easy to learn, it's easy to deploy,\nit's my first option, it's what I do.\n\n641\n00:28:37.500 --> 00:28:40.190\n>> The opposite would be true,\nthere's all the technical reasons and\n\n642\n00:28:40.190 --> 00:28:43.720\nfinancial reasons in the world to use\nthis model versus the traditional.\n\n643\n00:28:43.720 --> 00:28:45.990\nOh yeah, I guess if you say it that way.\n\n644\n00:28:45.990 --> 00:28:49.094\n>> [CROSSTALK] But yeah, it would\nreally just come down to that trust.\n\n645\n00:28:49.094 --> 00:28:51.706\nThere are some people who just\ndon't have that trust, and\n\n646\n00:28:51.706 --> 00:28:53.800\nI'm not saying that's not founded, right?\n\n647\n00:28:53.800 --> 00:28:55.650\nIt just means that you really care for\nyour customer and\n\n648\n00:28:55.650 --> 00:28:56.610\nwant to take care of them.\n\n649\n00:28:56.610 --> 00:28:57.840\nAnd that's the right thing, right?\n\n650\n00:28:57.840 --> 00:29:00.660\nAnd so, in that situation\nit may not be an option but\n\n651\n00:29:00.660 --> 00:29:03.140\nthat's what it would come down to, right?\n\n652\n00:29:03.140 --> 00:29:08.360\nNot technical, not financial, those\nare all things that are pro for using AWS.\n\n653\n00:29:08.360 --> 00:29:08.920\n>> Well, awesome, and\n\n654\n00:29:08.920 --> 00:29:12.380\nthis definitely sounds like AWS\nis going to be the solution for\n\n655\n00:29:12.380 --> 00:29:17.870\nmany an IT group out there so thank you so\nmuch Don for showing us our way around it,\n\n656\n00:29:17.870 --> 00:29:21.210\nkind of giving us a tour of what they\noffer as far as disaster recovery.\n\n657\n00:29:21.210 --> 00:29:22.520\nAnything else you want\nto add before we go?\n\n658\n00:29:22.520 --> 00:29:25.760\n>> Yeah, you know, the exam,\nthey don't hit on this that much but\n\n659\n00:29:25.760 --> 00:29:27.300\nI do want to mention it.\n\n660\n00:29:27.300 --> 00:29:32.160\nFailing over to AWS, that's kind of one\nstep, but at some point you're going to\n\n661\n00:29:32.160 --> 00:29:36.210\nrebuild your facility and you may or may\nnot choose to rebuild your data center.\n\n662\n00:29:36.210 --> 00:29:39.110\nYou might say, you know what, we failed\nour AWS, things are running great.\n\n663\n00:29:39.110 --> 00:29:41.020\nLet's just leave it in AWS.\n\n664\n00:29:41.020 --> 00:29:44.270\nSo at that point your next\nstep would be to build\n\n665\n00:29:44.270 --> 00:29:47.310\na new DR site in AWS in\na different region, right?\n\n666\n00:29:47.310 --> 00:29:50.920\nSo your current DR site in AWS\nnow becomes your production.\n\n667\n00:29:50.920 --> 00:29:52.660\nAnd then you pick another region.\n\n668\n00:29:52.660 --> 00:29:53.770\nYou start building up servers.\n\n669\n00:29:53.770 --> 00:29:57.470\nAnd you basically set up the same\ntypologies that I just showed you\n\n670\n00:29:57.470 --> 00:29:59.040\nin the other region, right?\n\n671\n00:29:59.040 --> 00:30:00.680\nSo you kinda go through that process.\n\n672\n00:30:00.680 --> 00:30:02.220\nAnd now you're entirely in the cloud.\n\n673\n00:30:02.220 --> 00:30:06.860\nBut if you had on-premises equipment for\na reason and you want to get back to that,\n\n674\n00:30:06.860 --> 00:30:09.830\nwell, now what you have to do is\nbasically set up the opposite.\n\n675\n00:30:09.830 --> 00:30:12.180\nYou've gotta buy a new building.\n\n676\n00:30:12.180 --> 00:30:13.920\nBuild a new data center.\n\n677\n00:30:13.920 --> 00:30:16.120\nOrder your servers, get them put in place.\n\n678\n00:30:16.120 --> 00:30:17.270\nInstall their operating systems.\n\n679\n00:30:17.270 --> 00:30:18.240\nGet them configured.\n\n680\n00:30:18.240 --> 00:30:22.290\nGet a database set up that's\nreplicating changes from AWS back down.\n\n681\n00:30:22.290 --> 00:30:24.630\nAnd then once it's all up,\nyou've gotta redirect traffic.\n\n682\n00:30:24.630 --> 00:30:27.110\nAnd Amazon recommends two\ndifferent methods for that.\n\n683\n00:30:27.110 --> 00:30:29.780\nOne method is what I just described,\nkind of setting up the replication and\n\n684\n00:30:29.780 --> 00:30:30.840\nmoving people over.\n\n685\n00:30:30.840 --> 00:30:34.580\nThe other thing is you could just\nfreeze changes in the cloud so\n\n686\n00:30:34.580 --> 00:30:37.030\nthat people can get to your site but\nthey can't make changes and\n\n687\n00:30:37.030 --> 00:30:40.810\nthen repoint them over locally\nafter you've synced things over.\n\n688\n00:30:40.810 --> 00:30:42.700\nThat's fine unless you're\na transaction business.\n\n689\n00:30:42.700 --> 00:30:44.980\nYou know, if you're doing sales you\ncan't just freeze the site and say hey,\n\n690\n00:30:44.980 --> 00:30:46.840\nwe're not gonna take sales for a few days.\n\n691\n00:30:46.840 --> 00:30:49.370\nI guess you could but it's really\ngonna tick off the executives so\n\n692\n00:30:49.370 --> 00:30:54.070\nwe want to avoid that if we can so that's\nanother part kind of of failing back.\n\n693\n00:30:54.070 --> 00:30:55.540\nBut there's a lot of challenges for that.\n\n694\n00:30:55.540 --> 00:30:57.870\nIt takes a long time to get\nthose servers back up and\n\n695\n00:30:57.870 --> 00:31:02.360\nin the meantime you're running\nfrom inside one region in AWS.\n\n696\n00:31:02.360 --> 00:31:05.030\nSo even if you're going to rebuild\nyour physical data center,\n\n697\n00:31:05.030 --> 00:31:09.390\nit's still a good idea to build a\ntemporary DR site in another Amazon region\n\n698\n00:31:09.390 --> 00:31:12.030\njust in the interim until you can\nget your servers in and stuff.\n\n699\n00:31:12.030 --> 00:31:16.180\nAnd unlike a physical disaster recovery\nsite, when we're done with this temporary\n\n700\n00:31:16.180 --> 00:31:17.790\none, you just delete it and\nyou stop paying for it.\n\n701\n00:31:17.790 --> 00:31:20.260\nVersus a physical site where you'd still\nhave the building and the lease and\n\n702\n00:31:20.260 --> 00:31:23.080\nall that other stuff to mess with,\nhere it's far more simple.\n\n703\n00:31:23.080 --> 00:31:25.280\n>> Well,\nit definitely sounds a lot more simple.\n\n704\n00:31:25.280 --> 00:31:28.440\nAnd that would be the way that I\nwould want to go if it were up to me.\n\n705\n00:31:28.440 --> 00:31:31.690\nDon, thank you so much for showing us\nhow to work our way through this thing.\n\n706\n00:31:31.690 --> 00:31:33.170\nAnd thank you guys so much for watching.\n\n707\n00:31:33.170 --> 00:31:34.880\nWe're going ahead and close down the show.\n\n708\n00:31:34.880 --> 00:31:38.080\nSigning off for ITProTV,\nI've been your host Daniel Lowry.\n\n709\n00:31:38.080 --> 00:31:39.707\n>> And I'm Don Pozette\n>> And we'll see you next time.\n\n710\n00:31:39.707 --> 00:31:45.750\n[MUSIC]\n\n",
          "vimeoId": "150834877"
        },
        {
          "description": "In this episode, Don and Daniel describe how to employ backups for AWS Relational Database Services(RDS). Here they cover some details about how RDS is backed up as well as some pre-requisite work that needs to be done to prepare RDS for being backed up. Then they show you how to setup automated backups and/or take an on-demand backup. Finally they explain the procedure for restoring your data in case of a failure.",
          "length": "1908",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/amazon-acsa/amazon-acsa-9-3-backing_up_rds-121615-1.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/amazon-acsa/amazon-acsa-9-3-backing_up_rds-121615-1-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/amazon-acsa/amazon-acsa-9-3-backing_up_rds-121615-1-sm.jpg",
          "title": "Backing up RDS",
          "transcript": "WEBVTT\n\n1\n00:00:00.271 --> 00:00:10.271\n[MUSIC]\n\n2\n00:00:11.852 --> 00:00:16.350\nAll right, greetings everyone, and welcome\nto another exciting episode of IT Pro TV.\n\n3\n00:00:16.350 --> 00:00:20.160\nI'm your host Daniel Lowrie, and in\ntoday's episode we're continuing on with\n\n4\n00:00:20.160 --> 00:00:24.050\nour AWS certified Syl soft admin,\nyes that is a mouthful to say.\n\n5\n00:00:24.050 --> 00:00:27.055\nAnd joining us to lend his\nexpertise on said topic,\n\n6\n00:00:27.055 --> 00:00:28.915\nis none other than my\ngood friend Don Pezet.\n\n7\n00:00:28.915 --> 00:00:29.925\nDon welcome back to the show.\n\n8\n00:00:29.925 --> 00:00:31.475\nHow are you doing today sir?\n\n9\n00:00:31.475 --> 00:00:32.135\n>> I'm doing great Daniel.\n\n10\n00:00:32.135 --> 00:00:33.455\nThanks for having me back on the show and\n\n11\n00:00:33.455 --> 00:00:36.645\nexcited to jump right back into\nthe world of backup and recovery.\n\n12\n00:00:36.645 --> 00:00:40.745\nIn this episode we're going to be\nfocusing on backing up and restoring RDS.\n\n13\n00:00:40.745 --> 00:00:42.865\nThe Amazon Relational Database Service.\n\n14\n00:00:42.865 --> 00:00:44.635\nDatabases are super important.\n\n15\n00:00:44.635 --> 00:00:46.245\nWe put a lot of our company data in there.\n\n16\n00:00:46.245 --> 00:00:47.555\nWe have entire websites and\n\n17\n00:00:47.555 --> 00:00:50.940\nother things that depend on\nthe data that's in those databases.\n\n18\n00:00:50.940 --> 00:00:53.820\nSo a backup and\nrecovery procedure is super important,\n\n19\n00:00:53.820 --> 00:00:57.620\nand I know I've worked for\ncompanies where I was a database admin and\n\n20\n00:00:57.620 --> 00:01:02.530\nit's what I spent just a ton of\ntime on because that data was so\n\n21\n00:01:02.530 --> 00:01:05.380\ncritical, and with Amazon,\nthey take care a lot of it for us.\n\n22\n00:01:05.380 --> 00:01:08.260\nBut we still need to be aware of how it\nworks and how we can interact with it to\n\n23\n00:01:08.260 --> 00:01:11.590\nsee to make sure the backups are\nhappening, make sure that we can recover.\n\n24\n00:01:11.590 --> 00:01:13.760\nAnd that's what we're gonna\ntake a look at in this episode.\n\n25\n00:01:13.760 --> 00:01:15.190\n>> Yeah.\nThis should be a really interesting show,\n\n26\n00:01:15.190 --> 00:01:17.740\ncuz if you're a DBA like I am.\n\n27\n00:01:17.740 --> 00:01:22.565\nYou know that those databases are going to\nbe hosed in a matter of at least minutes.\n\n28\n00:01:22.565 --> 00:01:26.420\n[LAUGH] We need to have some steps in\nplace to make sure that we can put\n\n29\n00:01:26.420 --> 00:01:27.900\nthem back the way they're supposed to be.\n\n30\n00:01:27.900 --> 00:01:31.860\n>> When you started saying that, you're\nlike \"when you're a DBA like I am\" and\n\n31\n00:01:31.860 --> 00:01:33.190\nI'm thinking, \"a bad one?\" [LAUGH]\n>> [LAUGH] You know me.\n\n32\n00:01:34.750 --> 00:01:38.770\n>> Yeah, you know one of the the best\nparts about Amazon's RDS service.\n\n33\n00:01:38.770 --> 00:01:41.770\nIt is a little more expensive than\nif you spun up an instance and\n\n34\n00:01:41.770 --> 00:01:43.810\nput the data base on there yourself,\nright?\n\n35\n00:01:43.810 --> 00:01:47.290\nBut when you do that, if you just spin\nup an Amazon Linux instance right,\n\n36\n00:01:47.290 --> 00:01:50.480\nin a chuck MySQL on there,\nyou have to manage it yourself.\n\n37\n00:01:50.480 --> 00:01:53.270\nYou have to manage all the different ins\nand outs, the optimizations happen on it,\n\n38\n00:01:53.270 --> 00:01:54.300\nthe backups, the recovery.\n\n39\n00:01:54.300 --> 00:01:55.990\nIt's all kind of up to you.\n\n40\n00:01:55.990 --> 00:01:58.580\nThat when you do it through RDS,\nthey charge a little bit more, and for\n\n41\n00:01:58.580 --> 00:02:02.150\nthat extra money, they completely\nmanage the underlying layers of it, so\n\n42\n00:02:02.150 --> 00:02:03.570\nwe don't have to worry\nabout updating the OS.\n\n43\n00:02:03.570 --> 00:02:06.800\nWe don't even have to really worry\nabout updating the database software.\n\n44\n00:02:06.800 --> 00:02:07.628\nThey take care of that too.\n\n45\n00:02:07.628 --> 00:02:11.184\nThey even do the backups and\nset it up for easy management.\n\n46\n00:02:11.184 --> 00:02:14.820\nSo, let's see how that works and\nkind of an idea on it.\n\n47\n00:02:14.820 --> 00:02:16.069\nWhen we set this up,\n\n48\n00:02:16.069 --> 00:02:20.750\nthe main intention is gonna be to set\nup to back up our database, right?\n\n49\n00:02:20.750 --> 00:02:24.000\nAnd then if we ever have a failure, and\nby a failure, I don't normally mean\n\n50\n00:02:24.000 --> 00:02:26.950\nan infrastructure failure,\ncuz Amazon's gonna resolve that for us.\n\n51\n00:02:26.950 --> 00:02:29.820\nI'm talking about\nan accidental user deletion.\n\n52\n00:02:29.820 --> 00:02:32.410\nSomebody hacks into your database and\nwipes out several tables, or\n\n53\n00:02:32.410 --> 00:02:35.300\nyou just do a bad insert statement and\noverwrite something by accident,\n\n54\n00:02:35.300 --> 00:02:37.650\nand you need to retrieve that data, right?\n\n55\n00:02:37.650 --> 00:02:41.360\nThat's the type of recovery that we\nnormally have to deal with with RDS.\n\n56\n00:02:41.360 --> 00:02:43.930\nCuz any infrastructure\nstuff is handled by Amazon.\n\n57\n00:02:43.930 --> 00:02:45.640\nSo, that's how we're\nnormally going to use this.\n\n58\n00:02:45.640 --> 00:02:46.930\nBut you can use this in other ways.\n\n59\n00:02:46.930 --> 00:02:50.710\nIn fact if you watched one of our\nearlier episodes we talked about\n\n60\n00:02:51.890 --> 00:02:55.890\nthe different storage types for\nS3 or for RDS where\n\n61\n00:02:55.890 --> 00:03:00.210\nwe could do generally provisioned SSD,\nor generally purposed SSD.\n\n62\n00:03:00.210 --> 00:03:03.870\nAnd we could do provisioned IOPS, SSD.\n\n63\n00:03:03.870 --> 00:03:06.360\nThere's not a great way\nto flip between the two.\n\n64\n00:03:06.360 --> 00:03:09.000\nBut you can do a back up of a server and\nthen you can restore it.\n\n65\n00:03:09.000 --> 00:03:11.140\nAnd restore it as the different type, and\n\n66\n00:03:11.140 --> 00:03:14.740\nnow you just upgraded to provisioned\nIOPS or downgraded to general purpose.\n\n67\n00:03:14.740 --> 00:03:17.460\nYou can also do that with\nyour database instance, too.\n\n68\n00:03:17.460 --> 00:03:23.190\nYou can say, for example maybe I deployed\na Microsoft SQL Standard Edition server.\n\n69\n00:03:23.190 --> 00:03:25.970\nAnd I decide I want to go to\nMicrosoft SQL Enterprise.\n\n70\n00:03:25.970 --> 00:03:30.000\nWell I can back the server up, and when I\nrestore it I can flip it to enterprise.\n\n71\n00:03:30.000 --> 00:03:32.160\nAnd now it's going to come up and\nit will be an Enterprise Server.\n\n72\n00:03:32.160 --> 00:03:34.920\nSo the backup and\nrecovery process is not just for\n\n73\n00:03:34.920 --> 00:03:36.700\nrecovering from accidental deletions.\n\n74\n00:03:36.700 --> 00:03:38.220\nIt can actually be used for upgrading or\n\n75\n00:03:38.220 --> 00:03:42.530\ndowngrading your server in some scenarios,\nand that's a pretty cool thing to do.\n\n76\n00:03:42.530 --> 00:03:44.790\nSo there's just a lot of\npower to be found in there.\n\n77\n00:03:44.790 --> 00:03:45.530\n>> Awesome.\nNow, Don,\n\n78\n00:03:45.530 --> 00:03:47.180\nis there anything that I need to do?\n\n79\n00:03:47.180 --> 00:03:49.790\nOr can I just start using\nthese backup systems.\n\n80\n00:03:49.790 --> 00:03:52.850\nOr there's some back end stuff\nthat I gotta kinda delve into.\n\n81\n00:03:52.850 --> 00:03:54.890\n>> So if you're doing a new\ndatabase deployment, right?\n\n82\n00:03:54.890 --> 00:03:57.550\nYou're just rolling out\na brand new database today?\n\n83\n00:03:57.550 --> 00:03:58.980\nIt's all in the setup wizard, right?\n\n84\n00:03:58.980 --> 00:04:00.970\nSo as you're going through the wizard,\nyou'll hit the backup spot.\n\n85\n00:04:00.970 --> 00:04:02.860\nYou can set your backups and that's that.\n\n86\n00:04:02.860 --> 00:04:04.870\nSo it's really easy for something new.\n\n87\n00:04:04.870 --> 00:04:08.030\nBut if you've got an existing database and\nyou're wanting to go in there and\n\n88\n00:04:08.030 --> 00:04:11.490\neither modify its backups or\nstart to configure backups on it.\n\n89\n00:04:11.490 --> 00:04:13.580\nWhen you do that there's a few\nthings we need to be aware of.\n\n90\n00:04:13.580 --> 00:04:19.260\nOne of the big things is the most\npopular RDS database engine on\n\n91\n00:04:19.260 --> 00:04:25.280\nAmazon is MySQL or\nMariaDB which is basically the same thing.\n\n92\n00:04:25.280 --> 00:04:29.780\nWhen you do that, MySQL actually has\ntwo database engines in it, right?\n\n93\n00:04:29.780 --> 00:04:32.400\nIt's got MyISAM,\nwhich is the older one and\n\n94\n00:04:32.400 --> 00:04:35.000\nit's got InnoDB, which is the newer one.\n\n95\n00:04:35.000 --> 00:04:37.235\nThere's a big difference between the two.\n\n96\n00:04:37.235 --> 00:04:43.270\nMyISAM writes data faster, because you're\nwriting directly into the data files.\n\n97\n00:04:43.270 --> 00:04:44.250\nWith InnoDB,\n\n98\n00:04:44.250 --> 00:04:47.590\nit writes a little slower because you\ndon't write to the database files,\n\n99\n00:04:47.590 --> 00:04:51.400\nyou write to transaction logs first, and\nthen you write to the database files.\n\n100\n00:04:51.400 --> 00:04:52.660\nSo it's safer.\n\n101\n00:04:52.660 --> 00:04:54.020\nIf a bad write occurs.\n\n102\n00:04:54.020 --> 00:04:56.990\nThe bad write happens in the transactional\nand not in your actual database.\n\n103\n00:04:56.990 --> 00:04:59.202\nSo you sacrifice a little bit\nof performance, for more safety.\n\n104\n00:04:59.202 --> 00:05:03.103\nAnd the majority of people\nout there want that safety.\n\n105\n00:05:03.103 --> 00:05:05.831\nWell, it's the safety of\nthose transaction logs,\n\n106\n00:05:05.831 --> 00:05:09.040\nthat's what Amazon's using\nto create these backups.\n\n107\n00:05:09.040 --> 00:05:12.140\nAnd so, InnoDB is fully supported.\n\n108\n00:05:12.140 --> 00:05:15.898\nBut MyISAM, because the rights\nare going directly into the database,\n\n109\n00:05:15.898 --> 00:05:17.535\nAmazon can't work with that.\n\n110\n00:05:17.535 --> 00:05:20.180\nThey can't work do the point\ntime restores and stuff.\n\n111\n00:05:20.180 --> 00:05:23.100\nSo if you've chosen MyISAM\nas your data engine,\n\n112\n00:05:23.100 --> 00:05:24.430\nyou're kind of on your own for backups.\n\n113\n00:05:24.430 --> 00:05:25.780\nYou're going to have to\nback it up yourself.\n\n114\n00:05:25.780 --> 00:05:30.590\nAnd if you really go MyISAM, you\nprobably don't want to use RDS for that.\n\n115\n00:05:30.590 --> 00:05:33.810\nYou want to spin up your own instance and\nprovisional manage the database yourself.\n\n116\n00:05:33.810 --> 00:05:35.840\nRight, so\nit's kind of one of those scenarios.\n\n117\n00:05:35.840 --> 00:05:38.450\nAnd then you can use instant snapshots,\nor whatever,\n\n118\n00:05:38.450 --> 00:05:40.300\nto just back up the whole server.\n\n119\n00:05:40.300 --> 00:05:42.590\nOr use backups within\nthe database software itself,\n\n120\n00:05:42.590 --> 00:05:45.490\nthat's a perfectly\nacceptable solution right.\n\n121\n00:05:45.490 --> 00:05:47.710\nBut as long as we chose NODB,\nwhich is the default,\n\n122\n00:05:47.710 --> 00:05:50.600\nas long as you've chosen that one,\nthen you're fine and you're good to go.\n\n123\n00:05:50.600 --> 00:05:51.690\nBut definitely be aware that for\n\n124\n00:05:51.690 --> 00:05:56.040\nthe exam, my ICM is not supported\nby the RDS backup system.\n\n125\n00:05:57.210 --> 00:06:00.210\nAll right but after that,\nwe're kind of good to go.\n\n126\n00:06:00.210 --> 00:06:02.020\nI can't think of anything else.\n\n127\n00:06:02.020 --> 00:06:05.010\nThere's a few little things\nwe might want to be aware of.\n\n128\n00:06:05.010 --> 00:06:09.890\nI'm not going to say it's a prerequisite,\nas much as it is just a good suggestion.\n\n129\n00:06:09.890 --> 00:06:14.000\nWhich is when you deploy your database,\nyou're always given a choice of whether\n\n130\n00:06:14.000 --> 00:06:17.836\nyou want it to be a single instance or\nwhether you want it to be multi AZ.\n\n131\n00:06:17.836 --> 00:06:21.120\nRight, Multi-AZ means\nmulti-availability zone.\n\n132\n00:06:21.120 --> 00:06:24.580\nIt's gonna deploy a primary or\nactive database, and\n\n133\n00:06:24.580 --> 00:06:28.680\nit's gonna deploy a secondary replica,\nright, like a read replica.\n\n134\n00:06:28.680 --> 00:06:33.010\nAnd that way, you can distribute your\nready traffic across these replicas, and\n\n135\n00:06:33.010 --> 00:06:35.050\nhave access to your information faster.\n\n136\n00:06:35.050 --> 00:06:38.850\nAnd if your primary fails,\nyou can flip right over to that replica.\n\n137\n00:06:38.850 --> 00:06:41.550\nRight?\nSo, it's an online backup basically,\n\n138\n00:06:41.550 --> 00:06:43.290\nwith this replica just sitting there.\n\n139\n00:06:43.290 --> 00:06:44.360\nYou don't have to do that.\n\n140\n00:06:44.360 --> 00:06:47.820\nYou can choose just do a single\ninstance and that's it.\n\n141\n00:06:47.820 --> 00:06:51.600\nWhen you do backup,\nif it's a single instance backup,\n\n142\n00:06:51.600 --> 00:06:56.360\nthe backup occurs against that single\ninstance, which is a lot of read.\n\n143\n00:06:56.360 --> 00:06:57.110\nIO, right?\n\n144\n00:06:57.110 --> 00:07:00.620\nSo you know, you have Provisioned IOPS,\nand you're eating up some of those IOPS\n\n145\n00:07:00.620 --> 00:07:04.380\nfor the read operation for that back up,\nand it can affect performance.\n\n146\n00:07:04.380 --> 00:07:09.740\nIf you have a multi AZ deployment, the\nback up happens against your read replica.\n\n147\n00:07:09.740 --> 00:07:11.870\nIt doesn't happen against the primary,\nand that way,\n\n148\n00:07:11.870 --> 00:07:15.910\nyou could be doing a back up against\nthe read replica and, it's happening at\n\n149\n00:07:15.910 --> 00:07:18.310\nthe same time as your users in the system,\nthey don't even notice.\n\n150\n00:07:18.310 --> 00:07:19.680\nThere's no performance hit.\n\n151\n00:07:19.680 --> 00:07:21.300\nSo if performance is a concern,\n\n152\n00:07:21.300 --> 00:07:24.440\nyou want to make sure you do\na multi AZ deployment, all right.\n\n153\n00:07:24.440 --> 00:07:26.875\nIf performance is not a concern,\nyou can do a single instance and\n\n154\n00:07:26.875 --> 00:07:29.052\nyou'll just take a performance\nhit during the backups.\n\n155\n00:07:29.052 --> 00:07:32.364\nAnd I'll show you later,\nwe can determine when the backups occur,\n\n156\n00:07:32.364 --> 00:07:35.732\nyou can set a window and see,\nyou might have some off-peak time, and\n\n157\n00:07:35.732 --> 00:07:38.720\nthat's just when you run your backups and\nit's no big deal.\n\n158\n00:07:38.720 --> 00:07:43.670\nBut if you're a 24 7 shop, you're always\nconducting business through your database,\n\n159\n00:07:43.670 --> 00:07:46.920\nyou need fast response times always,\nyou wanna make sure you go multi AZ.\n\n160\n00:07:46.920 --> 00:07:49.003\nAnd the best part is it's automatic.\n\n161\n00:07:49.003 --> 00:07:53.308\nIf Amazon sees that you're multi AZ they\nautomatically run the backup off of that\n\n162\n00:07:53.308 --> 00:07:53.888\nreplica.\n\n163\n00:07:53.888 --> 00:07:57.328\nYou don't even have to configure\nanything aside from turning on multi AZ.\n\n164\n00:07:57.328 --> 00:07:59.680\nAnd you can always add that\nafter the fact too, but\n\n165\n00:07:59.680 --> 00:08:02.428\njust be aware that Typically I\ndo multi-AZ deployments.\n\n166\n00:08:02.428 --> 00:08:05.340\nIt's been a while since I've\ndone just a single instance.\n\n167\n00:08:05.340 --> 00:08:09.660\nBut if you are doing single instance,\njust be aware of that performance hit.\n\n168\n00:08:09.660 --> 00:08:12.420\n>> All right, well Don,\nobviously when it comes to backups,\n\n169\n00:08:12.420 --> 00:08:15.480\nwe have to actually set these up and\nrun them.\n\n170\n00:08:15.480 --> 00:08:17.700\nNow typically we have two\ntypes that we can do.\n\n171\n00:08:17.700 --> 00:08:19.550\nYou can do a manual or\nyou can do an automatic.\n\n172\n00:08:19.550 --> 00:08:21.620\nMost people like myself, I love automatic.\n\n173\n00:08:21.620 --> 00:08:23.910\nIs that something we have\nthe ability to do here or\n\n174\n00:08:23.910 --> 00:08:25.660\ndo we always have to do a manual?\n\n175\n00:08:25.660 --> 00:08:29.690\n>> Absolutely, automatic is what's set\nup by default and for most people you're\n\n176\n00:08:29.690 --> 00:08:32.370\nonly going to do automatic, you probably\nwon't even mess with the manual, but\n\n177\n00:08:32.370 --> 00:08:34.320\nyou can actually do both if you chose.\n\n178\n00:08:34.320 --> 00:08:35.920\nLet's take a look at the automatic stuff.\n\n179\n00:08:35.920 --> 00:08:39.700\nSo I'm going to jump into my console here\nand I'm just going to go down to RDS, and\n\n180\n00:08:39.700 --> 00:08:40.660\nI'll whip up a database.\n\n181\n00:08:40.660 --> 00:08:44.360\nNow for the most part it isn't going to\nmatter what kind of instance I flip up.\n\n182\n00:08:44.360 --> 00:08:47.430\nSo I can flip up Aurora, MariaDB, MySQL.\n\n183\n00:08:47.430 --> 00:08:49.080\nThere are some differences.\n\n184\n00:08:49.080 --> 00:08:52.990\nLike when we do MySQL, it's going to spin\nthis up and I can do a read replica.\n\n185\n00:08:52.990 --> 00:08:55.430\nRight, so\nI can have two copies of my data.\n\n186\n00:08:55.430 --> 00:08:59.300\nBut if I do Amazon Aurora which\nis based on MySQL, right, so\n\n187\n00:08:59.300 --> 00:09:04.250\nit's fully compatible with MySQL, it\nactually can do three copies of the data.\n\n188\n00:09:04.250 --> 00:09:08.740\nYou can have a primary and two Read\nReplicas, and if you do Multi-AZ with it,\n\n189\n00:09:08.740 --> 00:09:14.190\nyou can actually get several\nof these instances up,\n\n190\n00:09:14.190 --> 00:09:16.490\nand distribute your load, and\nreally get some extra performance.\n\n191\n00:09:16.490 --> 00:09:20.140\nAnd so they tell you that it scales\nto 5,000 concurrent sessions,\n\n192\n00:09:20.140 --> 00:09:21.840\n15 low latency read replicas.\n\n193\n00:09:21.840 --> 00:09:23.770\nYou can get a massive database.\n\n194\n00:09:23.770 --> 00:09:26.200\nBut at the end of the day,\nthe backup system is the same.\n\n195\n00:09:26.200 --> 00:09:32.115\nSo if I choose Aurora, MariaDB,\nMySQL, they all back up the same way.\n\n196\n00:09:32.115 --> 00:09:35.505\nPostgreSQL it actually uses\nits own backup engine, but\n\n197\n00:09:35.505 --> 00:09:37.630\nit's still managed the same\nway in the GUI, so\n\n198\n00:09:37.630 --> 00:09:40.770\nwe don't notice a different in\nthe in the website for that one.\n\n199\n00:09:40.770 --> 00:09:45.040\nOracle and SQL are a little bit different\nbut again in the web GUI they hide that so\n\n200\n00:09:45.040 --> 00:09:48.010\nit all looks the same to us even though\nit is a different backup engine.\n\n201\n00:09:48.010 --> 00:09:50.530\nBut these first three,\nwhich are the most common right,\n\n202\n00:09:50.530 --> 00:09:52.809\nMySQL is by far the one\nthat is used the most.\n\n203\n00:09:53.860 --> 00:09:56.680\nIt's really the same engine\nbetween all three of these.\n\n204\n00:09:56.680 --> 00:10:00.530\nAnd when I go to spin up one of those\ndatabases, the first thing it asks me is,\n\n205\n00:10:00.530 --> 00:10:05.690\n\"Do I want it to be multi-AZ?\" All right,\nif I do multi-AZ then I'm gonna get\n\n206\n00:10:05.690 --> 00:10:08.620\noptimized backup performance because the\nbackup will happen against the replica.\n\n207\n00:10:09.620 --> 00:10:13.660\nIf I say no, now the backup is gonna\nhappen against my single instance.\n\n208\n00:10:13.660 --> 00:10:15.430\nRight?\nWhich means I'll take a performance hit so\n\n209\n00:10:15.430 --> 00:10:16.990\nI need to make that decision here.\n\n210\n00:10:16.990 --> 00:10:18.660\nI can change my mind later, right?\n\n211\n00:10:18.660 --> 00:10:22.450\nYou can actually change your mind here\nin the wizard too if I choose no on this\n\n212\n00:10:22.450 --> 00:10:27.590\nscreen, on the very next step, it's gonna\nask me, is this a Multi-AZ Deployment?\n\n213\n00:10:27.590 --> 00:10:30.360\nAnd Select One is grayed out cuz I\nhaven't chosen an Instance size yet.\n\n214\n00:10:30.360 --> 00:10:33.360\nBut if choose an Instance like a T2 micro.\n\n215\n00:10:33.360 --> 00:10:36.140\nSee how I can change my mind and\ngo Multi-AZ again?\n\n216\n00:10:36.140 --> 00:10:37.520\nSo they give you a few chances but\n\n217\n00:10:37.520 --> 00:10:40.930\nI can even do it after the deployment you\ncan always have that re-replicate later.\n\n218\n00:10:40.930 --> 00:10:44.510\nSo I'm gonna deploy this one and\nI can pick my storage type,\n\n219\n00:10:44.510 --> 00:10:47.230\nand if I really don't care about\nperformance if I'm just trying to get this\n\n220\n00:10:47.230 --> 00:10:52.280\ndatabase up I might choose to go magnetic\non this one where I can't guarantee my\n\n221\n00:10:52.280 --> 00:10:55.910\ndisk performance, but if I'm going, let's\nsay we're doing a bigger database right so\n\n222\n00:10:55.910 --> 00:10:58.010\nI might do an M4 large,\nwhich is not really bigger.\n\n223\n00:10:59.520 --> 00:11:01.931\nWe can do Multi-AZ.\n\n224\n00:11:01.931 --> 00:11:04.930\nWe can go Provisioned IOPS.\n\n225\n00:11:04.930 --> 00:11:07.260\nThere we go, and 100 gigs,\nthat'll be enough for me.\n\n226\n00:11:07.260 --> 00:11:09.360\nAnd so\nI'm gonna deploy this database server,\n\n227\n00:11:09.360 --> 00:11:12.520\nso now it's Multi-AZ, and\nI can give it a database name.\n\n228\n00:11:12.520 --> 00:11:19.570\nI'll call this itprotv-demodb3,\nand I'll set up an account.\n\n229\n00:11:19.570 --> 00:11:22.230\nSo this is all normal,\nrun of the mill stuff.\n\n230\n00:11:22.230 --> 00:11:24.520\nIt hasn't mentioned backups yet,\n\n231\n00:11:24.520 --> 00:11:28.050\neven though the multi-AZ side\ndoes get kind of involved in it.\n\n232\n00:11:28.050 --> 00:11:31.310\nAnd then when I move to the next step,\nnow we're gonna start seeing network\n\n233\n00:11:31.310 --> 00:11:33.360\nquestions, whether it's\ngonna be publicly available.\n\n234\n00:11:33.360 --> 00:11:35.020\nI'm gonna set that to no.\n\n235\n00:11:35.020 --> 00:11:36.830\nWhat I want the database to be called.\n\n236\n00:11:36.830 --> 00:11:42.520\nI'll call this SampleDB2, And\nthen way down here, here's my backups.\n\n237\n00:11:42.520 --> 00:11:45.370\nAnd these are the automatic backups.\n\n238\n00:11:45.370 --> 00:11:48.510\nSo the default settings,\nif I just run with the defaults,\n\n239\n00:11:48.510 --> 00:11:52.150\nit's gonna back up seven days'\nworth of data for this database.\n\n240\n00:11:52.150 --> 00:11:54.410\nSo it's gonna have a retention\nperiod of seven days.\n\n241\n00:11:54.410 --> 00:11:56.450\nAnd notice that it's got\nmy little warning up here.\n\n242\n00:11:56.450 --> 00:11:58.160\nIf you're using MyISAM,\n\n243\n00:11:58.160 --> 00:12:00.790\nyou know, you're going to have to\ndo things a little bit differently.\n\n244\n00:12:00.790 --> 00:12:04.120\nBut as long as you're InnoDB which\nis the default, you'll be fine.\n\n245\n00:12:04.120 --> 00:12:06.800\nThen I pick what my retention\nperiod is going to be.\n\n246\n00:12:06.800 --> 00:12:10.180\nNow these backups are stored in S3.\n\n247\n00:12:10.180 --> 00:12:14.080\nYou don't see them in S3, that's a hidden\nbucket, but they are stored in S3, and so\n\n248\n00:12:14.080 --> 00:12:15.320\nyou build storage for them.\n\n249\n00:12:15.320 --> 00:12:18.080\nThe more backups you store,\nthe more expensive it's going to be.\n\n250\n00:12:18.080 --> 00:12:22.600\nSo seven days is the default, but you can\ncrank that up and you can actually go,\n\n251\n00:12:22.600 --> 00:12:25.290\nlet's see what the maximum is,\n35 days right.\n\n252\n00:12:25.290 --> 00:12:27.730\nSo I can go up to 35 days and\n\n253\n00:12:27.730 --> 00:12:31.270\nhave just a month's worth of\nbackups to be able to roll back to.\n\n254\n00:12:31.270 --> 00:12:34.080\nAll right,\nnow if I need that many backups,\n\n255\n00:12:34.080 --> 00:12:37.440\nI probably need to evaluate\na better backup solution.\n\n256\n00:12:37.440 --> 00:12:41.370\nBut for most people, the seven day default\nis pretty good so we can stick with that.\n\n257\n00:12:41.370 --> 00:12:42.476\nAnd then the backup window.\n\n258\n00:12:42.476 --> 00:12:47.070\nIf I'm multi-AZ, I probably don't really\ncare about the backup window, I'll leave\n\n259\n00:12:47.070 --> 00:12:50.390\nit no preference, cuz the backup's\ngonna happen against that read replica.\n\n260\n00:12:50.390 --> 00:12:54.040\nIf I'm not using that read replica, then\nit's really just being used for backups or\n\n261\n00:12:54.040 --> 00:12:57.240\nfail over purposes and so\nI leave it at no preference.\n\n262\n00:12:57.240 --> 00:13:02.490\nBut if I am using the read replica,\nor if I'm single instance,\n\n263\n00:13:02.490 --> 00:13:07.100\nthen I wanna schedule this backup\nto occur outside of my peak times.\n\n264\n00:13:07.100 --> 00:13:10.510\nAnd so I can come in here, and\nI can choose to select a window, and\n\n265\n00:13:10.510 --> 00:13:12.510\nI can specify a window of time.\n\n266\n00:13:12.510 --> 00:13:16.800\nAnd the window of time, the most\ngranular you can get is 30 minutes.\n\n267\n00:13:16.800 --> 00:13:21.000\nAnd you can pick when this backup\nis going to occur down to that\n\n268\n00:13:21.000 --> 00:13:21.800\ninterval of 30 minutes.\n\n269\n00:13:21.800 --> 00:13:25.510\nSo when you pick a window it'll occur\nsometime during that 30 minute window.\n\n270\n00:13:25.510 --> 00:13:31.500\nSo we can say like maybe,\nlet's see we are GMT minus five here so\n\n271\n00:13:31.500 --> 00:13:39.750\nif I wanted to backup at like 2:00 AM\nthat would be 11:00 no 9 PM UTC, right?\n\n272\n00:13:39.750 --> 00:13:45.130\nSo I'll come in here and pick 9 PM,\nI'm screwing this up, aren't I?\n\n273\n00:13:45.130 --> 00:13:47.750\nWhatever, 21, we'll go with that.\n\n274\n00:13:47.750 --> 00:13:49.270\n2100 UTC, whatever time that is.\n\n275\n00:13:49.270 --> 00:13:50.800\nAnd then I can set that duration.\n\n276\n00:13:50.800 --> 00:13:54.590\nAnd I want it to occur at 2 AM, but it can\ngo as late as 3 AM, I'm fine with that, so\n\n277\n00:13:54.590 --> 00:13:57.010\nI might bump it up to an hour\nto give a little more leniency.\n\n278\n00:13:57.010 --> 00:14:00.790\nThat's cool because if Amazon sees the\nserver is kind of busy, it will try and\n\n279\n00:14:00.790 --> 00:14:03.800\nweigh it out and try to find a nice\nlittle window where it's good.\n\n280\n00:14:03.800 --> 00:14:08.810\nBut I can set that window of time, if it's\nsingle instance, that's really important.\n\n281\n00:14:08.810 --> 00:14:11.990\nYou can do the same thing with\ndatabase updates and all that.\n\n282\n00:14:11.990 --> 00:14:13.080\nBut I'm not going to mess with it.\n\n283\n00:14:13.080 --> 00:14:16.040\nThe backup is what I was concerned with.\n\n284\n00:14:16.040 --> 00:14:21.520\nAs soon as that's done, now it's gonna\nbe backing up this database for me.\n\n285\n00:14:21.520 --> 00:14:23.170\nSo, I just created this new database.\n\n286\n00:14:23.170 --> 00:14:24.980\nHere it is spinning up,\nright in the background.\n\n287\n00:14:24.980 --> 00:14:26.060\nIt's creating an instance.\n\n288\n00:14:26.060 --> 00:14:27.470\nIt's provisioning storage.\n\n289\n00:14:27.470 --> 00:14:28.400\nIt's creating the database.\n\n290\n00:14:28.400 --> 00:14:30.220\nI don't have to worry about any of that.\n\n291\n00:14:30.220 --> 00:14:33.120\nAnd now it's gonna maintain\nbackups of it for seven days.\n\n292\n00:14:33.120 --> 00:14:36.460\nAnd so, if I have a failure,\nI'll be able restore to that.\n\n293\n00:14:36.460 --> 00:14:39.160\nAnd I did it here with a new database.\n\n294\n00:14:39.160 --> 00:14:43.360\nIf I already had a database,\nlike this guy up here, I already have.\n\n295\n00:14:43.360 --> 00:14:46.150\nWell, you can go up to\nInstance Actions and Modify.\n\n296\n00:14:47.550 --> 00:14:52.390\nAnd in the Modify screen, you'll\nactually see where you can go in and\n\n297\n00:14:52.390 --> 00:14:55.380\nyou can start to tweak the settings for\nthat backup.\n\n298\n00:14:55.380 --> 00:14:59.206\nAnd so you'll see here where I can change\nwhether I'm a Multi-AZ Deployment,\n\n299\n00:14:59.206 --> 00:15:00.740\nand you'll see I'm set to yes.\n\n300\n00:15:00.740 --> 00:15:03.860\nIf it was no, I could flip it to yes,\nand I'd become Multi-AZ, so\n\n301\n00:15:03.860 --> 00:15:05.790\nwe can change that after the fact.\n\n302\n00:15:05.790 --> 00:15:10.610\nI've got my database identifiers, and\nright here is my backup and I can come\n\n303\n00:15:10.610 --> 00:15:14.687\nthrough and I can tweak that and I have\nno idea why I set this to 757 [LAUGH].\n\n304\n00:15:14.687 --> 00:15:16.797\nThat's an odd time.\n\n305\n00:15:16.797 --> 00:15:21.050\nSo [LAUGH] anyhow, who knows what\ngoes on in my head sometimes.\n\n306\n00:15:21.050 --> 00:15:21.918\nSo we'll just set that to.\n\n307\n00:15:21.918 --> 00:15:22.838\n>> That was sundown, wasn't it?\n\n308\n00:15:22.838 --> 00:15:26.560\n>> I don't know [LAUGH].\n>> So anyhow, so you can set that time and\n\n309\n00:15:26.560 --> 00:15:27.400\nadjust it.\n\n310\n00:15:27.400 --> 00:15:31.550\nNotice that I don't have the no\npreference option anymore and\n\n311\n00:15:31.550 --> 00:15:34.830\nthat's probably how I got to 757\nbecause I set it to no preference and\n\n312\n00:15:34.830 --> 00:15:38.140\nAmazon picked 757 I can't imagine\nI picked that myself, but\n\n313\n00:15:38.140 --> 00:15:40.820\nif I had chosen one it would\nhave that time right here.\n\n314\n00:15:40.820 --> 00:15:44.420\n>> So that's my backup window that's now\nset, and I can increase and decrease that.\n\n315\n00:15:44.420 --> 00:15:48.320\nSo you can always modify this stuff\nafter the fact, and it will be fine.\n\n316\n00:15:48.320 --> 00:15:50.688\nOkay, so I'll go ahead and\nmodify that, and now,\n\n317\n00:15:50.688 --> 00:15:52.626\nthat's gonna be my new settings on that.\n\n318\n00:15:52.626 --> 00:15:53.849\n>> Don, is there a way for us,\n\n319\n00:15:53.849 --> 00:15:56.884\nand I can't think of any reason why\nwe would wanna do this but just for\n\n320\n00:15:56.884 --> 00:16:00.148\nthe sake of completeness, is there\na way to turn off automatic backups?\n\n321\n00:16:00.148 --> 00:16:02.648\nWould we ever wanna do that?\n\n322\n00:16:02.648 --> 00:16:06.024\nYeah if you set the retention period\nto zero, right, that's gonna turn off\n\n323\n00:16:06.024 --> 00:16:09.190\nthe backups, and because now its gonna\njust not gonna retain backups so\n\n324\n00:16:09.190 --> 00:16:12.460\nit won't take them in the first place,\nso that's how you disable them.\n\n325\n00:16:12.460 --> 00:16:16.050\nThere's not really a reason to do that\nbecause you do get a certain amount of\n\n326\n00:16:16.050 --> 00:16:20.640\nbackups included in the price for RDS, so\nyou should at least take one day's worth.\n\n327\n00:16:20.640 --> 00:16:21.270\nRight?\n\n328\n00:16:21.270 --> 00:16:24.170\nBut, yeah, you could disable it that way.\n\n329\n00:16:24.170 --> 00:16:26.440\n>> Okay.\nWell, obviously, automation nets.\n\n330\n00:16:26.440 --> 00:16:29.330\nIt's our friend.\nWe love to automate things, cuz we.\n\n331\n00:16:29.330 --> 00:16:33.120\nLet's face it, IT Pro TV is not\ngonna watch itself we need you guys\n\n332\n00:16:33.120 --> 00:16:37.200\nfree to view our videos\nas much as possible.\n\n333\n00:16:37.200 --> 00:16:41.680\nBut there are gonna be those times when I\nneed to not wait for the automated process\n\n334\n00:16:41.680 --> 00:16:46.220\nto happen, I wanna go ahead and take\na manual back up right now because I'm\n\n335\n00:16:46.220 --> 00:16:49.810\ngetting ready to do something, probably\nhose the DB because that's what I do.\n\n336\n00:16:49.810 --> 00:16:53.760\nSo, this is something that for my skill\nset, I'm gonna need to know how to do it,\n\n337\n00:16:53.760 --> 00:16:56.300\nor can we even do it Don,\ncan we take that manual back up?\n\n338\n00:16:56.300 --> 00:16:57.528\n>> Absolutely, yeah.\n\n339\n00:16:57.528 --> 00:17:00.360\nI'll give you a great example,\nbulk imports.\n\n340\n00:17:00.360 --> 00:17:05.120\nAnytime I do a bulk import I always take\na backup right before the bulk import, and\n\n341\n00:17:05.120 --> 00:17:08.550\nthe reason I do that, is I know that\nI could screw up the bulk import or\n\n342\n00:17:08.550 --> 00:17:13.570\nhalf way through it fails, and\nI got 5,000 rows were added but\n\n343\n00:17:13.570 --> 00:17:16.760\nanother 7,000 weren't added, and I don't\nwanna figure out where its stopped and\n\n344\n00:17:16.760 --> 00:17:21.050\nbroke, so I just wanna restore the backup,\nand then I can we could do transaction\n\n345\n00:17:21.050 --> 00:17:23.790\ntracking there's all sorts of\ndatabase side stuff we could do.\n\n346\n00:17:23.790 --> 00:17:28.880\nBut from an admin side if we don't\nknow the SQL way of actually\n\n347\n00:17:28.880 --> 00:17:32.030\nrolling back those transactions, then\nwe can just do it on the database side.\n\n348\n00:17:32.030 --> 00:17:35.900\nWe can take a manual backup,\ndo the bulk import.\n\n349\n00:17:35.900 --> 00:17:38.030\nIf it fails,\nwe just restore the manual backup.\n\n350\n00:17:38.030 --> 00:17:39.446\nAnd now you're back in business, right.\n\n351\n00:17:39.446 --> 00:17:40.880\nSo that easy.\n\n352\n00:17:40.880 --> 00:17:44.820\nTo take a manual backup, its just like\nEC2 instances, you take a snapshot.\n\n353\n00:17:44.820 --> 00:17:47.850\nSo I can come in here to my console,\nI can pick a database,\n\n354\n00:17:47.850 --> 00:17:50.160\nI'll pick my database that\nI made the other day,\n\n355\n00:17:50.160 --> 00:17:54.740\nand if you go up to instance actions,\nyou've got take a snapshot right, and\n\n356\n00:17:54.740 --> 00:17:58.070\ntake a snapshot that'll let you grab a\nbackup right now, you just give it a name,\n\n357\n00:17:58.070 --> 00:18:03.530\nand so I might call this like prior to\nbulk import or something like that, right.\n\n358\n00:18:03.530 --> 00:18:06.400\nYou can give it a fancy pants name so\nyou can remember it.\n\n359\n00:18:06.400 --> 00:18:07.530\nAnd I'll take that snapshot.\n\n360\n00:18:08.530 --> 00:18:12.280\nSo it's gonna build it, and it took me to\nthe snapshot screen automatically, right.\n\n361\n00:18:12.280 --> 00:18:15.071\nI was on the instance screen,\nthey've taken me over to snapshots.\n\n362\n00:18:15.071 --> 00:18:18.930\nAnd now I can see that\nsnapshot being made.\n\n363\n00:18:18.930 --> 00:18:22.196\nAs I look down the list here,\nI notice there's these other snapshots.\n\n364\n00:18:22.196 --> 00:18:23.750\nI took this one, initial-deployment.\n\n365\n00:18:23.750 --> 00:18:27.840\nThat's another I do, is when I deploy a\ndatabase, I usually take a snapshot of it.\n\n366\n00:18:27.840 --> 00:18:32.080\nBut I see that was on December 14th; I've\ngot another backup on December 15th.\n\n367\n00:18:32.080 --> 00:18:36.040\nI've got another backup on December 16th,\nand I don't have one yet\n\n368\n00:18:36.040 --> 00:18:40.790\ncuz I probably hadn't hit that\n7:57 UTC whatever time that is.\n\n369\n00:18:40.790 --> 00:18:43.690\nBut you can see where it's\nbeen backing up once a day.\n\n370\n00:18:43.690 --> 00:18:48.230\nAnd so I've got these backups right here,\nand see how the times are pretty close?\n\n371\n00:18:48.230 --> 00:18:52.140\nOne's at 3:10 AM, one's at 2:58 AM,\nthey're really close.\n\n372\n00:18:52.140 --> 00:18:53.860\nIt's cuz that 30 minute window.\n\n373\n00:18:53.860 --> 00:18:59.071\nIt was, I guess a 757 UTC must\nbe 2:57 AM our time, right?\n\n374\n00:18:59.071 --> 00:19:01.110\nSo the first one, or\nthis one happened at 2:58.\n\n375\n00:19:01.110 --> 00:19:03.600\nThis is right at\nthe beginning of that window.\n\n376\n00:19:03.600 --> 00:19:06.291\nThis one happened at 3:09,\nwhich was a little bit later,\n\n377\n00:19:06.291 --> 00:19:08.279\nabout halfway through that window, right?\n\n378\n00:19:08.279 --> 00:19:10.160\nSo you'll see those times kinda slide.\n\n379\n00:19:10.160 --> 00:19:12.330\nThey'll slide more now that\nI've adjusted the time on it.\n\n380\n00:19:12.330 --> 00:19:14.790\nBut those backups are occurring.\n\n381\n00:19:14.790 --> 00:19:15.970\nThose are the automatic ones.\n\n382\n00:19:15.970 --> 00:19:18.112\nAnd the automatic ones are easy to spot,\ncuz they have the big long names.\n\n383\n00:19:18.112 --> 00:19:19.321\nRight?\n\n384\n00:19:19.321 --> 00:19:24.790\nRds:itprotv-db01, so I know what\ndatabase it is and then the time stamp.\n\n385\n00:19:24.790 --> 00:19:26.640\nSo it's all just kind of\ntucked right in there.\n\n386\n00:19:26.640 --> 00:19:28.730\nBut if I look up here at the ones I took,\n\n387\n00:19:28.730 --> 00:19:32.560\nthey just have the name that I gave them\nand that's the one that I took right now.\n\n388\n00:19:32.560 --> 00:19:34.950\nAnd it doesn't have a creation time,\nbecause it's still creating, but\n\n389\n00:19:34.950 --> 00:19:36.190\nas soon as it does that it'll populate.\n\n390\n00:19:36.190 --> 00:19:39.340\nIf you look at my other manual snapshot,\nthis one, it's got the creation time\n\n391\n00:19:39.340 --> 00:19:42.670\nright there, and it's completed and\nit's ready to be restored from.\n\n392\n00:19:44.200 --> 00:19:49.290\nNow as these get older,\nthese automatic ones as they get older,\n\n393\n00:19:49.290 --> 00:19:51.310\nit's gonna delete the old ones\nto make room for the new ones.\n\n394\n00:19:51.310 --> 00:19:53.910\nWe said seven days retention,\nI think is what I set it at.\n\n395\n00:19:53.910 --> 00:19:56.200\nSo, as these start to get a little\nolder they'll get trimmed off, and\n\n396\n00:19:56.200 --> 00:19:57.620\nthat's all done automatically.\n\n397\n00:19:57.620 --> 00:20:01.322\nThe manual ones I take though,\nthey won't get trimmed off, right.\n\n398\n00:20:01.322 --> 00:20:04.029\nThose will stay there forever\nuntil I go and delete them.\n\n399\n00:20:04.029 --> 00:20:06.734\nSo if I'm done with that snapshot and\nI don't need it anymore,\n\n400\n00:20:06.734 --> 00:20:09.910\nI need to come in and\ndelete it because I am paying for storage.\n\n401\n00:20:09.910 --> 00:20:14.040\nAnd the snapshots are kind of incremental,\nso they're not full snapshots necessarily,\n\n402\n00:20:14.040 --> 00:20:15.560\nit's gathering all the changes.\n\n403\n00:20:15.560 --> 00:20:18.200\nAnd so it's not so big that we\nhave to worry about it there, but\n\n404\n00:20:18.200 --> 00:20:24.460\nit is a good idea to clean it up otherwise\nit starts to really get a lot in there.\n\n405\n00:20:24.460 --> 00:20:28.880\nSpeaking of deleting, I don't know if\nthis will turn up on the exam or not but\n\n406\n00:20:28.880 --> 00:20:31.220\njust for your own reference.\n\n407\n00:20:31.220 --> 00:20:35.160\nWhen you go and\ndelete a database from RDS.\n\n408\n00:20:35.160 --> 00:20:37.910\nSo let's say I'm done with this database\nand I don't want anymore and I go and\n\n409\n00:20:37.910 --> 00:20:39.370\nI delete it.\n\n410\n00:20:39.370 --> 00:20:44.821\nWhen I delete the database, all of my\nautomated backups get deleted too.\n\n411\n00:20:44.821 --> 00:20:47.040\nAll the snapshots, they get deleted too.\n\n412\n00:20:47.040 --> 00:20:48.840\nThe manuals ones don't.\n\n413\n00:20:48.840 --> 00:20:52.030\nThe manual ones stay behind,\nbut the automated ones go.\n\n414\n00:20:52.030 --> 00:20:54.270\nSo if you ever delete an instance,\n\n415\n00:20:54.270 --> 00:20:57.360\nrecognize that your backups\nare gonna get deleted too.\n\n416\n00:20:57.360 --> 00:21:00.749\nSo if you're gonna delete a database,\nit's a good idea to go ahead and\n\n417\n00:21:00.749 --> 00:21:04.599\ntake a manual snapshot right before you\ndelete it, so you'll still have that,\n\n418\n00:21:04.599 --> 00:21:07.645\njust in the off chance that you\nget that emergency call, wait,\n\n419\n00:21:07.645 --> 00:21:10.486\nwe forgot this one software\nwas still using the database.\n\n420\n00:21:10.486 --> 00:21:11.905\nThis is how it always happens.\n\n421\n00:21:11.905 --> 00:21:15.130\nAnd so like all right, let me bring it\nback online, and you bring it back up.\n\n422\n00:21:15.130 --> 00:21:19.153\nBecause you can't shut down\na database instance in RDS.\n\n423\n00:21:19.153 --> 00:21:19.988\nRight?\n\n424\n00:21:19.988 --> 00:21:21.930\nYou delete it that's how you terminate it.\n\n425\n00:21:21.930 --> 00:21:25.741\nSo it's a good idea to have that back up\nto be able to bring that right back up\n\n426\n00:21:25.741 --> 00:21:27.529\nin that emergency type scenario.\n\n427\n00:21:27.529 --> 00:21:30.390\n>> Oh, Don you're talking about\nemergency type scenarios.\n\n428\n00:21:30.390 --> 00:21:32.450\nNow that we have this\nlovely safety net and\n\n429\n00:21:32.450 --> 00:21:35.790\nI can feel a little more secure\nabout getting out on that wire and\n\n430\n00:21:35.790 --> 00:21:38.700\ndeleting databases as, I thought\nthat was just standard procedure.\n\n431\n00:21:38.700 --> 00:21:39.200\nI delete databases.\n>> [LAUGH]\n\n432\n00:21:39.200 --> 00:21:41.000\n>> That's what I do.\n\n433\n00:21:41.000 --> 00:21:43.090\nOur customers out there that are watching,\n\n434\n00:21:43.090 --> 00:21:47.250\nthey have that if this happens, and of\ncourse if it's me it's when this happens.\n\n435\n00:21:47.250 --> 00:21:48.196\nHow do I do the restore?\n\n436\n00:21:48.196 --> 00:21:49.590\nHow do I get my database back?\n\n437\n00:21:49.590 --> 00:21:52.140\nWe've taken these, these little backups.\n\n438\n00:21:52.140 --> 00:21:53.090\nI got to restore it.\n\n439\n00:21:53.090 --> 00:21:53.850\nWhere do I go?\n\n440\n00:21:53.850 --> 00:21:56.350\n>> This is the best part,\ncuz it is so incredible easy.\n\n441\n00:21:56.350 --> 00:22:00.800\nIt's gonna sound like an AWS commercial,\nyou know in real life land.\n\n442\n00:22:00.800 --> 00:22:02.850\nSo like I've said,\nI've been in DBA for companies,\n\n443\n00:22:02.850 --> 00:22:06.690\nI've supported databases like this, and\nI've had failures that I had to deal with.\n\n444\n00:22:06.690 --> 00:22:08.563\nAnd as soon as the failure happens,\n\n445\n00:22:08.563 --> 00:22:12.071\nthe first thing I gotta identify\nis when was the last backup taken?\n\n446\n00:22:12.071 --> 00:22:12.950\nRight?\n\n447\n00:22:12.950 --> 00:22:16.720\nCan I salvage any data off\nthe database as it is now?\n\n448\n00:22:16.720 --> 00:22:18.860\nRight?\nDatabases work with transaction logs, so\n\n449\n00:22:18.860 --> 00:22:21.740\nwhen you write to them,\nyou write to the transaction logs.\n\n450\n00:22:21.740 --> 00:22:25.210\nAnd when the write is 100% complete,\nthen it writes to the database.\n\n451\n00:22:25.210 --> 00:22:28.618\nIt's possible that you've got 100%\ncomplete transactions in the transaction\n\n452\n00:22:28.618 --> 00:22:30.737\nlog that haven't been\napplied to the database yet.\n\n453\n00:22:30.737 --> 00:22:33.057\nSo if you can retrieve\nthe transaction logs,\n\n454\n00:22:33.057 --> 00:22:36.843\nyou can actually restore your database\nright to the point of failure, and\n\n455\n00:22:36.843 --> 00:22:40.689\nthe only thing you lose are transactions\nthat were in process at that time,\n\n456\n00:22:40.689 --> 00:22:44.109\nincomplete transactions which\nare incomplete, so it's not like\n\n457\n00:22:44.109 --> 00:22:48.420\nyou have a customer who thinks their\norder was placed and then it goes away.\n\n458\n00:22:48.420 --> 00:22:50.250\nThe customer knows they\nnever finished their order.\n\n459\n00:22:50.250 --> 00:22:51.780\nThey never got to that completion screen,\nright?\n\n460\n00:22:51.780 --> 00:22:53.260\nSo that's the best scenario.\n\n461\n00:22:53.260 --> 00:22:57.420\nSo the first thing I'd like to do\nis see what data I could scrape out\n\n462\n00:22:57.420 --> 00:22:58.420\nof the production server.\n\n463\n00:22:58.420 --> 00:22:58.970\nHere.\n\n464\n00:22:58.970 --> 00:23:01.330\nHere I am trying to get this database\nback online as fast as possible.\n\n465\n00:23:01.330 --> 00:23:03.200\nAnd I'm trying to salvage data.\n\n466\n00:23:03.200 --> 00:23:06.613\nThen I've got to go and\nfind my latest backup.\n\n467\n00:23:06.613 --> 00:23:09.132\nAnd my latest backup,\nit might be more than one backup.\n\n468\n00:23:09.132 --> 00:23:11.780\nI might have a full backup from Sunday,\nand\n\n469\n00:23:11.780 --> 00:23:14.300\nthen an incremental backup from Monday,\nTuesday, Wednesday.\n\n470\n00:23:14.300 --> 00:23:17.770\nOr if I'm doing hourly transaction\nlog backups or every fifteen minutes,\n\n471\n00:23:17.770 --> 00:23:21.850\nI might have hundreds of backups that\nI've got to restore in sequence.\n\n472\n00:23:21.850 --> 00:23:23.610\nTo get the database back up\nto the point of failure and\n\n473\n00:23:23.610 --> 00:23:25.300\nthen apply transaction logs.\n\n474\n00:23:25.300 --> 00:23:27.340\nIt's a lot of work right.\n\n475\n00:23:27.340 --> 00:23:28.870\nWell RDS does it all for you.\n\n476\n00:23:28.870 --> 00:23:32.650\nAgain this is, you know that little extra\nmoney that RDS costs versus spinning up\n\n477\n00:23:32.650 --> 00:23:34.840\nyour own instance,\nthis is part of what they do.\n\n478\n00:23:34.840 --> 00:23:37.030\nThey take care of that for you.\n\n479\n00:23:37.030 --> 00:23:40.310\nThey will salvage the transaction\nlogs if they can.\n\n480\n00:23:40.310 --> 00:23:44.670\nRight, they will find the latest backup,\nthey will restore it up, and\n\n481\n00:23:44.670 --> 00:23:46.850\nyou can even pick a point\nin time if you want.\n\n482\n00:23:46.850 --> 00:23:49.450\nAnd that's important, because sometimes\nwe want the latest and greatest,\n\n483\n00:23:49.450 --> 00:23:51.630\nI want the most recent backup possible.\n\n484\n00:23:51.630 --> 00:23:53.258\nThat's where I want to restore.\n\n485\n00:23:53.258 --> 00:23:57.695\nBut other times it's, oh,\nBob in accounting deleted these\n\n486\n00:23:57.695 --> 00:24:01.698\nemployees two days ago and\nsomebody just noticed now.\n\n487\n00:24:01.698 --> 00:24:04.168\nWell if I restore the latest backup,\nthe delete's already there.\n\n488\n00:24:04.168 --> 00:24:05.628\nThe delete is already in that backup.\n\n489\n00:24:05.628 --> 00:24:08.800\nI need to go two days ago and\nrestore the backup, right?\n\n490\n00:24:08.800 --> 00:24:11.640\nSo Amazon makes it super easy\nwhichever route you want to go.\n\n491\n00:24:11.640 --> 00:24:13.190\nBasically here's the way it works.\n\n492\n00:24:13.190 --> 00:24:17.130\nSo we jump into our instances,\nour RDS instances, and\n\n493\n00:24:17.130 --> 00:24:18.590\nwe find the data base we want to restore.\n\n494\n00:24:18.590 --> 00:24:21.860\nSo I'm just going to\npick this itprotv-db01.\n\n495\n00:24:21.860 --> 00:24:25.917\nAnd you go up to instance actions and\nyou've got restore to point in time.\n\n496\n00:24:25.917 --> 00:24:30.990\nWhen you choose restore to point in time,\nAmazon knows what backups you have.\n\n497\n00:24:30.990 --> 00:24:31.800\nIt's got them.\n\n498\n00:24:31.800 --> 00:24:32.798\nIt can reference them.\n\n499\n00:24:32.798 --> 00:24:35.720\nIt's got them all cataloged,\nthe manual and the automatic ones,\n\n500\n00:24:35.720 --> 00:24:37.190\nit knows that they're there.\n\n501\n00:24:37.190 --> 00:24:40.430\nAnd so,\nit'll tell me what the most recent one is.\n\n502\n00:24:40.430 --> 00:24:44.380\nI can restore backup that was done\nDecember 16th at 11:05 AM UTC.\n\n503\n00:24:44.380 --> 00:24:46.350\nAll right, and that's the latest one.\n\n504\n00:24:46.350 --> 00:24:47.780\nThat's the best they can give me.\n\n505\n00:24:47.780 --> 00:24:49.700\nAnd if that's what I want, I got it.\n\n506\n00:24:49.700 --> 00:24:53.290\nBut if a user deleted some record\nout of this database two days ago,\n\n507\n00:24:54.470 --> 00:24:55.700\nthat doesn't help me.\n\n508\n00:24:55.700 --> 00:24:58.480\nSo I can go here and\nchoose a custom restore time.\n\n509\n00:24:58.480 --> 00:25:03.930\nNow, you guys saw in my backup that,\nit was only backing up once a day, right?\n\n510\n00:25:03.930 --> 00:25:07.290\nI saw an automated backup on the 14th,\nan automated backup on the 15th and\n\n511\n00:25:07.290 --> 00:25:09.670\nthen a manual one on the 16th, right.\n\n512\n00:25:09.670 --> 00:25:12.060\nBut when I go in here it's gonna\nask me to pick a month and a day.\n\n513\n00:25:12.060 --> 00:25:14.910\nSo I might choose to go back to the 14th.\n\n514\n00:25:14.910 --> 00:25:17.930\nAnd then in the 14th\nI've got a time picker.\n\n515\n00:25:19.100 --> 00:25:22.470\nWhy a time picker if it only\nbacked up once that day?\n\n516\n00:25:22.470 --> 00:25:26.700\nWell, what it did is its got\na full backup of the database and\n\n517\n00:25:26.700 --> 00:25:28.600\nits got the transaction logs.\n\n518\n00:25:28.600 --> 00:25:31.480\nAnd when the transactions are processed,\nthere's a time stamp\n\n519\n00:25:31.480 --> 00:25:34.520\nattached to every transaction when\nit was applied to the database.\n\n520\n00:25:34.520 --> 00:25:39.610\nAnd I can pick, down to the second,\ninside of that.\n\n521\n00:25:39.610 --> 00:25:41.500\nSo we've got hours, minutes, seconds.\n\n522\n00:25:41.500 --> 00:25:44.900\nI can go down to the second,\nwhat I want to restore.\n\n523\n00:25:44.900 --> 00:25:49.460\nAnd so if I know that Bob deleted\nthose records at 2:35 pm, and\n\n524\n00:25:49.460 --> 00:25:53.940\n15 seconds even, right,\nI could come in here and\n\n525\n00:25:53.940 --> 00:26:00.200\nsay well let me pick 2:35 and 14 seconds.\n\n526\n00:26:00.200 --> 00:26:02.230\nYou're not usually gonna\nknow exactly what time.\n\n527\n00:26:02.230 --> 00:26:04.670\nMaybe you've got some great log files for\nyour application and\n\n528\n00:26:04.670 --> 00:26:06.380\nit tells you exactly when it happened.\n\n529\n00:26:06.380 --> 00:26:09.659\nAnd so you can come in and put in that\ntime, and you can restore right to it.\n\n530\n00:26:09.659 --> 00:26:14.245\nSo it doesn't matter that this backup only\nhappened once that day, it had all those\n\n531\n00:26:14.245 --> 00:26:18.300\ntransaction logs in there, and\nit can grab that individual data.\n\n532\n00:26:18.300 --> 00:26:20.560\nSo now it's going to let me restore,\nokay, and\n\n533\n00:26:20.560 --> 00:26:22.840\nget right to that point in the database.\n\n534\n00:26:22.840 --> 00:26:26.770\nBut here's the thing, when it goes to\nrestore, it doesn't restore over the top\n\n535\n00:26:26.770 --> 00:26:29.990\nof the existing instance\nthe existing instances is there and\n\n536\n00:26:29.990 --> 00:26:34.520\nrunning or maybe failed or whatever, its\ngonna create an all new instance for me so\n\n537\n00:26:34.520 --> 00:26:39.580\nits gonna create a new database instance\nwith the database at this point in time\n\n538\n00:26:39.580 --> 00:26:42.020\nand then its up to me to fail over to it.\n\n539\n00:26:42.020 --> 00:26:43.570\nAll right.\n\n540\n00:26:43.570 --> 00:26:46.699\nSo when I go to pick this it's asking me\na lot of the general set up questions.\n\n541\n00:26:46.699 --> 00:26:49.280\nWhat size do I want the data license,\nright.\n\n542\n00:26:49.280 --> 00:26:52.440\nIf this was Microsoft SQL this is where\nI could flip between standard and\n\n543\n00:26:52.440 --> 00:26:54.070\nenterprise, right.\n\n544\n00:26:54.070 --> 00:26:57.323\nI can change my class, I can bump up\nto higher hardware, I can go multi A Z,\n\n545\n00:26:57.323 --> 00:26:58.809\nI can bump up my storage, right.\n\n546\n00:26:58.809 --> 00:27:03.170\nThis is again a great way to change these\nvalues that are set up provision time.\n\n547\n00:27:03.170 --> 00:27:08.490\nAnd I can set a new database identifier.\n\n548\n00:27:08.490 --> 00:27:11.629\nSo maybe this one's demo db3\nversus the old one was demo db2.\n\n549\n00:27:11.629 --> 00:27:15.697\nAnd so, I can come through and I can set\nall the other information for it and\n\n550\n00:27:15.697 --> 00:27:17.150\nit's gonna spit out now.\n\n551\n00:27:17.150 --> 00:27:21.020\nUnlike before, it's not asking me for\nan administrator, user name and password.\n\n552\n00:27:21.020 --> 00:27:22.170\nIt's not asking me for a database name.\n\n553\n00:27:22.170 --> 00:27:23.240\nIt's got all that.\n\n554\n00:27:23.240 --> 00:27:25.990\nIt's just asking me about\nthe instance itself.\n\n555\n00:27:25.990 --> 00:27:30.960\nAnd then when I take that and\nI launch that DB instance,\n\n556\n00:27:30.960 --> 00:27:34.040\nit's gonna spin it up and\noop, what do I get?\n\n557\n00:27:34.040 --> 00:27:38.540\nCan't restore to a time earlier than blah,\nblah, oh, I picked the time earlier than\n\n558\n00:27:38.540 --> 00:27:43.380\nthe, this backup on December\n14th occurred at a certain time.\n\n559\n00:27:43.380 --> 00:27:45.740\nApparently, the time I picked\nhere was before that time.\n\n560\n00:27:45.740 --> 00:27:50.230\nSo, let me move to the 15th and\nI'll keep that time the same.\n\n561\n00:27:50.230 --> 00:27:51.830\nIt should be okay with that.\n\n562\n00:27:51.830 --> 00:27:54.900\nLet's try that again.\n\n563\n00:27:54.900 --> 00:27:55.980\nAnd database instance.\n\n564\n00:27:55.980 --> 00:27:57.380\nI picked a name that already exists.\n\n565\n00:27:57.380 --> 00:27:58.490\nHow does this stuff happen?\n\n566\n00:27:58.490 --> 00:28:00.300\nAll right,\nlet's go to database instance four.\n\n567\n00:28:01.350 --> 00:28:02.405\nAnd we'll launch that.\n\n568\n00:28:02.405 --> 00:28:04.360\n[LAUGH] That's the problem\nwith a show like this.\n\n569\n00:28:04.360 --> 00:28:07.260\nI end up spinning up so many instances,\nI forget the names that I've already used.\n\n570\n00:28:07.260 --> 00:28:08.150\nBut there we go.\n\n571\n00:28:08.150 --> 00:28:12.320\nSo now, it's spinning up itprotv-demodb4,\nright there.\n\n572\n00:28:12.320 --> 00:28:13.520\nIt's creating it.\n\n573\n00:28:13.520 --> 00:28:14.990\nIt's restoring it from that backup.\n\n574\n00:28:14.990 --> 00:28:16.308\nAnd it's gonna get it up and online.\n\n575\n00:28:16.308 --> 00:28:20.420\nNow for you,\nyou now have a copy of this database.\n\n576\n00:28:20.420 --> 00:28:22.170\nIt's up to date and\nyou got a choice, okay?\n\n577\n00:28:23.470 --> 00:28:24.900\nChoice number one.\n\n578\n00:28:24.900 --> 00:28:29.170\nYou can connect to the second database,\nquery the records that were deleted,\n\n579\n00:28:29.170 --> 00:28:33.010\nand then insert them into the existing\ndatabase, and you're in business.\n\n580\n00:28:33.010 --> 00:28:36.220\nIf the database was online, and you're\njust trying to recover from an accidental\n\n581\n00:28:36.220 --> 00:28:38.350\ndeletion, that's the best thing to do.\n\n582\n00:28:38.350 --> 00:28:40.750\nBecause the main database\nnever goes offline.\n\n583\n00:28:40.750 --> 00:28:42.020\nThe main database is on.\n\n584\n00:28:42.020 --> 00:28:45.880\nIt has lost some records, we go and\nquery them from this new database and\n\n585\n00:28:45.880 --> 00:28:47.430\nrestore them into the existing database.\n\n586\n00:28:47.430 --> 00:28:50.000\nProblem solved,\ndatabase never goes offline, right.\n\n587\n00:28:50.000 --> 00:28:54.803\nBut if this database has failed,\nif something really bad has happened, and\n\n588\n00:28:54.803 --> 00:28:58.329\nwe're trying to recreate it from scratch,\nwell then,\n\n589\n00:28:58.329 --> 00:29:00.743\nI've got it recreated from scratch.\n\n590\n00:29:00.743 --> 00:29:02.700\nBut it's got a different name.\n\n591\n00:29:02.700 --> 00:29:03.650\nIts got a different name, so\n\n592\n00:29:03.650 --> 00:29:06.750\nmy clients are gonna be redirected\nto point to this new name.\n\n593\n00:29:06.750 --> 00:29:09.250\nNow, your application may support that.\n\n594\n00:29:09.250 --> 00:29:10.970\nA lot of people build it\ninto their application.\n\n595\n00:29:10.970 --> 00:29:12.990\nIf you can't connect to the primary,\nhere's the secondary name.\n\n596\n00:29:12.990 --> 00:29:14.650\nAnd so you have it in your procedure.\n\n597\n00:29:14.650 --> 00:29:16.460\nWhen I restore, here is the name I use,\n\n598\n00:29:16.460 --> 00:29:17.930\nthat my clients will\nknow to connect to it.\n\n599\n00:29:17.930 --> 00:29:21.810\nAnd then you just delete the primary,\nthen people automatically flip over.\n\n600\n00:29:21.810 --> 00:29:24.370\nOr you can use a DNS CNAME.\n\n601\n00:29:24.370 --> 00:29:28.760\nIf you have Route 53 you can create a\nCNAME that points to one database instance\n\n602\n00:29:28.760 --> 00:29:31.190\nand when you restore like this\nyou just go to that CNAME and\n\n603\n00:29:31.190 --> 00:29:32.920\npoint it to the new database instance.\n\n604\n00:29:32.920 --> 00:29:34.930\nAnd now when people connect they'll\njust automatically get sent to\n\n605\n00:29:34.930 --> 00:29:36.040\nthe other one right.\n\n606\n00:29:36.040 --> 00:29:39.590\nAnd so you can have people flipping\nbetween databases in the back end\n\n607\n00:29:39.590 --> 00:29:42.690\nall via the same name,\nthey never realize that it happens.\n\n608\n00:29:42.690 --> 00:29:47.080\nSo you'll probably want to\ncombine RDS automated backups\n\n609\n00:29:47.080 --> 00:29:50.050\nwith a DNS solution or\nsome kind of fail over\n\n610\n00:29:50.050 --> 00:29:52.530\noption inside of your applications\nthat connect to the database.\n\n611\n00:29:52.530 --> 00:29:54.950\nOne or\nthe other to make this completely smooth.\n\n612\n00:29:54.950 --> 00:29:57.310\nBut otherwise, the restore process\nis pretty straightforward.\n\n613\n00:29:57.310 --> 00:30:01.220\nAs soon as I picked a time that was within\nthe backup and picked a date that wasn't\n\n614\n00:30:01.220 --> 00:30:04.100\nalready in use, the rest of it\nreally went off without a hitch.\n\n615\n00:30:04.100 --> 00:30:05.260\nBut that guy's gonna restore.\n\n616\n00:30:05.260 --> 00:30:06.640\nIt'll take a little while.\n\n617\n00:30:06.640 --> 00:30:08.659\nEspecially because I chose a multi AZ.\n\n618\n00:30:08.659 --> 00:30:11.222\nSo it's gotta bring up the main one,\nit's gotta bring up the replica,\n\n619\n00:30:11.222 --> 00:30:13.540\nand it's gotta synchronize\nthe replica before it goes active.\n\n620\n00:30:13.540 --> 00:30:14.739\nI probably should have\nchosen a single instance.\n\n621\n00:30:14.739 --> 00:30:15.840\nIt would have happened faster.\n\n622\n00:30:15.840 --> 00:30:17.652\nBut it's gonna deploy.\n\n623\n00:30:17.652 --> 00:30:20.109\nIt also doesn't help that\nI picked a T2 micro, so\n\n624\n00:30:20.109 --> 00:30:22.870\nit doesn't have a lot of CPU\npower to process that sync.\n\n625\n00:30:22.870 --> 00:30:24.540\nSo it'll finish eventually.\n\n626\n00:30:24.540 --> 00:30:26.650\nBut when it's done,\nit's online, and there you go.\n\n627\n00:30:26.650 --> 00:30:30.640\nSo backup and recovery,\nsuper easy inside of RDS.\n\n628\n00:30:30.640 --> 00:30:33.260\nThe automated stuff is great,\nit's what you'll want to use.\n\n629\n00:30:33.260 --> 00:30:35.910\nYou can still supplement it\nwith third party software, too.\n\n630\n00:30:35.910 --> 00:30:39.379\nYou can do your own backups outside of\nthis, if you want to retain things for\n\n631\n00:30:39.379 --> 00:30:41.816\na year or ten years,\nuse external backup software.\n\n632\n00:30:41.816 --> 00:30:45.798\nBut keep at least one day of backups in\nRDS, that way you've got it available.\n\n633\n00:30:45.798 --> 00:30:49.616\nAnd if there's ever a failure, you can\nrestore from within the site of RDS way\n\n634\n00:30:49.616 --> 00:30:53.460\nfaster than you can restore from\nthird party software sitting outside.\n\n635\n00:30:53.460 --> 00:30:55.770\nSo it's nice to have at least\none day of safety net up there.\n\n636\n00:30:55.770 --> 00:30:56.960\n>> Yeah.\nThat, the ease and\n\n637\n00:30:56.960 --> 00:31:01.180\nspeed really seems to be its advantage\nwhen it comes to taking these backups,\n\n638\n00:31:01.180 --> 00:31:02.980\nusing these backups,\nrestoring to them as well.\n\n639\n00:31:02.980 --> 00:31:05.870\nDon, is there anything else we need to\nknow about backing up when it comes to\n\n640\n00:31:05.870 --> 00:31:07.460\ndatabases instead of AWS?\n\n641\n00:31:07.460 --> 00:31:09.840\n>> I'm sure there's plenty\nmore out there to be aware of.\n\n642\n00:31:09.840 --> 00:31:12.010\nObviously you need to practice with this,\nget some experience with it.\n\n643\n00:31:12.010 --> 00:31:14.430\nBut for the exam, that was\nthe process they wanted you to see.\n\n644\n00:31:14.430 --> 00:31:17.430\nThat we could setup the automated backups,\nthat we can recover it pretty easy.\n\n645\n00:31:17.430 --> 00:31:20.830\nAnd the point in time restore,\nit's just automatically there.\n\n646\n00:31:20.830 --> 00:31:24.120\nJust because the backup happened at 3 PM\ndoesn't mean I can only restore to 3 PM.\n\n647\n00:31:24.120 --> 00:31:28.200\nI can restore to any point inside of\nthere, and it's super easy to do it.\n\n648\n00:31:28.200 --> 00:31:31.700\n>> Well, awesome so thank you so\nmuch for demystifying this.\n\n649\n00:31:31.700 --> 00:31:32.690\n>> A little topic for us,\n\n650\n00:31:32.690 --> 00:31:35.040\nI'm sure our future employees\nthank you as well [LAUGH].\n\n651\n00:31:35.040 --> 00:31:38.690\nThat being said, we're going to go\nahead and sign off for IT Pro TV.\n\n652\n00:31:38.690 --> 00:31:40.610\nI've been your host, Daniel Lowry.\n\n653\n00:31:40.610 --> 00:31:41.230\n>> And I'm Don Pezet.\n\n654\n00:31:41.230 --> 00:31:43.780\n>> And we'll see you next time.\n\n",
          "vimeoId": "150898773"
        }
      ],
      "title": "Backup and Recovery"
    },
    {
      "episodes": [
        {
          "description": "In this episode, Daniel and Don go over the topic of billing and cost management for your AWS account(s). Here they cover cost optimization in the AWS dashboard to quickly see how much you're spending and how much Amazon predicts you'll be spending. Then they take a look at more detailed billing info through IAM and the use of cost allocation tags. Lastly they explain the cost differences with each of the EC2 instance types(On Demand/Reserved/Spot).",
          "length": "1924",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/amazon-acsa/amazon-acsa-10-1-billing_and_cost_management-111915-1.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/amazon-acsa/amazon-acsa-10-1-billing_and_cost_management-111915-1-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/amazon-acsa/amazon-acsa-10-1-billing_and_cost_management-111915-1-sm.jpg",
          "title": "Billing and Cost Management",
          "transcript": "WEBVTT\n\n1\n00:00:00.000 --> 00:00:04.084\n[MUSIC]\n\n2\n00:00:04.084 --> 00:00:13.231\nAll right greetings everyone.\n\n3\n00:00:13.231 --> 00:00:16.451\nWelcome to another exciting\nepisode of IT Pro TV,\n\n4\n00:00:16.451 --> 00:00:21.128\nI'm your host Daniel Lowrie and\nin this episode we are moving on with more\n\n5\n00:00:21.128 --> 00:00:25.800\nAWS Certified SysOps Admin Certification\navailable from Amazon.\n\n6\n00:00:25.800 --> 00:00:29.490\nAnd joining me again today to\nhelp us out with this topic\n\n7\n00:00:29.490 --> 00:00:32.040\nis no other than my good friend,\nDon Pezet.\n\n8\n00:00:32.040 --> 00:00:34.355\nDon welcome to the show and\nhow are you today?\n\n9\n00:00:34.355 --> 00:00:35.350\n>> I am doing great Daniel.\n\n10\n00:00:35.350 --> 00:00:36.440\nThanks for having me back and\n\n11\n00:00:36.440 --> 00:00:40.520\nboy are we gonna jump into just\na technical masterpiece of an episode.\n\n12\n00:00:40.520 --> 00:00:43.770\nYou know normally where we're configuring\nsome cutting edge technology and\n\n13\n00:00:43.770 --> 00:00:48.550\ntoday we're going to get a chance\nto see billing and cost management.\n\n14\n00:00:48.550 --> 00:00:51.360\nI know it's earth shattering and\nour minds are blown.\n\n15\n00:00:51.360 --> 00:00:52.260\n>> I'm riveted.\n\n16\n00:00:52.260 --> 00:00:56.815\n>> It's probably the least exciting\npart about working with AWS.\n\n17\n00:00:56.815 --> 00:01:00.095\nI will say that Amazon makes it so\neasy for\n\n18\n00:01:00.095 --> 00:01:01.855\nus to get our billing\ninformation out of it.\n\n19\n00:01:01.855 --> 00:01:04.885\nAnd their prices really\nare super affordable.\n\n20\n00:01:04.885 --> 00:01:08.645\nIt is a pleasure to do business with them,\nbut at the end of the day there's still\n\n21\n00:01:08.645 --> 00:01:11.585\naccountants, there's still CIOs,\nthere's still people that need to\n\n22\n00:01:11.585 --> 00:01:14.105\nknow that financial data and we've\ngot to be able to provide it to them.\n\n23\n00:01:14.105 --> 00:01:18.420\nSo we're going to take a look at how\nwe can basically monitor our cost.\n\n24\n00:01:18.420 --> 00:01:19.640\nNow we can optimize it, right?\n\n25\n00:01:19.640 --> 00:01:24.720\nHow we can get the most value out\nof our use of AWS as possible.\n\n26\n00:01:24.720 --> 00:01:28.980\nBecause, most people,\nif you use AWS properly,\n\n27\n00:01:28.980 --> 00:01:32.490\nwill save you a significant amount of\nmoney over running your own data center.\n\n28\n00:01:32.490 --> 00:01:34.190\nSo it's kind of a no brainer to do it.\n\n29\n00:01:34.190 --> 00:01:37.990\nThere's tons of articles and studies\nthat have been done on this that show\n\n30\n00:01:37.990 --> 00:01:41.180\nthe savings you can get with\nthe Cloud Solution, but\n\n31\n00:01:41.180 --> 00:01:45.100\nonce you actually deploy this, how do you\nactually know you're getting that savings?\n\n32\n00:01:45.100 --> 00:01:47.750\nHow can you estimate what your\nexpenses are gonna be, and so\n\n33\n00:01:47.750 --> 00:01:49.290\nthat's what we're gonna take\na look at in this episode.\n\n34\n00:01:49.290 --> 00:01:52.448\nI know it doesn't sound that exciting,\nbut it's really important information for\n\n35\n00:01:52.448 --> 00:01:53.080\nthe real world.\n\n36\n00:01:53.080 --> 00:01:56.670\nIt's also important for the exam, so\nwe're gonna take a look at it right here.\n\n37\n00:01:56.670 --> 00:01:57.180\n>> Yeah, that's right.\n\n38\n00:01:57.180 --> 00:02:01.460\nUnfortunately, there's probably\na bean counter somewhere going,\n\n39\n00:02:01.460 --> 00:02:06.040\nyou spent 37 cents on a Twinkie the other\nday and you need to expense that.\n\n40\n00:02:06.040 --> 00:02:08.560\nThere are people watching\nthe money that's going out.\n\n41\n00:02:08.560 --> 00:02:12.710\nIf you're a smaller business, you might\nnot have the super intensity of that but\n\n42\n00:02:12.710 --> 00:02:13.800\nyou still wanna watch your money.\n\n43\n00:02:13.800 --> 00:02:16.549\nYou wanna watch your dollars.\nBecause things add up.\n\n44\n00:02:16.549 --> 00:02:18.011\nAnd Amazon, it's very nice.\n\n45\n00:02:18.011 --> 00:02:18.570\nLike Don said,\n\n46\n00:02:18.570 --> 00:02:21.810\nit's a pleasure doing business with them\nbecause they don't wanna overcharge you.\n\n47\n00:02:21.810 --> 00:02:25.260\nThey're not out to just bilk you for\nevery red cent they can get.\n\n48\n00:02:25.260 --> 00:02:28.410\nThey are out to give you a great\nservice at a great price.\n\n49\n00:02:28.410 --> 00:02:32.480\nAnd throwing in this monitoring\nof your actual cost and\n\n50\n00:02:32.480 --> 00:02:34.520\nbilling is a wonderful feature.\n\n51\n00:02:34.520 --> 00:02:37.920\nNow Don, when it comes to this we\nhave to know where to begin, so\n\n52\n00:02:37.920 --> 00:02:41.760\nwhat's a good spot for us to jump into\nthis so that we can keep an eye on it.\n\n53\n00:02:41.760 --> 00:02:44.020\n>> Well, let's start with what you\nsaid with just monitoring, right,\n\n54\n00:02:44.020 --> 00:02:45.430\nhow do I know what my expenses are.\n\n55\n00:02:45.430 --> 00:02:48.610\nOne of the biggest trepidations,\nexcuse me, big word of the day.\n\n56\n00:02:48.610 --> 00:02:51.940\nOne of the biggest trepidations people\nhave of dealing with a cloud service is\n\n57\n00:02:51.940 --> 00:02:54.740\na lot of them do this pay for\nwhat you use model.\n\n58\n00:02:54.740 --> 00:02:55.620\nRight?\n\n59\n00:02:55.620 --> 00:02:58.030\nIf I want to build up a web server and\nI decide I'm gonna do it myself.\n\n60\n00:02:58.030 --> 00:03:00.400\nI have to buy a physical server.\n\n61\n00:03:00.400 --> 00:03:03.770\nAnd I pay for that server 100% upfront and\nwhether I use it or not,\n\n62\n00:03:03.770 --> 00:03:04.960\nI've already paid for it.\n\n63\n00:03:04.960 --> 00:03:08.030\nSo, that server might be sitting\nthere idle and I'm still paying.\n\n64\n00:03:08.030 --> 00:03:13.210\nBut, with cloud services like AWS,\nI could spin up an instance and\n\n65\n00:03:13.210 --> 00:03:15.360\nif it's using bandwidth,\nI pay for the bandwidth.\n\n66\n00:03:15.360 --> 00:03:16.970\nIf it's not using the bandwidth, I don't.\n\n67\n00:03:16.970 --> 00:03:19.560\nIf I shut it down,\nI'm not paying for it anymore.\n\n68\n00:03:19.560 --> 00:03:21.610\nAnd then I can turn it\nback on when I need it.\n\n69\n00:03:21.610 --> 00:03:24.760\nIt's not like a physical server\nwhere the cost is always there.\n\n70\n00:03:24.760 --> 00:03:26.680\nSo that creates uncertainty for people.\n\n71\n00:03:26.680 --> 00:03:30.030\nLike well,\nI don't know what my bill is gonna be.\n\n72\n00:03:30.030 --> 00:03:33.560\nSure, with the old stuff, I had to pay up\nfront, and it was really expensive, but\n\n73\n00:03:33.560 --> 00:03:34.680\nat least I knew what I was gonna pay.\n\n74\n00:03:34.680 --> 00:03:36.260\nHere, I don't know, right?\n\n75\n00:03:36.260 --> 00:03:39.540\nAnd if my server starts to get really\nbusy, and I start moving more data,\n\n76\n00:03:39.540 --> 00:03:41.410\nI don't know what my\nbandwidth bill is gonna be.\n\n77\n00:03:41.410 --> 00:03:43.950\nSo, Amazon tries to make this\nas transparent as possible.\n\n78\n00:03:43.950 --> 00:03:46.580\nWe have a billing dashboard\nthat we can use for that.\n\n79\n00:03:46.580 --> 00:03:48.130\nI'm logged in to my AWS console here,\n\n80\n00:03:48.130 --> 00:03:52.030\nand this is a demo account that I have\nbeen using for this whole series.\n\n81\n00:03:52.030 --> 00:03:57.260\nAnd so what you're about to see is the\nfinancial data for putting on this show.\n\n82\n00:03:57.260 --> 00:03:59.753\nRIght, what does it cost us to\nrunning all the various VM's and\n\n83\n00:03:59.753 --> 00:04:02.970\nthings we've used in this show to\ndemonstrate all the technologies.\n\n84\n00:04:02.970 --> 00:04:07.581\nAnd so, if I go up here to my user name\nin the top corner inside of that I'll see\n\n85\n00:04:07.581 --> 00:04:09.470\nbilling and cost management.\n\n86\n00:04:09.470 --> 00:04:13.477\nAnd so I can jump into that and I'll get\na nice little dashboard that shows all of\n\n87\n00:04:13.477 --> 00:04:17.140\nthe technologies that I've used\nin this show have cost us $4.36.\n\n88\n00:04:17.140 --> 00:04:22.380\nNow, why was that so cheap?\n\n89\n00:04:22.380 --> 00:04:27.520\nI mean, I've done load balancers,\nwe've done EBS, we've done RDS,\n\n90\n00:04:27.520 --> 00:04:30.940\nwe had relational databases going,\nreplication, all sorts of crazy stuff.\n\n91\n00:04:30.940 --> 00:04:33.560\nIt cost me four and a half dollars.\n\n92\n00:04:33.560 --> 00:04:37.270\nWell the reason is I was using it during a\nshow and shutting it down when I was done.\n\n93\n00:04:37.270 --> 00:04:41.868\nI'm only paying for what I used and so\nit ended up being pretty inexpensive but\n\n94\n00:04:41.868 --> 00:04:46.043\nAmazon tells me last month I didn't\nspend any money on this account and\n\n95\n00:04:46.043 --> 00:04:49.180\nthen this month, so far, I've spent $4.36.\n\n96\n00:04:49.180 --> 00:04:51.140\nThat's month to date.\n\n97\n00:04:51.140 --> 00:04:56.080\nIf I keep going the way I'm going, my\nNovember bill is going to be $5.43, right?\n\n98\n00:04:56.080 --> 00:04:59.710\nThat's what they estimate my spend\nwill be at the end of the month.\n\n99\n00:04:59.710 --> 00:05:01.000\nNow it's a forecast, right?\n\n100\n00:05:01.000 --> 00:05:01.760\nIt's not factual.\n\n101\n00:05:01.760 --> 00:05:03.730\nThat's not exactly what it is.\n\n102\n00:05:03.730 --> 00:05:08.550\nIt's if I follow the trend that I've been\non, that's what I'm going to end up as.\n\n103\n00:05:08.550 --> 00:05:10.390\nSo they're trying to help you predict,\n\n104\n00:05:10.390 --> 00:05:12.880\nwhat is that monthly\nbill going to be like?\n\n105\n00:05:12.880 --> 00:05:16.690\nAnd if I look at this and let's pretend\nthe digits are slid over a little bit.\n\n106\n00:05:16.690 --> 00:05:21.306\nActually I had this happen with our actual\nITProTV AWS account where there was\n\n107\n00:05:21.306 --> 00:05:26.690\na particular part of the bill that I\nnormally expected to be around $40 right?\n\n108\n00:05:26.690 --> 00:05:28.282\nEvery month it was about $40.\n\n109\n00:05:28.282 --> 00:05:31.080\nAnd then all of a sudden,\none month, it was $470.\n\n110\n00:05:31.080 --> 00:05:35.210\nIt was ten times the normal spend.\n\n111\n00:05:35.210 --> 00:05:37.040\nAnd I said, what happened there?\n\n112\n00:05:37.040 --> 00:05:38.490\nWhy did that go up so much?\n\n113\n00:05:38.490 --> 00:05:40.160\nAnd if that happens to you.\n\n114\n00:05:40.160 --> 00:05:43.172\nIf you see your forecast way\nhigher than what you expect,\n\n115\n00:05:43.172 --> 00:05:46.580\nyou can look right over here, and\nthey break it down by service.\n\n116\n00:05:46.580 --> 00:05:48.930\nAnd you can see,\nwhere is the bulk of your expense.\n\n117\n00:05:48.930 --> 00:05:50.510\nAnd you'll see, I've got RDS, Route 53.\n\n118\n00:05:50.510 --> 00:05:53.830\nI've got data, other services.\n\n119\n00:05:53.830 --> 00:05:57.580\nEC2.\nAnd EC2 is the bulk of my expense.\n\n120\n00:05:57.580 --> 00:06:00.610\nSo if I see that my bill is\nway higher than it should be,\n\n121\n00:06:00.610 --> 00:06:02.960\nI now at least know what service it was.\n\n122\n00:06:02.960 --> 00:06:06.080\nAnd they give us a break down here where\nwe can see each of the services and\n\n123\n00:06:06.080 --> 00:06:07.760\nwhat that true spend is.\n\n124\n00:06:07.760 --> 00:06:10.570\nSo you really get an idea\nof what that's going to be.\n\n125\n00:06:10.570 --> 00:06:12.650\nNow as you look at this.\n\n126\n00:06:12.650 --> 00:06:16.700\nOne thing that you guys might be saying\nright now is that this is all pretty\n\n127\n00:06:16.700 --> 00:06:18.320\nhigh level, right?\n\n128\n00:06:18.320 --> 00:06:22.800\nI'm not actually seeing what instance\nwas it that generated this bill.\n\n129\n00:06:22.800 --> 00:06:24.050\nI just see that it is EC2.\n\n130\n00:06:24.050 --> 00:06:26.810\nSo sometimes it's not detailed enough and\n\n131\n00:06:26.810 --> 00:06:29.960\nwe need to get additional\ninformation out of it.\n\n132\n00:06:29.960 --> 00:06:33.320\nBut at least for a high level analysis,\nwe can see that and\n\n133\n00:06:33.320 --> 00:06:35.180\nstart to get a better idea.\n\n134\n00:06:35.180 --> 00:06:38.590\nAnd if we really wanna get in there and\nfind a little more information,\n\n135\n00:06:38.590 --> 00:06:43.330\nyou've got things like the Cost Explorer\nover here that we can fire up.\n\n136\n00:06:43.330 --> 00:06:47.320\nAnd the Cost Explorer, which apparently,\nI haven't turned on, if you turn it on,\n\n137\n00:06:47.320 --> 00:06:50.490\nit's gonna take a while to gather data and\nactually show things, but it'll help\n\n138\n00:06:50.490 --> 00:06:54.130\nyou to browse through and see a little\nmore data on where the cost came in.\n\n139\n00:06:54.130 --> 00:07:00.420\nNow, it's still not gonna show me what\ninstance EC2 is using to run that bill up.\n\n140\n00:07:00.420 --> 00:07:03.980\nBut it'll show me, day by day,\nwhat those expenses were.\n\n141\n00:07:03.980 --> 00:07:06.970\nWhen I'm here at the Dashboard,\nI'm seeing these summary charts.\n\n142\n00:07:06.970 --> 00:07:11.290\nWhen I go into the Cost Explorer, it'll\nbreak it down each day, so I can see like\n\n143\n00:07:11.290 --> 00:07:16.280\nwell, it was EC2 that cost me the most\non Tuesday but on Wednesday it was RDF.\n\n144\n00:07:16.280 --> 00:07:18.642\nI can start to get an idea\nwhere those services come in.\n\n145\n00:07:18.642 --> 00:07:21.830\nI don't have sufficient data on this\none because I just turned it on.\n\n146\n00:07:21.830 --> 00:07:22.810\nBut, if you leave it running,\n\n147\n00:07:22.810 --> 00:07:26.020\nyou will get a better idea of where your\nmonthly spend is actually coming from.\n\n148\n00:07:27.210 --> 00:07:28.950\nSo really cool features right there.\n\n149\n00:07:28.950 --> 00:07:31.540\nEasy to jump in and kinda see that.\n\n150\n00:07:31.540 --> 00:07:35.430\nNow I will tell you,\nit's not as detailed as you want.\n\n151\n00:07:35.430 --> 00:07:37.510\nIt usually isn't,\nthat's how these things are.\n\n152\n00:07:37.510 --> 00:07:43.250\nBut we can get a lot more information\nout of it to get detailed data.\n\n153\n00:07:43.250 --> 00:07:45.140\nBut it does require a little\nbit of configuration.\n\n154\n00:07:45.140 --> 00:07:47.560\nAnd so\nthat's why it's here in an admin show.\n\n155\n00:07:47.560 --> 00:07:51.645\n>> I was gonna say Don, I guess that kinda\nbegs the question, if I want that detail,\n\n156\n00:07:51.645 --> 00:07:53.702\nis there a way to do it and\nhow do I do that?\n\n157\n00:07:53.702 --> 00:07:56.754\n>> So basically we need to\nthink about two things.\n\n158\n00:07:56.754 --> 00:07:59.552\nFirst off is, can I get away\nwith the information I have?\n\n159\n00:07:59.552 --> 00:08:02.309\nSo if it's just my CIO or\nCFO or somebody and\n\n160\n00:08:02.309 --> 00:08:07.132\nthey just wanna know about that spin and\nwhat that dollar value is gonna be,\n\n161\n00:08:07.132 --> 00:08:10.940\nthe dashboards we have\nmight actually be adequate.\n\n162\n00:08:10.940 --> 00:08:13.950\nAnd if that's the case we can give\nthem access to the dashboard.\n\n163\n00:08:13.950 --> 00:08:15.740\nNow, don't give them an admin account.\n\n164\n00:08:15.740 --> 00:08:17.370\nBecause if they have an admin\naccount they can go in and\n\n165\n00:08:17.370 --> 00:08:19.410\nthey can start like deleting instances or\nwhatever.\n\n166\n00:08:19.410 --> 00:08:21.040\nYou don't wanna go crazy with this.\n\n167\n00:08:21.040 --> 00:08:24.560\nBut you can actually create a user for\nthem in IAM and\n\n168\n00:08:24.560 --> 00:08:26.490\ngive them permission to\naccess the dashboard.\n\n169\n00:08:26.490 --> 00:08:28.170\nNow, that's disabled by default.\n\n170\n00:08:28.170 --> 00:08:33.000\nIf I go back to my dashboard\nback over here, right?\n\n171\n00:08:33.000 --> 00:08:34.590\nAnd I look at my dashboard,\n\n172\n00:08:34.590 --> 00:08:38.290\nthis information right here,\nit's available to because I'm an admin.\n\n173\n00:08:38.290 --> 00:08:39.090\nI'm the account holder.\n\n174\n00:08:39.090 --> 00:08:40.010\nI've got the root account.\n\n175\n00:08:40.010 --> 00:08:42.890\nAnd if you scroll down,\nyou'll see way down here.\n\n176\n00:08:42.890 --> 00:08:46.280\nIAM access to your account's\nbilling information is not enabled.\n\n177\n00:08:46.280 --> 00:08:49.190\nYou can enable it on\nthe account information page.\n\n178\n00:08:49.190 --> 00:08:54.300\nSo I can go in and turn that on to\ngive people access to this dashboard\n\n179\n00:08:54.300 --> 00:08:56.770\nwithout giving them access\nto other things, right.\n\n180\n00:08:56.770 --> 00:08:58.260\nSo to do that, I can click on this link.\n\n181\n00:08:58.260 --> 00:09:01.810\nOr if I don't want to click on the link,\nthere's a few other ways we can go to it.\n\n182\n00:09:01.810 --> 00:09:05.790\nIf you go up to your name at the top\nright, you can go to my account and\n\n183\n00:09:05.790 --> 00:09:09.400\nit's under that my account option that we\nwill be able to go in and turn on that\n\n184\n00:09:09.400 --> 00:09:13.190\ninformation for the billing so we'll\nstart to see information pop-up here.\n\n185\n00:09:13.190 --> 00:09:19.540\nAnd, what I'm looking for is if I scroll\ndown in here somewhere, right here.\n\n186\n00:09:19.540 --> 00:09:23.550\nWe'll find IAM User Access\nto Billing Information, and\n\n187\n00:09:23.550 --> 00:09:27.320\nif I zoom in on that, we'll kind of\nsee that there's not a whole lot,\n\n188\n00:09:27.320 --> 00:09:30.520\nI just see that it's not enabled and\nthere's a little edit button up here.\n\n189\n00:09:30.520 --> 00:09:33.340\nI can hit that and\nwe can choose to activate that IAM Access.\n\n190\n00:09:34.540 --> 00:09:37.520\nOnce I've activated it,\nnow I can create user accounts and\n\n191\n00:09:37.520 --> 00:09:41.910\nI can dole out access to them with an IAM\npolicy, there is not a GUI for this yet.\n\n192\n00:09:41.910 --> 00:09:44.020\nThere might be by the time\nyou guys watch this video.\n\n193\n00:09:44.020 --> 00:09:46.220\nBut as of right now at this moment,\nthere is not one.\n\n194\n00:09:46.220 --> 00:09:48.870\nYou have the right of policy,\nand I got a sample policy,\n\n195\n00:09:48.870 --> 00:09:50.390\nsitting around here somewhere.\n\n196\n00:09:50.390 --> 00:09:51.880\nHere.\n\n197\n00:09:51.880 --> 00:09:53.480\nIt kind of shows how that would work,\n\n198\n00:09:53.480 --> 00:09:57.800\nif you haven't watched our IAM episodes\njump back and check those out.\n\n199\n00:09:57.800 --> 00:10:01.660\nHere is an IAM policy where I'm\nallowing a couple of actions.\n\n200\n00:10:01.660 --> 00:10:04.240\nAnd the actions are aws-portal.\n\n201\n00:10:04.240 --> 00:10:06.050\nCuz I'm giving you access to the portal.\n\n202\n00:10:06.050 --> 00:10:08.070\nView usage, view billing.\n\n203\n00:10:08.070 --> 00:10:10.600\nAnd that will let them to get to\nthat dashboard and let them see it.\n\n204\n00:10:10.600 --> 00:10:14.470\nSo if that reporting is enough,\nthat's all we need to do, right.\n\n205\n00:10:14.470 --> 00:10:16.490\nThat's gonna give them that access.\n\n206\n00:10:16.490 --> 00:10:20.466\nBut if they're asking for\nsomething even more detailed, right.\n\n207\n00:10:20.466 --> 00:10:24.222\nMaybe I need to know exactly which\nEC2 instance is driving up my bill or\n\n208\n00:10:24.222 --> 00:10:27.661\nmaybe I'm a service provider and\nI'm providing web service for\n\n209\n00:10:27.661 --> 00:10:31.369\nseveral different companies and\nI want to bill them out separately.\n\n210\n00:10:31.369 --> 00:10:34.637\nSo I know my EC2 bill was\n7,000 last month, but\n\n211\n00:10:34.637 --> 00:10:37.099\n2,000 gets billed to one client.\n\n212\n00:10:37.099 --> 00:10:39.930\nAnd 5,000 gets billed to another client.\n\n213\n00:10:39.930 --> 00:10:43.560\nWell I need a way to divide that up, and\nthat's where the advanced billing and\n\n214\n00:10:43.560 --> 00:10:44.950\ncost management comes in.\n\n215\n00:10:44.950 --> 00:10:47.480\nThat when we need a way to be able\nto separate out these costs to\n\n216\n00:10:47.480 --> 00:10:49.090\napply it appropriately.\n\n217\n00:10:49.090 --> 00:10:49.630\nAll right.\n\n218\n00:10:49.630 --> 00:10:51.920\nSo let's take a look at how that works.\n\n219\n00:10:51.920 --> 00:10:54.370\nThe first thing we need to\ndo is we need to turn on\n\n220\n00:10:54.370 --> 00:10:56.030\nthe reception of our billing data.\n\n221\n00:10:56.030 --> 00:10:59.120\nAnd you might say wait a minute,\naren't we receiving billing data already?\n\n222\n00:10:59.120 --> 00:11:00.310\nWe get an invoice?\n\n223\n00:11:00.310 --> 00:11:01.270\nWell, we are.\n\n224\n00:11:01.270 --> 00:11:03.000\nBut it's just not advanced data.\n\n225\n00:11:03.000 --> 00:11:07.510\nIf you want the advanced data, you've\ngot to enable that to be able to get it.\n\n226\n00:11:07.510 --> 00:11:10.680\nAnd there is a lot more\ninformation tucked away in here.\n\n227\n00:11:10.680 --> 00:11:12.500\nAnd so what I need to do is,\n\n228\n00:11:12.500 --> 00:11:17.240\nback in my user account where I turn on\nthat IAM access to billing information.\n\n229\n00:11:17.240 --> 00:11:21.030\nThere's another option in here where\nwe can turn on a little bit more.\n\n230\n00:11:21.030 --> 00:11:23.190\nAnd actually, I think we can\nget to it from here, can't we?\n\n231\n00:11:23.190 --> 00:11:25.580\nYeah, we can get to it from\nthe regular dashboard too.\n\n232\n00:11:25.580 --> 00:11:29.260\nIn the regular dashboard,\nover here, you'll see preferences.\n\n233\n00:11:29.260 --> 00:11:34.380\nAnd if I go into preferences, I can\nturn on Receive Billing Reports, okay?\n\n234\n00:11:34.380 --> 00:11:38.120\nNow, you might already be receiving\nPDF invoices by email, but\n\n235\n00:11:38.120 --> 00:11:39.470\nthose aren't detailed, they're high level.\n\n236\n00:11:39.470 --> 00:11:41.500\nHere's your bill, right?\n\n237\n00:11:41.500 --> 00:11:44.710\nReceive billing reports\nis the detailed data.\n\n238\n00:11:44.710 --> 00:11:47.740\nIt's actually these text\nfiles that can take\n\n239\n00:11:47.740 --> 00:11:50.390\nthe raw data that builds\nthe building reports.\n\n240\n00:11:50.390 --> 00:11:52.920\nAnd there's a ton of great\ninformation in there.\n\n241\n00:11:52.920 --> 00:11:54.640\nExactly which instances,\n\n242\n00:11:54.640 --> 00:11:59.680\nexactly which databases are driving up\na bill and during what times, and so on.\n\n243\n00:11:59.680 --> 00:12:01.670\nReally a wealth of\ninformation to be had there.\n\n244\n00:12:01.670 --> 00:12:05.890\nIn fact, it's so much information\nthat they can't email it to you\n\n245\n00:12:05.890 --> 00:12:10.390\nIf you turn it on,\nyou need to store it in an S3 bucket.\n\n246\n00:12:10.390 --> 00:12:14.610\nIt's gonna deposit that data into an S3\nbucket, and you can go and retrieve it.\n\n247\n00:12:14.610 --> 00:12:18.370\nSo I need an S3 bucket to do this,\notherwise this isn't gonna work.\n\n248\n00:12:18.370 --> 00:12:20.900\nSo let me create one real quick.\n\n249\n00:12:20.900 --> 00:12:22.910\nAnd so we'll just jump over to S3.\n\n250\n00:12:24.440 --> 00:12:26.255\nAnd I will whip up a bucket\nto store this information in.\n\n251\n00:12:26.255 --> 00:12:32.964\nSo I'm gonna create a bucket which\nI'll call itprotv-awsdemo-billing.\n\n252\n00:12:32.964 --> 00:12:37.747\nRight, and\nwe'll just stick with US standard on that.\n\n253\n00:12:37.747 --> 00:12:38.838\nAnd we'll create it.\n\n254\n00:12:38.838 --> 00:12:42.239\nNow I have this bucket that I can use.\n\n255\n00:12:43.360 --> 00:12:48.640\nAnd I'll just jump right back\nover to my billing dashboard and\n\n256\n00:12:48.640 --> 00:12:54.530\ngo into preferences, and I'm gonna turn\nthat receive billing reports back on and\n\n257\n00:12:54.530 --> 00:12:56.040\nI'll verify that bucket.\n\n258\n00:12:56.040 --> 00:12:57.270\nAnd I'm getting an invalid bucket.\n\n259\n00:12:57.270 --> 00:12:59.720\nNow the reason I'm getting\nan invalid bucket is\n\n260\n00:12:59.720 --> 00:13:02.960\nyou must apply permissions\nto your S3 bucket, right.\n\n261\n00:13:02.960 --> 00:13:04.800\nI haven't given it the permissions and\n\n262\n00:13:04.800 --> 00:13:08.000\nfortunately they gave me a sample\npolicy right here that we can use.\n\n263\n00:13:08.000 --> 00:13:10.150\nThis is exactly what we need.\n\n264\n00:13:10.150 --> 00:13:11.690\nSo I'm just going to copy this.\n\n265\n00:13:14.000 --> 00:13:17.311\nAll right.\nAnd once I've got that copied I can jump\n\n266\n00:13:17.311 --> 00:13:19.253\nright back over to S3.\n\n267\n00:13:19.253 --> 00:13:23.410\nI'll get rid of this other screen here.\n\n268\n00:13:23.410 --> 00:13:25.880\nAnd I can apply that bucket policy\nto the new bucket I just made,\n\n269\n00:13:25.880 --> 00:13:27.830\nit's a lot easier than\nwriting your own policy.\n\n270\n00:13:27.830 --> 00:13:28.750\nSo I'm going to choose that bucket,\n\n271\n00:13:28.750 --> 00:13:33.710\nand over here under permissions,\nI'll go to add a bucket policy.\n\n272\n00:13:34.730 --> 00:13:39.130\nI'm just going to paste that in,\nthis is exactly what they gave me.\n\n273\n00:13:39.130 --> 00:13:41.850\nI'm not changing it at all,\nit's got all of the information in there.\n\n274\n00:13:41.850 --> 00:13:44.793\nSee how it's even got the bucket\nname already set for me and\n\n275\n00:13:44.793 --> 00:13:45.945\nI'll just save that.\n\n276\n00:13:45.945 --> 00:13:47.674\nThere we go.\n\n277\n00:13:47.674 --> 00:13:50.118\nAnd now that that bucket\npolicy's in place,\n\n278\n00:13:50.118 --> 00:13:53.960\nI should be able to jump back\nover here and verify the bucket.\n\n279\n00:13:53.960 --> 00:13:56.880\nAnd now I've got a valid bucket all right.\n\n280\n00:13:56.880 --> 00:13:59.800\nIt's important that it validate,\nbecause if it doesn't\n\n281\n00:13:59.800 --> 00:14:02.770\nthen you won't see this bottom screen\nwhich is what's gonna go in there right.\n\n282\n00:14:02.770 --> 00:14:04.130\nWhat's gonna go in the bucket.\n\n283\n00:14:04.130 --> 00:14:06.940\nAnd here's where I can pick,\ndo I want the monthly report?\n\n284\n00:14:06.940 --> 00:14:09.890\nI might be getting that e-mailed to\nme anyway, I don't care about it.\n\n285\n00:14:09.890 --> 00:14:12.560\nBut, do I want the detailed\nbilling report?\n\n286\n00:14:12.560 --> 00:14:14.930\nThe cost allocation report?\n\n287\n00:14:14.930 --> 00:14:18.470\nThe detailed billing report\nwith resources and tags?\n\n288\n00:14:18.470 --> 00:14:20.230\nThat's the one that I really want.\n\n289\n00:14:20.230 --> 00:14:21.880\nWith resources.\n\n290\n00:14:21.880 --> 00:14:23.660\nWhat is it that's running up my bill?\n\n291\n00:14:23.660 --> 00:14:25.140\nWhat instance or database, whatever.\n\n292\n00:14:25.140 --> 00:14:26.630\nI need that, right.\n\n293\n00:14:26.630 --> 00:14:28.160\nAnd then tags.\n\n294\n00:14:28.160 --> 00:14:29.390\nTags are awesome.\n\n295\n00:14:29.390 --> 00:14:32.100\nTags are how we can divide\nup resources by customer.\n\n296\n00:14:32.100 --> 00:14:34.390\nSo if I wanna bill some\nthings to one department and\n\n297\n00:14:34.390 --> 00:14:37.270\nbill things to another department,\nI can use tags to do that.\n\n298\n00:14:37.270 --> 00:14:41.250\nSo I can specify that and now that\ntag will be included in that data.\n\n299\n00:14:41.250 --> 00:14:43.450\nThat's what really makes this powerful.\n\n300\n00:14:43.450 --> 00:14:45.860\nSo we've gotta make sure that\nwe get that bucket added.\n\n301\n00:14:45.860 --> 00:14:49.330\nAnd then we've gotta remember that you\nstill have to check these things off,\n\n302\n00:14:49.330 --> 00:14:50.680\notherwise they don't go in there.\n\n303\n00:14:50.680 --> 00:14:52.550\nAnd notice the billing\nreport resources and\n\n304\n00:14:52.550 --> 00:14:55.790\ntags is on by default,\ncuz Amazon knows that's what you're after.\n\n305\n00:14:55.790 --> 00:15:00.650\nThe other ones, you can get those other\nways if you want, but the detailed one,\n\n306\n00:15:00.650 --> 00:15:02.320\nthat's the one that I want.\n\n307\n00:15:02.320 --> 00:15:04.530\nI might come in and turn these other\nones on, I'll just go all out.\n\n308\n00:15:04.530 --> 00:15:05.430\nI want it all!\n\n309\n00:15:05.430 --> 00:15:06.610\nGive it to me!\n\n310\n00:15:06.610 --> 00:15:09.350\nAnd now we've got it, okay.\n\n311\n00:15:09.350 --> 00:15:13.260\nOnce I save that now I'm getting all\nthat advanced reporting data being\n\n312\n00:15:13.260 --> 00:15:17.890\nthrown into S3 and how do I interpret it?\n\n313\n00:15:17.890 --> 00:15:19.440\nWell, Amazon doesn't give\nyou a way to do that.\n\n314\n00:15:19.440 --> 00:15:22.220\nSo you can go and download the files and\nrun it through whatever reporting software\n\n315\n00:15:22.220 --> 00:15:25.440\nyou have, or there's plenty of\nthird party software companies out\n\n316\n00:15:25.440 --> 00:15:28.500\nthere that make products that can\nanalyze these and lay it out for you.\n\n317\n00:15:28.500 --> 00:15:30.120\nIf you have a development team.\n\n318\n00:15:30.120 --> 00:15:31.360\nThe files are all plain text.\n\n319\n00:15:31.360 --> 00:15:33.630\nThe data is laid out in\na normalized format so\n\n320\n00:15:33.630 --> 00:15:36.190\nit's really easy to parse through and\ngenerate your reports.\n\n321\n00:15:36.190 --> 00:15:38.100\nYou can even import it into Excel.\n\n322\n00:15:38.100 --> 00:15:40.630\nI know some companies that make macros\nthat'll bring it into Excel and\n\n323\n00:15:40.630 --> 00:15:41.790\ngenerate it.\n\n324\n00:15:41.790 --> 00:15:44.050\nI've used websites like s3stats.com and\n\n325\n00:15:44.050 --> 00:15:47.220\nplaces like that where they can\nanalyze the log data for you.\n\n326\n00:15:47.220 --> 00:15:48.930\nCloud ability is another one.\n\n327\n00:15:48.930 --> 00:15:51.527\nThere are several of them that are out\nthere that can parse this log data, and\n\n328\n00:15:51.527 --> 00:15:53.042\njust give you a ton of\ninformation about it.\n\n329\n00:15:53.042 --> 00:15:54.726\n>> That's why God invented interns, Don.\n\n330\n00:15:54.726 --> 00:15:56.026\n[LAUGH]\n>> That's right.\n\n331\n00:15:56.026 --> 00:15:56.769\n>> Get to work, intern.\n\n332\n00:15:56.769 --> 00:15:58.174\n[LAUGH]\n>> Now, for the exam,\n\n333\n00:15:58.174 --> 00:15:59.765\nthey just want you to\nknow how to turn this on.\n\n334\n00:15:59.765 --> 00:16:03.598\nAnd they are not gonna quiz you\non third party stuff, but as and\n\n335\n00:16:03.598 --> 00:16:08.570\nadmin, you turn this on, then it's up to\nthe analyst to actually use the data.\n\n336\n00:16:08.570 --> 00:16:13.683\nNow, what we've seen right here it's just\nkinda getting that extra data thrown in,\n\n337\n00:16:13.683 --> 00:16:18.158\nthe tags I mentioned, well, you'll\nsee this one other option down here,\n\n338\n00:16:18.158 --> 00:16:22.631\nright here, manage report tags And\nif I chose that, it's gonna load up and\n\n339\n00:16:22.631 --> 00:16:26.750\nshow me all the different tags\nthat I'm using for my system.\n\n340\n00:16:26.750 --> 00:16:27.560\nOkay?\n\n341\n00:16:27.560 --> 00:16:30.390\nAnd these are tags that\nhave already been created.\n\n342\n00:16:30.390 --> 00:16:33.850\nSo I probably need to create my\nown tag to start using for this.\n\n343\n00:16:33.850 --> 00:16:38.379\nSo when I start creating resources what\nI might do, like if I go to EC2 And\n\n344\n00:16:38.379 --> 00:16:41.666\nthis works across all the services,\nnot just EC2.\n\n345\n00:16:41.666 --> 00:16:43.082\nBut EC2 is the most common.\n\n346\n00:16:43.082 --> 00:16:48.167\nSo I might come in and\ntake an instance and go into its tag.\n\n347\n00:16:48.167 --> 00:16:53.210\nAnd I'm gonna create a tag\nthat I'm gonna call,\n\n348\n00:16:53.210 --> 00:16:59.550\nI'll give it a name of\nmaybe like itprotv-billto.\n\n349\n00:16:59.550 --> 00:17:00.640\nRight.\nAnd that's where I'm gonna track\n\n350\n00:17:00.640 --> 00:17:01.890\nwho I bill it to.\n\n351\n00:17:01.890 --> 00:17:03.280\nAnd for the value,\n\n352\n00:17:03.280 --> 00:17:09.060\nI might put maybe this particular Web\nserver is for the sales department.\n\n353\n00:17:10.410 --> 00:17:10.940\nAll right.\n\n354\n00:17:10.940 --> 00:17:14.850\nSo I've got this bill to tag that\nI'm tying to the sales department.\n\n355\n00:17:14.850 --> 00:17:19.470\nAnd then I might take this other instance,\nand go edit its tags.\n\n356\n00:17:19.470 --> 00:17:22.856\nAnd I'll set that itprotv-billto,\n\n357\n00:17:22.856 --> 00:17:25.860\nand I'm gonna set this one\nto the marketing department.\n\n358\n00:17:27.210 --> 00:17:32.390\nAnd now when I generate the report,\nthe tags are attached to the report.\n\n359\n00:17:32.390 --> 00:17:36.920\nAnd I can see, not only did this\ninstance cost me $300 last month,\n\n360\n00:17:36.920 --> 00:17:39.380\nbut I can see I need to bill\nthat to the sales department.\n\n361\n00:17:39.380 --> 00:17:42.710\nAnd this other instance might have\ncost me $4,000 last month and\n\n362\n00:17:42.710 --> 00:17:44.510\nI need to bill that to\nthe marketing department.\n\n363\n00:17:44.510 --> 00:17:45.420\nAnd I did departments.\n\n364\n00:17:45.420 --> 00:17:48.040\nThese could be code of accountings,\nthe right numbers.\n\n365\n00:17:48.040 --> 00:17:52.180\nIt could be customers, customer ID,\nit could be all sorts of different things.\n\n366\n00:17:52.180 --> 00:17:55.490\nYou may have project numbers you attach so\nit bills to the right project.\n\n367\n00:17:55.490 --> 00:17:59.380\nBut now that's going to attached\nto those reports if I turn it on.\n\n368\n00:17:59.380 --> 00:18:03.615\nRight, The last part is the one\nthat everybody forgets which is,\n\n369\n00:18:03.615 --> 00:18:05.780\nI need to go back into my billing.\n\n370\n00:18:05.780 --> 00:18:11.920\nAnd I need to go down to preferences,\nwhere I turn on the billing reports.\n\n371\n00:18:11.920 --> 00:18:15.525\nAnd the tag that I just made\nWell I need to turn it on.\n\n372\n00:18:15.525 --> 00:18:18.290\nSo if I go to manage report tags, and\n\n373\n00:18:18.290 --> 00:18:22.500\nI come in here,\nI should find IT Pro TV bill two.\n\n374\n00:18:22.500 --> 00:18:23.580\nThere it is.\n\n375\n00:18:23.580 --> 00:18:27.590\nAnd if I look all the way to the right,\nit's not checked off as active.\n\n376\n00:18:27.590 --> 00:18:30.340\nI need to check that or\nit's not gonna be in the bill.\n\n377\n00:18:30.340 --> 00:18:33.585\nAnd I like to turn on name also, right.\n\n378\n00:18:33.585 --> 00:18:38.950\nCause otherwise, it's gonna give you\nan instance ID of like, I dash 9 7 7 L B.\n\n379\n00:18:38.950 --> 00:18:42.056\nWell, great.\nI don't know what that is, but\n\n380\n00:18:42.056 --> 00:18:46.060\nif it had told me IT\npro TV US east webo 1.\n\n381\n00:18:46.060 --> 00:18:49.200\nI know it's a web server so\nI like to include name too, but\n\n382\n00:18:49.200 --> 00:18:51.920\nthere's all sorts of stuff in here you\ncan include based on what you need.\n\n383\n00:18:51.920 --> 00:18:53.600\nSo, I'll go ahead and save that.\n\n384\n00:18:54.660 --> 00:18:55.700\nAnd now I've got it.\n\n385\n00:18:55.700 --> 00:18:59.305\nAnd and so now I can really\nget detailed reporting, and\n\n386\n00:18:59.305 --> 00:19:01.420\nI know who to bill for this stuff.\n\n387\n00:19:01.420 --> 00:19:04.250\nI can send the bill to the right place and\nmake sure\n\n388\n00:19:04.250 --> 00:19:08.120\nwe get our return on investment or\nwhatever it is that we're trying to track.\n\n389\n00:19:08.120 --> 00:19:08.750\n>> That's right.\n\n390\n00:19:08.750 --> 00:19:12.710\nThis is really good for us because we\nwanna watch where our money's going,\n\n391\n00:19:12.710 --> 00:19:13.570\nwatch that.\n\n392\n00:19:13.570 --> 00:19:16.325\nMake sure that We don't\nhave a runaway server.\n\n393\n00:19:16.325 --> 00:19:17.600\nCause that tends to happen.\n\n394\n00:19:17.600 --> 00:19:19.940\nI'm sure that Don has done\nthat from time to time.\n\n395\n00:19:19.940 --> 00:19:22.640\nTurn the server on and\nit starts getting billed, and\n\n396\n00:19:22.640 --> 00:19:24.780\nif you forget all about it,\nyou're gonna have a crazy bill.\n\n397\n00:19:24.780 --> 00:19:27.430\nSo it's nice for\nus to be able to go onto that building and\n\n398\n00:19:27.430 --> 00:19:28.980\nget that 10,000 foot view.\n\n399\n00:19:28.980 --> 00:19:32.710\nOr put it under the microscopy,\nuse these tags and things of that nature,\n\n400\n00:19:32.710 --> 00:19:36.850\ngenerate those reports And\nlook at those and get the fine details so\n\n401\n00:19:36.850 --> 00:19:39.230\nthat we can go out as necessary.\n\n402\n00:19:39.230 --> 00:19:44.070\nNow, Don kind of, kind of moving away\nfrom that the instances is also another\n\n403\n00:19:44.070 --> 00:19:46.800\nthing we have to worry about because\nthere's different types of billing for\n\n404\n00:19:46.800 --> 00:19:48.160\ndifferent types of instances, correct?\n\n405\n00:19:48.160 --> 00:19:49.340\n>> Right.\nSo, you know,\n\n406\n00:19:49.340 --> 00:19:50.490\nthis is just billing management,\n>> Right.\n\n407\n00:19:50.490 --> 00:19:52.360\n>> What we're seeing here, right,\nwe get our bill and we try and\n\n408\n00:19:52.360 --> 00:19:53.970\nfigure out\n>> What it's for.\n\n409\n00:19:53.970 --> 00:19:55.820\nBut, there's billing optimization too.\n\n410\n00:19:55.820 --> 00:19:58.300\nAnd there may be times\nwhere we see a bill and\n\n411\n00:19:58.300 --> 00:19:59.640\nwe got a server that's\ncosting us a lot of money.\n\n412\n00:19:59.640 --> 00:20:02.090\nAnd there's things that we can\ndo to make it cost less money\n\n413\n00:20:02.090 --> 00:20:04.320\nwithout sacrificing server performance.\n\n414\n00:20:04.320 --> 00:20:06.890\nAnd EC2 instances\nare a great example of that.\n\n415\n00:20:06.890 --> 00:20:12.690\nWhen you spin up an EC2 instance, in this\nshow, every time I've gone here to EC2 and\n\n416\n00:20:12.690 --> 00:20:15.280\nI've gone to instances and\nI've spun it up right here.\n\n417\n00:20:15.280 --> 00:20:16.090\nOkay.\n\n418\n00:20:16.090 --> 00:20:18.360\nThere's actually three different\nkinds of instances, though.\n\n419\n00:20:18.360 --> 00:20:23.640\nThere's instances, spot instances,\nand reserved instances, all right.\n\n420\n00:20:23.640 --> 00:20:27.450\nThe one that just says instances, they're\nactually called on demand instances.\n\n421\n00:20:27.450 --> 00:20:29.120\nAnd what these are are the pay\nas you go ones.\n\n422\n00:20:29.120 --> 00:20:33.260\nWhen you fire up an on demand instance,\nyou're paying per hour that you've\n\n423\n00:20:33.260 --> 00:20:36.520\ngot it running so it costs you money for\neach hour that it runs.\n\n424\n00:20:36.520 --> 00:20:37.340\nRight?\n\n425\n00:20:37.340 --> 00:20:40.990\nAnd really even each minute,\nthey build really [INAUDIBLE].\n\n426\n00:20:40.990 --> 00:20:44.330\nSpot requests and\nreserved instances are special\n\n427\n00:20:44.330 --> 00:20:46.350\nkind of instances were it\nbuilds a little different.\n\n428\n00:20:46.350 --> 00:20:49.300\nAnd you guys should already be familiar\nwith these, but just to recap.\n\n429\n00:20:49.300 --> 00:20:52.300\nA on demand instance\nis the most expensive.\n\n430\n00:20:52.300 --> 00:20:54.810\nIt costs you for\nevery minute that it's running.\n\n431\n00:20:54.810 --> 00:20:56.820\nSo the longer you run it\nthe more it costs you.\n\n432\n00:20:56.820 --> 00:21:00.050\nAnd it's a standard one, so if I just\nneed a temporary server for an hour or\n\n433\n00:21:00.050 --> 00:21:01.930\nwhatever, I'll do an on-demand instance.\n\n434\n00:21:01.930 --> 00:21:03.700\nI spin it up, I pay for it.\n\n435\n00:21:03.700 --> 00:21:05.770\nWhen I'm done I terminate it,\nI don't pay for it, right.\n\n436\n00:21:05.770 --> 00:21:08.320\nSo that's basically how that works.\n\n437\n00:21:08.320 --> 00:21:11.980\nA Spot Request is where I ask for\n\n438\n00:21:11.980 --> 00:21:15.990\nan instance that I don't\nnecessarily need right now.\n\n439\n00:21:15.990 --> 00:21:20.820\nI say you know what, I need an instance to\nrun, but I'm patient, it can run later.\n\n440\n00:21:20.820 --> 00:21:23.330\nAnd so I'm going to bid a certain amount.\n\n441\n00:21:23.330 --> 00:21:28.663\nI'm going to say, you know, an on demand\ninstance might cost me $0.19 a minute,\n\n442\n00:21:28.663 --> 00:21:32.660\nand so I am only willing\nto pay 0.14 cents a minute.\n\n443\n00:21:32.660 --> 00:21:36.310\nAnd so I'll put a bid in and what Amazon\nwill do it they'll take all their\n\n444\n00:21:36.310 --> 00:21:41.420\nextra server space that they're not using\nand they'll offer it up to spot requests.\n\n445\n00:21:41.420 --> 00:21:45.990\nAnd so you might bid 0.14 cents a minute\nand if Amazon has an empty server that's\n\n446\n00:21:45.990 --> 00:21:49.450\nnot doing anything, they'll spin\nyou up for 0.14 cents a minute.\n\n447\n00:21:49.450 --> 00:21:51.920\nSo you just got it at a lower rate,\nsound great doesn't it?\n\n448\n00:21:51.920 --> 00:21:53.850\nWell, there's two problems.\n\n449\n00:21:53.850 --> 00:21:56.520\nOne, sometimes there's no empty space,\n\n450\n00:21:56.520 --> 00:21:59.090\nif there's no empty space then\nyou gotta pay the full price or\n\n451\n00:21:59.090 --> 00:22:03.320\nyou get nothing, and then two,\nyou're not the only one doing this.\n\n452\n00:22:03.320 --> 00:22:06.540\nSo, you might put a bid in for 14 cents,\nthen Daniel here comes along and\n\n453\n00:22:06.540 --> 00:22:10.150\nputs in a bid for 15 cents,\nhe'll get the spot instance, not you.\n\n454\n00:22:10.150 --> 00:22:11.230\nSo they're not reliable.\n\n455\n00:22:11.230 --> 00:22:13.650\nRight, but you can save a lot of money.\n\n456\n00:22:13.650 --> 00:22:15.750\nSo if you are, for example,\na research facility,\n\n457\n00:22:15.750 --> 00:22:20.140\nand you're about the sequence\nthe human DNA genome, whatever right?\n\n458\n00:22:20.140 --> 00:22:21.490\nSo, that takes a while.\n\n459\n00:22:21.490 --> 00:22:22.650\nIt could take years.\n\n460\n00:22:22.650 --> 00:22:25.170\nAnd you say boy,\nthe more servers I have the better but\n\n461\n00:22:25.170 --> 00:22:26.030\nI don't want to pay out the nose.\n\n462\n00:22:26.030 --> 00:22:27.220\nSo how about this.\n\n463\n00:22:27.220 --> 00:22:27.980\nI'll do a bid.\n\n464\n00:22:27.980 --> 00:22:32.639\nI'll say, I'm gonna set up an auto-scaling\ngroup made out of Spot instances and\n\n465\n00:22:32.639 --> 00:22:35.555\nI don't want to pay more\nthan $0.10 a minute.\n\n466\n00:22:35.555 --> 00:22:36.560\nRight?\n\n467\n00:22:36.560 --> 00:22:38.530\nWell most of the time\nI'm not gonna have that.\n\n468\n00:22:38.530 --> 00:22:39.710\nBut sometimes I will.\n\n469\n00:22:39.710 --> 00:22:42.070\nAnd those servers will spin\nup when we start sequencing.\n\n470\n00:22:42.070 --> 00:22:46.090\nAnd then when that's no longer valid,\nit starts to cut them back down again and\n\n471\n00:22:46.090 --> 00:22:48.260\nI lose them, and\nthen maybe the next night I get some.\n\n472\n00:22:48.260 --> 00:22:49.810\nSo one day I might have a hundred servers,\n\n473\n00:22:49.810 --> 00:22:51.560\nthen next day I might\nonly have five servers.\n\n474\n00:22:51.560 --> 00:22:54.850\nBut I'm always paying that ten cent\na minute bid that I put in, right?\n\n475\n00:22:54.850 --> 00:22:57.230\nSo you can save money if you're patient.\n\n476\n00:22:57.230 --> 00:22:59.260\nThat's what spot instances are all about.\n\n477\n00:22:59.260 --> 00:23:02.230\nAnd the last one's a reserve instance.\n\n478\n00:23:02.230 --> 00:23:06.710\nIf I know I'm gonna be using that\nserver all day, every day for\n\n479\n00:23:06.710 --> 00:23:11.770\none or more years, I can do a reserve\ninstance and get a better rate.\n\n480\n00:23:11.770 --> 00:23:14.860\nWhen they charge you, let's say, 19\ncents a minute for a on-demand instance,\n\n481\n00:23:14.860 --> 00:23:18.040\nit's because they know you're only\ngoing to use it for an hour or two.\n\n482\n00:23:18.040 --> 00:23:20.750\nBut if I'm going to use it 24\nhours a day for an entire year,\n\n483\n00:23:20.750 --> 00:23:23.070\nit's like buying in bulk and\nAmazon will give you a discount.\n\n484\n00:23:24.320 --> 00:23:29.200\nNow, with an on-demand instance, you bring\nit up, you turn it off, no contract.\n\n485\n00:23:29.200 --> 00:23:31.570\nBut a reserved instance\nis basically a contract.\n\n486\n00:23:31.570 --> 00:23:34.750\nYou sign a one, two,\nor three year contract.\n\n487\n00:23:34.750 --> 00:23:37.470\nSo you say I'm gonna be using\nthat server for a year.\n\n488\n00:23:37.470 --> 00:23:40.460\nAnd I'll tell you a lot of\nCIOs that are out there,\n\n489\n00:23:40.460 --> 00:23:43.740\nthey have like fear of commitment.\n\n490\n00:23:43.740 --> 00:23:44.770\nRight?\nRelationship issues.\n\n491\n00:23:44.770 --> 00:23:47.965\nThey don't wanna do a one year contract\nbecause what if we decide not to use AWS\n\n492\n00:23:47.965 --> 00:23:48.864\nsix months from now?\n\n493\n00:23:48.864 --> 00:23:53.186\nWell even if you have a fear of long-term\ncontracts like that, you can still save\n\n494\n00:23:53.186 --> 00:23:57.320\nmoney by doing reserved instance even\nif you're only gonna use the server for\n\n495\n00:23:57.320 --> 00:23:58.099\na few months.\n\n496\n00:23:58.099 --> 00:23:59.061\nRight?\n\n497\n00:23:59.061 --> 00:24:01.396\nAnd I've told people this and\nit's really confusing.\n\n498\n00:24:01.396 --> 00:24:05.360\nSo to help explain it,\nI've whipped up a little spreadsheet.\n\n499\n00:24:05.360 --> 00:24:08.860\nAnd in my spread sheet\nI show how this works.\n\n500\n00:24:08.860 --> 00:24:12.180\nAnd I had a customer, this all\ncame from a customer a while back,\n\n501\n00:24:12.180 --> 00:24:14.620\nthat just did not understand\nhow this billing worked.\n\n502\n00:24:14.620 --> 00:24:15.700\nSo I said all right.\n\n503\n00:24:15.700 --> 00:24:16.960\nLet me use some Excel magic.\n\n504\n00:24:16.960 --> 00:24:19.510\nAnd I made this spread sheet to try and\ncommunicate to them how it works.\n\n505\n00:24:19.510 --> 00:24:21.280\nAnd I just want to show you guys here.\n\n506\n00:24:21.280 --> 00:24:23.440\nDon't make financial decisions\nbased on this spreadsheet,\n\n507\n00:24:23.440 --> 00:24:25.050\ncuz my prices are out of date.\n\n508\n00:24:25.050 --> 00:24:29.530\nI made this probably two years ago,\nand Amazon cuts prices a lot.\n\n509\n00:24:29.530 --> 00:24:32.360\nSo things are cheaper now than\nwhat they are on my spreadsheet.\n\n510\n00:24:32.360 --> 00:24:36.280\nBut basically what I've got is a standard\nlarge instance here with seven and\n\n511\n00:24:36.280 --> 00:24:38.450\na half gigs of RAM, two CPUs,\n\n512\n00:24:38.450 --> 00:24:43.670\n850 gigs of storage, so\nit's an M1 large is what I've got.\n\n513\n00:24:43.670 --> 00:24:49.440\nAnd when I made this spreadsheet a couple\nyears ago, an M1 large was running\n\n514\n00:24:49.440 --> 00:24:53.680\nat a certain level of minute, let's see\nhow much it was actually running for.\n\n515\n00:24:53.680 --> 00:24:59.297\nSo, an M1 large back then was running at.\n\n516\n00:24:59.297 --> 00:25:00.524\nDo I not have the price in here?\n\n517\n00:25:00.524 --> 00:25:02.410\nI've got the price somewhere.\n\n518\n00:25:02.410 --> 00:25:03.229\nHere we go.\nSo,\n\n519\n00:25:03.229 --> 00:25:08.180\nan M1 large back then was running at\n19 cents a minute, or an hour, sorry.\n\n520\n00:25:08.180 --> 00:25:09.190\n19 cents an hour.\n\n521\n00:25:09.190 --> 00:25:11.080\nSo, I've got it right\nthere at 19 cents an hour.\n\n522\n00:25:11.080 --> 00:25:14.120\nThat's what it would have cost me\nback when this spreadsheet was made.\n\n523\n00:25:14.120 --> 00:25:16.914\nBut if I were to take that and\nsign a contract,\n\n524\n00:25:16.914 --> 00:25:21.271\nfor a certain period of time we can\nget that price to start to come down.\n\n525\n00:25:21.271 --> 00:25:25.892\nAnd so at 19 cents an hour,\nthat's $140 a month.\n\n526\n00:25:25.892 --> 00:25:30.858\nOkay, if I were to go into\na reserved instance for that,\n\n527\n00:25:30.858 --> 00:25:36.140\nthat same M1 large would\nstart to come down in price.\n\n528\n00:25:36.140 --> 00:25:39.070\nAnd what you'll see is that it's\n19 cents a minute normally, but\n\n529\n00:25:39.070 --> 00:25:41.620\nif I go to a contract, it actually.\n\n530\n00:25:41.620 --> 00:25:42.765\nI'm sorry, 19 cents an hour.\n\n531\n00:25:42.765 --> 00:25:43.562\nI gotta get that right.\n\n532\n00:25:43.562 --> 00:25:48.856\nThat 19 cents becomes four\ncents an hour In a contract.\n\n533\n00:25:48.856 --> 00:25:50.992\nThat is a significant difference, right?\n\n534\n00:25:50.992 --> 00:25:52.655\nThat is a huge difference in price and\n\n535\n00:25:52.655 --> 00:25:55.420\nthat's where these contracts\nreally come in handy.\n\n536\n00:25:55.420 --> 00:25:57.730\nBut what if we're not gonna use it for\nan hour?\n\n537\n00:25:57.730 --> 00:26:01.570\nWell here's the breakdown on this one and\nagain, these prices have changed, so\n\n538\n00:26:01.570 --> 00:26:02.810\nbe careful with it.\n\n539\n00:26:02.810 --> 00:26:06.170\nWith an on demand instance,\nI pay for me using that.\n\n540\n00:26:06.170 --> 00:26:10.580\nSo let's just assume that I'm gonna\nuse that instance 24 hours a day.\n\n541\n00:26:10.580 --> 00:26:16.650\nOn On Demand instance at $0.19 an hour\nthat would cost me $140 for that month.\n\n542\n00:26:16.650 --> 00:26:21.780\nAnd then as we keep running month after\nmonth, by the time I hit month 12 it would\n\n543\n00:26:21.780 --> 00:26:26.120\nbe $1690 for that server for a whole year.\n\n544\n00:26:26.120 --> 00:26:30.460\nRight, just doing On Demand, I could\nstop whenever I wanted, no contract.\n\n545\n00:26:30.460 --> 00:26:31.670\nRight?\n\n546\n00:26:31.670 --> 00:26:36.310\nIf I do a reserved instance, I've decided\nfor basically a one year contract.\n\n547\n00:26:36.310 --> 00:26:39.340\nAnd when you do that,\nthere's an upfront cost, right.\n\n548\n00:26:39.340 --> 00:26:41.190\nAnd so I've got that kind of laid up here.\n\n549\n00:26:41.190 --> 00:26:43.790\nIf you do On Demand,\nthere's no up front cost.\n\n550\n00:26:43.790 --> 00:26:49.650\nBut if I were to do a one year contract, I\nhave to pay $443 on day one just to start.\n\n551\n00:26:49.650 --> 00:26:52.100\nAnd this is where a fear\nof commitment comes in or\n\n552\n00:26:52.100 --> 00:26:56.720\nif it's a three year contract\nthat pays $673 up front.\n\n553\n00:26:56.720 --> 00:27:02.710\nMy price goes from .19 cents an hour\ndown to .04 cents an hour but\n\n554\n00:27:02.710 --> 00:27:05.440\nI got to pay up front and so\nthere goes that savings right.\n\n555\n00:27:05.440 --> 00:27:06.500\nWell, it kinda seems that way.\n\n556\n00:27:06.500 --> 00:27:10.670\nBut when you break it down, yes,\nthe saving's gone in the very beginning.\n\n557\n00:27:10.670 --> 00:27:12.420\nOn day one, I'm at $470.\n\n558\n00:27:12.420 --> 00:27:18.240\nBut after that, see how the On Demand\none is costing me $140 a day,\n\n559\n00:27:18.240 --> 00:27:22.290\nbut the one year reserved is\nonly costing me $27 a day.\n\n560\n00:27:22.290 --> 00:27:25.640\nSo per day it's cheaper, or per month.\n\n561\n00:27:25.640 --> 00:27:26.300\nSorry.\n\n562\n00:27:26.300 --> 00:27:29.910\nSo this is my per month, and\nmy per month is cheaper.\n\n563\n00:27:29.910 --> 00:27:35.550\nSo on month one, month two, and\nmonth three, I'm more expensive.\n\n564\n00:27:35.550 --> 00:27:39.920\nBut by the time I get to month four,\nsee how I've only spent five hundred and\n\n565\n00:27:39.920 --> 00:27:41.470\nfifty one dollars here?\n\n566\n00:27:41.470 --> 00:27:43.300\nBut I've spent $563 here.\n\n567\n00:27:43.300 --> 00:27:45.870\nAnd it gets better and better.\n\n568\n00:27:45.870 --> 00:27:50.360\nBy the end of the year, I've only\nspent $767 for a one year contract.\n\n569\n00:27:50.360 --> 00:27:55.710\nI've spent $1,600,\nover twice as much on an On Demand.\n\n570\n00:27:55.710 --> 00:27:59.950\nSo if I'm gonna use the server long term,\nit makes more sense to go ahead and\n\n571\n00:27:59.950 --> 00:28:02.870\ndo a reserved instance.\n\n572\n00:28:02.870 --> 00:28:05.650\nBut even if I was only gonna use it for\nthree months.\n\n573\n00:28:05.650 --> 00:28:10.020\nLet's say I use it for three months,\nI paid $470 on day one, I then used it for\n\n574\n00:28:10.020 --> 00:28:12.743\nthree months, my total spent $524.\n\n575\n00:28:12.743 --> 00:28:16.840\nRight there,\nI'm more expensive than On Demand.\n\n576\n00:28:16.840 --> 00:28:18.900\nBut look what happens in month four.\n\n577\n00:28:18.900 --> 00:28:23.553\nMonth four, my spend is $551,\nover here my spend is $563.\n\n578\n00:28:23.553 --> 00:28:24.990\nIt's cheaper.\n\n579\n00:28:24.990 --> 00:28:31.450\nAnd if I turn the server off right there,\nand I don't use that instance ever again,\n\n580\n00:28:31.450 --> 00:28:34.210\nfor the rest of the year these\nwould all drop to zeros.\n\n581\n00:28:34.210 --> 00:28:37.380\nAnd it would end up being cheaper\nthan if I'd done it On Demand,\n\n582\n00:28:37.380 --> 00:28:39.440\neven though I only used it for\nfour months.\n\n583\n00:28:39.440 --> 00:28:41.930\nSo even though you sign\na one year contract,\n\n584\n00:28:41.930 --> 00:28:44.340\nyou don't actually have to use\nthe server for that one year.\n\n585\n00:28:44.340 --> 00:28:48.600\nYou have it, but even if you shut it off,\nif you at least use if for\n\n586\n00:28:48.600 --> 00:28:51.680\nfour months, you'll save money\nover an On Demand, right?\n\n587\n00:28:53.020 --> 00:28:54.290\nBut not everybody thinks that way.\n\n588\n00:28:54.290 --> 00:28:57.140\nPeople fear the contract, and so\nyou pay the On Demand price, and\n\n589\n00:28:57.140 --> 00:28:57.720\nyou have no contract.\n\n590\n00:28:57.720 --> 00:29:01.050\n>> So really, it comes down to trying\nto work out your financial strategy.\n\n591\n00:29:01.050 --> 00:29:02.990\nHow long am I going to use this server?\n\n592\n00:29:02.990 --> 00:29:05.970\nHow often am I going to need\nthis service available to me?\n\n593\n00:29:05.970 --> 00:29:07.610\nIt's going to be a short term.\n\n594\n00:29:07.610 --> 00:29:09.530\nWell, that On Demand might\nbe the way to go, but\n\n595\n00:29:09.530 --> 00:29:12.860\nif it's long-term,\nthat's going to be the right thing.\n\n596\n00:29:12.860 --> 00:29:15.420\n>> And\non the three years reserved instance,\n\n597\n00:29:15.420 --> 00:29:16.720\nit gets even a little more weird.\n\n598\n00:29:16.720 --> 00:29:18.880\nOn three years reserved instance\nthe up-front cost is higher,\n\n599\n00:29:18.880 --> 00:29:21.920\nlike if we look at my chart here,\nday one, I'm at $694.\n\n600\n00:29:21.920 --> 00:29:25.420\nAnd so all year long I'm\nbehind the eight ball, right?\n\n601\n00:29:25.420 --> 00:29:29.572\nThese red Ns over here letting me know\nthat at the end of the year I'm paying\n\n602\n00:29:29.572 --> 00:29:32.650\n$935, that's more expensive than\nif I'd done a one year, right?\n\n603\n00:29:32.650 --> 00:29:37.030\nBut then in January, if I had done a one\nyear, I have that up front cost again,\n\n604\n00:29:37.030 --> 00:29:38.880\nthere's another $470.\n\n605\n00:29:38.880 --> 00:29:39.460\nRight?\n\n606\n00:29:39.460 --> 00:29:41.650\nBut on a three year I\nwouldn't have that cost and\n\n607\n00:29:41.650 --> 00:29:43.620\nwe immediately start saving money.\n\n608\n00:29:43.620 --> 00:29:49.360\nThe three year contracts save you money\nin the first month of the second year.\n\n609\n00:29:49.360 --> 00:29:52.430\nSo even if I only use it 13 or\n14 months and then cut it off and\n\n610\n00:29:52.430 --> 00:29:53.660\ndidn't use it again for two more years,\n\n611\n00:29:53.660 --> 00:29:58.940\nit would still be cheaper than if I had\ndone one years throughout that time.\n\n612\n00:29:58.940 --> 00:30:01.900\nSo you just need to look at how\nlong you're gonna use the server.\n\n613\n00:30:01.900 --> 00:30:02.930\nIf you're gonna use the server for\n\n614\n00:30:02.930 --> 00:30:07.240\nmore than three months, and the prices\nhave changed but the times really haven't.\n\n615\n00:30:07.240 --> 00:30:10.070\nIf you're gonna use the server for\nmore than three months, a one year\n\n616\n00:30:10.070 --> 00:30:13.320\nreserved instance is going to save you\nmoney even if you turn it off early.\n\n617\n00:30:14.380 --> 00:30:18.200\nIf you're gonna use it for more than one\nyear, a three year reserved instance is\n\n618\n00:30:18.200 --> 00:30:21.680\ngonna save you money even if you\nturn it off after the 1st year.\n\n619\n00:30:21.680 --> 00:30:23.400\nSo that's how you have to look at it.\n\n620\n00:30:23.400 --> 00:30:24.939\nDon't look at it as\na three year commitment.\n\n621\n00:30:24.939 --> 00:30:26.982\nLook at it as a 13 month commitment.\n\n622\n00:30:26.982 --> 00:30:29.070\nDon't look it as a one\nyear reserved instance.\n\n623\n00:30:29.070 --> 00:30:32.010\nLook at it as a four month commitment cuz\nthat's where to start to save the money.\n\n624\n00:30:32.010 --> 00:30:34.307\nAnd otherwise you're at\nthe same price as an On Demand.\n\n625\n00:30:34.307 --> 00:30:37.297\nSo keep that in mind when it\ncomes to cost optimization.\n\n626\n00:30:37.297 --> 00:30:41.530\nIf you don't fear the contracts, if you go\ninto the contracts, you will save money.\n\n627\n00:30:41.530 --> 00:30:43.490\nAnd that's a great way\nto optimize your costs.\n\n628\n00:30:43.490 --> 00:30:44.020\n>> And very cool.\n\n629\n00:30:44.020 --> 00:30:45.660\nThank you.\nThank you for showing us that.\n\n630\n00:30:45.660 --> 00:30:47.280\nThen now maybe we won't be so\n\n631\n00:30:47.280 --> 00:30:50.950\nafraid of diving into those\nreserves types of instances.\n\n632\n00:30:50.950 --> 00:30:53.090\nSo they can work out to our benefit.\n\n633\n00:30:53.090 --> 00:30:55.770\nSpecifically, financially,\nwhich is always a nice thing.\n\n634\n00:30:55.770 --> 00:30:58.420\nNow Dom, we talked about monitoring.\n\n635\n00:30:58.420 --> 00:31:01.530\nWe have the, we can go in and\nsee the financial monitor.\n\n636\n00:31:01.530 --> 00:31:02.910\nIt gives us that nice view.\n\n637\n00:31:02.910 --> 00:31:07.350\nWe also have that, where it can\ncreate that, generate the report for\n\n638\n00:31:07.350 --> 00:31:08.780\nus, see the tags.\n\n639\n00:31:08.780 --> 00:31:11.498\nAnd we do want to get into a little\nmore of that because there's\n\n640\n00:31:11.498 --> 00:31:13.710\nsome really cool things we\nwant to look at as well.\n\n641\n00:31:13.710 --> 00:31:15.388\nBut our clock is down yet again.\n\n642\n00:31:15.388 --> 00:31:20.790\n>> [LAUGH]\n>> It is a wicked mistress.\n\n643\n00:31:20.790 --> 00:31:22.170\nAlways a slave driver.\n\n644\n00:31:22.170 --> 00:31:24.750\nSo we're going to have to\ndo another part for this.\n\n645\n00:31:24.750 --> 00:31:26.230\n>> Yeah let's just break\nit up into another part.\n\n646\n00:31:26.230 --> 00:31:27.640\nIt won't be a long episode, but\n\n647\n00:31:27.640 --> 00:31:30.820\nI definitely want to talk about\nsetting alarms for our billings so\n\n648\n00:31:30.820 --> 00:31:32.830\nyou can get emails that warn you\nwhen things are going crazy.\n\n649\n00:31:32.830 --> 00:31:34.560\nAnd I want to talk about\nconsolidated billing.\n\n650\n00:31:34.560 --> 00:31:37.080\nSo a little bit more there that you might\nhave to set up as an administrator.\n\n651\n00:31:37.080 --> 00:31:38.220\nBut what we've seen so far,\n\n652\n00:31:38.220 --> 00:31:41.100\nyou guys get an idea of how we\ncan get all our building data.\n\n653\n00:31:41.100 --> 00:31:42.460\nWe can really optimize things.\n\n654\n00:31:42.460 --> 00:31:44.550\nWe can save money and\nreally have a great solution out there.\n\n655\n00:31:44.550 --> 00:31:45.930\nSo definitely stay tuned for part two.\n\n656\n00:31:45.930 --> 00:31:47.860\nWe'll see a few more of those pieces.\n\n657\n00:31:47.860 --> 00:31:49.200\n>> Awesome.\nThank you so much Don for\n\n658\n00:31:49.200 --> 00:31:50.750\nshowing us what we've seen so far.\n\n659\n00:31:50.750 --> 00:31:52.410\nHopefully we'll see you in part two.\n\n660\n00:31:52.410 --> 00:31:56.486\nAs for this one, signing off for ITProTV,\nI've been your host Daniel Lowry.\n\n661\n00:31:56.486 --> 00:31:57.376\n>> And I'm Don Pezet.\n\n662\n00:31:57.376 --> 00:31:58.403\n>> We'll see you next time.\n\n663\n00:31:58.403 --> 00:32:03.624\n[MUSIC]\n\n",
          "vimeoId": "146546832"
        },
        {
          "description": "In this episode, Daniel and Don continue to go over the topic of billing and cost management for your AWS account(s).",
          "length": "1380",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/amazon-acsa/amazon-acsa-10-1-billing_and_cost_management_pt2-111915-1.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/amazon-acsa/amazon-acsa-10-1-billing_and_cost_management_pt2-111915-1-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/amazon-acsa/amazon-acsa-10-1-billing_and_cost_management_pt2-111915-1-sm.jpg",
          "title": "Billing and Cost Management Part 2",
          "transcript": "WEBVTT\n\n1\n00:00:00.000 --> 00:00:10.000\n[MUSIC]\n\n2\n00:00:11.973 --> 00:00:13.710\nAlright, greetings everyone.\n\n3\n00:00:13.710 --> 00:00:16.310\nWelcome to another exciting\nepisode of IT Pro TV.\n\n4\n00:00:16.310 --> 00:00:21.400\nI'm your host Daniel Lowrie, and in this\nepisode we'll continue on with our AWS.\n\n5\n00:00:21.400 --> 00:00:25.860\nCertified sysops admin certification\navailable from Amazon, and here to help us\n\n6\n00:00:25.860 --> 00:00:29.820\nout with that today, is none other than\nmy good friend, colleague Mr. Don Pezet.\n\n7\n00:00:29.820 --> 00:00:30.690\nDon, how are you doing today?\n\n8\n00:00:30.690 --> 00:00:31.670\nWelcome to the show.\n\n9\n00:00:31.670 --> 00:00:35.490\n>> I'm doing great, Daniel, glad to be\nback, and glad to be wrapping up billing,\n\n10\n00:00:35.490 --> 00:00:38.800\nand cost management, which I will\nadmit has to sound like the lamest\n\n11\n00:00:38.800 --> 00:00:41.630\nset of episodes that we could film\non this stuff but it is important.\n\n12\n00:00:41.630 --> 00:00:43.160\nAnd\n>> If you haven't watched it,\n\n13\n00:00:43.160 --> 00:00:46.030\nin our last episode we got\na chance to see how to\n\n14\n00:00:46.030 --> 00:00:49.910\nkeep track of how much our monthly\nspend was going to be on AWS.\n\n15\n00:00:49.910 --> 00:00:53.360\nAnd we got to see a couple of\nopportunities to optimize that, and\n\n16\n00:00:53.360 --> 00:00:56.795\nmake it where we get the most more bang\nfor our buck, and we're spending money\n\n17\n00:00:56.795 --> 00:01:00.305\nwith Amazon, and in this episode we're\ngoing to continuing with that, and looking\n\n18\n00:01:00.305 --> 00:01:03.965\nat a few other advanced features that have\nto do with billing, and cost management.\n\n19\n00:01:03.965 --> 00:01:05.195\nSo, good stuff all around.\n\n20\n00:01:05.195 --> 00:01:09.195\n>> Yeah, as lame as billing, and cost\nmanagement may be it's even more lame to\n\n21\n00:01:09.195 --> 00:01:12.065\nget a huge bill because you weren't\nmonitoring what was going on.\n\n22\n00:01:12.065 --> 00:01:16.625\nAnd speaking of monitoring, that's a good\nplace for us to jump back into billing and\n\n23\n00:01:16.625 --> 00:01:18.385\ncost management.\n\n24\n00:01:18.385 --> 00:01:21.190\n>> Yeah, yeah lets\n>> I made an illusion.\n\n25\n00:01:21.190 --> 00:01:23.290\nThat's my big word of the day, illusion.\n\n26\n00:01:23.290 --> 00:01:27.490\nI made an illusion to, an experience\nthat I had, in the last episode,\n\n27\n00:01:27.490 --> 00:01:30.140\nabout how a bill might have jumped\nup higher than it should have.\n\n28\n00:01:30.140 --> 00:01:31.800\nSo, I want to elaborate on that, and\n\n29\n00:01:31.800 --> 00:01:33.720\nshow you guys a way that I could\nhave prevented what happened.\n\n30\n00:01:33.720 --> 00:01:37.380\nSo, for this particular customer\nthe stuff that I was working on they\n\n31\n00:01:37.380 --> 00:01:41.170\nhad some data that was being\nstored in Amazon S3, and\n\n32\n00:01:41.170 --> 00:01:44.650\nnormally the data that was in\nS3 was not very high traffic.\n\n33\n00:01:44.650 --> 00:01:49.390\nIt was mostly images and\nthe cost was usually between a dollar, and\n\n34\n00:01:49.390 --> 00:01:54.985\na dollar 50 per day, and so that meant the\nmonthly bill was usually around $40 for\n\n35\n00:01:54.985 --> 00:01:58.530\nthat bit of data in an Amazon S3 bucket.\n\n36\n00:01:58.530 --> 00:01:59.270\nRight?\n\n37\n00:01:59.270 --> 00:02:01.860\nAnd one month the bill came out.\n\n38\n00:02:01.860 --> 00:02:04.670\nAnd the bill,\nI always got a copy of of the bill.\n\n39\n00:02:04.670 --> 00:02:06.070\nWe had it set to send out via PDF.\n\n40\n00:02:06.070 --> 00:02:08.410\nAnd so, they would get it\ncuz they paid it, not me.\n\n41\n00:02:08.410 --> 00:02:11.170\nBut then, I would get a copy of it, and\nI would always just review it real quick.\n\n42\n00:02:11.170 --> 00:02:12.740\nAnd there was one month,\n\n43\n00:02:12.740 --> 00:02:16.850\nwhere I noticed instead of being\naround $40 it was around $400.\n\n44\n00:02:16.850 --> 00:02:19.530\nAnd I said, well that's a little high.\n\n45\n00:02:19.530 --> 00:02:22.160\nThat's ten times what I expect it to be.\n\n46\n00:02:22.160 --> 00:02:23.260\nThe bill was significantly higher.\n\n47\n00:02:23.260 --> 00:02:24.100\nAlright.\n\n48\n00:02:24.100 --> 00:02:27.620\nSo, I started digging into it, and doing\nsome reasearch, and what I found thanks to\n\n49\n00:02:27.620 --> 00:02:30.980\nusing the cost explorer was I could\ntell where that cost came from.\n\n50\n00:02:30.980 --> 00:02:32.310\nAnd let me show you what I mean there.\n\n51\n00:02:32.310 --> 00:02:34.400\nI showed you the cost explorer\nin the last episode, but\n\n52\n00:02:34.400 --> 00:02:36.790\nI'll kinda re-enact what I did.\n\n53\n00:02:36.790 --> 00:02:41.230\nSo, what I did is I kinda went into\nthe console, and I went into Billing and\n\n54\n00:02:41.230 --> 00:02:46.430\nCost Management, and then, from in here\nyou'll see what your monthly dashboard is.\n\n55\n00:02:46.430 --> 00:02:50.099\nAnd so for them, for example,\nI was saying that it was $400, right?\n\n56\n00:02:50.099 --> 00:02:52.600\nAnd it'll tell you where that\nexpense was coming from and\n\n57\n00:02:52.600 --> 00:02:55.620\nI was seeing that the bulk of\nit was coming from, S3, which,\n\n58\n00:02:55.620 --> 00:02:59.970\nit looks like I don't even have any\nS3 costs on this one right now.\n\n59\n00:02:59.970 --> 00:03:03.920\nBut for them,\nit was almost the entire donut.\n\n60\n00:03:03.920 --> 00:03:05.830\nSo then, I went to the Cost Explorer.\n\n61\n00:03:05.830 --> 00:03:08.170\nAnd the nice thing that Cost Explorer\ndoes is it lets you see,\n\n62\n00:03:08.170 --> 00:03:11.250\nday by day,\nwhere your costs are coming from.\n\n63\n00:03:11.250 --> 00:03:14.710\nAnd s, if you jump in here, you can\nget an idea of where that happened.\n\n64\n00:03:14.710 --> 00:03:17.820\nAnd my account apparently doesn't have\nenough traffic on it right now to generate\n\n65\n00:03:17.820 --> 00:03:18.860\nany good data.\n\n66\n00:03:18.860 --> 00:03:23.810\nBut, you know maybe if I do the last\ncouple of days or something.\n\n67\n00:03:23.810 --> 00:03:26.290\nIf we cut it down a little bit.\n\n68\n00:03:26.290 --> 00:03:29.750\nWe might be able to get something\na little more reasonable.\n\n69\n00:03:29.750 --> 00:03:30.660\nWhat month is this?\n\n70\n00:03:30.660 --> 00:03:32.330\nThis is like the eleventh\nmonth of the year, so [LAUGH].\n\n71\n00:03:32.330 --> 00:03:36.190\nI know, the hardest part is just\nremembering what today is sometimes.\n\n72\n00:03:36.190 --> 00:03:41.220\nBut if we kind of trim this report\ndown just a little bit, like that.\n\n73\n00:03:41.220 --> 00:03:41.950\nThere we go.\n\n74\n00:03:41.950 --> 00:03:45.280\nSo, I can start to see month by month,\nor day by day.\n\n75\n00:03:45.280 --> 00:03:46.280\nSo, I'm in the month view here.\n\n76\n00:03:46.280 --> 00:03:49.800\nIf I go day by day,\nnow I can start to get this broken out.\n\n77\n00:03:49.800 --> 00:03:51.720\nAnd I can see what my cost was each day.\n\n78\n00:03:51.720 --> 00:03:56.270\nSo, on this day, it was $1.34,\nwhich, let me zoom in on that a bit.\n\n79\n00:03:56.270 --> 00:04:01.322\nSo, as we start to look at this, I can\nsee on this day it was $1.34, on this day\n\n80\n00:04:01.322 --> 00:04:06.950\nit was $0.78, on this day it was $0.89,\non this day it was $1.59, right?\n\n81\n00:04:06.950 --> 00:04:09.640\nSo, and then,\nI get this forecast of what they\n\n82\n00:04:09.640 --> 00:04:12.230\nthink it's gonna be like in\nthe future going forward, so\n\n83\n00:04:12.230 --> 00:04:14.170\nthey think I'm gonna to be\nspending a little bit more.\n\n84\n00:04:14.170 --> 00:04:17.910\nThey, they always give you a little\nbit of extra head room there.\n\n85\n00:04:17.910 --> 00:04:19.910\nSo, what I was able to do\nwas to pull this up for\n\n86\n00:04:19.910 --> 00:04:23.080\nthe customer,and see exactly what day\nthings changed, and sure enough I\n\n87\n00:04:23.080 --> 00:04:27.700\nsaw where it was about a $1.00 to $1.50\nevery day until the 20th of that month.\n\n88\n00:04:27.700 --> 00:04:32.140\nAnd on the 20th of that month,\nit jumped up to almost $40 per day.\n\n89\n00:04:32.140 --> 00:04:34.350\nIt was really between like 35 and $40.\n\n90\n00:04:34.350 --> 00:04:38.860\nAnd the last ten days of the month\nit racked up this significant bill,\n\n91\n00:04:38.860 --> 00:04:40.150\nand that's what got us to $400.\n\n92\n00:04:40.150 --> 00:04:42.120\nNow, where that's important is two things.\n\n93\n00:04:42.120 --> 00:04:47.050\nSo one, it was ten times\nthe spend they normally had.\n\n94\n00:04:47.050 --> 00:04:49.610\nTwo, it was just the last\nten days of the month.\n\n95\n00:04:49.610 --> 00:04:51.570\nIf that had been happening all month long,\n\n96\n00:04:51.570 --> 00:04:53.670\nit wouldn't have been $400\nit would have been $1200.\n\n97\n00:04:53.670 --> 00:04:55.840\nIt would have been a lot more, right?\n\n98\n00:04:55.840 --> 00:04:58.970\nSo, it was important that we caught it\nearly on and I caught it by looking at\n\n99\n00:04:58.970 --> 00:05:02.780\nthe monthly bill, but\nby just watching the monthly bill,\n\n100\n00:05:02.780 --> 00:05:06.790\nI allowed ten days to go by with that\nhigher spending, before I even noticed it.\n\n101\n00:05:06.790 --> 00:05:10.290\nSo, just watching the monthly bills,\nis not necessarily the greatest practice.\n\n102\n00:05:10.290 --> 00:05:12.070\nSo, if you really want to contro,l and\n\n103\n00:05:12.070 --> 00:05:16.880\nmonitor your costs,\nit's a better idea, to set up alerts.\n\n104\n00:05:16.880 --> 00:05:20.720\nI knew that their average daily spend\nwas between a dollar and a dollar fifty.\n\n105\n00:05:20.720 --> 00:05:22.280\nI knew that.\nIt was in the proposal I made to\n\n106\n00:05:22.280 --> 00:05:23.750\nthat customer, when we set it all up.\n\n107\n00:05:23.750 --> 00:05:26.130\nThat the files have a really low traffic,\n\n108\n00:05:26.130 --> 00:05:27.610\nI told them it's gonna\nbe really inexpensive.\n\n109\n00:05:27.610 --> 00:05:30.820\nDon't bother setting up a server,\nwe'll just throw it in S3, this'll work.\n\n110\n00:05:30.820 --> 00:05:32.620\nRight.\nSo, I knew that.\n\n111\n00:05:32.620 --> 00:05:37.600\nBut, I didn't expect them to add\nadditional content to that S3 bucket.\n\n112\n00:05:37.600 --> 00:05:42.510\nAnd that's exactly what happened is, I can\nsee exactly what day the price went up,\n\n113\n00:05:42.510 --> 00:05:45.890\nand all I had to do was call them and say,\ndid you guys do something on that day?\n\n114\n00:05:45.890 --> 00:05:47.140\nAnd they said, oh, yeah.\n\n115\n00:05:47.140 --> 00:05:48.940\nThat S3 bug has been working so great.\n\n116\n00:05:48.940 --> 00:05:51.510\nWe decided to stick some videos in there.\n\n117\n00:05:51.510 --> 00:05:52.790\nAnd that's what they did.\n\n118\n00:05:52.790 --> 00:05:57.760\nAnd so, the bandwidth utilization went\nway up cuz it was just static images.\n\n119\n00:05:57.760 --> 00:06:00.260\nNow, there were some videos,\nsome MP4s, or MOVs, or\n\n120\n00:06:00.260 --> 00:06:03.330\nsomething like that that\nwere significantly larger.\n\n121\n00:06:03.330 --> 00:06:06.100\nThere was larger amounts of data,\nand that meant a larger bill.\n\n122\n00:06:06.100 --> 00:06:07.480\nSo, they knew exactly what they did.\n\n123\n00:06:07.480 --> 00:06:08.380\nThey were the ones that did it.\n\n124\n00:06:08.380 --> 00:06:09.900\nSo, they just removed\nthe files from there.\n\n125\n00:06:09.900 --> 00:06:12.610\nAnd then,\nthe spin went back to the way it was.\n\n126\n00:06:12.610 --> 00:06:15.190\nIf I had set up an alert though,\nI could've said, hey,\n\n127\n00:06:15.190 --> 00:06:19.110\nI know the cost is between $1.00 and\n$2.00 a day or whatever.\n\n128\n00:06:19.110 --> 00:06:22.930\nSo, I might set an alert that says,\nlet's allow a spike.\n\n129\n00:06:22.930 --> 00:06:23.520\nSo, maybe I'll say,\n\n130\n00:06:23.520 --> 00:06:27.950\nif it ever exceeds $3 a day,\nsend me an email right then, let me know.\n\n131\n00:06:27.950 --> 00:06:31.090\nAnd I would have known the first day that\nhappened instead of having to wait until\n\n132\n00:06:31.090 --> 00:06:34.980\nthe end of the month and\npotentially take a sizable bill, right?\n\n133\n00:06:34.980 --> 00:06:36.140\nAnd the Amazon guy are great.\n\n134\n00:06:36.140 --> 00:06:38.620\nIf you ever have something go crazy like\nthat you can reach out to the support\n\n135\n00:06:38.620 --> 00:06:41.150\nteam, and if they find out that it's\nan accident, they'll credit you.\n\n136\n00:06:41.150 --> 00:06:42.960\nThey really are good about that.\n\n137\n00:06:42.960 --> 00:06:45.050\nBut you don't wanna rely on that.\n\n138\n00:06:45.050 --> 00:06:46.340\nI should have noticed that ahead of time.\n\n139\n00:06:46.340 --> 00:06:47.990\nI should have set up alerts.\n\n140\n00:06:47.990 --> 00:06:48.490\nAlright.\n\n141\n00:06:48.490 --> 00:06:50.520\nSo, let me show you how to do that.\n\n142\n00:06:50.520 --> 00:06:52.060\nNow, in Amazon we have Cloud Watch.\n\n143\n00:06:52.060 --> 00:06:55.500\nAnd most people think of Cloud Watch for\nmonitoring performance of their servers,\n\n144\n00:06:55.500 --> 00:06:59.880\nperformance of their databases, but\nit can also monitor your spend, right?\n\n145\n00:06:59.880 --> 00:07:01.000\nHow much money you're spending.\n\n146\n00:07:01.000 --> 00:07:02.210\nAnd you can set alerts based on that.\n\n147\n00:07:02.210 --> 00:07:04.000\nAnd it's actually not that hard.\n\n148\n00:07:04.000 --> 00:07:08.440\nSo, to get this set up what we do\nis we jump back to our console, and\n\n149\n00:07:08.440 --> 00:07:13.420\nI'm gonna go into Cloud Watch,\nand when I go into Cloud Watch,\n\n150\n00:07:13.420 --> 00:07:15.250\nyou'll see a lot of the different\nthings that we can do.\n\n151\n00:07:15.250 --> 00:07:18.660\nAnd normally, we're setting up alarms,\nand we're doing things like that, but\n\n152\n00:07:18.660 --> 00:07:20.610\nyou'll see billing right here, right?\n\n153\n00:07:20.610 --> 00:07:24.970\nWe've got metrics on EBS, EC2,\nELB, all these other things, but\n\n154\n00:07:24.970 --> 00:07:28.160\nwe've also got metrics on billing, right?\n\n155\n00:07:28.160 --> 00:07:29.350\nAnd when I go into billing,\n\n156\n00:07:29.350 --> 00:07:32.400\nhere's where I can start to pull\nup like my estimated charges.\n\n157\n00:07:32.400 --> 00:07:35.794\nAnd you can setup alerts based\non the estimated charge, so\n\n158\n00:07:35.794 --> 00:07:39.603\nthat you'll get a notification\nthat lets you know that right, so\n\n159\n00:07:39.603 --> 00:07:42.994\nif I go up to my alarms for\nexample I can create an alarm, and\n\n160\n00:07:42.994 --> 00:07:47.287\nwhen you set up the alarm it asks you\nwhat metric do you want to monitor, and\n\n161\n00:07:47.287 --> 00:07:51.165\nif you look under billing,\nI've got my total estimated charge for\n\n162\n00:07:51.165 --> 00:07:55.089\nthe whole account, and\nI have got my estimated charge by service.\n\n163\n00:07:55.089 --> 00:07:58.711\nSo, in the scenario I was giving you guys,\nI have set up S3 for\n\n164\n00:07:58.711 --> 00:08:02.705\nthis particular customer, and so,\nI can go in here to buy service.\n\n165\n00:08:02.705 --> 00:08:06.630\nAnd I could find AmazonS3,\nI'll just check that one off.\n\n166\n00:08:06.630 --> 00:08:07.810\nRight, and\n\n167\n00:08:07.810 --> 00:08:12.590\nwhen I check it off it adds a little\nmore to the bottom of the screen here.\n\n168\n00:08:12.590 --> 00:08:17.780\nAnd I can see what my current estimated\ncharges are and I can set my alert, right?\n\n169\n00:08:17.780 --> 00:08:21.890\nAnd the way this alert works is,\nlet me see can I move this,\n\n170\n00:08:21.890 --> 00:08:23.640\nmy head's kinda covering some,\nthere we go.\n\n171\n00:08:23.640 --> 00:08:26.470\nAll right, so if we move it around a\nlittle bit you can see here's kind of what\n\n172\n00:08:26.470 --> 00:08:29.790\nthe estimated charges are and\nthey're showing me the last few hours,\n\n173\n00:08:29.790 --> 00:08:31.190\nthe last six hours.\n\n174\n00:08:31.190 --> 00:08:32.900\nSo I can see where I'm\nkind of currently at.\n\n175\n00:08:32.900 --> 00:08:35.570\nAnd then I can set my\nalarm to be appropriate.\n\n176\n00:08:35.570 --> 00:08:36.910\nNow right now I don't have an alarm, so\n\n177\n00:08:36.910 --> 00:08:39.810\nI just have a blue line here\nshowing me my estimated charges.\n\n178\n00:08:39.810 --> 00:08:41.800\nBut on the right side here I\ncan adjust the time range and\n\n179\n00:08:41.800 --> 00:08:44.970\nI can start to figure out\nwhat I want that alarm to be.\n\n180\n00:08:44.970 --> 00:08:48.660\nSo I can adjust this to show me\nyou know an hour or whatever.\n\n181\n00:08:48.660 --> 00:08:53.410\nBut right now my estimated charge is\nreally just about two cents per hour and\n\n182\n00:08:53.410 --> 00:08:55.290\nthat's cuz I've got hardly\nanything in S3 right now.\n\n183\n00:08:55.290 --> 00:08:57.800\nAll right.\n\n184\n00:08:57.800 --> 00:09:01.170\nOn the next screen here's where we can\nactually come in and set the alarm.\n\n185\n00:09:01.170 --> 00:09:02.420\nAnd so I'm gonna create an alarm.\n\n186\n00:09:02.420 --> 00:09:07.860\nAnd maybe I'll call this like\nitprotv-awsdemo-s3-spend.\n\n187\n00:09:07.860 --> 00:09:09.120\nAll right.\n\n188\n00:09:09.120 --> 00:09:16.770\nAnd I'll just put the daily spend for\nAmazonS3.\n\n189\n00:09:16.770 --> 00:09:18.230\nAnd now I can set what I\nwant to set a limit to.\n\n190\n00:09:18.230 --> 00:09:23.674\nFor that customer I knew they were only\ngonna be spending about $1 to $1.50 a day,\n\n191\n00:09:23.674 --> 00:09:27.890\nso I might set my alarm to say if\nit's ever greater than $3, okay?\n\n192\n00:09:27.890 --> 00:09:30.430\nAnd see what it's doing over here?\n\n193\n00:09:30.430 --> 00:09:32.623\nIt's making a chart for me,\nshowing me my current spending,\n\n194\n00:09:32.623 --> 00:09:33.730\nshowing me where the alarm is.\n\n195\n00:09:33.730 --> 00:09:37.152\nAnd so, as soon as I move off\nof that field, it'll update, and\n\n196\n00:09:37.152 --> 00:09:41.110\nnow I can see my alarms way up here,\nand my current spend is way down here.\n\n197\n00:09:41.110 --> 00:09:44.530\nSo, I get a good idea of whether\nthis alert is accurate, right?\n\n198\n00:09:44.530 --> 00:09:47.788\nAnd so I can set that up, and\nthen right down here, I can just say,\n\n199\n00:09:47.788 --> 00:09:51.010\nwhenever this alarm is state is alarm,\nso whenever it goes off.\n\n200\n00:09:51.010 --> 00:09:55.310\nSend a notification to, and\nthen I can define a notification list.\n\n201\n00:09:55.310 --> 00:09:59.130\nAnd I've got one that I use for something\nelse, but I can always create a new list.\n\n202\n00:09:59.130 --> 00:10:01.510\nSo I'll just whip one of those up.\n\n203\n00:10:01.510 --> 00:10:02.970\nAnd, it's an email list.\n\n204\n00:10:02.970 --> 00:10:07.600\nAnd so, I can send an email to whoever\nit is that I need, I can set a topic\n\n205\n00:10:07.600 --> 00:10:12.340\nname here, and who it is that\nI want to send it out to, so.\n\n206\n00:10:12.340 --> 00:10:14.640\nWhoops or\nI can just kill the alarm off altogether.\n\n207\n00:10:14.640 --> 00:10:15.428\nThat's what I meant to do.\n\n208\n00:10:15.428 --> 00:10:18.310\nSo once we do that though,\nthe alarm gets created.\n\n209\n00:10:19.490 --> 00:10:24.560\nAnd now if the spend over goes over that\namount, it'll shoot you that email and\n\n210\n00:10:24.560 --> 00:10:25.670\nyou'll have that notice, right?\n\n211\n00:10:25.670 --> 00:10:27.200\nSo that's kind of the important part here.\n\n212\n00:10:27.200 --> 00:10:29.470\nLet me just recreate this.\n\n213\n00:10:29.470 --> 00:10:32.780\nI hit escape by accident,\nI was trying to hit tab.\n\n214\n00:10:32.780 --> 00:10:35.720\nAnd kind of lost my whole alarm there but\n\n215\n00:10:35.720 --> 00:10:37.540\nwe'll just kind of\nrecreate that real quick.\n\n216\n00:10:37.540 --> 00:10:41.370\nSo if it's greater than $3,\nthere we go, I'll send an alarm, and\n\n217\n00:10:41.370 --> 00:10:43.480\nI'll just use my existing\nnotification list.\n\n218\n00:10:43.480 --> 00:10:44.465\nAnd see, its got me right there.\n\n219\n00:10:44.465 --> 00:10:48.840\nDon@itprotv, it's going to shoot me\nan email and, I'm gonna have that, right?\n\n220\n00:10:48.840 --> 00:10:50.970\nI might wanna create a dedicated list for\nthis, just say,\n\n221\n00:10:50.970 --> 00:10:55.670\na billing notification, cuz maybe I\ndon't want this to go to the IT guys.\n\n222\n00:10:55.670 --> 00:10:59.000\nMaybe I want it to go to accounting,\nso I can set that up, too, but\n\n223\n00:10:59.000 --> 00:11:01.350\nonce that's in place,\nnow we're in business.\n\n224\n00:11:01.350 --> 00:11:05.580\nNow, I could stop right here, and if the\nbilling ever gets over a certain point,\n\n225\n00:11:05.580 --> 00:11:07.340\nthen that's that, right?\n\n226\n00:11:07.340 --> 00:11:11.500\nBut I could add more notifications if\nthere were other people I wanted to reach\n\n227\n00:11:11.500 --> 00:11:15.080\nout to or even better I could\ntake auto scaling actions.\n\n228\n00:11:15.080 --> 00:11:18.840\nNow, for a S3 alert like I'm setting\nup here there's no point in doing that,\n\n229\n00:11:18.840 --> 00:11:21.360\nso I won't even bother with that right.\n\n230\n00:11:21.360 --> 00:11:25.417\nBut if I have an auto scaling group\nthat I'm monitoring right, and\n\n231\n00:11:25.417 --> 00:11:31.560\nI'm monitoring that spend, and I say I\ncan't spend more than $2,000 per day.\n\n232\n00:11:31.560 --> 00:11:35.800\nAnd I might have an auto-scaling group\nthat's growing and growing and growing and\n\n233\n00:11:35.800 --> 00:11:39.420\nit grows to a point where I'm\nspending more than $2,000 a day.\n\n234\n00:11:39.420 --> 00:11:41.190\nRight?\nWell, that's a problem.\n\n235\n00:11:41.190 --> 00:11:42.340\nAnd now I've got to make a choice.\n\n236\n00:11:42.340 --> 00:11:43.180\nWhat's more important to me?\n\n237\n00:11:43.180 --> 00:11:44.430\nPerformance?\n\n238\n00:11:44.430 --> 00:11:45.550\nOr money?\n\n239\n00:11:45.550 --> 00:11:46.330\nRight?\n\n240\n00:11:46.330 --> 00:11:48.080\nSo if money is my choice.\n\n241\n00:11:48.080 --> 00:11:51.310\nIf I can't go over $2,000 because I\njust don't have the budget for it.\n\n242\n00:11:51.310 --> 00:11:56.290\nI can set an auto-scaling action and\nyou could pick an auto-scaling group.\n\n243\n00:11:56.290 --> 00:11:57.370\nLike, I'll pick this one that I've got.\n\n244\n00:11:57.370 --> 00:11:59.610\nI actually don't know what I'm using\nthat for so this could be bad but\n\n245\n00:11:59.610 --> 00:12:00.780\nI'll pick it anyway.\n\n246\n00:12:00.780 --> 00:12:02.610\nAnd then you can tell\nit to take an action.\n\n247\n00:12:02.610 --> 00:12:07.260\nAnd for the actions, you can tell it to\nadd an instance or remove an instance.\n\n248\n00:12:07.260 --> 00:12:12.080\nSo I can say, hey if you start to exceed\n$2,000 a day shutdown an instance,\n\n249\n00:12:12.080 --> 00:12:13.750\nlet's get that spend back\nto where it needs to be.\n\n250\n00:12:13.750 --> 00:12:17.860\nAnd if it stays in alarm it's gonna keep\nshutting down instances until it finally\n\n251\n00:12:17.860 --> 00:12:20.681\ngets it down to the point\nwhere it's at $2,000 a day,\n\n252\n00:12:20.681 --> 00:12:22.618\nyou can force it to\nstay within that limit.\n\n253\n00:12:22.618 --> 00:12:26.190\nNow, you should already be staying in that\nlimit if you've got your auto scaling\n\n254\n00:12:26.190 --> 00:12:30.010\ngroup set with a maximum threshold right,\nyou set a maximum amount of servers.\n\n255\n00:12:30.010 --> 00:12:35.000\nBut maybe an IT guy says, performance\nis low, let me remove that cap and\n\n256\n00:12:35.000 --> 00:12:37.570\nthe accountant is saying,\nwell you don't have the budget for that.\n\n257\n00:12:37.570 --> 00:12:40.390\nThis is a way the accountant\ncan put a check on what the IT\n\n258\n00:12:40.390 --> 00:12:41.130\nguys are doing, right?\n\n259\n00:12:41.130 --> 00:12:43.175\nSo we kinda set that limit up right here.\n\n260\n00:12:43.175 --> 00:12:47.120\nI can tell it to remove that instance\nif this goes to an alarm and\n\n261\n00:12:47.120 --> 00:12:50.510\nnow we're doing more than\njust sending an email, right.\n\n262\n00:12:50.510 --> 00:12:52.330\nUnfortunately that is about it.\n\n263\n00:12:52.330 --> 00:12:54.050\nYou'll see I've also got some EC2 actions.\n\n264\n00:12:54.050 --> 00:12:59.002\nThere's certain types of things that we're\nmonitoring EC2, you can tell it to do\n\n265\n00:12:59.002 --> 00:13:03.050\nthings like halt an instance or\neven take a snapshot of an instance.\n\n266\n00:13:03.050 --> 00:13:05.790\nAnd do other actions like that,\nso you can add those in.\n\n267\n00:13:05.790 --> 00:13:08.960\nYou can even combine them,\nI might send an email and\n\n268\n00:13:08.960 --> 00:13:12.070\ntake an autoscaling action and\ndo an EC2 action.\n\n269\n00:13:12.070 --> 00:13:17.030\nBut my EC2 action is grayed out,\njust because I only chose S3 data, so\n\n270\n00:13:17.030 --> 00:13:21.440\nthere's no EC2 data to act upon here,\nso, all right.\n\n271\n00:13:21.440 --> 00:13:24.920\nSo, once we've got that set, now I've got\nan alarm that's gonna actually notify me,\n\n272\n00:13:24.920 --> 00:13:28.160\nand I can choose what currency\nit's gonna notify in when it's\n\n273\n00:13:28.160 --> 00:13:28.960\ntalking about the spend.\n\n274\n00:13:28.960 --> 00:13:30.170\nWe might wanna adjust that.\n\n275\n00:13:30.170 --> 00:13:31.250\nAnd then I can create that alarm.\n\n276\n00:13:31.250 --> 00:13:39.385\nAnd now, I've got something in place\nwhere if my S3 spend goes over $3 a day,\n\n277\n00:13:39.385 --> 00:13:44.010\nor $3 a hour, day, what did I pick, hour?\n\n278\n00:13:44.010 --> 00:13:44.810\nI think it was an hour.\n\n279\n00:13:44.810 --> 00:13:47.243\nIf it's over $3 an hour,\nthen it is going to go ahead and\n\n280\n00:13:47.243 --> 00:13:49.130\nnotify me that I've got a problem, right?\n\n281\n00:13:49.130 --> 00:13:51.150\nSo that's important.\n\n282\n00:13:51.150 --> 00:13:55.490\nOr actually, here, I set it to\ngreater than $3 for six hours, right?\n\n283\n00:13:55.490 --> 00:13:57.690\nWhich I guess is not really what\nI wanted to achieve here, right?\n\n284\n00:13:57.690 --> 00:14:01.070\nI was really more like\na $1 to $1.50 per day.\n\n285\n00:14:01.070 --> 00:14:03.440\nSo I need to actually go back in and\nedit that to fix it.\n\n286\n00:14:03.440 --> 00:14:04.170\nAnd you can do that, right?\n\n287\n00:14:04.170 --> 00:14:07.060\nYou can choose your alarm,\nand you can choose modify,\n\n288\n00:14:07.060 --> 00:14:09.720\nand you can go right back in there and\nadjust it.\n\n289\n00:14:09.720 --> 00:14:14.140\nSo see here where I've got that greater\nthan $3, so I've got it set here but\n\n290\n00:14:14.140 --> 00:14:17.380\nthat's on a six hour window, right?\n\n291\n00:14:17.380 --> 00:14:21.045\nAnd that's because on the previous\nscreen where we selected the metric,\n\n292\n00:14:21.045 --> 00:14:23.480\nright in here, I had it set for\na six hour window.\n\n293\n00:14:23.480 --> 00:14:26.900\nAnd so if I change that to one day,\nnow it's at that one day.\n\n294\n00:14:26.900 --> 00:14:31.424\nAnd when I move forward,\nnow I've got that greater than three for\n\n295\n00:14:31.424 --> 00:14:33.240\none consecutive period.\n\n296\n00:14:33.240 --> 00:14:37.040\nAnd now it's gonna be a little\nbit larger to cover it.\n\n297\n00:14:37.040 --> 00:14:38.430\nAnd notice I get a warning.\n\n298\n00:14:38.430 --> 00:14:41.300\nIt's saying your billing alarm\nmay not be set up correctly.\n\n299\n00:14:41.300 --> 00:14:45.050\nTo make it work as expected,\nplease set period to six hours.\n\n300\n00:14:45.050 --> 00:14:48.810\nStatistic to maximum to set alarm to\ntrigger on one consecutive period.\n\n301\n00:14:48.810 --> 00:14:51.330\nAnd what that's warning me about\nhere is that apparently CloudWatch,\n\n302\n00:14:51.330 --> 00:14:54.752\nwhen it monitors this particular metric,\nisn't doing it 24 hour number.\n\n303\n00:14:54.752 --> 00:14:57.470\nIt's doing every six hours,\nI'm gonna have to act on that.\n\n304\n00:14:57.470 --> 00:15:01.200\nDown here at the bottom,\nI can see my period is set to one day.\n\n305\n00:15:01.200 --> 00:15:03.780\nBut it's not able to act on that for\nthis metric.\n\n306\n00:15:03.780 --> 00:15:04.890\nAnd that happens sometimes.\n\n307\n00:15:04.890 --> 00:15:07.500\nSo even though I had it set to 24 hours,\nit's not gonna let me do it.\n\n308\n00:15:07.500 --> 00:15:09.400\nSo I'll move it back to 6 hours.\n\n309\n00:15:09.400 --> 00:15:12.360\nBut now I need to make sure that\nI adjust this appropriately.\n\n310\n00:15:12.360 --> 00:15:16.792\nAnd so what I can do is I can say,\nwell, if it's $3 per day and\n\n311\n00:15:16.792 --> 00:15:19.691\nI break that into four six hour periods,\n\n312\n00:15:19.691 --> 00:15:25.000\nwhat's 24 hours divided by what,\nnow what would $3 be divided by 4?\n\n313\n00:15:25.000 --> 00:15:26.201\nSee and the math gets too hard.\n\n314\n00:15:26.201 --> 00:15:27.220\n>> [LAUGH]\n>> So\n\n315\n00:15:27.220 --> 00:15:29.880\nan easier way to do that would just be\nto say four consecutive periods, right.\n\n316\n00:15:29.880 --> 00:15:33.280\nIf I'm over that $3, well,\neven that would be too high, wouldn't it?\n\n317\n00:15:33.280 --> 00:15:34.820\nYeah then I wouldn't\nhave to do the hard math.\n\n318\n00:15:34.820 --> 00:15:41.700\nSo $3 divided by four periods would\nget us down to what is it, 75 cents?\n\n319\n00:15:41.700 --> 00:15:42.800\nYeah 75 cents.\n\n320\n00:15:42.800 --> 00:15:46.960\nSo I would need to set this to\nbasically meter for 75 cents.\n\n321\n00:15:46.960 --> 00:15:49.980\nAnd then if I exceeded that, or it could\nbe easier if I just went to $1, and\n\n322\n00:15:49.980 --> 00:15:52.810\nwe could say if it was $4 for\nthe day, set off the alarm.\n\n323\n00:15:52.810 --> 00:15:55.130\nSo you just have to be aware,\nyou might have to tweak this a little bit,\n\n324\n00:15:55.130 --> 00:15:57.870\ncuz some metrics measure\non different intervals.\n\n325\n00:15:57.870 --> 00:15:59.073\nAnd you'll see that.\n\n326\n00:15:59.073 --> 00:16:01.793\nLike elb's, they monitor every 60 seconds.\n\n327\n00:16:01.793 --> 00:16:03.731\nBut other things don't\nmonitor that same level.\n\n328\n00:16:03.731 --> 00:16:06.556\nSo you just gotta kind of Tweak that,\nso pay attention to period and\n\n329\n00:16:06.556 --> 00:16:09.187\nmake sure you are adjusting your\nspend appropriately for it.\n\n330\n00:16:09.187 --> 00:16:13.218\n>> And that brings up a good question,\nDon, is like sometimes we'll have things\n\n331\n00:16:13.218 --> 00:16:16.210\nthat happen like the company\nyou were trying to work with,\n\n332\n00:16:16.210 --> 00:16:20.181\nthey uploaded some video and that jacked\ntheir bandwidth through the roof and\n\n333\n00:16:20.181 --> 00:16:23.010\nit was like an instance\nthat happened very quickly.\n\n334\n00:16:23.010 --> 00:16:26.350\nSomething that started occurring and\njust put them through the roof,\n\n335\n00:16:26.350 --> 00:16:29.540\nwhat about the opposite types of\nthings it does the same thing but\n\n336\n00:16:29.540 --> 00:16:31.380\nit does it over a longer period of time?\n\n337\n00:16:31.380 --> 00:16:34.510\nWhere the money goes up for the day,\nhow do you account for that?\n\n338\n00:16:34.510 --> 00:16:38.210\nIs that what auto scaling's for\nis that just luck of the draw?\n\n339\n00:16:38.210 --> 00:16:39.910\n>> That becomes a little more challenging,\nright.\n\n340\n00:16:39.910 --> 00:16:42.820\nSo I mean, you can set these alarms for\nreally long periods too.\n\n341\n00:16:42.820 --> 00:16:45.010\nSo you can say like, I don't wanna\nmonitor it just for a single day,\n\n342\n00:16:45.010 --> 00:16:46.650\nmonitor for a week at a time.\n\n343\n00:16:46.650 --> 00:16:50.980\nAnd so, if during that week, we hit\nthat larger spend, send us an alert.\n\n344\n00:16:50.980 --> 00:16:53.850\nAnd then you've also got your cost\nexplorer where you can go and\n\n345\n00:16:53.850 --> 00:16:54.970\nsee it day by day there too.\n\n346\n00:16:54.970 --> 00:16:58.690\nAnd you can kinda see that trend of\ngrowing and it does forecasting.\n\n347\n00:16:58.690 --> 00:17:02.080\nSo you can see what it thinks you're gonna\nhave ten days and twenty days from now.\n\n348\n00:17:02.080 --> 00:17:05.020\nAnd if you look 20 days out, and\nyou're higher than what you can afford,\n\n349\n00:17:05.020 --> 00:17:06.420\nyou know you've got a problem, right?\n\n350\n00:17:06.420 --> 00:17:08.550\nSo you can kind of see\nsome of that forecasting.\n\n351\n00:17:08.550 --> 00:17:11.400\nBeyond that, you're somewhat limited.\n\n352\n00:17:11.400 --> 00:17:15.430\nAnd so a lot of people use third\nparty services to take these logs and\n\n353\n00:17:15.430 --> 00:17:17.080\ninterpret them and\ngenerate logs externally.\n\n354\n00:17:17.080 --> 00:17:18.840\nOr generate alerts externally.\n\n355\n00:17:18.840 --> 00:17:22.420\nAnd you can use services like\nCloud Ability, S3stat.com, those guys.\n\n356\n00:17:22.420 --> 00:17:25.180\nAnd they can generate some really\ngood data for you based off a log.\n\n357\n00:17:25.180 --> 00:17:26.920\nI think we talked about that in\nthe last episode, didn't we?\n\n358\n00:17:26.920 --> 00:17:29.750\nOr, it was either that episode or\none of our monitoring episodes.\n\n359\n00:17:29.750 --> 00:17:32.110\nI know we've talked about it before.\n\n360\n00:17:32.110 --> 00:17:33.770\nBut yeah, so that's basically it.\n\n361\n00:17:33.770 --> 00:17:36.720\nNow that does make me think of\nsomething else cuz I'm talking\n\n362\n00:17:36.720 --> 00:17:39.250\nabout working billing for\nanother customer.\n\n363\n00:17:39.250 --> 00:17:40.190\nRight.\n\n364\n00:17:40.190 --> 00:17:42.050\nAnd, I'm showing you my account here.\n\n365\n00:17:42.050 --> 00:17:45.410\nBut, what if you are one of those\npeople who's responsible for\n\n366\n00:17:45.410 --> 00:17:47.550\nmore than one system that's out there.\n\n367\n00:17:47.550 --> 00:17:51.251\nSo, you're supporting multiple customers\nand they have their own account so\n\n368\n00:17:51.251 --> 00:17:54.231\nthey can pay Amazon directly\nwithout having to go through you.\n\n369\n00:17:54.231 --> 00:17:56.829\nYou don't want to be a resaler or\nproxy, or whatever,\n\n370\n00:17:56.829 --> 00:17:58.814\nbecause then you have to deal with taxes.\n\n371\n00:17:58.814 --> 00:18:01.580\nSo, you let them pay Amazon directly.\n\n372\n00:18:01.580 --> 00:18:03.530\nAnd so they're managing their own account.\n\n373\n00:18:03.530 --> 00:18:07.290\nBut you don't see their\ndata in your account now.\n\n374\n00:18:07.290 --> 00:18:08.350\nSo you have to log into their account.\n\n375\n00:18:08.350 --> 00:18:09.590\nSo now you have two.\n\n376\n00:18:09.590 --> 00:18:13.240\nBut if you have 5, or 10, or 20 customers,\nthat really starts to add up, right.\n\n377\n00:18:13.240 --> 00:18:15.998\nAnd so now you have 20 different\nconsoles you gotta log into,\n\n378\n00:18:15.998 --> 00:18:19.398\nto see barely across 20 different\ncustomers, that gets really, really.\n\n379\n00:18:19.398 --> 00:18:19.939\n>> Old?\n\n380\n00:18:19.939 --> 00:18:21.772\n[LAUGH]\n>> Yeah, yeah it's just cumbersome.\n\n381\n00:18:21.772 --> 00:18:23.720\n[CROSSTALK]\n>> Yeah, and not fun.\n\n382\n00:18:23.720 --> 00:18:28.430\n>> So, fortunately we do have what's\ncalled Consolidated Billing in AWS, where\n\n383\n00:18:28.430 --> 00:18:33.250\nyou can add other Amazon accounts to yours\nto be able to see the billing information.\n\n384\n00:18:33.250 --> 00:18:34.710\nSo if you ever have to monitor this for\n\n385\n00:18:34.710 --> 00:18:38.290\nmore than one customer,\nyou can just add their account to yours.\n\n386\n00:18:38.290 --> 00:18:40.300\nAnd it doesn't let you spend\nmoney on their account,\n\n387\n00:18:40.300 --> 00:18:42.020\nit just lets you monitor their billing.\n\n388\n00:18:42.020 --> 00:18:45.550\nAnd it's great for consultants and\npeople like me that help other people.\n\n389\n00:18:45.550 --> 00:18:47.800\nSo if we want to see that,\n\n390\n00:18:47.800 --> 00:18:50.490\nthat's actually kinda tucked away\nin a little different place.\n\n391\n00:18:50.490 --> 00:18:54.530\nSo you go to your console,\nany of the Amazon console screens.\n\n392\n00:18:54.530 --> 00:18:55.460\nAnd you go up to your name, up top.\n\n393\n00:18:55.460 --> 00:18:59.900\nAnd you're gonna go in here, and you'll\ngo down to Billing & Cost Management.\n\n394\n00:18:59.900 --> 00:19:01.530\nAnd inside of Billing & Cost Management,\n\n395\n00:19:01.530 --> 00:19:04.840\nover here on the left side we'll\nhave Consolidated Billing.\n\n396\n00:19:04.840 --> 00:19:08.920\nAnd that consolidated billing is where\nwe can add other accounts to ours.\n\n397\n00:19:08.920 --> 00:19:10.480\nAnd you'll see right here,\nwe can sign up for\n\n398\n00:19:10.480 --> 00:19:12.650\nconsolidated billing to get that added in.\n\n399\n00:19:12.650 --> 00:19:17.990\nAnd what that's gonna let us do is to come\nin and to add other people's accounts\n\n400\n00:19:17.990 --> 00:19:25.190\nto our system, to be able to then go and\nsee that kind of all in one place.\n\n401\n00:19:25.190 --> 00:19:27.960\nNow notice I have to sign up for\nconsolidated billing.\n\n402\n00:19:27.960 --> 00:19:30.490\nSo it gives me that option to sign up,\nand I can check it.\n\n403\n00:19:30.490 --> 00:19:32.530\nAnd then, once that happens,\n\n404\n00:19:32.530 --> 00:19:36.680\nthey send you an email to validate\nthat you are who you say you are.\n\n405\n00:19:36.680 --> 00:19:38.280\nAnd you have to confirm that email.\n\n406\n00:19:38.280 --> 00:19:42.110\nAnd once it's confirmed,\nwe can start to add some different\n\n407\n00:19:43.140 --> 00:19:45.630\naccounts right here and\nactually get to work.\n\n408\n00:19:45.630 --> 00:19:48.440\nNow that email can take a while to come\nin because Amazon actually has to do some\n\n409\n00:19:48.440 --> 00:19:51.910\nvalidation on their end before you get it,\nso we could wait around here and\n\n410\n00:19:51.910 --> 00:19:54.260\nmake this the longest episode on record or\njust move on.\n\n411\n00:19:54.260 --> 00:19:58.010\nI do wanna make one more comment\nabout consolidated billing though.\n\n412\n00:19:58.010 --> 00:19:59.350\nWhen you start to consolidate billing,\n\n413\n00:19:59.350 --> 00:20:01.990\nwhen you start to collect all the bills\nfrom these different accounts into one\n\n414\n00:20:01.990 --> 00:20:06.080\nplace, a lot of times it can move\nyou into higher level billing tiers.\n\n415\n00:20:06.080 --> 00:20:08.064\nI know that sounds bad, but\nit's actually a good thing.\n\n416\n00:20:08.064 --> 00:20:13.319\nWhen you start to look at things like S3,\nwith S3, they'll charge you one price to\n\n417\n00:20:13.319 --> 00:20:18.590\nyour first terabyte, and then a different\nprice up to your fifth or tenth terabyte.\n\n418\n00:20:18.590 --> 00:20:20.400\nAnd then when you get beyond that\nyou get an even lower price.\n\n419\n00:20:20.400 --> 00:20:23.780\nThe price gest lower and\nlower the more you use.\n\n420\n00:20:23.780 --> 00:20:27.500\nWhen you do consolidated billing\nto combine these accounts,\n\n421\n00:20:27.500 --> 00:20:32.110\nnow you might actually find that you\ndidn't have a single S3 account that\n\n422\n00:20:32.110 --> 00:20:35.880\nwent over a terabyte, but when you\ncombine them, they do go over a terabyte.\n\n423\n00:20:35.880 --> 00:20:37.200\nAnd you get the price discount.\n\n424\n00:20:37.200 --> 00:20:40.600\nYou get that where it kind of starts\nto reduce it and that's really handy.\n\n425\n00:20:40.600 --> 00:20:43.320\nNow that means that we are combining\nit into a single bill.\n\n426\n00:20:43.320 --> 00:20:45.060\nSo now your company is,\n\n427\n00:20:45.060 --> 00:20:48.750\nif you're a contractor, they're not able\nto pay their bills individually anymore.\n\n428\n00:20:48.750 --> 00:20:51.990\nYou pay it as one big bill so\nyou are reselling,\n\n429\n00:20:51.990 --> 00:20:54.200\nyou are having to handle that bill for\nthem.\n\n430\n00:20:54.200 --> 00:20:57.390\nSo as far as a monitoring standpoint,\nwe go a little bit beyond that.\n\n431\n00:20:57.390 --> 00:20:59.380\nBut if you're trying to\noptimize your spend,\n\n432\n00:20:59.380 --> 00:21:03.160\nif you're really trying to get that cost\ndown, consolidated billing can do it.\n\n433\n00:21:03.160 --> 00:21:04.780\nNow you've got these separate accounts.\n\n434\n00:21:04.780 --> 00:21:06.500\nBut they all benefit from each other.\n\n435\n00:21:06.500 --> 00:21:08.390\nThey're still managed independently.\n\n436\n00:21:08.390 --> 00:21:11.200\nBut they're benefiting from each\nother cuz the bill gets combined and\n\n437\n00:21:11.200 --> 00:21:12.320\nyou get some discounts there.\n\n438\n00:21:12.320 --> 00:21:15.340\nSo you can do all your billing\nmonitoring from one place and\n\n439\n00:21:15.340 --> 00:21:16.930\nyou get discounted pricing.\n\n440\n00:21:16.930 --> 00:21:18.230\nThat's kind of a win win right there.\n\n441\n00:21:18.230 --> 00:21:21.150\nSo consolidated billing, definitely check\nit out if you have more than one account.\n\n442\n00:21:21.150 --> 00:21:23.430\nIf you have one account,\nmeans nothing to you,\n\n443\n00:21:23.430 --> 00:21:25.314\nthere is no point in even setting it up.\n\n444\n00:21:25.314 --> 00:21:27.481\nWhich is why you see that\nit is not set up on mine.\n\n445\n00:21:27.481 --> 00:21:29.320\n>> So it's really an incentive to grow or\n\n446\n00:21:29.320 --> 00:21:32.540\nat least look like you're\ngrowing into a larger company.\n\n447\n00:21:32.540 --> 00:21:33.450\nIt's like a tax break.\n\n448\n00:21:33.450 --> 00:21:35.390\n>> It's an incentive to fake growth,\nright?\n\n449\n00:21:35.390 --> 00:21:38.440\n>> Yeah, it's that incentive,\nhey, hey I'm lying to you Amazon.\n\n450\n00:21:38.440 --> 00:21:39.355\nThanks for the tax break.\n\n451\n00:21:39.355 --> 00:21:41.225\n[LAUGH]\n>> It's like when you go to\n\n452\n00:21:41.225 --> 00:21:45.817\nthe volume stores and they're like, hey\nyou can get two giant things of ketchup.\n\n453\n00:21:45.817 --> 00:21:48.398\nAnd save some money when you really just\nneed a very small amount of ketchup.\n\n454\n00:21:48.398 --> 00:21:50.429\n>> Yeah.\nYou just needed the single serving.\n\n455\n00:21:50.429 --> 00:21:51.564\n[LAUGH]\n>> Anyhow.\n\n456\n00:21:51.564 --> 00:21:53.290\nYeah.\nThat's basically it.\n\n457\n00:21:53.290 --> 00:21:56.560\nI know we've spent a lot of time now\non billing and cost management and\n\n458\n00:21:56.560 --> 00:21:57.730\noptimizing and stuff.\n\n459\n00:21:57.730 --> 00:21:59.260\nAnd some of you guys\nare probably thinking out there,\n\n460\n00:21:59.260 --> 00:22:01.590\nwell this is a SysAdmin show\nwhat do I care about it?\n\n461\n00:22:01.590 --> 00:22:02.270\nIt's on the exam.\n\n462\n00:22:02.270 --> 00:22:05.390\nMost of the stuff that we've talked\nabout here, it can show up on the exam.\n\n463\n00:22:05.390 --> 00:22:07.020\nYou need to be aware of it at a minimum.\n\n464\n00:22:07.020 --> 00:22:10.690\nBut in real life, it's nice to be able\nto get your money's worth out of Amazon.\n\n465\n00:22:10.690 --> 00:22:14.310\nAnd they make it a great number of\nways there for you to save money, and\n\n466\n00:22:14.310 --> 00:22:16.230\nstill get great performance and\nresults out of it.\n\n467\n00:22:16.230 --> 00:22:18.356\nSo that's basically it for\nbilling and cost management.\n\n468\n00:22:18.356 --> 00:22:21.668\n>> Well it's awesome stuff anyway\nbecause if you are doing this, and\n\n469\n00:22:21.668 --> 00:22:25.690\nif you're getting ready for the exam,\nI expect that you're actually going to be\n\n470\n00:22:25.690 --> 00:22:28.370\nusing Amazon Web Services\nin your field of business.\n\n471\n00:22:28.370 --> 00:22:31.305\nSo it's good to be able to use this for\nyour clients or\n\n472\n00:22:31.305 --> 00:22:33.210\nwhoever you are working for.\n\n473\n00:22:33.210 --> 00:22:36.510\nSo, it is good to know, so thank you,\nDon, for showing us how we can do this,\n\n474\n00:22:36.510 --> 00:22:39.460\nhow we can monitor our billing,\nkeep an eye on that kind of thing.\n\n475\n00:22:39.460 --> 00:22:40.480\nThat is an important thing.\n\n476\n00:22:40.480 --> 00:22:44.231\nIs there any parting words you have for\nour viewers before we let them go?\n\n477\n00:22:44.231 --> 00:22:45.230\n>> Get down there and spend some money.\n\n478\n00:22:45.230 --> 00:22:46.981\n>> That's right.\n\n479\n00:22:46.981 --> 00:22:50.564\nAll right, that being said, we're gonna go\nahead and close down the show for ITProTV.\n\n480\n00:22:50.564 --> 00:22:52.260\nI've been your host, Daniel Lowery.\n\n481\n00:22:52.260 --> 00:22:53.000\n>> And I'm Don Poset.\n\n482\n00:22:53.000 --> 00:22:55.060\n>> We'll see you next time.\n\n",
          "vimeoId": "146639138"
        }
      ],
      "title": "Billing and Cost Management"
    }
  ],
  "url": "aws-certified-sysops-administrator",
  "vLab": false
}
