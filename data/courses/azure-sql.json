{
  "description": "This show explores the foundational concepts and workings of Azure SQL. We start by defining why you might decide to implement a hosted database in Azure SQL vs an on-premise solution; detailing some of the benefits of moving to Azure SQL. We then describe some of the more advanced benefits of using Azure SQL like using Resource Groups, Geo-Restore, Point-In-Time Restore, and Self-Service Restore. Finally they take a look at the performance tiers as well as Database Throughput Units or DTUs.",
  "descriptionMD": "",
  "length": "37763",
  "name": "Azure SQL",
  "practiceExam": false,
  "subtitle": "Relational Database-as-a-Service",
  "tagUrl": "legacy",
  "topics": [
    {
      "episodes": [
        {
          "description": "In this segment, Daniel and Don give a general overview of what you can expect in the upcoming episodes. They cover what the show's about, the target audience, what will be covered overall, and other topics.",
          "length": "328",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-azuresql/techskills-azuresql-0-0-overview-120715.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-azuresql/techskills-azuresql-0-0-overview-120715-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-azuresql/techskills-azuresql-0-0-overview-120715-sm.jpg",
          "title": "Overview",
          "transcript": "WEBVTT\n\n1\n00:00:00.071 --> 00:00:07.980\n[MUSIC]\n\n2\n00:00:07.980 --> 00:00:12.436\nIn this segment we're gonna take a look at\nthe upcoming Microsoft Azure SQL show that\n\n3\n00:00:12.436 --> 00:00:14.583\nwe have lined up for you here at ITProTV.\n\n4\n00:00:14.583 --> 00:00:16.703\nAnd joining me today to\nhelp us guide through that,\n\n5\n00:00:16.703 --> 00:00:18.488\nwell it's none other than Mr. Don Pezet.\n\n6\n00:00:18.488 --> 00:00:19.393\nHow's it going today Don?\n\n7\n00:00:19.393 --> 00:00:20.990\n>> It's going great Daniel, and\n\n8\n00:00:20.990 --> 00:00:23.885\njust excited to kick off\nanother new series on ITProTV.\n\n9\n00:00:23.885 --> 00:00:27.337\nNow, if you haven't heard about Microsoft\nAzure SQL, let's start there, and\n\n10\n00:00:27.337 --> 00:00:28.757\nwe'll talk about what it is, and\n\n11\n00:00:28.757 --> 00:00:31.379\nwe'll get a chance to see what\nwe're going to be doing here.\n\n12\n00:00:31.379 --> 00:00:34.304\nMicrosoft Azure SQL is\na hosted database service, or\n\n13\n00:00:34.304 --> 00:00:37.099\nrelational database service\nfrom Microsoft, and\n\n14\n00:00:37.099 --> 00:00:41.330\nit's really cool because databases\nhave become so important to companies.\n\n15\n00:00:41.330 --> 00:00:42.539\nYou put your data in, and\n\n16\n00:00:42.539 --> 00:00:46.350\nyou expect to get your data back out when\nyou need it and you expect it to be fast.\n\n17\n00:00:46.350 --> 00:00:50.525\nSo a lot of organizations have to worry\nabout when they build the database making\n\n18\n00:00:50.525 --> 00:00:53.826\nit reliable, making it available,\nmaking it nice and fast and\n\n19\n00:00:53.826 --> 00:00:55.156\nkeeping it maintained.\n\n20\n00:00:55.156 --> 00:00:57.852\nAnd thatâ€™s a lot of work and\ncan be quite expensive.\n\n21\n00:00:57.852 --> 00:01:01.602\nWith Azure SQL, we can get\nMicrosoft to do the work for us.\n\n22\n00:01:01.602 --> 00:01:04.850\nThey'll host the database on\ntheir servers up in Azure cloud.\n\n23\n00:01:04.850 --> 00:01:06.289\nThey'll maintain the servers.\n\n24\n00:01:06.289 --> 00:01:09.091\nIf there's a fault,\nlike a hard drive fails or something,\n\n25\n00:01:09.091 --> 00:01:12.695\ntheir network operations center catches\nit, gets in there and repairs it.\n\n26\n00:01:12.695 --> 00:01:17.117\nThey do all the leg work for us,\nand we get to focus on our data.\n\n27\n00:01:17.117 --> 00:01:18.997\nI need a table with some data in it.\n\n28\n00:01:18.997 --> 00:01:20.356\nI don't care about\nthe underlying database.\n\n29\n00:01:20.356 --> 00:01:22.213\nMicrosoft's already dealt with that for\nme.\n\n30\n00:01:22.213 --> 00:01:24.094\nI can throw that in there,\nget it up and going.\n\n31\n00:01:24.094 --> 00:01:27.614\nNow you can actually get a lot of control\non the database if you want it, or\n\n32\n00:01:27.614 --> 00:01:29.659\nyou can let Microsoft have that control.\n\n33\n00:01:29.659 --> 00:01:33.578\nIt's up to you, but if you're one of those\npeople that just needs a database and\n\n34\n00:01:33.578 --> 00:01:36.211\nwants it to be as reliable and\navailable as possible,\n\n35\n00:01:36.211 --> 00:01:38.450\nMicrosoft Azure SQL is\na great way to do that.\n\n36\n00:01:38.450 --> 00:01:39.506\n>> Yeah, sounds awesome, Don.\n\n37\n00:01:39.506 --> 00:01:44.357\nNow who exactly would be the demographic\nthat we're focusing here with Azure SQL?\n\n38\n00:01:44.357 --> 00:01:46.917\n>> So, there's actually a few\ndifferent types of people.\n\n39\n00:01:46.917 --> 00:01:50.027\nBack in the day, we used to just say,\nwell DBA is database administrators.\n\n40\n00:01:50.027 --> 00:01:54.528\nBut the whole point of Azure SQL is\nthat you don't have to be a DBA anymore.\n\n41\n00:01:54.528 --> 00:01:59.011\nSo the Azure SQL product is great for\npeople like system admins, right?\n\n42\n00:01:59.011 --> 00:02:02.131\nIn the past, you might have been\nresponsible for building up a physical\n\n43\n00:02:02.131 --> 00:02:05.260\nserver to be able to put SQL on there and\nthen turn it over to the dev team.\n\n44\n00:02:05.260 --> 00:02:07.617\nNow, you can just reach out and\nprovision it in Azure.\n\n45\n00:02:07.617 --> 00:02:09.938\nAnd so\nsys admins can really benefit from this.\n\n46\n00:02:09.938 --> 00:02:13.853\nBut developers can benefit from it also,\nbecause you might need a SQL database and\n\n47\n00:02:13.853 --> 00:02:17.843\nyou don't want to mess around the Windows\nserver operating system under the hood.\n\n48\n00:02:17.843 --> 00:02:19.515\nYou don't want to do updates.\n\n49\n00:02:19.515 --> 00:02:21.036\nYou don't want to be saddled with that.\n\n50\n00:02:21.036 --> 00:02:21.755\nYou're a developer.\n\n51\n00:02:21.755 --> 00:02:22.812\nYou want to write your product.\n\n52\n00:02:22.812 --> 00:02:23.766\nYou need a database, but\n\n53\n00:02:23.766 --> 00:02:26.459\nyou don't want to be involved in\nthe interworkings of that database.\n\n54\n00:02:26.459 --> 00:02:28.514\nYou just need a place to put your data.\n\n55\n00:02:28.514 --> 00:02:30.391\nAzure SQL works out great for you too.\n\n56\n00:02:30.391 --> 00:02:34.107\nSo it starts to fall into\nwhat we call dev ops, right?\n\n57\n00:02:34.107 --> 00:02:37.147\nWhere you might be a developer,\nyou might be operations, or\n\n58\n00:02:37.147 --> 00:02:38.708\nyou might be tasked with both.\n\n59\n00:02:38.708 --> 00:02:42.273\nThen this show's really gonna work out\nwell for you, cuz we can show how you can\n\n60\n00:02:42.273 --> 00:02:45.315\nuse Azure SQL and not have to worry\nabout the nitty gritty details.\n\n61\n00:02:45.315 --> 00:02:49.631\nJust let it be done with, and as your\norganization grows, if you're an internet\n\n62\n00:02:49.631 --> 00:02:53.945\nstartup and you're getting rapid growth,\nyou can dial up these databases to get\n\n63\n00:02:53.945 --> 00:02:58.283\nhigher performance and far exceed what\nyou can do with on-premises equipment.\n\n64\n00:02:58.283 --> 00:03:02.355\nSo, really, any of those types of roles,\nthis show is gonna work out well for you.\n\n65\n00:03:02.355 --> 00:03:04.319\n>> Excellent.\nNow that we know who should be watching\n\n66\n00:03:04.319 --> 00:03:06.121\nthis show or\nmight be interested in this show,\n\n67\n00:03:06.121 --> 00:03:07.843\nwhat is it exactly that we're gonna cover.\n\n68\n00:03:07.843 --> 00:03:11.437\nGive us some idea of what we're\ngonna see in the upcoming shows.\n\n69\n00:03:11.437 --> 00:03:14.480\nRight, I've kind of structured the\nepisodes to be broken up into five parts,\n\n70\n00:03:14.480 --> 00:03:17.494\nand in the beginning we're just going\nto talk about implementing Azure SQL.\n\n71\n00:03:17.494 --> 00:03:19.583\nHow do I create that database server.\n\n72\n00:03:19.583 --> 00:03:21.031\nHow do I create the database on it.\n\n73\n00:03:21.031 --> 00:03:24.247\nHow do I get connected to that data\nbase so I can use the darn thing?\n\n74\n00:03:24.247 --> 00:03:25.268\nWe're gonna start out there.\n\n75\n00:03:25.268 --> 00:03:29.110\nSo if you know absolutely zero\nabout Azure SQL you'll be fine..\n\n76\n00:03:29.110 --> 00:03:30.526\nThat's where we're gonna start.\n\n77\n00:03:30.526 --> 00:03:35.463\nBut after that, creating the database\nis one part, using it is another.\n\n78\n00:03:35.463 --> 00:03:36.879\nAnd that's where we're gonna\nbreak into other things.\n\n79\n00:03:36.879 --> 00:03:39.364\nWe'll take a look at how\nto maintain the databases,\n\n80\n00:03:39.364 --> 00:03:41.630\nwhich actually is really\neasy inside of Azure.\n\n81\n00:03:41.630 --> 00:03:44.230\nBut there's some things we can\ndo to help improve performance.\n\n82\n00:03:44.230 --> 00:03:45.642\nWe're gonna see how to optimize and\n\n83\n00:03:45.642 --> 00:03:48.430\ntroubleshoot our database in\nthe event that we're having problems.\n\n84\n00:03:48.430 --> 00:03:51.924\nIf we're running queries and they're\njust not running fast, we can try and\n\n85\n00:03:51.924 --> 00:03:52.588\nfind out why.\n\n86\n00:03:52.588 --> 00:03:55.388\nWe're gonna take a look at\nhow we manage our data,\n\n87\n00:03:55.388 --> 00:03:59.457\nwhich is going to include things like\nbacking up and restoring the data,\n\n88\n00:03:59.457 --> 00:04:03.948\nas well as doing bulk imports or exports\nof data, all sorts of good stuff there.\n\n89\n00:04:03.948 --> 00:04:05.863\nAnd then lastly we're\ngonna talk about security.\n\n90\n00:04:05.863 --> 00:04:10.028\nHow we secure our Azure databases to make\nsure that they are not a weak point,\n\n91\n00:04:10.028 --> 00:04:14.585\nbecause it's a rare week that goes by that\nwe don't worry about some company having\n\n92\n00:04:14.585 --> 00:04:15.452\na data breach.\n\n93\n00:04:15.452 --> 00:04:16.683\nYou don't wanna be that company.\n\n94\n00:04:16.683 --> 00:04:19.167\nSo we'll talk a little bit\nhow to lock those down.\n\n95\n00:04:19.167 --> 00:04:19.783\n>> Awesome.\n\n96\n00:04:19.783 --> 00:04:24.071\nNow Don, I know that a lot, well I know\nfor certain that Microsoft has a SQL exam.\n\n97\n00:04:24.071 --> 00:04:28.007\nIs this show going to map toward that\nexam, or is it something different?\n\n98\n00:04:28.007 --> 00:04:29.790\n>> This one is going to be a little\nsomething different, right?\n\n99\n00:04:29.790 --> 00:04:32.862\nMost of the shows here on ITPro TV\ndo focus on kind of working\n\n100\n00:04:32.862 --> 00:04:36.638\ntowards a certification, but\nthis one's more of a technical skills.\n\n101\n00:04:36.638 --> 00:04:39.241\nWe want to show you guys\nthe really important parts,\n\n102\n00:04:39.241 --> 00:04:42.033\nthe stuff in Azure SQL that\nyou're gonna use everyday.\n\n103\n00:04:42.033 --> 00:04:44.758\nWhen you study for a certification,\nyou learn a lot of great stuff.\n\n104\n00:04:44.758 --> 00:04:47.023\nA lot of great technologies that\nsometimes you don't implement, right?\n\n105\n00:04:47.023 --> 00:04:48.822\nThat just aren't used by a lot of people.\n\n106\n00:04:48.822 --> 00:04:50.865\nWe're gonna focus on the details, right?\n\n107\n00:04:50.865 --> 00:04:53.816\nThe stuff that you know you're\ngoing to use every single day.\n\n108\n00:04:53.816 --> 00:04:55.233\nSo it's all great content.\n\n109\n00:04:55.233 --> 00:04:57.855\nI'm always excited about\nthe tech skills shows that we do.\n\n110\n00:04:57.855 --> 00:05:01.523\nI know they don't lead to a certification\nbut what they do lead to is job success.\n\n111\n00:05:01.523 --> 00:05:04.659\nYou really learn that skill, and\nyou're ready to get out there and\n\n112\n00:05:04.659 --> 00:05:07.861\nimplement it and it's not some\nfringe topic that you may never see.\n\n113\n00:05:07.861 --> 00:05:10.692\n>> Awesome, well it sounds like\na really practical course, so\n\n114\n00:05:10.692 --> 00:05:13.808\nanybody that's interested in Azure SQL,\nthis is the place to be.\n\n115\n00:05:13.808 --> 00:05:15.419\nThese upcoming episodes\nare going to be awesome.\n\n116\n00:05:15.419 --> 00:05:19.358\nWeâ€™re really working hard to\ncreate great content with that, so\n\n117\n00:05:19.358 --> 00:05:21.803\nhopefully we'll see you in the future.\n\n118\n00:05:21.803 --> 00:05:22.303\n[MUSIC]\n\n",
          "vimeoId": "148658779"
        },
        {
          "description": "In this episode, Daniel and Don explore and explain some of the foundational concepts and workings of Azure SQL. They start by defining why you might decide to implement a hosted database in Azure SQL vs an on-premise solution; detailing some of the benefits of moving to Azure SQL. Then they describe some of the more advanced benefits of using Azure SQL like using Resource Groups, Geo-Restore, Point-In-Time Restore, and Self-Service Restore. Finally they take a look at the performance tiers as well as Database Throughput Units or DTUs.",
          "length": "2129",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-azuresql/techskills-azuresql-1-1-intro_to_azure_sql-120715-2.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-azuresql/techskills-azuresql-1-1-intro_to_azure_sql-120715-2-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-azuresql/techskills-azuresql-1-1-intro_to_azure_sql-120715-2-sm.jpg",
          "title": "Introduction to Azure SQL",
          "transcript": "WEBVTT\n\n1\n00:00:00.071 --> 00:00:10.071\n[MUSIC]\n\n2\n00:00:11.231 --> 00:00:16.931\nAll right, greetings everyone and welcome\nto another exciting episode of ITPro TV.\n\n3\n00:00:16.931 --> 00:00:21.291\nI'm your host Daniel Lowrie and in this\nepisode, we're gonna start taking a look\n\n4\n00:00:21.291 --> 00:00:24.720\nat the Microsoft Azure SQL product\navailable out there for you.\n\n5\n00:00:24.720 --> 00:00:29.160\nAnd joining us in the studio today is none\nother than my good friend Mr. Don Pezet.\n\n6\n00:00:29.160 --> 00:00:30.470\nDon welcome to the show.\n\n7\n00:00:30.470 --> 00:00:31.380\nHow are you today?\n\n8\n00:00:31.380 --> 00:00:32.375\n>> I'm doing great Daniel.\n\n9\n00:00:32.375 --> 00:00:36.410\nExcited to talk about some Azure SQL and\nreally highlight what the product is and\n\n10\n00:00:36.410 --> 00:00:38.150\nhow you can benefit from implementing it.\n\n11\n00:00:38.150 --> 00:00:42.130\nSo we're gonna kick off this series with\njust kind of an introduction episode.\n\n12\n00:00:42.130 --> 00:00:44.120\nAnd if you're already\nfamiliar with Azure SQL,\n\n13\n00:00:44.120 --> 00:00:48.070\nI probably won't shock you with anything\nbut I want to talk about why the product\n\n14\n00:00:48.070 --> 00:00:51.490\nis so important to companies and\nwhy it's a great solution for you.\n\n15\n00:00:51.490 --> 00:00:54.420\nAnd then also some other basic\ninformation you need to know\n\n16\n00:00:54.420 --> 00:00:57.450\nbefore you even launch your\nfirst data base instance.\n\n17\n00:00:57.450 --> 00:01:01.330\nLike just some of the stuff we've gotta\nhave in place and understand, fundamental\n\n18\n00:01:01.330 --> 00:01:04.300\nknowledge that if you don't have it when\nyou get out there in the real world,\n\n19\n00:01:04.300 --> 00:01:05.630\nit really starts to kinda mess things up.\n\n20\n00:01:05.630 --> 00:01:09.240\nSo I wanna start there before we dive into\nthe nitty gritty details that we'll do in\n\n21\n00:01:09.240 --> 00:01:09.960\nepisode two.\n\n22\n00:01:09.960 --> 00:01:11.930\n>> Yeah, Don,\nthat's actually a really good idea.\n\n23\n00:01:11.930 --> 00:01:13.690\nLet's start there with why.\n\n24\n00:01:13.690 --> 00:01:16.050\nI mean if I've been in the business for\nany length of time,\n\n25\n00:01:16.050 --> 00:01:19.490\nI've probably got enough wherewithal\nto spin up a SQL server.\n\n26\n00:01:19.490 --> 00:01:21.818\nThat's not too much difficulty there.\n\n27\n00:01:21.818 --> 00:01:25.110\nSo why would I want to\nmove into using Azure SQL?\n\n28\n00:01:25.110 --> 00:01:26.790\nDoes it integrate better?\n\n29\n00:01:26.790 --> 00:01:29.910\nIs this a complete replacement for\nusing a standard SQL Server?\n\n30\n00:01:29.910 --> 00:01:30.950\nWhere do we begin?\n\n31\n00:01:30.950 --> 00:01:31.532\n>> Well let me tell you.\n\n32\n00:01:31.532 --> 00:01:33.971\nDatabases are important, right?\n\n33\n00:01:33.971 --> 00:01:35.805\n30 years ago, if you had a database,\n\n34\n00:01:35.805 --> 00:01:39.600\nthat meant that you had a giant mainframe\nsomewhere that was handling this data.\n\n35\n00:01:39.600 --> 00:01:42.820\nAnd so only large organizations had them.\n\n36\n00:01:42.820 --> 00:01:46.710\nBut, in today's world, even four person\ncompanies might have a database that\n\n37\n00:01:46.710 --> 00:01:49.950\nhandles their product inventory or\nother tracking information.\n\n38\n00:01:49.950 --> 00:01:53.530\nDatabases have become a mission\ncritical piece of organizations, right?\n\n39\n00:01:53.530 --> 00:01:57.110\nIt goes without saying now that pretty\nmuch every company is gonna have that.\n\n40\n00:01:57.110 --> 00:02:00.940\nNow, how you handle\nthat data is up to you.\n\n41\n00:02:00.940 --> 00:02:04.030\nA lot of people follow the traditional\nmodel where they build up their own\n\n42\n00:02:04.030 --> 00:02:06.400\ndatabase servers,\nthey host that information internally.\n\n43\n00:02:06.400 --> 00:02:10.410\nAnd the thought of sticking it\nout in the cloud, it's risky,\n\n44\n00:02:10.410 --> 00:02:14.370\nthere's a lot of trepidation,\na lot of people are intimidated.\n\n45\n00:02:14.370 --> 00:02:16.610\nAnd what the real concern is,\n\n46\n00:02:16.610 --> 00:02:20.780\nis that it's a rare week that goes by that\nyou don't see that news article, such and\n\n47\n00:02:20.780 --> 00:02:24.490\nsuch company had a data breach, so\nand so company got broken into and\n\n48\n00:02:24.490 --> 00:02:28.510\ntheir data got leaked out to the Internet\nand that somebody got at that database.\n\n49\n00:02:28.510 --> 00:02:31.310\nSo the thought of taking this\nmission critical database and\n\n50\n00:02:31.310 --> 00:02:34.790\nsticking it out in the Internet,\nit makes people cringe.\n\n51\n00:02:34.790 --> 00:02:37.185\nA lot of CEOs aren't ready\nto take that risk and do it.\n\n52\n00:02:37.185 --> 00:02:42.098\nBut the reality is that when we use\nMicrosoft to host our databases for\n\n53\n00:02:42.098 --> 00:02:46.924\nus, there's a number of benefits,\nand one of the biggest benefits\n\n54\n00:02:46.924 --> 00:02:51.773\nis that they're managing the security and\nupdates on the back end.\n\n55\n00:02:51.773 --> 00:02:54.613\nAnd you're going to find that\nyou have a more secure and\n\n56\n00:02:54.613 --> 00:02:59.160\nreliable deployment in Azure cloud than\nyou would doing it on premises, right?\n\n57\n00:02:59.160 --> 00:03:01.860\nAnd let me just give you some examples\nof how it's better out there in\n\n58\n00:03:01.860 --> 00:03:03.050\nthe Azure Cloud.\n\n59\n00:03:03.050 --> 00:03:06.670\nSo, if I deploy a database\nserver here on premises,\n\n60\n00:03:06.670 --> 00:03:09.120\nthe first thing I've gotta do is\nI've gotta spec out the hardware.\n\n61\n00:03:09.120 --> 00:03:11.020\nSo, I've gotta go and buy a server.\n\n62\n00:03:11.020 --> 00:03:13.730\nI need to go to Dell or HP or Lenovo,\n\n63\n00:03:13.730 --> 00:03:15.900\nwhoever it is that we're\nbuying servers from this week.\n\n64\n00:03:15.900 --> 00:03:19.770\nAnd I've gotta tell them how many\nCPUs I need, how many cores for\n\n65\n00:03:19.770 --> 00:03:22.160\neach CPU, how many hard drives I need.\n\n66\n00:03:22.160 --> 00:03:25.550\nHow many network cards I need,\nand redundant power supplies, and\n\n67\n00:03:25.550 --> 00:03:28.410\nall the various things that we\norder inside of a server, right?\n\n68\n00:03:28.410 --> 00:03:32.630\nAnd I've gotta pay for that server 100%\nup front before they mail it to me.\n\n69\n00:03:32.630 --> 00:03:34.960\nSo I mean, you might have terms or\nwhatever but\n\n70\n00:03:34.960 --> 00:03:38.290\nyou guys understand what I'm saying,\nis you've gotta buy that server outright.\n\n71\n00:03:38.290 --> 00:03:40.010\nMaybe you do a lease or whatever,\nbut you're gonna pay for\n\n72\n00:03:40.010 --> 00:03:43.130\nthat full price of that server,\nwhether you use it or not.\n\n73\n00:03:43.130 --> 00:03:46.520\nNow once you get the server, you've gotta\ninstall the operating system, you've gotta\n\n74\n00:03:46.520 --> 00:03:50.930\ninstall SQL, and you've gotta create\nyour first database, get that set up.\n\n75\n00:03:50.930 --> 00:03:53.430\nAnd you've gotta hope that all your\nhardware specifications were accurate for\n\n76\n00:03:53.430 --> 00:03:56.300\nthe workload it's about to undergo\nwhen you move it into production.\n\n77\n00:03:56.300 --> 00:03:59.390\nThen once you move it into production,\nyou've got to maintain it.\n\n78\n00:03:59.390 --> 00:04:02.140\nSo each year you've got to make\nsure you renew your warranty.\n\n79\n00:04:02.140 --> 00:04:05.330\nYou've got to monitor for\nhard drive and power supply failures,\n\n80\n00:04:05.330 --> 00:04:06.650\nother component failures.\n\n81\n00:04:06.650 --> 00:04:09.540\nIf there is a failure, you've got to\ntrouble shoot it and correct it and\n\n82\n00:04:09.540 --> 00:04:10.300\nget it back online.\n\n83\n00:04:10.300 --> 00:04:12.300\nOtherwise you have a service outage.\n\n84\n00:04:12.300 --> 00:04:15.080\nAnd then if there's a power outage or\nan Internet outage,\n\n85\n00:04:15.080 --> 00:04:17.840\nyou've gotta make sure that you\nhave redundant network links,\n\n86\n00:04:17.840 --> 00:04:21.050\nyou've gotta make sure that\nyou have backup batteries,\n\n87\n00:04:21.050 --> 00:04:24.780\na UPS system to be able to get\nthe device online during a power outage.\n\n88\n00:04:24.780 --> 00:04:28.030\nGenerators, if you need to\nwithstand a long-term outage.\n\n89\n00:04:28.030 --> 00:04:28.870\nYou've gotta do backups.\n\n90\n00:04:28.870 --> 00:04:31.650\nYou've gotta do replicated\nbackups off site.\n\n91\n00:04:31.650 --> 00:04:35.040\nSo that if you have a site disaster,\nthat you can go to another location and\n\n92\n00:04:35.040 --> 00:04:36.650\nhave access to that database.\n\n93\n00:04:36.650 --> 00:04:39.980\nThere's a lot involved with\nrunning your own database server.\n\n94\n00:04:39.980 --> 00:04:43.690\nBut they're so important that many, many\norganizations do exactly what I just said.\n\n95\n00:04:43.690 --> 00:04:46.855\nI've done that for\nmany organizations where that was my job.\n\n96\n00:04:46.855 --> 00:04:50.910\nI ran that database infrastructure\nto keep it up, stable and happy.\n\n97\n00:04:52.090 --> 00:04:55.180\nAnd ten years ago you had to do\nit yourself, that was how it was.\n\n98\n00:04:55.180 --> 00:04:59.220\nBut now, we can reach out to Microsoft and\nsay hey Microsoft, can you do it for\n\n99\n00:04:59.220 --> 00:04:59.970\nus please?\n\n100\n00:04:59.970 --> 00:05:01.290\nI don't have time for that.\n\n101\n00:05:01.290 --> 00:05:02.780\nAnd Microsoft can do it for us, right?\n\n102\n00:05:02.780 --> 00:05:04.800\nThat's what Azure SQL is all about.\n\n103\n00:05:04.800 --> 00:05:07.790\nMicrosoft, they made Microsoft SQL.\n\n104\n00:05:07.790 --> 00:05:08.940\nThey made that database, so\n\n105\n00:05:08.940 --> 00:05:12.000\nthey have the developers on\nstaff that wrote that software.\n\n106\n00:05:12.000 --> 00:05:16.450\nAnd so, who know that software\nbetter than the people who wrote it?\n\n107\n00:05:16.450 --> 00:05:19.050\nAnd so what Microsoft does is they\nbasically set up data centers around\n\n108\n00:05:19.050 --> 00:05:19.560\nthe world.\n\n109\n00:05:19.560 --> 00:05:21.300\nIf you've work with Azure\nyou know this right.\n\n110\n00:05:21.300 --> 00:05:22.750\nWe have what are called regions.\n\n111\n00:05:22.750 --> 00:05:25.310\nAnd the regions are spread\nall across the globe.\n\n112\n00:05:25.310 --> 00:05:27.550\nAnd they're constantly adding new ones.\n\n113\n00:05:27.550 --> 00:05:33.240\nAnd when you need a SQL server spun up,\ntheir staff of what are arguably\n\n114\n00:05:33.240 --> 00:05:38.060\nthe best trained database admins\nin the world, they spin up\n\n115\n00:05:38.060 --> 00:05:41.960\nthat database instance for you on their\nserver hardware in their data centers.\n\n116\n00:05:41.960 --> 00:05:44.750\nTheir world class data center.\n\n117\n00:05:44.750 --> 00:05:48.870\nThese tens of million, hundreds of\nmillions of dollars worth of data center\n\n118\n00:05:48.870 --> 00:05:51.070\ninfrastructure, they're spinning it up.\n\n119\n00:05:51.070 --> 00:05:52.830\nNow for an organization like ours, right,\n\n120\n00:05:52.830 --> 00:05:55.860\nhere at ITProTV,\nwe're a fairly small company.\n\n121\n00:05:55.860 --> 00:05:59.770\nWe could set up some pretty good equipment\nand get our servers up and going.\n\n122\n00:05:59.770 --> 00:06:03.130\nBut when you start talking about\nredundant Internet connections,\n\n123\n00:06:03.130 --> 00:06:05.390\nthe generators to keep\na building running for\n\n124\n00:06:05.390 --> 00:06:09.370\ndays, full-time staff to\nmonitor a database server.\n\n125\n00:06:09.370 --> 00:06:11.700\nWell, we produce training videos.\n\n126\n00:06:11.700 --> 00:06:13.439\nOur staff's tied up in other activities.\n\n127\n00:06:13.439 --> 00:06:15.993\nWe're not over here monitoring databases.\n\n128\n00:06:15.993 --> 00:06:17.397\nThat's not the business\nthat we want to be in.\n\n129\n00:06:17.397 --> 00:06:19.383\nAnd so, handing that over to Microsoft,\n\n130\n00:06:19.383 --> 00:06:21.996\nwhere they've already got\nworld class data centers,\n\n131\n00:06:21.996 --> 00:06:26.120\nthey've already got infrastructure,\nthey've got a staff monitoring it.\n\n132\n00:06:26.120 --> 00:06:29.100\nIt's something they're\nalready equipped to do, and\n\n133\n00:06:29.100 --> 00:06:31.910\non a scale that's more than likely better\nthan what your organization can do.\n\n134\n00:06:31.910 --> 00:06:35.500\nNow, some of you guys watching this might\nwork for very, very large companies, and\n\n135\n00:06:35.500 --> 00:06:37.250\nthat might not be true.\n\n136\n00:06:37.250 --> 00:06:41.080\nBut for most people, you don't have\nthe staff and infrastructure for that, and\n\n137\n00:06:41.080 --> 00:06:42.570\nMicrosoft does.\n\n138\n00:06:42.570 --> 00:06:47.200\nAnd more importantly, that infrastructure\nis shared amongst many, many clients.\n\n139\n00:06:47.200 --> 00:06:51.144\nAnd so, that big generator\nthat might cost $70,000,\n\n140\n00:06:51.144 --> 00:06:54.130\nyou're just paying for\na very small portion of that.\n\n141\n00:06:54.130 --> 00:06:57.500\nAnd all the other customers are paying for\nportions of it, and so you get it for far,\n\n142\n00:06:57.500 --> 00:07:00.010\nfar less money, than if you were to do\nit yourself where you had to pay for\n\n143\n00:07:00.010 --> 00:07:00.600\n100% of it, right.\n\n144\n00:07:01.890 --> 00:07:05.120\nSo, that's one of the big\nadvantages of using Azure SQL,\n\n145\n00:07:05.120 --> 00:07:06.740\nis that they've got an amazing staff.\n\n146\n00:07:06.740 --> 00:07:08.440\nThey've got an amazing infrastructure.\n\n147\n00:07:08.440 --> 00:07:11.700\nThey've got assets all around the globe,\nand\n\n148\n00:07:11.700 --> 00:07:15.350\nmost of us don't even have that\nas an option on our plate.\n\n149\n00:07:15.350 --> 00:07:17.040\nAnd now we can use Microsoft's.\n\n150\n00:07:17.040 --> 00:07:19.210\nThat's one of the big\nadvantages of using it and\n\n151\n00:07:19.210 --> 00:07:21.350\nwhy there's such an attractive draw to it.\n\n152\n00:07:21.350 --> 00:07:22.380\n>> Yeah, I mean that's awesome.\n\n153\n00:07:22.380 --> 00:07:26.250\nWe're basically outsourcing all\nthe hard stuff to Microsoft,\n\n154\n00:07:26.250 --> 00:07:28.520\nwhere we're getting\nthe top-level everything, right?\n\n155\n00:07:28.520 --> 00:07:30.870\nWe're getting their servers, we're\ngetting their people, their knowledge,\n\n156\n00:07:30.870 --> 00:07:31.760\nyou name it.\n\n157\n00:07:31.760 --> 00:07:34.410\nAll that stuff is getting\npushed off of our plate, and\n\n158\n00:07:34.410 --> 00:07:35.510\ngetting pushed onto Microsoft.\n\n159\n00:07:35.510 --> 00:07:39.640\nAnd hey, like Don said, who better\nto take care of this stuff for us?\n\n160\n00:07:39.640 --> 00:07:43.530\nNow Don, obviously that's not where\nit ends, there's gotta be more to\n\n161\n00:07:43.530 --> 00:07:47.350\nAzure SQL and what it offers for\nus, and how we can use it.\n\n162\n00:07:47.350 --> 00:07:50.109\n>> Yea, so letâ€™s talk about\nsome of the cool things here.\n\n163\n00:07:50.109 --> 00:07:53.199\nBasically it is a platform\nas a service solution, and\n\n164\n00:07:53.199 --> 00:07:57.870\nso as a platform as a service that means\nthey manage the hardware underneath it and\n\n165\n00:07:57.870 --> 00:08:00.778\nthey manage the operating\nsystem underneath it.\n\n166\n00:08:00.778 --> 00:08:04.238\nSo when I go to deploy\na SQL server in Azure.\n\n167\n00:08:04.238 --> 00:08:06.501\nI don't even see the host\noperating system.\n\n168\n00:08:06.501 --> 00:08:09.651\nAnd that's cool, because you know what,\nI think about like,\n\n169\n00:08:09.651 --> 00:08:12.030\nhow I used to spend my\ndays as a sys admin.\n\n170\n00:08:12.030 --> 00:08:15.590\nIs I'd get into the office and\nthe very first thing I did every day, and\n\n171\n00:08:15.590 --> 00:08:18.110\nthe number one thing that\nwas on my task list was\n\n172\n00:08:18.110 --> 00:08:19.730\nto check the status of my backups.\n\n173\n00:08:19.730 --> 00:08:21.980\nDid any backups fail last night?\n\n174\n00:08:21.980 --> 00:08:24.490\nCuz if a backup failed,\nI'd need to know about it right away so\n\n175\n00:08:24.490 --> 00:08:25.400\nI could rerun the backup.\n\n176\n00:08:25.400 --> 00:08:27.980\nI never wanted to go more than\n24 hours without a backup, so\n\n177\n00:08:27.980 --> 00:08:30.110\nthat was job number one.\n\n178\n00:08:30.110 --> 00:08:33.810\nAnd then after that, job number two is\nto start looking through event logs for\n\n179\n00:08:33.810 --> 00:08:34.620\nany system errors.\n\n180\n00:08:34.620 --> 00:08:39.010\nAnd then job number three was to\nbasically go through and do other system\n\n181\n00:08:39.010 --> 00:08:42.550\nmaintenance, look for updates, do testing\nfor the updates before rolling them out.\n\n182\n00:08:42.550 --> 00:08:45.371\nThese were all things that were a part\nof my routine day before I even got to\n\n183\n00:08:45.371 --> 00:08:46.998\nthe tasks that I really wanted to work on.\n\n184\n00:08:46.998 --> 00:08:50.337\nAnd usually it would keep me occupied\nright up and through lunch, so\n\n185\n00:08:50.337 --> 00:08:53.730\nhalf my day was dedicated to\nmaintaining these systems.\n\n186\n00:08:53.730 --> 00:08:57.130\nWith Azure SQL,\nall three of those jobs go away.\n\n187\n00:08:57.130 --> 00:08:59.640\nMicrosoft does the backups for you and\n\n188\n00:08:59.640 --> 00:09:03.850\nwe have what's called a self-service\nrestore where you can quickly restore to\n\n189\n00:09:03.850 --> 00:09:07.200\nany point in time right from\nthe web UI that manages Azure SQL,\n\n190\n00:09:07.200 --> 00:09:11.090\nso you don't have to worry about backups\nor restores anymore, they take care of it.\n\n191\n00:09:11.090 --> 00:09:14.640\nAnd as far as the underlying\noperating system, you never see it.\n\n192\n00:09:14.640 --> 00:09:17.230\nSo if a new service pack comes out,\na new hot fix or\n\n193\n00:09:17.230 --> 00:09:19.850\nwhatever Microsoft supplying it.\n\n194\n00:09:19.850 --> 00:09:23.260\nAnd your database server is spread\nacross what they call an update domain.\n\n195\n00:09:23.260 --> 00:09:25.500\nIt's a group of servers\nthat are in a rack.\n\n196\n00:09:25.500 --> 00:09:28.090\nAnd when they're about to update\nthe server that you're on,\n\n197\n00:09:28.090 --> 00:09:30.960\nthey actually take your database and\nmove it to a different server.\n\n198\n00:09:30.960 --> 00:09:33.830\nAnd update that server and reboot it and\nthen move your database back.\n\n199\n00:09:33.830 --> 00:09:35.740\nOr sometimes just leave\nyou on the other server.\n\n200\n00:09:35.740 --> 00:09:39.040\nBut the point is,\nthey're updating the underlying OS, and\n\n201\n00:09:39.040 --> 00:09:40.660\nyou never see an outage.\n\n202\n00:09:40.660 --> 00:09:44.540\nAnd even SQL, the database server itself,\nthey're updating, patching and\n\n203\n00:09:44.540 --> 00:09:45.850\nmaintaining that.\n\n204\n00:09:45.850 --> 00:09:47.230\nYou don't have to worry about it.\n\n205\n00:09:47.230 --> 00:09:50.182\nSo there's another thing that\nI didn't have to do anymore.\n\n206\n00:09:50.182 --> 00:09:53.700\nAnd then as far as monitoring the event\nlogs, well we still have to watch for\n\n207\n00:09:53.700 --> 00:09:57.800\nevents on the database server itself, cuz\nthose are events that we likely caused.\n\n208\n00:09:57.800 --> 00:09:59.100\nBut we don't have to monitor for\nevents for\n\n209\n00:09:59.100 --> 00:10:01.140\nthe operating system, that's all resolved.\n\n210\n00:10:01.140 --> 00:10:03.940\nThey take care of that\ncompletely transparent to us.\n\n211\n00:10:03.940 --> 00:10:08.300\nSo from that manageability perspective,\nthey really do a lot of work,\n\n212\n00:10:08.300 --> 00:10:10.320\nall done behind the scenes.\n\n213\n00:10:10.320 --> 00:10:13.760\nWe don't have to do it and we really get\nto benefit from the cost savings on that.\n\n214\n00:10:13.760 --> 00:10:18.190\nSo that's one of the best features right\nthere Is the manage service side of it.\n\n215\n00:10:18.190 --> 00:10:21.670\n>> Now Don does that completely remove\nthings like taking tape back ups and\n\n216\n00:10:21.670 --> 00:10:25.672\nmoving them offsite or creating offsite\nback ups is that, is that done away with,\n\n217\n00:10:25.672 --> 00:10:27.250\nwith using this type of a model?\n\n218\n00:10:27.250 --> 00:10:30.510\n>> Yeah it really is, were gonna do\nan episode on back up and restore.\n\n219\n00:10:30.510 --> 00:10:34.006\nBut the back ups actually happen automatic\nso even if we didnt do an episode you're\n\n220\n00:10:34.006 --> 00:10:36.330\nstill kinda covered it happens automatic\n>> And\n\n221\n00:10:36.330 --> 00:10:40.930\nthe backups are stored in a different\nregion than where your database is.\n\n222\n00:10:40.930 --> 00:10:42.653\nSo they're not just\ndoing an offsite backup,\n\n223\n00:10:42.653 --> 00:10:44.698\nthey're backing up to\nan entirely different region.\n\n224\n00:10:44.698 --> 00:10:47.806\nWhich I might have a database server\non the east coast of the U.S.\n\n225\n00:10:47.806 --> 00:10:50.857\nand they might be backing it up\nto the west coast of the U.S., or\n\n226\n00:10:50.857 --> 00:10:53.250\neven another continent, they can do that.\n\n227\n00:10:53.250 --> 00:10:55.690\nAnd you can change that too,\nyou can influence where those go.\n\n228\n00:10:55.690 --> 00:10:57.415\nSo it's some neat stuff that's there.\n\n229\n00:10:57.415 --> 00:11:01.110\nNow I wanna make sure\nthat we mention this,\n\n230\n00:11:01.110 --> 00:11:04.690\nthat using Azure SQL is really impressive,\nright?\n\n231\n00:11:04.690 --> 00:11:06.480\nBut it's not for everybody, and\n\n232\n00:11:06.480 --> 00:11:11.260\nthere's times where you might wanna stick\nwith your on-premises solution, all right?\n\n233\n00:11:11.260 --> 00:11:14.640\nAn example might be where you have\nreally sensitive data, medical records,\n\n234\n00:11:14.640 --> 00:11:15.600\nfor example.\n\n235\n00:11:15.600 --> 00:11:20.830\nAnd you're not comfortable putting patient\nmedical records out there on a cloud\n\n236\n00:11:20.830 --> 00:11:24.240\nwhere you don't know the people\nthat work on that system.\n\n237\n00:11:24.240 --> 00:11:30.180\nNow Microsoft has met numerous regulatory\nrequirements or whatever you know.\n\n238\n00:11:30.180 --> 00:11:33.266\nThey're, I always want to\nsay SaaS 70 complaint,\n\n239\n00:11:33.266 --> 00:11:36.774\nbut that's been replaced,\nit's like SEA 15 or SAE 15.\n\n240\n00:11:37.938 --> 00:11:41.270\nSo their Sarbanes-Oxley compliant,\n\n241\n00:11:41.270 --> 00:11:45.290\nthey're HIPAA compliant as far\nas the stuff that they do.\n\n242\n00:11:45.290 --> 00:11:47.650\nBut then you can obviously\ndeploy onto it and\n\n243\n00:11:47.650 --> 00:11:50.610\ndo things that are horribly configured and\nmanaged and\n\n244\n00:11:50.610 --> 00:11:55.430\nthen your data's at risk, but Microsoft\nis all ready at a lot of those levels.\n\n245\n00:11:55.430 --> 00:11:58.130\nBut if you don't trust that,\nif you're not comfortable with that,\n\n246\n00:11:58.130 --> 00:12:01.380\nthen an on premises solution is still\nright for you, that may be the better way.\n\n247\n00:12:01.380 --> 00:12:04.160\nThe other thing is what\nhappens if I deploy Azure and\n\n248\n00:12:04.160 --> 00:12:05.240\nmy internet connection goes down?\n\n249\n00:12:06.390 --> 00:12:08.030\nI just lost the connection\nto that database.\n\n250\n00:12:08.030 --> 00:12:12.590\nSo if I've got 1000 terminals\ninside of a school, and\n\n251\n00:12:12.590 --> 00:12:15.350\nthey're all connecting to this database\nout in Azure and the internet goes down,\n\n252\n00:12:15.350 --> 00:12:18.270\nI've now got 1000 terminals that\nare now dead in the water, right?\n\n253\n00:12:18.270 --> 00:12:22.249\nSo I might still choose to have an on\npremises server if I don't have a stable\n\n254\n00:12:22.249 --> 00:12:23.966\nInternet connection, right?\n\n255\n00:12:23.966 --> 00:12:29.860\nI mean that's a great solution, and\nyou can even do hybrid environments.\n\n256\n00:12:29.860 --> 00:12:34.500\nWhere we're got on premises SQL servers\nthat are talking to our Azure SQL servers.\n\n257\n00:12:34.500 --> 00:12:37.640\nWhere maybe one's the active and\nthe others backup or visa versa.\n\n258\n00:12:37.640 --> 00:12:40.520\nOr maybe they both just handle\ndifferent sets of data.\n\n259\n00:12:40.520 --> 00:12:44.230\nOr locally I might maintain a read\nonly copy of a database that's stored\n\n260\n00:12:44.230 --> 00:12:45.100\nout in Azure.\n\n261\n00:12:45.100 --> 00:12:48.940\nAnd that way if the Internet ever goes\ndown I've got a read only copy right here\n\n262\n00:12:48.940 --> 00:12:49.740\nthat we can hit.\n\n263\n00:12:49.740 --> 00:12:54.190\nSure, I can't put any new data in, but at\nleast I'm able to still pull up records or\n\n264\n00:12:54.190 --> 00:12:56.990\nwhatever, and maybe do manual\ntransactions during that time.\n\n265\n00:12:56.990 --> 00:13:00.920\nSo there's a lot of flexibility in how\nyou do this, you don't have to go all in.\n\n266\n00:13:00.920 --> 00:13:03.690\nYou can have some stuff in Azure,\nsome stuff local.\n\n267\n00:13:03.690 --> 00:13:05.170\nThat can be permanent or temporary.\n\n268\n00:13:05.170 --> 00:13:07.750\nIt's really up to you how you want\nto go about that, it's neat stuff.\n\n269\n00:13:07.750 --> 00:13:10.730\n>> Awesome, well Don what else\ndo we need to know about SQL\n\n270\n00:13:10.730 --> 00:13:12.760\nas far as an introduction and\ngetting our feet wet?\n\n271\n00:13:12.760 --> 00:13:15.950\nWhat are some of the other particulars\nthat we should be aware of?\n\n272\n00:13:15.950 --> 00:13:19.845\nAll right, let's see, I talked about the\nbackup functionality which they call it\n\n273\n00:13:19.845 --> 00:13:23.380\nGO-restore which is where our backups\nare stored in different areas.\n\n274\n00:13:23.380 --> 00:13:27.600\nAnd we're going to see this, actually we\nshould talk about here in this episode.\n\n275\n00:13:27.600 --> 00:13:30.720\nWhen you spin up a SQL database in Azure,\n\n276\n00:13:30.720 --> 00:13:33.550\nit's going to ask you pick what's\ncalled a performance tier.\n\n277\n00:13:33.550 --> 00:13:37.633\nAnd the performance tier is what dictates\nbasically how beefy this system is\n\n278\n00:13:37.633 --> 00:13:38.348\ngoing to be.\n\n279\n00:13:38.348 --> 00:13:41.588\nAnd the performance tiers\nare one of the cooler features,\n\n280\n00:13:41.588 --> 00:13:46.080\nbecause what it lets you do is move\namongst these tiers based on your needs.\n\n281\n00:13:46.080 --> 00:13:48.850\nAnd they get more expensive as\nyou get to the higher tiers, but\n\n282\n00:13:48.850 --> 00:13:51.490\nif you don't need those features you stay\nat the lower tier and you save money.\n\n283\n00:13:51.490 --> 00:13:53.755\nSo it's really kind of up to\nyou to pick your scaling.\n\n284\n00:13:53.755 --> 00:13:58.330\nWith the geo-restore, with the backups and\nrecoveries in general, and\n\n285\n00:13:58.330 --> 00:14:03.810\ngeo-replication even, with those guys,\nthey're influenced by your service tier.\n\n286\n00:14:03.810 --> 00:14:07.150\nSo we have basic, standard and premium.\n\n287\n00:14:07.150 --> 00:14:09.730\nBasic's the lowest, and\nit's really just designed for test and\n\n288\n00:14:09.730 --> 00:14:10.730\ndevelopment environments.\n\n289\n00:14:10.730 --> 00:14:13.989\nSo this is just something I'm doing,\njust to experiment with Azure with.\n\n290\n00:14:15.055 --> 00:14:18.010\nBasic really shouldn't be used\nin a production environment.\n\n291\n00:14:18.010 --> 00:14:21.140\nYou can, but you'll see that the\nperformance tiers for it are really low.\n\n292\n00:14:21.140 --> 00:14:24.160\nWhen we get to standard,\nthat's the stuff for normal people.\n\n293\n00:14:24.160 --> 00:14:27.120\nAnd starting with standard is where we\nget the real big benefits that we'll see\n\n294\n00:14:27.120 --> 00:14:28.190\na little bit later.\n\n295\n00:14:28.190 --> 00:14:31.940\nAnd then when you go up to the premium,\nthat's when you've got a performance\n\n296\n00:14:31.940 --> 00:14:36.250\ndatabase that needs to be highly tuned,\nand you get that, but it's expensive.\n\n297\n00:14:36.250 --> 00:14:38.170\nIt really starts adding to that cost.\n\n298\n00:14:38.170 --> 00:14:43.060\nSo when I talk about backup and recovery,\nwell, if you do a basic database with\n\n299\n00:14:43.060 --> 00:14:46.880\nMicrosoft, you can actually restore to any\npoint in time for the last seven days.\n\n300\n00:14:46.880 --> 00:14:49.690\nIt only maintains seven days of backups.\n\n301\n00:14:49.690 --> 00:14:53.540\nIf you do a standard tier,\nit's 14 days, and\n\n302\n00:14:53.540 --> 00:14:55.990\nif you do the premium tier, it's 31 days.\n\n303\n00:14:55.990 --> 00:14:59.900\nSo basically it's one week,\ntwo week, or one month recovery.\n\n304\n00:14:59.900 --> 00:15:01.310\nMicrosoft is managing those backups.\n\n305\n00:15:01.310 --> 00:15:06.070\nNow, notice that even at the premium\ntier it only goes back 31 days,\n\n306\n00:15:06.070 --> 00:15:07.310\nright, one month.\n\n307\n00:15:07.310 --> 00:15:09.460\nWhat if I wanna maintain\nbackups each month, or\n\n308\n00:15:09.460 --> 00:15:11.390\neach year going back even further?\n\n309\n00:15:11.390 --> 00:15:12.900\nWell for\nthat we'll need to set up our own backups.\n\n310\n00:15:12.900 --> 00:15:15.670\nAnd you can do that, it's just\nnot covered automatically, right?\n\n311\n00:15:15.670 --> 00:15:18.340\nThe automatic backups are set\nup the way that this one works.\n\n312\n00:15:18.340 --> 00:15:21.760\nSeven days, 14 days or 31 days,\nbased on the tier that we pick.\n\n313\n00:15:21.760 --> 00:15:26.650\nSo the cool part here is that I\nmight spin up a database as a basic\n\n314\n00:15:26.650 --> 00:15:28.630\ndatabase right now,\nas I'm experimenting with it.\n\n315\n00:15:28.630 --> 00:15:31.090\nAnd then when I'm ready\nto go to production,\n\n316\n00:15:31.090 --> 00:15:33.410\nI can convert it to a standard or\na premium.\n\n317\n00:15:33.410 --> 00:15:36.830\nYou can bump up your resources,\nthey call it scaling up, right.\n\n318\n00:15:36.830 --> 00:15:41.300\nWhen it comes to databases,\nif your database is getting slow, and\n\n319\n00:15:41.300 --> 00:15:42.400\nit's not bad queries, right.\n\n320\n00:15:42.400 --> 00:15:45.440\nIt's just the database is\ngetting a little overwhelmed.\n\n321\n00:15:45.440 --> 00:15:48.530\nYou got two choices, you can scale up,\nor you can scale out.\n\n322\n00:15:48.530 --> 00:15:50.494\nWell, scaling out,\nwe do that programatically,\n\n323\n00:15:50.494 --> 00:15:52.009\nwe'll see that later on in the series.\n\n324\n00:15:52.009 --> 00:15:55.131\nBut scaling up is usually hardware.\n\n325\n00:15:55.131 --> 00:15:59.450\nIf I got a server with 16 gigs of RAM,\nI can update it to 32 gigs of ram.\n\n326\n00:15:59.450 --> 00:16:01.272\nIf it's got two processors,\nI can add two more.\n\n327\n00:16:01.272 --> 00:16:04.260\nNow I got four processors,\nright, that's scaling up.\n\n328\n00:16:04.260 --> 00:16:06.230\nIf you think about physical hardware,\nright?\n\n329\n00:16:06.230 --> 00:16:07.540\nSo if I buy a physical server.\n\n330\n00:16:07.540 --> 00:16:11.090\nGo back to the example I mentioned\nat the beginning of the show.\n\n331\n00:16:11.090 --> 00:16:15.190\nI buy a physical server I go to Lenovo,\nand I buy a server from them and it's got\n\n332\n00:16:15.190 --> 00:16:20.370\ntwo processors in it, and they're four\ncores each, so I got eight cores total.\n\n333\n00:16:20.370 --> 00:16:24.020\nAnd I get a couple of hard drives in there\nand some network cards, and off I go.\n\n334\n00:16:24.020 --> 00:16:29.860\nAnd then over time, I realize the Disk IO\nis really bottle-necking my server.\n\n335\n00:16:29.860 --> 00:16:33.490\nMan, it's just so much Disk IO going on,\nand the input and\n\n336\n00:16:33.490 --> 00:16:36.630\noutput operations are really\nexceeding what the drives can handle.\n\n337\n00:16:36.630 --> 00:16:38.520\nI need to upgrade to faster drives.\n\n338\n00:16:38.520 --> 00:16:39.020\nWhat do I do?\n\n339\n00:16:40.090 --> 00:16:41.730\nI gotta go buy new hard drives.\n\n340\n00:16:41.730 --> 00:16:45.690\nAnd I can't swap the hard drives\nwhile the system is on, can I?\n\n341\n00:16:45.690 --> 00:16:48.440\nMaybe, if there's enough empty bays,\nI might be able to do them.\n\n342\n00:16:48.440 --> 00:16:50.980\nBut if the server's already full,\nI'm gonna have to shut it down.\n\n343\n00:16:50.980 --> 00:16:54.390\nI'm gonna have to back it up, shut it\ndown, put the new drives in, restore.\n\n344\n00:16:54.390 --> 00:16:56.020\nI'm gonna have an outage\nthat's gonna be two,\n\n345\n00:16:56.020 --> 00:16:59.880\nthree hours while we go through that whole\nprocess to get the system back online.\n\n346\n00:16:59.880 --> 00:17:03.880\nSo, we schedule that for plan downtime,\nand here I am in the office at Sunday\n\n347\n00:17:03.880 --> 00:17:07.490\nat 2 AM, and working on this server and\njust being miserable.\n\n348\n00:17:07.490 --> 00:17:10.710\nBut in Azure, they've already got\nall the resources on the back end.\n\n349\n00:17:10.710 --> 00:17:13.610\nAnd if I decide, man,\nthis one's running kinda slow and\n\n350\n00:17:13.610 --> 00:17:16.880\nI'm on magnetic storage,\nlet me switch it over to SSDs.\n\n351\n00:17:16.880 --> 00:17:20.550\nYou click a button and you hit OK and\nit transitions your server.\n\n352\n00:17:20.550 --> 00:17:24.180\nOr I move from basic to standard,\nor standard to premium, and\n\n353\n00:17:24.180 --> 00:17:27.970\nit transitions the server, and this\nall happens while the server's online.\n\n354\n00:17:27.970 --> 00:17:30.040\nAnd now,\nI get the benefit of that performance.\n\n355\n00:17:30.040 --> 00:17:35.340\nBut in my opinion, the best part is I\nmight only need that for a little while.\n\n356\n00:17:35.340 --> 00:17:37.520\nAnd then I decided to move back\nto the slower stuff, right?\n\n357\n00:17:38.660 --> 00:17:43.850\nMaybe you work for a shipping company UPS,\nor FedEx, or somebody like that.\n\n358\n00:17:43.850 --> 00:17:46.560\nWell, they get really busy in December.\n\n359\n00:17:46.560 --> 00:17:48.610\nThey, it's the holiday season,\npeople start shipping gifts.\n\n360\n00:17:48.610 --> 00:17:52.170\nThey have to hire extra employees just for\nthat time.\n\n361\n00:17:52.170 --> 00:17:55.380\nSo maybe during that time you spin your\ndata bases up to a higher infrastructure.\n\n362\n00:17:55.380 --> 00:17:57.120\nYou're really getting that money's worth.\n\n363\n00:17:57.120 --> 00:17:59.280\nBut then January rolls around,\nand people are broke.\n\n364\n00:17:59.280 --> 00:18:02.470\nThey just got all the gifts they want,\nand the shipping kind of drops off.\n\n365\n00:18:02.470 --> 00:18:04.360\nSo, you spin your servers\ndown to a lower tier again.\n\n366\n00:18:04.360 --> 00:18:05.950\nYou start saving money.\n\n367\n00:18:05.950 --> 00:18:09.260\nWhen I have that physical server, and\nI put those higher end hard drives in,\n\n368\n00:18:09.260 --> 00:18:12.200\nor put in extra CPUs or\nwhatever, I've paid for\n\n369\n00:18:12.200 --> 00:18:16.340\nit, and now I have it forever,\nwhether I use it or not.\n\n370\n00:18:16.340 --> 00:18:17.850\nI've already got that full expense.\n\n371\n00:18:17.850 --> 00:18:20.680\nI can't just pay per minute or\nper hour for that.\n\n372\n00:18:20.680 --> 00:18:23.790\nI've got it and that's a big negative\nof that physical infrastructure.\n\n373\n00:18:23.790 --> 00:18:28.100\nSo here's another great example of where\nwe can leverage Azure SQLs that we can\n\n374\n00:18:28.100 --> 00:18:30.200\nspin up or spin down the resources,\n\n375\n00:18:30.200 --> 00:18:32.330\nand we're gonna see how to do all\nthat throughout the episodes.\n\n376\n00:18:33.552 --> 00:18:35.070\nAll right,\nsome of the other things that we can do.\n\n377\n00:18:35.070 --> 00:18:40.600\nWhat else do we have here, standard and\nactive geo replication right?\n\n378\n00:18:40.600 --> 00:18:44.680\nWhen you spin up your database you have\nthe option to turn on geo application.\n\n379\n00:18:44.680 --> 00:18:49.390\nWhere a read only copy of your\ndatabase is stored in another region.\n\n380\n00:18:49.390 --> 00:18:52.830\nIf you do a standard or premium tier\ndatabase it's already doing this for you.\n\n381\n00:18:52.830 --> 00:18:57.170\nIt's doing a standard\nreplica to another region.\n\n382\n00:18:57.170 --> 00:19:00.680\nJust by default, Microsoft will pick one\nfor you, it will usually be whichever one\n\n383\n00:19:00.680 --> 00:19:04.310\nis not the busiest, but you can\ninfluence where's it's going to be also.\n\n384\n00:19:04.310 --> 00:19:08.511\nFor a standard replication,\nyou've got your production database,\n\n385\n00:19:08.511 --> 00:19:12.860\nand that's the one you use, and the backup\nis invisible to you, you don't see it, but\n\n386\n00:19:12.860 --> 00:19:14.380\nit is out there somewhere.\n\n387\n00:19:14.380 --> 00:19:19.060\nAnd if Microsoft ever had a full region\nfailure where the whole region went down,\n\n388\n00:19:19.060 --> 00:19:20.620\nthey would activate your back-up for you.\n\n389\n00:19:20.620 --> 00:19:22.290\nIt would come up, and it's done.\n\n390\n00:19:22.290 --> 00:19:23.370\nYou don't even get involved.\n\n391\n00:19:23.370 --> 00:19:27.400\nA whole data center could go down and\nyou don't even get a phone call.\n\n392\n00:19:27.400 --> 00:19:30.950\nThey just cut right over to it,\nit's done, and that's it.\n\n393\n00:19:30.950 --> 00:19:32.390\nYou never see that standby, but\n\n394\n00:19:32.390 --> 00:19:35.460\nit is there and it's ready to\ncome up at a moment's notice.\n\n395\n00:19:35.460 --> 00:19:38.590\nAnd it's being maintained, they're\ndoing asynchronous replication to it so\n\n396\n00:19:38.590 --> 00:19:42.750\nit can be a few seconds behind, but\nthe data will be right over there and\n\n397\n00:19:42.750 --> 00:19:44.460\nready to launch as soon as\nthe failure's detected.\n\n398\n00:19:44.460 --> 00:19:49.595\nIf you go to the premium model though,\nthat's where you can do the active\n\n399\n00:19:49.595 --> 00:19:53.980\ngeo-replication, and with active, not only\nis there a standby, but you know about it.\n\n400\n00:19:53.980 --> 00:19:55.116\nIt's there and you can access it.\n\n401\n00:19:55.116 --> 00:19:59.710\nIt's read only, but that means if you\nwanna run one off back-ups, if you wanna\n\n402\n00:19:59.710 --> 00:20:04.680\nrun giant reports that take 20 minutes to\nrun, you can run them against the replica.\n\n403\n00:20:04.680 --> 00:20:07.320\nAnd that way it doesn't effect the\nperformance of your main server because\n\n404\n00:20:07.320 --> 00:20:08.870\nit's hitting this back end server.\n\n405\n00:20:08.870 --> 00:20:11.170\nSo you can actually start\nto use the replica, and\n\n406\n00:20:11.170 --> 00:20:13.850\nthat's why they call it\nan active geo-replication,\n\n407\n00:20:13.850 --> 00:20:16.699\nbecause that other server's active and\navailable to you, versus the standard one.\n\n408\n00:20:18.280 --> 00:20:19.740\nLet's see what else do we have.\n\n409\n00:20:19.740 --> 00:20:21.790\nWe already talked about\nSelf Service Restore.\n\n410\n00:20:21.790 --> 00:20:23.730\nOh versions of SQL.\n\n411\n00:20:23.730 --> 00:20:27.370\nSo right now Azure SQL actually\nsupport two different platforms.\n\n412\n00:20:27.370 --> 00:20:32.110\nThey support SQL 2012, and SQL 2014,\nwhich are version 11 and version 12.\n\n413\n00:20:32.110 --> 00:20:37.120\nAnd when you deploy a database,\nyou just pick from a little box and\n\n414\n00:20:37.120 --> 00:20:39.050\nsay I want 2012 or I want 2014.\n\n415\n00:20:39.050 --> 00:20:41.600\nIt's version 11, version 12.\n\n416\n00:20:41.600 --> 00:20:46.730\nAnd 2016, SQL 2016, it's almost out.\n\n417\n00:20:46.730 --> 00:20:48.410\nI guess depending on when\nyou watch this video,\n\n418\n00:20:48.410 --> 00:20:50.590\nit may have already been\nreleased to be manufactured.\n\n419\n00:20:50.590 --> 00:20:54.150\nRight now, it's still in some of the tech\npreviews, but it will be released soon,\n\n420\n00:20:54.150 --> 00:20:59.920\nand when that happens if I want to deploy\na new database I just click version 13.\n\n421\n00:20:59.920 --> 00:21:02.370\nI click the 2016 option and\nit will deploy that way.\n\n422\n00:21:02.370 --> 00:21:06.010\nSo I don't have to worry about the\nunderlying OS and the infrastructure and\n\n423\n00:21:06.010 --> 00:21:07.340\ndoing upgrades.\n\n424\n00:21:07.340 --> 00:21:09.160\nThey can just do it for me and\n\n425\n00:21:09.160 --> 00:21:11.850\nnow it's done and we don't have\nto worry about that any more.\n\n426\n00:21:11.850 --> 00:21:15.640\nIt's really nice to have all those things\nthat we used to have to fuss with,\n\n427\n00:21:15.640 --> 00:21:16.600\njust be out of the picture.\n\n428\n00:21:16.600 --> 00:21:17.420\n>> Yeah it's very cool.\n\n429\n00:21:17.420 --> 00:21:21.940\nThis Azure stuff is starting to look very,\nvery enticing to me as a matter of fact.\n\n430\n00:21:21.940 --> 00:21:24.930\nNow Don, you were talking about\nperformance and scaling up and\n\n431\n00:21:24.930 --> 00:21:27.280\nscaling out and\nall these different things.\n\n432\n00:21:27.280 --> 00:21:30.460\nWhen it comes to those different\nperformance deals, help us out with that.\n\n433\n00:21:30.460 --> 00:21:34.230\nWhat do I get when I choose one\nperformance tier over another?\n\n434\n00:21:34.230 --> 00:21:36.150\nHow do I figure that out?\n\n435\n00:21:36.150 --> 00:21:38.410\n>> All right, so the main thing.\n\n436\n00:21:38.410 --> 00:21:39.890\nThere's a few little differences.\n\n437\n00:21:39.890 --> 00:21:43.230\nYou'll see in the next episode when we\nstart to create some databases where\n\n438\n00:21:43.230 --> 00:21:45.880\nif I go with a standard, or a premium, or\n\n439\n00:21:45.880 --> 00:21:49.790\nwhatever, that there's hard\ndrive sizes that come into play.\n\n440\n00:21:49.790 --> 00:21:53.160\nAnd let me see if I can spin this up,\nand show you guys real quick.\n\n441\n00:21:53.160 --> 00:21:56.100\nSo I'm gonna get into\nthe Azure portal here, and\n\n442\n00:21:56.100 --> 00:22:00.790\nI'm just gonna jump into my SQL databases,\nand let's say I go to spin one up.\n\n443\n00:22:00.790 --> 00:22:02.400\nWhen you go to spin up a SQL database,\n\n444\n00:22:02.400 --> 00:22:06.390\nit's gonna ask you to pick from\na number of different things.\n\n445\n00:22:06.390 --> 00:22:11.410\nAnd we can kind of see it over here\nwhere it's asking for the pricing tier.\n\n446\n00:22:11.410 --> 00:22:14.460\nNow they call it a pricing tier cuz they\ndo get more expensive as they go up, but\n\n447\n00:22:14.460 --> 00:22:16.850\nwhat it really is,\nis a performance tier, right.\n\n448\n00:22:16.850 --> 00:22:20.050\nHow much performance do you\nwant to get out of this system?\n\n449\n00:22:20.050 --> 00:22:24.670\nAnd so when you click on that, it's gonna\ndisplay the various tiers for us and\n\n450\n00:22:24.670 --> 00:22:27.590\nlet me just hit view all here so\nwe'll get the whole list.\n\n451\n00:22:27.590 --> 00:22:31.872\nAnd try and break into these here.\n\n452\n00:22:31.872 --> 00:22:34.390\nAll right so, you will see,\nlike I have these P1, P2, P4,\n\n453\n00:22:34.390 --> 00:22:38.250\nthe P's those are the premium ones,\nright those are the high end ones.\n\n454\n00:22:38.250 --> 00:22:42.080\nAnd as I scroll down I will see the S's\nand S's are the standards, right,\n\n455\n00:22:42.080 --> 00:22:45.297\nS0 through, S,\nI think it goes through S 5 now.\n\n456\n00:22:45.297 --> 00:22:49.060\nThey add new ones all the time, so\nactually I guess it only goes through S3.\n\n457\n00:22:49.060 --> 00:22:53.140\nSo we have S0 through S3 and then we've\ngot B for basic right there at the bottom.\n\n458\n00:22:53.140 --> 00:22:55.960\nAnd as you look at each one they\ntell you things, like the size.\n\n459\n00:22:55.960 --> 00:22:59.640\nMy standards can go up to 250 GB in size,\nso\n\n460\n00:22:59.640 --> 00:23:05.590\nmy database is gonna hit that max cap\nat 250 GB, but if I go up to premium.\n\n461\n00:23:05.590 --> 00:23:08.940\nA P1 has 500 gigs.\n\n462\n00:23:08.940 --> 00:23:11.873\nBut if I go even higher,\nI can go to like a P6 and\n\n463\n00:23:11.873 --> 00:23:15.121\nget 500 gigs and\ngo to a P11 and get a terabyte.\n\n464\n00:23:15.121 --> 00:23:17.540\nSo I could have a database\nthat's a terabyte in size.\n\n465\n00:23:17.540 --> 00:23:20.740\nIf I do that basic one, the one I said\nthat's really just for testing or\n\n466\n00:23:20.740 --> 00:23:22.880\nwhatever, you'll see it's up to two gigs.\n\n467\n00:23:22.880 --> 00:23:26.040\nAnd you'll see some features that\naren't included, like when we go\n\n468\n00:23:26.040 --> 00:23:31.620\nwith the standard, notice how I've got\nstandard geo-replication that I mentioned.\n\n469\n00:23:31.620 --> 00:23:36.800\nAnd if we go up to premium,\nwe've got active geo-replication, right,\n\n470\n00:23:36.800 --> 00:23:41.860\nthat's included with that tier, but down\nat basic, I don't have replication at all.\n\n471\n00:23:41.860 --> 00:23:46.860\nI've got point in time restore up to\nseven days back, but no replication, so\n\n472\n00:23:46.860 --> 00:23:51.090\nif there's a regional data center failure,\nthis basic database may go offline.\n\n473\n00:23:51.090 --> 00:23:53.040\nNow that's a very rare occurrence.\n\n474\n00:23:53.040 --> 00:23:56.388\nI can't think of the last time that\nhappened, but it can happen, and\n\n475\n00:23:56.388 --> 00:23:58.019\nwe're not covered with a basic.\n\n476\n00:23:58.019 --> 00:24:01.060\nBut again, if it's not in production,\nwhat do we care?\n\n477\n00:24:01.060 --> 00:24:06.490\nAll right, now the other thing though,\nare these DTUs.\n\n478\n00:24:06.490 --> 00:24:09.260\nDTUs, those are database\ntransaction units,\n\n479\n00:24:09.260 --> 00:24:13.880\nand it's how Microsoft measures\nperformance on these servers.\n\n480\n00:24:13.880 --> 00:24:16.860\nAnd so, when you buy a server,\nor you spin up an instance, and\n\n481\n00:24:16.860 --> 00:24:19.990\nyou set it as a basic, you get five DTUs.\n\n482\n00:24:19.990 --> 00:24:21.730\nAnd as you look at some\nof these other ones,\n\n483\n00:24:21.730 --> 00:24:23.460\nyou'll see where they start to go up.\n\n484\n00:24:23.460 --> 00:24:29.430\nSo an S0 has 10 DTUs, and then we\nget up to an S3 which has 100 DTUs,\n\n485\n00:24:29.430 --> 00:24:33.960\nand then we start getting up into\nthe premiums, all they way up to 1750.\n\n486\n00:24:33.960 --> 00:24:37.533\nOne thousand, seven hundred and\nfifty DTUs on this system,\n\n487\n00:24:37.533 --> 00:24:42.170\nand that's the big part that really\nmakes the difference on price.\n\n488\n00:24:42.170 --> 00:24:47.800\nNotice that the basic one, if I spin up\na basic database that's running 24 hours\n\n489\n00:24:47.800 --> 00:24:53.830\na day, seven days a week, all month long,\nit's gonna cost me five dollars per month.\n\n490\n00:24:53.830 --> 00:24:55.270\nRight, five bucks.\n\n491\n00:24:55.270 --> 00:24:57.510\nSo if you wanna start learning Azure SQL,\nor\n\n492\n00:24:57.510 --> 00:25:00.290\nyou wanna mess around with some\nof the basics, $5 a month and\n\n493\n00:25:00.290 --> 00:25:03.100\nyou can have that basic database up and\nit's no big deal.\n\n494\n00:25:03.100 --> 00:25:07.217\nWhen you start adding things like\nreplication and increased DTUs, it starts\n\n495\n00:25:07.217 --> 00:25:11.490\nto get more expensive, And an S0,\nwhich gets you ten DTUs, is $15 a month.\n\n496\n00:25:11.490 --> 00:25:14.360\nStill pretty affordable, right,\nIf I need that database?\n\n497\n00:25:14.360 --> 00:25:17.130\nBut if I want to go all\nthe way up to a P11 Premium,\n\n498\n00:25:17.130 --> 00:25:19.790\nwith 1750 DTUs,\nit's $7,000 a month, right?\n\n499\n00:25:19.790 --> 00:25:24.015\n$7,000 a month or\nwhat does that work out to?\n\n500\n00:25:24.015 --> 00:25:25.060\n$84,000 a year?\n\n501\n00:25:25.060 --> 00:25:25.750\nIs that good math?\n\n502\n00:25:25.750 --> 00:25:27.920\nI think that's right.\n\n503\n00:25:27.920 --> 00:25:28.740\n>> That's a lot of money.\n\n504\n00:25:28.740 --> 00:25:29.525\n>> It's a lot of money.\n\n505\n00:25:29.525 --> 00:25:31.220\n>> [LAUGH]\n>> So we say that's a lot of money, right?\n\n506\n00:25:31.220 --> 00:25:33.120\nAnd it does sound like a lot of money,\n\n507\n00:25:33.120 --> 00:25:38.140\nbut If you understand what you're getting,\nit's actually a big deal.\n\n508\n00:25:38.140 --> 00:25:40.690\nAnd understanding what you're getting\nmeans we need to understand what these\n\n509\n00:25:40.690 --> 00:25:41.890\nDTUs are, all right?\n\n510\n00:25:41.890 --> 00:25:44.610\nAnd the way it's listed here\nis really kind of confusing,\n\n511\n00:25:44.610 --> 00:25:46.700\nbecause they don't tell you, right?\n\n512\n00:25:46.700 --> 00:25:50.370\nMicrosoft had to have some way to measure\ndatabase performance to figure out\n\n513\n00:25:50.370 --> 00:25:51.220\nhow to bill.\n\n514\n00:25:51.220 --> 00:25:54.420\nThe problem is,\ndatabases can be really different.\n\n515\n00:25:54.420 --> 00:26:00.190\nSome databases are what are called OLAP\ndatabases, online analysis processing.\n\n516\n00:26:00.190 --> 00:26:01.730\nThat means you've got a database\nwith a bunch of data,\n\n517\n00:26:01.730 --> 00:26:04.910\nand you're analyzing that data,\nyou're reading from it.\n\n518\n00:26:04.910 --> 00:26:07.200\nSo we use Amazon as an example.\n\n519\n00:26:07.200 --> 00:26:11.220\nWhen you go to Amazon's website, and you\nget that big search box at the top, and\n\n520\n00:26:11.220 --> 00:26:12.030\nyou start to do a search.\n\n521\n00:26:12.030 --> 00:26:14.340\nSo I search for the X-files DVD.\n\n522\n00:26:14.340 --> 00:26:15.770\nSo, I type that in.\n\n523\n00:26:15.770 --> 00:26:18.330\nThere's a search going on on the back\nend against their product database.\n\n524\n00:26:18.330 --> 00:26:20.490\nThey have a massive product database, and\n\n525\n00:26:20.490 --> 00:26:23.060\nI'm just reading from it,\nthat's analysis, right?\n\n526\n00:26:23.060 --> 00:26:28.340\nHeavy read operation, and the more of that\ndatabase that's cached in RAM, the better.\n\n527\n00:26:28.340 --> 00:26:32.930\nSo, that's gonna be DSKO for\nreads and RAM, cache in RAM, right?\n\n528\n00:26:32.930 --> 00:26:35.530\nThat's what's gonna impact\nin all app database.\n\n529\n00:26:35.530 --> 00:26:40.070\nBut then I find the DVD I want, I add it\nto my shopping cart, and I got to buy it.\n\n530\n00:26:40.070 --> 00:26:41.530\nNow I'm creating an order.\n\n531\n00:26:41.530 --> 00:26:45.120\nThey ship me over to a different\ndata base that's an OLTP data base.\n\n532\n00:26:45.120 --> 00:26:47.870\nOnline transaction processing.\n\n533\n00:26:47.870 --> 00:26:49.150\nNow, I'm creating an order.\n\n534\n00:26:49.150 --> 00:26:51.060\nI'm writing to the data base.\n\n535\n00:26:51.060 --> 00:26:52.010\nAll right?\n\n536\n00:26:52.010 --> 00:26:56.610\nBecause I'm writing a new order, is there\ngonna be anything in cache to help me?\n\n537\n00:26:56.610 --> 00:26:57.850\nNo it's a new order.\n\n538\n00:26:57.850 --> 00:27:01.180\nCache is useless, so OLTP,\nI shouldn't say it's useless,\n\n539\n00:27:01.180 --> 00:27:03.440\nit's just not as effective with OLAP.\n\n540\n00:27:03.440 --> 00:27:06.420\nBut with OLTP, cache isn't so\nimportant so, I mean,\n\n541\n00:27:06.420 --> 00:27:09.417\na giant amount of RAM isn't as important\nunless I have really slow disk I/O.\n\n542\n00:27:09.417 --> 00:27:12.590\nDisk I/O is what's important, because\nI need to write that transaction in my\n\n543\n00:27:12.590 --> 00:27:16.780\ntransaction log, and then I need to write\nthe transaction to the actual database.\n\n544\n00:27:16.780 --> 00:27:18.570\nThose write operations are happening.\n\n545\n00:27:18.570 --> 00:27:19.870\nDifferent performance.\n\n546\n00:27:19.870 --> 00:27:22.470\nAnd both of them are using CPU cycles,\ncuz we gotta,\n\n547\n00:27:22.470 --> 00:27:25.540\nsomething's actually performing all\nthese tasks and it's your processor.\n\n548\n00:27:25.540 --> 00:27:29.650\nSo, if some people are OLAP heavy and\nsome people are OLTP heavy, and\n\n549\n00:27:29.650 --> 00:27:34.690\nother people are balanced between the two,\nhow do you effectively bill that?\n\n550\n00:27:34.690 --> 00:27:37.080\nSo what Microsoft did is\nthey invented a new metric.\n\n551\n00:27:37.080 --> 00:27:39.120\nAnd I know what you're thinking like,\ncrap.\n\n552\n00:27:39.120 --> 00:27:41.440\nThey invented something new or\ndeviating from the standard.\n\n553\n00:27:41.440 --> 00:27:46.320\nThey created dtu's and\na DTU is an aggregate of the cpu,\n\n554\n00:27:48.200 --> 00:27:50.910\ndisk access, network access and\na few other things.\n\n555\n00:27:50.910 --> 00:27:53.950\nThey just kind of roll it all\nup in this one thing, and\n\n556\n00:27:53.950 --> 00:27:58.600\nwhat they did is they said okay if\nwe take a standard run of the mill\n\n557\n00:27:58.600 --> 00:28:03.690\naverage server, how many\ntransactions per second can it do?\n\n558\n00:28:03.690 --> 00:28:07.140\nAnd they basically took that and kind of\nmapped that to what became these dtu's.\n\n559\n00:28:07.140 --> 00:28:08.970\nNow these dtu's are not\ntransactions per second.\n\n560\n00:28:08.970 --> 00:28:10.470\nThat's not what these numbers are.\n\n561\n00:28:10.470 --> 00:28:12.850\nThese numbers are just how\nmany dtu's the server has.\n\n562\n00:28:12.850 --> 00:28:16.530\nBut Microsoft did a study and they showed\nhow many transactions per second you can\n\n563\n00:28:16.530 --> 00:28:19.090\nexpect with each of these\ndifferent instances.\n\n564\n00:28:19.090 --> 00:28:22.300\nThe problem is, this study,\nit was written by a PhD or something.\n\n565\n00:28:22.300 --> 00:28:24.180\nIt is really kind of hard to analyze.\n\n566\n00:28:24.180 --> 00:28:27.785\nSo I created some little charts that kind\nof break it down into something that's\n\n567\n00:28:27.785 --> 00:28:28.755\na little more human readable.\n\n568\n00:28:28.755 --> 00:28:30.095\nAnd I wanna show you those to you.\n\n569\n00:28:30.095 --> 00:28:32.085\nSo here's my chart and\nI know it's not beautiful.\n\n570\n00:28:32.085 --> 00:28:35.385\nI'm not a master chart maker or anything,\nbut these are the DTU maximums for\n\n571\n00:28:35.385 --> 00:28:35.915\neach level.\n\n572\n00:28:35.915 --> 00:28:41.085\nSo we've got Basic with only five DTUs,\nthe S0 through S3 and the P1 through P11.\n\n573\n00:28:41.085 --> 00:28:45.215\nAnd when you're watching this\nvideo they may have added more.\n\n574\n00:28:45.215 --> 00:28:48.015\nThey add more all the time.\n\n575\n00:28:48.015 --> 00:28:51.530\nThe P6 and P11,\nthose just came out six months ago, maybe.\n\n576\n00:28:51.530 --> 00:28:54.560\nEven the S3 and the S0,\nno wait, S3 has been around,\n\n577\n00:28:54.560 --> 00:28:58.440\nS0 was the new one, so S0 didn't always\nexist, they brought that one in because\n\n578\n00:28:58.440 --> 00:29:02.410\npeople were complaining about the basic,\nand the DTUs change.\n\n579\n00:29:02.410 --> 00:29:06.300\nWhen I started Azure SQL,\nthe basic only gave you 1 DTU.\n\n580\n00:29:06.300 --> 00:29:06.980\nNow it's 5.\n\n581\n00:29:06.980 --> 00:29:09.420\nSame price, they just increased\nits performance five times.\n\n582\n00:29:09.420 --> 00:29:11.570\nIt's pretty impressive, right?\n\n583\n00:29:11.570 --> 00:29:12.890\nAnd so,\nthey've done that with a lot of these.\n\n584\n00:29:12.890 --> 00:29:14.400\nThey kind of change over the years.\n\n585\n00:29:14.400 --> 00:29:16.500\nSo if you go out there and\nyou start doing Google searches, and\n\n586\n00:29:16.500 --> 00:29:19.380\nyou see different numbers that what\nI've got here, don't be shocked.\n\n587\n00:29:19.380 --> 00:29:21.320\nThe only website you should\ntrust is Microsoft, but\n\n588\n00:29:21.320 --> 00:29:25.250\neven Microsoft is leaving\nsome data not updated.\n\n589\n00:29:25.250 --> 00:29:26.430\nSo, these do change.\n\n590\n00:29:26.430 --> 00:29:29.770\nThe data you can really\ntrust is right here.\n\n591\n00:29:29.770 --> 00:29:31.370\nWhen you go to spin that instance up, and\n\n592\n00:29:31.370 --> 00:29:33.950\nit tells you the DTUs\nthat's what you trust.\n\n593\n00:29:33.950 --> 00:29:36.400\nAnd that's how you know you've\ngot the latest information.\n\n594\n00:29:36.400 --> 00:29:39.960\nBut basically DTUs aren't all\nthat meaningful to a lot of us.\n\n595\n00:29:39.960 --> 00:29:42.060\nWhat Microsoft did,\nis they did a study and\n\n596\n00:29:42.060 --> 00:29:47.090\nthey kind of converted it to be how many\ntransactions per second they could do.\n\n597\n00:29:47.090 --> 00:29:50.780\nAnd the article was written really,\nreally difficult so what I did,\n\n598\n00:29:50.780 --> 00:29:53.160\nI just kind of took it and\nI turned it into plain English.\n\n599\n00:29:53.160 --> 00:29:57.680\nAnd I said all right,\nif you got a basic level with five DTUs.\n\n600\n00:29:57.680 --> 00:30:01.200\nIt actually does work out to about\nfive transactions per second, so\n\n601\n00:30:01.200 --> 00:30:03.860\nif you're doing reads and\nwrites they're a little bit different,\n\n602\n00:30:03.860 --> 00:30:07.550\nbut on average you can get about\nfive transactions per second.\n\n603\n00:30:07.550 --> 00:30:11.830\nIn tests and R and D, five transactions\nper second's actually a lot.\n\n604\n00:30:11.830 --> 00:30:13.368\nThat works out really well.\n\n605\n00:30:13.368 --> 00:30:17.930\nIf you're amazon.com, you can guarantee\nthey're taking more than five orders\n\n606\n00:30:17.930 --> 00:30:21.960\nper second, especially in the holiday\nseason, and that's not gonna fly at all.\n\n607\n00:30:21.960 --> 00:30:24.910\nNow, what happens we exceed our DTUs?\n\n608\n00:30:24.910 --> 00:30:27.350\nWe get queued up, we wait,\nserver gets slow.\n\n609\n00:30:27.350 --> 00:30:31.410\nSo you'll see transactions take longer,\nand longer, and longer if you exceed DTUs.\n\n610\n00:30:31.410 --> 00:30:32.940\nThat's why we have to monitor this.\n\n611\n00:30:32.940 --> 00:30:34.969\nTo know when to scale our server up.\n\n612\n00:30:34.969 --> 00:30:42.450\nAt S2, which was 50 DTUs,\nit works out to roughly 50 transactions.\n\n613\n00:30:42.450 --> 00:30:46.000\nBut when we get to the premium,\nthat's where things get different.\n\n614\n00:30:46.000 --> 00:30:49.420\nAnd it gets different because\nthe premium has better storage, and\n\n615\n00:30:49.420 --> 00:30:53.660\nother things that actually impact\nhow many transactions you can do.\n\n616\n00:30:53.660 --> 00:30:58.865\nSo like a P1 is 125 DTUs, which works\nout really to about 123 transactions\n\n617\n00:30:58.865 --> 00:31:01.655\nper second, and\nthen it kind of climbs from there.\n\n618\n00:31:01.655 --> 00:31:03.245\nThe P3 at 1000, you end up at around 913.\n\n619\n00:31:03.245 --> 00:31:07.195\nSo it's a little bit lower than what\nwe see, but we're dealing with,\n\n620\n00:31:07.195 --> 00:31:09.905\nthey call it the law of\ndiminishing return, right.\n\n621\n00:31:09.905 --> 00:31:12.375\nThe more hardware you get,\nyou get a little bit less out of it.\n\n622\n00:31:12.375 --> 00:31:14.790\nBut it ends up being really close.\n\n623\n00:31:14.790 --> 00:31:16.840\nSo what these DTU numbers are.\n\n624\n00:31:16.840 --> 00:31:18.030\nRight?\nIt's not exact.\n\n625\n00:31:18.030 --> 00:31:20.520\nDon't count, I mean, it could be exact for\nyou, if it just works out that way.\n\n626\n00:31:20.520 --> 00:31:22.180\nBut, count on it being\neither a little higher or\n\n627\n00:31:22.180 --> 00:31:24.650\na little lower depending on\nthe type of transactions you do.\n\n628\n00:31:24.650 --> 00:31:27.120\nBut these are fairly average.\n\n629\n00:31:27.120 --> 00:31:30.940\nAnd if you're doing 1,750\ntransactions per second,\n\n630\n00:31:30.940 --> 00:31:33.460\nthat's a pretty big database right there.\n\n631\n00:31:33.460 --> 00:31:34.060\nRight?\n\n632\n00:31:34.060 --> 00:31:36.650\nAmazon takes in a lot of orders.\n\n633\n00:31:36.650 --> 00:31:39.230\nThey don't take in 1,700\norders per second.\n\n634\n00:31:39.230 --> 00:31:41.090\nThat's a lot.\n\n635\n00:31:41.090 --> 00:31:42.740\nSo, these are scales.\n\n636\n00:31:42.740 --> 00:31:47.535\nYeah, it's $7,000 per month but\nif you're dealing with\n\n637\n00:31:47.535 --> 00:31:52.861\n1,700 orders per second,\neven if your product only cost a penny,\n\n638\n00:31:52.861 --> 00:31:57.148\nIt's well in excess of $7,000 per month,\nright?\n\n639\n00:31:57.148 --> 00:32:01.547\nSo that's the way that they look at it is\nbasically, this is priced for performance.\n\n640\n00:32:01.547 --> 00:32:04.427\nAnd that scale is huge.\n\n641\n00:32:04.427 --> 00:32:06.946\nWith just one SQL server.\n\n642\n00:32:06.946 --> 00:32:10.610\nI'm not having to deploy multiple ones or\nread replicas and all that yet.\n\n643\n00:32:10.610 --> 00:32:14.030\nOnce we do that, we can get even\nhigher than this on the DTU's and\n\n644\n00:32:14.030 --> 00:32:17.430\nthe best part is, when I spin up this\ndatabase, yeah I'm going to pick.\n\n645\n00:32:17.430 --> 00:32:20.490\nI'm going to come in here and pick,\nand I'll make this one an S0, right.\n\n646\n00:32:20.490 --> 00:32:25.585\nSo as of right now I'll have 250\ngigs of storage, I'll have standard\n\n647\n00:32:25.585 --> 00:32:31.230\ngeo-replication, and 10 DTUs that will\nnet me around 10 transactions per second.\n\n648\n00:32:31.230 --> 00:32:35.760\nBut if the server starts getting slow,\nI can just go and edit the database and\n\n649\n00:32:35.760 --> 00:32:37.180\nbump it up to an S1.\n\n650\n00:32:37.180 --> 00:32:41.430\nOr bump it up to an S2 or\nan S3 and increase it as I need it.\n\n651\n00:32:41.430 --> 00:32:43.730\nAnd then if I see I don't need\nit anymore I can decrease it and\n\n652\n00:32:43.730 --> 00:32:45.240\nnow I'm not paying that higher rate.\n\n653\n00:32:45.240 --> 00:32:47.910\nSo I pay for what I use, and\nthat's a really big advantage.\n\n654\n00:32:49.150 --> 00:32:51.520\nNow as I talk about DTU's,\nnow I know I'm going over here,\n\n655\n00:32:51.520 --> 00:32:52.965\nDaniel's giving me the evil eye.\n\n656\n00:32:52.965 --> 00:32:56.860\n[LAUGH] When I talk about DTU's, some of\nyou might be familiar with another metric\n\n657\n00:32:56.860 --> 00:32:58.810\nthat's out there that's called a TSC.\n\n658\n00:32:58.810 --> 00:33:02.450\nAnd, let me pull up their webpage,\nTSC.org,\n\n659\n00:33:02.450 --> 00:33:04.900\nit's kind of a, oop, that's not right.\n\n660\n00:33:04.900 --> 00:33:06.005\nIt's a.\n\n661\n00:33:06.005 --> 00:33:08.498\n[LAUGH] I'm sorry, not a TSC,\na TPC, there we go.\n\n662\n00:33:08.498 --> 00:33:10.500\nTPC.org, there.\n\n663\n00:33:10.500 --> 00:33:15.150\nSome of you guys might be familiar with\nthis, a TPC, their website is awesome.\n\n664\n00:33:15.150 --> 00:33:17.790\nBut what they did is they created\na standard unit of measure for\n\n665\n00:33:17.790 --> 00:33:19.518\nperformance with databases.\n\n666\n00:33:19.518 --> 00:33:22.070\nAnd there's been a lot of rumbling out\nthere where people say why doesn't\n\n667\n00:33:22.070 --> 00:33:23.250\nMicrosoft just use TPC's?\n\n668\n00:33:23.250 --> 00:33:26.980\nThat's what Oracle uses,\nthat's what MariaDB and MySQL,\n\n669\n00:33:26.980 --> 00:33:28.880\nthat's what those guys use.\n\n670\n00:33:28.880 --> 00:33:31.130\nWhy doesn't Microsoft use these too?\n\n671\n00:33:31.130 --> 00:33:33.580\nAnd the short answer is,\nMicrosoft wanted to,\n\n672\n00:33:33.580 --> 00:33:38.700\nthey wanted to use TPCs because it is\na standard, but TPC.org, the organization\n\n673\n00:33:38.700 --> 00:33:42.560\nthat runs this metric, they won't\nallow cloud providers to use it.\n\n674\n00:33:42.560 --> 00:33:46.720\nBecause cloud services are so different\nthan physical servers and TPCs are really\n\n675\n00:33:46.720 --> 00:33:50.250\ndesigned to measure physical server\nperformance, but when you're in a cloud\n\n676\n00:33:50.250 --> 00:33:53.150\nservice, it's always a virtual machine,\nyou're getting moved around on hardware.\n\n677\n00:33:53.150 --> 00:33:55.570\nThe TPCs are harder to be accurate.\n\n678\n00:33:55.570 --> 00:33:57.460\nSo they said cloud providers can't use it.\n\n679\n00:33:57.460 --> 00:34:00.320\nAnd so that's where Microsoft said\nall right well we can't use TPCs,\n\n680\n00:34:00.320 --> 00:34:01.758\nwe'll make our own the DTUs.\n\n681\n00:34:01.758 --> 00:34:05.720\nAnd the DTUs pretty closely match\nthe transactions per second, and\n\n682\n00:34:05.720 --> 00:34:08.230\nso that's kind of how\nyou can look at that and\n\n683\n00:34:08.230 --> 00:34:12.290\nsee exactly how much load that server can\nhandle and you can spin up and spin down.\n\n684\n00:34:12.290 --> 00:34:14.720\nBut if you're a hard core TPC user,\n\n685\n00:34:14.720 --> 00:34:17.100\njust know that it's not\nMicrosoft's fault on this one.\n\n686\n00:34:17.100 --> 00:34:19.750\nI'm sure TPC will update eventually, and\nthen Microsoft will probably change, but,\n\n687\n00:34:19.750 --> 00:34:21.490\nfor now, we've got those DTUs.\n\n688\n00:34:21.490 --> 00:34:24.139\n>> Well, awesome.\nIt sounds like we can definitely have at\n\n689\n00:34:24.139 --> 00:34:28.096\nleast a fully blown SQL environment\nin the cloud, using Azure, and\n\n690\n00:34:28.096 --> 00:34:32.870\nwe're really not losing anything even\nthough we can't use the TPC stuff.\n\n691\n00:34:32.870 --> 00:34:35.250\nMicrosoft said well,\nif you can't do that we'll build our own.\n\n692\n00:34:35.250 --> 00:34:36.390\nThey have that implemented.\n\n693\n00:34:36.390 --> 00:34:40.840\nDon, is there any parting words of wisdom\nfor our viewers before we call it a day?\n\n694\n00:34:40.840 --> 00:34:44.200\n>> Well, if you are wondering why we\njust completed a whole episode and\n\n695\n00:34:44.200 --> 00:34:45.930\nnever actually spun up a database,\n\n696\n00:34:45.930 --> 00:34:48.520\nit is because I just wanted to make\nsure we understood the basics,\n\n697\n00:34:48.520 --> 00:34:52.690\nunderstood those performance tiers and\nwhat the benefits of Azure SQL are.\n\n698\n00:34:52.690 --> 00:34:55.470\nStarting in the next episode we're\ngonna spin up that first database,\n\n699\n00:34:55.470 --> 00:34:57.130\nsee how to get our data into the database.\n\n700\n00:34:57.130 --> 00:34:58.780\nThat's kind of an important step.\n\n701\n00:34:58.780 --> 00:35:00.020\nAnd kind of walk through that process.\n\n702\n00:35:00.020 --> 00:35:01.910\nSo stay tuned,\nthat's gonna be coming in episode two.\n\n703\n00:35:01.910 --> 00:35:03.400\n>> Awesome.\nI'm looking forward to that Don.\n\n704\n00:35:03.400 --> 00:35:03.970\nThank you for\n\n705\n00:35:03.970 --> 00:35:08.950\njoining us today and showing us the basics\nand introducing us to Microsoft Azure SQL.\n\n706\n00:35:08.950 --> 00:35:10.420\nThat's some very interesting stuff.\n\n707\n00:35:10.420 --> 00:35:12.480\nSo hopefully you guys found\nthat very interesting and\n\n708\n00:35:12.480 --> 00:35:14.870\nyou'll be with us on\nthe upcoming episodes.\n\n709\n00:35:14.870 --> 00:35:16.890\nAs for this one we're gonna go ahead and\nclose it down.\n\n710\n00:35:16.890 --> 00:35:19.960\nSigning off for ITProTV,\nI've been your host, Daniel Lowrie.\n\n711\n00:35:19.960 --> 00:35:20.554\n>> And I'm Don Pezet.\n\n712\n00:35:20.554 --> 00:35:22.846\n>> And we'll see you next time.\n\n713\n00:35:22.846 --> 00:35:29.200\n[MUSIC]\n\n",
          "vimeoId": "148658770"
        },
        {
          "description": "In this episode, Daniel and Don walk you through creating databases using Microsoft Azure SQL. They begin with creating a simple, blank database; taking you step-by-step from start to finish. Then they explore some ways of importing an already existing database into Azure SQL.",
          "length": "1894",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-azuresql/techskills-azuresql-1-2-creating_your_first_database-120715.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-azuresql/techskills-azuresql-1-2-creating_your_first_database-120715-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-azuresql/techskills-azuresql-1-2-creating_your_first_database-120715-sm.jpg",
          "title": "Creating Your First Database",
          "transcript": "WEBVTT\n\n1\n00:00:00.000 --> 00:00:10.000\n[MUSIC]\n\n2\n00:00:12.252 --> 00:00:16.839\nAll right, greetings everyone and welcome\nto another great episode of ITProTV.\n\n3\n00:00:16.839 --> 00:00:18.620\nI'm your host, Daniel Lowrie, and\n\n4\n00:00:18.620 --> 00:00:21.955\nin today's episode we're gonna take\na look at Microsoft Azure SQL,\n\n5\n00:00:21.955 --> 00:00:25.850\ncontinuing on with some of the basic\nthings that we need to know about that.\n\n6\n00:00:25.850 --> 00:00:28.580\nJoining us in the studio today,\nwell, you know you love him,\n\n7\n00:00:28.580 --> 00:00:30.180\nhis name is Mister Don Pezet.\n\n8\n00:00:30.180 --> 00:00:31.270\nDon, welcome to the show.\n\n9\n00:00:31.270 --> 00:00:31.960\nHow are you?\n\n10\n00:00:31.960 --> 00:00:33.610\n>> I am doing great, Daniel,\nthanks for having me back,\n\n11\n00:00:33.610 --> 00:00:36.990\nand we're ready to dive into\nactually using Azure SQL.\n\n12\n00:00:36.990 --> 00:00:39.220\nI know in the first episode\nwe talked about it a lot.\n\n13\n00:00:39.220 --> 00:00:41.530\nWe didn't actually dive in and use it.\n\n14\n00:00:41.530 --> 00:00:43.810\nSo, in this episode,\nwe're gonna create our first database.\n\n15\n00:00:43.810 --> 00:00:45.810\nActually, probably create one or\ntwo other things.\n\n16\n00:00:45.810 --> 00:00:48.540\nAnd then I'm gonna show you how to\nget some data into the database so\n\n17\n00:00:48.540 --> 00:00:49.340\nyou can actually make use of it.\n\n18\n00:00:49.340 --> 00:00:52.310\nThese are really the two first steps\nthat you're gonna take with Azure SQL.\n\n19\n00:00:52.310 --> 00:00:56.560\nIt's really important that we understand\nthe decisions that go on behind each of\n\n20\n00:00:56.560 --> 00:00:59.340\nthe configuration options we set\nwhen we create a new database.\n\n21\n00:00:59.340 --> 00:01:01.760\nAnd once we're done,\nby the end of this episode,\n\n22\n00:01:01.760 --> 00:01:05.090\nwe should have some nice little databases\nup and running, ready for production use.\n\n23\n00:01:05.090 --> 00:01:07.180\n>> Awesome Don.\nWell I'm ready to see you put your money\n\n24\n00:01:07.180 --> 00:01:09.930\nwhere your mouth is that he actually\nknows how to create a database.\n\n25\n00:01:09.930 --> 00:01:11.160\nI'm sure he does.\n\n26\n00:01:11.160 --> 00:01:13.790\nWe'll make sure that that\nis a fact in this episode.\n\n27\n00:01:13.790 --> 00:01:14.810\nSo let's start there.\n\n28\n00:01:14.810 --> 00:01:18.190\nLet's just start with an easy, simple,\n\n29\n00:01:18.190 --> 00:01:21.500\nlike me myself I don't have\na lot of DB experience.\n\n30\n00:01:21.500 --> 00:01:24.500\nHow do we get started in Azure to\ncreate just a simple database.\n\n31\n00:01:24.500 --> 00:01:26.828\n>> All right well,\nMicrosoft does make it pretty easy.\n\n32\n00:01:26.828 --> 00:01:30.300\nThere's a simple little wizard you can run\nthrough and you can accept the defaults.\n\n33\n00:01:30.300 --> 00:01:32.793\nAnd if you do accept the defaults,\nyou'll end up with a blank database.\n\n34\n00:01:32.793 --> 00:01:35.942\nBut there's a lot of things that might\nhave been decided the way that you didn't\n\n35\n00:01:35.942 --> 00:01:36.930\nnecessarily want them.\n\n36\n00:01:36.930 --> 00:01:39.560\nSo we'll start easy and\nthen we'll go through it and\n\n37\n00:01:39.560 --> 00:01:41.110\nkind of churn through all\nthe different details.\n\n38\n00:01:41.110 --> 00:01:43.480\nSo I'm logged into the Azure portal here.\n\n39\n00:01:43.480 --> 00:01:46.414\nAnd if you're not\nan experienced Azure user,\n\n40\n00:01:46.414 --> 00:01:49.131\nthe website is just portal.azure.com.\n\n41\n00:01:49.131 --> 00:01:50.966\nAnd it's A-Z-U-R-E.\n\n42\n00:01:50.966 --> 00:01:52.290\nPortal.azure.com.\n\n43\n00:01:52.290 --> 00:01:55.171\nAnd when you go to that website,\nif you have a subscription,\n\n44\n00:01:55.171 --> 00:01:57.670\nthen you're ready to start\nspinning up resources.\n\n45\n00:01:57.670 --> 00:02:01.490\nIf you don't there's going to be a little\nwarning flag up at the top of your page\n\n46\n00:02:01.490 --> 00:02:04.220\nand you basically have to go in and\nput in your payment information.\n\n47\n00:02:04.220 --> 00:02:05.430\nGotta have a credit card on file or\n\n48\n00:02:05.430 --> 00:02:07.820\notherwise they're not going\nto let you do anything.\n\n49\n00:02:07.820 --> 00:02:11.820\nNow on the left side of the Azure portal\nyou'll see the primary services and\n\n50\n00:02:11.820 --> 00:02:13.990\nthese are the things that most of\nus are going to use all the time.\n\n51\n00:02:13.990 --> 00:02:17.480\nAnd you'll see resource groups which\nyou might not be familiar with yet.\n\n52\n00:02:17.480 --> 00:02:19.380\nI'll talk about those a little bit later.\n\n53\n00:02:19.380 --> 00:02:21.540\nApp Services, Virtual machines.\n\n54\n00:02:21.540 --> 00:02:24.860\nAnd see I've got Virtual machines\nclassic and Virtual machines regular.\n\n55\n00:02:24.860 --> 00:02:28.490\nYou'll see that in a few different places\non here like Cloud services classic,\n\n56\n00:02:28.490 --> 00:02:29.900\nstorage accounts classic.\n\n57\n00:02:29.900 --> 00:02:31.140\nWhat's that all about?\n\n58\n00:02:31.140 --> 00:02:35.506\nWell the old Azure portal,\nwhich was Manage.WindowsAzure.com, or\n\n59\n00:02:35.506 --> 00:02:40.454\nMicrosoftAzure.com, I think it was\nWindows, Manage.WindowsAzure.com,\n\n60\n00:02:40.454 --> 00:02:41.266\nthere we go.\n\n61\n00:02:41.266 --> 00:02:43.390\nThe old portal did things a different way.\n\n62\n00:02:43.390 --> 00:02:46.070\nSo any time you see classic,\nthat's the old way.\n\n63\n00:02:46.070 --> 00:02:47.690\nAnd you can still do it that way.\n\n64\n00:02:47.690 --> 00:02:49.310\nMicrosoft does full support for\nthe old way, but\n\n65\n00:02:49.310 --> 00:02:51.150\nthey really want you\ndoing things the new way.\n\n66\n00:02:51.150 --> 00:02:53.630\nFortunately SQL,\nwe don't really have that problem.\n\n67\n00:02:53.630 --> 00:02:57.950\nYou'll see SQL servers and\nSQL databases no classic on those, so\n\n68\n00:02:57.950 --> 00:03:00.060\nwe can kind of ignore some\nof the classic stuff.\n\n69\n00:03:00.060 --> 00:03:02.950\nBut I am going to point out later\non where on storage accounts.\n\n70\n00:03:02.950 --> 00:03:05.530\nThere are a few times where we\nneed a classic storage account,\n\n71\n00:03:05.530 --> 00:03:07.840\nwe'll see that as the show goes on.\n\n72\n00:03:07.840 --> 00:03:12.040\nBasically, we've got these two main areas\nhere, SQL databases and SQL servers.\n\n73\n00:03:12.040 --> 00:03:14.900\nThis was one of the things that was harder\nfor me to learn when I first got started\n\n74\n00:03:14.900 --> 00:03:19.490\nwith all of this because when I think\nabout spinning up a new SQL server,\n\n75\n00:03:19.490 --> 00:03:22.170\nthe first thing I think about is all right\nI gotta go and buy a physical server.\n\n76\n00:03:22.170 --> 00:03:22.986\nI've gotta have that box.\n\n77\n00:03:22.986 --> 00:03:27.141\nOr if I'm doing a virtual machine, I think\nI'm gonna spin up the server first and\n\n78\n00:03:27.141 --> 00:03:29.060\nthen install SQL on top of it.\n\n79\n00:03:29.060 --> 00:03:31.560\nBut we've gotta get out\nof that way of thinking.\n\n80\n00:03:31.560 --> 00:03:36.110\nYou will have SQL servers but\nthey're completely managed by Microsoft.\n\n81\n00:03:36.110 --> 00:03:38.380\nSo you can't log in to them,\nyou can't mess with them,\n\n82\n00:03:38.380 --> 00:03:41.986\nyou can't do anything with them,\nother than see that they're there, right?\n\n83\n00:03:41.986 --> 00:03:43.390\nSo when you go under SQL servers here,\n\n84\n00:03:43.390 --> 00:03:46.220\nthat's exactly what you do is you\nsee the servers that you have.\n\n85\n00:03:46.220 --> 00:03:47.160\nAnd the reason they're there is so\n\n86\n00:03:47.160 --> 00:03:49.730\nyou can monitor performance to\nsee if you're overwhelming them.\n\n87\n00:03:49.730 --> 00:03:52.620\nAnd if you are, you can add more or\nscale up, or whatever.\n\n88\n00:03:52.620 --> 00:03:55.260\nBut what we really care\nabout are SQL databases.\n\n89\n00:03:55.260 --> 00:03:57.800\nAnd so if I want to make my first database\n\n90\n00:03:57.800 --> 00:04:01.210\nI don't go down to SQL servers I\njust go straight to the databases.\n\n91\n00:04:01.210 --> 00:04:03.795\nAnd the fact that I don't have\na server is not a big deal.\n\n92\n00:04:03.795 --> 00:04:08.587\nIf I come over here and click on my SQL\nservers you'll see that I don't have\n\n93\n00:04:08.587 --> 00:04:11.640\na single server in here and that's okay.\n\n94\n00:04:11.640 --> 00:04:16.250\nWhen I spin up the first database it'll\nmake that server for me all right.\n\n95\n00:04:16.250 --> 00:04:19.570\nTo make a database, I just go to\nSQL Databases and I click the nice,\n\n96\n00:04:19.570 --> 00:04:23.410\nbig Add button up there at the top and\nthat's gonna start the Wizard process so\n\n97\n00:04:23.410 --> 00:04:27.560\nI'll have a window pane kinda\nslide in from the right over here.\n\n98\n00:04:27.560 --> 00:04:30.080\nAnd we're gonna start\nrunning through that process.\n\n99\n00:04:30.080 --> 00:04:33.890\nNow, over here, it's gonna ask me for\nsome basic information.\n\n100\n00:04:33.890 --> 00:04:38.320\nAnd what you'll see is that some things\nhave a little red asterisk by them.\n\n101\n00:04:38.320 --> 00:04:39.550\nThose are the things that are required.\n\n102\n00:04:39.550 --> 00:04:41.170\nThat's the stuff that I have to have.\n\n103\n00:04:41.170 --> 00:04:44.540\nThings that don't have a red asterisk,\nI can leave it to default.\n\n104\n00:04:44.540 --> 00:04:48.180\nSo if I'm just trying to go quick and\neasy here,\n\n105\n00:04:48.180 --> 00:04:53.276\nI'm gonna create this maybe we're\ngonna have some ITProTV Apps so\n\n106\n00:04:53.276 --> 00:04:57.918\nI might call this,\nwe'll just call this SampleDB1 right.\n\n107\n00:04:57.918 --> 00:04:59.630\nSo this is gonna be my\nfirst sample database.\n\n108\n00:04:59.630 --> 00:05:02.870\nSo I give it a name, I get a little\ngreen check mark over here, right.\n\n109\n00:05:02.870 --> 00:05:04.370\nThat's checking for a couple of things.\n\n110\n00:05:04.370 --> 00:05:07.620\nFirst, it's checking to see if I've\nalready used the database name somewhere,\n\n111\n00:05:07.620 --> 00:05:09.240\nit doesn't want me duplicating.\n\n112\n00:05:09.240 --> 00:05:11.980\nBut the other thing is it does have\na maximum character length that I can't\n\n113\n00:05:11.980 --> 00:05:13.120\nquite remember off hand.\n\n114\n00:05:13.120 --> 00:05:14.670\nBut eventually you do exceed it.\n\n115\n00:05:14.670 --> 00:05:16.640\nAnd if that happens you'll get\na little x there that'll let you know\n\n116\n00:05:16.640 --> 00:05:17.860\nyou've gone too far.\n\n117\n00:05:17.860 --> 00:05:20.930\nAnd I believe there's a few special\ncharacters that aren't supported.\n\n118\n00:05:20.930 --> 00:05:22.300\nWell, seems happy with those.\n\n119\n00:05:22.300 --> 00:05:25.230\nBut if you do anything to violate\nthe naming convention that green check\n\n120\n00:05:25.230 --> 00:05:26.980\nmark will change to a red X.\n\n121\n00:05:26.980 --> 00:05:27.590\nThen the server.\n\n122\n00:05:28.780 --> 00:05:31.569\nIf I already have a server I can reuse it,\nright.\n\n123\n00:05:31.569 --> 00:05:35.610\nYou can have more than one database on the\nsame server, or I can spin up a new one.\n\n124\n00:05:35.610 --> 00:05:38.930\nSo when I click on server here it's gonna\nlook to see if I've already got some.\n\n125\n00:05:38.930 --> 00:05:41.540\nUse an existing server,\nI've not no servers found.\n\n126\n00:05:41.540 --> 00:05:43.760\nI'm gonna need to create a new one.\n\n127\n00:05:43.760 --> 00:05:47.400\nAnd when I create the server,\nnow I can give it a server name and\n\n128\n00:05:47.400 --> 00:05:49.410\nadmin login right.\n\n129\n00:05:49.410 --> 00:05:53.160\nNotice it's not really asking\nme how many CPUs I want,\n\n130\n00:05:53.160 --> 00:05:55.790\nhow much memory I want,\nit's not asking me that stuff.\n\n131\n00:05:55.790 --> 00:05:59.340\nMicrosoft takes care of that for us based\non the performance level of the databases.\n\n132\n00:05:59.340 --> 00:06:02.890\nHere it's just asking us for enough\ninformation to be able to connect to it.\n\n133\n00:06:02.890 --> 00:06:04.920\nI want to connect and\naccess this database.\n\n134\n00:06:04.920 --> 00:06:08.015\nSo I need a URL,\nI need a DNS name to get to it.\n\n135\n00:06:08.015 --> 00:06:11.256\nAnd the DNS name's important because\nif we fail over to another region,\n\n136\n00:06:11.256 --> 00:06:13.913\nif I'm pointing to an IP the failover\nis not going to work and\n\n137\n00:06:13.913 --> 00:06:15.793\nif I'm pointing to a domain name it will.\n\n138\n00:06:15.793 --> 00:06:18.760\nIt'll resolve over to the new IP and\nI jump over to the new database.\n\n139\n00:06:18.760 --> 00:06:23.189\nSo I'll give this one, you know what\ndid I call it, demo db or something, so\n\n140\n00:06:23.189 --> 00:06:25.282\nI'll just call this itprotvdemo.\n\n141\n00:06:25.282 --> 00:06:26.733\n>> Sample db I think you called it.\n\n142\n00:06:26.733 --> 00:06:27.251\n>> Sample?\n\n143\n00:06:27.251 --> 00:06:28.180\n>> Yeah.\n>> All right.\n\n144\n00:06:28.180 --> 00:06:29.928\n>> Sample db1.\n\n145\n00:06:29.928 --> 00:06:31.480\n>> We'll call it sample then, there we go.\n\n146\n00:06:31.480 --> 00:06:34.260\nSo the server is gonna\nbe called itprotvsample.\n\n147\n00:06:34.260 --> 00:06:39.990\nBut the database was ITProTV sample one,\nor sample DB one, whatever it was.\n\n148\n00:06:39.990 --> 00:06:42.530\nAll right,\nI'm gonna give it an admin login.\n\n149\n00:06:42.530 --> 00:06:46.720\nNow, this is not an admin login for\nWindows, for the server.\n\n150\n00:06:46.720 --> 00:06:49.110\nThis is an admin login for SQL.\n\n151\n00:06:49.110 --> 00:06:51.260\nSo, when I connect the SQL server,\n\n152\n00:06:51.260 --> 00:06:54.800\nhere's a SQL log in account I can\nuse to gain access to the system.\n\n153\n00:06:54.800 --> 00:06:58.200\nI don't have access to the server,\nI can't remote desktop into it and\n\n154\n00:06:58.200 --> 00:06:59.360\nsee what's going on there.\n\n155\n00:06:59.360 --> 00:07:02.410\nSo, this is the SQL side, so\nI'm gonna give myself a user name and\n\n156\n00:07:02.410 --> 00:07:04.670\na password that I can remember.\n\n157\n00:07:04.670 --> 00:07:07.450\n>> Is that like that SAA or\nis that what is?\n\n158\n00:07:07.450 --> 00:07:09.900\n>> Yeah.\nIt's not the SAA account,\n\n159\n00:07:09.900 --> 00:07:12.850\nbecause we actually give it a user name,\nbut it would be that equivalent, right.\n\n160\n00:07:12.850 --> 00:07:16.180\nSo with the SAA account, that's the one\nthat's built in as an administrator and\n\n161\n00:07:16.180 --> 00:07:19.020\nthat does exist, Microsoft doesn't\nshare that password with you.\n\n162\n00:07:19.020 --> 00:07:21.230\nYou actually don't get\nthe SAA account with these.\n\n163\n00:07:21.230 --> 00:07:24.010\nYou can take it over if you want, but\nby default they don't give it to you\n\n164\n00:07:24.010 --> 00:07:26.020\nbecause you're creating your\nown admin login right here.\n\n165\n00:07:26.020 --> 00:07:27.650\nAnd you'll have full control\nof the database server.\n\n166\n00:07:27.650 --> 00:07:30.870\nYou can make it as great or\nas horrible as you want, but\n\n167\n00:07:30.870 --> 00:07:33.160\nyou are limited to what's inside of SQL.\n\n168\n00:07:33.160 --> 00:07:35.700\nYou can't drop down to Windows and\nstart screwing stuff up, and\n\n169\n00:07:35.700 --> 00:07:39.270\nthat's because Microsoft is managing\nthe server underneath all right.\n\n170\n00:07:39.270 --> 00:07:40.910\nThe next thing is the location.\n\n171\n00:07:40.910 --> 00:07:42.800\nMine's defaulting to West US.\n\n172\n00:07:42.800 --> 00:07:45.170\nI need to think about where\nmy users are going to be.\n\n173\n00:07:45.170 --> 00:07:46.784\nOr if there's an application\nthat's tied to this,\n\n174\n00:07:46.784 --> 00:07:47.963\nwhere my application's going to be.\n\n175\n00:07:47.963 --> 00:07:51.253\nYou want it to be geographically\nclose to your users or applications.\n\n176\n00:07:51.253 --> 00:07:52.837\nWell, I'm over here in Florida.\n\n177\n00:07:52.837 --> 00:07:54.562\nSo we're on the east coast of the U.S.\n\n178\n00:07:54.562 --> 00:07:56.879\nputting this on the west\ncoast It's a bit of a reach.\n\n179\n00:07:56.879 --> 00:08:01.560\nSo I'm gonna click on that, and I'm\ngonna change it out and go with East US.\n\n180\n00:08:01.560 --> 00:08:03.920\nAnd there's two East US data centers.\n\n181\n00:08:03.920 --> 00:08:05.470\nIt doesn't really matter which one I pick.\n\n182\n00:08:05.470 --> 00:08:08.200\nAgain because Microsoft is\nmanaging the servers underneath.\n\n183\n00:08:08.200 --> 00:08:11.160\nFor those of you that have been spinning\nup VMs though, you might notice that\n\n184\n00:08:11.160 --> 00:08:15.260\nthere's some features you have in East US\n2 that you don't have in East US.\n\n185\n00:08:15.260 --> 00:08:19.720\nBut as far as Azure SQL is concerned,\nthey're both equal to us, so\n\n186\n00:08:19.720 --> 00:08:21.850\nI can deploy to either one,\nCentral, North.\n\n187\n00:08:21.850 --> 00:08:23.980\nWe've got East Asia,\nSoutheast Asia, right?\n\n188\n00:08:23.980 --> 00:08:26.180\nPick the one that's close to you and\n\n189\n00:08:26.180 --> 00:08:27.730\nyou're gonna get the best\nperformance out of it.\n\n190\n00:08:27.730 --> 00:08:29.150\nSo I'm gonna go East US.\n\n191\n00:08:30.730 --> 00:08:36.090\nAnd then it's asking me if I\nwant a version 12 or not, right?\n\n192\n00:08:36.090 --> 00:08:40.020\nWe only support two platform right now,\nVersion 11 which is SQL 2012, and\n\n193\n00:08:40.020 --> 00:08:41.230\nversion 12, which is SQL 2014.\n\n194\n00:08:41.230 --> 00:08:46.050\nSo basically they're saying, do I want to\ngo with 2014 or do I want to say, no, and\n\n195\n00:08:46.050 --> 00:08:47.560\nI'll end up with version 11, all right?\n\n196\n00:08:47.560 --> 00:08:48.640\nSo that's my choice.\n\n197\n00:08:48.640 --> 00:08:50.540\nI'm gonna go with the latest and greatest.\n\n198\n00:08:50.540 --> 00:08:55.430\nAll right, and then this checkmark, Allow\nAzure services to access this server.\n\n199\n00:08:55.430 --> 00:08:58.440\nIf I uncheck that,\nit's gonna create a SQL server that\n\n200\n00:08:58.440 --> 00:09:02.170\nno one is allowed to connect to,\ncompletely isolated, and\n\n201\n00:09:02.170 --> 00:09:05.610\nthen we can configure security\nrules to grant people access.\n\n202\n00:09:05.610 --> 00:09:09.490\nBut if I leave this checked by default,\nother Azure services that are a part of my\n\n203\n00:09:09.490 --> 00:09:11.660\naccount will be allowed\nto access this database.\n\n204\n00:09:11.660 --> 00:09:13.940\nMicrosoft assumes that we want\nour services to access it so\n\n205\n00:09:13.940 --> 00:09:14.930\nthat we can do that.\n\n206\n00:09:14.930 --> 00:09:16.490\nAnd you get a little description here.\n\n207\n00:09:16.490 --> 00:09:18.690\nIt's what's going to\nallow that management.\n\n208\n00:09:18.690 --> 00:09:21.170\nSo we normally do want that turned on so\n\n209\n00:09:21.170 --> 00:09:23.100\nthat we can manage\nthe server through Azure.\n\n210\n00:09:23.100 --> 00:09:25.100\nOtherwise, we have to do it all\nthrough our own SQL client,\n\n211\n00:09:25.100 --> 00:09:27.020\nwhich is not necessarily a bad thing.\n\n212\n00:09:28.280 --> 00:09:30.408\nAll right, once we got that set,\nwe can hit okay.\n\n213\n00:09:30.408 --> 00:09:34.708\nAnd it's got the basic information\nthat it needed for the server and for\n\n214\n00:09:34.708 --> 00:09:35.649\nthe database.\n\n215\n00:09:35.649 --> 00:09:38.760\nNow on the database, there's still a\nlittle bit more that I need to pick here.\n\n216\n00:09:40.180 --> 00:09:42.240\nFor the server,\nit's got that itprotvsample.\n\n217\n00:09:42.240 --> 00:09:43.990\nThat's the server that we made.\n\n218\n00:09:43.990 --> 00:09:47.300\nFor the source database,\nwhat do I want to be in the database?\n\n219\n00:09:47.300 --> 00:09:48.820\nAnd it defaults to a blank database.\n\n220\n00:09:48.820 --> 00:09:51.400\nMaybe that's what I want,\nand in this case, it is.\n\n221\n00:09:51.400 --> 00:09:53.180\nThe other thing is if you choose it,\n\n222\n00:09:53.180 --> 00:09:56.560\nyou'll see that you can actually restore\nfrom a backup of another database.\n\n223\n00:09:56.560 --> 00:10:00.120\nSo if I want it, I already have data,\nor I can do a sample database.\n\n224\n00:10:00.120 --> 00:10:02.780\nMost of you guys have probably seen\nthe AdventureWorks database that\n\n225\n00:10:02.780 --> 00:10:03.660\nMicrosoft has.\n\n226\n00:10:03.660 --> 00:10:05.620\nThe sample database have\na lot of great data in it.\n\n227\n00:10:05.620 --> 00:10:07.190\nWe'll use it here in the show.\n\n228\n00:10:07.190 --> 00:10:09.480\nI can choose Sample and\nit'll prepopulate it with that data.\n\n229\n00:10:09.480 --> 00:10:11.390\nBut we'll stick with\nthe blank database for now.\n\n230\n00:10:12.760 --> 00:10:15.210\nFor the pricing tier,\nI can manipulate that if I want.\n\n231\n00:10:15.210 --> 00:10:16.410\nIt's defaulting to an S0,\n\n232\n00:10:16.410 --> 00:10:20.660\nwhich just happens to be exactly what I\nwanted, but if it wasn't what I wanted,\n\n233\n00:10:20.660 --> 00:10:22.890\nI can come over here and\nstart to pick from the tiers.\n\n234\n00:10:22.890 --> 00:10:26.700\nNotice how it defaults to the premiums,\nwhich are a little expensive, so\n\n235\n00:10:26.700 --> 00:10:30.430\nyou might need to click this view all\nto get the other tiers to show up, and\n\n236\n00:10:30.430 --> 00:10:33.400\nthen you can go through and pick from\nthe standards and the other guys.\n\n237\n00:10:33.400 --> 00:10:34.505\n>> Not going with a P11 Don?\n\n238\n00:10:34.505 --> 00:10:35.230\n[LAUGH]\n>> I know, well,\n\n239\n00:10:35.230 --> 00:10:38.020\nyou know it's,\nthis show does have a budget.\n\n240\n00:10:38.020 --> 00:10:41.110\n[LAUGH] That would get\nus over it pretty quick.\n\n241\n00:10:41.110 --> 00:10:41.960\n>> Yeah.\n\n242\n00:10:41.960 --> 00:10:46.360\n>> All right so I'll stick with that S0,\nnothing too crazy there, the Collation.\n\n243\n00:10:46.360 --> 00:10:48.970\nIf you're not familiar with the collation\nthen you actually might want\n\n244\n00:10:48.970 --> 00:10:49.740\nto ignore this.\n\n245\n00:10:49.740 --> 00:10:50.890\nBut if you are familiar with collation,\n\n246\n00:10:50.890 --> 00:10:54.370\nyou know that it's something that's darn\nnear impossible to change after the fact.\n\n247\n00:10:54.370 --> 00:10:58.190\nThis is what's dictating things like\nthe sort order for your database, right?\n\n248\n00:10:58.190 --> 00:10:59.280\nA lot of people don't think about this.\n\n249\n00:10:59.280 --> 00:11:01.150\nLike if I gave you a list of names and\n\n250\n00:11:01.150 --> 00:11:04.190\nI told you to alphabetize them,\nit's pretty easy, right?\n\n251\n00:11:04.190 --> 00:11:07.449\nA is at the top, z is at the bottom,\nwe put them in order of the alphabet and\n\n252\n00:11:07.449 --> 00:11:08.149\nyou're done.\n\n253\n00:11:08.149 --> 00:11:10.897\nBut what if something\nstarts with a number?\n\n254\n00:11:10.897 --> 00:11:15.640\nOkay, well, one through nine, one is the\nlowest, nine is the highest, there we go.\n\n255\n00:11:15.640 --> 00:11:18.100\nBut what if I have something\nthat starts with a number and\n\n256\n00:11:18.100 --> 00:11:19.230\nsomething that starts with a letter.\n\n257\n00:11:19.230 --> 00:11:21.230\nDo the numbers come first or\ndo the numbers come last?\n\n258\n00:11:21.230 --> 00:11:25.200\nIf there's a special character,\nis a semicolon first or is a comma first?\n\n259\n00:11:25.200 --> 00:11:28.080\nThat's stuff that that we\ndon't think about, right?\n\n260\n00:11:28.080 --> 00:11:29.740\nAnd collation dictates that.\n\n261\n00:11:29.740 --> 00:11:32.490\nIt says, these are the characters\nthat I support, and\n\n262\n00:11:32.490 --> 00:11:34.610\nthis is the way the sort order is handled,\nand so on.\n\n263\n00:11:34.610 --> 00:11:36.840\nSo, this is important.\n\n264\n00:11:36.840 --> 00:11:39.892\nIf I have five different databases\nwith five different collations,\n\n265\n00:11:39.892 --> 00:11:42.580\nwhen I query data,\neven if I run the same query,\n\n266\n00:11:42.580 --> 00:11:46.230\nI may get data in a different format\nthen I'm getting from my other servers.\n\n267\n00:11:46.230 --> 00:11:48.350\nSo, you usually want\nthis to be consistent.\n\n268\n00:11:48.350 --> 00:11:52.290\nNow here in the US,\nwe almost always chose the SQL Latin1.\n\n269\n00:11:52.290 --> 00:11:54.210\nIt's the one that Microsoft's used since,\n\n270\n00:11:54.210 --> 00:11:56.600\nI think SQL 7 is where\nthey switched to this one.\n\n271\n00:11:56.600 --> 00:12:00.560\nBut if you're outside of the US, you're\ndealing with international characters.\n\n272\n00:12:00.560 --> 00:12:01.660\nThis may not be so good for you.\n\n273\n00:12:01.660 --> 00:12:04.937\nSo you might chose to use a different\ncollation, based on your area.\n\n274\n00:12:04.937 --> 00:12:07.899\nSo you wanna make sure you\nchose what's appropriate and\n\n275\n00:12:07.899 --> 00:12:10.367\nthat you stay consistent with it,\nall right.\n\n276\n00:12:10.367 --> 00:12:12.715\nThen we got a resource group.\n\n277\n00:12:12.715 --> 00:12:14.745\nI'm gonna talk more about\nresource groups later.\n\n278\n00:12:14.745 --> 00:12:16.384\nI wanted this to be quick and\neasy, right, so\n\n279\n00:12:16.384 --> 00:12:18.650\nI'm just gonna leave that into default for\nright now.\n\n280\n00:12:18.650 --> 00:12:21.770\nIts gonna create one with a nice little\nname of group, that would be cool.\n\n281\n00:12:21.770 --> 00:12:24.150\nAnd then now my subscription,\nin other words who's paying for\n\n282\n00:12:24.150 --> 00:12:26.470\nthis, I might have more\nthan one subscription for\n\n283\n00:12:26.470 --> 00:12:29.620\ndifferent customers that I'm supporting\nand I could pick the appropriate one.\n\n284\n00:12:29.620 --> 00:12:30.680\nHere it's default into mine.\n\n285\n00:12:30.680 --> 00:12:31.590\nSo I'm okay with that.\n\n286\n00:12:31.590 --> 00:12:34.790\n>> So, Don, there is no free\ntier when it comes to Azure SQL?\n\n287\n00:12:34.790 --> 00:12:35.660\n>> Not really, no.\n\n288\n00:12:35.660 --> 00:12:39.530\nYeah, it's because the infrastructure,\nthat basic tier's really cheap.\n\n289\n00:12:39.530 --> 00:12:43.710\nAnd on some subscriptions,\nlike if you have an MSDN or a BizSpark or\n\n290\n00:12:43.710 --> 00:12:46.410\nwhatever, you get a certain\namount of credits per month.\n\n291\n00:12:46.410 --> 00:12:49.170\nThey'll give you like $150\nof credits per month, and so\n\n292\n00:12:49.170 --> 00:12:52.510\nyou could actually run an S1 and\nit wouldn't cost you a dime,\n\n293\n00:12:52.510 --> 00:12:55.220\ncuz it's covered by those credits,\nbut it's not like this is free.\n\n294\n00:12:55.220 --> 00:12:57.609\nIt still costs money,\nyou just may have credits on the account.\n\n295\n00:12:58.942 --> 00:13:00.060\nAll right, so\nI'm gonna go ahead and create,\n\n296\n00:13:00.060 --> 00:13:02.750\nI'll uncheck this pin to dashboard\njust cause that annoys me, and\n\n297\n00:13:02.750 --> 00:13:03.910\nI'll go ahead and create it.\n\n298\n00:13:03.910 --> 00:13:07.500\nIf you're not familiar with Azure, when\nI first logged in, I got my dashboard,\n\n299\n00:13:07.500 --> 00:13:09.240\nthis screen right here.\n\n300\n00:13:09.240 --> 00:13:11.490\nAnd you can pin servers to it.\n\n301\n00:13:11.490 --> 00:13:14.710\nSo when you come into the dashboard,\nyour most popular servers are right here.\n\n302\n00:13:14.710 --> 00:13:17.360\nYour most popular databases and\nresource groups, whatever,\n\n303\n00:13:17.360 --> 00:13:18.770\nand it gives you quick access.\n\n304\n00:13:18.770 --> 00:13:21.300\nThink of this as the start\nmenu in Windows.\n\n305\n00:13:21.300 --> 00:13:24.180\nIt's basically at the start screen for\nAzure.\n\n306\n00:13:24.180 --> 00:13:26.510\nAnd so it's always asking you\nif you want to pin things to it.\n\n307\n00:13:26.510 --> 00:13:27.420\n>> Awesome.\n\n308\n00:13:27.420 --> 00:13:30.661\nNow Don, as that is spinning up and\nwe've created some basic databases,\n\n309\n00:13:30.661 --> 00:13:32.230\nactually it was pretty easy.\n\n310\n00:13:32.230 --> 00:13:33.840\nNot too difficult, walk through,\n\n311\n00:13:33.840 --> 00:13:36.430\nanswer some questions,\nmake some naming conventions.\n\n312\n00:13:36.430 --> 00:13:40.110\nI really like the fact that Azure\nis handling the hardware and\n\n313\n00:13:40.110 --> 00:13:40.950\nthe operating system for me.\n\n314\n00:13:40.950 --> 00:13:42.690\nI just get access to a database.\n\n315\n00:13:42.690 --> 00:13:44.500\nI don't have to worry about all of that.\n\n316\n00:13:44.500 --> 00:13:46.280\nBut what if I already have a database?\n\n317\n00:13:46.280 --> 00:13:50.740\nAnd I wanna move that, I say maybe\nthe cloud's the way to go with this,\n\n318\n00:13:50.740 --> 00:13:52.710\nI wanna move that into the cloud.\n\n319\n00:13:52.710 --> 00:13:56.622\nHow would I do that and when would be good\ntimes for me to actually make that happen?\n\n320\n00:13:56.622 --> 00:14:00.260\n>> All right, so if we already have data,\nwe can bring it, and\n\n321\n00:14:00.260 --> 00:14:03.110\nwe saw an opportunity of that as\nwe went through the wizard, and\n\n322\n00:14:03.110 --> 00:14:05.380\nwe had that chance to\nbring in more data there.\n\n323\n00:14:05.380 --> 00:14:06.900\nIf we wanted to bring in data for\nthis database,\n\n324\n00:14:06.900 --> 00:14:08.510\nwe actually can't do it just yet.\n\n325\n00:14:08.510 --> 00:14:09.870\nAnd you know, you mentioned it's great,\n\n326\n00:14:09.870 --> 00:14:11.810\nMicrosoft took care of all\nthe stuff behind the scenes,\n\n327\n00:14:11.810 --> 00:14:15.140\nwell it's more accurate to say\nthey're taking care of it.\n\n328\n00:14:15.140 --> 00:14:17.830\nIt takes a while, right,\nto provision a server and deploy it.\n\n329\n00:14:17.830 --> 00:14:19.690\nIn fact if we go back to my UI,\n\n330\n00:14:19.690 --> 00:14:24.440\nI've got my little what is that a bell or\nnotification button or whatever,\n\n331\n00:14:24.440 --> 00:14:27.150\nif I click that,\nsee where it says creating SQL database?\n\n332\n00:14:27.150 --> 00:14:29.500\nIt still, oops that's not what I wanted,\nthere we go.\n\n333\n00:14:29.500 --> 00:14:32.150\nIt's still creating that SQL\ndatabase in the background.\n\n334\n00:14:32.150 --> 00:14:35.010\nIt's spinning up that server, and\nbecause this is the first one,\n\n335\n00:14:35.010 --> 00:14:36.620\nit's gonna take a little\nlonger than normal.\n\n336\n00:14:36.620 --> 00:14:39.170\nIt's gonna spin that server up, and\nthen it's gonna create that database, and\n\n337\n00:14:39.170 --> 00:14:40.320\nthen it's gonna activate it.\n\n338\n00:14:40.320 --> 00:14:44.490\nAnd when all of that is done,\nthen I'm ready to bring my data into it.\n\n339\n00:14:44.490 --> 00:14:48.830\nSo it's not quite ready yet, but there's\nseveral ways we can get our data in.\n\n340\n00:14:48.830 --> 00:14:50.470\nOne way we saw during the creation of it.\n\n341\n00:14:50.470 --> 00:14:54.470\nWell, while we're waiting on this, let me\nshow you guys a little bit more advanced.\n\n342\n00:14:54.470 --> 00:14:55.990\nWhen we go to create a new database, and\n\n343\n00:14:55.990 --> 00:14:59.790\nlet's say I've already got a database\non my end, and I wanna bring it in.\n\n344\n00:14:59.790 --> 00:15:02.560\nSo I wanna make some slightly more\nintelligent decisions as we go through and\n\n345\n00:15:02.560 --> 00:15:03.500\nset this up.\n\n346\n00:15:03.500 --> 00:15:05.620\nLet's take a look at some\nof those other options.\n\n347\n00:15:05.620 --> 00:15:08.390\nOne of the things we saw was\nwhat we called a resource group.\n\n348\n00:15:08.390 --> 00:15:11.880\nAnd a resource group is when we can\nhave a collection of resources, and\n\n349\n00:15:11.880 --> 00:15:18.360\na resource can be a database, a server,\na network interface, a public IP address.\n\n350\n00:15:18.360 --> 00:15:21.740\nAll these different components\nare resources in Azure.\n\n351\n00:15:21.740 --> 00:15:24.580\nAnd we can group them\ntogether to a resource group,\n\n352\n00:15:24.580 --> 00:15:29.000\nwhich is handy because if I do fail over,\nI can fail over an entire resource group.\n\n353\n00:15:29.000 --> 00:15:29.800\nThink of it like this.\n\n354\n00:15:29.800 --> 00:15:30.770\nWhen we deal with databases,\n\n355\n00:15:30.770 --> 00:15:33.120\nyou're normally dealing with\nmulti-tiered applications,\n\n356\n00:15:33.120 --> 00:15:38.100\nand so your first tier might\nbe that front facing website.\n\n357\n00:15:38.100 --> 00:15:41.030\nSo I have a web server, and\nthat's what my users go to.\n\n358\n00:15:41.030 --> 00:15:42.282\nBut then they turn around and\n\n359\n00:15:42.282 --> 00:15:45.413\nthey hit a mid-tier application\nwhere I'm processing requests, and\n\n360\n00:15:45.413 --> 00:15:48.504\nthen we have the backend tier,\nwhich is where my database is, right?\n\n361\n00:15:48.504 --> 00:15:52.670\nSo I've got three tiers involved,\na web server, an application server, and\n\n362\n00:15:52.670 --> 00:15:53.753\na database server.\n\n363\n00:15:53.753 --> 00:15:56.590\nIf anyone of those fails,\nthe whole solution's dead.\n\n364\n00:15:56.590 --> 00:15:59.463\nIf the web server's dead,\npeople can't get to the database.\n\n365\n00:15:59.463 --> 00:16:02.190\nIf the database is dead, the web server\ncan't render information, right.\n\n366\n00:16:02.190 --> 00:16:03.680\nYou gotta have all three pieces.\n\n367\n00:16:03.680 --> 00:16:06.670\nSo we can put them together\ninto a resource group, and\n\n368\n00:16:06.670 --> 00:16:11.380\nnow we treat them all as one big\nentity that's tied together.\n\n369\n00:16:11.380 --> 00:16:15.320\nSo, if I'm gonna import a database in\nhere, I usually start thinking about\n\n370\n00:16:15.320 --> 00:16:19.470\nthe rest of my application and I usually\nstart by creating that resource group.\n\n371\n00:16:19.470 --> 00:16:19.970\nRight.\n\n372\n00:16:19.970 --> 00:16:23.870\nSo I can go over here to resource groups\nand we can whip one up ahead of time or\n\n373\n00:16:23.870 --> 00:16:25.260\nwe can create one after the fact.\n\n374\n00:16:25.260 --> 00:16:28.650\nAnd you'll see a created one for\nme already, way down here at the bottom.\n\n375\n00:16:28.650 --> 00:16:30.950\nYou can see this resource\ngroup called Group.\n\n376\n00:16:30.950 --> 00:16:33.790\nThat's the one the wizard made for\nme automatically, right?\n\n377\n00:16:33.790 --> 00:16:38.420\nBut if I wanna have my own,\nI can come up here and I can add this in.\n\n378\n00:16:38.420 --> 00:16:42.690\nAnd I can start to create a group that's a\nlittle more meaningful for what I'm doing.\n\n379\n00:16:42.690 --> 00:16:46.554\nSo, this might be, like, itprotvwebapp1.\n\n380\n00:16:46.554 --> 00:16:47.169\nAll right?\n\n381\n00:16:47.169 --> 00:16:48.700\nYou know,\nlet me just leave the web part off.\n\n382\n00:16:48.700 --> 00:16:49.910\nI think that goes without saying.\n\n383\n00:16:49.910 --> 00:16:51.650\nsince it's in the cloud.\n\n384\n00:16:51.650 --> 00:16:52.960\nSo, I'm going call this itprotvwebapp1.\n\n385\n00:16:52.960 --> 00:16:54.020\nRight?\nSo, this is some\n\n386\n00:16:54.020 --> 00:16:55.660\napplication that I'm\ngoing to be pushing out.\n\n387\n00:16:55.660 --> 00:16:57.260\nIt's tied to my demo account.\n\n388\n00:16:57.260 --> 00:17:01.580\nIf my resource group, let's not do\nAustralia this time, let's do East US.\n\n389\n00:17:01.580 --> 00:17:06.680\nSo I'm going to create a resource group,\nwhich is really just a container.\n\n390\n00:17:06.680 --> 00:17:10.020\nIt's like an envelope, and\nthen we can drop stuff into it.\n\n391\n00:17:10.020 --> 00:17:13.490\nAnd so I'm just gonna create that,\nand I will pin this to the dashboard.\n\n392\n00:17:13.490 --> 00:17:16.320\nBecause every time I want to work with\nthis app, I can jump straight to the app,\n\n393\n00:17:16.320 --> 00:17:18.808\nand I'll see all the resources\nrelated to that app.\n\n394\n00:17:18.808 --> 00:17:21.470\nSo I'm gonna create that, and it's\ngoing to build that resource group and\n\n395\n00:17:21.470 --> 00:17:23.120\nthat happens really fast cuz it's empty.\n\n396\n00:17:23.120 --> 00:17:26.300\nThere's nothing to it, and it's\ncreating it and pinning it right there.\n\n397\n00:17:26.300 --> 00:17:27.857\nSo we'll see that kind of running and\n\n398\n00:17:27.857 --> 00:17:30.710\nthen as soon as it refreshes\nit will update and show it.\n\n399\n00:17:30.710 --> 00:17:34.930\nNow that I got the resource group,\nI can start adding things into it.\n\n400\n00:17:34.930 --> 00:17:37.830\nAnd that resource group can\ncontain all sorts of stuff.\n\n401\n00:17:37.830 --> 00:17:39.410\nSo for example, I might need a web server.\n\n402\n00:17:39.410 --> 00:17:40.720\nSo I'm going to go here\nto virtual machines.\n\n403\n00:17:40.720 --> 00:17:43.530\nLet me just, I'll throw a virtual\nmachine in there real quick.\n\n404\n00:17:43.530 --> 00:17:46.230\nYou know,\nI'm not gonna go too crazy on this one.\n\n405\n00:17:46.230 --> 00:17:50.250\nLet me find a Window server\n2012 R2 Data center.\n\n406\n00:17:52.160 --> 00:17:55.180\nAnd we'll just chuck this one in,\nmostly defaults.\n\n407\n00:17:55.180 --> 00:17:57.590\nAnd get that one thrown in here,\nnow you'll notice and\n\n408\n00:17:57.590 --> 00:17:59.490\nwe'll see this a little\nbit later in some areas,\n\n409\n00:17:59.490 --> 00:18:03.050\nbut see here where it's asking me\nI need to pick a deployment model.\n\n410\n00:18:03.050 --> 00:18:06.750\nAnd I can pick between Resource Manager\nand Classic, Classic being the old way.\n\n411\n00:18:06.750 --> 00:18:08.810\nI'm in the new portal,\nI need to use the resource manager for\n\n412\n00:18:08.810 --> 00:18:10.330\nthese resource groups to work.\n\n413\n00:18:10.330 --> 00:18:12.460\nSo I'm gonna create that and\nI'll just throw it in the resource group.\n\n414\n00:18:12.460 --> 00:18:15.924\nNow this is a web server, this is not\na SQL server, it's not a database server.\n\n415\n00:18:15.924 --> 00:18:22.041\nBut it's gonna be related to it\nbecause this is ItProTv App 1, web.\n\n416\n00:18:22.041 --> 00:18:23.469\nYou know what I don't even\nhave to call it that,\n\n417\n00:18:23.469 --> 00:18:24.768\nI can just call this like Web 01, right?\n\n418\n00:18:24.768 --> 00:18:29.020\nSo this is gonna be my web server\nthat's a part of this project.\n\n419\n00:18:29.020 --> 00:18:32.357\nAnd then I can come in and I can give\nit the user name and password and\n\n420\n00:18:32.357 --> 00:18:35.290\nall the other stuff to be able\nto log into it and manage it.\n\n421\n00:18:35.290 --> 00:18:38.040\nNow when I whip a server up this way,\n\n422\n00:18:38.040 --> 00:18:40.080\nthis is a server that I\nwill be able to log into.\n\n423\n00:18:40.080 --> 00:18:44.420\nI will be able to access and control and\n\n424\n00:18:44.420 --> 00:18:47.080\nI could install SQL inside\nit if I really felt like it.\n\n425\n00:18:47.080 --> 00:18:50.850\nBut the whole point of this is that we\nwant to kind of get away from having\n\n426\n00:18:50.850 --> 00:18:52.700\nto manage this stuff ourselves.\n\n427\n00:18:52.700 --> 00:18:57.605\nSo let me just go in and chose that\nweb app, that resource group and\n\n428\n00:18:57.605 --> 00:19:01.200\nthat should be just about\nall this one needs.\n\n429\n00:19:01.200 --> 00:19:02.409\nI'm gonna pick a server size,\n\n430\n00:19:02.409 --> 00:19:06.020\nagain I don't wanna go too crazy on\nthis stuff because it's a SQL show and\n\n431\n00:19:06.020 --> 00:19:09.370\nnot a Virtual Machine show, but\nI also don't want to go broke.\n\n432\n00:19:09.370 --> 00:19:13.800\nBut let me pick a size here that's not\ngonna, there we go D1 that will be great.\n\n433\n00:19:15.140 --> 00:19:16.590\nAnd we'll spin this up now.\n\n434\n00:19:16.590 --> 00:19:21.110\nWhen this comes up, this server is going\nto reside inside of that resource group.\n\n435\n00:19:21.110 --> 00:19:26.530\nAnd so as I spin up my SQL database,\nI'm gonna put in the resource group also.\n\n436\n00:19:26.530 --> 00:19:28.860\nSo it's gonna end up in that same place.\n\n437\n00:19:28.860 --> 00:19:33.000\nAnd you'll see here it wants to create a\nnew storage account for me, which is fine.\n\n438\n00:19:33.000 --> 00:19:35.650\nI want to name this a little\nmore meaningful for me though.\n\n439\n00:19:35.650 --> 00:19:39.335\nSo I'm gonna create a ITProTVapp1\n\n440\n00:19:39.335 --> 00:19:44.340\nstorage group and the database will be\nable to go into that storage account too,\n\n441\n00:19:44.340 --> 00:19:47.450\nyou can reuse these things for\nmany, many different things.\n\n442\n00:19:47.450 --> 00:19:50.240\nAll right, that should be about all\nI need there, so we'll go ahead and\n\n443\n00:19:50.240 --> 00:19:52.070\nsave that and we'll create that server.\n\n444\n00:19:52.070 --> 00:19:55.185\nSo now I've got a resource\ngroup with a web server in it.\n\n445\n00:19:55.185 --> 00:20:00.000\nAnd so I can go and create a database and\nI can put that database in the same one.\n\n446\n00:20:00.000 --> 00:20:02.710\nI pinned that server to my dash,\nI tell you I hate that.\n\n447\n00:20:02.710 --> 00:20:03.880\nAll right, there we go.\n\n448\n00:20:03.880 --> 00:20:07.426\nAll right, so now I'm gonna go and\ncreate a new database but this time when I\n\n449\n00:20:07.426 --> 00:20:11.380\ncreate the database I want to make sure\nthat it goes in that resource group.\n\n450\n00:20:11.380 --> 00:20:13.466\nSo when I go down here to SQL databases,\n\n451\n00:20:13.466 --> 00:20:16.890\nI'll see that database that we\nmade a moment ago, SampleDB1.\n\n452\n00:20:16.890 --> 00:20:22.770\nI'm gonna add a new one, and this is\ngonna be my itprotvapp1 database, right.\n\n453\n00:20:22.770 --> 00:20:26.760\nSo I need to come in and tell it all\nthe information about that one, so\n\n454\n00:20:26.760 --> 00:20:30.300\nitprotvapp1 is my database.\n\n455\n00:20:30.300 --> 00:20:34.430\nAnd the server,\nwell I can pick an existing server.\n\n456\n00:20:34.430 --> 00:20:35.180\nRight.\nThe only problem\n\n457\n00:20:35.180 --> 00:20:37.390\nwith the existing servers is\nnot in my resource group.\n\n458\n00:20:37.390 --> 00:20:37.890\nRight.\nSo\n\n459\n00:20:37.890 --> 00:20:41.055\nI might choose to spin up another server\njust to get in the resource group\n\n460\n00:20:41.055 --> 00:20:42.610\notherwise this one's separate.\n\n461\n00:20:42.610 --> 00:20:44.570\nDepending on how you wanna\ngroup things together.\n\n462\n00:20:44.570 --> 00:20:47.970\nOne of biggest advantages of resource\ngroup is you can monitor performance for\n\n463\n00:20:47.970 --> 00:20:50.530\nthe group and\nyou can do billing by the group.\n\n464\n00:20:50.530 --> 00:20:53.330\nSo if you're supporting multiple\ncustomers, you wanna divide your databases\n\n465\n00:20:53.330 --> 00:20:56.320\nup into different resource groups just so\nyou can track the billing separate.\n\n466\n00:20:56.320 --> 00:21:00.350\n>> So Don, you can't move from\none resource group to another?\n\n467\n00:21:00.350 --> 00:21:01.080\n>> Not easily.\n\n468\n00:21:01.080 --> 00:21:02.080\nThere are ways to do it,\n\n469\n00:21:02.080 --> 00:21:04.980\nbut what Microsoft will tell you is\nthe best thing to do is to just spin\n\n470\n00:21:04.980 --> 00:21:09.580\nup a new server in the new resource\ngroup and then move your database over.\n\n471\n00:21:09.580 --> 00:21:12.420\nAnd by move it over I mean actually\nlike the SQL tools to export and\n\n472\n00:21:12.420 --> 00:21:15.150\nimport your database not\nanything super crazy.\n\n473\n00:21:15.150 --> 00:21:18.398\n>> Saving yourself a lot of trouble and\nheadache but just making a new server.\n\n474\n00:21:18.398 --> 00:21:19.316\n>> Mm-hm.\n>> Gotcha.\n\n475\n00:21:19.316 --> 00:21:21.430\nYep.\nSo I'm gonna create a server here\n\n476\n00:21:21.430 --> 00:21:25.179\nwhich I'm going to call itprotvapp1,\nthatâ€™s my app, I'll give it a login.\n\n477\n00:21:26.840 --> 00:21:31.820\nAnd again, this will be my login for\nSQL, not the login for the base OS.\n\n478\n00:21:31.820 --> 00:21:36.870\nI won't be able to see that base OS and\nwe'll put this in East US.\n\n479\n00:21:36.870 --> 00:21:39.210\nYou actually can have\na server in one region and\n\n480\n00:21:39.210 --> 00:21:41.130\nit be in a resource group\nthat's in another region.\n\n481\n00:21:41.130 --> 00:21:44.200\nThere's not a whole lot of reason for\ndoing that, but you can.\n\n482\n00:21:44.200 --> 00:21:48.790\nSo sometimes, just because you can do\nsomething doesn't mean that you should.\n\n483\n00:21:48.790 --> 00:21:49.729\nBut there we go.\nAll right, so\n\n484\n00:21:49.729 --> 00:21:51.420\nthat's basically what we need there.\n\n485\n00:21:51.420 --> 00:21:54.240\nI'm gonna go ahead and\nsay okay to get that one running.\n\n486\n00:21:54.240 --> 00:21:58.350\nAnd that's gonna whip up that server, and\n\n487\n00:21:58.350 --> 00:22:00.110\nafter that we just need to\ngive it a little more data.\n\n488\n00:22:00.110 --> 00:22:02.170\nNow when I choose blank database,\n\n489\n00:22:02.170 --> 00:22:05.570\nhere's the first opportunity that\nI have to import data into this.\n\n490\n00:22:05.570 --> 00:22:06.300\nAll right.\n\n491\n00:22:06.300 --> 00:22:10.955\nIf I've already got servers in Azure,\nSQL servers in Azure,\n\n492\n00:22:10.955 --> 00:22:16.720\nSQL databases, I can actually take one of\ntheir backups and restore it to this one.\n\n493\n00:22:16.720 --> 00:22:19.800\nSo for example,\nmaybe I've got a production database, and\n\n494\n00:22:19.800 --> 00:22:22.090\nI'm wanting to whip up a staging database,\nright?\n\n495\n00:22:22.090 --> 00:22:24.990\nOr just a development database,\nsomebody wants to try something.\n\n496\n00:22:24.990 --> 00:22:28.040\nWell, I could come in here and\nI can choose Backup,\n\n497\n00:22:28.040 --> 00:22:33.530\nand when I choose Backup,\nit's gonna let me browse from\n\n498\n00:22:33.530 --> 00:22:38.490\nmy storage accounts, and\nfind a backup and restore from it.\n\n499\n00:22:38.490 --> 00:22:42.370\nSo like if I go down here to backups, I\ncan start to see the storage accounts that\n\n500\n00:22:42.370 --> 00:22:44.700\nI have and I can browse into those and\nsee what's available.\n\n501\n00:22:44.700 --> 00:22:48.450\nNow, we just started this one, so\nI don't have any backups available.\n\n502\n00:22:48.450 --> 00:22:50.290\nBut I'd see them here and\nI can kind of pick from them,\n\n503\n00:22:50.290 --> 00:22:52.000\nand that would be the source.\n\n504\n00:22:52.000 --> 00:22:56.170\nIf you don't have that, then you basically\njust need to create a blank database, and\n\n505\n00:22:56.170 --> 00:22:59.120\nthen we'll be able to bring\nthe data in ourselves.\n\n506\n00:22:59.120 --> 00:23:02.510\nI could choose that sample data and\nget AdventureWorks, that would work also.\n\n507\n00:23:02.510 --> 00:23:03.040\nAll right.\n\n508\n00:23:03.040 --> 00:23:04.422\nFor the pricings here we can change that,\n\n509\n00:23:04.422 --> 00:23:06.600\nI'll leave mine be,\nthe collation we talked about.\n\n510\n00:23:06.600 --> 00:23:09.040\nAnd then the resource group,\nhere really important.\n\n511\n00:23:09.040 --> 00:23:12.560\nI need to go down to this group and choose\nthat resource group that I made earlier,\n\n512\n00:23:12.560 --> 00:23:14.650\nwhich I called ITProTV App 1,\n\n513\n00:23:14.650 --> 00:23:19.750\nso that it'll know that it's a part of\nthat group and then I can create this one.\n\n514\n00:23:19.750 --> 00:23:22.310\nAnd I'm not gonna pin it cuz I've\ngot the resource group pinned.\n\n515\n00:23:22.310 --> 00:23:26.620\nAll right, so now I'm gonna get\na blank database up and running.\n\n516\n00:23:26.620 --> 00:23:29.590\nAnd now we're ready to go and\ntry and get our data in there.\n\n517\n00:23:29.590 --> 00:23:31.740\nNow how do I get my data in there for\nthis guy?\n\n518\n00:23:31.740 --> 00:23:36.420\nWell, once it's done, once it's spun up,\nnow I can go and do the import process.\n\n519\n00:23:36.420 --> 00:23:40.494\nIf I go over here to my SQL databases, and\nI'll take the database we made earlier,\n\n520\n00:23:40.494 --> 00:23:41.629\nSampleDB1, right?\n\n521\n00:23:41.629 --> 00:23:46.125\nIf I choose SampleDB1 on it's\nscreen you'll actually see a few\n\n522\n00:23:46.125 --> 00:23:50.380\ndifferent options that you have\nkind of tucked away in here.\n\n523\n00:23:50.380 --> 00:23:51.260\nAnd.\n\n524\n00:23:51.260 --> 00:23:53.150\nYou'll see this export.\n\n525\n00:23:53.150 --> 00:23:59.020\nYou can export a database to then go and\nimport it somewhere else, right?\n\n526\n00:23:59.020 --> 00:24:02.790\nSo if I wanna import data into it,\nI can use this method.\n\n527\n00:24:02.790 --> 00:24:07.850\nAnd again, this goes back to the whole\nproduction versus a staging or\n\n528\n00:24:07.850 --> 00:24:09.010\na derv server.\n\n529\n00:24:09.010 --> 00:24:11.990\nIt's nice to be able to export that and\nthen import it to another side.\n\n530\n00:24:11.990 --> 00:24:16.170\nWhen we export it the cool thing\nhere is like a right then backup.\n\n531\n00:24:16.170 --> 00:24:19.810\nI'm exporting this data\nright now as it stand.\n\n532\n00:24:19.810 --> 00:24:24.055\nAnd when you export it, it's gonna go\ninto one of your storage accounts, right?\n\n533\n00:24:24.055 --> 00:24:27.235\nRight, in one of your Azure storage\naccounts which means you can then\n\n534\n00:24:27.235 --> 00:24:28.035\nrestore it immediately.\n\n535\n00:24:28.035 --> 00:24:30.065\nIt's not gonna download all\nthe way down to your computer.\n\n536\n00:24:30.065 --> 00:24:33.395\nIt's all staying in Azure and\nso it's very fast, right?\n\n537\n00:24:33.395 --> 00:24:35.055\nYou export quickly,\nyou import somewhere else, and\n\n538\n00:24:35.055 --> 00:24:36.925\nnow you got a copy of your database.\n\n539\n00:24:36.925 --> 00:24:41.265\nSo that's where we can kinda populate\nthat data from if we need to.\n\n540\n00:24:41.265 --> 00:24:45.090\nNow the other thing we can do is\nyou'll notice this button right here,\n\n541\n00:24:45.090 --> 00:24:47.370\nopen in visual studio.\n\n542\n00:24:47.370 --> 00:24:51.640\nSo right now I'm in the Web UI for\nAzure and there's only so much we can do.\n\n543\n00:24:51.640 --> 00:24:55.510\nBut if I have visual studio installed\non my computer I can fire that up,\n\n544\n00:24:55.510 --> 00:24:58.000\nconnect to the database server and\n\n545\n00:24:58.000 --> 00:25:02.840\nthen I can do all the various things\nthat we do with visual studio.\n\n546\n00:25:02.840 --> 00:25:07.070\nSo I can use server integration services,\nSSIS.\n\n547\n00:25:07.070 --> 00:25:13.650\nI can use backpacks, the backpack\nbackups of a database to bring those in.\n\n548\n00:25:13.650 --> 00:25:17.510\nI can use several different methods to get\nthat data and restore it right in there.\n\n549\n00:25:17.510 --> 00:25:19.840\nThere's a lot of cool stuff.\n\n550\n00:25:19.840 --> 00:25:22.000\nBut let's say that I use\nexport functionality.\n\n551\n00:25:22.000 --> 00:25:24.040\nAnd I exported that database.\n\n552\n00:25:24.040 --> 00:25:28.135\nWell once it's exported,\nyou can go down to your SQL servers,\n\n553\n00:25:28.135 --> 00:25:29.769\ndown here at the bottom.\n\n554\n00:25:29.769 --> 00:25:34.047\nAnd so I'm gonna go to SQL servers, and\nthere's the itprotvsample server that we\n\n555\n00:25:34.047 --> 00:25:36.590\nmade in the first example,\nso it's already up.\n\n556\n00:25:36.590 --> 00:25:38.190\nMy other server's not up yet.\n\n557\n00:25:38.190 --> 00:25:40.070\nAnd when I come in here to itprotvsample,\n\n558\n00:25:40.070 --> 00:25:43.500\nthe server,\nnow I've got the import database button.\n\n559\n00:25:43.500 --> 00:25:44.800\nNow, why did I have to\ngo a different place?\n\n560\n00:25:44.800 --> 00:25:48.600\nI saw export under the databases, and\nthen I had go to servers to do the import.\n\n561\n00:25:48.600 --> 00:25:50.730\nWell, the reason is\nthe database doesn't exist yet.\n\n562\n00:25:50.730 --> 00:25:53.830\nSo if I go to SQL databases,\nI only see databases that exist and\n\n563\n00:25:53.830 --> 00:25:55.120\nI don't have an import there.\n\n564\n00:25:55.120 --> 00:25:58.200\nBut if I go to the server,\nthat's where I see import.\n\n565\n00:25:58.200 --> 00:26:01.589\nAnd if I choose to import,\nit's gonna launch the import wizard,\n\n566\n00:26:01.589 --> 00:26:04.436\nwhich is really just another\npain off here to the side.\n\n567\n00:26:04.436 --> 00:26:09.020\nAnd when we go in there it's gonna ask\nokay, where's this import coming from?\n\n568\n00:26:09.020 --> 00:26:10.320\nAnd I can choose my storage.\n\n569\n00:26:11.380 --> 00:26:16.230\nAnd inside of storage I can choose\nthe storage account, the container and\n\n570\n00:26:16.230 --> 00:26:18.140\nthe backpack that's there, right?\n\n571\n00:26:18.140 --> 00:26:20.840\nSo I can pick, I think I have an old\nstorage account laying around.\n\n572\n00:26:20.840 --> 00:26:23.740\nLet's see if we've got one.\n\n573\n00:26:23.740 --> 00:26:25.050\nThe funny part is when you do this export,\n\n574\n00:26:25.050 --> 00:26:27.800\nit actually back up to\na legacy storage account.\n\n575\n00:26:27.800 --> 00:26:30.490\nNot the, just the classic storage account.\n\n576\n00:26:30.490 --> 00:26:33.400\nBut you've got one,\nI just named it, I just put legacy.\n\n577\n00:26:33.400 --> 00:26:36.570\nAnd so I can go in here and I can pick it,\nI can find a container inside of it.\n\n578\n00:26:36.570 --> 00:26:38.420\nWe'll see if I actually have\na backup in here or not.\n\n579\n00:26:38.420 --> 00:26:41.740\nI have a folder called db backups but\nthat doesn't necessarily mean anything.\n\n580\n00:26:42.740 --> 00:26:43.770\nLet's see, it's empty.\n\n581\n00:26:43.770 --> 00:26:46.477\nSee how it's looking for a backpack.\n\n582\n00:26:46.477 --> 00:26:49.048\nBackpacks you can generate\nfrom the sequel studio, but\n\n583\n00:26:49.048 --> 00:26:52.779\nit's actually generating backup if I go\nall the way back to my sequel databases.\n\n584\n00:26:54.010 --> 00:26:59.110\nAnd I take this database sample db1, and\nI do the export I was talking about.\n\n585\n00:26:59.110 --> 00:27:01.630\nIt's actually gonna generate\nthat backpack, and so\n\n586\n00:27:01.630 --> 00:27:05.700\nif I do export, over here I can\npick where I want it to go, and\n\n587\n00:27:05.700 --> 00:27:09.650\nwe can pick that storage to send it along\ntoo and it will generate that backup.\n\n588\n00:27:09.650 --> 00:27:11.850\nSo, oops,\nlooks like we had a failure up there.\n\n589\n00:27:13.230 --> 00:27:14.900\nSo I can back this up though,\nand I'm gonna pick.\n\n590\n00:27:14.900 --> 00:27:16.480\nI'm gonna ignore that failure for\na minute.\n\n591\n00:27:16.480 --> 00:27:21.150\nI'm gonna back up to that itprotvlegacy\nstorage account that we saw a moment ago.\n\n592\n00:27:21.150 --> 00:27:22.659\nAnd for the container,\n\n593\n00:27:22.659 --> 00:27:26.894\nwe'll just use the backups container\nthat I already had in there.\n\n594\n00:27:26.894 --> 00:27:31.920\nAnd then we can say like the server admin\nlogin for being able to manage this thing.\n\n595\n00:27:31.920 --> 00:27:32.900\nSo I'll punch that in.\n\n596\n00:27:34.320 --> 00:27:34.860\nThere we go.\n\n597\n00:27:34.860 --> 00:27:36.930\nAnd it's gonna generate that backup.\n\n598\n00:27:38.010 --> 00:27:41.460\nAnd oh did I not, I forgot to click okay,\nthat will do it every time.\n\n599\n00:27:41.460 --> 00:27:44.780\nThere we go, all right, so that is fixed.\n\n600\n00:27:46.010 --> 00:27:50.040\nAnd that should be\neverything that it needs.\n\n601\n00:27:50.040 --> 00:27:51.186\nOoh shoot.\n\n602\n00:27:51.186 --> 00:27:55.837\nSometimes this happens if you donâ€™t click\nokay, see I lost my settings there and so\n\n603\n00:27:55.837 --> 00:27:57.640\nnow I just have to re pick those.\n\n604\n00:27:57.640 --> 00:28:01.930\nSo Iâ€™ll go and\npick my storage account again, there and\n\n605\n00:28:01.930 --> 00:28:05.230\nfor container I'll pick\nthat backup db container.\n\n606\n00:28:06.480 --> 00:28:08.250\nJob worth doing is worth doing\ntwice is what I always say.\n\n607\n00:28:08.250 --> 00:28:09.133\nAt least.\n[LAUGH] And\n\n608\n00:28:09.133 --> 00:28:13.270\nthis time I'll remember to click okay,\ncuz that is kinda important.\n\n609\n00:28:13.270 --> 00:28:15.750\nAnd now my little create\nbutton should light up.\n\n610\n00:28:15.750 --> 00:28:17.420\nThere we go.\nSo the little warning went away and\n\n611\n00:28:17.420 --> 00:28:20.130\nnow I can hit create and\nit's gonna whip this back up in place.\n\n612\n00:28:20.130 --> 00:28:21.640\nSo it's gonna back it up.\n\n613\n00:28:21.640 --> 00:28:23.640\nMy database stays online.\n\n614\n00:28:23.640 --> 00:28:24.720\nThe users don't see that.\n\n615\n00:28:24.720 --> 00:28:26.130\nIt generates that backup.\n\n616\n00:28:26.130 --> 00:28:27.440\nAnd I gotta wait for that to finish and\n\n617\n00:28:27.440 --> 00:28:31.050\nI can see here it's request\nsubmitted to export database.\n\n618\n00:28:31.050 --> 00:28:32.230\nAnd so I'll have to give that a moment.\n\n619\n00:28:32.230 --> 00:28:35.561\nBut once that's done then I can go down to\nmy SQL server and I can choose the server.\n\n620\n00:28:35.561 --> 00:28:40.797\nAnd I can choose to import and\nit'll import that database and\n\n621\n00:28:40.797 --> 00:28:43.770\nlet me assign a new name to it.\n\n622\n00:28:43.770 --> 00:28:46.110\nAnd now I'll have a database that's\npopulated with production data.\n\n623\n00:28:47.270 --> 00:28:50.400\nBut the way that I normally\ndo it is a little different.\n\n624\n00:28:50.400 --> 00:28:54.520\nIn our next episode we're gonna see how to\nconnect our client to the database server.\n\n625\n00:28:54.520 --> 00:28:57.510\nAnd once you're in the Sequel Management\nStudio, you can connect up and\n\n626\n00:28:57.510 --> 00:28:59.580\nyou can use all the tools in\nthere that you're used to.\n\n627\n00:28:59.580 --> 00:29:03.910\nYou can actually manage your Azure Server\njust like you would an on premises server.\n\n628\n00:29:03.910 --> 00:29:05.800\nAnd that means we can create our database.\n\n629\n00:29:05.800 --> 00:29:09.520\nWe can populate it with data with just\na transact SQL script if we want.\n\n630\n00:29:09.520 --> 00:29:11.120\nWe can do it with a backpack if we want.\n\n631\n00:29:11.120 --> 00:29:14.200\nWe can use the deploy to Azure wizard.\n\n632\n00:29:14.200 --> 00:29:16.850\nThere's actually a wizard if you\nhave an on premises server and\n\n633\n00:29:16.850 --> 00:29:19.440\nyou wanna move the database\nup into the cloud.\n\n634\n00:29:19.440 --> 00:29:22.930\nYou can do it right from your client.\n\n635\n00:29:22.930 --> 00:29:25.190\nSo we need to get the client connected\nbefore we can do that though and\n\n636\n00:29:25.190 --> 00:29:27.580\nI definitely wanna show that but\nwe'll have to save.\n\n637\n00:29:27.580 --> 00:29:30.270\nI definitely don't have enough time\nin this episode to run through that.\n\n638\n00:29:30.270 --> 00:29:31.300\nBut we'll take a client and\n\n639\n00:29:31.300 --> 00:29:34.070\nget it connected and\nkinda push a database up there that way.\n\n640\n00:29:34.070 --> 00:29:37.265\nSo as far as getting data in our database\nlet's kinda recap cuz we talked about\n\n641\n00:29:37.265 --> 00:29:38.410\na lot of different things.\n\n642\n00:29:38.410 --> 00:29:42.370\nThere was the Azure sample database,\nright?\n\n643\n00:29:42.370 --> 00:29:43.240\nThat was in the wizard.\n\n644\n00:29:43.240 --> 00:29:46.160\nWe could just choose that when\nwe initially spin up a database.\n\n645\n00:29:46.160 --> 00:29:49.030\nThere was using a backpack to restore,\nright?\n\n646\n00:29:49.030 --> 00:29:51.970\nIf you have a backup in Azure already,\n\n647\n00:29:51.970 --> 00:29:55.330\nyou can restore it right in and\nthat'll build up that data.\n\n648\n00:29:55.330 --> 00:29:59.080\nWe can use the SQL Management Studio\nin the deploy to Azure wizard.\n\n649\n00:29:59.080 --> 00:30:01.250\nYou can use transact SQL scripts.\n\n650\n00:30:01.250 --> 00:30:02.510\nAnd you can even use SSIS.\n\n651\n00:30:02.510 --> 00:30:05.970\nAnd SSIS has a couple of advantages\nbecause it can do things like\n\n652\n00:30:05.970 --> 00:30:10.660\ngrab a database from oracle and\ndeposit into Azure.\n\n653\n00:30:10.660 --> 00:30:14.680\nOr grab a database with one collation and\ndeposit it with a different collation.\n\n654\n00:30:14.680 --> 00:30:16.060\nIt can do some really cool stuff.\n\n655\n00:30:16.060 --> 00:30:19.260\nIt can transform the data\nwhile it's in motion.\n\n656\n00:30:19.260 --> 00:30:20.780\nAnd get it kinda set\nthe way you want it set.\n\n657\n00:30:20.780 --> 00:30:24.025\nSo that's another way, there's a ton of\ndifferent ways to move databases into\n\n658\n00:30:24.025 --> 00:30:27.870\nAzure, it really just boils down to\nwhat is gonna work out the best for you.\n\n659\n00:30:27.870 --> 00:30:31.920\nBut as far as creating the database,\nwe just picked a server,\n\n660\n00:30:31.920 --> 00:30:35.260\npicked a performance level and\ngave him some names.\n\n661\n00:30:35.260 --> 00:30:38.410\nThe resource group was kinda the hardest\npart, making sure we had that set up.\n\n662\n00:30:38.410 --> 00:30:39.990\nSo all our resources were tied together.\n\n663\n00:30:39.990 --> 00:30:43.380\nYeah creating a database really wasn't\nthat difficult and even some of the other\n\n664\n00:30:43.380 --> 00:30:47.410\nthings you do where you're importing\ninto that, that was pretty intuitive.\n\n665\n00:30:47.410 --> 00:30:49.470\nI like the UI that's in Azure.\n\n666\n00:30:49.470 --> 00:30:53.710\nIt does make things very seamless as\nyou're trying to work your way through it.\n\n667\n00:30:53.710 --> 00:30:56.630\nDon, any other parting words of wisdom?\n\n668\n00:30:56.630 --> 00:30:58.600\nThe main one being stay tuned for\nthe next episode,\n\n669\n00:30:58.600 --> 00:31:00.990\ncuz we're gonna show how to\nconnect your client to Azure.\n\n670\n00:31:00.990 --> 00:31:02.400\nSo we'll get to see\na little bit more there.\n\n671\n00:31:02.400 --> 00:31:04.420\nI'll actually spin up\na database from there and\n\n672\n00:31:04.420 --> 00:31:05.910\nyou'll get a chance to see that process.\n\n673\n00:31:05.910 --> 00:31:06.550\nIt's pretty neat.\n\n674\n00:31:06.550 --> 00:31:09.900\nDatabases don't just sit out there And\noh, I'm just existing and\n\n675\n00:31:09.900 --> 00:31:10.605\nit's a wonderful thing.\n\n676\n00:31:10.605 --> 00:31:13.670\n[LAUGH] I have to connect to them,\nmake them actually do something.\n\n677\n00:31:13.670 --> 00:31:14.800\nDon, we're looking forward to that.\n\n678\n00:31:14.800 --> 00:31:17.140\nThank you for showing us this so far.\n\n679\n00:31:17.140 --> 00:31:19.030\nAnd hopefully we'll see you\nguys in that next episode.\n\n680\n00:31:19.030 --> 00:31:21.550\nAs for this one, go ahead and\nclose it on down.\n\n681\n00:31:21.550 --> 00:31:24.840\nSigning off for ITProTV,\nI've been your host Daniel Lowrie.\n\n682\n00:31:24.840 --> 00:31:25.490\nAnd I'm Don Pezet.\n\n683\n00:31:25.490 --> 00:31:26.853\nAnd we'll see you next time.\n\n684\n00:31:26.853 --> 00:31:34.350\n[SOUND]\n\n",
          "vimeoId": "148658750"
        },
        {
          "description": "In this episode, Don and Daniel detail ways in which you can connect your Azure SQL database to a SQL client/manager. First they start with connecting Azure SQL to Microsoft's Visual Studio. Then they show you how to download, install, and configure Microsoft's SQL Management Studio.",
          "length": "2092",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-azuresql/techskills-azuresql-1-3-connecting_your_client-120815-1.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-azuresql/techskills-azuresql-1-3-connecting_your_client-120815-1-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-azuresql/techskills-azuresql-1-3-connecting_your_client-120815-1-sm.jpg",
          "title": "Connecting Your Client",
          "transcript": "WEBVTT\n\n1\n00:00:00.045 --> 00:00:10.045\n[MUSIC]\n\n2\n00:00:12.294 --> 00:00:16.849\nAll right, greetings everyone and welcome\nto another great episode of ITProTV.\n\n3\n00:00:16.849 --> 00:00:18.328\nI'm your host Daniel Lowrie and\n\n4\n00:00:18.328 --> 00:00:22.360\nin today's episode we're gonna continue\ntaking a look at Microsoft Azure SQL.\n\n5\n00:00:22.360 --> 00:00:26.170\nAnd joining me in the studio yet again to\nhelp us out, gonna trudge us through this\n\n6\n00:00:26.170 --> 00:00:30.050\ndifficult, trying task, is none other\nthan my good friend, Mr. Don Pezet.\n\n7\n00:00:30.050 --> 00:00:31.670\nDon, welcome to the show,\nhow's it going today?\n\n8\n00:00:31.670 --> 00:00:33.830\n>> It is going great, Daniel,\nthanks for having me back on the show.\n\n9\n00:00:33.830 --> 00:00:36.900\nAnd, you introduce it as always\nas another great episode, so\n\n10\n00:00:36.900 --> 00:00:39.200\nnow I've got these expectations\nI gotta live up to.\n\n11\n00:00:39.200 --> 00:00:41.280\nI'm kinda looking forward\nto today's topic though.\n\n12\n00:00:41.280 --> 00:00:44.910\nToday's topic is something that\nis equal parts kinda silly, and\n\n13\n00:00:44.910 --> 00:00:46.160\nactually kind of really important,\n\n14\n00:00:46.160 --> 00:00:51.360\nwhich is once you've created a database\nup in Azure, how do you work with it?\n\n15\n00:00:51.360 --> 00:00:54.240\nHow do you connect to and\nactually use the darn thing?\n\n16\n00:00:54.240 --> 00:00:56.011\nIt's there, and\nwe've gotta be able to access it.\n\n17\n00:00:56.011 --> 00:00:59.796\nSo, we're gonna take a look at how to get\nour client machine, like your laptop or\n\n18\n00:00:59.796 --> 00:01:01.355\nyour desktop in your own office,\n\n19\n00:01:01.355 --> 00:01:04.660\nconnected to this database that's\nnow out there in the cloud.\n\n20\n00:01:04.660 --> 00:01:06.120\nSo you can access those resources,\n\n21\n00:01:06.120 --> 00:01:09.480\nstart to work with it, and\nactually use what you're paying for.\n\n22\n00:01:09.480 --> 00:01:11.619\nIt almost seems like this\nshould go without saying, but\n\n23\n00:01:11.619 --> 00:01:14.634\nthere's actually several different ways\nto connect and get your data going.\n\n24\n00:01:14.634 --> 00:01:17.040\nAnd so we wanna take a look\nat some of those today.\n\n25\n00:01:17.040 --> 00:01:21.386\n>> Yeah, Don, when it comes to regular\nSQL, if I've spun up a SQL Server,\n\n26\n00:01:21.386 --> 00:01:25.405\nlike you said, there are quite a few\nin which I can connect to that.\n\n27\n00:01:25.405 --> 00:01:28.420\nNow that we're working in Azure,\nthat kinda lends us to think that\n\n28\n00:01:28.420 --> 00:01:30.600\nthere might be something\nextra that we have to do,\n\n29\n00:01:30.600 --> 00:01:33.920\nor something different or\nmaybe even more difficult.\n\n30\n00:01:33.920 --> 00:01:36.590\nIs it just as easy as\nthe old school stuff or\n\n31\n00:01:36.590 --> 00:01:38.540\nthere are new things\nthat we have to learn?\n\n32\n00:01:38.540 --> 00:01:40.970\n>> Well, for the most part,\nit is like the old school stuff.\n\n33\n00:01:40.970 --> 00:01:43.593\nIf you've worked with\nthe Microsoft SQL before, and\n\n34\n00:01:43.593 --> 00:01:47.260\nyou used the SQL Management Studio and\nyou connected up to the database and\n\n35\n00:01:47.260 --> 00:01:48.990\nyou started working with it.\n\n36\n00:01:48.990 --> 00:01:53.040\nOnce you're connected, a database that's\nin Azure is not really any different than\n\n37\n00:01:53.040 --> 00:01:54.260\na database that's local.\n\n38\n00:01:54.260 --> 00:01:57.250\nI mean, it might take a little longer for\nyour queries to get back and forth\n\n39\n00:01:57.250 --> 00:02:00.540\nbetween the server, but other than that,\nthe behaviors are pretty much the same.\n\n40\n00:02:00.540 --> 00:02:04.150\nThere are some things that\nhave been replaced though.\n\n41\n00:02:04.150 --> 00:02:07.310\nSome things like the SQL Server Agent,\nwhich if you haven't heard of that,\n\n42\n00:02:07.310 --> 00:02:12.170\nthe SQL Server Agent on a on-premises\nserver is a little service that runs in\n\n43\n00:02:12.170 --> 00:02:14.410\nthe background and\nit takes care of scheduled jobs.\n\n44\n00:02:14.410 --> 00:02:17.070\nSo if you have something you wanna\nrun every hour or once a day or\n\n45\n00:02:17.070 --> 00:02:19.230\nwhatever, you use\nthe SQL Server Agent to do it.\n\n46\n00:02:19.230 --> 00:02:20.610\nIt also does maintenance.\n\n47\n00:02:20.610 --> 00:02:25.760\nWell, in Azure or Azure SQL, maintenance\nis already being done by Microsoft.\n\n48\n00:02:25.760 --> 00:02:26.800\nAnd so,\n\n49\n00:02:26.800 --> 00:02:29.800\nwe don't necessarily need the agent\nanymore unless we wanna schedule tasks.\n\n50\n00:02:29.800 --> 00:02:32.900\nAnd for scheduling tasks,\nwe have what's called Azure Automation,\n\n51\n00:02:32.900 --> 00:02:36.960\nwhich allows you to automate tasks across\nall the Azure products, not just SQL.\n\n52\n00:02:36.960 --> 00:02:38.790\nSo there's little variations like that,\n\n53\n00:02:38.790 --> 00:02:41.920\nthings that are different than\nan on-premises installation\n\n54\n00:02:41.920 --> 00:02:45.160\nthat make it just enough that we do\nneed to spend some time and cover it.\n\n55\n00:02:45.160 --> 00:02:49.230\nSo where I wanna start is I wanna start\nwith the official Microsoft way of\n\n56\n00:02:49.230 --> 00:02:50.975\nhow you're supposed to\nconnect up to this database.\n\n57\n00:02:50.975 --> 00:02:53.850\nCuz they try and make it easy and\nsimple for you to do,\n\n58\n00:02:53.850 --> 00:02:56.160\nand it's just a couple of steps\nthat we have to jump through.\n\n59\n00:02:56.160 --> 00:02:58.680\nSo I've got my topology pulled up here,\nand\n\n60\n00:02:58.680 --> 00:03:01.570\nthis is the one we've been working\nwith in the first couple of episodes.\n\n61\n00:03:01.570 --> 00:03:04.778\nAnd in one of the earlier episodes,\nI created a database,\n\n62\n00:03:04.778 --> 00:03:07.014\nthis guy right here called SampleDB1.\n\n63\n00:03:07.014 --> 00:03:09.011\nAnd so I've still got that\ndatabase sitting right here.\n\n64\n00:03:09.011 --> 00:03:13.773\nNow, unfortunately, it's been more than\ntwo minutes and so I can't remember,\n\n65\n00:03:13.773 --> 00:03:17.499\nwhen I spun this database up,\nI either spun up a blank database or\n\n66\n00:03:17.499 --> 00:03:20.139\nI spun it up choosing\nto include sample data.\n\n67\n00:03:20.139 --> 00:03:23.281\nRight, which would be that AdventureWorks\nDatabase that has a bunch of tables and\n\n68\n00:03:23.281 --> 00:03:25.250\nstuff in it, I can't really remember.\n\n69\n00:03:25.250 --> 00:03:29.300\nAnd so if I wanna find out, I need to\nopen this database and look inside it,\n\n70\n00:03:29.300 --> 00:03:33.130\nlook at the tables and things and\nwhat is in this database?\n\n71\n00:03:33.130 --> 00:03:36.500\nAnd then I'll know whether I spun\nit up as blank or sample data.\n\n72\n00:03:36.500 --> 00:03:38.420\nBut here from the web UI,\n\n73\n00:03:38.420 --> 00:03:41.580\nthere's not really a great\nway to look at your database.\n\n74\n00:03:41.580 --> 00:03:46.310\nI can't pull up the tables and start to\ngo in it or run a query against it even.\n\n75\n00:03:46.310 --> 00:03:49.120\nThey haven't added that to\nthe Azure portal yet and\n\n76\n00:03:49.120 --> 00:03:50.210\nI don't know if they ever will.\n\n77\n00:03:50.210 --> 00:03:52.910\nI haven't seen anything indicating\nthey have plans for that.\n\n78\n00:03:52.910 --> 00:03:56.178\nBut eventually, one of these days,\nwe might see where they add that in and\n\n79\n00:03:56.178 --> 00:03:57.139\nwe get that support.\n\n80\n00:03:57.139 --> 00:03:59.580\nBut for now, I just wanna connect to it.\n\n81\n00:03:59.580 --> 00:04:02.530\nWell, when you look at a database,\nup towards the top,\n\n82\n00:04:02.530 --> 00:04:07.780\nthere's this little menu item right\nhere that says Open in Visual Studio.\n\n83\n00:04:07.780 --> 00:04:10.910\nIf I were on a higher resolution monitor\nyou'd actually see the whole word but,\n\n84\n00:04:10.910 --> 00:04:14.040\nOpen in Visual ...,\nwhich is Visual Studio.\n\n85\n00:04:14.040 --> 00:04:17.870\nSo, if you've got Visual Studio\ninstalled on your computer,\n\n86\n00:04:17.870 --> 00:04:23.240\nwe can hand off a config file to Visual\nStudio and connect right to this database.\n\n87\n00:04:23.240 --> 00:04:25.630\nBut you don't even need\na config file necessarily,\n\n88\n00:04:25.630 --> 00:04:28.810\nbecause all the information you\nneed is really provided to you.\n\n89\n00:04:28.810 --> 00:04:30.560\nWe've got right here a server name.\n\n90\n00:04:30.560 --> 00:04:33.450\nThe server name is a fully\nqualified DNS name that can\n\n91\n00:04:33.450 --> 00:04:34.740\nbe resolved anywhere in the world.\n\n92\n00:04:34.740 --> 00:04:37.000\nSo any of you guys sitting at\nhome right now could see this and\n\n93\n00:04:37.000 --> 00:04:42.260\nsay itprotvsample.database.windows.net,\nI'm gonna try and connect to that, right?\n\n94\n00:04:42.260 --> 00:04:45.800\nAnd just like Microsoft SQL, it listens\nout for connections on that port and\n\n95\n00:04:45.800 --> 00:04:49.125\nyou can connect in, assuming you have\na valid user name and a password.\n\n96\n00:04:49.125 --> 00:04:53.540\nWell, that's not 100% true and if any of\nyou are feverishly trying to connect right\n\n97\n00:04:53.540 --> 00:04:55.790\nnow you might notice you\nactually don't get to the server.\n\n98\n00:04:55.790 --> 00:04:58.544\nAnd the reason is that\nthe security settings,\n\n99\n00:04:58.544 --> 00:05:01.439\nthe software firewall\nthat Windows Azure uses,\n\n100\n00:05:01.439 --> 00:05:05.762\nblocks 100% of Internet connections\nto this SQL Server by default.\n\n101\n00:05:05.762 --> 00:05:08.560\nAnd we're gonna talk more about\nthat in the security episodes.\n\n102\n00:05:08.560 --> 00:05:12.250\nBut just for me to connect and work with\nit, I can't even connect to it right now,\n\n103\n00:05:12.250 --> 00:05:14.450\nbecause of the default\nsettings that are on it.\n\n104\n00:05:14.450 --> 00:05:16.390\nSo if I wanna get connected to it,\n\n105\n00:05:16.390 --> 00:05:20.560\nI need a little bit more information than\nkind of what they're giving me here.\n\n106\n00:05:20.560 --> 00:05:24.747\nSo up top here, if I go to that Open\nin Visual Studio and click on that,\n\n107\n00:05:24.747 --> 00:05:29.589\nthe sidebar is gonna update, and\nthere's actually some good stuff, whoops,\n\n108\n00:05:29.589 --> 00:05:31.780\nif I can get over here to my sidebar.\n\n109\n00:05:32.810 --> 00:05:34.470\nThere's some good stuff\nover in this sidebar.\n\n110\n00:05:34.470 --> 00:05:35.580\nWhat have I done?\n\n111\n00:05:35.580 --> 00:05:37.839\nI've lost control of my mouse here.\n\n112\n00:05:37.839 --> 00:05:41.132\n[LAUGH] I've lost control of\nVisual Studio, madness is ensuing.\n\n113\n00:05:41.132 --> 00:05:43.730\nSo, over here what we'll see is\nyou've got this Visual Studio with\n\n114\n00:05:43.730 --> 00:05:44.969\nthe Open in Visual Studio link.\n\n115\n00:05:44.969 --> 00:05:50.890\nBut beneath that, right, so just down a\nlittle bit Configure your firewall, right?\n\n116\n00:05:50.890 --> 00:05:54.230\nThey make it really easy to quickly\ncreate a management exception for\n\n117\n00:05:54.230 --> 00:05:56.440\nyou to be able to connect in.\n\n118\n00:05:56.440 --> 00:06:01.520\nAnd if I choose that, Configure your\nfirewall, it's gonna open up the firewall\n\n119\n00:06:01.520 --> 00:06:05.710\nsettings, the access list that's basically\ncontrolling that system right now.\n\n120\n00:06:05.710 --> 00:06:08.620\nAnd so when I look at that,\nit's gonna show some neat stuff.\n\n121\n00:06:08.620 --> 00:06:11.740\nFirst off, it's showing Client IP address,\n\n122\n00:06:11.740 --> 00:06:15.550\nthat's the IP address not of my server,\nbut of my laptop.\n\n123\n00:06:15.550 --> 00:06:20.070\nMy laptop right now,\nif I were to go out to the Internet,\n\n124\n00:06:20.070 --> 00:06:22.090\nI've got 209.251.159.179, it's my IP.\n\n125\n00:06:22.090 --> 00:06:25.246\nI can verify that if I go over here, and\n\n126\n00:06:25.246 --> 00:06:30.089\nI'll take like, let's do,\nwe'll do IP Chicken today.\n\n127\n00:06:30.089 --> 00:06:33.504\nAnd IP Chicken confirms and if you can't\ntrust a chicken, who can you trust?\n\n128\n00:06:33.504 --> 00:06:38.210\nSo we've got here 209.251.159.179,\nthat's my IP address.\n\n129\n00:06:38.210 --> 00:06:43.320\nAnd so, it's gonna make it super easy for\nme to add an exception for that.\n\n130\n00:06:43.320 --> 00:06:45.840\nAnd so you can punch right in here and\n\n131\n00:06:45.840 --> 00:06:48.980\njust hit, it looks like you should\ntype in your rule, which you can.\n\n132\n00:06:48.980 --> 00:06:53.030\nIf you've got other servers, if I want\nDaniel to be able to connect into\n\n133\n00:06:53.030 --> 00:06:57.640\nthis database, I can punch in his IP\naddress or even a range of IP addresses.\n\n134\n00:06:57.640 --> 00:07:00.892\nBut if I just wanna add me,\nright up here you've got Add client IP.\n\n135\n00:07:00.892 --> 00:07:03.630\nIt's kinda easy to overlook cuz your\nclient IP is written right down here,\n\n136\n00:07:03.630 --> 00:07:05.360\nit's kind of counterintuitive.\n\n137\n00:07:05.360 --> 00:07:07.960\nBut if you hit Add,\nsee what it just did for me?\n\n138\n00:07:07.960 --> 00:07:12.040\nIt added in this entry that\nputs the IP address in.\n\n139\n00:07:12.040 --> 00:07:16.280\nAnd the way it's listed,\nwhat you've got is the start IP and\n\n140\n00:07:16.280 --> 00:07:19.330\nthe end IP and they're the same, right?\n\n141\n00:07:19.330 --> 00:07:22.710\nWhich means I'm just\napproving the one IP address.\n\n142\n00:07:22.710 --> 00:07:23.800\nYou could do a whole range.\n\n143\n00:07:23.800 --> 00:07:27.308\nHere in our building, we actually have,\nnow I gotta try and remember the range.\n\n144\n00:07:27.308 --> 00:07:31.756\nI think our IPs go from like\n177 all the way up to 190.\n\n145\n00:07:31.756 --> 00:07:34.300\nSo people in our building could\nbe going out under any of those.\n\n146\n00:07:34.300 --> 00:07:38.834\nSo I might change this\nto say 209.251.159.177\n\n147\n00:07:38.834 --> 00:07:42.519\nall the way to 209.251.159.190.\n\n148\n00:07:42.519 --> 00:07:44.097\nAnd that way the whole\nbuilding is approved.\n\n149\n00:07:44.097 --> 00:07:46.762\nOr I could start approving other\nIPs to be able to connect.\n\n150\n00:07:46.762 --> 00:07:49.920\nAnd these IPs, they might even\nbe other servers in Azure, but\n\n151\n00:07:49.920 --> 00:07:53.715\nnormally they're not because\nAzure Services we permit a different way.\n\n152\n00:07:53.715 --> 00:07:55.470\nWe'll see that in the security episodes.\n\n153\n00:07:55.470 --> 00:07:59.926\nBut mostly these are gonna be us, our\nmanagement connections into the database.\n\n154\n00:07:59.926 --> 00:08:02.894\nNow the name,\nwell it just calls it a Client IP, so\n\n155\n00:08:02.894 --> 00:08:06.660\nthat's not terribly flashy,\nnot necessarily the greatest.\n\n156\n00:08:06.660 --> 00:08:08.570\nYou might want to click on that and\nrename it.\n\n157\n00:08:08.570 --> 00:08:13.200\nAnd so I'll call this ITProTV Studio,\njust so I can remember what it is.\n\n158\n00:08:13.200 --> 00:08:15.350\nIf I come back here a year from now and\nI look at it, and\n\n159\n00:08:15.350 --> 00:08:17.580\nI'm like,\nwhose IP address is this that's approved?\n\n160\n00:08:17.580 --> 00:08:19.220\nI want to remember who it was.\n\n161\n00:08:19.220 --> 00:08:20.680\nAnd so I'm just gonna add that.\n\n162\n00:08:20.680 --> 00:08:22.580\nTo be studio note in there, all right?\n\n163\n00:08:22.580 --> 00:08:24.500\nWhen you've got that set\nthe way that you need it,\n\n164\n00:08:24.500 --> 00:08:27.240\nyou can just go right up here to Save,\nwe'll save our change.\n\n165\n00:08:27.240 --> 00:08:30.440\nAnd now that's going to allow\nme to connect to the firewall.\n\n166\n00:08:30.440 --> 00:08:34.170\nSo the neat part about this is, I get\nthis question from viewers sometimes,\n\n167\n00:08:34.170 --> 00:08:37.030\nthey say Don,\nyou show us your password a lot.\n\n168\n00:08:37.030 --> 00:08:39.680\nThere's a lot of times I show\nthe password on the screen and\n\n169\n00:08:39.680 --> 00:08:41.110\nthey say don't you worry about that.\n\n170\n00:08:41.110 --> 00:08:44.500\nSomebody could connect into these during\nthe show, and that's true, right?\n\n171\n00:08:44.500 --> 00:08:45.860\nExcept if we're protected here.\n\n172\n00:08:45.860 --> 00:08:49.150\nSo you'd have to becoming from\nthis IP to be able to log in and\n\n173\n00:08:49.150 --> 00:08:52.480\nyou'd have to have my username and\npassword and then you'd have that access.\n\n174\n00:08:52.480 --> 00:08:54.500\nBut if I didn't do this,\nI wouldn't be able to connect myself,\n\n175\n00:08:54.500 --> 00:08:57.500\nso that's kind of our first step.\n\n176\n00:08:57.500 --> 00:09:02.720\nNow if I go back to this pane over\nhere where we had the Open and\n\n177\n00:09:02.720 --> 00:09:09.040\nVisual Studio, if you scroll down a little\nbit more, it tells us some useful stuff.\n\n178\n00:09:09.040 --> 00:09:14.940\nIt says if Visual Studio 2013 is\ninstalled, then you're ready to go, okay.\n\n179\n00:09:14.940 --> 00:09:16.120\nGet the latest update, but\n\n180\n00:09:16.120 --> 00:09:19.180\notherwise you can just click the nice\nbig blue button up there at the top.\n\n181\n00:09:19.180 --> 00:09:21.740\nOpen in Visual Studio and\nit's gonna take us in.\n\n182\n00:09:21.740 --> 00:09:26.040\nIf you don't have Visual Studio installed\nthough, here's your chance to get it.\n\n183\n00:09:26.040 --> 00:09:28.030\nNow, I know what some of\nyou guys are thinking.\n\n184\n00:09:28.030 --> 00:09:30.200\nVisual Studio can be expensive.\n\n185\n00:09:30.200 --> 00:09:32.290\nThere's a number of ways to\nget Visual Studio for free,\n\n186\n00:09:32.290 --> 00:09:34.690\nlike students in college can get it for\nfree.\n\n187\n00:09:34.690 --> 00:09:37.580\nIf you've got an MSDN account,\nwell, you pay for that and\n\n188\n00:09:37.580 --> 00:09:38.980\nyou get Visual Studio as a part of it.\n\n189\n00:09:38.980 --> 00:09:43.360\nSo, you may have it for free through some\nother route, but If you're in a business\n\n190\n00:09:43.360 --> 00:09:46.580\nyou usually have to buy it and\nit can be fairly expensive but\n\n191\n00:09:46.580 --> 00:09:50.790\nas far as managing SQL is concerned,\nwe don't need these high end, like,\n\n192\n00:09:50.790 --> 00:09:54.180\nwe don't need the ultimate or\npremium professional edition.\n\n193\n00:09:54.180 --> 00:09:59.308\nEven the lowest version, the community\nfree one, will manage Azure SQL.\n\n194\n00:09:59.308 --> 00:10:02.100\nThe Azure SQL extension has\nbeen added to all of these,\n\n195\n00:10:02.100 --> 00:10:05.230\nso, if you're not a developer,\nright, and I'm not a developer.\n\n196\n00:10:05.230 --> 00:10:08.410\nI took a couple semesters of\nvisual basic back in college, but\n\n197\n00:10:08.410 --> 00:10:09.790\nI can barely remember that.\n\n198\n00:10:09.790 --> 00:10:13.230\nI definitely don't know C# or\nany of those other guys.\n\n199\n00:10:13.230 --> 00:10:13.815\nI just know SQL.\n\n200\n00:10:13.815 --> 00:10:14.791\nThat's what I know, right?\n\n201\n00:10:14.791 --> 00:10:18.490\nI know I know managing a SQL server,\nI know databases.\n\n202\n00:10:18.490 --> 00:10:22.883\nSo I can install just the cheapest one\nright here, the Community Free, right?\n\n203\n00:10:22.883 --> 00:10:24.564\nAnd when we go to install that,\n\n204\n00:10:24.564 --> 00:10:28.590\nit's just gonna take us over here where\nwe can download it and install it.\n\n205\n00:10:28.590 --> 00:10:32.320\nAnd once you've got that\nVisual Studio Community Edition installed,\n\n206\n00:10:32.320 --> 00:10:35.900\nyou'll be able to run it and\nconnect up to that Azure environment.\n\n207\n00:10:35.900 --> 00:10:38.760\nAnd once it's installed, it's just\na simple matter of going back and\n\n208\n00:10:38.760 --> 00:10:40.030\nclicking that big blue button.\n\n209\n00:10:40.030 --> 00:10:43.110\nSo I'm gonna come in here and\ndownload that Community Free edition.\n\n210\n00:10:43.110 --> 00:10:45.710\nAnd here we go,\nit's gonna download for me.\n\n211\n00:10:45.710 --> 00:10:48.350\nNow on a workstation,\nthis install's no big deal, right?\n\n212\n00:10:48.350 --> 00:10:50.600\nI'm on Windows 7,\nworks on Windows 8, Windows 10.\n\n213\n00:10:50.600 --> 00:10:52.430\nYou know, works just fine.\n\n214\n00:10:52.430 --> 00:10:54.770\nOn a server you're gonna have\nsome problems with this.\n\n215\n00:10:54.770 --> 00:10:58.040\nSo Microsoft says,\ndon't install Visual Studio on a server\n\n216\n00:10:58.040 --> 00:11:00.360\nunless you've got some very,\nvery specific reason.\n\n217\n00:11:00.360 --> 00:11:03.320\nThis is really intended to be\ndone on our own workstations.\n\n218\n00:11:03.320 --> 00:11:05.020\n>> And Don,\neven though this is the free version,\n\n219\n00:11:05.020 --> 00:11:07.410\nwe're not missing any kind of\nfunctionality or anything like that,\n\n220\n00:11:07.410 --> 00:11:10.160\nthat we would have maybe\nin the premium versions?\n\n221\n00:11:10.160 --> 00:11:12.600\n>> You're missing tons of functionality-\n>> Just not with SQL.\n\n222\n00:11:12.600 --> 00:11:14.630\n>> For the programming languages,\nbut not for SQL, yeah.\n\n223\n00:11:14.630 --> 00:11:17.480\nSo, you can jump in and\nmanage the SQL Server and do things.\n\n224\n00:11:17.480 --> 00:11:22.700\nNow, Keep in mind that for\nSQL Server, for years,\n\n225\n00:11:22.700 --> 00:11:27.820\nwe've managed it with the SQL Management\nStudio, tools built specifically for SQL.\n\n226\n00:11:27.820 --> 00:11:32.280\nWith Visual Studio 2013, what Microsoft\ndid is started porting those tools over\n\n227\n00:11:32.280 --> 00:11:34.360\nand putting them into Visual Studio.\n\n228\n00:11:34.360 --> 00:11:36.810\nAnd as a result,\nyou're able to manage Azure,\n\n229\n00:11:36.810 --> 00:11:42.320\nyou're able to manage the SQL instance,\nbut it's not the same.\n\n230\n00:11:42.320 --> 00:11:46.326\nSo if you're just starting, if you've\nnever worked with Microsoft SQL before,\n\n231\n00:11:46.326 --> 00:11:48.369\nthen this will be perfectly fine for you.\n\n232\n00:11:48.369 --> 00:11:52.605\nBut if you're like me, I've been working\nwith SQL since version seven, so\n\n233\n00:11:52.605 --> 00:11:56.244\nfor a long time, and\nit's tough moving into this new interface,\n\n234\n00:11:56.244 --> 00:11:59.570\nbecause they haven't ported\nover all the tools yet.\n\n235\n00:11:59.570 --> 00:12:02.460\nSo there's some things that we're\nused to having that just aren't here.\n\n236\n00:12:02.460 --> 00:12:07.820\nSo I say there's no limitation on SQL, but\nif you're a brand new user that's true.\n\n237\n00:12:07.820 --> 00:12:09.850\nYou're not really gonna\nnotice the limitations.\n\n238\n00:12:09.850 --> 00:12:13.920\nBut if you've been a power user of SQL for\na few years, you'll notice it right away.\n\n239\n00:12:13.920 --> 00:12:17.810\nThere's a lot of stuff missing and\nit can get a little bit frustrating.\n\n240\n00:12:17.810 --> 00:12:20.350\nNow, on the install here,\nnotice how it says,\n\n241\n00:12:20.350 --> 00:12:22.970\nrequires eight gigs of\nstorage across all drives?\n\n242\n00:12:22.970 --> 00:12:25.000\nI'm going to do a custom install.\n\n243\n00:12:25.000 --> 00:12:29.265\nThe default install wants to install,\nwell it actually says right here.\n\n244\n00:12:29.265 --> 00:12:32.540\nC#, visual basic, web and\ndesktop features.\n\n245\n00:12:32.540 --> 00:12:35.730\nIt wants to install all sorts of things\nthat I don't really care about, right?\n\n246\n00:12:35.730 --> 00:12:37.460\nI just want to manage SQL.\n\n247\n00:12:37.460 --> 00:12:41.220\nSo I'm gonna choose to do a custom\ninstall, and on the next page I can pick.\n\n248\n00:12:41.220 --> 00:12:44.660\nAnd here's where you can see, like,\nall the developer tools and things.\n\n249\n00:12:44.660 --> 00:12:48.370\nI don't wanna do web development,\nI wanna manage SQL Server.\n\n250\n00:12:48.370 --> 00:12:50.950\nSo I'm gonna check just that one One off,\nand\n\n251\n00:12:50.950 --> 00:12:53.060\nthat just dropped my setup\nrequirements to 7 GB.\n\n252\n00:12:53.060 --> 00:12:54.780\nSo I saved a little bit.\n\n253\n00:12:54.780 --> 00:12:58.210\nKinda shows you how much\nthe Graphical User Interface takes up.\n\n254\n00:12:58.210 --> 00:12:59.890\nRight?\nSo it's still gonna require a bit.\n\n255\n00:12:59.890 --> 00:13:02.890\nBut really,\nall I need are the SQL Server Data Tools.\n\n256\n00:13:02.890 --> 00:13:06.490\nSo I'll check that off and hit Next.\n\n257\n00:13:06.490 --> 00:13:09.670\nAnd then it's basically gonna\nchurn through and do that install.\n\n258\n00:13:09.670 --> 00:13:13.390\nNow it does require the .Net framework\nwhich if you're running Windows 10 or\n\n259\n00:13:13.390 --> 00:13:15.490\nWindows 8 you more than\nlikely already have.\n\n260\n00:13:15.490 --> 00:13:19.450\nOn Windows 7 it's, it depends on how\nmany updates I did before the show,\n\n261\n00:13:19.450 --> 00:13:20.280\nI can't remember.\n\n262\n00:13:20.280 --> 00:13:21.700\nSo it might have to install some updates.\n\n263\n00:13:21.700 --> 00:13:24.630\nActually it looks like I'm okay,\nso it's moving through.\n\n264\n00:13:24.630 --> 00:13:27.050\nBut it's gonna start\ninstalling this Visual Studio.\n\n265\n00:13:27.050 --> 00:13:31.110\nAnd once it's done,\nonce I've got Visual Studio installed,\n\n266\n00:13:31.110 --> 00:13:36.940\nto connect to the SQL database, all I'll\nhave to do is go back to my web interface,\n\n267\n00:13:36.940 --> 00:13:40.940\nbrowse into the database,\nclick the Open in Visual Studio link, and\n\n268\n00:13:40.940 --> 00:13:45.050\nthen click this nice big Open\nin Visual Studio button.\n\n269\n00:13:45.050 --> 00:13:48.350\nIt'll take me right to that database,\nand I'll be able to browse, and\n\n270\n00:13:48.350 --> 00:13:50.560\nsee the tables, and all that other stuff,\n\n271\n00:13:50.560 --> 00:13:54.620\nwhile it's right here in\nthe Visual Studio Development environment.\n\n272\n00:13:54.620 --> 00:13:56.750\n>> Awesome.\nThat doesn't seem too hard actually.\n\n273\n00:13:56.750 --> 00:13:59.850\nKinda Microsoft is going,\nhere's the step by step, and\n\n274\n00:13:59.850 --> 00:14:03.980\nthey're giving the breadcrumb trail\nto say this is the easy way to do it.\n\n275\n00:14:03.980 --> 00:14:05.490\nAt least, it's the Microsoft way to do it.\n\n276\n00:14:05.490 --> 00:14:10.120\nAnd obviously if it's the Microsoft way to\ndo it, it is the way to do it, right Don?\n\n277\n00:14:10.120 --> 00:14:11.215\n[LAUGH]\n>> You could say that.\n\n278\n00:14:11.215 --> 00:14:14.980\n[LAUGH] This is one of those areas where,\n\n279\n00:14:14.980 --> 00:14:17.300\nyes Microsoft has a very prescribed\nway they want you to do it.\n\n280\n00:14:17.300 --> 00:14:18.696\nThey want you to use that Visual Studio.\n\n281\n00:14:18.696 --> 00:14:23.320\nBut if you're supporting a mixed\nenvironment, a hybrid environment,\n\n282\n00:14:23.320 --> 00:14:26.780\nyou have some SQL servers in Azure and\nsome on Premises,\n\n283\n00:14:26.780 --> 00:14:29.600\nyou're going to get really frustrated\nwith Visual Studio really fast.\n\n284\n00:14:29.600 --> 00:14:30.210\nRight?\n\n285\n00:14:30.210 --> 00:14:33.460\nVisual Studio just does not have\nthe full set of management tools for\n\n286\n00:14:33.460 --> 00:14:34.680\nmanaging SQL yet.\n\n287\n00:14:34.680 --> 00:14:38.760\nIt's got the stuff that the average\nuser needs but if you're an advance user\n\n288\n00:14:38.760 --> 00:14:41.680\nyou're going to hit those limitations\npretty quick and it gets frustrating.\n\n289\n00:14:41.680 --> 00:14:43.020\nI get frustrated with it.\n\n290\n00:14:43.020 --> 00:14:47.180\nThe main frustration for\nme is that it's not a tool designed for\n\n291\n00:14:47.180 --> 00:14:50.180\nmanaging SQL, it's a tool designed for\nprogramming, and\n\n292\n00:14:50.180 --> 00:14:53.350\nthey're kind of retrofitting it for\nSQL, and that's challenging.\n\n293\n00:14:53.350 --> 00:14:56.240\nAnd we had this before, when you\nwent from Sequel 7 to Sequel 2000,\n\n294\n00:14:56.240 --> 00:14:59.530\nMicrosoft changed the UI back then,\ntoo, and it was frustrating, but\n\n295\n00:14:59.530 --> 00:15:02.040\nyou kind of get used to that one,\nand now we've got the new one, so if\n\n296\n00:15:02.040 --> 00:15:05.220\nyou're just starting out, Visual Studio's\nmore than like the way to go for you.\n\n297\n00:15:05.220 --> 00:15:09.520\nBut if you want the full management\ninterface, we need to remember that\n\n298\n00:15:09.520 --> 00:15:14.210\nSQL inside of Azure,\nis either SQL Version 11 or Version 12.\n\n299\n00:15:14.210 --> 00:15:16.280\nWhen you create a database\nit asks you to pick, and\n\n300\n00:15:16.280 --> 00:15:19.170\nI've picked Version 12 for both of mine,\nwhich is actually SQL 2014.\n\n301\n00:15:19.170 --> 00:15:24.091\nWell, you can install the SQL\nmanagement studio for SQL 2014,\n\n302\n00:15:24.091 --> 00:15:27.120\nor 2012 for that matter.\n\n303\n00:15:27.120 --> 00:15:29.890\nThe same one you used to manage\nyour On Premises servers.\n\n304\n00:15:29.890 --> 00:15:31.900\nAnd it will manage Azure services as well.\n\n305\n00:15:31.900 --> 00:15:35.240\nIt does just as good a job, and\nit has all the tools available.\n\n306\n00:15:35.240 --> 00:15:36.450\nAnd it's Azure aware.\n\n307\n00:15:36.450 --> 00:15:39.450\nIt knows about it, so\nit's perfectly capable of doing that.\n\n308\n00:15:39.450 --> 00:15:43.760\nAnd so the way Microsoft looks at\nit is if you're just a sys admin,\n\n309\n00:15:43.760 --> 00:15:45.950\nI shouldn't say just a sys admin.\n\n310\n00:15:45.950 --> 00:15:49.635\nBut if you're a sys admin and you don't\ncare about databases, but you've been\n\n311\n00:15:49.635 --> 00:15:53.494\ntasked with bringing one online, you can\ngo into Azure and spin one up pretty fast.\n\n312\n00:15:53.494 --> 00:15:56.635\nYou can fire up Visual Studio and\nconnect to it and make sure that it works.\n\n313\n00:15:56.635 --> 00:16:00.072\nBut if you're somebody that's gonna\nwork with the database every day,\n\n314\n00:16:00.072 --> 00:16:03.676\nif you're the DBA Then you really need\nthe full feature set of tools, and for\n\n315\n00:16:03.676 --> 00:16:06.070\nthat you can just use\nthe SQL Management Studio.\n\n316\n00:16:06.070 --> 00:16:08.670\nNow, if you don't have\nthe SQL Management Studio,\n\n317\n00:16:08.670 --> 00:16:14.810\nmaybe 100% of your SQL servers are in the\nAzure Cloud, and you don't have any here.\n\n318\n00:16:14.810 --> 00:16:16.410\nThat's how we are with ITProTV,\n\n319\n00:16:16.410 --> 00:16:21.060\nwe don't have a single SQL server here in\nthis building, they're all up in Azure.\n\n320\n00:16:21.060 --> 00:16:25.770\nAnd so if we want to connect to those,\nI don't want to buy a SQL\n\n321\n00:16:25.770 --> 00:16:29.100\nlicense to install here on my laptop to\nbe able to get to Management Studio, and\n\n322\n00:16:29.100 --> 00:16:31.120\nfortunately I don't have to.\n\n323\n00:16:31.120 --> 00:16:35.690\nMicrosoft package is the SQL management\nstudio with the SQL express edition.\n\n324\n00:16:35.690 --> 00:16:37.800\nAnd if you're not familiar\nwith SQL express,\n\n325\n00:16:37.800 --> 00:16:40.280\nSQL express is the free\nversion they give out.\n\n326\n00:16:40.280 --> 00:16:43.130\nAnd it's got some limitations on\nthe database like it can only hold so\n\n327\n00:16:43.130 --> 00:16:46.440\nmany rows, it can only grow to certain\nsizes, it doesn't support replication.\n\n328\n00:16:46.440 --> 00:16:48.300\nThere's a lot of negatives to it.\n\n329\n00:16:48.300 --> 00:16:50.690\nBut I don't care about that because\nI'm not gonna host a database on it.\n\n330\n00:16:50.690 --> 00:16:52.410\nI just need the management tools.\n\n331\n00:16:52.410 --> 00:16:55.284\nSo if you do just a quick google search or\n\n332\n00:16:55.284 --> 00:17:00.871\nBing if you're gonna go the Microsoft way,\nwe can do SQL 2014 Express.\n\n333\n00:17:00.871 --> 00:17:02.462\nAnd we can go to download that.\n\n334\n00:17:02.462 --> 00:17:07.334\nAnd when you go download SQL 2014 Express\nthere's actually several different options\n\n335\n00:17:07.334 --> 00:17:09.558\navailable for the download, all right?\n\n336\n00:17:09.558 --> 00:17:12.220\nSo here I am on the SQL\n2014 Express page and\n\n337\n00:17:12.220 --> 00:17:15.030\nit looks like there's\njust one download right?\n\n338\n00:17:15.030 --> 00:17:15.722\nAnd if go and\n\n339\n00:17:15.722 --> 00:17:20.170\nhit download on you will see that\nthere's actually ton of different files.\n\n340\n00:17:20.170 --> 00:17:23.572\nAnd if we drill down into\nthese files a little bit,\n\n341\n00:17:23.572 --> 00:17:28.340\nwhat you'll find is here's\nSQL Express 32-bit, right?\n\n342\n00:17:28.340 --> 00:17:31.980\nOr SQL Express 64 bit, and\nthen down here I've got\n\n343\n00:17:31.980 --> 00:17:37.880\nSQL Express Advanced 32-bit and\nAdvanced 64-bit, what is that?\n\n344\n00:17:37.880 --> 00:17:42.090\nWell, if I want the SQL Express\ndatabase server.\n\n345\n00:17:42.090 --> 00:17:44.075\nAll I need is this guy right here.\n\n346\n00:17:44.075 --> 00:17:46.040\nSQLEXPR_x64_ENU.exe.\n\n347\n00:17:46.040 --> 00:17:49.320\nBut if I want the database server, and\n\n348\n00:17:49.320 --> 00:17:54.370\nthe management tools,\nthen I need SQLEXPRADV_x64_ENU.exe.\n\n349\n00:17:54.370 --> 00:17:58.610\nThis would let me host a database\nright here on my workstation.\n\n350\n00:17:58.610 --> 00:18:00.700\nThat's an express database, and\n\n351\n00:18:00.700 --> 00:18:03.640\nI'd have the management tools to be\nable to connect to other servers, too.\n\n352\n00:18:03.640 --> 00:18:06.510\nBut if you don't want to host a database\non your own workstation, that's fine, too.\n\n353\n00:18:06.510 --> 00:18:09.860\nIf you keep scrolling down,\nsomewhere in here.\n\n354\n00:18:09.860 --> 00:18:10.920\nHere you we go.\n\n355\n00:18:10.920 --> 00:18:13.200\nYou'll find the SQL management studio.\n\n356\n00:18:13.200 --> 00:18:14.430\nAll right.\n\n357\n00:18:14.430 --> 00:18:16.560\nI recommend you use the one for SQL 2014.\n\n358\n00:18:16.560 --> 00:18:18.880\nYou can do the same thing for\nSQL 2012 express, and\n\n359\n00:18:18.880 --> 00:18:21.350\nthe management studio\nwill work with Azure.\n\n360\n00:18:21.350 --> 00:18:22.310\nIt'll work.\n\n361\n00:18:22.310 --> 00:18:25.950\nBut if you're managing a version 12 server\nwith the version 11 management tools,\n\n362\n00:18:25.950 --> 00:18:28.280\nthere's some things that\ndon't work out quite right.\n\n363\n00:18:28.280 --> 00:18:30.200\nSo if I'm doing version 11 or\n\n364\n00:18:30.200 --> 00:18:35.190\nversion 12 up in Azure, I still always use\nthe version 12 management tools, right?\n\n365\n00:18:35.190 --> 00:18:36.390\nCuz they can see backwards,\n\n366\n00:18:36.390 --> 00:18:39.280\nthey can't necessarily see\nforwards amongst new versions.\n\n367\n00:18:39.280 --> 00:18:45.280\nBut we can install just the SQL Management\nStudio, and now I have the full management\n\n368\n00:18:45.280 --> 00:18:49.510\nsuite that's specifically designed for\nSQL, and I can connect to that server and\n\n369\n00:18:49.510 --> 00:18:53.090\ncontrol all the various components,\nand I have all the really neat things.\n\n370\n00:18:53.090 --> 00:18:55.670\nLike, for example,\nthe indexing wizard, right?\n\n371\n00:18:56.740 --> 00:18:59.260\nWhen you go into\nthe SQL Management Studio,\n\n372\n00:18:59.260 --> 00:19:01.770\nthere's an index wizard you can\nrun where you feed it a query and\n\n373\n00:19:01.770 --> 00:19:04.370\nit tells you the indexes that would make\nyour queries run as fast as possible.\n\n374\n00:19:04.370 --> 00:19:06.600\nWell, we'll see it in\nthe performance tuning episode.\n\n375\n00:19:06.600 --> 00:19:08.700\nWell, in Visual Studio,\nyou don't have that wizard.\n\n376\n00:19:08.700 --> 00:19:09.380\nIt's not there.\n\n377\n00:19:09.380 --> 00:19:11.810\nIn fact, you don't have this\nSQL Tuning Advisor at all.\n\n378\n00:19:12.970 --> 00:19:14.710\nWhat Microsoft is doing is slowly,\n\n379\n00:19:14.710 --> 00:19:17.730\nthey're rolling those features\nout into the Azure Portal.\n\n380\n00:19:17.730 --> 00:19:20.020\nAnd so in the Azure Portal,\nyou'll start to see things.\n\n381\n00:19:20.020 --> 00:19:21.710\nI'm gonna jump back to my portal.\n\n382\n00:19:21.710 --> 00:19:23.670\nSo for example,\nhere in the database that I'm on.\n\n383\n00:19:24.850 --> 00:19:33.020\nIf I Go back to my SQL server here.\n\n384\n00:19:33.020 --> 00:19:36.800\nWhen you start browsing into your system,\nyou'll start to see options in\n\n385\n00:19:36.800 --> 00:19:41.230\nhere like the ability to run those\nindex tuning wizards and things.\n\n386\n00:19:41.230 --> 00:19:44.330\nSo as I scroll,\nit is buried in here somewhere.\n\n387\n00:19:45.760 --> 00:19:47.560\nOh, shoot, maybe it was on the database.\n\n388\n00:19:47.560 --> 00:19:48.590\nSo these things,\n\n389\n00:19:48.590 --> 00:19:50.930\nthere's still a little bit moving\naround while it's all in preview.\n\n390\n00:19:50.930 --> 00:19:53.190\nLet me go back to my SQL Database.\n\n391\n00:19:53.190 --> 00:19:55.010\nSo if I go back to my database here.\n\n392\n00:19:55.010 --> 00:19:56.590\nSo I'm going into SampleDB1, and\n\n393\n00:19:56.590 --> 00:20:00.850\nI'm gonna scroll down here\nunder the monitoring section.\n\n394\n00:20:00.850 --> 00:20:03.869\nAnd if I scroll down, there it is.\n\n395\n00:20:06.210 --> 00:20:10.845\nAs we look around, you'll see right\nhere we've got the index advisor and\n\n396\n00:20:10.845 --> 00:20:13.240\nthe query performance insight.\n\n397\n00:20:13.240 --> 00:20:17.440\nSo, these are designed to replace\nthe old index tuning wizard and\n\n398\n00:20:17.440 --> 00:20:19.920\nthe SQL engine optimization tools,\nand all those.\n\n399\n00:20:19.920 --> 00:20:23.250\nSo these are new one's that\nare built in Azure but\n\n400\n00:20:23.250 --> 00:20:25.260\nyou'll see like this one\nyou have to sign up for it.\n\n401\n00:20:25.260 --> 00:20:27.680\nI don't think it's actually\ncome out of preview yet.\n\n402\n00:20:27.680 --> 00:20:31.890\nThis one still even says preview right\non it so the tools are still evolving.\n\n403\n00:20:31.890 --> 00:20:35.300\nSo if you wanna use the robust tools\nthat have been around for ten years that\n\n404\n00:20:35.300 --> 00:20:39.320\nare very stable and work great you can use\nthe management studio on your own machine.\n\n405\n00:20:39.320 --> 00:20:41.640\nBut, know that in the future, right?\n\n406\n00:20:41.640 --> 00:20:44.460\nA couple of years from now that\nSQL Management Studio will go away and\n\n407\n00:20:44.460 --> 00:20:46.250\nbe replaced by Visual Studio.\n\n408\n00:20:46.250 --> 00:20:47.800\nIt just hasn't all happened yet.\n\n409\n00:20:47.800 --> 00:20:50.220\nSo it's kind of like the Azure portal.\n\n410\n00:20:50.220 --> 00:20:54.540\nThis is the new Azure portal, right, which\nis now the official portal for Azure.\n\n411\n00:20:54.540 --> 00:20:55.130\nBut we still\n\n412\n00:20:55.130 --> 00:20:58.010\nhave the legacy portal sitting\naround that you can switch back to.\n\n413\n00:20:58.010 --> 00:21:01.000\nBecause Microsoft was still porting\nfeatures over to the new one, and\n\n414\n00:21:01.000 --> 00:21:02.970\nnow that's for the most part complete.\n\n415\n00:21:02.970 --> 00:21:05.260\nThat's how Visual Studio is now,\nit's kind of in preview.\n\n416\n00:21:05.260 --> 00:21:08.590\nThey're porting features over and\nprobably two years from now,\n\n417\n00:21:08.590 --> 00:21:11.980\nI'll do a show just like this and I'll\nleave off all the management studio stuff.\n\n418\n00:21:11.980 --> 00:21:14.430\nBut for today management\nstudio's kind of important.\n\n419\n00:21:14.430 --> 00:21:15.869\nSo, you can go up here.\n\n420\n00:21:16.898 --> 00:21:20.030\nTo the SQL Express download\npage you can download\n\n421\n00:21:20.030 --> 00:21:22.800\njust the sequel management studio.\n\n422\n00:21:22.800 --> 00:21:27.500\nInstall it on your machine and\nnow you've got those full tools.\n\n423\n00:21:27.500 --> 00:21:29.210\nDuring this show I'm\ngoing to show you both.\n\n424\n00:21:29.210 --> 00:21:31.890\nI'm going to show you the visual studio,\nbut then I'm also going to show you\n\n425\n00:21:31.890 --> 00:21:34.760\nthe management tools,\nbecause that's the one that I use.\n\n426\n00:21:34.760 --> 00:21:36.250\nSo we'll get a chance to see those.\n\n427\n00:21:36.250 --> 00:21:39.980\nNow while I'm waiting on it, my Visual\nStudio install is still running, and\n\n428\n00:21:39.980 --> 00:21:40.830\nthat can take a little while.\n\n429\n00:21:40.830 --> 00:21:44.910\nSo while we're waiting on it, let me\nfire up the SQL Management Tools, and\n\n430\n00:21:44.910 --> 00:21:46.590\nI'll show you how this works.\n\n431\n00:21:46.590 --> 00:21:50.230\nNow I installed the SQL Management Studio,\nright, from SQL Express, and\n\n432\n00:21:50.230 --> 00:21:52.510\nI actually did the SQL Advanced one.\n\n433\n00:21:52.510 --> 00:21:55.520\nThe install is one of those where\nyou click next ten times and\n\n434\n00:21:55.520 --> 00:21:56.310\nit installs, right?\n\n435\n00:21:56.310 --> 00:21:59.200\nThere's not really any options that\nthere's stuff you can manipulate, but\n\n436\n00:21:59.200 --> 00:22:01.880\nthere's not stuff that's\nreally important here because\n\n437\n00:22:01.880 --> 00:22:04.540\nwe're really connecting\nto a remote database.\n\n438\n00:22:04.540 --> 00:22:08.110\nAnd if I wanna connect to the remote\ndatabase I treat it just like any\n\n439\n00:22:08.110 --> 00:22:09.360\nother server.\n\n440\n00:22:09.360 --> 00:22:12.340\nSo when I take a look at my\nObject Explorer over here,\n\n441\n00:22:12.340 --> 00:22:15.890\nsee how it connected to my local\ninstall by default, right?\n\n442\n00:22:15.890 --> 00:22:18.580\nIf you didn't install the database\nyou won't even have that.\n\n443\n00:22:18.580 --> 00:22:22.220\nYou'll just have the management tools and\nyou've got this connect button\n\n444\n00:22:22.220 --> 00:22:25.790\nwhere we can actually reach out and\nconnect to a database engine.\n\n445\n00:22:25.790 --> 00:22:29.540\nAnd that database engine doesn't\nhave to be on your local network,\n\n446\n00:22:29.540 --> 00:22:32.760\nit can be out in Azure, it doesn't matter.\n\n447\n00:22:32.760 --> 00:22:33.290\nRight?\n\n448\n00:22:33.290 --> 00:22:35.470\nAnd that's because we're gonna\npunch in a server name and\n\n449\n00:22:35.470 --> 00:22:38.210\nthat server name is out\nthere in the Cloud.\n\n450\n00:22:38.210 --> 00:22:43.990\nSo If I jump back over to my Azure portal,\nand I take my database.\n\n451\n00:22:43.990 --> 00:22:46.390\nHere's that name,\nI'm just gonna copy that server name.\n\n452\n00:22:48.150 --> 00:22:49.580\nI'm gonna try and copy that.\n\n453\n00:22:49.580 --> 00:22:51.942\nOh, you know what, I'm gonna type it.\n\n454\n00:22:51.942 --> 00:22:55.200\n>> [LAUGH]\n>> itprotvsample.database.windows.net.\n\n455\n00:22:55.200 --> 00:22:56.355\nAnd we'll just type that in here.\n\n456\n00:22:56.355 --> 00:22:58.430\nItprotvsample.database.\n\n457\n00:22:58.430 --> 00:23:02.145\n>> Don's a SQL master,\nhe just can't copy and paste.\n\n458\n00:23:02.145 --> 00:23:03.230\n[LAUGH]\n>> Yeah, that's gonna be my\n\n459\n00:23:03.230 --> 00:23:04.000\nchallenge of the day there.\n\n460\n00:23:04.000 --> 00:23:05.590\nAll right, so I'm gonna punch that in for\n\n461\n00:23:05.590 --> 00:23:07.120\nthe name of the server\nthat I'm connecting to.\n\n462\n00:23:07.120 --> 00:23:11.570\nAnd then for authentication, see how I'm\ndefaulting to Windows authentication?\n\n463\n00:23:11.570 --> 00:23:12.550\nWell that's not gonna work.\n\n464\n00:23:12.550 --> 00:23:15.390\nI'm not on the same domain as\nthe SQL server that we whipped up.\n\n465\n00:23:15.390 --> 00:23:18.550\nSo I'm gonna drop that down and\nchoose the new SQL authentication.\n\n466\n00:23:18.550 --> 00:23:23.660\nWhen we created that database, it asked\nme to provide a username and a password.\n\n467\n00:23:23.660 --> 00:23:26.000\nAnd at that time I created\nan administrator called dpezet.\n\n468\n00:23:26.000 --> 00:23:30.490\nAnd so I'm gonna punch in those\ncredentials right here, and\n\n469\n00:23:30.490 --> 00:23:32.190\nI can choose to save them if I want.\n\n470\n00:23:32.190 --> 00:23:33.790\nAnd we can create new credentials for\n\n471\n00:23:33.790 --> 00:23:36.290\npeople, once we're logged in and\nconnected.\n\n472\n00:23:36.290 --> 00:23:39.070\nYou can do it via the UI also,\nbut from the web page.\n\n473\n00:23:39.070 --> 00:23:40.370\nBut I'll connect right here.\n\n474\n00:23:40.370 --> 00:23:43.880\nAnd when I connect,\nit's gonna reach out to that server and\n\n475\n00:23:43.880 --> 00:23:45.300\nit's gonna connect to it.\n\n476\n00:23:45.300 --> 00:23:48.460\nAnd it is aware that that's in Azure.\n\n477\n00:23:48.460 --> 00:23:51.103\nWhen that connects up,\nit knows that it's connected to Azure.\n\n478\n00:23:51.103 --> 00:23:53.773\nBut once it's connected here,\nthe software,\n\n479\n00:23:53.773 --> 00:23:58.245\nthe management studio really treats it\nlike any other system, so let's see if I\n\n480\n00:23:58.245 --> 00:24:02.875\ncan stretch that out a little bit, you can\nsee Where it shows that I'm connected.\n\n481\n00:24:02.875 --> 00:24:04.927\nAnd it shows that a SQL server.\n\n482\n00:24:04.927 --> 00:24:08.130\nIt's showing as version 13,\ndid I spin up a 2016 instance?\n\n483\n00:24:09.190 --> 00:24:10.010\n>> Maybe you did.\n\n484\n00:24:10.010 --> 00:24:11.920\n>> I might have spun up a 2016 and\ndidn't notice it.\n\n485\n00:24:11.920 --> 00:24:14.360\nSo, anyhow, I'm connected to that server.\n\n486\n00:24:14.360 --> 00:24:16.720\nAnd the database is inside of it.\n\n487\n00:24:16.720 --> 00:24:18.930\nThere's my sample DB1.\n\n488\n00:24:18.930 --> 00:24:21.510\nAnd I can expand that and\nnow I can see my tables.\n\n489\n00:24:21.510 --> 00:24:24.180\nAnd when I look at my tables here's where\nI'll find out if I did the adventure works\n\n490\n00:24:24.180 --> 00:24:27.330\ndatabase or not,\nif I have a bunch of tables\n\n491\n00:24:27.330 --> 00:24:30.140\nthen I must have done the adventure\nworks database, that sample database.\n\n492\n00:24:30.140 --> 00:24:31.210\nBut, mine's empty.\n\n493\n00:24:31.210 --> 00:24:33.720\nSo I just chose to do a blank database.\n\n494\n00:24:33.720 --> 00:24:37.810\nSo the cool part about this is I\ncan start to work with the database\n\n495\n00:24:37.810 --> 00:24:39.800\nserver without having to\ngo back to the web UI.\n\n496\n00:24:39.800 --> 00:24:43.410\nLike if I want to create a database,\nI can just go up here to Databases.\n\n497\n00:24:43.410 --> 00:24:45.560\nI can right-click and choose New Database.\n\n498\n00:24:45.560 --> 00:24:50.114\nAnd here we go, I get a query, and\nI can start to specify database names.\n\n499\n00:24:50.114 --> 00:24:54.560\nI can provide this information and\nget a database created right from here.\n\n500\n00:24:54.560 --> 00:24:57.520\nOr even tables if I want to come\ndown here and create a new table.\n\n501\n00:24:57.520 --> 00:25:01.320\nI can go into that and now I can start to\ndefine the table that I want to create and\n\n502\n00:25:01.320 --> 00:25:01.940\nimprovise that.\n\n503\n00:25:01.940 --> 00:25:04.060\nI can use the SQL designer.\n\n504\n00:25:04.060 --> 00:25:06.640\nWe can provide all the information\nthat it needs, and\n\n505\n00:25:06.640 --> 00:25:10.830\nget this stuff created in\nan environment that we're used to.\n\n506\n00:25:10.830 --> 00:25:13.700\nThese are the things that we\nwould be doing on an on premises\n\n507\n00:25:13.700 --> 00:25:15.580\nserver just as well as an Azure server.\n\n508\n00:25:15.580 --> 00:25:16.690\nIt really doesn't make a difference,\n\n509\n00:25:16.690 --> 00:25:20.650\nonce we're connected they're treated the\nsame for the majority of management tasks.\n\n510\n00:25:20.650 --> 00:25:23.480\nNow, as you watch the rest of this\nseries we're gonna cover a lot of things\n\n511\n00:25:23.480 --> 00:25:26.910\nwhere we do have to go back to the Azure\nportal to be able to configure them.\n\n512\n00:25:26.910 --> 00:25:29.280\nThere's some tools that\nhave to be run from there.\n\n513\n00:25:29.280 --> 00:25:30.910\nEspecially when we talk about backups and\nrestores.\n\n514\n00:25:30.910 --> 00:25:35.000\nYou do not want to back up the traditional\nmethod, like right-clicking a database and\n\n515\n00:25:35.000 --> 00:25:36.620\ndoing the whole backup thing.\n\n516\n00:25:36.620 --> 00:25:38.825\nSo I totally failed to\nclick on a database there.\n\n517\n00:25:38.825 --> 00:25:39.600\n>> [LAUGH]\n>> But if I right-click\n\n518\n00:25:39.600 --> 00:25:42.580\non an actual database and\nwe go to our tasks and backups and\n\n519\n00:25:42.580 --> 00:25:44.350\nstuff, see how they're not showing up?\n\n520\n00:25:44.350 --> 00:25:46.280\nI don't even have those backup options.\n\n521\n00:25:46.280 --> 00:25:48.820\nBut if I go up to one of these\nother databases I would, and\n\n522\n00:25:48.820 --> 00:25:52.480\nthat's because it knows that\nit's Azure and certain things\n\n523\n00:25:52.480 --> 00:25:56.220\naren't going to be available because of\nthat, because it is different, right.\n\n524\n00:25:56.220 --> 00:25:58.340\nLet me in fact,\nI'm kind of zoomed out a bit.\n\n525\n00:25:58.340 --> 00:26:01.510\nLet me get where you can actually\nsee this a little bit better so\n\n526\n00:26:01.510 --> 00:26:02.820\nyou can kind of get an idea.\n\n527\n00:26:02.820 --> 00:26:05.795\nSo, when I went down here\nto my sample database,\n\n528\n00:26:05.795 --> 00:26:10.790\nI right-clicked on that and\nI went to Tasks.\n\n529\n00:26:10.790 --> 00:26:15.258\nAnd under Tasks you'll see that\nthere's Export Data-tier Application,\n\n530\n00:26:15.258 --> 00:26:18.030\nExtract Data-tier, Register and so on.\n\n531\n00:26:18.030 --> 00:26:20.300\nThere's really only these four or\nfive tasks and\n\n532\n00:26:20.300 --> 00:26:23.370\nthat's it on the Azure database, right.\n\n533\n00:26:23.370 --> 00:26:27.510\nBut if I go back up here to my local\n\n534\n00:26:27.510 --> 00:26:31.758\ndatabase like this adventureworks2012\ndatabase I've got on my own system.\n\n535\n00:26:31.758 --> 00:26:36.470\nI can right-click on that and\ngo to Tasks and I will get a lot more.\n\n536\n00:26:36.470 --> 00:26:41.410\nShrink, backup, restore, these are all\nshowing up because it is a local one.\n\n537\n00:26:41.410 --> 00:26:45.380\nThe SQL Management Studio, at least for\n2014 is fully aware of Azure.\n\n538\n00:26:45.380 --> 00:26:48.720\nAnd if there is something you're\nnot allowed to do it won't show up.\n\n539\n00:26:48.720 --> 00:26:51.820\nThat way it stops you from basically\njust generating a bunch of errors and\n\n540\n00:26:51.820 --> 00:26:52.920\ncausing failures there.\n\n541\n00:26:52.920 --> 00:26:54.530\nSo, it really does make life easy.\n\n542\n00:26:54.530 --> 00:26:56.220\nYou can mix your environments this way.\n\n543\n00:26:56.220 --> 00:26:59.330\nSo, you're managing both Cloud and\non-premises systems.\n\n544\n00:26:59.330 --> 00:27:01.880\nOr, you can just use it for\nmanaging Cloud, which is what I do.\n\n545\n00:27:01.880 --> 00:27:05.770\nI find that I come to the SQL Management\nStudio more than I go to the web UI,\n\n546\n00:27:05.770 --> 00:27:08.330\nand absolutely more than I\ngo to the Visual Studio.\n\n547\n00:27:08.330 --> 00:27:13.172\n>> It seems like basically you're getting,\nlike you said, it's just like you have any\n\n548\n00:27:13.172 --> 00:27:16.884\nother SQL database except for\nwhen it's kind of Azure specific.\n\n549\n00:27:16.884 --> 00:27:18.585\nRight, so that's when you know okay,\n\n550\n00:27:18.585 --> 00:27:21.525\nI'm probably going to have to go\ninto Azure and do these functions,\n\n551\n00:27:21.525 --> 00:27:25.100\nwhereas if it's just SQL specific it's\ngoing to be here in the management tools.\n\n552\n00:27:25.100 --> 00:27:27.230\n>> Right.\nAnd there's few exceptions to that you\n\n553\n00:27:27.230 --> 00:27:30.500\nknow things like back-ups where\nyou do backups for Azure,\n\n554\n00:27:30.500 --> 00:27:31.700\nyou do backups for on-premises.\n\n555\n00:27:31.700 --> 00:27:34.970\nBut the backups are done a different way,\nright, a special way in the cloud.\n\n556\n00:27:34.970 --> 00:27:38.094\nNow, my Visual Studio finished\ninstalling in the background and\n\n557\n00:27:38.094 --> 00:27:40.952\nif I were to just fire that one up,\nVisual Studio 2015.\n\n558\n00:27:40.952 --> 00:27:44.664\nSo here it is, I installed the community,\nfree edition, right, so\n\n559\n00:27:44.664 --> 00:27:46.300\nnothing too crazy here.\n\n560\n00:27:46.300 --> 00:27:52.040\nAnd you can sign in with your Microsoft ID\nand it'll try and find all your databases.\n\n561\n00:27:52.040 --> 00:27:54.770\nI've had really bad luck with that,\nit's never found a single database for me.\n\n562\n00:27:54.770 --> 00:27:56.730\nI'm probably doing something wrong.\n\n563\n00:27:56.730 --> 00:27:59.540\nSo I'm just gonna choose not now for\nthe sign in part, and\n\n564\n00:27:59.540 --> 00:28:01.420\nI'll start up Visual Studio.\n\n565\n00:28:01.420 --> 00:28:05.530\nBut once it starts up if we wanna get\nconnected to our database we can manually\n\n566\n00:28:05.530 --> 00:28:09.450\nput in the credentials, put in the server\nname, the username and the password.\n\n567\n00:28:09.450 --> 00:28:10.240\nOr we can go back and\n\n568\n00:28:10.240 --> 00:28:13.320\nwe can use that Launch in Visual Studio\nbutton in our web UI, right.\n\n569\n00:28:13.320 --> 00:28:18.430\nSo remember, back here,\nif I drill into my database and\n\n570\n00:28:18.430 --> 00:28:22.240\nI go to that Open in Visual Studio,\nit's kind of funny, because you've got\n\n571\n00:28:22.240 --> 00:28:27.020\nthe button that says, oh, that says,\ndatabase not available, apparently.\n\n572\n00:28:27.020 --> 00:28:28.100\nI've chosen the wrong database.\n\n573\n00:28:28.100 --> 00:28:29.980\nLet me navigate to this right away.\n\n574\n00:28:29.980 --> 00:28:32.917\nSo if I got to MySQL databases and\nsample DB1.\n\n575\n00:28:32.917 --> 00:28:34.522\nThere we go.\n\n576\n00:28:34.522 --> 00:28:39.550\nI've got Open in Visual Studio,\nright here, but if you click on it,\n\n577\n00:28:39.550 --> 00:28:43.350\nit doesn't actually open in Visual Studio,\nit takes you to that management pane over\n\n578\n00:28:43.350 --> 00:28:48.550\nhere, where we have got a whole\nnew open in Visual Study button.\n\n579\n00:28:48.550 --> 00:28:52.540\nAnd if we choose that, let me see if\nmy Visual Studio finished launching,\n\n580\n00:28:52.540 --> 00:28:55.040\nif we choose that, it'll attempt to\nactually launch it in the software.\n\n581\n00:28:55.040 --> 00:28:57.830\nAnd there we go, all right.\n\n582\n00:28:57.830 --> 00:28:59.780\nSo here's Visual Studio that I launched.\n\n583\n00:28:59.780 --> 00:29:02.550\nAnd I'm gonna go back to my web UI and\nI'm gonna click that Open in\n\n584\n00:29:02.550 --> 00:29:06.710\nVisual Studio button, and it's gonna ask\nif I want to allow that program to run.\n\n585\n00:29:06.710 --> 00:29:08.070\nI'll allow it.\n\n586\n00:29:08.070 --> 00:29:09.510\nAnd I'll just tell it not to show me that.\n\n587\n00:29:09.510 --> 00:29:13.410\nIt's basically looking at, it's saying\nhere the website wants to open content to\n\n588\n00:29:13.410 --> 00:29:16.790\nmy computer, cuz it's about to launch\nprograms, so I need to allow that.\n\n589\n00:29:16.790 --> 00:29:20.530\nAnd now it's gonna relaunch Visual Studio\nand connect right to my instance.\n\n590\n00:29:20.530 --> 00:29:23.460\nAnd once that's there I'll be\nable to work with the system.\n\n591\n00:29:23.460 --> 00:29:26.780\nNow, it's gonna show me the server name,\nwhich is already typed for me.\n\n592\n00:29:26.780 --> 00:29:30.800\nRemember how I had a problem copying and\npasting the server name?\n\n593\n00:29:30.800 --> 00:29:32.050\nHere I don't have to, it's already got it.\n\n594\n00:29:32.050 --> 00:29:35.394\nAnd it's already put in my user name\nbecause it knows who I was logged in as,\n\n595\n00:29:35.394 --> 00:29:37.585\nbut it didn't put in my password so\nI guess I can.\n\n596\n00:29:37.585 --> 00:29:39.280\n>> What kind of stupid\ncomputer is this Don?\n\n597\n00:29:39.280 --> 00:29:40.680\n>> I know.\n\n598\n00:29:40.680 --> 00:29:43.530\nI will deign to type in my password.\n\n599\n00:29:43.530 --> 00:29:46.810\nAnd assuming that I type it right,\nthat should get me there.\n\n600\n00:29:46.810 --> 00:29:50.740\nAnd on the left side I can see\nwhere it's connecting up, and\n\n601\n00:29:50.740 --> 00:29:54.380\nit's very similar to the SQL\nManagement Studio that I talked about.\n\n602\n00:29:54.380 --> 00:29:56.750\nI see a SQL Server here and local DB,\n\n603\n00:29:56.750 --> 00:30:00.470\nthat you have the local database\nfunctionality in Windows.\n\n604\n00:30:00.470 --> 00:30:04.450\nAnd then I've got the ITProTV sample\ndatabase right there, there's SampleDB1.\n\n605\n00:30:05.500 --> 00:30:07.650\nAnd I can expand that out and\n\n606\n00:30:07.650 --> 00:30:13.900\nstart to work with it just like we\nsaw in the SQL Management Studio.\n\n607\n00:30:13.900 --> 00:30:18.760\nNow when I work with this it's very\nsimilar to the SQL Management Studio but\n\n608\n00:30:18.760 --> 00:30:21.760\na lot of the keyboard shortcuts are\ndifferent, things have been kind of moved\n\n609\n00:30:21.760 --> 00:30:24.930\naround and some functionality\nis just missing outright.\n\n610\n00:30:24.930 --> 00:30:27.930\nAnd also as we go through see\nhow it's going kinda slow?\n\n611\n00:30:27.930 --> 00:30:31.960\nWhen I clicked on those databases,\nit's sitting there and kinda churning,\n\n612\n00:30:31.960 --> 00:30:34.060\nit's trying to get metadata for\nthe system.\n\n613\n00:30:34.060 --> 00:30:36.650\nAnd that's another symptom of this\nbeing a fairly newer feature in\n\n614\n00:30:36.650 --> 00:30:40.870\nVisual Studio is that it's not\nnecessarily as optimized as it is so\n\n615\n00:30:40.870 --> 00:30:43.110\nI'm certainly not the biggest fan of this.\n\n616\n00:30:43.110 --> 00:30:46.280\nBut when you right-click on that database\nyou'll see we get a lot of the same\n\n617\n00:30:46.280 --> 00:30:49.350\noptions that we saw before like\npublishing the data to your application.\n\n618\n00:30:49.350 --> 00:30:52.441\nIn all those, and so for the most part,\nwe can use this just like we do\n\n619\n00:30:52.441 --> 00:30:56.480\nthe SQL Management Studio, and you guys\nsee here, visually, they're very similar.\n\n620\n00:30:56.480 --> 00:31:01.419\nAnd so over the next couple years, we'll\nsee this eventually just replace studio,\n\n621\n00:31:01.419 --> 00:31:05.664\nand I imagine Microsoft will just stop\nreleasing the SQL Management Studio with\n\n622\n00:31:05.664 --> 00:31:07.220\nnewer versions of SQL.\n\n623\n00:31:07.220 --> 00:31:08.030\nI bet that'll happen.\n\n624\n00:31:08.030 --> 00:31:10.130\nI haven't seen it happen yet, but it may.\n\n625\n00:31:10.130 --> 00:31:12.840\n>> And Don, does this do the same thing\nwith the backups and things like that,\n\n626\n00:31:12.840 --> 00:31:15.040\nwhere that kinda stuff\nis still done in Azure.\n\n627\n00:31:15.040 --> 00:31:16.300\nYou can't do it through this, as well?\n\n628\n00:31:16.300 --> 00:31:17.470\n>> Yep, exactly.\n\n629\n00:31:17.470 --> 00:31:19.970\nI will not see the things\nthat I'm not able to run.\n\n630\n00:31:19.970 --> 00:31:23.400\nSo, when I come in here, I guess I\ndon't have any local databases, but\n\n631\n00:31:23.400 --> 00:31:25.970\nif I take that Azure database,\nwhen I right-clicked on it,\n\n632\n00:31:25.970 --> 00:31:30.050\nI don't even have a task menu for this\none, cuz it's optimized a bit different.\n\n633\n00:31:30.050 --> 00:31:32.170\nAnd I see various things that I can do.\n\n634\n00:31:32.170 --> 00:31:34.570\nAnd backup is not one of them.\n\n635\n00:31:34.570 --> 00:31:35.910\nBut I do see the other things.\n\n636\n00:31:35.910 --> 00:31:38.530\nAnd I can come in here and\nstart to create my tables.\n\n637\n00:31:38.530 --> 00:31:41.400\nSo if I go to add a new table,\nthe Visual Studio does\n\n638\n00:31:41.400 --> 00:31:44.040\nhave the nice little feature that\nit defaults to the Visual Designer.\n\n639\n00:31:44.040 --> 00:31:45.900\nSo it's a little bit easier to work with.\n\n640\n00:31:45.900 --> 00:31:50.614\nBut, you'll see the design interface\nis loading here and at the bottom I\n\n641\n00:31:50.614 --> 00:31:55.493\nstill have the raw query editors so\nI can punch in my query and execute that.\n\n642\n00:31:55.493 --> 00:31:57.882\nI've worked with SQL a long time and\nso for\n\n643\n00:31:57.882 --> 00:32:00.003\nme I type the query I hit F5 to run it.\n\n644\n00:32:00.003 --> 00:32:01.921\nI've been hitting F5 for 10 years now.\n\n645\n00:32:01.921 --> 00:32:06.756\nIn here it's like control shift F11 or\nsomething.\n\n646\n00:32:06.756 --> 00:32:09.391\nAnd it's little things like that,\nthat are just annoying enough to make you\n\n647\n00:32:09.391 --> 00:32:11.450\nnot want to use it but,\n>> Touching your nose and\n\n648\n00:32:11.450 --> 00:32:12.892\npulling your ear [LAUGH].\n\n649\n00:32:12.892 --> 00:32:15.566\n>> [LAUGH] Yeah and\nyou know sadly I can't remember exactly,\n\n650\n00:32:15.566 --> 00:32:17.074\nI think it's control shift F11.\n\n651\n00:32:17.074 --> 00:32:19.100\nBut anyhow you get use to that, and\n\n652\n00:32:19.100 --> 00:32:21.400\nif you are starting out this is\nprobably the way for you to go.\n\n653\n00:32:21.400 --> 00:32:24.030\nBut I can come in here and\nwhip up a quick table, give it a name.\n\n654\n00:32:24.030 --> 00:32:26.850\nYou know, maybe I want to\nstore somebody's first name.\n\n655\n00:32:26.850 --> 00:32:29.910\nI wanna store last name and so on.\n\n656\n00:32:29.910 --> 00:32:31.320\nSo I'm just kinda whipping up a table.\n\n657\n00:32:31.320 --> 00:32:34.130\nAnd see how it's building the query for\nme down here?\n\n658\n00:32:34.130 --> 00:32:36.294\nAnd I can run that way, or if we wanted,\n\n659\n00:32:36.294 --> 00:32:40.590\nwe could really just create like an all\nnew query window and go that way.\n\n660\n00:32:40.590 --> 00:32:43.310\nWhat I'm looking at here is the designer.\n\n661\n00:32:43.310 --> 00:32:45.710\nAnd so when you get the designer kind of\nset the way you want with the information\n\n662\n00:32:45.710 --> 00:32:47.548\nyou want, you hit this update and\nthat'll execute it.\n\n663\n00:32:47.548 --> 00:32:49.281\nOr Shift+Alt+U.\n\n664\n00:32:49.281 --> 00:32:50.820\n>> [LAUGH]\n>> So,\n\n665\n00:32:50.820 --> 00:32:54.190\na couple of the keyboard shortcuts\nare not necessarily the most convenient.\n\n666\n00:32:54.190 --> 00:32:56.640\nBut, we'll see,\nkinda as we go through the show,\n\n667\n00:32:56.640 --> 00:32:59.290\nthat I'll use the SQLl Management Studio\nmore than anything,\n\n668\n00:32:59.290 --> 00:33:01.930\njust because it's got the full\nset of features that we need.\n\n669\n00:33:01.930 --> 00:33:03.240\nEventually, this will take its place.\n\n670\n00:33:03.240 --> 00:33:04.000\n>> Awesome.\n\n671\n00:33:04.000 --> 00:33:07.920\nWell Don, there is obviously quite a few\nways, or at least a couple of ways that we\n\n672\n00:33:07.920 --> 00:33:10.890\nhave to actually connect to our\ndatabases that we've created.\n\n673\n00:33:10.890 --> 00:33:12.870\nAnything else we need to know about this?\n\n674\n00:33:12.870 --> 00:33:13.790\nThose are the main ones.\n\n675\n00:33:13.790 --> 00:33:16.430\nDo be careful with these kind of\nconnections, cuz they are over the WAN,\n\n676\n00:33:16.430 --> 00:33:17.980\nright over the internet.\n\n677\n00:33:17.980 --> 00:33:20.480\nAnd if you have more than\none person in there working,\n\n678\n00:33:20.480 --> 00:33:24.200\nsometimes you need to refresh your screen\nto see an update that somebody else made.\n\n679\n00:33:24.200 --> 00:33:27.240\nSo I might make a table and\nDaniel doesn't see it right away.\n\n680\n00:33:27.240 --> 00:33:29.969\nSo he just needs to right click on the\ndata base table folder and hit refresh.\n\n681\n00:33:31.100 --> 00:33:34.110\nI find I do that a lot, just to keep\nit up to date, keep making sure.\n\n682\n00:33:34.110 --> 00:33:36.760\nIf you're the only admin it's not a big\nthing that you have to worry about, but\n\n683\n00:33:36.760 --> 00:33:38.960\nif you've got multiple admins,\nyou might bump into that.\n\n684\n00:33:38.960 --> 00:33:41.200\nBut otherwise,\nthe manager's pretty straightforward.\n\n685\n00:33:41.200 --> 00:33:43.000\nAnd you can do this on as\nmany machines as you want,\n\n686\n00:33:43.000 --> 00:33:46.070\nyou just need to make sure you approve\nthem on the firewall in the Azure portal.\n\n687\n00:33:46.070 --> 00:33:48.060\nRight, I had to allow\nmy client IP address.\n\n688\n00:33:48.060 --> 00:33:50.280\nSo if I go home,\nI'm not gonna be able to connect,\n\n689\n00:33:50.280 --> 00:33:53.490\ncuz I'll have a different IP there,\nI'll need to add that IP also.\n\n690\n00:33:53.490 --> 00:33:56.200\nSo I'll need to go to the Azure Portal\nat a minimum for adding that.\n\n691\n00:33:56.200 --> 00:34:01.150\nAnd then I didn't do it here, but we can\ndo all of these through PowerShell also.\n\n692\n00:34:01.150 --> 00:34:05.750\nWe don't have to use the graphical\nuser interfaces at all, right?\n\n693\n00:34:05.750 --> 00:34:08.940\nSo in PowerShell, we can connect to an\nAzure instance, start executing commands.\n\n694\n00:34:08.940 --> 00:34:11.870\nWe'll have an episode on that later on\nto see how to interact with the system\n\n695\n00:34:11.870 --> 00:34:12.830\nthrough PowerShell.\n\n696\n00:34:12.830 --> 00:34:15.420\nIn reality, a lot of this is using\nPowerShell in the background anyway,\n\n697\n00:34:15.420 --> 00:34:16.520\nso that happens too.\n\n698\n00:34:16.520 --> 00:34:17.130\n>> Cool.\n\n699\n00:34:17.130 --> 00:34:20.390\nWell Don, you got to show us the Microsoft\nway to connect, and then you showed us,\n\n700\n00:34:20.390 --> 00:34:22.390\nwell, the right way to connect [LAUGH]\n>> [LAUGH]\n\n701\n00:34:22.390 --> 00:34:24.470\n>> So that's always helpful.\n\n702\n00:34:24.470 --> 00:34:25.900\nAnd you've, a lot of good stuff.\n\n703\n00:34:25.900 --> 00:34:29.380\nI look forward to that PowerShell episode,\nbut I'm looking at the clock her, and\n\n704\n00:34:29.380 --> 00:34:32.360\nwe've ticked our last tock\nwhen it comes to this show.\n\n705\n00:34:32.360 --> 00:34:33.940\nThank you so much for\nshowing us how to do this,\n\n706\n00:34:33.940 --> 00:34:36.100\nhow to get connected to these\ndata bases instead of Azure.\n\n707\n00:34:36.100 --> 00:34:37.825\nWe're gonna go ahead and\nclose the show down.\n\n708\n00:34:37.825 --> 00:34:39.040\nThank you for watching.\n\n709\n00:34:39.040 --> 00:34:40.250\nSigning off for ITPRO TV.\n\n710\n00:34:40.250 --> 00:34:42.180\nI've been your host Stan Lowery.\n\n711\n00:34:42.180 --> 00:34:44.152\n>> And I'm Don Pezet, and\nwe'll see you next time.\n\n712\n00:34:44.152 --> 00:34:52.090\n[MUSIC]\n\n",
          "vimeoId": "148658758"
        },
        {
          "description": "In this episode, Daniel and Don explain the concept and implementation of Azure SQL Elastic Pools. They begin by defining what an Elastic Pool is and how/why they might benefit your environment. Then they show you how to create an Elastic Pool, all the while informing your setup choices as to get the best bang for your buck.",
          "length": "1878",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-azuresql/techskills-azuresql-1-4-using_elastic_pools-120915-1.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-azuresql/techskills-azuresql-1-4-using_elastic_pools-120915-1-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-azuresql/techskills-azuresql-1-4-using_elastic_pools-120915-1-sm.jpg",
          "title": "Using Elastic Pools",
          "transcript": "WEBVTT\n\n1\n00:00:00.000 --> 00:00:10.000\n[MUSIC]\n\n2\n00:00:11.844 --> 00:00:16.884\nAll right, greetings everyone and welcome\nto another great episode of ITProTV.\n\n3\n00:00:16.884 --> 00:00:18.684\nI'm your host Daniel Lowrie.\n\n4\n00:00:18.684 --> 00:00:22.828\nAnd in today's episode, we're gonna\ncontinue looking at Microsoft Azure SQL.\n\n5\n00:00:22.828 --> 00:00:24.640\nAvailable from, well Microsoft.\n\n6\n00:00:24.640 --> 00:00:29.737\nAnd joining us today to help lend his\ntechnical expertise on that topic, guide\n\n7\n00:00:29.737 --> 00:00:34.926\nus down the path of knowledge, is none\nother than my good friend Mr. Don Pezet.\n\n8\n00:00:34.926 --> 00:00:37.020\nDon, welcome to the show,\nhow are you doing today, sir?\n\n9\n00:00:37.020 --> 00:00:39.210\n>> I'm doing great Daniel thanks for\nhaving me back on the show.\n\n10\n00:00:39.210 --> 00:00:42.048\nAnd in this episode we're gonna\nbe taking a look at a neat topic.\n\n11\n00:00:42.048 --> 00:00:45.798\nWe're gonna take a look at\nAzure SQL elastic pools.\n\n12\n00:00:45.798 --> 00:00:47.841\nAnd it's kind of a fun technology.\n\n13\n00:00:47.841 --> 00:00:50.990\nAnd it's one that we were joking\naround about before the show.\n\n14\n00:00:50.990 --> 00:00:54.000\nIt's one of the few times that\nMicrosoft uses the word elastic,\n\n15\n00:00:54.000 --> 00:00:56.890\nbecause boy Amazon loves to use elastic.\n\n16\n00:00:56.890 --> 00:01:01.240\nHalf their stuff has an e in it, because\nit's an elastic compute cloud or whatever.\n\n17\n00:01:01.240 --> 00:01:04.460\nMicrosoft really just uses it here in\nthis one instance that I'm aware of.\n\n18\n00:01:04.460 --> 00:01:10.070\nBut it is a great way to take our\ndatabases and put them into pools to\n\n19\n00:01:10.070 --> 00:01:14.060\nadjust how our performance is handled and\nreally to adjust our billing and stuff.\n\n20\n00:01:14.060 --> 00:01:15.530\nWe'll see some neat things there.\n\n21\n00:01:15.530 --> 00:01:16.870\nBut elastic pools.\n\n22\n00:01:16.870 --> 00:01:18.310\nIt's a neat technology.\n\n23\n00:01:18.310 --> 00:01:20.550\nIt's not something that's\nturned on by default.\n\n24\n00:01:20.550 --> 00:01:23.850\nSo we've got to know about it, know\nwhen to use it, and how to implement it.\n\n25\n00:01:23.850 --> 00:01:25.380\nThat's what we're gonna see right here.\n\n26\n00:01:25.380 --> 00:01:27.053\n>> Awesome, now Don,\nspeaking about performance.\n\n27\n00:01:27.053 --> 00:01:30.431\nI remember in a previous episode\nwe talked about the DTUs, right?\n\n28\n00:01:30.431 --> 00:01:33.670\nThis is really our\nmeasurement of performance.\n\n29\n00:01:33.670 --> 00:01:36.030\nAnd it can get pretty expensive.\n\n30\n00:01:36.030 --> 00:01:40.910\nWe saw that I think what was it,\nthat P11 went up to seven grand a month?\n\n31\n00:01:40.910 --> 00:01:43.450\nIt's extremely, extremely expensive.\n\n32\n00:01:43.450 --> 00:01:48.040\nAnd is this a way for\nus to actually share out DTUs,\n\n33\n00:01:48.040 --> 00:01:51.480\nand get some better performance,\nand not pay so much money?\n\n34\n00:01:51.480 --> 00:01:54.140\n>> So it is, and it isn't?\n\n35\n00:01:54.140 --> 00:01:56.929\nDTU pools are kinda interesting,\nor elastic pools.\n\n36\n00:01:56.929 --> 00:01:57.753\nI should call them what.\n\n37\n00:01:57.753 --> 00:01:59.553\nThey used to be called EDTU pools.\n\n38\n00:01:59.553 --> 00:02:01.840\nAnd they changed the name cuz\nthat's what Microsoft does.\n\n39\n00:02:01.840 --> 00:02:04.940\nSo, when I think of pools.\n\n40\n00:02:04.940 --> 00:02:07.740\nAnd what most of you guys out\nthere probably think of as pools.\n\n41\n00:02:07.740 --> 00:02:10.690\nWe normally think of using\nthem to increase performance.\n\n42\n00:02:10.690 --> 00:02:12.914\nSo let's say you've been a DBA for\nyears and years and years.\n\n43\n00:02:12.914 --> 00:02:16.212\nThen you know that when you put your\ndatabase on a single hard drive.\n\n44\n00:02:16.212 --> 00:02:18.820\nYou've got one set of hard drive heads\nthat are reading from that database,\n\n45\n00:02:18.820 --> 00:02:20.790\nand you've got a performance bottleneck.\n\n46\n00:02:20.790 --> 00:02:24.210\nBut if you can put it on a rate array\nwith three drives, or ten hard drives.\n\n47\n00:02:24.210 --> 00:02:28.470\nNow you've got more heads reading\nthe drives and they increase performance.\n\n48\n00:02:28.470 --> 00:02:31.360\nSo your hard drive pool is\nincreasing performance.\n\n49\n00:02:31.360 --> 00:02:33.700\nThe bigger the pool gets,\nthe faster the database gets.\n\n50\n00:02:33.700 --> 00:02:34.280\nRight?\n\n51\n00:02:34.280 --> 00:02:36.920\nAnd so that's what I think of\nwhen I hear about elastic pools.\n\n52\n00:02:36.920 --> 00:02:40.070\nI'm like, oh this must be a way\nto get beyond the DTU limit.\n\n53\n00:02:40.070 --> 00:02:40.960\nRight?\n\n54\n00:02:40.960 --> 00:02:41.760\nWell, it isn't.\n\n55\n00:02:41.760 --> 00:02:44.218\nIt really doesn't affect\nperformance at all.\n\n56\n00:02:44.218 --> 00:02:47.330\nWell, it can hurt performance I guess\n[LAUGH] which is kinda the opposite of\n\n57\n00:02:47.330 --> 00:02:48.098\nwhat we think of as a pool.\n\n58\n00:02:48.098 --> 00:02:50.480\n>> [LAUGH]\n>> So, let me, let me clarify that.\n\n59\n00:02:50.480 --> 00:02:54.220\nA elastic pool can absolutely\nhurt your performance.\n\n60\n00:02:54.220 --> 00:02:56.110\nAll right.\nIt can make performance worse.\n\n61\n00:02:56.110 --> 00:02:58.920\nIt can not make your performance better.\n\n62\n00:02:58.920 --> 00:03:05.450\nIf I have a server that is a P2,\nand it has 250 DTUs and\n\n63\n00:03:05.450 --> 00:03:10.610\nI put it into a pool that has 2,000 DTUs.\n\n64\n00:03:10.610 --> 00:03:14.700\nWell that database that I spun up,\nit still has a limit of 250 DTUs.\n\n65\n00:03:14.700 --> 00:03:15.780\nThat's the limit on a P2.\n\n66\n00:03:15.780 --> 00:03:17.100\nThat's what it's got.\n\n67\n00:03:17.100 --> 00:03:18.990\nThe pool is not gonna\nmake a bit of difference.\n\n68\n00:03:18.990 --> 00:03:21.820\nSo elastic pools do not\nimprove performance.\n\n69\n00:03:21.820 --> 00:03:22.830\nThat's not their point.\n\n70\n00:03:22.830 --> 00:03:25.090\nSo if that's what you're looking for,\ndon't do this.\n\n71\n00:03:25.090 --> 00:03:27.250\nIf you're looking to improve\nperformance you scale up.\n\n72\n00:03:27.250 --> 00:03:29.100\nIf the P2 is to slow go to a P3.\n\n73\n00:03:29.100 --> 00:03:31.900\nIf you need more DTUs go to a P4, right?\n\n74\n00:03:31.900 --> 00:03:34.965\nWhen you hit a P11 and\nyou need more performance?\n\n75\n00:03:34.965 --> 00:03:36.335\nWell first off congratulations.\n\n76\n00:03:36.335 --> 00:03:38.105\n>> [LAUGH]\n>> Cuz your company is killing it right?\n\n77\n00:03:38.105 --> 00:03:39.045\nRight.\n\n78\n00:03:39.045 --> 00:03:43.250\nBut, secondly you may have just exceeded\nthe capacity that Azure can really\n\n79\n00:03:43.250 --> 00:03:43.846\nperform.\n\n80\n00:03:43.846 --> 00:03:47.046\nAnd there's some things we'll see in\nlater shows you can do to optimize your\n\n81\n00:03:47.046 --> 00:03:47.550\ndatabase.\n\n82\n00:03:47.550 --> 00:03:50.922\nYou can take advantage of replicas,\nand an active geo rep, and\n\n83\n00:03:50.922 --> 00:03:54.145\nstuff like that that we're\nnot gonna tackle here.\n\n84\n00:03:54.145 --> 00:03:56.095\nBut, you're really supposed\nto scale up on these.\n\n85\n00:03:56.095 --> 00:03:58.790\nThat's the way to go to\nimprove that performance.\n\n86\n00:03:58.790 --> 00:04:02.180\nBut the cost,\nthat was the other thing Daniel mentioned.\n\n87\n00:04:02.180 --> 00:04:05.010\nWe can use pools to decrease our costs.\n\n88\n00:04:05.010 --> 00:04:07.150\nAnd that's really the goal.\n\n89\n00:04:07.150 --> 00:04:10.980\nWhen you spin up a database\ninside of Azure SQL.\n\n90\n00:04:10.980 --> 00:04:15.090\nMicrosoft is making the assumption\nthat you want that database to\n\n91\n00:04:15.090 --> 00:04:19.550\nbe up 24 hours a day,\nseven days a week, 365 days a year.\n\n92\n00:04:19.550 --> 00:04:25.360\nAnd they're working to provide, I think\ntheir advertised number is 99.99% up-time.\n\n93\n00:04:25.360 --> 00:04:26.490\nRight, four nines.\n\n94\n00:04:26.490 --> 00:04:29.060\nSo they're working to\nprovide that uptime to\n\n95\n00:04:29.060 --> 00:04:31.260\nkeep your database available and running.\n\n96\n00:04:31.260 --> 00:04:34.410\nThe thing is,\nthey have to charge you DTU's, right?\n\n97\n00:04:34.410 --> 00:04:38.090\nThey have to charge you for the amount of\nresources that you/re going to consume.\n\n98\n00:04:38.090 --> 00:04:41.930\nAnd they don't know when you're busy,\nwhen you're slow.\n\n99\n00:04:41.930 --> 00:04:45.680\nAnd so they charge you for\nthose DTU's per minute.\n\n100\n00:04:45.680 --> 00:04:46.523\nSo, basically,\n\n101\n00:04:46.523 --> 00:04:49.962\nthey add up the amount of minutes that\nyour database existed for a month.\n\n102\n00:04:49.962 --> 00:04:53.067\nAnd then they run that against\nthe billing charges for the P2,\n\n103\n00:04:53.067 --> 00:04:55.419\nor P5, or\nwhatever it is that you've chosen.\n\n104\n00:04:55.419 --> 00:04:57.250\nAnd then they bill appropriately.\n\n105\n00:04:57.250 --> 00:04:58.140\nAll right?\n\n106\n00:04:58.140 --> 00:05:00.820\nBut you know your company.\n\n107\n00:05:00.820 --> 00:05:04.942\nAnd if you're in a company that's only\nopen from eight in the morning until five\n\n108\n00:05:04.942 --> 00:05:05.502\nat night.\n\n109\n00:05:05.502 --> 00:05:07.739\nThen overnight,\nwhat's your database doing?\n\n110\n00:05:08.810 --> 00:05:09.730\nProbably sitting there idle.\n\n111\n00:05:09.730 --> 00:05:11.170\nIt may be running backups and\nstuff, right?\n\n112\n00:05:11.170 --> 00:05:12.660\nBut otherwise, it's sitting their idle.\n\n113\n00:05:12.660 --> 00:05:18.720\nAnd so, you might only be using two DTUs,\nthree DTUs, overnight.\n\n114\n00:05:18.720 --> 00:05:22.090\nAnd then the day starts up,\nand you start using 200 DTUs,\n\n115\n00:05:22.090 --> 00:05:24.880\n250 DTUs throughout the day, right?\n\n116\n00:05:24.880 --> 00:05:26.550\nYou've got peaks and valleys.\n\n117\n00:05:26.550 --> 00:05:30.014\nWell, if you just have one database,\nunfortunately, that's how it is.\n\n118\n00:05:30.014 --> 00:05:32.511\nYou're just gonna have peaks and\nvalleys, and that's it.\n\n119\n00:05:32.511 --> 00:05:33.610\nThere's nothing you can do about it.\n\n120\n00:05:33.610 --> 00:05:34.630\nDo with it.\n\n121\n00:05:34.630 --> 00:05:37.360\nBut when you have more than one database,\n\n122\n00:05:37.360 --> 00:05:39.720\nthere's some opportunities\nthat open up for us, right?\n\n123\n00:05:39.720 --> 00:05:44.680\nThere's the opportunity that one database\nmight be busy, while another is idle.\n\n124\n00:05:44.680 --> 00:05:47.510\nWell, I've got some databases\nthat are idle a lot, and\n\n125\n00:05:47.510 --> 00:05:49.050\nother ones that are busy a lot.\n\n126\n00:05:49.050 --> 00:05:54.430\nAnd I can share DTUs there to\nreally start to save some money.\n\n127\n00:05:54.430 --> 00:05:59.440\nSo instead of assigning 250 DTUs\nto one and 250 DTUs to another.\n\n128\n00:05:59.440 --> 00:06:04.980\nI could assign just 250 DTUs\nto be shared between the two.\n\n129\n00:06:04.980 --> 00:06:06.380\nAnd the busy one's always busy.\n\n130\n00:06:06.380 --> 00:06:07.750\nThe idle one's always idle.\n\n131\n00:06:07.750 --> 00:06:11.420\nBut then when I go to use the idle one,\nit can just borrow DTUs from the busy one.\n\n132\n00:06:11.420 --> 00:06:12.600\nAnd, I can use it.\n\n133\n00:06:12.600 --> 00:06:16.360\nAnd now, I have two databases, but\nI'm effectively only paying for one.\n\n134\n00:06:16.360 --> 00:06:17.830\nI save money.\n\n135\n00:06:17.830 --> 00:06:18.360\nRight?\n\n136\n00:06:18.360 --> 00:06:23.160\nThat's what D2 pools are all about,\nthe sequel Azure elastic.\n\n137\n00:06:23.160 --> 00:06:25.290\nThe Azure SQL elastic pool.\n\n138\n00:06:25.290 --> 00:06:26.427\nThere we go.\nThat's the official name.\n\n139\n00:06:26.427 --> 00:06:29.500\nThis is the most challenging\npart of dealing with Azure,\n\n140\n00:06:29.500 --> 00:06:32.453\nis that it is kind of a work\nin progress with Microsoft.\n\n141\n00:06:32.453 --> 00:06:36.000\nAnd they roll out new portals, and\nthey change product names, so.\n\n142\n00:06:36.000 --> 00:06:39.640\nYou'll still see a lot of documentation\nout there that calls them EDTUs,\n\n143\n00:06:39.640 --> 00:06:43.310\nall right, which were elastic\ndata based transaction units.\n\n144\n00:06:43.310 --> 00:06:45.586\nRight?\nSo DTUs, or EDTUs.\n\n145\n00:06:45.586 --> 00:06:51.089\nAnd the idea was that you had DTUs that\nweren't tied to a particular instance.\n\n146\n00:06:51.089 --> 00:06:54.327\nA particular database, but\ninstead were tied to a pool and\n\n147\n00:06:54.327 --> 00:06:56.810\nthe databases were in that pool.\n\n148\n00:06:56.810 --> 00:06:57.340\nAll right.\n\n149\n00:06:57.340 --> 00:07:00.937\nNow, it can be a little\nhard to understand.\n\n150\n00:07:00.937 --> 00:07:02.550\nSo let me show you, I kind of whipped\nup a little diagram before the show.\n\n151\n00:07:02.550 --> 00:07:04.530\nAnd I'm not an amazing artist.\n\n152\n00:07:04.530 --> 00:07:06.060\nSo these are squares, all right?\n\n153\n00:07:06.060 --> 00:07:06.880\nIt's what I do.\n\n154\n00:07:06.880 --> 00:07:07.790\nSo.\n\n155\n00:07:07.790 --> 00:07:08.915\n>> Squares.\n[LAUGH]\n\n156\n00:07:08.915 --> 00:07:09.415\n>> I know.\n\n157\n00:07:09.415 --> 00:07:11.105\nEach database is a square.\n\n158\n00:07:11.105 --> 00:07:13.565\nSo, normally, when we whip up a database.\n\n159\n00:07:13.565 --> 00:07:14.405\nWhat do we do?\n\n160\n00:07:14.405 --> 00:07:15.990\nWe go into our Azure portal.\n\n161\n00:07:15.990 --> 00:07:17.575\nWe whip up a database, and\n\n162\n00:07:17.575 --> 00:07:21.211\nwe pick a performance tier.\nAnd so here I've created a database, and\n\n163\n00:07:21.211 --> 00:07:26.279\nI've picked a performance tier of P2.\nAnd that P2, that's 250 DTUs.\n\n164\n00:07:26.279 --> 00:07:28.674\nSo now, this database comes up, and\n\n165\n00:07:28.674 --> 00:07:32.641\nit's consuming 250 DTUs.\nIf it's idle, if it's busy,\n\n166\n00:07:32.641 --> 00:07:36.250\nit doesn't matter, 250 DTUs.\nThat's what I'm paying for.\n\n167\n00:07:36.250 --> 00:07:39.330\nSo if I only use five DTUs,\nMicrosoft says, great.\n\n168\n00:07:39.330 --> 00:07:41.550\nThose five DTUs worked awesome for you.\n\n169\n00:07:41.550 --> 00:07:42.340\nYou pay for the 250.\n\n170\n00:07:42.340 --> 00:07:43.320\nAll right?\n\n171\n00:07:43.320 --> 00:07:47.360\nIf you use all 250, Microsoft says,\ngreat, those 250 work great for you.\n\n172\n00:07:47.360 --> 00:07:48.770\nHere's that same bill.\n\n173\n00:07:48.770 --> 00:07:52.506\nIf you try and use more than 250,\nthey throttle you.\n\n174\n00:07:52.506 --> 00:07:54.758\nAnd now your system\nslows down to that 250.\n\n175\n00:07:54.758 --> 00:07:57.145\nAnd that's what you run at and your\ntransactions take a little bit longer.\n\n176\n00:07:57.145 --> 00:07:59.495\nAnd that's the process\nof a normal database.\n\n177\n00:07:59.495 --> 00:08:02.164\n>> So you're kind of paying for what it\ncan do, not necessarily what it is doing.\n\n178\n00:08:02.164 --> 00:08:02.883\n>> That's right.\n\n179\n00:08:02.883 --> 00:08:03.765\nThat's right.\n\n180\n00:08:03.765 --> 00:08:05.577\nYou're setting up what your\nmaximum performance level is.\n\n181\n00:08:05.577 --> 00:08:08.142\nAnd that's how you have to\nthink of that as your maximum.\n\n182\n00:08:08.142 --> 00:08:10.580\nBut what if I have more than one database?\n\n183\n00:08:10.580 --> 00:08:14.144\nIf I just have one database,\nI just pay it.\n\n184\n00:08:14.144 --> 00:08:14.899\nThat's it.\n\n185\n00:08:14.899 --> 00:08:15.840\nThat's how it works, right?\n\n186\n00:08:15.840 --> 00:08:17.330\nBut if I need more than one database,\n\n187\n00:08:17.330 --> 00:08:21.050\nmaybe I'm supporting more than\none customer, or I've got [COUGH]\n\n188\n00:08:21.050 --> 00:08:24.400\napplications and I want each application\nto have its own dedicated database.\n\n189\n00:08:24.400 --> 00:08:29.300\nWell, as I start spinning those up,\nright, they might be on separate servers,\n\n190\n00:08:29.300 --> 00:08:31.760\nthey might be on the same server,\nit doesn't really matter.\n\n191\n00:08:31.760 --> 00:08:34.820\nBut when I spin up each\nof these databases,\n\n192\n00:08:34.820 --> 00:08:36.680\nI'm assigning them a performance tier.\n\n193\n00:08:36.680 --> 00:08:41.667\nSo P2 here, P2 here, P2 here,\nP2 here, 250 DTUs for each.\n\n194\n00:08:41.667 --> 00:08:45.930\nA thousand DTUs total,\nthat's what I'm now paying for.\n\n195\n00:08:45.930 --> 00:08:52.470\nAnd if SQL01 and SQL02 are really busy and\nSQL03 and SQL 04 are idling.\n\n196\n00:08:52.470 --> 00:08:55.370\nIt doesn't matter,\nI'm paying for a thousand DTUs.\n\n197\n00:08:55.370 --> 00:08:57.960\nAnd this is where things start\nto get really expensive.\n\n198\n00:08:57.960 --> 00:09:01.620\nYou start spending up all these instances,\nand\n\n199\n00:09:01.620 --> 00:09:05.680\nthe ones that are idle, you're paying for\nthem even though they're not doing much.\n\n200\n00:09:05.680 --> 00:09:08.275\nBut you don't wanna get rid of them.\nYou need them to available 24 hours\n\n201\n00:09:08.275 --> 00:09:11.036\na day so that when I do need it,\nit's there and\n\n202\n00:09:11.036 --> 00:09:15.440\nthis is one of the big differences\nbetween Azure SQL and Azure VMs.\n\n203\n00:09:15.440 --> 00:09:18.720\nIf I spin up an Azure Virtual Machine and\nI'm done with it for the day,\n\n204\n00:09:18.720 --> 00:09:19.850\nI can shut it down.\n\n205\n00:09:19.850 --> 00:09:23.220\nAnd if I shut it down, it'll deallocate.\n\n206\n00:09:23.220 --> 00:09:26.380\nIt'll give its CPU and\nRAM back to Microsoft.\n\n207\n00:09:26.380 --> 00:09:27.630\nAnd all you have to do is pay for storage.\n\n208\n00:09:27.630 --> 00:09:30.360\nYou pay this like nominal fee for\nthe disk storage.\n\n209\n00:09:30.360 --> 00:09:33.010\nBut the virtual machine's not\ntaking resources anymore.\n\n210\n00:09:33.010 --> 00:09:36.050\nBut with SQL, you're always paying for it.\n\n211\n00:09:36.050 --> 00:09:37.920\nThere's no shutting down the database.\n\n212\n00:09:37.920 --> 00:09:40.540\nYou can delete the database,\nthat'll work, right?\n\n213\n00:09:40.540 --> 00:09:42.850\nBut you probably see the fault\nwith that plan, [LAUGH] so\n\n214\n00:09:42.850 --> 00:09:45.870\nthen you gotta go through\nthe whole restore mess.\n\n215\n00:09:45.870 --> 00:09:48.540\nBut that's the thing with SQL,\nwhen you spin it up,\n\n216\n00:09:48.540 --> 00:09:50.382\nthey assume it's gonna\nbe there 24 hours a day.\n\n217\n00:09:50.382 --> 00:09:55.410\nAll right, if you need a database that\nis only available once a month, right?\n\n218\n00:09:55.410 --> 00:09:58.760\nI have a database and I just need\nit on the last day of the month.\n\n219\n00:09:58.760 --> 00:10:02.130\nWell, the best solution is\nnot to use Azure SQL at all.\n\n220\n00:10:02.130 --> 00:10:02.830\nOkay.\n\n221\n00:10:02.830 --> 00:10:08.810\nWhen you deploy SQL inside of Azure,\nyou can choose to do it as Azure SQL or\n\n222\n00:10:08.810 --> 00:10:11.730\nyou can do what they call an IAAS SQL.\n\n223\n00:10:11.730 --> 00:10:13.370\nInfrastructure of Service SQL.\n\n224\n00:10:13.370 --> 00:10:17.640\nAnd that's where you spin up\na Windows Server Virtual Machine and\n\n225\n00:10:17.640 --> 00:10:20.120\nyou install SQL on it yourself.\n\n226\n00:10:20.120 --> 00:10:23.110\nAnd you do a bring-your-own license,\nBYOL, you'll\n\n227\n00:10:23.110 --> 00:10:26.270\nsee that in the Azure documentation,\nwhere you bring your own license.\n\n228\n00:10:26.270 --> 00:10:28.490\nYou put your own Sequel license in there,\nand\n\n229\n00:10:28.490 --> 00:10:30.100\nnow you're running your\nown copy of Sequel.\n\n230\n00:10:30.100 --> 00:10:31.020\nAnd when you do it that way,\n\n231\n00:10:31.020 --> 00:10:34.560\nyou have the full resources of that\nvirtual machine available to you.\n\n232\n00:10:34.560 --> 00:10:38.480\nYou can scale it up and scale it down, and\nyou can shut it down when it's not in use.\n\n233\n00:10:38.480 --> 00:10:41.020\nSo if I've got databases that\nare really infrequently used,\n\n234\n00:10:41.020 --> 00:10:46.250\nI might be better off spinning up my own\nvirtual machine and deploying it that way.\n\n235\n00:10:46.250 --> 00:10:46.810\nIt's not that hard.\n\n236\n00:10:46.810 --> 00:10:49.920\nI'll actually kinda show you that process\na little bit when we get into our\n\n237\n00:10:49.920 --> 00:10:51.960\nmigrating databases episode.\n\n238\n00:10:51.960 --> 00:10:54.760\nBut for now just know that that's always\nan option if you've got a super low\n\n239\n00:10:54.760 --> 00:10:56.080\nyield database.\n\n240\n00:10:56.080 --> 00:11:00.570\nBut if this is a database that needs\nto be up 24 hours a day, then going to\n\n241\n00:11:00.570 --> 00:11:03.460\nan Azure Virtual Machine isn't gonna\nsave you any effort either, right?\n\n242\n00:11:03.460 --> 00:11:06.610\nBecause you need that Azure Virtual\nMachine to be specced at a level to handle\n\n243\n00:11:06.610 --> 00:11:10.380\nthe traffic that's gonna come in, and\nso you're still paying for that, right?\n\n244\n00:11:10.380 --> 00:11:12.750\nAnd now you've got the added\noverhead of having to manage it.\n\n245\n00:11:12.750 --> 00:11:15.980\nI've gotta go and do Windows updates, and\nSQL updates, and all that other mess.\n\n246\n00:11:15.980 --> 00:11:18.060\nBecause I chose to manage\nthe server myself.\n\n247\n00:11:18.060 --> 00:11:21.200\nSo, what we can do in Azure SQL\n\n248\n00:11:21.200 --> 00:11:25.740\nis we can leverage a pool to kind of take\naway that burden for us and help to share.\n\n249\n00:11:25.740 --> 00:11:29.510\nNow, in my diagram here,\nI've got four servers that are all P2s and\n\n250\n00:11:29.510 --> 00:11:33.320\nthey've all got 250 DTUs.\n\n251\n00:11:33.320 --> 00:11:35.690\nI could create a pool and\n\n252\n00:11:35.690 --> 00:11:41.400\nwhen you create a pool,\nthe elastic pool has a performance tier.\n\n253\n00:11:41.400 --> 00:11:44.736\nAnd so I can set my elastic pool\nto have a performance tier of P2.\n\n254\n00:11:44.736 --> 00:11:46.360\nSo this is a P2 pool.\n\n255\n00:11:47.390 --> 00:11:49.820\nAnd when I create the P2 pool,\n\n256\n00:11:49.820 --> 00:11:55.710\nI can pick how many DTUs I want it to\nhave, and this is where things get fun.\n\n257\n00:11:55.710 --> 00:11:58.250\nI, you know fun depending\non what it is you find fun.\n\n258\n00:11:58.250 --> 00:12:00.110\nI find this stuff fun.\n\n259\n00:12:00.110 --> 00:12:02.981\nI could set it to 500 DTUs.\n\n260\n00:12:02.981 --> 00:12:04.940\nI could set it to 5000 DTUs.\n\n261\n00:12:04.940 --> 00:12:07.500\nI could set it to as many\nDTUs as I could pay for.\n\n262\n00:12:07.500 --> 00:12:09.290\nOkay, cuz you do have to pay for it.\n\n263\n00:12:09.290 --> 00:12:12.740\nThese are the DTUs that I'm\nactively paying for all the time.\n\n264\n00:12:12.740 --> 00:12:16.860\nSo if I have four servers\nthat are normally P2s.\n\n265\n00:12:16.860 --> 00:12:17.490\nRight?\n\n266\n00:12:17.490 --> 00:12:24.820\nAnd I put them into this elastic pool,\nand it's a P2 pool with 1000 DTUs.\n\n267\n00:12:24.820 --> 00:12:27.900\nWell, then basically they\nrun the same as normal.\n\n268\n00:12:27.900 --> 00:12:30.230\nThis is really no different than\nwhat I had on the last slide.\n\n269\n00:12:30.230 --> 00:12:30.840\nRight?\nSo\n\n270\n00:12:30.840 --> 00:12:34.400\nhaving them in a pool versus\nhaving them independent like this.\n\n271\n00:12:34.400 --> 00:12:36.430\nReally not any different.\n\n272\n00:12:36.430 --> 00:12:37.410\nOkay.\n\n273\n00:12:37.410 --> 00:12:40.870\nThe thing to remember is,\nwhen we start throwing into a pool,\n\n274\n00:12:40.870 --> 00:12:44.550\nthe performance tier is actually\ndetermined by the pool itself.\n\n275\n00:12:44.550 --> 00:12:49.320\nSo if the pool is a P2, these databases\nno longer have a performance here.\n\n276\n00:12:49.320 --> 00:12:50.970\nThese aren't P2s anymore.\n\n277\n00:12:50.970 --> 00:12:52.290\nThey're just databases.\n\n278\n00:12:52.290 --> 00:12:54.232\nSo this stuff, we kinda get rid of that.\n\n279\n00:12:54.232 --> 00:12:56.660\nThey're not P2s and\nthey don't have DTUs assigned to them.\n\n280\n00:12:58.480 --> 00:13:01.860\nBut, they take on\nthe characteristic of the pool.\n\n281\n00:13:01.860 --> 00:13:05.870\nSo if the pool is a P2 pool\nall of these guys are P2.\n\n282\n00:13:05.870 --> 00:13:09.280\nIf I upgrade the pool to a P3 all\nof these guys just became P3s.\n\n283\n00:13:09.280 --> 00:13:12.830\nSo they take on the performance\ntier of the pool.\n\n284\n00:13:12.830 --> 00:13:18.370\nNow, we still have the limitation\nof our performance tier.\n\n285\n00:13:18.370 --> 00:13:20.230\nThis is why we don't get\na performance benefit.\n\n286\n00:13:20.230 --> 00:13:23.760\nRemember, I said we can save money,\nbut we can't improve performance.\n\n287\n00:13:23.760 --> 00:13:28.360\nIf this is a P2 pool, and\nI've got 1000 DTUs assigned to it.\n\n288\n00:13:28.360 --> 00:13:30.830\nAnd server 2, 3, and 4 are idle.\n\n289\n00:13:30.830 --> 00:13:34.120\nServer 1 cannot spike to 1000 DTUs.\n\n290\n00:13:34.120 --> 00:13:38.680\nSQL01 here is still held\nto the limit of a P2 pool.\n\n291\n00:13:38.680 --> 00:13:40.060\nRight?\n\n292\n00:13:40.060 --> 00:13:44.900\nIt's still held to the limit of that P2\nperformance tier and it will get 250 DTUs.\n\n293\n00:13:44.900 --> 00:13:46.670\nThe other guys are idling.\n\n294\n00:13:46.670 --> 00:13:48.700\nI'm still paying for 1000 DTUs.\n\n295\n00:13:48.700 --> 00:13:49.210\nRight?\n\n296\n00:13:49.210 --> 00:13:53.420\nSo that's why I say this\nis no different than this.\n\n297\n00:13:53.420 --> 00:13:56.590\nRight?\nIf I have 4 servers in a P2 Pool and\n\n298\n00:13:56.590 --> 00:13:58.550\nthey've got 1000 DTUs on the Pool.\n\n299\n00:13:58.550 --> 00:14:01.790\nThat's absolutely no different than\nif I just did away with the Pool and\n\n300\n00:14:01.790 --> 00:14:03.250\nhad 4 P2 servers.\n\n301\n00:14:03.250 --> 00:14:07.640\nIn fact, this way would be better\nbecause if one server gets really busy.\n\n302\n00:14:07.640 --> 00:14:10.480\nI could spin one server up to a P3.\n\n303\n00:14:10.480 --> 00:14:12.820\nAnd not have to spin the others up, right?\n\n304\n00:14:12.820 --> 00:14:15.900\nVersus if I was in a pool,\nI'd get to spin em all up to P3s.\n\n305\n00:14:15.900 --> 00:14:18.960\nAnd that would make things more expensive.\n\n306\n00:14:18.960 --> 00:14:22.980\nSo the pool would actually\nhurt in this environment.\n\n307\n00:14:22.980 --> 00:14:26.490\nAnd that's what I mentioned earlier, is\na pool can actually do some bad things, so\n\n308\n00:14:26.490 --> 00:14:28.570\nthis would be an example of a bad pool.\n\n309\n00:14:28.570 --> 00:14:30.750\n>> Well Don, so far you're not selling\nme on this whole pool business.\n\n310\n00:14:30.750 --> 00:14:33.440\n[LAUGH]\n>> It's not sounding like a great thing.\n\n311\n00:14:33.440 --> 00:14:37.122\n>> Well you know I am a tech guy,\nI'm not a sales person so.\n\n312\n00:14:37.122 --> 00:14:39.770\n[LAUGH]\n>> The thing here is to remember that\n\n313\n00:14:39.770 --> 00:14:42.730\npools aren't bad,\nyou just have to know how to use them.\n\n314\n00:14:42.730 --> 00:14:46.890\nThe way a pool benefits you is\nwhen you over-subscribe the pool.\n\n315\n00:14:46.890 --> 00:14:49.670\nIn other words,\nwhen you add more databases,\n\n316\n00:14:49.670 --> 00:14:53.330\nmore DTUs into it,\nthan DTUs than you actually have.\n\n317\n00:14:53.330 --> 00:14:57.210\nAll right, so for example if I take\nthis same pool, this elastic pool,\n\n318\n00:14:57.210 --> 00:15:02.420\nit's a P2 pool with 1000 DTUs, what if\nI add a fifth database to it, right?\n\n319\n00:15:02.420 --> 00:15:04.850\nOr even a sixth database to it?\n\n320\n00:15:04.850 --> 00:15:10.750\nAs I start adding more and more databases\nto this pool, I've gone over my limit.\n\n321\n00:15:10.750 --> 00:15:12.920\nI had a 1000 DTUs.\n\n322\n00:15:12.920 --> 00:15:18.600\nBut now I've got six instances in here\nthat are all P2 instances, 250 DTUs each.\n\n323\n00:15:18.600 --> 00:15:22.170\nAnd if I were to add that up and\ndo my quick amazing mathematical skills,\n\n324\n00:15:22.170 --> 00:15:27.050\nwhich don't fail at all,\nthis adds up to 1,500 DTUs, right?\n\n325\n00:15:27.050 --> 00:15:32.120\nSo I've got 1,500 DTUs worth\nof database instances.\n\n326\n00:15:32.120 --> 00:15:35.250\nBut I've only got 1000 DTUs on the pull,\nright?\n\n327\n00:15:35.250 --> 00:15:37.220\nSo what does that mean?\n\n328\n00:15:37.220 --> 00:15:42.790\nWell, if all of these servers were to try\nto spike to 250 DTUs at the same time\n\n329\n00:15:42.790 --> 00:15:44.580\nthey wouldn't be able to, right?\n\n330\n00:15:44.580 --> 00:15:48.543\nI'm held to 1000 DTUs so\nall of these could spike to,\n\n331\n00:15:48.543 --> 00:15:53.166\noh this would be hard math,\nwhat is it, like, 175 or 100 and\n\n332\n00:15:53.166 --> 00:15:57.736\n66.66 DTUs or something crazy like that,\nsome crazy math.\n\n333\n00:15:57.736 --> 00:16:01.520\nBut they can all spike to a certain level,\nbut it would be within 1000 DTUs.\n\n334\n00:16:01.520 --> 00:16:07.894\nSo I've effectively created P2 servers\nThat aren't guaranteed 250 DTUs.\n\n335\n00:16:07.894 --> 00:16:12.989\n250 DTUs is a P2s maximum, but if the pool\ndoesn't have enough available DTUs,\n\n336\n00:16:12.989 --> 00:16:15.091\nthey just get what's available.\n\n337\n00:16:15.091 --> 00:16:18.910\nThey're now sharing the DTUs.\n\n338\n00:16:18.910 --> 00:16:21.880\nThat sounds bad, but here's the good side.\n\n339\n00:16:21.880 --> 00:16:23.920\nWhat if I have six databases?\n\n340\n00:16:23.920 --> 00:16:26.480\nAnd two of them, yeah,\nI know those two are used, every day.\n\n341\n00:16:26.480 --> 00:16:28.289\nThey're using their 250 DTUs.\n\n342\n00:16:28.289 --> 00:16:30.660\nThey're going to be hitting the limit.\n\n343\n00:16:30.660 --> 00:16:34.690\nBut these other four,\nthey idle most of the time.\n\n344\n00:16:34.690 --> 00:16:38.510\nYeah, I run some reports every now and\nthen, or I go and retrieve some data, but,\n\n345\n00:16:38.510 --> 00:16:43.340\nmaybe these are archives, or something\nthat I just don't go to very often.\n\n346\n00:16:43.340 --> 00:16:47.350\nAnd so because I don't go to it very often\nand they're just sitting there doing\n\n347\n00:16:47.350 --> 00:16:52.710\nnothing, I don't need to reserve\n250 DTUs from them all the time.\n\n348\n00:16:52.710 --> 00:16:53.960\nSo we can have it shared.\n\n349\n00:16:53.960 --> 00:16:58.870\nIf SQL01 and SQL02 are using their DTUs,\nthat's 500 DTUs that are gone.\n\n350\n00:16:58.870 --> 00:17:03.340\nThat leaves 500 more DTUs to be\nshared across these four instances.\n\n351\n00:17:03.340 --> 00:17:10.230\n500 DTUs which would cost me the price\nof two P2 instances, for four instances.\n\n352\n00:17:10.230 --> 00:17:13.080\nI just cut the price of\nthese databases in half.\n\n353\n00:17:13.080 --> 00:17:17.710\nNow, I'm not guaranteed 250 DTUs\nto be available at any given time.\n\n354\n00:17:17.710 --> 00:17:20.960\nBut if these are idling most of the time,\nif they're infrequently used or\n\n355\n00:17:20.960 --> 00:17:22.670\nthey're just not used at the same time,\n\n356\n00:17:23.750 --> 00:17:26.180\nthen they're going to have\ntheir DTUs available.\n\n357\n00:17:26.180 --> 00:17:29.988\nAnd that's how a pool saves us money and\nthat's how we can use it to start bringing\n\n358\n00:17:29.988 --> 00:17:32.845\ndown our costs so that we're not\nhaving to constantly pay for\n\n359\n00:17:32.845 --> 00:17:35.910\nDTUs on a database that may or\nmay not be using them.\n\n360\n00:17:35.910 --> 00:17:40.410\nAll right, so I've seen plenty of\nplaces implement this in great ways,\n\n361\n00:17:40.410 --> 00:17:42.070\nit doesn't have to be complex like this.\n\n362\n00:17:42.070 --> 00:17:47.290\nFor example maybe I've got\na primary database and\n\n363\n00:17:47.290 --> 00:17:49.270\nthen I keep an archive database.\n\n364\n00:17:49.270 --> 00:17:52.583\nSo maybe I have a database for\nmy sales receipts, and\n\n365\n00:17:52.583 --> 00:17:55.592\nso as I go through the course\nof a month or a year,\n\n366\n00:17:55.592 --> 00:18:00.700\nI've got all the sales receipt for\nevery order that's been placed.\n\n367\n00:18:00.700 --> 00:18:05.265\nBut at the end of the year I take that and\nI archive it and those become last year's\n\n368\n00:18:05.265 --> 00:18:08.750\nsales receipts and I have a new database\nfor this year's sales receipts, right?\n\n369\n00:18:08.750 --> 00:18:11.840\nSo I'm doing database rotation and\nstoring the data in there is usually for\n\n370\n00:18:11.840 --> 00:18:13.570\nbackup purposes right?\n\n371\n00:18:13.570 --> 00:18:17.480\nWell the archives, I very rarely go to.\n\n372\n00:18:17.480 --> 00:18:21.020\nMaybe one day I have a customer come\nin and they are just so angry and\n\n373\n00:18:21.020 --> 00:18:24.730\nI bought this three years ago and\nI'm mad as hell and I want my money back.\n\n374\n00:18:24.730 --> 00:18:28.790\nAnd you're like, well it was three years\nago, but I can query that old database.\n\n375\n00:18:28.790 --> 00:18:32.850\nI can find the values and reach out\nto that user and give him a refund or\n\n376\n00:18:32.850 --> 00:18:35.170\nwhatever it takes to him him out of there.\n\n377\n00:18:35.170 --> 00:18:37.500\nOr maybe the IRS comes\nknocking on the door.\n\n378\n00:18:37.500 --> 00:18:39.790\nHey, we need to audit\nyour tax information.\n\n379\n00:18:39.790 --> 00:18:42.820\nHow many sales did you actually\nhave in January two years ago?\n\n380\n00:18:42.820 --> 00:18:44.530\nAnd we can go and pull that data.\n\n381\n00:18:44.530 --> 00:18:47.430\nBut the majority of the time that database\nis sitting there doing absolutely nothing.\n\n382\n00:18:47.430 --> 00:18:48.920\nSo you might say, you know what?\n\n383\n00:18:48.920 --> 00:18:50.950\nI'm not gonna put that in Azure\ncuz I don't wanna pay for\n\n384\n00:18:50.950 --> 00:18:52.560\nit month after month after month.\n\n385\n00:18:52.560 --> 00:18:53.320\nRight?\n\n386\n00:18:53.320 --> 00:18:57.800\nWell, what you could do is\ndo something like this.\n\n387\n00:18:57.800 --> 00:18:59.190\nHere, I'll do a new diagram.\n\n388\n00:19:01.610 --> 00:19:02.910\nWe'll go crazy here.\n\n389\n00:19:02.910 --> 00:19:07.520\nSo, you could say I need a P2\ninstance from my database and\n\n390\n00:19:07.520 --> 00:19:13.350\nthis is going to be my main\nsource of sales receipts.\n\n391\n00:19:13.350 --> 00:19:15.700\nWe'll stick with that example.\n\n392\n00:19:15.700 --> 00:19:20.040\nSo, I've got my sales receipts going in to\nSQL01 but then I want to maintain the last\n\n393\n00:19:20.040 --> 00:19:25.390\nfive years of data so\nI've got SQL02, SQL03, 4, 5 and six.\n\n394\n00:19:25.390 --> 00:19:28.980\nSo these are the last five years of\ndata spread across these databases.\n\n395\n00:19:28.980 --> 00:19:32.150\nI could probably just achieve this with\ntables inside of the same database, but\n\n396\n00:19:32.150 --> 00:19:33.840\nlet's say we actually\nwanted to do databases.\n\n397\n00:19:33.840 --> 00:19:36.937\nRight.\nSo I've got these five databases here.\n\n398\n00:19:36.937 --> 00:19:42.822\nI could create a P2 pool, and\nI could give it 250 DTUs, okay.\n\n399\n00:19:42.822 --> 00:19:47.490\n250 DTUs, that's what a single\nP2 instance would get and\n\n400\n00:19:47.490 --> 00:19:54.538\nif these five databases are sitting there\ndoing nothing 99 percent of the time.\n\n401\n00:19:54.538 --> 00:19:57.300\nThis guy SQL01 could\ntake it's full 250 DTUs,\n\n402\n00:19:57.300 --> 00:20:02.030\nI'm paying for 250 DTUs,\nmy current sales receipts run just fine.\n\n403\n00:20:02.030 --> 00:20:03.040\nAll right.\n\n404\n00:20:03.040 --> 00:20:05.830\nThen, when I go and run a query\nagainst one of these other guys here,\n\n405\n00:20:05.830 --> 00:20:11.950\nwhich is pretty infrequent, but when I do,\nit'll just take away DTUs from SQL01.\n\n406\n00:20:11.950 --> 00:20:15.280\nRight?\nSQL01 has all 250 normally, but\n\n407\n00:20:15.280 --> 00:20:19.330\nthen when I start querying in SQL02,\nmaybe it takes 10 or 15 DTUs.\n\n408\n00:20:19.330 --> 00:20:21.855\nWhich only leaves 235 for SQL01.\n\n409\n00:20:22.920 --> 00:20:27.399\nBut I'm really only paying for\none database even though I have six.\n\n410\n00:20:27.399 --> 00:20:29.477\nThat really saves us money and opens up\nthe world to be able to use these things.\n\n411\n00:20:29.477 --> 00:20:35.038\nSo, that's what a eDTU pool is or\nan Azure SQL elastic pool.\n\n412\n00:20:35.038 --> 00:20:36.059\nYes, that's right.\n\n413\n00:20:36.059 --> 00:20:39.760\n>> [LAUGH]\n>> Azure SQL elastic pool, that's it.\n\n414\n00:20:39.760 --> 00:20:40.540\nThat's what they do.\n\n415\n00:20:40.540 --> 00:20:41.450\nThat's how they work.\n\n416\n00:20:41.450 --> 00:20:43.880\nAnd so I wanted to make sure you\nguys understood that concept\n\n417\n00:20:43.880 --> 00:20:45.260\nbefore I actually showed\nyou how to create them.\n\n418\n00:20:45.260 --> 00:20:47.310\nBecause otherwise people would\nthink it's a great way to get\n\n419\n00:20:47.310 --> 00:20:49.260\nincreased performance, or whatever.\n\n420\n00:20:49.260 --> 00:20:50.790\nAnd it absolutely is not.\n\n421\n00:20:50.790 --> 00:20:53.670\nPools do not help performance,\nthey hurt it.\n\n422\n00:20:53.670 --> 00:20:57.590\n>> Well Don, now that we understand what\na pool is and how we can use it to our\n\n423\n00:20:57.590 --> 00:21:02.110\nadvantage, that brings us to\nhow the heck do we make a pool?\n\n424\n00:21:02.110 --> 00:21:04.430\n>> All right,\nmaking a pool is really easy.\n\n425\n00:21:04.430 --> 00:21:05.770\nBasically we do it under our servers.\n\n426\n00:21:05.770 --> 00:21:07.560\nYou know, normally when you\ncreate a database instance,\n\n427\n00:21:07.560 --> 00:21:09.670\nit's attached to a server somewhere,\nright.\n\n428\n00:21:09.670 --> 00:21:13.480\nAnd when we create a pool, what you're\nreally doing is creating a fake server.\n\n429\n00:21:13.480 --> 00:21:15.800\nThat hosts all of these\ndatabase instances.\n\n430\n00:21:15.800 --> 00:21:18.000\nSo, we start by going\ninto our Azure portal and\n\n431\n00:21:18.000 --> 00:21:22.358\nI've got that pulled up right here and\nI'm gonna jump down to my SQL servers.\n\n432\n00:21:22.358 --> 00:21:23.850\nNot SQL databases.\n\n433\n00:21:23.850 --> 00:21:25.690\nThe databases will go in the pool, but\n\n434\n00:21:25.690 --> 00:21:28.650\nthe servers are where I need\nto go to get this created and\n\n435\n00:21:28.650 --> 00:21:32.930\nwhen I go in here I need to pick my\nSQL server that I've got specified.\n\n436\n00:21:32.930 --> 00:21:35.760\nNow remember,\nthis server is kind of a magic server.\n\n437\n00:21:35.760 --> 00:21:38.910\nBecause when you spin up a database,\nMicrosoft will create a server for you.\n\n438\n00:21:38.910 --> 00:21:40.950\nAnd you can create more\nthan one if you want.\n\n439\n00:21:40.950 --> 00:21:43.300\nBut Microsoft is fully\nmanaging this server.\n\n440\n00:21:43.300 --> 00:21:46.610\nThey're managing the operating system,\nthe upgrades that are happening on it.\n\n441\n00:21:46.610 --> 00:21:48.630\nThey're also managing\nthe performance here.\n\n442\n00:21:48.630 --> 00:21:49.580\nHow much RAM it has.\n\n443\n00:21:49.580 --> 00:21:51.130\nHow much CPU it has, right?\n\n444\n00:21:51.130 --> 00:21:53.400\nWhat tier of virtual machine is it?\n\n445\n00:21:53.400 --> 00:21:56.970\nIs it a D1 or a DS11 or whatever.\n\n446\n00:21:56.970 --> 00:21:58.780\nThey're taking care of that.\n\n447\n00:21:58.780 --> 00:21:59.780\nWe don't even see it.\n\n448\n00:21:59.780 --> 00:22:02.090\nIn fact, I'm not even sure that\nyou can figure out what it is.\n\n449\n00:22:02.090 --> 00:22:04.220\nIt's all really hidden from you.\n\n450\n00:22:04.220 --> 00:22:12.130\nBut, I can go into that server and in the\nserver I can choose to create a new pool.\n\n451\n00:22:12.130 --> 00:22:16.220\nAnd so when we go into the server, here's\nthe server details showing up right here.\n\n452\n00:22:16.220 --> 00:22:18.340\nAnd so\nI see that it's a version 12 server.\n\n453\n00:22:18.340 --> 00:22:21.700\nIn looking at this,\nI don't see it's performance tier.\n\n454\n00:22:21.700 --> 00:22:23.060\nI don't see any of that stuff.\n\n455\n00:22:23.060 --> 00:22:26.270\nBut I can go up here and add a pool.\n\n456\n00:22:26.270 --> 00:22:27.590\nSo I'm gonna choose to add a pool.\n\n457\n00:22:28.790 --> 00:22:29.660\nAnd when I add a pool,\n\n458\n00:22:29.660 --> 00:22:32.900\nover here it's gonna start that\nelastic database pool wizard.\n\n459\n00:22:32.900 --> 00:22:37.470\nAnd even if you look in here, they're\ncalling it an elastic database pool.\n\n460\n00:22:37.470 --> 00:22:42.030\nAnd if we look at the whoops, there we go.\n\n461\n00:22:42.030 --> 00:22:44.320\nIf we look at kind of how they're\ndescribing it they'll tell us here that\n\n462\n00:22:44.320 --> 00:22:48.040\nan elastic database pool provides\nelastic database throughput units or\n\n463\n00:22:48.040 --> 00:22:52.190\neDTUs and storage gigabytes that\nare shared by multiple databases.\n\n464\n00:22:52.190 --> 00:22:54.820\nThey're allowing you to share DTUs.\n\n465\n00:22:54.820 --> 00:22:56.930\nAnd so we can give it a pool name and so\n\n466\n00:22:56.930 --> 00:23:01.020\nmaybe I'm going to create one\nthat's going to be my orders.\n\n467\n00:23:01.020 --> 00:23:04.140\nI'm going to have my orders database\nstuck in here so I'll give it a name of\n\n468\n00:23:05.240 --> 00:23:09.380\nOrders or sales or whatever you want to\ncall it and then you set a pricing tier.\n\n469\n00:23:09.380 --> 00:23:13.490\nYou set the pricing tier on the pool,\nand that's different, right?\n\n470\n00:23:13.490 --> 00:23:16.390\nBecause all the databases you stick in\nhere are gonna be the same pricing tier\n\n471\n00:23:16.390 --> 00:23:19.220\ncuz they're sharing DTUs, so\nthey've gotta be the same.\n\n472\n00:23:19.220 --> 00:23:20.940\nThat's why the pool kind of enforces that.\n\n473\n00:23:20.940 --> 00:23:24.230\n>> Kind of makes it a little bit easier\nto spin databases as well, right?\n\n474\n00:23:24.230 --> 00:23:27.330\nI don't have to go through every one and\npick my performance tier and\n\n475\n00:23:27.330 --> 00:23:30.400\njust start a new one in the pool and\nit knows exactly what it means.\n\n476\n00:23:30.400 --> 00:23:31.850\n>> Yeah, absolutely.\n\n477\n00:23:31.850 --> 00:23:32.540\nSo when I go to create it,\n\n478\n00:23:32.540 --> 00:23:36.180\nyou'll see I've got a Basic, a Standard,\nand a Premium Pool that I can pick from.\n\n479\n00:23:36.180 --> 00:23:38.220\nAnd I'm just gonna go with\na Standard Pool here.\n\n480\n00:23:38.220 --> 00:23:39.860\nAnd when I look at the Standard Pool,\n\n481\n00:23:39.860 --> 00:23:45.250\nit's telling me that this pool can\ncontain from 100 to 1200 eDTUs.\n\n482\n00:23:45.250 --> 00:23:48.920\nOr, I could do a Premium Pool where\nI could do 125 to 1500 eDTUs or\n\n483\n00:23:48.920 --> 00:23:51.160\nyou got the Basic Pool\nwhich is 100 to 1200.\n\n484\n00:23:51.160 --> 00:23:55.357\nAnd if you look at the options in here it\nwill tell you the amount of storage that\n\n485\n00:23:55.357 --> 00:23:57.696\nyou get and it goes up for\neach one, right?\n\n486\n00:23:57.696 --> 00:24:02.593\nAnd you also see the amount of databases\nas well as the amount of DTUs and\n\n487\n00:24:02.593 --> 00:24:05.752\nnotice that the numbers\ndon't always go up.\n\n488\n00:24:05.752 --> 00:24:09.758\nFor example I've got 117 gigs\nmaximum storage for a basic pool.\n\n489\n00:24:09.758 --> 00:24:13.739\n1,200 or 1.2 terabytes for\na standard pool.\n\n490\n00:24:13.739 --> 00:24:16.183\nAnd then only 750 gigs for a premium.\n\n491\n00:24:16.183 --> 00:24:18.785\nWhy did the premium come down?\n\n492\n00:24:18.785 --> 00:24:20.500\nBecause it's faster storage.\n\n493\n00:24:20.500 --> 00:24:22.460\nIt's better storage, it's more expensive.\n\n494\n00:24:22.460 --> 00:24:26.050\nAnd so the size comes down on\nthe premiums from a standard.\n\n495\n00:24:26.050 --> 00:24:29.240\nSame thing goes for some of the other\nthings like the amount of databases.\n\n496\n00:24:29.240 --> 00:24:33.520\nI can have 200 databases in the standard,\nbut only 50 in a premium.\n\n497\n00:24:33.520 --> 00:24:40.524\nAnd the eDTUs, you'll see up to 100\neDTUs per database ni a standard pool.\n\n498\n00:24:40.524 --> 00:24:45.627\nSo if I'm trying to create P2s, or\nP2 performance, 2052 eDTUs each.\n\n499\n00:24:45.627 --> 00:24:47.066\nWell a standard pool won't do it.\n\n500\n00:24:47.066 --> 00:24:51.623\nI'm gonna have to step up to a premium\nwhere you can have up to 1,000 eDTUs per\n\n501\n00:24:51.623 --> 00:24:53.060\ndatabase, right?\n\n502\n00:24:53.060 --> 00:24:55.190\nSo I've gotta pick what\nthat's going to be.\n\n503\n00:24:55.190 --> 00:24:58.740\nAnd then you've got that\ntotal storage per database.\n\n504\n00:24:58.740 --> 00:25:01.830\nAnd then they're all Pay per Pool eDTU.\n\n505\n00:25:01.830 --> 00:25:04.710\nYou're no longer paying for\nDTUs based on each instance.\n\n506\n00:25:04.710 --> 00:25:07.130\nYou're paying for it on the pool.\n\n507\n00:25:07.130 --> 00:25:08.870\nAll right, I'll create a standard one.\n\n508\n00:25:10.130 --> 00:25:11.810\nCuz I don't wanna go\nbroke during the show.\n\n509\n00:25:11.810 --> 00:25:13.640\nAnd [LAUGH] so I'll whip that one up.\n\n510\n00:25:13.640 --> 00:25:15.790\nAnd when we create the pool.\n\n511\n00:25:15.790 --> 00:25:16.850\nThat's really all it needed.\n\n512\n00:25:16.850 --> 00:25:19.850\nIt didn't really need much else\nunless I put something in wrong.\n\n513\n00:25:19.850 --> 00:25:20.820\nLet's see.\n\n514\n00:25:20.820 --> 00:25:21.370\nHere we go.\n\n515\n00:25:21.370 --> 00:25:23.260\nOh, there is actually one more thing.\n\n516\n00:25:23.260 --> 00:25:23.970\nWe don't have to put it.\n\n517\n00:25:23.970 --> 00:25:25.310\nI could go ahead and just submit it.\n\n518\n00:25:25.310 --> 00:25:28.410\nBut you'll see it's asking for\nme to add databases.\n\n519\n00:25:28.410 --> 00:25:32.350\nSo I probably wanna have a database\nin this thing if I'm gonna use it.\n\n520\n00:25:32.350 --> 00:25:34.280\nAnd so, I can come in here and add it.\n\n521\n00:25:34.280 --> 00:25:36.620\nAnd when I start adding other\ndatabases in the future.\n\n522\n00:25:36.620 --> 00:25:39.160\nI can always add them\ninto the pool later on.\n\n523\n00:25:39.160 --> 00:25:42.561\nBut if I've got existing databases,\nhere's a chance for me to migrate it over.\n\n524\n00:25:42.561 --> 00:25:46.233\nSo here's that SampleDB1 that we\ncreated earlier in the series.\n\n525\n00:25:46.233 --> 00:25:49.430\nAnd so I can choose that and\nbring it into the pool.\n\n526\n00:25:49.430 --> 00:25:50.960\nThis is my one chance to do that.\n\n527\n00:25:50.960 --> 00:25:54.530\nOnce this is done, if I want to move\nan existing database into the pool.\n\n528\n00:25:54.530 --> 00:25:55.480\nIt's Power Shell city.\n\n529\n00:25:55.480 --> 00:25:56.630\nIt's really kind of hard.\n\n530\n00:25:56.630 --> 00:25:58.907\nSo from the UI,\nhere's our change to move it in.\n\n531\n00:25:58.907 --> 00:26:02.703\nAfter this,\nany time I create a new database.\n\n532\n00:26:02.703 --> 00:26:06.850\nI'll have the option to put it into the\npool, and I can add them in that way, too.\n\n533\n00:26:06.850 --> 00:26:09.130\nSo, I'm gonna choose\nto add sample DB 1 in.\n\n534\n00:26:10.500 --> 00:26:11.520\nAnd so we're gonna pop that one in.\n\n535\n00:26:11.520 --> 00:26:14.529\nAnd then the only other thing that\nI've really got right here is this,\n\n536\n00:26:14.529 --> 00:26:16.510\nconfigure performance.\n\n537\n00:26:16.510 --> 00:26:17.890\nWhen I choose Configure performance,\n\n538\n00:26:17.890 --> 00:26:21.340\nyou can set a few values on\nthe pool that are pretty important.\n\n539\n00:26:21.340 --> 00:26:24.450\nLike what the minimum and\nmaximum DTUs are gonna be.\n\n540\n00:26:24.450 --> 00:26:26.870\nAnd so if you look here,\nI created a standard.\n\n541\n00:26:26.870 --> 00:26:28.390\nAnd in the standard pool down here,\n\n542\n00:26:28.390 --> 00:26:33.080\nI can choose how many DTUs\nthis pool is going to have.\n\n543\n00:26:33.080 --> 00:26:35.290\nSo do I want it to have just 100 eDTUs?\n\n544\n00:26:35.290 --> 00:26:37.820\nDo I want it to have 1,200 eDTUs?\n\n545\n00:26:37.820 --> 00:26:39.410\nI can pick what's gonna be available.\n\n546\n00:26:39.410 --> 00:26:42.590\nI need to think about how many databases\nI'm gonna be sticking in here.\n\n547\n00:26:42.590 --> 00:26:46.820\nWell, when I made sampledb1, I kinda\nforgot what tier that I chose for it.\n\n548\n00:26:46.820 --> 00:26:50.640\nSo let's just assume that I picked\nsome kinda lower end tier and\n\n549\n00:26:50.640 --> 00:26:52.820\nmaybe had 150 eDTUs.\n\n550\n00:26:52.820 --> 00:26:54.850\nI might choose a 100 EDTU pool.\n\n551\n00:26:54.850 --> 00:26:57.180\nThat's gonna degrade its performance.\n\n552\n00:26:57.180 --> 00:27:00.910\nSo, I want to make sure that I pick\nenough EDTUs here to be able to support\n\n553\n00:27:00.910 --> 00:27:03.159\nthe existing servers for their purposes.\n\n554\n00:27:03.159 --> 00:27:04.947\nSo, I'll pick the appropriate amount.\n\n555\n00:27:04.947 --> 00:27:11.560\nAnd it's showing up here, the pool EDTUs\nas well as the GB of storage for the pool.\n\n556\n00:27:11.560 --> 00:27:12.860\nAnd it's showing it to me now,\n\n557\n00:27:12.860 --> 00:27:16.170\nwhich really doesn't matter\nbecause the pool's empty.\n\n558\n00:27:16.170 --> 00:27:18.150\nBut later on when you're\nmonitoring the pool,\n\n559\n00:27:18.150 --> 00:27:20.890\nyou'll want to see how much\nof the EDQs have I eaten up.\n\n560\n00:27:20.890 --> 00:27:24.630\nHow much of the storage have I eaten\nup and figure things from there.\n\n561\n00:27:24.630 --> 00:27:26.965\nSo I'll run with 100.\n\n562\n00:27:26.965 --> 00:27:31.105\n>> That really does not pay to have only\none database inside of one of these pools.\n\n563\n00:27:31.105 --> 00:27:32.305\n>> No, no, not at all.\n\n564\n00:27:32.305 --> 00:27:36.225\n>> If you use that one database in there,\nthen you're doing it wrong, right?\n\n565\n00:27:36.225 --> 00:27:38.805\nWe'll use the Apple argument there,\nyou're holding the database wrong.\n\n566\n00:27:38.805 --> 00:27:42.049\nSo yeah, it's just not how\nit's intended to be done.\n\n567\n00:27:42.049 --> 00:27:43.953\nAlright, it's giving me\nmy cost estimate here.\n\n568\n00:27:43.953 --> 00:27:47.700\nAnd you'll see I'm at $224 a month for\nthis pool with 100 DTUs,\n\n569\n00:27:47.700 --> 00:27:51.453\nwhich there's a performance tier\nI can pick that's $224 a month.\n\n570\n00:27:51.453 --> 00:27:52.404\nThat gives me 100 DTUs.\n\n571\n00:27:52.404 --> 00:27:54.216\nSo we wouldn't need the pool.\n\n572\n00:27:54.216 --> 00:27:56.073\nBut, I'll go ahead and add that one in.\n\n573\n00:27:56.073 --> 00:28:00.549\nAnd now it's gonna move that\nother database into the pool and\n\n574\n00:28:00.549 --> 00:28:02.490\nI'll have my first pool.\n\n575\n00:28:02.490 --> 00:28:05.480\nAnd it's gonna have a database in\nthere ready to share those DTUs.\n\n576\n00:28:05.480 --> 00:28:06.870\nSo, it was pretty easy to create that.\n\n577\n00:28:06.870 --> 00:28:09.510\nThe hardest part for\nme is remembering to go to the server and\n\n578\n00:28:09.510 --> 00:28:10.330\nnot to the database, right?\n\n579\n00:28:10.330 --> 00:28:11.496\nYou go to the server menu and\n\n580\n00:28:11.496 --> 00:28:14.404\nin there you'll be able to add\nthe pool when you select your server.\n\n581\n00:28:14.404 --> 00:28:19.513\nNow, if I create a new database,\nwhen I'm running that new database wizard.\n\n582\n00:28:19.513 --> 00:28:21.060\nYou'll have the pool option there.\n\n583\n00:28:21.060 --> 00:28:24.130\nAnd you can specify to drop it\nin the pool, and you'll see it.\n\n584\n00:28:24.130 --> 00:28:25.020\nNow, I created it.\n\n585\n00:28:25.020 --> 00:28:26.090\nMine's still provisioning here.\n\n586\n00:28:26.090 --> 00:28:29.230\nBut when it's done provisioning, we'll\nbe able to click on it and see the pool.\n\n587\n00:28:29.230 --> 00:28:31.840\nAnd you have the option to\nmanipulate the pool from there.\n\n588\n00:28:31.840 --> 00:28:35.660\nIf I need more DTUs, I can edit it,\nincrease that threshold.\n\n589\n00:28:35.660 --> 00:28:39.385\nIf I need to change the performance\ntier from standard to premium, or\n\n590\n00:28:39.385 --> 00:28:40.744\neven back down to basic.\n\n591\n00:28:40.744 --> 00:28:43.071\nI can go in and\nI can modify the pole there and change it.\n\n592\n00:28:43.071 --> 00:28:45.748\nBut all of those options are right\nthere to go in and modify and\n\n593\n00:28:45.748 --> 00:28:47.174\nreally take advantage of that.\n\n594\n00:28:47.174 --> 00:28:50.689\nBut that's basically what a pool is.\n\n595\n00:28:50.689 --> 00:28:52.490\nAnd just remember there, the key,\n\n596\n00:28:52.490 --> 00:28:55.670\nif you remember nothing else\nfrom this whole episode.\n\n597\n00:28:55.670 --> 00:29:02.380\nJust remember that the Azure SQL elastic\npools do not improve performance.\n\n598\n00:29:02.380 --> 00:29:04.280\nIt's not what they do, all right?\n\n599\n00:29:04.280 --> 00:29:05.940\nThey optimize cost.\n\n600\n00:29:05.940 --> 00:29:08.530\nThey make sure that you're not paying for\nDTUs you're not using.\n\n601\n00:29:08.530 --> 00:29:10.830\nSo it's really all about\nreducing your bill.\n\n602\n00:29:10.830 --> 00:29:12.900\nIf you don't care about your bill.\n\n603\n00:29:12.900 --> 00:29:17.020\nThen actually buying individual instances\nis a great way to guarantee they will\n\n604\n00:29:17.020 --> 00:29:19.179\nalways have the maximum DTUs available.\n\n605\n00:29:19.179 --> 00:29:21.020\nAnd there's pros and\ncons with that, right?\n\n606\n00:29:21.020 --> 00:29:23.260\nIf performance is your number one concern.\n\n607\n00:29:23.260 --> 00:29:25.780\nDon't use pools,\nit's just gonna get in the way.\n\n608\n00:29:25.780 --> 00:29:29.970\nBut if you're trying to find a healthy\nbalance between performance and cost.\n\n609\n00:29:29.970 --> 00:29:31.260\nThat's where the pools can really help.\n\n610\n00:29:31.260 --> 00:29:32.370\nThat's where they make a difference.\n\n611\n00:29:32.370 --> 00:29:36.380\n>> Awesome.\nAnd this isn't creating one big database.\n\n612\n00:29:36.380 --> 00:29:39.730\nAnd when we connect to databases\nwith our management software.\n\n613\n00:29:39.730 --> 00:29:43.340\nWe still connect to database one, and\ndatabase two, and database three.\n\n614\n00:29:43.340 --> 00:29:46.660\nIt's not pool one,\nwith a bunch of databases in it.\n\n615\n00:29:46.660 --> 00:29:47.560\n>> Absolutely, absolutely, yeah.\n\n616\n00:29:47.560 --> 00:29:49.750\nAnd when you start to work with these.\n\n617\n00:29:49.750 --> 00:29:52.110\nYou work with a pool database,\nit's just like a regular database.\n\n618\n00:29:52.110 --> 00:29:52.829\nThey show up the same.\n\n619\n00:29:52.829 --> 00:29:56.210\nIn fact, they are regular databases,\nthey're just sharing some resources.\n\n620\n00:29:56.210 --> 00:29:58.780\nSo the only thing that you might,\nor even an end user,\n\n621\n00:29:58.780 --> 00:30:00.580\nthe only thing that\nan end user would notice.\n\n622\n00:30:00.580 --> 00:30:02.900\nIs that occasionally,\nthe server might run a little slow.\n\n623\n00:30:02.900 --> 00:30:05.550\nIf it's trying to get DTUs\nthat aren't available to it.\n\n624\n00:30:05.550 --> 00:30:08.200\nBut if you've got this specced right,\nif you've got it sized properly.\n\n625\n00:30:08.200 --> 00:30:09.510\nThat shouldn't happen.\n\n626\n00:30:09.510 --> 00:30:13.040\nAnd an end user would have absolutely no\nway of knowing they were using a pooled\n\n627\n00:30:13.040 --> 00:30:14.220\ndatabase versus a regular one.\n\n628\n00:30:14.220 --> 00:30:15.560\nIt's completely transparent.\n\n629\n00:30:15.560 --> 00:30:16.190\n>> Excellent.\n\n630\n00:30:16.190 --> 00:30:19.958\nWell, Don, is there anything else we need\nto know about these elastic pools in\n\n631\n00:30:19.958 --> 00:30:21.571\nAzure SQL before we call it a day?\n\n632\n00:30:21.571 --> 00:30:24.977\n>> As with any Microsoft technology, there\nis more to the pools that you can get in\n\n633\n00:30:24.977 --> 00:30:26.693\nand really do some interesting stuff.\n\n634\n00:30:26.693 --> 00:30:28.640\nEspecially when you go to PowerShell land,\nright.\n\n635\n00:30:28.640 --> 00:30:30.760\nThere's some advanced\nconfigurations you can do.\n\n636\n00:30:30.760 --> 00:30:33.960\nBut for the most part it is still\nan evolving technology from Microsoft.\n\n637\n00:30:33.960 --> 00:30:35.330\nSo they're adding new features to it.\n\n638\n00:30:35.330 --> 00:30:36.020\nAnd who knows?\n\n639\n00:30:36.020 --> 00:30:39.100\nMaybe this time next year they might offer\nsome features to improve performance.\n\n640\n00:30:39.100 --> 00:30:40.314\nBut as it stands now,\n\n641\n00:30:40.314 --> 00:30:44.790\ngreat cost-saving technique that you\ncan use not configured by default.\n\n642\n00:30:44.790 --> 00:30:45.870\nRight.\nWe've got to go in and\n\n643\n00:30:45.870 --> 00:30:49.520\nchoose to create this and put it in\nplace otherwise all of our databases\n\n644\n00:30:49.520 --> 00:30:52.720\nget dedicated DTUs and\nThere is certainly an argument for that.\n\n645\n00:30:52.720 --> 00:30:53.700\nThat may be a good thing.\n\n646\n00:30:53.700 --> 00:30:54.470\n>> Awesome.\nWell Don,\n\n647\n00:30:54.470 --> 00:30:58.140\nI know you definitely empowered\nus as Azure SQL users\n\n648\n00:30:58.140 --> 00:31:01.320\nto be able to better take advantages\nof the services that they provide.\n\n649\n00:31:01.320 --> 00:31:02.340\nWe thank you for that.\n\n650\n00:31:02.340 --> 00:31:04.655\nWe thank you guys for\nwatching the episode today.\n\n651\n00:31:04.655 --> 00:31:07.302\nBut we're gonna go ahead and\nsign off for ITProTV.\n\n652\n00:31:07.302 --> 00:31:09.170\nI've been your host Daniel Lowry.\n\n653\n00:31:09.170 --> 00:31:10.050\n>> And I'm Don Pezet.\n\n654\n00:31:10.050 --> 00:31:11.894\n>> And we'll see you next time.\n\n655\n00:31:11.894 --> 00:31:18.360\n[SOUND]\n\n",
          "vimeoId": "148882591"
        },
        {
          "description": "In this episode, Daniel and Don walk you through a few different ways in which you can migrate your on-premise database into Azure SQL. They start by showing you how to perform a scripted import using T-SQL from within Visual Studio. Then they demonstrate a migration using the SQL Management Studio Azure Deployment Wizard. Finally they perform a migration using BACPACs and monitor the progress of the migration.",
          "length": "2262",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-azuresql/techskills-azuresql-2-1-migrating_databases_to_azure-120915-1.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-azuresql/techskills-azuresql-2-1-migrating_databases_to_azure-120915-1-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-azuresql/techskills-azuresql-2-1-migrating_databases_to_azure-120915-1-sm.jpg",
          "title": "Migrating Databases to Azure",
          "transcript": "WEBVTT\n\n1\n00:00:00.292 --> 00:00:10.292\n[MUSIC]\n\n2\n00:00:12.254 --> 00:00:13.647\nAll right, greetings, everyone.\n\n3\n00:00:13.647 --> 00:00:16.870\nAnd welcome to another\ngreat episode of ITProTV.\n\n4\n00:00:16.870 --> 00:00:18.430\nI'm your host, Daniel Lowrie.\n\n5\n00:00:18.430 --> 00:00:22.590\nAnd in today's episode, we're gonna\ncontinue on with some Microsoft Azure SQL.\n\n6\n00:00:22.590 --> 00:00:26.080\nAnd joining me again today, is none other\nthan my good friend, Mr. Don Pezet.\n\n7\n00:00:26.080 --> 00:00:26.805\nDon, welcome to the show.\n\n8\n00:00:26.805 --> 00:00:27.803\nHow are you doing today sir?\n\n9\n00:00:27.803 --> 00:00:28.940\n>> I'm doing great Daniel.\n\n10\n00:00:28.940 --> 00:00:30.070\nGlad to be back on the show.\n\n11\n00:00:30.070 --> 00:00:32.660\nAnd in this episode we're\ngonna take a look at\n\n12\n00:00:32.660 --> 00:00:37.410\nmigrating our on-premises\ndatabases into SQL Azure.\n\n13\n00:00:37.410 --> 00:00:40.340\nAnd I know I think it was\nepisode number two where\n\n14\n00:00:40.340 --> 00:00:42.680\nwe talked about creating\nyour first database.\n\n15\n00:00:42.680 --> 00:00:45.786\nAnd I highlighted some of the different\nways that we can get databases in there.\n\n16\n00:00:45.786 --> 00:00:48.140\nBut we didn't actually do that, did we?\n\n17\n00:00:48.140 --> 00:00:49.360\nWe just whipped up a database and\n\n18\n00:00:49.360 --> 00:00:51.930\nthrew it into Azure because\nthat was our first database.\n\n19\n00:00:51.930 --> 00:00:53.838\nBut as you work with Azure SQL more and\nmore,\n\n20\n00:00:53.838 --> 00:00:57.656\nwhat you're gonna find is that you've got\non-premises databases that would be really\n\n21\n00:00:57.656 --> 00:00:59.422\nsuited to being stuck up there in Azure.\n\n22\n00:00:59.422 --> 00:01:01.746\nGet them moved off so you don't\nhave to support them anymore, and\n\n23\n00:01:01.746 --> 00:01:02.894\nthey can get up in there and run.\n\n24\n00:01:02.894 --> 00:01:06.440\nAnd you can get all the advantages of\nhaving a cloud service host your database.\n\n25\n00:01:06.440 --> 00:01:08.480\nSo I'm gonna show you some of the methods,\nand\n\n26\n00:01:08.480 --> 00:01:13.200\nkind of the Microsoft recommended way of\ngetting your databases into Azure SQL.\n\n27\n00:01:13.200 --> 00:01:13.920\nThat's our plan.\n\n28\n00:01:13.920 --> 00:01:15.320\n>> Well that sounds like a good plan, Don.\n\n29\n00:01:15.320 --> 00:01:17.440\nI say we go ahead and\njust jump right in this thing.\n\n30\n00:01:17.440 --> 00:01:20.472\nWhat's the first method that you're gonna\nshow us in getting a migration going?\n\n31\n00:01:20.472 --> 00:01:22.610\n>> All right,\nwell when you migrate your data,\n\n32\n00:01:22.610 --> 00:01:25.630\nyou kind of have to decide what\nyou want to send along, right?\n\n33\n00:01:25.630 --> 00:01:28.520\nAnd maybe you're working in a test\nenvironment or staging environment and\n\n34\n00:01:28.520 --> 00:01:33.200\nyou've built up a database, and you're\nready to move that into production, right?\n\n35\n00:01:33.200 --> 00:01:36.720\nWell if you just want the database\ndefinition itself and\n\n36\n00:01:36.720 --> 00:01:39.920\nnot the true data that's inside of it,\nyou can just do\n\n37\n00:01:39.920 --> 00:01:44.310\na scripted import of that database, right,\nand the information that's in there.\n\n38\n00:01:44.310 --> 00:01:50.320\nSo what I mean is when I build a database,\nit's got tables, views, user accounts.\n\n39\n00:01:50.320 --> 00:01:52.534\nIt's got indexes, stored procedures,\n\n40\n00:01:52.534 --> 00:01:56.152\nall these different things we\ncreate inside of a database, right?\n\n41\n00:01:56.152 --> 00:01:59.728\nAnd then if I take a table,\ninside of the table there's row data,\n\n42\n00:01:59.728 --> 00:02:01.690\nall the data you populate in there.\n\n43\n00:02:01.690 --> 00:02:04.930\nSo if I have a table of employees,\nthere'll be a row for Don Pezet.\n\n44\n00:02:04.930 --> 00:02:06.558\nIt'll have my name, phone number,\n\n45\n00:02:06.558 --> 00:02:10.910\nwhatever other information is the company\nstores on me, that would be in the table.\n\n46\n00:02:10.910 --> 00:02:16.050\nWell, when we do a scripted export of\na database and we bring it into Azure SQL,\n\n47\n00:02:16.050 --> 00:02:19.720\nit'll contain the tables,\nthe views, the indexes,\n\n48\n00:02:19.720 --> 00:02:25.020\nwhatever it is we choose,\nexcept for the row data.\n\n49\n00:02:25.020 --> 00:02:27.820\nSo basically the database\nwill have all the framework,\n\n50\n00:02:27.820 --> 00:02:30.860\nthe infrastructure, but\nthe infrastructure will be empty, right.\n\n51\n00:02:30.860 --> 00:02:33.512\nThat's useful if you've been\nworking with test data.\n\n52\n00:02:33.512 --> 00:02:34.779\nAnd once you move it into production,\n\n53\n00:02:34.779 --> 00:02:36.890\nit's going to start getting\npopulated with production data.\n\n54\n00:02:36.890 --> 00:02:38.779\nThat's useful, and\nit's a very common practice.\n\n55\n00:02:38.779 --> 00:02:40.435\nAnd so\nI want to show you this method first, and\n\n56\n00:02:40.435 --> 00:02:44.300\nthen we'll move on to some other methods\nthat actually do grab all your data too.\n\n57\n00:02:44.300 --> 00:02:48.740\nNow to do a scripted creation, right, what\nwe need to do are a few different things.\n\n58\n00:02:48.740 --> 00:02:51.512\nFirst off we need to get into our\nSQL Management Studio cuz we've gotta take\n\n59\n00:02:51.512 --> 00:02:52.745\na look at our existing database.\n\n60\n00:02:52.745 --> 00:02:54.207\nAnd so that's what I've got down here.\n\n61\n00:02:54.207 --> 00:02:57.586\nWe saw in our Connecting Our Client\nepisode how to get connected with\n\n62\n00:02:57.586 --> 00:02:59.390\nSQL Management Studio.\n\n63\n00:02:59.390 --> 00:03:03.409\nAnd looking down here you can see I'm\nconnected to CLIENT01, that's my laptop.\n\n64\n00:03:03.409 --> 00:03:05.603\nAnd I'm really creative\nwhen it comes to names.\n\n65\n00:03:05.603 --> 00:03:06.248\n>> [LAUGH]\n>> So\n\n66\n00:03:06.248 --> 00:03:09.115\non CLIENT01 I got a couple\nof databases including this\n\n67\n00:03:09.115 --> 00:03:11.071\nAdventureWorks2014 database.\n\n68\n00:03:11.071 --> 00:03:13.103\nThat's Microsoft's sample database.\n\n69\n00:03:13.103 --> 00:03:17.155\nAnd if I expand that out, you'll see\nwhere I've got tables and views and\n\n70\n00:03:17.155 --> 00:03:19.520\nother things kind of buried away in here.\n\n71\n00:03:19.520 --> 00:03:21.570\nAnd if I expand out something like Tables,\n\n72\n00:03:21.570 --> 00:03:23.890\nthere's actually quite a few\ntables in here, right?\n\n73\n00:03:23.890 --> 00:03:28.220\nAnd each one has a table definition with\ncolumns and other values assigned to it.\n\n74\n00:03:28.220 --> 00:03:29.870\nThey're all buried away in there.\n\n75\n00:03:29.870 --> 00:03:33.593\nAnd if I wanna recreate this\ndatabase up in the cloud,\n\n76\n00:03:33.593 --> 00:03:37.169\nwhat I can do is I can\nright-click on the database.\n\n77\n00:03:37.169 --> 00:03:42.138\nAnd in the SQL Management Studio,\nyou can go to Tasks > Generate Scripts.\n\n78\n00:03:42.138 --> 00:03:45.663\nAnd what it will do is create\na series of transact SQL scripts\n\n79\n00:03:45.663 --> 00:03:49.766\nthat include all the commands\nnecessary to recreate this database.\n\n80\n00:03:49.766 --> 00:03:51.936\nSo it'll start with\na create database command.\n\n81\n00:03:51.936 --> 00:03:55.124\nAnd then it will do the create table,\ncreate index,\n\n82\n00:03:55.124 --> 00:03:57.160\ncreate view, create username.\n\n83\n00:03:57.160 --> 00:04:00.004\nIt will go through and\ncreate all those different items and\n\n84\n00:04:00.004 --> 00:04:02.810\nbasically rebuild this\ndatabase somewhere else.\n\n85\n00:04:02.810 --> 00:04:05.860\nThis is useful not for\njust moving to Azure but really for\n\n86\n00:04:05.860 --> 00:04:09.270\nmoving to any SQL server if I wanna\nrecreate a database somewhere else.\n\n87\n00:04:09.270 --> 00:04:12.910\nI'm gonna choose Generate Scripts,\nand that's gonna launch the wizard.\n\n88\n00:04:12.910 --> 00:04:15.420\nAnd in the wizard it's\npretty straightforward.\n\n89\n00:04:15.420 --> 00:04:18.130\nThe most important screen is this\none right here where it says\n\n90\n00:04:18.130 --> 00:04:20.530\nChoose my Objects, right?\n\n91\n00:04:20.530 --> 00:04:24.430\nSo I've gotta pick what I'm gonna\nbring along with me, all right?\n\n92\n00:04:24.430 --> 00:04:28.540\nAnd the default is to script the entire\ndatabase and all database objects.\n\n93\n00:04:28.540 --> 00:04:31.450\nWell, that doesn't work for\nAzure, all right?\n\n94\n00:04:31.450 --> 00:04:34.560\nThis wizard is not Azure aware.\n\n95\n00:04:34.560 --> 00:04:38.797\nIt assumes that I'm gonna take this script\nto another on-premises SQL server and\n\n96\n00:04:38.797 --> 00:04:43.060\nrun it to recreate the database,\nnot an Azure database, all right.\n\n97\n00:04:43.060 --> 00:04:45.720\nIf I take this to an Azure database and\nI run it, when I run it,\n\n98\n00:04:45.720 --> 00:04:48.890\nit's going to try and create the database\nusing the create database command.\n\n99\n00:04:48.890 --> 00:04:52.737\nAnd one thing that the create database\ncommand requires is a file name.\n\n100\n00:04:52.737 --> 00:04:55.530\nI'm going to create the database,\nwhere am I going to put the file?\n\n101\n00:04:55.530 --> 00:04:58.260\nWell in Azure we don't\nhave file names like that.\n\n102\n00:04:58.260 --> 00:05:00.630\nRight, you have blobs\nin the storage account.\n\n103\n00:05:00.630 --> 00:05:02.800\nSo, that's different than\nwhat we have here, and\n\n104\n00:05:02.800 --> 00:05:05.020\nthat's probably the biggest\nweakness of this model.\n\n105\n00:05:05.020 --> 00:05:09.999\nWe go to move the database here, it's\nnot sanitizing these scripts for Azure.\n\n106\n00:05:09.999 --> 00:05:13.032\nAnd so there might be some things\nin here that are not compatible,\n\n107\n00:05:13.032 --> 00:05:16.122\nsome stored procedures we're using\nthat won't work in Azure, or\n\n108\n00:05:16.122 --> 00:05:20.470\nfile names that work in Azure database,\ntable partitioning that might not work.\n\n109\n00:05:20.470 --> 00:05:21.500\nAnd that can be a problem.\n\n110\n00:05:22.600 --> 00:05:25.055\nMicrosoft does actually have a utility\nyou can download from the website.\n\n111\n00:05:25.055 --> 00:05:27.843\nI'll put the link in the show notes, but\n\n112\n00:05:27.843 --> 00:05:33.263\nit's part of the SQL data tools that\nyou can download from Microsoft's site.\n\n113\n00:05:33.263 --> 00:05:37.442\nThey have a little tool,\nit's called the SQL package.exe utility.\n\n114\n00:05:37.442 --> 00:05:40.809\nAnd you can generate these scripts and\nrun SQL package against it.\n\n115\n00:05:40.809 --> 00:05:44.605\nAnd it'll tell you every part\nthat's not compatible, all right.\n\n116\n00:05:44.605 --> 00:05:48.070\nBut what I'm gonna do is just\nto avoid anything too crazy,\n\n117\n00:05:48.070 --> 00:05:49.632\nI'm gonna pick a subset.\n\n118\n00:05:49.632 --> 00:05:53.590\nI'll choose select specific things, and\nI'm just gonna take my tables, all right.\n\n119\n00:05:53.590 --> 00:05:56.249\nI don't wanna get my views and\nstored procedures and other things.\n\n120\n00:05:56.249 --> 00:05:58.199\nThat's where problems\nwhere kind of emerge.\n\n121\n00:05:58.199 --> 00:06:00.289\nI'm just going to grab my tables,\nall right.\n\n122\n00:06:00.289 --> 00:06:04.476\nNow, in addition to tables I might need\nto grab schemas too if we're using a lot\n\n123\n00:06:04.476 --> 00:06:06.450\nof different schemas in the system.\n\n124\n00:06:06.450 --> 00:06:07.345\nWe might need to grab those.\n\n125\n00:06:07.345 --> 00:06:10.835\nSo I'm just going to pick a couple of\nthose things, and we'll bring those along,\n\n126\n00:06:10.835 --> 00:06:11.890\nall right.\n\n127\n00:06:11.890 --> 00:06:14.800\nOn the next page it's going to\ngive me my scripting options, and\n\n128\n00:06:14.800 --> 00:06:16.670\nthe options basically boil down to this.\n\n129\n00:06:16.670 --> 00:06:20.690\nDo I want a single giant file, or\ndo I want a bunch of individual files?\n\n130\n00:06:20.690 --> 00:06:22.902\nWell if you've got a bunch of tables,\nif I had 1,000 tables,\n\n131\n00:06:22.902 --> 00:06:24.218\nit's going to make 1,000 files.\n\n132\n00:06:24.218 --> 00:06:27.007\nOne per object ends up being quite a lot,\nright?\n\n133\n00:06:27.007 --> 00:06:29.720\nI might want that.\n\n134\n00:06:29.720 --> 00:06:32.530\nOtherwise, I can choose to just\nsend it right to the clipboard or\n\n135\n00:06:32.530 --> 00:06:33.838\nsend it to a new query window.\n\n136\n00:06:33.838 --> 00:06:35.230\nAnd I'm going to send it\nto a new query window.\n\n137\n00:06:35.230 --> 00:06:40.120\nIt's going to make one big query\nthat will effectively recreate this\n\n138\n00:06:40.120 --> 00:06:41.850\ninfrastructure, all right.\n\n139\n00:06:41.850 --> 00:06:44.276\nSo I'll hit Next, and\nthat should be all it needs.\n\n140\n00:06:44.276 --> 00:06:48.501\nI can hit Finish, and there it goes,\ngenerating that script.\n\n141\n00:06:48.501 --> 00:06:50.212\nSo it's getting a list of the objects.\n\n142\n00:06:50.212 --> 00:06:51.350\nIt's exporting them.\n\n143\n00:06:51.350 --> 00:06:57.111\nAnd when it's all done,\nin the background I should see a nice,\n\n144\n00:06:57.111 --> 00:07:01.380\nshiny new transact SQL script, right?\n\n145\n00:07:01.380 --> 00:07:04.960\nAnd if I look at it,\nwe can kind of see what it's doing.\n\n146\n00:07:04.960 --> 00:07:07.900\nIt's coming in and it's connecting\nto a database called AdventureWorks.\n\n147\n00:07:07.900 --> 00:07:12.080\nIt expects me to have a database\ncalled AdventureWorks2014, all right?\n\n148\n00:07:12.080 --> 00:07:15.490\nAnd then in that database it's creating\na schema called HumanResources,\n\n149\n00:07:15.490 --> 00:07:18.960\na schema called Person,\nProduction, Purchasing, Sales.\n\n150\n00:07:18.960 --> 00:07:20.930\nAnd then after that it's creating tables.\n\n151\n00:07:20.930 --> 00:07:23.950\nSo here it's creating\na table called DatabaseLog,\n\n152\n00:07:23.950 --> 00:07:26.620\nor let's see what other\ntables we create in here.\n\n153\n00:07:27.990 --> 00:07:31.461\nWe should have employees,\nthere HumanResources.Employee,\n\n154\n00:07:31.461 --> 00:07:36.420\nHumanResources.EmployeeDepartmentHistory,\nand all those other tables, all right?\n\n155\n00:07:36.420 --> 00:07:41.620\nNow I'm ready to take this script and\nrun it against an Azure database.\n\n156\n00:07:41.620 --> 00:07:44.640\nThe thing is I've got to create\nthat Azure database first.\n\n157\n00:07:44.640 --> 00:07:47.693\nThis one's expecting a database\ncalled AdventureWorks2014.\n\n158\n00:07:47.693 --> 00:07:50.341\nI don't have a database\ncalled AdventureWorks2014.\n\n159\n00:07:50.341 --> 00:07:55.652\nIf I scroll up here to my Azure\nenvironment, I've got SampleDB1.\n\n160\n00:07:55.652 --> 00:07:57.705\nBut I don't have Azure 2014.\n\n161\n00:07:57.705 --> 00:08:01.350\nSo I need to create a new database\nto be able to store this, all right.\n\n162\n00:08:01.350 --> 00:08:03.330\nNow, creating new databases is tricky,\n\n163\n00:08:03.330 --> 00:08:06.310\ncuz the SQL management studio\nexpects them to be local databases.\n\n164\n00:08:06.310 --> 00:08:09.170\nSo if I were to come in here and\nright click on database, and\n\n165\n00:08:09.170 --> 00:08:11.400\nchoose new database, right.\n\n166\n00:08:11.400 --> 00:08:16.610\nIt's gonna start to create this\nwizard that's gonna offer to specify\n\n167\n00:08:16.610 --> 00:08:17.910\nthat database that it's gonna create,\nright?\n\n168\n00:08:17.910 --> 00:08:20.450\nDatabase name, system name and so on.\n\n169\n00:08:20.450 --> 00:08:23.910\nAnd it's not necessarily aware of\nwhether it's tied to azure or not.\n\n170\n00:08:23.910 --> 00:08:26.980\nAnd so basically,\nwe've got this link for more data, for\n\n171\n00:08:26.980 --> 00:08:29.460\nan azure SQL database versus a local one.\n\n172\n00:08:29.460 --> 00:08:31.010\nAnd you gotta go and populate that.\n\n173\n00:08:31.010 --> 00:08:35.060\nSo they don't necessarily make\nit as easy as possible, right?\n\n174\n00:08:35.060 --> 00:08:37.890\nSo instead, what I find is easier\nis just go back to the web UI and\n\n175\n00:08:37.890 --> 00:08:39.250\ncreate the database there.\n\n176\n00:08:39.250 --> 00:08:44.320\nSo I'm gonna create a database\ncalled AdventureWorks2014, and\n\n177\n00:08:44.320 --> 00:08:47.680\nI'll do that, oops,\nI'm gonna try and copy that.\n\n178\n00:08:47.680 --> 00:08:51.350\nAnd then I'll jump over to my portal and\nI'll whip up that new database.\n\n179\n00:08:51.350 --> 00:08:55.130\nSo I'm gonna go here into my SQL\ndatabases, and I'll add a new one.\n\n180\n00:08:55.130 --> 00:08:57.070\nAnd this is gonna be an empty database,\nright?\n\n181\n00:08:57.070 --> 00:09:00.470\nIt's not gonna have any data in,\nno tables, no anything.\n\n182\n00:09:00.470 --> 00:09:01.870\nSo when I create this,\n\n183\n00:09:03.170 --> 00:09:06.880\nI'll need to provide my various\ninformation that it needs.\n\n184\n00:09:06.880 --> 00:09:09.350\nSo, I'm gonna create one\ncalled AdventureWorks2014.\n\n185\n00:09:11.200 --> 00:09:12.360\nI could also edit the script,\n\n186\n00:09:12.360 --> 00:09:15.810\nI could just edit the script to be called\nSampleDB1 instead, that would work.\n\n187\n00:09:15.810 --> 00:09:17.800\nJust do a quick search and\nreplace anywhere for\n\n188\n00:09:17.800 --> 00:09:19.910\nAdventureWorks2014, replace it.\n\n189\n00:09:19.910 --> 00:09:22.340\nBut I'll make one that\nactually has that name.\n\n190\n00:09:22.340 --> 00:09:23.583\nAnd I need to pick my server.\n\n191\n00:09:26.369 --> 00:09:28.940\nAnd we'll pick that one.\n\n192\n00:09:31.430 --> 00:09:33.570\nAnd then I just need to give it a source,\n\n193\n00:09:33.570 --> 00:09:35.740\nwhich I'm just gonna do\na blank database on this one.\n\n194\n00:09:35.740 --> 00:09:37.810\nSo it's not gonna have\nany information in it.\n\n195\n00:09:37.810 --> 00:09:40.430\nFor the tier,\nI'm gonna bump this one up a little bit.\n\n196\n00:09:40.430 --> 00:09:43.930\nThe lower your tier,\nthe longer this process can take.\n\n197\n00:09:43.930 --> 00:09:47.180\nSo I'm gonna pick something a little\nbit better than just a normal standard.\n\n198\n00:09:47.180 --> 00:09:50.925\nI'll go to an S1, just get a little\nbit better performance out of it.\n\n199\n00:09:50.925 --> 00:09:52.980\nI can pick my collation.\n\n200\n00:09:52.980 --> 00:09:56.440\nI can pick my resource group,\nmy subscription.\n\n201\n00:09:56.440 --> 00:09:58.180\nI'm just gonna leave all\nthose at the default, and\n\n202\n00:09:58.180 --> 00:09:59.510\nI'm gonna create that database.\n\n203\n00:09:59.510 --> 00:10:02.460\nSo I just created an empty database,\nand I'm gonna wait for\n\n204\n00:10:02.460 --> 00:10:03.910\nthat to finish provisioning.\n\n205\n00:10:03.910 --> 00:10:05.990\nAnd once it's provisioned,\n\n206\n00:10:05.990 --> 00:10:11.590\nI can then go back to my SQL Management\nStudio connect that database.\n\n207\n00:10:11.590 --> 00:10:12.980\nAnd I just have to run the script.\n\n208\n00:10:12.980 --> 00:10:17.460\nAnd when I run the script, it's going to\nrecreate this database structure for me.\n\n209\n00:10:17.460 --> 00:10:20.480\nSo it is churning through and doing that.\n\n210\n00:10:20.480 --> 00:10:22.840\nAnd while it's doing it, what I'm gonna do\nis jump back into my management studio.\n\n211\n00:10:22.840 --> 00:10:27.510\nNow, this script that it made is\nactually attached to my client.\n\n212\n00:10:27.510 --> 00:10:31.860\nThis query window right here,\nsequelquery.sql, this file that it made.\n\n213\n00:10:31.860 --> 00:10:35.370\nIf I look down at the very bottom,\nthere's this little bar,\n\n214\n00:10:35.370 --> 00:10:38.040\nsee how it tells me that\nI'm connected to CLIENT01?\n\n215\n00:10:38.040 --> 00:10:40.220\nSo if I were to run this script right now,\nit's gonna try and\n\n216\n00:10:40.220 --> 00:10:42.330\nrun it against my own local machine.\n\n217\n00:10:42.330 --> 00:10:44.760\nAnd that's not what I want,\nI want it to run against the cloud.\n\n218\n00:10:44.760 --> 00:10:49.710\nSo what I actually need to do is\nbasically copy this script, and\n\n219\n00:10:49.710 --> 00:10:53.480\nI'm gonna come up here and\nclick on my Azure deployment.\n\n220\n00:10:53.480 --> 00:10:58.220\nSo if you look at this here's my\nitprotvsample.database.windows.net.\n\n221\n00:10:58.220 --> 00:11:03.370\nSo I'm gonna click on that, and\nI'm gonna choose to do a New Query.\n\n222\n00:11:03.370 --> 00:11:06.940\nAnd now it's opening a New Query window,\nand this one's a little different.\n\n223\n00:11:06.940 --> 00:11:10.660\nBecause if I look at the bottom of my\nscreen, it shows that I'm connected to\n\n224\n00:11:10.660 --> 00:11:14.210\nAzure and not connected to my\nlocal machine anymore, all right?\n\n225\n00:11:14.210 --> 00:11:16.820\nAnd I can paste that script in there.\n\n226\n00:11:16.820 --> 00:11:18.490\nAnd so here's the script.\n\n227\n00:11:18.490 --> 00:11:21.300\nAnd again,\nit hasn't necessarily been sanitized,\n\n228\n00:11:21.300 --> 00:11:22.810\nsome of these commands might fail on me.\n\n229\n00:11:22.810 --> 00:11:26.110\nI'll have to keep an eye on that, if\nthere's something that's not compatible.\n\n230\n00:11:26.110 --> 00:11:30.748\nBut it's gonna reach in and connect\nto the Adventure Works database that\n\n231\n00:11:30.748 --> 00:11:34.710\ndoesn't exist yet,\nit's being created right now.\n\n232\n00:11:34.710 --> 00:11:37.650\nAnd then it's gonna create these\nschemas and start to create the tables.\n\n233\n00:11:37.650 --> 00:11:41.970\nThat should all execute just fine assuming\nthe Adventure Works table is there now.\n\n234\n00:11:41.970 --> 00:11:43.310\nI will tell you one thing.\n\n235\n00:11:43.310 --> 00:11:47.060\nI find that Azure SQL really hates\nthe use command, I don't know why.\n\n236\n00:11:47.060 --> 00:11:53.050\nThe use command, it's at the top of\nevery script I've written since 1999,\n\n237\n00:11:53.050 --> 00:11:54.020\nreally in that.\n\n238\n00:11:54.020 --> 00:11:57.420\nBut anyhow, so\nwhat I usually do on these scripts,\n\n239\n00:11:57.420 --> 00:12:00.380\nis just come into where it\nsays that use whatever.\n\n240\n00:12:00.380 --> 00:12:01.820\nAnd I'm just gonna delete that.\n\n241\n00:12:01.820 --> 00:12:04.410\nLet me just take that out of there.\n\n242\n00:12:04.410 --> 00:12:08.960\nAnd instead of using the use command,\nI'll use the drop down box up here.\n\n243\n00:12:08.960 --> 00:12:11.400\nWhere I've got master chosen right now,\nI'll drop that down and\n\n244\n00:12:11.400 --> 00:12:12.660\nI'll choose Adventure Works in.\n\n245\n00:12:12.660 --> 00:12:13.870\nOh, it's actually showing up already.\n\n246\n00:12:13.870 --> 00:12:15.170\nThe database must be done.\n\n247\n00:12:15.170 --> 00:12:15.870\nI'm gonna choose that.\n\n248\n00:12:15.870 --> 00:12:17.510\nSo I'm gonna connect over\nto that other database.\n\n249\n00:12:17.510 --> 00:12:19.620\nSo now, I'm connected to Adventure Works.\n\n250\n00:12:19.620 --> 00:12:23.940\nAnd it's gonna execute against the right\ndatabase without using that use command.\n\n251\n00:12:23.940 --> 00:12:27.780\nSo that's one example of a command that\nmight not be compatible, all right?\n\n252\n00:12:27.780 --> 00:12:28.730\nIf I go back to my UI,\n\n253\n00:12:28.730 --> 00:12:32.160\nI just want to verify that\ndatabase is actually done, it is.\n\n254\n00:12:32.160 --> 00:12:34.747\nAnd in my SQL Manager Studio,\n\n255\n00:12:34.747 --> 00:12:39.850\nI know looking over here at my server\nunder databases, I don't see it.\n\n256\n00:12:39.850 --> 00:12:44.265\nI'm just gonna do a quick refresh to make\nsure that I can see it, there we go.\n\n257\n00:12:44.265 --> 00:12:47.888\nThe reason why I wanted to refresh it,\nis I want to look into Adventure Works.\n\n258\n00:12:47.888 --> 00:12:49.850\nI wanna show you guys\nthat there's no tables.\n\n259\n00:12:49.850 --> 00:12:53.370\nIf I go into the tables\nit should be empty there.\n\n260\n00:12:53.370 --> 00:12:57.150\nI've got System Tables, but\nno User Table whatsoever, all right.\n\n261\n00:12:57.150 --> 00:12:59.210\nNow, I'm gonna take this script and\nI'm gonna run it.\n\n262\n00:12:59.210 --> 00:13:02.380\nAnd when I execute this script it's\ngonna try and create my schemas, and\n\n263\n00:13:02.380 --> 00:13:04.090\nthen it's gonna try and create my tables.\n\n264\n00:13:04.090 --> 00:13:06.680\nAnd I say try,\nI might get some failed commands and so\n\n265\n00:13:06.680 --> 00:13:07.940\nI might have to revisit this.\n\n266\n00:13:07.940 --> 00:13:10.490\nI haven't run into that\nSQL package utility.\n\n267\n00:13:10.490 --> 00:13:13.870\nAnd so if I execute it creating table\nschemas is pretty straight forward, so\n\n268\n00:13:13.870 --> 00:13:16.780\nI don't expect to get any crazy issues,\nbut it's gotta run.\n\n269\n00:13:16.780 --> 00:13:21.380\nNow the lower the performance tier, you\nchose, the longer the script might take.\n\n270\n00:13:21.380 --> 00:13:22.930\nMy server is sitting her empty,\nthough, and\n\n271\n00:13:22.930 --> 00:13:25.070\nit's got a hundred some\nodd DTU's available.\n\n272\n00:13:25.070 --> 00:13:26.740\nNo wait,\nI think I picked one with 50 DTU's, but\n\n273\n00:13:26.740 --> 00:13:29.260\neither way,\nthat's quite a few transactions.\n\n274\n00:13:29.260 --> 00:13:31.800\nThis shouldn't run, or\nshouldn't take all that long.\n\n275\n00:13:31.800 --> 00:13:33.590\nBut in the background,\nthe script is running.\n\n276\n00:13:33.590 --> 00:13:36.740\nIt's creating a schema, it's creating\nthe tables, and when I'm done,\n\n277\n00:13:36.740 --> 00:13:41.430\nI'll have the AdventureWorks 2014\ndatabase with all the tables.\n\n278\n00:13:41.430 --> 00:13:43.850\nAll the schemas just\nlike my own local one.\n\n279\n00:13:43.850 --> 00:13:48.400\nI've effectively migrated the database\nframework up to the cloud, right?\n\n280\n00:13:49.410 --> 00:13:51.880\nNow, I just need to put\nmy production data in it.\n\n281\n00:13:51.880 --> 00:13:55.320\nWell, if my local machine had test data I\ndidn't want that to follow along anyway,\n\n282\n00:13:55.320 --> 00:13:56.680\nso this works out great.\n\n283\n00:13:56.680 --> 00:13:58.250\nNow, we start to populate\nit with production data.\n\n284\n00:13:58.250 --> 00:14:00.900\nIf this is a brand new order system,\nwe just open it to the public and\n\n285\n00:14:00.900 --> 00:14:02.710\nlet the orders start coming in, right?\n\n286\n00:14:02.710 --> 00:14:04.860\nBut, if I expect some data here,\nI'm gonna need to put it in.\n\n287\n00:14:04.860 --> 00:14:06.330\nSo, that's kind of one\nof the negatives here,\n\n288\n00:14:06.330 --> 00:14:08.520\nis that the data doesn't\nfollow along with it.\n\n289\n00:14:08.520 --> 00:14:09.880\nBut, as soon as this query's done,\n\n290\n00:14:09.880 --> 00:14:12.710\nwe'll have that infrastructure\nin this one's migrated over.\n\n291\n00:14:12.710 --> 00:14:16.200\n>> So this is really the benefit\nhere is to create templates.\n\n292\n00:14:16.200 --> 00:14:18.220\nI can structure my data like Don said.\n\n293\n00:14:18.220 --> 00:14:20.050\nMaybe you're working a test environment.\n\n294\n00:14:20.050 --> 00:14:23.860\nAnd then once that test database\nis exactly how you want it,\n\n295\n00:14:23.860 --> 00:14:25.560\nyou don't want the test data in there.\n\n296\n00:14:25.560 --> 00:14:28.530\nBut you do want all the columns and\nrows, and tables, and\n\n297\n00:14:28.530 --> 00:14:30.150\nall the other good stuff that's in there.\n\n298\n00:14:30.150 --> 00:14:31.630\nTo migrate over to your live.\n\n299\n00:14:31.630 --> 00:14:35.410\nSo this would be the way to go for that\neven though it doesn't give us any data.\n\n300\n00:14:35.410 --> 00:14:37.000\nIt doesn't really help us out with that.\n\n301\n00:14:37.000 --> 00:14:39.300\nNow, is there a good way for\nus to figure out?\n\n302\n00:14:39.300 --> 00:14:43.850\nYou said things like that use command is,\nit doesn't like that very well, and\n\n303\n00:14:43.850 --> 00:14:44.970\na couple of other commands.\n\n304\n00:14:44.970 --> 00:14:46.270\nIt's not gonna play nicely with.\n\n305\n00:14:46.270 --> 00:14:50.020\nIs there a good way for us to figure out\nwhat those commands are beforehand or\n\n306\n00:14:50.020 --> 00:14:52.140\ndoes it just come from experience.\n\n307\n00:14:52.140 --> 00:14:53.900\n>> Unfortunately, when you do it this way.\n\n308\n00:14:53.900 --> 00:14:54.890\nThere's not really a good way.\n\n309\n00:14:54.890 --> 00:14:58.580\nYou export the script and then you run\nthat SQL package that exe utility, again,\n\n310\n00:14:58.580 --> 00:15:00.130\nso it will tell you\nthe commands that didn't work.\n\n311\n00:15:00.130 --> 00:15:01.680\nThat's one way to go about it.\n\n312\n00:15:01.680 --> 00:15:04.560\nBut the better option would just be to\nmove onto one of the other migration\n\n313\n00:15:04.560 --> 00:15:06.860\nmethods, cuz you do have a few\nother ones that do a lot more.\n\n314\n00:15:06.860 --> 00:15:08.870\nThorough a job of checking for stuff, and\n\n315\n00:15:08.870 --> 00:15:10.835\nresolving without you\nhaving to worry about it.\n\n316\n00:15:10.835 --> 00:15:11.610\n>> Well, let's take a look at that.\n\n317\n00:15:11.610 --> 00:15:15.370\nLet's take a look using a migrating,\na real database and\n\n318\n00:15:15.370 --> 00:15:16.730\nreal migration with data.\n\n319\n00:15:16.730 --> 00:15:18.650\nAnd all the good stuff inside of it.\n\n320\n00:15:18.650 --> 00:15:23.620\n>> So, when I brought this over,\nI was just using a transact SQL script.\n\n321\n00:15:23.620 --> 00:15:27.170\nAnd in theory that should work on\nany system that's out there, right?\n\n322\n00:15:27.170 --> 00:15:28.900\nThat should be pretty straight forward.\n\n323\n00:15:28.900 --> 00:15:32.750\nBut,there are some options\nthat are available if\n\n324\n00:15:32.750 --> 00:15:36.670\nyou have just like a full SQL enterprise,\nright.\n\n325\n00:15:36.670 --> 00:15:38.610\nOn my workstation here,\nI'm running SQL Express.\n\n326\n00:15:38.610 --> 00:15:40.950\nAnd, so SQL Express is somewhat limited.\n\n327\n00:15:40.950 --> 00:15:44.955\nIf I was running the full SQL\nenterprise or even SQL standard.\n\n328\n00:15:44.955 --> 00:15:47.843\nI would have an extra option when\nI right clicked on that database.\n\n329\n00:15:47.843 --> 00:15:54.677\nSo earlier, I just did a quick\nright click and I went to tasks.\n\n330\n00:15:54.677 --> 00:15:56.648\nAnd Generate Script, right?\n\n331\n00:15:56.648 --> 00:16:00.300\nThat was the option that\nI chose to get that.\n\n332\n00:16:00.300 --> 00:16:01.710\nBut if you look down two options,\n\n333\n00:16:01.710 --> 00:16:04.980\ndo you see how I've got this\nDeploy Database to a Microsoft Azure VM?\n\n334\n00:16:06.230 --> 00:16:09.020\nThat almost looks like a great\nway to do this, but it isn't.\n\n335\n00:16:09.020 --> 00:16:12.390\nWhat that's talking about is if\nI have an Azure Virtual Machine,\n\n336\n00:16:12.390 --> 00:16:17.230\na VM, where I brought up a VM with\nWindows and I installed SQL on it,\n\n337\n00:16:17.230 --> 00:16:20.400\nI could deploy this database right over\nto that instance and I'd be in business.\n\n338\n00:16:20.400 --> 00:16:22.660\nThat is not Azure SQL, right?\n\n339\n00:16:22.660 --> 00:16:25.710\nThis is not the fully managed solution,\nthis is a unmanaged.\n\n340\n00:16:25.710 --> 00:16:27.580\nIt's where you manage it.\n\n341\n00:16:27.580 --> 00:16:31.958\nBut if you're running SQL Enterprise,\nyou'll have another option right beneath\n\n342\n00:16:31.958 --> 00:16:36.270\nthis that will say Deploy Database\nto a Microsoft Azure SQL database.\n\n343\n00:16:36.270 --> 00:16:41.527\nAnd for that one you can choose it, then\nyou can provide it your Azure SQL login,\n\n344\n00:16:41.527 --> 00:16:43.821\nsorry, your actual Azure login.\n\n345\n00:16:43.821 --> 00:16:47.038\nAnd it'll create the database and\nmove the data over and\n\n346\n00:16:47.038 --> 00:16:51.100\ndo it all right through a wizard and\nit runs along pretty smooth.\n\n347\n00:16:51.100 --> 00:16:54.940\nThe only negative is it does take this\ndatabase offline while it does it.\n\n348\n00:16:54.940 --> 00:16:58.430\nSo if your database is active and\npeople are in it right now,\n\n349\n00:16:58.430 --> 00:17:02.140\nthe moment you start that deploy, it's\ngonna go offline during the migration and\n\n350\n00:17:02.140 --> 00:17:05.060\ncome up on the other side and they expect\nyou to move the users over to it, so\n\n351\n00:17:05.060 --> 00:17:06.340\nyou've gotta kinda plan for that.\n\n352\n00:17:06.340 --> 00:17:08.970\nBut it's a nice little\nwizard-driven way to do it.\n\n353\n00:17:08.970 --> 00:17:11.800\nBut if you're using where you just\ndownloaded the management tools like\n\n354\n00:17:11.800 --> 00:17:15.090\nI did, or you've got\nthe SQL Express edition installed,\n\n355\n00:17:15.090 --> 00:17:17.840\nyou're not gonna see that other\noption to deploy to Azure SQL.\n\n356\n00:17:17.840 --> 00:17:20.380\nSo you're just out of luck, right?\n\n357\n00:17:20.380 --> 00:17:22.080\nWell, not necessarily.\n\n358\n00:17:22.080 --> 00:17:25.300\nMicrosoft actually has another\ndifferent recommended method.\n\n359\n00:17:25.300 --> 00:17:27.680\nWorks everywhere, and it's the way\nthat I recommend people do it.\n\n360\n00:17:27.680 --> 00:17:30.420\nAnd it doesn't require taking\nyour database offline.\n\n361\n00:17:30.420 --> 00:17:34.980\nWhen you have a database you can\nright-click on it and go to Tasks and\n\n362\n00:17:34.980 --> 00:17:38.100\nyou've got Export Data-tier Application.\n\n363\n00:17:38.100 --> 00:17:42.681\nData-tier applications were introduced in\nI believe SQL 2012 was where we first saw\n\n364\n00:17:42.681 --> 00:17:44.342\nthem, so back in version 11.\n\n365\n00:17:44.342 --> 00:17:47.228\nIt might have been a little earlier but\nwe've got them in version 11 and\n\n366\n00:17:47.228 --> 00:17:48.550\nin version 12 now.\n\n367\n00:17:48.550 --> 00:17:54.411\nAnd what it does, it allows you to package\nyour database as a data-tier application,\n\n368\n00:17:54.411 --> 00:17:57.157\nwhat Microsoft calls a DAC, a D-A-C.\n\n369\n00:17:57.157 --> 00:18:01.540\nAnd when we export it, we export it\ninto what's called a BACPAC file.\n\n370\n00:18:01.540 --> 00:18:06.120\nA BACPAC file is just\na back-up of a DAC and in it,\n\n371\n00:18:06.120 --> 00:18:08.140\nit will have the entire database.\n\n372\n00:18:08.140 --> 00:18:13.100\nNot just the tables and infrastructure,\nthe actual data inside of it, the whole\n\n373\n00:18:13.100 --> 00:18:17.750\nthing, every single piece of information\nabout this database will be inside it.\n\n374\n00:18:17.750 --> 00:18:20.820\nIt's designed to make it where you can\ntake a component like your database and\n\n375\n00:18:20.820 --> 00:18:22.392\nmove it easily between systems.\n\n376\n00:18:22.392 --> 00:18:26.670\nIn-between on-premises\nSQL servers as well as\n\n377\n00:18:26.670 --> 00:18:30.880\nAzure SQL systems as well as\nAzure VMs too, any of them.\n\n378\n00:18:30.880 --> 00:18:33.610\nThis solution works no\nmatter where you're going.\n\n379\n00:18:33.610 --> 00:18:35.670\nSo this is the way that I normally do it.\n\n380\n00:18:35.670 --> 00:18:36.790\nWhen you run this,\n\n381\n00:18:36.790 --> 00:18:40.230\nwhat it's gonna effectively do is it's\ngonna take a backup of your database.\n\n382\n00:18:40.230 --> 00:18:44.780\nAnd create a portable file that's\nready to be sent somewhere else.\n\n383\n00:18:44.780 --> 00:18:49.180\nAnd when it does it, it validates all the\ncommands to make sure they're compatible,\n\n384\n00:18:49.180 --> 00:18:52.080\nso you won't have anything\nthat fails against Azure.\n\n385\n00:18:52.080 --> 00:18:55.650\nAnd this is the easiest way to do it,\nin my opinion.\n\n386\n00:18:55.650 --> 00:19:00.740\nSo for example, I've got this\n\n387\n00:19:00.740 --> 00:19:06.440\nhuman resources database that I had made\nthe other day and it's nothing flashy.\n\n388\n00:19:06.440 --> 00:19:08.010\nIt's actually pretty small.\n\n389\n00:19:08.010 --> 00:19:12.010\nInside of it,\nit just has one table called Employees and\n\n390\n00:19:12.010 --> 00:19:14.930\nit's got a couple of employees\nadded to it and that's it.\n\n391\n00:19:14.930 --> 00:19:18.160\nIf I wanna take that and\nget it thrown up into Azure,\n\n392\n00:19:18.160 --> 00:19:22.180\nI can right click on that database,\ngo to Tasks, and\n\n393\n00:19:22.180 --> 00:19:27.966\ngo down to\nthe Export Data-tier Application.\n\n394\n00:19:27.966 --> 00:19:31.750\nAnd when I do that, it's gonna launch\na wizard, much like what we saw before.\n\n395\n00:19:31.750 --> 00:19:35.410\nExcept when I move forward on this\nWizard It's gonna ask things a little\n\n396\n00:19:35.410 --> 00:19:36.340\nbit different.\n\n397\n00:19:36.340 --> 00:19:40.170\nIt's not asking me what objects to get,\ncuz it's gonna get everything, right?\n\n398\n00:19:40.170 --> 00:19:42.790\nSo I'm not picking tables,\nor this, or that.\n\n399\n00:19:42.790 --> 00:19:44.160\nIt's just gonna get everything.\n\n400\n00:19:44.160 --> 00:19:45.640\nAnd it's asking where I wanna save it to.\n\n401\n00:19:45.640 --> 00:19:47.070\nAnd I can save it to my local disk.\n\n402\n00:19:47.070 --> 00:19:49.600\nThat's what I would do if I was gonna\nsend it to another SQL server in my\n\n403\n00:19:49.600 --> 00:19:53.810\nenvironment, or\nI can save it to Microsoft Azure.\n\n404\n00:19:53.810 --> 00:19:57.570\nWhat I'm effectively doing is taking\na backup of this server that's local and\n\n405\n00:19:57.570 --> 00:19:59.160\nsticking it in Azure.\n\n406\n00:19:59.160 --> 00:20:03.230\nAnd once it's there I can restore\nit as a database there and\n\n407\n00:20:03.230 --> 00:20:06.400\nnow my database has been migrated to\nAzure, and I can do it error-free.\n\n408\n00:20:06.400 --> 00:20:07.000\nIt's really nice.\n\n409\n00:20:08.300 --> 00:20:12.340\nNow, there's a few little requirements\nI need to go through before I do it.\n\n410\n00:20:12.340 --> 00:20:15.520\nNotice that it's gonna ask me for\na storage account and a container.\n\n411\n00:20:15.520 --> 00:20:16.520\nSo I need to have those.\n\n412\n00:20:16.520 --> 00:20:17.960\nI need a storage account and\nI need a container.\n\n413\n00:20:17.960 --> 00:20:19.810\nNow I already have one, but if you don't,\n\n414\n00:20:19.810 --> 00:20:22.820\nlet me show you real quick how\nto whip one up really quick.\n\n415\n00:20:22.820 --> 00:20:27.920\nThis is still tied to what are called\nthe classic storage accounts.\n\n416\n00:20:27.920 --> 00:20:29.850\nSo in your Azure portal,\nway down at the bottom,\n\n417\n00:20:29.850 --> 00:20:32.650\nyou'll see this Storage accounts\n(classic) so we gotta go to that one.\n\n418\n00:20:32.650 --> 00:20:35.630\nI know we're in the new portal, we don't\nwanna use the classic stuff anymore, but\n\n419\n00:20:35.630 --> 00:20:38.000\nthis import/export process\nis still tied to it.\n\n420\n00:20:38.000 --> 00:20:41.970\nSo you're gonna go into that Storage\naccounts (classic) and you're gonna whip\n\n421\n00:20:41.970 --> 00:20:44.930\nup a new storage account, so\nI'll just add one in here real quick.\n\n422\n00:20:45.930 --> 00:20:49.810\nAnd maybe I'll call it\nsomething witty like\n\n423\n00:20:51.050 --> 00:20:55.720\nitprotvdbimport, and\n\n424\n00:20:55.720 --> 00:21:00.020\nwhen I name it that, it's getting a unique\nname that I'll be able to connect to.\n\n425\n00:21:00.020 --> 00:21:04.352\nSo I'm gonna have\nitprotvdbimport.core.windows.net, right.\n\n426\n00:21:04.352 --> 00:21:08.790\nI pick a pricing tier for it,\nhow I want the redundancy to be.\n\n427\n00:21:08.790 --> 00:21:13.370\nThen I can pick the default resource\ngroup, the subscription, and the location.\n\n428\n00:21:13.370 --> 00:21:17.000\nMost of these values are not what I want,\nso I'm gonna change some of these.\n\n429\n00:21:17.000 --> 00:21:22.050\nSo, for example,\nthat level that it picked there,\n\n430\n00:21:22.050 --> 00:21:24.730\nit picked a read access geo-redundant.\n\n431\n00:21:24.730 --> 00:21:28.840\nAnd that might be fun, but I really\ndon't need this to be geo-redundant.\n\n432\n00:21:28.840 --> 00:21:30.340\nIt's just a backup of a data base server,\nand so\n\n433\n00:21:30.340 --> 00:21:32.670\nI can save a lot of money if I just\nswitch that to locally redundant.\n\n434\n00:21:32.670 --> 00:21:34.770\nSo I'm going to switch that.\n\n435\n00:21:34.770 --> 00:21:38.380\nThe resource group, it's creating\na resource group for me in West US.\n\n436\n00:21:38.380 --> 00:21:40.150\nI don't really need one in West US.\n\n437\n00:21:40.150 --> 00:21:42.500\nSo I can use an existing\nresource group that I've got.\n\n438\n00:21:42.500 --> 00:21:45.480\nLike I'll take my itprotvapp1 group.\n\n439\n00:21:45.480 --> 00:21:48.320\nAnd then it's gonna move me over to\nEast US and that's where I wanna be,\n\n440\n00:21:48.320 --> 00:21:50.360\nwe're in Florida so\nthat's a little closer to us.\n\n441\n00:21:51.420 --> 00:21:53.320\nAll right, so\nI'm gonna create that storage account.\n\n442\n00:21:53.320 --> 00:21:55.780\nNow creating a storage\naccount is step one,\n\n443\n00:21:55.780 --> 00:21:58.460\nI then need to have\na container inside of it.\n\n444\n00:21:58.460 --> 00:22:03.210\nSo as soon as that storage account is\navailable, I need to go inside of it and\n\n445\n00:22:03.210 --> 00:22:05.190\ncreate a container, and\nthat's pretty easy too.\n\n446\n00:22:05.190 --> 00:22:08.290\nSo I just need to wait for\nthat to finish and I'll be able to do it.\n\n447\n00:22:08.290 --> 00:22:09.820\nIn fact, I don't necessarily\nhave to wait for that one,\n\n448\n00:22:09.820 --> 00:22:10.860\nI can use the one I've already got.\n\n449\n00:22:10.860 --> 00:22:14.640\nSo if I go into this other one that\nI've got here called ITProTV legacy.\n\n450\n00:22:14.640 --> 00:22:18.150\nWhen I browse inside of it,\nI see blobs and files and tables,\n\n451\n00:22:18.150 --> 00:22:19.840\nall this stuff down here.\n\n452\n00:22:19.840 --> 00:22:22.170\nWell, we need a container to\nbe creative inside of blobs.\n\n453\n00:22:22.170 --> 00:22:24.330\nI know we think files,\nlike, that's the way to go,\n\n454\n00:22:24.330 --> 00:22:27.780\nbut that actually creates the Azure\nfile system, the shared folders.\n\n455\n00:22:27.780 --> 00:22:29.460\nWe need a folder inside of a blob.\n\n456\n00:22:29.460 --> 00:22:32.080\nAnd so I'm gonna choose blobs.\n\n457\n00:22:32.080 --> 00:22:36.230\nAnd over here inside of my blobs\nI'll see the information for\n\n458\n00:22:36.230 --> 00:22:39.860\nthe system and\ndown here I can see Containers.\n\n459\n00:22:39.860 --> 00:22:42.320\nAnd I've already got a container\ncalled db-backups but\n\n460\n00:22:42.320 --> 00:22:44.190\nlet's say I just wanted\nto add another one.\n\n461\n00:22:44.190 --> 00:22:46.910\nYou can just click on Containers, and\n\n462\n00:22:46.910 --> 00:22:51.510\nthen over here it'll have the option\nto where we can add a new container.\n\n463\n00:22:51.510 --> 00:22:54.960\nSo, I just wanna add one and when I go to\nadd the container you just give it a name.\n\n464\n00:22:54.960 --> 00:23:00.090\nAnd so I might call this dbImport and\n\n465\n00:23:00.090 --> 00:23:02.990\nwe can set the access type private,\nblob, container.\n\n466\n00:23:02.990 --> 00:23:05.919\nI want this to be a container.\n\n467\n00:23:05.919 --> 00:23:07.591\n>> It's not very PC to call them blobs,\nDon.\n\n468\n00:23:07.591 --> 00:23:09.124\n>> [LAUGH] Yeah, I know.\n>> Geometrically challenged.\n\n469\n00:23:09.124 --> 00:23:12.820\n>> It is a strange term, but\nyeah that's basically it.\n\n470\n00:23:12.820 --> 00:23:13.530\nThe access types,\n\n471\n00:23:13.530 --> 00:23:16.450\nI guess it really doesn't necessarily\nmatter how I wanna set this one.\n\n472\n00:23:16.450 --> 00:23:19.050\nAs long as we kind of get\nrid of it when we're done.\n\n473\n00:23:19.050 --> 00:23:22.520\nThe thing to remember is that when\nyou come in here and set these,\n\n474\n00:23:22.520 --> 00:23:24.030\nsome of them are public.\n\n475\n00:23:24.030 --> 00:23:26.300\nAnd you might not want your\ndatabase to be public.\n\n476\n00:23:26.300 --> 00:23:29.590\nSo the safest one would be to pick\nPrivate and then only you will see it.\n\n477\n00:23:29.590 --> 00:23:31.160\nAnd if you float over\nthat little descriptor,\n\n478\n00:23:31.160 --> 00:23:34.850\nit'll tell you who's got\nwhat kind of access, right?\n\n479\n00:23:34.850 --> 00:23:37.850\nSo if I go with Private,\nonly the account owner sees it, and\n\n480\n00:23:37.850 --> 00:23:39.540\nthat's kinda what I want for a backup.\n\n481\n00:23:39.540 --> 00:23:42.747\nIf I do blob, we get public read access.\n\n482\n00:23:42.747 --> 00:23:46.606\nOr if I use container, we get public\nread and list access to the container so\n\n483\n00:23:46.606 --> 00:23:48.948\nthat might be a little too far for\nwhat I want.\n\n484\n00:23:48.948 --> 00:23:51.231\nSo I'll go ahead and stick it to private.\n\n485\n00:23:51.231 --> 00:23:54.381\nAll right, so that's gonna whip up\nthat container Once I got those,\n\n486\n00:23:54.381 --> 00:23:55.915\nnow I'm be able to connect to it.\n\n487\n00:23:55.915 --> 00:23:57.484\nNow even before I can\nconnect to it though,\n\n488\n00:23:57.484 --> 00:24:00.330\nthere are still two pieces of\ninformation I need to get from here.\n\n489\n00:24:00.330 --> 00:24:03.190\nI need to get the name\nof my storage account,\n\n490\n00:24:03.190 --> 00:24:05.510\nwhich mine is called itprotvlegacy.\n\n491\n00:24:05.510 --> 00:24:08.330\nAnd the other thing I need is\npermission to be able to get to it.\n\n492\n00:24:08.330 --> 00:24:10.740\nSo we're going to see\nthat in just a minute.\n\n493\n00:24:10.740 --> 00:24:14.530\nSo if I go back to my wizard, it's\nasking for me to pick a storage account.\n\n494\n00:24:14.530 --> 00:24:15.460\nAnd so if I come in here and\n\n495\n00:24:15.460 --> 00:24:18.910\nchoose connect, It's going to ask for\nthe storage account name, and\n\n496\n00:24:18.910 --> 00:24:23.570\nmine was called itprotvlegacy, and\nthen it wants an account key, right.\n\n497\n00:24:23.570 --> 00:24:27.560\nThe account key is that private key\nwe can use to connect to the system.\n\n498\n00:24:27.560 --> 00:24:29.830\nSo I need to go back to my Azure portal\nand I need to go into the itprotvlegacy,\n\n499\n00:24:29.830 --> 00:24:34.400\nand I need to go into its properties.\n\n500\n00:24:34.400 --> 00:24:38.460\nSo I'm going to use my little breadcrumb\ntrail here to get back to itprotvlegacy.\n\n501\n00:24:38.460 --> 00:24:43.500\nAnd in the properties, for that you've got\na little key icon floating up here, and\n\n502\n00:24:43.500 --> 00:24:48.945\nwhen you click on that key the right side\nof the screen, whoops, is going to update.\n\n503\n00:24:48.945 --> 00:24:54.160\n[LAUGH] Sorry, if one of these keyboard\nshortcuts causes me to zoom erratically,\n\n504\n00:24:54.160 --> 00:24:55.140\njust there we go.\n\n505\n00:24:55.140 --> 00:24:56.050\nAll right.\n\n506\n00:24:56.050 --> 00:24:59.190\nOn the right side here I'll start\nto see all of these keys appear.\n\n507\n00:24:59.190 --> 00:25:01.800\nI've got my primary access key,\nmy secondary access key and\n\n508\n00:25:01.800 --> 00:25:05.880\nall of those guys, and so\nI need to get that primary access key.\n\n509\n00:25:05.880 --> 00:25:06.980\nSo I'm going to copy that.\n\n510\n00:25:06.980 --> 00:25:10.680\nLet me just copy that again.\n\n511\n00:25:10.680 --> 00:25:13.710\nThere we go.\nAnd then I can go back to my SQL wizard\n\n512\n00:25:15.310 --> 00:25:19.100\nand in here I can just\npaste that key right in.\n\n513\n00:25:19.100 --> 00:25:20.945\nSo I don't have to remember what it is,\nokay?\n\n514\n00:25:20.945 --> 00:25:22.640\nBecause it's a little bit long.\n\n515\n00:25:22.640 --> 00:25:25.690\n>> You might have a little\ndifficulty memorizing that key, Don.\n\n516\n00:25:25.690 --> 00:25:29.300\n>> Now one problem I've bumped into\nbefore is this use secure endpoints.\n\n517\n00:25:29.300 --> 00:25:30.450\nSometimes it doesn't get checked.\n\n518\n00:25:30.450 --> 00:25:31.660\nIt needs to be checked, right?\n\n519\n00:25:31.660 --> 00:25:34.640\nMine's checked for me, but just double\ncheck on yours that it is checked.\n\n520\n00:25:34.640 --> 00:25:36.000\nDouble check that you checked it?\n\n521\n00:25:36.000 --> 00:25:36.760\nI guess that's redundant.\n\n522\n00:25:36.760 --> 00:25:38.272\nBut anyhow.\nSo I'm going to choose that and\n\n523\n00:25:38.272 --> 00:25:39.100\nhit connect.\n\n524\n00:25:39.100 --> 00:25:40.350\nIt's going to reach out and\ntry and connect.\n\n525\n00:25:40.350 --> 00:25:42.020\nIt'll let you know if it fails.\n\n526\n00:25:42.020 --> 00:25:44.270\nAnd from here I can pick my container.\n\n527\n00:25:44.270 --> 00:25:48.200\nAnd so I drop it down and\nthere's dbimport and dbbackups.\n\n528\n00:25:48.200 --> 00:25:51.140\nSo I can pick the container that I want,\nI'll use my dbbackups, and\n\n529\n00:25:51.140 --> 00:25:51.680\nI can give it a name.\n\n530\n00:25:51.680 --> 00:25:54.066\nThis is going to be called\nHumanResources.bacpac.\n\n531\n00:25:54.066 --> 00:25:56.980\nNow it's going to use a temporary local\nfile to store the database, you need to\n\n532\n00:25:56.980 --> 00:26:00.170\nmake sure wherever that is, it has enough\nstorage to hold your database, right?\n\n533\n00:26:00.170 --> 00:26:02.130\nYour database might be pretty large.\n\n534\n00:26:02.130 --> 00:26:04.070\nBut once you've got that,\nyou can hit next.\n\n535\n00:26:04.070 --> 00:26:08.730\nAnd now, what it's going to do is it's\ngoing to run a quick scan to look for\n\n536\n00:26:08.730 --> 00:26:10.560\nanything that's incompatible.\n\n537\n00:26:10.560 --> 00:26:11.190\nAll right.\n\n538\n00:26:11.190 --> 00:26:14.050\nIf it finds something incompatible,\nit'll warn you right here and\n\n539\n00:26:14.050 --> 00:26:15.046\nyou'll get a note about it.\n\n540\n00:26:15.046 --> 00:26:19.925\nSo, mine's going to run and what I should\nfind is mine is compatible, there we go,\n\n541\n00:26:19.925 --> 00:26:22.960\nbecause I didn't have anything too\nfancy and so I get this all back and\n\n542\n00:26:22.960 --> 00:26:24.760\nthey're all successes and it worked.\n\n543\n00:26:24.760 --> 00:26:30.110\nLet me show you an example what it would\nbe like if it failed, for example, I have\n\n544\n00:26:30.110 --> 00:26:35.590\na table called DBO Employees, and for\na table to be imported in Azure you have\n\n545\n00:26:35.590 --> 00:26:41.180\nto have a certain index,\na clustered index, right?\n\n546\n00:26:41.180 --> 00:26:44.380\nIf you have a table that doesn't have\nat least one clustered index on it,\n\n547\n00:26:44.380 --> 00:26:45.920\nit'll fail to import.\n\n548\n00:26:45.920 --> 00:26:49.449\nAnd so what I'm going to do, is I'm\ngoing to take my DBO dot employees, and\n\n549\n00:26:49.449 --> 00:26:53.480\nI'm going to come here to this clustered\nindex, and I'm just going to delete it.\n\n550\n00:26:53.480 --> 00:26:56.350\nAnd we'll kind of trim\nthat one out of there.\n\n551\n00:26:56.350 --> 00:27:00.280\nSo if I delete that index,\nwe'll just get rid of it.\n\n552\n00:27:00.280 --> 00:27:04.240\nAnd I re-run that wizard,\nthat's going to generate a failure.\n\n553\n00:27:04.240 --> 00:27:06.580\nOr at least it should,\nunless something's changed here.\n\n554\n00:27:06.580 --> 00:27:07.080\nSo let's find out.\n\n555\n00:27:07.080 --> 00:27:12.810\nSo if I go back to tasks,\nexport data to your application, and\n\n556\n00:27:12.810 --> 00:27:17.053\nstart running through this wizard again,\nand we'll just kind of get connected.\n\n557\n00:27:18.170 --> 00:27:20.700\nToo much to ask for\nit to remember all of my settings.\n\n558\n00:27:20.700 --> 00:27:23.550\nI guess I could have chosen save account\nkey, that would've made a difference.\n\n559\n00:27:23.550 --> 00:27:28.480\nBut I'm just going to repeat this, maybe\nI'll export to the other folder this time.\n\n560\n00:27:28.480 --> 00:27:30.450\nProbably need to give it\na different file name.\n\n561\n00:27:32.590 --> 00:27:34.420\nThere we go, that way I can\nrestore to the same container.\n\n562\n00:27:34.420 --> 00:27:37.810\nSo I'll just call this one\nHumanResources2, and I'll move forward.\n\n563\n00:27:37.810 --> 00:27:41.250\nIt's going to run that check and\nit's going to hit that table.\n\n564\n00:27:41.250 --> 00:27:42.110\nShoot.\nI thought I was\n\n565\n00:27:42.110 --> 00:27:44.820\ngoing to hit that table without\na cluster index and generate a failure.\n\n566\n00:27:44.820 --> 00:27:49.090\nBut if it does, what you'll see is you'll\njust get some little failures on here.\n\n567\n00:27:49.090 --> 00:27:51.400\nAnd so apparently I'm not\nable to generate a failure.\n\n568\n00:27:51.400 --> 00:27:53.920\nI thought you had to have a cluster index,\nbut I guess I was wrong.\n\n569\n00:27:53.920 --> 00:27:56.690\nSo if you have something that fails,\nit'll show here and if you click on it,\n\n570\n00:27:56.690 --> 00:27:58.010\nit will tell you what it is.\n\n571\n00:27:58.010 --> 00:27:59.640\nAnd so, hey, you need a cluster index.\n\n572\n00:27:59.640 --> 00:28:00.920\nOkay, I'll go create one.\n\n573\n00:28:00.920 --> 00:28:04.340\nOr hey, this particular stored\nprocedure isn't going to work.\n\n574\n00:28:04.340 --> 00:28:06.480\nAll right,\nwell let me make a note of that.\n\n575\n00:28:06.480 --> 00:28:09.310\nI'll delete the stored procedure for now,\nand I'll recreate it later in Azure and\n\n576\n00:28:09.310 --> 00:28:10.450\nget it to work the right way.\n\n577\n00:28:10.450 --> 00:28:12.220\nYou basically have to figure\nout what you need to do to get\n\n578\n00:28:12.220 --> 00:28:13.870\nthat corrected, all right.\n\n579\n00:28:13.870 --> 00:28:16.670\nBut once that's done,\nI've now got a backpack up in Azure.\n\n580\n00:28:16.670 --> 00:28:20.145\nSo Azure now has a backup of my\ndatabase stored right there,\n\n581\n00:28:20.145 --> 00:28:22.140\nall I'm going to do is restore it.\n\n582\n00:28:22.140 --> 00:28:25.690\nI can restore it and bring it in, and now\nI've got a database made from a backup and\n\n583\n00:28:25.690 --> 00:28:26.820\nlet me show you that process.\n\n584\n00:28:26.820 --> 00:28:31.840\nSo when we're ready to restore it, we\nneed to jump over to our Azure portal and\n\n585\n00:28:31.840 --> 00:28:33.390\nwe need to get to work, right.\n\n586\n00:28:33.390 --> 00:28:39.180\nNow normally we go here to SQL databases\nand inside of our SQL databases,\n\n587\n00:28:39.180 --> 00:28:41.590\nand we just add and\nwe go through the process of creating one.\n\n588\n00:28:41.590 --> 00:28:44.340\nAnd when we do, it asks for\na source for that database.\n\n589\n00:28:44.340 --> 00:28:49.450\nAnd you'll see where you've got the option\nto choose from a blank database,\n\n590\n00:28:49.450 --> 00:28:52.530\na sample database, or backups.\n\n591\n00:28:52.530 --> 00:28:55.010\nWell, you would think that's where\nyou'd go to restore a backpack.\n\n592\n00:28:55.010 --> 00:28:57.480\nA backpack is sort of backup, right?\n\n593\n00:28:57.480 --> 00:29:00.940\nBut the problem is when you go to backups\nfor the source for a new database,\n\n594\n00:29:00.940 --> 00:29:04.560\nit's actually expecting a backup\nthat was taken inside of Azure SQL.\n\n595\n00:29:04.560 --> 00:29:08.310\nThis backpack that we made wasn't done in\nAzure SQL, so it doesn't know about it.\n\n596\n00:29:08.310 --> 00:29:09.090\nIf I go that route,\n\n597\n00:29:09.090 --> 00:29:11.700\nit's not going to even have that option,\nI won't be able to choose it.\n\n598\n00:29:11.700 --> 00:29:14.450\nSo instead I have to go a different\nway to get it restored and\n\n599\n00:29:14.450 --> 00:29:15.980\nput back into the system.\n\n600\n00:29:15.980 --> 00:29:19.400\nWhat I need to do is I need to\ngo down here to SQL servers and\n\n601\n00:29:19.400 --> 00:29:24.170\nunder the SQL servers,\nif I pick the server I want to restore to,\n\n602\n00:29:24.170 --> 00:29:28.650\nin that server you'll see\nan import database option.\n\n603\n00:29:28.650 --> 00:29:32.980\nAnd it's that import database option that\nI want to hit, because that's what's going\n\n604\n00:29:32.980 --> 00:29:36.700\nto open it up over here for\nme to pick where I'm getting it from.\n\n605\n00:29:36.700 --> 00:29:37.350\nOkay.\n\n606\n00:29:37.350 --> 00:29:38.990\nAnd so over here I've got storage and\n\n607\n00:29:38.990 --> 00:29:41.360\nif I click on that it's going\nto let me pick the storage.\n\n608\n00:29:41.360 --> 00:29:45.120\nAnd I can pick my storage account,\nmy container, and my bacpac.\n\n609\n00:29:45.120 --> 00:29:46.820\nSee how it specifically says a bacpac.\n\n610\n00:29:46.820 --> 00:29:48.340\nThis is what it expects us to do.\n\n611\n00:29:48.340 --> 00:29:51.180\nSo, I'm going to chose my storage account,\n\n612\n00:29:51.180 --> 00:29:53.360\nwhich I think I ended up\nusing itprotvdb legacy.\n\n613\n00:29:53.360 --> 00:30:00.564\nI'm going to pick my container,\nwhich I stuck mine into db-backups.\n\n614\n00:30:01.930 --> 00:30:03.910\nAnd then I'm going to choose the backpack,\n\n615\n00:30:03.910 --> 00:30:07.570\nand I'll see the list of\nbackpacks that I have in there.\n\n616\n00:30:07.570 --> 00:30:08.570\nAnd so I've got a few.\n\n617\n00:30:08.570 --> 00:30:11.320\nI'm going to take that Human Resources\nbackpack that we made.\n\n618\n00:30:11.320 --> 00:30:12.100\nAll right.\n\n619\n00:30:12.100 --> 00:30:14.010\nNow it knows where to get the data.\n\n620\n00:30:14.010 --> 00:30:16.300\nAnd once it's got that,\nI can come in here and\n\n621\n00:30:16.300 --> 00:30:17.960\nchoose the pricing tier for this database.\n\n622\n00:30:17.960 --> 00:30:18.780\nOops.\nOh, shoot.\n\n623\n00:30:18.780 --> 00:30:19.760\nI hate it when I do that.\n\n624\n00:30:19.760 --> 00:30:20.840\nI do that every time.\n\n625\n00:30:20.840 --> 00:30:24.040\nSo, there's an okay button,\nit's just off my screen, right down here,\n\n626\n00:30:24.040 --> 00:30:25.230\nthat I didn't click.\n\n627\n00:30:25.230 --> 00:30:28.010\nAnd so it warns you that you're going to\nlose your settings, and then you say, no,\n\n628\n00:30:28.010 --> 00:30:28.930\nno, no, cancel!\n\n629\n00:30:28.930 --> 00:30:30.240\nAnd then you lose your settings, right?\n\n630\n00:30:30.240 --> 00:30:31.000\nBut it's actually not that bad.\n\n631\n00:30:31.000 --> 00:30:33.320\nIf I go back to storage,\nsee how you get this error?\n\n632\n00:30:33.320 --> 00:30:35.810\nAnd then the error just\nsays click to reload.\n\n633\n00:30:35.810 --> 00:30:37.880\nAnd if you click to reload,\nit'll remember all your stuff.\n\n634\n00:30:37.880 --> 00:30:41.190\nI I know this because I\nhave done it every single,\n\n635\n00:30:41.190 --> 00:30:43.580\nI can't think of a time I did this and\nI didn't make that mistake.\n\n636\n00:30:43.580 --> 00:30:45.110\nI made a mistake every time.\n\n637\n00:30:45.110 --> 00:30:49.310\nAlright this time I'm going to\nclick okay like you're supposed to.\n\n638\n00:30:49.310 --> 00:30:51.270\nAlright, then I'll go\nto the pricing tier and\n\n639\n00:30:51.270 --> 00:30:52.720\nI'll pick what pricing\ntier I want this to be.\n\n640\n00:30:52.720 --> 00:30:56.650\nI'll just do an S zero,\nI don't want to spend to much money on it.\n\n641\n00:30:56.650 --> 00:30:58.901\nAll right.\nSo I'm going to open S zero.\n\n642\n00:30:58.901 --> 00:31:02.423\nThen it's going to auto-populate\nthe database name for me,\n\n643\n00:31:02.423 --> 00:31:04.800\nbecause it looks in the database back up.\n\n644\n00:31:04.800 --> 00:31:06.660\nIt's got the name, so it already loads it.\n\n645\n00:31:06.660 --> 00:31:08.080\nI can change that if I want, though.\n\n646\n00:31:08.080 --> 00:31:10.430\nWhen you restore it you can give\nthe database a different name, and\n\n647\n00:31:10.430 --> 00:31:13.960\nthat's really useful if you're trying to\ncreate like staging or test environments,\n\n648\n00:31:13.960 --> 00:31:17.080\nyou can whip those up and\nget those created.\n\n649\n00:31:17.080 --> 00:31:20.320\nI can do my server admin login,\nso I'll use dpezet and\n\n650\n00:31:20.320 --> 00:31:22.860\nI can give myself a password,\nthat's always a good idea.\n\n651\n00:31:22.860 --> 00:31:26.210\nWell if I can type it in\na way that I can remember.\n\n652\n00:31:27.950 --> 00:31:31.600\nAnd then I need to provide it twice or\nit's not going to be happy.\n\n653\n00:31:31.600 --> 00:31:33.600\nActually, you know what,\nit's not going to ask twice is it?\n\n654\n00:31:33.600 --> 00:31:35.930\nJust needs it once,\nthat's a great room for mistake.\n\n655\n00:31:35.930 --> 00:31:40.390\nSo I'll go ahead and create that, and\nnow it's importing that database.\n\n656\n00:31:40.390 --> 00:31:43.087\nNow here's the think,\nnotice this little pop up that I got here.\n\n657\n00:31:43.087 --> 00:31:47.850\nIt has submitted, I've done\na request to import the database.\n\n658\n00:31:47.850 --> 00:31:50.206\nIt's not actually\nimporting the database yet.\n\n659\n00:31:50.206 --> 00:31:53.525\n>> There's a committee that it has to\ngo through, and they vote up and down.\n\n660\n00:31:53.525 --> 00:31:54.280\n[LAUGH]\n>> You'd think,\n\n661\n00:31:54.280 --> 00:31:55.980\nthe amount of time that it takes.\n\n662\n00:31:55.980 --> 00:31:58.540\nIt really takes a long time.\n\n663\n00:31:58.540 --> 00:31:59.580\nBe prepared for this.\n\n664\n00:31:59.580 --> 00:32:03.025\nDo not expect this database to import\nin five or ten minutes, all right.\n\n665\n00:32:03.025 --> 00:32:08.006\nIn fact, before the show, I ran through my\nhuman resources database and imported it,\n\n666\n00:32:08.006 --> 00:32:10.280\nthe one that I just brought in.\n\n667\n00:32:10.280 --> 00:32:12.440\nIt took eight hours, all right.\n\n668\n00:32:12.440 --> 00:32:14.480\nBasically you get thrown into a queue.\n\n669\n00:32:14.480 --> 00:32:18.220\nAnd Microsoft is processing these\nimports in the order they come in.\n\n670\n00:32:18.220 --> 00:32:20.730\nAnd it's not just you,\nit's all of Microsoft's customers.\n\n671\n00:32:20.730 --> 00:32:24.250\nAnd so they're running them in a way\nthat doesn't affect the performance of\n\n672\n00:32:24.250 --> 00:32:25.460\nother systems.\n\n673\n00:32:25.460 --> 00:32:28.460\nAnd it gets low priority,\nso it can take a while.\n\n674\n00:32:28.460 --> 00:32:32.620\nNow the smaller your database is,\nthe shorter that time will be.\n\n675\n00:32:32.620 --> 00:32:35.220\nSo you might be able to get it shorter,\nand if it's at a time when the servers\n\n676\n00:32:35.220 --> 00:32:38.550\naren't all that busy,\nmaybe it does happen really fast for you.\n\n677\n00:32:38.550 --> 00:32:41.100\nBut most of the time it's\ngonna get queued, all right?\n\n678\n00:32:41.100 --> 00:32:44.100\nAnd so if you wanna monitor\nthe status of that import,\n\n679\n00:32:44.100 --> 00:32:45.490\nyou can do it a few different ways, right.\n\n680\n00:32:45.490 --> 00:32:49.370\nIf you're still in the console like I am,\nyou can go up to your little bell, and\n\n681\n00:32:49.370 --> 00:32:51.800\nit shows where the request was submitted,\nand you can click on that.\n\n682\n00:32:51.800 --> 00:32:53.190\nAnd when you click on it,\n\n683\n00:32:53.190 --> 00:32:56.660\nit will take you right to where you can\nmonitor the status of that import, right?\n\n684\n00:32:56.660 --> 00:32:59.150\nSo I can see that it was\nsubmitted one minute ago,\n\n685\n00:32:59.150 --> 00:33:00.580\nbut it's not being processed yet.\n\n686\n00:33:00.580 --> 00:33:03.530\nIt just says that it's submitted and\nthat's it, right?\n\n687\n00:33:03.530 --> 00:33:06.320\nAnd if I wanna monitor this later on,\n\n688\n00:33:06.320 --> 00:33:09.790\nand I don't have it in the bell any more,\nyou can actually navigate to it.\n\n689\n00:33:09.790 --> 00:33:13.330\nIt even tells you right here, you just go\nto SQL servers, you choose the server, and\n\n690\n00:33:13.330 --> 00:33:14.620\nthen go to import export history.\n\n691\n00:33:14.620 --> 00:33:16.650\nBut let me show you that cuz\nit's kind of hard to find.\n\n692\n00:33:16.650 --> 00:33:21.010\nIf I go to SQL servers, and\n\n693\n00:33:21.010 --> 00:33:24.320\nthen I'm gonna pick the server\nthat I want, I took a sample.\n\n694\n00:33:24.320 --> 00:33:27.420\nAnd the reason it's hard to find is\nthere's not a button up here at the top,\n\n695\n00:33:27.420 --> 00:33:30.090\nit's actually nested way down\nhere under the databases.\n\n696\n00:33:30.090 --> 00:33:35.750\nIf I scroll down in this bottom pane,\nyou'll see all these little windows and\n\n697\n00:33:35.750 --> 00:33:40.908\none of these tiles, right there, will\nlight up with Import/Export history, okay?\n\n698\n00:33:40.908 --> 00:33:43.510\nSo you gotta know to look for that, it's\noff the screen no matter how high your\n\n699\n00:33:43.510 --> 00:33:45.460\nresolution is, it's always off the screen.\n\n700\n00:33:45.460 --> 00:33:48.080\nAnd you can browse and\nfind out and when you click on it,\n\n701\n00:33:48.080 --> 00:33:51.940\nit'll show all of your import export\nrequests and you can monitor those.\n\n702\n00:33:51.940 --> 00:33:54.820\nAnd so,\nheres the one that I just queued up.\n\n703\n00:33:54.820 --> 00:33:56.610\nAnd, oh my goodness,\ndid it finish already?\n\n704\n00:33:56.610 --> 00:34:00.040\nOh, no, no, that's 4:26 PM,\nthat can't be right, so.\n\n705\n00:34:01.070 --> 00:34:03.630\nBut you can see some of these other ones.\n\n706\n00:34:03.630 --> 00:34:05.710\nActually, it is showing as\nbeing completed already.\n\n707\n00:34:05.710 --> 00:34:07.510\nThis will be,\nif this is completed already,\n\n708\n00:34:07.510 --> 00:34:10.250\nthis will literally be the fastest\none that I've ever done.\n\n709\n00:34:10.250 --> 00:34:13.949\nLet me jump over to my SQL databases and\nsee if I have a human resources database.\n\n710\n00:34:15.690 --> 00:34:18.920\nOh my goodness, that is literally\nthe fastest I've ever seen this happen.\n\n711\n00:34:18.920 --> 00:34:19.571\nThat is ridiculous!\n\n712\n00:34:19.571 --> 00:34:21.591\nYeah, I'll never be able to recreate that.\n\n713\n00:34:21.591 --> 00:34:22.207\n>> No, no.\n\n714\n00:34:22.207 --> 00:34:24.640\n>> All right, well, I don't want\nto get your expectations too high.\n\n715\n00:34:24.640 --> 00:34:26.700\nI have never seen one go that fast.\n\n716\n00:34:26.700 --> 00:34:27.750\nThat is really amazing.\n\n717\n00:34:27.750 --> 00:34:30.340\nBut I've got a human resources\ndatabase right there.\n\n718\n00:34:30.340 --> 00:34:33.610\nAnd if I jump back to my\nSQL Management Studio, right,\n\n719\n00:34:33.610 --> 00:34:36.180\nit's not gonna show it yet cuz it\ndoesn't refresh automatically, right?\n\n720\n00:34:36.180 --> 00:34:40.560\nSo here's my Azure cloud, and\nI'm gonna refresh my database.\n\n721\n00:34:40.560 --> 00:34:44.630\nAnd there's HumanResources, and if I\nexpand that out, then I can come in here,\n\n722\n00:34:44.630 --> 00:34:48.360\nI can look for Tables,\nand there's dbo.Employees.\n\n723\n00:34:48.360 --> 00:34:52.409\nAnd if I do a quick Select Top 1,000 Rows,\nwe can look and\n\n724\n00:34:52.409 --> 00:34:55.810\nit's gonna run that query, and\nit's gonna export the rows, there we go.\n\n725\n00:34:55.810 --> 00:34:57.860\nAnd there's my data.\n\n726\n00:34:57.860 --> 00:35:03.160\nRight, so it actually brought data\nalong with it, and it's up and going.\n\n727\n00:35:03.160 --> 00:35:04.680\nIt's literally the fastest\none I've ever seen.\n\n728\n00:35:04.680 --> 00:35:05.810\nIt's amazing.\n\n729\n00:35:05.810 --> 00:35:09.000\nOne of the things I have in my notes to\nexplain to you guys as part of the show\n\n730\n00:35:09.000 --> 00:35:12.340\nis, hey, it takes a long time,\nit really stinks, and so\n\n731\n00:35:12.340 --> 00:35:13.350\nhere's a way to speed it up.\n\n732\n00:35:13.350 --> 00:35:14.900\nBut in my case,\nI don't have to speed it up at all.\n\n733\n00:35:14.900 --> 00:35:16.930\nI guess it was a really small database.\n\n734\n00:35:16.930 --> 00:35:21.910\nOne of the tricks that I use\nto speed this up is sometimes\n\n735\n00:35:21.910 --> 00:35:26.430\nI'll do a backpack like this but\nnot include the data, right?\n\n736\n00:35:26.430 --> 00:35:29.460\nWe'll use like the transact SQL scripts\nthat we talked about at the beginning.\n\n737\n00:35:29.460 --> 00:35:31.250\nBring those along to create\nthe infrastructure and\n\n738\n00:35:31.250 --> 00:35:34.300\nthen use bulk copy protocol to send\nthe data in on my own schedule.\n\n739\n00:35:34.300 --> 00:35:36.900\nThe problem with doing that is\nyou're limited by the DTUs.\n\n740\n00:35:36.900 --> 00:35:40.460\nWhen Microsoft does it,\nthey're not limited by the DTUs.\n\n741\n00:35:40.460 --> 00:35:43.370\nRestoring that backup doesn't\ncount as database throughput.\n\n742\n00:35:43.370 --> 00:35:44.960\nIt's something they do on the back end.\n\n743\n00:35:44.960 --> 00:35:46.090\nThat's why you get queued up.\n\n744\n00:35:46.090 --> 00:35:49.600\nI guess I just lucked out and got to the,\nmaybe they knew I was doing the show,\n\n745\n00:35:49.600 --> 00:35:52.380\nand they were like, let's prioritize\nDon's so that he doesn't have to wait.\n\n746\n00:35:52.380 --> 00:35:54.850\n>> You know they watch\nthe show from up there.\n\n747\n00:35:54.850 --> 00:35:55.590\n>> Sometimes I wonder.\n\n748\n00:35:55.590 --> 00:35:59.340\nSo, but anyhow, this one's restored so\nwe don't have to speed it up at all.\n\n749\n00:35:59.340 --> 00:36:01.400\nIt's just gonna knock it out and\nwe're done.\n\n750\n00:36:01.400 --> 00:36:03.670\nBut now my database is up in Azure.\n\n751\n00:36:03.670 --> 00:36:06.520\nAnd I still have my local database so\nif I had flipped my local\n\n752\n00:36:06.520 --> 00:36:10.850\ndatabase into read only mode, people could\nstill be in it, just not making changes.\n\n753\n00:36:10.850 --> 00:36:14.303\nAnd then I could redirect my clients up\nto the one up in Azure, and off we go.\n\n754\n00:36:14.303 --> 00:36:15.522\nIf we use a DNS name space,\n\n755\n00:36:15.522 --> 00:36:18.799\nwe could just redirect the DNS name\nspace to point to the new database.\n\n756\n00:36:18.799 --> 00:36:21.670\nAnd now people connect to it and\nwe just migrated to Azure,\n\n757\n00:36:21.670 --> 00:36:25.021\nthe whole database in tact,\nall its components, all right there.\n\n758\n00:36:25.021 --> 00:36:28.958\nUsing the backpack method really is the\nbest way to get your database into Azure.\n\n759\n00:36:28.958 --> 00:36:30.869\n>> Yeah, it seemed to be very,\nvery effective,\n\n760\n00:36:30.869 --> 00:36:33.082\neven more effective than\nyou expected it to be, Don.\n\n761\n00:36:33.082 --> 00:36:33.699\n>> [LAUGH] I know.\n\n762\n00:36:33.699 --> 00:36:36.629\n>> So that is definitely\nthe way to go when it comes\n\n763\n00:36:36.629 --> 00:36:38.668\nto importing these databases.\n\n764\n00:36:38.668 --> 00:36:41.593\nAnd moving your database from\non premise up into Azure,\n\n765\n00:36:41.593 --> 00:36:44.370\nthat definitely seems to\nbe the way to rock it.\n\n766\n00:36:44.370 --> 00:36:46.710\nWell Don, is there any parting\nwords of wisdom that you have for\n\n767\n00:36:46.710 --> 00:36:48.100\nour viewers before we let them go?\n\n768\n00:36:48.100 --> 00:36:49.380\n>> I think that's about it.\n\n769\n00:36:49.380 --> 00:36:55.220\nOne thing I will say is I'm going to use\nthe old X-Files quote, the trust no one.\n\n770\n00:36:55.220 --> 00:36:58.450\nEven though my import was fully\nsuccessful, even though I didn't see any\n\n771\n00:36:58.450 --> 00:37:00.780\nerrors along the way, you always\nwanna double check your data, right?\n\n772\n00:37:00.780 --> 00:37:04.220\nJust verify that it is fully intact,\nthat things are working.\n\n773\n00:37:04.220 --> 00:37:07.280\nRun some tests, don't just blindly flip\npeople over to this new database assuming\n\n774\n00:37:07.280 --> 00:37:08.340\nit's all complete.\n\n775\n00:37:08.340 --> 00:37:11.980\nBecause we more than likely, we have other\nthings like firewall security rules that\n\n776\n00:37:11.980 --> 00:37:14.730\nwe have to set and stuff before\npeople can actually access it.\n\n777\n00:37:14.730 --> 00:37:17.450\nSo it might look fine, but\nthere might still be other problems.\n\n778\n00:37:17.450 --> 00:37:19.720\nDefinitely look in there for those and\nmake sure things are working.\n\n779\n00:37:19.720 --> 00:37:20.590\nDo your testing.\n\n780\n00:37:20.590 --> 00:37:21.110\n>> Awesome.\n\n781\n00:37:21.110 --> 00:37:22.970\nWell, wise words by Mr. Don Pezet.\n\n782\n00:37:22.970 --> 00:37:24.760\nFollow and love him, and know them.\n\n783\n00:37:24.760 --> 00:37:26.910\nThat being said, we've come to\nthe end of another great episode.\n\n784\n00:37:26.910 --> 00:37:27.800\nHopefully, you've enjoyed it.\n\n785\n00:37:27.800 --> 00:37:29.110\nWe've had a great time making it.\n\n786\n00:37:29.110 --> 00:37:30.960\nWe're gonna go ahead and\nsign off for ITProTV.\n\n787\n00:37:30.960 --> 00:37:32.710\nI've been your host, Daniel Lowry.\n\n788\n00:37:32.710 --> 00:37:33.364\n>> And I'm Don Pezet.\n\n789\n00:37:33.364 --> 00:37:34.828\n>> And we'll see you next time.\n\n790\n00:37:34.828 --> 00:37:41.650\n[MUSIC]\n\n",
          "vimeoId": "149027101"
        },
        {
          "description": "In this episode, Daniel and Don show you how to create Tables and input data into an Azure SQL database. First they demonstrate creating tables in SQL and dive into some of the information that will be necessary for proper table creation and functionality. Then they show you how to create data to populate the tables as well as queries to retrieve data.",
          "length": "1807",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-azuresql/techskills-azuresql-2-2-tables_data-120915-1.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-azuresql/techskills-azuresql-2-2-tables_data-120915-1-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-azuresql/techskills-azuresql-2-2-tables_data-120915-1-sm.jpg",
          "title": "Tables and Data",
          "transcript": "WEBVTT\n\n1\n00:00:00.023 --> 00:00:10.023\n[MUSIC]\n\n2\n00:00:12.062 --> 00:00:16.950\nAll right, greetings everyone, and welcome\nto another exciting episode of IT Pro TV.\n\n3\n00:00:16.950 --> 00:00:18.810\nI'm your host, Daniel Lowrie.\n\n4\n00:00:18.810 --> 00:00:19.960\nAnd in today's episode,\n\n5\n00:00:19.960 --> 00:00:23.620\nwe're gonna continue on with\na little bit of Microsoft Azure SQL.\n\n6\n00:00:23.620 --> 00:00:27.930\nAnd joining me in the studio today, one of\nour resident experts on that topic is none\n\n7\n00:00:27.930 --> 00:00:30.130\nother than my good friend, Mr. Don Pezet.\n\n8\n00:00:30.130 --> 00:00:31.440\nDon, welcome to the show.\n\n9\n00:00:31.440 --> 00:00:32.380\nAnd how's it going today?\n\n10\n00:00:32.380 --> 00:00:33.370\n>> It is going great Daniel.\n\n11\n00:00:33.370 --> 00:00:34.620\nThanks for having me back on the show.\n\n12\n00:00:34.620 --> 00:00:38.340\nAnd in this episode, I want to take\na step off the beaten path, right?\n\n13\n00:00:38.340 --> 00:00:42.360\nWe've been talking a lot about Azure SQL\nand getting our databases up in there,\n\n14\n00:00:42.360 --> 00:00:47.000\nhow to get connected to them,\nhow to migrate existing databases over.\n\n15\n00:00:47.000 --> 00:00:52.150\nBut you might be tasked with creating\na brand new database from scratch.\n\n16\n00:00:52.150 --> 00:00:55.880\nAnd the developers might be giving\nyou certain requirements of\n\n17\n00:00:55.880 --> 00:00:59.780\nwhat they need available in that database\nand it's up to you to create it.\n\n18\n00:00:59.780 --> 00:01:05.280\nSo I want to start doing that dangerous\nthing where a sysadmin starts to step into\n\n19\n00:01:05.280 --> 00:01:10.720\nthe developer side just a little bit and\ngive you guys a primer on Transact-SQL.\n\n20\n00:01:10.720 --> 00:01:13.990\nThe way that tables are built,\nthe way that data is stored in the table,\n\n21\n00:01:13.990 --> 00:01:17.830\nthe way that we insert data and\nretrieve data from a table.\n\n22\n00:01:17.830 --> 00:01:22.030\nThese are things that a normal sysadmin\ndoesn't do, I guess a DevOps admin would.\n\n23\n00:01:22.030 --> 00:01:25.740\nBut a developer or a DBA, they're\nabsolutely gonna do this all the time.\n\n24\n00:01:25.740 --> 00:01:29.500\nBut you should have at least a basic\nunderstanding of Transact-SQL and\n\n25\n00:01:29.500 --> 00:01:31.120\nthen how to interact with the server.\n\n26\n00:01:31.120 --> 00:01:33.880\nBecause there may be times where you\nneed to do that yourself, if for\n\n27\n00:01:33.880 --> 00:01:36.900\nno other reason than to\nverify the server is working.\n\n28\n00:01:36.900 --> 00:01:39.770\nWe're gonna talk about some other\ntechnologies later on, like indexes and\n\n29\n00:01:39.770 --> 00:01:42.780\nquery optimization where we need to\nhave a basic understanding of queries.\n\n30\n00:01:42.780 --> 00:01:45.660\nSo I just wanna walk you guys\nthrough that here in this episode.\n\n31\n00:01:45.660 --> 00:01:49.560\nAnd we'll see something that we don't\nnormally have to worry about as an admin.\n\n32\n00:01:49.560 --> 00:01:51.890\n>> Yeah Don.\nThis is actually a really good skill for\n\n33\n00:01:51.890 --> 00:01:52.940\neverybody out there watching.\n\n34\n00:01:52.940 --> 00:01:58.312\nIf you don't have any SQL experience, this\nis gonna be a good lesson for you guys.\n\n35\n00:01:58.312 --> 00:02:01.807\nBecause I was telling Don, I actually\nlook at Monster job posts because it's\n\n36\n00:02:01.807 --> 00:02:04.450\na horrible working environment here,\nsomeone help me.\n\n37\n00:02:04.450 --> 00:02:09.750\n[LAUGH] I watch to see what trends\nare happening in the IT workplace,\n\n38\n00:02:09.750 --> 00:02:12.480\nand one of them is a normal\nsys administrator or\n\n39\n00:02:12.480 --> 00:02:17.030\na sys admin is almost required to\nhave some level of SQL knowledge.\n\n40\n00:02:17.030 --> 00:02:19.960\nSo if you don't have any this\nis a great show for you.\n\n41\n00:02:19.960 --> 00:02:24.480\n>> All right, so one of the problems that\nwe bump into is that developers, DBAs,\n\n42\n00:02:24.480 --> 00:02:28.050\nthey have this great habit of not\ngiving you enough information.\n\n43\n00:02:28.050 --> 00:02:30.150\nAsking you to do something and\nnot giving you enough information.\n\n44\n00:02:30.150 --> 00:02:33.290\nAnd if you don't know what to get,\nyou start to have some problems, right?\n\n45\n00:02:33.290 --> 00:02:34.800\nSo let me just give you an example.\n\n46\n00:02:34.800 --> 00:02:38.070\nMaybe, well, I have a human resources\ndatabase that I've been using.\n\n47\n00:02:38.070 --> 00:02:41.830\nAnd in the human resources database,\nI've got a table for employees.\n\n48\n00:02:41.830 --> 00:02:43.978\nAnd I might want a table for\ndepartments, and so on.\n\n49\n00:02:43.978 --> 00:02:45.809\nI might want different tables for\ndifferent things for\n\n50\n00:02:45.809 --> 00:02:47.460\nhow my company's organized.\n\n51\n00:02:47.460 --> 00:02:50.520\nAnd so a developer tells me, they say,\nhey, I need a table there with employees,\n\n52\n00:02:50.520 --> 00:02:55.450\nand it needs first name and\nlast name, phone number, and address.\n\n53\n00:02:55.450 --> 00:02:59.015\nAnd so, in my mind,\nI start thinking spreadsheet-style, right,\n\n54\n00:02:59.015 --> 00:03:00.618\nI think like Microsoft Excel.\n\n55\n00:03:00.618 --> 00:03:02.450\nHere, I'll fire up Excel.\n\n56\n00:03:02.450 --> 00:03:06.620\nAnd, so if I were to create something in\nExcel like this, I might have first name\n\n57\n00:03:06.620 --> 00:03:11.870\nand last name,\nI might have department, phone number.\n\n58\n00:03:11.870 --> 00:03:15.390\nIf I want address,\nI might have Address1, so I'll try and\n\n59\n00:03:15.390 --> 00:03:18.610\nspell it right, Address2 and so on.\n\n60\n00:03:18.610 --> 00:03:21.682\nAnd then in table type fashion\nI would just add each person.\n\n61\n00:03:21.682 --> 00:03:27.626\nSo I might say Don Pezet, department\nis Edutainers, edutainer department.\n\n62\n00:03:27.626 --> 00:03:32.571\nPhone number, 555-1212, right, good old\ntrusty Hollywood number, and so on, right?\n\n63\n00:03:32.571 --> 00:03:33.895\nSo we specified all of that information.\n\n64\n00:03:33.895 --> 00:03:37.010\nAll I needed to know were the column\nnames, and I'm in business.\n\n65\n00:03:38.140 --> 00:03:40.240\nBut SQL needs to know more.\n\n66\n00:03:40.240 --> 00:03:41.990\nMicrosoft SQL, when it stores its data,\n\n67\n00:03:41.990 --> 00:03:45.240\nit's storing it in a highly\noptimized manner, and so\n\n68\n00:03:45.240 --> 00:03:48.530\nthere's a lot of additional information\nwe need to know to get the set right.\n\n69\n00:03:49.630 --> 00:03:52.359\nFor example, when I have a first name,\n\n70\n00:03:52.359 --> 00:03:57.180\nwhat's the maximum amount of\ncharacters I might use for first name?\n\n71\n00:03:57.180 --> 00:03:59.150\nWell, my first name's only three letters.\n\n72\n00:03:59.150 --> 00:04:01.170\nSo that's not gonna take a lot of\nspace on the hard drive, is it?\n\n73\n00:04:01.170 --> 00:04:02.020\nIt's just three letters.\n\n74\n00:04:02.020 --> 00:04:03.270\nPow, done.\n\n75\n00:04:03.270 --> 00:04:05.630\nBut, your name is Daniel.\n\n76\n00:04:05.630 --> 00:04:07.530\nI'm informing you on this,\nin case you didn't know.\n\n77\n00:04:07.530 --> 00:04:09.750\nSo you've got six letters.\n\n78\n00:04:09.750 --> 00:04:12.370\nSo you take twice as much storage as me,\nright?\n\n79\n00:04:12.370 --> 00:04:15.750\nBecause, well, not necessarily,\nit all comes down to the bytes, and so on.\n\n80\n00:04:15.750 --> 00:04:19.070\nBut you could potentially take twice\nas much storage as me cuz your name is\n\n81\n00:04:19.070 --> 00:04:20.110\ntwice as long.\n\n82\n00:04:20.110 --> 00:04:24.700\nNow, with SQL, when it writes this data to\nthe hard drive, it has to make a decision.\n\n83\n00:04:24.700 --> 00:04:29.490\nDo I provision out a block of data\nthat's the same for everybody, or\n\n84\n00:04:29.490 --> 00:04:34.970\ndo I provision a block of data that's\nsmall and grows as it fills up, okay?\n\n85\n00:04:34.970 --> 00:04:38.870\nWell, if I provision a block of data for\neverybody, let's say that I said\n\n86\n00:04:38.870 --> 00:04:42.540\neverybody in my company has 250\ncharacters for their first name, right?\n\n87\n00:04:42.540 --> 00:04:44.650\nYou're gonna have 250 characters.\n\n88\n00:04:44.650 --> 00:04:48.720\nMy name's Don, so I just wasted\n247 characters worth of space.\n\n89\n00:04:49.730 --> 00:04:55.320\nBut by setting that block of storage aside\nfor me, I can increase my name or decrease\n\n90\n00:04:55.320 --> 00:04:58.710\nmy name in the future and it wouldn't\naffect database performance at all.\n\n91\n00:04:58.710 --> 00:05:00.040\nThat space is already set aside.\n\n92\n00:05:01.230 --> 00:05:05.110\nI could have also done a variable\nsize where we said, all right,\n\n93\n00:05:05.110 --> 00:05:08.370\nit's going to be up to 250 characters.\n\n94\n00:05:08.370 --> 00:05:11.750\nNow when I put in three characters,\nit just takes three characters of space.\n\n95\n00:05:11.750 --> 00:05:15.230\nBut if I decide to increase my name,\nlet's say I go to Donald.\n\n96\n00:05:15.230 --> 00:05:16.550\nAnd when I do that,\n\n97\n00:05:16.550 --> 00:05:18.910\nit might be out of room at the spot\nwhere that data is written right now.\n\n98\n00:05:18.910 --> 00:05:21.730\nSo now it's got to move it to\na different place on the hard drive, and\n\n99\n00:05:21.730 --> 00:05:23.310\nthat affects performance.\n\n100\n00:05:23.310 --> 00:05:27.080\nWhenever you change the size of\nyour data on a variable data type,\n\n101\n00:05:27.080 --> 00:05:28.590\nit affects performance.\n\n102\n00:05:28.590 --> 00:05:34.320\nSo, it's more efficient, but hurts\nperformance, versus doing a static set\n\n103\n00:05:34.320 --> 00:05:40.540\nof size for each person is not efficient,\nbut is great for performance.\n\n104\n00:05:40.540 --> 00:05:41.992\nThese are the choices we have to make.\n\n105\n00:05:41.992 --> 00:05:45.045\nAnd if somebody asks you to create a table\nand they don't tell you that information,\n\n106\n00:05:45.045 --> 00:05:46.507\nyou've gotta figure it out yourself and\n\n107\n00:05:46.507 --> 00:05:49.259\nthat's not realistic cuz you don't\nknow how they're gonna use that data.\n\n108\n00:05:50.260 --> 00:05:53.750\nSo I wanna show you guys how to\nmake a table, and I wanna show you\n\n109\n00:05:53.750 --> 00:05:57.060\nthe various data types and other things\nthat we need to know to ask about.\n\n110\n00:05:57.060 --> 00:05:59.660\nWhen somebody says, hey,\nI need a table, these are the follow up\n\n111\n00:05:59.660 --> 00:06:02.900\nquestions we need to have before we start\ncreating them and turning them loose.\n\n112\n00:06:02.900 --> 00:06:06.090\nWhat I normally say is, here,\nlet me give you a SQL admin account,\n\n113\n00:06:06.090 --> 00:06:06.855\ncreate it yourself.\n\n114\n00:06:06.855 --> 00:06:08.680\n>> [LAUGH]\n>> That's what I like, right?\n\n115\n00:06:08.680 --> 00:06:11.280\nBut in this world of dev ops,\nsometimes they expect us to do it and so\n\n116\n00:06:11.280 --> 00:06:12.410\nnow we've gotta get\na little more involved.\n\n117\n00:06:12.410 --> 00:06:18.430\nSo let me jump into my Azure environment,\nand then I'm in my SQL Management Studio.\n\n118\n00:06:18.430 --> 00:06:20.890\nSo just like we've been\nmost of this series.\n\n119\n00:06:20.890 --> 00:06:25.290\nAnd I'm gonna take that human\nresources database that I have.\n\n120\n00:06:25.290 --> 00:06:30.260\nIt doesn't have much in it,\nI created a table called Employees, right?\n\n121\n00:06:30.260 --> 00:06:31.720\nBut let's say I didn't have that table.\n\n122\n00:06:31.720 --> 00:06:34.810\nI'm just gonna delete\nthat turkey out of there.\n\n123\n00:06:34.810 --> 00:06:39.520\nAnd once I get rid of that,\nso I'll delete it and\n\n124\n00:06:39.520 --> 00:06:41.370\nwe'll recreate that Employees table.\n\n125\n00:06:41.370 --> 00:06:45.210\nAll right so, oh shoot actually I'm\ndoing that in the cloud, all right.\n\n126\n00:06:45.210 --> 00:06:46.130\nWell, that's fine.\n\n127\n00:06:46.130 --> 00:06:50.092\nSo, I just deleted that table out of there\nand I wanna create a new table, okay?\n\n128\n00:06:50.092 --> 00:06:52.970\nSo, [LAUGH] I had an oh\nshoot panic moment there.\n\n129\n00:06:52.970 --> 00:06:56.600\nI delete tables off my local machine all\nthe time, but when I delete something from\n\n130\n00:06:56.600 --> 00:06:59.010\nthe cloud I always have that freakout of,\nis that in production?\n\n131\n00:06:59.010 --> 00:07:01.480\nAnd I have to remember, no,\nthat's my test database, what do I care?\n\n132\n00:07:01.480 --> 00:07:07.530\nSo, if I wanna create a table, all I have\nto do is right-click on that Tables menu\n\n133\n00:07:07.530 --> 00:07:10.210\nand, if I can figure out where\nmy mouse is, there we go.\n\n134\n00:07:10.210 --> 00:07:12.480\nRight click on Tables,\ngo to New, then Table.\n\n135\n00:07:13.480 --> 00:07:16.180\nThere's special tables,\nlike memory optimized tables,\n\n136\n00:07:16.180 --> 00:07:17.240\nthat we won't get into here.\n\n137\n00:07:17.240 --> 00:07:19.830\nBut you can create really efficient ones\nif you know there's going to be massive\n\n138\n00:07:19.830 --> 00:07:20.800\namounts of data.\n\n139\n00:07:20.800 --> 00:07:22.480\nBut I'm going to create a new table.\n\n140\n00:07:22.480 --> 00:07:23.670\nAnd when I create a new table,\n\n141\n00:07:23.670 --> 00:07:27.680\nI get this nice little graphical\nuser interface sort of, right?\n\n142\n00:07:27.680 --> 00:07:32.680\nAnd it's asking me to specify the name\nof the column, and the data type.\n\n143\n00:07:32.680 --> 00:07:34.640\nSo I might wanna create\nthis employee table.\n\n144\n00:07:34.640 --> 00:07:38.460\nSo I decide I'm gonna\nhave First Name right, so\n\n145\n00:07:38.460 --> 00:07:40.210\nFirst Name is gonna be\nthe name of this one, and\n\n146\n00:07:40.210 --> 00:07:44.556\nthen see what just appeared over\nhere in Data Type, nchar(10).\n\n147\n00:07:44.556 --> 00:07:47.490\nAll right what the heck is that?\n\n148\n00:07:47.490 --> 00:07:52.020\nWell if you drop down this Data Type,\nyou'll see that there are just a few\n\n149\n00:07:52.020 --> 00:07:54.810\ndifferent data types\nthat we can pick from.\n\n150\n00:07:54.810 --> 00:07:59.422\nSQL needs to know what type of data this\nis so it can optimize the retrieval of it.\n\n151\n00:07:59.422 --> 00:08:02.267\nWhen we go to get the data back out again,\nit's gotta know what type it is.\n\n152\n00:08:02.267 --> 00:08:04.902\nAnd so,\nit's assuming that I want characters.\n\n153\n00:08:04.902 --> 00:08:09.051\nNow I've got nchar (10),\nI've got nvchar (50), and\n\n154\n00:08:09.051 --> 00:08:14.620\nsomewhere we've got just regular old\nchar (10) right there, all right.\n\n155\n00:08:14.620 --> 00:08:15.960\nSo, what do these mean?\n\n156\n00:08:15.960 --> 00:08:19.150\nWell, if I choose char (10),\nlet's just start with that one, right?\n\n157\n00:08:19.150 --> 00:08:23.720\nThis means that I'm gonna have characters\nso, letters, numbers, special characters,\n\n158\n00:08:23.720 --> 00:08:28.560\nwhatever, stored in this field up to 10.\n\n159\n00:08:28.560 --> 00:08:31.730\nSo 10 bytes kind of set aside for\nthis and that's it.\n\n160\n00:08:32.870 --> 00:08:38.460\nNow, when I do that, what if I have\nsomebody who's name only takes one byte?\n\n161\n00:08:38.460 --> 00:08:40.250\nWell, then I just wasted 9 bytes.\n\n162\n00:08:40.250 --> 00:08:43.100\nOr what if I have somebody who's\ngo more than 10 characters,\n\n163\n00:08:43.100 --> 00:08:45.560\nthen they're gonna get truncated.\n\n164\n00:08:45.560 --> 00:08:46.670\nThis is it, right?\n\n165\n00:08:46.670 --> 00:08:47.370\nBut I can change that.\n\n166\n00:08:47.370 --> 00:08:51.893\nYou can actually edit this and\nI can change it to char(250).\n\n167\n00:08:51.893 --> 00:08:54.740\nAnd now, it's gonna set aside\n250 characters of space, right?\n\n168\n00:08:54.740 --> 00:08:56.990\nSo there we go and\nwe've got that available, right?\n\n169\n00:08:56.990 --> 00:08:58.880\nSo that's what character is.\n\n170\n00:08:58.880 --> 00:09:00.680\nBut it's hard set.\n\n171\n00:09:00.680 --> 00:09:03.420\nIt's taking all of that space.\n\n172\n00:09:03.420 --> 00:09:07.770\nIf I add a v before it, then it'll\nbecome a variable character, and\n\n173\n00:09:07.770 --> 00:09:09.950\nif I scroll down,\nthey probably already have that one.\n\n174\n00:09:09.950 --> 00:09:12.110\nHere it is, oh, not just v, var.\n\n175\n00:09:12.110 --> 00:09:16.370\nSo variable character, and\nI can set that one to 250.\n\n176\n00:09:16.370 --> 00:09:21.710\nNow, if they just have one letter,\nit'll take one, and that's it.\n\n177\n00:09:21.710 --> 00:09:23.420\nBut if it had 250, it'll take 250.\n\n178\n00:09:23.420 --> 00:09:27.150\nIt'll give people the space they need\nwhich is very efficient for storage.\n\n179\n00:09:27.150 --> 00:09:29.040\nWell, when we're storing stuff in Azure,\n\n180\n00:09:29.040 --> 00:09:30.960\nwe don't normally worry\nabout the storage so much.\n\n181\n00:09:30.960 --> 00:09:34.150\nSo I'd rather use a fixed number and\nget the performance out of it\n\n182\n00:09:34.150 --> 00:09:36.500\nthan use a variable one just\ncuz I'm trying to save space.\n\n183\n00:09:36.500 --> 00:09:37.600\nStorage is cheap, right?\n\n184\n00:09:37.600 --> 00:09:39.960\nAlthough we do have our maximum\ndatabase sizes to worry about, so\n\n185\n00:09:39.960 --> 00:09:40.850\nyou got to think about that too.\n\n186\n00:09:42.060 --> 00:09:46.620\nNow, you'll also notice that there\nare ones that were n character,\n\n187\n00:09:46.620 --> 00:09:48.480\nan n variable character, right?\n\n188\n00:09:48.480 --> 00:09:51.644\nRight, there was an n before them,\nlet me find those.\n\n189\n00:09:51.644 --> 00:09:52.783\nThe one's with ns,\n\n190\n00:09:52.783 --> 00:09:56.860\nthose are actually going to be\nusing Unicode characters, right?\n\n191\n00:09:56.860 --> 00:10:00.680\nNormally they're using,\nit's either ANSI or ASCII, or both?\n\n192\n00:10:00.680 --> 00:10:04.220\nI mix those up sometimes, but\nit's using those standard character sets.\n\n193\n00:10:04.220 --> 00:10:05.960\nBut in today's world,\nmost of us have moved to Unicode,\n\n194\n00:10:05.960 --> 00:10:07.350\nthanks to international characters.\n\n195\n00:10:07.350 --> 00:10:11.680\nYou might have other language data,\nthis is an employee table, so\n\n196\n00:10:11.680 --> 00:10:15.380\nI might have somebody from Spain, and\nthey've got that eÃ±e in their name, or\n\n197\n00:10:15.380 --> 00:10:17.880\nsomething special like that,\nso I might want to go Unicode.\n\n198\n00:10:17.880 --> 00:10:21.743\nActually, I'm pretty sure ANSI handles\nthat one, but there's other ones,\n\n199\n00:10:21.743 --> 00:10:24.977\nlike the Euro symbol or\nwhatever that may or may not be supported.\n\n200\n00:10:24.977 --> 00:10:28.229\nSo, we can do n to make sure that\nwe're getting those as Unicode.\n\n201\n00:10:29.380 --> 00:10:32.230\nAnd we've got n variable character,\nn character and so on.\n\n202\n00:10:32.230 --> 00:10:33.080\nRight?\nSo\n\n203\n00:10:33.080 --> 00:10:35.690\nthose are some of the character examples.\n\n204\n00:10:35.690 --> 00:10:37.970\nThere's plenty of other data\ntypes that are out there though.\n\n205\n00:10:37.970 --> 00:10:45.031\nSo for example I've got last name which\nmaybe I'll set that to n character 250.\n\n206\n00:10:45.031 --> 00:10:48.258\n>> The hockey players and\nfield goal kickers union will thank you.\n\n207\n00:10:48.258 --> 00:10:51.860\n[LAUGH]\n>> I might have a phone number.\n\n208\n00:10:51.860 --> 00:10:53.310\nRight, now phone number's a weird one.\n\n209\n00:10:53.310 --> 00:10:57.730\nI'm gonna leave it as character\nbecause that's what it is generally.\n\n210\n00:10:57.730 --> 00:10:59.640\nBut, a phone number's usually ten digits.\n\n211\n00:10:59.640 --> 00:11:03.080\nAnd so I might wanna leave that at\nnchar(10) knowing that nobody's gonna\n\n212\n00:11:03.080 --> 00:11:05.460\nhave an 8 digit phone number, nobody's\ngonna have a 12 digit phone number,\n\n213\n00:11:05.460 --> 00:11:06.810\neverybody's gonna have 10.\n\n214\n00:11:06.810 --> 00:11:09.320\nWell, unless I do international stuff,\nthen I gotta think about,\n\n215\n00:11:09.320 --> 00:11:11.040\nyou know you gotta think about\nall of these different things.\n\n216\n00:11:11.040 --> 00:11:13.370\nThat's why we've gotta ask\nthe developers what to put here.\n\n217\n00:11:13.370 --> 00:11:17.400\nOtherwise we could make\nan incorrect decision, and\n\n218\n00:11:17.400 --> 00:11:19.830\nyou can't change these data\ntypes after you've created.\n\n219\n00:11:19.830 --> 00:11:22.760\nYou gotta basically rebuild the table and\nthat's a lot of work.\n\n220\n00:11:22.760 --> 00:11:25.190\nSo we want to make sure we get\nthese right from the beginning.\n\n221\n00:11:25.190 --> 00:11:29.840\nI might have something like age,\nnow age is going to store a number.\n\n222\n00:11:29.840 --> 00:11:32.200\nAnd number,\nyou know what's our average human age?\n\n223\n00:11:32.200 --> 00:11:34.850\nIt's zero years through 100 and\nwhat's the oldest person?\n\n224\n00:11:34.850 --> 00:11:36.060\nLike a 120 or something?\n\n225\n00:11:36.060 --> 00:11:37.985\n>> I think like 117 or something.\n\n226\n00:11:37.985 --> 00:11:38.584\n>> So yeah up there.\n\n227\n00:11:38.584 --> 00:11:39.610\n>> Up there.\n>> But\n\n228\n00:11:39.610 --> 00:11:43.020\nthey're not going to be giant numbers so\nI don't need a ton of space for that.\n\n229\n00:11:43.020 --> 00:11:46.800\nSo I have an integer that I can pick from.\n\n230\n00:11:46.800 --> 00:11:50.270\nIf I drop that down I'll see I've\ngot INT and I can pick integer.\n\n231\n00:11:50.270 --> 00:11:52.590\nBut there's actually a few\nvariations in here in integer.\n\n232\n00:11:52.590 --> 00:11:54.580\nIf you look, some are kind of funny.\n\n233\n00:11:54.580 --> 00:11:58.190\nThere's bigint, if it's a big integer.\n\n234\n00:11:58.190 --> 00:12:00.760\nYou've got tinyint.\n\n235\n00:12:00.760 --> 00:12:01.630\nWhere is it?\nRight here.\n\n236\n00:12:01.630 --> 00:12:02.570\nTinyint, if it's tiny.\n\n237\n00:12:02.570 --> 00:12:06.415\nAnd you've got smallint, which is\nsomewhere in here too, if it's small.\n\n238\n00:12:06.415 --> 00:12:08.460\n[LAUGH] What do those mean?\n\n239\n00:12:08.460 --> 00:12:11.190\nWell, if you're a DBA you\nalready know what they mean.\n\n240\n00:12:11.190 --> 00:12:12.120\nBut if you're an Admin,\n\n241\n00:12:12.120 --> 00:12:14.570\nyou don't know what those mean and\nyou don't know which one to pick.\n\n242\n00:12:14.570 --> 00:12:16.970\nThis is all about storage optimization.\n\n243\n00:12:16.970 --> 00:12:18.900\nThere's different sizes of integers.\n\n244\n00:12:18.900 --> 00:12:22.510\nAnd Microsoft is trying to figure out how\nmuch space to set aside for each one.\n\n245\n00:12:22.510 --> 00:12:26.110\nSo, if you pick tinyint for example.\n\n246\n00:12:26.110 --> 00:12:30.120\nTinyint sets aside one byte for\nthe number, and that's it.\n\n247\n00:12:30.120 --> 00:12:33.360\nAnd that means it can only\nstore zero through 255.\n\n248\n00:12:33.360 --> 00:12:38.490\nIf I was doing age,\ntinyint would be perfect right?\n\n249\n00:12:38.490 --> 00:12:41.118\nBecause I'm not gonna have anybody\nwhose age is below zero, and\n\n250\n00:12:41.118 --> 00:12:43.321\nI'm not gonna have anybody\nwhose age is over 255.\n\n251\n00:12:43.321 --> 00:12:47.147\nAt least not unless science has\na new revolution, and then,\n\n252\n00:12:47.147 --> 00:12:48.690\nI regret this choice.\n\n253\n00:12:48.690 --> 00:12:50.980\nBut tinyint would be great for age.\n\n254\n00:12:50.980 --> 00:12:54.990\nBut if I have something\ndifferent like an ID number.\n\n255\n00:12:54.990 --> 00:12:55.550\nRight?\n\n256\n00:12:55.550 --> 00:12:57.490\nEvery employee gets an ID number.\n\n257\n00:12:57.490 --> 00:13:01.963\nWell that might be an integer just\na number, but it could very widely I could\n\n258\n00:13:01.963 --> 00:13:05.953\nhave a ten digit one and having just\none byte is not gonna be enough.\n\n259\n00:13:05.953 --> 00:13:08.510\nAnd so from there I can start to pick\nthe other ones like a small int.\n\n260\n00:13:08.510 --> 00:13:10.660\nSmall ints can go negative, right?\n\n261\n00:13:10.660 --> 00:13:11.770\nTiny ints can't be negative.\n\n262\n00:13:11.770 --> 00:13:12.590\nJust 0 through 255.\n\n263\n00:13:12.590 --> 00:13:16.242\nBut a small int it sets aside two bytes.\n\n264\n00:13:16.242 --> 00:13:22.690\nIt can do negative 32,768 all\nthe way up to positive 32,768.\n\n265\n00:13:22.690 --> 00:13:28.370\nAnd it actually stops at 767 because\nthat last little bit gets trimmed off.\n\n266\n00:13:28.370 --> 00:13:31.190\nBasically it can handle\na very wide range of numbers.\n\n267\n00:13:31.190 --> 00:13:33.830\nNow, I got all the way up to 32,000.\n\n268\n00:13:33.830 --> 00:13:35.850\nThat could cover some pretty big numbers.\n\n269\n00:13:35.850 --> 00:13:39.520\nBut If I think I'm gonna go beyond that,\nthen I can step up to a regular int, and\n\n270\n00:13:39.520 --> 00:13:44.120\na regular int is negative 2 billion\nall the way to positive 2 billion.\n\n271\n00:13:44.120 --> 00:13:47.450\nThat's a big one, and\nthen if we go to a big int,\n\n272\n00:13:47.450 --> 00:13:51.550\nI don't even know what this number is\ncalled, cuz you gotta like millions,\n\n273\n00:13:51.550 --> 00:13:54.340\nbillions, trillions,\nquadrillions, and then?\n\n274\n00:13:54.340 --> 00:13:55.834\n>> Zillions.\n\n275\n00:13:55.834 --> 00:13:56.438\n>> Is it?\n\n276\n00:13:56.438 --> 00:13:57.457\n>> I don't know. [LAUGH] >> I don't know.\n>> You have bajillions or\n\n277\n00:13:57.457 --> 00:13:58.240\nsomething like that.\n\n278\n00:13:58.240 --> 00:13:59.480\n[LAUGH] You get a lot.\n\n279\n00:13:59.480 --> 00:14:02.854\nIt's like nine quajillions, or something.\n\n280\n00:14:02.854 --> 00:14:04.200\nI don't know.\n\n281\n00:14:04.200 --> 00:14:06.170\nAnd it's just a huge number,\nnegative and positive.\n\n282\n00:14:06.170 --> 00:14:08.920\nSo we're basically trying\nto pick a data type\n\n283\n00:14:08.920 --> 00:14:12.430\nthat matches what we think the maximum\namount of storage is that we'll need.\n\n284\n00:14:12.430 --> 00:14:14.330\nSo you wanna make sure you\nchoose that appropriately,\n\n285\n00:14:14.330 --> 00:14:17.250\nit's really important to\nget the right data type.\n\n286\n00:14:17.250 --> 00:14:19.690\nAlso, notice this column here,\nAllow Nulls.\n\n287\n00:14:19.690 --> 00:14:22.880\nAm I going to allow an empty\nvalue in this field?\n\n288\n00:14:22.880 --> 00:14:25.370\nCan I have an employee with no first name?\n\n289\n00:14:25.370 --> 00:14:27.610\nCan I have an employee with no last name?\n\n290\n00:14:27.610 --> 00:14:28.840\nMaybe?\n>> In this day and age.\n\n291\n00:14:28.840 --> 00:14:30.490\n>> I suppose it's possible.\n\n292\n00:14:30.490 --> 00:14:33.790\nBut, if I'm adding somebody for\nHR purposes, I probably need this just for\n\n293\n00:14:33.790 --> 00:14:35.270\ntax information.\n\n294\n00:14:35.270 --> 00:14:38.200\nAnd so, some of these things I\nmight not want to allow to be null.\n\n295\n00:14:38.200 --> 00:14:41.400\nThere might be some, like ID.\n\n296\n00:14:41.400 --> 00:14:43.050\nEvery employee has to have an ID number.\n\n297\n00:14:43.050 --> 00:14:45.072\nIf you don't have an ID number,\nyou're not an employee,\n\n298\n00:14:45.072 --> 00:14:46.240\nyou're not getting a paycheck.\n\n299\n00:14:46.240 --> 00:14:48.170\nSo I can uncheck Allow Nulls.\n\n300\n00:14:48.170 --> 00:14:52.610\nAnd now whenever somebody adds\na record they will have to provide ID,\n\n301\n00:14:52.610 --> 00:14:54.440\notherwise that's it.\n\n302\n00:14:54.440 --> 00:14:55.080\nOkay?\n\n303\n00:14:55.080 --> 00:14:58.670\nSo you can choose whether or\nnot you allow the field to be empty.\n\n304\n00:14:58.670 --> 00:15:01.790\nThere's one more really important\nsetting that actually doesn't show up\n\n305\n00:15:01.790 --> 00:15:03.680\nright here that is important to know.\n\n306\n00:15:03.680 --> 00:15:05.260\nWhen you have something like an ID,\n\n307\n00:15:06.480 --> 00:15:09.700\ndo you ever want to have two\nemployees with the same ID number?\n\n308\n00:15:09.700 --> 00:15:11.160\nNo, right?\nThat would be bad.\n\n309\n00:15:11.160 --> 00:15:13.270\nSo, we wanna make sure this one is unique.\n\n310\n00:15:13.270 --> 00:15:14.990\nThis is what's called an identity.\n\n311\n00:15:14.990 --> 00:15:16.150\nIt's an identity for a person.\n\n312\n00:15:16.150 --> 00:15:18.770\nWe don't wanna reuse it, we don't wanna\nhave two people with the same identity.\n\n313\n00:15:18.770 --> 00:15:20.430\nSo we need to enforce uniqueness.\n\n314\n00:15:20.430 --> 00:15:22.980\nAnd you'll see there's a few\ndifferent ways to do that,\n\n315\n00:15:22.980 --> 00:15:26.710\nbut over here on the right\nin the table properties,\n\n316\n00:15:26.710 --> 00:15:31.410\nif I zoom in on this, you got this little\nspot where it says identity column.\n\n317\n00:15:31.410 --> 00:15:36.050\nAnd that's where I can pick a column that\nI'm gonna treat as the unique identifier.\n\n318\n00:15:36.050 --> 00:15:39.800\nAnd it only works with integers and so\nthat's why I only see age and ID here.\n\n319\n00:15:39.800 --> 00:15:45.290\nBut I can choose ID and that's going\nto enforce uniqueness on that column.\n\n320\n00:15:45.290 --> 00:15:47.310\nNow whenever I create an account for\n\n321\n00:15:47.310 --> 00:15:50.800\nsomebody, it's going to automatically\nput the number in there.\n\n322\n00:15:50.800 --> 00:15:51.800\nI don't even have to tell it.\n\n323\n00:15:51.800 --> 00:15:53.802\nIt's going to just give it a number and\n\n324\n00:15:53.802 --> 00:15:56.375\nit will never give the same\nnumber to two people.\n\n325\n00:15:56.375 --> 00:15:59.730\nIt's going to enforce that, so\nI'll never reuse the same employee ID.\n\n326\n00:15:59.730 --> 00:16:00.298\nAll right.\n\n327\n00:16:00.298 --> 00:16:02.526\nSo that's kind of a neat\nfeature there that we can set,\n\n328\n00:16:02.526 --> 00:16:03.786\nwhich is really useful here and\n\n329\n00:16:03.786 --> 00:16:06.951\nagain This would need to be part of\nthe requirements coming from the dev team.\n\n330\n00:16:06.951 --> 00:16:10.968\nLike hey, this column's an identity,\nwe shouldn't have duplicates,\n\n331\n00:16:10.968 --> 00:16:14.860\nenforce uniqueness, that kind of\nthing would come across with that.\n\n332\n00:16:14.860 --> 00:16:17.360\nAnd then once we've got all that\nstuff defined the way that we want,\n\n333\n00:16:17.360 --> 00:16:19.250\nwe just need to save the table.\n\n334\n00:16:19.250 --> 00:16:21.000\nI probably need to give\nit a better table name.\n\n335\n00:16:21.000 --> 00:16:24.750\nOver here in the Properties notice\nmy default table name is Table_1.\n\n336\n00:16:24.750 --> 00:16:25.850\nThat's not-\n>> Very descriptive.\n\n337\n00:16:25.850 --> 00:16:26.791\n>> Yeah, not too cool.\n\n338\n00:16:26.791 --> 00:16:29.310\nSo I'm gonna call this one, employees.\n\n339\n00:16:31.640 --> 00:16:35.393\nAnd so I'll just give it that name,\nand now I'm gonna come up here and\n\n340\n00:16:35.393 --> 00:16:36.251\njust hit save.\n\n341\n00:16:36.251 --> 00:16:37.450\nAnd that'll save table.\n\n342\n00:16:38.690 --> 00:16:41.609\nOnce that's saved,\nI can refresh my tables.\n\n343\n00:16:42.710 --> 00:16:45.410\nAnd it should show up.\n\n344\n00:16:45.410 --> 00:16:46.584\nNow I say it should show\nup cuz mine didn't.\n\n345\n00:16:46.584 --> 00:16:48.167\nIt did not save.\n\n346\n00:16:48.167 --> 00:16:51.949\nKeep in mind when you run these that\nsometimes it does take a little while to\n\n347\n00:16:51.949 --> 00:16:53.150\npush up to Azure.\n\n348\n00:16:53.150 --> 00:16:54.350\nIt shouldn't take this long.\n\n349\n00:16:54.350 --> 00:16:57.530\nIt should have done,\nmaybe I didn't, you know what?\n\n350\n00:16:57.530 --> 00:16:59.666\nHere, let me.\n\n351\n00:16:59.666 --> 00:17:00.376\nThere we go.\n\n352\n00:17:00.376 --> 00:17:03.667\nSo, for some reason hitting the little\nsave button wasn't working for me.\n\n353\n00:17:03.667 --> 00:17:07.490\nSo I just clicked in the table\nfield here and just hit Ctrl+S.\n\n354\n00:17:07.490 --> 00:17:08.570\nThat's the shortcut.\n\n355\n00:17:08.570 --> 00:17:10.900\nAnd that took a moment,\nI my little wheel up here.\n\n356\n00:17:10.900 --> 00:17:14.140\nSo let me go refresh my tables and\nsee if that worked for us.\n\n357\n00:17:14.140 --> 00:17:15.340\nAnd sure enough it did.\n\n358\n00:17:15.340 --> 00:17:18.260\nSo now I've got good old dbo.employees so\n\n359\n00:17:18.260 --> 00:17:19.900\nsometimes you just can't\nbe a keyboard shortcut.\n\n360\n00:17:21.050 --> 00:17:24.090\nAll right, now that I've got the table,\nwhat do I do with it, right?\n\n361\n00:17:24.090 --> 00:17:25.150\nHaving a table is one thing.\n\n362\n00:17:25.150 --> 00:17:26.140\nThat was important.\n\n363\n00:17:26.140 --> 00:17:27.940\nYou can make a lot of mistakes here and\n\n364\n00:17:27.940 --> 00:17:31.030\nthe way to fix them,\ndelete the table and recreate it.\n\n365\n00:17:31.030 --> 00:17:32.670\nSo you want to make sure\nyou get that right,\n\n366\n00:17:32.670 --> 00:17:34.450\nthat's why I wanted to highlight this.\n\n367\n00:17:34.450 --> 00:17:36.730\nAfter that it's all just pretty much\nputting data into the table and\n\n368\n00:17:36.730 --> 00:17:37.800\ntaking data out of the table.\n\n369\n00:17:39.000 --> 00:17:42.620\nTo put data into the table,\nwe're gonna use Transact-SQL to do that.\n\n370\n00:17:43.700 --> 00:17:46.680\nYou don't necessarily need\nto know Transact-SQL.\n\n371\n00:17:46.680 --> 00:17:49.980\nIf you're not gonna be importing data,\nthen you don't necessarily care about it.\n\n372\n00:17:49.980 --> 00:17:52.330\nBut I find for most people that\nare working with Azure SQL,\n\n373\n00:17:52.330 --> 00:17:54.200\nit's a good idea to at least\nhave a basic understanding.\n\n374\n00:17:54.200 --> 00:17:58.000\nSo, let me show you how to put data into\na table, and let me show you how to get\n\n375\n00:17:58.000 --> 00:18:00.200\ndata out of the table, and\nthen we'll kind of stop it there.\n\n376\n00:18:00.200 --> 00:18:01.910\nI don't want to go too crazy on this.\n\n377\n00:18:01.910 --> 00:18:06.244\nSo, if I wanna populate this table with\nsome data, the first thing I need to do is\n\n378\n00:18:06.244 --> 00:18:09.500\ncome up here and hit New Query,\nand so I'm gonna, whoops.\n\n379\n00:18:09.500 --> 00:18:11.042\n[LAUGH] I'm gonna click\nit like seven times.\n\n380\n00:18:11.042 --> 00:18:11.694\n>> [LAUGH]\n>> Cuz, yeah,\n\n381\n00:18:11.694 --> 00:18:12.833\nthat's how many queries I wanna do.\n\n382\n00:18:12.833 --> 00:18:14.570\nSo, I went a little crazy there.\n\n383\n00:18:14.570 --> 00:18:16.410\nBut basically I'm gonna\ncreate a new query.\n\n384\n00:18:16.410 --> 00:18:20.900\nAnd in this new query, I'm gonna come\nthrough and tell it what I want to do.\n\n385\n00:18:21.950 --> 00:18:24.704\nSo the first thing I'm gonna do is I'm\ngonna use the USE command to tell it which\n\n386\n00:18:24.704 --> 00:18:25.760\ndatabase I'm working with.\n\n387\n00:18:25.760 --> 00:18:28.090\nMy database is called HumanResources.\n\n388\n00:18:29.310 --> 00:18:32.730\nAnd in between commands like these\nyou need to use the GO keyword.\n\n389\n00:18:32.730 --> 00:18:36.480\nThat's gonna say execute the first\ncommand, then move on to the second one.\n\n390\n00:18:36.480 --> 00:18:40.320\nIf you don't use the GO keyword,\nit'll take all the commands you type and\n\n391\n00:18:40.320 --> 00:18:44.836\nit'll optimize in the order that it think\nis best and it can run them out of order.\n\n392\n00:18:44.836 --> 00:18:47.980\nSo we use the GO command to kind of force\nit to do things in a particular order.\n\n393\n00:18:47.980 --> 00:18:51.020\nI'm telling it,\nuse the HumanResources database.\n\n394\n00:18:51.020 --> 00:18:55.465\nThen, I'm gonna say INSERT INTO.\n\n395\n00:18:55.465 --> 00:19:01.584\nI'm inserting data into a table,\nand I'm gonna do dbo.employees.\n\n396\n00:19:01.584 --> 00:19:02.709\nI probably don't need to specify that dbo.\n\n397\n00:19:02.709 --> 00:19:06.695\nWhat that is is what's called a schema,\nand every table that you create,\n\n398\n00:19:06.695 --> 00:19:11.085\nevery view that you create, everything\ndefaults to this one schema called dbo.\n\n399\n00:19:11.085 --> 00:19:12.834\nThat stands for database owner.\n\n400\n00:19:12.834 --> 00:19:16.320\nThe schema is basically a security group\nthat defines whose allowed to use it.\n\n401\n00:19:16.320 --> 00:19:19.450\nAnd the database owner is allowed\nto use everything, right?\n\n402\n00:19:19.450 --> 00:19:23.221\nBut I could create my own schemas\nthat were tied to just the human\n\n403\n00:19:23.221 --> 00:19:26.292\nresources department or\naccounting or whatever.\n\n404\n00:19:26.292 --> 00:19:27.170\nBut I didn't do that here.\n\n405\n00:19:27.170 --> 00:19:28.990\nSo just INSERT INTO dbo.employees.\n\n406\n00:19:28.990 --> 00:19:30.870\nThat's the table that I'm working with.\n\n407\n00:19:30.870 --> 00:19:34.430\nAnd then I need to tell it\nwhat I'm gonna be inserting.\n\n408\n00:19:34.430 --> 00:19:37.334\nAnd I'm gonna insert, what did I do?\n\n409\n00:19:37.334 --> 00:19:42.254\nI did like First Name,\nand I did Last Name,\n\n410\n00:19:42.254 --> 00:19:45.964\nand I did a couple other things.\n\n411\n00:19:45.964 --> 00:19:48.280\nI'm just gonna stop right there\nwith First Name and Last Name.\n\n412\n00:19:48.280 --> 00:19:51.084\nI don't want to go crazy with adding\nin employees in a bunch of data.\n\n413\n00:19:51.084 --> 00:19:55.206\nNow, notice how I put little square\nbrackets around First Name and Last Name,\n\n414\n00:19:55.206 --> 00:19:58.400\nI had to do that cuz I put spaces\nin the names of those columns.\n\n415\n00:19:58.400 --> 00:20:00.310\nAnd so I've gotta use that so\nit knows those are together.\n\n416\n00:20:00.310 --> 00:20:03.660\nThere's not a column called First and\na column called Name.\n\n417\n00:20:03.660 --> 00:20:05.660\nIt's a column called First Name.\n\n418\n00:20:05.660 --> 00:20:08.500\nAnd you can always just verify\nthat against your table.\n\n419\n00:20:08.500 --> 00:20:12.830\nIf we browse into our table over here and\nyou expand out columns,\n\n420\n00:20:12.830 --> 00:20:16.700\nyou can see all those names,\nFirst Name, Last Name, and so on.\n\n421\n00:20:16.700 --> 00:20:19.680\nAnd if you had a space,\n\n422\n00:20:19.680 --> 00:20:22.990\nyou'll have to use square brackets\njust like I did, so, all right.\n\n423\n00:20:22.990 --> 00:20:25.290\nSo, that's what I'm gonna\nbe inserting into it.\n\n424\n00:20:26.320 --> 00:20:29.140\nThen I need to give it values.\n\n425\n00:20:29.140 --> 00:20:31.170\nWhat are the values than\nI'm gonna put in there?\n\n426\n00:20:31.170 --> 00:20:34.170\nAnd the cool thing is that I can add more\nthan one employee at a time if I want.\n\n427\n00:20:34.170 --> 00:20:39.334\nSo I can come in here and\nI can say, (Don,Pezet).\n\n428\n00:20:39.334 --> 00:20:43.459\nAnd then (Ronnie,Wong).\n\n429\n00:20:43.459 --> 00:20:46.880\nAnd what I'm doing is I'm putting\nus in parentheses with a comma.\n\n430\n00:20:46.880 --> 00:20:49.820\nThis is gonna be First Name,\nthis is gonna be Last Name.\n\n431\n00:20:49.820 --> 00:20:54.000\nIt's musing this kind of template that\nI set up here to determine the values.\n\n432\n00:20:54.000 --> 00:20:59.501\nNow, on mine, remember that I had that\nvalue that I couldn't set as null?\n\n433\n00:20:59.501 --> 00:21:00.410\nWell that was ID.\n\n434\n00:21:00.410 --> 00:21:01.440\nID's auto-generated.\n\n435\n00:21:01.440 --> 00:21:02.750\nSo I can leave it out.\n\n436\n00:21:02.750 --> 00:21:05.810\nBut if I had any columns that were\nflagged as not allowing nulls,\n\n437\n00:21:05.810 --> 00:21:07.490\nI would have to provide them here.\n\n438\n00:21:07.490 --> 00:21:09.320\nIf something allowed null,\nI could leave it empty.\n\n439\n00:21:09.320 --> 00:21:11.360\nSo I'm not providing age or address.\n\n440\n00:21:11.360 --> 00:21:12.810\nThose are just gonna be empty.\n\n441\n00:21:12.810 --> 00:21:14.390\nAnd I can keep going on like this.\n\n442\n00:21:14.390 --> 00:21:17.709\nSo, we can add (Mike,Rodrick).\n\n443\n00:21:17.709 --> 00:21:21.041\nI guess we could add Daniel,\nshort-term employee.\n\n444\n00:21:21.041 --> 00:21:23.417\n[LAUGH]\n>> I keep hoping.\n\n445\n00:21:23.417 --> 00:21:25.208\n>> Is there a column in\nhere that says terminated?\n\n446\n00:21:25.208 --> 00:21:26.053\n>> [LAUGH]\n>> So\n\n447\n00:21:26.053 --> 00:21:28.440\nwe just kind of keep adding whoever it is.\n\n448\n00:21:28.440 --> 00:21:29.916\nHowever many it is that we need to need.\n\n449\n00:21:29.916 --> 00:21:33.740\nWe can always add more later\non if we want to, right?\n\n450\n00:21:33.740 --> 00:21:35.910\nAnd I'm just gonna throw\na little GO at the end of that.\n\n451\n00:21:35.910 --> 00:21:40.280\nSo, this is gonna insert into the employee\ntable rows for each of these.\n\n452\n00:21:40.280 --> 00:21:43.970\nThese commas are how it knows where\nI'm switching from row to the next.\n\n453\n00:21:43.970 --> 00:21:46.908\nSo here's five rows of data that\nI'm gonna be putting in here.\n\n454\n00:21:46.908 --> 00:21:50.970\nIf you had thousands upon thousands\nof rows of data to throw in, you'll\n\n455\n00:21:50.970 --> 00:21:55.890\nprobably want to use something like Excel\nto create the template to do the import so\n\n456\n00:21:55.890 --> 00:21:57.320\nyou're not having to do\nall this individually.\n\n457\n00:21:57.320 --> 00:22:00.030\nThere's a number of ways to do that.\n\n458\n00:22:00.030 --> 00:22:01.343\nOnce I've got it ready,\n\n459\n00:22:01.343 --> 00:22:05.167\nit's very very possible [LAUGH] that\nI've made a mistake and made a typo.\n\n460\n00:22:05.167 --> 00:22:08.270\nAnd so you got this nice little check\nmark up here where it can parse it and\n\n461\n00:22:08.270 --> 00:22:10.000\ntell you if there's any errors.\n\n462\n00:22:10.000 --> 00:22:12.850\nAnd mine actually came back with\nCommand(s) completed successfully.\n\n463\n00:22:12.850 --> 00:22:15.877\nThat does not mean it ran the command,\nokay?\n\n464\n00:22:15.877 --> 00:22:20.143\nThat just means if it did run this\ncommand, there's no syntax errors, but\n\n465\n00:22:20.143 --> 00:22:22.050\nit hasn't actually run it.\n\n466\n00:22:22.050 --> 00:22:25.418\nIt doesn't run it until you click\nexecute or hit F5 on your keyboard.\n\n467\n00:22:25.418 --> 00:22:27.543\nI'm gonna to hit Execute,\nand it's gonna run.\n\n468\n00:22:27.543 --> 00:22:31.820\nAnd I just got a bunch of invalid\ncolumn names that came back.\n\n469\n00:22:31.820 --> 00:22:35.170\nSo I do have a syntax error after all,\nwhat did I do wrong here?\n\n470\n00:22:35.170 --> 00:22:36.310\nSo, I'm importing.\n\n471\n00:22:37.840 --> 00:22:39.851\nAll right, and\n[LAUGH] we're gonna execute that and\n\n472\n00:22:39.851 --> 00:22:41.875\nsee we get a couple little\nerrors [LAUGH] on this one.\n\n473\n00:22:41.875 --> 00:22:43.780\nLooks like we got Invalid\ncolumn name 'Don'.\n\n474\n00:22:43.780 --> 00:22:47.620\nSo, it's viewing my name, or I guess\neverybody's name here's a column name.\n\n475\n00:22:47.620 --> 00:22:49.340\nI think I left something\nout kinda important.\n\n476\n00:22:49.340 --> 00:22:52.190\nLet me just add my tickmarks here.\n\n477\n00:22:52.190 --> 00:22:55.600\nIt's not realizing that this\nis just text input, and\n\n478\n00:22:55.600 --> 00:22:57.420\nit's thinking I'm providing column names.\n\n479\n00:22:57.420 --> 00:23:00.210\nSo let me just update that.\n\n480\n00:23:00.210 --> 00:23:02.340\nSo I'm gonna add some\nlittle tickmarks in here.\n\n481\n00:23:02.340 --> 00:23:04.920\nAnd you'll notice how each of\nthe names are turning red.\n\n482\n00:23:04.920 --> 00:23:07.110\nThat's how it knows that those\nare just input values, right?\n\n483\n00:23:07.110 --> 00:23:09.990\nSo I'm inputting these names as values for\nthe query.\n\n484\n00:23:09.990 --> 00:23:13.360\nAnd so once that's done,\nif we rerun it, there we go,\n\n485\n00:23:13.360 --> 00:23:16.010\nI get a little message telling\nme only 5 row(s) affected.\n\n486\n00:23:16.010 --> 00:23:20.926\nAnd if I go take a look at my table,\nI can click on the table, and\n\n487\n00:23:20.926 --> 00:23:27.375\nif you just right-click on the table,\nyou can choose Select top 1000 rows.\n\n488\n00:23:27.375 --> 00:23:30.930\nAnd that will return the table for\nus so we can see what's in it.\n\n489\n00:23:30.930 --> 00:23:32.584\nSo it's gonna run a little query.\n\n490\n00:23:32.584 --> 00:23:35.720\nAnd then right down here,\nsee, there's everybody.\n\n491\n00:23:35.720 --> 00:23:36.720\nDon Pezet, Ronnie Wong.\n\n492\n00:23:36.720 --> 00:23:38.170\nIt's got us all on the list, and\n\n493\n00:23:38.170 --> 00:23:40.850\neverybody's got an ID number even\nthough I didn't provide one.\n\n494\n00:23:40.850 --> 00:23:43.500\nThe Phone and\nAge are empty cuz we allowed nulls.\n\n495\n00:23:43.500 --> 00:23:47.410\nSo now we've actually put\ndata into our database.\n\n496\n00:23:47.410 --> 00:23:51.042\nAnd that query wasn't necessarily\nthe easiest thing in the world, right?\n\n497\n00:23:51.042 --> 00:23:52.330\nIt's not super intuitive.\n\n498\n00:23:52.330 --> 00:23:56.530\nBut we just inserted those in, we put\ndata into our database through a script.\n\n499\n00:23:56.530 --> 00:23:57.271\n>> Yeah, that's very cool.\n\n500\n00:23:57.271 --> 00:24:01.716\nAnd I like the fact that that unique ID,\nthat's how it's sorted, right?\n\n501\n00:24:01.716 --> 00:24:03.389\nIt gave everybody a unique ID.\n\n502\n00:24:03.389 --> 00:24:06.218\nAnd I was looking at the names and\nit wasn't in alphabetical order, and\n\n503\n00:24:06.218 --> 00:24:07.835\nI thought, Oh, that's interesting.\n\n504\n00:24:07.835 --> 00:24:09.611\nWhy did it put it in alphabetical order?\n\n505\n00:24:09.611 --> 00:24:12.172\nBut, what it did was it\ngave that an ID number and\n\n506\n00:24:12.172 --> 00:24:16.060\nit sorted by those ID numbers and\nit handed those out randomly.\n\n507\n00:24:16.060 --> 00:24:17.900\nSo whoever got what got their own order.\n\n508\n00:24:17.900 --> 00:24:19.352\nSo that was pretty cool.\n\n509\n00:24:19.352 --> 00:24:23.050\n>> All right, so let's say we wanted\nthat data to come back to us.\n\n510\n00:24:23.050 --> 00:24:25.710\nWe wanted to get the data out and\nwe wanted to get it in order.\n\n511\n00:24:25.710 --> 00:24:26.620\nWell, that's the next thing.\n\n512\n00:24:26.620 --> 00:24:28.730\nThat's the other part I\nwanted to show you guys was,\n\n513\n00:24:28.730 --> 00:24:32.310\nonce your data's in a table, next you\nneed to be able to retrieve it, right?\n\n514\n00:24:32.310 --> 00:24:34.310\nAnd you need to be able to retrieve it and\nmanipulate it.\n\n515\n00:24:34.310 --> 00:24:38.110\nThat's what SQL's all about, is being\nable to get the data you want out of\n\n516\n00:24:38.110 --> 00:24:40.900\nthe system, sort it however you want,\nor whatever.\n\n517\n00:24:40.900 --> 00:24:42.610\nSo we can do some really neat stuff.\n\n518\n00:24:42.610 --> 00:24:43.630\nLet me show you an example.\n\n519\n00:24:45.160 --> 00:24:46.670\nI'll just take the same script file,\n\n520\n00:24:46.670 --> 00:24:51.040\nand I'm gonna add a /* at the beginning,\nwhich comments everything out.\n\n521\n00:24:51.040 --> 00:24:53.190\nSee how it all turned\ngreen when I did that?\n\n522\n00:24:53.190 --> 00:24:56.010\nSo that's telling it,\nlike, not to run this code.\n\n523\n00:24:56.010 --> 00:25:00.195\nAnd then after the transit SQL statements,\nI can just add a */, and\n\n524\n00:25:00.195 --> 00:25:05.267\nanything after it, it will run, and so now\nI can start running and doing whatever.\n\n525\n00:25:05.267 --> 00:25:10.790\nI'm gonna say select * FROM dbo.employees.\n\n526\n00:25:10.790 --> 00:25:14.640\nSo in other words, give me all\nof the data from dbo.employees.\n\n527\n00:25:14.640 --> 00:25:18.890\nThat's effectively what it\nran just a moment ago when I\n\n528\n00:25:20.160 --> 00:25:22.780\ndid that select top 1,000 rows or\nwhatever.\n\n529\n00:25:22.780 --> 00:25:25.810\nAnd so if I run that, there's the table,\nthere's everybody listed.\n\n530\n00:25:25.810 --> 00:25:30.640\nAnd they're listed non-alphabetically,\nthey're listed by ID, okay?\n\n531\n00:25:30.640 --> 00:25:36.320\nI could say select I gotta do\nmy little brackets here again.\n\n532\n00:25:36.320 --> 00:25:40.393\nFirst name and last name.\n\n533\n00:25:40.393 --> 00:25:42.830\nLike that.\n\n534\n00:25:42.830 --> 00:25:44.400\nAnd now it's not going\nto give me everything,\n\n535\n00:25:44.400 --> 00:25:47.170\nit's just going to give me first name and\nlast name.\n\n536\n00:25:47.170 --> 00:25:52.730\nSo I don't have to retrieve every column,\nI can just get the columns that I want.\n\n537\n00:25:52.730 --> 00:25:57.089\nOkay, but\nI can still be even more specific,\n\n538\n00:25:57.089 --> 00:26:01.590\nlike on the end I can say WHERE ID = 2,\nright?\n\n539\n00:26:01.590 --> 00:26:04.480\nSo just a person whose ID equals two,\ngive them to me.\n\n540\n00:26:04.480 --> 00:26:06.700\nAnd I can't remember if I have\nto put 2 in back ticks or not.\n\n541\n00:26:06.700 --> 00:26:08.720\nLet's try to run this and\nwe'll see if it does it.\n\n542\n00:26:08.720 --> 00:26:10.050\nAnd, oh, nope, it worked.\n\n543\n00:26:10.050 --> 00:26:12.360\nAnd so now I just got Ronnie Wong back,\nand that's it.\n\n544\n00:26:12.360 --> 00:26:16.460\nSee, it's kinda hard to remember sometimes\nwhen you've gotta put the quote or tick\n\n545\n00:26:16.460 --> 00:26:21.210\nmarks around the number or not, but in\nthis case now I've just got Ronnie's data.\n\n546\n00:26:21.210 --> 00:26:21.800\nRight?\n\n547\n00:26:21.800 --> 00:26:25.111\nOr I can get rid of that\nWHERE statement and\n\n548\n00:26:25.111 --> 00:26:31.100\nI could say give me the employees and\nORDER BY [Last Name], all right.\n\n549\n00:26:31.100 --> 00:26:33.630\nSo order them by the last name and\nthat way\n\n550\n00:26:33.630 --> 00:26:37.810\nwe'll be able to see it alphabetically\ninstead of by some other crazy identifier.\n\n551\n00:26:37.810 --> 00:26:40.400\nAnd in fact,\nI might want it to be last name first, so\n\n552\n00:26:40.400 --> 00:26:46.310\nI could take First Name here and\nI could say SELECT [Last Name],\n\n553\n00:26:46.310 --> 00:26:50.020\n[First Name] And\nthen order by the last name.\n\n554\n00:26:50.020 --> 00:26:54.050\nAnd when I run that,\nnow I get last name first name, and\n\n555\n00:26:54.050 --> 00:26:57.430\nit's ordered in the way that I wanted it,\nright?\n\n556\n00:26:57.430 --> 00:27:00.670\nAnd you can do all sorts\nof crazy stuff like this.\n\n557\n00:27:00.670 --> 00:27:01.450\nYou can more to it.\n\n558\n00:27:01.450 --> 00:27:03.800\nI did that where ID equaled one, but\n\n559\n00:27:03.800 --> 00:27:08.670\nI can say where the last name\nstarted with a certain letter.\n\n560\n00:27:08.670 --> 00:27:09.974\nLet's see if I can\nremember how to do that.\n\n561\n00:27:09.974 --> 00:27:13.840\n[LAUGH] If you're like me,\nyou don't write this stuff very often.\n\n562\n00:27:13.840 --> 00:27:20.425\nBut we could say WHERE\n[Last Name] is LIKE,\n\n563\n00:27:20.425 --> 00:27:26.020\nand then I could say, let's see.\n\n564\n00:27:26.020 --> 00:27:27.900\nSo Daniel and I, let's do our first name.\n\n565\n00:27:27.900 --> 00:27:31.500\nSo I just want people who's\nfirst name starts with D.\n\n566\n00:27:31.500 --> 00:27:33.590\nSo I could say LIKE D%.\n\n567\n00:27:33.590 --> 00:27:37.915\nD is the first letter of our name,\nDaniel, Don.\n\n568\n00:27:37.915 --> 00:27:40.880\n% is a wildcard that means\nanything can be added to that.\n\n569\n00:27:40.880 --> 00:27:43.780\nSo I'm looking for\npeople whose names start with a D.\n\n570\n00:27:43.780 --> 00:27:48.130\nSo when I run that, oops, I get syntax\nerrors, apparently I did something- oh.\n\n571\n00:27:48.130 --> 00:27:51.652\nThe WHERE statement needs to be before\nthe ORDER BY, so let me move that.\n\n572\n00:27:54.027 --> 00:27:55.910\nOrder needs to be last thing.\n\n573\n00:27:55.910 --> 00:27:57.040\nYou're sorting the results.\n\n574\n00:27:57.040 --> 00:28:00.790\nWell, I didn't have the results yet,\nso I needed to kind of move that.\n\n575\n00:28:00.790 --> 00:28:02.230\nSo let's do that.\n\n576\n00:28:02.230 --> 00:28:02.910\nAnd there we go.\n\n577\n00:28:02.910 --> 00:28:07.880\nAnd it's now I only get Daniel and\nI back and it's alphabetized by last name.\n\n578\n00:28:07.880 --> 00:28:09.280\nAnd it's all pulled right from the table,\n\n579\n00:28:09.280 --> 00:28:11.550\nso you can really start\nto manipulate stuff.\n\n580\n00:28:11.550 --> 00:28:15.480\nThis is called Transact-SQL,\nand these statements, these,\n\n581\n00:28:15.480 --> 00:28:19.440\nsome people call them flower statements,\nare where we're basically reaching in and\n\n582\n00:28:19.440 --> 00:28:22.950\ngrabbing the data, manipulating it,\nchanging it to our needs, and\n\n583\n00:28:22.950 --> 00:28:25.120\noutputting a table that\nhas exactly what we want.\n\n584\n00:28:25.120 --> 00:28:28.350\nSo, as an admin,\nwhy do you care about this?\n\n585\n00:28:28.350 --> 00:28:30.020\nYou might need to verify a table.\n\n586\n00:28:30.020 --> 00:28:31.030\nI just added 1,000 rows.\n\n587\n00:28:31.030 --> 00:28:32.380\nLet me see those rows.\n\n588\n00:28:32.380 --> 00:28:33.340\nCan I see what was in there?\n\n589\n00:28:33.340 --> 00:28:34.530\nLet me see if the data is there.\n\n590\n00:28:34.530 --> 00:28:38.150\nLet me just run a quick query to see\nif I can find information, right?\n\n591\n00:28:38.150 --> 00:28:40.190\nAnd these statements let you do that.\n\n592\n00:28:40.190 --> 00:28:43.320\nSo it's important I think to at\nleast have a fundamental knowledge\n\n593\n00:28:43.320 --> 00:28:44.940\nof those queries and how they work.\n\n594\n00:28:44.940 --> 00:28:47.980\n>> And it's very cool that you can\nactually use those statements to\n\n595\n00:28:47.980 --> 00:28:49.640\nformat the data's output.\n\n596\n00:28:49.640 --> 00:28:52.570\nIn a way that's easily read by yourself or\nother people.\n\n597\n00:28:52.570 --> 00:28:53.740\nSo, very, very cool stuff.\n\n598\n00:28:53.740 --> 00:28:56.620\nDon, is there anything else that we\nneed to know about getting our feet wet\n\n599\n00:28:56.620 --> 00:28:57.200\nwith SQL?\n\n600\n00:28:57.200 --> 00:28:58.680\n>> No, I think that's about it.\n\n601\n00:28:58.680 --> 00:29:01.160\nIf you wanna learn more,\nthere's plenty of courses and\n\n602\n00:29:01.160 --> 00:29:03.585\nstuff online about learning Transact-SQL.\n\n603\n00:29:04.940 --> 00:29:07.306\nSQL, the standard query language,\n\n604\n00:29:07.306 --> 00:29:12.360\nit's supported by a lot of different\nsystems, Oracle, Microsoft, MySQL.\n\n605\n00:29:12.360 --> 00:29:15.923\nBut Microsoft uses what's called\nTransact-SQL where they've actually added\n\n606\n00:29:15.923 --> 00:29:17.180\nsome stuff on to it.\n\n607\n00:29:17.180 --> 00:29:19.250\nSo make sure you look for\nTransact-SQL stuff.\n\n608\n00:29:19.250 --> 00:29:21.850\nMicrosoft on their own website has\na ton of great documentation on\n\n609\n00:29:21.850 --> 00:29:22.360\nhow to run these.\n\n610\n00:29:22.360 --> 00:29:24.570\nSo if you wanna learn more about it,\nit's out there.\n\n611\n00:29:24.570 --> 00:29:27.170\nBut for a sys admin,\nwe really just need to know some basics.\n\n612\n00:29:27.170 --> 00:29:29.570\nThe insert command and the select command.\n\n613\n00:29:29.570 --> 00:29:31.580\nPutting data in and getting data out.\n\n614\n00:29:31.580 --> 00:29:32.560\nThose are the two big ones.\n\n615\n00:29:32.560 --> 00:29:33.110\n>> That's awesome.\n\n616\n00:29:33.110 --> 00:29:36.470\nDon, thank you so much for\nthose demonstrations, those explanations.\n\n617\n00:29:36.470 --> 00:29:40.590\nThat can really help you if you're\nnot a database guy, you're not a DBA,\n\n618\n00:29:40.590 --> 00:29:44.670\nwell now you have at least a little bit to\nsink your teeth into so that you can at\n\n619\n00:29:44.670 --> 00:29:49.410\nleast dive into that pool from time to\ntime, dip your toe in it, as it were.\n\n620\n00:29:49.410 --> 00:29:50.780\nDon, thank you very much for that.\n\n621\n00:29:50.780 --> 00:29:53.130\nAnd thank you everyone for watching.\n\n622\n00:29:53.130 --> 00:29:55.100\nWe have come to the end\nof this here episode.\n\n623\n00:29:55.100 --> 00:29:56.750\nSo we're gonna sign off.\n\n624\n00:29:56.750 --> 00:29:59.150\nFor ITProTV I've been\nyour host Daniel Lowrie.\n\n625\n00:29:59.150 --> 00:29:59.810\n>> And I'm Don Pezet.\n\n626\n00:29:59.810 --> 00:30:01.401\n>> And we'll see you next time.\n\n627\n00:30:01.401 --> 00:30:07.490\n[SOUND]\n\n",
          "vimeoId": "148882705"
        },
        {
          "description": "In this episode, Don and Daniel explore automation of tasks in Azure SQL. They start by explaining how to enable automation beginning with the SQL Server Agent. Then they jump into Azure and create an Automation Account which will be needed to create automated tasks for SQL. Here they introduce you to Runbooks which works inside of PowerShell to create the scripts for automation. Then they upload, test, publish, and schedule a task.",
          "length": "2027",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-azuresql/techskills-azuresql-2-3-azure_automation-111416-1.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-azuresql/techskills-azuresql-2-3-azure_automation-111416-1-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-azuresql/techskills-azuresql-2-3-azure_automation-111416-1-sm.jpg",
          "title": "Azure Automation",
          "transcript": "WEBVTT\n\n1\n00:00:00.000 --> 00:00:10.000\n[MUSIC]\n\n2\n00:00:12.078 --> 00:00:16.629\nAll right, greetings everyone, and welcome\nto another great episode of IT Pro TV.\n\n3\n00:00:16.629 --> 00:00:19.618\nI'm your host Daniel Lowrie and\nin today's episode, well,\n\n4\n00:00:19.618 --> 00:00:23.570\nwe are continuing down that Azure SQL path\nthat we've been blazing the trail on.\n\n5\n00:00:23.570 --> 00:00:24.220\nAnd joining us yet\n\n6\n00:00:24.220 --> 00:00:27.980\nagain right here in the studio is none\nother than our good friend Mr. Don Pezet.\n\n7\n00:00:27.980 --> 00:00:30.860\nDon, welcome back to the show and\nwell, how are you doing today?\n\n8\n00:00:30.860 --> 00:00:31.580\n>> I'm doing great, Daniel.\n\n9\n00:00:31.580 --> 00:00:32.330\nThanks for having me back.\n\n10\n00:00:32.330 --> 00:00:36.140\nAnd once again jumping into that world of\nMicrosoft Azure SQL today we're gonna be\n\n11\n00:00:36.140 --> 00:00:42.010\ntaking a look at something that a lot of\npeople describe as a shortcoming in Azure,\n\n12\n00:00:42.010 --> 00:00:45.210\nwhich is automating\nactivities in Azure SQL.\n\n13\n00:00:45.210 --> 00:00:48.610\nThings that we don't want to have to\nmanually run or be there for, we just want\n\n14\n00:00:48.610 --> 00:00:52.140\nthe server to run for us in the background\nso that we don't have to worry about it.\n\n15\n00:00:52.140 --> 00:00:54.614\nAutomation is a great way to\nstabilize your environment and\n\n16\n00:00:54.614 --> 00:00:56.503\nmake sure that things happen consistently.\n\n17\n00:00:56.503 --> 00:00:59.688\nUnfortunately, Azure kind of got a rocky\nstart on this one in the beginning,\n\n18\n00:00:59.688 --> 00:01:02.432\nso a lot of people think you can't do it,\nbut you actually can, and\n\n19\n00:01:02.432 --> 00:01:05.350\nthat's what we're going to take\na look at here in this episode.\n\n20\n00:01:05.350 --> 00:01:09.240\n>> Yeah, one of my philosophies when it\ncomes to computers and networking and\n\n21\n00:01:09.240 --> 00:01:12.430\nthings of that nature is automation is\nour friend, it's the whole purpose,\n\n22\n00:01:12.430 --> 00:01:16.870\nwe created the computer so it can do\nthings that I don't either want to do or\n\n23\n00:01:16.870 --> 00:01:20.570\nI just can't do because it's too\ncomplex for the human being,\n\n24\n00:01:20.570 --> 00:01:23.960\nto be able to accomplish,\nin any kind of relative amount of time.\n\n25\n00:01:23.960 --> 00:01:25.470\nSo, this is going to be\nan interesting show.\n\n26\n00:01:25.470 --> 00:01:28.422\nWhere can we allow SQL or\nAzure, should I say,\n\n27\n00:01:28.422 --> 00:01:31.777\nto take some of my\nresponsibilities off of my plate.\n\n28\n00:01:31.777 --> 00:01:36.207\nAutomate some things, and that frees me\nup to do other things maybe improve my\n\n29\n00:01:36.207 --> 00:01:38.600\nnetwork or check out new technology.\n\n30\n00:01:38.600 --> 00:01:40.300\nSo Don, I'm looking forward to this,\n\n31\n00:01:40.300 --> 00:01:44.490\nI guess this is a real\nhard thing to segway into.\n\n32\n00:01:44.490 --> 00:01:46.660\nWhere in the world do we begin with this?\n\n33\n00:01:46.660 --> 00:01:49.595\n>> Let's start with some of the things\nthat we might wanna automate right.\n\n34\n00:01:49.595 --> 00:01:54.120\nNow with an on-premise SQL server,\nthere is a ton of stuff we wanna automate.\n\n35\n00:01:54.120 --> 00:01:57.703\nYou wanna automate backups, I don't want\nto manually run a backup every day, I\n\n36\n00:01:57.703 --> 00:02:01.251\nwant it cuz I might be doing transactional\nlog back ups every fifteen minutes.\n\n37\n00:02:01.251 --> 00:02:02.688\nI don't want to have to do that.\n\n38\n00:02:02.688 --> 00:02:05.550\nI guess maybe if I'm an hourly\nemployee that would be great, but\n\n39\n00:02:05.550 --> 00:02:06.830\nif you're salary it sucks.\n\n40\n00:02:06.830 --> 00:02:10.320\nSo you don't wanna do that so\nwe need a system where it will\n\n41\n00:02:10.320 --> 00:02:12.110\nautomatically do a back\nup every fifteen minutes,\n\n42\n00:02:12.110 --> 00:02:17.290\nor I might want to automate\nupdating my indexes.\n\n43\n00:02:17.290 --> 00:02:19.290\nRight?\nWhen we create indexes,\n\n44\n00:02:19.290 --> 00:02:23.540\nindexes really improve the performance\nof a query, but they fragment over time.\n\n45\n00:02:23.540 --> 00:02:27.581\nAnd so we either need to rebuild or\nreorganize those indexes every so often,\n\n46\n00:02:27.581 --> 00:02:30.371\nonce a day, once a week,\nwhatever our interval is.\n\n47\n00:02:30.371 --> 00:02:34.940\nThose are tasks that we want to\noccur on a recurring schedule.\n\n48\n00:02:34.940 --> 00:02:37.400\nRight, backups are really\nthe greatest example.\n\n49\n00:02:37.400 --> 00:02:40.790\nWell, when Microsoft rolled on Azure SQL,\nthey said,\n\n50\n00:02:40.790 --> 00:02:44.940\nletÂ´s take these tasks that people\nautomate, and letÂ´s just do it for them.\n\n51\n00:02:44.940 --> 00:02:45.900\nAnd so backups,\n\n52\n00:02:45.900 --> 00:02:50.150\nthey back your server up once every\nminute, I mean thatÂ´s pretty good right.\n\n53\n00:02:50.150 --> 00:02:53.340\nSo, I donÂ´t have to automate\nbackups anymore they do it for me.\n\n54\n00:02:53.340 --> 00:02:56.770\nOr database integrity checks,\nI don't do that anymore.\n\n55\n00:02:56.770 --> 00:02:58.370\nMicrosoft does it for me.\n\n56\n00:02:58.370 --> 00:03:01.910\nThose types of activities, they're done.\n\n57\n00:03:01.910 --> 00:03:04.503\nAnd so when Microsoft originally\nrolled out Azure SQL,\n\n58\n00:03:04.503 --> 00:03:07.428\nthey said you know we've already\nautomated all this stuff, so\n\n59\n00:03:07.428 --> 00:03:10.060\nthere's really no point\nin doing any automation.\n\n60\n00:03:10.060 --> 00:03:10.820\nWe've already done it.\n\n61\n00:03:10.820 --> 00:03:11.630\nThat's it.\n\n62\n00:03:11.630 --> 00:03:12.645\nAnd that's how they left it.\n\n63\n00:03:12.645 --> 00:03:16.261\nBut the problem is there are some\nthings they don't do like defragmenting\n\n64\n00:03:16.261 --> 00:03:17.690\nthe indexes, right?\n\n65\n00:03:17.690 --> 00:03:18.401\nThey don't do that.\n\n66\n00:03:18.401 --> 00:03:21.406\nAnd so the index just sit there and\nthey get fragmented and\n\n67\n00:03:21.406 --> 00:03:24.250\nit's up to us to defragment them manually.\n\n68\n00:03:24.250 --> 00:03:25.822\nWell, in an on premises server,\n\n69\n00:03:25.822 --> 00:03:28.976\nyou actually have a great technology\ncalled the SQL Server Agent.\n\n70\n00:03:28.976 --> 00:03:30.091\nIn the SQL Server Agent,\n\n71\n00:03:30.091 --> 00:03:34.070\nit's just a little process that runs\nin the background on most SQL servers.\n\n72\n00:03:34.070 --> 00:03:36.010\nAnd you give jobs to do and\nyou can tell what to do.\n\n73\n00:03:36.010 --> 00:03:39.540\nSo you can say, hey, defragment\nthis indexes every Sunday at 1 AM.\n\n74\n00:03:39.540 --> 00:03:41.870\nAnd do a backup everyday every midnight.\n\n75\n00:03:41.870 --> 00:03:44.137\nAnd do s transaction log every 15 minutes.\n\n76\n00:03:44.137 --> 00:03:47.570\nYou just tell the agent to do it,\nand the agent does it.\n\n77\n00:03:47.570 --> 00:03:49.930\nJust runs the background and\nthose the job.\n\n78\n00:03:49.930 --> 00:03:53.767\nBut the agent isn't present in Azure SQL,\nit's not there.\n\n79\n00:03:53.767 --> 00:03:58.520\nSo, if you want to continue using the\nsequel server, as the SQL server agent,\n\n80\n00:03:58.520 --> 00:04:01.820\nthere we go,\nif you want to keep using that.\n\n81\n00:04:01.820 --> 00:04:07.180\nYour only option is not to use as your\nSQL but instead to deploy SQL as your VM.\n\n82\n00:04:07.180 --> 00:04:07.690\nRight?\n\n83\n00:04:07.690 --> 00:04:10.060\nAnd now you have take over\nthe management of all the stuff,\n\n84\n00:04:10.060 --> 00:04:12.790\nyou have to worry about back-ups, it's\nbasically a non-premises server at that\n\n85\n00:04:12.790 --> 00:04:15.650\npoint, just hosted in the Cloud, right.\n\n86\n00:04:15.650 --> 00:04:18.686\nBut Microsoft picked up on this pretty\nquick that there was a problem.\n\n87\n00:04:18.686 --> 00:04:21.979\nAnd what they did, is it took them a\nlittle longer to solve the problem because\n\n88\n00:04:21.979 --> 00:04:24.450\nthey didn't want to just roll\nout the agent in Azure SQL.\n\n89\n00:04:24.450 --> 00:04:28.095\nThey said, look,\nautomating SQL is one thing, but\n\n90\n00:04:28.095 --> 00:04:31.805\nthere's actually stuff people\nwanna automate all through Azure.\n\n91\n00:04:31.805 --> 00:04:35.835\nAnd so, what they created was\na tool called Azure Automation.\n\n92\n00:04:35.835 --> 00:04:38.458\nAnd Azure Automation is not just for SQL.\n\n93\n00:04:38.458 --> 00:04:43.015\nYou can use it to automate activities\nall throughout your Azure portal.\n\n94\n00:04:43.015 --> 00:04:45.525\nYou can use it to automate\ncreating virtual machines,\n\n95\n00:04:45.525 --> 00:04:50.370\nyou can automate enabling or\ndisabling networks, sending out\n\n96\n00:04:50.370 --> 00:04:55.090\nreports on machine performance,\nbut you can also use it for SQL.\n\n97\n00:04:55.090 --> 00:04:59.444\nSo if you wanna automate activities in\nSQL, you have to move away from the old\n\n98\n00:04:59.444 --> 00:05:02.316\nSQL server agent, and\nmove to Azure automation.\n\n99\n00:05:02.316 --> 00:05:04.390\nAnd so I wanna show you that process,\nhow it works.\n\n100\n00:05:04.390 --> 00:05:05.260\nThis is a pretty new one.\n\n101\n00:05:05.260 --> 00:05:08.560\nIt was in preview up until\njust a couple of weeks ago,\n\n102\n00:05:08.560 --> 00:05:10.870\nwell when this was filmed at least.\n\n103\n00:05:10.870 --> 00:05:13.900\nAnd so it is one of their newer\nservices but it's out there now.\n\n104\n00:05:13.900 --> 00:05:16.890\nIt's in production, it's ready to rock,\nand it is powerful,\n\n105\n00:05:16.890 --> 00:05:19.210\nwhich also means it's kinda hard to use.\n\n106\n00:05:19.210 --> 00:05:20.650\n[LAUGH] As most powerful things are.\n\n107\n00:05:20.650 --> 00:05:24.240\nSo, I wanna show you the process of\ngetting automation enabled, how it works,\n\n108\n00:05:24.240 --> 00:05:26.110\nhow we set it up for SQL.\n\n109\n00:05:26.110 --> 00:05:28.750\nBut just keep in the back of your\nmind that you can use this for\n\n110\n00:05:28.750 --> 00:05:32.080\na lot more than SQL, even though\nthat's what we're gonna focus on here.\n\n111\n00:05:32.080 --> 00:05:34.460\nSo let's start with just\ngetting this thing set up.\n\n112\n00:05:34.460 --> 00:05:37.390\nThe first thing is we need\nto turn on Azure Automation.\n\n113\n00:05:37.390 --> 00:05:41.350\nAnd the way you turn it on is by creating\nwhat's called a automation account.\n\n114\n00:05:41.350 --> 00:05:45.350\nJust like with storage accounts,\nit's not really like a user account or\n\n115\n00:05:45.350 --> 00:05:46.560\neven a financial account.\n\n116\n00:05:46.560 --> 00:05:49.520\nIt's just a, they call it a storage\naccount because it's the part of your\n\n117\n00:05:49.520 --> 00:05:52.150\naccount that's storing things,\nautomation's the same way.\n\n118\n00:05:52.150 --> 00:05:54.270\nSo I'm gonna create an automation account,\nand\n\n119\n00:05:54.270 --> 00:05:59.080\ninside of that account we're gonna create\nthings like credentials and jobs and\n\n120\n00:05:59.080 --> 00:06:02.560\nstuff for them to do, and\nall the things that we automate.\n\n121\n00:06:02.560 --> 00:06:03.500\nWe're gonna place in there, but\n\n122\n00:06:03.500 --> 00:06:05.460\nthe first thing is to create\nthat automation account.\n\n123\n00:06:05.460 --> 00:06:08.840\nSo I'm gonna jump over\ninto my Azure portal,\n\n124\n00:06:08.840 --> 00:06:10.420\nwhich I've completely failed to do.\n\n125\n00:06:10.420 --> 00:06:12.619\nHere we go, so\nI'm gonna jump over to my Azure portal.\n\n126\n00:06:12.619 --> 00:06:17.054\nAnd you usually won't see automation\nin your pinned list by default.\n\n127\n00:06:17.054 --> 00:06:19.640\nSo you may need to go up here to New.\n\n128\n00:06:19.640 --> 00:06:21.150\nAnd you can hunt and find it.\n\n129\n00:06:21.150 --> 00:06:22.980\nI think it's under like management or\nsomething.\n\n130\n00:06:22.980 --> 00:06:24.140\nLet's see if we can find\nit under management.\n\n131\n00:06:24.140 --> 00:06:26.290\nI normally just type in\nthe search automation.\n\n132\n00:06:26.290 --> 00:06:27.960\nBut yeah, there it is under management.\n\n133\n00:06:27.960 --> 00:06:31.820\nSo I went to New, Management, Automation.\n\n134\n00:06:31.820 --> 00:06:33.320\nAnd when you click on Automation,\n\n135\n00:06:33.320 --> 00:06:35.850\nthis is gonna take you to the screen\nwhere you can enable automation.\n\n136\n00:06:35.850 --> 00:06:39.380\nNow, it's out of preview for me.\n\n137\n00:06:39.380 --> 00:06:41.510\nMicrosoft rolls these things out in waves.\n\n138\n00:06:41.510 --> 00:06:43.430\nAnd so\nif you're watching this a month from now,\n\n139\n00:06:43.430 --> 00:06:45.250\nyou'll go straight to this screen.\n\n140\n00:06:45.250 --> 00:06:48.970\nBut if you're watching this episode right\nnow, live, it's possibly your account\n\n141\n00:06:48.970 --> 00:06:52.420\nstill has it in preview, and when you\nclick on automation, the first thing\n\n142\n00:06:52.420 --> 00:06:55.060\nyou'll get is it's asking you whether you\nwant to activate the preview feature.\n\n143\n00:06:55.060 --> 00:06:57.030\nAnd so you just say yes to that,\nand then you'll see this screen.\n\n144\n00:06:57.030 --> 00:06:59.250\nFor everybody else,\nyou'll see this screen right here.\n\n145\n00:06:59.250 --> 00:07:01.950\nOr, we can add an Automation account.\n\n146\n00:07:01.950 --> 00:07:02.520\nOkay?\n\n147\n00:07:02.520 --> 00:07:05.488\nJust like a Storage account,\nthis is a service that's going to\n\n148\n00:07:05.488 --> 00:07:08.864\nrun in the background up in Azure and\nperform my automated activities.\n\n149\n00:07:08.864 --> 00:07:10.440\nSo, I need to give it a name.\n\n150\n00:07:10.440 --> 00:07:13.620\nAnd, if this one is just supporting\na particular SQL Server,\n\n151\n00:07:13.620 --> 00:07:15.150\nI might want to name it after that.\n\n152\n00:07:15.150 --> 00:07:18.080\nOr, if it's going to be supporting all of\nmy environments, just give it a name so\n\n153\n00:07:18.080 --> 00:07:19.530\nyou can recognize it.\n\n154\n00:07:19.530 --> 00:07:23.380\nI usually break it down based on server,\nbut you don't have to do it that way.\n\n155\n00:07:23.380 --> 00:07:25.941\nMy SQL server is called itprotvdemo1.\n\n156\n00:07:25.941 --> 00:07:28.310\nAnd so, I might choose to call it that.\n\n157\n00:07:28.310 --> 00:07:32.460\nAnd see it's letting me duplicate the name\nof a server, cuz it's a separate process.\n\n158\n00:07:32.460 --> 00:07:38.750\nSo, this is gonna automate activities for\ndatabases residing on itprotvdemo1.\n\n159\n00:07:38.750 --> 00:07:41.482\nOr if I'm automating just things for\nsample dv2 or something,\n\n160\n00:07:41.482 --> 00:07:43.057\nI might put the name of the database.\n\n161\n00:07:43.057 --> 00:07:44.980\nWhatever it is that helps you\nremember what this is for.\n\n162\n00:07:46.600 --> 00:07:49.220\nThen we can pick the resource\ngroup that it's tied to.\n\n163\n00:07:49.220 --> 00:07:50.760\nAnd because I'm managing SQL servers,\n\n164\n00:07:50.760 --> 00:07:52.671\nI wanna put this in\nthe resource group with those.\n\n165\n00:07:52.671 --> 00:07:55.368\nAnd that way,\nif I ever delete the resource group,\n\n166\n00:07:55.368 --> 00:07:58.462\nthat'll knock out the servers and\nthe automation tasks.\n\n167\n00:07:58.462 --> 00:08:00.784\nI never wanna have a situation\nwhere I delete a server and\n\n168\n00:08:00.784 --> 00:08:04.048\nI still have automation tasks that were\navailable for that server cuz they're\n\n169\n00:08:04.048 --> 00:08:06.914\ngonna start failing and it's gonna\ngenerate a lot of log messages and\n\n170\n00:08:06.914 --> 00:08:09.000\njust generally annoy the heck out of you.\n\n171\n00:08:09.000 --> 00:08:10.390\nSo, I like to group those together.\n\n172\n00:08:10.390 --> 00:08:12.450\nSo, I'm gonna pick a resource group and\n\n173\n00:08:12.450 --> 00:08:17.780\nI'll put those in my\nITProTV SQL demo down here.\n\n174\n00:08:17.780 --> 00:08:19.450\nIt's tied to my subscription.\n\n175\n00:08:19.450 --> 00:08:22.660\nMy region, for whatever reason,\ndefaulted to Japan East.\n\n176\n00:08:22.660 --> 00:08:24.080\nI'm not quite sure why.\n\n177\n00:08:24.080 --> 00:08:25.590\n>> Trying to give Japan\na little more love.\n\n178\n00:08:25.590 --> 00:08:26.350\n>> I guess so.\n\n179\n00:08:26.350 --> 00:08:28.730\nThat must be the least busy\ndata center right now.\n\n180\n00:08:28.730 --> 00:08:31.550\nSo I'm gonna pick East US 2 which\nis where all my SQL servers are.\n\n181\n00:08:31.550 --> 00:08:34.450\nBut your automation account\ndoesn't actually have to be in\n\n182\n00:08:34.450 --> 00:08:36.078\nthe same region as your servers.\n\n183\n00:08:36.078 --> 00:08:37.990\nYou can pick a different\nregion if you want.\n\n184\n00:08:37.990 --> 00:08:41.410\nI normally try and keep them together\njust for management purposes.\n\n185\n00:08:41.410 --> 00:08:44.890\nThe reality is if the servers fail, the\nautomation tasks are gonna fail anyway.\n\n186\n00:08:44.890 --> 00:08:46.870\nAnd if the automation fails,\n\n187\n00:08:46.870 --> 00:08:49.310\nthen the automatic tasks aren't gonna\nrun even though the database is up.\n\n188\n00:08:49.310 --> 00:08:51.190\nSo if they're in the same data center or\n\n189\n00:08:51.190 --> 00:08:53.730\nif they're in separate data centers\ndoesn't really make a difference on this.\n\n190\n00:08:53.730 --> 00:08:57.030\nI'm not improving or\ndecreasing my availability.\n\n191\n00:08:58.740 --> 00:09:01.910\nAnd then I can just review\nmy default settings\n\n192\n00:09:01.910 --> 00:09:03.920\nwhich there's not a whole\nheck of a lot here.\n\n193\n00:09:03.920 --> 00:09:07.550\nThe only real option I have is whether\nI want to create a tutorial run book.\n\n194\n00:09:07.550 --> 00:09:09.190\nAll right now, what is a run book?\n\n195\n00:09:10.360 --> 00:09:12.710\nWith Azure automation you create jobs.\n\n196\n00:09:12.710 --> 00:09:16.300\nAnd a job is, well they don't call\nthem jobs, they call them run books.\n\n197\n00:09:16.300 --> 00:09:18.040\nI gotta makes sure I use\nthe right terminology.\n\n198\n00:09:18.040 --> 00:09:24.220\nSo, what a run book is, is the task,\nis the activity that you want performed.\n\n199\n00:09:24.220 --> 00:09:28.800\nSo if I want to defragment\nthe indexes of a SQL database,\n\n200\n00:09:28.800 --> 00:09:30.690\nI'm going to have to write a run book.\n\n201\n00:09:30.690 --> 00:09:34.990\nA script that says here what I want you to\ndo, here's the TSLQ commands that I want\n\n202\n00:09:34.990 --> 00:09:38.380\nyou issue to update that database and\nget those indexes rebuilt.\n\n203\n00:09:38.380 --> 00:09:41.440\nRight, and I need to provide\nit in the format of a runbook.\n\n204\n00:09:41.440 --> 00:09:44.820\nIf I've never work with runbook before,\nthe default is yes.\n\n205\n00:09:44.820 --> 00:09:48.740\nIt's gonna create a tutorial runbook for\nme which will show you how the scripts\n\n206\n00:09:48.740 --> 00:09:52.590\nare built, how you can handle parameters,\nhow the things should be written.\n\n207\n00:09:52.590 --> 00:09:56.190\nAnd keep in mind that it's not just SQL.\n\n208\n00:09:56.190 --> 00:09:59.690\nSo it'll be talking about other things\nlike managing Windows servers and\n\n209\n00:09:59.690 --> 00:10:00.760\nvirtualization and so\n\n210\n00:10:00.760 --> 00:10:04.220\non, cuz there's a lot of power you can\nhave in these runbooks, all right.\n\n211\n00:10:04.220 --> 00:10:05.540\nIf this is your first\ntime working with it,\n\n212\n00:10:05.540 --> 00:10:08.600\nyou definitely want that tutorial,\nbut if you've done this before,\n\n213\n00:10:08.600 --> 00:10:10.860\nyou don't necessarily care about\nthe tutorial, and you can leave that off.\n\n214\n00:10:10.860 --> 00:10:13.940\nI'll go ahead and\ncreate it for mine, all right?\n\n215\n00:10:13.940 --> 00:10:18.340\nAnd I'll say okay to that, and\nit offers to pin it to the dashboard.\n\n216\n00:10:18.340 --> 00:10:19.370\nI'll go ahead and create it.\n\n217\n00:10:19.370 --> 00:10:21.300\nAnd now I've got an automation account.\n\n218\n00:10:21.300 --> 00:10:23.710\nI can create more than one\nautomation account if I want.\n\n219\n00:10:23.710 --> 00:10:26.450\nIf I'm trying to isolate out my jobs and\nactivities.\n\n220\n00:10:26.450 --> 00:10:29.350\nOr I can have everything lumped\ninto one automation account.\n\n221\n00:10:29.350 --> 00:10:32.630\nThat's usually one of\nthe ways that I do it.\n\n222\n00:10:32.630 --> 00:10:34.410\nIt kind of depends on how\nbig the environment is.\n\n223\n00:10:34.410 --> 00:10:36.950\nIf it's a really big environment,\nI'll create automation accounts for\n\n224\n00:10:36.950 --> 00:10:38.590\neach server that I'm managing.\n\n225\n00:10:38.590 --> 00:10:39.915\nBut, if it's a small environment,\n\n226\n00:10:39.915 --> 00:10:42.710\nI'll just group it all together in one\naccount to make it a little bit easier.\n\n227\n00:10:42.710 --> 00:10:45.996\nBut it's gonna spin that up and it's\ngonna put that tutorial runbook in there.\n\n228\n00:10:45.996 --> 00:10:52.570\nAll right, now even if you, let's say for\na second, I'm talking about runbooks.\n\n229\n00:10:52.570 --> 00:10:56.110\nAnd when you write a runbook,\nit really is basically programming.\n\n230\n00:10:56.110 --> 00:10:57.910\nYou've gotta write a script.\n\n231\n00:10:57.910 --> 00:10:59.950\nLetÂ´s say you donÂ´t know scripting.\n\n232\n00:10:59.950 --> 00:11:02.760\nYou donÂ´t know those languages, and\nmaybe you donÂ´t even know TSQL.\n\n233\n00:11:02.760 --> 00:11:04.471\nI know I need to defragment my indexes,\nbut\n\n234\n00:11:04.471 --> 00:11:06.740\nI don't know the commands to do it, right.\n\n235\n00:11:06.740 --> 00:11:10.240\nWell, Microsoft actually has\na runbook gallery that we can use.\n\n236\n00:11:10.240 --> 00:11:13.190\nAnd you can go and download runbooks\nthat other people have already written,\n\n237\n00:11:13.190 --> 00:11:14.670\neven Microsoft has written.\n\n238\n00:11:14.670 --> 00:11:17.160\nAnd so, you donÂ´t necessarily have\nto be a wizard at this stuff,\n\n239\n00:11:17.160 --> 00:11:19.220\nsomebody else has probably\nalready written a runbook for\n\n240\n00:11:19.220 --> 00:11:21.190\nwhat you wanna do and\nyou can just throw those in there.\n\n241\n00:11:21.190 --> 00:11:23.980\nSo, don't panic and think you have\nto be a programmer to do this.\n\n242\n00:11:23.980 --> 00:11:25.090\nIt's actually not so bad.\n\n243\n00:11:26.670 --> 00:11:30.840\nAnd you know I keep talking about\nrunbooks so let me show you one.\n\n244\n00:11:30.840 --> 00:11:33.300\nSo, this is the PowerShell ISE,\n\n245\n00:11:33.300 --> 00:11:38.430\nwhich is just a little management\ninterface for writing PowerShell scripts.\n\n246\n00:11:38.430 --> 00:11:41.202\nAnd I've got a sample runbook\nthat I grabbed from Microsoft.\n\n247\n00:11:41.202 --> 00:11:48.550\nThis one is the SQLIndexRunbook and\nwhat it does is it grabs a database,\n\n248\n00:11:48.550 --> 00:11:53.590\nit queries a list of all the indexes that\nare available, then it queries the indexes\n\n249\n00:11:53.590 --> 00:11:57.520\nto see if they're fragmented, what\npercentage of fragmentation they have.\n\n250\n00:11:57.520 --> 00:12:02.740\nAnd if they're over a certain threshold,\nit then rebuilds them, right?\n\n251\n00:12:02.740 --> 00:12:04.470\nSo this script does exactly what I want.\n\n252\n00:12:04.470 --> 00:12:06.120\nI didn't have to write it,\njust got it from Microsoft.\n\n253\n00:12:06.120 --> 00:12:07.650\nRight, pulled it right off their website.\n\n254\n00:12:07.650 --> 00:12:10.810\nI'll put links in the show notes so\nyou guys can have those,\n\n255\n00:12:10.810 --> 00:12:13.610\nbut it's all in the runbook gallery also.\n\n256\n00:12:13.610 --> 00:12:15.570\nI'll show you that here in a moment,\ntoo, so you can just download it.\n\n257\n00:12:15.570 --> 00:12:17.650\nYou don't even need a link for it.\n\n258\n00:12:17.650 --> 00:12:21.340\nBut where these runbooks are hard, all\nthis information here at the top that's in\n\n259\n00:12:21.340 --> 00:12:24.090\ngreen, these are just notes that they\nprovided us, explaining how it works.\n\n260\n00:12:24.090 --> 00:12:27.750\nSo all of this doesn't\nactually do anything.\n\n261\n00:12:27.750 --> 00:12:29.600\nThis is just telling me how it works.\n\n262\n00:12:29.600 --> 00:12:33.830\nSo the real script starts right\nhere with a workflow, okay?\n\n263\n00:12:33.830 --> 00:12:38.340\nThey're called PowerShell workflows, and\nyou can use them on your own systems.\n\n264\n00:12:38.340 --> 00:12:39.560\nYou can use them locally.\n\n265\n00:12:39.560 --> 00:12:42.320\nBut when we upload them into\nAzure automation that's when they\n\n266\n00:12:42.320 --> 00:12:43.160\nbecome runbooks.\n\n267\n00:12:43.160 --> 00:12:45.760\nBut at the end of the day,\nthey are just PowerShell workflows.\n\n268\n00:12:45.760 --> 00:12:49.950\nAnd the first thing it's doing is it's\ndefining a handful of parameters for me.\n\n269\n00:12:49.950 --> 00:12:52.210\nAnd these parameters\nare kind of important.\n\n270\n00:12:52.210 --> 00:12:54.220\nWhat server do I connect to?\n\n271\n00:12:54.220 --> 00:12:56.290\nWhat database do I connect to?\n\n272\n00:12:56.290 --> 00:12:58.370\nWhat user account do I connect with?\n\n273\n00:12:58.370 --> 00:12:59.835\nGotta have permissions.\n\n274\n00:12:59.835 --> 00:13:04.513\nWhat percentage of fragmentation do\nI determine is the threshold, right?\n\n275\n00:13:04.513 --> 00:13:09.360\nIs it 20%, 30%, 50% when do I\ndecide I need to do a rebuild?\n\n276\n00:13:09.360 --> 00:13:12.545\nWhat port do I connect\nto the SQL server on?\n\n277\n00:13:12.545 --> 00:13:16.395\nShould I do an offline rebuild,\nif the online rebuild fails?\n\n278\n00:13:16.395 --> 00:13:20.245\nAnd what table should I, actually it\ndoesn't say what we're using that one for.\n\n279\n00:13:20.245 --> 00:13:21.745\nWhat table should we store this data in?\n\n280\n00:13:21.745 --> 00:13:22.935\nI guess or something.\n\n281\n00:13:22.935 --> 00:13:26.395\nSo, we can provide this\nadditional information and\n\n282\n00:13:26.395 --> 00:13:28.195\nthat tells the script what to do.\n\n283\n00:13:28.195 --> 00:13:30.475\nIt's gotta get that information\nfrom somewhere though, and\n\n284\n00:13:30.475 --> 00:13:31.945\nAzure automation'll\ntake you to that force.\n\n285\n00:13:31.945 --> 00:13:32.539\nWe'll see that in a minute.\n\n286\n00:13:33.680 --> 00:13:35.020\nAnd then after that becomes the hard work.\n\n287\n00:13:35.020 --> 00:13:37.150\nThis is the part where I say,\nif you're not a programmer,\n\n288\n00:13:37.150 --> 00:13:38.430\nyou don't have to sweat this.\n\n289\n00:13:38.430 --> 00:13:42.970\nBut if you are, what follows is\nall the stuff that you can do.\n\n290\n00:13:42.970 --> 00:13:46.270\nYou can come in here and\nyou can do so many amazing things,\n\n291\n00:13:46.270 --> 00:13:51.150\nfrom creating virtual machines,\nto scaling a VM up or scaling it down.\n\n292\n00:13:51.150 --> 00:13:55.160\nMaybe I know my server is\nbusy from 4 PM to 6 PM.\n\n293\n00:13:55.160 --> 00:13:59.220\nAnd so I can create an Azure Automation\nscript that every day at 3:00 PM,\n\n294\n00:13:59.220 --> 00:14:01.710\nwe scale it up to a beefier instance.\n\n295\n00:14:01.710 --> 00:14:04.570\nAnd then every day at 7:00 PM,\nwe scale it back down again.\n\n296\n00:14:04.570 --> 00:14:05.510\nAnd so we just do it manually.\n\n297\n00:14:05.510 --> 00:14:07.330\nWe scale up and down through automation.\n\n298\n00:14:07.330 --> 00:14:11.130\nNow you can scale out automatically\nthrough Azure but scaling up and\n\n299\n00:14:11.130 --> 00:14:12.930\ndown is a manual process.\n\n300\n00:14:12.930 --> 00:14:14.900\nUnless you use something like\nAzure automation, right?\n\n301\n00:14:14.900 --> 00:14:18.040\nYou just have to know how to write it,\nand it gets kind of difficult.\n\n302\n00:14:18.040 --> 00:14:20.100\nIf you look at all of this in here,\n\n303\n00:14:20.100 --> 00:14:21.990\nit's not just straight up\nrunning a SQL query, right?\n\n304\n00:14:21.990 --> 00:14:24.770\nIt's gotta define variables,\nit's gotta call a function.\n\n305\n00:14:24.770 --> 00:14:27.750\nAnd then it's basically running\nthat query against the server,\n\n306\n00:14:27.750 --> 00:14:30.750\nand then it's gotta be able to\nparse the data that comes back.\n\n307\n00:14:30.750 --> 00:14:33.690\nIt's gotta query what\ntables are in the database?\n\n308\n00:14:33.690 --> 00:14:36.140\nThen it's got a query,\nwhat indexes are tied to that table?\n\n309\n00:14:36.140 --> 00:14:40.890\nThen it's got a query, what fragmentation\nlevel each of those indexes have, and\n\n310\n00:14:40.890 --> 00:14:44.060\nthen if they exceed the threshold we set,\nthen it's gotta go in and\n\n311\n00:14:44.060 --> 00:14:45.900\nactually do the rebuild.\n\n312\n00:14:45.900 --> 00:14:49.827\nAnd so, you'll see it as it kinda iterates\ndown through this whole list where it's\n\n313\n00:14:49.827 --> 00:14:52.368\ndoing that until it finally\nget to where it finishes.\n\n314\n00:14:52.368 --> 00:14:53.482\nIt's a little complex.\n\n315\n00:14:53.482 --> 00:14:55.350\nIf you're a developer it's your job.\n\n316\n00:14:55.350 --> 00:14:57.550\nYou don't sweat that,\nyou just write it, it's no big deal.\n\n317\n00:14:57.550 --> 00:15:00.110\nBut if you're not a developer this\ncan be really challenging and\n\n318\n00:15:00.110 --> 00:15:01.750\nthat's where the gallery\nreally comes in handy.\n\n319\n00:15:01.750 --> 00:15:04.080\n>> Yeah,\nI saw that little blocks of code there and\n\n320\n00:15:04.080 --> 00:15:05.610\nI started having heart palpitations.\n\n321\n00:15:05.610 --> 00:15:09.550\nI'm thinking man, if I have to do this\nmyself it's either gonna be really,\n\n322\n00:15:09.550 --> 00:15:12.800\nreally bad and not work and\nI'm gonna get fired or two,\n\n323\n00:15:12.800 --> 00:15:15.355\nit's gonna take me forever and\nI'm gonna get fired, so.\n\n324\n00:15:15.355 --> 00:15:18.098\n[CROSSTALK] And thank you for\nhaving Galleries out there.\n\n325\n00:15:18.098 --> 00:15:19.880\nThat's a real godsend.\n\n326\n00:15:19.880 --> 00:15:21.050\n>> Yeah, absolutely.\n\n327\n00:15:21.050 --> 00:15:23.920\nAnd, when I did this Automation Account.\n\n328\n00:15:23.920 --> 00:15:26.510\nWhen I created it,\nit created one runbook for me.\n\n329\n00:15:26.510 --> 00:15:30.050\nSee, I've already got runbooks\none here in my portal.\n\n330\n00:15:30.050 --> 00:15:31.450\nAnd if I click on that.\n\n331\n00:15:31.450 --> 00:15:32.850\nIt's the tutorial right?\n\n332\n00:15:32.850 --> 00:15:35.130\nGet Azure VM tutorial?\n\n333\n00:15:35.130 --> 00:15:38.800\nAnd so it's just a quick\ntutorial that shows you how to\n\n334\n00:15:38.800 --> 00:15:40.860\naccess information about\na virtual machine.\n\n335\n00:15:40.860 --> 00:15:45.170\nIf I click on that runbook and\nI click on Edit or Review.\n\n336\n00:15:45.170 --> 00:15:46.470\nI'll do edit.\n\n337\n00:15:46.470 --> 00:15:50.212\nYou can actually go in and\nview it right here online.\n\n338\n00:15:50.212 --> 00:15:52.795\nI didn't have to download it and\nput it into the ISE or anything.\n\n339\n00:15:52.795 --> 00:15:55.820\nIt's just right here, and\nI can view what it's doing.\n\n340\n00:15:55.820 --> 00:15:58.140\nAnd you'll see here,\nit creates a workflow.\n\n341\n00:15:58.140 --> 00:15:59.546\nRight?\n\n342\n00:15:59.546 --> 00:16:01.290\nAnd in that workflow it goes out and\n\n343\n00:16:01.290 --> 00:16:05.300\nbasically it checks a credential\nto make sure the credential works.\n\n344\n00:16:05.300 --> 00:16:08.110\nAnd then after that it runs some\nsimple PowerShell commands.\n\n345\n00:16:08.110 --> 00:16:11.020\nSo if I just want to automate\nrunning a PowerShell command,\n\n346\n00:16:11.020 --> 00:16:12.810\nI can take this runbook,\n\n347\n00:16:12.810 --> 00:16:16.560\nI can put the PowerShell command that\nI want right in here and then save it.\n\n348\n00:16:16.560 --> 00:16:19.090\nI just created a runbook for\nrunning PowerShell commands.\n\n349\n00:16:19.090 --> 00:16:20.801\nAnd that makes it really easy.\n\n350\n00:16:20.801 --> 00:16:25.382\nBut I want SQL, I want to Transact-SQL so\nthis can't run T-SQL like it is,\n\n351\n00:16:25.382 --> 00:16:30.339\nI'm gotta have extra commands to do that\nand that's what that other runbook did.\n\n352\n00:16:30.339 --> 00:16:35.224\nAll right now, let me cancel out of that.\n\n353\n00:16:35.224 --> 00:16:40.741\nAnd once we back out here,\non my main, let me get out of this.\n\n354\n00:16:40.741 --> 00:16:44.370\nI've gotta back out through\nthe rabbit hole here.\n\n355\n00:16:44.370 --> 00:16:47.810\nWhen I get back to my list of runbooks,\nI can add my own runbooks.\n\n356\n00:16:47.810 --> 00:16:50.400\nWe can create them,\nload them up, and get them going.\n\n357\n00:16:50.400 --> 00:16:53.220\nBut you'll also see that link to\nbrowse the gallery right there.\n\n358\n00:16:53.220 --> 00:16:56.240\nSo if I want to do something,\none of the first things I do is come and\n\n359\n00:16:56.240 --> 00:16:58.610\ncheck the gallery,\nbecause why reinvent the wheel?\n\n360\n00:16:58.610 --> 00:17:00.840\nIf somebodyÂ´s already written\na runbook I can use theirs,\n\n361\n00:17:00.840 --> 00:17:04.720\nand you wanna do code validation,\nreview their code, make sure itÂ´s good.\n\n362\n00:17:04.720 --> 00:17:08.030\nBut, a lot of these are actually\nwritten by Microsoft.\n\n363\n00:17:08.030 --> 00:17:10.070\nWhen you come in here and\nstart looking at the galleries,\n\n364\n00:17:10.070 --> 00:17:13.710\nweÂ´ve got some like Scheduled\nVirtual Machine Shutdown/Startup.\n\n365\n00:17:13.710 --> 00:17:16.530\nI might wanna shut a VM down at some\ntimes and start it up at other times, so\n\n366\n00:17:16.530 --> 00:17:19.450\nIÂ´m not having to pay for\nthe CPU cycles when IÂ´m not using it.\n\n367\n00:17:19.450 --> 00:17:21.800\nAnd so, I could load this one and\nfire it up.\n\n368\n00:17:21.800 --> 00:17:25.007\nNotice over here itÂ´s created by Automys.\n\n369\n00:17:25.007 --> 00:17:26.870\nThat's an innovative name.\n\n370\n00:17:26.870 --> 00:17:27.490\n>> I've heard of them.\n\n371\n00:17:27.490 --> 00:17:30.980\n>> So I've heard of\nAutomys Prime [LAUGH] All right.\n\n372\n00:17:30.980 --> 00:17:32.310\n>> He's the greatest\nof all primes [LAUGH].\n\n373\n00:17:32.310 --> 00:17:35.540\n>> So some of these are just written by\nthird parties it doesn't mean they're bad,\n\n374\n00:17:35.540 --> 00:17:37.950\nyou just need to check and\nmake sure they do what you want.\n\n375\n00:17:37.950 --> 00:17:39.560\nSome of them are actually by Microsoft.\n\n376\n00:17:39.560 --> 00:17:44.120\nSo as you scan through you may find\nsome that are created by Microsoft or\n\n377\n00:17:44.120 --> 00:17:49.080\neven people at Microsoft, you'll see a lot\nof them kinda spread throughout here.\n\n378\n00:17:49.080 --> 00:17:53.150\nLet's see, this one says it was created\nby the Windows Azure Product Team.\n\n379\n00:17:53.150 --> 00:17:56.670\nYou can probably trust them, since all of\nyour stuff is running on their server.\n\n380\n00:17:56.670 --> 00:18:00.410\nAnd this one does a stop Windows Azure\nvirtual machines on a schedule.\n\n381\n00:18:00.410 --> 00:18:03.710\nSo similar to the other one, I got two\ndifferent scripts that do the same thing.\n\n382\n00:18:03.710 --> 00:18:08.670\nSo when I wanna create a task,\nI'll come in here and look.\n\n383\n00:18:08.670 --> 00:18:11.040\nIn fact, here I'll just search for SQL.\n\n384\n00:18:11.040 --> 00:18:13.970\nSo I can see ones that\ndeal with Azure SQL.\n\n385\n00:18:13.970 --> 00:18:16.360\nHere's Azure SQL Database\nVertically Scale.\n\n386\n00:18:16.360 --> 00:18:17.090\nI mentioned that one, right?\n\n387\n00:18:17.090 --> 00:18:21.290\nI might want to scale the server up or\nscale it down at a certain time.\n\n388\n00:18:21.290 --> 00:18:24.190\nWell, you can't do that\nautomatically normally, but\n\n389\n00:18:24.190 --> 00:18:27.680\nhere I can load this runbook and\nit'll do it, right?\n\n390\n00:18:27.680 --> 00:18:31.180\nHow to use a SQL command in\nan Azure Automation Runbook.\n\n391\n00:18:31.180 --> 00:18:33.990\nSo now, I can take this tutorial, and\n\n392\n00:18:33.990 --> 00:18:37.730\nI can put whatever TSQL commands\nI want into this tutorial.\n\n393\n00:18:37.730 --> 00:18:39.560\nAnd now I've created a runbook\nthat does what I need.\n\n394\n00:18:39.560 --> 00:18:42.790\nSo again, you don't have to reinvent\nthe wheel if you don't want to.\n\n395\n00:18:42.790 --> 00:18:43.641\nI'll take that one.\n\n396\n00:18:43.641 --> 00:18:46.789\nAnd this one's labeled as a tutorial,\nso it'll display it, and\n\n397\n00:18:46.789 --> 00:18:50.730\nthen I can just click import, and\nit's gonna bring that into my account.\n\n398\n00:18:50.730 --> 00:18:53.200\nAnd now I can give it a name, and so\n\n399\n00:18:53.200 --> 00:18:57.490\nyou know maybe I want this one to do\nmaybe updating statistics, right?\n\n400\n00:18:57.490 --> 00:19:04.870\nSo I might call this one like update,\ndon't wanna screw this up.\n\n401\n00:19:04.870 --> 00:19:05.955\n>> That's not how you\nspell update [LAUGH].\n\n402\n00:19:05.955 --> 00:19:08.520\n>> [LAUGH] Update Table Statistics.\n\n403\n00:19:08.520 --> 00:19:12.220\nIf you watched our episode\non Database Management,\n\n404\n00:19:12.220 --> 00:19:14.040\nI think it was Davis Maintenance.\n\n405\n00:19:14.040 --> 00:19:17.188\nDavis Maintenance, I talked about\nupdating table statistics and\n\n406\n00:19:17.188 --> 00:19:19.100\nI showed the commands to do that.\n\n407\n00:19:19.100 --> 00:19:24.214\nSo I could create this runbook and\nupdate it to include my commands and\n\n408\n00:19:24.214 --> 00:19:29.270\nnow it'll be able to do that on\nan automated schedule, right?\n\n409\n00:19:29.270 --> 00:19:29.830\nOh shoot.\n\n410\n00:19:29.830 --> 00:19:31.880\n>> I don't think it likes your spaces.\n\n411\n00:19:31.880 --> 00:19:36.670\n>> Let me do underscores, see if it will\nbe happy with that, and there we go.\n\n412\n00:19:36.670 --> 00:19:40.140\nOkay, so we can import these,\nsaves a heck of a lot of time.\n\n413\n00:19:40.140 --> 00:19:42.450\nNow when you import them like this,\n\n414\n00:19:42.450 --> 00:19:46.770\nthey're in basically your runbook list and\nthey're ready to go.\n\n415\n00:19:46.770 --> 00:19:48.140\nSo I've got them right here.\n\n416\n00:19:48.140 --> 00:19:52.590\nBut see how the first one shows as\npublished and the second one shows as new?\n\n417\n00:19:52.590 --> 00:19:56.610\nWhen you bring in a new run book,\nit's not ready to run right off the bat.\n\n418\n00:19:56.610 --> 00:19:59.900\nThere's a little bit more that we've got\nto configure on it to get it working.\n\n419\n00:19:59.900 --> 00:20:03.360\nAnd so it's gonna show as new,\nI have to publish it before I can run it.\n\n420\n00:20:03.360 --> 00:20:06.630\nPublishing doesn't mean I'm making it\navailable to the whole wide world.\n\n421\n00:20:06.630 --> 00:20:09.600\nPublishing means I'm making it\navailable to my Azure account, and\n\n422\n00:20:09.600 --> 00:20:12.080\nyou can't run it until it's published,\nall right?\n\n423\n00:20:12.080 --> 00:20:14.740\nNow you can write a runbook offline also,\n\n424\n00:20:14.740 --> 00:20:17.020\nlike the one I have on my\ndesktop that I downloaded.\n\n425\n00:20:17.020 --> 00:20:18.070\nAnd you can import those.\n\n426\n00:20:18.070 --> 00:20:21.000\nSo if I go up here to add\na runbook I can come in and\n\n427\n00:20:21.000 --> 00:20:24.030\nI can choose to import\nan existing runbook.\n\n428\n00:20:24.030 --> 00:20:26.220\n>> And\nI can pull it right from my own computer.\n\n429\n00:20:26.220 --> 00:20:29.830\nAnd so I'm gonna browse and\npull this one that I've got on my desktop.\n\n430\n00:20:29.830 --> 00:20:31.930\nWhich just came out of the gallery anyway,\nright?\n\n431\n00:20:31.930 --> 00:20:33.380\nSo I could have got it from there.\n\n432\n00:20:33.380 --> 00:20:36.820\nBut I'm gonna bring it in and\nit's the update sequel indexes and so\n\n433\n00:20:36.820 --> 00:20:37.810\nI'm gonna rename that.\n\n434\n00:20:37.810 --> 00:20:41.230\nOops, oh shoot that's not what I wanted,\nI clicked on the wrong field.\n\n435\n00:20:41.230 --> 00:20:44.050\nI want to rename it so\nit's something I can remember.\n\n436\n00:20:44.050 --> 00:20:46.100\nActually it won't let me rename it here,\nwill it?\n\n437\n00:20:46.100 --> 00:20:48.950\nAll right, well, I'll leave it be then,\nand I'll go ahead and create that,\n\n438\n00:20:48.950 --> 00:20:50.440\nand it's gonna bring it in.\n\n439\n00:20:50.440 --> 00:20:53.790\nNow even though I just brought it in and I\nknow it's good, it's still not published.\n\n440\n00:20:53.790 --> 00:20:57.890\nIt still shows as new, just like the ones\nI picked out of gallery, all right?\n\n441\n00:20:57.890 --> 00:21:01.210\nNow before I publish it, there's one\nmore thing that I need to define.\n\n442\n00:21:02.340 --> 00:21:05.570\nWhen I went under Azure Automation, and\n\n443\n00:21:05.570 --> 00:21:09.670\nI went into the Automation account\nthat I created, itprotvdemo1.\n\n444\n00:21:09.670 --> 00:21:12.820\nRunbooks were just one\npart of what we setup.\n\n445\n00:21:12.820 --> 00:21:15.549\nYou'll see a few other things that are\ndown here also that are down here, right?\n\n446\n00:21:15.549 --> 00:21:19.769\nAssets and jobs, Assets\nare resources that are available for\n\n447\n00:21:19.769 --> 00:21:24.410\nus to use in our runbooks, and\nthese are things that are reuseable.\n\n448\n00:21:24.410 --> 00:21:29.390\nAnd one of the most important assets\nyou can create, a user credential.\n\n449\n00:21:29.390 --> 00:21:33.390\nwhen the runbook runs, it has to run\nwith a certain user's permission.\n\n450\n00:21:33.390 --> 00:21:36.740\nAnd so I can created that as\nan asset that my runbook can call.\n\n451\n00:21:36.740 --> 00:21:38.370\nAnd I can reuse an asset over and\n\n452\n00:21:38.370 --> 00:21:40.450\nover again with different\nrunbooks if I want to.\n\n453\n00:21:40.450 --> 00:21:44.660\nI might have the same sequel account\nthat I use for five different runbooks.\n\n454\n00:21:44.660 --> 00:21:48.410\nSo I create it once as an asset and\nI link it in to all those runbooks.\n\n455\n00:21:48.410 --> 00:21:52.400\nAnd then jobs, those are tunbooks\nthat are running right now.\n\n456\n00:21:52.400 --> 00:21:54.006\nWhen they're running, that's a job.\n\n457\n00:21:54.006 --> 00:21:56.200\nWhen they're not running, that's it.\n\n458\n00:21:56.200 --> 00:21:58.150\nI've got three runbooks but\nnone of them are running, so\n\n459\n00:21:58.150 --> 00:21:59.815\nI've got no jobs, got no job.\n\n460\n00:21:59.815 --> 00:22:01.220\n>> [LAUGH]\n>> So it's just sitting here and\n\n461\n00:22:01.220 --> 00:22:02.330\nit's not doing anything.\n\n462\n00:22:02.330 --> 00:22:04.340\nBut as I schedule these things and\n\n463\n00:22:04.340 --> 00:22:08.060\nput them to work, then I'll start to\nsee jobs appear when they're running.\n\n464\n00:22:08.060 --> 00:22:12.130\nBut if I go under Assets, what we're\ngonna see here on to be the asset side\n\n465\n00:22:12.130 --> 00:22:14.820\nare some of the different things we\ncan create like schedules, right?\n\n466\n00:22:14.820 --> 00:22:16.650\nWhen do I want these things to run?\n\n467\n00:22:16.650 --> 00:22:18.850\nModules, the various\ncomponents inside of it.\n\n468\n00:22:18.850 --> 00:22:21.240\nCertificates which I can use for\nauthentication.\n\n469\n00:22:21.240 --> 00:22:23.890\nConnections which I'll use if\nI'm establishing connection\n\n470\n00:22:23.890 --> 00:22:25.980\nbetween more than one services.\n\n471\n00:22:25.980 --> 00:22:30.280\nVariables if I have system wide\nvariables that I wanna populate here and\n\n472\n00:22:30.280 --> 00:22:33.550\nhave my runbooks feed off of that, so\nI can change something here once, and\n\n473\n00:22:33.550 --> 00:22:35.570\nit takes effect across all my run books.\n\n474\n00:22:35.570 --> 00:22:37.130\nAnd then, credentials.\n\n475\n00:22:37.130 --> 00:22:39.050\nAnd the credentials\nare what I need right now,\n\n476\n00:22:39.050 --> 00:22:41.940\nif IÂ´m gonna perform any SQL\nactivity I need credentials.\n\n477\n00:22:41.940 --> 00:22:47.410\nSo IÂ´m gonna add a credential, and what\nI would normally do is on MySQL servers,\n\n478\n00:22:47.410 --> 00:22:50.910\nI would create a dedicated credential\njust for Azure Automation, right?\n\n479\n00:22:50.910 --> 00:22:52.260\nBut for\nhere on the show I'm gonna use my own.\n\n480\n00:22:52.260 --> 00:22:54.800\nSo I'm gonna create\na credential called dpezet.\n\n481\n00:22:54.800 --> 00:22:57.750\nAnd I'll set the username and password.\n\n482\n00:22:57.750 --> 00:23:01.860\nSo when I login to SQL, I have a username\nand password that I'm using and so\n\n483\n00:23:01.860 --> 00:23:03.500\nI'm gonna punch that in.\n\n484\n00:23:03.500 --> 00:23:04.770\nAnd that's gonna be my credential.\n\n485\n00:23:04.770 --> 00:23:06.790\nNow, like I said, in real life land,\n\n486\n00:23:06.790 --> 00:23:09.880\nyou'll want to create a dedicated\naccount just for Azure automation.\n\n487\n00:23:09.880 --> 00:23:14.610\nBecause what happens is I don't want\nsomebody figuring out my password and\n\n488\n00:23:14.610 --> 00:23:17.180\nnow they can get in and start messing\nwith things that are automated, and\n\n489\n00:23:17.180 --> 00:23:18.390\nthen we've got a real problem.\n\n490\n00:23:18.390 --> 00:23:23.288\nOr if I reset my password later on,\nnow I just broke this job, right?\n\n491\n00:23:23.288 --> 00:23:25.710\nSo if I have a dedicated account for\nit, that won't happen.\n\n492\n00:23:25.710 --> 00:23:28.830\nSo, I'm just gonna set those credentials\nright there, and I'll hit Create.\n\n493\n00:23:30.350 --> 00:23:33.870\nAnd now I've got credentials that are\navailable and I'll be able to use those in\n\n494\n00:23:33.870 --> 00:23:37.260\nmy runbook so that it'll be\nable to access the SQL server.\n\n495\n00:23:37.260 --> 00:23:40.280\nAll right, so I've got my credentials,\nI've got my runbook.\n\n496\n00:23:40.280 --> 00:23:43.850\nI can also create a schedule,\nand when i go into the schedules,\n\n497\n00:23:43.850 --> 00:23:44.720\nschedules are easy right?\n\n498\n00:23:44.720 --> 00:23:47.163\nWe just need to tell it\nwhen we want it to run.\n\n499\n00:23:47.163 --> 00:23:51.713\nAnd so for this one I might create\na schedule that is every Sunday at\n\n500\n00:23:51.713 --> 00:23:54.296\n1:00 AM or something like that.\n\n501\n00:23:54.296 --> 00:23:56.615\nIf it's a back up or a task like that, and\n\n502\n00:23:56.615 --> 00:23:59.840\nI want it to run far more\nfrequently I'll call this one.\n\n503\n00:23:59.840 --> 00:24:01.320\nNow, will this let me use spaces?\n\n504\n00:24:01.320 --> 00:24:02.629\n>> No.\n\n505\n00:24:02.629 --> 00:24:06.154\nSo, every Sunday-\n>> At the Coliseum [LAUGH]\n\n506\n00:24:06.154 --> 00:24:06.782\n>> At 1 AM, and\n\n507\n00:24:06.782 --> 00:24:09.815\nI'm giving it a name like that so\nthat I can remember what it is,\n\n508\n00:24:09.815 --> 00:24:13.252\ncuz I might have other activities I\nwant to run every Sunday at 1 AM, and\n\n509\n00:24:13.252 --> 00:24:15.570\nI can reuse this schedule for\nthem too, right?\n\n510\n00:24:15.570 --> 00:24:18.830\nAlways think about reuse of this stuff,\nand so\n\n511\n00:24:18.830 --> 00:24:23.322\nthe start, I'll just leave it right now,\nI am gonna have to set it to 1 AM, and\n\n512\n00:24:23.322 --> 00:24:28.306\nit's gonna be mad cuz I'm picking\na time that's in the past,\n\n513\n00:24:28.306 --> 00:24:31.855\nso, if I just bump that to there,\nthat'll fix that.\n\n514\n00:24:31.855 --> 00:24:40.260\nSo it's gonna start at January 15th\nwhich is tomorrow at 1 AM, all right,\n\n515\n00:24:40.260 --> 00:24:42.720\nthat's when it's gonna start, and for\nthe recurrence, I can come in here and\n\n516\n00:24:42.720 --> 00:24:47.670\nI can set it to a daily recurrence or\nan hourly recurrence, and if I pick daily,\n\n517\n00:24:47.670 --> 00:24:51.480\nI can specify it runs every certain\nnumber of days, and if I want it to run\n\n518\n00:24:51.480 --> 00:24:55.250\nevery Sunday, and what I actually need\nto do is come up here and pick Sunday.\n\n519\n00:24:57.320 --> 00:25:02.690\nSo Sunday at 1 AM, and then IÂ´ll have\nit recur every seven days, all right.\n\n520\n00:25:02.690 --> 00:25:06.790\nSo now itÂ´s gonna run every Sunday at 1\nAM, and I can set an end data for that, or\n\n521\n00:25:06.790 --> 00:25:11.740\nI can just let it run forever, and\nthatÂ´s what IÂ´m gonna do, all right.\n\n522\n00:25:11.740 --> 00:25:15.310\nSo now IÂ´ve got a schedule and IÂ´ve got\ncredentials, now I just need to tell that\n\n523\n00:25:15.310 --> 00:25:20.870\njob to run, well, when I looked at that\nRunbook, remember those parameters?\n\n524\n00:25:20.870 --> 00:25:24.450\nIt was asking what server to connect you,\nwhat database connect you,\n\n525\n00:25:24.450 --> 00:25:27.070\nwhat is my fragmentation threshold?\n\n526\n00:25:27.070 --> 00:25:28.870\nWhere do we get all that stuff?\n\n527\n00:25:28.870 --> 00:25:32.170\nWell we've gotta get that when we go and\npublish and schedule this job, so\n\n528\n00:25:32.170 --> 00:25:34.630\nthat's gonna be our next\nstep to get this done.\n\n529\n00:25:34.630 --> 00:25:38.958\nSo we've got our Runbook that's in place,\nif you just wrote this Runbook,\n\n530\n00:25:38.958 --> 00:25:41.400\nit's probably a good idea to test it and\n\n531\n00:25:41.400 --> 00:25:44.261\nwe can do that right before publishing\ntoo, so that's gonna be our next step,\n\n532\n00:25:44.261 --> 00:25:49.780\nso I'm gonna jump back to the ITProTV\ndemo on Automation account and\n\n533\n00:25:49.780 --> 00:25:53.710\nI'm gonna go to my Runbooks and I'm gonna\nfind that Runbook that I've published or\n\n534\n00:25:53.710 --> 00:25:58.300\nthat I've pushed up\nthe Update SQLIndexRunbook, all right, and\n\n535\n00:25:58.300 --> 00:26:03.410\nwhen we go in there,\nhere's where we can edit the Runbook and\n\n536\n00:26:03.410 --> 00:26:06.960\nwhen you edit it, that's where you\ncan go in and review the code, right?\n\n537\n00:26:06.960 --> 00:26:09.830\nAnd even if you just upload it and you're\nnot gonna change a single thing you still\n\n538\n00:26:09.830 --> 00:26:13.700\nneed to do this, right, because this is\nwhere I'll get the Publish option, and\n\n539\n00:26:13.700 --> 00:26:16.650\nI don't have the Publish option anywhere\nelse until I go in and edit this one, so\n\n540\n00:26:16.650 --> 00:26:22.598\nI might not change a single thing in here,\nbut I need to a at least edit it and\n\n541\n00:26:22.598 --> 00:26:27.170\nthen hit Publish, all right, but\nyou've also got the Test pane and\n\n542\n00:26:27.170 --> 00:26:30.470\nthe Test pane is a great place to\ngo because you can try it out.\n\n543\n00:26:30.470 --> 00:26:35.138\nNormally when we run this jobs it run on\nthe background you can't see what happens,\n\n544\n00:26:35.138 --> 00:26:39.403\nif they get an error message you don't\nsee it, right, but in the Test pane,\n\n545\n00:26:39.403 --> 00:26:43.136\nsee how it's letting me provide\nall those parameters right here,\n\n546\n00:26:43.136 --> 00:26:46.933\nI can give it the parameters and\nI can tell it to run, so I can tell it,\n\n547\n00:26:46.933 --> 00:26:51.003\nhow I want you to connect to\nitprotvdemo1.database.windows.net,\n\n548\n00:26:51.003 --> 00:26:53.113\nthe database is called SampleDB2.\n\n549\n00:26:53.113 --> 00:26:56.829\nThe credential name I call dpezet,\nthat's the credential that I created here\n\n550\n00:26:56.829 --> 00:27:00.826\ninside of Azure Automation, not, it\ndoesn't have to match the username, right,\n\n551\n00:27:00.826 --> 00:27:03.304\nso they could be two completely\ndifferent things but\n\n552\n00:27:03.304 --> 00:27:06.513\nhas to match whatever name I assigned\nto it in Azure Automation, and\n\n553\n00:27:06.513 --> 00:27:10.338\nthen the FRAGPERCENTAGE, it says the\ndefault is 20 so I can leave it with that,\n\n554\n00:27:10.338 --> 00:27:14.052\nbut maybe [INAUDIBLE] mind to be 30%,\nit's gonna be 30% or higher for me to\n\n555\n00:27:14.052 --> 00:27:18.612\ndefragment, and then the SQLSERVERPORT,\nit'll default to 1433, I'm okay with that.\n\n556\n00:27:18.612 --> 00:27:23.074\nAnd then rebuild offline, I'm not a big\nfan of that option, so I might choose\n\n557\n00:27:23.074 --> 00:27:27.809\nto use it as False, and so that it won't\nhappen, and then the last option is, oh,\n\n558\n00:27:27.809 --> 00:27:32.405\nI can pick a particular table, I might not\nwanna hit every table, so I can come in\n\n559\n00:27:32.405 --> 00:27:36.112\nhere and say like dbo.Employees,\nif I leave it at the default,\n\n560\n00:27:36.112 --> 00:27:40.230\nit'll grab all the tables, so\nI'll leave it in the default, okay, so\n\n561\n00:27:40.230 --> 00:27:43.182\nnow it's got all that,\nit's got the parameters,\n\n562\n00:27:43.182 --> 00:27:48.060\nand I can start it up, and it's gonna run,\nand we'll see if it works, right?\n\n563\n00:27:48.060 --> 00:27:51.260\nAnd if it fails, I'll see that it failed,\nand I'll see the error, and\n\n564\n00:27:51.260 --> 00:27:54.980\nI can start to troubleshoot it, and\nif it succeeds, then i know it's good and\n\n565\n00:27:54.980 --> 00:27:57.820\nI'm ready to publish it, so definitely\na great idea to use the Test pane here,\n\n566\n00:27:57.820 --> 00:28:02.340\nsee how it says, I'm queued, so\nit's getting ready to run it,\n\n567\n00:28:02.340 --> 00:28:06.030\nit usually runs pretty quick, but\nwhen things get really busy the Test pane\n\n568\n00:28:06.030 --> 00:28:09.520\ngets lower priority at Azure, so\nsometimes it can take a little while,\n\n569\n00:28:09.520 --> 00:28:12.770\nbut mines starting, and if everything\nworks, I'll just see a message that says,\n\n570\n00:28:12.770 --> 00:28:16.380\nI think it says completed if I remember,\nright, and that lets you know it's done.\n\n571\n00:28:16.380 --> 00:28:20.460\nIf it fails, you'll get a bunch of\nred text, it'll all fill up this, and\n\n572\n00:28:20.460 --> 00:28:23.340\nthat's the error message,\nyou can troubleshoot what happened and\n\n573\n00:28:23.340 --> 00:28:24.720\nkinda figure it out from there.\n\n574\n00:28:24.720 --> 00:28:27.690\n>> Give you a little try before\nyou buy scenario, right Don?\n\n575\n00:28:27.690 --> 00:28:30.280\n>> Yeah, and when you're grabbing stuff\nout of the gallery, you don't know if it\n\n576\n00:28:30.280 --> 00:28:34.620\nworks, and these parameters, you don't\nnecessarily know how to fill that out or\n\n577\n00:28:34.620 --> 00:28:37.800\nwhat to put in there, so\nyou could have some real problems there,\n\n578\n00:28:37.800 --> 00:28:42.700\nyep, I got completed, so mine works, if I\nwere to change something, let me change,\n\n579\n00:28:42.700 --> 00:28:47.830\nlet me put like a bad database name in,\nso I'll do SampleDB3, right?\n\n580\n00:28:47.830 --> 00:28:51.130\nWell I don't have a SampleDB3, but\nif I go in here and start this,\n\n581\n00:28:51.130 --> 00:28:54.250\nit's gonna submit the request to run it,\nit's gonna try and run it,\n\n582\n00:28:54.250 --> 00:28:57.410\nand it's gonna try and connect to\nSampleDB3, and it's gonna fail, and so\n\n583\n00:28:57.410 --> 00:29:00.132\nI'll get a nice big error message,\nunless I created a SampleDB3,\n\n584\n00:29:00.132 --> 00:29:04.390\n[INAUDIBLE] [LAUGH] but I'll get a nice\nbig error message, there it is, so\n\n585\n00:29:04.390 --> 00:29:07.646\nit completed and now we get this\nexception call, and I go in here,\n\n586\n00:29:07.646 --> 00:29:12.200\nCannot open database SampleDB3, and\nwe can kinda start to troubleshoot that.\n\n587\n00:29:12.200 --> 00:29:17.120\nSee it did try to log in with my\ncredentials, dpezet and just couldn't\n\n588\n00:29:17.120 --> 00:29:21.750\nget there, so, once you've tested though\nand everything's working the way that you\n\n589\n00:29:21.750 --> 00:29:26.290\nwant, you can go back to the Edit screen\nand you're ready to publish, and so\n\n590\n00:29:26.290 --> 00:29:30.044\nI'm gonna go ahead and publish this and\nremember you're not making it available\n\n591\n00:29:30.044 --> 00:29:34.380\nfor the world when you publish, you're\njust saving this and saying it's good,\n\n592\n00:29:34.380 --> 00:29:38.030\neverything worked the way I wanted,\nI'm now gonna publish it, and\n\n593\n00:29:38.030 --> 00:29:40.990\nnow that it's published you can\nrun it manually whenever you want,\n\n594\n00:29:40.990 --> 00:29:44.040\nright from here so I can just come in and\nhit Start it will ask me for\n\n595\n00:29:44.040 --> 00:29:48.840\nthe various variables, we're done it, and\nthen we can publish it and we'll have it\n\n596\n00:29:48.840 --> 00:29:53.680\nright, or we can just schedule it and\nthat's normally what we wanna do is,\n\n597\n00:29:53.680 --> 00:29:56.888\nwe wanna schedule this and so-\n>> We are talking automation here.\n\n598\n00:29:56.888 --> 00:30:01.390\n>> Yeah, that's kind of a point, so\nwhen we go to schedule it, right over here\n\n599\n00:30:01.390 --> 00:30:05.380\nyou'll see you can link it to a Schedule,\nand then you can set your parameters, and\n\n600\n00:30:05.380 --> 00:30:08.790\nso I'm gonna link it to a Schedule, we\nalready made our schedule, but I could've\n\n601\n00:30:08.790 --> 00:30:12.962\nadded it right from here if I wanted so\nI'll choose Every Sunday at 1 AM and\n\n602\n00:30:12.962 --> 00:30:18.130\nthen the Parameters, it's gonna save\nthese parameters as part of the schedule,\n\n603\n00:30:18.130 --> 00:30:20.840\nso I won't have to come in and\nenter these every time, so\n\n604\n00:30:20.840 --> 00:30:29.830\nI can point it to the server,\nitprotvdemo1.database.windows.net and\n\n605\n00:30:29.830 --> 00:30:33.640\nthen the database itself\nwhich is called SampleDB2.\n\n606\n00:30:33.640 --> 00:30:36.790\nThe credential name which was\njust dpezet and remember that,\n\n607\n00:30:36.790 --> 00:30:40.690\nthat's not the credential in SQL, it's the\ncredential here in Azure automation which\n\n608\n00:30:40.690 --> 00:30:42.610\nmay have the same name,\nmay not have the same name so\n\n609\n00:30:42.610 --> 00:30:47.250\nmake sure use the automation one,\nthe FRAGPERCENTAGE, I wanted it to be 30,\n\n610\n00:30:47.250 --> 00:30:51.770\nthe port, the rebuild options, I'll just\nleave those at their defaults, all right?\n\n611\n00:30:51.770 --> 00:30:56.280\nAnd I'll just hit OK, and that'll\nsave those, and once I hit OK here,\n\n612\n00:30:56.280 --> 00:31:01.240\nI've now got it scheduled to run, and\nevery Sunday at 1 AM, this Runbook will\n\n613\n00:31:01.240 --> 00:31:05.880\nexecute and I don't have to worry about\nrebuilding those indexes anymore.\n\n614\n00:31:05.880 --> 00:31:09.320\nI know everyday of Sunday my indexes\nrebuild, if they're fragmented and\n\n615\n00:31:09.320 --> 00:31:10.290\nthat'll happen, and\n\n616\n00:31:10.290 --> 00:31:13.920\nI would usually add another one that\nwould do updating my statistics, right?\n\n617\n00:31:13.920 --> 00:31:18.090\nSo reach out and update those statistics\nevery Sunday, or however often, and\n\n618\n00:31:18.090 --> 00:31:20.990\nyou can get really complex with those\nqueries too to find out if you actually\n\n619\n00:31:20.990 --> 00:31:25.930\nneeded to rebuild them I mean, update the\nstatistics or not, you can set that up, so\n\n620\n00:31:25.930 --> 00:31:31.070\nall done right here through automation and\nit's all stored here on the site, so,\n\n621\n00:31:31.070 --> 00:31:34.020\nif you've got more than one Administrator\nthey can all come in and view it, they can\n\n622\n00:31:34.020 --> 00:31:38.730\nedit it, work with it, add new ones,\nand you can automate not just SQL, but\n\n623\n00:31:38.730 --> 00:31:42.090\nall of your various Azure services right\nhere, Azure automation's really cool.\n\n624\n00:31:42.090 --> 00:31:46.010\n>> Yes, it's obviously very cool, and it's\nsomething we want to take advantage of,\n\n625\n00:31:46.010 --> 00:31:50.070\nit is there, let's use it like I said\nbefore, your philosophy should be,\n\n626\n00:31:50.070 --> 00:31:53.860\nallow my computer to do everything\nthat I really don't wanna\n\n627\n00:31:53.860 --> 00:31:56.360\ndo to be honest with you,\nor is very complex.\n\n628\n00:31:56.360 --> 00:31:59.640\nI did find it ironic\nthat it seemed at least\n\n629\n00:31:59.640 --> 00:32:04.530\nkind of complex to set up the automation\nwhich is almost contradictory but\n\n630\n00:32:04.530 --> 00:32:06.860\nonce you get everything going,\nyou'll understand a little bit of that,\n\n631\n00:32:06.860 --> 00:32:10.730\nmaking those runbooks, that's really\nwhere the metal meets the meat,\n\n632\n00:32:10.730 --> 00:32:13.830\nyou get [INAUDIBLE] that hand, and don't\nforget you got the gallery in case that is\n\n633\n00:32:13.830 --> 00:32:18.020\njust far beyond your limitations,\nright here and that's me.\n\n634\n00:32:18.020 --> 00:32:20.220\nTake advantage of that and\nuse those features, Don,\n\n635\n00:32:20.220 --> 00:32:21.760\nis there anything else that\nwe need to understand?\n\n636\n00:32:21.760 --> 00:32:24.210\nAt least in this show,\nwhen it comes to automation.\n\n637\n00:32:25.270 --> 00:32:28.500\n>> Just remember that, like you said about\ncomplexity, sometimes you might look at\n\n638\n00:32:28.500 --> 00:32:31.920\nand say, you know what it's faster if I\njust go in and rebuild the indexes, right?\n\n639\n00:32:31.920 --> 00:32:35.230\nWell it might be true but if you have to\ndo it every week for your entire career,\n\n640\n00:32:35.230 --> 00:32:39.340\nthat time adds up, and so if you spent two\nor three hours getting automation set up,\n\n641\n00:32:39.340 --> 00:32:42.860\nyeah it's an investment in time but now\nyou don't have to worry about it again and\n\n642\n00:32:42.860 --> 00:32:47.250\neverything is modular so you can reuse it,\nso as you add more SQL servers and more\n\n643\n00:32:47.250 --> 00:32:51.770\ndatabases you just reuse that same Runbook\nand you can change the variables so\n\n644\n00:32:51.770 --> 00:32:54.960\nI can do another schedule and\nprovide a different server name and\n\n645\n00:32:54.960 --> 00:32:58.218\na different database name for that other\nschedule, [INAUDIBLE] for that other\n\n646\n00:32:58.218 --> 00:33:02.320\nschedule that job and then off it goes,\nyou can have more than one schedule with\n\n647\n00:33:02.320 --> 00:33:05.790\nmore than one set of parameters, you can\nreally get some good power in there, and\n\n648\n00:33:05.790 --> 00:33:09.900\nit really is simple, so it's worth the\ninvestment time to get it set up, just to\n\n649\n00:33:09.900 --> 00:33:12.060\nnot have to worry about it afterwords\n>> I totally agree,\n\n650\n00:33:12.060 --> 00:33:15.780\nall the legwork is done for you, just\ncontinue to reuse it over and over again,\n\n651\n00:33:15.780 --> 00:33:19.860\nand once you've done all the bulk of\nthat front work, the back work is done,\n\n652\n00:33:19.860 --> 00:33:21.120\nyou're off to the races.\n\n653\n00:33:21.120 --> 00:33:24.429\nDon, thank you so much for explaining\nthis to us, this is great stuff,\n\n654\n00:33:24.429 --> 00:33:27.299\nthis is stuff that's gonna help\nus out practically or maybe,\n\n655\n00:33:27.299 --> 00:33:29.861\nif you come across exam or\nsomething like that one day.\n\n656\n00:33:29.861 --> 00:33:31.503\n>> [LAUGH]\n>> All right, that being said,\n\n657\n00:33:31.503 --> 00:33:34.188\nthanks again for helping us out Don and\nthank you for watching,\n\n658\n00:33:34.188 --> 00:33:37.900\nwe're gonna go ahead and sign off for\nITProTV, I've been you host Daniel Lowry,\n\n659\n00:33:37.900 --> 00:33:38.404\n>> And I'm Don Pezet.\n\n660\n00:33:38.404 --> 00:33:41.488\n>> And we will see you next time.\n\n661\n00:33:41.488 --> 00:33:46.750\n[MUSIC]\n\n",
          "vimeoId": "151903533"
        },
        {
          "description": "In this episode, Don and Daniel take a look at exporting data from your Azure SQL database. First they talk about when you might need to export an entire database and then walk you through the methods to that end. Then they discuss how you might export pieces of data like tables from your database. They show you a few formats that you might export the data as such as XML, CSV, and even into an Excel spreadsheet.",
          "length": "1879",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-azuresql/techskills-azuresql-2-4-exporting_data-111416-1.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-azuresql/techskills-azuresql-2-4-exporting_data-111416-1-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-azuresql/techskills-azuresql-2-4-exporting_data-111416-1-sm.jpg",
          "title": "Exporting Data",
          "transcript": "WEBVTT\n\n1\n00:00:00.000 --> 00:00:10.000\n[MUSIC]\n\n2\n00:00:11.599 --> 00:00:15.671\nAll right, greetings and welcome to\nanother great episode of IT Pro TV.\n\n3\n00:00:15.671 --> 00:00:18.390\nI am your host Daniel Lowery and\ntoday's episode,\n\n4\n00:00:18.390 --> 00:00:21.240\nwell we are continuing on\nwith that Azure SQL series.\n\n5\n00:00:21.240 --> 00:00:24.490\nJoining me again today here in the studio,\nwell you know him, you love him.\n\n6\n00:00:24.490 --> 00:00:25.525\nHe's our good friend.\n\n7\n00:00:25.525 --> 00:00:26.200\nMr. Don Pezet.\n\n8\n00:00:26.200 --> 00:00:29.002\nDon, welcome back to the show,\nand how are you doing?\n\n9\n00:00:29.002 --> 00:00:30.060\nI am doing great, Daniel.\n\n10\n00:00:30.060 --> 00:00:34.200\nReady to jump right back into the world\nof Microsoft Azure SQL, and in\n\n11\n00:00:34.200 --> 00:00:38.700\nthis episode we're gonna be taking a look\nat actually kind of not using Azure SQL.\n\n12\n00:00:38.700 --> 00:00:43.000\nWe're getting our data out of Azure SQL\nonce we've gotten it back in.\n\n13\n00:00:43.000 --> 00:00:47.350\nI know we spent an episode talking about\nimporting data or migrating our systems\n\n14\n00:00:47.350 --> 00:00:51.910\nfrom an on premises solution into Azure\nSQL, and once your data is there that's\n\n15\n00:00:51.910 --> 00:00:56.000\nfine and good, but there's plenty of\ntimes that we need the data back out.\n\n16\n00:00:56.000 --> 00:00:57.820\nIt may not be that we're\nleaving Azure SQL.\n\n17\n00:00:57.820 --> 00:01:00.580\nWe just need to get our data out\nto be able to use it, right?\n\n18\n00:01:00.580 --> 00:01:03.580\nSo in this episode we're gonna run through\na few of the different ways that we can\n\n19\n00:01:03.580 --> 00:01:07.400\nget our data, and they different formats\nwe can get the data in, cuz it's actually\n\n20\n00:01:07.400 --> 00:01:11.470\na lot of flexibility with our data, and\nit's kind of neat to see what's available.\n\n21\n00:01:11.470 --> 00:01:13.330\nSo that's what we'll be running\nthrough in this episode.\n\n22\n00:01:13.330 --> 00:01:15.665\nThat's right.\nNow there's multiple different ways\n\n23\n00:01:15.665 --> 00:01:18.030\nin which we can get data\nout of our databases, but\n\n24\n00:01:18.030 --> 00:01:20.800\nwe're gonna take it from\ngreatest probably to least, or\n\n25\n00:01:20.800 --> 00:01:24.665\ndepending on your perspective I guess it\ncould be one way or the other, but Don,\n\n26\n00:01:24.665 --> 00:01:27.460\nwhat are some of the reasons\nthat we would want to do that?\n\n27\n00:01:27.460 --> 00:01:32.157\nI mean, we got data in a database,\nThat's why the database exists, but\n\n28\n00:01:32.157 --> 00:01:36.315\nwhy would we ever want to get data\nout of it, and just extract it.\n\n29\n00:01:36.315 --> 00:01:41.142\nAll right, so sometimes it's because we're\nnot gonna use Azure SQL anymore, right?\n\n30\n00:01:41.142 --> 00:01:43.626\nSo maybe we decided we had\na server up in Azure SQL.\n\n31\n00:01:43.626 --> 00:01:44.381\nWe're not gonna do that anymore.\n\n32\n00:01:44.381 --> 00:01:48.400\nWe wanna bring it back to on premises, or\nwe wanna migrate to some other solutions.\n\n33\n00:01:48.400 --> 00:01:52.778\nSometimes that's it, but more commonly\nit's gonna be something like we've got\n\n34\n00:01:52.778 --> 00:01:56.584\na production server up in Azure SQL,\nand I want to set up a development or\n\n35\n00:01:56.584 --> 00:01:58.820\na test server here in my own environment.\n\n36\n00:01:58.820 --> 00:02:01.699\nI could do it in Azure, but\nI don't want to pay a per minute fee.\n\n37\n00:02:01.699 --> 00:02:03.930\nI've got some crummy servers I can use and\nso\n\n38\n00:02:03.930 --> 00:02:07.318\nI just want to get a copy of that\ndatabase and bring it down, right.\n\n39\n00:02:07.318 --> 00:02:08.950\nThat's one scenario.\n\n40\n00:02:08.950 --> 00:02:11.680\nOther times it's not that\nwe need the whole database.\n\n41\n00:02:11.680 --> 00:02:15.300\nIt's that we've got tables of data\nthat are in the database, and\n\n42\n00:02:15.300 --> 00:02:18.320\nI need to get a copy of that\ntable's data to use somewhere else.\n\n43\n00:02:18.320 --> 00:02:21.740\nMaybe I need to use it in an Excel\nspreadsheet, or something like that, so\n\n44\n00:02:21.740 --> 00:02:25.110\nI want to get that data\nout of Azure SQL and\n\n45\n00:02:25.110 --> 00:02:27.950\ninto whatever other program or\nsoftware it is that I'm using.\n\n46\n00:02:27.950 --> 00:02:30.672\nSo it's not necessarily that we're\nwalking away from Azure SQL.\n\n47\n00:02:30.672 --> 00:02:35.420\nWe're just using the data and we might\nneed that data in format other than what\n\n48\n00:02:35.420 --> 00:02:38.980\nthe SQL server normally provides, and\nso Microsoft has a couple of tools for\n\n49\n00:02:38.980 --> 00:02:41.580\nthat, but\nlet's start with the most significant one.\n\n50\n00:02:41.580 --> 00:02:45.270\nLet's say that you need to get\na copy of your whole database.\n\n51\n00:02:45.270 --> 00:02:46.820\nJust the whole thing.\n\n52\n00:02:46.820 --> 00:02:49.190\nYou're trying to set up\na clone server locally, or\n\n53\n00:02:49.190 --> 00:02:51.930\nyou're walking away from Azure SQL,\nyou're moving somebody else, so\n\n54\n00:02:51.930 --> 00:02:55.220\nyou just need to get a copy of\nyour SQL data out of there right.\n\n55\n00:02:55.220 --> 00:02:58.290\nThe best to do that is to use a backpack,\nand\n\n56\n00:02:58.290 --> 00:03:02.700\nwhen we talked about migrating databases\ninto Azure SQL we used backpacks to do it.\n\n57\n00:03:02.700 --> 00:03:06.360\nYou can do the same thing to\nget your data out of SQL, and\n\n58\n00:03:06.360 --> 00:03:09.350\nthere's two different ways\nto generate that backpack.\n\n59\n00:03:09.350 --> 00:03:12.760\nThere's one way that you can do entirely\nthrough the web based portal for\n\n60\n00:03:12.760 --> 00:03:16.040\nAzure, and the other way is through\nyour SQL Management Studio, and\n\n61\n00:03:16.040 --> 00:03:18.040\nI can't remember which one\nwe did in the other show.\n\n62\n00:03:18.040 --> 00:03:20.760\nI think we did it in entirely in\nthe Management Studio because when you're\n\n63\n00:03:20.760 --> 00:03:24.100\nimporting that's kinda the way you need to\ndo it, but we do have some flexibility in\n\n64\n00:03:24.100 --> 00:03:26.140\nhow we wanna get that out, so\nI wanna show you the two ways.\n\n65\n00:03:26.140 --> 00:03:30.070\nLet's start with the Management Studio.\n\n66\n00:03:30.070 --> 00:03:32.570\nWith Management Studio's\nthe most straightforward and\n\n67\n00:03:32.570 --> 00:03:36.200\neasy way because what happens is\nyou fire up your Management Studio,\n\n68\n00:03:36.200 --> 00:03:40.570\nyou connect to your database, and then you\ntell it to export it into a backup file,\n\n69\n00:03:40.570 --> 00:03:43.390\nor backpack file, then it just stays\nright there into your computer.\n\n70\n00:03:43.390 --> 00:03:46.140\nAnd so, if the database is\nonly a couple hundred megs or\n\n71\n00:03:46.140 --> 00:03:49.670\neven a few gigs, it's basically like\ndownloading a file, and now you've got\n\n72\n00:03:49.670 --> 00:03:54.450\nthat backpack that you can go and restore\nto any other SQL Server that's out there.\n\n73\n00:03:54.450 --> 00:03:56.410\nMeanwhile your production\nserver stays up and running.\n\n74\n00:03:56.410 --> 00:03:57.900\nLet me show you that process.\n\n75\n00:03:57.900 --> 00:04:02.520\nSo, here I've got my SQL Management Studio\nfired up, aAnd I'm connected to my SQL\n\n76\n00:04:02.520 --> 00:04:07.460\nserver and you can see some databases\nthat I've got, and let's say SampleDB2.\n\n77\n00:04:07.460 --> 00:04:10.960\nI wanna set that up on my own\nlocal environment for testing or\n\n78\n00:04:10.960 --> 00:04:12.380\nexperimenting right.\n\n79\n00:04:12.380 --> 00:04:16.770\nSo I can just take that database,\nand if you right-click on it\n\n80\n00:04:16.770 --> 00:04:21.820\nthen you can go down to Tasks And you\ncan choose Export Data-tier Application.\n\n81\n00:04:21.820 --> 00:04:25.190\nNow, that's a really complex way\nof saying export the database.\n\n82\n00:04:25.190 --> 00:04:27.990\nThey call it a Data-tier Application\nbecause it may include other\n\n83\n00:04:27.990 --> 00:04:29.610\nthings than just the data, right?\n\n84\n00:04:29.610 --> 00:04:32.200\nWe've got our user accounts and\nfirewall rules and\n\n85\n00:04:32.200 --> 00:04:34.702\nother things that might be a part of\nthat database, so now they just call it\n\n86\n00:04:34.702 --> 00:04:37.730\nData-tier Application, but\nwhen you choose to do that.\n\n87\n00:04:37.730 --> 00:04:39.090\nTo export it.\n\n88\n00:04:39.090 --> 00:04:41.590\nWhat it's gonna do is gonna\nlaunch a little wizard\n\n89\n00:04:41.590 --> 00:04:45.730\nthat will let us take that data and\nget it out of there, right?\n\n90\n00:04:45.730 --> 00:04:47.560\nGet it out of Azure SQL.\n\n91\n00:04:47.560 --> 00:04:49.610\nNow, it lives in an Azure SQL.\n\n92\n00:04:49.610 --> 00:04:52.690\nWe got to delete it when we're done if\nwe actually wanted it to be gone, but\n\n93\n00:04:52.690 --> 00:04:55.930\nit's gonna let me export that and\ndump it into a backpack file.\n\n94\n00:04:55.930 --> 00:05:00.400\nSo, when I go to export it it's asking\ndo I wanna save it into Azure or\n\n95\n00:05:00.400 --> 00:05:04.700\ndo I wanna save it to local disk, and I'm\njust gonna save it to my desktop here, and\n\n96\n00:05:04.700 --> 00:05:09.960\nso I'll call this SampleDB2.backpack and\n\n97\n00:05:09.960 --> 00:05:14.710\nso we'll run with that, and so\nnow it's got that file name.\n\n98\n00:05:14.710 --> 00:05:16.890\nAnd once it's got that I\ncan go to advanced and\n\n99\n00:05:16.890 --> 00:05:19.780\nactually filter what it's gonna grab.\n\n100\n00:05:19.780 --> 00:05:20.810\nI may not want to get everything.\n\n101\n00:05:20.810 --> 00:05:23.070\nSee how it's got that dbo employees table?\n\n102\n00:05:23.070 --> 00:05:26.240\nI might have other tables created\nthat I don't want them and so\n\n103\n00:05:26.240 --> 00:05:27.190\nI can uncheck things.\n\n104\n00:05:27.190 --> 00:05:29.670\nThis is the only table I actually\ngot with data in it, and so\n\n105\n00:05:29.670 --> 00:05:30.580\nthat one's selected for me.\n\n106\n00:05:30.580 --> 00:05:34.590\nSo you can be specific, but otherwise if\nwe just leave it the way it is it's gonna\n\n107\n00:05:34.590 --> 00:05:38.230\nexport the whole thing, and\nthen when I'm done I can hit Finish, and\n\n108\n00:05:38.230 --> 00:05:41.340\nit's now gonna export that\ndata into the backpack file.\n\n109\n00:05:41.340 --> 00:05:43.000\nIt's gonna download it and\nsave it to my hard drive.\n\n110\n00:05:43.000 --> 00:05:45.750\nObviously the bigger it ist\nthe longer that'll take, but\n\n111\n00:05:45.750 --> 00:05:51.380\nwhen it's done the main database up here\nis still on and running in Azure, right?\n\n112\n00:05:51.380 --> 00:05:54.360\nPeople can be in it right now and\nit's not a big deal, but\n\n113\n00:05:54.360 --> 00:05:58.070\nI can take the backpack and restore it\nwhere ever I need to, and get that up and\n\n114\n00:05:58.070 --> 00:06:00.480\nrunning, and you can just watch our\nimporting episode to see how to do that.\n\n115\n00:06:00.480 --> 00:06:02.920\nAnd we can bring it up\nwhere ever we need it and\n\n116\n00:06:02.920 --> 00:06:05.950\nonce that's done now I've got\na copy of my database, and\n\n117\n00:06:05.950 --> 00:06:10.000\nif I'm done with Azure SQL I can just\ncome back and delete this database out.\n\n118\n00:06:10.000 --> 00:06:13.470\nOnce I delete it that's the end of it,\nand we're done.\n\n119\n00:06:13.470 --> 00:06:16.310\nNow notice how it says it's\nextracting the schema from database.\n\n120\n00:06:16.310 --> 00:06:19.550\nIt's in progress and it's just\nkinda sitting here for a long time?\n\n121\n00:06:19.550 --> 00:06:22.716\nWhat's happening is on Microsoft's\nside they've queued up a backup job.\n\n122\n00:06:22.716 --> 00:06:25.210\nThen the backup job is running\nto create the backpack and\n\n123\n00:06:25.210 --> 00:06:28.850\nthey we're gonna download it, and so this\nprocess can take a little while while that\n\n124\n00:06:28.850 --> 00:06:31.600\nruns cuz it gets kinda low\npriority on their system.\n\n125\n00:06:31.600 --> 00:06:33.750\nThey're trying to handle\nlive transactions.\n\n126\n00:06:33.750 --> 00:06:35.690\nThat's high priority,\nthis stuff is low priority.\n\n127\n00:06:35.690 --> 00:06:39.030\nSo we just kinda have to let it run and\ndo its thing.\n\n128\n00:06:39.030 --> 00:06:41.790\nNow, if you're in a hurry that can\nbe a bit of a problem because now my\n\n129\n00:06:41.790 --> 00:06:44.200\nSQL Management Studio is tied up, right?\n\n130\n00:06:44.200 --> 00:06:46.120\nI'm kinda tied up running this job,\nand I could go and\n\n131\n00:06:46.120 --> 00:06:47.550\nstart doing other things\nin the background, but\n\n132\n00:06:47.550 --> 00:06:51.550\nreally I need to leave my computer on and\nrunning or this is gonna fail.\n\n133\n00:06:51.550 --> 00:06:54.970\nSo, if I know I don't want to tie my\ncomputer up I could've done this from\n\n134\n00:06:54.970 --> 00:06:57.980\nthe web interface also, and that\nwould've freed it up where I could shut\n\n135\n00:06:57.980 --> 00:07:02.390\nmy computer down if I wanted and it would\nbe running up there on their servers.\n\n136\n00:07:02.390 --> 00:07:05.640\nThat process is a little bit easier for\nus cuz basically what we do is we go\n\n137\n00:07:05.640 --> 00:07:09.100\ninto the Azure portal and\nwe find our database, right?\n\n138\n00:07:09.100 --> 00:07:13.430\nSo I'm gonna just browse here to SQL\ndatabases, and I'll take SampleDB2, and\n\n139\n00:07:13.430 --> 00:07:17.920\nwhen you go into SampleDB2 and\ntake a look at\n\n140\n00:07:17.920 --> 00:07:21.140\nthe database you'll see you've got\na nice big export button right there.\n\n141\n00:07:21.140 --> 00:07:24.310\nSo I can get that database right\nout of there using the export, and\n\n142\n00:07:24.310 --> 00:07:28.290\nwhen you export here the options are a\nlittle bit different than what we saw\n\n143\n00:07:28.290 --> 00:07:29.930\nin the SQL Management Studio.\n\n144\n00:07:29.930 --> 00:07:34.520\nSo when I look over here It doesn't\noffer to download to my own hard drive.\n\n145\n00:07:34.520 --> 00:07:37.531\nIt offers to save it to a storage account,\nright?\n\n146\n00:07:37.531 --> 00:07:39.190\nSo I'm gonna back this up.\n\n147\n00:07:39.190 --> 00:07:43.490\nSampleDB2, and\nI'm gonna specify a storage account.\n\n148\n00:07:43.490 --> 00:07:45.250\nI've got a couple laying around.\n\n149\n00:07:45.250 --> 00:07:47.630\nLet me just pick one of\nthe ones that I've already got.\n\n150\n00:07:47.630 --> 00:07:49.299\nYou could create a storage\naccount if you need one.\n\n151\n00:07:50.420 --> 00:07:52.208\nIt does require a classic storage account.\n\n152\n00:07:52.208 --> 00:07:56.062\nIt doesn't use the new resource manager\nstyle, but I'm sure they'll update that\n\n153\n00:07:56.062 --> 00:07:59.158\neventually, but at this point\nit's only using the classic ones.\n\n154\n00:07:59.158 --> 00:08:02.488\nAnd then I can pick a container\ninside of it if I've got one.\n\n155\n00:08:02.488 --> 00:08:04.218\nOr I can create a new container.\n\n156\n00:08:04.218 --> 00:08:07.388\nI'll create a new container,\njust cuz I apparently don't have any.\n\n157\n00:08:07.388 --> 00:08:12.704\n[LAUGH] So I'll call this like DB_Backups.\n\n158\n00:08:12.704 --> 00:08:14.698\nIt doesn't like that underscore,\nhow about hyphens.\n\n159\n00:08:14.698 --> 00:08:17.590\nDoesn't like that either.\n\n160\n00:08:17.590 --> 00:08:18.650\nHow about neither.\n\n161\n00:08:18.650 --> 00:08:22.900\nNope, we're getting really\nspecific on the name here,\n\n162\n00:08:22.900 --> 00:08:26.050\nso, all lower case, there we go.\n\n163\n00:08:26.050 --> 00:08:27.470\nOne of these days we'll figure it out.\n\n164\n00:08:27.470 --> 00:08:28.700\nAnd then I can pick the access type.\n\n165\n00:08:28.700 --> 00:08:32.520\nI probably wanna make mine private\nbecause this is a backup of my database.\n\n166\n00:08:32.520 --> 00:08:35.560\nI don't want people gaining access to it,\nso\n\n167\n00:08:35.560 --> 00:08:41.000\nI'll leave it at that, and\nwe should be good to go.\n\n168\n00:08:43.950 --> 00:08:46.200\nThere we go, so now I've got my container.\n\n169\n00:08:46.200 --> 00:08:47.910\nIt knows that I'm gonna back\nup to that storage account.\n\n170\n00:08:47.910 --> 00:08:50.850\nIt knows I'm gonna store it in my\nbackup container, and I can hit OK.\n\n171\n00:08:50.850 --> 00:08:55.182\nAnd it needs a server admin login to be\nable to connect and get all the data, so\n\n172\n00:08:55.182 --> 00:08:59.991\nI'm gonna provide my credentials, and\nthese are the credentials on the database,\n\n173\n00:08:59.991 --> 00:09:04.350\nnot your credentials on Azure, but\nthe credential's on the SQL database.\n\n174\n00:09:04.350 --> 00:09:09.310\nAnd so I'll provide those, and that should\nbe all it needs to create that back up.\n\n175\n00:09:09.310 --> 00:09:11.420\nThe nice part here is the backup's\ngonna run on the background.\n\n176\n00:09:11.420 --> 00:09:12.840\nI can shut my computer off.\n\n177\n00:09:12.840 --> 00:09:16.000\nI can walk away, it's gonna back it up.\n\n178\n00:09:16.000 --> 00:09:18.670\nAnd it's gonna store it\nin that storage account.\n\n179\n00:09:18.670 --> 00:09:21.960\nAnd once thatâ€™s done, at my leisure,\nI can go to the storage account and\n\n180\n00:09:21.960 --> 00:09:23.180\nI can get that data, right?\n\n181\n00:09:23.180 --> 00:09:26.390\nNow, the backup may take awhile\nbecause it does get queued,\n\n182\n00:09:26.390 --> 00:09:30.160\nsee it's not saying it finished,\nits saying its request submitted, right?\n\n183\n00:09:30.160 --> 00:09:33.870\nSo a backup will occur and I'll know when\nitâ€™s done cuz it'll actually give me\n\n184\n00:09:33.870 --> 00:09:35.420\na little bell for that too.\n\n185\n00:09:35.420 --> 00:09:38.700\nBut you can browse into\nyour storage accounts and\n\n186\n00:09:38.700 --> 00:09:39.780\nhunt down your storage account.\n\n187\n00:09:39.780 --> 00:09:46.460\nI'll pick itprotvdemostorage1, and in here\nI should be able to go into my Blobs.\n\n188\n00:09:48.830 --> 00:09:50.792\nAnd as we browse into the storage account,\n\n189\n00:09:50.792 --> 00:09:54.069\nyou'll be able to see the data that's\nin there, and gain access to it.\n\n190\n00:09:54.069 --> 00:09:58.933\nNow you can go this way and right there\nis my back up folder, and I can browse in\n\n191\n00:09:58.933 --> 00:10:04.336\nthere, and eventually a backpack file\nwill appear here, and I'll see it, right?\n\n192\n00:10:04.336 --> 00:10:07.427\nSo you can go that way but you can't\nreally work with the files that are store\n\n193\n00:10:07.427 --> 00:10:09.684\nthere, you need to get it out\nof the storage account and\n\n194\n00:10:09.684 --> 00:10:11.550\ndown to your system to work with it.\n\n195\n00:10:11.550 --> 00:10:14.680\nAnd so what I normally do is use a third\nparty software package to access\n\n196\n00:10:14.680 --> 00:10:15.930\nthe storage account.\n\n197\n00:10:15.930 --> 00:10:20.520\nMicrosoft has whatÂ´s called the Azure\nStorage Explorer that you can get,\n\n198\n00:10:20.520 --> 00:10:23.062\nitÂ´s AzureStorageExplorer.codeplex.com.\n\n199\n00:10:23.062 --> 00:10:24.855\nAnd you can go and download it, and\n\n200\n00:10:24.855 --> 00:10:28.000\nit's a client you can run in your\ncomputer to connect your Azure Storage.\n\n201\n00:10:28.000 --> 00:10:29.930\nAnd once your connected,\nyou can upload and\n\n202\n00:10:29.930 --> 00:10:32.830\ndownload files to the storage\nincluding getting that backpack out.\n\n203\n00:10:32.830 --> 00:10:34.650\nAnd I've actually got it\nrunning here in the background.\n\n204\n00:10:34.650 --> 00:10:36.300\nThis is the Storage Explorer.\n\n205\n00:10:36.300 --> 00:10:40.410\nAnd you'll see where I've connected my\nstorage account, and my blob container's\n\n206\n00:10:40.410 --> 00:10:44.340\nnot showing up, but let me refresh, and\nI should see, there it is, backups.\n\n207\n00:10:44.340 --> 00:10:47.290\nWhen I browse into backups,\nI can see all the files inside of it.\n\n208\n00:10:47.290 --> 00:10:50.700\nI don't have any right now cuz the backup\nis still running, but when it's done,\n\n209\n00:10:50.700 --> 00:10:53.460\nI'll be able to choose that backup and\nhit download, and\n\n210\n00:10:53.460 --> 00:10:57.210\nit'll download right to my system and now\nI can take it and restart wherever I need.\n\n211\n00:10:57.210 --> 00:10:58.560\nIt's a pretty sweet system, Don, but\n\n212\n00:10:58.560 --> 00:11:01.300\nis there any other third party\nsoftware that might do this?\n\n213\n00:11:01.300 --> 00:11:05.890\nThere are, the biggest problem\nwith the azure storage explorer is\n\n214\n00:11:05.890 --> 00:11:08.200\nMicrosoft hasn't done a great\njob of keeping it up to date.\n\n215\n00:11:08.200 --> 00:11:10.140\nNotice the latest version, August 2014,\n\n216\n00:11:10.140 --> 00:11:13.400\nright, that's almost a year and\na half ago.\n\n217\n00:11:13.400 --> 00:11:14.455\nThat's on the rusty edge.\n\n218\n00:11:14.455 --> 00:11:15.390\n[LAUGH] It really is.\n\n219\n00:11:15.390 --> 00:11:17.130\nA lot of stuff has changed since then.\n\n220\n00:11:17.130 --> 00:11:20.660\nSo there's third party programs like\nCloudberry Explorer that will do it,\n\n221\n00:11:20.660 --> 00:11:21.270\nit's a great one.\n\n222\n00:11:21.270 --> 00:11:24.250\nCyberDuck, there's a few other programs\nthat you can use that'll let you open up\n\n223\n00:11:24.250 --> 00:11:26.050\nthat storage account and\nyou can transfer it out.\n\n224\n00:11:26.050 --> 00:11:29.240\nSo definitely just look around for\nsome of the things that are out there.\n\n225\n00:11:29.240 --> 00:11:30.200\nWell, and that's cool.\n\n226\n00:11:30.200 --> 00:11:32.890\nNow we know how to take\nthe entirety of our database,\n\n227\n00:11:32.890 --> 00:11:35.980\nextract that out for\npurposes later maybe, like Don said,\n\n228\n00:11:35.980 --> 00:11:39.870\nwe're creating a testbed with actual data\nso we can make sure things are running.\n\n229\n00:11:39.870 --> 00:11:43.445\nBut Don, what if I wanna use\na scalpel instead of a chainsaw-\n\n230\n00:11:43.445 --> 00:11:48.590\n[LAUGH] A rifle instead of a shotgun, I\nhave specific data that I want to extract\n\n231\n00:11:48.590 --> 00:11:52.370\nout of my database and use that for\nwhatever purposes that I need it for.\n\n232\n00:11:52.370 --> 00:11:56.280\nSure, in this series, I've run queries,\nI've run quite a few of them,\n\n233\n00:11:56.280 --> 00:11:58.380\nlittle select statements and\nI get data out, right?\n\n234\n00:11:58.380 --> 00:12:01.450\nThat's how SQL works, you ask it\na question, it gives you an answer, right?\n\n235\n00:12:01.450 --> 00:12:03.450\nAll right here,\nI'll just show you a sample query.\n\n236\n00:12:03.450 --> 00:12:08.295\nSo I'm gonna take sample DB2, which\nhas that employees table of mine, and\n\n237\n00:12:08.295 --> 00:12:09.630\nI'm just gonna run a quick question.\n\n238\n00:12:09.630 --> 00:12:14.970\nI'm gonna say can you give\nme a copy of everything from\n\n239\n00:12:14.970 --> 00:12:16.830\nthe employees table, right?\n\n240\n00:12:16.830 --> 00:12:19.210\nSo I'm saying SELECT * FROM Employees.\n\n241\n00:12:19.210 --> 00:12:22.498\nSelect everything from the Employees\ntable and give it back to me.\n\n242\n00:12:22.498 --> 00:12:24.520\nWell there's 5,000 rows in\nthe Employees' table, so\n\n243\n00:12:24.520 --> 00:12:26.240\nit's gonna give me all 5,000 rows.\n\n244\n00:12:26.240 --> 00:12:29.900\nAnd I can make that a little more\nfancy by saying like, SELECT TOP 10.\n\n245\n00:12:29.900 --> 00:12:33.990\nJust give me the first 10\nof the Employees table.\n\n246\n00:12:33.990 --> 00:12:39.070\nAnd when I run that, there we go, I get\nthe first 10 employees right there, right?\n\n247\n00:12:39.070 --> 00:12:41.720\nI asked it a question,\nand it gave me an answer.\n\n248\n00:12:41.720 --> 00:12:45.450\nNow, the answer is in SQL's own format,\nright?\n\n249\n00:12:45.450 --> 00:12:47.230\nThis is the way the SQL formats data.\n\n250\n00:12:47.230 --> 00:12:50.369\nAnd I copy and paste it if I want,\nand I can use it.\n\n251\n00:12:50.369 --> 00:12:54.896\nBut I might have a scenario where my\ncompany needs data out of the SQL server,\n\n252\n00:12:54.896 --> 00:12:58.307\nbut they need it in a different\nformat than this, right?\n\n253\n00:12:58.307 --> 00:13:01.410\nThey need to use it in some\nother kind of software.\n\n254\n00:13:01.410 --> 00:13:04.480\nAnd so I wanna show you some of\nthe other ways we can get that data out,\n\n255\n00:13:04.480 --> 00:13:06.370\nsome of the other formats that are there.\n\n256\n00:13:06.370 --> 00:13:10.310\nThis is just standard SQL format,\nbut we can change it.\n\n257\n00:13:10.310 --> 00:13:14.845\nOne of the most common request that\nI get is to get it formatted for XML.\n\n258\n00:13:14.845 --> 00:13:16.100\nAnd XML is super annoying.\n\n259\n00:13:16.100 --> 00:13:20.450\nI'm not a big fan, but I understand why\nit's there, that standard query format.\n\n260\n00:13:20.450 --> 00:13:25.100\nThey are a standard data format that\npretty much any software can interpret.\n\n261\n00:13:25.100 --> 00:13:29.810\nAnd in SQL, this is on premises and\nAzure, it's really in both.\n\n262\n00:13:29.810 --> 00:13:34.389\nThey have a neat little command\nyou can just add to the end,\n\n263\n00:13:34.389 --> 00:13:36.650\nyou can just say FOR XML RAW.\n\n264\n00:13:36.650 --> 00:13:39.330\nAnd what that little\nextra tag to our query,\n\n265\n00:13:39.330 --> 00:13:42.350\nwell you can stick this on the end of\nany query, no matter how complex or\n\n266\n00:13:42.350 --> 00:13:46.360\nsimple the query is, as long as it returns\ntable data, it can return XML data.\n\n267\n00:13:46.360 --> 00:13:49.050\nAnd that says,\ndon't give it to me in the SQL format,\n\n268\n00:13:49.050 --> 00:13:51.990\ngive it to me in the XML format,\nall right?\n\n269\n00:13:51.990 --> 00:13:55.420\nAnd when you run that, your data's\ngonna come back and look really weird.\n\n270\n00:13:55.420 --> 00:13:57.380\nSee how it looks like a link?\n\n271\n00:13:57.380 --> 00:14:02.960\nAnd if I click on that link, here's\nthe top ten employees formatted for XML.\n\n272\n00:14:04.440 --> 00:14:07.970\nAnd so it's laid out in a way that now,\nif I have software that expects XML data,\n\n273\n00:14:07.970 --> 00:14:10.980\nI can feed that to them and\nthey'll get it.\n\n274\n00:14:10.980 --> 00:14:15.990\nThe only problem is the formatting on\nthis is not what you expect with XML.\n\n275\n00:14:15.990 --> 00:14:17.700\nSo we normally have to\ncustomize it a little bit.\n\n276\n00:14:17.700 --> 00:14:20.670\nSee how like each entity,\nit's calling it a row.\n\n277\n00:14:20.670 --> 00:14:23.240\nWell each entity is actually an employee,\nnot a row.\n\n278\n00:14:23.240 --> 00:14:26.050\nAnd so I probably wanna\nchange that to say employee.\n\n279\n00:14:26.050 --> 00:14:30.490\nAnd then notice how each row is\nreally just one entry here in XML.\n\n280\n00:14:30.490 --> 00:14:33.900\nAnd normally with XML, you have a tag, and\n\n281\n00:14:33.900 --> 00:14:36.280\neach of the properties\nare underneath that tag.\n\n282\n00:14:36.280 --> 00:14:38.880\nSo this isn't really structured or\nformatted very well.\n\n283\n00:14:38.880 --> 00:14:41.710\nAnd, I don't want to bore you\nguys with all the details, but\n\n284\n00:14:41.710 --> 00:14:45.660\nyou can actually add quite\na bit to this 4XML raw command\n\n285\n00:14:45.660 --> 00:14:49.150\nto format the data to where it looks\nthe way that you need it, right?\n\n286\n00:14:49.150 --> 00:14:50.560\nAnd you'll oftentimes have to do that.\n\n287\n00:14:50.560 --> 00:14:55.550\nSo for example, if I wanted each row\nto be called an employee instead of\n\n288\n00:14:55.550 --> 00:14:58.470\nbeing called a row, what I would\nneed to do is, after the word raw,\n\n289\n00:14:58.470 --> 00:15:04.480\nI would just need to add Employee,\nlike that.\n\n290\n00:15:04.480 --> 00:15:07.670\nAnd so now it knows, don't call them rows,\ncall them Employees.\n\n291\n00:15:07.670 --> 00:15:11.500\nAnd then beyond that, I can add a little\nmore, and I can say, for example,\n\n292\n00:15:11.500 --> 00:15:16.510\nthat I'll have a ROOT tag that everything\nelse is gonna be underneath, and\n\n293\n00:15:16.510 --> 00:15:21.570\nthat root tag is gonna be called\nEmployees like that, right?\n\n294\n00:15:21.570 --> 00:15:24.390\nSo now, I'll have this root\ntag called Employees, and\n\n295\n00:15:24.390 --> 00:15:27.900\ninside of it,\neach row will be an employee.\n\n296\n00:15:27.900 --> 00:15:33.460\nAnd then beyond that, I can say instead\nof making each person one big long line,\n\n297\n00:15:33.460 --> 00:15:35.700\nbreak up the elements and\ndisplay them individually.\n\n298\n00:15:35.700 --> 00:15:39.050\nAnd we do that with just\nthe Elements keyword, okay.\n\n299\n00:15:39.050 --> 00:15:44.710\nThose three commands right there, changing\nthe row name, creating a root tag, and\n\n300\n00:15:44.710 --> 00:15:49.580\nswitching to the element view is normally\nenough for somebody to use this for an XML\n\n301\n00:15:49.580 --> 00:15:52.820\ninput, and so those are three commands\nthat I almost always use with this.\n\n302\n00:15:52.820 --> 00:15:55.563\nAnd so the final query,\nall of this right here,\n\n303\n00:15:55.563 --> 00:15:58.938\nthat's just a normal old query\nlike I would run anywhere.\n\n304\n00:15:58.938 --> 00:16:03.899\nAnd then what I added was FOR XML RAW,\nEmployee, change your own name,\n\n305\n00:16:03.899 --> 00:16:08.035\nRoot employees created that root tag,\nand then elements,\n\n306\n00:16:08.035 --> 00:16:13.328\nbroke up all the elements inside it each\nentry so that it was displayed the way\n\n307\n00:16:13.328 --> 00:16:18.950\nthat I want, and when I run that,\nwell, I get my, oh, did I screw it up?\n\n308\n00:16:18.950 --> 00:16:21.070\nWhat did I do here?\nHang on let me there we go.\n\n309\n00:16:21.070 --> 00:16:24.830\nIf you highlight just the query runs,\njust the query.\n\n310\n00:16:24.830 --> 00:16:26.190\nSo there we go I ran the whole thing.\n\n311\n00:16:26.190 --> 00:16:29.210\nI get a return here, but when I click\non it now my data looks different.\n\n312\n00:16:29.210 --> 00:16:31.750\nIt looks a lot more XMLE.\n\n313\n00:16:31.750 --> 00:16:33.854\nYeah, you took the words\nright out of my mouth.\n\n314\n00:16:33.854 --> 00:16:36.080\nSo there's that parent tag.\n\n315\n00:16:36.080 --> 00:16:37.280\nEmployees.\n\n316\n00:16:37.280 --> 00:16:39.630\nHere's my first employee.\n\n317\n00:16:39.630 --> 00:16:43.430\nAnd for the first employee, here's\nall their properties and information.\n\n318\n00:16:43.430 --> 00:16:45.870\nAnd then here's my next employee,\nand my next one, and my next one.\n\n319\n00:16:45.870 --> 00:16:48.450\nThis is called a called employing\na schema to XML, right.\n\n320\n00:16:48.450 --> 00:16:50.460\nIt's different than a schema in SQL.\n\n321\n00:16:50.460 --> 00:16:53.300\nBut now it's formatted a lot\nmore like what we expect.\n\n322\n00:16:53.300 --> 00:16:54.150\nVery, very cool.\n\n323\n00:16:54.150 --> 00:16:55.980\nNow, Don, XML's not the only game in town.\n\n324\n00:16:55.980 --> 00:17:00.390\nThere's actually quite a few ways in which\ndata can be formatted that you pull out of\n\n325\n00:17:00.390 --> 00:17:02.770\na database that someone might expect.\n\n326\n00:17:02.770 --> 00:17:06.080\nOne of them that I think of, comes\nright off the top of my head, is CSVs,\n\n327\n00:17:06.080 --> 00:17:08.770\nComma Separated Value files,\nthose are very, very common.\n\n328\n00:17:08.770 --> 00:17:10.680\nCan we do that kind of export as well?\n\n329\n00:17:10.680 --> 00:17:12.400\nYeah, there's a couple of ways to do it.\n\n330\n00:17:12.400 --> 00:17:16.600\nThe easiest way, the way I normally do it,\nis if you come in and just run a query, so\n\n331\n00:17:16.600 --> 00:17:20.260\nI'm gonna take this little line right here\nand I'll run it and I get that table back.\n\n332\n00:17:20.260 --> 00:17:24.350\nWhat a lot of people don't realize is\nyou can right-click on this table.\n\n333\n00:17:24.350 --> 00:17:27.400\nAnd when you right-click on the table,\nyou can copy the data,\n\n334\n00:17:27.400 --> 00:17:31.060\ncopy it with headers, but\nyou can also do save results as.\n\n335\n00:17:31.060 --> 00:17:35.280\nAnd when you choose save results as,\nyou can save it as a CSV.\n\n336\n00:17:35.280 --> 00:17:38.570\nAnd once it's a CSV, you can import\nit into darn near any program.\n\n337\n00:17:38.570 --> 00:17:41.210\nPretty much everything recognizes CSVs.\n\n338\n00:17:41.210 --> 00:17:44.100\nYou can do tab delimited also.\n\n339\n00:17:44.100 --> 00:17:48.100\nBut if you choose a CSV you can save that\nup to your desktop for example, and so\n\n340\n00:17:48.100 --> 00:17:53.060\nI'm gonna call this employees.csv.\n\n341\n00:17:53.060 --> 00:17:56.480\nAnd I'll go ahead and save that, and\n\n342\n00:17:56.480 --> 00:18:00.530\nonce that's saved, now on my\ndesktop I've got employees at csv,\n\n343\n00:18:00.530 --> 00:18:04.320\nand see how Excel has already\nrecognized that and grabbed it?\n\n344\n00:18:04.320 --> 00:18:06.640\nRight?\nIf I double-click on old Excel there, or\n\n345\n00:18:06.640 --> 00:18:10.610\non the icon, it's gonna open it up\nin Excel and here's my employees.\n\n346\n00:18:10.610 --> 00:18:14.430\nHere they are listed with all the various\ndata that came in from the CSV and\n\n347\n00:18:14.430 --> 00:18:15.690\nI can start to work with here.\n\n348\n00:18:15.690 --> 00:18:19.990\nSo now I've gotten my data out of SQL and\ninto Excel, so\n\n349\n00:18:19.990 --> 00:18:22.080\nnow we can start to work with that.\n\n350\n00:18:22.080 --> 00:18:23.070\nNow.\n\n351\n00:18:23.070 --> 00:18:24.030\nThat took me doing it by hand.\n\n352\n00:18:24.030 --> 00:18:25.490\nI had to have the SQL Management Studio.\n\n353\n00:18:25.490 --> 00:18:27.610\nI had to right click and choose Save As.\n\n354\n00:18:27.610 --> 00:18:29.750\nIf we wanna automate this,\nthat's not gonna work.\n\n355\n00:18:30.880 --> 00:18:35.280\nIf you wanna automate it,\nthere's actually a utility called SQL CMD.\n\n356\n00:18:35.280 --> 00:18:37.390\nWhen you install the SQL Management Studio\non your computer,\n\n357\n00:18:37.390 --> 00:18:39.460\nyou also install SQL CMD.\n\n358\n00:18:39.460 --> 00:18:43.980\nIf you open up a command prompt,\nnot a PowerShell, just a command prompt.\n\n359\n00:18:43.980 --> 00:18:45.970\nAlthough it does work in PowerShell.\n\n360\n00:18:45.970 --> 00:18:51.650\nYou can run sqlcmd, and\nsee how it drops me to a prompt, right?\n\n361\n00:18:51.650 --> 00:18:54.900\nWhat it's doing is it's basically giving\nme a way to interact with the SQL server\n\n362\n00:18:54.900 --> 00:18:56.570\nfrom the command line.\n\n363\n00:18:56.570 --> 00:19:01.110\nAnd we can use that to run a query to\nperform actions against the server,\n\n364\n00:19:01.110 --> 00:19:03.490\nand automated, scripted, right?\n\n365\n00:19:03.490 --> 00:19:05.050\nSet this to run on a schedule.\n\n366\n00:19:05.050 --> 00:19:08.570\nNow, two things to be aware of,\nfirst off it's kinda hard, right,\n\n367\n00:19:08.570 --> 00:19:09.770\nso then there's that.\n\n368\n00:19:09.770 --> 00:19:14.190\nBut secondly SQL CMD is expecting you\nto have an on premises SQL server.\n\n369\n00:19:14.190 --> 00:19:16.210\nIt's not expecting it to be an Azure SQL.\n\n370\n00:19:16.210 --> 00:19:20.480\nSo, if you're gonna connect to Azure\nyou need to install a little program.\n\n371\n00:19:21.480 --> 00:19:24.480\nThis guy right here and I will put\nthe link to it on the show notes.\n\n372\n00:19:24.480 --> 00:19:30.460\nBut its the Microsoft online services\nsign-in for IT professionals.\n\n373\n00:19:30.460 --> 00:19:32.110\nThat's a really long name.\n\n374\n00:19:32.110 --> 00:19:34.640\nBasically what it does\nis it lets sequel CMD or\n\n375\n00:19:34.640 --> 00:19:38.840\nreally any command line utility\nauthenticate against ASHER.\n\n376\n00:19:38.840 --> 00:19:42.990\nSo you can log in with your ASHER user\naccount and access those resources.\n\n377\n00:19:42.990 --> 00:19:45.168\nAnd that is kind of required for\nsequel CMD to work.\n\n378\n00:19:45.168 --> 00:19:47.000\nAll right.\n\n379\n00:19:47.000 --> 00:19:49.690\nNow, once you have that installed,\n\n380\n00:19:49.690 --> 00:19:53.180\nafter that it's just a matter\nof setting up the command.\n\n381\n00:19:53.180 --> 00:19:56.780\nI'm not gonna run it cuz I'm not logged in\non the command prompt here, but just to\n\n382\n00:19:56.780 --> 00:20:02.100\nshow you guys an example, if I wanted to\nget that CSV data out, I could say SQLCMD.\n\n383\n00:20:03.140 --> 00:20:05.890\nAnd then dash S for the server.\n\n384\n00:20:05.890 --> 00:20:08.590\nMy server is\nitprotvdemo1.database.windows.net.\n\n385\n00:20:08.590 --> 00:20:15.840\nAnd then I can say dash E,\nbecause I'm exporting.\n\n386\n00:20:15.840 --> 00:20:19.580\nSequel CMD expects you to import\nby default, I'm exporting data.\n\n387\n00:20:19.580 --> 00:20:21.140\nSo I'll do dash E.\n\n388\n00:20:21.140 --> 00:20:22.750\nDash Q.\n\n389\n00:20:22.750 --> 00:20:25.230\nAnd now the query that I wanna run, right.\n\n390\n00:20:25.230 --> 00:20:26.970\nSo what is this query going to be?\n\n391\n00:20:26.970 --> 00:20:31.455\nAnd I'll just do something\nkinda simple like select\n\n392\n00:20:31.455 --> 00:20:38.040\nstar from employees which is\nwhat we did a few minutes ago.\n\n393\n00:20:38.040 --> 00:20:42.740\nAnd I depending on how my credentials\nwork I probably need to specify the fully\n\n394\n00:20:42.740 --> 00:20:47.670\nqualified data for it, so I would need\nto say, like, sampleDB2.dbo.Employees.\n\n395\n00:20:47.670 --> 00:20:50.740\nThat's the table that I'm reaching out to,\nright?\n\n396\n00:20:50.740 --> 00:20:53.590\nSo, I wanna get everything from there and\n\n397\n00:20:53.590 --> 00:20:57.380\nthen I can tell it that I\nwanna save it to a file.\n\n398\n00:20:57.380 --> 00:21:00.320\nAnd the delimiter for\nthat file is going to be a comma.\n\n399\n00:21:00.320 --> 00:21:03.130\nI'm creating a comma separated values,\nnot a tab or whatever.\n\n400\n00:21:03.130 --> 00:21:04.990\nYou can specify any character in there.\n\n401\n00:21:04.990 --> 00:21:07.580\nAnd then lastly the output file itself.\n\n402\n00:21:07.580 --> 00:21:13.220\nWhich may be something like\nC:/Data/ Employees.csv, okay,\n\n403\n00:21:13.220 --> 00:21:18.860\nand you can run that and it'll reach out\nto that server and it will connect, okay.\n\n404\n00:21:18.860 --> 00:21:23.720\nIf you don't have the online\nservices sign in utility installed,\n\n405\n00:21:23.720 --> 00:21:26.070\nthen you'll get an error telling\nyou you need to install it.\n\n406\n00:21:26.070 --> 00:21:28.900\nOr if you've installed it like I have and\nhaven't authenticated, when you run this,\n\n407\n00:21:28.900 --> 00:21:32.100\nit's gonna prompt you for that username\nand password before it can connect.\n\n408\n00:21:32.100 --> 00:21:33.210\nBut when it's done,\n\n409\n00:21:33.210 --> 00:21:37.290\nall this is doing Is the same thing\nthat I did in the SQL Management Studio.\n\n410\n00:21:37.290 --> 00:21:40.780\nIt is basically gonna run the query for\nme.\n\n411\n00:21:40.780 --> 00:21:43.930\nBasically, right click and do\nSave Results As and save it as a CSV, but\n\n412\n00:21:43.930 --> 00:21:46.000\nit's doing it from the command line, so\nit's something that can be scheduled.\n\n413\n00:21:46.000 --> 00:21:48.420\nSo kinda two different ways\nto do the same activity.\n\n414\n00:21:48.420 --> 00:21:48.960\nAwesome.\nDon,\n\n415\n00:21:48.960 --> 00:21:52.530\nwell there are obviously a few different\nways to handle these scenarios.\n\n416\n00:21:52.530 --> 00:21:56.370\nWe can get data out of our databases and\nput them into a format\n\n417\n00:21:56.370 --> 00:22:00.585\nthat can be used for other purposes maybe\nsomebody needs to look over the data.\n\n418\n00:22:00.585 --> 00:22:05.260\n[INAUDIBLE] it is easily done through that\nor download the entire database itself and\n\n419\n00:22:05.260 --> 00:22:06.530\ncreate a test bed.\n\n420\n00:22:06.530 --> 00:22:10.460\nIs there anything else we need to cover\nas far as extracting data or saving data?\n\n421\n00:22:10.460 --> 00:22:15.290\nThere is one more one more which is\nthe query that I ran originally,\n\n422\n00:22:15.290 --> 00:22:18.830\nremember how I said the output\nwas in Sequel's own format?\n\n423\n00:22:18.830 --> 00:22:21.550\nWell, Sequel's own format is really,\nreally popular.\n\n424\n00:22:21.550 --> 00:22:24.780\nAnd a lot of third party\nsoftware out there supports it.\n\n425\n00:22:24.780 --> 00:22:28.550\nSo, you may find that you have software\nthat can reach directly into Sequel and\n\n426\n00:22:28.550 --> 00:22:29.360\nget the data itself.\n\n427\n00:22:29.360 --> 00:22:30.924\nAnd then you don't have to\nmess around with any of this.\n\n428\n00:22:30.924 --> 00:22:33.870\nOkay.\nTo do that there is normally just one step\n\n429\n00:22:33.870 --> 00:22:35.130\nthat you have to complete and\n\n430\n00:22:35.130 --> 00:22:38.160\nthat is that you have to set up\nwhat's called an ODBC connection.\n\n431\n00:22:38.160 --> 00:22:41.560\nODBC is an open data base connection.\n\n432\n00:22:41.560 --> 00:22:45.210\nODBC is a standard for\nconnecting to any type of database.\n\n433\n00:22:45.210 --> 00:22:47.220\nAnd oracle, my SQL or whatever.\n\n434\n00:22:47.220 --> 00:22:50.700\nSo you can define a connection\nwith your user credentials and\n\n435\n00:22:50.700 --> 00:22:54.090\nthen you can use your third party\nsoftware to connect it and access it.\n\n436\n00:22:54.090 --> 00:22:56.470\nLet me show you that process real quick.\n\n437\n00:22:56.470 --> 00:23:00.340\nOn a windows machine you can\njust hit start and type ODBC.\n\n438\n00:23:00.340 --> 00:23:04.490\nYou will find the data sources or\nset up a data source.\n\n439\n00:23:04.490 --> 00:23:07.370\nRight, I am just going\nto go into data sources.\n\n440\n00:23:07.370 --> 00:23:09.340\nI already have mine defined right here.\n\n441\n00:23:09.340 --> 00:23:11.300\nBut you can come in and\ndefine data sources and\n\n442\n00:23:11.300 --> 00:23:16.340\nyour source could be an Excel file,\nan access database or an online server.\n\n443\n00:23:16.340 --> 00:23:19.900\nAnd when you hit add you\ncan add in an entry and\n\n444\n00:23:19.900 --> 00:23:22.360\ndepending on the software you have\ninstalled you'll see more things.\n\n445\n00:23:22.360 --> 00:23:25.120\nLike, if I had installed the Oracle\nManagement Agents I might see Oracle on\n\n446\n00:23:25.120 --> 00:23:26.010\nthis list.\n\n447\n00:23:26.010 --> 00:23:30.650\nBut, the one I want is this guy right\nhere, ODBC Driver 11 for SQL Server.\n\n448\n00:23:30.650 --> 00:23:32.260\nI've also got\nthe SQL Server Native Client.\n\n449\n00:23:32.260 --> 00:23:33.370\nI could use that one too.\n\n450\n00:23:33.370 --> 00:23:35.780\nEither one of those are capable\nof connecting up to the server.\n\n451\n00:23:35.780 --> 00:23:38.550\nI'm gonna go with ODBC Driver\nthough just because of the version.\n\n452\n00:23:39.840 --> 00:23:41.290\nIf you look at that Native Client,\nit's 2011.\n\n453\n00:23:41.290 --> 00:23:42.870\nIt's a little bit old.\n\n454\n00:23:42.870 --> 00:23:44.960\nSo, I'll go with the ODBC driver.\n\n455\n00:23:44.960 --> 00:23:49.218\nAnd when you add it, here it's gonna ask\nme to specify the name for the connection.\n\n456\n00:23:49.218 --> 00:23:52.790\nSo, I might just call\nthis my Azure Server and\n\n457\n00:23:52.790 --> 00:23:58.338\nthen I need to give it a description\nfollowed by a server to connect to.\n\n458\n00:23:58.338 --> 00:24:03.363\nAnd so you would type the fully\nqualified server, itprotvdemo1.\n\n459\n00:24:03.363 --> 00:24:06.838\nDatabase.windows.net, right,\nfor your Azure database.\n\n460\n00:24:06.838 --> 00:24:10.080\nSo whatever it is that your\nconnection actually is.\n\n461\n00:24:11.540 --> 00:24:15.520\nAnd then after that, you can use Windows\nauthentication or SQL authentication.\n\n462\n00:24:15.520 --> 00:24:17.350\nThat's what we'll need to use.\n\n463\n00:24:17.350 --> 00:24:19.730\nAnd you provide your credentials for\nconnecting to that server.\n\n464\n00:24:19.730 --> 00:24:21.858\nSo I'm just gonna provide\nthose right here, whoops.\n\n465\n00:24:26.349 --> 00:24:29.292\nAnd then, if you need to change\nyour default database, right,\n\n466\n00:24:29.292 --> 00:24:32.520\ncuz you might have more than one database,\nand so you can drop it down.\n\n467\n00:24:32.520 --> 00:24:34.230\nThis is a great way to test\nwhether you are connecting too.\n\n468\n00:24:34.230 --> 00:24:37.540\nIf you get a list of databases,\nyou know it connected, right?\n\n469\n00:24:37.540 --> 00:24:39.230\nSo, I might default to Sample DB2.\n\n470\n00:24:39.230 --> 00:24:42.770\nIf there's a mirror server available,\nin case the primary fails,\n\n471\n00:24:42.770 --> 00:24:45.380\nit can flip over to the mirror so\nyou can specify it.\n\n472\n00:24:45.380 --> 00:24:46.950\nYou can specify a database file name.\n\n473\n00:24:46.950 --> 00:24:49.100\nThat doesn't really work Azure,\n\n474\n00:24:49.100 --> 00:24:52.800\nin a couple of other little session\nbased options when you connect.\n\n475\n00:24:52.800 --> 00:24:55.570\nWhen you're done you're going to\ntweak any of these options for\n\n476\n00:24:55.570 --> 00:24:57.380\nwhatever customizations you need.\n\n477\n00:24:57.380 --> 00:25:01.550\nWhen you're done you've now got\nthis ODBC connection created, and\n\n478\n00:25:01.550 --> 00:25:04.140\nif I test it, it should work, and\n\n479\n00:25:04.140 --> 00:25:08.760\nany third party software that supports\ntalking to SQL can use this connection.\n\n480\n00:25:08.760 --> 00:25:12.000\nAnd I won't have to give it a username,\nand a password, and all that other stuff.\n\n481\n00:25:12.000 --> 00:25:13.970\nIt'll just have it and be ready.\n\n482\n00:25:13.970 --> 00:25:16.140\nSo as an example here,\nI'll use Excel, right?\n\n483\n00:25:16.140 --> 00:25:17.640\nSo let me fire up Excel.\n\n484\n00:25:17.640 --> 00:25:19.880\nThis is where I opened\nup that CSV earlier.\n\n485\n00:25:19.880 --> 00:25:22.560\nI'm gonna make just a new blank workbook.\n\n486\n00:25:22.560 --> 00:25:24.880\nSo we can go through importing\nthe data right here into Excel, and\n\n487\n00:25:24.880 --> 00:25:25.520\nit's pretty easy.\n\n488\n00:25:25.520 --> 00:25:28.960\nExcel actually has a couple neat features\nfor this cuz it is from Microsoft.\n\n489\n00:25:28.960 --> 00:25:31.270\nWhen you open up a blank\nspread sheet like this one.\n\n490\n00:25:31.270 --> 00:25:33.380\nYou can go up here to the data tab.\n\n491\n00:25:33.380 --> 00:25:36.090\nIt's a little tab most people overlook and\n\n492\n00:25:36.090 --> 00:25:39.600\nyou'll see where you can bring in\ndata from various sources, right.\n\n493\n00:25:39.600 --> 00:25:41.240\nAnd I could choose from other sources.\n\n494\n00:25:41.240 --> 00:25:45.120\nNow because this is a Microsoft product\nthey actually have from SQL Server\n\n495\n00:25:45.120 --> 00:25:46.090\nright there.\n\n496\n00:25:46.090 --> 00:25:48.930\nBut let's say that this\nwasn't a Microsoft product.\n\n497\n00:25:48.930 --> 00:25:52.090\nMaybe it's just some other third party,\nthey might not have it from SQL Server.\n\n498\n00:25:52.090 --> 00:25:55.750\nAnd in that scenario,\nit'll normally be a little more rough,\n\n499\n00:25:55.750 --> 00:25:57.170\nlike this one down here.\n\n500\n00:25:57.170 --> 00:25:58.300\nFrom Microsoft Query.\n\n501\n00:25:58.300 --> 00:26:02.050\nImport data from an unlisted format\nby using Microsoft Query Wizard and\n\n502\n00:26:02.050 --> 00:26:02.960\nODBC, right?\n\n503\n00:26:02.960 --> 00:26:07.100\nIt can use that ODBC connector that I just\njust made to connect to the database.\n\n504\n00:26:07.100 --> 00:26:09.830\nIt doesn't have to know what\ntype of database it is,\n\n505\n00:26:09.830 --> 00:26:12.300\nit just has to know how to\ntalk the ODBC language, right.\n\n506\n00:26:12.300 --> 00:26:14.660\nThat open interconnect type language.\n\n507\n00:26:14.660 --> 00:26:16.220\nAnd so I'm going to choose that,\nwhich is a hard way.\n\n508\n00:26:16.220 --> 00:26:19.770\nIf I had chosen the Microsoft SQL server,\nyou just pick your table it exports it and\n\n509\n00:26:19.770 --> 00:26:20.310\nyou're done.\n\n510\n00:26:20.310 --> 00:26:21.360\nIt's super easy.\n\n511\n00:26:21.360 --> 00:26:24.390\nBut, here I need to pick\nthe ODBC connector and\n\n512\n00:26:24.390 --> 00:26:28.600\nI'm going to choose that Azure Server\nthat I just defined a few moments ago.\n\n513\n00:26:28.600 --> 00:26:32.990\nAnd I'll hit OK and now it's gonna\nstart the connection process.\n\n514\n00:26:32.990 --> 00:26:36.950\nNow, it already knows the credential\ncuz that's part of ODBC connector, but\n\n515\n00:26:36.950 --> 00:26:38.060\nit is prompting me for\n\n516\n00:26:38.060 --> 00:26:41.200\nthe password because it doesn't want\njust anybody to be able to exploit this.\n\n517\n00:26:41.200 --> 00:26:42.930\nSo I'm gonna have to\nprovide my password again.\n\n518\n00:26:44.580 --> 00:26:49.770\nAnd once that's done,\nthen it's gonna start the Query Wizard.\n\n519\n00:26:49.770 --> 00:26:52.120\nIt's asking me what\ndata I want to provide.\n\n520\n00:26:52.120 --> 00:26:54.400\nAnd I'm gonna go in here and\nfind the employees table,\n\n521\n00:26:54.400 --> 00:26:55.620\nthe employees table's buried in here.\n\n522\n00:26:55.620 --> 00:26:58.310\nYou see all the dynamic management\nviews and all that stuff,\n\n523\n00:26:58.310 --> 00:27:01.660\nbecause it sees everything, because\nit doesn't know what the database is.\n\n524\n00:27:01.660 --> 00:27:04.660\nIf I had chosen from a SQL server,\nI would just see the actual table.\n\n525\n00:27:04.660 --> 00:27:05.990\nSo I get a little bit harder work, but\n\n526\n00:27:05.990 --> 00:27:07.790\nthis is what it would look\nlike in a third party.\n\n527\n00:27:07.790 --> 00:27:09.910\nA third party's gonna control this too.\n\n528\n00:27:09.910 --> 00:27:11.050\nI found my Employees table.\n\n529\n00:27:11.050 --> 00:27:13.640\nI'm just gonna add that into\nthe columns in my query.\n\n530\n00:27:13.640 --> 00:27:18.170\nAnd then as I move forward,\nit gives me the chance to filter our rows,\n\n531\n00:27:18.170 --> 00:27:20.310\nfilter out data,\nI can tweak what I wanna get.\n\n532\n00:27:20.310 --> 00:27:22.590\nI'm gonna get it all though and\n\n533\n00:27:22.590 --> 00:27:25.765\nI can even change the sort order\nof things if I wanna adjust that.\n\n534\n00:27:25.765 --> 00:27:28.580\nAgain I'm not gonna mess with that,\nI will just leave it in the format\n\n535\n00:27:28.580 --> 00:27:32.580\nthat it's in and I'm gonna return that\ndata right here into Microsoft Excel.\n\n536\n00:27:32.580 --> 00:27:36.860\nAnd when I'm done, it's gonna use the ODBC\nconnector to reach out to the database,\n\n537\n00:27:36.860 --> 00:27:41.000\nget the data, and then it's offering\nto put it in a table, a pivot table or\n\n538\n00:27:41.000 --> 00:27:41.720\na pivot chart.\n\n539\n00:27:41.720 --> 00:27:46.500\nI'll just leave it as a table, and it'll\ncreate a nice pretty table for me and\n\n540\n00:27:46.500 --> 00:27:47.510\nthere we go.\n\n541\n00:27:47.510 --> 00:27:48.970\nIt reached out to the database server.\n\n542\n00:27:48.970 --> 00:27:51.040\nIt got all of my employees.\n\n543\n00:27:51.040 --> 00:27:54.740\nIt got the headers, first name, last name,\naddress one, and now I've got it all, and\n\n544\n00:27:54.740 --> 00:27:58.300\nthis all came right from the SQL server.\n\n545\n00:27:58.300 --> 00:28:02.690\nAnd even better,\nsee this little refresh button up here?\n\n546\n00:28:02.690 --> 00:28:04.960\nI can refresh it and\nit'll reach out to the SQL server and\n\n547\n00:28:04.960 --> 00:28:06.870\nrerun that query and update the data.\n\n548\n00:28:06.870 --> 00:28:09.230\nSo now I've got a living spreadsheet.\n\n549\n00:28:09.230 --> 00:28:12.770\nThe data is in SQL but\nI can work in Excel.\n\n550\n00:28:12.770 --> 00:28:16.820\nAnd I might not wanna mess this tab but\nI can start to create other tabs and\n\n551\n00:28:16.820 --> 00:28:20.140\nbuild pie charts and graphs and\nstuff that's all feeding off this data.\n\n552\n00:28:20.140 --> 00:28:23.910\nAnd whenever I refresh this data\nall of those guys update also.\n\n553\n00:28:23.910 --> 00:28:26.360\nYou get a lot of power\ntechnologies like these.\n\n554\n00:28:26.360 --> 00:28:29.410\nSo third party software can\nhook right in the sequel and\n\n555\n00:28:29.410 --> 00:28:32.400\nyou don't have to worry about exporting\nthe data in a particular format.\n\n556\n00:28:32.400 --> 00:28:36.446\nThey take of the forest, so just another\nway to get our data out of Azure Sequel.\n\n557\n00:28:36.446 --> 00:28:40.405\nDon IÂ´m not gonna lie that is snazzy my\nfriend [LAUGH] I like the former of that.\n\n558\n00:28:40.405 --> 00:28:45.180\nAnd most people out there probably do\nhave some decent experience with Excel,\n\n559\n00:28:45.180 --> 00:28:48.980\nso this might be the way they wanna go\nwhen working with data thatÂ´s coming out\n\n560\n00:28:48.980 --> 00:28:53.210\nof an actual SQL database if\nyouÂ´re not SQL savvy per say.\n\n561\n00:28:53.210 --> 00:28:56.560\nNow Don we do have an interesting\nquestion coming from the chat room.\n\n562\n00:28:56.560 --> 00:28:59.700\nThey're saying, what if I'm running\nan older version of SQL and\n\n563\n00:28:59.700 --> 00:29:03.360\nI want to move data between that and\nAzure.\n\n564\n00:29:03.360 --> 00:29:05.939\nIs that possible, or\nare we going to have a problem?\n\n565\n00:29:05.939 --> 00:29:06.880\nYou're going to have a problem.\n\n566\n00:29:06.880 --> 00:29:09.630\nI showed you guys how to get\nthe backup cell as a backpack.\n\n567\n00:29:09.630 --> 00:29:12.940\nAnd, so if you're in,\nthis is SQL 2012, right?\n\n568\n00:29:12.940 --> 00:29:17.150\nAnd if you're in SQL 2008 for\nexample, you didn't have back packs.\n\n569\n00:29:17.150 --> 00:29:19.070\nAnd so, how do you move that data?\n\n570\n00:29:19.070 --> 00:29:20.270\nWell you can't right.\n\n571\n00:29:20.270 --> 00:29:22.020\nThe database has been updated,\n\n572\n00:29:22.020 --> 00:29:25.100\nit's in a newer format that's\nnot compatible with 2008.\n\n573\n00:29:25.100 --> 00:29:27.790\nSo you can't go backwards,\nand that's a problem.\n\n574\n00:29:27.790 --> 00:29:31.930\nSo the way you solve that is\nby using an intermediary and\n\n575\n00:29:31.930 --> 00:29:35.570\nthe best intermediary to use is\npart of your SQL installation.\n\n576\n00:29:35.570 --> 00:29:39.720\nWhen you installed SQL you also\nhad the option to install SSIS,\n\n577\n00:29:39.720 --> 00:29:42.430\nthe SQL Server Integration Services.\n\n578\n00:29:42.430 --> 00:29:47.930\nAnd what SSIS does is it let's you\nconnect two databases together and\n\n579\n00:29:47.930 --> 00:29:49.620\nmove data in between them.\n\n580\n00:29:49.620 --> 00:29:53.420\nAnd so you can have a 2008\nSQL server on one side and\n\n581\n00:29:53.420 --> 00:29:55.260\na 2012 SQL server on the other, and\n\n582\n00:29:55.260 --> 00:29:58.250\nit will reach out and grab all of those\ntables and views and all of that stuff and\n\n583\n00:29:58.250 --> 00:30:02.291\nbring them in to your 2008 server, but\nput them in the right format for 2008.\n\n584\n00:30:02.291 --> 00:30:04.005\nAnd you can do that to Oracle and.\n\n585\n00:30:04.005 --> 00:30:07.412\nYou can even do it to CSV's and\nExcel spreadsheets.\n\n586\n00:30:07.412 --> 00:30:10.930\nYou can really do a lot of\npowerful stuff with SSIS.\n\n587\n00:30:10.930 --> 00:30:15.820\nI'm not covering SSIS here in this series,\nbecause it's not a part of Azure SQL, but\n\n588\n00:30:15.820 --> 00:30:17.840\nit's a part of standalone SQL.\n\n589\n00:30:17.840 --> 00:30:20.800\nAnd I'm pretty sure we already filmed some\nepisodes on it in our SQL Server show.\n\n590\n00:30:20.800 --> 00:30:22.280\nSo you can jump over, check that out.\n\n591\n00:30:22.280 --> 00:30:25.810\nBut SSIS really is the best\nway to move databases\n\n592\n00:30:25.810 --> 00:30:28.615\nbetween different versions of SQL.\n\n593\n00:30:28.615 --> 00:30:30.480\nCuz it'll make sure it's\nin the right format, and\n\n594\n00:30:30.480 --> 00:30:32.370\nit'll give you the opportunity\nto tweak things.\n\n595\n00:30:32.370 --> 00:30:37.010\nYou can change all sorts of values, remap\ncolumns, and even rebuild foreign keys,\n\n596\n00:30:37.010 --> 00:30:39.530\nand primary keys and\nstuff like that as you do the movement.\n\n597\n00:30:39.530 --> 00:30:44.070\nSSIS gives you a ton of options versus\na lot of what I've been doing here,\n\n598\n00:30:44.070 --> 00:30:46.830\nwhich is just give me the data\nin the raw format, right?\n\n599\n00:30:46.830 --> 00:30:49.760\nAnd so SSIS really opens that up.\n\n600\n00:30:49.760 --> 00:30:52.260\nAwesome.\nGreat question, excellent answer, Don.\n\n601\n00:30:52.260 --> 00:30:54.810\nWell, I guess that about covers it for\ntoday's episode, though.\n\n602\n00:30:54.810 --> 00:30:57.620\nThank you so much, Don for\nexplaining this stuff to us cuz for\n\n603\n00:30:57.620 --> 00:31:01.900\na lot of people like me, it's a bit of\nhieroglyphic when Greek put together so\n\n604\n00:31:01.900 --> 00:31:05.540\nalways interesting stuff to learn for\nwhen you're messing around with SQL.\n\n605\n00:31:05.540 --> 00:31:08.010\nThat being said, we're gonna go ahead and\nsign off for IT Pro TV.\n\n606\n00:31:08.010 --> 00:31:09.240\nWe thank you for watching.\n\n607\n00:31:09.240 --> 00:31:10.650\nI've been your host, Daniel Lowrie.\n\n608\n00:31:10.650 --> 00:31:11.350\nAnd I'm Don Pazett.\n\n609\n00:31:11.350 --> 00:31:12.988\nAnd we'll see you next time.\n\n610\n00:31:12.988 --> 00:31:19.120\n[MUSIC]\n\n",
          "vimeoId": "151903530"
        },
        {
          "description": "In this episode, Don and Daniel describe and demonstrate how you can optimize your SQL databases by implementing indexes. They start off by explaining what an index is, the two main types of indexes (clustered and non-clustered) and how it can benefit your database. They also explain when NOT to use indexes.",
          "length": "1788",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-azuresql/techskills-asuresql-3-1-1-implementing_indexes-011116-1.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-azuresql/techskills-asuresql-3-1-1-implementing_indexes-011116-1-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-azuresql/techskills-asuresql-3-1-1-implementing_indexes-011116-1-sm.jpg",
          "title": "Implementing Indexes",
          "transcript": "WEBVTT\n\n1\n00:00:00.037 --> 00:00:10.037\n[MUSIC]\n\n2\n00:00:11.957 --> 00:00:16.970\nAll right, greetings everyone, and welcome\nto another great episode of ITProTV.\n\n3\n00:00:16.970 --> 00:00:18.727\nI'm your host, Daniel Lowrie,\n\n4\n00:00:18.727 --> 00:00:22.510\nand in today's episode we are continuing\non with our Azure SQL series.\n\n5\n00:00:22.510 --> 00:00:26.075\nAnd joining me, back by popular demand,\nhere in the studio, yet again,\n\n6\n00:00:26.075 --> 00:00:27.820\nis my good friend, Mr. Don Pezet.\n\n7\n00:00:27.820 --> 00:00:29.950\nDon, welcome back to the show,\nhow are you doing today sir?\n\n8\n00:00:29.950 --> 00:00:33.384\n>> Thanks for having me back, Daniel,\nI'm excited to be on the show, and\n\n9\n00:00:33.384 --> 00:00:35.791\nready jump into world of\nMicrosoft Azure SQL, and\n\n10\n00:00:35.791 --> 00:00:39.594\ntoday we're covering a topic that's\ngonna pretty important to most people.\n\n11\n00:00:39.594 --> 00:00:43.248\nIt's indexing, or implementing\nindexing inside of Azure SQL, and\n\n12\n00:00:43.248 --> 00:00:46.272\nindexes are a great tool for\nimproving performance, and\n\n13\n00:00:46.272 --> 00:00:50.745\nmaking sure you're getting the best query\nresponse time out of SQL that you can, and\n\n14\n00:00:50.745 --> 00:00:53.330\nit's relevant in local SQL,\nas well Azure SQL.\n\n15\n00:00:53.330 --> 00:00:56.370\nIt's really just the same technology\nis implemented a hair differently up in\n\n16\n00:00:56.370 --> 00:00:58.900\nAzure, but we're gonna get\na chance to see how to use it.\n\n17\n00:00:58.900 --> 00:01:00.990\nIt's definitely something you're\ngonna want to use if you're,\n\n18\n00:01:00.990 --> 00:01:02.330\neven if you're just a sysadmin and\n\n19\n00:01:02.330 --> 00:01:05.010\nnot a database administrator, it's still\nsomething you need to be aware of.\n\n20\n00:01:05.010 --> 00:01:06.460\nSo great technology to see.\n\n21\n00:01:06.460 --> 00:01:11.210\n>> Now Don, speaking of sysadmins, and not\nactually DBA, that's this guy right here,\n\n22\n00:01:11.210 --> 00:01:14.110\nI'm sure there's plenty of\nthose also watching as well.\n\n23\n00:01:14.110 --> 00:01:17.930\nIndexing, not as familiar as I\nprobably should be with that concept.\n\n24\n00:01:17.930 --> 00:01:22.040\n>> Well, it's actually kind of something\nthey've taken from the textbook world.\n\n25\n00:01:22.040 --> 00:01:24.100\nA lot of us have used\nreference books before.\n\n26\n00:01:24.100 --> 00:01:26.380\nIf you've ever bought a textbook\noff the shelf Balcony,\n\n27\n00:01:26.380 --> 00:01:30.020\nyou wanted to find something in that book,\nwhat do you use?\n\n28\n00:01:30.020 --> 00:01:33.050\nYou go to the end of the book and\nthere's an index and\n\n29\n00:01:33.050 --> 00:01:36.340\nmaybe I've got a networking book and\nI wanna learn about TCP/IP so\n\n30\n00:01:36.340 --> 00:01:40.710\nI go to the index and find TCP/IP in the\nindex And it says it's on pages 789, 223,\n\n31\n00:01:40.710 --> 00:01:47.550\nand 455, and so now I can jump right to\nthose pages and get the data that I want.\n\n32\n00:01:47.550 --> 00:01:52.010\nThat's what an index does, and in SQL,\nwe have the same exact technology.\n\n33\n00:01:52.010 --> 00:01:55.020\nYou can create an index on a table,\nand now when you're looking for\n\n34\n00:01:55.020 --> 00:01:57.930\ncertain rows in that table,\ninstead of having to\n\n35\n00:01:57.930 --> 00:02:01.490\ngo row by row by row to find what\nyou want, you can jump right to it.\n\n36\n00:02:01.490 --> 00:02:05.970\nNow I used to teach Microsoft SQL courses\nall the time, and I used to use an example\n\n37\n00:02:05.970 --> 00:02:09.130\nabout an encyclopedia, and\nI kinda had to stop because\n\n38\n00:02:09.130 --> 00:02:13.640\nwho uses encyclopedias anymore, but if\nyou remember, remember the days of text.\n\n39\n00:02:13.640 --> 00:02:16.950\nIf you haven't seen one, go to a library\nand ask the librarian, well shoot,\n\n40\n00:02:16.950 --> 00:02:17.903\nyou might know what a library is.\n\n41\n00:02:17.903 --> 00:02:18.407\n>> [LAUGH]\n>> Right?\n\n42\n00:02:18.407 --> 00:02:19.790\nThese buildings where they have books,\n\n43\n00:02:19.790 --> 00:02:24.500\nbut, in a cycle of PA, you used up these\nvolumes for each letter A through Z and\n\n44\n00:02:24.500 --> 00:02:27.330\nsometimes you got more than one volume\nif it was like S or T that had and\n\n45\n00:02:27.330 --> 00:02:30.530\nmore than one, and so,\nif I wanna look something up like\n\n46\n00:02:30.530 --> 00:02:33.960\nwho's the queen of England, right,\nmaybe I don't know, I probably should,\n\n47\n00:02:33.960 --> 00:02:36.880\nshe'd been the queen for 50 years but,\nif you know who the queen of England is.\n\n48\n00:02:36.880 --> 00:02:39.820\nSo, you could go and you could\nfind that now, how do you find it?\n\n49\n00:02:39.820 --> 00:02:42.690\nYou could grab the very first volume,\nVolume A,\n\n50\n00:02:42.690 --> 00:02:47.790\nturn to page one, nope not there,\npage two, page three, page four, and\n\n51\n00:02:47.790 --> 00:02:51.910\npage through each volume all the way until\nyou finally got to the cues and you found\n\n52\n00:02:51.910 --> 00:02:55.590\nQueen of England and it said see Elizabeth\nand send you to some other page, right?\n\n53\n00:02:55.590 --> 00:03:00.160\nSo that's how you do without an index.\n\n54\n00:03:00.160 --> 00:03:03.050\nWith an index you can just reach\nover to that index volume,\n\n55\n00:03:03.050 --> 00:03:06.160\nflip through the Qs and\nit says look for Elizabeth, and\n\n56\n00:03:06.160 --> 00:03:08.970\nas you flip over to the Es,\nyou find the exact volume and page number,\n\n57\n00:03:08.970 --> 00:03:11.860\nyou jump right to it,\nyou get the data much, much faster, right?\n\n58\n00:03:11.860 --> 00:03:15.140\nThat's how an index works, and we've got a\nfew different ways we can implement those\n\n59\n00:03:15.140 --> 00:03:19.370\ninside of SQL so that when run our queries\nthey can use that same technology.\n\n60\n00:03:19.370 --> 00:03:21.780\nExcept instead of jumping\nfrom page to page\n\n61\n00:03:21.780 --> 00:03:25.040\nThey're jumping from hard drive\ncluster to hard drive cluster.\n\n62\n00:03:25.040 --> 00:03:28.420\nInstead of having to scan across the\nentire surface of your hard drive to find\n\n63\n00:03:28.420 --> 00:03:32.740\nyour data they can jump right to point\nin the hard drive where your data is,\n\n64\n00:03:32.740 --> 00:03:34.920\nretrieve it, and get in and get out.\n\n65\n00:03:34.920 --> 00:03:38.400\nIt shrinks that I/O,\nthe input-output operations on hard drive\n\n66\n00:03:38.400 --> 00:03:41.450\nby a significant number And\nit really makes a big difference.\n\n67\n00:03:41.450 --> 00:03:43.500\nSo it's definitely something\nthat we want to implement.\n\n68\n00:03:43.500 --> 00:03:46.190\n>> So, Don, obviously because\nthis is a very good feature.\n\n69\n00:03:46.190 --> 00:03:47.070\nSomething we would want to do.\n\n70\n00:03:47.070 --> 00:03:49.880\nThis is going to be implemented\nacross just about every database.\n\n71\n00:03:49.880 --> 00:03:51.780\nIt's something that we will see.\n\n72\n00:03:51.780 --> 00:03:52.320\n>> Pretty much.\n\n73\n00:03:52.320 --> 00:03:54.590\nYes.\nI'm going to say yes to that.\n\n74\n00:03:54.590 --> 00:03:55.260\n>> Okay.\n\n75\n00:03:55.260 --> 00:03:56.500\n>> This is my noncommittal answer.\n\n76\n00:03:56.500 --> 00:03:59.110\nRight?\nBecause There are sometimes where indexes\n\n77\n00:03:59.110 --> 00:04:00.730\naren't very useful, right?\n\n78\n00:04:00.730 --> 00:04:04.400\nSo, there's times where you might have\nan index and they don't get used, and\n\n79\n00:04:04.400 --> 00:04:06.400\nso you got to make a choice, right?\n\n80\n00:04:06.400 --> 00:04:09.200\nBecause creating index takes some work.\n\n81\n00:04:09.200 --> 00:04:12.950\nIf you create an index,\nuse the encyclopedia as an example, right?\n\n82\n00:04:12.950 --> 00:04:16.790\nWhen they printed that encyclopedia, they\nprinted the index, they made it once and\n\n83\n00:04:16.790 --> 00:04:19.660\nit was done, and\nthey don't have to update it any more,\n\n84\n00:04:19.660 --> 00:04:22.650\nit's done,\nthey'll print an all new set of books, but\n\n85\n00:04:22.650 --> 00:04:27.600\nin our database, every time we add\na new row, is it in the index?\n\n86\n00:04:27.600 --> 00:04:29.630\nNo, so we've gotta go and\nupdate the index.\n\n87\n00:04:29.630 --> 00:04:31.110\nSo there's a bit of work that happens.\n\n88\n00:04:31.110 --> 00:04:34.690\nNow, every time you write to a table,\nthe index has to get updated, and\n\n89\n00:04:34.690 --> 00:04:37.220\nthat creates a little bit of\nextra burden on the server.\n\n90\n00:04:37.220 --> 00:04:42.460\nIf you've got a table that is constantly\nchanging, just super frequently changing,\n\n91\n00:04:42.460 --> 00:04:46.090\nwell there's a bit of resource utilization\nthat's eaten up by that index and\n\n92\n00:04:46.090 --> 00:04:48.350\nthat may be counter-productive\nto what you want.\n\n93\n00:04:48.350 --> 00:04:50.010\nIf you're trying to speed up a query but\n\n94\n00:04:50.010 --> 00:04:54.760\nthat query only runs once a month, it's\nprobably not worth it to create the index,\n\n95\n00:04:54.760 --> 00:04:59.200\nbut if you have a query that runs\nhundreds of times per second.\n\n96\n00:04:59.200 --> 00:05:01.980\nThat index can really\ncreate a big difference.\n\n97\n00:05:01.980 --> 00:05:04.990\nThe other time that we don't need an index\nis we're going to be getting a lot\n\n98\n00:05:04.990 --> 00:05:05.700\nof data.\n\n99\n00:05:05.700 --> 00:05:07.750\nI give the example of the encyclopedias,\nand I said that if I'm looking for\n\n100\n00:05:07.750 --> 00:05:11.530\nthe Queen of England, that's one piece\nof data throughout what might be a 26\n\n101\n00:05:11.530 --> 00:05:16.450\nvolume set of books, but,\nwhat if I took something a little bigger?\n\n102\n00:05:16.450 --> 00:05:21.510\nHow many times does the word \"the\" appear\nin the entire set of encyclopedias?\n\n103\n00:05:21.510 --> 00:05:23.570\nWell an index isn't gonna help me there.\n\n104\n00:05:23.570 --> 00:05:26.660\nI might as well go page by\npage by page looking for\n\n105\n00:05:26.660 --> 00:05:28.360\nthe word the and counting them up.\n\n106\n00:05:28.360 --> 00:05:33.000\nIf you're doing a query that returns a big\ndataset, then a lot of times, it'll just\n\n107\n00:05:33.000 --> 00:05:37.840\nignore the indexes and go straight to\nthe data table and get it from there.\n\n108\n00:05:37.840 --> 00:05:38.630\nRight now.\n\n109\n00:05:38.630 --> 00:05:39.560\nHow does it know to do that?\n\n110\n00:05:39.560 --> 00:05:43.810\nSQL's really smart, and on the back end,\nwhenever you run a query, it's creating\n\n111\n00:05:43.810 --> 00:05:47.680\nwhat's called an execution plan, and the\nexecution plan is where SQL steps back and\n\n112\n00:05:47.680 --> 00:05:52.270\nit says, should I use the index, or\nshould I just skip right past it, or\n\n113\n00:05:52.270 --> 00:05:54.890\nif there's more than one index,\nwhich one's gonna be the best for me?\n\n114\n00:05:54.890 --> 00:05:58.660\nIt figures out which one's gonna be\nthe best And that's what it does, and\n\n115\n00:05:58.660 --> 00:06:01.420\nthen it goes and uses it,\nso it will correct for you.\n\n116\n00:06:01.420 --> 00:06:04.890\nIf you've created an index that's not\nuseful, it'll skip right past it and\n\n117\n00:06:04.890 --> 00:06:09.410\nnot use it, but that means you're wasting\nCPU and disk time to create that index\n\n118\n00:06:09.410 --> 00:06:11.610\nthat's not even being used so\nyou should get it out of there, right.\n\n119\n00:06:11.610 --> 00:06:13.150\nWe don't want to be wasteful with indexes,\nso\n\n120\n00:06:13.150 --> 00:06:15.200\ndon't just go creating\nthem all over the place.\n\n121\n00:06:15.200 --> 00:06:18.090\nUnderstand that there is a little bit of a\nprice you pay for every index you create.\n\n122\n00:06:19.240 --> 00:06:22.410\nAlright now,\nif you want to create an index,\n\n123\n00:06:22.410 --> 00:06:24.370\nthere's two different types of\nindexes we need to be aware of.\n\n124\n00:06:24.370 --> 00:06:28.660\nThere's actually a few different ones, but\nin the real world of relational databases,\n\n125\n00:06:28.660 --> 00:06:30.580\nthere's only two that we\nneed to really care about.\n\n126\n00:06:30.580 --> 00:06:36.480\nThere's whats called a clustered index and\na non-clustered index.\n\n127\n00:06:36.480 --> 00:06:39.990\nNow, the clustered index is one,\nyou know, when Daniel said, so\n\n128\n00:06:39.990 --> 00:06:42.730\nwhere going to have these implemented\npretty much everywhere, and I said I'll\n\n129\n00:06:42.730 --> 00:06:46.940\nsay yes to that, that's because cluster\nand indexes you almost always have them.\n\n130\n00:06:46.940 --> 00:06:51.990\nAll right a clustered index you can only\nhave one index per table, one clustered\n\n131\n00:06:51.990 --> 00:06:57.950\nindex per table and what it does is it\ntakes the data in one of your columns,\n\n132\n00:06:57.950 --> 00:07:03.970\nand it turns it in to an index, it stores\nit in the exact same order as that data.\n\n133\n00:07:03.970 --> 00:07:05.410\nNow what do I mean by that?\n\n134\n00:07:05.410 --> 00:07:06.210\nWell let me show you here.\n\n135\n00:07:06.210 --> 00:07:13.590\nSo I've got a database parked here,\nand I've got a table called employees.\n\n136\n00:07:14.700 --> 00:07:19.140\nSo if I take the employees table right so\nI'm just gonna say select star from\n\n137\n00:07:19.140 --> 00:07:23.130\nemployees, and run that,\nand try and run that.\n\n138\n00:07:23.130 --> 00:07:28.830\nThere we go, and so this is going to query\nmy table, and it's got 5000 rows in it.\n\n139\n00:07:28.830 --> 00:07:32.460\nSo I've got 5000 employees, and\nif we look at what's in here.\n\n140\n00:07:35.710 --> 00:07:38.990\nThe employee ID, first name, last name,\naddress 1, city, state, right?\n\n141\n00:07:38.990 --> 00:07:40.400\nSo these are the employees in my company.\n\n142\n00:07:40.400 --> 00:07:42.430\nNow, when you look at first name,\n\n143\n00:07:42.430 --> 00:07:46.150\nI might have several people\nthat are name George, right.\n\n144\n00:07:46.150 --> 00:07:47.710\nYou can have people that are duplicates.\n\n145\n00:07:47.710 --> 00:07:51.830\nIf I look at last names, I might several\npeople with the last name of Smith, right.\n\n146\n00:07:51.830 --> 00:07:56.218\nSo this Jeanette Stuart, may not be\nthe only Jeanette Stuart in my company.\n\n147\n00:07:56.218 --> 00:07:57.553\nI may have more than one.\n\n148\n00:07:57.553 --> 00:08:02.790\nSo most of the time we need\nsomething to make our people unique.\n\n149\n00:08:02.790 --> 00:08:05.377\nAnd in this case, I've got an employee ID.\n\n150\n00:08:05.377 --> 00:08:07.107\nSee the employee ID over here?\n\n151\n00:08:07.107 --> 00:08:07.967\nIt's a unique number.\n\n152\n00:08:07.967 --> 00:08:10.254\nThere's only one employee ID number 1.\n\n153\n00:08:10.254 --> 00:08:15.260\nI'm gonna have five John Smiths, but five\ndifferent employee IDs to tell them apart.\n\n154\n00:08:15.260 --> 00:08:19.540\nA clustered index is normally\napplied to whatever column\n\n155\n00:08:19.540 --> 00:08:22.000\nit is that is your unique value, right?\n\n156\n00:08:22.000 --> 00:08:25.020\nIt's what's going to be\nenforcing the unique value.\n\n157\n00:08:25.020 --> 00:08:27.990\nIn a clustered index column\nthere's usually a primary key, and\n\n158\n00:08:27.990 --> 00:08:30.290\nyou can only have an entry a single time.\n\n159\n00:08:30.290 --> 00:08:33.680\nThere's a unique value,\nI can't have two employee ID ones.\n\n160\n00:08:33.680 --> 00:08:37.090\nI can have two employees named Dustin or\ntwo employees with the last name of\n\n161\n00:08:37.090 --> 00:08:40.260\nHudson, but I can't have two\nemployee ID number ones, right.\n\n162\n00:08:40.260 --> 00:08:43.960\nSo clustered indexes are just as\nmuch about enforcing uniqueness.\n\n163\n00:08:43.960 --> 00:08:45.900\nAs they are about optimizing performance.\n\n164\n00:08:45.900 --> 00:08:47.860\nNow, look at my sort order here.\n\n165\n00:08:47.860 --> 00:08:50.670\nIf I were to create a clustered\nindex on employee ID it\n\n166\n00:08:50.670 --> 00:08:52.900\nactually makes sense cuz they're in order.\n\n167\n00:08:52.900 --> 00:08:56.850\nBut if I created a clustered index\non first name, it's not so useful.\n\n168\n00:08:56.850 --> 00:08:59.510\nRight?\nBecause I've got Dustin then Buckminster,\n\n169\n00:08:59.510 --> 00:09:00.960\nthen Rina, then Jeanette.\n\n170\n00:09:00.960 --> 00:09:04.110\nThese are not ordered in any real sense.\n\n171\n00:09:04.110 --> 00:09:07.270\nThey're ordered in the order in which\nthe employees were hired because\n\n172\n00:09:07.270 --> 00:09:08.600\nthat's when they were added in and put in.\n\n173\n00:09:08.600 --> 00:09:14.320\nSo when I start to run a query against\nthis, if the index is in the same order\n\n174\n00:09:14.320 --> 00:09:19.080\nas the data stored underneath it, I'm not\ngonna get a huge performance gain, am I?\n\n175\n00:09:19.080 --> 00:09:22.900\nWell, actually just a little bit, because\nwhat's gonna happen is SQL is gonna take\n\n176\n00:09:22.900 --> 00:09:25.730\nthat index and try and caching it around.\n\n177\n00:09:25.730 --> 00:09:28.420\nAs long as SQL has enough\nmemory it will try and\n\n178\n00:09:28.420 --> 00:09:31.230\nstore as many indexes in RAM as it can.\n\n179\n00:09:31.230 --> 00:09:34.400\nIf there isn't enough memory then it'll\nstart taking the less frequently used\n\n180\n00:09:34.400 --> 00:09:37.090\nindexes and putting them back on disc,\nright, it'll page them out.\n\n181\n00:09:37.090 --> 00:09:40.060\nFor the indexes that are used frequently,\nthe data that's used frequently,\n\n182\n00:09:40.060 --> 00:09:41.600\nit will it'll store the index's in RAM.\n\n183\n00:09:41.600 --> 00:09:46.490\nAnd so, this data is stored in\nthis order on the hard drive, and\n\n184\n00:09:46.490 --> 00:09:48.770\nnow it's stored in this order in RAM.\n\n185\n00:09:48.770 --> 00:09:50.450\nSo we do get a performance gain.\n\n186\n00:09:50.450 --> 00:09:53.250\nWe can look for all the employees\nwhose first name is Buckminster.\n\n187\n00:09:53.250 --> 00:09:55.809\nVery popular first name here in the US.\n\n188\n00:09:55.809 --> 00:09:57.550\nAnd so we can find that name and\n\n189\n00:09:57.550 --> 00:10:00.770\nfind everybody else who's got that\nsame name looking in RAM, and then go\n\n190\n00:10:00.770 --> 00:10:04.250\nright to the hard drive and query the\nindividual data for the rest of that row.\n\n191\n00:10:04.250 --> 00:10:07.400\nTheir employee ID, their last name,\ntheir address and so on, right,\n\n192\n00:10:07.400 --> 00:10:09.460\nit can all come from that.\n\n193\n00:10:09.460 --> 00:10:12.040\nSo that's the way that\na clustered index works.\n\n194\n00:10:12.040 --> 00:10:13.420\nIt's a little bit weird.\n\n195\n00:10:13.420 --> 00:10:18.210\nAnd there is a lot of underlying\ntechnology about how B nodes and\n\n196\n00:10:18.210 --> 00:10:18.950\nall that stuff works.\n\n197\n00:10:18.950 --> 00:10:20.360\nBut you really don't\nneed to worry about that.\n\n198\n00:10:20.360 --> 00:10:22.560\nIf you're a database administrator,\nyou care about that stuff.\n\n199\n00:10:22.560 --> 00:10:26.799\nFor us as system administrators,\nwhat we care about is minimizing Disk IO.\n\n200\n00:10:26.799 --> 00:10:28.851\nGetting our money's worth\nout of these servers, and\n\n201\n00:10:28.851 --> 00:10:31.001\nthe clustered index is kind\nof the first step to do that.\n\n202\n00:10:31.001 --> 00:10:35.329\n>> Now Don, a question that comes to my\nmind is that you were talking about this\n\n203\n00:10:35.329 --> 00:10:39.659\n,you were saying, the index is in\nthe same order as basically the tables or\n\n204\n00:10:39.659 --> 00:10:42.982\nas they were put in, so\nwhat's the purpose of the index?\n\n205\n00:10:42.982 --> 00:10:44.372\nIf they're already that ordered,\n\n206\n00:10:44.372 --> 00:10:46.558\nwhy not just go with the order\nthat they're already in?\n\n207\n00:10:46.558 --> 00:10:49.475\n>> Yeah, so\nthinking in terms of us as a human being,\n\n208\n00:10:49.475 --> 00:10:54.680\nif I wanted to take that encyclopedia and\nfind the Queen of England, right?\n\n209\n00:10:54.680 --> 00:10:59.240\nIf I have an index that's alphabetized,\nI know I can skip right to the Q's and\n\n210\n00:10:59.240 --> 00:11:01.370\nI can find Queen of England and\nthen it will tell me the page number and\n\n211\n00:11:01.370 --> 00:11:02.680\nI can go get the page number.\n\n212\n00:11:02.680 --> 00:11:07.240\nBut If I cracked open that index and\nit wasn't alphabetized, as a human being,\n\n213\n00:11:07.240 --> 00:11:07.770\nwhat would I have to do?\n\n214\n00:11:07.770 --> 00:11:09.790\nI'd have to read through\neach page in the index.\n\n215\n00:11:09.790 --> 00:11:12.646\nIt's still shorter than flipping through\nall the volumes in the encyclopedia,\n\n216\n00:11:12.646 --> 00:11:13.994\nit's still an index, that's nice.\n\n217\n00:11:13.994 --> 00:11:15.503\nBut it's still gonna take awhile.\n\n218\n00:11:15.503 --> 00:11:18.374\nWell, clustered indexes\nare not as much about\n\n219\n00:11:18.374 --> 00:11:22.499\nimproving performance as they\nare about enforcing uniqueness and\n\n220\n00:11:22.499 --> 00:11:25.975\nproviding other kind of stability and\ndata integrity.\n\n221\n00:11:25.975 --> 00:11:29.571\nBut we also have what are called\nnon-clustered indexes.\n\n222\n00:11:29.571 --> 00:11:33.330\nAnd a non-clustered index is where\nwe can create an index on data, and\n\n223\n00:11:33.330 --> 00:11:35.400\nwe can organize it however we want.\n\n224\n00:11:35.400 --> 00:11:38.230\nWe can make it an ascending or\ndescending alphabetically.\n\n225\n00:11:38.230 --> 00:11:40.410\nWe can order it by all\nsorts of different things.\n\n226\n00:11:40.410 --> 00:11:43.670\nYou determine how you want\nthat data to be indexed.\n\n227\n00:11:43.670 --> 00:11:46.850\nAnd in a non-clustered index,\nit's not necessarily unique.\n\n228\n00:11:46.850 --> 00:11:48.850\nYou can have a lot of duplicate stuff.\n\n229\n00:11:48.850 --> 00:11:52.468\nSo if I do a query of show me all\nthe users whose last name is Smith,\n\n230\n00:11:52.468 --> 00:11:55.484\nand I have a last name index,\nan index on this column,\n\n231\n00:11:55.484 --> 00:11:58.970\nit can go to that index\nalphabetically jump down to Smith, and\n\n232\n00:11:58.970 --> 00:12:03.059\nwhen it finds Smith it can find all\nthe pointers to the different rows that\n\n233\n00:12:03.059 --> 00:12:05.643\ncontain a person with\nthe last name of Smith.\n\n234\n00:12:05.643 --> 00:12:08.758\nGrabs that data and\nreturns it back to us, very quick,\n\n235\n00:12:08.758 --> 00:12:12.701\nvery fast and if that index is stored\nin RAM, it saves a ton of disc IO.\n\n236\n00:12:12.701 --> 00:12:16.138\nI've mentioned disk IO a few times,\nlet me show you what I mean.\n\n237\n00:12:16.138 --> 00:12:21.501\nI don't have any indexes on this table, so\nif I If I go in my database over here and\n\n238\n00:12:21.501 --> 00:12:26.867\nI expand out my tables, here's this\nDBOEmployees, and if I expand that out and\n\n239\n00:12:26.867 --> 00:12:31.390\ngo down to indexes, see how my\nindex folder, I can't expand it.\n\n240\n00:12:31.390 --> 00:12:34.130\nSo I have no indexes\nright now in this table.\n\n241\n00:12:34.130 --> 00:12:39.590\nAnd so when I ran my query, well,\nmy query was select star from employees,\n\n242\n00:12:39.590 --> 00:12:42.360\nin other words give me everything\nfrom the employee's table.\n\n243\n00:12:42.360 --> 00:12:44.610\nIt's not gonna use an index for\nthat, even if I had one,\n\n244\n00:12:44.610 --> 00:12:47.220\nand the reason is I'm asking for\nall the data.\n\n245\n00:12:47.220 --> 00:12:47.830\nIf I'm asking for\n\n246\n00:12:47.830 --> 00:12:51.090\nall the data, skip the index, let's just\ngo read everything from the hard drive.\n\n247\n00:12:51.090 --> 00:12:53.710\nThat's what we're gonna have to do anyway,\nso that's what's gonna happen.\n\n248\n00:12:53.710 --> 00:12:59.288\nBut when we start to get\na little more specific,\n\n249\n00:12:59.288 --> 00:13:04.308\nwhen I started saying select Firstname and\n\n250\n00:13:04.308 --> 00:13:08.631\nLastname, and I wanna pull that from\n\n251\n00:13:08.631 --> 00:13:13.380\nEmployees where the Lastname = Smith.\n\n252\n00:13:14.460 --> 00:13:17.230\nAll right, so, give me all\nthe users whose last name is Smith.\n\n253\n00:13:18.320 --> 00:13:20.418\nNow its a smaller set of data.\n\n254\n00:13:20.418 --> 00:13:22.560\nWhen I queried a minute ago,\nthere's 5,000 rows.\n\n255\n00:13:22.560 --> 00:13:25.120\nIt returned all 5,000 rows.\n\n256\n00:13:25.120 --> 00:13:28.690\nWhen I run this,\nI've only got one employee named Smith,\n\n257\n00:13:30.350 --> 00:13:34.430\nbut it had to scan the whole\ntable to figure that out.\n\n258\n00:13:34.430 --> 00:13:35.880\nOkay, now how do I know that?\n\n259\n00:13:35.880 --> 00:13:40.080\nIn the SQL Management Studio,\nif you go up here to your query menu,\n\n260\n00:13:40.080 --> 00:13:44.180\nyou'll see an option here that says\ndisplay estimated execution plan and\n\n261\n00:13:44.180 --> 00:13:48.460\nthen at the bottom is another one\ninclude actual execution plan.\n\n262\n00:13:48.460 --> 00:13:50.950\nThe estimated execution plan is what\n\n263\n00:13:50.950 --> 00:13:54.030\nthe Visual Studio thinks is\ngonna happen when you run it.\n\n264\n00:13:54.030 --> 00:13:57.930\nThe actual execution plan is what\nactually happened when you did run it.\n\n265\n00:13:57.930 --> 00:14:00.840\nOne is predicting the future,\none is showing the past.\n\n266\n00:14:00.840 --> 00:14:03.670\nI can choose mine to show the past\ninclude the actual execution plan.\n\n267\n00:14:03.670 --> 00:14:08.480\nAnd if I rerun that query,\nI get a new tab down here, and\n\n268\n00:14:08.480 --> 00:14:10.870\nthat new tab is labeled Execution plan.\n\n269\n00:14:10.870 --> 00:14:13.890\nAnd if I click on it,\nit shows me what happened.\n\n270\n00:14:13.890 --> 00:14:18.630\nAnd see how I've got this select statement\nthat I ran, and then it did a table scan.\n\n271\n00:14:18.630 --> 00:14:20.854\nAll right, what is a table scan?\n\n272\n00:14:20.854 --> 00:14:24.070\nWell, a table scan is where\nit starts with row 1, and\n\n273\n00:14:24.070 --> 00:14:25.900\nit reads all the way through row 5000.\n\n274\n00:14:25.900 --> 00:14:31.380\nIt read the entire table,\nI only got one result, right?\n\n275\n00:14:31.380 --> 00:14:35.460\nOne record, but it had to read\n5000 records to figure that out,\n\n276\n00:14:35.460 --> 00:14:38.320\nbecause how does it know how many\npeople have the last name of Smith?\n\n277\n00:14:38.320 --> 00:14:39.020\nIt doesn't.\n\n278\n00:14:39.020 --> 00:14:42.120\nit's got to go through and\nread them all to be sure.\n\n279\n00:14:42.120 --> 00:14:45.040\nAll the way to that very last record,\nand then it knows, hey,\n\n280\n00:14:45.040 --> 00:14:46.310\nthere's just one person, all right?\n\n281\n00:14:46.310 --> 00:14:49.380\nSo this query is pretty inefficient.\n\n282\n00:14:49.380 --> 00:14:50.700\nOne of the nice things\nabout this though is,\n\n283\n00:14:50.700 --> 00:14:54.630\nif you choose execution plan you can\nfloat over that select statement, and\n\n284\n00:14:54.630 --> 00:14:58.600\nyou'll get a bunch of statistics\nthat pop up on this screen.\n\n285\n00:14:58.600 --> 00:15:01.410\nAnd they tell you things like,\nThe Cached Plan Size,\n\n286\n00:15:01.410 --> 00:15:05.660\nthe Estimated Operator Cost and the most\nimportant one, Estimated Subtree Cost.\n\n287\n00:15:05.660 --> 00:15:06.200\nAll right?\n\n288\n00:15:06.200 --> 00:15:09.810\nNotice mine had an Estimated Subtree Cost\nof 0.084, all right?\n\n289\n00:15:11.100 --> 00:15:14.598\nSo, that's a metric that\nMicrosoft uses that tracks the IO.\n\n290\n00:15:14.598 --> 00:15:18.738\nIf you wanna get really specific, you can\ngo to the table scan itself, and here you\n\n291\n00:15:18.738 --> 00:15:22.758\ncan see the rows that it returned, the\nnumber of executions that it performed,\n\n292\n00:15:22.758 --> 00:15:26.790\nand here's where you can start to see\nthings like the I/O Cost and the CPU Cost.\n\n293\n00:15:26.790 --> 00:15:30.491\nAnd so, there's not a great way for\nme to keep this up on the screen, but\n\n294\n00:15:30.491 --> 00:15:32.920\nif we look here,\noh there we go, that worked.\n\n295\n00:15:32.920 --> 00:15:35.009\nSo my estimated I/O.\n\n296\n00:15:35.009 --> 00:15:41.000\nSo out of this I/O,\n0.07, CPU is only 0.005.\n\n297\n00:15:41.000 --> 00:15:42.670\nThis wasn't a hard query, right?\n\n298\n00:15:42.670 --> 00:15:46.020\nHow hard is it for the computer to\nsay I need to read this whole table?\n\n299\n00:15:46.020 --> 00:15:46.657\nThat's not hard, right?\n\n300\n00:15:46.657 --> 00:15:50.408\nSo CPU is next to nothing, but disk I/O,\nthat's where the bulk of it came from.\n\n301\n00:15:50.408 --> 00:15:53.101\n0.084 that was the full cost.\n\n302\n00:15:53.101 --> 00:15:59.530\n0.078 was the bulk of that cost right\nhere in this table scan All right,\n\n303\n00:15:59.530 --> 00:16:04.251\nnow, if I a clustered index\ncreated on one of the these,\n\n304\n00:16:04.251 --> 00:16:08.268\nthen maybe I could use\nthe clustered index, but\n\n305\n00:16:08.268 --> 00:16:15.040\nthe clustered index is not necessarily\ngoing to help me in this case, right?\n\n306\n00:16:15.040 --> 00:16:18.600\nAnd the clustered index would\nnormally be created on, for example,\n\n307\n00:16:18.600 --> 00:16:20.970\nthe employee ID number, cuz that's unique.\n\n308\n00:16:20.970 --> 00:16:22.760\nFirst name, last name,\nthose aren't unique.\n\n309\n00:16:22.760 --> 00:16:24.404\nSo if I were to create\na clustered index here,\n\n310\n00:16:24.404 --> 00:16:27.950\nit's not necessarily gonna help me,\nbut if we want to create one just so\n\n311\n00:16:27.950 --> 00:16:30.030\nwe can see it,\nhere I can whip one up right quick.\n\n312\n00:16:30.030 --> 00:16:36.110\nSo if I do a CREATE INDEX, and I can\n\n313\n00:16:36.110 --> 00:16:41.480\ntell it what I want to do, and basically\nwhere I want to create the index.\n\n314\n00:16:41.480 --> 00:16:45.020\nWhen you create an index,\nthe index is tied to a column on a table.\n\n315\n00:16:45.020 --> 00:16:47.247\nAnd it can actually be tied to\nmore than one column, if we want.\n\n316\n00:16:47.247 --> 00:16:50.112\nI'll show you an example of\nthat here in a minute, but\n\n317\n00:16:50.112 --> 00:16:53.372\nusually it's just gonna be\ncreated on a column inside of it.\n\n318\n00:16:53.372 --> 00:16:57.485\nAnd so we can say CREATE INDEX and\nthe name of that index, and so\n\n319\n00:16:57.485 --> 00:17:02.570\nI might call this one the idx_employeesid\nor something like that, right?\n\n320\n00:17:02.570 --> 00:17:06.210\nSo I'm gonna give it a name, and then I\ntell it what I'm gonna be creating it on.\n\n321\n00:17:06.210 --> 00:17:08.831\nI'm gonna create it on\nthe employees table, right?\n\n322\n00:17:08.831 --> 00:17:14.754\nAnd so that table, and then I need to\ntell it the columns that I want it to be,\n\n323\n00:17:14.754 --> 00:17:17.590\nand I'm gonna do the EmployeesID.\n\n324\n00:17:17.590 --> 00:17:20.962\nIs that spelled, employee looks really\nweird when you write it a couple of times.\n\n325\n00:17:20.962 --> 00:17:23.232\n>> [LAUGH]\n>> So assuming I spelled it right,\n\n326\n00:17:23.232 --> 00:17:26.170\nthat'll get that created\nright there on that column.\n\n327\n00:17:26.170 --> 00:17:29.370\nNow doing it via Transact-SQL is one way.\n\n328\n00:17:29.370 --> 00:17:32.330\nThere's actually a lot of other options\nthat can be specified when you do this.\n\n329\n00:17:32.330 --> 00:17:35.250\nYou can actually do it through\nthe GUI also to create one.\n\n330\n00:17:35.250 --> 00:17:37.900\nIt's gonna default to creating\na non-clustered index,\n\n331\n00:17:37.900 --> 00:17:40.810\nand if we want it to be a clustered,\nwe actually have to add a little bit more\n\n332\n00:17:40.810 --> 00:17:43.330\nto it to let it know that we\nwant it to be unique, all right?\n\n333\n00:17:43.330 --> 00:17:44.420\nNow, in my case,\n\n334\n00:17:44.420 --> 00:17:48.090\nI know having that clustered index is\nnot actually gonna help me, right?\n\n335\n00:17:48.090 --> 00:17:50.090\nIt's not gonna help because of\nthe type of query I'm running.\n\n336\n00:17:50.090 --> 00:17:52.910\nWe have to understand the query that\nwe're running to make sure we create\n\n337\n00:17:52.910 --> 00:17:56.840\nindexes that work for us, and\nthis is where a DBA comes in.\n\n338\n00:17:56.840 --> 00:17:59.450\nIf you've got a database\nadministrator on staff,\n\n339\n00:17:59.450 --> 00:18:01.120\nthey're the ones writing the queries.\n\n340\n00:18:01.120 --> 00:18:02.610\nThey know the indexes that'll help, and\n\n341\n00:18:02.610 --> 00:18:06.220\nso they'll usually tell you\nwhat indexes to create.\n\n342\n00:18:06.220 --> 00:18:08.068\nWe'll see a little later in\nthe show there's ways we can do\n\n343\n00:18:08.068 --> 00:18:09.247\nit even if we don't know that stuff.\n\n344\n00:18:09.247 --> 00:18:12.349\nBut if we don't know what indexes to\ncreate, if we don't know what queries\n\n345\n00:18:12.349 --> 00:18:15.170\nare being run, then you're not\ngonna know what indexes to create.\n\n346\n00:18:15.170 --> 00:18:17.570\nYou can't just go and\ncreate indexes willy-nilly, right?\n\n347\n00:18:17.570 --> 00:18:19.470\nSo going back to Daniel's\nstatement earlier about\n\n348\n00:18:19.470 --> 00:18:21.150\neverybody's going to have indexes.\n\n349\n00:18:21.150 --> 00:18:25.050\nWhile it's true, but you're not\ngoing to create indexes out of hand.\n\n350\n00:18:25.050 --> 00:18:28.180\nYou've got to understand\nthe queries that are being run.\n\n351\n00:18:28.180 --> 00:18:35.350\nSo for example, let's say I create\na non-clustered index on LastName, okay?\n\n352\n00:18:35.350 --> 00:18:38.980\nNow my query, I was selecting\nFirstName and LastName from employees,\n\n353\n00:18:38.980 --> 00:18:42.900\nwhere LastName = \"Smith\" so\nthat's a query based on LastName.\n\n354\n00:18:42.900 --> 00:18:47.670\nI'm going to create an index\ncalled idx_lastname, and\n\n355\n00:18:47.670 --> 00:18:52.020\nI'm creating it on the Employees table and\nI'm to create it on the LastName column.\n\n356\n00:18:52.020 --> 00:18:57.653\nAll right, and so when I do that,\nthat's gonna create a index\n\n357\n00:18:57.653 --> 00:19:02.200\njust for LastName, and\nI'm gonna highlight it.\n\n358\n00:19:02.200 --> 00:19:06.440\nThere's a neat little trick here inside of\nVisual Studio, if you highlight a line,\n\n359\n00:19:06.440 --> 00:19:09.330\nwhen you hit Execute, it will only\nexecute the line that's highlighted.\n\n360\n00:19:09.330 --> 00:19:11.860\nSo I just want to run that one line and\nexecute it.\n\n361\n00:19:11.860 --> 00:19:14.340\nSo that's gonna create an index.\n\n362\n00:19:14.340 --> 00:19:18.830\nNow I've got an index on that and\nby default it's gonna order that\n\n363\n00:19:18.830 --> 00:19:21.170\norder ascending, but\nI could also order a descending or\n\n364\n00:19:21.170 --> 00:19:22.850\nwhatever you can kinda\nchange that if you want.\n\n365\n00:19:22.850 --> 00:19:26.020\nI'm just gonna run with\nthe default order there, and now,\n\n366\n00:19:26.020 --> 00:19:30.400\nif I run my query I'm doing a query\nwhere I wanna get first and\n\n367\n00:19:30.400 --> 00:19:33.190\nthe last name just for\npeople whose last name is Smith.\n\n368\n00:19:33.190 --> 00:19:34.210\nOkay?\n\n369\n00:19:34.210 --> 00:19:37.540\nThat seems like this index is gonna\nwork really well, doesn't it?\n\n370\n00:19:37.540 --> 00:19:38.750\nNot necessarily.\n\n371\n00:19:38.750 --> 00:19:41.410\nSometimes you might have\nan index that looks perfect and\n\n372\n00:19:41.410 --> 00:19:43.270\nit still doesn't get used.\n\n373\n00:19:43.270 --> 00:19:44.680\nNow I'll bet you this\none doesn't get used.\n\n374\n00:19:44.680 --> 00:19:45.670\nLet's find out.\n\n375\n00:19:45.670 --> 00:19:46.910\nMaybe I'm wrong.\n\n376\n00:19:46.910 --> 00:19:51.390\nI'm gonna execute it and I see I got\nthat one result just like before, and\n\n377\n00:19:51.390 --> 00:19:57.110\nif I look at my execution plan, well,\nit actually did use my index, right?\n\n378\n00:19:57.110 --> 00:20:01.320\nIf I look down here I can see where it\ndid a RID lookup, which is a Row ID or\n\n379\n00:20:01.320 --> 00:20:02.010\na Heap lookup.\n\n380\n00:20:03.240 --> 00:20:03.880\nWhat is that?\n\n381\n00:20:03.880 --> 00:20:06.980\nWell, what it actually starts with\nis this guy up here, the index.\n\n382\n00:20:06.980 --> 00:20:10.850\nIt did an index seek and it said,\nwho all has the name of Smith?\n\n383\n00:20:10.850 --> 00:20:12.790\nAnd then it found those people.\n\n384\n00:20:12.790 --> 00:20:17.670\nIt found who has the last name of Smith,\nbut then my query was asking for\n\n385\n00:20:17.670 --> 00:20:21.150\nfirst name also, and so\nit's got to go and get the first name.\n\n386\n00:20:21.150 --> 00:20:24.420\nThe first name is not stored in the index\nand so it had to turn around and\n\n387\n00:20:24.420 --> 00:20:27.050\ngo to the hard drive and\nthat's a heap lookup.\n\n388\n00:20:27.050 --> 00:20:31.420\nIt had to go into the database,\nbut it knew exactly where to go.\n\n389\n00:20:31.420 --> 00:20:33.710\nIt wasn't a table scan,\nit didn't have to read the whole table.\n\n390\n00:20:33.710 --> 00:20:36.158\nIt knew exactly where to go\nbecause the index told it.\n\n391\n00:20:36.158 --> 00:20:39.670\nIt said there's a user called Raven Smith,\nand\n\n392\n00:20:39.670 --> 00:20:44.260\nif you want to find them, they're stored\nat this location on the hard drive, and\n\n393\n00:20:44.260 --> 00:20:48.070\nI jumped right to that location and\nI got that data.\n\n394\n00:20:48.070 --> 00:20:52.820\nNow on SSD, on solid state digital drives,\nit's not that big of a deal,\n\n395\n00:20:52.820 --> 00:20:56.450\nright, but\non traditional magnetic spinning disks,\n\n396\n00:20:56.450 --> 00:21:00.760\nit's a huge deal to skip a scan and\ngo straight to where you need it.\n\n397\n00:21:00.760 --> 00:21:02.641\nEven on SSDs it's an improvement,\nright, but\n\n398\n00:21:02.641 --> 00:21:05.240\nit's a significant improvement\non magnetic media.\n\n399\n00:21:05.240 --> 00:21:08.623\nSo, it did that and\nthen it joined the FirstName and\n\n400\n00:21:08.623 --> 00:21:12.900\nthe LastName together to give me\nthe resulted table, and that's where I got\n\n401\n00:21:12.900 --> 00:21:16.950\nthis table which is the exact same as\nthe table that I had before, right?\n\n402\n00:21:16.950 --> 00:21:18.500\nI got Ravon Smith back.\n\n403\n00:21:18.500 --> 00:21:22.720\nBefore it was 0.084 was the subtree cost.\n\n404\n00:21:22.720 --> 00:21:27.902\nHere if I go to my execution plan and\nI go to that SELECT statement,\n\n405\n00:21:27.902 --> 00:21:32.164\nwhat we can see is my subtree cost 0.018,\nokay.\n\n406\n00:21:32.164 --> 00:21:36.580\nI was 0.084, now I'm 0.018.\n\n407\n00:21:36.580 --> 00:21:40.574\nThat's 25%,\nactually probably closer to like 22%,\n\n408\n00:21:40.574 --> 00:21:43.119\nof the cost of the last query, right?\n\n409\n00:21:43.119 --> 00:21:46.440\nThat means I can run\nthis query four times now\n\n410\n00:21:47.440 --> 00:21:51.890\nat the exact same cost of running\nit once without an index.\n\n411\n00:21:51.890 --> 00:21:55.121\nSo, is the burden of creating\nan index worth it in this scenario?\n\n412\n00:21:55.121 --> 00:21:56.496\nAbsolutely, right?\n\n413\n00:21:56.496 --> 00:22:03.260\nWe went from 0.084 down to 0.018,\nhuge decrease in cost.\n\n414\n00:22:03.260 --> 00:22:07.630\nThat's what indexes can do for us if we\ncreate them, and you can even go crazier.\n\n415\n00:22:07.630 --> 00:22:09.610\nWe're gonna kick the stops\nout in this episode.\n\n416\n00:22:09.610 --> 00:22:13.380\nSo remember what I said that\nwe did the index seek and\n\n417\n00:22:13.380 --> 00:22:14.780\nthen we had to do a heap, right?\n\n418\n00:22:14.780 --> 00:22:18.420\nWe had to go and\nfind the actual rows that had the data and\n\n419\n00:22:18.420 --> 00:22:20.520\nget the FirstName,\ncuz it wasn't in the index.\n\n420\n00:22:20.520 --> 00:22:23.230\nYou can do what's called covering a query.\n\n421\n00:22:23.230 --> 00:22:29.820\nCovering a query is where all the data\nneeded for the query is in the index.\n\n422\n00:22:29.820 --> 00:22:32.450\nRemember how I said an index\ncan cover more than one column?\n\n423\n00:22:32.450 --> 00:22:36.505\nSo I can grab FirstName and LastName and\nput them both in the index, and\n\n424\n00:22:36.505 --> 00:22:39.930\nnow the whole query would\ncome out of the index.\n\n425\n00:22:39.930 --> 00:22:42.164\nSo I'm gonna write this down,\ncuz I'm gonna forget these numbers.\n\n426\n00:22:42.164 --> 00:22:46.081\nSo we had 0.084, with no indexes.\n\n427\n00:22:46.081 --> 00:22:50.843\nI had 0.018 with an index\nthat just covered LastName,\n\n428\n00:22:50.843 --> 00:22:55.740\nand then we were able to whittle down and\nfind that.\n\n429\n00:22:55.740 --> 00:22:58.980\nBefore I move on, I did a query for\n\n430\n00:22:58.980 --> 00:23:03.750\npeople whose last names started\nwith Smith and I had one entry.\n\n431\n00:23:03.750 --> 00:23:07.150\nThere may be a time where my\nresultant set of data is large enough\n\n432\n00:23:07.150 --> 00:23:09.080\nthat it still skips the query, right?\n\n433\n00:23:09.080 --> 00:23:09.652\nI mentioned that.\n\n434\n00:23:09.652 --> 00:23:11.360\nRight, that I might skip the index and\ngo right for it.\n\n435\n00:23:11.360 --> 00:23:15.990\nSo let me change this just a little bit\nto show you guys where this might not\n\n436\n00:23:15.990 --> 00:23:17.650\nhave happened, right?\n\n437\n00:23:17.650 --> 00:23:22.075\nIf I said where the LastName is like S%,\n\n438\n00:23:22.075 --> 00:23:25.601\nokay, now what that does mean?\n\n439\n00:23:25.601 --> 00:23:30.137\nThat means if their last name starts with\nS, right, so not just Smith anymore,\n\n440\n00:23:30.137 --> 00:23:34.350\njust last name starts with S, this is\ngonna return a bigger set of people.\n\n441\n00:23:34.350 --> 00:23:39.110\nThere is more people whose last name\nstarts with S than just plain old Smith.\n\n442\n00:23:39.110 --> 00:23:43.100\nAnd so when I run that, I can see\nI get a resulting table down here.\n\n443\n00:23:43.100 --> 00:23:45.505\nLet's see how many rows did I get,\n448 rows,\n\n444\n00:23:45.505 --> 00:23:48.687\nactually a lot of people who's\nlast name starts with S, right?\n\n445\n00:23:48.687 --> 00:23:53.793\nAnd so if I go to my execution plan, say\nlet's skip the index, I've got an index\n\n446\n00:23:53.793 --> 00:23:59.055\non LastName, but it didn't use it because\nquerying the index first and then going\n\n447\n00:23:59.055 --> 00:24:04.348\nto get the data would have taken more work\nthan just going and doing the table scan.\n\n448\n00:24:04.348 --> 00:24:07.350\nYou see that very frequently on SSD.\n\n449\n00:24:07.350 --> 00:24:10.405\nAzure SQL's storing on SSD, so\nit knew, hey, I can go to the disk and\n\n450\n00:24:10.405 --> 00:24:12.460\nit'll actually be faster.\n\n451\n00:24:12.460 --> 00:24:13.920\nIf we were on magnetic storage,\n\n452\n00:24:13.920 --> 00:24:18.240\nit probably still would've used the index\nin this case, but we're on SSD.\n\n453\n00:24:18.240 --> 00:24:22.130\n>> So it's all about creating a pertinent\nset of data that is searchable,\n\n454\n00:24:22.130 --> 00:24:23.870\nto improve performance.\n\n455\n00:24:23.870 --> 00:24:25.290\n>> Yep, absolutely.\n\n456\n00:24:25.290 --> 00:24:30.474\nSo, let me return this back\nto the LastName = Smith,\n\n457\n00:24:30.474 --> 00:24:33.370\nright, and I'm gonna execute that.\n\n458\n00:24:34.420 --> 00:24:37.510\nAnd so I'll just run that query again,\nand look at that execution plan,\n\n459\n00:24:37.510 --> 00:24:39.500\nmake sure that I'm still at that 0.018.\n\n460\n00:24:39.500 --> 00:24:41.600\nNow, be careful in real life land.\n\n461\n00:24:41.600 --> 00:24:45.400\nSometimes if you run a query over and over\nagain, the query results will get cached,\n\n462\n00:24:45.400 --> 00:24:47.500\nand then SQL will return it\nright out of the cache, and so\n\n463\n00:24:47.500 --> 00:24:49.500\nthen you get numbers\nthat are insanely low.\n\n464\n00:24:49.500 --> 00:24:51.550\nBut I got those 0.018 again.\n\n465\n00:24:51.550 --> 00:24:54.502\nSo there's that query with\nthe single index that I created.\n\n466\n00:24:54.502 --> 00:25:00.940\nI'm gonna create another index that's\ncalled idx_lastname_firstname, okay?\n\n467\n00:25:00.940 --> 00:25:04.730\nAnd I'm going to create that on Employees,\nand I'll take LastName and\n\n468\n00:25:04.730 --> 00:25:06.130\nI'll make it ascending.\n\n469\n00:25:06.130 --> 00:25:08.890\nRemember how I said you can change\nthe order of this stuff, and\n\n470\n00:25:08.890 --> 00:25:10.868\nthen I'll put in FirstName.\n\n471\n00:25:10.868 --> 00:25:17.220\nI'm adding FirstName to this index, so\nthe index will contain both columns,\n\n472\n00:25:17.220 --> 00:25:23.170\nnot just one, and that is everything that\nI'm asking for up here in my query above.\n\n473\n00:25:23.170 --> 00:25:26.611\nAnd so this index should,\nassuming I did it right,\n\n474\n00:25:26.611 --> 00:25:29.830\nshould cover the query as it's written.\n\n475\n00:25:29.830 --> 00:25:35.050\nOkay, so I'm going to take that, and\nrun that command to create that index.\n\n476\n00:25:35.050 --> 00:25:36.270\nThere we go.\n\n477\n00:25:36.270 --> 00:25:39.290\nAnd now I'm just gonna rerun\nthis query from earlier.\n\n478\n00:25:39.290 --> 00:25:41.150\nAnd we'll get a chance to see whether or\n\n479\n00:25:41.150 --> 00:25:43.398\nnot that actually improves the query,\nright?\n\n480\n00:25:44.540 --> 00:25:45.480\nAnd so I'm gonna run that.\n\n481\n00:25:45.480 --> 00:25:48.450\nI see I ran it, I got my same set\nof data back just like before.\n\n482\n00:25:48.450 --> 00:25:53.370\nAnd if I look at my execution plan,\nsee how there's an Index Seek and no heap?\n\n483\n00:25:53.370 --> 00:25:54.820\nRight.\nIt didn't do a Rid Lookup.\n\n484\n00:25:54.820 --> 00:25:58.165\nIt didn't have to jump in and\nget the data, cuz the data was already in\n\n485\n00:25:58.165 --> 00:26:01.522\nthe index, right, and it pulled it\nfrom that index that I just made.\n\n486\n00:26:01.522 --> 00:26:07.194\nI had my subtree cost earlier is 0.018\n\n487\n00:26:07.194 --> 00:26:11.772\nis now 0.003, 0.003.\n\n488\n00:26:11.772 --> 00:26:15.676\nSo we went from 0.084 with no index,\n\n489\n00:26:15.676 --> 00:26:20.585\ndown to 0.018 with\na typical one column index,\n\n490\n00:26:20.585 --> 00:26:25.910\nall the way down to 0.003\nwith a covered index.\n\n491\n00:26:25.910 --> 00:26:31.731\nThat query at 0.003,\nwhat's 84 divided by 3?\n\n492\n00:26:31.731 --> 00:26:32.960\n>> 84 dived by 3 is gonna\nbe something like, yeah.\n\n493\n00:26:32.960 --> 00:26:35.400\n>> Oh, no, that's bad math,\nthat's not exactly a multiplier, is it?\n\n494\n00:26:35.400 --> 00:26:39.576\nSo, 3 times,\nI don't even know the math on this one.\n\n495\n00:26:39.576 --> 00:26:42.070\n>> [LAUGH]\n>> It's over 100 times gain though, or\n\n496\n00:26:42.070 --> 00:26:48.680\nover, no, not 100 times, it'd be what,\nprobably 27 times faster?\n\n497\n00:26:48.680 --> 00:26:50.916\n>> Two plus two is chicken, okay?\n\n498\n00:26:50.916 --> 00:26:53.370\n[LAUGH]\n>> It's a significant improvement.\n\n499\n00:26:53.370 --> 00:26:58.160\nJust to put it into standard numbers, if\nit took 84 for the first one, then 18 for\n\n500\n00:26:58.160 --> 00:27:03.420\nthe second one, 3 for the third one,\n3, that's it, versus 84.\n\n501\n00:27:03.420 --> 00:27:08.647\nHuge decrease in time, significantly\nfaster, but what's the tradeoff?\n\n502\n00:27:08.647 --> 00:27:10.150\nThere's always a tradeoff.\n\n503\n00:27:10.150 --> 00:27:14.083\nThe tradeoff here is maintaining\nan index that covers two columns,\n\n504\n00:27:14.083 --> 00:27:16.010\ntakes a lot more work.\n\n505\n00:27:16.010 --> 00:27:20.550\nEvery time I update any value in either\ncolumn, that index has to get updated.\n\n506\n00:27:20.550 --> 00:27:22.960\nSo the server's having to work\na little harder to maintain that.\n\n507\n00:27:22.960 --> 00:27:26.160\nNow with Azure SQL we don't normally care,\nwe're like, Microsoft will deal with that.\n\n508\n00:27:26.160 --> 00:27:28.930\nBut we'll see in the next episode,\ncuz I've talked too long.\n\n509\n00:27:28.930 --> 00:27:31.240\nWe'll see in the next episode where\nthere are some maintenance concerns that\n\n510\n00:27:31.240 --> 00:27:34.400\nwe'll have to be aware of, some things we\nneed to do to keep those indexes healthy.\n\n511\n00:27:34.400 --> 00:27:36.980\nThe index is kind of like a house plant,\nyou gotta water it,\n\n512\n00:27:36.980 --> 00:27:38.700\nfeed it, give it some sunlight.\n\n513\n00:27:38.700 --> 00:27:41.540\nSame thing here, especially if the index\nis covering more than one column.\n\n514\n00:27:41.540 --> 00:27:43.740\nThere's some actions I'm gonna\nhave to take to keep it healthy,\n\n515\n00:27:43.740 --> 00:27:47.260\nkeep it operational, and\nkeep it running nice and smooth.\n\n516\n00:27:47.260 --> 00:27:50.170\nYou guys see right here, these are hard\nnumbers, I'm running these in Azure,\n\n517\n00:27:50.170 --> 00:27:54.550\nthis isn't running on my own laptop,\nand I'm getting huge performance gains,\n\n518\n00:27:54.550 --> 00:27:58.500\njust because I knew to create\nthe index that supported my query.\n\n519\n00:27:58.500 --> 00:28:01.390\nYou look at the most common\nquery your company runs, and\n\n520\n00:28:01.390 --> 00:28:02.940\nthen you build indexes to support that.\n\n521\n00:28:02.940 --> 00:28:05.165\nAnd you know shops like Amazon.\n\n522\n00:28:05.165 --> 00:28:08.000\nAmazon knows that you're gonna come to\ntheir website, you're going to go to\n\n523\n00:28:08.000 --> 00:28:09.870\nthe search box up top, and\nyou're going to type a product name,\n\n524\n00:28:09.870 --> 00:28:12.200\nsomething that will probably\nmatch a product name.\n\n525\n00:28:12.200 --> 00:28:15.000\nSo you know they've indexed\nthe product names, so\n\n526\n00:28:15.000 --> 00:28:16.450\nthat you can run a quick query and\nget those results.\n\n527\n00:28:16.450 --> 00:28:17.160\nIt makes a big difference.\n\n528\n00:28:18.190 --> 00:28:21.640\nYou may have some queries that are not\nrun very often, maybe run once a month.\n\n529\n00:28:21.640 --> 00:28:24.640\nYou're not gonna build custom indexes that\nsupport something that just runs once\n\n530\n00:28:24.640 --> 00:28:29.090\na month, but the queries that you\nrun hundreds of times per minute,\n\n531\n00:28:29.090 --> 00:28:31.220\nthose you definitely want\nto have indexes to support.\n\n532\n00:28:31.220 --> 00:28:32.610\nVery important technology.\n\n533\n00:28:32.610 --> 00:28:35.220\n>> So Don, this stuff is definitely very,\nvery fascinating.\n\n534\n00:28:35.220 --> 00:28:38.030\nI really look forward to\ndiving into part two on this,\n\n535\n00:28:38.030 --> 00:28:41.170\nthis is the kind of thing that keeps me\nriveted, the intricate ways in which we\n\n536\n00:28:41.170 --> 00:28:44.380\ncan increase the performance just\nby knowing a few tricks and ways.\n\n537\n00:28:44.380 --> 00:28:47.240\nThis indexing thing seems\nto be the cat's meow.\n\n538\n00:28:47.240 --> 00:28:50.570\nNow when it comes to just some parting\nwords of wisdom before we close the show,\n\n539\n00:28:50.570 --> 00:28:52.690\nhave any thing to give to our viewers?\n\n540\n00:28:52.690 --> 00:28:55.710\n>> The main thing is don't go crazy with\nyour indexes, it may seem like a great\n\n541\n00:28:55.710 --> 00:28:59.090\nidea to go and just start creating any\nindexes to cover any query you've got.\n\n542\n00:28:59.090 --> 00:29:01.570\n>> Don't do it, you need to monitor\nperformance on your server and\n\n543\n00:29:01.570 --> 00:29:03.200\nmake sure you're actually\ngetting a return on it,\n\n544\n00:29:03.200 --> 00:29:07.120\nbecause I've seen people where their\nserver was spending more time maintaining\n\n545\n00:29:07.120 --> 00:29:10.680\nindexes than it was answering queries and\nit's counterproductive at that point.\n\n546\n00:29:10.680 --> 00:29:13.160\nYou need to make sure that\nthe tradeoff is worth it,\n\n547\n00:29:13.160 --> 00:29:16.210\nand we have the monitoring SQL episode\nyou can guys can jump in there and\n\n548\n00:29:16.210 --> 00:29:18.720\nget a chance to see how to monitor\nperformance on the system.\n\n549\n00:29:18.720 --> 00:29:21.410\n>> Azure usually does most of that for\nus, so we don't have to worry about it.\n\n550\n00:29:21.410 --> 00:29:22.760\nBut just keep that in mind.\n\n551\n00:29:22.760 --> 00:29:24.340\nDon't go crazy with indexes.\n\n552\n00:29:24.340 --> 00:29:27.240\nMake sure that each one you\ncreate has a specific purpose.\n\n553\n00:29:27.240 --> 00:29:28.950\nAnd if you no longer need that query,\n\n554\n00:29:28.950 --> 00:29:31.540\nmake sure that you get rid of the index\nif you're not gonna use it anymore.\n\n555\n00:29:31.540 --> 00:29:32.450\n>> Awesome stuff.\n\n556\n00:29:32.450 --> 00:29:35.800\nWell, Don, it looks like it's time to go\nahead and sign off for this good day.\n\n557\n00:29:35.800 --> 00:29:38.060\nThanks for joining us and\nthank you for watching.\n\n558\n00:29:38.060 --> 00:29:41.396\nGonna go ahead and sign out for ITproTV,\nI've been your host Daniel Lowrie.\n\n559\n00:29:41.396 --> 00:29:42.272\n>> And I am Don Pezet.\n\n560\n00:29:42.272 --> 00:29:43.689\n>> We'll see you next time.\n\n561\n00:29:43.689 --> 00:29:48.520\n[MUSIC]\n\n",
          "vimeoId": "151774504"
        },
        {
          "description": "In this episode, Don and Daniel continue explaining how to implement indexes and here they pick back up by looking at the Azure Index Advisor. The Index Advisor will help you optimize your databases by suggesting indexes. They also look at Query Performance Insight tool and how to perform index maintenance.",
          "length": "1625",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-azuresql/techskills-asuresql-3-1-2-implementing_indexes-011116-1.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-azuresql/techskills-asuresql-3-1-2-implementing_indexes-011116-1-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-azuresql/techskills-asuresql-3-1-2-implementing_indexes-011116-1-sm.jpg",
          "title": "Implementing Indexes Part 2",
          "transcript": "WEBVTT\n\n1\n00:00:00.000 --> 00:00:10.000\n[MUSIC]\n\n2\n00:00:11.555 --> 00:00:16.481\nAll right, greetings everyone, and welcome\nto another exciting episode of ITProTV.\n\n3\n00:00:16.481 --> 00:00:18.550\nI'm your host, Daniel Lowrie.\n\n4\n00:00:18.550 --> 00:00:22.860\nAnd on today's episode,\nwe are continuing on with our Azure SQL,\n\n5\n00:00:22.860 --> 00:00:24.140\nI'd tried to put that together.\n\n6\n00:00:24.140 --> 00:00:25.660\nSeries that we've been working on.\n\n7\n00:00:25.660 --> 00:00:27.780\nAnd the man that's joining\nme today here in the studio.\n\n8\n00:00:27.780 --> 00:00:31.500\nI have pried him away from his busy\nschedule of watching a 24-hour marathon of\n\n9\n00:00:31.500 --> 00:00:32.660\nErnest Goes to Camp.\n\n10\n00:00:32.660 --> 00:00:34.650\nThat is my good friend, Mr. Don Pezet.\n\n11\n00:00:34.650 --> 00:00:36.110\nDon, welcome to the show, sir.\n\n12\n00:00:36.110 --> 00:00:37.330\n>> Thank you for having me back, Daniel.\n\n13\n00:00:37.330 --> 00:00:41.980\nGlad to be here ready to jump\ninto indexing in Azure SQL again.\n\n14\n00:00:41.980 --> 00:00:44.330\nIn the last episode we got\na chance to talk about indexes,\n\n15\n00:00:44.330 --> 00:00:45.830\nwhy they're important, how they work.\n\n16\n00:00:45.830 --> 00:00:49.200\nI showed you guys creating some indexes,\nand how in Azure SQL, they can really\n\n17\n00:00:49.200 --> 00:00:52.330\nimprove our performance, even though\nwe're already running on some of the best\n\n18\n00:00:52.330 --> 00:00:56.065\nservers on the planet, we can still make\nthat performance better by tweaking SQL.\n\n19\n00:00:56.065 --> 00:01:00.130\nBut in this episode we're going to take\na look at some additional tools, and\n\n20\n00:01:00.130 --> 00:01:02.460\nsome additional things\nthat we didn't get to or\n\n21\n00:01:02.460 --> 00:01:04.250\nthat I didn't even introduce\nin the last episode.\n\n22\n00:01:04.250 --> 00:01:05.490\nSo just kinda round that off, and\n\n23\n00:01:05.490 --> 00:01:08.230\nthen see the rest of indexing\nas far as Azure SQL goes.\n\n24\n00:01:08.230 --> 00:01:09.260\n>> So this is gonna be awesome.\n\n25\n00:01:09.260 --> 00:01:10.770\nI'm really looking forward to this show.\n\n26\n00:01:10.770 --> 00:01:15.140\nOne thing I did realize on the last\nepisode was, Don, that you spent a lot of\n\n27\n00:01:15.140 --> 00:01:21.770\ntime in the SQL Management Studio, and we\nnever even touched the Azure Web Portal.\n\n28\n00:01:21.770 --> 00:01:24.315\nLast time I checked this\nis an Azure sequel show.\n\n29\n00:01:24.315 --> 00:01:25.560\n>> [LAUGH]\n>> Are we going to be touching\n\n30\n00:01:25.560 --> 00:01:26.600\non that today?\n\n31\n00:01:26.600 --> 00:01:31.960\n>> Yeah, so, a lot of what goes on with\nthe indexes are really handled by DBAs.\n\n32\n00:01:31.960 --> 00:01:34.809\nAnd the DBAs aren't going to be\nlogging into the Azure portal, right?\n\n33\n00:01:34.809 --> 00:01:38.243\nThey're gonna fire up this SQL management\nstudio, they're gonna connect in that way,\n\n34\n00:01:38.243 --> 00:01:41.280\nthey're gonna run their tools and\nutilities and access the system.\n\n35\n00:01:41.280 --> 00:01:43.220\nAnd create all their indexes, right?\n\n36\n00:01:43.220 --> 00:01:48.870\nBut, as a sysadmin, we don't necessarily\nknow all that, or have access to that.\n\n37\n00:01:48.870 --> 00:01:51.140\nWe don't necessarily want access to that,\nright?\n\n38\n00:01:51.140 --> 00:01:54.610\nIf I can avoid writing Transact-SQL\non a given day, I do, right?\n\n39\n00:01:54.610 --> 00:01:56.890\nI don't wanna do that if I don't have to.\n\n40\n00:01:56.890 --> 00:01:59.600\nUnfortunately, there's\nreally only a limited set of\n\n41\n00:01:59.600 --> 00:02:05.110\ntools available inside of Azure portal\nthat lets us work with indexes.\n\n42\n00:02:05.110 --> 00:02:07.940\nSo let me walk you through\nsome of those tools right now.\n\n43\n00:02:07.940 --> 00:02:12.210\nThe first one that I want to\ntalk about is the index advisor.\n\n44\n00:02:12.210 --> 00:02:16.990\nWhen we browse into Azure SQL,\nif I go down here to my SQL databases and\n\n45\n00:02:16.990 --> 00:02:19.690\nI pick a database,\nI'll pick my Sample DB2.\n\n46\n00:02:20.920 --> 00:02:24.239\nSample DB2 is the database I was using\nin the first part of this episode, so\n\n47\n00:02:24.239 --> 00:02:25.806\nit has that employees table on it.\n\n48\n00:02:25.806 --> 00:02:29.390\nAnd you guys saw I was querying against\nthat table and getting results.\n\n49\n00:02:29.390 --> 00:02:33.300\nI created some index's myself\nall right here on this database.\n\n50\n00:02:33.300 --> 00:02:37.680\nWell when I get into the database,\nif I scroll down, right?\n\n51\n00:02:37.680 --> 00:02:41.590\nSo, down here in this, kind of bottom\nsection, you've got some performance\n\n52\n00:02:41.590 --> 00:02:46.800\ninformation, and beneath that,\nyou'll see the index advisor, right there.\n\n53\n00:02:46.800 --> 00:02:49.520\nAnd my index advisor is,\n\n54\n00:02:49.520 --> 00:02:53.750\nwell telling me I got zero new index\nrecommendations and it's creating zero,\n\n55\n00:02:53.750 --> 00:02:57.840\nit's completed zero, it's not really\ndoing much of anything, right.\n\n56\n00:02:57.840 --> 00:03:00.850\nWell if you click on that, that'll\ntake you into the actual advisor, and\n\n57\n00:03:00.850 --> 00:03:02.340\nit's this guy right here.\n\n58\n00:03:02.340 --> 00:03:07.350\nAnd what's happening is it's actually\nkeeping an eye on your server and\n\n59\n00:03:07.350 --> 00:03:10.640\ndetermining whether or not there's some\nindexes that could help you, right?\n\n60\n00:03:10.640 --> 00:03:13.180\nIt's actually in Microsoft's\nbest interests that you have\n\n61\n00:03:13.180 --> 00:03:15.840\nindexes that tune things and\nrun nice and smoothly\n\n62\n00:03:15.840 --> 00:03:19.450\ncuz it helps them get more money's\nworth out of their hardware, right?\n\n63\n00:03:19.450 --> 00:03:21.680\nThey can add more customers in Azure SQL.\n\n64\n00:03:21.680 --> 00:03:24.460\nBut it helps you too because\nyour queries run faster.\n\n65\n00:03:24.460 --> 00:03:26.200\nSo they're actively monitoring that.\n\n66\n00:03:26.200 --> 00:03:28.420\nAnd see how it says here,\nwe analyzed your database and\n\n67\n00:03:28.420 --> 00:03:30.520\nfound that your database\nwas created recently.\n\n68\n00:03:30.520 --> 00:03:32.720\nAt this time,\nwe don't have any recommendations.\n\n69\n00:03:32.720 --> 00:03:35.980\nYour database has to run for\nat least a few days, right?\n\n70\n00:03:35.980 --> 00:03:39.570\nPreferably a few weeks and\nhave actual production data running\n\n71\n00:03:39.570 --> 00:03:41.910\nthrough it before Microsoft\ncan actually build a plan and\n\n72\n00:03:41.910 --> 00:03:44.710\nsay here's some indexes\nthat would help you.\n\n73\n00:03:44.710 --> 00:03:48.930\nAnd the reason it takes that much time is\nMicrosoft knows that you've got peaks and\n\n74\n00:03:48.930 --> 00:03:50.520\nvalleys in Access.\n\n75\n00:03:50.520 --> 00:03:53.600\nSo you might have peak\ntime from 8 AM to 5 PM and\n\n76\n00:03:53.600 --> 00:03:56.350\nthen it might be very quiet\nthe rest of the time.\n\n77\n00:03:56.350 --> 00:03:59.050\nAnd so they've got to watch and determine\nwhen those intervals are to figure out\n\n78\n00:03:59.050 --> 00:04:01.900\nwhich indexes are really\ngonna be the most beneficial.\n\n79\n00:04:01.900 --> 00:04:05.510\nIf there were recommendations,\nthey'd show up right here.\n\n80\n00:04:05.510 --> 00:04:09.540\nAnd as a recommended action which would\nnormally be create a clustered index,\n\n81\n00:04:09.540 --> 00:04:12.190\ncreate an unclustered index,\ncreate a covering index.\n\n82\n00:04:12.190 --> 00:04:16.220\nAnd it'll specify what that is, the object\nand the columns that it's gonna be on.\n\n83\n00:04:16.220 --> 00:04:19.620\nAnd the impact,\nwhat level of improvement can we expect?\n\n84\n00:04:19.620 --> 00:04:22.610\nThere might be four different\nrecommendations and I might pick the one\n\n85\n00:04:22.610 --> 00:04:25.590\nthat gives me the biggest impact,\nthat's gonna be the best one.\n\n86\n00:04:25.590 --> 00:04:29.220\nCuz there may be more than one\nrecommendation for the same query.\n\n87\n00:04:29.220 --> 00:04:31.640\nAnd the ones that I discard,\nit saves those.\n\n88\n00:04:31.640 --> 00:04:35.150\nSo if I don't get the benefits I thought\nI was gonna get, I can always undo it.\n\n89\n00:04:35.150 --> 00:04:37.900\nI can drop that index,\ncome back to my discarded ones, and\n\n90\n00:04:37.900 --> 00:04:39.480\ngo with the next best option, right?\n\n91\n00:04:39.480 --> 00:04:41.810\nIt's pretty easy to bring those back in.\n\n92\n00:04:41.810 --> 00:04:44.980\nAnd then down here, if it's in\nthe process of creating an index,\n\n93\n00:04:44.980 --> 00:04:46.680\nyou'll see it down here in the list.\n\n94\n00:04:46.680 --> 00:04:48.330\nAnd then it'll show as\ncompleted if it can.\n\n95\n00:04:48.330 --> 00:04:51.100\nIf there's any other actions,\nyou might see them pop up here.\n\n96\n00:04:51.100 --> 00:04:54.980\nThings like index fragmentation which\nwe'll talk about a little later.\n\n97\n00:04:54.980 --> 00:04:58.370\nSo if you know absolutely\nnothing about queries, and\n\n98\n00:04:58.370 --> 00:05:02.690\nyou know absolutely nothing about creating\nindexes, you can just come right here.\n\n99\n00:05:02.690 --> 00:05:06.320\nIf you've got a Azure SQL database that's\nalready been deployed for a few weeks.\n\n100\n00:05:06.320 --> 00:05:07.010\nAnd people are saying, oh,\n\n101\n00:05:07.010 --> 00:05:10.630\nthings are getting a little slow, just\ncheck out the Index Tuning Advisor, right?\n\n102\n00:05:10.630 --> 00:05:12.240\nYou come in here to the Index Advisor, and\n\n103\n00:05:12.240 --> 00:05:14.280\nit'll show whether there's\nones that you need.\n\n104\n00:05:14.280 --> 00:05:17.700\nAnd if you want them you just accept\nthe recommendation, it creates them and\n\n105\n00:05:17.700 --> 00:05:20.260\nnow you look like the hero,\nlike you're some kind of crazy SQL expert.\n\n106\n00:05:20.260 --> 00:05:23.590\nWhen in reality you just knew\nhow to click okay right so,\n\n107\n00:05:23.590 --> 00:05:26.890\nthat's where Azure really starts\nto make our life easy right so\n\n108\n00:05:26.890 --> 00:05:29.050\nthat's one of the great tools\nthat's right there in that portal.\n\n109\n00:05:29.050 --> 00:05:31.510\n>> Now how accurate usually is that first,\n\n110\n00:05:31.510 --> 00:05:35.060\nand says oh this is the one I think is\nbest and you've got a few others and\n\n111\n00:05:35.060 --> 00:05:39.950\nyou can delete or discard them, how often\nis that first one the most accurate?\n\n112\n00:05:39.950 --> 00:05:42.310\n>> It's usually pretty accurate.\n\n113\n00:05:42.310 --> 00:05:45.960\nWhat happens is that first recommendation\nis normally focused on that\n\n114\n00:05:45.960 --> 00:05:48.280\nindividual query by itself and\n\n115\n00:05:48.280 --> 00:05:51.890\nit's not necessarily considering all the\nconcurrent queries that happened, right?\n\n116\n00:05:51.890 --> 00:05:54.360\nAnd if it's watched your server\nlong enough it'll know that but\n\n117\n00:05:54.360 --> 00:05:57.670\nif it hasn't watched your server very long\nwhat you might find is the impact of that\n\n118\n00:05:57.670 --> 00:06:00.690\nfirst index might affect\nthe performance of other queries and\n\n119\n00:06:00.690 --> 00:06:01.870\nyou end up wanting to back off of it.\n\n120\n00:06:01.870 --> 00:06:02.420\nRight?\nSo\n\n121\n00:06:02.420 --> 00:06:05.060\nI think I gave an example\nin the last episode of how\n\n122\n00:06:05.060 --> 00:06:08.580\nyou wouldn't wanna create an index to\nsupport a query that runs once a month.\n\n123\n00:06:08.580 --> 00:06:09.240\nRight?\n\n124\n00:06:09.240 --> 00:06:11.550\nBecause that query runs its one time and\n\n125\n00:06:11.550 --> 00:06:14.060\nthe whole rest of the month\nto maintain its indexes.\n\n126\n00:06:14.060 --> 00:06:17.770\nSo the whole rest of the time, that's\na little extra CPU that's being taken away\n\n127\n00:06:17.770 --> 00:06:20.420\nfrom the rest of your queries and\nthat's the stuff we have to balance.\n\n128\n00:06:20.420 --> 00:06:23.310\nSo anytime you implement an index,\ndon't just trust it.\n\n129\n00:06:23.310 --> 00:06:26.000\nGo in and monitor, are you actually\ngetting a gain out of that?\n\n130\n00:06:26.000 --> 00:06:28.670\nI showed you in the last\nepisode how to track\n\n131\n00:06:28.670 --> 00:06:30.750\nwhether we're getting\nreduced time with the query.\n\n132\n00:06:30.750 --> 00:06:32.750\nAre we actually getting\nquery improvement out of it?\n\n133\n00:06:32.750 --> 00:06:35.200\nBut I didn't show you how to\nmonitor like CPU and all that,\n\n134\n00:06:35.200 --> 00:06:37.290\nbecause with Azure you just\nhave your monitoring panels.\n\n135\n00:06:37.290 --> 00:06:41.020\nWe'll see those in the monitoring episodes\nif you haven't watched those already.\n\n136\n00:06:41.020 --> 00:06:44.540\nBut that's a great way to go in there,\neasy to undo the changes if they don't\n\n137\n00:06:44.540 --> 00:06:47.050\nwork out the way you want, but\nit is usually pretty accurate.\n\n138\n00:06:47.050 --> 00:06:51.160\nYou can usually accept what's in there and\nget a benefit out of it.\n\n139\n00:06:51.160 --> 00:06:52.250\nAll right now that's one tool.\n\n140\n00:06:52.250 --> 00:06:54.412\nThere is another tool which\nI'm going to show you.\n\n141\n00:06:54.412 --> 00:06:58.121\nIt's kind of in a pre-release\nbeta preview thing right now, but\n\n142\n00:06:58.121 --> 00:07:01.770\nby the time you watch this episode\nit will probably be released.\n\n143\n00:07:01.770 --> 00:07:03.050\nIt is actually a great one.\n\n144\n00:07:03.050 --> 00:07:06.170\nAnd it's kind of an add on to\nthe index recommendations,\n\n145\n00:07:06.170 --> 00:07:07.770\nthe index revised that we're seeing here.\n\n146\n00:07:07.770 --> 00:07:12.680\nAnd it's just,\nit's called the query performance insight,\n\n147\n00:07:12.680 --> 00:07:16.140\nand what it is,\nis where the SQL server is doing\n\n148\n00:07:16.140 --> 00:07:20.980\na better job of monitoring all the queries\ntogether and how they interact, right?\n\n149\n00:07:20.980 --> 00:07:24.410\nSo, when I go back to my database.\n\n150\n00:07:24.410 --> 00:07:26.620\nI wanna go back to Sample DB2.\n\n151\n00:07:26.620 --> 00:07:30.680\nRight next to the Index Advisor is this\nguy right here, Query Performance Insight.\n\n152\n00:07:30.680 --> 00:07:32.230\nAnd see how it says preview?\n\n153\n00:07:32.230 --> 00:07:34.890\nBy the time you guys watch this,\nit probably won't be preview anymore.\n\n154\n00:07:34.890 --> 00:07:38.100\nThat one,\nit's actually not enabled by default.\n\n155\n00:07:38.100 --> 00:07:42.480\nThe Index Advisor,\nit's monitoring queries as they run.\n\n156\n00:07:42.480 --> 00:07:46.940\nBut Query Performance Insight,\nwhat it expects is to have a store\n\n157\n00:07:46.940 --> 00:07:50.120\nbuilt up of all of your queries so\nit can compare them together.\n\n158\n00:07:50.120 --> 00:07:52.507\nThe Index Advisor's just\nlooking at individual queries,\n\n159\n00:07:52.507 --> 00:07:54.088\nthis one looks at all of them together.\n\n160\n00:07:54.088 --> 00:07:56.073\nAnd so\nyou have to enable the Query Store, and\n\n161\n00:07:56.073 --> 00:07:57.962\nthe Query Store is not enabled by default.\n\n162\n00:07:57.962 --> 00:08:00.379\nIt's enabled on this database,\nlet me go to one where it isn't.\n\n163\n00:08:00.379 --> 00:08:02.713\nIf I flip over to sample DB1 here.\n\n164\n00:08:02.713 --> 00:08:04.504\nI didn't turn it on in this one.\n\n165\n00:08:04.504 --> 00:08:06.617\nSo on this one, when I scroll down, and\n\n166\n00:08:06.617 --> 00:08:11.310\nI find that Query Performance Insight\nright here, and I click on it.\n\n167\n00:08:11.310 --> 00:08:13.450\nWhen it takes me to\nQuery Performance Insight,\n\n168\n00:08:13.450 --> 00:08:18.190\nI get this nice big banner here telling\nme your query performance is currently\n\n169\n00:08:18.190 --> 00:08:22.190\nnot being monitored because Query Store\nis not running on this database.\n\n170\n00:08:22.190 --> 00:08:24.890\nOkay, I need to enable the Query Store,\nand\n\n171\n00:08:24.890 --> 00:08:28.340\nnow every time we run a query,\nit saves a copy of it.\n\n172\n00:08:28.340 --> 00:08:31.660\nIt's gotta save a copy so it can\ncompare all the queries together and\n\n173\n00:08:31.660 --> 00:08:35.920\nsay, if I create an index for query one,\nhow does that affect query five?\n\n174\n00:08:37.000 --> 00:08:41.050\nIf query five can run faster, maybe that\nleads me to running query six right away,\n\n175\n00:08:41.050 --> 00:08:43.310\nright afterwards, and\nthat overlaps with query one.\n\n176\n00:08:43.310 --> 00:08:47.098\nAnd you get these really complex\nrelationships, it can track those.\n\n177\n00:08:47.098 --> 00:08:51.410\nThe index adviser can't do that by itself,\nbut Query Performance Insight can.\n\n178\n00:08:52.530 --> 00:08:53.726\nTo turn the Query Store on,\n\n179\n00:08:53.726 --> 00:08:57.700\nyou just click on that orange banner and\nthen you click enable Query Stores.\n\n180\n00:08:57.700 --> 00:08:58.850\nOne of the really difficult ones.\n\n181\n00:08:58.850 --> 00:09:01.520\nIt's pretty simple to get it turned on.\n\n182\n00:09:01.520 --> 00:09:04.470\nThe resets turned off by default is that\n\n183\n00:09:04.470 --> 00:09:07.320\nit's going to be storing your\nqueries in the database.\n\n184\n00:09:07.320 --> 00:09:08.540\nSome people don't like that.\n\n185\n00:09:08.540 --> 00:09:10.120\nSome people don't want\ntheir queries to be stored.\n\n186\n00:09:10.120 --> 00:09:14.460\nNow your data is safe if your database is\nencrypted, then it's not a big deal, but\n\n187\n00:09:14.460 --> 00:09:17.250\nif you've got queries that contain\nuser credentials then you need to be\n\n188\n00:09:17.250 --> 00:09:18.170\ncareful with that.\n\n189\n00:09:18.170 --> 00:09:19.920\nThe other thing is it takes up storage,\nand\n\n190\n00:09:19.920 --> 00:09:23.360\nMicrosoft is very transparent about\nthe storage that they offer you.\n\n191\n00:09:23.360 --> 00:09:26.510\nWhen you sign up for a database,\nif you do like an S0,\n\n192\n00:09:26.510 --> 00:09:29.036\nyour S0 can have up to 250 gigs of data.\n\n193\n00:09:29.036 --> 00:09:32.015\nWell, when you turn on the Query Store,\nthat starts counting against that data,\n\n194\n00:09:32.015 --> 00:09:34.229\nand they don't want you to think hey,\nI just got ripped off.\n\n195\n00:09:34.229 --> 00:09:37.374\nI don't have 250 gigs,\nI've only got 249 gigs.\n\n196\n00:09:37.374 --> 00:09:38.680\nWell, that's cuz you turned\non the Query Store and\n\n197\n00:09:38.680 --> 00:09:40.470\nit's using that to store your queries.\n\n198\n00:09:40.470 --> 00:09:43.720\nSo that's another reason why it's\nturned off but to enable it,\n\n199\n00:09:43.720 --> 00:09:46.550\nyou just click enable, and it's going\nto start doing that in the background.\n\n200\n00:09:46.550 --> 00:09:48.180\nSee how it says Query Store enabled.\n\n201\n00:09:48.180 --> 00:09:48.860\nNow, when it runs,\n\n202\n00:09:48.860 --> 00:09:52.025\nyou're gonna get no data available\nuntil you start running some queries.\n\n203\n00:09:52.025 --> 00:09:54.810\nStart performing some\nactions on your system and\n\n204\n00:09:54.810 --> 00:09:58.770\nas you do that, it'll start to recognize\nthat and start to reflect some data.\n\n205\n00:09:58.770 --> 00:10:00.110\nLet me jump over to my other database.\n\n206\n00:10:00.110 --> 00:10:03.939\nNow, I was telling Daniel\na story before the show.\n\n207\n00:10:03.939 --> 00:10:07.682\nWhen I do a cloud show like this, it's\nalways tough cuz I can't really pre-stage\n\n208\n00:10:07.682 --> 00:10:10.189\nthe environment without\nhaving paying a ton of money.\n\n209\n00:10:10.189 --> 00:10:14.853\nSo last night I actually wrote a script\nand I started performing it as a huge\n\n210\n00:10:14.853 --> 00:10:18.554\nseries of queries against my\nother database sample db2.\n\n211\n00:10:18.554 --> 00:10:22.806\nAnd what I was hoping to do is generate\nenough traffic to have it come up with\n\n212\n00:10:22.806 --> 00:10:27.198\nsome index recommendations, and\nunfortunately in all that time running it\n\n213\n00:10:27.198 --> 00:10:31.330\nas hard as I could, I really wasn't\nable to saturate my instance.\n\n214\n00:10:31.330 --> 00:10:34.810\nYou can see when I go into that\nQuery Performance Insight,\n\n215\n00:10:34.810 --> 00:10:36.650\nhere's a little tiny hump.\n\n216\n00:10:36.650 --> 00:10:40.440\nThat's what I was able to generate, and I\nwas running hundreds of queries per second\n\n217\n00:10:40.440 --> 00:10:45.440\nagainst this system, and I just made\nthat little, little jump right there.\n\n218\n00:10:45.440 --> 00:10:49.490\nAnd the other part is,\nonce I stopped, well it says,\n\n219\n00:10:49.490 --> 00:10:50.870\nyou're not running those queries anymore.\n\n220\n00:10:50.870 --> 00:10:54.130\nYou don't need those [LAUGH] indexes\nanymore, and so it's really smart\n\n221\n00:10:54.130 --> 00:10:58.190\nabout that, seeing what the system\nis doing but it watched all that.\n\n222\n00:10:58.190 --> 00:11:02.150\nAnd it paid attention to the queries\nthat were happening on the system, and\n\n223\n00:11:02.150 --> 00:11:04.390\nit's cataloging them.\n\n224\n00:11:04.390 --> 00:11:09.160\nAnd so you can see these query IDs\nright here, Query ID 12 and 31 and 20,\n\n225\n00:11:09.160 --> 00:11:11.800\nit's assigning an arbitrary\nnumber to each one.\n\n226\n00:11:11.800 --> 00:11:13.960\nThe CPU cycle they contained.\n\n227\n00:11:13.960 --> 00:11:18.720\nThe duration it took each one to run,\nand the execution counts.\n\n228\n00:11:18.720 --> 00:11:21.770\nSo some of my queries were really big,\nsome were really small, and\n\n229\n00:11:21.770 --> 00:11:26.010\nit's kinda go those laid out here, and\nso we get an idea of how that works out.\n\n230\n00:11:26.010 --> 00:11:29.520\nNow understand that things like execution\ncount don't necessarily reflect\n\n231\n00:11:29.520 --> 00:11:30.670\nthe query as a whole.\n\n232\n00:11:30.670 --> 00:11:35.420\nLike this guy has a 20 for\nexecution count and a 0.06 duration.\n\n233\n00:11:35.420 --> 00:11:36.509\nIt's pretty fast.\n\n234\n00:11:36.509 --> 00:11:39.586\nThis one only has nine execution count but\na 0.25.\n\n235\n00:11:39.586 --> 00:11:41.410\nIt was a quarter of a second.\n\n236\n00:11:41.410 --> 00:11:44.680\nThat was what four times\nthe length of this other one.\n\n237\n00:11:44.680 --> 00:11:48.140\nSo one of these metrics by\nitself is not really enough.\n\n238\n00:11:48.140 --> 00:11:51.770\nYou need them all, and that's what the\nQuery Store does, it catalogs information.\n\n239\n00:11:51.770 --> 00:11:54.518\nThese are inquiries I ran last night and\nstill got them saved.\n\n240\n00:11:54.518 --> 00:11:57.536\nThat's why we needed to\nenable at Query Store.\n\n241\n00:11:57.536 --> 00:12:00.257\nNow once it starts collecting that data,\n\n242\n00:12:00.257 --> 00:12:03.700\nnow I can get an idea\nof when's my peak time.\n\n243\n00:12:03.700 --> 00:12:05.000\nWhen is my server busy?\n\n244\n00:12:05.000 --> 00:12:06.531\nWhen is my server not busy?\n\n245\n00:12:06.531 --> 00:12:08.438\nWhat query is it?\n\n246\n00:12:08.438 --> 00:12:12.239\nIt's saturating the database, so\nif I click on that individual query,\n\n247\n00:12:12.239 --> 00:12:14.110\nhere's the query that I ran.\n\n248\n00:12:14.110 --> 00:12:17.950\nSelect first name, last name from\nemployees where city equals Orlando.\n\n249\n00:12:17.950 --> 00:12:21.330\nI can see the saturation that created, and\n\n250\n00:12:21.330 --> 00:12:25.200\nthere's that little hump right\nthere that was generated, and\n\n251\n00:12:25.200 --> 00:12:29.790\nthe overall DTUs that it consumed, right,\noverall, we can start to spot that.\n\n252\n00:12:29.790 --> 00:12:32.620\nSo I get an idea of what that query was.\n\n253\n00:12:32.620 --> 00:12:34.050\nI know exactly what it was.\n\n254\n00:12:34.050 --> 00:12:38.423\nWhere some of these other ones\nwhere I might have been doing,\n\n255\n00:12:38.423 --> 00:12:40.749\nwhat the heck was I doing there?\n\n256\n00:12:40.749 --> 00:12:45.825\nLet's see, it looks like I was querying,\noh I was querying database statistics.\n\n257\n00:12:45.825 --> 00:12:48.260\nSo I was just pulling information\nabout the database back.\n\n258\n00:12:48.260 --> 00:12:53.030\nSo it's just generating a longer set\nof data, that was a longer query.\n\n259\n00:12:53.030 --> 00:12:55.860\nStill ran pretty quick and so\nyou can start to break it down.\n\n260\n00:12:55.860 --> 00:12:59.488\nNow notice how query performance\ninsight lets me see the queries that\n\n261\n00:12:59.488 --> 00:13:01.590\nare the most taxing on the system.\n\n262\n00:13:01.590 --> 00:13:06.440\nI can identify that there's one query\nI might wanna build an index for\n\n263\n00:13:06.440 --> 00:13:08.030\nversus another.\n\n264\n00:13:08.030 --> 00:13:10.450\nIf I'm trying to optimize performance so\nI look down this list and say,\n\n265\n00:13:10.450 --> 00:13:13.540\nyou know this guy down here at the bottom,\nthat was the longest running one.\n\n266\n00:13:14.590 --> 00:13:16.488\nIs there a way I could have improved it?\n\n267\n00:13:16.488 --> 00:13:20.458\nAnd if I click on it,\nthis is a system-created one.\n\n268\n00:13:20.458 --> 00:13:21.639\nThis is not the one that I ran.\n\n269\n00:13:22.650 --> 00:13:24.070\nLet's see what is it doing?\n\n270\n00:13:24.070 --> 00:13:25.050\nGood golly.\n\n271\n00:13:25.050 --> 00:13:26.940\nSo some of these are a little\nbit challenging to figure out\n\n272\n00:13:26.940 --> 00:13:27.450\nwhat they're doing.\n\n273\n00:13:27.450 --> 00:13:29.400\nThis is some kind of database maintenance.\n\n274\n00:13:29.400 --> 00:13:32.630\nActually, I don't see\nit as doing anything.\n\n275\n00:13:32.630 --> 00:13:34.610\nSo it must just be collecting statistics.\n\n276\n00:13:34.610 --> 00:13:37.980\nSo, it's just querying some data and\nbuilding up statistics.\n\n277\n00:13:37.980 --> 00:13:39.730\nSo is there a way I could\nhave optimized this?\n\n278\n00:13:39.730 --> 00:13:42.630\nWell, that query is so complex.\n\n279\n00:13:42.630 --> 00:13:43.950\nIt would take me a little while.\n\n280\n00:13:43.950 --> 00:13:47.510\nThis is where I usually break out a pencil\nand paper, map out the query, figure out\n\n281\n00:13:47.510 --> 00:13:53.282\nwhat resources are affected, and go from\nthere, or you can click on Index Adviser.\n\n282\n00:13:53.282 --> 00:13:56.810\nAnd if there's actually\na way to improve this query\n\n283\n00:13:56.810 --> 00:13:59.411\nwhen you go to the Index Adviser,\nit will tell you.\n\n284\n00:13:59.411 --> 00:14:03.184\nAnd I can see here it says there\nmight be ways to improve it, but\n\n285\n00:14:03.184 --> 00:14:06.560\nthis thing's run so infrequently that\nthere is really no need to do it.\n\n286\n00:14:06.560 --> 00:14:09.340\nWe're idling right now so\nif does table scans or whatever.\n\n287\n00:14:09.340 --> 00:14:12.080\nFine, let it do it and there you go.\n\n288\n00:14:12.080 --> 00:14:16.550\nSo Query Performance Insight,\nlet's us find the queries that\n\n289\n00:14:16.550 --> 00:14:19.940\nare really attacks in our system,\nand the Index Adviser,\n\n290\n00:14:19.940 --> 00:14:22.100\nlet's us figure out what indexes\nwe can create to support that.\n\n291\n00:14:22.100 --> 00:14:25.560\nSo those two technologies built right\ninto the Azure portal and really useful.\n\n292\n00:14:25.560 --> 00:14:28.300\n>> That's a really nice feature that they\ngive you to try to help you get these\n\n293\n00:14:28.300 --> 00:14:30.880\nthings working as efficiently as possible.\n\n294\n00:14:30.880 --> 00:14:34.340\nNow Don, this really seems like\nit's a fire and forget system.\n\n295\n00:14:34.340 --> 00:14:37.950\nYou turn it on, you let it do it's thing,\nand then you're off to the races.\n\n296\n00:14:37.950 --> 00:14:40.060\nIs that how it is?\n\n297\n00:14:40.060 --> 00:14:41.900\n>> Well, a lot of people do that.\n\n298\n00:14:41.900 --> 00:14:44.550\nA lot of people say, I've got this\nquery that's taxing the system so\n\n299\n00:14:44.550 --> 00:14:45.620\nI create an index for it.\n\n300\n00:14:45.620 --> 00:14:48.120\nNow it's running great,\nthey set it and they forget it.\n\n301\n00:14:48.120 --> 00:14:49.580\nThey never come back to it.\n\n302\n00:14:49.580 --> 00:14:53.790\nWell, the problem is, indexes,\nthey're like a houseplant.\n\n303\n00:14:53.790 --> 00:14:56.060\nYou gotta feed 'em, you gotta water them.\n\n304\n00:14:56.060 --> 00:15:01.030\nEvery time you edit, the underline data\nof a table, every time you add a new row,\n\n305\n00:15:01.030 --> 00:15:06.100\nevery time you update an existing row, an\nindex has to be updated to reflect that.\n\n306\n00:15:06.100 --> 00:15:09.120\nIf I delete a row, that record\nneeds to be taken out of the index.\n\n307\n00:15:09.120 --> 00:15:10.790\nSo indexes are updating all the time.\n\n308\n00:15:10.790 --> 00:15:12.950\nThey're adding stuff and\ndeleting stuff, and\n\n309\n00:15:12.950 --> 00:15:16.568\nthey're storing things in pages, and\nthose pages are of a different size, and\n\n310\n00:15:16.568 --> 00:15:18.680\nwhen a page fills up it\nhas to create a new page.\n\n311\n00:15:18.680 --> 00:15:20.232\nWell, on the hard drive,\n\n312\n00:15:20.232 --> 00:15:23.912\nthe space right next to the first\npage might not be available.\n\n313\n00:15:23.912 --> 00:15:26.074\nAnd so it's got to place that\npage somewhere else, and\n\n314\n00:15:26.074 --> 00:15:29.415\nas certain records get delete, there might\nnot be enough room to write a new record.\n\n315\n00:15:29.415 --> 00:15:33.806\nThe new record has to go somewhere\nelse too, and what you end up with,\n\n316\n00:15:33.806 --> 00:15:35.493\nis index fragmentation.\n\n317\n00:15:35.493 --> 00:15:40.377\nNo matter how well-oiled your database is\nif you're adding and deleting records,\n\n318\n00:15:40.377 --> 00:15:43.761\nover time your database indexes\nwill become fragmented.\n\n319\n00:15:43.761 --> 00:15:46.120\nI shouldn't say database,\nit's really table index.\n\n320\n00:15:46.120 --> 00:15:48.050\nYour table index will become fragmented.\n\n321\n00:15:48.050 --> 00:15:50.129\nNow, fragmentation is\nnot always a bad thing.\n\n322\n00:15:50.129 --> 00:15:53.062\nI know, if you're a system admin,\nall these years people are like,\n\n323\n00:15:53.062 --> 00:15:54.338\ndefragment your hard drive!\n\n324\n00:15:54.338 --> 00:15:58.754\nFragmentation's bad, and\nthat was true under magnetic media.\n\n325\n00:15:58.754 --> 00:16:01.066\nUnder SSD, your seek time is so small and\n\n326\n00:16:01.066 --> 00:16:05.300\nyou're not having to move ahead to\nread different places on a hard drive.\n\n327\n00:16:05.300 --> 00:16:07.940\nYou don't have a mechanical\narm that's moving around.\n\n328\n00:16:07.940 --> 00:16:10.900\nYou just have electronics that says go\nto this address, go to that address.\n\n329\n00:16:10.900 --> 00:16:14.610\nSo fragmentation on SSD\nis not really a big deal.\n\n330\n00:16:14.610 --> 00:16:19.450\nBut, indexes, as they begin to fragment,\nstart to consume a lot more space.\n\n331\n00:16:19.450 --> 00:16:22.730\nIn Azure, you have a limit to\nthe amount of space you got.\n\n332\n00:16:22.730 --> 00:16:27.060\nSo, if you've only got 250 gigs available,\nmaybe you did an S0 standard instance for\n\n333\n00:16:27.060 --> 00:16:29.130\nyour database, you have 250 gigs.\n\n334\n00:16:29.130 --> 00:16:32.420\nOr, maybe you did a basic,\nyou only have two gigs of storage.\n\n335\n00:16:32.420 --> 00:16:36.540\nAnd your index is taking 400 megs\nof that storage, that's a big deal.\n\n336\n00:16:36.540 --> 00:16:40.880\nSo we might need to defragment the indexes\nto get them to take less storage.\n\n337\n00:16:40.880 --> 00:16:43.790\nThat's the most common in Azure,\nbut on magnetic media,\n\n338\n00:16:43.790 --> 00:16:46.020\nyou need to defragment them\nto improve performance also.\n\n339\n00:16:47.040 --> 00:16:51.590\nSo as the indexes run,\nover time you may need to defragment them.\n\n340\n00:16:51.590 --> 00:16:55.170\nIf you don't, in Azure they'll run just\nfine because they're running on SSE.\n\n341\n00:16:55.170 --> 00:16:58.450\nYou could set it and forget it, but\nit's going to start eating storage.\n\n342\n00:16:58.450 --> 00:17:01.629\nThe more data you delete then the more\nstorage it's going to consume.\n\n343\n00:17:01.629 --> 00:17:03.430\nIf you never delete anything,\nif you just add,\n\n344\n00:17:03.430 --> 00:17:04.969\nthen it's really not that big of a deal.\n\n345\n00:17:04.969 --> 00:17:06.460\nYou can ignore it.\n\n346\n00:17:06.460 --> 00:17:08.520\nBut for most of us we need to go in and\ndefragment.\n\n347\n00:17:08.520 --> 00:17:11.430\nRight now,\nMicrosoft has some simple rules.\n\n348\n00:17:11.430 --> 00:17:16.392\nIf the fragmentation is between 5 and\n30, well if it's between 0 and 5%,\n\n349\n00:17:16.392 --> 00:17:19.590\ndon't do anything,\nit's just 5%, who cares?\n\n350\n00:17:19.590 --> 00:17:21.781\nLeave it.\nIf it's between 5 and 30%,\n\n351\n00:17:21.781 --> 00:17:24.340\nyou can do what's called a reorganize.\n\n352\n00:17:24.340 --> 00:17:26.950\nReorganize is like defragmenting\nthe hard drive on your computer.\n\n353\n00:17:26.950 --> 00:17:31.210\nIt starts moving the data around to put it\nin a nice neat order where everything's in\n\n354\n00:17:31.210 --> 00:17:34.090\norder stored right there on the drive,\nready for rapid access.\n\n355\n00:17:34.090 --> 00:17:35.990\nThat's a reorganize.\n\n356\n00:17:35.990 --> 00:17:38.347\nAnd it's up to 30% fragmentation for that.\n\n357\n00:17:38.347 --> 00:17:43.147\nAnything above 30% fragmentation,\nMicrosoft recommends you do a rebuild.\n\n358\n00:17:43.147 --> 00:17:46.391\nAnd what a rebuild does is it\njust throws the index away and\n\n359\n00:17:46.391 --> 00:17:48.260\nit builds an all new one.\n\n360\n00:17:48.260 --> 00:17:52.840\nIf your fragmentation is over 30%, it's\nactually faster to just build an all new\n\n361\n00:17:52.840 --> 00:17:57.250\nindex than it is to go and try and\nreorganize the one you've got.\n\n362\n00:17:57.250 --> 00:18:00.570\nAnd so that's just a cost to\nbenefit ratio type of thing.\n\n363\n00:18:00.570 --> 00:18:03.530\nIf it's over 30% fragmentation,\njust rebuild it.\n\n364\n00:18:03.530 --> 00:18:05.230\nAnd if we want to do that.\n\n365\n00:18:05.230 --> 00:18:07.540\nThere's not a great way to do\nthat through the Azure Portal.\n\n366\n00:18:07.540 --> 00:18:10.870\nYou really need to do it from\nthe SQL Management Studio.\n\n367\n00:18:10.870 --> 00:18:12.360\nAnd even in the SQL Management Studio,\n\n368\n00:18:12.360 --> 00:18:15.290\nsome of the options that\nwe're used to are gone.\n\n369\n00:18:15.290 --> 00:18:18.250\nSome of the options that you\nmight have used previously,\n\n370\n00:18:18.250 --> 00:18:21.520\nif you've worked with SQL, are no longer\navailable the way they used to be.\n\n371\n00:18:21.520 --> 00:18:22.600\nLet me show you what I mean.\n\n372\n00:18:22.600 --> 00:18:26.120\nI'm in my SQL Management Studio, and\nit used to be that if I wanted to rebuild\n\n373\n00:18:26.120 --> 00:18:32.140\nan index which I think I've got an index\non this database, let me refresh this.\n\n374\n00:18:32.140 --> 00:18:34.474\nI created some indexes\nin the last episode and\n\n375\n00:18:34.474 --> 00:18:37.369\nI haven't refreshed my view\nover here on the left side.\n\n376\n00:18:37.369 --> 00:18:39.409\nSo, here we go.\n\n377\n00:18:39.409 --> 00:18:43.260\nAll right, so here are the two indexes\nthat I created in the last episode.\n\n378\n00:18:43.260 --> 00:18:46.226\nAnd even though I haven't been\ndoing much with the database,\n\n379\n00:18:46.226 --> 00:18:49.090\nI'm sure that they've got\nsome degree of fragmentation.\n\n380\n00:18:49.090 --> 00:18:52.321\nAnd when you run a local and\nOn-Premise SQL server,\n\n381\n00:18:52.321 --> 00:18:56.300\nyou can just right-click on\nan index in the management studio.\n\n382\n00:18:56.300 --> 00:18:57.891\nAnd in the menu that comes up,\n\n383\n00:18:57.891 --> 00:19:00.566\nyou actually have an action\nitem you can choose and\n\n384\n00:19:00.566 --> 00:19:04.780\nin there you'll have rebuild index,\nreorganize index, I don't have that.\n\n385\n00:19:05.830 --> 00:19:08.760\nNow the reason I don't have it is\nbecause I'm using Azure SQL and\n\n386\n00:19:08.760 --> 00:19:09.940\nthat's not supported.\n\n387\n00:19:09.940 --> 00:19:11.430\nSo if you wanna rebuild or\n\n388\n00:19:11.430 --> 00:19:14.980\nreorganize them you actually have\nto do it through Transact-SQL.\n\n389\n00:19:14.980 --> 00:19:19.030\nThe reason it's not here is Microsoft is\nsaying look, most people don't need it.\n\n390\n00:19:19.030 --> 00:19:21.548\nIf you're not worried about storage,\nthen performance wise,\n\n391\n00:19:21.548 --> 00:19:24.770\nwe're storing all this on SSD,\nyou'll be fine, don't worry about it.\n\n392\n00:19:24.770 --> 00:19:28.040\nAnd so they moved the option away,\nand if you're one of those people who\n\n393\n00:19:28.040 --> 00:19:30.940\nabsolutely needs it then\nyou know how to do it.\n\n394\n00:19:30.940 --> 00:19:32.938\nYou know how to go in there\nwith Transact-SQL and do it.\n\n395\n00:19:32.938 --> 00:19:34.580\nAnd so, that's kind of what they've done.\n\n396\n00:19:34.580 --> 00:19:37.500\nSo if I want to go in there and\noptimize one of these queries,\n\n397\n00:19:37.500 --> 00:19:41.150\nand have that index be healthy,\nI'll need to reorganize.\n\n398\n00:19:41.150 --> 00:19:45.910\nI mentioned that it needs to\nbe over 5% fragmentation to\n\n399\n00:19:45.910 --> 00:19:50.220\neven worry about it, and\nif it's over 30%, I want to do a rebuild.\n\n400\n00:19:50.220 --> 00:19:53.450\nHow do I know what my fragmentation is,\nand\n\n401\n00:19:53.450 --> 00:19:55.630\nit's not really a great way to show it.\n\n402\n00:19:55.630 --> 00:20:00.080\nMicrosoft actually has two\ndifferent recommendations.\n\n403\n00:20:00.080 --> 00:20:04.140\nThis first one is from TechNet and\nI'll post this with the show notes so,\n\n404\n00:20:04.140 --> 00:20:06.530\ndon't feel like you gotta scramble and\nwrite these down.\n\n405\n00:20:06.530 --> 00:20:09.610\nBut this first query here\nis from Microsoft TechNet.\n\n406\n00:20:09.610 --> 00:20:13.980\nAnd basically, what they're doing is\nthey're saying let's connect to a table\n\n407\n00:20:13.980 --> 00:20:17.600\nand figure out all the indexes so\nit's querying a list of indexes.\n\n408\n00:20:17.600 --> 00:20:20.020\nAnd then it's querying the statistics, and\n\n409\n00:20:20.020 --> 00:20:23.060\nthen outputting that into a table where\nit's ordered by the fragmentation.\n\n410\n00:20:23.060 --> 00:20:25.080\nIt's kind of a complex query.\n\n411\n00:20:25.080 --> 00:20:28.420\nBut if you want to look\nat a specific table,\n\n412\n00:20:28.420 --> 00:20:31.200\nyou don't need to pull all the indexes for\nthe whole database,\n\n413\n00:20:31.200 --> 00:20:33.390\nyou can just pull the indexes for\nthat one table.\n\n414\n00:20:33.390 --> 00:20:37.560\nAnd so on MSDN, they have a slightly\nbetter example, it's a little smaller.\n\n415\n00:20:37.560 --> 00:20:40.140\nAnd so here we actually see a little\nbit better what it's doing.\n\n416\n00:20:40.140 --> 00:20:43.920\nIt's pulling the index ID, the name and\nthe average fragmentation in\n\n417\n00:20:43.920 --> 00:20:47.355\npercentage and it's pulling it\nfrom the physical statistics.\n\n418\n00:20:47.355 --> 00:20:52.645\nFrom my case, for example, DB1 for\nthe SalesLT.Product table.\n\n419\n00:20:52.645 --> 00:20:55.205\nSo just from that one table,\ngive me the data.\n\n420\n00:20:55.205 --> 00:20:56.935\nAnd that's why this query's so\nmuch smaller.\n\n421\n00:20:56.935 --> 00:20:59.854\nIt's not having to figure out all\nof the tables that are out there.\n\n422\n00:20:59.854 --> 00:21:05.154\nAnd when we run that query, which I've\ngot saved here in the background.\n\n423\n00:21:05.154 --> 00:21:08.314\nI figured you guys didn't want to watch\nme try and type this out on the show.\n\n424\n00:21:08.314 --> 00:21:10.684\nWhen you run that, it's going to query.\n\n425\n00:21:10.684 --> 00:21:12.964\nAnd it's going to return\nresults like this.\n\n426\n00:21:12.964 --> 00:21:17.767\nAnd looking at my list here,\nI can see that my product\n\n427\n00:21:17.767 --> 00:21:22.254\nID is 0.99% which is just 1% fragmented.\n\n428\n00:21:22.254 --> 00:21:23.574\n1%?\n\n429\n00:21:23.574 --> 00:21:24.650\nI can ignore that, right?\n\n430\n00:21:25.700 --> 00:21:28.570\nThen my product rowguid ID and\n\n431\n00:21:28.570 --> 00:21:34.730\nProduct ProductNumber 50% fragmentation,\na little on the high side.\n\n432\n00:21:34.730 --> 00:21:37.760\nAnd then I got 33% on product name so\n33% fragmentation.\n\n433\n00:21:37.760 --> 00:21:41.360\nAll three of these guys\nare pretty high on fragmentation.\n\n434\n00:21:41.360 --> 00:21:45.080\nNow if I don't care about storage this is\non a SSD, I'd probably just ignore it.\n\n435\n00:21:45.080 --> 00:21:49.670\nBut if I wanna minimize my storage, if I\nknow this particular index is really big,\n\n436\n00:21:49.670 --> 00:21:53.972\nand might be eating up a ton of space,\nthen I might want to go and fix that.\n\n437\n00:21:53.972 --> 00:21:57.403\nAt 33%, I'm right on that border,\nright on that 30% border,\n\n438\n00:21:57.403 --> 00:22:00.670\nwhere Microsoft says don't reorganize,\ndo a rebuild.\n\n439\n00:22:00.670 --> 00:22:03.750\nAnd if I wanted to do that,\nif I wanted to go ahead and rebuild it,\n\n440\n00:22:03.750 --> 00:22:08.615\nthen I would just need to punch in,\nthe command's actually pretty simple here.\n\n441\n00:22:08.615 --> 00:22:13.040\nOh, see, it has AKA product\nname is what that's called.\n\n442\n00:22:13.040 --> 00:22:19.070\nLet me fire up a new query here.\n\n443\n00:22:19.070 --> 00:22:23.844\nThe command to rebuild this is just, let\nme zoom in a little bit so you guys will\n\n444\n00:22:23.844 --> 00:22:28.479\nbe able to see this, it's ALTER INDEX,\nand then we give it the index name.\n\n445\n00:22:28.479 --> 00:22:32.663\nI need to alter an index and mine, shoot,\n\n446\n00:22:32.663 --> 00:22:37.225\nI've already forgotten what it was called.\n\n447\n00:22:37.225 --> 00:22:40.142\nWas it SalesLT.Product?\n\n448\n00:22:40.142 --> 00:22:44.270\nAll right, wait a minute, [LAUGH] I\nactually copied the name right here,\n\n449\n00:22:44.270 --> 00:22:46.300\non my own screen,\nif I would just pay attention.\n\n450\n00:22:46.300 --> 00:22:48.110\nSo ALTER INDEX AK_Product_Name,\n\n451\n00:22:48.110 --> 00:22:50.760\nI know Daniel's over here trying to not\nmake fun of me live here on the show.\n\n452\n00:22:50.760 --> 00:22:53.910\nAnd then I tell it ON the table, and\nit's the table that I don't know,\n\n453\n00:22:53.910 --> 00:22:57.121\nwhich I think is called SalesLT.Product.\n\n454\n00:22:57.121 --> 00:23:00.499\nAnd so I'm gonna alter that index, I just\ngave it the information where to find it.\n\n455\n00:23:00.499 --> 00:23:04.800\nHere's the table,\nhere's the index that I want to modify.\n\n456\n00:23:04.800 --> 00:23:09.660\nAnd then I just need to say REORGANIZE\nif I want to reorganize it.\n\n457\n00:23:09.660 --> 00:23:14.007\nIf I want to do an online\ndefragmentation if it's less than 30%,\n\n458\n00:23:14.007 --> 00:23:17.688\nthis will do it and\njust kinda reorganize it and get done.\n\n459\n00:23:17.688 --> 00:23:22.760\nBut if it's beyond 30%, Microsoft's\nrecommendation is to do a rebuild.\n\n460\n00:23:22.760 --> 00:23:27.050\nAnd you can do REBUILD like that, and\n\n461\n00:23:27.050 --> 00:23:30.250\nnow it will just drop the index and\ncreate a new one.\n\n462\n00:23:30.250 --> 00:23:32.060\nQuick word of advice on this.\n\n463\n00:23:32.060 --> 00:23:35.360\nIf this is just a small business, if you\njust have a few users in the system,\n\n464\n00:23:35.360 --> 00:23:36.720\nthen REBUILD just like that, it's fine.\n\n465\n00:23:37.720 --> 00:23:42.658\nBut if this is a massive database where\nyou have hundreds or thousands of users in\n\n466\n00:23:42.658 --> 00:23:47.462\nthe database at all times when it drops\nthat index, you longer have an index.\n\n467\n00:23:47.462 --> 00:23:50.313\nAnd it has to build a new one and\nif it's a large data set,\n\n468\n00:23:50.313 --> 00:23:52.088\nit could take a couple of minutes.\n\n469\n00:23:52.088 --> 00:23:55.212\nAnd during that time,\npeople are running queries with no index.\n\n470\n00:23:55.212 --> 00:23:57.171\nAnd performance is gonna be slow,\nall right?\n\n471\n00:23:57.171 --> 00:24:00.065\nYou saw in the first episode\nthe difference in time it took for\n\n472\n00:24:00.065 --> 00:24:02.676\nrunning a query with an index\nversus without an index,\n\n473\n00:24:02.676 --> 00:24:04.880\nthat's gonna happen to your users, right?\n\n474\n00:24:04.880 --> 00:24:08.610\nSo there's an extra option you can\ntack onto the end of this, and\n\n475\n00:24:08.610 --> 00:24:10.990\nMicrosoft calls it an option,\nI call it a must, right?\n\n476\n00:24:10.990 --> 00:24:17.068\nI kinda always do this one,\nwhich is where we just say WITH,\n\n477\n00:24:17.068 --> 00:24:21.710\nand then we say (ONLINE = ON), like that.\n\n478\n00:24:21.710 --> 00:24:24.037\nOkay, it's a little extra option, okay?\n\n479\n00:24:24.037 --> 00:24:27.644\nAnd what that option says is,\ndon't drop the existing index,\n\n480\n00:24:27.644 --> 00:24:32.015\nkeep the existing index up, cuz even\nfragmented, it still works, right?\n\n481\n00:24:32.015 --> 00:24:35.482\nKeep it up,\ncreate a new index side by side, and\n\n482\n00:24:35.482 --> 00:24:39.955\nonly when the new index is done\ndo you get rid of the old index.\n\n483\n00:24:39.955 --> 00:24:43.120\nAnd that way you've always got an index.\n\n484\n00:24:43.120 --> 00:24:43.930\nIt might be fragmented, but\n\n485\n00:24:43.930 --> 00:24:46.980\nat least you've got it and\nthen the new one takes over, right?\n\n486\n00:24:46.980 --> 00:24:50.720\nSo just make sure that it's an online\nrebuild and now you get that new one, and\n\n487\n00:24:50.720 --> 00:24:52.870\nnow users are always running\nqueries with an index.\n\n488\n00:24:52.870 --> 00:24:55.602\nIt may not be the greatest,\nbut at least it is an index.\n\n489\n00:24:55.602 --> 00:24:58.530\nAll right, and so\nthose are great ways that we can do that.\n\n490\n00:24:58.530 --> 00:25:00.242\nYour DBA's, they know about this.\n\n491\n00:25:00.242 --> 00:25:03.765\nAnd so a lot of times what they're gonna\ndo is they're gonna write automated\n\n492\n00:25:03.765 --> 00:25:06.627\nscripts that once a week, or\nonce a month, or however often,\n\n493\n00:25:06.627 --> 00:25:09.010\nwill jump in there and\ndo a reorganize or a rebuild.\n\n494\n00:25:09.010 --> 00:25:11.080\nThey know how to maintain indexes, right?\n\n495\n00:25:11.080 --> 00:25:14.450\nSo for us as sys admins,\nit's normally just using the index advisor\n\n496\n00:25:14.450 --> 00:25:18.710\nin the query performance insight, but if\nyou are ever left to your own devices, or\n\n497\n00:25:18.710 --> 00:25:22.360\nyou have to deal with this, rebuilding\nthe indexes is not too terribly hard.\n\n498\n00:25:22.360 --> 00:25:27.033\n>> Excellent stuff Don, now we've covered\na lot of ways in which we can use either\n\n499\n00:25:27.033 --> 00:25:31.530\nAzure, or even transact SQL here,\nto maintain those indexes,\n\n500\n00:25:31.530 --> 00:25:34.130\nmake sure that they are running\nas efficiently as possible.\n\n501\n00:25:34.130 --> 00:25:37.630\nAnything else that we want to add\nto the heap before we wrap it up?\n\n502\n00:25:37.630 --> 00:25:41.762\n>> One thing that is worth mentioning is,\nif you run an on-premises SQL Server,\n\n503\n00:25:41.762 --> 00:25:45.331\nthere's another tool available,\nit's called the, let's see,\n\n504\n00:25:45.331 --> 00:25:47.160\nDatabase Engine Tuning Adviser?\n\n505\n00:25:47.160 --> 00:25:48.440\nLet me pull it up here.\n\n506\n00:25:48.440 --> 00:25:52.200\nSo I'm here in the SQL Management Studio,\nand if I go to Tools, it is,\n\n507\n00:25:52.200 --> 00:25:54.930\noh, Database Engine Tuning Adviser,\nI had it right.\n\n508\n00:25:54.930 --> 00:25:59.100\nIt's a great tool, it's been in SQL since,\nI started with SQL 7,\n\n509\n00:25:59.100 --> 00:26:01.440\nand it was there in SQL 7.\n\n510\n00:26:01.440 --> 00:26:05.130\nIt's just like the index adviser on\nthe website, except it's got some extra\n\n511\n00:26:05.130 --> 00:26:08.090\nfeatures, like it lets you feed\nparticular queries into it.\n\n512\n00:26:08.090 --> 00:26:11.695\nAnd that's really nice, except it\ndoesn't work with Azure, all right?\n\n513\n00:26:11.695 --> 00:26:13.215\nThat's the point I wanted to make.\n\n514\n00:26:13.215 --> 00:26:16.395\nKind of a long way to make a point\nI guess, is it's a great tool,\n\n515\n00:26:16.395 --> 00:26:20.300\nit works great for on-premises SQL,\nit does not work in Azure, right?\n\n516\n00:26:20.300 --> 00:26:23.327\nSo if you're trying to fire up that\nDatabase Tuning Engine Adviser,\n\n517\n00:26:23.327 --> 00:26:25.950\nDatabase Engine Tuning,\nwhatever, fire that tool.\n\n518\n00:26:25.950 --> 00:26:28.500\nAnd you try and connect up to your server,\n\n519\n00:26:28.500 --> 00:26:30.660\nwhat's gonna happen is you're\ngonna get an error, there we go.\n\n520\n00:26:30.660 --> 00:26:34.180\nDatabase Engine Tuning Adviser does not\nsupport Microsoft Azure SQL Database,\n\n521\n00:26:34.180 --> 00:26:35.480\nit's not gonna work, all right?\n\n522\n00:26:35.480 --> 00:26:39.927\nSo this is a tool that a lot of us have\nbeen using for years and years and years,\n\n523\n00:26:39.927 --> 00:26:41.749\nit's just not there in Azure.\n\n524\n00:26:41.749 --> 00:26:45.455\nSo be aware of the other tools, cuz\nthose are what you're gonna have to use.\n\n525\n00:26:45.455 --> 00:26:48.118\n>> Yeah, old Microsoft kicking the crutch\nout from underneath us, aren't they?\n\n526\n00:26:48.118 --> 00:26:49.088\nThank you so much.\n\n527\n00:26:49.088 --> 00:26:51.434\nAnd thank you, Don, this has been\na great show, I really enjoyed this.\n\n528\n00:26:51.434 --> 00:26:52.665\nI'm sure you guys have as well.\n\n529\n00:26:52.665 --> 00:26:54.475\nWell we're gonna go ahead and\nwrap things up.\n\n530\n00:26:54.475 --> 00:26:57.615\nSigning off for ITProTV,\nI've been your host, Daniel Lowrie.\n\n531\n00:26:57.615 --> 00:26:58.185\n>> And I'm Don Pezet.\n\n532\n00:26:58.185 --> 00:26:59.881\n>> And we'll see you next time.\n\n533\n00:26:59.881 --> 00:27:04.840\n>> [MUSIC]\n\n",
          "vimeoId": "151774531"
        },
        {
          "description": "In this episode, Don and Daniel talk about database maintenance tasks in Azure SQL. They begin with the demarcation of duties; what tasks are being handled by Microsoft(backups, replication, consistency checks) and what tasks are handled by the customer(index creation/maintenance, data partitioning, and statistics). Finally they take a close look at database statistics; specifically creating, maintaining, and removing statistics. Also covered is Asynchronous Statistics.",
          "length": "1892",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-azuresql/techskills-azuresql-3-2-database_maintenance-111216-1.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-azuresql/techskills-azuresql-3-2-database_maintenance-111216-1-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-azuresql/techskills-azuresql-3-2-database_maintenance-111216-1-sm.jpg",
          "title": "Database Maintenance",
          "transcript": "WEBVTT\n\n1\n00:00:00.000 --> 00:00:10.000\n[MUSIC]\n\n2\n00:00:12.400 --> 00:00:16.236\nAll right, greetings everyone, and welcome\nto another exciting episode of ITProTV.\n\n3\n00:00:16.236 --> 00:00:19.032\nI'm your host Daniel Lowrie,\nand in today's episode,\n\n4\n00:00:19.032 --> 00:00:22.828\nwell we're continuing on that Azure SQL\nseries that we've been working on.\n\n5\n00:00:22.828 --> 00:00:24.726\nJoining me again today here in the studio,\n\n6\n00:00:24.726 --> 00:00:27.266\nwell it's none other than my\ngood friend Mr. Don Pezet.\n\n7\n00:00:27.266 --> 00:00:29.228\nDon, welcome back to the show,\nhow you doing today?\n\n8\n00:00:29.228 --> 00:00:31.565\n>> I am doing great, Daniel,\nthanks for having me back, and\n\n9\n00:00:31.565 --> 00:00:33.876\nI'm ready to dive right back\ninto the world of Azure SQL.\n\n10\n00:00:33.876 --> 00:00:36.303\nWe're following up\nthe episodes on indexing, and\n\n11\n00:00:36.303 --> 00:00:39.866\nif you haven't watched those,\nI definitely encourage you to watch them.\n\n12\n00:00:39.866 --> 00:00:42.949\nBut were gonna take a look\nhere at database maintenance,\n\n13\n00:00:42.949 --> 00:00:46.559\nsome of the things that we need to\ndo to keep our databases healthy.\n\n14\n00:00:46.559 --> 00:00:49.986\nAnd the reason I mentioned indexes,\nis as we learned about indexes,\n\n15\n00:00:49.986 --> 00:00:52.288\nnow they can make our query run so\nmuch faster,\n\n16\n00:00:52.288 --> 00:00:55.081\nI showed you how they had to\nbe maintained also, right?\n\n17\n00:00:55.081 --> 00:00:58.385\nThat indexes can get out of date,\nthat they could become fragmented, and\n\n18\n00:00:58.385 --> 00:01:00.374\nwe have to take some\naction to correct that.\n\n19\n00:01:00.374 --> 00:01:03.319\nAnd I know that's shocking to a lot\nof people, cuz you think well,\n\n20\n00:01:03.319 --> 00:01:06.650\ndoesn't Microsoft take care of everything\nfor us when we're up in Azure?\n\n21\n00:01:06.650 --> 00:01:09.517\nWell they take care of a lot of stuff,\nbut not everything.\n\n22\n00:01:09.517 --> 00:01:12.943\nAnd so in this episode we're gonna take\na look at a few of the little things that\n\n23\n00:01:12.943 --> 00:01:14.000\nMicrosoft leaves out,\n\n24\n00:01:14.000 --> 00:01:17.270\nthat you need to make part of your\nregular maintenance schedule.\n\n25\n00:01:17.270 --> 00:01:17.894\n>> All right Don,\n\n26\n00:01:17.894 --> 00:01:20.883\nnow you mention that we have a few\nthings that Microsoft does take care of.\n\n27\n00:01:20.883 --> 00:01:24.110\nAnd it will probably be a good idea\nto go ahead and start there, right?\n\n28\n00:01:24.110 --> 00:01:26.966\nWhat do they do for us so\nthat we know what they don't do for us?\n\n29\n00:01:26.966 --> 00:01:29.972\n>> Sure, so\nI've worked with SQL a long time, and\n\n30\n00:01:29.972 --> 00:01:33.970\nback in the day when we deployed it,\nI started with SQL 7.0.\n\n31\n00:01:33.970 --> 00:01:37.191\nAnd when you deployed SQL 7.0,\nyou had to setup all sorts of maintenance\n\n32\n00:01:37.191 --> 00:01:39.710\nactivities to keep the server up and\nrunning and healthy.\n\n33\n00:01:39.710 --> 00:01:42.812\nAnd so there were, I have a list,\nI don't know, it's probably seven or eight\n\n34\n00:01:42.812 --> 00:01:46.150\ndifferent things that you had to configure\nand maintain to keep it running, right?\n\n35\n00:01:46.150 --> 00:01:50.202\nWell, once you go into the Azure Cloud,\nwhen you run an Azure SQL,there's\n\n36\n00:01:50.202 --> 00:01:54.464\na good six of those things that Microsoft\nis indeed taking car of for us, right?\n\n37\n00:01:54.464 --> 00:01:57.750\nThe number one item that I think of,\nare our backups, right?\n\n38\n00:01:57.750 --> 00:02:01.704\nBackups occupied a huge portion of\nmy day throughout my entire career.\n\n39\n00:02:01.704 --> 00:02:05.974\nThat getting the backups configured and up\nand running was always a lot of work, but\n\n40\n00:02:05.974 --> 00:02:09.634\nthen every single day you had to\nverify that your backups were running,\n\n41\n00:02:09.634 --> 00:02:11.356\nyou had to do some test restores.\n\n42\n00:02:11.356 --> 00:02:14.794\nI mean it consumed easily a quarter of\nmy career was spent just working with\n\n43\n00:02:14.794 --> 00:02:15.301\nbackups.\n\n44\n00:02:15.301 --> 00:02:18.203\nWhen you put your database up in SQL,\nor in Azure SQL,\n\n45\n00:02:18.203 --> 00:02:20.020\nyou don't worry about backups.\n\n46\n00:02:20.020 --> 00:02:23.861\nMicrosoft's backing it up every 60\nseconds, restores are super easy.\n\n47\n00:02:23.861 --> 00:02:26.455\nThey've already tested them to\nmake sure they're good and clean,\n\n48\n00:02:26.455 --> 00:02:28.102\nyou don't have to worry about it, right?\n\n49\n00:02:28.102 --> 00:02:31.532\nThat's a piece of maintenance that\nis completely handled by Microsoft,\n\n50\n00:02:31.532 --> 00:02:33.479\nwe don't have to worry about it, right?\n\n51\n00:02:33.479 --> 00:02:36.195\nSame thing goes for replication, right?\n\n52\n00:02:36.195 --> 00:02:39.155\nI've spent plenty of time setting\nup transaction log shipping.\n\n53\n00:02:39.155 --> 00:02:42.974\nAnd once you had that set up, having to\nmonitor it to make sure that was healthy,\n\n54\n00:02:42.974 --> 00:02:45.141\nif a problem happened going in and\nfixing it.\n\n55\n00:02:45.141 --> 00:02:48.613\nIf a failure occurred, flipping over and\nactivating the other end of that\n\n56\n00:02:48.613 --> 00:02:50.805\ntransaction log pair,\nthat's a lot of work.\n\n57\n00:02:50.805 --> 00:02:53.769\nWell, if we do geo-replication with Azure,\n\n58\n00:02:53.769 --> 00:02:57.802\nor the active geo-replication,\nMicrosoft sets it up for us.\n\n59\n00:02:57.802 --> 00:03:01.340\nWe just tell it what other region to\nput the other end of that database in,\n\n60\n00:03:01.340 --> 00:03:02.795\nand it's up and it's going.\n\n61\n00:03:02.795 --> 00:03:06.300\nAnd we don't have to monitor it or\nmaintain it, Microsoft does that for us.\n\n62\n00:03:06.300 --> 00:03:08.940\nThat's another piece of maintenance\nthat Microsoft just takes care of,\n\n63\n00:03:08.940 --> 00:03:11.300\nwe don't have to worry about it,\nall right?\n\n64\n00:03:11.300 --> 00:03:12.990\nConsistency checks.\n\n65\n00:03:12.990 --> 00:03:17.090\nConsistency checks,\nthere's a utility inside a SQL DBCC,\n\n66\n00:03:17.090 --> 00:03:20.360\nwhich actually used to stand for\nthe database consistency checker.\n\n67\n00:03:20.360 --> 00:03:23.150\nAnd what it would do,\nis it would scan over your database and\n\n68\n00:03:23.150 --> 00:03:24.250\nlook for file corruption.\n\n69\n00:03:24.250 --> 00:03:26.610\nSo if there was any kind of\ncorruption on the hard drive, right?\n\n70\n00:03:26.610 --> 00:03:29.590\nIf we had a disk that was kind of failing\nand the database was stored on those\n\n71\n00:03:29.590 --> 00:03:32.570\nclusters, it would help to find that and\ntry to correct from it.\n\n72\n00:03:32.570 --> 00:03:35.670\nOr if there were incomplete writes\ncommitted to the database for\n\n73\n00:03:35.670 --> 00:03:39.440\nsome reason, the DBCC could actually roll\nthose back using the transaction logs, and\n\n74\n00:03:39.440 --> 00:03:42.200\nclean up the database, and\nget it healthy and running again.\n\n75\n00:03:42.200 --> 00:03:45.280\nThose are problems that Microsoft\ntakes care of for us, right?\n\n76\n00:03:45.280 --> 00:03:48.390\nThey're maintaining the underlying\nhardware, including the storage, and\n\n77\n00:03:48.390 --> 00:03:50.740\nthey're making sure that\nour database is intact.\n\n78\n00:03:50.740 --> 00:03:53.721\nAnd so we don't have to run those\nconsistency checks, that's gone.\n\n79\n00:03:53.721 --> 00:03:57.500\nAnd I really do appreciate that, because\nsome of those checks required you to take\n\n80\n00:03:57.500 --> 00:03:59.720\nthe database offline, which I hated.\n\n81\n00:03:59.720 --> 00:04:01.650\nMicrosoft deals with that now, so\nwe don't have to worry about it.\n\n82\n00:04:01.650 --> 00:04:06.299\nThere's also two special databases on\nany database server that you create,\n\n83\n00:04:06.299 --> 00:04:08.386\nthere's the MSDB and the tempdb.\n\n84\n00:04:08.386 --> 00:04:10.925\nThe MSDB,\nthat is the Microsoft database, and\n\n85\n00:04:10.925 --> 00:04:15.002\nit stores things that the SQL server\nneeds for its just regular operations.\n\n86\n00:04:15.002 --> 00:04:20.296\nWell, Microsoft is maintaining the SQL\nserver, so we can just ignore the MSDB.\n\n87\n00:04:20.296 --> 00:04:22.803\nWe used to have to worry about\nit growing too large, or\n\n88\n00:04:22.803 --> 00:04:25.502\nthe performance on it if we\nwere running scheduled jobs.\n\n89\n00:04:25.502 --> 00:04:27.309\nYou used to have to worry about that, but\n\n90\n00:04:27.309 --> 00:04:29.950\nit's not anything you\neven look at anymore.\n\n91\n00:04:29.950 --> 00:04:33.550\nThe tempdb is the same way,\nwhen you would run a temporary process,\n\n92\n00:04:33.550 --> 00:04:36.740\nsome kinda query that was dealing with\na large dataset, you might create\n\n93\n00:04:36.740 --> 00:04:39.690\ntemporary tables in tempdb, or you might\nhave stored procedures or something,\n\n94\n00:04:39.690 --> 00:04:41.420\nthat's creating data in that tempdb.\n\n95\n00:04:41.420 --> 00:04:44.380\nAnd so you used to have to worry about\nits growth, its transaction logs,\n\n96\n00:04:44.380 --> 00:04:47.930\nits size, now we don't worry\nabout that at all, right?\n\n97\n00:04:47.930 --> 00:04:51.380\nSo those are all things that in\nthe past we had to be aware of.\n\n98\n00:04:51.380 --> 00:04:53.610\nAnd if you have on-premises SQL server,\n\n99\n00:04:53.610 --> 00:04:57.780\nthose are all things that you need to be\nworried about today, that are still there.\n\n100\n00:04:57.780 --> 00:05:01.350\nBut when you host your database in\nAzure SQL, those are all gone, right?\n\n101\n00:05:01.350 --> 00:05:04.250\nThose are taken off our plate,\none less for us to worry about,\n\n102\n00:05:04.250 --> 00:05:07.140\nor six less things for\nus to worry about right there.\n\n103\n00:05:07.140 --> 00:05:10.678\n>> And that's right, now that Microsoft\nhas taken over a lot of those,\n\n104\n00:05:10.678 --> 00:05:14.888\nI guess job roles, or responsibilities, it\ndoes free us up to do the things that we\n\n105\n00:05:14.888 --> 00:05:18.914\ndo need to do, because just because\nthey're doing a lot for us, doesn't mean\n\n106\n00:05:18.914 --> 00:05:23.250\nthere aren't some things left on the table\nthat they just can't do, right Don?\n\n107\n00:05:23.250 --> 00:05:25.560\n>> That's right, and\none example of that are the indexes.\n\n108\n00:05:25.560 --> 00:05:27.375\nSo again,\nif you haven't watched them already,\n\n109\n00:05:27.375 --> 00:05:28.941\ndefinitely check out the index episodes.\n\n110\n00:05:28.941 --> 00:05:33.302\nMicrosoft doesn't know what your data is,\nMicrosoft doesn't know how you're gonna\n\n111\n00:05:33.302 --> 00:05:37.860\nuse your data, and so they can't tell you\nwhat indexes to create, they can suggest.\n\n112\n00:05:37.860 --> 00:05:39.970\nIf your database has been in place for\na few weeks and\n\n113\n00:05:39.970 --> 00:05:42.145\nthey've collected enough query data,\nthey can suggest,\n\n114\n00:05:42.145 --> 00:05:46.365\nwith the index advisor, what indexes\nwould speed up your database, right?\n\n115\n00:05:46.365 --> 00:05:50.245\nBut on day one, they can't tell you\nanything, so you need to go in and\n\n116\n00:05:50.245 --> 00:05:51.745\ncreate those indexes.\n\n117\n00:05:51.745 --> 00:05:55.565\nAnd over time, the indexes can become\nfragmented, or just out of date, and\n\n118\n00:05:55.565 --> 00:05:58.765\nwhen that happens, you may need to\nreorganize or rebuild those indexes.\n\n119\n00:05:58.765 --> 00:06:01.050\nAnd we saw all that back\nin the indexing episodes,\n\n120\n00:06:01.050 --> 00:06:03.600\nthat's maintenance that\nyou still need to do.\n\n121\n00:06:03.600 --> 00:06:07.250\nIf you create a database\nwith no indexes whatsoever,\n\n122\n00:06:07.250 --> 00:06:10.180\nit'll run just fine on Azure SQL.\n\n123\n00:06:10.180 --> 00:06:12.847\nI say just fine, it'll run slower\nthan it should, but it'll run, and\n\n124\n00:06:12.847 --> 00:06:15.260\nAzure will not give you any errors, right?\n\n125\n00:06:15.260 --> 00:06:18.540\nThe index advisor might have suggestions,\nbut you can ignore the suggestions,\n\n126\n00:06:18.540 --> 00:06:20.960\nyou don't have to act on them,\nand you can run with no indexes.\n\n127\n00:06:20.960 --> 00:06:22.550\nYou're not getting your\nmoney's worth though, right?\n\n128\n00:06:22.550 --> 00:06:25.880\nRemember your server is limited\nto a certain amount of DTUs, and\n\n129\n00:06:25.880 --> 00:06:29.040\nif you don't have indexes,\nif you don't have that optimization,\n\n130\n00:06:29.040 --> 00:06:31.390\nyou're not able to get\nthe full use of those DTUs.\n\n131\n00:06:31.390 --> 00:06:35.570\nYou're wasting time doing bad disc IO,\nbasically is what happens with no indexes.\n\n132\n00:06:35.570 --> 00:06:38.130\nSo, that's something that\nyou've got to deal with.\n\n133\n00:06:38.130 --> 00:06:40.129\nThere's also the issue\nof data partitioning.\n\n134\n00:06:41.180 --> 00:06:43.380\nWhen you create a database in Azure SQL,\n\n135\n00:06:43.380 --> 00:06:45.650\nyou only get a certain amount of storage,\nright?\n\n136\n00:06:45.650 --> 00:06:48.430\nSo for example here,\nlet me get back into my portal.\n\n137\n00:06:48.430 --> 00:06:53.390\nIf I go into my portal and I jump into my\nSQL databases, and I go to create a new\n\n138\n00:06:53.390 --> 00:06:57.010\ndatabase, when I create a new database,\nit asks me to pick a pricing tier.\n\n139\n00:06:57.010 --> 00:06:59.300\nAnd when I pick that pricing tier,\n\n140\n00:06:59.300 --> 00:07:04.270\nthat's going to determine how much\nstorage I get with that system, right?\n\n141\n00:07:04.270 --> 00:07:07.238\nAnd so when I look at a P1 Premium,\nor a P4 Premium,\n\n142\n00:07:07.238 --> 00:07:09.272\nI can have up to 500 gigs of data.\n\n143\n00:07:09.272 --> 00:07:14.810\nWhat if I need more than 500 gigs of\nstorage, then I'm out of luck, right?\n\n144\n00:07:14.810 --> 00:07:15.344\nI can't do it here.\n\n145\n00:07:15.344 --> 00:07:17.230\nWell, it's not that you can't do it.\n\n146\n00:07:17.230 --> 00:07:21.290\nYou can create more than one database,\nand you can do database partitioning,\n\n147\n00:07:21.290 --> 00:07:25.070\nwhere you partition out your data to\nspread across more than one database.\n\n148\n00:07:25.070 --> 00:07:27.300\nAnd that way you can get\nbeyond the storage limits.\n\n149\n00:07:27.300 --> 00:07:30.310\nSo for example, maybe you work for\na retail outlet,\n\n150\n00:07:30.310 --> 00:07:35.060\nsome kind of retail store like Walmart,\nor Sears, or something like that.\n\n151\n00:07:35.060 --> 00:07:37.870\nAnd you've got stores all\nover the country, and\n\n152\n00:07:37.870 --> 00:07:39.810\neach store has register receipts, right?\n\n153\n00:07:39.810 --> 00:07:42.290\nTransactions that are being generated, and\n\n154\n00:07:42.290 --> 00:07:45.750\nyou want each store to have\nup to 500 gigs of data.\n\n155\n00:07:45.750 --> 00:07:49.382\nWell you could create one database for\neach store so they had their own.\n\n156\n00:07:49.382 --> 00:07:53.568\nBut then whenever you ran a report, if you\nwanted an aggregate report across all of\n\n157\n00:07:53.568 --> 00:07:57.632\nthem You would have to have some kind of\ncross server query that could run to reach\n\n158\n00:07:57.632 --> 00:08:00.423\nout and grab all of that as\npart of a data partition and so\n\n159\n00:08:00.423 --> 00:08:03.270\nthat's something that you\nwould have to set up.\n\n160\n00:08:03.270 --> 00:08:06.470\nMicrosoft imposes these limits because\nthey can guarantee a service level\n\n161\n00:08:06.470 --> 00:08:10.820\nup to 500 gigs,\nonce they get beyond 500 gigs.\n\n162\n00:08:10.820 --> 00:08:15.400\nIt becomes really hard for\nthem to maintain the backup SLA's and\n\n163\n00:08:15.400 --> 00:08:18.190\nthe other performance SLAs and\nespecially the restore ones.\n\n164\n00:08:18.190 --> 00:08:21.520\nSo that's why they cap it like that, but\nif you do more than one data base and\n\n165\n00:08:21.520 --> 00:08:25.180\ncombine them you can get beyond it and\nyou still maintain the SLAs but\n\n166\n00:08:25.180 --> 00:08:27.060\nit's up to you to set that up.\n\n167\n00:08:27.060 --> 00:08:29.520\nMicrosoft can't help you get beyond that,\nright.\n\n168\n00:08:29.520 --> 00:08:30.630\nThat's your data.\n\n169\n00:08:30.630 --> 00:08:31.920\nYou understand it.\n\n170\n00:08:31.920 --> 00:08:32.830\nThey don't.\n\n171\n00:08:32.830 --> 00:08:34.070\nAnd so they can't push that beyond.\n\n172\n00:08:34.070 --> 00:08:36.230\nI think they do have some, yeah, here.\n\n173\n00:08:36.230 --> 00:08:38.700\nIf you go to a P11,\nyou can get up to a terabyte, but\n\n174\n00:08:38.700 --> 00:08:43.750\nthe price difference is pretty vast\nto jump up to get that extra space.\n\n175\n00:08:43.750 --> 00:08:47.460\nSo it gets pretty expensive\nif you do it that way\n\n176\n00:08:47.460 --> 00:08:50.850\nversus combining multiple\nof the lower end.\n\n177\n00:08:50.850 --> 00:08:53.072\nSo if I just needed\na terabyte of storage and\n\n178\n00:08:53.072 --> 00:08:56.840\nI wasn't really concerned about\nperformance, I could take two P1s and\n\n179\n00:08:56.840 --> 00:09:00.259\nI would get a terabyte of storage for\nroughly $1000 a month.\n\n180\n00:09:00.259 --> 00:09:03.513\nOr, I could take one P11 and\nget a terabyte of storage for\n\n181\n00:09:03.513 --> 00:09:05.610\n$7000 a month, right?\n\n182\n00:09:05.610 --> 00:09:09.180\nBecause I'm also paying for the extra\nperformance this gets, the extra DTs,\n\n183\n00:09:09.180 --> 00:09:10.690\nwhich I may or may not need, right?\n\n184\n00:09:10.690 --> 00:09:13.600\nSo those are decisions we have to make,\nand that's kind of up to us.\n\n185\n00:09:13.600 --> 00:09:15.730\nThat's our own thing.\n\n186\n00:09:15.730 --> 00:09:17.080\nThe other thing, though,\n\n187\n00:09:17.080 --> 00:09:19.150\nis what we're really going to\nspend our time on this episode.\n\n188\n00:09:19.150 --> 00:09:20.520\nSomething that's really important.\n\n189\n00:09:21.700 --> 00:09:26.120\nIn the indexing episode,\nI mentioned how when you run a query\n\n190\n00:09:26.120 --> 00:09:31.170\non the backend there's this thing called\nthe engine, the execution plan, right?\n\n191\n00:09:31.170 --> 00:09:33.790\nThe SQL engine will figure\nout what's the best plan.\n\n192\n00:09:33.790 --> 00:09:36.110\nWhat's the best way to run a query.\n\n193\n00:09:36.110 --> 00:09:40.720\nAnd it's using database\nstatistics to calculate that out.\n\n194\n00:09:40.720 --> 00:09:43.460\nNow, when you create a database\ninside of Azure SQL,\n\n195\n00:09:43.460 --> 00:09:46.070\nit is going to calculate\nstatistics out for the data.\n\n196\n00:09:46.070 --> 00:09:47.930\nBut the data changes very frequently, and\n\n197\n00:09:47.930 --> 00:09:50.780\nthose statistics get\nout of date very fast.\n\n198\n00:09:50.780 --> 00:09:53.600\nAnd so maintaining the database statistics\n\n199\n00:09:53.600 --> 00:09:56.810\nis another maintenance task\nthat you're going to need.\n\n200\n00:09:56.810 --> 00:09:58.960\nAnd if you've never messed\nwith these statistics before,\n\n201\n00:09:58.960 --> 00:09:59.780\nit's a little bit weird.\n\n202\n00:09:59.780 --> 00:10:02.290\nSo that's what I want to spend\na lot of time on in this episode is\n\n203\n00:10:02.290 --> 00:10:04.800\nhow we maintain those statistics and\nkeep them healthy.\n\n204\n00:10:04.800 --> 00:10:07.230\nIt really goes hand in hand\nwith your indexes, right.\n\n205\n00:10:07.230 --> 00:10:10.090\nSo, maintaining your indexes and\nmaintaining your statistics\n\n206\n00:10:10.090 --> 00:10:13.600\nare really the two main maintenance\ntasks that we have to worry about.\n\n207\n00:10:13.600 --> 00:10:15.550\nDatabase partitioning you may or\nmay not need, right.\n\n208\n00:10:15.550 --> 00:10:18.540\nMost people don't have databases that\nare insanely large or have that kind of\n\n209\n00:10:18.540 --> 00:10:23.840\nperformance need, but as far as indexes\nand statistics, everybody's got those.\n\n210\n00:10:23.840 --> 00:10:26.390\nThose are two maintenance tasks\nthat you're going to need to do.\n\n211\n00:10:26.390 --> 00:10:29.680\n>> Yeah, those statistics do sound\nlike a very important part of\n\n212\n00:10:29.680 --> 00:10:31.920\nmaking sure this is\nan optimized type of database.\n\n213\n00:10:31.920 --> 00:10:35.582\nWe want that speed, we want indexes\nthat we create to be working optimally,\n\n214\n00:10:35.582 --> 00:10:37.888\nand as you say,\nthe statistics help with that.\n\n215\n00:10:37.888 --> 00:10:42.672\nI guess the question then becomes what\nkind of statistics are being gathered, and\n\n216\n00:10:42.672 --> 00:10:47.526\nhow do they use that specifically to make\nthese databases work optimally with their\n\n217\n00:10:47.526 --> 00:10:48.169\nindexes?\n\n218\n00:10:48.169 --> 00:10:48.676\n>> All right,\n\n219\n00:10:48.676 --> 00:10:51.830\nI'm gonna double back to an example\nthat we did in the other show, right?\n\n220\n00:10:51.830 --> 00:10:53.060\nSo in the other show.\n\n221\n00:10:53.060 --> 00:10:54.380\nThe index show.\n\n222\n00:10:54.380 --> 00:10:55.440\nI did a query.\n\n223\n00:10:55.440 --> 00:10:56.970\nAnd I have this employees table here.\n\n224\n00:10:56.970 --> 00:10:57.520\nHere, let show it.\n\n225\n00:10:57.520 --> 00:10:59.310\nIt'll be easier to\nunderstand if we see it.\n\n226\n00:10:59.310 --> 00:11:02.680\nSo I've got this table\ncalled dbo.Employees, right?\n\n227\n00:11:02.680 --> 00:11:04.840\nAnd it just has all my employees in it.\n\n228\n00:11:04.840 --> 00:11:06.940\nAnd they're kinda listed over here.\n\n229\n00:11:06.940 --> 00:11:10.550\nI've got first name, last name,\naddress, city, right?\n\n230\n00:11:10.550 --> 00:11:12.820\nSo just a bunch of random people in here.\n\n231\n00:11:12.820 --> 00:11:17.380\nAnd the query that I ran against\nthis on the other show was,\n\n232\n00:11:17.380 --> 00:11:23.308\nI actually I ran two queries,\nthese guys, I've still got them.\n\n233\n00:11:23.308 --> 00:11:28.130\nSo, select * FROM Employees,\nwhere LastName is like S%.\n\n234\n00:11:28.130 --> 00:11:30.670\nThe first one is just looking for\n\n235\n00:11:30.670 --> 00:11:34.740\nany employee who's last name\nis exactly Smith, right?\n\n236\n00:11:34.740 --> 00:11:37.580\nNot Smithsoon or Smitherly or anything.\n\n237\n00:11:37.580 --> 00:11:40.300\nJust plain old Smith, right?\n\n238\n00:11:40.300 --> 00:11:41.720\nAnd the second one is looking for\n\n239\n00:11:41.720 --> 00:11:45.620\nanybody whose last name starts\nwith the letter S, right?\n\n240\n00:11:45.620 --> 00:11:48.370\nSo as expected, one's gonna get\nmore results than the other.\n\n241\n00:11:48.370 --> 00:11:51.920\nI probably only have so\nmany employees whose last name is Smith.\n\n242\n00:11:51.920 --> 00:11:56.980\nAnd if I run that query I can see\nthat I actually only got one result.\n\n243\n00:11:56.980 --> 00:11:59.200\nI got Raven Smith, right?\n\n244\n00:11:59.200 --> 00:12:02.310\nSo here's this one person that came back,\nright?\n\n245\n00:12:02.310 --> 00:12:04.960\nAnd if I run the other query.\n\n246\n00:12:04.960 --> 00:12:10.270\nSo I'm gonna pull this, anybody whose\nlast name starts with S, right?\n\n247\n00:12:10.270 --> 00:12:14.176\nSo that query ran and I got a lot more\nthan one, let's see how many did I get?\n\n248\n00:12:14.176 --> 00:12:17.229\nIt looks like I got actually\na couple hundred, huh.\n\n249\n00:12:17.229 --> 00:12:21.500\nSo quite a few people, 448 people.\n\n250\n00:12:21.500 --> 00:12:26.520\nNow, this table contains 5,000 rows,\n\n251\n00:12:26.520 --> 00:12:31.860\nand 448 of those people last\nname starts with an S, right?\n\n252\n00:12:31.860 --> 00:12:33.260\nSo a statistic, if you work that out,\n\n253\n00:12:33.260 --> 00:12:36.560\nit's almost 10% of the database has\na last name that starts with S.\n\n254\n00:12:36.560 --> 00:12:38.620\nIt's not really an even distribution\nas far as the alphabet goes, but\n\n255\n00:12:38.620 --> 00:12:39.630\nthat's pretty common.\n\n256\n00:12:39.630 --> 00:12:44.850\nSo, about 10% of the database has\na last name that starts with S, right.\n\n257\n00:12:44.850 --> 00:12:51.530\nSo what happened is, when SQL went to run\nthis query it had to make a decision.\n\n258\n00:12:51.530 --> 00:12:57.710\nIt had to say all right, when I run\nthis query, do I use an index or not?\n\n259\n00:12:57.710 --> 00:13:01.510\nAnd in the index episode I\ncreated an index on that table.\n\n260\n00:13:01.510 --> 00:13:05.200\nNow if I turn on my,\nlet me turn on my execution plan here.\n\n261\n00:13:05.200 --> 00:13:09.730\nSo I'm going to tell it to\ninclude my actual execution plan.\n\n262\n00:13:09.730 --> 00:13:11.610\nAnd I'm gonna rerun this first query.\n\n263\n00:13:11.610 --> 00:13:16.220\nSo, when I run this first query,\nit's looking through those 5,000 rows and\n\n264\n00:13:16.220 --> 00:13:18.900\nit's trying to find anybody\nwho's last name equal Smith.\n\n265\n00:13:18.900 --> 00:13:22.107\nNow, if there's no index,\nit's gonna do what's called a table scan,\n\n266\n00:13:22.107 --> 00:13:24.620\nit's gonna read that whole table,\nall right.\n\n267\n00:13:24.620 --> 00:13:28.630\nBut, if there is an index,\nit'll do something like this, right.\n\n268\n00:13:28.630 --> 00:13:33.930\nSo, it did an index seek to find the\npeople whose last name started with Smith.\n\n269\n00:13:33.930 --> 00:13:37.730\nAnd once it found them, then it knew\nexactly where on the hard drive to jump to\n\n270\n00:13:37.730 --> 00:13:39.810\ndo a heap lookup to get\nthe rest of their data.\n\n271\n00:13:39.810 --> 00:13:42.740\nTo get their first name, address,\nand all that other data.\n\n272\n00:13:42.740 --> 00:13:45.250\nAnd then it joined that information\ntogether, and displayed it to me,\n\n273\n00:13:45.250 --> 00:13:46.370\nall right.\n\n274\n00:13:46.370 --> 00:13:47.730\nSo it used that index.\n\n275\n00:13:49.300 --> 00:13:51.400\nBut when I run this other query.\n\n276\n00:13:51.400 --> 00:13:52.500\nWhen I run,\n\n277\n00:13:52.500 --> 00:13:56.610\nshow me everybody whose last name starts\nwith S, let's see what happens here.\n\n278\n00:13:56.610 --> 00:13:59.532\nAnd a smarter me would have checked\nthis before the show, but oh good.\n\n279\n00:13:59.532 --> 00:14:02.030\nAll right, I was pretty sure I\nwas gonna be right on this one.\n\n280\n00:14:02.030 --> 00:14:05.140\nNotice how it didn't use the index at all.\n\n281\n00:14:05.140 --> 00:14:06.830\nIt just did a table scan.\n\n282\n00:14:06.830 --> 00:14:10.080\nIt said I want to show you everybody\nwhose last name starts with S.\n\n283\n00:14:10.080 --> 00:14:12.150\nAnd I know the resulting\nset is gonna be so\n\n284\n00:14:12.150 --> 00:14:17.620\nbig that the performance effort that it\nwould take to access the index first and\n\n285\n00:14:17.620 --> 00:14:21.760\nthen the data would be higher than\nif I just went straight to the data.\n\n286\n00:14:21.760 --> 00:14:25.360\nSo it determined that it would be\nfaster to just read the whole table\n\n287\n00:14:25.360 --> 00:14:28.830\nthan it would to do an index lookup\nfirst and so, it skipped the index.\n\n288\n00:14:28.830 --> 00:14:33.140\nAll right, the index covers last name,\nso the index is good for\n\n289\n00:14:33.140 --> 00:14:36.450\nthis query, but from a performance\nstandpoint it chose not to use it.\n\n290\n00:14:36.450 --> 00:14:38.320\nNow, how did it know that?\n\n291\n00:14:38.320 --> 00:14:42.030\nHow did it know the resulting\nset was going to be big enough\n\n292\n00:14:42.030 --> 00:14:44.530\nthat the performance was\nbetter if we skip the index?\n\n293\n00:14:44.530 --> 00:14:47.360\nHow does it know the size of the resulting\nset without actually knowing\n\n294\n00:14:47.360 --> 00:14:48.040\nthe resulting set?\n\n295\n00:14:48.040 --> 00:14:51.080\nRight, wouldn't it have to query\nthe whole resulting set and then said,\n\n296\n00:14:51.080 --> 00:14:52.830\noh yeah I should have used an index.\n\n297\n00:14:52.830 --> 00:14:54.980\nRight, it kind of defeats the purpose?\n\n298\n00:14:54.980 --> 00:14:59.510\nSo what happens is,\nwhen you put data into a table,\n\n299\n00:14:59.510 --> 00:15:02.200\nSQL creates statistics on it, right.\n\n300\n00:15:02.200 --> 00:15:06.650\nAverage statistics that says here is the\naverage number of people who's last name\n\n301\n00:15:06.650 --> 00:15:08.830\nis starting with S,\nhere's the average number of this, so\n\n302\n00:15:08.830 --> 00:15:12.270\nthat here's the distribution\nof data on that table.\n\n303\n00:15:12.270 --> 00:15:16.350\nAnd it stores it in the database\nas a little statistics table.\n\n304\n00:15:16.350 --> 00:15:18.510\nAnd when you run a query,\n\n305\n00:15:18.510 --> 00:15:22.340\nthe query execution plan is\ncalculated base on those statistics.\n\n306\n00:15:22.340 --> 00:15:24.890\nIf the statistics are up to date,\nit's great.\n\n307\n00:15:24.890 --> 00:15:25.490\nIt works great.\n\n308\n00:15:25.490 --> 00:15:28.360\nIt tells you when you should use\nthe index and when you shouldn't.\n\n309\n00:15:28.360 --> 00:15:30.980\nBut if the statistics are stale, or\n\n310\n00:15:30.980 --> 00:15:35.840\nif they're missing, then what can happen\nis you can run a sub optimal query, right.\n\n311\n00:15:35.840 --> 00:15:39.140\nThe query might choose to use\nan index when it shouldn't have, or\n\n312\n00:15:39.140 --> 00:15:42.560\nit might choose to do a table scan when\nit should have used the index, right?\n\n313\n00:15:42.560 --> 00:15:45.601\nSo it may make a bad decision, and\nnot run as optimized as possible.\n\n314\n00:15:45.601 --> 00:15:49.975\nNow, on a positive side, it still runs,\nwe still get our data back, right?\n\n315\n00:15:49.975 --> 00:15:54.515\nIt's just slower than it should be, it\nconsumes more DTU's than it should have.\n\n316\n00:15:54.515 --> 00:15:58.024\nI may be able to get,\nlike I might have an S0 instance.\n\n317\n00:15:58.024 --> 00:15:59.950\nAnd it's taxed out.\n\n318\n00:15:59.950 --> 00:16:02.249\nI'm like man, I should really go to an S1.\n\n319\n00:16:02.249 --> 00:16:05.480\nWell if I go to an S1 it costs more money.\n\n320\n00:16:05.480 --> 00:16:09.570\nAnd in reality I probably could've just\noptimized my S0 and got it running right,\n\n321\n00:16:09.570 --> 00:16:11.310\nand stayed right there, right?\n\n322\n00:16:11.310 --> 00:16:14.110\nIf I don't update my statistics,\nI'm gonna have a problem.\n\n323\n00:16:14.110 --> 00:16:15.470\nRight?\nEverything is gonna be out of date.\n\n324\n00:16:15.470 --> 00:16:17.200\nI'm gonna have bad\ndecisions that are made and\n\n325\n00:16:17.200 --> 00:16:18.800\nthings are gonna out run\nthis optimally as possible.\n\n326\n00:16:18.800 --> 00:16:20.900\nSo that's why the statistics\nare important.\n\n327\n00:16:20.900 --> 00:16:22.890\nThis is all happening behind the scenes.\n\n328\n00:16:22.890 --> 00:16:25.760\nSo if you don't know about the statistics,\nthere's no warning sign up here.\n\n329\n00:16:25.760 --> 00:16:27.980\nIt's not even telling me\nit used the statistics.\n\n330\n00:16:27.980 --> 00:16:29.150\nI just have to know that.\n\n331\n00:16:29.150 --> 00:16:30.960\nRight?\nWhich is why we have shows like this one\n\n332\n00:16:30.960 --> 00:16:34.450\nwhere somebody like me tells you guys, hey\nthere's these things called statistics and\n\n333\n00:16:34.450 --> 00:16:37.090\nyou need to worry about them so\nwe need to keep those up to date and\n\n334\n00:16:37.090 --> 00:16:38.280\nwe need to keep them healthy.\n\n335\n00:16:38.280 --> 00:16:41.860\nNow Don, you said these\nstatistics are being created\n\n336\n00:16:41.860 --> 00:16:45.260\nby the sequel environment itself.\n\n337\n00:16:45.260 --> 00:16:47.970\nIs there any time that we would\nwant to create our own statistics?\n\n338\n00:16:49.460 --> 00:16:51.620\nBy default,\nunless you've dinked with this,\n\n339\n00:16:51.620 --> 00:16:55.830\nthe sequel server should be\nautomatically creating statistics, so\n\n340\n00:16:55.830 --> 00:16:58.640\nanytime you create a new table\nWell actually it's not then,\n\n341\n00:16:58.640 --> 00:17:01.670\nif you create a new table it's empty,\nit doesn't bother with statistics, right?\n\n342\n00:17:01.670 --> 00:17:05.110\nBut as soon as you put the first\nrow of data into that table,\n\n343\n00:17:05.110 --> 00:17:08.451\nit will automatically calculate\nstatistics for the table, right?\n\n344\n00:17:08.451 --> 00:17:11.110\nAnd then as you make changes,\n\n345\n00:17:11.110 --> 00:17:14.950\nit actually doesn't update\nthe statistics all the time, okay.\n\n346\n00:17:14.950 --> 00:17:17.260\nWhat it does is it waits for\na certain amount of time and\n\n347\n00:17:17.260 --> 00:17:21.240\na certain amount of changes before\nit actually starts to update.\n\n348\n00:17:21.240 --> 00:17:26.000\nAnd so SQL server will periodically\nupdate your statistics for you, right,\n\n349\n00:17:26.000 --> 00:17:27.750\nthat's the default, right.\n\n350\n00:17:27.750 --> 00:17:29.600\nNow you may have messed with that,\nbut it is the default.\n\n351\n00:17:29.600 --> 00:17:32.600\nAnd let me show you how to check and\nsee if you're set for the defaults, right.\n\n352\n00:17:32.600 --> 00:17:35.160\nSo, if I were to take this system here.\n\n353\n00:17:36.490 --> 00:17:38.816\nAnd let me just get\na new query window here.\n\n354\n00:17:38.816 --> 00:17:42.140\nAnd I'm gonna run a quick query just\nto see whether I'm set to the defaults.\n\n355\n00:17:42.140 --> 00:17:46.926\nSo, I'm gonna do a select, name,\n\n356\n00:17:46.926 --> 00:17:51.713\nis, auto, create, stats on [LAUGH]\n\n357\n00:17:51.713 --> 00:17:56.830\nfrom sys study but, it's all right.\n\n358\n00:17:56.830 --> 00:17:59.870\nSo, this is kind of a weird query so,\n\n359\n00:17:59.870 --> 00:18:04.990\nwhat I'm doing here is I'm saying,\nthere's a dynamic management view,\n\n360\n00:18:04.990 --> 00:18:08.850\na DMV, it's use for monitoring, we'll\ntalk about it in the monitoring episode.\n\n361\n00:18:08.850 --> 00:18:12.100\nBut, there's this DMV\ncalled sys.databases.\n\n362\n00:18:12.100 --> 00:18:16.000\nAnd it stores all sorts of\nmetadata about your databases.\n\n363\n00:18:16.000 --> 00:18:17.150\nAnd so it's basically a table.\n\n364\n00:18:17.150 --> 00:18:18.460\nIt's got a lot of columns.\n\n365\n00:18:18.460 --> 00:18:19.970\nAnd one of the columns is the name.\n\n366\n00:18:19.970 --> 00:18:22.030\nSo I wanna know the name of the database.\n\n367\n00:18:22.030 --> 00:18:26.660\nAnd then another column is\nis_auto_create_stats_on.\n\n368\n00:18:26.660 --> 00:18:29.940\nIf it's a one that means auto\ncreation of stats is turned on.\n\n369\n00:18:29.940 --> 00:18:32.460\nAnd so SQL should automatically\nbe doing that for you.\n\n370\n00:18:32.460 --> 00:18:34.870\nIf somebody turned that off\nit will show us a zero.\n\n371\n00:18:34.870 --> 00:18:36.662\nOkay.\nAnd so I can run that and\n\n372\n00:18:36.662 --> 00:18:41.171\nI can say I have two data bases master and\nsampleDB2 and is auto create stats for\n\n373\n00:18:41.171 --> 00:18:43.357\nboth okay, now I've actually got for\n\n374\n00:18:43.357 --> 00:18:48.190\nmore data base so if you Cuz if you look\nover here, I've got SampleDB1, right?\n\n375\n00:18:48.190 --> 00:18:50.940\nSo, it only returns it for the database\nyou're connected to and that's because\n\n376\n00:18:50.940 --> 00:18:55.150\nAzure is partitioning the databases on\nan on-premises server, I'd actually see\n\n377\n00:18:55.150 --> 00:18:57.930\nall the databases, but in Azure you\njust see the one you're connected to.\n\n378\n00:18:57.930 --> 00:19:01.380\nI'm connect to SampleDB2,\nand so I can see right here,\n\n379\n00:19:01.380 --> 00:19:04.670\nbeyond a doubt,\nauto_create_stats_on is already on.\n\n380\n00:19:04.670 --> 00:19:09.140\nSo, when I start creating tables in\nthat database, It should make stats.\n\n381\n00:19:09.140 --> 00:19:10.040\nOkay?\n\n382\n00:19:10.040 --> 00:19:14.020\nIt should also be automatically\nupdating those stats.\n\n383\n00:19:14.020 --> 00:19:17.570\nAnd so, that should be happening just\nbehind the scenes and you can even add\n\n384\n00:19:17.570 --> 00:19:23.420\nanother column to this and\nshow is auto update stats on.\n\n385\n00:19:23.420 --> 00:19:27.050\nI'm pretty sure is the right syntax for\nthat.\n\n386\n00:19:27.050 --> 00:19:28.880\nAnd so, I'll run that.\n\n387\n00:19:28.880 --> 00:19:32.070\nAnd now I can see the default is\nautomatically creating them and\n\n388\n00:19:32.070 --> 00:19:33.960\nautomatically updating them, okay.\n\n389\n00:19:33.960 --> 00:19:37.270\nSo, I don't have to create them,\nI don't even have to update them.\n\n390\n00:19:37.270 --> 00:19:38.190\nI can let it run by normal.\n\n391\n00:19:39.520 --> 00:19:42.210\nBut, there's a couple of problems here,\nright?\n\n392\n00:19:42.210 --> 00:19:43.370\nProblem number one.\n\n393\n00:19:43.370 --> 00:19:45.370\nJust because auto create is on,\n\n394\n00:19:45.370 --> 00:19:49.390\ndoesn't mean that someone didn't come\nbecome sequel and delete the stats.\n\n395\n00:19:49.390 --> 00:19:52.010\nYou can delete stats, or\nthe stats can even become damaged.\n\n396\n00:19:52.010 --> 00:19:55.120\nSo when the table was created\nthe stats might of been made, and\n\n397\n00:19:55.120 --> 00:19:56.830\nnow they might be gone.\n\n398\n00:19:56.830 --> 00:20:00.530\nSo, we've got to keep an eye out for\nthat, if the stats are missing.\n\n399\n00:20:00.530 --> 00:20:03.670\nThe other thing is, auto update is on but\n\n400\n00:20:03.670 --> 00:20:06.990\nit's not necessarily updating\nthe interval that we want it to.\n\n401\n00:20:06.990 --> 00:20:11.510\nIf I'm about to run an intensive query,\nand I know I'm about to do that, I might\n\n402\n00:20:11.510 --> 00:20:16.080\nchoose to manually update the stats to\nmake sure they're the most current and\n\n403\n00:20:16.080 --> 00:20:19.270\nthat way I know I have the best\nexecution plan coming into play.\n\n404\n00:20:19.270 --> 00:20:20.960\nOtherwise, if I just run it,\n\n405\n00:20:20.960 --> 00:20:24.160\nI'm kind of at the mercy of\nwhen the last update occurred.\n\n406\n00:20:24.160 --> 00:20:26.560\nAnd the last update might not\nhave occurred for hours or\n\n407\n00:20:26.560 --> 00:20:30.990\neven days in some scenarios, and so\nI might be dealing with very stale data.\n\n408\n00:20:30.990 --> 00:20:32.520\nThat can be a problem.\n\n409\n00:20:32.520 --> 00:20:36.020\nAnd really in SQL, even minutes can\nbe stale data depending on how much\n\n410\n00:20:36.020 --> 00:20:38.400\nchange is occurring on that database.\n\n411\n00:20:38.400 --> 00:20:40.470\nIf it's an online analysis\nprocessing database,\n\n412\n00:20:40.470 --> 00:20:44.980\nlike Olap, you're usually fine with\nstats that are days, even weeks old.\n\n413\n00:20:44.980 --> 00:20:46.790\nBut if it's an OLTP database,\n\n414\n00:20:46.790 --> 00:20:50.410\na transaction database You usually want\nyour stats to be very current and so\n\n415\n00:20:50.410 --> 00:20:52.710\nwe might wanna refresh those\nbefore running an intensive query.\n\n416\n00:20:53.850 --> 00:20:58.050\nAll right so let's say that one\nof these options happened to\n\n417\n00:20:58.050 --> 00:21:01.380\nbe off right we got a couple of commands\nthat we can use to turn these options on.\n\n418\n00:21:01.380 --> 00:21:04.620\nLike turning on the auto updates\nturning on the auto create,\n\n419\n00:21:04.620 --> 00:21:06.479\nall we have to do is say alter database.\n\n420\n00:21:07.790 --> 00:21:09.670\nAnd you can take that database.\n\n421\n00:21:09.670 --> 00:21:16.583\nI'll take sampleDB2 and then we can say\nSet auto_create_statistics on like that,\n\n422\n00:21:16.583 --> 00:21:21.411\nokay, and that query right there\nwill turn on auto create and\n\n423\n00:21:21.411 --> 00:21:25.689\nyou can do the same thing for\nauto update statistics.\n\n424\n00:21:25.689 --> 00:21:29.527\nSo somebody's turned them off, you can\nturn them on or you can turn them off,\n\n425\n00:21:29.527 --> 00:21:32.440\nif you wanna just make that an off and\nthere you go, right.\n\n426\n00:21:32.440 --> 00:21:34.640\nSo really easy to turn this on and off.\n\n427\n00:21:34.640 --> 00:21:37.830\nThey don't give you a way to do that\nin the GUI with Azure SQL it's not\n\n428\n00:21:37.830 --> 00:21:38.820\nanyway that I'm aware of it.\n\n429\n00:21:38.820 --> 00:21:41.270\nThey're adding new things all the time but\nI've never seen an option.\n\n430\n00:21:41.270 --> 00:21:43.280\nSo do it right here,\nlike this is pretty easy.\n\n431\n00:21:43.280 --> 00:21:46.130\nWe can turn in on and\noff on a per data base basis.\n\n432\n00:21:46.130 --> 00:21:46.910\nAll right.\n\n433\n00:21:46.910 --> 00:21:48.680\nAs far as creating the statistics.\n\n434\n00:21:48.680 --> 00:21:51.760\nSo maybe it happened to be off,\nand you just turned it on.\n\n435\n00:21:51.760 --> 00:21:55.770\nWell now you're gonna have to go create\nstatistics for any of the various tables.\n\n436\n00:21:55.770 --> 00:21:58.830\nAnd the statistics are really\ncalculated per column, right?\n\n437\n00:21:58.830 --> 00:22:01.080\nWhen I ran this query a minute\nago I was looking for\n\n438\n00:22:01.080 --> 00:22:03.060\npeople whose last names\nstarted with Smith.\n\n439\n00:22:03.060 --> 00:22:08.980\nSo I need a statistics table just for\nthe last name column, right?\n\n440\n00:22:08.980 --> 00:22:11.240\nSo creating the statistics\nactually is super annoying.\n\n441\n00:22:11.240 --> 00:22:15.900\nIn SQL, whenever you have an index if you\nhave a primary, like a primary key or\n\n442\n00:22:15.900 --> 00:22:19.420\nforeign key or if you have a clustered\nindex or non clustered index.\n\n443\n00:22:19.420 --> 00:22:22.238\nThose are triggers that lets it\nknow to go ahead create statistics.\n\n444\n00:22:22.238 --> 00:22:25.310\nBut if it's just a regular old\ncolumn a lot of time SQL won't\n\n445\n00:22:25.310 --> 00:22:28.610\ncreate statistics for it cuz it figures\nIf it was something you queried on,\n\n446\n00:22:28.610 --> 00:22:31.500\nyou'd make indexes for it, right,\nwhich is a pretty reasonable assumption.\n\n447\n00:22:31.500 --> 00:22:36.050\nSo if we want to create statistics,\nwe can do that by coming in and\n\n448\n00:22:36.050 --> 00:22:43.030\ntelling it CREATE STATISTICS and then we\ntell it the columns that we wanna cover,\n\n449\n00:22:43.030 --> 00:22:46.600\nactually we have to give it a name first,\nso maybe I'll call this LastName.\n\n450\n00:22:46.600 --> 00:22:50.140\nAnd you can actually cover more than one\ncolumn in the same statistics table if you\n\n451\n00:22:50.140 --> 00:22:52.580\nknow you're always gonna be\nquerying these things together.\n\n452\n00:22:52.580 --> 00:22:55.680\nSo for example,\nI could do LastName_FirstName.\n\n453\n00:22:55.680 --> 00:22:57.990\nThis is just the name I'm\ngiving the statistics.\n\n454\n00:22:57.990 --> 00:23:03.050\nThe part after this is what's important,\nwhere I say ON Employees that's the table.\n\n455\n00:23:03.050 --> 00:23:05.850\nAnd then beyond that I need to tell\nit the columns that I'm covering with\n\n456\n00:23:05.850 --> 00:23:06.670\nthese statistics.\n\n457\n00:23:06.670 --> 00:23:10.290\nSo if I was just doing LastName,\nI would leave it like that.\n\n458\n00:23:10.290 --> 00:23:12.630\nBut I'm gonna add FirstName also.\n\n459\n00:23:12.630 --> 00:23:17.160\nSo that I have a combination of statistics\nthat's created that covers both of\n\n460\n00:23:17.160 --> 00:23:18.050\nthose together.\n\n461\n00:23:18.050 --> 00:23:21.220\nSo now when I run a query that\nneeds both of those entities,\n\n462\n00:23:21.220 --> 00:23:25.220\nI'll have statistics calculate it for both\nof them combined in one set of statistics.\n\n463\n00:23:25.220 --> 00:23:28.750\nThat's faster than going to two sets of\nstatistics and then doing a comparison.\n\n464\n00:23:28.750 --> 00:23:30.820\nSo all different ways\nlike optimize a query and\n\n465\n00:23:30.820 --> 00:23:33.110\nmake it run a little\nbit on the faster side.\n\n466\n00:23:34.460 --> 00:23:35.120\nAll right.\n\n467\n00:23:35.120 --> 00:23:37.020\nSo that would create\nthose statistics here.\n\n468\n00:23:37.020 --> 00:23:37.790\nI'll go ahead and run that.\n\n469\n00:23:37.790 --> 00:23:39.760\nI don't necessarily need those stats.\n\n470\n00:23:39.760 --> 00:23:40.300\nBut we'll create it.\n\n471\n00:23:40.300 --> 00:23:41.010\nIt's very exciting.\n\n472\n00:23:41.010 --> 00:23:43.315\nCompleted, how do I know\nit actually worked,\n\n473\n00:23:43.315 --> 00:23:45.748\nwell we can view\nthe statistics that we've got.\n\n474\n00:23:45.748 --> 00:23:49.988\nYou can use DBCC now I mentioned DBCC\nearlier with the consistency check and\n\n475\n00:23:49.988 --> 00:23:53.563\nI said you don't need it anymore,\nyou don't need it anymore.\n\n476\n00:23:53.563 --> 00:23:56.954\nBut the command's still there, so you\ncan still use it to create some things.\n\n477\n00:23:56.954 --> 00:24:00.130\nMost of the consistents you\ncheck manage will just fail.\n\n478\n00:24:00.130 --> 00:24:05.510\nBut, the one that doesn't\nfail is DBCC SHOW_STATISTICS,\n\n479\n00:24:05.510 --> 00:24:09.930\nwhich is a cool one because you can\ntell it you wanna look at a table, and\n\n480\n00:24:09.930 --> 00:24:12.510\nyou can tell it the statistics\nyou wanna look at.\n\n481\n00:24:12.510 --> 00:24:14.280\nSo, I just created last name, first name.\n\n482\n00:24:15.510 --> 00:24:17.878\nAnd so I can come in here and\ntell it to show me those.\n\n483\n00:24:17.878 --> 00:24:24.520\nAnd, whoops,\nI'm trying to just highlight that.\n\n484\n00:24:24.520 --> 00:24:25.610\nThere we go.\n\n485\n00:24:25.610 --> 00:24:28.780\nAnd so when I run that,\nit's gonna show me the statistics.\n\n486\n00:24:28.780 --> 00:24:32.300\nAnd I can see it right here\nthat I've got a density.\n\n487\n00:24:32.300 --> 00:24:33.560\nHow dense are the results?\n\n488\n00:24:33.560 --> 00:24:34.800\nHow many duplicates do I have?\n\n489\n00:24:34.800 --> 00:24:39.300\nIf it's a unique column, then the density\nis really low cuz everybody is gonna\n\n490\n00:24:39.300 --> 00:24:42.024\nhave something different but\nbecause it's last name,\n\n491\n00:24:42.024 --> 00:24:45.740\na lot of people might have the same last\nname and you get a higher density, right?\n\n492\n00:24:45.740 --> 00:24:49.520\nBut I did LastName and FirstName so it\nhave to be somebody having the same First\n\n493\n00:24:49.520 --> 00:24:52.410\nand LastName to truly\nincrease the density.\n\n494\n00:24:52.410 --> 00:24:54.310\nSo my density is pretty low here.\n\n495\n00:24:54.310 --> 00:24:58.780\nMy average lengths, the columns that\nare included, LastName and FirstName, and\n\n496\n00:24:58.780 --> 00:25:01.920\nthen information about the ranges for\neach.\n\n497\n00:25:01.920 --> 00:25:06.660\nAnd because mine's a fairly unique column,\nI'm gonna see really small ranges here.\n\n498\n00:25:06.660 --> 00:25:10.120\nIf I had Smith and there are a bunch\nof people had a last name of Smith\n\n499\n00:25:10.120 --> 00:25:12.250\nthen I might see a higher range for those.\n\n500\n00:25:12.250 --> 00:25:14.590\nRight these distinct range rows\nmight be a higher number but\n\n501\n00:25:14.590 --> 00:25:16.330\nmine are pretty low here, right.\n\n502\n00:25:16.330 --> 00:25:19.260\nThose are the statistics that it's\ncalculating in the background.\n\n503\n00:25:19.260 --> 00:25:21.100\nAnd there's actually,\nI don't usually use this, but\n\n504\n00:25:21.100 --> 00:25:24.370\nthere's a little extra command I know\nsome people like so I'll show you guys.\n\n505\n00:25:24.370 --> 00:25:25.410\nWith, whoops.\n\n506\n00:25:26.660 --> 00:25:27.830\nWith histogram.\n\n507\n00:25:28.910 --> 00:25:32.150\nWith histogram makes it show that\ndata just a little bit different.\n\n508\n00:25:33.830 --> 00:25:35.760\nAnd so now,\nyou'll see that you're really just jumping\n\n509\n00:25:35.760 --> 00:25:36.880\ndown to that last little part.\n\n510\n00:25:36.880 --> 00:25:41.010\nWhen you see those range rows and the data\nthat's stored inside of them, and so\n\n511\n00:25:41.010 --> 00:25:42.440\nit kind of breaks that down.\n\n512\n00:25:42.440 --> 00:25:45.420\nIt needed that information and\nthat's it, right.\n\n513\n00:25:45.420 --> 00:25:48.050\nSo pretty straightforward command\nthere to get that output.\n\n514\n00:25:48.050 --> 00:25:49.700\nBut I normally run it\nwithout the with histogram,\n\n515\n00:25:49.700 --> 00:25:51.200\nbecause I kinda like\nthat summary at the top.\n\n516\n00:25:51.200 --> 00:25:53.080\nI use that more than I use the rest of it.\n\n517\n00:25:53.080 --> 00:25:56.230\nSo we can see those statistics exist,\nright.\n\n518\n00:25:56.230 --> 00:25:57.510\nThat's kind of important.\n\n519\n00:25:57.510 --> 00:25:59.600\n>> So then,\njust got a few commands to learn and\n\n520\n00:25:59.600 --> 00:26:01.620\nthen you're good to go\nwith some statistics.\n\n521\n00:26:01.620 --> 00:26:03.520\n>> Yeah.\nI mean I've showed you how to create it.\n\n522\n00:26:03.520 --> 00:26:05.170\nI haven't showed you really\nthe important part, right?\n\n523\n00:26:05.170 --> 00:26:06.720\nWhich is if you're going\nto be doing maintenance,\n\n524\n00:26:06.720 --> 00:26:08.140\nyou need to update these statistics.\n\n525\n00:26:08.140 --> 00:26:09.550\nThey need to be current.\n\n526\n00:26:09.550 --> 00:26:11.790\nAnd, you know, what are things\nthat can make them out of date?\n\n527\n00:26:11.790 --> 00:26:13.370\nIf you just did a bulk import.\n\n528\n00:26:13.370 --> 00:26:15.230\nIf you just deleted a lot of rows.\n\n529\n00:26:15.230 --> 00:26:18.860\nIf you just inserted a lot of rows,\nor if you just updated a lot of rows.\n\n530\n00:26:18.860 --> 00:26:20.750\nThat can make the statistics wrong.\n\n531\n00:26:20.750 --> 00:26:24.590\nAnd you have to wait for the next update\ninterval before that clears up and\n\n532\n00:26:24.590 --> 00:26:25.930\nnow you're up to date.\n\n533\n00:26:25.930 --> 00:26:30.290\nSo if I'm about to do an intensive query,\nor if I know I just did a big import or\n\n534\n00:26:30.290 --> 00:26:33.710\na bulk change, I might wanna\nmanually update those statistics.\n\n535\n00:26:33.710 --> 00:26:35.780\nI don't wanna have to wait for\nthat window to occur.\n\n536\n00:26:35.780 --> 00:26:37.640\nRight, and so\nthat's kinda the important part.\n\n537\n00:26:37.640 --> 00:26:41.100\nAnd I know some people script this and\nautomate it to happen at certain intervals\n\n538\n00:26:41.100 --> 00:26:43.990\nthe reality is Microsoft is already\nupdating it at certain intervals.\n\n539\n00:26:43.990 --> 00:26:47.280\nSo I just make it a part of\nany bulk change that I do.\n\n540\n00:26:47.280 --> 00:26:50.230\nAny bulk imports, bulk inserts,\nbulk updates, bulk deletes,\n\n541\n00:26:50.230 --> 00:26:54.640\nany stuff like that I always update the\nstatistics immediately afterwards, right.\n\n542\n00:26:54.640 --> 00:26:59.520\nAnd if you want to see that,\nall we have to do is\n\n543\n00:26:59.520 --> 00:27:05.040\nbasically jump in and verify that\nthey're created which I kind of already\n\n544\n00:27:05.040 --> 00:27:09.630\nshowed you how to do and then from there\nwe can actually jump in and do the update.\n\n545\n00:27:09.630 --> 00:27:14.480\nSo when you do an update on the statistics\nthere's two ways you can do it.\n\n546\n00:27:14.480 --> 00:27:15.960\nOne easy way is to just drop them.\n\n547\n00:27:15.960 --> 00:27:20.930\nI can say drop statistics and\nthen specify the statistics name.\n\n548\n00:27:20.930 --> 00:27:25.800\nSo I could say Employees.First,\nwhat did I call it, LastName_FirstName.\n\n549\n00:27:25.800 --> 00:27:26.989\nLastName_Firstname.\n\n550\n00:27:26.989 --> 00:27:30.002\nLike that and that'll delete and\nI then I can just recreate it again and\n\n551\n00:27:30.002 --> 00:27:31.942\nby doing that you know,\nyou get the latest and\n\n552\n00:27:31.942 --> 00:27:34.215\ngreatest statistics in your end business,\nright.\n\n553\n00:27:34.215 --> 00:27:36.806\nSo that's one way that\nyou can jump in there and\n\n554\n00:27:36.806 --> 00:27:41.525\nknock those out if you got AUTO_UPDATE\nstatistics turned on that's the other way,\n\n555\n00:27:41.525 --> 00:27:46.245\nright it'll just automatically update them\nand that is on by default, all right and\n\n556\n00:27:46.245 --> 00:27:49.130\nthen if you ever wanna see the statistics,\nright.\n\n557\n00:27:49.130 --> 00:27:50.600\nHow do I know when they're updated?\n\n558\n00:27:50.600 --> 00:27:53.450\nSo if I just drop them and\nrecreated them I know they're current.\n\n559\n00:27:53.450 --> 00:27:56.239\nBut if I am waiting for an auto update,\nthere's a little query we can run.\n\n560\n00:27:56.239 --> 00:28:00.839\nSo a minute ago when I ran the DBCC Show\nStatistics, right up in the top row of\n\n561\n00:28:00.839 --> 00:28:05.440\nthe information that was returned,\nwe can see where its got the last name,\n\n562\n00:28:05.440 --> 00:28:10.433\nfirst name updated, shows it was\nupdated January 12 2016 at 4:20 pm.\n\n563\n00:28:10.433 --> 00:28:14.554\nAnd if I want to update that right cuz\nthat's probably 15 minutes ago right, so\n\n564\n00:28:14.554 --> 00:28:17.980\nif I want to update that,\nI just performed some big action.\n\n565\n00:28:17.980 --> 00:28:21.970\nWell I could drop the statistics and\nrecreate them, that's one way.\n\n566\n00:28:21.970 --> 00:28:23.600\nOr I could just tell it to update.\n\n567\n00:28:23.600 --> 00:28:27.710\nAnd if I wanted to update the statistics\none of the easier ways to do it\n\n568\n00:28:27.710 --> 00:28:30.780\nis I'll just fire up\nanother query window here.\n\n569\n00:28:30.780 --> 00:28:35.420\nIn my new query window,\nI'm just gonna say update statistics, and\n\n570\n00:28:35.420 --> 00:28:37.440\nthen you specify the table name.\n\n571\n00:28:37.440 --> 00:28:38.320\nAll right?\n\n572\n00:28:38.320 --> 00:28:40.870\nYou don't update the statistics for\nan individual column.\n\n573\n00:28:40.870 --> 00:28:43.740\nIf you want that, that's where you've got\nto drop the statistics and re-add it.\n\n574\n00:28:43.740 --> 00:28:47.474\nBut if I just want to refresh the whole\ntable, that's where we can use the update\n\n575\n00:28:47.474 --> 00:28:50.167\nstatistics command, and\nI can just take that and run it.\n\n576\n00:28:50.167 --> 00:28:53.405\nAnd it just updated the statistics for\nthat entire table.\n\n577\n00:28:53.405 --> 00:28:57.205\nSo each column, and the aggregate ones\nthat I made, it's doing all those, or\n\n578\n00:28:57.205 --> 00:29:00.450\ncomposite ones, I guess,\nis what you're supposed to call them.\n\n579\n00:29:00.450 --> 00:29:04.630\nAnd then if I go back here and\nredo my DBCC show statistics, right, so\n\n580\n00:29:04.630 --> 00:29:05.738\nI'll just rerun that command.\n\n581\n00:29:05.738 --> 00:29:09.190\nWhen it re-runs now I can see January 12,\n2016 at 4:32 PM, so\n\n582\n00:29:09.190 --> 00:29:14.690\n12 minutes later I updated it.\n\n583\n00:29:14.690 --> 00:29:17.090\nOkay, so\nwe can see that update happened and\n\n584\n00:29:17.090 --> 00:29:20.090\nnow when I run queries I know that they\nare gonna have the best execution plan\n\n585\n00:29:20.090 --> 00:29:22.200\npossible with the information\nthat SQL has.\n\n586\n00:29:22.200 --> 00:29:25.670\nThat's important, that's the part we need\nto remember is if you're about to do some\n\n587\n00:29:25.670 --> 00:29:30.730\nhigh intensity operation it's a good idea\nto update your statistics before and\n\n588\n00:29:30.730 --> 00:29:32.850\nafter the high intensity operation.\n\n589\n00:29:32.850 --> 00:29:37.580\nIf it's a heavy read you might wanna\njust update them before you run it, but\n\n590\n00:29:37.580 --> 00:29:41.280\nif it's a heavy write you'll definitely\nwanna update it after you run it to make\n\n591\n00:29:41.280 --> 00:29:44.560\nsure the statistics are current for\neverybody else so that's basically it.\n\n592\n00:29:44.560 --> 00:29:49.580\n>> So obviously there's some thought\nprocess that goes behind these statistics.\n\n593\n00:29:49.580 --> 00:29:51.720\nYou can just turn them on and\njust willy nilly let them go.\n\n594\n00:29:51.720 --> 00:29:52.510\nThat will work.\n\n595\n00:29:52.510 --> 00:29:56.080\nBut if you want to optimize, there's some\ndifferent ways in which you can do that.\n\n596\n00:29:56.080 --> 00:29:56.920\nDon, that's awesome.\n\n597\n00:29:56.920 --> 00:30:01.390\nIs there anything else about statistics\nthat we need to know as an Azure DB?\n\n598\n00:30:01.390 --> 00:30:05.520\n>> There's a good bit more and I would\nsay if you're a DBA, that's where you,\n\n599\n00:30:05.520 --> 00:30:10.020\nif you're a database administrator and\nthat's all you do.\n\n600\n00:30:10.020 --> 00:30:11.420\nDefinitely read up on statistics.\n\n601\n00:30:11.420 --> 00:30:12.610\nThere's a lot more there.\n\n602\n00:30:12.610 --> 00:30:14.400\nYou can do what are called query hints,\n\n603\n00:30:14.400 --> 00:30:17.110\nthat really influence\nthe way that queries run.\n\n604\n00:30:17.110 --> 00:30:20.730\nFor a systems admin, it's a rare day\nto have to get involved with that.\n\n605\n00:30:20.730 --> 00:30:24.160\nBasically with a query hint, you're\nsaying that you know better than SQL.\n\n606\n00:30:24.160 --> 00:30:26.080\nAnd so\nyou're telling it the way to run a query.\n\n607\n00:30:26.080 --> 00:30:29.225\nAnd 99% of the time when\npeople do that they're wrong.\n\n608\n00:30:29.225 --> 00:30:32.220\n[LAUGH]\n>> Don't sugar coat it Don.\n\n609\n00:30:32.220 --> 00:30:35.450\n>> Yeah,\nI mean I can tell you I don't think I've\n\n610\n00:30:35.450 --> 00:30:38.370\never used a query to\neffectively tune a query.\n\n611\n00:30:38.370 --> 00:30:40.110\nBut the tools are there.\n\n612\n00:30:40.110 --> 00:30:42.930\nYou can override SQL's own decisions\nif you know better than it.\n\n613\n00:30:42.930 --> 00:30:46.270\nBut for most of us what I just showed\nyou there that's the main thing.\n\n614\n00:30:46.270 --> 00:30:50.310\nKey thing is by default,\nstatistics will get created for\n\n615\n00:30:50.310 --> 00:30:54.100\nyou, but you can turn them off,\nthey can get damaged, and so\n\n616\n00:30:54.100 --> 00:30:56.940\nit's a good idea to check to make sure\nthey're there, to do your updates,\n\n617\n00:30:56.940 --> 00:30:59.500\nmake sure that they're current,\nespecially before and\n\n618\n00:30:59.500 --> 00:31:03.140\nafter performing heavy heavy reader,\nheavy write operations.\n\n619\n00:31:03.140 --> 00:31:03.720\n>> Awesome stuff.\n\n620\n00:31:03.720 --> 00:31:04.430\nWell thank you so\n\n621\n00:31:04.430 --> 00:31:08.380\nmuch Don for enlightening us to what\nwe can use with these statistics,\n\n622\n00:31:08.380 --> 00:31:12.370\nhow we can plan for them, and make them\nbetter optimize our database queries.\n\n623\n00:31:12.370 --> 00:31:16.520\nSave some of the DTUs that were so\nprecious to our lives.\n\n624\n00:31:16.520 --> 00:31:19.000\nThat being said, Don,\nlooks like we've wrapped up another show.\n\n625\n00:31:19.000 --> 00:31:20.970\nWe've run out of time.\nWe're going to go ahead and sign off for\n\n626\n00:31:20.970 --> 00:31:21.690\nIT Pro TV.\n\n627\n00:31:21.690 --> 00:31:23.360\nI've been your host, Daniel Lowrie.\n\n628\n00:31:23.360 --> 00:31:23.990\n>> And I'm Don Pezet.\n\n629\n00:31:23.990 --> 00:31:24.541\n>> And we'll see you next time.\n\n630\n00:31:24.541 --> 00:31:31.680\n[MUSIC]\n\n",
          "vimeoId": "151774547"
        },
        {
          "description": "In this episode, Don and Daniel show you how to keep a watchful eye on your Azure SQL deployment by utilizing monitoring services. They start by exploring the Database Health check and looking at database events in the Azure SQL portal. They then show you how to monitor your database size and setup alerts to warn you when an action needs to be taken. Lastly, they demonstrate the Dynamic Management Views(DMVs) which works querying the database for specific information in real time.",
          "length": "1777",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-azuresql/techskills-azuresql-3-3-monitoring-azure_sql-111216-1.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-azuresql/techskills-azuresql-3-3-monitoring-azure_sql-111216-1-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-azuresql/techskills-azuresql-3-3-monitoring-azure_sql-111216-1-sm.jpg",
          "title": "Monitoring Azure SQL",
          "transcript": "WEBVTT\n\n1\n00:00:00.150 --> 00:00:10.150\n[MUSIC]\n\n2\n00:00:11.697 --> 00:00:16.170\nAll right, greetings, everyone and welcome\nto another exciting episode of ITPro TV.\n\n3\n00:00:16.170 --> 00:00:19.000\nI'm your host Daniel Lowrie and\nin this episode,\n\n4\n00:00:19.000 --> 00:00:22.180\nthat's right, we are continuing\non with our Azure SQL series.\n\n5\n00:00:22.180 --> 00:00:26.001\nAnd joining me yet again here today in\nthe studio to help us along with that,\n\n6\n00:00:26.001 --> 00:00:30.125\nand lend his expertise, which is a vast\nwealth of knowledge, my good friend Mr.\n\n7\n00:00:30.125 --> 00:00:30.749\nDon Pezet.\n\n8\n00:00:30.749 --> 00:00:31.978\nDon welcome back to the show.\n\n9\n00:00:31.978 --> 00:00:35.579\n>> Thanks for having me back Daniel, I'm\nready to jump back into the world of Azure\n\n10\n00:00:35.579 --> 00:00:39.397\nsequels, specifically taking a look at\nmonitoring our Azure sequel instances that\n\n11\n00:00:39.397 --> 00:00:42.400\nare up and running,\nup there in the Azure cloud.\n\n12\n00:00:42.400 --> 00:00:45.570\nWhen you create a database up\nin Azure SQL it's really nice\n\n13\n00:00:45.570 --> 00:00:48.440\nbecause Microsoft takes care\nof a lot of the stuff for you.\n\n14\n00:00:48.440 --> 00:00:50.020\nYou don't have to worry\nabout your hardware failing.\n\n15\n00:00:50.020 --> 00:00:51.100\nThey take care of that.\n\n16\n00:00:51.100 --> 00:00:54.810\nSo for the most part we don't\nhave to monitor it all that much.\n\n17\n00:00:54.810 --> 00:00:58.530\nBut believe me when something does\ngo wrong you want to be aware.\n\n18\n00:00:58.530 --> 00:01:01.100\nAnd by something going wrong it might\njust might be a SAAG in performance.\n\n19\n00:01:01.100 --> 00:01:03.270\nIt might not be that the database\nis actually offline.\n\n20\n00:01:03.270 --> 00:01:04.460\nBut we wanna be aware and so\n\n21\n00:01:04.460 --> 00:01:07.360\nwe need to be familiar with the various\ntools that Microsoft gives us for\n\n22\n00:01:07.360 --> 00:01:11.310\nmonitoring because it's a lot different\nthan monitoring a traditional server.\n\n23\n00:01:11.310 --> 00:01:15.140\nWhen you got an on premises SQL server\nthere's a whole suite of tools that we can\n\n24\n00:01:15.140 --> 00:01:19.690\nuse like the Windows performance monitor,\nthe SQL server profiler and\n\n25\n00:01:19.690 --> 00:01:21.780\nnone of those work against Azure SQL.\n\n26\n00:01:21.780 --> 00:01:25.190\nSo, we have to have a whole different\ntoolbox, to be able to get in and\n\n27\n00:01:25.190 --> 00:01:28.770\njust see how our performance is doing and\nunderstand when it might be time to\n\n28\n00:01:28.770 --> 00:01:33.400\nupgrade or when it might be time to get\ninto some queries, into some indexes.\n\n29\n00:01:33.400 --> 00:01:34.470\nAll important stuff to know.\n\n30\n00:01:34.470 --> 00:01:36.400\nThat's what we're going to take\na look at in this episode.\n\n31\n00:01:36.400 --> 00:01:38.630\n>> That's right, if you've been\nany kind of administrator for\n\n32\n00:01:38.630 --> 00:01:43.690\nany kind of time, you know you've\ngot that one folder in your email.\n\n33\n00:01:43.690 --> 00:01:46.450\nThat says deleted items, and\nthat's where you put all your alerts.\n\n34\n00:01:46.450 --> 00:01:47.272\nYou just throw them that way.\n\n35\n00:01:47.272 --> 00:01:49.010\n>> [LAUGH]\n>> But, we probably should\n\n36\n00:01:49.010 --> 00:01:52.370\npay a little more attention to a lot\nof the alerts that we delete, and\n\n37\n00:01:52.370 --> 00:01:53.252\nthat's kind of what we're doing today.\n\n38\n00:01:53.252 --> 00:01:56.240\nWe're gonna figure out how is it\ngoing to alert us, what should we be\n\n39\n00:01:56.240 --> 00:02:00.090\npaying attention to, so that we can react\nwhen something actually is going wrong.\n\n40\n00:02:00.090 --> 00:02:02.300\nAll right so there's two ways\nthat we can get our alert.\n\n41\n00:02:02.300 --> 00:02:07.580\nSo one is kind of proactively, where we\ngo and seek out the other alerts, right?\n\n42\n00:02:07.580 --> 00:02:10.660\nThe other way is reactively where\nit sends the alerts to us and\n\n43\n00:02:10.660 --> 00:02:12.610\nwe kind of just learn\nabout it after the fact.\n\n44\n00:02:12.610 --> 00:02:15.330\nIf you want to be proactive, you need\nto be logging into your portal and\n\n45\n00:02:15.330 --> 00:02:19.230\nstart setting up some alerts to message\nyou and give you that kind of heads up or\n\n46\n00:02:19.230 --> 00:02:21.670\nlook for these warnings before they occur.\n\n47\n00:02:21.670 --> 00:02:22.790\nMost people don't do that, right.\n\n48\n00:02:22.790 --> 00:02:24.940\nMost people see the error\nafter it already occurs.\n\n49\n00:02:24.940 --> 00:02:28.540\nAnd to show you where we see that,\nif you go into the Azure portal, right, so\n\n50\n00:02:28.540 --> 00:02:30.610\nI'm logged into the Azure\nportal right here.\n\n51\n00:02:30.610 --> 00:02:33.410\nAnd our first big thing is\nthis little bell right up top.\n\n52\n00:02:33.410 --> 00:02:36.240\nWhen you click on that, that means\nyou've got an alert of some sort.\n\n53\n00:02:36.240 --> 00:02:40.520\nAnd so you'll see up here I've got where\nI created a database from a backup\n\n54\n00:02:40.520 --> 00:02:42.700\nI had a failure creating\na database from backup.\n\n55\n00:02:42.700 --> 00:02:46.510\nIn fact, if you go and watch our backup\nepisode, that's the failure from restoring\n\n56\n00:02:46.510 --> 00:02:49.020\nthat one which I just reran, and then it\nworked just fine the next time, right?\n\n57\n00:02:49.020 --> 00:02:51.890\nSo you can spot that error and\nyou can take actions on it.\n\n58\n00:02:51.890 --> 00:02:53.920\nIf you get any error here,\nyou can click on it,\n\n59\n00:02:53.920 --> 00:02:59.010\nand it will take you into the error itself\nwhere it just gives you kind of a summary.\n\n60\n00:02:59.010 --> 00:03:01.550\nAnd it's really this part down here at\nthe bottom that when you click on it,\n\n61\n00:03:01.550 --> 00:03:03.820\nthat's where you get\nthe real details over here.\n\n62\n00:03:03.820 --> 00:03:07.230\nAnd you can see what happened and\nwhat action you need to take, if any.\n\n63\n00:03:07.230 --> 00:03:09.720\nThere may not be an action\nthat's necessary,\n\n64\n00:03:09.720 --> 00:03:11.318\ndepending on what you're looking at.\n\n65\n00:03:11.318 --> 00:03:14.780\nRight?\nSo just be aware of that.\n\n66\n00:03:14.780 --> 00:03:20.160\nNow, in my case notice how when I went\nto the bell, I clicked on the error,\n\n67\n00:03:20.160 --> 00:03:22.030\nbut after I clicked on the error\nit takes me over here, and\n\n68\n00:03:22.030 --> 00:03:24.050\nit's showing me status succeeded.\n\n69\n00:03:24.050 --> 00:03:28.770\nOkay, what happened is the job\nfailed here, and I rerun it.\n\n70\n00:03:28.770 --> 00:03:29.890\nIt succeeded the second time.\n\n71\n00:03:29.890 --> 00:03:32.800\nSo when I click on this, it's actually\ntaking me to the success because,\n\n72\n00:03:32.800 --> 00:03:34.310\nI basically reran that job.\n\n73\n00:03:34.310 --> 00:03:36.370\nSo I'm getting the latest\ninformation from that job.\n\n74\n00:03:36.370 --> 00:03:38.050\nNow it let's me know I don't\nneed to take any action.\n\n75\n00:03:38.050 --> 00:03:38.990\nIt's kind of done.\n\n76\n00:03:38.990 --> 00:03:41.420\nRight that's one place that we can get it.\n\n77\n00:03:41.420 --> 00:03:42.680\nAnother place we can go to look for\n\n78\n00:03:42.680 --> 00:03:45.970\ninformation is just what's called\nan Azure SQL health check.\n\n79\n00:03:45.970 --> 00:03:48.800\nWhen you take a look at your databases\nthere's this little health check that you\n\n80\n00:03:48.800 --> 00:03:51.870\ncan run that will verify everything's\nrunning nice and smooth and happy and\n\n81\n00:03:51.870 --> 00:03:56.910\nhealthy and if we wanna see that we\njust go under our SQL databases here and\n\n82\n00:03:56.910 --> 00:03:58.650\nyou pick the database that\nyou're worried about.\n\n83\n00:03:58.650 --> 00:04:00.940\nSo maybe I'll take sample DB two.\n\n84\n00:04:00.940 --> 00:04:01.550\nAll right.\n\n85\n00:04:01.550 --> 00:04:07.090\nAnd when I click on sample DB2,\nall the way over here on the right,\n\n86\n00:04:07.090 --> 00:04:09.450\nwe have this check health.\n\n87\n00:04:09.450 --> 00:04:12.910\nAnd when I go to check\nthe health on that system, well,\n\n88\n00:04:12.910 --> 00:04:16.490\nit's gonna kinda load up over here and\nwe'll start to see some basic information.\n\n89\n00:04:16.490 --> 00:04:20.120\nNow, if it's a brand new database,\nyou might get a message that says,\n\n90\n00:04:20.120 --> 00:04:23.720\njust hasn't collected enough datamine's\nold enough though that it's got data that\n\n91\n00:04:23.720 --> 00:04:28.427\nit knows that it's healthy, and so\nit says your SQL database is [LAUGH].\n\n92\n00:04:28.427 --> 00:04:30.130\n>> Is making you lose your mind.\n\n93\n00:04:30.130 --> 00:04:32.820\n>> We're going to get motion\nsickness checking our health here.\n\n94\n00:04:32.820 --> 00:04:34.660\nYour SQL database is running normally.\n\n95\n00:04:34.660 --> 00:04:35.680\nEverything's fine.\n\n96\n00:04:35.680 --> 00:04:37.350\nThey aren't aware of any problems.\n\n97\n00:04:37.350 --> 00:04:40.540\nIf Microsoft was aware of any kind\nof performance degradation or\n\n98\n00:04:40.540 --> 00:04:44.620\nanything under the hood that they were\nworking on you'd see it right here.\n\n99\n00:04:44.620 --> 00:04:47.620\nSo this is one of the first places\nI go to when somebody calls me and\n\n100\n00:04:47.620 --> 00:04:49.990\nsays hey databases run a little slow.\n\n101\n00:04:49.990 --> 00:04:52.820\nI come here because there might be an\nunderlying issue that Microsoft's already\n\n102\n00:04:52.820 --> 00:04:55.110\nworking on and it'll show up\nright here and it'll tell me.\n\n103\n00:04:55.110 --> 00:04:55.680\nRight?\nBut\n\n104\n00:04:55.680 --> 00:04:59.440\nif it says everything's running\nnormally and I still have a problem?\n\n105\n00:04:59.440 --> 00:05:00.450\nThen it's my problem.\n\n106\n00:05:00.450 --> 00:05:03.310\nIt's something that I've got to deal with,\ncuz as far as Microsoft is concerned,\n\n107\n00:05:03.310 --> 00:05:04.810\nthey're living up to all their SLA's.\n\n108\n00:05:04.810 --> 00:05:08.300\nThat's what this help check tells us is\nthat everything on Microsoft's check list\n\n109\n00:05:08.300 --> 00:05:09.420\nis a green light right now.\n\n110\n00:05:09.420 --> 00:05:11.140\nThat's one of the first places that I go.\n\n111\n00:05:12.240 --> 00:05:14.480\nAll right, other things that we can do.\n\n112\n00:05:14.480 --> 00:05:15.930\nWell, the help check is a part of it.\n\n113\n00:05:15.930 --> 00:05:19.140\nYou get your troubleshooter here, I'm not\nthe biggest fan of troubleshooters, but\n\n114\n00:05:19.140 --> 00:05:20.632\nyou can use them, it's certainly there.\n\n115\n00:05:20.632 --> 00:05:23.280\nAll right, we got that new support\nrequest where you can always reach out to\n\n116\n00:05:23.280 --> 00:05:26.000\nMicrosoft for help if it's\nsomething they're working on, but\n\n117\n00:05:26.000 --> 00:05:28.910\nif it's our problem,\nif it's something we need to deal with\n\n118\n00:05:28.910 --> 00:05:31.130\nthat we've got to monitor\nthe performance of our system.\n\n119\n00:05:31.130 --> 00:05:33.510\nThere's two ways to monitor performance.\n\n120\n00:05:33.510 --> 00:05:36.700\nOne, is to just go to the database and\n\n121\n00:05:36.700 --> 00:05:39.720\nright down here you've got\nthe monitoring section.\n\n122\n00:05:39.720 --> 00:05:43.940\nYou can jump in and\nlook at the resource utilization, and\n\n123\n00:05:43.940 --> 00:05:46.900\nsee kind of where you're at.\n\n124\n00:05:46.900 --> 00:05:49.740\nAnd here it's showing my DTU percentage.\n\n125\n00:05:49.740 --> 00:05:53.300\nSo each instance,\nwhen you spin it up, you pick a size.\n\n126\n00:05:53.300 --> 00:05:55.080\nAnd so I picked a S0.\n\n127\n00:05:55.080 --> 00:05:56.304\nAnd so I get ten DTUs.\n\n128\n00:05:56.304 --> 00:05:59.010\nAll right?\nAnd it's telling me that right here,\n\n129\n00:05:59.010 --> 00:06:02.000\nI peaked out and used 17% of my DTUs.\n\n130\n00:06:02.000 --> 00:06:03.840\nSo I used 1.7 DTUs at that point.\n\n131\n00:06:03.840 --> 00:06:07.185\nSo I've got plenty of room for\ngrowth here.\n\n132\n00:06:07.185 --> 00:06:09.560\nRight?\nMy server is not being taxed out.\n\n133\n00:06:09.560 --> 00:06:13.240\nBut if performance is low,\nI might see this up higher, at 100%.\n\n134\n00:06:13.240 --> 00:06:14.530\nAnd that tells me I got a problem.\n\n135\n00:06:14.530 --> 00:06:19.290\nNow we expect to spike right that happens\nthe things just get temporarily busy so\n\n136\n00:06:19.290 --> 00:06:22.380\njust because you hit 100% once\ndoesn't mean it's time to upgrade, but\n\n137\n00:06:22.380 --> 00:06:26.800\nif you're constantly cruising at 100%\nthat means you're being throttled and\n\n138\n00:06:26.800 --> 00:06:30.000\nif you're being throttled\nyou gotta make a choice.\n\n139\n00:06:30.000 --> 00:06:34.520\nEither you live within the boundaries\nyou chose with your pricing tier or\n\n140\n00:06:34.520 --> 00:06:35.720\nit's time to upgrade and\n\n141\n00:06:35.720 --> 00:06:39.520\nyou move it to an S1 or S2 and\nnow you get the higher performance level.\n\n142\n00:06:39.520 --> 00:06:40.070\nOkay.\n\n143\n00:06:40.070 --> 00:06:42.000\nAnd now, you have more DTUs available.\n\n144\n00:06:42.000 --> 00:06:42.900\nSo, this is a quick and\n\n145\n00:06:42.900 --> 00:06:46.200\neasy way to spot whether you're\ngetting performance due to throttling.\n\n146\n00:06:46.200 --> 00:06:46.780\nRight?\n\n147\n00:06:46.780 --> 00:06:51.030\nBut if my database is running slow or my\nDTUs look like it does here on my screen.\n\n148\n00:06:51.030 --> 00:06:53.380\nI'm not being throttled by Microsoft,\nI've got the hardware to handle it.\n\n149\n00:06:53.380 --> 00:06:57.480\nI've got some other problem that's causing\nmy transactions and stuff to run slow.\n\n150\n00:06:57.480 --> 00:06:59.370\nRight?\nAnd we've talked about indexes and\n\n151\n00:06:59.370 --> 00:07:02.350\nother things that might be able to\nimprove that performance, but for\n\n152\n00:07:02.350 --> 00:07:06.450\nthe most part,\nit's usually gonna be in DTUs.\n\n153\n00:07:06.450 --> 00:07:07.850\nRight?\n\n154\n00:07:07.850 --> 00:07:12.280\nFew other things, monitoring performance\nlike this, if I come in here and\n\n155\n00:07:12.280 --> 00:07:15.550\nlook at it, see how it's really\nonly showing me like the last hour.\n\n156\n00:07:15.550 --> 00:07:17.620\nRight?\nWhat if I wanna see more?\n\n157\n00:07:17.620 --> 00:07:20.560\nWell, you can click on it and\nthen over here it'll start to\n\n158\n00:07:20.560 --> 00:07:25.220\nshow the resource utilization and you can\nedit the chart to kinda change that range.\n\n159\n00:07:25.220 --> 00:07:29.280\nBut one of the really cool things\nis that you can add an alert.\n\n160\n00:07:29.280 --> 00:07:34.190\nAnd you could tell, hey if you've\nconsistently been running at 80% DTUs for\n\n161\n00:07:34.190 --> 00:07:37.010\nfive minutes or ten minutes or\nan hour a day, right?\n\n162\n00:07:37.010 --> 00:07:40.540\nIf you've been running at 80% DTUs,\nsend me an email so\n\n163\n00:07:40.540 --> 00:07:42.050\nthat I know what time to upgrade.\n\n164\n00:07:42.050 --> 00:07:45.670\nIn that way, I can go and\nupgrade before my users get.\n\n165\n00:07:45.670 --> 00:07:47.460\nDon't wait until it's cruising at 100%.\n\n166\n00:07:47.460 --> 00:07:51.390\nCatch it at when it's cruising at 80%,\nand now I can upgrade, and\n\n167\n00:07:51.390 --> 00:07:52.810\nusers never even know it.\n\n168\n00:07:52.810 --> 00:07:54.517\nRight.\nCuz you can upgrade your pricing tier\n\n169\n00:07:54.517 --> 00:07:55.798\nwhile the server's online.\n\n170\n00:07:55.798 --> 00:07:56.994\nIt doesn't even kick the users out.\n\n171\n00:07:56.994 --> 00:07:58.457\nThey just keep working right through it.\n\n172\n00:07:58.457 --> 00:08:00.210\nAnd now you get the extra\nhardware utilization.\n\n173\n00:08:00.210 --> 00:08:03.100\nSo, definitely a great way to\nbe able to check that out and\n\n174\n00:08:03.100 --> 00:08:07.280\nthese aren't the only alerts that we\ncan set up, there's actually a few.\n\n175\n00:08:07.280 --> 00:08:11.900\nIf I go back to my sample DB and\nwhen you browse browse in to\n\n176\n00:08:11.900 --> 00:08:17.110\nyour database on the, I'm not sure\nI can get the message to pull up.\n\n177\n00:08:17.110 --> 00:08:20.330\nThis is where the panel kind of starts\nto get a little on the crazy side.\n\n178\n00:08:20.330 --> 00:08:22.690\nIn fact, let me just navigate right\nback into this the normal way.\n\n179\n00:08:22.690 --> 00:08:26.970\nSo, I'm going to go back into my database,\nand when you go to monitor your database,\n\n180\n00:08:26.970 --> 00:08:30.630\nthose little monitoring screens and the\ninformation in it, that's pretty handy.\n\n181\n00:08:30.630 --> 00:08:34.820\nBut you've also got over\nhere on our little sidebar,\n\n182\n00:08:34.820 --> 00:08:37.110\nwe've got these alert\nrules that we can find.\n\n183\n00:08:37.110 --> 00:08:43.400\nAnd when you go into alert rules,\nthere's a lot of metrics beyond DTUs.\n\n184\n00:08:43.400 --> 00:08:46.530\nDTUs aren't necessarily the only\nthing that you wanna track.\n\n185\n00:08:46.530 --> 00:08:52.840\nIf I choose to add an alert, I can start\nto create alerts to monitor that database.\n\n186\n00:08:52.840 --> 00:08:55.930\nAnd what it's going to do is it's\ngoing to track the metric, and\n\n187\n00:08:55.930 --> 00:08:58.480\nemail me based on what the metric is.\n\n188\n00:08:58.480 --> 00:09:01.760\nAnd if you look at the metrics that are\navailable we've got blocked by firewall.\n\n189\n00:09:01.760 --> 00:09:05.400\nOkay, so how many people are trying\nto connect to this database and\n\n190\n00:09:05.400 --> 00:09:06.650\ngetting blocked by the firewall, right.\n\n191\n00:09:06.650 --> 00:09:09.580\nWe have to open up the firewall ports for\npeople to be able to connect.\n\n192\n00:09:09.580 --> 00:09:12.640\nI can see if I'm getting a lot\nof unauthorized access, and\n\n193\n00:09:12.640 --> 00:09:14.770\nthen I can see failed connections.\n\n194\n00:09:14.770 --> 00:09:17.310\nHow many people tried to connect but\nfailed?\n\n195\n00:09:17.310 --> 00:09:21.830\nBad password or bad version of their\nclient or something like that.\n\n196\n00:09:21.830 --> 00:09:23.540\nSuccessful connections, right?\n\n197\n00:09:23.540 --> 00:09:25.770\nThat's a great way to see how many\npeople are actually connected to\n\n198\n00:09:25.770 --> 00:09:27.540\nthe system right now.\n\n199\n00:09:27.540 --> 00:09:31.850\nCPU percentage, remember the DTU,\nthe Database Throughput Units?\n\n200\n00:09:31.850 --> 00:09:36.170\nDTU's are an aggregate metric\nthat's made up of CPU and\n\n201\n00:09:36.170 --> 00:09:39.270\ndisk IO and network bandwidth and\nit's kind of magic.\n\n202\n00:09:39.270 --> 00:09:43.420\nMicrosoft, they don't give us all of\nthe details about how that metric is\n\n203\n00:09:43.420 --> 00:09:45.680\ncalculated but it's pretty accurate.\n\n204\n00:09:45.680 --> 00:09:48.580\nYou know a DTU, for\nmost people represents,\n\n205\n00:09:48.580 --> 00:09:53.070\na single DTU represents a particular\nquery in any given second.\n\n206\n00:09:53.070 --> 00:09:55.650\nAnd so if I have ten DTU's that\nmeans I can usually handle about ten\n\n207\n00:09:55.650 --> 00:09:56.870\nqueries per second.\n\n208\n00:09:56.870 --> 00:09:58.460\nI say usually.\nYou know, some queries are big.\n\n209\n00:09:58.460 --> 00:09:59.310\nSome queries are small.\n\n210\n00:09:59.310 --> 00:10:01.950\nSo this is definitely kind\nof a ballpark type number.\n\n211\n00:10:01.950 --> 00:10:07.248\nBut you can specifically monitor\nCPU as well as log and data IO.\n\n212\n00:10:07.248 --> 00:10:10.970\nSo if you don't want to go with\nMicrosoft's DTU kind of aggregate metric,\n\n213\n00:10:10.970 --> 00:10:15.166\nyou can actually monitor the individual\npieces, and that's important because you\n\n214\n00:10:15.166 --> 00:10:18.888\nmight have a scenario where you're\ntrying to troubleshoot poor disc IO and\n\n215\n00:10:18.888 --> 00:10:21.275\nit turns out that you've\ngot cursors running.\n\n216\n00:10:21.275 --> 00:10:23.861\nAnd cursors aren't so bad on CPU but\nthey are bad on disc IO and\n\n217\n00:10:23.861 --> 00:10:27.339\nyou might want to switch those over to\na different technology to get around that.\n\n218\n00:10:28.470 --> 00:10:32.000\nWe've also got our total database size,\nwhich is a great way for\n\n219\n00:10:32.000 --> 00:10:33.850\nmonitoring our storage, right.\n\n220\n00:10:33.850 --> 00:10:38.136\nI know when I span up my s zero that I\nhave a maximum of 250 gigs of storage and.\n\n221\n00:10:38.136 --> 00:10:40.454\nIf I want more,\nI could go up to like an s five and\n\n222\n00:10:40.454 --> 00:10:44.080\nnow I'd get 500 gigs of storage or\nI could go all the way up to like a, or\n\n223\n00:10:44.080 --> 00:10:48.005\nactually no, I think that's still 250\ngigs, I think I have to go to premium\n\n224\n00:10:48.005 --> 00:10:51.780\nto get 500 gigs, I can go to a P11 and\nget terabyte of storage.\n\n225\n00:10:51.780 --> 00:10:54.940\nRight, I need to know my database size so\nI know when that happens.\n\n226\n00:10:54.940 --> 00:10:59.330\nThen I can define an alert that says when\nyou start getting close to that limit,\n\n227\n00:10:59.330 --> 00:11:00.100\nsend me an email.\n\n228\n00:11:00.100 --> 00:11:00.850\nLet me know.\n\n229\n00:11:00.850 --> 00:11:03.170\nOkay I know my limit is 250 gigs, so\n\n230\n00:11:03.170 --> 00:11:06.450\nI can create a limit before\nthat sends me an alert.\n\n231\n00:11:06.450 --> 00:11:09.430\nDatabase size percentage, so\nthe percentage of the max.\n\n232\n00:11:09.430 --> 00:11:12.025\nThat's a little bit more useful,\nif I create a database size alert for\n\n233\n00:11:12.025 --> 00:11:16.270\n250 gigs, and then I upgrade\nthis to a higher tier later.\n\n234\n00:11:16.270 --> 00:11:20.140\nI've now got a database that can go up to\n500 gigs, but my alert's still at 250.\n\n235\n00:11:20.140 --> 00:11:22.740\nI have to go and remember to go and\nedit the alert, right?\n\n236\n00:11:22.740 --> 00:11:26.610\nBut if I do a percentage,\nI can just say notify me at 90% or 80%.\n\n237\n00:11:26.610 --> 00:11:29.720\nAnd now if I change my pricing tier\nlater on I don't have to go back and\n\n238\n00:11:29.720 --> 00:11:30.390\nedit all my alerts.\n\n239\n00:11:30.390 --> 00:11:32.570\nThat's why most of these are percentages,\nright?\n\n240\n00:11:32.570 --> 00:11:34.640\nBecause you might change\nyour pricing tier.\n\n241\n00:11:34.640 --> 00:11:36.671\nAnd you don't want to have to edit\nall your alerts cuz you changed\n\n242\n00:11:36.671 --> 00:11:37.320\nyour pricing tier.\n\n243\n00:11:37.320 --> 00:11:41.410\nAnd then, we've got this new preview and\nI actually haven't used this one yet.\n\n244\n00:11:41.410 --> 00:11:46.690\nThe In-Memory OLTP storage percentage,\nthe online transaction process,\n\n245\n00:11:46.690 --> 00:11:50.100\nwhen you're sending transactions in,\nthey write to your transaction logs.\n\n246\n00:11:50.100 --> 00:11:53.080\nAnd Microsoft tries to keep your\ntransaction logs in RAM if they can.\n\n247\n00:11:53.080 --> 00:11:55.660\nBut you only get so\nmuch of that In-Memory, and so\n\n248\n00:11:55.660 --> 00:11:58.430\nwhat they're doing is letting you see\nhow much of that can be In-Memory, and\n\n249\n00:11:58.430 --> 00:11:59.800\nwhether you're utilizing it all.\n\n250\n00:11:59.800 --> 00:12:01.560\nThat's a preview, and\nby the time you watch this video,\n\n251\n00:12:01.560 --> 00:12:03.330\nthat might be a full production one.\n\n252\n00:12:03.330 --> 00:12:06.500\nI'm gonna do database size percentage,\nthat's a good one to monitor.\n\n253\n00:12:06.500 --> 00:12:08.380\nAll right, and once I choose that,\n\n254\n00:12:08.380 --> 00:12:11.140\nmy little chart here is gonna update\nto reflect what I'm currently at.\n\n255\n00:12:11.140 --> 00:12:15.300\nSee I'm kinda cruising at 1% of my\nstorage right now, so no big deal there.\n\n256\n00:12:15.300 --> 00:12:19.180\nBut what you don't wanna do is you don't\nwanna create an alert below your current\n\n257\n00:12:19.180 --> 00:12:23.060\nthreshold, or your current usage,\ncuz then your just gonna generate alerts.\n\n258\n00:12:23.060 --> 00:12:29.480\nThen I can set my conditions, I'll say if\nI'm at greater than, let's say 85%, okay?\n\n259\n00:12:29.480 --> 00:12:33.980\nIf I'm at greater than 85% for\nfive minutes, maybe something just\n\n260\n00:12:33.980 --> 00:12:37.800\nquickly happens that causes a spike,\nbut I can increase or decrease that.\n\n261\n00:12:37.800 --> 00:12:39.670\nNormally you want to increase it, right?\n\n262\n00:12:39.670 --> 00:12:40.960\nSo maybe 24 hours.\n\n263\n00:12:40.960 --> 00:12:46.930\nIf I go 24 hours and I'm still at 85% of\nmy storage, then it's time to upgrade.\n\n264\n00:12:46.930 --> 00:12:48.710\nRight, this wasn't a temporary thing.\n\n265\n00:12:48.710 --> 00:12:49.880\nSomebody added it and removed it.\n\n266\n00:12:49.880 --> 00:12:51.230\nThis is a long-term thing.\n\n267\n00:12:51.230 --> 00:12:52.850\nSo I need to upgrade.\n\n268\n00:12:52.850 --> 00:12:55.520\nAnd we can tell it to email and\nso I can send an email.\n\n269\n00:12:55.520 --> 00:12:57.000\nI'll send an email to don@itpro.tv.\n\n270\n00:12:57.000 --> 00:13:01.260\nSo I'll shoot me an email so that I\nknow that I'm running low on storage and\n\n271\n00:13:01.260 --> 00:13:02.740\nif you really want to go crazy,\n\n272\n00:13:02.740 --> 00:13:07.390\nmaybe you got a dev team that loves kind\nof experimenting with all this stuff.\n\n273\n00:13:07.390 --> 00:13:09.860\nAnd so\nthey can do what are called Webhooks.\n\n274\n00:13:09.860 --> 00:13:15.080\nAnd the way a Webhook works is whenever\nthe alert triggers, it will call this URL.\n\n275\n00:13:15.080 --> 00:13:18.150\nAnd so they could hit a PHP script or\n\n276\n00:13:18.150 --> 00:13:22.800\nsomething like that that triggers any\nnumber of things to take an action, right.\n\n277\n00:13:22.800 --> 00:13:25.650\nMaybe I want to have it where\nit hits a Webhook that then in\n\n278\n00:13:25.650 --> 00:13:28.690\nturn fires off an API call to Azure.\n\n279\n00:13:28.690 --> 00:13:31.740\nTo automatically bump me up to\nthe next service tier, right?\n\n280\n00:13:31.740 --> 00:13:34.510\nNow I've got monitoring\nhappen that heals itself\n\n281\n00:13:34.510 --> 00:13:35.860\nwhen a problem like that is detected.\n\n282\n00:13:35.860 --> 00:13:40.600\nAnd that's a really neat thing because I\ncan be asleep in the middle of the night,\n\n283\n00:13:40.600 --> 00:13:43.090\nI hit that threshold,\nit automatically upgrades.\n\n284\n00:13:43.090 --> 00:13:45.625\nWhen I wake up in the morning I get a nice\ne-mail telling me what happened, and\n\n285\n00:13:45.625 --> 00:13:46.639\nthat's the end of it, right?\n\n286\n00:13:46.639 --> 00:13:50.180\nSo that's kind of the power of\nwhat you can do with these alerts.\n\n287\n00:13:50.180 --> 00:13:53.690\nAnd you can use them as\nreactive monitoring.\n\n288\n00:13:53.690 --> 00:13:55.960\nBut even better is when\nyou use this proactive,\n\n289\n00:13:55.960 --> 00:13:59.320\nI'm catching that I'm running out\nof storage before it happens and\n\n290\n00:13:59.320 --> 00:14:01.625\nthen I can take actions\nlike using that Webhook.\n\n291\n00:14:02.770 --> 00:14:07.150\nAnd once that's done, let's see\nwhat error are they giving me here,\n\n292\n00:14:07.150 --> 00:14:12.530\nI hit some kind of error, I didn't give\nit a name, that's the easy one, right.\n\n293\n00:14:12.530 --> 00:14:15.620\nSo I need to give this a name so\nI'll call this like sample DB1\n\n294\n00:14:16.710 --> 00:14:20.680\nstorage alert, just so\nI can remember what it does.\n\n295\n00:14:20.680 --> 00:14:22.140\nPretty sure I can use underscores in that.\n\n296\n00:14:22.140 --> 00:14:23.300\nSometimes you can't.\n\n297\n00:14:23.300 --> 00:14:23.850\nThere we go.\n\n298\n00:14:23.850 --> 00:14:25.750\nGot a green check mark.\n\n299\n00:14:25.750 --> 00:14:28.670\nAnd we'll retry hitting OK.\n\n300\n00:14:28.670 --> 00:14:30.450\nI figured I configured something wrong.\n\n301\n00:14:30.450 --> 00:14:33.155\n>> Yeah,\nthat's usually the case with you, Don.\n\n302\n00:14:33.155 --> 00:14:35.441\n>> [LAUGH]\n>> Sometimes you bump into where you can't\n\n303\n00:14:35.441 --> 00:14:40.730\nset the, some metrics, you can't set the\ninterval as low as you might choose for\n\n304\n00:14:40.730 --> 00:14:42.500\nother metrics, and\nyou'll get alerts for that.\n\n305\n00:14:42.500 --> 00:14:43.890\nBut there we go.\nSo I've got an alert.\n\n306\n00:14:43.890 --> 00:14:45.500\nAnd you can see it's never been active.\n\n307\n00:14:45.500 --> 00:14:48.230\nIt's never actually triggered,\nbut I can see the alert.\n\n308\n00:14:48.230 --> 00:14:50.650\nIt's right there.\nI can then go and start to create more.\n\n309\n00:14:50.650 --> 00:14:54.050\nAnd now, the system is monitoring\nitself and reporting back to me.\n\n310\n00:14:54.050 --> 00:14:56.600\nAt a minimum,\nyou wanna configure these just so\n\n311\n00:14:56.600 --> 00:14:59.210\nyou can have historical\nrecords of your data.\n\n312\n00:14:59.210 --> 00:15:01.940\nMicrosoft's tracking a lot of that anyway,\nbut here it becomes really easy and\n\n313\n00:15:01.940 --> 00:15:04.330\nvisible to us and so I've got that alert.\n\n314\n00:15:04.330 --> 00:15:05.890\nWe can go and edit that alert.\n\n315\n00:15:05.890 --> 00:15:09.380\nChange its settings and we get a nice\nlittle chart here that'll show us,\n\n316\n00:15:09.380 --> 00:15:12.440\nas soon it loads, that information\nactually mine's new enough.\n\n317\n00:15:12.440 --> 00:15:13.420\nOh there we go, all right.\n\n318\n00:15:13.420 --> 00:15:15.450\nI was gonna say that mine's new enough\nthat it might not have data, but\n\n319\n00:15:15.450 --> 00:15:19.560\nyou'll see where it's actually gone\nback in time to get the data beforehand.\n\n320\n00:15:19.560 --> 00:15:21.190\nMy threshold's way up here.\n\n321\n00:15:21.190 --> 00:15:23.312\nHere's where I'm running at right now, and\n\n322\n00:15:23.312 --> 00:15:25.402\nit pulled that historical\ndata from Microsoft.\n\n323\n00:15:25.402 --> 00:15:29.540\nSo as long as they track it already,\nso it just jumps right back out here.\n\n324\n00:15:29.540 --> 00:15:32.090\n>> Well done.\nThat's obviously a lot of power involved\n\n325\n00:15:32.090 --> 00:15:33.240\nin these alerts.\n\n326\n00:15:33.240 --> 00:15:38.670\nI'm just thinking in my mind with regular,\nold, regular types of systems,\n\n327\n00:15:38.670 --> 00:15:41.830\nif you started running out of\ndatabase room, you have to go in and\n\n328\n00:15:41.830 --> 00:15:46.170\ninsert more drives, or connect it to\na different storage device, something.\n\n329\n00:15:46.170 --> 00:15:47.171\nYou have to take an action.\n\n330\n00:15:47.171 --> 00:15:51.398\nBeing able to just say hey, send me\nan e-mail and bump up my pricing tier, and\n\n331\n00:15:51.398 --> 00:15:55.449\nit just takes care of itself,\nthe problems, and I know what's going on.\n\n332\n00:15:55.449 --> 00:15:57.521\nThat's super awesome to be able to that,\nand\n\n333\n00:15:57.521 --> 00:15:59.710\na lot more power When it\ncomes to cloud-based.\n\n334\n00:15:59.710 --> 00:16:02.881\n>> Yeah, and this is a great alternative,\nlike the Windows Performance Monitor,\n\n335\n00:16:02.881 --> 00:16:04.419\ncuz this is running up in the cloud, and\n\n336\n00:16:04.419 --> 00:16:06.440\nyou don't have\nthe Windows Performance Monitor.\n\n337\n00:16:06.440 --> 00:16:09.760\nSo this is really the only option\nwhen you wanna monitor like that.\n\n338\n00:16:09.760 --> 00:16:13.000\nThere are a few other\nmonitoring operations in here.\n\n339\n00:16:13.000 --> 00:16:15.820\nI like the alerts,\ncuz they're gonna tell me ahead of time.\n\n340\n00:16:15.820 --> 00:16:18.770\nBut sometimes I just wanna see\nwhat the current performance is.\n\n341\n00:16:18.770 --> 00:16:23.124\nAnd so when I browse into a database,\nlet me just browse back into sample DB2.\n\n342\n00:16:23.124 --> 00:16:28.700\nSo I'll jump into sample DB2 and\nstart looking at the database, over\n\n343\n00:16:28.700 --> 00:16:33.540\nhere on the right side under monitoring,\nI went to Alert Rules a second ago.\n\n344\n00:16:33.540 --> 00:16:36.332\nWe've also got Database Size and Events.\n\n345\n00:16:36.332 --> 00:16:38.782\nDatabase size is just an quick, easy,\n\n346\n00:16:38.782 --> 00:16:43.476\npie chart type layout that shows I'm\nusing 5 megs, out of my 268 gigs.\n\n347\n00:16:43.476 --> 00:16:48.970\nNow, I said a minute ago that my limit\nwas 250 gigs, why does it show 268?\n\n348\n00:16:48.970 --> 00:16:51.590\nMicrosoft gives you a little overage,\nand part of that is accounting for\n\n349\n00:16:51.590 --> 00:16:54.280\ntransaction logs, and\nsystem data, and all that.\n\n350\n00:16:54.280 --> 00:16:56.910\nSo it's usually a little higher\nthan what you expect it to be.\n\n351\n00:16:56.910 --> 00:16:58.411\nBut there it is, I've got that, and\n\n352\n00:16:58.411 --> 00:17:00.839\nI can quickly and easily see\nwhat my storage is at right now.\n\n353\n00:17:00.839 --> 00:17:04.495\nBut it doesn't give me a trend over time,\nthis is just how it is right now.\n\n354\n00:17:04.495 --> 00:17:10.940\nAnd then events, think of events\nas like the event log in Windows.\n\n355\n00:17:10.940 --> 00:17:13.790\nNot the operating system event log,\nbut the SQL event log.\n\n356\n00:17:13.790 --> 00:17:18.483\nIf I choose Events, I get a nice little\nbar graph here that shows me, basically,\n\n357\n00:17:18.483 --> 00:17:21.742\nthe last week and\nhow many events have been kicking off.\n\n358\n00:17:21.742 --> 00:17:25.760\nAnd so when I look at this I can\nsee on January 12th, I had a few.\n\n359\n00:17:25.760 --> 00:17:28.801\nOn January 11th, I had more,\non January 10th, I had a few.\n\n360\n00:17:28.801 --> 00:17:31.900\nSo it looks like January\n11th was my big day.\n\n361\n00:17:31.900 --> 00:17:35.110\nAnd if I scroll down,\nI can see what those were.\n\n362\n00:17:35.110 --> 00:17:39.045\nSee as I float over the number changes,\nthere were 3 this day, 4 this day,\n\n363\n00:17:39.045 --> 00:17:40.260\n1 this day.\n\n364\n00:17:40.260 --> 00:17:43.796\nAnd you can even click those and\nstart to apply like a filter.\n\n365\n00:17:43.796 --> 00:17:48.251\nAnd so now I'm going to see all 8 or\nI can unclick these and drop down, so\n\n366\n00:17:48.251 --> 00:17:52.206\nI'm only seeing the one in\nthe alerts that are related to this.\n\n367\n00:17:52.206 --> 00:17:55.230\nSo you can create kind of\nlike filtering based on that.\n\n368\n00:17:55.230 --> 00:17:58.540\nAnd you'll see the four tiers of event.\n\n369\n00:17:58.540 --> 00:18:00.570\nYou can have critical,\nwhich means there's a problem.\n\n370\n00:18:00.570 --> 00:18:02.450\nYou need to deal with it.\n\n371\n00:18:02.450 --> 00:18:06.710\nError, a problem happened, but\nit's more than likely moved on from it.\n\n372\n00:18:06.710 --> 00:18:08.950\nYou still need to take action to\nfigure out why that error occurred,\n\n373\n00:18:08.950 --> 00:18:10.380\nprobably a bad query.\n\n374\n00:18:10.380 --> 00:18:14.032\nWarnings, a problem happened but, you\nlikely don't need to do anything about it.\n\n375\n00:18:14.032 --> 00:18:17.595\nAnd then, informational, it's just an\nupdate, there's rarely an action you need\n\n376\n00:18:17.595 --> 00:18:19.933\nto take for informational,\nit's just in that update.\n\n377\n00:18:19.933 --> 00:18:24.030\nAnd you'll see mine are all informational\nand so that's a good thing and you\n\n378\n00:18:24.030 --> 00:18:28.830\ncould see I restored the database, I ran\nsome QueryText, we wrote to a QueryStore.\n\n379\n00:18:28.830 --> 00:18:30.460\nSo a couple of different things happened.\n\n380\n00:18:30.460 --> 00:18:31.127\nIt's logging those events.\n\n381\n00:18:31.127 --> 00:18:33.104\nI can filter this and\nsearch for events, and\n\n382\n00:18:33.104 --> 00:18:36.754\none of the events that I usually look for\nare things like the missing statistics.\n\n383\n00:18:36.754 --> 00:18:39.242\nI think I mentioned that\nin the maintenance episode,\n\n384\n00:18:39.242 --> 00:18:42.960\nhow whenever you're missing statistics,\nthe system will generate an error.\n\n385\n00:18:42.960 --> 00:18:44.440\nYou'll see it right in here.\n\n386\n00:18:44.440 --> 00:18:46.510\nYou could search for\n\n387\n00:18:46.510 --> 00:18:50.790\nmissing and if it turns anything up\nthen you know you got a problem.\n\n388\n00:18:50.790 --> 00:18:52.660\nMine didn't turn anything up.\n\n389\n00:18:52.660 --> 00:18:55.680\nSo, quick and easy way to filter and\nfind information based on what you need.\n\n390\n00:18:56.900 --> 00:18:58.123\nSo these little events here.\n\n391\n00:18:58.123 --> 00:18:59.482\nOops.\n\n392\n00:18:59.482 --> 00:19:01.745\n[LAUGH] Working with the big-\n>> No Don.\n\n393\n00:19:01.745 --> 00:19:03.382\n[LAUGH]\n>> Do not look at these events.\n\n394\n00:19:03.382 --> 00:19:06.138\nSo with these events right here,\nbasically just a quick and\n\n395\n00:19:06.138 --> 00:19:09.608\neasy way to see what's going on in my\nsystem and what's been going on in this\n\n396\n00:19:09.608 --> 00:19:13.105\nsystem cuz this goes historical and\nis a replacement for the event viewer.\n\n397\n00:19:13.105 --> 00:19:16.310\nSo you don't have the event\nviewer in Azure SQL.\n\n398\n00:19:16.310 --> 00:19:18.420\nYou've got the database events right here.\n\n399\n00:19:18.420 --> 00:19:19.620\nAnd it is per database.\n\n400\n00:19:19.620 --> 00:19:21.060\nSo I could go to the other databases and\n\n401\n00:19:21.060 --> 00:19:23.450\nclick on their events, and\nI would see it filter down for them.\n\n402\n00:19:23.450 --> 00:19:24.690\n>> Yeah, so very, very cool stuff.\n\n403\n00:19:24.690 --> 00:19:25.950\nA lot of power built into Azure.\n\n404\n00:19:25.950 --> 00:19:28.402\nThey wanna make sure that just\nbecause you've gone to the cloud,\n\n405\n00:19:28.402 --> 00:19:30.769\nyou're not missing any kind of\nfunctionality or capability,\n\n406\n00:19:30.769 --> 00:19:33.329\nactually want to make that experience\nas good as humanly possible.\n\n407\n00:19:33.329 --> 00:19:35.175\nI think they've done\na pretty good job here.\n\n408\n00:19:35.175 --> 00:19:37.799\nNow, Don, when we were preparing for\nthis show,\n\n409\n00:19:37.799 --> 00:19:41.609\nyou kind of mentioned a term, or\nan acronym, it was DMV, and I was like,\n\n410\n00:19:41.609 --> 00:19:45.235\nwhat does SQL have to do with me\nrenewing my driver's license, but,\n\n411\n00:19:45.235 --> 00:19:48.294\nthat's apparently not what\nyou were talking about.\n\n412\n00:19:48.294 --> 00:19:49.625\nWhy don't you to help clarify that for us?\n\n413\n00:19:49.625 --> 00:19:53.492\n>> All right, one hesitation people have\nwith going to Azure SQL is that you do use\n\n414\n00:19:53.492 --> 00:19:55.611\na lot of control of the underlying server.\n\n415\n00:19:55.611 --> 00:19:58.631\nAnd you lose things like Windows\nperformance monitor, which can give you\n\n416\n00:19:58.631 --> 00:20:02.392\na lot of statistical information,\na lot of great data about your SQL server.\n\n417\n00:20:02.392 --> 00:20:06.750\nWell, way back in SQL 2005,\nMicrosoft introduced DMVs, and\n\n418\n00:20:06.750 --> 00:20:09.560\nthey're called dynamic management views.\n\n419\n00:20:09.560 --> 00:20:13.475\nAnd dynamic management views are like\nvirtual tables that store all of\n\n420\n00:20:13.475 --> 00:20:15.995\nthat statistical and performance data, and\n\n421\n00:20:15.995 --> 00:20:19.440\nyou can query those virtual\ntables to get that data.\n\n422\n00:20:19.440 --> 00:20:23.104\nIt was designed for on-premises servers,\nbut it still works in Azure SQL also.\n\n423\n00:20:23.104 --> 00:20:26.021\nSo even though I don't have access\nto the underlying hardware,\n\n424\n00:20:26.021 --> 00:20:28.299\nwhere that data is generated,\nI can still see it.\n\n425\n00:20:28.299 --> 00:20:33.087\nSo if you ever want to dig and look at\nthe raw performance data Inside of SQL,\n\n426\n00:20:33.087 --> 00:20:38.320\nlike from SQL's point of view, you can\njust access those DMVs and get at it.\n\n427\n00:20:38.320 --> 00:20:41.060\nThe only challenge with the DMVs\nis that they're kind of complex,\n\n428\n00:20:41.060 --> 00:20:42.810\nand there's a ton of them.\n\n429\n00:20:42.810 --> 00:20:43.341\nLet me show you what I mean.\n\n430\n00:20:43.341 --> 00:20:46.571\nSo, I've been using the Web portal, but\n\n431\n00:20:46.571 --> 00:20:50.273\nlet me switch over to my\nSQL Management Studio.\n\n432\n00:20:50.273 --> 00:20:52.386\nAnd when you browse into\nyour SQL server and\n\n433\n00:20:52.386 --> 00:20:56.626\nconnect up we're normally going down into\nour databases and driving down like that.\n\n434\n00:20:56.626 --> 00:21:01.223\nAnd when you look at the tables for\na database I've got dbo.Employees.\n\n435\n00:21:01.223 --> 00:21:03.708\nThat's the table I made, and\nthen there's system tables.\n\n436\n00:21:03.708 --> 00:21:06.773\nAnd if you start poking\naround in the system tables,\n\n437\n00:21:06.773 --> 00:21:10.272\nwhat you'll find is that it will\nshow up as empty like this.\n\n438\n00:21:10.272 --> 00:21:15.654\nAnd that's where we would normally find\na lot of those dynamic management views.\n\n439\n00:21:15.654 --> 00:21:18.889\nAnd then under the system databases\nup here for the server itself,\n\n440\n00:21:18.889 --> 00:21:22.010\nyou'd find your dynamic\nmanagement views in here, too.\n\n441\n00:21:22.010 --> 00:21:24.540\nIf we kind of start poking around\nagain and just kind of looking for\n\n442\n00:21:24.540 --> 00:21:26.370\nthose, you won't see them.\n\n443\n00:21:26.370 --> 00:21:30.260\nSo at first glance it looks like we\ndon't have access to the DMVs, but\n\n444\n00:21:30.260 --> 00:21:32.200\nI guarantee you they are all there.\n\n445\n00:21:32.200 --> 00:21:35.440\nSo if you've been reading out there\narticles on the Internet where people say\n\n446\n00:21:35.440 --> 00:21:37.680\nhey you can just query\nthis right from SQL.\n\n447\n00:21:37.680 --> 00:21:38.820\nThey're absolutely right.\n\n448\n00:21:38.820 --> 00:21:41.500\nI'm gonna show you a few examples,\nand in the show notes,\n\n449\n00:21:41.500 --> 00:21:45.020\nI'll link to an article that Microsoft put\nout on these so you can go and learn more.\n\n450\n00:21:45.020 --> 00:21:48.700\nBut for example, let's say I\nwanted to see my database size.\n\n451\n00:21:48.700 --> 00:21:51.110\nHow big is my database right now?\n\n452\n00:21:51.110 --> 00:21:54.130\nI know I can use the Web portal, or\n\n453\n00:21:54.130 --> 00:21:59.860\nI can use the sys.dm_db_partition_stats\ndynamic management view.\n\n454\n00:21:59.860 --> 00:22:03.680\nI can query that virtual table and\nI can pull the reserve page count,\n\n455\n00:22:03.680 --> 00:22:06.590\nwhich is the storage that\na database is eating up.\n\n456\n00:22:06.590 --> 00:22:09.970\nNow the problem is it returns it in,\nI believe it's just in bytes,\n\n457\n00:22:09.970 --> 00:22:11.840\nso, or even in bits.\n\n458\n00:22:11.840 --> 00:22:13.681\nSo we have a quick conversion\nto get it into megabytes.\n\n459\n00:22:13.681 --> 00:22:18.005\nBut if I run this, when it runs,\nI can come down here and\n\n460\n00:22:18.005 --> 00:22:21.390\nsee that my database is 4.8 megabytes.\n\n461\n00:22:21.390 --> 00:22:28.790\nNow we saw a minute ago that I was using\nlike 5.2 megs of my 268 gigs of storage.\n\n462\n00:22:28.790 --> 00:22:31.125\nSo this number is lower than that,\nwhy is that?\n\n463\n00:22:31.125 --> 00:22:35.450\nWell, remember there's the temp database,\nthe transaction logs, those things, right,\n\n464\n00:22:35.450 --> 00:22:38.310\nand so that's what gets me that total\nnumber that Microsoft was showing me.\n\n465\n00:22:38.310 --> 00:22:40.328\nThis is just the database itself.\n\n466\n00:22:40.328 --> 00:22:42.340\nI'm at 4.8 megs.\n\n467\n00:22:42.340 --> 00:22:45.690\nSo I can query that data and\nsee it thinks that management view.\n\n468\n00:22:45.690 --> 00:22:47.550\nAnd this one's a pretty\nstraightforward one.\n\n469\n00:22:47.550 --> 00:22:50.280\nWhat made this one hard was just me doing\nthe little conversion there to get it in\n\n470\n00:22:50.280 --> 00:22:51.500\nthe right size.\n\n471\n00:22:51.500 --> 00:22:54.510\nSome of the other ones can be\na little more complex, like this one.\n\n472\n00:22:54.510 --> 00:22:59.730\nIf I wanna see how many people\nare currently connected to mySQL server,\n\n473\n00:22:59.730 --> 00:23:02.830\nif performance is slow, maybe I've\ngot too many people connected so\n\n474\n00:23:02.830 --> 00:23:03.990\nI wanna pull that out.\n\n475\n00:23:03.990 --> 00:23:09.500\nWell, we can run a query against\nthe sys.dmexec connections and\n\n476\n00:23:09.500 --> 00:23:13.190\nif we correlate that data\nwith sys.dm exec sessions,\n\n477\n00:23:13.190 --> 00:23:15.280\nwe can build a table that has\na lot of good information.\n\n478\n00:23:15.280 --> 00:23:17.620\nThis is straight out of one\nof Microsoft's examples.\n\n479\n00:23:17.620 --> 00:23:22.770\nSo when I run this and\nit's gonna pull up a list down here.\n\n480\n00:23:22.770 --> 00:23:25.720\nAnd right now, I'm the only one who's\nconnected, and so it shows right here,\n\n481\n00:23:25.720 --> 00:23:26.470\nsession ID 51.\n\n482\n00:23:26.470 --> 00:23:28.610\nI've got a client called client 01.\n\n483\n00:23:28.610 --> 00:23:30.280\nThat's my laptop, and\n\n484\n00:23:30.280 --> 00:23:34.220\nit's using the Microsoft SQL\nManagement Studio in a Query window.\n\n485\n00:23:34.220 --> 00:23:35.530\nWhich is what you guys are seeing.\n\n486\n00:23:35.530 --> 00:23:37.430\nI'm the only connection\nto this server right now.\n\n487\n00:23:37.430 --> 00:23:40.380\nBut I would see anybody else that was\nconnected, their host name, what client\n\n488\n00:23:40.380 --> 00:23:44.250\nthey were using, and get an idea of how\nmuch work my system was currently doing.\n\n489\n00:23:45.870 --> 00:23:49.028\nAnother great example, top queries.\n\n490\n00:23:49.028 --> 00:23:53.690\nIf the server is running slow,\nif people are reporting poor performance,\n\n491\n00:23:53.690 --> 00:23:58.278\nthere may be suboptimal query, or\na query that the query itself is fine But\n\n492\n00:23:58.278 --> 00:24:01.386\nthat I might need to build\nindexes to improve and so\n\n493\n00:24:01.386 --> 00:24:06.010\nI can run a query like this which is\ngoing against sys.dmexequerystats.\n\n494\n00:24:06.010 --> 00:24:06.640\nRight?\n\n495\n00:24:06.640 --> 00:24:10.580\nAnd that dynamic management\nview is just query statistics.\n\n496\n00:24:10.580 --> 00:24:13.710\nSo it's gonna bring up\nthe queries that are running.\n\n497\n00:24:13.710 --> 00:24:17.236\nAnd then correlate that against\ndm_exec_sql_text which actually\n\n498\n00:24:17.236 --> 00:24:20.280\nhas the text,\nthe actual query that was written.\n\n499\n00:24:20.280 --> 00:24:24.350\nSo I can view what are my top queries and\nwhat's the actual query.\n\n500\n00:24:24.350 --> 00:24:25.590\nCuz I can then take that and copy it.\n\n501\n00:24:25.590 --> 00:24:28.570\nAnd then start to build\nindexes around it and test and\n\n502\n00:24:28.570 --> 00:24:31.610\nsee what I can do to kind of optimize\nthat query and make it run better.\n\n503\n00:24:31.610 --> 00:24:33.350\nMaybe it's a bad join or\n\n504\n00:24:33.350 --> 00:24:37.140\nsomething that's really just not\ndoing things in an optimal manner.\n\n505\n00:24:37.140 --> 00:24:39.370\nAnd we can kinda tweak that and\nfigure it out.\n\n506\n00:24:39.370 --> 00:24:42.590\nSo if I run this one,\nlet me just run that real quick.\n\n507\n00:24:42.590 --> 00:24:45.040\nI can see that here's my top five queries.\n\n508\n00:24:45.040 --> 00:24:48.140\nAnd it's top five because\nI put that right here.\n\n509\n00:24:48.140 --> 00:24:52.450\nYou could change that to top 10 or\nwhatever to get even more.\n\n510\n00:24:52.450 --> 00:24:56.220\nBut when I look at the queries,\nnotice the query hash and average CP time,\n\n511\n00:24:56.220 --> 00:24:57.990\nthat's what you'd normally get back.\n\n512\n00:24:57.990 --> 00:24:58.490\nRight?\n\n513\n00:24:58.490 --> 00:25:01.740\nSo, this one's actually taking\nquite a bit of CPU time and\n\n514\n00:25:01.740 --> 00:25:04.880\nthe query is select star from employees.\n\n515\n00:25:04.880 --> 00:25:06.130\nKinda hard to optimize that one.\n\n516\n00:25:06.130 --> 00:25:12.010\nI'm saying give me the whole employees\ntable, doesn't matter how many indexes\n\n517\n00:25:12.010 --> 00:25:16.800\nyou have, or statistics you have, when you\nrequest a whole table, that's not so good.\n\n518\n00:25:16.800 --> 00:25:18.700\nSo I might need to find\nout who's doing that.\n\n519\n00:25:18.700 --> 00:25:20.490\nWho is doing that and why?\n\n520\n00:25:20.490 --> 00:25:23.510\nDo they actually need the whole table or\ncould they just be querying a part of it?\n\n521\n00:25:23.510 --> 00:25:26.740\nMaybe they only need a few columns and\nthat could start to shrink that down.\n\n522\n00:25:26.740 --> 00:25:28.330\nBut when they do the whole one, right?\n\n523\n00:25:28.330 --> 00:25:31.080\nSo if you look down here\nI've got another query\n\n524\n00:25:31.080 --> 00:25:35.710\nthat is SELECT*FROM Employees\nWHERE LastName is LIKE 'S%'.\n\n525\n00:25:35.710 --> 00:25:38.880\nOkay, now they're just getting a subset.\n\n526\n00:25:38.880 --> 00:25:40.320\nAnd look at the difference.\n\n527\n00:25:40.320 --> 00:25:45.100\nIt was 16,604 for\nCPU time for the whole table,\n\n528\n00:25:45.100 --> 00:25:49.520\nversus only 3,835 for just getting\npeople's last name started with S.\n\n529\n00:25:49.520 --> 00:25:54.090\nSo, if I can get people to use\na more selective query, it actually\n\n530\n00:25:54.090 --> 00:25:58.030\nalleviates the burden on the server and\nit's mostly because of disc io right?\n\n531\n00:25:58.030 --> 00:26:01.420\nThen when you're reading more data\nup here than you were down here.\n\n532\n00:26:01.420 --> 00:26:03.110\nSo these are things that\nwe need to watch and\n\n533\n00:26:03.110 --> 00:26:07.450\nagain take action on to improve and the\ndynamic management views let you see that.\n\n534\n00:26:07.450 --> 00:26:09.930\nWe can also see those\nthrough other manners right?\n\n535\n00:26:09.930 --> 00:26:13.180\nThrough like the index\nadvisor in the query store.\n\n536\n00:26:13.180 --> 00:26:14.520\nThey're tracking this stuff, too.\n\n537\n00:26:14.520 --> 00:26:17.790\nSo a lot of this has a way to see this\nfrom the GUI if you have access, but\n\n538\n00:26:17.790 --> 00:26:21.040\nif you don't you can query it right\nhere through dynamic management views.\n\n539\n00:26:21.040 --> 00:26:22.340\nVery powerful stuff.\n\n540\n00:26:22.340 --> 00:26:25.480\nCheck out Microsoft's tech net site,\nthey have wealth of information on there.\n\n541\n00:26:25.480 --> 00:26:29.500\nThere's literally thousands of\ndynamic management views available.\n\n542\n00:26:29.500 --> 00:26:30.020\nTons of them.\n\n543\n00:26:30.020 --> 00:26:32.050\nYou can query all sorts of data.\n\n544\n00:26:32.050 --> 00:26:34.480\nYou just have to know how, and\nsome of it's pretty complex.\n\n545\n00:26:34.480 --> 00:26:37.783\n>> Well, Don, that's gonna help you out\na lot, cuz you're gonna look at that top\n\n546\n00:26:37.783 --> 00:26:41.160\nquery there, and it's gonna be me, and\nyou can come by and go, you are an idiot.\n\n547\n00:26:41.160 --> 00:26:44.595\nStop querying the entirety\nof our database for stuff.\n\n548\n00:26:44.595 --> 00:26:45.620\nOkay?\n>> You gotta figure\n\n549\n00:26:45.620 --> 00:26:47.230\nout which employee to terminate.\n\n550\n00:26:47.230 --> 00:26:47.900\n>> That's right.\n\n551\n00:26:47.900 --> 00:26:49.435\nWhere do you not cut the check?\n\n552\n00:26:49.435 --> 00:26:51.210\n[LAUGH]\n>> Sometimes it's human resources\n\n553\n00:26:51.210 --> 00:26:52.670\noptimization that solves the problem.\n\n554\n00:26:52.670 --> 00:26:53.820\n>> That's right.\n\n555\n00:26:53.820 --> 00:26:55.382\n>> Wealth of information, right?\n\n556\n00:26:55.382 --> 00:26:58.534\nSo, in the GUI we saw monitoring,\nwe saw the health check,\n\n557\n00:26:58.534 --> 00:27:00.120\nwe saw alerts and the events.\n\n558\n00:27:00.120 --> 00:27:02.149\nRight?\nAll different ways we can see what's going\n\n559\n00:27:02.149 --> 00:27:05.196\non on our server in the SQL management\nstudio, just through transac SQL,\n\n560\n00:27:05.196 --> 00:27:08.950\nwe've got dynamic management views where\nwe can query tons of performance data.\n\n561\n00:27:08.950 --> 00:27:11.230\nBetween those features,\n\n562\n00:27:11.230 --> 00:27:15.060\nyou really do have full view of\nthe performance of your system.\n\n563\n00:27:15.060 --> 00:27:18.530\nAnd we don't have to worry about\nthings like, can I ping the server,\n\n564\n00:27:18.530 --> 00:27:21.430\ncan I connect on that port,\nbecause Microsoft's tracking that.\n\n565\n00:27:21.430 --> 00:27:24.030\nI don't have to worry about,\nare the hard drives gonna fail,\n\n566\n00:27:24.030 --> 00:27:27.020\nare the redundant power supplies plugged\nin, Microsoft takes care of that.\n\n567\n00:27:27.020 --> 00:27:28.040\nI just care about performance.\n\n568\n00:27:28.040 --> 00:27:29.520\nThat's all I have to worry about.\n\n569\n00:27:29.520 --> 00:27:31.880\nAnd I've got full visibility into that.\n\n570\n00:27:31.880 --> 00:27:35.390\nSo even though I've lost some of\nthe tools I've used for years and years.\n\n571\n00:27:35.390 --> 00:27:37.340\nRight?\nSome things like Sequel Profiler,\n\n572\n00:27:37.340 --> 00:27:39.560\nI used it the first time 16 years ago.\n\n573\n00:27:39.560 --> 00:27:41.860\nSo I've used it a long time.\n\n574\n00:27:41.860 --> 00:27:46.140\nIt's gone now, but I don't really miss it,\nbecause I don't need it in the same way\n\n575\n00:27:46.140 --> 00:27:49.150\nthat I needed it before when I was\ndealing with on-premises servers.\n\n576\n00:27:49.150 --> 00:27:51.340\nSo the tools that we've got,\nvery powerful.\n\n577\n00:27:51.340 --> 00:27:54.180\nAnd there's even more\non the developer side.\n\n578\n00:27:54.180 --> 00:27:58.580\nThere's APIs where you can hook into\nAzure and get all sorts of crazy data and\n\n579\n00:27:58.580 --> 00:27:59.120\npull it there.\n\n580\n00:27:59.120 --> 00:28:03.705\nNow if, let me throw this out there,\nif you hate all this.\n\n581\n00:28:03.705 --> 00:28:08.670\nSo, you hate all that, you want that\nfull visibility, you want that control.\n\n582\n00:28:08.670 --> 00:28:15.830\nWell, the other option is don't use Azure\nSQL, instead use Azure Virtual Machines.\n\n583\n00:28:15.830 --> 00:28:20.860\nSpin up an Azure VM with SQL installed,\nMicrosoft's got them, and now you'll\n\n584\n00:28:20.860 --> 00:28:25.560\nhave access to the underlying operating\nsystem as well as the SQL install itself.\n\n585\n00:28:25.560 --> 00:28:28.380\nAnd you'll have all the old tools\nthat you're used to, you'll\n\n586\n00:28:28.380 --> 00:28:32.750\nhave the Windows performance monitor, the\nSQL profiler, all those things are there.\n\n587\n00:28:32.750 --> 00:28:35.540\nThe database engine tuning advisor,\nit's all there,\n\n588\n00:28:35.540 --> 00:28:39.680\nthe trade off is you've now taken\nfull control of that SQL install.\n\n589\n00:28:39.680 --> 00:28:41.590\nMicrosoft's not backing it up for you.\n\n590\n00:28:41.590 --> 00:28:43.920\nThey're not doing restores\nwhen a failure happens.\n\n591\n00:28:43.920 --> 00:28:46.550\nThey're not setting up\nautomated email alerts for you.\n\n592\n00:28:46.550 --> 00:28:48.230\nYou've gotta do all that on your own.\n\n593\n00:28:48.230 --> 00:28:50.670\nBut if you want that control,\nit's still there and\n\n594\n00:28:50.670 --> 00:28:52.870\nnow you just manage the server\nlike it's an on premises server.\n\n595\n00:28:52.870 --> 00:28:56.130\nSo you've got that functionality,\nthat choice is there for you to make.\n\n596\n00:28:56.130 --> 00:28:58.324\n>> Awesome, Don,\nthis has been a fascinating episode of.\n\n597\n00:28:58.324 --> 00:29:02.750\nI've thoroughly enjoyed learning about\nthis, cuz if you're a DB noob like myself,\n\n598\n00:29:02.750 --> 00:29:04.820\nthis stuff starts to really help you out.\n\n599\n00:29:04.820 --> 00:29:07.660\nCuz every now and then we do\nhave to do some SQL querying and\n\n600\n00:29:07.660 --> 00:29:09.190\nit can be burdensome.\n\n601\n00:29:09.190 --> 00:29:12.205\nAnd if we're going into the cloud to\nmess with Azure, and start doing that.\n\n602\n00:29:12.205 --> 00:29:17.200\nWell, having a full knowledge or\nat least an understanding of the options\n\n603\n00:29:17.200 --> 00:29:20.360\nlaid before you so Don thanks so\nmuch for this episode.\n\n604\n00:29:20.360 --> 00:29:22.790\nHopefully our viewers out there\ngot a lot from this as well.\n\n605\n00:29:22.790 --> 00:29:25.705\nThat being said we have exhausted\nour time for this show.\n\n606\n00:29:25.705 --> 00:29:27.005\nWe're gonna go ahead and close her down.\n\n607\n00:29:27.005 --> 00:29:30.045\nSigning off for IT Pro TV,\nI've been your host Daniel Lowery.\n\n608\n00:29:30.045 --> 00:29:30.885\n>> And I'm Don Pazet.\n\n609\n00:29:30.885 --> 00:29:31.865\n>> And we'll see you next time.\n\n610\n00:29:31.865 --> 00:29:37.490\n[MUSIC]\n\n",
          "vimeoId": "151774574"
        },
        {
          "description": "In this episode, Daniel and Don explain the concept and practice of scaling a Azure SQL database. Here they are going to show you how to scale your databases up or down, which can save costs, depending on your need. They also talk about scaling automation, which can help you scale your environment up and/or down at times when you know performance needs are going to change.",
          "length": "1584",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-azuresql/techskills-azuresql-3-4-scaling_up_down-121015-1.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-azuresql/techskills-azuresql-3-4-scaling_up_down-121015-1-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-azuresql/techskills-azuresql-3-4-scaling_up_down-121015-1-sm.jpg",
          "title": "Scaling Up/Down",
          "transcript": "WEBVTT\n\n1\n00:00:00.000 --> 00:00:10.000\n[MUSIC]\n\n2\n00:00:12.217 --> 00:00:15.920\nAll right, greetings everyone and welcome\nto another great episode of ITProTV.\n\n3\n00:00:15.920 --> 00:00:18.900\nI'm your host Daniel Lowrie and\nin today's episode,\n\n4\n00:00:18.900 --> 00:00:22.570\nwe're gonna continue taking\na look at Microsoft Azure SQL.\n\n5\n00:00:22.570 --> 00:00:26.560\nAnd joining us today in the studio is\nour resident expert on said topic and\n\n6\n00:00:26.560 --> 00:00:29.160\nthat is none other than Mr.\nDon Pezet himself.\n\n7\n00:00:29.160 --> 00:00:30.950\nDon, welcome to the show,\nhow are you doing today sir?\n\n8\n00:00:30.950 --> 00:00:33.240\n>> I'm doing great Daniel, thanks for\nhaving me back on the show and\n\n9\n00:00:33.240 --> 00:00:34.620\ntoday we're gonna be tackling a new topic.\n\n10\n00:00:34.620 --> 00:00:39.180\nWe're gonna take a look at scaling\nour database instances up and down.\n\n11\n00:00:39.180 --> 00:00:42.629\nRight, when we build up a database\ninstance, we have to pick a performance\n\n12\n00:00:42.629 --> 00:00:45.280\ntier for it and\nthat performance tier is not set in stone.\n\n13\n00:00:45.280 --> 00:00:50.370\nYou can change it after the fact and\nit really is a neat way to kind of\n\n14\n00:00:50.370 --> 00:00:54.360\nupgrade your system and do it online\nwithout taking the database offline.\n\n15\n00:00:54.360 --> 00:00:57.470\nIt's one of the best features of\nhaving your database up in Azure SQL.\n\n16\n00:00:57.470 --> 00:00:59.430\nSo we wanna see how to do that,\nhow it works and\n\n17\n00:00:59.430 --> 00:01:00.560\nkind of walk through that process.\n\n18\n00:01:00.560 --> 00:01:02.330\n>> Yeah, that sounds really cool,\nDon, and I'm guessin,\n\n19\n00:01:02.330 --> 00:01:05.360\nthe first thing that comes to my mind\nwhen we start talking about scaling\n\n20\n00:01:05.360 --> 00:01:07.880\nis what are some of the reasons\nthat I would do that.\n\n21\n00:01:07.880 --> 00:01:12.470\nIf I'm new to Azure SQL and\nI'm thinking maybe I need to do this.\n\n22\n00:01:12.470 --> 00:01:15.820\nWhat are the main reasons you\nwould see this happening?\n\n23\n00:01:15.820 --> 00:01:17.350\n>> So, there's several reasons.\n\n24\n00:01:17.350 --> 00:01:19.750\nThe most obvious one that comes to\nmind is you pick the wrong tier.\n\n25\n00:01:19.750 --> 00:01:22.620\nRight, it does happen and\nthen you've got to just go and correct it.\n\n26\n00:01:22.620 --> 00:01:24.850\nBut there's plenty of other reasons,\nright?\n\n27\n00:01:24.850 --> 00:01:27.850\nTypically when we deploy\na database into Azure SQL,\n\n28\n00:01:27.850 --> 00:01:30.570\nthe thing we have to remember and I know\nI've mentioned this in other episodes.\n\n29\n00:01:30.570 --> 00:01:34.060\nIs that unlike Azure VM,\nwhere when you spin up a VM,\n\n30\n00:01:34.060 --> 00:01:35.428\nif you're not gonna use it for a while.\n\n31\n00:01:35.428 --> 00:01:38.800\nYou can just shut it down and\nyou only pay for storage, with Azure SQL,\n\n32\n00:01:38.800 --> 00:01:41.150\nwhen you spin up a database,\nit's always up.\n\n33\n00:01:41.150 --> 00:01:42.600\nYou're always paying for it.\n\n34\n00:01:42.600 --> 00:01:44.670\nWhether you use it or not,\nyou're always paying for it and\n\n35\n00:01:44.670 --> 00:01:46.630\nthere's no way to just shut it down and\nsuspend it.\n\n36\n00:01:46.630 --> 00:01:48.140\nYou have to delete it, right?\n\n37\n00:01:48.140 --> 00:01:51.420\nSo what if I'm bringing up something for\ntest and development.\n\n38\n00:01:51.420 --> 00:01:53.590\nOr doing like what I do\nhere in the show and\n\n39\n00:01:53.590 --> 00:01:55.608\nI just need a database to\nshow you guys an example.\n\n40\n00:01:55.608 --> 00:01:58.920\nI don't wanna pay a ton of money for it,\nI just wanna whip up a simple database and\n\n41\n00:01:58.920 --> 00:02:00.020\nget it up and running.\n\n42\n00:02:00.020 --> 00:02:03.725\nWe could pick a low tier, one of\nthe lower performance levels to do that.\n\n43\n00:02:03.725 --> 00:02:08.680\nAnd then, when we're ready to move it\ninto production, we're done with testing,\n\n44\n00:02:08.680 --> 00:02:10.615\nwe had five users in there yesterday.\n\n45\n00:02:10.615 --> 00:02:13.220\nTomorrow we're gonna have\n5,000 users in there.\n\n46\n00:02:13.220 --> 00:02:16.680\nSo let's go ahead and\nbump it up to a higher tier, so\n\n47\n00:02:16.680 --> 00:02:20.090\nnow it's got the higher DTUs to\nbe able to handle that load.\n\n48\n00:02:20.090 --> 00:02:23.289\nThat is a big feature here for\nus to be able to do that.\n\n49\n00:02:23.289 --> 00:02:26.258\nSo when you go from testing\nto actual production,\n\n50\n00:02:26.258 --> 00:02:30.440\nyou bump up to the higher tier and\nnow you pay for the resources you use.\n\n51\n00:02:31.440 --> 00:02:34.390\nOn the same side,\nmaybe it's already in production,\n\n52\n00:02:34.390 --> 00:02:38.780\nmaybe I rolled out this database and at\nthis time last year, it was running fine.\n\n53\n00:02:38.780 --> 00:02:42.410\nBut my company's been doing great,\nthe database has been getting bigger and\n\n54\n00:02:42.410 --> 00:02:44.440\nI've got a lot more\nusers that are in there.\n\n55\n00:02:44.440 --> 00:02:47.860\nAnd so I might wanna bump up\nto a new performance tier\n\n56\n00:02:47.860 --> 00:02:49.910\njust to handle the increased\nload that I've got.\n\n57\n00:02:49.910 --> 00:02:51.315\nAnd when I say increased load,\n\n58\n00:02:51.315 --> 00:02:53.960\nwe gotta think about the different\ncharacteristics of each tier, right?\n\n59\n00:02:53.960 --> 00:02:57.160\nWhen you spin up an instance and\nyou pick the basic tier or\n\n60\n00:02:57.160 --> 00:02:59.220\nthe standard tier or whatever.\n\n61\n00:02:59.220 --> 00:03:02.180\nEach tier has different\nresources available to it and\n\n62\n00:03:02.180 --> 00:03:03.730\nyou can run out of those resources.\n\n63\n00:03:03.730 --> 00:03:06.650\nI'll bring up Microsoft's\npage here on the tiers.\n\n64\n00:03:06.650 --> 00:03:08.634\nBut the tears,\nthe sadness of a SQL database.\n\n65\n00:03:08.634 --> 00:03:11.484\n>> [LAUGH]\n>> So this is Microsoft's article on\n\n66\n00:03:11.484 --> 00:03:17.210\nthe Azure Documentation site, where they\nrun down the service tiers of Azure SQL.\n\n67\n00:03:17.210 --> 00:03:19.200\nAnd as you look at this,\n\n68\n00:03:19.200 --> 00:03:22.100\nwhat you'll see is some of\nthe things that we've talked about.\n\n69\n00:03:22.100 --> 00:03:23.460\nWe've really focused on DTUs.\n\n70\n00:03:23.460 --> 00:03:27.190\nThat's the one that I always talk about,\nthose database throughput units.\n\n71\n00:03:27.190 --> 00:03:30.410\nAnd you'll see it like the basic tier,\nyou've only got 5 DTUs.\n\n72\n00:03:30.410 --> 00:03:35.390\nBut as you start moving up into\nStandard and Premium, you get 10, 20,\n\n73\n00:03:35.390 --> 00:03:39.650\n50, 100 DTUs,\nall the way up to 1,750 DTUs.\n\n74\n00:03:39.650 --> 00:03:41.670\nSo if I'm monitoring my server and\n\n75\n00:03:41.670 --> 00:03:45.010\nI'm seeing that the amount of\nqueries that I'm pushing and so on.\n\n76\n00:03:45.010 --> 00:03:48.210\nIs just starting to\nreally hit too hard and\n\n77\n00:03:48.210 --> 00:03:51.340\nmy server can't keep up with it and\npeople are getting throttled.\n\n78\n00:03:51.340 --> 00:03:53.980\nThen I need to bump up to\nthe next year to get more DTUs.\n\n79\n00:03:53.980 --> 00:03:57.070\nAnd I showed you guys way back in the,\n\n80\n00:03:57.070 --> 00:03:58.890\nwas it the creating your\nfirst database episode?\n\n81\n00:03:58.890 --> 00:04:02.620\nIt was one of the early episodes, where I\nshowed you guys how you can monitor for\n\n82\n00:04:02.620 --> 00:04:04.430\nany of the queuing that happens.\n\n83\n00:04:04.430 --> 00:04:06.366\nTo let you know that hey,\nyou're being throttled,\n\n84\n00:04:06.366 --> 00:04:08.220\nthere's that throttling error metric.\n\n85\n00:04:08.220 --> 00:04:11.740\nThen if you start to see a hit,\nthat means you're running out of DTUs.\n\n86\n00:04:11.740 --> 00:04:13.930\nBut that's not the only\nthing you can run out of.\n\n87\n00:04:13.930 --> 00:04:17.870\nNotice that each database size\nhas a maximum database size.\n\n88\n00:04:17.870 --> 00:04:21.560\nIf I spin up a Basic for testing,\nI can leave 2 gigs of data.\n\n89\n00:04:21.560 --> 00:04:24.815\nMy production data might exceed that\nreally fast, so I might go to a Standard.\n\n90\n00:04:24.815 --> 00:04:29.830\nNow at a Standard,\nI might be only needing 10 DTUs.\n\n91\n00:04:29.830 --> 00:04:33.800\nBut if I've got more than 250 gigs of\ndata, it doesn't matter that I've got S1,\n\n92\n00:04:33.800 --> 00:04:37.240\nS2 and S3,\nthey're all limited to 250 gigs.\n\n93\n00:04:37.240 --> 00:04:38.520\nIf I need more storage,\n\n94\n00:04:38.520 --> 00:04:43.030\nI'm gonna have to bump up to a P1\neven though I only need 10 DTUs.\n\n95\n00:04:43.030 --> 00:04:46.980\nSo DTUs aren't the only reason\nwhy we might need to upgrade\n\n96\n00:04:46.980 --> 00:04:48.960\nif we just need more storage.\n\n97\n00:04:48.960 --> 00:04:50.880\nWe might have to bump up to a Premium or\n\n98\n00:04:50.880 --> 00:04:54.002\neven all the way up to a P11\nif the database is big enough.\n\n99\n00:04:54.002 --> 00:04:56.480\nIt's kind of sad in a way,\n\n100\n00:04:56.480 --> 00:05:01.330\nthat you might have just something\nthat needs 10 DTUs of access.\n\n101\n00:05:01.330 --> 00:05:02.560\nBut because it's a terabyte in size,\n\n102\n00:05:02.560 --> 00:05:04.450\nyou gotta go all they way\nup to a P11 to handle it.\n\n103\n00:05:04.450 --> 00:05:06.486\nAnd so there's other techniques for\nhandling that if you need to.\n\n104\n00:05:06.486 --> 00:05:10.860\nI'm gonna talk about scaling up and\nscaling down in this episode.\n\n105\n00:05:10.860 --> 00:05:12.285\nBut you can also do what's\ncalled scaling out.\n\n106\n00:05:12.285 --> 00:05:15.391\nAnd with scaling out, I could say boy,\n\n107\n00:05:15.391 --> 00:05:20.800\nI need a terabyte of database space,\nbut I only need ten DTUs.\n\n108\n00:05:20.800 --> 00:05:22.350\nAnd I don't wanna go up to a P11.\n\n109\n00:05:22.350 --> 00:05:27.220\nI think we saw earlier that if I do an S0,\nright, so that very base one,\n\n110\n00:05:27.220 --> 00:05:30.320\nI think an S0 cost about $15 a month.\n\n111\n00:05:30.320 --> 00:05:33.820\nFirst is a P11,\nthey cost about $7,000 a month.\n\n112\n00:05:33.820 --> 00:05:37.600\nRight, that's a huge difference and\nit's because of the increased DTUs.\n\n113\n00:05:37.600 --> 00:05:38.995\nSo if I wanted to scale out,\n\n114\n00:05:38.995 --> 00:05:41.866\nwhat I could do is say I need\na terrabyte of data, right?\n\n115\n00:05:41.866 --> 00:05:48.314\nSo I could spin up four S0s and\nI can do what's called database sharding,\n\n116\n00:05:48.314 --> 00:05:52.240\nI can shard my database into four pieces.\n\n117\n00:05:52.240 --> 00:05:57.650\nSo I had 250 gigs in one S0 instance,\nanother 250 gigs in another S0.\n\n118\n00:05:57.650 --> 00:06:02.590\nAnd I could have four of this S0s,\neach holding 250 gigs of data.\n\n119\n00:06:02.590 --> 00:06:05.650\nAnd I could have a shard controller\nthat when I did a look up\n\n120\n00:06:05.650 --> 00:06:09.650\nwould map to all four of those and\nI'd be able to see that information.\n\n121\n00:06:09.650 --> 00:06:13.440\nAnd that gets it to where I can\nhave a terabyte of storage and\n\n122\n00:06:13.440 --> 00:06:15.620\nonly 10 DTUs for each of those elements.\n\n123\n00:06:15.620 --> 00:06:17.790\nI end up with basically 40 DTUs.\n\n124\n00:06:17.790 --> 00:06:20.476\nSo now it's costing me,\nif each one's $15 a month,\n\n125\n00:06:20.476 --> 00:06:23.752\nyou end up with $60 a month\nversus $7,000 a month, right?\n\n126\n00:06:24.810 --> 00:06:27.030\nNow I'm not gonna tackle\nsharding in this series,\n\n127\n00:06:27.030 --> 00:06:29.480\nprobably not,\nI guess I might if I get really bored.\n\n128\n00:06:29.480 --> 00:06:32.080\nBut probably not because it's not\nsomething that we as system admins have to\n\n129\n00:06:32.080 --> 00:06:33.670\ndeal with, it's the developers.\n\n130\n00:06:33.670 --> 00:06:35.542\nRight, the developers when they\nwrite their queries and stuff,\n\n131\n00:06:35.542 --> 00:06:37.943\nthey have to make it where they know how\nto reach across these different databases.\n\n132\n00:06:37.943 --> 00:06:40.500\nSo it's really an application side thing.\n\n133\n00:06:40.500 --> 00:06:44.090\nBut that's one technique and\nthat's scaling out.\n\n134\n00:06:44.090 --> 00:06:47.840\nBut scaling up and scaling down,\nthose are certainly the easiest.\n\n135\n00:06:47.840 --> 00:06:52.200\nBecause at any time I can take an S0 and\nI can log into the Azure portal, and\n\n136\n00:06:52.200 --> 00:06:54.290\nI can say make it an S1.\n\n137\n00:06:54.290 --> 00:06:58.570\nAnd it will put in a request, and in the\nbackground it will transition from an S0\n\n138\n00:06:58.570 --> 00:07:01.660\nto an S1 and\nthe database never goes offline.\n\n139\n00:07:01.660 --> 00:07:06.830\nUsers can be in it, working, we just all\nof a sudden go from having 10 DTUs to 20.\n\n140\n00:07:06.830 --> 00:07:09.470\nNow there's other reasons you\nmight wanna move up that tier.\n\n141\n00:07:09.470 --> 00:07:12.290\nSo I've mentioned storage,\nI've mentioned DTUs, but\n\n142\n00:07:12.290 --> 00:07:15.120\nwe've also got Point-in-time restore.\n\n143\n00:07:15.120 --> 00:07:18.200\nNotice that the Basic,\nwe only get 7 days of retention.\n\n144\n00:07:18.200 --> 00:07:22.870\nWell, maybe I only have 2 gigs of data and\nmaybe 5 DTUs is enough for me.\n\n145\n00:07:22.870 --> 00:07:26.184\nBut I want 14 days of retention or\n35 days of retention.\n\n146\n00:07:26.184 --> 00:07:30.150\nAnd so I might wanna move to one of those\nhigher tiers to be able to do that.\n\n147\n00:07:30.150 --> 00:07:35.210\nAll right, other features that are tied\ninto it are Geo-replication, right?\n\n148\n00:07:35.210 --> 00:07:39.230\nIf I want redundant copies of my database,\nwell,\n\n149\n00:07:39.230 --> 00:07:44.660\nat the Basic tier, the Basic tier\nreally doesn't have live replication.\n\n150\n00:07:44.660 --> 00:07:47.580\nWhat it does is what's called Geo-Restore,\nwhich is kind of a lame name.\n\n151\n00:07:47.580 --> 00:07:50.924\nWhat it is,\nis they keep a backup of your database and\n\n152\n00:07:50.924 --> 00:07:54.352\nthey store the backup in another region,\nall right?\n\n153\n00:07:54.352 --> 00:07:58.356\nSo I might have a server in US East and\nthey store the backups for\n\n154\n00:07:58.356 --> 00:08:00.754\nit in US West, or wherever, right?\n\n155\n00:08:00.754 --> 00:08:07.170\nIf my server fails in US East,\nI can go to US West and restore my backup.\n\n156\n00:08:07.170 --> 00:08:09.610\nNow that means it's not\nimmediate failover,\n\n157\n00:08:09.610 --> 00:08:11.610\nit's not instant,\nI've got to go and do the restore.\n\n158\n00:08:11.610 --> 00:08:15.770\nIt's a manual process to restore it,\nso Geo-Restore, not very attractive.\n\n159\n00:08:15.770 --> 00:08:19.430\nIf this is a mission critical database,\nthat's not going to do.\n\n160\n00:08:19.430 --> 00:08:22.730\nIf I go to Standard though,\nI get Standard Geo-Replication.\n\n161\n00:08:22.730 --> 00:08:28.480\nWhere they're doing a live replication to\nanother region, and if a failure happens,\n\n162\n00:08:28.480 --> 00:08:31.560\nthey just activate the replica, and\nit goes active, and now you're up and\n\n163\n00:08:31.560 --> 00:08:34.790\nrunning in a other region, and\nwe'll talk about that in another episode.\n\n164\n00:08:34.790 --> 00:08:38.240\nIf we want to go active, where not\nonly are they doing a replica, but\n\n165\n00:08:38.240 --> 00:08:41.540\nwe can use the replica as a read only\ncopy and distribute our read axis to it.\n\n166\n00:08:41.540 --> 00:08:44.510\nYou get better performance,\nyou can do that if you go up to a premium.\n\n167\n00:08:44.510 --> 00:08:48.010\nSo I might want to move from standard\nto premium just to be able to do active\n\n168\n00:08:48.010 --> 00:08:49.440\nreplication, right?\n\n169\n00:08:49.440 --> 00:08:51.990\nI might not care about DTUs or\nsize at all.\n\n170\n00:08:51.990 --> 00:08:53.600\nI might just want active replication.\n\n171\n00:08:53.600 --> 00:08:55.730\nSo those are all reason and\n\n172\n00:08:55.730 --> 00:08:58.370\nthen the ones that we usually don't\nthink about are these guys down here.\n\n173\n00:08:58.370 --> 00:09:02.520\nMaximum concurrent request, maximum\nconcurrent logins, and maximum sessions.\n\n174\n00:09:02.520 --> 00:09:04.950\nEach database tier has a limit to these.\n\n175\n00:09:04.950 --> 00:09:07.320\nSo if you find you're\nrunning out of connections,\n\n176\n00:09:07.320 --> 00:09:09.740\nyou're running out of requests\nthat can be handled or\n\n177\n00:09:09.740 --> 00:09:12.948\nmaximum sessions, you can go and\njust bump your tier up.\n\n178\n00:09:12.948 --> 00:09:16.010\nAnd you'll just see as you go along here\nthe numbers get bigger and bigger and\n\n179\n00:09:16.010 --> 00:09:18.450\nbigger as we go along, and\nthat's how we correct from it.\n\n180\n00:09:18.450 --> 00:09:23.462\nThose are all great reasons of why we\nmight upgrade from one tier to another.\n\n181\n00:09:23.462 --> 00:09:27.498\n>> Awesome, well now that we know why we\nwould upgrade from one tier to another.\n\n182\n00:09:27.498 --> 00:09:30.720\nI say let's jump right into that and\nDon show us how do we actually do this,\n\n183\n00:09:30.720 --> 00:09:35.012\nhow do I change from one performance tier\nto the next if I see that as a necessity.\n\n184\n00:09:35.012 --> 00:09:39.940\n>> All right so fortunately it is super\neasy and Microsoft set out to make this\n\n185\n00:09:39.940 --> 00:09:44.640\nreally easy and that it can be done\nonline without service interruption so\n\n186\n00:09:44.640 --> 00:09:49.090\nat any time if you decide that you need to\nbump up to another tier, you can go and\n\n187\n00:09:49.090 --> 00:09:50.640\ndo it,\nyou don't have to notify your users,\n\n188\n00:09:50.640 --> 00:09:53.580\nyou don't have to notify your developers,\nyou can just do it live.\n\n189\n00:09:53.580 --> 00:09:59.170\nSo for me if I go here in to Azure and\nI go in to my SQL databases,\n\n190\n00:09:59.170 --> 00:10:02.750\nI can pull up my list of databases and\nI got this SampleDB2 right here.\n\n191\n00:10:02.750 --> 00:10:05.871\nThat we've kinda been working with and\nSampleDB2 if I click on it,\n\n192\n00:10:05.871 --> 00:10:09.320\nit's gonna come up, and\nit's gonna show me information about it.\n\n193\n00:10:09.320 --> 00:10:12.990\nAnd you'll see where I spun this one\nup as an S0 Standard, right there.\n\n194\n00:10:12.990 --> 00:10:14.480\nStandard with 10 DTUs.\n\n195\n00:10:14.480 --> 00:10:15.320\nSo that's what it is.\n\n196\n00:10:15.320 --> 00:10:16.390\nThat's how I brought it up.\n\n197\n00:10:16.390 --> 00:10:19.540\nAnd I brought it up as an S0 because I\nwas going to use it here in the show, and\n\n198\n00:10:19.540 --> 00:10:21.930\nI knew I wasn't going to run\nany real data against it.\n\n199\n00:10:21.930 --> 00:10:23.060\nWhy pay for more?\n\n200\n00:10:23.060 --> 00:10:26.528\nNow, I didn't do a basic, because I wanted\nto be able to show replication on this\n\n201\n00:10:26.528 --> 00:10:29.949\none, and you can't do that on a basic,\nso that's why I went with the standard.\n\n202\n00:10:29.949 --> 00:10:32.370\nBut maybe I start moving\nthis into production and\n\n203\n00:10:32.370 --> 00:10:36.091\nnow this database starts getting used\nmore and more starting to get busy and\n\n204\n00:10:36.091 --> 00:10:40.048\nI start seeing some throttling thresholds\nbeing hit or I start seeing some other\n\n205\n00:10:40.048 --> 00:10:43.443\nmetrics that indicate that this\njust can't handle the load right?\n\n206\n00:10:43.443 --> 00:10:48.271\nAnd remember you've got right down here at\nthe bottom of your screen where you can\n\n207\n00:10:48.271 --> 00:10:50.440\npull up the monitoring.\n\n208\n00:10:50.440 --> 00:10:53.620\nAnd so you can start to look\nat the service utilization.\n\n209\n00:10:53.620 --> 00:10:56.770\nAnd when you look at it you can kind\nof get this chart here and it shows.\n\n210\n00:10:56.770 --> 00:10:58.690\nAnd you'll see mine's basically flatlined.\n\n211\n00:10:58.690 --> 00:11:01.850\nAnd it's flatlined because\nI'm not really using it.\n\n212\n00:11:01.850 --> 00:11:04.230\nAnd then you've got your\nDTU percentage right there.\n\n213\n00:11:04.230 --> 00:11:07.420\nSo you can see how many DTUs\nyou're using at any given point.\n\n214\n00:11:07.420 --> 00:11:08.610\nThere's one little blip in there.\n\n215\n00:11:08.610 --> 00:11:09.470\nThere we go.\n\n216\n00:11:09.470 --> 00:11:13.230\nI actually used 0.07% of my\nutilization at one point.\n\n217\n00:11:13.230 --> 00:11:17.110\nSo you can see whether or not you're\nstarting to get a little too busy right?\n\n218\n00:11:17.110 --> 00:11:21.530\nSo if you're getting too busy\nit's time to bump up our tier.\n\n219\n00:11:21.530 --> 00:11:25.110\nAnd on the right side over here,\nunder settings, which if you don't see\n\n220\n00:11:25.110 --> 00:11:27.250\nthe settings pane you can just click\non the settings button right here.\n\n221\n00:11:27.250 --> 00:11:31.580\nOkay, when you go into the settings pane\nover here you've got your properties, and\n\n222\n00:11:31.580 --> 00:11:34.340\nthen there's your pricing tier,\nscale DTUs.\n\n223\n00:11:35.570 --> 00:11:40.100\nIf this one is in a EDTU pool, in one of\nthose Azure elastic pools, then you'll see\n\n224\n00:11:40.100 --> 00:11:43.600\nthe scale to pool instead because each\ninstance doesn't have its own scale.\n\n225\n00:11:43.600 --> 00:11:47.230\nBut this one's not in a pool so\nI've just got the pricing tier right here.\n\n226\n00:11:47.230 --> 00:11:51.340\nWhen I choose that it's going to\ntake me to the pricing tier picker\n\n227\n00:11:51.340 --> 00:11:52.240\nwhere I can pick.\n\n228\n00:11:52.240 --> 00:11:56.140\nAnd you can see they're recommending\nsome various tiers to me and\n\n229\n00:11:56.140 --> 00:11:59.120\nI basically just need to look for\nthe one that meets my needs.\n\n230\n00:11:59.120 --> 00:12:03.090\nAnd they give you kind of the highlights\nof why you might move from one to another,\n\n231\n00:12:03.090 --> 00:12:06.280\nwhich is mostly focusing on\nthe amount of DTU's and the size.\n\n232\n00:12:06.280 --> 00:12:08.550\nBut you'll see\nthe replication listed there.\n\n233\n00:12:08.550 --> 00:12:12.040\nIt's not telling me things like it\nsays I have point in time restore but\n\n234\n00:12:12.040 --> 00:12:14.760\nit doesn't tell me how far back\nit'll go right, it's not telling me\n\n235\n00:12:14.760 --> 00:12:17.670\nthe maximum concurrent connections, it's\nnot telling me other things like that.\n\n236\n00:12:17.670 --> 00:12:21.250\nSo there are other reasons to move but\nthese are the big ones right,\n\n237\n00:12:21.250 --> 00:12:22.830\nDTUs and storage.\n\n238\n00:12:22.830 --> 00:12:27.370\nSo I'm in S0 I might wanna go to a S1 so\nI can come down here to S1.\n\n239\n00:12:28.860 --> 00:12:30.510\nAnd I can just select that.\n\n240\n00:12:30.510 --> 00:12:34.880\nAnd you'll see that I was\nat $15 a month here and\n\n241\n00:12:34.880 --> 00:12:36.820\nnow if I choose an S1 I'm\ngoing to go up to $30 a month.\n\n242\n00:12:36.820 --> 00:12:40.430\nI'm going to get, well,\nno more storage, no more replication,\n\n243\n00:12:40.430 --> 00:12:41.830\nit's the same as an S0.\n\n244\n00:12:41.830 --> 00:12:44.640\nI'm really just getting more\nDTU's by making this change.\n\n245\n00:12:44.640 --> 00:12:48.450\nAll right, and so I can select that and\nonce I got that selected,\n\n246\n00:12:48.450 --> 00:12:50.460\nI can just hit this select\nbutton down at the bottom.\n\n247\n00:12:50.460 --> 00:12:53.200\nAnd it's going to submit a request,\nand that's important.\n\n248\n00:12:53.200 --> 00:12:56.650\nSee now notice up here, it doesn't say,\nhey we're upgrading right now.\n\n249\n00:12:56.650 --> 00:12:59.550\nIt says,\ndatabase scale request received for\n\n250\n00:12:59.550 --> 00:13:03.810\nSampleDB2 from S0 standard to S1 standard,\nall right?\n\n251\n00:13:03.810 --> 00:13:08.970\nThe reason it has to do a request,\nis your database is stored on a server.\n\n252\n00:13:08.970 --> 00:13:10.860\nAnd that server may or\n\n253\n00:13:10.860 --> 00:13:14.800\nmay not have enough resources to\nsupport this update, all right.\n\n254\n00:13:14.800 --> 00:13:18.020\nAnd so, it does it as a request\nbecause a couple of things might\n\n255\n00:13:18.020 --> 00:13:19.450\nhappen in the background.\n\n256\n00:13:19.450 --> 00:13:23.300\nFirst of, your server might be\nset to have enough resources but\n\n257\n00:13:23.300 --> 00:13:27.018\nthe underlying hardware that\nMicrosoft is using might not.\n\n258\n00:13:27.018 --> 00:13:30.107\nAnd so they might have to move your\nserver from one rack to another,\n\n259\n00:13:30.107 --> 00:13:31.328\nor they call them stamps.\n\n260\n00:13:31.328 --> 00:13:34.542\nThey might have to go from one stamp to\nanother to be able to have the available\n\n261\n00:13:34.542 --> 00:13:35.990\nresources, right?\n\n262\n00:13:35.990 --> 00:13:38.540\nThat's not gonna happen for\nme cuz I'm just bumping up DTUs,\n\n263\n00:13:38.540 --> 00:13:39.870\nbut I guess it is possible.\n\n264\n00:13:39.870 --> 00:13:43.060\nIf there just wasn't enough RAM, or\nCPU, or whatever to support my system,\n\n265\n00:13:43.060 --> 00:13:45.090\nthey might have to move me somewhere else.\n\n266\n00:13:45.090 --> 00:13:47.160\nThe other thing is this could fail.\n\n267\n00:13:47.160 --> 00:13:50.800\nIf that server doesn't have enough\nresources and I'm moving this into it,\n\n268\n00:13:50.800 --> 00:13:52.370\nthen I start to bump into a problem.\n\n269\n00:13:52.370 --> 00:13:57.580\nWhen you spin up a SQL server,\nthere's limits to how many\n\n270\n00:13:57.580 --> 00:14:00.370\nDTUs it can really support,\nand I might hit that limit.\n\n271\n00:14:00.370 --> 00:14:02.099\nAnd if that happens, I've got two choices.\n\n272\n00:14:02.099 --> 00:14:04.095\nOne, I can create more SQL servers.\n\n273\n00:14:04.095 --> 00:14:07.304\nThat's the route I normally go because\nyou don't really get charged for\n\n274\n00:14:07.304 --> 00:14:10.199\nthe underline SQL server you get\ncharged for the instances on it so\n\n275\n00:14:10.199 --> 00:14:11.786\nI just spit out more servers right?\n\n276\n00:14:11.786 --> 00:14:14.441\nOr two, you can do a support\nticket with Microsoft and\n\n277\n00:14:14.441 --> 00:14:16.979\nthey can bump up the resources\non an underlying VM,\n\n278\n00:14:16.979 --> 00:14:21.540\nyou can't do it yourself but they can and\nso you can always reach out to them.\n\n279\n00:14:21.540 --> 00:14:25.640\nI usually don't worry about either of\nthose scenarios unless this fails, right?\n\n280\n00:14:25.640 --> 00:14:26.350\nIf this fails,\n\n281\n00:14:26.350 --> 00:14:28.310\nthat's the easiest way to tell I'm\ngonna have to deal with something.\n\n282\n00:14:28.310 --> 00:14:29.840\nSo it's put that request in.\n\n283\n00:14:30.870 --> 00:14:34.340\nAnd if you kinda monitor it up here,\nyou really don't see all that much.\n\n284\n00:14:34.340 --> 00:14:36.350\nIf you click on it, it'll actually\ncome in and show you the ticket,\n\n285\n00:14:36.350 --> 00:14:39.120\nand you'll see that my scale\nrequest has been received.\n\n286\n00:14:39.120 --> 00:14:41.330\nAnd this is just informational.\n\n287\n00:14:41.330 --> 00:14:44.160\nBut if I wait a little bit longer\neventually this will switch to completed.\n\n288\n00:14:44.160 --> 00:14:46.355\nAnd that will let me\nknow that I'm now on S1.\n\n289\n00:14:46.355 --> 00:14:50.920\nIt doesn't happen immediately, it can\ntake a few moments and I sometimes make\n\n290\n00:14:50.920 --> 00:14:53.940\na mistake of saying yeah this can take\na long time and then it goes really fast.\n\n291\n00:14:53.940 --> 00:14:57.440\nBecause it really does depend on the\nbusyness of the data center, and the time\n\n292\n00:14:57.440 --> 00:15:00.830\nof the day you do it in and whether or not\nthat underlying server has to be moved.\n\n293\n00:15:01.880 --> 00:15:05.380\nThe other way I can monitor this is\nif I just go back to the database.\n\n294\n00:15:05.380 --> 00:15:10.440\nAnd notice right over here, my pricing\ntier is showing a standard S1 now, right?\n\n295\n00:15:10.440 --> 00:15:12.030\nSo it more than likely completed.\n\n296\n00:15:12.030 --> 00:15:15.610\nIf I browse into it, sure enough,\n\n297\n00:15:15.610 --> 00:15:18.800\nit is showing as an S1\nstandard with 20 DTUs now.\n\n298\n00:15:18.800 --> 00:15:21.400\nSo it has completed,\nand we're now upgraded.\n\n299\n00:15:21.400 --> 00:15:22.930\nI just scaled up.\n\n300\n00:15:22.930 --> 00:15:26.470\nAnd I've got more DTUs, so\npretty easy process right,\n\n301\n00:15:26.470 --> 00:15:27.760\nnot a whole heck of a lot to it.\n\n302\n00:15:27.760 --> 00:15:30.989\nYou can do this through the PowerShell\nalso if you wanna do it that way,\n\n303\n00:15:30.989 --> 00:15:34.710\nI'll put the command for that in the show\nnotes but via the UI, it's super easy,\n\n304\n00:15:34.710 --> 00:15:38.322\nyou just click on it, choose the new\npricing tier and now we've scaled up, and\n\n305\n00:15:38.322 --> 00:15:41.310\nI can even jump all the way\nup to a premium if I wanted.\n\n306\n00:15:41.310 --> 00:15:42.510\nAnd it's really no different.\n\n307\n00:15:42.510 --> 00:15:46.610\n>> Wow, I really like the ease of use\nwhen it comes to scaling up or down.\n\n308\n00:15:46.610 --> 00:15:49.845\nYou just basically click and say that's\nwhat I would like, thank you very much.\n\n309\n00:15:49.845 --> 00:15:53.095\nThey hopefully provision everything and\nit starts working correctly.\n\n310\n00:15:53.095 --> 00:15:55.475\nAnd I did say scaling down,\nDon, so I assume scaling down.\n\n311\n00:15:55.475 --> 00:15:59.469\nIt is basically the reverse of scaling up.\n\n312\n00:15:59.469 --> 00:16:03.285\nEverything that would give me a reason\nto scale up is kind of the opposite for\n\n313\n00:16:03.285 --> 00:16:04.310\nscaling down?\n\n314\n00:16:04.310 --> 00:16:06.050\n>> So, yes and no, right.\n\n315\n00:16:06.050 --> 00:16:08.040\nSo, yeah, it's basically the same process.\n\n316\n00:16:08.040 --> 00:16:09.710\nIf I want to scale this\ndatabase back down,\n\n317\n00:16:09.710 --> 00:16:11.580\nI just run through that same process.\n\n318\n00:16:11.580 --> 00:16:13.370\nSo, let me jump back in here and\nwe'll do that.\n\n319\n00:16:13.370 --> 00:16:17.260\nSo, here I am in that SampleDB2\nthat we just promoted to an S1.\n\n320\n00:16:17.260 --> 00:16:21.020\nSo I can go over here and\nchoose the pricing tier, and\n\n321\n00:16:21.020 --> 00:16:24.150\nI can go into the pricing tiers and\nI can pick, and I can pick a lower tier.\n\n322\n00:16:24.150 --> 00:16:27.890\nI can put it back to an S0, or\nI could even go way down and\n\n323\n00:16:27.890 --> 00:16:31.340\ngo down to a basic if I wanted.\n\n324\n00:16:31.340 --> 00:16:33.970\nWhen I do that, I can select that and\n\n325\n00:16:33.970 --> 00:16:38.000\nnow my database is going to become super\ncheap, and it's going to put in that tier\n\n326\n00:16:38.000 --> 00:16:43.810\nrequest to move me from\nan S1 down to a B Basic.\n\n327\n00:16:43.810 --> 00:16:46.040\nAnd it's going to downgrade me to that.\n\n328\n00:16:46.040 --> 00:16:48.468\nAnd just like the upscale,\nno big deal there, right?\n\n329\n00:16:48.468 --> 00:16:52.145\nExcept we do have to be careful.\n\n330\n00:16:52.145 --> 00:16:55.655\nWhen you upscale, there's very little bit,\nlittle to worry about, right.\n\n331\n00:16:55.655 --> 00:16:57.995\nI guess we have that underlying\nserver that can run out of resources.\n\n332\n00:16:57.995 --> 00:16:59.765\nThat's really the one thing we\nhave to worry about but otherwise,\n\n333\n00:16:59.765 --> 00:17:01.795\nyou can just scale up to\nyour heart's content.\n\n334\n00:17:01.795 --> 00:17:05.430\nBut when you scale down,\nremember the chart that I brought up.\n\n335\n00:17:05.430 --> 00:17:07.760\nThis guy right here, from Microsoft.\n\n336\n00:17:07.760 --> 00:17:11.670\nNow, when you look at this chart\nwe're adding resources as we go up.\n\n337\n00:17:11.670 --> 00:17:13.500\nThe database just gets bigger,\nstronger, faster.\n\n338\n00:17:13.500 --> 00:17:16.720\nYou know it's the six million\ndollar man of databases.\n\n339\n00:17:16.720 --> 00:17:21.500\nBut when we scaled down,\nwe're taking away resources.\n\n340\n00:17:21.500 --> 00:17:25.800\nNow when I go from 20\nDTUs down to five DTUs,\n\n341\n00:17:25.800 --> 00:17:29.100\nwhat we just did,\nI just went from an S1 down to a basic.\n\n342\n00:17:29.100 --> 00:17:31.620\nI went from 20 DTUs down to five.\n\n343\n00:17:31.620 --> 00:17:32.520\nOkay?\n\n344\n00:17:32.520 --> 00:17:34.190\nMy database is just going to get slower.\n\n345\n00:17:34.190 --> 00:17:35.550\nBut maybe I'm accounting for that.\n\n346\n00:17:35.550 --> 00:17:37.560\nThere was a peak time,\nit was the winter holidays,\n\n347\n00:17:37.560 --> 00:17:41.560\nI bumped up to 20 DTUs, and\nnow February rolls around,\n\n348\n00:17:41.560 --> 00:17:46.330\nsales are dying back down, so I lower\nit down to a basic five DTUs, right?\n\n349\n00:17:46.330 --> 00:17:49.340\nThat's fine, but what about storage?\n\n350\n00:17:49.340 --> 00:17:54.240\nI went from having 250 gigs of\nstorage down to only 2 gigs.\n\n351\n00:17:54.240 --> 00:17:56.860\nSo what if my database is 50 gigs in size?\n\n352\n00:17:58.180 --> 00:18:01.050\nThen I can't downscale to a basic.\n\n353\n00:18:01.050 --> 00:18:03.580\nYou can up scale to any tier, but\n\n354\n00:18:03.580 --> 00:18:07.750\nyou can only down scale to tiers that\nhave enough resources available to\n\n355\n00:18:07.750 --> 00:18:12.000\nsupport your database, so if your database\nhas more than two gigs of storage,\n\n356\n00:18:12.000 --> 00:18:15.950\nyou can't down scale to a basic until\nyou get that database sized down.\n\n357\n00:18:15.950 --> 00:18:19.900\nYou've got to start clearing down data,\nyou know removing tables.\n\n358\n00:18:19.900 --> 00:18:23.910\nOr instead of down-scaling,\nspin up a new instance, right,\n\n359\n00:18:23.910 --> 00:18:27.450\nthat has the smaller data set, but\notherwise you won't be able to downscale.\n\n360\n00:18:27.450 --> 00:18:31.190\nSo there are times where you can't\ndownscale, you can always upscale,\n\n361\n00:18:31.190 --> 00:18:35.370\nbut there is times we can't downscale and\nstorage is the big one, right?\n\n362\n00:18:35.370 --> 00:18:38.460\nSome of these other features\nthough may be I had it as a P1 and\n\n363\n00:18:38.460 --> 00:18:41.390\nI was doing Active Geo-Replication.\n\n364\n00:18:41.390 --> 00:18:45.190\nIf I downscale that down to a basic,\nwhat's that going to do?\n\n365\n00:18:45.190 --> 00:18:48.790\nIt's going to disable replication and it's\ngoing to delete the secondary servers,\n\n366\n00:18:48.790 --> 00:18:50.850\nbecause we can't replicate to them.\n\n367\n00:18:50.850 --> 00:18:53.190\nWell, it doesn't actually\ndelete the secondary servers.\n\n368\n00:18:53.190 --> 00:18:55.590\nWhat it does is it breaks it apart\nas its own standalone server.\n\n369\n00:18:55.590 --> 00:19:00.060\nAnd so now I've got my primary as\na basic and this backup is still up and\n\n370\n00:19:00.060 --> 00:19:02.890\nrunning as a P1 or whatever,\nand so you got a cost there.\n\n371\n00:19:02.890 --> 00:19:04.545\nSo you've got to be on the lookout for\nthat.\n\n372\n00:19:04.545 --> 00:19:07.540\nDown-scaling's a little more\nsensitive because of that.\n\n373\n00:19:07.540 --> 00:19:11.690\nIf I was just scaling for DTUs and\nthat was it, then it's not a big deal.\n\n374\n00:19:11.690 --> 00:19:14.780\nYou can go upscale, downscale,\ndo at your heart's content.\n\n375\n00:19:14.780 --> 00:19:18.780\nBut if you did it in storage or\nreplication or backup Windows,\n\n376\n00:19:18.780 --> 00:19:21.390\nif all that was involved,\nthen we've got to be careful.\n\n377\n00:19:21.390 --> 00:19:24.020\nI'm glad I said back up Windows,\nbecause if I was at a P1,\n\n378\n00:19:24.020 --> 00:19:27.160\nI could have 35 days of retention.\n\n379\n00:19:27.160 --> 00:19:32.520\nThe instant I go down to a basic,\nit deletes day eight through 35.\n\n380\n00:19:32.520 --> 00:19:35.760\nSo, if I down scaled to a basic for\nfive minutes and\n\n381\n00:19:35.760 --> 00:19:41.020\nthen upscaled back to a P1 again, I just\nlost 20 some odd days of backups, right?\n\n382\n00:19:41.020 --> 00:19:42.740\nAnd I can't get those back.\n\n383\n00:19:42.740 --> 00:19:44.220\nSo again, we've got to be careful.\n\n384\n00:19:44.220 --> 00:19:46.110\nDownscaling is just a little more risky,\n\n385\n00:19:46.110 --> 00:19:48.810\nthe steps for\ndoing it are the same, right?\n\n386\n00:19:48.810 --> 00:19:51.120\nWe just go to that pricing tier and\nwe change it.\n\n387\n00:19:51.120 --> 00:19:54.270\nIn fact mine should be done at this point,\nlet's see if we're done.\n\n388\n00:19:54.270 --> 00:19:57.080\nAnd let's see, oh it's not refreshed.\n\n389\n00:19:57.080 --> 00:19:58.420\nLet's go back here.\n\n390\n00:19:58.420 --> 00:19:59.130\nWe'll refresh this.\n\n391\n00:19:59.130 --> 00:20:02.470\nYou know your UI doesn't\nalways refresh right away.\n\n392\n00:20:02.470 --> 00:20:03.460\nThere we go.\n\n393\n00:20:03.460 --> 00:20:06.850\nSo I can see that my pricing\ntier is now Basic 5 DTUs.\n\n394\n00:20:06.850 --> 00:20:08.490\nSo no big deal down scaling.\n\n395\n00:20:08.490 --> 00:20:09.940\nWe just need to be aware of those caveats,\nright,\n\n396\n00:20:09.940 --> 00:20:12.670\nthe things that can kind of catch us and\nmake this not work.\n\n397\n00:20:12.670 --> 00:20:16.040\n>> Awesome, now Don, obviously,\nif we need to upscale,\n\n398\n00:20:16.040 --> 00:20:18.880\nwe're watching the performance of our\nservers, we're watching how much money\n\n399\n00:20:18.880 --> 00:20:23.760\nwe're spending, and usually, it seems\nto me anyway, that a lot of times,\n\n400\n00:20:23.760 --> 00:20:26.770\nespecially when it comes to a database,\nthey have their peaks and valleys.\n\n401\n00:20:26.770 --> 00:20:29.350\nThey have times when we\nneed performance and\n\n402\n00:20:29.350 --> 00:20:31.850\nthen there's times when we\ndon't need performance.\n\n403\n00:20:31.850 --> 00:20:36.740\nAs an admin, am I just going to have to\nmonitor this and adjust accordingly or\n\n404\n00:20:36.740 --> 00:20:38.705\nis there any way we can\nautomate that process?\n\n405\n00:20:38.705 --> 00:20:40.640\nBecause I'm all about automation.\n\n406\n00:20:40.640 --> 00:20:44.260\n>> All right this one's kind of a sticky,\nit's a sticky question right so\n\n407\n00:20:44.260 --> 00:20:47.770\nwhen we have things like web servers,\nyou can auto scale them.\n\n408\n00:20:47.770 --> 00:20:50.400\nYou can say all right this server's\ngetting really busy let's spin up some\n\n409\n00:20:50.400 --> 00:20:55.300\nmore clones, let's do a load balancer\nacross it and then start growing it and\n\n410\n00:20:55.300 --> 00:20:58.480\nit works great, and you can scale out\nto hundreds or thousands of servers and\n\n411\n00:20:58.480 --> 00:21:00.170\nreally get some great performance.\n\n412\n00:21:00.170 --> 00:21:01.990\nBut databases aren't like that.\n\n413\n00:21:01.990 --> 00:21:06.320\nBecause what you don't want\nis two people writing to\n\n414\n00:21:06.320 --> 00:21:08.530\ntwo different databases at the same time.\n\n415\n00:21:08.530 --> 00:21:10.220\nAnd then those records conflict.\n\n416\n00:21:10.220 --> 00:21:12.780\nRight?\nYou can't have conflicting records in\n\n417\n00:21:12.780 --> 00:21:13.640\na database.\n\n418\n00:21:13.640 --> 00:21:17.770\nSo you always need to be able\nto write to a single master.\n\n419\n00:21:17.770 --> 00:21:19.370\nYou can read from any number of services.\n\n420\n00:21:19.370 --> 00:21:20.280\nYou have read replicas.\n\n421\n00:21:20.280 --> 00:21:21.550\nPeople do that all the time, right.\n\n422\n00:21:21.550 --> 00:21:24.190\nAnd you can spin up read\nreplicas as you need them.\n\n423\n00:21:24.190 --> 00:21:29.650\nBut as far as writes, your writes really\nneed to go through a single server.\n\n424\n00:21:29.650 --> 00:21:34.460\nAnd so if you want to scale up, you really\njust have to monitor that single server.\n\n425\n00:21:34.460 --> 00:21:37.020\nThere's not automatic spinning\nup of another one, but\n\n426\n00:21:37.020 --> 00:21:40.680\nwe can do things like automate\ndoing a scale change like this.\n\n427\n00:21:40.680 --> 00:21:45.470\nSo maybe I know, come December,\nthings are going to get busy.\n\n428\n00:21:45.470 --> 00:21:49.270\nYou can use what's called Azure\nAutomation, and you can write a script\n\n429\n00:21:49.270 --> 00:21:55.330\nthat says take this instance right here\nand bump it up to a P1 on December 1st.\n\n430\n00:21:55.330 --> 00:21:59.530\nAnd then you can have it run again on\nJanuary 1st to move it back to an S2, or\n\n431\n00:21:59.530 --> 00:22:00.450\nwhatever, right?\n\n432\n00:22:00.450 --> 00:22:03.450\nSo you can automate that process just so\nyou don't forget.\n\n433\n00:22:03.450 --> 00:22:05.910\nBut you can't really\nkey it to performance.\n\n434\n00:22:05.910 --> 00:22:09.000\nYou can't say, watch if the server's\ngetting busy, and if it gets busy,\n\n435\n00:22:09.000 --> 00:22:10.580\nstart spinning it up, right?\n\n436\n00:22:10.580 --> 00:22:12.080\nWell, I shouldn't say you can't.\n\n437\n00:22:12.080 --> 00:22:12.610\nYou can do that.\n\n438\n00:22:12.610 --> 00:22:16.570\nYou can write trigger-based metrics that\nwatch for a metric to hit a certain value,\n\n439\n00:22:16.570 --> 00:22:17.450\nand then executes a command.\n\n440\n00:22:17.450 --> 00:22:19.490\nYou can do all that\nthrough Azure Automation.\n\n441\n00:22:19.490 --> 00:22:20.910\nBut, here's the problem.\n\n442\n00:22:20.910 --> 00:22:27.190\nMicrosoft limits scaling events on\na SQL database to four every 24 hours.\n\n443\n00:22:27.190 --> 00:22:29.330\nSo, take SampleDB2 here.\n\n444\n00:22:29.330 --> 00:22:31.299\nI've already burned up two of my scales,\nright?\n\n445\n00:22:31.299 --> 00:22:36.579\nI took me from an S0 to an S1,\n>> One.\n\n446\n00:22:36.579 --> 00:22:37.139\n>> Right, okay?\n\n447\n00:22:37.139 --> 00:22:38.650\nI'm already losing track of this.\n\n448\n00:22:38.650 --> 00:22:40.930\nThen I went from an S1 down to a basic.\n\n449\n00:22:40.930 --> 00:22:43.270\nSo, if I go in to this one and\ndo another tier change,\n\n450\n00:22:43.270 --> 00:22:48.340\nand I move it back to an S0,\nso I go ahead and do that.\n\n451\n00:22:48.340 --> 00:22:51.540\nWhen I put that change in,\nthere went my third one.\n\n452\n00:22:51.540 --> 00:22:54.368\nAnd if I do one more,\nit's now stuck for 24 hours,\n\n453\n00:22:54.368 --> 00:22:56.950\nI've got to wait until\ntomorrow to do anymore.\n\n454\n00:22:56.950 --> 00:23:00.325\nSo, if I'm trying to monitor\nin real time like okay,\n\n455\n00:23:00.325 --> 00:23:05.140\nserver gets busy at five PM, slows down\nat six PM, I can't react like that.\n\n456\n00:23:05.140 --> 00:23:08.520\nReacting on days, yes.\n\n457\n00:23:08.520 --> 00:23:12.600\nReacting on hours or minutes, not really,\nunless you can hold it to four\n\n458\n00:23:12.600 --> 00:23:15.820\nchanges per day, and that makes\nautomating it really, really hard.\n\n459\n00:23:15.820 --> 00:23:18.950\nSo we normally see companies doing\nthis based around things like months,\n\n460\n00:23:18.950 --> 00:23:22.480\nwhere they say all right,\nDecember is a high sales month.\n\n461\n00:23:22.480 --> 00:23:24.480\nWe're going to scale up our database.\n\n462\n00:23:24.480 --> 00:23:28.480\nOr maybe you're a tax company and so here\nin the United States our taxes are due in\n\n463\n00:23:28.480 --> 00:23:33.400\nApril 15th, so you say in March and\nApril, we spin up our databases\n\n464\n00:23:33.400 --> 00:23:38.290\nto handle more connections, and then come\nMay we just scale it back down again.\n\n465\n00:23:38.290 --> 00:23:41.800\nSo those are done on a month and\nyou could automate that pretty easily and\n\n466\n00:23:41.800 --> 00:23:43.210\nthat would knock it out or\n\n467\n00:23:43.210 --> 00:23:45.800\nyou could just do it by hand,\nbecause it's not such a precise thing,\n\n468\n00:23:45.800 --> 00:23:49.890\nbut when you do things by hand that means\nthat there's an opportunity to forget, and\n\n469\n00:23:49.890 --> 00:23:54.580\nso automating helps out so we're going\nto do an episode on Azure automation.\n\n470\n00:23:54.580 --> 00:23:56.700\nBecause Azure automation it\ndoesn't just apply to Siclure,\n\n471\n00:23:56.700 --> 00:24:00.240\nit applies to all of Azure and\nyou can automate all sorts of things but\n\n472\n00:24:00.240 --> 00:24:03.560\nI want to show here, because it takes a\nfew steps to get it setup, authentication\n\n473\n00:24:03.560 --> 00:24:06.210\nis kind of a trick with that so\nwe got a few things to worry about there.\n\n474\n00:24:06.210 --> 00:24:07.500\nBut I'll show you how to do it and\n\n475\n00:24:07.500 --> 00:24:10.340\nwe'll do like a scale up,\nscale down with automation there.\n\n476\n00:24:10.340 --> 00:24:13.370\nBut just remember,\nfour scaling events per day,\n\n477\n00:24:13.370 --> 00:24:15.110\nthat's your limit,\nbig key thing to remember.\n\n478\n00:24:15.110 --> 00:24:18.330\n>> Awesome, well Don is there anything\nelse that we need to know about scaling\n\n479\n00:24:18.330 --> 00:24:19.610\nwhen it comes to Azure SQL?\n\n480\n00:24:20.650 --> 00:24:23.770\n>> That's basically it,\ndo be aware that Microsoft does add\n\n481\n00:24:23.770 --> 00:24:26.850\nnew tiers all the time and\nsometimes they remove tiers.\n\n482\n00:24:26.850 --> 00:24:31.630\nNow that's important, for example,\nif I go here into my pricing tiers and\n\n483\n00:24:31.630 --> 00:24:33.340\nI look at what's available.\n\n484\n00:24:33.340 --> 00:24:35.540\nIt's going to give me a warning\nbecause an update is in progress.\n\n485\n00:24:35.540 --> 00:24:40.530\nBut if we look at the available tiers\nsee how I've got P one, P two, P four.\n\n486\n00:24:40.530 --> 00:24:42.380\nWhere did P three go?\n\n487\n00:24:42.380 --> 00:24:46.710\nRight there did used to be a P three,\nit was there and it's gone.\n\n488\n00:24:46.710 --> 00:24:53.670\nAnd then we've got P six and P eleven, and\nP three was actually replaced by P three.\n\n489\n00:24:53.670 --> 00:24:59.300\nSo if you're on an older tier that\ndoesn't exist anymore, you've got it,\n\n490\n00:24:59.300 --> 00:25:03.760\nit'll still run it whatever that tier was,\nbut if you upscale or downscale to\n\n491\n00:25:03.760 --> 00:25:07.080\nsomething else, you won't be able to\nreturn to that tier that's now gone.\n\n492\n00:25:07.080 --> 00:25:08.140\nAll right?\n\n493\n00:25:08.140 --> 00:25:11.770\nSo be aware of,\ndid my request just finish, oh it did.\n\n494\n00:25:11.770 --> 00:25:12.390\nYep.\nSo\n\n495\n00:25:12.390 --> 00:25:16.280\njust be aware if If you're on an old\ntier that's gone, that's fine.\n\n496\n00:25:16.280 --> 00:25:17.310\nYou can stay on that tier forever.\n\n497\n00:25:17.310 --> 00:25:19.860\nMicrosoft won't kick you out, or\nat least they haven't done it yet.\n\n498\n00:25:19.860 --> 00:25:21.970\nBut if you move away from it\nyou won't be able to come back.\n\n499\n00:25:21.970 --> 00:25:23.970\nAnd that's not normally a big deal.\n\n500\n00:25:23.970 --> 00:25:25.870\nIf your tier's been replaced,\n\n501\n00:25:25.870 --> 00:25:29.800\nthat usually means there's a new tier\nthat's a better value proposition.\n\n502\n00:25:29.800 --> 00:25:35.320\nAnd sometimes Microsoft will just update\na tier on its own, so like the basic one.\n\n503\n00:25:35.320 --> 00:25:38.330\nThe basic one used to only be one DTU.\n\n504\n00:25:38.330 --> 00:25:43.740\nAnd when they updated it, they updated\nit so that basic had five DTUs.\n\n505\n00:25:43.740 --> 00:25:46.690\nBut it was still just the basic tier,\nso it just all of a sudden updated and\n\n506\n00:25:46.690 --> 00:25:47.710\nthat was that.\n\n507\n00:25:47.710 --> 00:25:51.630\nBut sometimes they replace a tier,\nlike the p3 that went away and\n\n508\n00:25:51.630 --> 00:25:53.930\nyou just won't be able to return to it,\nso just be aware of that.\n\n509\n00:25:53.930 --> 00:25:58.560\n>> Alright, well Don, thanks for showing\nus how to optimize our performance and\n\n510\n00:25:58.560 --> 00:26:00.040\neven maybe some money.\n\n511\n00:26:00.040 --> 00:26:04.930\nSaving a little dough-re-me by using this\nscaling up and down techniques in Azure.\n\n512\n00:26:04.930 --> 00:26:08.290\nI guess that's the end of our show for\ntoday.\n\n513\n00:26:08.290 --> 00:26:11.220\nWell everyone out there, we have\nreached the end of it, thank you so\n\n514\n00:26:11.220 --> 00:26:12.020\nmuch for watching.\n\n515\n00:26:12.020 --> 00:26:13.700\nWe're go ahead and sign off for IT pro tv.\n\n516\n00:26:13.700 --> 00:26:15.630\nI've been your host your Daniel Lowry.\n\n517\n00:26:15.630 --> 00:26:16.440\n>> And I'm Don Pizet.\n\n518\n00:26:16.440 --> 00:26:17.660\n>> And we'll see you next time.\n\n519\n00:26:17.660 --> 00:26:23.880\n[MUSIC]\n\n",
          "vimeoId": "151774478"
        },
        {
          "description": "In this episode, Don and Daniel dive into availability and recovery features provided by Azure SQL, here specifically looking at Geographical Redundancy. They start off by describing what geo-redundancy is and they two different types of geo-replication (Standard and Active) that's available in Azure SQL. Then they show you how to implement both types and even how to perform a failover test to make sure everything is working in case of an outage.",
          "length": "2218",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-azuresql/techskills-azuresql-4-1-geographical_redundancy-121015-1.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-azuresql/techskills-azuresql-4-1-geographical_redundancy-121015-1-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-azuresql/techskills-azuresql-4-1-geographical_redundancy-121015-1-sm.jpg",
          "title": "Geographical Redundancy",
          "transcript": "WEBVTT\n\n1\n00:00:00.087 --> 00:00:10.087\n[MUSIC]\n\n2\n00:00:11.755 --> 00:00:16.961\nAll right, greetings everyone, and welcome\nto another exciting episode of ITProTV.\n\n3\n00:00:16.961 --> 00:00:18.810\nI'm your host Daniel Lowrie, and\n\n4\n00:00:18.810 --> 00:00:22.780\nin today's episode we're continuing\non with that Microsoft Azure SQL.\n\n5\n00:00:22.780 --> 00:00:25.850\nAnd joining us yet again in the studio\nis none other than my good friend and\n\n6\n00:00:25.850 --> 00:00:27.690\ncolleague, Mr. Don Pezet.\n\n7\n00:00:27.690 --> 00:00:30.296\nDon, welcome to the show,\nwelcome back to the show, should I say?\n\n8\n00:00:30.296 --> 00:00:31.461\n>> [LAUGH] Thanks-\n>> How are you doing today?\n\n9\n00:00:31.461 --> 00:00:34.002\n>> Thanks for having me back Daniel,\nand glad to be back,\n\n10\n00:00:34.002 --> 00:00:35.838\nready to jump into a pretty neat topic.\n\n11\n00:00:35.838 --> 00:00:40.218\nI know I've said this more than once, that\none of the big advantages of storing your\n\n12\n00:00:40.218 --> 00:00:44.665\ndatabase in Microsoft's Azure environment\nis that they've got world-class data\n\n13\n00:00:44.665 --> 00:00:46.629\ncenters all over the globe, right?\n\n14\n00:00:46.629 --> 00:00:49.473\nBut it doesn't matter how\nworld-class your data center is,\n\n15\n00:00:49.473 --> 00:00:51.836\ndata centers have failures,\nit happens, right?\n\n16\n00:00:51.836 --> 00:00:55.797\nAmazon's had them, Microsoft's had them,\ndata centers do have failures.\n\n17\n00:00:55.797 --> 00:00:57.861\nSo one of the cool parts about Azure,\n\n18\n00:00:57.861 --> 00:01:02.337\nis that we can easily take advantage of\ntheir other data centers to do replicas.\n\n19\n00:01:02.337 --> 00:01:06.519\nSo that if one data center fails, we can\nfail over to an entirely different city,\n\n20\n00:01:06.519 --> 00:01:10.640\nstate, or country, even continent, and\nhave our systems back online, up and\n\n21\n00:01:10.640 --> 00:01:14.220\nrunning, and\njust doing the things that we need it do.\n\n22\n00:01:14.220 --> 00:01:17.430\nIn the private industry, we would have\nto build our own data center in these\n\n23\n00:01:17.430 --> 00:01:18.700\ndifferent areas to be able to do that.\n\n24\n00:01:18.700 --> 00:01:21.160\nWith Azure, it's just a couple of\nmouse clicks and you've got it.\n\n25\n00:01:21.160 --> 00:01:24.630\nYou don't pay a single dime extra, it's\njust another system that's out there, and\n\n26\n00:01:24.630 --> 00:01:26.350\nit's just super easy to take advantage of.\n\n27\n00:01:26.350 --> 00:01:28.350\nSo that's what we're gonna take\na look at in this episode.\n\n28\n00:01:28.350 --> 00:01:32.470\nHow we do geo-replication so that we can\nhave a redundant environment in the event\n\n29\n00:01:32.470 --> 00:01:34.370\nthat one of Microsoft's\ndata centers were to fail.\n\n30\n00:01:34.370 --> 00:01:35.670\n>> Now Don, this is really cool stuff.\n\n31\n00:01:35.670 --> 00:01:38.703\nYou've mention it in previous episodes, so\nI'm really looking forward to seeing how\n\n32\n00:01:38.703 --> 00:01:40.961\nthis actually works out, and\nhow we can use it to our advantage.\n\n33\n00:01:40.961 --> 00:01:45.856\nBut the first question that pops into my\nmind is, is this like a replacement for\n\n34\n00:01:45.856 --> 00:01:47.421\nstandard type backups?\n\n35\n00:01:47.421 --> 00:01:50.254\n>> I'm glad you asked that,\nbecause a lot of people think that.\n\n36\n00:01:50.254 --> 00:01:51.313\nThey're like, well hey,\n\n37\n00:01:51.313 --> 00:01:54.170\nif I have a replica, if I have a second\ncopy of my database somewhere else,\n\n38\n00:01:54.170 --> 00:01:56.588\nI don't really need to worry\nabout backups anymore, right?\n\n39\n00:01:56.588 --> 00:02:00.046\nAnd you're right and wrong, right?\n\n40\n00:02:00.046 --> 00:02:02.840\nSo you're right in terms\nof a hardware failure.\n\n41\n00:02:02.840 --> 00:02:05.139\nIf you've got a replica in a different\nregion and the server fails,\n\n42\n00:02:05.139 --> 00:02:05.944\nthe hard drives go bad,\n\n43\n00:02:05.944 --> 00:02:08.550\nyou know you've got an extra copy of\nyour data being stored somewhere else.\n\n44\n00:02:08.550 --> 00:02:11.895\nWell Microsoft's already doing that for\nyou whether you turn geo-replication on or\n\n45\n00:02:11.895 --> 00:02:14.270\nnot, there's always an extra\ncopy of your data somewhere.\n\n46\n00:02:14.270 --> 00:02:17.989\nBut what happens if a user logs in,\n\n47\n00:02:17.989 --> 00:02:23.004\ngoes to a table and\ndeletes five rows, right?\n\n48\n00:02:23.004 --> 00:02:26.254\nOr deletes the whole table, deletes the\nwhole database for that matter, all right?\n\n49\n00:02:26.254 --> 00:02:28.070\nWhat's the replica gonna do?\n\n50\n00:02:28.070 --> 00:02:31.410\nWell, if you delete a table in one,\n\n51\n00:02:31.410 --> 00:02:33.486\nit's gonna replicate\nthe delete to the other side.\n\n52\n00:02:33.486 --> 00:02:35.196\nAnd so\nnow it's deleted on the other side too, so\n\n53\n00:02:35.196 --> 00:02:37.210\nyou just lost that data, it's gone.\n\n54\n00:02:37.210 --> 00:02:41.240\nAnd so, replicas don't save\nyou from user error, right?\n\n55\n00:02:41.240 --> 00:02:44.139\nIf a user gets in there and messes\nsomething up, or an application gets in\n\n56\n00:02:44.139 --> 00:02:47.181\nthere and messes something up,\nthe replica's just gonna replicate that to\n\n57\n00:02:47.181 --> 00:02:50.296\nthe other side, and now it's in both\nplaces, it doesn't help you, right?\n\n58\n00:02:50.296 --> 00:02:53.442\nFor that you still need a back up, and\nwe're actually gonna see that in the next\n\n59\n00:02:53.442 --> 00:02:56.172\nepisode, I'll show you how to\nmanage backups inside of Azure SQL.\n\n60\n00:02:56.172 --> 00:03:00.594\nBut in terms of hardware failure, we\ncould have it where a server could fail,\n\n61\n00:03:00.594 --> 00:03:03.521\nand instantly activate\ninside of another region,\n\n62\n00:03:03.521 --> 00:03:05.712\nand our end users don't even notice.\n\n63\n00:03:05.712 --> 00:03:07.920\nIt happens seamlessly, and\nwe just move right through, right?\n\n64\n00:03:07.920 --> 00:03:12.810\nThat can be very quick, very ,and it's\nactually mostly automatically set up for\n\n65\n00:03:12.810 --> 00:03:15.250\nus, just like the backups\nare automatically set up for us.\n\n66\n00:03:15.250 --> 00:03:17.320\nSo we can go in,\nwe just have to turn this feature on, and\n\n67\n00:03:17.320 --> 00:03:18.490\nwe can take advantage of it.\n\n68\n00:03:18.490 --> 00:03:19.320\n>> Very cool.\n\n69\n00:03:19.320 --> 00:03:20.290\nWell now Don, there are,\n\n70\n00:03:20.290 --> 00:03:23.530\nif I am understanding it correctly,\nthere's actually a couple of types\n\n71\n00:03:23.530 --> 00:03:26.170\nof geo-replication that they\nhave available for us correct?\n\n72\n00:03:26.170 --> 00:03:29.690\n>> Right, and before we turn all this on,\nwe need to understand those different\n\n73\n00:03:29.690 --> 00:03:31.750\ntypes, and some of the other little\ncaveats that we've got, right?\n\n74\n00:03:31.750 --> 00:03:35.320\nSo when you bring up\nan Azure SQL database,\n\n75\n00:03:35.320 --> 00:03:37.550\nthere's a couple of choices that you make.\n\n76\n00:03:37.550 --> 00:03:40.670\nOne choice you make, is you choose\nwhat pricing tier it's gonna be in,\n\n77\n00:03:40.670 --> 00:03:41.440\nor performance tier.\n\n78\n00:03:41.440 --> 00:03:44.760\nIs it gonna be a basic,\nstandard or premium?\n\n79\n00:03:44.760 --> 00:03:48.560\nAnd if you choose a basic,\nyou don't get geo-replication.\n\n80\n00:03:48.560 --> 00:03:53.650\nYou do get geo-redundancy, the backup of\nyour database is stored in another region,\n\n81\n00:03:53.650 --> 00:03:55.180\nbut you don't get replication.\n\n82\n00:03:55.180 --> 00:03:59.640\nAnd the difference there, is that\na replica is online, it's online and\n\n83\n00:03:59.640 --> 00:04:01.800\nwaiting for you to switch over to it.\n\n84\n00:04:01.800 --> 00:04:05.240\nA redundant backup is offline,\n\n85\n00:04:05.240 --> 00:04:07.330\nthere's a backup of your database\nstored in another region.\n\n86\n00:04:07.330 --> 00:04:11.080\nIf your database fails, you have to\nspin up a new database instance,\n\n87\n00:04:11.080 --> 00:04:14.520\nand restore the backup to it, which\nmeans you're gonna have downtime, right?\n\n88\n00:04:14.520 --> 00:04:17.960\nBut a replica is already running and\nready to go.\n\n89\n00:04:17.960 --> 00:04:20.640\nAnd any time you make a change\nto the main database,\n\n90\n00:04:20.640 --> 00:04:24.860\nthe primary, it takes that change,\nand it sends it to the secondary.\n\n91\n00:04:24.860 --> 00:04:28.870\nAnd it's doing that asynchronously,\nso we don't take a performance hit.\n\n92\n00:04:28.870 --> 00:04:31.390\nThat async part is kind of important\nthough, because there is a little bit of\n\n93\n00:04:31.390 --> 00:04:34.530\na delay in order for that change\nto make it over to the secondary.\n\n94\n00:04:34.530 --> 00:04:35.635\nSo when you do have a failure,\n\n95\n00:04:35.635 --> 00:04:40.360\nthe secondary is ready to rock,\nexcept it could be a few seconds behind.\n\n96\n00:04:40.360 --> 00:04:42.550\nYou might actually lose\na handful of transactions, but\n\n97\n00:04:42.550 --> 00:04:45.122\nthat's better than having\na full down time, right?\n\n98\n00:04:45.122 --> 00:04:48.680\nAnd SQL's designed to be able to handle\nthat little bit of transaction loss, and\n\n99\n00:04:48.680 --> 00:04:50.150\nso it resolves that, it moves on.\n\n100\n00:04:50.150 --> 00:04:51.820\nSo we're pretty well taken care of there,\nall right?\n\n101\n00:04:52.870 --> 00:04:57.940\nNow the other thing to think about is,\nif I choose a standard tier,\n\n102\n00:04:57.940 --> 00:05:01.780\na standard performance tier, I can do\nwhat's called standard replication.\n\n103\n00:05:01.780 --> 00:05:04.480\nIf I go to the premiere performance tier,\n\n104\n00:05:04.480 --> 00:05:07.430\nI can do what's called a active\nreplication, all right?\n\n105\n00:05:07.430 --> 00:05:09.004\nAnd what's the difference\nbetween standard and active?\n\n106\n00:05:09.004 --> 00:05:13.713\nWhen we do a standard, there is a replica,\na secondary server put in a region of our\n\n107\n00:05:13.713 --> 00:05:16.462\nchoosing, we can pick\nwhich region it goes in.\n\n108\n00:05:16.462 --> 00:05:21.087\nAnd once it's there, we don't touch\nit again, it's invisible to us.\n\n109\n00:05:21.087 --> 00:05:23.340\nWe don't see the database,\nwe don't see the server.\n\n110\n00:05:23.340 --> 00:05:26.880\nWe see that replication is set up,\nbut it's invisible to us, all right?\n\n111\n00:05:26.880 --> 00:05:31.440\nAnd when a failure happens,\nthe secondary goes active and\n\n112\n00:05:31.440 --> 00:05:33.440\nthe primary's gone, and that's it, right?\n\n113\n00:05:33.440 --> 00:05:35.360\nSo you just have one database.\n\n114\n00:05:35.360 --> 00:05:40.660\nAnd because the secondary is not active,\nit's kinda hidden from us,\n\n115\n00:05:40.660 --> 00:05:44.590\nit only needs enough DTUs to handle\nthe transactions we sync to it.\n\n116\n00:05:44.590 --> 00:05:47.696\nSo Microsoft charges a discounted rate for\nthat, you don't pay full price for\n\n117\n00:05:47.696 --> 00:05:48.837\nthat database, all right?\n\n118\n00:05:48.837 --> 00:05:52.297\nWhen you do active replication though,\nthat's different than standard.\n\n119\n00:05:52.297 --> 00:05:56.196\nWith active, the secondary is\nactually online and you can see it,\n\n120\n00:05:56.196 --> 00:06:00.210\nit's another database in your list,\nand you pay for it.\n\n121\n00:06:00.210 --> 00:06:01.540\nAnd the reason you pay,\n\n122\n00:06:01.540 --> 00:06:05.730\nis that it's available as a read-only\ncopy of your primary database.\n\n123\n00:06:05.730 --> 00:06:07.910\nSo you've got your primary\nthat's read-write, and\n\n124\n00:06:07.910 --> 00:06:10.230\nyou've got your replica that's read-only.\n\n125\n00:06:10.230 --> 00:06:13.680\nAnd you can take your read traffic and\ndistribute it across the two, and\n\n126\n00:06:13.680 --> 00:06:15.020\nyou get more performance out of it.\n\n127\n00:06:15.020 --> 00:06:18.380\nAnd so they charge it like a normal\ndatabase, so it costs a little bit more.\n\n128\n00:06:18.380 --> 00:06:21.380\nBut when you have a failure,\nyou just jump right over to the other one,\n\n129\n00:06:21.380 --> 00:06:24.330\nit was already online,\nand you're ready to go.\n\n130\n00:06:24.330 --> 00:06:27.250\nAnd so it's able to get in there, and\nstart to perform that work for you.\n\n131\n00:06:27.250 --> 00:06:31.100\nSo we gotta choose, but if you wanna go\nactive, you have to step up to the premier\n\n132\n00:06:31.100 --> 00:06:33.060\npricing tier, you can't do that\non the standard pricing tier.\n\n133\n00:06:34.330 --> 00:06:36.800\nAll right, another thing we need to think\nabout are the regions that are available.\n\n134\n00:06:36.800 --> 00:06:40.010\nAnd I've said regions a few times,\nI'm logged into my Azure dashboard here,\n\n135\n00:06:40.010 --> 00:06:41.670\nlet me just show you on my dashboard.\n\n136\n00:06:41.670 --> 00:06:45.295\nWe've got out our service health that's\nright on everybody's dashboard by default,\n\n137\n00:06:45.295 --> 00:06:49.820\nunless you've removed it, and what it\nshows us are all the different regions.\n\n138\n00:06:49.820 --> 00:06:52.310\nThe data centers that Microsoft\nhas kind of around the globe, and\n\n139\n00:06:52.310 --> 00:06:54.970\nsee how they've got the little\ngreen check marks on them?\n\n140\n00:06:54.970 --> 00:06:58.370\nOr green circles with a white check mark,\nI guess would be more accurate.\n\n141\n00:06:58.370 --> 00:07:00.900\nThese are all the different\ncentres that are out there.\n\n142\n00:07:00.900 --> 00:07:04.470\nWell, notice right here in the US\nthere's one that has a blue circle\n\n143\n00:07:04.470 --> 00:07:05.580\nwith a white i, right?\n\n144\n00:07:05.580 --> 00:07:07.010\nLittle informational notice for us, so\n\n145\n00:07:07.010 --> 00:07:09.440\nthere's something going on here in the US,\nall right?\n\n146\n00:07:09.440 --> 00:07:12.050\nWell, it's just informational,\nthis isn't a full failure.\n\n147\n00:07:12.050 --> 00:07:15.713\nIt would be a red circle if it was a full\nfailure, or even a black if it was really,\n\n148\n00:07:15.713 --> 00:07:16.337\nreally bad.\n\n149\n00:07:16.337 --> 00:07:19.172\nBlack means it's not coming back,\nred just means it's under a failure and\n\n150\n00:07:19.172 --> 00:07:20.212\nthey're trying to fix it.\n\n151\n00:07:20.212 --> 00:07:27.422\nSo if it's red, whatever you had in that\nregion is no longer available, okay?\n\n152\n00:07:27.422 --> 00:07:28.622\nThis one is blue, and so\n\n153\n00:07:28.622 --> 00:07:31.802\nI've got some kind of a performance\nnotice going on there, and\n\n154\n00:07:31.802 --> 00:07:35.462\nif I were to click on it, I could drill\nin and try and find out what that is.\n\n155\n00:07:35.462 --> 00:07:41.504\nAnd so I can see my, sorry my little\npanes here are going a bit crazy on me.\n\n156\n00:07:41.504 --> 00:07:44.254\nThere we go, I can see that I've got\nthis little informational notice down\n\n157\n00:07:44.254 --> 00:07:45.004\nhere at the bottom.\n\n158\n00:07:45.004 --> 00:07:49.324\nAnd if I click on the informational\nnotice, I'll get the details right here,\n\n159\n00:07:49.324 --> 00:07:52.088\nand this one's actually\na pretty minor failure.\n\n160\n00:07:52.088 --> 00:07:56.092\nIt's telling me that the resource health\ncheck service is malfunctioning in\n\n161\n00:07:56.092 --> 00:07:56.837\nthis region.\n\n162\n00:07:56.837 --> 00:08:00.092\nUnfortunately the region\nis Where's the region,\n\n163\n00:08:00.092 --> 00:08:04.570\nit is in here somewhere, it will\ntell me the region that's affected.\n\n164\n00:08:04.570 --> 00:08:06.320\nWell I guess we know cuz we\nsaw the green check mark but\n\n165\n00:08:06.320 --> 00:08:09.710\nin here somewhere it'll tell me the region\nbut it's the U.S. East region, right?\n\n166\n00:08:09.710 --> 00:08:12.333\nWhich I could see back there\nin my dash board, the U.S.\n\n167\n00:08:12.333 --> 00:08:14.900\nEast region, which is where I\nkeep putting all my SQL servers,\n\n168\n00:08:14.900 --> 00:08:16.660\nif you've been watching\nthis whole series of shows,\n\n169\n00:08:16.660 --> 00:08:21.560\nI've been putting them all in U.S. East\nand so I'm under a bit of a failure here.\n\n170\n00:08:21.560 --> 00:08:25.910\nWell if I really cared about that\nhealth performance check which is\n\n171\n00:08:25.910 --> 00:08:27.270\nkind of important, right?\n\n172\n00:08:27.270 --> 00:08:30.260\nIf I care about that I might want to\nfail over to the other region, just so\n\n173\n00:08:30.260 --> 00:08:33.010\nI know the health performance checks\nare working on the other region.\n\n174\n00:08:33.010 --> 00:08:37.100\nIf it's not working here and my database\nwere to fail, it might not fail over to\n\n175\n00:08:37.100 --> 00:08:39.870\nanother region cuz it might not know\nthe health check failed, right?\n\n176\n00:08:39.870 --> 00:08:44.050\nSo this might be an area where I want to\nmanually flip it over to another region\n\n177\n00:08:44.050 --> 00:08:46.350\nand what region do I fail over to?\n\n178\n00:08:46.350 --> 00:08:49.690\nWhen you set up the replicate you get to\npick where you're replicating to and you\n\n179\n00:08:49.690 --> 00:08:54.470\ncan really pick any of these all right,\nbut that's not truly Microsoft's intent.\n\n180\n00:08:54.470 --> 00:08:56.240\nYou can pick any region.\n\n181\n00:08:56.240 --> 00:09:02.080\nBut a lot of regions are what we're called\nDR paired right, disaster recovery paired.\n\n182\n00:09:02.080 --> 00:09:06.660\nThat means at Microsoft put in a dedicated\nnetwork connection between one region and\n\n183\n00:09:06.660 --> 00:09:10.494\nanother that is very, very fat,\nright it's a lot of bandwidth.\n\n184\n00:09:10.494 --> 00:09:14.720\nIf there's a region failure,\nif one of this region where to fail,\n\n185\n00:09:14.720 --> 00:09:18.250\neverybody in that region is\ngonna wanna jump somewhere else.\n\n186\n00:09:18.250 --> 00:09:21.610\nAnd if they're all jumping to the same\nplace, it's gonna overload the bandwidth\n\n187\n00:09:21.610 --> 00:09:24.190\nand it's going to delay the recovery\nof your systems, right?\n\n188\n00:09:24.190 --> 00:09:28.290\nSo, if you just pick any old region\nthat's out there, when a failure happens,\n\n189\n00:09:28.290 --> 00:09:30.190\nit could actually take\na little while to fail over.\n\n190\n00:09:30.190 --> 00:09:34.250\nOr, if you're doing, remember I said\nthis changes asynchronously, right?\n\n191\n00:09:34.250 --> 00:09:38.250\nSo if we're failing over,\nwe may have more changes that we lose,\n\n192\n00:09:38.250 --> 00:09:40.640\nbecause the async replication\nis taking longer.\n\n193\n00:09:40.640 --> 00:09:43.920\nBut if we pick DR paired regions,\n\n194\n00:09:43.920 --> 00:09:48.350\nthey have much more bandwidth in between\nthem, and we'll get a better replica.\n\n195\n00:09:48.350 --> 00:09:51.270\nSo when you're choosing where to place\nyour replica, you need to be aware of\n\n196\n00:09:51.270 --> 00:09:55.190\nwhich ones are DR paired, and Microsoft\nput out a little blog posting about this\n\n197\n00:09:55.190 --> 00:09:58.700\nawhile back, where they talk about\nthe Azure storage redundancy options, and\n\n198\n00:09:58.700 --> 00:10:02.630\nit included this little chart, right here,\nwhich is worth it's weight in gold,\n\n199\n00:10:02.630 --> 00:10:05.880\nbecause it's the one that tells\nyou which ones are DR paired.\n\n200\n00:10:05.880 --> 00:10:07.540\nAnd most of them are common sense.\n\n201\n00:10:07.540 --> 00:10:12.070\nFor example, North Central US\nis paired with South Central US.\n\n202\n00:10:12.070 --> 00:10:14.610\nAnd that just kind of makes sense.\n\n203\n00:10:14.610 --> 00:10:18.550\nAnd US East and US West are paired in\nthe same way, in the opposite direction.\n\n204\n00:10:18.550 --> 00:10:20.570\nThat's important,\nbecause sometimes it's not two-way.\n\n205\n00:10:20.570 --> 00:10:22.250\nSo US West and US East.\n\n206\n00:10:22.250 --> 00:10:24.620\nIf I'm a United States company, and\n\n207\n00:10:24.620 --> 00:10:28.260\nI want to create geo redundant servers,\nthis is one of the best solutions for me.\n\n208\n00:10:28.260 --> 00:10:30.080\nPut one in US East, one in US West.\n\n209\n00:10:31.130 --> 00:10:32.310\nBut what if I'm in Europe?\n\n210\n00:10:32.310 --> 00:10:35.020\nWell, you've got West Europe and\nNorth Europe.\n\n211\n00:10:35.020 --> 00:10:37.020\nSouth East Asia and East Asia.\n\n212\n00:10:37.020 --> 00:10:38.850\nEast China and North China.\n\n213\n00:10:38.850 --> 00:10:42.100\nThese are all paired up, and\nready to go for your DR pair.\n\n214\n00:10:42.100 --> 00:10:45.950\nSo if you pick one of these pairs,\nyou'll have the best chance of losing\n\n215\n00:10:45.950 --> 00:10:48.810\nthe least amount of data and\nhaving the fastest fail over.\n\n216\n00:10:48.810 --> 00:10:53.640\nBut, you can say, all right, I'm gonna\nput my servers here in East US and\n\n217\n00:10:53.640 --> 00:10:56.320\nI want my fail over to be North Europe.\n\n218\n00:10:56.320 --> 00:10:58.970\nYou can do that, all right,\nit'll let you do that,\n\n219\n00:10:58.970 --> 00:11:02.620\nit's just we don't have the same amount of\nbandwidth between those data centers and\n\n220\n00:11:02.620 --> 00:11:04.170\nso I might lose a few more changes.\n\n221\n00:11:04.170 --> 00:11:08.460\nBut hey, if you have a disaster\nthat affects the entire continent,\n\n222\n00:11:08.460 --> 00:11:10.970\nyou don't wanna replicate to somewhere\nelse in the same continent, right.\n\n223\n00:11:10.970 --> 00:11:12.670\nBut this would be a pretty big disaster.\n\n224\n00:11:12.670 --> 00:11:15.840\nThere's never been a disaster on\nrecord that would account for that.\n\n225\n00:11:15.840 --> 00:11:18.660\nSo there's not necessarily\nreason to do that.\n\n226\n00:11:18.660 --> 00:11:21.330\n>> Now, Don,\ndoes the failover happen automatically or\n\n227\n00:11:21.330 --> 00:11:24.180\ndo we have to be monitoring and\nchecking to see oh look.\n\n228\n00:11:24.180 --> 00:11:25.040\nThere's a problem.\n\n229\n00:11:25.040 --> 00:11:28.120\nI need to failover to somewhere else.\n\n230\n00:11:28.120 --> 00:11:30.090\n>> Both.\nIt's kind of a both scenario.\n\n231\n00:11:30.090 --> 00:11:33.110\nYou are welcome to fail it\nover whenever you want, and\n\n232\n00:11:33.110 --> 00:11:36.360\nyou can monitor from metrics and\nyou can create a triggered metric\n\n233\n00:11:36.360 --> 00:11:39.380\nthat will cause it failover when\ncertain conditions are met.\n\n234\n00:11:39.380 --> 00:11:41.600\nYou can control it yourself if you want.\n\n235\n00:11:41.600 --> 00:11:43.370\nBut Microsoft's doing it also.\n\n236\n00:11:43.370 --> 00:11:46.500\nIf Microsoft sees that one of\ntheir data centers failed,\n\n237\n00:11:46.500 --> 00:11:51.040\nlet's just assume here the East US went\nred instead of blue, if it went red and\n\n238\n00:11:51.040 --> 00:11:53.220\nhad a true failure,\nMicrosoft would know that.\n\n239\n00:11:53.220 --> 00:11:57.857\nAnd they would look for everybody in\nhere that had geo-replication and\n\n240\n00:11:57.857 --> 00:11:59.130\nit'd fail them over?\n\n241\n00:11:59.130 --> 00:11:59.640\nRight?\nAnd\n\n242\n00:11:59.640 --> 00:12:01.310\nit happens usually within\nabout two minutes.\n\n243\n00:12:01.310 --> 00:12:04.470\nSo you will have a little outage, but it\ntakes Microsoft about two minutes to kick\n\n244\n00:12:04.470 --> 00:12:06.830\nthat in and\njump people to the other sides.\n\n245\n00:12:06.830 --> 00:12:08.060\nHappens pretty fast.\n\n246\n00:12:09.310 --> 00:12:13.140\nIf you want it to happen faster,\nyou kinda have to monitor yourself.\n\n247\n00:12:13.140 --> 00:12:13.660\nAnd you can do that.\n\n248\n00:12:13.660 --> 00:12:15.420\nYou can set up those targeted metrics.\n\n249\n00:12:15.420 --> 00:12:17.500\nAnd we'll see how to do that\nin the monitoring episodes.\n\n250\n00:12:17.500 --> 00:12:18.770\nBut, you can.\n\n251\n00:12:18.770 --> 00:12:20.320\nBut either way,\nMicrosoft has taken care of it.\n\n252\n00:12:20.320 --> 00:12:22.920\nNow you might be watching for\nsomething else.\n\n253\n00:12:22.920 --> 00:12:26.360\nLike, what if you accidentally\ndeleted table out of one.\n\n254\n00:12:26.360 --> 00:12:28.920\nWell, that would delete from\nthe other side, that wouldn't count.\n\n255\n00:12:28.920 --> 00:12:32.860\nWhat if you, I don't know,\nbroke replication somehow or\n\n256\n00:12:32.860 --> 00:12:35.940\nmessed with that instance,\nsomething caused that instance to go down,\n\n257\n00:12:35.940 --> 00:12:38.020\nyou might not wait for\nMicrosoft to notice.\n\n258\n00:12:38.020 --> 00:12:39.480\nAnd so, you could kick it over.\n\n259\n00:12:39.480 --> 00:12:42.840\nIn fact, if you damaged your own instance,\nMicrosoft might not even notice, cuz\n\n260\n00:12:42.840 --> 00:12:46.670\nthey're really monitoring the data center,\nnot your specific instance for that.\n\n261\n00:12:46.670 --> 00:12:48.430\nSo you might want to initiate failover,\nand\n\n262\n00:12:48.430 --> 00:12:50.260\nI'll show you guys how to do\nthat after we get set up.\n\n263\n00:12:50.260 --> 00:12:52.590\nWhich I guess we probably should do.\n\n264\n00:12:52.590 --> 00:12:53.550\n>> Probably would help out.\n\n265\n00:12:53.550 --> 00:12:55.690\n>> Otherwise we'll have the most\nboring episode on record.\n\n266\n00:12:55.690 --> 00:12:59.980\nSo let's say I wanna get this set up,\nI'm gonna skip right over the basic tier,\n\n267\n00:12:59.980 --> 00:13:04.210\nat the basic tier all you have is geo\nredundancy, your backups get copied in our\n\n268\n00:13:04.210 --> 00:13:07.870\nnext episode we're gonna see backups and\nso that'll apply to the basic tier.\n\n269\n00:13:07.870 --> 00:13:10.960\nAt the standard tier,\nwe have standard replication.\n\n270\n00:13:10.960 --> 00:13:13.540\nThat means we're gonna have\na copy of our database that\n\n271\n00:13:13.540 --> 00:13:15.340\nwe're not allowed to see or touch.\n\n272\n00:13:15.340 --> 00:13:17.170\nAll right.\nSo let's get that set up.\n\n273\n00:13:17.170 --> 00:13:18.780\nI'm gonna go in here, and\n\n274\n00:13:18.780 --> 00:13:22.350\nI'm gonna go to my SQL databases and\nI'm gonna create a new database, right?\n\n275\n00:13:22.350 --> 00:13:23.700\nSo maybe i'll create sample DB 1.\n\n276\n00:13:23.700 --> 00:13:26.230\nSo I'm gonna get in here and create that.\n\n277\n00:13:27.820 --> 00:13:30.980\nAnd when I create this database,\nI'm going to assign it a server, and\n\n278\n00:13:30.980 --> 00:13:32.640\nI'll stick it in US East, right.\n\n279\n00:13:32.640 --> 00:13:38.390\nSo I'll call this SampleDB1, and for the\nserver, I'm going to create a new server.\n\n280\n00:13:38.390 --> 00:13:39.670\nI guess I, kind of, already have one, but\n\n281\n00:13:39.670 --> 00:13:41.780\nI'll create a new server just to do it,\nright.\n\n282\n00:13:41.780 --> 00:13:44.270\nWhen you create this server,\nyou can give it a name.\n\n283\n00:13:44.270 --> 00:13:46.394\nI'm going to call mine itprotv-east.\n\n284\n00:13:47.740 --> 00:13:53.440\nAnd I'll give it my login information and\nI'm gonna pick where I want it to be and\n\n285\n00:13:53.440 --> 00:13:57.060\nI need to be thinking about\nmy paired regions right,\n\n286\n00:13:57.060 --> 00:14:00.050\nI want this one to be in east US so\nI'm gonna come in here and\n\n287\n00:14:00.050 --> 00:14:03.740\npick east US even though I know\nit's currently got an issue.\n\n288\n00:14:03.740 --> 00:14:07.130\nAll right so\nnow I'm creating a server in East US.\n\n289\n00:14:07.130 --> 00:14:10.830\nI'm just gonna do a blank database so\nthe replication'll happen faster.\n\n290\n00:14:10.830 --> 00:14:13.010\nI'm gonna do a standard pricing tier.\n\n291\n00:14:13.010 --> 00:14:14.980\nI'll just do S0 for this one.\n\n292\n00:14:14.980 --> 00:14:16.460\nSet my collation.\n\n293\n00:14:16.460 --> 00:14:17.900\nMy resource group.\n\n294\n00:14:17.900 --> 00:14:20.690\nI might wanna put this in\na particular resource group or\n\n295\n00:14:20.690 --> 00:14:22.360\njust create an all new one.\n\n296\n00:14:22.360 --> 00:14:28.945\nSo maybe I'll call this my,\nwe'll call this like itprotv-standard.\n\n297\n00:14:30.010 --> 00:14:31.010\nIt'll let me do dashes, right?\n\n298\n00:14:31.010 --> 00:14:32.390\nYep. Good. So, I'll do standard,\n\n299\n00:14:32.390 --> 00:14:35.240\nand so that's going to be my\nresource group for this one.\n\n300\n00:14:36.290 --> 00:14:38.510\nJust so I can group things together for\nthis one.\n\n301\n00:14:38.510 --> 00:14:40.620\nAnd it's going to go in\nmy demo subscription.\n\n302\n00:14:40.620 --> 00:14:41.890\nSo I'll create that.\n\n303\n00:14:41.890 --> 00:14:42.430\nAll right.\n\n304\n00:14:42.430 --> 00:14:44.840\nSo that's just whipping up\na quick standard database.\n\n305\n00:14:44.840 --> 00:14:46.120\nNo big deal there.\n\n306\n00:14:46.120 --> 00:14:47.810\nBut I did assign it to a new server and\n\n307\n00:14:47.810 --> 00:14:50.740\nthe only reason I did that is I wanted\nto keep track of where that server was.\n\n308\n00:14:50.740 --> 00:14:53.170\nSo I've got IT Pro TV\neast is being spun up.\n\n309\n00:14:53.170 --> 00:14:55.810\nSo it's gonna spin that\ndatabase up in the background.\n\n310\n00:14:55.810 --> 00:14:58.700\nAnd while i'm waiting on that I'm\ngonna spin up another database.\n\n311\n00:14:58.700 --> 00:15:00.160\nAnd this one I'm gonna do a premier.\n\n312\n00:15:00.160 --> 00:15:02.660\nRight, one of the,\nI mean a premium tier, right?\n\n313\n00:15:02.660 --> 00:15:05.529\nSo I'm gonna add in sample DB 3.\n\n314\n00:15:05.529 --> 00:15:07.770\n>> You going P11 on me, Don?\n\n315\n00:15:07.770 --> 00:15:10.980\n>> Maybe not,\nunless you wanna forego your salary.\n\n316\n00:15:10.980 --> 00:15:11.630\nWe can do that.\n\n317\n00:15:11.630 --> 00:15:13.161\n>> Well, Ronnie said he'd happy to.\n\n318\n00:15:13.161 --> 00:15:15.450\n[LAUGH]\n>> So, I'll create a new server for\n\n319\n00:15:15.450 --> 00:15:16.250\nthis one, also.\n\n320\n00:15:16.250 --> 00:15:19.970\nAnd this one's going to be itprotv-west,\nall right.\n\n321\n00:15:19.970 --> 00:15:23.880\nSo, I'm gonna put this\none on the other side.\n\n322\n00:15:23.880 --> 00:15:28.090\nAnd I'll get this one set up,\nwith a password,\n\n323\n00:15:29.300 --> 00:15:32.090\nwhich I think I typed\nthe same way both times.\n\n324\n00:15:32.090 --> 00:15:32.640\nI did.\n\n325\n00:15:32.640 --> 00:15:35.930\nAnd I'll leave this one in West US,\nand we'll go to the 12.\n\n326\n00:15:35.930 --> 00:15:36.610\nThat's fine.\n\n327\n00:15:38.320 --> 00:15:39.720\nAnd we'll say okay to that.\n\n328\n00:15:39.720 --> 00:15:41.820\nAll right.\n\n329\n00:15:41.820 --> 00:15:44.900\nI'll do a blank database, just like\nbefore, except this time, I'm going to\n\n330\n00:15:44.900 --> 00:15:48.900\nchange my pricing tier, and I'm going to\ngo with the cheapest premium I can, right?\n\n331\n00:15:48.900 --> 00:15:50.840\nSo I don't want to go broke here.\n\n332\n00:15:50.840 --> 00:15:52.337\nSo we'll do a P1 on this one.\n\n333\n00:15:52.337 --> 00:15:55.734\nI need to do a premium cuz that's the only\none that gets active replication,\n\n334\n00:15:55.734 --> 00:15:57.338\notherwise I'd just get standard.\n\n335\n00:15:57.338 --> 00:16:00.219\nThen I'm gonna go down here\nto my resource group and\n\n336\n00:16:00.219 --> 00:16:02.837\nI can use an existing\nresource group if I want.\n\n337\n00:16:02.837 --> 00:16:04.961\nLet's see if my other one's been created.\n\n338\n00:16:04.961 --> 00:16:06.110\nOh wait, that's right.\n\n339\n00:16:06.110 --> 00:16:07.010\nWe had itprotv-standard.\n\n340\n00:16:07.010 --> 00:16:10.500\nI'll create an all new resource\ngroup which I'll call itprotv.\n\n341\n00:16:10.500 --> 00:16:12.110\nActually, you know what?\n\n342\n00:16:12.110 --> 00:16:13.620\nLet me put this in itprotv-standard.\n\n343\n00:16:13.620 --> 00:16:16.260\nI'll just share the same\nresource group for all this.\n\n344\n00:16:16.260 --> 00:16:18.160\nI shouldn't have called it standard.\n\n345\n00:16:19.660 --> 00:16:22.190\nThere we go, and\nwe'll leave it on my regular subscription,\n\n346\n00:16:22.190 --> 00:16:24.210\nand we'll get that one created.\n\n347\n00:16:24.210 --> 00:16:26.770\nSo now, I've got a premium, oops.\n\n348\n00:16:26.770 --> 00:16:27.620\nWhat happened?\n\n349\n00:16:27.620 --> 00:16:29.450\nOh.\nPrevious deployment is still active.\n\n350\n00:16:29.450 --> 00:16:30.850\nSo I'm overlapping.\n\n351\n00:16:30.850 --> 00:16:33.910\nLet me change to a different, well shoot.\n\n352\n00:16:33.910 --> 00:16:34.730\nI'll just wait for it.\n\n353\n00:16:34.730 --> 00:16:35.580\nLet's do that.\n\n354\n00:16:35.580 --> 00:16:37.770\nSo it's still creating my other database,\nand so\n\n355\n00:16:37.770 --> 00:16:40.740\nit's mad that I'm spinning up another one\nwhile the first one is still provisioning,\n\n356\n00:16:40.740 --> 00:16:43.690\nand so I've got a little bit of overlap\nhere, so I'll wait for a moment for that.\n\n357\n00:16:43.690 --> 00:16:45.470\nThat should happen pretty quick.\n\n358\n00:16:45.470 --> 00:16:49.410\nOnce it's done, I'll be able to go under\nSQL databases, and oh, there we go,\n\n359\n00:16:49.410 --> 00:16:51.340\nI've already got sample DB1.\n\n360\n00:16:51.340 --> 00:16:53.230\nNow it's done,\nif I would've just waited that much time.\n\n361\n00:16:53.230 --> 00:16:57.420\nAll right well let me spin that\npremium one back up again and\n\n362\n00:16:57.420 --> 00:16:58.670\nthat way we can knock that out real quick.\n\n363\n00:16:58.670 --> 00:17:03.950\nSo let me get our And here and\nI'll just whip up the sample DB.\n\n364\n00:17:03.950 --> 00:17:07.560\nSo, what I'm doing is basically\ntrying to spin these servers up so\n\n365\n00:17:07.560 --> 00:17:08.690\nI can then turn on replication.\n\n366\n00:17:08.690 --> 00:17:14.670\nNow in the pricing tier when we pick\nthe pricing tier, it tells us that\n\n367\n00:17:14.670 --> 00:17:17.770\nyou get standard replication and it tells\nyou that you get active replication, but\n\n368\n00:17:17.770 --> 00:17:21.280\nwhat it doesn't tell you is it\nactually doesn't set it up for you.\n\n369\n00:17:21.280 --> 00:17:22.960\nIt doesn't set it up automatically.\n\n370\n00:17:22.960 --> 00:17:27.410\nWe have to set it up ourselves, and\nfortunately it's really easy to do that.\n\n371\n00:17:27.410 --> 00:17:29.850\nSo it's not a big deal, but\nyou have to remember to turn it on.\n\n372\n00:17:29.850 --> 00:17:34.650\nI know a lot of people spin up a standard,\nor they spin up a premium and\n\n373\n00:17:34.650 --> 00:17:38.130\njust assume the replication is on,\nand it's not.\n\n374\n00:17:38.130 --> 00:17:39.590\nAnd then some kind of failure happens.\n\n375\n00:17:39.590 --> 00:17:40.470\nThey're like, I don't understand.\n\n376\n00:17:40.470 --> 00:17:41.210\nWhy didn't it replicate?\n\n377\n00:17:41.210 --> 00:17:43.340\nAnd it's that they just didn't turn it on.\n\n378\n00:17:43.340 --> 00:17:45.820\nSo it is something we've\ngotta do ourselves, and\n\n379\n00:17:45.820 --> 00:17:49.720\nthat's another important take away\nhere is that it is not automatic.\n\n380\n00:17:49.720 --> 00:17:53.940\nSo lemme just keep this aside and\n\n381\n00:17:53.940 --> 00:17:58.070\nthen we'll have this group, here we go,\nI don't need to pin it and that ones done.\n\n382\n00:17:58.070 --> 00:18:02.840\nAlright, so now my standard is done,\nlet's go take that standard and\n\n383\n00:18:02.840 --> 00:18:04.140\nget replication turned on for it.\n\n384\n00:18:04.140 --> 00:18:07.250\nNow it's a standard so\nI can only do standard replication.\n\n385\n00:18:07.250 --> 00:18:09.560\nI'm gonna have a second\ncopy of the data base And\n\n386\n00:18:09.560 --> 00:18:12.540\nthat second copy I'm not\ngonna be able to see.\n\n387\n00:18:12.540 --> 00:18:13.650\nIt's gonna be hidden from me.\n\n388\n00:18:13.650 --> 00:18:15.020\nMicrosoft's gonna manage it.\n\n389\n00:18:15.020 --> 00:18:18.410\nI can't touch it unless\na failure event happens.\n\n390\n00:18:18.410 --> 00:18:24.000\nSo if I go into my SQL servers here\nright now I've only got itprotv-east.\n\n391\n00:18:24.000 --> 00:18:26.650\nI'm gonna wait for\nitprotv-west to show up, and\n\n392\n00:18:26.650 --> 00:18:29.300\nI'm gonna use that server\nto store my replica.\n\n393\n00:18:29.300 --> 00:18:32.660\nI do get to pick where that replica's\ngonna be, but right now I don't have it.\n\n394\n00:18:32.660 --> 00:18:35.860\nWhile I'm waiting on that Let me show\nyou how to verify whether replication\n\n395\n00:18:35.860 --> 00:18:36.960\nis turned on or not.\n\n396\n00:18:36.960 --> 00:18:42.910\nWhen you go into your SQL databases, if\nyou choose a standard database or higher,\n\n397\n00:18:42.910 --> 00:18:49.490\nso if I choose SampleDB1, I can click on\nit and over here in the monitoring pane,\n\n398\n00:18:49.490 --> 00:18:53.140\nif you scroll down, there's actually\na monitoring pane tucked away in here.\n\n399\n00:18:54.460 --> 00:18:58.540\nWhere it'll show whether application\nis turned on, it sets this guy right\n\n400\n00:18:58.540 --> 00:19:03.400\nhere at the bottom of my screen and the\nlittle bar doesn't really have a name but,\n\n401\n00:19:03.400 --> 00:19:06.770\nthis is replication, and\nif it's all grayed out like this, and says\n\n402\n00:19:06.770 --> 00:19:11.610\nConfigure Geo-Replication, it's a pretty\ngood example of it not being configured.\n\n403\n00:19:11.610 --> 00:19:14.840\nIf it is, see how there's this little,\nwhat is that a?\n\n404\n00:19:14.840 --> 00:19:15.886\n>> Octagon?\n[CROSSTALK]\n\n405\n00:19:15.886 --> 00:19:16.800\n>> Six-sides.\n\n406\n00:19:16.800 --> 00:19:17.540\nHexagon?\n>> Hexagon?\n\n407\n00:19:17.540 --> 00:19:18.210\n>> Hexagon, I think.\n\n408\n00:19:18.210 --> 00:19:21.590\nSo anyhow, whatever that is,\nit'll be green for your instance, and\n\n409\n00:19:21.590 --> 00:19:24.750\nthen you'll have another copy somewhere\nelse, maybe over here in US West, or\n\n410\n00:19:24.750 --> 00:19:27.640\nover in Europe, and there will be\na blue line that runs between, and\n\n411\n00:19:27.640 --> 00:19:29.280\nshowing you that replication is set up.\n\n412\n00:19:29.280 --> 00:19:31.000\nSo that's a way that we can verify it, and\n\n413\n00:19:31.000 --> 00:19:34.550\nyou'll see here on this standard one,\nit is not configured by default\n\n414\n00:19:34.550 --> 00:19:38.540\neven though it's included as\na function of this system all right.\n\n415\n00:19:38.540 --> 00:19:40.590\nLet's go see if that server is ready and\n\n416\n00:19:40.590 --> 00:19:44.780\nif it is then we'll start setting this up,\nand I've got an itprotv west server now.\n\n417\n00:19:44.780 --> 00:19:48.830\nSo I've got east and west, and when I\ngo back into my sequel databases and\n\n418\n00:19:48.830 --> 00:19:50.830\nI take sample DB1.\n\n419\n00:19:50.830 --> 00:19:55.190\nThis is my standard so I'm gonna\nset it up for standard replication.\n\n420\n00:19:55.190 --> 00:19:58.120\nTo do that when I go into it,\nI can verify down\n\n421\n00:19:58.120 --> 00:20:02.330\nhere that the replication is grayed out\nit's not configured and on the right side,\n\n422\n00:20:03.480 --> 00:20:07.470\nthere's a menu item in here\ncalled georeplication, and\n\n423\n00:20:07.470 --> 00:20:11.090\nwhen I choose that it's going to\nlet me pick how I replicate it.\n\n424\n00:20:11.090 --> 00:20:14.630\nSo right now,\nit's got east US as my primary, and\n\n425\n00:20:14.630 --> 00:20:18.660\nmy secondaries are empty:\nGeo-replication not configured.\n\n426\n00:20:18.660 --> 00:20:22.790\nThen you'll see down here\nthe recommended target regions.\n\n427\n00:20:22.790 --> 00:20:24.860\nNotice I can use all these other ones.\n\n428\n00:20:24.860 --> 00:20:26.790\nI can use North Europe if I want, but\n\n429\n00:20:26.790 --> 00:20:32.510\nthey're recommending West US\nbecause they're DR paired, right?\n\n430\n00:20:32.510 --> 00:20:35.060\nSo that recommendation isn't just\nMicrosoft trying to save money like,\n\n431\n00:20:35.060 --> 00:20:36.790\noh this is our least full data center.\n\n432\n00:20:36.790 --> 00:20:38.780\nNo, they're saying this is where\nwe have the most bandwidth\n\n433\n00:20:38.780 --> 00:20:39.800\nyou'll get the best result.\n\n434\n00:20:39.800 --> 00:20:41.620\nSo that's where they want me to go.\n\n435\n00:20:41.620 --> 00:20:44.320\nYou can also pick from the map up here\nif you just kinda like look around, and\n\n436\n00:20:44.320 --> 00:20:46.420\nsee how I can click right\nthere on the recommendation.\n\n437\n00:20:46.420 --> 00:20:48.880\nAs you'll see the ones\nthat are options for me.\n\n438\n00:20:48.880 --> 00:20:53.840\nI'm gonna pick that West US cuz it's\na rare, I don't think I've ever\n\n439\n00:20:53.840 --> 00:20:57.390\nchosen beyond what the recommendation\nwas cuz it's, you're not gonna have a.\n\n440\n00:20:57.390 --> 00:21:00.902\nIf you have a continental failure, the\nodds are you've lost your customer base.\n\n441\n00:21:00.902 --> 00:21:01.521\n>> [LAUGH] Yeah.\n\n442\n00:21:01.521 --> 00:21:03.540\n>> So\nlet that problem kinda work itself out.\n\n443\n00:21:03.540 --> 00:21:06.880\nSo over here, we've got our choice.\n\n444\n00:21:06.880 --> 00:21:09.940\nIt's going to be the west\nUS region is what I chose.\n\n445\n00:21:09.940 --> 00:21:13.430\nThe database name stays the same,\nthe pricing tier stays the same.\n\n446\n00:21:13.430 --> 00:21:18.190\nThe secondary type is set to\nnon-readable and I can't change this.\n\n447\n00:21:18.190 --> 00:21:21.650\nI can't change it because\nthis is a standard replica,\n\n448\n00:21:21.650 --> 00:21:23.170\nand you'll even see that up here.\n\n449\n00:21:23.170 --> 00:21:27.140\nTo enable a readable secondary type,\nwe got to upgrade to a premium edition.\n\n450\n00:21:27.140 --> 00:21:30.610\nSo I could bump up to a Premium and do it,\nbut otherwise I'll stay Non-readable.\n\n451\n00:21:30.610 --> 00:21:32.540\nThe only other thing I need to\npick here is the server name,\n\n452\n00:21:32.540 --> 00:21:36.720\nand I'll choose that server name, and\nyou'll see, there's my itprotv-west, or\n\n453\n00:21:36.720 --> 00:21:37.580\nI could create one right now.\n\n454\n00:21:37.580 --> 00:21:39.240\nI'll choose that itprotv-west.\n\n455\n00:21:39.240 --> 00:21:42.700\nAll right, now notice one more option,\nI'm not gonna use it, but\n\n456\n00:21:42.700 --> 00:21:44.870\nthere is an elastic database pool.\n\n457\n00:21:44.870 --> 00:21:48.080\nRemember how I said this other\ndatabase is gonna cost us money,\n\n458\n00:21:48.080 --> 00:21:50.220\nit's at a reduced rate but\nit is gonna cost money.\n\n459\n00:21:50.220 --> 00:21:55.210\nIf you put it in an elastic database\npool that has enough DTUs just\n\n460\n00:21:55.210 --> 00:21:59.410\nto handle the primary, the secondary's not\nreally doing much other than replication,\n\n461\n00:21:59.410 --> 00:22:00.770\nand so you can save a lot of money and\n\n462\n00:22:00.770 --> 00:22:03.300\nget it to where that replica is\ncosting you very very little.\n\n463\n00:22:03.300 --> 00:22:06.160\nSometimes even nothing if it's literally\ndoing nothing but it's always replicating\n\n464\n00:22:06.160 --> 00:22:09.600\nso there's at least that, but you can\nsave some money by tying it to a pool.\n\n465\n00:22:09.600 --> 00:22:12.910\nI'm not gonna do that for mine, and\nI'll just ahead and hit create.\n\n466\n00:22:12.910 --> 00:22:16.460\nNow, as soon as I hit create that 's\ngonna turn on georeplication, and\n\n467\n00:22:16.460 --> 00:22:20.860\nwhat I'll see is that fancy pants little\nmap here, looks a little different now,\n\n468\n00:22:20.860 --> 00:22:24.580\nand so I've got the hexagon from my main,\n\n469\n00:22:24.580 --> 00:22:28.750\nmy primary I've got this blue\nline showing replication and\n\n470\n00:22:28.750 --> 00:22:32.550\nthere's my replica which is\ncurrently building it's not active.\n\n471\n00:22:32.550 --> 00:22:34.870\nThat's why I don't have\na check mark on it yet, right.\n\n472\n00:22:34.870 --> 00:22:37.290\nMy data Database is blank this\nshould happen pretty quick but\n\n473\n00:22:37.290 --> 00:22:40.300\ndepending of the size of your\ndatabase if you've got a 500 gig\n\n474\n00:22:40.300 --> 00:22:43.120\ndatabase it's gotta copy 500\ngigs of data over there and\n\n475\n00:22:43.120 --> 00:22:46.200\nget it started and it's doing this\nall while the system is online.\n\n476\n00:22:46.200 --> 00:22:50.320\nYour users can be in the system and\nit's no big deal, and see how I've got\n\n477\n00:22:50.320 --> 00:22:53.260\nthat 0% that's gonna climb up again\nthis one will happen pretty click.\n\n478\n00:22:53.260 --> 00:22:57.850\n>> Doc can we make multiple instances\nof these types of read onlys?\n\n479\n00:22:57.850 --> 00:22:59.170\n>> So not.\n\n480\n00:22:59.170 --> 00:23:00.200\nFrom here.\n\n481\n00:23:00.200 --> 00:23:02.420\nThere are ways to do it\nfrom the PowerShell, so\n\n482\n00:23:02.420 --> 00:23:06.780\nsee how you've got these secondaries here,\nand it says Secondaries, with a plural,\n\n483\n00:23:06.780 --> 00:23:11.310\nright, not just Secondary, and right now\nit's seeding and building that up, but\n\n484\n00:23:11.310 --> 00:23:13.670\nyou're actually able to add more,\nand they just haven't added the UI.\n\n485\n00:23:13.670 --> 00:23:16.730\nSo there are ways to do it through\nthe PowerShell, and you might need that,\n\n486\n00:23:16.730 --> 00:23:19.750\nif you need more than one read replica\nto try to increase read performance\n\n487\n00:23:19.750 --> 00:23:21.330\nYou would do that on a premium.\n\n488\n00:23:21.330 --> 00:23:25.890\nOn one like this, a standard,\nthere's not really any reason to do it, so\n\n489\n00:23:25.890 --> 00:23:29.900\nI can't think of a reason to do it,\nbut there are ways with premium.\n\n490\n00:23:29.900 --> 00:23:33.890\nAll right, so that's up and\ngoing, I'm letting that run.\n\n491\n00:23:33.890 --> 00:23:35.190\nLet's look at a premium.\n\n492\n00:23:35.190 --> 00:23:37.170\nRight, let's see if my premium\ndatabases are spun up.\n\n493\n00:23:37.170 --> 00:23:38.890\nSo if I jump over to my sequel databases.\n\n494\n00:23:40.060 --> 00:23:46.160\nI spun up a SampleDB3 and I can see over\nhere that it is a premium, it's a P1.\n\n495\n00:23:46.160 --> 00:23:48.740\nSo, it's up and good, and\nI'm going to take that.\n\n496\n00:23:48.740 --> 00:23:52.897\nThat one's an itprotv-west, and so\nI want to set up a replica for it,\n\n497\n00:23:52.897 --> 00:23:54.879\nthat's over in itprotv-east.\n\n498\n00:23:54.879 --> 00:23:57.015\nSo when I pull up the properties for\nSampleDB3,\n\n499\n00:23:57.015 --> 00:23:59.005\nI'm going to kind of do the reverse,\nright.\n\n500\n00:23:59.005 --> 00:24:01.846\nI'm going to go over her\ninto it's settings And\n\n501\n00:24:01.846 --> 00:24:04.629\nI'm gonna scroll down to Geo-Replication.\n\n502\n00:24:04.629 --> 00:24:08.979\nAnd under Geo-Replication it's\nrecommending East US, right,\n\n503\n00:24:08.979 --> 00:24:12.250\nthe other side cuz they're DR paired.\n\n504\n00:24:12.250 --> 00:24:16.940\nSo I'll go and choose East US but notice\nI can pick all these other ones, and\n\n505\n00:24:16.940 --> 00:24:20.030\ndo you remember on the last when\na lot of these were greyed out?\n\n506\n00:24:20.030 --> 00:24:24.350\nThe greyed out ones you can't really pick,\nbut a green one means you can.\n\n507\n00:24:24.350 --> 00:24:27.370\nAnd the reason they're highlighting all\nthese is the say, like, hey we know\n\n508\n00:24:27.370 --> 00:24:30.820\nthere's lower bandwidth but you're gonna\nbe able to read from this database.\n\n509\n00:24:30.820 --> 00:24:33.970\nSo you might want to put that\ncloser to your customers, so\n\n510\n00:24:33.970 --> 00:24:35.580\nthey get better read performance.\n\n511\n00:24:35.580 --> 00:24:39.090\nAnd so when I go up to the map up here,\nall of these I can actually\n\n512\n00:24:39.090 --> 00:24:43.040\nclick on now as suppose of those\ngrayed out hexagons we saw earlier.\n\n513\n00:24:43.040 --> 00:24:46.200\nBut I'm still gonna go with\nthe recommended East US.\n\n514\n00:24:46.200 --> 00:24:49.290\nAnd i've got a server over there that\nI'll be able to piggyback off of.\n\n515\n00:24:49.290 --> 00:24:53.670\nNow notice on this one,\nthe secondary type defaulted to readable.\n\n516\n00:24:53.670 --> 00:24:57.330\nJust because I'm at the premium tier\ndoesn't mean I have to do readable I could\n\n517\n00:24:57.330 --> 00:25:02.520\nstill choose to do a read only if I want\nand that's what it's doing, readable.\n\n518\n00:25:02.520 --> 00:25:07.300\nBut if I click on that, you can switch it\nto non-readable and that would put me to\n\n519\n00:25:07.300 --> 00:25:10.460\nwhat a standard tier was, where it\nexists but Microsoft hides it from us,\n\n520\n00:25:10.460 --> 00:25:12.990\nwe only see it if a failure happens,\nreadable's the default.\n\n521\n00:25:12.990 --> 00:25:14.370\nNow why would I do that?\n\n522\n00:25:14.370 --> 00:25:18.970\nWell on the non-readable I get a bit of\na price cut, on the readable I don't.\n\n523\n00:25:18.970 --> 00:25:19.760\nBecause it's active.\n\n524\n00:25:19.760 --> 00:25:23.120\nI can use it, I can use it, and it will\nshow up as a database on my system.\n\n525\n00:25:23.120 --> 00:25:24.944\nI'm gonna stick with readable,\nthat's what I want.\n\n526\n00:25:24.944 --> 00:25:30.820\nSo I've got that, my server,\nI'm gonna pick the itprotv-east.\n\n527\n00:25:30.820 --> 00:25:35.490\nSo that's that other server that I've got,\nand we'll select that.\n\n528\n00:25:35.490 --> 00:25:39.030\nAnd I'm not gonna attach this one\nto a pool and we'll create it.\n\n529\n00:25:39.030 --> 00:25:40.230\nJust like on the other one,\n\n530\n00:25:40.230 --> 00:25:44.670\nI'm gonna see my little map update, except\nit's going in the opposite direction.\n\n531\n00:25:44.670 --> 00:25:46.940\nThis premium one is\nreplicating the other way, but\n\n532\n00:25:46.940 --> 00:25:48.562\nit's gonna work the same\nway as the other one.\n\n533\n00:25:48.562 --> 00:25:51.660\nIt's gonna replicate that\ninitial database and then,\n\n534\n00:25:51.660 --> 00:25:55.350\nonce it's done, I'll actually see\nthis database sitting over here.\n\n535\n00:25:55.350 --> 00:25:57.990\nI'll see two copies of the database.\n\n536\n00:25:57.990 --> 00:26:03.250\nOne that's read/write, the primary and\none that's read-only, the secondary.\n\n537\n00:26:03.250 --> 00:26:08.170\nAnd we'll see that information in\nthe properties for our database.\n\n538\n00:26:08.170 --> 00:26:12.710\nSo when I go into the database and\nI start looking at its information,\n\n539\n00:26:15.290 --> 00:26:17.430\nwhy is my screen not jumping over there?\n\n540\n00:26:17.430 --> 00:26:21.760\nSo if I can get over there,\nthen we'll actually be able to see it.\n\n541\n00:26:21.760 --> 00:26:23.660\nLet me navigate back into this\nthing cuz it's gone crazy on me.\n\n542\n00:26:23.660 --> 00:26:29.029\nBut if I navigate into the database, and\nI go into its geo-replication settings,\n\n543\n00:26:29.029 --> 00:26:32.508\nwhen we see that primary and\nsecondary, there it is.\n\n544\n00:26:32.508 --> 00:26:35.440\nAnd it's gonna come up, and\n\n545\n00:26:35.440 --> 00:26:39.800\nit's basically gonna have a new server\nname but the same database name.\n\n546\n00:26:39.800 --> 00:26:44.410\nI have SampleDB3 that's in\nitprotv-west and in itprotv-east.\n\n547\n00:26:44.410 --> 00:26:48.215\nSo if I were to fire up my SQL\nmanagement studio, and point one to\n\n548\n00:26:48.215 --> 00:26:53.090\nitprotv-west.database.windows.net, or\nif I pointed another\n\n549\n00:26:53.090 --> 00:26:58.120\none at itprotv-east.database.windows.net,\nthey both see SampleDB3.\n\n550\n00:26:58.120 --> 00:27:01.076\nOne would be read/write and\none would be read-only, but\n\n551\n00:27:01.076 --> 00:27:04.170\nI could connect to either one,\nthey're both active.\n\n552\n00:27:04.170 --> 00:27:07.490\nAnd I can write my applications to\nexpect a read-only copy over here.\n\n553\n00:27:07.490 --> 00:27:11.420\nIf I want to run a report, I might choose\nto run the report off of this secondary,\n\n554\n00:27:11.420 --> 00:27:14.220\nbecause I know it's not gonna\nimpact my customers up here, but\n\n555\n00:27:14.220 --> 00:27:16.975\nI can still do reads and\noperations from here, or even backups.\n\n556\n00:27:16.975 --> 00:27:18.770\nMaybe I just let my\nbackups run from here so\n\n557\n00:27:18.770 --> 00:27:21.910\nit doesn't impact the other ones, but\nit all happens right from this system.\n\n558\n00:27:23.100 --> 00:27:27.230\nSo that's how we get it set up, it's\npretty straightforward, and then once it's\n\n559\n00:27:27.230 --> 00:27:32.300\nin place, if it was a standard replica,\nI only see it right in here.\n\n560\n00:27:32.300 --> 00:27:34.570\nBut if it's a readable replica,\n\n561\n00:27:34.570 --> 00:27:39.230\nif it's the premium model, then you'll\nactually see it in your SQL databases.\n\n562\n00:27:39.230 --> 00:27:43.090\nSo when I go to SQL databases,\nI've got SampleDB3, and\n\n563\n00:27:43.090 --> 00:27:46.010\nI'll have another copy that shows up.\n\n564\n00:27:46.010 --> 00:27:46.940\nAnd actually see here,\n\n565\n00:27:46.940 --> 00:27:51.540\nI'm showing SampleDB1 both times,\nthat's really not supposed to happen.\n\n566\n00:27:51.540 --> 00:27:53.010\nWhy am I seeing that twice?\n\n567\n00:27:53.010 --> 00:27:55.660\nWell, either way,\nthe one that's over here in itprotv-west,\n\n568\n00:27:55.660 --> 00:27:58.300\nthat's that unreadable and\nthe one I can't connect to.\n\n569\n00:27:58.300 --> 00:28:00.210\nAnd so if I were to try and\nconnect to that with management studio,\n\n570\n00:28:00.210 --> 00:28:02.850\nit would fail because\nthat is that secondary.\n\n571\n00:28:02.850 --> 00:28:06.490\nI guess they maybe updated the portal\ncuz you used to not see those at all but\n\n572\n00:28:06.490 --> 00:28:07.140\nit is showing up.\n\n573\n00:28:07.140 --> 00:28:08.880\nAnd eventually, I'll see my second copy.\n\n574\n00:28:08.880 --> 00:28:14.120\nThere it is, I've got two SampleDB3s and\nthese are different than the SampleDB1,\n\n575\n00:28:14.120 --> 00:28:18.330\nbecause one's read-only, and one's read\nand write, and they're both active.\n\n576\n00:28:19.500 --> 00:28:21.680\n>> Well Don, now that we've set this up,\n\n577\n00:28:21.680 --> 00:28:24.960\nI would love to see, because this\nis eventually what's gonna happen.\n\n578\n00:28:24.960 --> 00:28:29.380\nThis is the whole purpose for us to do\nthis, is what happens if a failure occurs,\n\n579\n00:28:29.380 --> 00:28:32.830\nright, that's the reason that\nwe're employing this method.\n\n580\n00:28:32.830 --> 00:28:35.080\nCan we demonstrate that,\ncan we show that happen?\n\n581\n00:28:35.080 --> 00:28:36.550\nYeah, absolutely, Daniel.\n\n582\n00:28:36.550 --> 00:28:39.050\nIt's actually pretty easy for\nus to go in and test the failover,\n\n583\n00:28:39.050 --> 00:28:42.660\nwe could just call Microsoft and say, can\nyou shut down one of your data centers?\n\n584\n00:28:42.660 --> 00:28:44.460\n>> [LAUGH] Yeah,\nit'll bill on the phone right?\n\n585\n00:28:44.460 --> 00:28:46.090\n>> They'll queue that up, no problem.\n\n586\n00:28:46.090 --> 00:28:49.090\nBut that withstanding,\nif we wanna get in there and test it,\n\n587\n00:28:49.090 --> 00:28:51.680\nthey do have a fail over test that\nwe can use it to flip it right over.\n\n588\n00:28:51.680 --> 00:28:54.210\nYou can do it from the PowerShell but\nthe UI is the easiest way to do it cuz\n\n589\n00:28:54.210 --> 00:28:56.800\nwe have a few verification\ntasks we need to do first.\n\n590\n00:28:56.800 --> 00:29:00.070\nQuick word of warning, remember the\nreplication between the data centers is\n\n591\n00:29:00.070 --> 00:29:03.670\nasynchronous that means changes\nhappen in production and\n\n592\n00:29:03.670 --> 00:29:05.560\nthen they're sent to the backup.\n\n593\n00:29:05.560 --> 00:29:09.280\nSo when you do a failover test you\ncould potentially lose some data right,\n\n594\n00:29:09.280 --> 00:29:12.150\nwe need to be aware of that,\nyou could lose a few transactions.\n\n595\n00:29:12.150 --> 00:29:16.000\nSo you need to schedule this in off\nhours or a time when people are aware.\n\n596\n00:29:16.000 --> 00:29:18.850\nWhat a lot of people will do is in SQL,\n\n597\n00:29:18.850 --> 00:29:22.150\nthey'll just flag their databases\nread only before doing the test.\n\n598\n00:29:22.150 --> 00:29:24.900\nThat way they make sure no changes\ncome in during the test and\n\n599\n00:29:24.900 --> 00:29:26.990\nthey can test the failover,\nmake sure things work, failback,\n\n600\n00:29:26.990 --> 00:29:28.420\nand then flip it back to read/write.\n\n601\n00:29:28.420 --> 00:29:31.160\nSo there's a few different ways they can\nhandle that on the application side,\n\n602\n00:29:31.160 --> 00:29:33.320\nso you'll just wanna make\nsure your team's aware of it.\n\n603\n00:29:33.320 --> 00:29:36.480\nBut if we want to test the failover,\nlet me show you how it works.\n\n604\n00:29:36.480 --> 00:29:40.190\nStep one, we need to make sure our\nreplica is done, I just set these up so\n\n605\n00:29:40.190 --> 00:29:41.370\nthey might not be done yet.\n\n606\n00:29:41.370 --> 00:29:45.090\nSo, I'm going to jump into my SQL\ndatabases and we'll take sample DB1.\n\n607\n00:29:45.090 --> 00:29:47.250\nThat was the first one I set up,\nthe standard.\n\n608\n00:29:47.250 --> 00:29:51.010\nYou failover a standard and a premium the\nsame way, so that there's no difference.\n\n609\n00:29:51.010 --> 00:29:54.800\nSo I'm gonna choose that standard one,\ncuz it's the most likely to be done.\n\n610\n00:29:55.810 --> 00:30:00.530\nAnd what I wanna do is look at its\ngeo-replication settings, so down here in\n\n611\n00:30:00.530 --> 00:30:05.210\nthe monitoring, if I scroll down,\nI can see where it's monitoring all that.\n\n612\n00:30:05.210 --> 00:30:09.430\nAnd if I zoom in, what I'm looking for\nis, I know I'm gonna have this\n\n613\n00:30:09.430 --> 00:30:12.420\nblue with a check mark for\nmy primary, because it's healthy.\n\n614\n00:30:12.420 --> 00:30:18.370\nThe secondary should be green, and if it's\na standard it'll be green with a lock.\n\n615\n00:30:18.370 --> 00:30:20.860\nWhich is what let's me know that\ndatabase is locked, I can't touch it,\n\n616\n00:30:20.860 --> 00:30:22.850\nI can't use it unless I failover.\n\n617\n00:30:22.850 --> 00:30:26.610\nIf this was the premium one, that would\nactually be green with a check mark.\n\n618\n00:30:26.610 --> 00:30:29.260\nLetting me know that it's healthy,\nand it's readable, I can read it.\n\n619\n00:30:29.260 --> 00:30:33.230\nSo lock versus a check lets you know if\nit's standard or premium configuration,\n\n620\n00:30:33.230 --> 00:30:34.830\nreadable or not.\n\n621\n00:30:34.830 --> 00:30:39.230\nSo, it's healthy if it still said like 75%\nin here, I would know it wasn't done with\n\n622\n00:30:39.230 --> 00:30:42.329\nthat initial replication and\nthis line would be dashed also.\n\n623\n00:30:42.329 --> 00:30:46.716\nBut looking at this I can verify\nthat it is done, I am in sync or\n\n624\n00:30:46.716 --> 00:30:51.790\nBackstreet boys or something so\nit's good so I can test my fail over.\n\n625\n00:30:51.790 --> 00:30:57.220\nNow when a failure actually happens,\nyour primary will be dead,\n\n626\n00:30:57.220 --> 00:30:58.570\nyou won't be able to get to it.\n\n627\n00:30:58.570 --> 00:31:00.520\nSo while I could initiate\nthe failover from here,\n\n628\n00:31:00.520 --> 00:31:02.990\nit's better to get used to\ninitiating it from the standby.\n\n629\n00:31:02.990 --> 00:31:06.160\nSo what I'm gonna do is I'm gonna\ngo into my SQL databases, and\n\n630\n00:31:06.160 --> 00:31:12.930\nif I'm gonna failover SampleDB1, I'm\ngonna find the other copy of SampleDB1.\n\n631\n00:31:12.930 --> 00:31:16.180\nAnd if I scroll over, this is the one\nthat's over in itprotv-west, so\n\n632\n00:31:16.180 --> 00:31:17.180\nthis is the other copy.\n\n633\n00:31:17.180 --> 00:31:20.600\nI'm gonna click on that,\nand when it comes up,\n\n634\n00:31:20.600 --> 00:31:24.160\nI'll see it's Geo-Replication\nrole right here is secondary.\n\n635\n00:31:25.510 --> 00:31:29.190\nAnd if I go into its geo-replication\nsettings over here, so\n\n636\n00:31:29.190 --> 00:31:31.160\nI'll go into Geo-Replication.\n\n637\n00:31:31.160 --> 00:31:34.290\nI can see the primary and the secondary,\nthis one is the secondary.\n\n638\n00:31:35.290 --> 00:31:39.640\nIf we click on secondary, we get a new\nmenu that pops up that let's us see\n\n639\n00:31:39.640 --> 00:31:43.450\ninformation about it, and we failover.\n\n640\n00:31:43.450 --> 00:31:46.050\nYou've actually got two options here,\nstop replication and failover.\n\n641\n00:31:46.050 --> 00:31:48.990\nYou might want to stop replication.\n\n642\n00:31:48.990 --> 00:31:50.340\nAnd when that happens,\n\n643\n00:31:50.340 --> 00:31:54.671\nthis now becomes its own standalone\ndatabase that you can read and write to.\n\n644\n00:31:54.671 --> 00:31:58.473\nIf I wanna flip over to the other\ndatabase, but still have the original\n\n645\n00:31:58.473 --> 00:32:02.550\navailable, and stop synchronizing\nchanges between them, I can do that.\n\n646\n00:32:02.550 --> 00:32:06.672\nThis is useful if you wanna have,\nmaybe I'm about to make a big change and\n\n647\n00:32:06.672 --> 00:32:10.540\nI want to have a standby that's\nalready active without the change.\n\n648\n00:32:10.540 --> 00:32:14.243\nI could stop replication and\nmake the change in production, and I know\n\n649\n00:32:14.243 --> 00:32:18.539\nthe backup is up and running without the\nchange, and I can always flip over to it.\n\n650\n00:32:18.539 --> 00:32:23.074\nIf I do that, the second copy is\nno longer being replicated, so\n\n651\n00:32:23.074 --> 00:32:28.830\nif I flip over to that one for production\nI need to go and re-set up replication.\n\n652\n00:32:28.830 --> 00:32:32.100\nIf I do Failover though, what that's gonna\ndo, is it's gonna flip me over to my\n\n653\n00:32:32.100 --> 00:32:35.700\nsecondary, and the secondary is gonna\nstart sending changes to the primary.\n\n654\n00:32:35.700 --> 00:32:39.610\nThe primary becomes the secondary, so I'm\nstill replicating and I can flip back and\n\n655\n00:32:39.610 --> 00:32:40.460\nforth as needed.\n\n656\n00:32:40.460 --> 00:32:43.170\nSo this is more for\nlike a replication test.\n\n657\n00:32:43.170 --> 00:32:47.391\nIf you have an actual failure though,\nyou'll probably wanna stop replication\n\n658\n00:32:47.391 --> 00:32:50.481\nbecause the primary is gone and\nprobably not coming back.\n\n659\n00:32:50.481 --> 00:32:52.980\nAnd it's easier to just set up\nreplication again for that.\n\n660\n00:32:52.980 --> 00:32:56.120\nBut for a test we'll use Failover, and\nso I'm gonna hit that Failover button.\n\n661\n00:32:56.120 --> 00:32:58.840\nAnd it's just telling me it's\ngonna make it the primary.\n\n662\n00:32:58.840 --> 00:33:03.350\nThe old primary will automatically become\nthe secondary, assuming it's online.\n\n663\n00:33:03.350 --> 00:33:05.280\nIf it's not online\nthat's not gonna happen.\n\n664\n00:33:05.280 --> 00:33:08.666\nAnd I'll say Yes and there it goes,\nFailover in progress.\n\n665\n00:33:08.666 --> 00:33:12.009\nNow, when it fails over,\nif it can, it grabs whatever\n\n666\n00:33:12.009 --> 00:33:16.461\ntransaction logs are left on the primary\nto send them over to secondary.\n\n667\n00:33:16.461 --> 00:33:19.232\nBut, the odds are if you're failing\nover that's not gonna happen.\n\n668\n00:33:19.232 --> 00:33:23.275\nSo, it's gonna try and shift them over and\nget us as up to date as possible.\n\n669\n00:33:23.275 --> 00:33:26.162\nBut if that doesn't work,\nthen we'll lose some transactions, and\n\n670\n00:33:26.162 --> 00:33:28.190\nthen the other side will become active.\n\n671\n00:33:28.190 --> 00:33:31.490\nSo right now, the status on these\nguys is showing as Pending.\n\n672\n00:33:31.490 --> 00:33:36.540\nMy primary is West US now instead\nof East US, but it's Pending.\n\n673\n00:33:36.540 --> 00:33:39.170\nAnd my secondary's East US,\nbut again, it's Pending.\n\n674\n00:33:39.170 --> 00:33:41.602\nSo these are now flipping around, and\n\n675\n00:33:41.602 --> 00:33:44.801\nwhen it's done my little\nchart here will change.\n\n676\n00:33:44.801 --> 00:33:48.218\nAnd see how I've got the dashed lines\nagain, letting me know it's not stable,\n\n677\n00:33:48.218 --> 00:33:50.366\nand I don't have a check\nmark on either location.\n\n678\n00:33:50.366 --> 00:33:53.109\nAnd so I can monitor this,\nI'll actually get a bell when it's done.\n\n679\n00:33:53.109 --> 00:33:55.996\nBut we can always refresh this screen too,\nand\n\n680\n00:33:55.996 --> 00:34:00.748\neventually it'll tell us whether or\nnot we've successfully replicated.\n\n681\n00:34:00.748 --> 00:34:04.060\nSo we can just sit here and stare at\nthe screen and refresh and refresh.\n\n682\n00:34:04.060 --> 00:34:07.910\nBut really, it's flipping over at\nthis point, and now we can see,\n\n683\n00:34:07.910 --> 00:34:11.941\ndo our applications still work,\nare we able to connect, and so on.\n\n684\n00:34:11.941 --> 00:34:15.039\nIn Microsoft SQL, when somebody\nwrites an application that uses\n\n685\n00:34:15.039 --> 00:34:18.605\nthe SQL Native Client, you can specify\nmore than one server to connect to.\n\n686\n00:34:18.605 --> 00:34:21.700\nYou specify a primary, and\na secondary, and so on.\n\n687\n00:34:21.700 --> 00:34:24.262\nSo for us, the primary would've been\n\n688\n00:34:24.262 --> 00:34:28.995\nitprotv-east.database.windows.net looking\nfor SampleDB1.\n\n689\n00:34:28.995 --> 00:34:34.100\nAnd then our secondary would be\nitprotv-west looking for SampleDB1.\n\n690\n00:34:34.100 --> 00:34:35.490\nAnd so in the SQL Native Client,\n\n691\n00:34:35.490 --> 00:34:39.580\nif it fails to connect to the primary,\nit'll connect to the other one.\n\n692\n00:34:39.580 --> 00:34:41.040\nAnd so when I do this Failover,\n\n693\n00:34:41.040 --> 00:34:43.840\nour clients will actually still\ntry to connect to the primary.\n\n694\n00:34:43.840 --> 00:34:46.825\nBut they won't be able to because\nit's not readable, right.\n\n695\n00:34:46.825 --> 00:34:49.953\nAnd so then it's gonna kick them\nover to the other side, and\n\n696\n00:34:49.953 --> 00:34:54.540\nnow they're reading off itprotv-west,\nand we've got Failover, nice and simple.\n\n697\n00:34:54.540 --> 00:34:56.250\nThat's done programmatically\non their side.\n\n698\n00:34:56.250 --> 00:34:58.290\nFor us as admins,\nwe just have to flip it over.\n\n699\n00:34:58.290 --> 00:35:01.040\nThe developers have to do the real leg\nwork there to make sure the application\n\n700\n00:35:01.040 --> 00:35:02.120\nswitches over.\n\n701\n00:35:02.120 --> 00:35:04.630\nBut once that's done, we've now got\na nice little redundant environment.\n\n702\n00:35:04.630 --> 00:35:08.446\nAnd It should,\nI kind of figured it would be done by now.\n\n703\n00:35:08.446 --> 00:35:10.930\nWhat's probably taking the longest\nhere is not failing over.\n\n704\n00:35:10.930 --> 00:35:12.275\nThe failover is probably done.\n\n705\n00:35:12.275 --> 00:35:15.672\nIt's more than likely setting up\nthe replication back to the primary that's\n\n706\n00:35:15.672 --> 00:35:16.760\ntaking a while.\n\n707\n00:35:16.760 --> 00:35:18.541\nSo, I'm gonna get impatient\nhere in a minute and\n\n708\n00:35:18.541 --> 00:35:20.720\nthen I'll probably do something\nthat'll break it worse.\n\n709\n00:35:20.720 --> 00:35:24.215\nBut, given enough time,\nthat should finish, and once that's done,\n\n710\n00:35:24.215 --> 00:35:25.270\nwe're in business.\n\n711\n00:35:25.270 --> 00:35:28.383\nNow both of my active\ncopies are in itprotv-west.\n\n712\n00:35:28.383 --> 00:35:32.963\nSo SampleDB1 and SampleDB3 are actually\nrunning out of itprotv-west versus\n\n713\n00:35:32.963 --> 00:35:36.840\nitprotv-east, which is\njust holding my backups.\n\n714\n00:35:36.840 --> 00:35:38.020\n>> Oh, very cool stuff, Don.\n\n715\n00:35:38.020 --> 00:35:42.070\nIs there anything else that we need to\nknow when it comes to this geographical\n\n716\n00:35:42.070 --> 00:35:43.200\nredundancy thing that we have?\n\n717\n00:35:43.200 --> 00:35:46.737\n>> So the key takeaway is, if you forget\neverything else from the episode, right,\n\n718\n00:35:46.737 --> 00:35:48.570\nis remember it's not on by default.\n\n719\n00:35:48.570 --> 00:35:51.270\nYou've gotta turn it on, right,\nso that's kinda step one.\n\n720\n00:35:51.270 --> 00:35:54.390\nYou can use the elastic pools to try and\n\n721\n00:35:54.390 --> 00:35:56.410\nreduce the cost of having\nthat backup if you want.\n\n722\n00:35:56.410 --> 00:35:58.160\nThat works great with standards, not so\n\n723\n00:35:58.160 --> 00:36:02.717\ngreat with primaries because you've got\nthe readable copy, or premiums, sorry.\n\n724\n00:36:02.717 --> 00:36:07.130\nAnd then the third thing is,\nonce it's on, Failover's really easy,\n\n725\n00:36:07.130 --> 00:36:08.580\nFailover's pretty automatic.\n\n726\n00:36:08.580 --> 00:36:10.190\nBut your developers need\nto be aware of this,\n\n727\n00:36:10.190 --> 00:36:11.760\nbecause the server name actually changes.\n\n728\n00:36:11.760 --> 00:36:13.920\nIt's not the same server\nname on the other side.\n\n729\n00:36:13.920 --> 00:36:15.750\nSo the application has\nto be aware of this.\n\n730\n00:36:15.750 --> 00:36:18.067\nThe database is there,\nit's active, it's ready to go,\n\n731\n00:36:18.067 --> 00:36:19.401\nbut it's on a different server.\n\n732\n00:36:19.401 --> 00:36:22.490\nSo, SQL Native Client has\nthat all built into it.\n\n733\n00:36:22.490 --> 00:36:25.279\nYour developers will know to do that, you\njust need to make sure they know about it.\n\n734\n00:36:25.279 --> 00:36:25.795\n>> Awesome stuff.\n\n735\n00:36:25.795 --> 00:36:26.720\n>> That's basically it.\n\n736\n00:36:26.720 --> 00:36:30.005\n>> Well, Don, thank you so much for\nhelping us demystify some of this\n\n737\n00:36:30.005 --> 00:36:34.620\ngeo-replication, all this other goodness\nthat Azure has available for us.\n\n738\n00:36:34.620 --> 00:36:38.580\nIt is our benefit to learn how to\noperate this thing, obviously,\n\n739\n00:36:38.580 --> 00:36:40.886\nin case something awry goes, right?\n\n740\n00:36:40.886 --> 00:36:42.668\n>> [LAUGH]\n>> That being said, Don,\n\n741\n00:36:42.668 --> 00:36:45.042\nit looks like our time\nallotted has expired.\n\n742\n00:36:45.042 --> 00:36:47.650\nWe're gonna go ahead and\nsign off right now for ITProTV,\n\n743\n00:36:47.650 --> 00:36:49.343\nI've been your host Daniel Lowrie.\n\n744\n00:36:49.343 --> 00:36:50.238\n>> And I'm Don Pezet.\n\n745\n00:36:50.238 --> 00:36:51.803\n>> And we'll see you next time.\n\n746\n00:36:51.803 --> 00:36:58.320\n[SOUND]\n\n",
          "vimeoId": "151774459"
        },
        {
          "description": "In this episode, Don and Daniel explain how to recover data from a backup in case of an accidental deletion or corruption of data by implementing a self-service restore. They explain how Azure SQL takes backups and replicates data and then move into performing a restore from the Azure SQL portal as well as by using the PowerShell.",
          "length": "1983",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-azuresql/techskills-azuresql-4-2-self_service_restore-011216-1.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-azuresql/techskills-azuresql-4-2-self_service_restore-011216-1-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-azuresql/techskills-azuresql-4-2-self_service_restore-011216-1-sm.jpg",
          "title": "Self-Service Restore",
          "transcript": "WEBVTT\n\n1\n00:00:00.000 --> 00:00:10.000\n[MUSIC]\n\n2\n00:00:12.129 --> 00:00:16.291\nAll right, greetings everyone, and welcome\nto another great episode of ITProTV.\n\n3\n00:00:16.291 --> 00:00:19.504\nI'm your host, Daniel Lowrie,\nand in today's episode,\n\n4\n00:00:19.504 --> 00:00:22.089\nwe are continuing on with\nour Azure SQL series.\n\n5\n00:00:22.089 --> 00:00:24.771\nJoining me again in the studio today,\nwell, you know who it is,\n\n6\n00:00:24.771 --> 00:00:26.422\nit's my good friend, Mr. Don Pezet.\n\n7\n00:00:26.422 --> 00:00:27.422\nDon, welcome back to the show.\n\n8\n00:00:27.422 --> 00:00:28.580\nHow you doing today, sir?\n\n9\n00:00:28.580 --> 00:00:29.400\n>> I am doing great.\n\n10\n00:00:29.400 --> 00:00:32.840\nReady to jump right back into\nthe world of Azure SQL, and today\n\n11\n00:00:32.840 --> 00:00:37.850\nwe're gonna do kind of a follow-up to, we\ntalked about backups and geo-replication,\n\n12\n00:00:37.850 --> 00:00:41.490\nand all these different things that\nkind of keep our database nice and safe.\n\n13\n00:00:41.490 --> 00:00:43.970\nNow we're gonna take a look\nat doing a data restore,\n\n14\n00:00:43.970 --> 00:00:47.190\nwhich is something we do when our\ndata turned out not to be so safe.\n\n15\n00:00:47.190 --> 00:00:49.193\nSo it's an important thing to understand,\n\n16\n00:00:49.193 --> 00:00:52.547\nis that Azure SQL has a lot of great\ntechnologies in there for backing up and\n\n17\n00:00:52.547 --> 00:00:55.901\nprotecting your data, but occasionally\nyou are gonna need to reach in and\n\n18\n00:00:55.901 --> 00:00:59.171\ndo a restore to be able to retrieve\nthat data, and get back in business.\n\n19\n00:00:59.171 --> 00:01:00.629\nSo that's what we've got on the plate.\n\n20\n00:01:00.629 --> 00:01:02.629\n>> Yeah, unfortunately,\nit's just a matter of fact.\n\n21\n00:01:02.629 --> 00:01:03.580\nThings are gonna go awry.\n\n22\n00:01:03.580 --> 00:01:06.944\nThey're gonna go bad, and when that\nhappens, we've gotta be schooled up,\n\n23\n00:01:06.944 --> 00:01:10.380\nwe've gotta know what to do, how we reach\ninto Azure and say help me, please.\n\n24\n00:01:10.380 --> 00:01:14.000\nI gotta get that data back, and Don,\nthat's what you're gonna show us today,\n\n25\n00:01:14.000 --> 00:01:17.620\nand you're gonna give us a little bit of\ninformation to go along with that to help\n\n26\n00:01:17.620 --> 00:01:21.239\nus better plan for those restores, make\nsure we're doing it the right way, and\n\n27\n00:01:21.239 --> 00:01:22.671\nfollowing proper procedure.\n\n28\n00:01:22.671 --> 00:01:25.159\n>> Yeah,\none of the things we hear a lot is, well,\n\n29\n00:01:25.159 --> 00:01:29.040\nwhen I deploy a database into Azure,\nI don't have to worry about it.\n\n30\n00:01:29.040 --> 00:01:30.462\nMicrosoft's backing it up.\n\n31\n00:01:30.462 --> 00:01:32.921\nAnd if a server fails,\nMicrosoft's restoring it.\n\n32\n00:01:32.921 --> 00:01:34.538\nThey deal with everything, don't they?\n\n33\n00:01:34.538 --> 00:01:37.530\nWell, not entirely.\n\n34\n00:01:37.530 --> 00:01:40.296\nSo from a infrastructure standpoint,\nyes, they take care of everything.\n\n35\n00:01:40.296 --> 00:01:43.441\nI don't have to worry about that if\na hard drive fails at Microsoft side,\n\n36\n00:01:43.441 --> 00:01:44.420\nthey deal with that.\n\n37\n00:01:44.420 --> 00:01:45.671\nIt's covered.\n\n38\n00:01:45.671 --> 00:01:49.688\nAnd if I'm doing a geo-replicated\nserver and an entire data center fails,\n\n39\n00:01:49.688 --> 00:01:52.336\nMicrosoft flips me over\nto the other data center.\n\n40\n00:01:52.336 --> 00:01:52.962\nThey take care that.\n\n41\n00:01:52.962 --> 00:01:55.950\nI don't have to worry about those things.\n\n42\n00:01:55.950 --> 00:01:59.560\nBut what they don't protect\nyou from is yourself.\n\n43\n00:01:59.560 --> 00:02:03.340\nIf I go into a database and I delete\na table, I just dropped the whole table,\n\n44\n00:02:03.340 --> 00:02:04.480\nall that data is gone.\n\n45\n00:02:04.480 --> 00:02:07.253\nWell, Microsoft assumes that\nI knew what I was doing.\n\n46\n00:02:07.253 --> 00:02:08.580\n[LAUGH] Maybe naively, I don't know.\n\n47\n00:02:08.580 --> 00:02:11.670\nThey assume that the end user\nknows what they're doing.\n\n48\n00:02:11.670 --> 00:02:14.340\nAnd when we delete that table,\nit's now gone.\n\n49\n00:02:14.340 --> 00:02:16.940\nAnd if I wanna get it back, what can I do?\n\n50\n00:02:16.940 --> 00:02:19.300\nWell, I've gotta go to my backups.\n\n51\n00:02:19.300 --> 00:02:22.690\nAnd as far as the backups are concerned,\nMicrosoft sets that up for us, also.\n\n52\n00:02:22.690 --> 00:02:26.670\nSo when you fire up an Azure SQL database,\neven if you don't even think about\n\n53\n00:02:26.670 --> 00:02:31.280\nbackups, you just turn it on and let it\ngo, Microsoft is already backing that up.\n\n54\n00:02:32.410 --> 00:02:36.740\nAnd in a significant enough failure,\nMicrosoft will use that to restore,\n\n55\n00:02:36.740 --> 00:02:38.790\nto get your database back online.\n\n56\n00:02:38.790 --> 00:02:42.620\nBut for minor things, for human errors,\nfor things that we delete or whatever,\n\n57\n00:02:42.620 --> 00:02:44.730\nwe've gotta jump in and\nbe able to get that back.\n\n58\n00:02:44.730 --> 00:02:49.060\nSo I wanna take a look at that kind\nof backup operation first, and\n\n59\n00:02:49.060 --> 00:02:50.730\nthen we'll take a look at\nthe restore side of it.\n\n60\n00:02:50.730 --> 00:02:54.190\nSo on the backup side, Microsoft\ndoes something really interesting.\n\n61\n00:02:54.190 --> 00:02:55.380\nNow, I've set up backups.\n\n62\n00:02:55.380 --> 00:02:56.878\nDaniel, you've set up backups.\n\n63\n00:02:56.878 --> 00:03:00.814\nWhen you backup an average server,\nwhat's your normal backup interval,\n\n64\n00:03:00.814 --> 00:03:02.629\nhow often do you normally backup?\n\n65\n00:03:02.629 --> 00:03:06.879\n>> We do a full backup weekly and\nthen incremental backups daily.\n\n66\n00:03:06.879 --> 00:03:08.340\n>> And\nthat's a pretty common backup strategy.\n\n67\n00:03:08.340 --> 00:03:12.481\nBecause the full backup, it could take\nhours, depending on the size of your data,\n\n68\n00:03:12.481 --> 00:03:15.853\nand then you incremental backups\nthroughout the week because those\n\n69\n00:03:15.853 --> 00:03:19.840\nare a lot faster, they're smaller sets,\nit's just what's changed.\n\n70\n00:03:19.840 --> 00:03:21.886\nAnd so you just back that up,\nand it goes faster.\n\n71\n00:03:21.886 --> 00:03:27.031\nBut if you're backing up once a day,\nlet's say you're backing up at midnight,\n\n72\n00:03:27.031 --> 00:03:29.770\nand you have a database failure at 11 PM.\n\n73\n00:03:31.370 --> 00:03:34.130\nHow much data did you just lose?\n\n74\n00:03:34.130 --> 00:03:35.590\nYou just lost 23 hours of data.\n\n75\n00:03:35.590 --> 00:03:37.330\nThat's pretty significant.\n\n76\n00:03:37.330 --> 00:03:40.520\nWe may want to backup\nmore rapidly than that\n\n77\n00:03:40.520 --> 00:03:45.510\nto reduce our recovery time objective,\nsorry, our recovery point objective.\n\n78\n00:03:45.510 --> 00:03:46.921\nI gotta remember our backup terminology.\n\n79\n00:03:46.921 --> 00:03:49.030\nSo you have an RPO and an RTO.\n\n80\n00:03:49.030 --> 00:03:53.255\nThe recovery point objective is how\nmuch data you can afford to lose.\n\n81\n00:03:53.255 --> 00:03:56.913\nAnd the recovery time objective is how\nlong you can afford to be down before you\n\n82\n00:03:56.913 --> 00:03:58.880\ncan get the system back online.\n\n83\n00:03:58.880 --> 00:04:03.092\nAnd those values, RPO and RTO,\nare really subjected to you,\n\n84\n00:04:03.092 --> 00:04:05.280\nto your company and your needs.\n\n85\n00:04:05.280 --> 00:04:08.928\nDaniel, you mentioned backing it up\nonce per day, that's pretty common for\n\n86\n00:04:08.928 --> 00:04:10.870\nsmall businesses or noncritical data.\n\n87\n00:04:10.870 --> 00:04:15.667\nBut if it's mission-critical data, let's\nsay you're a hospital, or a financial\n\n88\n00:04:15.667 --> 00:04:20.214\ninstitution, you're a bank, and\nyou're handling financial transactions.\n\n89\n00:04:20.214 --> 00:04:22.740\nCan you lose 23 hours\nworth of transactions?\n\n90\n00:04:22.740 --> 00:04:23.700\nMaybe?\n\n91\n00:04:23.700 --> 00:04:27.305\nIf you've been printing and saving the\npaper receipt for every transaction and\n\n92\n00:04:27.305 --> 00:04:31.068\nyou lose 23 hours of data, you could have\npeople sit there with those receipts and\n\n93\n00:04:31.068 --> 00:04:32.879\nredo the data entry after the failure.\n\n94\n00:04:32.879 --> 00:04:35.160\n23 hours is not so bad.\n\n95\n00:04:35.160 --> 00:04:38.180\nWell, unless you're doing millions\nof transactions per minute, and\n\n96\n00:04:38.180 --> 00:04:40.470\nthen, it's not feasible anymore.\n\n97\n00:04:40.470 --> 00:04:43.730\nSo you might need to backup\nmore than one time a day.\n\n98\n00:04:43.730 --> 00:04:47.046\nYou might need to backup\nmore than one time an hour.\n\n99\n00:04:47.046 --> 00:04:49.461\nTake, for example, Amazon.com.\n\n100\n00:04:49.461 --> 00:04:50.989\nIf they lost an hour of data,\n\n101\n00:04:50.989 --> 00:04:54.910\nthat's millions of dollars in\ntransactions that they performed.\n\n102\n00:04:54.910 --> 00:04:59.140\nSo they backup much more\nfrequently than that.\n\n103\n00:04:59.140 --> 00:05:03.979\nI read a paper once, and they were doing\nthese constant transactional backups\n\n104\n00:05:03.979 --> 00:05:05.980\nthat were basically real time.\n\n105\n00:05:05.980 --> 00:05:09.879\nAnd with Azure SQL,\nMicrosoft does that for you too.\n\n106\n00:05:09.879 --> 00:05:15.035\nWith Azure SQL, the default is that it's\nbacking up your data every 60 seconds.\n\n107\n00:05:15.035 --> 00:05:17.296\n>> Whoa.\n>> Once a minute.\n\n108\n00:05:17.296 --> 00:05:19.146\nAnd I know that sounds pretty excessive,\nbut\n\n109\n00:05:19.146 --> 00:05:22.310\nthe way that it works is they backup your\ndatabase the moment you create it, so\n\n110\n00:05:22.310 --> 00:05:25.740\nthe moment you create it,\nthere's a full backup that's done.\n\n111\n00:05:25.740 --> 00:05:28.204\nAnd then as changes\nare entered into your database,\n\n112\n00:05:28.204 --> 00:05:31.004\nevery 60 seconds Microsoft\nis capturing those changes.\n\n113\n00:05:31.004 --> 00:05:33.171\nThey're basically doing\ntransaction log backups.\n\n114\n00:05:33.171 --> 00:05:34.587\nAnd they're doing that every 60 seconds.\n\n115\n00:05:34.587 --> 00:05:37.140\nYou don't even have to set it up.\n\n116\n00:05:37.140 --> 00:05:40.214\nAnd this is on the cheapest database\nto the most expensive database, so\n\n117\n00:05:40.214 --> 00:05:43.045\nit's not like a higher tier's\ngonna get me a better backup here.\n\n118\n00:05:43.045 --> 00:05:47.993\nAt the basic tier, I'm still getting\nbackups every 60 seconds, very,\n\n119\n00:05:47.993 --> 00:05:49.110\nvery granular.\n\n120\n00:05:49.110 --> 00:05:54.234\nBut what is different between the backup\ntiers is how far that retention is,\n\n121\n00:05:54.234 --> 00:05:56.087\nhow far back I can restore.\n\n122\n00:05:56.087 --> 00:06:00.038\nAnd basically to break it down like this,\non a basic data base,\n\n123\n00:06:00.038 --> 00:06:03.220\nit's got a seven day retention period.\n\n124\n00:06:03.220 --> 00:06:06.161\nIf I do a standard, like an S0 through S5,\n\n125\n00:06:06.161 --> 00:06:09.670\nthe standards have a retention\nperiod of 14 days.\n\n126\n00:06:09.670 --> 00:06:12.868\nAnd then if you do one of the premium\ndatabases, one of the high end,\n\n127\n00:06:12.868 --> 00:06:15.300\nthe expensive ones,\nthey're actually 35 day.\n\n128\n00:06:15.300 --> 00:06:18.449\nSo you're basically looking at one week,\ntwo weeks, and\n\n129\n00:06:18.449 --> 00:06:22.129\nthen a full month that they'll\nretain a backup every 60 seconds.\n\n130\n00:06:22.129 --> 00:06:23.880\nSo it's a pretty impressive number.\n\n131\n00:06:23.880 --> 00:06:26.340\nAnd if you forget those numbers, don't\nworry about it, here let me show you.\n\n132\n00:06:26.340 --> 00:06:30.860\nWhen you go to create a database,\nso if I go into Azure Portal, and\n\n133\n00:06:30.860 --> 00:06:34.530\nI jump into SQL databases, and\nI go to add a database in.\n\n134\n00:06:34.530 --> 00:06:36.479\nWhen I go to create that database,\n\n135\n00:06:36.479 --> 00:06:39.379\nit's going to ask me to\npick the performance tier.\n\n136\n00:06:39.379 --> 00:06:44.621\nAnd when I go into the performance tier,\nand you start looking at\n\n137\n00:06:44.621 --> 00:06:51.730\nthe difference between those performance\ntiers, it's not showing it, is it?\n\n138\n00:06:51.730 --> 00:06:56.280\nIt used to show it right on here,\nwell shoot, now I'm misleading you guys.\n\n139\n00:06:56.280 --> 00:06:59.789\nIt used to show it right on here what\nthat data retention period was, and\n\n140\n00:06:59.789 --> 00:07:02.253\nnow I guess they've changed it,\nso it doesn't.\n\n141\n00:07:02.253 --> 00:07:06.503\nSo you see Point In Time Restore,\nthere you go if you mouse over it.\n\n142\n00:07:06.503 --> 00:07:10.118\nSo here I am on a premium, and\nif I float over Point In Time Restore,\n\n143\n00:07:10.118 --> 00:07:13.171\nthere see how it says\nPoint In Time Restore, 35 days.\n\n144\n00:07:13.171 --> 00:07:16.820\nSo it's gonna maintain backups\nevery 60 seconds for 35 days.\n\n145\n00:07:16.820 --> 00:07:20.242\nAnd if I start to look at some of these\nother ones like the standard, and\n\n146\n00:07:20.242 --> 00:07:23.960\nI float over that same Point In Time\nRestore, I'll get a little mouse over.\n\n147\n00:07:23.960 --> 00:07:27.320\nAnd I guess my head's on top of that,\nbut it says 14 days,\n\n148\n00:07:27.320 --> 00:07:30.088\nlet me see if I can get it\ndifferent on the screen.\n\n149\n00:07:30.088 --> 00:07:31.660\nAnd here we go.\n\n150\n00:07:31.660 --> 00:07:35.921\nSo here's that standard one, and if I\nfloat over that, we can see the 14 days.\n\n151\n00:07:35.921 --> 00:07:40.550\nAnd if we go down to the basic one here at\nthe bottom, Point in Time Restore, 7 days.\n\n152\n00:07:40.550 --> 00:07:42.879\nSo I'm getting at least\na solid week of backups.\n\n153\n00:07:42.879 --> 00:07:46.098\nNow, remember, Microsoft is\nprotecting us from hardware failure.\n\n154\n00:07:46.098 --> 00:07:48.898\nIf a power supply dies,\nif a hard drive dies,\n\n155\n00:07:48.898 --> 00:07:53.422\nMicrosoft's got us covered even if\nyou don't have geo-replication.\n\n156\n00:07:53.422 --> 00:07:56.522\nSo on some of the higher tiers,\nI can do Standard Geo-Replication.\n\n157\n00:07:56.522 --> 00:07:58.275\nOr active geo replication,\n\n158\n00:07:58.275 --> 00:08:02.720\nwhere I've got a copy of my data\nin another data center somewhere.\n\n159\n00:08:02.720 --> 00:08:06.070\nSo if one copy fails, the other one\njust immediately goes active, but\n\n160\n00:08:06.070 --> 00:08:12.010\neven on a basic where you don't have\nreplication, if the physical server fails,\n\n161\n00:08:12.010 --> 00:08:14.920\nMicrosoft will take the most\nrecent backup of your server,\n\n162\n00:08:14.920 --> 00:08:16.940\nrestore it to new hardware and\nbring it back online.\n\n163\n00:08:16.940 --> 00:08:18.120\nThat's automatic.\n\n164\n00:08:18.120 --> 00:08:20.720\nRight, so on a hardware failure, right,\n\n165\n00:08:20.720 --> 00:08:24.660\ninfrastructure level, Microsoft will take\ncare of you, even on a network level.\n\n166\n00:08:24.660 --> 00:08:26.020\nIf the network connectivity for\n\n167\n00:08:26.020 --> 00:08:28.660\nthat data center dies, they'll\nrestore you at another data center,\n\n168\n00:08:28.660 --> 00:08:32.100\nbecause the backups are being stored\nin different replicated areas.\n\n169\n00:08:32.100 --> 00:08:34.750\nSo, they actually store\nthree copies of your backup.\n\n170\n00:08:34.750 --> 00:08:38.460\nTwo in the same availability zone\nas what your main system is, and\n\n171\n00:08:38.460 --> 00:08:40.850\none more somewhere else, and so\nthat's how they're able to restore that.\n\n172\n00:08:40.850 --> 00:08:43.790\nSo, we get some really\ngood coverage there and\n\n173\n00:08:43.790 --> 00:08:45.920\nthe ability to restore\nthat stuff pretty quickly.\n\n174\n00:08:47.090 --> 00:08:50.290\nWhat it doesn't do,\nis the user stuff, right.\n\n175\n00:08:50.290 --> 00:08:54.340\nSo if I delete a table,\nwell, if I delete a table or\n\n176\n00:08:54.340 --> 00:08:59.029\nif somebody we accidentally drop a table,\nwe do a bad data import, we need to go and\n\n177\n00:08:59.029 --> 00:09:03.172\nrestore, right, and we're normally gonna\nknow that in less than seven days.\n\n178\n00:09:03.172 --> 00:09:05.400\n[LAUGH] We know it in a few minutes,\nright?\n\n179\n00:09:05.400 --> 00:09:09.180\nI try to batch import 1,000 rows or\n10,000 or 1 million rows, and\n\n180\n00:09:09.180 --> 00:09:12.820\nsomething goes completely crazy,\nI know right then I need to do a restore.\n\n181\n00:09:12.820 --> 00:09:14.490\nAnd I don't wanna do\na restore back seven days,\n\n182\n00:09:14.490 --> 00:09:16.450\nI just wanna restore a few minutes, right.\n\n183\n00:09:16.450 --> 00:09:20.437\nAnd so the seven days is really enough\neven for the premium databases.\n\n184\n00:09:20.437 --> 00:09:23.940\nBut on the premium databases it's nice to\nbe able to go all the way back to 35 days.\n\n185\n00:09:23.940 --> 00:09:28.370\n>> Now, Don, if we do have to dive\ninto doing a point in time restore,\n\n186\n00:09:28.370 --> 00:09:30.230\nwhat kind of down time are we looking at?\n\n187\n00:09:30.230 --> 00:09:32.940\nIs that gonna bring my network\ndown to a standstill and\n\n188\n00:09:32.940 --> 00:09:36.440\nI've gotta send out a blast email saying\nhey, the database is unavailable for\n\n189\n00:09:36.440 --> 00:09:39.480\nthe next two hours while we restore it?\n\n190\n00:09:39.480 --> 00:09:42.020\nNot really, and\nthe reason is the way the restore works.\n\n191\n00:09:42.020 --> 00:09:45.451\nNormally when we think of a restore,\nwhat do you think?\n\n192\n00:09:45.451 --> 00:09:48.181\nDo you think the current\ndatabase goes away and\n\n193\n00:09:48.181 --> 00:09:52.480\nI replace it with a copy of\nthis backed up database, right?\n\n194\n00:09:52.480 --> 00:09:55.340\nBut in SQL,\nyou really don't want to do that.\n\n195\n00:09:55.340 --> 00:09:58.390\nYou never want to replace your\ncurrent database if it's online.\n\n196\n00:09:58.390 --> 00:10:02.510\nIf your current database is dead, right,\nthat's when you wanna replace it.\n\n197\n00:10:02.510 --> 00:10:03.890\nAnd Microsoft takes care of that for you,\n\n198\n00:10:03.890 --> 00:10:06.000\nso you don't even have\nto worry about that.\n\n199\n00:10:06.000 --> 00:10:08.670\nThe only time we really need to a restore\nis when we're trying to recover\n\n200\n00:10:08.670 --> 00:10:09.690\nmissing data.\n\n201\n00:10:09.690 --> 00:10:11.740\nThe problem with missing data is\nthat it usually doesn't bring your\n\n202\n00:10:11.740 --> 00:10:15.360\ndatabase offline, and that means changes\nare continuing to come into the database.\n\n203\n00:10:15.360 --> 00:10:19.600\nIf I were to replace my existing\ndatabase I would lose changes, and\n\n204\n00:10:19.600 --> 00:10:22.600\nthat's not necessarily a good thing so\nwhen we do a restore,\n\n205\n00:10:22.600 --> 00:10:26.150\nwhen we do one of these point in time\nrestores here, what it's doing is it's not\n\n206\n00:10:26.150 --> 00:10:30.710\nreplacing the existing database,\nit's creating a copy of it, okay?\n\n207\n00:10:30.710 --> 00:10:34.190\nIt's gonna create a clone or\na restored copy of the database and\n\n208\n00:10:34.190 --> 00:10:36.570\nI'll be running both side by side.\n\n209\n00:10:36.570 --> 00:10:39.790\nUsers will still be connected\nto the original database, but\n\n210\n00:10:39.790 --> 00:10:42.950\nnow I've got this copy that's up\nthat's got my missing data, and\n\n211\n00:10:42.950 --> 00:10:45.190\nfrom there I can take one of two actions.\n\n212\n00:10:45.190 --> 00:10:48.840\nOne, I can just re-point all of my\nclients over to the new database and\n\n213\n00:10:48.840 --> 00:10:49.920\nnow the data is back, right.\n\n214\n00:10:49.920 --> 00:10:53.680\nIf there haven't been changes to the\nproduction database that's the best thing.\n\n215\n00:10:53.680 --> 00:10:57.290\nWe just flip people over to the other one\nand we're done, everything's restored.\n\n216\n00:10:57.290 --> 00:11:01.320\nOr option two, I leave everybody\nconnected to the production database\n\n217\n00:11:01.320 --> 00:11:06.010\nthat's missing data, I bring up my\nrestored copy, and then I just go and grab\n\n218\n00:11:06.010 --> 00:11:10.050\nthe data out of the restored copy, and\npush it over into the production database.\n\n219\n00:11:10.050 --> 00:11:13.630\nNow I've restored the deleted data,\nand we're back in business.\n\n220\n00:11:13.630 --> 00:11:16.220\nThe production database\nnever went offline.\n\n221\n00:11:16.220 --> 00:11:18.700\nSo users could still be in it,\nstill functioning, and\n\n222\n00:11:18.700 --> 00:11:21.400\nnow I just bring back\nthe products that got deleted, or\n\n223\n00:11:21.400 --> 00:11:24.670\ncorrect the prices that were changed,\nwhatever it is we need to do.\n\n224\n00:11:24.670 --> 00:11:27.090\nWe grab data from the copy and\nsend it over.\n\n225\n00:11:27.090 --> 00:11:29.600\nSo when we restore one of these databases,\n\n226\n00:11:29.600 --> 00:11:33.650\nit's not overwriting\nthe existing database.\n\n227\n00:11:33.650 --> 00:11:35.140\nIt's adding a copy, right.\n\n228\n00:11:35.140 --> 00:11:37.320\nLet me show you that process.\n\n229\n00:11:37.320 --> 00:11:42.300\nWhen I go over here to my SQL databases,\nand I see sample database one,\n\n230\n00:11:42.300 --> 00:11:46.183\nsample database two, let's say I\nwant to restore sample database one.\n\n231\n00:11:46.183 --> 00:11:48.940\nSo I'll choose sample database one, and\n\n232\n00:11:48.940 --> 00:11:52.340\nwhen I choose it,\nI've got restore right here.\n\n233\n00:11:52.340 --> 00:11:57.240\nOkay, and when I go into restore,\nit's gonna take me into\n\n234\n00:11:57.240 --> 00:12:01.410\nthe restore wizard,\nwhich is pretty straightforward, okay.\n\n235\n00:12:01.410 --> 00:12:04.000\nThe first thing it's gonna ask me is,\nwhat do I want to name the database?\n\n236\n00:12:04.000 --> 00:12:07.950\nSee, it's making a new database,\nnot overwriting the existing one.\n\n237\n00:12:07.950 --> 00:12:11.430\nDoesn't even give you the option to\noverwrite the existing one, right?\n\n238\n00:12:11.430 --> 00:12:12.840\nI have to create a copy and\n\n239\n00:12:12.840 --> 00:12:17.670\nit's gonna call it SampleDB1 and\nthen with a timestamp of right now, right?\n\n240\n00:12:17.670 --> 00:12:21.760\nAnd I might want to change that so I might\nwant to call this one, Daniels_Screw_Up.\n\n241\n00:12:21.760 --> 00:12:27.970\nRight, so this is me trying to\nfix something that Daniel caused.\n\n242\n00:12:27.970 --> 00:12:30.350\nAnd so I can come in and I can put\nin whatever I want that name to be.\n\n243\n00:12:30.350 --> 00:12:32.130\nThis is just gonna be temporary, right?\n\n244\n00:12:32.130 --> 00:12:35.090\nIf I was going to move my people over\nto it, that's a different story, right,\n\n245\n00:12:35.090 --> 00:12:38.650\nbut if I just need this to be temporary so\nI can retrieve some missing data,\n\n246\n00:12:38.650 --> 00:12:43.430\nI can call it whatever I want cuz when\nI'm done, I'll just delete this database.\n\n247\n00:12:43.430 --> 00:12:46.500\nAnd then from here,\nI can choose the target server.\n\n248\n00:12:46.500 --> 00:12:48.800\nI may not want to restore\nto the same server.\n\n249\n00:12:48.800 --> 00:12:52.940\nI might be using this as a way to get\na copy of the database into another region\n\n250\n00:12:52.940 --> 00:12:56.370\nand so I could come in and choose a server\nin a different region or something.\n\n251\n00:12:56.370 --> 00:13:01.120\nThen, it's got my current time and then\nI've got my oldest restore point, right.\n\n252\n00:13:01.120 --> 00:13:02.770\nThis database was created January 11th.\n\n253\n00:13:02.770 --> 00:13:05.160\nThat's my oldest restore point, but\n\n254\n00:13:05.160 --> 00:13:09.620\nfrom there, I've got my other\ninformation I can chosoe from.\n\n255\n00:13:09.620 --> 00:13:11.250\nWhere do I want to restore to?\n\n256\n00:13:11.250 --> 00:13:14.810\nAnd remember,\nit's backing up every 60 seconds, so\n\n257\n00:13:14.810 --> 00:13:18.050\nI can pick a date, an hour and a minute.\n\n258\n00:13:18.050 --> 00:13:19.760\nI can go down to the minute.\n\n259\n00:13:19.760 --> 00:13:24.910\nSo, if I know that Daniel made\na mistake yesterday at 5 PM,\n\n260\n00:13:24.910 --> 00:13:27.340\nlet's see, today is the 12th, right.\n\n261\n00:13:27.340 --> 00:13:33.240\nSo if I go back to yesterday,\nand so I'll just pick the 11th.\n\n262\n00:13:33.240 --> 00:13:38.090\nAnd for the hour I'll come back here and\nI'm gonna pick 5 PM, which is 1700 hours,\n\n263\n00:13:38.090 --> 00:13:42.820\nand let's say I know it was at 5:12 PM,\nright, so\n\n264\n00:13:42.820 --> 00:13:48.530\nI can come in and pick 5:11 PM,\nright before he made his change.\n\n265\n00:13:48.530 --> 00:13:52.500\nAnd so now I am gonna get a copy of\nthe database exactly as it was within 60\n\n266\n00:13:52.500 --> 00:13:56.250\nseconds of the mistake, I need to get\nbefore the mistake and not after, right.\n\n267\n00:13:56.250 --> 00:13:59.640\nSo you might have to do more than one\nrestore to be able to find exactly where\n\n268\n00:13:59.640 --> 00:14:03.680\nthat point was if you don't know\nexactly when he ran that query.\n\n269\n00:14:04.990 --> 00:14:07.540\nOnce I've got that chosen\nI can hit create and\n\n270\n00:14:07.540 --> 00:14:09.900\nnow it's going to create\na copy of that database.\n\n271\n00:14:09.900 --> 00:14:14.060\nNow it says the earliest which\nI should be within the window.\n\n272\n00:14:14.060 --> 00:14:19.760\nYou can potentially choose a time\nbefore that back up occurred and\n\n273\n00:14:19.760 --> 00:14:20.860\nthen you'll get like a little error.\n\n274\n00:14:20.860 --> 00:14:22.790\nI'm pretty sure I did okay on mine.\n\n275\n00:14:22.790 --> 00:14:26.930\nAnd so here I can see us creating\na SQL database from the restore.\n\n276\n00:14:26.930 --> 00:14:32.085\nAnd when it's done, when I go over here\nto my SQL databases I'll have a third\n\n277\n00:14:32.085 --> 00:14:37.130\ndatabase in line, and it'll be that\nSampleDB1, Daniel screw up, right, and\n\n278\n00:14:37.130 --> 00:14:41.442\nit'll show up and then I can just connect\nto it with the SQL Management Studio or\n\n279\n00:14:41.442 --> 00:14:45.450\nPowerShell, or whatever I wanna do and\nextract the data that I'm missing and\n\n280\n00:14:45.450 --> 00:14:47.490\nsend that over into my\nproduction database, right?\n\n281\n00:14:47.490 --> 00:14:52.230\nI can get at it, or once that database\ncomes up I'll add a connection string for\n\n282\n00:14:52.230 --> 00:14:54.460\nit, and\nI can go into my client's software and\n\n283\n00:14:54.460 --> 00:14:57.380\nI can point my clients\nover to that database.\n\n284\n00:14:57.380 --> 00:14:58.800\nAnd now they're switching\nover to that one.\n\n285\n00:14:58.800 --> 00:15:02.345\nI have either choice, and if I'm just\nextracting data I can get it out of there\n\n286\n00:15:02.345 --> 00:15:05.632\nand when I'm done,\nI delete that database and off it goes.\n\n287\n00:15:05.632 --> 00:15:09.160\n>> Don, what's the benefit of\nusing the new created database,\n\n288\n00:15:09.160 --> 00:15:14.000\nthat backup DB, that we're recreating to\ntry to get the screw-up back in there,\n\n289\n00:15:14.000 --> 00:15:17.860\nversus just letting it stay at\nthe default of the original database?\n\n290\n00:15:17.860 --> 00:15:23.480\n>> So, the idea here really is if I want\nto switch people over to the new database,\n\n291\n00:15:23.480 --> 00:15:26.190\nit's gonna require some client changes,\nright, and I may or\n\n292\n00:15:26.190 --> 00:15:27.600\nmay not be set up for that.\n\n293\n00:15:27.600 --> 00:15:33.120\nIf I'm using a CNAME in DNS, so my users\nmight connect to like database.itpro.tv,\n\n294\n00:15:33.120 --> 00:15:35.950\nand that's a CNAME that then points\n\n295\n00:15:37.490 --> 00:15:42.000\nto itprotvdemo1.database.windows.net,\nright?\n\n296\n00:15:42.000 --> 00:15:44.090\nWhen you connect, here,\nlet me show you guys.\n\n297\n00:15:44.090 --> 00:15:47.790\n>> When you connect to a database,\nthere's two strings that get involved.\n\n298\n00:15:47.790 --> 00:15:49.530\nThere's the server string,\nfirst off, right?\n\n299\n00:15:49.530 --> 00:15:52.097\nSo if I'm gonna connect to a database\nserver, I've gotta know the server name.\n\n300\n00:15:52.097 --> 00:15:55.419\nAnd so when I go here to my\nSQL servers and I choose mine,\n\n301\n00:15:55.419 --> 00:15:57.379\nI've got this ITProTV demo 1.\n\n302\n00:15:57.379 --> 00:15:59.574\nRight, that's the server.\n\n303\n00:15:59.574 --> 00:16:02.799\nAnd when users wanna connect to it,\nthe address for\n\n304\n00:16:02.799 --> 00:16:06.630\nit is itprotvdemo1.database.windows.net,\nright.\n\n305\n00:16:06.630 --> 00:16:09.970\nSo whatever you name your server,\n\n306\n00:16:09.970 --> 00:16:14.410\nit's that name followed by\ndatabase.windows.net, right.\n\n307\n00:16:14.410 --> 00:16:17.982\nIf I restored a copy of\nthe database to this same server,\n\n308\n00:16:17.982 --> 00:16:21.101\nwell it's gonna have a different name,\nright.\n\n309\n00:16:21.101 --> 00:16:23.241\nI can't have two sample DB1's.\n\n310\n00:16:23.241 --> 00:16:25.278\nAnd so,\nif I want somebody to connect here,\n\n311\n00:16:25.278 --> 00:16:29.025\nI've got to tell the client software,\nyou're connecting the same server but,\n\n312\n00:16:29.025 --> 00:16:30.861\nnow the database has a different name.\n\n313\n00:16:30.861 --> 00:16:34.420\nAnd most software does not like that,\nright so, that's kind of a challenge.\n\n314\n00:16:34.420 --> 00:16:34.930\nIn my scenario,\n\n315\n00:16:34.930 --> 00:16:38.287\nit would be kind of difficult to get\npeople to connect to that other database.\n\n316\n00:16:38.287 --> 00:16:41.698\nBut, if I had restored\nto say itprotvdemo2,\n\n317\n00:16:41.698 --> 00:16:43.900\nwell now I can keep\nthe database name the same.\n\n318\n00:16:43.900 --> 00:16:47.020\nI can call it sample DB1 on the server and\n\n319\n00:16:47.020 --> 00:16:50.020\nall I have to do is tell my clients\nto connect to that new database.\n\n320\n00:16:50.020 --> 00:16:55.450\nIf we're using C-names, in DNS I can\ncreate a C-name with database.itpro.tv and\n\n321\n00:16:55.450 --> 00:17:00.520\nI could point it to\nitprotvdemo1.database.windows.net.\n\n322\n00:17:00.520 --> 00:17:01.690\nAnd when a failure like this happened,\n\n323\n00:17:01.690 --> 00:17:05.340\nI can restore to a new server and\njust go update that C name record, and\n\n324\n00:17:05.340 --> 00:17:10.330\ntell the C name to point to\nitprotvdemo2.database.windows.net.\n\n325\n00:17:10.330 --> 00:17:12.790\nAnd now all my clients,\nwhen they go to connect to that C name,\n\n326\n00:17:12.790 --> 00:17:16.010\nwould automatically jump to the other\nserver, where it's still called SampleDB1,\n\n327\n00:17:16.010 --> 00:17:17.800\nand connect, and\nhave access to all of that.\n\n328\n00:17:17.800 --> 00:17:23.170\nI would just lose any changes that were\nmade after that back up point, right.\n\n329\n00:17:23.170 --> 00:17:25.240\nBut that would quickly let me\ndo it without having to modify\n\n330\n00:17:25.240 --> 00:17:26.340\nthe clients, right.\n\n331\n00:17:26.340 --> 00:17:29.410\nSo that's, kind of, one of the obstacles\nthat we have if we want to connect people\n\n332\n00:17:29.410 --> 00:17:30.950\nto the new database, right.\n\n333\n00:17:30.950 --> 00:17:33.620\nBut if I just leave them\nconnected to the production one,\n\n334\n00:17:33.620 --> 00:17:36.210\nthey're already connected to it, right,\nthe problem is just missing data.\n\n335\n00:17:36.210 --> 00:17:40.210\nNow all I've gotta do is go and\ngrab the missing data and bring it over.\n\n336\n00:17:40.210 --> 00:17:43.390\nAnd that's a pretty\nstraight forward query.\n\n337\n00:17:43.390 --> 00:17:48.340\nSo you do an insert into statement that\ninserts into the existing database and\n\n338\n00:17:48.340 --> 00:17:53.340\nfor the data you do a select\nfrom command to select the data\n\n339\n00:17:53.340 --> 00:17:56.980\nout of the restore and\ninserted into the original data.\n\n340\n00:17:56.980 --> 00:17:59.640\nSo you can kind of manually do that and\nsend it over.\n\n341\n00:17:59.640 --> 00:18:04.000\nOr, you may not even to copy it over, this\nmay just be a visual verification thing.\n\n342\n00:18:04.000 --> 00:18:09.298\nWhere you need to go and look and say,\nokay, what row ID started this mess up,\n\n343\n00:18:09.298 --> 00:18:11.420\nand then I can just remove\nthat row ID beyond, and\n\n344\n00:18:11.420 --> 00:18:13.750\nso you just need a database to reference.\n\n345\n00:18:13.750 --> 00:18:16.490\nSo there's a couple of different\nways to go about that.\n\n346\n00:18:16.490 --> 00:18:19.510\nBut once this is done,\nif I go back up to my Sequel databases.\n\n347\n00:18:19.510 --> 00:18:20.960\nThis should be down by now.\n\n348\n00:18:20.960 --> 00:18:21.660\nIt's not.\n\n349\n00:18:21.660 --> 00:18:26.300\nSo remember that restores like this\ndo get a slightly lower priority on\n\n350\n00:18:26.300 --> 00:18:28.260\nMicrosoft's effort list.\n\n351\n00:18:28.260 --> 00:18:30.450\nAnd so sometimes it can take\na little bit to restore.\n\n352\n00:18:30.450 --> 00:18:35.450\nIf you remember we did the episode\non importing data into Sequel.\n\n353\n00:18:35.450 --> 00:18:38.990\nAnd one of the methods I showed you\nguys was using a backpack to restore.\n\n354\n00:18:38.990 --> 00:18:43.220\nAnd when I did that episode I was shocked\nat how fast it happened because sometimes\n\n355\n00:18:43.220 --> 00:18:45.660\nit can take a long time,\nsometimes it's really quick.\n\n356\n00:18:45.660 --> 00:18:49.410\nThis is actually basically the same\nthing as doing, a backpack restore.\n\n357\n00:18:49.410 --> 00:18:52.700\nAnd it's not using a backpack so\nit's using the actual backups but\n\n358\n00:18:52.700 --> 00:18:56.390\nbasically it'll run through this process\nand there's certain times of the day where\n\n359\n00:18:56.390 --> 00:18:58.710\nit will happen really fast,\nlike in the middle of the night.\n\n360\n00:18:58.710 --> 00:19:01.920\nAnd then, there's times in the day, like\nright now, where it's kinda peak time for\n\n361\n00:19:01.920 --> 00:19:03.850\nAzure, and it's taking a while.\n\n362\n00:19:03.850 --> 00:19:06.220\nSo I'm gonna sit tight while that runs.\n\n363\n00:19:06.220 --> 00:19:09.640\nBut once it's done, all you do is switch\nover to your SQL Management Studio.\n\n364\n00:19:09.640 --> 00:19:15.646\nAnd in the Management Studio, you can see\nwhere, I see sample DB1 and sample DB2.\n\n365\n00:19:15.646 --> 00:19:20.860\nI can just refresh that database list and\nwhen it's done, I'll see that third\n\n366\n00:19:20.860 --> 00:19:25.180\ndatabase and I'll be able to query against\nit to get the data and move it right over.\n\n367\n00:19:25.180 --> 00:19:27.260\nThings become a lot\neasier once that's done.\n\n368\n00:19:27.260 --> 00:19:28.560\nYou just treat it like another database.\n\n369\n00:19:28.560 --> 00:19:30.740\n>> Yeah, and using the Azure portal,\n\n370\n00:19:30.740 --> 00:19:33.180\nthe Web Portal here it was pretty\nstraightforward, pretty simple.\n\n371\n00:19:33.180 --> 00:19:36.020\nIt wasn't too difficult to try to\nfigure out what it is I'm doing to get\n\n372\n00:19:36.020 --> 00:19:40.245\nthat restore to happen for me, but\nif I know Microsoft, and I think I do.\n\n373\n00:19:40.245 --> 00:19:41.650\n>> [LAUGH]\n>> They love to\n\n374\n00:19:41.650 --> 00:19:45.740\nhave more than one way to skin a cat and\nthat way usually involves the PowerShell.\n\n375\n00:19:45.740 --> 00:19:48.290\nIs there a way we can use\nPowerShell to do a point in time?\n\n376\n00:19:48.290 --> 00:19:50.700\n>> Absolutely, if you've got\nyour Azure PowerShell set up,\n\n377\n00:19:50.700 --> 00:19:55.430\nright, you can jump through and\nget that set pretty easily.\n\n378\n00:19:55.430 --> 00:19:58.170\nIf you don't know how to set up Azure\nPowerShell, I'll post a link in the notes\n\n379\n00:19:58.170 --> 00:20:00.090\nto Microsoft's article\non how to get it set up.\n\n380\n00:20:00.090 --> 00:20:03.660\nThe regular PowerShell in Windows doesn't\ninclude the Azure addons, at least not\n\n381\n00:20:03.660 --> 00:20:06.300\nyet, eventually Microsoft might\ninclude that, but for now they don't.\n\n382\n00:20:06.300 --> 00:20:09.640\nYou've got to go to the Microsoft site and\ndownload the Azure extensions for\n\n383\n00:20:09.640 --> 00:20:11.460\nPowerShell and get those installed.\n\n384\n00:20:11.460 --> 00:20:12.890\nI've already got them installed, and\n\n385\n00:20:12.890 --> 00:20:15.470\nlike I said,\nI'll post the link with the show notes.\n\n386\n00:20:15.470 --> 00:20:17.630\nOnce that's done if you\nwant to do a restore,\n\n387\n00:20:17.630 --> 00:20:23.220\nthe first command you need to be aware\nof is the add dash Azure account.\n\n388\n00:20:23.220 --> 00:20:26.420\nAnd what that is going to do is it's going\nto let you add your login credentials\n\n389\n00:20:26.420 --> 00:20:27.330\nto Azure.\n\n390\n00:20:27.330 --> 00:20:31.210\nAnd so it will pop up a window where\nyou can punch in your username and\n\n391\n00:20:31.210 --> 00:20:33.570\nyour password to get connected, all right.\n\n392\n00:20:33.570 --> 00:20:38.220\nAnd once you're connected then you'll\nbe able to work with Azure SQL and\n\n393\n00:20:38.220 --> 00:20:39.360\neverything that's inside it.\n\n394\n00:20:39.360 --> 00:20:42.960\nNow, I'm already connected so\nlet me just cancel that out.\n\n395\n00:20:42.960 --> 00:20:45.900\nAnd once you're connected,\nnow you're ready to work with it.\n\n396\n00:20:45.900 --> 00:20:47.300\nAnd if you're not sure\nif you're connected,\n\n397\n00:20:47.300 --> 00:20:50.900\nyou can always do a Get-AzureAccount,\nand it will show if you're connected.\n\n398\n00:20:50.900 --> 00:20:54.960\nSo I can see I'm logged in here on\nmine and I'm ready to work with it.\n\n399\n00:20:54.960 --> 00:20:58.350\nAnd once you go to do anything else,\nnow you can start to work with it.\n\n400\n00:20:58.350 --> 00:21:03.320\nYou can do like a Get-Azure\ndatabase to see what you've got.\n\n401\n00:21:03.320 --> 00:21:06.750\nOr, it's actually AzureSQL database.\n\n402\n00:21:08.030 --> 00:21:08.610\nThere we go.\n\n403\n00:21:08.610 --> 00:21:12.490\nSo I can Get-AzureSqlDatabase, and you can\nstart to specify the server that you're\n\n404\n00:21:12.490 --> 00:21:15.990\nquerying, and the individual databases\nyou're looking at, and so on.\n\n405\n00:21:15.990 --> 00:21:19.580\nSo if I wanted to verify\nthat sampleDB1 was there,\n\n406\n00:21:19.580 --> 00:21:25.267\nI could do\na Get-AzureSqlDatabase- ServerName,\n\n407\n00:21:25.267 --> 00:21:29.040\nmine's itprotvdemo1.\n\n408\n00:21:29.040 --> 00:21:34.427\nAnd database name which is SampleDB1.\n\n409\n00:21:34.427 --> 00:21:38.290\nAll right, and so I can query that and\nverify that database exists.\n\n410\n00:21:38.290 --> 00:21:40.430\nThere it is, so it sees it,\nand knows it's there.\n\n411\n00:21:41.430 --> 00:21:45.150\nAnd see how I've got down here\nlike a recovery period start date?\n\n412\n00:21:45.150 --> 00:21:48.280\nThat's showing me how\nfar back my restores go.\n\n413\n00:21:48.280 --> 00:21:52.540\nSo I've got a backup all the way back\non January 10th at 9:50 PM that I can\n\n414\n00:21:52.540 --> 00:21:55.840\nreach back and grab if I need to.\n\n415\n00:21:55.840 --> 00:21:59.730\nThat's important because it's telling me\nbasically how far back I can restore, and\n\n416\n00:21:59.730 --> 00:22:03.240\non a basic, this would be no\nfurther back than seven days.\n\n417\n00:22:03.240 --> 00:22:07.590\nBut on a premium, this could be 35 days\nago, but if I just made the premium\n\n418\n00:22:07.590 --> 00:22:11.270\ndatabase three days ago it's not like it\nhas fictional data 35 days ago right?\n\n419\n00:22:11.270 --> 00:22:13.400\nSo this may only be a handful of days so\n\n420\n00:22:13.400 --> 00:22:16.340\nit gives me that idea\nof how far back I go.\n\n421\n00:22:16.340 --> 00:22:18.860\nRight now this database,\nsee how my creation date right here,\n\n422\n00:22:18.860 --> 00:22:23.740\nit was created at 9:40 PM but\nmy recovery period state only goes\n\n423\n00:22:23.740 --> 00:22:28.410\nback to 9:50 and that's probably because\nwhen I created the database it was empty.\n\n424\n00:22:28.410 --> 00:22:31.330\nAnd then I didn't actually put data\ninto it for another 10 minutes.\n\n425\n00:22:31.330 --> 00:22:34.470\nI probably didn't notice the wizard was\ndone, and so, there's a little gap.\n\n426\n00:22:34.470 --> 00:22:36.860\nIt's not going to back up an empty\ndatabase, there's no point in that.\n\n427\n00:22:38.062 --> 00:22:40.670\nAll right so, I'm connected,\nI can see that database and\n\n428\n00:22:40.670 --> 00:22:43.380\nif I wanted to a restore,\nI have to do a few things.\n\n429\n00:22:43.380 --> 00:22:46.250\nFirst off, I have to tell it what\ndatabase I'm grabbing, right.\n\n430\n00:22:46.250 --> 00:22:49.090\nAnd so, what I'm going to do is I'm going\nto take this command that I just ran\n\n431\n00:22:49.090 --> 00:22:53.000\na moment ago and\nbasically what I wanna do and,\n\n432\n00:22:53.000 --> 00:22:54.800\nyou know my head is covering part of this.\n\n433\n00:22:54.800 --> 00:22:56.840\nCould we maybe full screen this one?\n\n434\n00:22:56.840 --> 00:22:59.920\nAnd what you'll see is, I'm gonna\ntake this command that I just ran,\n\n435\n00:22:59.920 --> 00:23:03.238\nand I'm gonna tell it to\nget AzureSqlDatabase,\n\n436\n00:23:03.238 --> 00:23:06.300\nServerName itprotvdemo1-DatabaseName\nSampleDB2.\n\n437\n00:23:06.300 --> 00:23:09.220\nRight, so I'm gonna grab sample DB2.\n\n438\n00:23:09.220 --> 00:23:11.650\nAnd I need to store that in a variable, so\n\n439\n00:23:11.650 --> 00:23:13.715\nthat I can use this to\nrun the command against.\n\n440\n00:23:13.715 --> 00:23:17.170\nAnd so I'll take this command and\nI'm gonna create a variable and\n\n441\n00:23:17.170 --> 00:23:23.660\nstore its output in there, so\nI'll just do like $Database equals that.\n\n442\n00:23:23.660 --> 00:23:27.180\nSo now it's being stored in a variable\nthat I can call and then I need to provide\n\n443\n00:23:27.180 --> 00:23:29.662\nit a little additional information\nabout what I'm gonna do.\n\n444\n00:23:29.662 --> 00:23:34.485\nWhich is,\nI'm gonna create a RestoreRequest and so\n\n445\n00:23:34.485 --> 00:23:39.200\nI'll create a variable\ncalled RestoreRequest and\n\n446\n00:23:39.200 --> 00:23:46.449\nin that variable I'm gonna do\nStart-AzureSqlDatabaseRestore there we go.\n\n447\n00:23:46.449 --> 00:23:51.708\nCuz I'm gonna be kicking off a restore and\nI need to decide what I wanna restore so\n\n448\n00:23:51.708 --> 00:23:54.772\nmy SourceDatabase is\ngoing to be SampleDB2,\n\n449\n00:23:54.772 --> 00:23:57.690\nor actually I can just refer to $Database.\n\n450\n00:23:57.690 --> 00:24:00.002\nThat was kind of the whole\npoint in creating that.\n\n451\n00:24:00.002 --> 00:24:03.335\nAnd then I need to tell it\nwhat I'm gonna do about that,\n\n452\n00:24:03.335 --> 00:24:07.900\nI'm gonna send it to a target database\nall right target database name, and\n\n453\n00:24:07.900 --> 00:24:12.920\nthat target database name I'll just call\nit something like SampleDB2 restore.\n\n454\n00:24:12.920 --> 00:24:17.880\nAll right so that's what\n\n455\n00:24:17.880 --> 00:24:22.690\nI'm gonna restore to okay and then after\nthat I need to give it the point in time.\n\n456\n00:24:23.830 --> 00:24:26.070\nCuz that's important so\nit knows where to restore to.\n\n457\n00:24:26.070 --> 00:24:29.420\nAnd here's where I need to pick\na point in time that is after\n\n458\n00:24:29.420 --> 00:24:31.000\nthat recovery period start date.\n\n459\n00:24:31.000 --> 00:24:33.620\nSo, it's gotta be between that date and\nright now,\n\n460\n00:24:33.620 --> 00:24:35.550\ncuz that's what I got available.\n\n461\n00:24:35.550 --> 00:24:41.068\nSo, I can feed in a point time,\nso I'll say 2016-.\n\n462\n00:24:41.068 --> 00:24:44.790\nLetâ€™s do 01-11 and what's gonna be\n\n463\n00:24:46.250 --> 00:24:52.040\na good time for us here letâ€™s just\ndo like ten o'clock in the morning.\n\n464\n00:24:52.040 --> 00:24:55.949\nNow, you can put seconds in on this or\nremember it's only backing up every 60\n\n465\n00:24:55.949 --> 00:24:59.147\nseconds, so there's no point in\nputting you know column 17 or\n\n466\n00:24:59.147 --> 00:25:03.520\nwhatever see [INAUDIBLE] just make sure\nyou round those second off in the zeros.\n\n467\n00:25:03.520 --> 00:25:08.990\nAnd so, I'll put that in there and that's\nwhat I'm going to store to all right.\n\n468\n00:25:08.990 --> 00:25:10.970\nNow I'm just storing that in a variable.\n\n469\n00:25:10.970 --> 00:25:13.980\nSo, my database is a variable,\nmy restore command is a variable.\n\n470\n00:25:13.980 --> 00:25:16.460\nAnd now I'm going to tie it all together\n\n471\n00:25:16.460 --> 00:25:19.870\nwith get dash Azure sequel\ndatabase operation.\n\n472\n00:25:23.940 --> 00:25:25.030\nThere we go.\n\n473\n00:25:25.030 --> 00:25:29.970\nI'll point that to my server,\nwhich mine is itprotvdemo1,\n\n474\n00:25:29.970 --> 00:25:33.100\nand then for the operation,\n\n475\n00:25:36.230 --> 00:25:41.830\nI'll specify it Guid and that's where\nI'm going to call my restore request.\n\n476\n00:25:41.830 --> 00:25:46.090\nRight, so I created that RestoreRequest\nvariable which is gonna create that right\n\n477\n00:25:46.090 --> 00:25:50.000\nhere and then it needs to have\na RequestID assigned to it.\n\n478\n00:25:51.060 --> 00:25:51.560\nThere.\n\n479\n00:25:52.630 --> 00:25:55.980\nAll right, and so once I've got all\nthat in place now it's gonna go and\n\n480\n00:25:55.980 --> 00:26:00.540\ngenerate that restore and restore is\nrunning and it's in progress, okay.\n\n481\n00:26:00.540 --> 00:26:03.250\nSo, I was able to kick that off\nhere from the power shell now.\n\n482\n00:26:03.250 --> 00:26:06.630\nThat's kinda hard right and so most of\nus aren't gonna want to do that, I don't\n\n483\n00:26:06.630 --> 00:26:10.730\nblame you if you don't wanna do that, but\nwhat's a scenario where you'd want this?\n\n484\n00:26:10.730 --> 00:26:15.280\nMaybe you're trying to do like\na production and a staging environment or\n\n485\n00:26:15.280 --> 00:26:16.760\na production and a developer environment.\n\n486\n00:26:16.760 --> 00:26:20.390\nSo, every night at midnight I wanna make\na copy of my production environment so\n\n487\n00:26:20.390 --> 00:26:24.140\nmy developers can work with and\nI might wanna blow away their database so\n\n488\n00:26:24.140 --> 00:26:25.645\nthat they might be expecting a.\n\n489\n00:26:25.645 --> 00:26:28.168\nSampleDB2_Dev right?\n\n490\n00:26:28.168 --> 00:26:33.580\nAnd to every night at midnight I write a\npartial script that deletes SampleDB2_Dev\n\n491\n00:26:33.580 --> 00:26:39.090\nand then restores a copy\nof DB2 to SampleDB2_Dev and\n\n492\n00:26:39.090 --> 00:26:41.950\nso every morning developers come in.\n\n493\n00:26:41.950 --> 00:26:45.830\nAnd they know they've got a full copy of\nthe production database that's within 24\n\n494\n00:26:45.830 --> 00:26:47.580\nhours of age from the actual\nproduction database.\n\n495\n00:26:47.580 --> 00:26:49.370\nAnd they can test on it and\npractice, right?\n\n496\n00:26:49.370 --> 00:26:52.830\nSo, I can script that, and automate it\nright here and have it kick off and\n\n497\n00:26:52.830 --> 00:26:54.490\nrestore the database and\nget it running every night.\n\n498\n00:26:54.490 --> 00:26:56.870\nIt's just a great way to create\nthat kind of staging environment.\n\n499\n00:26:56.870 --> 00:26:57.610\nPretty easily.\n\n500\n00:26:57.610 --> 00:26:58.530\n>> Yeah, very cool stuff.\n\n501\n00:26:58.530 --> 00:27:00.890\nI love to watch you work on\nthe power cell, because that.\n\n502\n00:27:00.890 --> 00:27:04.610\nThat is like looking at ancient\nEgyptian to me a lot of times,\n\n503\n00:27:04.610 --> 00:27:05.850\nvery very neat stuff.\n\n504\n00:27:05.850 --> 00:27:11.720\nNow, Don we talked about restoring maybe\na table, maybe two tables, that's simple\n\n505\n00:27:11.720 --> 00:27:15.970\nstuff any of us that work with this we\ncould accidentally delete a couple of row,\n\n506\n00:27:15.970 --> 00:27:19.630\nwe could accidentally delete\na couple tables that does happen but\n\n507\n00:27:19.630 --> 00:27:21.190\nthat's bush league right Don?\n\n508\n00:27:21.190 --> 00:27:23.710\nThey call me the DB Destructor.\n\n509\n00:27:23.710 --> 00:27:29.060\nWhat if I hose my entire database,\nand I need to restore that guy.\n\n510\n00:27:29.060 --> 00:27:29.985\nWhere do I go?\nWhat do I do?\n\n511\n00:27:29.985 --> 00:27:31.380\n[LAUGH]\n>> You know, this one is a little tricky,\n\n512\n00:27:31.380 --> 00:27:32.270\nI'm glad you asked.\n\n513\n00:27:32.270 --> 00:27:34.760\nSo when I did that restore the UI,\n\n514\n00:27:34.760 --> 00:27:39.510\none of the things you'll notice is\nthat I navigated under the database.\n\n515\n00:27:39.510 --> 00:27:41.440\nSo let me jump through this again,\n\n516\n00:27:41.440 --> 00:27:45.010\nin the Azure portal I went to sequel\ndatabases, And then I pick the database.\n\n517\n00:27:45.010 --> 00:27:46.310\nRight?\nSo I pick sample DB1.\n\n518\n00:27:46.310 --> 00:27:49.780\nAnd when I went into sample DB1\nthat's where I had a restore.\n\n519\n00:27:49.780 --> 00:27:50.720\nRight?\n\n520\n00:27:50.720 --> 00:27:53.530\nBut what if I deleted the whole database.\n\n521\n00:27:53.530 --> 00:27:55.720\nWhat if that database was gone.\n\n522\n00:27:55.720 --> 00:28:00.670\nSo if I went to sequel databases and\nI took sample DB1.\n\n523\n00:28:00.670 --> 00:28:03.140\nAnd I just deleted it.\n\n524\n00:28:03.140 --> 00:28:04.420\nRight?\nSo let's just drop that one.\n\n525\n00:28:05.520 --> 00:28:08.150\nWe'll go crazy here, so\nI'll go ahead in here and delete it.\n\n526\n00:28:08.150 --> 00:28:09.600\nAnd so,\nI'm gonna get rid of that database.\n\n527\n00:28:09.600 --> 00:28:13.750\nNow, once the database is gone,\nif I wanna restore it, what do I do?\n\n528\n00:28:13.750 --> 00:28:16.960\nWell, I could go, well,\nhang on, I'm gonna wait for\n\n529\n00:28:16.960 --> 00:28:18.920\nit to actually drop,\nthere we go, and delete it.\n\n530\n00:28:18.920 --> 00:28:25.320\nSo, I could go to SQL databases and I can\nclick on SampleDB1 Oh, it's gone, right?\n\n531\n00:28:25.320 --> 00:28:27.910\nSo, it actually doesn't show\nup here once it's deleted,\n\n532\n00:28:27.910 --> 00:28:29.770\nI can't click on it to do the restore.\n\n533\n00:28:29.770 --> 00:28:32.780\nNow, I know what you're thinking,\nit's just gone, that's it.\n\n534\n00:28:32.780 --> 00:28:34.570\nI shouldn't have deleted it,\nthat was stupid.\n\n535\n00:28:34.570 --> 00:28:38.950\nWell, it is gone but\ni can still restore it.\n\n536\n00:28:38.950 --> 00:28:42.400\nRemember, Microsoft says they're\ngonna save these backups for\n\n537\n00:28:42.400 --> 00:28:46.310\n7 days or 14 days or 35 days And\nthey're gonna deliver on that.\n\n538\n00:28:46.310 --> 00:28:49.910\nSo, even though the database is deleted,\nthey're holding onto the backups.\n\n539\n00:28:49.910 --> 00:28:53.570\nAnd they will hold onto them for\nwhatever retention period it is you chose.\n\n540\n00:28:53.570 --> 00:28:54.430\nSo, mine is S0.\n\n541\n00:28:54.430 --> 00:28:57.280\nSo, on an S0,\nthey're gonna hold it for 14 days.\n\n542\n00:28:57.280 --> 00:29:00.860\nSo, 13 days from now I could go and\nrestore this if I wanted.\n\n543\n00:29:00.860 --> 00:29:03.730\nAnd if I wanna restore it,\nwhere I need to go is to the server.\n\n544\n00:29:03.730 --> 00:29:07.310\nIf I go down to my SQL servers and\nI've only got one,\n\n545\n00:29:07.310 --> 00:29:09.760\nbut you'll need to pick\nwhatever server it was tied to.\n\n546\n00:29:09.760 --> 00:29:14.110\nAnd when you pick the server,\nonce we get in here,\n\n547\n00:29:14.110 --> 00:29:16.480\nyou'll start to see some\nvarious options in here.\n\n548\n00:29:16.480 --> 00:29:18.820\nAnd so see I've got like settings and\nreset password and\n\n549\n00:29:18.820 --> 00:29:20.760\nimport database and so on.\n\n550\n00:29:20.760 --> 00:29:23.380\nAnd when you start to look at it, oh yeah,\n\n551\n00:29:23.380 --> 00:29:25.770\nyour screw up database is\nstarting to show up now.\n\n552\n00:29:25.770 --> 00:29:26.630\nThat's good.\n\n553\n00:29:26.630 --> 00:29:29.050\nBut once you get into that\n\n554\n00:29:29.050 --> 00:29:31.770\nYou'll actually be able to restore\nthe database right from here.\n\n555\n00:29:31.770 --> 00:29:34.960\nAnd so we can bring it back and\nkind of like resurrect it from the dead.\n\n556\n00:29:34.960 --> 00:29:36.750\nWhich is kind of a nice thing.\n\n557\n00:29:36.750 --> 00:29:39.480\nSo what we need to do is\nunder the sequel server here\n\n558\n00:29:39.480 --> 00:29:41.470\nwe need to go under operations.\n\n559\n00:29:41.470 --> 00:29:45.690\nAnd the operations are kind of buried\naway down here under our little panel.\n\n560\n00:29:45.690 --> 00:29:49.160\nSo if I kind of scroll down here\nsomewhere I will find my operations.\n\n561\n00:29:49.160 --> 00:29:50.060\nThere we go.\n\n562\n00:29:50.060 --> 00:29:52.270\nAnd under operations\nLet me zoom in on this,\n\n563\n00:29:52.270 --> 00:29:54.360\nbecause it's kind of hard to see it all.\n\n564\n00:29:54.360 --> 00:29:58.150\nSo, I'm kind of scrolling down, and see\nhow it just says operations right there,\n\n565\n00:29:58.150 --> 00:30:01.490\nand you'll find deleted databases,\nand that's where you can go to\n\n566\n00:30:01.490 --> 00:30:05.200\nrecover any database that was deleted\nout and it is no longer present.\n\n567\n00:30:05.200 --> 00:30:09.210\nSo, over here on the side, there's\nthe SampleDB1 that I just deleted, and\n\n568\n00:30:09.210 --> 00:30:13.780\nin fact, here's some SampleDB3s that\nI deleted Prior to the show and\n\n569\n00:30:13.780 --> 00:30:16.890\ncompletely forgotten about and\nso I can see these and\n\n570\n00:30:16.890 --> 00:30:19.220\nrestore them too if I\nwanna bring them back.\n\n571\n00:30:19.220 --> 00:30:23.680\nI wanna bring sample DB1 back, and so when\nI choose that it's gonna offer to restore\n\n572\n00:30:23.680 --> 00:30:28.340\nit and I can pick a database name and\nrestore it to a server and you know\n\n573\n00:30:28.340 --> 00:30:31.240\nactually I don't remember let me see if\nit'll let me restore it to the same name.\n\n574\n00:30:31.240 --> 00:30:34.740\nSo if I just wanna keep it at as\nSampleDB1, I can punch that in there.\n\n575\n00:30:34.740 --> 00:30:37.240\nGot the green check mark so\nno problem there, and\n\n576\n00:30:37.240 --> 00:30:40.130\nI can just bring it right back with\nthe same name as I had before.\n\n577\n00:30:40.130 --> 00:30:43.630\nNow if I deleted it because I didn't\nwant users to get into it anymore,\n\n578\n00:30:43.630 --> 00:30:45.710\nthen I probably do want it\nto have a different name.\n\n579\n00:30:45.710 --> 00:30:46.980\nBut if I wanna bring it back and\n\n580\n00:30:46.980 --> 00:30:50.470\nput it into production I can just give it\nthe same name, it'll come back online,\n\n581\n00:30:50.470 --> 00:30:53.010\nmy clients will connect and\nwe'll be back in business.\n\n582\n00:30:53.010 --> 00:30:57.680\nIt's gonna bring it back on with\nthe most recent back-up and\n\n583\n00:30:57.680 --> 00:31:00.050\nthen it should go and kick in from there.\n\n584\n00:31:00.050 --> 00:31:01.410\nI actually got an error on mine.\n\n585\n00:31:01.410 --> 00:31:03.090\nCreation failed in the resource group.\n\n586\n00:31:03.090 --> 00:31:04.910\nLet's see what my error is.\n\n587\n00:31:04.910 --> 00:31:09.830\nSo it is possible to get an error on this,\nwhich I certainly did and\n\n588\n00:31:09.830 --> 00:31:14.190\nI got a bad request, failed the\nprovisioning state and, oh, it's because\n\n589\n00:31:14.190 --> 00:31:19.000\nI'm, if you look here, see how it says\nmy source database We're going to stop.\n\n590\n00:31:19.000 --> 00:31:23.780\nIt says it is not in the ready state with\nthe reported recovery blah blah blah.\n\n591\n00:31:23.780 --> 00:31:27.030\nThe problem is I'm creating more than\none database at the same time so\n\n592\n00:31:27.030 --> 00:31:30.580\nI have another restore going on and this\none tried to queue up on top of it and\n\n593\n00:31:30.580 --> 00:31:32.200\nI used the same database name.\n\n594\n00:31:32.200 --> 00:31:35.510\nso I have to choices here, I could\njust wait-- And rerun the operation.\n\n595\n00:31:35.510 --> 00:31:37.070\nOr two,\nI can restore with a different name and\n\n596\n00:31:37.070 --> 00:31:40.520\nit'll still queue up behind the other\nbackup and run, but I just need to wait.\n\n597\n00:31:40.520 --> 00:31:44.000\nBut, once we restore that,\nwe'll have the database back online and\n\n598\n00:31:44.000 --> 00:31:44.940\nbe back in business.\n\n599\n00:31:44.940 --> 00:31:49.650\nSo, just remember to go to the server when\nyou wanna restore a deleted database.\n\n600\n00:31:49.650 --> 00:31:54.470\nVersus going to sequel databases when\nyou wanna restore an existing database.\n\n601\n00:31:54.470 --> 00:31:57.820\n>> Awesome, so it's obvious we have\nquite a few options available to us\n\n602\n00:31:57.820 --> 00:31:59.630\nif we've accidentally\ndone some deletion or\n\n603\n00:31:59.630 --> 00:32:04.530\nwe need to retrieve data that has\ndisappeared through maybe malfeasance.\n\n604\n00:32:04.530 --> 00:32:05.851\nOr [Laugh]\n>> Or ignorance.\n\n605\n00:32:05.851 --> 00:32:06.539\n>> Or ignorance.\n\n606\n00:32:06.539 --> 00:32:08.290\nUsually that's the latter right?\n\n607\n00:32:08.290 --> 00:32:09.290\nThat being the case,\n\n608\n00:32:09.290 --> 00:32:12.930\nis there anything else we need to\ncover before we wrap up the show?\n\n609\n00:32:12.930 --> 00:32:14.290\nThat's basically it for restores.\n\n610\n00:32:14.290 --> 00:32:17.120\nJust remember you can do it in the GY,\nyou can do it in the PowerShell.\n\n611\n00:32:17.120 --> 00:32:20.020\nIf we're talking physical server failures,\nMicrosoft takes care of that,\n\n612\n00:32:20.020 --> 00:32:21.490\neven the restores.\n\n613\n00:32:21.490 --> 00:32:24.720\nSo the only time you really need to\ndo restores are when you want to copy\n\n614\n00:32:24.720 --> 00:32:29.390\nthe database for some purpose, maybe not\neven recovery, maybe just for a dev team.\n\n615\n00:32:29.390 --> 00:32:32.980\nOr when you accidentally delete it or\nmodify, get a bad import you can kinda\n\n616\n00:32:32.980 --> 00:32:35.620\nrecover from that by jumping in and\nconnecting to those systems.\n\n617\n00:32:35.620 --> 00:32:36.920\nSo that's basically it.\n\n618\n00:32:36.920 --> 00:32:37.760\n>> Awesome.\nWell thank you so\n\n619\n00:32:37.760 --> 00:32:39.550\nmuch Don for showing us how to do this.\n\n620\n00:32:39.550 --> 00:32:43.550\nNow we should be better equipped for\ntackling those problems as they arrive.\n\n621\n00:32:43.550 --> 00:32:47.100\nWe now have tools in the toolbox to\nget ourselves out of that ditch.\n\n622\n00:32:47.100 --> 00:32:48.690\nAgain thank you for joining us today,\n\n623\n00:32:48.690 --> 00:32:50.830\nDon, and thank you viewers out there for\nwatching.\n\n624\n00:32:50.830 --> 00:32:53.320\nWe're gonna go ahead and\nsign off for IT Pro TV.\n\n625\n00:32:53.320 --> 00:32:55.030\nI've been your host, Daniel Lowry.\n\n626\n00:32:55.030 --> 00:32:56.510\n>> And I'm Dan Pozette.\n\n627\n00:32:56.510 --> 00:32:58.959\n>> And we'll see you next time.\n\n628\n00:32:58.959 --> 00:33:03.150\n[MUSIC]\n\n",
          "vimeoId": "151774610"
        },
        {
          "description": "In this episode, Don and Daniel take a look at securing your Azure SQL database by controlling access through the network. First they show you how to configure the server level firewall through the Azure web portal as well as with PowerShell. They also cover securing multiple databases that share a server by creating rules with Transact SQL.",
          "length": "1600",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-azuresql/techskills-azuresql-5-1-controlling_network_access-111316-1.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-azuresql/techskills-azuresql-5-1-controlling_network_access-111316-1-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-azuresql/techskills-azuresql-5-1-controlling_network_access-111316-1-sm.jpg",
          "title": "Controlling Network Access",
          "transcript": "WEBVTT\n\n1\n00:00:00.000 --> 00:00:06.382\n[MUSIC]\n\n2\n00:00:06.382 --> 00:00:10.871\nAll right, greetings everyone, and\n\n3\n00:00:10.871 --> 00:00:16.950\nwelcome to another great\nepisode of ITProTV.\n\n4\n00:00:16.950 --> 00:00:19.452\nI'm your host, Daniel Lowrie,\nand in today's episode, well,\n\n5\n00:00:19.452 --> 00:00:22.705\nwe're continuing on with that Azure Sequel\nseries we've been working so hardly on.\n\n6\n00:00:22.705 --> 00:00:24.450\nAnd well, so hardly, that's a fun word.\n\n7\n00:00:24.450 --> 00:00:26.075\nI love to play around with\nthe English language.\n\n8\n00:00:26.075 --> 00:00:27.830\n>> [LAUGH]\n>> Well, joining me in the studio today,\n\n9\n00:00:27.830 --> 00:00:31.220\nyou can hear him laughing offscreen,\nand that is my good friend, Don Pezet.\n\n10\n00:00:31.220 --> 00:00:32.420\nDon, welcome to the show.\n\n11\n00:00:32.420 --> 00:00:33.720\n>> Thanks for having me back, Daniel,\n\n12\n00:00:33.720 --> 00:00:37.382\nand ready to kick off an entirely\nnew section here of the show.\n\n13\n00:00:37.382 --> 00:00:40.980\nWe're gonna take a look at\nsecurity in Azure Sequel.\n\n14\n00:00:40.980 --> 00:00:45.250\nAs you can imagine, a database server\nis a great target for an attacker.\n\n15\n00:00:45.250 --> 00:00:48.530\nThey love to break into databases and get\nthat information out of there cuz that's\n\n16\n00:00:48.530 --> 00:00:50.670\nreally what they're after,\nright, is information.\n\n17\n00:00:50.670 --> 00:00:52.730\nAnd so\nif you take a database out of the nice,\n\n18\n00:00:52.730 --> 00:00:56.830\nsafe confines of your own personal data\ncenter, and you stick it up in the cloud,\n\n19\n00:00:56.830 --> 00:00:58.690\nthere's a little bit of risk there, right?\n\n20\n00:00:58.690 --> 00:01:03.520\nAnd CIOs, IT directors all over the world\nare kinda hesitant to do that, and so\n\n21\n00:01:03.520 --> 00:01:06.465\nwe're gonna look at some of the features\nthat are available inside of SQL and\n\n22\n00:01:06.465 --> 00:01:11.830\nstuff, Azure SQL, that help us to\nprotect and secure our servers\n\n23\n00:01:11.830 --> 00:01:15.540\nto ensure that people can't break in and\nget into that sensitive data.\n\n24\n00:01:15.540 --> 00:01:19.730\nAnd what we're gonna start with, is\nnetwork access control, and just filtering\n\n25\n00:01:19.730 --> 00:01:23.468\nwho can even touch the server,\nbetter yet, log in and get in that data.\n\n26\n00:01:23.468 --> 00:01:25.420\nSo we'll see a couple of\ntools that are available, and\n\n27\n00:01:25.420 --> 00:01:26.710\nwhat we can work with today.\n\n28\n00:01:26.710 --> 00:01:29.761\n>> So Don,\nthe access model where I put my public IP\n\n29\n00:01:29.761 --> 00:01:33.879\non my database server with full\nopen access, that's not good,\n\n30\n00:01:33.879 --> 00:01:38.400\napparently, and we need to,\nobviously, databases are a honey pot.\n\n31\n00:01:38.400 --> 00:01:40.184\nThat's something that,\nlike Don was saying,\n\n32\n00:01:40.184 --> 00:01:43.303\nhackers want to get at, because they\nusually contain things like, I don't know,\n\n33\n00:01:43.303 --> 00:01:45.100\ncredit card numbers, personal information.\n\n34\n00:01:45.100 --> 00:01:49.240\nThis is the gold that they wanna mine out,\nso we gotta protect it.\n\n35\n00:01:49.240 --> 00:01:54.642\nNow Don, obviously, normally we do\nthis with just the firewalls, right?\n\n36\n00:01:54.642 --> 00:01:56.226\n>> Yeah, and firewalls\nare certainly a piece of this, but\n\n37\n00:01:56.226 --> 00:01:57.609\nwhen you're dealing with\na cloud environment,\n\n38\n00:01:57.609 --> 00:01:59.380\nI can't just go to Microsoft and\ninstall a firewall, right?\n\n39\n00:01:59.380 --> 00:02:02.598\nI've got to rely on the tools that\nthey give us and, fortunately,\n\n40\n00:02:02.598 --> 00:02:04.760\nthey do give us firewall functionalities.\n\n41\n00:02:04.760 --> 00:02:10.070\nSo at the server level, we can dictate\nwho has access to our SQL server.\n\n42\n00:02:10.070 --> 00:02:12.870\nWho can even connect and\ntouch to it, right?\n\n43\n00:02:12.870 --> 00:02:15.660\nNow, when you think about that\ndatabase that's up there in Azure SQL,\n\n44\n00:02:15.660 --> 00:02:17.690\nwho should be connecting to that?\n\n45\n00:02:17.690 --> 00:02:21.590\nShould I ever have a SQL database that's\njust open to the whole wide world\n\n46\n00:02:21.590 --> 00:02:22.580\nto connect to?\n\n47\n00:02:22.580 --> 00:02:23.340\nNo, right?\n\n48\n00:02:23.340 --> 00:02:25.910\nNormally, we don't want\nanybody to connect to it,\n\n49\n00:02:25.910 --> 00:02:27.200\nexcept maybe our web servers, right?\n\n50\n00:02:27.200 --> 00:02:30.390\nIf you have a web application,\nthe web application runs on a web server.\n\n51\n00:02:30.390 --> 00:02:35.560\nAnd the web application should be allowed\nto access the database server, but\n\n52\n00:02:35.560 --> 00:02:38.910\nregular uses of an internet should never\nbe able to touch your database server.\n\n53\n00:02:38.910 --> 00:02:41.650\nThey should never be able to go\ndirectly to the database server.\n\n54\n00:02:41.650 --> 00:02:44.560\nThey should always have to go through\nan application that you control\n\n55\n00:02:44.560 --> 00:02:47.290\nbecause that application is where\nyou can apply a lot of security.\n\n56\n00:02:47.290 --> 00:02:51.240\nIf you're a developer,\nyou can do form and field validation.\n\n57\n00:02:51.240 --> 00:02:54.260\nYou can do authentication,\nmulti-factor authentication.\n\n58\n00:02:54.260 --> 00:02:58.180\nYou can do all sorts of things in your web\napp, but if somebody skips past that and\n\n59\n00:02:58.180 --> 00:03:01.400\ngoes straight to the SQP server,\nwell, it's not\n\n60\n00:03:01.400 --> 00:03:04.490\nreally equipped to be able to handle\nall these high forms of authentication.\n\n61\n00:03:04.490 --> 00:03:08.340\nIt's really got a few basic functionality,\nwhich we'll see in another episode.\n\n62\n00:03:08.340 --> 00:03:10.911\nSo when we have a firewall in place,\n\n63\n00:03:10.911 --> 00:03:15.727\nwe can say only the application is\nallowed to touch the SQL server.\n\n64\n00:03:15.727 --> 00:03:18.150\n>> So Don, this works a lot like\nthe Windows firewall, right?\n\n65\n00:03:18.150 --> 00:03:20.210\n>> Yeah, it's basically the same thing.\n\n66\n00:03:20.210 --> 00:03:22.070\nWhat we're clearing are IP addresses.\n\n67\n00:03:22.070 --> 00:03:25.870\nYou're saying my web application\nrun on these servers, and so,\n\n68\n00:03:25.870 --> 00:03:30.370\nI'm gonna allow these servers' IP\naddresses to access my database, right?\n\n69\n00:03:30.370 --> 00:03:34.319\nAnd if we go way back in time, to the very\nbeginning of this series, it was probably\n\n70\n00:03:34.319 --> 00:03:38.045\nepisode one or two were we created our\nfirst database, one of the first things\n\n71\n00:03:38.045 --> 00:03:41.340\nthat I had to do was to authorize my\nIP address to access that server.\n\n72\n00:03:41.340 --> 00:03:44.420\nOtherwise, I couldn't even connect to\nthe database that we had just made, right?\n\n73\n00:03:44.420 --> 00:03:48.439\nSo, we sort of already saw that firewall,\nbut I really didn't do anything advanced\n\n74\n00:03:48.439 --> 00:03:51.570\nin there, we just kind of\ncleared my IP address to get in.\n\n75\n00:03:51.570 --> 00:03:53.850\nWell, you can actually do a bit more,\nand so\n\n76\n00:03:53.850 --> 00:03:57.430\nwe're gonna take a look at that right\nhere, and how we can control that access.\n\n77\n00:03:57.430 --> 00:03:58.240\nSo, let's get started.\n\n78\n00:03:58.240 --> 00:04:00.280\nSo, here I am in my Azure portal.\n\n79\n00:04:01.290 --> 00:04:04.840\nAnd if I drill down into my SQL servers,\n\n80\n00:04:04.840 --> 00:04:07.760\nI can pick what server it is\nthat's hosting my SQL environment.\n\n81\n00:04:07.760 --> 00:04:13.050\nSo, in my case, I got this itprotvdemo1,\nand when I go into that demo server,\n\n82\n00:04:13.050 --> 00:04:15.470\nI come over here,\nI start to see the server settings.\n\n83\n00:04:15.470 --> 00:04:19.940\nAnd way over here, under settings,\nyou'll see the Firewall option, right?\n\n84\n00:04:19.940 --> 00:04:21.322\nAnd if we go into the Firewall,\n\n85\n00:04:21.322 --> 00:04:26.210\nhere's where we can specify who's going\nto have access to our system, right?\n\n86\n00:04:26.210 --> 00:04:28.990\nAnd so I see my Firewall settings,\nyou get a couple options here, save,\n\n87\n00:04:28.990 --> 00:04:31.910\ndiscard, add client IP, right?\n\n88\n00:04:31.910 --> 00:04:37.070\nNow, add client IP, what that does,\nis it adds your address.\n\n89\n00:04:37.070 --> 00:04:39.430\nNotice right down here, client IP address.\n\n90\n00:04:39.430 --> 00:04:40.290\nThat's me.\n\n91\n00:04:40.290 --> 00:04:45.192\nThat's not my server, that's not my\nitprotvdemo1, that's my laptop right now.\n\n92\n00:04:45.192 --> 00:04:47.770\nNow, that's not the actual\nIP address my laptop has,\n\n93\n00:04:47.770 --> 00:04:50.920\nthat's the address of our firewall\nhere in the building, but\n\n94\n00:04:50.920 --> 00:04:54.280\nAzure knows the IP I'm coming\nfrom because I'm talking to them.\n\n95\n00:04:54.280 --> 00:04:57.310\nAnd so they're able to see it,\nthey know the IP address, and\n\n96\n00:04:57.310 --> 00:05:02.150\nthey're offering to create a quick and\neasy rule to provide me that access.\n\n97\n00:05:02.150 --> 00:05:04.800\nAnd that's exactly what I did\nback in episode one or two.\n\n98\n00:05:04.800 --> 00:05:08.420\nI just added my own IP so\nthat I could get connected, all right?\n\n99\n00:05:08.420 --> 00:05:12.180\nSo that's the first kind of\npiece of using this firewall,\n\n100\n00:05:12.180 --> 00:05:14.170\nis just approving ourselves.\n\n101\n00:05:14.170 --> 00:05:17.720\nAnd when you approve yourself,\nyou'll appear right down here in the list.\n\n102\n00:05:17.720 --> 00:05:20.020\nAnd there you can see\nI've got 209.251.159.179.\n\n103\n00:05:20.020 --> 00:05:22.859\nThat's my public IP address.\n\n104\n00:05:22.859 --> 00:05:28.020\nAnd it's given it a name that's\nnot necessarily intuitive, right?\n\n105\n00:05:28.020 --> 00:05:31.470\nSo it says ClientIPAddress and\nthen a date, the date that this was added.\n\n106\n00:05:31.470 --> 00:05:35.690\nSo I might want to change that and\nactually give it a name of something like,\n\n107\n00:05:35.690 --> 00:05:40.216\nI don't know, ITProTVStudio, right?\n\n108\n00:05:40.216 --> 00:05:44.010\nSo that now I can remember that that's\nwhat that is, that's the ITProTV studio.\n\n109\n00:05:44.010 --> 00:05:47.950\nOr there's another IP address up here from\nwhere I connected from another location.\n\n110\n00:05:47.950 --> 00:05:51.270\nI was not here at the office, I was at\nhome, I needed to connect into the system,\n\n111\n00:05:51.270 --> 00:05:53.890\nand so I added my own IP address there.\n\n112\n00:05:53.890 --> 00:05:58.320\nAnd so this might be Dons_Home or\nwhatever.\n\n113\n00:05:58.320 --> 00:06:01.520\nAnd so the reason I'm naming these is so\n\n114\n00:06:01.520 --> 00:06:05.850\nin that, in the future, I come in and\nI'm like, who's IP address is that?\n\n115\n00:06:05.850 --> 00:06:06.730\nI can look and I can remember it.\n\n116\n00:06:06.730 --> 00:06:10.520\nAnd maybe that was a contractor right,\nand I had a contractor connect up to my\n\n117\n00:06:10.520 --> 00:06:12.940\ndatabase to troubleshoot something,\nand they're done now.\n\n118\n00:06:12.940 --> 00:06:16.600\nSo now that they're done,\nI need to come and yank that IP, and so\n\n119\n00:06:16.600 --> 00:06:20.900\nI'll click the little three dots there and\ndelete that rule out, and now it's gone.\n\n120\n00:06:20.900 --> 00:06:23.150\nWell, as soon as I hit save, right?\n\n121\n00:06:23.150 --> 00:06:24.620\nSo I need to make sure that I hit save.\n\n122\n00:06:24.620 --> 00:06:27.320\nIf I don't do that, I'm gonna have\na problem, and oh, I broke a rule.\n\n123\n00:06:27.320 --> 00:06:30.850\nOnly one operation on firewall settings\nis allowed per save operation, so\n\n124\n00:06:30.850 --> 00:06:34.620\nI got a little bit of a problem, cuz I was\ndoing renames at the same time, right?\n\n125\n00:06:34.620 --> 00:06:38.880\nSo a little annoying, but, so\nwe can go in and fix that.\n\n126\n00:06:38.880 --> 00:06:40.160\nSo I'll rename that rule.\n\n127\n00:06:41.240 --> 00:06:43.580\n>> Probably do that because it's\neasy to get yourself in the weeds.\n\n128\n00:06:43.580 --> 00:06:46.690\nYou start making a bunch of changes to\nthe firewall, now you have no access.\n\n129\n00:06:46.690 --> 00:06:49.910\n>> Yeah, especially when it comes to\nchanging the order of rules and things,\n\n130\n00:06:49.910 --> 00:06:51.880\nit can really break\nthings on re-application.\n\n131\n00:06:51.880 --> 00:06:55.210\nSo I guess I don't really need to rename\nthis one if I'm going to delete it.\n\n132\n00:06:55.210 --> 00:06:58.800\nSo I can just come back over here and\nI'll delete that one, and\n\n133\n00:06:58.800 --> 00:07:00.410\nthen I'll save it again, all right.\n\n134\n00:07:00.410 --> 00:07:02.604\nSo now, just the ITProTVStudio has access.\n\n135\n00:07:02.604 --> 00:07:06.890\nNow, when I approve that IP,\nit's based on a start IP and\n\n136\n00:07:06.890 --> 00:07:09.830\nan end IP, and\nnotice how they're the same, right?\n\n137\n00:07:09.830 --> 00:07:12.640\nThat means that I've approved\nonly one IP address.\n\n138\n00:07:12.640 --> 00:07:16.210\nBut I know here at the office,\nwe actually have a range of IP addresses.\n\n139\n00:07:16.210 --> 00:07:18.360\nAnd so I might not want to\napprove just a single IP.\n\n140\n00:07:18.360 --> 00:07:22.440\nI might wanna widen this up to our whole\nrange, which I think runs from like,\n\n141\n00:07:22.440 --> 00:07:26.260\n176 to 190, if I remember right,\nsomething like that.\n\n142\n00:07:26.260 --> 00:07:27.690\nI might be a little off there.\n\n143\n00:07:27.690 --> 00:07:30.873\nBut now,\nit's clearing that entire range of IPs,\n\n144\n00:07:30.873 --> 00:07:35.044\n209.251.159.176, all the way through 190.\n\n145\n00:07:35.044 --> 00:07:37.650\nAll right, now, it's possible\n\n146\n00:07:38.790 --> 00:07:42.190\nthat you might need to to approve an IP\nfor a network that you're not on, right?\n\n147\n00:07:42.190 --> 00:07:45.690\nMaybe you have a DBA who's in another\ncity, and they call you up, and\n\n148\n00:07:45.690 --> 00:07:48.980\nthey're like hey, I need to get connected\nto that server can you add my IP address?\n\n149\n00:07:48.980 --> 00:07:51.600\nAnd you say, well, what's your IP address?\n\n150\n00:07:51.600 --> 00:07:54.140\nAnd they say, I don't know, I'm a DBA.\n\n151\n00:07:54.140 --> 00:07:55.740\nI don't do networking, right?\n\n152\n00:07:55.740 --> 00:07:59.006\nSo we need to figure out what\ntheir public IP address is.\n\n153\n00:07:59.006 --> 00:08:02.641\nAnd the public IP is often different than\nwhatever your computer thinks that it has.\n\n154\n00:08:02.641 --> 00:08:05.507\nSo for example, on this computer,\n\n155\n00:08:05.507 --> 00:08:09.815\nif I were to open up a command prompt And\ndo a ipconfig.\n\n156\n00:08:09.815 --> 00:08:12.150\nWhoops, that's not what I wanted.\n\n157\n00:08:12.150 --> 00:08:15.000\nDo an ipconfig to find out what my IP is.\n\n158\n00:08:15.000 --> 00:08:19.204\nI can see my IP address is 192.168.41.142,\nright?\n\n159\n00:08:19.204 --> 00:08:20.920\nThat's not what Microsoft just told me.\n\n160\n00:08:20.920 --> 00:08:24.755\nMicrosoft told me I was 209.251.159.179.\n\n161\n00:08:24.755 --> 00:08:25.362\nThat's quite a mouthful.\n\n162\n00:08:25.362 --> 00:08:27.260\n>> [LAUGH]\n>> But that's what that said.\n\n163\n00:08:27.260 --> 00:08:31.000\nWell, that's because I'm going through\na router that's translating my address.\n\n164\n00:08:31.000 --> 00:08:37.012\nAnd so if you fire up a webpage,\nlike there's what is it?\n\n165\n00:08:37.012 --> 00:08:38.241\n>> WheresMyIP.com.\n\n166\n00:08:38.241 --> 00:08:39.470\n>> WheresMyIP.com.\n\n167\n00:08:39.470 --> 00:08:40.430\nThat's one.\n\n168\n00:08:40.430 --> 00:08:44.010\nI Personally, I like IP Chicken,\nbecause it's got a cooler name.\n\n169\n00:08:44.010 --> 00:08:45.980\nSo I'm gonna go to ipchicken.com.\n\n170\n00:08:45.980 --> 00:08:48.620\nIf you can't trust the IP Chicken,\nwho can you trust?\n\n171\n00:08:48.620 --> 00:08:50.570\nSo that was just ipchicken.com.\n\n172\n00:08:50.570 --> 00:08:54.660\nIf you go to their website, it just gives\nyou right there what your IP address is.\n\n173\n00:08:54.660 --> 00:08:56.860\nSo that person that's out there\non the phone who's saying,\n\n174\n00:08:56.860 --> 00:08:58.390\nhey can you add my address.\n\n175\n00:08:58.390 --> 00:09:00.970\nYou can have them go to IP Chicken or\nif you don't like chickens,\n\n176\n00:09:00.970 --> 00:09:02.740\nyou can go to IPmonkey.com,\nthat's another one.\n\n177\n00:09:02.740 --> 00:09:07.090\nOr you can go to whatismyip.com and\nthey'll tell you the IP address and\n\n178\n00:09:07.090 --> 00:09:08.610\nnow you can go in and\nyou can add that to the list.\n\n179\n00:09:08.610 --> 00:09:09.460\nIf it's a single IP,\n\n180\n00:09:09.460 --> 00:09:14.760\nyou just put that IP address in\nthe source or the start and the end.\n\n181\n00:09:14.760 --> 00:09:19.400\nSo I might wanna add Daniel Home or\nwhatever.\n\n182\n00:09:19.400 --> 00:09:22.590\nIf he's doing a little work from\nhome one day, so I need to add him.\n\n183\n00:09:22.590 --> 00:09:26.030\nAnd so he tells me his IP and\nI come in and I put it in.\n\n184\n00:09:26.030 --> 00:09:28.790\nI don't know if it'll let\nme do internal IPs or not.\n\n185\n00:09:28.790 --> 00:09:29.780\nLet's see if it'll take it.\n\n186\n00:09:31.240 --> 00:09:36.490\nSo just a quick rule of thumb,\nif you get an IP address from somebody and\n\n187\n00:09:37.760 --> 00:09:41.270\nand the system won't take it, it might\nbe that it's what's called a private IP.\n\n188\n00:09:41.270 --> 00:09:47.690\nThere are private IP addresses which are,\nnow why is it not letting me do that?\n\n189\n00:09:47.690 --> 00:09:49.590\nIt says I did two things at once.\n\n190\n00:09:49.590 --> 00:09:51.750\nOf course I did two things at once,\nI added a rule.\n\n191\n00:09:51.750 --> 00:09:52.970\nWe'll try that again.\n\n192\n00:09:52.970 --> 00:09:55.410\nLet me make sure I save first here.\n\n193\n00:09:55.410 --> 00:09:56.260\nThere we go.\n\n194\n00:09:56.260 --> 00:10:01.070\nSo if you see an IP address\nthat starts with 192.168 or\n\n195\n00:10:01.070 --> 00:10:06.850\nif it starts with 10., or if it starts\nwith 172.16 all the way through 172.31.\n\n196\n00:10:06.850 --> 00:10:10.450\nThose are internal IPs and\nthey're not normally suitable for\n\n197\n00:10:10.450 --> 00:10:14.190\nuse in Azure,\ncuz they're not routed on the Internet.\n\n198\n00:10:14.190 --> 00:10:17.290\nSo if you see rules like that there's\nnot a whole lot of point in doing them.\n\n199\n00:10:17.290 --> 00:10:20.230\nI'm just doing it here to make sure I\ndon't accidentally authorize some stranger\n\n200\n00:10:20.230 --> 00:10:21.340\nout there on the Internet.\n\n201\n00:10:21.340 --> 00:10:25.692\nSQL servers are an extreme target of\nattacks and so if you authorize more than\n\n202\n00:10:25.692 --> 00:10:29.100\nyou should, there we go,\nsee how it's giving me an error?\n\n203\n00:10:29.100 --> 00:10:31.828\nAnd it's telling me that it\nmust be a valid IPv4 address?\n\n204\n00:10:31.828 --> 00:10:33.628\nOh, actually,\nit's because I left it a period.\n\n205\n00:10:33.628 --> 00:10:34.499\n>> Because it's not.\n\n206\n00:10:34.499 --> 00:10:36.020\n[LAUGH]\n>> There we go.\n\n207\n00:10:36.020 --> 00:10:39.310\nI thought it was going to give me an error\nfor using a private IP but it's not.\n\n208\n00:10:39.310 --> 00:10:44.190\nBut you know if I authorize an IP address\nand there's a scanner that's running on it\n\n209\n00:10:44.190 --> 00:10:46.170\nright now that it would be able\nto scan my SQL servers and\n\n210\n00:10:46.170 --> 00:10:47.830\nthat could be a dangerous thing.\n\n211\n00:10:47.830 --> 00:10:51.840\nSo we definitely have to be careful\nwith what we approve and what we don't.\n\n212\n00:10:51.840 --> 00:10:53.565\nSo just keep that in mind.\n\n213\n00:10:53.565 --> 00:10:58.290\nNow one problem we might have is if\nwe wanna authorize an application.\n\n214\n00:10:58.290 --> 00:11:01.500\nSo if I have an application\nrunning in Azure,\n\n215\n00:11:01.500 --> 00:11:03.540\nAzure might move it\naround to different IPs.\n\n216\n00:11:03.540 --> 00:11:04.220\nThings change.\n\n217\n00:11:04.220 --> 00:11:05.450\nIf there's a failure in a data center,\n\n218\n00:11:05.450 --> 00:11:08.020\nthen it'll move my application\nsomewhere else to keep it up and going.\n\n219\n00:11:08.020 --> 00:11:10.480\nAnd when that happens my\nIP address might change.\n\n220\n00:11:10.480 --> 00:11:11.860\nSo how do you add an IP address for\n\n221\n00:11:11.860 --> 00:11:14.120\na system when you don't know what\nthe IP address is going to be?\n\n222\n00:11:15.190 --> 00:11:17.620\nWell, if it's an external system,\nthere's really no good way to do that.\n\n223\n00:11:17.620 --> 00:11:18.970\nSo, you're kinda out of luck.\n\n224\n00:11:18.970 --> 00:11:21.880\nBut if it's an Azure service,\nnotice this option right here.\n\n225\n00:11:21.880 --> 00:11:23.900\nAllow access to Azure services.\n\n226\n00:11:23.900 --> 00:11:25.110\nAnd it's turned on.\n\n227\n00:11:25.110 --> 00:11:31.310\nAnd what that means is, my Azure web apps\nwill be able to access this server, right?\n\n228\n00:11:31.310 --> 00:11:35.452\nIn the old portal,\nthis would show up as a rule for 0.0.0.0.\n\n229\n00:11:35.452 --> 00:11:38.410\nSo, you'd have a start IP and\nan end IP of 0.0.0.0.\n\n230\n00:11:38.410 --> 00:11:41.150\nBut in the new portal,\nit just shows up as an on off toggle.\n\n231\n00:11:41.150 --> 00:11:43.650\nYou can flip it on, and\nyour Azure services will have access\n\n232\n00:11:43.650 --> 00:11:46.120\nregardless of what IP address\nthey get inside of Azure.\n\n233\n00:11:46.120 --> 00:11:48.920\nMicrosoft dynamically updates that\nto reflect whatever addresses\n\n234\n00:11:48.920 --> 00:11:50.220\nthey're using on your system.\n\n235\n00:11:50.220 --> 00:11:52.530\nSo just a quick and\neasy way to give that access too.\n\n236\n00:11:53.990 --> 00:11:56.710\nAll right now, what I set up here,\nthis is all used in the GUI.\n\n237\n00:11:56.710 --> 00:11:59.050\nAnd it works pretty well, right?\n\n238\n00:11:59.050 --> 00:12:01.460\nBut let's say I wanted to add\none like Daniel's home there and\n\n239\n00:12:01.460 --> 00:12:04.140\nI wanted to do it from\nthe PowerShell instead.\n\n240\n00:12:04.140 --> 00:12:06.300\nAdding it from\nthe PowerShell's pretty easy.\n\n241\n00:12:06.300 --> 00:12:07.780\nYou get a couple of quick commands here.\n\n242\n00:12:07.780 --> 00:12:09.240\nI'll just run through them real fast.\n\n243\n00:12:09.240 --> 00:12:11.070\nI know it's not the most exciting thing.\n\n244\n00:12:11.070 --> 00:12:20.260\nFor example,\nthere's a Get-AzureSqlDatabaseFirewall,\n\n245\n00:12:20.260 --> 00:12:24.690\noh see what I, oh,\nDatabaseServerFirewallRule, there we go.\n\n246\n00:12:24.690 --> 00:12:26.330\nNice long command for us there.\n\n247\n00:12:26.330 --> 00:12:30.640\nSo Get-AzureSqlDatabaseServerFirewallRule.\n\n248\n00:12:30.640 --> 00:12:31.962\nIt's got to be one of the longest applets.\n\n249\n00:12:31.962 --> 00:12:33.291\n>> Rolls right off the tongue, doesn't it?\n\n250\n00:12:33.291 --> 00:12:34.794\n[LAUGH]\n>> And then we can specify our\n\n251\n00:12:34.794 --> 00:12:35.490\nserver name.\n\n252\n00:12:36.640 --> 00:12:39.920\nAnd my server is itprotvdemo1.\n\n253\n00:12:39.920 --> 00:12:40.500\nRight?\n\n254\n00:12:40.500 --> 00:12:41.620\nAnd so that will reach right out and\n\n255\n00:12:41.620 --> 00:12:45.010\nconnect to that server and return back\nwhat my current firewall rules are.\n\n256\n00:12:45.010 --> 00:12:47.630\nAnd right there I can see\nthe ITProTV_Studio right there.\n\n257\n00:12:47.630 --> 00:12:52.537\nAnd if I want to add a rule for\nDaniel to connect I just need to\n\n258\n00:12:52.537 --> 00:12:56.456\ncome in a say Add-AzureSqlDatabaseServer.\n\n259\n00:13:00.427 --> 00:13:08.822\nLet's see,\nAdd-AzureSqlDatabaseServerFirewallRule.\n\n260\n00:13:10.150 --> 00:13:12.882\nOh shoot, it's not, I was wondering why\nmy Tab auto-complete wasn't working.\n\n261\n00:13:12.882 --> 00:13:13.990\n>> [LAUGH]\n>> It's not added.\n\n262\n00:13:13.990 --> 00:13:14.760\nIt's new.\n\n263\n00:13:14.760 --> 00:13:16.035\nThere we go.\n\n264\n00:13:16.035 --> 00:13:19.370\nNew-AzureSqlDatabaseFirewallRule.\n\n265\n00:13:19.370 --> 00:13:22.700\nAnd now I can just add on to that\nwhat it is I wanna do, right.\n\n266\n00:13:22.700 --> 00:13:27.799\nSo I wanna do a -ServerName\nof itprotvdemo1.\n\n267\n00:13:27.799 --> 00:13:31.330\nI wanna do a rule name.\n\n268\n00:13:31.330 --> 00:13:34.317\nAnd I'll call this one, you know\n\n269\n00:13:34.317 --> 00:13:39.970\nDaniel_Home, so\nthis is gonna be his house.\n\n270\n00:13:39.970 --> 00:13:44.530\nAnd then I just need to\nsay the start address, and\n\n271\n00:13:44.530 --> 00:13:46.874\nI'll start him at 172.16.0.55.\n\n272\n00:13:46.874 --> 00:13:50.440\nAnd the end IP address which\nI'll put to be the same just cuz\n\n273\n00:13:50.440 --> 00:13:52.200\nhe's only got one IP right.\n\n274\n00:13:52.200 --> 00:13:56.350\nSo New-AzureSqlDatabaseServerFirewallRule.\n\n275\n00:13:56.350 --> 00:13:58.070\nThat's going to get that one created.\n\n276\n00:13:58.070 --> 00:13:59.820\nIt's going to drop it out there so now and\n\n277\n00:13:59.820 --> 00:14:05.280\nif I rerun the get command I can pull up\nmy list and I should now see two rules.\n\n278\n00:14:05.280 --> 00:14:06.647\nAnd there they are, right?\n\n279\n00:14:06.647 --> 00:14:08.690\nSo if we go back to our GUI now.\n\n280\n00:14:08.690 --> 00:14:11.807\nI made the change in PowerShell but here\nin my GUI I should be able to jump in and\n\n281\n00:14:11.807 --> 00:14:15.370\ngo to my SQL servers and that change\nshould be reflected here pretty quickly.\n\n282\n00:14:15.370 --> 00:14:17.270\nIt happens really fast.\n\n283\n00:14:17.270 --> 00:14:22.020\nAnd once I get in here I can just\njump right back into my firewall.\n\n284\n00:14:22.020 --> 00:14:25.660\nAnd once I get into my firewall rules,\nthere we go.\n\n285\n00:14:25.660 --> 00:14:28.070\nI've got the firewall rule\nthat I already had and\n\n286\n00:14:28.070 --> 00:14:31.160\nhere's the Daniel_Home that I\ncreated right from the PowerShell.\n\n287\n00:14:31.160 --> 00:14:35.493\nSo the neat part about using PowerShell\nwith this stuff is maybe you've got\n\n288\n00:14:35.493 --> 00:14:40.196\na script that you run from your local data\ncenter that uploads some data into SQL.\n\n289\n00:14:40.196 --> 00:14:44.040\nBut you don't need that connection\nto be open all the time.\n\n290\n00:14:44.040 --> 00:14:47.620\nI could write a PowerShell script\nthat put a firewall rule in,\n\n291\n00:14:47.620 --> 00:14:48.642\nallowing me to connect.\n\n292\n00:14:48.642 --> 00:14:52.460\nThen connected to the database,\nuploaded this information, and\n\n293\n00:14:52.460 --> 00:14:56.850\nthen removed the firewall rule, and\nthen went about its day, right?\n\n294\n00:14:56.850 --> 00:15:01.260\nSo now I only have it opened temporarily\nwhile I ran that and the disconnected.\n\n295\n00:15:01.260 --> 00:15:03.480\nSo the PowerShell automation\nis really nice on this.\n\n296\n00:15:03.480 --> 00:15:05.740\nBut you can do it all from the GUI too.\n\n297\n00:15:05.740 --> 00:15:08.810\nAs far as this functionality is concerned,\nthere's not anything that you can do in\n\n298\n00:15:08.810 --> 00:15:10.330\nthe PowerShell that you\ncan't do here from the GUI.\n\n299\n00:15:10.330 --> 00:15:12.560\nSo pretty straightforward system.\n\n300\n00:15:12.560 --> 00:15:14.880\nAnd now we're controlling\nwho can access it.\n\n301\n00:15:14.880 --> 00:15:17.453\nIf somebody on the Internet\ntries to scan my server,\n\n302\n00:15:17.453 --> 00:15:20.093\nthey don't even see that\nthe ports are open, right?\n\n303\n00:15:20.093 --> 00:15:23.680\nYou know, SQL uses TCP port 1433.\n\n304\n00:15:23.680 --> 00:15:26.660\nAnd if somebody scans and\nsees TCP 1433 open,\n\n305\n00:15:26.660 --> 00:15:30.230\nthey know it's a Microsoft SQL server,\nand they know how to attack that, right?\n\n306\n00:15:30.230 --> 00:15:33.880\nBut here, if they scan this server,\nthey don't even see that.\n\n307\n00:15:33.880 --> 00:15:36.980\nThey don't see that that's open at all and\nthey don't know it's a SQL server.\n\n308\n00:15:36.980 --> 00:15:38.560\nRight?\nThey can't access that port\n\n309\n00:15:38.560 --> 00:15:40.280\nunless they're right here in this list.\n\n310\n00:15:40.280 --> 00:15:41.790\n>> Now Don, that raises a good question.\n\n311\n00:15:41.790 --> 00:15:45.670\nYou said that the TCP port 1433 and\nthat has to be open.\n\n312\n00:15:45.670 --> 00:15:48.970\nThat means that my client\nmachines have to be able to\n\n313\n00:15:48.970 --> 00:15:50.900\nsend outbound connections to do that,\nright?\n\n314\n00:15:50.900 --> 00:15:51.640\n>> That's a good point.\n\n315\n00:15:51.640 --> 00:15:52.800\nI hear this a lot.\n\n316\n00:15:52.800 --> 00:15:55.510\nWhere somebody says,\nthey put in the firewall rule in Azure and\n\n317\n00:15:55.510 --> 00:15:57.250\nthey still can't connect,\nwhat the heck's going on?\n\n318\n00:15:57.250 --> 00:15:58.454\nWhat did Microsoft do wrong?\n\n319\n00:15:58.454 --> 00:16:01.992\nWell, this is the incoming\ninto Azure port, right?\n\n320\n00:16:01.992 --> 00:16:05.726\nSo getting into Azure it's TCP port 1433,\nif it's your client,\n\n321\n00:16:05.726 --> 00:16:07.192\nlike my laptop right here.\n\n322\n00:16:07.192 --> 00:16:10.382\nI have to go out on TCP 1433.\n\n323\n00:16:10.382 --> 00:16:14.183\nAnd you might have a software firewall on\nyour computer, you might have a physical\n\n324\n00:16:14.183 --> 00:16:17.655\nfirewall on your network that might be\nblocking those because most network\n\n325\n00:16:17.655 --> 00:16:21.458\nadministrators know your average user\nshouldn't be connecting on 1433, so\n\n326\n00:16:21.458 --> 00:16:24.764\nthey block it because they think that\nyour system might be exploited and\n\n327\n00:16:24.764 --> 00:16:27.782\nperforming SQL injection attacks or\nother things like that so.\n\n328\n00:16:27.782 --> 00:16:30.360\nWell, SQL injections can\nhappen in any port really,\n\n329\n00:16:30.360 --> 00:16:33.560\nbut they can block it for various reasons.\n\n330\n00:16:33.560 --> 00:16:36.750\nSo you might need to double check to make\nsure that you can go out on that port\n\n331\n00:16:36.750 --> 00:16:37.378\nnumber also.\n\n332\n00:16:37.378 --> 00:16:41.299\nCheck your local firewalls, but\nas far as the service side is concerned,\n\n333\n00:16:41.299 --> 00:16:43.461\nit's just incoming TCP port 1433.\n\n334\n00:16:43.461 --> 00:16:46.800\nNow notice how it doesn't let\nme specify a port number here.\n\n335\n00:16:46.800 --> 00:16:50.600\nYou actually can change the port\nnumber that SQL listens on and\n\n336\n00:16:50.600 --> 00:16:52.650\nthen this firewall panel kind of breaks.\n\n337\n00:16:52.650 --> 00:16:56.500\nAnd so if you do that, you really have\nto do everything from the PowerShell\n\n338\n00:16:56.500 --> 00:16:59.110\nat that point because you'll need\nto specify port numbers also.\n\n339\n00:16:59.110 --> 00:17:02.050\nSo I guess I'll have to backtrack on my\nstatement a little bit earlier where I\n\n340\n00:17:02.050 --> 00:17:05.810\nsaid there's nothing you could do here\nin PowerShell that you couldn't do here.\n\n341\n00:17:05.810 --> 00:17:07.610\nWell if you change that\ndefault port number,\n\n342\n00:17:07.610 --> 00:17:09.930\nyou do end up kind of using PowerShell.\n\n343\n00:17:09.930 --> 00:17:11.500\nThat's where you end up there, so.\n\n344\n00:17:11.500 --> 00:17:13.535\n>> Yeah, it's where the real\npower is anyway, right Don?\n\n345\n00:17:13.535 --> 00:17:15.160\n[LAUGH] In the PowerShell.\n\n346\n00:17:15.160 --> 00:17:19.180\n>> I usually don't bother changing that\nport number because if you're restricting\n\n347\n00:17:19.180 --> 00:17:22.610\nthe IPs that get to it, then it doesn't\nmatter that it's a default port number.\n\n348\n00:17:22.610 --> 00:17:24.530\nPeople change default ports\nwhen they're trying to do,\n\n349\n00:17:24.530 --> 00:17:26.260\nit's called security through obscurity,\nright.\n\n350\n00:17:26.260 --> 00:17:29.200\nYou're not actually securing the server\nat all, you're just making it harder for\n\n351\n00:17:29.200 --> 00:17:30.970\npeople to guess what the server is.\n\n352\n00:17:30.970 --> 00:17:33.470\nBut if they know it's a SQL server,\nthey don't care what port it is.\n\n353\n00:17:33.470 --> 00:17:36.175\nThey'll connect up and try and log in, so.\n\n354\n00:17:36.175 --> 00:17:38.610\nAnd I don't usually bother with that.\n\n355\n00:17:38.610 --> 00:17:39.320\n>> Yeah.\nNow Don,\n\n356\n00:17:39.320 --> 00:17:42.450\nwe've taken a look at this in setting up\nthese firewall rules, making sure that\n\n357\n00:17:42.450 --> 00:17:46.010\nonly the people we wanna access our\ndatabase can access our database.\n\n358\n00:17:46.010 --> 00:17:50.625\nBut the question does arise,\nwhat if I have multiple databases?\n\n359\n00:17:50.625 --> 00:17:55.060\nAnd this is great for a single database,\nbut I've got two databases and maybe I've\n\n360\n00:17:55.060 --> 00:17:58.670\ngot different access for one than\nthe other, and they're sharing the server.\n\n361\n00:17:58.670 --> 00:17:59.730\nCan I make that happen?\n\n362\n00:17:59.730 --> 00:18:01.270\nA, I guess that's my first question.\n\n363\n00:18:01.270 --> 00:18:03.650\nAnd if so, what do we do to do that?\n\n364\n00:18:03.650 --> 00:18:08.480\n>> Great question, right, because if\nyou're deploying one database on a server,\n\n365\n00:18:08.480 --> 00:18:09.700\nthen the server rules work great.\n\n366\n00:18:09.700 --> 00:18:11.470\nYou just do that and you're done, right.\n\n367\n00:18:11.470 --> 00:18:14.590\nBut in my scenario, I actually have more\nthan one database on this server, right.\n\n368\n00:18:14.590 --> 00:18:18.020\nSo if we take a look at here's\nmy itprotvdemo1 server.\n\n369\n00:18:18.020 --> 00:18:21.653\nAnd down here I can see I've\ngot two databases, right,\n\n370\n00:18:21.653 --> 00:18:24.220\nI've got SampleDB1 and SampleDB2.\n\n371\n00:18:24.220 --> 00:18:29.230\nWhen I create those server level firewall\nrules, they apply to everything,\n\n372\n00:18:29.230 --> 00:18:30.430\nto all these databases.\n\n373\n00:18:30.430 --> 00:18:32.850\nSo when I granted that access\nto the ITProTV studio,\n\n374\n00:18:32.850 --> 00:18:35.050\nI granted access to both\nof these databases.\n\n375\n00:18:35.050 --> 00:18:37.280\nThat may not be what I want, right.\n\n376\n00:18:37.280 --> 00:18:40.070\nWhat if one of these is\na production database, and\n\n377\n00:18:40.070 --> 00:18:42.990\none of these is a development database?\n\n378\n00:18:42.990 --> 00:18:46.640\nAnd I want my web apps to be able to\nconnect to the production one, but\n\n379\n00:18:46.640 --> 00:18:51.450\nI want the dev team to be able to connect\nto the staging or developed one, right.\n\n380\n00:18:51.450 --> 00:18:54.020\nI have separate requirements for\nthe different databases.\n\n381\n00:18:54.020 --> 00:18:58.520\nWell, the web UI here is for\nthe server firewall rules, right.\n\n382\n00:18:58.520 --> 00:19:01.590\nThink of it as like the underlying\nWindows firewall for the server.\n\n383\n00:19:01.590 --> 00:19:04.510\nIt can't do individual databases,\nall right.\n\n384\n00:19:04.510 --> 00:19:08.905\nFortunately, SQL has a technology\nbuilt into it where you can create\n\n385\n00:19:08.905 --> 00:19:10.775\ndatabase level firewalls, all right.\n\n386\n00:19:10.775 --> 00:19:12.855\nNow Microsoft doesn't have\na ton of documentation on this,\n\n387\n00:19:12.855 --> 00:19:14.895\nyou don't see it here in the GUI at all,\nso\n\n388\n00:19:14.895 --> 00:19:18.725\nit's one of those features that you just\nhave to know about to take advantage of.\n\n389\n00:19:18.725 --> 00:19:22.095\nAnd to my knowledge, there's no\nPowerShell commands for this one,\n\n390\n00:19:22.095 --> 00:19:24.075\nthere's no GUI on the website.\n\n391\n00:19:24.075 --> 00:19:25.875\nThe only way to configure\ndatabase firewall rules,\n\n392\n00:19:25.875 --> 00:19:29.800\nat least that I'm familiar with,\nis to transact SQL, all right.\n\n393\n00:19:29.800 --> 00:19:32.370\nThat you can connect up to a database, and\n\n394\n00:19:32.370 --> 00:19:34.870\nyou can create rules on\nthe database itself.\n\n395\n00:19:34.870 --> 00:19:38.120\nSo in the SQL management studio, we can\nconfigure the database firewall rules if\n\n396\n00:19:38.120 --> 00:19:40.940\nwe just drill down into the databases,\nright.\n\n397\n00:19:40.940 --> 00:19:43.640\nYou can actually manage the server\nfirewall rules from here too,\n\n398\n00:19:43.640 --> 00:19:46.230\nbut the web GUI is so much easier.\n\n399\n00:19:46.230 --> 00:19:49.530\nIf we take a database,\nlike I'll take sample db1 here and\n\n400\n00:19:49.530 --> 00:19:53.470\nI'm just gonna generate a new query in it,\nyou can take\n\n401\n00:19:53.470 --> 00:19:57.560\na look at the server firewall rules as\nwell as the database firewall rules.\n\n402\n00:19:57.560 --> 00:20:02.990\nIf I run, for example,\nSELECT * FROM sys.firewall_rules.\n\n403\n00:20:02.990 --> 00:20:07.010\nActually, that's gonna fail cuz I'm\nconnected to the individual database.\n\n404\n00:20:07.010 --> 00:20:10.770\nIf you wanna take a look at the firewall\nrules for the server, you've\n\n405\n00:20:10.770 --> 00:20:13.440\nactually gotta make sure that you're\nconnected to the master database and\n\n406\n00:20:13.440 --> 00:20:15.510\nnot one of your individual ones, right.\n\n407\n00:20:15.510 --> 00:20:20.580\nSo if I were to go up here to my\nsystem databases and choose master and\n\n408\n00:20:20.580 --> 00:20:25.190\ngenerate a new query from here, I'd be\nlooking at things from the server level.\n\n409\n00:20:25.190 --> 00:20:28.098\nAnd that's where I'd be able\nto run this query, right.\n\n410\n00:20:28.098 --> 00:20:30.650\nOne of the harder parts\nabout working with Azure SQL\n\n411\n00:20:30.650 --> 00:20:33.250\nis managing the context\nof your databases so\n\n412\n00:20:33.250 --> 00:20:35.850\nthat when you run a command it runs on\nthe database that's correct, right.\n\n413\n00:20:35.850 --> 00:20:39.230\nSo here I've got master\nchosen as my database, and\n\n414\n00:20:39.230 --> 00:20:42.410\nI've got that select star\nfrom sys.firewall_rules.\n\n415\n00:20:42.410 --> 00:20:45.393\nAnd when I run that it's gonna return\na list of my firewall rules, and\n\n416\n00:20:45.393 --> 00:20:47.759\nthere you can see like Daniel Home and\nITProTV Studio,\n\n417\n00:20:47.759 --> 00:20:50.920\nthose are the ones that we made\nin the GUI earlier, right.\n\n418\n00:20:50.920 --> 00:20:54.860\nWell, you've actually got the same\nthing on your individual databases.\n\n419\n00:20:54.860 --> 00:20:58.030\nSo there I've got sample DB1 and\nif I take that command and\n\n420\n00:20:58.030 --> 00:21:04.470\nchange it just a little bit to be SELECT\n* FROM sys.database_firewall_rules.\n\n421\n00:21:04.470 --> 00:21:08.570\nNow I can see the rules that apply\njust to that individual database.\n\n422\n00:21:08.570 --> 00:21:10.770\nAnd down here you'll see\nthat it's empty by default.\n\n423\n00:21:10.770 --> 00:21:13.340\nSo by default you just have\nthe server firewall rules, and\n\n424\n00:21:13.340 --> 00:21:16.500\nthat approves access to all the databases,\nall right.\n\n425\n00:21:16.500 --> 00:21:19.620\nThen I can start to create some\n\n426\n00:21:19.620 --> 00:21:22.810\nrules that are right here on\nthis individual database.\n\n427\n00:21:22.810 --> 00:21:24.220\nAnd these rules,\n\n428\n00:21:24.220 --> 00:21:27.758\nit's important to recognize that\nthe server rules take precedence.\n\n429\n00:21:27.758 --> 00:21:32.390\nSo if somebody's approved at the server\nside, these rules get ignored, right.\n\n430\n00:21:32.390 --> 00:21:34.450\nSo I approve the ITProTV Studios.\n\n431\n00:21:34.450 --> 00:21:36.100\nSo no matter what I put in here,\nit doesn't matter,\n\n432\n00:21:36.100 --> 00:21:39.340\nthe ITProTV Studio will be able\nto get to this database, right.\n\n433\n00:21:39.340 --> 00:21:43.060\nSo Microsoft actually recommends\nthat you choose one of the other and\n\n434\n00:21:43.060 --> 00:21:46.090\nyou don't try and\nmix both cuz it gets difficult.\n\n435\n00:21:46.090 --> 00:21:50.540\nIf you mix both the IPs listed here\nhave to be ones that are not covered\n\n436\n00:21:50.540 --> 00:21:53.900\nby the server rule,\notherwise they're ineffective, all right.\n\n437\n00:21:53.900 --> 00:21:57.470\nIf I wanna add a rule, we have to\ncall a stored procedure for that.\n\n438\n00:21:57.470 --> 00:22:01.790\nSo there's a little stored procedure\nthat I'll call with the exec command or\n\n439\n00:22:01.790 --> 00:22:10.750\nthe executive command and it's just\nthe sp_set_database_firewall_rule.\n\n440\n00:22:10.750 --> 00:22:11.810\nAnd then we need to give it a name.\n\n441\n00:22:11.810 --> 00:22:15.520\nI need to tell it that it's a,\nshoot, what do they call it,\n\n442\n00:22:15.520 --> 00:22:18.240\nunicode characters, and so\nI'll go in and give it a name.\n\n443\n00:22:18.240 --> 00:22:21.660\nMaybe this one will be Don's Home,\nor whatever, right.\n\n444\n00:22:21.660 --> 00:22:25.620\nSo I'm gonna authorize my home to\nbe able to get to this system, and\n\n445\n00:22:25.620 --> 00:22:27.530\nthen I just need to tell the start IP and\n\n446\n00:22:27.530 --> 00:22:30.850\nfinish IP all that other good information\nthat we normally provide, right.\n\n447\n00:22:30.850 --> 00:22:36.150\nSo I'll do a comma here in the start IP,\nI'll just maybe make one up here.\n\n448\n00:22:36.150 --> 00:22:39.240\nI'll use one of our public IPs, and\n\n449\n00:22:39.240 --> 00:22:43.010\nthen I need to tell the end IP which,\nsame basic format, right.\n\n450\n00:22:43.010 --> 00:22:44.126\nNothing too crazy there.\n\n451\n00:22:46.294 --> 00:22:48.100\nLike that, all right.\n\n452\n00:22:48.100 --> 00:22:51.180\nNow once I've got that in place,\nI just need to run that stored procedure.\n\n453\n00:22:51.180 --> 00:22:54.620\nSo we'll just highlight that and\nrun it, and\n\n454\n00:22:54.620 --> 00:22:56.690\nnow that it's run we can pull up our list.\n\n455\n00:22:58.450 --> 00:23:03.360\nAnd I can see that I now have\na database firewall rule right there.\n\n456\n00:23:03.360 --> 00:23:08.330\nAnd Don_Home, this IP is now\nallowed to access this database.\n\n457\n00:23:08.330 --> 00:23:10.200\nNot allowed to access sample DB2,\n\n458\n00:23:10.200 --> 00:23:12.915\nnot allowed to access the master database,\nright.\n\n459\n00:23:12.915 --> 00:23:16.632\nI might want to add this to the master\ndatabase too if I need to connect to it,\n\n460\n00:23:16.632 --> 00:23:18.877\nbut I am allowed to\naccess this one database.\n\n461\n00:23:18.877 --> 00:23:22.737\nNow if 209.251.159.180 is\ncovered by the server rule,\n\n462\n00:23:22.737 --> 00:23:27.050\nthen I'll be able to access everything,\nregardless of what these say, right.\n\n463\n00:23:27.050 --> 00:23:30.540\nSo be aware of that, but otherwise I'm\nnow approved, and I can continue that and\n\n464\n00:23:30.540 --> 00:23:34.030\nmore by calling\nsp_set_database_firewall_rule.\n\n465\n00:23:34.030 --> 00:23:36.880\nYou've also got\nsp_delete_database_firewall_rule, and\n\n466\n00:23:36.880 --> 00:23:39.388\nyou would basically just eliminate\nthis stuff here at the end.\n\n467\n00:23:39.388 --> 00:23:43.310\nAnd say sp_delete_database_firewall_rule\nand then the name of the rule and\n\n468\n00:23:43.310 --> 00:23:44.670\nit'll delete it out of there, right.\n\n469\n00:23:44.670 --> 00:23:48.810\nSo these are database level firewall\nrules and they are a great way for\n\n470\n00:23:48.810 --> 00:23:50.910\ngiving you that granular control.\n\n471\n00:23:50.910 --> 00:23:54.530\nThere is another reason why these\nare really handy though, okay.\n\n472\n00:23:54.530 --> 00:24:00.380\nWhat happens if you back up your\ndatabase and something happens, right?\n\n473\n00:24:00.380 --> 00:24:03.060\nAnd you need to do a restore and\nyour restore your database.\n\n474\n00:24:03.060 --> 00:24:06.240\nWell, if you restore your\ndatabase to the same server\n\n475\n00:24:06.240 --> 00:24:08.880\nthen the server firewall\nrules are already there.\n\n476\n00:24:08.880 --> 00:24:12.350\nBut if you restore your\ndatabase to another server,\n\n477\n00:24:12.350 --> 00:24:14.950\nthe server firewall rules aren't there,\nright.\n\n478\n00:24:14.950 --> 00:24:18.310\nSo, they don't follow you,\nthey're not what's considered portable.\n\n479\n00:24:18.310 --> 00:24:22.330\nThe cool thing about database firewall\nrules is they're stored in the database.\n\n480\n00:24:22.330 --> 00:24:24.300\nSo if I back up my database and\n\n481\n00:24:24.300 --> 00:24:27.860\nI restore it to another server,\nthese rules follow it.\n\n482\n00:24:27.860 --> 00:24:31.770\nAnd for that reason alone Microsoft\nencourages you to use these if you can,\n\n483\n00:24:31.770 --> 00:24:34.370\ncuz they'll follow your\ndatabase when there's restores,\n\n484\n00:24:34.370 --> 00:24:36.690\nwhen you move server names, all right.\n\n485\n00:24:36.690 --> 00:24:38.320\nThese rules will follow it along, and\n\n486\n00:24:38.320 --> 00:24:40.330\nthese people will always\nhave access to the database.\n\n487\n00:24:40.330 --> 00:24:41.680\nYou may not want that, right.\n\n488\n00:24:41.680 --> 00:24:44.290\nIf you are creating a dev or\nstaging environment you may not want\n\n489\n00:24:44.290 --> 00:24:46.320\nthe same permissions that\nyou had on the database and\n\n490\n00:24:46.320 --> 00:24:49.970\nproduction, and in that scenario\na server firewalls rule may be better.\n\n491\n00:24:49.970 --> 00:24:52.090\nIt's up to you to kind of choose, right.\n\n492\n00:24:52.090 --> 00:24:54.620\nBut just remember that they are not\ncompatible with each other.\n\n493\n00:24:54.620 --> 00:24:58.370\nThe server rules always beat\nout the database rules.\n\n494\n00:24:58.370 --> 00:25:00.220\nAnd so you just need to be\naware of that as you kinda\n\n495\n00:25:00.220 --> 00:25:01.810\nimplement this in your environment.\n\n496\n00:25:01.810 --> 00:25:05.040\nBut once you get them created,\nthey're in place and now you've got little\n\n497\n00:25:05.040 --> 00:25:09.340\nmini firewalls on each database so\nyou can have that granular access.\n\n498\n00:25:09.340 --> 00:25:13.120\nSomebody can access on database but not\nanother one and you've got that control.\n\n499\n00:25:13.120 --> 00:25:16.532\n>> So Don yeah, we have a lot of\nreally good security tips here for\n\n500\n00:25:16.532 --> 00:25:19.030\nyour SQL environment cuz obviously,\nlike we said before,\n\n501\n00:25:19.030 --> 00:25:23.760\nthis is where the actual gold is\nthat hackers might want to go after.\n\n502\n00:25:23.760 --> 00:25:26.630\nSo you got a lot of good ways\nin which we can secure it up.\n\n503\n00:25:26.630 --> 00:25:29.780\nIs there anything else that we need\nto cover when it comes to security or\n\n504\n00:25:29.780 --> 00:25:31.200\nmaybe a firewall rule or something?\n\n505\n00:25:31.200 --> 00:25:34.870\n>> Yeah, one big enemy to firewall rules\n\n506\n00:25:34.870 --> 00:25:37.090\nis that your client's IP\naddresses can change, right.\n\n507\n00:25:37.090 --> 00:25:41.230\nIf your client's using DHCP or if they're\ngoing through a NAT router, they might\n\n508\n00:25:41.230 --> 00:25:45.320\nhave one public IP address today and\na different public IP address next week.\n\n509\n00:25:45.320 --> 00:25:47.520\nThat happens pretty frequently and\nas you travel and\n\n510\n00:25:47.520 --> 00:25:49.650\nmove from office to\noffice your IP changes.\n\n511\n00:25:49.650 --> 00:25:53.785\nSo you'll find that maintaining your\nfirewall rules can be pretty significant.\n\n512\n00:25:53.785 --> 00:25:54.890\nAnd so\n\n513\n00:25:54.890 --> 00:25:59.780\nfrom that perspective sometimes it's\neasier if you set up a VPN into Azure.\n\n514\n00:25:59.780 --> 00:26:00.930\nAnd that way you VPN in and\n\n515\n00:26:00.930 --> 00:26:03.770\nyou get assigned an IP and you've\nalways got an IP in a certain range.\n\n516\n00:26:03.770 --> 00:26:06.860\nThat can actually be a little helpful\nto save that time for an administrator.\n\n517\n00:26:06.860 --> 00:26:08.920\nBut in terms of servers,\nyou can't really do that.\n\n518\n00:26:08.920 --> 00:26:12.400\nSo that's where you got to make sure\nyou've got static IPs if you can, or,\n\n519\n00:26:12.400 --> 00:26:15.660\njust be ready to do some firewall rule\nmaintenance on a pretty regular basis,\n\n520\n00:26:15.660 --> 00:26:17.300\njust as people's IPs change.\n\n521\n00:26:17.300 --> 00:26:18.150\nJust be aware of that.\n\n522\n00:26:18.150 --> 00:26:19.630\n>> Just part of the job.\n\n523\n00:26:19.630 --> 00:26:20.170\n>> Job security.\n\n524\n00:26:20.170 --> 00:26:21.150\n>> That's right, job security.\n\n525\n00:26:21.150 --> 00:26:21.980\nAlways good stuff.\n\n526\n00:26:21.980 --> 00:26:23.620\nWell thank you so much for\nexplaining this for\n\n527\n00:26:23.620 --> 00:26:26.860\nus today, and\nwe thank you out there for watching.\n\n528\n00:26:26.860 --> 00:26:29.550\nBut this concludes yet\nanother great episode here at ITProTV.\n\n529\n00:26:29.550 --> 00:26:31.120\nWe're gonna go ahead and sign off.\n\n530\n00:26:31.120 --> 00:26:32.470\nI've been your host Daniel Lowery.\n\n531\n00:26:32.470 --> 00:26:33.090\n>> And I'm Don Pizzette.\n\n532\n00:26:33.090 --> 00:26:34.002\n>> And we'll see you next time.\n\n533\n00:26:34.002 --> 00:26:40.180\n>> [MUSIC]\n\n",
          "vimeoId": "151825618"
        },
        {
          "description": "In this episode, Don and Daniel explain the different user account and roles implemented in Azure SQL. They being by opening the Azure Web Portal and setting up a server management administrator and describing all the possible roles available which grants permissions. Then they look at creating regular database users by using T-SQL with the SQL Management Studio and configure the default database roles, again for access permissions.",
          "length": "1557",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-azuresql/techskills-azuresql-5-2-users_and_roles-111316-1.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-azuresql/techskills-azuresql-5-2-users_and_roles-111316-1-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-azuresql/techskills-azuresql-5-2-users_and_roles-111316-1-sm.jpg",
          "title": "Users and Roles",
          "transcript": "WEBVTT\n\n1\n00:00:00.000 --> 00:00:10.000\n[MUSIC]\n\n2\n00:00:12.352 --> 00:00:12.970\nAll right.\n\n3\n00:00:12.970 --> 00:00:13.680\nGreetings everyone.\n\n4\n00:00:13.680 --> 00:00:16.469\nAnd welcome to another\nexciting episode of ITProTV.\n\n5\n00:00:16.469 --> 00:00:19.184\nI'm your host Daniel Lowrie,\nand in today's episode, well,\n\n6\n00:00:19.184 --> 00:00:22.376\nwe're continuing on that Azure SQL Series\nwe've been working so hard on.\n\n7\n00:00:22.376 --> 00:00:27.297\nAnd joining me again today in the studio,\nthat's right I've pried him away from his\n\n8\n00:00:27.297 --> 00:00:31.910\nSteam account to help us out with that\nAzure SQL, that is good man, Don Pezet.\n\n9\n00:00:31.910 --> 00:00:33.050\nDon, welcome back to the show, sir.\n\n10\n00:00:33.050 --> 00:00:33.630\nHow you doing?\n\n11\n00:00:33.630 --> 00:00:34.480\n>> Doing great, Daniel.\n\n12\n00:00:34.480 --> 00:00:35.690\nThanks for having me back,\n\n13\n00:00:35.690 --> 00:00:38.670\nready to jump right back in to\nthat world of Microsoft Azure SQL.\n\n14\n00:00:38.670 --> 00:00:42.110\nWe're gonna continue on with our security\nepisodes today and take a look at how we\n\n15\n00:00:42.110 --> 00:00:47.000\nmanage user accounts inside of Azure SQL\nand it's kinda an important thing.\n\n16\n00:00:47.000 --> 00:00:49.250\nYou're not just gonna have one\nperson who logs into the database,\n\n17\n00:00:49.250 --> 00:00:50.660\nyou'll likely have more and so\n\n18\n00:00:50.660 --> 00:00:55.200\nwe need to be able to control that access\nand gate who can get into the system.\n\n19\n00:00:55.200 --> 00:00:58.770\n>> So Don, when I think of user accounts\nobviously our mind goes straight to\n\n20\n00:00:58.770 --> 00:01:02.700\nthe almighty dictator of the system,\nthat is the administrator.\n\n21\n00:01:02.700 --> 00:01:05.300\nThey are obviously type\nof a user account so\n\n22\n00:01:05.300 --> 00:01:07.090\nI guess that's a good place for\nus to begin.\n\n23\n00:01:07.090 --> 00:01:10.140\n>> Yeah, absolutely, and\nthere's really two different sets of\n\n24\n00:01:10.140 --> 00:01:14.900\ncredentials that happen inside of Azure\nSQL, because when you create a database,\n\n25\n00:01:14.900 --> 00:01:18.890\none of the first things it asks you is\nto give it a username and a password.\n\n26\n00:01:18.890 --> 00:01:23.090\nAnd as a username and password in\nthe database itself, but In the background\n\n27\n00:01:23.090 --> 00:01:28.170\nwhat we don't see is that it's actually\ntaking your user account in Azure and\n\n28\n00:01:28.170 --> 00:01:31.330\nadding you as somebody who's\nallowed to manage that server.\n\n29\n00:01:31.330 --> 00:01:35.620\nNow that's important because you may have\nmany administrators on your account.\n\n30\n00:01:35.620 --> 00:01:37.210\nYou take my account, for example.\n\n31\n00:01:37.210 --> 00:01:38.090\nI'm an administrator, sure.\n\n32\n00:01:38.090 --> 00:01:41.340\nBut so is Daniel and so\nare the other show hosts here at ITProTV,\n\n33\n00:01:41.340 --> 00:01:44.070\nthat each one Is allowed\nto manage the account but\n\n34\n00:01:44.070 --> 00:01:48.950\nwhen I create a SQL Server,\nI'm the administrator not Daniel.\n\n35\n00:01:48.950 --> 00:01:49.920\nHe can't get at it.\n\n36\n00:01:49.920 --> 00:01:52.340\nRight or Mike or Ronnie or any of\nthe other hosts, they can't get at it.\n\n37\n00:01:52.340 --> 00:01:55.530\nI have to add them in if\nI want them to have it.\n\n38\n00:01:55.530 --> 00:01:59.090\nSo that needs to be one of the first steps\nwe do, anytime we spin up a new server is\n\n39\n00:01:59.090 --> 00:02:03.860\nto determine who should have access to the\nserver from an administrative standpoint?\n\n40\n00:02:03.860 --> 00:02:06.300\nThat dictator, right, the person\nwho's in charge of the whole thing.\n\n41\n00:02:06.300 --> 00:02:07.640\nSo let me show you how that works.\n\n42\n00:02:07.640 --> 00:02:09.810\nBasically, I'm gonna go\ninto my Azure portal, and\n\n43\n00:02:09.810 --> 00:02:12.220\nI'm gonna go down to SQL Servers.\n\n44\n00:02:12.220 --> 00:02:14.650\nAnd inside of my SQL Servers,\nI'll pick a server.\n\n45\n00:02:16.050 --> 00:02:17.410\nAnd from here,\n\n46\n00:02:17.410 --> 00:02:21.880\nover on the side here I'm gonna start\ngetting all my different settings pop up.\n\n47\n00:02:21.880 --> 00:02:27.230\nAnd way down here at the bottom,\nI've Resource Management and Users.\n\n48\n00:02:27.230 --> 00:02:31.130\nThere's really two things that\nmatter to me here, Users and Roles.\n\n49\n00:02:32.140 --> 00:02:36.280\nUsers are the people who are allowed\nto connect and manage this server.\n\n50\n00:02:36.280 --> 00:02:39.160\nI shouldn't say connect cuz you don't\nnecessarily have to have a user\n\n51\n00:02:39.160 --> 00:02:41.840\nhere to connect to\nthe databases themselves.\n\n52\n00:02:41.840 --> 00:02:45.110\nSo this is really to manage it, so these\nare users who are allowed to manage it.\n\n53\n00:02:45.110 --> 00:02:48.600\nAnd then roles are basically\nthe permissions they have.\n\n54\n00:02:48.600 --> 00:02:50.850\nWhen I say manage it, what can they do?\n\n55\n00:02:50.850 --> 00:02:53.740\nThere's different levels of\nmanagement that you might need.\n\n56\n00:02:53.740 --> 00:02:54.800\nAnd so we can specify them here.\n\n57\n00:02:54.800 --> 00:02:56.100\nThese two work hand in hand.\n\n58\n00:02:57.280 --> 00:03:00.872\nThe first thing I need to do is create\nUsers, and if I click on Users,\n\n59\n00:03:00.872 --> 00:03:02.461\nthat panel's gonna update.\n\n60\n00:03:02.461 --> 00:03:06.797\nAnd I'm gonna get a list of\nthe users on that database, and\n\n61\n00:03:06.797 --> 00:03:10.263\nthe only thing I see\nare Subscription admins.\n\n62\n00:03:10.263 --> 00:03:12.980\nNow who are the Subscription admins?\n\n63\n00:03:12.980 --> 00:03:14.110\nMe.\n\n64\n00:03:14.110 --> 00:03:15.450\nI'm the one who runs this account.\n\n65\n00:03:15.450 --> 00:03:17.290\nI'm the one who's the administrator for\nmy subscription,\n\n66\n00:03:17.290 --> 00:03:18.860\nin other words the person\nwho pays the money.\n\n67\n00:03:18.860 --> 00:03:20.170\nAnd so I'm on here.\n\n68\n00:03:20.170 --> 00:03:21.280\nI created this server.\n\n69\n00:03:21.280 --> 00:03:21.810\nI get access.\n\n70\n00:03:21.810 --> 00:03:22.770\nI control it.\n\n71\n00:03:22.770 --> 00:03:26.700\nI am the owner and that's Inherited\naccess from my Azure account.\n\n72\n00:03:26.700 --> 00:03:29.100\nBut now I can come in and\nI can add other people.\n\n73\n00:03:29.100 --> 00:03:29.990\nSo, for example, Daniel,\n\n74\n00:03:29.990 --> 00:03:34.130\nhe's an administrator on my Azure account,\nbut he's not the one paying the bill and\n\n75\n00:03:34.130 --> 00:03:37.960\nso he's not a Subscription admin,\nhe doesn't have access to the server.\n\n76\n00:03:37.960 --> 00:03:40.770\nIf I want him to have access,\nI need to come up here and hit Add, and\n\n77\n00:03:40.770 --> 00:03:43.300\nI can make him an administrator.\n\n78\n00:03:43.300 --> 00:03:46.130\nAnd so when I add that, oop,\nI get a little scroll crazy.\n\n79\n00:03:46.130 --> 00:03:48.740\nThe first thing it's gonna do\nis ask me to pick a role, and\n\n80\n00:03:48.740 --> 00:03:51.830\nthen it's gonna ask me to pick a user,\nokay.\n\n81\n00:03:51.830 --> 00:03:56.290\nSo here's that role coming in hand in hand\nwith the user, roles are useless without\n\n82\n00:03:56.290 --> 00:03:59.920\nusers in them, and users are useless\nwithout a role assigned to them.\n\n83\n00:03:59.920 --> 00:04:02.880\nAnd so I would need to pick what kind of\nrole I want Daniel to have and maybe,\n\n84\n00:04:02.880 --> 00:04:04.260\nI want him to be an owner.\n\n85\n00:04:04.260 --> 00:04:08.355\nI want him to have full control of this\nsequence since he's gonna help me and\n\n86\n00:04:08.355 --> 00:04:09.590\ndo this work.\n\n87\n00:04:09.590 --> 00:04:12.940\n>> Now Don, how are roles any\ndifferent from something like a group?\n\n88\n00:04:12.940 --> 00:04:14.500\n>> They really are groups.\n\n89\n00:04:14.500 --> 00:04:17.091\nMicrosoft just started moving away\nfrom that terminology of a group.\n\n90\n00:04:17.091 --> 00:04:18.834\nBecause the group, kind of,\n\n91\n00:04:18.834 --> 00:04:22.899\nit insinuates that the people are all\npart of the same organization.\n\n92\n00:04:22.899 --> 00:04:27.345\nAnd they aren't necessarily, and\na role is more like what your job role is.\n\n93\n00:04:27.345 --> 00:04:30.388\nSo, it's a little more of nebulous term,\nand so\n\n94\n00:04:30.388 --> 00:04:33.222\nMicrosoft has kind of\ntransitioned to that.\n\n95\n00:04:33.222 --> 00:04:35.910\nSo, it's really basically the same thing.\n\n96\n00:04:35.910 --> 00:04:39.560\nSo, when I go here under User,\nnotice what I'm seeing,\n\n97\n00:04:39.560 --> 00:04:43.260\na list of users attached to my account and\nI'll see Daniel right there.\n\n98\n00:04:43.260 --> 00:04:47.390\nNow, this have to be users already\nadded to my Azure account.\n\n99\n00:04:47.390 --> 00:04:50.552\nThis isn't part of Azure SQL,\nthis is part of Azure itself.\n\n100\n00:04:50.552 --> 00:04:54.234\nAnd so Daniel is an administrator here in\nmy account so I can choose him and Adam.\n\n101\n00:04:54.234 --> 00:04:57.840\nAnd I can choose other people, like if\nI want to list myself specifically.\n\n102\n00:04:57.840 --> 00:05:02.050\nMaybe one day I'm gonna take myself\nout of the subscription management,\n\n103\n00:05:02.050 --> 00:05:03.460\nI'll make somebody else pay for it.\n\n104\n00:05:03.460 --> 00:05:06.050\nThen I might want to add myself\nspecifically so I still have access.\n\n105\n00:05:07.060 --> 00:05:11.180\nSo we pick the users that we're gonna be\nadding and then I'll just hit Select.\n\n106\n00:05:11.180 --> 00:05:16.510\nAnd so now I've told it the role I want\nthe users to have and I picked some users.\n\n107\n00:05:16.510 --> 00:05:18.470\nAnd I'll go down here and I'll hit OK.\n\n108\n00:05:19.790 --> 00:05:23.420\nAnd once that's done,\nthis will update eventually.\n\n109\n00:05:23.420 --> 00:05:24.220\nThere we go.\n\n110\n00:05:24.220 --> 00:05:27.090\nAnd now I can see those two\nusers listed as an owner.\n\n111\n00:05:27.090 --> 00:05:30.740\nThese users now have access\nto manage this SQL Server.\n\n112\n00:05:30.740 --> 00:05:34.190\nAnd inherently through that,\nbecause they can manage the SQL Server,\n\n113\n00:05:34.190 --> 00:05:36.180\nthey can manage the databases\nthat are underneath it.\n\n114\n00:05:36.180 --> 00:05:37.950\nWhich is kind of an important thing.\n\n115\n00:05:37.950 --> 00:05:40.630\nNow, the users are one piece of that.\n\n116\n00:05:40.630 --> 00:05:42.950\nThe roles of the other and I chose owner.\n\n117\n00:05:42.950 --> 00:05:47.565\nOwner, that gives full and\ntotal control to every aspect of system.\n\n118\n00:05:47.565 --> 00:05:50.445\nBut there's plenty of other roles\nthat we need to familiar with.\n\n119\n00:05:50.445 --> 00:05:52.920\nNow we're gonna take a look\nat those other roles.\n\n120\n00:05:52.920 --> 00:05:55.730\nWe have a nice little shortcut here\nwe can jump to to get to the roles.\n\n121\n00:05:55.730 --> 00:05:57.900\nOr you can do it from the server itself.\n\n122\n00:05:57.900 --> 00:05:59.089\nIf I go back to the server,\n\n123\n00:06:00.380 --> 00:06:04.590\nwe actually had that option right over,\nwhy can't I zoom in on that?\n\n124\n00:06:04.590 --> 00:06:05.610\nMy zooms going crazy here.\n\n125\n00:06:05.610 --> 00:06:08.172\nBut we have that option right over here,\nwe can get to roles, and\n\n126\n00:06:08.172 --> 00:06:10.319\nwe can take a look at the roles\nthat are on that server.\n\n127\n00:06:10.319 --> 00:06:15.368\nSo, here's the roles that Microsoft\ncreates, and you can create custom roles.\n\n128\n00:06:15.368 --> 00:06:19.542\nBut really the ones that are here, it's\npretty much what everybody needs cuz most\n\n129\n00:06:19.542 --> 00:06:22.162\nof the time you're just\ngonna use Owner like I did.\n\n130\n00:06:22.162 --> 00:06:24.275\nSee Owner., it's got two users.\n\n131\n00:06:24.275 --> 00:06:27.073\nThese are people that have full and\ntotal control of the server.\n\n132\n00:06:27.073 --> 00:06:29.975\nBut sometimes,\nI wanna limit them a little bit.\n\n133\n00:06:29.975 --> 00:06:33.447\nAnd that's where all of these\nother ones start to come in.\n\n134\n00:06:33.447 --> 00:06:38.800\nWe've got Contributor, Reader, Database\nContributor, Security Manager and so on.\n\n135\n00:06:38.800 --> 00:06:42.650\nIf we kinda run down the list,\nyou get this eye you can float over and\n\n136\n00:06:42.650 --> 00:06:43.740\nit will tell you a little about it.\n\n137\n00:06:43.740 --> 00:06:48.330\nSee how this one says you can manage\neverything except access to resources.\n\n138\n00:06:48.330 --> 00:06:52.150\nSo in other words if I had given Daniel\nContributor, he can create databases and\n\n139\n00:06:52.150 --> 00:06:53.580\ndelete databases.\n\n140\n00:06:53.580 --> 00:06:55.940\nBut he couldn't give somebody else access.\n\n141\n00:06:55.940 --> 00:06:58.410\nHe couldn't make somebody else an owner,\nfor example, or\n\n142\n00:06:58.410 --> 00:07:00.110\ngive them to be able to\nelevate his own privileges.\n\n143\n00:07:01.240 --> 00:07:04.560\nReader, this one's really useful for\nHelp Desk.\n\n144\n00:07:04.560 --> 00:07:07.650\nYou might want the Help Desk to be able\nto come in and view the configuration,\n\n145\n00:07:07.650 --> 00:07:11.760\nview the server health, be able to see\nthings, but not actually change them, and\n\n146\n00:07:11.760 --> 00:07:12.479\nthat's what Reader does.\n\n147\n00:07:13.590 --> 00:07:15.190\nSQL DB Contributor,\n\n148\n00:07:15.190 --> 00:07:20.240\nhere's somebody who can work with\ncreating and deleting databases.\n\n149\n00:07:20.240 --> 00:07:23.110\nBut they can't actually access\nthe databases, right, and\n\n150\n00:07:23.110 --> 00:07:25.030\nthey can't manage the server above it.\n\n151\n00:07:25.030 --> 00:07:27.050\nSo this is just somebody\nwho's gonna be creating or\n\n152\n00:07:27.050 --> 00:07:28.529\nmanaging the actual databases that exist.\n\n153\n00:07:29.590 --> 00:07:30.680\nSecurity Manager.\n\n154\n00:07:30.680 --> 00:07:33.540\nThat's somebody who can\ncontrol the security policies.\n\n155\n00:07:33.540 --> 00:07:35.960\nThey can set who has access to what.\n\n156\n00:07:35.960 --> 00:07:38.560\nBut notice that even they,\nit's kinda hard to see, but\n\n157\n00:07:38.560 --> 00:07:41.960\nwhere it says, but not access to.\n\n158\n00:07:41.960 --> 00:07:45.150\nSo they can grant somebody\naccess to a database, but\n\n159\n00:07:45.150 --> 00:07:47.750\nthey can't access the database themselves.\n\n160\n00:07:47.750 --> 00:07:51.200\nA user might need to be in more\nthan one role in order to achieve\n\n161\n00:07:51.200 --> 00:07:52.820\na perfect permission set.\n\n162\n00:07:52.820 --> 00:07:55.055\nBut normally if we want some one\nto be able to grant access and\n\n163\n00:07:55.055 --> 00:07:57.396\nhave access themselves,\nthen they might as well be an owner.\n\n164\n00:07:57.396 --> 00:07:59.278\nAt that point,\nthey've really got the full access.\n\n165\n00:07:59.278 --> 00:08:02.307\nSo you usually just put\nsomeone in one role.\n\n166\n00:08:02.307 --> 00:08:04.791\nWe've got server contributor, right?\n\n167\n00:08:04.791 --> 00:08:08.143\nHere, they can manage the server\nitself and the databases, but\n\n168\n00:08:08.143 --> 00:08:11.040\nthey can't manage security\nrelated policies.\n\n169\n00:08:11.040 --> 00:08:13.250\nAnd lastly, User Access Administrator.\n\n170\n00:08:13.250 --> 00:08:17.270\nUser Access Administrator is very\nsimilar to Security Manager,\n\n171\n00:08:17.270 --> 00:08:19.820\nexcept with Security Manager it's\nthe security related policies\n\n172\n00:08:19.820 --> 00:08:22.320\naround SQL including things\nlike password policies.\n\n173\n00:08:22.320 --> 00:08:26.310\nVersus User Access is really just\nassigning users ability to access and\n\n174\n00:08:26.310 --> 00:08:28.950\nnot necessarily being able to\nmodify the policies that are built\n\n175\n00:08:28.950 --> 00:08:30.050\naround their server.\n\n176\n00:08:30.050 --> 00:08:32.400\nSo a lot of these seem\nto overlap a good bit,\n\n177\n00:08:32.400 --> 00:08:36.710\nand you'll find that really you\nkind of exist in this top three.\n\n178\n00:08:36.710 --> 00:08:39.340\nThe rest of these you use less,\nbut in a larger environment,\n\n179\n00:08:39.340 --> 00:08:41.720\nwhere you have a very big\nseparation of roles or\n\n180\n00:08:41.720 --> 00:08:44.530\nseparation of duties, you'll start\nto make use of each of these to\n\n181\n00:08:44.530 --> 00:08:48.590\nreally be granular about what management\ncontrol you're giving out for this.\n\n182\n00:08:48.590 --> 00:08:49.390\n>> That's awesome.\n\n183\n00:08:49.390 --> 00:08:54.420\nNow, Don, we've been talking a lot about\ngeneral administration type services.\n\n184\n00:08:54.420 --> 00:08:57.482\nThe administrative users and\nthe administrative roles.\n\n185\n00:08:57.482 --> 00:09:01.016\nBut that's not the only type of people\nthat are gonna be accessing a database.\n\n186\n00:09:01.016 --> 00:09:04.552\nWe've got good old-fashioned\ndatabase users, maybe a DBA or\n\n187\n00:09:04.552 --> 00:09:08.421\nsomething of that nature,\nwho just needs some sort of permissions as\n\n188\n00:09:08.421 --> 00:09:11.170\nwell though because they\nare also a type of user.\n\n189\n00:09:11.170 --> 00:09:11.948\n>> Yeah, absolutely.\n\n190\n00:09:11.948 --> 00:09:15.023\nNow, the permissions that I just\nshowed you, right, those roles,\n\n191\n00:09:15.023 --> 00:09:17.795\nthat's at the server level,\nthat's really a part of Azure.\n\n192\n00:09:17.795 --> 00:09:20.392\nAnd we normally come in here and\nwe set up our users one time, and\n\n193\n00:09:20.392 --> 00:09:23.687\nwe never come back to this again, unless\nyou hire a new administrator, right?\n\n194\n00:09:23.687 --> 00:09:27.669\nBut your DBAs, your applications that\nneed the access to the database,\n\n195\n00:09:27.669 --> 00:09:31.860\nthat stuff changes all the time, and\nthat's not done here through the GUI.\n\n196\n00:09:31.860 --> 00:09:34.110\nThat's actually done through\nthe SQL management studio.\n\n197\n00:09:34.110 --> 00:09:37.800\nSo I have to jump over to the management\nstudio and set up my access here.\n\n198\n00:09:38.830 --> 00:09:43.640\nNow, setting up user accounts, to access\na database, is kind of a little bit weird.\n\n199\n00:09:43.640 --> 00:09:46.200\nIt's nice that we do it here as\nopposed to through the portal,\n\n200\n00:09:46.200 --> 00:09:49.290\nbecause I don't want to give\nthem access to my Azure account.\n\n201\n00:09:49.290 --> 00:09:51.760\nI just wanna give them\naccess to a database, right.\n\n202\n00:09:51.760 --> 00:09:52.890\nSo now I can do that.\n\n203\n00:09:52.890 --> 00:09:55.240\nI can just do it right here\nfrom management studio.\n\n204\n00:09:55.240 --> 00:10:02.480\nBut the problem is, the way SQL works\nis kind of not suited great for Azure.\n\n205\n00:10:02.480 --> 00:10:06.040\nAnd so, Microsoft had to tweak it a bit\nto make it work better for Azure.\n\n206\n00:10:06.040 --> 00:10:10.360\nIn a regular on-premises SQL server,\nif I want to create a user account,\n\n207\n00:10:10.360 --> 00:10:14.180\nthe first thing I need to do is I need to\ncreate what's called a database login.\n\n208\n00:10:14.180 --> 00:10:17.550\nRight, a login for the server itself.\n\n209\n00:10:17.550 --> 00:10:21.691\nAnd so, what you would normally do is\neither go down to the Security folder here\n\n210\n00:10:21.691 --> 00:10:26.210\nor you would go into the master database,\nand in the master database under security,\n\n211\n00:10:26.210 --> 00:10:29.259\nyou could come in here and\nyou could create user account.\n\n212\n00:10:29.259 --> 00:10:32.676\nYou'd be creating what's\ncalled a login for the server.\n\n213\n00:10:32.676 --> 00:10:36.940\nAnd then, you would go into the individual\n\n214\n00:10:36.940 --> 00:10:42.770\ndatabase that you wanted and\ngo into its security.\n\n215\n00:10:42.770 --> 00:10:46.240\nAnd inside of its security\nyou would create a user, and\n\n216\n00:10:46.240 --> 00:10:48.610\nthat would be a user account\non the database itself.\n\n217\n00:10:48.610 --> 00:10:53.458\nAnd that user account would be mapped\nto the login at the server level.\n\n218\n00:10:53.458 --> 00:10:56.610\nSo you had a login at the server level and\na user at the database level,\n\n219\n00:10:56.610 --> 00:10:58.870\nand they were linked together, right.\n\n220\n00:10:58.870 --> 00:11:01.870\nThat's the traditional way of\ncreating accounts inside of SQL.\n\n221\n00:11:01.870 --> 00:11:03.090\nYou can do that right here.\n\n222\n00:11:03.090 --> 00:11:04.541\nSo if that's the model you're used to,\n\n223\n00:11:04.541 --> 00:11:06.773\nyou can continue to do it just\nlike you did before, all right.\n\n224\n00:11:06.773 --> 00:11:08.758\nBut here's the problem.\n\n225\n00:11:08.758 --> 00:11:10.222\nIn SQL or in Azure SQL,\n\n226\n00:11:10.222 --> 00:11:15.260\nthere might be a time where I need\nto move my database to a new server.\n\n227\n00:11:15.260 --> 00:11:17.660\nI might do a backup and\nrestore it to a new server, and\n\n228\n00:11:17.660 --> 00:11:20.520\nwhen that happens,\nmy server logins don't follow me.\n\n229\n00:11:21.800 --> 00:11:24.740\nSo now I might restore this\ndatabase to a new server, and\n\n230\n00:11:24.740 --> 00:11:29.030\nthe user accounts are there,\nbut the matching login is not.\n\n231\n00:11:29.030 --> 00:11:32.130\nAnd if they're not there, the account\ndoesn't work, you can't log in.\n\n232\n00:11:32.130 --> 00:11:34.990\nSo now every time I restore this database,\nit's basically broken, and\n\n233\n00:11:34.990 --> 00:11:37.540\nI have to go in and\nrecreate those user logins.\n\n234\n00:11:37.540 --> 00:11:41.970\nSo Microsoft introduced a new feature\nwith what's called a contained user.\n\n235\n00:11:41.970 --> 00:11:47.210\nA contained user is where the entire\nuser is stored right in the database,\n\n236\n00:11:47.210 --> 00:11:48.910\nnot stored on the server at all.\n\n237\n00:11:48.910 --> 00:11:52.340\nAnd that way, if I ever restore the\ndatabase somewhere else, the user follows\n\n238\n00:11:52.340 --> 00:11:55.250\nthe database along and actually works\nwhen you get to the other side, right?\n\n239\n00:11:55.250 --> 00:11:59.150\nNow, there's a little bit of risk involved\nwith that because now the password hashing\n\n240\n00:11:59.150 --> 00:12:02.770\nand security is done in the database,\nas opposed to being done on the server.\n\n241\n00:12:02.770 --> 00:12:04.210\nSo we need to be aware of that.\n\n242\n00:12:04.210 --> 00:12:07.360\nBut if you've got your access controls\nin place, that's not that big of a deal.\n\n243\n00:12:07.360 --> 00:12:10.870\nAnd this gives you the portability that\nyou need to let your server be able to\n\n244\n00:12:10.870 --> 00:12:14.060\nmove, or let your database move from\nserver to server and still be intact.\n\n245\n00:12:14.060 --> 00:12:17.790\nSo there's really two different ways to\ncreate user accounts on the database.\n\n246\n00:12:17.790 --> 00:12:21.140\nThe old way and the new way, and\nthey both work inside of Azure and so\n\n247\n00:12:21.140 --> 00:12:22.940\nyou need to be familiar with both.\n\n248\n00:12:22.940 --> 00:12:26.060\nOnce they're done, the way you assign\npermissions to stuff is really the same,\n\n249\n00:12:26.060 --> 00:12:27.470\nso it doesn't make a difference there.\n\n250\n00:12:27.470 --> 00:12:29.070\nIt's just how we set it\nup in the beginning.\n\n251\n00:12:29.070 --> 00:12:32.830\n>> Don, do you have a preference for\none way over the other?\n\n252\n00:12:32.830 --> 00:12:38.680\n>> If it's a deployment that's being done\nbrand new in Azure, I do contained users.\n\n253\n00:12:38.680 --> 00:12:43.790\nBut if I'm moving an application over\nfrom some existing on-prem type solution,\n\n254\n00:12:43.790 --> 00:12:46.440\nI'll usually still do it the old way\njust to make sure that it's fully\n\n255\n00:12:46.440 --> 00:12:47.900\ncompatible with everything\nthat we've done.\n\n256\n00:12:47.900 --> 00:12:50.640\nSo it kinda just depends on\nwhether we're doing something new.\n\n257\n00:12:50.640 --> 00:12:52.870\nI'll probably say something\ndifferent two years from now.\n\n258\n00:12:52.870 --> 00:12:55.290\nTwo years from now I'll say, oh,\nyeah, I always use contained users.\n\n259\n00:12:55.290 --> 00:12:57.810\nBut for right now,\nthis is all still fairly new, and so\n\n260\n00:12:57.810 --> 00:12:58.970\nit's kind of a transition period.\n\n261\n00:12:58.970 --> 00:13:02.720\nI find that it just depends on the age\nof the project whether I do it the old\n\n262\n00:13:02.720 --> 00:13:03.450\nway or the new way.\n\n263\n00:13:03.450 --> 00:13:04.020\n>> Awesome.\n\n264\n00:13:04.020 --> 00:13:05.170\nWell, enough talk about that.\n\n265\n00:13:05.170 --> 00:13:06.375\nLet's make some users.\n\n266\n00:13:06.375 --> 00:13:07.440\n[LAUGH]\n>> Okay.\n\n267\n00:13:07.440 --> 00:13:10.770\nSo where this gets a little bit difficult,\nor a little bit annoying I guess is\n\n268\n00:13:10.770 --> 00:13:13.620\nthe better way to put it, is if you've\nbeen working with SQL for a long time,\n\n269\n00:13:13.620 --> 00:13:15.660\nyou know it's actually really\neasy to do this stuff.\n\n270\n00:13:15.660 --> 00:13:19.120\nThat, if you want to create a user account\nor whatever, you'd normally just navigate\n\n271\n00:13:19.120 --> 00:13:23.570\ninto your management studio and you'd\nright-click on Users and you'd choose\n\n272\n00:13:23.570 --> 00:13:28.400\nNew User, and it looks like that GUI is\ngonna happen, but when I click on it,\n\n273\n00:13:28.400 --> 00:13:32.090\nyou'll see that it just brings up a sample\nquery for me to plug my data in, right?\n\n274\n00:13:32.090 --> 00:13:36.300\nThe graphical user interface for creating\nuser accounts is not present in Azure SQL,\n\n275\n00:13:36.300 --> 00:13:39.640\nso you have to do everything\nthrough Transact SQL, right?\n\n276\n00:13:39.640 --> 00:13:43.420\nSo, it's a little bit annoying, but\nthat's kinda the way that it is.\n\n277\n00:13:43.420 --> 00:13:44.630\nLet's start it the old way.\n\n278\n00:13:44.630 --> 00:13:46.380\nSo, if I wanna create\na user account the old way,\n\n279\n00:13:46.380 --> 00:13:49.270\nthe first thing I need to do is\ncreate a login at the server level.\n\n280\n00:13:49.270 --> 00:13:51.190\nIn other words, in the master database.\n\n281\n00:13:51.190 --> 00:13:55.080\nAnd then I need to create a user at the\ndatabase level and link the two together.\n\n282\n00:13:55.080 --> 00:13:58.230\nSo, I wanna show you that way because\nthis is the way that it's gonna work\n\n283\n00:13:58.230 --> 00:14:01.260\nbackwards compatible with everything\nthat we've done in On-Premises.\n\n284\n00:14:01.260 --> 00:14:04.070\nAnd then I'll show you a contained\nuser after that, right.\n\n285\n00:14:04.070 --> 00:14:07.090\nSo, first off, I've got a query\nwindow open to sample db1,\n\n286\n00:14:07.090 --> 00:14:09.415\nright, that's the databases I\nwant to give permissions to.\n\n287\n00:14:09.415 --> 00:14:13.130\nActually, let me do sample db2,\nthat's my database.\n\n288\n00:14:13.130 --> 00:14:15.900\nSample db1 is just one I created\noff of Microsoft's junk.\n\n289\n00:14:15.900 --> 00:14:17.073\nSo, I mean technology.\n\n290\n00:14:17.073 --> 00:14:20.350\n>> [LAUGH]\n>> Just stuff, yeah, whatever, something.\n\n291\n00:14:20.350 --> 00:14:23.390\nSo here we go,\nI've got a connection that is sample db2.\n\n292\n00:14:23.390 --> 00:14:26.400\nAnd I'm also gonna create\nanother query window\n\n293\n00:14:26.400 --> 00:14:30.110\nthat is tied to the master database,\nright, cuz I'm gonna need both.\n\n294\n00:14:30.110 --> 00:14:33.920\nAnd I'm gonna start here on the master\ndatabase to create the login.\n\n295\n00:14:33.920 --> 00:14:39.946\nAnd so, the command that I'm\ngonna issue is CREATE LOGIN.\n\n296\n00:14:39.946 --> 00:14:44.180\nSo notice I'm creating a login,\nnot a user, right?\n\n297\n00:14:44.180 --> 00:14:45.460\nThat's the difference here.\n\n298\n00:14:45.460 --> 00:14:47.080\nSo I'm gonna create a login and\nI'll give it a name.\n\n299\n00:14:47.080 --> 00:14:49.770\nSo maybe I'll create one for Daniel.\n\n300\n00:14:49.770 --> 00:14:57.030\nSo I'll do a login for dlowrie and\nthen I'll say WITH password=.\n\n301\n00:14:57.030 --> 00:14:59.590\nAnd now I need to specify a password for\nhim.\n\n302\n00:14:59.590 --> 00:15:03.770\nAnd it does need to meet the complexity\nrequirements set by Microsoft.\n\n303\n00:15:03.770 --> 00:15:06.280\nSo I need to have a capital letter,\na lowercase letter,\n\n304\n00:15:06.280 --> 00:15:08.280\na special character, and a number.\n\n305\n00:15:08.280 --> 00:15:12.190\nSo maybe I'll do @Password123.\n\n306\n00:15:12.190 --> 00:15:16.150\nIt's a super-secure password,\nnow you guys know Dan's password.\n\n307\n00:15:16.150 --> 00:15:17.820\n>> [LAUGH] That's my actual password, Don.\n\n308\n00:15:17.820 --> 00:15:18.950\nThat's amazing.\n\n309\n00:15:18.950 --> 00:15:21.126\n>> And so, I'll just go ahead and\ntake that and run it.\n\n310\n00:15:21.126 --> 00:15:23.170\nAnd that's gonna create the user account,\nand\n\n311\n00:15:23.170 --> 00:15:25.460\nI can verify that it created\na few different ways.\n\n312\n00:15:25.460 --> 00:15:33.830\nBut one of the easiest ways is to just do\na SELECT * FROM sys.sql_logins; like that.\n\n313\n00:15:33.830 --> 00:15:35.955\nAnd I'll just run that.\n\n314\n00:15:35.955 --> 00:15:37.650\nAnd there's the dpezet account.\n\n315\n00:15:37.650 --> 00:15:40.039\nThe dpezet account was created\nwhen I created the server, right?\n\n316\n00:15:40.039 --> 00:15:43.407\nIt asked me to specify a username and\na password to be an administrator.\n\n317\n00:15:43.407 --> 00:15:44.857\nSo it made that one for me, and\n\n318\n00:15:44.857 --> 00:15:48.990\nthen now I've got dlowerie is the one that\nI just added, so he's got an account too.\n\n319\n00:15:48.990 --> 00:15:51.480\nHe's got a nice little sid there\nthat's easy to remember and\n\n320\n00:15:51.480 --> 00:15:52.880\nthe other information tied to his account.\n\n321\n00:15:54.110 --> 00:15:55.153\nSo now I've gotta log in.\n\n322\n00:15:55.153 --> 00:15:56.503\nWhat good is the login?\n\n323\n00:15:56.503 --> 00:15:58.708\nIt's not any good at all, right?\n\n324\n00:15:58.708 --> 00:16:01.216\nIt's basically tying\na password to a username.\n\n325\n00:16:01.216 --> 00:16:03.700\nBut he has no access,\nhe has no privileges.\n\n326\n00:16:03.700 --> 00:16:05.256\nHe's not connected to any database.\n\n327\n00:16:05.256 --> 00:16:06.260\nThat's just the first step.\n\n328\n00:16:07.560 --> 00:16:11.250\nThe second step is to go to each database\nI want to give him access to, so\n\n329\n00:16:11.250 --> 00:16:13.330\nI'll go here to sample DB two and\n\n330\n00:16:13.330 --> 00:16:17.400\nnow I need to give him access by creating\na user account in this database.\n\n331\n00:16:17.400 --> 00:16:22.960\nSo what I'm gonna do is\nI'm gonna say CREATE USER.\n\n332\n00:16:22.960 --> 00:16:25.410\nNot create login but\ncreate user this time.\n\n333\n00:16:25.410 --> 00:16:26.540\nI need to give it a name.\n\n334\n00:16:26.540 --> 00:16:28.720\nThis name can actually be\ndifferent if I want it to be.\n\n335\n00:16:28.720 --> 00:16:31.860\nThe names don't have to match but\nI usually keep them the same otherwise you\n\n336\n00:16:31.860 --> 00:16:33.860\ngo crazy from\nan administrative standpoint.\n\n337\n00:16:33.860 --> 00:16:42.580\nSo I will create a user called dlowrie,\nwe will say FROM LOGIN dlowrie, right?\n\n338\n00:16:42.580 --> 00:16:45.350\nCuz the login name is dlowrie,\nhis username is gonna be the same.\n\n339\n00:16:45.350 --> 00:16:47.190\nIf they didn't match,\nI would just put it there.\n\n340\n00:16:47.190 --> 00:16:50.110\nBut, I'm basically saying,\ncreate a user in this database\n\n341\n00:16:50.110 --> 00:16:54.500\nthat is mapped to that login, and\nI'm not specifying a password,\n\n342\n00:16:54.500 --> 00:16:59.490\nbecause the password is actually tied to\nthe login, not to the individual user.\n\n343\n00:16:59.490 --> 00:17:02.890\nAnd, so now I can create that,\nand there we go.\n\n344\n00:17:02.890 --> 00:17:07.010\nAnd now he's got a user account\nhere in this database and\n\n345\n00:17:07.010 --> 00:17:09.810\nI can start to give him permissions and\naccess here on the database.\n\n346\n00:17:09.810 --> 00:17:13.690\nI didn't create a user for him in\nSampleDB1 so he doesn't have access there,\n\n347\n00:17:13.690 --> 00:17:17.230\nbut I did create one for him in\nSampleDB2 and so he will have it here.\n\n348\n00:17:17.230 --> 00:17:22.930\nAnd if I go over here into SampleDB2 and\ninto security,\n\n349\n00:17:22.930 --> 00:17:27.390\nand into users,\nI can see right here dlowrie.\n\n350\n00:17:27.390 --> 00:17:28.410\nHe's got an account, and\n\n351\n00:17:28.410 --> 00:17:30.360\nnow I can start to give him\npermissions inside of the database.\n\n352\n00:17:31.450 --> 00:17:34.640\nThat's the old way of\ncreating a user account,\n\n353\n00:17:34.640 --> 00:17:38.220\nbecause it's basically spread\nbetween the server and the database.\n\n354\n00:17:38.220 --> 00:17:40.322\nLet's talk about the contained user.\n\n355\n00:17:40.322 --> 00:17:43.260\nCuz that's we really need to move to if we\nreally want to have that portability of\n\n356\n00:17:43.260 --> 00:17:44.560\nour database, right?\n\n357\n00:17:44.560 --> 00:17:47.470\nAnd creating a contained user\nis a little bit different\n\n358\n00:17:47.470 --> 00:17:50.480\nbecause now we don't create\na login at the server level,\n\n359\n00:17:50.480 --> 00:17:53.650\nwe just create the user\nentirely within the database.\n\n360\n00:17:53.650 --> 00:17:56.180\nAnd on a positive side,\nwe get portability.\n\n361\n00:17:56.180 --> 00:17:59.216\nOn a negative side, if I have five\ndatabases, the user account now has their\n\n362\n00:17:59.216 --> 00:18:02.633\npassword set in five different places,\nright, because it's completely contained\n\n363\n00:18:02.633 --> 00:18:05.310\nin the database and you don't get\nsynchronization between them.\n\n364\n00:18:05.310 --> 00:18:07.186\nIt's really like five separate accounts.\n\n365\n00:18:07.186 --> 00:18:11.534\nSo we lose a little bit of ease of use,\nright?\n\n366\n00:18:11.534 --> 00:18:14.597\nBut honestly, once you get this created\nand you put in place, you don't worry so\n\n367\n00:18:14.597 --> 00:18:16.505\nmuch anymore, so\nit's not that of a big of a deal.\n\n368\n00:18:16.505 --> 00:18:18.361\nBut let me show you how\nthis process works.\n\n369\n00:18:18.361 --> 00:18:21.069\nInstead of going to the master database,\nlike I did before,\n\n370\n00:18:21.069 --> 00:18:23.841\nI'm gonna go straight to\nthe database that I'm targerting.\n\n371\n00:18:23.841 --> 00:18:25.906\nSo, I'm connected to the sample DB2,\n\n372\n00:18:25.906 --> 00:18:29.500\nand you can see the command where\nI created for Daniel's account.\n\n373\n00:18:29.500 --> 00:18:32.110\nI'm gonna create one for Ronnie,\none of other show hosts here.\n\n374\n00:18:32.110 --> 00:18:34.730\nSo, I wanna create a user for him.\n\n375\n00:18:34.730 --> 00:18:39.750\nSo, I'll say create user rwrong from and,\n\n376\n00:18:39.750 --> 00:18:43.970\ninstead of saying from login,\nI'm gonna leave that part off, right?\n\n377\n00:18:43.970 --> 00:18:47.210\nFrom login, that's how I connect\nto a login on the server.\n\n378\n00:18:47.210 --> 00:18:50.610\nInstead, I'm just gonna say with password.\n\n379\n00:18:50.610 --> 00:18:52.462\nAnd then I'm going to set what\nI want his password to be.\n\n380\n00:18:52.462 --> 00:18:58.226\nAnd by doing a with password, that's\nwhat's telling it that I want to create\n\n381\n00:18:58.226 --> 00:19:04.880\none that's contained right here in this\ndatabase, and so that I can use it, right?\n\n382\n00:19:04.880 --> 00:19:09.340\nSo if I just execute that,\nthat's gonna create his user account,\n\n383\n00:19:09.340 --> 00:19:11.000\nI get command completed successfully.\n\n384\n00:19:11.000 --> 00:19:15.410\nIt is not tied to a login but\nit's functional,\n\n385\n00:19:15.410 --> 00:19:18.690\nit's got a password, it just happens\nto be entirely within this database.\n\n386\n00:19:18.690 --> 00:19:20.586\nAnd if I refresh my users over here,\n\n387\n00:19:20.586 --> 00:19:25.090\nI can see that I've got Daniel Lowrie\nright here, and Ronny Wong right here.\n\n388\n00:19:25.090 --> 00:19:27.140\nNow, once they're created,\n\n389\n00:19:27.140 --> 00:19:30.310\nthere's not really a great\nfunctional difference between these.\n\n390\n00:19:30.310 --> 00:19:33.120\nThe big difference is if I restore\nthis database to a different server,\n\n391\n00:19:33.120 --> 00:19:36.860\nDaniel's account is now broken, but\nRonnie's will continue to work.\n\n392\n00:19:36.860 --> 00:19:42.040\nThe other difference is,\nif I'm using a server level log in,\n\n393\n00:19:42.040 --> 00:19:45.580\nlike with Daniel's, if he has\nconnectivity to five different databases,\n\n394\n00:19:45.580 --> 00:19:48.510\nhe has the same user name and\npassword across those five databases.\n\n395\n00:19:48.510 --> 00:19:51.690\nAnd if he changes his password, it's\nchanged for all five at the same time.\n\n396\n00:19:51.690 --> 00:19:55.890\nVersus Ronnie, his user account's\nentirely in this one database.\n\n397\n00:19:55.890 --> 00:19:56.900\nIf I add another database,\n\n398\n00:19:56.900 --> 00:19:59.150\nI have to create another Ronnie\naccount in that database.\n\n399\n00:19:59.150 --> 00:20:02.520\nIt could have a different password,\nor you change the password on one,\n\n400\n00:20:02.520 --> 00:20:03.680\nit doesn't change on the other.\n\n401\n00:20:03.680 --> 00:20:05.990\nSo you get a little bit\nmore administrative burden.\n\n402\n00:20:05.990 --> 00:20:08.170\nBut you get portability,\nand it's usually worth it.\n\n403\n00:20:08.170 --> 00:20:10.980\nSo Microsoft encourages you to do,\ncontained user accounts.\n\n404\n00:20:10.980 --> 00:20:13.900\nIt's kinda like the database\nfirewall rules we talked about\n\n405\n00:20:13.900 --> 00:20:15.150\nin the other episode.\n\n406\n00:20:15.150 --> 00:20:17.100\nYou can do server level firewall rules,\nbut\n\n407\n00:20:17.100 --> 00:20:19.960\nif you want portability,\nyou do database firewall rules.\n\n408\n00:20:19.960 --> 00:20:20.960\nAnd same thing here,\n\n409\n00:20:20.960 --> 00:20:23.700\nif you want portability you\ndo contained user accounts.\n\n410\n00:20:23.700 --> 00:20:27.070\nAnd so a lot of times you'll need\nto do that with your database.\n\n411\n00:20:27.070 --> 00:20:31.080\n>> Well done, now that we have a couple of\nactual users in this database, now it's\n\n412\n00:20:31.080 --> 00:20:34.970\ntime to start setting permissions and that\nis done via the roles, is that correct?\n\n413\n00:20:34.970 --> 00:20:39.080\n>> Correct, yeah, so when we look\nat our SQL Management Studio here,\n\n414\n00:20:39.080 --> 00:20:41.610\njust a little folder down are the Roles,\nand\n\n415\n00:20:41.610 --> 00:20:44.240\nI can start to look at\nthe database roles that are here.\n\n416\n00:20:44.240 --> 00:20:48.090\nNow there are server level roles and you\ngenerally don't want to use those, right?\n\n417\n00:20:48.090 --> 00:20:51.740\nAnd again it goes back to portability,\nbut also users don't get the level\n\n418\n00:20:51.740 --> 00:20:54.640\nadministration on the server roles,\nthat's really for on premises stuff.\n\n419\n00:20:54.640 --> 00:20:59.500\nSo with Azure you've got the roles of\nthe server level we saw on the GUI\n\n420\n00:20:59.500 --> 00:21:00.940\nin the web based portal, right?\n\n421\n00:21:00.940 --> 00:21:02.120\nThat's what you want to use.\n\n422\n00:21:02.120 --> 00:21:04.790\nAnd then we've got\ndatabase roles right here.\n\n423\n00:21:04.790 --> 00:21:06.220\nAnd these are the database roles,\n\n424\n00:21:06.220 --> 00:21:09.520\nyou can create custom roles that grant\nall sorts of permissions if you want.\n\n425\n00:21:09.520 --> 00:21:11.500\nThese are just the default ones.\n\n426\n00:21:11.500 --> 00:21:15.270\nAnd looking at these roles you'll\nsee db_accessadmin and so on.\n\n427\n00:21:15.270 --> 00:21:17.425\nEach one has a different purpose,\n\n428\n00:21:17.425 --> 00:21:20.660\nand these were all created back\nin the on premises days, so\n\n429\n00:21:20.660 --> 00:21:23.532\nsome of them aren't really relevant\nanymore, like db_backupoperator.\n\n430\n00:21:23.532 --> 00:21:26.490\ndb_backupoperator is allowed\nto back up the database, and\n\n431\n00:21:26.490 --> 00:21:28.630\nthey're also allowed to restore it.\n\n432\n00:21:28.630 --> 00:21:32.660\nWell the problem is, in Azure, you can't\ndo the traditional backup because you have\n\n433\n00:21:32.660 --> 00:21:35.200\nto specify file name and\nAzure doesn't support that, right?\n\n434\n00:21:35.200 --> 00:21:37.160\nYou use the backup\nthrough the Azure portal.\n\n435\n00:21:37.160 --> 00:21:41.008\nSo this role really doesn't serve much\npurpose any more unless you just want to\n\n436\n00:21:41.008 --> 00:21:43.632\ngive somebody read access\nto the whole database, but\n\n437\n00:21:43.632 --> 00:21:45.347\nyou can do that with other things.\n\n438\n00:21:45.347 --> 00:21:49.740\ndb_datareader, db_datawriter,\nthose are pretty important, right?\n\n439\n00:21:49.740 --> 00:21:52.430\nThese will let you read data from\nthe database and write data.\n\n440\n00:21:52.430 --> 00:21:54.110\nSo if you want somebody to\nbe able to make changes, or\n\n441\n00:21:54.110 --> 00:21:57.330\njust have a read only view,\nyou can use those too, all right?\n\n442\n00:21:57.330 --> 00:21:59.460\nSome of the other ones,\nyou've got access admin.\n\n443\n00:21:59.460 --> 00:22:01.950\nThis is a person who can create user\naccounts in the database, right?\n\n444\n00:22:01.950 --> 00:22:04.770\nAnd reset passwords and\nmanage permissions.\n\n445\n00:22:04.770 --> 00:22:07.660\nYou've got DDL,\nthe data definition language admin.\n\n446\n00:22:07.660 --> 00:22:09.970\nThis is the person who\ncreates stored procedures,\n\n447\n00:22:09.970 --> 00:22:13.540\nright, miniature programs\nthat run from the server.\n\n448\n00:22:13.540 --> 00:22:16.680\nYou've got denydatareader and\ndenydatawriter.\n\n449\n00:22:16.680 --> 00:22:19.410\nYou absolutely don't want\nsomebody to be able to read, or\n\n450\n00:22:19.410 --> 00:22:22.570\nyou absolutely don't want them to be able\nto write, cuz somebody could be in more\n\n451\n00:22:22.570 --> 00:22:26.400\nthan one role, and so they might be\ngetting write permission accidentally.\n\n452\n00:22:26.400 --> 00:22:27.920\nSo, you can throw them in deny, and\n\n453\n00:22:27.920 --> 00:22:29.914\nnow they won't get it,\nno matter what their other roles are.\n\n454\n00:22:29.914 --> 00:22:32.900\ndb_owner, that's what\nwe'll be in by default.\n\n455\n00:22:32.900 --> 00:22:33.780\nSo as the administrator,\n\n456\n00:22:33.780 --> 00:22:36.568\nyou and db_owner that gives you\nthat full control of the database.\n\n457\n00:22:36.568 --> 00:22:40.190\nAnd then db_securityadmin,\nthat gives you permissions controls.\n\n458\n00:22:40.190 --> 00:22:42.530\nSo you can go in and change those as\nwell as those security credentials.\n\n459\n00:22:42.530 --> 00:22:44.470\nAnd then you got public,\n\n460\n00:22:44.470 --> 00:22:48.150\nthese are the permissions that\napply to everybody else, right?\n\n461\n00:22:48.150 --> 00:22:50.130\nIf somebody comes in and\naccesses the database and\n\n462\n00:22:50.130 --> 00:22:53.840\nI have permissions I want to apply just\nto anybody, I apply them to public.\n\n463\n00:22:53.840 --> 00:22:55.790\nAnd then you can create\nyour own custom rules.\n\n464\n00:22:55.790 --> 00:22:58.520\nNow, again, in the on premises world,\n\n465\n00:22:58.520 --> 00:23:02.410\nwe would just double click on one of\nthese and start to add users into it, but\n\n466\n00:23:02.410 --> 00:23:05.530\nhere in Azure SQL,\nit's doesn't really work, right?\n\n467\n00:23:05.530 --> 00:23:07.360\nSo if I really want to add somebody in,\n\n468\n00:23:07.360 --> 00:23:11.140\nmaybe I want to make Daniel a db_owner,\nI want to give him full access.\n\n469\n00:23:11.140 --> 00:23:15.191\nOr Ronnie or both of them, right, well we\njust have to do a quick little query and\n\n470\n00:23:15.191 --> 00:23:16.773\nwe can knock that out, right?\n\n471\n00:23:16.773 --> 00:23:22.530\nSo over here if I want them to be admins,\nI just need to add them into that role.\n\n472\n00:23:22.530 --> 00:23:27.115\nAnd so we can call a little stored\nprocedure that does that, I'm gonna call\n\n473\n00:23:27.115 --> 00:23:33.789\n?EXEC sp_addrolemember, and I'll specify\nthe role which I'm going to do db_owner.\n\n474\n00:23:35.410 --> 00:23:38.380\nAnd then I specify who it\nis I am gonna put in there.\n\n475\n00:23:38.380 --> 00:23:44.540\nAnd so I will do dlowrie, and\nthen we will add Ronny next.\n\n476\n00:23:44.540 --> 00:23:48.910\nSo I will add that in so now he is in that\nrole, and then I can just go back in there\n\n477\n00:23:48.910 --> 00:23:54.090\nand add rwong, and run that.\n\n478\n00:23:54.090 --> 00:23:55.760\nAnd now they're both in that role, right?\n\n479\n00:23:55.760 --> 00:23:58.870\nSo now those two have permissions\nthey can actually do something.\n\n480\n00:23:58.870 --> 00:24:01.280\nSo with a contained user,\nwe've gotta create the user,\n\n481\n00:24:01.280 --> 00:24:05.210\nand then we gotta put them in a role, and\nthen we can actually do something, right?\n\n482\n00:24:05.210 --> 00:24:08.440\nWith a traditional user, you've got\nto create a log in, then you've got\n\n483\n00:24:08.440 --> 00:24:12.430\nto map a user to the log in, and then\nyou've got to put a user in a role, so\n\n484\n00:24:12.430 --> 00:24:14.640\nit's kind of three steps,\nversus two steps.\n\n485\n00:24:14.640 --> 00:24:17.450\nThis way's a little easier,\ndefinitely faster, and\n\n486\n00:24:17.450 --> 00:24:20.090\nit's portable, so this is the way that\nmost of you guys are gonna wanna do this\n\n487\n00:24:20.090 --> 00:24:22.850\nif you're launching\nsomething new up in Azure.\n\n488\n00:24:22.850 --> 00:24:25.020\nBut you have an existing database\nthat was set up the old way,\n\n489\n00:24:25.020 --> 00:24:28.640\nyou can stay the old way,\nyou just lose a little bit of portability.\n\n490\n00:24:28.640 --> 00:24:33.220\n>> So obviously users and roles,\nvery important concepts, and\n\n491\n00:24:33.220 --> 00:24:36.520\nideas that you need to get underneath\nthe belt, make that part of your tool set.\n\n492\n00:24:36.520 --> 00:24:39.410\nDon, that being said,\nis there any other little hints or\n\n493\n00:24:39.410 --> 00:24:42.950\ncaveats or tips that you've got for\nus on users and roles?\n\n494\n00:24:42.950 --> 00:24:46.290\n>> Mostly just to be aware that,\nif you're a traditional SQL admin,\n\n495\n00:24:46.290 --> 00:24:49.180\nif you've been a DBA or just\nadministering these servers in the past,\n\n496\n00:24:49.180 --> 00:24:52.100\na lot of the GUI tools don't work when\nit comes to management commission,\n\n497\n00:24:52.100 --> 00:24:54.700\nso be ready to do that\nthrough transact SQL.\n\n498\n00:24:54.700 --> 00:24:57.680\nI know, for me, a lot of times if\nI can do it with the GUI, I do,\n\n499\n00:24:57.680 --> 00:25:00.880\nand in scenario,\na lot of those tools just don't work.\n\n500\n00:25:00.880 --> 00:25:05.250\nAnd then, you maybe tempted to go and\nmess around with the server roles, don't,\n\n501\n00:25:05.250 --> 00:25:06.630\nit's a waste of time, right?\n\n502\n00:25:06.630 --> 00:25:08.360\nBecause those aren't gonna\nfollow your database,\n\n503\n00:25:08.360 --> 00:25:11.700\nthey're stuck to a server and for the most\npart you're not allowed to edit them, so\n\n504\n00:25:11.700 --> 00:25:14.850\nit's gonna scream at bit when\nyou start to edit those.\n\n505\n00:25:14.850 --> 00:25:17.070\nSo really you need to\nuse the web portal for\n\n506\n00:25:17.070 --> 00:25:19.220\nthe server level permissions, and then for\n\n507\n00:25:19.220 --> 00:25:22.930\nadministrators, and then everybody else\nis going to be data level permissions.\n\n508\n00:25:22.930 --> 00:25:25.870\nCreate those contained users,\nset the roles, and off you go, and\n\n509\n00:25:25.870 --> 00:25:28.530\nwe'll see a little more on\npermissions in another episode, but\n\n510\n00:25:28.530 --> 00:25:31.950\nas far as getting the accounts created,\nthose are the basic principles.\n\n511\n00:25:31.950 --> 00:25:32.870\n>> Excellent stuff, Don.\n\n512\n00:25:32.870 --> 00:25:35.846\nI will now relinquish you\nback to your Steam account,\n\n513\n00:25:35.846 --> 00:25:38.850\nlet you kill whatever it is you're\nkilling in some sort of alien land.\n\n514\n00:25:38.850 --> 00:25:41.390\nWe thank you for showing up,\nthough, and teaching this to us.\n\n515\n00:25:41.390 --> 00:25:42.740\nAnd we thank you for watching.\n\n516\n00:25:42.740 --> 00:25:46.643\nWe do appreciate all our viewers, we're\ngonna go ahead and sign off for ITProTV.\n\n517\n00:25:46.643 --> 00:25:48.158\nI've been your host, Daniel Lowrie.\n\n518\n00:25:48.158 --> 00:25:49.143\n>> And I'm Don Pizet.\n\n519\n00:25:49.143 --> 00:25:50.166\n>> And we'll see you next time.\n\n520\n00:25:50.166 --> 00:25:56.780\n[MUSIC]\n\n",
          "vimeoId": "151825629"
        },
        {
          "description": "In this episode, Don and Daniel dive into database permissions and schemas. They start by discussing database permissions and how they can be set on database objects like tables which will allow you to have very fine control over who can access that table. This leads them into describing setting permissions on users vs. groups/roles and when you would do one over the other. Finally they explain the idea of schemas which enables you to basically create a template to set permissions with an overarching scope.",
          "length": "1324",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-azuresql/techskills-azuresql-5-3-permissions_and_schemas-111316-1.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-azuresql/techskills-azuresql-5-3-permissions_and_schemas-111316-1-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-azuresql/techskills-azuresql-5-3-permissions_and_schemas-111316-1-sm.jpg",
          "title": "Permissions and Schemas",
          "transcript": "WEBVTT\n\n1\n00:00:00.000 --> 00:00:10.000\n[MUSIC]\n\n2\n00:00:11.973 --> 00:00:16.830\nAll right, greetings everyone and welcome\nto another great episode of ITProTV.\n\n3\n00:00:16.830 --> 00:00:20.090\nI'm your host Daniel Lowrie, and\nin today's episode well we are continuing\n\n4\n00:00:20.090 --> 00:00:23.720\non yet again with Azure SQL series\nthat we've been working on.\n\n5\n00:00:23.720 --> 00:00:27.080\nJoining me in the studio yet again today,\nis my good friend and colleague and,\n\n6\n00:00:27.080 --> 00:00:28.598\nwell he happens to be my boss as well.\n\n7\n00:00:28.598 --> 00:00:31.740\nThat is Mr. Don Pezet, Don welcome back\nto the show, how are you doing sir?\n\n8\n00:00:31.740 --> 00:00:32.620\n>> Doing great Daniel,\n\n9\n00:00:32.620 --> 00:00:35.401\nready to jump right back into\nthe world of Microsoft Azure SQL.\n\n10\n00:00:35.401 --> 00:00:38.990\nAnd what we're gonna do is kind of\nthe continuation of our last episode.\n\n11\n00:00:38.990 --> 00:00:42.530\nIn our last episode we got a chance to\nsee how to create user accounts inside of\n\n12\n00:00:42.530 --> 00:00:43.921\nAzure SQL databases, right?\n\n13\n00:00:43.921 --> 00:00:47.157\nAnd that's important if you\nwanna give somebody access, but\n\n14\n00:00:47.157 --> 00:00:48.990\nthe episode kind of fell\nshort of one thing.\n\n15\n00:00:48.990 --> 00:00:52.670\nWhich is we gave people access, but\nwe didn't give them permissions to\n\n16\n00:00:52.670 --> 00:00:55.750\ndo anything once they were connected,\nso they just connect and sit there.\n\n17\n00:00:55.750 --> 00:00:58.860\nSo in this episode we're gonna take\na look at how to assign permissions so\n\n18\n00:00:58.860 --> 00:01:02.560\nthat they can access resources and\nactually make use of that nice,\n\n19\n00:01:02.560 --> 00:01:03.750\nshiny account that we gave them.\n\n20\n00:01:03.750 --> 00:01:06.190\nSo if you haven't watched\nthe user account episode yet,\n\n21\n00:01:06.190 --> 00:01:07.780\nmake sure you check that one out.\n\n22\n00:01:07.780 --> 00:01:10.477\nBecause it's hard to assign permissions\nif you don't have user accounts and\n\n23\n00:01:10.477 --> 00:01:12.230\nuser accounts are useless\nwithout permissions.\n\n24\n00:01:12.230 --> 00:01:15.500\nSo these two things go hand in hand\nlike chocolate and peanut butter and\n\n25\n00:01:15.500 --> 00:01:16.610\nyou know dogs and cats [LAUGH].\n\n26\n00:01:16.610 --> 00:01:17.600\n>> Living together [LAUGH].\n\n27\n00:01:17.600 --> 00:01:21.070\n>> Once we got that done then we're\nreally ready to make use of our database.\n\n28\n00:01:21.070 --> 00:01:25.060\n>> Well Don this is really the metal\nmeets the meat, as they say, right?\n\n29\n00:01:25.060 --> 00:01:26.590\nIt's great to have user\naccounts around but\n\n30\n00:01:26.590 --> 00:01:29.070\nif nobody can do anything what\nthe heck are good are they?\n\n31\n00:01:29.070 --> 00:01:29.700\nNot at all.\n\n32\n00:01:29.700 --> 00:01:34.760\nSo I guess that's where we should\nbegin is let's take an account and\n\n33\n00:01:34.760 --> 00:01:37.210\ngive it some permissions to do something.\n\n34\n00:01:37.210 --> 00:01:40.100\nNow my first question really would\nbe is how is this any different from\n\n35\n00:01:40.100 --> 00:01:42.380\nthe roles that we looked\nat in the other episode?\n\n36\n00:01:42.380 --> 00:01:44.730\n>> All right, so\ngood question there, right?\n\n37\n00:01:44.730 --> 00:01:49.000\nRoles, that's giving somebody permission\nover the entire database, right, and\n\n38\n00:01:49.000 --> 00:01:51.510\nyou usually want that with\nlike a database owner.\n\n39\n00:01:51.510 --> 00:01:54.560\nSo I think in the episode I gave\nyou full control of that database,\n\n40\n00:01:54.560 --> 00:01:55.820\nI made you the DB owner.\n\n41\n00:01:55.820 --> 00:01:59.810\nOr I might have a help desk and\nI want to give them the DB data reader.\n\n42\n00:01:59.810 --> 00:02:02.160\nI want them to be able to\nread the whole database,\n\n43\n00:02:02.160 --> 00:02:06.126\nbut most of the time we don't want to\ngive people access to the whole database.\n\n44\n00:02:06.126 --> 00:02:10.910\nA lot of times we want to give them access\nto a single table or a single view.\n\n45\n00:02:10.910 --> 00:02:12.200\nRight?\nYou can't get too crazy,\n\n46\n00:02:12.200 --> 00:02:14.250\nyou can't do like a single\ncolumn of a table.\n\n47\n00:02:14.250 --> 00:02:17.410\nThat gets a little too hard, but\nyou can do a table, you can do a view,\n\n48\n00:02:17.410 --> 00:02:20.200\nyou can do stored procedures, functions.\n\n49\n00:02:20.200 --> 00:02:22.740\nYou can set permissions\non any of those things\n\n50\n00:02:22.740 --> 00:02:26.050\nto restrict who's allowed to access and\nuse them, or view them.\n\n51\n00:02:26.050 --> 00:02:29.560\nStore procedures like little programs so\nyou control who's allowed to run them.\n\n52\n00:02:29.560 --> 00:02:33.690\nA table, you control who's allowed to\nread to the table or write to the table,\n\n53\n00:02:33.690 --> 00:02:35.020\ndo inserts and updates.\n\n54\n00:02:35.020 --> 00:02:38.390\nYou can control that access, and\nthat's something that we do very commonly.\n\n55\n00:02:38.390 --> 00:02:42.540\nI might have some tables that my\nusers should be able to read from and\n\n56\n00:02:42.540 --> 00:02:45.590\nother tables where they might actually\nbe allowed to write to them, right?\n\n57\n00:02:45.590 --> 00:02:48.290\nAnd I need to be able give that,\nit's very much like file permissions,\n\n58\n00:02:48.290 --> 00:02:51.540\nbut here it's just tables and\nother items inside of the database.\n\n59\n00:02:51.540 --> 00:02:52.890\nSo that's the big difference, right.\n\n60\n00:02:52.890 --> 00:02:57.690\nA role applies to the entire database,\nbut the permissions we're gonna\n\n61\n00:02:57.690 --> 00:03:00.230\nlook at here in this episode apply to\nthe objects inside of that database,\n\n62\n00:03:00.230 --> 00:03:01.500\nso real granular control.\n\n63\n00:03:02.650 --> 00:03:06.130\nAll right, so let's just start with,\nwell, where's a good place to start?\n\n64\n00:03:06.130 --> 00:03:08.210\nThere's the database level permissions,\n\n65\n00:03:08.210 --> 00:03:11.810\nwhich we've sort of already\nseen with the roles.\n\n66\n00:03:11.810 --> 00:03:15.250\nBut you can actually get even more\ncustomized than that if you want, and\n\n67\n00:03:15.250 --> 00:03:17.640\nyou can even take the existing roles and\nchange their permissions.\n\n68\n00:03:17.640 --> 00:03:18.640\nLet me show you what I mean.\n\n69\n00:03:18.640 --> 00:03:22.380\nSo here I'm in the SQL Management Studio\non my computer.\n\n70\n00:03:22.380 --> 00:03:23.920\nAnd so I'm connected up to Azure, so\n\n71\n00:03:23.920 --> 00:03:27.610\nI'm connected up to,\nitprotvdemo1.database.windows.net.\n\n72\n00:03:27.610 --> 00:03:31.190\nAnd if I drill into a database,\nlike SampleDB2,\n\n73\n00:03:31.190 --> 00:03:36.440\nyou can right-click on that database,\nand go into Properties, and\n\n74\n00:03:36.440 --> 00:03:40.350\nin the properties for the database,\nwhenever they choose to come up,\n\n75\n00:03:40.350 --> 00:03:43.697\nyou'll see where you've got\nthe option to change Permissions.\n\n76\n00:03:43.697 --> 00:03:47.880\nAnd when we go into Permissions,\nhere I'm gonna start using some users.\n\n77\n00:03:47.880 --> 00:03:53.100\nNow I didn't add Daniel or\nRonnie test123 for that matter.\n\n78\n00:03:53.100 --> 00:03:54.770\nWhere did those come from?\n\n79\n00:03:54.770 --> 00:03:58.680\nWell when I put them in roles they\ngot certain permissions, and so\n\n80\n00:03:58.680 --> 00:04:01.030\nthey're showing up in this\nlist because of that.\n\n81\n00:04:01.030 --> 00:04:04.457\nIf they weren't here in the list I could\nadd them by using the Search button, and\n\n82\n00:04:04.457 --> 00:04:06.008\npick a user and add them to the list.\n\n83\n00:04:06.008 --> 00:04:08.559\nAnd once a user's in the list,\nI can choose them, and\n\n84\n00:04:08.559 --> 00:04:12.103\nthey're already getting the permissions\nfrom the roles that they have.\n\n85\n00:04:12.103 --> 00:04:17.145\nBut down here I can get really specific,\nright?\n\n86\n00:04:17.145 --> 00:04:22.342\nAlter the database, that means are they\nallowed to change the database settings,\n\n87\n00:04:22.342 --> 00:04:24.410\nor I can get more specific.\n\n88\n00:04:24.410 --> 00:04:27.470\nCan they alter an application rule,\ncan they alter an assembly,\n\n89\n00:04:27.470 --> 00:04:29.460\nan asymmetric key and so on.\n\n90\n00:04:29.460 --> 00:04:32.390\nYou can really get granular on this stuff,\nand\n\n91\n00:04:32.390 --> 00:04:36.480\nyou can grant them permissions,\nor you can deny them permissions.\n\n92\n00:04:36.480 --> 00:04:40.730\nSo no matter what happens, don't let them\nhave it and you can even do a With Grant.\n\n93\n00:04:40.730 --> 00:04:44.070\nWhich is when they are doing\nelevated privileges access,\n\n94\n00:04:44.070 --> 00:04:46.680\nwe don't really have to\nfuss with that here.\n\n95\n00:04:46.680 --> 00:04:49.210\nBut you'll see all these\ndifferent options in here,\n\n96\n00:04:49.210 --> 00:04:53.320\njust a ton of things that are all\napplying to the database itself, right.\n\n97\n00:04:53.320 --> 00:04:55.190\nThe most common thing that\nI have to give out here,\n\n98\n00:04:55.190 --> 00:04:58.430\nis the ability to create tables,\nright, create tables and views.\n\n99\n00:04:58.430 --> 00:05:02.600\nThat most people are just accessing\nan existing table, and so\n\n100\n00:05:02.600 --> 00:05:04.245\nthose are table permissions.\n\n101\n00:05:04.245 --> 00:05:07.585\nBut if I also want to be able to\ncreate a table or create a view,\n\n102\n00:05:07.585 --> 00:05:11.115\nthat doesn't exist yet, so that permission\nis set for you at the database level.\n\n103\n00:05:11.115 --> 00:05:14.285\nAnd so you'll find that in here we're\ngonna create a table or whatever,\n\n104\n00:05:14.285 --> 00:05:15.130\nthey'll be in the list.\n\n105\n00:05:15.130 --> 00:05:18.435\nThere's Create table right there and\nCreate view will show up somewhere else.\n\n106\n00:05:18.435 --> 00:05:23.170\nSo you can give that permission\nspecifically to a person or to a role.\n\n107\n00:05:23.170 --> 00:05:24.780\nI showed you guys the server based roles.\n\n108\n00:05:24.780 --> 00:05:28.260\nThe ones that are kind of, I mean\nthe database roles that are by default but\n\n109\n00:05:28.260 --> 00:05:30.030\nyou can create custom roles.\n\n110\n00:05:30.030 --> 00:05:32.110\nAnd then you can search and\nadd them in and\n\n111\n00:05:32.110 --> 00:05:34.980\nset the permissions to those roles\nwould have over this database.\n\n112\n00:05:34.980 --> 00:05:37.320\nSo you can customize it to\nyour heart's content and\n\n113\n00:05:37.320 --> 00:05:39.370\nstart to assign those permissions.\n\n114\n00:05:39.370 --> 00:05:42.360\nNow remember these are database\nwide at this level.\n\n115\n00:05:42.360 --> 00:05:45.810\nI right-clicked on the database and\nchose Properties, and\n\n116\n00:05:45.810 --> 00:05:49.340\nso that's how I know that I'm\nlooking at my databases permissions.\n\n117\n00:05:49.340 --> 00:05:52.910\nAnd if I wanted to do something more\ngranular like table permissions,\n\n118\n00:05:52.910 --> 00:05:57.290\nI would go down to the table and\npull up its Properties.\n\n119\n00:05:57.290 --> 00:06:00.110\nAnd so\nif I pull up the properties of this table.\n\n120\n00:06:00.110 --> 00:06:02.090\nSo I'll go down to that\nProperties option and\n\n121\n00:06:02.090 --> 00:06:05.190\nthat screen's gonna pop just\nlike we saw on the database, and\n\n122\n00:06:05.190 --> 00:06:08.860\nnow I can go under Permissions and\nthis screen looks basically the same.\n\n123\n00:06:08.860 --> 00:06:12.738\nI'll have my users up here and\nthen my settings underneath it.\n\n124\n00:06:12.738 --> 00:06:16.460\nBy default the table has no permissions It\ndoesn't mean that nobody can access it,\n\n125\n00:06:16.460 --> 00:06:19.030\nit just means that it's using the default\npermissions from the database,\n\n126\n00:06:19.030 --> 00:06:20.030\nit's inheriting them.\n\n127\n00:06:20.030 --> 00:06:24.140\nSo if I had Daniel as the database\nowner up to database level,\n\n128\n00:06:24.140 --> 00:06:27.930\nhe is gonna get full access down\nhere on my employees table, right.\n\n129\n00:06:27.930 --> 00:06:30.900\nBut I could want to change that.\n\n130\n00:06:30.900 --> 00:06:32.790\nMaybe he does have full\ncontrol at the top level, but\n\n131\n00:06:32.790 --> 00:06:34.640\nI don't want him to\nwrite to this database.\n\n132\n00:06:34.640 --> 00:06:36.880\nSo I could search and find his account.\n\n133\n00:06:38.710 --> 00:06:40.729\nYou can just hit Browse if\nyou want to find it, but\n\n134\n00:06:40.729 --> 00:06:42.465\nif you have a lot users\nthat takes a while.\n\n135\n00:06:42.465 --> 00:06:47.291\nSo I'm just gonna punch in his account and\nthen I'll check names,\n\n136\n00:06:47.291 --> 00:06:50.450\nand as so once that's done, there we go.\n\n137\n00:06:50.450 --> 00:06:54.240\nIt's got the square bracket so\nI know it found him, I'll say OK to that.\n\n138\n00:06:54.240 --> 00:06:56.872\nSo now he's in the list, and\nI can come in and I can say,\n\n139\n00:06:56.872 --> 00:07:00.536\nyou know I really don't want Daniel to\nbe able to alter this database, and so\n\n140\n00:07:00.536 --> 00:07:02.332\nI could deny him those permissions.\n\n141\n00:07:02.332 --> 00:07:06.084\nAnd see how I got that little flag right\nthere, letting me know I've changed his\n\n142\n00:07:06.084 --> 00:07:10.342\naccount, I've made a modification, and\nI need to hit OK for that to take effect.\n\n143\n00:07:10.342 --> 00:07:13.970\nAll right, and as soon as I do that,\nnow he's no longer gonna have access.\n\n144\n00:07:13.970 --> 00:07:15.630\nNow, that's a tricky one to give out.\n\n145\n00:07:15.630 --> 00:07:19.620\nI just denied him the ability to\nalter this table, but he has DB owner\n\n146\n00:07:19.620 --> 00:07:23.900\npermissions, so technically he could\ncome in and override it, right?\n\n147\n00:07:23.900 --> 00:07:26.613\nOnce somebodyÂ´s a DB owner it's\nreally hard to lock them out, but\n\n148\n00:07:26.613 --> 00:07:28.825\nthat's an idea of how those\ntable permissions work.\n\n149\n00:07:28.825 --> 00:07:32.270\nIt's securing the table itself,\nnot an individual column, right?\n\n150\n00:07:32.270 --> 00:07:36.390\nAlthough you can do that with triggers and\nconstraints as ways to perform that, but\n\n151\n00:07:36.390 --> 00:07:38.620\nthat's really something\na DBA would worry about.\n\n152\n00:07:38.620 --> 00:07:39.860\nAs an administrator,\n\n153\n00:07:39.860 --> 00:07:43.900\nusually table level permissions\nare as granular as we need to get.\n\n154\n00:07:43.900 --> 00:07:45.450\n>> Now Don, do table level and\n\n155\n00:07:45.450 --> 00:07:49.780\ndatabase level permissions conflict with\neach other, does one override the other?\n\n156\n00:07:49.780 --> 00:07:54.576\nSo if I had a conflict going on, one would\nactually be implemented the other one be\n\n157\n00:07:54.576 --> 00:07:56.350\nkind of be not working at all?\n\n158\n00:07:56.350 --> 00:07:58.790\n>> The only time there's an override\nis when there is a deny.\n\n159\n00:07:58.790 --> 00:08:02.565\nSo if you're denying the deny will\noverride the other permissions at\n\n160\n00:08:02.565 --> 00:08:03.419\neither level.\n\n161\n00:08:03.419 --> 00:08:07.167\nBut otherwise, the two levels of\npermissions, the database level and\n\n162\n00:08:07.167 --> 00:08:10.490\nthe table level kinda merge together and\nyou get the best of it.\n\n163\n00:08:10.490 --> 00:08:13.000\nRight?\nSo you can end up with considerably more\n\n164\n00:08:13.000 --> 00:08:16.030\npermissions based on you know once\nthese two things get combined.\n\n165\n00:08:16.030 --> 00:08:21.000\nAll right, so those are database\npermissions and table permissions.\n\n166\n00:08:21.000 --> 00:08:22.900\nPretty straightforward, pretty easy to do.\n\n167\n00:08:22.900 --> 00:08:25.560\nYou can add the users in and\nset them or you can add roles in.\n\n168\n00:08:25.560 --> 00:08:28.810\nAnd roles are better because\nmaybe I've got help desk and so\n\n169\n00:08:28.810 --> 00:08:32.090\nI could create a help desk role and I\ncould assign the permissions of that role,\n\n170\n00:08:32.090 --> 00:08:34.840\nand then I could put users in the role\nlike we saw in the user episode.\n\n171\n00:08:34.840 --> 00:08:37.540\nAnd when you do that anytime\nyou hire somebody new for\n\n172\n00:08:37.540 --> 00:08:39.370\nthe help desk you just\nthrow them in that role.\n\n173\n00:08:39.370 --> 00:08:40.300\nYou don't have to go through and\n\n174\n00:08:40.300 --> 00:08:43.270\nedit all your table permissions\nto add this new employee,\n\n175\n00:08:43.270 --> 00:08:46.530\nit's all done through a role, that's\nthe better way to go about it, right?\n\n176\n00:08:46.530 --> 00:08:49.950\nBut once that's done, you set the\npermissions, you control that access and\n\n177\n00:08:49.950 --> 00:08:51.190\nnow you're in business.\n\n178\n00:08:52.630 --> 00:08:58.460\nNow where this gets a little tricky\nis what if I have groups of tables?\n\n179\n00:08:58.460 --> 00:09:02.230\nOr groups of views that I want\nto give people access to?\n\n180\n00:09:02.230 --> 00:09:05.080\nI might not want to go to\neach table individually.\n\n181\n00:09:05.080 --> 00:09:07.230\nWouldn't it be nice to be\nable to set them in bold?\n\n182\n00:09:07.230 --> 00:09:09.710\nWell it would, but\nunfortunately there isn't a way to that.\n\n183\n00:09:09.710 --> 00:09:13.870\nSo there is actually a neat technology\nthat was introduced in SQL 2005 and\n\n184\n00:09:13.870 --> 00:09:17.720\nit's fully supported in Azure SQL\nwith what's called a schema.\n\n185\n00:09:17.720 --> 00:09:20.700\nAnd a schema is a neat\nway to collect tables and\n\n186\n00:09:20.700 --> 00:09:22.980\nviews together to assign\npermissions to them.\n\n187\n00:09:22.980 --> 00:09:27.100\nAnd not just tables and views, it applies\nto store procedures and everything else.\n\n188\n00:09:27.100 --> 00:09:31.820\nIf I've got five tables and I want Daniel\nto administer all five of them, right?\n\n189\n00:09:31.820 --> 00:09:34.670\nOr really maybe I've got like\na marketing department or HR,\n\n190\n00:09:34.670 --> 00:09:36.120\nHR is a great example for this.\n\n191\n00:09:36.120 --> 00:09:40.050\nI've got human resources and\nI know that all my human resources tables,\n\n192\n00:09:40.050 --> 00:09:43.570\nthey're special because they've got\nemployees social security numbers.\n\n193\n00:09:43.570 --> 00:09:47.320\nThey've got payroll information,\nyou know personal data.\n\n194\n00:09:47.320 --> 00:09:47.850\nThey're special.\n\n195\n00:09:47.850 --> 00:09:49.700\nI need to secure them\nmore than my other stuff.\n\n196\n00:09:51.070 --> 00:09:54.280\nI can create a schema for human resources.\n\n197\n00:09:54.280 --> 00:09:58.900\nAnd any time I create a stored procedure,\na table, a view, a function,\n\n198\n00:09:58.900 --> 00:10:02.610\nanything I can put it in that schema.\n\n199\n00:10:02.610 --> 00:10:04.590\nIn that human resources schema.\n\n200\n00:10:04.590 --> 00:10:07.520\nAnd now I can get a common\nset of permissions\n\n201\n00:10:07.520 --> 00:10:08.860\nthat are controlled based on that schema.\n\n202\n00:10:08.860 --> 00:10:11.980\nIt's a really neat way to do that so\nwe only have to set permissions once for\n\n203\n00:10:11.980 --> 00:10:13.300\na group of objects.\n\n204\n00:10:13.300 --> 00:10:16.250\nAnd now every time I add a new table or\na new view\n\n205\n00:10:16.250 --> 00:10:19.570\nI just put it in the right Schema,\nand it gets the permissions it needs.\n\n206\n00:10:19.570 --> 00:10:21.680\nI donÂ´t have to worry about resetting\nit every time I add a table.\n\n207\n00:10:21.680 --> 00:10:25.050\nRight the way I just showed you there,\nif I were to add another table,\n\n208\n00:10:25.050 --> 00:10:28.290\nit would have blank permissions on it\nto add those in my self, right and\n\n209\n00:10:28.290 --> 00:10:29.470\nthatÂ´s kind of frustrating.\n\n210\n00:10:29.470 --> 00:10:32.620\nSo schemaÂ´s let us group objects together.\n\n211\n00:10:32.620 --> 00:10:36.270\nNow, schema support is on by default and\nactually running and\n\n212\n00:10:36.270 --> 00:10:39.240\nworking inside of SQL whether\nyou want it or not, but\n\n213\n00:10:39.240 --> 00:10:43.270\nby default everything is in the same\nschema, so you can effectively ignore it.\n\n214\n00:10:43.270 --> 00:10:46.280\nThere's but one schema created\nby default that is used for\n\n215\n00:10:46.280 --> 00:10:48.700\neverything, there's actually several\nthat are created by default, but\n\n216\n00:10:48.700 --> 00:10:51.400\nthere's one that's used for\neverything and it's called DBO.\n\n217\n00:10:51.400 --> 00:10:52.350\nAnd you've probably seen that.\n\n218\n00:10:52.350 --> 00:10:56.410\nHere if we look at my interface\nnotice my employees table,\n\n219\n00:10:56.410 --> 00:10:59.930\nit's not called Employees,\nit's called dbo.Employees.\n\n220\n00:10:59.930 --> 00:11:02.050\nDVO is database owner.\n\n221\n00:11:02.050 --> 00:11:04.890\nBack in the day, all right so\nwe roll back the clock to SQL 2000.\n\n222\n00:11:04.890 --> 00:11:09.240\nIn SQL 2000 and\nearlier everything had an owner.\n\n223\n00:11:09.240 --> 00:11:13.320\nAnd so DVO was the owner of this table,\nthat's the person who created it.\n\n224\n00:11:13.320 --> 00:11:16.810\nIf I created a table it might be\ncalled Deep Asset dot employees.\n\n225\n00:11:16.810 --> 00:11:19.160\nWell, the employee is\nwell what if I got fired?\n\n226\n00:11:19.160 --> 00:11:20.850\nAnd we hire a new database administrator.\n\n227\n00:11:20.850 --> 00:11:23.850\nWell, the table is called\ndpeset.employees, right.\n\n228\n00:11:23.850 --> 00:11:24.880\nAnd that's a problem.\n\n229\n00:11:24.880 --> 00:11:29.850\nSo starting in SQL 2005, Microsoft\nmade it where this was not a user,\n\n230\n00:11:29.850 --> 00:11:33.380\nnot a person, but\nthis thing called a schema.\n\n231\n00:11:33.380 --> 00:11:35.560\nAnd the schema owns the object.\n\n232\n00:11:35.560 --> 00:11:37.360\nAnd here the schema is dbo.\n\n233\n00:11:37.360 --> 00:11:39.330\nBut I can create my own schemas.\n\n234\n00:11:39.330 --> 00:11:43.070\nIf I go down here to security, so\nI'm in the database and I'm going down to\n\n235\n00:11:43.070 --> 00:11:47.660\nsecurity, there's my Users,\nthere's my Roles, and here's my Schemas.\n\n236\n00:11:47.660 --> 00:11:50.720\nAnd if I look at my schemas,\nnotice how I've got schemas for\n\n237\n00:11:50.720 --> 00:11:55.120\na lot of the roles that already exist and\nthere's dbo, right?\n\n238\n00:11:55.120 --> 00:11:58.060\nBut I can create a new schema if I want,\nif you just right click on that and\n\n239\n00:11:58.060 --> 00:12:03.030\nchoose new schema it'll give you\nthe query here to run for that.\n\n240\n00:12:03.030 --> 00:12:07.960\nAnd so I can create a schema which\nI'm gonna create one called HR or\n\n241\n00:12:07.960 --> 00:12:11.700\nI might call it human resources or\nwhatever makes me happy, right?\n\n242\n00:12:11.700 --> 00:12:14.489\nAnd then I can give it the authorization,\nwhoops.\n\n243\n00:12:15.730 --> 00:12:18.203\nFor, what I want them to have access to.\n\n244\n00:12:18.203 --> 00:12:21.100\nIn general I'm kind of basing it\noff of a user, or something, right?\n\n245\n00:12:21.100 --> 00:12:25.690\nSo, for the authorization,\nI can specify a particular owner, and\n\n246\n00:12:25.690 --> 00:12:29.170\nyou know I might make myself be owners,\nand so I'm creating this.\n\n247\n00:12:29.170 --> 00:12:32.030\nOr I might just set it to,\nlet's say I think it'll let me do dbo,\n\n248\n00:12:32.030 --> 00:12:34.350\nlet me just do dbo on that one.\n\n249\n00:12:34.350 --> 00:12:37.200\nAnd, we will create that,\nyeah there we go.\n\n250\n00:12:37.200 --> 00:12:41.430\nAlright, so\nnow I've got a schema Called HR, right?\n\n251\n00:12:41.430 --> 00:12:45.000\nAnd if I go back over here and\nrefresh my schema, that'll show up.\n\n252\n00:12:46.420 --> 00:12:48.900\nAnd there's the schema called HR, right.\n\n253\n00:12:48.900 --> 00:12:54.310\nFrom now on, when I create an object,\nI can put it into HR schema.\n\n254\n00:12:54.310 --> 00:12:55.970\nRight?\nNow, that's important.\n\n255\n00:12:55.970 --> 00:12:58.660\nI can't move an object between schemas.\n\n256\n00:12:58.660 --> 00:13:02.500\nSo that employees table, it already exists\nand it's already part of the dbo schema,\n\n257\n00:13:02.500 --> 00:13:03.640\nthis one right here.\n\n258\n00:13:03.640 --> 00:13:06.580\nIf I want it to be an HR schema,\nI actually have to create a new table.\n\n259\n00:13:06.580 --> 00:13:08.570\nI can call it employees, and\n\n260\n00:13:08.570 --> 00:13:10.550\nthen I need to copy the data\nfrom one to the other, right?\n\n261\n00:13:10.550 --> 00:13:13.620\nSo there's no way to just\nswap your schema really easy.\n\n262\n00:13:13.620 --> 00:13:18.360\nSo If I wanna have a table in here I can\nand it'll just be a part of that schema.\n\n263\n00:13:18.360 --> 00:13:21.450\nAnd I can come in and\nassign permissions on this schema\n\n264\n00:13:21.450 --> 00:13:26.460\nto control what kind of permissions\nI want people to have access to.\n\n265\n00:13:26.460 --> 00:13:27.040\nAll right.\n\n266\n00:13:27.040 --> 00:13:29.710\nBut from now on, when I go up here and\nI start to create a table, right.\n\n267\n00:13:29.710 --> 00:13:36.200\nSo if I go up here to tables and create\na new table, I'll create a payroll table.\n\n268\n00:13:36.200 --> 00:13:36.800\nRight?\n\n269\n00:13:36.800 --> 00:13:39.620\nSo over here on the right side in\nmy settings, I can set a name,\n\n270\n00:13:39.620 --> 00:13:42.110\nand I'm gonna call this one payroll.\n\n271\n00:13:43.680 --> 00:13:47.640\nAnd then I've got a description and\nbeneath that you'll see where I've got\n\n272\n00:13:47.640 --> 00:13:53.270\ndbo, and that dbo that's the default\nschema that it's gonna use.\n\n273\n00:13:53.270 --> 00:13:58.180\nBut I can drop that down, and\nin my list I can hunt for\n\n274\n00:13:58.180 --> 00:14:02.130\nHR, there it is, and\n\n275\n00:14:02.130 --> 00:14:06.960\nnow it's not going to be DBO.payroll,\nit's going to be HR.payroll, okay?\n\n276\n00:14:06.960 --> 00:14:10.840\nAnd so I can, you know, define a quick\ncolumn name here, so this is payroll,\n\n277\n00:14:10.840 --> 00:14:15.470\nright, so\nI might have like employee ID followed by,\n\n278\n00:14:15.470 --> 00:14:20.220\nwhich I guess it probably would be\nmore of an integer than anything else.\n\n279\n00:14:20.220 --> 00:14:25.090\nAnd, nope, it must be getting congested,\nmy screen's moving a little slow there.\n\n280\n00:14:25.090 --> 00:14:28.640\nYou know, employee ID and\nthen maybe like pay rate, right?\n\n281\n00:14:29.740 --> 00:14:32.160\nSo I can come in and\nI'll make that a money type there.\n\n282\n00:14:32.160 --> 00:14:37.904\nSo I've got employee ID and pay rate for\nthis table, that's giving HR.payroll.\n\n283\n00:14:37.904 --> 00:14:40.170\n>> [LAUGH]\n>> What it's called.\n\n284\n00:14:40.170 --> 00:14:44.700\nSo that's gonna be it, and\nbasically that's my table.\n\n285\n00:14:44.700 --> 00:14:49.130\nAnd now that that's created, if I come\nover here to my tables and refresh,\n\n286\n00:14:51.110 --> 00:14:54.373\nyou'll see I've got dbo.Employees and\nhr.Payroll.\n\n287\n00:14:54.373 --> 00:14:58.278\nFor dbo.Employees, I'm gonna assign\npermissions right on the employees table.\n\n288\n00:14:58.278 --> 00:15:03.200\nBut for hr.Payroll,\nwe can assign permissions to the schema.\n\n289\n00:15:03.200 --> 00:15:10.000\nAnd if I have a user and I give them db\ndata reader permissions on the hr schema,\n\n290\n00:15:10.000 --> 00:15:13.550\nthey just got reader permissions on\neverything that's in that schema.\n\n291\n00:15:13.550 --> 00:15:14.490\nAnd that's pretty cool.\n\n292\n00:15:14.490 --> 00:15:16.280\nThat's a pretty convenient thing.\n\n293\n00:15:16.280 --> 00:15:19.100\nAnd now as I create new\ntables that are hr related,\n\n294\n00:15:19.100 --> 00:15:22.040\nI just put them in that schema and\nthey'll inherit those permissions.\n\n295\n00:15:22.040 --> 00:15:26.090\nIt's just a great way to make sure that\nwe don't screw up and leak data out.\n\n296\n00:15:26.090 --> 00:15:29.250\nAnytime you manage permissions\non individual objects,\n\n297\n00:15:29.250 --> 00:15:31.300\nevery time you add a new object,\nyou gotta redo those permissions.\n\n298\n00:15:31.300 --> 00:15:32.900\nAnd that means there's a chance for\nyou to make a mistake.\n\n299\n00:15:32.900 --> 00:15:35.840\nBut when you assign\nthe permissions to a schema,\n\n300\n00:15:35.840 --> 00:15:39.370\nNow we've got this one central set of\npermissions, and they're basically getting\n\n301\n00:15:39.370 --> 00:15:41.940\nreused every time we add a new object,\nand it's nice and consistent.\n\n302\n00:15:41.940 --> 00:15:43.204\nIf I change it in the schema,\n\n303\n00:15:43.204 --> 00:15:46.930\nit changes for all of the objects that\nare a part of that and underneath that.\n\n304\n00:15:46.930 --> 00:15:49.730\nSo definitely a great technology and\ndefinitely one you wanna make use of.\n\n305\n00:15:51.100 --> 00:15:55.325\nHowever, you'll find a lot of people\nout there don't use schemas, and\n\n306\n00:15:55.325 --> 00:15:56.650\nyou might wonder why.\n\n307\n00:15:56.650 --> 00:16:01.550\nWell, if I wanna quarry data\nfrom the employees table, or\n\n308\n00:16:01.550 --> 00:16:06.950\neven the HR payroll table, right so,\nif I were to do a new query.\n\n309\n00:16:06.950 --> 00:16:14.720\nAnd I do, SELECT * FROM Employees.\n\n310\n00:16:14.720 --> 00:16:15.673\nIf I spell it, right this will work.\n\n311\n00:16:15.673 --> 00:16:17.113\n>> [LAUGH]\n>> There we go.\n\n312\n00:16:17.113 --> 00:16:19.360\nIf I do SELECT * FROM Employees, right?\n\n313\n00:16:19.360 --> 00:16:21.280\nGive me all the data\nfrom the Employees table.\n\n314\n00:16:21.280 --> 00:16:23.220\nWhen I run that, it works, right?\n\n315\n00:16:24.410 --> 00:16:32.780\nIf I run SELECT * FROM Payroll,\nand I run that, it doesn't work.\n\n316\n00:16:32.780 --> 00:16:35.020\nInvalid object name.\n\n317\n00:16:35.020 --> 00:16:36.340\nWell, there's a payroll table.\n\n318\n00:16:36.340 --> 00:16:37.122\nI know there is, right?\n\n319\n00:16:37.122 --> 00:16:40.850\nBut it's failing.\nSo, why's it failing?\n\n320\n00:16:40.850 --> 00:16:44.850\nWell, it's failing because\nI didn't specify a schema.\n\n321\n00:16:44.850 --> 00:16:48.110\nIf you don't specify a schema,\nit defaults to DBO.\n\n322\n00:16:48.110 --> 00:16:51.040\nSo if you leave all your\nstuff in the DBO schema\n\n323\n00:16:51.040 --> 00:16:52.490\nthen you don't have to provide a schema.\n\n324\n00:16:52.490 --> 00:16:55.500\nThere's a lot of database admins\nout there that like that.\n\n325\n00:16:55.500 --> 00:16:59.500\nBut, you lose the advantage of having\nthis kind of like shared permission.\n\n326\n00:16:59.500 --> 00:17:03.750\nIf you use schemas, every time you\nquery an object in that schema you have\n\n327\n00:17:03.750 --> 00:17:05.130\nto type the schema before it.\n\n328\n00:17:05.130 --> 00:17:10.110\nSo if I wanna query payroll,\nI've actually got a query hr.payroll.\n\n329\n00:17:10.110 --> 00:17:13.710\nAnd so, when I do that I can execute\nit and there it is, my table is empty,\n\n330\n00:17:13.710 --> 00:17:14.810\nit's not very exiting.\n\n331\n00:17:14.810 --> 00:17:18.430\nBut it's just one extra little bit to do\nand so a lot of people don't like that.\n\n332\n00:17:18.430 --> 00:17:21.620\nAnd if you've got an old database,\none that was written back in the old owner\n\n333\n00:17:21.620 --> 00:17:26.020\ndays, most people just left it to DBO and\nall of your stuff might be DBO right now.\n\n334\n00:17:26.020 --> 00:17:29.501\nAnd so people might be resistant to going\nto schemas, but if you're implementing\n\n335\n00:17:29.501 --> 00:17:32.996\nsomething new, absolutely 100% use\nthe schemas as what they're there for.\n\n336\n00:17:32.996 --> 00:17:36.807\nGives you extra security control and\nit prevents mistakes, it's definitely\n\n337\n00:17:36.807 --> 00:17:40.573\nsomething you wanna implement and\nget put in place, it really is important.\n\n338\n00:17:40.573 --> 00:17:41.166\nAll right.\n\n339\n00:17:41.166 --> 00:17:44.964\nAnd you know technically is there a lot\nmore that goes on you have an owner and\n\n340\n00:17:44.964 --> 00:17:48.946\nserver name sort of fully qualified name\nfor any object in the database section\n\n341\n00:17:48.946 --> 00:17:53.180\ncontains four parts but,\nit assumes defaults for certain things.\n\n342\n00:17:53.180 --> 00:17:57.490\nAnd you know, while I'm mentioning\ndefaults, when you create a user account,\n\n343\n00:17:57.490 --> 00:18:01.500\nyou can actually specify what\ntheir default schema is.\n\n344\n00:18:01.500 --> 00:18:04.850\nSo, for example,\nmy default schema right now is DBO.\n\n345\n00:18:04.850 --> 00:18:09.400\nAnd that's why when I ran\nSELECT * FROM Employees,\n\n346\n00:18:09.400 --> 00:18:13.470\nit defaulted to putting that DBO in there,\nand it worked for me, right.\n\n347\n00:18:13.470 --> 00:18:16.050\nYou can actually change\na users default schema.\n\n348\n00:18:16.050 --> 00:18:18.650\nSo, if you've got a user that's in HR, and\n\n349\n00:18:18.650 --> 00:18:21.060\nyou know they're always\nquerying into the HR tables,\n\n350\n00:18:21.060 --> 00:18:24.940\nand you don't want them to type in that\nschema name, you can set that default.\n\n351\n00:18:24.940 --> 00:18:28.550\nIf you do that, they'll have to make sure\nto type DBO dot whenever they reference\n\n352\n00:18:28.550 --> 00:18:31.170\nanything else but as far as HR stuff,\nthey won't have to do it.\n\n353\n00:18:31.170 --> 00:18:34.890\nAnd you know I can't remember if you're\ngonna do it for the GUI or not, let's see.\n\n354\n00:18:34.890 --> 00:18:37.541\nSo if I go into my database,\nwe'll learn something here on the show.\n\n355\n00:18:37.541 --> 00:18:43.040\n[LAUGH] And if I go into my users and\nI take somebody like Daniel, right?\n\n356\n00:18:43.040 --> 00:18:46.610\nAnd let's see,\nwill it let me pull up your properties?\n\n357\n00:18:46.610 --> 00:18:47.640\nAnd, no, all right.\n\n358\n00:18:47.640 --> 00:18:53.600\nSo you'd have to do this through a query.\n\n359\n00:18:53.600 --> 00:18:57.790\nWhen it comes to permissions, there's a\nlot of stuff that doesn't work in the GUI.\n\n360\n00:18:57.790 --> 00:19:00.860\nBut notice here I just did a script user.\n\n361\n00:19:00.860 --> 00:19:02.854\nAnd so it's got CREATE USER [dlowrie] FOR\n\n362\n00:19:02.854 --> 00:19:05.640\nLOGIN [dlowrie] cuz he's\na traditional account.\n\n363\n00:19:05.640 --> 00:19:09.920\nAnd then WITH DEFAULT_SCHEMA=[dbo], okay?\n\n364\n00:19:09.920 --> 00:19:15.140\nI can also do an ALTER USER\n[dlowrie] DEFAULT_SCHEMA=[hr] and\n\n365\n00:19:15.140 --> 00:19:16.910\nchange him over to have\nthat default schema.\n\n366\n00:19:16.910 --> 00:19:20.590\nSo now whenever he references\nan object and leaves off the schema,\n\n367\n00:19:20.590 --> 00:19:22.070\nit would default to HR.\n\n368\n00:19:22.070 --> 00:19:24.580\nSo you can change somebody's default to\n\n369\n00:19:24.580 --> 00:19:28.070\nkind of overcome that argument of somebody\nsaying, oh, I hate typing that in.\n\n370\n00:19:28.070 --> 00:19:29.900\nBut the reality is they just\nneed to stop being lazy.\n\n371\n00:19:29.900 --> 00:19:31.390\nIt's a great security feature.\n\n372\n00:19:31.390 --> 00:19:32.790\nIt's one you should take advantage of.\n\n373\n00:19:32.790 --> 00:19:34.870\nIt's been around for over ten years now,\n\n374\n00:19:34.870 --> 00:19:38.190\nso I think most people should\nhave adopted it by this point.\n\n375\n00:19:38.190 --> 00:19:41.980\nBut you'd be surprised people are always\nhesitant to change databases cuz the data\n\n376\n00:19:41.980 --> 00:19:43.000\nis so critical and so\n\n377\n00:19:43.000 --> 00:19:46.210\nimportant that there's plenty of\npeople that are still running,\n\n378\n00:19:46.210 --> 00:19:50.280\nbasically configured the same way they\nwere back on SQL six, five, or earlier.\n\n379\n00:19:50.280 --> 00:19:52.150\n>> Now Don, losing access to data or\n\n380\n00:19:52.150 --> 00:19:54.340\nlosing data gives people\nheart complications.\n\n381\n00:19:54.340 --> 00:19:55.640\nI know you know that.\n\n382\n00:19:55.640 --> 00:19:58.990\nSo I can understand why people\nwould hesitant to move that but\n\n383\n00:19:58.990 --> 00:20:01.620\nobviously I think you've done\na really good job of showing\n\n384\n00:20:01.620 --> 00:20:04.700\nwhy this would be a beneficial thing,\nespecially if you're,\n\n385\n00:20:04.700 --> 00:20:07.530\nlike you said, you're moving into a new\ndatabase, maybe you've got that old and\n\n386\n00:20:07.530 --> 00:20:10.920\ntried and true and hard to teach an old\ndog new tricks, we understand that.\n\n387\n00:20:10.920 --> 00:20:13.180\nBut if you're starting something new,\nyou start implementing this,\n\n388\n00:20:13.180 --> 00:20:17.450\nbecause it really seems to me like\nthis is a, we're building templates.\n\n389\n00:20:17.450 --> 00:20:21.500\nAnd with that template, it removes or\nreduces at least, a lot of my\n\n390\n00:20:21.500 --> 00:20:25.270\nadministrative headache of having to go\nin here and go okay we got a new user.\n\n391\n00:20:25.270 --> 00:20:27.840\nNow I've got to set permissions on this,\nthis, this, this, this, this, and\n\n392\n00:20:27.840 --> 00:20:30.280\nthis when all I have to do\nis add them to a schema\n\n393\n00:20:30.280 --> 00:20:34.670\nwhich then has that role put in it\nwhich has the user in that role.\n\n394\n00:20:34.670 --> 00:20:35.920\nBoom, I'm done.\n\n395\n00:20:35.920 --> 00:20:40.430\nAll my work is taken care of, I spend a\nlot less time trying to admin that system.\n\n396\n00:20:40.430 --> 00:20:42.520\n>> Yeah, and\nthat's really what it boils down to,\n\n397\n00:20:42.520 --> 00:20:43.850\nis reducing administrative effort.\n\n398\n00:20:43.850 --> 00:20:47.060\nIf you don't wanna have to come in here\nand keep redoing the same thing over and\n\n399\n00:20:47.060 --> 00:20:51.100\nover again, the schemas are what helps\nas far as permissions are concerned.\n\n400\n00:20:51.100 --> 00:20:54.870\nAs far as everything else, the end users\nreally don't benefit from schemas,\n\n401\n00:20:54.870 --> 00:20:57.480\nit does kind of annoy the end users,\ncuz they have to type that extra thing and\n\n402\n00:20:57.480 --> 00:20:59.470\nthey don't necessarily see\nthe benefit out of it.\n\n403\n00:20:59.470 --> 00:21:03.030\nBut in terms of security, ease of effort,\nthat's where schemas really shine.\n\n404\n00:21:03.030 --> 00:21:07.680\nSo remember that we can set\npermissions directly on tables.\n\n405\n00:21:07.680 --> 00:21:10.196\nWe can set permissions directly\non views and stored procedures,\n\n406\n00:21:10.196 --> 00:21:11.255\nyou can certainly do that.\n\n407\n00:21:11.255 --> 00:21:13.639\nYou can assign the permissions\nto individual users, and\n\n408\n00:21:13.639 --> 00:21:15.383\nyou can assign the permissions to roles.\n\n409\n00:21:15.383 --> 00:21:18.499\nRight, roles are better,\nbecause you can move users in and\n\n410\n00:21:18.499 --> 00:21:22.361\nout of roles to use those permissions,\nbut at the end of the day if you can,\n\n411\n00:21:22.361 --> 00:21:24.600\nset your permissions on a schema.\n\n412\n00:21:24.600 --> 00:21:27.960\nAnd that's because the schema can be\napplied to more than one object, and\n\n413\n00:21:27.960 --> 00:21:30.170\nthat's going to save you time and\nreduce mistakes.\n\n414\n00:21:30.170 --> 00:21:31.490\nSo that's the way you need to do it.\n\n415\n00:21:31.490 --> 00:21:32.420\n>> Excellent stuff, Don.\n\n416\n00:21:32.420 --> 00:21:33.030\nAppreciate this.\n\n417\n00:21:33.030 --> 00:21:36.949\nThis is one of the episodes that I like\na lot because of well that's really\n\n418\n00:21:36.949 --> 00:21:38.244\npractical, you know.\n\n419\n00:21:38.244 --> 00:21:41.510\nThis is stuff you can use, you can really\nhit the ground running with it and\n\n420\n00:21:41.510 --> 00:21:45.250\nimplement it into your environment as\nof today at the end of this taping.\n\n421\n00:21:45.250 --> 00:21:46.760\nSo thank you so much for that Don,\n\n422\n00:21:46.760 --> 00:21:51.560\nwe will, looking at the clock though looks\nlike we've exhausted our time for the day.\n\n423\n00:21:51.560 --> 00:21:52.857\nThank you guys so much for watching.\n\n424\n00:21:52.857 --> 00:21:56.065\nWe're gonna go ahead and sign off for\nITPro.TV, I've been your host,\n\n425\n00:21:56.065 --> 00:21:57.500\nDaniel Lowry\n>> And I'm Don Pezet.\n\n426\n00:21:57.500 --> 00:21:58.161\n>> And we'll see you next time.\n\n427\n00:21:58.161 --> 00:22:04.540\n[MUSIC]\n\n",
          "vimeoId": "151825637"
        },
        {
          "description": "In this episode, Don and Daniel explain server and database auditing when using Azure SQL. First they go over how to enable server level auditing, taking you step-by-step through the Azure web portal. Next they show you how to enable auditing at the database level which can have certain advantages over auditing the server. They also explore the threat detection system to help secure your Azure SQL deployments.",
          "length": "1903",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-azuresql/techskills-azuresql-5-4-database_auditing-111316-1.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-azuresql/techskills-azuresql-5-4-database_auditing-111316-1-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-azuresql/techskills-azuresql-5-4-database_auditing-111316-1-sm.jpg",
          "title": "Database Auditing",
          "transcript": "WEBVTT\n\n1\n00:00:00.118 --> 00:00:10.118\n[MUSIC]\n\n2\n00:00:11.980 --> 00:00:13.040\nAll right.\n\n3\n00:00:13.040 --> 00:00:17.150\nGreetings everyone and welcome to\nanother exciting episode of ITProTV.\n\n4\n00:00:17.150 --> 00:00:18.500\nIÂ´m your host Daniel Lowrie, and\n\n5\n00:00:18.500 --> 00:00:22.050\nin todayÂ´s epsisode we are continuing\non with our Azure SQL series.\n\n6\n00:00:22.050 --> 00:00:25.520\nAnd joining me in the studio again today\nis none other than our good friend,\n\n7\n00:00:25.520 --> 00:00:26.460\nMister Don Bizette.\n\n8\n00:00:26.460 --> 00:00:28.475\nDon welcome back to the show and\nhow are you doing today?\n\n9\n00:00:28.475 --> 00:00:30.200\n>> IÂ´m doing great Daniel,\nthanks for having me back,\n\n10\n00:00:30.200 --> 00:00:33.660\nand ready to jump right back into\nthe world of Microsoft Azure SQL.\n\n11\n00:00:33.660 --> 00:00:37.200\nIn this episode, we're gonna talk about\na topic that is, it's important and\n\n12\n00:00:37.200 --> 00:00:38.990\nunfortunately it's something that\na lot of people overlook and\n\n13\n00:00:38.990 --> 00:00:40.500\nthat's auditing, right?\n\n14\n00:00:40.500 --> 00:00:44.290\nAnd auditing is when we track all the\nactivity and events that are occurring on\n\n15\n00:00:44.290 --> 00:00:47.150\na SQL server and if you've supported\non premise of SQL servers,\n\n16\n00:00:47.150 --> 00:00:49.080\nyou know about auditing,\nyou've had to deal with it.\n\n17\n00:00:49.080 --> 00:00:52.400\nIf this is your first run at it though,\nyou might not be familiar with it.\n\n18\n00:00:52.400 --> 00:00:55.400\nIn the monitoring episode,\nwe got a chance to see events right?\n\n19\n00:00:55.400 --> 00:00:58.830\nAnd events are significant things that\nhappen as part of our Azure SQL account.\n\n20\n00:00:58.830 --> 00:01:00.630\nMicrosoft tracks those by default.\n\n21\n00:01:00.630 --> 00:01:03.310\nBut, the events don't have detailed data.\n\n22\n00:01:03.310 --> 00:01:06.210\nLike, what queries are being\nrun by what users.\n\n23\n00:01:06.210 --> 00:01:09.240\nIf there were any kind of\nerrors on the backend.\n\n24\n00:01:09.240 --> 00:01:12.390\nThose things don't normally show\nup in just the regular events\n\n25\n00:01:12.390 --> 00:01:14.710\nthat turn up in the Azure SQL\nmonitoring screens.\n\n26\n00:01:14.710 --> 00:01:16.330\nSo with auditing we can turn it on,\n\n27\n00:01:16.330 --> 00:01:20.530\nwe get a really great record of all the\nstuff that's going on behind the scenes.\n\n28\n00:01:20.530 --> 00:01:23.470\nNow it's turned off by default, and\n\n29\n00:01:23.470 --> 00:01:26.590\nit's one of those things where\nmost people don't need it.\n\n30\n00:01:26.590 --> 00:01:30.470\nYou just run like normal, you trust that\nMicrosoft is managing this server for you,\n\n31\n00:01:30.470 --> 00:01:31.740\nand everything is going great.\n\n32\n00:01:32.770 --> 00:01:35.870\nBut then when a problem occurs and\nyou start troubleshooting it, you think,\n\n33\n00:01:35.870 --> 00:01:39.380\nboy, it'd be really nice if\nI had some detailed logs.\n\n34\n00:01:39.380 --> 00:01:41.580\nI had a failure start at 4:00 PM today,\n\n35\n00:01:41.580 --> 00:01:42.810\nwhat was going on on\nthe server at 4:00 PM?\n\n36\n00:01:42.810 --> 00:01:43.630\nI don't know.\n\n37\n00:01:43.630 --> 00:01:45.970\nIf there was a way I could pull that up.\n\n38\n00:01:45.970 --> 00:01:48.960\nWell, I could turn on auditing but,\nit's too late now.\n\n39\n00:01:48.960 --> 00:01:50.490\nThe error's already occurred, right?\n\n40\n00:01:50.490 --> 00:01:52.430\nSo, it's one of those things\nthat we need to be aware of,\n\n41\n00:01:52.430 --> 00:01:55.090\nthat we need to turn it on,\nso we can use it.\n\n42\n00:01:55.090 --> 00:01:57.230\nAnd, we need to understand\nthe ramifications of that, right?\n\n43\n00:01:57.230 --> 00:01:59.910\nWhere all this data is going, and\nhow it's stored, and how we access it.\n\n44\n00:01:59.910 --> 00:02:02.620\nAnd, that's what we're gonna be\ntaking a look at in this episode.\n\n45\n00:02:02.620 --> 00:02:04.550\nHow to set up auditing, how it works,\n\n46\n00:02:04.550 --> 00:02:08.730\nhow to use the data, and to make sure that\nit's there when we actually do need it.\n\n47\n00:02:08.730 --> 00:02:10.310\n>> Yeah Don,\nyou make some valid points there.\n\n48\n00:02:10.310 --> 00:02:13.110\nIn today's day and age,\nyou have to be watching your systems.\n\n49\n00:02:13.110 --> 00:02:15.720\nAll your critical systems\nneed to be being audited so\n\n50\n00:02:15.720 --> 00:02:19.550\nthat you can see when that problem does\noccur, where can we start troubleshooting.\n\n51\n00:02:19.550 --> 00:02:22.420\nThat's what's going to help you out with\nreally give you a good point of reference\n\n52\n00:02:22.420 --> 00:02:26.320\nwhere to begin Because that's gonna\nbe the devil's in those details.\n\n53\n00:02:26.320 --> 00:02:28.550\nSo Don, I guess you really\nhit the nail on the head.\n\n54\n00:02:28.550 --> 00:02:32.020\nWe have to start by\nobviously enabling auditing\n\n55\n00:02:32.020 --> 00:02:33.260\nbecause it's turned off by default.\n\n56\n00:02:33.260 --> 00:02:35.580\nSo I guess that's where we'll begin.\n\n57\n00:02:35.580 --> 00:02:38.220\n>> Yeah, and another thing worth\npointing out that some people,\n\n58\n00:02:38.220 --> 00:02:40.540\nI say you wanna turn it on so\nyou have it when you troubleshoot.\n\n59\n00:02:40.540 --> 00:02:42.230\nBut there's other reasons to turn it on,\ntoo.\n\n60\n00:02:42.230 --> 00:02:44.020\nYou might be required.\n\n61\n00:02:44.020 --> 00:02:48.830\nIf you're common criteria certified or\ntrying to maintain HIPAA compliance,\n\n62\n00:02:48.830 --> 00:02:51.770\nyou might be required to maintain\naudit logs of your SQL Servers.\n\n63\n00:02:51.770 --> 00:02:53.800\nSo you can show who accessed data when,\n\n64\n00:02:53.800 --> 00:02:56.340\nyou can show everything that\noccurred on that server.\n\n65\n00:02:56.340 --> 00:02:59.030\nMicrosoft can't do that for\nyou, it's up to you, right.\n\n66\n00:02:59.030 --> 00:03:00.390\nSo we're gonna turn it on.\n\n67\n00:03:00.390 --> 00:03:02.090\nNow turning on auditing,\n\n68\n00:03:02.090 --> 00:03:04.980\nthe first thing we need to be\naware of is these are log files.\n\n69\n00:03:04.980 --> 00:03:07.180\nAnd in order for\nlog files to be truly secure,\n\n70\n00:03:07.180 --> 00:03:09.780\nthey can't be stored in the server itself,\nright?\n\n71\n00:03:09.780 --> 00:03:11.230\nCuz if somebody were to\nbreak into the server,\n\n72\n00:03:11.230 --> 00:03:12.940\nthey'd be able to clear the audit logs.\n\n73\n00:03:12.940 --> 00:03:17.240\nSo, they way Azure auditing works is\nit stores the logs in a storage account\n\n74\n00:03:17.240 --> 00:03:18.710\nseparate from the server.\n\n75\n00:03:18.710 --> 00:03:19.890\nNow, two reasons for that.\n\n76\n00:03:19.890 --> 00:03:21.630\nThe first reason is security\nthat I've just mentioned, right.\n\n77\n00:03:21.630 --> 00:03:24.950\nWe don't want the logs stored in the\nserver itself, somebody could clear them.\n\n78\n00:03:24.950 --> 00:03:26.510\nSo, right off the bat the logs that you\n\n79\n00:03:26.510 --> 00:03:28.300\nmoved over to a storage\naccount that's separate.\n\n80\n00:03:28.300 --> 00:03:33.420\nAnd the second thing is the logs grow,\nand they grow, and they grow.\n\n81\n00:03:33.420 --> 00:03:36.820\nAnd it can be a significant amount\nof data if you're not careful.\n\n82\n00:03:36.820 --> 00:03:40.170\nAnd so if it just grows and\ngrows and grows unchecked, well,\n\n83\n00:03:40.170 --> 00:03:42.980\nit would fill up your server storage\nin a reasonable amount of time,\n\n84\n00:03:42.980 --> 00:03:44.180\ndepending on the activity of your server.\n\n85\n00:03:44.180 --> 00:03:47.240\nThe busier your server is,\nthe faster those logs fill up.\n\n86\n00:03:47.240 --> 00:03:50.440\nSo that's another reason why we\nneed to use a storage account, so\n\n87\n00:03:50.440 --> 00:03:53.640\nit'll fill up the storage account and\nnot fill up your server.\n\n88\n00:03:53.640 --> 00:03:56.980\nBut the key thing to remember here is that\nwhen you turn on auditing, it's not a set\n\n89\n00:03:56.980 --> 00:04:00.470\nit and forget it and walk away type of\nthing, it does require some maintenance.\n\n90\n00:04:00.470 --> 00:04:04.360\nWe need to make sure that we don't just\nlet the logs grow and grow and grow and\n\n91\n00:04:04.360 --> 00:04:07.550\nthen you end up with this insane\namount of data, all right.\n\n92\n00:04:07.550 --> 00:04:12.290\nSo, step one for configuring auditing,\nis really not to do with auditing at all,\n\n93\n00:04:12.290 --> 00:04:13.820\nbut to create a storage account.\n\n94\n00:04:13.820 --> 00:04:15.570\nIf you don't already have\na storage account, you need one.\n\n95\n00:04:15.570 --> 00:04:19.070\nNow, most people already have at least\none storage account in their system, but\n\n96\n00:04:19.070 --> 00:04:20.330\nlet's just assume you don't.\n\n97\n00:04:20.330 --> 00:04:22.530\nCreating one is really easy,\nlet me show you how.\n\n98\n00:04:22.530 --> 00:04:27.300\nSo, I'm in my Azure portal right here, and\nif I just go over here to my left side\n\n99\n00:04:27.300 --> 00:04:31.620\nbar, and go down, you'll probably have\nstorage accounts already in your lists.\n\n100\n00:04:31.620 --> 00:04:35.090\nBut if not, you can just go up here to\nnew, and you can pull it up through\n\n101\n00:04:35.090 --> 00:04:38.410\nthe new wizard and I usually just\ncome in here and type, storage.\n\n102\n00:04:38.410 --> 00:04:40.060\nAnd you'll find storage\naccount right there so.\n\n103\n00:04:40.060 --> 00:04:42.230\nI'm gonna create a storage account.\n\n104\n00:04:42.230 --> 00:04:47.870\nAnd when you whip up a storage account,\nwell here it is click 20 times.\n\n105\n00:04:47.870 --> 00:04:51.700\nYou basically need to give it a name and\nsome other basic information.\n\n106\n00:04:51.700 --> 00:04:54.400\nNow, when I go to create the storage\naccount it's asking me if I want to do\n\n107\n00:04:54.400 --> 00:04:57.740\na Resource Manager account or\nClassic, right?\n\n108\n00:04:57.740 --> 00:05:00.480\nClassic goes to the storage accounts\nwe created in the Classic Portal and\n\n109\n00:05:00.480 --> 00:05:03.130\nResource Manager are those the ones\nthat we do in the New Portal.\n\n110\n00:05:04.150 --> 00:05:07.120\nThe auditing was originally\ndesigned to work on Classic but\n\n111\n00:05:07.120 --> 00:05:08.680\nit does work in the new one also.\n\n112\n00:05:08.680 --> 00:05:11.055\nSo it's kinda up to you\nwhich one you want to do.\n\n113\n00:05:11.055 --> 00:05:14.450\nI'll do Resource Manager here and\nwhen you start to create this,\n\n114\n00:05:14.450 --> 00:05:16.860\nit's just gonna ask a few more question.\n\n115\n00:05:16.860 --> 00:05:18.890\nMost importantly, a name, right.\n\n116\n00:05:18.890 --> 00:05:23.900\nSo I might wanna call this,\nitprotvauditlogs.\n\n117\n00:05:23.900 --> 00:05:29.270\nAnd it's gonna be a unique name across all\nof Azure so that's why I stuck itprotv\n\n118\n00:05:29.270 --> 00:05:32.450\nat the beginning cuz someone probably\nalready has one called auditlogs, right.\n\n119\n00:05:32.450 --> 00:05:33.920\nIt's all of Azure clients.\n\n120\n00:05:33.920 --> 00:05:38.030\nSo now I'm creating\nITProTVauditlogs.core.windows.net that\n\n121\n00:05:38.030 --> 00:05:39.480\nname is important.\n\n122\n00:05:39.480 --> 00:05:42.250\nAll of my audit logs are gonna\nget dumped into that folder.\n\n123\n00:05:42.250 --> 00:05:45.920\nIf I have third party software or\nif I just want to crack open these files\n\n124\n00:05:45.920 --> 00:05:50.840\nmyselves, myself,\nthere's only one of me [LAUGH] and\n\n125\n00:05:50.840 --> 00:05:54.240\nso then we can dive in and access that\nright here through this storage account.\n\n126\n00:05:54.240 --> 00:05:57.800\nSo I'll need to remember that name\nto be able to access it externally.\n\n127\n00:05:57.800 --> 00:06:00.030\nAnd then I can specify\nother basic information for\n\n128\n00:06:00.030 --> 00:06:02.390\nit like the resource group\nthat it's gonna go into.\n\n129\n00:06:02.390 --> 00:06:06.430\nAnd I'm gonna put in in the reasearch\ngroup with my SQL servers,\n\n130\n00:06:06.430 --> 00:06:07.080\nyou don't have to.\n\n131\n00:06:07.080 --> 00:06:09.720\nIt can really be in just\nabout any resource group.\n\n132\n00:06:09.720 --> 00:06:11.450\nBut a key thing to remember is,\n\n133\n00:06:11.450 --> 00:06:14.760\nthat for audit logging to\nwork its most efficiently,\n\n134\n00:06:14.760 --> 00:06:18.970\nyou wanna have the storage account\nin the same region as your servers.\n\n135\n00:06:18.970 --> 00:06:23.270\nSo my SQL servers that I've been\nspinning up has been in the eastus2.\n\n136\n00:06:23.270 --> 00:06:28.260\nAnd so I'm gonna pick The ITProTV SQL Demo\nkind of group here that I made,\n\n137\n00:06:28.260 --> 00:06:29.560\nbecause it's east US2.\n\n138\n00:06:29.560 --> 00:06:32.860\nBut I could also go up here to\nlike default storage east US2.\n\n139\n00:06:32.860 --> 00:06:35.660\nJust, I'm trying to keep in in\nthe same region as my servers.\n\n140\n00:06:37.670 --> 00:06:40.790\nAnd so I'll just pick that\none that already exists.\n\n141\n00:06:40.790 --> 00:06:43.740\nAnd so, now we've got that and\nno need to pin it to the dashboard.\n\n142\n00:06:43.740 --> 00:06:45.940\nWe'll create it and\nthat should be all that it needs.\n\n143\n00:06:45.940 --> 00:06:47.390\nAnd once that's done,\n\n144\n00:06:47.390 --> 00:06:50.600\nI'll have a storage account where\nI can start to place my data.\n\n145\n00:06:50.600 --> 00:06:57.270\nNow, after that I need to turn on auditing\nand tell it the storage account to use.\n\n146\n00:06:57.270 --> 00:07:00.880\nNow, when I turn on auditing, there's\ntwo places I can turn on auditing and\n\n147\n00:07:00.880 --> 00:07:02.320\nyou probably wanna do both.\n\n148\n00:07:02.320 --> 00:07:07.600\nThere's auditing at the server level and\nthere's auditing at the database level.\n\n149\n00:07:07.600 --> 00:07:09.430\nDatabase level that's where\nall the action occurs.\n\n150\n00:07:09.430 --> 00:07:11.680\nThat's where the really\nimportant stuff is gonna happen.\n\n151\n00:07:11.680 --> 00:07:15.030\nThe server level,\nthat's where we can monitor connections,\n\n152\n00:07:15.030 --> 00:07:18.980\nwe can monitor for back end errors, but\nthat's the stuff Microsoft is supporting.\n\n153\n00:07:18.980 --> 00:07:21.942\nSo if you don't trust Microsoft,\nmonitor the server side,\n\n154\n00:07:21.942 --> 00:07:23.868\nyou'll be able to catch that, right.\n\n155\n00:07:23.868 --> 00:07:27.232\nBut if you're monitoring for\nintrusions, inappropriate access,\n\n156\n00:07:27.232 --> 00:07:30.260\nalmost all of that's gonna\ncome on the database side.\n\n157\n00:07:30.260 --> 00:07:33.379\nBut my recommendation is to go ahead and\nturn them both on, right.\n\n158\n00:07:33.379 --> 00:07:36.848\nIt doesn't hurt, go ahead and get them\nboth running and that way you've got both\n\n159\n00:07:36.848 --> 00:07:39.618\nyour bases covered in the event\nthat you need that data, right.\n\n160\n00:07:39.618 --> 00:07:41.948\nSo there my storage account\njust finished creating, so\n\n161\n00:07:41.948 --> 00:07:45.380\nI've got that resource group was deployed,\nand I've now got a storage account.\n\n162\n00:07:45.380 --> 00:07:46.570\nVery exciting.\n\n163\n00:07:46.570 --> 00:07:48.300\nAll right, so\nnext I wanna turn on the auditing.\n\n164\n00:07:48.300 --> 00:07:49.219\nI'll start with server, right?\n\n165\n00:07:49.219 --> 00:07:52.131\nSo for the server,\nI'm gonna go down here to SQL servers, and\n\n166\n00:07:52.131 --> 00:07:53.420\nI'm gonna find my server.\n\n167\n00:07:53.420 --> 00:07:55.541\nHere's itprovdemo1.\n\n168\n00:07:55.541 --> 00:08:00.006\nAnd when I go into the server settings\nWe're gonna find over here on\n\n169\n00:08:00.006 --> 00:08:02.728\nthe right side that it's got auditing.\n\n170\n00:08:02.728 --> 00:08:04.680\nSo, auditing is just\nan option I an choose it.\n\n171\n00:08:04.680 --> 00:08:07.620\nAnd then we can go in and there's\nreally only a few little settings here.\n\n172\n00:08:07.620 --> 00:08:08.900\nIt's not much, right.\n\n173\n00:08:08.900 --> 00:08:11.550\nSo the first little warning\nit give same though,\n\n174\n00:08:11.550 --> 00:08:16.500\ndown level clients require the use of\nsecurity level connection strengths.\n\n175\n00:08:16.500 --> 00:08:18.240\nWell, what's that about, right?\n\n176\n00:08:18.240 --> 00:08:24.300\nWell, what it's saying is, if I turn on\nauditing, I'm recording this traffic.\n\n177\n00:08:24.300 --> 00:08:28.300\nAnd the way that traffic gets recorded\nis through using a secure connection.\n\n178\n00:08:28.300 --> 00:08:32.210\nIf you're running the SQL native client,\nI believe it's 10.0 and\n\n179\n00:08:32.210 --> 00:08:33.240\nhigher, 11 is current.\n\n180\n00:08:33.240 --> 00:08:36.660\nBut they'll use that secure connection and\nit's no big deal.\n\n181\n00:08:36.660 --> 00:08:39.460\nBut if you got older clients on\nthe network, they might try and\n\n182\n00:08:39.460 --> 00:08:42.120\nconnect unsecurely first and\nthat can cause some problems.\n\n183\n00:08:42.120 --> 00:08:43.640\nAnd Microsoft has put out patches for\nthat so\n\n184\n00:08:43.640 --> 00:08:45.150\nthe solution is just to\nupdate your clients.\n\n185\n00:08:45.150 --> 00:08:48.290\nBut that's kinda what that warning is, is\nthat you may actually run into some issues\n\n186\n00:08:48.290 --> 00:08:51.450\nwith those down level clients connecting\nif they haven't been patched.\n\n187\n00:08:52.510 --> 00:08:53.990\nAnd then I can turn my auditing on, so\n\n188\n00:08:53.990 --> 00:08:56.670\nit's off by default,\nI can just turn it on.\n\n189\n00:08:56.670 --> 00:08:59.770\nAnd now it's asking for\nthe storage details.\n\n190\n00:08:59.770 --> 00:09:01.220\nWhere am I gonna put this data?\n\n191\n00:09:01.220 --> 00:09:02.360\nThey're log files.\n\n192\n00:09:02.360 --> 00:09:03.230\nThey're text files.\n\n193\n00:09:03.230 --> 00:09:07.090\nThey can get kind of big, just because\nof the amount of data they collect.\n\n194\n00:09:07.090 --> 00:09:08.650\nBut they are just tech files\nat the end of the day.\n\n195\n00:09:08.650 --> 00:09:12.440\nAnd if I choose\nConfigure My Storage Details over here,\n\n196\n00:09:12.440 --> 00:09:14.470\nI could pick my storage account.\n\n197\n00:09:14.470 --> 00:09:18.280\nAnd when I pick the storage account,\nthis is where I can jump in and\n\n198\n00:09:18.280 --> 00:09:21.580\nthere's the itprotvauditlogs that\nwe specified a minute ago, and\n\n199\n00:09:21.580 --> 00:09:25.350\nI've got itprotvdemostorage I created\nearlier for another show, and\n\n200\n00:09:25.350 --> 00:09:27.240\napparently I put it in west us.\n\n201\n00:09:27.240 --> 00:09:30.310\nSo notice how it's a classic,\nversus this one that's a new one.\n\n202\n00:09:30.310 --> 00:09:33.280\nSo it supports both, it was originally\nwritten to work with classic, so\n\n203\n00:09:33.280 --> 00:09:35.230\nit would make sense that\nit would work with both.\n\n204\n00:09:35.230 --> 00:09:37.750\nI'll choose the new one that I just made.\n\n205\n00:09:37.750 --> 00:09:40.700\nSo now it's got a place to store data,\nand then the retention.\n\n206\n00:09:42.350 --> 00:09:47.448\nThe default retention is zero,\nand if you leave it there.\n\n207\n00:09:47.448 --> 00:09:51.860\nRight, see how it says the actual\nretention period may be longer by up to 30\n\n208\n00:09:51.860 --> 00:09:57.460\ndays than the configured value period zero\nis an indication for no retention, right?\n\n209\n00:09:57.460 --> 00:10:02.670\nSo in some software we put zero that means\nit just keeps things forever, right?\n\n210\n00:10:02.670 --> 00:10:03.800\nBut not here,\n\n211\n00:10:03.800 --> 00:10:07.780\nhere it means effectively don't store\nlogs which is somewhat pointless, right?\n\n212\n00:10:07.780 --> 00:10:11.290\nI am not entirely sure why\nwe've even had that option but\n\n213\n00:10:11.290 --> 00:10:13.300\nyou can specify how many\ndays you wanna retain this.\n\n214\n00:10:13.300 --> 00:10:16.880\nUnderstand that your log files grow and\nyou don't want to\n\n215\n00:10:16.880 --> 00:10:20.750\nhave the storage account fill up and\nrun out of space and just be a waste.\n\n216\n00:10:20.750 --> 00:10:24.010\nBut at the same time, when a problem\noccurs you need to think about\n\n217\n00:10:24.010 --> 00:10:27.010\nhow long it takes you to\nbecome aware of the problem.\n\n218\n00:10:27.010 --> 00:10:27.610\nRight?\n\n219\n00:10:27.610 --> 00:10:31.580\nSo if this is a SQL server that I\nhave tens of thousands of users in,\n\n220\n00:10:31.580 --> 00:10:35.070\nevery single day,\nthis had just a ton of access and\n\n221\n00:10:35.070 --> 00:10:38.600\na problem happens, I'll probably\nfind out pretty quick, won't I?\n\n222\n00:10:38.600 --> 00:10:42.020\nSo really just a day or two of\nauditing logs is probably all I need.\n\n223\n00:10:42.020 --> 00:10:46.490\nBut if this is a database that sees light\naccess, maybe people only use it once\n\n224\n00:10:46.490 --> 00:10:50.080\na month, a problem might occur and\nI might not know it for weeks.\n\n225\n00:10:50.080 --> 00:10:53.670\nAnd so I need to make sure that\nmy retention period is big enough\n\n226\n00:10:53.670 --> 00:10:54.650\nto handle that.\n\n227\n00:10:54.650 --> 00:10:58.825\nAnd you'll see we can set it to,\nit's about nine years, I think.\n\n228\n00:10:58.825 --> 00:11:02.640\n3,285 days,\nthat's a pretty long retention period.\n\n229\n00:11:02.640 --> 00:11:06.080\nI usually like something closer to 30,\nand so I can specify it in here.\n\n230\n00:11:06.080 --> 00:11:08.730\nNow, what if you want it to be longer?\n\n231\n00:11:10.040 --> 00:11:13.710\nWell, what they're saying here is they'll\nstore it in the storage account for\n\n232\n00:11:13.710 --> 00:11:14.700\nup to 30 days.\n\n233\n00:11:14.700 --> 00:11:17.860\nBut you can connect to the storage account\nand copy the data down to your own\n\n234\n00:11:17.860 --> 00:11:21.200\nservers, and then you can have\nit as long as you want, right?\n\n235\n00:11:21.200 --> 00:11:23.650\nSo you can have an infinite\nretention period if you want,\n\n236\n00:11:23.650 --> 00:11:25.910\njust not in a storage account, right?\n\n237\n00:11:25.910 --> 00:11:28.660\nAnd if you've never gotten data out of\na storage account, they don't necessarily\n\n238\n00:11:28.660 --> 00:11:32.510\nmake it that easy, but there's a lot of\ngreat third party software out there.\n\n239\n00:11:32.510 --> 00:11:34.440\nThere's the Azure storage explorer,\n\n240\n00:11:34.440 --> 00:11:38.390\nthere's Cloudberry\nexplorer is another one.\n\n241\n00:11:38.390 --> 00:11:41.910\nOn a Mac, you have like CyberDuck and\nsome of those guys.\n\n242\n00:11:41.910 --> 00:11:44.550\nThere's several different programs\nout there that can connect,\n\n243\n00:11:44.550 --> 00:11:47.780\nI use one called Expand Drive,\nand they let you connect up\n\n244\n00:11:47.780 --> 00:11:51.040\nto the storage accounts and just copy\nthe data down to your own servers, and\n\n245\n00:11:51.040 --> 00:11:52.430\nfrom there you can retain\nit as long as you want.\n\n246\n00:11:54.162 --> 00:11:57.370\nAll right, then I need to give it an audit\nlog name, now notice how it defaulted to\n\n247\n00:11:57.370 --> 00:12:00.650\nmy server name this is server level\nauditing that I'm turning on.\n\n248\n00:12:00.650 --> 00:12:04.060\nAnd so if I've got five SQL servers,\nI wanna turn on auditing for each one.\n\n249\n00:12:04.060 --> 00:12:05.470\nI need to be able to tell the logs apart.\n\n250\n00:12:05.470 --> 00:12:06.960\nAnd there's two ways to do that.\n\n251\n00:12:06.960 --> 00:12:09.870\nOne is to give it a table name\nhere that matches the server name.\n\n252\n00:12:09.870 --> 00:12:11.460\nSo now they're separate tables.\n\n253\n00:12:11.460 --> 00:12:14.720\nThe other one is I can use separate\nstorage accounts for each server and\n\n254\n00:12:14.720 --> 00:12:16.610\nthen I can tell them apart that way too.\n\n255\n00:12:16.610 --> 00:12:18.610\nBut usually just one storage account and\n\n256\n00:12:18.610 --> 00:12:21.230\nseparating the servers by\nname is what solves it.\n\n257\n00:12:21.230 --> 00:12:23.165\nand notice how it says Table Name.\n\n258\n00:12:23.165 --> 00:12:25.750\nRight.\nWhen we store our data in a storage\n\n259\n00:12:25.750 --> 00:12:28.330\naccount, there's four different\nforms that we can store it in.\n\n260\n00:12:28.330 --> 00:12:30.030\nAnd we normally store it as a File Blob.\n\n261\n00:12:30.030 --> 00:12:32.640\nA File Blob is just like a text\nfile that you can get, but\n\n262\n00:12:32.640 --> 00:12:34.780\nhere it's gonna store it as a table.\n\n263\n00:12:34.780 --> 00:12:37.690\nAnd a table you can actually\nquery against this data,\n\n264\n00:12:37.690 --> 00:12:39.030\nwhile it's in the storage account.\n\n265\n00:12:39.030 --> 00:12:40.720\nYou can do it through the Azure API.\n\n266\n00:12:40.720 --> 00:12:43.570\nSo, it's kind a neat that you\nhave that extra functionality.\n\n267\n00:12:43.570 --> 00:12:47.140\nSo itÂ´s gonna create an audit log and itÂ´s\ngonna be names the table will be named\n\n268\n00:12:47.140 --> 00:12:51.600\nafter the server, and then following\nthe year, month and day attached to it.\n\n269\n00:12:53.200 --> 00:12:55.230\nAnd then which storage\naccess key itÂ´s gonna use.\n\n270\n00:12:55.230 --> 00:12:57.040\nWhen you create a storage account.\n\n271\n00:12:57.040 --> 00:12:59.930\nIf you haven't watched your episode on\nstorage, definitely check that one out.\n\n272\n00:12:59.930 --> 00:13:02.630\nYou have these storage keys you\nuse to access it through the API,\n\n273\n00:13:02.630 --> 00:13:04.370\nand you have a primary and a secondary.\n\n274\n00:13:04.370 --> 00:13:07.560\nAnd it's just saying which key do\nwe want to be tied to this table?\n\n275\n00:13:07.560 --> 00:13:09.740\nSo if somebody's gonna access it,\nwhich of these keys do they use?\n\n276\n00:13:11.000 --> 00:13:14.830\nI'll leave it the primary,\nand then we'll say OK.\n\n277\n00:13:14.830 --> 00:13:17.470\nAnd that should be all it needs for\nstorage.\n\n278\n00:13:17.470 --> 00:13:21.970\nThe last thing that I have to provide\nit is which events I want to audit, and\n\n279\n00:13:21.970 --> 00:13:23.560\nthe default is all.\n\n280\n00:13:23.560 --> 00:13:26.660\nUsually if you're gonna turn on\nauditing you want to audit everything.\n\n281\n00:13:26.660 --> 00:13:28.710\nThat's kinda the point, right?\n\n282\n00:13:28.710 --> 00:13:30.660\nBut, you may not care about everything.\n\n283\n00:13:30.660 --> 00:13:32.450\nYou may wanna be a little more specific.\n\n284\n00:13:32.450 --> 00:13:35.060\nYou may, for example,\njust be concerned with log ins.\n\n285\n00:13:35.060 --> 00:13:35.780\nRight.\n\n286\n00:13:35.780 --> 00:13:39.000\nAnd here's a little real world tip for\nyou.\n\n287\n00:13:39.000 --> 00:13:43.900\nYou can always spot people who are new\nto IT security by how they audit logins.\n\n288\n00:13:43.900 --> 00:13:44.540\nRight.\n\n289\n00:13:44.540 --> 00:13:47.560\nI see this all the time\nwhere I'll go somewhere and\n\n290\n00:13:47.560 --> 00:13:50.980\nthey've turned on login auditing for\nfailures.\n\n291\n00:13:50.980 --> 00:13:53.690\nThey're like yeah, I wanna know\nwhen somebody's trying to break in.\n\n292\n00:13:53.690 --> 00:13:57.920\nAnd I always ask the question okay so,\nyou saw an event message that said,\n\n293\n00:13:57.920 --> 00:14:01.180\nsomebody tried to login and\nit failed, what do you do about that?\n\n294\n00:14:02.680 --> 00:14:05.250\nNothing, it failed,\nthat means your system worked.\n\n295\n00:14:05.250 --> 00:14:07.460\nSomebody tried to get in and it failed.\n\n296\n00:14:07.460 --> 00:14:11.600\nA failed login is actually a good thing,\nit means they didn't get in.\n\n297\n00:14:11.600 --> 00:14:15.240\nA successful login,\nthat's the dangerous one, right.\n\n298\n00:14:15.240 --> 00:14:19.230\nIf somebody successfully logs in, now\nthey can access your tables and data and\n\n299\n00:14:19.230 --> 00:14:20.440\nstart messing with things.\n\n300\n00:14:20.440 --> 00:14:22.030\nThat's the one you need to watch.\n\n301\n00:14:22.030 --> 00:14:23.850\nIf I have data go missing.\n\n302\n00:14:23.850 --> 00:14:25.450\nMissing on my database.\n\n303\n00:14:25.450 --> 00:14:29.290\nI don't wanna know who failed the log in,\nI want to know who succeeded to log in.\n\n304\n00:14:29.290 --> 00:14:33.650\nAnd so that's a concept that a lot of\npeople miss for whatever reason, but\n\n305\n00:14:33.650 --> 00:14:36.980\nthe successful log ins are something\nyou definitely want to log.\n\n306\n00:14:36.980 --> 00:14:37.910\nYou want to audit that.\n\n307\n00:14:37.910 --> 00:14:41.870\n>> And being able to look back to those\nlogs and see fail, fail, fail, fail,\n\n308\n00:14:41.870 --> 00:14:44.480\nsuccess\n>> Kinda lets you know whether or\n\n309\n00:14:44.480 --> 00:14:47.080\nnot that person that had\nfailed all those logins\n\n310\n00:14:47.080 --> 00:14:49.780\nwas eventually successful\nat getting access.\n\n311\n00:14:49.780 --> 00:14:52.140\nSo doing both is usually the better idea.\n\n312\n00:14:52.140 --> 00:14:55.370\n>> Yeah the brute force attempt\nall of a sudden ends and\n\n313\n00:14:55.370 --> 00:14:59.090\nyou're like ooh did they give up or,\nno they wanna.\n\n314\n00:14:59.090 --> 00:15:01.990\nSo that one's pretty\nimportant definitely logins.\n\n315\n00:15:01.990 --> 00:15:07.400\nThe other ones though, you've got plain\nSQL so when people just ran queries\n\n316\n00:15:07.400 --> 00:15:11.980\nwhere everything was contain inside of the\nsingle query, there's parameterized SQL,\n\n317\n00:15:11.980 --> 00:15:15.490\nwhere it was programatically and it had\na various variables that were fed into it.\n\n318\n00:15:15.490 --> 00:15:19.680\nWe've got stored procedures, where\nthe query was stored on the server, and\n\n319\n00:15:19.680 --> 00:15:22.550\nsomebody executed the stored query, right?\n\n320\n00:15:22.550 --> 00:15:24.540\nAnd then we've got transaction management.\n\n321\n00:15:24.540 --> 00:15:28.280\nWhen somebody started a transaction,\nrolled back a transaction,\n\n322\n00:15:28.280 --> 00:15:31.790\ncreated checkpoints without a transaction,\nthat stuff gets logged too.\n\n323\n00:15:31.790 --> 00:15:35.340\nAll of these center around\npeople performing actions\n\n324\n00:15:35.340 --> 00:15:37.350\nthat affect the server, right?\n\n325\n00:15:37.350 --> 00:15:41.190\nAnd that's a key point, this is all at\nthe server level, not the database level,\n\n326\n00:15:41.190 --> 00:15:44.550\nright, I'm doing this at the server,\nwe'll see database in just a moment.\n\n327\n00:15:44.550 --> 00:15:47.980\nSo I'm going to leave it at all, right,\njust leave it at all, it's going to\n\n328\n00:15:47.980 --> 00:15:51.816\nconfigure it and monitor all those events\n>> And\n\n329\n00:15:51.816 --> 00:15:54.366\nnow I've got everything\nset the way I need it.\n\n330\n00:15:54.366 --> 00:15:57.070\nI'll go ahead and save that as my default.\n\n331\n00:15:57.070 --> 00:15:59.903\nAnd that's gonna set my audit logging,\nand there we go.\n\n332\n00:15:59.903 --> 00:16:01.350\n>> Real quick question, Don.\n\n333\n00:16:01.350 --> 00:16:04.827\nYou said we're, obviously,\nwe're auditing the server level and\n\n334\n00:16:04.827 --> 00:16:07.760\nyou said some people will\nturn on some auditing.\n\n335\n00:16:07.760 --> 00:16:10.429\nObviously we're turning on all auditing,\nbetter way to go.\n\n336\n00:16:10.429 --> 00:16:14.402\nCan I do two audit logs for\nthe same server, one doing everything and\n\n337\n00:16:14.402 --> 00:16:16.572\nthe other one kind of filtered down?\n\n338\n00:16:17.880 --> 00:16:19.578\n>> Not really.\n\n339\n00:16:19.578 --> 00:16:21.849\nThere is a way to do that, it's not\nofficially supported by Microsoft so\n\n340\n00:16:21.849 --> 00:16:22.794\nI don't want to dive into it.\n\n341\n00:16:22.794 --> 00:16:27.050\nBut for the official way here you just\nhave the one set of audits, right?\n\n342\n00:16:27.050 --> 00:16:31.140\nAnd so you go ahead and audit everything\nand then once you get the data,\n\n343\n00:16:31.140 --> 00:16:34.938\nyou're welcome to pair that down and\nfilter it however you want.\n\n344\n00:16:34.938 --> 00:16:37.330\nIn fact,\nI'm kinda glad you mentioned it so\n\n345\n00:16:38.700 --> 00:16:42.440\nI'm gonna show you guys how to view\nthis event data, but the reality is\n\n346\n00:16:42.440 --> 00:16:46.110\nthat Microsoft doesn't truly have a great\nway for you to view the event data.\n\n347\n00:16:46.110 --> 00:16:50.080\nI know that sounds funny, but what they\ndid is they basically set up a system\n\n348\n00:16:50.080 --> 00:16:53.210\nwhere your data goes\ninto a storage account.\n\n349\n00:16:53.210 --> 00:16:56.590\nAnd then you can download the data\nfrom the storage account and\n\n350\n00:16:56.590 --> 00:16:58.550\nyou can do whatever you want with it.\n\n351\n00:16:58.550 --> 00:17:02.720\nOr Microsoft has actually released\nan Excel spreadsheet template\n\n352\n00:17:02.720 --> 00:17:07.130\nthat you can use and feed the logs into\nthat template and render it for filtering.\n\n353\n00:17:07.130 --> 00:17:11.930\nAnd I'll post the link in the show notes,\nbut this is their official page for it.\n\n354\n00:17:11.930 --> 00:17:16.890\nSo what they say is, you can view your log\nfiles using the Azure Storage Explorer.\n\n355\n00:17:16.890 --> 00:17:20.160\nAnd then you're looking at the raw log\nfiles, which, let me tell you, it's so\n\n356\n00:17:20.160 --> 00:17:22.050\nmuch data, it's overwhelming, right?\n\n357\n00:17:22.050 --> 00:17:24.800\nYou really need third party\nsoftware to interpret these.\n\n358\n00:17:24.800 --> 00:17:27.280\nBut then they have an Excel\nspreadsheet that you can download.\n\n359\n00:17:27.280 --> 00:17:30.120\nAnd, when you download that,\nyou can fire up Power Query,\n\n360\n00:17:30.120 --> 00:17:35.550\nwhich is a part of Excel, and it can\nbasically use the logs as a database.\n\n361\n00:17:35.550 --> 00:17:39.870\nAnd the way they built the spreadsheet\nyou can run right through here and\n\n362\n00:17:39.870 --> 00:17:44.250\nchoose which database you wanna view,\nthe principle that you're monitoring,\n\n363\n00:17:44.250 --> 00:17:47.790\nthe application, the event type,\nthe action status, right?\n\n364\n00:17:47.790 --> 00:17:52.600\nYou can pick and say I wanna see log\nin failures or log in successes and\n\n365\n00:17:52.600 --> 00:17:54.930\nthen in Excel that's all you'll see.\n\n366\n00:17:54.930 --> 00:17:58.290\nYou'll just see what it is that\nyou've filtered and chose.\n\n367\n00:17:58.290 --> 00:18:02.710\nSo if you're wanting to create more than\none view of those logs, it's better to do\n\n368\n00:18:02.710 --> 00:18:07.090\nthat on your own system than to try and\nretrofit that up inside of Azure.\n\n369\n00:18:07.090 --> 00:18:08.740\nIt's a bit of a nightmare to do up there.\n\n370\n00:18:08.740 --> 00:18:11.010\nSo this is the kind of\nsolution that's available.\n\n371\n00:18:11.010 --> 00:18:12.960\nNow, this is just an Excel spreadsheet.\n\n372\n00:18:12.960 --> 00:18:15.450\nI don't think Microsoft actually\nintends anybody to use this as their\n\n373\n00:18:15.450 --> 00:18:16.350\nproduction solution.\n\n374\n00:18:16.350 --> 00:18:18.015\nIt's not necessarily convenient.\n\n375\n00:18:18.015 --> 00:18:20.170\nBut there's plenty of third-party\nsoftware out there that you\n\n376\n00:18:20.170 --> 00:18:21.150\ncan use to leverage this.\n\n377\n00:18:22.440 --> 00:18:25.400\nSo that is one way that\nwe can view that data.\n\n378\n00:18:25.400 --> 00:18:29.850\nAll right, so what we've seen here is\nturning on the server event login,\n\n379\n00:18:29.850 --> 00:18:31.660\nwhat about the database side?\n\n380\n00:18:31.660 --> 00:18:34.460\nWell, the database side actually has a few\nextra bells and whistles from what we saw\n\n381\n00:18:34.460 --> 00:18:38.370\non the server, so I wanna walk you through\nthat process, but it's largely the same.\n\n382\n00:18:38.370 --> 00:18:42.290\nSo, if we wanna turn on database\nauditing we jump into our SQL databases.\n\n383\n00:18:43.340 --> 00:18:46.320\nAnd on our SQL databases we pick\nthe database we want to audit, so\n\n384\n00:18:46.320 --> 00:18:48.350\nI'll audit SampleDB2.\n\n385\n00:18:48.350 --> 00:18:49.570\nSo when I pick SampleDB2 and\n\n386\n00:18:49.570 --> 00:18:54.240\nI go into its settings, over here on\nthe right side I'll find Auditing.\n\n387\n00:18:54.240 --> 00:18:59.930\nNow, on a database it's actually\nAuditing & Threat detection.\n\n388\n00:18:59.930 --> 00:19:01.380\nSo what is that?\n\n389\n00:19:01.380 --> 00:19:02.830\nWell we know what auditing is, right?\n\n390\n00:19:02.830 --> 00:19:05.580\nAuditing, that's where we're recording all\nthe various activities that are occurring\n\n391\n00:19:05.580 --> 00:19:08.300\non the server and that looks the same.\n\n392\n00:19:08.300 --> 00:19:10.420\nLooks just the same as it\ndid on the server side and\n\n393\n00:19:10.420 --> 00:19:13.120\nit's configured the same as it\nwas on the server side, right?\n\n394\n00:19:13.120 --> 00:19:16.880\nBut what's different is this guy right\ndown here at the bottom, threat detection.\n\n395\n00:19:16.880 --> 00:19:20.390\nIt's a preview feature right now that\nwe can choose to turn on if we want.\n\n396\n00:19:20.390 --> 00:19:21.890\nIt's off by default.\n\n397\n00:19:21.890 --> 00:19:27.070\nAnd if we turn it on, SQL servers\nare a prime candidate for attack.\n\n398\n00:19:27.070 --> 00:19:29.920\nIf you're a hacker out\nthere on the Internet\n\n399\n00:19:29.920 --> 00:19:32.420\nthe holy grail of hacking is a database.\n\n400\n00:19:32.420 --> 00:19:34.525\nThat's where you can get tons\nof information on people.\n\n401\n00:19:34.525 --> 00:19:36.445\nWhen you turn around and\nsell it on the black-market.\n\n402\n00:19:36.445 --> 00:19:39.195\nSo Microsoft knows that people\ntarget these databases.\n\n403\n00:19:39.195 --> 00:19:41.995\nAnd there's really just a handful\nof attacks that are used\n\n404\n00:19:41.995 --> 00:19:44.685\nvery commonly against database servers.\n\n405\n00:19:44.685 --> 00:19:48.345\nThings like SQL injection attacks and\nother port exploits.\n\n406\n00:19:48.345 --> 00:19:51.815\nAnd so Microsoft knows about those,\nand so they can turn this on, or\n\n407\n00:19:51.815 --> 00:19:55.760\nyou can turn it on, and now Microsoft\nwill watch for those attacks and\n\n408\n00:19:55.760 --> 00:19:57.910\nstop them before they get to your server.\n\n409\n00:19:57.910 --> 00:20:00.930\nSo it's an extra level of\nprotection on the system.\n\n410\n00:20:00.930 --> 00:20:05.130\nBut the way that it works\nis by using the audit logs.\n\n411\n00:20:05.130 --> 00:20:08.820\nAnd so unless you've turned on auditing,\nthreat detection can't work.\n\n412\n00:20:08.820 --> 00:20:11.710\nSo you gotta turn on auditing first and\nthen you can turn on threat detection.\n\n413\n00:20:11.710 --> 00:20:12.810\nSo it's a great feature.\n\n414\n00:20:12.810 --> 00:20:16.780\nIt's a feature that I think should really\nbe on for everybody's SQL account.\n\n415\n00:20:16.780 --> 00:20:20.980\nBut because it requires auditing, and\nauditing's off by default, it's off too.\n\n416\n00:20:20.980 --> 00:20:23.040\nSo we kinda have to remember\nto turn both of these on.\n\n417\n00:20:23.040 --> 00:20:24.290\nSo kind of a cool feature.\n\n418\n00:20:25.650 --> 00:20:30.000\nAll right, now keep in mind that\nwhen we configure database auditing,\n\n419\n00:20:30.000 --> 00:20:32.340\nthis is very similar to some of\nthe things we've seen in other episodes.\n\n420\n00:20:32.340 --> 00:20:38.560\nWhere if I back this database up and I\nrestore it to another server, the database\n\n421\n00:20:38.560 --> 00:20:43.540\nauditing settings will follow it, right,\nversus the server auditing functions.\n\n422\n00:20:43.540 --> 00:20:46.430\nIf I move a database to another\nserver it might have different\n\n423\n00:20:46.430 --> 00:20:48.300\nserver level auditing that occurs.\n\n424\n00:20:48.300 --> 00:20:51.510\nSo, database auditing is usually a little\nmore reliable cuz it follows that database\n\n425\n00:20:51.510 --> 00:20:52.280\nno matter where we move it.\n\n426\n00:20:52.280 --> 00:20:55.360\nAnd when we turn it on\nwe just come up here.\n\n427\n00:20:55.360 --> 00:21:01.010\nAnd it's actually got inherent\nauditing settings from the server.\n\n428\n00:21:01.010 --> 00:21:05.420\nSo it's gonna pull those settings from\nthe server to configure it and turn it on.\n\n429\n00:21:05.420 --> 00:21:07.121\nSee how I can't click on these things.\n\n430\n00:21:07.121 --> 00:21:09.954\nWell, it's actually\nshowing as off right now.\n\n431\n00:21:09.954 --> 00:21:10.813\nWhy is that?\n\n432\n00:21:10.813 --> 00:21:14.260\nWell I turned auditing on, on the server.\n\n433\n00:21:14.260 --> 00:21:17.520\nBut it hasn't had time to\ntrickle down to this database.\n\n434\n00:21:17.520 --> 00:21:20.810\nIf I wait long enough eventually it\nwill turn on, but I'm an impatient sort.\n\n435\n00:21:20.810 --> 00:21:23.600\nSo I'm gonna turn that off so I can just\nconfigure it right here on the database.\n\n436\n00:21:23.600 --> 00:21:26.230\nAnd to be honest with you guys,\nI like to this anyway.\n\n437\n00:21:26.230 --> 00:21:29.200\nI like to configure it here on\nthe database because I want this to\n\n438\n00:21:29.200 --> 00:21:33.760\nfollow the database wherever I move it\nto so I normally turn that option off.\n\n439\n00:21:33.760 --> 00:21:35.542\nAnd so I'm going to turn auditing on and\n\n440\n00:21:35.542 --> 00:21:39.450\nsee how it already knew to use\nITProTV auto logs, because\n\n441\n00:21:39.450 --> 00:21:44.030\nthat setting came over from the server,\nand the audit events are set to all, and\n\n442\n00:21:44.030 --> 00:21:47.800\nagain it came from the server, and when\nI look over here I'll see the same basic\n\n443\n00:21:47.800 --> 00:21:50.910\nthings that I can monitor just like\nwe saw at the server level, right?\n\n444\n00:21:50.910 --> 00:21:52.890\nIt's not really a whole heck\nof a lot of difference there.\n\n445\n00:21:54.090 --> 00:21:57.120\nNow, I can turn on that threat detection.\n\n446\n00:21:57.120 --> 00:22:01.440\nI can flip that to on and I can set\nan email address for it to email.\n\n447\n00:22:01.440 --> 00:22:04.200\nSo I'll have it send email to me.\n\n448\n00:22:04.200 --> 00:22:07.126\nBy default it's going to email service and\nco-administrators.\n\n449\n00:22:07.126 --> 00:22:11.500\nSo it will email the other administrators\nI have on the account too or\n\n450\n00:22:11.500 --> 00:22:14.470\nI could list them here if I wanted.\n\n451\n00:22:14.470 --> 00:22:17.250\nI'll say okay to that and\nthen we'll hit save.\n\n452\n00:22:17.250 --> 00:22:21.400\nAnd now auditing is turned on right\nhere for the individual database.\n\n453\n00:22:21.400 --> 00:22:25.030\nAnd if I back this database up and\nI restore it somewhere else well,\n\n454\n00:22:25.030 --> 00:22:27.620\nnow those settings follow it along and\nit'll continue to audit.\n\n455\n00:22:29.660 --> 00:22:33.485\nNow once it's auditing as people\nstart to work in the server,\n\n456\n00:22:33.485 --> 00:22:36.020\nit's now recording those events,\nit's keeping a record of that and\n\n457\n00:22:36.020 --> 00:22:38.590\nit's being put into that storage account,\nwhich is great.\n\n458\n00:22:39.910 --> 00:22:43.030\nBut if you wanna see it,\nits kind of hold the way and\n\n459\n00:22:43.030 --> 00:22:46.240\nwe know Microsoft says we can download and\nuse third party software, that's great.\n\n460\n00:22:46.240 --> 00:22:49.450\nBut you actually can see\na little bit of it right here.\n\n461\n00:22:49.450 --> 00:22:51.310\nSee the Explorer icon I've got up here?\n\n462\n00:22:51.310 --> 00:22:52.780\nYou don't have that at the server level.\n\n463\n00:22:52.780 --> 00:22:54.750\nAt the server level,\nyou can't explore the audit logs.\n\n464\n00:22:54.750 --> 00:22:58.830\nI'm not sure why that is, but on the\ndatabase you can, and when you hit that\n\n465\n00:22:58.830 --> 00:23:03.940\nExplorer, you're gonna see the audit\nlogs for this database specifically,\n\n466\n00:23:03.940 --> 00:23:07.060\nnot the other databases that\nmight be on this server also.\n\n467\n00:23:07.060 --> 00:23:09.545\nAnd so when I go in here well I'm\ngetting no autologs found and\n\n468\n00:23:09.545 --> 00:23:11.280\nthat's cuz I just turned them on.\n\n469\n00:23:11.280 --> 00:23:15.030\nIt can take up to five minutes before\nit to actually start logging and\n\n470\n00:23:15.030 --> 00:23:17.910\nthen even after five minutes we\nthen have to have some activity.\n\n471\n00:23:17.910 --> 00:23:20.380\nSomebody's gotta do some\nstuff with the database and\n\n472\n00:23:20.380 --> 00:23:22.510\nI'm not really doing anything on mine.\n\n473\n00:23:22.510 --> 00:23:27.720\nSo if I jump back to like my SQL\nmanagement studio here I can browse into\n\n474\n00:23:27.720 --> 00:23:29.530\nwhat database was that,\nI wasn't paying attention.\n\n475\n00:23:29.530 --> 00:23:30.638\nLet's see, this is.\n\n476\n00:23:30.638 --> 00:23:32.531\n>> [LAUGH]\n>> This is why you don't let me work on\n\n477\n00:23:32.531 --> 00:23:33.516\nproduction systems, isn't it?\n\n478\n00:23:33.516 --> 00:23:34.794\n>> Why we can't have nice things, Don.\n\n479\n00:23:34.794 --> 00:23:36.330\n>> [LAUGH]\n>> [LAUGH]\n\n480\n00:23:36.330 --> 00:23:37.250\n>> Which database am I on?\n\n481\n00:23:37.250 --> 00:23:38.485\nSampleDB2, all right.\n\n482\n00:23:38.485 --> 00:23:41.108\nSo if I go into SampleDB2.\n\n483\n00:23:41.108 --> 00:23:43.681\nSo I'll just jump in here to SampleDB2 and\n\n484\n00:23:43.681 --> 00:23:48.195\nmaybe I'll create a new table or\nactually I've got this HR payroll table.\n\n485\n00:23:48.195 --> 00:23:50.275\nMaybe I'll delete it, right.\n\n486\n00:23:50.275 --> 00:23:53.166\nSo here's a table we\ncreated in another episode.\n\n487\n00:23:53.166 --> 00:23:58.397\nAnd so if I just go in here and\nI will delete that table.\n\n488\n00:23:58.397 --> 00:24:02.700\nAnd so we're just going to knock that\none right out, goodbye payroll [LAUGH]\n\n489\n00:24:02.700 --> 00:24:03.960\n>> No one gets paid, [LAUGH]\n\n490\n00:24:03.960 --> 00:24:07.680\n>> So I'm dropping this table, it's gone,\n\n491\n00:24:07.680 --> 00:24:12.750\nand then maybe I'll pull\nthe top thousand rows out\n\n492\n00:24:12.750 --> 00:24:18.060\nof the employees table so that I can come\nin here and see all of my employee data.\n\n493\n00:24:18.060 --> 00:24:21.680\nSo I'm just kinda working with\nthat database a little bit.\n\n494\n00:24:21.680 --> 00:24:23.170\nWell, in order to work the database,\n\n495\n00:24:23.170 --> 00:24:26.160\nI had to log in,\nwhich I might have already been logged in.\n\n496\n00:24:26.160 --> 00:24:28.180\nSo I might not see a log in of that for\nthat.\n\n497\n00:24:28.180 --> 00:24:31.940\nBut I had a log in, I had to run my\nqueries, I had to get my results back,\n\n498\n00:24:31.940 --> 00:24:33.220\nI did drop a table.\n\n499\n00:24:33.220 --> 00:24:36.100\nThose are things that\nshould be getting audited,\n\n500\n00:24:36.100 --> 00:24:38.000\nassuming that audits\nhave had time to turn on.\n\n501\n00:24:38.000 --> 00:24:42.460\nSo if I go back here and refresh,\nlet's see if we got anything, there we go.\n\n502\n00:24:42.460 --> 00:24:44.390\nAnd so\nnow I'm starting to get events coming in.\n\n503\n00:24:44.390 --> 00:24:46.060\nAnd notice the principle\nname shows dpezet.\n\n504\n00:24:46.060 --> 00:24:48.140\nIt shows that it was\nme that did something.\n\n505\n00:24:48.140 --> 00:24:50.740\nI logged in and did something, and\n\n506\n00:24:50.740 --> 00:24:55.880\nas I kind of look at what it is that I\ndid, I can see that I've got data access.\n\n507\n00:24:55.880 --> 00:24:58.980\nI accessed data and I was successful\nat whatever it was that I did.\n\n508\n00:25:00.140 --> 00:25:02.810\nI failed at something,\nwonder what I failed at.\n\n509\n00:25:02.810 --> 00:25:05.042\nI like to know my failures,\nso I can correct them.\n\n510\n00:25:05.042 --> 00:25:06.140\n>> [LAUGH]\n>> [LAUGH] But\n\n511\n00:25:06.140 --> 00:25:08.200\nanyhow I failed at something,\nletÂ´s find out what.\n\n512\n00:25:08.200 --> 00:25:11.960\nSo if I click on that, the screen kinda\nwigs out a little bit, there we go.\n\n513\n00:25:11.960 --> 00:25:13.050\nAnd I can see what I did, and\n\n514\n00:25:13.050 --> 00:25:18.410\nyou can see where it says I did a select\nstatement against database name.\n\n515\n00:25:18.410 --> 00:25:20.070\n>> What were you thinking, Don?\n\n516\n00:25:20.070 --> 00:25:20.860\n>> Yeah, I didn't actually run that,\n\n517\n00:25:20.860 --> 00:25:23.890\nso it must've been something that SQL\nManagement Studio did in the background,\n\n518\n00:25:23.890 --> 00:25:24.420\nbut it failed.\n\n519\n00:25:24.420 --> 00:25:26.910\nNow, is that a problem?\n\n520\n00:25:26.910 --> 00:25:27.790\nMaybe it is.\n\n521\n00:25:27.790 --> 00:25:30.370\nMy SQL Management Studio\ntried to do something\n\n522\n00:25:30.370 --> 00:25:32.175\nthat Azure SQL SQL didn't support.\n\n523\n00:25:32.175 --> 00:25:33.665\nYou'd think Microsoft\nwould be aware of that.\n\n524\n00:25:33.665 --> 00:25:36.815\nSo maybe that means that I need\nto update my Management Studio.\n\n525\n00:25:36.815 --> 00:25:38.225\nMaybe it means I'm\nrunning a wrong version,\n\n526\n00:25:38.225 --> 00:25:41.315\ncuz it tried to do something\nthat it wasn't allowed to do.\n\n527\n00:25:41.315 --> 00:25:44.355\nI'm looking at it as a full admin,\nso that may be a bug.\n\n528\n00:25:44.355 --> 00:25:46.395\nBut if we go back and\nlook at some of the other things,\n\n529\n00:25:46.395 --> 00:25:49.705\nthough, we can probably\nfind that query that I ran.\n\n530\n00:25:49.705 --> 00:25:53.580\nAnd who knows, there's so much stuff that\ngets in here, it becomes kinda difficult.\n\n531\n00:25:53.580 --> 00:25:56.860\nBecause when you run a query,\nyou just see the one query you run.\n\n532\n00:25:56.860 --> 00:25:59.990\nBut there's all sorts of session\nsettings that you apply,\n\n533\n00:25:59.990 --> 00:26:03.220\nand here I'm declaring some variables and\ndoing some action there.\n\n534\n00:26:03.220 --> 00:26:05.770\nSo who knows what all we did.\n\n535\n00:26:05.770 --> 00:26:08.420\nAnd at the same time,\nI'm accessing this via the web portal.\n\n536\n00:26:08.420 --> 00:26:10.170\nSo that's generating activity too.\n\n537\n00:26:10.170 --> 00:26:13.515\nSo all of this is gonna kinda\nkeep coming into play with that.\n\n538\n00:26:13.515 --> 00:26:17.930\nNow because it gets kinda complex\nyou can filter it, and if you\n\n539\n00:26:17.930 --> 00:26:22.570\nfilter it you'll see you can really just\nfilter by the date and narrow that down.\n\n540\n00:26:22.570 --> 00:26:26.080\nSo if you know exactly when the query ran,\nmaybe you can find it that way.\n\n541\n00:26:26.080 --> 00:26:27.980\nBut even that's not terribly helpful.\n\n542\n00:26:27.980 --> 00:26:31.320\nIf I wanted to search the logs,\nI ran a select statement.\n\n543\n00:26:31.320 --> 00:26:33.400\nSo let me do a search for\nselect statements.\n\n544\n00:26:33.400 --> 00:26:35.370\nOr I ran a drop table.\n\n545\n00:26:35.370 --> 00:26:37.100\nSo let me do a search for drop table.\n\n546\n00:26:37.100 --> 00:26:38.580\nI can't do that from here.\n\n547\n00:26:38.580 --> 00:26:41.710\nIf I wanna do that, I really gotta\ntake it the third party software.\n\n548\n00:26:41.710 --> 00:26:45.260\nAnd they do give you a nice little\nOpen in Excel link that you can hit.\n\n549\n00:26:45.260 --> 00:26:51.410\nAnd that's gonna download and allow you\nto open that report right into Excel.\n\n550\n00:26:51.410 --> 00:26:56.054\nAnd so it's gonna take that audit log,\nbring it into Excel and let you run,\n\n551\n00:26:56.054 --> 00:26:58.420\napparently I'm not activated\n>> [LAUGH]\n\n552\n00:26:58.420 --> 00:27:00.370\n>> Here, I'll just close that and\n\n553\n00:27:00.370 --> 00:27:03.050\nwe'll run unactivated, break the rules.\n\n554\n00:27:03.050 --> 00:27:07.240\nSo we can now run it right here, and\nnotice the screen that I'm looking at,\n\n555\n00:27:07.240 --> 00:27:12.650\nhow it's actually got a little like\nAzure type panel still on my screen.\n\n556\n00:27:12.650 --> 00:27:14.110\nIt's kinda not rendering, right, is it.\n\n557\n00:27:14.110 --> 00:27:14.950\nHere we go.\n\n558\n00:27:14.950 --> 00:27:18.032\nAll right now I can jump in here,\n\n559\n00:27:18.032 --> 00:27:21.540\n[LAUGH] there we go, and\nnow I can see the audit log.\n\n560\n00:27:21.540 --> 00:27:25.590\nAnd it's applying that template\nthat I showed you guys earlier.\n\n561\n00:27:25.590 --> 00:27:28.830\nAnd here it's just giving me information\nabout the parameters and data, but\n\n562\n00:27:28.830 --> 00:27:32.440\ndown at the bottom I've got this tab\nthat lets me go into the auto logs.\n\n563\n00:27:32.440 --> 00:27:36.190\nAnd this is what I was showing you\non the webpage, that Excel template.\n\n564\n00:27:36.190 --> 00:27:38.470\nAnd so I can come in here and\ntell it what I want to find.\n\n565\n00:27:38.470 --> 00:27:42.390\nAlthough it's telling me that\nmy data is blank, why is that?\n\n566\n00:27:42.390 --> 00:27:45.430\nLet's see if it's cuz my\nediting was turned off,\n\n567\n00:27:45.430 --> 00:27:48.860\nit might also be because\nI'm not activated and\n\n568\n00:27:48.860 --> 00:27:51.510\nwhen you're not activated it won't\nlet you edit an Excel spreadsheet.\n\n569\n00:27:51.510 --> 00:27:54.830\nSo it's probably not populating\nthe values in here, but\n\n570\n00:27:54.830 --> 00:27:58.390\nbasically what it's gonna do\nis load those logs in here.\n\n571\n00:27:58.390 --> 00:28:02.260\nAnd once they're in here you can\ndo your text based searches.\n\n572\n00:28:02.260 --> 00:28:04.430\nAnd your other strings,\nyou can find that information,\n\n573\n00:28:04.430 --> 00:28:07.950\nand it becomes a lot more\nuseful once you get it offline.\n\n574\n00:28:07.950 --> 00:28:10.400\nAnd so\nthey make it available to do that, and\n\n575\n00:28:10.400 --> 00:28:13.980\nas long as you got Excel you'll be able to\nview that information and get in there.\n\n576\n00:28:13.980 --> 00:28:16.690\nSo definitely a cool feature to have.\n\n577\n00:28:16.690 --> 00:28:19.240\n>> Yeah Don.\nNow another thing you were talking about\n\n578\n00:28:19.240 --> 00:28:20.420\nwas the threat detection.\n\n579\n00:28:21.640 --> 00:28:25.730\nThat's really interesting to me\nbecause obviously the biggest threat\n\n580\n00:28:25.730 --> 00:28:29.750\nthat is gonna be going a SQL server\nis going to be SQL injection.\n\n581\n00:28:29.750 --> 00:28:31.920\nDoes it detect threats like that?\n\n582\n00:28:31.920 --> 00:28:36.870\nIt does, and where it gets tricky is if\nyou watched our controlling network access\n\n583\n00:28:36.870 --> 00:28:40.200\nepisode, we talked about how you can\nsetup a firewall, it's built into Azure,\n\n584\n00:28:40.200 --> 00:28:43.130\nand you can control what IP addresses\nare allowed to access your server.\n\n585\n00:28:43.130 --> 00:28:46.010\nSo you're thinking, well how can\nthe attacker get to my SQL server if\n\n586\n00:28:46.010 --> 00:28:48.600\nthey can't even access it via the network?\n\n587\n00:28:48.600 --> 00:28:51.650\nWell the way SQL injection\nattacks work is they're not\n\n588\n00:28:51.650 --> 00:28:54.510\nactually targeted at\nthe database server itself.\n\n589\n00:28:54.510 --> 00:28:59.170\nThey're targeted at your web server,\nand they pass through the web server.\n\n590\n00:28:59.170 --> 00:29:02.390\nSo, as far as the firewall is concerned,\nthe attack is actually coming\n\n591\n00:29:02.390 --> 00:29:05.670\nfrom your web server, and\nbeing sent to the database server.\n\n592\n00:29:05.670 --> 00:29:06.750\nThat's what makes them a little tricky,\n\n593\n00:29:06.750 --> 00:29:09.400\nis they basically get around\nthe firewall by doing that.\n\n594\n00:29:09.400 --> 00:29:14.320\nSo then it's gotta look at the type of\ncommands that are coming through and\n\n595\n00:29:14.320 --> 00:29:16.700\nwhat's happening,\nwhat type of attacks there are.\n\n596\n00:29:16.700 --> 00:29:19.680\nNow Microsoft knows quite a few of\nthe attacks that are out there,\n\n597\n00:29:19.680 --> 00:29:21.820\nbut there's some Microsoft\ndoesn't know about.\n\n598\n00:29:21.820 --> 00:29:23.820\nAnd so they can protect you from some, but\n\n599\n00:29:23.820 --> 00:29:27.420\nat the end of the day it is up to you\nto have your protection in there.\n\n600\n00:29:27.420 --> 00:29:30.840\nAnytime you have a form on your website,\nanytime you have\n\n601\n00:29:30.840 --> 00:29:35.090\na field where somebody can type, that's\na candidate for a SQL injection attack.\n\n602\n00:29:35.090 --> 00:29:37.300\nAnd you need to do field validation,\n\n603\n00:29:37.300 --> 00:29:39.800\nyou need to limit\nthe characters people can type.\n\n604\n00:29:39.800 --> 00:29:41.120\nIf you've got a field that asks for\n\n605\n00:29:41.120 --> 00:29:44.750\na first name should you allow\na semi colon character?\n\n606\n00:29:44.750 --> 00:29:46.720\nOr a squiggly bracket character?\n\n607\n00:29:46.720 --> 00:29:48.120\nAbsolutely not.\n\n608\n00:29:48.120 --> 00:29:50.200\nNobody's name has those characters in it.\n\n609\n00:29:50.200 --> 00:29:51.860\nSo you shouldn't allow them in that field.\n\n610\n00:29:51.860 --> 00:29:54.040\nAnd that'll help to prevent\nSQL injection attacks.\n\n611\n00:29:54.040 --> 00:29:57.250\nAnd just certificate based authentication\nbetween your server and the database,\n\n612\n00:29:57.250 --> 00:30:02.130\nstuff like that are all extra steps we\ncan take to secure things on our end.\n\n613\n00:30:02.130 --> 00:30:05.280\nBut the threat detection\nfeature is designed to help out\n\n614\n00:30:05.280 --> 00:30:08.190\nin scenarios where we\nmay not know of that.\n\n615\n00:30:08.190 --> 00:30:11.350\nWhere Microsoft security engineers and\ntheir technology can monitor it and\n\n616\n00:30:11.350 --> 00:30:14.240\nhopefully stop and at least alert\nyou that these things are happening.\n\n617\n00:30:14.240 --> 00:30:16.230\nSo that's all what's going\non with threat detection.\n\n618\n00:30:16.230 --> 00:30:18.130\n>> Awesome, well obviously\nthere's a lot of good stuff for\n\n619\n00:30:18.130 --> 00:30:22.490\nus available through Azure,\nand then all the auditing.\n\n620\n00:30:22.490 --> 00:30:23.470\nAnd even the threat detection,\n\n621\n00:30:23.470 --> 00:30:26.610\nthat does that awesome as well,\navailable in that Azure portal.\n\n622\n00:30:26.610 --> 00:30:30.290\nDon is there anything else we need to know\nabout, at least when it comes auditing or\n\n623\n00:30:30.290 --> 00:30:32.190\nthreat detection, for this show?\n\n624\n00:30:32.190 --> 00:30:35.200\n>> That's really it, just remember\nyou set your retention period, and\n\n625\n00:30:35.200 --> 00:30:37.430\nyour logs are gonna fill\nup that retention period.\n\n626\n00:30:37.430 --> 00:30:39.120\nI set mine to 30 days I think.\n\n627\n00:30:39.120 --> 00:30:43.120\nSo after 30 days, the oldest logs will\nbe overwritten with the newest logs.\n\n628\n00:30:43.120 --> 00:30:45.210\nSo I can now only go back 30 days.\n\n629\n00:30:45.210 --> 00:30:48.390\nBut remember, using third party software,\nyou can download the audit, you can keep\n\n630\n00:30:48.390 --> 00:30:53.520\nit as long as you want, but at this\npoint I can no longer look past 30 days.\n\n631\n00:30:53.520 --> 00:30:58.520\nAnd because I just turned on auditing, I\ndon't have 29 days of fake data in there,\n\n632\n00:30:58.520 --> 00:31:02.200\nI've only got a couple of hours of data\nnow, or a couple of minutes really.\n\n633\n00:31:02.200 --> 00:31:04.730\nAnd so I can't go back in time.\n\n634\n00:31:04.730 --> 00:31:07.670\nIt's better to have auditing\nturned on before you need\n\n635\n00:31:07.670 --> 00:31:09.805\nthan to wish you had it\nwhen the time comes.\n\n636\n00:31:09.805 --> 00:31:12.910\nSo better to have it and not need it,\nthan need it and not have it.\n\n637\n00:31:12.910 --> 00:31:14.170\nThat's kind of the rule with auditing.\n\n638\n00:31:14.170 --> 00:31:16.152\n>> Wise words, my good friend, wise words.\n\n639\n00:31:16.152 --> 00:31:17.696\n>> [LAUGH]\n>> Follow them, learn them,\n\n640\n00:31:17.696 --> 00:31:19.075\ntattoo them on your somewhere.\n\n641\n00:31:19.075 --> 00:31:20.070\n[LAUGH]\n>> [LAUGH]\n\n642\n00:31:20.070 --> 00:31:21.630\n>> And paste it to the mirror or\n\n643\n00:31:21.630 --> 00:31:22.820\nsomething and do it.\n\n644\n00:31:22.820 --> 00:31:23.810\nTurn on auditing.\n\n645\n00:31:23.810 --> 00:31:25.950\nAnd check those logs on\nsome regular interval.\n\n646\n00:31:25.950 --> 00:31:28.350\nDon, thank you so much for\nexplaining this to us, and\n\n647\n00:31:28.350 --> 00:31:29.850\nthank you guys out there for watching.\n\n648\n00:31:29.850 --> 00:31:30.690\nWe really appreciate it.\n\n649\n00:31:30.690 --> 00:31:31.610\nBut we're gonna go ahead and\n\n650\n00:31:31.610 --> 00:31:34.770\nsign off for ITProTV,\nI've been your host Daniel Lowrie.\n\n651\n00:31:34.770 --> 00:31:35.520\n>> And I'm Don Pezet.\n\n652\n00:31:35.520 --> 00:31:37.790\n>> And we'll see you next time.\n\n653\n00:31:37.790 --> 00:31:43.410\n[MUSIC]\n\n",
          "vimeoId": "151903532"
        },
        {
          "description": "In this episode, Don and Daniel go over deploying applications to Azure. They begin by showing you how to deploy a fully functional web app from start to finish, all while using the Azure Marketplace, prebuilt application profiles (specifically mojoPortal). They also show you how you can develop your own app by using Visual Studio Community edition and connecting to Azure with your in-house apps.",
          "length": "2216",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-azuresql/techskills-azuresql-6-1-deploying_applications-011516-1.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-azuresql/techskills-azuresql-6-1-deploying_applications-011516-1-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-azuresql/techskills-azuresql-6-1-deploying_applications-011516-1-sm.jpg",
          "title": "Deploying Applications",
          "transcript": "WEBVTT\n\n1\n00:00:00.086 --> 00:00:10.086\n[MUSIC]\n\n2\n00:00:12.193 --> 00:00:16.530\nAll right, greetings everyone and welcome\nto another great episode of ITProTV.\n\n3\n00:00:16.530 --> 00:00:19.940\nI'm your host Daniel Lowrie, and\nin today's episode we are continuing\n\n4\n00:00:19.940 --> 00:00:23.240\non our Azure SQL series that\nwe've been working so hard on.\n\n5\n00:00:23.240 --> 00:00:25.780\nJoining us back in the studio today again,\nwell you know him,\n\n6\n00:00:25.780 --> 00:00:27.940\nyou love him,\nhe's our good friend Mr. Don Pezet.\n\n7\n00:00:27.940 --> 00:00:28.870\nDon welcome back to the show.\n\n8\n00:00:28.870 --> 00:00:30.120\nHow you doing today Sir?\n\n9\n00:00:30.120 --> 00:00:32.610\n>> I'm doing great Daniel,\nready to jump back in and\n\n10\n00:00:32.610 --> 00:00:35.530\ncover what, well it's gonna be\nthe last episode of this series.\n\n11\n00:00:35.530 --> 00:00:39.750\nWhat I wanna do in this episode is take\nall the things that we've talked about and\n\n12\n00:00:39.750 --> 00:00:42.090\nkind of show how this reaches fruition,\nright?\n\n13\n00:00:42.090 --> 00:00:44.910\nWe saw creating databases,\nwe saw indexes, and\n\n14\n00:00:44.910 --> 00:00:48.240\nall these other things we do to make\nthe databases run nice and smooth.\n\n15\n00:00:48.240 --> 00:00:51.390\nThe one thing we haven't seen is something\nthat a lot of administrators aren't\n\n16\n00:00:51.390 --> 00:00:52.122\ngonna have to deal with,\n\n17\n00:00:52.122 --> 00:00:55.900\nwhich is getting the applications to\nactually talk to the databases, right?\n\n18\n00:00:55.900 --> 00:01:00.510\nAnd that's the tricky part, that's\nwhere these actually get put into use.\n\n19\n00:01:00.510 --> 00:01:03.160\nAll through this series,\nwe've had a database, and\n\n20\n00:01:03.160 --> 00:01:06.040\nI've been firing up the SQL Management\nStudio, or the Azure Portal, and\n\n21\n00:01:06.040 --> 00:01:09.750\nconnecting to it and working with it,\nbut end users don't do that.\n\n22\n00:01:09.750 --> 00:01:12.854\nIf I'm an end user, and I go to Amazon's\nwebsite to search for products,\n\n23\n00:01:12.854 --> 00:01:15.620\nI don't go right into their database and\nstart running queries.\n\n24\n00:01:15.620 --> 00:01:19.918\nI go to their website, so there's\nusually an application that front ends\n\n25\n00:01:19.918 --> 00:01:24.026\nthe database that's what creates\na web app, or a data tiered web app.\n\n26\n00:01:24.026 --> 00:01:27.400\nAnd that is kind of an important thing\nto understand if you're a developer.\n\n27\n00:01:27.400 --> 00:01:28.440\nYou're the one creating that,\n\n28\n00:01:28.440 --> 00:01:30.660\nas a sys admin we normally\ndon't have to mess with it.\n\n29\n00:01:30.660 --> 00:01:32.740\nWe create the database,\nwe put it in place, and\n\n30\n00:01:32.740 --> 00:01:34.670\nthen we just turn it\nover to the developers.\n\n31\n00:01:34.670 --> 00:01:38.050\nBut just for completeness, I wanna show\nyou guys what it's like to create a full\n\n32\n00:01:38.050 --> 00:01:42.880\nproduct, where we've got a web app that's\nfront ending a database on the back end.\n\n33\n00:01:42.880 --> 00:01:44.130\nThat's all in a nice\nlittle resource group.\n\n34\n00:01:44.130 --> 00:01:47.623\nSo you can get an idea of what\nthe full picture looks like.\n\n35\n00:01:47.623 --> 00:01:49.910\nAnd you can kind of put all\nthis stuff into context.\n\n36\n00:01:49.910 --> 00:01:53.136\n>> Well, Don I'm looking forward\nto this episode cuz I remember,\n\n37\n00:01:53.136 --> 00:01:56.660\nit has been since my college days\nwhen we worked in Visual Basic 6, and\n\n38\n00:01:56.660 --> 00:02:00.088\nconnected to access databases, so\nI have an idea what's going on.\n\n39\n00:02:00.088 --> 00:02:04.130\nYou might as well out there, like Don\nsaid, if you've ever been to Amazon or\n\n40\n00:02:04.130 --> 00:02:07.858\nanything where you're looking stuff up,\nthat API, that front end,\n\n41\n00:02:07.858 --> 00:02:09.898\nis what we're gonna get to see today.\n\n42\n00:02:09.898 --> 00:02:12.440\nAre we gonna be writing code here, Don?\n\n43\n00:02:12.440 --> 00:02:13.021\n>> No, not really.\n\n44\n00:02:13.021 --> 00:02:13.571\n>> Okay, good.\n\n45\n00:02:13.571 --> 00:02:16.739\n[LAUGH]\n>> We are gonna look at some code.\n\n46\n00:02:16.739 --> 00:02:19.574\nThe type of system administrator that\nwould watch this show is not somebody\n\n47\n00:02:19.574 --> 00:02:20.790\nwho's actually writing code.\n\n48\n00:02:20.790 --> 00:02:22.690\nBut if you are,\nI'll show you where it goes.\n\n49\n00:02:22.690 --> 00:02:24.080\nIt's really not that bad.\n\n50\n00:02:24.080 --> 00:02:25.860\nBut well, it's not that bad to get there.\n\n51\n00:02:25.860 --> 00:02:27.960\nIt is bad to write the code\nunless you're a developer.\n\n52\n00:02:27.960 --> 00:02:29.710\nSo we'll get a chance to see that though.\n\n53\n00:02:29.710 --> 00:02:34.110\nBut I do think it's important to get\nan idea of what a finished product might\n\n54\n00:02:34.110 --> 00:02:36.510\nlook like cuz it's kind\nof like building a house.\n\n55\n00:02:36.510 --> 00:02:38.930\nAnd what we've seen, all the stuff\nwe've seen with the SQL server,\n\n56\n00:02:38.930 --> 00:02:41.710\nit's kind of like building\nthe foundation of a house.\n\n57\n00:02:41.710 --> 00:02:43.470\nBut then you've gotta stick walls and\na roof on it.\n\n58\n00:02:43.470 --> 00:02:45.980\nYou gotta throw some carpet in\nthere before you can call it done.\n\n59\n00:02:45.980 --> 00:02:49.180\nAnd as a system admin we don't normally\nget involved in those other pieces.\n\n60\n00:02:49.180 --> 00:02:50.871\nThat's where the dev team comes in.\n\n61\n00:02:50.871 --> 00:02:54.105\nBut if you're doing DevOps, you might\nbe covering both of those roles, and\n\n62\n00:02:54.105 --> 00:02:55.378\nyou're expected to do that.\n\n63\n00:02:55.378 --> 00:02:58.127\nSo let's take a look at this,\nand what I wanna do,\n\n64\n00:02:58.127 --> 00:03:00.220\nI want to start out kind of easy.\n\n65\n00:03:00.220 --> 00:03:04.910\nWhich is if you need to deploy\nan application into Azure,\n\n66\n00:03:04.910 --> 00:03:08.320\na lot of times somebody else\nhas already done it before you.\n\n67\n00:03:08.320 --> 00:03:10.532\nAnd so,\nyou don't have to reinvent the wheel.\n\n68\n00:03:10.532 --> 00:03:13.291\nYou can go and reuse the templates\nthat have been created,\n\n69\n00:03:13.291 --> 00:03:16.951\nthat are stored up in Azure, to quickly\nand rapidly deploy an application and\n\n70\n00:03:16.951 --> 00:03:19.788\nnot necessarily know anything\nunder the hood, all right?\n\n71\n00:03:19.788 --> 00:03:23.480\nSo, for example, and I'll move a little\nbit away from Azure SQL here for a second.\n\n72\n00:03:23.480 --> 00:03:25.274\nLet's say I wanted a WordPress site.\n\n73\n00:03:25.274 --> 00:03:29.092\nWordPress powers some 30% of websites\nacross the Internet, so it's massive,\n\n74\n00:03:29.092 --> 00:03:31.180\na lot of people use WordPress.\n\n75\n00:03:31.180 --> 00:03:36.220\nWordPress is designed to run on top of\nApache with a MySQL database, right?\n\n76\n00:03:36.220 --> 00:03:42.690\nNot Azure SQL but MySQL, it's similar, and\nit typically runs on top of Linux servers.\n\n77\n00:03:42.690 --> 00:03:45.130\nAnd I might not know anything\nabout Linux servers.\n\n78\n00:03:45.130 --> 00:03:48.940\nI might not know anything about MySQL or\nMaria DB or\n\n79\n00:03:48.940 --> 00:03:52.180\nany of those other guys that we\ncould run underneath WordPress.\n\n80\n00:03:52.180 --> 00:03:56.295\nBut I could go under the Azure\nMarketplace, and I can choose a WordPress\n\n81\n00:03:56.295 --> 00:04:02.145\ntemplate and it will deploy the servers,\nthe databases, the auto scale policies,\n\n82\n00:04:02.145 --> 00:04:04.995\nthe network configurations,\nthe firewall configurations.\n\n83\n00:04:04.995 --> 00:04:09.710\nIt'll deploy everything for me and\nthen I just have to maintain it, right?\n\n84\n00:04:09.710 --> 00:04:12.350\nAnd there's a lot of those\ntemplates that we can pick\n\n85\n00:04:12.350 --> 00:04:14.600\nthat do actually use Azure SQL.\n\n86\n00:04:14.600 --> 00:04:17.330\nAnd Azure SQL's evolved a lot\nover the last three years.\n\n87\n00:04:17.330 --> 00:04:20.230\nAnd so we're starting to see newer and\nnewer templates come out.\n\n88\n00:04:20.230 --> 00:04:23.160\nAnd there's even one that came\nout a few weeks ago that's\n\n89\n00:04:23.160 --> 00:04:24.630\ngonna be taking over next year.\n\n90\n00:04:24.630 --> 00:04:26.826\nSo you just see a lot of\nchange going on here.\n\n91\n00:04:26.826 --> 00:04:30.710\nBut any time I need to deploy a web app,\nif it's an in-house written app,\n\n92\n00:04:30.710 --> 00:04:34.590\none that we created ourselves, then I\nknow I've got my work cut out for me.\n\n93\n00:04:34.590 --> 00:04:38.780\nBut if it's a standard package,\nsome kind of open source or\n\n94\n00:04:38.780 --> 00:04:41.290\neven commercial package, a lot of\nthe times you go to the marketplace,\n\n95\n00:04:41.290 --> 00:04:42.700\nyou can find it and save you some time.\n\n96\n00:04:42.700 --> 00:04:45.470\nSo for example here,\nI'm gonna use Mojo Portal.\n\n97\n00:04:45.470 --> 00:04:49.000\nMojo portal is a, it's a CMS,\na content management system.\n\n98\n00:04:49.000 --> 00:04:50.670\nIt's designed to power web pages.\n\n99\n00:04:50.670 --> 00:04:53.380\nMaybe you have videos and\nfiles you wanna post.\n\n100\n00:04:53.380 --> 00:04:57.850\nAnd it's designed to run on IIS, so\nthe Microsoft Internet Information Server,\n\n101\n00:04:57.850 --> 00:05:00.030\nthe web server is part of Windows Server.\n\n102\n00:05:00.030 --> 00:05:03.690\nAnd it's designed to have\na Microsoft SQL back-end.\n\n103\n00:05:03.690 --> 00:05:06.760\nAnd I've deployed Mojo Portal\nbefore in on-premises solutions,\n\n104\n00:05:06.760 --> 00:05:09.380\nwhere I had to bring up the web server,\nand you bring up the database server, and\n\n105\n00:05:09.380 --> 00:05:11.520\nyou do all that maintenance and\nstuff locally.\n\n106\n00:05:11.520 --> 00:05:16.070\nBut when we deploy it in Azure, we wanna\nmake sure that we leverage Azure SQL, so\n\n107\n00:05:16.070 --> 00:05:20.900\nwe get all the benefits that it has\nas far as geo-replication and so on.\n\n108\n00:05:20.900 --> 00:05:24.680\nAnd we want the web front-end to be\nsensitive to the fact that the database\n\n109\n00:05:24.680 --> 00:05:26.450\nmight move or change IPs.\n\n110\n00:05:26.450 --> 00:05:30.210\nAnd so, by using a marketplace template,\nwe can deploy that quickly and easily, and\n\n111\n00:05:30.210 --> 00:05:31.760\nknow that it's all set up correctly.\n\n112\n00:05:31.760 --> 00:05:33.980\nAnd then we just have to maintain it,\nright?\n\n113\n00:05:33.980 --> 00:05:35.850\nNow, deploying marketplace stuff\nis pretty straightforward.\n\n114\n00:05:35.850 --> 00:05:37.320\nI'll show you here in the Azure portal.\n\n115\n00:05:37.320 --> 00:05:38.910\nSo I've logged into the Azure portal.\n\n116\n00:05:38.910 --> 00:05:41.610\nAnd if I just go up here to new,\nnormally when you choose new,\n\n117\n00:05:41.610 --> 00:05:43.730\nyou're gonna be creating some\nof these various items here,\n\n118\n00:05:43.730 --> 00:05:48.590\nlike resource groups, or\nvirtual machines, SQL databases.\n\n119\n00:05:48.590 --> 00:05:51.330\nBut when you're in this marketplace,\n\n120\n00:05:51.330 --> 00:05:54.820\nthere's a lot more that you can create\nthan just the standard components.\n\n121\n00:05:54.820 --> 00:05:58.580\nA lot of these are full packages.\n\n122\n00:05:58.580 --> 00:06:01.230\nSo if I were to take a look at,\nlet's say just for\n\n123\n00:06:01.230 --> 00:06:04.970\nexample, how about Media and CDN, right?\n\n124\n00:06:04.970 --> 00:06:09.150\nSo if I wanna create a media service or\na content delivery network, a CDN,\n\n125\n00:06:09.150 --> 00:06:13.590\nthey've got templates for that that I can\nuse to go in and start to deploy those.\n\n126\n00:06:13.590 --> 00:06:16.160\nAnd I don't really get a whole\nlot of information here.\n\n127\n00:06:16.160 --> 00:06:18.240\nThese are just the featured apps, though.\n\n128\n00:06:18.240 --> 00:06:20.270\nAnd if you hit see all,\n\n129\n00:06:20.270 --> 00:06:25.390\na lot of times there's quite a bit more\ntucked in there that you just didn't see.\n\n130\n00:06:25.390 --> 00:06:27.330\nAnd so as you start to scroll down,\n\n131\n00:06:27.330 --> 00:06:31.020\nyou'll see that there's\nactually a lot of stuff here.\n\n132\n00:06:31.020 --> 00:06:33.300\nAnd some of it's from Microsoft,\nsome of it's not.\n\n133\n00:06:33.300 --> 00:06:38.030\nSome of it is from third party vendors,\nMentalNotes, I've never heard of that one\n\n134\n00:06:38.030 --> 00:06:42.970\nbut it's from the company MentalNotes, or\nNimble Streamer running on CentOS 7.1,\n\n135\n00:06:42.970 --> 00:06:46.190\nyou've got all sorts of\ndifferent solutions in here.\n\n136\n00:06:46.190 --> 00:06:47.850\nSo if you're about to deploy an app and\n\n137\n00:06:47.850 --> 00:06:52.250\nit's a standard package, my suggestion to\nyou is to come into the marketplace, and\n\n138\n00:06:52.250 --> 00:06:56.630\nsearch and see if it already exists as\na package, it'll save you a lot of time.\n\n139\n00:06:56.630 --> 00:07:00.350\nSo if you go to the everything view,\nyou can actually see quite a bit,\n\n140\n00:07:00.350 --> 00:07:04.990\nand I'm just gonna search for mojoPortal,\nand that one will turn up right there.\n\n141\n00:07:04.990 --> 00:07:08.100\nAll right, so I got mojoPortal,\nit's from Source Tree Solutions,\n\n142\n00:07:08.100 --> 00:07:12.070\nwhich is a third party, and the category\nthat it's under is, Web and Mobile, it's\n\n143\n00:07:12.070 --> 00:07:16.400\na website but mobile phones and devices\nwill wanna be able to access this also.\n\n144\n00:07:16.400 --> 00:07:17.930\nSo, that's it right there.\n\n145\n00:07:17.930 --> 00:07:20.620\nAnd when I choose it,\nit's gonna tell me a little bit about it.\n\n146\n00:07:20.620 --> 00:07:21.743\nSo here's the information.\n\n147\n00:07:21.743 --> 00:07:27.305\nThis is a content management system\nentirely written in C# ASP.NET.\n\n148\n00:07:27.305 --> 00:07:29.210\nSo it's written in a Microsoft language.\n\n149\n00:07:29.210 --> 00:07:31.750\nIt's designed to run on top of IIS.\n\n150\n00:07:31.750 --> 00:07:36.160\nAnd it supports Microsoft SQL server,\nnot just 2005 and\n\n151\n00:07:36.160 --> 00:07:40.800\n2008, but also SqlAzure,\nwhich is what it used to be called.\n\n152\n00:07:40.800 --> 00:07:43.410\nSo it's got support for\nthat too, so we can deploy it.\n\n153\n00:07:43.410 --> 00:07:46.339\nIt'll run on MySQL and postgreSQL and\nall those guys too, but\n\n154\n00:07:46.339 --> 00:07:49.165\nthis one will definitely run on\nMicrosoft SQL if we want it.\n\n155\n00:07:49.165 --> 00:07:51.195\nAnd that's great,\ncuz I wanna do an Azure SQL deployment,\n\n156\n00:07:51.195 --> 00:07:53.968\notherwise this whole example doesn't\n[CROSSTALK] really maintain the episode.\n\n157\n00:07:53.968 --> 00:07:55.289\n>> Yeah.\n>> [LAUGH]\n\n158\n00:07:55.289 --> 00:07:56.607\n>> So, I'm gonna choose that one and\n\n159\n00:07:56.607 --> 00:07:57.340\nI'll hit create.\n\n160\n00:07:57.340 --> 00:08:02.087\nNow Deploying this, it's not just a one\nclick thing and it's done, right.\n\n161\n00:08:02.087 --> 00:08:04.840\nThere's actually a lot of information\nwe have to provide for it.\n\n162\n00:08:04.840 --> 00:08:08.260\nIt needs to know what region\nI want my servers to be in.\n\n163\n00:08:08.260 --> 00:08:09.900\nIt needs to know what type\nof access I want to allow.\n\n164\n00:08:09.900 --> 00:08:13.260\nAnd so it's gonna start asking a lot\nof questions we have to fill in.\n\n165\n00:08:13.260 --> 00:08:16.330\nBut all these questions should be pretty\nfamiliar to you guys if you've watched all\n\n166\n00:08:16.330 --> 00:08:18.940\nthe other episodes cuz these\nare decisions we had to make any time\n\n167\n00:08:18.940 --> 00:08:20.360\nwe created the database.\n\n168\n00:08:20.360 --> 00:08:23.920\nHere it's just being done in\nthe context of the application.\n\n169\n00:08:23.920 --> 00:08:28.220\nSo, over here it's asking, first off, I\nneed to give it a App Service Name, right?\n\n170\n00:08:28.220 --> 00:08:30.720\nIn order to access to access\nthe application, it's got to have a name.\n\n171\n00:08:30.720 --> 00:08:35.500\nAnd I'll probably take my own DNS name\nlater and do a CNAME that points to this,\n\n172\n00:08:35.500 --> 00:08:39.350\nbut at least in the beginning, I've got\nto give it an azurewebsites.net address.\n\n173\n00:08:39.350 --> 00:08:40.855\nYou do that for any web application.\n\n174\n00:08:40.855 --> 00:08:45.830\nSo, maybe this is like\nthe itprotvdemoportal, right.\n\n175\n00:08:45.830 --> 00:08:49.460\nAnd because it's something\n.azurewebsites.net\n\n176\n00:08:49.460 --> 00:08:54.270\nthis has to be unique across\nall of Microsoft's customers.\n\n177\n00:08:54.270 --> 00:08:58.890\nSo for example, If I just wanted to call\nit portal, well I'll bet you somebody\n\n178\n00:08:58.890 --> 00:09:03.845\nelse has already used portal, and\nsure enough I get a red flag right,\n\n179\n00:09:03.845 --> 00:09:07.480\nportal.azurewebsites.net, be\npretty common.\n\n180\n00:09:07.480 --> 00:09:11.416\nSo I'll call it itprotvdemoportal.\n\n181\n00:09:11.416 --> 00:09:14.557\nTo get it unique, and then we have to\ncreate an application service plan,\n\n182\n00:09:14.557 --> 00:09:15.480\nan app service plan.\n\n183\n00:09:15.480 --> 00:09:19.480\nAnd the service plan is where it\ndictates what we're gonna pay.\n\n184\n00:09:19.480 --> 00:09:22.299\nNow, when you bring up a web front-end,\n\n185\n00:09:22.299 --> 00:09:26.200\nyou can bring the web front-end up on\na virtual machine, on an Azure VM.\n\n186\n00:09:26.200 --> 00:09:30.000\nOr you can bring it up in an AppService,\nwhat's the difference?\n\n187\n00:09:30.000 --> 00:09:32.020\nWell with an AppService,\nit's kinda like Azure SQL.\n\n188\n00:09:32.020 --> 00:09:35.610\nWith Azure SQL, we've got a database,\nand the server and\n\n189\n00:09:35.610 --> 00:09:38.650\nsoftware under the hood is\ncompletely managed for us, right.\n\n190\n00:09:38.650 --> 00:09:42.020\nWe don't really see the SQL server, or\nthe virtual machines it's running on,\n\n191\n00:09:42.020 --> 00:09:43.810\nwe just see the databases.\n\n192\n00:09:43.810 --> 00:09:46.040\nWell, with an AppService,\nit's the same thing.\n\n193\n00:09:46.040 --> 00:09:49.390\nWe see our application,\nwe don't see IIS under the hood,\n\n194\n00:09:49.390 --> 00:09:51.660\nwe don't see the operating\nsystem under the hood.\n\n195\n00:09:51.660 --> 00:09:54.680\nIf I wanna go that route I could spin\nup my own Virtual Machines and do it,\n\n196\n00:09:54.680 --> 00:09:57.750\njust like I could spin up a Virtual\nMachine with SQL server installed on it.\n\n197\n00:09:57.750 --> 00:09:59.040\nI would just have to manage all of that.\n\n198\n00:09:59.040 --> 00:10:02.120\nSo it's asking for\nme to pick an app service plan name here.\n\n199\n00:10:02.120 --> 00:10:06.490\nAnd I'll just call it itprotvdemoportal\nto match the URL up there.\n\n200\n00:10:06.490 --> 00:10:07.190\nIt doesn't have to match.\n\n201\n00:10:07.190 --> 00:10:08.770\nI'm just doing that to keep myself sane.\n\n202\n00:10:09.900 --> 00:10:11.290\nThen the pricing tier, right?\n\n203\n00:10:11.290 --> 00:10:11.910\nThe pricing tier.\n\n204\n00:10:11.910 --> 00:10:13.740\nAnd here it's talking about for\nthe website, right?\n\n205\n00:10:13.740 --> 00:10:16.270\nAnd so for the pricing tier,\nit's doing an S1 Standard for right now.\n\n206\n00:10:16.270 --> 00:10:18.860\nI might wanna change\nthat to match whatever\n\n207\n00:10:18.860 --> 00:10:20.950\nlevel of traffic it is\nthat I think I'm handling.\n\n208\n00:10:20.950 --> 00:10:23.080\nNotice how you don't see DTUs or\nanything here.\n\n209\n00:10:23.080 --> 00:10:25.719\nIt's cuz we're talking about the web\napplication, not the database.\n\n210\n00:10:27.540 --> 00:10:28.580\nSo I'll stick with an S1.\n\n211\n00:10:29.690 --> 00:10:31.560\nThen our web app settings.\n\n212\n00:10:31.560 --> 00:10:35.400\nAnd here's where we'll have to specify\nthe database username and password.\n\n213\n00:10:35.400 --> 00:10:38.990\nIt's gonna be accessing a database\nwhich doesn't exist yet, right?\n\n214\n00:10:38.990 --> 00:10:41.430\nSo it needs credentials for\naccessing that.\n\n215\n00:10:41.430 --> 00:10:44.200\nAnd so I'll need to come\nup with credentials for it.\n\n216\n00:10:44.200 --> 00:10:50.530\nAnd so I might do portalservice,\nthat's what I'll call it and\n\n217\n00:10:50.530 --> 00:10:55.830\nthen I'll give it the password that I want\nthat to be and so I'll just punch that in.\n\n218\n00:10:55.830 --> 00:10:58.620\nAnd I'll have to remember that this is\nthe account that I use, cuz when I create\n\n219\n00:10:58.620 --> 00:11:01.770\nthe database I'll need to make sure I\nhave this user account created in there.\n\n220\n00:11:01.770 --> 00:11:04.490\nAnd it'll ask me if I wanna make\nan administrator account anyway and\n\n221\n00:11:04.490 --> 00:11:06.710\nI can just make this the administrator\naccount if I wanted.\n\n222\n00:11:06.710 --> 00:11:10.900\nBecause the database is solely\nthere to support this service.\n\n223\n00:11:10.900 --> 00:11:13.320\nBut I might wanna restrict\nthose permissions a little bit.\n\n224\n00:11:13.320 --> 00:11:15.500\nYou kind of have that\nability to tweak that.\n\n225\n00:11:17.040 --> 00:11:18.060\nAll right, so I'll say OK on that.\n\n226\n00:11:18.060 --> 00:11:20.392\nAnd then the location for me,\nit picked South Central US,\n\n227\n00:11:20.392 --> 00:11:22.783\nwhich sounds pretty hardcore,\nbut it's actually Texas.\n\n228\n00:11:22.783 --> 00:11:25.085\n>> South Central US.\n\n229\n00:11:25.085 --> 00:11:25.944\n>> Straight out of South Central US.\n\n230\n00:11:25.944 --> 00:11:27.340\n>> That's right.\n\n231\n00:11:27.340 --> 00:11:29.810\n>> So I can go with that, or\nI kinda like East US too.\n\n232\n00:11:29.810 --> 00:11:34.690\nWhat What this panel does, is it actually\nlooks at you and it geolocates your IP.\n\n233\n00:11:34.690 --> 00:11:38.850\nAnd it says, what data center could\nget the fastest connection to you?\n\n234\n00:11:38.850 --> 00:11:40.310\nWell, I'm in Florida.\n\n235\n00:11:40.310 --> 00:11:43.210\nAnd for us,\nTexas is pretty close by here, and\n\n236\n00:11:43.210 --> 00:11:47.950\nthat may work out great, but if you have\nviewers that are visitors to your site\n\n237\n00:11:47.950 --> 00:11:52.460\nthat are all over the US all over the\nworld, Texas might not be the best choice,\n\n238\n00:11:52.460 --> 00:11:53.860\nand so you might wanna choose\none of the other ones.\n\n239\n00:11:53.860 --> 00:11:54.820\nI'll choose East US 2.\n\n240\n00:11:54.820 --> 00:11:58.560\nAll right, I'll go ahead and\nsay OK to that.\n\n241\n00:11:58.560 --> 00:12:01.660\nAnd that's my app service, okay?\n\n242\n00:12:01.660 --> 00:12:04.790\nSo that's the web front end\nthat's gonna be running.\n\n243\n00:12:04.790 --> 00:12:06.220\nAnd then right after,\nI've got my database.\n\n244\n00:12:06.220 --> 00:12:10.660\nThis is the database back end that's gonna\nbe storing all the data for the portal.\n\n245\n00:12:10.660 --> 00:12:14.880\nAnd I create a new database, or I can use\nan existing one if I've already got one.\n\n246\n00:12:14.880 --> 00:12:17.730\nWell, here is where we have\na few little decisions.\n\n247\n00:12:17.730 --> 00:12:19.950\nMojo portal hates reusing databases, so\n\n248\n00:12:19.950 --> 00:12:21.390\nI don't even know why they\ngive you this option.\n\n249\n00:12:21.390 --> 00:12:22.770\nBut if you use it,\n\n250\n00:12:22.770 --> 00:12:25.410\nthe data better be pretty clean\notherwise it's not going to work.\n\n251\n00:12:25.410 --> 00:12:28.060\nBut if you wanted to create those\nuser accounts ahead of time.\n\n252\n00:12:28.060 --> 00:12:32.759\nFor example, I might want to create\na database with the portal service account\n\n253\n00:12:32.759 --> 00:12:35.465\ncreated and permissions already doled out,\n\n254\n00:12:35.465 --> 00:12:39.680\nthen I would choose an existing\ndatabase that was made that was empty.\n\n255\n00:12:39.680 --> 00:12:40.420\nMine aren't empty, though.\n\n256\n00:12:40.420 --> 00:12:41.660\nI've got stuff in them.\n\n257\n00:12:41.660 --> 00:12:42.910\nSo I'm gonna create a new database.\n\n258\n00:12:43.950 --> 00:12:48.787\nNow when I create that new database,\nI need to give it a name and\n\n259\n00:12:48.787 --> 00:12:51.681\nso I'll call this my mojoPortalDB.\n\n260\n00:12:51.681 --> 00:12:54.300\nAnd I'll pick the service tier for\nthe database.\n\n261\n00:12:54.300 --> 00:12:57.470\nAnd S0 is fine for me but\nyou pick whichever tier it is you need for\n\n262\n00:12:57.470 --> 00:12:58.510\nthe load you're gonna handle.\n\n263\n00:12:58.510 --> 00:13:02.990\nI pick the coalition and\nthen my server settings.\n\n264\n00:13:02.990 --> 00:13:07.010\nNow, if I had prestaged this database,\nif I had created it ahead of time.\n\n265\n00:13:07.010 --> 00:13:09.400\nI could have had my own\nadministrator account, and\n\n266\n00:13:09.400 --> 00:13:12.890\nthen gone into the database and created\na user account for portal service and\n\n267\n00:13:12.890 --> 00:13:14.600\ngive it just the permissions it needed.\n\n268\n00:13:14.600 --> 00:13:18.860\nBut in my case just to save time here,\nI'm gonna go ahead and create here.\n\n269\n00:13:18.860 --> 00:13:23.560\nSo this is my itprotvdemoportal server.\n\n270\n00:13:24.710 --> 00:13:27.260\nI'm giving it the same name just to\nhelp me keep it straight in my head,\n\n271\n00:13:27.260 --> 00:13:32.000\nthe names don't have to match, but this\nis going to be my demo portal SQL server.\n\n272\n00:13:32.000 --> 00:13:35.220\nFor an admin login,\nagain just to save a little bit of time,\n\n273\n00:13:35.220 --> 00:13:39.210\nI'll do that portal service account\nthat I specified a moment ago.\n\n274\n00:13:39.210 --> 00:13:42.110\nYou probably don't want your\nweb front end to have full\n\n275\n00:13:42.110 --> 00:13:45.150\nadministrative access to\nthe database server on the back end.\n\n276\n00:13:45.150 --> 00:13:47.250\nSo you'd normally create\na dedicated account for this and\n\n277\n00:13:47.250 --> 00:13:48.760\nrestrict those permissions.\n\n278\n00:13:48.760 --> 00:13:50.950\nBut if I use a different account here and\n\n279\n00:13:50.950 --> 00:13:54.820\nI haven't pre-staged that user account,\nthen the setup wizard's gonna fail.\n\n280\n00:13:54.820 --> 00:13:55.890\nThe whole thing's gonna break.\n\n281\n00:13:55.890 --> 00:13:58.410\nAnd so I'll use it this way\njust to make sure it completes.\n\n282\n00:13:58.410 --> 00:14:00.900\nWe can always go back and\nchange this stuff later, too, if we want.\n\n283\n00:14:03.250 --> 00:14:04.470\nSo we'll get that set up.\n\n284\n00:14:04.470 --> 00:14:06.520\nIt's defaulting to East US 2,\nwhich is good.\n\n285\n00:14:06.520 --> 00:14:08.950\nAnd it's doing that because I put\nthe web front-end in East US 2.\n\n286\n00:14:08.950 --> 00:14:12.820\nIt assumes that you want the front end\nin this same region as the back end for\n\n287\n00:14:12.820 --> 00:14:13.940\nthe best data rate.\n\n288\n00:14:13.940 --> 00:14:15.020\nThey don't have to be.\n\n289\n00:14:15.020 --> 00:14:16.970\nI could have the front\nend in one region and\n\n290\n00:14:16.970 --> 00:14:18.860\nmove the database into a different region.\n\n291\n00:14:18.860 --> 00:14:20.870\nBut it's rarely a good idea, right?\n\n292\n00:14:20.870 --> 00:14:23.270\nUsually we spread things like that out for\nredundancy.\n\n293\n00:14:23.270 --> 00:14:25.100\nBut if the web front end goes down,\n\n294\n00:14:25.100 --> 00:14:26.640\npeople can't get to the database so\nit doesn't matter.\n\n295\n00:14:26.640 --> 00:14:29.370\nAnd if the database goes down, doesn't\nmatter if they can get to the website,\n\n296\n00:14:29.370 --> 00:14:30.650\nthey can't get the data.\n\n297\n00:14:30.650 --> 00:14:34.608\nSo really they're both hand in hand,\nso if one goes down they both go down.\n\n298\n00:14:34.608 --> 00:14:37.988\nSo you might as well put them in the same\nregion, and then you get the best speed\n\n299\n00:14:37.988 --> 00:14:41.970\nbetween the front end and the back end cuz\nthey're right there in the same region.\n\n300\n00:14:41.970 --> 00:14:44.490\nAnd Microsoft will normally\nput them in the same stamp.\n\n301\n00:14:44.490 --> 00:14:48.450\nAnd, if you've forgotten way back in the\nearlier episodes, a stamp is a group of\n\n302\n00:14:48.450 --> 00:14:51.750\nabout 20 racks, it's in the data centers,\nthat are servers that are directly\n\n303\n00:14:51.750 --> 00:14:54.350\nconnected to each other, so you'll get,\nreally, the best performance possible.\n\n304\n00:14:55.820 --> 00:14:59.300\nAll right, now this is a really important\noption right here where is says,\n\n305\n00:14:59.300 --> 00:15:01.960\nAllow azure services\nto access this server.\n\n306\n00:15:01.960 --> 00:15:05.500\nSee how it's grayed out and\nI I can't unclick it, right?\n\n307\n00:15:05.500 --> 00:15:08.690\nThe reason is my web front\nend is an Azure service.\n\n308\n00:15:08.690 --> 00:15:10.410\nAnd it needs to be able\nto access this database.\n\n309\n00:15:10.410 --> 00:15:12.480\nSo if I turn that off, the web front\nend can't talk to the database,\n\n310\n00:15:12.480 --> 00:15:13.840\neverything's broken, right?\n\n311\n00:15:13.840 --> 00:15:15.940\nSo, it won't let me turn that off.\n\n312\n00:15:15.940 --> 00:15:18.640\nEverywhere else, we've done it in this\nshow, we've been creating databases\n\n313\n00:15:18.640 --> 00:15:21.600\nindividually, and so we could turn\nthat off, but here it's locked.\n\n314\n00:15:21.600 --> 00:15:23.995\n>> What's the purpose of even having it\nthere if you can't do anything with it.\n\n315\n00:15:23.995 --> 00:15:24.810\n[LAUGH]\n>> Oh, I guess they,\n\n316\n00:15:24.810 --> 00:15:26.923\nI don't know,\nsave some two lines of code on the page.\n\n317\n00:15:26.923 --> 00:15:27.457\n[LAUGH]\n>> Yeah, I guess so.\n\n318\n00:15:27.457 --> 00:15:29.920\n[LAUGH]\n>> All right, so there we go.\n\n319\n00:15:29.920 --> 00:15:31.470\nSo we've got our basic database settings.\n\n320\n00:15:31.470 --> 00:15:32.740\nI'll say OK to that.\n\n321\n00:15:32.740 --> 00:15:36.610\nAnd so now it's got everything it\nneeds to know for the webpage,\n\n322\n00:15:36.610 --> 00:15:39.940\nthe front end and\nthe database on the back end.\n\n323\n00:15:39.940 --> 00:15:44.230\nNow, it's a good idea to gather these\nguys together into a resource group, and\n\n324\n00:15:44.230 --> 00:15:46.880\nI might already have a resource group,\nI don't though, so,\n\n325\n00:15:46.880 --> 00:15:50.610\nI'm gonna create a new one, which\nI'll just call the itprotvdemoportal.\n\n326\n00:15:50.610 --> 00:15:52.665\nWhy is it important to\ncreate a resource group?\n\n327\n00:15:52.665 --> 00:15:56.160\nWell, I want to collect these resources\ntogether because I know the front end\n\n328\n00:15:56.160 --> 00:15:57.882\ndoesn't work without the backend and\n\n329\n00:15:57.882 --> 00:16:00.164\nthe backend doesn't work\nwithout the front end.\n\n330\n00:16:00.164 --> 00:16:02.489\nAnd so those two pieces\nare really married together.\n\n331\n00:16:02.489 --> 00:16:06.069\nAnd if I ever wanna export this app to\nrun it locally for dev and testing or\n\n332\n00:16:06.069 --> 00:16:09.828\nif I wanna to move it to a new region,\nit's possible that I can move one piece\n\n333\n00:16:09.828 --> 00:16:12.477\nand forget another and\nthen I get poor performance.\n\n334\n00:16:12.477 --> 00:16:14.836\nBut now I can move the whole\nresource group and\n\n335\n00:16:14.836 --> 00:16:16.709\nit gets all the components with it.\n\n336\n00:16:16.709 --> 00:16:20.156\nOr if I'm done and I'm ready to delete it,\nI can delete the resource group, and\n\n337\n00:16:20.156 --> 00:16:22.018\nall the individual pieces inside of it go.\n\n338\n00:16:22.018 --> 00:16:24.467\nSo, it's a good idea to take\napplications like these and\n\n339\n00:16:24.467 --> 00:16:27.895\ncompartmentalize them into resource\ngroups just for administrative effort.\n\n340\n00:16:29.775 --> 00:16:32.773\nAll right, then it's got my\nsubscription and I'll go ahead and\n\n341\n00:16:32.773 --> 00:16:33.960\npin it to the dashboard.\n\n342\n00:16:33.960 --> 00:16:35.655\nAll right, as soon as I'm done,\n\n343\n00:16:35.655 --> 00:16:39.730\nwhat it's doing in the background is\nit's gonna provision a web application.\n\n344\n00:16:39.730 --> 00:16:40.437\nThat's gonna be my front-end.\n\n345\n00:16:40.437 --> 00:16:42.828\nThen it's gonna provision\na database server.\n\n346\n00:16:42.828 --> 00:16:45.100\nThat's gonna be my back-end.\n\n347\n00:16:45.100 --> 00:16:48.430\nAnd then it's gonna put\nthe software in place, right,\n\n348\n00:16:48.430 --> 00:16:51.440\nbecause I picked a pre-built\nmarketplace package.\n\n349\n00:16:51.440 --> 00:16:53.085\nSo it's gonna put mojoPortal\non the front-end.\n\n350\n00:16:53.085 --> 00:16:55.826\nAnd the database is\nactually gonna be empty.\n\n351\n00:16:55.826 --> 00:16:57.806\nThe first time I access that front end,\n\n352\n00:16:57.806 --> 00:17:00.580\nmojoPortal's little set up\nprocess is gonna kick in.\n\n353\n00:17:00.580 --> 00:17:04.015\nIt's gonna configure itself, and I'm\ngonna end up with a fully functional CMS.\n\n354\n00:17:04.015 --> 00:17:07.674\nNow, there is a little bug\nin the mojoPortal package.\n\n355\n00:17:07.674 --> 00:17:10.380\nThey haven't updated it for\nthe latest Azure SQL.\n\n356\n00:17:10.380 --> 00:17:12.670\nWhen the new portal changed,\na couple little keywords changed.\n\n357\n00:17:12.670 --> 00:17:13.891\nSo I'll actually get a little error here.\n\n358\n00:17:13.891 --> 00:17:15.770\nYou can actually ignore it.\n\n359\n00:17:15.770 --> 00:17:16.901\nIt'll get right past it and\nwork just fine.\n\n360\n00:17:16.901 --> 00:17:19.420\nSo I do expect to get\nan error as this runs out.\n\n361\n00:17:19.420 --> 00:17:20.763\nOr, who knows?\nMaybe I'll luck out and\n\n362\n00:17:20.763 --> 00:17:21.890\nwon't get an error this time.\n\n363\n00:17:21.890 --> 00:17:24.030\nBut normally you get an error and\nyou can just ignore it.\n\n364\n00:17:24.030 --> 00:17:26.920\nThis process will take a few moments\nbecause it's gotta go through and\n\n365\n00:17:26.920 --> 00:17:28.317\nprovision all those resources.\n\n366\n00:17:29.510 --> 00:17:32.409\nWhile we're waiting on that,\nI wanna show you the alternative.\n\n367\n00:17:32.409 --> 00:17:37.410\nWhat if I wanna deploy something and\nit's not in the marketplace?\n\n368\n00:17:37.410 --> 00:17:41.160\nWhat if it's my own private\nin-house developed app, right?\n\n369\n00:17:41.160 --> 00:17:44.700\nDaniel and I,\nwe used to work at an insurance company,\n\n370\n00:17:44.700 --> 00:17:48.990\nand there were developers there, we had\ntons of in-house written apps, right?\n\n371\n00:17:48.990 --> 00:17:49.800\n>> Oh, lots of them.\n\n372\n00:17:49.800 --> 00:17:55.140\nAnd I'm glad they were there, because\nwe could not have done that [LAUGH]\n\n373\n00:17:55.140 --> 00:17:56.980\n>> Even our help desk ticketing system,\n\n374\n00:17:56.980 --> 00:17:58.650\nthat was in-house developed.\n\n375\n00:17:58.650 --> 00:18:03.230\nIt ran on a Microsoft IIS web server and\nit had a Microsoft SQL backend.\n\n376\n00:18:03.230 --> 00:18:08.647\nWhat if we wanted to take that in-house\napplication and move it up into Azure?\n\n377\n00:18:08.647 --> 00:18:12.734\nI'm not gonna go to the marketplace and\nfind my in house app.\n\n378\n00:18:12.734 --> 00:18:13.930\nWell, I hope not.\n\n379\n00:18:13.930 --> 00:18:17.228\n[LAUGH] So we've gotta have\na way to get that out there, and\n\n380\n00:18:17.228 --> 00:18:20.410\nfortunately Microsoft\nhas made it really easy.\n\n381\n00:18:20.410 --> 00:18:25.610\nAt the insurance company, the developers,\nmost of them, were .NET Studio developers.\n\n382\n00:18:25.610 --> 00:18:29.940\nAnd in the newer versions of Visual Studio\nthey've got full integration into Azure.\n\n383\n00:18:29.940 --> 00:18:33.280\nAnd so it's really easy to take\nan in house built application and\n\n384\n00:18:33.280 --> 00:18:35.440\njust publish it right into Azure.\n\n385\n00:18:35.440 --> 00:18:39.722\nOr, if you're gonna create something from\nscratch they make that really easy too,\n\n386\n00:18:39.722 --> 00:18:43.038\nbecause a lot of the templates that\nwe saw when I was in the portal,\n\n387\n00:18:43.038 --> 00:18:46.139\na lot of those templates exist\ninside of Visual Studio also.\n\n388\n00:18:46.139 --> 00:18:49.680\nSo let me kinda show you how this works.\n\n389\n00:18:49.680 --> 00:18:52.370\nFirst off, if you wanna do it\nyou gotta have Visual Studio.\n\n390\n00:18:52.370 --> 00:18:55.610\nAnd in the past that was a bit of\na burden cuz it was kind of expensive.\n\n391\n00:18:55.610 --> 00:18:59.540\nBut a few months ago Microsoft decided to\ntake their entry-level Visual Studio and\n\n392\n00:18:59.540 --> 00:19:00.440\nmake it free.\n\n393\n00:19:00.440 --> 00:19:03.620\nSo you now have what's called\nVisual Studio Community Edition.\n\n394\n00:19:03.620 --> 00:19:06.650\nAnd if you download Community Edition\nit's free, doesn't cost you a dime.\n\n395\n00:19:06.650 --> 00:19:09.230\nAnd it gives you C# and,\n\n396\n00:19:09.230 --> 00:19:13.780\nlet's see I think you get C# and\nF# as far as the languages you get.\n\n397\n00:19:13.780 --> 00:19:16.450\nYou might get C++, I can't remember.\n\n398\n00:19:16.450 --> 00:19:18.310\nBut if you want Visual Basic\nyou still have to pay.\n\n399\n00:19:18.310 --> 00:19:21.960\nBut if you want C#, which is what\nmost people are doing ASP.NET and\n\n400\n00:19:21.960 --> 00:19:24.170\nweb applications with, it's free.\n\n401\n00:19:24.170 --> 00:19:27.840\nSo you can be developing web applications\nvery, very quickly and not pay a dime.\n\n402\n00:19:29.070 --> 00:19:32.940\nNow, when you install Visual Studio,\nwhether it's the paid, full version,\n\n403\n00:19:32.940 --> 00:19:37.060\nthe Enterprise version, Team Edition,\nor just the Community Edition,\n\n404\n00:19:37.060 --> 00:19:40.520\nonce you install it,\nit does have support for Azure.\n\n405\n00:19:40.520 --> 00:19:45.360\nBut, I doesn't have full support for\nall the amazing features that\n\n406\n00:19:45.360 --> 00:19:47.530\nare up there including some\nof the template deployments.\n\n407\n00:19:47.530 --> 00:19:50.270\nSo you never want to\ninstall just Visual Studio,\n\n408\n00:19:50.270 --> 00:19:56.750\nyou also want to install\nthe Visual Studio SDK for Azure, right.\n\n409\n00:19:56.750 --> 00:20:00.040\nAnd so I'll post these links in\nthe show notes so you guys have them.\n\n410\n00:20:00.040 --> 00:20:03.031\nBut there's a lot of SDK's that\nare available from Microsoft.\n\n411\n00:20:03.031 --> 00:20:07.179\nAnd as you look down the list here\nyou'll see these Visual Studio SDKs and\n\n412\n00:20:07.179 --> 00:20:11.259\nJava, NodeJS, Mobile, Python, for\nall the different languages and\n\n413\n00:20:11.259 --> 00:20:14.130\ncommunications that you deal with and\nwork with.\n\n414\n00:20:14.130 --> 00:20:18.470\nI know we've seen installing\nthe Azure PowerShell extensions and so on.\n\n415\n00:20:18.470 --> 00:20:23.800\nSo the SDK for Visual Studio 2015,\nwhich includes the extra Azure add-ons,\n\n416\n00:20:23.800 --> 00:20:26.826\nthat's an important piece\nto be able to have.\n\n417\n00:20:26.826 --> 00:20:30.199\nIf you don't have it installed,\nit'll actually show you a link right in\n\n418\n00:20:30.199 --> 00:20:32.430\nVisual Studio where you can go and\ndownload it.\n\n419\n00:20:32.430 --> 00:20:35.120\nThat way you make sure you get\nthe right file, cuz it gets confusing.\n\n420\n00:20:35.120 --> 00:20:37.323\nIf I jump in here and\nsay, all right, well,\n\n421\n00:20:37.323 --> 00:20:39.600\nI want the Visual Studio 2015 .NET SDK.\n\n422\n00:20:39.600 --> 00:20:42.908\nIt's actually gonna try and\nrun the Azure pack.\n\n423\n00:20:42.908 --> 00:20:48.763\nSo if you look at the file, see how it's\ndoing this VWDOrVs2015AzurePack right?\n\n424\n00:20:48.763 --> 00:20:50.595\nSo that's that Azure SDK.\n\n425\n00:20:50.595 --> 00:20:52.635\nBut it's only 100k, right?\n\n426\n00:20:52.635 --> 00:20:55.205\nIf I download that it's really\njust the web platform installer.\n\n427\n00:20:55.205 --> 00:20:58.598\nAnd it's gonna start asking me things\nlike, do you want the 32-bit one or\n\n428\n00:20:58.598 --> 00:20:59.510\nthe 64-bit one?\n\n429\n00:20:59.510 --> 00:21:01.485\nDo you want this version or that version?\n\n430\n00:21:01.485 --> 00:21:03.395\nIt gets really confusing really fast.\n\n431\n00:21:03.395 --> 00:21:06.035\nIf you do it from inside of Visual Studio\nit makes sure to pick the exact\n\n432\n00:21:06.035 --> 00:21:06.705\none you need.\n\n433\n00:21:06.705 --> 00:21:09.362\nSo that can be a little bit\neasier than using this web page.\n\n434\n00:21:09.362 --> 00:21:13.043\nBut once that's installed,\nyou can fire up Visual Studio.\n\n435\n00:21:13.043 --> 00:21:14.749\nSo let me go ahead and fire this up.\n\n436\n00:21:14.749 --> 00:21:18.431\nI've got Visual Studio 2015 Community\nEdition I downloaded right from that page\n\n437\n00:21:18.431 --> 00:21:19.769\nI showed you just a moment ago.\n\n438\n00:21:19.769 --> 00:21:25.425\nAnd when it loads up it'll see that SDK\nand it'll see all the extensions, and\n\n439\n00:21:25.425 --> 00:21:31.450\nit will extend that out to make it where\nwe can start to work with our products.\n\n440\n00:21:31.450 --> 00:21:37.540\nAnd so if I wanna create an Azure\nproject that has a web front end and\n\n441\n00:21:37.540 --> 00:21:42.610\na database backend and it's all my custom\ncode, I can do it right from here.\n\n442\n00:21:42.610 --> 00:21:43.220\nOkay.\n\n443\n00:21:43.220 --> 00:21:46.660\nThe first thing I need to do is I\nneed to get connected to Azure.\n\n444\n00:21:46.660 --> 00:21:49.590\nAnd so\nover here you've got your Server Explorer.\n\n445\n00:21:49.590 --> 00:21:51.050\nAnd when you go to the Server Explorer,\n\n446\n00:21:51.050 --> 00:21:54.960\nyou can click on it and\nwhat you'll see are your local servers.\n\n447\n00:21:54.960 --> 00:21:56.280\nWhich I've got CLIENT01, that's my laptop.\n\n448\n00:21:56.280 --> 00:21:59.500\nAnd then at the top,\nyou'll see Azure, all right?\n\n449\n00:21:59.500 --> 00:22:00.720\nNow, I'm already logged in.\n\n450\n00:22:00.720 --> 00:22:04.350\nWhen you launch it the first time,\nit'll just say Azure, and that's it.\n\n451\n00:22:04.350 --> 00:22:06.270\nAnd you can right-click on that, and\n\n452\n00:22:06.270 --> 00:22:08.840\nchoose Connect to\nMicrosoft Azure Subscription.\n\n453\n00:22:08.840 --> 00:22:12.550\nAnd that's where you put in the username\nand password for Azure to get connected.\n\n454\n00:22:12.550 --> 00:22:15.970\nAnd once it's connected it'll\nupdate to show just like this.\n\n455\n00:22:15.970 --> 00:22:17.450\nI'm connected, I've got one subscription.\n\n456\n00:22:18.830 --> 00:22:21.691\nOnce we've got that server,\nnow if you expand that out,\n\n457\n00:22:21.691 --> 00:22:24.023\nlook at all the different\nthings that it sees.\n\n458\n00:22:24.023 --> 00:22:26.821\nAnd this is not just for\ncreating applications.\n\n459\n00:22:26.821 --> 00:22:29.678\nI've been using SQL Management Studio\nall this time, right?\n\n460\n00:22:29.678 --> 00:22:33.717\nBut I could have fired up\nVisual Studio Community Edition,\n\n461\n00:22:33.717 --> 00:22:36.555\njumped right down here to SQL databases.\n\n462\n00:22:36.555 --> 00:22:39.247\nAnd once it loads, there's SampleDB1 and\n\n463\n00:22:39.247 --> 00:22:43.750\nSampleDB2 that I've been using\nthroughout this whole series.\n\n464\n00:22:43.750 --> 00:22:46.770\nAnd if we open up one of those,\n\n465\n00:22:46.770 --> 00:22:51.510\nsee how it's got Open in SQL Server Object\nExplorer or Open in the Management Portal.\n\n466\n00:22:51.510 --> 00:22:53.470\nManagement Portal will\ntake me to the web page.\n\n467\n00:22:53.470 --> 00:22:57.339\nBut if I do it in the Object Explorer,\nit's actually gonna open up that\n\n468\n00:22:57.339 --> 00:23:00.632\ndatabase just like I was in\nSQL Management Studio, right?\n\n469\n00:23:00.632 --> 00:23:02.919\nAnd I can connect up and\nstart to work with that.\n\n470\n00:23:02.919 --> 00:23:06.616\nSo Visual Studio gives us a lot of\nfunctionality here to be able to work\n\n471\n00:23:06.616 --> 00:23:07.660\nwith that.\n\n472\n00:23:07.660 --> 00:23:12.900\nBut what I want is I wanna deploy\na new application right up in here.\n\n473\n00:23:12.900 --> 00:23:17.699\nAnd if I wanna do that, basically I\nget connected to the Azure service\n\n474\n00:23:17.699 --> 00:23:22.188\nthat I'm on and then I can just\ngo up to File > New, and Project.\n\n475\n00:23:22.188 --> 00:23:24.011\nAnd so I'm gonna create a new project.\n\n476\n00:23:24.011 --> 00:23:26.092\nAnd when you create a project,\n\n477\n00:23:26.092 --> 00:23:30.424\nyou start by picking what language\nyou want to write in, right?\n\n478\n00:23:30.424 --> 00:23:35.161\nAnd so I've got C#,\nVisual Basic, F#, C++, and so on.\n\n479\n00:23:35.161 --> 00:23:39.014\nAnd you'll see SQL Server but\nI'm not creating just a SQL database,\n\n480\n00:23:39.014 --> 00:23:41.840\nI want a web front-end and\na database back-end.\n\n481\n00:23:41.840 --> 00:23:45.655\nAnd so I'm gonna go Visual C#, and\nin here you'll see Cloud, okay?\n\n482\n00:23:45.655 --> 00:23:49.465\nNow if you come to the Cloud option,\nand you only see two or three things,\n\n483\n00:23:49.465 --> 00:23:53.606\nthat's a great indicator that you don't\nhave the SDK installed, all right?\n\n484\n00:23:53.606 --> 00:23:56.053\nI think you always see.\n\n485\n00:23:56.053 --> 00:23:57.130\nI can't remember what you see.\n\n486\n00:23:57.130 --> 00:24:00.989\nI think you always see ASP.NET Web\nApplication, and there's one other one.\n\n487\n00:24:00.989 --> 00:24:06.770\nAnd then there be a link up here that'll\nsay get the Azure SDK all right.\n\n488\n00:24:06.770 --> 00:24:10.170\nSo it looks like your creating\na project but if you click on it.\n\n489\n00:24:10.170 --> 00:24:13.760\nIt doesn't create a new project it takes\nyou to the portal loader to actually\n\n490\n00:24:13.760 --> 00:24:16.290\ninstall the right SDK to\nget it on your system.\n\n491\n00:24:16.290 --> 00:24:18.760\nSo you'll see an icon up there\nwith a cloud like what I've got.\n\n492\n00:24:20.070 --> 00:24:23.350\nBut as you look at the different options\nhere, we've got like a cloud service.\n\n493\n00:24:23.350 --> 00:24:27.340\nWe've got an Azure Resource Group and\nthat's what you wanna do.\n\n494\n00:24:27.340 --> 00:24:30.600\nIn the old portal you used to do\nthings all sorts of different ways\n\n495\n00:24:30.600 --> 00:24:31.720\nas you deployed it.\n\n496\n00:24:31.720 --> 00:24:34.890\nBut in the portal we always wanna\ndo an Azure Resource Group.\n\n497\n00:24:34.890 --> 00:24:37.310\nI wanna create a web front end and\ndatabase that are linked together,\n\n498\n00:24:37.310 --> 00:24:38.860\nthat are a part of the same system.\n\n499\n00:24:38.860 --> 00:24:40.050\nThat's what I wanna create.\n\n500\n00:24:40.050 --> 00:24:43.260\nAnd if you don't have the SDK,\nyou won't see that resource group option.\n\n501\n00:24:43.260 --> 00:24:45.920\n>> So Don, really quickly just to make\nsure I'm following what's going on here.\n\n502\n00:24:45.920 --> 00:24:48.570\nI have a question,\nmaybe somebody else does as well.\n\n503\n00:24:48.570 --> 00:24:52.870\nWe are creating the web front-end here\n\n504\n00:24:52.870 --> 00:24:56.360\nusing the Visual Studio Community Edition\non our computer, and\n\n505\n00:24:56.360 --> 00:25:00.600\nit's making connection to Azure or it's\nactually going to upload it into Azure?\n\n506\n00:25:00.600 --> 00:25:01.460\n>> How about both?\n\n507\n00:25:01.460 --> 00:25:02.040\n>> Oh.\n>> So\n\n508\n00:25:02.040 --> 00:25:04.690\nwhat's happening is [LAUGH]\nit gets a little confusing.\n\n509\n00:25:04.690 --> 00:25:07.620\nWhen I create this service\nit is reaching out to Azure,\n\n510\n00:25:07.620 --> 00:25:10.700\nit is creating a web front-end,\nit is creating a database.\n\n511\n00:25:10.700 --> 00:25:12.990\nIt's also doing the same\nthing on my own system.\n\n512\n00:25:12.990 --> 00:25:16.720\nSo I've got a local copy and\nthe one up in Azure.\n\n513\n00:25:16.720 --> 00:25:20.390\nAnd as I develop, I can develop and\ntest right here on the local copy and\n\n514\n00:25:20.390 --> 00:25:22.220\nthen I just hit publish.\n\n515\n00:25:22.220 --> 00:25:25.640\nAnd when you publish it, it pushes\nit up to the Azure copy and it runs.\n\n516\n00:25:25.640 --> 00:25:27.060\nYou've effectively got a dev and\n\n517\n00:25:27.060 --> 00:25:29.130\na production environment right\nhere on your own machine.\n\n518\n00:25:29.130 --> 00:25:31.910\nNow, if you have more than one\ndeveloper that doesn't work so well.\n\n519\n00:25:31.910 --> 00:25:34.240\nThat's where you need Team Edition and\nall the advanced stuff.\n\n520\n00:25:34.240 --> 00:25:38.620\nBut just for single app development,\nif you're a single developer, you can\n\n521\n00:25:38.620 --> 00:25:41.527\npush this stuff really easy right from\nhere, so you're kinda doing both local and\n\n522\n00:25:41.527 --> 00:25:44.490\nremote development,\nyou just publish your changes up.\n\n523\n00:25:44.490 --> 00:25:45.050\n>> Ooh, snazzy.\n\n524\n00:25:45.050 --> 00:25:47.750\n>> All right, so I'm gonna give\nthis thing a resource group name.\n\n525\n00:25:47.750 --> 00:25:52.580\nMy other one was ITProTV Portal,\nmaybe this one's like ITProTV Help Desk.\n\n526\n00:25:53.600 --> 00:25:56.510\nSo this is gonna be a help\ndesk application, and\n\n527\n00:25:56.510 --> 00:25:59.258\nsee how it's got a local folder for\nthis one?\n\n528\n00:25:59.258 --> 00:26:02.050\nI told it I'm doing an Azure Resource\nGroup but it is going to make a local\n\n529\n00:26:02.050 --> 00:26:05.570\ncopy of it, and that'll just be\nmy ITProTV help desk application.\n\n530\n00:26:06.830 --> 00:26:10.330\nAnd I'll go and hit okay, and\nit's going to create that project.\n\n531\n00:26:10.330 --> 00:26:15.650\nNow it's going to ask me what template to\nuse, and the templates that I'm seeing\n\n532\n00:26:15.650 --> 00:26:19.710\nare a lot of the same templates\nthat we already had up in Azure.\n\n533\n00:26:19.710 --> 00:26:22.370\nI choose one for\na third party project, mojoPortal.\n\n534\n00:26:22.370 --> 00:26:24.010\nBut, there's some from Microsoft.\n\n535\n00:26:24.010 --> 00:26:26.290\nThe one that you'll normal\nwant is this guy right here.\n\n536\n00:26:26.290 --> 00:26:28.280\nWeb app + SQL.\n\n537\n00:26:28.280 --> 00:26:32.470\nI need a web application with\naccess to a SQL database, right?\n\n538\n00:26:32.470 --> 00:26:35.380\nThe two are gonna go hand in hand and\nwhen you do this,\n\n539\n00:26:35.380 --> 00:26:37.200\nit does some really cool stuff.\n\n540\n00:26:37.200 --> 00:26:39.910\nCuz, just having a web app and\na database, that's not really that hard.\n\n541\n00:26:39.910 --> 00:26:40.720\nI can create that by hand and\n\n542\n00:26:40.720 --> 00:26:45.640\nit wouldn't be a bid deal but this\nthing is going to set up auto scaling.\n\n543\n00:26:45.640 --> 00:26:47.880\nSo it'll scale automatically.\n\n544\n00:26:47.880 --> 00:26:52.460\nAs the web front-end gets busy, it will\nclone out more web front-ends for you.\n\n545\n00:26:52.460 --> 00:26:54.480\nAnd it will load balance them for you.\n\n546\n00:26:54.480 --> 00:26:56.350\nIt does it all automatically.\n\n547\n00:26:56.350 --> 00:26:58.190\nStuff like that is really impressive.\n\n548\n00:26:58.190 --> 00:27:01.800\nIt sets up monitoring and\nalerting as well as the auto scaling.\n\n549\n00:27:01.800 --> 00:27:03.240\nIt just puts all this in place so\n\n550\n00:27:03.240 --> 00:27:05.180\nyou don't have to know all\nthe nitty-gritty details.\n\n551\n00:27:05.180 --> 00:27:08.780\nAnd for a developer that's really nice\nYou don't have to be a sys admin,\n\n552\n00:27:08.780 --> 00:27:13.050\nyou can just be the developer and\npush this out all at once, and so I'll go\n\n553\n00:27:13.050 --> 00:27:17.200\nahead and hit okay on that, and it's\ngonna provision that template out okay?\n\n554\n00:27:17.200 --> 00:27:21.270\nNow when it does that it's gonna turn\nme loose and it doesn't give you\n\n555\n00:27:21.270 --> 00:27:23.990\na lot of instruction, there's not\na whole lot of hand holding here.\n\n556\n00:27:23.990 --> 00:27:28.950\nBut what it's got is a template\nfile that says when I\n\n557\n00:27:28.950 --> 00:27:32.970\npublish this up to Azure,\nhere's all the stuff I need.\n\n558\n00:27:32.970 --> 00:27:34.490\nHere's the load balancer that I need.\n\n559\n00:27:34.490 --> 00:27:36.400\nHere's the front-end server\nweb app that I need.\n\n560\n00:27:36.400 --> 00:27:38.340\nHere's the back-end\nAzure SQL database I need.\n\n561\n00:27:38.340 --> 00:27:39.880\nHere's all the components I need.\n\n562\n00:27:39.880 --> 00:27:43.400\nSo that Azure will know what to create and\nwhat to put where.\n\n563\n00:27:43.400 --> 00:27:45.210\nAnd, that's all defined over here.\n\n564\n00:27:45.210 --> 00:27:47.830\nIn my solution explorer\nyou'll see templates, and\n\n565\n00:27:47.830 --> 00:27:51.390\nthere's this template right here,\nWebSiteSQLDatabase.json.\n\n566\n00:27:51.390 --> 00:27:53.680\nJSON files,\nif you're not familiar with them,\n\n567\n00:27:53.680 --> 00:27:57.150\nthey're just little text files\nthat contain a configuration.\n\n568\n00:27:57.150 --> 00:28:01.360\nAnd as I look at this, it'll come in here\nand it'll say a schema of what we're\n\n569\n00:28:01.360 --> 00:28:05.840\ndoing, and as I scroll down, you'll see\nall the settings that are important to us,\n\n570\n00:28:05.840 --> 00:28:10.400\nas far as what sku capacity we're\ncreating, which is basically\n\n571\n00:28:10.400 --> 00:28:15.300\nthe pricing tier we're picking for our web\napp, our administrator login and so on.\n\n572\n00:28:15.300 --> 00:28:17.411\nMost of these are just variable\nplaceholders, you'll see later on,\n\n573\n00:28:17.411 --> 00:28:18.880\nwhere it actually gets the data.\n\n574\n00:28:18.880 --> 00:28:23.700\nBut these are all the configuration\nvalues for my application.\n\n575\n00:28:23.700 --> 00:28:27.920\nAnd so when I deploy it out,\nit'll know what to do and what to have.\n\n576\n00:28:27.920 --> 00:28:31.520\nAnd I need to come in here and\ncustomize these things.\n\n577\n00:28:31.520 --> 00:28:33.450\nSo here's the website that\nit's gonna be creating.\n\n578\n00:28:33.450 --> 00:28:34.890\nOne of the resources.\n\n579\n00:28:34.890 --> 00:28:36.340\nA Microsoft SQL Server, right?\n\n580\n00:28:36.340 --> 00:28:39.250\nSo it's gonna spin up\nAzure SQL in the background.\n\n581\n00:28:39.250 --> 00:28:42.700\nAnd all the different things\nare defined right here in this file.\n\n582\n00:28:42.700 --> 00:28:45.790\nHere's the firewall rules to\nallow access to it, right?\n\n583\n00:28:45.790 --> 00:28:51.210\nRemember that all zeroes that was allowing\nAzure services to access this database?\n\n584\n00:28:51.210 --> 00:28:52.920\nYou'll see the web server farm,\n\n585\n00:28:52.920 --> 00:28:55.620\nthat's where it's starting to set\nup the auto scale, and so on.\n\n586\n00:28:55.620 --> 00:28:58.610\nThere's a website that it defines,\nall right here.\n\n587\n00:28:58.610 --> 00:29:02.230\nOkay, so programmatically you can\ncreate a template that defines\n\n588\n00:29:02.230 --> 00:29:04.810\nall the resources you need in Azure.\n\n589\n00:29:04.810 --> 00:29:08.510\nAnd then all you have to\ndo is go into this project,\n\n590\n00:29:08.510 --> 00:29:13.240\ninto the solution explorer and add in\nthe web pages, the things that you need,\n\n591\n00:29:13.240 --> 00:29:16.460\nthat then inquiry the database on\nthe back-end that defines that.\n\n592\n00:29:16.460 --> 00:29:18.530\nAnd so you get all the set up right here.\n\n593\n00:29:18.530 --> 00:29:21.710\nDeveloping in an environment that\nyou're already familiar with.\n\n594\n00:29:21.710 --> 00:29:26.290\nAnd when you're ready you can\njust push it right up into Azure.\n\n595\n00:29:26.290 --> 00:29:29.120\nSo when you go up here\nto build your solution\n\n596\n00:29:29.120 --> 00:29:32.330\nit knows that the solution\nis an Azure solution.\n\n597\n00:29:32.330 --> 00:29:38.130\nAnd it knows to publish that up and get it\nup into Azure and get it up and running.\n\n598\n00:29:38.130 --> 00:29:42.160\nAnd you can still run it locally and\ndo your tests and so on right here, but\n\n599\n00:29:42.160 --> 00:29:46.400\nthen we can push it up to Azure where it\nneeds to be now it's exposed to our users.\n\n600\n00:29:46.400 --> 00:29:48.780\nSo for people that need it\ndeveloped from scratch,\n\n601\n00:29:48.780 --> 00:29:51.380\nMicrosoft has made it pretty easy,\nit's all right in here.\n\n602\n00:29:51.380 --> 00:29:53.040\nAnd if you're one of those people,\n\n603\n00:29:53.040 --> 00:29:57.430\nif you're wanting to develop one there\nis a free ebook on Microsoft's website.\n\n604\n00:29:57.430 --> 00:29:59.800\nI'll post this link with the also.\n\n605\n00:29:59.800 --> 00:30:03.390\nCalled Azure Web Apps for Developers,\nMicrosoft Azure Essentials.\n\n606\n00:30:03.390 --> 00:30:07.990\nAnd it's free, it's like 130 pages, and\nwhat it does is it goes step by step and\n\n607\n00:30:07.990 --> 00:30:11.170\nwalks you through creating an application,\npublishing it, and\n\n608\n00:30:11.170 --> 00:30:13.520\nshows you all the steps.\n\n609\n00:30:13.520 --> 00:30:15.670\nIf we did it here it'd be\nlike a two hour episode.\n\n610\n00:30:15.670 --> 00:30:19.780\nBut you kind of run through and it shows\nyou all the things you need to get your\n\n611\n00:30:19.780 --> 00:30:22.970\nfirst application up and\nrunning in Azure Cloud.\n\n612\n00:30:22.970 --> 00:30:25.840\nSo, if you want to learn that process\nI really do recommend this book.\n\n613\n00:30:25.840 --> 00:30:27.890\nIt's free, it's an easy read and\n\n614\n00:30:27.890 --> 00:30:30.580\nit walks you through step by step\nof everything you need to do.\n\n615\n00:30:30.580 --> 00:30:34.700\nAfter that you just take these steps and\nsub in your own code and\n\n616\n00:30:34.700 --> 00:30:37.130\nyou've got a web application\nrunning up in Azure.\n\n617\n00:30:37.130 --> 00:30:40.170\n>> Yeah, you gotta really appreciate that\ntype of philosophy when it comes to their\n\n618\n00:30:40.170 --> 00:30:41.220\nsystems.\n\n619\n00:30:41.220 --> 00:30:43.430\nLet's get people hooked on this product.\n\n620\n00:30:43.430 --> 00:30:47.930\nGive them that free book so\nthey can really get their feet wet\n\n621\n00:30:47.930 --> 00:30:50.950\nwith that application so\nthey can start doing it.\n\n622\n00:30:50.950 --> 00:30:52.690\nOnce they're comfortable with it.\n\n623\n00:30:52.690 --> 00:30:54.840\nThey're not gonna run to something else,\nthey're gonna continue to work,\n\n624\n00:30:54.840 --> 00:30:57.530\nand learn, and\nuse that system instead of anybody else.\n\n625\n00:30:57.530 --> 00:30:59.450\nSo I think they've really done\nthemselves a service, and\n\n626\n00:30:59.450 --> 00:31:02.210\nthey've done us as a user a service,\nbecause it makes it easier for\n\n627\n00:31:02.210 --> 00:31:05.120\nus to get involved with\nusing this type of thing.\n\n628\n00:31:05.120 --> 00:31:07.310\nDon, is there anything else that\nwe need to know when it comes to.\n\n629\n00:31:07.310 --> 00:31:08.060\n>> Well, let's.\n\n630\n00:31:08.060 --> 00:31:09.160\n>> Wanna check out the other one?\n\n631\n00:31:09.160 --> 00:31:10.480\n>> Let's go back to the mojoPortal.\n\n632\n00:31:10.480 --> 00:31:13.460\nI did get the error that I thought I was\ngonna get, so I'm gonna ignore that.\n\n633\n00:31:13.460 --> 00:31:14.858\nBut if we go back to my Azure portal,\n\n634\n00:31:14.858 --> 00:31:16.570\nI got this nice big error\ncreating mojoPortal.\n\n635\n00:31:16.570 --> 00:31:17.185\n>> You have failed.\n\n636\n00:31:17.185 --> 00:31:18.590\n[LAUGH]\n>> They haven't updated it for\n\n637\n00:31:18.590 --> 00:31:21.420\nthe latest portal, but it's funny\ncuz it deploys and actually works.\n\n638\n00:31:21.420 --> 00:31:24.600\nMicrosoft made sure there was\nbackwards compatibility in it, but\n\n639\n00:31:24.600 --> 00:31:29.280\nonce that solution was deployed,\nhere's mojoPortal.\n\n640\n00:31:29.280 --> 00:31:31.280\nIt's been deployed on my system.\n\n641\n00:31:31.280 --> 00:31:36.080\nIf I take a look at it,\nit's created a resource group for\n\n642\n00:31:36.080 --> 00:31:38.480\nit, the itprotvdemoportal, and\n\n643\n00:31:38.480 --> 00:31:43.640\nif I look at that resource group It's\ngot a number of components inside of it.\n\n644\n00:31:43.640 --> 00:31:45.020\nSo I'm gonna go into My Resource Groups.\n\n645\n00:31:45.020 --> 00:31:46.770\nI'm gonna find ITProTV Demo Portal.\n\n646\n00:31:46.770 --> 00:31:49.656\nAnd if I start to look at\nthe resources inside of it,\n\n647\n00:31:49.656 --> 00:31:52.286\nlook at all the different\nthings that it made.\n\n648\n00:31:52.286 --> 00:31:55.586\nRight?\nIt made a SQL server and a SQL database.\n\n649\n00:31:55.586 --> 00:31:57.585\nRight?\nI need that for storing my data.\n\n650\n00:31:57.585 --> 00:32:00.796\nIt made a web application,\nthe ITProTV demo portal.\n\n651\n00:32:00.796 --> 00:32:02.879\nAnd then it made a network\nconfiguration and\n\n652\n00:32:02.879 --> 00:32:06.450\nthe other resources that are a part of it,\na load balancer and so on.\n\n653\n00:32:06.450 --> 00:32:11.840\nThese are all components that it's put\ntogether all grouped into this one\n\n654\n00:32:11.840 --> 00:32:12.860\nresource group.\n\n655\n00:32:12.860 --> 00:32:15.110\nAnd if you click on any of those\nindividual components you can come over\n\n656\n00:32:15.110 --> 00:32:17.210\nhere and kind of view what it is and\nwhat it does.\n\n657\n00:32:17.210 --> 00:32:21.060\nSo this is the web app itself, and\nso I can see the web app is running,\n\n658\n00:32:21.060 --> 00:32:23.825\nand it actually is showing\nit's healthy here.\n\n659\n00:32:23.825 --> 00:32:25.830\nThis is why I say we can\nkind of ignore that error.\n\n660\n00:32:25.830 --> 00:32:27.300\nAnd if I browse to that portal,\n\n661\n00:32:27.300 --> 00:32:31.600\nlet's see if it's already up,\nit probably is and so I'll browse to it.\n\n662\n00:32:31.600 --> 00:32:34.041\nNow, because this is the first time,\n\n663\n00:32:34.041 --> 00:32:38.632\nyou know the front end is working if\nyou see the mojoPortal status page.\n\n664\n00:32:38.632 --> 00:32:42.042\nAnd then it starts its install, and so\nit hasn't actually populated that database\n\n665\n00:32:42.042 --> 00:32:45.352\nyet, so I do have to give it a little bit\nof time while it populates that database,\n\n666\n00:32:45.352 --> 00:32:48.750\nand you'll see a bunch of stuff scroll by,\nassuming that it's working.\n\n667\n00:32:48.750 --> 00:32:52.280\nDoes seem to be going a little slow,\nand the first time you push out an app,\n\n668\n00:32:52.280 --> 00:32:54.390\nit does take a little while for\nthat to update.\n\n669\n00:32:54.390 --> 00:32:56.630\nRemember, especially when you\nhave load balancers set up,\n\n670\n00:32:56.630 --> 00:33:00.100\nthey have to kind of warm up,\nit's a weird process they go through.\n\n671\n00:33:00.100 --> 00:33:04.730\nBut also, the firewall rules, firewall\nrules, a lot of people don't know this but\n\n672\n00:33:04.730 --> 00:33:09.240\non Microsoft's end, they apply them\nin these weird five minute intervals.\n\n673\n00:33:09.240 --> 00:33:12.570\nSo a firewall rule can be created, but\nit doesn't actually take effect for\n\n674\n00:33:12.570 --> 00:33:13.500\nup to five minutes.\n\n675\n00:33:13.500 --> 00:33:15.430\nAnd so sometimes you might just\nbe getting that firewall rule.\n\n676\n00:33:15.430 --> 00:33:18.220\nSo when you first deploy an application\n\n677\n00:33:18.220 --> 00:33:20.680\nyou may need to wait a few minutes\nbefore it actually goes live.\n\n678\n00:33:20.680 --> 00:33:21.840\nAnd I can see mine's kicking in,\n\n679\n00:33:21.840 --> 00:33:26.560\nso I am able to get to the mojoPortal, and\nright now, see how it's running a script?\n\n680\n00:33:26.560 --> 00:33:29.340\nWhat that script does is it's connecting\nto the database and pushing data, and\n\n681\n00:33:29.340 --> 00:33:31.770\nI can see it's already\nconnected to the database.\n\n682\n00:33:31.770 --> 00:33:34.330\nAnd now it's starting\nto flood data into it.\n\n683\n00:33:34.330 --> 00:33:37.610\nAnd that's what's gonna get where\nwe can have all of our content and\n\n684\n00:33:37.610 --> 00:33:40.050\nother resources available for\npeople to view.\n\n685\n00:33:40.050 --> 00:33:40.910\nThis application is up,\n\n686\n00:33:40.910 --> 00:33:45.620\nand as I wanna monitor it,\nwell it's all right here in my system.\n\n687\n00:33:45.620 --> 00:33:48.500\nIf I start going to things\nlike SQL databases,\n\n688\n00:33:48.500 --> 00:33:52.262\nI will see the mojoPortal\ndatabase right there, right?\n\n689\n00:33:52.262 --> 00:33:55.465\nSo there it is, it's a part of the system,\nit's not a version 12,\n\n690\n00:33:55.465 --> 00:33:58.705\nit's not the SQL 2016,\nit's the older version.\n\n691\n00:33:58.705 --> 00:34:01.045\nBut it's there, it's up and it's running.\n\n692\n00:34:01.045 --> 00:34:06.135\nIf I go into my virtual machines,\nI'm not gonna see a virtual machine, and\n\n693\n00:34:06.135 --> 00:34:10.415\nthat's because I chose to do a web app, an\napp service, instead of a virtual machine,\n\n694\n00:34:10.415 --> 00:34:14.400\njust like I don't see my SQL service\nhere either because we did Azure SQL.\n\n695\n00:34:14.400 --> 00:34:18.850\nBut if I go over here to App Services,\nI will see itprotvdemoportal,\n\n696\n00:34:18.850 --> 00:34:20.840\nthere's the web app service, right?\n\n697\n00:34:20.840 --> 00:34:23.940\nAnd just because I deployed it as\na package doesn't mean I can't work with\n\n698\n00:34:23.940 --> 00:34:24.960\nthese individually.\n\n699\n00:34:24.960 --> 00:34:28.640\nIf I want to manually scale one of these\nthings up, or down, or whatever, I can\n\n700\n00:34:28.640 --> 00:34:31.470\ncome in and tweak it and start changing\nit and working with it individually.\n\n701\n00:34:31.470 --> 00:34:33.930\nI've got full control of this project,\nin fact I can go and\n\n702\n00:34:33.930 --> 00:34:37.180\ndelete mojoPortal out of there,\nand start to put my own stuff in.\n\n703\n00:34:37.180 --> 00:34:39.350\nIt's not like I'm married to that package,\n\n704\n00:34:39.350 --> 00:34:41.300\nthat also means that I'm responsible for\nupdating it.\n\n705\n00:34:41.300 --> 00:34:44.200\nSo if the mojoPortal guys put out\nan update, I've gotta go in and apply it,\n\n706\n00:34:44.200 --> 00:34:47.300\nthe packages don't keep\nyour system up to date.\n\n707\n00:34:47.300 --> 00:34:51.300\nSo just be aware that there are some\nthings that we do still need to do\n\n708\n00:34:51.300 --> 00:34:53.190\nwhen we deploy one of these things.\n\n709\n00:34:53.190 --> 00:34:57.970\nAnd so, if I go in here to my app service\nplan I can start to see the statistics\n\n710\n00:34:57.970 --> 00:35:01.780\nhere on that, what my usage is, and start\nmaking decisions on whether I need to\n\n711\n00:35:01.780 --> 00:35:04.740\nupdate or upgrade or whatever and\nstart keeping track of that.\n\n712\n00:35:04.740 --> 00:35:06.410\nIt's a really cool system,\n\n713\n00:35:06.410 --> 00:35:08.580\nonce it's deployed all these\ncomponents are married together.\n\n714\n00:35:08.580 --> 00:35:14.350\nAnd so if I go to my Resource groups,\nwhen I see that ITProTV portal.\n\n715\n00:35:14.350 --> 00:35:16.120\nWell, the portal is right here and\n\n716\n00:35:16.120 --> 00:35:19.580\nthat portal contains all the components\nthat are powering that application.\n\n717\n00:35:19.580 --> 00:35:23.450\nWhere if I pushed my own application up,\nitprotvhelpdesk, I would see that there\n\n718\n00:35:23.450 --> 00:35:26.822\nand it would contain all the components\nand I could work with them as a whole.\n\n719\n00:35:26.822 --> 00:35:29.480\nIt's just a very, very powerful system,\nmakes development very easy.\n\n720\n00:35:29.480 --> 00:35:32.223\n>> Yeah, it's not that difficult\nat all if you take a look at it.\n\n721\n00:35:32.223 --> 00:35:35.090\nI mean Don, you really haven't written\na single line of code yet, and yet\n\n722\n00:35:35.090 --> 00:35:38.540\nwe already have a web app running\nthat is connected to a database.\n\n723\n00:35:38.540 --> 00:35:40.940\nWe've got servers and\neverything's off to the races.\n\n724\n00:35:40.940 --> 00:35:44.120\nNow it's all just basically\nsome back end configuration and\n\n725\n00:35:44.120 --> 00:35:46.350\nadding what you need to your web app.\n\n726\n00:35:46.350 --> 00:35:47.270\nVery, very cool stuff,\n\n727\n00:35:47.270 --> 00:35:50.890\nDon you've been a wealth of knowledge\nwhen it comes to this Azure SQL stuff.\n\n728\n00:35:50.890 --> 00:35:54.510\nHopefully, I mean I got a lot out of it,\nhopefully our viewers did as well.\n\n729\n00:35:54.510 --> 00:35:56.477\nIf you didn't, Don at itpro.tv.\n\n730\n00:35:56.477 --> 00:35:59.152\n>> [LAUGH]\n>> That's where you wanna go.\n\n731\n00:35:59.152 --> 00:36:00.837\n>> Just for completeness,\n\n732\n00:36:00.837 --> 00:36:05.040\nso that I can prove it worked, the\nhomepage of mojoPortal is about to load.\n\n733\n00:36:05.040 --> 00:36:09.210\nSo it does this database population,\nand then after it's done, there it is,\n\n734\n00:36:09.210 --> 00:36:10.620\nit takes us to the homepage.\n\n735\n00:36:10.620 --> 00:36:12.850\nI've now got the mojoPortal CMS up and\n\n736\n00:36:12.850 --> 00:36:15.960\nrunning and\nI can start loading data into it.\n\n737\n00:36:15.960 --> 00:36:21.590\nThe web page is coming from a web app and\nthen the contents like these images and\n\n738\n00:36:21.590 --> 00:36:25.450\nthe articles that are posted inside of it,\nthose are coming from the database.\n\n739\n00:36:25.450 --> 00:36:29.810\nI've got web app talking to a database\nup and running all stored in Azure,\n\n740\n00:36:29.810 --> 00:36:34.520\nall fully scalable,\nfully redundant and just very healthy.\n\n741\n00:36:34.520 --> 00:36:35.156\n>> Awesome stuff, Don.\n\n742\n00:36:35.156 --> 00:36:36.590\n>> Good stuff.\nYes, excellent.\n\n743\n00:36:36.590 --> 00:36:40.570\nThat being said, it looks like we\nhave finished, completed, been and\n\n744\n00:36:40.570 --> 00:36:42.750\ndone away with our Azure SQL series.\n\n745\n00:36:42.750 --> 00:36:45.760\nHopefully you guys have enjoyed it,\nwe had a great time making it for you.\n\n746\n00:36:45.760 --> 00:36:49.140\nBut signing off for ITProTV,\nI've been your host Daniel Lowrie.\n\n747\n00:36:49.140 --> 00:36:49.803\n>> And I'm Don Pezet.\n\n748\n00:36:49.803 --> 00:36:50.918\n>> We'll see you next time.\n\n749\n00:36:50.918 --> 00:36:56.320\n[MUSIC]\n\n",
          "vimeoId": "151933934"
        }
      ],
      "title": "Azure SQL"
    }
  ],
  "url": "azure-sql",
  "vLab": false
}
