{
  "description": "The Cisco Certified Network Associate (CCNA) is the most well known Cisco certification path. It takes the general networking theory from the CCENT certification and applies it in real world scenarios. It moves beyond configuring individual devices into more complex territory often requiring the configuration of numerous devices to create a robust and optimized network. While studying for this certification, you will revisit the routing and switching topics from the CCENT in more depth as you learn about and implement the advanced features of each technology.",
  "descriptionMD": "",
  "length": "70965",
  "name": "CCNA Routing and Switching",
  "practiceExam": true,
  "subtitle": "Cisco Certified Network Associate",
  "tagUrl": "legacy",
  "topics": [
    {
      "episodes": [
        {
          "description": null,
          "length": "533",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/cisco-ccna200105/cisco-ccna200105-overview-110916.00_08_49_04.Still001.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/cisco-ccna200105/cisco-ccna200105-overview-110916.00_08_49_04.Still001-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/cisco-ccna200105/cisco-ccna200105-overview-110916.00_08_49_04.Still001-sm.jpg",
          "title": "Overview",
          "transcript": "WEBVTT\n\n1\n00:00:00.050 --> 00:00:06.781\n[SOUND] In this video, we're gonna take\na look at the Cisco CCNA Routing and\n\n2\n00:00:06.781 --> 00:00:11.681\nSwitching 200-105 exam content on ITProTV.\n\n3\n00:00:11.681 --> 00:00:15.516\nNow, the CCNA Routing and Switching is a\ncertification that covers entry level tops\n\n4\n00:00:15.516 --> 00:00:18.060\nfor people who are getting\ninto the networking field.\n\n5\n00:00:18.060 --> 00:00:22.016\nPeople who wanna learn how to configure\nCisco routers, Cisco switches and\n\n6\n00:00:22.016 --> 00:00:26.052\nother basic Cisco concepts as well as\nnetworking fundamentals and theory.\n\n7\n00:00:26.052 --> 00:00:28.060\nThat makes this a great certification for\n\n8\n00:00:28.060 --> 00:00:32.220\nsomebody to pursue when they're just\nstarting out in the networking world.\n\n9\n00:00:32.220 --> 00:00:36.170\nNow CCNA is a part of a larger\ncertification scheme from Cisco that\n\n10\n00:00:36.170 --> 00:00:42.180\nactually begins with the CCENT, the Cisco\nCertified Entry Network Technician.\n\n11\n00:00:42.180 --> 00:00:43.370\nAnd as a result,\n\n12\n00:00:43.370 --> 00:00:47.280\nthey expect you to have that certification\nbefore moving into the CCNA.\n\n13\n00:00:47.280 --> 00:00:50.872\nThis is the next step in your\ncertification career with Cisco.\n\n14\n00:00:50.872 --> 00:00:54.242\nAfter that, yo u move into more advanced\nthings like CCNP and CCIU, which are for\n\n15\n00:00:54.242 --> 00:00:56.835\npeople who are already established\nin the networking field.\n\n16\n00:00:56.835 --> 00:00:58.161\nBut let's take a look at CCNA,\n\n17\n00:00:58.161 --> 00:01:01.304\nbecause that's what this\ncourse is gonna be based on.\n\n18\n00:01:01.304 --> 00:01:03.361\nNow that the CCNA itself or\nthe CCNA Routing and\n\n19\n00:01:03.361 --> 00:01:06.125\nSwitching is the one that focuses\non routers, and switches.\n\n20\n00:01:06.125 --> 00:01:09.864\nThere are other CCNA's that are out\nthere that focus on security or\n\n21\n00:01:09.864 --> 00:01:14.400\nservice provider storage,\nother types of technologies like that.\n\n22\n00:01:14.400 --> 00:01:17.205\nNow, the CCNA certification is\nactually made up of two exams.\n\n23\n00:01:17.205 --> 00:01:20.919\nAnd the first exam,\nwhat Cisco calls the ICND1 or\n\n24\n00:01:20.919 --> 00:01:25.260\nInterconnecting Cisco Networking Devices\nexam.\n\n25\n00:01:25.260 --> 00:01:29.611\nThat one is what gets you the CCENT\ncertification and then you've got\n\n26\n00:01:29.611 --> 00:01:35.325\nthe ICND2 exam, which is what the 200-105\ncontent is that you're about to view.\n\n27\n00:01:35.325 --> 00:01:40.390\nNow, you can't just take the 200-105 exam.\n\n28\n00:01:40.390 --> 00:01:43.460\nIf you do,\nthat's only half the certification.\n\n29\n00:01:43.460 --> 00:01:46.410\nSo what you need to do to\nachieve the CCNA Routing and\n\n30\n00:01:46.410 --> 00:01:49.230\nSwitching certification\nis one of two things.\n\n31\n00:01:49.230 --> 00:01:51.955\nMost people opt to do the two exams.\n\n32\n00:01:51.955 --> 00:01:59.211\nThe 100-105 ICND1 exam that can do\nthe CCNT followed by the 200-105 exam,\n\n33\n00:01:59.211 --> 00:02:03.900\nwhich would then combined with\nthe CCNT get you your CCNA.\n\n34\n00:02:05.080 --> 00:02:07.470\nNow if you're already familiar\nwith Cisco equipment and\n\n35\n00:02:07.470 --> 00:02:12.200\nyou've been working with it awhile, you\ncan choose to take the consolidated exam,\n\n36\n00:02:12.200 --> 00:02:14.410\nwhat they call CCNA composite.\n\n37\n00:02:14.410 --> 00:02:17.781\nIt's one exam, the 200-125 and\n\n38\n00:02:17.781 --> 00:02:23.047\nit contains test material from\nboth the ICND1 and the ICND2.\n\n39\n00:02:23.047 --> 00:02:25.161\nSo, it's basically just\ncombining it into one big test.\n\n40\n00:02:25.161 --> 00:02:28.054\nIt makes it where you\njust take a shorter test,\n\n41\n00:02:28.054 --> 00:02:30.510\nas opposed to having to take two tests.\n\n42\n00:02:30.510 --> 00:02:33.102\nSo that's kinda nice, but price-wise,\nit doesn't save you any money.\n\n43\n00:02:33.102 --> 00:02:36.988\nThe composite exam actually costs as much\nas the other two exams combined together.\n\n44\n00:02:36.988 --> 00:02:40.961\nSo it's not a money saving thing,\nit's really just a time saving thing.\n\n45\n00:02:40.961 --> 00:02:44.301\nI usually encourage people to do\nthe separate exams, cuz it allows you to\n\n46\n00:02:44.301 --> 00:02:48.030\ndivide up your study material and\nit makes life a little easier on you.\n\n47\n00:02:48.030 --> 00:02:52.150\nFor the ICND1 exam, you only need to\nknow the content from our CCNT show.\n\n48\n00:02:52.150 --> 00:02:56.041\nAnd for the 200-105, you just need\nthe content from our CCNA show,\n\n49\n00:02:56.041 --> 00:02:58.220\nthis one that's about to follow.\n\n50\n00:02:58.220 --> 00:03:01.360\nSo, that does kind of shrink things down\nto make it a little more manageable as\n\n51\n00:03:01.360 --> 00:03:03.680\nfar as all of your study materials.\n\n52\n00:03:03.680 --> 00:03:05.740\nNow as far as what's on the exam itself,\n\n53\n00:03:05.740 --> 00:03:09.390\nwell, the exam is made up\nof five different domains.\n\n54\n00:03:09.390 --> 00:03:14.094\nIt starts of at LAN Switching Technologies\nthat makes up a quarter of the exam, 26%.\n\n55\n00:03:14.094 --> 00:03:17.128\nSo, that focuses entirely\non Cisco switches.\n\n56\n00:03:17.128 --> 00:03:22.008\nAfter that, we get Routing Technologies\nwhich is well, obviously, going to be\n\n57\n00:03:22.008 --> 00:03:27.060\nrouters and that compiles about 29% of\nthe exam, then we got WAN Technologies.\n\n58\n00:03:27.060 --> 00:03:29.749\nNow WAN that's Wide Area Networking.\n\n59\n00:03:29.749 --> 00:03:35.401\nWAN connections are on routers, so this is\nreally an extension of a router module.\n\n60\n00:03:35.401 --> 00:03:37.889\nSo, we have a little bit more in routing.\n\n61\n00:03:37.889 --> 00:03:40.998\nAfter that, we move into some really\nneat things, Infrastructure Services and\n\n62\n00:03:40.998 --> 00:03:42.650\nInfrastructure Maintenance.\n\n63\n00:03:42.650 --> 00:03:46.689\nInfrastructure Services is where we\ntake those routers and switches, and\n\n64\n00:03:46.689 --> 00:03:49.713\nwe see what they can do beyond routing,\nand switching.\n\n65\n00:03:49.713 --> 00:03:54.247\nYou'll find where a lot of routers can\nactually be VPN servers or they can\n\n66\n00:03:54.247 --> 00:03:59.480\ndo other things in addition to just being\na router and switches are the same way.\n\n67\n00:03:59.480 --> 00:04:03.226\nSome switches can actually act like\nrouters, they can be layer three switches.\n\n68\n00:04:03.226 --> 00:04:06.439\nWe have switches that can perform quality\nof service, all sorts of really neat\n\n69\n00:04:06.439 --> 00:04:09.370\nfeatures and that's what we start\nto see in infrastructure services.\n\n70\n00:04:10.460 --> 00:04:13.973\nNow one of the big pitfalls we see out in\nproduction is that a lot of people learn\n\n71\n00:04:13.973 --> 00:04:17.811\nhow to set things up, but they don't learn\nhow to keep them running over long periods\n\n72\n00:04:17.811 --> 00:04:20.918\nof time and that's what\nInfrastructure Maintenance is all about.\n\n73\n00:04:20.918 --> 00:04:24.854\nOnce your deployment is done, how do\nyou keep everything running nice and\n\n74\n00:04:24.854 --> 00:04:26.610\nsmooth and moving along?\n\n75\n00:04:26.610 --> 00:04:29.681\nAnd so that's kinda last piece\nthat we cover when we jump into\n\n76\n00:04:29.681 --> 00:04:33.902\nInfrastructure Maintenance and notice how\nthis start to get a little bit smaller,\n\n77\n00:04:33.902 --> 00:04:35.426\n16%, 14% and 15%.\n\n78\n00:04:35.426 --> 00:04:39.275\nThese are topics that are important in and\nof themselves, but\n\n79\n00:04:39.275 --> 00:04:43.800\nnot as important as getting actually\nwith the switches and the routers.\n\n80\n00:04:43.800 --> 00:04:45.634\nAnd when you take a look\nat the technologies,\n\n81\n00:04:45.634 --> 00:04:49.109\nif you've already done you CCENT, you'll\nsee some of these topics are familiar that\n\n82\n00:04:49.109 --> 00:04:51.301\nyou've already learned about VLANs,\nfor example.\n\n83\n00:04:51.301 --> 00:04:52.913\nWell, here we go a bit further.\n\n84\n00:04:52.913 --> 00:04:55.522\nWe learn more about VLANs,\nas an advanced functionality.\n\n85\n00:04:55.522 --> 00:04:58.574\nWe learn about spanning tree protocol and\nloop protection.\n\n86\n00:04:58.574 --> 00:05:02.156\nThese are features that are built-in to\nevery Cisco switch that you just need to\n\n87\n00:05:02.156 --> 00:05:06.430\nknow how to take advantage of them,\nhow to actually use and implement them.\n\n88\n00:05:06.430 --> 00:05:11.390\nOn the routing side, under CCENT,\nyou learned about the RIP protocol.\n\n89\n00:05:11.390 --> 00:05:14.559\nHere, we learn about EIGRP and OSPF.\n\n90\n00:05:14.559 --> 00:05:16.369\nWe also cover some IPv6 routing.\n\n91\n00:05:16.369 --> 00:05:17.008\nSo again,\n\n92\n00:05:17.008 --> 00:05:21.340\nmore advanced functionality based on\nwhat we learned in the CCENT show.\n\n93\n00:05:21.340 --> 00:05:24.760\nAnother reason why you really wanna make\nsure you completed your CCENT before\n\n94\n00:05:24.760 --> 00:05:27.875\ndiving into this, so that you have\nall your foundational knowledge.\n\n95\n00:05:27.875 --> 00:05:31.165\nSo that's an example of what's\non the exam and I already said,\n\n96\n00:05:31.165 --> 00:05:32.970\nwho it was really targeted to?\n\n97\n00:05:32.970 --> 00:05:36.328\nIt's targeted to that person who's wanting\nto get started in a networking career.\n\n98\n00:05:36.328 --> 00:05:39.296\nSo maybe you've been working\nwith systems admin up until now,\n\n99\n00:05:39.296 --> 00:05:42.658\ndoing different software support and\nyou wanna move into networking or\n\n100\n00:05:42.658 --> 00:05:44.674\nmaybe you're just getting started in IT,\n\n101\n00:05:44.674 --> 00:05:48.010\nbut you've decided that this is your\npassion that you wanna get into.\n\n102\n00:05:48.010 --> 00:05:49.515\nThis is a great certification for that.\n\n103\n00:05:49.515 --> 00:05:53.559\nNow if you watch our series and you study\nthe materials, you go through the labs,\n\n104\n00:05:53.559 --> 00:05:57.850\nyou practice, you get ready and you\nfeel like you're ready to take the exam.\n\n105\n00:05:57.850 --> 00:05:59.545\nThe next step is to go and to do it.\n\n106\n00:05:59.545 --> 00:06:02.579\nAll Cisco exams are proctored\nthrough Pearson VUE.\n\n107\n00:06:02.579 --> 00:06:05.758\nPearson VUE is a company that has\ntesting centers all over the world.\n\n108\n00:06:05.758 --> 00:06:10.972\nSo when you're ready to take that exam,\njust go to vue.com.\n\n109\n00:06:10.972 --> 00:06:12.388\nThat's the Pearson VUE website.\n\n110\n00:06:12.388 --> 00:06:15.694\nAnd when you go to vue.com,\nyou'll see that this guy right here and\n\n111\n00:06:15.694 --> 00:06:17.608\nyou'll go up here to for test takers and\n\n112\n00:06:17.608 --> 00:06:20.810\nyou'll tell it that you need\nto go to the test taker home.\n\n113\n00:06:20.810 --> 00:06:21.403\nAnd on that page,\n\n114\n00:06:21.403 --> 00:06:23.670\nyou'll be able to tell it what type\nof exam you're wanting to take.\n\n115\n00:06:23.670 --> 00:06:27.636\nI'm just gonna type Cisco, so\nit finds Cisco Systems right there.\n\n116\n00:06:27.636 --> 00:06:33.582\nAnd now, I can jump in and I can find\nthe exam types that are available.\n\n117\n00:06:33.582 --> 00:06:36.348\nI can find test preparation and\nother news, but\n\n118\n00:06:36.348 --> 00:06:39.270\nI can also find a test center near me.\n\n119\n00:06:39.270 --> 00:06:42.100\nOnce you find your test center,\nyou can schedule the exam.\n\n120\n00:06:42.100 --> 00:06:45.084\nIt's nice that you can do it right there\nin your own neighborhood instead of having\n\n121\n00:06:45.084 --> 00:06:46.394\nto go somewhere else crazy to do it.\n\n122\n00:06:46.394 --> 00:06:49.230\nYou find one right nearby,\njump over there.\n\n123\n00:06:49.230 --> 00:06:52.340\nTake the exam, pass it and\nthen move into the world of networking.\n\n124\n00:06:53.660 --> 00:06:54.834\nSo, that's about it for the CCNA.\n\n125\n00:06:54.834 --> 00:06:59.525\nLet me just kinda reiterate the important\nparts here is that you cannot get your\n\n126\n00:06:59.525 --> 00:07:03.861\nCCNA certification, unless you complete\nboth the CCENT and the CCNA and\n\n127\n00:07:03.861 --> 00:07:07.131\nit's up to you whether you\nwanna do those one at a time or\n\n128\n00:07:07.131 --> 00:07:11.150\nyou wanna do them at the same\ntime in the composite exam.\n\n129\n00:07:11.150 --> 00:07:13.330\nSo, that is an important one.\n\n130\n00:07:13.330 --> 00:07:15.435\nOur shows are based around\nthe individual exam,\n\n131\n00:07:15.435 --> 00:07:17.346\ncuz that's what make sense to most people.\n\n132\n00:07:17.346 --> 00:07:22.350\nThey do the CCENT exam first and\nthen they do the CCNA exam separate.\n\n133\n00:07:22.350 --> 00:07:25.786\nIf you do the composite, you need\nto study material from both shows.\n\n134\n00:07:25.786 --> 00:07:28.560\nJust combine them together and that's\nwhat's gonna be on the composite exam.\n\n135\n00:07:28.560 --> 00:07:31.595\nIt's a large body of knowledge and\nthat can be a little challenging for\n\n136\n00:07:31.595 --> 00:07:32.220\nsome people.\n\n137\n00:07:32.220 --> 00:07:35.720\nAfter that, go and\ntake that exam and your in business.\n\n138\n00:07:35.720 --> 00:07:39.375\nSo if this sounds like the right thing for\nyou, then you're in the right place.\n\n139\n00:07:39.375 --> 00:07:41.653\nStay tuned,\ncuz we've got that content coming up.\n\n140\n00:07:41.653 --> 00:07:44.023\nBut if you haven't done your CCENT,\njump over.\n\n141\n00:07:44.023 --> 00:07:46.426\nThe ITProTV library's got\nall sorts of certifications.\n\n142\n00:07:46.426 --> 00:07:50.177\nJump over to the CCENT show,\ncatch that content.\n\n143\n00:07:50.177 --> 00:07:52.165\nThat's the real place to start out.\n\n144\n00:07:52.165 --> 00:07:55.788\nIf you're just not sure about Cisco,\nmaybe you wanna learn networking,\n\n145\n00:07:55.788 --> 00:07:59.119\nbut you're not really ready to get\nmarried to a particular vendor,\n\n146\n00:07:59.119 --> 00:08:02.300\nyou could also check out\nthe CompTIA Network+ certification.\n\n147\n00:08:02.300 --> 00:08:03.678\nNetwork+ is vendor neutral.\n\n148\n00:08:03.678 --> 00:08:05.580\nIt covers a lot of fundamentals in theory.\n\n149\n00:08:05.580 --> 00:08:08.899\nIt's really about half the content\nthat's right here in the CCNA.\n\n150\n00:08:08.899 --> 00:08:11.194\nThere's a good bit of\noverlap between the two.\n\n151\n00:08:11.194 --> 00:08:13.348\nBut with Network+, it's vendor neutral.\n\n152\n00:08:13.348 --> 00:08:15.596\nSo, you don't have to worry\nabout being tied just to Cisco.\n\n153\n00:08:15.596 --> 00:08:19.161\nMaybe you work with Juniper equipment or\nHP, 3Com, whoever.\n\n154\n00:08:19.161 --> 00:08:22.136\nThat gives you a little bit\nmore of a broader basis.\n\n155\n00:08:22.136 --> 00:08:26.281\nOn the Cisco side though, you're learning\nthe Cisco way of doing things and\n\n156\n00:08:26.281 --> 00:08:31.100\nthey are the network leader when it comes\nto networking devices and technologies.\n\n157\n00:08:31.100 --> 00:08:33.060\nSo, it is a great company to learn from.\n\n158\n00:08:33.060 --> 00:08:35.926\nMost of the other companies out\nthere emulate what Cisco does, so\n\n159\n00:08:35.926 --> 00:08:37.917\nthat they all kind of\noperate about the same.\n\n160\n00:08:37.917 --> 00:08:40.833\nSo if this is the right spot for\nyou, stay tuned.\n\n161\n00:08:40.833 --> 00:08:41.956\nWe got episodes coming up.\n\n162\n00:08:41.956 --> 00:08:43.459\nIf it's not the right one,\ndefinitely check out the library.\n\n163\n00:08:43.459 --> 00:08:46.026\nWe got tons of content there\nthat are available for you.\n\n164\n00:08:46.026 --> 00:08:49.997\nI look forward to seeing you\nguys in the CCNA training.\n\n165\n00:08:49.997 --> 00:08:53.244\n[SOUND]\n\n",
          "vimeoId": "193760477"
        },
        {
          "description": "In this episode, Ronnie and Don review creating and managing multiple vlans on a single switch.  They talk about the purpose of vlans and configuring vlans too.  They remind us that vlans are kept not in the startup-config but in the vlan database called vlan.dat in flash.  Also they discuss using uplinks when connecting multiple switches together.",
          "length": "2051",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/cisco-ccna200105/cisco-ccna-200105-1-1-understanding_vlans-080416-1.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/cisco-ccna200105/cisco-ccna-200105-1-1-understanding_vlans-080416-1-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/cisco-ccna200105/cisco-ccna-200105-1-1-understanding_vlans-080416-1-sm.jpg",
          "title": "Understanding VLANs",
          "transcript": "WEBVTT\n\n1\n00:00:00.000 --> 00:00:10.000\n[MUSIC]\n\n2\n00:00:11.904 --> 00:00:15.040\n>> Welcome to another great\nepisode right here on ITProTV.\n\n3\n00:00:15.040 --> 00:00:19.473\nI'm your host Ronnie Wong and you've\nturned into the Cisco CCNA routing and\n\n4\n00:00:19.473 --> 00:00:20.522\nswitching show.\n\n5\n00:00:20.522 --> 00:00:24.242\nWe're just about to beginning here and\nwhat we're going to take a look at today,\n\n6\n00:00:24.242 --> 00:00:26.826\nof course is actually\nthe beginning of walt switching.\n\n7\n00:00:26.826 --> 00:00:29.180\nSo, who better to help us than Mr.\nDon Pezet.\n\n8\n00:00:29.180 --> 00:00:30.180\nDon, welcome back.\n\n9\n00:00:30.180 --> 00:00:31.188\n>> Thanks for having me back, Ronnie.\n\n10\n00:00:31.188 --> 00:00:36.808\nSo in this episode, we're gonna kick\nthings offkKind of introductory side here.\n\n11\n00:00:36.808 --> 00:00:39.765\nI know many of you probably\nwatched our CCENT show.\n\n12\n00:00:39.765 --> 00:00:44.160\nAnd if you did, you've already learned\nabout VLANs, virtual local area networks.\n\n13\n00:00:44.160 --> 00:00:46.675\nBut for those of you that didn't\ncatch that show, we're gonna\n\n14\n00:00:46.675 --> 00:00:49.474\nstart off with a quick overview of\nVLANs and how they work before we jump\n\n15\n00:00:49.474 --> 00:00:52.772\ninto things that are a little more CCNA\nspecific, some of the advanced features.\n\n16\n00:00:52.772 --> 00:00:56.465\nSo, let's run over a quick refresher\nof what the heck a VLAN is and\n\n17\n00:00:56.465 --> 00:00:57.683\nwhat we use them for.\n\n18\n00:00:57.683 --> 00:01:01.304\nNow when you buy a Cisco switch and\nyou take it out of the box for\n\n19\n00:01:01.304 --> 00:01:04.854\nthe first time and\nyou plug power into it, unlike a router,\n\n20\n00:01:04.854 --> 00:01:09.825\na switch is actually ready to work on day\none without a single bit of configuration,\n\n21\n00:01:09.825 --> 00:01:12.611\nyou can apply power to it and\nit's ready to go.\n\n22\n00:01:12.611 --> 00:01:15.690\nObviously, you're gonna be missing\nall the advanced functionality,\n\n23\n00:01:15.690 --> 00:01:17.970\nall that's turned off by default,\nbut it does work.\n\n24\n00:01:17.970 --> 00:01:20.210\nIt will be a layer two switch.\n\n25\n00:01:20.210 --> 00:01:24.083\nIf you plug somebody into port 1 and\nyou plug somebody else into port 48,\n\n26\n00:01:24.083 --> 00:01:27.533\nthey'll see each other or\nif it's a 24 port switch, whatever.\n\n27\n00:01:27.533 --> 00:01:30.595\nYou plug two people into two ports,\nthey will see each other.\n\n28\n00:01:30.595 --> 00:01:35.789\nThat what your switch is,\nis one big broadcast domain.\n\n29\n00:01:35.789 --> 00:01:38.440\nAll the ports can broadcast and\nsee each other.\n\n30\n00:01:38.440 --> 00:01:40.920\nSo, that’s kind of what\nwe normally expect.\n\n31\n00:01:40.920 --> 00:01:45.172\nBut with a VLAN, with a virtual local\narea network, what we can do is take\n\n32\n00:01:45.172 --> 00:01:49.874\nthat one physical switch and we can break\nit up into multiple smaller switches.\n\n33\n00:01:49.874 --> 00:01:55.088\nSo we have these virtual switches and they\ncall them virtual local area networks,\n\n34\n00:01:55.088 --> 00:01:59.635\nLANs, because each one is its own network,\nits own broadcast domain.\n\n35\n00:01:59.635 --> 00:02:04.534\nSo if I divide my switch in half, let's\nsay that ports 1 through 12 are in 1 VLAN\n\n36\n00:02:04.534 --> 00:02:07.445\nand ports 13 through 24\nare in another VLAN.\n\n37\n00:02:07.445 --> 00:02:12.462\nIf I plugged two people into say,\nports one and two, they'll see each other.\n\n38\n00:02:12.462 --> 00:02:16.364\nBut if I plug a person into port 1 and\nperson into port 15,\n\n39\n00:02:16.364 --> 00:02:18.090\nthey wont see each other.\n\n40\n00:02:18.090 --> 00:02:20.060\nThey're in two different VLANs.\n\n41\n00:02:20.060 --> 00:02:24.023\nThey might as well be plugged into\ntwo completely different switches.\n\n42\n00:02:24.023 --> 00:02:26.787\nNow, the neat part about this is\nwe can isolate our networks and\n\n43\n00:02:26.787 --> 00:02:28.626\nthat's really what VLANs are all about.\n\n44\n00:02:28.626 --> 00:02:32.619\nThe bigger your network gets, the bigger\nof performance hit that we take.\n\n45\n00:02:32.619 --> 00:02:35.006\nSo, let's kinda put this into numbers.\n\n46\n00:02:35.006 --> 00:02:39.161\nThat in the olden days and\nI'm thinking in the 1970s, 1980s,\n\n47\n00:02:39.161 --> 00:02:43.742\na computer network would normally consist\nof between one and five computers.\n\n48\n00:02:43.742 --> 00:02:46.441\nI should say, two and five, it's not\nreally a network with only one computer.\n\n49\n00:02:46.441 --> 00:02:50.276\nSo less than five machines,\nthat was a network back in the 70s,\n\n50\n00:02:50.276 --> 00:02:51.753\neven in the early 80s.\n\n51\n00:02:51.753 --> 00:02:53.094\nBut as the 80s progressed,\n\n52\n00:02:53.094 --> 00:02:56.793\nwe started to see token really networks\ncome around that got much, much larger and\n\n53\n00:02:56.793 --> 00:02:59.650\nthen Ethernet networks that\nwere getting much, much larger.\n\n54\n00:02:59.650 --> 00:03:04.875\nAnd so to have somebody with a network of\n30, 40, 50 computers was not that uncommon\n\n55\n00:03:04.875 --> 00:03:10.338\nanymore and even to creep higher to 80,\n100, 200 computers was starting to happen.\n\n56\n00:03:10.338 --> 00:03:14.071\nBy the time we got to the 90s,\n200 computers is a drop in the bucket.\n\n57\n00:03:14.071 --> 00:03:18.521\nAnd now here we are in 2016 and to have\ncomputer networks with thousands of\n\n58\n00:03:18.521 --> 00:03:22.833\ncomputers is not unusual, you just have\nto go to the nearest university and\n\n59\n00:03:22.833 --> 00:03:26.132\nyou've find a network that\nhas thousands of computers.\n\n60\n00:03:26.132 --> 00:03:27.211\nYou can go to an airport and\n\n61\n00:03:27.211 --> 00:03:30.551\ntheir wireless network will have tens of\nthousands of computers on it at any given\n\n62\n00:03:30.551 --> 00:03:33.566\ntime based on the amount of people\nthat are moving through that airport.\n\n63\n00:03:33.566 --> 00:03:36.973\nSo these kinds of networks are much,\nmuch larger these days.\n\n64\n00:03:36.973 --> 00:03:40.964\nWell, the infrastructure that was created\nback in the beginning really wasn't\n\n65\n00:03:40.964 --> 00:03:42.674\ndesigned for networks that size.\n\n66\n00:03:42.674 --> 00:03:44.484\nWhen we talk about broadcasts,\n\n67\n00:03:44.484 --> 00:03:48.230\nyour computer broadcasts all\nthe time just doing discovery.\n\n68\n00:03:48.230 --> 00:03:52.148\nIf you're running Windows, Windows has\nall sorts of IPv6 discovery that it does\n\n69\n00:03:52.148 --> 00:03:56.068\nautomatically and has its own Windows\nworkgroup technologies that it's using to\n\n70\n00:03:56.068 --> 00:03:57.849\nfind other machines on the network.\n\n71\n00:03:57.849 --> 00:04:01.868\nIf you're running Macs, Macs use\nAppleTalk and AppleTalk never shuts up.\n\n72\n00:04:01.868 --> 00:04:04.605\nIt uses Bonjour, another protocol and\nit's reaching out and\n\n73\n00:04:04.605 --> 00:04:08.183\ncommunicating with all these different\nsystems trying to find it to make it where\n\n74\n00:04:08.183 --> 00:04:10.464\nwe don't have to configure\nour network services.\n\n75\n00:04:10.464 --> 00:04:12.030\nIt's automatic.\n\n76\n00:04:12.030 --> 00:04:14.290\nIt is kind of finding each other.\n\n77\n00:04:14.290 --> 00:04:18.053\nAnd even on Linux and Unix boxes, they're\na lot less chatty, but they still do their\n\n78\n00:04:18.053 --> 00:04:21.085\nown just simple art broadcasts as\nthey communicate to find people.\n\n79\n00:04:21.085 --> 00:04:25.567\nSo, you have all these machines\nbroadcasting and who sees a broadcast?\n\n80\n00:04:25.567 --> 00:04:26.463\nEverybody.\n\n81\n00:04:26.463 --> 00:04:29.058\nSo if I have five computers and\nI send a broadcast out,\n\n82\n00:04:29.058 --> 00:04:31.841\nthere's four other computers\nthat you are gonna see it.\n\n83\n00:04:31.841 --> 00:04:35.102\nBut if I have 5,000 computers\nevery time I send a broadcast,\n\n84\n00:04:35.102 --> 00:04:38.139\nthere's 4,999 other computers\nthat are gonna see it.\n\n85\n00:04:38.139 --> 00:04:41.429\nSo the bigger the network,\nthe more chatter on the network and\n\n86\n00:04:41.429 --> 00:04:44.790\nthe more chatter,\nthe slower my communications are gonna be.\n\n87\n00:04:44.790 --> 00:04:49.602\nSo if we can break our network up, then\nit's gonna make things more efficient.\n\n88\n00:04:49.602 --> 00:04:53.405\nThis all stems from how\nEthernet functions.\n\n89\n00:04:53.405 --> 00:04:59.125\nEthernet uses a technology called csma/cd,\ncsma/cd,\n\n90\n00:04:59.125 --> 00:05:05.360\ncarrier dense multiple access,\ncollision detection.\n\n91\n00:05:05.360 --> 00:05:07.597\nThe first part,\ncarrier sense multiple access.\n\n92\n00:05:07.597 --> 00:05:10.348\nAny time your computer goes to talk,\n\n93\n00:05:10.348 --> 00:05:15.152\nonly one person can talk on\nan electrical wire at any given time.\n\n94\n00:05:15.152 --> 00:05:18.604\nIf two people talk at the same time,\nthe electrical impulses hit each other and\n\n95\n00:05:18.604 --> 00:05:20.710\nyou get a collision,\nyou get data corruption.\n\n96\n00:05:20.710 --> 00:05:25.162\nSo anytime you talk, before you talk\nyou do carrier sense, you listen.\n\n97\n00:05:25.162 --> 00:05:26.710\nIs somebody else talking?\n\n98\n00:05:27.720 --> 00:05:31.063\nIf somebody else is talking,\nthat's multiple access, I'm gonna stop.\n\n99\n00:05:31.063 --> 00:05:32.068\nI'm gonna wait.\n\n100\n00:05:32.068 --> 00:05:33.921\nI'm gonna wait for\nthem to finish and then I'll talk.\n\n101\n00:05:33.921 --> 00:05:36.507\nAnd that way only,\none person talks at a time.\n\n102\n00:05:36.507 --> 00:05:41.519\nBut even doing that, even doing CSMA,\nyou listen, you wait for it go quiet.\n\n103\n00:05:41.519 --> 00:05:44.337\nRonnie's laptop could be listening\nat the same time as mine and\n\n104\n00:05:44.337 --> 00:05:48.210\nwe both think the network is quiet, and\nwe both go to talk at the same time.\n\n105\n00:05:48.210 --> 00:05:51.030\nAnd so when that happens, our little\nelectrical signals hit each other.\n\n106\n00:05:51.030 --> 00:05:54.160\nThey overlap, we get corruption and\nit's all messed up.\n\n107\n00:05:54.160 --> 00:05:58.830\nSo anytime you talk, you do CSMA first,\nyou listen if the line is quiet and\n\n108\n00:05:58.830 --> 00:06:00.150\nthen you send a message.\n\n109\n00:06:00.150 --> 00:06:04.182\nAnd once you send the message, you then\ngo into collision detection, the CD part.\n\n110\n00:06:04.182 --> 00:06:07.567\nCollision detection says,\nlisten for garbled junk on the line.\n\n111\n00:06:07.567 --> 00:06:11.219\nIf Ronnie starts to talk on the line and\nit collides with my traffic,\n\n112\n00:06:11.219 --> 00:06:13.908\nI'm gonna hear the garbled\njunk come back to me and\n\n113\n00:06:13.908 --> 00:06:17.321\nI'll know there was a collision and\nI'll need to retransmit.\n\n114\n00:06:17.321 --> 00:06:18.400\nThat happens all the time.\n\n115\n00:06:18.400 --> 00:06:19.179\nIt happens a lot.\n\n116\n00:06:19.179 --> 00:06:22.382\nIt can happen thousands of times per\nsecond on a really busy network.\n\n117\n00:06:22.382 --> 00:06:26.119\nThe more computers you have,\nthe more times that's gonna happen and\n\n118\n00:06:26.119 --> 00:06:28.706\nthat's where we really\nhave our problem here.\n\n119\n00:06:28.706 --> 00:06:30.898\nBecause when there's a collision,\nwe gotta retransmit.\n\n120\n00:06:30.898 --> 00:06:33.659\nSo now I don't just send data once,\nI've got to send data twice.\n\n121\n00:06:33.659 --> 00:06:36.868\nI've got to double up my information\nwhenever there's a collision.\n\n122\n00:06:36.868 --> 00:06:39.120\nSo, let's see how switches\ncan help with that.\n\n123\n00:06:39.120 --> 00:06:40.128\nI've got a diagram here.\n\n124\n00:06:40.128 --> 00:06:41.244\nIt's a pretty simple diagram.\n\n125\n00:06:41.244 --> 00:06:43.735\nA couple of computers and\na server plugged into one switch.\n\n126\n00:06:43.735 --> 00:06:47.341\nSo if this laptop on the left,\nif it were to start to send out a message,\n\n127\n00:06:47.341 --> 00:06:51.820\nif it's a unicast, well, a switch is gonna\ndirect us to the person we're talking to.\n\n128\n00:06:51.820 --> 00:06:54.150\nSo, I'm really just focused\non broadcasts right now.\n\n129\n00:06:54.150 --> 00:06:56.215\nSo if it's a broadcast,\nwhere's it gonna go?\n\n130\n00:06:56.215 --> 00:07:00.312\nWell, it's gonna go into the switch and\nthen we'll get a broadcast flood.\n\n131\n00:07:00.312 --> 00:07:02.136\nIt's gonna come out every other port.\n\n132\n00:07:02.136 --> 00:07:05.424\nSo, everybody else is gonna\nsee that communication.\n\n133\n00:07:05.424 --> 00:07:09.095\nSo, what we can do is we can\nstart to isolate people.\n\n134\n00:07:09.095 --> 00:07:13.002\nMaybe these two laptops are talking\nto each other all the time and\n\n135\n00:07:13.002 --> 00:07:15.255\nthey very rarely talk to the server.\n\n136\n00:07:15.255 --> 00:07:19.138\nSo, I don't want the server to get all\nthese broadcasts of the laptops talking to\n\n137\n00:07:19.138 --> 00:07:19.776\neach other.\n\n138\n00:07:19.776 --> 00:07:21.666\nSo I might choose to isolate those or\n\n139\n00:07:21.666 --> 00:07:25.514\nthis server might be getting used by\nthis laptop, but not the other one.\n\n140\n00:07:25.514 --> 00:07:27.522\nAnd so,\nI might try to isolate it that way.\n\n141\n00:07:27.522 --> 00:07:29.426\nSo, we can apply VLANs.\n\n142\n00:07:29.426 --> 00:07:33.479\nAnd with VLANs,\nI start to group the ports together.\n\n143\n00:07:33.479 --> 00:07:37.514\nSo I've got a green VLAN here and I've got\nthese two computers plugged into ports\n\n144\n00:07:37.514 --> 00:07:41.189\nthat are in the green VLAN, I've got\na light blue VLAN with nobody in it and\n\n145\n00:07:41.189 --> 00:07:43.524\nthen I've got a red VLAN\nwith the server in it.\n\n146\n00:07:43.524 --> 00:07:47.592\nThese are all separate VLANs,\nvirtual local area networks.\n\n147\n00:07:47.592 --> 00:07:49.868\nNow I've got them nice and\nin groups here, they don't have to be.\n\n148\n00:07:49.868 --> 00:07:51.827\nYou could do every other port.\n\n149\n00:07:51.827 --> 00:07:53.610\nYou can mix and match however you want.\n\n150\n00:07:53.610 --> 00:07:57.650\nBut by grouping them like this, it's a\nlittle easier for us to keep it straight.\n\n151\n00:07:57.650 --> 00:08:00.907\nSo now,\nwhen a computer sends out a broadcast,\n\n152\n00:08:00.907 --> 00:08:05.030\nit's only gonna hit the other\npeople on its own VLAN.\n\n153\n00:08:05.030 --> 00:08:09.030\nAnd that's important, cuz that's gonna\nreduce the size of our broadcast domain.\n\n154\n00:08:09.030 --> 00:08:10.820\nAnd VLANs can get really complex.\n\n155\n00:08:10.820 --> 00:08:17.310\nBack in the CCNT show, we saw where we can\nstart to do up-links between our VLANS so\n\n156\n00:08:17.310 --> 00:08:21.980\nthat a VLAN can actually spread\nacross more than one switch.\n\n157\n00:08:21.980 --> 00:08:25.740\nNow, when that happens,\nI can have a green VLAN over here, and\n\n158\n00:08:25.740 --> 00:08:27.450\na green VLAN over here.\n\n159\n00:08:27.450 --> 00:08:30.210\nAnd those two laptops will see each\nother as if they were plugged into\n\n160\n00:08:30.210 --> 00:08:31.020\nthe same switch.\n\n161\n00:08:31.020 --> 00:08:31.960\nThat's really nice.\n\n162\n00:08:31.960 --> 00:08:33.510\nThere's some challenges\nthat are created with that,\n\n163\n00:08:33.510 --> 00:08:35.520\nwhich we're gonna see in the next episode.\n\n164\n00:08:35.520 --> 00:08:39.310\nBut this basic functionality of our\nvirtual local area network is really\n\n165\n00:08:39.310 --> 00:08:41.970\nimportant and really easy to implement.\n\n166\n00:08:41.970 --> 00:08:44.710\nThe key thing to remember is\nthat when you create a VLAN,\n\n167\n00:08:44.710 --> 00:08:49.080\nyou are isolating the traffic,\nyou're separating these guys out.\n\n168\n00:08:49.080 --> 00:08:53.640\nSo, if I have one switch, and\nI create a VLAN, it's no big deal.\n\n169\n00:08:53.640 --> 00:08:56.080\nBut if I have multiple switches,\n\n170\n00:08:56.080 --> 00:09:00.520\nI actually have to run up-link\ncables to connect those VLANs.\n\n171\n00:09:00.520 --> 00:09:03.990\nSo, see how I've got the green\nVLAN right here, and\n\n172\n00:09:03.990 --> 00:09:06.150\nthe green VLAN is over\non this other switch.\n\n173\n00:09:06.150 --> 00:09:07.140\nWell, in order for\n\n174\n00:09:07.140 --> 00:09:11.600\nthese guys to see each other, think of\nit as having two physical switches.\n\n175\n00:09:11.600 --> 00:09:14.530\nWith two physical switches,\nhow do you get them to see each other?\n\n176\n00:09:14.530 --> 00:09:16.720\nYou run a cable between the switches.\n\n177\n00:09:16.720 --> 00:09:19.580\nAnd that's what I've done here, is I've\nrun a cable from the green VLAN on this\n\n178\n00:09:19.580 --> 00:09:22.270\nswitch, up to the green VLAN on this one.\n\n179\n00:09:22.270 --> 00:09:25.980\nAnd again, from this green VLAN\ndown to the green VLAN over here.\n\n180\n00:09:25.980 --> 00:09:26.900\nThey're all uplinked.\n\n181\n00:09:26.900 --> 00:09:29.730\nAnd when we're talking about one VLAN,\nthat's not a big deal.\n\n182\n00:09:29.730 --> 00:09:32.460\nWe'd probably run this cable on\nnormal switches anyway, right?\n\n183\n00:09:32.460 --> 00:09:34.520\nJust up-linking them together.\n\n184\n00:09:34.520 --> 00:09:36.270\nI'm using ports in\nthe middle of the switch.\n\n185\n00:09:36.270 --> 00:09:39.830\nWe'd normally use the SFP ports that\nare down at the end of the switch, right?\n\n186\n00:09:39.830 --> 00:09:41.330\nThose are usually better.\n\n187\n00:09:41.330 --> 00:09:43.836\nLet me talk on that real quick just for\na minute,\n\n188\n00:09:43.836 --> 00:09:46.684\ncuz I always say that, hey the ports\non the end of the switch are better.\n\n189\n00:09:46.684 --> 00:09:48.860\nWell, why is that, right?\n\n190\n00:09:48.860 --> 00:09:52.600\nWhen you by a Cisco switch,\nit might look like this, right?\n\n191\n00:09:52.600 --> 00:09:54.020\nBut oftentimes,\n\n192\n00:09:54.020 --> 00:09:59.270\nover here to the side, there'll be\nfour ports that are kind of set apart.\n\n193\n00:09:59.270 --> 00:10:03.020\nAnd those ports,\nthey might look different.\n\n194\n00:10:03.020 --> 00:10:07.312\nThey might be SFP or GBIC ports,\nor something like that.\n\n195\n00:10:07.312 --> 00:10:11.171\nBut they're normally offset a little bit,\nso there'd be a little bit of a gap,\n\n196\n00:10:11.171 --> 00:10:13.350\nkind of like what I've drawn here.\n\n197\n00:10:13.350 --> 00:10:15.150\nAnd over here, these ports,\n\n198\n00:10:15.150 --> 00:10:19.210\nyour access ports,\nare almost always RJ45 jacks, right?\n\n199\n00:10:19.210 --> 00:10:21.650\nThey're designed to plug\na network cable into.\n\n200\n00:10:21.650 --> 00:10:25.302\nBut these over here will normally be SFPs,\nlittle slots for\n\n201\n00:10:25.302 --> 00:10:29.720\nyou to pop an adapter in so you can run\nfiber or copper on them, all right?\n\n202\n00:10:29.720 --> 00:10:33.510\nThe big difference on these ports\nversus these ports over here,\n\n203\n00:10:33.510 --> 00:10:36.540\nI might have gigabit ports\non my entire switch.\n\n204\n00:10:36.540 --> 00:10:37.962\nSo these might be all gig ports.\n\n205\n00:10:37.962 --> 00:10:40.970\nAnd then,\nthese might be gigabit also, okay?\n\n206\n00:10:40.970 --> 00:10:45.310\nSo, if you look at that, and you think,\nwell, I got 48 gigabit ports for\n\n207\n00:10:45.310 --> 00:10:48.363\nregular stuff and I got four\nextra gigabit ports for up-links,\n\n208\n00:10:48.363 --> 00:10:50.910\nwhy not just use my first 48 ports?\n\n209\n00:10:50.910 --> 00:10:53.564\nThey don't need special cables,\nand I can run copper, and\n\n210\n00:10:53.564 --> 00:10:54.951\nI don't even need an adapter.\n\n211\n00:10:54.951 --> 00:10:58.099\nWell, the difference is,\non most Cisco switches,\n\n212\n00:10:58.099 --> 00:11:01.570\nthe ports are what\nare called oversubscribed.\n\n213\n00:11:01.570 --> 00:11:05.800\nSo, if I have 48 gigabit ports, and\n\n214\n00:11:05.800 --> 00:11:10.070\nall 48 machines tried to talk at once,\nhow much data am I gonna move?\n\n215\n00:11:10.070 --> 00:11:11.960\n48 gigabits of data.\n\n216\n00:11:11.960 --> 00:11:14.000\nIt's full duplex, but\nyou send and you receive.\n\n217\n00:11:14.000 --> 00:11:15.830\nSo you end up at around 48 gigabits.\n\n218\n00:11:15.830 --> 00:11:18.960\nWell, the switch has\na backplane on the back of it,\n\n219\n00:11:18.960 --> 00:11:21.850\nthe circuit board that runs and\nconnects all these ports together.\n\n220\n00:11:21.850 --> 00:11:24.540\nAnd the backplane only has so\nmuch bandwidth.\n\n221\n00:11:24.540 --> 00:11:31.370\nAnd if you have a 48 gigabit switch, your\nswitch might have a 48 gigabit backplane.\n\n222\n00:11:31.370 --> 00:11:35.271\nHas 48 one gig ports, and\na 48 gigabit backplane,\n\n223\n00:11:35.271 --> 00:11:37.780\nit can now talk at full\nspeed all the time, right?\n\n224\n00:11:37.780 --> 00:11:40.200\nWhen that happens it's called\na non-blocking switch.\n\n225\n00:11:40.200 --> 00:11:44.350\nA non-blocking switch is a switch that\nhas enough bandwidth to handle every port\n\n226\n00:11:44.350 --> 00:11:46.240\ntalking at full bandwidth.\n\n227\n00:11:46.240 --> 00:11:50.380\nAnd your higher end switches,\nyour 3750s, your 6500s,\n\n228\n00:11:50.380 --> 00:11:54.860\ndepending on which supervisor module you\nbuy, a lot of those are non-blocking,\n\n229\n00:11:54.860 --> 00:11:57.110\nthey can handle all their\nports talking at full speed.\n\n230\n00:11:58.120 --> 00:12:02.270\nBut almost all of the low end switches,\nand\n\n231\n00:12:02.270 --> 00:12:07.300\nthe majority of the mid-range\nswitches from Cisco, the 3560s,\n\n232\n00:12:07.300 --> 00:12:11.760\nthe 2960s, those guys, almost all of them\nare what are called over-subscribed.\n\n233\n00:12:11.760 --> 00:12:14.820\nOver-subscribed is where\nthey're not non-blocking.\n\n234\n00:12:14.820 --> 00:12:19.120\nIn other words, the ports\nactually outnumber the backplane.\n\n235\n00:12:19.120 --> 00:12:27.300\nI might have a 48 port gigabit switch that\nonly has a six gig backplane, all right?\n\n236\n00:12:27.300 --> 00:12:28.166\nAnd what does that mean?\n\n237\n00:12:28.166 --> 00:12:31.960\nWell, it means I can't have every\nport talking at full speed.\n\n238\n00:12:31.960 --> 00:12:33.580\nBut how often does that happen, anyway?\n\n239\n00:12:33.580 --> 00:12:34.575\nIt's pretty rare.\n\n240\n00:12:34.575 --> 00:12:38.135\nIt's pretty rare that every computer\nplugged into a switch will be talking at\n\n241\n00:12:38.135 --> 00:12:40.335\nfull speed at the same time.\n\n242\n00:12:40.335 --> 00:12:42.315\nAnd so, Cisco banks on that.\n\n243\n00:12:42.315 --> 00:12:45.155\nThat's how they're able to make\nthese switches cheaper, right?\n\n244\n00:12:45.155 --> 00:12:48.955\nAnd when you go down to the local\nelectronics store and you buy that five\n\n245\n00:12:48.955 --> 00:12:53.895\nport switch for 20 bucks, it's cheap\nbecause it has that small backplane.\n\n246\n00:12:53.895 --> 00:12:55.980\nSo, the smaller the backplane,\nthe cheaper the switch.\n\n247\n00:12:55.980 --> 00:12:58.540\nSo, that's how they can\nreduce the price on it.\n\n248\n00:12:58.540 --> 00:13:03.210\nBut what ends up happening\nis the ports get divided up.\n\n249\n00:13:03.210 --> 00:13:07.488\nAnd so, what Cisco will often do,\nis they'll grab a bank of eight ports.\n\n250\n00:13:07.488 --> 00:13:11.710\nSo if w,e grab this bank of eight ports,\nthen those eight ports\n\n251\n00:13:11.710 --> 00:13:16.420\nwill share a single one gig\nconnection to the backplane.\n\n252\n00:13:16.420 --> 00:13:19.690\nAnd the next eight ports might have\na one gig connection to the backplane.\n\n253\n00:13:19.690 --> 00:13:21.740\nYou do that six times and\nyou're at 48 ports.\n\n254\n00:13:21.740 --> 00:13:25.290\nSo, now we have where ports are sharing.\n\n255\n00:13:25.290 --> 00:13:30.580\nThese eight machines right here would\nall be sharing that one gig link.\n\n256\n00:13:30.580 --> 00:13:34.020\nAnd as long as they're not all trying\nto go full speed at the same time,\n\n257\n00:13:34.020 --> 00:13:35.580\nyou never notice, right?\n\n258\n00:13:35.580 --> 00:13:39.440\nBut if they do try and go all at\nthe same time, you got a problem.\n\n259\n00:13:39.440 --> 00:13:42.260\nWell, the ports that are way\ndown at the end of your switch,\n\n260\n00:13:42.260 --> 00:13:45.190\nthese up-links,\nthey may not seem all that special.\n\n261\n00:13:45.190 --> 00:13:48.120\nThey might be gigabit, and\nyour other ports are gig, too.\n\n262\n00:13:48.120 --> 00:13:52.980\nBut the big difference is that these\nports are always non-blocking.\n\n263\n00:13:52.980 --> 00:13:57.060\nThese ports always have dedicated\naccess to the backplane of the switch.\n\n264\n00:13:57.060 --> 00:14:02.390\nIf I have four one gig ports, then they\neach have one gig to the backplane so\n\n265\n00:14:02.390 --> 00:14:07.990\nthat these guys can run at full bandwidth\nwithout contention against other ports.\n\n266\n00:14:07.990 --> 00:14:12.890\nAnd if these are 10 gig ports or 40 gig\nports, they'll have that to the backplane.\n\n267\n00:14:12.890 --> 00:14:18.380\nSo, I might have a 48 port gigabit switch\nthat might have a 72 gigabit backplane.\n\n268\n00:14:18.380 --> 00:14:21.476\nAnd you might ask yourself,\nwhy would I need a 72 gigabit backplane,\n\n269\n00:14:21.476 --> 00:14:23.280\ncuz I've only got 48 ports.\n\n270\n00:14:23.280 --> 00:14:28.070\nWell, these might be 10 gig ports, and\nthat's 40 gigs of bandwidth right there.\n\n271\n00:14:28.070 --> 00:14:29.620\nAnd if I have 48 other ports,\n\n272\n00:14:29.620 --> 00:14:33.300\nI'm at a potential 88 gigabit\nof traffic on that switch.\n\n273\n00:14:33.300 --> 00:14:36.820\nSo, we need a bigger backplane than\nwhat immediately seems intuitive.\n\n274\n00:14:36.820 --> 00:14:40.910\nSo that's why these ports are special,\nthese ones that are set off to the side.\n\n275\n00:14:40.910 --> 00:14:46.240\nAnd you'll see that,\nreally, with any switch.\n\n276\n00:14:46.240 --> 00:14:49.180\nLet me pull up a Cisco 3560 here.\n\n277\n00:14:49.180 --> 00:14:53.558\nSo, if I pull up one of their switches,\nwhen we look at the picture,\n\n278\n00:14:53.558 --> 00:14:57.970\nsee how it's got all the main ports here,\nand\n\n279\n00:14:57.970 --> 00:15:01.500\nthen right off to the side,\nthere's those separated ports.\n\n280\n00:15:01.500 --> 00:15:06.020\nAnd these'll just be gig, maybe on\nsome of them they might be 10 gig.\n\n281\n00:15:06.020 --> 00:15:08.650\nOn 3560s, they're not normally 10 gigs.\n\n282\n00:15:08.650 --> 00:15:10.970\nBut those are just dedicated ports.\n\n283\n00:15:10.970 --> 00:15:13.820\nThey have that extra bandwidth,\nso that's why those are special.\n\n284\n00:15:13.820 --> 00:15:17.810\n>> Don, if I remember in the CCNT show,\nyou even showed visually here\n\n285\n00:15:17.810 --> 00:15:20.680\nwhere it actually does a yellow\naround what shows you that?\n\n286\n00:15:20.680 --> 00:15:22.380\n>> Yeah, some of the switches do.\n\n287\n00:15:22.380 --> 00:15:25.118\nThis one, I can't remember if it does or\nnot, it seems a little on the big side.\n\n288\n00:15:25.118 --> 00:15:28.237\nBut see the yellow box around these?\n\n289\n00:15:28.237 --> 00:15:31.134\nSo, the yellow box here is around,\nwhat is that, 12 ports?\n\n290\n00:15:31.134 --> 00:15:33.085\nNo, it's more than that.\n\n291\n00:15:33.085 --> 00:15:33.750\n16 ports.\n\n292\n00:15:33.750 --> 00:15:36.340\nSo, you've got the first 16\nports in the yellow box, and\n\n293\n00:15:36.340 --> 00:15:38.100\nthen the next 16 ports in the yellow box.\n\n294\n00:15:38.100 --> 00:15:39.930\nThat's normally how it's divided.\n\n295\n00:15:39.930 --> 00:15:40.810\nSometimes, it isn't, though.\n\n296\n00:15:40.810 --> 00:15:42.710\nSometimes they're a little bit different.\n\n297\n00:15:42.710 --> 00:15:45.089\nIt depends on which\nswitch we're looking at.\n\n298\n00:15:45.089 --> 00:15:48.082\nLet me pull up some other ones.\n\n299\n00:15:48.082 --> 00:15:51.439\nSome of the newer one,\nthe newer ones that are software defined,\n\n300\n00:15:51.439 --> 00:15:55.725\nthey're really, really strange because\nthe backplane is really customizable.\n\n301\n00:15:55.725 --> 00:15:59.525\nSo you could make one port non-blocking\nand make another port over-subscribed,\n\n302\n00:15:59.525 --> 00:16:01.870\nyou can really do some crazy\nstuff with those guys.\n\n303\n00:16:01.870 --> 00:16:07.734\nThey cost a lot of money, so\nthat's a little bit beyond CCNA side.\n\n304\n00:16:07.734 --> 00:16:09.638\nBut let me, I don't wanna chat now.\n\n305\n00:16:09.638 --> 00:16:13.106\nThey've changed my, here we go,\nCampus and Branch Switches,\n\n306\n00:16:13.106 --> 00:16:15.600\nthat's what we're looking for.\n\n307\n00:16:15.600 --> 00:16:19.380\nThe CCNA routing and switching exam\njust does the branch switches, so\n\n308\n00:16:19.380 --> 00:16:20.930\nthat's what I'm trying to pull up.\n\n309\n00:16:20.930 --> 00:16:24.800\nMy goodness, they've made their\nwebsite extremely difficult to use.\n\n310\n00:16:24.800 --> 00:16:29.970\nSo let's go, there,\nthe 4500s are big ones.\n\n311\n00:16:29.970 --> 00:16:32.320\nThey can be oversubscribing or\nnon-blocking,\n\n312\n00:16:32.320 --> 00:16:33.969\ndepends on which blades you buy for them.\n\n313\n00:16:35.180 --> 00:16:36.300\nThose are fiber switches.\n\n314\n00:16:37.900 --> 00:16:41.999\nLet's find,\nlike this 2960 shows it really well.\n\n315\n00:16:41.999 --> 00:16:44.720\nLet me if I can get\na big picture of a 2960.\n\n316\n00:16:44.720 --> 00:16:47.930\n2960 is an access switch,\nthey're not very fancy.\n\n317\n00:16:47.930 --> 00:16:52.007\nBut again, see how they're kinda broken up\ninto these blocks and here we've got 12,\n\n318\n00:16:52.007 --> 00:16:53.066\n12, 12 and 12.\n\n319\n00:16:53.066 --> 00:16:55.106\nThat maybe how it's divided up.\n\n320\n00:16:55.106 --> 00:16:57.628\nThe picture is kind of blurry,\nso I can't really see, but\n\n321\n00:16:57.628 --> 00:17:00.260\noften times you'll see like\nlittle yellow squares.\n\n322\n00:17:00.260 --> 00:17:03.570\nAnd it might only be six ports, or\neven eight ports that are blocked off.\n\n323\n00:17:03.570 --> 00:17:06.600\nIt might not be 12 or 16 like we\nare seeing in some of these pictures.\n\n324\n00:17:06.600 --> 00:17:09.315\nThe best thing to do is to not\njust base them on a picture but\n\n325\n00:17:09.315 --> 00:17:11.194\npull the engineering document for it.\n\n326\n00:17:11.194 --> 00:17:14.766\nEveryone of these has various\ndata sheets available and\n\n327\n00:17:14.766 --> 00:17:19.250\nyou can go into the data sheets and\nthey'll tell you what's going on.\n\n328\n00:17:19.250 --> 00:17:23.327\nWhat actual amount of bandwidth they have,\nand whether the ports are blocking and\n\n329\n00:17:23.327 --> 00:17:26.520\nnon-blocking, whether they're\nover-subscribed or not and\n\n330\n00:17:26.520 --> 00:17:28.073\nyou can find that, all right?\n\n331\n00:17:28.073 --> 00:17:30.230\nBut I guess,\nI got off on a tangent, didn't I?\n\n332\n00:17:30.230 --> 00:17:34.473\nCuz what I was trying to highlight was,\nwhen we have multiple VLANs,\n\n333\n00:17:34.473 --> 00:17:36.457\nwe need to uplink them, right?\n\n334\n00:17:36.457 --> 00:17:41.478\nAnd when I uplink, it's not that big of\na deal if I'm just uplinking one VLAN.\n\n335\n00:17:41.478 --> 00:17:44.525\nBut in my picture,\nI've got multiple VLANs, so what do I do?\n\n336\n00:17:44.525 --> 00:17:46.840\nI need to uplink multiple VLANs.\n\n337\n00:17:46.840 --> 00:17:50.200\nWell, if I have four of those\nSFP ports down in the end,\n\n338\n00:17:50.200 --> 00:17:52.420\nthat's four uplinks that I could use.\n\n339\n00:17:52.420 --> 00:17:55.560\nAnd with each VLAN I add,\nI'd be adding another uplink and\n\n340\n00:17:55.560 --> 00:17:57.590\nmy network's gonna slowly\nstart to look like this.\n\n341\n00:17:57.590 --> 00:18:00.600\nMore and more cables as we\ncontinue uplinking VLANs,\n\n342\n00:18:00.600 --> 00:18:02.540\nwhat happens when we get over four VLANs?\n\n343\n00:18:02.540 --> 00:18:04.660\nI start running out of ports, right?\n\n344\n00:18:04.660 --> 00:18:06.790\nAnd so that's where trunks come in.\n\n345\n00:18:06.790 --> 00:18:12.010\nTrunks allow us to carry more than\none VLAN on the same interface.\n\n346\n00:18:12.010 --> 00:18:17.454\nSo I can carry four VLANs or\nwhatever all across a single line.\n\n347\n00:18:17.454 --> 00:18:19.594\nAnd so,\nsee the uplinks that I've drawn here,\n\n348\n00:18:19.594 --> 00:18:22.710\nI do have them at the end of the switch\nnow, like we normally would do.\n\n349\n00:18:22.710 --> 00:18:27.250\nAnd the trunk port isn't\nactually in a VLAN.\n\n350\n00:18:27.250 --> 00:18:30.290\nInstead, it's kind of its\nown little entity, and\n\n351\n00:18:30.290 --> 00:18:33.010\nit's carrying more than one VLAN, right?\n\n352\n00:18:33.010 --> 00:18:34.805\nThat's the way that a trunk works.\n\n353\n00:18:34.805 --> 00:18:38.495\nAnd so, that's what we set up in the CCENT\nshow and kind of got that in place.\n\n354\n00:18:38.495 --> 00:18:41.423\nLet me run you through a quick\nconfiguration just to refresh our memory,\n\n355\n00:18:41.423 --> 00:18:42.383\nso that we've got it and\n\n356\n00:18:42.383 --> 00:18:45.140\nthen in the next episode we're\ngonna be building on to that.\n\n357\n00:18:45.140 --> 00:18:49.915\nSo I'm gonna take a switch and\nlet's just take a look at this one.\n\n358\n00:18:49.915 --> 00:18:56.175\nThis one it's actually a 3750X\nI believe let's find out and\n\n359\n00:18:56.175 --> 00:19:00.515\nthis one if it is a 3750X is\nactually none-blocking switch,\n\n360\n00:19:00.515 --> 00:19:03.985\nevery port actually has\nthe bandwidth that it needs.\n\n361\n00:19:03.985 --> 00:19:06.665\nNow, I can't see that from\ninside of the switch itself,\n\n362\n00:19:06.665 --> 00:19:10.925\nwhen I'm in the switch it doesn't tell\nme if it is blocking or none-blocking or\n\n363\n00:19:10.925 --> 00:19:16.100\nwhatever I don't get to see that data But\nI can see the hardware that it is running.\n\n364\n00:19:16.100 --> 00:19:18.750\nAnd it is a 3750 and\n\n365\n00:19:18.750 --> 00:19:21.600\nsomewhere in here it'll tell me\nthe amount of ports that it as.\n\n366\n00:19:21.600 --> 00:19:22.350\nRight here.\nNo,\n\n367\n00:19:22.350 --> 00:19:27.153\nactually this is a fast ethernet switch,\nbut this is not terribly fast one.\n\n368\n00:19:27.153 --> 00:19:29.170\nLet me see if I've got one\nthat's a little bit faster.\n\n369\n00:19:29.170 --> 00:19:32.190\nLet me jump down to my access switch,\nit might be a little faster.\n\n370\n00:19:34.010 --> 00:19:37.604\nAnd I'll do a show version here and\npull up that hardware.\n\n371\n00:19:37.604 --> 00:19:40.642\nAnd so, if you don't know, then you can\nalways take it and you can say, well,\n\n372\n00:19:40.642 --> 00:19:43.192\nall right, I've got a c2960,\nthat's what this switch is.\n\n373\n00:19:43.192 --> 00:19:46.678\nAnd I can go and pull the Cisco\ndocumentation on it and find out, hey,\n\n374\n00:19:46.678 --> 00:19:49.097\nis it blocking or\noversubscribed or whatever.\n\n375\n00:19:49.097 --> 00:19:53.036\nAnd you'll need that full model number\nto be able to look it up because there's\n\n376\n00:19:53.036 --> 00:19:54.179\ndifferent versions.\n\n377\n00:19:54.179 --> 00:19:59.649\nSee how this is a WS-C2960-24TC-S,\nall right.\n\n378\n00:19:59.649 --> 00:20:05.860\nSo the T is letting me know that\nit's got standard RJ45 jacks on it.\n\n379\n00:20:05.860 --> 00:20:08.300\nSome of them will have all SFPs.\n\n380\n00:20:08.300 --> 00:20:11.461\nAnd they'll usually have like an X in\nthe name or it might have all GBIX or\n\n381\n00:20:11.461 --> 00:20:14.584\nsomething instead that says it's\ndesigned for all gig connections.\n\n382\n00:20:14.584 --> 00:20:17.960\nThey may also have a PS in it which will\nlet you know that there's power over\n\n383\n00:20:17.960 --> 00:20:18.512\nethernet.\n\n384\n00:20:18.512 --> 00:20:20.790\nSo those are different things that\nyou look for in the model number.\n\n385\n00:20:20.790 --> 00:20:24.730\nThey can influence the bandwidth\navailable in some scenarios too.\n\n386\n00:20:24.730 --> 00:20:26.534\nBut when I look at this one,\nI can see well,\n\n387\n00:20:26.534 --> 00:20:30.163\nit's only got 24 fast ethernet interfaces\nalso, it's not really any different.\n\n388\n00:20:30.163 --> 00:20:35.402\nBut it's got those 2 gig interfaces\nat the end, which are my uplinks,\n\n389\n00:20:35.402 --> 00:20:42.040\nand so I've got that available, to be able\nto jump in and use those as my uplinks.\n\n390\n00:20:42.040 --> 00:20:44.160\nNow, when I get a brand new switch,\n\n391\n00:20:44.160 --> 00:20:48.800\nthe brand new switch is going\nto have no VLANs by default.\n\n392\n00:20:48.800 --> 00:20:52.329\nAnd sorry if I can get my screen to scroll\nright here, I'm all over the place, so\n\n393\n00:20:52.329 --> 00:20:54.028\nit's gonna have no VLANs by default.\n\n394\n00:20:54.028 --> 00:20:55.483\nReally not no VLANs, there's one, righT?\n\n395\n00:20:55.483 --> 00:20:57.934\nVLAN one,\nI guess we could run that further.\n\n396\n00:20:57.934 --> 00:21:00.850\nIt's actually a five VLANs by default.\n\n397\n00:21:00.850 --> 00:21:02.265\nI'm going from none to five.\n\n398\n00:21:02.265 --> 00:21:05.376\n>> [LAUGH]\n>> Just like that but technically,\n\n399\n00:21:05.376 --> 00:21:08.138\nevery port has to be an A VLAN.\n\n400\n00:21:08.138 --> 00:21:14.190\nSo when you buy a brand new switch,\nit has every port assigned to VLAN 1.\n\n401\n00:21:14.190 --> 00:21:17.093\nVLAN 1 is the default VLAN and\nevery port is in it.\n\n402\n00:21:17.093 --> 00:21:22.574\nSo, if I run a show VLAN,\nI'll see where port 1 exists right there,\n\n403\n00:21:22.574 --> 00:21:25.986\nor VLAN 1, and every single port is in it.\n\n404\n00:21:25.986 --> 00:21:29.231\nSo while I say, we technically don't have\nany VLANs, you do, you have one VLAN,\n\n405\n00:21:29.231 --> 00:21:30.090\nevery port's in it.\n\n406\n00:21:30.090 --> 00:21:33.330\nYou could ignore it, and now basically,\nVLANs don't exist to you, all right?\n\n407\n00:21:33.330 --> 00:21:36.490\nOr you can start to create more, and\nthen I got us up to five because\n\n408\n00:21:36.490 --> 00:21:39.230\nI kind of forgot about these\nfour special reserved ones.\n\n409\n00:21:39.230 --> 00:21:44.000\nThe ones for fiber networks, or\nFDDI networks, and token ring networks.\n\n410\n00:21:44.000 --> 00:21:48.590\nSo those guys right there, those are\nspecial VLANs that are set aside to handle\n\n411\n00:21:48.590 --> 00:21:51.480\nthe loop rings that get created\nwith those types of networks.\n\n412\n00:21:51.480 --> 00:21:53.670\nNow I don't have any FDDI connections, and\n\n413\n00:21:53.670 --> 00:21:55.810\nI don't have any token ring\nconnections on this switch.\n\n414\n00:21:55.810 --> 00:22:01.050\nThere's no physical ports for it,\nso it shows as active unsupported.\n\n415\n00:22:01.050 --> 00:22:04.382\nI can't use this, the VLANs exist,\nbut I can't use them.\n\n416\n00:22:04.382 --> 00:22:09.123\nLet me just throw something out, I don't\nthink I mentioned this in the previous\n\n417\n00:22:09.123 --> 00:22:13.830\nshows, FDDI is not the same as the fiber\nthat we normally think of, all right?\n\n418\n00:22:13.830 --> 00:22:17.542\nWhen fiber optic networks first\ncame out they didn't run ethernet,\n\n419\n00:22:17.542 --> 00:22:19.275\nthey ran their own technology.\n\n420\n00:22:19.275 --> 00:22:26.046\nIt was usually one of two things,\nthey either did ATM or FDDI, right?\n\n421\n00:22:26.046 --> 00:22:29.700\nThose are the two kinda main\ncommunication protocols that were used.\n\n422\n00:22:29.700 --> 00:22:32.910\nWell, in today's world,\nwe just run ethernet over our fiber.\n\n423\n00:22:32.910 --> 00:22:35.950\nAnd so, even if you have fiber\nconnections on your switch,\n\n424\n00:22:35.950 --> 00:22:38.630\nyou're still not using\nthese guys right here.\n\n425\n00:22:38.630 --> 00:22:43.170\nSo it's very, very, very, very, very rare\nthat you actually see these get used.\n\n426\n00:22:43.170 --> 00:22:48.380\nToken ring, I haven't seen\ntoken ring in ten years now and\n\n427\n00:22:48.380 --> 00:22:51.130\nwhen I saw it, ten years ago,\nI was shocked then to see it.\n\n428\n00:22:51.130 --> 00:22:54.168\nSo, you really shouldn't encounter\ntoken ring anywhere anymore.\n\n429\n00:22:54.168 --> 00:23:00.870\nFDDI, I have seen, I'd say in the last\nseven years, so it is still out there.\n\n430\n00:23:00.870 --> 00:23:04.660\nCuz it was super expensive to get\nit deployed and it last forever and\n\n431\n00:23:04.660 --> 00:23:06.960\nso people don't wanna give it up.\n\n432\n00:23:06.960 --> 00:23:11.210\nBut those are the VLANs that we have kinda\nby default and then we can go in and\n\n433\n00:23:11.210 --> 00:23:12.850\nwe can create our own if we want.\n\n434\n00:23:12.850 --> 00:23:15.244\nSo we can just jump right\ninto configuration and do it.\n\n435\n00:23:15.244 --> 00:23:19.357\nIt is kinda interesting though\nbecause while we create our VLANs in\n\n436\n00:23:19.357 --> 00:23:23.550\nconfiguration, the commands don't\nactually go into the config.\n\n437\n00:23:23.550 --> 00:23:25.730\nThey don't go into running config or\nstartup config.\n\n438\n00:23:25.730 --> 00:23:28.004\nThey get stored in\na separate VLAN database.\n\n439\n00:23:28.004 --> 00:23:31.528\nSo when I jump into configuration,\nI do something like VLAN 10, right?\n\n440\n00:23:31.528 --> 00:23:36.509\nThat's gonna create VLAN number 10,\nbut it isn't actually created yet.\n\n441\n00:23:36.509 --> 00:23:40.466\nIf I do a show VLAN brief and\nwe take a look at what comes up,\n\n442\n00:23:40.466 --> 00:23:43.776\nyou'll see there's no VLAN 10, all right?\n\n443\n00:23:43.776 --> 00:23:45.656\nI've issued the VLAN 10 command but\n\n444\n00:23:45.656 --> 00:23:48.420\nit hasn't been written to\nthe VLAN database yet.\n\n445\n00:23:48.420 --> 00:23:51.294\nAnd the VLAN database, it's just\nstored right there in our file system.\n\n446\n00:23:51.294 --> 00:23:56.093\nIf I do a dir or a show flash colon,\nit will show me the final system and\n\n447\n00:23:56.093 --> 00:24:01.503\nwhat we are looking for is a file called\nVLAN.dat I don't have one, right?\n\n448\n00:24:01.503 --> 00:24:04.273\nI don't have one because\nthis is a new switch that\n\n449\n00:24:04.273 --> 00:24:07.180\nhas no change to\nthe default configuration.\n\n450\n00:24:07.180 --> 00:24:09.620\nThe default is every port is in vlan one\n\n451\n00:24:09.620 --> 00:24:12.660\nremember how I said we don't\nreally have any vlans by default?\n\n452\n00:24:12.660 --> 00:24:14.510\nWe don't there's no vlan database.\n\n453\n00:24:14.510 --> 00:24:19.003\nSo while show vlan shows me a vlan one and\n1002, 3, 4 and 5,\n\n454\n00:24:19.003 --> 00:24:21.560\nthose don't actually exist.\n\n455\n00:24:21.560 --> 00:24:22.940\nThey're there, but they don't exist.\n\n456\n00:24:24.120 --> 00:24:27.080\nOnce I start to customize things,\nthat changes.\n\n457\n00:24:27.080 --> 00:24:29.170\nSo when I issue the vlan ten command,\n\n458\n00:24:29.170 --> 00:24:33.040\nthat created this vlan and\nit hasn't written it to the database yet.\n\n459\n00:24:33.040 --> 00:24:36.270\nAs soon as I get out of this prompt,\nit will write it to the database and\n\n460\n00:24:36.270 --> 00:24:37.270\nthen we'll see that file.\n\n461\n00:24:37.270 --> 00:24:39.130\nNow we've got multiple vlans.\n\n462\n00:24:39.130 --> 00:24:40.730\nBefore I get out though,\nI'm going to give it a name.\n\n463\n00:24:40.730 --> 00:24:42.630\nI am going to call this Marketing.\n\n464\n00:24:42.630 --> 00:24:44.320\nAnd maybe I wanna create another one,\nright?\n\n465\n00:24:44.320 --> 00:24:46.640\nSo I'll issue a vlan 20 command.\n\n466\n00:24:46.640 --> 00:24:48.020\nAnd then I can come in and give it a name.\n\n467\n00:24:48.020 --> 00:24:50.180\nMaybe this will be sales or\nwhoever, right?\n\n468\n00:24:50.180 --> 00:24:51.940\nEach department getting their own VLAN.\n\n469\n00:24:51.940 --> 00:24:56.670\nAnd when I exit out of that prompt, it's\ngonna write that to the vlan.dat file.\n\n470\n00:24:56.670 --> 00:25:01.820\nSo now when I pull up my final system\nI see that I do have a vlan.dat,\n\n471\n00:25:01.820 --> 00:25:03.720\nright there, that's the database.\n\n472\n00:25:03.720 --> 00:25:06.260\nAnd it's up going, and ready to rock.\n\n473\n00:25:06.260 --> 00:25:11.510\nOkay, so now, I truly am multi VLAN,\nand I've got these things in place.\n\n474\n00:25:11.510 --> 00:25:17.170\nWe can do a show vlan brief, or\neven just to show vlan if we wanted.\n\n475\n00:25:17.170 --> 00:25:21.090\nAnd see that we should now have\nVLANs 10 and 20, and there they are.\n\n476\n00:25:21.090 --> 00:25:24.280\nThey don't have any ports assigned to\nthem yet, right, but they do exist.\n\n477\n00:25:24.280 --> 00:25:26.990\nThey are active,\nnot active unsupported or inactive.\n\n478\n00:25:26.990 --> 00:25:28.970\nThey are actually active and\nready to rock.\n\n479\n00:25:28.970 --> 00:25:30.930\nI've created those vlans all right.\n\n480\n00:25:30.930 --> 00:25:33.430\nNow I can also create a vlans on the fly.\n\n481\n00:25:33.430 --> 00:25:35.090\nI don't have to create them\nahead of time like this.\n\n482\n00:25:35.090 --> 00:25:36.020\nThese I created ahead of time.\n\n483\n00:25:36.020 --> 00:25:38.130\nNow I can go ahead and\nassign ports to them.\n\n484\n00:25:38.130 --> 00:25:42.490\nSo I can go in and assign one or\ntwo or 20 ports and so on.\n\n485\n00:25:42.490 --> 00:25:44.222\nFor example,\nif I wanna do one port, right.\n\n486\n00:25:44.222 --> 00:25:48.450\nIf I wanna move port Fa0/1 into marketing.\n\n487\n00:25:48.450 --> 00:25:52.456\nSo I can say interface fa0/1,\n\n488\n00:25:52.456 --> 00:25:57.170\n#switchport access vlan 1.\n\n489\n00:25:57.170 --> 00:25:58.820\nAnd that's gonna move it into vlan 1.\n\n490\n00:25:58.820 --> 00:26:02.150\nThe switchport command says I'm\nmodifying the way the switch functions.\n\n491\n00:26:02.150 --> 00:26:04.338\nAccess, it's an access port, not a trunk.\n\n492\n00:26:04.338 --> 00:26:08.060\nA trunk carries more than one vlan,\nan access port carries one vlan.\n\n493\n00:26:08.060 --> 00:26:11.555\nAnd, then, vlan,\nwhich one vlan is it, vlan 1.\n\n494\n00:26:11.555 --> 00:26:13.995\nNow, vlan 1's the default, right?\n\n495\n00:26:13.995 --> 00:26:20.954\nSo if I do a show running-config for\ninterface fa0/1,\n\n496\n00:26:20.954 --> 00:26:25.221\nI'm not gonna see my vlan command.\n\n497\n00:26:25.221 --> 00:26:28.820\nAnd the reason is vlan 1 is the default,\nso it doesn't show up.\n\n498\n00:26:28.820 --> 00:26:33.030\nBut if I were to go and\nassign me to vlan 10, right?\n\n499\n00:26:33.030 --> 00:26:35.810\nNow when I look at the configuration of\nthat interface it does show up because\n\n500\n00:26:35.810 --> 00:26:36.570\n10's not the default.\n\n501\n00:26:36.570 --> 00:26:38.724\nSo I can see it's now assigned to 10.\n\n502\n00:26:38.724 --> 00:26:42.067\nAnd if I want to assign a range\nof ports like 2, 3 and 4,\n\n503\n00:26:42.067 --> 00:26:46.480\nI want all of them to be on vlan 20,\nI could use the range command for that.\n\n504\n00:26:46.480 --> 00:26:53.800\nI could say interface range f0/2- 4.\n\n505\n00:26:53.800 --> 00:26:55.290\nAnd those spaces are important,\n\n506\n00:26:55.290 --> 00:26:57.530\nthe switches are really\npicky about the syntax.\n\n507\n00:26:57.530 --> 00:27:04.260\nNow I'm modifying ports 2- 4 and\nI can say switch port access vlan 20 and\n\n508\n00:27:04.260 --> 00:27:09.230\nI'm moving all three ports over\nto vlan 20 all at the same time.\n\n509\n00:27:09.230 --> 00:27:13.814\nAnd so now if I do a show vlan brief\nI can how I've got vlan 10 and 20 but\n\n510\n00:27:13.814 --> 00:27:16.430\nthey actually have ports assigned now.\n\n511\n00:27:16.430 --> 00:27:18.410\nSo now they are actually functioning.\n\n512\n00:27:18.410 --> 00:27:21.880\nPort one is now isolated from ports two,\nthree and four.\n\n513\n00:27:21.880 --> 00:27:24.900\nAll four of them are isolated from the\nwhole rest of the switch that is still up\n\n514\n00:27:24.900 --> 00:27:28.960\nhere In VLAN one so\nnow I’ve got that kind of laid out.\n\n515\n00:27:28.960 --> 00:27:33.240\nSo let’s say I want a VLAN 30,\nI want to import five into vlan 30.\n\n516\n00:27:33.240 --> 00:27:40.170\nI don't have to create the VLAN ahead\nof time I can jump right into fa0/5 and\n\n517\n00:27:40.170 --> 00:27:44.670\nsay switchboard access vlan 30.\n\n518\n00:27:44.670 --> 00:27:47.900\nThat VLAN doesn't exist so\nwhen I run it, it creates it for\n\n519\n00:27:47.900 --> 00:27:51.830\nme, and unlike the other ones,\nthat vlan exists right away.\n\n520\n00:27:51.830 --> 00:27:55.920\nIf I do a show vlan brief right now, it's\nnot like I have to wait until I exit out\n\n521\n00:27:55.920 --> 00:27:59.945\nof the interface prompt, vlan 30\nalready exists and port 5 is in it.\n\n522\n00:27:59.945 --> 00:28:02.125\nDoesn't have a pretty name but\nI can always go and\n\n523\n00:28:02.125 --> 00:28:07.965\nadd a name later right I can go vlan 30,\nname I don't know research,\n\n524\n00:28:07.965 --> 00:28:10.705\nresearch there we go there's\na bit of research probably.\n\n525\n00:28:10.705 --> 00:28:14.600\nAnd so now when I do a show vlan\nbrief I can come in and see it,\n\n526\n00:28:14.600 --> 00:28:16.600\nI've got those three VLANs,\nthey're all named,\n\n527\n00:28:16.600 --> 00:28:20.300\nthey've got nice little ports assigned\nto them, and they're up and going.\n\n528\n00:28:20.300 --> 00:28:23.870\nSo getting a VLAN up and\nconfigured, not really a big deal,\n\n529\n00:28:23.870 --> 00:28:27.250\npretty easy to move the ports around and\nassign them and mix and match.\n\n530\n00:28:27.250 --> 00:28:28.190\nBut they are isolated,\n\n531\n00:28:28.190 --> 00:28:31.800\nwe do still have to worry about our\nuplinks And when you do an up link\n\n532\n00:28:31.800 --> 00:28:36.420\nwhat you really want is to have one\ninterface that's carrying multiple VLAN's.\n\n533\n00:28:36.420 --> 00:28:40.460\nAnd for that you're normally going\nto use the nice big up link port,\n\n534\n00:28:40.460 --> 00:28:41.960\nsort of at the end of your switch.\n\n535\n00:28:41.960 --> 00:28:45.675\n>> My switch has 24 100 megabit ports.\n\n536\n00:28:45.675 --> 00:28:49.295\nAnd at the very end there\nare 2 gigabit ports.\n\n537\n00:28:49.295 --> 00:28:54.375\nMy display got a little out of order\nthere because a status message popped up.\n\n538\n00:28:54.375 --> 00:28:56.345\nSo let me redo the show vlan brief.\n\n539\n00:28:56.345 --> 00:28:58.395\nAnd you'll see on vlan1,\n\n540\n00:28:58.395 --> 00:29:04.170\nright at the end we've got those gig\nports Gi0/1 and Gi0/2 sitting there.\n\n541\n00:29:04.170 --> 00:29:05.330\nI can use those as trunks if I want.\n\n542\n00:29:05.330 --> 00:29:07.860\nI can just use one,\nI don't have to use them both.\n\n543\n00:29:07.860 --> 00:29:12.730\nThe thing about a trunk, when they're an\naccess port, they only carry one VLAN so\n\n544\n00:29:12.730 --> 00:29:13.750\nthey show up right here.\n\n545\n00:29:13.750 --> 00:29:17.470\nWhen I make that port into a trunk,\nit's now carrying every VLAN and so\n\n546\n00:29:17.470 --> 00:29:19.440\nit's gonna disappear from this screen.\n\n547\n00:29:19.440 --> 00:29:22.678\nLet's do number two gi0/2\nI wanna make that a trunk.\n\n548\n00:29:22.678 --> 00:29:27.970\nSo I'm gonna get into configuration and\ndo an interface gi0/2 and\n\n549\n00:29:27.970 --> 00:29:35.900\nhere I can say switchport mode trunk and\nnow it's trunk, right?\n\n550\n00:29:35.900 --> 00:29:38.470\nIn theory.\nThere are some auto negotiations that\n\n551\n00:29:38.470 --> 00:29:40.690\nhappens over, we're gonna talk\nabout that in next episode.\n\n552\n00:29:40.690 --> 00:29:45.300\nSo I'm wanna throw a quick just static\nassignment we'll talk about this more in\n\n553\n00:29:45.300 --> 00:29:49.870\nthe next episode but I'm going to\nsay switchport trunk encapsulation.\n\n554\n00:29:49.870 --> 00:29:53.740\nThis one only supports one encapsulation\nso I don't have to worry about that and\n\n555\n00:29:53.740 --> 00:29:55.096\nI'm going to turn off negotiation.\n\n556\n00:29:55.096 --> 00:29:57.789\nAll right,\nthat's going to make this port a trunk,\n\n557\n00:29:57.789 --> 00:29:59.821\nhow do I know it's actually trunking.\n\n558\n00:29:59.821 --> 00:30:03.929\nWell if I do a show vlan brief.\n\n559\n00:30:05.030 --> 00:30:06.473\nI'm gonna look for Gi0/2, and\n\n560\n00:30:06.473 --> 00:30:11.200\nGi0/2 actually still showing\nup right here under VLAN1.\n\n561\n00:30:11.200 --> 00:30:14.550\nWhich means, I'm probably not trunking.\n\n562\n00:30:14.550 --> 00:30:19.939\nLet's see,\nI'm gonna do a show interface trunk.\n\n563\n00:30:19.939 --> 00:30:22.110\nAnd sure enough it's not trunking.\n\n564\n00:30:22.110 --> 00:30:25.880\nOkay, so something that I've done with\nthat interface has made it not trunk.\n\n565\n00:30:25.880 --> 00:30:28.285\nWell, there's a couple of things\nthat can cause that to happen,\n\n566\n00:30:28.285 --> 00:30:29.345\nmaybe it's not plugged in.\n\n567\n00:30:29.345 --> 00:30:32.111\n[LAUGH] It's hard to trunk with\nan interface that's down so\n\n568\n00:30:32.111 --> 00:30:33.640\nlet's do a quick check on that.\n\n569\n00:30:33.640 --> 00:30:35.050\nI'll do a show ip int brief.\n\n570\n00:30:36.380 --> 00:30:40.718\nAnd I'm just gonna check that GI0/2 and\nsee It's down.\n\n571\n00:30:40.718 --> 00:30:42.800\nYeah, I'm gonna have a hard time\nmaking it chunk if it's down.\n\n572\n00:30:42.800 --> 00:30:44.152\nLet's take port 24.\n\n573\n00:30:44.152 --> 00:30:47.450\nPort 24 is up, so\nI'm gonna turn that one into a trunk.\n\n574\n00:30:47.450 --> 00:30:48.810\nThat'll be a little easier.\n\n575\n00:30:48.810 --> 00:30:51.342\nSo I'm gonna get an interface, fa0/24.\n\n576\n00:30:51.342 --> 00:30:54.270\nAnd I'll say switch port mode trunk.\n\n577\n00:30:54.270 --> 00:30:56.820\nAnd I'll do a little\nswitch port no negotiate,\n\n578\n00:30:56.820 --> 00:30:59.194\njust to make sure It does\nwhat I want it to do.\n\n579\n00:30:59.194 --> 00:31:05.155\nAll right, now port 24,\nwhen I ran show vlan, way back up here,\n\n580\n00:31:05.155 --> 00:31:10.270\nI could see port 24 right here,\nunder vlan 1, right?\n\n581\n00:31:10.270 --> 00:31:14.110\nSo it's on vlan 1, that's where it's at,\nit's existing and it's happy.\n\n582\n00:31:14.110 --> 00:31:19.560\nNow, I've set it as a trunk, and so since\nit's a trunk, what's it gonna do now?\n\n583\n00:31:19.560 --> 00:31:21.300\nWhich vlan is it gonna show up on?\n\n584\n00:31:21.300 --> 00:31:25.430\nWell if you do a show vlan brief,\nI'm gonna look for port 24 and\n\n585\n00:31:25.430 --> 00:31:27.520\nsee where it shows up.\n\n586\n00:31:27.520 --> 00:31:30.800\nAnd, I'm not gonna find it.\n\n587\n00:31:30.800 --> 00:31:35.600\nTrunks disappear from this table, because\ntechnically a trunk would be in every vlan\n\n588\n00:31:35.600 --> 00:31:37.266\nand I don't see port 24 anymore.\n\n589\n00:31:37.266 --> 00:31:43.210\nAnd it Gi 0/2 was plugged in, it would\ndisappear also, but port 24 is gone.\n\n590\n00:31:43.210 --> 00:31:51.020\nAnd if I do a show interface trunk,\nI can see that port 24 is a trunk.\n\n591\n00:31:51.020 --> 00:31:56.613\nTrunking mode is on and\nit's carrying VLANs 1 through 4094.\n\n592\n00:31:56.613 --> 00:31:59.660\nWhen you create a VLAN the number\nis gonna be 1 through 4094.\n\n593\n00:31:59.660 --> 00:32:02.300\nThe original VLAN numbers\nare 1 through 1023 and\n\n594\n00:32:02.300 --> 00:32:05.200\nthen they extended the range to 4095.\n\n595\n00:32:05.200 --> 00:32:10.600\n4095 is reserved though so it's 1\nthrough 4094 are what we end up with.\n\n596\n00:32:10.600 --> 00:32:12.930\nSo that's the range that it's supporting.\n\n597\n00:32:12.930 --> 00:32:16.980\nBut notice down here the only active ones\nare 1, 10, 20 and 30, the ones that exist.\n\n598\n00:32:16.980 --> 00:32:18.970\nIt's not sending fake\nvlans across the line.\n\n599\n00:32:18.970 --> 00:32:21.210\nJust ones we actually use.\n\n600\n00:32:21.210 --> 00:32:24.370\nBut it's up we're trunking,\nand now I just have this\n\n601\n00:32:24.370 --> 00:32:28.920\none up link running between switch and\ncarrying all those different VLANs.\n\n602\n00:32:28.920 --> 00:32:32.920\nSo those are the commands that we saw\nin the CCENT series if you watched it.\n\n603\n00:32:32.920 --> 00:32:34.810\nThis is how we quickly get a trunk up and\n\n604\n00:32:34.810 --> 00:32:38.040\ngoing we get our VLAN set up\nan now everything is happy.\n\n605\n00:32:38.040 --> 00:32:41.290\nWhere things start to get tricky is\nwhen we bring more than one switch\n\n606\n00:32:41.290 --> 00:32:41.878\ninto the mix.\n\n607\n00:32:41.878 --> 00:32:45.010\nI've been working on one switch\nexclusively this whole episode\n\n608\n00:32:45.010 --> 00:32:47.370\nIn our next episode we're gonna\nbring more than one switch in.\n\n609\n00:32:47.370 --> 00:32:48.910\nAnd when we do that,\n\n610\n00:32:48.910 --> 00:32:52.730\nwe need to get out VLANs to play\nnice across all of our switches.\n\n611\n00:32:52.730 --> 00:32:57.210\nIf I create a VLAN on switch A,\nI need switches B and C to be aware of it.\n\n612\n00:32:57.210 --> 00:33:01.425\nAnd if I create a Trunk on switch A,\nI need the other end of that cable and\n\n613\n00:33:01.425 --> 00:33:04.275\nswitch B to work the same way so\nthey'll talk nice,\n\n614\n00:33:04.275 --> 00:33:06.015\notherwise you'll get conflicts there too.\n\n615\n00:33:06.015 --> 00:33:08.005\nSo, we've got VLAN creation and\n\n616\n00:33:08.005 --> 00:33:11.353\ntrunk creation to worry about\nwith multiple switches.\n\n617\n00:33:11.353 --> 00:33:14.993\nAnd so we're gonna see in the next episode\nways that we can coordinate that a little\n\n618\n00:33:14.993 --> 00:33:17.632\nbetter so the switches play nice,\neverything runs nice and\n\n619\n00:33:17.632 --> 00:33:21.442\nsmooth and then everybody's happy and you\nkeep your job which is kind of important.\n\n620\n00:33:21.442 --> 00:33:23.880\n[LAUGH] So\nthat's what we'll see in the next episode.\n\n621\n00:33:23.880 --> 00:33:27.850\nBut for this episode I think that’s about\nit for our brief overview about VLAN's.\n\n622\n00:33:27.850 --> 00:33:29.942\nStay tuned because we have\na lot more coming up.\n\n623\n00:33:29.942 --> 00:33:31.851\n>> Well thank you again Don for\n\n624\n00:33:31.851 --> 00:33:37.000\nreminding us about the basics of\ncreating VLAN's and where they go.\n\n625\n00:33:37.000 --> 00:33:39.690\nYou do want to make sure you\nremember that VLAN.dat file and\n\n626\n00:33:39.690 --> 00:33:43.460\nthose show commands as you continue to\nmove through your certification path.\n\n627\n00:33:43.460 --> 00:33:45.700\nRemember those show commands.rember\nthose show commands.\n\n628\n00:33:45.700 --> 00:33:46.890\nAre actually gonna be very important so\n\n629\n00:33:46.890 --> 00:33:49.380\nmake sure you actually\ndo these several times.\n\n630\n00:33:49.380 --> 00:33:52.300\nGet them into your mind before\nyou go in for the exam.\n\n631\n00:33:52.300 --> 00:33:54.690\nWell that's a great place for\nus to end this episode then.\n\n632\n00:33:54.690 --> 00:33:57.740\nSigning off for IT Pro TV,\nI've been your host Ronnie Wong.\n\n633\n00:33:57.740 --> 00:33:58.545\n>> And I'm Don Pezet.\n\n634\n00:33:58.545 --> 00:34:02.538\n>> Stay tuned right here for\nmore CCNA routing and switching.\n\n635\n00:34:02.538 --> 00:34:08.479\n[MUSIC]\n\n",
          "vimeoId": "178067881"
        },
        {
          "description": "In this episode, Ronnie and Don show the use of DTP to create trunks between switches automatically.  They also discuss and show some of the peculiarities of DTP modes.  They demonstrate how to configure trunking for using 802.1q.  Also, the guys show how to prune the vlans that do not need to go over a particular trunk interface.",
          "length": "2261",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/cisco-ccna200105/cisco-ccna-200105-1-2-trunking_and_dtp-080416-1.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/cisco-ccna200105/cisco-ccna-200105-1-2-trunking_and_dtp-080416-1-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/cisco-ccna200105/cisco-ccna-200105-1-2-trunking_and_dtp-080416-1-sm.jpg",
          "title": "Trunking and DTP",
          "transcript": "WEBVTT\n\n1\n00:00:00.123 --> 00:00:10.123\n[MUSIC]\n\n2\n00:00:12.343 --> 00:00:12.843\nWelcome back for\nanother episode right here on ITProTv.\n\n3\n00:00:15.490 --> 00:00:19.430\nI'm your host, Ronnie Wong, and\nyou're watching the CISCO CCNA routing and\n\n4\n00:00:19.430 --> 00:00:20.550\nswitching show.\n\n5\n00:00:20.550 --> 00:00:23.560\nNow, we've just been working with a single\nswitch but who better to help us actually\n\n6\n00:00:23.560 --> 00:00:26.590\nunderstand when we start working working\nwith multiple switches than Mr. Don Pezet.\n\n7\n00:00:26.590 --> 00:00:27.790\nDon, welcome back to our studios.\n\n8\n00:00:27.790 --> 00:00:28.448\n>> Thanks for having me back, Ronnie.\n\n9\n00:00:28.448 --> 00:00:33.051\nSo in this episode what I wanna do is pick\nup with what we were talking about at\n\n10\n00:00:33.051 --> 00:00:35.280\nthe end of the last episode.\n\n11\n00:00:35.280 --> 00:00:37.040\nAt the end of the last episode,\n\n12\n00:00:37.040 --> 00:00:40.050\nI whipped up a really quick\ntrunk between two switches.\n\n13\n00:00:40.050 --> 00:00:42.670\nSo I just got them trunking and\nput that in place.\n\n14\n00:00:42.670 --> 00:00:46.370\nAnd I wanna double back and\ntalk about that a little bit, because\n\n15\n00:00:46.370 --> 00:00:50.525\nthere's actually a special protocol that's\nrunning in the background on the switch.\n\n16\n00:00:50.525 --> 00:00:54.885\nAnd on some switches you may find where\nyou don't even have to do anything, and\n\n17\n00:00:54.885 --> 00:00:56.915\nthey just automatically trunk.\n\n18\n00:00:56.915 --> 00:01:02.515\nAnd the reason is there's a technology\ncalled DTP or dynamic trunking protocol.\n\n19\n00:01:02.515 --> 00:01:06.365\nAnd the dynamic trunking protocol allows\ntwo switches to connect to each other and\n\n20\n00:01:06.365 --> 00:01:10.850\nautomatically become trunks without\nyou having to do a single thing.\n\n21\n00:01:10.850 --> 00:01:13.870\nIt's convenient but it's also dangerous.\n\n22\n00:01:13.870 --> 00:01:15.170\nIt's dangerous because in theory,\n\n23\n00:01:15.170 --> 00:01:19.700\na hacker could plug into an exposed port\non your network and negotiate on a trunk.\n\n24\n00:01:19.700 --> 00:01:23.690\nAnd when they do that they'll start\nreceiving traffic from all of your VLANs.\n\n25\n00:01:23.690 --> 00:01:27.170\nSo in this episode I wanna show you guys\nhow DTP works, how we can use it, and\n\n26\n00:01:27.170 --> 00:01:30.760\nhow we can safely use it if we wanna\nmake sure we protect our network and\n\n27\n00:01:30.760 --> 00:01:32.230\nkeep things under control.\n\n28\n00:01:32.230 --> 00:01:35.170\nSo let's start with a quick diagram,\nI wanna show you what I've got.\n\n29\n00:01:35.170 --> 00:01:37.490\nI've got three switches in my environment.\n\n30\n00:01:37.490 --> 00:01:41.981\nI've got NY Core 1,\nNY Core 2 and NY Access 1.\n\n31\n00:01:41.981 --> 00:01:42.974\nThese three switches.\n\n32\n00:01:42.974 --> 00:01:45.490\nThere's actually another\ncable run between them, so\n\n33\n00:01:45.490 --> 00:01:48.080\nwe got a triangle switches\nin my environment.\n\n34\n00:01:48.080 --> 00:01:52.410\nBut basically I'm gonna treat NY Core\n1 as kind of center of my network.\n\n35\n00:01:52.410 --> 00:01:56.710\nNow, NY Core 1 has these connections\nto the other 2 switches and\n\n36\n00:01:56.710 --> 00:02:00.650\nI wanna build trunks between\nthe switches to get those in place.\n\n37\n00:02:00.650 --> 00:02:05.090\nSo if I wanna do that I can do it\nmanually, I can do it by hand.\n\n38\n00:02:05.090 --> 00:02:08.780\nOr I can do it dynamically\nthrough the use of DTP and\n\n39\n00:02:08.780 --> 00:02:12.570\nlet them trunk themselves,\nso lets see how that works.\n\n40\n00:02:12.570 --> 00:02:18.088\nAt he very end of the last episode,\nI went into NY Access 1 into this switch.\n\n41\n00:02:18.088 --> 00:02:21.680\nAnd I took it's 24th port and\nI made it a trunk.\n\n42\n00:02:21.680 --> 00:02:23.370\nAnd I did it manually.\n\n43\n00:02:23.370 --> 00:02:29.249\nSo the way I did that was by doing,\na command like\n\n44\n00:02:30.420 --> 00:02:34.730\nthis, where I said, oops, I should,\nI reset the switch in the last episode.\n\n45\n00:02:34.730 --> 00:02:38.716\nSo [LAUGH] what I did to do it manually,\nlet's do it again,\n\n46\n00:02:38.716 --> 00:02:43.049\nis I went into interface fa0/24 and\nI issued 2 commands.\n\n47\n00:02:43.049 --> 00:02:45.960\nNow, technically I only\nhad to issue one command.\n\n48\n00:02:45.960 --> 00:02:46.520\nRight now,\n\n49\n00:02:46.520 --> 00:02:52.810\nif I were to do a show interface trunk,\nI have no interfaces that are trunking.\n\n50\n00:02:52.810 --> 00:02:55.020\nSo I am not trunking at all.\n\n51\n00:02:55.020 --> 00:02:59.800\nOn this interface,\nI said switchport mode trunk.\n\n52\n00:03:00.890 --> 00:03:05.740\nAnd when I did that, that was me telling\nit, hey, I want this port to be a trunk.\n\n53\n00:03:05.740 --> 00:03:09.270\nAnd when I ran that,\nit moved into trunk mode.\n\n54\n00:03:09.270 --> 00:03:11.690\nNow, see how my interface just went up?\n\n55\n00:03:11.690 --> 00:03:12.810\nOr actually it's going down and\n\n56\n00:03:12.810 --> 00:03:16.530\nthen up, well, when I made it\na trunk the interface reset,\n\n57\n00:03:16.530 --> 00:03:21.210\nthe interface went down as an access port\nand then came back up as a trunk, and\n\n58\n00:03:21.210 --> 00:03:25.300\nit’s talking to the switch on the other\nend and saying, hey, I want to be a trunk.\n\n59\n00:03:26.320 --> 00:03:30.910\nAnd the switch on the other side,\nif it's running DTP,\n\n60\n00:03:30.910 --> 00:03:35.200\ndynamic trunking protocol, and I'm\nrunning DTP, dynamic trunking protocol,\n\n61\n00:03:35.200 --> 00:03:39.030\nwe're gonna talk, and I'm gonna tell it,\nhey, I wanna be a switch.\n\n62\n00:03:39.030 --> 00:03:40.872\nI mean, I wanna be a trunk,\nyou're already a switch.\n\n63\n00:03:40.872 --> 00:03:46.260\nI wanna be a trunk, and the other\nswitch is going to say, yes or no.\n\n64\n00:03:46.260 --> 00:03:49.070\nYeah, well, let's trunk,\nor no I don't think so.\n\n65\n00:03:49.070 --> 00:03:56.050\nAnd depending on the result, I may become\na trunk or I may stay an access port.\n\n66\n00:03:56.050 --> 00:03:59.910\nSo I see my interface reset,\nI know I tried to become a trunk but\n\n67\n00:03:59.910 --> 00:04:05.690\nif I do a show interface trunk I may or\nmay not have actually become one.\n\n68\n00:04:05.690 --> 00:04:09.040\nIn this case I can see\nthat I did become a trunk.\n\n69\n00:04:09.040 --> 00:04:13.847\nAnd when I look at it I can see\nmy configuration where it says I\n\n70\n00:04:13.847 --> 00:04:16.356\nbecame an 802.1q trunk.\n\n71\n00:04:16.356 --> 00:04:21.087\nRemember from CCNT there's 2 trunking\nprotocols that are out there, 802.1q vlan\n\n72\n00:04:21.087 --> 00:04:25.770\ntagging, that's the most common,\nthat's the open standard for trunks.\n\n73\n00:04:25.770 --> 00:04:29.050\nAnd then, there's ISL, interswitch link.\n\n74\n00:04:29.050 --> 00:04:30.470\nISL is Cisco proprietary.\n\n75\n00:04:30.470 --> 00:04:34.400\nIt only works on Cisco equipment and\nthat makes it far less popular.\n\n76\n00:04:34.400 --> 00:04:36.960\nThere used to be certain advantages for\nrunning ISL.\n\n77\n00:04:36.960 --> 00:04:38.490\nThere aren't advantages for that anymore.\n\n78\n00:04:38.490 --> 00:04:42.070\nAnd so,\nnow pretty much everybody runs 802.1q.\n\n79\n00:04:42.070 --> 00:04:45.580\nIn fact,\nsome Cisco switches only support 802.1q.\n\n80\n00:04:45.580 --> 00:04:49.190\nEven Cisco started dropping support for\nISO on some of their equipment.\n\n81\n00:04:49.190 --> 00:04:51.879\nThe switch that I'm on\nright now is a 2960.\n\n82\n00:04:51.879 --> 00:04:56.360\nAnd on the 2960 I don't actually remember\nwhat it supports so let's find out.\n\n83\n00:04:56.360 --> 00:05:00.360\nIf I run switchport\ntrunk encapsulation and\n\n84\n00:05:00.360 --> 00:05:03.000\nthen do a question mark it\nwill tell me what it supports.\n\n85\n00:05:03.000 --> 00:05:06.844\nNow, if I get unrecognized command,\nyou might think well, Don,\n\n86\n00:05:06.844 --> 00:05:08.707\nyou just typed the wrong thing.\n\n87\n00:05:08.707 --> 00:05:12.620\nBut in actuality on this switch,\nit doesn't have the encapsulation command.\n\n88\n00:05:12.620 --> 00:05:19.680\nBecause it only supports 1 type of\nencapsulation, and that is the .1q.\n\n89\n00:05:19.680 --> 00:05:24.530\nSo I can't tell it to use ISL or .1q,\nso they leave the command out entirely.\n\n90\n00:05:24.530 --> 00:05:26.180\nThat's on the 2960.\n\n91\n00:05:26.180 --> 00:05:28.200\nLet's see on a different switch.\n\n92\n00:05:28.200 --> 00:05:30.480\nSo I'm gonna jump up to 1 of my 3750's.\n\n93\n00:05:30.480 --> 00:05:35.040\nSo these guys up here are 3750's,\nwhich are higher end switches.\n\n94\n00:05:35.040 --> 00:05:38.470\nSo higher end switches are gonna\nhave more features and\n\n95\n00:05:38.470 --> 00:05:40.800\none of those features\nwould be that ISL support.\n\n96\n00:05:40.800 --> 00:05:43.430\nSo on this switch if I were to\njump into configuration and\n\n97\n00:05:43.430 --> 00:05:49.070\nget into a interface like, I guess,\nit's probably a gigabit port or\n\n98\n00:05:49.070 --> 00:05:54.760\nsomething, let me find an interface real\nquick that I can hijack for my trunk.\n\n99\n00:05:54.760 --> 00:05:58.200\nThat when I go in there,\nI just got to get my syntax right.\n\n100\n00:05:58.200 --> 00:06:04.489\nIf I get an interface fa1/0/24 and\nI say switchport\n\n101\n00:06:04.489 --> 00:06:10.140\ntrunk encapsulation,\nit has the encapsulation command.\n\n102\n00:06:10.140 --> 00:06:15.847\nAnd see how I can pick between .1q,\nISL and negotiate.\n\n103\n00:06:15.847 --> 00:06:20.987\nNow, negotiate is actually the default\non a lot of Cisco equipment and\n\n104\n00:06:20.987 --> 00:06:23.774\nthat means it will do either 1 .1q or\n\n105\n00:06:23.774 --> 00:06:27.650\nISL if the other side just\nasks us we can do either 1.\n\n106\n00:06:27.650 --> 00:06:30.770\nAnd that's part of what dynamic\ntrunking protocol does.\n\n107\n00:06:30.770 --> 00:06:34.150\nThe main thing is it decides whether\nwe're gonna be an access port or a trunk.\n\n108\n00:06:34.150 --> 00:06:36.790\nAnd then, if we decide to become a trunk,\n\n109\n00:06:36.790 --> 00:06:39.470\nthen we can figure out which\nprotocol we wanna run from there.\n\n110\n00:06:40.620 --> 00:06:44.230\nNow, in the last episode, I was just\ntrying to get a trunk up as fast as I\n\n111\n00:06:44.230 --> 00:06:46.960\ncould, in as few commands as possible.\n\n112\n00:06:46.960 --> 00:06:52.600\nAnd so, the main command that I\nissued was switch port mode trunk.\n\n113\n00:06:52.600 --> 00:06:54.420\nAnd that's what made the support.\n\n114\n00:06:54.420 --> 00:06:55.178\nAnd then,\n\n115\n00:06:55.178 --> 00:07:00.416\nif you remember from that episode I\nalso issued switchport nonegotiate.\n\n116\n00:07:00.416 --> 00:07:03.030\nNow, why did I issue that?\n\n117\n00:07:03.030 --> 00:07:06.520\nWell, what I'm telling it is,\nI've already told that I wanna be a trunk,\n\n118\n00:07:06.520 --> 00:07:08.780\nI was pretty explicit there,\nswitchport mode trunk.\n\n119\n00:07:08.780 --> 00:07:13.350\nBut I'm telling it, don't negotiate\nprotocols, don't negotiate whether\n\n120\n00:07:13.350 --> 00:07:18.030\nwe're access or trunk, you're going to be\na trunk, and you're going to do 802.1q.\n\n121\n00:07:18.030 --> 00:07:21.900\nNow, I don't really have to worry about\nprotocol here cuz we only support 802.1q\n\n122\n00:07:21.900 --> 00:07:27.150\nbut this was my way of telling it\nyou just need to become a trunk.\n\n123\n00:07:27.150 --> 00:07:28.170\nAnd it works, right?\n\n124\n00:07:28.170 --> 00:07:33.908\nWhen I do a show interface trunk I\ncan see that that's already happened,\n\n125\n00:07:33.908 --> 00:07:37.669\nthat my port 24 is now\nconfigured as a trunk and\n\n126\n00:07:37.669 --> 00:07:42.205\nit's doing 802.1q and\nwe're up and we're going.\n\n127\n00:07:42.205 --> 00:07:45.310\nNow, port 24 on my switch.\n\n128\n00:07:45.310 --> 00:07:47.812\nIf I do a show cdp neighbors,\n\n129\n00:07:47.812 --> 00:07:53.458\nwhen I take a look at that port\n24 on my switch runs to NYCORE1.\n\n130\n00:07:53.458 --> 00:07:59.533\nAnd on NYCORE1 it's\nplugged into Fa 1/0/22.\n\n131\n00:07:59.533 --> 00:08:04.655\nSo the other end of this cable Right,\nso I have this cable that\n\n132\n00:08:04.655 --> 00:08:09.690\nruns from port 24 on my switch,\nto port 22 on NY core 1.\n\n133\n00:08:09.690 --> 00:08:14.480\nMy switch is now going to take traffic for\nall of my VLANS, VLAN one, 10, 20, 30, 40,\n\n134\n00:08:14.480 --> 00:08:18.870\nwhatever VLANS I have, and\nit's gonna send them across the wire.\n\n135\n00:08:18.870 --> 00:08:23.340\nAnd it's gonna tag them with\nthe 802.1 q VLAN identifier.\n\n136\n00:08:23.340 --> 00:08:25.900\nOn the other end, what does it do?\n\n137\n00:08:25.900 --> 00:08:30.520\nWell, it needs to be configured\nas an 802.1 q trunk also so\n\n138\n00:08:30.520 --> 00:08:32.230\nit knows to look for the tags.\n\n139\n00:08:32.230 --> 00:08:35.280\nSo it can look and see the tag and\nsay all right, this goes on VLAN 10 and\n\n140\n00:08:35.280 --> 00:08:38.100\nthat goes on VLAN 20 and\nthey can separate it out.\n\n141\n00:08:38.100 --> 00:08:42.010\nIf it's not looking for the tags,\nit's gonna receive the data,\n\n142\n00:08:42.010 --> 00:08:44.600\nignore the tags and\nput everything on VLAN1.\n\n143\n00:08:44.600 --> 00:08:48.290\nThat's the default,\nI haven't messed with NYCORE1 at all.\n\n144\n00:08:48.290 --> 00:08:51.770\nSo NYCORE1, it just has VLAN 1.\n\n145\n00:08:51.770 --> 00:08:54.240\nAll of my traffic will VLAN hop.\n\n146\n00:08:54.240 --> 00:08:56.200\nIt'll all jump over to VLAN 1.\n\n147\n00:08:56.200 --> 00:08:59.040\nAnd on VLAN 1 it'll rattle around,\nif those broadcast, they'll come back,\n\n148\n00:08:59.040 --> 00:09:03.420\nand they'll jump over to my various VLANs,\nthat's not what we want, right?\n\n149\n00:09:03.420 --> 00:09:06.870\nThe other side needs to\nknow to become a trunk.\n\n150\n00:09:06.870 --> 00:09:09.660\nAnd this is where\nDynamic Trunking Protocol comes in.\n\n151\n00:09:09.660 --> 00:09:11.310\nIt may have already done that.\n\n152\n00:09:11.310 --> 00:09:13.700\nI didn't configure the trunk\non the other side.\n\n153\n00:09:13.700 --> 00:09:18.386\nBut depending on which switch I'm running,\nand depending on which IOS version I'm\n\n154\n00:09:18.386 --> 00:09:21.300\nrunning, it may have already\nfigured it out for us.\n\n155\n00:09:21.300 --> 00:09:25.551\nAll right, some switches have\nDPT turned on by default and\n\n156\n00:09:25.551 --> 00:09:28.390\nare ready to become a trunk.\n\n157\n00:09:28.390 --> 00:09:32.000\nSome switches have DTP\nturned on by default but\n\n158\n00:09:32.000 --> 00:09:33.700\naren't ready to become a trunk.\n\n159\n00:09:33.700 --> 00:09:36.830\nAnd yet again, other switches\nmight have DTP completely off.\n\n160\n00:09:36.830 --> 00:09:38.890\nSo it depends on the switch you get.\n\n161\n00:09:38.890 --> 00:09:41.250\nSo anytime you configure a trunk,\nyou always want to go and\n\n162\n00:09:41.250 --> 00:09:44.840\ndouble check the other side unless you\nknow your switch models really well and\n\n163\n00:09:44.840 --> 00:09:46.060\nknow exactly what you've got supported.\n\n164\n00:09:46.060 --> 00:09:47.390\nIt's always best to go and\ndouble check it.\n\n165\n00:09:47.390 --> 00:09:51.970\nSo I need to go and double check NYCORE1,\non port 22 and see it ended up as, right?\n\n166\n00:09:51.970 --> 00:09:55.390\nSo, I'm going to jump over to that switch,\nright so let me go find NYCORE1.\n\n167\n00:09:56.960 --> 00:10:00.610\nThat's this guy right here and I haven't\ndone any thing on this switch so its just\n\n168\n00:10:00.610 --> 00:10:05.490\nsitting here at the console, so lets get\nin there and [LAUGH] if I can spell.\n\n169\n00:10:05.490 --> 00:10:13.344\nAnd I'm going to do a show running dash\nconfig Interface fa1/0/22, all right?\n\n170\n00:10:13.344 --> 00:10:18.660\nSo port 22, is the other end of the cable,\ncoming from my NY access 1.\n\n171\n00:10:18.660 --> 00:10:21.730\nOn the other side,\nI issued switch port mode trunk, and\n\n172\n00:10:21.730 --> 00:10:23.020\nI issued switch port no negotiate.\n\n173\n00:10:23.020 --> 00:10:25.070\nSo I'm a trunk, and that's it.\n\n174\n00:10:25.070 --> 00:10:28.050\nOn this side,\nit's the default configuration.\n\n175\n00:10:28.050 --> 00:10:32.580\nOkay, just nothing, I'm on VLAN1,\nand that's the end of it.\n\n176\n00:10:32.580 --> 00:10:39.790\nIf I do a show interface trunk, and I take\na look at it here, port 22 is trunking.\n\n177\n00:10:39.790 --> 00:10:44.310\nI didn't issue any configuration command,\nand yet port 22 is trunking, why is that?\n\n178\n00:10:44.310 --> 00:10:45.830\nWell look at the mode.\n\n179\n00:10:45.830 --> 00:10:48.160\nOn my other one, the mode said on.\n\n180\n00:10:48.160 --> 00:10:50.710\nOn means that I manually configure it.\n\n181\n00:10:50.710 --> 00:10:52.410\nI told it to become a trunk.\n\n182\n00:10:52.410 --> 00:10:58.850\nOn this side, it says Auto, and what Auto\nmeans is DTP, dynamic trunking protocol.\n\n183\n00:10:58.850 --> 00:11:03.850\nThis switch sensed that the person on\nthe other side configured a trunk, and\n\n184\n00:11:03.850 --> 00:11:06.650\nas a result, we became a trunk.\n\n185\n00:11:06.650 --> 00:11:11.120\nAnd so now we're aware,\nwe recognize that traffic, we bring it in.\n\n186\n00:11:11.120 --> 00:11:17.802\nAnd notice the encapsulation,\nit's not 802.1q, it's n-802.1q.\n\n187\n00:11:17.802 --> 00:11:20.989\nThat means we negotiated 802.1q.\n\n188\n00:11:20.989 --> 00:11:24.900\nWe asked the other side and\nsaid hey, do you do 802.1q or\n\n189\n00:11:24.900 --> 00:11:26.827\nISL which do you like better?\n\n190\n00:11:26.827 --> 00:11:30.282\nAnd the other side said I\ndon't even know what ISL is.\n\n191\n00:11:30.282 --> 00:11:32.199\nI only do 802.1q.\n\n192\n00:11:32.199 --> 00:11:35.730\nAnd so our side, this side,\nsaid, okay, we'll do 802.1q.\n\n193\n00:11:35.730 --> 00:11:39.120\nSo it negotiated it out and\nwe became a trunk.\n\n194\n00:11:39.120 --> 00:11:41.280\nSo now my status is trunking.\n\n195\n00:11:41.280 --> 00:11:44.400\nWhat did I have to do on this switch,\nabsolutely nothing.\n\n196\n00:11:44.400 --> 00:11:46.935\nIt just did it, it trunked automatically.\n\n197\n00:11:46.935 --> 00:11:49.099\nAll right, this is a 3750.\n\n198\n00:11:49.099 --> 00:11:52.623\nA 3750 has dynamic trunking\nprotocol turned on,\n\n199\n00:11:52.623 --> 00:11:54.990\nand is auto-trunking by default.\n\n200\n00:11:54.990 --> 00:11:58.200\nWe saw that with the.\n\n201\n00:11:58.200 --> 00:12:00.180\nI don't need the do command here.\n\n202\n00:12:00.180 --> 00:12:05.462\nWith the show running config,\nfor interface fa1/0/22.\n\n203\n00:12:05.462 --> 00:12:07.528\nI'm a trunk with no commands.\n\n204\n00:12:07.528 --> 00:12:12.150\nRight, but DTP's a funny beast right, we\nneed to understand exactly how it works.\n\n205\n00:12:12.150 --> 00:12:16.715\nDTP actually has two modes for\nthe way that it functions.\n\n206\n00:12:16.715 --> 00:12:21.145\nIn one mode, we will actively try and\nbecome a trunk.\n\n207\n00:12:21.145 --> 00:12:23.345\nWe'll ask the other side, hey,\ncan you become a trunk, too?\n\n208\n00:12:23.345 --> 00:12:24.125\nLet's become a trunk!\n\n209\n00:12:24.125 --> 00:12:26.375\nCome on, it'll be fun,\neverybody's doing it!\n\n210\n00:12:26.375 --> 00:12:29.840\nIn the other mode though,\nwe're a little more passive.\n\n211\n00:12:29.840 --> 00:12:32.880\nWe say I can become a trunk but\nI'm not gonna tell anybody that.\n\n212\n00:12:32.880 --> 00:12:35.420\nI'm gonna sit here as an axis port.\n\n213\n00:12:35.420 --> 00:12:39.370\nAnd if somebody asks me to become\na trunk then I'll say yes, but\n\n214\n00:12:39.370 --> 00:12:43.670\nif nobody asks, I'm gonna keep that as\nmy own little secret and that's it.\n\n215\n00:12:43.670 --> 00:12:46.280\nSo that's a passive mode for DTP.\n\n216\n00:12:46.280 --> 00:12:51.910\nThese two different modes that we have,\nand your switch will have a default mode.\n\n217\n00:12:51.910 --> 00:12:53.240\nIt'll default into one of those.\n\n218\n00:12:53.240 --> 00:12:58.110\nEither it's gonna actively try and\nbecome a trunk or it's just gonna\n\n219\n00:12:58.110 --> 00:13:01.590\npassively say yes if somebody asks but\notherwise it's not gonna tell, right?\n\n220\n00:13:01.590 --> 00:13:04.530\nSo which mode is your switch in?\n\n221\n00:13:04.530 --> 00:13:08.090\nUnfortunately I don't know because each\nversion is a little bit different and\n\n222\n00:13:08.090 --> 00:13:11.370\nyou'll find some switches default to one\nversion, some do a different version.\n\n223\n00:13:11.370 --> 00:13:13.670\nSo again, we kinda wanna double check it.\n\n224\n00:13:13.670 --> 00:13:14.998\nAnd let me show you what I mean.\n\n225\n00:13:14.998 --> 00:13:19.537\nThis is a 3750,\nwe just saw it dynamically trunk up.\n\n226\n00:13:19.537 --> 00:13:23.440\nSo I know it's running DTP,\nI know it's doing its job.\n\n227\n00:13:23.440 --> 00:13:26.960\nBut, if I do a show cdp neighbor, right?\n\n228\n00:13:26.960 --> 00:13:29.130\nWhen I look at my neighbors\nthat are out there,\n\n229\n00:13:29.130 --> 00:13:33.560\nI've got two connections to NYCORE2,\nports 23 and 24, all right?\n\n230\n00:13:35.180 --> 00:13:42.668\nAnd if I do a show running-config for\ninterface fa1/0/23, and 24.\n\n231\n00:13:42.668 --> 00:13:44.890\nThere are other default configs,\nall right?\n\n232\n00:13:44.890 --> 00:13:50.390\nWell, these two ports run to\nthe other switch, over to core 2 and\n\n233\n00:13:50.390 --> 00:13:54.600\nif I look at the port numbers 23 and\n24 on the other switch also, right?\n\n234\n00:13:54.600 --> 00:13:56.578\nSo, let me jump over to the other switch.\n\n235\n00:13:56.578 --> 00:14:00.718\nSo, here's core 2 and on CORE2,\n\n236\n00:14:00.718 --> 00:14:04.306\nI'm just gonna do a show run for\n\n237\n00:14:04.306 --> 00:14:08.723\ninterface fa1/0/23 and 24.\n\n238\n00:14:08.723 --> 00:14:10.322\nAll right, no configuration.\n\n239\n00:14:10.322 --> 00:14:14.160\nWell, if they're running DTP and\nthey both start talking together.\n\n240\n00:14:14.160 --> 00:14:17.340\nThen they're gonna say, hey,\nI can become a trunk, how about you?\n\n241\n00:14:17.340 --> 00:14:21.290\nAnd the other side says, yeah, I can\nbecome a trunk, let's build up a trunk.\n\n242\n00:14:21.290 --> 00:14:22.750\nBut that's not happening here.\n\n243\n00:14:22.750 --> 00:14:27.450\nIf I do a show interface trunk on NYCORE2,\nI have no trunks.\n\n244\n00:14:27.450 --> 00:14:29.950\nI know they're running DTP but\nit's not working.\n\n245\n00:14:29.950 --> 00:14:32.330\nAnd the reason is they're both being shy.\n\n246\n00:14:32.330 --> 00:14:37.340\nThey're configured in the mode where if\nsomebody asks me to be a trunk, I will.\n\n247\n00:14:37.340 --> 00:14:40.690\nBut if nobody asks me,\nI'm just gonna stay in access port and\n\n248\n00:14:40.690 --> 00:14:42.010\nthat's exactly what happens here.\n\n249\n00:14:42.010 --> 00:14:46.020\nIt's like the middle school dance\nwhere the boys are on one wall and\n\n250\n00:14:46.020 --> 00:14:48.560\nthe girls are on the other wall and\nnobody wants to ask anyone to dance so\n\n251\n00:14:48.560 --> 00:14:49.760\nthey just stand there on the wall, right?\n\n252\n00:14:49.760 --> 00:14:51.140\nAnd that's what these switches are doing.\n\n253\n00:14:51.140 --> 00:14:54.270\nIf just one of them would ask,\nthe other would say yes and\n\n254\n00:14:54.270 --> 00:14:57.040\nthen we would have a trunk that was up and\nrunning, all right?\n\n255\n00:14:57.040 --> 00:14:58.960\nSo we may need to tweak DTP's behavior.\n\n256\n00:14:58.960 --> 00:15:01.420\nAnd so we do that by changing the mode.\n\n257\n00:15:01.420 --> 00:15:04.640\nIf I get into my configuration and\nlet's do it not here on Core2.\n\n258\n00:15:04.640 --> 00:15:07.100\nI'm going to leave Core2 alone,\nI'm going to jump back up to Core1.\n\n259\n00:15:08.200 --> 00:15:11.648\nAnd on Core1, I'm going to get into\nmy configuration and I'm going to use\n\n260\n00:15:11.648 --> 00:15:15.283\nthe range command, cause I can configure\nboth ports at the same time, right.\n\n261\n00:15:15.283 --> 00:15:17.093\nPorts 23 and 24.\n\n262\n00:15:17.093 --> 00:15:21.427\nSo I'm modifying ports 23 and\n24 and what I'm gonna so\n\n263\n00:15:21.427 --> 00:15:27.690\nis I'm gonna say switchport mode and\nthen I'm gonna set a mode on the port.\n\n264\n00:15:27.690 --> 00:15:33.250\nAnd what I'm looking for\nis this guy right here, dynamic, okay.\n\n265\n00:15:33.250 --> 00:15:37.330\nIt says, set trunking mode to\ndynamically negotiate access for trunk.\n\n266\n00:15:37.330 --> 00:15:40.830\nThat's DTP, switch port mode,\ndynamic, right?\n\n267\n00:15:40.830 --> 00:15:42.350\nI could say switch port mode trunk.\n\n268\n00:15:42.350 --> 00:15:44.970\nNot I'm forced as trunk, trunking is on.\n\n269\n00:15:44.970 --> 00:15:48.820\nOr, I can say access, and now I'm\nforced as an access, trunking is off.\n\n270\n00:15:48.820 --> 00:15:51.060\nSo those are hard set, on or off.\n\n271\n00:15:51.060 --> 00:15:53.300\nBut dynamic is gonna negotiate.\n\n272\n00:15:53.300 --> 00:15:57.170\nAnd when I do a question mark here\nI'll see my two modes, auto and\n\n273\n00:15:57.170 --> 00:15:59.100\ndesirable, okay?\n\n274\n00:15:59.100 --> 00:16:00.994\nAuto is actually my default.\n\n275\n00:16:00.994 --> 00:16:05.461\nAuto is passive, this is the shy kid\nagainst the wall, if somebody asks them,\n\n276\n00:16:05.461 --> 00:16:06.558\nthey'll say yes.\n\n277\n00:16:06.558 --> 00:16:09.384\nBut if nobody asks, they're gonna\nstay right there on the wall.\n\n278\n00:16:09.384 --> 00:16:10.847\nThat's what auto does, right?\n\n279\n00:16:10.847 --> 00:16:15.580\nIt's not going to trunk unless\nsomebody asks, desirable on the hand.\n\n280\n00:16:15.580 --> 00:16:17.410\nDesirable means, I'm gonna ask.\n\n281\n00:16:17.410 --> 00:16:22.270\nI'm going to actively reach out there and\nsay, please, let's build the trunk.\n\n282\n00:16:22.270 --> 00:16:27.620\nRight, if I do switch port\ndynamic auto That's the default,\n\n283\n00:16:27.620 --> 00:16:29.430\nnothing's gonna happen, right?\n\n284\n00:16:29.430 --> 00:16:31.690\nAnd so that's what I see,\nnothing is happening.\n\n285\n00:16:31.690 --> 00:16:37.640\nBut if I do desirable,\nnow on both of those ports I'm gonna ask.\n\n286\n00:16:37.640 --> 00:16:39.785\nAnd I'm gonna ask the other side,\nhey, I wanna be a trunk.\n\n287\n00:16:39.785 --> 00:16:41.345\nDo you want to be a trunk?\n\n288\n00:16:41.345 --> 00:16:44.245\nThe other side is still set to auto,\nright?\n\n289\n00:16:44.245 --> 00:16:45.875\nBut I'm asking.\n\n290\n00:16:45.875 --> 00:16:48.455\nAnd since I'm asking they're gonna\nanswer and they'll say yes and\n\n291\n00:16:48.455 --> 00:16:51.515\nsure enough I see my two lines go down and\nthen come back up.\n\n292\n00:16:51.515 --> 00:16:54.672\nAnd they're coming back up as a trunk,\nright?\n\n293\n00:16:54.672 --> 00:17:00.372\nSo, now, I have two trunk links, over to\nNYCORE2, or at least I should, right?\n\n294\n00:17:00.372 --> 00:17:02.682\nThe key thing to remember for the exam,\n\n295\n00:17:02.682 --> 00:17:08.542\nif you have two autos next to each other,\nthey are not going to trunk.\n\n296\n00:17:08.542 --> 00:17:13.080\nIf you have one auto and one desirable,\nyou'll trunk one desirable and\n\n297\n00:17:13.080 --> 00:17:14.520\none auto, you'll trunk.\n\n298\n00:17:14.520 --> 00:17:16.910\nTwo desirables, you'll trunk.\n\n299\n00:17:16.910 --> 00:17:18.970\nBut two autos will not.\n\n300\n00:17:18.970 --> 00:17:21.940\nAll right, so keeping, remember there,\nnever do auto to auto.\n\n301\n00:17:21.940 --> 00:17:23.490\nIt's gotta be auto to desirable or\n\n302\n00:17:23.490 --> 00:17:26.570\ndesirable to desirable,\nin order to build that trunk.\n\n303\n00:17:26.570 --> 00:17:28.380\nAnd I say I'm trunking was verify.\n\n304\n00:17:28.380 --> 00:17:33.100\nIf I do a show interface trunk,\nI should have a few new trunks in my list.\n\n305\n00:17:33.100 --> 00:17:35.110\nPorts 23 and 24 showing up right there.\n\n306\n00:17:35.110 --> 00:17:37.810\nand then I have not issued a single\ncommandment in my core two,\n\n307\n00:17:37.810 --> 00:17:40.860\nor at least a single config command.\n\n308\n00:17:40.860 --> 00:17:42.720\nI've issued other things.\n\n309\n00:17:42.720 --> 00:17:46.960\nAnd so on here, if I do a show interface\ntrunk I got nothing a minute ago.\n\n310\n00:17:46.960 --> 00:17:51.260\nNow I've got two trunks, and\nlook what happened, my mode is auto and\n\n311\n00:17:51.260 --> 00:17:55.910\nI've negotiated ISL,\nboth switches have ISL and\n\n312\n00:17:55.910 --> 00:17:58.930\ndata to that one queue we negotiated ISL.\n\n313\n00:17:58.930 --> 00:18:03.670\nNow I may want to negotiate\ntrump versus access, but\n\n314\n00:18:03.670 --> 00:18:06.230\nI may not want to negotiate\nthat encapsulation.\n\n315\n00:18:06.230 --> 00:18:10.430\nI may want it to be 8oq.1q, all right?\n\n316\n00:18:10.430 --> 00:18:13.920\nSo I can go in and I can hard set that and\nforce it over to one way.\n\n317\n00:18:13.920 --> 00:18:16.760\nNow we do need to be careful\nwhen we do this because if you\n\n318\n00:18:16.760 --> 00:18:20.870\nchange a port's configuration while\nit's up and running, so for example,\n\n319\n00:18:20.870 --> 00:18:25.250\nright now, data is flowing over that\nport and it's using ISL encapsulation.\n\n320\n00:18:25.250 --> 00:18:29.750\nIf I put it at dot1Q and\none side is doing dot1Q tagging and\n\n321\n00:18:29.750 --> 00:18:34.770\nthe other side is doing ISL encapsulation,\nmy data is gonna get messed up, right?\n\n322\n00:18:34.770 --> 00:18:37.320\nSo when you change protocols like this,\n\n323\n00:18:37.320 --> 00:18:41.450\nCisco always recommends that you\nshut down the interfaces first.\n\n324\n00:18:41.450 --> 00:18:47.090\nSo I'm gonna do a shut down so that I\nensure that I never have cross protocols,\n\n325\n00:18:47.090 --> 00:18:49.650\nright, it's like Ghostbusters,\nyou don't want to cross the streams.\n\n326\n00:18:49.650 --> 00:18:51.850\nSo I'm gonna shut those interfaces down.\n\n327\n00:18:51.850 --> 00:18:57.547\nAnd then I'm gonna say\nswitchport trunk encapsulation.\n\n328\n00:18:57.547 --> 00:19:00.100\nAnd if I do a question mark here,\nI'll see my options.\n\n329\n00:19:00.100 --> 00:19:01.830\nSee how I can hardset .1q.\n\n330\n00:19:01.830 --> 00:19:06.500\nI can hardset ISL or\nnegotiate is the default.\n\n331\n00:19:06.500 --> 00:19:11.210\nAnd if I leave it at negotiate,\nit's defaulting the ISL, right?\n\n332\n00:19:11.210 --> 00:19:14.090\nSo I'm gonna come in here and\nI'm gonna tell it to and\n\n333\n00:19:14.090 --> 00:19:15.330\nmy head's gonna be on top of this command.\n\n334\n00:19:15.330 --> 00:19:19.710\nI'm gonna tell it to, to hard set this\none to make sure that is does dot1q\n\n335\n00:19:19.710 --> 00:19:25.330\nlike that so,\nswitchport trunk encapsulation dot1q.\n\n336\n00:19:25.330 --> 00:19:27.180\nI'm still using DTP.\n\n337\n00:19:27.180 --> 00:19:29.900\nI'm still doing a dynamic trunk.\n\n338\n00:19:29.900 --> 00:19:33.190\nBut I'm now hard-setting my protocol,\nokay?\n\n339\n00:19:33.190 --> 00:19:37.830\nAnd so now I'm gonna do a no shutdown,\nto bring those interfaces back up.\n\n340\n00:19:37.830 --> 00:19:40.200\nThe interfaces were down, so\nthere's no traffic on them,\n\n341\n00:19:40.200 --> 00:19:42.790\nI don't have to worry about\nwonky stuff going on.\n\n342\n00:19:42.790 --> 00:19:46.370\nThe trunk on the other side has already\ngone down too, when we come up,\n\n343\n00:19:46.370 --> 00:19:50.990\nDTP is going to negotiates whether\nwe become a trunk or an axis port.\n\n344\n00:19:50.990 --> 00:19:54.290\nAnd because I set the desirable and\nthe other side is set to auto,\n\n345\n00:19:54.290 --> 00:19:56.240\nwe are going to become a trunk.\n\n346\n00:19:56.240 --> 00:20:00.140\nAnd as soon as we become a trunk,\nthen we are going to negotiate whether or\n\n347\n00:20:00.140 --> 00:20:04.980\nnot we need to do ISL or dot one Q.\n\n348\n00:20:04.980 --> 00:20:10.720\nThis side is now hard set to dot one Q and\nso the other side should adopt that.\n\n349\n00:20:10.720 --> 00:20:13.500\nIf I do a show run for interface fa1/0/23.\n\n350\n00:20:13.500 --> 00:20:17.990\nYou can see the two commands\nI've issued so far.\n\n351\n00:20:17.990 --> 00:20:19.930\nSwitchport trunk encapsulation .1q.\n\n352\n00:20:19.930 --> 00:20:22.200\nThat was me hard setting\nthe encapsulation.\n\n353\n00:20:22.200 --> 00:20:24.200\nAnd then switchport\nmode dynamic desirable.\n\n354\n00:20:24.200 --> 00:20:29.580\nThat's saying I wanna do DTP, and\nI wanna actively try and become a trunk.\n\n355\n00:20:29.580 --> 00:20:32.840\nIf I'll do a show interface trunk,\n\n356\n00:20:32.840 --> 00:20:36.970\nwhat I'll see is that my mode is,\nit's not on, right?\n\n357\n00:20:36.970 --> 00:20:39.700\nWhen you see on,\nthat's where it hard sets to load trunk.\n\n358\n00:20:39.700 --> 00:20:40.560\nHere it's still desirable.\n\n359\n00:20:40.560 --> 00:20:42.125\nSo we're running DTP.\n\n360\n00:20:42.125 --> 00:20:45.195\nBut my encapsulation is not n-802.1q,\n\n361\n00:20:45.195 --> 00:20:49.035\nI didn't negotiate it,\nthis is actually hard-set as 802.1q.\n\n362\n00:20:49.035 --> 00:20:53.005\nOn the other side,\nit's gonna be a little bit different.\n\n363\n00:20:53.005 --> 00:20:58.040\nIf I jump over to NYCORE2, amidst\nthe numerous interfaces going up and down.\n\n364\n00:20:58.040 --> 00:21:00.040\nI can do a show interface trunk.\n\n365\n00:21:01.160 --> 00:21:04.770\nAnd I'll see that my two\nports are still set to auto.\n\n366\n00:21:04.770 --> 00:21:06.690\nNot desirable, but auto.\n\n367\n00:21:06.690 --> 00:21:09.260\nI'll become a trunk if\nsomebody asks me to.\n\n368\n00:21:09.260 --> 00:21:13.360\nAnd I've negotiated a21.q I support ISL,\nbut\n\n369\n00:21:13.360 --> 00:21:18.295\nthe other side really seemed keen on doing\nit in so that's what we're gonna do.\n\n370\n00:21:18.295 --> 00:21:19.910\nAnd now we're trunking, right?\n\n371\n00:21:19.910 --> 00:21:22.210\nSo this is a great way\nto build up trunks and\n\n372\n00:21:22.210 --> 00:21:24.590\nonly have to work on one end of the cable.\n\n373\n00:21:24.590 --> 00:21:29.550\nIf you have a core switch and\nyou got 20 access switches built off of it\n\n374\n00:21:29.550 --> 00:21:32.950\nI can configure all the trunking\ninformation right there on the core and\n\n375\n00:21:32.950 --> 00:21:36.310\nthe access switches will just learn it and\nget it, and that's it.\n\n376\n00:21:36.310 --> 00:21:39.380\nSo that makes life a lot easier on us and\nwe don't have to worry about\n\n377\n00:21:39.380 --> 00:21:41.990\nanything crazy like the negotiations\nlike this happening.\n\n378\n00:21:41.990 --> 00:21:44.040\nIt's all automatic.\n\n379\n00:21:44.040 --> 00:21:47.860\n>> Now, Don, should I though,\neven if there's 20 of them,\n\n380\n00:21:47.860 --> 00:21:51.450\nshould I go back on those access switches\nand actually manually set those or\n\n381\n00:21:51.450 --> 00:21:54.220\nshould I just leave them as is and\nnot worry about it?\n\n382\n00:21:54.220 --> 00:21:56.800\n>> One thing I know I mentioned\nin other episodes is I hate,\n\n383\n00:21:56.800 --> 00:21:58.390\nI hate anything dynamic\nto be honest with you.\n\n384\n00:21:58.390 --> 00:22:01.910\nAnything that negotiates or anything\nthat could work one way one day and\n\n385\n00:22:01.910 --> 00:22:02.860\na different way another day.\n\n386\n00:22:02.860 --> 00:22:03.460\nI hate that stuff.\n\n387\n00:22:03.460 --> 00:22:05.380\nSo I always statically assign.\n\n388\n00:22:05.380 --> 00:22:07.780\nAnd I never use TTP in production.\n\n389\n00:22:07.780 --> 00:22:09.090\nIt's on the exam, it's important.\n\n390\n00:22:09.090 --> 00:22:11.770\nIt is there to help you, so\nyou certainly are welcome to use it.\n\n391\n00:22:11.770 --> 00:22:13.460\nI think it's just a non thing.\n\n392\n00:22:13.460 --> 00:22:16.200\nIt's me, I don't like dynamic stuff.\n\n393\n00:22:16.200 --> 00:22:19.170\nI like to know that things are gonna\nwork the way I want them to.\n\n394\n00:22:19.170 --> 00:22:21.670\nOn the trunk side,\nif these are trunk links,\n\n395\n00:22:21.670 --> 00:22:24.080\nlike fiber optics that are running\nbetween the floors of your building,\n\n396\n00:22:24.080 --> 00:22:27.920\nit's perfectly safe to use DTP, go ahead\nand use it if you want, all right?\n\n397\n00:22:27.920 --> 00:22:31.010\nBut on your access ports, ports where\nyou know that there's gonna be computers\n\n398\n00:22:31.010 --> 00:22:34.860\nplugged into them,\nyou do not want to use DTP on those ports.\n\n399\n00:22:34.860 --> 00:22:36.870\nBecause if somebody's\nplugging in a computer,\n\n400\n00:22:36.870 --> 00:22:40.010\nyou want it to always be an access port.\n\n401\n00:22:40.010 --> 00:22:42.380\nYou don't want it to negotiate anything.\n\n402\n00:22:42.380 --> 00:22:47.000\nAll right so in those scenarios it's a\ngood idea to take any port that's exposed,\n\n403\n00:22:47.000 --> 00:22:49.950\nyou have no control over this, that's\nout in people's offices or lobbies or\n\n404\n00:22:49.950 --> 00:22:52.830\nwhatever and\nhard set those to be access ports.\n\n405\n00:22:52.830 --> 00:22:54.770\nSo for example, on the core two,\n\n406\n00:22:54.770 --> 00:23:00.530\nlet's say that port 23 was actually\na port that was in somebody's office.\n\n407\n00:23:00.530 --> 00:23:06.620\nWell right now with the default\nconfiguration, if I look at port 23.\n\n408\n00:23:06.620 --> 00:23:10.870\nI don't need to do when I'm not in config.\n\n409\n00:23:10.870 --> 00:23:15.280\nIf I look at the configuration interface,\nit's completely the defaults, right?\n\n410\n00:23:15.280 --> 00:23:18.220\nI got that the interface exists and\nnothing else.\n\n411\n00:23:18.220 --> 00:23:21.210\nBut it is fully negotiated\non becoming a trunk.\n\n412\n00:23:21.210 --> 00:23:24.340\nA hacker could plug into this port, and\n\n413\n00:23:24.340 --> 00:23:27.140\nthere's actually a lot of network\nadapters out there that support 802.1q.\n\n414\n00:23:27.140 --> 00:23:32.140\nSo they could turn on their own trunk and\nnow negotiate with this switch and\n\n415\n00:23:32.140 --> 00:23:36.690\nbecome a full 802.1q trunk and\nstart receiving traffic for every VLAN.\n\n416\n00:23:36.690 --> 00:23:40.830\nAnd once that happens\nnow they can go crazy.\n\n417\n00:23:40.830 --> 00:23:44.120\nNow they can receive all that traffic and\nrun wire shark and capture it all and\n\n418\n00:23:44.120 --> 00:23:46.037\nrecord it and that's really, really bad.\n\n419\n00:23:46.037 --> 00:23:51.349\nSo, what I wanna do is I wanna\nget into configuration and\n\n420\n00:23:51.349 --> 00:23:57.572\nget into fa1/0/23 and\nI wanna say switchport mode access.\n\n421\n00:23:57.572 --> 00:24:01.311\nI'm gonna hard set that\nto be an access port.\n\n422\n00:24:01.311 --> 00:24:05.653\nOkay, and when I do that, it's saying,\nI don't care if the other side is\n\n423\n00:24:05.653 --> 00:24:09.870\nasking me to become a trunk or\nnot, I want to be an access port.\n\n424\n00:24:09.870 --> 00:24:12.430\nNow when I became a trunk earlier,\nremember what happened?\n\n425\n00:24:12.430 --> 00:24:15.890\nRemember how the interface went down and\nthen came back up?\n\n426\n00:24:15.890 --> 00:24:21.520\nWell here, I used switchport mode access\nand I haven't seen my port change, right?\n\n427\n00:24:21.520 --> 00:24:24.400\nSo, if I do a show interface trunk and\nI look at port 23,\n\n428\n00:24:24.400 --> 00:24:27.670\nit did drop out, it's not a trunk anymore.\n\n429\n00:24:27.670 --> 00:24:29.630\nBut since I was only\ncarrying VLAN 1 before,\n\n430\n00:24:29.630 --> 00:24:30.800\nnow it's just drop the other VLANs.\n\n431\n00:24:30.800 --> 00:24:33.570\nThe port doesn't actually have to\nreset when we go back this way.\n\n432\n00:24:33.570 --> 00:24:38.850\nBut I am no longer a trunk, I'm not listed\nhere, I have become an access port.\n\n433\n00:24:38.850 --> 00:24:41.810\nNow, we don't have to, but I've gotten\nin the habit of following this up\n\n434\n00:24:41.810 --> 00:24:45.030\nwith one more command, which is\nswitchport nonegotiate, all right?\n\n435\n00:24:45.030 --> 00:24:48.600\nNow the negotiation is really when\nwe negotiate out the trunk protocol,\n\n436\n00:24:48.600 --> 00:24:51.070\nwe should never become a trunk,\nso it shouldn't be a problem.\n\n437\n00:24:51.070 --> 00:24:53.340\nBut I like to issue it anyway\njust to be on the safe side,\n\n438\n00:24:53.340 --> 00:24:54.800\nto turn off all negotiations.\n\n439\n00:24:54.800 --> 00:24:57.870\nSo I'm not doing any kind of\nDTP functions on here at all.\n\n440\n00:24:57.870 --> 00:25:00.590\nI'm still just gonna to be\nthe access port that I was before,\n\n441\n00:25:00.590 --> 00:25:01.890\njust that one extra little step.\n\n442\n00:25:03.092 --> 00:25:04.900\nAll right, so now,\nI'm hard set his access.\n\n443\n00:25:04.900 --> 00:25:08.300\nIf a hacker plugs into this,\nno matter what they do to become a trunk,\n\n444\n00:25:08.300 --> 00:25:10.660\nthis interface is not\ngoing to become a trunk.\n\n445\n00:25:10.660 --> 00:25:13.590\nIt is hard set as an access port and\n\n446\n00:25:13.590 --> 00:25:18.050\nthat's it and whatever VLAN it is\non that is what it's gonna be.\n\n447\n00:25:18.050 --> 00:25:22.080\nNow, we do have one little problem\nthis creates, voice over IP phones.\n\n448\n00:25:23.180 --> 00:25:25.243\nIf you have a Voice over IP phone,\n\n449\n00:25:25.243 --> 00:25:29.018\nmost VoIP phones have one\nconnection you plug into the wall.\n\n450\n00:25:29.018 --> 00:25:31.316\nAnd then they have another network jack\non there where you can actually plug your\n\n451\n00:25:31.316 --> 00:25:32.080\ncomputer into the phone.\n\n452\n00:25:32.080 --> 00:25:34.540\nYou can daisy chain and\nI showed this in the CCENT side,\n\n453\n00:25:34.540 --> 00:25:36.330\nwe had what were called voice VLANs.\n\n454\n00:25:36.330 --> 00:25:40.948\nIf you have Cisco VoIP phones, you can\nconfigure an interface to have a voice\n\n455\n00:25:40.948 --> 00:25:45.434\nVLAN and then it'll work just the way\nthat it's supposed to, all right?\n\n456\n00:25:45.434 --> 00:25:47.100\nLet me show you that really quick.\n\n457\n00:25:47.100 --> 00:25:51.910\nSo I'm still on port 23, and\nI've flagged it as an access port, so\n\n458\n00:25:51.910 --> 00:25:55.920\nI might say something like\nswitchport mode access.\n\n459\n00:25:55.920 --> 00:25:58.350\nWell, I've already done that one I guess,\nbut I'll do it again.\n\n460\n00:25:58.350 --> 00:26:06.200\nSwitchport mode access and then I can\nsay switchport access vlan 10, right?\n\n461\n00:26:06.200 --> 00:26:10.580\nSo now, my data, when I plugin to this\nport, it's going to be on VLAN 10.\n\n462\n00:26:10.580 --> 00:26:13.674\nBut you can go a step further and\n\n463\n00:26:13.674 --> 00:26:18.205\nsay switchport voice vlan 20, all right?\n\n464\n00:26:18.205 --> 00:26:25.310\nAnd when I do that, now I've got this\nport on two different VLANs, okay?\n\n465\n00:26:25.310 --> 00:26:28.205\nAnd what it's actually\ndoing is building a trunk,\n\n466\n00:26:28.205 --> 00:26:30.841\na trunk cuz it's carrying\nmore than one VLAN.\n\n467\n00:26:30.841 --> 00:26:36.396\nIf I do a show vlan and I take a look at\nit I'll have VLANs 10 and 20 now, right?\n\n468\n00:26:36.396 --> 00:26:39.910\nSo there's 10 and 20 and\nsee how port 23 shows up in both?\n\n469\n00:26:39.910 --> 00:26:41.890\nIt's technically a trunk, right?\n\n470\n00:26:41.890 --> 00:26:44.800\nBut Cisco controls it with\ntheir own technology so\n\n471\n00:26:44.800 --> 00:26:48.270\nif it's a Cisco VoIP phone it'll\nknow put the voice stuff on VLAN 20,\n\n472\n00:26:48.270 --> 00:26:51.140\nput the data stuff on VLAN 10 and\nthey're separated.\n\n473\n00:26:51.140 --> 00:26:52.720\nIf a hacker were to plug into this,\n\n474\n00:26:52.720 --> 00:26:55.510\nthe best they could get\nwould be VLANs 10 and 20.\n\n475\n00:26:55.510 --> 00:26:57.370\nIf I have other VLANs, right?\n\n476\n00:26:57.370 --> 00:27:01.381\nMaybe I have vlan 30,\nvlan 40, 50, all right.\n\n477\n00:27:01.381 --> 00:27:03.322\nSo I've got all these extra VLANs.\n\n478\n00:27:03.322 --> 00:27:09.104\nWhen I do a show interface trunk, see\nhow port 24 is carrying all those VLANs,\n\n479\n00:27:09.104 --> 00:27:12.058\n1, 10, 20, 30, 40, 50.\n\n480\n00:27:12.058 --> 00:27:15.514\nBut if I do a show vlan,\nwhen I jump in here,\n\n481\n00:27:15.514 --> 00:27:20.350\nI can see how these guys\nare a little different, right?\n\n482\n00:27:20.350 --> 00:27:25.550\nI see port 23 on 10 and 20, they're not on\nVLAN 30, 40, or 50 like a trunk would be.\n\n483\n00:27:25.550 --> 00:27:27.780\nSo this is special, it's different, right?\n\n484\n00:27:27.780 --> 00:27:31.450\nWith Cisco phones, we can use that\nvoice VLAN really effectively.\n\n485\n00:27:31.450 --> 00:27:33.790\nWhat if we don't have Cisco phones,\nthough?\n\n486\n00:27:33.790 --> 00:27:37.150\nRight, and I'm gonna keep getting\nthese native VLAN mismatch warnings.\n\n487\n00:27:37.150 --> 00:27:38.502\nLet me fix that real quick.\n\n488\n00:27:38.502 --> 00:27:45.880\nI'm gonna get back into fa1/0/23, the\nother end of this link it set to trunk so\n\n489\n00:27:45.880 --> 00:27:49.320\ntechnically, I've got an access port\nconnected to a trunk which can be bad.\n\n490\n00:27:49.320 --> 00:27:54.697\nSo to save me some time here,\nI'm gonna jump up to the other switch and\n\n491\n00:27:54.697 --> 00:27:59.826\nget into just fa1/0/23 and\nI'll make that an access port.\n\n492\n00:27:59.826 --> 00:28:01.660\nOops, switch remote access is what I want.\n\n493\n00:28:03.080 --> 00:28:08.720\nAnd I'll put it on vlan 10, so it\nmatches the other one, there, all right.\n\n494\n00:28:08.720 --> 00:28:12.203\nSo now what I'm gonna do, it's gonna\ngo through some loop checks there but\n\n495\n00:28:12.203 --> 00:28:14.205\nI don't have to worry about that too much.\n\n496\n00:28:14.205 --> 00:28:19.830\nSo now, what I wanna do is what\nif I don't have a Cisco phone?\n\n497\n00:28:19.830 --> 00:28:21.510\nWhat if I have Polycom?\n\n498\n00:28:21.510 --> 00:28:23.060\nOr somebody else, right.\n\n499\n00:28:23.060 --> 00:28:25.306\nBelieve it or not,\nother people make VoIP phones.\n\n500\n00:28:25.306 --> 00:28:27.320\n>> [LAUGH]\n>> Cisco hasn't cornered that market.\n\n501\n00:28:27.320 --> 00:28:30.410\nSo if I'm using somebody else's phones,\n\n502\n00:28:30.410 --> 00:28:32.970\nthen the voice VLAN feature\nprobably won't work.\n\n503\n00:28:32.970 --> 00:28:35.110\nIt does work on some, but not on most.\n\n504\n00:28:35.110 --> 00:28:38.215\nSo what a lot of those people do,\nlike Polycom,\n\n505\n00:28:38.215 --> 00:28:42.421\nPolycom will tell you hey our\nphone needs 802.1q, right?\n\n506\n00:28:42.421 --> 00:28:46.878\nYou need to be set up for\n802.1q, so for that,\n\n507\n00:28:46.878 --> 00:28:52.750\nyou can just jump in here and\nsay switchport mode trunk, right?\n\n508\n00:28:52.750 --> 00:28:55.435\nWell, shoot, I still have that auto\nencapsulation so I gotta turn and\n\n509\n00:28:55.435 --> 00:28:55.988\nchange that.\n\n510\n00:28:55.988 --> 00:29:01.683\nSo we would say switchport\ntrunk encapsulation\n\n511\n00:29:01.683 --> 00:29:09.680\ndot1q switchport mode trunk,\nand switchport nonegotiate.\n\n512\n00:29:09.680 --> 00:29:11.780\nI don't need to negotiate\nout my encapsulation,\n\n513\n00:29:11.780 --> 00:29:14.885\nI'm hard setting it as 802.1q, and\nI'm hard setting it as a trunk.\n\n514\n00:29:14.885 --> 00:29:20.288\nWe're gonna be plugging in\na VoIP phone into this,\n\n515\n00:29:20.288 --> 00:29:24.570\nand I need it to be running 802.1q.\n\n516\n00:29:24.570 --> 00:29:29.780\nThis is a Polycom phone or somebody else\nand it's expecting the 802.1q trunk.\n\n517\n00:29:29.780 --> 00:29:33.785\nNow when I do that,\nwhat does that port carry?\n\n518\n00:29:33.785 --> 00:29:37.256\nWell, if I do a show VLAN and\ntake a look at it that port,\n\n519\n00:29:37.256 --> 00:29:40.137\nport 23 disappeared it's not in any VLAN.\n\n520\n00:29:40.137 --> 00:29:44.087\nAnd if I do a show interface trunk and\ntake a look at it there,\n\n521\n00:29:44.087 --> 00:29:49.704\nI'll see that port 23 did become a trunk\nand it's carrying all the VLANs, right?\n\n522\n00:29:49.704 --> 00:29:53.540\nBut I just want to secure view\ninstead of 20 and that's it.\n\n523\n00:29:53.540 --> 00:29:54.970\nIt's carrying everything.\n\n524\n00:29:54.970 --> 00:29:58.040\nSo if you've got non Cisco\nphones that need the trunk,\n\n525\n00:29:58.040 --> 00:30:02.711\nin order to protect yourself, you need to\nprune off, you strip off any other VLAN,\n\n526\n00:30:02.711 --> 00:30:04.682\nit's not the voice and data VLAN.\n\n527\n00:30:04.682 --> 00:30:09.280\nAnd the way we do that is with\nanother switch board command.\n\n528\n00:30:09.280 --> 00:30:14.245\nSo I'm gonna get into interface fa1/0/23\nand the command that I'm gonna issue\n\n529\n00:30:14.245 --> 00:30:19.042\nis just switchport trunk\n\n530\n00:30:19.042 --> 00:30:24.110\nallowed vlan and then the list\nof VLANs that I want to allow.\n\n531\n00:30:24.110 --> 00:30:29.001\nWhen I do it the Cisco way,\nI say switchport, access VLAN 10,\n\n532\n00:30:29.001 --> 00:30:31.277\nswitchport voice VLAN 20.\n\n533\n00:30:31.277 --> 00:30:36.105\nNow it is a trunk and\nit's just looking for VLANs 10 and 20 but\n\n534\n00:30:36.105 --> 00:30:38.540\nhere I can just say 10, 20.\n\n535\n00:30:38.540 --> 00:30:44.600\nAnd now, it's an 802.1Q trunk, and\nit's only carrying VLAN's 10 and 20.\n\n536\n00:30:44.600 --> 00:30:51.640\nSo if I do a show VLAN and I take a look\nat it, port 23 is still not here.\n\n537\n00:30:51.640 --> 00:30:54.212\nBut if I do a show interface trunk,\n\n538\n00:30:54.212 --> 00:30:58.929\nI'll see it with the trunks but\nit only carrying 10 and 20.\n\n539\n00:30:58.929 --> 00:31:02.391\nIf a hacker were to take the phone out of\nthe wall and plug their laptop in and say,\n\n540\n00:31:02.391 --> 00:31:03.540\nhey, I want to be a trunk.\n\n541\n00:31:03.540 --> 00:31:08.790\nThey could do it and they'll only\nsee VLANs 10 and 20 and that's it.\n\n542\n00:31:08.790 --> 00:31:12.190\nThat's what we want, they could see VLAN\n10 and 20 anyway because the phone and\n\n543\n00:31:12.190 --> 00:31:13.171\nthe PC are right there.\n\n544\n00:31:13.171 --> 00:31:17.604\nThey've got access to the phone and PC but\nbecause I've pruned those VLANs no matter\n\n545\n00:31:17.604 --> 00:31:22.170\nwhat they do they'll never get more\nthan VLAN 10 and 20 my others are safe.\n\n546\n00:31:22.170 --> 00:31:25.550\nSo if you're dealing with third\nparty phones that need to trunk\n\n547\n00:31:25.550 --> 00:31:28.300\nyou can still use auto\nnegotiation if you want.\n\n548\n00:31:28.300 --> 00:31:34.080\nYou can still use DTP but make sure you\nfilter down the vlans they support.\n\n549\n00:31:34.080 --> 00:31:38.650\nSo let me show you that with VTP,\nso I'm gonna go and put this back.\n\n550\n00:31:38.650 --> 00:31:40.280\nI know I'm over on time here but\n\n551\n00:31:40.280 --> 00:31:43.682\nI just wanna show this real quick\nbefore we wrap up this episode.\n\n552\n00:31:43.682 --> 00:31:47.679\nIf I take a look at port 23 here,\nsee how I hard set it as a trunk or\n\n553\n00:31:47.679 --> 00:31:50.287\nactually it's an access point, right?\n\n554\n00:31:50.287 --> 00:31:54.987\nSo I'm gonna undo all of that,\nI'm gonna just take like this guy and\n\n555\n00:31:54.987 --> 00:31:58.950\nI'll do a no, well shoot,\nthought I'd copy and paste.\n\n556\n00:32:01.226 --> 00:32:02.929\nSo I'm gonna put this back to the default.\n\n557\n00:32:02.929 --> 00:32:05.560\nBy saying no,\nswitchport trunk encapsulation dot1q,\n\n558\n00:32:05.560 --> 00:32:08.041\nI'm basically putting\nencapsulation back to auto.\n\n559\n00:32:08.041 --> 00:32:10.981\nSo now it's gonna negotiate\nout whatever's gonna be there.\n\n560\n00:32:10.981 --> 00:32:18.430\nAnd I'll say switchport mode, and\nhere I'm gonna set it to dynamic.\n\n561\n00:32:18.430 --> 00:32:21.959\nAnd auto was the default, so\nI'm gonna put it back to auto.\n\n562\n00:32:21.959 --> 00:32:25.403\nAnd what's the other thing,\nwe assigned it to a VLAN.\n\n563\n00:32:25.403 --> 00:32:27.679\nSo switchport access VLAN 10.\n\n564\n00:32:27.679 --> 00:32:31.042\nSo I'll just get rid of that, so\nif I take a look at that interface,\n\n565\n00:32:31.042 --> 00:32:33.560\nit should be back to its defaults, there.\n\n566\n00:32:33.560 --> 00:32:39.763\nSo port 23 is now back to\nits defaults on CORE1 and\n\n567\n00:32:39.763 --> 00:32:44.090\non CORE2, I'm gonna try and\nleverage DTP on this one.\n\n568\n00:32:44.090 --> 00:32:48.195\nSo right now I'm not, cuz I've got\neverything kinda hard set on port 23,\n\n569\n00:32:48.195 --> 00:32:50.195\nI got all sorts of stuff to find here.\n\n570\n00:32:50.195 --> 00:32:54.620\nBut what I can do is I\ncan get into fa1/0/23.\n\n571\n00:32:54.620 --> 00:32:57.959\nI can say, no switchport access VLAN 10,\n\n572\n00:32:57.959 --> 00:33:02.122\nwhich is the same as saying\nswitchport access VLAN 1.\n\n573\n00:33:02.122 --> 00:33:05.300\nThat's the same end result.\n\n574\n00:33:05.300 --> 00:33:09.345\nI can say switchport\nmode dynamic desirable or\n\n575\n00:33:09.345 --> 00:33:14.646\nI could do auto,\nit's gonna be mad cuz I got no negotiate.\n\n576\n00:33:14.646 --> 00:33:19.240\nSo I'll do no switchport no negotiate,\nit's a double negative but\n\n577\n00:33:19.240 --> 00:33:22.230\nit works, and\nnow I can put it in desirable.\n\n578\n00:33:22.230 --> 00:33:27.216\nI'm gonna do a no switch\nport voice VLAN 20, and\n\n579\n00:33:27.216 --> 00:33:32.700\nI should be pretty close to\nthe defaults at this point.\n\n580\n00:33:32.700 --> 00:33:35.020\nLet's take a look at what I've got.\n\n581\n00:33:35.020 --> 00:33:39.090\nI've got my filter,\nthe encapsulation I can change that back.\n\n582\n00:33:39.090 --> 00:33:41.443\nWell if it's a phone,\nI know it's going to be a phone,\n\n583\n00:33:41.443 --> 00:33:42.784\nI may want to let it negotiate.\n\n584\n00:33:42.784 --> 00:33:46.520\nYou don't normally, but\nit's not gonna matter in this case.\n\n585\n00:33:46.520 --> 00:33:51.270\nSo I'll say, encapsulation and\nwe'll just set it back to negotiate,\n\n586\n00:33:51.270 --> 00:33:56.070\nwhich is the default, and\nwhat else do we have on this one?\n\n587\n00:33:56.070 --> 00:33:58.199\nThe spinach report would be fast.\n\n588\n00:33:58.199 --> 00:34:02.392\nThis configuration right here is what\nwe could use if we had phones and\n\n589\n00:34:02.392 --> 00:34:04.354\nwe wanted to auto-negotiate.\n\n590\n00:34:04.354 --> 00:34:07.675\nEven that desirable, I don't necessarily\nhave to have that one in place.\n\n591\n00:34:07.675 --> 00:34:10.770\nI could leave it with auto,\nwhich is its default.\n\n592\n00:34:10.770 --> 00:34:13.050\nAnd so now what's gonna happen is,\n\n593\n00:34:13.050 --> 00:34:17.160\nif I'm set to auto,\nI'll let somebody negotiate a trunk.\n\n594\n00:34:17.160 --> 00:34:21.891\nBut if they do,\nthat filter is still there.\n\n595\n00:34:21.891 --> 00:34:25.493\nSo let's pretend here for a moment,\nI'm gonna pull up, I got so\n\n596\n00:34:25.493 --> 00:34:27.842\nmany messages coming across the screen.\n\n597\n00:34:27.842 --> 00:34:30.300\nLet me just pull up the straight\nup configuration of that port.\n\n598\n00:34:31.330 --> 00:34:33.249\nI'm pretty much at my defaults here.\n\n599\n00:34:33.249 --> 00:34:35.986\nI've got switchboard\ntrunk allowed VLAN 10,20.\n\n600\n00:34:37.240 --> 00:34:38.557\nI may be a trunk, I may not be a trunk.\n\n601\n00:34:38.557 --> 00:34:41.940\nIf I'm an access port, that trunk\ncommand does absolutely nothing.\n\n602\n00:34:41.940 --> 00:34:47.079\nAnd right now, I should be an access port.\n\n603\n00:34:47.079 --> 00:34:50.950\nIf I do a show interface trunk,\nport 23 should not be trunking.\n\n604\n00:34:50.950 --> 00:34:53.039\nIt's not, so it is just an access port.\n\n605\n00:34:53.039 --> 00:34:56.739\nAnd if I do a show VLAN,\nport 23 will be in one of the VLANs,\n\n606\n00:34:56.739 --> 00:34:58.368\nnore than likely VLAN 1.\n\n607\n00:34:58.368 --> 00:35:00.070\nYeah, there it is, in VLAN 1.\n\n608\n00:35:00.070 --> 00:35:03.209\nSo it's acting like an access\nport just like I want it to, but\n\n609\n00:35:03.209 --> 00:35:07.080\nif somebody comes along and requests\nto be a trunk what's gonna happen?\n\n610\n00:35:07.080 --> 00:35:08.390\nWell let me take the other end and\n\n611\n00:35:08.390 --> 00:35:10.690\nI'm gonna get the other end\nto request to become a trunk.\n\n612\n00:35:10.690 --> 00:35:14.610\nSo over here I'm gonna get\ninto the corresponding port.\n\n613\n00:35:14.610 --> 00:35:21.620\nAnd I'll say, switch port trunk mode to,\nI'm gonna come in here and\n\n614\n00:35:21.620 --> 00:35:25.930\ntell it that I want to do a switch port\nmode, there we go, dynamic desirable.\n\n615\n00:35:25.930 --> 00:35:28.466\nI'm gonna tell it to try and\ntry and become a trunk.\n\n616\n00:35:28.466 --> 00:35:32.590\nOn my side on CORE 2,\nit's gonna negotiate, I'm running DTP.\n\n617\n00:35:32.590 --> 00:35:34.690\nSo it is gonna become a trunk, but\n\n618\n00:35:34.690 --> 00:35:37.919\nthat filter that I put in\nis still going to be there.\n\n619\n00:35:37.919 --> 00:35:40.700\nSo when I do a show interface trunk,\n\n620\n00:35:40.700 --> 00:35:46.190\nI should see that I did become a trunk but\nI am filtered to 10 and 20.\n\n621\n00:35:46.190 --> 00:35:49.131\nSo if you have third party\nvoice over IP phones,\n\n622\n00:35:49.131 --> 00:35:51.420\nyou can still use DTP which is great.\n\n623\n00:35:51.420 --> 00:35:52.770\nIt'll negotiate out, but\n\n624\n00:35:52.770 --> 00:35:56.360\nyou can still protect yourself to limit\nthe VLANs as if they were Cisco phones.\n\n625\n00:35:56.360 --> 00:35:57.545\nYou're not forced to use Cisco.\n\n626\n00:35:57.545 --> 00:36:03.488\nThis is a great way to do it and\nthat configuration looked like this,\n\n627\n00:36:03.488 --> 00:36:06.945\nwhere I left it with DTP doing its deal.\n\n628\n00:36:06.945 --> 00:36:11.646\nAnd I just put in that filter to achieve\nthe same goal as I would've gotten\n\n629\n00:36:11.646 --> 00:36:16.514\nwith Cisco phones, so just two different\nways of achieving the same goal.\n\n630\n00:36:16.514 --> 00:36:18.562\nThat's a pretty good rundown on DTP,\n\n631\n00:36:18.562 --> 00:36:21.000\nI know I went way over\non time in this episode.\n\n632\n00:36:21.000 --> 00:36:22.952\nWe're gonna be moving on from VLAN, so\n\n633\n00:36:22.952 --> 00:36:26.370\nthat's about all we need to know\nabout VLAN for the CCNA exam.\n\n634\n00:36:26.370 --> 00:36:28.930\nThere is more when it comes to VLANs,\nand so\n\n635\n00:36:28.930 --> 00:36:32.340\nwe'll see them again in some later\nepisodes when we do inter VLAN routing,\n\n636\n00:36:32.340 --> 00:36:35.210\nbut that kind of falls into the routing\nside so we'll save that for later.\n\n637\n00:36:35.210 --> 00:36:36.960\nBut on the straight up VLAN side,\n\n638\n00:36:36.960 --> 00:36:39.420\nthat's pretty much if our\nlayer two technology is there.\n\n639\n00:36:39.420 --> 00:36:41.150\nWe're gonna move into some other\nthings like spanning tree in\n\n640\n00:36:41.150 --> 00:36:45.192\nthe next few episodes, but\nwe'll come back to VLANs on these.\n\n641\n00:36:45.192 --> 00:36:46.895\n>> All right Don, well thank you again for\n\n642\n00:36:46.895 --> 00:36:50.418\nhelping us understand a little bit better\nabout the dynamic trunking protocol.\n\n643\n00:36:50.418 --> 00:36:53.788\nEven though this is something that Cisco\nreally says is a great technology,\n\n644\n00:36:53.788 --> 00:36:57.158\na lot of times in production you find out\nthat hey by it actually doing the auto\n\n645\n00:36:57.158 --> 00:36:59.820\nnegotiation it may actually\nend up acting funny.\n\n646\n00:36:59.820 --> 00:37:02.900\nSo make sure you do know how to set those,\ntake a look at those commands,\n\n647\n00:37:02.900 --> 00:37:05.620\nknow the difference between auto and\ndesirable of course.\n\n648\n00:37:05.620 --> 00:37:11.961\nThose are also key, and of course being\nable to set up the 802.1q VLAN tagging.\n\n649\n00:37:11.961 --> 00:37:13.490\n>> [LAUGH]\n>> Couldn't remember what it's called,\n\n650\n00:37:13.490 --> 00:37:15.276\nI always call it encapsulation,\nand no it's not encapsulation.\n\n651\n00:37:15.276 --> 00:37:15.930\n>> It's tagging.\n\n652\n00:37:15.930 --> 00:37:19.460\n>> It's tagging, so\n802.1q tagging as well.\n\n653\n00:37:19.460 --> 00:37:21.973\nAll right, that's a great place for\nus to end this episode then.\n\n654\n00:37:21.973 --> 00:37:25.319\nSigning off for ITPro.TV,\nI've been your host, Ronnie Wong.\n\n655\n00:37:25.319 --> 00:37:26.401\n>> And I'm Don Pezet.\n\n656\n00:37:26.401 --> 00:37:32.375\n>> Stay tuned right here for\nmore Cisco CCNA Routing and Switching.\n\n657\n00:37:32.375 --> 00:37:40.740\n[SOUND]\n\n",
          "vimeoId": "178067882"
        },
        {
          "description": "In this episode, Ronnie and Don help us to understand the basics of STP—Spanning Tree Protocol.  They explain that when configuring links between switches, we may inadvertently cause switching loops.  They also demonstrate that STP is running by default on cisco switches.  They discuss the important concept of the root bridge election and decision making process.",
          "length": "2098",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/cisco-ccna200105/cisco-ccna-200105-1-3-1-spanning_tree_protocol-080516-1.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/cisco-ccna200105/cisco-ccna-200105-1-3-1-spanning_tree_protocol-080516-1-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/cisco-ccna200105/cisco-ccna-200105-1-3-1-spanning_tree_protocol-080516-1-sm.jpg",
          "title": "Spanning Tree Protocol",
          "transcript": "WEBVTT\n\n1\n00:00:00.000 --> 00:00:10.000\n[MUSIC]\n\n2\n00:00:12.148 --> 00:00:15.130\nWelcome back to another great\nepisode right here on ITProTV.\n\n3\n00:00:15.130 --> 00:00:19.210\nI'm your host Ronnie Wong and you're\nwatching the Cisco CCNA Routing, and\n\n4\n00:00:19.210 --> 00:00:20.175\nSwitching show.\n\n5\n00:00:20.175 --> 00:00:22.814\nWe're about to get into\nsomething a little more complex.\n\n6\n00:00:22.814 --> 00:00:23.788\nSo, you've been waiting for that?\n\n7\n00:00:23.788 --> 00:00:26.041\nThat's the day that we\nbegin is right here and\n\n8\n00:00:26.041 --> 00:00:28.607\nwho better to help is with that than Mr.\nDon Pezet.\n\n9\n00:00:28.607 --> 00:00:31.870\nDon, we're working with multiple switches.\n\n10\n00:00:31.870 --> 00:00:34.533\nNow that we've got that setup,\na Dynamic Trunking Protocol,\n\n11\n00:00:34.533 --> 00:00:35.847\neverything is actually good.\n\n12\n00:00:35.847 --> 00:00:37.393\nWhat else do we really\nhave to worry about?\n\n13\n00:00:37.393 --> 00:00:40.854\n>> Well, we talked about Dynamic Trunking\nProtocol and how it's kind of automatic.\n\n14\n00:00:40.854 --> 00:00:43.284\nSometimes when you plug switches in,\nthey'll trunk for you.\n\n15\n00:00:43.284 --> 00:00:45.936\nIt's not the only automatic\nprotocol that's out there.\n\n16\n00:00:45.936 --> 00:00:47.068\nThere's several other ones.\n\n17\n00:00:47.068 --> 00:00:51.050\nThe one we're gonna talk about in this\nepisode is really important one called\n\n18\n00:00:51.050 --> 00:00:52.404\nSpanning Tree Protocol.\n\n19\n00:00:52.404 --> 00:00:57.094\nBack in the CCENT series, I mentioned\nhow Cisco switches do loop detection.\n\n20\n00:00:57.094 --> 00:00:59.675\nAnd now sometimes,\nit can be a little problematic.\n\n21\n00:00:59.675 --> 00:01:01.482\nI believe I had to turn it\noff in one of the episodes,\n\n22\n00:01:01.482 --> 00:01:02.962\nwhich is where I would have mentioned it.\n\n23\n00:01:02.962 --> 00:01:06.238\nBut it's not normally problematic,\nit's normally a good thing.\n\n24\n00:01:06.238 --> 00:01:11.208\nYour Cisco switches will actively\nwatch for loops on the network.\n\n25\n00:01:11.208 --> 00:01:13.038\nNow, what do I mean by a loop?\n\n26\n00:01:13.038 --> 00:01:16.839\nWell, if I have more than one switch,\ntechnically,\n\n27\n00:01:16.839 --> 00:01:19.378\nyou could have a loop on one switch.\n\n28\n00:01:19.378 --> 00:01:22.568\nA loop can take many different forms, but\n\n29\n00:01:22.568 --> 00:01:27.399\na loop is anytime traffic can go\nout one interface of a switch and\n\n30\n00:01:27.399 --> 00:01:32.069\nsomehow come back in another\ninterface on that same switch.\n\n31\n00:01:32.069 --> 00:01:35.458\nIf that ever happens, you could end\nup with a loop on your network and\n\n32\n00:01:35.458 --> 00:01:38.684\nloops can be really, really bad,\nespecially layer two loops.\n\n33\n00:01:38.684 --> 00:01:40.362\nLayer three loops aren't so bad.\n\n34\n00:01:40.362 --> 00:01:43.787\nIn layer three routers,\nif your traffic gets routed out and\n\n35\n00:01:43.787 --> 00:01:46.937\ngoes out one interface,\nthe router rattles around and\n\n36\n00:01:46.937 --> 00:01:49.968\ncomes back in another\ninterface in the same router.\n\n37\n00:01:49.968 --> 00:01:53.411\nWell, every time your packet\npasses through a router,\n\n38\n00:01:53.411 --> 00:01:55.471\nit's time to live is decreased.\n\n39\n00:01:55.471 --> 00:01:58.397\nEvery packet sent on the network\nhas a TTL, a time to live.\n\n40\n00:01:58.397 --> 00:02:01.390\n64 is a really common one,\nbut it can be much higher.\n\n41\n00:02:01.390 --> 00:02:04.210\nLet's say, you're TTL 64 and\nyou hit a loop on the network.\n\n42\n00:02:04.210 --> 00:02:05.816\nYour traffic is gonna rattle around.\n\n43\n00:02:05.816 --> 00:02:10.214\nAnd if it passes through 64 routers and\ngranted it might be the same 8 routers,\n\n44\n00:02:10.214 --> 00:02:11.261\neight times each.\n\n45\n00:02:11.261 --> 00:02:14.950\nAnd if it does that over and over again,\nthe TTL eventually reaches zero and\n\n46\n00:02:14.950 --> 00:02:16.120\nit goes away.\n\n47\n00:02:16.120 --> 00:02:17.960\nIt gets deleted, that's the end of it.\n\n48\n00:02:17.960 --> 00:02:20.095\nWe don't have that at layer two.\n\n49\n00:02:20.095 --> 00:02:22.117\nThere is no layer two TTL.\n\n50\n00:02:22.117 --> 00:02:25.844\nSo if my traffic goes out and\npasses out one switch and\n\n51\n00:02:25.844 --> 00:02:30.347\ngoes to another and comes back again,\nit will do that forever.\n\n52\n00:02:30.347 --> 00:02:31.615\nForever, it will never stop.\n\n53\n00:02:31.615 --> 00:02:33.987\nIt will just keep going around,\nand around, and around.\n\n54\n00:02:33.987 --> 00:02:35.946\nAnd if it's just one frame,\nwhat do we care?\n\n55\n00:02:35.946 --> 00:02:37.470\nIt's one frame.\n\n56\n00:02:37.470 --> 00:02:41.237\nBut if there's a loop, this frame's gonna\nrattle around and then the next one and\n\n57\n00:02:41.237 --> 00:02:42.123\nthen the next one.\n\n58\n00:02:42.123 --> 00:02:45.162\nIt's gonna progressively get worse and\nworse and worse and\n\n59\n00:02:45.162 --> 00:02:48.220\nit's normally broadcasts,\nthat cause the problem.\n\n60\n00:02:48.220 --> 00:02:50.350\nSo, you end up with what's\ncalled a broadcast storm.\n\n61\n00:02:50.350 --> 00:02:54.420\nYou have so many broadcasts going in\na loop over and over, and over, and\n\n62\n00:02:54.420 --> 00:02:58.150\nover, and over again that\nthe network eventually seizes up.\n\n63\n00:02:58.150 --> 00:03:00.490\nThe switch will no longer\nbuild crap decisions,\n\n64\n00:03:00.490 --> 00:03:04.770\nthe ports will be out of bandwidths and\nthe entire network freezes and\n\n65\n00:03:04.770 --> 00:03:08.150\nthe solution is to power of your switches.\n\n66\n00:03:08.150 --> 00:03:12.166\nAnd this one way to break the loop,\nyou've got to break the loop and\n\n67\n00:03:12.166 --> 00:03:14.262\nthen you're backed up and going.\n\n68\n00:03:14.262 --> 00:03:17.118\nBut if the loop is still there,\nso if I power off the switch and\n\n69\n00:03:17.118 --> 00:03:19.195\nI power it back on,\nthe loop is still there.\n\n70\n00:03:19.195 --> 00:03:22.325\nIt's just gonna get worse and worse,\nand worse until it freezes again.\n\n71\n00:03:22.325 --> 00:03:25.757\nIf I find the loop and I fix it,\nthat's a different story.\n\n72\n00:03:25.757 --> 00:03:29.137\nWell, if the loop is just between\none switch or between one and\n\n73\n00:03:29.137 --> 00:03:32.660\ntwo switches,\nit's usually pretty easy to find.\n\n74\n00:03:32.660 --> 00:03:37.030\nBut if I have a hundred switches out\nthere and I've run redundant links and\n\n75\n00:03:37.030 --> 00:03:39.791\nall that,\nit can be really hard to find a loop.\n\n76\n00:03:39.791 --> 00:03:44.567\nSo what Cisco networking companies,\n\n77\n00:03:44.567 --> 00:03:48.303\nthey came up with a solution.\n\n78\n00:03:48.303 --> 00:03:53.345\nA protocol called the Spanning Tree\nProtocol and to wait for switches to talk\n\n79\n00:03:53.345 --> 00:03:59.080\nto each other and when they talk, they\ncan figure out if they're seeing a loop.\n\n80\n00:03:59.080 --> 00:04:02.060\nIf they can see the same switch\nvia more than one interface,\n\n81\n00:04:02.060 --> 00:04:03.914\nthey know there's a loop out there.\n\n82\n00:04:03.914 --> 00:04:07.517\nAnd not only can they see it,\nthey can do something about it.\n\n83\n00:04:07.517 --> 00:04:11.472\nSpanning Tree Protocol will\nidentify a loop on the network and\n\n84\n00:04:11.472 --> 00:04:12.923\nit'll stop the loop.\n\n85\n00:04:12.923 --> 00:04:14.244\nIt'll stop it before it happens.\n\n86\n00:04:14.244 --> 00:04:16.335\nIt'll break the loop for you.\n\n87\n00:04:16.335 --> 00:04:17.715\nYou don't have to follow cables.\n\n88\n00:04:17.715 --> 00:04:20.290\nYou don't have to figure out\nwhere you got this loop in place.\n\n89\n00:04:20.290 --> 00:04:24.454\nSpanning Tree does it for you and the\nabsolute best part about Spanning Tree is\n\n90\n00:04:24.454 --> 00:04:26.971\nyou don't have to do\nanything to make it work.\n\n91\n00:04:26.971 --> 00:04:32.737\nIt's configured and enabled on every Cisco\nswitch by default right out of the box.\n\n92\n00:04:32.737 --> 00:04:34.882\nWhen you take it out of the box and\npower it on,\n\n93\n00:04:34.882 --> 00:04:37.150\nyou are already doing loop detection.\n\n94\n00:04:37.150 --> 00:04:42.378\nIt's already in place,\nyou don't have to touch a single thing.\n\n95\n00:04:42.378 --> 00:04:45.285\nBut like many things,\nwe can certainly tweak it and\n\n96\n00:04:45.285 --> 00:04:47.318\nwe can modify it in the CCNP series.\n\n97\n00:04:47.318 --> 00:04:50.099\nWhen we get into switching, we really\ngo into tweaking Spanning Tree and\n\n98\n00:04:50.099 --> 00:04:51.159\nthings that we can change.\n\n99\n00:04:51.159 --> 00:04:55.181\nOn the CCNA level, they wanna make\nsure that we understand how it works.\n\n100\n00:04:55.181 --> 00:04:58.557\nAnd so we're gonna see exactly how\nSpanning Tree works and how it makes it's\n\n101\n00:04:58.557 --> 00:05:01.668\ndecisions and we're gonna see a few\nlittle ways that we can modify it,\n\n102\n00:05:01.668 --> 00:05:04.168\ncuz there are some certain\nthings we'll wanna change.\n\n103\n00:05:04.168 --> 00:05:06.085\nLet's just start with a basic operation.\n\n104\n00:05:06.085 --> 00:05:07.014\nI mentioned a loop.\n\n105\n00:05:07.014 --> 00:05:09.545\nI did a couple diagrams to\nshow loops on a network.\n\n106\n00:05:09.545 --> 00:05:12.108\nLoops don't normally happen\nwhen you have one switch.\n\n107\n00:05:12.108 --> 00:05:14.607\nLoops normally happen when you\nhave more than one switch.\n\n108\n00:05:14.607 --> 00:05:17.795\nYou can have a loop with one switch,\nif you're really really dumb.\n\n109\n00:05:17.795 --> 00:05:21.100\n>> [LAUGH]\n>> And so, I shouldn't say it that way.\n\n110\n00:05:21.100 --> 00:05:24.533\nI mean,\nyou could accidentally run some cables.\n\n111\n00:05:24.533 --> 00:05:28.083\nIf you've ever been to a server\ncloset where there was a total and\n\n112\n00:05:28.083 --> 00:05:29.481\ncomplete mess of wires.\n\n113\n00:05:29.481 --> 00:05:31.799\nWires just dumped all over the place,\n\n114\n00:05:31.799 --> 00:05:36.218\nyou might not realize that there's one\nwire that comes out of a switch and\n\n115\n00:05:36.218 --> 00:05:41.095\nthen leaves the switch and runs right back\ninto another port on the same switch.\n\n116\n00:05:41.095 --> 00:05:43.381\nThat will create a loop.\n\n117\n00:05:43.381 --> 00:05:47.684\nPeople can even do this maliciously, like\nI might be in an office down in accounting\n\n118\n00:05:47.684 --> 00:05:50.250\nand I see two network jacks in the wall.\n\n119\n00:05:50.250 --> 00:05:52.038\nSo I go and buy a crossover cable and\n\n120\n00:05:52.038 --> 00:05:55.757\nI plug the crossover cable into those\ntwo ports, I just created a loop.\n\n121\n00:05:55.757 --> 00:05:57.406\nIt doesn't even have to be\nat the physical switch.\n\n122\n00:05:57.406 --> 00:06:00.017\nSomebody could be at a network jack\nsomewhere else in the building.\n\n123\n00:06:00.017 --> 00:06:01.076\nI mean, they could really go crazy.\n\n124\n00:06:01.076 --> 00:06:04.664\nGet a long cable, run from one office\nto another and create the loop there.\n\n125\n00:06:04.664 --> 00:06:08.077\nWhat's gonna happen is let's say,\nthis laptop sends out a broadcast.\n\n126\n00:06:08.077 --> 00:06:10.590\nWell, normally the broadcast\nwould enter the switch and\n\n127\n00:06:10.590 --> 00:06:13.694\nthe switch would then flood\nthe broadcast across all the interfaces.\n\n128\n00:06:13.694 --> 00:06:16.127\nThat's what broadcasts do.\n\n129\n00:06:16.127 --> 00:06:19.764\nIt would hit this uplink and this uplink\nwould send it up to the next switch,\n\n130\n00:06:19.764 --> 00:06:21.920\nthe next switch would\ndo a broadcast flood.\n\n131\n00:06:21.920 --> 00:06:25.506\nIt would go across all of this other\ninterfaces, including uplink and\n\n132\n00:06:25.506 --> 00:06:29.699\nit would come down here and then it would\nflood across all these interfaces until it\n\n133\n00:06:29.699 --> 00:06:31.311\ngot down to this other laptop.\n\n134\n00:06:31.311 --> 00:06:33.642\nSo, that's how a normal\nbroadcast would work.\n\n135\n00:06:33.642 --> 00:06:36.481\nBut with this little cable right here,\n\n136\n00:06:36.481 --> 00:06:41.311\nthe broadcast will leave the laptop\nflood across the interfaces.\n\n137\n00:06:41.311 --> 00:06:46.117\nWhen it hits this interface,\nit's gonna flood and go out and\n\n138\n00:06:46.117 --> 00:06:48.106\ncome in this interface.\n\n139\n00:06:48.106 --> 00:06:50.260\nWhat's gonna happen when\nit hits this interface?\n\n140\n00:06:50.260 --> 00:06:52.034\nNow, it's gonna flood it again.\n\n141\n00:06:52.034 --> 00:06:55.539\nIt thinks it's a new broadcast and it's\ngonna flood it again across these ports.\n\n142\n00:06:55.539 --> 00:06:58.577\nWell, it's actually happening\nin both directions.\n\n143\n00:06:58.577 --> 00:07:03.724\nLet me draw a few more arrows here we'll\nsee how messy I can make my diagram and\n\n144\n00:07:03.724 --> 00:07:07.600\nkinda look at how that flood\nis gonna lay itself out here.\n\n145\n00:07:07.600 --> 00:07:10.732\nSo when it comes across that line,\n\n146\n00:07:10.732 --> 00:07:15.592\nwell, we come out of the laptop and\ninto the switch and\n\n147\n00:07:15.592 --> 00:07:20.253\nlet me just through an arrow\nhead on the end of that.\n\n148\n00:07:20.253 --> 00:07:22.168\nYellow is a really bad color for\nthis, isn't it?\n\n149\n00:07:22.168 --> 00:07:23.768\nSo, [LAUGH] we'll go fuchsia.\n\n150\n00:07:23.768 --> 00:07:25.260\nEverybody loves fuchsia.\n\n151\n00:07:25.260 --> 00:07:28.210\nSo basically, that flood or\n\n152\n00:07:28.210 --> 00:07:33.150\nthat broadcast leaves my laptop and\nit comes out and it heads into the switch.\n\n153\n00:07:33.150 --> 00:07:37.295\nAnd from there,\nthe switch is gonna take it and\n\n154\n00:07:37.295 --> 00:07:41.136\nsend it along to each of these interfaces.\n\n155\n00:07:41.136 --> 00:07:45.747\nAnd as it comes across,\nit's actually coming across twice.\n\n156\n00:07:45.747 --> 00:07:50.886\nOnce to the first side of that loop and\nsecond to the other side of that loop.\n\n157\n00:07:50.886 --> 00:07:52.269\nSo, it's like that.\n\n158\n00:07:52.269 --> 00:07:59.154\nAnd so when it crosses the wire It\nbecomes not one flood, but two floods.\n\n159\n00:07:59.154 --> 00:08:03.036\nAnd then those hit the wire again, and\nnow it's not two floods, it's four floods.\n\n160\n00:08:03.036 --> 00:08:06.309\nAnd then it does it again and\nbecomes 8, and then 16, and then 32,\n\n161\n00:08:06.309 --> 00:08:07.794\nit's growing exponentially.\n\n162\n00:08:08.865 --> 00:08:14.045\nAnd it becomes worse and worse and worse\nand that's right here in this one switch.\n\n163\n00:08:14.045 --> 00:08:16.955\nMeanwhile, all these floods are going\nright out this other uplink and so\n\n164\n00:08:16.955 --> 00:08:18.655\nthe other switches are suffering too.\n\n165\n00:08:18.655 --> 00:08:21.315\nAnd it gets worse and worse and\nworse until the network\n\n166\n00:08:21.315 --> 00:08:26.380\nfreezes until you run out of bandwidth,\nbasically and we need to fix it.\n\n167\n00:08:26.380 --> 00:08:30.420\nIf I were to reboot this switch down here\nthat would solve the problem temporarily\n\n168\n00:08:30.420 --> 00:08:31.940\nbut it's just gonna come back again.\n\n169\n00:08:31.940 --> 00:08:33.640\nI've got to fix that loop.\n\n170\n00:08:33.640 --> 00:08:37.422\nNow this is an uncommon loop here\ncuz this one is just bad cabling,\n\n171\n00:08:37.422 --> 00:08:39.295\nsomebody is not paying attention.\n\n172\n00:08:39.295 --> 00:08:43.205\nIt could be that somebody has an idea,\nhey, I've got these switches and\n\n173\n00:08:43.205 --> 00:08:47.915\nthey're really important so\nI wanna create a redundant link.\n\n174\n00:08:47.915 --> 00:08:50.535\nIf one network cable fails,\nI want the other cable to step in and\n\n175\n00:08:50.535 --> 00:08:51.855\ntake over that role, all right.\n\n176\n00:08:51.855 --> 00:08:56.465\nSo they run two cables, seems like\na good idea, looks good on paper, but\n\n177\n00:08:56.465 --> 00:08:57.465\nit's a loop, right?\n\n178\n00:08:57.465 --> 00:08:59.265\nI could have a flood go out, or\n\n179\n00:08:59.265 --> 00:09:02.650\na broadcast go out one interface,\ncrosses to the other switch,\n\n180\n00:09:02.650 --> 00:09:07.320\nfloods across to the other interface, and\ncomes back again, I've got a loop, right?\n\n181\n00:09:07.320 --> 00:09:10.960\nTwo uplinks between a switch\nwill create a loop,\n\n182\n00:09:10.960 --> 00:09:12.940\nunless these are two different VLANS,\nright?\n\n183\n00:09:12.940 --> 00:09:15.660\nIf one's VLAN 5 and the other's VLAN\n10 that's a different story but\n\n184\n00:09:15.660 --> 00:09:19.790\nassuming that we're all on\none VLAN this creates a loop.\n\n185\n00:09:19.790 --> 00:09:22.720\nNow, there are ways to make this work.\n\n186\n00:09:22.720 --> 00:09:25.135\nIn another episode,\nwe'll talk about EtherChannel.\n\n187\n00:09:25.135 --> 00:09:29.680\nEtherChannel lets us bond cables\ntogether to create one single link.\n\n188\n00:09:29.680 --> 00:09:32.570\nYou get double the band width or\nquadruple the band width or whatever,\n\n189\n00:09:32.570 --> 00:09:34.320\nhowever many cables you provide.\n\n190\n00:09:34.320 --> 00:09:38.160\nAnd you get redundancy without a loop,\nso EtherChannel can make that work.\n\n191\n00:09:38.160 --> 00:09:42.710\nBut assuming we're not doing EtherChannel,\nthis is a loop, and that's a problem,\n\n192\n00:09:42.710 --> 00:09:43.790\nall right.\n\n193\n00:09:43.790 --> 00:09:45.650\nBut even this is not all that common,\n\n194\n00:09:45.650 --> 00:09:48.600\nbecause you'd know you\nwere running two cables.\n\n195\n00:09:48.600 --> 00:09:52.383\nWhere it really becomes a problem is\nwhen you have a lot of switches, right?\n\n196\n00:09:52.383 --> 00:09:57.835\nBecause then, potentially, you could be\nuplinking one switch to another switch,\n\n197\n00:09:57.835 --> 00:10:00.384\nthat switch uplinks to a third switch.\n\n198\n00:10:00.384 --> 00:10:04.860\nAnd the third switch uplinks back to\nthe original, we create a big loop.\n\n199\n00:10:04.860 --> 00:10:09.610\nA loop that might involve 8 or 10 or\n15 switches much less likely for\n\n200\n00:10:09.610 --> 00:10:10.780\nus to see that.\n\n201\n00:10:10.780 --> 00:10:15.390\nAnd because it's so big, I don't\nnecessarily where that loop is going to\n\n202\n00:10:15.390 --> 00:10:17.800\noccur, cuz these switches might\nbe in different buildings.\n\n203\n00:10:17.800 --> 00:10:19.580\nThey be in different closets, or\n\n204\n00:10:19.580 --> 00:10:22.280\nfloors in the same building,\nI might not be able to see that.\n\n205\n00:10:22.280 --> 00:10:28.380\nBut traffic exiting this interface\nway over here goes up over,\n\n206\n00:10:28.380 --> 00:10:30.430\ndown, back across again.\n\n207\n00:10:30.430 --> 00:10:32.810\nI'm receiving my same traffic back again.\n\n208\n00:10:32.810 --> 00:10:33.680\nNow, I've got a loop.\n\n209\n00:10:35.050 --> 00:10:40.950\nNow, the easiest way to fix a loop is to\njust walk over to one of the switches,\n\n210\n00:10:40.950 --> 00:10:42.660\nunplug the cable.\n\n211\n00:10:42.660 --> 00:10:44.340\nLoop is solved, right?\n\n212\n00:10:44.340 --> 00:10:48.982\nThe loop is gone, it's that easy but\nwe do lose the redundancy aspect of it.\n\n213\n00:10:48.982 --> 00:10:53.370\nIt's kinda nice having all of my switches\nuplinked together like this, right?\n\n214\n00:10:53.370 --> 00:10:58.050\nBecause when they are, if a link were to\nfail like if this link here were fail,\n\n215\n00:10:58.050 --> 00:11:02.620\nall my switches are still interconnected\nor if this link were to fail.\n\n216\n00:11:02.620 --> 00:11:04.470\nThey're all still inter-connected.\n\n217\n00:11:04.470 --> 00:11:10.360\nSo it is kinda nice to have these extra\ncables run, it's just they create a loop.\n\n218\n00:11:10.360 --> 00:11:13.030\nAnd that's where\nSpanning Tree Protocol comes in.\n\n219\n00:11:13.030 --> 00:11:17.990\nSpanning Tree Protocol will identify\nthe loop and once it identifies it,\n\n220\n00:11:17.990 --> 00:11:21.500\nit will pick one interface and\nshut it down.\n\n221\n00:11:22.560 --> 00:11:27.100\nThen by shutting down that interface,\nit stops the loop, but\n\n222\n00:11:27.100 --> 00:11:29.370\nit leaves the cables in place.\n\n223\n00:11:29.370 --> 00:11:34.880\nSo if spanning tree comes in and\ndecides that it is going to\n\n224\n00:11:36.240 --> 00:11:42.140\ntake one particular interface,\nlike this guy right here.\n\n225\n00:11:42.140 --> 00:11:45.030\nSo it decides it's gonna\nshut off this interface.\n\n226\n00:11:45.030 --> 00:11:47.470\nWell, the cable is still there but now,\n\n227\n00:11:47.470 --> 00:11:50.490\nwe are not sending traffic\nover this interface anymore.\n\n228\n00:11:50.490 --> 00:11:54.530\nAnd since we are not sending traffic over\nthe interface, it's not a loop right?\n\n229\n00:11:54.530 --> 00:11:59.100\nMy broadcast,\nwell let's say this laptop broadcast.\n\n230\n00:11:59.100 --> 00:12:03.130\nIt goes up, floods to this interface,\ngoes up to this switch,\n\n231\n00:12:03.130 --> 00:12:08.200\nfloods across all the interfaces to this\none floods out that one to this switch.\n\n232\n00:12:08.200 --> 00:12:12.277\nThis switch floods it across every\ninterface, including this one,\n\n233\n00:12:12.277 --> 00:12:17.072\nso the broadcast travels across the wire,\nbut then this interface is shut down.\n\n234\n00:12:17.072 --> 00:12:20.390\nAnd so, it stops,\nnow I say, it's shut down.\n\n235\n00:12:20.390 --> 00:12:21.550\nIt still has a link light.\n\n236\n00:12:21.550 --> 00:12:27.070\nIt's still considered up, but the switch\nstarts throwing this traffic away, right?\n\n237\n00:12:27.070 --> 00:12:32.110\nYou might've noticed in some of the\ncommands that I run over the whole series\n\n238\n00:12:32.110 --> 00:12:37.270\nthat every now and then you'll see\nan interface called Null or Null0, okay?\n\n239\n00:12:37.270 --> 00:12:39.820\nNull is what Cisco calls the Bitbucket.\n\n240\n00:12:39.820 --> 00:12:43.390\nAnything sent to the Null interface gets\nthrown away, doesn't get handled, and so\n\n241\n00:12:43.390 --> 00:12:46.320\nwhen Spanning Tree Protocol\nblocks an interface like this\n\n242\n00:12:46.320 --> 00:12:46.950\nthat's what it's doing.\n\n243\n00:12:46.950 --> 00:12:48.980\nIt's taking that trapping and\njust chucking into the Bitbucket,\n\n244\n00:12:48.980 --> 00:12:51.540\ninto the null interface and\nit gets thrown away.\n\n245\n00:12:51.540 --> 00:12:52.710\nSo the loop is gone.\n\n246\n00:12:53.710 --> 00:12:57.024\nBut the coolest part about this,\nis let's say, that that's fine,\n\n247\n00:12:57.024 --> 00:13:00.570\nthat working,it's running Spanning Tree\njust saved me from a loop.\n\n248\n00:13:00.570 --> 00:13:02.530\nI might not even know the loop is there,\nright?\n\n249\n00:13:02.530 --> 00:13:04.364\nI might not even have\nrealized that happened.\n\n250\n00:13:04.364 --> 00:13:08.049\nBut, one day,\nlets see this cable over here if it fails.\n\n251\n00:13:08.049 --> 00:13:11.140\nIt fails, right?\n\n252\n00:13:11.140 --> 00:13:16.630\nSpanning Tree is smart enough to notice\nthat the loop is gone and to recognize\n\n253\n00:13:16.630 --> 00:13:21.540\nthat this interface is not the bad guy\nanymore and it can bring it back online.\n\n254\n00:13:21.540 --> 00:13:23.410\nAnd when it brings it back online,\n\n255\n00:13:23.410 --> 00:13:27.200\nnow all of my switches are connected,\nI just got a redundancy.\n\n256\n00:13:27.200 --> 00:13:29.290\nI got great redundancy here and\n\n257\n00:13:29.290 --> 00:13:34.090\nloop prevention and I didn't even\nhave to configure one single thing.\n\n258\n00:13:34.090 --> 00:13:36.710\nI didn't have to do one entry\nin the command line interface.\n\n259\n00:13:36.710 --> 00:13:39.360\nThis is the default function,\nsounds great, doesnt it?\n\n260\n00:13:39.360 --> 00:13:41.309\nWell, its not perfect.\n\n261\n00:13:41.309 --> 00:13:44.140\nOne of the big problems with\nSpanning Tree, I should say problems.\n\n262\n00:13:44.140 --> 00:13:47.174\nOne of the defining\ncharacteristics of Spanning Tree,\n\n263\n00:13:47.174 --> 00:13:51.390\nI'm being politically correct here,\nis that it works on timers.\n\n264\n00:13:51.390 --> 00:13:54.623\nAnd so it uses these timers to determine\nwhether or not there's a loop and\n\n265\n00:13:54.623 --> 00:13:56.801\nthen how long it's gonna\nhold the loop down for.\n\n266\n00:13:56.801 --> 00:14:00.386\nSo when that interface up here failed and\nwent away,\n\n267\n00:14:00.386 --> 00:14:05.444\nSpanning Tree is going to see that but\nit's not gonna act on it right away.\n\n268\n00:14:05.444 --> 00:14:08.291\nIt's gonna wait,\nusually about 30 seconds and\n\n269\n00:14:08.291 --> 00:14:13.420\nafter about 30 seconds then it will say,\nokay, it looks like that loop is gone.\n\n270\n00:14:13.420 --> 00:14:17.730\nLet me go ahead and bring this other\ninterface up, or test the interface.\n\n271\n00:14:17.730 --> 00:14:19.710\nAnd so, it'll bring it up and\n\n272\n00:14:19.710 --> 00:14:24.310\nif the loop is still gone, now we're up,\nwe're happy, and it's running, okay?\n\n273\n00:14:24.310 --> 00:14:28.160\nBut reason it does the testing is because,\nwhat if that interface comes back up?\n\n274\n00:14:28.160 --> 00:14:31.050\nThen it needs to shut this interface\noff again to stop the loop, right?\n\n275\n00:14:31.050 --> 00:14:33.010\nSo it always gotta be watching for that.\n\n276\n00:14:33.010 --> 00:14:36.260\nWell, I do get redundancy out of it,\nit's not like high availability.\n\n277\n00:14:36.260 --> 00:14:37.500\nYou will have down time.\n\n278\n00:14:37.500 --> 00:14:41.800\nWhen the loop goes to recalculate,\nthe interface will be shut off for\n\n279\n00:14:41.800 --> 00:14:42.450\na little while.\n\n280\n00:14:42.450 --> 00:14:44.642\nSo you'll have a down\ntime of 30 seconds and\n\n281\n00:14:44.642 --> 00:14:47.309\nmost software cannot survive\na 30 second downtime.\n\n282\n00:14:47.309 --> 00:14:49.379\nI know it doesn't sound like much but\nthink about it.\n\n283\n00:14:49.379 --> 00:14:54.392\nIf you go to a website and if it made\nyou wait 30 seconds, what would happen?\n\n284\n00:14:54.392 --> 00:14:57.052\nNobody knows cuz your web browser\nwill time after like five seconds.\n\n285\n00:14:57.052 --> 00:14:58.947\n>> [LAUGH]\n>> So thus make it very long.\n\n286\n00:14:58.947 --> 00:15:02.990\nSo it's not engraved for high availability\nbut for just typical availability,\n\n287\n00:15:02.990 --> 00:15:04.405\njust regular network communications.\n\n288\n00:15:04.405 --> 00:15:08.230\nThat actually works really well and\nrequires zero configuration,\n\n289\n00:15:08.230 --> 00:15:10.570\nit just automatically part\nof the Cisco switches.\n\n290\n00:15:10.570 --> 00:15:14.740\n>> All right, Don now, you essentially\njust told us that Cisco has a technology\n\n291\n00:15:14.740 --> 00:15:18.330\nthat prevents loops,\nwhich we're very happy about.\n\n292\n00:15:18.330 --> 00:15:21.490\nAnd it's something we don't\nhave to configure but yet,\n\n293\n00:15:21.490 --> 00:15:24.300\nyou're spending a ton of\ntime talking about it Don.\n\n294\n00:15:24.300 --> 00:15:27.350\nSo, what do we really need\nto think about when we start\n\n295\n00:15:27.350 --> 00:15:29.050\ngetting into the process of this thing?\n\n296\n00:15:29.050 --> 00:15:31.453\nBecause, like you said,\nit does what it needs to do and\n\n297\n00:15:31.453 --> 00:15:33.037\nwe're not configuring anything.\n\n298\n00:15:33.037 --> 00:15:35.380\nSo Don give us the details here [LAUGH]\n>> All right, so\n\n299\n00:15:35.380 --> 00:15:36.725\nthere's a few things you\nneed to think about.\n\n300\n00:15:36.725 --> 00:15:39.464\nFirst off, I know we keep\nsaying Cisco did this, right?\n\n301\n00:15:39.464 --> 00:15:44.653\nBut it wasn't just Cisco and the IEEE\nhas standardized Spanning Tree Protocol.\n\n302\n00:15:44.653 --> 00:15:50.808\nSo, Spanning Tree Protocol is 802.1D or\nIEEE 802.1D Spanning Tree Protocol.\n\n303\n00:15:50.808 --> 00:15:54.851\nAnd what happened is Cisco workers,\nseveral of them that work in companies,\n\n304\n00:15:54.851 --> 00:15:57.960\nand they came up with this idea and\nthey pushed it forward And\n\n305\n00:15:57.960 --> 00:16:01.937\nthe IEEE ratified it, it became a standard\nso not just Cisco does it but HP and\n\n306\n00:16:01.937 --> 00:16:06.167\nDell and whoever else makes devices that\nare out there Juniper those guys they all\n\n307\n00:16:06.167 --> 00:16:08.680\nsupport spanning tree protocol.\n\n308\n00:16:08.680 --> 00:16:12.720\nBut they didn't quite do it\nthe way that Cisco wanted.\n\n309\n00:16:12.720 --> 00:16:15.280\nWe're gonna see a little bit later\nthat Cisco wanted to behave a little\n\n310\n00:16:15.280 --> 00:16:17.810\ndifferently because Cisco made\nbetter switches than everybody else.\n\n311\n00:16:17.810 --> 00:16:20.060\nSo they could do some things\nthat other people couldn't.\n\n312\n00:16:20.060 --> 00:16:24.060\nAnd so, the IEEE they went with\nthe lowest common denominator and\n\n313\n00:16:24.060 --> 00:16:27.580\nthey ratified a spading tree protocol\nthat would run on everybody's switches.\n\n314\n00:16:27.580 --> 00:16:30.710\nCisco said our switches our better,\nwe can do more.\n\n315\n00:16:30.710 --> 00:16:34.760\nAnd so the way spanning tree works on\na Cisco switch is a little bit different\n\n316\n00:16:34.760 --> 00:16:36.770\nthen the way it works on\nthird party switches.\n\n317\n00:16:36.770 --> 00:16:40.160\nSo we need to identify that and we'll\nget a chance to see it as we go through.\n\n318\n00:16:40.160 --> 00:16:44.020\nThe other thing is there's things we\ncan do to speed up spanning tree,\n\n319\n00:16:44.020 --> 00:16:46.800\nto make it run faster,\nto make it make decisions better.\n\n320\n00:16:46.800 --> 00:16:48.910\nAnd so those are tweaks that\nwe can choose to put in.\n\n321\n00:16:48.910 --> 00:16:49.870\nYou don't have to,\n\n322\n00:16:49.870 --> 00:16:53.480\nit will do loop detection just\nfine without us messing with it.\n\n323\n00:16:53.480 --> 00:16:56.190\nBut if you do get in there\nyou can actually tweak it and\n\n324\n00:16:56.190 --> 00:16:57.730\nget it to do some neat things.\n\n325\n00:16:57.730 --> 00:16:59.380\nSo that's what we're gonna be\nseeing in this episode and\n\n326\n00:16:59.380 --> 00:17:02.710\nthe upcoming one as we talk more\nabout spanning tree, all right?\n\n327\n00:17:02.710 --> 00:17:06.150\nThe first thing that we need to\nknow about spanning tree though\n\n328\n00:17:06.150 --> 00:17:08.570\nis how it makes its decision.\n\n329\n00:17:08.570 --> 00:17:10.480\nNow in my example here where\nI showed you guys the loop,\n\n330\n00:17:10.480 --> 00:17:15.100\nI said hey, we got a loop, and so we're\ngonna shut of this interface right here.\n\n331\n00:17:15.100 --> 00:17:16.790\nHow did it pick that interface?\n\n332\n00:17:16.790 --> 00:17:20.520\nBecause technically when it stops the loop\nit could've shut off this interface.\n\n333\n00:17:20.520 --> 00:17:24.800\nOr this one, or this one, or this one,\nor this one, or any of these.\n\n334\n00:17:24.800 --> 00:17:29.120\nAll of them, it could have used\nto shut off and stop the loop.\n\n335\n00:17:29.120 --> 00:17:32.870\nSo how does it pick who\nit's going to block?\n\n336\n00:17:32.870 --> 00:17:37.730\nWell that's based all upon spanning\ntree's decision making process.\n\n337\n00:17:37.730 --> 00:17:41.000\nAnd for the exam, we need to know\nthat decision making process.\n\n338\n00:17:41.000 --> 00:17:43.690\nCisco may show you a picture,\nlike mine, and\n\n339\n00:17:43.690 --> 00:17:46.270\ngive you some basic information\nabout your switches and\n\n340\n00:17:46.270 --> 00:17:50.230\nthen ask you to identify which port\nit is that's gonna get turned off.\n\n341\n00:17:50.230 --> 00:17:52.162\nWe need to know how that works.\n\n342\n00:17:52.162 --> 00:17:55.930\nAll right, well,\na big part of that decision\n\n343\n00:17:55.930 --> 00:18:01.060\nis that in the spanning tree world you\nhave what's called a route bridge.\n\n344\n00:18:01.060 --> 00:18:03.140\nSomebody who's in charge, right.\n\n345\n00:18:03.140 --> 00:18:05.340\nSomebody's got to be in charge\nof spanning tree protocol and\n\n346\n00:18:05.340 --> 00:18:08.150\neverybody else has to\nanswer to that person.\n\n347\n00:18:08.150 --> 00:18:11.790\nSo when you plug in a bunch of switches\nthat support spanning tree protocol,\n\n348\n00:18:11.790 --> 00:18:13.950\nthere's an election that happens, and\n\n349\n00:18:13.950 --> 00:18:18.710\nin the election, one of your switches\nwill become the route bridge.\n\n350\n00:18:18.710 --> 00:18:23.540\nAnd the root bridge will never\nshut off their own port.\n\n351\n00:18:23.540 --> 00:18:28.280\nThe exception would be if the root\nbridge had a loop right there on itself.\n\n352\n00:18:28.280 --> 00:18:31.040\nWhich in theory should never happen, but\n\n353\n00:18:31.040 --> 00:18:34.510\nthat's the one time that a root bridge\nmight shut off one of it's own ports.\n\n354\n00:18:34.510 --> 00:18:36.910\nBut otherwise, if you've got\na switch that's a root bridge,\n\n355\n00:18:36.910 --> 00:18:38.530\nit will never shut off its own ports.\n\n356\n00:18:38.530 --> 00:18:41.810\nOther people will have to shut off theirs,\nnot the root.\n\n357\n00:18:41.810 --> 00:18:45.960\nAll right so let's talk about that\nelection and see how that works.\n\n358\n00:18:45.960 --> 00:18:48.820\nI've got three switches in my topology,\nright?\n\n359\n00:18:48.820 --> 00:18:52.560\nI've got NYCORE1, NYCORE2, and NYACCESS1.\n\n360\n00:18:52.560 --> 00:18:54.080\nThese are my three switches.\n\n361\n00:18:54.080 --> 00:18:55.910\nAnd they are arranged in a triangle,\nand so\n\n362\n00:18:55.910 --> 00:18:57.940\nyou'll see how we've got\nthat kind of laid out.\n\n363\n00:18:57.940 --> 00:19:02.700\nAnd it's actually two links in\nbetween my NYCORE1 and NYCORE2.\n\n364\n00:19:02.700 --> 00:19:05.010\nNow, these three switches,\n\n365\n00:19:05.010 --> 00:19:08.130\nI've got them all right here,\nthe only thing I've done to them.\n\n366\n00:19:08.130 --> 00:19:11.240\nSo I boot them up and I apply a host name.\n\n367\n00:19:11.240 --> 00:19:12.240\nSo I gave them a host name, but\n\n368\n00:19:12.240 --> 00:19:17.610\notherwise these guys are 100% default\nconfig, I haven't done anything to them.\n\n369\n00:19:17.610 --> 00:19:21.770\nSo when I turn them on,\nthey've got this cabling.\n\n370\n00:19:21.770 --> 00:19:24.740\nAnd so\nspanning tree would have seen the loop,\n\n371\n00:19:24.740 --> 00:19:30.690\nsomebody got elected the root bridge, and\nfrom there it went on to make decisions.\n\n372\n00:19:30.690 --> 00:19:33.408\nOkay, well let's figure\nout how that worked.\n\n373\n00:19:33.408 --> 00:19:36.570\nLet's going and harvest some information,\nin spanning tree protocol,\n\n374\n00:19:36.570 --> 00:19:39.260\nit tracks three main\nthings on each switch.\n\n375\n00:19:39.260 --> 00:19:43.760\nYou have a Bridge ID, a Priority,\nand a MAC address, okay?\n\n376\n00:19:43.760 --> 00:19:46.900\nAnd the Bridge ID is actually\na combination of the Priority and\n\n377\n00:19:46.900 --> 00:19:47.950\nthe MAC address.\n\n378\n00:19:47.950 --> 00:19:52.220\nSo it's really two pieces of\ninformation that it glues together,\n\n379\n00:19:52.220 --> 00:19:54.550\nlet's start with NYCORE1 and\nI wanna get this data.\n\n380\n00:19:54.550 --> 00:20:01.730\nSo on NYCORE1, if I come in here and\nrun show spanning-tree, right, so\n\n381\n00:20:01.730 --> 00:20:06.880\nI'll do a show spanning-tree, that's gonna\ngive me the spanning tree information.\n\n382\n00:20:06.880 --> 00:20:08.660\nAnd right up here at the top,\n\n383\n00:20:08.660 --> 00:20:12.740\nI'm gonna see that from my\nswitch spanning tree is enabled.\n\n384\n00:20:12.740 --> 00:20:17.510\nIt's protocol IEEE, so I'm running\n802.1d spanning tree protocol and\n\n385\n00:20:17.510 --> 00:20:21.290\nI can see my bridge ID right here.\n\n386\n00:20:21.290 --> 00:20:27.220\nMy bridge ID, my priority and\nmy MAC address, okay.\n\n387\n00:20:27.220 --> 00:20:31.029\nAnd looking at my bridge I\ncan see that my bridge ID,\n\n388\n00:20:31.029 --> 00:20:35.920\nit has a priority of three two,\nwell actually it's kinda weird.\n\n389\n00:20:35.920 --> 00:20:38.390\nRemember how I said the bridge\nID is a combination of things?\n\n390\n00:20:38.390 --> 00:20:40.630\nWell I got my MAC address here.\n\n391\n00:20:40.630 --> 00:20:44.920\nMy bridge ID, if you look at it, I got\n32769, and then over here it tells me my\n\n392\n00:20:44.920 --> 00:20:51.440\npriority is 32768 and\nmy system ID extended is one.\n\n393\n00:20:51.440 --> 00:20:55.970\nAll right, this is our first\nglance into how Cisco does things\n\n394\n00:20:55.970 --> 00:20:58.330\na little bit different\nthan the other vendors.\n\n395\n00:20:59.590 --> 00:21:02.820\nWith 802.1D spanning tree protocol.\n\n396\n00:21:02.820 --> 00:21:08.900\nIt runs one instance of spanning\ntree protocol for the entire switch.\n\n397\n00:21:08.900 --> 00:21:11.400\nNow for\nmost vendors that's perfectly fine but\n\n398\n00:21:11.400 --> 00:21:14.010\nCisco was one of the early\nproponents of VLANs.\n\n399\n00:21:14.010 --> 00:21:15.990\nThey really wanted VLANs to be out there.\n\n400\n00:21:15.990 --> 00:21:18.120\nThey pushed hard for VLANs.\n\n401\n00:21:18.120 --> 00:21:23.410\nAnd so on a Cisco switch I might have\ntwo cables between the switch but\n\n402\n00:21:23.410 --> 00:21:25.200\nit's not a loop, right?\n\n403\n00:21:25.200 --> 00:21:30.410\nFor example, if I go back to my diagram\nhere, my two switches have double cables.\n\n404\n00:21:30.410 --> 00:21:34.540\nBut what if this cable's on VLAN 1,\nand this cable's on VLAN 5?\n\n405\n00:21:34.540 --> 00:21:37.050\nIt's not a loop, it's two different VLANs.\n\n406\n00:21:37.050 --> 00:21:41.040\nIf I broadcast on VLAN 1,\nthe broadcast doesn't make it to VLAN 5.\n\n407\n00:21:41.040 --> 00:21:44.440\nMaybe I have a router in place, but\na router's not gonna forward a broadcast.\n\n408\n00:21:44.440 --> 00:21:46.450\nSo I don't have a loop.\n\n409\n00:21:46.450 --> 00:21:51.540\nIf I'm running 802.1d spanning tree\nprotocol, the true IEEE standard,\n\n410\n00:21:51.540 --> 00:21:55.110\nit will see this as a loop and\nit will shut one of them off and\n\n411\n00:21:55.110 --> 00:21:58.450\nit will break either VLAN 1 one or\nVLAN 5, it'll break one of them.\n\n412\n00:21:58.450 --> 00:22:02.630\nSo Cisco said hey what we should really do\n\n413\n00:22:02.630 --> 00:22:08.090\nis run one copy of spanning tree for\nevery single VLAN.\n\n414\n00:22:08.090 --> 00:22:11.040\nSo if I have five VLANs,\nI wanna run five copies of spanning tree.\n\n415\n00:22:11.040 --> 00:22:13.940\nAnd it was easy for\nCisco to say that because back then, and\n\n416\n00:22:13.940 --> 00:22:17.440\nthis is in the late 80s, early 1990s.\n\n417\n00:22:17.440 --> 00:22:20.530\nBack then Cisco had switches that\nhad a lot of power to them and\n\n418\n00:22:20.530 --> 00:22:24.380\nthey could run a hundred instances\nof spanning tree and be okay.\n\n419\n00:22:24.380 --> 00:22:26.270\nBut the other vendors that were out there.\n\n420\n00:22:26.270 --> 00:22:30.070\nThe other people like, Bay Networks and\npeople like that were saying,\n\n421\n00:22:30.070 --> 00:22:31.270\nwait a minute, wait wait wait.\n\n422\n00:22:31.270 --> 00:22:33.830\nWe only have so\nmuch CPU power on our switches.\n\n423\n00:22:33.830 --> 00:22:37.270\nWe don't want to run a bunch of instances\nof spanning tree, let's just run one.\n\n424\n00:22:37.270 --> 00:22:41.730\nAnd if there's ever a loop environment\nlike this well, shame on the user or\n\n425\n00:22:41.730 --> 00:22:44.060\nthey'll just have to deal with it or\nfigure something, but\n\n426\n00:22:44.060 --> 00:22:45.540\nif they have a trunk.\n\n427\n00:22:45.540 --> 00:22:48.050\nThen we don't have to worry about it,\nit's not a loop anymore on a trunk but\n\n428\n00:22:48.050 --> 00:22:50.298\nif they run two cables that's\ntheir own problem, that's a loop.\n\n429\n00:22:50.298 --> 00:22:53.560\nAnd the IEEE agreed and\nsaid all right well that's what we'll do.\n\n430\n00:22:53.560 --> 00:22:55.720\nWe'll do one instance of spanning tree.\n\n431\n00:22:55.720 --> 00:22:59.190\nAnd so\nCisco said fine you guys do what you want.\n\n432\n00:22:59.190 --> 00:23:03.210\nBut what we're gonna do is we're gonna\ntake your official 802.1D standard and\n\n433\n00:23:03.210 --> 00:23:07.520\nwe're gonna run one copy of it for\neach VLAN.\n\n434\n00:23:07.520 --> 00:23:11.450\nAnd so your switch will run more than\none copy of spanning tree protocol\n\n435\n00:23:11.450 --> 00:23:13.540\nif you have more than one VLAN.\n\n436\n00:23:13.540 --> 00:23:17.620\nWell the problem is Cisco needed\nsome way to tell that apart.\n\n437\n00:23:17.620 --> 00:23:22.609\nAnd so what they did is they said look, in\nspanning tree protocol you have a priority\n\n438\n00:23:22.609 --> 00:23:27.483\nand the priority number identifies how\nlikely your switch is to become the root.\n\n439\n00:23:27.483 --> 00:23:30.035\nAnd they said why don't we\ntake that priority number and\n\n440\n00:23:30.035 --> 00:23:31.810\nadd a little bit too it.\n\n441\n00:23:31.810 --> 00:23:37.140\nWe're gonna take whatever your VLAN ID\nis and stick it on to your priority.\n\n442\n00:23:37.140 --> 00:23:42.599\nSo if your priority is 32768,\nand what we're doing is in 1,\n\n443\n00:23:42.599 --> 00:23:46.409\nthen you end up with a priority of 32769.\n\n444\n00:23:46.409 --> 00:23:48.260\nThere's two advantages to this.\n\n445\n00:23:48.260 --> 00:23:51.104\nOne advantage is that it didn't\nrequire any extra fields, so\n\n446\n00:23:51.104 --> 00:23:55.155\nCISCO could maintain compatibility, and\nthat compatibility is the other advantage,\n\n447\n00:23:55.155 --> 00:23:58.727\nthe other advantage being that Third\nparty switches will see this just fine.\n\n448\n00:23:58.727 --> 00:23:59.719\nAnd they just see this as a priority.\n\n449\n00:23:59.719 --> 00:24:02.360\nThey don't realize there's\na VLAN number stuck in there.\n\n450\n00:24:02.360 --> 00:24:07.723\nSo Cisco's proprietary version of\nspan tree protocol is 100% compatible\n\n451\n00:24:07.723 --> 00:24:12.700\nwith third party switches\nrunning 802.1.d.ieee standard.\n\n452\n00:24:12.700 --> 00:24:16.565\nSo we get full compatibility\nwith some added benefits.\n\n453\n00:24:16.565 --> 00:24:23.450\nBut as a result, Cisco switches\ndon't actually run true ieee 802.1d.\n\n454\n00:24:23.450 --> 00:24:26.000\nThey run it once per VLAN.\n\n455\n00:24:26.000 --> 00:24:31.835\nSo instead, what we're running here is\nwhat's called per VLAN spanning tree plus.\n\n456\n00:24:31.835 --> 00:24:33.890\nPVST+, right,\n\n457\n00:24:33.890 --> 00:24:38.717\nso on the exam you'll actually see it\nwritten that way, PVST+, like that.\n\n458\n00:24:38.717 --> 00:24:41.720\nPer VLAN spanning tree protocol plus.\n\n459\n00:24:41.720 --> 00:24:45.660\nSo we're running one instance\nof 802.1d for every single VLAN,\n\n460\n00:24:45.660 --> 00:24:49.990\nper VLAN and that's it, but\ncomplete compatibility otherwise.\n\n461\n00:24:49.990 --> 00:24:53.590\nSo, when I look up here at\nthe information from my switch,\n\n462\n00:24:53.590 --> 00:24:57.940\nI've got a priority of 32768,\nwhich is different than what my\n\n463\n00:24:57.940 --> 00:25:01.050\nactual priority ends up being\nbecause that VLAN being added to it.\n\n464\n00:25:01.050 --> 00:25:04.280\nSo for right now, I'm just gonna\nstick with that 32768, though.\n\n465\n00:25:04.280 --> 00:25:08.470\nSo this is NYCORE1, and\nI'm gonna go back to my diagram here.\n\n466\n00:25:08.470 --> 00:25:13.500\nTake NYCORE1, and I'm gonna add\nthat priority, and the bridge ID.\n\n467\n00:25:13.500 --> 00:25:16.560\nThe bridge ID being the priority\nplus the VLAN number, all right?\n\n468\n00:25:17.680 --> 00:25:18.620\nAnd then the MAC address.\n\n469\n00:25:18.620 --> 00:25:21.237\nNow, on a router, on a laptop,\n\n470\n00:25:21.237 --> 00:25:24.880\non a desktop,\nevery network adapter has a MAC address.\n\n471\n00:25:24.880 --> 00:25:28.530\nOn a switch, we don't normally think about\nit but switches have MAC addresses also.\n\n472\n00:25:28.530 --> 00:25:33.440\nIn fact, every single port on your\nCisco switch has a MAC address.\n\n473\n00:25:33.440 --> 00:25:37.290\nSo, if you have a 48-port switch, you're\ngonna have at least 48 MAC addresses.\n\n474\n00:25:37.290 --> 00:25:40.270\nBut if you create VLAN interfaces,\nthey have virtual MAC addresses.\n\n475\n00:25:40.270 --> 00:25:43.250\nYou actually have tons of MAC\naddresses on your switch.\n\n476\n00:25:43.250 --> 00:25:48.100\nSo when I run show spanning tree protocol,\nI can see that this switch\n\n477\n00:25:48.100 --> 00:25:52.520\nhas a MAC address also, and it's listed\nright there, so that's my MAC address.\n\n478\n00:25:52.520 --> 00:25:53.100\nAll right.\n\n479\n00:25:53.100 --> 00:25:56.670\nNow notice right above it, this is\nmy bridge ID, so that's this switch.\n\n480\n00:25:56.670 --> 00:25:58.650\nRight above it, I got the root ID.\n\n481\n00:25:58.650 --> 00:26:02.410\nAnd the root has a different address,\nso that tells me that I'm not the root.\n\n482\n00:26:02.410 --> 00:26:05.880\nSomebody else is the root, whoever\nhas that MAC address became the root.\n\n483\n00:26:05.880 --> 00:26:06.510\nAll right.\n\n484\n00:26:06.510 --> 00:26:09.630\nSo I'm gonna jump back over to my diagram\nhere and just add that MAC address in.\n\n485\n00:26:09.630 --> 00:26:11.930\nSo now I've got NYCORE1's\ndata right there.\n\n486\n00:26:11.930 --> 00:26:15.640\nThat's the data that spanning tree\nis gonna use during it's election to\n\n487\n00:26:15.640 --> 00:26:17.520\nfigure out who the root is.\n\n488\n00:26:17.520 --> 00:26:21.316\nAnd for whatever reason, NYCORE1 lost,\nso somebody has better data.\n\n489\n00:26:21.316 --> 00:26:24.102\nSo let's go get the data for\nthe other people and we'll find out why.\n\n490\n00:26:24.102 --> 00:26:28.235\nOn NYCORE2,\nwe'll go a little bit faster on this one.\n\n491\n00:26:28.235 --> 00:26:34.434\nJust do show spanning tree and I'm\ngonna pull the priority which is 32769.\n\n492\n00:26:34.434 --> 00:26:38.481\nThat's the same, so I'm gonna get\nthe MAC address on this one, and\n\n493\n00:26:38.481 --> 00:26:40.720\nwe'll throw that in here.\n\n494\n00:26:40.720 --> 00:26:45.490\nSo my bridge ID is 32769,\nmy priority is 32768,\n\n495\n00:26:45.490 --> 00:26:49.090\nand my MAC address is what I copied.\n\n496\n00:26:49.090 --> 00:26:49.850\nThere.\n\n497\n00:26:49.850 --> 00:26:54.157\nAnd the last one is NYACCESS1, so\nI'm gonna go down and get that same data.\n\n498\n00:26:56.362 --> 00:27:00.260\nAnd when I do a show span on this one,\nI can see the information.\n\n499\n00:27:00.260 --> 00:27:03.590\nAnd on this one,\nnotice what we've got here.\n\n500\n00:27:03.590 --> 00:27:04.550\nRoot ID, right?\n\n501\n00:27:04.550 --> 00:27:05.180\nI've got that ID there.\n\n502\n00:27:05.180 --> 00:27:08.850\nThere's my address,\nit's the same as my MAC address.\n\n503\n00:27:08.850 --> 00:27:11.380\nAnd I get the little note here,\nthis bridge is the root.\n\n504\n00:27:11.380 --> 00:27:12.854\nI just found the root.\n\n505\n00:27:12.854 --> 00:27:14.235\nIt's NYACCESS1.\n\n506\n00:27:14.235 --> 00:27:18.995\nNow, funny story about that,\nNYACCESS1 is a 2960.\n\n507\n00:27:18.995 --> 00:27:23.059\nA 2960 is kind of a mid range switch.\n\n508\n00:27:23.059 --> 00:27:25.961\nNYCORE1 and in NYCORE2 are 3750s.\n\n509\n00:27:25.961 --> 00:27:27.370\nThose are higher-end switches, right?\n\n510\n00:27:27.370 --> 00:27:29.970\nThey're not the big switches, but\nthey're the higher-end one new switches.\n\n511\n00:27:29.970 --> 00:27:34.220\nSo the 3750s are better switches,\nthey're newer switches.\n\n512\n00:27:34.220 --> 00:27:40.090\nThis 2960 is an older switch, it's not\nas good, and yet it's the root, right?\n\n513\n00:27:40.090 --> 00:27:44.556\nThat's one of the primary examples of\nwhy we might choose to override what\n\n514\n00:27:44.556 --> 00:27:46.510\nspanning tree does by default.\n\n515\n00:27:46.510 --> 00:27:51.573\nBecause sometimes, it can elect what is\nnot the most ideal switch as the root,\n\n516\n00:27:51.573 --> 00:27:54.578\nand I say sometimes,\nit happens all the time.\n\n517\n00:27:54.578 --> 00:27:58.480\nThe main reason is because of\nthe criteria use to elect the root.\n\n518\n00:27:58.480 --> 00:28:00.660\nSo lets talk about how\nthe root is elected.\n\n519\n00:28:00.660 --> 00:28:03.630\nWhen a root is elected,\nthe switches all see each other.\n\n520\n00:28:03.630 --> 00:28:07.440\nSo they're running Spanning tree,\nand when you run Spanning Tree,\n\n521\n00:28:07.440 --> 00:28:11.430\nyou're primary characteristic that\nyou send out what's called a BPDU,\n\n522\n00:28:11.430 --> 00:28:15.240\na bridge protocol data unit, BPDU.\n\n523\n00:28:15.240 --> 00:28:17.589\nSo your switch sends out BPDUs\nevery couple of seconds.\n\n524\n00:28:18.610 --> 00:28:20.846\nSo, if I plug a new\nswitch into the network,\n\n525\n00:28:20.846 --> 00:28:25.440\nit immediately start sending BPDUs,\nso other switches know it's there.\n\n526\n00:28:25.440 --> 00:28:29.148\nAnd the other switches are sending\nBPDUs also so we can see them.\n\n527\n00:28:29.148 --> 00:28:31.830\nSo, Spanning Tree switches\nwill see each other\n\n528\n00:28:31.830 --> 00:28:33.350\neven if they have no IP address, right?\n\n529\n00:28:33.350 --> 00:28:34.050\nThis is all layer two.\n\n530\n00:28:34.050 --> 00:28:35.610\nThis is all down at layer two.\n\n531\n00:28:35.610 --> 00:28:38.010\nSo we don't any IP address in configured.\n\n532\n00:28:38.010 --> 00:28:40.640\nWe don't need IPv6 or\nanything crazy like that.\n\n533\n00:28:40.640 --> 00:28:42.990\nJust straight up layer two communications.\n\n534\n00:28:42.990 --> 00:28:44.600\nIf you got a link light,\n\n535\n00:28:44.600 --> 00:28:47.900\nthen your switches will be able to\nsend these BPDUs and find each other.\n\n536\n00:28:47.900 --> 00:28:51.860\nSo they're sending those BPDUs and\nwhen a new switch comes up,\n\n537\n00:28:53.430 --> 00:28:57.110\nif Spanning Tree doesn't currently have\na root, an election will be triggered.\n\n538\n00:28:57.110 --> 00:28:59.700\nIf you've already got a root,\nthat person will stay at the root,\n\n539\n00:28:59.700 --> 00:29:01.070\nunless something changes.\n\n540\n00:29:01.070 --> 00:29:04.196\nWe don't do a lot of preemption,\npreemption is where somebody comes along\n\n541\n00:29:04.196 --> 00:29:06.491\nand bumps whoever the root is and\nthey become the root.\n\n542\n00:29:06.491 --> 00:29:08.581\nThat doesn't normally happen\nunless there's a failure.\n\n543\n00:29:08.581 --> 00:29:12.273\nBut let's assume I have no root,\nan election will happen.\n\n544\n00:29:12.273 --> 00:29:17.532\nAnd the first thing the election is\ngonna look at is the priority, right?\n\n545\n00:29:17.532 --> 00:29:23.430\nAnd the priority on your switch is going\nto indicate who should become the root.\n\n546\n00:29:23.430 --> 00:29:30.199\nAnd the way it works is, the priority is\na number between zero and 65,535 right?\n\n547\n00:29:30.199 --> 00:29:33.684\nOr 65,534, I think is the highest\nnumber you can actually have, but\n\n548\n00:29:33.684 --> 00:29:36.420\nit's a number between those ranges.\n\n549\n00:29:36.420 --> 00:29:40.667\nAnd the default for\nour switches is 32,768,\n\n550\n00:29:40.667 --> 00:29:43.838\nwhich is smack in the middle, right?\n\n551\n00:29:43.838 --> 00:29:46.903\nIf you wonder, where does that\nnumber come from, why 32768?\n\n552\n00:29:46.903 --> 00:29:51.570\nIt's smack in the middle, a 16-bit\nnumber is really what this comes from.\n\n553\n00:29:51.570 --> 00:29:56.460\nA 16-bit number can be from\nzero to 65,535, right?\n\n554\n00:29:56.460 --> 00:29:58.590\nThat's the maximum range.\n\n555\n00:29:58.590 --> 00:29:59.959\nWell, 32,768 is right in the middle,\n\n556\n00:29:59.959 --> 00:30:03.950\nor as close to the middle as you\ncan get cuz it's an odd number.\n\n557\n00:30:05.000 --> 00:30:07.970\nSo, that's the default priority\non these Cisco switches and\n\n558\n00:30:07.970 --> 00:30:09.810\nthat's the first thing that's looked at.\n\n559\n00:30:09.810 --> 00:30:15.405\nSo in my scenario, all three\nswitches have a priority of 32768.\n\n560\n00:30:15.405 --> 00:30:17.251\nIt's a three way tie.\n\n561\n00:30:17.251 --> 00:30:20.180\nSo when there's a three way tie,\nwhat happens next?\n\n562\n00:30:20.180 --> 00:30:25.330\nWell, they go to the tie breaker and\nthe next tie breaker is the MAC address.\n\n563\n00:30:25.330 --> 00:30:26.711\nWhatever MAC address you have.\n\n564\n00:30:26.711 --> 00:30:30.507\nNow with priority, the lowest number wins.\n\n565\n00:30:30.507 --> 00:30:33.399\nSo if I have a switch that was 32767,\n\n566\n00:30:33.399 --> 00:30:37.543\nthat's lower than 32768,\nit would become the root.\n\n567\n00:30:37.543 --> 00:30:41.150\nIf I had somebody who's priority was one,\nthat would become the root.\n\n568\n00:30:41.150 --> 00:30:43.230\nWay lower than everybody else's.\n\n569\n00:30:43.230 --> 00:30:45.400\nAnd if I had somebody\nwho's priority was 65,534,\n\n570\n00:30:45.400 --> 00:30:49.900\nthat's the highest or\nthe least likely to become root.\n\n571\n00:30:49.900 --> 00:30:51.390\nSo this is one of the things\nthat we might configure.\n\n572\n00:30:51.390 --> 00:30:55.755\nWe might want to get in and manipulate\nwho's gonna be that root bridge.\n\n573\n00:30:55.755 --> 00:30:58.750\nBut in my scenario, it was a three way\ntie so it went down to MAC address.\n\n574\n00:30:58.750 --> 00:31:02.736\nAnd on the MAC address side,\nwell this switch is 04da, so\n\n575\n00:31:02.736 --> 00:31:05.820\nif we start from the left, 04da.\n\n576\n00:31:05.820 --> 00:31:10.798\nIf I look at NYCORE2, 08cc, 04 is\n\n577\n00:31:10.798 --> 00:31:17.090\nlower than 08, so\nthe access switch beat this guy.\n\n578\n00:31:17.090 --> 00:31:18.420\nLet's look at the other one.\n\n579\n00:31:18.420 --> 00:31:20.660\nThe other one also starts with 08.\n\n580\n00:31:20.660 --> 00:31:26.520\nSo 04 is lower than 08,\nNYACCESS1 one wins.\n\n581\n00:31:26.520 --> 00:31:29.120\nNYACCESS1 is not as good as switch, right?\n\n582\n00:31:29.120 --> 00:31:33.390\nBut this happens all the time because\nwhen Cisco manufacturers a switch,\n\n583\n00:31:33.390 --> 00:31:35.090\nthey burn a MAC address into it.\n\n584\n00:31:35.090 --> 00:31:36.958\nAnd they burn them in order.\n\n585\n00:31:36.958 --> 00:31:43.570\nSo this switch, when it came off\nthe conveyor belt was 04da.d2b6.0400.\n\n586\n00:31:43.570 --> 00:31:47.748\nThe next switch on the conveyor\nbelt was probably 0401, right?\n\n587\n00:31:47.748 --> 00:31:50.052\nAnd then two, and\nthen three, and then so on.\n\n588\n00:31:50.052 --> 00:31:53.556\nActually, it usually skips by a larger\namount of numbers cuz I've got 48\n\n589\n00:31:53.556 --> 00:31:55.840\nports and they all get MAC addresses also.\n\n590\n00:31:55.840 --> 00:32:01.720\nSo the next one is probably like 0451,\nor something like that but it's higher.\n\n591\n00:32:01.720 --> 00:32:04.308\nSo the older the Cisco switch,\n\n592\n00:32:04.308 --> 00:32:07.740\nthe lower its number is going to be,\nits MAC address.\n\n593\n00:32:07.740 --> 00:32:11.100\nAnd so if you just have spanning tree\nrunning automatically in your network,\n\n594\n00:32:11.100 --> 00:32:12.910\nwith zero configuration,\n\n595\n00:32:12.910 --> 00:32:16.730\nusually its the oldest switch in your\nnetwork that's going to be the root.\n\n596\n00:32:16.730 --> 00:32:20.080\nDo you want the oldest switch\nin your network to be the root,\n\n597\n00:32:20.080 --> 00:32:23.160\nthe one who's in charge of loop detection?\n\n598\n00:32:23.160 --> 00:32:24.300\nNot normally.\n\n599\n00:32:24.300 --> 00:32:27.160\nIt's not really in charge as much as it's\nthe fact that it's not going to shut any\n\n600\n00:32:27.160 --> 00:32:28.190\ninterfaces off.\n\n601\n00:32:28.190 --> 00:32:32.110\nSo you'd rather have a newer\nswitch shut off an interface?\n\n602\n00:32:32.110 --> 00:32:34.390\nOr have this old switch\nshut of this interface?\n\n603\n00:32:34.390 --> 00:32:35.750\nI'd rather have an old switch do it.\n\n604\n00:32:35.750 --> 00:32:37.100\nBecause if I'm going to have\na failure on the network,\n\n605\n00:32:37.100 --> 00:32:38.780\nthe failure is going to\nbe at the old switch.\n\n606\n00:32:38.780 --> 00:32:40.690\nAnd if it was the one shutting\noff an interface already,\n\n607\n00:32:40.690 --> 00:32:42.620\nthat's going to minimize the impact of it.\n\n608\n00:32:42.620 --> 00:32:45.590\nSo we will almost always\nwant to get in and\n\n609\n00:32:45.590 --> 00:32:48.380\nmanipulate who's going to become the root.\n\n610\n00:32:48.380 --> 00:32:51.010\nSo even if we configure nothing else,\n\n611\n00:32:51.010 --> 00:32:53.720\nyou'll probably wanna influence\nwho's going to be the root.\n\n612\n00:32:53.720 --> 00:32:57.470\nAnd it's easy to do,\nall we have to do is change the priority.\n\n613\n00:32:57.470 --> 00:32:59.477\nWe can get in there and\nmanipulate that priority, and\n\n614\n00:32:59.477 --> 00:33:02.421\nnow we can effect who's going to become\nthe root when you've got spanning tree\n\n615\n00:33:02.421 --> 00:33:04.440\nconfiguring your environment.\n\n616\n00:33:04.440 --> 00:33:07.326\nSo it's not a hard thing to do, but that's\none example of something we'll configure.\n\n617\n00:33:07.326 --> 00:33:10.300\nSo Ronnie,\nthis is a super long answer to a short\n\n618\n00:33:10.300 --> 00:33:12.470\nquestion which is what\nare we gonna configure.\n\n619\n00:33:12.470 --> 00:33:14.260\nWell that's one thing right there, right?\n\n620\n00:33:14.260 --> 00:33:17.630\nThere are other things that we may want to\nconfigure and we'll see those as we go on.\n\n621\n00:33:17.630 --> 00:33:20.360\nBut, at a minimum we're\ngonna want to go in and\n\n622\n00:33:20.360 --> 00:33:24.110\ninfluence who is going to be the root\nbridge because the root bridge\n\n623\n00:33:24.110 --> 00:33:27.440\nwon't shut off any of their ports and\neverybody else will need to.\n\n624\n00:33:27.440 --> 00:33:30.940\nAnd so we're normally gonna pick a switch\nthat's in the middle of our network.\n\n625\n00:33:30.940 --> 00:33:34.080\nIt's not so much about how,\nwhether it's new or old or whatever.\n\n626\n00:33:34.080 --> 00:33:36.710\nIt's about being in the middle, right?\n\n627\n00:33:36.710 --> 00:33:38.800\nAnd usually in the middle is your core and\n\n628\n00:33:38.800 --> 00:33:40.630\nthat's where you've got\nyour best switches.\n\n629\n00:33:40.630 --> 00:33:44.820\nSo you usually want those guys to be\nthe root on this one and then from there,\n\n630\n00:33:44.820 --> 00:33:46.810\nyou can make all the other decisions.\n\n631\n00:33:46.810 --> 00:33:48.740\nNow I've got a lot more to\ntalk about on this one.\n\n632\n00:33:48.740 --> 00:33:50.530\nI know I'm out of time for\nthis one so far.\n\n633\n00:33:50.530 --> 00:33:54.240\nBut we gotta talk a little bit\nabout spanning tree protocol and\n\n634\n00:33:54.240 --> 00:33:56.500\nsort of what it does, right?\n\n635\n00:33:56.500 --> 00:34:00.120\nWe still need to get more in depth\ninto how it actually does what it\n\n636\n00:34:00.120 --> 00:34:00.750\nsays it's gonna do.\n\n637\n00:34:00.750 --> 00:34:04.520\nSo in the next episode, I'll show you guys\nhow to influence who that root bridge is,\n\n638\n00:34:04.520 --> 00:34:07.050\nand then we'll start taking a look\nat how loops get detected, and\n\n639\n00:34:07.050 --> 00:34:10.540\nhow they get shutdown and all the other\ninformation that builds up on that.\n\n640\n00:34:10.540 --> 00:34:13.710\n>> Well, Don, thank you again for\nintroducing us at least to the beginning\n\n641\n00:34:13.710 --> 00:34:17.040\nand the process of understanding\nSpanning Tree Protocol.\n\n642\n00:34:17.040 --> 00:34:19.720\nRemember you wanna make sure that\nyou also go over to that show,\n\n643\n00:34:19.720 --> 00:34:23.550\nSpanning Tree Protocol, and take a look\nat the details and the information there.\n\n644\n00:34:23.550 --> 00:34:26.800\nDon pointed out a few different things,\nespecially the priority number.\n\n645\n00:34:26.800 --> 00:34:29.890\nAnd, of course, the easiest way to\nidentify which one's the root bridge,\n\n646\n00:34:29.890 --> 00:34:32.120\nwell, the thing that\nsays this is the root.\n\n647\n00:34:32.120 --> 00:34:33.560\nThat should help you out but\n\n648\n00:34:33.560 --> 00:34:38.050\nif you can't make sure you look at the mac\naddresses there and see that as well.\n\n649\n00:34:38.050 --> 00:34:40.440\nThat's a great place for us to end this\nepisode that means we're coming back for\n\n650\n00:34:40.440 --> 00:34:44.780\na part two so signing off for\nIT pro tv I've been your host Ronnie Wong.\n\n651\n00:34:44.780 --> 00:34:45.662\n>> And I'm Don Pizet.\n\n652\n00:34:45.662 --> 00:34:50.532\n>> Stay tuned right here for\nmore CCNA routing and switching.\n\n653\n00:34:50.532 --> 00:34:58.220\n[MUSIC]\n\n",
          "vimeoId": "178067880"
        },
        {
          "description": "In this episode, Ronnie and Don continue with the STP process after the root bridge election.   They demonstrate how the non-root bridges receive and forward BPDUs and how they decided on blocking ports.  Using the “show spanning-tree”, the guys show STP role, states and costs and explain how those values help determine blocking and forwarding through those ports.",
          "length": "2033",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/cisco-ccna200105/cisco-ccna-200105-1-3-2-spanning_tree_protocol_pt.2-080516-1.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/cisco-ccna200105/cisco-ccna-200105-1-3-2-spanning_tree_protocol_pt.2-080516-1-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/cisco-ccna200105/cisco-ccna-200105-1-3-2-spanning_tree_protocol_pt.2-080516-1-sm.jpg",
          "title": "Spanning Tree Protocol Part 2",
          "transcript": "WEBVTT\n\n1\n00:00:00.214 --> 00:00:10.214\n[MUSIC]\n\n2\n00:00:12.330 --> 00:00:14.976\nWelcome to another great\nepisode right here on ITProTV,\n\n3\n00:00:14.976 --> 00:00:16.305\nI'm your host Ronnie Wong.\n\n4\n00:00:16.305 --> 00:00:20.991\nAnd you're watching the Cisco CCNA routing\nand switching show where we're about to\n\n5\n00:00:20.991 --> 00:00:24.634\njump in to, of course,\ndeeper understanding of Spanning Tree.\n\n6\n00:00:24.634 --> 00:00:26.481\nWe've just really gotten started here and\n\n7\n00:00:26.481 --> 00:00:29.362\nwho better to help us to complete\nthat action is gonna be Don Pezet.\n\n8\n00:00:29.362 --> 00:00:30.301\nDon, welcome back.\n\n9\n00:00:30.301 --> 00:00:31.144\n>> Thanks for having me back Ronnie.\n\n10\n00:00:31.144 --> 00:00:34.753\nYeah, in the last episode we kind of\nwrapped up talking about how Spanning Tree\n\n11\n00:00:34.753 --> 00:00:37.060\nelects who's gonna be\na root bridge in a network.\n\n12\n00:00:37.060 --> 00:00:39.910\nSo we have multiple switches and\na loop is created.\n\n13\n00:00:39.910 --> 00:00:42.520\nSomebody's gotta be the root bridge,\nI shouldn't say the loop.\n\n14\n00:00:42.520 --> 00:00:46.400\nEven if there's no loop, if you have a\nperfectly straight network with no loops.\n\n15\n00:00:46.400 --> 00:00:48.150\nSpanning tree will still\nelect a root bridge.\n\n16\n00:00:48.150 --> 00:00:50.622\nSomebody becomes the switch in charge.\n\n17\n00:00:50.622 --> 00:00:54.839\nSo we saw in the last episode how your\nswitch could use the priority value to\n\n18\n00:00:54.839 --> 00:00:57.367\ndetermine who that root\nbridge is gonna be.\n\n19\n00:00:57.367 --> 00:01:01.191\nAnd if there's a tie it uses the mac\naddress to figure out who's gonna be\n\n20\n00:01:01.191 --> 00:01:02.390\nthat bridge.\n\n21\n00:01:02.390 --> 00:01:05.340\nAnd the main problem we\nhad with the tie scenario\n\n22\n00:01:05.340 --> 00:01:07.240\nwas that when it goes to the MAC address.\n\n23\n00:01:07.240 --> 00:01:11.370\nThe lowest MAC address wins, lowest\npriority wins, lowest MAC address wins.\n\n24\n00:01:11.370 --> 00:01:14.420\nAnd the lowest MAC address usually\nindicates that it's the oldest\n\n25\n00:01:14.420 --> 00:01:15.570\nswitch, right?\n\n26\n00:01:15.570 --> 00:01:18.230\nLower MAC addresses usually\nindicate that it was manufactured\n\n27\n00:01:18.230 --> 00:01:20.360\nprior to ones that have\nhigher MAC addresses.\n\n28\n00:01:20.360 --> 00:01:22.890\nSo, that means in a lot of scenarios,\nwe end up with our\n\n29\n00:01:22.890 --> 00:01:25.940\nolder devices becoming a root bridge,\nwhich is not something we want.\n\n30\n00:01:25.940 --> 00:01:30.290\nSo, what I wanna kick this episode off\nwith, is showing how we can change,\n\n31\n00:01:30.290 --> 00:01:33.000\nthat, how we can manipulate\nwho the root bridge is.\n\n32\n00:01:33.000 --> 00:01:34.530\nSo in the last episode,\n\n33\n00:01:34.530 --> 00:01:38.520\nwe identified that in my topology,\nlet me get back to my diagram here.\n\n34\n00:01:38.520 --> 00:01:42.711\nThat in my topology,\nI've got three switches, NYCORE1,\n\n35\n00:01:42.711 --> 00:01:46.832\nNYCORE2, and NYACCESS1,\nthese are my three switches.\n\n36\n00:01:46.832 --> 00:01:49.892\nAnd NYCORE1 and NYCORE2 are 3750s,\n\n37\n00:01:49.892 --> 00:01:55.423\nthey're nice non-blocking switches\nthat they're really good hardware.\n\n38\n00:01:55.423 --> 00:02:00.886\nAnd then NYACCESS1, it's a 2960,\nit's a good switch but it's lower end.\n\n39\n00:02:00.886 --> 00:02:04.336\nIt doesn't have as many features,\nit can't do layer three stuff,\n\n40\n00:02:04.336 --> 00:02:05.857\nit's only really layer two.\n\n41\n00:02:05.857 --> 00:02:11.010\nIs really just a basic device but\nthat 2960 had the lowest MAC address.\n\n42\n00:02:11.010 --> 00:02:13.390\nAnd so it became the root.\n\n43\n00:02:13.390 --> 00:02:14.865\nNow what do I care?\n\n44\n00:02:14.865 --> 00:02:18.005\nI can leave it as the root,\nwhatever, right?\n\n45\n00:02:18.005 --> 00:02:24.090\nBut because it's the root,\nit's not going to shut off any ports.\n\n46\n00:02:24.090 --> 00:02:26.242\nThe root bridge doesn't\nshut off its own ports.\n\n47\n00:02:26.242 --> 00:02:32.310\nIt's gonna rely on the other switches to\nshut off their ports to fix the loop.\n\n48\n00:02:32.310 --> 00:02:36.570\nSo when we look at this topology, I've\ngot a link here running to NYCORE2, and\n\n49\n00:02:36.570 --> 00:02:38.973\na link here running to NYCORE1,\nthose are gonna be up.\n\n50\n00:02:38.973 --> 00:02:41.709\nThose are gonna be up,\nthose gonna be up and running.\n\n51\n00:02:41.709 --> 00:02:44.833\nAnd then over here,\nI've got these redundant links, and\n\n52\n00:02:44.833 --> 00:02:47.850\nthey're going to have to be\nclosed off to stop the loop.\n\n53\n00:02:47.850 --> 00:02:51.166\nSo I expect to see some of these\ninterfaces shut down to solve that,\n\n54\n00:02:51.166 --> 00:02:52.150\nall right.\n\n55\n00:02:52.150 --> 00:02:53.450\nLet's go see what that looks like.\n\n56\n00:02:53.450 --> 00:02:57.058\nI'm gonna go over to my root bridge and\nwe'll start right there in NYACCESS1.\n\n57\n00:02:57.058 --> 00:03:01.620\nSo on NYACCESS1 this is the root bridge,\nthis is the guy, the head honcho,\n\n58\n00:03:01.620 --> 00:03:03.390\nthe person who's in charge.\n\n59\n00:03:03.390 --> 00:03:05.090\nAnd when I take a look at it,\n\n60\n00:03:05.090 --> 00:03:08.880\nI expect to see all the interfaces\nbeing up and running.\n\n61\n00:03:08.880 --> 00:03:13.620\nIf you run show spanning-tree,\nyou'll see the current\n\n62\n00:03:13.620 --> 00:03:18.550\nSpanning Tree status and what we looked\nat in the last episode was this top part.\n\n63\n00:03:18.550 --> 00:03:21.870\nBut beneath it,\nis where I get my interface summary and\n\n64\n00:03:21.870 --> 00:03:24.640\nyou're only gonna see interfaces\nthat have link lights.\n\n65\n00:03:24.640 --> 00:03:27.430\nSo on this switch, it's only got\nthree ports that are plugged in.\n\n66\n00:03:27.430 --> 00:03:28.660\nIf the other ports are empty,\n\n67\n00:03:28.660 --> 00:03:32.070\nif there's no cable, Spanning Tree doesn't\nrun on a port that has no cable in it.\n\n68\n00:03:32.070 --> 00:03:36.668\nSo it's gotta have at least a link light\nbefore it participates in Spanning Tree.\n\n69\n00:03:36.668 --> 00:03:40.622\nSo I see these three interfaces,\nport 1, port 23, and port 24.\n\n70\n00:03:40.622 --> 00:03:47.040\nPort 23 is running over to NYCORE2 and\nport 24 is running over to NYCORE1.\n\n71\n00:03:48.330 --> 00:03:50.990\nAnd as I look at them,\nthey each have a role and\n\n72\n00:03:50.990 --> 00:03:53.840\nsee how the role is listed as Desg?\n\n73\n00:03:53.840 --> 00:03:56.350\nThat means these are what\nare called designated ports.\n\n74\n00:03:57.580 --> 00:04:00.840\nIn Spanning Tree, ports have three roles.\n\n75\n00:04:00.840 --> 00:04:05.450\nThere's designated,\nnon-designated and root.\n\n76\n00:04:05.450 --> 00:04:09.330\nA designated port, that's one that's\nturned on and forwarding traffic.\n\n77\n00:04:09.330 --> 00:04:11.390\nIt's allowed to move data across it.\n\n78\n00:04:11.390 --> 00:04:15.820\nIt's designated as a valid non-looping\nport and it's happy, right?\n\n79\n00:04:15.820 --> 00:04:18.242\nSo that's a designated port and\n\n80\n00:04:18.242 --> 00:04:22.736\non a root bridge,\nI expect all of my ports to be designated.\n\n81\n00:04:22.736 --> 00:04:27.790\nOn a non-root bridge is where we're\ngonna see the other two states.\n\n82\n00:04:27.790 --> 00:04:31.190\nThe other two states, the root port.\n\n83\n00:04:31.190 --> 00:04:34.410\nThe root port means that this\nports is the closest one\n\n84\n00:04:34.410 --> 00:04:36.460\nto whoever the route is the route is.\n\n85\n00:04:36.460 --> 00:04:40.580\nSo for example, when I look at my\ntopology, let's look at NYCORE2.\n\n86\n00:04:40.580 --> 00:04:43.890\nNYCORE2 is 3 connections that\nlead to the other switches.\n\n87\n00:04:43.890 --> 00:04:49.230\nThis connection here, on Fa1/0/22 is\ndirectly connected to the root bridge,\n\n88\n00:04:49.230 --> 00:04:51.670\nso that should be the root port.\n\n89\n00:04:51.670 --> 00:04:56.910\nIf I go look at Fa1/0/22 that\nshould be the root port.\n\n90\n00:04:56.910 --> 00:05:02.410\nThese other ports will then either\nbe designated or non-designated.\n\n91\n00:05:02.410 --> 00:05:05.170\nDesignated means, hey,\nthey're not the closest to the root, but\n\n92\n00:05:05.170 --> 00:05:07.890\nthey can still carry traffic and\nthey're not looping.\n\n93\n00:05:07.890 --> 00:05:12.890\nNon designated means it's not the closest\nto the root and it's creating a loop so\n\n94\n00:05:12.890 --> 00:05:14.530\nI'm gonna block it off, right?\n\n95\n00:05:14.530 --> 00:05:19.150\nSo those are the three roles, so lets go\nlook NYCORE2 and see if we've got that.\n\n96\n00:05:19.150 --> 00:05:23.125\nSo I'll jump over to NYCORE2,\nI'm gonna run that same show\n\n97\n00:05:23.125 --> 00:05:29.000\nspanning-tree and\ntake a look at what we've got.\n\n98\n00:05:29.000 --> 00:05:32.920\nAnd so, as I look at here,\nsee how I've got my role,\n\n99\n00:05:32.920 --> 00:05:36.010\ndesignated, root, designated, designated.\n\n100\n00:05:36.010 --> 00:05:38.570\nPort Fa1/0/22 is the root\nport its pointing\n\n101\n00:05:40.540 --> 00:05:45.800\nme towards the root bridge and\neverybody else is designated.\n\n102\n00:05:45.800 --> 00:05:49.170\nThey're opt and they're happy in\nthere porting traffic, all right?\n\n103\n00:05:49.170 --> 00:05:52.060\nNow I know for a fact that ports 23 and\n\n104\n00:05:52.060 --> 00:05:57.310\n24 are creating a loop at a minimum,\nthey're creating a loop right here.\n\n105\n00:05:57.310 --> 00:06:00.030\nJust a loop between these two bridges, but\n\n106\n00:06:00.030 --> 00:06:04.380\nthey're also a part of the bigger loop,\nacross these three switches.\n\n107\n00:06:04.380 --> 00:06:07.235\nAnd I know the route bridge\ndidn't turn off any ports and\n\n108\n00:06:07.235 --> 00:06:09.929\nI know this guy isn't\nturning off any ports either.\n\n109\n00:06:09.929 --> 00:06:15.024\nSo that means NYCORE1, core1,\nthe number one switch in my environment,\n\n110\n00:06:15.024 --> 00:06:17.978\nthe most central switch in my environment.\n\n111\n00:06:17.978 --> 00:06:21.770\nMust be shutting off some ports which is\ndefinitely not the topology that I want.\n\n112\n00:06:21.770 --> 00:06:24.460\nSo let's go take a look at core1 and\nsee if that is indeed the case.\n\n113\n00:06:26.260 --> 00:06:32.950\nSo, on NYCORE1, if I do my show\nspanning-tree, we can take a look at it.\n\n114\n00:06:32.950 --> 00:06:35.800\nAnd sure enough,\nI got all sorts of stuff going on here.\n\n115\n00:06:35.800 --> 00:06:36.992\nI've got a root port.\n\n116\n00:06:36.992 --> 00:06:41.273\nPort Fa1/0/22 is the port\nthat runs right to NYACCESS1.\n\n117\n00:06:41.273 --> 00:06:43.117\nThat's the closest port to the root,\n\n118\n00:06:43.117 --> 00:06:45.430\nthat one is definitely\ngoing to be a happy port.\n\n119\n00:06:45.430 --> 00:06:48.652\nWe don't shut down a root port,\nthat how we get to the root.\n\n120\n00:06:48.652 --> 00:06:51.973\nI've got port Fa1/0/2 that's designated.\n\n121\n00:06:51.973 --> 00:06:56.965\nWell, 1/0/2 doesn't run to another switch,\nit runs to a workstation and so there's no\n\n122\n00:06:56.965 --> 00:07:01.852\nloop there, it's definitely going to be\ndesignated but look at Fa1/0/23 and 24.\n\n123\n00:07:01.852 --> 00:07:06.814\nTheir state is Altn or alternate, okay.\n\n124\n00:07:06.814 --> 00:07:12.098\nNow in normal Spanning Tree Protocol\nthere's no such thing as an alternate.\n\n125\n00:07:12.098 --> 00:07:14.801\nThese are what are called\nnon-designated ports and\n\n126\n00:07:14.801 --> 00:07:17.757\nthis switch is running normal\nSpanning Tree Protocols.\n\n127\n00:07:17.757 --> 00:07:21.416\nSo these are non-designated ports even\nthough they're not labeled that way,\n\n128\n00:07:21.416 --> 00:07:21.969\nall right.\n\n129\n00:07:21.969 --> 00:07:27.256\nBut, Cisco switches actually support\nanother version of Spanning Tree Protocol.\n\n130\n00:07:27.256 --> 00:07:31.469\nThere's 802.1d,\nthat's Spanning Tree Protocol.\n\n131\n00:07:31.469 --> 00:07:37.742\nThen there's 802.1w,\n802.1w is Rapid Spanning Tree Protocol.\n\n132\n00:07:37.742 --> 00:07:41.204\nIt's regular old Spanning Tree Protocol\nthat runs a lot faster.\n\n133\n00:07:41.204 --> 00:07:43.050\nThat, when you have a link failure,\n\n134\n00:07:43.050 --> 00:07:47.475\nit can take regular Spanning Tree Protocol\n30 seconds to bring up the redundant line.\n\n135\n00:07:47.475 --> 00:07:51.748\nBut Rapid Spanning Tree Protocol\nbrings it up instantaneously, very,\n\n136\n00:07:51.748 --> 00:07:55.049\nvery fast and\nit does that by tracking alternate ports.\n\n137\n00:07:55.049 --> 00:07:58.441\nIf I'm running\nRapid Spanning Tree Protocol,\n\n138\n00:07:58.441 --> 00:08:01.678\nthese two are alternates\nto get to the route.\n\n139\n00:08:01.678 --> 00:08:05.690\nBut if I'm not running Rapid, if I'm\nrunning regular Spanning Tree Protocol,\n\n140\n00:08:05.690 --> 00:08:08.130\nthese are just non-designated ports,\nright?\n\n141\n00:08:08.130 --> 00:08:11.710\nAnd non-designated ports\ndon't forward traffic.\n\n142\n00:08:11.710 --> 00:08:15.170\nAnd if you look at the status column,\nsee how these have FWD?\n\n143\n00:08:15.170 --> 00:08:16.320\nThat's forward.\n\n144\n00:08:16.320 --> 00:08:19.220\nAnd then these two have BLK,\nthey're blocking.\n\n145\n00:08:19.220 --> 00:08:21.370\nThey're blocking traffic on the link.\n\n146\n00:08:21.370 --> 00:08:22.610\nThe link has a link light.\n\n147\n00:08:22.610 --> 00:08:23.840\nThere is a cable in it.\n\n148\n00:08:23.840 --> 00:08:26.420\nWe're receiving traffic and\nthrowing it away.\n\n149\n00:08:26.420 --> 00:08:30.260\nBut we're not sending traffic at all\nbecause it's blocking those interfaces\n\n150\n00:08:30.260 --> 00:08:32.140\nto stop the loop.\n\n151\n00:08:32.140 --> 00:08:33.990\nIt's blocking the loop, all right?\n\n152\n00:08:33.990 --> 00:08:35.810\nThat's exactly what I want to see.\n\n153\n00:08:35.810 --> 00:08:38.692\nNow, if you don't know if you are running\nRapid or Regular Spanning Tree,\n\n154\n00:08:38.692 --> 00:08:41.600\nall you have to do is look at the top\nof the showing spanning-tree command.\n\n155\n00:08:41.600 --> 00:08:43.030\nAnd it'll tell you right here.\n\n156\n00:08:43.030 --> 00:08:46.050\nI'm running Spanning Tree Protocol ieee.\n\n157\n00:08:46.050 --> 00:08:47.460\nThat's 802.1d.\n\n158\n00:08:47.460 --> 00:08:50.600\nIf it said I'm running\nSpanning Tree Protocol Rapid,\n\n159\n00:08:50.600 --> 00:08:53.280\nnow I would know that I'm\nrunning the 802.1w instead.\n\n160\n00:08:53.280 --> 00:08:54.710\nThis is not rapid,\n\n161\n00:08:54.710 --> 00:08:59.070\nso even though the label says alternate,\nit's not really an alternate port, right?\n\n162\n00:08:59.070 --> 00:09:01.286\nIt's actually a non-designated port.\n\n163\n00:09:01.286 --> 00:09:07.920\nNow If I were to have a failure, so for\nexample if fa1/0/22 were to go down.\n\n164\n00:09:07.920 --> 00:09:09.220\nLet's do that.\n\n165\n00:09:09.220 --> 00:09:17.170\nIf I get into fa1/0/22,\nI'm gonna shut it down.\n\n166\n00:09:17.170 --> 00:09:18.140\nOkay.\n\n167\n00:09:18.140 --> 00:09:20.060\nI just lost my root port.\n\n168\n00:09:20.060 --> 00:09:22.180\nThat was my connection to the root bridge.\n\n169\n00:09:22.180 --> 00:09:24.350\nWell, I've got these two other interfaces.\n\n170\n00:09:24.350 --> 00:09:26.960\nSays 23 and 24 that can get\nto the root bridge also but\n\n171\n00:09:26.960 --> 00:09:29.200\nthey were creating a loop so\nI was blocking them.\n\n172\n00:09:29.200 --> 00:09:32.450\nWell Spanning Tree is\ngonna start doing stuff.\n\n173\n00:09:32.450 --> 00:09:36.010\nAnd that stuff that it's doing is\ntrying to figure out if a loop is still\n\n174\n00:09:36.010 --> 00:09:37.690\nthere or not.\n\n175\n00:09:37.690 --> 00:09:42.930\nAnd so when I run a show spanning-tree\nnow, look what happened to Port 23.\n\n176\n00:09:42.930 --> 00:09:45.220\nIt became the root port.\n\n177\n00:09:45.220 --> 00:09:47.410\nIt said, I don't have 22 anymore.\n\n178\n00:09:47.410 --> 00:09:50.250\nSo 23 is gonna be my next best one.\n\n179\n00:09:50.250 --> 00:09:53.880\nAnd its status is LRN, okay.\n\n180\n00:09:53.880 --> 00:09:55.050\nLRN is learning.\n\n181\n00:09:55.050 --> 00:09:57.630\nI guess we can talk about\nthese statuses right now.\n\n182\n00:09:57.630 --> 00:10:00.210\nThere's a few different statuses\nthat you'll see on these ports.\n\n183\n00:10:00.210 --> 00:10:04.810\nAnd normally, on any normal day when you\nlook, it's gonna be forward or block.\n\n184\n00:10:04.810 --> 00:10:07.000\nFWD or BLK, right.\n\n185\n00:10:07.000 --> 00:10:10.290\nForward and block means\nSpanning Tree looked at the port,\n\n186\n00:10:10.290 --> 00:10:12.610\nrecognized what it was doing,\nand made a decision.\n\n187\n00:10:12.610 --> 00:10:14.540\nEither, yes, it can forward or,\nno, it can't.\n\n188\n00:10:14.540 --> 00:10:16.550\nThat's what you're normally gonna see.\n\n189\n00:10:17.690 --> 00:10:22.230\nBut occasionally, if you run show spanning\ntree and you get it at just the right time\n\n190\n00:10:22.230 --> 00:10:28.380\nwhile the switch is making a decision,\nyou may see listening and learning.\n\n191\n00:10:28.380 --> 00:10:29.850\nListening and learning.\n\n192\n00:10:29.850 --> 00:10:33.240\nListening, when a port first comes up.\n\n193\n00:10:33.240 --> 00:10:36.490\nRight so I just plugged a cable\ninto it and got a link light.\n\n194\n00:10:36.490 --> 00:10:39.940\nSpanning Tree will assume\nthat there's a loop.\n\n195\n00:10:39.940 --> 00:10:42.100\nIt says hey there's\na new cable it's a loop.\n\n196\n00:10:42.100 --> 00:10:45.930\nIt may not be a loop, it may be a\nperfectly healthy port but it assumes that\n\n197\n00:10:45.930 --> 00:10:49.940\nit might be and so it holds the port\ndown and it puts it in listening mode.\n\n198\n00:10:49.940 --> 00:10:51.600\nAnd it listens on that port.\n\n199\n00:10:51.600 --> 00:10:54.460\nAnd what its listening for are BPDUs.\n\n200\n00:10:54.460 --> 00:10:55.570\nIt will hear traffic and\n\n201\n00:10:55.570 --> 00:10:58.510\nthrow it away, any traffic that comes in\non the interface, its throwing it away.\n\n202\n00:10:58.510 --> 00:11:00.710\nBut its listening for BPDUs.\n\n203\n00:11:00.710 --> 00:11:03.570\nAnd it will do that for\nfifteen seconds and\n\n204\n00:11:03.570 --> 00:11:09.250\nin fifteen seconds if it hears a BPDU\nthen it can look at that and compare\n\n205\n00:11:09.250 --> 00:11:12.770\nto the BPDUs its gotten on every other\ninterface and see if there is a loop.\n\n206\n00:11:12.770 --> 00:11:17.270\nIf there is a loop,\nit just keeps blocking it, right?\n\n207\n00:11:17.270 --> 00:11:19.800\nBut if there isn't a loop,\nthen it can move it on and\n\n208\n00:11:19.800 --> 00:11:21.600\nmake the port healthy, right?\n\n209\n00:11:21.600 --> 00:11:27.360\nSo listening is a 15 second window where\nit's just watching the traffic, all right?\n\n210\n00:11:27.360 --> 00:11:32.060\nAssuming it doesn't see a BPDU in 15\nseconds, or it does see a BPDU but\n\n211\n00:11:32.060 --> 00:11:35.760\nit's not a loop, then after 15\nseconds it'll transition to learning.\n\n212\n00:11:35.760 --> 00:11:37.580\nAnd so apparently it took me\n15 seconds to get here and\n\n213\n00:11:37.580 --> 00:11:40.080\nrun show spanning tree because\nit was already in learning.\n\n214\n00:11:40.080 --> 00:11:43.470\nAnd once it's in learning it's\nstill not allowing traffic.\n\n215\n00:11:43.470 --> 00:11:47.130\nThe traffic is still getting thrown\naway but it's learning MAC addresses.\n\n216\n00:11:47.130 --> 00:11:49.850\nIt's hearing the MAC addresses that\nare coming across the line and\n\n217\n00:11:49.850 --> 00:11:51.370\nadding them to the MAC address table.\n\n218\n00:11:51.370 --> 00:11:54.400\nSo it's saying I can get to this MAC, this\nMAC, this MAC and popping them in there.\n\n219\n00:11:54.400 --> 00:11:56.160\nAnd all the while still listening for\n\n220\n00:11:56.160 --> 00:11:58.020\nBPDUs just in case\nthe loop is still there.\n\n221\n00:11:59.170 --> 00:12:01.060\nAnd will learn for 15 seconds.\n\n222\n00:12:02.120 --> 00:12:07.370\nAnd so after 30 seconds, 15 seconds\nof listening, 15 seconds of learning,\n\n223\n00:12:07.370 --> 00:12:12.410\nthen will transition to forwarding\nif it's a healthy port.\n\n224\n00:12:12.410 --> 00:12:14.230\nOkay?\nSo if I run it again now,\n\n225\n00:12:14.230 --> 00:12:17.750\nshow spanning-tree,\nit should be forwarding by now, and it is.\n\n226\n00:12:17.750 --> 00:12:20.740\nThere's my root port and it's forwarding.\n\n227\n00:12:20.740 --> 00:12:21.530\nOkay.\n\n228\n00:12:21.530 --> 00:12:23.510\nLet's go a little faster this time.\n\n229\n00:12:23.510 --> 00:12:26.150\nI'm gonna go and shut down this port.\n\n230\n00:12:26.150 --> 00:12:28.630\nAll right.\n\n231\n00:12:28.630 --> 00:12:31.490\nAnd actually, let me make sure\nI can do this as fast possible.\n\n232\n00:12:31.490 --> 00:12:35.870\nI'm gonna do a show spanning-tree.\n\n233\n00:12:35.870 --> 00:12:38.510\nAnd I'm going to include just Fa1/0/24.\n\n234\n00:12:38.510 --> 00:12:42.270\nAll right.\nSo there's the status of that\n\n235\n00:12:42.270 --> 00:12:45.920\nport right now, and I can see that\nit's alternate blocking, okay?\n\n236\n00:12:45.920 --> 00:12:51.650\nI'm gonna shut down this interface and\nthen as fast as I can, there we go.\n\n237\n00:12:51.650 --> 00:12:53.280\nSee how I got listening?\n\n238\n00:12:53.280 --> 00:12:55.810\nAnd it's gonna listen for 15 seconds.\n\n239\n00:12:55.810 --> 00:12:57.590\nLIS, that's listening.\n\n240\n00:12:57.590 --> 00:12:59.928\nAnd then it's gonna learn for 15 seconds.\n\n241\n00:12:59.928 --> 00:13:01.689\nAnytime now.\n\n242\n00:13:01.689 --> 00:13:04.930\n[LAUGH] Longest 15 seconds ever.\n\n243\n00:13:04.930 --> 00:13:06.320\nI guess, I was trying to rush.\n\n244\n00:13:06.320 --> 00:13:07.050\nI didn't have to rush.\n\n245\n00:13:07.050 --> 00:13:09.090\nThere we go, so\nnow it's transitioning to learning.\n\n246\n00:13:09.090 --> 00:13:12.080\nNow this whole time it's\nnot moving any traffic.\n\n247\n00:13:12.080 --> 00:13:15.098\nSo I have an outage on\nmy network right now.\n\n248\n00:13:15.098 --> 00:13:17.090\nBut after 30 seconds\nit'll square itself away,\n\n249\n00:13:17.090 --> 00:13:20.000\nfigure out what's going on and\nthen that port will go healthy, right.\n\n250\n00:13:20.000 --> 00:13:22.990\nIt'll go to forwarding and that's gonna\nhappen anytime, oop there is goes, and\n\n251\n00:13:22.990 --> 00:13:23.740\nnow it's forwarding.\n\n252\n00:13:23.740 --> 00:13:25.850\nBut I had a 30 second down time.\n\n253\n00:13:25.850 --> 00:13:29.755\nI get redundancy, it's just not very\nfast redundancy, and we'll talk about\n\n254\n00:13:29.755 --> 00:13:32.625\nRapid Spanning Tree a little more later\nand see how I can kind of fix that.\n\n255\n00:13:32.625 --> 00:13:38.095\nBut what we just saw was listening,\nlearning, forwarding, and blocking.\n\n256\n00:13:38.095 --> 00:13:41.505\nNow, if we go to blocking, we don't just\nblock forever and forget about it, right?\n\n257\n00:13:41.505 --> 00:13:44.205\nWhen you go to blocking, every so often,\n\n258\n00:13:44.205 --> 00:13:47.325\nI believe it's every 20 seconds it\ntells us in show spanning-tree.\n\n259\n00:13:47.325 --> 00:13:48.755\n>> The max age.\n\n260\n00:13:48.755 --> 00:13:50.535\n>> Yeah, the maximum age, there it is.\n\n261\n00:13:50.535 --> 00:13:52.080\nYup, 20 seconds.\n\n262\n00:13:52.080 --> 00:13:53.200\nEvery 20 seconds.\n\n263\n00:13:53.200 --> 00:13:56.260\nIf you have a port that's blocking,\nit'll transition it to listening for\n\n264\n00:13:56.260 --> 00:13:57.670\na little bit, just to listen and see.\n\n265\n00:13:57.670 --> 00:13:59.230\nMaybe the loop went away.\n\n266\n00:13:59.230 --> 00:14:02.480\nBut odds are the listen and see BPDUs and\nsay, nope, loop's still there, and\n\n267\n00:14:02.480 --> 00:14:03.700\ngo right back to blocking.\n\n268\n00:14:03.700 --> 00:14:07.930\nAnd so it'll continue to block and\nwait and then it'll go and listen again.\n\n269\n00:14:07.930 --> 00:14:10.980\nAnd so it'll just keep doing that,\nover and over again.\n\n270\n00:14:10.980 --> 00:14:14.000\nAnd if I stop getting BPDUs on a port for\n\n271\n00:14:14.000 --> 00:14:17.350\n20 seconds, that's the maximum\nage that it'll store BPDU.\n\n272\n00:14:17.350 --> 00:14:20.060\nAnd so after 20 seconds if\nI don't hear any BPDUs then\n\n273\n00:14:20.060 --> 00:14:23.420\nmaybe the loop is gone anyway and so\nwe'll go into listening and try again.\n\n274\n00:14:23.420 --> 00:14:28.050\nSo, it's doing a few different things\nthere to see what's gonna happen, and\n\n275\n00:14:28.050 --> 00:14:29.450\nsee if it can bring\nthat interface back up.\n\n276\n00:14:29.450 --> 00:14:30.760\nIt's constantly checking.\n\n277\n00:14:30.760 --> 00:14:33.040\nSo, it's not fast, but it is doing it.\n\n278\n00:14:33.040 --> 00:14:36.390\nAnd 30 seconds at the end of the day,\nfor an end user, hey for\n\n279\n00:14:36.390 --> 00:14:38.190\n30 seconds they couldn't\nget to the internet.\n\n280\n00:14:38.190 --> 00:14:39.290\nIs that the end of the world?\n\n281\n00:14:39.290 --> 00:14:40.280\nNo.\n\n282\n00:14:40.280 --> 00:14:44.020\nBut if you're Amazon.com you couldn't\nprocess transactions for 30 seconds,\n\n283\n00:14:44.020 --> 00:14:45.650\nthat could be a lot of money.\n\n284\n00:14:45.650 --> 00:14:48.710\nSo there are other alternatives out\nthere to Spanning Tree that can\n\n285\n00:14:48.710 --> 00:14:51.082\nkind of alleviate that for us.\n\n286\n00:14:51.082 --> 00:14:54.440\nAll right now the whole point of this\nis I wanted to change who my root was.\n\n287\n00:14:54.440 --> 00:14:54.960\nRight?\n\n288\n00:14:54.960 --> 00:14:57.340\nI don't want my access\nswitch to be the root,\n\n289\n00:14:57.340 --> 00:14:59.410\nI want NYCORE1 to be the route, right?\n\n290\n00:14:59.410 --> 00:15:00.420\nSo first thing, and\n\n291\n00:15:00.420 --> 00:15:05.440\nI need to get those interfaces\nturned back on that I turned off.\n\n292\n00:15:05.440 --> 00:15:10.240\nSo I'm gonna get back into fa1/0/22 and\n23, and I'll do a #no shutdown on them.\n\n293\n00:15:10.240 --> 00:15:13.360\nAnd we'll take a look at Spanning Tree,\nand\n\n294\n00:15:13.360 --> 00:15:15.580\nsee how they're both going into listening?\n\n295\n00:15:15.580 --> 00:15:16.890\nAnd so they're gonna listen.\n\n296\n00:15:16.890 --> 00:15:19.740\nWhile they're listening Port\n24 is still the root port.\n\n297\n00:15:19.740 --> 00:15:23.420\nBut in a minute one of these two\nare gonna become that root port.\n\n298\n00:15:23.420 --> 00:15:25.230\nNow, how does it pick that, right?\n\n299\n00:15:25.230 --> 00:15:29.780\nHow does it pick which port is going\nto be the root port versus not?\n\n300\n00:15:29.780 --> 00:15:33.940\nRight, well, it uses actually several\ndifferent criteria to make that decision.\n\n301\n00:15:33.940 --> 00:15:36.890\nIf there’s only one connection\nthat runs directly to the root,\n\n302\n00:15:36.890 --> 00:15:38.010\nit’s pretty easy, right?\n\n303\n00:15:38.010 --> 00:15:41.560\nIt’s as, hey and you’re directly\nconnected, we’ll go that route, all right.\n\n304\n00:15:41.560 --> 00:15:45.260\nNext, it uses bandwidth,\nevery interface has a bandwidth and\n\n305\n00:15:45.260 --> 00:15:47.780\nSpanning Tree associates a cost to that.\n\n306\n00:15:47.780 --> 00:15:50.310\nSee how these all have a cost of 19?\n\n307\n00:15:50.310 --> 00:15:52.320\nA 100 megabit line has a cost of 19.\n\n308\n00:15:52.320 --> 00:15:54.750\nAnd so these all have a cost of 19.\n\n309\n00:15:54.750 --> 00:15:57.271\nIf it's more than one hop away\nfrom wherever it's going,\n\n310\n00:15:57.271 --> 00:15:59.593\nthat might be higher but\nthese all have a cost of 19.\n\n311\n00:15:59.593 --> 00:16:03.532\nIf I had a gigabit link\nwhich had a cost of 4 So,\n\n312\n00:16:03.532 --> 00:16:09.496\na gigabyte link would have a cost of 4,\nthen that's lower than 19.\n\n313\n00:16:09.496 --> 00:16:12.280\nWe'd prefer a gigalink,\nif we had it, over 100 megabits.\n\n314\n00:16:12.280 --> 00:16:15.580\nSo it does pay attention to\nbandwidth in the form of cost.\n\n315\n00:16:15.580 --> 00:16:19.200\nBut if the cost is all tied like this,\nwhat's left?\n\n316\n00:16:19.200 --> 00:16:21.920\nWell, after that, it's a first come,\nfirst serve type scenario.\n\n317\n00:16:21.920 --> 00:16:24.670\nSee over here,\nwe've got this priority number?\n\n318\n00:16:24.670 --> 00:16:27.090\nEvery port gets a port ID.\n\n319\n00:16:27.090 --> 00:16:30.710\nAnd the port ID does not match the number\non the front of the switch, right?\n\n320\n00:16:30.710 --> 00:16:34.510\nSo see how I've got port 23 right here?\n\n321\n00:16:34.510 --> 00:16:38.570\nBut spanning tree has given it\na number of 25, so the numbers don't\n\n322\n00:16:38.570 --> 00:16:41.490\nnecessarily match up, but they all do\nhave a number, they do go in order.\n\n323\n00:16:41.490 --> 00:16:44.530\nSo if I have to pick between port 22 and\n23,\n\n324\n00:16:44.530 --> 00:16:49.230\nthey're both 100 megabit,\nbut 22 is the first port.\n\n325\n00:16:49.230 --> 00:16:51.580\n23 is the second one,\nwe'll pick 22, right?\n\n326\n00:16:51.580 --> 00:16:55.187\nWhen I shut down 22, technically,\n23 and 24 are equal, right?\n\n327\n00:16:55.187 --> 00:16:59.976\nWhen you look at my topology,\nwhen I shut down 22 up here, 23 and\n\n328\n00:16:59.976 --> 00:17:05.380\n24 are both 100 megabit, both running\nthe same way to the same switch.\n\n329\n00:17:05.380 --> 00:17:06.730\nThey're effectively equal.\n\n330\n00:17:06.730 --> 00:17:09.150\nIt picked 23 cuz it was\na lower number than 24.\n\n331\n00:17:09.150 --> 00:17:13.310\nSo the port number is\nthe final tie breaker in that.\n\n332\n00:17:13.310 --> 00:17:16.170\nSo it'll basically kind of run\ndown that process, costs or\n\n333\n00:17:16.170 --> 00:17:17.990\nbandwidth being kind of\nthe more important one.\n\n334\n00:17:19.600 --> 00:17:24.160\nAll right, so it's gonna finish its\nlittle, kind of, recalculation there.\n\n335\n00:17:24.160 --> 00:17:25.540\nAnd when it's done,\n\n336\n00:17:25.540 --> 00:17:29.000\nit should be back to the way it was\nbefore I started messing with it.\n\n337\n00:17:29.000 --> 00:17:30.071\nThere we go.\n\n338\n00:17:30.071 --> 00:17:32.590\n23 and 24 are blocking,\nand 22 is the route.\n\n339\n00:17:32.590 --> 00:17:37.440\nAll right, what I wanna do is,\nI wanna make NYCORE1 the root bridge.\n\n340\n00:17:37.440 --> 00:17:41.060\nAnd the easiest way to do that is to\nchange the priority number, right?\n\n341\n00:17:41.060 --> 00:17:43.350\nCuz priority number is\nwhat we look at first.\n\n342\n00:17:43.350 --> 00:17:45.260\nAnd if there's a tie,\nthen it goes to MAC address.\n\n343\n00:17:45.260 --> 00:17:47.300\nCan I change the switch's MAC address?\n\n344\n00:17:47.300 --> 00:17:48.290\nNot really, right?\n\n345\n00:17:48.290 --> 00:17:51.120\nI mean, there's certain ways that you can\nkinda manipulate it to cause that, but\n\n346\n00:17:51.120 --> 00:17:52.940\nnormally, you can't.\n\n347\n00:17:52.940 --> 00:17:54.970\nPriority is there,\nyou just change priority, right?\n\n348\n00:17:54.970 --> 00:17:57.770\nAnd there's two ways to\nchange the priority.\n\n349\n00:17:57.770 --> 00:18:01.710\nThere's a little alias that I can\nuse with the Cisco switches, or\n\n350\n00:18:01.710 --> 00:18:04.780\nI can actually manually input a number.\n\n351\n00:18:04.780 --> 00:18:06.220\nBut here's where things\nget a little tricky.\n\n352\n00:18:06.220 --> 00:18:07.880\nLet me show you how this works.\n\n353\n00:18:07.880 --> 00:18:10.460\nI'll start with the alias, right?\n\n354\n00:18:10.460 --> 00:18:13.350\nWith the alias, it makes it kinda easy.\n\n355\n00:18:13.350 --> 00:18:14.150\nWith spanning tree,\n\n356\n00:18:14.150 --> 00:18:18.490\nremember that I'm running an instance\nof spanning tree for every single vlan.\n\n357\n00:18:18.490 --> 00:18:23.410\nSo I could have a switch be a root for\none vlan and not a root for another vlan.\n\n358\n00:18:23.410 --> 00:18:25.950\nSo I have to go through and\nspecify this on a per vlan basis.\n\n359\n00:18:25.950 --> 00:18:27.390\nOr I can knock them all out at once and\n\n360\n00:18:27.390 --> 00:18:29.400\ndo a whole range of vlans\nif I wanna go that route.\n\n361\n00:18:29.400 --> 00:18:35.660\nSo the way it works is, you get in config,\nand you do spanning-tree.\n\n362\n00:18:35.660 --> 00:18:41.960\nAnd then vlan, and you can specify\none vlan or a range of vlans.\n\n363\n00:18:41.960 --> 00:18:46.450\nIf I want this just to be the root for\nvlan 1, then I would say 1, and that's it.\n\n364\n00:18:46.450 --> 00:18:51.702\nOr I could do 1-5 or 1-4095.\n\n365\n00:18:51.702 --> 00:18:53.440\nThat's gonna make sure\nthat I'm the root for\n\n366\n00:18:53.440 --> 00:18:57.560\nevery single vlan out there,\neven ones that don't exist yet.\n\n367\n00:18:57.560 --> 00:19:00.720\nSo if I make them in the future,\nthis guy will still be the root.\n\n368\n00:19:00.720 --> 00:19:04.140\nIf I were to do it manually and\njust say vlan 1, then what's gonna\n\n369\n00:19:04.140 --> 00:19:07.670\nhappen is later on, I create a vlan 2,\nand somebody else is the root, right?\n\n370\n00:19:07.670 --> 00:19:10.220\nThis will make sure that I'm the root for\neverything.\n\n371\n00:19:10.220 --> 00:19:16.030\nAnd then after that, we can define\nwhether we want it to be the root or not.\n\n372\n00:19:16.030 --> 00:19:19.426\nAnd so you can come in, and you can say\nroot, and then there's actually a little\n\n373\n00:19:19.426 --> 00:19:21.828\nbit extra to it,\nwhere we can say primary or secondary.\n\n374\n00:19:21.828 --> 00:19:24.366\nAll right, this is neat because\nif we say root primary,\n\n375\n00:19:24.366 --> 00:19:26.420\nI want this guy to be the root.\n\n376\n00:19:26.420 --> 00:19:31.310\nI can then go to another switch,\nlike NYCORE2, and say secondary.\n\n377\n00:19:31.310 --> 00:19:34.610\nNow if the root were to ever fail for\nsome reason, if CORE1 were to fail and\n\n378\n00:19:34.610 --> 00:19:36.900\ngo offline,\nCORE2 would take over as the root.\n\n379\n00:19:36.900 --> 00:19:38.910\nI picked a secondary, right?\n\n380\n00:19:38.910 --> 00:19:44.380\nSo the full command is,\nspanning-tree vlan,\n\n381\n00:19:44.380 --> 00:19:48.910\na single vlan or\na range of vlans, root primary.\n\n382\n00:19:48.910 --> 00:19:52.443\nAnd on my other switch, I could go in and\nsay, root secondary, okay.\n\n383\n00:19:52.443 --> 00:19:58.282\nAnd it looks like I got a bad, shoot,\nI think I have to do 494, don't I?\n\n384\n00:19:58.282 --> 00:20:01.246\nOr actually, this switch, you do\nhave to be careful on some of these,\n\n385\n00:20:01.246 --> 00:20:03.430\nsome switches don't support\nthe higher numbers.\n\n386\n00:20:03.430 --> 00:20:09.852\nThere we go, 4094, sorry, 4095 is\ntechnically a reserved vlan special.\n\n387\n00:20:09.852 --> 00:20:12.026\nWhat do I mean here talking\nabout a special number?\n\n388\n00:20:12.026 --> 00:20:18.657\nvlans, vlans are a,\nwhat is that, a 12 bit number?\n\n389\n00:20:18.657 --> 00:20:19.844\nIt's a 12 bit number, if I remember right.\n\n390\n00:20:19.844 --> 00:20:20.516\nBut anyhow,\n\n391\n00:20:20.516 --> 00:20:24.562\nthere's a certain amount of bits that\nare set aside to represent that number.\n\n392\n00:20:24.562 --> 00:20:27.217\nAnd so we end up with 0 through 4095.\n\n393\n00:20:27.217 --> 00:20:29.980\nThose are the numbers that we can\nrepresent with the bits that we have.\n\n394\n00:20:29.980 --> 00:20:35.663\nNow, because those bits are being\nstuck into the priority,\n\n395\n00:20:35.663 --> 00:20:42.470\nthe priority can be 0 through 65535,\nand it's a 16 bit number.\n\n396\n00:20:43.500 --> 00:20:50.140\nWell, I'm stealing 12 bits to be\nable to represent this vlan number,\n\n397\n00:20:50.140 --> 00:20:54.450\nso what does that leave for\nthe rest of my priority?\n\n398\n00:20:54.450 --> 00:20:55.575\nIt only leaves 4 more bits, right?\n\n399\n00:20:55.575 --> 00:20:59.170\nI really don't have a lot of bits\navailable for the rest of my vlan numbers.\n\n400\n00:20:59.170 --> 00:21:04.030\nSo, when we go to set our priority number,\nwe actually have to remember about these\n\n401\n00:21:04.030 --> 00:21:07.300\nvlans, and we can't just pick any\nold priority number that we want.\n\n402\n00:21:07.300 --> 00:21:12.235\nIf you're on an HP switch or a Juniper\nswitch or whatever, you can pick whatever\n\n403\n00:21:12.235 --> 00:21:16.802\npriority number you want, but\non a Cisco switch, there's really only,\n\n404\n00:21:16.802 --> 00:21:20.948\nwhat is it, 16, I think,\ndifferent numbers that you can pick.\n\n405\n00:21:20.948 --> 00:21:25.645\nEven though it's 0 through 65535\nbecause it's reserving certain ones to\n\n406\n00:21:25.645 --> 00:21:27.380\nrepresent the vlan numbers.\n\n407\n00:21:27.380 --> 00:21:31.360\nIt's gotta reserve those bits for\nthat value.\n\n408\n00:21:31.360 --> 00:21:35.630\nSo when I run this command here,\nspanning-tree vlan 1-4095 root primary,\n\n409\n00:21:35.630 --> 00:21:39.400\nI don't have to worry about\nthose numbers at all.\n\n410\n00:21:39.400 --> 00:21:42.520\nIt figures it out for me, and\nit does a great job of it.\n\n411\n00:21:42.520 --> 00:21:47.669\nSo if I do a show spanning-tree,\nit has lowered my\n\n412\n00:21:47.669 --> 00:21:53.860\npriority to 24576,\nwhere did that number come from?\n\n413\n00:21:53.860 --> 00:21:56.620\n24576, what's that all about?\n\n414\n00:21:56.620 --> 00:22:02.077\nWell, it has to decrease our\nnumber in increments of 4096,\n\n415\n00:22:02.077 --> 00:22:07.645\nthat amount of numbers, so\nthat's how it ends up at 24576.\n\n416\n00:22:07.645 --> 00:22:12.150\nIt's a really weird kind of system, but\nit does it for me if I use the aliases.\n\n417\n00:22:12.150 --> 00:22:15.586\nIf I don't use the alias, if I come in and\n\n418\n00:22:15.586 --> 00:22:20.238\nsay spanning-tree vlan 1-4094 priority,\nand\n\n419\n00:22:20.238 --> 00:22:24.904\nthen specify a priority number,\nsee what it tells me?\n\n420\n00:22:24.904 --> 00:22:28.486\nI can specify 0 through 61440, and\n\n421\n00:22:28.486 --> 00:22:34.170\nthe bridge priority is in\nincrements of 4096, okay.\n\n422\n00:22:34.170 --> 00:22:38.184\nRemember I said this goes up to 65536,\nor I think I said 5.\n\n423\n00:22:38.184 --> 00:22:42.686\nWell if you take 61440 and\n\n424\n00:22:42.686 --> 00:22:49.670\nyou add on 4096, you end up at 65536.\n\n425\n00:22:49.670 --> 00:22:54.950\nNow you can't have a vlan 4096, right?\n\n426\n00:22:54.950 --> 00:22:57.487\nWe just saw a minute ago,\nyou can't have a vlan of 4095 either.\n\n427\n00:22:57.487 --> 00:23:03.470\nSo really 4094 is the highest.\n\n428\n00:23:03.470 --> 00:23:08.535\nIf I were to add 4094 to 61440,\nI would have 65534, right?\n\n429\n00:23:08.535 --> 00:23:12.950\nI would be able to represent all of\nmy vlans added to that priority.\n\n430\n00:23:12.950 --> 00:23:14.330\nYou have to take that into consideration.\n\n431\n00:23:14.330 --> 00:23:17.750\nI need to be able to add the highest vlan\nnumber to whatever number I pick and\n\n432\n00:23:17.750 --> 00:23:19.120\nstill have room.\n\n433\n00:23:19.120 --> 00:23:23.000\nSo when we go to assign these,\nit's gotta be in those increments, right?\n\n434\n00:23:23.000 --> 00:23:27.129\nAnd if you ever don't know the increments,\nyou can always fire up a calculator.\n\n435\n00:23:28.280 --> 00:23:33.323\nAnd you can just start with 4096 and\njust continue to add 4096,\n\n436\n00:23:33.323 --> 00:23:36.529\nand these are the valid\nnumbers I could pick.\n\n437\n00:23:36.529 --> 00:23:40.897\nI could set my priority to 0, 4096, 8192,\n\n438\n00:23:40.897 --> 00:23:44.293\nI could then go to 12288, and so on,\n\n439\n00:23:44.293 --> 00:23:49.830\njust adding in these increments,\n16384, and so on.\n\n440\n00:23:49.830 --> 00:23:54.074\nIf I try and add some other number,\nit's gonna get unhappy with me.\n\n441\n00:23:54.074 --> 00:23:57.987\nSo if I try and\nset my priority to 111, right,\n\n442\n00:23:57.987 --> 00:24:02.582\nwhen I do that,\nit tells me these are the allowed values.\n\n443\n00:24:02.582 --> 00:24:03.563\nHere's the numbers I can put in.\n\n444\n00:24:03.563 --> 00:24:05.930\nSee they're the same numbers I got\non my calculator a minute ago.\n\n445\n00:24:05.930 --> 00:24:06.503\nRight.\n\n446\n00:24:06.503 --> 00:24:09.629\nSo I only end up with 16.\n\n447\n00:24:09.629 --> 00:24:13.117\n16 different priorities that I can\nactually use because the other bits\n\n448\n00:24:13.117 --> 00:24:14.940\nare being used by the VLAN Ids.\n\n449\n00:24:14.940 --> 00:24:15.500\nAll right.\n\n450\n00:24:15.500 --> 00:24:19.600\nSo If I want to make sure that\nthis guy becomes the root,\n\n451\n00:24:19.600 --> 00:24:21.440\nI could set him supper low, like 4096.\n\n452\n00:24:21.440 --> 00:24:25.240\nAnd the secondary, I could set it 8192.\n\n453\n00:24:25.240 --> 00:24:29.930\nBut when I use those aliases, it knows\nthat all my switches default to 32768, so\n\n454\n00:24:29.930 --> 00:24:37.430\nwhen I run the spanning-tree vlan 1 root\nprimary, it lowers me by two increments.\n\n455\n00:24:37.430 --> 00:24:43.795\nIt lowers me down to 24,576, and if I run\nspanning-tree v-lan 1 root secondary,\n\n456\n00:24:43.795 --> 00:24:49.010\nit lowers them by one increment,\nand it makes me 28672, all right?\n\n457\n00:24:49.010 --> 00:24:53.500\nAnd as long as we don't adjust\nthe priorities on any other switches in\n\n458\n00:24:53.500 --> 00:24:56.810\nthe environment, we will now know\nwhose going to be our root, and\n\n459\n00:24:56.810 --> 00:24:58.990\nwhose going to be our secondary, okay?\n\n460\n00:24:58.990 --> 00:25:03.180\nAnd that's important, because let's\nlook at what happen to my typology.\n\n461\n00:25:03.180 --> 00:25:05.580\nI adjusted the priority on this switch.\n\n462\n00:25:05.580 --> 00:25:12.980\nSo if I do a show spanning dash tree, I\ncan see that this switch is now the root.\n\n463\n00:25:12.980 --> 00:25:14.740\nThis bridge is root.\n\n464\n00:25:14.740 --> 00:25:18.960\nAnd Y access 1 is no longer the root,\nNY core one is now the root.\n\n465\n00:25:18.960 --> 00:25:23.070\nAnd all of its ports is\ndesignating even 23 and\n\n466\n00:25:23.070 --> 00:25:26.175\n24 down here that I know create a loop,\neven those are forwarding,\n\n467\n00:25:26.175 --> 00:25:28.600\nbecause on the root,\nthe root doesn't shut down things.\n\n468\n00:25:28.600 --> 00:25:31.420\nIt's like the Mel Brooks film where\nit's good to be the king, right?\n\n469\n00:25:31.420 --> 00:25:32.130\n>> [LAUGH]\n>> That's how this is.\n\n470\n00:25:32.130 --> 00:25:35.290\nThis is the king, and the king is\nnever wrong, doesn't make mistakes.\n\n471\n00:25:35.290 --> 00:25:36.840\nWe don't shut down ports.\n\n472\n00:25:36.840 --> 00:25:38.480\nSomebody else can, right?\n\n473\n00:25:38.480 --> 00:25:39.860\nSo somebody else is.\n\n474\n00:25:39.860 --> 00:25:41.270\nAnd who is it?\n\n475\n00:25:41.270 --> 00:25:44.270\nWell, the election still comes into play.\n\n476\n00:25:44.270 --> 00:25:45.880\nNYCORE1 is now the root.\n\n477\n00:25:45.880 --> 00:25:47.810\nIt's got the best priority.\n\n478\n00:25:47.810 --> 00:25:51.450\nBut these two guys down here,\nthey still tie for priority.\n\n479\n00:25:51.450 --> 00:25:54.810\nNYCORE2 and\nNYACCESS1 still have the same priority.\n\n480\n00:25:54.810 --> 00:25:57.350\nAnd as a result,\nthey still do an election, and\n\n481\n00:25:57.350 --> 00:26:03.180\nNYACCESS1's Mac address is\nstill lower than NYCORE2's.\n\n482\n00:26:03.180 --> 00:26:05.830\nSo, NYCORE2 is the odd man out.\n\n483\n00:26:05.830 --> 00:26:06.860\nIt's now shutting down ports.\n\n484\n00:26:06.860 --> 00:26:08.780\nI might not like that either, right?\n\n485\n00:26:08.780 --> 00:26:11.675\nLet's verify that's happening,\nbefore I just assume that it's happening.\n\n486\n00:26:11.675 --> 00:26:12.270\n>> [LAUGH]\n>> So\n\n487\n00:26:12.270 --> 00:26:14.900\nI'm assuming that NYCORE2 is\nstill going to be shutting down\n\n488\n00:26:14.900 --> 00:26:17.885\nports because of its low number.\n\n489\n00:26:17.885 --> 00:26:19.990\nBandwidth could influence this too,\n\n490\n00:26:19.990 --> 00:26:23.200\nbut I'm pretty sure everything's\n100 mega byte in my lab right now.\n\n491\n00:26:23.200 --> 00:26:24.750\nSo, sure enough, yep.\n\n492\n00:26:24.750 --> 00:26:26.258\nIt's blocking some ports.\n\n493\n00:26:26.258 --> 00:26:29.060\nIt's got its little root port going on,\nit's blocking two other ports.\n\n494\n00:26:29.060 --> 00:26:34.230\nIt's blocking port 22 and 24 to stop\nthe loops that are on the network.\n\n495\n00:26:34.230 --> 00:26:38.510\nBut I don't want it to be the one that\nhas to block, I want the other guy.\n\n496\n00:26:38.510 --> 00:26:40.110\nI want M I axis one.\n\n497\n00:26:40.110 --> 00:26:44.938\nSo on this one, I'm going to come in and\nsay spanning-tree vlan\n\n498\n00:26:44.938 --> 00:26:49.960\n1-4094, and then I'll say root secondary,\n\n499\n00:26:51.040 --> 00:26:54.630\nwhich is the equivalent of saying well,\nactually, here, I'll show you.\n\n500\n00:26:54.630 --> 00:26:59.750\nIf I say root secondary, it's\nthe equivalent of saying spanning-tree\n\n501\n00:26:59.750 --> 00:27:04.580\nvlan 1 through 4094 priority 25,000,\nwait, what is it?\n\n502\n00:27:04.580 --> 00:27:07.200\n>> 24.\n>> We can actually find it right here in\n\n503\n00:27:07.200 --> 00:27:08.150\nthe config.\n\n504\n00:27:08.150 --> 00:27:09.500\nLet me pull up the running config.\n\n505\n00:27:11.655 --> 00:27:14.376\nAnd I'm just going to include\nanything with the word span in it.\n\n506\n00:27:14.376 --> 00:27:16.972\nAnd you'll see that,\nalthough I typed in the alias,\n\n507\n00:27:16.972 --> 00:27:19.060\nit doesn't actually save it as the alias.\n\n508\n00:27:19.060 --> 00:27:22.100\nIt converts it to the numerical commands\nthat we don't have to remember,\n\n509\n00:27:22.100 --> 00:27:26.300\nwhich is exactly why I\ndon't remember right now.\n\n510\n00:27:26.300 --> 00:27:29.630\nSo, spanning- tree vlan 1-4094,\npriority 28672.\n\n511\n00:27:29.630 --> 00:27:32.540\nRight, the root was 24, whatever.\n\n512\n00:27:32.540 --> 00:27:35.950\nSo there it is, sitting there, it's\nconverted it to number format for me so\n\n513\n00:27:35.950 --> 00:27:37.470\nI don't have to remember.\n\n514\n00:27:37.470 --> 00:27:38.050\nAll right.\n\n515\n00:27:38.050 --> 00:27:39.420\nBut this guy's now the secondary.\n\n516\n00:27:39.420 --> 00:27:43.040\nNow, it doesn't become the root\nbecause I have a root.\n\n517\n00:27:43.040 --> 00:27:49.180\nBut by being the secondary, it's now going\nto win elections against NY Axis One.\n\n518\n00:27:49.180 --> 00:27:52.100\nAnd NY Axis One is now going to\nbe the least attractive switch.\n\n519\n00:27:52.100 --> 00:27:54.160\nAnd so,\nit should be the one shutting down ports.\n\n520\n00:27:54.160 --> 00:27:56.530\nNow, it takes a little while for\nthat to happen.\n\n521\n00:27:56.530 --> 00:28:00.140\nAnd so, when I do a show spanning dash\ntree, it might not happen right away.\n\n522\n00:28:00.140 --> 00:28:01.730\nActually, it's already happened here.\n\n523\n00:28:01.730 --> 00:28:04.640\nI can see that I've got forward,\nforward, forward.\n\n524\n00:28:04.640 --> 00:28:06.540\nNow, I'm still blocking on one.\n\n525\n00:28:06.540 --> 00:28:08.170\nWhy am I blocking on one?\n\n526\n00:28:08.170 --> 00:28:11.250\nWell, this was a loop that\nNYACCESS1 wasn't involved with.\n\n527\n00:28:11.250 --> 00:28:15.895\nIf I go back to my diagram,\nthis loop right here, okay?\n\n528\n00:28:15.895 --> 00:28:19.570\nNYACCESS1 could shut down every\nsingle port on the entire switch,\n\n529\n00:28:19.570 --> 00:28:22.550\nand it wouldn't matter,\nthere would still be a loop right here.\n\n530\n00:28:22.550 --> 00:28:26.320\nSo in this scenario, somebody over here,\nsomebody involved in this loop\n\n531\n00:28:26.320 --> 00:28:29.260\nhad to shut down a port, and\nit's not going to be a root, so\n\n532\n00:28:29.260 --> 00:28:32.280\nit ended up being NYCore2,\neven though it's the secondary.\n\n533\n00:28:32.280 --> 00:28:35.820\nThe same thing could have happened if\nthere was a loop running from the root\n\n534\n00:28:35.820 --> 00:28:36.370\nto the root.\n\n535\n00:28:37.570 --> 00:28:39.120\nThe root's got to shut\noff one of those ports.\n\n536\n00:28:39.120 --> 00:28:42.970\nThat's the only scenario where a root\nbridge will turn off one of its ports, but\n\n537\n00:28:42.970 --> 00:28:45.340\nit would have to do it, because nobody\nelse could solve that problem for it.\n\n538\n00:28:45.340 --> 00:28:45.900\nIt's the only one.\n\n539\n00:28:47.510 --> 00:28:48.840\nBut in this scenario,\n\n540\n00:28:48.840 --> 00:28:52.980\nI should see NYACCESS1 shutting\noff one of these two ports.\n\n541\n00:28:52.980 --> 00:28:54.180\nEither Port 23 or Port 24.\n\n542\n00:28:54.180 --> 00:28:56.400\nNow, I know which one\nit's going to shut off.\n\n543\n00:28:56.400 --> 00:28:59.179\nBecause it's going to\nlook at these ports and\n\n544\n00:28:59.179 --> 00:29:03.130\nit's going to figure out which\none is the closest to the root?\n\n545\n00:29:03.130 --> 00:29:05.660\nWhich one gets me the best\nconnection to the root?\n\n546\n00:29:05.660 --> 00:29:08.530\nThat's what we're going to keep up,\nand we'll shut up the other port.\n\n547\n00:29:08.530 --> 00:29:12.350\nWell, I've got 100 megabit\nconnection here that runs\n\n548\n00:29:12.350 --> 00:29:15.730\nover to core 2 before getting to core 1.\n\n549\n00:29:15.730 --> 00:29:20.160\nSo it's got a cost of 19 here,\nand a cost of 19 over here.\n\n550\n00:29:20.160 --> 00:29:23.590\nSo it's got a cost of\n38 to get to the root.\n\n551\n00:29:23.590 --> 00:29:27.850\nBut over here, I've got 100 meg 8 bit\nconnection that just runs up to the root.\n\n552\n00:29:27.850 --> 00:29:30.160\nThat's a cost of 19, and that's it, right?\n\n553\n00:29:30.160 --> 00:29:34.191\nSo just one little jump across the line,\nand when we get there, we're going to keep\n\n554\n00:29:34.191 --> 00:29:37.830\nport 24 up, because it's better,\nand we're going to block port 23.\n\n555\n00:29:37.830 --> 00:29:41.660\nSo, let's go look at access 1 and make\nsure that it is exactly what happened.\n\n556\n00:29:43.460 --> 00:29:48.343\nAll right, so on access 1,\nI'm just going to do a show spanning-tree.\n\n557\n00:29:48.343 --> 00:29:52.518\nAnd sure enough, Port 24 is up,\nPort 23 is blocking, right?\n\n558\n00:29:52.518 --> 00:29:56.410\nPort 23 is blocking because that\ncost would have been higher.\n\n559\n00:29:56.410 --> 00:30:01.720\nNow, don't trust this cost here, this cost\nis just the cost on the actual interface.\n\n560\n00:30:01.720 --> 00:30:03.930\nIt's a hundred meg interface,\nit's 19, right?\n\n561\n00:30:03.930 --> 00:30:09.360\nBut, it knows about the other hops,\nand let me tell you how it knows.\n\n562\n00:30:09.360 --> 00:30:12.790\nWhat happens is when we talk about BPDUs,\n\n563\n00:30:12.790 --> 00:30:15.490\nmost switches are sending out BPDUs,\nright?\n\n564\n00:30:15.490 --> 00:30:18.900\nSo, they send out BPDUs to let\nthe other switches know about them, but\n\n565\n00:30:18.900 --> 00:30:23.960\nthey don't forward the people's\nBPDUs in a normal environment.\n\n566\n00:30:23.960 --> 00:30:26.740\nIt's the root bridges\nBP2U that they forward.\n\n567\n00:30:26.740 --> 00:30:32.050\nSo the root bridge up here,\nit's generating BP2U's and\n\n568\n00:30:32.050 --> 00:30:34.010\nit sends them out over\nthis line right here.\n\n569\n00:30:34.010 --> 00:30:37.200\nSo the BP2U's coming out and\ncrossing over to this line.\n\n570\n00:30:37.200 --> 00:30:39.860\nSo, NYACCESS1 learns about\nwhat the cost of 19.\n\n571\n00:30:39.860 --> 00:30:41.780\nIt's a hundred megabyte port.\n\n572\n00:30:41.780 --> 00:30:46.660\nAnd then it takes that BPDU and\nit forwards it out this interface,\n\n573\n00:30:46.660 --> 00:30:50.330\nit's forwarding the root bridges BPDU.\n\n574\n00:30:50.330 --> 00:30:54.500\nSo when it comes across this line,\nit already had a cost of 19.\n\n575\n00:30:54.500 --> 00:30:57.585\nNow it adds another 19,\nit's got a cost of 38.\n\n576\n00:30:57.585 --> 00:31:02.995\nSo by the time NYCORE2 receives it,\nit's got a cost of 38.\n\n577\n00:31:02.995 --> 00:31:06.725\nMeanwhile, it's getting BP to\nuse across these two links.\n\n578\n00:31:06.725 --> 00:31:09.925\nAnd these two links come across direct,\nso they got a cost of 19.\n\n579\n00:31:09.925 --> 00:31:12.275\nWe got 19 versus 38.\n\n580\n00:31:12.275 --> 00:31:14.345\nAnd so, it's able to see that.\n\n581\n00:31:14.345 --> 00:31:15.875\nIt's an aggregate metric.\n\n582\n00:31:15.875 --> 00:31:17.940\nIt adds it up across the line.\n\n583\n00:31:17.940 --> 00:31:22.660\nAnd that's important, because I might\nhave a gigabit link here, so a cost of 4,\n\n584\n00:31:22.660 --> 00:31:25.440\nbut the down the line is a 19.\n\n585\n00:31:25.440 --> 00:31:27.500\nSo, 4 plus 19 is 23, right?\n\n586\n00:31:27.500 --> 00:31:28.335\n>> Yes.\n\n587\n00:31:28.335 --> 00:31:32.240\n[LAUGH]\n>> Sad but that took me a while there.\n\n588\n00:31:32.240 --> 00:31:34.660\nBut 23 versus these that\nI'm learning at 19.\n\n589\n00:31:34.660 --> 00:31:39.240\nSo, in that case, I would prefer the 100\nmegabit line over the gigabit line.\n\n590\n00:31:39.240 --> 00:31:42.310\nBecause I could get a better\nconnection to the root.\n\n591\n00:31:42.310 --> 00:31:44.930\nSpanning tree is pretty smart about that\nstuff, but we don't have to configure it.\n\n592\n00:31:44.930 --> 00:31:48.000\nIt's kind of like a routing protocol\nin a way except there's no routing.\n\n593\n00:31:48.000 --> 00:31:51.570\nIt's all layer two, it's all about\nwhich interface to turn on or off.\n\n594\n00:31:51.570 --> 00:31:55.440\nSo that's all happening in the background,\nall being directed by those\n\n595\n00:31:55.440 --> 00:31:58.050\nroot bridge VPU's that are being\nsent across the network.\n\n596\n00:31:59.630 --> 00:32:01.090\nAll right, I know I'm out of time, but\n\n597\n00:32:01.090 --> 00:32:02.700\nI do have a lot of other\nthings to talk about.\n\n598\n00:32:02.700 --> 00:32:06.400\nBut one thing I forgot to mention, we\ntalked about the states of the port, and\n\n599\n00:32:06.400 --> 00:32:10.310\nI talked about blocking, listening,\nlearning and forwarding.\n\n600\n00:32:10.310 --> 00:32:13.555\nThere is one more state,\nwhich is disabled, and\n\n601\n00:32:13.555 --> 00:32:17.295\nyou never see disabled, because disabled\nusually means the cable's unplugged, and\n\n602\n00:32:17.295 --> 00:32:19.375\nif the cable's unplugged,\nit's not in spanning tree.\n\n603\n00:32:19.375 --> 00:32:21.885\nSo, when you run show spanning tree,\nyou're not typically going to\n\n604\n00:32:21.885 --> 00:32:24.535\nsee disabled,\nsomething really bad has to happen.\n\n605\n00:32:24.535 --> 00:32:27.695\nSo, normally they disappear, but\nthere is technically a fifth state.\n\n606\n00:32:27.695 --> 00:32:32.260\nSo, on the exam, if you see a question\nthat asked you to put them in order, or\n\n607\n00:32:32.260 --> 00:32:33.100\nwhatever.\n\n608\n00:32:33.100 --> 00:32:36.250\nTechnically, disabled would be the first\ngig, because it's unplugged, and\n\n609\n00:32:36.250 --> 00:32:40.040\nyou plug a cable in and\nyou immediately go to listening.\n\n610\n00:32:40.040 --> 00:32:43.000\nAnd from listening, you could go to\nblocking, or you could go to learning and\n\n611\n00:32:43.000 --> 00:32:43.820\nthen forwarding, right?\n\n612\n00:32:43.820 --> 00:32:46.810\nSo you've got those kind of pathways that\nyou follow, but disabled is another state.\n\n613\n00:32:46.810 --> 00:32:48.679\nI didn't mention that, so\nI wanted to throw it in right here.\n\n614\n00:32:50.030 --> 00:32:50.540\nAll right,\n\n615\n00:32:50.540 --> 00:32:53.920\nRonnie, I definitely want to talk a little\nbit more about the spanning tree process.\n\n616\n00:32:53.920 --> 00:32:56.832\nWe haven't seen rapid spanning tree yet,\nso I want to talk about that some more\n\n617\n00:32:56.832 --> 00:33:00.500\ntoo, and a few other little odds and\nends to get through.\n\n618\n00:33:00.500 --> 00:33:03.210\nSo I think we're going to\nhave to do one more episode\n\n619\n00:33:03.210 --> 00:33:05.090\non a spanning tree to get through it all.\n\n620\n00:33:05.090 --> 00:33:08.070\n>> Now sounds like a great show for\na part three then.\n\n621\n00:33:08.070 --> 00:33:10.830\nRemember that what we took a look at\nin this episode is that process and\n\n622\n00:33:10.830 --> 00:33:12.130\nthat election process.\n\n623\n00:33:12.130 --> 00:33:14.990\nYou want to pay attention to\nthe terminology that Don used there.\n\n624\n00:33:14.990 --> 00:33:17.600\nIt's very important when\nyou start take and get it,\n\n625\n00:33:17.600 --> 00:33:19.680\nespecially on those port states.\n\n626\n00:33:19.680 --> 00:33:22.330\nYou've got to make sure that that\nprocess is down pat for you.\n\n627\n00:33:22.330 --> 00:33:26.400\nAnd the way that the root gets elected,\nas well as which particular port\n\n628\n00:33:26.400 --> 00:33:31.300\ngets that non-designated port designation,\nas well to go into blocking.\n\n629\n00:33:31.300 --> 00:33:34.310\nWell, that's a great place for\nus to end and get ready for part three.\n\n630\n00:33:34.310 --> 00:33:38.448\nSo, what we want to do is sign off\nright for ITProTV, I've been your host,\n\n631\n00:33:38.448 --> 00:33:39.246\nRonnie Wong.\n\n632\n00:33:39.246 --> 00:33:40.182\n>> And I'm Don Pezet.\n\n633\n00:33:40.182 --> 00:33:45.297\n>> Stay tuned right here for\nmore Cisco CCNA routing and switching\n\n634\n00:33:45.297 --> 00:33:53.390\n[MUSIC]\n\n",
          "vimeoId": "178071073"
        },
        {
          "description": "In this episode, Ronnie and Don take an opportunity to show 802.1w —rapid spanning tree protocol.  They discuss the discarding, learning and forwarding state in contrast with the 802.1d process.  The guys explain that the best practice is to implement the same spanning-tree protocol across all the switches.  They remind us that the port states name that are different between 802.1w and 802.1d.",
          "length": "1533",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/cisco-ccna200105/cisco-ccna-200105-1-3-3-spanning_tree_protocol_pt.3-080516-1.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/cisco-ccna200105/cisco-ccna-200105-1-3-3-spanning_tree_protocol_pt.3-080516-1-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/cisco-ccna200105/cisco-ccna-200105-1-3-3-spanning_tree_protocol_pt.3-080516-1-sm.jpg",
          "title": "Spanning Tree Protocol Part 3",
          "transcript": "WEBVTT\n\n1\n00:00:00.000 --> 00:00:10.000\n[MUSIC]\n\n2\n00:00:12.212 --> 00:00:15.132\nWelcome back to another great\nepisode right here on IT Pro TV.\n\n3\n00:00:15.132 --> 00:00:18.727\nI'm your host Ronnie Wong and\nyou're watching the CISCO CCNA routing and\n\n4\n00:00:18.727 --> 00:00:21.811\nswitching show and\nwe're actually heading into a part three.\n\n5\n00:00:21.811 --> 00:00:24.042\nSo, it's like your favorite little mini\nseries is what we're actually going into.\n\n6\n00:00:24.042 --> 00:00:28.162\n>> [LAUGH] But we're heading\nthe again to wrap up a few details.\n\n7\n00:00:28.162 --> 00:00:30.780\nAnd Mr.\nDon's back with us to help us out here.\n\n8\n00:00:30.780 --> 00:00:31.710\nDon, welcome back.\n\n9\n00:00:31.710 --> 00:00:32.290\n>> All right, Ronny.\n\n10\n00:00:32.290 --> 00:00:33.780\nLet's do it.\nLet's finish this one up.\n\n11\n00:00:33.780 --> 00:00:35.920\nWe don't have all that much left\nto talk about, in spanning tree.\n\n12\n00:00:35.920 --> 00:00:38.320\nWe've talked a ton about\nregular old spanning tree.\n\n13\n00:00:38.320 --> 00:00:40.480\nIn this episode I wanna talk about\nsome of the variations of it.\n\n14\n00:00:40.480 --> 00:00:45.430\nNow, I already talked about\nhow you have IEEE 802.1d\n\n15\n00:00:45.430 --> 00:00:49.920\nspanning tree protocol, or sometimes\nit's called common spanning tree, CST.\n\n16\n00:00:49.920 --> 00:00:52.840\nCommon spanning tree is a term that's not,\nI don't believe it's actually in\n\n17\n00:00:52.840 --> 00:00:56.630\nthe standard, but it refers to how you\nhave one instance of spanning tree that\n\n18\n00:00:56.630 --> 00:01:01.160\nruns for every VLAN on your switch,\nso just one big instance.\n\n19\n00:01:01.160 --> 00:01:06.500\nVersus what CISCO likes to do,\nwhich is per VLAN spanning tree plus.\n\n20\n00:01:06.500 --> 00:01:10.560\nWhich means we run one copy of spanning\ntree for each individual VLAN.\n\n21\n00:01:10.560 --> 00:01:13.400\nI have five VLAN's,\nI have five instances of spanning tree.\n\n22\n00:01:13.400 --> 00:01:15.400\nThat's the CISCO way, per VLAN.\n\n23\n00:01:15.400 --> 00:01:17.300\nVersus the IEEE way,\n\n24\n00:01:17.300 --> 00:01:21.040\nwhere you have one spanning tree\nno matter how many VLANs you have.\n\n25\n00:01:21.040 --> 00:01:21.740\nAll right.\n\n26\n00:01:21.740 --> 00:01:24.050\nNow that's all regular spanning tree and\n\n27\n00:01:24.050 --> 00:01:26.990\nthat's exactly what we worked with in\nthe first two episodes of this series,\n\n28\n00:01:26.990 --> 00:01:32.431\nall in regular IEEE spanning tree\njust deployed multiple times.\n\n29\n00:01:32.431 --> 00:01:37.070\nWell, there's another type of spanning\ntree that I mentioned earlier,\n\n30\n00:01:37.070 --> 00:01:39.700\nwhich is 802.1w rapid\nspanning tree protocol.\n\n31\n00:01:39.700 --> 00:01:42.470\nIn the last episode I showed you\nguys how when we have link failures\n\n32\n00:01:42.470 --> 00:01:46.270\nit takes a little while for spanning\ntree to detect the link failure and\n\n33\n00:01:46.270 --> 00:01:51.370\nto negotiate around it,\nto get us to where we can communicate and\n\n34\n00:01:51.370 --> 00:01:55.240\nbring a link that's being blocked into\na forwarding state, there's a delay and\n\n35\n00:01:55.240 --> 00:01:58.150\nthe delay is like 30 seconds,\nit takes a while, right?\n\n36\n00:01:58.150 --> 00:01:59.360\nSo that's a negative for\n\n37\n00:01:59.360 --> 00:02:04.450\nregular spanning tree,\nwell with 802.1w we do it a lot faster.\n\n38\n00:02:04.450 --> 00:02:05.700\nRight?\n802.11w\n\n39\n00:02:05.700 --> 00:02:08.320\nis faster because it does\nsome really neat things.\n\n40\n00:02:08.320 --> 00:02:11.770\nFirst off, it tracks an alternate port.\n\n41\n00:02:11.770 --> 00:02:15.980\nThe track is called a backup,\nwe saw a little bit of that earlier on.\n\n42\n00:02:15.980 --> 00:02:20.260\nThing is that what we saw earlier was\nnot actually being used by the system.\n\n43\n00:02:20.260 --> 00:02:22.140\nSo when we did a fail over,\nthere was a delay.\n\n44\n00:02:22.140 --> 00:02:23.190\nLet's see that again here.\n\n45\n00:02:23.190 --> 00:02:27.840\nSo, in my topology, if we take\na look at a switch like NYACCESS1,\n\n46\n00:02:27.840 --> 00:02:30.130\nthis guy right here.\n\n47\n00:02:30.130 --> 00:02:32.860\nHe's got port 24 that runs\nright up to the core.\n\n48\n00:02:32.860 --> 00:02:34.610\nThat's running right up to my root bridge.\n\n49\n00:02:34.610 --> 00:02:37.480\nSo Port 24 should be the root port.\n\n50\n00:02:37.480 --> 00:02:41.170\nAnd then port 23 Is a non-designated port.\n\n51\n00:02:41.170 --> 00:02:44.476\nIt's going this way and forming a loop,\nso it should be getting blocked.\n\n52\n00:02:44.476 --> 00:02:48.220\nBut if port 24 were to fail,\nport 23 is the next best one, so\n\n53\n00:02:48.220 --> 00:02:50.750\nwe should bring it up and start talking.\n\n54\n00:02:50.750 --> 00:02:53.890\nBut it's just not an immediate process.\n\n55\n00:02:53.890 --> 00:02:56.340\nSo in NYACCESS1,\nlet me get logged in it and\n\n56\n00:02:56.340 --> 00:02:59.665\nwe'll see exactly how\nit's doing right now.\n\n57\n00:02:59.665 --> 00:03:02.900\nSo I'm gonna do a show spanning\ndash tree and sure enough,\n\n58\n00:03:02.900 --> 00:03:07.930\nI see where port 23 is blocking and\nport 24 is forwarding.\n\n59\n00:03:07.930 --> 00:03:12.880\nAnd port 23 is marked as an alternate\neven though 802.1d does not\n\n60\n00:03:12.880 --> 00:03:14.850\ntechnically track alternates.\n\n61\n00:03:14.850 --> 00:03:18.870\nAnd if I look up here it says my\nspanning tree protocol is IEEE.\n\n62\n00:03:18.870 --> 00:03:20.507\nSo it's 802.1d.\n\n63\n00:03:20.507 --> 00:03:22.720\nI'm not actually using the alternate.\n\n64\n00:03:22.720 --> 00:03:28.820\nAnd as a result when I shut down port 24\nI'm not going to have immediate failover.\n\n65\n00:03:28.820 --> 00:03:33.110\nSo when I do a shutdown of this,\nlet me make sure we do this fast, so\n\n66\n00:03:33.110 --> 00:03:38.295\nI'm going to do a show spanning dash tree,\nwhich is harder to spell than\n\n67\n00:03:38.295 --> 00:03:43.565\nI thought and I'm just going to include\nthe Fa0 slash 24 line so I can see it.\n\n68\n00:03:43.565 --> 00:03:47.705\nI'm gonna shut down this interface or\nwait I don't want 24, I want 23.\n\n69\n00:03:47.705 --> 00:03:49.850\n[LAUGH] So if I watch the right port.\n\n70\n00:03:49.850 --> 00:03:51.090\nThis one's blocking.\n\n71\n00:03:51.090 --> 00:03:55.530\nSo I'm gonna shut down this port and\nimmediately I should flip into listening.\n\n72\n00:03:55.530 --> 00:03:58.610\nSo that's great.\nIt happened immediately but I'm listening.\n\n73\n00:03:58.610 --> 00:04:03.360\nListening doesn't forward traffic and for\n15 seconds, I'm gonna be listening and\n\n74\n00:04:03.360 --> 00:04:06.000\nafter 15 seconds then we're\ngonna go to learning and\n\n75\n00:04:06.000 --> 00:04:09.260\nafter 15 seconds of learning\nthen we'll go to forwarding.\n\n76\n00:04:09.260 --> 00:04:12.190\nSo it's a 30 second down time.\n\n77\n00:04:12.190 --> 00:04:12.890\nOkay?\n\n78\n00:04:12.890 --> 00:04:16.700\nThat's the problem with regular spanning\ntree that rapid spanning tree fixes.\n\n79\n00:04:16.700 --> 00:04:20.430\nWith rapid spanning tree it says hey I\ngot this port and it's an alternate port.\n\n80\n00:04:20.430 --> 00:04:23.670\nI already know it's another way\nto get to where I'm going, so\n\n81\n00:04:23.670 --> 00:04:27.730\nif I have one port fail, I'll just\nturn the alternate up right away.\n\n82\n00:04:27.730 --> 00:04:31.340\nWe'll just bring it right up and\nthat's pretty cool.\n\n83\n00:04:31.340 --> 00:04:34.810\nBut it doesn't just bring you right up and\nthrow a caution to the wind.\n\n84\n00:04:34.810 --> 00:04:40.070\nIt still does loop detection on the port,\neven though it brought it up right away.\n\n85\n00:04:40.070 --> 00:04:44.970\nSo 802.11w trades off speed for\n\n86\n00:04:44.970 --> 00:04:47.968\npotentially creating a loop for\na brief while, all right.\n\n87\n00:04:47.968 --> 00:04:51.160\nSo for speed it'll bring that\ninterface up right away and\n\n88\n00:04:51.160 --> 00:04:52.220\nit'll still listen for BPUs.\n\n89\n00:04:52.220 --> 00:04:54.810\nNow if it sees one,\ntechnically there's a loop, but\n\n90\n00:04:54.810 --> 00:04:57.940\nas soon as it sees it it can shut the port\ndown again and the loop goes away.\n\n91\n00:04:57.940 --> 00:05:03.040\nSo you might have a loop for 15 seconds,\nright, maybe 20 seconds at the greatest.\n\n92\n00:05:03.040 --> 00:05:06.640\nBut after 20 seconds the loop gets shut\ndown, so am I gonna get into the spiraling\n\n93\n00:05:06.640 --> 00:05:10.120\ndeath curve where I have a broadcast\ngone in 15 or 30 seconds?\n\n94\n00:05:10.120 --> 00:05:12.740\nMaybe on a really heavy network but\nnot in most networks.\n\n95\n00:05:12.740 --> 00:05:15.830\nAnd so it will close the loop\nbefore it causes any real problems.\n\n96\n00:05:15.830 --> 00:05:17.600\nIt's a little bit of a tradeoff but\n\n97\n00:05:17.600 --> 00:05:19.960\nthe big benefit is that you'll\nhave instantaneous failover,\n\n98\n00:05:19.960 --> 00:05:23.100\nthat you're able to get that interface\nup and going really, really fast.\n\n99\n00:05:23.100 --> 00:05:24.590\nAll right, so let me do this,\n\n100\n00:05:24.590 --> 00:05:27.310\nlet me do a no shutdown on this\ninterface to bring it back up.\n\n101\n00:05:27.310 --> 00:05:30.440\nAnd I'm actually gonna have to wait\na minute here as it recovers this,\n\n102\n00:05:30.440 --> 00:05:33.000\nsee how port 23 immediately\nwent to blocking?\n\n103\n00:05:33.000 --> 00:05:37.510\nBut port 24 is still isn't listing so\ntechnically port 23 is a perfectly good\n\n104\n00:05:37.510 --> 00:05:41.500\nport, but as soon as I recovered my\nother port it shut down port 23.\n\n105\n00:05:41.500 --> 00:05:45.390\nI just caused an outage by\nmaking my network healthy.\n\n106\n00:05:45.390 --> 00:05:49.325\nThat's another problem with 802.1d\nis that it does stuff like this.\n\n107\n00:05:49.325 --> 00:05:51.150\n802.1w will fix that.\n\n108\n00:05:51.150 --> 00:05:53.350\nSo I'm gonna wait a second for\nit to sort itself out and\n\n109\n00:05:53.350 --> 00:05:57.030\nget into forwarding on these ports and\nonce everything is set\n\n110\n00:05:57.030 --> 00:06:00.160\nthe way we want it to be, then we're\ngonna switch ourselves over to rapid.\n\n111\n00:06:00.160 --> 00:06:04.173\nNow while we are waiting on that,\nright now we're running PVST+,\n\n112\n00:06:04.173 --> 00:06:08.630\nwe're running 802.1d once for\nevery VLAN so\n\n113\n00:06:08.630 --> 00:06:10.810\nif I have five VLANs i'm\ngonna have five copies of it.\n\n114\n00:06:10.810 --> 00:06:14.079\nWhen we go to rapid,\nyou can go to rapid on just one VLAN.\n\n115\n00:06:15.220 --> 00:06:16.460\nYou can mix and match.\n\n116\n00:06:16.460 --> 00:06:20.710\nI can be rapid on some VLAN's and\nregular on other VLAN's.\n\n117\n00:06:20.710 --> 00:06:23.360\nSo 802.1w on some, 802.1d on others.\n\n118\n00:06:23.360 --> 00:06:24.050\nRight?\n\n119\n00:06:24.050 --> 00:06:26.070\nWe normally want to do\nthe whole thing though.\n\n120\n00:06:26.070 --> 00:06:29.630\nCisco's big advice that they give to\nus is that if we choose to go 802.1w,\n\n121\n00:06:29.630 --> 00:06:32.980\nyou should do it across\nyour entire environment.\n\n122\n00:06:32.980 --> 00:06:36.290\nDon't just do it on one switch,\ndo it on all of your switches.\n\n123\n00:06:36.290 --> 00:06:40.090\nYou can mix and match them, but what will\nhappen is some switches will be making\n\n124\n00:06:40.090 --> 00:06:43.810\ndecisions really fast, and\nother switches will make decisions slow.\n\n125\n00:06:43.810 --> 00:06:47.930\nSo when a failure happens,\nrapid might solve it one way and\n\n126\n00:06:47.930 --> 00:06:51.560\nthen 30 seconds later regular spanning\ntree solves it a different way.\n\n127\n00:06:51.560 --> 00:06:53.480\nAnd so now,\nyour network will come healthy and\n\n128\n00:06:53.480 --> 00:06:54.870\nthen 30 seconds later it'll go down again.\n\n129\n00:06:54.870 --> 00:06:56.260\nAnd then they'll come healthy again.\n\n130\n00:06:56.260 --> 00:06:59.530\nAnd that means it takes a solid\nminute to recover networks,\n\n131\n00:06:59.530 --> 00:07:00.700\nwhen you have them mixed.\n\n132\n00:07:00.700 --> 00:07:02.850\nSo you don't want to mix\nif you can avoid it.\n\n133\n00:07:02.850 --> 00:07:05.650\nIf you can have them all standard or\nhave them all rapid,\n\n134\n00:07:05.650 --> 00:07:07.310\nthat's the best way to do it.\n\n135\n00:07:07.310 --> 00:07:11.320\nAnd then across your VLANs, you'll\ntypically run them all rapid if you can.\n\n136\n00:07:11.320 --> 00:07:14.180\nThe only time you might not is if you're\nworried about process utilization.\n\n137\n00:07:14.180 --> 00:07:17.840\nIf you've got a switch that\nhas thousands of VLANs,\n\n138\n00:07:17.840 --> 00:07:21.020\nthen you might be running thousands\nof copies of spanning tree, right?\n\n139\n00:07:21.020 --> 00:07:23.720\nAnd rapid can really create a tax on that.\n\n140\n00:07:23.720 --> 00:07:26.240\nSo you might choose to mix and match.\n\n141\n00:07:26.240 --> 00:07:29.150\nBut in those scenarios, there is actually\nanother spanning tree that's not on\n\n142\n00:07:29.150 --> 00:07:33.060\nthis exam that's called\nmultiple spanning tree, or MST.\n\n143\n00:07:33.060 --> 00:07:34.270\nAnd MST can solve that problem.\n\n144\n00:07:34.270 --> 00:07:37.300\nFor those of you that go on to the CC&P\ntraining, you'll learn about MST.\n\n145\n00:07:37.300 --> 00:07:40.659\nBut for rapid it's pretty\neasy to get turned on and for\n\n146\n00:07:40.659 --> 00:07:43.657\nmost organizations you'll\nwant to turn it on.\n\n147\n00:07:43.657 --> 00:07:47.134\n>> Now Don if you happen to have\nan older switch I'm assuming that these\n\n148\n00:07:47.134 --> 00:07:49.860\ntechnologies have just\nbeen around forever.\n\n149\n00:07:49.860 --> 00:07:53.110\nBut is there a possibility that you\nmight end up with a switch that can't\n\n150\n00:07:53.110 --> 00:07:54.530\nsupport rapid spanning tree?\n\n151\n00:07:54.530 --> 00:07:58.501\nAnd then, if you do, should we just make\nsure that they're all just using the older\n\n152\n00:07:58.501 --> 00:08:00.286\nversion of it or the slower version?\n\n153\n00:08:00.286 --> 00:08:01.405\n>> It could happen, right?\n\n154\n00:08:01.405 --> 00:08:04.306\nIt could happen, we had a switch and\nit doesn't support rapid.\n\n155\n00:08:04.306 --> 00:08:07.686\nRapid's been around for 15, 20 years now?\n\n156\n00:08:07.686 --> 00:08:09.643\nI mean so\nit'd have to be a really old switch.\n\n157\n00:08:09.643 --> 00:08:12.933\nSo you've got different problems\nthan Spanning Tree but if for\n\n158\n00:08:12.933 --> 00:08:16.782\nsome reason you were forced to where\nyou had some device that could only run\n\n159\n00:08:16.782 --> 00:08:19.700\nregular, you'd be better\noff just running regular.\n\n160\n00:08:19.700 --> 00:08:23.700\nAnd knowing that you'll have a 30\nsecond outage when a failure happens.\n\n161\n00:08:23.700 --> 00:08:26.340\nThat'll get you the best decisions\nthan trying to mix and match.\n\n162\n00:08:26.340 --> 00:08:28.334\nBut you certainly could mix and match.\n\n163\n00:08:28.334 --> 00:08:32.054\nAll right, the other thing to remember\nis that Spanning Tree is a layer two\n\n164\n00:08:32.054 --> 00:08:33.194\ntechnology, right?\n\n165\n00:08:33.194 --> 00:08:35.280\nSo this is all layer two.\n\n166\n00:08:35.280 --> 00:08:38.230\nIf I have a router in the middle of my\nnetwork and it divides the network in\n\n167\n00:08:38.230 --> 00:08:42.890\nhalf, I might run rapid on one half and\nrun old-style on the other cuz they're two\n\n168\n00:08:42.890 --> 00:08:46.120\nseparate broadcast domains, so they're\nnot gonna impact each other at all.\n\n169\n00:08:46.120 --> 00:08:47.880\nThey make separate decisions.\n\n170\n00:08:47.880 --> 00:08:50.120\nIf I had branch offices and\na headquarters,\n\n171\n00:08:50.120 --> 00:08:53.430\nI might run rapid at the headquarters and\nregular at the branch offices.\n\n172\n00:08:53.430 --> 00:08:57.100\nThere's routers in between them so\nthey don't actually see each other at all.\n\n173\n00:08:57.100 --> 00:08:58.600\nIt's complete independent decisions.\n\n174\n00:08:58.600 --> 00:09:00.649\nYou'll have a route bridge\nat each of those locations.\n\n175\n00:09:02.690 --> 00:09:04.690\nSo I'm back in standard mode here.\n\n176\n00:09:04.690 --> 00:09:08.880\nI've got my designated port,\nmy root port, my forwarding block and\n\n177\n00:09:08.880 --> 00:09:10.800\neverything in here is night and normal.\n\n178\n00:09:10.800 --> 00:09:12.430\nI'm gonna switch this over to rapid.\n\n179\n00:09:12.430 --> 00:09:14.770\nNow when we switch to rapid\nI'm gonna see two changes.\n\n180\n00:09:14.770 --> 00:09:18.715\nFirst off,\nI'm not gonna be running just 802.1w,\n\n181\n00:09:18.715 --> 00:09:23.400\nI'm gonna be running\nPer VLAN Rapid Spanning Tree Plus.\n\n182\n00:09:23.400 --> 00:09:27.910\nWe were running PVST+,\nnow we're gonna be running PVRST+.\n\n183\n00:09:27.910 --> 00:09:29.950\nSo Per VLAN Rapid Spanning Tree Plus.\n\n184\n00:09:29.950 --> 00:09:34.671\nBut it is gonna say that I'm running rapid\nup here, which is 802.1w, once per VLAN.\n\n185\n00:09:34.671 --> 00:09:37.453\nAnd then down here,\nwhen we have a blocking port,\n\n186\n00:09:37.453 --> 00:09:41.290\nthat means we're blocking traffic and\nthrowing it away.\n\n187\n00:09:41.290 --> 00:09:43.970\nUnder Rapid it's called discarding.\n\n188\n00:09:43.970 --> 00:09:45.710\nSo instead of blocking\nthey call it discarding.\n\n189\n00:09:45.710 --> 00:09:47.350\nI receive the traffic and I throw it away.\n\n190\n00:09:47.350 --> 00:09:51.670\nSo you'll have discarding,\nlearning, forwarding.\n\n191\n00:09:51.670 --> 00:09:53.950\nThat we don't have\na listening phase in Rapid.\n\n192\n00:09:53.950 --> 00:09:56.890\nRapid skips the listening phase, goes\nright to learning, and even in learning it\n\n193\n00:09:56.890 --> 00:10:00.100\ncan forward some traffic,\nalthough most of it does get blocked.\n\n194\n00:10:00.100 --> 00:10:03.790\nSo, we've got discarding,\nlearning, forwarding.\n\n195\n00:10:03.790 --> 00:10:08.625\nSo, if we want to flip over,\nthe command to do that is like this.\n\n196\n00:10:08.625 --> 00:10:15.840\nIt's spanning-tree mode and\nthen we can flag in rapid-pvst, okay?\n\n197\n00:10:15.840 --> 00:10:18.850\nNow, that's a global command so\nit's gonna modify every VLAN.\n\n198\n00:10:18.850 --> 00:10:23.055\nAll my VLANs are gonns flip over and\nrun into Rapid PVST.\n\n199\n00:10:23.055 --> 00:10:27.150\nSo now, everybody should be switched over.\n\n200\n00:10:27.150 --> 00:10:34.110\nAnd if I do a show spanning-tree, I\nprobably won't see any giant changes here.\n\n201\n00:10:34.110 --> 00:10:38.030\nWhen I look, I'm still blocking on a port,\nI'm forwarding on another,\n\n202\n00:10:38.030 --> 00:10:40.740\nI've got an alternate port designated.\n\n203\n00:10:40.740 --> 00:10:42.950\nSo there's my alternate that's blocking.\n\n204\n00:10:42.950 --> 00:10:48.680\nBut up here I can see spanning\ntree enabled protocol rstp right?\n\n205\n00:10:48.680 --> 00:10:53.229\nI'm running PVRST+ or\nRapid Spanning Tree Protocol 802.1w and\n\n206\n00:10:53.229 --> 00:10:57.050\nit's just running on this individual VLAN,\nokay?\n\n207\n00:10:57.050 --> 00:11:01.520\nNow, beyond that I'm making\ndecisions a lot faster.\n\n208\n00:11:01.520 --> 00:11:06.020\nSo let's see what happens if I go in and\nshut down Port 24 like I did before.\n\n209\n00:11:06.020 --> 00:11:10.150\nIf I get into interface fa0/24, all right.\n\n210\n00:11:10.150 --> 00:11:12.010\nThat's currently my root port.\n\n211\n00:11:12.010 --> 00:11:15.880\nIf I shut it down, Port 23 is going\nto have to become the root port.\n\n212\n00:11:15.880 --> 00:11:19.955\nSo I'm going to do a show spanning-tree or\n\n213\n00:11:19.955 --> 00:11:24.835\njust show span and\nI'm gonna include fa0/23.\n\n214\n00:11:24.835 --> 00:11:25.404\nAll right.\n\n215\n00:11:25.404 --> 00:11:28.590\nSo there's Port 23,\nit's currently blocking.\n\n216\n00:11:28.590 --> 00:11:31.650\nI'm gonna shut down Port 24.\n\n217\n00:11:31.650 --> 00:11:35.210\nNormally, I'd see Port 23 go\nthrough 15 seconds of listening,\n\n218\n00:11:35.210 --> 00:11:38.790\n15 seconds of learning,\nand then go active.\n\n219\n00:11:38.790 --> 00:11:41.070\nBut watch what happens here.\n\n220\n00:11:42.480 --> 00:11:43.480\nI'm forwarding.\n\n221\n00:11:43.480 --> 00:11:45.500\nI went right to root forwarding.\n\n222\n00:11:45.500 --> 00:11:46.890\nI'm an alternate port.\n\n223\n00:11:46.890 --> 00:11:48.420\nI knew it was okay.\n\n224\n00:11:48.420 --> 00:11:51.880\nIt's an alternate port,\nI can bring it up and there it is.\n\n225\n00:11:51.880 --> 00:11:53.262\nVery, very fast.\n\n226\n00:11:53.262 --> 00:11:58.320\nSo failover is instantaneous\nwith Rapid Spanning Tree, okay?\n\n227\n00:11:58.320 --> 00:12:02.329\nRapid Spanning Tree, that's it's biggest\nadvantage, is just that it is super,\n\n228\n00:12:02.329 --> 00:12:03.190\nsuper fast.\n\n229\n00:12:03.190 --> 00:12:07.620\nAnd even on recovery, so when I come\nin here and do a no shutdown, right?\n\n230\n00:12:07.620 --> 00:12:10.350\nI'm gonna bring Port 24 up.\n\n231\n00:12:10.350 --> 00:12:12.500\nRemember what happened on\na regular spanning tree?\n\n232\n00:12:12.500 --> 00:12:15.670\nWhen I brought Port 24 up,\nPort 23 immediately started blocking,\n\n233\n00:12:15.670 --> 00:12:18.210\neven though Port 24 was still going\nthrough listening and learning.\n\n234\n00:12:18.210 --> 00:12:21.760\nSo I created a 30 second down time\njust by making my network healthy.\n\n235\n00:12:21.760 --> 00:12:24.100\nWell, I'm gonna do that no shutdown here.\n\n236\n00:12:24.100 --> 00:12:28.200\nAnd when I show the spanning tree output,\nsee how 23 went to blocking and\n\n237\n00:12:28.200 --> 00:12:30.200\n24 immediately went to forwarding.\n\n238\n00:12:30.200 --> 00:12:33.090\nI immediately recovered\nback over to that port.\n\n239\n00:12:33.090 --> 00:12:37.860\nSo very, very quickly we recovered and\nmoved right back over and\n\n240\n00:12:37.860 --> 00:12:39.530\nit's healthy and happy again.\n\n241\n00:12:39.530 --> 00:12:43.990\nOkay, so that's the biggest advantage\nof Rapid Spanning Tree Protocol is\n\n242\n00:12:43.990 --> 00:12:46.020\nit makes these decisions very quickly.\n\n243\n00:12:46.020 --> 00:12:48.750\nNotice how I never saw\nthe listening phase.\n\n244\n00:12:48.750 --> 00:12:51.840\nThe listening phase is there,\nit does have it, though where is it?\n\n245\n00:12:51.840 --> 00:12:54.830\nWell, we don't normally see it on ports\nthat have already been identified;\n\n246\n00:12:54.830 --> 00:12:56.770\nthese ports have already been identified.\n\n247\n00:12:56.770 --> 00:13:00.200\nBut if I were to plug in somebody\nbrand new into one of these ports,\n\n248\n00:13:00.200 --> 00:13:02.580\nthen it's never seen that traffic before.\n\n249\n00:13:04.140 --> 00:13:10.440\nSo I'm gonna take fa0/1 out of the mix and\nwhen I shut it down,\n\n250\n00:13:12.420 --> 00:13:16.880\nand then do a show span, all right so\nfa0/1 is gonna disappear.\n\n251\n00:13:16.880 --> 00:13:19.850\nIt wasn't a root port,\nit wasn't an alternate, it was just,\n\n252\n00:13:19.850 --> 00:13:21.900\nit's a work station\nplugged into that port.\n\n253\n00:13:21.900 --> 00:13:26.020\nSo when I do a no shutdown and\nI take a look at that output,\n\n254\n00:13:26.020 --> 00:13:30.620\nit's gonna come up and\nsee how it's designating and blocking?\n\n255\n00:13:30.620 --> 00:13:33.100\nIt comes up in the discarding state,\nand then it moves into listening, and\n\n256\n00:13:33.100 --> 00:13:38.200\nthen it goes active again.\n\n257\n00:13:38.200 --> 00:13:41.270\nSo when a new port comes\nup the first time,\n\n258\n00:13:41.270 --> 00:13:44.940\nit does actually go through a delay\njust like regular Spanning Tree would.\n\n259\n00:13:44.940 --> 00:13:46.830\nAnd, see, there it goes, in the learning.\n\n260\n00:13:46.830 --> 00:13:48.270\nAnd it's gonna go into learning for\n\n261\n00:13:48.270 --> 00:13:52.650\n15 seconds,\njust like under regular Spanning Tree.\n\n262\n00:13:52.650 --> 00:13:56.160\nAnd after it learns for 15 seconds\nthen it's gonna go into forwarding.\n\n263\n00:13:56.160 --> 00:13:57.660\nAnd so if I just sit here and\nrun the command over and\n\n264\n00:13:57.660 --> 00:13:59.710\nover again, there it goes to forwarding.\n\n265\n00:13:59.710 --> 00:14:01.760\nSo it went from discarding,\n\n266\n00:14:01.760 --> 00:14:05.490\nwhich was basically out of the system,\nto learning, to forwarding.\n\n267\n00:14:05.490 --> 00:14:06.900\n15 seconds for\n\n268\n00:14:06.900 --> 00:14:11.980\na new port, versus an existing port\nwhere it can be instantaneous, right?\n\n269\n00:14:11.980 --> 00:14:16.070\nSo it is still quicker, but\nthere is a 15 second delay.\n\n270\n00:14:16.070 --> 00:14:19.650\nSo, thing to remember here is,\nwhen you go to a Cisco switch and\n\n271\n00:14:19.650 --> 00:14:22.910\nyou plug a laptop into it, a lot of\ntimes you'll notice the link light goes\n\n272\n00:14:22.910 --> 00:14:27.350\norange for a moment, and you can't\ntalk on that port for 30 seconds.\n\n273\n00:14:27.350 --> 00:14:31.662\nAnd that Spanning Tree, holding you down,\nlooking to see if there's a loop.\n\n274\n00:14:31.662 --> 00:14:36.190\nOr if it's 15 seconds, it's Rapid Spanning\nTree, holding you down looking for a loop.\n\n275\n00:14:36.190 --> 00:14:39.030\nSo a lot of people wonder why there's\nthat delay when you first plug into\n\n276\n00:14:39.030 --> 00:14:39.890\na Cisco switch.\n\n277\n00:14:39.890 --> 00:14:42.430\nIt's because Spanning Tree\nis turned on by default.\n\n278\n00:14:42.430 --> 00:14:43.300\nNot everybody does that.\n\n279\n00:14:43.300 --> 00:14:44.780\nIf you have HP switches,\n\n280\n00:14:44.780 --> 00:14:48.270\nHP switches usually have\nSpanning Tree turned off by default.\n\n281\n00:14:48.270 --> 00:14:50.730\nAnd you can go turn it on if you want,\nbut it's off by default.\n\n282\n00:14:50.730 --> 00:14:52.530\nJuniper, I believe, has it on by default.\n\n283\n00:14:52.530 --> 00:14:55.150\nSo different vendors\nhandle it different ways.\n\n284\n00:14:55.150 --> 00:14:57.180\nYou know what,\nI'm forgetting something important here.\n\n285\n00:14:57.180 --> 00:14:59.700\nI'm running Rapid Spanning Tree Protocol\non this switch.\n\n286\n00:14:59.700 --> 00:15:01.540\nWhat am I running on my other switches?\n\n287\n00:15:01.540 --> 00:15:04.490\nMy other switches are still\nrunning regular Spanning Tree.\n\n288\n00:15:04.490 --> 00:15:05.610\nI'm in a mixed environment.\n\n289\n00:15:05.610 --> 00:15:06.550\nIt's working.\n\n290\n00:15:06.550 --> 00:15:09.160\nEverything working here just\nthe way that I expect it to.\n\n291\n00:15:09.160 --> 00:15:10.230\nI'm still not the root.\n\n292\n00:15:10.230 --> 00:15:12.610\nSomebody else is the root even\nthough I'm running Rapid.\n\n293\n00:15:12.610 --> 00:15:15.820\nAnd that's okay because they\nare technically compatible.\n\n294\n00:15:15.820 --> 00:15:20.270\nBut ideally in a perfect world,\neach switch will be running Rapid so\n\n295\n00:15:20.270 --> 00:15:21.240\nit's consistent.\n\n296\n00:15:21.240 --> 00:15:23.386\nSo I really need to go\nto my other switches and\n\n297\n00:15:23.386 --> 00:15:25.410\nget them moved over to Rapid also.\n\n298\n00:15:25.410 --> 00:15:28.200\nAnd I'm not gonna see much of difference\nwhen I do this because they're gonna make\n\n299\n00:15:28.200 --> 00:15:29.330\nthe same decisions.\n\n300\n00:15:29.330 --> 00:15:31.940\nThey're just making the decisions faster,\nright?\n\n301\n00:15:31.940 --> 00:15:34.810\nAnd that's kind of what's\nthe whole point of this thing.\n\n302\n00:15:34.810 --> 00:15:39.820\nSo, I'm gonna come in here and\njust spanning-tree mode rapid-pvst,\n\n303\n00:15:39.820 --> 00:15:44.380\nso that CORE2 switches over to rapid,\nand then I'll jump over to CORE1 and\n\n304\n00:15:44.380 --> 00:15:46.670\ndo the same exact thing, right?\n\n305\n00:15:46.670 --> 00:15:52.481\nSo, on CORE1 we get in here and\ndo spanning-tree,\n\n306\n00:15:52.481 --> 00:15:56.590\nmode, rapid, and there it goes.\n\n307\n00:15:56.590 --> 00:15:58.822\nSo now, all three of my\nswitches are running Rapid,\n\n308\n00:15:58.822 --> 00:16:02.601\nthey're all gonna make decisions faster,\nand then they're gonna move on from there.\n\n309\n00:16:02.601 --> 00:16:05.720\nIf the root were to fail,\neverybody has their alternate ports, but\n\n310\n00:16:05.720 --> 00:16:08.141\nan election would occur,\nI've got a secondary.\n\n311\n00:16:08.141 --> 00:16:10.722\nSo the election's already won by NYCORE2.\n\n312\n00:16:10.722 --> 00:16:14.192\nNYCORE 2 would become the root, everybody\nelse would bring their ports active\n\n313\n00:16:14.192 --> 00:16:17.170\nimmediately, failovers would\nhappen instantaneously.\n\n314\n00:16:17.170 --> 00:16:20.690\nRapid is significantly superior\nto regular spinning tree,\n\n315\n00:16:20.690 --> 00:16:23.310\nthe only thing we have to worry about\nhere is resources on the switch.\n\n316\n00:16:23.310 --> 00:16:27.570\nThe more Vlans I create the more instances\nof spanning tree I'm going to run, now.\n\n317\n00:16:27.570 --> 00:16:30.420\nThis whole show,\nI've only had one VLAN, right?\n\n318\n00:16:30.420 --> 00:16:35.000\nSo I have VLAN one that has ports,\nand nobody else has any ports, right?\n\n319\n00:16:35.000 --> 00:16:39.970\nBut if I go in here and start creating\nmore and more of those VLAN's,\n\n320\n00:16:39.970 --> 00:16:43.400\nright, so I'm gonna create vlan10,\nvlan20, vlan30, vlan40.\n\n321\n00:16:44.420 --> 00:16:48.170\nSo, I'm creating a bunch of VLANs.\n\n322\n00:16:50.270 --> 00:16:51.370\nAnd in order for\n\n323\n00:16:51.370 --> 00:16:55.550\na VLAN to go active I need to have\nat least one port in the VLAN.\n\n324\n00:16:55.550 --> 00:16:58.836\nI could bring up a trunk, I guess it would\nprobably be the easiest way to do that.\n\n325\n00:16:58.836 --> 00:17:02.962\nActually, lemme do 1/0/\n\n326\n00:17:05.000 --> 00:17:10.350\nWhoops, 22 we'll do switchport\nmode trunk and oops,\n\n327\n00:17:11.840 --> 00:17:16.780\nlet me force it to use dot1q first and\nthen we'll make it a trunk.\n\n328\n00:17:16.780 --> 00:17:18.900\nAll right and so now I've got a trunk.\n\n329\n00:17:18.900 --> 00:17:20.250\nA trunk carries every vlan so\n\n330\n00:17:20.250 --> 00:17:23.680\nit's a great way to quickly\nmake all these vlans come up.\n\n331\n00:17:23.680 --> 00:17:26.270\nSo now I should be running spanning tree.\n\n332\n00:17:26.270 --> 00:17:30.290\nWell, spanning tree it's one thing to have\na trunk but I really need to have a little\n\n333\n00:17:30.290 --> 00:17:33.410\nbit more so I might not actually see\nit just yet let's see what I've got.\n\n334\n00:17:33.410 --> 00:17:37.490\nSo when I run spanning tree every time\nI've run it so far I've kind of ignored it\n\n335\n00:17:37.490 --> 00:17:40.320\nbut there's been this little not\nright here that says vlan001.\n\n336\n00:17:40.320 --> 00:17:43.330\nThis is rapid Spanning Tree\nrunning just for VLAN1.\n\n337\n00:17:44.350 --> 00:17:47.340\nAnd now, if I hit spacebar,\nI'll see, here it is for VLAN10.\n\n338\n00:17:48.400 --> 00:17:50.010\nAnd then here it is for VLAN20.\n\n339\n00:17:50.010 --> 00:17:52.240\nAnd VLAN30, and 40.\n\n340\n00:17:52.240 --> 00:17:55.390\nSo as I keep hitting space, you'll see\nthat VLAN number changing up there.\n\n341\n00:17:55.390 --> 00:17:58.180\nThey've only got the one interface,\nthe one trunk that I have.\n\n342\n00:17:58.180 --> 00:18:02.120\nBut it's running spanning tree for\neach individual vlan.\n\n343\n00:18:02.120 --> 00:18:06.120\nAnd that's really important because\nin environments where you have\n\n344\n00:18:06.120 --> 00:18:10.480\nmore than one cable like this, I could\nhave one on Vlan 10, one on vlan 20 and\n\n345\n00:18:10.480 --> 00:18:13.660\nnow that's not a loop anymore.\n\n346\n00:18:13.660 --> 00:18:17.200\nThose can both go active and\nI can have different roots for\n\n347\n00:18:17.200 --> 00:18:18.460\nthe different vlans, right?\n\n348\n00:18:18.460 --> 00:18:20.200\nLet's run through the example of that.\n\n349\n00:18:20.200 --> 00:18:24.310\nNot likely to show up on the exam, but in\nreal life, you might want half your VLANs\n\n350\n00:18:24.310 --> 00:18:27.590\nto be routed off of this switch and\nthe other half to be routed on this one.\n\n351\n00:18:27.590 --> 00:18:28.580\nYou can certainly do that.\n\n352\n00:18:28.580 --> 00:18:30.610\nYou can mix and match.\n\n353\n00:18:30.610 --> 00:18:38.630\nSo for example, on NYCORE1, let me go in\nhere and we'll take those interfaces.\n\n354\n00:18:38.630 --> 00:18:43.170\nSo I'm gonna do fa1/0/23.\n\n355\n00:18:43.170 --> 00:18:45.840\nI'm gonna shut it down just to make sure\nI don't get a bunch of vlan mismatch\n\n356\n00:18:45.840 --> 00:18:52.440\nmessages that are gonna come up and\nI'll say switch port access vlan 10.\n\n357\n00:18:52.440 --> 00:18:53.830\nWhoops, or 102.\n\n358\n00:18:53.830 --> 00:18:55.730\nI wanted 10, there we go, 10.\n\n359\n00:18:55.730 --> 00:18:59.400\nI'm gonna say switchport mode access\ncuz I don't want it to be a trunk.\n\n360\n00:18:59.400 --> 00:19:00.990\nIf it's a trunk,\nit'll carry more than one vlan.\n\n361\n00:19:00.990 --> 00:19:03.020\nI'll end up right back into a loop again.\n\n362\n00:19:03.020 --> 00:19:07.730\nSo it's on vlan10 and it's an access port.\n\n363\n00:19:07.730 --> 00:19:08.600\nAll right?\nAnd\n\n364\n00:19:08.600 --> 00:19:12.400\nthen I'm gonna get into\ninterface Fa1/0/24 and\n\n365\n00:19:12.400 --> 00:19:18.630\nI'm gonna say this one's gonna be on vlan\n20 and it's going to be an access port.\n\n366\n00:19:18.630 --> 00:19:21.350\nSo two different vlans, all right?\n\n367\n00:19:22.640 --> 00:19:27.590\nThen I'm gonna jump over to core two where\nI'll do the same basic thing, right?\n\n368\n00:19:27.590 --> 00:19:31.400\nSo I'm gonna take those two ports and\nmove them.\n\n369\n00:19:31.400 --> 00:19:35.378\nSo I'll get into fa1/0/23,\nswitchport access vlan 10 and\n\n370\n00:19:35.378 --> 00:19:45.240\nswitchport mode access.\n\n371\n00:19:45.240 --> 00:19:48.270\nAnd then I'll get into fa1/0/24,\n\n372\n00:19:48.270 --> 00:19:54.430\nI'm getting a vlan mismatch,\nI forgot to shut down the other interface.\n\n373\n00:19:54.430 --> 00:19:57.220\nThat'll get sorted out\nhere in just a second.\n\n374\n00:19:57.220 --> 00:20:02.740\nI'll make it an access port,\nswitch port, access vlan 20.\n\n375\n00:20:02.740 --> 00:20:05.090\nThere, that'll solve the mismatch problem.\n\n376\n00:20:06.120 --> 00:20:13.089\nAnd now let me just jump back up to this\nguy and turn that interface back on.\n\n377\n00:20:15.817 --> 00:20:20.377\nSo we'll get into the range,\n23 23- 24 and do a no shutdown.\n\n378\n00:20:20.377 --> 00:20:25.090\nOkay, now that that's done,\ngoing back to my diagram, ports 23 and\n\n379\n00:20:25.090 --> 00:20:28.405\n24, one's in vlan 10, one's in vlan 20.\n\n380\n00:20:28.405 --> 00:20:32.465\nSince they're separate vlans,\nthat's not a loop.\n\n381\n00:20:32.465 --> 00:20:35.965\nIt's not considered a loop because there\nare two different broadcast domains.\n\n382\n00:20:35.965 --> 00:20:37.945\nTraffic on one will not\ncross on the other.\n\n383\n00:20:37.945 --> 00:20:39.740\nWe don't need to shut\ndown a link any more.\n\n384\n00:20:39.740 --> 00:20:43.070\nSo if I just have two VLANs,\nI'm kind of load balancing now.\n\n385\n00:20:43.070 --> 00:20:45.410\nRight, I get half my traffic\non one half on the other,\n\n386\n00:20:45.410 --> 00:20:48.220\nwe can kind of manipulate that process and\nget set up.\n\n387\n00:20:48.220 --> 00:20:52.280\nIf I take a look at my switches,\nso if I take NY core one.\n\n388\n00:20:52.280 --> 00:20:55.690\nAnd we're running rapid now, so\nthis should all happen very quickly.\n\n389\n00:20:55.690 --> 00:21:00.793\nIf I do a show span when I\nlook at the show spanning\n\n390\n00:21:00.793 --> 00:21:05.680\ntree I wanna it all I just wanna see for\na vlan 10.\n\n391\n00:21:05.680 --> 00:21:07.780\nAll right?\n\n392\n00:21:07.780 --> 00:21:12.930\nWhen I look at vlan 10 there's port 22 and\n23 24 is not in the list.\n\n393\n00:21:12.930 --> 00:21:14.410\nBecause 24 is not VLAN 10.\n\n394\n00:21:14.410 --> 00:21:18.240\nAnd if I look at VLAN 20, I see 22 and 24.\n\n395\n00:21:18.240 --> 00:21:23.210\n23 is not on the list,\nbecause it's on VLAN 10, this is VLAN 20.\n\n396\n00:21:23.210 --> 00:21:26.740\nAnd so, I don't have to block any ports.\n\n397\n00:21:26.740 --> 00:21:30.930\nAnd, even if I did, I could have it where\nmaybe I'm blocking a port from VLAN 10,\n\n398\n00:21:30.930 --> 00:21:32.380\nand not blocking it from VLAN 20.\n\n399\n00:21:32.380 --> 00:21:34.050\nYou can even mix and match that way.\n\n400\n00:21:34.050 --> 00:21:36.690\nYou can really get some crazy stuff\ngoing on when you set it up like this.\n\n401\n00:21:36.690 --> 00:21:43.110\nBut, this is no longer a loop, and\nI could come into my config and\n\n402\n00:21:43.110 --> 00:21:48.690\nsay spanning-tree, vlan 10 root primary,\n\n403\n00:21:51.530 --> 00:21:55.330\nand then vlan 20 root secondary.\n\n404\n00:21:55.330 --> 00:21:59.390\nSo this guy is going to be the primary for\nvlan 10, But\n\n405\n00:21:59.390 --> 00:22:02.230\nit's gonna be the back up for vlan 20.\n\n406\n00:22:02.230 --> 00:22:07.900\nAnd I can do the opposite on core2 and\nso now on core2.\n\n407\n00:22:10.636 --> 00:22:14.373\nIf I can get it on my screen here,\nI can jump in and\n\n408\n00:22:14.373 --> 00:22:18.500\nI can say spanning-tree\nvlan 10 root secondary.\n\n409\n00:22:20.100 --> 00:22:24.410\nAnd spanning-tree vlan 20 root primary.\n\n410\n00:22:27.190 --> 00:22:30.620\nSo that, when we've got that,\nwe can do a show span for vlan 10.\n\n411\n00:22:30.620 --> 00:22:35.980\nAnd what I should see in here, is that\nI'm not the root bridge for vlan 10.\n\n412\n00:22:35.980 --> 00:22:40.170\nHere's my Mac Address Here's the Mac\naddress and the root bridge.\n\n413\n00:22:40.170 --> 00:22:41.550\nThey're different.\n\n414\n00:22:41.550 --> 00:22:44.790\nI end in ee80, he ends in af80,\ntwo different switches.\n\n415\n00:22:44.790 --> 00:22:50.700\nBut when I look at VLAN 20, I can see\nthat I am the root bridge for VLAN 20.\n\n416\n00:22:50.700 --> 00:22:52.360\nSo I have mix and match.\n\n417\n00:22:52.360 --> 00:22:53.840\nYou can really tweak things and\n\n418\n00:22:53.840 --> 00:22:56.770\ncreate some kind of custom\nenvironments if you need to.\n\n419\n00:22:56.770 --> 00:22:57.920\nMost of us don't need to do this.\n\n420\n00:22:57.920 --> 00:23:01.620\nMost of us set one root bridge, and\nit's the root for all the VLANs.\n\n421\n00:23:01.620 --> 00:23:04.800\nAnd one secondary, it's the secondary for\nall the VLANs, and that's perfectly fine.\n\n422\n00:23:04.800 --> 00:23:07.760\nBut I needed to demonstrate this\nbecause on the exam you might see\n\n423\n00:23:07.760 --> 00:23:11.620\na diagram that shows something weird like\nthis, and it's not that it can't be done.\n\n424\n00:23:11.620 --> 00:23:14.410\nIt may not be practical in the real world,\nbut it certainly can be done.\n\n425\n00:23:14.410 --> 00:23:18.290\nSo these are all possibilities when\nit comes to tweaking spanning tree.\n\n426\n00:23:18.290 --> 00:23:22.110\nSo way back, at the beginning of part one,\nwhat did I say about spanning tree\n\n427\n00:23:22.110 --> 00:23:25.310\nIt's on by default, it's already running,\nyou don't even have to touch it.\n\n428\n00:23:25.310 --> 00:23:27.900\nAnd that is absolutely 100 percent true.\n\n429\n00:23:27.900 --> 00:23:31.490\nBut if you want, you can get in there and\nyou can set who's going to be the root,\n\n430\n00:23:31.490 --> 00:23:33.270\nyou can set who's going\nto be the secondary,\n\n431\n00:23:33.270 --> 00:23:37.140\nyou can manipulate who's gonna\nbe the root for what VLAN.\n\n432\n00:23:37.140 --> 00:23:38.510\nYou can get really specific there.\n\n433\n00:23:38.510 --> 00:23:41.550\nYou can change it from i triple\ne's 802.1d over to 802.1w.\n\n434\n00:23:41.550 --> 00:23:45.690\nYou can move it from regular spanning\ntree to rapid spanning tree.\n\n435\n00:23:45.690 --> 00:23:48.740\nAnd it's always gonna be per\nVLAN on Cisco equipment.\n\n436\n00:23:48.740 --> 00:23:50.820\nThat's the way that it works.\n\n437\n00:23:50.820 --> 00:23:52.300\nThey don't have where\nyou can just do one for\n\n438\n00:23:52.300 --> 00:23:56.420\nthe whole thing without getting into MST,\nwhich is not on this exam.\n\n439\n00:23:56.420 --> 00:23:58.090\nBut that's basically it and how it works.\n\n440\n00:23:58.090 --> 00:24:02.170\nOne of the greater protocols, because\nof how easy it is to get up and going,\n\n441\n00:24:02.170 --> 00:24:05.620\nand once you get it's,\nit's like those rotisserie chicken.\n\n442\n00:24:05.620 --> 00:24:07.290\nYou set it and forget it.\n\n443\n00:24:07.290 --> 00:24:08.760\nThat's it.\nYou get it turned on.\n\n444\n00:24:08.760 --> 00:24:10.350\nYou put it in place and that's it.\n\n445\n00:24:10.350 --> 00:24:13.180\nAs long as you've defined your standard\nroot, you don't have to worry about\n\n446\n00:24:13.180 --> 00:24:17.560\nnew switches coming and taking over as the\nroot, if you've modified that priority.\n\n447\n00:24:17.560 --> 00:24:18.230\nAnd off it goes.\n\n448\n00:24:18.230 --> 00:24:19.620\nIt's all in business.\n\n449\n00:24:19.620 --> 00:24:22.079\nSo it's a pretty neat system and\npretty straightforward.\n\n450\n00:24:23.350 --> 00:24:26.130\n>> All right, Don, well, thank you for\nhelping us understand some of these\n\n451\n00:24:26.130 --> 00:24:29.280\ndifferent options that we have\nwhen working with spanning tree.\n\n452\n00:24:29.280 --> 00:24:31.930\nRemember that what we took a look\nat here of course is taking a look\n\n453\n00:24:31.930 --> 00:24:36.660\nbeyond the prevalence spanning tree plus\nthat CISCO tends to run by default and\n\n454\n00:24:36.660 --> 00:24:39.160\ntalking about the idea\nof rapid spanning tree.\n\n455\n00:24:39.160 --> 00:24:43.393\nmake sure those IEEE numbers too and\nthe differentiation between them.\n\n456\n00:24:43.393 --> 00:24:46.650\n802.- 8021D yes.\n\n457\n00:24:46.650 --> 00:24:49.549\nI was about to say 802.11.\n\n458\n00:24:49.549 --> 00:24:53.340\n802.1D and\n802.1W those are important numbers but\n\n459\n00:24:53.340 --> 00:24:54.960\nalso take a look at those show commands.\n\n460\n00:24:54.960 --> 00:24:58.180\nThe great thing is Don through all three\nof these episodes has really been that\n\n461\n00:24:58.180 --> 00:25:03.300\nshow spanning-tree that has really\ngiven us all the information.\n\n462\n00:25:03.300 --> 00:25:07.330\nAnd you need to take a look at the details\nthere to get ready for the exam as well.\n\n463\n00:25:07.330 --> 00:25:09.070\nDon't forget that there's\na lot of information here, so\n\n464\n00:25:09.070 --> 00:25:12.040\nmake sure you review these shows\nbefore getting into that exam.\n\n465\n00:25:12.040 --> 00:25:14.080\nGet those concepts down pat.\n\n466\n00:25:14.080 --> 00:25:16.050\nGreat place for\nus to end this episode, then.\n\n467\n00:25:16.050 --> 00:25:19.077\nSigning off for ITProTV,\nI've been your host, Ronnie Wong.\n\n468\n00:25:19.077 --> 00:25:19.975\n>> And I'm Don Pezet.\n\n469\n00:25:19.975 --> 00:25:25.469\n>> Stay tuned right here for more\nCisco CCNA Routing and Switching shows.\n\n470\n00:25:25.469 --> 00:25:31.696\n[MUSIC]\n\n",
          "vimeoId": "178071072"
        },
        {
          "description": "In this episode, Ronnie and Don take a look at additional optional features that can be configured for STP.  They explain the use of portfast and bpduguard to make STP work more efficiently.  They show using portfast allows the switch to change port states immediately to forwarding.  This is efficient for end user devices, servers  and other devices that only need access and only provide for loop protection on the port, according to the guys. Enabling bpduguard sends a port into err-disabled state if a single bpdu is detected, Don explains.  They also explain to how enable this globally for every port and then how to disable it for the ports needed.",
          "length": "1747",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/cisco-ccna200105/cisco-ccna-200105-1-4-spanning_tree_protocol_optional_features-080816-1.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/cisco-ccna200105/cisco-ccna-200105-1-4-spanning_tree_protocol_optional_features-080816-1-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/cisco-ccna200105/cisco-ccna-200105-1-4-spanning_tree_protocol_optional_features-080816-1-sm.jpg",
          "title": "Spanning Tree Protocol Optional Features",
          "transcript": "WEBVTT\n\n1\n00:00:00.093 --> 00:00:10.093\n[MUSIC]\n\n2\n00:00:12.344 --> 00:00:14.490\nWelcome to another great\nepisode right here on ITPro TV.\n\n3\n00:00:14.490 --> 00:00:18.744\nI'm your host, Ronnie Wong, and\nyou're watching the Cisco CCNA Routing and\n\n4\n00:00:18.744 --> 00:00:20.190\nSwitching show.\n\n5\n00:00:20.190 --> 00:00:23.110\nNow, we've already gone through just\nthe basics of Spanning Tree, but\n\n6\n00:00:23.110 --> 00:00:26.530\nthere's a few more things that we want to\nmake sure that you understand as far as\n\n7\n00:00:26.530 --> 00:00:30.350\nfeatures go, so that you can actually tune\nSpanning Tree the way that you want to.\n\n8\n00:00:30.350 --> 00:00:32.620\nAnd back with us to help us\nout is gonna be Mr. Don Pezet.\n\n9\n00:00:32.620 --> 00:00:33.472\nDon, welcome back.\n\n10\n00:00:33.472 --> 00:00:34.430\n>> Thanks for having me back, Ronnie.\n\n11\n00:00:34.430 --> 00:00:36.360\nAnd, you know, one of things that\nI mentioned in the Spanning Tree\n\n12\n00:00:36.360 --> 00:00:39.530\nepisodes was how It's a great\nprotocol cuz technically,\n\n13\n00:00:39.530 --> 00:00:41.100\nyou don't have to do anything.\n\n14\n00:00:41.100 --> 00:00:43.220\nIt's all ready turned on,\nit's already running.\n\n15\n00:00:43.220 --> 00:00:46.070\nIt's already preventing\nloops on your network.\n\n16\n00:00:46.070 --> 00:00:51.140\nSo in reality you don't\nhave to configure anything.\n\n17\n00:00:51.140 --> 00:00:53.770\nBut we did see how there's\nthings that we can tweak.\n\n18\n00:00:53.770 --> 00:00:56.590\nThings like switching from\nregular 802.1D over to 802.1w,\n\n19\n00:00:56.590 --> 00:01:01.840\nrapid spanning tree protocol,\nand that makes things go faster.\n\n20\n00:01:01.840 --> 00:01:05.390\nWell, there's actually a ton of other\nthings that we can tweak, and for\n\n21\n00:01:05.390 --> 00:01:08.530\nthose of you that go on and do the CC and\nP, you'll learn about a bunch of them.\n\n22\n00:01:08.530 --> 00:01:12.148\nBut here the CCNA level there's\nactually two optional features,\n\n23\n00:01:12.148 --> 00:01:16.623\ntwo special features that we wanna talk\nabout because they're so commonly used.\n\n24\n00:01:16.623 --> 00:01:20.283\nAnd the first one is one that I use on\nevery single switch that I touch well\n\n25\n00:01:20.283 --> 00:01:21.785\nunless it's a core switch.\n\n26\n00:01:21.785 --> 00:01:24.286\n>> [LAUGH]\n>> Which is the port fast functionality,\n\n27\n00:01:24.286 --> 00:01:25.330\nall right.\n\n28\n00:01:25.330 --> 00:01:29.010\nOne of the things we saw about spanning\ntree protocol was the way that it works,\n\n29\n00:01:29.010 --> 00:01:31.410\nit works by blocking ports.\n\n30\n00:01:31.410 --> 00:01:34.079\nSo when I plug a network\nadapter into a switch,\n\n31\n00:01:34.079 --> 00:01:37.097\nso I run that cable,\nI plug it right into the switch.\n\n32\n00:01:37.097 --> 00:01:39.090\nWhat's the first thing that happens?\n\n33\n00:01:39.090 --> 00:01:42.330\nWell, we go into the listening and\nlearning phases.\n\n34\n00:01:42.330 --> 00:01:45.680\nSo, we've gonna move to those\nphases before we can actually get\n\n35\n00:01:45.680 --> 00:01:47.020\nto the forwarding phase.\n\n36\n00:01:47.020 --> 00:01:49.010\nNow, we don't normally care about that.\n\n37\n00:01:49.010 --> 00:01:49.590\nHey great,\n\n38\n00:01:49.590 --> 00:01:52.900\nduring that time that it was held down we\nchecked to make sure there was no loop.\n\n39\n00:01:52.900 --> 00:01:54.950\nAnd now we know there is no loop\nthat can bring the port online and\n\n40\n00:01:54.950 --> 00:01:55.960\neverything goes great.\n\n41\n00:01:55.960 --> 00:01:56.840\nRight?\n\n42\n00:01:56.840 --> 00:01:58.290\nBut that's 30 seconds.\n\n43\n00:01:58.290 --> 00:02:00.840\n30 seconds is actually a long\ntime in computer land.\n\n44\n00:02:00.840 --> 00:02:05.100\nSo when somebody brings in\ntheir laptop and plugs in,\n\n45\n00:02:05.100 --> 00:02:08.060\nwhat's one of the first things they're\ngonna do when they get a link light?\n\n46\n00:02:08.060 --> 00:02:10.210\nThey're gonna try to do a DHCP request.\n\n47\n00:02:10.210 --> 00:02:12.340\nRight?\nThey're gonna send out a broadcast to\n\n48\n00:02:12.340 --> 00:02:14.940\nthe whole network saying hey,\nI need an IP address.\n\n49\n00:02:14.940 --> 00:02:16.590\nCan somebody give it to me?\n\n50\n00:02:16.590 --> 00:02:20.730\nWell, when they first plug in, they're\nbeing held down 15 seconds in listening,\n\n51\n00:02:20.730 --> 00:02:25.060\n15 seconds in learning,\n30 seconds all together.\n\n52\n00:02:25.060 --> 00:02:29.490\nEven in rapid spanning tree when you first\nplug in, you only go through listening so\n\n53\n00:02:29.490 --> 00:02:35.710\nyou don't have to wait for learning but\nit's still 15 seconds in listening, right?\n\n54\n00:02:35.710 --> 00:02:40.320\nRapid spanning tree protocol is very fast\nto fail over from one link to another.\n\n55\n00:02:40.320 --> 00:02:43.630\nBut a new link still has to go\nthrough the listening phase.\n\n56\n00:02:43.630 --> 00:02:46.860\nSo even in rapid you're still gonna\nhave that 15 second period of time\n\n57\n00:02:46.860 --> 00:02:48.180\nwhere nothing is happening.\n\n58\n00:02:48.180 --> 00:02:53.455\nWell, when you send out an broadcast\nhow long do you wait before giving up?\n\n59\n00:02:53.455 --> 00:02:55.565\nIt actually doesn't wait very long at all.\n\n60\n00:02:55.565 --> 00:02:59.665\nBut Microsoft, the Linux developers,\n\n61\n00:02:59.665 --> 00:03:02.375\nApple, they know about\nspanning tree protocol.\n\n62\n00:03:02.375 --> 00:03:04.885\nThey know it's very common\nin enterprise networks.\n\n63\n00:03:04.885 --> 00:03:08.059\nAnd so what they do is they try once and\nthen they fail and\n\n64\n00:03:08.059 --> 00:03:10.830\nthen they wait 30 seconds and\nthey try again.\n\n65\n00:03:10.830 --> 00:03:13.380\nAnd if they still fail, they wait\n30 seconds more and then try again.\n\n66\n00:03:13.380 --> 00:03:16.160\nSo the wait a minute and a half sometimes.\n\n67\n00:03:16.160 --> 00:03:19.630\nNow a lot of operating systems know\nabout this and they handle it.\n\n68\n00:03:19.630 --> 00:03:21.770\nAnd the way they handle\nit is they don't wait for\n\n69\n00:03:21.770 --> 00:03:24.800\ntheir network to finish before booting\nthe rest of the operating system.\n\n70\n00:03:24.800 --> 00:03:28.060\nSo they'll continue to boot even without\ntheir network and app ware working.\n\n71\n00:03:28.060 --> 00:03:29.550\nAnd that's not normally a big deal, but\n\n72\n00:03:29.550 --> 00:03:33.700\nsometimes you have services that get\nreally really unhappy about that.\n\n73\n00:03:33.700 --> 00:03:36.820\nAnd if you have something like that,\nthat's gonna get unhappy about it,\n\n74\n00:03:36.820 --> 00:03:38.340\nit can really cause a problem.\n\n75\n00:03:38.340 --> 00:03:41.030\nThe best example I can give\nyou are network printers.\n\n76\n00:03:42.090 --> 00:03:43.600\nA network printer if it's set for\n\n77\n00:03:43.600 --> 00:03:46.600\nDHCP which granted a lot of you\nwho'll probably do static IPs but\n\n78\n00:03:46.600 --> 00:03:50.227\nif you do DHCP on network printer,\nyou plug it in and it goes to boot up.\n\n79\n00:03:50.227 --> 00:03:54.700\nIt may not get a DHCP address in time\nbecause of spanning tree protocol.\n\n80\n00:03:54.700 --> 00:03:59.540\nAnd so then it's gonna use automatic\nprivate IP address, or APIPA.\n\n81\n00:03:59.540 --> 00:04:03.654\nAnd It'll end up with one\nof those 169.254 addresses\n\n82\n00:04:03.654 --> 00:04:08.506\nthat are really not very useful for\nany kind of multi-subnet network.\n\n83\n00:04:08.506 --> 00:04:12.910\nSo to prevent that, what we can do is\nwe can tweak the way this spanning tree\n\n84\n00:04:12.910 --> 00:04:17.580\nprotocol works and we can say look\nwe're a trusting kind of place right?\n\n85\n00:04:17.580 --> 00:04:19.900\nWe expect there not to be a loop.\n\n86\n00:04:19.900 --> 00:04:22.600\nSo stop treating every\nport like it's guilty.\n\n87\n00:04:22.600 --> 00:04:23.680\nThe default for\n\n88\n00:04:23.680 --> 00:04:26.420\nspanning tree protocol is that you're\nguilty until proven innocent right?\n\n89\n00:04:26.420 --> 00:04:29.150\nSo you plug in that jack and\nit blocks you immediately,\n\n90\n00:04:29.150 --> 00:04:30.950\nsays nope, you're gonna listen and learn.\n\n91\n00:04:30.950 --> 00:04:34.100\nAnd after 30 seconds,\nif you prove your innocence.\n\n92\n00:04:34.100 --> 00:04:37.100\nNo BPDU's crossed the line,\nthen it brings you on, right.\n\n93\n00:04:37.100 --> 00:04:39.210\nSo you're guilty until proven innocent.\n\n94\n00:04:39.210 --> 00:04:42.860\nWell, we can change spanning\ntree be the other way around.\n\n95\n00:04:42.860 --> 00:04:45.180\nMake the ports innocent\nuntil proven guilty.\n\n96\n00:04:45.180 --> 00:04:48.510\nWhen somebody plugs in the jack,\nlet them come on automatically.\n\n97\n00:04:48.510 --> 00:04:51.760\nAnd then just pay attention,\nwatch the port.\n\n98\n00:04:51.760 --> 00:04:55.990\nAnd if you see a BPDU,\nclamp down on it, block it,\n\n99\n00:04:55.990 --> 00:04:57.740\nmake it go through listening and learning.\n\n100\n00:04:57.740 --> 00:05:00.450\nBut only when you see that first BPDU.\n\n101\n00:05:00.450 --> 00:05:02.080\nSo we're trusting.\n\n102\n00:05:02.080 --> 00:05:06.660\nAnd that's nice because now a workstation\nor a printer or whatever plugs in,\n\n103\n00:05:06.660 --> 00:05:10.090\nit immediately gets access on the network,\nwhich is great.\n\n104\n00:05:10.090 --> 00:05:13.240\nBut If there's a loop,\nthe loop will still get blocked.\n\n105\n00:05:13.240 --> 00:05:14.030\nWe still have that safety.\n\n106\n00:05:14.030 --> 00:05:17.370\nNow on a negative side,\nit's gotta watch for a BPDU.\n\n107\n00:05:17.370 --> 00:05:19.560\nSo the loop could exist.\n\n108\n00:05:19.560 --> 00:05:24.530\nThere could be a real loop and unless we\nsee a BPDU cross, we won't know it and\n\n109\n00:05:24.530 --> 00:05:25.590\nnow I've got a loop on my network.\n\n110\n00:05:25.590 --> 00:05:28.130\nSo I potentially open myself up to a loop.\n\n111\n00:05:28.130 --> 00:05:32.900\nBut if there's a loop on the network, your\nroot bridge's BPDU is being sent out, and\n\n112\n00:05:32.900 --> 00:05:34.830\nso it is going to come back.\n\n113\n00:05:34.830 --> 00:05:36.940\nIt may just take 30 seconds, and\n\n114\n00:05:36.940 --> 00:05:41.210\nso you could potentially have a loop\non your network for 30 seconds.\n\n115\n00:05:41.210 --> 00:05:43.550\nWell, is that the end of the world?\n\n116\n00:05:43.550 --> 00:05:48.091\nIn a really, really, really high\nthroughput network where you're\n\n117\n00:05:48.091 --> 00:05:50.765\npushing millions of frames per second.\n\n118\n00:05:50.765 --> 00:05:51.640\nYeah, it's a big deal.\n\n119\n00:05:51.640 --> 00:05:54.220\nYou don't wanna loop even for\n30 seconds, right?\n\n120\n00:05:54.220 --> 00:05:58.200\nBut in most networks where you\nhave even thousands of computers,\n\n121\n00:05:58.200 --> 00:06:00.330\nyou're not pushing that many frames.\n\n122\n00:06:00.330 --> 00:06:03.980\nAnd as a result, a 30 second loop is\nreally not that big of a deal, right?\n\n123\n00:06:03.980 --> 00:06:09.330\nSo what Cisco recommends is that you do\nchange the behavior of spanning tree for\n\n124\n00:06:09.330 --> 00:06:13.190\nyour access ports, your ports where\nyou have workstations and laptops and\n\n125\n00:06:13.190 --> 00:06:14.230\nprinters.\n\n126\n00:06:14.230 --> 00:06:17.440\nBut in your core leave it the default way.\n\n127\n00:06:17.440 --> 00:06:20.140\nIn your core it's best to\nleave it with the safety net,\n\n128\n00:06:20.140 --> 00:06:22.360\nthat 30 second window\nwhenever you plugin a port.\n\n129\n00:06:22.360 --> 00:06:25.070\nSo when you plugin that network\ncable into a Cisco switch,\n\n130\n00:06:25.070 --> 00:06:27.000\nthe link light is gonna go orange.\n\n131\n00:06:27.000 --> 00:06:29.210\nAnd it's gonna stay orange for 30 seconds.\n\n132\n00:06:29.210 --> 00:06:29.965\nThen it'll go green.\n\n133\n00:06:29.965 --> 00:06:31.013\nOnce you get through listening and\nlearning.\n\n134\n00:06:31.013 --> 00:06:32.140\nAll right?\n\n135\n00:06:32.140 --> 00:06:33.420\nSo we see that all the time.\n\n136\n00:06:33.420 --> 00:06:34.797\nLet me show you.\n\n137\n00:06:34.797 --> 00:06:36.160\nI'm gonna take this switch here.\n\n138\n00:06:36.160 --> 00:06:38.390\nThis is my NYACCESS1.\n\n139\n00:06:38.390 --> 00:06:43.390\nNYACCESS1 has a server plugged\nin on one of its ports.\n\n140\n00:06:43.390 --> 00:06:46.880\nIf I do a show ip interface brief.\n\n141\n00:06:46.880 --> 00:06:49.765\nI can find port number 1, fa0/1.\n\n142\n00:06:49.765 --> 00:06:54.040\nThis guy right here and\nI can see it's status is up up.\n\n143\n00:06:54.040 --> 00:06:56.440\nIt's got a workstation\nplugged into it right now.\n\n144\n00:06:56.440 --> 00:07:01.482\nOkay, and if I do a show spanning-tree and\n\n145\n00:07:01.482 --> 00:07:05.551\nI pull up for interface fa0/1.\n\n146\n00:07:05.551 --> 00:07:09.763\nI can see it's right there, it's currently\ndesignated and it's forwarding, right,\n\n147\n00:07:09.763 --> 00:07:12.306\nit's allowing traffic to pass through,\nall right.\n\n148\n00:07:12.306 --> 00:07:14.130\nNow, I'm gonna go and shut that port down.\n\n149\n00:07:15.660 --> 00:07:21.371\nSo I'm gonna just kinda shut that one\ndown, and if I do a show spanning-tree\n\n150\n00:07:21.371 --> 00:07:28.040\ninterface fa0/1, it's no longer\nparticipating in spanning tree.\n\n151\n00:07:28.040 --> 00:07:29.800\nBecause it shut down, okay?\n\n152\n00:07:29.800 --> 00:07:33.390\nSo, remember, a port has to be up for\nit to participate in spanning tree,\n\n153\n00:07:33.390 --> 00:07:36.270\notherwise, it's just gonna show up\nlike this one showing up right here.\n\n154\n00:07:36.270 --> 00:07:38.370\nYou know, it's online, right.\n\n155\n00:07:38.370 --> 00:07:40.931\nNow, when I do a no shutdown,\nit's gonna come back online,\n\n156\n00:07:40.931 --> 00:07:43.156\nit's gonna start participating\nin spanning tree.\n\n157\n00:07:43.156 --> 00:07:49.040\nAnd if I pull up its status, as soon as it\ncomes up, there we go, I'm in listening.\n\n158\n00:07:49.040 --> 00:07:50.214\nSee that status right there?\n\n159\n00:07:50.214 --> 00:07:53.902\nListening, and I'm gonna be in listening\nfor 15 seconds, and then as I wait,\n\n160\n00:07:53.902 --> 00:07:56.846\nI'm just running the same command over and\nover again, right?\n\n161\n00:07:56.846 --> 00:07:57.981\nI'm still in listening.\n\n162\n00:07:57.981 --> 00:08:02.445\nAnd as soon as 15 seconds is up it'll\ntransition to learning, there it is,\n\n163\n00:08:02.445 --> 00:08:03.143\nlearning.\n\n164\n00:08:03.143 --> 00:08:05.199\nAnd then 15 seconds before\nit goes to forwarding.\n\n165\n00:08:05.199 --> 00:08:08.567\nIf I was in rapid spanning tree\nit would have skipped learning.\n\n166\n00:08:08.567 --> 00:08:11.133\nYou would just do listening and\nthen move right into forwarding, so\n\n167\n00:08:11.133 --> 00:08:13.840\nit would be 15 seconds,\nwe would be done already in rapid.\n\n168\n00:08:13.840 --> 00:08:17.595\nBut since I'm in regular 802.1D I've\ngot to wait a little bit longer and\n\n169\n00:08:17.595 --> 00:08:18.708\nnow I'm forwarding.\n\n170\n00:08:18.708 --> 00:08:20.756\nNow that wasn't that long.\n\n171\n00:08:20.756 --> 00:08:23.950\nAs an end-user if you just plugged your\ncomputer in and you pushed the power\n\n172\n00:08:23.950 --> 00:08:27.570\nbutton, it's probably gonna take you\nmore than 30 seconds to boot anyway.\n\n173\n00:08:27.570 --> 00:08:30.570\nAnd so most people don't even notice.\n\n174\n00:08:30.570 --> 00:08:33.370\nBut if you're like me, and\nyou're walking around with your laptop\n\n175\n00:08:33.370 --> 00:08:36.550\nthat's already on and you plug into\nthat wall jack, you'll notice.\n\n176\n00:08:36.550 --> 00:08:38.820\nIt's 30 seconds you gotta sit there and\nwait, like why isn't this working?\n\n177\n00:08:38.820 --> 00:08:41.215\nMy pings aren't going through, and\nthen all of a sudden they magically do.\n\n178\n00:08:41.215 --> 00:08:43.134\nYou were just being held down for\nthe loop.\n\n179\n00:08:43.134 --> 00:08:47.220\nWell we can turn on port fast.\n\n180\n00:08:47.220 --> 00:08:49.850\nAnd with port fast,\nthat's gonna tell it hey, for\n\n181\n00:08:49.850 --> 00:08:52.200\nthis port,\ngive it the benefit of the doubt.\n\n182\n00:08:52.200 --> 00:08:53.970\nGive it a break,\nit's probably not gonna be a loop.\n\n183\n00:08:53.970 --> 00:08:55.920\nThis is an access port.\n\n184\n00:08:55.920 --> 00:08:59.062\nNow on a trump port we don't wanna do\nthis, but on an access port, a port we\n\n185\n00:08:59.062 --> 00:09:02.800\nknow it's gonna be work stations,\nlaptops, printers, stuff like that.\n\n186\n00:09:02.800 --> 00:09:05.560\nThe likelihood of having\na loop there is pretty low, so\n\n187\n00:09:05.560 --> 00:09:07.288\nlet's give them the benefit of the doubt.\n\n188\n00:09:07.288 --> 00:09:13.060\nSo I'm gonna issue this command,\nspanning-tree portfast.\n\n189\n00:09:14.450 --> 00:09:15.991\nI'm issuing it on the port.\n\n190\n00:09:15.991 --> 00:09:20.878\nSo just on FA0/1,\nwe do this on a port by port basis.\n\n191\n00:09:20.878 --> 00:09:23.259\nBecause we don't want to apply\nthis to our trunk ports and\n\n192\n00:09:23.259 --> 00:09:26.100\nwe don't want to apply it to ports\nwhere we think a loop might occur.\n\n193\n00:09:26.100 --> 00:09:29.124\nSo on this interface,\nI'm saying spanning-tree portfast,\n\n194\n00:09:29.124 --> 00:09:33.014\nif you wanna do more than one interface\nI'll show you some shortcuts in a minute.\n\n195\n00:09:33.014 --> 00:09:34.982\nNow as soon as I do that I\nget this great big warning.\n\n196\n00:09:34.982 --> 00:09:36.820\nAnd it's just letting me know,\n\n197\n00:09:36.820 --> 00:09:40.780\nportfast should only be enabled to\nports connected to a single host.\n\n198\n00:09:40.780 --> 00:09:44.240\nIn other words, access ports,\nnot to something that has a hub or\n\n199\n00:09:44.240 --> 00:09:45.300\na switch on the end.\n\n200\n00:09:45.300 --> 00:09:48.720\nNot to something that a trunk\ncarrying more than one Vlan,\n\n201\n00:09:48.720 --> 00:09:49.770\nthat can be really bad.\n\n202\n00:09:49.770 --> 00:09:53.920\nSo we don't want stuff like that,\njust an access port.\n\n203\n00:09:53.920 --> 00:09:57.230\nAnd then it's telling me that it's\nbeen configured on FA0/1, but\n\n204\n00:09:57.230 --> 00:10:01.750\nwill only have effect when the interface\nis in a non-trunking mode.\n\n205\n00:10:01.750 --> 00:10:05.035\nIf it's a trunk, the portfast\ncommand with actually get ignored.\n\n206\n00:10:05.035 --> 00:10:08.788\nWhich is kind of a nice thing,\nbecause there's a safety net for us there.\n\n207\n00:10:08.788 --> 00:10:11.333\nSo now I've got portfast turned on,\n\n208\n00:10:11.333 --> 00:10:15.450\nwell the behaviour's not really\nany different right now.\n\n209\n00:10:15.450 --> 00:10:17.620\nWe'll see the behaviour\nwhen I reset the port.\n\n210\n00:10:17.620 --> 00:10:21.870\nSo I'm gonna go ahead and shut the port\ndown again, like I did just a moment ago.\n\n211\n00:10:21.870 --> 00:10:25.303\nAnd I'm gonna pull up the current\nspanning-tree status, so\n\n212\n00:10:25.303 --> 00:10:27.554\nthe current status is gonna be nothing.\n\n213\n00:10:27.554 --> 00:10:31.089\nCuz it's not participating\na spanning-tree, and\n\n214\n00:10:31.089 --> 00:10:33.022\nI'm gonna do a no shutdown.\n\n215\n00:10:33.022 --> 00:10:34.668\nAnd it's still not participating\nuntil I see my little\n\n216\n00:10:34.668 --> 00:10:36.060\nmessage telling me the link went up.\n\n217\n00:10:36.060 --> 00:10:40.280\nWell, there is the link, and see how\nI immediately went into forwarding?\n\n218\n00:10:40.280 --> 00:10:41.766\nI jumped right to forwarding.\n\n219\n00:10:41.766 --> 00:10:44.998\nThat's great, I'm now forwarding traffic,\ndata is moving through.\n\n220\n00:10:44.998 --> 00:10:48.908\nAnd if a BPDU crosses the line,\na bridge protocol data unit,\n\n221\n00:10:48.908 --> 00:10:52.580\nif a BPDU crosses the line,\nmy switch will see it.\n\n222\n00:10:52.580 --> 00:10:56.250\nAnd as soon as it sees the BPD,\nwhat does it do?\n\n223\n00:10:56.250 --> 00:10:58.430\nWell, it disables portfast.\n\n224\n00:10:58.430 --> 00:11:01.240\nIt says, can't run portfast here,\nthere's a switch on the other side.\n\n225\n00:11:01.240 --> 00:11:06.110\nIt disables portfast which then forces\nus to go through listening and learning.\n\n226\n00:11:06.110 --> 00:11:10.083\nNow if we go to listening and learning\nsuccessfully and there's not a loop,\n\n227\n00:11:10.083 --> 00:11:13.948\nthen the port will come up, it'll let\nyou have a switch on the other side.\n\n228\n00:11:13.948 --> 00:11:19.212\nBut if I see BPDUs from the root bridge\ncoming across, then I know I have a loop.\n\n229\n00:11:19.212 --> 00:11:22.700\nAnd I either have to shut this port\ndown or shut down one of my other ports.\n\n230\n00:11:22.700 --> 00:11:26.650\nIt'll make that decision and\nthen we're now loop free again.\n\n231\n00:11:26.650 --> 00:11:29.460\nBut at that point portfast is\nconfigured on the interface, but\n\n232\n00:11:29.460 --> 00:11:30.339\nit's actually disabled.\n\n233\n00:11:31.430 --> 00:11:34.900\nNow how do I know if I have got that\nif it's configured but disabled?\n\n234\n00:11:34.900 --> 00:11:41.139\nYou don't really see it if I do a show\nrunning-config interface fa0/1,\n\n235\n00:11:41.139 --> 00:11:46.390\nI can see where I configured\nspanning-tree portfast.\n\n236\n00:11:46.390 --> 00:11:49.304\nSo I know it is enabled, well sort of,\nI know it was configured.\n\n237\n00:11:49.304 --> 00:11:50.988\nIf there was a switch on the other side,\n\n238\n00:11:50.988 --> 00:11:53.602\nportfast must not actually be\ndisabled in practice though.\n\n239\n00:11:53.602 --> 00:11:56.907\nSo there is one other command, I don't\nthink this will show up on the exam but\n\n240\n00:11:56.907 --> 00:11:58.262\nin real life you might need it.\n\n241\n00:11:58.262 --> 00:12:02.534\nWhich is, a minute ago, and\nthis one is going to go under my head,\n\n242\n00:12:02.534 --> 00:12:05.750\nI did show spanning-tree interface fa0/1.\n\n243\n00:12:05.750 --> 00:12:10.180\nYou can actually add one little more word\nto the end of that, which is detail.\n\n244\n00:12:10.180 --> 00:12:13.297\nA detail will show you\na little more information.\n\n245\n00:12:13.297 --> 00:12:18.271\nAnd what you'll be able to see in here\nis whether portfast is enabled or not.\n\n246\n00:12:18.271 --> 00:12:22.837\nAnd as I look down the listing here,\nI can see that designated and forwarding,\n\n247\n00:12:22.837 --> 00:12:24.730\nit's got it's priority.\n\n248\n00:12:24.730 --> 00:12:28.195\nIt's forward delay is 0,\n\n249\n00:12:28.195 --> 00:12:33.045\nwhich is my portfast being ready to go\nright off the bat when I first plug in.\n\n250\n00:12:33.045 --> 00:12:36.635\nSo you can see a little extra information\nabout the system right there and\n\n251\n00:12:36.635 --> 00:12:38.415\nget an idea of what's going on.\n\n252\n00:12:38.415 --> 00:12:39.875\nSo this one's up and happy.\n\n253\n00:12:39.875 --> 00:12:43.175\nI can also see BPDU sent and received.\n\n254\n00:12:43.175 --> 00:12:45.865\nI've sent 51 BPDUs on this interface.\n\n255\n00:12:47.010 --> 00:12:49.940\nIt says I've received three BPDUs.\n\n256\n00:12:49.940 --> 00:12:54.020\nSo I have actually received some BPDUs\nat some point on this interface.\n\n257\n00:12:54.020 --> 00:12:56.542\nNow, when did that happen?\n\n258\n00:12:56.542 --> 00:12:58.540\nDid it happen recently,\nsince I configured port fast?\n\n259\n00:12:58.540 --> 00:13:02.810\nProbably not, otherwise I wouldn't have\ngone right into forwarding a moment ago.\n\n260\n00:13:02.810 --> 00:13:05.200\nThese might be older, so\nI might need to clear these counters.\n\n261\n00:13:05.200 --> 00:13:07.920\nYou've got the clear command where\nyou can go and reset these or\n\n262\n00:13:07.920 --> 00:13:10.280\nyou can always reboot the switch\nif you were really bored.\n\n263\n00:13:10.280 --> 00:13:13.730\nBut it does look like I've received\na couple of BPDUs on the interface.\n\n264\n00:13:13.730 --> 00:13:16.550\nThat isn't necessarily\ngonna block the interface.\n\n265\n00:13:16.550 --> 00:13:19.553\nIt just means we're gonna check and\nsee if there's any loops and\n\n266\n00:13:19.553 --> 00:13:22.062\nif there is a loop then,\nyeah, we might take action.\n\n267\n00:13:22.062 --> 00:13:27.448\nWe can always do a show spanning-tree to\nsee what that actual status is for Fa0/1.\n\n268\n00:13:27.448 --> 00:13:29.032\nI'm just designated and forwarding.\n\n269\n00:13:29.032 --> 00:13:33.584\n>> Now Don, you said that really its\ndefault behavior though is that if it does\n\n270\n00:13:33.584 --> 00:13:39.120\nsee BPDUs, as long as there's not a loop\nit's still gonna allow it to go through.\n\n271\n00:13:39.120 --> 00:13:43.040\nBut if we do see BPDUs,\nI'm gonna not be able to say that.\n\n272\n00:13:43.040 --> 00:13:47.300\nThere's a loop that'll either shut down\nthat interface or some other interface.\n\n273\n00:13:47.300 --> 00:13:50.940\nIs there a way I can actually,\nbecause if that loop gets removed,\n\n274\n00:13:50.940 --> 00:13:52.210\nif something stops it.\n\n275\n00:13:52.210 --> 00:13:56.550\nIs there another command or anything I\ncan do to say look if you find a BPDU\n\n276\n00:13:56.550 --> 00:13:59.020\njust lock it down cuz I don't\nwant that to happen at all?\n\n277\n00:13:59.020 --> 00:14:00.250\n>> Yeah we can go a step further,\n\n278\n00:14:00.250 --> 00:14:03.320\nit's one of the optional commands\nyou have which is called BPDU guard.\n\n279\n00:14:03.320 --> 00:14:06.090\nBPDU guard is where you say hey,\nthis is an access port and\n\n280\n00:14:06.090 --> 00:14:09.460\nI should never see a BPDU on this port.\n\n281\n00:14:09.460 --> 00:14:11.120\nJust not at all, and\n\n282\n00:14:11.120 --> 00:14:15.430\nif I do see a BPDU, don't do loop\ndetection, shut the port down.\n\n283\n00:14:15.430 --> 00:14:17.520\nJust immediately take that action and\nclamp it off.\n\n284\n00:14:17.520 --> 00:14:18.580\nSo we can do that.\n\n285\n00:14:18.580 --> 00:14:21.610\nIt's one step further with portfast.\n\n286\n00:14:21.610 --> 00:14:23.860\nAnd if I showed you on this port\nit wouldn't be all that helpful.\n\n287\n00:14:23.860 --> 00:14:26.100\nLet me show you on a port\nthat actually has a switch.\n\n288\n00:14:26.100 --> 00:14:26.710\nSo for\n\n289\n00:14:26.710 --> 00:14:31.350\nexample, if I do a show cdp neighbor\nI'm plugged into a couple switches.\n\n290\n00:14:31.350 --> 00:14:36.590\nNYCORE1 and\nNYCORE2 on Fas 0/24 and Fas 0/23.\n\n291\n00:14:36.590 --> 00:14:43.410\nSo when I do a show spanning-tree,\nwhoops if I can type it.\n\n292\n00:14:43.410 --> 00:14:46.580\nPort 23 and 24,\nthey're designated in forwarding,\n\n293\n00:14:46.580 --> 00:14:49.570\nwhich means I'm the root bridge,\nI'm fancy pants.\n\n294\n00:14:49.570 --> 00:14:51.718\nAll right, I'm the root bridge,\nbut either way,\n\n295\n00:14:51.718 --> 00:14:54.870\nI know I'm the root bridge\ncuz I have no root port.\n\n296\n00:14:54.870 --> 00:14:57.830\nThe root bridge is the only bridge\nthat won't have root ports.\n\n297\n00:14:57.830 --> 00:15:00.990\nI only have designated ports, that's\nthe easy way to spot that you're the root.\n\n298\n00:15:00.990 --> 00:15:03.780\nOr I guess I could also just read this\npart right here that says this bridge is\n\n299\n00:15:03.780 --> 00:15:04.835\nthe root, that would help too.\n\n300\n00:15:04.835 --> 00:15:07.700\n[LAUGH] So,\nI'm doing things the hard way today.\n\n301\n00:15:07.700 --> 00:15:10.604\nSo, I've got these two other\nswitches that are out there.\n\n302\n00:15:10.604 --> 00:15:12.734\nI'm definitely receiving BPDUs from them.\n\n303\n00:15:12.734 --> 00:15:16.009\nAnd so that's a part of my loop\ndetection is going on to make sure that\n\n304\n00:15:16.009 --> 00:15:17.680\nthose guys are not being allowed.\n\n305\n00:15:18.690 --> 00:15:21.910\nOr that they are being allowed, they are,\nbut just that there's not a loop, so\n\n306\n00:15:21.910 --> 00:15:23.130\nthat's all happening.\n\n307\n00:15:23.130 --> 00:15:27.440\nWell what if port 23 was\nactually an access port.\n\n308\n00:15:27.440 --> 00:15:30.826\nI expected a work station to be there but\nsomebody brought a switch from home.\n\n309\n00:15:30.826 --> 00:15:36.063\nSomebody, maybe Bob in\naccounting had his son,\n\n310\n00:15:36.063 --> 00:15:40.162\nwho was in middle school and was sick.\n\n311\n00:15:40.162 --> 00:15:42.170\nAnd so he said well, I'm just gonna\ntake him to work with me today.\n\n312\n00:15:42.170 --> 00:15:43.798\nAnd he can sit there and\nbrowse the internet.\n\n313\n00:15:43.798 --> 00:15:47.198\nSo he brings his computer in,\nbut he needs a network jack.\n\n314\n00:15:47.198 --> 00:15:49.038\nSo he says well I only have on\nnetwork jack in my office so\n\n315\n00:15:49.038 --> 00:15:50.569\nmaybe I'll bring this\nlittle hub from home.\n\n316\n00:15:50.569 --> 00:15:52.717\nThis little switch from home and\nplug it into the wall so\n\n317\n00:15:52.717 --> 00:15:54.081\nI can have more than one computer.\n\n318\n00:15:54.081 --> 00:15:57.565\nWell violating corporate policy I've got\nunauthorized machines on my network.\n\n319\n00:15:57.565 --> 00:15:59.108\nSo I wanna make sure that doesn't happen.\n\n320\n00:15:59.108 --> 00:16:01.689\nAnd port 23 is Bob's port.\n\n321\n00:16:01.689 --> 00:16:05.051\nWell, normally, I might have Bob's\nport set up for Port Fast so\n\n322\n00:16:05.051 --> 00:16:06.810\nthat it just comes up no problem.\n\n323\n00:16:06.810 --> 00:16:08.387\nBut right now, he's probably got a hub or\na switch in there.\n\n324\n00:16:08.387 --> 00:16:09.493\nI don't want that.\n\n325\n00:16:09.493 --> 00:16:14.150\nAnd so if I wanna protect from that,\nI can turn on BPDU Guard.\n\n326\n00:16:14.150 --> 00:16:20.150\nBut VPU Guard, if I see even a single\nBPDU, I'll shut the port down.\n\n327\n00:16:20.150 --> 00:16:22.410\nNow, if it's a hub, hubs are dumb devices.\n\n328\n00:16:22.410 --> 00:16:23.349\nThey're layer 1.\n\n329\n00:16:23.349 --> 00:16:24.485\nThey just repeat electricity.\n\n330\n00:16:24.485 --> 00:16:26.364\nThey don't generate BPDUs.\n\n331\n00:16:26.364 --> 00:16:29.760\nSo BPDU Guard isn't going\nto help at the hub, is it?\n\n332\n00:16:29.760 --> 00:16:32.138\nWell, it'll help at\nthe hub if there's a loop.\n\n333\n00:16:32.138 --> 00:16:35.649\nIf there's a loop,\nmy BPDU would go out to that hub and\n\n334\n00:16:35.649 --> 00:16:38.157\nthen come right back in from that hub.\n\n335\n00:16:38.157 --> 00:16:39.973\nAnd I would see it and now I'd block it.\n\n336\n00:16:39.973 --> 00:16:42.849\nEven though it's layer 1, I would\nstill see my own BPDU's coming back.\n\n337\n00:16:42.849 --> 00:16:46.699\nOr the root ridge's BPDU’s coming back,\ncuz they get forwarded.\n\n338\n00:16:46.699 --> 00:16:50.469\nIf it's a switch,\nthe switch itself may generate BPDU's but\n\n339\n00:16:50.469 --> 00:16:52.730\nif it's not an intelligent switch.\n\n340\n00:16:52.730 --> 00:16:56.940\nIf it's just a layered 2 switch, I'll\nlikely again see my own BPDU's coming back\n\n341\n00:16:56.940 --> 00:16:58.817\nto me that way and be able to block it.\n\n342\n00:16:58.817 --> 00:17:01.147\nSo you do get kind of\nprotections one way or another.\n\n343\n00:17:01.147 --> 00:17:04.946\nBut if Bob was really angry and he ran\na cable from his office over to somebody\n\n344\n00:17:04.946 --> 00:17:07.975\nelse’s office,\nit's my switch coming back to my switch.\n\n345\n00:17:07.975 --> 00:17:10.230\nI'm gonna see my own BPDUs, all right?\n\n346\n00:17:10.230 --> 00:17:11.981\nSo here's what I'm gonna do.\n\n347\n00:17:11.981 --> 00:17:13.661\nI'm gonna shut those two ports down.\n\n348\n00:17:13.661 --> 00:17:16.927\nSo I'm gonna get into my configuration and\n\n349\n00:17:16.927 --> 00:17:21.108\nget into interface range,\nfa0/23 through 24.\n\n350\n00:17:21.108 --> 00:17:23.708\nAll right, so\nI'm gonna modify these two interfaces.\n\n351\n00:17:23.708 --> 00:17:27.784\nAnd we're gonna turn out BPDU Guard\nto help protect us, all right.\n\n352\n00:17:27.784 --> 00:17:34.258\nSo the way we do this is we get in and\nwe just say,\n\n353\n00:17:34.258 --> 00:17:39.410\nspanning-tree bpduguard enable.\n\n354\n00:17:39.410 --> 00:17:42.902\nAll right, I don't want to receive\nBPDUs on these interfaces.\n\n355\n00:17:42.902 --> 00:17:44.173\nYou know what, actually, shoot.\n\n356\n00:17:44.173 --> 00:17:46.883\nBefore I do that, I'm modifying 23 and 24.\n\n357\n00:17:46.883 --> 00:17:48.801\nI actually just want to do port 23.\n\n358\n00:17:48.801 --> 00:17:51.047\nI don't want to do both of them,\n\n359\n00:17:51.047 --> 00:17:54.895\nbecause port 24 is my uplink\nthat I actually do want.\n\n360\n00:17:54.895 --> 00:17:56.310\nDouble interface there.\n\n361\n00:17:56.310 --> 00:17:57.383\nSo let me, let me fix that.\n\n362\n00:17:57.383 --> 00:17:58.894\nSo I'm just gonna do port 23.\n\n363\n00:17:58.894 --> 00:18:00.945\nBut I do wanna shut the two ports down.\n\n364\n00:18:00.945 --> 00:18:03.307\nI guess that's probably where\nI really need to start.\n\n365\n00:18:03.307 --> 00:18:06.853\nSo I'm gonna shut these ports down, so\ntheir out of spanning tree right now.\n\n366\n00:18:06.853 --> 00:18:09.632\nSo they're not involved in\nspanning tree at all, and\n\n367\n00:18:09.632 --> 00:18:12.924\nI'm just gonna get into port 23 and\nturn on bpduguard there.\n\n368\n00:18:12.924 --> 00:18:18.780\nSo I'm gonna say,\nspanning-tree bpduguard and then enable.\n\n369\n00:18:18.780 --> 00:18:22.731\nSo I'm turning it on just for\nport 23, alright?\n\n370\n00:18:22.731 --> 00:18:26.646\nNow, when I turn these two guys back on\nwe're gonna see something interesting.\n\n371\n00:18:26.646 --> 00:18:32.010\nIf I do a show spanning dash tree right\nnow, I don't see ports 23 and 24 right?\n\n372\n00:18:32.010 --> 00:18:33.821\nBecause they're shut down.\n\n373\n00:18:33.821 --> 00:18:36.703\nIf I do a no shut down,\nI'm gonna wait just a second for\n\n374\n00:18:36.703 --> 00:18:39.860\nthem to come up once I see my\nstatus messages, there we go.\n\n375\n00:18:39.860 --> 00:18:45.826\nAnd I'm going to pull up\nmy spanning tree output and\n\n376\n00:18:45.826 --> 00:18:51.531\nI see 24 has transitioned\nto listening right.\n\n377\n00:18:51.531 --> 00:18:55.045\nIt's going to go through learning and\nthen it's going to come online.\n\n378\n00:18:55.045 --> 00:18:57.790\nBut 23 is not on the list.\n\n379\n00:18:57.790 --> 00:19:00.440\nIt doesn't even show up, all right.\n\n380\n00:19:00.440 --> 00:19:02.406\nWhy doesn't 23 show up?\n\n381\n00:19:02.406 --> 00:19:06.696\nBecause it saw a BPDU and\nit shut the fort down okay.\n\n382\n00:19:06.696 --> 00:19:08.040\nNow how can I see that?\n\n383\n00:19:08.040 --> 00:19:11.465\nIf I do a show IP interface breathe and\n\n384\n00:19:11.465 --> 00:19:16.007\nI take a look at that output and\nI get to port 23.\n\n385\n00:19:16.007 --> 00:19:23.339\nWell here is port 23, and it shows as\ndown down as if the cable was unplugged.\n\n386\n00:19:23.339 --> 00:19:26.683\nAs if nothing was plugged\ninto that port at all, right?\n\n387\n00:19:26.683 --> 00:19:29.745\nAnd if I do a show interface fa0/23 and\n\n388\n00:19:29.745 --> 00:19:34.645\ntake a look at it here a little more\ndetailed, right, when I look at\n\n389\n00:19:34.645 --> 00:19:40.706\nthe detailed information I can see that\nthe line is down and it's air-disabled.\n\n390\n00:19:40.706 --> 00:19:43.967\nOkay, air-disabled,\nthat's a special status.\n\n391\n00:19:43.967 --> 00:19:48.112\nThat means that there's been a software\nerror on that port, all right.\n\n392\n00:19:48.112 --> 00:19:49.416\nWhat was the software error?\n\n393\n00:19:49.416 --> 00:19:52.272\nI don't know,\njust some software error occurred.\n\n394\n00:19:52.272 --> 00:19:54.531\nCould be a protocol error, could be,\n\n395\n00:19:54.531 --> 00:19:58.570\nthere's port security that we'll\nlearn about a little bit later.\n\n396\n00:19:58.570 --> 00:20:00.583\nIt could be something like\nthat that gets tripped.\n\n397\n00:20:00.583 --> 00:20:02.096\nThere's few other things.\n\n398\n00:20:02.096 --> 00:20:04.857\nOr it could be BPDU Guard, right,\nwhich is what we know it is.\n\n399\n00:20:04.857 --> 00:20:08.455\nSo even though it doesn't\noutright tell us it's BPDU guard,\n\n400\n00:20:08.455 --> 00:20:10.331\nthat is what my err disabled is.\n\n401\n00:20:10.331 --> 00:20:12.748\nThere's another command,\n\n402\n00:20:12.748 --> 00:20:18.600\nshow interfaces status err-disabled,\nthat command right there.\n\n403\n00:20:18.600 --> 00:20:23.282\nAnd that will show you which interfaces\nare currently in the err-disabled state.\n\n404\n00:20:23.282 --> 00:20:24.913\nAnd then it'll tell you why.\n\n405\n00:20:24.913 --> 00:20:29.701\nAnd so here's the place where\nI can see that Fa0/23 is\n\n406\n00:20:29.701 --> 00:20:32.810\nerr disabled because of bpduguard.\n\n407\n00:20:32.810 --> 00:20:34.639\nI received a bpduguard on it.\n\n408\n00:20:34.639 --> 00:20:37.904\nAnd if I'm watching my logs I kinda\nscrolled past it a little fast.\n\n409\n00:20:37.904 --> 00:20:42.983\nBut if I go back to the log messages,\nthe status messages that were coming up,\n\n410\n00:20:42.983 --> 00:20:48.301\nin those status messages right here,\nPM-4-ERR_DISABLE: bpduguard error\n\n411\n00:20:48.301 --> 00:20:53.327\ndetected on Fa0/23,\nputting Fa0/23 into an err-disable state.\n\n412\n00:20:53.327 --> 00:20:56.341\nSo the message popped up on my screen and\ntold me what was going on.\n\n413\n00:20:56.341 --> 00:20:59.585\nIf I was watching and if I wasn't\nwatching, I can pull it up with\n\n414\n00:20:59.585 --> 00:21:03.459\nthe interface status command all right so\na few different ways to see that.\n\n415\n00:21:03.459 --> 00:21:07.523\nNow each of these commands that I've\nshown you, I've shown you port fast and\n\n416\n00:21:07.523 --> 00:21:09.222\nI've shown you the bpduguard.\n\n417\n00:21:09.222 --> 00:21:12.016\nI was issuing those on\nindividual interfaces right?\n\n418\n00:21:12.016 --> 00:21:14.995\nBut the reality is if you\nhave an access switch,\n\n419\n00:21:14.995 --> 00:21:18.953\nyou probably have,\nlet's say it's a 48 port switch right?\n\n420\n00:21:18.953 --> 00:21:21.309\nAnd it's got those four\nlittle uplinks at the end.\n\n421\n00:21:21.309 --> 00:21:25.671\nYou'll probably want port fast and\nBPDU Guard on all 48 ports.\n\n422\n00:21:25.671 --> 00:21:28.670\nAnd just not on those uplink\nports down at the end, right?\n\n423\n00:21:28.670 --> 00:21:30.982\nMy switch, my uplink is on port 24.\n\n424\n00:21:30.982 --> 00:21:34.907\nSo ports one through 23, I probably\nwant port fast on all of them and\n\n425\n00:21:34.907 --> 00:21:37.218\nI probably want BPU Guard on all of them.\n\n426\n00:21:37.218 --> 00:21:39.121\nNow I could just use\nthe interface range command.\n\n427\n00:21:39.121 --> 00:21:44.096\nInterface range FA0/1- 24 or 23.\n\n428\n00:21:44.096 --> 00:21:46.213\nAnd then I would apply\nthe configuration to all of them.\n\n429\n00:21:46.213 --> 00:21:47.425\nSo you can do it that way.\n\n430\n00:21:47.425 --> 00:21:48.997\nBut there is another way on a switch.\n\n431\n00:21:48.997 --> 00:21:54.037\nIf it's an access switch, you can\nset it to default to them being on.\n\n432\n00:21:54.037 --> 00:21:55.909\nThe default is that portfast is off.\n\n433\n00:21:55.909 --> 00:21:57.807\nThe default is that BPDU Guard is off.\n\n434\n00:21:57.807 --> 00:22:00.358\nBut we can change those defaults.\n\n435\n00:22:00.358 --> 00:22:04.009\nBut you have to be careful because when\nyou change the default, it changes it for\n\n436\n00:22:04.009 --> 00:22:04.618\nevery port.\n\n437\n00:22:04.618 --> 00:22:06.075\nSo that means you'd have to go and\n\n438\n00:22:06.075 --> 00:22:08.635\nturn it off on the ports that\nyou didn't want it turned on.\n\n439\n00:22:08.635 --> 00:22:10.389\nSo, it's up to you how you wanna do it.\n\n440\n00:22:10.389 --> 00:22:13.187\nYou normally make the decision based\non how many ports you're dealing with.\n\n441\n00:22:13.187 --> 00:22:16.621\nSo, are you gonna have more\nports with PortFast on, or\n\n442\n00:22:16.621 --> 00:22:18.569\nmore ports with PortFast off?\n\n443\n00:22:18.569 --> 00:22:20.644\nIf you have more ports with PortFast on,\n\n444\n00:22:20.644 --> 00:22:24.872\nmore than half the ports have port fast\non, you should make PortFast the default.\n\n445\n00:22:24.872 --> 00:22:28.832\nIf you have more ports with port fast off,\nthen you should leave it at its normal\n\n446\n00:22:28.832 --> 00:22:32.019\ndefault and then just turn it on for\nthe ports where you want it.\n\n447\n00:22:32.019 --> 00:22:36.130\nSo it's just kind of a it achieves\nthe same goal, it's just less commands.\n\n448\n00:22:36.130 --> 00:22:40.217\nAll right, Don, you mentioned\nthat we can actually apply both,\n\n449\n00:22:40.217 --> 00:22:42.163\nboth PortFast and BPDU Guard.\n\n450\n00:22:42.163 --> 00:22:45.340\nIs there an advantage of\nBPDU Guard that says,\n\n451\n00:22:45.340 --> 00:22:47.953\nlook, when I see a BPDU, turn it off.\n\n452\n00:22:47.953 --> 00:22:49.569\nWhat's the advantage of doing both?\n\n453\n00:22:49.569 --> 00:22:51.784\n>> All right, so\nremember that with PortFast,\n\n454\n00:22:51.784 --> 00:22:55.235\nif somebody plugs in a switch and\nit generates BPDUs, what does it do?\n\n455\n00:22:55.235 --> 00:22:56.691\nIt disables PortFast.\n\n456\n00:22:56.691 --> 00:22:59.847\nAnd then it just does loop detection if\nthere's no loop it allows the switch.\n\n457\n00:22:59.847 --> 00:23:01.206\nYou still allow that switch.\n\n458\n00:23:01.206 --> 00:23:03.744\nBPDU Guard goes the step further,\nand what BPDU Guard,\n\n459\n00:23:03.744 --> 00:23:06.561\nit says I’m not gonna allow\nthe switch I’m gonna show it off.\n\n460\n00:23:06.561 --> 00:23:10.909\nSo if you want to allow\npeople to connect quickly and\n\n461\n00:23:10.909 --> 00:23:14.156\nnot allow switches you wanna do both.\n\n462\n00:23:14.156 --> 00:23:17.644\nIf you don't care about people connecting\nquickly, then you don't need Port Fast and\n\n463\n00:23:17.644 --> 00:23:18.949\nthen you can just use BPU guard.\n\n464\n00:23:18.949 --> 00:23:20.616\nOr if you don't care about\npeople using switches,\n\n465\n00:23:20.616 --> 00:23:22.527\nyou just want them to connect fast,\nyou can use PortFast.\n\n466\n00:23:22.527 --> 00:23:24.525\nSo individually, they both work great.\n\n467\n00:23:24.525 --> 00:23:27.743\nBut if you use them both together,\nyou get people connecting quickly and\n\n468\n00:23:27.743 --> 00:23:30.396\nyou're blocking unauthorized\nswitches on your network.\n\n469\n00:23:30.396 --> 00:23:32.373\nSo it's kind of the best of both worlds.\n\n470\n00:23:32.373 --> 00:23:37.150\nSo lets take a look at setting\nthese defaults for PortFast.\n\n471\n00:23:37.150 --> 00:23:41.404\nBefore I get too crazy here,\nI'm gonna shut down port fa0/24.\n\n472\n00:23:41.404 --> 00:23:43.658\nfa0/24 is my uplink, right?\n\n473\n00:23:43.658 --> 00:23:48.051\nThat's my trunk to the other switch, so\nI don't want that one to run Port Fast or\n\n474\n00:23:48.051 --> 00:23:50.686\nBPU Guard, so\nI'm just gonna shut it down now.\n\n475\n00:23:50.686 --> 00:23:53.523\nAnd that way I can go and\nfix it before I bring it back online.\n\n476\n00:23:53.523 --> 00:23:57.543\nAnd then back out here in\nmy global configuration,\n\n477\n00:23:57.543 --> 00:24:00.356\nI'm gonna issue spanning-tree.\n\n478\n00:24:00.356 --> 00:24:03.120\nPortfast default.\n\n479\n00:24:04.710 --> 00:24:07.800\nBy issuing that I get a nice\nlittle warning here telling me\n\n480\n00:24:07.800 --> 00:24:12.430\nthat we're effectively enabling\nportfast on every single port.\n\n481\n00:24:12.430 --> 00:24:20.060\nNow if I do a show run for\ninterface fa0/5, it doesn't show portfast.\n\n482\n00:24:20.060 --> 00:24:23.850\nAnd if I do it for port 1,\nit does show portfast.\n\n483\n00:24:25.220 --> 00:24:29.780\nBut the trick here is that both of\nthem now have portfast enabled,\n\n484\n00:24:29.780 --> 00:24:35.150\nthis one has it specifically designated,\ncuz we put it there, this one doesn't.\n\n485\n00:24:35.150 --> 00:24:37.480\nBut portfast is now the default, and so\n\n486\n00:24:37.480 --> 00:24:42.200\nif it doesn't have it, well portfast\nis actually on for that port.\n\n487\n00:24:42.200 --> 00:24:43.170\nSo we have to look for\n\n488\n00:24:43.170 --> 00:24:46.400\nthis default command that I've issue to\nknow that that's actually been set up.\n\n489\n00:24:46.400 --> 00:24:51.118\nBut right now, portfast is\nthe default on my system because I\n\n490\n00:24:51.118 --> 00:24:55.480\nissued the spanning-tree\nportfast default command.\n\n491\n00:24:56.900 --> 00:25:00.450\nSimilarly, we can do\na slightly longer command,\n\n492\n00:25:00.450 --> 00:25:06.601\nwhich is spanning-tree portfast edge\n\n493\n00:25:06.601 --> 00:25:12.500\nbpduguard default.\n\n494\n00:25:12.500 --> 00:25:15.150\nAnd, my heads gonna\ncover the end there but\n\n495\n00:25:15.150 --> 00:25:19.010\nspanning-tree portfast\nedge bpduguard default.\n\n496\n00:25:19.010 --> 00:25:21.800\nAnd with this one,\nwe're going through and saying, shoot,\n\n497\n00:25:21.800 --> 00:25:23.010\ndo we not need edge on this one?\n\n498\n00:25:23.010 --> 00:25:25.370\nSome switches need the edge keyword,\nsome switches don't.\n\n499\n00:25:25.370 --> 00:25:26.950\nLet's verify that real quick.\n\n500\n00:25:28.140 --> 00:25:30.670\nAnd this one doesn't need it.\n\n501\n00:25:30.670 --> 00:25:34.340\nThere's a little syntax difference between\nthe higher end, like the 4500 switches,\n\n502\n00:25:34.340 --> 00:25:35.610\nand then the lower end one.\n\n503\n00:25:35.610 --> 00:25:38.830\nThis is a lower end switch, and so\nsometimes you need that edge keyword,\n\n504\n00:25:38.830 --> 00:25:40.840\nsometimes you don't, and\nin this case, I didn't.\n\n505\n00:25:40.840 --> 00:25:44.360\nSo, spanning-tree portfast\nbpduguard default.\n\n506\n00:25:44.360 --> 00:25:49.700\nSo, by specifying that,\nnow all of my ports are looking for\n\n507\n00:25:49.700 --> 00:25:52.220\nbpdu's, that they see them,\nshutting them off.\n\n508\n00:25:52.220 --> 00:25:57.140\nNow that's a problem for me because\nport 24, I expect to see bpdu's,\n\n509\n00:25:57.140 --> 00:25:58.430\nthat's my uplink.\n\n510\n00:25:58.430 --> 00:26:02.310\nSo this is now my default,\nI'm gonna need to go in and turn that off.\n\n511\n00:26:03.510 --> 00:26:07.057\nSo I'm gonna get into interface fa0/24 and\n\n512\n00:26:07.057 --> 00:26:13.210\nI'm gonna say no spanning-tree portfast,\nto turn that off.\n\n513\n00:26:14.270 --> 00:26:20.160\nAnd no spanning-tree bpduguard enable.\n\n514\n00:26:21.670 --> 00:26:26.450\nSo I'm making sure to turn those off so\nthat it's not a problem for me and\n\n515\n00:26:26.450 --> 00:26:31.880\nit's not going to block my connection.\n\n516\n00:26:31.880 --> 00:26:35.970\nSo once that's in place,\nnow I've got those set, so\n\n517\n00:26:35.970 --> 00:26:40.770\nI should be able to turn this back on and\nbring that one up and it'll be happy.\n\n518\n00:26:40.770 --> 00:26:44.310\nIt's a faster way to configure things,\nif I know I need it turned on for\n\n519\n00:26:44.310 --> 00:26:47.430\n47 out of my 48 ports,\nI should just make it the default and\n\n520\n00:26:47.430 --> 00:26:51.110\nthen I can turn it off on the one port\nwhere I need to to be turned off.\n\n521\n00:26:51.110 --> 00:26:52.710\nSo now I've got that nice and\nconfigured, so\n\n522\n00:26:52.710 --> 00:26:55.890\ntake advantage of those default commands\nor just use the range command if you want.\n\n523\n00:26:55.890 --> 00:26:58.560\nThe range command works perfectly well and\nyou'll get it in place.\n\n524\n00:26:58.560 --> 00:27:03.040\nNow technically I'm done, but I probably\nwanna do a little bit of cleanup, right.\n\n525\n00:27:03.040 --> 00:27:04.700\nIf we take a look at my\nrunning configuration,\n\n526\n00:27:04.700 --> 00:27:08.130\nif I just do a show running -config.\n\n527\n00:27:08.130 --> 00:27:10.670\nWhen I go and\ntake a look at my running configuration,\n\n528\n00:27:10.670 --> 00:27:14.380\nI'll be able to see right up at the top,\nright here,\n\n529\n00:27:14.380 --> 00:27:20.140\nwhere I've got my portfast default and\nmy bpduguard default.\n\n530\n00:27:20.140 --> 00:27:23.630\nSo if somebody's reading the config\nthey'll see those right there and\n\n531\n00:27:23.630 --> 00:27:28.550\nthey'll know hey, It's turned on and so\nI should assume that on all my interfaces.\n\n532\n00:27:28.550 --> 00:27:33.414\nSo when I see an interface like fa0/2\nright here that has no configuration\n\n533\n00:27:33.414 --> 00:27:39.390\nattached to it, I'll know that it's\nactually got portfast and bpduguard on it.\n\n534\n00:27:39.390 --> 00:27:43.880\nBut if I'm worried about it, see how this\none still has that command listed here?\n\n535\n00:27:43.880 --> 00:27:45.670\nThat might create confusion, so\nI should probably go back and\n\n536\n00:27:45.670 --> 00:27:48.190\nremove this command,\ncuz it's not really necessary anymore.\n\n537\n00:27:48.190 --> 00:27:51.190\nIt'll stay there, But\nI can go in and remove it and\n\n538\n00:27:51.190 --> 00:27:53.800\nget that out of there just do a no and\nturn that off.\n\n539\n00:27:53.800 --> 00:27:56.840\nAnd then it'd go back to its default\nof having that portfast turned on.\n\n540\n00:27:56.840 --> 00:27:59.889\nSo other than that though we\nare basically done with this one.\n\n541\n00:28:01.090 --> 00:28:04.030\nAnd at that point we've got it turned on.\n\n542\n00:28:04.030 --> 00:28:06.740\nSo take advantage of those defaults or\nuse the range command, either one,\n\n543\n00:28:06.740 --> 00:28:08.950\nthey achieve the same goal and\nget you put in place.\n\n544\n00:28:10.162 --> 00:28:13.150\n>> All right Don, well thank you for\nintroducing both of those concepts to us.\n\n545\n00:28:13.150 --> 00:28:15.880\nNot only do we have to have\nthe basics of spanning tree down,\n\n546\n00:28:15.880 --> 00:28:18.840\nbeing able to determine the things\nthat we saw in previous episodes.\n\n547\n00:28:18.840 --> 00:28:21.750\nBut these really do help us\nwhen we do have those access\n\n548\n00:28:21.750 --> 00:28:25.000\nswitches that we need to deal with and\nbe able to also configure them so\n\n549\n00:28:25.000 --> 00:28:28.970\nthat we can have our edge devices or\nour end point devices\n\n550\n00:28:28.970 --> 00:28:31.960\nbe able to actually go directly into\nthe forwarding that they need to.\n\n551\n00:28:31.960 --> 00:28:35.820\nSo take a look at both of those, make sure\nyou take a look at the show commands,\n\n552\n00:28:35.820 --> 00:28:39.980\na lot of times just being able to do the\nshow running-config is probably not gonna\n\n553\n00:28:39.980 --> 00:28:42.500\nbe available to you on the exam.\n\n554\n00:28:42.500 --> 00:28:45.360\nSo make sure you take a look at\nthe show commands that we also show\n\n555\n00:28:45.360 --> 00:28:46.835\nhere in this episode.\n\n556\n00:28:46.835 --> 00:28:50.085\nWell that's a great place for\nus to also end today then.\n\n557\n00:28:50.085 --> 00:28:53.575\nSigning off for ITProTV,\nI've been your host Ronnie Wong.\n\n558\n00:28:53.575 --> 00:28:54.605\n>> And I'm Don Pezet.\n\n559\n00:28:54.605 --> 00:29:00.973\n>> Stay tuned right here for\nmore Cisco CCNA routing and switching.\n\n560\n00:29:00.973 --> 00:29:03.029\n[MUSIC]\n\n",
          "vimeoId": "178196072"
        },
        {
          "description": "In this episode, Ronnie and Don discuss of the Layer 2 attacks and how to use switch functionality to mitigate them.  They start with describing two very common attacks on DHCP:  DHCP Starvation and Rogue DHCP servers.  Using `ip dhcp snooping`, they show how to limit the number of the offers a port can have as well as how to implement a trusted port to mitigate this type of layer 2 attack.",
          "length": "1908",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/cisco-ccna200105/cisco-ccna-200105-1-5-1-layer_2_threat_mitigation-081016-1.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/cisco-ccna200105/cisco-ccna-200105-1-5-1-layer_2_threat_mitigation-081016-1-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/cisco-ccna200105/cisco-ccna-200105-1-5-1-layer_2_threat_mitigation-081016-1-sm.jpg",
          "title": "Layer 2 Threat Mitigation",
          "transcript": "WEBVTT\n\n1\n00:00:00.000 --> 00:00:10.000\n[MUSIC]\n\n2\n00:00:12.518 --> 00:00:14.781\nWelcome to another great\nepisode right here on ITProTV.\n\n3\n00:00:14.781 --> 00:00:16.290\nI'm your host, Ronnie Wong.\n\n4\n00:00:16.290 --> 00:00:20.160\nAnd you're watching the Cisco CCNA Routing\nand Switching Show.\n\n5\n00:00:20.160 --> 00:00:23.220\nWe’re about to head into layer\ntwo threat mitigation and\n\n6\n00:00:23.220 --> 00:00:25.260\nwho better to help us than Mr. Don Pezet.\n\n7\n00:00:25.260 --> 00:00:32.210\nNow Don, we already have a firewall up and\nall my devices are behind the firewall,\n\n8\n00:00:32.210 --> 00:00:35.550\nwhy do I really care about threat\nmitigation at all at layer two?\n\n9\n00:00:35.550 --> 00:00:38.790\n>> I think when we think about security,\nwe normally think about firewalls,\n\n10\n00:00:38.790 --> 00:00:40.060\nI mean\n>> maybe routers,\n\n11\n00:00:40.060 --> 00:00:41.580\nyou gotta access control this there and\nstuff.\n\n12\n00:00:41.580 --> 00:00:45.420\nBut at layer two, we're so low in\nthe OSI model at that point, there's so\n\n13\n00:00:45.420 --> 00:00:48.110\nlittle logic that lot of people\ndon't think about security.\n\n14\n00:00:48.110 --> 00:00:52.630\nBut the problem is at layer\ntwo everything is very simple.\n\n15\n00:00:52.630 --> 00:00:55.130\nAnd unfortunately simple\ndoes not mean secure.\n\n16\n00:00:55.130 --> 00:00:57.950\nThis is all technology that was\ndeveloped back in the day when networks\n\n17\n00:00:57.950 --> 00:01:02.110\nwere very small,\nnetworks had two to six computers maybe,\n\n18\n00:01:02.110 --> 00:01:04.270\nand they were all trustworthy computers.\n\n19\n00:01:04.270 --> 00:01:07.240\nYou could see them all sitting\nright there around you, so\n\n20\n00:01:07.240 --> 00:01:09.350\nyou didn't worry about attacks like this.\n\n21\n00:01:09.350 --> 00:01:12.480\nBut in today's world,\nit's very, very real.\n\n22\n00:01:12.480 --> 00:01:15.860\nEvery time you hear about attacks\nin the news, what does it say?\n\n23\n00:01:15.860 --> 00:01:18.450\nInternational hackers, hacker from\nthis government or that government,\n\n24\n00:01:18.450 --> 00:01:20.660\nit's all people remote.\n\n25\n00:01:20.660 --> 00:01:26.500\nBut the reality is, most attacks\nactually occur from the inside, right.\n\n26\n00:01:26.500 --> 00:01:29.200\nOr they might start from the outside.\n\n27\n00:01:29.200 --> 00:01:31.780\nThe hacker compromises one system, and\n\n28\n00:01:31.780 --> 00:01:35.270\nthen everything else they do\nis being done from the inside.\n\n29\n00:01:35.270 --> 00:01:40.790\nAnd layer two is so basic that it\nbecomes an easy thing to exploit.\n\n30\n00:01:40.790 --> 00:01:43.950\nNow, another area where we\nsee this really commonly.\n\n31\n00:01:43.950 --> 00:01:47.500\nHigh schools, middle schools where\nyou have kids that get bored.\n\n32\n00:01:48.510 --> 00:01:50.900\nThey're sitting at a computer\nthat's inside the school.\n\n33\n00:01:50.900 --> 00:01:53.590\nThey're already behind the firewall,\nright.\n\n34\n00:01:53.590 --> 00:01:55.910\nThey've already passed that level\nof security between you and\n\n35\n00:01:55.910 --> 00:01:56.570\nthe outside world.\n\n36\n00:01:56.570 --> 00:01:58.410\nThey're on the inside.\n\n37\n00:01:58.410 --> 00:02:03.390\nAnd there are some very easily exploitable\nlayer two attacks that they can pull off.\n\n38\n00:02:03.390 --> 00:02:05.510\nIt just takes a minute or\ntwo of Google searching and\n\n39\n00:02:05.510 --> 00:02:07.320\nthey could shut down a network.\n\n40\n00:02:07.320 --> 00:02:09.610\nA lot of them will do it just for kicks.\n\n41\n00:02:09.610 --> 00:02:14.570\nFortunately Cisco has taken the time to\nbuild a few technologies into the switches\n\n42\n00:02:14.570 --> 00:02:15.210\nthat can prevent that.\n\n43\n00:02:15.210 --> 00:02:17.540\nThat can actually stop those attacks.\n\n44\n00:02:17.540 --> 00:02:18.660\nI know we think of firewalls, hey,\n\n45\n00:02:18.660 --> 00:02:22.270\na firewall is specifically\ndesigned to protect us.\n\n46\n00:02:22.270 --> 00:02:27.400\nBut a firewall can only protect you from\nthe traffic passing through the firewall.\n\n47\n00:02:27.400 --> 00:02:29.550\nRonnie's laptop is plugged into a switch.\n\n48\n00:02:29.550 --> 00:02:32.250\nMy laptop is plugged into the same switch,\nprobably.\n\n49\n00:02:32.250 --> 00:02:35.590\nAnd so if our two devices\nstart to talk to each other,\n\n50\n00:02:35.590 --> 00:02:37.000\nwe don't go through the firewall.\n\n51\n00:02:37.000 --> 00:02:38.080\nWe don't go through the router.\n\n52\n00:02:38.080 --> 00:02:39.470\nWe only go through a switch.\n\n53\n00:02:39.470 --> 00:02:42.820\nThat's the only device in between\nRonnie's laptop and my laptop.\n\n54\n00:02:42.820 --> 00:02:48.100\nSo if he gets infected with a virus, and\nhis virus starts attacking the network,\n\n55\n00:02:48.100 --> 00:02:50.790\na router, a firewall,\nthey can't do anything to stop that.\n\n56\n00:02:50.790 --> 00:02:54.550\nIf Ronnie decides he wants to do some kind\nof denial of service against the local\n\n57\n00:02:54.550 --> 00:02:57.295\nnetwork those other devices can't help.\n\n58\n00:02:57.295 --> 00:03:00.390\nAn IDS could,\nif we had an intrusion detection or\n\n59\n00:03:00.390 --> 00:03:02.450\nan intrusion prevention system,\nIDS or IPS,\n\n60\n00:03:02.450 --> 00:03:06.740\neither one, could help us detect those\nattacks and potentially stop them.\n\n61\n00:03:06.740 --> 00:03:10.200\nBut without one of those,\nall you have is the switch.\n\n62\n00:03:10.200 --> 00:03:13.100\nSo let's talk about the switch and some of\nthe security features that are on there.\n\n63\n00:03:13.100 --> 00:03:15.950\nAnd we've got three or four different\nones that I wanna talk about.\n\n64\n00:03:15.950 --> 00:03:20.240\nThey're great features,\nthey're just not turned on by default.\n\n65\n00:03:20.240 --> 00:03:25.310\nSo that's kind of lesson that we\nlearned from courses like this that\n\n66\n00:03:25.310 --> 00:03:28.070\nCisco builds a lot of great\nstuff into their switches.\n\n67\n00:03:28.070 --> 00:03:30.840\nBut when they shipped them from\nthe factory they're configured for\n\n68\n00:03:30.840 --> 00:03:32.090\nthe lowest common denominator.\n\n69\n00:03:32.090 --> 00:03:35.640\nRight, the features everyone is going\nto use that make sense for everyone.\n\n70\n00:03:35.640 --> 00:03:39.908\nSo some of the really great features,\nsome of the best stuff is turned off.\n\n71\n00:03:39.908 --> 00:03:42.010\nYou get that switch out of the box,\nyou plug it in the first time.\n\n72\n00:03:42.010 --> 00:03:44.100\nYou power it on and it works.\n\n73\n00:03:44.100 --> 00:03:46.600\nBut you're really only using\na small portion of its features.\n\n74\n00:03:46.600 --> 00:03:49.340\nSo we need to learn what these features\nare and how to get them set up.\n\n75\n00:03:49.340 --> 00:03:50.678\nAnd how to make use of them so\n\n76\n00:03:50.678 --> 00:03:52.960\nthat we're getting our money's\nworth out of the switch.\n\n77\n00:03:52.960 --> 00:03:56.065\n>> All right Don, so when we talk about\nthese layer two types of attacks,\n\n78\n00:03:56.065 --> 00:03:59.541\none of the ones that we're gonna talk\nabout here, is really something you that\n\n79\n00:03:59.541 --> 00:04:03.270\nyou were mentioning in the school systems,\nlike DHCP starvation attacks.\n\n80\n00:04:03.270 --> 00:04:07.290\nSo what is it about DHCP itself\nthat we have to worry about?\n\n81\n00:04:07.290 --> 00:04:09.950\nBecause, couldn't we just turn on\nsome security feature in DHCP and\n\n82\n00:04:09.950 --> 00:04:11.810\nthen not worry about it at all?\n\n83\n00:04:11.810 --> 00:04:13.760\n>> Yeah, so DHCP is a great target.\n\n84\n00:04:13.760 --> 00:04:18.110\nI shouldn't say great, it's an easy\ntarget, it's low-hanging fruit.\n\n85\n00:04:18.110 --> 00:04:22.310\nIf somebody wants to mess with the network\nattacking a DHCP server's usually easiest.\n\n86\n00:04:22.310 --> 00:04:26.160\nThink about what DHCP does, right,\ndynamic host configuration protocol.\n\n87\n00:04:26.160 --> 00:04:28.130\nIf I bring a laptop or a desktop and\n\n88\n00:04:28.130 --> 00:04:31.850\nI plug it in to the network,\nI don't have to assign it a static IP.\n\n89\n00:04:31.850 --> 00:04:36.350\nInstead my laptop or desktop can just\nshout out on the network, hey everybody.\n\n90\n00:04:36.350 --> 00:04:38.650\nIs anybody out there a server\nthat can give me an IP address?\n\n91\n00:04:38.650 --> 00:04:40.240\nI need an IP.\n\n92\n00:04:40.240 --> 00:04:42.930\nAnd a DHCP server can respond and\nassign you an IP.\n\n93\n00:04:42.930 --> 00:04:46.580\nThis is all done without true\nlayer three information.\n\n94\n00:04:46.580 --> 00:04:51.601\nThe layer three fields are just all Fs, or\nall 1s, it does the full broadcast, right?\n\n95\n00:04:51.601 --> 00:04:55.631\nSo really with just layer two data,\nwe're reaching out on the network and\n\n96\n00:04:55.631 --> 00:04:57.932\nwe're finding a DHCP server.\n\n97\n00:04:57.932 --> 00:05:01.840\nAnd we're running through\nthe process of getting an address.\n\n98\n00:05:01.840 --> 00:05:04.497\nNow, what's the process for a DHCP server?\n\n99\n00:05:04.497 --> 00:05:06.943\nThere's a four stage process.\n\n100\n00:05:06.943 --> 00:05:11.250\nD-O-R-A, DORA, is the acronym that\nRonnie uses that helps you remember.\n\n101\n00:05:11.250 --> 00:05:16.050\nIt's discover, offer,\nrequest, acknowledge.\n\n102\n00:05:16.050 --> 00:05:17.700\nDiscover, I send out a message.\n\n103\n00:05:17.700 --> 00:05:20.390\nI try and discover a DHCP server.\n\n104\n00:05:20.390 --> 00:05:25.010\nAnd I do that by sending a message on\nthe network that has a source MAC address\n\n105\n00:05:25.010 --> 00:05:28.625\nof me, whatever my MAC address is, and\na destination MAC address of all Fs.\n\n106\n00:05:28.625 --> 00:05:30.210\nAll Fs, right?\n\n107\n00:05:30.210 --> 00:05:34.690\n48 bits, just all Fs in hexidecimal,\nis a broadcast on a MAC address.\n\n108\n00:05:34.690 --> 00:05:38.970\nSo I throw that out on the network and\nI say anybody out there a DHCP server?\n\n109\n00:05:38.970 --> 00:05:39.870\nCan anybody help me out?\n\n110\n00:05:41.060 --> 00:05:44.720\nAnd then the DHCP server will receive\nthat, well everybody will receive it,\n\n111\n00:05:44.720 --> 00:05:45.812\njust everybody else will ignore it.\n\n112\n00:05:45.812 --> 00:05:48.330\nThe DHCP server is the only\none who's gonna pay attention.\n\n113\n00:05:48.330 --> 00:05:49.000\nAnd they respond.\n\n114\n00:05:49.000 --> 00:05:51.700\nThey respond with an offer,\nthey say, hey I'm a server and\n\n115\n00:05:51.700 --> 00:05:54.130\nhere's an IP address you\ncan use if you want it.\n\n116\n00:05:54.130 --> 00:05:55.850\nAnd they offer it to me.\n\n117\n00:05:55.850 --> 00:05:58.770\nNow when I get the offer I look at it and\nsay great.\n\n118\n00:05:58.770 --> 00:06:00.090\nThere's an IP address.\n\n119\n00:06:00.090 --> 00:06:02.540\nI then send a request,\nthere's the R right.\n\n120\n00:06:02.540 --> 00:06:05.891\nI request back to the server and say,\nokay, please give me that address.\n\n121\n00:06:05.891 --> 00:06:06.710\nRight?\n\n122\n00:06:06.710 --> 00:06:11.530\nAnd then the server receives it,\nand they then acknowledge it.\n\n123\n00:06:11.530 --> 00:06:13.800\nThey flag it in their database\nthat it's now leased to me.\n\n124\n00:06:13.800 --> 00:06:15.950\nAnd they send me an acknowledgement,\nthat hey.\n\n125\n00:06:15.950 --> 00:06:18.790\nAnd I get that acknowledgement and\nnow I've got that IP address.\n\n126\n00:06:18.790 --> 00:06:23.570\nNow at no point in that process\ndid we see authenticate, right,\n\n127\n00:06:23.570 --> 00:06:25.810\nor verify, or anything like that.\n\n128\n00:06:25.810 --> 00:06:29.590\nNo challenge, no hashing,\nor anything like that.\n\n129\n00:06:29.590 --> 00:06:33.550\nI never validated the DHCP server was\nreally the right DHCP server, and\n\n130\n00:06:33.550 --> 00:06:35.600\nthey never validated that\nI was really a machine.\n\n131\n00:06:35.600 --> 00:06:39.110\nIt happens with broadcast,\nit's all done very quickly, and\n\n132\n00:06:39.110 --> 00:06:41.090\nthat's it, DHCP is very simple.\n\n133\n00:06:41.090 --> 00:06:45.230\nSo Ronnie mentioned, is there just some\nsetting on the DHCP server we can do?\n\n134\n00:06:45.230 --> 00:06:48.980\nNot really, there's not really\na good way to secure DHCP.\n\n135\n00:06:48.980 --> 00:06:53.520\nAnd the number one attack against a DHCP\nserver is a DHCP starvation attack.\n\n136\n00:06:53.520 --> 00:06:56.970\nA DHCP server's gonna have a pool of\nIP addresses that it hands out, right,\n\n137\n00:06:56.970 --> 00:06:58.440\nlike our studio.\n\n138\n00:06:58.440 --> 00:07:01.780\nRonnie, how many IPs do you\nthink we have in our pool here?\n\n139\n00:07:01.780 --> 00:07:04.630\n>> I'm gonna say probably about 200 maybe,\nmaybe a little bit more,\n\n140\n00:07:04.630 --> 00:07:05.280\na little bit less.\n\n141\n00:07:05.280 --> 00:07:07.100\n>> Okay, so\nlet's say we have 200 IPs in that pool.\n\n142\n00:07:07.100 --> 00:07:09.830\nNow we don't have 200\nmachines around here.\n\n143\n00:07:09.830 --> 00:07:12.650\nWe're probably close between all\nthe cell phones and tablets and\n\n144\n00:07:12.650 --> 00:07:13.820\nlaptops that everybody has.\n\n145\n00:07:13.820 --> 00:07:15.910\nI think every employee here\nconsumes at least three IPs.\n\n146\n00:07:15.910 --> 00:07:19.615\nBut 200 IPs is a decent amount for us.\n\n147\n00:07:19.615 --> 00:07:27.212\nWell, what if you were to take your\nlaptop and fire up six virtual machines.\n\n148\n00:07:27.212 --> 00:07:28.270\n>> [LAUGH]\n>> Right?\n\n149\n00:07:28.270 --> 00:07:31.290\nAnd give each virtual machine where you\nbridge it to your physical adaptors.\n\n150\n00:07:31.290 --> 00:07:33.340\nSo they all have different MAC addresses.\n\n151\n00:07:33.340 --> 00:07:36.140\nNow you're consuming six IPs.\n\n152\n00:07:36.140 --> 00:07:37.480\nWell seven if you count the host.\n\n153\n00:07:37.480 --> 00:07:41.590\nSo if I fire up six VMs,\nI can grab seven IPs.\n\n154\n00:07:41.590 --> 00:07:45.860\nWell, that's not gonna soak up 200 IPs.\n\n155\n00:07:45.860 --> 00:07:48.120\nWell, you don't have to use VMs.\n\n156\n00:07:48.120 --> 00:07:49.170\nThere's tools out there.\n\n157\n00:07:49.170 --> 00:07:52.843\nIf you spend a minute and\na half Google-searching for them,\n\n158\n00:07:52.843 --> 00:07:56.525\nthere's tools that just\ngenerate DHCPDiscover messages.\n\n159\n00:07:56.525 --> 00:08:00.596\nThey will generate thousands of\nDiscover messages per second.\n\n160\n00:08:00.596 --> 00:08:03.685\nI mean, they can flood the network\nwith these Discover messages.\n\n161\n00:08:03.685 --> 00:08:10.030\nAnd when they do it, they will run\nthe DHCP server out of addresses.\n\n162\n00:08:10.030 --> 00:08:11.820\nAnd they usually just do discover.\n\n163\n00:08:11.820 --> 00:08:13.300\nRemember the four stages.\n\n164\n00:08:13.300 --> 00:08:15.280\nWe do a discover, and\nthen there's the offer.\n\n165\n00:08:15.280 --> 00:08:18.700\nAnd the IP's offered to us and\nwe have to request it.\n\n166\n00:08:18.700 --> 00:08:22.286\nThe hacking tools don't normally bother\nwith requesting, and the reason is,\n\n167\n00:08:22.286 --> 00:08:25.351\nonce an IP is offered, the DHCP\nserver normally waits a little bit.\n\n168\n00:08:25.351 --> 00:08:29.579\nWaits 30 seconds or a minute and a half,\nsometimes a little bit longer for\n\n169\n00:08:29.579 --> 00:08:30.770\nus to request.\n\n170\n00:08:30.770 --> 00:08:35.080\nAnd the reason it's doing that is we might\nget an offer for more than one server.\n\n171\n00:08:35.080 --> 00:08:37.880\nSo I might get offers\nfrom three DHCP servers.\n\n172\n00:08:37.880 --> 00:08:38.730\nI'm gonna pick one of them.\n\n173\n00:08:38.730 --> 00:08:40.350\nI'll send a request to that guy.\n\n174\n00:08:40.350 --> 00:08:43.070\nBut the other two are ignored and\nafter the time runs out,\n\n175\n00:08:43.070 --> 00:08:46.120\nthey'll put that IP back in their port,\ngive it to somebody else.\n\n176\n00:08:46.120 --> 00:08:48.980\nBut in the mean time that\nIP is off limits now,\n\n177\n00:08:48.980 --> 00:08:51.640\nI never had to request it,\nit's just off limits.\n\n178\n00:08:51.640 --> 00:08:55.100\nAnd since we're sending this data\nwith fake MAC addresses anyway,\n\n179\n00:08:55.100 --> 00:08:57.350\nis the request gonna make it to us?\n\n180\n00:08:57.350 --> 00:08:59.050\nNo, they got fake source Mac with this.\n\n181\n00:08:59.050 --> 00:09:03.490\nWe're never gonna see the offer\ncome back to us anyway.\n\n182\n00:09:03.490 --> 00:09:06.550\nCuz the offer is being sent to\nthis fake MAC that disappears.\n\n183\n00:09:06.550 --> 00:09:10.180\nI mean maybe if the switch address of\nthe MAC we might see the offer come back.\n\n184\n00:09:10.180 --> 00:09:12.152\nBut it's not necessarily\nsomething that we rely on.\n\n185\n00:09:12.152 --> 00:09:15.090\nBut if we're generating thousands\nof requests per second,\n\n186\n00:09:15.090 --> 00:09:17.200\nwill ensure that pool stays empty.\n\n187\n00:09:17.200 --> 00:09:20.250\nAnd now, when somebody brings their\nlaptop in, or their desktop and\n\n188\n00:09:20.250 --> 00:09:23.410\nthey plug it in the network,\nthey're not gonna get an IP.\n\n189\n00:09:23.410 --> 00:09:24.330\nAnd what's gonna happen?\n\n190\n00:09:24.330 --> 00:09:27.580\nWell, they're gonna get what's\ncalled an APIPA address,\n\n191\n00:09:27.580 --> 00:09:30.820\nthe automatic private\nIP addressing protocol.\n\n192\n00:09:30.820 --> 00:09:33.890\nIt kicks in and\nAPIPA will give you a fake address.\n\n193\n00:09:33.890 --> 00:09:35.790\nIt's not a fake, it's a real address.\n\n194\n00:09:35.790 --> 00:09:39.063\nIt's just 169.254 dot\nsomething dot something.\n\n195\n00:09:39.063 --> 00:09:41.360\nIt's a slash 16 network.\n\n196\n00:09:41.360 --> 00:09:44.100\nMachines will auto-generate so\nthey can at least talk to each other.\n\n197\n00:09:44.100 --> 00:09:48.120\nThe negative of those IPs, they don't get\na default gateway so you can't get routed.\n\n198\n00:09:48.120 --> 00:09:49.650\nYou can't get out to the Internet or\nanything like that,\n\n199\n00:09:49.650 --> 00:09:51.400\nbut at least you can\nsee the local network.\n\n200\n00:09:51.400 --> 00:09:52.870\nIt's gonna stop people from functioning.\n\n201\n00:09:52.870 --> 00:09:54.955\nSo it is an easy to do\ndenial of service attack.\n\n202\n00:09:54.955 --> 00:09:58.367\nDHCP starvation.\n\n203\n00:09:58.367 --> 00:09:59.821\nSo how do we prevent that?\n\n204\n00:09:59.821 --> 00:10:04.326\nWell, we actually have a neat technology\nbuilt into the switches called DHCP\n\n205\n00:10:04.326 --> 00:10:05.650\nsnooping.\n\n206\n00:10:05.650 --> 00:10:09.410\nDHCP snooping is where the switch,\nnormally a layer II device, so\n\n207\n00:10:09.410 --> 00:10:12.480\nit's looking at the MAC addresses and\nthe layer II header.\n\n208\n00:10:12.480 --> 00:10:13.440\nAnd it normally stops there.\n\n209\n00:10:13.440 --> 00:10:15.690\nIt really doesn't go any higher normally.\n\n210\n00:10:15.690 --> 00:10:18.920\nWith DHCP snooping it goes\njust a hair higher, and\n\n211\n00:10:18.920 --> 00:10:23.350\nit says let's look at these frames that\nare coming in and for the broadcast,\n\n212\n00:10:23.350 --> 00:10:26.540\nthe ones that are going to an all\nF destination MAC address.\n\n213\n00:10:26.540 --> 00:10:29.050\nWe'll look and\nsee if they're DHCP requests.\n\n214\n00:10:29.050 --> 00:10:31.210\nAnd if they are,\nwe can take certain actions.\n\n215\n00:10:31.210 --> 00:10:35.360\nWe can do certain things\nbased on that data and\n\n216\n00:10:35.360 --> 00:10:38.820\nthe switch can actually help\nprevent a DHCP starvation attack.\n\n217\n00:10:38.820 --> 00:10:40.490\nWe can do what's called rate limiting.\n\n218\n00:10:40.490 --> 00:10:45.530\nYou could rate limit a port to limit\nhow many MAC addresses it can request\n\n219\n00:10:45.530 --> 00:10:47.430\nin a certain interval of time.\n\n220\n00:10:47.430 --> 00:10:51.440\nAnd so, now, we can just cut off\nthese starvation attacks really easy.\n\n221\n00:10:51.440 --> 00:10:52.507\nOn a normal port,\n\n222\n00:10:52.507 --> 00:10:56.787\nhow many requests do we really need\nto allow in any given amount of time?\n\n223\n00:10:56.787 --> 00:11:00.909\nI might have environments where\nsomebody unplugs a laptop and\n\n224\n00:11:00.909 --> 00:11:02.940\nplugs in their desktop.\n\n225\n00:11:02.940 --> 00:11:04.550\nDoes something,\nthen switches them back again.\n\n226\n00:11:04.550 --> 00:11:05.370\nOr something like that.\n\n227\n00:11:05.370 --> 00:11:09.100\nSo there may be times when we need more\nthan one DHCP request over a short period\n\n228\n00:11:09.100 --> 00:11:10.320\nof time.\n\n229\n00:11:10.320 --> 00:11:13.310\nThere may be times where\nI have things like\n\n230\n00:11:13.310 --> 00:11:15.560\nSpanning Tree Protocol\ndoing loop detection.\n\n231\n00:11:15.560 --> 00:11:18.120\nWhere the port might be held down for\n30 seconds.\n\n232\n00:11:18.120 --> 00:11:20.820\nSo it's a couple of\nDHCP requests going on.\n\n233\n00:11:20.820 --> 00:11:23.002\nBut it's still all from\nthe same source MAC address.\n\n234\n00:11:23.002 --> 00:11:24.730\nIt's not different MACs.\n\n235\n00:11:24.730 --> 00:11:27.240\nSo we don't have to worry\nabout that too much.\n\n236\n00:11:27.240 --> 00:11:28.470\nThere's other technologies.\n\n237\n00:11:28.470 --> 00:11:30.810\nI know in CCNT we talked\na little about port security,\n\n238\n00:11:30.810 --> 00:11:33.260\nwhere you can limit how many MAC\naddresses are allowed on a port.\n\n239\n00:11:33.260 --> 00:11:34.870\nSo we could always use that too.\n\n240\n00:11:34.870 --> 00:11:39.790\nBut on the DHCP side, if we turn on\nDHCP snooping we can tell the switch\n\n241\n00:11:39.790 --> 00:11:43.440\nto restrict the amount of DHCP\ntraffic allowed on that port.\n\n242\n00:11:43.440 --> 00:11:46.670\nAnd that lets us set a limit to\nhow much damage somebody can do.\n\n243\n00:11:46.670 --> 00:11:50.120\nAnd that effectively\neliminates DHCP starvation.\n\n244\n00:11:50.120 --> 00:11:53.972\n>> Now, Don, when we start talking about\nthat DHCP starvation is one of those\n\n245\n00:11:53.972 --> 00:11:57.043\nattacks, but would this also help us out,\nDHCP snooping?\n\n246\n00:11:57.043 --> 00:12:00.990\nAnd we had something like what we\ncall a rogue DHCP server as well.\n\n247\n00:12:00.990 --> 00:12:03.130\n>> Yeah, that's kinda the opposite.\n\n248\n00:12:03.130 --> 00:12:07.460\nWith DHCP starvation, I'm draining\nall the addresses out of a server.\n\n249\n00:12:07.460 --> 00:12:10.740\nA rogue DHCP server, that's where\nI bring in my own DHCP server.\n\n250\n00:12:10.740 --> 00:12:12.860\nAnd I hook it up on the network,\nand I start giving it, so\n\n251\n00:12:12.860 --> 00:12:15.040\nI'm adding addresses to the network.\n\n252\n00:12:15.040 --> 00:12:18.460\nAnd while that might sound good,\nit's almost always bad.\n\n253\n00:12:18.460 --> 00:12:21.930\nWe see this on probably more\naccidentally than on purpose.\n\n254\n00:12:21.930 --> 00:12:26.740\nSo for example,\nI'll give you a real world example.\n\n255\n00:12:26.740 --> 00:12:30.690\nThere was a school that had contacted me\na one point, that said, some of their\n\n256\n00:12:30.690 --> 00:12:33.270\nmachines could get out to the Internet,\nand some of their machines couldn't.\n\n257\n00:12:33.270 --> 00:12:34.230\nIt was really weird.\n\n258\n00:12:34.230 --> 00:12:35.560\nThey didn't understand what was going on.\n\n259\n00:12:35.560 --> 00:12:39.050\nThere were just a handful of\nmachines that could not get out.\n\n260\n00:12:39.050 --> 00:12:41.360\nAnd so, I went out to the school to look.\n\n261\n00:12:41.360 --> 00:12:44.960\nAnd what I found was that their\nnormal machines were all,\n\n262\n00:12:44.960 --> 00:12:50.027\nI forget their IP scheme it was something\nlike 10.170.something.something.\n\n263\n00:12:50.027 --> 00:12:54.007\nThe machines that couldn't get\nout had 192.168.1 addresses.\n\n264\n00:12:54.007 --> 00:12:56.740\nI was like, 192.168.1, what the heck?\n\n265\n00:12:56.740 --> 00:12:58.330\nWell, when you get a DHCP address,\n\n266\n00:12:58.330 --> 00:13:01.655\nit tells you the IP address of the DHCP\nserver, and it said their DHCP server was\n\n267\n00:13:01.655 --> 00:13:07.090\n192.168.1.1, which is one of the most\ncommon IPs for a home router.\n\n268\n00:13:07.090 --> 00:13:10.170\nAnd what it turned out was,\nin one of the classrooms,\n\n269\n00:13:10.170 --> 00:13:13.230\nthere was a teacher who had\na projector they wanted to hook up.\n\n270\n00:13:13.230 --> 00:13:17.970\nThey had two computers and they had\na little wall jack they were plugged into.\n\n271\n00:13:17.970 --> 00:13:22.370\nAnd they needed a third wall jack but\nthey only had two so instead of getting IT\n\n272\n00:13:22.370 --> 00:13:26.060\ninvolved, they brought what they\nthought was a switch from home.\n\n273\n00:13:26.060 --> 00:13:27.340\nIt was actually a router.\n\n274\n00:13:27.340 --> 00:13:30.380\nSo they brought a little five\nport router from home and\n\n275\n00:13:30.380 --> 00:13:36.170\nthey plugged the wall into the router and\nthen the router into the projector.\n\n276\n00:13:36.170 --> 00:13:41.430\nAnd when they did that, that little\nrouter started serving up DHCP addresses.\n\n277\n00:13:41.430 --> 00:13:45.101\nSo people do a request on the network,\nor they would do a discover.\n\n278\n00:13:45.101 --> 00:13:48.316\nAnd when you do a discover, you can get\nresponses from more than one DHCP server,\n\n279\n00:13:48.316 --> 00:13:51.629\nand whichever one you get a response from\nfirst, whoever gets you the offer first,\n\n280\n00:13:51.629 --> 00:13:53.070\nthat's who you're gonna accept.\n\n281\n00:13:53.070 --> 00:13:55.700\nThere's no giant criteria process for\nrun through.\n\n282\n00:13:55.700 --> 00:13:59.860\nSo some people were getting a response\nfrom that little router first\n\n283\n00:13:59.860 --> 00:14:01.760\nbefore the big DHCP server.\n\n284\n00:14:01.760 --> 00:14:04.580\nAnd that happens when\nyou have multiple VLANs,\n\n285\n00:14:04.580 --> 00:14:07.830\na lot of times people will just have\none DH CP server for all the VLANs and\n\n286\n00:14:07.830 --> 00:14:11.660\nwe've got to forward those requests and\nuse a little IP helper address.\n\n287\n00:14:11.660 --> 00:14:14.420\nAnd when you do that, it creates\na little delay, and that makes it where\n\n288\n00:14:14.420 --> 00:14:17.850\nthese home routers can win out really\nfast, and that's what was going on here.\n\n289\n00:14:17.850 --> 00:14:20.440\nSo as soon as we tracked that device\ndown and got it out of the network,\n\n290\n00:14:20.440 --> 00:14:21.910\neverything was back to normal.\n\n291\n00:14:21.910 --> 00:14:23.260\nThat was a rogue DHCP server.\n\n292\n00:14:23.260 --> 00:14:24.360\nIt was accidental.\n\n293\n00:14:24.360 --> 00:14:25.710\nBut you can do it on purpose.\n\n294\n00:14:25.710 --> 00:14:27.970\nI can bring in a machine and\nmaliciously do that.\n\n295\n00:14:27.970 --> 00:14:32.100\nIn fact, if I do that and I have Internet\nconnectivity, maybe it's like a WiFi\n\n296\n00:14:32.100 --> 00:14:36.430\nrouter, I could start running a sniffer\nand capturing traffic and all the Internet\n\n297\n00:14:36.430 --> 00:14:39.770\ntraffic will be passing through my device,\nand I could maliciously catch that.\n\n298\n00:14:39.770 --> 00:14:41.620\nPeople might not even notice it.\n\n299\n00:14:41.620 --> 00:14:44.060\nThat's a type of attack that can happen.\n\n300\n00:14:44.060 --> 00:14:46.970\nWell, DHCP snooping has\nanother side to it.\n\n301\n00:14:46.970 --> 00:14:50.400\nOne side is to stop clients\nfrom going crazy, but\n\n302\n00:14:50.400 --> 00:14:52.810\nthe other side is it can stop servers,\ntoo.\n\n303\n00:14:52.810 --> 00:14:54.700\nIn the DORA process, discover.\n\n304\n00:14:54.700 --> 00:14:55.560\nThat comes from a client.\n\n305\n00:14:55.560 --> 00:14:58.730\nSo the rate limiting I was talking\nabout was limiting discovered messages,\n\n306\n00:14:58.730 --> 00:15:02.560\nhow many discover messages\ncan we send on one port?\n\n307\n00:15:02.560 --> 00:15:05.596\nBut we can also restrictly offer messages.\n\n308\n00:15:05.596 --> 00:15:09.957\nYou can say all these ports are not\nallowed to send offer messages except this\n\n309\n00:15:09.957 --> 00:15:12.492\none port where my DHCP\nserver is plugged in.\n\n310\n00:15:12.492 --> 00:15:16.971\nSo now we can limit it down to where\none particular port can do it and\n\n311\n00:15:16.971 --> 00:15:21.800\nthat's another part of the DHCP\nsnooping functionality.\n\n312\n00:15:21.800 --> 00:15:23.150\nNow, I've been talking about a lot.\n\n313\n00:15:23.150 --> 00:15:24.960\nLet's see this stuff in action, right?\n\n314\n00:15:24.960 --> 00:15:27.730\nSo I'll start with the rate limiting\nside to kinda show you that.\n\n315\n00:15:27.730 --> 00:15:31.200\nMy laptop is plugged in right now\non a switch that's behind me.\n\n316\n00:15:31.200 --> 00:15:34.490\nAnd I'm plugged in on,\nwhat port here am I on?\n\n317\n00:15:34.490 --> 00:15:35.640\nI think port one.\n\n318\n00:15:35.640 --> 00:15:41.950\nSo if I do a show MAC address table,\nthere shouldn't be too much in here.\n\n319\n00:15:41.950 --> 00:15:45.780\nWell, all the default stuff.\n\n320\n00:15:45.780 --> 00:15:47.340\nI just scrolled right by it.\n\n321\n00:15:47.340 --> 00:15:48.440\nIt's a 48 port switch.\n\n322\n00:15:48.440 --> 00:15:51.510\nAnd so, I'm seeing a bunch of different\nMAC addresses that are out here.\n\n323\n00:15:51.510 --> 00:15:52.840\nBut that's me right there.\n\n324\n00:15:52.840 --> 00:15:54.695\nI'm plugged into port one.\n\n325\n00:15:54.695 --> 00:15:57.174\nAnd I am set to get a DHCP address.\n\n326\n00:15:57.174 --> 00:16:00.407\nSo my laptop is getting\na DHCP address on that port.\n\n327\n00:16:00.407 --> 00:16:01.603\nPort 48 is an uplink.\n\n328\n00:16:01.603 --> 00:16:04.549\nAnd so I'm seeing all the other MAC\naddresses here in our building,\n\n329\n00:16:04.549 --> 00:16:07.710\non all the different machines and\nphones, and all that stuff.\n\n330\n00:16:07.710 --> 00:16:09.790\nBut I'm plugged into port one, okay?\n\n331\n00:16:09.790 --> 00:16:14.920\nNow, when I send out a DHCP request,\nI am getting a DHCP address, right?\n\n332\n00:16:14.920 --> 00:16:17.430\nNow is there anything stopping me from\n\n333\n00:16:17.430 --> 00:16:21.560\nrequesting a 1,000 DHCP\naddresses per second?\n\n334\n00:16:21.560 --> 00:16:24.310\nNot by default, by default,\nI can go crazy.\n\n335\n00:16:24.310 --> 00:16:29.110\nBut if we turn on DHCP snooping,\nwe can then go and limit that, all right?\n\n336\n00:16:29.110 --> 00:16:31.370\nSo let me show you how\nDHCP snooping works.\n\n337\n00:16:31.370 --> 00:16:32.970\nIf I want to do a rate limit.\n\n338\n00:16:32.970 --> 00:16:36.110\nThe first thing I need to do is I\nneed to get DHCP snooping turned on.\n\n339\n00:16:36.110 --> 00:16:39.590\nSo I'm gonna jump into my configuration\nand I'm gonna turn it on.\n\n340\n00:16:39.590 --> 00:16:43.780\nNow some switches actually\nhave DHCP snooping turned on.\n\n341\n00:16:43.780 --> 00:16:46.926\nIn this show, I keep moving between\nthree different models of switches.\n\n342\n00:16:46.926 --> 00:16:51.035\n3560s, 2960s, and 3750s.\n\n343\n00:16:51.035 --> 00:16:54.211\nSo the three different models of switches\nthat I've been using throughout the show.\n\n344\n00:16:54.211 --> 00:16:57.470\nIn the 3750s, it's on by default.\n\n345\n00:16:57.470 --> 00:16:59.620\nIn most of the IOSs,\nthere are some where it isn't,\n\n346\n00:16:59.620 --> 00:17:01.990\nbut most of them it's\nturned on be default.\n\n347\n00:17:01.990 --> 00:17:05.380\nI'm on a 3560 behind me here and\nit's turned off on this one by default.\n\n348\n00:17:05.380 --> 00:17:07.875\nAnd you can always verify that,\nif you get out of config.\n\n349\n00:17:07.875 --> 00:17:12.670\nYou can do a show ip dhcp snooping.\n\n350\n00:17:12.670 --> 00:17:14.957\nAnd it'll show you\nthe status of dhcp snooping.\n\n351\n00:17:14.957 --> 00:17:19.250\nAnd I can see for mine, right here,\ndhcp snooping is disabled, right?\n\n352\n00:17:19.250 --> 00:17:24.288\nSo I'm not,\ndoing any DHCP snooping right now, okay?\n\n353\n00:17:24.288 --> 00:17:28.966\nAnd I also see DHCP snooping is not\nconfigured for any line VLANs, right?\n\n354\n00:17:28.966 --> 00:17:29.745\nNone and none.\n\n355\n00:17:29.745 --> 00:17:34.452\nThat's important because the command\nto turn on DHCP snooping is\n\n356\n00:17:34.452 --> 00:17:37.050\njust ip dhcp snooping, right?\n\n357\n00:17:37.050 --> 00:17:38.710\nThat turns it on globally.\n\n358\n00:17:38.710 --> 00:17:42.510\nAnd now,\nif I were to do a show ip dhcp snooping,\n\n359\n00:17:42.510 --> 00:17:45.090\nI would see that it is enabled, right?\n\n360\n00:17:45.090 --> 00:17:49.630\nSo that's good, but it's configured\non the following VLANs, none.\n\n361\n00:17:49.630 --> 00:17:55.470\nSo I've turned it on, but\nit's not actually working yet, right?\n\n362\n00:17:55.470 --> 00:17:57.580\nWell I can actually go in and\ndo rate limiting right now.\n\n363\n00:17:57.580 --> 00:18:00.100\nSo I could put that in place and\nit would actually work.\n\n364\n00:18:00.100 --> 00:18:02.690\nBut I'd normally need to go ahead and\nturn on snooping for the VLANs too.\n\n365\n00:18:02.690 --> 00:18:04.360\nYou gotta make a choice here.\n\n366\n00:18:04.360 --> 00:18:06.250\nIf you just want a rate limit,\n\n367\n00:18:06.250 --> 00:18:10.480\nthen issuing that ip dhcp snooping\ncommand is normally enough.\n\n368\n00:18:10.480 --> 00:18:12.360\nAn now we can go ahead and\napply rate limits.\n\n369\n00:18:12.360 --> 00:18:15.800\nBut if we wanna protect from\nrogue DHCP servers also,\n\n370\n00:18:15.800 --> 00:18:19.180\nthen we do need to turn it on for\nthe VLANs and get that in place.\n\n371\n00:18:19.180 --> 00:18:21.220\nJust be aware that as\nsoon as I turn it on for\n\n372\n00:18:21.220 --> 00:18:25.180\na VLAN, every port is gonna\nbe what's called untrusted.\n\n373\n00:18:25.180 --> 00:18:28.510\nSee how this table down here\nis listing my trusted ports?\n\n374\n00:18:28.510 --> 00:18:30.506\nAnd I don't have any\ntrusted ports right now.\n\n375\n00:18:30.506 --> 00:18:32.371\nSo once I turn this on,\n\n376\n00:18:32.371 --> 00:18:37.786\nI'm gonna effectively break all\nthe DHCP servers in my network.\n\n377\n00:18:37.786 --> 00:18:42.040\nSo I'm gonna come in here and\nsay, ip dhcp snooping vlan 1.\n\n378\n00:18:42.040 --> 00:18:45.090\nNow, if you wanna turn it on for\nall of your vlans,\n\n379\n00:18:45.090 --> 00:18:47.090\nyou don't have to stop there at 1.\n\n380\n00:18:47.090 --> 00:18:50.100\nSee how it's got where\nI can specify a range.\n\n381\n00:18:50.100 --> 00:18:52.660\nI did the first number and\nnow the last number.\n\n382\n00:18:52.660 --> 00:18:58.870\nSo if I say 1 4094, that's gonna turn\non DHCP snooping for all of my VLANs.\n\n383\n00:18:58.870 --> 00:19:00.690\nYou might choose to do that,\nyou might not, right?\n\n384\n00:19:00.690 --> 00:19:04.445\nYou might not wanna DHP snoop on\na VLAN that is your server network,\n\n385\n00:19:04.445 --> 00:19:05.620\nbecause you use all static IPs there.\n\n386\n00:19:05.620 --> 00:19:08.380\nAnd there is no DHP server,\nso what do you care, right?\n\n387\n00:19:08.380 --> 00:19:10.750\nOr something like that if\nthere's controlled areas.\n\n388\n00:19:10.750 --> 00:19:13.470\nThe other thing is, DHP snooping,\n\n389\n00:19:13.470 --> 00:19:18.730\nyou really wanna turn it on on\nthe ports that are access ports, right?\n\n390\n00:19:18.730 --> 00:19:21.882\nPorts that are things where your\nworkstations and your laptops and\n\n391\n00:19:21.882 --> 00:19:23.805\nthose guys are plugged in.\n\n392\n00:19:23.805 --> 00:19:25.175\nIf you've got a server,\n\n393\n00:19:25.175 --> 00:19:28.215\nyour core switches, we don't don't\nnormally need DHCP snooping there.\n\n394\n00:19:28.215 --> 00:19:29.465\nBecause nobody can come and\n\n395\n00:19:29.465 --> 00:19:33.075\nplant a rogue DHCP server into your\ncore switch, hopefully, right?\n\n396\n00:19:33.075 --> 00:19:37.725\nIt's in your core, it should be protected\nand locked away versus your access ports.\n\n397\n00:19:37.725 --> 00:19:40.925\nThose switches might be locked away but\nthe wall jacks are all over the building.\n\n398\n00:19:40.925 --> 00:19:41.645\nAnybody can come and\n\n399\n00:19:41.645 --> 00:19:46.570\nplug a device in, so we absolutely\nimplement this on our access switches.\n\n400\n00:19:46.570 --> 00:19:48.840\nOn your core distributions which\nis a little more optional.\n\n401\n00:19:48.840 --> 00:19:50.880\nYou may choose not to implement it there,\nright?\n\n402\n00:19:50.880 --> 00:19:54.260\nI'm on an access switch here,\nin fact, this switch It's a 3560.\n\n403\n00:19:54.260 --> 00:19:57.230\nWhich is an access level switch, right?\n\n404\n00:19:57.230 --> 00:20:00.200\nIt's not a high end switch, and\nthen it's got an uplink that port 48,\n\n405\n00:20:00.200 --> 00:20:00.770\nthat runs port 4500.\n\n406\n00:20:00.770 --> 00:20:06.230\nAnd the 4500 is our core switch here\nin the building, so it's a big switch.\n\n407\n00:20:06.230 --> 00:20:08.620\nAnd on the big switch, well,\n\n408\n00:20:08.620 --> 00:20:11.060\nI think we actually are running DHCP\nsnooping on our big switch here.\n\n409\n00:20:11.060 --> 00:20:13.360\nJust because it does have\nsome ports that go out.\n\n410\n00:20:13.360 --> 00:20:18.420\nBut if it was truly just my core,\nthen I wouldn't run DHCP snooping there.\n\n411\n00:20:18.420 --> 00:20:21.380\nI would just run it here\non the access port, right?\n\n412\n00:20:21.380 --> 00:20:25.830\nAnd now that I've turned that on,\nif I do a show ip dhcp snooping.\n\n413\n00:20:27.080 --> 00:20:32.104\nI can see that DHCP snooping is\nenabled and it's enabled for\n\n414\n00:20:32.104 --> 00:20:38.248\nVLAN's 1 through 4,094, but\nit's only operational on VLAN 1.\n\n415\n00:20:38.248 --> 00:20:39.455\nWhy is that?\n\n416\n00:20:39.455 --> 00:20:42.200\nWell, I only got VLAN 1,\nI haven't created any other VLANs.\n\n417\n00:20:42.200 --> 00:20:45.060\nIf I do a show of VLAN And\nthat's the only one that I've got,\n\n418\n00:20:45.060 --> 00:20:47.220\nso every ports in vlan 1 and that's it.\n\n419\n00:20:47.220 --> 00:20:48.640\nSo that's why it doesn't show the others,\nbut\n\n420\n00:20:48.640 --> 00:20:50.440\nif I were to create more\nthey would start to show up.\n\n421\n00:20:52.170 --> 00:20:54.270\nAll right, so what have I achieved so far?\n\n422\n00:20:54.270 --> 00:20:55.810\nI've really issued two commands, right?\n\n423\n00:20:55.810 --> 00:20:58.584\nSo I did ip dhcp snooping,\nto turn it on globally.\n\n424\n00:20:58.584 --> 00:21:01.720\nAnd then I did ip dhcp\nsnooping vlan 1 4094.\n\n425\n00:21:01.720 --> 00:21:06.710\nWhat I just did is I told the switch\nto start watching DHCP packets,\n\n426\n00:21:06.710 --> 00:21:08.150\nso pay attention.\n\n427\n00:21:08.150 --> 00:21:13.340\nAnd then I told it on basically on\nall of these VLANs only allow trusted\n\n428\n00:21:13.340 --> 00:21:15.440\nports to do offers, right?\n\n429\n00:21:15.440 --> 00:21:19.570\nSo DCHP should be broken right now,\nwell, let's see if it is, right?\n\n430\n00:21:19.570 --> 00:21:22.610\nI'm gonna switch back over\nhere to my workstation and\n\n431\n00:21:22.610 --> 00:21:26.730\non my workstation, here we go.\n\n432\n00:21:26.730 --> 00:21:29.670\nI can take a look at my Thunder Bolt\nethernet adapter that is on my laptop.\n\n433\n00:21:29.670 --> 00:21:31.920\nThat's my physical adapter\nplugged into that switch and\n\n434\n00:21:31.920 --> 00:21:33.440\nI've got a DHCP address, right?\n\n435\n00:21:33.440 --> 00:21:37.700\nI'm gonna go into Advanced here and\nI'm gonna choose renew my DHCP list,\n\n436\n00:21:37.700 --> 00:21:38.920\nall right?\n\n437\n00:21:38.920 --> 00:21:41.510\nNow max to this weird thing where\nmy IP is gonna appear for a second.\n\n438\n00:21:41.510 --> 00:21:44.800\nBut it's actually trying\nto renew right now.\n\n439\n00:21:44.800 --> 00:21:47.120\nIt's trying to reach out to a DHCP server.\n\n440\n00:21:47.120 --> 00:21:50.900\nAnd it can't find one, so what happens?\n\n441\n00:21:50.900 --> 00:21:53.470\nMy address disappears, all right?\n\n442\n00:21:53.470 --> 00:21:55.965\nIt had a DHCP server a moment ago,\nnow it doesn't.\n\n443\n00:21:55.965 --> 00:21:58.971\nBecause DHCP snooping is\nnot trusting any port,\n\n444\n00:21:58.971 --> 00:22:04.336\nit's assuming everybody's a rogue server,\nand it's blocking the offers, right?\n\n445\n00:22:04.336 --> 00:22:06.495\nAnd if I, do I have a terminal?\n\n446\n00:22:06.495 --> 00:22:07.210\nYeah.\n\n447\n00:22:07.210 --> 00:22:10.370\nIf I were to do like an IF-config here and\ntake a look at my interface.\n\n448\n00:22:10.370 --> 00:22:13.330\nHere's my interface and\nI've got my MAC address and\n\n449\n00:22:13.330 --> 00:22:16.370\nall that but I don't have an IPv4 address.\n\n450\n00:22:16.370 --> 00:22:20.980\nAnd, if I wait long enough, eventually\nit's gonna get a 169.254 address, right?\n\n451\n00:22:20.980 --> 00:22:22.770\nIt'll automatically generate.\n\n452\n00:22:22.770 --> 00:22:26.370\nBut right now it's hoping, it's sending\nout discovered messages and it's waiting.\n\n453\n00:22:26.370 --> 00:22:29.370\nAnd it all say all right let me wait\n30 seconds and I'll try again, and\n\n454\n00:22:29.370 --> 00:22:31.930\nthen let me wait 30 seconds more and\nwe try again, right?\n\n455\n00:22:31.930 --> 00:22:35.600\nWhile it's doing that, let's go\nback to talked about rate limiting.\n\n456\n00:22:35.600 --> 00:22:37.190\nNow the DHCP snooping is on.\n\n457\n00:22:37.190 --> 00:22:41.520\nI can come in and I can limit my\nport to say you could only do so\n\n458\n00:22:41.520 --> 00:22:45.120\nmany DHCP discover messages\nin any given time.\n\n459\n00:22:45.120 --> 00:22:50.300\nSo back here on my switch,\nI'm gonna get into interface fa0/1,\n\n460\n00:22:50.300 --> 00:22:55.230\nthat's what my laptop is plug into fa0/1.\n\n461\n00:22:55.230 --> 00:23:00.570\nAnd inside that interface I'm\ngonna say ip dhcp snooping, and\n\n462\n00:23:00.570 --> 00:23:04.690\nthen limit, and\nI'm gonna apply a limit, right?\n\n463\n00:23:04.690 --> 00:23:07.540\nSo here's where I can stick a rate limit.\n\n464\n00:23:07.540 --> 00:23:10.500\nAnd it's asking what that\nlimit is going to be so\n\n465\n00:23:10.500 --> 00:23:15.310\nhow many messages do I want to\nallow on this interface, right?\n\n466\n00:23:15.310 --> 00:23:19.245\nI can do 1, which might be\na little on the small side, right?\n\n467\n00:23:19.245 --> 00:23:22.942\nBecause if I get 1 that just doesn't\nget a response for some reason,\n\n468\n00:23:22.942 --> 00:23:26.211\nI need to be able to retry I\ncan go all the way up to 2,048.\n\n469\n00:23:26.211 --> 00:23:27.964\nWe can go crazy with it, right?\n\n470\n00:23:27.964 --> 00:23:32.286\nYou normally wanna pick something\nthat is low, but not so\n\n471\n00:23:32.286 --> 00:23:34.906\nlow that it's obnoxious, okay?\n\n472\n00:23:34.906 --> 00:23:37.516\nIf I have a two hundred IP pool and\n\n473\n00:23:37.516 --> 00:23:41.501\nI don't want somebody to\nbe able to saturate it.\n\n474\n00:23:41.501 --> 00:23:44.670\nThey'd need to be able to do more than\n200 requests to saturate it, right?\n\n475\n00:23:44.670 --> 00:23:47.563\nSo I would just need to pick\na number that was lower than 200.\n\n476\n00:23:47.563 --> 00:23:50.756\nBut the reality is on an axis port,\nyou should be able\n\n477\n00:23:50.756 --> 00:23:54.833\nto pick a number between 5 and\n10 and be perfectly safe, right?\n\n478\n00:23:54.833 --> 00:23:57.939\nSo, that's what I'm gonna do,\nI'm gonna pick 10.\n\n479\n00:23:57.939 --> 00:24:01.122\nAnd that's pretty much it for\nthat command, and that's gonna limit that.\n\n480\n00:24:01.122 --> 00:24:04.912\nSo, if I fire up a hacking tool and\nstart generating thousands of requests,\n\n481\n00:24:04.912 --> 00:24:09.650\nthe first 10 will go through, then yeah,\nI'll eat up 10 addresses out of the pool.\n\n482\n00:24:09.650 --> 00:24:12.840\nBut then, the 11th and\nbeyond will not go through.\n\n483\n00:24:12.840 --> 00:24:15.210\nThey'll get filtered out,\nand that'll stop it.\n\n484\n00:24:15.210 --> 00:24:18.690\nSo now, I've effectively killed\noff DHCP starvation attacks.\n\n485\n00:24:18.690 --> 00:24:22.000\nNow, I don't wanna do that just here,\non this one port.\n\n486\n00:24:22.000 --> 00:24:28.290\nI really wanna do an interface range,\nand get all of my ports.\n\n487\n00:24:28.290 --> 00:24:30.410\nNow, 48 is my up-link, so\nI'm gonna do it one through 47.\n\n488\n00:24:30.410 --> 00:24:34.340\nAnd then, I'll stick that rate\nlimit right back on there.\n\n489\n00:24:34.340 --> 00:24:36.100\nAnd now, they're all rate limited.\n\n490\n00:24:36.100 --> 00:24:39.160\nAnd that way, the hacker doesn't\njust move to another room and\n\n491\n00:24:39.160 --> 00:24:40.760\ntry the same thing somewhere else.\n\n492\n00:24:40.760 --> 00:24:45.020\nNow, it's right there on all of\nthe access ports of my system,\n\n493\n00:24:45.020 --> 00:24:46.870\nthey're now all being rate limited.\n\n494\n00:24:46.870 --> 00:24:50.110\nSo, now that we've rated a few moments,\nlet's jump back over to my laptop and\n\n495\n00:24:50.110 --> 00:24:53.060\nwe'll take a look and see if I've gotten\nthat APIP address I was talking about.\n\n496\n00:24:53.060 --> 00:24:54.400\nAnd and sure enough, we have, yeah.\n\n497\n00:24:54.400 --> 00:24:57.100\nSo, it couldn't find the DHCP server.\n\n498\n00:24:57.100 --> 00:25:01.086\nIt waited a little bit,\nit tried, it retried.\n\n499\n00:25:01.086 --> 00:25:03.700\nThing.\nBut when it couldn't find the server,\n\n500\n00:25:03.700 --> 00:25:07.108\nit wasn't that it couldn't find the\nserver, it send out a discover message.\n\n501\n00:25:07.108 --> 00:25:08.658\nThe discover message\nactually made it to server.\n\n502\n00:25:08.658 --> 00:25:13.600\nThe server sent an offer back, and\nthe switch blocked the offer, right?\n\n503\n00:25:13.600 --> 00:25:14.761\nSo the offer never made it back to us.\n\n504\n00:25:14.761 --> 00:25:17.000\nWe never got that offer.\n\n505\n00:25:17.000 --> 00:25:19.260\nAnd so, then we retried, after 30 seconds.\n\n506\n00:25:19.260 --> 00:25:20.390\nAnd then we retried again.\n\n507\n00:25:20.390 --> 00:25:24.430\nAnd when we finally gave up,\nwe did automatic private IP.\n\n508\n00:25:24.430 --> 00:25:28.496\nSo I ended up with an address,\n169.254.something.something, right?\n\n509\n00:25:28.496 --> 00:25:32.930\nThese last two octets could be whatever\nwe, we just kind of auto generate them.\n\n510\n00:25:32.930 --> 00:25:35.920\nAnd see,\nI've got that slash 16 subnet mask?\n\n511\n00:25:35.920 --> 00:25:38.610\nAnd so, if all the other computers on my\nnetwork are doing the same thing, well,\n\n512\n00:25:38.610 --> 00:25:39.710\nwe'll be able to talk.\n\n513\n00:25:39.710 --> 00:25:42.000\nBut we have no default gateway,\nwe can't get around it,\n\n514\n00:25:42.000 --> 00:25:45.350\nwe can't get out to the Internet, so\nwe're just kind of stuck here, right?\n\n515\n00:25:45.350 --> 00:25:47.180\nSo, that's not where we wanna be.\n\n516\n00:25:47.180 --> 00:25:48.550\nNow, how do I fix this?\n\n517\n00:25:48.550 --> 00:25:52.140\nWell, we're gonna have to jump over\nto our handy switch over here,\n\n518\n00:25:52.140 --> 00:25:54.060\njump back into our command line.\n\n519\n00:25:54.060 --> 00:25:57.530\nAnd once we're on this thing, we'll\nbe able to jump in and do that trust.\n\n520\n00:25:57.530 --> 00:26:02.380\nThat's the important part,\nis that it is working,\n\n521\n00:26:02.380 --> 00:26:04.545\nour discover is making it to the server.\n\n522\n00:26:04.545 --> 00:26:05.960\nIt's just not a trusted port, right?\n\n523\n00:26:05.960 --> 00:26:09.720\nSo lets take a look at the switch, and\nI'll show you that, and how that's done.\n\n524\n00:26:09.720 --> 00:26:15.760\nSo, when I do a show IP DHCP snooping,\nthe last thing that\n\n525\n00:26:17.000 --> 00:26:21.860\nit displays on my output are my\ntrusted and un-trusted ports.\n\n526\n00:26:21.860 --> 00:26:25.630\nAnd now that I have rate limiting\nturned on, if you look down the list,\n\n527\n00:26:25.630 --> 00:26:29.300\nyou'll start to see whether the ports\nare trusted and un-trusted right?\n\n528\n00:26:29.300 --> 00:26:32.510\nAnd all of these are saying trusted, no.\n\n529\n00:26:32.510 --> 00:26:33.590\nAllow option, no.\n\n530\n00:26:33.590 --> 00:26:34.610\nRate limit, 10.\n\n531\n00:26:34.610 --> 00:26:35.470\nOkay?\n\n532\n00:26:35.470 --> 00:26:36.770\nWell, trusted.\n\n533\n00:26:36.770 --> 00:26:40.020\nAre they allowed to send\nDHCP offer messages?\n\n534\n00:26:40.020 --> 00:26:43.180\nAnd I know it's gonna tell us\nright away that's not allowed.\n\n535\n00:26:43.180 --> 00:26:44.730\nAllow option.\n\n536\n00:26:44.730 --> 00:26:47.680\nThere's actually a neat little thing here,\nit's not gonna be on the exam,\n\n537\n00:26:47.680 --> 00:26:49.240\nit's kinda beyond the scope of this one.\n\n538\n00:26:49.240 --> 00:26:51.800\nBut this guy right here, Option 82.\n\n539\n00:26:51.800 --> 00:26:57.710\nWhen a DHCP request has been processed\nby a switch running DHCP snooping,\n\n540\n00:26:57.710 --> 00:27:02.380\nit can stick a little DHCP option into\nthat frame before sending it along.\n\n541\n00:27:02.380 --> 00:27:04.400\nIt's Option 82, and it'll inject it.\n\n542\n00:27:04.400 --> 00:27:08.350\nAnd so, see how it says here,\ninsertion of option 82 is enabled?\n\n543\n00:27:08.350 --> 00:27:10.590\nAnd this is the information\nthat it's sticking in there,\n\n544\n00:27:10.590 --> 00:27:14.700\nwhich switch it was, what Mac address it\nwas that was tied to that packet, and\n\n545\n00:27:14.700 --> 00:27:19.690\na little note about it,\nwhat was the VLAN ID and all that.\n\n546\n00:27:19.690 --> 00:27:23.250\nAnd then, you'll see here, option 82\non untrusted port is not allowed.\n\n547\n00:27:23.250 --> 00:27:27.100\nIn other words, we're not gonna\nlet an untrusted port handle that.\n\n548\n00:27:27.100 --> 00:27:29.280\nSo that's where we're\nseeing nos on all of those.\n\n549\n00:27:29.280 --> 00:27:32.100\nAnd then,\nthe rate limit of 10 packets per second,\n\n550\n00:27:32.100 --> 00:27:35.450\nthat was what we set on it\nwhen we applied that, okay?\n\n551\n00:27:35.450 --> 00:27:40.010\nSo, as we look at these numbers here,\nthat's what we expect to see.\n\n552\n00:27:40.010 --> 00:27:42.220\nWell, my problem is port 48.\n\n553\n00:27:42.220 --> 00:27:45.440\nPort 48 is not trusted,\nso I need to trust it so\n\n554\n00:27:45.440 --> 00:27:47.650\nit'll be allowed to send\nthose offer messages.\n\n555\n00:27:47.650 --> 00:27:51.561\nSo, I'm gonna get into port fa0/48, and\n\n556\n00:27:51.561 --> 00:27:56.580\nI'm gonna say, ip dhcp snooping,\nand then, trust.\n\n557\n00:27:56.580 --> 00:27:59.090\nWe're gonna trust this port.\n\n558\n00:27:59.090 --> 00:28:02.920\nAnd if I do a show ip dhcp snooping,\n\n559\n00:28:02.920 --> 00:28:06.430\nand we come in here and\nwe take a look at all the ports.\n\n560\n00:28:06.430 --> 00:28:08.354\nI should have picked a smaller switch,\na 48 port switch,\n\n561\n00:28:08.354 --> 00:28:09.750\nwe gotta get all the way\ndown to the bottom.\n\n562\n00:28:09.750 --> 00:28:12.065\nAnd when we get all the way\ndown to the bottom,\n\n563\n00:28:12.065 --> 00:28:16.590\nwe've got port 48 is yes for trusted.\n\n564\n00:28:16.590 --> 00:28:19.100\nYes, it's allowing that option 82.\n\n565\n00:28:19.100 --> 00:28:21.270\nAnd it's unlimited for it's rate limit.\n\n566\n00:28:21.270 --> 00:28:25.870\nAnd that's kind of important because\nI might have a lot of systems\n\n567\n00:28:25.870 --> 00:28:29.780\nthat are out there, and I'm requesting\nthem at more than 10 packets per second\n\n568\n00:28:29.780 --> 00:28:31.360\nbecause it's all those ports aggregated.\n\n569\n00:28:31.360 --> 00:28:32.710\nSo I need to be able to trust that a lot.\n\n570\n00:28:32.710 --> 00:28:37.110\nNow, when you trust an interface,\nthat interface should be either\n\n571\n00:28:37.110 --> 00:28:41.960\nan interface that the dhcp servers\ndirectly plug into, or a trunk like mine.\n\n572\n00:28:41.960 --> 00:28:44.420\nThe dhcp server's actually plugged\ninto another switch in our building.\n\n573\n00:28:44.420 --> 00:28:45.840\nIt's not plugged into this port.\n\n574\n00:28:45.840 --> 00:28:49.140\nBut that's my up-link, so that's where\nthe offer messages are coming from.\n\n575\n00:28:49.140 --> 00:28:51.960\nWhen you plan this out,\nyou have to look at your topology and\n\n576\n00:28:51.960 --> 00:28:55.460\nfigure out the path that your offer\nmessages are gonna follow, and\n\n577\n00:28:55.460 --> 00:28:57.650\nthose are the ports\nthat you need to trust.\n\n578\n00:28:57.650 --> 00:29:00.700\nAs a rule of thumb, you'll generally\ntrust all of your trunk ports.\n\n579\n00:29:00.700 --> 00:29:03.890\nSo, the DHCP server's gonna be downstream\nsomewhere across the trunk, so\n\n580\n00:29:03.890 --> 00:29:05.760\nyou'll need to trust the trunk ports.\n\n581\n00:29:05.760 --> 00:29:09.000\nBut if it's the switch the DHCP\nserver's actually plugged into,\n\n582\n00:29:09.000 --> 00:29:12.260\nthen you'll trust whatever interface\nthat it's directly plugged into.\n\n583\n00:29:12.260 --> 00:29:14.840\nEvery other port's typically\ngoing to be untrusted,\n\n584\n00:29:14.840 --> 00:29:17.960\ncuz they shouldn't have a DHCP\nserver plugged into them, right?\n\n585\n00:29:17.960 --> 00:29:19.110\nBut now that that's trusted,\n\n586\n00:29:19.110 --> 00:29:21.930\nmy workstation should be\nable to get those addresses.\n\n587\n00:29:21.930 --> 00:29:25.430\nAnd if I flip back over to my address,\nsure enough.\n\n588\n00:29:25.430 --> 00:29:27.910\nWith a lot of operating systems,\nWindows and\n\n589\n00:29:27.910 --> 00:29:32.490\nMac specifically, when they get an APIP\naddress, they don't just stop there,\n\n590\n00:29:32.490 --> 00:29:35.140\nthey keep trying to get an address\nover and over and in the background.\n\n591\n00:29:35.140 --> 00:29:39.980\nSo as soon as I flag that to trust,\nwe were still sending out discovers.\n\n592\n00:29:39.980 --> 00:29:45.260\nAnd now, the offer was allowed to come\nthrough, and I got my IP address, right?\n\n593\n00:29:45.260 --> 00:29:47.390\nSo now, DHCP's allowed to flow through.\n\n594\n00:29:47.390 --> 00:29:51.860\nThe cool part about this is all of\nmy other ports are untrusted, so\n\n595\n00:29:51.860 --> 00:29:54.400\nif somebody were to bring one\nof those routers from home, or\n\n596\n00:29:54.400 --> 00:29:57.150\nsomebody maliciously wants\nto bring up a DHCP server,\n\n597\n00:29:57.150 --> 00:30:01.070\nand they're plugged into port 30,\nport 30 is not trusted.\n\n598\n00:30:01.070 --> 00:30:04.720\nAny offer they issue will just\nbe blocked and filtered out.\n\n599\n00:30:04.720 --> 00:30:08.190\nI will no longer have rogue\nDHCP servers on my network.\n\n600\n00:30:08.190 --> 00:30:10.280\nAnd for schools, this is like a must.\n\n601\n00:30:10.280 --> 00:30:11.991\nIt really doesn't impact\nperformance at all.\n\n602\n00:30:11.991 --> 00:30:13.765\nIt's an easy feature to enable.\n\n603\n00:30:13.765 --> 00:30:16.228\nWe're really talking about three commands,\nright?\n\n604\n00:30:16.228 --> 00:30:18.002\nIP DHCP snooping, to turn it on.\n\n605\n00:30:18.002 --> 00:30:23.536\nIP DHCP snooping VLAN, followed by the\nVLAN ranges, to tell it where it to run.\n\n606\n00:30:23.536 --> 00:30:27.840\nAnd then, go to an interface,\nan IP DHCP snooping trust.\n\n607\n00:30:27.840 --> 00:30:29.280\nThat's it.\nI mean, the rate limit.\n\n608\n00:30:29.280 --> 00:30:30.310\nI guess we wanna go that route.\n\n609\n00:30:30.310 --> 00:30:33.560\nSo, IP DHCP snooping limit, rate, and\n\n610\n00:30:33.560 --> 00:30:36.030\nthen the number of packets per\nsecond you wanna allow, right?\n\n611\n00:30:36.030 --> 00:30:38.290\nSo you just jump in there and specify it.\n\n612\n00:30:38.290 --> 00:30:40.410\nSo, it's a pretty easy technology.\n\n613\n00:30:40.410 --> 00:30:43.360\nIt's supported on every Cisco switch.\n\n614\n00:30:43.360 --> 00:30:47.430\nWell, not those cheap,\ncrummy business SG series, whatever.\n\n615\n00:30:47.430 --> 00:30:49.480\nThe Linksys ones that have\nthe Cisco logo stuck on them?\n\n616\n00:30:49.480 --> 00:30:50.530\nNot on those guys.\n\n617\n00:30:50.530 --> 00:30:53.380\nBut on all the good ones,\nall the catalyst switches.\n\n618\n00:30:53.380 --> 00:30:54.590\nYes, it's supported.\n\n619\n00:30:54.590 --> 00:30:56.420\nAnd it's an easy technology to get up and\ngoing.\n\n620\n00:30:56.420 --> 00:31:00.480\nSo, completely eliminates\nDHCP starvation and\n\n621\n00:31:00.480 --> 00:31:03.420\nrogue DHCP servers,\nright there at layer two.\n\n622\n00:31:03.420 --> 00:31:05.447\n>> All right.\nSo, Don, thank you for\n\n623\n00:31:05.447 --> 00:31:10.598\nshowing us the idea of using DHCP snooping\nto help us to mitigate at least some of\n\n624\n00:31:10.598 --> 00:31:16.190\nthe DHCP attacks that we see in the rogue\nDHCP Server as well as DHCP starvation.\n\n625\n00:31:16.190 --> 00:31:20.270\nBut that's not all the layer two\nmitigation that we have to do.\n\n626\n00:31:20.270 --> 00:31:23.380\nBut that means we have to come back for\na part two in this.\n\n627\n00:31:23.380 --> 00:31:26.905\nAnd so, we do want you to see,\nwe want you to come back and\n\n628\n00:31:26.905 --> 00:31:28.930\nsee our part two on this as well.\n\n629\n00:31:28.930 --> 00:31:30.980\nA great place for\nus to end this episode, then.\n\n630\n00:31:30.980 --> 00:31:34.470\nSigning off for ITProTV,\nI've been your host, Ronnie Wong.\n\n631\n00:31:34.470 --> 00:31:35.710\n>> And I'm Don Pezet.\n\n632\n00:31:35.710 --> 00:31:38.408\n>> And come back for\n\n633\n00:31:38.408 --> 00:31:44.004\nmore CCNA routing and switching.\n\n634\n00:31:44.004 --> 00:31:48.100\n[MUSIC]\n\n",
          "vimeoId": "178376836"
        },
        {
          "description": "In this episode, Ronnie and Don continue to take a look at additional Layer 2 threats.  They zero in on two threat mitigation techniques:  changing native vlan and implementing 802.1X authentication.  They explain why leaving the native vlan in the default configuration is a threat.  The guys discuss the how to prevent any unauthorized device from connecting to our network using 802.1X.",
          "length": "1905",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/cisco-ccna200105/cisco-ccna-200105-1-5-2-layer_2_threat_mitigation_pt.2-081016-high.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/cisco-ccna200105/cisco-ccna-200105-1-5-2-layer_2_threat_mitigation_pt.2-081016-high-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/cisco-ccna200105/cisco-ccna-200105-1-5-2-layer_2_threat_mitigation_pt.2-081016-high-sm.jpg",
          "title": "Layer 2 Threat Mitigation Part 2",
          "transcript": "WEBVTT\n\n1\n00:00:00.000 --> 00:00:10.000\n[MUSIC]\n\n2\n00:00:12.103 --> 00:00:15.063\nWelcome back to another great\nepisode right here on ITProTV.\n\n3\n00:00:15.063 --> 00:00:19.017\nI'm your host Ronnie Wong and\nyou're watching the Cisco CCNA Routing and\n\n4\n00:00:19.017 --> 00:00:20.410\nSwitching show.\n\n5\n00:00:20.410 --> 00:00:24.760\nNow we're actually taking a look at\npart two of layer two threat mitigation.\n\n6\n00:00:24.760 --> 00:00:29.150\nWe've already talked a little bit\nabout using DHCP snooping to help us.\n\n7\n00:00:29.150 --> 00:00:30.670\nAnd now we're moving on to a few more.\n\n8\n00:00:30.670 --> 00:00:33.140\nAnd who better to help us than Mr.\nDon Pezet.\n\n9\n00:00:33.140 --> 00:00:37.010\nNow Don, we wanna start off with another\none of these different threats here.\n\n10\n00:00:37.010 --> 00:00:39.980\nAnd we talked about the idea\nof using native VLANs.\n\n11\n00:00:39.980 --> 00:00:42.270\nWell, what's the big deal, Don?\n\n12\n00:00:42.270 --> 00:00:43.210\n>> All right, so\n\n13\n00:00:43.210 --> 00:00:46.010\nwhen you have more than one VLAN that\nyou're going to use trunks, right?\n\n14\n00:00:46.010 --> 00:00:47.610\nSo we saw that back in\nthe trunking episode.\n\n15\n00:00:47.610 --> 00:00:52.449\nAnd the whole idea behind a trunk is that\none interface is gonna carry more than one\n\n16\n00:00:52.449 --> 00:00:53.597\nVLAN's traffic.\n\n17\n00:00:53.597 --> 00:00:55.962\nNow the whole point of a VLAN\nis keep traffic separate and\n\n18\n00:00:55.962 --> 00:00:58.490\nthen here on the trunk,\nwe're combining it all together.\n\n19\n00:00:58.490 --> 00:01:02.140\nNow fortunately we can\nuse 802.1Q trunking or\n\n20\n00:01:02.140 --> 00:01:05.670\nwe can use ISL to make the traffic\nstays separate, right?\n\n21\n00:01:05.670 --> 00:01:08.730\nNow with ISL, it does encapsulation.\n\n22\n00:01:08.730 --> 00:01:13.240\nEvery single frame sent across that\ntrunk is wrapped up encapsulated\n\n23\n00:01:13.240 --> 00:01:15.620\nwith a little VLAN number\nstuck right on it, right?\n\n24\n00:01:15.620 --> 00:01:20.460\nSo in ISL, everything is nice and\nseparate and that's it.\n\n25\n00:01:20.460 --> 00:01:24.057\nBut ISL's not very common because\nit's Cisco proprietary, so\n\n26\n00:01:24.057 --> 00:01:25.796\nwe normally run 802.1Q.\n\n27\n00:01:25.796 --> 00:01:31.110\nAnd with 802.1Q,\nalmost all traffic is tagged, right?\n\n28\n00:01:31.110 --> 00:01:32.760\nSo it doesn't do encapsulation, right?\n\n29\n00:01:32.760 --> 00:01:36.530\nIt takes the frame and\nit injects the VLAN numbers a tag\n\n30\n00:01:36.530 --> 00:01:39.190\nright into the header of\nthe frame before sending it along.\n\n31\n00:01:39.190 --> 00:01:42.277\nNow, that means the switch on the other\nside can look at that tag and\n\n32\n00:01:42.277 --> 00:01:43.666\nrecognize what's going on.\n\n33\n00:01:43.666 --> 00:01:46.677\nAnd there's a couple of different\nattacks people could pull off\n\n34\n00:01:46.677 --> 00:01:49.210\nagainst this to try to do\nwhat's call VLAN hopping.\n\n35\n00:01:49.210 --> 00:01:51.434\nWhere they jump from one\nVLAN over to another,\n\n36\n00:01:51.434 --> 00:01:54.528\nthey cross the boundary that we\ndon't wanna allow, all right.\n\n37\n00:01:54.528 --> 00:01:57.680\nOne is prevented automatically,\none is a little more challenging.\n\n38\n00:01:57.680 --> 00:01:59.840\nSo the one that spins up automatically,\n\n39\n00:01:59.840 --> 00:02:01.810\nthere used to be a trick\nthat you could pull off.\n\n40\n00:02:01.810 --> 00:02:05.700\nI shouldn't say used to,\nyou still can on some switches where\n\n41\n00:02:05.700 --> 00:02:09.710\nan attacker could take their data and\ntag it ahead of time.\n\n42\n00:02:09.710 --> 00:02:14.250\nSo maybe I'm plugged into a port that's\nset as an access port on VLAN 10.\n\n43\n00:02:14.250 --> 00:02:19.160\nI could take my frames coming out of\nmy computer and tag them for VLAN 1.\n\n44\n00:02:19.160 --> 00:02:21.930\nAnd throw them on the port and\nwhen they hit the port, well,\n\n45\n00:02:21.930 --> 00:02:24.870\nyou would end up with what's\ncalled double tagging, right?\n\n46\n00:02:24.870 --> 00:02:28.590\nThe switch would go to tag the frame and\nthe frame's already got a tag on it.\n\n47\n00:02:28.590 --> 00:02:32.740\nSo I'm already tagged on VLAN 1,\nit goes to tag me with VLAN 10.\n\n48\n00:02:32.740 --> 00:02:35.400\nAnd the frame would get\nsent along with two tags.\n\n49\n00:02:35.400 --> 00:02:37.410\nAnd at the next switch,\n\n50\n00:02:37.410 --> 00:02:40.890\nit takes the first tag that was applied\nwhich would be the one that I wrote.\n\n51\n00:02:40.890 --> 00:02:43.580\nAnd now my frame would get\ndeposited on the wrong VLAN,\n\n52\n00:02:43.580 --> 00:02:46.330\nit would get deposited on VLAN 1.\n\n53\n00:02:46.330 --> 00:02:48.150\nI just jumped VLANs, right?\n\n54\n00:02:48.150 --> 00:02:48.970\nSo that's bad.\n\n55\n00:02:48.970 --> 00:02:50.720\nWell, fortunately we don't\nhave to worry about that one.\n\n56\n00:02:50.720 --> 00:02:56.440\nBecause Cisco switches will discard any\nframe that has a tag on an access port.\n\n57\n00:02:56.440 --> 00:02:58.840\nSo, if it's coming in on\na non trunk board and\n\n58\n00:02:58.840 --> 00:03:01.630\nit's already tagged,\nit's gonna throw it away, all right.\n\n59\n00:03:01.630 --> 00:03:05.010\nNow, if it's a trunk board,\nthat's a different story.\n\n60\n00:03:05.010 --> 00:03:07.660\nAnd if you got dynamic\ntrunking protocol turned on,\n\n61\n00:03:07.660 --> 00:03:11.580\nthat's a big problem because an attacker\ncould negotiate out of trunk.\n\n62\n00:03:11.580 --> 00:03:15.050\nSo go back and check at our DTP episode\nto show how to turn that off and\n\n63\n00:03:15.050 --> 00:03:18.150\nmake sure that access\nport stay access ports.\n\n64\n00:03:18.150 --> 00:03:19.256\nAnd trunk ports stay trunk ports,\n\n65\n00:03:19.256 --> 00:03:21.430\nyou don't want an attacker\nto get a trunk port.\n\n66\n00:03:21.430 --> 00:03:24.900\nBut on an access port, we don't\nhave to worry about double tagging\n\n67\n00:03:24.900 --> 00:03:26.480\ncuz Cisco's already taking\ncare of that for us.\n\n68\n00:03:26.480 --> 00:03:30.070\nIt's not a feature we can turn on or off,\nit's built-in to the IOS, it does it and\n\n69\n00:03:30.070 --> 00:03:30.690\nwe're protected.\n\n70\n00:03:31.780 --> 00:03:37.210\nBut there still are other attacks\nthat can be performed based not so\n\n71\n00:03:37.210 --> 00:03:40.847\nmuch around double tagging but\naround the absence of a tag.\n\n72\n00:03:40.847 --> 00:03:45.336\nRemember with 802.1Q,\nevery frame that's sent\n\n73\n00:03:45.336 --> 00:03:50.222\nacross it is tagged with a VLAN except for\none special VLAN.\n\n74\n00:03:50.222 --> 00:03:55.768\nIn 802.1Q on a Cisco switch, VLAN 1\nis what's called the native VLAN and\n\n75\n00:03:55.768 --> 00:03:58.950\nthe native VLAN doesn't get a tag.\n\n76\n00:03:58.950 --> 00:04:00.386\nIt's sent untagged and\n\n77\n00:04:00.386 --> 00:04:04.632\nso when it crosses the network it has\nno tags at all and that's VLAN 1.\n\n78\n00:04:04.632 --> 00:04:08.280\nWell, VLAN 1 is also\nthe default management VLAN.\n\n79\n00:04:08.280 --> 00:04:12.020\nWhich means if you're gonna SSH or\nTelnet into a switch or try and\n\n80\n00:04:12.020 --> 00:04:13.450\naccess its web interface.\n\n81\n00:04:13.450 --> 00:04:17.510\nThe default interface, it's gonna do\nthat on is its VLAN 1 interface, right?\n\n82\n00:04:17.510 --> 00:04:20.540\nThat's your default management VLAN and\nattackers know that.\n\n83\n00:04:20.540 --> 00:04:23.859\nThey know that if they wanna\ntarget a switch and attack it,\n\n84\n00:04:23.859 --> 00:04:25.973\nVLAN 1 is the one they need to get on.\n\n85\n00:04:25.973 --> 00:04:29.406\nAnd when they pull again to\na port they're on VLAN 10,\n\n86\n00:04:29.406 --> 00:04:35.440\nthey'll look at it like man, I'm on VLAN\n10, I need to get to VLAN 1 somehow.\n\n87\n00:04:35.440 --> 00:04:40.450\nSo all they have to do is figure\nout some way to damage their tag.\n\n88\n00:04:40.450 --> 00:04:43.985\nSo that when they get set along\nthe tag will be viewed as invalid and\n\n89\n00:04:43.985 --> 00:04:46.633\nthey'll get thrown on the native VLAN,\nright?\n\n90\n00:04:46.633 --> 00:04:49.182\nAnd there's a few techniques\nattackers have for doing that, for\n\n91\n00:04:49.182 --> 00:04:49.980\ndamaging the tags.\n\n92\n00:04:49.980 --> 00:04:56.480\nSo it doesn't trip things like a double\ntag would, but it is one just bad tag.\n\n93\n00:04:56.480 --> 00:04:59.010\nAnd when it gets stripped away,\nthey end up on VLAN 1,\n\n94\n00:04:59.010 --> 00:05:00.100\nthey end up on the native VLAN.\n\n95\n00:05:00.100 --> 00:05:03.510\nNow, it's of moderate use,\n\n96\n00:05:03.510 --> 00:05:07.160\nbecause they're gonna be able to send\nthe traffic and not receive it, right?\n\n97\n00:05:07.160 --> 00:05:09.860\nThe traffic won't come back to them\ncuz their port's on VLAN 10, so\n\n98\n00:05:09.860 --> 00:05:11.660\nit's gonna get lost in the mix.\n\n99\n00:05:11.660 --> 00:05:15.990\nBut if it's something like UDP,\nUDP doesn't need a response anyway.\n\n100\n00:05:15.990 --> 00:05:20.180\nSo they can start their attack using UDP\nand try to open up some other method from\n\n101\n00:05:20.180 --> 00:05:22.220\nthere and\npotentially gain access that way.\n\n102\n00:05:22.220 --> 00:05:24.620\nIt's a very,\nvery complex attack to pull off.\n\n103\n00:05:24.620 --> 00:05:28.920\nBut the point is that it can indeed\nbe pulled off, people have done it.\n\n104\n00:05:28.920 --> 00:05:30.910\nSo we need to protect from that, right?\n\n105\n00:05:30.910 --> 00:05:35.520\nWell, back in the early days with 802.1Q,\nthe reason they did the native VLAN\n\n106\n00:05:35.520 --> 00:05:40.430\nis older switches didn't have as much\nprocessor power as they do today.\n\n107\n00:05:40.430 --> 00:05:43.060\nAnd so tagging these frames\nwas a bit of a problem.\n\n108\n00:05:43.060 --> 00:05:45.100\nWhen you tag a frame,\nthe header size changes.\n\n109\n00:05:45.100 --> 00:05:48.220\nAnd when the header size changes,\nyou got to recalculate a CRC.\n\n110\n00:05:48.220 --> 00:05:53.120\nSo having to calculate CRC's or\nchecksums for every single frame passing\n\n111\n00:05:53.120 --> 00:05:56.380\nthrough the switch and if you didn't have\nthe hardware for it you couldn't do it.\n\n112\n00:05:56.380 --> 00:05:59.750\nCisco had the hardware for it but other\nvendors they kind of had that problem.\n\n113\n00:05:59.750 --> 00:06:03.060\nWell nowadays,\nyour switches can do it in hardware and\n\n114\n00:06:03.060 --> 00:06:06.930\nit's no performance loss at all,\nso we really don't care about it.\n\n115\n00:06:06.930 --> 00:06:11.240\nBut in the early days they kept\nthe native VLAN untagged, so\n\n116\n00:06:11.240 --> 00:06:15.080\nthat you could pick whichever VLAN\nwas your highest traffic VLAN.\n\n117\n00:06:15.080 --> 00:06:19.094\nAnd make that native and\nthat way you calculated less checksums.\n\n118\n00:06:19.094 --> 00:06:22.680\nWell, today we don't care about that,\nnow it's just a weakness.\n\n119\n00:06:22.680 --> 00:06:25.369\nIt's a weakness because attackers\nknow where default management stuff\n\n120\n00:06:25.369 --> 00:06:26.260\nwas on VLAN 1.\n\n121\n00:06:26.260 --> 00:06:30.331\nAnd if they can just damage their tag and\nhop over to the untagged VLAN,\n\n122\n00:06:30.331 --> 00:06:32.250\nthey'll be on VLAN 1.\n\n123\n00:06:32.250 --> 00:06:36.120\nSo Cisco recommends that you've\nchanged your native VLAN\n\n124\n00:06:36.120 --> 00:06:37.870\nto something other than one.\n\n125\n00:06:37.870 --> 00:06:39.160\nDon't use one, right?\n\n126\n00:06:39.160 --> 00:06:42.540\nYou can still have VLAN 1\nit will just be tagged and\n\n127\n00:06:42.540 --> 00:06:46.430\nthen have some other VLAN\nbe the untagged VLAN.\n\n128\n00:06:46.430 --> 00:06:50.510\nSo changing the native VLAN can help\nwith that and what I like to do,\n\n129\n00:06:50.510 --> 00:06:53.570\nwhat I recommend is to make\nit a VLAN you don't use.\n\n130\n00:06:53.570 --> 00:06:55.200\nHave an empty VLAN.\n\n131\n00:06:55.200 --> 00:06:59.280\nAnd that way, if an attacker manages\nto hop and jump onto the native VLAN,\n\n132\n00:06:59.280 --> 00:07:02.550\nthey're just jumping on to an empty\nVLAN and they're stuck there.\n\n133\n00:07:02.550 --> 00:07:06.890\nAnd we can even do IDS or recording of\nthe traffic on that VLAN to see when it\n\n134\n00:07:06.890 --> 00:07:09.230\nhappens and\nknow those attacks are going on.\n\n135\n00:07:09.230 --> 00:07:11.450\nSo it makes it almost like a honey pot,\nright?\n\n136\n00:07:11.450 --> 00:07:12.990\nThere's dead VLAN that we're not using.\n\n137\n00:07:14.630 --> 00:07:16.390\nCisco doesn't have\na recommended number for this.\n\n138\n00:07:16.390 --> 00:07:18.770\nBut I know for me,\nI almost always use 999.\n\n139\n00:07:18.770 --> 00:07:23.190\nSo if you guys ever go to a network I've\nworked on, you'll usually see a VLAN 999.\n\n140\n00:07:23.190 --> 00:07:26.400\nAnd that's the native VLAN and\nthere'll be no ports on it.\n\n141\n00:07:26.400 --> 00:07:28.240\nIt's just on the trunks and it's just for\n\n142\n00:07:28.240 --> 00:07:32.200\nthat purpose to basically suck up\nthe attacks that happen, right?\n\n143\n00:07:32.200 --> 00:07:33.640\nSo let me show you how that works.\n\n144\n00:07:33.640 --> 00:07:34.840\nI'm gonna take two switches.\n\n145\n00:07:34.840 --> 00:07:39.340\nAnd I've got NYCORE1 and NYCORE2,\nthese two guys right here.\n\n146\n00:07:39.340 --> 00:07:41.820\nAnd they have some trunk\nports between them, right?\n\n147\n00:07:41.820 --> 00:07:44.327\nPorts 23 and 24,\nthey connect them together.\n\n148\n00:07:44.327 --> 00:07:51.010\nAnd I'm gonna configure those trunk ports\nto use different native VLAN, right?\n\n149\n00:07:51.010 --> 00:07:53.025\nSo let me get started here on CORE1.\n\n150\n00:07:54.150 --> 00:08:00.187\nI'm gonna jump into it's configuration and\nI'm gonna use the interface range command.\n\n151\n00:08:00.187 --> 00:08:04.267\nI guess I really only need to configure\none interface, I'll just do One of them,\n\n152\n00:08:04.267 --> 00:08:04.991\nfa0/24.\n\n153\n00:08:04.991 --> 00:08:08.948\nI have two ports, but\nI just really need to do one for\n\n154\n00:08:08.948 --> 00:08:13.020\nthe example, and\nit is 1/0/24, there we go.\n\n155\n00:08:13.020 --> 00:08:18.541\nAnd on this port,\nif I say switchport trunk encapsulation,\n\n156\n00:08:18.541 --> 00:08:24.727\nand I specify dot1q,\nthat's where I'm gonna have a native vlan.\n\n157\n00:08:24.727 --> 00:08:26.850\nIf I'm doing ISL,\nI don't have a native vlan.\n\n158\n00:08:26.850 --> 00:08:29.590\nEverything is encapsulated with ISL, so\nI don't have to worry about it, right?\n\n159\n00:08:29.590 --> 00:08:32.800\nSo, I'm gonna hard set myself to dot1q\nbecause that's where I'm gonna have\n\n160\n00:08:32.800 --> 00:08:33.760\nthat weakness.\n\n161\n00:08:33.760 --> 00:08:36.149\nAnd then I'm gonna say,\nswitchport mode trunk.\n\n162\n00:08:37.440 --> 00:08:42.010\nAnd I'm gonna do a switchport nonegotiate,\nand I'm doing a nonegotiate\n\n163\n00:08:42.010 --> 00:08:45.510\nbecause if I'm running dynamic\ntrunking protocol, then potentially,\n\n164\n00:08:45.510 --> 00:08:48.940\nI could fail to negotiate a trunk and\ndrop down to being an access port again.\n\n165\n00:08:48.940 --> 00:08:51.740\nI want to be a trunk, all right.\n\n166\n00:08:51.740 --> 00:08:56.133\nAnd as a trunk, I'm now gonna\nbe carrying every vlan, right?\n\n167\n00:08:56.133 --> 00:08:57.917\nWell, I need to create some vlans,\nI guess, so\n\n168\n00:08:57.917 --> 00:08:59.311\nlet me whip up some vlans real quick.\n\n169\n00:08:59.311 --> 00:09:04.200\nWe'll do vlan 10, vlan 20,\nvlan 30, 40, and so on, right,\n\n170\n00:09:04.200 --> 00:09:07.790\nso I'm just gonna whip up a few vlans,\nso I've got.\n\n171\n00:09:09.082 --> 00:09:12.240\nAll right, so now, if I do a show vlan,\n\n172\n00:09:12.240 --> 00:09:15.550\nwhat I expect to see is that port 24\nshould've disappeared from the list.\n\n173\n00:09:15.550 --> 00:09:17.910\nAnd sure enough,\nI don't see port 24 here, right?\n\n174\n00:09:17.910 --> 00:09:19.582\nTrunks don't show up in show vlan.\n\n175\n00:09:19.582 --> 00:09:23.510\nAnd then I've got all these other\nvlans kinda sitting here as active.\n\n176\n00:09:23.510 --> 00:09:26.814\nAnd if I do a show interfaces trunk,\n\n177\n00:09:29.510 --> 00:09:33.059\nThen I see that port 24 is trunking,\nmode is on.\n\n178\n00:09:33.059 --> 00:09:37.640\nIt's 802.1q, and\nit's got a native vlan of 1.\n\n179\n00:09:37.640 --> 00:09:38.930\nThat's the default.\n\n180\n00:09:38.930 --> 00:09:41.600\nI didn't configure that,\nthat's the default.\n\n181\n00:09:41.600 --> 00:09:43.980\nAnd I'm carrying all\nthose vlans on the trunk.\n\n182\n00:09:43.980 --> 00:09:47.140\nThey're allowed, well, some of them are\npruned off here cuz I don't have a true\n\n183\n00:09:47.140 --> 00:09:50.370\ntrunk right now, and if I had interfaces\nassigned, things would start to change.\n\n184\n00:09:50.370 --> 00:09:52.917\nBut for right now,\nwe've only got one active, right?\n\n185\n00:09:52.917 --> 00:09:57.840\nSo now it's up and it's going,\nand vlan1 is the native, right?\n\n186\n00:09:57.840 --> 00:10:01.550\nWell let me configure the other side of\nthis trunk, so over on core2, this guy,\n\n187\n00:10:01.550 --> 00:10:05.630\nI'm gonna do the same basic thing\nthat I just did on the other one.\n\n188\n00:10:05.630 --> 00:10:13.138\nSo, I'm gonna get into fa1/0/24,\nswitchport trunk encapsulation dot1q.\n\n189\n00:10:13.138 --> 00:10:15.648\nI'm gonna spell trunk right.\n\n190\n00:10:15.648 --> 00:10:20.242\nI think I've misspelled that\nevery time this episode,\n\n191\n00:10:20.242 --> 00:10:25.127\nthis is not a good Don typing day,\nswitchport mode trunk and\n\n192\n00:10:25.127 --> 00:10:27.387\nswitchport nonegotiate.\n\n193\n00:10:27.387 --> 00:10:31.897\nAll right, and on this one,\nI guess, I'm not running VTP,\n\n194\n00:10:31.897 --> 00:10:34.610\nso I need to create the vlans here also.\n\n195\n00:10:34.610 --> 00:10:35.646\nIf I was running VTP,\n\n196\n00:10:35.646 --> 00:10:38.592\nwe would start learning about\nthe vlans that were out there.\n\n197\n00:10:38.592 --> 00:10:42.120\nIt probably would have been faster to\nconfigure VTP, but I'll just do that.\n\n198\n00:10:42.120 --> 00:10:43.570\nSo now I've got them on both sides.\n\n199\n00:10:43.570 --> 00:10:46.300\nSo now when I do a show interface trunk,\n\n200\n00:10:47.300 --> 00:10:50.450\nI'll see the same configuration as\nI did on the other side, right?\n\n201\n00:10:50.450 --> 00:10:54.370\nAnd I'm not in a forwarding state here\njust yet cuz the trunk just came up.\n\n202\n00:10:54.370 --> 00:10:56.960\nBut those will change here in\na moment after spanning tree is done\n\n203\n00:10:56.960 --> 00:10:58.170\ndoing its thing.\n\n204\n00:10:58.170 --> 00:10:59.410\nAnd that'll start to populate, too.\n\n205\n00:10:59.410 --> 00:11:03.150\nSo, but the point is,\nI am trunking and my native vlan is 1,\n\n206\n00:11:03.150 --> 00:11:05.930\nso this is the same way as the other side.\n\n207\n00:11:05.930 --> 00:11:10.020\nOkay, so how do I change that native vlan?\n\n208\n00:11:10.020 --> 00:11:11.780\nHow do I make it something else?\n\n209\n00:11:11.780 --> 00:11:15.230\nWell, I can go in, and\nI can change that on the interface itself.\n\n210\n00:11:15.230 --> 00:11:18.200\nIt's done on a per interface basis,\nit's not a global command.\n\n211\n00:11:18.200 --> 00:11:20.970\nI don't change the native vlan for\nevery trunk all at once.\n\n212\n00:11:20.970 --> 00:11:24.484\nEach individual trunk can\nhave its own native vlan, and\n\n213\n00:11:24.484 --> 00:11:29.585\nthat's important because each trunk is\nusually running to a different switch.\n\n214\n00:11:29.585 --> 00:11:31.987\nAnd different switch may\nhave different native vlans,\n\n215\n00:11:31.987 --> 00:11:33.178\nand I need it to be the same.\n\n216\n00:11:33.178 --> 00:11:37.250\nWhat happens if I change the native\nvlan on this end to 999,\n\n217\n00:11:37.250 --> 00:11:40.228\nand on the other end,\nI leave the native vlan at 1?\n\n218\n00:11:40.228 --> 00:11:43.740\nWell, remember the native\nvlan is untagged.\n\n219\n00:11:43.740 --> 00:11:46.990\nSo vlan 1 traffic would leave\nthe other switch untagged.\n\n220\n00:11:46.990 --> 00:11:48.840\nAnd it would come here,\nand I would put it on 999.\n\n221\n00:11:48.840 --> 00:11:52.270\nAnd the reverse would be true,\nif anything that was here on 999,\n\n222\n00:11:52.270 --> 00:11:55.490\nI would send it untagged to the other\nside, and other side would say,\n\n223\n00:11:55.490 --> 00:11:58.500\nit's untagged, my native vlan is 1,\nlet me put that on vlan 1.\n\n224\n00:11:58.500 --> 00:12:02.620\nI've now crossed the streams, and whatever\ntwo vlans I picked are now merged.\n\n225\n00:12:02.620 --> 00:12:04.440\nThey're now one big vlan.\n\n226\n00:12:04.440 --> 00:12:06.140\nSo, always be careful of that.\n\n227\n00:12:06.140 --> 00:12:10.100\nWhenever you change a native vlan, it's\ngotta be done on both ends of the cable.\n\n228\n00:12:10.100 --> 00:12:14.220\nOn both ends of that trunk, we've got\nto change it and make them the same.\n\n229\n00:12:14.220 --> 00:12:16.710\nOtherwise, it's not a good thing.\n\n230\n00:12:16.710 --> 00:12:22.285\nAll right, so on Core2 here, what I'm\ngonna do is, or I'll go back to Core1.\n\n231\n00:12:22.285 --> 00:12:25.490\nI'm gonna create a vlan,\nI'm gonna create vlan 999, right?\n\n232\n00:12:27.370 --> 00:12:32.990\nAnd once I do that,\nI'm gonna give it a name of something\n\n233\n00:12:32.990 --> 00:12:35.850\nlike Empty's usually what I call, but\nyou can call it whatever you want.\n\n234\n00:12:35.850 --> 00:12:38.876\nJust so you remember like hey, this is\nnot a vlan I actually intend to use.\n\n235\n00:12:38.876 --> 00:12:43.580\nThis is just an empty native or whatever\nit is that you wanna call it, all right?\n\n236\n00:12:43.580 --> 00:12:47.130\nAnd then you get into your trunk port,\nso I'm gonna get into fa1/0/24,\n\n237\n00:12:47.130 --> 00:12:51.580\nand it's on the port itself\n\n238\n00:12:51.580 --> 00:12:56.128\nthat you tell it switchport trunk\n\n239\n00:12:56.128 --> 00:13:01.940\nnative vlan, and then the number of\nthe native vlan that you wanna use.\n\n240\n00:13:01.940 --> 00:13:03.956\nI wanna use 999.\n\n241\n00:13:03.956 --> 00:13:08.090\nAnd now it's gonna tell it traffic for\nevery vlan,\n\n242\n00:13:08.090 --> 00:13:13.678\nincluding vlan 1, is going to get tagged,\nexcept for vlan 999.\n\n243\n00:13:13.678 --> 00:13:16.030\nUntagged traffic will be vlan 999.\n\n244\n00:13:16.030 --> 00:13:17.060\nNow as soon as I did that,\n\n245\n00:13:17.060 --> 00:13:20.040\nlook what happened,\nI started getting some errors, right?\n\n246\n00:13:20.040 --> 00:13:25.260\nI received a BPDU with\nan inconsistent peer vlan id of 1.\n\n247\n00:13:25.260 --> 00:13:28.455\nAll right, BPDUs,\nthat's spanning tree protocol.\n\n248\n00:13:28.455 --> 00:13:31.350\nSpanning tree protocol is\ndetecting the switches, and\n\n249\n00:13:31.350 --> 00:13:34.650\nit's noticing that the vlans don't match.\n\n250\n00:13:34.650 --> 00:13:38.080\nI'm getting traffic from the other\nside on vlan id 1, and on this side,\n\n251\n00:13:38.080 --> 00:13:42.050\nit's vlan id 999,\nI've crossed the streams, all right.\n\n252\n00:13:42.050 --> 00:13:45.380\nCisco Discovery Protocol,\nCDP will also warn me about this,\n\n253\n00:13:45.380 --> 00:13:47.560\nit'll start bugging me\neventually if we stand here and\n\n254\n00:13:47.560 --> 00:13:51.700\nwait long enough, but spanning tree caught\nit first, you may see it differently.\n\n255\n00:13:51.700 --> 00:13:55.573\nAnd so here, I've got that\nvlan 1 on one side, vlan 999,\n\n256\n00:13:55.573 --> 00:13:58.788\ninconsistent peer vlan,\nso I'm getting warned.\n\n257\n00:13:58.788 --> 00:14:06.040\nAnd here's CDP, so it took CDP a little\nbit longer, but CDP-4 VLAN_MISMATCH.\n\n258\n00:14:06.040 --> 00:14:10.990\nNative VLAN mismatch discovered on 1/0/24,\nso it's smart enough to spot this and\n\n259\n00:14:10.990 --> 00:14:13.312\nwarn me about it, so\nI don't screw up my environment too bad.\n\n260\n00:14:13.312 --> 00:14:15.247\nAll right, so I need to go and fix it.\n\n261\n00:14:15.247 --> 00:14:17.310\nSo I'm gonna jump down here\nto my other switch, and\n\n262\n00:14:17.310 --> 00:14:19.090\nthe other switch is warning\nme about it too, right?\n\n263\n00:14:19.090 --> 00:14:20.920\nSo it's really clear about this.\n\n264\n00:14:20.920 --> 00:14:23.832\nIt's hard to mistake it,\nunless you're just not paying attention.\n\n265\n00:14:23.832 --> 00:14:27.806\nSo I'm gonna get into fa, well, actually,\nI need to create the vlan first, right, so\n\n266\n00:14:27.806 --> 00:14:29.657\nI'll do a vlan 999 to get it created.\n\n267\n00:14:29.657 --> 00:14:32.080\nAnd I'll give it a name.\n\n268\n00:14:32.080 --> 00:14:34.760\nAgain, VTP would've saved me that step.\n\n269\n00:14:34.760 --> 00:14:37.161\nAnd I'll get into fa1/0/24,\n\n270\n00:14:37.161 --> 00:14:42.180\nI'm gonna keep getting those\nerrors until I issue this command,\n\n271\n00:14:42.180 --> 00:14:48.415\nwhere I say switchport trunk\nnative vlan 999, all right.\n\n272\n00:14:48.415 --> 00:14:51.265\nSo now we've got the same\nnative vlan on both sides.\n\n273\n00:14:51.265 --> 00:14:54.515\nAnd as soon as I issue that, those\nmessages are gonna stop popping up, right?\n\n274\n00:14:54.515 --> 00:14:57.385\nThere might be one or two still queued\nin RAM, looks like there weren't.\n\n275\n00:14:57.385 --> 00:14:59.065\nSo sometimes,\nyou might see one or two pop up.\n\n276\n00:14:59.065 --> 00:15:00.655\nBut then they go away.\n\n277\n00:15:00.655 --> 00:15:04.180\nNow, anything untagged\nhere is on vlan 999, and\n\n278\n00:15:04.180 --> 00:15:07.850\non the other side,\nthe untagged stuff is 999, they match.\n\n279\n00:15:07.850 --> 00:15:09.690\nAnd so, spanning tree just released it.\n\n280\n00:15:09.690 --> 00:15:15.060\nI can see unblocking the ports, and\nso now, they should be up and happy.\n\n281\n00:15:15.060 --> 00:15:20.150\nIf an attacker right now would\nhave sent a malformed frame that\n\n282\n00:15:20.150 --> 00:15:24.150\nwould normally jump to the native vlan,\nwell, it would jump to the native vlan.\n\n283\n00:15:24.150 --> 00:15:27.320\nAnd when it does that, it would end\nup on vlan 999, which is empty.\n\n284\n00:15:27.320 --> 00:15:29.400\nIt's got nothing on it,\nright, so what do I care?\n\n285\n00:15:29.400 --> 00:15:32.150\nGood luck, welcome to vlan 999,\nyou're now walled off.\n\n286\n00:15:32.150 --> 00:15:37.028\n[LAUGH] And so, that effectively\ndefeats vlan hopping for 802.1q.\n\n287\n00:15:37.028 --> 00:15:39.720\nNow, we used to not wanna do that\nbecause of the performance benefit.\n\n288\n00:15:39.720 --> 00:15:41.740\nYou're like,\nI wanna use that untagged vlan for\n\n289\n00:15:41.740 --> 00:15:44.510\nmy heavy traffic network,\nbut switch hardware.\n\n290\n00:15:44.510 --> 00:15:48.360\nIf you have a switch made in\nthe last ten years, you're fine.\n\n291\n00:15:48.360 --> 00:15:50.152\nIf you have a switch\nmade over ten years ago,\n\n292\n00:15:50.152 --> 00:15:52.150\nyou've got bigger problems\nthan vlan hopping.\n\n293\n00:15:52.150 --> 00:15:53.550\nThat switch is gonna die any moment,\nright?\n\n294\n00:15:53.550 --> 00:15:55.510\nSo, if you have a switch\nmade in the last ten years,\n\n295\n00:15:55.510 --> 00:15:57.470\nit's got the hardware,\nit can handle the traffic.\n\n296\n00:15:57.470 --> 00:16:03.071\nYou don't have to worry about\nhaving untagged vlans, right?\n\n297\n00:16:03.071 --> 00:16:05.650\nYou can just give it up,\nwhich is exactly what I'm doing here,\n\n298\n00:16:05.650 --> 00:16:06.827\ngiving it up to vlan 999.\n\n299\n00:16:06.827 --> 00:16:11.200\nNow it's off and it's separate but I've\ngot to be careful right let me do the show\n\n300\n00:16:11.200 --> 00:16:14.300\nvlan output one more time,\nI mean show interface trunk.\n\n301\n00:16:16.050 --> 00:16:20.643\nSo I do a show interface's trunk\nyou've got to be careful because\n\n302\n00:16:20.643 --> 00:16:25.270\nevery trunk can have a different\nnative vlan if you want.\n\n303\n00:16:25.270 --> 00:16:28.970\nI don't have to use 999 on every one,\nI can have three trunks.\n\n304\n00:16:28.970 --> 00:16:32.230\nOne's 999, one's 998, the other one's 997.\n\n305\n00:16:32.230 --> 00:16:33.070\nIt's up to me.\n\n306\n00:16:33.070 --> 00:16:33.930\nYou can mix and\n\n307\n00:16:33.930 --> 00:16:38.110\nmatch as long as both ends of the cable\nare the same, it'll be happy, right.\n\n308\n00:16:38.110 --> 00:16:42.271\nSo you've always gotta pay attention\nto that and show interfaces trunk\n\n309\n00:16:42.271 --> 00:16:46.377\nis a great way to spot it and see it,\nand know to not mix them up, right.\n\n310\n00:16:46.377 --> 00:16:47.470\nSo just keep an eye on that.\n\n311\n00:16:47.470 --> 00:16:50.390\n>> All right, Don, well, that brings\nup actually two questions for me.\n\n312\n00:16:50.390 --> 00:16:54.580\nIs there a good reason to\nactually have separate\n\n313\n00:16:54.580 --> 00:16:58.210\nindividual native VLANs on each trunk?\n\n314\n00:16:58.210 --> 00:16:59.550\n>> Not really.\n\n315\n00:16:59.550 --> 00:17:03.570\n>> Okay.\n>> If you were super security paranoid and\n\n316\n00:17:03.570 --> 00:17:06.950\nyou wanted to set up separate honey pots\nto be able to isolate this traffic really,\n\n317\n00:17:06.950 --> 00:17:08.660\nreally fast, maybe.\n\n318\n00:17:08.660 --> 00:17:11.910\nBut normally one big dead vlan\nis good enough for everybody.\n\n319\n00:17:11.910 --> 00:17:17.160\nIf you keep it limited to a link, so if\nevery link has its own separate fake vlan,\n\n320\n00:17:17.160 --> 00:17:22.400\nyou wouldn't have to worry about that\nattack traffic wasting bandwidth passing\n\n321\n00:17:22.400 --> 00:17:26.000\nbetween multiple switches it would just\nbe tied to that one link and that's it.\n\n322\n00:17:26.000 --> 00:17:28.820\nMaybe you can make an excuse there,\nbut these types of attacks,\n\n323\n00:17:28.820 --> 00:17:33.090\nbecause they're usually UDP and because\nthey're usually very small amounts of data\n\n324\n00:17:33.090 --> 00:17:35.080\nit's not a performance concern,\nit's just security.\n\n325\n00:17:35.080 --> 00:17:38.780\nSo having one dead VLAN is usually\nenough for us on that one.\n\n326\n00:17:38.780 --> 00:17:43.051\n>> So my second question Don, is that you\nsaid that normally for us by default,\n\n327\n00:17:43.051 --> 00:17:45.720\nVLAN one is our native\nVLAN on the switches, but\n\n328\n00:17:45.720 --> 00:17:49.860\nit also holds our management traffic\nDo I have to worry about anything with\n\n329\n00:17:49.860 --> 00:17:52.709\nthe management traffic if\nI switch native VLANs?\n\n330\n00:17:52.709 --> 00:17:56.510\n>> No, management traffic's still on VLAN\n1, right where we expect it to be, so\n\n331\n00:17:56.510 --> 00:17:59.580\nit's still behaving the way\nthat it normally behaves.\n\n332\n00:17:59.580 --> 00:18:02.890\nIt's just on the trunk, it's gonna get\ntagged, well it doesn't even notice that.\n\n333\n00:18:02.890 --> 00:18:06.300\nSo your layer two switches, your layer\nthree switches, they're all gonna be fine.\n\n334\n00:18:06.300 --> 00:18:09.060\nThey can continue running on\nlayer one just like normal.\n\n335\n00:18:09.060 --> 00:18:10.550\n>> They just get tied on the trunks.\n\n336\n00:18:10.550 --> 00:18:12.310\nSo really no difference there.\n\n337\n00:18:12.310 --> 00:18:14.590\n>> All right, Don.\nSo with that and\n\n338\n00:18:14.590 --> 00:18:18.530\nthe layer two threat-mitigation techniques\nthat we've been talking about, we've now\n\n339\n00:18:18.530 --> 00:18:23.560\nfigured out that we can help ourselves\nout by using IP DHCP snooping and\n\n340\n00:18:23.560 --> 00:18:27.370\nnow the idea of actually controlling the\nnative VLAN be on a port of where we are,\n\n341\n00:18:27.370 --> 00:18:29.540\nwhat's really left for\nus to think about here?\n\n342\n00:18:29.540 --> 00:18:30.700\n>> All right.\nLet's go hardcore.\n\n343\n00:18:30.700 --> 00:18:35.580\nSo one of the best ways to\navoid attacks on Layer 2 is to\n\n344\n00:18:35.580 --> 00:18:38.620\nstop bad people from plugging\nin to your network, right?\n\n345\n00:18:38.620 --> 00:18:41.690\nIf a bad guy can physically\nplug in to your network,\n\n346\n00:18:41.690 --> 00:18:43.120\nthat's where all these attacks come from.\n\n347\n00:18:43.120 --> 00:18:48.750\nDHCP starvation, rogue DHCP servers,\neven the VLAN tag hopping, right?\n\n348\n00:18:48.750 --> 00:18:51.900\nThat requires them to be\nplugged in to your network.\n\n349\n00:18:51.900 --> 00:18:52.710\nWhat if we just stop\n\n350\n00:18:52.710 --> 00:18:55.210\nthem from being plugged in in\na network in the first place?\n\n351\n00:18:55.210 --> 00:18:57.160\nThat would eliminate a lot of these.\n\n352\n00:18:57.160 --> 00:19:00.400\nAnd theres two great ways to do\nit an easy way and a hard way.\n\n353\n00:19:00.400 --> 00:19:04.580\nThe easy way, any time you have\nunused ports in your network,\n\n354\n00:19:04.580 --> 00:19:06.210\nyou should shut them down, right?\n\n355\n00:19:06.210 --> 00:19:09.425\nSo if theres somebody whose\noffice has two network jacks.\n\n356\n00:19:09.425 --> 00:19:11.980\nThis happens all the time, you put two\nnetwork jacks in case they wanna move\n\n357\n00:19:11.980 --> 00:19:14.040\ntheir desk from one side\nof the office to the other.\n\n358\n00:19:14.040 --> 00:19:18.540\nWell, if they're using one port, and\nnot using the other, shut it down.\n\n359\n00:19:18.540 --> 00:19:19.100\nShut that port and\n\n360\n00:19:19.100 --> 00:19:23.820\ndon't have empty ports that are out\nthere that people can plug into, right.\n\n361\n00:19:23.820 --> 00:19:27.370\nBut, that still doesn't stop an attacker\nfrom unplugging somebody's existing\n\n362\n00:19:27.370 --> 00:19:28.680\ncomputer and plugging their own in, right?\n\n363\n00:19:28.680 --> 00:19:30.370\nWe can't shut that down.\n\n364\n00:19:30.370 --> 00:19:33.090\nWell, in the CCENT, we saw port security,\n\n365\n00:19:33.090 --> 00:19:36.470\nyou can restrict MAC,\nyou can still spoof a MAC address.\n\n366\n00:19:36.470 --> 00:19:38.810\nSo that leads us to the hardcore way.\n\n367\n00:19:38.810 --> 00:19:43.730\nIf you really want to guarantee\nsecurity of your network,\n\n368\n00:19:43.730 --> 00:19:46.796\nyou can implement 802.1x authentication.\n\n369\n00:19:46.796 --> 00:19:53.800\nRight, 802.1x authentication is\nauthentication at a very, very low level.\n\n370\n00:19:53.800 --> 00:19:58.280\nBasically the way 802.1x works is\nwhen somebody plugs in a laptop or\n\n371\n00:19:58.280 --> 00:20:04.170\nthey plug in a desktop, the very\nfirst thing that happens before they\n\n372\n00:20:04.170 --> 00:20:07.880\nallowed to talk in the network is that\nthey have to provide security credentials.\n\n373\n00:20:07.880 --> 00:20:10.820\nAnd it's normally done in\nthe form of a certificate,\n\n374\n00:20:10.820 --> 00:20:13.720\nan X509 authentication certificate.\n\n375\n00:20:13.720 --> 00:20:19.560\nAnd so if I plug a laptop in and I present\nthe switch with a valid certificate then\n\n376\n00:20:19.560 --> 00:20:21.960\nthe switch will say okay you're\nallowed to talk on the network.\n\n377\n00:20:21.960 --> 00:20:24.232\nAnd then I can do my DHCP request and\nall other stuff.\n\n378\n00:20:24.232 --> 00:20:27.860\nI mean this happens before DACP,\nit's very, very low level.\n\n379\n00:20:27.860 --> 00:20:32.490\nIf I plug in and I don't have a valid\ncertificate, it doesn't matter what mac\n\n380\n00:20:32.490 --> 00:20:35.890\naddress I've spoofed or IP, it doesn't\nmatter what port I'm plugged into,\n\n381\n00:20:35.890 --> 00:20:40.050\nif I don't have a valid certificate I'm\nnot allowed to talk on the network.\n\n382\n00:20:40.050 --> 00:20:43.400\nNow this is the best method\n\n383\n00:20:43.400 --> 00:20:46.400\nto control physical devices\nbeing plugged into your network,\n\n384\n00:20:46.400 --> 00:20:50.060\non a positive side no unauthorized\nmachines can get on your network.\n\n385\n00:20:50.060 --> 00:20:53.780\nOn a negative side,\nit's an administrative headache, right.\n\n386\n00:20:53.780 --> 00:20:58.350\nBecause every new phone,\nevery new tablet, every new laptop,\n\n387\n00:20:58.350 --> 00:21:03.220\nevery new printer, you've gotta get\nthat device, generate a certificate,\n\n388\n00:21:03.220 --> 00:21:07.760\ninstall the certificate on that system,\nhave a certificate server and\n\n389\n00:21:07.760 --> 00:21:11.480\nan authentication system in place ready\nto check and validate those certificates.\n\n390\n00:21:11.480 --> 00:21:14.550\nAnd get all that in place\nbefore that machine can work.\n\n391\n00:21:14.550 --> 00:21:15.980\nIt's a lot of infrastructure.\n\n392\n00:21:15.980 --> 00:21:18.810\nSo, if you're a small or medium business\nthat's probably too much for you.\n\n393\n00:21:18.810 --> 00:21:21.300\nIt's just too much to support.\n\n394\n00:21:21.300 --> 00:21:23.970\nBut if you're an enterprise,\nif you're a university and\n\n395\n00:21:23.970 --> 00:21:27.510\nyou have thousands, tens of thousands\nof ports that are all over the place,\n\n396\n00:21:27.510 --> 00:21:30.000\nyou can't realistically control those.\n\n397\n00:21:30.000 --> 00:21:32.430\nAn infrastructure like this is necessar,\nright.\n\n398\n00:21:32.430 --> 00:21:37.770\nOn the exam, they want you to be\nfamiliar with what 802.1x is, right.\n\n399\n00:21:37.770 --> 00:21:40.830\nAnd what it is, is a standard\nmethod of authenticating clients\n\n400\n00:21:40.830 --> 00:21:41.520\nbased on a certificate.\n\n401\n00:21:41.520 --> 00:21:42.670\nThat's what it is.\n\n402\n00:21:42.670 --> 00:21:46.220\nSo that any machine that plugs in\nhas to present that certificate.\n\n403\n00:21:46.220 --> 00:21:50.170\nAnd the switch doesn't\nunderstand those certificates.\n\n404\n00:21:50.170 --> 00:21:53.680\nWhat your switch is going to do is\nit's gonna receive the certificate and\n\n405\n00:21:53.680 --> 00:21:56.620\nit's gonna turn around and\ntalk to a server somewhere and say hey,\n\n406\n00:21:56.620 --> 00:21:58.990\ncould you look at this certificate for\nme, cuz I don't know what it is?\n\n407\n00:21:58.990 --> 00:22:01.190\nAnd can you tell me if it's all right?\n\n408\n00:22:01.190 --> 00:22:03.980\nAnd that server will look at\nthe certificate and will say,\n\n409\n00:22:03.980 --> 00:22:06.350\nlike it's not really certificate,\nthat's one a key.\n\n410\n00:22:06.350 --> 00:22:09.800\nBut it will look at that key and it will\nsay, yeah that's good let them in or\n\n411\n00:22:09.800 --> 00:22:12.270\nto look and say, no I don't know that one.\n\n412\n00:22:12.270 --> 00:22:14.900\nThat wasn't good, that one's revoked,\nthat's a bad one,\n\n413\n00:22:14.900 --> 00:22:16.250\ndon't let that person on.\n\n414\n00:22:16.250 --> 00:22:18.600\nAnd so the switch will then take\nthe action the server tells it.\n\n415\n00:22:18.600 --> 00:22:20.800\nSo all the switch is, is a middle man.\n\n416\n00:22:20.800 --> 00:22:23.570\nIt's receiving the key and\n\n417\n00:22:23.570 --> 00:22:26.720\nthen taking whatever action the server\ntells it to take based on that key.\n\n418\n00:22:26.720 --> 00:22:28.580\nThat's all the switch does.\n\n419\n00:22:28.580 --> 00:22:30.760\nSo I'm gonna go a little bit\nbeyond what's on the exam, and\n\n420\n00:22:30.760 --> 00:22:33.620\njust kinda show you the commands on\nhow you enable this on the switch.\n\n421\n00:22:33.620 --> 00:22:36.660\nBut know that it's not the switch\nthat's actually doing the work,\n\n422\n00:22:36.660 --> 00:22:38.220\nit's somebody else, okay.\n\n423\n00:22:38.220 --> 00:22:40.190\nSo if I wanna get that set up,\n\n424\n00:22:40.190 --> 00:22:43.510\nthis is not something we normally\nconfigure on our core switches.\n\n425\n00:22:43.510 --> 00:22:44.885\nSo I'm on an access switch here.\n\n426\n00:22:44.885 --> 00:22:47.660\nThese are the switch where people\nplug their laptops into or\n\n427\n00:22:47.660 --> 00:22:50.090\nyour wireless access points and\nthings like that.\n\n428\n00:22:50.090 --> 00:22:53.930\nOur servers, we know those we physically\ncontrol those ports, we don't normally\n\n429\n00:22:53.930 --> 00:22:57.300\nworry about it there, so on an access\nswitch is where we really use this.\n\n430\n00:22:57.300 --> 00:23:02.090\nSo the first thing I need to do is\nI need to get .1x turned on and\n\n431\n00:23:02.090 --> 00:23:06.390\nthe .1x authentication is part of triple\nA's new model kind of like usernames and\n\n432\n00:23:06.390 --> 00:23:07.130\npasswords.\n\n433\n00:23:07.130 --> 00:23:09.794\nSo I've got to get myself into\nthe new model of authentication and\n\n434\n00:23:09.794 --> 00:23:11.546\nthen from there I'll be able to enable it.\n\n435\n00:23:11.546 --> 00:23:16.288\nSo I'm gonna start by\nsaying triple A new-model.\n\n436\n00:23:16.288 --> 00:23:16.873\nOkay.\n\n437\n00:23:16.873 --> 00:23:19.900\nSo that's gonna get us where we can\nsupport things beyond just a password.\n\n438\n00:23:19.900 --> 00:23:21.500\nThe old model is just a password.\n\n439\n00:23:21.500 --> 00:23:25.120\nThe new model, usernames,\npasswords, and certificates.\n\n440\n00:23:25.120 --> 00:23:27.070\nWe have a lot of different options there.\n\n441\n00:23:27.070 --> 00:23:28.010\nAll right.\n\n442\n00:23:28.010 --> 00:23:36.010\nThen, I'm gonna say dot1x\nsystem-auth-control, all right.\n\n443\n00:23:36.010 --> 00:23:40.390\nThat's gonna tell this switch that\nwe are going to be doing 802.1 X\n\n444\n00:23:40.390 --> 00:23:41.520\nauthentication, right.\n\n445\n00:23:41.520 --> 00:23:44.250\nThat's what we're gonna be doing on this\nswitch to make sure that anybody who\n\n446\n00:23:44.250 --> 00:23:48.090\nplugs in is a legitimate client\nthat's supposed to be there.\n\n447\n00:23:48.090 --> 00:23:48.810\nAll right.\n\n448\n00:23:48.810 --> 00:23:53.664\nNow, the switch at this point is\nready to receive certificates, but\n\n449\n00:23:53.664 --> 00:23:56.018\nit can't do anything with them.\n\n450\n00:23:56.018 --> 00:23:59.040\nSo we need to tell it\na server to reach out to.\n\n451\n00:23:59.040 --> 00:24:02.595\nSo I'm gonna add a RADIUS server and\ntell it to use the RADIUS server.\n\n452\n00:24:02.595 --> 00:24:06.261\nNow radius is an authentication\nservice supports darn near anything.\n\n453\n00:24:06.261 --> 00:24:08.610\nIt can authenticate against\nWindows Active Directory.\n\n454\n00:24:08.610 --> 00:24:12.230\nIt can authenticate against open L DAP\nopen directory, all sorts of different\n\n455\n00:24:12.230 --> 00:24:15.510\ndirectories that are out there, or\nit can just run its own authentication.\n\n456\n00:24:15.510 --> 00:24:18.980\nCisco sells a couple of products where\nthey run their own radius server, so\n\n457\n00:24:18.980 --> 00:24:20.830\nwe're not going to dive\ninto that too much.\n\n458\n00:24:20.830 --> 00:24:24.850\nIf you go on to do the CCNA Security show,\nyou'll get to see a radius server there.\n\n459\n00:24:24.850 --> 00:24:28.730\nBut, basically,\nI need to point us to a radio server.\n\n460\n00:24:28.730 --> 00:24:30.490\nSo I'm gonna define a radio server here.\n\n461\n00:24:30.490 --> 00:24:34.810\nAnd I'll just call it,\nI don't know, server01, right,\n\n462\n00:24:34.810 --> 00:24:36.690\nor whatever name that server has.\n\n463\n00:24:36.690 --> 00:24:40.520\nAnd I need to tell it how to get there,\nso I'm gonna say, address ipv4,\n\n464\n00:24:40.520 --> 00:24:43.750\nand then the IP address of that server.\n\n465\n00:24:43.750 --> 00:24:46.090\nMaybe it's 192.168.0.200, like that.\n\n466\n00:24:46.090 --> 00:24:46.830\nAll right.\n\n467\n00:24:46.830 --> 00:24:49.990\nNow, if my server is set up for\nthe defaults, I can stop there.\n\n468\n00:24:49.990 --> 00:24:53.620\nBut radius actually has two\ndifferent port numbers it uses.\n\n469\n00:24:53.620 --> 00:24:55.900\nSee how the default here is port 1645?\n\n470\n00:24:55.900 --> 00:25:01.490\nThat's the old default that radius\nused to use back in the day.\n\n471\n00:25:01.490 --> 00:25:04.850\nNot that long ago, but anyhow,\nthat's the older number.\n\n472\n00:25:04.850 --> 00:25:05.970\nThe new number is 1812.\n\n473\n00:25:05.970 --> 00:25:08.230\nSo your server could use the old numbers,\n\n474\n00:25:08.230 --> 00:25:09.860\nin which case you can\njust press enter here.\n\n475\n00:25:09.860 --> 00:25:14.943\nBut if you use the new number, you'll need\nto do an auth-port 1812 and just kinda\n\n476\n00:25:14.943 --> 00:25:20.250\nadd that extra little bit there so that it\nknows you're running on the port, right?\n\n477\n00:25:20.250 --> 00:25:23.793\nNow anytime you talk to a server like\nthis, you do need a pre-shared key.\n\n478\n00:25:23.793 --> 00:25:26.795\nSo I'm gonna punch in a key and\nthis will be defined on the server.\n\n479\n00:25:26.795 --> 00:25:29.869\nNobody's allowed to talk to the\nauthentication server without a key and so\n\n480\n00:25:29.869 --> 00:25:31.887\nI'm just gonna give it\na fake key here all right.\n\n481\n00:25:31.887 --> 00:25:35.665\nAnd then from there, I'm pretty much done.\n\n482\n00:25:35.665 --> 00:25:38.465\nSo I've defined the server\nthat I'm gonna hand off to.\n\n483\n00:25:38.465 --> 00:25:40.745\nI just need to tell it to do the hand off.\n\n484\n00:25:40.745 --> 00:25:42.385\nAnd this command is kind of a long one.\n\n485\n00:25:42.385 --> 00:25:49.790\nIt's triple a #aaa authentication dot1x.\n\n486\n00:25:49.790 --> 00:25:53.190\nSo I'm telling it how to\nauthenticate dot1x clients and\n\n487\n00:25:53.190 --> 00:25:58.990\nI'm gonna tell you the default group of\nservers to use is gonna be called radius.\n\n488\n00:25:58.990 --> 00:26:02.880\nIn other words, look at whatever\nradius servers I have and go to them.\n\n489\n00:26:02.880 --> 00:26:04.250\nWell, I've only got one radius server.\n\n490\n00:26:04.250 --> 00:26:05.440\nI could have defined more than one.\n\n491\n00:26:05.440 --> 00:26:07.390\nServer two, server three and so on.\n\n492\n00:26:07.390 --> 00:26:13.430\nBut now when a dot1x client connects and\nthey go to hand me a certificate,\n\n493\n00:26:13.430 --> 00:26:19.380\nI'll accept it because I issued the issue\nthe dot1x system-auth-control command.\n\n494\n00:26:19.380 --> 00:26:20.620\nAnd once I accept it,\n\n495\n00:26:20.620 --> 00:26:24.830\nI'm gonna hand it off to any radius\nserver that I've got defined.\n\n496\n00:26:24.830 --> 00:26:26.980\nAnd I defined that radius\nserver right here.\n\n497\n00:26:26.980 --> 00:26:30.330\nSo now I've got that all set up where\nI know who I want to hand off to and\n\n498\n00:26:30.330 --> 00:26:31.590\nI'm ready to do that.\n\n499\n00:26:32.710 --> 00:26:36.240\nThe last thing I need to do\nis turn it on for my ports.\n\n500\n00:26:36.240 --> 00:26:39.640\nBecause I don't want it on, on my trunks.\n\n501\n00:26:39.640 --> 00:26:43.150\nSo I need to go and\nturn it on just on my access ports.\n\n502\n00:26:43.150 --> 00:26:46.530\nSo, if this is a 24-port switch,\n\n503\n00:26:46.530 --> 00:26:49.390\nand ports, I don't know,\ndo I even have any trunks?\n\n504\n00:26:49.390 --> 00:26:50.524\nLet's see if I have any trunks.\n\n505\n00:26:50.524 --> 00:26:54.560\nWell, I'll just do,\nthat's not what I wanna do.\n\n506\n00:26:54.560 --> 00:26:58.616\nI don't have any trunks but\nI'll just do port one to ten.\n\n507\n00:26:58.616 --> 00:27:01.332\nSo I want ports one through ten and\ndo 802.1X.\n\n508\n00:27:01.332 --> 00:27:04.110\nSo I'll do an interface range, fa0/1- 10.\n\n509\n00:27:04.110 --> 00:27:08.020\nAlright so\nI'm gonna take ports one through ten.\n\n510\n00:27:08.020 --> 00:27:10.238\nYou would do all your\naccess ports basically.\n\n511\n00:27:10.238 --> 00:27:15.520\nAnd from here, I'm gonna tell it to\nactively request the certificates, right?\n\n512\n00:27:15.520 --> 00:27:18.160\nIf somebody doesn't give me a certificate,\ndon't let them talk, right?\n\n513\n00:27:18.160 --> 00:27:20.660\nBlock them on this port until\nthey give me a certificate.\n\n514\n00:27:20.660 --> 00:27:24.590\nSo the way we do that is by saying,\nwell switchport mode access.\n\n515\n00:27:24.590 --> 00:27:26.760\nIt needs to be an access port,\nnot a trunk, right?\n\n516\n00:27:26.760 --> 00:27:29.260\nSo I'm just gonna hard\nset it as an access port.\n\n517\n00:27:29.260 --> 00:27:34.710\nAnd then I'm gonna say dot1x\npae authenticator, all right?\n\n518\n00:27:34.710 --> 00:27:38.140\nThis is telling it to turn on\nauthentication on this port\n\n519\n00:27:38.140 --> 00:27:41.020\nthat I'm gonna require\nthat authentication.\n\n520\n00:27:41.020 --> 00:27:46.260\nAnd then I'll just say\ndotx1 port-control auto.\n\n521\n00:27:47.330 --> 00:27:50.320\nAuto is going to tell it to automatically\nhandle transitioning the port from\n\n522\n00:27:50.320 --> 00:27:51.800\nactive to down.\n\n523\n00:27:51.800 --> 00:27:55.580\nIf I get a certificate, I'll let people\ntalk if the server says its okay.\n\n524\n00:27:55.580 --> 00:27:56.770\nIf I don't get a certificate,\n\n525\n00:27:56.770 --> 00:28:00.890\nI'm gonna shut the port down unless\nthe server tells me otherwise, right?\n\n526\n00:28:00.890 --> 00:28:03.530\nAnd if I get a certificate and\nit's bad, I'm gonna shut it down.\n\n527\n00:28:03.530 --> 00:28:05.700\nAnd I immediately get\na message that pops up here,\n\n528\n00:28:05.700 --> 00:28:10.620\ntelling me that it's starting dot1x, for\nthat interface, on the interface Fa0/1.\n\n529\n00:28:10.620 --> 00:28:13.360\nAnd so it's got that up and\ngoing cuz the interface is up.\n\n530\n00:28:13.360 --> 00:28:16.439\nI turned it on for one through ten, but\ntwo through ten are empty right now and\n\n531\n00:28:16.439 --> 00:28:17.770\nnobody is plugged in.\n\n532\n00:28:17.770 --> 00:28:21.140\nSo this one's been turned on and\nit's up and it's going.\n\n533\n00:28:21.140 --> 00:28:24.070\nRight now, I don't know if\nthat client has a certificate.\n\n534\n00:28:24.070 --> 00:28:26.610\nEven it does,\nthe server I'd put in was fake.\n\n535\n00:28:26.610 --> 00:28:29.310\nSo [LAUGH] I don't have\na server that talk to, so\n\n536\n00:28:29.310 --> 00:28:30.872\nthat client is not gonna be happy, right?\n\n537\n00:28:30.872 --> 00:28:33.580\nA port's gonna get shut down\nunless they authenticate.\n\n538\n00:28:33.580 --> 00:28:38.750\nAnd we can see whether or\nnot that's working by doing a show dot1x.\n\n539\n00:28:38.750 --> 00:28:42.118\nIf it show dot1x, it'll just\ntell you whether running or not.\n\n540\n00:28:42.118 --> 00:28:43.346\nSo, I can see it is running.\n\n541\n00:28:43.346 --> 00:28:48.276\nBut if I do a show dot1x\ninterface Fa0/1 then it'll\n\n542\n00:28:48.276 --> 00:28:51.610\ntell me how that port is configured.\n\n543\n00:28:51.610 --> 00:28:53.370\nLet's see, it says PAE Authenticator.\n\n544\n00:28:53.370 --> 00:28:55.760\nI am expecting authentication\non this port and\n\n545\n00:28:55.760 --> 00:29:00.300\nif I add detail to the end,\nhere's my client list.\n\n546\n00:29:00.300 --> 00:29:03.790\nAnd I can see a client connected\nwith EAP Method 0 which means\n\n547\n00:29:03.790 --> 00:29:05.840\nthey ain't give me a certificate, right?\n\n548\n00:29:05.840 --> 00:29:07.340\nThey didn't give me a certificate and\n\n549\n00:29:07.340 --> 00:29:11.870\nso I've sent a request to the server\nI'm trying to authenticate, but\n\n550\n00:29:11.870 --> 00:29:13.860\nthe server I put in is fake so\nI'm not getting a response.\n\n551\n00:29:13.860 --> 00:29:17.180\nAnd so this port is currently being\nheld down, it's being blocked, right?\n\n552\n00:29:17.180 --> 00:29:21.060\nAnd it's gonna stay blocked until\na server tells me to unblock it, right?\n\n553\n00:29:21.060 --> 00:29:23.400\nSo it's in place and\nit's doing it's job, and\n\n554\n00:29:23.400 --> 00:29:27.230\nhere see how it's got exhausted\nall authentication methods.\n\n555\n00:29:27.230 --> 00:29:31.230\nIt couldn't contact the server and\nso finally, authorization failed for\n\n556\n00:29:31.230 --> 00:29:32.650\nunapplied client.\n\n557\n00:29:32.650 --> 00:29:35.690\nAnd now that port is being held down,\nright?\n\n558\n00:29:35.690 --> 00:29:37.610\nSo that client is not allowed to talk and\n\n559\n00:29:37.610 --> 00:29:41.690\nsee how my authenticator client list is\nnow empty cuz I've shut them down, right?\n\n560\n00:29:41.690 --> 00:29:43.590\nThey're being blocked and held out.\n\n561\n00:29:43.590 --> 00:29:48.196\nSo, dot1x will absolutely stop\nan attacker from getting in.\n\n562\n00:29:48.196 --> 00:29:51.795\nThey would have to compromise one of your\ncertificates to be able to get in and\n\n563\n00:29:51.795 --> 00:29:54.224\nthat's really,\nreally difficult to do, right?\n\n564\n00:29:54.224 --> 00:29:57.261\nThere are ways that it can happen when\nthey have physical access to a machine,\n\n565\n00:29:57.261 --> 00:29:59.030\nbut it is a difficult thing to do.\n\n566\n00:29:59.030 --> 00:30:02.070\nThis gives us a great level\nof protection on our network.\n\n567\n00:30:02.070 --> 00:30:05.170\nAnd if a laptop ever gets stolen or\nif a phone gets lost or\n\n568\n00:30:05.170 --> 00:30:09.190\nwhatever, I can just go to the certificate\nserver and I can revoke that certificate.\n\n569\n00:30:09.190 --> 00:30:11.460\nAnd so now if somebody brings\nthat phone or tablet or\n\n570\n00:30:11.460 --> 00:30:13.318\nwhatever back into the building,\nit won't be able to talk.\n\n571\n00:30:13.318 --> 00:30:16.040\nSo I don't' have to worry about\nan attacker stealing a device and\n\n572\n00:30:16.040 --> 00:30:18.140\nusing it cuz they're not\ngonna be authorized.\n\n573\n00:30:18.140 --> 00:30:20.210\nThat one is actually\na really powerful stuff.\n\n574\n00:30:20.210 --> 00:30:22.790\nIt's just requires a lot\nof infrastructure, right?\n\n575\n00:30:22.790 --> 00:30:24.260\nI showed the switch side it wasn't so bad.\n\n576\n00:30:24.260 --> 00:30:26.530\nIt was a,\nwhat six commands on the switch side.\n\n577\n00:30:26.530 --> 00:30:28.900\nNot so bad, but\nyou have that radio service setup,\n\n578\n00:30:28.900 --> 00:30:32.715\nyou have to issue certificates, you\ngotta get them installed to the clients.\n\n579\n00:30:32.715 --> 00:30:33.345\nIt's a lot of work.\n\n580\n00:30:33.345 --> 00:30:36.055\nThere's a lot that happens\noutside of the switch.\n\n581\n00:30:36.055 --> 00:30:38.985\nNow on the exam, I doubt they'll\nask you about a single command.\n\n582\n00:30:38.985 --> 00:30:42.190\nThey really want you be familiar with the\nconcept of 802.1x, but I wanted to show\n\n583\n00:30:42.190 --> 00:30:44.745\nyou guys how that works and\nshow you what it looks like, the switch.\n\n584\n00:30:44.745 --> 00:30:47.650\nIt's pretty straight-forward.\n\n585\n00:30:47.650 --> 00:30:52.270\n>> Alright Don, thank you again for\nshowing us these layer two different types\n\n586\n00:30:52.270 --> 00:30:56.930\nof threats that we actually can see, as\nwell as the mitigation techniques to them.\n\n587\n00:30:56.930 --> 00:30:59.170\nRemember that what we look at here,\nof course,\n\n588\n00:30:59.170 --> 00:31:03.040\nis changing the native VLAN\nto another number, as well.\n\n589\n00:31:03.040 --> 00:31:04.305\nAnd then also, of course,\n\n590\n00:31:04.305 --> 00:31:07.590\nwe want to prevent somebody from\ngetting physical access in.\n\n591\n00:31:07.590 --> 00:31:09.970\nDon also showed us one of the best\nprotections that we can use,\n\n592\n00:31:09.970 --> 00:31:15.230\nwhich is an 802.1X authentication\nthat will also help us out, as well.\n\n593\n00:31:15.230 --> 00:31:18.480\nSo when you take a look at these, make\nsure you take a look at the show commands.\n\n594\n00:31:18.480 --> 00:31:21.270\nVery important on the exam,\nI guarantee it, so\n\n595\n00:31:21.270 --> 00:31:23.310\nmake sure you run through\nthe one's that we see here.\n\n596\n00:31:23.310 --> 00:31:26.990\nDon't spend so much time on the 802.1x but\nunderstand the concepts there.\n\n597\n00:31:26.990 --> 00:31:28.780\nWell, great place for\nus to end this episode then.\n\n598\n00:31:28.780 --> 00:31:32.210\nSigning off for ITPro TV,\nI've been your host Ronnie Wong.\n\n599\n00:31:32.210 --> 00:31:33.110\n>> And I'm Don Pezet.\n\n600\n00:31:33.110 --> 00:31:36.247\n>> Stay tuned right here for\nmore CCNA routing and switching.\n\n601\n00:31:36.247 --> 00:31:42.368\n[MUSIC]\n\n",
          "vimeoId": "178605270"
        },
        {
          "description": "In this episode, Ronnie and Don describe the use of port aggregation for increasing bandwidth between switches and providing fault tolerance against port failures.  According to the guys, we have 3 options:  if we want to statically configure it   using static Etherchannel or dynamically configure it—there are two options for dynamic configurations: LACP and PAgP.  They emphasize the configuration commands associated with each option and the show commands too.",
          "length": "2393",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/cisco-ccna200105/cisco-ccna-200105-1-6-port_aggregation-080816-1.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/cisco-ccna200105/cisco-ccna-200105-1-6-port_aggregation-080816-1-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/cisco-ccna200105/cisco-ccna-200105-1-6-port_aggregation-080816-1-sm.jpg",
          "title": "Port Aggregation",
          "transcript": "WEBVTT\n\n1\n00:00:00.003 --> 00:00:10.003\n[MUSIC]\n\n2\n00:00:12.041 --> 00:00:14.374\nWelcome back to another great\nepisode right here on ITProTV.\n\n3\n00:00:14.374 --> 00:00:16.010\nI'm your host Ronnie Wong.\n\n4\n00:00:16.010 --> 00:00:20.250\nAnd today you're watching the Cisco CCNA\nrouting and switching show.\n\n5\n00:00:20.250 --> 00:00:23.000\nWhere we are continuing\non with our progress here\n\n6\n00:00:23.000 --> 00:00:26.750\nthrough some of the switching concepts and\nnow we're actually at port aggregation.\n\n7\n00:00:26.750 --> 00:00:29.200\nAnd who better to help us\nunderstand that than Mr. Don Pezet.\n\n8\n00:00:29.200 --> 00:00:33.690\nSo, Don, what in the world are we talking\nabout at this point, port aggregation?\n\n9\n00:00:33.690 --> 00:00:38.025\n>> All right, so port aggregation in a\nnutshell, is where you take more than one\n\n10\n00:00:38.025 --> 00:00:41.240\nport and bond it together to\ncreate one big virtual port.\n\n11\n00:00:41.240 --> 00:00:44.539\nAnd there's a number of reasons\nwhy we may might wanna do this.\n\n12\n00:00:44.539 --> 00:00:46.980\nThe biggest reason is bandwidth, right?\n\n13\n00:00:46.980 --> 00:00:50.814\nIf I have two 100 megabit ports\nI can bond them together and\n\n14\n00:00:50.814 --> 00:00:53.154\nnow I've got a 200 megabit port.\n\n15\n00:00:53.154 --> 00:00:55.631\nOr if I have two gigabit ports\nI can bond them together and\n\n16\n00:00:55.631 --> 00:00:56.749\nI can have a two gigabit.\n\n17\n00:00:56.749 --> 00:01:01.161\nIf I have two 10 gig or even 40 gig ports,\nI can combine them and get 80 gigs, right?\n\n18\n00:01:01.161 --> 00:01:07.420\nSo if you want bigger bandwidth than what\nthe ports allow for, you can combine them.\n\n19\n00:01:07.420 --> 00:01:09.500\nBundle them together, right?\n\n20\n00:01:09.500 --> 00:01:11.080\nThere is another advantage.\n\n21\n00:01:11.080 --> 00:01:12.674\nWhat if I want redundancy?\n\n22\n00:01:12.674 --> 00:01:15.703\nIf one link fails,\nI need another link to take over for it.\n\n23\n00:01:15.703 --> 00:01:18.534\nNow we talked about this\nidea in another episode.\n\n24\n00:01:18.534 --> 00:01:20.782\nAnd let me show you the diagram\nthat I brought up in that episode.\n\n25\n00:01:20.782 --> 00:01:22.252\nI showed a diagram like this.\n\n26\n00:01:22.252 --> 00:01:26.103\nAnd we were talking about\nSpanning Tree Protocol, and\n\n27\n00:01:26.103 --> 00:01:31.640\nhow I might want to have redundant\nuplinks between switches, just like this.\n\n28\n00:01:31.640 --> 00:01:34.534\nWhere if one failed\nthe other would take over.\n\n29\n00:01:34.534 --> 00:01:39.230\nAnd we saw where regular Spanning Tree,\nCommon Spanning Tree 802.1d,\n\n30\n00:01:39.230 --> 00:01:43.610\nthat 802.1d would block one of these and\nallow the other.\n\n31\n00:01:43.610 --> 00:01:46.970\nAnd when one failed, within 30 seconds,\nthe other would come up.\n\n32\n00:01:46.970 --> 00:01:51.450\nAnd I said 30 seconds, that's a long,\nlong time, we don't want that to happen.\n\n33\n00:01:51.450 --> 00:01:55.150\nSo we saw Rapid Spanning Tree Protocol,\nwhere if one failed,\n\n34\n00:01:55.150 --> 00:01:57.230\nthe other would take over immediately.\n\n35\n00:01:57.230 --> 00:01:58.650\nAll right, that's better.\n\n36\n00:01:58.650 --> 00:01:59.340\nI like that better.\n\n37\n00:01:59.340 --> 00:02:00.599\nIf one fails,\nthe other one takes over immediately.\n\n38\n00:02:00.599 --> 00:02:02.333\nThat's great, right?\n\n39\n00:02:02.333 --> 00:02:05.730\nBut there's some problems with this,\nright?\n\n40\n00:02:05.730 --> 00:02:11.680\nThe primary problem is you're only\ntaking advantage of one line, right?\n\n41\n00:02:11.680 --> 00:02:13.310\nOne is being blocked, and\nwe're using the other.\n\n42\n00:02:13.310 --> 00:02:17.006\nSo, while we do get redundancy and\nimmediate failover,\n\n43\n00:02:17.006 --> 00:02:18.781\nwe don't get efficiency.\n\n44\n00:02:18.781 --> 00:02:21.020\nI don't get,\nlet's assume these are gig links, right?\n\n45\n00:02:21.020 --> 00:02:24.064\nI don't get two gigabits of traffic,\nI get one gig of traffic.\n\n46\n00:02:24.064 --> 00:02:27.450\nAlbeit, full duplex,\nbut I only get one gig.\n\n47\n00:02:27.450 --> 00:02:28.910\nI don't take advantage of the other line.\n\n48\n00:02:28.910 --> 00:02:32.280\nThe other line is completely\nidle while we wait, right?\n\n49\n00:02:32.280 --> 00:02:35.570\nThe other problem is\nour MAC address table.\n\n50\n00:02:36.950 --> 00:02:40.130\nWith Spanning Tree Protocol,\none end is gonna be shut down and\n\n51\n00:02:40.130 --> 00:02:42.340\nthe other end isn't, okay?\n\n52\n00:02:42.340 --> 00:02:47.740\nOn the end that's not shut down, it's\nnot receiving any traffic and so nothing\n\n53\n00:02:47.740 --> 00:02:51.500\nis making it into its MAC address table to\nlet it know to send traffic to that port.\n\n54\n00:02:51.500 --> 00:02:56.183\nSo the instant we fail over to that link,\nnow traffic starts coming across\n\n55\n00:02:56.183 --> 00:02:58.780\nthe line and that's where we're having\nto populate our MAC address table,\n\n56\n00:02:58.780 --> 00:03:01.048\nto know this new port to go to.\n\n57\n00:03:01.048 --> 00:03:04.030\nIn the meantime, we're having to\ndo port flooding, we're having\n\n58\n00:03:04.030 --> 00:03:08.200\nto flood our communications across every\nport to discover where those hosts are.\n\n59\n00:03:08.200 --> 00:03:11.350\nSo there's a brief period\nof a performance hit\n\n60\n00:03:11.350 --> 00:03:13.380\nwhen we fail over from\none link to another.\n\n61\n00:03:13.380 --> 00:03:16.686\nEven though we fail over immediately,\nthere is a brief period,\n\n62\n00:03:16.686 --> 00:03:18.410\na broadcast burst that happens.\n\n63\n00:03:18.410 --> 00:03:22.453\nIt lasts for up to a couple of minutes\nas we locate all these machines, and\n\n64\n00:03:22.453 --> 00:03:25.250\nrelearn and repopulate the table, right?\n\n65\n00:03:25.250 --> 00:03:26.760\nBecause you can't do listening and\n\n66\n00:03:26.760 --> 00:03:29.000\nlearning on a port when\nthe port's being blocked.\n\n67\n00:03:29.000 --> 00:03:30.970\nWe're not gonna listen and hear anything.\n\n68\n00:03:30.970 --> 00:03:34.410\nSo Rapid Spanning Tree Protocol\nmakes us failover fast, but\n\n69\n00:03:34.410 --> 00:03:35.630\nit doesn't solve that problem.\n\n70\n00:03:35.630 --> 00:03:39.750\nSo pros and cons with just using\nRapid Spanning Tree Protocol.\n\n71\n00:03:39.750 --> 00:03:44.540\nBut with port aggregation,\nI combine these ports together.\n\n72\n00:03:44.540 --> 00:03:47.640\nWhen I combine them together,\nnow it becomes one link.\n\n73\n00:03:47.640 --> 00:03:49.800\nIs it a loop if there's just one link?\n\n74\n00:03:49.800 --> 00:03:54.740\nNo, Spanning Tree Protocol sees\nit as one link, not as two, so\n\n75\n00:03:54.740 --> 00:03:56.850\nit leaves both lines up.\n\n76\n00:03:56.850 --> 00:04:00.600\nAnd since both lines are up,\nI can send traffic over both of them.\n\n77\n00:04:00.600 --> 00:04:05.050\nSo now I'm sending two gigabit\nof traffic over this link.\n\n78\n00:04:05.050 --> 00:04:09.070\nAnd on the other side, it has to be\nconfigured too so it sees it as one link.\n\n79\n00:04:09.070 --> 00:04:11.308\nBoth sides see it as one link.\n\n80\n00:04:11.308 --> 00:04:13.260\nAnd so in the MAC address table,\n\n81\n00:04:13.260 --> 00:04:17.450\nall the MAC addresses are mapped to this\nvirtual port, not to the physical ports.\n\n82\n00:04:17.450 --> 00:04:18.950\nSo if one link were to fail,\n\n83\n00:04:18.950 --> 00:04:22.500\nlet's say this link fails,\nthe other one's still there.\n\n84\n00:04:22.500 --> 00:04:24.500\nIt's still mapped to the virtual port.\n\n85\n00:04:24.500 --> 00:04:26.922\nThe MAC address tables\ndon't have to repopulate.\n\n86\n00:04:26.922 --> 00:04:30.820\nIn fact, everything communicates\njust like it was with no changes,\n\n87\n00:04:30.820 --> 00:04:32.710\nexcept I've got a little less bandwidth.\n\n88\n00:04:32.710 --> 00:04:34.650\nInstead of two gigs,\nnow I have one gig of bandwidth, but\n\n89\n00:04:34.650 --> 00:04:36.072\notherwise everything's running fine.\n\n90\n00:04:36.072 --> 00:04:40.390\nAnd the moment I restore that other line,\nI go back up to two gigs.\n\n91\n00:04:40.390 --> 00:04:44.610\nNo elections have to, well it might be\nan election if my bandwidth drops enough,\n\n92\n00:04:44.610 --> 00:04:46.880\nthere might be some better\npath than this one.\n\n93\n00:04:46.880 --> 00:04:50.930\nBut typically, there's no elections,\nthere's no MAC address table updates\n\n94\n00:04:50.930 --> 00:04:55.110\nthat need to occur, everything's\njust there, it populates up, right?\n\n95\n00:04:55.110 --> 00:04:59.550\nAnd I'm showing it here with two links,\nwith link aggregation on a Cisco switch,\n\n96\n00:04:59.550 --> 00:05:00.910\nyou can actually do up to eight.\n\n97\n00:05:00.910 --> 00:05:04.060\nI could bond eight links together, I could\nhave an eight gigabit connection here.\n\n98\n00:05:04.060 --> 00:05:06.132\nOr if they're 10 gigs,\nI could have 80 gigabit.\n\n99\n00:05:06.132 --> 00:05:11.085\nOr if they're 40 gigs, I could have 320\ngigs or whatever, eight times four.\n\n100\n00:05:11.085 --> 00:05:16.270\n[LAUGH] So I can have a really, really\nbig connection between these switches.\n\n101\n00:05:16.270 --> 00:05:19.030\nThe only thing I'm really limited\nby are my physical ports, right?\n\n102\n00:05:19.030 --> 00:05:23.600\nIf I have a 24-port switch and I eat up 8\nports for this link, that's starting to\n\n103\n00:05:23.600 --> 00:05:26.810\nreduce the amount of available ports that\nI've got, so I've gotta be careful there.\n\n104\n00:05:26.810 --> 00:05:29.880\nBut it's very common to have two links\nlike this especially with fiber,\n\n105\n00:05:29.880 --> 00:05:32.000\nwhen you're running fiber\nuplinks between switches,\n\n106\n00:05:32.000 --> 00:05:33.920\nmaybe multiple floors in a building.\n\n107\n00:05:33.920 --> 00:05:37.213\nWhen they run fiber, they almost\nalways run a few pairs of fiber.\n\n108\n00:05:37.213 --> 00:05:40.928\nThey don't normally just run one\nfiber link, one pair and that's it.\n\n109\n00:05:40.928 --> 00:05:43.895\nSo if I had extra pairs run\nI might as well use them and\n\n110\n00:05:43.895 --> 00:05:48.670\nI can build up that redundancy and now I\nget a more stable infrastructure, right?\n\n111\n00:05:48.670 --> 00:05:53.480\nSo those are advantages if I can\naggregate the ports together, all right?\n\n112\n00:05:53.480 --> 00:05:54.406\nWell how do I aggregate them?\n\n113\n00:05:54.406 --> 00:05:55.910\nCuz it's obviously they're\nnot doing it by default,\n\n114\n00:05:55.910 --> 00:05:58.820\nwe saw that in the other episodes,\nit doesn't do it by default.\n\n115\n00:05:58.820 --> 00:06:02.851\nSo we can step in and we can\nleverage what's called EtherChannel.\n\n116\n00:06:02.851 --> 00:06:06.550\nCisco EtherChannel is the technology\nthat lets you bond these ports together.\n\n117\n00:06:06.550 --> 00:06:10.270\nAnd back in the early days,\nCisco developed EtherChannel for\n\n118\n00:06:10.270 --> 00:06:13.050\nuse in their systems,\nEtherChannel is Cisco proprietary.\n\n119\n00:06:13.050 --> 00:06:15.240\nAnd it worked by bonding\nthese ports together and\n\n120\n00:06:15.240 --> 00:06:18.770\nletting the switches do what they do best,\nwhich is to move frames across them.\n\n121\n00:06:18.770 --> 00:06:20.770\nSo we can get that configured.\n\n122\n00:06:20.770 --> 00:06:24.280\nWhen we do EtherChannel,\nit's a static configuration.\n\n123\n00:06:24.280 --> 00:06:25.820\nWe have to kind of do it manually.\n\n124\n00:06:25.820 --> 00:06:29.705\nBut over time, Cisco found ways\nto make it automated, automatic.\n\n125\n00:06:29.705 --> 00:06:32.635\nWhere the switches would sense each\nother and get themselves configured and\n\n126\n00:06:32.635 --> 00:06:34.755\nbond these ports together and\nit would be dynamic.\n\n127\n00:06:34.755 --> 00:06:37.182\nAnd that's what you normally want,\nis you want it to be dynamic so\n\n128\n00:06:37.182 --> 00:06:39.855\nthat they can adjust for\nwhen I add new links or take links away.\n\n129\n00:06:39.855 --> 00:06:43.365\nAnd you could, in the middle of the day,\nyou can go in and add or remove links and\n\n130\n00:06:43.365 --> 00:06:45.465\nnobody will notice because it's\njust the bandwidth that changes.\n\n131\n00:06:45.465 --> 00:06:47.050\nSo you get a lot of power there.\n\n132\n00:06:47.050 --> 00:06:51.364\nNow the way that it work is Cisco created\nan internal protocol called PAgP,\n\n133\n00:06:51.364 --> 00:06:54.377\nP-A-G-P it's\nthe Port Aggregation Protocol and\n\n134\n00:06:54.377 --> 00:06:59.190\nCisco didn't actually develop it, they\nbought a company that have developed it.\n\n135\n00:06:59.190 --> 00:07:04.600\nSo when we deploy EtherChannel on\na Cisco switch, you can do raw,\n\n136\n00:07:04.600 --> 00:07:07.953\nstatically defined EtherChannel,\nwhere we just manually set it up, or\n\n137\n00:07:07.953 --> 00:07:13.730\nyou can do Cisco's proprietary PAgP, where\nit will dynamically set itself up, right?\n\n138\n00:07:13.730 --> 00:07:15.712\nThere is a third option though,\nand it's the most common.\n\n139\n00:07:15.712 --> 00:07:18.652\nThe third option is to use\na protocol called LACP or\n\n140\n00:07:18.652 --> 00:07:21.106\nthe Link Aggregation Control Protocol.\n\n141\n00:07:21.106 --> 00:07:23.858\nLACP is an IEEE standard.\n\n142\n00:07:23.858 --> 00:07:27.319\nIt's open standard that anybody\ncan support, and as a result,\n\n143\n00:07:27.319 --> 00:07:28.673\nalmost everybody does.\n\n144\n00:07:28.673 --> 00:07:32.820\nIf you have HP switches, and\nJuniper, or Extreme Networks, Cisco,\n\n145\n00:07:32.820 --> 00:07:34.239\nyou mix them together.\n\n146\n00:07:34.239 --> 00:07:39.320\nEven some of the crummy switches like\nNetgear or whatever will support LACP.\n\n147\n00:07:39.320 --> 00:07:42.864\nSo now you can do port aggregation\nbetween Cisco and other vendors.\n\n148\n00:07:42.864 --> 00:07:47.110\nThere used to be a few advantages to\nPAgP back in the day, performance-wise.\n\n149\n00:07:47.110 --> 00:07:49.089\nNow that's all equalled out,\nand as a result,\n\n150\n00:07:49.089 --> 00:07:51.530\nLACP is pretty much the only\none that gets used these days.\n\n151\n00:07:51.530 --> 00:07:54.060\nSo if you deploy this in production,\nexpect to use LACP,\n\n152\n00:07:54.060 --> 00:07:55.761\nthat's the one you're going to use.\n\n153\n00:07:55.761 --> 00:07:57.868\nOn the exam,\nyou need to know all three methods though.\n\n154\n00:07:57.868 --> 00:08:01.089\nSo we're gonna get a chance to see\nall three ways to configure this link\n\n155\n00:08:01.089 --> 00:08:01.805\naggregation.\n\n156\n00:08:01.805 --> 00:08:06.164\nAll right, before I get it set up,\nlet's just verify the default behavior.\n\n157\n00:08:06.164 --> 00:08:10.942\nI have two switches, NYCORE1 and NYCORE2,\nand they have two links between each\n\n158\n00:08:10.942 --> 00:08:15.000\nother, ports 23 and\n24 are linked between these two switches.\n\n159\n00:08:15.000 --> 00:08:17.581\nSo let's jump over and\ntake a look at those switches.\n\n160\n00:08:17.581 --> 00:08:26.162\nHere's NYCORE1, and on NYCORE1 I'm gonna\ndo a show cdp neighbor, all right.\n\n161\n00:08:26.162 --> 00:08:30.815\nNow, when I do a show cdp neighbor,\nsee how I've got NYCore2?\n\n162\n00:08:30.815 --> 00:08:32.630\nI've got it on my port 23 and my port 24.\n\n163\n00:08:32.630 --> 00:08:36.990\nI've got two links that are going\nover to that other switch.\n\n164\n00:08:36.990 --> 00:08:40.360\nAnd if I do a show spanning-tree,\n\n165\n00:08:40.360 --> 00:08:44.400\nI'm gonna see, well,\nI see them both up, I must be the root.\n\n166\n00:08:44.400 --> 00:08:47.390\nI am, yep, if I look up here,\nthis is the root bridge.\n\n167\n00:08:47.390 --> 00:08:49.560\nI'm the root so I'm not shutting\nany ports down, all right.\n\n168\n00:08:49.560 --> 00:08:52.430\nSo as far as this switch is concerned,\nyeah,\n\n169\n00:08:52.430 --> 00:08:55.820\nI've got two paths to get over to NYCORE2,\nthat's great.\n\n170\n00:08:55.820 --> 00:08:58.840\nLet's go take a look at it\nfrom CORE2's perspective.\n\n171\n00:08:58.840 --> 00:09:03.880\nSo if I flip over to NYCORE2 and\n\n172\n00:09:03.880 --> 00:09:07.650\nlook at the same thing,\nif I do a show cdp neighbor,\n\n173\n00:09:07.650 --> 00:09:12.080\nI can see NYCORE1 on my ports 23 and\n24, and a VOIP phone, apparently.\n\n174\n00:09:13.260 --> 00:09:19.058\nAnd then if I do a show spanning-tree,\nI can see port 23 and 24.\n\n175\n00:09:19.058 --> 00:09:22.170\nAnd port 24's been shut down,\nright, it's blocked, so\n\n176\n00:09:22.170 --> 00:09:24.370\nit's in the alternate blocking state.\n\n177\n00:09:24.370 --> 00:09:27.650\nSpanning tree recognized the loop,\nand it fixed it.\n\n178\n00:09:27.650 --> 00:09:29.690\nSo, do I get redundancy here?\n\n179\n00:09:29.690 --> 00:09:31.380\nSure, I mean it's not gonna be fast,\nright?\n\n180\n00:09:31.380 --> 00:09:33.730\nI'm running regular ieee.\n\n181\n00:09:33.730 --> 00:09:36.140\nIf I switch to rapid,\nI'll get rapid failover.\n\n182\n00:09:36.140 --> 00:09:38.660\nBut I'm not gonna be able to use both\nlines at the same time because I'm\n\n183\n00:09:38.660 --> 00:09:41.700\nblocking one of them, all right.\n\n184\n00:09:41.700 --> 00:09:45.240\nSo let's configure some link aggregation\nto get a chance to see how this works.\n\n185\n00:09:45.240 --> 00:09:49.290\nNow, if I want to go the static way, the\nold fashioned, the hard way to get in and\n\n186\n00:09:49.290 --> 00:09:53.390\nconfigure it, the commands\nare not very difficult, right.\n\n187\n00:09:53.390 --> 00:09:55.020\nBasically, what I want to do is get in and\n\n188\n00:09:55.020 --> 00:09:58.100\nenable ether channel on\nthese two interfaces.\n\n189\n00:09:58.100 --> 00:09:59.900\nSo we normally use the range command.\n\n190\n00:09:59.900 --> 00:10:02.060\nWith the range command,\nyou can apply it all at once and\n\n191\n00:10:02.060 --> 00:10:03.350\nit's kind of a handy thing.\n\n192\n00:10:03.350 --> 00:10:05.944\nCisco recommends you shut down\nthe interfaces before you configure them\n\n193\n00:10:05.944 --> 00:10:08.582\nbecause you're probably gonna have to\napply a few different commands and\n\n194\n00:10:08.582 --> 00:10:09.877\nthey want you to do them all at once.\n\n195\n00:10:09.877 --> 00:10:12.620\nShutting the interface down,\nmake sure that happens.\n\n196\n00:10:12.620 --> 00:10:16.770\nBefore it get started, though,\nwhen we bond these ports together,\n\n197\n00:10:16.770 --> 00:10:19.240\nit's important that their\nconfigurations match.\n\n198\n00:10:19.240 --> 00:10:21.670\nI want the same settings\non both interfaces.\n\n199\n00:10:21.670 --> 00:10:25.376\nSo I'm just gonna do a quick\ndouble check to make sure that I\n\n200\n00:10:25.376 --> 00:10:29.019\ndon't have any erroneous\ncommands stuck on these guys.\n\n201\n00:10:29.019 --> 00:10:34.030\nAnd sorry, it's 1/0/23 and 24.\n\n202\n00:10:34.030 --> 00:10:35.856\nAll right, they're both at their defaults.\n\n203\n00:10:35.856 --> 00:10:38.696\nWhat I'm looking for\nis maybe one's configured as a trunk and\n\n204\n00:10:38.696 --> 00:10:42.096\none's an access port, or one's on\nVLAN 5 and the other's on VLAN 10.\n\n205\n00:10:42.096 --> 00:10:45.392\nIf there's a difference like that and\nI bond them together, what's gonna happen?\n\n206\n00:10:45.392 --> 00:10:46.435\nWell, it's just not gonna work.\n\n207\n00:10:46.435 --> 00:10:49.590\n[LAUGH] It's not catastrophic,\nit just doesn't work, right.\n\n208\n00:10:49.590 --> 00:10:52.290\nSo I need to make sure\nthey're configured the same.\n\n209\n00:10:52.290 --> 00:10:54.802\nJust kinda get them reset to the defaults,\nthat's how mine are.\n\n210\n00:10:54.802 --> 00:10:58.343\nSo, then,\nI'm gonna jump into my configuration,\n\n211\n00:10:58.343 --> 00:11:03.174\nand I'll use the interface\nrange command for fa1/0/23- 24.\n\n212\n00:11:03.174 --> 00:11:07.500\nAnd then, like Cisco recommends, I'm gonna\nshut them down before I mess with them.\n\n213\n00:11:07.500 --> 00:11:10.366\nThat means that if I enable this,\nI probably need to do it after hours.\n\n214\n00:11:10.366 --> 00:11:13.486\nOnce it's enabled, I can start messing\nwith these right during the middle of\n\n215\n00:11:13.486 --> 00:11:16.232\nthe workday and it's not a big deal\ncuz you can add and remove links.\n\n216\n00:11:16.232 --> 00:11:19.970\nAs long as you leave one link functional,\nmost people won't even notice.\n\n217\n00:11:19.970 --> 00:11:22.030\nSo, well,\nassuming you have the bandwidth for it.\n\n218\n00:11:22.030 --> 00:11:25.860\nAll right, so they're shut down, and now\nI wanna get them set up for EtherChannel.\n\n219\n00:11:25.860 --> 00:11:31.850\nAnd the way we do that is by saying\nchannel, well I have a few choices here.\n\n220\n00:11:31.850 --> 00:11:35.928\nI can do channel-protocol, and then I can\ntell it what protocol I want to support.\n\n221\n00:11:35.928 --> 00:11:38.240\nAnd see how I can do LACP and PAgP?\n\n222\n00:11:38.240 --> 00:11:41.810\nWell, LACP and PAgP are dynamic protocols,\nif I wanted to negotiate and\n\n223\n00:11:41.810 --> 00:11:42.940\ndo things dynamically.\n\n224\n00:11:42.940 --> 00:11:46.220\nIf I wanna do it statically,\nright, just manually define it and\n\n225\n00:11:46.220 --> 00:11:49.490\nsay you are gonna be a port\nchannel no matter what, then\n\n226\n00:11:49.490 --> 00:11:52.820\nI don't actually have to set a protocol or\nI can skip that step, all right.\n\n227\n00:11:52.820 --> 00:11:54.800\nNow, why does that matter?\n\n228\n00:11:54.800 --> 00:11:59.100\nIf I go dynamic, and it tries to\nnegotiate out an aggregation and for\n\n229\n00:11:59.100 --> 00:12:02.230\nsome reason the other side doesn't\nagree with us, what's gonna happen?\n\n230\n00:12:02.230 --> 00:12:04.870\nWell, it'll actually just fail back and\nrun like a regular port.\n\n231\n00:12:04.870 --> 00:12:07.620\nIt'll run like two regular ports, and\nspanning tree will shut off one of them,\n\n232\n00:12:07.620 --> 00:12:09.350\nbut at least I'm still up.\n\n233\n00:12:09.350 --> 00:12:12.480\nBut if I statically define it,\nlike I'm about to do, and\n\n234\n00:12:12.480 --> 00:12:15.830\nthe other side doesn't agree,\nthen it just breaks, right?\n\n235\n00:12:15.830 --> 00:12:17.720\nSo that's why static\nassignment is not very common.\n\n236\n00:12:17.720 --> 00:12:21.829\nIn fact, I never use a static\nassignment like this in production, but\n\n237\n00:12:21.829 --> 00:12:25.676\nit's on the exam so we need to know it,\nwe need to know how to do it.\n\n238\n00:12:25.676 --> 00:12:31.270\nSo I can just skip past configuring\na protocol, and I can say channel-group.\n\n239\n00:12:31.270 --> 00:12:35.190\nNow, the channel group is\ngonna be my virtual interface.\n\n240\n00:12:35.190 --> 00:12:38.435\nA virtual interface is gonna get\ncreated called a port channel, and so\n\n241\n00:12:38.435 --> 00:12:41.460\nI'll have port channel 0,\nport channel 1, port channel 2 for\n\n242\n00:12:41.460 --> 00:12:43.508\neach of the aggregated\nports that I create.\n\n243\n00:12:43.508 --> 00:12:47.682\nThe channel group is where I define that\nnumber, so if I say channel-group 1,\n\n244\n00:12:47.682 --> 00:12:49.445\nthis is gonna be port channel 1.\n\n245\n00:12:49.445 --> 00:12:51.910\nIf I say channel-group 5,\nthis is gonna be port channel 5.\n\n246\n00:12:51.910 --> 00:12:54.716\nAny port I wanna aggregate just\nneeds to be in that same group.\n\n247\n00:12:54.716 --> 00:12:56.138\nAnd the ports don't have\nto be next to each other.\n\n248\n00:12:56.138 --> 00:12:57.446\nI've got port 23 and 24.\n\n249\n00:12:57.446 --> 00:13:00.168\nI could do port 11 and 17 if I wanted.\n\n250\n00:13:00.168 --> 00:13:01.930\nThey don't have to be\nright next to each other.\n\n251\n00:13:01.930 --> 00:13:03.276\nThey do have to be on the same switch.\n\n252\n00:13:03.276 --> 00:13:05.125\nThere's at least that, all right.\n\n253\n00:13:05.125 --> 00:13:08.155\nNow, it is worthwhile to do\na quick question mark there\n\n254\n00:13:08.155 --> 00:13:10.455\nbecause there are limits\nto the number you can pick.\n\n255\n00:13:10.455 --> 00:13:12.475\nSee how I've got 1 through 48, right?\n\n256\n00:13:12.475 --> 00:13:14.105\nIf this is a pretty decent switch,\nI can do 48.\n\n257\n00:13:14.105 --> 00:13:16.925\nI've seen some switches where\nthe number's as low as 6.\n\n258\n00:13:16.925 --> 00:13:19.248\nSome switches cannot handle\nthat many port channels,\n\n259\n00:13:19.248 --> 00:13:21.655\nthey just don't have\nthe processor power for it.\n\n260\n00:13:21.655 --> 00:13:24.620\nSo be aware that some switches\ndo have a limitation, all right.\n\n261\n00:13:24.620 --> 00:13:28.760\nI'm gonna do channel-group 1, and\nthen after that I have to define the mode.\n\n262\n00:13:28.760 --> 00:13:32.080\nNow, the mode is really interesting\nbecause we are gonna see that there is\n\n263\n00:13:32.080 --> 00:13:35.620\nfive distinct modes that I can pick from.\n\n264\n00:13:35.620 --> 00:13:39.140\nTwo of them are LACP modes that\nI'll talk about in a minute.\n\n265\n00:13:39.140 --> 00:13:40.668\nTwo of them are PAgP modes.\n\n266\n00:13:40.668 --> 00:13:45.920\nThere's only one that is\njust called EtherChannel.\n\n267\n00:13:45.920 --> 00:13:49.550\nThis is when we want to statically\nturn on port aggregation, and\n\n268\n00:13:49.550 --> 00:13:54.210\nsay you are going to be in\na port channel no matter what.\n\n269\n00:13:54.210 --> 00:13:59.050\nWe come in and\nwe just say Channel-group 1 mode on.\n\n270\n00:13:59.050 --> 00:14:02.040\nI'm turning on the EtherChannel,\nand that's it, all right.\n\n271\n00:14:02.040 --> 00:14:03.200\nNo arguments.\n\n272\n00:14:03.200 --> 00:14:05.940\nWhen you hit that, it's gonna tell\nyou it's creating a port channel.\n\n273\n00:14:05.940 --> 00:14:07.580\nAnd it just created for me port channel 1.\n\n274\n00:14:07.580 --> 00:14:11.850\nSo I now have a port channel in place and\nI'm aggregating.\n\n275\n00:14:11.850 --> 00:14:14.600\nWell, the interfaces are shut down so\nthey're not aggregating very well.\n\n276\n00:14:14.600 --> 00:14:17.209\nBut they do wanna try,\nthey wanna make that effort.\n\n277\n00:14:18.730 --> 00:14:21.370\nOnce that's done, I can run show\n\n278\n00:14:24.770 --> 00:14:28.650\netherchannel summary, which is really\nthe single most useful command for\n\n279\n00:14:28.650 --> 00:14:30.370\ntroubleshooting and\nverifying configuration.\n\n280\n00:14:30.370 --> 00:14:31.475\nShow etherchannel summary.\n\n281\n00:14:31.475 --> 00:14:35.380\nThat'll show you all your etherchannels\nand what their current status is.\n\n282\n00:14:35.380 --> 00:14:37.870\nAnd it's kind of neat because I\ncan see I've got port- channel 1,\n\n283\n00:14:37.870 --> 00:14:41.500\nand it's status is SD.\n\n284\n00:14:41.500 --> 00:14:42.900\nOkay, what is SD?\n\n285\n00:14:42.900 --> 00:14:46.280\nWell, if I look up here in my legend,\ns, and\n\n286\n00:14:46.280 --> 00:14:49.160\nbe careful because there's lowercase s and\ncapital S.\n\n287\n00:14:49.160 --> 00:14:52.480\nCapital S is a Layer2 etherchannel.\n\n288\n00:14:52.480 --> 00:14:53.880\nYou don't need it for the CCNA exam, but\n\n289\n00:14:53.880 --> 00:14:56.005\nyou can do a Layer3 when\nit's a routed port.\n\n290\n00:14:56.005 --> 00:14:57.375\nHere it's just a switchport, so Layer2.\n\n291\n00:14:57.375 --> 00:15:00.815\nAnd then the capital D is down,\nthat's not good, right.\n\n292\n00:15:00.815 --> 00:15:03.155\nAnd if I go down and\nI look at my interfaces,\n\n293\n00:15:03.155 --> 00:15:06.925\nI can see they each have Ds on them,\nwhich means they're down, too.\n\n294\n00:15:06.925 --> 00:15:09.439\nOkay, well, I expect that cuz\nI have them shut down, right.\n\n295\n00:15:09.439 --> 00:15:10.289\nThat's how they're gonna be for right now.\n\n296\n00:15:11.290 --> 00:15:13.640\nOkay, that's all I need\nto do here in NYCORE2.\n\n297\n00:15:13.640 --> 00:15:17.686\nLet me jump over to NYCORE1, and\nI'm gonna do the same thing over here.\n\n298\n00:15:17.686 --> 00:15:22.202\nNow, on NYCORE1, I'm not gonna shut the\ninterfaces down because they're already\n\n299\n00:15:22.202 --> 00:15:25.224\ndown because the pother end is down,\nso I don't have to.\n\n300\n00:15:25.224 --> 00:15:29.496\nBut I am going to make sure I don't\nhave any weird configurations on port 23\n\n301\n00:15:29.496 --> 00:15:30.110\nand 24.\n\n302\n00:15:30.110 --> 00:15:34.090\nAnd that's it, it's default, and\nthat one's at it's default, too.\n\n303\n00:15:34.090 --> 00:15:41.557\nGood, all right, so now I'm gonna get in\nhere and do interface range, fa1/0/23- 24.\n\n304\n00:15:41.557 --> 00:15:48.627\nAnd I'm gonna say channel-group 1.\n\n305\n00:15:48.627 --> 00:15:51.690\nAnd the number doesn't have\nto match the other side.\n\n306\n00:15:51.690 --> 00:15:54.819\nI did channel-group 1 on the other side,\nI could do channel-group 5 on this side,\n\n307\n00:15:54.819 --> 00:15:55.393\nif I wanted to.\n\n308\n00:15:55.393 --> 00:15:57.239\nBoy, does it make it hard to troubleshoot-\n>> [LAUGH]\n\n309\n00:15:57.239 --> 00:15:57.881\n>> If you make it different, though.\n\n310\n00:15:57.881 --> 00:16:00.032\nI like to keep them the same so\nI can remember, hey,\n\n311\n00:16:00.032 --> 00:16:01.746\nit’s channel-group 1 on both sides.\n\n312\n00:16:01.746 --> 00:16:04.685\nSo I am gonna say channel group one,\nmode on.\n\n313\n00:16:04.685 --> 00:16:05.195\nRight?\n\n314\n00:16:05.195 --> 00:16:10.381\nIt creates the port channel for me,\nand now we're in business, okay?\n\n315\n00:16:10.381 --> 00:16:15.550\nIf I do a show Ether channel summary,\nwell, it's gonna be down, too.\n\n316\n00:16:15.550 --> 00:16:17.402\nThe main part is my other\ninterfaces are still down.\n\n317\n00:16:17.402 --> 00:16:20.714\nSo, let's go take a look at those other\ninterfaces and get that squared away.\n\n318\n00:16:20.714 --> 00:16:21.330\nAll right.\nSo,\n\n319\n00:16:21.330 --> 00:16:24.350\nI'm gonna switch back over\nto my other core switch.\n\n320\n00:16:24.350 --> 00:16:26.630\nAnd on this one,\nI just need to come in and\n\n321\n00:16:26.630 --> 00:16:29.210\ntell it that it's okay to turn\nthose ports back on again.\n\n322\n00:16:29.210 --> 00:16:32.248\nSo, let me get into interface range.\n\n323\n00:16:32.248 --> 00:16:34.055\n23 through 24.\n\n324\n00:16:35.759 --> 00:16:36.997\nAnd let's do a no shut down.\n\n325\n00:16:36.997 --> 00:16:38.195\nAll right.\n\n326\n00:16:38.195 --> 00:16:43.125\nNow, when those things come back online,\nimmediately it's gonna come up, and\n\n327\n00:16:43.125 --> 00:16:45.065\nit's gonna bring the Ether channel up.\n\n328\n00:16:45.065 --> 00:16:46.725\nBecause I have it statically set to on.\n\n329\n00:16:46.725 --> 00:16:50.315\nNo matter what the other side says,\nwe are going to form an Ether channel.\n\n330\n00:16:50.315 --> 00:16:52.595\nWe're gonna bond these\ninterfaces together.\n\n331\n00:16:52.595 --> 00:16:54.035\nHopefully, the other side agrees.\n\n332\n00:16:54.035 --> 00:16:55.545\nWell, we statically set the other side,\ntoo.\n\n333\n00:16:55.545 --> 00:16:57.200\nSo, they will agree.\n\n334\n00:16:57.200 --> 00:17:02.630\nIf at least one physical port comes up,\nthen the logical port,\n\n335\n00:17:02.630 --> 00:17:04.822\nport channel one, or Po1,\nthat one will come up.\n\n336\n00:17:04.822 --> 00:17:09.510\nPO1 cannot come up unless at least one\nphysical interface is up, all right?\n\n337\n00:17:09.510 --> 00:17:12.490\nAnd when it's up,\nthen we should be able to communicate.\n\n338\n00:17:12.490 --> 00:17:17.420\nSo now, if I do a show Ether channel\nsummary, when I take a look at that\n\n339\n00:17:17.420 --> 00:17:21.440\noutput, I can see that Fa1/0/23 and\n24 have a P beside them.\n\n340\n00:17:21.440 --> 00:17:27.530\nAnd if I look up here,\nP is bundled in the port-channel, right?\n\n341\n00:17:27.530 --> 00:17:29.230\nA bundle,\nyou'll see that term every now and\n\n342\n00:17:29.230 --> 00:17:33.650\nthen referring to this kinda group\nof ports that we've combined.\n\n343\n00:17:33.650 --> 00:17:35.430\nAnd then,\nI can see the port channel itself.\n\n344\n00:17:35.430 --> 00:17:37.890\nPo1 has a status of SU.\n\n345\n00:17:37.890 --> 00:17:39.890\nAnd we know S is layer two.\n\n346\n00:17:39.890 --> 00:17:40.680\nU is in use.\n\n347\n00:17:40.680 --> 00:17:42.090\nThat's what you wanna see.\n\n348\n00:17:42.090 --> 00:17:44.330\nIt's up, and it's happy, okay?\n\n349\n00:17:44.330 --> 00:17:46.038\nSo, I'm now running a port channel.\n\n350\n00:17:46.038 --> 00:17:50.220\nAnd before, when I looked at\nspanning-tree, what did I see, right?\n\n351\n00:17:50.220 --> 00:17:56.070\nIf I scroll way back to spanning tree,\nwe saw where port\n\n352\n00:17:56.070 --> 00:18:00.350\n23 was the root port it was forwarding,\nand port 24 was blocking, right?\n\n353\n00:18:00.350 --> 00:18:04.790\nWell now, if I run show spanning-tree,\nlook what we get.\n\n354\n00:18:06.540 --> 00:18:08.690\nI don't see port 23 and 24 at all.\n\n355\n00:18:08.690 --> 00:18:12.090\nI just see Po1, port channel 1.\n\n356\n00:18:12.090 --> 00:18:14.520\nAnd it's a root, and it's forwarding.\n\n357\n00:18:14.520 --> 00:18:18.690\nThose two physical ports now look\nlike one virtual port, right?\n\n358\n00:18:18.690 --> 00:18:19.370\nAnd that's it.\n\n359\n00:18:19.370 --> 00:18:23.120\nAnd when I do a show mac address-table,\nwhen it maps things,\n\n360\n00:18:23.120 --> 00:18:24.840\nit's not mapping them to port 23 and 24.\n\n361\n00:18:24.840 --> 00:18:30.100\nWhen I look in here,\nit's mapping them to Po1.\n\n362\n00:18:30.100 --> 00:18:31.590\nSo, if one link fails, and\n\n363\n00:18:31.590 --> 00:18:34.310\nthe other one is running by itself,\nthe MAC address table does not change.\n\n364\n00:18:34.310 --> 00:18:36.719\nI don't have to re-learn addresses or\nshift people.\n\n365\n00:18:36.719 --> 00:18:41.700\nIt is truly immediate, not fake immediate\nlike rapid spanning-tree protocol.\n\n366\n00:18:41.700 --> 00:18:44.290\nThis is real immediate,\nbecause the link is already up and\n\n367\n00:18:44.290 --> 00:18:46.600\nalready moving traffic and\nit's already mapped.\n\n368\n00:18:46.600 --> 00:18:51.000\nThe only thing you ever lose is data that\nwas actually on the line when the link\n\n369\n00:18:51.000 --> 00:18:56.390\nfailed which, to TCP or\nany other session based protocol,\n\n370\n00:18:56.390 --> 00:19:00.840\nthey're just gonna retransmit anyway,\nand users won't notice at all.\n\n371\n00:19:00.840 --> 00:19:02.920\nSo, I can come in here, and\n\n372\n00:19:02.920 --> 00:19:08.590\nI can get into interface fa1/0/, I guess I\ncan get into config first, that'll help.\n\n373\n00:19:08.590 --> 00:19:12.270\nI'll get into Fa1/0/23, and\njust shut it down, right?\n\n374\n00:19:12.270 --> 00:19:16.100\nAnd when I shut that down,\nif I do a show spanning dash tree,\n\n375\n00:19:17.350 --> 00:19:21.180\nI'll see that port channel 1 is\nstill root, and still forwarding.\n\n376\n00:19:21.180 --> 00:19:24.820\nAnd if I do a show Ether channel summary,\n\n377\n00:19:25.970 --> 00:19:29.410\nthen take a look at that, sure,\none of my ports went down, right?\n\n378\n00:19:29.410 --> 00:19:31.770\nPort 23 is showing as down.\n\n379\n00:19:31.770 --> 00:19:35.180\nBut port 24 is still active and\nin the bundle.\n\n380\n00:19:35.180 --> 00:19:38.400\nAnd port channel 1 is still in use.\n\n381\n00:19:38.400 --> 00:19:40.000\nIt's up, and it's happy.\n\n382\n00:19:40.000 --> 00:19:42.530\nI only have 1 gig of bandwidth,\nthough, right?\n\n383\n00:19:42.530 --> 00:19:47.910\nIf we do a show interface\nport channel one, and\n\n384\n00:19:47.910 --> 00:19:51.585\nI take a look at it, looking at it here,\nI can find my bandwidth.\n\n385\n00:19:51.585 --> 00:19:52.921\nI keep saying a gigabyte.\n\n386\n00:19:52.921 --> 00:19:53.968\nOr gigabit.\n\n387\n00:19:53.968 --> 00:19:55.640\nThese are 100 megabit ports.\n\n388\n00:19:55.640 --> 00:19:58.520\nSo, I have two 100 megabit ports\nI can mine for 200 megabit.\n\n389\n00:19:58.520 --> 00:20:01.270\nSo, when I look at port\nchannel one right now,\n\n390\n00:20:01.270 --> 00:20:03.640\nlook at my little bandwidth right here.\n\n391\n00:20:03.640 --> 00:20:08.080\nFull duplex, 100 megabit per second,\nthat's what I've got, right?\n\n392\n00:20:08.080 --> 00:20:11.832\nBut if I turn this port back on, so\nI'm gonna turn that back on, and\n\n393\n00:20:11.832 --> 00:20:13.574\nI'm wanna wait just a second,\n\n394\n00:20:13.574 --> 00:20:17.867\ncuz the port's gonna come up, and\nthen it's gonna go back into the bundle.\n\n395\n00:20:17.867 --> 00:20:19.587\nSo, it may take just a moment.\n\n396\n00:20:19.587 --> 00:20:22.561\nI'm gonna run show Ether channel summary\nto make sure it goes back in active,\n\n397\n00:20:22.561 --> 00:20:23.889\ncuz sometimes they'll come up and\n\n398\n00:20:23.889 --> 00:20:26.300\nthey'll be in a state where\nthey're detecting or whatever.\n\n399\n00:20:26.300 --> 00:20:29.030\nSome of these other letters that\nyou see up here, like suspended or\n\n400\n00:20:29.030 --> 00:20:32.532\nstandalone, they'll come up and\nthen eventually make their way in.\n\n401\n00:20:32.532 --> 00:20:37.280\nSo, W is the one that you normally see,\nwaiting to be aggregated, right?\n\n402\n00:20:37.280 --> 00:20:39.483\nBut this one, it made it in there fast.\n\n403\n00:20:39.483 --> 00:20:40.317\nAll right.\n\n404\n00:20:40.317 --> 00:20:44.780\nSo now, if I run that show interface Po1,\nand I go and\n\n405\n00:20:44.780 --> 00:20:47.930\ntake a look at that output,\nwhen it comes up,\n\n406\n00:20:47.930 --> 00:20:52.080\nit still hasn't reflected yet, it's still\nshowing that full-duplex 100 megabit.\n\n407\n00:20:52.080 --> 00:20:52.845\nSo it's showing us 100 megabit.\n\n408\n00:20:52.845 --> 00:20:53.789\nBut it is up and connected.\n\n409\n00:20:53.789 --> 00:20:56.421\nAnd my bandwidth statement there, I guess\nI should have pointed that one out.\n\n410\n00:20:56.421 --> 00:21:01.212\nIf I go up here The bandwidth\nstatement here was\n\n411\n00:21:01.212 --> 00:21:05.750\n100,000 kilobits, or\n100 megabits per second.\n\n412\n00:21:05.750 --> 00:21:08.172\nBut now, down here,\nI can see it's updated, and\n\n413\n00:21:08.172 --> 00:21:10.899\nit's showing 200 megabits per second,\nall right?\n\n414\n00:21:10.899 --> 00:21:13.049\nTurns out that the physical\ninterface doesn't change.\n\n415\n00:21:13.049 --> 00:21:15.570\nI thought it did, but\nthis statement here shows it.\n\n416\n00:21:15.570 --> 00:21:18.350\nSo, it's showing that it's aggregated,\nor brought in that other bandwidth.\n\n417\n00:21:18.350 --> 00:21:19.790\nAnd I can add more lines.\n\n418\n00:21:19.790 --> 00:21:21.420\nI could add up to eight,\n\n419\n00:21:21.420 --> 00:21:25.230\nup to eight ports can be aggregated\ntogether to create this bundle.\n\n420\n00:21:25.230 --> 00:21:28.700\n>> Now, Don, you just showed us where\nwe could shut down the port and\n\n421\n00:21:28.700 --> 00:21:30.100\nthe port channel stays up.\n\n422\n00:21:30.100 --> 00:21:31.060\nBut let's say this.\n\n423\n00:21:31.060 --> 00:21:32.990\nI'm just thinking hypothetically here.\n\n424\n00:21:32.990 --> 00:21:36.450\nIf I were to take that port 23, and\nthen I were to put it into VLAN five,\n\n425\n00:21:36.450 --> 00:21:38.601\nwould that break the Ether channel, then?\n\n426\n00:21:38.601 --> 00:21:39.129\n>> Yeah, yeah.\n\n427\n00:21:39.129 --> 00:21:40.747\n>> Okay.\n>> So, when I got started,\n\n428\n00:21:40.747 --> 00:21:44.630\nthe first thing I did was I made sure\nport 23 and 24 had the same config.\n\n429\n00:21:44.630 --> 00:21:46.158\nIf they don't, that's bad.\n\n430\n00:21:46.158 --> 00:21:48.940\nSo, I've gotta remember,\nfrom now on whenever I go and\n\n431\n00:21:48.940 --> 00:21:52.400\nconfigure this port, I need to make\nsure I configure it all together.\n\n432\n00:21:52.400 --> 00:21:57.310\nAnd the easiest way to do that is\nto never mess with port 23 and 24.\n\n433\n00:21:57.310 --> 00:22:00.430\nInstead, just do all my configuration\non Po1, which you can certainly do.\n\n434\n00:22:00.430 --> 00:22:03.050\nSo, if I wanna make this a trunk, right,\n\n435\n00:22:03.050 --> 00:22:08.210\nI can jump into interface port-channel 1,\nright?\n\n436\n00:22:08.210 --> 00:22:09.960\nOr, po1 for short.\n\n437\n00:22:09.960 --> 00:22:13.990\nI can get into that interface, and\nso if I jump into it, right, and\n\n438\n00:22:13.990 --> 00:22:18.690\nfrom here I can say\nswitchport trunk encap dot1q,\n\n439\n00:22:18.690 --> 00:22:21.850\nwhich I think might be\nthe only one the switch does.\n\n440\n00:22:21.850 --> 00:22:23.240\nI guess it does more than one.\n\n441\n00:22:23.240 --> 00:22:27.090\nAnd then I can say switchport mode trunk.\n\n442\n00:22:27.090 --> 00:22:28.880\nAnd so now,\nI'm configuring it as trunk, and\n\n443\n00:22:28.880 --> 00:22:31.500\nI'm doing it right here\nfrom the port channel.\n\n444\n00:22:31.500 --> 00:22:35.170\nNow, you guys remember when you make\na port a trunk, it's gotta reset the port.\n\n445\n00:22:35.170 --> 00:22:35.890\nThat's what it just did.\n\n446\n00:22:35.890 --> 00:22:41.850\nAnd it's resetting not just Po1,\nbut also the ports inside of it.\n\n447\n00:22:41.850 --> 00:22:46.280\nSo I see port channel 1 went\ndown as well as port 23 and 24.\n\n448\n00:22:46.280 --> 00:22:48.290\nAnd then I'm gonna see\nthem all come back up.\n\n449\n00:22:48.290 --> 00:22:50.060\nSo it's taking care of doing it all for\nme.\n\n450\n00:22:50.060 --> 00:22:56.250\nIt's kinda like doing the range command,\nbut doing it on the port channel, right?\n\n451\n00:22:56.250 --> 00:22:57.610\nSo it's all happening at once.\n\n452\n00:22:57.610 --> 00:23:00.692\nAnd if you take a look at\nthe configuration, right,\n\n453\n00:23:00.692 --> 00:23:04.054\nso if I look at my show running config,\nand I get in here and\n\n454\n00:23:04.054 --> 00:23:08.136\nstart to look at my interfaces,\nI can get down to ports 23 and 24.\n\n455\n00:23:08.136 --> 00:23:10.560\nAnd here it is.\n\n456\n00:23:10.560 --> 00:23:14.816\nIt put the encapsulation and the trunking\ncommand right on each interface to ensure\n\n457\n00:23:14.816 --> 00:23:16.776\nthey were configured individually.\n\n458\n00:23:16.776 --> 00:23:19.304\nI mean,\nthey were configured identically, right?\n\n459\n00:23:19.304 --> 00:23:21.040\nSo they are configured the same.\n\n460\n00:23:21.040 --> 00:23:22.550\nI should not mess with these guys anymore.\n\n461\n00:23:22.550 --> 00:23:25.500\nThe only time I would mess with them\nis if I wanted to take somebody\n\n462\n00:23:25.500 --> 00:23:26.640\nout of the port channel, all right?\n\n463\n00:23:26.640 --> 00:23:28.422\nIf I wanted to get them\nout of that bundle.\n\n464\n00:23:28.422 --> 00:23:32.470\nAnd then, if I keep hitting space,\neventually I get to my virtual interfaces,\n\n465\n00:23:32.470 --> 00:23:37.180\nand I'll find the port channel 1 interface\nwhich, I guess it was up at the top.\n\n466\n00:23:37.180 --> 00:23:38.580\nI must have missed it.\n\n467\n00:23:38.580 --> 00:23:39.860\nThere it is.\nIt is up at the top.\n\n468\n00:23:39.860 --> 00:23:41.440\nSo right there, and\nI'll see those trunk commands.\n\n469\n00:23:41.440 --> 00:23:43.235\nThe only thing I don't see there\nis the channel group command,\n\n470\n00:23:43.235 --> 00:23:45.500\ncuz you don't put the port\nchannel in a channel group.\n\n471\n00:23:45.500 --> 00:23:48.722\nIt is the channel group, so that's\nthe only command I don't see right there.\n\n472\n00:23:48.722 --> 00:23:49.670\nAll right.\n\n473\n00:23:49.670 --> 00:23:51.804\nLikewise, if I were to shut down Po1,\n\n474\n00:23:51.804 --> 00:23:54.596\nit would shut down\nthe physical interfaces, too.\n\n475\n00:23:54.596 --> 00:23:56.669\nAll right.\nNow, what we just saw,\n\n476\n00:23:56.669 --> 00:24:00.931\nthat was me statically defining\nThe port channel all right.\n\n477\n00:24:00.931 --> 00:24:02.462\nBut I can do it dynamically also.\n\n478\n00:24:02.462 --> 00:24:05.518\nI can have it negotiate\nout the connection.\n\n479\n00:24:05.518 --> 00:24:09.495\nAnd that's important if I don't\nnecessarily know what the other side is\n\n480\n00:24:09.495 --> 00:24:10.546\ngoing to be using.\n\n481\n00:24:10.546 --> 00:24:12.898\nAnd I want it to have\na fall back to say if for\n\n482\n00:24:12.898 --> 00:24:15.060\nsome reason the channel group fails.\n\n483\n00:24:15.060 --> 00:24:18.858\nIf we can't form an ether channel fail\nback to being an access port, right?\n\n484\n00:24:18.858 --> 00:24:21.071\nOr fail back to being regular,\nindividual ports and\n\n485\n00:24:21.071 --> 00:24:23.330\nlet Spanning Tree Protocol do their job.\n\n486\n00:24:23.330 --> 00:24:24.815\nSo this is static.\n\n487\n00:24:24.815 --> 00:24:26.880\nWe do it static, it's always gonna be set.\n\n488\n00:24:26.880 --> 00:24:31.682\nIf we flip over to LACP or PAgP, well,\nthen it'll dynamically negotiate it.\n\n489\n00:24:31.682 --> 00:24:35.950\nNow fortunately, the configuration's\nalmost identical to do them.\n\n490\n00:24:35.950 --> 00:24:38.352\nSo getting them changed\nover is not a big deal.\n\n491\n00:24:38.352 --> 00:24:42.020\nLet's say I want to switch these guys\nover to LACP, which is the most common.\n\n492\n00:24:42.020 --> 00:24:42.699\nLet me show you that.\n\n493\n00:24:42.699 --> 00:24:47.571\nStep one, I'm gonna need to\nshut down the interfaces.\n\n494\n00:24:47.571 --> 00:24:50.389\nIt's gonna cause a problem if I'm\nrunning one protocol on one side and\n\n495\n00:24:50.389 --> 00:24:51.840\nsomething different on the other.\n\n496\n00:24:51.840 --> 00:24:54.431\nI've got them statically set right now so\nI am gonna need to shut it down.\n\n497\n00:24:54.431 --> 00:24:58.442\nSo on core 2 I'm going to get into\ninterface range FA1/0/23- 24 right?\n\n498\n00:24:58.442 --> 00:25:01.030\nAnd I'm going to shut it down.\n\n499\n00:25:01.030 --> 00:25:07.898\nNow I'm not shutting down the port\nchannel, you know interface P01.\n\n500\n00:25:07.898 --> 00:25:10.362\nIt's going to shut down on it's own\nwhen I take these interfaces down.\n\n501\n00:25:10.362 --> 00:25:15.025\nAnd I'm also not gonna remove\nthe port channel because I still\n\n502\n00:25:15.025 --> 00:25:16.736\nwant port channel 1.\n\n503\n00:25:16.736 --> 00:25:17.816\nI still want it to be a trunk.\n\n504\n00:25:17.816 --> 00:25:20.620\nI just wanna change\nthe protocol that it's using.\n\n505\n00:25:20.620 --> 00:25:21.790\nAnd so here's where I can jump in.\n\n506\n00:25:21.790 --> 00:25:28.270\nI can say channel-group 1 mode and\nI can pick from my modes.\n\n507\n00:25:28.270 --> 00:25:32.469\nAnd when I define the mode, that's\ngonna define the protocol that I use.\n\n508\n00:25:32.469 --> 00:25:34.820\nSo, let's say I wanna go PAgP.\n\n509\n00:25:34.820 --> 00:25:39.232\nPAgP is the CISCO, proprietary port,\naggregation protocol.\n\n510\n00:25:39.232 --> 00:25:42.570\nThe one they developed,\nright or acquired, whatever.\n\n511\n00:25:42.570 --> 00:25:45.370\nThe two modes it's got are auto and\ndesirable, and\n\n512\n00:25:45.370 --> 00:25:48.120\nthis is exactly like\ndynamic trunking protocol.\n\n513\n00:25:48.120 --> 00:25:51.784\nRemember from the DTP episodes,\nwhere we had auto and desirable.\n\n514\n00:25:51.784 --> 00:25:55.364\nAnd when we had these modes,\nif it was set to auto,\n\n515\n00:25:55.364 --> 00:25:59.051\nwe would not form a trunk\nunless somebody asked us.\n\n516\n00:25:59.051 --> 00:26:01.400\nThat’s how PAgP is.\n\n517\n00:26:01.400 --> 00:26:04.630\nIt will not form an ether\nchannel unless somebody asks us.\n\n518\n00:26:04.630 --> 00:26:07.367\nSo if we set it to auto and\nsomebody asks we'll do it,\n\n519\n00:26:07.367 --> 00:26:11.935\notherwise we'll just stay regular old\nports, no ether channel, standalone ports.\n\n520\n00:26:11.935 --> 00:26:15.390\nBut if we go desirable,\nwhen you set at the desirable,\n\n521\n00:26:15.390 --> 00:26:18.560\nyou will actively try to\nbecome an ether channel.\n\n522\n00:26:18.560 --> 00:26:21.030\nSee, enable pack P unconditionally.\n\n523\n00:26:21.030 --> 00:26:24.262\nWe will try to become an ether channel.\n\n524\n00:26:24.262 --> 00:26:26.247\nIf the other side agrees,\nthen we'll become one.\n\n525\n00:26:26.247 --> 00:26:30.281\nIf the other side doesn't agree, we'll\nstill fail back to being regular ports,\n\n526\n00:26:30.281 --> 00:26:31.280\nthough right?\n\n527\n00:26:31.280 --> 00:26:34.090\nThat's the big difference\nbetween this guy here,\n\n528\n00:26:34.090 --> 00:26:36.960\nthe Mode On, where we don't fail back.\n\n529\n00:26:36.960 --> 00:26:38.614\nWe either do either channel or\nwe do nothing.\n\n530\n00:26:38.614 --> 00:26:41.794\nThis guy will still fail back, all right,\nso you get that extra one, and\n\n531\n00:26:41.794 --> 00:26:45.178\nthat's why I don't normally\nstatically set this one in real life.\n\n532\n00:26:45.178 --> 00:26:47.550\nNow, the important thing to remember for\n\n533\n00:26:47.550 --> 00:26:52.210\nthe exam, is that you can have one\nside desirable and one side auto,\n\n534\n00:26:52.210 --> 00:26:57.560\nor you can have both sides desirable and\nyou'll form an ether channel.\n\n535\n00:26:57.560 --> 00:27:01.372\nBut if you have both sides set to auto,\nyou will not form an ether channel, so\n\n536\n00:27:01.372 --> 00:27:04.365\nalways remember that you can't\nhave two sides set to auto.\n\n537\n00:27:04.365 --> 00:27:07.200\nLACP, same thing, just different words.\n\n538\n00:27:07.200 --> 00:27:09.651\nLACP is an IEEE standard so\nthey have their own terms.\n\n539\n00:27:09.651 --> 00:27:14.025\nSo notice how with LACP we've\ngot active and passive.\n\n540\n00:27:14.025 --> 00:27:19.218\nPassive will only form a channel\nif somebody else asks us, right.\n\n541\n00:27:19.218 --> 00:27:21.900\nPassive is the same as auto.\n\n542\n00:27:21.900 --> 00:27:25.365\nAnd then active, that says,\nwe're going to form an ether channel as\n\n543\n00:27:25.365 --> 00:27:27.893\nlong as the other person\non the other side agrees.\n\n544\n00:27:27.893 --> 00:27:29.470\nWe're gonna try, right.\n\n545\n00:27:29.470 --> 00:27:30.126\nWe'll be the one who asks.\n\n546\n00:27:30.126 --> 00:27:34.048\nYou can have active to active,\nyou can have active to passive,\n\n547\n00:27:34.048 --> 00:27:36.870\nbut you cannot have passive to passive.\n\n548\n00:27:36.870 --> 00:27:39.428\nSo the way they function is the same,\njust a different name, right?\n\n549\n00:27:39.428 --> 00:27:42.540\nAnd so once we get those turned on,\nthen we're in business.\n\n550\n00:27:42.540 --> 00:27:48.489\nNow the big selling point of LACP over\nPagP is simply multi vendor support.\n\n551\n00:27:48.489 --> 00:27:53.401\nIf you have HP switches or old Mortel's or\nextreme networks or whatever,\n\n552\n00:27:53.401 --> 00:27:54.760\nthey all run LACP.\n\n553\n00:27:54.760 --> 00:27:56.056\nYou can bond between them.\n\n554\n00:27:56.056 --> 00:27:57.610\nIt works great.\n\n555\n00:27:57.610 --> 00:27:59.205\nI use a lot of times, a VMware server.\n\n556\n00:27:59.205 --> 00:28:02.350\nYou might have VMware ESXi hosts,\nand they support LACP.\n\n557\n00:28:02.350 --> 00:28:05.071\nThey don't support PAgP,\nbut do they support LACP.\n\n558\n00:28:05.071 --> 00:28:07.204\nSo I can have four network\nadapters in that host, and\n\n559\n00:28:07.204 --> 00:28:10.174\nI can run them all to a switch, do LACP,\nand bond them them all together.\n\n560\n00:28:10.174 --> 00:28:11.316\nNow I have a nice, big,\n\n561\n00:28:11.316 --> 00:28:14.813\nfat connection for all those VMs to use\nand I can do it cuz I'm using LACP.\n\n562\n00:28:14.813 --> 00:28:16.720\nSo that's why it's more common.\n\n563\n00:28:16.720 --> 00:28:19.035\nOtherwise, they're functionally identical.\n\n564\n00:28:19.035 --> 00:28:20.940\nI shouldn't say functionally.\n\n565\n00:28:20.940 --> 00:28:24.990\nThey do function differently,\nthe end result is basically identical.\n\n566\n00:28:24.990 --> 00:28:28.515\nAll right, so I'm gonna come in here and\nsay channel-group 1 mode and\n\n567\n00:28:28.515 --> 00:28:30.050\nI'm gonna go active.\n\n568\n00:28:30.050 --> 00:28:32.701\nI want these guys to form a LACP mode.\n\n569\n00:28:32.701 --> 00:28:36.920\nNow notice what I got here command\nrejected channel protocol mismatch.\n\n570\n00:28:36.920 --> 00:28:40.514\nThe reason is my old mode\non is still there, so\n\n571\n00:28:40.514 --> 00:28:45.254\nI need to do a no channel-group\n1 mode on to get rid of that.\n\n572\n00:28:45.254 --> 00:28:47.820\nAnd then I can switch to mode active.\n\n573\n00:28:47.820 --> 00:28:49.484\nI can't be active and on.\n\n574\n00:28:49.484 --> 00:28:53.360\nIt was going to let me let\nthose commands coexist.\n\n575\n00:28:53.360 --> 00:28:57.851\nNow last time when I ran the command, we\nsaw a message about PO1 being created and\n\n576\n00:28:57.851 --> 00:28:58.522\nexisting.\n\n577\n00:28:58.522 --> 00:29:00.672\nPO1 already exists for\nme, port channel one so\n\n578\n00:29:00.672 --> 00:29:03.360\nit doesn't have to create\na new port channel for me.\n\n579\n00:29:03.360 --> 00:29:07.044\nIt's already there and\nwe're just in active mode now right?\n\n580\n00:29:07.044 --> 00:29:09.560\nI need to jump to the other side and\nfix it over there too.\n\n581\n00:29:09.560 --> 00:29:13.860\nSo let me jump over to core one and\nwe'll do the same basic thing.\n\n582\n00:29:13.860 --> 00:29:18.950\nSo over here,\nI'm gonna get into my configuration.\n\n583\n00:29:18.950 --> 00:29:22.094\nI'll get into interface\nrange FA1/0/23- 24.\n\n584\n00:29:22.094 --> 00:29:28.740\nAnd again, I'm not gonna shut them down\ncuz the other side is down right now.\n\n585\n00:29:28.740 --> 00:29:33.732\nAnd I'll just say,\nno channel group 1 mode on and then,\n\n586\n00:29:33.732 --> 00:29:36.440\nchannel group 1 mode active.\n\n587\n00:29:36.440 --> 00:29:37.665\nI could go passive.\n\n588\n00:29:37.665 --> 00:29:38.181\nIn fact, let's do that.\n\n589\n00:29:38.181 --> 00:29:40.300\nI'm gonna go passive on the side.\n\n590\n00:29:40.300 --> 00:29:44.182\nNormally, I do go active active cuz,\nI wanted to build as fast as I can.\n\n591\n00:29:44.182 --> 00:29:46.430\nBut you can go active and\npassive and it'll build up.\n\n592\n00:29:46.430 --> 00:29:49.968\nIt'll be just fine.\nSo that's what I'm gonna do here and\n\n593\n00:29:49.968 --> 00:29:53.272\nif I do a show ether channel summary,\n\n594\n00:29:53.272 --> 00:29:58.130\nright now what I'll see is\nthat the ports are down.\n\n595\n00:29:58.130 --> 00:30:01.364\nBut my protocol is set to LACP,\nversus PAgP.\n\n596\n00:30:01.364 --> 00:30:05.414\nSo we're good to go there and\nif I jump over to core 2,\n\n597\n00:30:05.414 --> 00:30:11.658\nI can do a no shutdown to bring those\ninterfaces up and lets see what happens.\n\n598\n00:30:11.658 --> 00:30:17.329\nSo I'm gonna do a show ether\nchannel summary and I can see W's.\n\n599\n00:30:17.329 --> 00:30:20.340\nThe w's tell me they're\nwaiting to aggregate.\n\n600\n00:30:20.340 --> 00:30:21.534\nI just brought them online.\n\n601\n00:30:21.534 --> 00:30:24.586\nNow this side is set to active so\nI'm actively reaching out\n\n602\n00:30:24.586 --> 00:30:28.620\nto the other side and\nsaying I'm running LACP, how about you?\n\n603\n00:30:28.620 --> 00:30:29.555\nThe other side is set to passive.\n\n604\n00:30:29.555 --> 00:30:31.410\nSo the other side wouldn't have asked us.\n\n605\n00:30:31.410 --> 00:30:34.801\nBut since we asked it, the other side's\ngoing to say, yeah, I like LACP too.\n\n606\n00:30:34.801 --> 00:30:37.000\nLet's build up a tunnel.\n\n607\n00:30:37.000 --> 00:30:38.943\nNot a tunnel, but an ether channel.\n\n608\n00:30:38.943 --> 00:30:43.170\nSo the two sides come into agreement,\nthey bring up their ether channel.\n\n609\n00:30:43.170 --> 00:30:45.638\nNow they're using LACP, and\nnegotiated it, and brought it up.\n\n610\n00:30:45.638 --> 00:30:48.776\nIf something with it goes wrong and\nit fails to build up the tunnel,\n\n611\n00:30:48.776 --> 00:30:52.251\nthen it'll say okay, well we can't do\nLACP so let's just go back to being\n\n612\n00:30:52.251 --> 00:30:56.030\nregular old ports, and they'll fail\nback to their original configurations.\n\n613\n00:30:56.030 --> 00:30:58.836\nNow because the configuration\non every port is the same,\n\n614\n00:30:58.836 --> 00:31:01.125\nthat means my network\nwill function the same.\n\n615\n00:31:01.125 --> 00:31:03.292\nThe only difference is\nthey won't aggregate,\n\n616\n00:31:03.292 --> 00:31:06.170\nso spanning tree is gonna\nshut off one of those ports.\n\n617\n00:31:06.170 --> 00:31:07.540\nBut the other port will still function,\nso my network stays up.\n\n618\n00:31:07.540 --> 00:31:10.328\nThat's the nice part about\nusing a dynamic protocol.\n\n619\n00:31:10.328 --> 00:31:13.784\nI know in one of the episodes I say\nI hate doing dynamic things, so\n\n620\n00:31:13.784 --> 00:31:17.628\nI turn off dynamic trunking,\nI don't like VTP so much, those things.\n\n621\n00:31:17.628 --> 00:31:21.419\nBut, this is the one scenario where I'd\nrather have a failback that puts my\n\n622\n00:31:21.419 --> 00:31:23.647\nnetwork functioning exactly the same way,\n\n623\n00:31:23.647 --> 00:31:26.552\njust with less bandwidth than\nnot have a fail back at all.\n\n624\n00:31:26.552 --> 00:31:28.390\nEither the channel comes up or nothing.\n\n625\n00:31:28.390 --> 00:31:30.952\nAll right I've stalled long enough\nlet's see what our status is.\n\n626\n00:31:30.952 --> 00:31:32.564\nSo now when I look at my status,\n\n627\n00:31:32.564 --> 00:31:35.922\nI can see all of my ports have a P\nwhich means they are aggregated.\n\n628\n00:31:35.922 --> 00:31:39.980\nMy status is SU so\nI'm a Layer 2 EtherChannel.\n\n629\n00:31:39.980 --> 00:31:42.374\nAnd I'm in use, it's up and going.\n\n630\n00:31:42.374 --> 00:31:46.715\nI'm now aggregated and a show's spanning\ntree should just show that PO1 and\n\n631\n00:31:46.715 --> 00:31:49.005\nthere it is as it's moving, all right.\n\n632\n00:31:49.005 --> 00:31:53.663\nSo the configuration whether you\nare doing static or PAgP or LACP,\n\n633\n00:31:53.663 --> 00:31:58.753\nall centers are around that one command,\nchannel- group and a number.\n\n634\n00:31:58.753 --> 00:32:03.840\nMode and then one of the five modes of the\nexam you should memorize all five of them.\n\n635\n00:32:03.840 --> 00:32:09.233\nRemember, active and passive for\nlack P, and then we had auto and\n\n636\n00:32:09.233 --> 00:32:13.756\ndesirable for pag p and\nthen on for static assignment.\n\n637\n00:32:13.756 --> 00:32:17.302\nRemember, the on is not dynamic,\nthat is statically assigned, and\n\n638\n00:32:17.302 --> 00:32:19.460\nit's not using LACP or PAgP.\n\n639\n00:32:19.460 --> 00:32:22.450\nSo, be careful of that cuz you see\nquestions that kinda center around and\n\n640\n00:32:22.450 --> 00:32:25.070\nmake it sound like you have to use LACP or\nPAgP but you don't.\n\n641\n00:32:25.070 --> 00:32:26.470\nYou don't have to use either of them.\n\n642\n00:32:26.470 --> 00:32:28.760\nYou can just statically assign it and\nyou're done.\n\n643\n00:32:28.760 --> 00:32:31.420\nBut if you statically assign it,\nit is Cisco thing, right?\n\n644\n00:32:31.420 --> 00:32:34.700\nEther channel is statistical thing,\nit's a kind of proprietary.\n\n645\n00:32:34.700 --> 00:32:38.860\nLack P is the only one that's in\nopen standard so keep that in mind.\n\n646\n00:32:38.860 --> 00:32:42.220\n>> Now Don, you said that with the port\naggregation the kind of drawback is\n\n647\n00:32:42.220 --> 00:32:44.420\nwe can have up to eight\nports to do this and\n\n648\n00:32:44.420 --> 00:32:47.920\nthat eats up a lot of the port density\nthat I would have on that switch.\n\n649\n00:32:47.920 --> 00:32:49.860\nI know that I have like a 3750 and\n\n650\n00:32:49.860 --> 00:32:53.530\nthere's actually other ports on there\nlike that allow me to do that without\n\n651\n00:32:53.530 --> 00:32:57.350\neating up those additional ports\n>> Yeah, actually two things.\n\n652\n00:32:57.350 --> 00:32:58.400\nI'm glad you asked that.\n\n653\n00:32:58.400 --> 00:32:58.960\nSo, two things,\n\n654\n00:32:58.960 --> 00:33:02.320\nthere are some little caveats that\nwe should throw in there, right?\n\n655\n00:33:02.320 --> 00:33:05.210\nFirst off, the ports that I was\ndoing here were all 100 megabit,\n\n656\n00:33:05.210 --> 00:33:08.370\nand you might have a gig switch,\nyou can do gigabit, I mentioned that.\n\n657\n00:33:08.370 --> 00:33:09.700\nYou can actually mix if you want.\n\n658\n00:33:09.700 --> 00:33:12.730\nYou can have some gigabit,\nand some 100 megabit.\n\n659\n00:33:12.730 --> 00:33:14.760\nOr some 10 gig, some gig.\n\n660\n00:33:14.760 --> 00:33:16.060\nJust be aware of this,\n\n661\n00:33:16.060 --> 00:33:20.750\nwhen the port channel builds up it's only\ngonna use the highest band width ports.\n\n662\n00:33:20.750 --> 00:33:24.450\nSo let's say I have 4 gig and 400 meg\nports, and I bond them up, that's 8, so\n\n663\n00:33:24.450 --> 00:33:25.960\nthat's fine, right?\n\n664\n00:33:25.960 --> 00:33:30.170\nBut it's only gonna use the 4 gig, even\nif 3 of them fail, I'm down to just 1,\n\n665\n00:33:30.170 --> 00:33:31.590\nit'll still use that 1 gig.\n\n666\n00:33:31.590 --> 00:33:34.960\nAnd it won't use the 100\nmegabits at all until\n\n667\n00:33:34.960 --> 00:33:39.580\nall of the gigabit links have failed and\nthen it'll use the 100 meg ports, right?\n\n668\n00:33:39.580 --> 00:33:42.050\nSo Cisco recommends you don't mix and\n\n669\n00:33:42.050 --> 00:33:43.460\nmatch cuz there's not\na whole lot of point to it.\n\n670\n00:33:43.460 --> 00:33:45.500\nYou have to have a lot of failure\nbefore that comes into effect.\n\n671\n00:33:45.500 --> 00:33:46.100\nBut you can.\n\n672\n00:33:46.100 --> 00:33:47.670\nIt will let you do it.\n\n673\n00:33:47.670 --> 00:33:51.480\nIt just won't use the low bandwidth\nport until every single one of the high\n\n674\n00:33:51.480 --> 00:33:52.890\nbandwidth ports has failed.\n\n675\n00:33:52.890 --> 00:33:56.490\nAll right, the other thing is what's\nthe highest bandwidth you're gonna get on\n\n676\n00:33:56.490 --> 00:33:57.460\na port these days?\n\n677\n00:33:57.460 --> 00:34:01.790\nIf you get your regular access switches,\nwhich is where this stuff really benefits.\n\n678\n00:34:01.790 --> 00:34:05.480\nRegular access switches usually only\nhave either a gig or 10 gig up links.\n\n679\n00:34:05.480 --> 00:34:07.530\nAnd they typically only have four of them,\nright?\n\n680\n00:34:07.530 --> 00:34:10.030\nSo you can only get so\nmuch bandwidth out of those.\n\n681\n00:34:10.030 --> 00:34:13.320\nWell, Cisco does have another technology\nthat's very similar to this called\n\n682\n00:34:13.320 --> 00:34:14.640\nStackwise.\n\n683\n00:34:14.640 --> 00:34:18.900\nCisco's Stackwise is where we don't\nuse ports on the front of our switch,\n\n684\n00:34:18.900 --> 00:34:21.190\nthe ports that we normally\nplug machines into.\n\n685\n00:34:21.190 --> 00:34:26.320\nInstead, there's these special cascade\nports that are on the back of the switch.\n\n686\n00:34:26.320 --> 00:34:26.930\nThey look kinda weird,\n\n687\n00:34:26.930 --> 00:34:30.550\nthey look like little SCSI connectors if\nyou ever worked with SCSI technologies.\n\n688\n00:34:30.550 --> 00:34:33.050\nAnd what they do,\nis they actually allow you\n\n689\n00:34:33.050 --> 00:34:37.740\nto hardwire the backplane of one\nswitch into the backplane of another.\n\n690\n00:34:37.740 --> 00:34:41.740\nIt basically takes multiple switches and\nbonds them together to one big super\n\n691\n00:34:41.740 --> 00:34:46.880\nswitch So I could have five 38 50's,\nand daisy change\n\n692\n00:34:46.880 --> 00:34:51.210\nthem together with Stackwise cables, and\nnow it's like I have one big fat 3850.\n\n693\n00:34:51.210 --> 00:34:54.120\nAnd they've got this stackwise\nconnection between them.\n\n694\n00:34:54.120 --> 00:34:59.700\nNow, Stackwise creates a 32 gigabit full\nduplex connection between the systems.\n\n695\n00:34:59.700 --> 00:35:01.690\nThe original Stackwise\nwas only 16 gigabit.\n\n696\n00:35:01.690 --> 00:35:04.080\nThe new one, Stackwise plus is 32 gigabit.\n\n697\n00:35:04.080 --> 00:35:08.260\nSo you get a thirty two gigabit full\nbandwidth connection between your switches\n\n698\n00:35:08.260 --> 00:35:09.400\nall off of one cable.\n\n699\n00:35:09.400 --> 00:35:13.480\nNot necessarily one it creates a ring\nbetween the switches if you have\n\n700\n00:35:13.480 --> 00:35:16.100\ntwo switches you want two cables and\nthat would be it.\n\n701\n00:35:16.100 --> 00:35:19.780\nYou would have a ring, if you had five\nswitches every switch would have two\n\n702\n00:35:19.780 --> 00:35:22.520\ncables but it would create a ring\nbetween each one of them and\n\n703\n00:35:22.520 --> 00:35:25.970\nthe ring is just for If one link fails\neverybody's still connected, right,\n\n704\n00:35:25.970 --> 00:35:28.020\ncuz this is an important connection.\n\n705\n00:35:28.020 --> 00:35:31.370\nThe nice part about is you\nget a lot of bandwidth\n\n706\n00:35:31.370 --> 00:35:34.070\nover a simple cable that runs\nacross the backend switches.\n\n707\n00:35:34.070 --> 00:35:37.880\nThe negative part about Stackwise,\nyou can't be very far away, right,\n\n708\n00:35:37.880 --> 00:35:40.940\nI think the longest Stackwise\ncable they sell is three meters so\n\n709\n00:35:40.940 --> 00:35:43.410\na little over 10 feet or\na little under 10 feet.\n\n710\n00:35:44.833 --> 00:35:47.380\nWhatever metric system.\n\n711\n00:35:47.380 --> 00:35:49.890\nSo whatever three meters works out to.\n\n712\n00:35:49.890 --> 00:35:50.710\nIt's not very far.\n\n713\n00:35:50.710 --> 00:35:54.860\nSo what stack wise assumes is that the\nswitches are right there in the same room.\n\n714\n00:35:54.860 --> 00:35:59.540\nSo if you're in a wiring closet, if you're\nin your data center that you have all\n\n715\n00:35:59.540 --> 00:36:02.470\nthose switches right there you stack wise\nthem together and now you're in business.\n\n716\n00:36:02.470 --> 00:36:05.180\nNow you don't need things like ether\nchannel cuz you get all that bandwidth\n\n717\n00:36:05.180 --> 00:36:08.561\nthrough your Stackwise channels.\n\n718\n00:36:08.561 --> 00:36:11.130\nThe alternative is if\nyou've got a big distance,\n\n719\n00:36:11.130 --> 00:36:14.020\nthen you run multiple fiber strands, and\nthat's where etherchannel comes in, you\n\n720\n00:36:14.020 --> 00:36:18.000\ncan achieve the higher bandwidth, and even\nring-type solutions by doing etherchannel.\n\n721\n00:36:18.000 --> 00:36:20.090\nYou have the multiple links for\nthat redundancy.\n\n722\n00:36:20.090 --> 00:36:21.930\nI'll put some links in the show notes.\n\n723\n00:36:21.930 --> 00:36:25.390\nLet me just show you a quick webpage here,\nI'll put the link to this white paper.\n\n724\n00:36:25.390 --> 00:36:28.010\nIf you've never worked with StackWise,\n\n725\n00:36:28.010 --> 00:36:31.310\nCISCO has this nice little\nwhite paper on the 3850s.\n\n726\n00:36:31.310 --> 00:36:33.680\nStackWise actually works on 3650,\n3750, and 3850s.\n\n727\n00:36:33.680 --> 00:36:38.470\nThey don't have it on the 2900 series or\n\n728\n00:36:38.470 --> 00:36:43.100\neven the 3500's like the 3560's which are\nreally popular, they don't do StackWise.\n\n729\n00:36:43.100 --> 00:36:43.895\nSo it's got to be these.\n\n730\n00:36:43.895 --> 00:36:46.885\nThese guys which were originally\ndesigned as data center switches not\n\n731\n00:36:46.885 --> 00:36:47.975\naccess switches but\n\n732\n00:36:47.975 --> 00:36:51.365\na lot of people use then as access\nswitches now just because of StackWise.\n\n733\n00:36:51.365 --> 00:36:54.625\nBut they run you through a white\npaper on how you can deploy it and\n\n734\n00:36:54.625 --> 00:36:55.755\nthey kinda show the cables.\n\n735\n00:36:55.755 --> 00:36:58.805\nThis is the back side of these\nswitches and it's hard to see but\n\n736\n00:36:58.805 --> 00:37:01.895\nyou have cable that comes out of one and\nruns to the next and\n\n737\n00:37:01.895 --> 00:37:04.540\nthen has the second cable\nruns to the next and so on.\n\n738\n00:37:04.540 --> 00:37:05.850\nAnd so they create their loop and\n\n739\n00:37:05.850 --> 00:37:10.340\nthen down there the very last one\nlinks right back up to the top again.\n\n740\n00:37:10.340 --> 00:37:15.190\nSo they've got them linked right here with\nthose stack plus cables to interconnect\n\n741\n00:37:15.190 --> 00:37:18.110\nthem and get that connection in place.\n\n742\n00:37:18.110 --> 00:37:23.610\nAnd basically at the end of the day\nwhat you are creating is ring like\n\n743\n00:37:23.610 --> 00:37:29.120\nthis amongst all your switches and if you\nstack it up like what they've got here.\n\n744\n00:37:29.120 --> 00:37:31.510\nThe bottom one will\nusually run to the top,\n\n745\n00:37:31.510 --> 00:37:34.360\none really long stack wise cables and\nthen all the other ones are these\n\n746\n00:37:34.360 --> 00:37:37.470\nnice little short ones that just\nlink right between them, okay?\n\n747\n00:37:37.470 --> 00:37:40.930\nAnd see how it got this active and\nstand by and member?\n\n748\n00:37:40.930 --> 00:37:42.640\nIt really does create a cluster.\n\n749\n00:37:42.640 --> 00:37:45.150\nSo one switch becomes the heart and\n\n750\n00:37:45.150 --> 00:37:49.960\nsoul of that stack, all the other switches\ngo into just a member mode where they're\n\n751\n00:37:49.960 --> 00:37:53.070\nnot really using their processing power\nanymore you're just using their ports.\n\n752\n00:37:53.070 --> 00:37:58.870\nSo you're effectively building a 4500 or\n6500 series switch, a big chassis switch.\n\n753\n00:37:58.870 --> 00:38:00.610\nYou're building here with\nindividual switches, so\n\n754\n00:38:00.610 --> 00:38:02.380\nyou get a lot of redundant power supplies,\n\n755\n00:38:02.380 --> 00:38:06.540\na lot of redundant processors, you know\nif one fails the other one takes over.\n\n756\n00:38:06.540 --> 00:38:09.480\nYou get a ton of redundancies in it for\nfar less money,\n\n757\n00:38:09.480 --> 00:38:11.210\nit's usually much less\nexpensive to do this.\n\n758\n00:38:11.210 --> 00:38:15.300\nSo it's a great technology, it might turn\nup on the exam, I believe it is actually\n\n759\n00:38:15.300 --> 00:38:18.630\nlisted in the exam objectives to at\nleast be familiar with the topic.\n\n760\n00:38:18.630 --> 00:38:21.970\nKey thing to remember is that\nStackWise is super Cisco proprietary.\n\n761\n00:38:21.970 --> 00:38:25.910\nIt's only a Cisco thing and\nthe cables are very special cables.\n\n762\n00:38:25.910 --> 00:38:28.950\nYou have to order from Cisco\nin order to connect them.\n\n763\n00:38:28.950 --> 00:38:32.120\nAnd I don't think they give me a good\npicture here of what the cable looks like.\n\n764\n00:38:32.120 --> 00:38:35.590\nBut, they basically have these big\nmetal ends on them with thick screws.\n\n765\n00:38:35.590 --> 00:38:37.170\nYou can screw them in so\nthey don't come loose.\n\n766\n00:38:37.170 --> 00:38:38.240\nIt's a real important cable.\n\n767\n00:38:38.240 --> 00:38:40.280\nIf it comes loose it will\ncause all sorts of problems.\n\n768\n00:38:40.280 --> 00:38:41.820\nSo, you bolt that sucker in there, and\n\n769\n00:38:41.820 --> 00:38:45.040\nit's not moving away, but\nyou always have to have a ring.\n\n770\n00:38:45.040 --> 00:38:47.180\nYou gotta link all your\nswitches together in a ring.\n\n771\n00:38:47.180 --> 00:38:49.140\nSo, if you have two switches,\nyou'll need two cables.\n\n772\n00:38:49.140 --> 00:38:49.980\nIf you have five switches,\n\n773\n00:38:49.980 --> 00:38:54.080\nyou'll need six cables to create\nthe link all the way around.\n\n774\n00:38:54.080 --> 00:38:56.090\nBut not a distance technology, right?\n\n775\n00:38:56.090 --> 00:38:57.980\nEither channel,\nwe could run that over great distances.\n\n776\n00:38:57.980 --> 00:39:00.720\nYou have two fiber links that\nrun ten kilometers each, and\n\n777\n00:39:00.720 --> 00:39:02.480\nput them in the ether channel.\n\n778\n00:39:02.480 --> 00:39:05.950\nBut stack wise I'm pretty sure it's\nthree meters is the longest cable.\n\n779\n00:39:05.950 --> 00:39:07.710\nThe three meters is the longest\none I've ever watched.\n\n780\n00:39:07.710 --> 00:39:09.330\nThere might be a longer ones.\n\n781\n00:39:09.330 --> 00:39:11.910\nBut nothing that's gonna go\nbetween buildings, right.\n\n782\n00:39:11.910 --> 00:39:13.930\nIt's really designed to\nbe in that Same route.\n\n783\n00:39:15.250 --> 00:39:18.670\n>> All right Don, well thank you for\nintroducing us to that concept of the port\n\n784\n00:39:18.670 --> 00:39:21.940\naggregation here that we\nactually see between switches.\n\n785\n00:39:21.940 --> 00:39:23.050\nVery important concept for\n\n786\n00:39:23.050 --> 00:39:25.910\nus you wanna make sure you pay\nattention to the ether channel, the lag\n\n787\n00:39:25.910 --> 00:39:30.500\np as well as the pag p and the different\nmodes that Don was talking about.\n\n788\n00:39:30.500 --> 00:39:34.430\nVery essential, especially as you go into\nthe CCNA Routing and Switching exam.\n\n789\n00:39:34.430 --> 00:39:37.220\nWell it's a great place for\nus to also end this episode then.\n\n790\n00:39:37.220 --> 00:39:40.530\nSigning off for ITProTV,\nI've been your host Ronnie Wong.\n\n791\n00:39:40.530 --> 00:39:41.400\n>> And I'm Don Pezet.\n\n792\n00:39:41.400 --> 00:39:44.432\n>> Stay tuned right here for\nmore CCNA Routing and Switching.\n\n793\n00:39:44.432 --> 00:39:53.190\n[MUSIC]\n\n",
          "vimeoId": "178196091"
        }
      ],
      "title": "LAN Switching Technologies"
    },
    {
      "episodes": [
        {
          "description": "In this episode, Ronnie and Don review a CCENT concept of Inter-VLAN Routing.  They demonstrate the Router On a Stick configuration and discuss why it’s only used in a lab environment instead of production.  The guys do show the use of a Layer 3 switches to configure the inter-VLAN  routing too.   They demonstrate how to configure a switch to enable Layer 3 functionality as well as configuring it for inter-VLAN routing by creating Switched Virtual Interfaces (SVIs). They remind us that the SVIs essentially becomes the default gateways for each of the vlans they serve.",
          "length": "1924",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/cisco-ccna200105/cisco-ccna-200105-2-1-inter-vlan_routing-081016-1.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/cisco-ccna200105/cisco-ccna-200105-2-1-inter-vlan_routing-081016-1-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/cisco-ccna200105/cisco-ccna-200105-2-1-inter-vlan_routing-081016-1-sm.jpg",
          "title": "Inter-VLAN Routing",
          "transcript": "WEBVTT\n\n1\n00:00:00.321 --> 00:00:10.321\n[MUSIC]\n\n2\n00:00:12.194 --> 00:00:14.627\n>> Welcome back to another great\nepisode right here on ITProTV.\n\n3\n00:00:14.627 --> 00:00:18.500\nI'm your host Ronnie Wong, and\nyou're watching the Cisco CCNA routing and\n\n4\n00:00:18.500 --> 00:00:19.830\nswitching show.\n\n5\n00:00:19.830 --> 00:00:23.810\nNow we're actually taking a look at a new\ntopic that we're jumping into beyond\n\n6\n00:00:23.810 --> 00:00:26.990\nthe layer two and now we're actually\ngetting well, layer two and\n\n7\n00:00:26.990 --> 00:00:28.720\nthree really I guess is where we're going.\n\n8\n00:00:28.720 --> 00:00:31.430\nBut we're taking a look at of\ncourse interview and routing and\n\n9\n00:00:31.430 --> 00:00:33.422\nwho better to help us out than Mr.\nDon Pezet.\n\n10\n00:00:33.422 --> 00:00:34.295\nDon welcome back.\n\n11\n00:00:34.295 --> 00:00:35.183\n>> Thanks for having me back Ronnie.\n\n12\n00:00:35.183 --> 00:00:38.332\nIn our last several episodes and\nin the CCENT show,\n\n13\n00:00:38.332 --> 00:00:42.360\nwe talked a good bit about VLANs,\nvirtual area local networks and\n\n14\n00:00:42.360 --> 00:00:45.818\nthe whole goal of the VLAN was\nto divide your network up.\n\n15\n00:00:45.818 --> 00:00:48.730\nAnd once you do that, your machines\nare effectively [LAUGH] isolated.\n\n16\n00:00:48.730 --> 00:00:53.530\nIf I create a sales VLAN and\na marketing VLAN and an executive VLAN,\n\n17\n00:00:53.530 --> 00:00:57.550\nall the computers are only able to see\nother computers on the same VLAN as them,\n\n18\n00:00:57.550 --> 00:00:59.150\nwhich what we normally want.\n\n19\n00:00:59.150 --> 00:01:00.890\nOur broadcasts get limited.\n\n20\n00:01:00.890 --> 00:01:05.280\nBut the thing is, we don't necessarily\nwant them to never see each other.\n\n21\n00:01:05.280 --> 00:01:09.920\nWe might have a printer over on the sales\narea that we want the marketing people to\n\n22\n00:01:09.920 --> 00:01:10.900\nbe able to print to.\n\n23\n00:01:10.900 --> 00:01:13.152\nSo, we still need them to be\nable to access those networks,\n\n24\n00:01:13.152 --> 00:01:15.193\nwe just don't their broadcast\nmaking it over there.\n\n25\n00:01:15.193 --> 00:01:20.780\nSo, VLANs achieve their goal, but then we\nneed to be able to route between the VLAN.\n\n26\n00:01:20.780 --> 00:01:25.281\nAnd back in the CCENT show we talked\nabout one technology for doing that and\n\n27\n00:01:25.281 --> 00:01:27.249\nit was called router on a stick.\n\n28\n00:01:27.249 --> 00:01:31.385\nAnd I mentioned at the time if you haven't\nseen the episode that it is a dumb name.\n\n29\n00:01:31.385 --> 00:01:32.119\nI'll give you that.\n\n30\n00:01:32.119 --> 00:01:34.860\n>> [LAUGH]\n>> But it's also extremely inefficient.\n\n31\n00:01:34.860 --> 00:01:39.730\nBecause what router on a stick\ndoes is you run one cable\n\n32\n00:01:39.730 --> 00:01:42.910\nfrom a switch to a router and\nyou make it a trunk.\n\n33\n00:01:42.910 --> 00:01:46.170\nNow as a trunk it's\ngonna carry every VLAN.\n\n34\n00:01:46.170 --> 00:01:49.271\nIf I have VLAN 10, 20, 30, 40, 50, and\n\n35\n00:01:49.271 --> 00:01:54.280\nI configure a trunk that trunk is\nnow toting VLANs 10, 20, 30, 40, 50.\n\n36\n00:01:54.280 --> 00:01:57.130\nAnd on the router,\na router doesn't normally see trunks,\n\n37\n00:01:57.130 --> 00:02:00.444\ntrunks are a layer two technology,\nrouters don't care about that.\n\n38\n00:02:00.444 --> 00:02:04.003\nBut you can configure interface\non a router to act like a trunk.\n\n39\n00:02:04.003 --> 00:02:09.220\nAnd it will now see each of those VLANs\nand allow us to route between them.\n\n40\n00:02:09.220 --> 00:02:11.200\nThe negative is, it's one cable.\n\n41\n00:02:11.200 --> 00:02:13.677\nSo, when I route from VLAN 10 to VLAN 20,\n\n42\n00:02:13.677 --> 00:02:16.628\nthe VLAN 10 traffic goes\nup the cable to the router.\n\n43\n00:02:16.628 --> 00:02:21.174\nThe router routes it to VLAN 30, and then\nit comes down the same cable on VLAN 30.\n\n44\n00:02:21.174 --> 00:02:25.047\nSo, if I have a full duplex cable,\nI'm always eating up both directions,\n\n45\n00:02:25.047 --> 00:02:28.980\nversus normal traffic where you might\nget sent out a different interface and\n\n46\n00:02:28.980 --> 00:02:30.660\nit's not the same.\n\n47\n00:02:30.660 --> 00:02:33.830\nHere, you would always\nconsume double the bandwidth.\n\n48\n00:02:33.830 --> 00:02:36.620\nSo, it is a performance bottleneck.\n\n49\n00:02:36.620 --> 00:02:39.510\nIt's not a great solution,\nand it barely gets you by, so\n\n50\n00:02:39.510 --> 00:02:41.790\nI said all that back in CCENT.\n\n51\n00:02:41.790 --> 00:02:45.715\nWell, in this episode,\nI wanna show you the way you should do it.\n\n52\n00:02:45.715 --> 00:02:46.270\n>> [LAUGH]\n>> And\n\n53\n00:02:46.270 --> 00:02:50.020\nthat's where we start to get our\nswitches to act like routers.\n\n54\n00:02:50.020 --> 00:02:52.996\nRemember that line that we've drawn,\nwhere switches are layer two, and\n\n55\n00:02:52.996 --> 00:02:54.060\nrouters are layer three.\n\n56\n00:02:54.060 --> 00:02:55.971\nToday, we're gonna blur that line really,\nreally bad,\n\n57\n00:02:55.971 --> 00:02:58.708\ncuz we're gonna take the router and we're\ngonna stick it right inside the switch.\n\n58\n00:02:58.708 --> 00:03:01.850\nAnd so\nnow the switch becomes layer three aware.\n\n59\n00:03:01.850 --> 00:03:04.810\nMost modern switches these days\nare what we call layer three switches.\n\n60\n00:03:04.810 --> 00:03:07.670\nAnd that just means that they have\na router built right into the motherboard\n\n61\n00:03:07.670 --> 00:03:09.370\nthat's ready to do the job.\n\n62\n00:03:09.370 --> 00:03:13.970\nAnd the biggest advantage there,\nis instead of doing the job on a separate\n\n63\n00:03:13.970 --> 00:03:18.610\nrouter with a lame single connection\nup to it that has poor connectivity.\n\n64\n00:03:18.610 --> 00:03:21.270\nOr poor bandwidth constraints,\nthat instead,\n\n65\n00:03:21.270 --> 00:03:24.870\nwe can do the routing right on\nthe backplane of the switch.\n\n66\n00:03:24.870 --> 00:03:30.470\nAnd your switch backplane will commonly\nbe 16 gigabit, 32 gigabit, 72 gigabit.\n\n67\n00:03:30.470 --> 00:03:33.150\nYou've got really high amounts of\nbandwidth on the backplanes in\n\n68\n00:03:33.150 --> 00:03:34.230\nthese switches.\n\n69\n00:03:34.230 --> 00:03:37.820\nAnd when you're doing your routing there,\nyou get extremely high performance.\n\n70\n00:03:37.820 --> 00:03:40.710\nNow, it's gotten to the point where\nmost people don't even bother buying\n\n71\n00:03:40.710 --> 00:03:41.780\nrouters anymore.\n\n72\n00:03:41.780 --> 00:03:44.040\nThey have a firewall and\nthen a layer three switch, and\n\n73\n00:03:44.040 --> 00:03:45.720\nit does everything that they need.\n\n74\n00:03:45.720 --> 00:03:48.170\nThere is still a place for routers though,\nif you're wondering about that,\n\n75\n00:03:48.170 --> 00:03:49.560\nwhy the heck are we learning\nabout routers then?\n\n76\n00:03:50.580 --> 00:03:55.210\nWith a router, I can plug an MPLS line\ninto it, I can plug a T1 into it, or\n\n77\n00:03:55.210 --> 00:03:59.340\na dial-up line, frame relay, whatever it\nis, all these different WAN technologies,\n\n78\n00:03:59.340 --> 00:04:00.260\nyou can plug it into a router.\n\n79\n00:04:01.430 --> 00:04:03.300\nFirewalls don't come\nwith those interfaces,\n\n80\n00:04:03.300 --> 00:04:05.230\nswitches don't come with those interfaces.\n\n81\n00:04:05.230 --> 00:04:06.410\nYou have to go to the really,\n\n82\n00:04:06.410 --> 00:04:09.310\nreally high end service providers\nswitches to get those kind of interfaces.\n\n83\n00:04:09.310 --> 00:04:11.540\nYour spending hundreds of\nthousands of dollars, but\n\n84\n00:04:11.540 --> 00:04:14.320\non a regular switch you\ndon't have those interfaces.\n\n85\n00:04:14.320 --> 00:04:17.570\nSo, if you're dealing with WAN\nconnections, you're gonna need a router to\n\n86\n00:04:17.570 --> 00:04:20.225\nbe able to handle that interface and\nconvert over to Ethernet.\n\n87\n00:04:20.225 --> 00:04:21.861\nBut if you're doing Ethernet routing,\n\n88\n00:04:21.861 --> 00:04:24.518\nrouting from one Ethernet network\nto another Ethernet network.\n\n89\n00:04:24.518 --> 00:04:29.380\nLayer three switches are the best way\nto do it from a performance standpoint.\n\n90\n00:04:29.380 --> 00:04:31.800\nFrom a security standpoint, firewalls\nare the best way to do it, right?\n\n91\n00:04:31.800 --> 00:04:35.746\nBut from a performance standpoint,\nswitches are the best way to do it because\n\n92\n00:04:35.746 --> 00:04:38.249\nthey can move the data\nfaster than anybody else.\n\n93\n00:04:38.249 --> 00:04:40.771\nSo, that's what we're gonna take\na look at right here in this episode.\n\n94\n00:04:40.771 --> 00:04:44.057\n>> Now Don, you bring up a very great\npoint that something I may have a question\n\n95\n00:04:44.057 --> 00:04:46.140\nmatter or somebody else may.\n\n96\n00:04:46.140 --> 00:04:48.921\nIs there an easy way to tell\nthe difference, like if I have a layer\n\n97\n00:04:48.921 --> 00:04:51.921\ntwo switch versus a layer 3 switch or\ndo I just need to go and find out?\n\n98\n00:04:51.921 --> 00:04:54.359\n>> Well,\nit's usually a licensed feature, right?\n\n99\n00:04:54.359 --> 00:04:58.211\nSo, when you buy a Cisco switch, it's\ngonna come with the IP base feature set or\n\n100\n00:04:58.211 --> 00:04:59.373\nIP universal, right?\n\n101\n00:04:59.373 --> 00:05:02.273\nA lot of them have the universal\nfeature set now and you buy a license,\n\n102\n00:05:02.273 --> 00:05:04.340\nthe license is for the base license.\n\n103\n00:05:04.340 --> 00:05:09.110\nOn an access level switch, like a 29XX or\n\n104\n00:05:09.110 --> 00:05:14.460\na 35XX, 36XX, those switches, they usually\ndon't have layer three functionality.\n\n105\n00:05:14.460 --> 00:05:17.945\nWhich means when you create VLANs on them,\nyou can give VLAN one an IP address but\n\n106\n00:05:17.945 --> 00:05:21.030\nnone of the other interfaces,\nand they can't do any routing.\n\n107\n00:05:21.030 --> 00:05:23.000\nSo, they kinda limits you there.\n\n108\n00:05:23.000 --> 00:05:25.880\nIf you're the one who bought the switch,\n\n109\n00:05:25.880 --> 00:05:28.500\nthen you just look at the license you\nbought and you know if it routes.\n\n110\n00:05:28.500 --> 00:05:30.100\nIf you're not the one\nwho bought the switch,\n\n111\n00:05:30.100 --> 00:05:32.820\nthe command to turn on routing on\na switch is actually really simple.\n\n112\n00:05:32.820 --> 00:05:33.800\nLet me just show you real quick.\n\n113\n00:05:33.800 --> 00:05:35.000\nI'll take one of mine.\n\n114\n00:05:35.000 --> 00:05:38.440\nSo, I've got NYCORE1 and\nlet's say that somebody else bought it.\n\n115\n00:05:38.440 --> 00:05:41.600\nI don't have the purchase records and\nso I don't know what it has.\n\n116\n00:05:41.600 --> 00:05:43.660\nI could do a show licences and\nto figure that out but\n\n117\n00:05:43.660 --> 00:05:46.500\nit's usually easier to just\njump into configuration.\n\n118\n00:05:46.500 --> 00:05:48.410\nI say easier and then I type it wrong.\n\n119\n00:05:48.410 --> 00:05:51.090\nIt's easier to just jump into\nconfiguration and issue one command.\n\n120\n00:05:51.090 --> 00:05:52.670\nIP routing, all right?\n\n121\n00:05:52.670 --> 00:05:55.130\nIf you run that command and it does\nwhat mine just did and you get nothing,\n\n122\n00:05:55.130 --> 00:05:56.330\nthat means it worked.\n\n123\n00:05:56.330 --> 00:05:59.800\nI just turned on routing on this switch,\nall right?\n\n124\n00:05:59.800 --> 00:06:02.880\nBut if you enter it and\nyou get an error then that tells you hey,\n\n125\n00:06:02.880 --> 00:06:06.650\nthis switch doesn't support it and\nyou know it's not layer three capable.\n\n126\n00:06:06.650 --> 00:06:08.360\nI gonna turn it back off for now.\n\n127\n00:06:08.360 --> 00:06:11.300\nSo, that's one easy way\nto tell right there, but\n\n128\n00:06:11.300 --> 00:06:14.510\nyou can also look at your license and\nthat's the best way to find it.\n\n129\n00:06:14.510 --> 00:06:17.050\nWhen you do a show versions you'll\nsee the licence information in there\n\n130\n00:06:17.050 --> 00:06:17.860\nand you can look it up.\n\n131\n00:06:18.950 --> 00:06:23.262\nAll right, let's start the episode with\na quick recap of router on a stick, right?\n\n132\n00:06:23.262 --> 00:06:24.720\nBecause what we covered it in CCENT, but\n\n133\n00:06:24.720 --> 00:06:26.928\nif you didn't watch those shows\nwe're gonna pick it up here.\n\n134\n00:06:26.928 --> 00:06:29.530\nI just wanna show you, it's not\nthe greatest way to do things, but\n\n135\n00:06:29.530 --> 00:06:31.790\nyou are expected to know\nhow to do it on the exam.\n\n136\n00:06:31.790 --> 00:06:34.040\nSo, the way router on a stick\nworks is we take a router.\n\n137\n00:06:34.040 --> 00:06:36.331\nSo, let me switch over\nto one of my routers.\n\n138\n00:06:36.331 --> 00:06:39.514\nI'm gonna jump over to this\nguy which I believe is a 2911.\n\n139\n00:06:39.514 --> 00:06:43.084\nSo, let's find out what\nversion it is real quick.\n\n140\n00:06:43.084 --> 00:06:46.974\nSo, this should be a 2911 and\na router, yeah,\n\n141\n00:06:46.974 --> 00:06:52.231\nthis is a 2900 iOS image and\nit's a 2911 right there, good.\n\n142\n00:06:52.231 --> 00:06:57.874\nSo, I'm on a CISCO 2911, and I'm running\niOS 15 point, was it 15.1 on this one?\n\n143\n00:06:57.874 --> 00:06:59.118\n15.2, right?\n\n144\n00:06:59.118 --> 00:07:04.490\nSo, I've got 15.2 up and going and\nI want this guy to become VLAN aware.\n\n145\n00:07:04.490 --> 00:07:07.970\nAnd the thing is routers\nare not VLAN aware by default.\n\n146\n00:07:07.970 --> 00:07:10.040\nThat's layer two,\nthey don't get involved in it.\n\n147\n00:07:10.040 --> 00:07:13.640\nAnd so,\nI'm not gonna have that functionality\n\n148\n00:07:13.640 --> 00:07:16.060\nout of the box on a normal router.\n\n149\n00:07:16.060 --> 00:07:19.620\nSo, what I need to do is come in and\nteach you about that.\n\n150\n00:07:19.620 --> 00:07:22.370\nSo, I'm gonna take it an interface like,\n\n151\n00:07:22.370 --> 00:07:25.080\nwell let me figure out which\ninterface is run to my switch.\n\n152\n00:07:25.080 --> 00:07:28.270\nRemember on a router if you\ndo a show IP interface brief\n\n153\n00:07:28.270 --> 00:07:31.110\nmost router interfaces\nare disabled by default.\n\n154\n00:07:31.110 --> 00:07:32.800\nSo, when I look at my interfaces,\n\n155\n00:07:32.800 --> 00:07:35.360\nsee they're all administratively\ndown over here.\n\n156\n00:07:35.360 --> 00:07:36.992\nSo, I need to turn them on and\n\n157\n00:07:36.992 --> 00:07:40.953\nI've got this gigabitEthernet0/0\nthat runs through my switch.\n\n158\n00:07:40.953 --> 00:07:45.435\nSo, I'm gonna go into interface gi0/0 and\ndo a no shutdown.\n\n159\n00:07:45.435 --> 00:07:46.890\nI'm gonna turn that interface on.\n\n160\n00:07:46.890 --> 00:07:48.550\nThat's my connection to the switch.\n\n161\n00:07:48.550 --> 00:07:51.240\nI need to know where I'm\nplugged in on the switch.\n\n162\n00:07:51.240 --> 00:07:55.348\nAnd the reason is, on the switch this\nneeds to be configured as a trunk.\n\n163\n00:07:55.348 --> 00:07:57.621\nIf it's not a trunk,\nit's not gonna carry all the VLANs, and\n\n164\n00:07:57.621 --> 00:07:59.433\nI'm not gonna be able to route for\nthem, right?\n\n165\n00:07:59.433 --> 00:08:01.791\nSo, I'll need to get that set up.\n\n166\n00:08:01.791 --> 00:08:05.318\nSo, what I'm gonna do is now,\nlet's run for a second.\n\n167\n00:08:05.318 --> 00:08:09.062\nI should be able do a show cdp\nneighbor and I see NYCORE1.\n\n168\n00:08:09.062 --> 00:08:09.950\nSo I see the switch.\n\n169\n00:08:09.950 --> 00:08:16.710\nOn the router it's Gigabit 0/0 but\non that switch it's Fas 1/0/2.\n\n170\n00:08:16.710 --> 00:08:20.140\nSo that port, I'm gonna need to set up\nas a trunk over on the switch, right?\n\n171\n00:08:20.140 --> 00:08:23.160\nBut let's deal with the router first.\n\n172\n00:08:23.160 --> 00:08:25.957\nSo if I want the router to route for\na couple of VLANs,\n\n173\n00:08:25.957 --> 00:08:28.451\nI need to basically get in here and\nset them up.\n\n174\n00:08:28.451 --> 00:08:30.963\nAnd I've got this interface, gi0/0.\n\n175\n00:08:30.963 --> 00:08:36.502\nNow gi0/0,\nthat is just a regular old interface.\n\n176\n00:08:36.502 --> 00:08:37.719\nI can give it an IP address.\n\n177\n00:08:37.719 --> 00:08:42.623\nSo maybe I give it 192.168.0.1, right?\n\n178\n00:08:42.623 --> 00:08:43.930\nAnd there we go.\n\n179\n00:08:43.930 --> 00:08:46.810\nAssuming I'm running on all my defaults,\nthis is plugged into a switchboard,\n\n180\n00:08:46.810 --> 00:08:49.600\nthe switchboard is gonna default to VLAN1,\nso\n\n181\n00:08:49.600 --> 00:08:52.550\nthis router now has a connection to VLAN1.\n\n182\n00:08:52.550 --> 00:08:56.410\nWell, what if I have VLANs 10,\n20 and 30 also?\n\n183\n00:08:56.410 --> 00:08:57.370\nHow we get connected to them?\n\n184\n00:08:58.470 --> 00:09:00.410\nI really can't by default, right?\n\n185\n00:09:00.410 --> 00:09:02.080\nI just have a regular interface.\n\n186\n00:09:02.080 --> 00:09:06.720\nBut what I need to do is create\nwhat are called sub interfaces.\n\n187\n00:09:06.720 --> 00:09:10.006\nSub interfaces can be mapped to VLANs.\n\n188\n00:09:10.006 --> 00:09:12.039\nSo a moment ago I ran interface gi0/0,\n\n189\n00:09:12.039 --> 00:09:14.719\nthis time I'm gonna run\ngi0/0.and then a number.\n\n190\n00:09:14.719 --> 00:09:18.298\nNow the number can be whatever you want.\n\n191\n00:09:18.298 --> 00:09:21.410\nI think the highest value is\nlike 2 billion and something.\n\n192\n00:09:21.410 --> 00:09:24.426\nBut we normally pick the VLAN number,\nbecause that helps us keep it straight.\n\n193\n00:09:24.426 --> 00:09:27.470\nThe number doesn't actually matter,\nyou can pick whatever number you want.\n\n194\n00:09:27.470 --> 00:09:29.954\nBut really gets hard to remember\nwhich one you picked, so\n\n195\n00:09:29.954 --> 00:09:31.360\nI normally matched the VLAN.\n\n196\n00:09:31.360 --> 00:09:35.810\nIf this is gonna be VLAN 10, I usually\nmake the sub interface 0.10, all right?\n\n197\n00:09:35.810 --> 00:09:41.060\nSo now I've created an all new\nsub-interface, a config-subif and\n\n198\n00:09:41.060 --> 00:09:48.710\nfrom here I need to set encapsulation\ndot1q and tell it the VLAN number.\n\n199\n00:09:48.710 --> 00:09:50.540\nThis number actually does matter.\n\n200\n00:09:50.540 --> 00:09:52.660\nThis needs to be the VLAN number.\n\n201\n00:09:52.660 --> 00:09:54.100\nThe sub-interface number doesn't matter.\n\n202\n00:09:54.100 --> 00:09:55.310\nI can pick whatever I want.\n\n203\n00:09:55.310 --> 00:09:57.260\nBut this number has to match.\n\n204\n00:09:57.260 --> 00:09:59.470\nI normally keep them the same just\nto keep it straight in my head.\n\n205\n00:09:59.470 --> 00:10:04.710\nBut if you're on the exam and they show\nwhere it's 0.10 here and it's 10 down\n\n206\n00:10:04.710 --> 00:10:08.770\nhere, that's okay, as long as the VLAN\nnumber's right, that's what's important.\n\n207\n00:10:08.770 --> 00:10:12.019\nAnd now I can give myself\nan IP address on that network.\n\n208\n00:10:12.019 --> 00:10:15.930\nSo maybe that's 192.168.10\nis that network.\n\n209\n00:10:15.930 --> 00:10:17.990\nSo I'll go in and give it an IP.\n\n210\n00:10:19.330 --> 00:10:19.970\nAnd off I go.\n\n211\n00:10:19.970 --> 00:10:22.080\nAnd if I have VLAN 20,\nI can do the same thing.\n\n212\n00:10:22.080 --> 00:10:24.550\nNow, let's say I don't do\nthat encapsulation, right?\n\n213\n00:10:24.550 --> 00:10:27.120\nI'm gonna do 0.20, and\nI'm gonna skip encapsulation.\n\n214\n00:10:27.120 --> 00:10:30.780\nI'm just gonna go right to ip\naddress 192.168..20.1, and\n\n215\n00:10:30.780 --> 00:10:32.202\nthrow that in there, okay?\n\n216\n00:10:32.202 --> 00:10:38.037\nI'm gonna get an error, because it\ndoesn't know that it's tied to a VLAN.\n\n217\n00:10:38.037 --> 00:10:41.564\nI have to map it to a VLAN first or\nit's not gonna work.\n\n218\n00:10:41.564 --> 00:10:44.875\nSo I'm gonna do\na encapsulation dot1q 20 and\n\n219\n00:10:44.875 --> 00:10:48.700\nthen I'll be able to assign that IP and\nget it on there.\n\n220\n00:10:48.700 --> 00:10:51.810\nI'll just do one more,\nwe can do 50 of them if we were bored and\n\n221\n00:10:51.810 --> 00:10:54.915\nhad a lot of time but we don't,\nso we'll just do three.\n\n222\n00:10:54.915 --> 00:10:59.287\nSo I'm gonna get into another sub\ninterface which I was hoping to use\n\n223\n00:10:59.287 --> 00:11:03.363\nthe history for that but\nit's taking longer than just typing.\n\n224\n00:11:03.363 --> 00:11:08.435\nSo I'll do a 0.30 and\nwe'll set that encapsulation up so\n\n225\n00:11:08.435 --> 00:11:10.529\nthat it is for VLAN 30.\n\n226\n00:11:10.529 --> 00:11:14.454\nAnd we'll give it an IP address\njust like we did the other guys,\n\n227\n00:11:14.454 --> 00:11:16.319\nexcept it will be a 30.1.\n\n228\n00:11:16.319 --> 00:11:22.169\nSo as I did this, it knows that I'm doing\n802.1q for my encapsulation, right?\n\n229\n00:11:22.169 --> 00:11:26.880\nCuz I'm saying dot1q and\nthen the VLAN that I want.\n\n230\n00:11:26.880 --> 00:11:28.960\nAnd I'm creating all these interfaces.\n\n231\n00:11:28.960 --> 00:11:35.420\nSo if I do a, show ip int brief,\nI can see, not only do I have Gi 0.0,\n\n232\n00:11:35.420 --> 00:11:40.360\nbut I've got 10, 20, and 30, and\nthey've all got IPs and they're all up.\n\n233\n00:11:40.360 --> 00:11:44.459\nNow, on 10, 20, and 30, I said,\nencapsulation dot1q, whatever.\n\n234\n00:11:45.520 --> 00:11:48.280\nI didn't do that for gi0/0, did I?\n\n235\n00:11:48.280 --> 00:11:50.800\nIf I do a show running-config and\n\n236\n00:11:50.800 --> 00:11:56.040\nI find it, gi0/0 is configured\nlike a normal old interface, okay?\n\n237\n00:11:56.040 --> 00:11:57.440\nIs that a problem?\n\n238\n00:11:57.440 --> 00:12:02.380\nWell, on these guys that knows to\ntag them, VLAN10, VLAN20 and so on.\n\n239\n00:12:02.380 --> 00:12:04.940\nOn this guy, there's no note to tag.\n\n240\n00:12:04.940 --> 00:12:06.300\nSo what's it gonna do?\n\n241\n00:12:06.300 --> 00:12:07.290\nIt's not gonna tag it.\n\n242\n00:12:07.290 --> 00:12:09.400\nIt's an untagged VLAN.\n\n243\n00:12:09.400 --> 00:12:11.410\nIn an 802.1q trunk, what does that mean?\n\n244\n00:12:12.440 --> 00:12:14.740\nIt means it's the native VLAN.\n\n245\n00:12:14.740 --> 00:12:18.150\nSo any traffic on this interface is gonna\nbe considered part of the native VLAN.\n\n246\n00:12:18.150 --> 00:12:20.500\nAnd on a switch the default is 1, right?\n\n247\n00:12:20.500 --> 00:12:22.650\nSo that's gonna be VLAN1.\n\n248\n00:12:22.650 --> 00:12:25.127\nWe could have changed the native\nVLAN on the switch though.\n\n249\n00:12:25.127 --> 00:12:28.007\nIf the native VLAN on\nthe switch is set to 999,\n\n250\n00:12:28.007 --> 00:12:30.760\nthen this interface is now on 999, right?\n\n251\n00:12:30.760 --> 00:12:35.230\nSo this is your native VLAN, your sub\ninterfaces are the ones that are tagged.\n\n252\n00:12:35.230 --> 00:12:39.130\nThe main parent interface is untagged,\nall right?\n\n253\n00:12:39.130 --> 00:12:41.240\nBut at this point,\nit's now ready to route, right?\n\n254\n00:12:41.240 --> 00:12:46.210\nIf we were to look at its routing table,\nit's got all those routes in its\n\n255\n00:12:46.210 --> 00:12:50.405\nrouting table, it's ready to push\nthem along and get to those networks.\n\n256\n00:12:50.405 --> 00:12:52.430\nOne thing I need to do is\nsend the traffic over here.\n\n257\n00:12:52.430 --> 00:12:54.500\nSo I would jump over to my switch and\n\n258\n00:12:54.500 --> 00:12:59.798\nremember on my switch,\nI'm plugged in on port 1/0/2.\n\n259\n00:12:59.798 --> 00:13:04.680\nSo I'm gonna jump over to that switch,\nand over here all I have to\n\n260\n00:13:04.680 --> 00:13:09.720\ndo is change that interface to a trunk,\nand then it's ready to go, right?\n\n261\n00:13:09.720 --> 00:13:13.784\nSo if I can get into int fa1/0/2,\n\n262\n00:13:13.784 --> 00:13:21.370\nswitchport trunk encap dot1q and\nswitch port mode trunk, right?\n\n263\n00:13:21.370 --> 00:13:22.640\nSo it's now going to trunk.\n\n264\n00:13:22.640 --> 00:13:27.840\nI'm gonna turn off negotiation just\nto be on the safe side on this one.\n\n265\n00:13:27.840 --> 00:13:29.000\nSo I'll do a #switchport nonegotiate.\n\n266\n00:13:29.000 --> 00:13:31.830\nWhen you're connected to a router,\nrouters don't run DTP,\n\n267\n00:13:31.830 --> 00:13:34.040\nthey don't do dynamic trunking protocol.\n\n268\n00:13:34.040 --> 00:13:35.760\nSo that means that if\nI'm still negotiating,\n\n269\n00:13:35.760 --> 00:13:38.560\nI may fail and end up with who knows what.\n\n270\n00:13:38.560 --> 00:13:40.422\nWe could end up with ISL or\nsomething crazy.\n\n271\n00:13:40.422 --> 00:13:43.242\nSo I'm just gonna do a nonegotiate to\nmake sure that doesn't happen, and\n\n272\n00:13:43.242 --> 00:13:44.796\nwe're hard set for dot1q, all right?\n\n273\n00:13:44.796 --> 00:13:47.805\nNow I also need to create some VLANs,\nright?\n\n274\n00:13:47.805 --> 00:13:54.959\nSo I'm gonna create VLAN 10,\nVLAN 20 and VLAN 30 and get those set.\n\n275\n00:13:54.959 --> 00:13:58.683\nSo those are now in place and\nso now if I do a show VLAN,\n\n276\n00:13:58.683 --> 00:14:02.170\nI'll have my three VLANs or\nfour VLANs, right?\n\n277\n00:14:02.170 --> 00:14:04.620\nVLAN 1, 10, 20 and 30.\n\n278\n00:14:04.620 --> 00:14:12.450\nAnd if I do a, show int trunk,\nI'm now trunking on port fa1/0/2.\n\n279\n00:14:12.450 --> 00:14:16.510\nMy native VLAN is VLAN1, so\nthat's gonna be be untagged.\n\n280\n00:14:16.510 --> 00:14:19.390\nAnd then 10, 20 and\n30 can all cross the line also.\n\n281\n00:14:19.390 --> 00:14:22.130\nI don't have any interfaces in 10,\n20 and 30 right now, so\n\n282\n00:14:22.130 --> 00:14:24.030\nthat's why they're not going.\n\n283\n00:14:24.030 --> 00:14:25.510\nI can bring that up real quick.\n\n284\n00:14:25.510 --> 00:14:28.430\nIf I just add another trunk that\nwill bring them up really fast.\n\n285\n00:14:28.430 --> 00:14:32.128\nSo I'll create a fake trunk just\nto bring those things online.\n\n286\n00:14:32.128 --> 00:14:39.270\nIf I go into fa1/0/24,\nI'll do #switchport mode trunk.\n\n287\n00:14:39.270 --> 00:14:44.560\nOop, I got to set the encapsulation first,\nswitchport trunk encap dot1q.\n\n288\n00:14:44.560 --> 00:14:46.824\nI'll set it to a trunk and\nI'll do no negotiate.\n\n289\n00:14:50.849 --> 00:14:52.444\nThere we go.\n\n290\n00:14:52.444 --> 00:14:54.300\nAll right, so once that other trunk is up,\n\n291\n00:14:54.300 --> 00:14:57.380\nnow we'll start moving the various\nVLANs a little better.\n\n292\n00:14:57.380 --> 00:15:01.220\nSo if I'm not going too fast,\nwe should see it here.\n\n293\n00:15:02.220 --> 00:15:04.280\nSometimes if you rush\nyou get stuff like this.\n\n294\n00:15:04.280 --> 00:15:06.465\nSee how port 24 is carrying\nno VLAN right now?\n\n295\n00:15:06.465 --> 00:15:07.633\nIt's because I rushed, I just rushed.\n\n296\n00:15:07.633 --> 00:15:08.992\nSo if we wait a moment that will come in.\n\n297\n00:15:08.992 --> 00:15:14.448\nBut see how port fa1/0/2 is now\ncarrying 1, 10, 20, and 30?\n\n298\n00:15:14.448 --> 00:15:16.190\nThose VLANs can now get to the router.\n\n299\n00:15:16.190 --> 00:15:20.768\nAnd the router is 192.168.0.1 for\nthe this VLAN, and 10.1, and\n\n300\n00:15:20.768 --> 00:15:24.180\n20.1, and 30.1, for each of these VLANs.\n\n301\n00:15:24.180 --> 00:15:28.250\nThat's the default gateway my clients\nare gonna use and now will get routed.\n\n302\n00:15:28.250 --> 00:15:33.880\nBut it's all being routed on fa1/0/2,\nit's only a 100 MB port here.\n\n303\n00:15:33.880 --> 00:15:38.320\nIt's full duplex but every communication\nis gonna eat up the full duplex every\n\n304\n00:15:38.320 --> 00:15:43.610\ntime, so I can only move 100 megabits\nof traffic and that's it, right?\n\n305\n00:15:43.610 --> 00:15:44.200\nThat's a problem.\n\n306\n00:15:45.240 --> 00:15:48.810\nInstead of using that router though,\nI could use my switch.\n\n307\n00:15:48.810 --> 00:15:51.930\nI could have had the switch\nroute between those VLANs.\n\n308\n00:15:51.930 --> 00:15:53.840\nThough the switch is\naware of all the VLANs,\n\n309\n00:15:53.840 --> 00:15:56.720\nit knows about it,\nswitch made the VLANs, right?\n\n310\n00:15:56.720 --> 00:15:58.001\nso I can tell the switch,\n\n311\n00:15:58.001 --> 00:16:02.157\nwhy don't you act as the default gateway\ninstead of that lame router over there.\n\n312\n00:16:02.157 --> 00:16:07.432\nLets get that router out of the picture\nand let the switch do the routing, okay?\n\n313\n00:16:07.432 --> 00:16:13.820\nIf I wanna go that route, well we just\nneed to go in and get the stuff setup.\n\n314\n00:16:13.820 --> 00:16:17.050\nSo, on the switch,\nit already knows about the vlans.\n\n315\n00:16:17.050 --> 00:16:21.210\nIf I do a show vlan,\nit's got them there, they exist, okay?\n\n316\n00:16:21.210 --> 00:16:25.520\nBut, it's not actively\nparticipating in any of the vlans,\n\n317\n00:16:25.520 --> 00:16:27.240\nand what do I mean by that?\n\n318\n00:16:27.240 --> 00:16:32.680\nWell, if you do a show ip int brief and\nlook at the interfaces on your switch.\n\n319\n00:16:32.680 --> 00:16:37.310\nSee how the very first interface\nthat popped up is vlan1.\n\n320\n00:16:37.310 --> 00:16:41.120\nI've got a virtual interface on this\nswitch that is actually a part of vlan1,\n\n321\n00:16:41.120 --> 00:16:42.820\nI'm participating in vlan1.\n\n322\n00:16:42.820 --> 00:16:44.600\nAll right, why?\n\n323\n00:16:45.700 --> 00:16:49.090\nFor management,\nif I wanna SSH into this switch,\n\n324\n00:16:49.090 --> 00:16:53.030\nif I wanna access it's web interface,\nthe switch needs an IP address.\n\n325\n00:16:53.030 --> 00:16:55.510\nAnd that IP address gets\nassigned to Vlan1 by default,\n\n326\n00:16:55.510 --> 00:16:58.300\nbecause that's the management interface,\nright?\n\n327\n00:16:58.300 --> 00:17:03.260\nSo on any switch, layer 2 or layer 3,\nyou've always got a vlan1 interface, and\n\n328\n00:17:03.260 --> 00:17:05.140\nit's designed for\nyou apply the IP address to it.\n\n329\n00:17:05.140 --> 00:17:08.650\nSo way back at the beginning\nof the CCENT series,\n\n330\n00:17:08.650 --> 00:17:12.720\nwhen we assigned an IP address to a\nswitch, that was the interface I got into.\n\n331\n00:17:12.720 --> 00:17:14.160\nBut what about vlan10, vlan20, vlan30?\n\n332\n00:17:14.160 --> 00:17:18.260\nI don't have interfaces on those.\n\n333\n00:17:18.260 --> 00:17:21.908\nAnd if I'm just a layer 2 switch,\nI don't need interfaces on those.\n\n334\n00:17:21.908 --> 00:17:23.660\nAt layer 2, I'm moving data around,\n\n335\n00:17:23.660 --> 00:17:27.310\nthat's fine, I don't need to\nget involved in vlans myself.\n\n336\n00:17:27.310 --> 00:17:29.470\nI'm only doing it here\nbecause of management.\n\n337\n00:17:29.470 --> 00:17:34.710\nBut if I wanna be the router, I do have\nto get involved in each of those vlans.\n\n338\n00:17:34.710 --> 00:17:39.160\nAnd the way we do that is by creating\nthose interfaces that are missing.\n\n339\n00:17:39.160 --> 00:17:42.080\nSo, I can Jump into my configuration.\n\n340\n00:17:42.080 --> 00:17:47.040\nI can get into interface vlan1, and\n\n341\n00:17:47.040 --> 00:17:50.977\nI can give it an IP address,\nso I'm gonna be 192.168.0.2.\n\n342\n00:17:50.977 --> 00:17:55.020\nI gave .1 to that router,\nso I'll do .2 here, right.\n\n343\n00:17:55.020 --> 00:18:00.072\nSo I'm gonna assign that address, and\nso now I'm able to communicate on vlan1.\n\n344\n00:18:00.072 --> 00:18:05.435\nAnd them I'm gonna say, interface VLAN 10,\n\n345\n00:18:05.435 --> 00:18:09.385\nand assign it an IP, all right.\n\n346\n00:18:09.385 --> 00:18:10.915\nAnd I'm gonna get\nmessages popping up here,\n\n347\n00:18:10.915 --> 00:18:15.525\ncuz I just created an all new interface,\nand so that interface is gonna come up.\n\n348\n00:18:15.525 --> 00:18:17.455\nIt's a virtual interface,\nso it'll always be up.\n\n349\n00:18:17.455 --> 00:18:21.685\nWell, not always,\na vlan interface will be up\n\n350\n00:18:21.685 --> 00:18:26.955\nas long as there's at least one port\nin that vlan that's active, right.\n\n351\n00:18:26.955 --> 00:18:29.265\nI've got a trunk, and so\nthere's always gonna be one port.\n\n352\n00:18:29.265 --> 00:18:32.700\nThe trunk is gonna be active, and so\nthe vlan interface is always gonna be up.\n\n353\n00:18:32.700 --> 00:18:37.250\nBut if I didn't have a trunk, and\nno ports were assigned to that vlan\n\n354\n00:18:37.250 --> 00:18:40.510\nthen this would go down, that's the one\ntime that vlan interfaces go down.\n\n355\n00:18:40.510 --> 00:18:42.563\nWell, I guess unless you\nshut it down yourself,\n\n356\n00:18:42.563 --> 00:18:45.079\nyou can do a shut down command on it,\nbut that's cheating.\n\n357\n00:18:45.079 --> 00:18:48.352\nAll right so I got vlan 10,\nI'll create vlan 20 and\n\n358\n00:18:48.352 --> 00:18:51.960\nI'll do the same thing\ngiving it an IP address.\n\n359\n00:18:51.960 --> 00:18:54.065\nAnd these,\nI should've turned on synchronous logging.\n\n360\n00:18:54.065 --> 00:18:55.470\n>> [LAUGH]\n>> Make this is a little less\n\n361\n00:18:55.470 --> 00:18:56.600\nannoying for me.\n\n362\n00:18:56.600 --> 00:18:58.330\nBut there we go, so now we got vlan 20.\n\n363\n00:18:58.330 --> 00:19:03.810\nAnd then lastly we'll do vlan 30,\nand I'll give it an IP.\n\n364\n00:19:05.720 --> 00:19:10.170\nAnd then we'll be active\non all of those vlans.\n\n365\n00:19:10.170 --> 00:19:13.950\nNow those interfaces didn't exist,\nnow they do, okay.\n\n366\n00:19:13.950 --> 00:19:15.540\nWhat I just did is,\n\n367\n00:19:15.540 --> 00:19:20.690\nI created what are called SVIs,\nSwitch Virtual Interfaces, all right.\n\n368\n00:19:20.690 --> 00:19:22.870\nThese vlan1, vlan 10, vlan 20,\n\n369\n00:19:22.870 --> 00:19:26.190\nthey're not real interfaces,\nthey're switch virtual interfaces.\n\n370\n00:19:26.190 --> 00:19:28.565\nThey exist floating\naround in the back plane.\n\n371\n00:19:28.565 --> 00:19:31.590\nSo if you're to look at\nthe phase plate of that switch,\n\n372\n00:19:31.590 --> 00:19:34.570\nyou would not see a vlan 10 port, right.\n\n373\n00:19:34.570 --> 00:19:36.500\nCisco would have to put 4,094 ports-\n>> [LAUGH]\n\n374\n00:19:36.500 --> 00:19:37.630\n>> Across the front of the switch to be\n\n375\n00:19:37.630 --> 00:19:38.820\nable to handle all the vlans, right.\n\n376\n00:19:38.820 --> 00:19:42.260\nSo this is virtual,\nit's floating on the back plane, SVIs.\n\n377\n00:19:42.260 --> 00:19:45.575\nThey used to be called BVIs, Bridge\nVirtual Interfaces, back in the day.\n\n378\n00:19:45.575 --> 00:19:48.205\nNow they're SVI,\nSwitch Virtual Interfaces.\n\n379\n00:19:48.205 --> 00:19:52.785\nIt is important that on a switch,\nyou’ve got all these interfaces and\n\n380\n00:19:52.785 --> 00:19:54.585\nthey’re all layer 2 interfaces.\n\n381\n00:19:54.585 --> 00:19:55.765\nWhen you look at the front of the switch,\n\n382\n00:19:55.765 --> 00:19:59.317\nevery physical port is a layer\n2 interface, all right.\n\n383\n00:20:00.325 --> 00:20:02.495\nYou can convert them to\nlayer 3 if you want,\n\n384\n00:20:02.495 --> 00:20:06.285\nyou could make it where the physical\nport on the switch was a routed port,\n\n385\n00:20:06.285 --> 00:20:09.840\nyou don’t normally do that,\nit’s a pretty uncommon thing, but you can.\n\n386\n00:20:09.840 --> 00:20:14.790\nIf I get into an interface like fa0/5,\nhow about 1/0/5,\n\n387\n00:20:14.790 --> 00:20:18.220\nI've gotta remember my interface.\n\n388\n00:20:18.220 --> 00:20:23.010\nIf I get in that interface\nyou could say no switchport.\n\n389\n00:20:23.010 --> 00:20:26.550\nAnd that will change it from being\nfrom a layer 2 to a layer 3 port,\n\n390\n00:20:26.550 --> 00:20:29.030\nif it's a layer 3 switch,\nit doesn't work on layer 2.\n\n391\n00:20:29.030 --> 00:20:35.409\nIf I try and assign an IP address to this\none, so maybe I want this to be vlan 40,\n\n392\n00:20:35.409 --> 00:20:40.678\nand so\nI'm gonna make it IP address 192.168.40.2.\n\n393\n00:20:40.678 --> 00:20:45.420\nNow, normally, this would work,\nbut here, invalid input.\n\n394\n00:20:45.420 --> 00:20:50.040\nIP is a layer 3 command,\nI'm on a layer 2 port, so what can I do?\n\n395\n00:20:50.040 --> 00:20:54.440\nI can do DHCP snooping and stuff like\nthat, but I can't assign an IP address.\n\n396\n00:20:54.440 --> 00:20:59.900\nBut if I say, no switchport,\nnow it's no longer a layer 2 port,\n\n397\n00:20:59.900 --> 00:21:01.360\nnow it's a layer 3 port.\n\n398\n00:21:01.360 --> 00:21:08.411\nAnd I can say IP address 192.168.40.2 and\nI can assign it, right?\n\n399\n00:21:08.411 --> 00:21:12.045\nSo, the interface went down,\nand it should come back up.\n\n400\n00:21:12.045 --> 00:21:15.320\n[LAUGH] It will only come back up\nif something's plugged into it.\n\n401\n00:21:15.320 --> 00:21:16.950\nI don't think anything's\nplugged into that port.\n\n402\n00:21:16.950 --> 00:21:18.710\nSo it's not gonna come back up for me.\n\n403\n00:21:18.710 --> 00:21:22.380\nBut, I could take,\nI think port one has something in it.\n\n404\n00:21:22.380 --> 00:21:24.620\nLet me jump over to fa1/1.\n\n405\n00:21:24.620 --> 00:21:27.410\nAnd, maybe we'll make this one 50, right?\n\n406\n00:21:27.410 --> 00:21:30.450\nSo we're gonna just kinda keep adding.\n\n407\n00:21:30.450 --> 00:21:32.490\nSo, when I do this,\nthis port's gonna come up now.\n\n408\n00:21:32.490 --> 00:21:36.100\nIt is no longer a switch port,\nit's now a router port.\n\n409\n00:21:36.100 --> 00:21:39.370\nAnd so it's expecting to be plugged\ninto the .50 network somewhere now,\n\n410\n00:21:39.370 --> 00:21:41.200\nthis is not floating on the back plane.\n\n411\n00:21:41.200 --> 00:21:45.430\nThis is the physical port that I\njust converted and bumped over.\n\n412\n00:21:45.430 --> 00:21:50.480\nSo when I do things like,\nshow vlan, ports one and five\n\n413\n00:21:50.480 --> 00:21:54.300\nthat I just messed with, they're not going\nto show up in this list anymore, right?\n\n414\n00:21:54.300 --> 00:21:55.610\nSee how they're gone?\n\n415\n00:21:55.610 --> 00:21:58.190\nPort two is gone because it's a trunk now.\n\n416\n00:21:58.190 --> 00:22:03.120\nPort one and five are gone because I just\ntook them out of the layer 2 fabric, and\n\n417\n00:22:03.120 --> 00:22:06.830\nnow they're a part of the routing\nfabric so they're gone.\n\n418\n00:22:06.830 --> 00:22:10.270\nAnd assuming they're up, which I really\ndon't know if they are up right now.\n\n419\n00:22:10.270 --> 00:22:12.000\nLet's do a show ip int br.\n\n420\n00:22:12.000 --> 00:22:15.170\nAssuming they're up I'll see\nthem in my routing table.\n\n421\n00:22:15.170 --> 00:22:18.860\nSo there's interface 5, and I can see\nit is down, there's nothing plugged in.\n\n422\n00:22:18.860 --> 00:22:19.990\nAnd interface 1 is down also.\n\n423\n00:22:19.990 --> 00:22:21.580\nNothing plugged in there either.\n\n424\n00:22:21.580 --> 00:22:22.740\nSo those two guys are down.\n\n425\n00:22:22.740 --> 00:22:24.710\nSo they're not gonna show up in my\nrouting table while they're down.\n\n426\n00:22:24.710 --> 00:22:26.870\nBut they are now routed interfaces.\n\n427\n00:22:26.870 --> 00:22:31.620\nSo they can be reached and\nrouted to just like normal.\n\n428\n00:22:31.620 --> 00:22:34.980\nIf I run show ip route I should\nsee routes for them, right?\n\n429\n00:22:34.980 --> 00:22:39.610\nWell actually at this stage I probably\nwon't, not just because they're down, but\n\n430\n00:22:39.610 --> 00:22:43.160\nbecause I'm not actually\na layer 3 switch right now.\n\n431\n00:22:43.160 --> 00:22:47.110\nLayer 3 functionality on most\nswitches is disabled by default.\n\n432\n00:22:47.110 --> 00:22:48.900\nI've gotta turn it on.\n\n433\n00:22:48.900 --> 00:22:54.190\nI got myself set up, I created interfaces\nvlan 1, 10, 20, 30 and so on, right?\n\n434\n00:22:54.190 --> 00:22:59.480\nWhen I did a show ip interface brief,\nyou guys probably noticed that right up\n\n435\n00:22:59.480 --> 00:23:01.160\ntowards the top,\nthere's vlan 1, 10, 20, 30.\n\n436\n00:23:01.160 --> 00:23:04.210\nI've got all these interfaces ready to go,\nright?\n\n437\n00:23:04.210 --> 00:23:06.320\nBut when I run a show ip\nroute they're not there.\n\n438\n00:23:06.320 --> 00:23:09.140\nThose guys aren't down,\nthey should show up in my routing table.\n\n439\n00:23:09.140 --> 00:23:13.800\nIt's that I'm not routing right now,\nI've got layer 3 functionality disabled.\n\n440\n00:23:13.800 --> 00:23:16.090\nSo I need to get back\ninto my configuration and\n\n441\n00:23:16.090 --> 00:23:21.030\nissue the command I showed you at the\nbeginning of the show which is ip routing.\n\n442\n00:23:21.030 --> 00:23:23.950\nAs soon as I issue that command,\nI'm now a router.\n\n443\n00:23:23.950 --> 00:23:26.550\nI'm enabling the routing\nmagic on the motherboard.\n\n444\n00:23:26.550 --> 00:23:31.190\nIt's enabled that processing, that part\nof the software is up and running, and\n\n445\n00:23:31.190 --> 00:23:33.050\nnow I'm gonna maintain the routing table.\n\n446\n00:23:33.050 --> 00:23:36.280\nAs long as the interfaces are up,\nI'll route between them.\n\n447\n00:23:36.280 --> 00:23:39.150\nSo if I do a show IP route now,\n\n448\n00:23:39.150 --> 00:23:43.770\nnow I have a real life honest to\ngoodness routing table right here.\n\n449\n00:23:43.770 --> 00:23:48.130\nAnd I don't see 192.168.40 and 50 because\ntheir interfaces are down but 10,\n\n450\n00:23:48.130 --> 00:23:51.230\n20 and 30 they're all up.\n\n451\n00:23:51.230 --> 00:23:55.339\nAnd so I see, hey I've got a route\nto get to one 192.168.10.0.\n\n452\n00:23:55.339 --> 00:23:58.550\nI've got a rout to get 192.168.20.0.\n\n453\n00:23:58.550 --> 00:24:00.186\nSo now if I want to take a client and\n\n454\n00:24:00.186 --> 00:24:02.597\nset them with me is the default gateway,\nright.\n\n455\n00:24:02.597 --> 00:24:05.885\nYou see the switch has a a local IP\nin everyone of these networks, so\n\n456\n00:24:05.885 --> 00:24:10.414\nIf somebody's on VLAN 10 and I set their\ndefault gateway to 192.168.10.2 or\n\n457\n00:24:10.414 --> 00:24:14.240\non VLAN 30 and I set their\ndefault gateway to 192.168.30.2.\n\n458\n00:24:14.240 --> 00:24:19.050\nAs soon as I set that, they'll now be\nable to get to all these VLANs too.\n\n459\n00:24:19.050 --> 00:24:21.060\nIt'll get routed through the switch and\n\n460\n00:24:21.060 --> 00:24:24.330\nit's gonna happen on the back plane,\nright?\n\n461\n00:24:24.330 --> 00:24:26.210\nThis is a low bandwidth switch.\n\n462\n00:24:26.210 --> 00:24:27.920\nIt's got 24 ports.\n\n463\n00:24:27.920 --> 00:24:30.380\n48 ports.\nBut they're 100 megabit ports.\n\n464\n00:24:30.380 --> 00:24:30.882\nRight?\n\n465\n00:24:30.882 --> 00:24:34.560\nThe back plane on\nthe switch is 32 gigabits.\n\n466\n00:24:34.560 --> 00:24:35.110\n32 gigs.\n\n467\n00:24:35.110 --> 00:24:41.660\nSo if I have 4,800 megabit ports,\nI'm not gonna push more than 4.8 gigabits.\n\n468\n00:24:41.660 --> 00:24:45.540\nThat means every port can\nbe running full tilt and\n\n469\n00:24:45.540 --> 00:24:48.740\nhave all access to its bandwidth\nwhile it’s being routed.\n\n470\n00:24:48.740 --> 00:24:50.250\nVersus router on a stick,\n\n471\n00:24:50.250 --> 00:24:55.420\nwhere everybody’s sharing that one 100\nmegabit connection up to that router and\n\n472\n00:24:55.420 --> 00:24:58.310\nback again, even if I went to gigabit,\nit doesn’t solve the problem.\n\n473\n00:24:58.310 --> 00:25:00.410\nRight now,\nyeah I’ve got more bandwidth but\n\n474\n00:25:00.410 --> 00:25:03.000\nmy clients can just\nconsume that the same way.\n\n475\n00:25:03.000 --> 00:25:05.150\nThis, is a great solution.\n\n476\n00:25:05.150 --> 00:25:10.770\nSo if you have a 4500 or a 6500 series\nswitch, one of the really big ones, right?\n\n477\n00:25:10.770 --> 00:25:15.290\nYou pop that in the center of your network\nand it may have 172 gigabit of bandwidth,\n\n478\n00:25:15.290 --> 00:25:18.010\ncuz you've got some 40 gig links or\n10 gig links.\n\n479\n00:25:18.010 --> 00:25:20.020\nAnd it can do the routing for\n\n480\n00:25:20.020 --> 00:25:23.570\nyou on your LAN and\ndo it faster than any other option.\n\n481\n00:25:23.570 --> 00:25:25.970\nIt really is the greatest\nsolution to doing this.\n\n482\n00:25:25.970 --> 00:25:27.710\nI don't even consider router on a stick.\n\n483\n00:25:27.710 --> 00:25:30.891\nRouter on a stick is really just\na learning exercise of recognizing\n\n484\n00:25:30.891 --> 00:25:32.650\ndifferent VLANs and that's it.\n\n485\n00:25:32.650 --> 00:25:36.010\nIn production you'll never use router\non stick unless your company is just\n\n486\n00:25:36.010 --> 00:25:39.850\ncompletely broke and\nrefuses to invest at all in IT.\n\n487\n00:25:39.850 --> 00:25:43.530\nIf you even have 50 bucks\navailable you can go on eBay and\n\n488\n00:25:43.530 --> 00:25:44.710\nget a layer three switch.\n\n489\n00:25:44.710 --> 00:25:49.210\nSo these are so common today that this is\ngonna be the solution for LAN routing.\n\n490\n00:25:49.210 --> 00:25:51.440\nFor routing within your\nlocal area network.\n\n491\n00:25:51.440 --> 00:25:52.950\nWhen you get to WAN routing,\nit's a different story.\n\n492\n00:25:52.950 --> 00:25:56.565\nYou're still gonna need routers there\nbecause of the different WAN media that's\n\n493\n00:25:56.565 --> 00:26:00.400\nout there, you've got to have media-type\nconverters and routers do that, right?\n\n494\n00:26:00.400 --> 00:26:01.850\nSwitches don't.\n\n495\n00:26:01.850 --> 00:26:03.350\nAnd firewalls get in the mix too.\n\n496\n00:26:03.350 --> 00:26:06.230\nBut if we can have our switch\nhandling all our land routing, and\n\n497\n00:26:06.230 --> 00:26:09.940\ndoing it on the back plane,\nit's gonna be super fast, super efficient.\n\n498\n00:26:09.940 --> 00:26:11.540\nAnd it is the way to go.\n\n499\n00:26:11.540 --> 00:26:15.580\nI think every environment that I've\nworked in in the last, probably, eight or\n\n500\n00:26:15.580 --> 00:26:18.470\nnine years has used layer\nthree switches to some extent,\n\n501\n00:26:18.470 --> 00:26:21.260\nto be able to power their\ndistribution portion of the network.\n\n502\n00:26:21.260 --> 00:26:24.360\nYou know, you've got your core,\nwhere you typically have routers.\n\n503\n00:26:24.360 --> 00:26:27.600\nYou have your distribution which is\nwhere layer 3 switches come in and\n\n504\n00:26:27.600 --> 00:26:29.840\nthen you have your access where\nit's just layer 2 switches.\n\n505\n00:26:29.840 --> 00:26:33.650\nThat's the three tiers you have\nin a fully fleshed-out network.\n\n506\n00:26:33.650 --> 00:26:37.950\nYou might have collapsed some of that\ndown so your core and distribution get\n\n507\n00:26:37.950 --> 00:26:41.450\ncombined and it's just one big layer\n3 switch, something like that.\n\n508\n00:26:41.450 --> 00:26:43.880\nOr you combine your distribution and\naccess.\n\n509\n00:26:43.880 --> 00:26:46.290\nIt just kind of depends\non your environment.\n\n510\n00:26:46.290 --> 00:26:50.740\nBut using layer three routing like this\nwith VLANs really is the best solution.\n\n511\n00:26:50.740 --> 00:26:54.320\nAny other way of routing VLANs is\nusually just gonna be inefficient.\n\n512\n00:26:54.320 --> 00:26:56.900\nUnless you just happen to\nhave a physical router\n\n513\n00:26:56.900 --> 00:26:59.920\nwith enough interfaces to give\na physical interface to each VLAN.\n\n514\n00:26:59.920 --> 00:27:01.540\nThat would kind of be the exception.\n\n515\n00:27:01.540 --> 00:27:05.750\nBut, if you have 50 VLANs you'd have\nto get a router with 50 interfaces.\n\n516\n00:27:05.750 --> 00:27:07.790\nThose are really expensive, right?\n\n517\n00:27:07.790 --> 00:27:11.390\nIf you have three VLANs, a router with\nthree interfaces, it's not so bad.\n\n518\n00:27:11.390 --> 00:27:12.700\n50, that becomes a problem.\n\n519\n00:27:12.700 --> 00:27:16.600\nHere, because they're virtual interfaces,\nI just spawn the additional interfaces.\n\n520\n00:27:16.600 --> 00:27:19.190\nNo big deal,\nI can have a thousand of them.\n\n521\n00:27:19.190 --> 00:27:21.790\nAnd now they're up and running,\nand they're doing their job.\n\n522\n00:27:21.790 --> 00:27:23.860\nThe routing table starts to get bigger,\nbut not that big.\n\n523\n00:27:23.860 --> 00:27:27.220\nA thousand routes is really not a big\ndeal, even for a switch like this.\n\n524\n00:27:27.220 --> 00:27:30.760\nFor a router they can hundreds of\nthousands of routes, so it really just\n\n525\n00:27:30.760 --> 00:27:33.392\nisn't that big of a deal anymore and\nthe switches do a great job with it.\n\n526\n00:27:33.392 --> 00:27:37.400\nAll right so getting this configured,\nlet's kind of recap what I did.\n\n527\n00:27:37.400 --> 00:27:39.640\nReally I just did two things.\n\n528\n00:27:39.640 --> 00:27:41.220\nI did the IP routing command.\n\n529\n00:27:41.220 --> 00:27:43.320\nSo if we take a look at my running config,\n\n530\n00:27:43.320 --> 00:27:47.040\nI did IP routing to enable\nrouting on the system.\n\n531\n00:27:47.040 --> 00:27:49.500\nAnd you can see it right there\nwasn't a default command.\n\n532\n00:27:49.500 --> 00:27:53.180\nSo now, is showing in a config,\nit was turn off by default.\n\n533\n00:27:53.180 --> 00:27:57.817\nAnd then after that I just created the\nVLAN interfaces which are way down here at\n\n534\n00:27:57.817 --> 00:28:00.040\nthe bottom if I jump down.\n\n535\n00:28:00.040 --> 00:28:04.060\nI just created VLAN interfaces and at that\npoint if somebody uses me as the default\n\n536\n00:28:04.060 --> 00:28:06.390\ngateway I'll now route right between them.\n\n537\n00:28:06.390 --> 00:28:07.700\nSo, it's as simple as that.\n\n538\n00:28:07.700 --> 00:28:09.160\nWe might want to go further.\n\n539\n00:28:09.160 --> 00:28:12.930\nYou might want to configure things like\ndynamic routing protocols, you want RIP or\n\n540\n00:28:12.930 --> 00:28:14.740\nOSPF or EIGRP.\n\n541\n00:28:14.740 --> 00:28:16.960\nWell now's where things\nstart to get a little ify.\n\n542\n00:28:16.960 --> 00:28:19.570\nIt's a great router for\nmoving stuff between VLANs, but\n\n543\n00:28:19.570 --> 00:28:21.320\nit's not a fully featured router.\n\n544\n00:28:21.320 --> 00:28:23.620\nSo there's some things that a router\ncan do that a switch can't.\n\n545\n00:28:23.620 --> 00:28:24.990\nFor example, NAT.\n\n546\n00:28:24.990 --> 00:28:26.130\nNetwork Address Translation.\n\n547\n00:28:26.130 --> 00:28:28.870\nI don't think I've ever seen\na Cisco switch that could do NAT.\n\n548\n00:28:28.870 --> 00:28:30.250\nAny of them,\neven the really expensive ones.\n\n549\n00:28:30.250 --> 00:28:31.200\nThey just don't do NAT.\n\n550\n00:28:31.200 --> 00:28:32.950\nYou need a router for that, right?\n\n551\n00:28:34.590 --> 00:28:38.490\nIf you wanna do BGP, Border Gateway\nProtocol, that's an exterior protocol,\n\n552\n00:28:38.490 --> 00:28:39.460\nyou need routers for that.\n\n553\n00:28:39.460 --> 00:28:40.210\nMost switches won't,\n\n554\n00:28:40.210 --> 00:28:42.310\nI have the say most because there\nare a few switches that will.\n\n555\n00:28:42.310 --> 00:28:46.540\nSo there are limitations right,\nit's not free reign but\n\n556\n00:28:46.540 --> 00:28:51.790\nif I want to get in here and configure\nRIP it's got the RIP functionally.\n\n557\n00:28:51.790 --> 00:28:57.020\nSo I can come in and get it set up just\nlike I would a regular router, right,\n\n558\n00:28:57.020 --> 00:29:02.680\nand I can punch in the networks\nthat I want to route for,\n\n559\n00:29:02.680 --> 00:29:05.260\nand now I'm gonna start running RIP.\n\n560\n00:29:05.260 --> 00:29:10.450\nAnd so now I can exchange dynamic\nroutes between my physical routers and\n\n561\n00:29:10.450 --> 00:29:13.240\nmy layer three switches, and\nnow they're participating.\n\n562\n00:29:13.240 --> 00:29:14.660\nIt's just another router\nin the environment.\n\n563\n00:29:14.660 --> 00:29:17.990\nSo, kind of neat that we can do that and\nreally start to leverage the features.\n\n564\n00:29:17.990 --> 00:29:19.630\nJust know that not everything is there.\n\n565\n00:29:19.630 --> 00:29:22.040\nYou might see some routing\nprotocols that are missing.\n\n566\n00:29:22.040 --> 00:29:23.740\nSo if I do router?\n\n567\n00:29:23.740 --> 00:29:26.050\nI can see that I've got EIGRP, OSPF.\n\n568\n00:29:26.050 --> 00:29:28.570\nThis one actually dose have BGP and RIP.\n\n569\n00:29:28.570 --> 00:29:31.818\nSo this one's got them all but\nsome will have limits.\n\n570\n00:29:31.818 --> 00:29:35.590\nThe other thing is be careful about IPV6\nbecause a lot of Cisco switches today,\n\n571\n00:29:35.590 --> 00:29:37.470\nthey all support IPV6.\n\n572\n00:29:37.470 --> 00:29:40.110\nBut they don't all support IPV6 routing.\n\n573\n00:29:40.110 --> 00:29:43.940\nSo if you run IPV6,\nthis one doesn't have it.\n\n574\n00:29:43.940 --> 00:29:46.290\nThe command is not IPV6 routing,\n\n575\n00:29:46.290 --> 00:29:52.100\nit's IPV6 unicast-routing, and\nthat command is not here in this one.\n\n576\n00:29:52.100 --> 00:29:53.950\nThis switch doesn't support it, right?\n\n577\n00:29:53.950 --> 00:29:55.930\nSo IPV6 is a whole different world and\n\n578\n00:29:55.930 --> 00:29:58.950\nsometimes things,\nneeded it to be licensed.\n\n579\n00:29:58.950 --> 00:30:02.240\nWe need an improved iOS or that may just\nnot even be an option for this switch,\n\n580\n00:30:02.240 --> 00:30:04.930\nI might have to go to a completely\ndifferent switch to get that IPV6 port.\n\n581\n00:30:04.930 --> 00:30:08.770\nSo be aware of that too this,\nis not a fully featured router,\n\n582\n00:30:08.770 --> 00:30:12.910\nit's a subset just what's\nneeded to route for a LAN.\n\n583\n00:30:12.910 --> 00:30:14.720\n>> Now Don I have a question.\n\n584\n00:30:14.720 --> 00:30:17.700\nIf I now have lets say two or\nthree switches.\n\n585\n00:30:17.700 --> 00:30:20.720\nI can just now use this one\nthat we've turned into that\n\n586\n00:30:20.720 --> 00:30:22.620\nlayer three router essentially.\n\n587\n00:30:22.620 --> 00:30:26.620\nAnd that can become my default gateway\neven if actually connecting in VLAN 30\n\n588\n00:30:26.620 --> 00:30:30.732\nfrom a different switch and don't have to\nworry about configuring it on each switch.\n\n589\n00:30:30.732 --> 00:30:31.480\n>> Right, yeah.\n\n590\n00:30:31.480 --> 00:30:33.520\n>> Okay.\n>> I might have 30 other switches and\n\n591\n00:30:33.520 --> 00:30:36.810\nthey've all got VLAN 30 present on them,\nright?\n\n592\n00:30:36.810 --> 00:30:39.420\nRemember that the VLAN is layer two so\nwhen somebody gets set for\n\n593\n00:30:39.420 --> 00:30:41.970\nthe default gateway,\nthey send out an ARP broadcast.\n\n594\n00:30:41.970 --> 00:30:43.248\nHey I need to find my gateway.\n\n595\n00:30:43.248 --> 00:30:44.900\nAnd that ARP broadcast\nwould be on VLAN 30 and\n\n596\n00:30:44.900 --> 00:30:48.270\nit would jump across the switches until\nit hit this one to find its gateway.\n\n597\n00:30:48.270 --> 00:30:50.200\nAnd it'd be able to use that gateway and\nget out of there.\n\n598\n00:30:50.200 --> 00:30:53.280\nSo you really only need\none layer three switch.\n\n599\n00:30:53.280 --> 00:30:55.720\nUnless you're worried about\nbandwidth on your trunks,\n\n600\n00:30:55.720 --> 00:30:57.930\nright then you might want to split and\nhave more than one.\n\n601\n00:30:57.930 --> 00:31:00.780\nBecause otherwise all of your routed\ntraffic has to come through this\n\n602\n00:31:00.780 --> 00:31:01.500\none switch.\n\n603\n00:31:01.500 --> 00:31:03.490\nSo aside from bandwidth concerns,\n\n604\n00:31:03.490 --> 00:31:06.760\nyou usually just need one layer three\nswitch to handle all the routing for\n\n605\n00:31:06.760 --> 00:31:09.749\nyou VLANs, you get it in place,\nand it does work really well.\n\n606\n00:31:11.080 --> 00:31:15.190\nWell, Don, thank you again for\nintroducing us to this concept again.\n\n607\n00:31:15.190 --> 00:31:19.410\nWe did see it in the CCENT show when\nwe talked about interVLAN routing.\n\n608\n00:31:19.410 --> 00:31:22.960\nBut now we've also seen it in\nterms of layer three switching and\n\n609\n00:31:22.960 --> 00:31:27.070\nhow to get that configured to also allow\nus to do interVLAN routing as well.\n\n610\n00:31:27.070 --> 00:31:31.850\nKey phrase that I know that I miss is\nsetting it all up, and Don actually showed\n\n611\n00:31:31.850 --> 00:31:34.650\nus that, that it wasn't actually\nshowing up in the routing table,\n\n612\n00:31:34.650 --> 00:31:37.450\nit was missing the IP routing\ncommand right at the beginning.\n\n613\n00:31:37.450 --> 00:31:39.390\nMake sure you turn that one on,\nit's a great reminder,\n\n614\n00:31:39.390 --> 00:31:42.990\nand probably an easy exam question that\nyou might wanna think about as well.\n\n615\n00:31:42.990 --> 00:31:46.170\nAnd that's a great place for\nus to also end this episode then.\n\n616\n00:31:46.170 --> 00:31:47.550\nSigning off for ITProTV.\n\n617\n00:31:47.550 --> 00:31:48.930\nI've been your host, Ronnie Wong.\n\n618\n00:31:48.930 --> 00:31:49.840\n>> And I'm Don Pezet.\n\n619\n00:31:49.840 --> 00:31:53.790\n>> You wanna stay tuned right here for\nmore Cisco CCNA Routing and\n\n620\n00:31:53.790 --> 00:31:54.805\nSwitching shows.\n\n621\n00:31:54.805 --> 00:32:03.890\n[SOUND]\n\n",
          "vimeoId": "178518287"
        },
        {
          "description": "In this episode, Ronnie and Don review general routing protocol concepts as preparation for routing protocol configurations.  They describe the scope of routing protocols into IGP and EGP.   They take the time to also break down the IGP into two classifications as well:  Distance vector and Link State protocols.   Both IGP determine routes with an autonomous system (AS) based on different metrics:  Distance Vector uses hop count and Link-State uses bandwidth.  They even mention Advanced DV that uses a composite of bandwidth and delay.   The guys also introduce the EGP routing protocol Border Gateway Protocol (BGP).  They describe it’s functionality and context.",
          "length": "2011",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/cisco-ccna200105/cisco-ccna200105-2-2-routing_protocols-082216-1.jpg",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/cisco-ccna200105/cisco-ccna200105-2-2-routing_protocols-082216-1-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/cisco-ccna200105/cisco-ccna200105-2-2-routing_protocols-082216-1-sm.jpg",
          "title": "Routing Protocols",
          "transcript": "WEBVTT\n\n1\n00:00:00.000 --> 00:00:10.000\n[MUSIC]\n\n2\n00:00:12.490 --> 00:00:15.580\nWelcome to another great\nepisode right here on ITProTV.\n\n3\n00:00:15.580 --> 00:00:17.070\nI'm your host Ronnie Wong.\n\n4\n00:00:17.070 --> 00:00:20.990\nAnd you're watching the CCNA Routing and\nSwitching show, where we're about to take\n\n5\n00:00:20.990 --> 00:00:24.638\na look at routing protocols and some of\nthe different things that we have to learn\n\n6\n00:00:24.638 --> 00:00:27.869\nthere before jumping into\nthe configuring these routing protocols.\n\n7\n00:00:27.869 --> 00:00:29.453\nAnd who's better to help than Mr.\nDon Pezet?\n\n8\n00:00:29.453 --> 00:00:30.385\nDon, welcome back.\n\n9\n00:00:30.385 --> 00:00:31.441\n&gt;&gt; Thank you for\nwelcoming me back, Ronnie.\n\n10\n00:00:31.441 --> 00:00:34.240\nYou know, I'm kind of excited to jump into\nthis cuz we're switching years a bit.\n\n11\n00:00:34.240 --> 00:00:36.390\nFor those who have been\nwatching since episode one,\n\n12\n00:00:36.390 --> 00:00:38.930\nyou know that we've really been\nfocusing on switching so far.\n\n13\n00:00:38.930 --> 00:00:41.440\nAnd sure we got a little bit in\nthe layer three switching, but\n\n14\n00:00:41.440 --> 00:00:43.570\nit's really been all switches.\n\n15\n00:00:43.570 --> 00:00:46.390\nAnd the name of the exam\nis the CCNA routing\n\n16\n00:00:46.390 --> 00:00:47.010\nand switching,\n&gt;&gt; [LAUGH]\n\n17\n00:00:47.010 --> 00:00:48.340\n&gt;&gt; So we kinda need to do routing, and\n\n18\n00:00:48.340 --> 00:00:49.150\nthis is that point.\n\n19\n00:00:49.150 --> 00:00:53.350\nSo we're gonna double back and do a quick\noverview of a lot of what you learned in\n\n20\n00:00:53.350 --> 00:00:55.830\nthe CCENT show about\ngeneral routing protocols.\n\n21\n00:00:55.830 --> 00:00:58.940\nBut we're gonna go a little bit\nfurther than we did before.\n\n22\n00:00:58.940 --> 00:01:03.497\nFor the CCENT, they really just want you\nto have basic understanding of routing\n\n23\n00:01:03.497 --> 00:01:07.247\nprotocols, so basic that we even\nleft at least one major one out.\n\n24\n00:01:07.247 --> 00:01:09.766\nIn CCNA, we need to know those.\n\n25\n00:01:09.766 --> 00:01:11.970\nSo we're going to go a little\nfurther than we did before.\n\n26\n00:01:11.970 --> 00:01:13.970\nIn this episode, we're going to talk\nabout the routing protocols and\n\n27\n00:01:13.970 --> 00:01:15.650\nhow they work and\nwhat their functions are.\n\n28\n00:01:15.650 --> 00:01:19.774\nAnd then in our next couple of episodes,\nwe're gonna see implementing two really\n\n29\n00:01:19.774 --> 00:01:22.641\nexciting protocols,\nthe ones you use in real life land,\n\n30\n00:01:22.641 --> 00:01:25.970\nwhich are OSPF and EIGRP,\nboth very powerful protocols.\n\n31\n00:01:25.970 --> 00:01:29.660\nBut before we jump into the power, let's\nmake sure we've got our foundations and\n\n32\n00:01:29.660 --> 00:01:30.680\nour basics.\n\n33\n00:01:30.680 --> 00:01:34.520\nSo the first thing I wanna talk about is\nthat Cisco classifies routing protocols\n\n34\n00:01:34.520 --> 00:01:38.560\ninto two categories,\nthere's IGPs and EGPs.\n\n35\n00:01:38.560 --> 00:01:43.620\nThat's interior gateway protocols and\nexterior gateway protocols.\n\n36\n00:01:43.620 --> 00:01:46.850\nNow both of them have gateway protocol in\nthe name, so let's start with that, right?\n\n37\n00:01:46.850 --> 00:01:50.480\nA gateway protocol, that's,\na gateway is a router, right.\n\n38\n00:01:50.480 --> 00:01:54.680\nWhen a computer needs to get to a network\nthat is not directly plugged into,\n\n39\n00:01:54.680 --> 00:01:55.990\nit needs a router.\n\n40\n00:01:55.990 --> 00:02:00.280\nIt needs a gateway to be able to get to,\nto find those other networks.\n\n41\n00:02:00.280 --> 00:02:02.690\nNow depending on the system you use,\nit could have a different name.\n\n42\n00:02:02.690 --> 00:02:05.620\nIn our routers we see it as\nthe gateway of last resort.\n\n43\n00:02:05.620 --> 00:02:09.090\nOn a Windows machine,\nyou see it as a default gateway.\n\n44\n00:02:09.090 --> 00:02:11.910\nOn a Linux box,\nyou see it as a default router.\n\n45\n00:02:11.910 --> 00:02:15.350\nIt just depends on the device you're\nusing what they want to call it.\n\n46\n00:02:15.350 --> 00:02:16.140\nI'm on a Mac right now and\n\n47\n00:02:16.140 --> 00:02:18.150\nI actually can't remember what\nApple calls it on theirs.\n\n48\n00:02:18.150 --> 00:02:20.130\nBut they all have a different name for\n\n49\n00:02:20.130 --> 00:02:22.220\nwhat is effectively the same technology,\nright?\n\n50\n00:02:22.220 --> 00:02:25.480\nIt's how if you're on\na network like this network,\n\n51\n00:02:25.480 --> 00:02:27.240\nhow do you find that router to go through?\n\n52\n00:02:27.240 --> 00:02:30.430\nLike I'm curious now what Apple\ncalls theirs when they come in.\n\n53\n00:02:30.430 --> 00:02:31.320\nThey just call it a router.\n\n54\n00:02:31.320 --> 00:02:32.772\nRight so\nsee how they're calling it a router.\n\n55\n00:02:32.772 --> 00:02:36.936\nSo the terms router and\ngateway are basically interchangeable, and\n\n56\n00:02:36.936 --> 00:02:39.880\nmy computer is on 10.1.230.21, and\n\n57\n00:02:39.880 --> 00:02:44.637\nif I wanna get out to the internet,\nI only know how to get to 10.1.230.\n\n58\n00:02:44.637 --> 00:02:48.910\nAny other network I don't know how to get\nto, I'm going to rely on this router.\n\n59\n00:02:48.910 --> 00:02:51.430\nNow that means I'm assuming that that\n\n60\n00:02:51.430 --> 00:02:54.170\nrouter knows how to get to\nall the other networks.\n\n61\n00:02:54.170 --> 00:02:58.840\nSo if I'm on the 192.168.0 network and\nI go to router A,\n\n62\n00:02:58.840 --> 00:03:03.760\nI am assuming router A knows how to\nget all the way over to 192.168.1.0,\n\n63\n00:03:03.760 --> 00:03:08.190\nand how to get to that\nnetwork on the other end.\n\n64\n00:03:08.190 --> 00:03:10.220\nWell, how does router A know that?\n\n65\n00:03:11.250 --> 00:03:14.130\nWith an interior gateway routing protocol,\nright?\n\n66\n00:03:14.130 --> 00:03:17.040\nSo the gateway protocol,\nthat's the routers and\n\n67\n00:03:17.040 --> 00:03:20.250\ninterior gateway routing protocol,\nthe routers talk to each other.\n\n68\n00:03:20.250 --> 00:03:23.660\nThey talk to each other and\nthey exchange information, they share.\n\n69\n00:03:23.660 --> 00:03:27.530\nAnd in this CCENT,\nwe saw that with the RIP protocol,\n\n70\n00:03:27.530 --> 00:03:29.250\nthe Router Information Protocol.\n\n71\n00:03:29.250 --> 00:03:32.250\nRIP as in interior gateway protocol.\n\n72\n00:03:32.250 --> 00:03:35.180\nThe key characteristic of\nan interior gateway protocol\n\n73\n00:03:35.180 --> 00:03:37.510\nis that you control all the equipment.\n\n74\n00:03:37.510 --> 00:03:39.460\nThis is all your stuff, right?\n\n75\n00:03:39.460 --> 00:03:42.550\nSo if you're a company, you're an\nenterprise, you've got a home office and\n\n76\n00:03:42.550 --> 00:03:46.910\nbranch offices in several cities,\nyou control all of the routers.\n\n77\n00:03:46.910 --> 00:03:50.420\nYou would run an interior gateway\nprotocol on those routers so\n\n78\n00:03:50.420 --> 00:03:53.510\nthey could exchange the routes and\nlearn about how to get there.\n\n79\n00:03:53.510 --> 00:03:57.440\nThe other characteristic about an interior\ngateway protocol is that typically\n\n80\n00:03:57.440 --> 00:04:01.380\nevery router knows all\nthe routes that are available,\n\n81\n00:04:01.380 --> 00:04:03.100\nall the different networks\nthat are out there.\n\n82\n00:04:03.100 --> 00:04:05.780\nIt's gonna know about each one\nbecause they can all just quickly\n\n83\n00:04:05.780 --> 00:04:06.780\nexchange information.\n\n84\n00:04:06.780 --> 00:04:09.340\nThere'll be a number of redundant\npaths might be possible.\n\n85\n00:04:09.340 --> 00:04:12.380\nAnd so they'll learn about\nthe different paths and make decisions.\n\n86\n00:04:12.380 --> 00:04:15.190\nInterior protocols are really workhorses.\n\n87\n00:04:15.190 --> 00:04:18.530\nThey are how we get our data\nmoving between system to system.\n\n88\n00:04:19.760 --> 00:04:23.830\nThe other side of things is\nan exterior gateway protocol.\n\n89\n00:04:23.830 --> 00:04:28.350\nAnd an exterior gateway protocol\nlooks a little bit more like this,\n\n90\n00:04:28.350 --> 00:04:32.330\na little messy where the network\ngets divided up into pieces and\n\n91\n00:04:32.330 --> 00:04:34.890\nthe routers are all\ninterconnected different ways.\n\n92\n00:04:34.890 --> 00:04:38.500\nYou'll see this topology is actually very\nsimilar to what I drew in the other slide.\n\n93\n00:04:38.500 --> 00:04:41.480\nBut here it just got a lot\nmore complexity to it.\n\n94\n00:04:41.480 --> 00:04:45.640\nWhat I'm looking at is an example\nof an exterior gateway protocol.\n\n95\n00:04:45.640 --> 00:04:47.380\nAnd with an extra gateway protocol, or\n\n96\n00:04:47.380 --> 00:04:52.860\nan EGP,\nhere we're not routing within one company.\n\n97\n00:04:52.860 --> 00:04:55.710\nWe're routing between companies, right?\n\n98\n00:04:55.710 --> 00:04:59.195\nAnd that's an important concept\nbecause when you go out and\n\n99\n00:04:59.195 --> 00:05:01.991\nconnect to the internet or\nanywhere like that.\n\n100\n00:05:01.991 --> 00:05:07.750\nLike let's say I wanna get\nto Google's webpage, right?\n\n101\n00:05:07.750 --> 00:05:10.160\nSo, I know I wanna visit Google's webpage,\nand so\n\n102\n00:05:10.160 --> 00:05:13.330\nI'm gonna have to do a lookup cuz\nI have no idea what their IP is.\n\n103\n00:05:13.330 --> 00:05:16.450\nAnd so I look it up and\nthey got a couple of IPs, right?\n\n104\n00:05:16.450 --> 00:05:18.460\nSo if I wanna reach out to Google,\nI'm gonna reach out and\n\n105\n00:05:18.460 --> 00:05:19.850\nconnect to one of these IP address.\n\n106\n00:05:19.850 --> 00:05:20.750\nI'll just take the last one.\n\n107\n00:05:21.840 --> 00:05:25.910\nAnd if I do a traceroute\nto that IP address,\n\n108\n00:05:25.910 --> 00:05:29.880\nI'm gonna see each of the routers that\nI pass through as I get through there.\n\n109\n00:05:29.880 --> 00:05:33.760\nNow, the very first one,\nthat's my default gateway right?\n\n110\n00:05:33.760 --> 00:05:36.022\nWe saw when pulled up my\nMac's configuration earlier,\n\n111\n00:05:36.022 --> 00:05:39.066\nit had 10.1.230.1 as my default gateway,\nso that's that one.\n\n112\n00:05:39.066 --> 00:05:44.959\nThe next one though,\nthis customer.gru.net, 209.251.159.177,\n\n113\n00:05:44.959 --> 00:05:48.547\nthat, well that's actually our firewall,\nright?\n\n114\n00:05:48.547 --> 00:05:51.634\nOur firewall, so we control that,\nthat's part of my local area network,\n\n115\n00:05:51.634 --> 00:05:52.850\nI have that device.\n\n116\n00:05:52.850 --> 00:05:56.080\nAnd there's an interior protocol\nrunning between my gateway and\n\n117\n00:05:56.080 --> 00:05:59.340\nthat firewall where they're learning about\neach other so they communicate, all right?\n\n118\n00:05:59.340 --> 00:06:01.160\nWe actually run OSPF here.\n\n119\n00:06:01.160 --> 00:06:08.520\nAnd then from there, I jump over to some\nGRU router that I don't have control over.\n\n120\n00:06:08.520 --> 00:06:12.850\nAnd from there we bounce through more\nGRU equipment, my service provider.\n\n121\n00:06:12.850 --> 00:06:17.100\nAnd then they send me down to Miami\nwith level3's equipment, right?\n\n122\n00:06:17.100 --> 00:06:20.850\nLevel3 is one of the major\nbackbones here in the US, and so\n\n123\n00:06:20.850 --> 00:06:21.960\nI'm jumping over to theirs.\n\n124\n00:06:21.960 --> 00:06:26.330\nAnd beyond that, I'm hitting equipment\nthat's actively blocking my traceroute.\n\n125\n00:06:26.330 --> 00:06:28.310\nGoogle blocks a lot of that stuff so\nI can't get to it.\n\n126\n00:06:28.310 --> 00:06:32.550\nI probably should've picked somebody\nthat I could get to like ITProTV.\n\n127\n00:06:32.550 --> 00:06:34.800\nWe'll do that one,\nI should be able to get to them.\n\n128\n00:06:34.800 --> 00:06:35.640\nDo we block it?\n\n129\n00:06:35.640 --> 00:06:37.050\nWe might even block it on our site.\n\n130\n00:06:37.050 --> 00:06:39.700\nA lot of people block trace route\nbecause it does generate a lot of\n\n131\n00:06:39.700 --> 00:06:42.140\nextra traffic and so\nit can cause problems.\n\n132\n00:06:42.140 --> 00:06:48.120\nWe can do our little\nIP program showmyinfo,\n\n133\n00:06:48.120 --> 00:06:51.130\nno showmemy.info, there we go.\n\n134\n00:06:52.610 --> 00:06:54.840\nAnd now I jump over to Amazon,\nI wished I could get all the way.\n\n135\n00:06:54.840 --> 00:06:58.030\nSo when we look at this, see all\nthe networks that I passed through?\n\n136\n00:06:58.030 --> 00:06:59.020\nI don't control those.\n\n137\n00:06:59.020 --> 00:07:01.670\nI don't control GRU, although we\ndo pay them a bill every month.\n\n138\n00:07:01.670 --> 00:07:03.000\nI definitely don't control NTT, right?\n\n139\n00:07:03.000 --> 00:07:05.320\nThey are a massive Telco provider and\n\n140\n00:07:05.320 --> 00:07:09.700\nI certainly don't control Amazon, when\nwe're jumping over to the Amazon cloud.\n\n141\n00:07:09.700 --> 00:07:13.300\nSo all of these are different companies,\n\n142\n00:07:13.300 --> 00:07:15.260\ndifferent companies that\nI have no control over.\n\n143\n00:07:15.260 --> 00:07:19.300\nSo, how do I route traffic\nthrough their networks?\n\n144\n00:07:19.300 --> 00:07:21.140\nWell, it's a different world.\n\n145\n00:07:21.140 --> 00:07:24.870\nWith an IGP, you can look at the big\npicture and figure out exactly what path\n\n146\n00:07:24.870 --> 00:07:29.630\nyou're gonna follow, but with an EGP,\nwith an Exterior Gateway Protocol,\n\n147\n00:07:29.630 --> 00:07:34.530\nyou can see the paths that are available,\nbut you actually only control\n\n148\n00:07:34.530 --> 00:07:39.010\nthe next hop, the very next step\nin your journey and that's it.\n\n149\n00:07:39.010 --> 00:07:41.550\nWhen you get to the next step,\nwhen you get to the next router,\n\n150\n00:07:41.550 --> 00:07:44.850\nit can make a completely different\ndecision from the first router, and\n\n151\n00:07:44.850 --> 00:07:46.090\nyou'll be none the wiser.\n\n152\n00:07:46.090 --> 00:07:49.010\nBecause you can't see those\npaths all the way out there,\n\n153\n00:07:49.010 --> 00:07:50.720\nyou can't see and control it.\n\n154\n00:07:50.720 --> 00:07:51.380\nYou're at their mercy.\n\n155\n00:07:51.380 --> 00:07:53.222\nYou are on somebody else's network.\n\n156\n00:07:53.222 --> 00:07:57.983\nAnd that's the biggest characteristic of\nan exterior gateway protocol, an EGP,\n\n157\n00:07:57.983 --> 00:08:00.440\nis that it's not your equipment anymore.\n\n158\n00:08:00.440 --> 00:08:04.286\nNow you're passing through multiple\ncompanies, multiple organizations.\n\n159\n00:08:04.286 --> 00:08:05.985\nAnd so those companies in an EGP,\n\n160\n00:08:05.985 --> 00:08:10.700\nthey're bundled together into what\nare called autonomous systems, right, ASs.\n\n161\n00:08:10.700 --> 00:08:14.020\nWhen you run an interior gateway protocol,\nyou're running on your equipment, right,\n\n162\n00:08:14.020 --> 00:08:15.790\nall of your own devices.\n\n163\n00:08:15.790 --> 00:08:18.735\nYou're said to be one autonomous system.\n\n164\n00:08:18.735 --> 00:08:20.475\nYou can operate by yourself,\nyou're autonomous.\n\n165\n00:08:20.475 --> 00:08:22.785\nYou have complete control over everything.\n\n166\n00:08:22.785 --> 00:08:24.705\nBut when you cross the Internet,\n\n167\n00:08:24.705 --> 00:08:29.345\nyou're bouncing from autonomous system to\nautonomous system to autonomous system.\n\n168\n00:08:29.345 --> 00:08:31.602\nYou don't have control over the routers,\n\n169\n00:08:31.602 --> 00:08:34.982\nyou don't even have visibility to a lot\nof them, you're just at their mercy.\n\n170\n00:08:34.982 --> 00:08:37.672\nYou're passing through AS to AS,\nmoving along,\n\n171\n00:08:37.672 --> 00:08:40.842\nhoping to get to your destination,\nand that's very different.\n\n172\n00:08:40.842 --> 00:08:44.412\nAnd so that's why Cisco separates\nthem from interior gateway protocols\n\n173\n00:08:44.412 --> 00:08:46.112\nto exterior gateway protocols.\n\n174\n00:08:46.112 --> 00:08:49.362\nNow on the exam,\nyou need to know how to implement and\n\n175\n00:08:49.362 --> 00:08:51.522\nconfigure interior gateway protocols.\n\n176\n00:08:51.522 --> 00:08:55.039\nYou need to know RIP,\nOSPF, and EIGRP, right.\n\n177\n00:08:55.039 --> 00:08:57.830\nThose are the three most common\ninterior gateway protocols.\n\n178\n00:08:57.830 --> 00:09:00.690\nThere's other ones, there's a good four or\nfive other ones that are out there.\n\n179\n00:09:00.690 --> 00:09:03.600\nBut those are the three main ones\nthat you see almost everywhere.\n\n180\n00:09:04.860 --> 00:09:08.160\nOn the exterior side,\nthere's really only one\n\n181\n00:09:08.160 --> 00:09:12.710\nprotocol we have to worry about there and\nthat's BGP, the border gateway protocol.\n\n182\n00:09:12.710 --> 00:09:14.161\nWe haven't talked about that one yet, so\n\n183\n00:09:14.161 --> 00:09:16.910\nI'm gonna talk about it a little more\nhere later in In the episode, all right.\n\n184\n00:09:16.910 --> 00:09:19.683\nThere is another one out there\nthat is actually called EGP,\n\n185\n00:09:19.683 --> 00:09:22.847\nthe Exterior Gateway Protocol that\nnobody really runs anymore, so\n\n186\n00:09:22.847 --> 00:09:24.200\nthat one's kinda ancient.\n\n187\n00:09:24.200 --> 00:09:27.490\nYou'll find that there's a lot of old\nrouting protocols that are gone, right?\n\n188\n00:09:28.730 --> 00:09:32.020\nEIGRP is the Enhanced Interior\nGateway Routing Protocol.\n\n189\n00:09:32.020 --> 00:09:36.090\nBefore EIGRP, Cisco had\na different protocol called IGRP,\n\n190\n00:09:36.090 --> 00:09:38.750\njust the regular old interior\ngateway routing protocol.\n\n191\n00:09:38.750 --> 00:09:41.720\nThat ones gone, nobody runs IGRP\nanymore because it was classful.\n\n192\n00:09:41.720 --> 00:09:44.460\nIt adhered to the classful\nboundaries of IPv4 and\n\n193\n00:09:44.460 --> 00:09:46.020\nthat makes it unsuitable for use today.\n\n194\n00:09:46.020 --> 00:09:48.530\nSo technologies like\nthat aren't on the exam.\n\n195\n00:09:48.530 --> 00:09:51.100\nIf you see them in real life, you know\nyou are in trouble, it's the network that\n\n196\n00:09:51.100 --> 00:09:54.250\nneeds to be upgraded, so\nwe don't necessarily worry about those.\n\n197\n00:09:54.250 --> 00:09:57.230\nJust remember RIP, EIGRP, and OSPF for\n\n198\n00:09:57.230 --> 00:10:01.650\nthe interior gateway protocols and\nBGP for the exterior.\n\n199\n00:10:01.650 --> 00:10:06.060\nAnd before the show, a lot of\ntimes I'll make little graphics or\n\n200\n00:10:06.060 --> 00:10:07.110\ndiagrams and stuff.\n\n201\n00:10:07.110 --> 00:10:09.373\nAnd sometimes I actually remember\nto show them on the screen.\n\n202\n00:10:09.373 --> 00:10:12.770\nAnd in this case, I actually did\nmake a nice little graphic for this.\n\n203\n00:10:12.770 --> 00:10:15.021\nI'll bring it up for at least a second so\nI can feel like I didn't waste it.\n\n204\n00:10:15.021 --> 00:10:16.876\n&gt;&gt; [LAUGH]\n&gt;&gt; So OSPF, EIGRP, and RIP, and\n\n205\n00:10:16.876 --> 00:10:17.669\nthen BGP, right?\n\n206\n00:10:17.669 --> 00:10:20.510\nThose are the ones that we\nwanna remember for the exam.\n\n207\n00:10:20.510 --> 00:10:24.924\n&gt;&gt; So Don when we start talking about\nthat autonomous system, that idea,\n\n208\n00:10:24.924 --> 00:10:29.707\nwe also think about the interior gateway\nas actually being a routing protocol\n\n209\n00:10:29.707 --> 00:10:32.666\nthat we run within a single\nautonomous system.\n\n210\n00:10:32.666 --> 00:10:36.040\nAnd then the exterior is when we actually\nare moving data between autonomous\n\n211\n00:10:36.040 --> 00:10:38.420\nsystems, at least out on the Internet,\nright?\n\n212\n00:10:38.420 --> 00:10:42.147\n&gt;&gt; That's exactly right and an important\nconcept to add to that is with an interior\n\n213\n00:10:42.147 --> 00:10:44.036\nprotocol, just like you said, right,\n\n214\n00:10:44.036 --> 00:10:47.890\nif can fully route within an organization\nwithin an autonomous system.\n\n215\n00:10:47.890 --> 00:10:52.848\nThe exterior protocols, the ones that\nmove data between autonomous systems,\n\n216\n00:10:52.848 --> 00:10:55.570\nthey can't actually move traffic.\n\n217\n00:10:55.570 --> 00:10:58.560\nThey help you figure out how to\nget from point A to point B but\n\n218\n00:10:58.560 --> 00:11:00.270\nthey can't move the traffic.\n\n219\n00:11:00.270 --> 00:11:05.010\nExterior gateway protocols rely\non interior protocols to do that.\n\n220\n00:11:05.010 --> 00:11:07.650\nSo an EGP can't exist by itself.\n\n221\n00:11:07.650 --> 00:11:12.070\nAn EGP has to have IGPs, multiple\nIGPs usually, underneath the hood to\n\n222\n00:11:12.070 --> 00:11:15.850\nactually get the data from point a to\npoint b so they worked together.\n\n223\n00:11:15.850 --> 00:11:19.530\nAnd IGP can work by itself and\nEGP cannot work by itself.\n\n224\n00:11:19.530 --> 00:11:23.270\nAnd EGP needs to have an IGP underneath\nto actually move any traffic.\n\n225\n00:11:23.270 --> 00:11:27.170\nAll right, so let's talk a little\nbit about IGPs and EGPs, right.\n\n226\n00:11:27.170 --> 00:11:28.807\nSo I guess we've already been doing that,\nreally.\n\n227\n00:11:28.807 --> 00:11:31.310\nBut, let's focus on IGPs for a minute.\n\n228\n00:11:31.310 --> 00:11:35.900\nThe interior gateway protocols get\nsubdivided into two different types.\n\n229\n00:11:35.900 --> 00:11:41.652\nSo inside of IGP we'd have a division\nbetween distance vector and\n\n230\n00:11:41.652 --> 00:11:42.710\nlink state protocols.\n\n231\n00:11:42.710 --> 00:11:44.840\nAnd we talked about those\non the CCENT show and\n\n232\n00:11:44.840 --> 00:11:46.490\nso you should already\nbe familiar with them.\n\n233\n00:11:46.490 --> 00:11:51.070\nBut just to review,\na distance vector protocol\n\n234\n00:11:51.070 --> 00:11:55.810\nfocuses on one particular metric,\nand that's HOP count, right.\n\n235\n00:11:55.810 --> 00:11:58.360\nHop count is what's important\nto distance vector.\n\n236\n00:11:58.360 --> 00:12:02.100\nBut that's not the truly\ndefining characteristic for\n\n237\n00:12:02.100 --> 00:12:03.470\na distance vector protocol.\n\n238\n00:12:03.470 --> 00:12:09.500\nBecause for example, EIGRP is a distance\nprotocol but it doesn't use HOP count.\n\n239\n00:12:09.500 --> 00:12:12.554\nIt uses bandwidth and delay,\nit uses different metrics.\n\n240\n00:12:12.554 --> 00:12:15.640\nBut it's still a But\nit's still distance vector.\n\n241\n00:12:15.640 --> 00:12:18.690\nSo how can it be a distance vector\nif it doesn't use hop count?\n\n242\n00:12:18.690 --> 00:12:23.550\nWell, the truly defining characteristic\nof a distance vector protocol\n\n243\n00:12:23.550 --> 00:12:25.460\nIs the visibility on the network,\n\n244\n00:12:25.460 --> 00:12:30.290\nis that a router only sees its\ndirect neighbors and that's it.\n\n245\n00:12:30.290 --> 00:12:32.960\nIt doesn't see anybody\nbeyond the neighbor,\n\n246\n00:12:32.960 --> 00:12:36.160\nit just sees its directly\nattached neighbors.\n\n247\n00:12:36.160 --> 00:12:41.210\nSo in my topology here, Router A is\ndirectly connected to Router B and\n\n248\n00:12:41.210 --> 00:12:42.000\nRouter D.\n\n249\n00:12:42.000 --> 00:12:46.670\nSo Router A sees and\nis aware of Router B and Router D.\n\n250\n00:12:46.670 --> 00:12:50.100\nNow, it has no clue that Router C exists.\n\n251\n00:12:50.100 --> 00:12:51.610\nOr that router e exists.\n\n252\n00:12:51.610 --> 00:12:53.370\nWell I shouldn't say it that way.\n\n253\n00:12:53.370 --> 00:12:56.770\nIt knows they exit, it knows that\nthere's somebody out there, but\n\n254\n00:12:56.770 --> 00:12:59.070\nit doesn't know detail\nnumber one about them.\n\n255\n00:12:59.070 --> 00:13:01.630\nIt doesn't know anything about it, right.\n\n256\n00:13:01.630 --> 00:13:06.990\nImagine a neighborhood,\nwe'll use my.eighborhood as an example,\n\n257\n00:13:06.990 --> 00:13:10.410\nright So I have a house And\nI have neighbors on both sides.\n\n258\n00:13:10.410 --> 00:13:13.780\nI met them, I've talked to them a number\nof times, I know their names, right.\n\n259\n00:13:13.780 --> 00:13:17.010\nThey're good people ,I know\nthey're my neighbors, right.\n\n260\n00:13:17.010 --> 00:13:19.860\nOn the other side each of my neighbors,\nthere's houses.\n\n261\n00:13:19.860 --> 00:13:22.830\nAnd when I drive home at nigh\nthe lights are on on int those houses.\n\n262\n00:13:22.830 --> 00:13:24.400\nI know somebody lives there.\n\n263\n00:13:24.400 --> 00:13:25.440\nBut I've never met them.\n\n264\n00:13:25.440 --> 00:13:26.120\nI don't know their names.\n\n265\n00:13:26.120 --> 00:13:27.380\nI don't know their hair color.\n\n266\n00:13:27.380 --> 00:13:29.530\nI've never exchanged word\nnumber one with them.\n\n267\n00:13:29.530 --> 00:13:31.190\nBut I know they're there, right.\n\n268\n00:13:31.190 --> 00:13:32.080\nI know they exist.\n\n269\n00:13:32.080 --> 00:13:34.920\nAnd if I talk to my neighbors''ometimes\nthey tell me stories about\n\n270\n00:13:34.920 --> 00:13:35.450\nthe other neighbors,\n\n271\n00:13:35.450 --> 00:13:39.960\nwhich make me glad that the other people\nare my neighbors But I know they exist.\n\n272\n00:13:39.960 --> 00:13:42.010\nAnd tha's how distance\nvector protocols are.\n\n273\n00:13:42.010 --> 00:13:44.570\nWith distance vector,\nyou talk to your neighbor,\n\n274\n00:13:44.570 --> 00:13:47.120\nyou know everything that there\nis to know about your neighbor.\n\n275\n00:13:47.120 --> 00:13:50.690\nBut everything outside of that,\nyou know secondhand.\n\n276\n00:13:50.690 --> 00:13:54.390\nYou're just hearing these guys'\ninterpretation of what's out there.\n\n277\n00:13:54.390 --> 00:13:56.720\nAnd that can lead to loops, right.\n\n278\n00:13:56.720 --> 00:14:02.490\nAnd we talked about this in the CCENT show\nwhere if I take the 192.168.0 network,\n\n279\n00:14:02.490 --> 00:14:07.500\nrouter A would advertise it to router B,\nrouter B would advertise it router C,\n\n280\n00:14:07.500 --> 00:14:11.468\nrouter C would advertise it to router E,\nrouter E would advertise it to router D.\n\n281\n00:14:11.468 --> 00:14:16.530\nNow Router D could tell it\nback to Router A, right?\n\n282\n00:14:16.530 --> 00:14:18.050\nFollowing the circle around.\n\n283\n00:14:18.050 --> 00:14:20.160\nBut Router A is where the route came from.\n\n284\n00:14:20.160 --> 00:14:21.850\nBut Router D doesn't know that.\n\n285\n00:14:21.850 --> 00:14:24.920\nIt knows that it learned the route,\nthat it came from Router E.\n\n286\n00:14:24.920 --> 00:14:26.938\nIt knows everything there\nis about Router E, but\n\n287\n00:14:26.938 --> 00:14:29.168\nit doesn't know where\nthe route actually came from.\n\n288\n00:14:29.168 --> 00:14:33.545\nIt just knows that for Router E,\nit's one, two, three hops to get there.\n\n289\n00:14:33.545 --> 00:14:37.423\nSo by the time Router D gets it, It would\njust be one more hop to share it with\n\n290\n00:14:37.423 --> 00:14:39.720\nrouter A and make it a four hop route.\n\n291\n00:14:39.720 --> 00:14:42.570\nSo that's where our loop\ntype problems occur.\n\n292\n00:14:42.570 --> 00:14:45.970\nBut with the distance vector protocol,\nyou don't see beyond your neighbor.\n\n293\n00:14:45.970 --> 00:14:48.560\nAnd EIGRP, for all of it's power, and\n\n294\n00:14:48.560 --> 00:14:51.940\nwe're gonna spend a couple of\nepisodes on EIGRP later on.\n\n295\n00:14:51.940 --> 00:14:54.560\nFor all of it's power,\nthe bandwidth and delay and\n\n296\n00:14:54.560 --> 00:14:58.770\nthe advance metrics that it uses and\nhow fancy it is, how it's classless,has\n\n297\n00:14:58.770 --> 00:15:01.880\ngreat route summarization features,\nit's got tons of benefits.\n\n298\n00:15:01.880 --> 00:15:04.660\nIt's still distance\nvector deep down inside.\n\n299\n00:15:04.660 --> 00:15:09.210\nAnd so if I'm running EIGRP,\nrouter A would only see router B and\n\n300\n00:15:09.210 --> 00:15:11.240\nrouter D and that's it.\n\n301\n00:15:11.240 --> 00:15:14.210\nSo in the CCMT show, we talked about some\nof the loop prevention mechanisms that\n\n302\n00:15:14.210 --> 00:15:15.140\nare a part of this.\n\n303\n00:15:15.140 --> 00:15:18.800\nWe talked about split horizon,\npoison reverse,\n\n304\n00:15:18.800 --> 00:15:21.260\ncount to infinity, right, maximum metrics.\n\n305\n00:15:21.260 --> 00:15:25.070\nWe talked about a lot of those different\nthings that are a part of the routers that\n\n306\n00:15:25.070 --> 00:15:30.050\ndistance vector protocols rely on because\nthey can't see beyond their neighbor.\n\n307\n00:15:30.050 --> 00:15:33.960\nAnd if those terms aren't familiar to you,\njump back over to the CCNT show and\n\n308\n00:15:33.960 --> 00:15:36.970\ncatch that episode because it's really\nimportant you know those for the exam.\n\n309\n00:15:36.970 --> 00:15:41.600\nYou needed to know them for CCNT You're\nexpected to already know them for CCNA.\n\n310\n00:15:41.600 --> 00:15:45.790\nAll right, so distance vectors\ntypically use hop count, right.\n\n311\n00:15:45.790 --> 00:15:47.620\nThat's kind of what they're\nnormally going to use.\n\n312\n00:15:47.620 --> 00:15:49.980\nCisco went different with EIGRP.\n\n313\n00:15:49.980 --> 00:15:52.650\nEIGRP is what they call\nan advanced distance vector.\n\n314\n00:15:52.650 --> 00:15:54.540\nThey used to call it a hybrid.\n\n315\n00:15:54.540 --> 00:15:57.999\nAnd people, there was\ninternational outrage or whatever.\n\n316\n00:16:00.144 --> 00:16:04.342\nThe PhDs that are out there, right,\nthe people that invent all this stuff,\n\n317\n00:16:04.342 --> 00:16:07.630\nthey really get fussy when you\nuse terms that are not exact.\n\n318\n00:16:07.630 --> 00:16:09.767\nAnd so, what they were saying was,\nif you're calling it hybrid,\n\n319\n00:16:09.767 --> 00:16:10.617\nwhat are you hybrid with?\n\n320\n00:16:10.617 --> 00:16:12.022\nHybrid with link-state?\n\n321\n00:16:12.022 --> 00:16:13.023\nAnd they aren't.\n\n322\n00:16:13.023 --> 00:16:14.490\nSo they had to change that terminology.\n\n323\n00:16:14.490 --> 00:16:17.110\nNow it's just an advanced\ndistance vector protocol.\n\n324\n00:16:17.110 --> 00:16:18.600\nSo it's a little special.\n\n325\n00:16:18.600 --> 00:16:23.280\nBut RIP is a textbook distance vector\nprotocol, it just uses hop count.\n\n326\n00:16:23.280 --> 00:16:26.330\nAnd the biggest problem with hop count\nis that it doesn't always reflect\n\n327\n00:16:26.330 --> 00:16:28.150\ntrue network conditions, right?\n\n328\n00:16:28.150 --> 00:16:30.271\nLet's take this topology\nthat I was showing you and\n\n329\n00:16:30.271 --> 00:16:32.140\nadd some bandwidth to it, okay.\n\n330\n00:16:32.140 --> 00:16:35.310\nIf we add some bandwidth to it,\nsee how going across the top link here.\n\n331\n00:16:35.310 --> 00:16:40.570\nI've got a 1.5 megabit, I've got 1\ngigabit, and 1 gigabit over here.\n\n332\n00:16:40.570 --> 00:16:42.145\nThat's a pretty fast link.\n\n333\n00:16:42.145 --> 00:16:45.490\nWell, it's only as fast as\nthe slowest leg, right?\n\n334\n00:16:45.490 --> 00:16:47.460\nSo this one's 1.5 megabit.\n\n335\n00:16:47.460 --> 00:16:49.810\nGoing across the bottom here,\nI've got 1.5 megabit, 768K,\n\n336\n00:16:49.810 --> 00:16:54.960\nand then to the destination, right?\n\n337\n00:16:54.960 --> 00:16:58.910\nThis is only as fast as its slowest link,\n768K.\n\n338\n00:16:58.910 --> 00:17:04.490\nWhen a distance vector protocol looks at\nthis, it's gonna treat them both equally.\n\n339\n00:17:04.490 --> 00:17:08.340\nThe top route and the bottom route\nare gonna get treated equally.\n\n340\n00:17:08.340 --> 00:17:09.800\nNo, they aren't.\n\n341\n00:17:09.800 --> 00:17:11.220\nI shouldn't say it that way.\n\n342\n00:17:11.220 --> 00:17:14.230\nBecause we're going to look at hop count,\nright?\n\n343\n00:17:14.230 --> 00:17:15.700\nHop count is what's important.\n\n344\n00:17:15.700 --> 00:17:19.730\nThe hop count across the top,\nif I'm from router A, would be one,\n\n345\n00:17:19.730 --> 00:17:22.110\ntwo, three to the destination.\n\n346\n00:17:22.110 --> 00:17:26.560\nBut if I go across the bottom router A,\none, two to the destination.\n\n347\n00:17:26.560 --> 00:17:30.510\nI've got three hops across the top,\nI've got two hops across the bottom.\n\n348\n00:17:30.510 --> 00:17:34.740\nTwo hops is shorter than three, we're\ngonna go across the bottom, all right.\n\n349\n00:17:34.740 --> 00:17:38.366\nDistance vector in this scenario is gonna\nmake what's called a suboptimal routing\n\n350\n00:17:38.366 --> 00:17:39.420\ndecision.\n\n351\n00:17:39.420 --> 00:17:42.835\nThe routing decision isn't\nbad because it still works.\n\n352\n00:17:42.835 --> 00:17:44.645\nCan I get from point A to point B?\n\n353\n00:17:44.645 --> 00:17:46.015\nYes, the network is up.\n\n354\n00:17:46.015 --> 00:17:47.865\nI can get there.\n\n355\n00:17:47.865 --> 00:17:52.165\nIt's just there was a better way\nI could have gotten there, right?\n\n356\n00:17:52.165 --> 00:17:54.325\nIf there's two different roads\nthat lead to the same place and\n\n357\n00:17:54.325 --> 00:17:57.875\none is slower than the other,\nit doesn't mean the slow road is wrong,\n\n358\n00:17:57.875 --> 00:17:59.795\nit just means the slow\nroad isn't the greatest.\n\n359\n00:17:59.795 --> 00:18:02.075\nAnd that's what's happening here,\nwe're taking the slow road.\n\n360\n00:18:02.075 --> 00:18:03.885\nThat's a problem with distance vector.\n\n361\n00:18:03.885 --> 00:18:05.800\nAnd so with distance vector protocols.\n\n362\n00:18:05.800 --> 00:18:08.900\nWe usually have to get a little more\ninvolved in fixing them to make them\n\n363\n00:18:08.900 --> 00:18:10.710\nchoose the right path.\n\n364\n00:18:10.710 --> 00:18:12.780\nWith EIGRP, it's enhanced.\n\n365\n00:18:12.780 --> 00:18:14.260\nIt's enhanced, it's advanced.\n\n366\n00:18:14.260 --> 00:18:17.890\nCisco has put changes into it to\nmake it choose the right decision.\n\n367\n00:18:17.890 --> 00:18:21.220\nAnd with EIGRP,\nit would indeed make the right decision.\n\n368\n00:18:21.220 --> 00:18:24.270\nIt would look at these,\nlook at the bandwidth, and say, boy,\n\n369\n00:18:24.270 --> 00:18:27.440\nthat top path has way more bandwidth than\nthe bottom path, we'll go the top path,\n\n370\n00:18:27.440 --> 00:18:29.760\neven though it's one hop more, right.\n\n371\n00:18:29.760 --> 00:18:32.092\nThat's the way distance factor works.\n\n372\n00:18:32.092 --> 00:18:35.790\nNow link-state,\non the other hand, link-state,\n\n373\n00:18:35.790 --> 00:18:39.620\nthe textbook example that is OSPF\n(open shortest path first) and\n\n374\n00:18:39.620 --> 00:18:42.120\nin CCNT we talked about it but\nwe never implemented it.\n\n375\n00:18:42.120 --> 00:18:44.320\nIn this area we will\nactually implement it.\n\n376\n00:18:44.320 --> 00:18:48.370\nWith OSPF,\nit uses bandwidth to makes its decision.\n\n377\n00:18:48.370 --> 00:18:49.700\nAnd it aggregates it together.\n\n378\n00:18:49.700 --> 00:18:51.370\nIn other words, it adds it together.\n\n379\n00:18:51.370 --> 00:18:54.450\nSo it's gonna look at this and\ntake 1.5 megabit and one gigabit and\n\n380\n00:18:54.450 --> 00:18:57.020\none gigabit and add that all together.\n\n381\n00:18:57.020 --> 00:19:00.650\nAnd then down here, we got 1.5 megabit and\n768k and it's gonna add that together.\n\n382\n00:19:00.650 --> 00:19:02.966\nIt's a simple formula that it runs.\n\n383\n00:19:02.966 --> 00:19:07.540\nIt's not exactly adding it together, we'll\nsee the formula in our OSPF episodes.\n\n384\n00:19:07.540 --> 00:19:10.210\nAnd so\nit's gonna calculate that path out, and\n\n385\n00:19:10.210 --> 00:19:14.120\nit will immediately recognize that the top\npath is better than the bottom path, and\n\n386\n00:19:14.120 --> 00:19:16.540\nso it will make the right\ndecision from the beginning.\n\n387\n00:19:16.540 --> 00:19:21.280\nSo that's one advantage of link-state\nprotocols like OSPF has is that it uses\n\n388\n00:19:21.280 --> 00:19:23.650\nbandwidth or\nthey call it cost as a metric.\n\n389\n00:19:23.650 --> 00:19:25.795\nAll right, the other thing is,\n\n390\n00:19:25.795 --> 00:19:30.780\nwithlink-stateprotocols, they're not\nlimited to just talking to their neighbor.\n\n391\n00:19:30.780 --> 00:19:37.392\nThey get full visibility of every other\nrouter that's out there in their area.\n\n392\n00:19:37.392 --> 00:19:40.265\nAnd link-state protocols use areas\nto divide them up into sections.\n\n393\n00:19:40.265 --> 00:19:44.090\nIf you haven't done it, you just have\none big area, and that's fine, too.\n\n394\n00:19:44.090 --> 00:19:46.210\nEvery router will know\nabout every other router.\n\n395\n00:19:46.210 --> 00:19:50.780\nWhich means router A doesn't just have\nan idea that there's a neighbor out there,\n\n396\n00:19:50.780 --> 00:19:53.220\nrouter A knows exactly\nwho that neighbor is.\n\n397\n00:19:53.220 --> 00:19:55.270\nRouter A knows about router C and\nrouter E.\n\n398\n00:19:55.270 --> 00:19:58.370\nIt knows their IP addresses, it knows\nevery network they're plugged into,\n\n399\n00:19:58.370 --> 00:20:00.300\nit knows what bandwidth\nall their ports are,\n\n400\n00:20:00.300 --> 00:20:02.585\nit knows a lot of information\nabout those routers.\n\n401\n00:20:02.585 --> 00:20:07.060\nAnd when it makes a decision when\na route is being advertised around,\n\n402\n00:20:07.060 --> 00:20:11.810\nif I have the 192.168.0 network that\nrouter A advertises to router B,\n\n403\n00:20:11.810 --> 00:20:15.830\nrouter B advertises to router C,\nrouter C advertises to router E.\n\n404\n00:20:15.830 --> 00:20:20.530\nIf router E advertises to router D, router\nD knows exactly where that came from.\n\n405\n00:20:20.530 --> 00:20:22.160\nIt knows that it came from router A.\n\n406\n00:20:22.160 --> 00:20:24.820\nAnd it knows that there's no point\nin sending it on to router A cuz\n\n407\n00:20:24.820 --> 00:20:25.756\nthat would just create a loop.\n\n408\n00:20:25.756 --> 00:20:31.400\nAnd so link-state protocols actually\nhave loop protection built in.\n\n409\n00:20:31.400 --> 00:20:32.540\nYou cannot get a loop.\n\n410\n00:20:32.540 --> 00:20:33.700\nIt will prevent loop.\n\n411\n00:20:33.700 --> 00:20:37.690\nThere's one way to create a loop and\nyou actually have to force it to do it.\n\n412\n00:20:37.690 --> 00:20:41.300\nIt's like you have to purposely\ncreate the loop to create one.\n\n413\n00:20:41.300 --> 00:20:43.810\nIt's really got that protection\njust built right into it.\n\n414\n00:20:43.810 --> 00:20:45.120\nIt's really impressive stuff.\n\n415\n00:20:45.120 --> 00:20:48.970\nAnd that makes link-state protocols\nvery flexible, very scalable, and\n\n416\n00:20:48.970 --> 00:20:49.990\nvery powerful, right?\n\n417\n00:20:51.190 --> 00:20:54.324\nWe'll see with OSPF, It's actually\npowerful enough that you could use OSPF to\n\n418\n00:20:54.324 --> 00:20:56.021\nroute the entire Internet if we wanted to.\n\n419\n00:20:56.021 --> 00:20:58.950\nIt's not the greatest idea in the world,\nbut you certainly could.\n\n420\n00:20:58.950 --> 00:21:03.313\n&gt;&gt; Don, before we move on there, I just\nwanna make sure that we understand just\n\n421\n00:21:03.313 --> 00:21:08.289\na couple of things here, especially when\nwe deal with OSPF, or not OSPF link-state,\n\n422\n00:21:08.289 --> 00:21:11.450\nversus of course,\nthe distance vector as well.\n\n423\n00:21:11.450 --> 00:21:14.350\nSo when it comes down to both\nof them I think the key word\n\n424\n00:21:14.350 --> 00:21:17.450\nthat you were using there is\nthe idea of scalability again.\n\n425\n00:21:17.450 --> 00:21:22.195\nAnd what we're also saying then is\nthat distance vector doesn't scale\n\n426\n00:21:22.195 --> 00:21:25.710\nwell since you really made that statement,\nright.\n\n427\n00:21:25.710 --> 00:21:27.600\n&gt;&gt; Yeah, with RIP,\n\n428\n00:21:27.600 --> 00:21:30.030\nRIP scalability problems are tied\nto a few different things.\n\n429\n00:21:30.030 --> 00:21:33.570\nBut with RIP you can't really scale\nbeyond 15 hops, when you get to 16 hops,\n\n430\n00:21:33.570 --> 00:21:37.410\nthat's where it starts to cut off\nthat maximum metric and things drop.\n\n431\n00:21:37.410 --> 00:21:39.820\nSo you can't have a network\nthat's more complex than 15 hops.\n\n432\n00:21:39.820 --> 00:21:44.160\nWell, on the Internet, you will\nconsistently find routes that are 22 hops,\n\n433\n00:21:44.160 --> 00:21:46.940\n30 hops sometimes, not good routes,\nbut they're out there, right?\n\n434\n00:21:46.940 --> 00:21:48.340\nRIP can't handle those.\n\n435\n00:21:48.340 --> 00:21:51.460\nAnd because RIP is sending out\nmessages every 30 seconds and\n\n436\n00:21:51.460 --> 00:21:53.130\nit's sending out its full database and\n\n437\n00:21:53.130 --> 00:21:56.700\ndoing all this crazy stuff, it's just\nnot efficient, it can't scale very well.\n\n438\n00:21:56.700 --> 00:21:58.170\nEIGRP can, though.\n\n439\n00:21:58.170 --> 00:22:00.990\nEIGRP is very efficient with\nthe way that it communicates.\n\n440\n00:22:00.990 --> 00:22:03.170\nAnd it can scale very, very large.\n\n441\n00:22:03.170 --> 00:22:05.960\nIt's still distance vector, but\nit can still scale very large.\n\n442\n00:22:05.960 --> 00:22:09.845\nBecause they built that into the protocol,\nthey designed it that way, all right?\n\n443\n00:22:09.845 --> 00:22:13.215\nNow out in the real world you're\nnot usually gonna encounter RIP.\n\n444\n00:22:13.215 --> 00:22:15.135\nRIP is really a learning\nprotocol these days,\n\n445\n00:22:15.135 --> 00:22:17.245\nthere's not any other reason to run it.\n\n446\n00:22:17.245 --> 00:22:19.775\nEIGRP and OSPF,\nthose are the most common, and\n\n447\n00:22:19.775 --> 00:22:23.925\nbetween those,\nOSPF has the massive market share.\n\n448\n00:22:23.925 --> 00:22:25.755\nBecause OSPF is an open standard,\n\n449\n00:22:25.755 --> 00:22:29.415\nanybody can run it, versus EIGRP,\nwhich is Cisco proprietary.\n\n450\n00:22:29.415 --> 00:22:30.770\nYou gotta have Cisco equipment.\n\n451\n00:22:30.770 --> 00:22:33.522\nSo if you have all Cisco routers,\ngreat, you can run the EIGRP.\n\n452\n00:22:33.522 --> 00:22:36.949\nBut the problem is today most people have\nlayer three switches which are routing,\n\n453\n00:22:36.949 --> 00:22:40.910\nyou've got routers which are routing, and\nyou've got firewalls which are routing.\n\n454\n00:22:40.910 --> 00:22:44.680\nAnd so if you really want EIGRP\nto function in its truest form,\n\n455\n00:22:44.680 --> 00:22:49.060\nyou would need all Cisco equipment, Cisco\nswitches, Cisco routers, Cisco firewalls.\n\n456\n00:22:49.060 --> 00:22:50.750\nWhich is exactly what Cisco wants, right?\n\n457\n00:22:50.750 --> 00:22:52.770\nAnd so if you have that, EIGRP is great.\n\n458\n00:22:52.770 --> 00:22:58.110\nBut if you have HP switches,\nor Juniper routers, or\n\n459\n00:22:58.110 --> 00:23:04.040\nWatchGuard firewalls or something like\nthat, they're not gonna support EIGRP.\n\n460\n00:23:04.040 --> 00:23:07.550\nAnd so you're going to have to use OSPF,\nor run mixed.\n\n461\n00:23:07.550 --> 00:23:10.300\nWe run OSPF and EIGRP, and\nI'll tell you right now,\n\n462\n00:23:10.300 --> 00:23:12.720\nthere's never an environment\nwhere I choose to run mixed for\n\n463\n00:23:12.720 --> 00:23:15.750\nanything other than a migration where\nI'm moving the one or the other.\n\n464\n00:23:15.750 --> 00:23:16.800\nIt's always a temporary thing.\n\n465\n00:23:16.800 --> 00:23:19.140\nYou don't wanna run mixed\nprotocols if you can avoid it.\n\n466\n00:23:19.140 --> 00:23:20.780\nYou don't want two different systems\n\n467\n00:23:20.780 --> 00:23:22.870\nmaking two different decisions for\nsome reason.\n\n468\n00:23:22.870 --> 00:23:24.960\nYou always want people\nmaking the same decision.\n\n469\n00:23:24.960 --> 00:23:30.040\nSo that's kind of what that boils down to\nand those are the link-state protocols.\n\n470\n00:23:30.040 --> 00:23:32.306\nNow the last one that I wanna talk about,\nright, so\n\n471\n00:23:32.306 --> 00:23:36.520\nthose were the interior gateway protocols,\nlink-state and distance vector.\n\n472\n00:23:36.520 --> 00:23:39.973\nWhen we get to exterior,\nexterior is really,\n\n473\n00:23:39.973 --> 00:23:43.966\nreally hard because\nthe exterior networks are huge.\n\n474\n00:23:43.966 --> 00:23:45.015\nThink about the Internet.\n\n475\n00:23:45.015 --> 00:23:46.810\nThe Internet is massive.\n\n476\n00:23:46.810 --> 00:23:49.620\nThere are a ton of routes\nthat are out there, and\n\n477\n00:23:49.620 --> 00:23:53.540\nso how can we figure out how to move\nbetween all these different companies?\n\n478\n00:23:53.540 --> 00:24:00.670\nWell, the way that exterior protocols work\nis not by link-state or distance vector.\n\n479\n00:24:00.670 --> 00:24:03.824\nThey work by what's called path vector.\n\n480\n00:24:03.824 --> 00:24:08.051\nPath vector is not mapping\nsubnet to subnet to subnet.\n\n481\n00:24:08.051 --> 00:24:13.760\nWhat it's mapping is autonomous system, to\nautonomous system, to autonomous system.\n\n482\n00:24:13.760 --> 00:24:19.030\nIt creates a map of which subnets are\npresent in which autonomous systems and\n\n483\n00:24:19.030 --> 00:24:22.810\nthen it creates a map of which autonomous\nsystems are connected together, and so\n\n484\n00:24:22.810 --> 00:24:24.890\nwe can find a pathway across.\n\n485\n00:24:24.890 --> 00:24:28.180\nWe can figure out which AS\nnumber a subnet is in and\n\n486\n00:24:28.180 --> 00:24:31.770\nthen we just need to find the path\nthat matches that, right?\n\n487\n00:24:31.770 --> 00:24:35.740\nTo give you an idea of the size of this,\nlet me pull up a website real quick.\n\n488\n00:24:35.740 --> 00:24:39.932\nThere's a website out there,\nit's bgp.potaroo.net.\n\n489\n00:24:39.932 --> 00:24:41.842\nIf you ever go to that website,\n\n490\n00:24:41.842 --> 00:24:47.490\nthey maintain a table that shows how big\nthe BGP routing table is for the Internet.\n\n491\n00:24:47.490 --> 00:24:51.240\nBGP the border gateway protocol is\ndesigned for massive networks and\n\n492\n00:24:51.240 --> 00:24:54.710\nright now there's only one network\nthat's really massive enough.\n\n493\n00:24:54.710 --> 00:24:56.430\nAnd that's the Internet, right?\n\n494\n00:24:56.430 --> 00:25:01.860\nSo border gateway protocol, BGP is the\ntextbook exterior gateway protocol for us.\n\n495\n00:25:01.860 --> 00:25:04.700\nAnd it is what powers the Internet.\n\n496\n00:25:04.700 --> 00:25:07.471\nIf you're browsing the Internet right now,\nwhich if you're watching our show,\n\n497\n00:25:07.471 --> 00:25:08.122\nyou probably are.\n\n498\n00:25:08.122 --> 00:25:12.100\nYou are passing through routers that are\nusing BGP to make their decisions, right?\n\n499\n00:25:12.100 --> 00:25:13.280\nIt's a fact.\n\n500\n00:25:13.280 --> 00:25:17.503\nBGP is almost exclusively\nused on the Internet.\n\n501\n00:25:17.503 --> 00:25:21.810\nIt is a rare, rare company that actually\nneed to implement BGP internally.\n\n502\n00:25:21.810 --> 00:25:25.188\nIn fact, I've had to it a few times and\nevery time I've done it,\n\n503\n00:25:25.188 --> 00:25:27.579\nit's simply been built around redundancy.\n\n504\n00:25:27.579 --> 00:25:31.650\nIf you get a connection to an ISP, right.\n\n505\n00:25:31.650 --> 00:25:33.892\nLet's say you wanna run your\nown web server farm and for\n\n506\n00:25:33.892 --> 00:25:35.810\nsome reason you can't use the cloud,\nright.\n\n507\n00:25:35.810 --> 00:25:37.010\nMaybe you've got private data,\n\n508\n00:25:37.010 --> 00:25:39.850\nyou've got some compliance issues,\nyou can't use the cloud.\n\n509\n00:25:39.850 --> 00:25:43.343\nSo you go to your ISP and you say hey,\nI need to get my own IP range.\n\n510\n00:25:43.343 --> 00:25:46.040\nAnd your Internet service\nprovider gives you that IP range.\n\n511\n00:25:46.040 --> 00:25:48.090\nAnd you bring up your\nown web servers locally.\n\n512\n00:25:48.090 --> 00:25:50.120\nWell, what happens if the ISP fails?\n\n513\n00:25:51.290 --> 00:25:52.530\nYour web servers are unreachable.\n\n514\n00:25:52.530 --> 00:25:53.620\nPeople can't get to your web server,\n\n515\n00:25:53.620 --> 00:25:55.080\nunless you have an image\nuse in the clouds.\n\n516\n00:25:55.080 --> 00:25:57.450\nBut here, you've lost an access.\n\n517\n00:25:57.450 --> 00:25:57.950\nSo what do you do?\n\n518\n00:25:57.950 --> 00:25:59.580\nYou are going to get a second ISP.\n\n519\n00:25:59.580 --> 00:26:03.550\nAnd you say, all right, I'm gonna get\na level three for my primary connection.\n\n520\n00:26:03.550 --> 00:26:06.051\nI'm going to get AT&amp;T for my .com, right.\n\n521\n00:26:06.051 --> 00:26:10.690\nWell, when you signed on with level three,\nthey assigned you a series of IP\n\n522\n00:26:10.690 --> 00:26:14.690\naddresses, IP addresses that they owned,\nand that are routed through level three.\n\n523\n00:26:14.690 --> 00:26:18.380\nIf level three fails,\nhow can you tell the world, hey,\n\n524\n00:26:18.380 --> 00:26:20.470\nif you wanna get to this subnet,\ndon't go through level three.\n\n525\n00:26:20.470 --> 00:26:22.310\nGo through AT&amp;T instead.\n\n526\n00:26:22.310 --> 00:26:23.310\nHow can you do that?\n\n527\n00:26:23.310 --> 00:26:24.400\nWell, short answer is, you can't.\n\n528\n00:26:24.400 --> 00:26:25.760\nYou can't do it.\n\n529\n00:26:25.760 --> 00:26:27.590\nBut the service providers can.\n\n530\n00:26:27.590 --> 00:26:29.830\nAnd so, you reach out to them and\ntell them what you wanna do.\n\n531\n00:26:29.830 --> 00:26:31.137\nHey, I don't wanna rent IPs from you.\n\n532\n00:26:31.137 --> 00:26:35.936\nI wanna buy my own block, or you can just\ngo right to the ARIN and get them, or INA,\n\n533\n00:26:35.936 --> 00:26:39.058\nor whoever it is that's responsible for\nyour area.\n\n534\n00:26:39.058 --> 00:26:41.847\nYou go to them and you say hey,\nI need my own autonomous system.\n\n535\n00:26:41.847 --> 00:26:45.440\nAnd they can assign you,\nyour company, an AS number.\n\n536\n00:26:45.440 --> 00:26:47.800\nNow it's expensive,\nyou need to be a big organization.\n\n537\n00:26:47.800 --> 00:26:49.670\nSmall and\nmedium companies are never gonna do this.\n\n538\n00:26:49.670 --> 00:26:51.740\nBut you get your own\nautonomous system number.\n\n539\n00:26:51.740 --> 00:26:54.275\nAnd you subnet exist in\nthat autonomous system.\n\n540\n00:26:54.275 --> 00:26:57.675\nAnd when you buy that line from\nlevel three, you tell them,\n\n541\n00:26:57.675 --> 00:27:00.480\nhey I need you to connect to my AS number.\n\n542\n00:27:00.480 --> 00:27:01.860\nAnd when you buy that line from AT&amp;T,\n\n543\n00:27:01.860 --> 00:27:04.780\nyou say,\nhey I need you to connect to my AS number.\n\n544\n00:27:04.780 --> 00:27:07.350\nOr you can have five ISP\nit doesn't matter, right?\n\n545\n00:27:07.350 --> 00:27:10.100\nAnd when people browse the Internet and\n\n546\n00:27:10.100 --> 00:27:14.670\ntry to get to your IPs, they're gonna see\nhow can I get to your autonomous system?\n\n547\n00:27:14.670 --> 00:27:16.193\nI can go through level three.\n\n548\n00:27:16.193 --> 00:27:19.397\nAnd if level three fails, then how\ncan I get to your autonomous system?\n\n549\n00:27:19.397 --> 00:27:21.986\nI can go through AT&amp;T, right,\nthey do it though BGP.\n\n550\n00:27:21.986 --> 00:27:26.364\nNow it's gotta be tracked by autonomous\nsystems because if you look at this table,\n\n551\n00:27:26.364 --> 00:27:29.628\nyou'll see way back here it\nstarts like in 1994, right?\n\n552\n00:27:29.628 --> 00:27:36.050\nAnd, back in 1994, there were less than\n30,000, in between 20 and 30,000 routes.\n\n553\n00:27:37.550 --> 00:27:39.290\nThat by itself is a lot.\n\n554\n00:27:39.290 --> 00:27:43.570\nBut if you look at this number climb,\nby the time you get to today here in 2016,\n\n555\n00:27:43.570 --> 00:27:49.350\nthere are over 600,000 routes in\nthe Internet BGP routing table.\n\n556\n00:27:49.350 --> 00:27:54.520\nIf you wanted to pull down the subnets for\nthe entire Internet, over 100,000 routes,\n\n557\n00:27:54.520 --> 00:27:56.360\nthat's a lot.\n\n558\n00:27:57.360 --> 00:27:59.861\nImagine trying to do something\nlike what OSPF does and\n\n559\n00:27:59.861 --> 00:28:02.987\ntrack every single router\ninvolved with 600,000 routes.\n\n560\n00:28:02.987 --> 00:28:04.835\nYou would need so much memory and so\n\n561\n00:28:04.835 --> 00:28:07.840\nmuch CPU power that it\nwould be near impossible.\n\n562\n00:28:07.840 --> 00:28:12.130\nRouting protocols like that just\naren't designed to go that big\n\n563\n00:28:12.130 --> 00:28:13.820\nwithout dividing the networks up.\n\n564\n00:28:13.820 --> 00:28:17.000\nAnd that's exactly what BGP does,\nBGP divides this up.\n\n565\n00:28:17.000 --> 00:28:19.600\nYou don't need to know\nabout every single router.\n\n566\n00:28:19.600 --> 00:28:25.130\nYou just need a list of 600,000 subnets\nand which AS number they belong in.\n\n567\n00:28:25.130 --> 00:28:27.640\nAnd then you need a list of the ASs,\nright?\n\n568\n00:28:27.640 --> 00:28:31.345\nAnd the AS numbers,\nthey're really 0 through 65,535, and\n\n569\n00:28:31.345 --> 00:28:32.905\nthen they just extended it.\n\n570\n00:28:32.905 --> 00:28:36.160\nAnd they went to some higher numbers, so\nyou'll see some six digit numbers now.\n\n571\n00:28:36.160 --> 00:28:40.062\nBut for most of the public ASs these days,\nthey are less than 65,000.\n\n572\n00:28:40.062 --> 00:28:44.546\nSo 65,000 is less than 10% of\nthe overall router number that I\n\n573\n00:28:44.546 --> 00:28:49.440\nactually have to keep track of and\nthat much easier for routers to do.\n\n574\n00:28:49.440 --> 00:28:53.175\nSo, when we look at a topology,\nlike this one, that I was showing you,\n\n575\n00:28:53.175 --> 00:28:58.325\nwe've gotta pass from our network,\nto some neighboring network, and\n\n576\n00:28:58.325 --> 00:29:01.215\nBGP, the Border Gateway Protocol,\nis gonna look at it, and say,\n\n577\n00:29:01.215 --> 00:29:05.995\nnow you're starting in AS 2020,\nyou need to go to AS 119, and\n\n578\n00:29:05.995 --> 00:29:11.490\nthen, go over to AS 37131, and so,\nthe path is simply three numbers.\n\n579\n00:29:11.490 --> 00:29:13.770\nAnd so we need to jump to this AS,\nor that's where we're coming from.\n\n580\n00:29:13.770 --> 00:29:17.140\nWe need to jump to this AS, 119, and\nthen we need to jump to this AS.\n\n581\n00:29:17.140 --> 00:29:20.250\nSo, now I figure out which router is it\n\n582\n00:29:20.250 --> 00:29:22.720\nthat I'm connected to\nthat gets me to that AS?\n\n583\n00:29:22.720 --> 00:29:26.582\nAnd so Router 1 has a connection\nto Router 3 which is in AS 119.\n\n584\n00:29:26.582 --> 00:29:27.776\nAnd so it needs to send me over there.\n\n585\n00:29:27.776 --> 00:29:31.720\nNow, once I'm in AS 119,\nI have no more control.\n\n586\n00:29:31.720 --> 00:29:36.644\nThere might be 20 routers inside of AS 119\nand I rattle around in those routers as it\n\n587\n00:29:36.644 --> 00:29:39.758\nthen dumps me over to Router\n4 to get to AS 37131.\n\n588\n00:29:39.758 --> 00:29:40.352\nAnd over here,\n\n589\n00:29:40.352 --> 00:29:43.920\nI might pass through another 20 routers\nbefore I actually get to my destination.\n\n590\n00:29:43.920 --> 00:29:45.390\nI don't even see those routers.\n\n591\n00:29:45.390 --> 00:29:47.440\nI just see the AS numbers and that's it.\n\n592\n00:29:47.440 --> 00:29:50.160\nAnd that's what makes\nthe Internet manageable.\n\n593\n00:29:50.160 --> 00:29:52.370\nSo, exterior gateway protocols.\n\n594\n00:29:52.370 --> 00:29:56.170\nThe most common one is BGP,\nthe border gateway protocol.\n\n595\n00:29:56.170 --> 00:29:57.780\nIt's used to route the Internet.\n\n596\n00:29:57.780 --> 00:30:01.780\nAnd it's tracking autonomous\nsystem numbers, AS numbers.\n\n597\n00:30:01.780 --> 00:30:05.430\nWhen you run an interior gateway protocol,\nwhen you run OSPF,\n\n598\n00:30:05.430 --> 00:30:10.590\nwhen you run EI G or P you are actually\ncreating an AS number, it is a private AS.\n\n599\n00:30:10.590 --> 00:30:12.940\nIt is just you,\nyou're an autonomous system.\n\n600\n00:30:12.940 --> 00:30:17.680\nWith BGP, these are public AS numbers,\nyou can't just make them up.\n\n601\n00:30:17.680 --> 00:30:19.810\nThere actually is a little private\nrange where you could, but\n\n602\n00:30:19.810 --> 00:30:21.420\nyou can't connect them to the internet.\n\n603\n00:30:21.420 --> 00:30:22.710\nYou have to register these.\n\n604\n00:30:22.710 --> 00:30:26.210\nYou have to reach out to the INA and\nget assigned an AS number so\n\n605\n00:30:26.210 --> 00:30:28.430\nthey can keep track of that and\nbuild the map.\n\n606\n00:30:28.430 --> 00:30:32.630\nSo, that is a big part of how\nexterior gateway protocols work.\n\n607\n00:30:32.630 --> 00:30:35.170\nAnd when they go to do\ntheir path selection,\n\n608\n00:30:35.170 --> 00:30:37.120\nthey may have more than one path.\n\n609\n00:30:37.120 --> 00:30:42.790\nSo see up here where I have got\na three AS path or a four AS path,\n\n610\n00:30:42.790 --> 00:30:45.800\nborder gateway protocol simply picks\nthe one that's the shortest path.\n\n611\n00:30:45.800 --> 00:30:50.440\nIt doesn't look at bandwidth, it doesn't\nlook at delay or cost, reliability,\n\n612\n00:30:50.440 --> 00:30:52.200\navailability, it doesn't\nlook at any of that stuff.\n\n613\n00:30:52.200 --> 00:30:53.310\nIt also doesn't do redundancy.\n\n614\n00:30:53.310 --> 00:30:56.450\nIf there are two equal paths,\nit takes whichever one came first.\n\n615\n00:30:56.450 --> 00:31:00.308\nIt does not do load balancing of any sort,\nit simply looks for\n\n616\n00:31:00.308 --> 00:31:04.026\nthe shortest path that was up first and\nit picks that path.\n\n617\n00:31:04.026 --> 00:31:08.610\nAnd if that path were to fail, then it\nuses the second path and it goes that way.\n\n618\n00:31:08.610 --> 00:31:10.740\nSo we do get a little bit\nof redundancy that way.\n\n619\n00:31:10.740 --> 00:31:13.620\nAnd then we'll move on to\nadditional pass if they exist.\n\n620\n00:31:13.620 --> 00:31:16.360\nIt's not the most intelligent\nprotocol because it can't be.\n\n621\n00:31:16.360 --> 00:31:18.470\nIt's handling too much data.\n\n622\n00:31:18.470 --> 00:31:20.920\nJust too many path, too many routes.\n\n623\n00:31:20.920 --> 00:31:23.030\nIt's gotta keep it simple and it does.\n\n624\n00:31:23.030 --> 00:31:25.091\nWhatever the shortest path is\nthat's what we pick and we go.\n\n625\n00:31:25.091 --> 00:31:27.552\nSo it's very similar to a distance\nvector protocol in that perspective.\n\n626\n00:31:27.552 --> 00:31:32.510\nIt's almost like hop count except each\nhop could represent 10, 20 routers.\n\n627\n00:31:32.510 --> 00:31:33.606\nWho knows how many, right?\n\n628\n00:31:33.606 --> 00:31:36.472\nYour time to live is only so big,\nso it can't be too many routers.\n\n629\n00:31:36.472 --> 00:31:41.160\nBut, basically, it's just looking at that,\nand making its decision.\n\n630\n00:31:41.160 --> 00:31:45.080\nNow, on the CCNA exam, they don't expect\nyou to know how to configure BGP,\n\n631\n00:31:45.080 --> 00:31:46.130\nnot one single bit.\n\n632\n00:31:46.130 --> 00:31:48.230\nThey don't even expect you to\nbe able to look at a config.\n\n633\n00:31:48.230 --> 00:31:49.327\nThey want you to know the concept.\n\n634\n00:31:49.327 --> 00:31:53.830\nThey want you to understand what it is\nthat makes an exterior gateway protocol.\n\n635\n00:31:53.830 --> 00:31:56.090\nAnd that's what I've shown you here\nis border gateway protocol and\n\n636\n00:31:56.090 --> 00:31:57.370\nhow it functions.\n\n637\n00:31:57.370 --> 00:31:59.814\nBut for those of you who wanna\nlearn how to configure it,\n\n638\n00:31:59.814 --> 00:32:01.375\njump over to our CCNP show, right?\n\n639\n00:32:01.375 --> 00:32:04.545\nThe CCNP route show, where you\nmove up to that next tier, right?\n\n640\n00:32:04.545 --> 00:32:07.274\nYou need to finish the certification\nfirst, then move on to CCNP.\n\n641\n00:32:07.274 --> 00:32:11.370\nI'll show you how to configure BGP, how it\nworks, how to get it, and put it in place.\n\n642\n00:32:11.370 --> 00:32:12.330\nIt's a neat protocol.\n\n643\n00:32:12.330 --> 00:32:17.240\nIt's actually pretty simple to work with,\neven though it really seems complex.\n\n644\n00:32:17.240 --> 00:32:20.600\nAnd you can totally screw up the whole\nglobe if you do it wrong, right?\n\n645\n00:32:20.600 --> 00:32:22.570\nThat's happened a few\ntimes over the years.\n\n646\n00:32:22.570 --> 00:32:24.380\nSo it is one that you get\na little nervous about.\n\n647\n00:32:24.380 --> 00:32:27.109\nBut it's not that hard at\nthe end of the day, right.\n\n648\n00:32:27.109 --> 00:32:31.290\nSo, that's basically the run-down\nthere on exterior protocols.\n\n649\n00:32:32.490 --> 00:32:33.961\nI know for this episode a lot\nof what we've talked about was\n\n650\n00:32:33.961 --> 00:32:34.511\nkind of just review.\n\n651\n00:32:34.511 --> 00:32:37.072\nWe've already talked about linked-state,\ndistance vector,\n\n652\n00:32:37.072 --> 00:32:39.065\nthe exterior stuff is what's new.\n\n653\n00:32:39.065 --> 00:32:41.995\nYou need to know that for the exam,\nright, the concepts, the theory and\n\n654\n00:32:41.995 --> 00:32:43.265\nthe fundamentals.\n\n655\n00:32:43.265 --> 00:32:46.111\nAfter this, we're gonna move into\nsomething a little more specific right,\n\n656\n00:32:46.111 --> 00:32:48.676\nwe're gonna jump into OSPF and\nhow it works and then we'll do EIGRP.\n\n657\n00:32:48.676 --> 00:32:52.784\nBut we're not gonna jump into BGP,\nthat'll be in the CCNP shows.\n\n658\n00:32:52.784 --> 00:32:54.492\n&gt;&gt; All right Don, well thank you for\n\n659\n00:32:54.492 --> 00:32:57.825\nhelping us to review these\nconcepts on routing protocols.\n\n660\n00:32:57.825 --> 00:33:00.990\nRemember to pay attention to those\nacronyms that Don was using as well.\n\n661\n00:33:00.990 --> 00:33:03.540\nBe able to associate those different\nrouting protocols with some of those\n\n662\n00:33:03.540 --> 00:33:06.160\ndifferent terms like IGP and EGP.\n\n663\n00:33:06.160 --> 00:33:08.050\nThose are gonna be also key for\n\n664\n00:33:08.050 --> 00:33:11.130\nus in just getting a few easy\npoints on the exam as well.\n\n665\n00:33:11.130 --> 00:33:12.828\nWell, great place for\nus to end this episode.\n\n666\n00:33:12.828 --> 00:33:16.830\nSigning off for ITProTV,\nI've been your host Ronnie Wong.\n\n667\n00:33:16.830 --> 00:33:17.990\n&gt;&gt; And I'm Don Pezet.\n\n668\n00:33:17.990 --> 00:33:22.988\n&gt;&gt; Stay tuned right here for\nmore CCNA Routing and Switching shows.\n\n669\n00:33:22.988 --> 00:33:31.480\n[MUSIC]\n\n",
          "vimeoId": "180048191"
        },
        {
          "description": "In this episode, Ronnie and Don take a look at the basic specifications when working with OSPF as our IGP.  They discuss it’s popularity and usage.  They show how ospf works with multiple areas and even describe how it calculates its metric to make routing decisions.  They demonstrate how the spf algorithm functions to determine the cost.",
          "length": "1845",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/cisco-ccna200105/cisco-ccna200105-2-3-ospf-082216-1.jpg",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/cisco-ccna200105/cisco-ccna200105-2-3-ospf-082216-1-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/cisco-ccna200105/cisco-ccna200105-2-3-ospf-082216-1-sm.jpg",
          "title": "OSPF",
          "transcript": "WEBVTT\n\n1\n00:00:00.000 --> 00:00:10.000\n[MUSIC]\n\n2\n00:00:12.216 --> 00:00:14.425\nWelcome back to another great\nepisode right here on ITProTV.\n\n3\n00:00:14.425 --> 00:00:18.935\nI'm your host Ronnie Wong, and\nyou're watching the CCNA Routing and\n\n4\n00:00:18.935 --> 00:00:24.058\nSwitching show where we're about to take\na look at our first routing protocol,\n\n5\n00:00:24.058 --> 00:00:27.051\nin a link state type run\nprotocol called OSPF.\n\n6\n00:00:27.051 --> 00:00:29.830\nAnd who better to help us than Mr.\nDon Pezet.\n\n7\n00:00:29.830 --> 00:00:35.017\nDon, OSPF, true or false, 100% loop free?\n\n8\n00:00:35.017 --> 00:00:35.682\n&gt;&gt; Absolutely, absolutely.\n\n9\n00:00:35.682 --> 00:00:38.821\n&gt;&gt; Okay, well then you're gonna\nhelp us to actually understand-\n\n10\n00:00:38.821 --> 00:00:39.560\n&gt;&gt; That's the end of our episode.\n\n11\n00:00:39.560 --> 00:00:40.759\nThat's it.\n&gt;&gt; [LAUGH]\n\n12\n00:00:40.759 --> 00:00:41.541\n&gt;&gt; [LAUGH]\n\n13\n00:00:41.541 --> 00:00:44.152\n&gt;&gt; No, I love how you said we're gonna get\n\n14\n00:00:44.152 --> 00:00:47.168\nstarted in our first\ntrue routing protocol.\n\n15\n00:00:47.168 --> 00:00:49.683\nBecause really in CCNT we saw Rip, and\n\n16\n00:00:49.683 --> 00:00:52.755\nnobody runs Rip out in\nthe real world anymore.\n\n17\n00:00:52.755 --> 00:00:54.510\nIt's a learning protocol.\n\n18\n00:00:54.510 --> 00:00:59.440\nBut OSPF, it is hands down the most\ncommon interior gateway protocol\n\n19\n00:00:59.440 --> 00:01:03.370\nin use in business today, so\nyou see this all over the place.\n\n20\n00:01:03.370 --> 00:01:06.490\nWhen you go out and get a job, the odds\nare that company you go to work for\n\n21\n00:01:06.490 --> 00:01:07.640\nis going to have OSPF.\n\n22\n00:01:07.640 --> 00:01:10.220\nSo I'm excited to jump into it and\nstart to work with it, and\n\n23\n00:01:10.220 --> 00:01:11.730\nit is a link state protocol.\n\n24\n00:01:11.730 --> 00:01:16.260\nSo you'll remember from our last episode\nthat means that it is, indeed, loop free.\n\n25\n00:01:16.260 --> 00:01:19.410\nThat you're not going to get\nloops inside of an OSPF network.\n\n26\n00:01:19.410 --> 00:01:21.900\nNow, we need to talk\nabout how that happens.\n\n27\n00:01:21.900 --> 00:01:24.840\nHow does it make this\nloop free environment?\n\n28\n00:01:24.840 --> 00:01:27.550\nAnd we need to make sure we\nunderstand the foundations of that.\n\n29\n00:01:27.550 --> 00:01:31.780\nSo in this episode,\nwe're gonna focus on how OSPF works,\n\n30\n00:01:31.780 --> 00:01:35.150\nhow it makes its decisions,\nhow it does what it does.\n\n31\n00:01:35.150 --> 00:01:38.194\nAnd in our next episode, we're gonna\nsee actually implementing OSPF and\n\n32\n00:01:38.194 --> 00:01:39.235\nputting it into action.\n\n33\n00:01:39.235 --> 00:01:44.098\nAnd we actually have to do that twice\nbecause there's two different ways,\n\n34\n00:01:44.098 --> 00:01:46.657\none way for IPv4 and one way for IPv6.\n\n35\n00:01:46.657 --> 00:01:49.224\nSo we'll get to see it implemented\nin two different methods.\n\n36\n00:01:49.224 --> 00:01:52.089\nBut for now we're gonna\nfocus on the foundations and\n\n37\n00:01:52.089 --> 00:01:55.226\nthe foundations are identical\nbetween IPv4 and IPv6.\n\n38\n00:01:55.226 --> 00:01:59.380\nIt makes decisions the same exact way.\n\n39\n00:01:59.380 --> 00:02:01.710\nAnd the reason is our metrics.\n\n40\n00:02:01.710 --> 00:02:03.630\nWhat does OSPF look at for a metric?\n\n41\n00:02:03.630 --> 00:02:06.460\nWell deep down it's looking at bandwidth.\n\n42\n00:02:06.460 --> 00:02:09.157\nAnd bandwidth is all about layer one and\nlayer two.\n\n43\n00:02:09.157 --> 00:02:13.355\nSo bandwidth is the same regardless\nof whether you run IPv4 or\n\n44\n00:02:13.355 --> 00:02:14.979\nwhether you run IPv6.\n\n45\n00:02:14.979 --> 00:02:19.140\nAnd so OSPF makes the same\ndecisions under the two protocols.\n\n46\n00:02:19.140 --> 00:02:22.050\nThe only thing that's different is\nthe configuration which we'll see later.\n\n47\n00:02:22.050 --> 00:02:23.160\nAll right, so let's talk about OSPF.\n\n48\n00:02:23.160 --> 00:02:26.210\nI've got a little topology\nwhipped up here on my network.\n\n49\n00:02:26.210 --> 00:02:30.760\nAnd this is just kinda of a hierarchy and\nmaybe not the most realistic of networks,\n\n50\n00:02:30.760 --> 00:02:34.420\nbut we might have a headquarters and\na disaster recover facility.\n\n51\n00:02:34.420 --> 00:02:37.950\nAnd we want all of our various branches\nconnected back into that environment.\n\n52\n00:02:37.950 --> 00:02:40.460\nSo we end up with a hierarchy\nthat looks something like this.\n\n53\n00:02:40.460 --> 00:02:43.680\nWell, in this network I do\nactually have a loop, right?\n\n54\n00:02:43.680 --> 00:02:46.500\nSee the loop right here smack\nin the middle of the network.\n\n55\n00:02:46.500 --> 00:02:50.570\nA loop doesn't exist out here in these\nbranches or over here in these branches,\n\n56\n00:02:50.570 --> 00:02:52.450\nbut in the core of my network,\nthere is indeed a loop.\n\n57\n00:02:52.450 --> 00:02:56.610\nAnd this is very common because we want\nredundancy especially in the core.\n\n58\n00:02:56.610 --> 00:02:59.560\nThe core is the most important part,\ncuz you don't want a failure to happen\n\n59\n00:02:59.560 --> 00:03:02.450\nin the middle and\nsegregate your network into two halves.\n\n60\n00:03:02.450 --> 00:03:03.860\nThat would be bad.\n\n61\n00:03:03.860 --> 00:03:05.350\nSo half your network\nwould probably be okay,\n\n62\n00:03:05.350 --> 00:03:08.170\nthey'd be on the side with the servers,\nthe other half would be really\n\n63\n00:03:08.170 --> 00:03:10.410\nangry because they'd be on\nthe side without the servers.\n\n64\n00:03:10.410 --> 00:03:12.159\nSo we wanna make sure we\nhave a redundancy and\n\n65\n00:03:12.159 --> 00:03:14.380\nin the core is where\nthat normally happens.\n\n66\n00:03:14.380 --> 00:03:18.870\nNow the problem here is we do indeed have\na loop, that we're gonna learn about\n\n67\n00:03:18.870 --> 00:03:23.600\nnetworks and they're gonna kinda rattle\naround here like this in the loop, and\n\n68\n00:03:23.600 --> 00:03:25.300\nthat's certainly a bad thing.\n\n69\n00:03:25.300 --> 00:03:28.200\nBut with OSPF that doesn't happen.\n\n70\n00:03:28.200 --> 00:03:32.620\nIt doesn't happen because in OSPF,\nwe don't just talk to our neighbor.\n\n71\n00:03:32.620 --> 00:03:35.320\nSo for example, this router way\ndown here at the bottom left,\n\n72\n00:03:35.320 --> 00:03:38.420\nit doesn't just talk to this\nguy right here and that's it.\n\n73\n00:03:38.420 --> 00:03:41.730\nI mean it certainly does,\nit talks to that guy absolutely.\n\n74\n00:03:41.730 --> 00:03:48.240\nBut it also learns about everybody\nelse on the entire network.\n\n75\n00:03:48.240 --> 00:03:50.720\nEvery single router.\n\n76\n00:03:50.720 --> 00:03:53.490\nNot just the neighbors right here,\nnot just the upstream person, but\n\n77\n00:03:53.490 --> 00:03:56.600\nthe entire topology as a whole.\n\n78\n00:03:56.600 --> 00:04:00.090\nLink State Protocols maintained what\nthey call their Link State Database.\n\n79\n00:04:00.090 --> 00:04:03.490\nAnd the Link State Database has a record\nof all the routers that are out there,\n\n80\n00:04:03.490 --> 00:04:06.500\nall the networks that are out there,\nall the bandwidth and\n\n81\n00:04:06.500 --> 00:04:11.250\ncost of each of those network,s it's\ncataloging all of that information.\n\n82\n00:04:11.250 --> 00:04:13.850\nOn a positive side, that means no loops.\n\n83\n00:04:13.850 --> 00:04:14.960\nAll right, great no loops.\n\n84\n00:04:14.960 --> 00:04:15.930\nPerfect.\n\n85\n00:04:15.930 --> 00:04:20.030\nOn a negative side, it means the routers\nhave to work harder than normal, right.\n\n86\n00:04:20.030 --> 00:04:22.270\nIt means that this router down here,\n\n87\n00:04:22.270 --> 00:04:24.660\nthat under a distance vector\nwould only see its neighbor.\n\n88\n00:04:24.660 --> 00:04:28.380\nNow it's gotta catalog information for\nall of the routers, it's gotta maintain\n\n89\n00:04:28.380 --> 00:04:32.930\na database, and that database encompasses\nall the routers that are out there.\n\n90\n00:04:32.930 --> 00:04:36.270\nAnd that link state database gets\nstored in RAM, so it's eating up RAM.\n\n91\n00:04:36.270 --> 00:04:40.725\nAnd then it's gotta look at\nthe database and it has to build a map.\n\n92\n00:04:40.725 --> 00:04:43.035\nIt builds a map of the network so\n\n93\n00:04:43.035 --> 00:04:46.465\nit can figure out the best way\nto get from point A to point B.\n\n94\n00:04:46.465 --> 00:04:51.185\nAnd that map, it takes CPU to generate\nthe map, and then RAM to store the map,\n\n95\n00:04:51.185 --> 00:04:52.385\nit's in the database.\n\n96\n00:04:52.385 --> 00:04:57.445\nSo when that happens, it's more\nresource intensive on the router.\n\n97\n00:04:57.445 --> 00:05:00.445\nNow if you have Cisco routers,\nthey're more than capable of handling it.\n\n98\n00:05:00.445 --> 00:05:01.125\nThey've got the memory.\n\n99\n00:05:01.125 --> 00:05:02.430\nThey've got the CPU.\n\n100\n00:05:02.430 --> 00:05:05.840\nBut the bigger your network gets,\nthe more memory and\n\n101\n00:05:05.840 --> 00:05:08.930\nthe more CPU it takes\nbuilding that tree is tough.\n\n102\n00:05:08.930 --> 00:05:10.130\nAnd they can't just share it,\n\n103\n00:05:10.130 --> 00:05:15.030\nthey can't share the tree between each\nother because every router makes the tree,\n\n104\n00:05:15.030 --> 00:05:20.400\nmakes the map based on the idea that\nit is the center of the universe.\n\n105\n00:05:20.400 --> 00:05:23.140\nSo this router right here in the middle\nthinks that it is the center of\n\n106\n00:05:23.140 --> 00:05:27.300\nthe universe, sort of is, but\nthis router way out here the branch,\n\n107\n00:05:27.300 --> 00:05:30.240\nit thinks that it's the center\nof the universe, and it isn't.\n\n108\n00:05:30.240 --> 00:05:32.450\nBut it's gonna map\nthe network as if it was.\n\n109\n00:05:32.450 --> 00:05:35.150\nAnd it will say with me being\nthe center of the universe,\n\n110\n00:05:35.150 --> 00:05:37.980\nwhat is the best way to get to point A or\nto get to point B?\n\n111\n00:05:37.980 --> 00:05:39.920\nAnd it's going to map that out.\n\n112\n00:05:39.920 --> 00:05:43.510\nAnd that's gonna be different that what\nthis router way over here's gonna do.\n\n113\n00:05:43.510 --> 00:05:46.580\nCuz it's gonna think that it is\nthe center of the universe and\n\n114\n00:05:46.580 --> 00:05:48.250\nmap out point A to point B.\n\n115\n00:05:48.250 --> 00:05:51.490\nSo they're all having to do\nthose calculations separate.\n\n116\n00:05:51.490 --> 00:05:54.130\nAnd they're running what's called\nthe Dijkstra algorithm, or\n\n117\n00:05:54.130 --> 00:05:56.410\nthe shortest path first algorithm, SPF.\n\n118\n00:05:56.410 --> 00:06:00.100\nAnd that name, open shortest path first.\n\n119\n00:06:00.100 --> 00:06:03.370\nOpen just means it's an open standard,\nthat anybody can run it, and\n\n120\n00:06:03.370 --> 00:06:05.380\nit's not a big deal, right.\n\n121\n00:06:05.380 --> 00:06:07.710\nShortest path first, SPF,\nthat's the algorithm.\n\n122\n00:06:07.710 --> 00:06:12.470\nAnd the algorithm is a simple\nmathematical formula it uses to calculate\n\n123\n00:06:12.470 --> 00:06:13.870\nwhat's gonna be the best path.\n\n124\n00:06:13.870 --> 00:06:16.450\nAnd we'll touch on that formula\nhere in a minute, right.\n\n125\n00:06:16.450 --> 00:06:20.700\nBefore I do that though, I wanna\nhighlight the big weakness of OSPF,\n\n126\n00:06:20.700 --> 00:06:22.700\nwhich is that it can be a little\nbit resource-intensive.\n\n127\n00:06:22.700 --> 00:06:25.321\nAnd if you have Cisco equipment you're\nfine, if you have third party equipment\n\n128\n00:06:25.321 --> 00:06:28.036\nyou're probably fine there too because\nthis has been around for over 20 years.\n\n129\n00:06:28.036 --> 00:06:31.199\nBut you still have to be aware of it.\n\n130\n00:06:31.199 --> 00:06:34.665\nAnd as your network grows and grows and\ngrows, and you get into the enterprise\n\n131\n00:06:34.665 --> 00:06:38.128\nspace when you have hundreds or thousands\nof routers, and you've got tens of\n\n132\n00:06:38.128 --> 00:06:41.910\nthousands of routes, OSPF can start\nto get a little sluggish, all right?\n\n133\n00:06:41.910 --> 00:06:44.910\nAnd the reason it get's\nsluggish is if a change occurs\n\n134\n00:06:44.910 --> 00:06:46.210\nanywhere in the network, right?\n\n135\n00:06:46.210 --> 00:06:47.300\nLet me show you here in the topology.\n\n136\n00:06:47.300 --> 00:06:52.460\nLet's say this link right here between\nthese two routers were to fail, okay?\n\n137\n00:06:52.460 --> 00:06:55.240\nNow if I'm this router,\nway down here at the bottom left,\n\n138\n00:06:55.240 --> 00:06:57.600\nsee how it's only got one connection?\n\n139\n00:06:57.600 --> 00:06:59.550\nIt's only got one way in and one way out.\n\n140\n00:06:59.550 --> 00:07:04.660\nSo 100% of its traffic is gonna go out\nthis link, or 100% of its routed traffic.\n\n141\n00:07:04.660 --> 00:07:08.480\nSo local traffic stays local but\nrouted traffic will go over to this link.\n\n142\n00:07:08.480 --> 00:07:10.370\nWhen this link up here fails, so\n\n143\n00:07:10.370 --> 00:07:15.080\nif it disappears, does that change\nthe decision this router's gonna make?\n\n144\n00:07:15.080 --> 00:07:16.370\nNot one single bit.\n\n145\n00:07:16.370 --> 00:07:19.510\nIt's still gonna send 100% of it's\nrouted traffic right over this one link.\n\n146\n00:07:19.510 --> 00:07:22.160\nEven though there's been a failure\nsomewhere in the network,\n\n147\n00:07:22.160 --> 00:07:23.670\nwe don't change our decision.\n\n148\n00:07:23.670 --> 00:07:29.700\nBut the moment that link fails,\nit triggers an SPF calculation.\n\n149\n00:07:29.700 --> 00:07:32.200\nAll the other routers have\nto learn about that change.\n\n150\n00:07:32.200 --> 00:07:34.720\nHey guys this link no longer exists,\neverybody learns about it cuz\n\n151\n00:07:34.720 --> 00:07:37.730\neverybody knew about it, and\nthey take it out of their database.\n\n152\n00:07:37.730 --> 00:07:41.520\nAnd now their database has changed,\nso they rerun the SPF algorithm.\n\n153\n00:07:41.520 --> 00:07:43.050\nAnd they recalculate.\n\n154\n00:07:43.050 --> 00:07:44.430\nDoes this impact me?\n\n155\n00:07:44.430 --> 00:07:45.400\nNo.\nAll right, good, so\n\n156\n00:07:45.400 --> 00:07:46.290\nI won't change my routing table.\n\n157\n00:07:46.290 --> 00:07:48.210\nOr, yes, it impacts me.\n\n158\n00:07:48.210 --> 00:07:52.399\nFor this router, when it wants to get\ndown to this router over here, right, so\n\n159\n00:07:52.399 --> 00:07:53.420\nit wants to cross.\n\n160\n00:07:53.420 --> 00:07:55.550\nThe fastest way would be\nto jump right over here.\n\n161\n00:07:55.550 --> 00:07:57.124\nAssuming all the lines were equal.\n\n162\n00:07:57.124 --> 00:08:00.934\nWell as soon as this line here goes away,\nas soon as this link is gone,\n\n163\n00:08:00.934 --> 00:08:03.373\nnow it's got to go around this way and\nover.\n\n164\n00:08:03.373 --> 00:08:06.078\nSo it is going to make\na different decision.\n\n165\n00:08:06.078 --> 00:08:09.990\nThat router is absolutely\nimpacted by the failure.\n\n166\n00:08:09.990 --> 00:08:13.580\nBut a lot of our routers are not\nimpacted one single bit.\n\n167\n00:08:13.580 --> 00:08:16.935\nBut that doesn't change the fact that\nthey're still going to run the SPF\n\n168\n00:08:16.935 --> 00:08:17.543\nalgorithm.\n\n169\n00:08:17.543 --> 00:08:20.395\nThey're gonna do a recalculation,\nthey have to learn about the change,\n\n170\n00:08:20.395 --> 00:08:23.310\nit gets communicated\nthrough the whole network.\n\n171\n00:08:23.310 --> 00:08:25.610\nSo in a small network we\ndon't worry about that.\n\n172\n00:08:25.610 --> 00:08:28.470\nWho cares, it's a small network,\nit's no big deal.\n\n173\n00:08:28.470 --> 00:08:33.390\nBut when you've got thousands of\nrouters and that many networks,\n\n174\n00:08:33.390 --> 00:08:36.240\nthe odds of having intermittent\nchanges like these are pretty high.\n\n175\n00:08:36.240 --> 00:08:39.010\nWhich means your routers will\nbe recalculating all the time.\n\n176\n00:08:39.010 --> 00:08:42.760\nIn Cisco land we have a word called\nconvergence, and your network is said to\n\n177\n00:08:42.760 --> 00:08:47.570\nbe converged when every router knows\nabout all the routes that are out there.\n\n178\n00:08:47.570 --> 00:08:50.380\nAnd it's sitting there happy,\nit knows about everything.\n\n179\n00:08:50.380 --> 00:08:53.647\nWhen a link changes and\nwe're doing recalculations,\n\n180\n00:08:53.647 --> 00:08:57.844\nthat's our network reconverging,\nand it takes time to reconverge.\n\n181\n00:08:57.844 --> 00:09:00.840\nNot a huge amount of time,\nusually just a couple of seconds.\n\n182\n00:09:00.840 --> 00:09:02.330\nWith some routing protocols\nit can take longer,\n\n183\n00:09:02.330 --> 00:09:05.490\nwith OSPF it's normally pretty quick,\nbut it still happens.\n\n184\n00:09:05.490 --> 00:09:08.540\nAnd so every time the network\nchanges we're having to reconverge.\n\n185\n00:09:08.540 --> 00:09:12.140\nAnd that takes away resources on every\nsingle router in your environment.\n\n186\n00:09:12.140 --> 00:09:16.810\nSo in OSPF, what we can do is we\ncan divide our network up, and\n\n187\n00:09:16.810 --> 00:09:20.290\nyou can divide it into\nwhat are called areas.\n\n188\n00:09:20.290 --> 00:09:23.012\nSo here I've taken that same topology and\n\n189\n00:09:23.012 --> 00:09:27.302\nI've diced it up into three areas,\nArea 0, Area 1 and Area 2.\n\n190\n00:09:27.302 --> 00:09:34.122\nWhen you do this, OSPF will only\ntalk to routers in the same area,\n\n191\n00:09:34.122 --> 00:09:38.090\nI've shrunk my network down, okay?\n\n192\n00:09:38.090 --> 00:09:40.318\nAnd by doing this, if you look at Area 1,\n\n193\n00:09:40.318 --> 00:09:43.906\nthese three routers are gonna talk\nto each other, and that's it.\n\n194\n00:09:43.906 --> 00:09:47.300\nAnd in Area 2, these three routers are\ngonna talk to each other, and that's it.\n\n195\n00:09:47.300 --> 00:09:50.140\nAnd in Area 0, these four routers\nare going to talk to each other.\n\n196\n00:09:51.260 --> 00:09:54.390\nNow in between each area,\n\n197\n00:09:54.390 --> 00:09:58.300\nyou'll see there's a router\nthat's actually in two areas.\n\n198\n00:09:58.300 --> 00:10:03.120\nIn OSPF you can have a router that\nexists in more than one area,\n\n199\n00:10:03.120 --> 00:10:06.630\nit's called an Area Border Router,\nan ABR, okay?\n\n200\n00:10:06.630 --> 00:10:08.220\nThat's an area border router.\n\n201\n00:10:08.220 --> 00:10:10.040\nABRs, it's not a magical configuration or\nanything.\n\n202\n00:10:10.040 --> 00:10:11.960\nYou just go in, and\n\n203\n00:10:11.960 --> 00:10:17.170\nin OSPF you configure areas based on\nnetwork subnets or based on the interface.\n\n204\n00:10:17.170 --> 00:10:19.873\nAnd so you just put an interface\nin two different areas.\n\n205\n00:10:19.873 --> 00:10:23.320\nOr not one interface, but you have two\ninterfaces, you put one in Area 1,\n\n206\n00:10:23.320 --> 00:10:25.020\none in Area 0, now you're an ABR.\n\n207\n00:10:25.020 --> 00:10:27.050\nThat's it, it's as simple as that.\n\n208\n00:10:27.050 --> 00:10:31.420\nSo that border router,\nthat's our path into that other area.\n\n209\n00:10:31.420 --> 00:10:36.290\nSo for these routers,\nno matter what happens, they've only got\n\n210\n00:10:36.290 --> 00:10:40.220\none way to transit from Area 1 to Area 0,\nit's right through this router.\n\n211\n00:10:40.220 --> 00:10:42.980\nSo the cool part is,\nif this link up here were to fail,\n\n212\n00:10:42.980 --> 00:10:45.550\nlike I mentioned in the last example,\nright?\n\n213\n00:10:45.550 --> 00:10:48.490\nSo if this link were to fail,\nthese routers here\n\n214\n00:10:48.490 --> 00:10:52.160\nin Area 0 are gonna exchange information\nand they're gonna recalculate.\n\n215\n00:10:52.160 --> 00:10:58.230\nBut nothing changed for Area 1, Area 1\ndoesn't even know about that link anymore.\n\n216\n00:10:58.230 --> 00:11:00.430\nWe don't know about the link,\nwe don't have to recalculate.\n\n217\n00:11:00.430 --> 00:11:05.000\nWe don't have to exchange the information\nto know that there was a change.\n\n218\n00:11:05.000 --> 00:11:06.830\nWe just keep running and doing what we do.\n\n219\n00:11:06.830 --> 00:11:10.105\nSo now, Area 1 is not impacted\nby changes in Area 0.\n\n220\n00:11:10.105 --> 00:11:15.052\nIn fact, areas are never impacted by\nchanges in other areas, unless it was\n\n221\n00:11:15.052 --> 00:11:19.940\nthe only way to get to that area, right,\nlike if this router were to fail.\n\n222\n00:11:19.940 --> 00:11:23.320\nBut this router has interfaces\nin more than one area,\n\n223\n00:11:23.320 --> 00:11:28.420\nso It's already gonna impact us because\nit does exist inside of Area 1, right?\n\n224\n00:11:28.420 --> 00:11:33.150\nSo that's the way areas work,\nwe can slice up our network.\n\n225\n00:11:33.150 --> 00:11:36.530\nAnd areas just get a number,\nso I've got Area 0, 1, 2.\n\n226\n00:11:36.530 --> 00:11:41.394\nThe area number is actually, I believe\nit's a 32 bit number, if I remember right.\n\n227\n00:11:41.394 --> 00:11:43.140\nNo, it's not a full 32,\nit's 16 bit, isn't it?\n\n228\n00:11:43.140 --> 00:11:46.150\nCuz it's 0 through 65,535\nif I remember right.\n\n229\n00:11:46.150 --> 00:11:48.735\nWe'll see when we get into our config,\nit doesn't matter,\n\n230\n00:11:48.735 --> 00:11:52.710\nyou've get tens of thousands or more\nof numbers that you can use for areas.\n\n231\n00:11:52.710 --> 00:11:55.300\nBut it's just a number, and for\nthe most part, they're not special,\n\n232\n00:11:55.300 --> 00:11:56.980\nyou can pick whatever number you want.\n\n233\n00:11:56.980 --> 00:12:00.838\nThere is one number that is\nspecial though, and that's Area 0.\n\n234\n00:12:00.838 --> 00:12:04.619\nArea 0 is what's called the backbone area.\n\n235\n00:12:04.619 --> 00:12:11.209\nIf I had a router that was sitting just\nkinda in between Area 1 and Area 2.\n\n236\n00:12:11.209 --> 00:12:15.252\nSo I'm just gonna drop this router in\nhere and I'll throw a link across so\n\n237\n00:12:15.252 --> 00:12:18.454\nthat we've got it connecting\nthese two areas together.\n\n238\n00:12:18.454 --> 00:12:23.076\nNow what I've effectively done is\nI've bridged Area 1 and Area 2.\n\n239\n00:12:23.076 --> 00:12:26.873\nAnd the way it looks, you'd think, hey,\nif I'm on a computer here in Area 1, and\n\n240\n00:12:26.873 --> 00:12:31.390\nI need to get to Area 2, I can just jump\nright through that router, I'm there.\n\n241\n00:12:31.390 --> 00:12:32.750\nExcept it won't work.\n\n242\n00:12:33.950 --> 00:12:38.890\nArea border routers, ABRs,\ncan only exist between Area 0 and\n\n243\n00:12:38.890 --> 00:12:44.270\nanother area, they can't exist\nbetween two non-zero areas, right?\n\n244\n00:12:44.270 --> 00:12:46.365\nSo this will never flow traffic.\n\n245\n00:12:46.365 --> 00:12:51.530\nInter-area traffic, traffic that goes\nbetween areas, has to pass through Area 0.\n\n246\n00:12:51.530 --> 00:12:56.313\nSo Area 1, if it wants to get to Area 2,\nit's gotta go to Area 0 first and\n\n247\n00:12:56.313 --> 00:12:57.720\nthen down to Area 2.\n\n248\n00:12:57.720 --> 00:13:02.050\nAnd same thing for the reverse, Area 2 has\nto go to Area 0 first and then to Area 1,\n\n249\n00:13:02.050 --> 00:13:03.600\nit's got to go through that route.\n\n250\n00:13:03.600 --> 00:13:08.640\nSo if I have a router in between two non\n0 areas, it's never gonna build traffic,\n\n251\n00:13:08.640 --> 00:13:10.700\nOSPF will not build paths across that.\n\n252\n00:13:10.700 --> 00:13:12.100\nYou can override it with static routes,\nbut\n\n253\n00:13:12.100 --> 00:13:14.810\nOSPF by itself is not\ngonna let that happen.\n\n254\n00:13:14.810 --> 00:13:17.318\nAll right, so I'm just gonna get that\nout of there because there's no point in\n\n255\n00:13:17.318 --> 00:13:18.195\nhaving that router there.\n\n256\n00:13:18.195 --> 00:13:22.141\nRemember that inter-area traffic,\ntraffic between areas,\n\n257\n00:13:22.141 --> 00:13:26.900\nhas to pass through Area 0 at some point,\nthat's the backbone area.\n\n258\n00:13:26.900 --> 00:13:28.240\nAnd you can't nest areas, too,\n\n259\n00:13:28.240 --> 00:13:33.310\nI can't have a Area 4 down here off\nof Area 1, cuz it won't flow traffic.\n\n260\n00:13:33.310 --> 00:13:37.470\nEvery area has to be connected to Area 0,\nthe backbone area.\n\n261\n00:13:37.470 --> 00:13:38.180\nNow in a small or\n\n262\n00:13:38.180 --> 00:13:41.745\nmedium network you're not gonna have\nenough routers to need areas, right?\n\n263\n00:13:41.745 --> 00:13:45.038\nIn this picture here I've got,\nwhat, ten routers?\n\n264\n00:13:45.038 --> 00:13:49.494\nSo ten routers is not enough to need\nareas, so I would just do one area.\n\n265\n00:13:49.494 --> 00:13:53.960\nAnd when you just do one area you could\ntechnically pick whatever number you want.\n\n266\n00:13:53.960 --> 00:13:56.460\nBut you'll almost always\npick Area 0 because\n\n267\n00:13:56.460 --> 00:13:59.820\nthat'll make it easier to expand later\non if you need to add other areas.\n\n268\n00:13:59.820 --> 00:14:04.329\nSo you're normally gonna deploy this and\nit'll just be a single area and that's it.\n\n269\n00:14:04.329 --> 00:14:08.458\nBut you'll notice on the exam objectives\nthey call out multi-area OSPF.\n\n270\n00:14:08.458 --> 00:14:11.790\nAnd if you want multi-area,\nthis is how it's gotta be configured.\n\n271\n00:14:11.790 --> 00:14:16.480\nYou'll have Area 0 as your backbone, and\nthen your other areas outside of it.\n\n272\n00:14:16.480 --> 00:14:20.680\nTrying to limit where the changes on the\nnetworks are going to affect us, right?\n\n273\n00:14:20.680 --> 00:14:25.950\nThat's the key aspect of areas, areas\nserve that one purpose and that's it.\n\n274\n00:14:25.950 --> 00:14:28.490\nJust the ability to minimize\nupdates throughout the network.\n\n275\n00:14:28.490 --> 00:14:32.690\nSo when a link fails in one area, the\nother areas don't have to learn about it.\n\n276\n00:14:32.690 --> 00:14:37.890\n&gt;&gt; Now Don, on those area border routers,\nis the CPU a higher usage there\n\n277\n00:14:37.890 --> 00:14:41.630\nbecause it actually is between those\ntwo areas when their changes go on?\n\n278\n00:14:41.630 --> 00:14:43.850\n&gt;&gt; Yeah, absolutely,\ncuz it's gotta track all the changes for\n\n279\n00:14:43.850 --> 00:14:44.920\ntwo different areas, right?\n\n280\n00:14:44.920 --> 00:14:46.510\nSo it's existing in both areas.\n\n281\n00:14:46.510 --> 00:14:49.670\nAnd you can have a border router attached\nto four or five areas if you wanted.\n\n282\n00:14:49.670 --> 00:14:52.310\nAnd it will now be calculating out\nchanges and updates and all that for\n\n283\n00:14:52.310 --> 00:14:54.820\nall of those areas, so\nit is gonna be like that.\n\n284\n00:14:54.820 --> 00:14:57.720\nYour border routers you'll normally\nhave as a little bit beefier ones.\n\n285\n00:14:57.720 --> 00:14:59.420\nYour internal routers,\n\n286\n00:14:59.420 --> 00:15:01.910\nthey'll just be lower end cuz they\ndon't have to make a lot of decisions.\n\n287\n00:15:03.140 --> 00:15:04.800\nAll right,\nthere is another type of border router,\n\n288\n00:15:04.800 --> 00:15:05.960\nI don't know if it'll show up on the exam,\n\n289\n00:15:05.960 --> 00:15:07.330\nbut let me just bring\nit up here real quick.\n\n290\n00:15:08.420 --> 00:15:10.300\nThose that I just showed you are ABRs,\n\n291\n00:15:10.300 --> 00:15:15.070\nright, they exist between areas,\nso area border routers.\n\n292\n00:15:15.070 --> 00:15:18.964\nBut if you've got a connection to\na non OSPF area, like the Internet or\n\n293\n00:15:18.964 --> 00:15:23.330\nsome other routing protocol, EIGRP or\nwhatever, some third party, right?\n\n294\n00:15:23.330 --> 00:15:26.853\nMaybe you've got a dedicated VPN\nconnection to an external company that you\n\n295\n00:15:26.853 --> 00:15:29.960\ndo business with, or\nmaybe it's just the Internet.\n\n296\n00:15:29.960 --> 00:15:32.990\nThat's connecting not one area to another,\n\n297\n00:15:32.990 --> 00:15:38.505\nnot an ABR, but connecting our\nautonomous system to another.\n\n298\n00:15:38.505 --> 00:15:42.770\nYour entire OSPF environment\nis one autonomous system.\n\n299\n00:15:42.770 --> 00:15:45.830\nAnd when you connect to some\nother network like the Internet,\n\n300\n00:15:45.830 --> 00:15:48.240\nthat's a different network entirely.\n\n301\n00:15:48.240 --> 00:15:51.370\nAnd that is going to become\nwhat's called an ASBR,\n\n302\n00:15:51.370 --> 00:15:53.850\nan autonomous system border router.\n\n303\n00:15:53.850 --> 00:15:57.404\nNot an area border router, but an\nautonomous system border router, an ASBR.\n\n304\n00:15:57.404 --> 00:15:59.359\nAnd the way you can figure that,\n\n305\n00:15:59.359 --> 00:16:02.560\nyou just have at least one\ninterface in an OSPF area.\n\n306\n00:16:02.560 --> 00:16:05.256\nAnd one interface connected\nas something else.\n\n307\n00:16:05.256 --> 00:16:07.342\n[LAUGH] And that's gonna make it an ASBR.\n\n308\n00:16:07.342 --> 00:16:10.520\nThere's no magical configuration here,\nit's just tied to the interfaces, right?\n\n309\n00:16:10.520 --> 00:16:15.230\nSo ASBRs are another type of border\nrouter that you might have, right?\n\n310\n00:16:15.230 --> 00:16:19.120\nIn theory you could be an ABR and\nan ASBR at the same time.\n\n311\n00:16:19.120 --> 00:16:21.410\nIf you had a connection out\nto some third-party network,\n\n312\n00:16:21.410 --> 00:16:23.220\nthat can happen, right?\n\n313\n00:16:23.220 --> 00:16:25.520\nBut those are the two types of\nborder routers that we encounter.\n\n314\n00:16:26.620 --> 00:16:29.520\nAll right, another thing that I\nwanna talk about in this episode is\n\n315\n00:16:29.520 --> 00:16:32.320\nhow OSPF makes the decisions\nthat it makes, right?\n\n316\n00:16:32.320 --> 00:16:34.660\nBecause if you got a border router,\nit knows, hey,\n\n317\n00:16:34.660 --> 00:16:36.380\nthis is data going between two areas.\n\n318\n00:16:36.380 --> 00:16:37.514\nBut within an area,\n\n319\n00:16:37.514 --> 00:16:41.860\nit's gotta figure out between these\npaths what's the best way to go.\n\n320\n00:16:41.860 --> 00:16:45.360\nAnd it does that based on\na couple of different things.\n\n321\n00:16:45.360 --> 00:16:47.105\nWell, in other episodes,\n\n322\n00:16:47.105 --> 00:16:52.260\nyou've probably heard me say that OSPF\nuses bandwidth to make its decisions.\n\n323\n00:16:52.260 --> 00:16:55.570\nAnd that statement, it's true and\nit's false all at the same time.\n\n324\n00:16:55.570 --> 00:16:56.800\nSo let's do a little clarification.\n\n325\n00:16:56.800 --> 00:16:59.450\nCuz we need to make sure we absolutely\nhave this right on the exam.\n\n326\n00:16:59.450 --> 00:17:03.360\nSo yes,\nOSPF uses bandwidth to make decisions.\n\n327\n00:17:03.360 --> 00:17:08.180\nBut bandwidth is not\nthe metric that OSPF uses.\n\n328\n00:17:08.180 --> 00:17:09.480\nIt's kind of confusing.\n\n329\n00:17:09.480 --> 00:17:12.480\nOSPF's metric is called cost.\n\n330\n00:17:12.480 --> 00:17:14.350\nIt's not called bandwidth.\n\n331\n00:17:14.350 --> 00:17:18.010\nAnd cost is not directly representative\nof that bandwidth either.\n\n332\n00:17:18.010 --> 00:17:19.340\nWhen you look at the cost of a line,\n\n333\n00:17:19.340 --> 00:17:22.880\nif I tell you the cost of a line is one,\nwhat does that mean to you?\n\n334\n00:17:22.880 --> 00:17:23.530\nAll right?\n\n335\n00:17:23.530 --> 00:17:27.620\nWell, if you ever see a cost of one,\nit's a 100-megabit line.\n\n336\n00:17:27.620 --> 00:17:29.990\nSo a 100-megabit line shows\nup with a cost of one.\n\n337\n00:17:29.990 --> 00:17:31.420\nHow does that work out?\n\n338\n00:17:31.420 --> 00:17:36.270\nWell, there's a very simple formula that\nOSPF runs on the bandwidth of a line\n\n339\n00:17:36.270 --> 00:17:38.800\nto turn it into a smaller number, right?\n\n340\n00:17:38.800 --> 00:17:40.660\nThat's the main thing is,\nyou might be thinking, hey,\n\n341\n00:17:40.660 --> 00:17:42.590\nbandwidth is already a number.\n\n342\n00:17:42.590 --> 00:17:44.310\nWhy not just use the number\nthat's already there?\n\n343\n00:17:44.310 --> 00:17:45.590\nRight?\nI got 100 megabits,\n\n344\n00:17:45.590 --> 00:17:46.785\nwrite 100 megabits, done.\n\n345\n00:17:46.785 --> 00:17:51.160\n[LAUGH] So the challenge is there's\nsome bandwidth that's really low and\n\n346\n00:17:51.160 --> 00:17:52.720\nsome bandwidth that's really high, and\n\n347\n00:17:52.720 --> 00:17:56.330\nit's gotta get them added together\nto form the full path cost.\n\n348\n00:17:56.330 --> 00:17:59.110\nAnd the bigger that number gets,\nthe more memory it takes,\n\n349\n00:17:59.110 --> 00:18:00.830\nthe more space it takes in the database.\n\n350\n00:18:00.830 --> 00:18:03.250\nSo it runs it through a simple\nformula to make the number small.\n\n351\n00:18:03.250 --> 00:18:05.350\nSmaller numbers are easier to work with,\nand\n\n352\n00:18:05.350 --> 00:18:08.830\na lot of times we can make them\nsignificantly smaller and not sacrifice\n\n353\n00:18:08.830 --> 00:18:12.760\nany accuracy as far as the decision that\nwe're gonna make in calculating the path.\n\n354\n00:18:12.760 --> 00:18:14.590\nAnd so that's exactly what OSPF does.\n\n355\n00:18:14.590 --> 00:18:19.510\nSo on the exam, if they ask you what the\nmetric for OSPF is, it's not bandwidth.\n\n356\n00:18:19.510 --> 00:18:20.580\nIt's cost.\n\n357\n00:18:20.580 --> 00:18:22.640\nAll right?\nCost is the metric for OSPF.\n\n358\n00:18:22.640 --> 00:18:25.660\nNow, to figure out cost,\nyou have to know the bandwidth.\n\n359\n00:18:25.660 --> 00:18:26.960\nThe formula requires bandwidth.\n\n360\n00:18:26.960 --> 00:18:28.400\nThe formula actually requires two pieces.\n\n361\n00:18:28.400 --> 00:18:29.610\nLet me show you the formula here.\n\n362\n00:18:29.610 --> 00:18:31.590\nIt's not a giant secret or anything.\n\n363\n00:18:31.590 --> 00:18:33.222\nHere's the formula.\n\n364\n00:18:33.222 --> 00:18:37.890\nCost = reference bandwidth\n/ actual bandwidth.\n\n365\n00:18:37.890 --> 00:18:40.310\nAnd that reference bandwidth\nis simply 100 megabit.\n\n366\n00:18:40.310 --> 00:18:43.420\nSo when they developed OSPF,\nthey said, all right,\n\n367\n00:18:43.420 --> 00:18:47.120\n100 megabit is going to be our\nstandard reference bandwidth.\n\n368\n00:18:47.120 --> 00:18:49.330\nThis is what we expect networks to be.\n\n369\n00:18:49.330 --> 00:18:54.480\nAnd then we can take what you actually\nhave, and factor that against\n\n370\n00:18:54.480 --> 00:18:58.750\n100 megabit and come up with a cost\nnumber that we'll use for calculations.\n\n371\n00:18:58.750 --> 00:19:03.200\nNow, that works out really well for\n100-megabit and slower lines.\n\n372\n00:19:03.200 --> 00:19:04.760\nIt doesn't work out so well for\n\n373\n00:19:04.760 --> 00:19:09.740\nlines over 100 megabit,\nwhich most of our networks are these days.\n\n374\n00:19:09.740 --> 00:19:12.700\nMost of our local area networks\nare over 100 megabit, but\n\n375\n00:19:12.700 --> 00:19:16.770\neven a lot of our wide area networks these\ndays are over 100 megabit too, and so\n\n376\n00:19:16.770 --> 00:19:19.320\nthat wreaks a little bit of\nhavoc with OSPF's calculation.\n\n377\n00:19:19.320 --> 00:19:20.600\nI'll show you why here in a little bit.\n\n378\n00:19:20.600 --> 00:19:23.305\nBut let's focus on lower numbers first so\nwe can learn how it's supposed to work,\n\n379\n00:19:23.305 --> 00:19:27.270\nand then we'll kinda see what\nhappens with higher bandwidth.\n\n380\n00:19:27.270 --> 00:19:32.020\nIf I want to calculate out cost,\nhere's a couple of links on these routers.\n\n381\n00:19:32.020 --> 00:19:34.740\nThe connection from Router A to\nRouter B is 1.544 megabit.\n\n382\n00:19:34.740 --> 00:19:38.630\nThat number is a pretty standard T1 line.\n\n383\n00:19:38.630 --> 00:19:40.890\nIf you were to go and\nget a T1, a serial connection,\n\n384\n00:19:40.890 --> 00:19:45.490\na dedicated point-to-point link to an ISP,\nit'll usually be about 1.544 megabit.\n\n385\n00:19:45.490 --> 00:19:48.310\nAnd I know those of you out\nthere with cable modems and\n\n386\n00:19:48.310 --> 00:19:50.910\nDSL at home are kind of\nlaughing at this bandwidth, but\n\n387\n00:19:50.910 --> 00:19:53.328\nthis used to be an amazing amount\nof bandwidth back in the day.\n\n388\n00:19:53.328 --> 00:19:54.870\nBut dedicated upload-download,\n\n389\n00:19:54.870 --> 00:19:57.880\nthis is what a single serial channel\nis gonna give us these days.\n\n390\n00:19:57.880 --> 00:19:59.180\nYou can certainly get more.\n\n391\n00:19:59.180 --> 00:20:01.410\nBut that's the reference\nI'm gonna use here.\n\n392\n00:20:01.410 --> 00:20:06.220\nAnd then we've got another link here\nfrom Router B to Router C which has\n\n393\n00:20:06.220 --> 00:20:07.160\na 768 K link.\n\n394\n00:20:07.160 --> 00:20:09.350\nAll right?\nAnd that's half of a T1, or\n\n395\n00:20:09.350 --> 00:20:10.210\na fractional T1.\n\n396\n00:20:10.210 --> 00:20:13.250\nAgain, another type of\nconnection we might get,\n\n397\n00:20:13.250 --> 00:20:16.570\nor a full BRI ISDN might get you 768 K,\nactually.\n\n398\n00:20:16.570 --> 00:20:19.670\nI think it would be four BRIs.\n\n399\n00:20:19.670 --> 00:20:21.540\nIt doesn't matter, ISDN's stupid.\n\n400\n00:20:21.540 --> 00:20:22.040\nSo, [LAUGH]\n&gt;&gt; [LAUGH]\n\n401\n00:20:22.040 --> 00:20:22.958\n&gt;&gt; So either way, so\n\n402\n00:20:22.958 --> 00:20:25.240\nhere's some low-bandwidth links.\n\n403\n00:20:25.240 --> 00:20:29.240\nWhen OSPF looks at these links,\nit's got to convert them\n\n404\n00:20:29.240 --> 00:20:33.620\ninto cost to figure out the cost of each\nlink, so it's gonna run that formula.\n\n405\n00:20:33.620 --> 00:20:38.284\nIt's gonna say 100 megabit\ndivided by 1.544 megabit to\n\n406\n00:20:38.284 --> 00:20:43.204\nfigure out the reference cost\ndivided by the actual bandwidth, and\n\n407\n00:20:43.204 --> 00:20:48.440\nthen come out with the number that\nwill be our true cost, all right?\n\n408\n00:20:48.440 --> 00:20:50.280\nSo if I were to work this out,\n\n409\n00:20:50.280 --> 00:20:52.920\nthe formula would actually look\nsomething like this, right?\n\n410\n00:20:52.920 --> 00:20:57.942\nIt would be in this scenario, cost.\n\n411\n00:20:57.942 --> 00:21:00.350\nWhoops, that's gonna be hard to\nread with all the black text.\n\n412\n00:21:01.440 --> 00:21:08.170\nSo it's gonna be cost = 100 megabit,\nwhich I'll write in bits, right?\n\n413\n00:21:08.170 --> 00:21:11.380\nSo 100 megabit is actually\n100 million bits.\n\n414\n00:21:11.380 --> 00:21:14.950\nSo there we go, that's 100 megabit.\n\n415\n00:21:14.950 --> 00:21:20.049\nAnd it's gonna be divided by 1,544,\n\n416\n00:21:20.049 --> 00:21:24.020\nactually 1,544,000.\n\n417\n00:21:24.020 --> 00:21:26.970\nSo let me fill my commas in there so\nI can remember.\n\n418\n00:21:28.630 --> 00:21:29.260\nThere.\n\n419\n00:21:29.260 --> 00:21:29.910\nAll right.\n\n420\n00:21:29.910 --> 00:21:33.284\nSo that's the formula that is\ngonna feed for my cost, all right.\n\n421\n00:21:33.284 --> 00:21:40.352\nNow, what is 100,000,000\ndivided by 1,544,000?\n\n422\n00:21:40.352 --> 00:21:41.376\nWow, I don't know.\n\n423\n00:21:41.376 --> 00:21:43.128\nSo, we're gonna run it through\na calculator, actually,\n\n424\n00:21:43.128 --> 00:21:45.606\nI think I have a cheat sheet here\nwhere it's written down for me.\n\n425\n00:21:45.606 --> 00:21:48.322\nYou know, actually,\nif I would remember my own slides,\n\n426\n00:21:48.322 --> 00:21:50.395\nI've got it calculated right here for us.\n\n427\n00:21:50.395 --> 00:21:51.560\n&gt;&gt; [LAUGH]\n&gt;&gt; That'll make life easy.\n\n428\n00:21:51.560 --> 00:21:57.160\nSo, 100,000,000 divided by\n1,544,000 Is 64.7666, all right?\n\n429\n00:21:57.160 --> 00:22:01.640\nNow, what does OSPF do with that number?\n\n430\n00:22:01.640 --> 00:22:05.960\nWell, it takes it and it puts it in\nits link-state database, the LSD.\n\n431\n00:22:05.960 --> 00:22:08.390\nSo it goes in the link-state database and\nit sits there.\n\n432\n00:22:08.390 --> 00:22:12.520\nAnd it rounds it up for\nthe sake of the routing table.\n\n433\n00:22:12.520 --> 00:22:14.330\nIt always rounds up.\n\n434\n00:22:14.330 --> 00:22:17.110\nNo matter how small the decimal is,\nit always rounds up.\n\n435\n00:22:17.110 --> 00:22:21.340\nSo if this was 64.0000001,\nit would round it up to 65.\n\n436\n00:22:21.340 --> 00:22:22.850\nAnd it always rounds up.\n\n437\n00:22:22.850 --> 00:22:25.670\nSo it rounds up to 65, that's what\nI would see in my routing table.\n\n438\n00:22:25.670 --> 00:22:27.410\nThat's my cost.\n\n439\n00:22:27.410 --> 00:22:31.810\nSo the cost for a 1.544-megabit T1\nline would show up as a 65 cost line.\n\n440\n00:22:33.145 --> 00:22:38.165\nNow, 65 is not the bandwidth, 65 is\nthe cost that represents the bandwidth.\n\n441\n00:22:38.165 --> 00:22:41.925\nAnd we can reverse-engineer this,\nflip the formula around and\n\n442\n00:22:41.925 --> 00:22:45.670\nmultiply it out and\nfigure out what our actual bandwidth was.\n\n443\n00:22:45.670 --> 00:22:50.910\nBut this is the bandwidth as it stands and\n\n444\n00:22:50.910 --> 00:22:53.830\nthis is the cost that we're gonna see.\n\n445\n00:22:53.830 --> 00:22:56.343\nNow the other link, the 768 K,\nis the same thing, right?\n\n446\n00:22:56.343 --> 00:22:59.800\n100,000,000 divided by 768,000 results in\n130.208, which gets rounded up to 131.\n\n447\n00:22:59.800 --> 00:23:01.960\nThe numbers are always getting rounded up,\n\n448\n00:23:01.960 --> 00:23:04.450\nwhich is my little note\nhere in the illustration.\n\n449\n00:23:04.450 --> 00:23:06.300\nRight?\nAlways getting rounded up\n\n450\n00:23:06.300 --> 00:23:08.532\nto make sure that we get a fair number.\n\n451\n00:23:08.532 --> 00:23:13.260\nBut notice what I wrote there is,\nit always rounds up, but\n\n452\n00:23:13.260 --> 00:23:15.690\nin the database it is exact.\n\n453\n00:23:15.690 --> 00:23:17.600\nSo it doesn't just throw\nthe decimals away.\n\n454\n00:23:17.600 --> 00:23:19.050\nNow, why is that important?\n\n455\n00:23:19.050 --> 00:23:21.820\nIt's important because\nwhen we calculate a path,\n\n456\n00:23:23.010 --> 00:23:27.640\nthe path is the result of all\nof the links in the path.\n\n457\n00:23:27.640 --> 00:23:30.005\nAnd what it does is it adds them together.\n\n458\n00:23:30.005 --> 00:23:33.755\nSo it takes the cost of this line and\nit adds it to the cost of this line.\n\n459\n00:23:33.755 --> 00:23:36.535\nAnd if it's just been\nrounding the numbers up,\n\n460\n00:23:36.535 --> 00:23:40.275\nwe could end up with a path that's\none higher than it should be, or\n\n461\n00:23:40.275 --> 00:23:43.275\nfive higher than it should be,\nbased on however many hops you've got.\n\n462\n00:23:43.275 --> 00:23:47.628\nWhen it should be a few lower cuz we threw\nthose decimals away and we shouldn't have.\n\n463\n00:23:47.628 --> 00:23:50.492\nSo when it goes for the full path,\nit will do it accurately, and\n\n464\n00:23:50.492 --> 00:23:52.239\nI've got an example that shows that.\n\n465\n00:23:52.239 --> 00:23:56.216\nSo here the path cost,\ngoing from end to end,\n\n466\n00:23:56.216 --> 00:24:00.725\nGoing from,\nwhy is that red line jumping out at me?\n\n467\n00:24:00.725 --> 00:24:06.596\nWhatever, so when we go end to end\nacross here its got 64.7666 which is 65,\n\n468\n00:24:06.596 --> 00:24:09.904\nand 130.208 which rounds up to 131,\n\n469\n00:24:09.904 --> 00:24:14.390\nnow if I were to add those up\nmyself that would be 196, right?\n\n470\n00:24:15.700 --> 00:24:20.870\nBut on your router, it's actually\nfollowing the decimal points.\n\n471\n00:24:20.870 --> 00:24:26.740\nAnd when it adds it up it gets 194.9746\nwhich rounds up to 195, right?\n\n472\n00:24:26.740 --> 00:24:29.410\nSo the cost for that path Is 195 and\n\n473\n00:24:30.740 --> 00:24:35.336\nthat 195 represents more than one link.And\nnow we can no longer reverse engineer it.\n\n474\n00:24:35.336 --> 00:24:38.590\nWe can say if I multiply this by\n100,000,000 I'll get what my actual band\n\n475\n00:24:38.590 --> 00:24:39.299\nwidth is.\n\n476\n00:24:39.299 --> 00:24:42.722\nYou won't because this\nnow an aggregate metric.\n\n477\n00:24:42.722 --> 00:24:47.030\nIt's added together the cost of each\nof this links as it passes across\n\n478\n00:24:47.030 --> 00:24:50.284\neach of this line from\nrouter to router to router.\n\n479\n00:24:50.284 --> 00:24:53.300\nEach hop along the way\nis going into that cost.\n\n480\n00:24:53.300 --> 00:24:57.720\nSo when OSPF goes to make its decision all\nof that is getting kinda lumped right in\n\n481\n00:24:57.720 --> 00:24:59.790\nthere and it comes up with that path cost.\n\n482\n00:24:59.790 --> 00:25:03.990\nNow I might have five different paths and\nI can look at the path cost of each one.\n\n483\n00:25:03.990 --> 00:25:08.070\nAnd the one that has to lowest cost\nis the one I'm gonna take, right?\n\n484\n00:25:08.070 --> 00:25:10.300\nThat's the way that we want this\ndecision making process to go.\n\n485\n00:25:10.300 --> 00:25:12.210\nWe want to take the lowest cost path.\n\n486\n00:25:12.210 --> 00:25:15.370\nBecause the bigger the number,\nthe smaller the cost.\n\n487\n00:25:15.370 --> 00:25:16.290\nRight?\nThe bigger the bandwidth,\n\n488\n00:25:16.290 --> 00:25:17.530\nthe smaller the cost.\n\n489\n00:25:17.530 --> 00:25:21.380\nWhen I had 1.5 megabit, it was 65.\n\n490\n00:25:21.380 --> 00:25:23.510\nWhen I had 768 k, it was 130.\n\n491\n00:25:23.510 --> 00:25:26.510\nSo the smaller the bandwidth,\n\n492\n00:25:26.510 --> 00:25:29.390\nthe higher the numbers gonna\nbe that comes out for cost.\n\n493\n00:25:29.390 --> 00:25:31.330\nLower wins in this case\nwhen it comes to cost.\n\n494\n00:25:31.330 --> 00:25:32.330\nLike golf scores right?\n\n495\n00:25:32.330 --> 00:25:33.800\nThe lower number wins.\n\n496\n00:25:33.800 --> 00:25:36.530\nNow let me double back to something\nI mentioned earlier which is high\n\n497\n00:25:36.530 --> 00:25:37.820\nbandwidth lines.\n\n498\n00:25:37.820 --> 00:25:40.220\nHigh bandwidth lines get\na little bit tricky.\n\n499\n00:25:40.220 --> 00:25:43.110\nLet's say I had a 100 megabit line.\n\n500\n00:25:43.110 --> 00:25:47.470\nWell, my reference\nbandwidth is 100 megabit so\n\n501\n00:25:47.470 --> 00:25:52.350\nif I come in here and\nI run the formula for\n\n502\n00:25:52.350 --> 00:25:57.390\n100 megabit divided by 100 megabit\nwhats that going to equal?\n\n503\n00:25:57.390 --> 00:25:58.480\n1.\n\n504\n00:25:58.480 --> 00:26:01.500\nAny number divided by\nitself is gonna equal 1.\n\n505\n00:26:01.500 --> 00:26:03.640\nSo that's what I get.\n\n506\n00:26:03.640 --> 00:26:05.440\nSo, 1.\n\n507\n00:26:05.440 --> 00:26:10.200\nAnything bigger is gonna result\nin a number smaller than 1,\n\n508\n00:26:10.200 --> 00:26:14.240\nand what does OSPF do with\nnumbers that are decimals?\n\n509\n00:26:14.240 --> 00:26:15.460\nIt rounds them up.\n\n510\n00:26:15.460 --> 00:26:17.080\nSo it's gonna round them up to 1.\n\n511\n00:26:17.080 --> 00:26:19.410\nSo if I have a gigabit line, right?\n\n512\n00:26:19.410 --> 00:26:21.840\nLet's run it with a gig line.\n\n513\n00:26:21.840 --> 00:26:27.720\nSo if I have a Cost =, and we'll just go\ngig, right, which is gonna be one billion.\n\n514\n00:26:29.840 --> 00:26:33.780\nAnd, wait, shoot, my first number needs to\nbe the reference bandwidth which is always\n\n515\n00:26:33.780 --> 00:26:35.410\n100 megabit, right?\n\n516\n00:26:35.410 --> 00:26:37.970\nThat actually can be overridden but\nit's a really bad idea.\n\n517\n00:26:37.970 --> 00:26:40.300\nSo if you override\nthe reference bandwidth,\n\n518\n00:26:40.300 --> 00:26:43.160\nyou have to override them on all your\nrouters, otherwise all hell breaks loose.\n\n519\n00:26:43.160 --> 00:26:45.320\nYou know you need to keep it consistent.\n\n520\n00:26:45.320 --> 00:26:53.175\nBut if I do 100 million divided\nby 1 billion what do I get?\n\n521\n00:26:53.175 --> 00:26:55.270\n0.1 right?\n\n522\n00:26:55.270 --> 00:26:57.240\nAnd that 0.1 gets rounded up to 1.\n\n523\n00:26:57.240 --> 00:27:00.180\nAnd so it makes the routing\ntable with a cost of 1 and so\n\n524\n00:27:00.180 --> 00:27:02.530\nit's equal to the 100 megabit line.\n\n525\n00:27:02.530 --> 00:27:07.810\nOSPF will see 100 megabit and\na gigabit line as equal.\n\n526\n00:27:07.810 --> 00:27:10.880\nAnd it gets worse,\nif we go up to 10 gigabit, right?\n\n527\n00:27:10.880 --> 00:27:15.973\nI still have my 100 megabit reference,\nand then,\n\n528\n00:27:15.973 --> 00:27:23.911\nI divide that out by my new shiny 10\ngigabit link which is going to equal 0.01.\n\n529\n00:27:24.978 --> 00:27:28.100\nAnd that is also gonna\nget rounded up to 1.\n\n530\n00:27:28.100 --> 00:27:30.660\nAnd so they're all gonna\nbe viewed as equal, right,\n\n531\n00:27:30.660 --> 00:27:31.770\nthey're all gonna have a cost of 1.\n\n532\n00:27:31.770 --> 00:27:35.505\nNow they are going into the database\nwith the actual number, and so\n\n533\n00:27:35.505 --> 00:27:39.985\nif I'm calculating a full path, I may\nstill end up getting the right line but\n\n534\n00:27:39.985 --> 00:27:42.715\nif I'm just looking at individual\ninterfaces to make a decision,\n\n535\n00:27:42.715 --> 00:27:45.985\nI will typically make the wrong decision\nbecause they all have a cost of 1 or\n\n536\n00:27:45.985 --> 00:27:49.455\nwill load balance across\nthe lines because their equal and\n\n537\n00:27:49.455 --> 00:27:51.955\nwill load balance evenly and\nthat can be a problem too.\n\n538\n00:27:51.955 --> 00:27:54.555\nCisco Express Forwarding is a technology\nthat runs in the background who tries\n\n539\n00:27:54.555 --> 00:27:55.450\nto fix that.\n\n540\n00:27:55.450 --> 00:27:56.920\nBut OSPF isn't aware.\n\n541\n00:27:58.410 --> 00:28:02.290\nSo, the only real solution to this is\nto override that reference bandwidth.\n\n542\n00:28:02.290 --> 00:28:03.530\nYou could make it a higher number but\n\n543\n00:28:03.530 --> 00:28:05.700\nif you do that,\nyou need to do it on all your routers.\n\n544\n00:28:05.700 --> 00:28:07.940\nThat's a little bit\nbeyond the scope of CCNA.\n\n545\n00:28:07.940 --> 00:28:12.350\nWe talk about that in CCNP a bit,\nbut just be aware that OSPF does\n\n546\n00:28:12.350 --> 00:28:15.270\ngreat with low bandwidth, not so\ngreat with high bandwidth.\n\n547\n00:28:15.270 --> 00:28:19.540\n&gt;&gt; Now Don, on your drawing there, you're\nmissing a set of zeros on that last one.\n\n548\n00:28:19.540 --> 00:28:20.714\n&gt;&gt; Whoops.\n[LAUGH]\n\n549\n00:28:20.714 --> 00:28:22.570\n&gt;&gt; So you did 10 million instead of 100.\n\n550\n00:28:22.570 --> 00:28:25.940\nThere you go.\n&gt;&gt; There we go, let's fix that.\n\n551\n00:28:25.940 --> 00:28:26.840\n&gt;&gt; Yeah, there you go.\n\n552\n00:28:26.840 --> 00:28:28.150\n&gt;&gt; Excellent.\nAnd we could go on to do 40 gigabit.\n\n553\n00:28:28.150 --> 00:28:29.680\nThe math gets harder with 40 gigabit.\n\n554\n00:28:29.680 --> 00:28:32.470\nBut you can go higher and see that that\nproblem starts to get worse and worse.\n\n555\n00:28:32.470 --> 00:28:34.160\nJust be aware that with high bandwidth.\n\n556\n00:28:34.160 --> 00:28:36.030\nNow when we talk about\nhigh bandwidth like this,\n\n557\n00:28:36.030 --> 00:28:39.000\nwe're almost always talking about\na local area network, a LAN.\n\n558\n00:28:39.000 --> 00:28:42.150\nAnd so on the LAN side typically all\nyour links are of the same bandwidth,\n\n559\n00:28:42.150 --> 00:28:43.850\nlike all of your uplinks\nare the same bandwidth.\n\n560\n00:28:43.850 --> 00:28:46.190\nSo it doesn't matter that\nwe treat them as equally.\n\n561\n00:28:46.190 --> 00:28:47.500\nIt's all fine.\n\n562\n00:28:47.500 --> 00:28:50.420\nIt's on the WAN side where\nthings get a little out of hand.\n\n563\n00:28:50.420 --> 00:28:55.660\nAnd on the WAN side we normally use\nexterior protocols not interior protocols.\n\n564\n00:28:55.660 --> 00:28:58.230\nSo this doesn't really come\nin to play as an issue.\n\n565\n00:28:58.230 --> 00:29:00.480\nBut just be aware that it can, right?\n\n566\n00:29:00.480 --> 00:29:02.740\nLow bandwidth OSPF make great decisions.\n\n567\n00:29:02.740 --> 00:29:04.780\nHigh bandwidth we might get it\na little more involve with it.\n\n568\n00:29:04.780 --> 00:29:06.549\nAnd we'll see how to do\nthat in the CCNP Show.\n\n569\n00:29:08.240 --> 00:29:09.290\nAll right.\n\n570\n00:29:09.290 --> 00:29:11.620\nJeez, I have a lot more that\nI wanted to talk about but\n\n571\n00:29:11.620 --> 00:29:14.230\nI'm kinda out of time on this episode.\n\n572\n00:29:14.230 --> 00:29:19.000\nAnd what I wanted to talk about next\nis in order to get OSPF routers talking\n\n573\n00:29:19.000 --> 00:29:21.100\nto each other,\nwe have to get them configured.\n\n574\n00:29:21.100 --> 00:29:23.800\nAnd there's a few different odds and\nends that kinda turn up as a part of that.\n\n575\n00:29:23.800 --> 00:29:24.330\nAnd you know what?\n\n576\n00:29:24.330 --> 00:29:26.390\nI guess,\nwe'll just wait until the next episode.\n\n577\n00:29:26.390 --> 00:29:30.574\nIn the next episode we're gonna get\na chance to see how to configure OSPF,\n\n578\n00:29:30.574 --> 00:29:33.021\nOSPF Version 2, which is OSPF for IPv4.\n\n579\n00:29:33.021 --> 00:29:36.021\nAnd when we configure that, I wanna\nshow you guys a little bit more about\n\n580\n00:29:36.021 --> 00:29:38.980\nthe adjacencies and how they talk and\nexchange information and so on.\n\n581\n00:29:38.980 --> 00:29:41.080\nIt's all important information to know.\n\n582\n00:29:41.080 --> 00:29:42.380\nI'm just out of time in this episode.\n\n583\n00:29:42.380 --> 00:29:44.070\nSo I'll put it in the next one.\n\n584\n00:29:44.070 --> 00:29:48.130\nBut yeah, I think as far as this is there\nso far, we got a chance to see how OSPF\n\n585\n00:29:48.130 --> 00:29:51.500\nmakes its decisions, how the cost\nmetric worked, which is what's\n\n586\n00:29:51.500 --> 00:29:55.350\nreally important to remember for the exam,\nand how bandwidth factors into that.\n\n587\n00:29:55.350 --> 00:29:59.470\nSo now we know how OSPF works,\nit'll be time to see it in action.\n\n588\n00:30:00.570 --> 00:30:02.320\n&gt;&gt; All right Don, thank you again for\n\n589\n00:30:02.320 --> 00:30:07.010\nintroducing us to the OSPF basics that we\nreally need to have a solid foundation in.\n\n590\n00:30:07.010 --> 00:30:09.450\nAnd also showing us that cost formula\n\n591\n00:30:09.450 --> 00:30:12.610\nis something that you do need\nto expect to see on the exam.\n\n592\n00:30:12.610 --> 00:30:14.300\nThat's something that\nyou need to practice.\n\n593\n00:30:14.300 --> 00:30:17.040\nIf you're not sure, make sure that\nyou do a few different ones so\n\n594\n00:30:17.040 --> 00:30:18.630\nthat you can see those values.\n\n595\n00:30:18.630 --> 00:30:20.070\nDo the most common ones that you see.\n\n596\n00:30:20.070 --> 00:30:24.220\nDon showed us the more\ncommon ones as well.\n\n597\n00:30:24.220 --> 00:30:26.830\nAll right, well that's a great\nplace to end this episode then.\n\n598\n00:30:26.830 --> 00:30:31.080\nSigning off for ITProTV,\nI've been your host Ronnie Wong.\n\n599\n00:30:31.080 --> 00:30:32.120\n&gt;&gt; And I'm Don Pezet.\n\n600\n00:30:32.120 --> 00:30:36.897\n&gt;&gt; Stay tuned right here for\nmore CCNA routing and switching shows.\n\n601\n00:30:36.897 --> 00:30:45.310\n[MUSIC]\n\n",
          "vimeoId": "180048207"
        },
        {
          "description": "In this episode, Ronnie and Don start configuring ospf on multiple routers.  They demonstrate 2 ways for the OSPF configuration on the routers.  With OSPF configured on three routers, Don discusses the different connection states and role types users are likely to see when using the “show ip ospf neighbor” command.  The guys also take a look at the adjacency requirements for OSPF routers.",
          "length": "2208",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/cisco-ccna200105/cisco-ccna200105-2-4-1-implementing_ospfv2-082216-1.jpg",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/cisco-ccna200105/cisco-ccna200105-2-4-1-implementing_ospfv2-082216-1-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/cisco-ccna200105/cisco-ccna200105-2-4-1-implementing_ospfv2-082216-1-sm.jpg",
          "title": "Implementing OSPFv2",
          "transcript": "WEBVTT\n\n1\n00:00:00.000 --> 00:00:10.000\n[MUSIC]\n\n2\n00:00:11.999 --> 00:00:14.534\nWelcome back to another great\nepisode here on ITProTV.\n\n3\n00:00:14.534 --> 00:00:19.216\nI'm your host Ronnie Wong, and\nyou're watching the Cisco CCNA Routing and\n\n4\n00:00:19.216 --> 00:00:20.680\nSwitching show.\n\n5\n00:00:20.680 --> 00:00:24.740\nWhere we are about to take a look\nat implementing OSPF Version 2.\n\n6\n00:00:24.740 --> 00:00:26.890\nWe already talked about\nsome of the basics, but\n\n7\n00:00:26.890 --> 00:00:29.320\nnow we want to get into actually\nconfiguring it on the routers.\n\n8\n00:00:29.320 --> 00:00:31.908\nAnd helping us see all\nthe details that we need to.\n\n9\n00:00:31.908 --> 00:00:35.320\nAnd we have with us in our studio,\nMr Don Pezet to help us out.\n\n10\n00:00:35.320 --> 00:00:36.012\nDon, welcome back.\n\n11\n00:00:36.012 --> 00:00:37.760\n&gt;&gt; Thanks for having me back, Ronnie.\n\n12\n00:00:37.760 --> 00:00:39.696\nWe've spent a lot of\ntime talking about OSPF,\n\n13\n00:00:39.696 --> 00:00:42.539\nwe haven't actually seen one command yet\nfor getting configured.\n\n14\n00:00:42.539 --> 00:00:45.547\nIt is important that we understand\nthe foundations and the basics, but\n\n15\n00:00:45.547 --> 00:00:47.930\nat some point you've gotta\nactually turn the thing on.\n\n16\n00:00:47.930 --> 00:00:48.869\n&gt;&gt; [LAUGH]\n&gt;&gt; So we're gonna jump into that\n\n17\n00:00:48.869 --> 00:00:50.180\nright now, we're gonna see turning it on.\n\n18\n00:00:50.180 --> 00:00:53.032\nAnd then we'll see some of the\ncharacteristics of OSPF after it's up and\n\n19\n00:00:53.032 --> 00:00:55.400\nrunning and\ndoing what it's supposed to do.\n\n20\n00:00:55.400 --> 00:00:58.340\nSo let me start by showing you guys my\ntopology, and we'll work from here.\n\n21\n00:00:59.520 --> 00:01:02.370\nIn my lab I've got six routers fired up,\nthese guys right here,\n\n22\n00:01:02.370 --> 00:01:04.670\nand each router is connected\nto different networks.\n\n23\n00:01:04.670 --> 00:01:11.260\nMy primary client networks are\n192.168.0.0, and way up here, 172.16.0.0.\n\n24\n00:01:11.260 --> 00:01:13.130\nBut in between,\nthere's all these other networks.\n\n25\n00:01:14.900 --> 00:01:18.860\nAnd so I want all of my routers to\nknow about all of these networks.\n\n26\n00:01:18.860 --> 00:01:22.430\nI need a routing protocol to\nexchange that information.\n\n27\n00:01:22.430 --> 00:01:26.750\nI'm gonna start right here with these\nthree, Router 1, Router 2, and Router 3.\n\n28\n00:01:26.750 --> 00:01:31.822\nThe three of these guys are all\nconnected to the 192.168.1.0 network.\n\n29\n00:01:31.822 --> 00:01:35.630\nWhich means I can run OSPF\nright here on this network and\n\n30\n00:01:35.630 --> 00:01:37.880\nget them exchanging routes.\n\n31\n00:01:37.880 --> 00:01:45.158\nAnd if I bring in their connected routes,\nlike 192.168.0, 192.168.2, and 192.168.3.\n\n32\n00:01:45.158 --> 00:01:50.810\nIf I bring those all into my OSPF area,\nthey'll exchange the information,\n\n33\n00:01:50.810 --> 00:01:54.150\nand now I'll be running OSPF, right?\n\n34\n00:01:54.150 --> 00:01:59.330\nThere's two ways to turn on OSPF, the\nfirst way is we do it based on subnets.\n\n35\n00:01:59.330 --> 00:02:02.920\nAnd so I go to a router,\nI turn on OSPF and I tell it what subnets\n\n36\n00:02:02.920 --> 00:02:06.555\nI want to participate in OSPF, all right,\nthat way is certainly effective.\n\n37\n00:02:06.555 --> 00:02:10.030\nThere's another way, though,\nwhich is we turn on OSPF and\n\n38\n00:02:10.030 --> 00:02:14.073\nthen we tell the router which\ninterfaces we want to function in OSPF.\n\n39\n00:02:14.073 --> 00:02:18.276\nTurning on by interfaces is nice because\nif we ever change our IPs in the future we\n\n40\n00:02:18.276 --> 00:02:19.920\ndon't have to mess with OSPF.\n\n41\n00:02:19.920 --> 00:02:21.850\nIt's already assigned to the interfaces.\n\n42\n00:02:21.850 --> 00:02:26.000\nIf we do it by network and we change\nour IPs, we might fall out of OSPF.\n\n43\n00:02:26.000 --> 00:02:29.043\nBoth ways achieve the same goal, it's\nreally up to you which one you wanna do.\n\n44\n00:02:29.043 --> 00:02:31.430\nSo I'm gonna show you both ways,\nall right?\n\n45\n00:02:31.430 --> 00:02:35.160\nI'm gonna start right here on\nRouter 1 with just basic OSPF.\n\n46\n00:02:35.160 --> 00:02:38.850\nI'm gonna turn it on, and\nwe're gonna do one area for right now.\n\n47\n00:02:38.850 --> 00:02:41.660\nWe're just gonna do area 0\nacross the entire environment.\n\n48\n00:02:41.660 --> 00:02:43.730\nSo I'm gonna put Router 1 in area 0,\n\n49\n00:02:43.730 --> 00:02:47.182\nwhich means I'm gonna put both\nof these interfaces in area 0.\n\n50\n00:02:47.182 --> 00:02:49.492\nThe 192.168.1 network and\n\n51\n00:02:49.492 --> 00:02:54.267\nthe 192.168.0 network are both\ngoing to be in area 0 on Router 1.\n\n52\n00:02:54.267 --> 00:02:59.730\nAll right, so let's jump over to\nRouter 1 and see that in action, okay?\n\n53\n00:02:59.730 --> 00:03:02.610\nThe first thing I wanna do is I just\nwanna see if I'm already running\n\n54\n00:03:02.610 --> 00:03:07.500\na routing protocol, so\nI'm gonna do a show ip protocols.\n\n55\n00:03:07.500 --> 00:03:11.560\nAnd if you get a protocol back,\nlike RIP, or EIGRP, or something,\n\n56\n00:03:11.560 --> 00:03:14.520\nthen you know you're already running one,\nand you probably need to work around that.\n\n57\n00:03:14.520 --> 00:03:17.020\nYou can run more than\none routing protocol.\n\n58\n00:03:17.020 --> 00:03:19.730\nIt's not a great idea,\nbut you certainly can, and\n\n59\n00:03:19.730 --> 00:03:21.900\nsometimes we need that, all right?\n\n60\n00:03:21.900 --> 00:03:25.020\nIn my case, it just says that I'm NSF\naware, which means I'm trying to detect\n\n61\n00:03:25.020 --> 00:03:27.540\nroutes, but\notherwise I'm not actually doing anything.\n\n62\n00:03:27.540 --> 00:03:29.710\nSo I'm gonna come in and\nget it configured.\n\n63\n00:03:29.710 --> 00:03:33.186\nNow I'm gonna do a show IP\ninterface brief real quick just so\n\n64\n00:03:33.186 --> 00:03:35.561\nI can look at the IP addresses assigned.\n\n65\n00:03:35.561 --> 00:03:37.630\nI'm gonna need two pieces\nof information here.\n\n66\n00:03:37.630 --> 00:03:42.320\nIf I'm gonna turn this on per interface,\nI need the interface names.\n\n67\n00:03:42.320 --> 00:03:45.520\nIf I'm gonna turn it on per network,\nI need the networks, right?\n\n68\n00:03:45.520 --> 00:03:47.205\nAnd so\nI can get the interface names right here,\n\n69\n00:03:47.205 --> 00:03:52.355\nI can get sort of the network here,\nI can't get the subnet mask, can I?\n\n70\n00:03:52.355 --> 00:03:54.326\nSo I'd actually need to look\nin the interfaces to see that.\n\n71\n00:03:54.326 --> 00:03:58.909\nNow I know they're just 255.255.255.0s,\nbut\n\n72\n00:03:58.909 --> 00:04:04.100\nyou could always do a show run\nint gi0/0 or 1/0 and find it.\n\n73\n00:04:04.100 --> 00:04:08.400\nAnd look in there and\nsee what that subnet mask is, okay?\n\n74\n00:04:08.400 --> 00:04:11.930\nSo in my case, I wanna go ahead and\nturn these on and get it going for\n\n75\n00:04:11.930 --> 00:04:14.490\nthe two networks, so\nI'm gonna jump into configuration.\n\n76\n00:04:16.040 --> 00:04:20.010\nAnd in the configuration,\nthe command that I'm gonna run is router,\n\n77\n00:04:20.010 --> 00:04:23.400\nwhich tells it I'm gonna turn\non a routing process, ospf,\n\n78\n00:04:23.400 --> 00:04:27.290\nand then I'm gonna follow it\nby what's called a process id.\n\n79\n00:04:28.420 --> 00:04:31.090\nOn your router,\nthere are a number of programs running.\n\n80\n00:04:31.090 --> 00:04:34.450\nThere's ARP, and CDP, and all this\nother stuff running in the background.\n\n81\n00:04:34.450 --> 00:04:39.680\nAnd everything that runs gets a process\nnumber so that the system can identify it.\n\n82\n00:04:39.680 --> 00:04:43.900\nI can actually run more than\none copy of OSPF if I want.\n\n83\n00:04:43.900 --> 00:04:47.202\nI might have three interfaces running\nin one OSPF autonomous system.\n\n84\n00:04:47.202 --> 00:04:49.944\nAnd another three interfaces running\nin a completely different OSPF\n\n85\n00:04:49.944 --> 00:04:51.040\nautonomous system.\n\n86\n00:04:51.040 --> 00:04:53.200\nAnd I don't wanna share\nroutes between them.\n\n87\n00:04:53.200 --> 00:04:57.361\nSo in order to tell them apart I\nneed to assign them a process ID.\n\n88\n00:04:57.361 --> 00:05:02.371\nNow the process ID is a number\nbetween 1 and 65,535, so it's 16 bits.\n\n89\n00:05:02.371 --> 00:05:05.776\nYou're never gonna run\n65,000 processes of OSPF.\n\n90\n00:05:05.776 --> 00:05:10.370\nI don't know, I guess you could if you had\nenough CPU and RAM, but most of us don't.\n\n91\n00:05:10.370 --> 00:05:13.520\nYou're not normally gonna have more\nthan you do physical interfaces, right?\n\n92\n00:05:13.520 --> 00:05:16.610\nBecause you have each interface\ntied to a single area.\n\n93\n00:05:16.610 --> 00:05:19.650\nSo we don't need a ton of them, but\nthey give you the flexibility here.\n\n94\n00:05:19.650 --> 00:05:24.160\nAnd this number that you pick for\nthe process ID only matters right\n\n95\n00:05:24.160 --> 00:05:27.930\nhere on this router, no other\nrouter is gonna see my process ID.\n\n96\n00:05:27.930 --> 00:05:31.980\nSo if I have 50 routers, I could use\n50 different process IDs if I wanted.\n\n97\n00:05:31.980 --> 00:05:34.350\nI'd be crazy to do it because\nit gets hard to support, so\n\n98\n00:05:34.350 --> 00:05:37.490\nwe normally pick one number and\nwe stick to it.\n\n99\n00:05:37.490 --> 00:05:42.020\nI almost always do 1 and I just do that,\njust the very first number available.\n\n100\n00:05:42.020 --> 00:05:44.820\nThat's the Process ID I use\npretty much everywhere.\n\n101\n00:05:44.820 --> 00:05:49.095\nAnd it's really unusual for me to run\nmore than one instance of OSPF anyway.\n\n102\n00:05:49.095 --> 00:05:51.666\nSo when I connect to a router I can\njust assume that it's gonna be OSPF 1.\n\n103\n00:05:51.666 --> 00:05:55.995\nIn a lot of the Cisco textbooks you'll see\nwhere they use 100, and that's fine too.\n\n104\n00:05:55.995 --> 00:05:58.055\nIt's just unique to this router, right?\n\n105\n00:05:58.055 --> 00:06:01.799\nSo I can reuse it everywhere,\nsticking with one makes it a lot easier.\n\n106\n00:06:01.799 --> 00:06:05.331\nAll right, when I press Enter,\ntechnically I'm now running OSPF.\n\n107\n00:06:05.331 --> 00:06:07.461\nIt's not turned on for\nany of my interfaces so\n\n108\n00:06:07.461 --> 00:06:09.385\nit's not really doing anything.\n\n109\n00:06:09.385 --> 00:06:13.230\nBut I am running it, and it's process\nID 1 running in the background.\n\n110\n00:06:13.230 --> 00:06:15.480\nWhat's really important\nare the next commands.\n\n111\n00:06:15.480 --> 00:06:18.625\nI need to tell it what networks\nI want to participate in OSPF.\n\n112\n00:06:18.625 --> 00:06:23.390\nAnd when I do that, I need to tell them\nthe area that those interfaces are in,\n\n113\n00:06:23.390 --> 00:06:26.540\nand the area number's\nwhat's truly important.\n\n114\n00:06:26.540 --> 00:06:29.600\nThis process ID, who cares,\nwe just have to remember it so\n\n115\n00:06:29.600 --> 00:06:32.260\nwhen we do troubleshooting later on,\nwe can come in and find it.\n\n116\n00:06:32.260 --> 00:06:36.771\nAll right, so, to advertise a network\ninto OSPF, we use the network command.\n\n117\n00:06:36.771 --> 00:06:41.469\nAnd we say network 192.168.0.0,\nfor example,\n\n118\n00:06:41.469 --> 00:06:45.900\nfollowed by a wildcard mask,\nnot a subnet mask, right?\n\n119\n00:06:45.900 --> 00:06:49.720\nRemember back from the access control\nlist episodes, this is a wildcard mask.\n\n120\n00:06:49.720 --> 00:06:51.906\nIt's representing the bits\nthat need to match,\n\n121\n00:06:51.906 --> 00:06:53.836\nand they could be anywhere in the address.\n\n122\n00:06:53.836 --> 00:06:57.211\nIt doesn't have to be at the beginning or\nat the end like a subnet mask is.\n\n123\n00:06:57.211 --> 00:07:00.197\nNow, for me, I know that this\nis a class C subnet mask and\n\n124\n00:07:00.197 --> 00:07:04.800\nI wanna stick with that, and so\nI'm just gonna use 0.0.0.255, all right?\n\n125\n00:07:04.800 --> 00:07:09.210\nWhich will effectively mean any\ninterface whose IP address starts\n\n126\n00:07:09.210 --> 00:07:13.320\nwith 192.168.0 is gonna be in OSPF.\n\n127\n00:07:13.320 --> 00:07:19.402\nAnd any interface that is outside\nof 192.168.0 will not be in OSPF.\n\n128\n00:07:19.402 --> 00:07:23.883\nAll right, and then, the important part,\nI need to add the area number and\n\n129\n00:07:23.883 --> 00:07:26.060\nthis is gonna go under my head.\n\n130\n00:07:26.060 --> 00:07:30.090\nSo I'm gonna add in here, area 0, right?\n\n131\n00:07:30.090 --> 00:07:34.578\nI'm telling it,\nany network interface whose IP starts with\n\n132\n00:07:34.578 --> 00:07:39.250\n192.168.0, put it in area 0 and\nturn it on for OSPF.\n\n133\n00:07:39.250 --> 00:07:43.440\nI can then do the same thing for my next\ninterface, which is 192.168.1.0, right?\n\n134\n00:07:45.770 --> 00:07:50.061\nAnd I can put that in area zero, or\nif I'm in ABR, if I'm a border router,\n\n135\n00:07:50.061 --> 00:07:52.927\nI would say area 1 or area 5, area 5,000.\n\n136\n00:07:52.927 --> 00:07:55.800\nWhatever it is that I wanted there,\nand now I'm a border router.\n\n137\n00:07:55.800 --> 00:08:00.269\nSo transitioning between being a regular\nrouter and a border router is as simple as\n\n138\n00:08:00.269 --> 00:08:04.103\nTabbing two interfaces in two\ndifferent areas and that's it, okay?\n\n139\n00:08:04.103 --> 00:08:07.310\nSo now that I've got that done,\nI'm running OSPF and\n\n140\n00:08:07.310 --> 00:08:10.200\nI'm running it on two interfaces.\n\n141\n00:08:10.200 --> 00:08:14.640\nNow, I could have use that wildcard\nmask to save me a little effort, right?\n\n142\n00:08:14.640 --> 00:08:17.260\nI could have,\ninstead of doing two commands,\n\n143\n00:08:17.260 --> 00:08:19.310\nI could have done this in one command.\n\n144\n00:08:19.310 --> 00:08:23.036\nI could have said #network\n\n145\n00:08:23.036 --> 00:08:29.843\n192.168.0.0 0.0.1.255.\n\n146\n00:08:29.843 --> 00:08:31.947\nAnd then, area 0.\n\n147\n00:08:31.947 --> 00:08:36.219\nAll right, now when I do that,\nthat command right there.\n\n148\n00:08:36.219 --> 00:08:42.740\nIt's saying the first two\noctets have to be 192.168.\n\n149\n00:08:42.740 --> 00:08:44.143\nThen I've got a 1.\n\n150\n00:08:44.143 --> 00:08:47.582\nIf I were to write that 1 in binary,\nit would be seven zeros and a 1.\n\n151\n00:08:47.582 --> 00:08:54.559\nThe first seven bits have to be zero and\nthe eight bit has to be nothing.\n\n152\n00:08:54.559 --> 00:08:56.280\nThe 8th bit can be whatever it wants.\n\n153\n00:08:56.280 --> 00:08:58.980\nAnd so, it can be 0 or it can be 1.\n\n154\n00:08:58.980 --> 00:09:03.410\nThis one command will grab\nboth of those interfaces.\n\n155\n00:09:03.410 --> 00:09:04.940\nAnd so, now I can do it in one command.\n\n156\n00:09:05.990 --> 00:09:08.640\nIf you want to turn on OSPF for\nthe entire routers.\n\n157\n00:09:08.640 --> 00:09:10.870\nEvery interface,\nI want every interface to be an OSPF.\n\n158\n00:09:10.870 --> 00:09:14.550\nYou could shorten this even more.\n\n159\n00:09:14.550 --> 00:09:19.634\nYou could say #network\n0.0.0.0 0.0.0.0 area 0.\n\n160\n00:09:19.634 --> 00:09:21.510\nOr whatever area you want it to be in.\n\n161\n00:09:21.510 --> 00:09:24.302\nBy doing all zeros,\nthis is a little counterintuitive.\n\n162\n00:09:24.302 --> 00:09:28.760\nCuz wildcard masks, all zeros normally\nmeans everything has to match.\n\n163\n00:09:28.760 --> 00:09:31.790\nBut since this is all zeroes,\nthat means every network.\n\n164\n00:09:31.790 --> 00:09:34.520\nSo 100% of my interfaces\nwill match this and\n\n165\n00:09:34.520 --> 00:09:37.550\nall of my interfaces will go\ninto area 0 with one command.\n\n166\n00:09:37.550 --> 00:09:42.180\nSo if I want every interface in,\nI can issue this one command and I'm done.\n\n167\n00:09:42.180 --> 00:09:43.930\nBut now, they're all in the same area.\n\n168\n00:09:43.930 --> 00:09:47.995\nRight, I could've used this command\nto grab just these two interfaces and\n\n169\n00:09:47.995 --> 00:09:49.103\nput them in area 0.\n\n170\n00:09:49.103 --> 00:09:51.990\nOr I could do them individually\nlike I did in the beginning.\n\n171\n00:09:51.990 --> 00:09:55.480\nAll three are gonna achieve the same goal\nfor me because I only have two interfaces.\n\n172\n00:09:55.480 --> 00:09:56.909\nAnd I want them both in area 0.\n\n173\n00:09:56.909 --> 00:10:00.880\nBut it's three different ways\nto do the same exact thing.\n\n174\n00:10:00.880 --> 00:10:04.428\nAll right, once I've got that done,\nI can get out of config.\n\n175\n00:10:04.428 --> 00:10:07.147\nAnd if I do a #show running-config, and\n\n176\n00:10:07.147 --> 00:10:11.590\nI'm gonna use the section command\nto pull up the ospf section.\n\n177\n00:10:11.590 --> 00:10:13.270\nYou'll see what my final\nconfig looks like.\n\n178\n00:10:14.340 --> 00:10:16.402\nIt's a little bloated cuz\nthe extra network commands.\n\n179\n00:10:16.402 --> 00:10:20.523\nSo really, I could've stopped with\njust that right there, right,\n\n180\n00:10:20.523 --> 00:10:23.780\nrouter ospf 1, that turns on the OSPF.\n\n181\n00:10:23.780 --> 00:10:27.180\nAnd then, I turned it on for\nthe two interfaces in area 0, right?\n\n182\n00:10:27.180 --> 00:10:31.260\nOr I could have replaced those with\neither one of these last two commands.\n\n183\n00:10:31.260 --> 00:10:35.319\n&gt;&gt; Now, Don, does having those extra\ncommands in there affect anything in\n\n184\n00:10:35.319 --> 00:10:38.859\nthe process of OSPF or\nmake the router work harder or anything?\n\n185\n00:10:38.859 --> 00:10:42.928\n&gt;&gt; Not really, it's just when the router\nboots up it takes a look at the interfaces\n\n186\n00:10:42.928 --> 00:10:46.290\nand looks at which ones match and\nbrings those into OSPF.\n\n187\n00:10:46.290 --> 00:10:49.110\nAfter that, if whenever\nan interface comes up or go down.\n\n188\n00:10:49.110 --> 00:10:51.031\nSo any time a link state changes,\nit will just look for\n\n189\n00:10:51.031 --> 00:10:52.620\ninterfaces that you participated on ospf.\n\n190\n00:10:52.620 --> 00:10:54.860\nIt's not gonna work any harder on this.\n\n191\n00:10:55.860 --> 00:10:57.970\nAs a network technician,\nI would clean it up,\n\n192\n00:10:57.970 --> 00:11:00.280\njust cuz you don't wanna bunch\nof junk in your config, right?\n\n193\n00:11:00.280 --> 00:11:03.400\nThe more stuff you have in there,\nthe harder it is to troubleshoot.\n\n194\n00:11:03.400 --> 00:11:05.380\nBut it's not gonna make\nit work any harder.\n\n195\n00:11:05.380 --> 00:11:10.870\nAnd if I do a #show ip protocols,\nI can now see that I'm running ospf.\n\n196\n00:11:10.870 --> 00:11:12.080\nRouting Protocol is \"ospf 1\".\n\n197\n00:11:12.080 --> 00:11:14.750\nThere's that process ID, right?\n\n198\n00:11:14.750 --> 00:11:16.440\nAnd then, I'm Routing for Networks, and\n\n199\n00:11:16.440 --> 00:11:18.730\nthere's all four of those\nthings in the list.\n\n200\n00:11:18.730 --> 00:11:19.870\nEven though I'm really only doing two,\nright?\n\n201\n00:11:19.870 --> 00:11:22.550\nSo that's why I say we\nshould clean those up a bit.\n\n202\n00:11:22.550 --> 00:11:25.050\nAnd so, I am up and running ospf now.\n\n203\n00:11:25.050 --> 00:11:26.410\nIt's very exciting.\n\n204\n00:11:26.410 --> 00:11:29.386\nWell, it's not too exciting cuz if you\nlook at my Routing Information Sources,\n\n205\n00:11:29.386 --> 00:11:30.190\nI have no neighbors.\n\n206\n00:11:30.190 --> 00:11:32.140\nThere's nobody talking to me right now.\n\n207\n00:11:32.140 --> 00:11:34.190\nSo I need to fix that, right?\n\n208\n00:11:34.190 --> 00:11:37.810\nBut before I get too far, let's go ahead\nand clean that config up a little bit.\n\n209\n00:11:37.810 --> 00:11:42.119\nI'm gonna get back into #router ospf 1 and\n\n210\n00:11:42.119 --> 00:11:46.550\nI'm gonna issue a #no\non the all 0 network.\n\n211\n00:11:46.550 --> 00:11:51.232\nAnd I'll do the same thing for the\nindividual networks so that it's nice and\n\n212\n00:11:51.232 --> 00:11:51.751\nclean.\n\n213\n00:11:51.751 --> 00:11:57.052\nAnd I will have just have the one entry\nthat encompasses my two interfaces.\n\n214\n00:11:57.052 --> 00:11:59.247\nSo let's take a look how that looks now.\n\n215\n00:11:59.247 --> 00:12:00.710\nNow, it should be nice and clean.\n\n216\n00:12:00.710 --> 00:12:04.900\nThere we go, router ospf 1,\nit's just hitting that single network.\n\n217\n00:12:04.900 --> 00:12:09.210\nIf I do a #show ip protocols, there it is.\n\n218\n00:12:09.210 --> 00:12:12.310\nSo it just shows that one\nthat's getting it right there.\n\n219\n00:12:12.310 --> 00:12:14.460\nNumber of areas the router is in is 1.\n\n220\n00:12:14.460 --> 00:12:19.811\nI'm just in one area and it's a nice\nnormal area, area 0 and I'm good to go.\n\n221\n00:12:19.811 --> 00:12:23.190\nAll right, let's go turn this on for\nanother router, all right?\n\n222\n00:12:23.190 --> 00:12:24.720\nThat was router 1.\n\n223\n00:12:24.720 --> 00:12:27.480\nRouter 1 is plugged into the shared\nnetwork with router 2 and router 3.\n\n224\n00:12:27.480 --> 00:12:29.862\nSo I want to get those guys involved,\nalso.\n\n225\n00:12:29.862 --> 00:12:33.488\nAll right, and so, if I want to get them\nturned on, I can just jump right over and\n\n226\n00:12:33.488 --> 00:12:34.260\nknock them out.\n\n227\n00:12:34.260 --> 00:12:36.230\nNow, router 2.\n\n228\n00:12:36.230 --> 00:12:38.846\nLet's say that I want to turn it\non by interface this time instead.\n\n229\n00:12:38.846 --> 00:12:40.620\nIt's a little bit easier, right?\n\n230\n00:12:40.620 --> 00:12:43.710\nSo on router 2, if I take a look at it.\n\n231\n00:12:43.710 --> 00:12:44.960\nIt's got these two interfaces.\n\n232\n00:12:44.960 --> 00:12:47.910\nGigabit ethernet 1/0 and\ngigabit ethernet 2/0.\n\n233\n00:12:47.910 --> 00:12:49.794\nSo those are the interfaces\nthat I'm gonna turn on.\n\n234\n00:12:49.794 --> 00:12:51.870\nI'm gonna put it in area 0 also.\n\n235\n00:12:51.870 --> 00:12:54.500\nOkay, so I'm gonna jump over to router 2.\n\n236\n00:12:54.500 --> 00:12:57.850\nAnd on router 2,\nI'm gonna repeat the process but\n\n237\n00:12:57.850 --> 00:13:00.300\na little bit different this time, right.\n\n238\n00:13:00.300 --> 00:13:02.300\nI'm not gonna issue router ospf 1.\n\n239\n00:13:02.300 --> 00:13:05.230\nI'm not gonna turn on\nthat process that way.\n\n240\n00:13:05.230 --> 00:13:11.086\nInstead, what I'm gonna do is I'm\ngoing to get into #interface gi2/0 or\n\n241\n00:13:11.086 --> 00:13:15.427\n1 slash 0, right,\nI want to do it for both ultimately.\n\n242\n00:13:15.427 --> 00:13:20.640\nAnd on the interface,\nI'm going to say #ip ospf\n\n243\n00:13:20.640 --> 00:13:25.865\n1 which is gonna create process ID 1,\narea 0.\n\n244\n00:13:25.865 --> 00:13:32.480\nSo I'm telling the interface, I want\nthis interface to be in ospf process 1.\n\n245\n00:13:32.480 --> 00:13:35.790\nospf process 1 didn't exist,\nit just made it.\n\n246\n00:13:35.790 --> 00:13:38.880\nAnd then, I want this interface to be\nin area 0, I don't care what the IP is.\n\n247\n00:13:38.880 --> 00:13:40.857\nJust put this interface in area 0.\n\n248\n00:13:40.857 --> 00:13:42.310\nAnd so, now it's done it.\n\n249\n00:13:42.310 --> 00:13:46.340\nAnd you'll see, I got some messages\nthere about an OSPF adjacency change.\n\n250\n00:13:46.340 --> 00:13:48.964\nAn adjacency is a connection\nbetween me and a neighbor.\n\n251\n00:13:48.964 --> 00:13:50.665\nI just found a neighbor, right?\n\n252\n00:13:50.665 --> 00:13:52.930\nThere's somebody else running ospf,\nand I'm now talking to them.\n\n253\n00:13:54.008 --> 00:13:56.360\nSo I'm gonna jump into\nmy other interface and\n\n254\n00:13:56.360 --> 00:13:58.790\njust knock it out real\nquick while I'm in here.\n\n255\n00:13:58.790 --> 00:14:02.090\nI can issue that same exact command,\nright, and\n\n256\n00:14:02.090 --> 00:14:04.840\nnow that interface in\ngonna go into area 0 also.\n\n257\n00:14:04.840 --> 00:14:09.071\nAnd if I do a #show ip protocols and\nI look at what I've got.\n\n258\n00:14:09.071 --> 00:14:11.936\nNotice, how Routing for Networks is empty.\n\n259\n00:14:11.936 --> 00:14:16.858\nAnd instead, Routing on Interfaces\nConfigured Explicitly for area 0 and\n\n260\n00:14:16.858 --> 00:14:19.290\nit's turned off those Interfaces.\n\n261\n00:14:19.290 --> 00:14:22.800\nSo regardless of what IP I give them,\nthey're gonna be in ospf.\n\n262\n00:14:22.800 --> 00:14:26.080\nAnd the other interface is\nnot going to be in ospf.\n\n263\n00:14:26.080 --> 00:14:26.635\nThis is easier.\n\n264\n00:14:26.635 --> 00:14:28.761\nAnd so, this is the way that I\nnormally do it in real life land.\n\n265\n00:14:28.761 --> 00:14:30.449\nBut on the exam,\nthey want you to know both ways.\n\n266\n00:14:30.449 --> 00:14:32.250\nSo don't just learn one and call it a day.\n\n267\n00:14:32.250 --> 00:14:34.430\nMake sure you learn both ways, right?\n\n268\n00:14:34.430 --> 00:14:38.202\nAnd I am talking to\na neighbor 192.168.1.1.\n\n269\n00:14:38.202 --> 00:14:41.370\nNow, I know that's router 1,\ncuz we just configured it.\n\n270\n00:14:41.370 --> 00:14:43.632\nBut what if I didn't\nknow that was router 1?\n\n271\n00:14:43.632 --> 00:14:45.400\nHey, how do I know who that is?\n\n272\n00:14:45.400 --> 00:14:50.230\nWell, this number that it's showing me,\nit looks like an IP address.\n\n273\n00:14:50.230 --> 00:14:52.090\nBut it's not actually an IP address,\n\n274\n00:14:52.090 --> 00:14:56.690\nit is a 32 bit number that's written in\ndotted decimal just like an IP address is.\n\n275\n00:14:56.690 --> 00:14:59.710\nBut this is actually what's\ncalled the Router ID.\n\n276\n00:14:59.710 --> 00:15:01.630\nEvery router has a Router ID.\n\n277\n00:15:01.630 --> 00:15:07.378\nSo look here, I've got Routing Protocols\n\"ospf 1\", Router ID 192.168.2.2.\n\n278\n00:15:07.378 --> 00:15:11.230\nI could go router to router,\nand run #show ip protocols, and\n\n279\n00:15:11.230 --> 00:15:12.970\nrecord the Router ID for each one.\n\n280\n00:15:12.970 --> 00:15:14.710\nNow, where did that Router ID come from?\n\n281\n00:15:15.870 --> 00:15:20.260\nWhen ospf starts up,\nit looks at all the interfaces that\n\n282\n00:15:20.260 --> 00:15:26.100\nare participating in ospf and it takes\nthe one with the highest IP address.\n\n283\n00:15:26.100 --> 00:15:31.200\nAnd whatever that IP address is,\nthe highest IP that becomes the Router ID.\n\n284\n00:15:31.200 --> 00:15:36.300\nSo at the time I turned ospfon, 192.68.2.2\nwas the highest IP address on this router,\n\n285\n00:15:36.300 --> 00:15:38.650\nand that's the ID that it picked.\n\n286\n00:15:38.650 --> 00:15:40.217\nNow, I personally don't like that.\n\n287\n00:15:40.217 --> 00:15:43.374\nBecause sometimes links come or\ngo down, ospf resets and\n\n288\n00:15:43.374 --> 00:15:46.550\nthe Router ID can change, and\nthat gets super annoying.\n\n289\n00:15:46.550 --> 00:15:47.917\nThe Router ID is important, though,\n\n290\n00:15:47.917 --> 00:15:49.950\nbecause that's part of how\nwe do our loop detection.\n\n291\n00:15:49.950 --> 00:15:52.500\nI can see a route coming back that\noriginated from my own ID, and\n\n292\n00:15:52.500 --> 00:15:54.730\nI know it's a loop and\nI can throw it out, right?\n\n293\n00:15:54.730 --> 00:15:56.002\nSo Router IDs are important.\n\n294\n00:15:56.002 --> 00:15:59.630\nAnd you might choose to override\nthem as part of the configuration.\n\n295\n00:15:59.630 --> 00:16:00.968\nAnd that's something that I like to do.\n\n296\n00:16:00.968 --> 00:16:06.651\nSo on this router, I'm gonna get into my\nconfig and I'll get into router ospf 1.\n\n297\n00:16:06.651 --> 00:16:08.895\nI'm making sure to use\nthe right process ID number.\n\n298\n00:16:08.895 --> 00:16:12.520\nBecause if I do router ospf 2,\nI'm creating second process and\n\n299\n00:16:12.520 --> 00:16:14.620\nnow it's completely different.\n\n300\n00:16:14.620 --> 00:16:18.590\nAnd here, I'm gonna say router-id and\n\n301\n00:16:18.590 --> 00:16:22.700\nthen I can give it a 32-bit\nnumber written in dotted decimal.\n\n302\n00:16:22.700 --> 00:16:27.390\nIt looks like an IP address,\nbut it isn't an IP address.\n\n303\n00:16:27.390 --> 00:16:29.628\nI can use numbers that you\ncan't normally use for an IP.\n\n304\n00:16:29.628 --> 00:16:37.902\nSo for example, I could say how\nabout 250.250.250.250, right?\n\n305\n00:16:37.902 --> 00:16:39.601\nCould I normally use that IP?\n\n306\n00:16:39.601 --> 00:16:43.258\nNo, it's that class E space that's that\nweird reserved IP space that you're not\n\n307\n00:16:43.258 --> 00:16:44.432\nnormally allowed to use.\n\n308\n00:16:44.432 --> 00:16:47.270\nOr what about all 255s that's a broadcast?\n\n309\n00:16:47.270 --> 00:16:49.370\nWell, not in a router ID it isn't.\n\n310\n00:16:49.370 --> 00:16:50.578\nRouter ID's just a number.\n\n311\n00:16:50.578 --> 00:16:56.532\nSo this is router 2, so I'm gonna give\nit a router ID of 0.0.0.2, right?\n\n312\n00:16:56.532 --> 00:17:00.487\nBy doing that, it now knows hey,\nthis is router 2, R2, and\n\n313\n00:17:00.487 --> 00:17:02.784\n0.0.0.2 is that a valid IP?\n\n314\n00:17:02.784 --> 00:17:07.078\nNot normally, normally you can't have an\nIP that starts with 0 because that one's\n\n315\n00:17:07.078 --> 00:17:10.050\nkinda held off by the INA or\nwhoever and so we can't use it.\n\n316\n00:17:10.050 --> 00:17:12.270\nBut here for my router ID, I can.\n\n317\n00:17:12.270 --> 00:17:16.110\nBut notice what it says,\nI have to clear my ospf process.\n\n318\n00:17:16.110 --> 00:17:20.110\nWith OSPF, it picks the router ID when it\nstarts, which is normally when you power\n\n319\n00:17:20.110 --> 00:17:23.100\nthe router on or when you first\nconfigure it, like I just did.\n\n320\n00:17:23.100 --> 00:17:25.941\nSo it's already got a router ID,\nit's not gonna use another one.\n\n321\n00:17:25.941 --> 00:17:30.500\nIf I do show ip protocols,\nI'll see my router ID is still\n\n322\n00:17:30.500 --> 00:17:34.871\n192.168.2.2, so I need to reboot ospf.\n\n323\n00:17:34.871 --> 00:17:39.017\nI could reboot the whole router,\nbut since I have a process ID,\n\n324\n00:17:39.017 --> 00:17:41.061\nI can reboot just the process.\n\n325\n00:17:41.061 --> 00:17:45.936\nSo I can type clear ip ospf process and\n\n326\n00:17:45.936 --> 00:17:51.200\nit's gonna reset that process.\n\n327\n00:17:51.200 --> 00:17:54.710\nAnd if you do clear ip ospf, there we go.\n\n328\n00:17:54.710 --> 00:17:56.170\nI can tell the process number.\n\n329\n00:17:56.170 --> 00:17:59.930\nBut if I'm running more than one\nprocess number, I can do it specific.\n\n330\n00:17:59.930 --> 00:18:02.840\nI just wanna reboot this instance of ospf,\nnot the other one.\n\n331\n00:18:02.840 --> 00:18:08.640\nIf I've got just one, then I can run\nthis command and it's gonna reboot ospf.\n\n332\n00:18:08.640 --> 00:18:12.333\nAnd when it reboots to OSPF,\nmy router ID will change.\n\n333\n00:18:12.333 --> 00:18:19.894\nAnd if I do a show ip protocols now,\nnow my router ID is 0.0.0.2, right?\n\n334\n00:18:19.894 --> 00:18:22.877\nAnd that's gonna make it really easy to\ntell where routes are coming from now\n\n335\n00:18:22.877 --> 00:18:24.988\nbecause if I see a 2,\nhey that's router 2, right?\n\n336\n00:18:24.988 --> 00:18:28.181\nI'm gonna do the same thing on router\n1 and I'll jump over to router 1 and\n\n337\n00:18:28.181 --> 00:18:29.586\njust repeat that same process.\n\n338\n00:18:29.586 --> 00:18:32.564\nSee, here's my router ID on router 1 and\nso\n\n339\n00:18:32.564 --> 00:18:36.520\nI'm gonna jump into my configuration and\nrouter ospf 1.\n\n340\n00:18:36.520 --> 00:18:41.767\nI'll do router-id 0.0.0.1.\n\n341\n00:18:41.767 --> 00:18:47.000\nAnd from here, I'll clear ip ospf\nprocess and we'll hit restart.\n\n342\n00:18:47.000 --> 00:18:50.464\nNow in real life land,\nI'll always set a router ID, but\n\n343\n00:18:50.464 --> 00:18:54.168\na lot of times I'll pick one\nof my interfaces IP addresses.\n\n344\n00:18:54.168 --> 00:18:56.632\nAnd that way it's something\nI can tell ssh to, right?\n\n345\n00:18:56.632 --> 00:18:58.216\nIt's like a manageable or reachable IP.\n\n346\n00:18:58.216 --> 00:19:01.240\nI can even test ping it,\nhey, can I ping that IP?\n\n347\n00:19:01.240 --> 00:19:03.020\nIt's useful to use a real IP.\n\n348\n00:19:03.020 --> 00:19:05.130\nHere I'm using a fake one just\nto demonstrate the point that\n\n349\n00:19:05.130 --> 00:19:05.790\nyou can use a fake one.\n\n350\n00:19:05.790 --> 00:19:07.360\nIt's not really an IP.\n\n351\n00:19:07.360 --> 00:19:09.490\nSo if I were to put one\nof my real IPs in here,\n\n352\n00:19:09.490 --> 00:19:12.648\nthat has no reflection on whether\nthat actual IP exists or not.\n\n353\n00:19:12.648 --> 00:19:15.583\nI'm just setting it as the ID, all right?\n\n354\n00:19:15.583 --> 00:19:18.859\nSo now if I do a show ip protocols,\n\n355\n00:19:18.859 --> 00:19:23.659\nI can see my Router ID is 0.0.0.1, okay?\n\n356\n00:19:23.659 --> 00:19:28.356\nNow I do have a Routing Information Source\nthat's showing us 192.168.2.2 still, but\n\n357\n00:19:28.356 --> 00:19:30.970\nthe last update was over five minutes ago,\nall right?\n\n358\n00:19:30.970 --> 00:19:32.170\nWhat's that all about?\n\n359\n00:19:32.170 --> 00:19:35.320\nWell, ospf only sends updates\nwhen changes happen, so\n\n360\n00:19:35.320 --> 00:19:37.640\nthat's probably when I\nconfigured router 2.\n\n361\n00:19:37.640 --> 00:19:40.820\nA change just occurred and actually,\nI see an adjacency change happening.\n\n362\n00:19:40.820 --> 00:19:41.840\nSo if I run that again,\n\n363\n00:19:41.840 --> 00:19:44.970\nwe'll probably see something\na little bit different this time.\n\n364\n00:19:44.970 --> 00:19:49.478\nSo let's pull that back up and sure\nenough, I've got two gateways now, right?\n\n365\n00:19:49.478 --> 00:19:52.040\nThe router ID is how\nwe tell routers apart.\n\n366\n00:19:52.040 --> 00:19:55.146\nI see a new router, 0.0.0.2.\n\n367\n00:19:55.146 --> 00:19:58.767\nI have no way of knowing that\n192.168.2.2 is the same router.\n\n368\n00:19:58.767 --> 00:20:02.240\nBut that router's not talking\nto me anymore and so over time,\n\n369\n00:20:02.240 --> 00:20:05.700\nit's gonna age out and disappear and\nI'll be left with just the new one.\n\n370\n00:20:05.700 --> 00:20:09.430\nAnd I know I'm talking to router 2,\nall right?\n\n371\n00:20:09.430 --> 00:20:10.892\nNow let's go do the last one, router 3.\n\n372\n00:20:10.892 --> 00:20:14.140\nI'm gonna configure router 3 in as\nfew commands as possible, right?\n\n373\n00:20:14.140 --> 00:20:15.590\nSo I wanna do this one fast.\n\n374\n00:20:15.590 --> 00:20:19.890\nSo I'm gonna get in here and do enable,\nI'm gonna get into my configuration.\n\n375\n00:20:21.260 --> 00:20:25.930\nI'm gonna run router ospf 1 or I could\nuse a different process ID if I wanted.\n\n376\n00:20:25.930 --> 00:20:28.600\nIf I wanted to use process ID 3 or\n60,000, right?\n\n377\n00:20:28.600 --> 00:20:29.980\nBut I'll do 1.\n\n378\n00:20:29.980 --> 00:20:33.830\nBefore I turn on any interfaces,\nI'm gonna set the router ID\n\n379\n00:20:33.830 --> 00:20:36.420\nthat way I don't have to reset\nthe process afterwards, right?\n\n380\n00:20:36.420 --> 00:20:41.234\nSo if you set the router ID first,\nyou save yourself a little bit of time and\n\n381\n00:20:41.234 --> 00:20:46.377\nthen I'll do the all encompassing network\ncommand to throw this into area 0.\n\n382\n00:20:46.377 --> 00:20:50.140\nThat right there is the simplest\nprocess for getting OSPF up and\n\n383\n00:20:50.140 --> 00:20:54.048\nrunning on a router very,\nvery quickly on all of its interfaces.\n\n384\n00:20:54.048 --> 00:20:57.028\n&gt;&gt; Now Don, on that network\nstatement that you just made there,\n\n385\n00:20:57.028 --> 00:21:00.542\nI've seen it sometimes because I've\nlooked at guides on the Internet.\n\n386\n00:21:00.542 --> 00:21:05.479\nWhere it shows the area actually\nbeing like the IP address almost,\n\n387\n00:21:05.479 --> 00:21:09.810\nthe 0.0.0.0,\nrepresenting that, too, right?\n\n388\n00:21:09.810 --> 00:21:10.477\nIs that okay?\n\n389\n00:21:10.477 --> 00:21:12.952\n&gt;&gt; Yeah,\nit's funny because the are numbers,\n\n390\n00:21:12.952 --> 00:21:16.285\nthey're actually a 32-bit\ndotted decimal number also.\n\n391\n00:21:16.285 --> 00:21:19.750\n&gt;&gt; Now we normally just write them as\na standard decimal number because we're\n\n392\n00:21:19.750 --> 00:21:21.018\nhumans and it makes sense.\n\n393\n00:21:21.018 --> 00:21:24.921\nAnd you can have up to\n255 regular numbers.\n\n394\n00:21:24.921 --> 00:21:28.648\nBut if you wanna go over 255, that's when\nyou start moving into where you've gotta\n\n395\n00:21:28.648 --> 00:21:31.830\ndo the dotted decimals, basically like\nan IP address but not really one.\n\n396\n00:21:31.830 --> 00:21:33.589\nIt's just stored the same way.\n\n397\n00:21:33.589 --> 00:21:37.131\nAnd so technically when I did area 0,\nthat's 0.0.0.0.\n\n398\n00:21:37.131 --> 00:21:39.993\nIf I did area 5, that would be 0.0.0.5.\n\n399\n00:21:39.993 --> 00:21:47.397\nBut if I wanted to do area 512, well,\nthat would be, I picked a hard one 0.0.0.\n\n400\n00:21:47.397 --> 00:21:51.733\nNo, 0.0.255.255, I think it's what it,\nno, it's 0.0.1.255-\n\n401\n00:21:51.733 --> 00:21:52.419\n&gt;&gt; 1.255\n\n402\n00:21:52.419 --> 00:21:52.932\n&gt;&gt; Is what it would be so.\n\n403\n00:21:52.932 --> 00:21:55.921\nSo it gets a little bit tricky to figure\nit out in the dotted decimal it gets\n\n404\n00:21:55.921 --> 00:21:57.596\nharder, so we don't normally do that.\n\n405\n00:21:57.596 --> 00:21:58.582\nSo when you run the commands,\n\n406\n00:21:58.582 --> 00:22:00.924\nit's gonna default this way and\nthat's what you will see on the exam.\n\n407\n00:22:00.924 --> 00:22:02.655\nThat gives you up to 255 areas,\n\n408\n00:22:02.655 --> 00:22:05.860\nwhich is more than what most\ncompanies would ever need.\n\n409\n00:22:05.860 --> 00:22:08.150\nIf you need more though, you'll find\nyourself going to dotted decimal.\n\n410\n00:22:08.150 --> 00:22:13.650\nAnd sometimes in commands, like show,\nis it show ip or ospf database?\n\n411\n00:22:13.650 --> 00:22:16.700\nThere's one of the commands where you\nactually see it where it's written\n\n412\n00:22:16.700 --> 00:22:17.920\nout, yeah, here.\n\n413\n00:22:17.920 --> 00:22:22.540\nSo if I look at, well, actually no, the\nlink status is still written as Area 0.\n\n414\n00:22:22.540 --> 00:22:24.790\nYeah, there are some commands\nwhere you'll see it pop up and\n\n415\n00:22:24.790 --> 00:22:26.360\nyou'll actually see it written that way.\n\n416\n00:22:26.360 --> 00:22:29.185\nBut typically, Cisco just writes\nit as the regular number and\n\n417\n00:22:29.185 --> 00:22:31.480\nthat's what you'll see on the exam,\nall right?\n\n418\n00:22:31.480 --> 00:22:34.683\nSpeaking of commands, that command I\njust ran you'll not see on the exam.\n\n419\n00:22:34.683 --> 00:22:39.546\nBut one command that is super, super\nimportant to learn is how do we see if\n\n420\n00:22:39.546 --> 00:22:43.510\nwe're actually talking to\nanybody out there, right?\n\n421\n00:22:43.510 --> 00:22:45.540\nAnd there's two commands\nthat are helpful with that.\n\n422\n00:22:45.540 --> 00:22:46.660\nThere's show ip route.\n\n423\n00:22:46.660 --> 00:22:48.840\nIf I'm talking to people I should\nbe learning routes, right?\n\n424\n00:22:48.840 --> 00:22:50.690\nThat's one command,\nwe already know that one.\n\n425\n00:22:50.690 --> 00:22:57.490\nBut the new command, the one that's really\nimportant is show IP OSPF neighbors.\n\n426\n00:22:57.490 --> 00:23:00.781\nIf I have adjacencies built up\nbetween me and other routers,\n\n427\n00:23:00.781 --> 00:23:02.789\nI'll see them in my neighbor table.\n\n428\n00:23:02.789 --> 00:23:04.374\nThese are the routers I'm talking to.\n\n429\n00:23:04.374 --> 00:23:08.141\nAnd so when I'm looking at a router,\nlike router 3,\n\n430\n00:23:08.141 --> 00:23:11.050\nif I do show IP protocols, right?\n\n431\n00:23:11.050 --> 00:23:14.060\nI can look in here and\nI can see these gateways that are listed.\n\n432\n00:23:14.060 --> 00:23:16.542\nThese are other information\nsources that are out there, but\n\n433\n00:23:16.542 --> 00:23:18.402\nI don't see a ton of\ninformation about them.\n\n434\n00:23:18.402 --> 00:23:21.911\nIf I run show ip ospf neighbor, all right?\n\n435\n00:23:21.911 --> 00:23:26.006\nI think I said it with an S a minute ago,\nit's just singular, show ip ospf neighbor.\n\n436\n00:23:26.006 --> 00:23:30.337\nSo that's the negative, in real life land,\nI always do nei and stop, right?\n\n437\n00:23:30.337 --> 00:23:32.958\nAnd so\nyou forget whether it's plural or not.\n\n438\n00:23:32.958 --> 00:23:36.008\nBut it's [LAUGH] show ip ospf neighbor and\nwhen you run that,\n\n439\n00:23:36.008 --> 00:23:37.720\nI can see there's my neighbors.\n\n440\n00:23:37.720 --> 00:23:40.220\nMy neighbors are router 1 and\nrouter 2, right?\n\n441\n00:23:40.220 --> 00:23:42.250\nAnd I've got a connection to them and\n\n442\n00:23:42.250 --> 00:23:44.530\nI can see their dead time\nright now is at 35 seconds.\n\n443\n00:23:44.530 --> 00:23:46.572\nI haven't heard from either\nof them in 35 seconds.\n\n444\n00:23:46.572 --> 00:23:51.052\nAnd there's the neighbor, their address,\nan actual IP address that I can reach out\n\n445\n00:23:51.052 --> 00:23:53.968\nto, not just the router id\nlike I'm seeing over here.\n\n446\n00:23:53.968 --> 00:23:58.626\nAnd then the interface that I see them on,\nI see them on my Gi1/0.\n\n447\n00:23:58.626 --> 00:24:03.644\nSo a little more information than\nwhat we see with show ip protocols.\n\n448\n00:24:03.644 --> 00:24:05.841\nThe other thing we see is\nthis little note right here.\n\n449\n00:24:05.841 --> 00:24:08.342\nFULL/BDR, right?\n\n450\n00:24:08.342 --> 00:24:09.762\nWhat the heck is that?\n\n451\n00:24:09.762 --> 00:24:13.940\nWell what I'm seeing here\nare two different things.\n\n452\n00:24:13.940 --> 00:24:18.090\nI'm seeing my connection state and\nI'm seeing my connection role.\n\n453\n00:24:18.090 --> 00:24:21.900\nWhen you connect to other routers,\nfirst off you have a connection state.\n\n454\n00:24:21.900 --> 00:24:23.900\nWhere are we at in that connection?\n\n455\n00:24:23.900 --> 00:24:28.030\nWhen I first learn about a new neighbor,\nit's gonna go into a state called init.\n\n456\n00:24:28.030 --> 00:24:30.390\nIt's initializing\na connection to a neighbor.\n\n457\n00:24:30.390 --> 00:24:32.650\nI'm trying to see, can I talk to them?\n\n458\n00:24:32.650 --> 00:24:33.630\nNow when you go to talk to them,\n\n459\n00:24:33.630 --> 00:24:37.240\nthere's a number of criteria that have\nto be met to allow you to talk, right?\n\n460\n00:24:37.240 --> 00:24:39.520\nFor example,\nyou have to be on the same IP subnet.\n\n461\n00:24:39.520 --> 00:24:41.375\nIf you're not on the same subnet,\nyou can't talk.\n\n462\n00:24:41.375 --> 00:24:44.700\nYou have to have the same dead timer.\n\n463\n00:24:44.700 --> 00:24:47.380\nSo I expect to hear from you within\na certain period of time, or\n\n464\n00:24:47.380 --> 00:24:49.910\na hello interval, as the hello\nis how often you send a message,\n\n465\n00:24:49.910 --> 00:24:51.340\nnot how often you expect to see it.\n\n466\n00:24:51.340 --> 00:24:53.540\nSo your hello and dead timers,\nthey have to match.\n\n467\n00:24:53.540 --> 00:24:55.640\nIf they don't match, we can't talk.\n\n468\n00:24:55.640 --> 00:24:58.050\nYour area number has to match.\n\n469\n00:24:58.050 --> 00:25:00.070\nIf I'm in Area 0,\nyou have to be in Area 0.\n\n470\n00:25:00.070 --> 00:25:02.750\nIf they don't match, we can't talk.\n\n471\n00:25:02.750 --> 00:25:06.010\nIf there's authentication turned on, if\nthere's a password, password has to match.\n\n472\n00:25:06.010 --> 00:25:08.430\nIf you don't have the password,\nI'm not gonna talk to you, right.\n\n473\n00:25:08.430 --> 00:25:13.080\nThese are all things that have to\nmatch in order to build an adjacency.\n\n474\n00:25:13.080 --> 00:25:14.950\nSo when you're initializing,\nthat's what you're checking.\n\n475\n00:25:14.950 --> 00:25:16.370\nYou're checking all of\nthese little things.\n\n476\n00:25:16.370 --> 00:25:17.790\nDo they match?\n\n477\n00:25:17.790 --> 00:25:20.792\nAnd if they do, great,\nlet's start to talk.\n\n478\n00:25:20.792 --> 00:25:23.092\nAll right, now when it's time to talk,\n\n479\n00:25:23.092 --> 00:25:26.720\nyou're gonna move through\na few different states there.\n\n480\n00:25:26.720 --> 00:25:28.450\nYou're going to transition\nto what's called 2WAY.\n\n481\n00:25:28.450 --> 00:25:31.770\n2WAY, it'll actually show\nus the number two, WAY.\n\n482\n00:25:31.770 --> 00:25:34.705\n2WAY is where you're actually\nstarting to talk to them.\n\n483\n00:25:34.705 --> 00:25:37.180\nOkay, you've passed all my tests,\nlet's start talking about the routes.\n\n484\n00:25:37.180 --> 00:25:38.210\nYou know about any routes?\n\n485\n00:25:38.210 --> 00:25:39.170\nI know about some routes.\n\n486\n00:25:39.170 --> 00:25:41.620\nYou know, can I talk to you and\ncan you talk to me?\n\n487\n00:25:41.620 --> 00:25:44.180\nDo we have bidirectional\nrouting between us?\n\n488\n00:25:44.180 --> 00:25:45.270\nAnd if we can talk back and\n\n489\n00:25:45.270 --> 00:25:50.190\nforth, 2WAY, then we now know we're\ngood and we're ready to exchange routes.\n\n490\n00:25:50.190 --> 00:25:55.320\nAnd then it moves to what's called\nexstart, exstart is the exchange start.\n\n491\n00:25:55.320 --> 00:25:56.750\nWe're exchanging routes.\n\n492\n00:25:56.750 --> 00:25:57.660\nHere's the routes I know about.\n\n493\n00:25:57.660 --> 00:25:58.750\nHow about the routes you know about?\n\n494\n00:25:58.750 --> 00:26:01.030\nAnd they start talking back and forth.\n\n495\n00:26:01.030 --> 00:26:05.050\nAnd once they know all\nabout each others routes,\n\n496\n00:26:05.050 --> 00:26:11.120\nthen they transition to FULL,\nand this happens very, very fast.\n\n497\n00:26:11.120 --> 00:26:13.660\nI have a full communication\nbetween these routers.\n\n498\n00:26:13.660 --> 00:26:15.460\nI don't know that I can run this and\n\n499\n00:26:15.460 --> 00:26:17.800\ncatch it in time to show you\nany of the other states.\n\n500\n00:26:17.800 --> 00:26:19.210\nThat's how fast it happens.\n\n501\n00:26:19.210 --> 00:26:20.380\nLet's jump over to router four.\n\n502\n00:26:20.380 --> 00:26:22.500\nI'll turn on, or wait,\nis that in my topology?\n\n503\n00:26:22.500 --> 00:26:23.360\nHow about router five?\n\n504\n00:26:23.360 --> 00:26:26.250\nI'm gonna jump over to router five,\nthis guy down here.\n\n505\n00:26:26.250 --> 00:26:27.970\nAnd I'm gonna turn on OSPF here and\n\n506\n00:26:27.970 --> 00:26:30.950\nI'll see if I can catch it\nin one of the other states.\n\n507\n00:26:30.950 --> 00:26:32.900\nIt's kind of difficult to do.\n\n508\n00:26:32.900 --> 00:26:37.910\nSo on router five, I'm gonna use\nthe commands that I can do fastest here.\n\n509\n00:26:37.910 --> 00:26:41.380\nSo, see if I can catch this.\n\n510\n00:26:41.380 --> 00:26:46.050\nSo I'm gonna do a show ip ospf neighbor,\nright?\n\n511\n00:26:46.050 --> 00:26:47.851\nRight now I don't have any neighbors.\n\n512\n00:26:47.851 --> 00:26:51.326\nI'm gonna do router ospf 1,\n\n513\n00:26:51.326 --> 00:26:55.778\nrouter-id 0.0.0.5, okay?\n\n514\n00:26:55.778 --> 00:26:59.072\nAnd then let me just get this\nin my command history so\n\n515\n00:26:59.072 --> 00:27:01.610\nI can just hit up and enter really fast.\n\n516\n00:27:01.610 --> 00:27:04.417\nSo I'm gonna run router, no not router.\n\n517\n00:27:04.417 --> 00:27:06.971\nNetwork 0.0.0.0.\n\n518\n00:27:06.971 --> 00:27:10.570\nSo I'm doing a full wildcard on this one,\narea 0.\n\n519\n00:27:10.570 --> 00:27:15.240\nOkay, now when I run that, pretty\nquickly I should discover router three.\n\n520\n00:27:15.240 --> 00:27:17.080\nAnd so we should go into init.\n\n521\n00:27:17.080 --> 00:27:19.797\nAnd after a second of init,\nwe should go to 2WAY.\n\n522\n00:27:19.797 --> 00:27:22.388\nAnd after a second of 2WAY,\n2WAY is super fast.\n\n523\n00:27:22.388 --> 00:27:25.510\nI really doubt I'll catch that one,\nthen we go to exstart.\n\n524\n00:27:25.510 --> 00:27:27.878\nAnd exstart,\nthe bigger your routing table is,\n\n525\n00:27:27.878 --> 00:27:32.110\nthe longer you'll be in exstart cuz you're\nexchanging, so that one may take a while.\n\n526\n00:27:32.110 --> 00:27:35.100\nMy routing table's really small though,\nso it's probably gonna go fast.\n\n527\n00:27:35.100 --> 00:27:38.210\nAnd then we get into full,\nwhich I fully expect to happen quickly.\n\n528\n00:27:38.210 --> 00:27:40.220\nAll right, so [LAUGH] wow.\n\n529\n00:27:40.220 --> 00:27:43.075\nSo you see how quickly that happened?\n\n530\n00:27:43.075 --> 00:27:46.725\nLike I hit enter and then immediately\nit ran show ip OSPF neighbor, and\n\n531\n00:27:46.725 --> 00:27:48.495\nI was already in full.\n\n532\n00:27:48.495 --> 00:27:50.263\nSo it happens really fast.\n\n533\n00:27:50.263 --> 00:27:52.735\nWe could debug it but it goes a little\nbit beyond the scope of the class.\n\n534\n00:27:52.735 --> 00:27:55.610\nSo if I debug it, you actually see\nit run into each of the steps.\n\n535\n00:27:55.610 --> 00:27:56.710\nIt happens really quickly, right?\n\n536\n00:27:56.710 --> 00:28:02.177\nBut those are four different states you'll\nsee in the beginning of that entry.\n\n537\n00:28:02.177 --> 00:28:06.306\nAfter that,\nthen you've got this other part,\n\n538\n00:28:06.306 --> 00:28:11.686\nsee how mine says DR, but\nback on Router 3, we had DR and BDR.\n\n539\n00:28:11.686 --> 00:28:12.871\nActually let's take a look at router one.\n\n540\n00:28:12.871 --> 00:28:14.193\nIt would be the interesting one.\n\n541\n00:28:14.193 --> 00:28:16.306\nShow ip ospf neighbor.\n\n542\n00:28:16.306 --> 00:28:17.502\nHere we go.\n\n543\n00:28:17.502 --> 00:28:19.700\nWe have DR and DROTHER, right?\n\n544\n00:28:19.700 --> 00:28:22.175\nHere's three different states, roles.\n\n545\n00:28:22.175 --> 00:28:24.729\nDR, BDR, and DROTHER.\n\n546\n00:28:24.729 --> 00:28:26.860\nThere's actually one more role,\nwhich is no role at all.\n\n547\n00:28:26.860 --> 00:28:31.550\nSo these three roles, what they stand for\nis designated router.\n\n548\n00:28:31.550 --> 00:28:33.830\nThe DR is the designated router.\n\n549\n00:28:33.830 --> 00:28:37.270\nBDR is backup designated router.\n\n550\n00:28:37.270 --> 00:28:39.330\nAnd DROTHER is designated router other,\n\n551\n00:28:39.330 --> 00:28:42.590\nin other words I'm not any kind\nof designated router, right?\n\n552\n00:28:42.590 --> 00:28:45.290\nSo you've got a designated router.\n\n553\n00:28:45.290 --> 00:28:48.790\nThat's the head cheese,\nthe main guy, the person in charge.\n\n554\n00:28:48.790 --> 00:28:50.330\nYou've got a backup designated router.\n\n555\n00:28:50.330 --> 00:28:53.580\nThat's the next person who's\ngonna step up if the DR fails.\n\n556\n00:28:53.580 --> 00:28:56.300\nAnd then you've got DROTHER,\nwhich is everybody else.\n\n557\n00:28:57.380 --> 00:29:02.520\nWhen you have a multi-access network, like\nthis one, this is a multi-access network,\n\n558\n00:29:02.520 --> 00:29:05.460\nthese routers all need to exchange\nroutes between each other.\n\n559\n00:29:05.460 --> 00:29:07.970\nWell, when I got three routers,\nthat's no big deal.\n\n560\n00:29:07.970 --> 00:29:10.950\nRouters one and two talk,\nrouter two and three talk, and\n\n561\n00:29:10.950 --> 00:29:12.320\nthen routers one and three talk.\n\n562\n00:29:12.320 --> 00:29:17.130\nSo just three communications, right,\nit's the old, what is it, N-1,\n\n563\n00:29:17.130 --> 00:29:21.510\nthat every router has to have N-1\nconnections to the other router.\n\n564\n00:29:21.510 --> 00:29:23.389\nSo if there's two routers\nthree minus one is two,\n\n565\n00:29:23.389 --> 00:29:26.160\nevery router would have two connections,\nright?\n\n566\n00:29:26.160 --> 00:29:27.480\nWith three routers it's not a big deal.\n\n567\n00:29:27.480 --> 00:29:29.280\nWhat if it was 300 routers?\n\n568\n00:29:29.280 --> 00:29:32.060\nNow every router would\nneed 299 connections to\n\n569\n00:29:32.060 --> 00:29:34.640\nall of the other routers to exchange\ninformation, and that gets crazy.\n\n570\n00:29:34.640 --> 00:29:41.250\nSo on a multi-access network like this,\nOSPF will elect a DR.\n\n571\n00:29:41.250 --> 00:29:47.210\nAnd the designated router is typically the\nperson with the highest router ID, right?\n\n572\n00:29:47.210 --> 00:29:49.740\nWhich is why router one\nis not the DR in my case.\n\n573\n00:29:49.740 --> 00:29:52.002\nSo it can also be influenced\nby who comes online first and\n\n574\n00:29:52.002 --> 00:29:54.160\nthere's some other\nthings can influence it.\n\n575\n00:29:54.160 --> 00:29:56.900\nBut somebody becomes\nthe designated router.\n\n576\n00:29:56.900 --> 00:29:59.820\nAnd now, when you exchange routes,\n\n577\n00:29:59.820 --> 00:30:02.260\nyou only exchange routes\nwith the designated router.\n\n578\n00:30:02.260 --> 00:30:04.970\nEverybody talks to the DR.\n\n579\n00:30:04.970 --> 00:30:07.110\nSo if I had 50 routers here,\n\n580\n00:30:07.110 --> 00:30:10.490\n49 of them would all have connections\nto the DR, and that's it.\n\n581\n00:30:10.490 --> 00:30:12.120\nEverybody would just need one connection.\n\n582\n00:30:12.120 --> 00:30:13.490\nWell, not just one.\n\n583\n00:30:13.490 --> 00:30:16.350\nIf the DR fails, the BDR has to take over.\n\n584\n00:30:16.350 --> 00:30:19.050\nSo we'll get a connection to the BDR also.\n\n585\n00:30:19.050 --> 00:30:22.180\nThat's our connection to\nthe backup designated router.\n\n586\n00:30:22.180 --> 00:30:25.180\nAnd so\nwhen you start looking at your neighbors,\n\n587\n00:30:25.180 --> 00:30:27.430\nyou'll see a connection\nto a designated router.\n\n588\n00:30:28.500 --> 00:30:30.520\nThe BDR is out there, and\n\n589\n00:30:30.520 --> 00:30:34.500\nif you don't see the BDR on the list,\nthen you are the BDR, right?\n\n590\n00:30:34.500 --> 00:30:39.110\nSo in this case, router 1, the BDR's not\nin the list, that means that I am the BDR.\n\n591\n00:30:39.110 --> 00:30:43.020\nI'm connected to the DR, and\nthen I have this connection to router 3.\n\n592\n00:30:43.020 --> 00:30:45.420\nRouter 3 is DROTHER, right?\n\n593\n00:30:45.420 --> 00:30:48.780\nAnd it became DROTHER because it was\nthe last one that I turned on, right?\n\n594\n00:30:48.780 --> 00:30:50.424\nSo it was last in line.\n\n595\n00:30:50.424 --> 00:30:53.299\nAnd over time that may change,\nas routers go offline or\n\n596\n00:30:53.299 --> 00:30:56.123\nreboot or whatever,\nit'll change who is in charge.\n\n597\n00:30:56.123 --> 00:31:00.907\nBut that's what I'm seeing right\nnow is that I've got this FULL/DR,\n\n598\n00:31:00.907 --> 00:31:02.680\nFULL/DROTHER, right?\n\n599\n00:31:02.680 --> 00:31:05.105\nThis is important on\nmulti-access networks.\n\n600\n00:31:05.105 --> 00:31:08.417\nWhen you've got many, many routers,\nthat makes it a lot more efficient.\n\n601\n00:31:08.417 --> 00:31:10.732\nYou're only talking to one person and\nthe back up, so\n\n602\n00:31:10.732 --> 00:31:12.744\nyou're talking to two people and\nthat's it.\n\n603\n00:31:12.744 --> 00:31:15.460\nEverybody else just kind of sits there.\n\n604\n00:31:15.460 --> 00:31:19.130\nWell, what if we have a point to\npoint link like this one down here?\n\n605\n00:31:19.130 --> 00:31:20.370\nThis link is point to point.\n\n606\n00:31:20.370 --> 00:31:23.040\nIt's running right from router\nthree to router five, right?\n\n607\n00:31:23.040 --> 00:31:24.640\nThere's nobody else out there.\n\n608\n00:31:24.640 --> 00:31:27.760\nSince there's nobody else out there,\ndo I need to elect a designated router,\n\n609\n00:31:27.760 --> 00:31:29.720\na backup designated router?\n\n610\n00:31:29.720 --> 00:31:30.820\nNo.\n\n611\n00:31:30.820 --> 00:31:35.100\nSo, if I have a serial line, or\nsome kind of true point to point line,\n\n612\n00:31:35.100 --> 00:31:39.010\nthe router will detect that and\nit will not elect a DR or a BDR.\n\n613\n00:31:39.010 --> 00:31:41.300\nBut if you have a metro\nEthernet line that's run,\n\n614\n00:31:41.300 --> 00:31:44.130\nit always assumes that\nEthernet is multi-access.\n\n615\n00:31:44.130 --> 00:31:47.800\nAnd so even though this is point-to-point,\nI'll still have a DRNBDR.\n\n616\n00:31:48.840 --> 00:31:50.570\nLet's take a look if I go to router three.\n\n617\n00:31:52.920 --> 00:31:57.690\nOn router three if I do a show\nip ospf neighbor, all right,\n\n618\n00:31:57.690 --> 00:31:59.280\nthere's my connection router five.\n\n619\n00:31:59.280 --> 00:32:01.822\nAnd see how my connection to\nrouter five shows it's a BDR?\n\n620\n00:32:01.822 --> 00:32:08.157\nAnd if I go to router five and I do the\nsame thing, see how it's got a connection?\n\n621\n00:32:08.157 --> 00:32:09.082\nIt shows it as DR.\n\n622\n00:32:09.082 --> 00:32:10.555\nSo router five is the backup.\n\n623\n00:32:10.555 --> 00:32:12.509\nRouter three is the designated router.\n\n624\n00:32:12.509 --> 00:32:15.397\nRight, so it elected that even though\nthey're the only two people on the link.\n\n625\n00:32:15.397 --> 00:32:22.510\nWell, I can get into whatever that\ninterface is, let's see FastEthernet2/0.\n\n626\n00:32:22.510 --> 00:32:27.608\nSo I can get into FastEthernet2/0,\nand I can say ip ospf network\n\n627\n00:32:27.608 --> 00:32:33.280\npoint-to-point, I can tell that\nit's a point-to-point link.\n\n628\n00:32:33.280 --> 00:32:37.140\nOkay, and\nby doing that I'm telling it hey,\n\n629\n00:32:37.140 --> 00:32:41.150\nyou really don't need to\nbother electing a DR and BDR.\n\n630\n00:32:41.150 --> 00:32:43.740\nIt's point to point,\nthere's only two people so who cares,\n\n631\n00:32:43.740 --> 00:32:45.500\nyou guys just talk to each other.\n\n632\n00:32:45.500 --> 00:32:48.350\nNow the instant I do that my\nconnection's gonna reset.\n\n633\n00:32:48.350 --> 00:32:50.590\nAnd I really need to change\nit on the other side, too.\n\n634\n00:32:50.590 --> 00:32:53.130\nSo I need to jump over to router 3 and\nfix it there too.\n\n635\n00:32:53.130 --> 00:32:58.743\nSo I'm gonna jump over to router 3,\nand on router 3 its connection\n\n636\n00:32:58.743 --> 00:33:04.367\nis on FastEthernet2/1, so\nI'll get into interface fa 2/1.\n\n637\n00:33:04.367 --> 00:33:06.110\nAnd, I'll run that same command.\n\n638\n00:33:06.110 --> 00:33:09.240\nIf you don't do it on both ends,\nit can result in some really weird stuff.\n\n639\n00:33:09.240 --> 00:33:11.420\nOne expects the DR to be there,\nthe other one doesn't.\n\n640\n00:33:11.420 --> 00:33:13.460\nBut now, it's going point-to-point.\n\n641\n00:33:13.460 --> 00:33:16.685\nAnd, when it's a point-to-point link,\nit'll skip the election.\n\n642\n00:33:16.685 --> 00:33:19.725\nIt won't bother with the whole\nDRBDR thing, all right.\n\n643\n00:33:19.725 --> 00:33:24.657\nAnd so now, if I do a show ip\nospf neighbor, look at the state,\n\n644\n00:33:24.657 --> 00:33:28.535\nFULL/ -, right.\n\n645\n00:33:28.535 --> 00:33:31.815\nThe dash tells me I didn't elect a DR,\nwho cares.\n\n646\n00:33:31.815 --> 00:33:32.605\nIt's point-to-point.\n\n647\n00:33:32.605 --> 00:33:34.085\nWe don't need a DR anymore.\n\n648\n00:33:34.085 --> 00:33:35.840\nWe can just talk directly to each other.\n\n649\n00:33:35.840 --> 00:33:38.030\nAnd so now they're operating\nas a point-to-point link,\n\n650\n00:33:38.030 --> 00:33:39.960\nthat's the fourth role.\n\n651\n00:33:39.960 --> 00:33:41.700\nThe fourth role is no role at all.\n\n652\n00:33:41.700 --> 00:33:43.780\nSo you're gonna see designated router,\n\n653\n00:33:43.780 --> 00:33:46.760\nwhich means you got picked as\nthe person in charge of that link.\n\n654\n00:33:47.870 --> 00:33:53.330\nBackup designated router, BDR, so you're\nthe person who'll kick in if the DR fails.\n\n655\n00:33:53.330 --> 00:33:55.994\nDRother, you're just a router\nparticipating in the link.\n\n656\n00:33:55.994 --> 00:33:58.249\nYou're not DR or BDR, but\nyou are participating.\n\n657\n00:33:59.260 --> 00:34:02.260\nOr dash,\nwhich means no role whatsoever, and\n\n658\n00:34:02.260 --> 00:34:04.280\ndash you should only see\non point-to-point link.\n\n659\n00:34:04.280 --> 00:34:06.600\nThat's the only time you should\nsee the dash, otherwise,\n\n660\n00:34:06.600 --> 00:34:08.025\nyou should always have\none of these other roles.\n\n661\n00:34:08.025 --> 00:34:11.870\nMulti-access network should gotta\nhave a DR, point-to-point, you don't.\n\n662\n00:34:13.100 --> 00:34:16.040\nSo that's happening when\nour routers get connected.\n\n663\n00:34:16.040 --> 00:34:18.490\nAnd now they're up, they're talking and\n\n664\n00:34:18.490 --> 00:34:21.460\nwe should be exchanging routes,\nospf is up and running.\n\n665\n00:34:21.460 --> 00:34:24.540\nIt occurs to me that we haven't actually\nlooked at our routing table at all.\n\n666\n00:34:24.540 --> 00:34:29.615\nI'm gonna jump over to router 1 and\non router 1 I'm gonna do a show ip route,\n\n667\n00:34:29.615 --> 00:34:34.755\nwhoops, and show ip route should\nshow me some ospf routes.\n\n668\n00:34:34.755 --> 00:34:40.925\nAnd sure enough, there we've got it,\nthese routes have an o beside them.\n\n669\n00:34:40.925 --> 00:34:42.468\nI know about 192.168.2, .3, .5.\n\n670\n00:34:42.468 --> 00:34:45.525\nI've learned about these\nnetworks thanks to ospf.\n\n671\n00:34:45.525 --> 00:34:48.039\nI'm learning about them, I'm hearing\nabout them, and getting that information.\n\n672\n00:34:49.140 --> 00:34:50.580\nNow, at this stage,\n\n673\n00:34:50.580 --> 00:34:56.240\nwe've configured ospf on this link\nhere between routers 1, 2, and 3.\n\n674\n00:34:56.240 --> 00:35:01.060\nThis link on router 1 is a part of area 0,\nthis link on router 2 is\n\n675\n00:35:01.060 --> 00:35:06.070\na part of area 0, this link in router\n5 and this link are a part of area 0.\n\n676\n00:35:06.070 --> 00:35:09.510\nAll right,\nwhat if we wanted to go multi-area?\n\n677\n00:35:09.510 --> 00:35:12.580\nRight, what if I wanted to\nbring in additional areas?\n\n678\n00:35:12.580 --> 00:35:13.710\nWell I can certainly do that.\n\n679\n00:35:13.710 --> 00:35:17.611\nMaybe router 6 we'll move into another\narea and get to see how and ABR,\n\n680\n00:35:17.611 --> 00:35:19.945\na border router, works, all right?\n\n681\n00:35:19.945 --> 00:35:23.145\nBut we'll continue configuring ospf and\ngetting that put in place, and\n\n682\n00:35:23.145 --> 00:35:26.135\nthen we'll get a chance to see that\nI wanna configure router 6 as an ABR.\n\n683\n00:35:26.135 --> 00:35:28.635\nNow, Ronnie's giving me the eye\nhere that I've run over time.\n\n684\n00:35:28.635 --> 00:35:30.965\nSo why don't we do this,\nwhy don't we do a part two.\n\n685\n00:35:30.965 --> 00:35:32.165\nAnd in part two,\n\n686\n00:35:32.165 --> 00:35:35.440\nwe'll extend area 0 to grab router\n4 cuz we haven't messed with it.\n\n687\n00:35:35.440 --> 00:35:37.340\nBut I want router 6 to be a border router.\n\n688\n00:35:37.340 --> 00:35:40.420\nAnd I'm gonna take it's little side\nnetwork and move it into area one and\n\n689\n00:35:40.420 --> 00:35:44.810\nthen we will have area zero and area\none have a multi area ospf environment.\n\n690\n00:35:44.810 --> 00:35:47.650\nAnd once we've got that in place you\ncan kind of see how that works and\n\n691\n00:35:47.650 --> 00:35:52.360\nkind of experience the slightly more\ncomplex configuration you have there.\n\n692\n00:35:52.360 --> 00:35:56.030\nIt's actually really not that hard to do,\nso we'll get it configured and\n\n693\n00:35:56.030 --> 00:35:56.910\nit will be kind of neat.\n\n694\n00:35:56.910 --> 00:35:58.910\nSo let's save that for part two, but for\n\n695\n00:35:58.910 --> 00:36:01.620\nright now we got a chance to\nsee ospf get up and configured.\n\n696\n00:36:01.620 --> 00:36:06.150\nWe got to verify the connections and\nit really wasn't that hard.\n\n697\n00:36:06.150 --> 00:36:07.610\n&gt;&gt; Well and Don, thank you again for\n\n698\n00:36:07.610 --> 00:36:09.790\nintroducing us to that\nimplementation part.\n\n699\n00:36:09.790 --> 00:36:13.610\nThe idea of configuring our\nrouters to be able to run ospf.\n\n700\n00:36:13.610 --> 00:36:16.430\nRemember to take a look at those\nadjacencies and the information that\n\n701\n00:36:16.430 --> 00:36:21.400\nwe're seeing right there through that\nshow command, the show ip ospf neighbor.\n\n702\n00:36:21.400 --> 00:36:23.640\nThat's gonna be a very\nimportant command for us, and\n\n703\n00:36:23.640 --> 00:36:27.160\nbe able to actually understand those\ndifferent roles and those as well.\n\n704\n00:36:27.160 --> 00:36:29.980\nGreat place for\nus to also end this episode then.\n\n705\n00:36:29.980 --> 00:36:33.940\nSigning off for ITProTV,\nI've been your host Ronnie Wong.\n\n706\n00:36:33.940 --> 00:36:34.920\n&gt;&gt; And I'm Don Pezet.\n\n707\n00:36:34.920 --> 00:36:39.911\n&gt;&gt; Stay tuned right here for\nmore CCNA routing and switching.\n\n708\n00:36:39.911 --> 00:36:48.240\n[MUSIC]\n\n",
          "vimeoId": "180048230"
        },
        {
          "description": "In this episode, Ronnie and Don continue with the OSPF configuration.  They dive into how and why to configure multi-area OSPF.  The show how to configure a single area router into an ABR, area border router and discuss how it functions in both areas.  They also show the results of configuring multi-area ospf routers and the effect it has within a single are through the routing table.  Lastly, they describe and use some of the different commands to help with configuring ospf: “show ip ospf neighbor,” “show running-config | section ospf,” “debug ip ospf packets,” and “debug ip ospf adj.”",
          "length": "2277",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/cisco-ccna200105/cisco-ccna200105-2-4-2-implementing_ospfv2_pt2-082316-1.jpg",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/cisco-ccna200105/cisco-ccna200105-2-4-2-implementing_ospfv2_pt2-082316-1-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/cisco-ccna200105/cisco-ccna200105-2-4-2-implementing_ospfv2_pt2-082316-1-sm.jpg",
          "title": "Implementing OSPFv2 Part 2",
          "transcript": "WEBVTT\n\n1\n00:00:00.000 --> 00:00:10.000\n[MUSIC]\n\n2\n00:00:12.195 --> 00:00:15.523\nWelcome back to another great\nepisode right here on ITProTV.\n\n3\n00:00:15.523 --> 00:00:20.044\nI'm you host Ronnie Wong, and\nyou're watching the Cisco CCNA Routing and\n\n4\n00:00:20.044 --> 00:00:23.938\nSwitching Show, where we're about\nhead into an OSPF part two.\n\n5\n00:00:23.938 --> 00:00:27.526\nThere so much information that we covered\nin part one, that we needed to spill over\n\n6\n00:00:27.526 --> 00:00:30.387\ninto a part two to look at more of\nthe information right there, and\n\n7\n00:00:30.387 --> 00:00:32.700\nwho better to help us than Mr.\nDon Pezet, himself.\n\n8\n00:00:32.700 --> 00:00:33.690\nDon, welcome back.\n\n9\n00:00:33.690 --> 00:00:34.510\n&gt;&gt; Thanks for having me, Ronnie.\n\n10\n00:00:34.510 --> 00:00:36.561\nReady to dive right back\ninto the world of OSPF.\n\n11\n00:00:36.561 --> 00:00:40.317\nAnd for those of you that are following\nalong in the exam objectives,\n\n12\n00:00:40.317 --> 00:00:44.205\nyou might have noticed that when they\ncalled out OSPF they specifically\n\n13\n00:00:44.205 --> 00:00:46.270\nsay multi-area OSPF.\n\n14\n00:00:46.270 --> 00:00:49.245\nAnd in our last show,\nwhat we did is we deployed OSPF.\n\n15\n00:00:49.245 --> 00:00:52.524\nWe got it up and running for\nour IPv4 network, but\n\n16\n00:00:52.524 --> 00:00:57.287\nevery router was in area zero,\nevery router was in the backbone area, so\n\n17\n00:00:57.287 --> 00:01:00.115\nwhat we ended up with\nwas single area OSPF.\n\n18\n00:01:00.115 --> 00:01:03.066\nAnd I'll tell you,\nof all the OSPF deployments out there,\n\n19\n00:01:03.066 --> 00:01:05.490\nsingle area is the most common.\n\n20\n00:01:05.490 --> 00:01:08.940\nYou can have a massive\nenterprise scale network, and\n\n21\n00:01:08.940 --> 00:01:11.770\nsingular AOSPF works just fine, right?\n\n22\n00:01:11.770 --> 00:01:16.769\nBut there's a few technologies that really\ndepend on us dividing the network up\n\n23\n00:01:16.769 --> 00:01:17.880\ninto areas.\n\n24\n00:01:17.880 --> 00:01:21.780\nAnd the moment you add your second area,\nnow you're what's called multi- area.\n\n25\n00:01:21.780 --> 00:01:24.620\nSo on the exam we need to understand\nexactly how that works and\n\n26\n00:01:24.620 --> 00:01:27.300\nhow better to learn that\nthan to actually see it.\n\n27\n00:01:27.300 --> 00:01:30.200\nSo let's start by taking\na look at the topology.\n\n28\n00:01:30.200 --> 00:01:33.080\nJust kind of recap where we are, and\nthen we'll see where we're gonna go.\n\n29\n00:01:33.080 --> 00:01:36.753\nSo in our last episode, what we did\nis we configured OSPF, originally,\n\n30\n00:01:36.753 --> 00:01:39.600\nbetween router 1, router 2,\nand router 3, right?\n\n31\n00:01:39.600 --> 00:01:44.280\nSo we threw them entirely into area zero,\nand they started exchanging routes.\n\n32\n00:01:44.280 --> 00:01:46.100\nThen we added on router 5 after that,\n\n33\n00:01:46.100 --> 00:01:50.680\nto have that kinda tie in, because we\nhad a multi-access network right here.\n\n34\n00:01:50.680 --> 00:01:52.400\nWe had a point to point network here.\n\n35\n00:01:52.400 --> 00:01:55.907\nSo we got a chance to see\nthings like how the DR and BDR,\n\n36\n00:01:55.907 --> 00:01:58.400\nand the designated router elections,\nhow they work.\n\n37\n00:01:58.400 --> 00:01:59.620\nWe got to see that.\n\n38\n00:01:59.620 --> 00:02:04.324\nWe got to see some of out connection\ntypes, like two-way, ex start, init, full,\n\n39\n00:02:04.324 --> 00:02:06.200\nso we saw those communications.\n\n40\n00:02:06.200 --> 00:02:09.090\nAnd we saw our routing\ntables start to populate.\n\n41\n00:02:09.090 --> 00:02:12.830\nWhat I did after the show is I\ntook router 4 and router 6, and\n\n42\n00:02:12.830 --> 00:02:14.270\nI threw them into area zero, also.\n\n43\n00:02:14.270 --> 00:02:18.050\nSo right now we just have one big,\ngiant area zero.\n\n44\n00:02:18.050 --> 00:02:19.870\nAll the routers are talking nice,\n\n45\n00:02:19.870 --> 00:02:22.896\neverybody should be aware\nof everybody else's number.\n\n46\n00:02:22.896 --> 00:02:25.779\nWe should have what called\na converged network.\n\n47\n00:02:25.779 --> 00:02:32.250\nAnd so if you look at my map here,\nI've got 192.168.0, 1, 2, 3, 4, 5, right.\n\n48\n00:02:32.250 --> 00:02:36.690\nSo there's five of these networks\nthat are 192.168 dot something.\n\n49\n00:02:36.690 --> 00:02:40.220\nAnd then up here I've\ngot the 172.16 network.\n\n50\n00:02:40.220 --> 00:02:41.680\nIf I have a converged network,\n\n51\n00:02:41.680 --> 00:02:44.610\neverybody should know about\nevery one of those networks.\n\n52\n00:02:44.610 --> 00:02:46.705\nAnd because they're all in one area,\n\n53\n00:02:46.705 --> 00:02:51.300\nevery router should be aware of all of the\nother routers that are out there, right?\n\n54\n00:02:51.300 --> 00:02:53.100\nThey should know that they're out there,\n\n55\n00:02:53.100 --> 00:02:56.400\nnot like a disinfecter protocol where\nthey only know about their neighbor.\n\n56\n00:02:56.400 --> 00:02:59.250\nWe should know about every single\nrouter out there, all right.\n\n57\n00:02:59.250 --> 00:03:02.160\nSo let's just take a look and\nverify that that is what's happening.\n\n58\n00:03:02.160 --> 00:03:07.130\nI'm gonna jump back over to my routers,\nand what we'll just start on router 1.\n\n59\n00:03:07.130 --> 00:03:11.180\nThat is not router 1, so\nwe'll start on router 1, I promise.\n\n60\n00:03:11.180 --> 00:03:13.470\nAnd I'm just gonna take a look at\nthe routing table on router 1 and\n\n61\n00:03:13.470 --> 00:03:15.610\nmake sure it's got a full routing table.\n\n62\n00:03:15.610 --> 00:03:20.937\nSo I'll do a show ip route,\nand I should see the 192.\n\n63\n00:03:20.937 --> 00:03:23.860\nThere we go, 168.1, 2, 3, 4, and\n\n64\n00:03:23.860 --> 00:03:27.500\n5 networks, and sure enough,\nthey all show up.\n\n65\n00:03:27.500 --> 00:03:30.760\n192.168.1 has a couple\nextra entries because\n\n66\n00:03:30.760 --> 00:03:32.280\nI'm directly connected to it, right.\n\n67\n00:03:32.280 --> 00:03:36.840\nBut the other ones, I've got a nice little\nO over there lets me know that it's OSPF.\n\n68\n00:03:38.210 --> 00:03:41.380\nAnd it's an O by itself, and\n\n69\n00:03:41.380 --> 00:03:46.120\nby itself, that lets me know that it's\nlearned from within the same area as me.\n\n70\n00:03:46.120 --> 00:03:49.075\nIt's just straight up\nan OSPF route that I learned.\n\n71\n00:03:49.075 --> 00:03:51.430\nNow, way up here is 172.16.0,\nand I've got two entries for it,\n\n72\n00:03:51.430 --> 00:03:56.010\nbecause there's two paths,\ntwo equal paths for me to get there.\n\n73\n00:03:56.010 --> 00:03:59.670\nSo they both make it into the table,\nand I've got that one present, too.\n\n74\n00:03:59.670 --> 00:04:03.840\nSo it looks like I do have a fully\nconverged network from that standpoint.\n\n75\n00:04:03.840 --> 00:04:06.010\nNow if I do a show ip ospf neighbor,\n\n76\n00:04:07.450 --> 00:04:10.630\nI'm only gonna see my\ndirectly adjacent neighbors.\n\n77\n00:04:10.630 --> 00:04:12.700\nI see router 2 and router 3, right?\n\n78\n00:04:12.700 --> 00:04:17.570\nIf I go back to my table here,\nrouter 1 just sees router 2 and router 3.\n\n79\n00:04:17.570 --> 00:04:22.560\nBut if I look into the OSPF database, I\nshould actually see all the other routers\n\n80\n00:04:22.560 --> 00:04:25.570\nthat are out there, the other people\nwhere we're learning routes from.\n\n81\n00:04:25.570 --> 00:04:27.660\nAnd I doubt this will show up on the exam,\nbut\n\n82\n00:04:27.660 --> 00:04:31.680\nif you do a show ip ospf database,\nyou can actually see in there, and\n\n83\n00:04:31.680 --> 00:04:35.530\nsee all my advertising routers,\nrouter 1, 2, 3, 4, 5, and 6.\n\n84\n00:04:35.530 --> 00:04:38.880\nI don't just have this idea of\nother routers being out there,\n\n85\n00:04:38.880 --> 00:04:40.830\nlike a distance vector\nprotocol that I have.\n\n86\n00:04:40.830 --> 00:04:42.720\nI actually know those routers,\nI can see them.\n\n87\n00:04:42.720 --> 00:04:44.980\nHey, there's router 6, it's out there.\n\n88\n00:04:44.980 --> 00:04:48.240\nAnd granted, router 6 is way far away.\n\n89\n00:04:48.240 --> 00:04:51.489\nI've gotta pass through all these other\nrouters to get there, but I know about it,\n\n90\n00:04:51.489 --> 00:04:52.706\nI know of the actual router 6.\n\n91\n00:04:52.706 --> 00:04:55.598\nSo if I learn a route back to\nmyself that's coming from myself,\n\n92\n00:04:55.598 --> 00:04:59.650\nI'll know it, because I'll see where it\noriginated, and I'll know to block it.\n\n93\n00:04:59.650 --> 00:05:01.220\nThat's how we get our\nloop-free functionality.\n\n94\n00:05:02.770 --> 00:05:09.450\nAll right, so we've got a fully\nestablished single area OSPF environment.\n\n95\n00:05:09.450 --> 00:05:12.390\nThe next logical step is to take\nwhat's simple and working, and\n\n96\n00:05:12.390 --> 00:05:13.776\nmake it more complex, right?\n\n97\n00:05:13.776 --> 00:05:16.540\n[LAUGH] And\nit's not just making it more complex for\n\n98\n00:05:16.540 --> 00:05:20.580\nthe sake of being complex,\nlet's remember why we would go multi-area.\n\n99\n00:05:20.580 --> 00:05:24.237\nNow, in single area it's simple,\nyou deploy it quickly,\n\n100\n00:05:24.237 --> 00:05:26.297\nit works, it really was simple.\n\n101\n00:05:26.297 --> 00:05:29.129\nYou'll remember from the last episode,\nit's just two commands.\n\n102\n00:05:29.129 --> 00:05:32.065\nRouter, OSPF and a process number,\nand then network and\n\n103\n00:05:32.065 --> 00:05:33.850\nthe network ranges that you want.\n\n104\n00:05:33.850 --> 00:05:40.500\nOr I did a shortcut and\ndid network 0.0.0.0 0.0.0.0 area 0.\n\n105\n00:05:40.500 --> 00:05:43.472\nThose two commands right there, we turn\non OSPF for all of our interfaces and\n\n106\n00:05:43.472 --> 00:05:44.620\nthat's it.\n\n107\n00:05:44.620 --> 00:05:48.280\nWe can add a router ID if we want, we can\nbe specific about the networks if we want,\n\n108\n00:05:48.280 --> 00:05:51.570\nbut those two commands will get it up and\nrunning super fast and then you're done.\n\n109\n00:05:51.570 --> 00:05:54.220\nSo why not stop there?\n\n110\n00:05:54.220 --> 00:05:54.800\nWe could.\n\n111\n00:05:54.800 --> 00:05:58.920\nOSPF does perfectly fine in area zero\nmode, where everybody's in one area.\n\n112\n00:05:58.920 --> 00:06:02.620\nBut as your network grows,\nas it gets bigger and bigger and\n\n113\n00:06:02.620 --> 00:06:07.720\nbigger, you saw how router 1,\nit knows every other router in that area.\n\n114\n00:06:07.720 --> 00:06:08.930\nWell, right now, I've got six routers, so\n\n115\n00:06:08.930 --> 00:06:11.489\nnot a big deal, right, but\nwhat if I had 600 routers?\n\n116\n00:06:13.070 --> 00:06:15.460\nI'm gonna know all 600 routers.\n\n117\n00:06:15.460 --> 00:06:19.830\nAnd any time there's a change anywhere\nin my topology, anywhere throughout\n\n118\n00:06:19.830 --> 00:06:24.250\nthe entire topology, every single router\nhas to learn about that change, and\n\n119\n00:06:24.250 --> 00:06:27.410\nevery single router has to rerun\nthe shortest path first algorithm.\n\n120\n00:06:27.410 --> 00:06:31.660\nIt's gotta recalculate, and figure out\nif the topology has changed for us.\n\n121\n00:06:31.660 --> 00:06:33.330\nIf it hasn't,\nthe routing table doesn't change.\n\n122\n00:06:33.330 --> 00:06:36.540\nIf the topology has changed,\nour routing table may need to be updated.\n\n123\n00:06:36.540 --> 00:06:39.860\nEither way we gotta run the algorithm,\nwhich means we get a CPU spike and\n\n124\n00:06:39.860 --> 00:06:41.710\nwe consume a little bit more memory.\n\n125\n00:06:41.710 --> 00:06:44.820\nThat's the thing about OSPF is it's\na little more resource intensive than\n\n126\n00:06:44.820 --> 00:06:46.330\nother protocols.\n\n127\n00:06:46.330 --> 00:06:49.620\nSo with areas, we can break it up.\n\n128\n00:06:49.620 --> 00:06:52.060\nAnd we can say these\nrouters are in one area,\n\n129\n00:06:52.060 --> 00:06:54.190\nand these other routers\nare in a different area.\n\n130\n00:06:54.190 --> 00:06:55.880\nAnd now when there's a change,\n\n131\n00:06:55.880 --> 00:06:59.220\nonly routers in that area\nhave to learn about it.\n\n132\n00:06:59.220 --> 00:07:01.220\nThe other routers don't have\nto see it at all, right.\n\n133\n00:07:01.220 --> 00:07:04.050\nSo we can start to separate our\nnetwork for performance purposes.\n\n134\n00:07:04.050 --> 00:07:07.830\nThat's the main reason for\nusing areas and on the CCNA exam,\n\n135\n00:07:07.830 --> 00:07:09.240\nit's really the only reason.\n\n136\n00:07:09.240 --> 00:07:13.280\nFor those of you that go on to CCNP, there\nis actually another really good reason for\n\n137\n00:07:13.280 --> 00:07:16.710\nusing areas called route summarization,\nwhich, if you look at the exam objectives,\n\n138\n00:07:16.710 --> 00:07:20.240\nthey specifically say to exclude that so\nI don't want to spend a ton of time on it.\n\n139\n00:07:20.240 --> 00:07:22.520\nBut for\nthose of you that do go on to CCNP,\n\n140\n00:07:22.520 --> 00:07:26.150\nthere's another performance optimization\nwe can do to shrink our routing tables\n\n141\n00:07:26.150 --> 00:07:29.550\nthat only works in OSPF when\nyou pass between areas.\n\n142\n00:07:29.550 --> 00:07:32.500\nSo if you have a single area,\nyou can't do it.\n\n143\n00:07:32.500 --> 00:07:35.550\nYou can't do route summarization at all,\nthat's why it's not on these objectives.\n\n144\n00:07:35.550 --> 00:07:38.580\nBut as soon as you have more\nthan one area, now you can, and\n\n145\n00:07:38.580 --> 00:07:40.130\nyou can take advantage of that.\n\n146\n00:07:40.130 --> 00:07:42.320\nSo performance is our main goal.\n\n147\n00:07:42.320 --> 00:07:44.790\nWell, we can take our environment\nthat we've got right now,\n\n148\n00:07:44.790 --> 00:07:46.630\nwe could split it up and\ncreate more than one area.\n\n149\n00:07:46.630 --> 00:07:48.820\nThe thing we have to do is decide where,\nright.\n\n150\n00:07:48.820 --> 00:07:52.549\nSo when I look at this topology,\nwhere do I wanna divide it?\n\n151\n00:07:52.549 --> 00:07:56.393\nNow, I think at the end of the last\nepisode, I said I could take router 6 and\n\n152\n00:07:56.393 --> 00:07:59.459\njust divide it up, right,\nmake Router 6 a border router.\n\n153\n00:07:59.459 --> 00:08:01.551\nAn area border router, an ABR.\n\n154\n00:08:01.551 --> 00:08:05.100\nWell, if I were to do that,\nI could take Router 6 and\n\n155\n00:08:05.100 --> 00:08:08.400\nwe define the area on\na per interface basis.\n\n156\n00:08:08.400 --> 00:08:10.580\nEach interface is in a particular area.\n\n157\n00:08:10.580 --> 00:08:11.920\nSo, if I were to do that,\n\n158\n00:08:11.920 --> 00:08:15.770\nif I were to take Router 6 and\nput, say, this interface.\n\n159\n00:08:15.770 --> 00:08:18.100\nLet me go to my physical topology here.\n\n160\n00:08:18.100 --> 00:08:22.421\nIf I were to put Gi0/0 in one area,\nand leave Gi1/0 and\n\n161\n00:08:22.421 --> 00:08:25.990\nFa2/0, if I left those in area zero,\n\n162\n00:08:25.990 --> 00:08:30.910\nthen this guy would now have interfaces\non area 0, and let's just say area 1.\n\n163\n00:08:30.910 --> 00:08:33.060\nSo now, it is an ABR.\n\n164\n00:08:33.060 --> 00:08:35.810\nBut what have I really achieved?\n\n165\n00:08:35.810 --> 00:08:39.880\nI haven't actually achieved anything,\nbecause any time there's a change in\n\n166\n00:08:39.880 --> 00:08:43.470\narea 0, Router 6 is going to\nhave to calculate for that.\n\n167\n00:08:43.470 --> 00:08:45.435\nAnd anytime there's a change in area 1,\n\n168\n00:08:45.435 --> 00:08:47.750\nRouter 6 is going to take account for\nthat.\n\n169\n00:08:47.750 --> 00:08:50.420\nWell there's no other routers in area 1.\n\n170\n00:08:50.420 --> 00:08:52.252\nAnd so Router 6 is always\ngoing to be calculating,\n\n171\n00:08:52.252 --> 00:08:54.020\nI really have achieved nothing.\n\n172\n00:08:54.020 --> 00:08:56.850\nSo instead,\nlet's move that boundary a little bit.\n\n173\n00:08:56.850 --> 00:09:01.000\nLet's say that we want Routers 4 and\n5 to be border routers.\n\n174\n00:09:01.000 --> 00:09:02.880\nYou can have more that one border.\n\n175\n00:09:02.880 --> 00:09:07.690\nSo that Routers 1, 2 and\n3 are entirely in area 0.\n\n176\n00:09:07.690 --> 00:09:09.160\nThat's how they are now.\n\n177\n00:09:09.160 --> 00:09:15.210\nWe'll take Routers 4 and 5 and make them\nborder between area 0 and another area.\n\n178\n00:09:15.210 --> 00:09:16.760\nLet's just do area 1.\n\n179\n00:09:16.760 --> 00:09:18.410\nThe numbers don't have to be in order.\n\n180\n00:09:18.410 --> 00:09:21.690\nI can do area 99 if we wanted, but\nI'll just do 1 to make it easy.\n\n181\n00:09:21.690 --> 00:09:25.710\nAnd then Router 6 will\nbe entirely in area 1.\n\n182\n00:09:25.710 --> 00:09:28.570\nNow I've achieved something.\n\n183\n00:09:28.570 --> 00:09:34.450\nRouter 6 will only have to update\nits data when area 1 changes.\n\n184\n00:09:34.450 --> 00:09:37.260\nChanges in area 0 will not impact it,\nright?\n\n185\n00:09:37.260 --> 00:09:39.180\nAnd same thing with the other way around.\n\n186\n00:09:39.180 --> 00:09:42.220\nA change in area 1 will not\nimpact Routers 1, 2, and 3.\n\n187\n00:09:42.220 --> 00:09:43.380\nThey'll be isolated from that.\n\n188\n00:09:43.380 --> 00:09:45.800\nThey'll only see changes in area 0.\n\n189\n00:09:45.800 --> 00:09:46.600\nRouters 4 and\n\n190\n00:09:46.600 --> 00:09:51.990\n5 will be the only ones that see changes\nin both areas because they are borders.\n\n191\n00:09:51.990 --> 00:09:55.800\nSo I need to take these guys and\nchange them so\n\n192\n00:09:55.800 --> 00:10:00.020\nthat these networks over here are in\na different area than the ones over here.\n\n193\n00:10:00.020 --> 00:10:03.510\nBut on router 4 and router 5, I'm pretty\nsure I used that big wildcard statement,\n\n194\n00:10:03.510 --> 00:10:06.560\nso we're going to have to adjust that and\ntweak it a little bit, right?\n\n195\n00:10:06.560 --> 00:10:08.240\nWe'll start on Router 4.\n\n196\n00:10:08.240 --> 00:10:13.350\nOn Router 4,\nI want Gi2/0 to stay in area 0.\n\n197\n00:10:13.350 --> 00:10:16.180\nBut I want Gi1/0 to be in a new area.\n\n198\n00:10:16.180 --> 00:10:19.365\nI want to move that over and\nmake it into area 1.\n\n199\n00:10:19.365 --> 00:10:23.925\nNow the moment I start doing this,\nRouter 6 is set for area 0.\n\n200\n00:10:23.925 --> 00:10:27.845\nIf I set Router 4 to area 1, I'm going\nto start getting area mismatches.\n\n201\n00:10:27.845 --> 00:10:31.265\nSo, normally I would shut the interface\ndown while I do this to stop\n\n202\n00:10:31.265 --> 00:10:34.000\nthe mismatches, but\nI'm not going to do that here in the show,\n\n203\n00:10:34.000 --> 00:10:35.345\nbecause I want you guys to see the error.\n\n204\n00:10:35.345 --> 00:10:38.245\nThe routers will actually\ndetect the area mismatch and\n\n205\n00:10:38.245 --> 00:10:40.055\nthey'll break the neighbor relationship.\n\n206\n00:10:40.055 --> 00:10:43.020\nThey won't be able to build a neighbor\nrelationship on it, alright?\n\n207\n00:10:43.020 --> 00:10:45.440\nSo let's jump over to Router 4 and\nwe'll kind of fix that.\n\n208\n00:10:45.440 --> 00:10:49.910\nNow, there's two ways that I can fix it,\nand it all centers around\n\n209\n00:10:49.910 --> 00:10:54.038\nhow much typing I want to do,\nor how I want to assign things.\n\n210\n00:10:54.038 --> 00:10:57.570\nOn Router 4 right now,\nif I do a show running-config, and\n\n211\n00:10:57.570 --> 00:10:59.990\nI'll use the section command\nto just look at ospf.\n\n212\n00:11:01.320 --> 00:11:03.510\nOn Router 4, I can see what I did.\n\n213\n00:11:03.510 --> 00:11:04.360\nRouter ospf 1, right?\n\n214\n00:11:04.360 --> 00:11:06.920\nSo, I turned on process 1.\n\n215\n00:11:06.920 --> 00:11:12.220\nI gave it a router-id of 4, and then I\nused that wildcard network statement.\n\n216\n00:11:12.220 --> 00:11:17.350\nNow, that wildcard network statement is\ngrabbing every interface on my system.\n\n217\n00:11:17.350 --> 00:11:21.090\nAnd when I entered it in, I entered\nit in as network 0.0.0.0 0.0.0.0.\n\n218\n00:11:21.090 --> 00:11:23.990\nAnd see what it did to my wildcard mask?\n\n219\n00:11:23.990 --> 00:11:25.240\nIt changed it to 255.255.255.255.\n\n220\n00:11:25.240 --> 00:11:27.200\nThey both achieve the same goal here.\n\n221\n00:11:27.200 --> 00:11:31.990\nIt's basically meaning any\nnetwork is going to be in area 0.\n\n222\n00:11:31.990 --> 00:11:34.460\nWell, I want to change that.\n\n223\n00:11:34.460 --> 00:11:37.788\nI want to take one of my interfaces,\nGi1/0,\n\n224\n00:11:37.788 --> 00:11:42.680\nthis gigabit interface, and\nI want to move it into area 1.\n\n225\n00:11:42.680 --> 00:11:46.920\nBut right now it's wrapped up\nin this overall statement.\n\n226\n00:11:46.920 --> 00:11:49.880\nOkay, now there's two ways to fix this.\n\n227\n00:11:50.980 --> 00:11:55.110\nWhen it goes to assign an area,\nit works based on specificity, right?\n\n228\n00:11:55.110 --> 00:11:57.770\nThe more specific network statement wins.\n\n229\n00:11:57.770 --> 00:12:00.450\nSo, I can just enter in\nanother network statement and\n\n230\n00:12:00.450 --> 00:12:02.650\nthat would override this one.\n\n231\n00:12:02.650 --> 00:12:05.570\nOr, I can do the right thing,\nwhich is to remove the wildcard and\n\n232\n00:12:05.570 --> 00:12:07.980\nthen put the specific statements in for\neach interface.\n\n233\n00:12:07.980 --> 00:12:10.140\nAnd so,\nI'm going to do it the right way here,\n\n234\n00:12:10.140 --> 00:12:11.875\nI'll show you the easier\nway on the other router.\n\n235\n00:12:11.875 --> 00:12:16.210\nSo, I'm going to jump in\nto router ospf Of 1, and\n\n236\n00:12:16.210 --> 00:12:18.500\nI'm going to get rid of\nmy wildcard statements.\n\n237\n00:12:18.500 --> 00:12:20.950\nSo we're just going to take\nit right out of there.\n\n238\n00:12:20.950 --> 00:12:21.920\nAll right, so there it goes.\n\n239\n00:12:21.920 --> 00:12:23.110\nThat's removed.\n\n240\n00:12:23.110 --> 00:12:23.710\nOkay.\n\n241\n00:12:23.710 --> 00:12:25.900\nAnd I immediately see my\nadjaceny's changed, right?\n\n242\n00:12:25.900 --> 00:12:28.250\nI just dropped all my neighbors.\n\n243\n00:12:28.250 --> 00:12:31.480\nAnd then, I'm going to say network, and\n\n244\n00:12:31.480 --> 00:12:37.050\nI want 192.168.4.4,\nthat's going to be in area 1.\n\n245\n00:12:37.050 --> 00:12:40.700\nAnd 192.168.2.4,\nI want that to be in area 0.\n\n246\n00:12:40.700 --> 00:12:41.873\nSo, let me start with area 0.\n\n247\n00:12:41.873 --> 00:12:45.800\nI'll do 192.168.2.0 with\na 0.0.0.255 wildcard mask, right?\n\n248\n00:12:45.800 --> 00:12:51.740\nBecause that's a class C network.\n\n249\n00:12:51.740 --> 00:12:53.016\nAnd then I'll do area 0.\n\n250\n00:12:53.016 --> 00:12:57.000\nSo I'm going to put that one\nright back into area 0, and\n\n251\n00:12:57.000 --> 00:13:00.110\nI should see an adjacency come back up.\n\n252\n00:13:00.110 --> 00:13:04.709\nBut for the other interface,\nI'm going to do 192.168.4.0,\n\n253\n00:13:04.709 --> 00:13:08.890\nand instead of saying area 0,\nI'm going to say area 1.\n\n254\n00:13:08.890 --> 00:13:14.210\nI'll now have two interfaces in two\ndifferent areas, I just became an ABR.\n\n255\n00:13:14.210 --> 00:13:17.290\nI'm now an Area Border Router.\n\n256\n00:13:17.290 --> 00:13:20.147\nBut as soon as I do it,\nlook at the message that I'm getting.\n\n257\n00:13:20.147 --> 00:13:22.556\nReceived invalid packet: mismatch.\n\n258\n00:13:22.556 --> 00:13:27.690\nArea must be virtual, wait,\nmismatched area ID, from the backbone.\n\n259\n00:13:27.690 --> 00:13:32.600\nArea must be a virtual-link but not found\nfrom 192.168.4.6, which is Router 6.\n\n260\n00:13:32.600 --> 00:13:33.990\nAll right.\n\n261\n00:13:33.990 --> 00:13:37.780\nSo, it's telling me that I'm getting\na connection from the backbone area,\n\n262\n00:13:37.780 --> 00:13:39.440\nwhich is area 0.\n\n263\n00:13:39.440 --> 00:13:42.290\nRouter 6 still thinks that it's in area 0.\n\n264\n00:13:42.290 --> 00:13:45.310\nAnd so\nit's talking to me as if I'm in area 0.\n\n265\n00:13:45.310 --> 00:13:46.400\nBut I'm not.\n\n266\n00:13:46.400 --> 00:13:48.630\nThat interface is in area 1.\n\n267\n00:13:48.630 --> 00:13:51.720\nSo it's a mismatch,\nthe adjacency doesn't form.\n\n268\n00:13:51.720 --> 00:13:56.100\nIf I do a show ip ospf nei,\n\n269\n00:13:57.210 --> 00:14:01.355\nI'll have an adjacency with Router 2,\nno adjacency with Router 6.\n\n270\n00:14:01.355 --> 00:14:04.280\nYour area ID's have to match.\n\n271\n00:14:04.280 --> 00:14:06.200\nYour subnet has to match.\n\n272\n00:14:06.200 --> 00:14:09.270\nYour hello and dead timers have to match.\n\n273\n00:14:09.270 --> 00:14:11.708\nThese are all things that have to match\nin order for an adjacency to come up.\n\n274\n00:14:11.708 --> 00:14:14.450\nIf any one of them is off,\nyou get messages like these.\n\n275\n00:14:14.450 --> 00:14:16.055\nAnd it's going to bug the heck out of me,\n\n276\n00:14:16.055 --> 00:14:18.210\nbecause these come up every ten seconds or\nso.\n\n277\n00:14:18.210 --> 00:14:22.030\nActually these are coming up about every,\nno, it is every ten seconds.\n\n278\n00:14:22.030 --> 00:14:24.010\nYes, see, if you look this one came\nat 26:55 seconds, then 27:05 seconds,\n\n279\n00:14:24.010 --> 00:14:24.640\n27:15 seconds.\n\n280\n00:14:24.640 --> 00:14:26.090\nSo every ten seconds.\n\n281\n00:14:26.090 --> 00:14:31.770\nAnd that's because we send hello\nmessages every ten seconds.\n\n282\n00:14:31.770 --> 00:14:34.910\nOur debt interval is\n30 seconds by default.\n\n283\n00:14:34.910 --> 00:14:38.470\nSo this is just going to churn along,\nand that's right.\n\n284\n00:14:38.470 --> 00:14:39.064\n&gt;&gt; 40.\n&gt;&gt; Ronnie's correcting me.\n\n285\n00:14:39.064 --> 00:14:40.680\nIt is 40, I forgot.\nIt is one more than what you'd think.\n\n286\n00:14:40.680 --> 00:14:42.030\nSo, 40 seconds on that one.\n\n287\n00:14:43.840 --> 00:14:44.555\nAll right.\nSo,\n\n288\n00:14:44.555 --> 00:14:47.000\nthat's going to churn\nalong until I fix it.\n\n289\n00:14:47.000 --> 00:14:49.960\nI need to fix it over on Router 6.\n\n290\n00:14:49.960 --> 00:14:51.670\n&gt;&gt; Now Don, when you were\ntalking about the easier way,\n\n291\n00:14:51.670 --> 00:14:54.600\nI don't know if this is what\nyou were meaning or not.\n\n292\n00:14:54.600 --> 00:14:56.400\nBut if we took the same\nthing that you did,\n\n293\n00:14:56.400 --> 00:14:58.590\nwhich you had the network\nstatement with all the zeros, and\n\n294\n00:14:58.590 --> 00:15:01.390\nthen we just configured it on\nthe interface like we saw on part one.\n\n295\n00:15:01.390 --> 00:15:02.445\nIs that what you're meaning?\n\n296\n00:15:02.445 --> 00:15:03.990\n&gt;&gt; Yes.\nThat's the easy way.\n\n297\n00:15:03.990 --> 00:15:04.550\n&gt;&gt; I wasn't sure.\n\n298\n00:15:04.550 --> 00:15:06.250\n&gt;&gt; I guess there is a third way,\nnow that I think about it.\n\n299\n00:15:06.250 --> 00:15:07.910\nBut that would be the easy way.\n\n300\n00:15:07.910 --> 00:15:09.560\nLet's go see that on Router 5.\n\n301\n00:15:09.560 --> 00:15:10.380\nAll right, so on Router 5,\n\n302\n00:15:10.380 --> 00:15:15.390\nif I look at my topology here,\nRouter 5's got these two interfaces.\n\n303\n00:15:15.390 --> 00:15:20.280\nAnd on Router 5, if we look at\nhow this is configured, oops,\n\n304\n00:15:20.280 --> 00:15:22.990\nI guess I need to enable first,\nor it's going to get mad at me.\n\n305\n00:15:22.990 --> 00:15:24.920\nAnd now I'm doing all\nsorts of crazy stuff.\n\n306\n00:15:24.920 --> 00:15:28.390\nAll right, so on Router 5, if we do\na show running-config, and we look at\n\n307\n00:15:28.390 --> 00:15:33.390\nthe ospf section, I did one of those\nwildcard network statements here too.\n\n308\n00:15:35.390 --> 00:15:38.030\nSo I could override this\na few different ways.\n\n309\n00:15:38.030 --> 00:15:41.390\nI could override it with another\nmore specific network statement,\n\n310\n00:15:41.390 --> 00:15:42.790\nthat would work.\n\n311\n00:15:42.790 --> 00:15:46.240\nOr, I can go and assign it on\nthe interface, like Ronnie was suggesting.\n\n312\n00:15:46.240 --> 00:15:51.750\nIf you look at the interface for Router 5,\nI'm talking about this Fa2/1 interface.\n\n313\n00:15:51.750 --> 00:15:56.773\nSo right now, if I take a look at\nRouter 5 and I do a show ip protocols,\n\n314\n00:15:56.773 --> 00:16:00.776\nit's going to show me that I'm routing for\nnetworks.\n\n315\n00:16:00.776 --> 00:16:04.870\nAnd it's got 0.0.0.0 all\nbeing attached to area 0.\n\n316\n00:16:04.870 --> 00:16:07.851\nAnd routing for\ninterfaces doesn't even show up,\n\n317\n00:16:07.851 --> 00:16:10.570\nit's not even a list in here right.\n\n318\n00:16:10.570 --> 00:16:15.419\nBut if I get into my configuration and\nI get into interface fa2/1\n\n319\n00:16:15.419 --> 00:16:19.759\nwhich I'm pretty sure is\nthe interface that I want and yep.\n\n320\n00:16:19.759 --> 00:16:21.037\nSo 2/1.\n\n321\n00:16:21.037 --> 00:16:25.440\nAnd I do a ip ospf area 1.\n\n322\n00:16:25.440 --> 00:16:26.170\nLike that.\n\n323\n00:16:26.170 --> 00:16:29.917\nThe interface command is\ngoing to override, whoops,\n\n324\n00:16:29.917 --> 00:16:31.750\nI had to do a process ID.\n\n325\n00:16:31.750 --> 00:16:34.252\nIt's ospf process ID 1 area 1.\n\n326\n00:16:34.252 --> 00:16:38.999\nAll right, so that's gonna override\nthe network statement, right?\n\n327\n00:16:38.999 --> 00:16:42.449\nAnd so as soon as that happens there,\nI go dropping my adjaceny and\n\n328\n00:16:42.449 --> 00:16:45.149\nI'm about to start getting\nerrors because again,\n\n329\n00:16:45.149 --> 00:16:48.250\nthe area number doesn't match\nbetween me and router six.\n\n330\n00:16:48.250 --> 00:16:53.000\nAnd if I do a show IP protocols now,\nnow I've got yes.\n\n331\n00:16:53.000 --> 00:16:57.620\nI'm routing for 0.0.0.0 on area 0 but\n\n332\n00:16:57.620 --> 00:17:01.990\nthis interface is explicitly\nconfigured for area 1,\n\n333\n00:17:01.990 --> 00:17:06.060\nso I am now an area border router,\nwhich I can see right here.\n\n334\n00:17:06.060 --> 00:17:11.660\nNumber of areas in this router\nis 2 normal 0 stub 0 nssa, so\n\n335\n00:17:11.660 --> 00:17:17.690\nI've got two areas right there and it says\nright here this is an area border router.\n\n336\n00:17:17.690 --> 00:17:18.580\nI'm an ABR.\n\n337\n00:17:18.580 --> 00:17:19.760\nI know specific command for that.\n\n338\n00:17:19.760 --> 00:17:21.470\nJust as soon as I have two interfaces and\n\n339\n00:17:21.470 --> 00:17:23.120\ntwo different areas,\nI became an ABR, right.\n\n340\n00:17:24.300 --> 00:17:28.530\nNow these two guys here, stub and\nnssa also specifically listed in\n\n341\n00:17:28.530 --> 00:17:31.430\nthe exam objectives not to be covered\nare not in the exam but just so\n\n342\n00:17:31.430 --> 00:17:34.600\nyou know in real life any\narea can be a transit area.\n\n343\n00:17:34.600 --> 00:17:36.490\nTraffic can kind of pass through it.\n\n344\n00:17:36.490 --> 00:17:38.568\nStubs and NSSAs are little bit special.\n\n345\n00:17:38.568 --> 00:17:41.150\nA stub is basically a dead\nend in your network and so\n\n346\n00:17:41.150 --> 00:17:43.131\nyou can have an area that is a dead end.\n\n347\n00:17:43.131 --> 00:17:49.427\nA NSSA is a not so stubby area which\nmeans that as far as OSPF is concerned,\n\n348\n00:17:49.427 --> 00:17:54.085\nit's a dead end but\nthere may be some other protocol.\n\n349\n00:17:54.085 --> 00:17:56.265\nSome other external protocol\nthat lets you enter and\n\n350\n00:17:56.265 --> 00:17:57.955\nexit out of that area a different way.\n\n351\n00:17:57.955 --> 00:17:59.765\nIt's like a back door in the area.\n\n352\n00:17:59.765 --> 00:18:03.615\nAnd so if I've flagged it as a dead end or\nas a dead end with an escape route\n\n353\n00:18:03.615 --> 00:18:07.109\nthen it would be a stub of NSAA, that's\nwhat those are, they're not on this exam.\n\n354\n00:18:08.610 --> 00:18:12.138\nAll right, so the other way I could have\nsolve this was just in more specific\n\n355\n00:18:12.138 --> 00:18:13.538\nnetwork statement, right?\n\n356\n00:18:13.538 --> 00:18:15.098\nInstead of going to\nthe interface override and\n\n357\n00:18:15.098 --> 00:18:17.780\nI could have done a more specific network\nstatement, and that would have done.\n\n358\n00:18:17.780 --> 00:18:18.850\nLet me just show you that real quick,\n\n359\n00:18:18.850 --> 00:18:21.470\neven though I don't technically\nneed to do it anymore.\n\n360\n00:18:21.470 --> 00:18:26.759\nIf I do a show run and\nI'll pull up this section for ospf.\n\n361\n00:18:26.759 --> 00:18:29.367\nWe can take a look at my network\nstatement is, there right now,\n\n362\n00:18:29.367 --> 00:18:31.470\njust that great big wild card.\n\n363\n00:18:31.470 --> 00:18:35.844\nAnd if I do a show ip interface brief,\nthe other network is this guy right here.\n\n364\n00:18:35.844 --> 00:18:38.212\n192.168.5, right?\n\n365\n00:18:38.212 --> 00:18:43.503\nSo I could've jumped into config,\ninto router ospf 1, and\n\n366\n00:18:43.503 --> 00:18:51.517\ndone a network, 192.160.5.0 with\nthe appropriated wild card mask, area 1.\n\n367\n00:18:51.517 --> 00:18:54.248\nAnd I know the error\nmessages keep popping up but\n\n368\n00:18:54.248 --> 00:18:57.700\nit repainted there's the full\ncommand right there.\n\n369\n00:18:57.700 --> 00:18:59.280\nSo I'm being very specific.\n\n370\n00:18:59.280 --> 00:19:02.840\nThe wild card was very broad,\nthis is very specific.\n\n371\n00:19:02.840 --> 00:19:06.060\nThe specific entries will\noverride the broad entries,\n\n372\n00:19:06.060 --> 00:19:11.060\nit always applies it based on who has\nthe most specific wild card mask.\n\n373\n00:19:11.060 --> 00:19:13.990\nSo the wildcard mask is actually\ndetermining the winner.\n\n374\n00:19:13.990 --> 00:19:16.840\nThe wildcard mask with the most 1's in it,\n\n375\n00:19:16.840 --> 00:19:19.690\nthe one that has the highest value\nis gonna be the one that wins.\n\n376\n00:19:19.690 --> 00:19:21.410\nAnd so now that would override it and\n\n377\n00:19:21.410 --> 00:19:23.910\nI could take away my interface\ncommand if I wanted to.\n\n378\n00:19:23.910 --> 00:19:27.428\nBut if I do a show run,\nactually let me do this real quick.\n\n379\n00:19:31.307 --> 00:19:32.885\nOops.\n\n380\n00:19:32.885 --> 00:19:36.415\n[LAUGH] Come on.\n\n381\n00:19:36.415 --> 00:19:37.350\nThere we go.\n\n382\n00:19:37.350 --> 00:19:39.960\nI'm gonna turn off console logging\nreal quick to stop the errors.\n\n383\n00:19:39.960 --> 00:19:42.645\nNot necessarily the greatest idea in\nproduction, cuz you might forget to turn\n\n384\n00:19:42.645 --> 00:19:44.775\nit back on and now you're not\ngetting console logs anymore.\n\n385\n00:19:44.775 --> 00:19:47.005\nBut if I do a #show running-config.\n\n386\n00:19:47.005 --> 00:19:49.565\nAnd i'll pull up the section for\nospf again.\n\n387\n00:19:49.565 --> 00:19:50.255\nWe take a look at it.\n\n388\n00:19:50.255 --> 00:19:52.265\nMy wildcard is still gonna be there.\n\n389\n00:19:52.265 --> 00:19:57.385\nMy great big wildcard that\ncatches every network, this guy.\n\n390\n00:19:57.385 --> 00:19:59.069\nThat one's saying,\neverything should be in area 0.\n\n391\n00:19:59.069 --> 00:20:03.525\nBut, this other network statement is\nmuch more specific and it's saying.\n\n392\n00:20:03.525 --> 00:20:05.630\nAnybody who matches this\nis going to be in area 1.\n\n393\n00:20:05.630 --> 00:20:07.240\nAnd that's going to work out better for\n\n394\n00:20:07.240 --> 00:20:09.520\nme because it's going to\npull off that one interface.\n\n395\n00:20:09.520 --> 00:20:12.290\nBut everybody else will\nstill end up in area zero.\n\n396\n00:20:12.290 --> 00:20:14.410\nSo that's a good way to override that too.\n\n397\n00:20:14.410 --> 00:20:19.760\nAnd if I do a show ip protocols,\nwhat I'm going to see is that\n\n398\n00:20:19.760 --> 00:20:24.150\nI've got routing for networks and\nI've got both the network statements, and\n\n399\n00:20:24.150 --> 00:20:26.360\nI've got explicit configurations\non the interface.\n\n400\n00:20:26.360 --> 00:20:27.941\nI'm kind of doubly gone in and\n\n401\n00:20:27.941 --> 00:20:30.606\ndone to make sure that that\nwas gonna be on area 0.\n\n402\n00:20:30.606 --> 00:20:32.312\nI mean area 1 in this case.\n\n403\n00:20:32.312 --> 00:20:34.170\nAll right so that fixes those guys.\n\n404\n00:20:34.170 --> 00:20:36.890\nThe only other person that's left.\n\n405\n00:20:36.890 --> 00:20:37.460\nI almost did it.\n\n406\n00:20:37.460 --> 00:20:40.900\nSee I almost left this router\nwithout turning on logging again.\n\n407\n00:20:40.900 --> 00:20:42.210\nSo always be careful.\n\n408\n00:20:42.210 --> 00:20:44.860\nIf you ever disable logging,\nyou need to turn it back on again.\n\n409\n00:20:44.860 --> 00:20:48.040\nSo I'm just gonna do logging\nconsole to that back on.\n\n410\n00:20:48.040 --> 00:20:50.110\nAnd then our error messages\nwill stop coming up, or\n\n411\n00:20:50.110 --> 00:20:51.880\nstart coming up every ten seconds.\n\n412\n00:20:51.880 --> 00:20:54.120\nAll right, so let me jump over to router\nsix and we're gonna fix this problem.\n\n413\n00:20:54.120 --> 00:20:58.980\nSo my main issue right now is that router\nsix still thinks it's in area zero and\n\n414\n00:20:58.980 --> 00:21:02.450\nrouters four and router five know that\nthese interfaces are in area one and so\n\n415\n00:21:02.450 --> 00:21:03.800\nthat's causing a mismatch.\n\n416\n00:21:03.800 --> 00:21:06.880\nSo router six should really have\nno neighbors at this point,\n\n417\n00:21:06.880 --> 00:21:08.220\nthat should be all alone.\n\n418\n00:21:08.220 --> 00:21:12.170\nSo let's jump over to router six and\nsee what it is getting.\n\n419\n00:21:12.170 --> 00:21:14.240\nAnd I see that it's neighbors are gone,\n\n420\n00:21:14.240 --> 00:21:18.970\nif i do a show ip opsf neighbor\nit's got no neighbors, it is sad.\n\n421\n00:21:18.970 --> 00:21:21.950\nAnd if I do a show ip protocols,\n\n422\n00:21:24.290 --> 00:21:28.130\nI should see that it is still\nrunning OSPF, there it is.\n\n423\n00:21:28.130 --> 00:21:32.950\nAnd that it thinks that it's in area\n0 because that nice big wild card.\n\n424\n00:21:32.950 --> 00:21:35.570\nAnd so all I need to do is go and\nchange that great big wild card entry,\n\n425\n00:21:35.570 --> 00:21:39.260\nto change it so\nthat it knows it's entirely in area 1.\n\n426\n00:21:39.260 --> 00:21:43.850\nSo, I'm gonna get in configuration,\nI'll get into router ospf 1,\n\n427\n00:21:43.850 --> 00:21:48.900\nand I don't have the issue\nthe command to remove the old entry,\n\n428\n00:21:48.900 --> 00:21:50.310\nbecause I'm gonna directly replace this.\n\n429\n00:21:50.310 --> 00:21:51.447\nAs long as the wildcard and\n\n430\n00:21:51.447 --> 00:21:54.095\nthe subnet match,\nit will replace the entry that's there.\n\n431\n00:21:54.095 --> 00:21:58.200\nSo, for example if I do a show run and\nI pull up the ospf section,\n\n432\n00:21:58.200 --> 00:22:03.330\nwhen I look at that, I'm gonna see\nthe Network statement right there.\n\n433\n00:22:03.330 --> 00:22:06.570\nI'm not gonna remove that, and\nI'm just gonna reissue the command,\n\n434\n00:22:06.570 --> 00:22:10.740\nmaking sure that I match it the same way,\nright?\n\n435\n00:22:10.740 --> 00:22:15.590\nAnd then I can throw in area 1,\nand there we go and so\n\n436\n00:22:15.590 --> 00:22:17.500\nwe've got area 1,\nthat's gonna show up right there.\n\n437\n00:22:17.500 --> 00:22:19.805\nAnd that's gonna over ride\nthe command as it was in.\n\n438\n00:22:19.805 --> 00:22:24.140\nAnd as soon as I do that,\nmy adjacencies start coming up, right?\n\n439\n00:22:24.140 --> 00:22:26.130\nAnd so when I look at that section now,\n\n440\n00:22:26.130 --> 00:22:30.270\nI'll see the old giant wildcard\nthat was covering area 0 is gone.\n\n441\n00:22:30.270 --> 00:22:32.080\nIt's now been replaced by area 1.\n\n442\n00:22:32.080 --> 00:22:35.250\nRouter 6 is entirely in area 1.\n\n443\n00:22:35.250 --> 00:22:41.681\nIf I do a Show IP Protocols, I can see\nthe number of areas in this router is 1.\n\n444\n00:22:41.681 --> 00:22:43.759\nIt does not show us a border router.\n\n445\n00:22:43.759 --> 00:22:45.070\nIt doesn't have an entry for that.\n\n446\n00:22:45.070 --> 00:22:49.380\nAnd it's just one area,\none normal area, and that's it.\n\n447\n00:22:49.380 --> 00:22:54.897\nAnd when I look at my routing\ninformation sources I see routers 1,\n\n448\n00:22:54.897 --> 00:23:00.810\n2, 4 and 5 but, notice that only 4 and\n5 have short timers.\n\n449\n00:23:00.810 --> 00:23:02.250\n9 seconds.\n\n450\n00:23:02.250 --> 00:23:05.520\nRouters 1 and 2, I haven't talked\nto you in ten minutes, 25 minutes.\n\n451\n00:23:05.520 --> 00:23:07.980\nI'm not talking to those guys anymore,\nright?\n\n452\n00:23:07.980 --> 00:23:12.440\nI used to get information from them\nbecause we were all in area zero.\n\n453\n00:23:12.440 --> 00:23:17.580\nBut now I'm in area one and I'm only gonna\nget information from area one routers.\n\n454\n00:23:17.580 --> 00:23:20.460\nSo if I sit here and\nkeep running show IP protocols\n\n455\n00:23:20.460 --> 00:23:24.570\neventually those guys are gonna drift away\nand I won't be connected to them anymore.\n\n456\n00:23:24.570 --> 00:23:29.290\nAnd if I do a show IP OSPF database\nsame thing with what I see in there\n\n457\n00:23:29.290 --> 00:23:31.060\nis that eventually those other\nrouters will drift away.\n\n458\n00:23:31.060 --> 00:23:33.170\nSee how I've got four and five right here.\n\n459\n00:23:33.170 --> 00:23:35.271\nI don't have one, two or three.\n\n460\n00:23:35.271 --> 00:23:39.776\nThey're gone,\nbecause I'm entirely in Area 1.\n\n461\n00:23:39.776 --> 00:23:41.286\nI'm not in Area 0 anymore.\n\n462\n00:23:41.286 --> 00:23:43.940\nSo now we're multi area.\n\n463\n00:23:43.940 --> 00:23:47.020\nWhat does that look like on the network?\n\n464\n00:23:47.020 --> 00:23:50.106\nWell, for routers four and five.\n\n465\n00:23:50.106 --> 00:23:52.721\nFor the routers that are on the border,\nthese guys,\n\n466\n00:23:52.721 --> 00:23:55.228\nit's not really gonna look\nany different at all.\n\n467\n00:23:55.228 --> 00:23:58.048\nRouters four and five still have\ninterfaces in both areas, so\n\n468\n00:23:58.048 --> 00:23:59.687\nthey really function the same way.\n\n469\n00:23:59.687 --> 00:24:04.880\nThey don't notice the difference, but\nwhat they're doing is filtering updates.\n\n470\n00:24:04.880 --> 00:24:06.860\nUpdates that come from one area and\ncrawls into the other,\n\n471\n00:24:06.860 --> 00:24:08.560\nand they're blocking those.\n\n472\n00:24:08.560 --> 00:24:12.190\nAnd they'll advertise a network, they'll\nadvertise a route to the other side.\n\n473\n00:24:12.190 --> 00:24:14.820\nBut, they're not forwarding\nall the individual updates,\n\n474\n00:24:14.820 --> 00:24:16.390\nall the little status changes and things.\n\n475\n00:24:16.390 --> 00:24:16.960\nThey're just saying, hey,\n\n476\n00:24:16.960 --> 00:24:18.760\nthese are the networks that are available,\nand that's it.\n\n477\n00:24:18.760 --> 00:24:21.680\nSo, we don't get all those individual\nupdates from the other side.\n\n478\n00:24:22.730 --> 00:24:24.560\nAnd the same thing with\nthe reverse direction.\n\n479\n00:24:24.560 --> 00:24:29.080\nSo, routers 1, 2, and\n3 should no longer see router 6.\n\n480\n00:24:29.080 --> 00:24:32.100\nAnd router 6, we already know,\ndoesn't see routers 1, 2, and 3.\n\n481\n00:24:32.100 --> 00:24:35.670\nBut their routes are still there,\nlet me show you the routes,\n\n482\n00:24:35.670 --> 00:24:36.750\nwe didn't look at that.\n\n483\n00:24:36.750 --> 00:24:40.021\nSo, on router 6, if I do a show ip route,\n\n484\n00:24:40.021 --> 00:24:45.920\nIt will still have 192.168.1.0,\n192.168.0.0.\n\n485\n00:24:45.920 --> 00:24:49.658\nThey still show up, but\nlook how they show up.\n\n486\n00:24:49.658 --> 00:24:53.380\nNot just an O, but an O IA.\n\n487\n00:24:53.380 --> 00:24:56.995\nIf you look at the legend up here,\nyou can find O IA.\n\n488\n00:24:56.995 --> 00:25:03.850\nAnd it's OSPF Inter area, the regular O\nis actually what's called an Intra area,\n\n489\n00:25:03.850 --> 00:25:08.980\nwe're luring it from other routers in the\nsame area as us but, O IA is inter area.\n\n490\n00:25:08.980 --> 00:25:11.700\nIt's a route that came from another area.\n\n491\n00:25:11.700 --> 00:25:16.370\nI can't see the router where it came from,\nI can only see the border router, right,\n\n492\n00:25:16.370 --> 00:25:20.470\nand any other routers in my area but\nI got a route from that, that's O IA.\n\n493\n00:25:20.470 --> 00:25:23.220\nAll right, there are other types\nof routes that can show up.\n\n494\n00:25:23.220 --> 00:25:27.170\nLike, right beneath it here,\nyou'll see these external O E1, O E2.\n\n495\n00:25:27.170 --> 00:25:30.020\nThose routes are routes that\ncome from some other process.\n\n496\n00:25:30.020 --> 00:25:32.400\nMaybe they come from EIGRP or RIP.\n\n497\n00:25:32.400 --> 00:25:36.000\nMaybe they come from a static route or\na directly connected interface or\n\n498\n00:25:36.000 --> 00:25:36.990\nsomething like that.\n\n499\n00:25:36.990 --> 00:25:40.921\nThey come from outside of our autonomous\nsystem, those would be O E1s and O E2.\n\n500\n00:25:40.921 --> 00:25:42.672\nThey're not on the exam, but\n\n501\n00:25:42.672 --> 00:25:45.831\nI did whip one up before\nthe show just to show you guys.\n\n502\n00:25:45.831 --> 00:25:49.071\nLet me bring an interface up real quick.\n\n503\n00:25:50.870 --> 00:25:53.630\nAll right, so that'll make one\nappear here in just a minute.\n\n504\n00:25:53.630 --> 00:25:57.260\nSo, in a moment or two, and OSPF is\npretty fast so it won't take very long.\n\n505\n00:25:57.260 --> 00:25:59.510\nI'll see one of those\nexternal routes up here.\n\n506\n00:25:59.510 --> 00:26:02.084\nBut an external route comes\nfrom way outside, right.\n\n507\n00:26:02.084 --> 00:26:04.790\nRight, an O IA just comes\nfrom another area, but\n\n508\n00:26:04.790 --> 00:26:06.940\nat least it's in our autonomous system.\n\n509\n00:26:06.940 --> 00:26:10.730\nAn O E1 or an O E2,\nthose come from outside of our system.\n\n510\n00:26:10.730 --> 00:26:13.590\nIt's usually an internet\nservice provider or\n\n511\n00:26:13.590 --> 00:26:16.810\nanother company that we do business with,\nmaybe we have a dedicated BPM with them,\n\n512\n00:26:16.810 --> 00:26:19.014\nsomething like that,\nthat's where those connections come in.\n\n513\n00:26:20.155 --> 00:26:23.203\nSo if I do a show ip route now,\nI think I've stalled long enough.\n\n514\n00:26:23.203 --> 00:26:24.435\nActually it was right there at the top.\n\n515\n00:26:24.435 --> 00:26:27.875\nThere's an O E2 right there, okay.\n\n516\n00:26:27.875 --> 00:26:32.645\nAnd see how I'm getting two routes for\nall the O E2s and the O IAs, right?\n\n517\n00:26:32.645 --> 00:26:34.345\nWhy am I getting two routes?\n\n518\n00:26:34.345 --> 00:26:35.825\nBecause there's two exits for my area.\n\n519\n00:26:35.825 --> 00:26:38.155\nArea 1 has two connections\nto area 2 right now.\n\n520\n00:26:38.155 --> 00:26:43.224\nIf I go back to my topology, router\n6 has equal cost hops to router 4 and\n\n521\n00:26:43.224 --> 00:26:46.531\n5, right,\nto be able to jump over to area 0.\n\n522\n00:26:46.531 --> 00:26:50.339\nAnd I know what you might be thinking and\nI think Roni's got this one,\n\n523\n00:26:50.339 --> 00:26:52.640\nI say they're equal cost.\n\n524\n00:26:52.640 --> 00:26:54.910\nThis is a gigabit link,\nthis is a fast ethernet link.\n\n525\n00:26:54.910 --> 00:26:56.392\nShouldn't they be different?\n\n526\n00:26:56.392 --> 00:27:00.220\nShouldn't we prefer the gig\nlink over the fast ethernet?\n\n527\n00:27:00.220 --> 00:27:03.200\nWell, remember how the shortest\npath first algorithm works and\n\n528\n00:27:03.200 --> 00:27:06.090\nremember how the cost\nmetric is calculated.\n\n529\n00:27:06.090 --> 00:27:10.210\nIt's the reference band with 100 megabit\ndivided by the actual bandwidth.\n\n530\n00:27:10.210 --> 00:27:14.953\nAnd when we divide a gigabit through\nthat little system, you end up with 0.1,\n\n531\n00:27:14.953 --> 00:27:17.971\nwith ethernet or\na fast ethernet you end up with 1.\n\n532\n00:27:17.971 --> 00:27:21.550\nWhile the 0.1 gets rounded up to one and\nso they're treated as equal.\n\n533\n00:27:21.550 --> 00:27:23.550\nSo, OSPF is treating these as equal.\n\n534\n00:27:23.550 --> 00:27:26.580\nAnd that might seem bad, right, because\nthey both make it to the routing table and\n\n535\n00:27:26.580 --> 00:27:29.840\nif it was just OSPF doing\nthe work it would be bad.\n\n536\n00:27:29.840 --> 00:27:35.820\nBut the reality is,\nOSPF doesn't actually move your traffic.\n\n537\n00:27:35.820 --> 00:27:38.320\nOSPF just controls what makes\nit into the routing table.\n\n538\n00:27:38.320 --> 00:27:41.400\nAnd it's up to your router to deal\nwith what's in the routing table.\n\n539\n00:27:41.400 --> 00:27:44.890\nSo OSPF is putting both of these\nroutes in the routing table\n\n540\n00:27:44.890 --> 00:27:47.640\nin what is not exactly\nthe right thing to do.\n\n541\n00:27:47.640 --> 00:27:49.860\nRight, it's not necessarily perfect.\n\n542\n00:27:49.860 --> 00:27:52.995\nWell if I jump over to router 6,\nI guess I'm already there, right, so\n\n543\n00:27:52.995 --> 00:27:55.870\nI see these two routes and\nthey're both in there.\n\n544\n00:27:55.870 --> 00:27:59.760\nBut the router is not\ngonna treat them equally.\n\n545\n00:27:59.760 --> 00:28:02.550\nThe router is running what's called\nCisco Express Forwarding, and\n\n546\n00:28:02.550 --> 00:28:06.000\nCisco Express Forwarding is what\nactually does move your packets from one\n\n547\n00:28:06.000 --> 00:28:06.880\ninterface to another.\n\n548\n00:28:06.880 --> 00:28:09.290\nIt's the one that's actually\ngonna send this data along.\n\n549\n00:28:09.290 --> 00:28:12.620\nAnd, so, it's gonna look at it and say,\nwait a minute, this is a gig adapter,\n\n550\n00:28:12.620 --> 00:28:13.650\nthat's an under megabit.\n\n551\n00:28:13.650 --> 00:28:16.597\nI'm gonna send 90% of the data\non the gig adapter and\n\n552\n00:28:16.597 --> 00:28:20.585\n10% of the traffic on the 100 meg\nadapter and it will balance it out.\n\n553\n00:28:20.585 --> 00:28:24.935\nAnd actually the math is wrong on that,\ncuz it will actually be like 92% and 8% or\n\n554\n00:28:24.935 --> 00:28:28.816\nsomething, cuz it's got to balance\nout across 11 chunks of something.\n\n555\n00:28:28.816 --> 00:28:31.290\nBut it balances it out, it sorts that out.\n\n556\n00:28:31.290 --> 00:28:33.040\nNow on the exam we don't\nhave to worry about CEF.\n\n557\n00:28:33.040 --> 00:28:36.700\nBut in real life land just know that\nit is actually smarter than this,\n\n558\n00:28:36.700 --> 00:28:38.700\nthat it does take that into account.\n\n559\n00:28:38.700 --> 00:28:40.712\nIt's just OSPF isn't smarter than that.\n\n560\n00:28:40.712 --> 00:28:43.739\nSo OSPF does put them in and balance them,\neven though they're not equal length.\n\n561\n00:28:44.770 --> 00:28:49.920\nSo, I got those right there, the cool\npart is if one link fails, I'm okay.\n\n562\n00:28:49.920 --> 00:28:55.399\nIf one of my routers fails,\nlike if router 4 would fail, well,\n\n563\n00:28:55.399 --> 00:29:01.190\nrouter 4 is one of my paths to to\nget to area, from area 1 to area 0.\n\n564\n00:29:01.190 --> 00:29:03.678\nIf it fails, all the traffic just\njumps over to the other link and\n\n565\n00:29:03.678 --> 00:29:05.460\nthat's where redundancy comes in.\n\n566\n00:29:05.460 --> 00:29:09.150\nSo let me take router 4 and I'm going\nto shut the interfaces down, right and\n\n567\n00:29:09.150 --> 00:29:11.020\nthat'll simulate a failure.\n\n568\n00:29:11.020 --> 00:29:14.220\nSo on router 4, if I jump into\nconfiguration, I'll get into gi1/0 and\n\n569\n00:29:14.220 --> 00:29:20.120\ndo a shutdown, and then I'll get\ninto gi2/0 and do a shutdown.\n\n570\n00:29:20.120 --> 00:29:23.160\nSo, router 4 It's\neffectively gone offline.\n\n571\n00:29:23.160 --> 00:29:26.320\nAs soon as that happens,\nthere's a recalculation.\n\n572\n00:29:26.320 --> 00:29:28.030\nNow, router 4's on the border.\n\n573\n00:29:28.030 --> 00:29:29.621\nIt's on the border of area 0 and\n\n574\n00:29:29.621 --> 00:29:32.210\narea 1, so both sides are going\nto do a recalculation.\n\n575\n00:29:32.210 --> 00:29:34.160\nWhen a border router fails,\nit hits both areas.\n\n576\n00:29:34.160 --> 00:29:36.364\nIf this has happened just\ninside of a single area,\n\n577\n00:29:36.364 --> 00:29:40.060\nit would've been kind of held down,\nbut here it's kind of spanned out.\n\n578\n00:29:40.060 --> 00:29:41.600\nNow when I jump over to router 6, and\n\n579\n00:29:41.600 --> 00:29:46.530\nI do a show ip route,\nit's already taking it into account.\n\n580\n00:29:46.530 --> 00:29:48.510\nAnd actually,\nI guess it hasn't taken into account yet.\n\n581\n00:29:48.510 --> 00:29:49.750\nIt's working on it, though.\n\n582\n00:29:49.750 --> 00:29:54.280\nSo, I can see where 192.168.4.4\nis still showing up as a gateway.\n\n583\n00:29:54.280 --> 00:29:58.570\nIf I give that a moment, there's\nthe dead timer expiring right there.\n\n584\n00:29:58.570 --> 00:30:01.450\nAnd I'll see those routes come\nout of the routing table.\n\n585\n00:30:01.450 --> 00:30:05.580\nAnd it'll start sending my traffic just\nover to router 5 to balance that out,\n\n586\n00:30:05.580 --> 00:30:07.580\nso it's just got to sort that out.\n\n587\n00:30:08.640 --> 00:30:11.840\nIf this router were to actually just\ndisappear, which is kind of what I\n\n588\n00:30:11.840 --> 00:30:15.280\njust did, we have to wait and detect and\nmake sure it's actually gone.\n\n589\n00:30:15.280 --> 00:30:17.040\nSo you have a hello and a dead timer.\n\n590\n00:30:17.040 --> 00:30:20.450\nThe hello is we sent a message every\n10 seconds, we expect a reply.\n\n591\n00:30:20.450 --> 00:30:22.910\nWhen four of them are missed,\n\n592\n00:30:22.910 --> 00:30:26.510\nthe 40 seconds have gone by, then we know\nthat partner is not coming back up or\n\n593\n00:30:26.510 --> 00:30:28.750\nthey're just missing and we kick\nthe routes out of the routing table.\n\n594\n00:30:28.750 --> 00:30:30.600\nSo we have to just wait\nuntil those age out.\n\n595\n00:30:30.600 --> 00:30:32.730\nIt shouldn't take very long.\n\n596\n00:30:32.730 --> 00:30:34.740\nAnd there we go, and now they're gone.\n\n597\n00:30:34.740 --> 00:30:37.704\nAnd now I see I still have routes,\nI have all these O IA routes,\n\n598\n00:30:37.704 --> 00:30:39.865\nthey're just going through router 5.\n\n599\n00:30:39.865 --> 00:30:42.320\nRght, that's the side\nthat I'm passing through\n\n600\n00:30:42.320 --> 00:30:44.360\nversus having two routes to get there.\n\n601\n00:30:44.360 --> 00:30:46.680\nSo I've got redundancy,\nI've got availability.\n\n602\n00:30:46.680 --> 00:30:50.140\nIf one link fails, another takes over and\nI don't have to worry about loops,\n\n603\n00:30:50.140 --> 00:30:53.880\nbecause technically there was a loop here,\nright?\n\n604\n00:30:53.880 --> 00:30:57.134\nI could rattle around like that over and\nover and over again, but\n\n605\n00:30:57.134 --> 00:31:00.095\nOSPF protects me from that and\nI don't have that problem.\n\n606\n00:31:00.095 --> 00:31:04.890\nAll right, so what we've got here is multi\narea OSPF, we've divide our network up.\n\n607\n00:31:04.890 --> 00:31:08.430\nAnd you can divide it into a number of\nareas and build as complex a hierarchy as\n\n608\n00:31:08.430 --> 00:31:14.520\nyou want, just remember, the main goal\nof multi-area OSPF is performance.\n\n609\n00:31:14.520 --> 00:31:18.260\nSo, if your network's running just\nfine performance-wise, all multi-area\n\n610\n00:31:18.260 --> 00:31:21.270\nis going to do for you is make the network\nmore complex, make it harder to support.\n\n611\n00:31:21.270 --> 00:31:26.140\nSo, always do single area OSPF if you can,\nand only when you've\n\n612\n00:31:26.140 --> 00:31:30.400\ngrown to hundreds or thousands of routers\ndo you worry about going multi area.\n\n613\n00:31:30.400 --> 00:31:33.011\nBecause that's when performance\nbecomes and issue and\n\n614\n00:31:33.011 --> 00:31:36.188\nthat's really the only reason we'd\nconsider it here on this exam.\n\n615\n00:31:36.188 --> 00:31:38.434\nAt the CCMP level,\nthere's route summarization,\n\n616\n00:31:38.434 --> 00:31:41.444\nthat's a little bit different and\nwe might go multi area for that, but\n\n617\n00:31:41.444 --> 00:31:43.550\nat this level,\nit's really just performance.\n\n618\n00:31:44.560 --> 00:31:47.924\n&gt;&gt; Now Don, there's a couple of different\nthings that normally happen when I set up\n\n619\n00:31:47.924 --> 00:31:48.873\nOSPF that I get wrong.\n\n620\n00:31:48.873 --> 00:31:50.934\nAnd usually it's right\nthere at the adjacency.\n\n621\n00:31:50.934 --> 00:31:55.548\nAre there any types of debugs that we have\nto worry about, or should know as well?\n\n622\n00:31:55.548 --> 00:31:56.085\n&gt;&gt; There's a few.\n\n623\n00:31:56.085 --> 00:31:59.984\nIf you ever have to troubleshoot OSPF, a\nlot of what happens is in the background,\n\n624\n00:31:59.984 --> 00:32:02.956\nand so, we don't see it happens very,\nvery quickly.\n\n625\n00:32:02.956 --> 00:32:07.390\nIf you want to get in and really start to\nsee what's going on behind the scenes,\n\n626\n00:32:07.390 --> 00:32:09.110\nthere's a few debugs you can do.\n\n627\n00:32:09.110 --> 00:32:11.240\nLet me jump over to router,\nand am I still on Router 6?\n\n628\n00:32:11.240 --> 00:32:13.010\nYeah.\nSo I'll take Router 6,\n\n629\n00:32:13.010 --> 00:32:16.615\nand let me just cut it down, so\nit's only running on one interface,\n\n630\n00:32:16.615 --> 00:32:20.370\notherwise, I'm going to get just\na lot of messages that come across.\n\n631\n00:32:20.370 --> 00:32:24.460\nI'll shut down my interface to Router 4,\nso I don't get a bunch of extra junk here.\n\n632\n00:32:24.460 --> 00:32:25.750\nSo I'll take that one down.\n\n633\n00:32:25.750 --> 00:32:26.430\nAll right.\n\n634\n00:32:26.430 --> 00:32:30.510\nSo on Router 6, the commands I've\nbeen using so far are easy ones.\n\n635\n00:32:30.510 --> 00:32:31.990\nShow IP route.\n\n636\n00:32:31.990 --> 00:32:33.930\nIf you've got routes in the routing table,\nthen it's working.\n\n637\n00:32:33.930 --> 00:32:34.930\nThat's an easy way to tell.\n\n638\n00:32:34.930 --> 00:32:36.620\nShow IP protocols.\n\n639\n00:32:36.620 --> 00:32:37.620\nThat's another one, right?\n\n640\n00:32:37.620 --> 00:32:41.120\nSo you can jump in and see whether\nOSPF is running, and what it's doing.\n\n641\n00:32:41.120 --> 00:32:46.690\nShow running-config and pipe that\ninto the section command for ospf.\n\n642\n00:32:46.690 --> 00:32:49.780\nThe only negative about this command\nis that you don't see the interface\n\n643\n00:32:49.780 --> 00:32:50.790\nconfigurations.\n\n644\n00:32:50.790 --> 00:32:54.380\nIf there's something on the interface as\nyou miss it, so always be aware of that,\n\n645\n00:32:54.380 --> 00:32:56.850\nthat you can override\nthings on the interface.\n\n646\n00:32:56.850 --> 00:32:59.079\nBut if I'm still not seeing\nexactly what I want,\n\n647\n00:33:00.130 --> 00:33:02.500\nI guess I left off show ip ospf neighbor,\nright?\n\n648\n00:33:02.500 --> 00:33:05.610\nThat's the other one,\nthat's a good one right there.\n\n649\n00:33:05.610 --> 00:33:10.240\nOkay, if I'm not seeing what I want to\nsee though, or, for example, my state,\n\n650\n00:33:10.240 --> 00:33:13.990\nremember how fast the state moved in the\nlast episode that I couldn't catch it in\n\n651\n00:33:13.990 --> 00:33:17.510\na nit, in two-way, in x-start,\nthose all just kind of went by so\n\n652\n00:33:17.510 --> 00:33:19.120\nfast that I get to see them?\n\n653\n00:33:19.120 --> 00:33:20.460\nAnd I really want to see that.\n\n654\n00:33:20.460 --> 00:33:22.430\nThere's a few debug commands you can do.\n\n655\n00:33:22.430 --> 00:33:25.030\nIf you do debug IP OSPF and\n\n656\n00:33:25.030 --> 00:33:28.460\nthen a question mark, you'll see a list of\nthe different things that you can debug.\n\n657\n00:33:28.460 --> 00:33:33.780\nAnd there's two that I'll typically use,\nthere's debug IPOSF packet,\n\n658\n00:33:33.780 --> 00:33:37.190\nwhich lets you see every\nOSPF packet coming through.\n\n659\n00:33:37.190 --> 00:33:40.470\nIf you got area mismatches or\nwhatever, then you're never going to\n\n660\n00:33:40.470 --> 00:33:45.170\nbuild an adjacency, and so, seeing the raw\npackets is a helpful way to debug that,\n\n661\n00:33:45.170 --> 00:33:48.080\nor to see whether you're even\nreceiving packets at all.\n\n662\n00:33:48.080 --> 00:33:50.950\nMaybe the neighbor's not\nactually sending you data.\n\n663\n00:33:50.950 --> 00:33:52.530\nYou'll see it right\nhere with that command.\n\n664\n00:33:52.530 --> 00:33:55.340\nJust be aware it does generate\na lot of screen output.\n\n665\n00:33:55.340 --> 00:34:00.780\nThe other command is debug IPOSPFADJ for\nlooking at the adjacencies.\n\n666\n00:34:00.780 --> 00:34:04.190\nIf I'm having a problem building up\nan adjacency, this will show me why.\n\n667\n00:34:04.190 --> 00:34:05.640\nNow, if I'm not even\nreceiving the packets,\n\n668\n00:34:05.640 --> 00:34:07.520\nthen this command is not\ngoing to show me anything.\n\n669\n00:34:07.520 --> 00:34:10.290\nBut if I'm having a problem with\nthe adjacency, this will show me why.\n\n670\n00:34:10.290 --> 00:34:13.330\nSo if we run those, debug ip ospf adj,\n\n671\n00:34:13.330 --> 00:34:16.640\nnow I'll start to see any\nadjacency that I build up.\n\n672\n00:34:16.640 --> 00:34:19.710\nLet me do a clear IPOSPF process.\n\n673\n00:34:19.710 --> 00:34:20.870\nI'm going to reboot OSPF.\n\n674\n00:34:20.870 --> 00:34:24.660\nAnd when I do that,\nnormally I would just see one message for\n\n675\n00:34:24.660 --> 00:34:26.230\nthe adjacency coming up.\n\n676\n00:34:26.230 --> 00:34:29.850\nBut here,\nI get a bunch of messages, right?\n\n677\n00:34:29.850 --> 00:34:32.700\nAnd this is going to be\nthe adjacency's building,\n\n678\n00:34:32.700 --> 00:34:35.110\nor I should only have\none adjacency come up.\n\n679\n00:34:35.110 --> 00:34:37.140\nAnd so, look, let's run through\nwhat's going on here, right?\n\n680\n00:34:37.140 --> 00:34:40.330\nAs soon as that interface comes up,\nwhat happens?\n\n681\n00:34:40.330 --> 00:34:42.140\nI get a neighbor change event, right?\n\n682\n00:34:42.140 --> 00:34:47.030\nWhich triggers a DR/BDR election,\nwe've got to elect a designated router, so\n\n683\n00:34:47.030 --> 00:34:50.140\nwe see that election occur,\nand it looks like I won.\n\n684\n00:34:50.140 --> 00:34:53.470\nI became the designated router on Fa2/0.\n\n685\n00:34:53.470 --> 00:34:56.520\nNow, if I have other interfaces, there\nmight be elections going on on those too,\n\n686\n00:34:56.520 --> 00:34:57.640\nbut on this one, I won.\n\n687\n00:34:58.650 --> 00:35:03.490\nAnd then as we look down a little further,\nwe can see\n\n688\n00:35:03.490 --> 00:35:07.030\nthe election is still sorting itself out,\nso it's flushing that interface.\n\n689\n00:35:07.030 --> 00:35:12.305\nAnd what actually happened is I came\nup and assumed that I was the DR,\n\n690\n00:35:12.305 --> 00:35:16.430\nand then Router 5 stepped in and\nsaid hang on a minute, buddy, I'm the DR.\n\n691\n00:35:16.430 --> 00:35:17.550\nAnd so, it bumped me.\n\n692\n00:35:17.550 --> 00:35:18.710\nAnd so, I can see that right here.\n\n693\n00:35:18.710 --> 00:35:22.050\nRouter 5 actually bumped us, and\nso we became the BDR on that link.\n\n694\n00:35:22.050 --> 00:35:22.750\nSo we got beat.\n\n695\n00:35:23.880 --> 00:35:26.940\nAnd then after that, we can see\nit's starting to go through, and\n\n696\n00:35:26.940 --> 00:35:29.610\nwe should see the exchange.\n\n697\n00:35:29.610 --> 00:35:30.950\nWhere does the exchange start?\n\n698\n00:35:30.950 --> 00:35:34.780\nI must have missed it where we see\nthe exchange start, but we can see\n\n699\n00:35:34.780 --> 00:35:38.880\nthe exchange is done right here, that we\ndid a full exchange with number five.\n\n700\n00:35:38.880 --> 00:35:40.750\nSo I didn't actually see it start.\n\n701\n00:35:40.750 --> 00:35:43.660\nAnd then after that, we can see it's\ncleaning up our database from the exchange\n\n702\n00:35:43.660 --> 00:35:46.360\nof routes, making sure everything is fine,\nand then moving on.\n\n703\n00:35:46.360 --> 00:35:48.820\nAnd for whatever reason,\nit triggered another.\n\n704\n00:35:48.820 --> 00:35:51.570\nIt's another interface for\ndoing the other DR election.\n\n705\n00:35:51.570 --> 00:35:53.480\nSo that's going on there, right?\n\n706\n00:35:53.480 --> 00:35:58.560\nNow, let me turn that off and this time,\nI'm going to do debug ip OSPF packet.\n\n707\n00:35:58.560 --> 00:36:02.320\nAnd this one is just going\nto show us the raw packets.\n\n708\n00:36:02.320 --> 00:36:06.840\nAnd so now,\nif I do a clear ip OSPF process\n\n709\n00:36:08.680 --> 00:36:13.400\nand reboot it, we're going to see\nall those communications going on.\n\n710\n00:36:13.400 --> 00:36:16.960\nThe first thing I'm going to see is\nthat I'm receiving OSPF data, and\n\n711\n00:36:16.960 --> 00:36:18.090\nit's version two.\n\n712\n00:36:19.190 --> 00:36:21.740\nThis is OSPF version two,\nwhich means I'm doing IPV four.\n\n713\n00:36:21.740 --> 00:36:25.340\nThere's IPV six also, which is OSPF\nversion three, we'll see that one later.\n\n714\n00:36:25.340 --> 00:36:28.740\nAnd then I can see the router ID\nthat is communicating with me.\n\n715\n00:36:28.740 --> 00:36:32.060\nAnd I can see whether\nit's got authentication,\n\n716\n00:36:32.060 --> 00:36:34.100\nand what interface it is coming in on.\n\n717\n00:36:34.100 --> 00:36:37.200\nSo, I can see those\ncommunications coming through.\n\n718\n00:36:37.200 --> 00:36:42.020\nAnd then as the communication goes on, I\njust see exchanging back and forth, that I\n\n719\n00:36:42.020 --> 00:36:47.260\nam sending and receiving packets, and\nthe area ID is right there in the packet.\n\n720\n00:36:47.260 --> 00:36:49.820\nI can see if there's an area\nID mismatch or something.\n\n721\n00:36:49.820 --> 00:36:53.930\nI'll know that, and I can look to see\nwhether I've got an actual problem there.\n\n722\n00:36:53.930 --> 00:36:56.990\nSo, this is also very helpful when\nit comes to trouble shooting.\n\n723\n00:36:56.990 --> 00:36:58.980\nAll right, there's a handful\nof other debug commands, but\n\n724\n00:36:58.980 --> 00:37:00.180\nI wouldn't worry about them too much.\n\n725\n00:37:00.180 --> 00:37:02.510\nIt's unlikely they'll show up on the exam,\nbut in real life,\n\n726\n00:37:02.510 --> 00:37:04.660\nthey are pretty handy to have.\n\n727\n00:37:04.660 --> 00:37:06.390\n&gt;&gt; All right Don, well,\nthank you again for\n\n728\n00:37:06.390 --> 00:37:09.940\nhelping us to kind of take\na look at multi area OSPF.\n\n729\n00:37:09.940 --> 00:37:14.360\nRemember, the goal behind this\nis performance, if we need it.\n\n730\n00:37:14.360 --> 00:37:18.674\nIf you can,\nI guess exhortation by Don here.\n\n731\n00:37:18.674 --> 00:37:19.580\n&gt;&gt; [LAUGH]\n&gt;&gt; So,\n\n732\n00:37:19.580 --> 00:37:22.450\ndon't run it unless you really have to,\nbut if you have to,\n\n733\n00:37:22.450 --> 00:37:25.640\nyou really got a lot of routers, and\nso it really helps us in performance.\n\n734\n00:37:25.640 --> 00:37:27.440\nTake a look,\nespecially at those show commands.\n\n735\n00:37:27.440 --> 00:37:30.300\nVery important for\nus as we get ready for the exam.\n\n736\n00:37:30.300 --> 00:37:34.530\nDon't just depend on show running dash\nconfig, it will help you sometimes, but\n\n737\n00:37:34.530 --> 00:37:37.080\nnot every time, especially when\nyou need to see the details.\n\n738\n00:37:37.080 --> 00:37:39.610\nGreat place for\nus to also end this episode then.\n\n739\n00:37:39.610 --> 00:37:43.180\nSigning off for ITProTV,\nI've been your host, Ronnie Wong.\n\n740\n00:37:43.180 --> 00:37:44.210\n&gt;&gt; And I'm Don Pezet.\n\n741\n00:37:44.210 --> 00:37:49.103\nStay tuned right here for\nmore CSCO CC and A routing and switching.\n\n742\n00:37:49.103 --> 00:37:57.440\n[MUSIC]\n\n",
          "vimeoId": "180173711"
        },
        {
          "description": "In this episode, Ronnie and Don introduce us to OSPFv3, the IPv6 version of OSPF.  They discuss some of the concerns that most ccna candidates will have and show how to overcome them.  They begin with configuring the router to support IPv6 routing by using the “IPv6 Unicast-Routing” command.  They also explain and show how to configure the router-id and also that ospfv3 is configured on a per interface basis rather than a subnet basis as well.",
          "length": "1828",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/cisco-ccna200105/cisco-ccna200105-2-5-implementing_ospfv3-082316-1.jpg",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/cisco-ccna200105/cisco-ccna200105-2-5-implementing_ospfv3-082316-1-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/cisco-ccna200105/cisco-ccna200105-2-5-implementing_ospfv3-082316-1-sm.jpg",
          "title": "Implementing OSPFv3",
          "transcript": "WEBVTT\n\n1\n00:00:00.000 --> 00:00:10.000\n[MUSIC]\n\n2\n00:00:11.804 --> 00:00:14.641\nWelcome to another great\nepisode right here on ITPROTV.\n\n3\n00:00:14.641 --> 00:00:18.880\nI'm your host Ronnie Wong and\nyou're watching the Cisco CCNA routing and\n\n4\n00:00:18.880 --> 00:00:24.680\nswitching show, where we're about to take\na look in to the mystical realm of IPv6\n\n5\n00:00:24.680 --> 00:00:26.640\nand OSPF combined together.\n\n6\n00:00:26.640 --> 00:00:29.840\nThat's right,\nthe clash of the titans here and\n\n7\n00:00:29.840 --> 00:00:33.040\nwho better to help us understand that\nbetter than Mr. Don Pezzett himself.\n\n8\n00:00:33.040 --> 00:00:37.010\nDon, what in the world is it about\nIPv6 that scares us to death and\n\n9\n00:00:37.010 --> 00:00:38.640\nthen combining it with OSPF?\n\n10\n00:00:38.640 --> 00:00:39.370\n&gt;&gt; It's funny,\n\n11\n00:00:39.370 --> 00:00:43.820\nmost people get intimidated by IPv6\njust because of the long address, right?\n\n12\n00:00:43.820 --> 00:00:46.430\nAnd I'll show you guys some tricks to\nactually make it where it's not so\n\n13\n00:00:46.430 --> 00:00:48.940\nbad to use IPv6,\neven with the longer addresses.\n\n14\n00:00:48.940 --> 00:00:50.660\nThey don't have to be painful.\n\n15\n00:00:50.660 --> 00:00:52.120\nBut the cool thing,\n\n16\n00:00:52.120 --> 00:00:56.130\nor I guess the intimidating part is\nthat IPv6 is just a new territory.\n\n17\n00:00:56.130 --> 00:00:56.930\nIt's a new realm.\n\n18\n00:00:56.930 --> 00:00:59.390\nIt's having to learn some all\nnew addressing scheme and so\n\n19\n00:00:59.390 --> 00:01:01.480\npeople do get intimidated.\n\n20\n00:01:01.480 --> 00:01:03.280\nOSPF didn't make that any better, right?\n\n21\n00:01:03.280 --> 00:01:07.370\nWith OSPF, it was originally written for\nIPv4 and that was it.\n\n22\n00:01:07.370 --> 00:01:09.680\nIt was built around on this idea of IPv4.\n\n23\n00:01:09.680 --> 00:01:14.615\nWhen IPv6 came along they said,\nwell, shoot.\n\n24\n00:01:14.615 --> 00:01:15.355\n&gt;&gt; Can't do it.\n\n25\n00:01:15.355 --> 00:01:17.075\n&gt;&gt; Yeah, what are we going to do now?\n\n26\n00:01:17.075 --> 00:01:20.875\nSo they had to rewrite OSPF from scratch,\n\n27\n00:01:20.875 --> 00:01:24.435\nfrom the ground up to\nmake it support IPV6.\n\n28\n00:01:24.435 --> 00:01:30.505\nAnd so technically,\nOSPF with IPV6 is all new protocol, right?\n\n29\n00:01:30.505 --> 00:01:34.895\nWhat we learned in IPV4 was OSPF\nversion 2, OSPF version 3, brand new.\n\n30\n00:01:34.895 --> 00:01:37.100\nWritten from scratch, right?\n\n31\n00:01:37.100 --> 00:01:39.130\nBut you'll see when we implement it,\nit's identical.\n\n32\n00:01:39.130 --> 00:01:40.280\nI mean it really works the same.\n\n33\n00:01:40.280 --> 00:01:41.890\nThe commands are basically the same.\n\n34\n00:01:41.890 --> 00:01:44.030\nWhat you see on the screen\nis basically the same.\n\n35\n00:01:44.030 --> 00:01:46.560\nYou wouldn't know that it's an entirely\ndifferent protocol under the hood, but\n\n36\n00:01:46.560 --> 00:01:47.490\nit actually is, right?\n\n37\n00:01:47.490 --> 00:01:49.380\nSo that gets people worried.\n\n38\n00:01:49.380 --> 00:01:53.860\nThere's other protocols like EIGRP that\nare modular where when IPv6 came out,\n\n39\n00:01:53.860 --> 00:01:54.940\nthey said, no big deal.\n\n40\n00:01:54.940 --> 00:01:57.810\nJust write an IPv6 module,\nstick on there and we're done.\n\n41\n00:01:57.810 --> 00:02:03.520\nThey already had IP and IPS/SPX, Apple\nTalk, all that stuff's built- in to EIGRP.\n\n42\n00:02:03.520 --> 00:02:04.520\nOSPF?\n\n43\n00:02:04.520 --> 00:02:06.330\nJust IPv4.\n\n44\n00:02:06.330 --> 00:02:10.450\nSo when IPv6 came out,\nwe ended up with this OSPF Version 3 and\n\n45\n00:02:10.450 --> 00:02:12.350\nit's designed specifically to handle it.\n\n46\n00:02:12.350 --> 00:02:15.720\nNow you might ask yourself,\nif all that changed was the address.\n\n47\n00:02:15.720 --> 00:02:17.950\n&gt;&gt; [LAUGH]\n&gt;&gt; Why did we have to do this whole\n\n48\n00:02:17.950 --> 00:02:18.607\nbig rewrite?\n\n49\n00:02:18.607 --> 00:02:23.290\nWell, one of the big changes was that in\nIPv6 you do not have broadcast anymore.\n\n50\n00:02:23.290 --> 00:02:25.730\nEverything has to use multicast.\n\n51\n00:02:25.730 --> 00:02:27.690\nWell, OSPF already used multicast, so\n\n52\n00:02:27.690 --> 00:02:32.000\nthat wasn't that big of a deal, nut it's a\ndifferent set of multicast addressing and\n\n53\n00:02:32.000 --> 00:02:35.220\nso they had to rewrite some\nof the underlying hardware or\n\n54\n00:02:35.220 --> 00:02:38.250\nunderlying software to be able to\nuse these new multicast addresses.\n\n55\n00:02:38.250 --> 00:02:40.500\nYou communicate a little bit differently.\n\n56\n00:02:40.500 --> 00:02:42.388\nThere's also some other things\nthat aren't needed anymore.\n\n57\n00:02:42.388 --> 00:02:47.400\nIn IPv4 you had no real\nsecurity on the network and\n\n58\n00:02:47.400 --> 00:02:49.940\nso OSPF version 2 had\nauthentication built into it.\n\n59\n00:02:49.940 --> 00:02:53.710\nIt wasn't the greatest, but it worked,\nand you could do MD5 authentication.\n\n60\n00:02:53.710 --> 00:02:58.690\nWell, in IPV6, you don't need that because\nIPV6 has IP sac built right into it.\n\n61\n00:02:58.690 --> 00:03:01.410\nSo, you can have fully encrypted\ncommunications on the network and\n\n62\n00:03:01.410 --> 00:03:03.420\nyour protocols don't have\nto get involved in it.\n\n63\n00:03:03.420 --> 00:03:06.740\nSo, as a result,\nOSPF version 3 is a little more lean.\n\n64\n00:03:06.740 --> 00:03:10.740\nIt's a little faster, a little less\nresource intensive because they were able\n\n65\n00:03:10.740 --> 00:03:16.182\nto rely more on what IPV6 did and less\non having to invent things themselves.\n\n66\n00:03:16.182 --> 00:03:21.060\nAs a result OSPF version 3 does\nperform better than OSPF version 2.\n\n67\n00:03:21.060 --> 00:03:24.060\nYou'll want to go to it,\nI mean you'll want to go to IPV6 because\n\n68\n00:03:24.060 --> 00:03:27.170\nthere's a lot of great stuff there too,\nbut at the end of the day,\n\n69\n00:03:27.170 --> 00:03:31.285\nIPV6 with OSPF version three works\nreally well and it's a great solution.\n\n70\n00:03:31.285 --> 00:03:34.530\n&gt;&gt; Don, I think I remember when I\nfirst started learning about that and\n\n71\n00:03:34.530 --> 00:03:38.250\nhow to configure it for IPV6, I got\nreally intimidated cuz of what you said,\n\n72\n00:03:38.250 --> 00:03:39.640\nthat they had to rewrite\nit from the ground up.\n\n73\n00:03:39.640 --> 00:03:44.220\nWhich obviously meant for me, my knowledge\nbase for getting my CCNA had to change.\n\n74\n00:03:44.220 --> 00:03:46.850\nI had to know something\nthat was fantastic,\n\n75\n00:03:46.850 --> 00:03:49.110\ncuz I had to actually learn\nit from the ground up, but\n\n76\n00:03:49.110 --> 00:03:52.580\nin the end it was really all\nbehind the scenes like you said.\n\n77\n00:03:52.580 --> 00:03:54.820\nThe multicast is actually\nwhat's changed and\n\n78\n00:03:54.820 --> 00:03:58.390\neven though we have to learn a few\ndifferent commands, they're really not so\n\n79\n00:03:58.390 --> 00:04:01.460\ndifferent in the functionality\nin what I need to know as CCNA.\n\n80\n00:04:01.460 --> 00:04:06.020\nSo once I got used to that idea I think\nI became much more comfortable in\n\n81\n00:04:06.020 --> 00:04:08.760\nworking with it and\njust having to learn about IPV6 and\n\n82\n00:04:08.760 --> 00:04:10.860\nthen realizing the rest is\ngoing to handle itself.\n\n83\n00:04:10.860 --> 00:04:13.400\nSo even though I kind of\nled us off with a scare.\n\n84\n00:04:13.400 --> 00:04:14.630\nIt was just to do that.\n\n85\n00:04:14.630 --> 00:04:16.090\nIt was just to scare you.\n\n86\n00:04:16.090 --> 00:04:18.750\nAnd Don kind of hopefully\nalleviated those concerns.\n\n87\n00:04:18.750 --> 00:04:21.550\nSo Don, what do we really need to\nfocus in on at the beginning then?\n\n88\n00:04:21.550 --> 00:04:24.020\n&gt;&gt; All right, so let's just start with\nthe addressing side of things, right?\n\n89\n00:04:24.020 --> 00:04:25.650\nSo I'm going to pull up my topology here.\n\n90\n00:04:25.650 --> 00:04:28.320\nThis is the topology we've been working\nwith in previous OSPF episodes.\n\n91\n00:04:28.320 --> 00:04:31.250\nLet's say that we just\nall of a sudden decided\n\n92\n00:04:31.250 --> 00:04:34.620\nthat we wanted to start using IPv6, right?\n\n93\n00:04:34.620 --> 00:04:36.620\nAnd so\nmaybe like we over here in radar six,\n\n94\n00:04:36.620 --> 00:04:40.560\nI've got the 172.16.0 network\nthat's plugged into radar six and\n\n95\n00:04:40.560 --> 00:04:44.310\nI decide that I need to get it switched\nover to using an IPv6 network.\n\n96\n00:04:44.310 --> 00:04:49.930\nWell, you immediately think of these long\n128 bit addresses that are letters and\n\n97\n00:04:49.930 --> 00:04:51.096\nnumbers, all hexadecimals.\n\n98\n00:04:51.096 --> 00:04:52.030\n&gt;&gt; [LAUGH]\n&gt;&gt; It's a mess But\n\n99\n00:04:52.030 --> 00:04:55.250\nyou can actually make life really easy\non yourself when you create these\n\n100\n00:04:55.250 --> 00:04:55.820\nkinds of networks.\n\n101\n00:04:55.820 --> 00:04:56.650\nLet me show you.\n\n102\n00:04:56.650 --> 00:04:59.120\nI'm going to jump over to router six and\n\n103\n00:04:59.120 --> 00:05:03.260\non router six I'm going to\ntake a look at that interface.\n\n104\n00:05:03.260 --> 00:05:07.262\nNow that interface I've already forgotten\nbecause it's been more than two seconds,\n\n105\n00:05:07.262 --> 00:05:08.420\nis GI/0/0.\n\n106\n00:05:08.420 --> 00:05:14.400\nSo, when I take a look at interface gi0/0.\n\n107\n00:05:14.400 --> 00:05:20.240\nThere it is,\nit's got 172.16.0.6 as its address and\n\n108\n00:05:20.240 --> 00:05:23.590\nit is a class b network, right?\n\n109\n00:05:23.590 --> 00:05:24.610\n255.255.0.0.\nAll right?\n\n110\n00:05:24.610 --> 00:05:26.270\nSo I decided I wanna switch over to IPv6.\n\n111\n00:05:26.270 --> 00:05:29.940\nWell, I could come up with some great big,\nlong,\n\n112\n00:05:29.940 --> 00:05:32.940\ngiant address and\nlet it figure things out for me.\n\n113\n00:05:32.940 --> 00:05:37.070\nAnd if I've been assigned public addresses\nfrom the INA then I'll certainly\n\n114\n00:05:37.070 --> 00:05:37.970\nwanna do that, right?\n\n115\n00:05:37.970 --> 00:05:39.842\nAnd you can assign an address and\ngo that route.\n\n116\n00:05:39.842 --> 00:05:46.370\nAnd if I jump into that interface and\nI do IPV6 address and\n\n117\n00:05:46.370 --> 00:05:51.810\nthen I call up the IANA and\nthey sell me some IPs or\n\n118\n00:05:51.810 --> 00:05:56.040\nassign me a block and usually to ISP.\n\n119\n00:05:56.040 --> 00:06:00.880\nAnd so I get 2001:cc21:4a8 3:2211.\n\n120\n00:06:00.880 --> 00:06:07.670\nRight, so that's the network they assign\nme, and they assign it to me as a /64.\n\n121\n00:06:07.670 --> 00:06:11.260\nWell I still need a host ID on this\none and so I might generate one or\n\n122\n00:06:11.260 --> 00:06:13.510\nI might let it auto generate\nwhich is what we normally do.\n\n123\n00:06:13.510 --> 00:06:15.110\nYou do EUI-64 addresses.\n\n124\n00:06:15.110 --> 00:06:16.920\nSo if we go a little further on this,\n\n125\n00:06:16.920 --> 00:06:22.750\nI'm just gonna do a :: to show\nthat the rest of it's all 0s, /64.\n\n126\n00:06:22.750 --> 00:06:26.070\nAnd EUI-64 so\nit auto generates my address.\n\n127\n00:06:26.070 --> 00:06:32.320\nNow when I do that, I'm now going to have\nthis big, nasty looking address, right?\n\n128\n00:06:32.320 --> 00:06:37.790\nIf I do a show run for\ninterface GI0/0 and take a look at it.\n\n129\n00:06:37.790 --> 00:06:42.495\nWell, I guess it just shows the EUI-64\nthere, so let's do a show ipv6\n\n130\n00:06:42.495 --> 00:06:48.430\ninterface gi0/0 and\nthere it is, right there.\n\n131\n00:06:48.430 --> 00:06:52.055\nThat address rolls right of the tongue,\ndoesn't it?\n\n132\n00:06:52.055 --> 00:06:52.640\n&gt;&gt; [LAUGH]\n&gt;&gt; I mean,\n\n133\n00:06:52.640 --> 00:06:56.920\nit's a massive trunk of letters and\nnumbers and it's hard to remember and\n\n134\n00:06:56.920 --> 00:06:59.140\nthis is where people get intimidated,\nright.\n\n135\n00:06:59.140 --> 00:07:00.680\nSo let me show you a trick.\n\n136\n00:07:00.680 --> 00:07:03.570\nInstead of going with these public\naddresses, you don't have to.\n\n137\n00:07:03.570 --> 00:07:06.660\nYou can still use private\naddresses under IPv6 and\n\n138\n00:07:06.660 --> 00:07:08.270\nyou can nat yourself on the way out.\n\n139\n00:07:08.270 --> 00:07:11.860\nNow a lot of people know if you have\nenough public IP's you don't have to nat,\n\n140\n00:07:11.860 --> 00:07:12.730\nso why bother?\n\n141\n00:07:12.730 --> 00:07:16.940\nBut it doesn't hurt, you can still do it\nand you can still use private addresses.\n\n142\n00:07:16.940 --> 00:07:19.790\nNow private addresses in\nIPv6 start with FC00.\n\n143\n00:07:19.790 --> 00:07:21.750\nThat's where the range starts.\n\n144\n00:07:21.750 --> 00:07:25.760\nBut if you actually read the standard,\nthey tell you to let that one sit\n\n145\n00:07:25.760 --> 00:07:30.270\nas reserved and so it actually, as far as\na usability standpoint, starts at fd00.\n\n146\n00:07:30.270 --> 00:07:35.645\nSo you could take fd00, and any address\nthat starts with fd00 will be a private,\n\n147\n00:07:35.645 --> 00:07:38.770\nnon-routable on the Internet address that\nyou can use to your heart's content.\n\n148\n00:07:38.770 --> 00:07:40.670\nYou just have to NAT on your way out.\n\n149\n00:07:40.670 --> 00:07:45.427\nAnd what I'll typically do\nis take my IPv4 range right?\n\n150\n00:07:45.427 --> 00:07:50.419\nSo if I do let's pull up\nthat interface again,\n\n151\n00:07:50.419 --> 00:07:55.925\nif I take my range 172.16.0.6, right?\n\n152\n00:07:55.925 --> 00:08:02.550\nI do something like this where I say IPv6\naddress fd00, so I mark it as private.\n\n153\n00:08:02.550 --> 00:08:08.017\nAnd then 172:16:0 right?\n\n154\n00:08:08.017 --> 00:08:11.160\nSo I'm just using the addresses from IPv4.\n\n155\n00:08:12.160 --> 00:08:13.400\nAnd then I can do colon, colon.\n\n156\n00:08:13.400 --> 00:08:15.430\nYou know it's all zeros until\nI get to the final address.\n\n157\n00:08:15.430 --> 00:08:18.460\nI was dot 6, so I'll make myself .6 again.\n\n158\n00:08:18.460 --> 00:08:20.970\nI'll flag that as a /64.\n\n159\n00:08:20.970 --> 00:08:23.350\nNow I'm kind of blending the two worlds,\nright?\n\n160\n00:08:23.350 --> 00:08:28.290\nI can read right there, my IP IPV4\naddress, but it is actually hexadecimal.\n\n161\n00:08:28.290 --> 00:08:30.340\nIt is written as an IPV6 address.\n\n162\n00:08:30.340 --> 00:08:32.460\nBut now it's got this huge learning curve.\n\n163\n00:08:32.460 --> 00:08:36.400\nI am still 172.16.0,6, but\nnow written in an IPV6 world.\n\n164\n00:08:36.400 --> 00:08:38.940\nSo when you are practicing and\n\n165\n00:08:38.940 --> 00:08:42.770\nyour learning that a great way to\nremove the stress of IPV6 addresses,\n\n166\n00:08:42.770 --> 00:08:45.750\nby using something far,\nfar simpler and getting that aside.\n\n167\n00:08:45.750 --> 00:08:48.610\nSo I've actually done that on\nall of my interfaces here.\n\n168\n00:08:48.610 --> 00:08:51.660\nLet me make sure I didn't leave this guy.\n\n169\n00:08:51.660 --> 00:08:53.920\nCuz you can have more\nthan one IPv6 address.\n\n170\n00:08:53.920 --> 00:08:57.480\nSo I'm just gonna remove that one,\nand let me just check that interface,\n\n171\n00:08:57.480 --> 00:09:00.520\nand make sure everything's\nthe way that I want it.\n\n172\n00:09:00.520 --> 00:09:01.690\nAnd, I killed my other address.\n\n173\n00:09:01.690 --> 00:09:02.390\nNo, there it is.\nSorry,\n\n174\n00:09:02.390 --> 00:09:04.590\nI thought I killed my other address,\nbut there it is, all right?\n\n175\n00:09:04.590 --> 00:09:06.600\nSo now I've got my addresses set.\n\n176\n00:09:06.600 --> 00:09:11.750\nAnd, if I do a show ipv6 interface brief,\n\n177\n00:09:11.750 --> 00:09:14.870\nyou'll see where I've done it\non my other interfaces too.\n\n178\n00:09:16.070 --> 00:09:17.900\nSo this guy FD00:192:16.\n\n179\n00:09:17.900 --> 00:09:19.885\n168.4.6, that's what it used to be.\n\n180\n00:09:19.885 --> 00:09:25.448\nWell now it's FD00:192:168:4::6.\n\n181\n00:09:25.448 --> 00:09:26.435\nI can still read it.\n\n182\n00:09:26.435 --> 00:09:27.977\nI can still memorize that.\n\n183\n00:09:27.977 --> 00:09:30.014\nIf I've already got\nthe IPv4 address memorized,\n\n184\n00:09:30.014 --> 00:09:32.370\nnow I've got the IPv6\naddress memorized too.\n\n185\n00:09:32.370 --> 00:09:34.210\nIt takes away the pressure and\n\n186\n00:09:34.210 --> 00:09:38.720\nit makes it super easy to implement\nipV6 in a standard network.\n\n187\n00:09:38.720 --> 00:09:42.720\nYou can even set up a DSCPV 6\nto issue out this addresses and\n\n188\n00:09:42.720 --> 00:09:44.230\nit really does eliminate that.\n\n189\n00:09:44.230 --> 00:09:46.790\nSo if you are paranoid over addressing,\nput that on your mind.\n\n190\n00:09:46.790 --> 00:09:47.750\nGo this route, all right?\n\n191\n00:09:47.750 --> 00:09:51.770\nSo that's what I've done here in my lab is\nI've assigned nice and simple addresses.\n\n192\n00:09:51.770 --> 00:09:54.860\nSo we can see that and\nwe won't worry about addresses, and\n\n193\n00:09:54.860 --> 00:09:58.590\ninstead we'll worry about OSPF, which is\nwhat we need to learn for the exam, right?\n\n194\n00:09:58.590 --> 00:10:01.808\nSo what do I need to know for OSPF?\n\n195\n00:10:01.808 --> 00:10:04.210\nIf I wanna route between\nall of these networks and\n\n196\n00:10:04.210 --> 00:10:09.510\nthey're all running IPv6 I need to\nget OSPF up and running for IPv6.\n\n197\n00:10:09.510 --> 00:10:12.410\nAnd there is two main steps\nthat I have to follow.\n\n198\n00:10:12.410 --> 00:10:15.420\nThe first thing most Cisco routers,\nin fact,\n\n199\n00:10:15.420 --> 00:10:20.220\nI think all the Cisco routers sold today\nsupport IPv6 right out of the box.\n\n200\n00:10:20.220 --> 00:10:23.340\nOn older ones you might need to\nupdate your IOS to gate IPv6 support,\n\n201\n00:10:23.340 --> 00:10:26.010\nyou might even need to buy the feature\nset to get IPv6 support but\n\n202\n00:10:26.010 --> 00:10:27.960\neverything sold today has it.\n\n203\n00:10:27.960 --> 00:10:32.170\nBut on all of them It's\ntypically turned off by default.\n\n204\n00:10:32.170 --> 00:10:34.150\nSo I need to turn on IPv6.\n\n205\n00:10:34.150 --> 00:10:36.790\nNow I've already got addresses assigned so\nyou might be looking at it and\n\n206\n00:10:36.790 --> 00:10:39.400\nsaying well it's obviously working, right?\n\n207\n00:10:39.400 --> 00:10:43.340\nIt's working with me as a host,\nnot with me as a router.\n\n208\n00:10:43.340 --> 00:10:46.630\nI'm not routing between\nthese interfaces right now.\n\n209\n00:10:46.630 --> 00:10:50.750\nIf I do a show ipv6 route and\ntake a look at my routing table,\n\n210\n00:10:50.750 --> 00:10:53.730\nI see my directly connected stuff but\nI'm not routing between them.\n\n211\n00:10:53.730 --> 00:10:56.010\nI need to issue an extra command.\n\n212\n00:10:56.010 --> 00:11:01.120\nI need to issue ipv6 unicast-routing.\n\n213\n00:11:01.120 --> 00:11:04.840\nThat's gonna turn on IPv6 routing,\nall right?\n\n214\n00:11:04.840 --> 00:11:07.770\nNow I am routing between\nmy IPv6 interfaces.\n\n215\n00:11:07.770 --> 00:11:11.610\nSo if I received traffic destined\nfrom one interface going to another,\n\n216\n00:11:11.610 --> 00:11:15.020\nit's gonna move that traffic between\nthem and we're gonna be in business.\n\n217\n00:11:15.020 --> 00:11:16.210\nOkay?\n\n218\n00:11:16.210 --> 00:11:20.440\nNow, the next step, the second part,\nis actually turning on OSPF.\n\n219\n00:11:20.440 --> 00:11:26.630\nAnd turning on OSPF in IPv6 is easier and\nharder at the same time.\n\n220\n00:11:26.630 --> 00:11:32.550\nIt's easier in that I no longer have those\nnetwork statements that we used to have.\n\n221\n00:11:32.550 --> 00:11:35.709\nIn IPv6 you always enable\nOSPF on the interface.\n\n222\n00:11:36.760 --> 00:11:40.730\nIt's harder and then I can't just\ndo one big giant wild card and\n\n223\n00:11:40.730 --> 00:11:42.100\ncover all my interfaces at once.\n\n224\n00:11:42.100 --> 00:11:44.280\nI have to go to each individual interface.\n\n225\n00:11:44.280 --> 00:11:46.200\nSo there's that!\n\n226\n00:11:46.200 --> 00:11:50.780\nThe other thing is, we still have\nconcepts like router IDs hanging around.\n\n227\n00:11:50.780 --> 00:11:54.250\nAnd the router IDs, you might\nremember those with 32 bit numbers.\n\n228\n00:11:54.250 --> 00:11:57.640\nThey looked like IPv4 addresses but\nthey weren't addresses were they?\n\n229\n00:11:57.640 --> 00:11:59.730\nThey were just number\nthat we could make up.\n\n230\n00:11:59.730 --> 00:12:02.810\nYou still have router ID\nunder OSPF version 3 and\n\n231\n00:12:02.810 --> 00:12:07.400\nthey're still 32 bit numbers\nthat look like IPv4 addresses.\n\n232\n00:12:07.400 --> 00:12:10.970\nAnd so it gets a little confusing\ncuz it looks like an IPv4 even\n\n233\n00:12:10.970 --> 00:12:13.180\nthough I'm using it on an IPv6 host.\n\n234\n00:12:14.430 --> 00:12:18.730\nBut remember that area numbers and\nrouter IDs are 32-bit\n\n235\n00:12:18.730 --> 00:12:22.560\ndotted decimal numbers that look\nlike IP addresses, but aren't.\n\n236\n00:12:22.560 --> 00:12:26.120\nThey're just numbers that just happen\nto be written in the same format,\n\n237\n00:12:26.120 --> 00:12:30.745\nbecause God forbid we used some\nother format and made it make sense.\n\n238\n00:12:30.745 --> 00:12:33.295\nSo, [LAUGH] sometimes we just have\nto make things different I guess.\n\n239\n00:12:33.295 --> 00:12:36.933\nSo, if I wanna get ospf up and running\non this guy, I need to look at what\n\n240\n00:12:36.933 --> 00:12:40.348\ninterfaces I've got, and\nactually I could see it on right here.\n\n241\n00:12:40.348 --> 00:12:46.394\nI've got Gi0/0, Gi1/0 and Fa2/0.\n\n242\n00:12:46.394 --> 00:12:48.230\nThose are my three interfaces.\n\n243\n00:12:48.230 --> 00:12:51.700\nAnd so, I need to go into each\ninterface and turn on OSPF.\n\n244\n00:12:51.700 --> 00:12:55.530\nI don't need to issue a router command,\nbecause as soon as I turn it on on\n\n245\n00:12:55.530 --> 00:12:59.610\nthe first interface,\nthat's going to enable the overall router.\n\n246\n00:12:59.610 --> 00:13:04.090\nBut, if I wanna set a router idea ahead of\ntime, remember how in the earlier shows.\n\n247\n00:13:04.090 --> 00:13:07.800\nI always had to reset my OSPF process\nbecause I set the router ID later?\n\n248\n00:13:07.800 --> 00:13:10.800\nIf I wanted to set the router ID first,\nthen I can go and\n\n249\n00:13:10.800 --> 00:13:12.618\ncreate the ospf process first.\n\n250\n00:13:12.618 --> 00:13:18.184\nIn ipv4 we issued router ospf\nfollowed by a process ID.\n\n251\n00:13:18.184 --> 00:13:19.517\nThat was the ipv4 command.\n\n252\n00:13:19.517 --> 00:13:24.621\nIn ipv6, the command is\n\n253\n00:13:24.621 --> 00:13:32.350\nipv6 Router ospf and a process ID.\n\n254\n00:13:32.350 --> 00:13:35.390\nSo it's still router ospf and\na process ID,\n\n255\n00:13:35.390 --> 00:13:38.160\nwe just stick the word ipv6 before it,\nright?\n\n256\n00:13:38.160 --> 00:13:39.130\nSo that's nice.\n\n257\n00:13:39.130 --> 00:13:40.750\nWe don't have to memorize\na whole new command.\n\n258\n00:13:40.750 --> 00:13:44.750\nWe just remember to stick ipv6 before\nit and that's gonna create it.\n\n259\n00:13:44.750 --> 00:13:47.531\nNow, before I run that,\n\n260\n00:13:47.531 --> 00:13:53.240\nlet me do a no ipv6 unicast-routing,\nall right?\n\n261\n00:13:53.240 --> 00:13:56.660\nAnd I'm gonna issue IPv6 router OSPF 1.\n\n262\n00:13:56.660 --> 00:13:59.470\nSee, IPv6 routing not enabled.\n\n263\n00:13:59.470 --> 00:14:02.440\nI've gotta make sure that I've\nenabled Unicast routing or\n\n264\n00:14:02.440 --> 00:14:06.100\nit won't even let me issue\nthe command to create the process.\n\n265\n00:14:06.100 --> 00:14:08.304\nBut now I have,\na new set prompt's a little different.\n\n266\n00:14:08.304 --> 00:14:11.630\nInstead of config-router\nnow it's config-rtr.\n\n267\n00:14:11.630 --> 00:14:14.580\nSo I can spot that real easy right there.\n\n268\n00:14:14.580 --> 00:14:18.590\nI know that I'm working on\nan ipv6 routing instance.\n\n269\n00:14:18.590 --> 00:14:21.770\nAnd from here I can set my router ID.\n\n270\n00:14:21.770 --> 00:14:25.558\nAnd this is router six so\nI'm going to make it 0.0.0.6.\n\n271\n00:14:25.558 --> 00:14:29.080\nAnd see how it's that 32 bit,\ndotted decimal number.\n\n272\n00:14:29.080 --> 00:14:31.270\nIt's not an ipv4 address\nit just looks like one.\n\n273\n00:14:32.570 --> 00:14:36.120\nAnd now if I do a question mark,\n\n274\n00:14:36.120 --> 00:14:39.150\nnotice how the network command\nis completely missing.\n\n275\n00:14:39.150 --> 00:14:40.360\nThere's no network command.\n\n276\n00:14:40.360 --> 00:14:42.000\nI can't turn it on from here that way.\n\n277\n00:14:42.000 --> 00:14:45.430\nI got to go to each interface and\nget that set up.\n\n278\n00:14:45.430 --> 00:14:48.930\nSo I'm gonna jump into interface gi1/0.\n\n279\n00:14:48.930 --> 00:14:55.880\nAnd right here, I'll say, remember ipv4\nwe would say ip ospf 1 area 0, right?\n\n280\n00:14:55.880 --> 00:15:00.720\nSo the 1 is the process ID and\n0 is the area, right?\n\n281\n00:15:00.720 --> 00:15:05.280\nI'm gonna change that and\ninstead of ip, we're gonna say ipv6,\n\n282\n00:15:06.950 --> 00:15:09.800\nand then ospf 1, area 0.\n\n283\n00:15:09.800 --> 00:15:11.900\nInstead of IP, we say IPv6.\n\n284\n00:15:13.150 --> 00:15:17.720\nAnd now I can jump in to 2/0, oops, that\napparently is not what that interface was.\n\n285\n00:15:17.720 --> 00:15:19.410\nI can look at my interface again.\n\n286\n00:15:19.410 --> 00:15:27.320\nI need, that was 1/0, I need 0/0, and\nI need fa2/0, so let me get back to that.\n\n287\n00:15:27.320 --> 00:15:32.993\nAnd so I'll do 0/0 and then I'll do fa2/0.\n\n288\n00:15:32.993 --> 00:15:41.730\nAnd now I'm up and running ospf on\nall of my interfaces, all lright?\n\n289\n00:15:41.730 --> 00:15:43.900\nIf I do a show IPv6 protocols.\n\n290\n00:15:45.270 --> 00:15:47.380\nRight?\nRemember it was show IP protocol.\n\n291\n00:15:47.380 --> 00:15:49.173\nNow I've got show IPV6 protocol.\n\n292\n00:15:49.173 --> 00:15:52.343\nI can see that I am running\nospf process ID one and\n\n293\n00:15:52.343 --> 00:15:55.765\nthese are the interfaces\nthat it's turned on for.\n\n294\n00:15:55.765 --> 00:15:57.705\nI don't have any neighbors right now,\nso it's not very exciting.\n\n295\n00:15:57.705 --> 00:16:00.660\nBut I've got one normal area,\nit's up and running.\n\n296\n00:16:00.660 --> 00:16:01.930\nI'm in business.\n\n297\n00:16:01.930 --> 00:16:05.040\nIf I wanna see this really in action\nI gotta jump to my other routers and\n\n298\n00:16:05.040 --> 00:16:06.790\nget this set up on them too.\n\n299\n00:16:06.790 --> 00:16:09.920\nSo, as I move across my topology,\n\n300\n00:16:09.920 --> 00:16:12.500\nall I really need to know\nare my interfaces, right?\n\n301\n00:16:12.500 --> 00:16:15.910\nSo these guys are Gi1/0, Gi2/0, so\n\n302\n00:16:15.910 --> 00:16:18.670\nI need to get that set up\nas I go across the line.\n\n303\n00:16:18.670 --> 00:16:22.770\nNow, sometimes you can luck out and\nif it's the same interfaces on each one,\n\n304\n00:16:22.770 --> 00:16:25.482\nyou can do a quick little cut and\npast type script and\n\n305\n00:16:25.482 --> 00:16:27.524\nbounce through these nice and quick.\n\n306\n00:16:27.524 --> 00:16:30.382\nSometimes you can't if\nthe interfaces don't exist, but\n\n307\n00:16:30.382 --> 00:16:34.300\nI should be able to save a little bit\nof time on at least two of these.\n\n308\n00:16:34.300 --> 00:16:37.220\nAnd so if I do something like this,\n\n309\n00:16:37.220 --> 00:16:42.762\nI'm just gonna create a quick\nlittle file here that says enable,\n\n310\n00:16:42.762 --> 00:16:47.020\nconfigure terminal, ipv6 unicast-routing.\n\n311\n00:16:47.020 --> 00:16:50.155\nThis is always a good exercise when you're\nstudying too cuz it shows you memorizing\n\n312\n00:16:50.155 --> 00:16:51.066\nthe commands, right?\n\n313\n00:16:51.066 --> 00:16:54.418\nI can't do tab auto-complete here,\nI'm having to type it out.\n\n314\n00:16:54.418 --> 00:16:58.126\nI could use abbreviations I guess,\nbut I'm gonna cut and\n\n315\n00:16:58.126 --> 00:17:03.267\npaste this right into a router and\nhave it do my configuration nice and fast.\n\n316\n00:17:03.267 --> 00:17:04.993\nActually, I won't really\nbe able to cut and\n\n317\n00:17:04.993 --> 00:17:06.729\npaste if I wanna set the router IDs,\nright?\n\n318\n00:17:06.729 --> 00:17:10.698\nSo when I go to set a router ID on these,\n\n319\n00:17:10.698 --> 00:17:16.415\nit's gonna kinda trip me up a little bit,\nbut anyhow.\n\n320\n00:17:16.415 --> 00:17:19.772\nSo, ipv6 router ospf 1,\nI'll say router-id and\n\n321\n00:17:19.772 --> 00:17:22.604\nthen the router that I'm gonna paste into.\n\n322\n00:17:22.604 --> 00:17:24.347\nSo, I'll start with router two.\n\n323\n00:17:24.347 --> 00:17:30.503\nAnd then from there I can get\ninto interface gi0, what was it,\n\n324\n00:17:30.503 --> 00:17:35.729\n1/0, where I will say ipv6 ospf 1,\narea 0, and\n\n325\n00:17:35.729 --> 00:17:41.850\nthen into gi2/0 where I'll\nsay the same exact thing.\n\n326\n00:17:41.850 --> 00:17:46.482\nWe'll get out of config,\nwe'll save our configuration\n\n327\n00:17:48.731 --> 00:17:52.118\nAnd then I'm gonna throw it a couple extra\ncarriage returns at the end because it'll\n\n328\n00:17:52.118 --> 00:17:54.970\nprompt me for the file name and\nverifications, I'll get that too.\n\n329\n00:17:54.970 --> 00:17:58.353\nSo I'm just gonna take that and\nI'll copy and paste that, and\n\n330\n00:17:58.353 --> 00:18:00.320\nI can jump right over to router two.\n\n331\n00:18:03.409 --> 00:18:05.082\nAnd I can just paste that right in.\n\n332\n00:18:05.082 --> 00:18:08.376\nIt makes configuring things a little bit\nfaster that way, just dumps it right in,\n\n333\n00:18:08.376 --> 00:18:09.726\nand now that one's configured.\n\n334\n00:18:09.726 --> 00:18:13.212\nNow, the configuration for router three\nwas basically the same except for\n\n335\n00:18:13.212 --> 00:18:13.937\nthe router ID.\n\n336\n00:18:13.937 --> 00:18:16.179\nSo I'm gonna take that, or\nwait, I said router three,\n\n337\n00:18:16.179 --> 00:18:17.674\nI think it's actually router four.\n\n338\n00:18:17.674 --> 00:18:20.620\nYeah, router four,\nrouter four is basically the same thing.\n\n339\n00:18:20.620 --> 00:18:22.454\nNotice that I don't have\nto adjust network names or\n\n340\n00:18:22.454 --> 00:18:24.512\nanything cuz it's just tying\nit right to the interface.\n\n341\n00:18:24.512 --> 00:18:26.397\nSo I can jump over to router four and\n\n342\n00:18:26.397 --> 00:18:29.714\nwe can knock it's configuration\nout just the same, right?\n\n343\n00:18:29.714 --> 00:18:32.716\nNice little time saving tip right there.\n\n344\n00:18:32.716 --> 00:18:35.167\nSo there it goes,\nchurning right through, okay?\n\n345\n00:18:35.167 --> 00:18:41.559\nSo once that's done, I'm now running\nIPv6 OSPF between these three routers,\n\n346\n00:18:41.559 --> 00:18:46.645\nrouter two, four, and six and\nthey're sharing information.\n\n347\n00:18:46.645 --> 00:18:50.545\nAnd so this network up here,\nthis is the IPv4 address, but\n\n348\n00:18:50.545 --> 00:18:56.940\nnow the IPv6 address is FD00:172:16::,\nright, so all zeroes after that.\n\n349\n00:18:56.940 --> 00:19:00.809\nThat network should be getting\nadvertised up to router four and\n\n350\n00:19:00.809 --> 00:19:04.463\nthat should then be getting\nadvertised over to router two.\n\n351\n00:19:04.463 --> 00:19:09.706\nRouter two should be learning about\nthat purely over IPv6, right?\n\n352\n00:19:09.706 --> 00:19:14.038\nAnd so if I jump over to router two and\ntake a look at its configuration, I know\n\n353\n00:19:14.038 --> 00:19:18.820\nthe configuration is good cuz I did a cut\nand paste and I didn't get any errors.\n\n354\n00:19:18.820 --> 00:19:21.690\nSo now I just need to see is this working.\n\n355\n00:19:21.690 --> 00:19:28.962\nIf I do, show ipv6 ospf neighbor, I can\nsee I don't have any neighbors, right?\n\n356\n00:19:28.962 --> 00:19:30.013\nWhy don't I have any neighbors?\n\n357\n00:19:30.013 --> 00:19:32.380\nWell, I don't know, I might have\nan interface down or something like that.\n\n358\n00:19:32.380 --> 00:19:36.239\nI should have a neighbor,\nI should be seeing router four.\n\n359\n00:19:36.239 --> 00:19:39.653\nLet's do a quick,\nshow ipv6 interface brief, and\n\n360\n00:19:39.653 --> 00:19:42.530\nmake sure that my\ninterfaces are indeed up.\n\n361\n00:19:42.530 --> 00:19:44.770\nAnd they are, so\nI see that I've got my interfaces up.\n\n362\n00:19:44.770 --> 00:19:47.890\nSo, it may just not have found each other\nyet, so I'll have to give that a second.\n\n363\n00:19:47.890 --> 00:19:51.760\nIf I do, show ipv6 route,\nI can look at my routing table, and\n\n364\n00:19:51.760 --> 00:19:56.560\nwhat I expect to see are OSPF routes,\nand I'm not seeing the OSPF routes.\n\n365\n00:19:56.560 --> 00:19:58.070\nSo it looks like I got a problem.\n\n366\n00:19:58.070 --> 00:20:03.470\nRouter two is not seeing any neighbors and\nit's not seeing any routes.\n\n367\n00:20:03.470 --> 00:20:06.580\nSo let's jump over to router, was it\nrouter four, was the next one in the line.\n\n368\n00:20:06.580 --> 00:20:09.879\nSo, it goes router two,\nto router four, to router six.\n\n369\n00:20:09.879 --> 00:20:16.060\nSo on router four, I'll do a, show ipv6\nospf neighbor, and it has no neighbors.\n\n370\n00:20:16.060 --> 00:20:17.280\nAll right, so that's not good either.\n\n371\n00:20:17.280 --> 00:20:21.510\nThis one has no neighbors, so I'm sure\nwhen I look at its IPv6 route that,\n\n372\n00:20:23.220 --> 00:20:24.970\nwell now that's interesting right there.\n\n373\n00:20:24.970 --> 00:20:31.713\nShow ipv6 route should at least show\nthe interfaces that have IPv4 addresses.\n\n374\n00:20:31.713 --> 00:20:35.672\nAnd in this case, all I see is\none loopback and that loopback,\n\n375\n00:20:35.672 --> 00:20:40.030\nthat address is FF00::/8,\nwhich is the multicast, right?\n\n376\n00:20:40.030 --> 00:20:44.737\nThat multicast listener is always there,\nand see how it's tied to Null0?\n\n377\n00:20:44.737 --> 00:20:47.740\nSo, router four is gonna be\nmy problem here,most likely.\n\n378\n00:20:47.740 --> 00:20:50.530\nIt doesn't appear to be\nrunning IPv6 properly.\n\n379\n00:20:50.530 --> 00:20:52.570\nSo let's take a look at router\nfour's configuration here and\n\n380\n00:20:52.570 --> 00:20:53.610\nsee what I screwed up.\n\n381\n00:20:53.610 --> 00:20:56.236\nI'm sure it's just something I did.\n\n382\n00:20:56.236 --> 00:20:59.640\nWhen I have a mistake like this and\nI don't know specifically where to look,\n\n383\n00:20:59.640 --> 00:21:02.320\nthere's no better command than,\nshow running-config.\n\n384\n00:21:02.320 --> 00:21:04.854\nHere, there's more than one problem\nthat could be happening, right?\n\n385\n00:21:04.854 --> 00:21:07.437\nI could be missing the ipv6\nunicast-routing command,\n\n386\n00:21:07.437 --> 00:21:10.233\nI could have failed to assign\nIP addresses to the interfaces,\n\n387\n00:21:10.233 --> 00:21:12.030\nthere's a number of things like that.\n\n388\n00:21:12.030 --> 00:21:15.010\nSo I wanna see it all and\nshow running-config does that for me.\n\n389\n00:21:15.010 --> 00:21:16.700\nSo I'm gonna start looking at it.\n\n390\n00:21:16.700 --> 00:21:19.970\nHere at the beginning there's\nnothing special to look for, whoop,\n\n391\n00:21:19.970 --> 00:21:22.100\nas I scroll little too fast, but\n\n392\n00:21:22.100 --> 00:21:24.490\nthe IPv6 unicast-routing is\nright here up at the top.\n\n393\n00:21:24.490 --> 00:21:26.480\nSo I can see that is turned on.\n\n394\n00:21:26.480 --> 00:21:30.505\nAnd then as I scroll down I\nshould get to the interfaces,\n\n395\n00:21:30.505 --> 00:21:35.043\nand as I look at the interfaces,\nI'm missing IPv6, no,\n\n396\n00:21:35.043 --> 00:21:39.250\nthere they are,\non interface gi1/0 and 2/0.\n\n397\n00:21:39.250 --> 00:21:41.620\nI can see where these\naddresses are assigned.\n\n398\n00:21:41.620 --> 00:21:42.930\n&gt;&gt; It is shut down though.\n\n399\n00:21:42.930 --> 00:21:44.200\n&gt;&gt; And they are shut down.\n\n400\n00:21:44.200 --> 00:21:46.126\n&gt;&gt; [LAUGH]\n&gt;&gt; Why are these interfaces shut down?\n\n401\n00:21:46.126 --> 00:21:48.151\nIf you watched our last episode,\n\n402\n00:21:48.151 --> 00:21:52.430\nI simulated a failure by shutting\ndown the interfaces on router four.\n\n403\n00:21:52.430 --> 00:21:55.695\nAnd oddly enough, IPv6 does not pass\nthrough shutdown interfaces, so\n\n404\n00:21:55.695 --> 00:21:58.320\nthat's gonna be our problem right there.\n\n405\n00:21:58.320 --> 00:22:00.980\nAnd so I can jump in and fix that.\n\n406\n00:22:00.980 --> 00:22:04.681\nSo let me just get in and [LAUGH]-\n&gt;&gt; [LAUGH]\n\n407\n00:22:04.681 --> 00:22:06.578\n&gt;&gt; Turns out old layer one, right?\n\n408\n00:22:06.578 --> 00:22:08.405\nSo let's do a no shutdown.\n\n409\n00:22:08.405 --> 00:22:09.407\nThat's an embarrassing problem.\n\n410\n00:22:09.407 --> 00:22:13.455\n&gt;&gt; [LAUGH]\n&gt;&gt; [LAUGH] There we go.\n\n411\n00:22:13.455 --> 00:22:14.699\nSo those are gonna come back up.\n\n412\n00:22:14.699 --> 00:22:15.352\nI see some adjacencies coming up.\n\n413\n00:22:15.352 --> 00:22:17.322\n&gt;&gt; Aye, there we go, better.\n\n414\n00:22:17.322 --> 00:22:18.053\n&gt;&gt; That's nice.\n&gt;&gt; [LAUGH]\n\n415\n00:22:18.053 --> 00:22:20.151\n&gt;&gt; All right, now, what's cool here is,\n\n416\n00:22:20.151 --> 00:22:23.116\nwhat you're seeing on the screen,\nthese adjacencies,\n\n417\n00:22:23.116 --> 00:22:25.310\nidentical to how OSPF worked before.\n\n418\n00:22:25.310 --> 00:22:28.366\nThe debug commands, identical,\nthe show commands, identical,\n\n419\n00:22:28.366 --> 00:22:30.897\njust anywhere you said IP before,\nnow you say, IPv6.\n\n420\n00:22:30.897 --> 00:22:32.510\nThat really makes this stuff easy.\n\n421\n00:22:32.510 --> 00:22:39.460\nSo instead of, show ip opsf neighbor,\nnow I say, show ipv6 ospf neighbor.\n\n422\n00:22:39.460 --> 00:22:40.320\nThere we go, all right.\n\n423\n00:22:40.320 --> 00:22:42.560\nI still see the state as full.\n\n424\n00:22:42.560 --> 00:22:45.730\nYou have, init, two way,\nex-start and full.\n\n425\n00:22:45.730 --> 00:22:48.920\nI see DR for designated routers or BDR or\n\n426\n00:22:48.920 --> 00:22:53.240\nDR other or a hyphen for\npoint to point, all that is the same.\n\n427\n00:22:53.240 --> 00:22:56.805\nHello timers, dead time intervals,\nall that's the same.\n\n428\n00:22:56.805 --> 00:22:58.535\nThe only thing that's really\ndifferent are the addresses.\n\n429\n00:22:58.535 --> 00:23:02.840\nSo, OSPF for\nIPv6 really is not a tough one.\n\n430\n00:23:02.840 --> 00:23:04.480\nAnd I did single area here, right?\n\n431\n00:23:04.480 --> 00:23:06.402\nThese are all in area zero, right?\n\n432\n00:23:06.402 --> 00:23:09.670\nBut multi-area is the same way,\nyou just go to the interfaces and\n\n433\n00:23:09.670 --> 00:23:12.430\nset them in the different areas and now\nall the sudden you're multi-area, right,\n\n434\n00:23:12.430 --> 00:23:14.110\nand you can get your inter-area routes.\n\n435\n00:23:14.110 --> 00:23:19.010\nWhen you do a show ipv6 route and\nlook at the routing table,\n\n436\n00:23:19.010 --> 00:23:23.910\nsee how these guys have Os to the left of\nthem, which correspond to OSPF routes and\n\n437\n00:23:23.910 --> 00:23:29.470\nif I went multi-area like if\nI took here I'll take IPv6.\n\n438\n00:23:29.470 --> 00:23:31.460\nShow IPv6 interface brief.\n\n439\n00:23:32.570 --> 00:23:36.410\nI'm gonna take gi0/0 and\nstick it in a different area.\n\n440\n00:23:36.410 --> 00:23:39.300\nSo let me get into gi0/0.\n\n441\n00:23:39.300 --> 00:23:43.642\nAnd I'll say, ipv6 ospf 1 area 1.\n\n442\n00:23:43.642 --> 00:23:45.627\nSo, I'm gonna move in into\na different area, okay?\n\n443\n00:23:45.627 --> 00:23:49.778\nAs soon as that happens,\nnow that 172.16.00,\n\n444\n00:23:49.778 --> 00:23:54.964\nthe old IPv4 network was now\nFD00:172:16:: That's gonna\n\n445\n00:23:54.964 --> 00:23:59.891\nmove into area one, and so\nnow I should have an inter area route, and\n\n446\n00:23:59.891 --> 00:24:05.960\njust to make sure that happens nice and\nfast, I'm gonna clear ipv6 ospf process.\n\n447\n00:24:07.020 --> 00:24:09.320\nSo even the clear command,\nthe same as the other one,\n\n448\n00:24:09.320 --> 00:24:11.730\nI'm just saying ipv6 instead of ipv4.\n\n449\n00:24:11.730 --> 00:24:15.680\nWe'll let that detach and\nit's all ready gone back to FULL.\n\n450\n00:24:15.680 --> 00:24:18.060\nAnd so\nif I jump all the way over to Router 4 or\n\n451\n00:24:18.060 --> 00:24:21.130\neven all the way to Router 2,\nwe should all ready see it here.\n\n452\n00:24:21.130 --> 00:24:25.980\nWe do a show ipv6 route,\nthere is my old OIA.\n\n453\n00:24:25.980 --> 00:24:28.710\nInstead of OIA,\nit does just say OI now, right.\n\n454\n00:24:28.710 --> 00:24:31.360\nSo that's my Inter Area Route.\n\n455\n00:24:31.360 --> 00:24:34.380\nAnd you'll see the OE1 and\nOE2 so that's showing up and\n\n456\n00:24:34.380 --> 00:24:36.400\nI've got ospf route coming right in.\n\n457\n00:24:36.400 --> 00:24:37.580\nI'm learning the route,\n\n458\n00:24:37.580 --> 00:24:40.670\nI'm adding it to my routing table\nby administrative distance.\n\n459\n00:24:40.670 --> 00:24:41.800\nSame it's used to be.\n\n460\n00:24:41.800 --> 00:24:45.630\nThe metric calculated exactly the same\nway because the metric is based on\n\n461\n00:24:45.630 --> 00:24:49.440\nbandwidth and bandwidth doesn't\nchange based on the protocol you run.\n\n462\n00:24:49.440 --> 00:24:50.680\nSo the metric's the same,\n\n463\n00:24:50.680 --> 00:24:54.350\nthe administrative distance is the same\nThe commands are mostly the same,\n\n464\n00:24:54.350 --> 00:24:58.690\nyou're just adding a V6 to the end\nof IP on every command that you run.\n\n465\n00:24:58.690 --> 00:25:00.970\nEven the debugs aren't changed.\n\n466\n00:25:00.970 --> 00:25:06.980\nIf you debug ipv6 ospf,\nit's still adj, packets and all that.\n\n467\n00:25:06.980 --> 00:25:11.920\nSo, they really is a low\nrisk type implementation and\n\n468\n00:25:11.920 --> 00:25:14.400\nit does make it a lot less painless.\n\n469\n00:25:14.400 --> 00:25:15.950\nThat's basically it.\n\n470\n00:25:15.950 --> 00:25:17.780\nNow when you get this configured,\n\n471\n00:25:18.960 --> 00:25:21.640\njust remember that in the background\nit is using multicast to communicate.\n\n472\n00:25:21.640 --> 00:25:22.820\nWhich it did in IP4 also.\n\n473\n00:25:22.820 --> 00:25:25.670\nIt's just using slightly\ndifferent addresses.\n\n474\n00:25:25.670 --> 00:25:26.690\nIt's communicating out,\n\n475\n00:25:26.690 --> 00:25:30.040\nthe routers find each other,\nthey all behave the way they used to.\n\n476\n00:25:30.040 --> 00:25:31.370\nAnd now they're up and going, so.\n\n477\n00:25:31.370 --> 00:25:32.240\nPretty straightforward.\n\n478\n00:25:32.240 --> 00:25:37.970\n&gt;&gt; Now Don,\nif we have both ospf version two and\n\n479\n00:25:37.970 --> 00:25:42.330\nversion three running on the same\ninterface, is the ospf version\n\n480\n00:25:42.330 --> 00:25:46.330\nthree going to interfere with anything\nthat's routing on ospf version two?\n\n481\n00:25:46.330 --> 00:25:50.000\n&gt;&gt; No, in fact I'm doing it right now cuz\nI never turned it off from our last show.\n\n482\n00:25:50.000 --> 00:25:55.740\nSo on mine if I do show ip protocols.\n\n483\n00:25:55.740 --> 00:25:56.870\nNow that's just ip.\n\n484\n00:25:56.870 --> 00:25:59.670\nSo this is going to show\nme my ipv4 protocols.\n\n485\n00:25:59.670 --> 00:26:04.804\nI can see that I'm running ospf and\nit's running on GI2/0 and 1/0.\n\n486\n00:26:04.804 --> 00:26:07.810\nAnd if I do show ipv6 protocols.\n\n487\n00:26:09.740 --> 00:26:11.800\nThere it is and it's running on GI2/0 1/0.\n\n488\n00:26:11.800 --> 00:26:13.680\nThe two different protocols.\n\n489\n00:26:13.680 --> 00:26:15.240\nSo they don't interfere at all.\n\n490\n00:26:15.240 --> 00:26:17.070\nThey're completely separate.\n\n491\n00:26:17.070 --> 00:26:22.430\nIn fact when I do clear ipv6 ospf 1,\nor ospf process,\n\n492\n00:26:22.430 --> 00:26:26.180\nthat's just doing the ipv6 process\nnot even touching the ipv4 1.\n\n493\n00:26:26.180 --> 00:26:30.710\nAnd I use the same process idea\non both of these guys, but\n\n494\n00:26:30.710 --> 00:26:32.410\ntechnically they're two separate things.\n\n495\n00:26:32.410 --> 00:26:39.180\nSo if I command and I say clear ipv6 ospf\n1, I use process ID 1 on both sides.\n\n496\n00:26:39.180 --> 00:26:44.140\nBut if I do this it's just the ipv6 one.\n\n497\n00:26:44.140 --> 00:26:45.830\nThe ipv4 one doesn't reset.\n\n498\n00:26:45.830 --> 00:26:51.480\nSee how it's going in and doing it and\nshowing OSPFv3 is resetting.\n\n499\n00:26:51.480 --> 00:26:53.340\nZoom in a little more.\n\n500\n00:26:53.340 --> 00:26:58.150\nOSPFv3 is resetting If I\nwere to repeat that and,\n\n501\n00:26:58.150 --> 00:27:01.650\nlet me just leave the ipv6 off and\nmake it ip.\n\n502\n00:27:01.650 --> 00:27:04.280\nNow I'm just gonna clear process one and\n\n503\n00:27:04.280 --> 00:27:08.385\nwhen I do that, you'll see it pop up and\nthe message will say, just.\n\n504\n00:27:08.385 --> 00:27:11.915\nPlaying old OSPF which is\nactually OSPF version two, right?\n\n505\n00:27:11.915 --> 00:27:14.508\nSo they are two completely\nseparate things.\n\n506\n00:27:14.508 --> 00:27:18.335\nThe only thing they share is\nthe letters I and P at the beginning.\n\n507\n00:27:18.335 --> 00:27:20.475\nOtherwise they're two\ncompletely separate protocols.\n\n508\n00:27:20.475 --> 00:27:24.517\nThey do not overlap in any way,\nunless you make them.\n\n509\n00:27:24.517 --> 00:27:25.029\n[LAUGH]\n&gt;&gt; [LAUGH]\n\n510\n00:27:25.029 --> 00:27:25.569\n&gt;&gt; You can,\n\n511\n00:27:25.569 --> 00:27:27.709\nyou can actually make this things overlap.\nThere are certain ways,\n\n512\n00:27:27.709 --> 00:27:30.540\nit's well beyond the scope\nof this certification.\n\n513\n00:27:30.540 --> 00:27:34.430\nBut in its normal implementation,\nthe two are completely separate.\n\n514\n00:27:34.430 --> 00:27:37.300\nThey're just sharing the physical media,\nand that's it.\n\n515\n00:27:37.300 --> 00:27:39.720\n&gt;&gt; So, Don, the same would be\ntrue then of the debug commands.\n\n516\n00:27:39.720 --> 00:27:42.780\nInstead of just doing a debug ip ospf,\n\n517\n00:27:42.780 --> 00:27:47.700\nwe'd just do debug ipv6 ospf and\nthe adjacencies as well?\n\n518\n00:27:47.700 --> 00:27:50.480\n&gt;&gt; Yep, so if I wanna turn that on,\nI'll do a debug ipv6 ospf.\n\n519\n00:27:51.810 --> 00:27:55.670\nWe'll do packets cuz that\none's a little more fun.\n\n520\n00:27:55.670 --> 00:27:57.860\nAnd so oops, packet without an s.\n\n521\n00:27:57.860 --> 00:27:58.620\nThere we go.\n\n522\n00:27:58.620 --> 00:28:03.300\nSo I'll get that running and now every\nipv6 packet that is generated for\n\n523\n00:28:03.300 --> 00:28:05.670\nOSPFv3 is gonna pop up here on my screen.\n\n524\n00:28:05.670 --> 00:28:07.530\nIf I wait it should happen\nwithin ten seconds.\n\n525\n00:28:07.530 --> 00:28:09.120\nI should have done that before\nit would have been faster.\n\n526\n00:28:09.120 --> 00:28:10.090\nThere we go.\n\n527\n00:28:10.090 --> 00:28:11.250\nAnd here comes the messages.\n\n528\n00:28:11.250 --> 00:28:12.560\nI'm still waiting for you.\n\n529\n00:28:12.560 --> 00:28:16.170\nBut here comes the packet and\nit's showing it's OSPFv3.\n\n530\n00:28:16.170 --> 00:28:19.730\nAnd so I can see that right here in the\nversion field even if it didn't tell me\n\n531\n00:28:19.730 --> 00:28:20.750\nsee it's got that v3.\n\n532\n00:28:20.750 --> 00:28:25.190\nAnd so it's coming across I can see\nthe router id that's talking to me\n\n533\n00:28:25.190 --> 00:28:28.870\nright there and the area id that\nthis communication is coming from.\n\n534\n00:28:28.870 --> 00:28:32.550\nSo I can see that information\npopping right in there and\n\n535\n00:28:32.550 --> 00:28:34.940\nit's the same command as\nwe were in before, right?\n\n536\n00:28:34.940 --> 00:28:36.560\nSo it really does take\na lot of the pain out.\n\n537\n00:28:36.560 --> 00:28:39.530\nMakes it simple to switch from\none protocol to another or\n\n538\n00:28:39.530 --> 00:28:40.740\nrun them both simultaneously.\n\n539\n00:28:40.740 --> 00:28:41.870\nWhich is what most of us are gonna do.\n\n540\n00:28:41.870 --> 00:28:44.900\nMost people aren't going to jump right\nover to IPv6 and then cut off IPv4.\n\n541\n00:28:44.900 --> 00:28:47.760\nYou're going to run both simultaneously.\n\n542\n00:28:47.760 --> 00:28:50.440\nNow do keep in mind that you\n\n543\n00:28:50.440 --> 00:28:54.010\nhave two completely separate\nOSPF databases going on.\n\n544\n00:28:54.010 --> 00:28:59.610\nSo, I've technically doubled the amount\nof memory and CPU that OSPF is using.\n\n545\n00:28:59.610 --> 00:29:01.840\nNow most of us,\nit's a trivial amount anyway.\n\n546\n00:29:01.840 --> 00:29:02.460\nIt's not a big deal.\n\n547\n00:29:02.460 --> 00:29:07.300\nBut if you've got a massive network, your\nrouters are going to be working harder.\n\n548\n00:29:07.300 --> 00:29:10.580\nWhen they're running two different\nprotocols at the same time and\n\n549\n00:29:10.580 --> 00:29:14.500\nI've said that before talking\nabout like running OSPF and DIGRP.\n\n550\n00:29:14.500 --> 00:29:17.310\nBut here even running\ntwo instances of OSPF,\n\n551\n00:29:17.310 --> 00:29:21.150\nI'm doubling my work even though\none is IPv4 and one is IPv6.\n\n552\n00:29:21.150 --> 00:29:23.530\nSo you don't wanna run this way forever.\n\n553\n00:29:23.530 --> 00:29:25.580\nIt's a transitionary state right?\n\n554\n00:29:25.580 --> 00:29:28.790\nAs we move people over IPv6,\nwe phase out IPv4, and\n\n555\n00:29:28.790 --> 00:29:31.820\nthen we drop to just supporting IPv6,\nshouldn't be permanent.\n\n556\n00:29:32.900 --> 00:29:36.060\n&gt;&gt; Well Don, that's a great,\nat least introduction for\n\n557\n00:29:36.060 --> 00:29:41.790\nus to take a look at running\nour first IPv6 routing protocol\n\n558\n00:29:41.790 --> 00:29:46.300\nwith OSPF so when we start taking a look\nat that hopefully it is not as painful as\n\n559\n00:29:46.300 --> 00:29:49.710\nyou thought it was going to be\nbecause of the mystery of IPv6.\n\n560\n00:29:49.710 --> 00:29:52.510\nRemember to take a look at those\nadvantages, especially in the lab work,\n\n561\n00:29:52.510 --> 00:29:55.960\nto help you to get familiar with\nthose concepts better as well, and\n\n562\n00:29:55.960 --> 00:29:57.240\nalso those show commands.\n\n563\n00:29:57.240 --> 00:30:01.440\nRemember that the difference here really\nseems to be adding a v6 onto our commands,\n\n564\n00:30:01.440 --> 00:30:04.200\nand that will help you out a lot,\nespecially when you are getting ready for\n\n565\n00:30:04.200 --> 00:30:05.500\nthe exam two.\n\n566\n00:30:05.500 --> 00:30:09.415\n&gt;&gt; Well, that's a great place for us to\nalso end this episode then signing off for\n\n567\n00:30:09.415 --> 00:30:12.100\nITPro.TV I've been your host Ronnie Wong.\n\n568\n00:30:13.120 --> 00:30:13.835\n&gt;&gt; And I’m Don Pezet.\n\n569\n00:30:13.835 --> 00:30:18.125\n&gt;&gt; [LAUGH] Stay tuned right here for\nmore Cisco CCNA Routing and Switching.\n\n570\n00:30:18.125 --> 00:30:27.600\n[SOUND]\n\n",
          "vimeoId": "181120722"
        },
        {
          "description": "In this episode, Daniel and Don introduce you the the Enhanced Interior Gateway Routing Protocol(EIGRP). Here they will discuss what sets EIGRP apart from the other dynamic routing protocols. They look at how EIGRP calculates its metric, its auto route summarization, and route selection.",
          "length": "2023",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/cisco-ccna200105/cisco-ccna200105-2-6-eigrp-082516-1.jpg",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/cisco-ccna200105/cisco-ccna200105-2-6-eigrp-082516-1-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/cisco-ccna200105/cisco-ccna200105-2-6-eigrp-082516-1-sm.jpg",
          "title": "Enhanced Interior Gateway Routing Protocol",
          "transcript": "WEBVTT\n\n1\n00:00:00.000 --> 00:00:10.000\n[MUSIC]\n\n2\n00:00:12.128 --> 00:00:16.490\nAll right, greetings everyone, and welcome\nto another great episode of ITProTV.\n\n3\n00:00:16.490 --> 00:00:19.680\nI'm your host Daniel Lowrie, and in\ntoday's episode we are moving forward with\n\n4\n00:00:19.680 --> 00:00:22.880\nmore on our CCNA routing and\nswitching series.\n\n5\n00:00:22.880 --> 00:00:26.250\nJoining us back in the studio again\ntoday is our good friend, Mr. Don Pezet.\n\n6\n00:00:26.250 --> 00:00:27.790\nDon, welcome back sir.\n\n7\n00:00:27.790 --> 00:00:28.700\nHow's it going today?\n\n8\n00:00:28.700 --> 00:00:29.850\n&gt;&gt; It is going swell, Daniel.\n\n9\n00:00:29.850 --> 00:00:34.040\nI'm excited because we are kicking off\nan all new routing protocol today.\n\n10\n00:00:34.040 --> 00:00:36.050\nIn CCENT we learned about rip.\n\n11\n00:00:36.050 --> 00:00:37.770\nThe routing information protocol.\n\n12\n00:00:37.770 --> 00:00:42.920\nIn our last few episodes we focused\non OSPF the open short path protocol.\n\n13\n00:00:42.920 --> 00:00:44.450\nNow we're gonna switch gears and\n\n14\n00:00:44.450 --> 00:00:48.940\ntackle EIGRP the enhanced interior routing\ngateway routing protocol a protocol.\n\n15\n00:00:48.940 --> 00:00:51.370\nAll that is so big and powerful,\n\n16\n00:00:51.370 --> 00:00:54.230\nthat I had to switch host [LAUGH]\n&gt;&gt; [LAUGH].\n\n17\n00:00:54.230 --> 00:00:55.610\nIt's like me, big and powerful.\n\n18\n00:00:55.610 --> 00:00:56.468\n&gt;&gt; That,\n&gt;&gt; [LAUGH]\n\n19\n00:00:56.468 --> 00:00:57.360\n&gt;&gt; maybe [LAUGH].\n\n20\n00:00:57.360 --> 00:00:59.055\n&gt;&gt; You wanna test that theory?\n\n21\n00:00:59.055 --> 00:01:00.840\n[LAUGH]\n&gt;&gt; So, we want to see how much food\n\n22\n00:01:00.840 --> 00:01:03.260\nwe can route to the protocol,\n&gt;&gt; [LAUGH]\n\n23\n00:01:03.260 --> 00:01:05.620\n&gt;&gt; so you had your IP\n\n24\n00:01:05.620 --> 00:01:07.688\n&gt;&gt; Cant wait to see you in [CROSSTALK]\n\n25\n00:01:07.688 --> 00:01:08.522\n[LAUGH]\n&gt;&gt; [LAUGH]\n\n26\n00:01:08.522 --> 00:01:09.980\n&gt;&gt; You had your IP, its a big protocol.\n\n27\n00:01:09.980 --> 00:01:11.680\nIt is a powerful protocol and\n\n28\n00:01:11.680 --> 00:01:16.000\nI know in the last episode let's recap\nsome of the things I said about OSPF.\n\n29\n00:01:16.000 --> 00:01:18.260\nI said OSPF is a great protocol.\n\n30\n00:01:18.260 --> 00:01:19.260\nIt's scalable.\n\n31\n00:01:19.260 --> 00:01:20.780\nIt can route the entire world if we want.\n\n32\n00:01:20.780 --> 00:01:25.080\nIt is the most popular interior\ngateway protocol in the world.\n\n33\n00:01:25.080 --> 00:01:28.520\nIf you go and get a job somewhere,\nyou are gonna see OSPF.\n\n34\n00:01:28.520 --> 00:01:30.900\nSo if I said all that\nnice stuff about OSPF,\n\n35\n00:01:30.900 --> 00:01:33.420\nwhy are we even bothering with EIGRP,\nright?\n\n36\n00:01:33.420 --> 00:01:36.840\nWell let me tell you EIGRP\nis the better protocol.\n\n37\n00:01:36.840 --> 00:01:38.290\nOf the routing protocols we learned about,\n\n38\n00:01:38.290 --> 00:01:41.490\nEIGRP is the most powerful and\nit makes the best decisions.\n\n39\n00:01:41.490 --> 00:01:44.880\nAnd it does it all very,\nvery quickly and efficiently.\n\n40\n00:01:44.880 --> 00:01:49.905\nEIGRP is the best interior gateway\nprotocol available to us to us right now.\n\n41\n00:01:49.905 --> 00:01:51.085\n&gt;&gt; So everyone is using this then.\n\n42\n00:01:51.085 --> 00:01:52.377\nThis is the [INAUDIBLE].\n\n43\n00:01:52.377 --> 00:01:55.071\nYou jump on a router,\nit's going to be EIGRP city.\n\n44\n00:01:55.071 --> 00:01:56.055\n&gt;&gt; Sadly, no.\n&gt;&gt; [LAUGH]\n\n45\n00:01:56.055 --> 00:01:58.165\n&gt;&gt; So I will stand by every statement I\n\n46\n00:01:58.165 --> 00:02:00.995\nmade previously,\nwhich is OSPF is the most popular.\n\n47\n00:02:00.995 --> 00:02:03.915\nAnd if you get a job out there in\nthe real world, you will run into OSPF.\n\n48\n00:02:05.020 --> 00:02:07.610\nBut if EIGRP is better, why is that?\n\n49\n00:02:07.610 --> 00:02:10.610\nAnd sometimes the best\nprotocol doesn't always win.\n\n50\n00:02:10.610 --> 00:02:12.750\nAnd it usually comes down to money.\n\n51\n00:02:12.750 --> 00:02:15.690\nRight?\nThe O in Open Shortest Path First stands\n\n52\n00:02:15.690 --> 00:02:16.450\nfor open.\n\n53\n00:02:16.450 --> 00:02:17.880\nIt's an open standard.\n\n54\n00:02:17.880 --> 00:02:20.260\nAnybody can support it, so everybody does.\n\n55\n00:02:20.260 --> 00:02:21.430\nThat makes it flexible.\n\n56\n00:02:21.430 --> 00:02:22.800\nPeople use it.\n\n57\n00:02:22.800 --> 00:02:25.010\nEIGRP?\nIt's Cisco.\n\n58\n00:02:25.010 --> 00:02:26.690\nIt's Cisco proprietary.\n\n59\n00:02:26.690 --> 00:02:28.070\nThey created it.\n\n60\n00:02:28.070 --> 00:02:30.040\nAnd who knows that works\nbetter than Cisco, right?\n\n61\n00:02:30.040 --> 00:02:31.050\nThat's their job.\n\n62\n00:02:31.050 --> 00:02:33.030\nThat's the market they've cornered.\n\n63\n00:02:33.030 --> 00:02:36.490\nAnd they really do have a great\nunderstanding of what's going on.\n\n64\n00:02:36.490 --> 00:02:40.150\nSo they created a protocol that\nmakes excellent routing decisions.\n\n65\n00:02:40.150 --> 00:02:42.270\nI'll show you guys how it\nworks here in a little bit.\n\n66\n00:02:42.270 --> 00:02:44.450\nHow it makes better\ndecisions than OSPF does.\n\n67\n00:02:44.450 --> 00:02:48.560\nAnd it does them more quickly and\nit really does do a great job.\n\n68\n00:02:48.560 --> 00:02:50.660\nBut because it's proprietary.\n\n69\n00:02:50.660 --> 00:02:56.510\nIf anybody else wants to support EIGRP,\nthey've got a license it from Cisco.\n\n70\n00:02:56.510 --> 00:03:00.945\nAnd to my knowledge nobody has, I've never\nencountered any third party equipment that\n\n71\n00:03:00.945 --> 00:03:04.890\nsupported the EIGRP well it's\npossible I just haven't seen it.\n\n72\n00:03:04.890 --> 00:03:08.281\nAnd so what happens is these companies\nthey say well I could pay Cisco for that.\n\n73\n00:03:08.281 --> 00:03:08.857\nOr.\n\n74\n00:03:08.857 --> 00:03:09.608\n&gt;&gt; Or use OSPF?\n\n75\n00:03:09.608 --> 00:03:11.001\n[LAUGH]\n&gt;&gt; Yeah.\n\n76\n00:03:11.001 --> 00:03:11.574\nIt's good enough.\n\n77\n00:03:11.574 --> 00:03:14.660\n&gt;&gt; [LAUGH]\n&gt;&gt; [LAUGH] So that's where we are.\n\n78\n00:03:14.660 --> 00:03:17.380\nAnd so\neven though EIGRP is the better protocol\n\n79\n00:03:17.380 --> 00:03:19.750\nit's very uncommon out\nthere in the real world.\n\n80\n00:03:19.750 --> 00:03:22.180\nUnless you encounter\nshops that are all Cisco.\n\n81\n00:03:22.180 --> 00:03:23.640\nYou have Cisco routers,\n\n82\n00:03:23.640 --> 00:03:27.920\nCisco switches, Cisco firewalls,\nyou can throw any IGRP it works great.\n\n83\n00:03:27.920 --> 00:03:29.190\nIt does a wonderful job.\n\n84\n00:03:29.190 --> 00:03:31.626\nThe instant you bring in\nany third party equipment,\n\n85\n00:03:31.626 --> 00:03:35.402\nnow you've either got to run two protocols\nsimultaneously or flip over to OSPF.\n\n86\n00:03:35.402 --> 00:03:36.651\nSo that's kind of the big drawback on it.\n\n87\n00:03:36.651 --> 00:03:39.327\nEIGRP, the enhanced interior\ngateway routing protocol,\n\n88\n00:03:39.327 --> 00:03:41.970\nit's actually the second\nversion of the protocol.\n\n89\n00:03:41.970 --> 00:03:46.330\nIt started as IGRP,\nthe interior gateway routing protocol\n\n90\n00:03:46.330 --> 00:03:49.580\nwhich was what Cisco created back\nin the late 80s and early 90s.\n\n91\n00:03:49.580 --> 00:03:51.730\nIt was a class full routing protocol,\n\n92\n00:03:51.730 --> 00:03:54.930\nin other words it adhered\nto the IPv4 classes.\n\n93\n00:03:54.930 --> 00:03:59.150\nBut one of the things that set aside\nfrom the other guys that are out there\n\n94\n00:03:59.150 --> 00:04:02.790\nIs that it didn't just focus on IPv4,\nright?\n\n95\n00:04:02.790 --> 00:04:05.620\nOSPF version 2, just IPv4.\n\n96\n00:04:05.620 --> 00:04:07.680\nOSPF version 3, just IPv6.\n\n97\n00:04:09.120 --> 00:04:13.220\nBut EIGRP, they wrote it as\na routing engine first, and\n\n98\n00:04:13.220 --> 00:04:18.170\nthen they wrote a module that sticks\non to it that adds IPv4 support.\n\n99\n00:04:18.170 --> 00:04:20.770\nAnd so, any time a new protocol comes out,\nthey just write a new module and\n\n100\n00:04:20.770 --> 00:04:22.190\nstick it right on there.\n\n101\n00:04:22.190 --> 00:04:27.200\nAnd so EIGRP, it can route AppleTalk,\nit can route IPX/SPX,\n\n102\n00:04:27.200 --> 00:04:30.640\nit can route some of\nthe deck net functionality.\n\n103\n00:04:30.640 --> 00:04:33.240\nThere's protocols that it can route\n\n104\n00:04:33.240 --> 00:04:37.620\nthat the other dynamic writing protocol\ndon't even cover, don't even recognize.\n\n105\n00:04:37.620 --> 00:04:41.140\nSo that makes EIGRP very powerful in an\nenterprise environment where you got those\n\n106\n00:04:41.140 --> 00:04:43.510\nprotocols, it becomes one of\nthe only choices you have.\n\n107\n00:04:43.510 --> 00:04:47.040\nBut let's be realistic,\nwho's running ISPX today?\n\n108\n00:04:48.210 --> 00:04:48.900\nNobody.\n\n109\n00:04:48.900 --> 00:04:52.850\nSo the fact that EIGRP can do that\nisn't necessarily a great big thing.\n\n110\n00:04:52.850 --> 00:04:56.970\nBut when IPv6 came out Cisco\ndidn't have to rewrite EIGRP\n\n111\n00:04:56.970 --> 00:04:58.630\nfrom scratch like OSPF had do.\n\n112\n00:04:58.630 --> 00:05:02.600\nOSPF Version 3 is a complete from\nthe scratch rewrite of OSPF Version 2.\n\n113\n00:05:02.600 --> 00:05:08.350\nWhen with the EIGRP new set to write\nan IPv6 module and stick it around there.\n\n114\n00:05:08.350 --> 00:05:11.430\nAnd when IPv7 or IPv8 comes out there's\nright a module and stick it on there.\n\n115\n00:05:11.430 --> 00:05:13.050\nSo, it is very expandable.\n\n116\n00:05:13.050 --> 00:05:17.120\nIt's got that customize ability to it\nthat makes it a powerful protocol.\n\n117\n00:05:17.120 --> 00:05:20.470\n&gt;&gt; Well, Don you've been touting\nthe greatness of EIGRP here for\n\n118\n00:05:20.470 --> 00:05:22.555\nless 10 minutes or so.\n\n119\n00:05:22.555 --> 00:05:24.400\n&gt;&gt; [LAUGH]\n&gt;&gt; And it does sounds phenomenal but,\n\n120\n00:05:24.400 --> 00:05:26.320\nOSPF has more prolific.\n\n121\n00:05:26.320 --> 00:05:29.220\nWhat is it that really sets apart EIGRP,\n\n122\n00:05:29.220 --> 00:05:34.130\nI guess EIGRP apart from OSPF All right,\nso the two main things are going to\n\n123\n00:05:34.130 --> 00:05:38.220\nbe the efficiency and the intelligence\nof the decisions that it makes.\n\n124\n00:05:38.220 --> 00:05:40.010\nRight?\nWell, let's start with efficiency.\n\n125\n00:05:40.010 --> 00:05:46.390\nIn OSPF, every router knows about\nevery other router within your area.\n\n126\n00:05:46.390 --> 00:05:49.340\nSo if you have a single\narea OSPF environment,\n\n127\n00:05:49.340 --> 00:05:52.410\nthen every router knows about every\nother router that's out there.\n\n128\n00:05:52.410 --> 00:05:56.500\nSo when routing updates happen,\nall the routers have to recalculate, and\n\n129\n00:05:56.500 --> 00:05:58.490\nif you want to fix that,\nyou have to go to multi-area.\n\n130\n00:05:58.490 --> 00:06:01.850\nSo now your environments are getting\nmore and more complex because of that.\n\n131\n00:06:01.850 --> 00:06:05.170\nWith EGIRP, we don't have that.\n\n132\n00:06:05.170 --> 00:06:08.220\nEGIRP, deep down inside,\nis a distance vector protocol.\n\n133\n00:06:08.220 --> 00:06:09.810\nAnd I know what you're thinking,\nthis is vector.\n\n134\n00:06:09.810 --> 00:06:11.570\nIt's just hop count, that stinks.\n\n135\n00:06:11.570 --> 00:06:12.990\nWell, I'll talk about that in a minute.\n\n136\n00:06:12.990 --> 00:06:13.930\nIt fixes that.\n\n137\n00:06:13.930 --> 00:06:18.000\nBut with distance vector, a router\nonly talks to its direct neighbors.\n\n138\n00:06:18.000 --> 00:06:18.680\nAnd that's it.\n\n139\n00:06:18.680 --> 00:06:22.620\nIt doesn't talk anybody beyond the\nneighbors so it's far less communications.\n\n140\n00:06:22.620 --> 00:06:26.750\nSo we can communicate directly with the\nneighbors, and get that information, and\n\n141\n00:06:26.750 --> 00:06:29.420\njust handle a much smaller set of data.\n\n142\n00:06:29.420 --> 00:06:32.120\nWe don't need a giant picture\nof the whole network anymore.\n\n143\n00:06:32.120 --> 00:06:35.460\nWe just get this little subset\nof data from our neighbor Now,\n\n144\n00:06:35.460 --> 00:06:38.370\nwe know that because we don't see beyond\nthe neighbor that loops can happen.\n\n145\n00:06:39.420 --> 00:06:41.870\nThe EGIRP has loop protection\nbuilt into it though.\n\n146\n00:06:41.870 --> 00:06:46.210\nBack in the CCENT show, we learned\nabout split horizon, poison reverse,\n\n147\n00:06:46.210 --> 00:06:47.340\ncount to infinity.\n\n148\n00:06:47.340 --> 00:06:50.790\nAnd the different problems there and\nhow Cisco fixes those for\n\n149\n00:06:50.790 --> 00:06:52.120\nus in the router already.\n\n150\n00:06:52.120 --> 00:06:56.640\nSo while a loop is possible, it's already\nbeing prevented by those measures and\n\n151\n00:06:56.640 --> 00:06:57.760\nwe don't have to configure those.\n\n152\n00:06:57.760 --> 00:07:00.500\nThose are already on and\nrunning by default in our system.\n\n153\n00:07:00.500 --> 00:07:02.840\nThey protect EGIRP just\nlike they protect rip so\n\n154\n00:07:02.840 --> 00:07:04.780\nwe don't have to worry about that, right.\n\n155\n00:07:04.780 --> 00:07:07.580\nSo on the efficiency side, smart database.\n\n156\n00:07:07.580 --> 00:07:10.950\nLess RAM, less CPU makes decisions faster.\n\n157\n00:07:10.950 --> 00:07:13.980\nNow you know does not require higher and\nhardware for managing thousands or\n\n158\n00:07:13.980 --> 00:07:15.900\ntens of thousands of routes.\n\n159\n00:07:15.900 --> 00:07:17.310\nSmarter decisions.\n\n160\n00:07:17.310 --> 00:07:18.080\nAll right.\n\n161\n00:07:18.080 --> 00:07:22.930\nSmarter decisions a are real\nimportant piece of EIGRP.\n\n162\n00:07:22.930 --> 00:07:27.610\nWith OSPF, It uses, really, one metric,\nand that metric is called cost.\n\n163\n00:07:27.610 --> 00:07:31.200\nAnd cost is really just\na reflection of bandwidth, right?\n\n164\n00:07:31.200 --> 00:07:35.910\nSo if I were to, let's see here,\nif I were to, you know what,\n\n165\n00:07:35.910 --> 00:07:37.010\nI'll show you an example.\n\n166\n00:07:37.010 --> 00:07:41.520\nSo at OSPF, if I were to try and\nfigure out cost, right, cost equals\n\n167\n00:07:41.520 --> 00:07:47.230\na reference bandwidth divided\nby our actual bandwidth.\n\n168\n00:07:47.230 --> 00:07:48.120\nRight?\n\n169\n00:07:48.120 --> 00:07:51.886\nAnd when we do that, when we kind\nof run that little formula right,\n\n170\n00:07:51.886 --> 00:07:55.069\nour reference bandwidth\ndivided by actual bandwidth.\n\n171\n00:07:55.069 --> 00:07:58.165\nWell, that can be\nproblematic in some cases.\n\n172\n00:07:58.165 --> 00:08:03.603\nSo for example, it might my reference\nbandwidth is always 100 megabit.\n\n173\n00:08:03.603 --> 00:08:07.010\nSo if I write that out in bits,\nthat's 100 million bits.\n\n174\n00:08:07.010 --> 00:08:08.600\nThat's my reference bandwidth.\n\n175\n00:08:08.600 --> 00:08:14.580\nAnd if I'm on a 10 megabit line,\nso like that, and I\n\n176\n00:08:14.580 --> 00:08:18.460\ntake that 10 meg line and I run it through\nthis formula, what do I end up with?\n\n177\n00:08:18.460 --> 00:08:21.526\nI end up with a cost of 10, right?\n\n178\n00:08:21.526 --> 00:08:22.701\nYeah that's good.\n&gt;&gt; I think that's right.\n\n179\n00:08:22.701 --> 00:08:25.780\n&gt;&gt; So\na 10 megabit line would have a cost of 10.\n\n180\n00:08:25.780 --> 00:08:30.868\nAnd if I have 100 megabit line,\nright, that would be 100\n\n181\n00:08:30.868 --> 00:08:37.310\nmillion bits divided by 100,000,000 bits,\nwhich would equal 1.\n\n182\n00:08:37.310 --> 00:08:39.920\nThe lower cost is the one\nthat we're gonna pick.\n\n183\n00:08:39.920 --> 00:08:44.740\nSo OSPF is gonna properly recognize\nthat a 100 megabit line is better than\n\n184\n00:08:44.740 --> 00:08:46.970\na 10 megabit line.\n\n185\n00:08:46.970 --> 00:08:48.840\nThat's good, that's what we want.\n\n186\n00:08:48.840 --> 00:08:50.910\nWhere it gets a little hairy\nthough is higher bandwidth,\n\n187\n00:08:50.910 --> 00:08:52.730\nlike what we would have on a LAN.\n\n188\n00:08:52.730 --> 00:08:54.810\nWhat happens if we have a gigabyte line?\n\n189\n00:08:54.810 --> 00:09:00.600\nWell a gigabit line would\nbe 1 billion bits, right?\n\n190\n00:09:00.600 --> 00:09:02.378\nSorry, my reference\nbandwidth never changes.\n\n191\n00:09:02.378 --> 00:09:04.489\nThe reference bandwidth\nis always 100 megabit.\n\n192\n00:09:04.489 --> 00:09:05.818\nIt's my actual bandwidth that changes.\n\n193\n00:09:05.818 --> 00:09:08.797\nThat's gonna be 1,000,000 bits.\n\n194\n00:09:08.797 --> 00:09:09.473\n&gt;&gt; 1 billion, with a b.\n\n195\n00:09:09.473 --> 00:09:11.520\n&gt;&gt; Billion, there we go.\n\n196\n00:09:11.520 --> 00:09:15.088\nAnd what is 1 billion bits gonna\nwork out to in this little formula?\n\n197\n00:09:15.088 --> 00:09:20.480\n0.1, all right, but the problem here is\nthat OSPF is gonna round the cost up.\n\n198\n00:09:20.480 --> 00:09:26.440\nOSPF always rounds the cost up, and\nso this cost is actually gonna be 1.\n\n199\n00:09:26.440 --> 00:09:29.350\nAnd OSPF will recognize a 100 megabit and\n\n200\n00:09:29.350 --> 00:09:32.940\na gigabit line as equal and\nput them both in the routing table, right.\n\n201\n00:09:32.940 --> 00:09:34.080\nThat's a problem.\n\n202\n00:09:34.080 --> 00:09:39.410\nOSPF does great when we're talking about\nWAN links that are 100 megabits and lower.\n\n203\n00:09:39.410 --> 00:09:43.120\nBut when you get over 100 megabit,\nOSPF starts to break down a bit.\n\n204\n00:09:43.120 --> 00:09:46.440\nAnd it doesn't necessarily make\nthe best decisions that it can, and\n\n205\n00:09:46.440 --> 00:09:47.100\nyou can tweak that.\n\n206\n00:09:47.100 --> 00:09:48.800\nYou can change what your\nreference bandwidth is and\n\n207\n00:09:48.800 --> 00:09:54.070\ntry and fix that, but\nEIGRP already has that fixed.\n\n208\n00:09:54.070 --> 00:09:57.871\nEIGRP uses bandwidth also, it actually\nuses several different metrics, but\n\n209\n00:09:57.871 --> 00:09:59.378\nlet's start with bandwidth.\n\n210\n00:09:59.378 --> 00:10:01.028\nAnd when it uses bandwidth,\n\n211\n00:10:01.028 --> 00:10:04.025\nit has a simple formula like\nthis that it uses also.\n\n212\n00:10:04.025 --> 00:10:05.040\nNow, it doesn't call it cost.\n\n213\n00:10:05.040 --> 00:10:08.800\nIn EIGRP,\nit's just called bandwidth, right?\n\n214\n00:10:08.800 --> 00:10:13.930\nAnd the formula for bandwidth is\nactually a reference bandwidth\n\n215\n00:10:13.930 --> 00:10:17.560\nwhich in EIGRP is not 100 megabit.\n\n216\n00:10:17.560 --> 00:10:20.169\nIn EIGRP,\nthe reference bandwidth is 10 megabit.\n\n217\n00:10:20.169 --> 00:10:22.668\nSo it's actually lower, now,\nnormally that would be bad.\n\n218\n00:10:22.668 --> 00:10:26.962\nThat would mean if this were OSPF\nwith a 10 megabit bandwidth, then-\n\n219\n00:10:26.962 --> 00:10:27.860\n&gt;&gt; You're making the problem worse.\n\n220\n00:10:27.860 --> 00:10:31.828\n&gt;&gt; Yeah, 10 megabit, 100 megabit,\nand a gigabit would all equal 1,\n\n221\n00:10:31.828 --> 00:10:35.100\nversus in OSPF at least 10\nmegabit was viewed separately.\n\n222\n00:10:35.100 --> 00:10:37.970\nSo the reference bandwidth\nis only 10 megabit, and\n\n223\n00:10:37.970 --> 00:10:41.250\nit's gonna divide that\nby the actual bandwidth.\n\n224\n00:10:41.250 --> 00:10:45.260\nBut where it gets better is,\nwhat Cisco did is they said well,\n\n225\n00:10:45.260 --> 00:10:48.120\nwe can fix that problem\nof rounding pretty easy.\n\n226\n00:10:48.120 --> 00:10:50.760\nWe're going to go ahead and\ndo that division, and then what\n\n227\n00:10:50.760 --> 00:10:54.510\nwe'll just do is take whatever the result\nis and multiply it by 256, right?\n\n228\n00:10:56.720 --> 00:11:01.780\nBy multiplying it by 256, you can take\nwhat would be a decimal number and\n\n229\n00:11:01.780 --> 00:11:03.730\nmove it significantly higher.\n\n230\n00:11:03.730 --> 00:11:07.480\nAnd so now, those two numbers\ndon't have to get rounded anymore.\n\n231\n00:11:07.480 --> 00:11:11.070\nWe're basically kinda killing off\nthe decimal places and making it larger.\n\n232\n00:11:11.070 --> 00:11:13.825\nNow, as a result,\nwhen you look at an EIGRP metric,\n\n233\n00:11:13.825 --> 00:11:15.589\nthe numbers are going to be huge.\n\n234\n00:11:15.589 --> 00:11:19.606\nIn OSPF, they were numbers like 1,\nor 10, 20, 100.\n\n235\n00:11:19.606 --> 00:11:23.555\nIn EIGRP, cuz we're multiplying by 256,\nyou'll see metrics that are in\n\n236\n00:11:23.555 --> 00:11:27.100\nthe millions, because we're\nreally amplifying that number.\n\n237\n00:11:27.100 --> 00:11:31.220\nBut the whole reason we do that is\nto make sure that we don't have any\n\n238\n00:11:31.220 --> 00:11:33.660\nrounding errors when we start\nto calculate something.\n\n239\n00:11:33.660 --> 00:11:38.330\nSo, in EIGRP,\nif I were to take a 10 megabit line and\n\n240\n00:11:38.330 --> 00:11:41.775\nrun it through this or 100 megabit line or\na gigabit line or 10 or\n\n241\n00:11:41.775 --> 00:11:45.535\n40 gigabit line,\nit's not gonna treat them all as 1.\n\n242\n00:11:45.535 --> 00:11:47.450\nIt's gonna be multiplying by 256 so\n\n243\n00:11:47.450 --> 00:11:50.345\nwe get actual numbers that it can\nthen compare and tell the difference.\n\n244\n00:11:50.345 --> 00:11:52.045\nIt will make a smarter decision.\n\n245\n00:11:52.045 --> 00:11:54.645\n&gt;&gt; Don, do we still get any kind of,\n\n246\n00:11:54.645 --> 00:11:57.333\nkinda like when you said OSPF\nwill do the rounding thing and\n\n247\n00:11:57.333 --> 00:12:02.590\nit'll actually make a faster line\nequal to a slower line, right?\n\n248\n00:12:02.590 --> 00:12:06.340\nDo we have any of that kind of problems\nwith EGIRP or is it just problem free?\n\n249\n00:12:06.340 --> 00:12:09.180\n&gt;&gt; It only has that\nproblem if you want it to.\n\n250\n00:12:09.180 --> 00:12:10.460\n&gt;&gt; There are times you might want that.\n\n251\n00:12:10.460 --> 00:12:13.540\nYou might say, I really want to treat\nthese two lines as equal even though they\n\n252\n00:12:13.540 --> 00:12:16.470\naren't, and you can tell EGIRP to do that.\n\n253\n00:12:16.470 --> 00:12:19.470\nNow, it's not on this exam, but for those\nof you that go on to the CCNP will see it,\n\n254\n00:12:19.470 --> 00:12:22.560\nit's called unequal cost load balancing.\n\n255\n00:12:22.560 --> 00:12:26.060\nIt's a feature you can turn on in EIGRP,\nit's off by default though.\n\n256\n00:12:26.060 --> 00:12:29.098\nSo by default it'll see high bandwidth\nlines as different than low bandwidth,\n\n257\n00:12:29.098 --> 00:12:31.980\neven when we're talking about\nthese higher bandwidth numbers.\n\n258\n00:12:31.980 --> 00:12:34.580\nIt'll tell them apart and\nit'll make the right decision.\n\n259\n00:12:34.580 --> 00:12:36.762\nSo let me just give you a quick\nexample of one of the metrics.\n\n260\n00:12:36.762 --> 00:12:41.299\nI'll do a T1 line right,\nwhich would be 10 megabit,\n\n261\n00:12:41.299 --> 00:12:45.642\nright, and that would be\ndivided by a T1 line which is\n\n262\n00:12:45.642 --> 00:12:50.485\nnormally 1.544 megabit or\n1,544 bits, right.\n\n263\n00:12:50.485 --> 00:12:53.728\nSo, shoot, you know what,\nit's actually kilobits so\n\n264\n00:12:53.728 --> 00:12:56.490\nlet me just punch that in correctly.\n\n265\n00:12:56.490 --> 00:13:02.284\nAnd then we're gonna take that and\nwe're gonna multiply that by 256.\n\n266\n00:13:02.284 --> 00:13:03.474\nAnd when we do that,\n\n267\n00:13:03.474 --> 00:13:08.450\nnow we're gonna get what the actual\nbandwidth on that link will be, all right.\n\n268\n00:13:08.450 --> 00:13:11.090\nSo by multiplying it out we're gonna\nend up with a much bigger number.\n\n269\n00:13:11.090 --> 00:13:14.385\nIn this case we're gonna end up with, and\n\n270\n00:13:14.385 --> 00:13:19.200\nlet's see if I can do some quick\nmath off my cheat sheet here.\n\n271\n00:13:19.200 --> 00:13:26.130\n1,658,031, right there, right?\n\n272\n00:13:26.130 --> 00:13:28.440\nSo that's a really weird\nmetric to look at.\n\n273\n00:13:28.440 --> 00:13:31.760\nWhen I look at that, I don't look at it\nand say, that's a 1.544 megabit line.\n\n274\n00:13:31.760 --> 00:13:36.460\nI look at that and I see 1 million\n650- what the heck is that, right?\n\n275\n00:13:36.460 --> 00:13:40.140\nBut now it's actually getting a number and\nthe lower number is still gonna win,\n\n276\n00:13:40.140 --> 00:13:43.385\nand it's able to identify which one is\ngonna be the one that is preferred.\n\n277\n00:13:43.385 --> 00:13:45.590\nSo you'll see weird metrics like this\nwhen we actually go to implement it.\n\n278\n00:13:45.590 --> 00:13:48.718\nBut that's a big difference\nbetween EIGRP and OSPF,\n\n279\n00:13:48.718 --> 00:13:51.870\nthat is gonna make a difference,\nall right?\n\n280\n00:13:51.870 --> 00:13:56.990\nThe other thing that EIGRP does that's\nnice is it doesn't rely just on bandwidth.\n\n281\n00:13:56.990 --> 00:13:59.600\nBandwidth is just one metric to EIGRP,\n\n282\n00:13:59.600 --> 00:14:04.720\nEIGRP actually has support for,\nthis where it gets kind of weird.\n\n283\n00:14:04.720 --> 00:14:08.530\nIt carries five different metrics, but\nit actually only uses four of them.\n\n284\n00:14:08.530 --> 00:14:11.747\nSo it has support for\nfour different metrics, right?\n\n285\n00:14:11.747 --> 00:14:14.300\nLet me kinda show you what I mean.\n\n286\n00:14:14.300 --> 00:14:21.360\nSo, when we talk about EIGRP,\nEIGRP is a formula that runs.\n\n287\n00:14:21.360 --> 00:14:25.290\nAnd the formula factors in\nthese different metrics, right?\n\n288\n00:14:25.290 --> 00:14:28.110\nIn OSPF, you have what was\ncalled the SPF algorithm,\n\n289\n00:14:28.110 --> 00:14:30.490\nthe Shortest Path First algorithm.\n\n290\n00:14:30.490 --> 00:14:35.021\nIn EIGRP, you have what's called\nthe defusing update algorithm,\n\n291\n00:14:35.021 --> 00:14:38.927\nwhich Cisco normally abbreviated as DUAL,\nD-U-A-L.\n\n292\n00:14:38.927 --> 00:14:41.914\nD is for difusing, U is for\nupdate, and AL is algorithm,\n\n293\n00:14:41.914 --> 00:14:43.672\nthey cheated a little bit there.\n\n294\n00:14:43.672 --> 00:14:46.310\nSo it's the DUAL algorithm.\n\n295\n00:14:46.310 --> 00:14:49.200\nThat's a little redundant but\nthe difusing update algorithm.\n\n296\n00:14:49.200 --> 00:14:52.936\nAnd the machine, the engine, the formula\nthat's running in the background,\n\n297\n00:14:52.936 --> 00:14:55.775\nthe full name of it,\nI doubt that this will be on the exam, but\n\n298\n00:14:55.775 --> 00:14:59.983\nfor your own reference, is difusing update\nalgorithm finite-state machine, right?\n\n299\n00:14:59.983 --> 00:15:04.110\nSo this is it, basically looking at\nthe routes that have a limited number of\n\n300\n00:15:04.110 --> 00:15:06.666\npossibilities, right, a finite state, and\n\n301\n00:15:06.666 --> 00:15:10.946\nrunning the calculation to determine\nwhich one is the best and selecting it.\n\n302\n00:15:10.946 --> 00:15:15.067\n&gt;&gt; I guess DUALFSM didn't roll off\nthe tongue as well as DUAL did.\n\n303\n00:15:15.067 --> 00:15:17.197\n&gt;&gt; No, it was just a little too long for\nthem or something, so\n\n304\n00:15:17.197 --> 00:15:19.220\nthey tried to make our\nlife a little easier.\n\n305\n00:15:19.220 --> 00:15:23.970\nNow, I'm gonna color this one red down\nhere, and I've got two colored in blue.\n\n306\n00:15:23.970 --> 00:15:28.820\nThese are the five metrics\nthat EIGRP supports,\n\n307\n00:15:28.820 --> 00:15:32.080\nall right, but\nthey're not all created equal.\n\n308\n00:15:32.080 --> 00:15:36.630\nIn fact,\nby default EIGRP only uses two of them,\n\n309\n00:15:36.630 --> 00:15:39.140\nbandwidth and delay, these first two.\n\n310\n00:15:39.140 --> 00:15:43.360\nBandwidth and delay are what\nEIGRP uses to make decisions, but\n\n311\n00:15:43.360 --> 00:15:48.950\nit carries reliability and\nload also, as well as MTU.\n\n312\n00:15:48.950 --> 00:15:52.080\nWe can make it use reliability and\nload if we want to,\n\n313\n00:15:52.080 --> 00:15:53.585\nit just doesn't use them by default.\n\n314\n00:15:54.595 --> 00:15:59.355\nMTU is the only one that it carries\nthat we can't actually use.\n\n315\n00:15:59.355 --> 00:16:00.607\nThere's no way to turn it on.\n\n316\n00:16:00.607 --> 00:16:03.264\nSo it carries it and there's no point\nbecause it doesn't actually use it ever.\n\n317\n00:16:03.264 --> 00:16:06.050\nThere is no way to make it use MTU and\nI'll show why in a minute.\n\n318\n00:16:06.050 --> 00:16:09.502\nSo let's talk about each one of these and\nwhat they are.\n\n319\n00:16:09.502 --> 00:16:12.300\nBandwidth we know,\nbecause that we use in OSPF right?\n\n320\n00:16:12.300 --> 00:16:14.810\nBandwidth is simply how much\nbandwidth we have in a line.\n\n321\n00:16:14.810 --> 00:16:15.800\nDo you have a 10 megabit line?\n\n322\n00:16:15.800 --> 00:16:17.640\nYou have a 10 megabit of bandwidth.\n\n323\n00:16:17.640 --> 00:16:18.820\nDo you have a gigabit line?\n\n324\n00:16:18.820 --> 00:16:20.250\nYou have a gigabit of bandwidth, right?\n\n325\n00:16:20.250 --> 00:16:21.700\nThat's your bandwidth.\n\n326\n00:16:21.700 --> 00:16:24.160\nThe thing about bandwidth though, is\n\n327\n00:16:24.160 --> 00:16:28.750\nit's not necessarily a fair representation\nof how that line is working.\n\n328\n00:16:28.750 --> 00:16:31.890\nSo for example I might have\na gig line between me and\n\n329\n00:16:31.890 --> 00:16:35.470\nDaniel, but if Daniel is doing a bunch\nof stuff on his laptop right now,\n\n330\n00:16:35.470 --> 00:16:40.120\nif he's got all his bit torrents running\nor what ever, then I might not be able\n\n331\n00:16:40.120 --> 00:16:45.210\nto get a full gigabit of\naccess to his laptop right,\n\n332\n00:16:45.210 --> 00:16:48.150\nbecause he is doing other stuff I\nam contending with other people for\n\n333\n00:16:48.150 --> 00:16:52.590\naccess on that link, so sometimes\nbandwidth can give us false information.\n\n334\n00:16:52.590 --> 00:16:56.430\nI might have a 100 megabit link to\nDan's laptop that is empty, and\n\n335\n00:16:56.430 --> 00:17:01.390\nthen I might have another gigabit link to\nhis laptop that's at like 99% utilization,\n\n336\n00:17:01.390 --> 00:17:05.150\nand now I choose the gig link\neven though it's overloaded and\n\n337\n00:17:05.150 --> 00:17:08.760\nI get less bandwidth than I would if I\njumped over to the 100 megabit line.\n\n338\n00:17:08.760 --> 00:17:12.630\nSo bandwidth is not necessarily\nthe greatest metric by itself.\n\n339\n00:17:12.630 --> 00:17:15.060\nSo EIGRP adds in delay.\n\n340\n00:17:15.060 --> 00:17:16.270\nNow what is delay?\n\n341\n00:17:16.270 --> 00:17:18.430\nDelay is like your lag time, right?\n\n342\n00:17:18.430 --> 00:17:19.750\nYour latency.\n\n343\n00:17:19.750 --> 00:17:24.290\nHow long does it take one of my\npackets to get to Daniel's machine?\n\n344\n00:17:24.290 --> 00:17:27.060\nIf I send it on the network,\nis it one millisecond?\n\n345\n00:17:27.060 --> 00:17:28.310\nIs it five milliseconds?\n\n346\n00:17:28.310 --> 00:17:31.710\nIs it a thousand, or\nthat would be a full second, right?\n\n347\n00:17:31.710 --> 00:17:33.970\nHow long does it take to\nget that data over there?\n\n348\n00:17:33.970 --> 00:17:37.650\nBecause there might be some lines that I\nhave that are extremely low latency and\n\n349\n00:17:37.650 --> 00:17:40.130\nsome that are high latency, right?\n\n350\n00:17:40.130 --> 00:17:43.250\nIf Ronnie were here this is where he would\ninsert the joke about his home internet.\n\n351\n00:17:43.250 --> 00:17:49.440\nRonnie has, we'll call it, broadband at\nhis home, but it's satellite internet.\n\n352\n00:17:49.440 --> 00:17:51.810\nAnd he gets a certain amount of bandwidth,\n\n353\n00:17:51.810 --> 00:17:54.430\nand I, at my home I have cable broadband,\nright?\n\n354\n00:17:54.430 --> 00:17:57.300\nI believe both of us have\nthe same amount of bandwidth.\n\n355\n00:17:57.300 --> 00:18:02.240\nBut he gets almost 2,000 milliseconds\nof latency on his link, cuz\n\n356\n00:18:02.240 --> 00:18:07.080\nit's gotta go up to a satellite in outer\nspace and then come back down to earth.\n\n357\n00:18:07.080 --> 00:18:09.974\nHe's actually going-\n&gt;&gt; And then back up and back down.\n\n358\n00:18:09.974 --> 00:18:11.287\n&gt;&gt; [LAUGH] It's ridiculous.\n\n359\n00:18:11.287 --> 00:18:14.160\nSo he has a huge amount\nof latency on his link.\n\n360\n00:18:14.160 --> 00:18:16.570\nHe might have the exact\nsame bandwidth as me.\n\n361\n00:18:16.570 --> 00:18:19.100\nBut my links is line 20 milliseconds,\nright?\n\n362\n00:18:19.100 --> 00:18:21.050\nSo my link would be better than his.\n\n363\n00:18:21.050 --> 00:18:22.670\nOSPF would never look at that.\n\n364\n00:18:22.670 --> 00:18:26.620\nOSPF isn't even aware of that,\nbut EIGRP is.\n\n365\n00:18:26.620 --> 00:18:30.110\nAnd so we uses those two\nmetrics by default, bandwidth.\n\n366\n00:18:30.110 --> 00:18:31.256\nAnd delay all right?\n\n367\n00:18:31.256 --> 00:18:33.340\nWhat about the other metrics?\n\n368\n00:18:33.340 --> 00:18:35.820\nWell the next metrics is reliability.\n\n369\n00:18:35.820 --> 00:18:39.140\nReliability is how long\nhas that link been up for?\n\n370\n00:18:39.140 --> 00:18:41.700\nIs this a brand new line\nthat just came online, or\n\n371\n00:18:41.700 --> 00:18:46.390\nis it a line that's been running solid for\na year straight without ever failing?\n\n372\n00:18:46.390 --> 00:18:47.515\n&gt;&gt; This is where Ronnie would make a joke\n\n373\n00:18:47.515 --> 00:18:48.138\nabout a satellite-\n\n374\n00:18:48.138 --> 00:18:48.849\n&gt;&gt; [LAUGH]\n&gt;&gt; That's right?\n\n375\n00:18:48.849 --> 00:18:49.429\n&gt;&gt; That's right.\n\n376\n00:18:49.429 --> 00:18:52.072\n[LAUGH] So\nThat the problem with the reliability,\n\n377\n00:18:52.072 --> 00:18:54.910\nthat there's two problems of reliability.\n\n378\n00:18:54.910 --> 00:18:58.860\nOne is not always trustworthy,\nthe reliability is not reliable?\n\n379\n00:18:58.860 --> 00:19:00.430\n&gt;&gt; [LAUGH]\n&gt;&gt; [LAUGH] That is a good way\n\n380\n00:19:00.430 --> 00:19:01.340\nof looking at it.\n\n381\n00:19:01.340 --> 00:19:03.220\nYou may have a line that's flapping.\n\n382\n00:19:03.220 --> 00:19:03.860\nRight?\n\n383\n00:19:03.860 --> 00:19:06.560\nFlapping line is one that comes up for\na few seconds then goes down again.\n\n384\n00:19:06.560 --> 00:19:08.870\nAnd then comes up for\na few seconds, it goes down again.\n\n385\n00:19:08.870 --> 00:19:11.280\nIf a line is doing that, you don't\nwanna move traffic over to it and\n\n386\n00:19:11.280 --> 00:19:12.900\nreliability will help you spot that.\n\n387\n00:19:12.900 --> 00:19:15.760\nYou'll say, it's only been up for\na minute, I don't wanna move traffic over\n\n388\n00:19:15.760 --> 00:19:19.870\nhere, I'm gonna wait, so that's\na positive, but it's also a negative.\n\n389\n00:19:19.870 --> 00:19:23.690\nThere might have been a problem on\nthe network, you've fixed the problem on\n\n390\n00:19:23.690 --> 00:19:26.880\nthe network, but you're still running on\nyour backup lines, cuz it's waiting for\n\n391\n00:19:26.880 --> 00:19:30.720\nthe reliability of your production lines\nto come back to normal levels, right.\n\n392\n00:19:30.720 --> 00:19:33.930\nSo it can cause slower recovery times.\n\n393\n00:19:33.930 --> 00:19:40.170\nThe other thing about reliability is,\nas a metric, it is constantly changing.\n\n394\n00:19:40.170 --> 00:19:41.940\nMy bandwidth doesn't change.\n\n395\n00:19:41.940 --> 00:19:45.570\nIf I have a 100 mega bit line,\nit's a 100 mega bits right now.\n\n396\n00:19:45.570 --> 00:19:46.160\nAnd tomorrow,\n\n397\n00:19:46.160 --> 00:19:49.490\nit will be a 100 mega bit and the next day\nit will be a 100 mega bit forever, right?\n\n398\n00:19:49.490 --> 00:19:51.540\nThe bandwidth on the line doesn't change.\n\n399\n00:19:51.540 --> 00:19:56.240\nThe delay might change, but the delay\ndoesn't normally change either, right?\n\n400\n00:19:56.240 --> 00:19:57.820\nIt might fluctuate in a small amount, but\n\n401\n00:19:57.820 --> 00:20:01.280\ntypically it doesn't change\nReliability on the other hand.\n\n402\n00:20:01.280 --> 00:20:03.760\nIt changes every single second.\n\n403\n00:20:03.760 --> 00:20:05.710\nHey my line's been up for 55 seconds.\n\n404\n00:20:05.710 --> 00:20:07.330\nNo 57.\nDarn it 58 seconds.\n\n405\n00:20:07.330 --> 00:20:11.790\nThe longer your line's up the bigger\nthe reliability's gonna get so\n\n406\n00:20:11.790 --> 00:20:13.200\nit's constantly changing.\n\n407\n00:20:13.200 --> 00:20:17.300\nAnd what that means is that remember\non the dynamic routing protocol we have\n\n408\n00:20:17.300 --> 00:20:18.080\nconvergence.\n\n409\n00:20:18.080 --> 00:20:19.980\nAll the routers have to\nlearn the same routes and\n\n410\n00:20:19.980 --> 00:20:24.790\nmaintain a steady routing table, that\nmeans that we're having that constantly\n\n411\n00:20:24.790 --> 00:20:29.480\nrun our dual calculations to make\nsure that something hasn't changed.\n\n412\n00:20:29.480 --> 00:20:31.470\nHey, my reliability is now different.\n\n413\n00:20:31.470 --> 00:20:32.710\nSo it does not changed my pass.\n\n414\n00:20:32.710 --> 00:20:33.910\nOnly run the calculation.\n\n415\n00:20:33.910 --> 00:20:34.910\nAll right.\n\n416\n00:20:34.910 --> 00:20:35.720\nNow, it's not different.\n\n417\n00:20:35.720 --> 00:20:36.860\nThings still the same.\n\n418\n00:20:36.860 --> 00:20:38.360\nSomething's different,\nbut I need to change it.\n\n419\n00:20:38.360 --> 00:20:39.950\nWell it doesn't matter\nyou're running the same\n\n420\n00:20:39.950 --> 00:20:41.150\ncalculation whether it changes or not.\n\n421\n00:20:41.150 --> 00:20:44.810\nAnd you're having to constantly do it,\nbecause reliability constantly changes.\n\n422\n00:20:44.810 --> 00:20:46.860\nAnd that's why it's turned off by default.\n\n423\n00:20:46.860 --> 00:20:50.490\nIt's turned off, because most\npeople won't benefit from that.\n\n424\n00:20:50.490 --> 00:20:52.230\nRight?\nJust this constant churning\n\n425\n00:20:52.230 --> 00:20:52.779\nof the algorithm.\n\n426\n00:20:54.060 --> 00:20:55.930\nLoad is the same way.\n\n427\n00:20:55.930 --> 00:20:58.830\nLoad is,\nhow much of the line am I actually using?\n\n428\n00:20:58.830 --> 00:21:02.315\nRemember the reference I made earlier\nis if a gig link to Daniel’s laptop and\n\n429\n00:21:02.315 --> 00:21:04.590\nit's 99% loaded right now.\n\n430\n00:21:04.590 --> 00:21:08.180\nIt’s got traffic that’s falling\nover it that might make it worst\n\n431\n00:21:08.180 --> 00:21:08.860\nthan 100 megabit line.\n\n432\n00:21:08.860 --> 00:21:10.635\nThere’s a 0% load, all right?\n\n433\n00:21:10.635 --> 00:21:14.610\nBut just like Reliability,\nload is constantly changing, right.\n\n434\n00:21:14.610 --> 00:21:18.320\nYou're network run peaks and valleys of\nnetwork access, there'd be busy times and\n\n435\n00:21:18.320 --> 00:21:19.020\nslow times.\n\n436\n00:21:19.020 --> 00:21:23.070\nAnd if I click on a web page right now,\nmy load's gonna go up, but\n\n437\n00:21:23.070 --> 00:21:25.390\nas soon as the page loads,\nmy load goes down, right.\n\n438\n00:21:25.390 --> 00:21:26.430\nSo it's constantly changing.\n\n439\n00:21:26.430 --> 00:21:29.710\nIt's another one that were causes\nnew constant recalculations,\n\n440\n00:21:29.710 --> 00:21:31.430\nit eats up a lot of CPU.\n\n441\n00:21:31.430 --> 00:21:33.540\nAnd the IGRP is about being efficient.\n\n442\n00:21:33.540 --> 00:21:38.170\nSo Reliability and Load, they're supported\nbut they're turned off by default.\n\n443\n00:21:39.170 --> 00:21:40.830\nAnd the last one is MTU.\n\n444\n00:21:40.830 --> 00:21:43.730\nMTU is the Maximum Transmission Unit.\n\n445\n00:21:43.730 --> 00:21:49.280\nWhen you send a frame on a network,\nthe frame can only be a certain size.\n\n446\n00:21:49.280 --> 00:21:51.340\nAnd then within that you\nhave your packet data.\n\n447\n00:21:51.340 --> 00:21:53.030\nAnd your packet data can\nonly be a certain size.\n\n448\n00:21:53.030 --> 00:21:56.180\nYou gotta leave room for the frame,\nand the VLAN headers, and all that.\n\n449\n00:21:56.180 --> 00:21:59.380\nOn most modern networks it's 1,500 bytes,\nright?\n\n450\n00:21:59.380 --> 00:22:03.770\nSo when you send data on the network it's\ngonna be in these 1,500 byte chunks.\n\n451\n00:22:03.770 --> 00:22:07.775\nBut back in the olden days,\nin the 1980's, 1990's,\n\n452\n00:22:07.775 --> 00:22:10.740\nnot that long ago, we had dial-up modems.\n\n453\n00:22:10.740 --> 00:22:12.910\nYou had ISDN lines.\n\n454\n00:22:12.910 --> 00:22:14.880\nYou had fractional T1's.\n\n455\n00:22:14.880 --> 00:22:17.580\nYou had ATM cellular lines.\n\n456\n00:22:17.580 --> 00:22:19.930\nAnd some of them had big frame sizes.\n\n457\n00:22:19.930 --> 00:22:21.420\nSome of them had small frame sizes.\n\n458\n00:22:21.420 --> 00:22:24.990\nSome of them had fixed frame sizes like\nthe cells networks, the ATM networks.\n\n459\n00:22:24.990 --> 00:22:28.350\nOther ones had variable frame\nsizes like PPP dial up lines.\n\n460\n00:22:28.350 --> 00:22:31.020\nRight where they would constantly change.\n\n461\n00:22:31.020 --> 00:22:35.840\nWell you could actually say, hey if\nthere's a link with a bigger MTU size\n\n462\n00:22:35.840 --> 00:22:39.190\nI can communicate faster,\nbecause I'm doing less CRC's.\n\n463\n00:22:39.190 --> 00:22:42.530\nOr there might be links with a lower\nMTU size and that's less preferred,\n\n464\n00:22:42.530 --> 00:22:46.320\nbecause we're having to break our data up\ninto more frames which means more CRC's.\n\n465\n00:22:46.320 --> 00:22:48.680\nMore check sums have to get calculated for\nerror checking.\n\n466\n00:22:48.680 --> 00:22:51.440\nSo a bigger MTU would be preferred.\n\n467\n00:22:51.440 --> 00:22:56.040\nThe problem is, it's been a solid 20\nyears since MTU has really mattered.\n\n468\n00:22:56.040 --> 00:23:03.660\nAnd so these days, almost everybody is\nwithin, say, 12 bytes of 1500 bytes.\n\n469\n00:23:03.660 --> 00:23:06.130\nAlmost everybody is exactly the same.\n\n470\n00:23:06.130 --> 00:23:08.190\nAnd so\nthere really is no preference on this.\n\n471\n00:23:08.190 --> 00:23:11.890\nAnd so\nit's effectively disabled inside of EIGRP.\n\n472\n00:23:11.890 --> 00:23:15.400\nBack in the IGRP days things might\nhave been a little bit different.\n\n473\n00:23:15.400 --> 00:23:19.170\nBut under EIGRP it's no longer used and\nthere's nothing you can do about it.\n\n474\n00:23:19.170 --> 00:23:23.420\nWe can turn Reliability and\nLoad on, but we can't turn MTU on.\n\n475\n00:23:23.420 --> 00:23:25.000\nAnd let me show you why.\n\n476\n00:23:25.000 --> 00:23:28.080\nInside of this algorithm,\nhere's the actual algorithm.\n\n477\n00:23:28.080 --> 00:23:32.710\nIt is copyrighted by Cisco so anybody\nwho wants to use it has to license it.\n\n478\n00:23:32.710 --> 00:23:34.360\nBut they're public about\nwhat the formula is.\n\n479\n00:23:34.360 --> 00:23:36.140\nThis is the formula that gets used.\n\n480\n00:23:36.140 --> 00:23:36.820\nAll right?\n\n481\n00:23:36.820 --> 00:23:41.116\nAnd the way it works, is you'll see each\nof the metrics called out in the formula,\n\n482\n00:23:41.116 --> 00:23:41.750\nall right?\n\n483\n00:23:41.750 --> 00:23:43.501\nYou've got these values\nthat are called K values.\n\n484\n00:23:43.501 --> 00:23:45.900\nI've got K1, K2, K3, right?\n\n485\n00:23:45.900 --> 00:23:46.850\nThose are variables.\n\n486\n00:23:46.850 --> 00:23:49.350\nWe can populate those\nwith numbers if we want.\n\n487\n00:23:49.350 --> 00:23:51.050\nBut the rest of it are a metric.\n\n488\n00:23:51.050 --> 00:23:51.644\nHere's bandwidth.\n\n489\n00:23:51.644 --> 00:23:53.068\nHere's load.\n\n490\n00:23:53.068 --> 00:23:54.621\nHere's delay.\n\n491\n00:23:54.621 --> 00:23:56.950\nHere's reliability.\n\n492\n00:23:56.950 --> 00:23:57.580\nWhere is MTU?\n\n493\n00:23:58.950 --> 00:24:02.700\nMTU is not even in the formula,\nit's not on the formula.\n\n494\n00:24:02.700 --> 00:24:05.364\nSo no matter what you do,\nMTU is not going to use.\n\n495\n00:24:05.364 --> 00:24:06.241\nThe formula completely ignores it.\n\n496\n00:24:06.241 --> 00:24:09.339\nIt's there, it carries the metric\nwith the routing updates.\n\n497\n00:24:09.339 --> 00:24:10.091\nIt just never uses it.\n\n498\n00:24:10.091 --> 00:24:14.915\nAll right, but of the ones it uses,\neven two of these are disabled, right.\n\n499\n00:24:14.915 --> 00:24:17.136\nRemember how I said we use bandwidth and\ndelay?\n\n500\n00:24:17.136 --> 00:24:20.652\nThen we don't use load and\nwe don't use reliability.\n\n501\n00:24:20.652 --> 00:24:23.096\nOkay, so how does that work?\n\n502\n00:24:23.096 --> 00:24:29.730\nWell these K values are variables,\nand by default, K1 is 1.\n\n503\n00:24:29.730 --> 00:24:34.230\nIt's the number 1, and K3 is 1.\n\n504\n00:24:34.230 --> 00:24:38.165\nAnd all the others, K2,\nK4, K5, they're all 0.\n\n505\n00:24:39.260 --> 00:24:43.101\nSo if you take a look at this little\nsection right here where load comes\n\n506\n00:24:43.101 --> 00:24:43.772\ninto play.\n\n507\n00:24:43.772 --> 00:24:48.971\nIf K2 is 0,\n0 times whatever your bandwidth is, 0.\n\n508\n00:24:48.971 --> 00:24:49.608\n&gt;&gt; 0, yeah.\n\n509\n00:24:49.608 --> 00:24:51.060\n&gt;&gt; 0 times a number is 0.\n\n510\n00:24:51.060 --> 00:24:55.810\nSo 0 divided by whatever\nyour load is is gonna be 0.\n\n511\n00:24:55.810 --> 00:24:57.990\n0 divided by another number is 0.\n\n512\n00:24:57.990 --> 00:25:03.140\nSo this effectively turns into 0,\nit doesn't exist.\n\n513\n00:25:03.140 --> 00:25:06.240\nSo by default, K2 is 0 and\nthat makes load not count.\n\n514\n00:25:06.240 --> 00:25:10.040\nIf we were to change K2 to 1,\nall of a sudden, load would count and\n\n515\n00:25:10.040 --> 00:25:11.960\nit would matter, by default, it's 0.\n\n516\n00:25:11.960 --> 00:25:14.420\nOn this exam, we just need to know that.\n\n517\n00:25:14.420 --> 00:25:17.560\nIf you go on to do the CCNP, we actually\ntalk about modifying these values and\n\n518\n00:25:17.560 --> 00:25:18.450\nputting them in play.\n\n519\n00:25:18.450 --> 00:25:22.000\nBut at the CCNA level, we just need\nto know that this is 0 by default, so\n\n520\n00:25:22.000 --> 00:25:23.630\nit doesn't factor in.\n\n521\n00:25:23.630 --> 00:25:28.319\nSame thing goes for reliability,\nbut it's a little weirder, right,\n\n522\n00:25:28.319 --> 00:25:31.834\nbecause you've got K5 which\nwould be 0 by default,\n\n523\n00:25:31.834 --> 00:25:35.640\ndivided by Reliability- K4,\nK4 is 0 by default.\n\n524\n00:25:35.640 --> 00:25:39.161\nSo 0 divided by whatever number this is,\nis just gonna be 0,\n\n525\n00:25:39.161 --> 00:25:44.030\nwhere it becomes weird is we're supposed\nto multiply our other result by it.\n\n526\n00:25:44.030 --> 00:25:46.243\nAnd what's a number times 0?\n\n527\n00:25:46.243 --> 00:25:46.840\n0.\n\n528\n00:25:46.840 --> 00:25:47.410\n&gt;&gt; 0.\n\n529\n00:25:47.410 --> 00:25:49.550\n&gt;&gt; So\neffectively with 0 at every single metric.\n\n530\n00:25:49.550 --> 00:25:53.500\nSo Cisco actually has a little\nexception put in that if K5=0,\n\n531\n00:25:53.500 --> 00:25:54.830\nthe value is ignored, right?\n\n532\n00:25:54.830 --> 00:25:56.240\nSo it just doesn't get used.\n\n533\n00:25:56.240 --> 00:25:57.940\nSo this gets dropped off and\n\n534\n00:25:57.940 --> 00:26:01.150\nreliability is no longer factored\ninto our equation, all right?\n\n535\n00:26:01.150 --> 00:26:03.644\nSo really once you factor that stuff out,\n\n536\n00:26:03.644 --> 00:26:07.714\nthis equation boils down to\nsomething very, very simple, right?\n\n537\n00:26:07.714 --> 00:26:10.465\nSo here I've changed the K values\nto their default numbers, right?\n\n538\n00:26:10.465 --> 00:26:13.846\nSo 1 * bandwidth, we have to remember\nour order of operations, right?\n\n539\n00:26:13.846 --> 00:26:15.866\nThe please my dear Aunt Sally stuff?\n\n540\n00:26:15.866 --> 00:26:17.042\n&gt;&gt; Please excuse my dear Aunt Sally.\n\n541\n00:26:17.042 --> 00:26:18.791\n&gt;&gt; I'm leaving off exponents.\n\n542\n00:26:18.791 --> 00:26:20.928\nSo [LAUGH] okay, I went to public school.\n\n543\n00:26:20.928 --> 00:26:23.749\n&gt;&gt; [LAUGH]\n&gt;&gt; So we gotta do what's in parentheses\n\n544\n00:26:23.749 --> 00:26:26.912\nfirst, and then we've gotta do\nmultiplication inside of that, and\n\n545\n00:26:26.912 --> 00:26:29.270\nthen exponents if we had them,\nand then division.\n\n546\n00:26:29.270 --> 00:26:32.910\nSo we gotta do them in order, and\nas you go through and do these in order,\n\n547\n00:26:32.910 --> 00:26:34.074\nlike what's 1 * BW?\n\n548\n00:26:34.074 --> 00:26:35.566\nWell, it's whatever your bandwidth is.\n\n549\n00:26:35.566 --> 00:26:36.905\nWhat's 1 * delay?\n\n550\n00:26:36.905 --> 00:26:38.190\nIt's whatever your delay is.\n\n551\n00:26:38.190 --> 00:26:40.050\nWhat's 0 * BW?\n\n552\n00:26:40.050 --> 00:26:43.270\nIt's 0, and\nthen 0 divided by 256 -Load is 0.\n\n553\n00:26:43.270 --> 00:26:48.190\nSo now you end up with BW + 0 + Delay,\nright?\n\n554\n00:26:48.190 --> 00:26:52.410\nAnd over here this * Reliability,\nthat one doesn't count if the K5 = 0, so\n\n555\n00:26:52.410 --> 00:26:53.460\nit gets left off.\n\n556\n00:26:53.460 --> 00:26:57.672\nSo our formula actually boils\ndown to this right here,\n\n557\n00:26:57.672 --> 00:27:01.590\nBW + 0 + Delay or just BW + Delay, right?\n\n558\n00:27:01.590 --> 00:27:06.010\nSo remember what I said way\nback here that Bandwidth and\n\n559\n00:27:06.010 --> 00:27:08.380\nDelay are the two metrics that we use,\nright?\n\n560\n00:27:08.380 --> 00:27:09.960\nThat's all that gets factored in there.\n\n561\n00:27:09.960 --> 00:27:12.570\nSo delay just measures\nthat in milliseconds.\n\n562\n00:27:12.570 --> 00:27:17.190\nBandwidth, it does the reference bandwidth\ndivided by the actual bandwidth times 256,\n\n563\n00:27:17.190 --> 00:27:19.370\nand just adds the two together.\n\n564\n00:27:19.370 --> 00:27:22.440\nThat results in a metric that looks\nlike a big jumbled number, and\n\n565\n00:27:22.440 --> 00:27:23.830\nyou can't reverse engineer it.\n\n566\n00:27:23.830 --> 00:27:26.550\nIf I give you the metric, you can't figure\nout what the bandwidth or line is, because\n\n567\n00:27:26.550 --> 00:27:29.700\nyou don't know the delay, you can't divide\nit back out, but it doesn't matter.\n\n568\n00:27:29.700 --> 00:27:32.610\nThe one with the lower number\nis going to be preferred.\n\n569\n00:27:32.610 --> 00:27:36.320\nAnd it will accurately detect between\n100 megabit and gigabit links.\n\n570\n00:27:36.320 --> 00:27:40.100\nSo, remember in my lab\ntopology that I have,\n\n571\n00:27:40.100 --> 00:27:43.380\nI've got 100 megabit lines and gigabit\nlines and OSPF treated them equally.\n\n572\n00:27:43.380 --> 00:27:47.500\nWe saw redundant paths all over the place\nwhen we deployed OSPF, if we deploy EIGRP,\n\n573\n00:27:47.500 --> 00:27:49.140\nit'll spot the difference.\n\n574\n00:27:49.140 --> 00:27:52.356\nIt'll know the difference between the 100\nmegabit and the gigabit line, and\n\n575\n00:27:52.356 --> 00:27:53.595\nit'll pick the gigabit line.\n\n576\n00:27:53.595 --> 00:27:57.420\nIt'll make smarter decisions, and\nit'll do it more efficiently, right?\n\n577\n00:27:57.420 --> 00:28:01.570\nThat's the big thing about EIGRP\nthat lets it make those decisions.\n\n578\n00:28:01.570 --> 00:28:04.163\n&gt;&gt; Now Don, you're talking\nabout the efficiency of EIGRP.\n\n579\n00:28:04.163 --> 00:28:09.015\nObviously, we have seen that, and why it's\nbetter than OSPF even though we're gonna\n\n580\n00:28:09.015 --> 00:28:11.681\nuse OSPF and\nprobably not use EIGRP, as often.\n\n581\n00:28:11.681 --> 00:28:14.022\n&gt;&gt; [LAUGH]\n&gt;&gt; Is there any other greatness and\n\n582\n00:28:14.022 --> 00:28:16.037\nefficient things that EIGRP does for\n\n583\n00:28:16.037 --> 00:28:18.834\nus that maybe we wouldn't\nsee in other protocols?\n\n584\n00:28:18.834 --> 00:28:21.924\n&gt;&gt; I'm gonna tackle one other thing that\nthe exam objectives specifically tell me\n\n585\n00:28:21.924 --> 00:28:22.484\nnot to cover.\n\n586\n00:28:22.484 --> 00:28:23.310\n&gt;&gt; [LAUGH]\n&gt;&gt; But\n\n587\n00:28:23.310 --> 00:28:27.020\nI'm gonna cover it anyway because I can\nguarantee while they won't have a question\n\n588\n00:28:27.020 --> 00:28:30.140\non the exam, it'll trip you\nup on some of the questions.\n\n589\n00:28:30.140 --> 00:28:34.570\nEIGRP does this neat thing called\nautomatic route summarization.\n\n590\n00:28:34.570 --> 00:28:37.030\nAnd what route summarization is\nwhere we take more than one route,\n\n591\n00:28:37.030 --> 00:28:39.190\nand we collapse it down to\na single routing entry.\n\n592\n00:28:39.190 --> 00:28:42.050\nIt makes our routing table small, and\nthe smaller your routing table is,\n\n593\n00:28:42.050 --> 00:28:44.560\nthe faster your router can do a lookup.\n\n594\n00:28:44.560 --> 00:28:48.360\nOSPF has a way to do that manually\nif you have multiple areas,\n\n595\n00:28:48.360 --> 00:28:50.850\nin a single area environment,\nyou can't do it at all.\n\n596\n00:28:50.850 --> 00:28:54.820\nIn EIGRP it does it automatically and\nwe don't have areas in EIGRP,\n\n597\n00:28:54.820 --> 00:28:57.590\nyou can just pick wherever you want it\nto happen or it does it automatically.\n\n598\n00:28:57.590 --> 00:29:01.550\nIt will summarize routes, so I'm not gonna\ntackle how to get it manually set up,\n\n599\n00:29:01.550 --> 00:29:03.100\nbecause that's not on the exam.\n\n600\n00:29:03.100 --> 00:29:05.330\nBut I want to show you what\nroute summarization is,\n\n601\n00:29:05.330 --> 00:29:06.770\nbecause you need to watch out for it.\n\n602\n00:29:06.770 --> 00:29:10.230\nSometimes it can cause problems,\nand you might need to turn it off.\n\n603\n00:29:10.230 --> 00:29:14.015\nAnd so on the exam, even though route\nsummarization is not an exam topic,\n\n604\n00:29:14.015 --> 00:29:18.167\nyou might get a hands on question, and\nroute summarization might be happening,\n\n605\n00:29:18.167 --> 00:29:20.510\nand I don't want that to throw you for\na loop.\n\n606\n00:29:20.510 --> 00:29:22.203\nI don't want it to be a surprise,\nand you're like,\n\n607\n00:29:22.203 --> 00:29:23.481\nwhy is that route showing up all weird?\n\n608\n00:29:23.481 --> 00:29:24.357\nThere is a reason for it.\n\n609\n00:29:24.357 --> 00:29:28.659\nSo, let me just give you a quick\nexample of how route surmization works.\n\n610\n00:29:28.659 --> 00:29:31.288\nBasically what EIGRP does, is it looks for\n\n611\n00:29:31.288 --> 00:29:35.393\nwhat are called contiguous networks,\nnetworks that all in a row.\n\n612\n00:29:35.393 --> 00:29:42.449\nSo like 192.168.0.0/24, 192.168.1.0/24,\n\n613\n00:29:42.449 --> 00:29:49.194\n192.168.2.0/24, and 192.168.3.0/24.\n\n614\n00:29:49.194 --> 00:29:52.437\nAnd we'll use a dotted decimal\ninstead of a comma decimal.\n\n615\n00:29:52.437 --> 00:29:53.432\n&gt;&gt; A comma decimal [LAUGH].\n\n616\n00:29:53.432 --> 00:29:56.740\n&gt;&gt; So these four networks,\nthey're all in a row.\n\n617\n00:29:56.740 --> 00:30:00.210\nAnd if they all have the same destination,\nso for\n\n618\n00:30:00.210 --> 00:30:04.870\nexample if I can get to this\none via 192.168.5.1, right?\n\n619\n00:30:05.910 --> 00:30:10.470\nAnd every other one has that\nsame destination, right?\n\n620\n00:30:10.470 --> 00:30:14.140\nSo it's four routes, they're all in a row.\n\n621\n00:30:14.140 --> 00:30:17.520\nI get to all of them through\nthe same destination.\n\n622\n00:30:17.520 --> 00:30:21.146\nWell it can collapse them,\nit can do what's called supernetting,\n\n623\n00:30:21.146 --> 00:30:23.511\nand join them together into one statement.\n\n624\n00:30:23.511 --> 00:30:28.641\nLike 192.168.0.0/22\n\n625\n00:30:28.641 --> 00:30:32.972\nvia 192.168.5.1.\n\n626\n00:30:32.972 --> 00:30:40.290\nNow by making it a /22, that encompasses\nall four of these networks, all right?\n\n627\n00:30:40.290 --> 00:30:43.599\nAnd by wrapping it into one entry,\nit's all going to the same destination.\n\n628\n00:30:43.599 --> 00:30:48.020\nNow I do a route lookup and it's just\none entry instead of four, all right.\n\n629\n00:30:48.020 --> 00:30:51.290\nBy doing route summarization like this,\nit makes your routers more efficient.\n\n630\n00:30:51.290 --> 00:30:52.580\nYou can have lower end routers,\n\n631\n00:30:52.580 --> 00:30:55.290\nbecause they're not maintaining\nmassive routing tables anymore.\n\n632\n00:30:55.290 --> 00:30:58.270\nIn a highly redundant environment\nlike a full mesh environment,\n\n633\n00:30:58.270 --> 00:30:59.480\nI've seen this reduce.\n\n634\n00:30:59.480 --> 00:31:01.676\nWell I used to work for a bank, and\n\n635\n00:31:01.676 --> 00:31:06.697\nevery branch office had two connections\nto the home office via VPN tunnels,\n\n636\n00:31:06.697 --> 00:31:11.579\nand two connections to the business\nresumption or data recovery center.\n\n637\n00:31:11.579 --> 00:31:16.237\nAnd they were all VPN tunnels, so\nthey all went out over the same T1 line,\n\n638\n00:31:16.237 --> 00:31:19.060\nbut it was four different VPN tunnels.\n\n639\n00:31:19.060 --> 00:31:21.090\nAnd so\nwe were able to collapse those down, and\n\n640\n00:31:21.090 --> 00:31:26.160\nwhen you have over 100 branches,\neach of them with four links.\n\n641\n00:31:26.160 --> 00:31:28.590\nSo you're talking about over 400 routes,\nand\n\n642\n00:31:28.590 --> 00:31:30.650\nyou could collapse it down to 100 routes.\n\n643\n00:31:30.650 --> 00:31:34.250\nYou could reduce your routing table\nsize by 75%, that's a big deal.\n\n644\n00:31:34.250 --> 00:31:37.040\nAnd EIGRP does it automatically,\nwe were running OSPF,\n\n645\n00:31:37.040 --> 00:31:38.634\nI would have to do it by hand.\n\n646\n00:31:38.634 --> 00:31:42.420\nBy doing it automatically it could\nreally save some time, so actually,\n\n647\n00:31:42.420 --> 00:31:43.200\nI'll show you an example.\n\n648\n00:31:43.200 --> 00:31:46.570\nWe get to configuring this, just to show\nyou what it looks like when this happens.\n\n649\n00:31:46.570 --> 00:31:49.560\nIt is a nice feature but\nyou can turn it off.\n\n650\n00:31:49.560 --> 00:31:51.990\nWe have a quick command, you can\nissue when you're configuring this,\n\n651\n00:31:51.990 --> 00:31:54.860\nwhich is just no auto-summary and\nit'll stop it.\n\n652\n00:31:54.860 --> 00:31:58.700\nI think I might have shown that when\nwe were configuring rip back in CCNT.\n\n653\n00:31:58.700 --> 00:32:01.870\nThat turns it off and now all your\nroutes would populate like normal.\n\n654\n00:32:01.870 --> 00:32:03.000\nSo, if you're on the exam and\n\n655\n00:32:03.000 --> 00:32:05.800\nsomething weird is happening like\nthat you might need to turn it off.\n\n656\n00:32:05.800 --> 00:32:07.530\nThey don't expect you to\nconfigure summarization but,\n\n657\n00:32:07.530 --> 00:32:10.440\njust be aware that EIGRP can\ndo this automatically and\n\n658\n00:32:10.440 --> 00:32:12.840\nit can do it anywhere within the network.\n\n659\n00:32:12.840 --> 00:32:16.970\nBut, it normally happens when you're\ncrossing a boundary between networks.\n\n660\n00:32:16.970 --> 00:32:21.670\nCrossing from one class C to another\nclass C, or one Class C to a class B or\n\n661\n00:32:21.670 --> 00:32:22.920\nsomething like that.\n\n662\n00:32:22.920 --> 00:32:27.590\nEIGRP is not classful by default,\nbut it still recognizes the classes.\n\n663\n00:32:27.590 --> 00:32:29.650\nSo it notices when you're moving between.\n\n664\n00:32:29.650 --> 00:32:33.300\nSo for example,\nif this was actually jumping over to\n\n665\n00:32:33.300 --> 00:32:36.480\nsome other network like that,\nit would say, hey, this is a good spot for\n\n666\n00:32:36.480 --> 00:32:40.128\nme to summarize these and wrap them\ntogether, and shrink that routing table.\n\n667\n00:32:40.128 --> 00:32:43.170\nEIGRP does it automatically, so you\ndon't have to know how to configure it.\n\n668\n00:32:43.170 --> 00:32:44.570\nBut I do want you to be aware of it so\n\n669\n00:32:44.570 --> 00:32:47.020\nyou don't get surprised if you\nsee that on a routing table.\n\n670\n00:32:47.020 --> 00:32:49.440\n&gt;&gt; All right Don well we've covered\na lot when it comes to EIGRP.\n\n671\n00:32:49.440 --> 00:32:52.860\nIs there anything else that we need to go\nover before we close our little show down?\n\n672\n00:32:52.860 --> 00:32:53.920\n&gt;&gt; I think that's about it for here.\n\n673\n00:32:53.920 --> 00:32:57.190\nYou guys might have noticed we didn't\nactually go to the command line at all.\n\n674\n00:32:57.190 --> 00:32:58.120\n&gt;&gt; It felt like we did.\n\n675\n00:32:58.120 --> 00:32:59.930\n&gt;&gt; We kind of need to see\nhow to configure this.\n\n676\n00:32:59.930 --> 00:33:01.610\nSo we're gonna have two more episodes.\n\n677\n00:33:01.610 --> 00:33:04.124\nWe're gonna do one on IPv4,\nand we'll get EIGRP up and\n\n678\n00:33:04.124 --> 00:33:05.687\nrunning in an IPv4 environment.\n\n679\n00:33:05.687 --> 00:33:07.478\nAnd then we'll do another episode on IPv6,\nand\n\n680\n00:33:07.478 --> 00:33:09.850\nget the same thing running using\nIPv6 as our routing protocol.\n\n681\n00:33:09.850 --> 00:33:11.150\nSo definitely stay tuned for those.\n\n682\n00:33:11.150 --> 00:33:11.879\n&gt;&gt; All right, Don.\nWell,\n\n683\n00:33:11.879 --> 00:33:15.493\nyou are a veritable wealth of knowledge\nwhen it comes to the EIGRP protocol,\n\n684\n00:33:15.493 --> 00:33:17.595\neven though that is\nalso redundant as well.\n\n685\n00:33:17.595 --> 00:33:20.245\nYou're like the of EIGRP, it's awesome.\n\n686\n00:33:20.245 --> 00:33:21.210\n&gt;&gt; [LAUGH]\n&gt;&gt; That being said,\n\n687\n00:33:21.210 --> 00:33:23.070\nit looks like we've run out of time for\nthis episode.\n\n688\n00:33:23.070 --> 00:33:25.670\nLooking forward to seeing\nthe configuration episodes.\n\n689\n00:33:25.670 --> 00:33:29.120\nHopefully you are as well, but we're\ngonna go ahead and sign off for today.\n\n690\n00:33:29.120 --> 00:33:31.609\nI've been your host from ITProTV,\nDaniel Lowrie.\n\n691\n00:33:31.609 --> 00:33:32.455\n&gt;&gt; I'm Don Pezet.\n\n692\n00:33:32.455 --> 00:33:34.513\n&gt;&gt; We'll see you next time.\n\n693\n00:33:34.513 --> 00:33:42.640\n[MUSIC]\n\n",
          "vimeoId": "181120721"
        },
        {
          "description": "In this episode, Daniel and Don demonstrate how you implement the the Enhanced Interior Gateway Routing Protocol(EIGRP) in an IPv4 environment. They show you all the necessary commands, step-by-step, to get EIGRP enabled when using IPv4. They also show you how to verify that EIGRP is working properly.",
          "length": "2224",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/cisco-ccna200105/cisco-ccna200105-2-7-implementing_eigrp_ipv4-082516-1.jpg",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/cisco-ccna200105/cisco-ccna200105-2-7-implementing_eigrp_ipv4-082516-1-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/cisco-ccna200105/cisco-ccna200105-2-7-implementing_eigrp_ipv4-082516-1-sm.jpg",
          "title": "Implementing EIGRP for IPv4",
          "transcript": "WEBVTT\n\n1\n00:00:00.000 --> 00:00:10.000\n[MUSIC]\n\n2\n00:00:12.121 --> 00:00:16.869\nAll right, greetings everyone and welcome\nto another exciting episode of ITProTV.\n\n3\n00:00:16.869 --> 00:00:19.113\nI'm your host Daniel Lowrie and\nin today's episode,\n\n4\n00:00:19.113 --> 00:00:22.900\nwell we're continuing on with more on\nour CCNA Routing &amp; Switching series.\n\n5\n00:00:22.900 --> 00:00:26.320\nJoining me back in the studio today\nis our good friend Mr. Don Pezet.\n\n6\n00:00:26.320 --> 00:00:27.880\nDon welcome back sir, how's it going?\n\n7\n00:00:27.880 --> 00:00:31.064\n&gt;&gt; It is going swell Daniel, ready to\nactually do some work in this episode.\n\n8\n00:00:31.064 --> 00:00:31.930\n&gt;&gt; [LAUGH]\n&gt;&gt; Right?\n\n9\n00:00:31.930 --> 00:00:34.290\nIn the last episode we\ntalked a lot about EIGRP.\n\n10\n00:00:34.290 --> 00:00:35.770\nWhat it is, how it works.\n\n11\n00:00:35.770 --> 00:00:37.510\nAnd that's good stuff to know.\n\n12\n00:00:37.510 --> 00:00:38.740\nBut let's actually use it, right?\n\n13\n00:00:38.740 --> 00:00:41.097\nLet's get in here and put in place and\nget it routing and alive.\n\n14\n00:00:41.097 --> 00:00:41.930\n&gt;&gt; It's a novel idea.\n\n15\n00:00:41.930 --> 00:00:46.605\n&gt;&gt; Yep, it is nice to actually see\nsomething, you know, do something.\n\n16\n00:00:46.605 --> 00:00:47.870\n[LAUGH] Unlike yourself.\n\n17\n00:00:47.870 --> 00:00:52.010\nSo, let's take a look at my topology here\nfor the lab and we'll see what we've got.\n\n18\n00:00:52.010 --> 00:00:56.260\nThese are the same routers that\nI used in the OSPF episodes.\n\n19\n00:00:56.260 --> 00:01:00.075\nWhen we got these things configured,\nwhat we were trying to do was make\n\n20\n00:01:00.075 --> 00:01:04.472\nit where router 1, which was\nconnected to the 192.160.00 network,\n\n21\n00:01:04.472 --> 00:01:09.259\nhad visibility all the way across\nthe network to the 172.160.0.0 network,\n\n22\n00:01:09.259 --> 00:01:11.750\nway over on the other side.\n\n23\n00:01:11.750 --> 00:01:15.140\nNow, in OSPF we have all sorts\nof weird thing to deal with.\n\n24\n00:01:15.140 --> 00:01:19.310\nWe had this multi access network\nhere where we had DR's and BDR's and\n\n25\n00:01:19.310 --> 00:01:22.030\ndown here we had a point to point\nlink where we didn't have those and\n\n26\n00:01:22.030 --> 00:01:24.890\nwe had all these different connection\nstates and adjacencies and\n\n27\n00:01:24.890 --> 00:01:26.870\nall this madness to deal with.\n\n28\n00:01:26.870 --> 00:01:29.730\nIn the IGRP, we don't have any of that.\n\n29\n00:01:29.730 --> 00:01:31.910\nYou don't have a single bit of that.\n\n30\n00:01:31.910 --> 00:01:35.140\nRouters just talk to their neighbors and\nthat's that.\n\n31\n00:01:35.140 --> 00:01:37.960\nSo they're gonna reach out and\nthey're gonna communicate and\n\n32\n00:01:37.960 --> 00:01:41.020\nthat means the EIGRP is far\nsimpler to get configured.\n\n33\n00:01:41.020 --> 00:01:44.250\nIt's more powerful so\nit does have a lot of options.\n\n34\n00:01:44.250 --> 00:01:45.997\nIt's just that most of\nthem are not necessary.\n\n35\n00:01:45.997 --> 00:01:49.105\nIt's already gonna make\nthe right decisions for us and\n\n36\n00:01:49.105 --> 00:01:49.845\nonly get up and going.\n\n37\n00:01:49.845 --> 00:01:53.585\nSo you'll see that getting the IGRP\nimplemented is not very difficult.\n\n38\n00:01:53.585 --> 00:01:56.875\nNow if I look at my\nactual layer 3 topology,\n\n39\n00:01:56.875 --> 00:01:59.615\nI've got a ton of little\nnetworks in here right?\n\n40\n00:01:59.615 --> 00:02:01.098\nAll these different networks.\n\n41\n00:02:01.098 --> 00:02:06.318\n192.168.0.0 and 1.0, 2.0, 3, 4 and 5.0,\nall those guys spread out right there.\n\n42\n00:02:06.318 --> 00:02:11.080\nWhen we start configuring EIGRP, we need\nto get these guys all communicating and\n\n43\n00:02:11.080 --> 00:02:12.200\nparticipating.\n\n44\n00:02:12.200 --> 00:02:16.370\nNow remember in OSPF that\nwhen I turned on OSPF there\n\n45\n00:02:16.370 --> 00:02:20.950\nwas a process ID that would run on\neach router that would designate\n\n46\n00:02:20.950 --> 00:02:23.400\nthe CPU process that was\nrunning in the background.\n\n47\n00:02:23.400 --> 00:02:26.550\nThey had to have an ID for that and\nthat was unique on each router.\n\n48\n00:02:26.550 --> 00:02:30.340\nIt didn't have to match but you normally\ndo make it match across your routers.\n\n49\n00:02:30.340 --> 00:02:33.750\nIn EIGRP we don't have a process ID,\nall right, and\n\n50\n00:02:33.750 --> 00:02:38.920\nwe don't have area IDs either, so a lot of\nthat stuff we don't have to worry about.\n\n51\n00:02:38.920 --> 00:02:44.350\nBut we do have an autonomous system ID,\nan AS number, and\n\n52\n00:02:44.350 --> 00:02:47.610\nwhen you deploy EIGRP whether\nyou have a small environment or\n\n53\n00:02:47.610 --> 00:02:52.750\na massive environment, you're typically\ngoing to have one autonomous system.\n\n54\n00:02:52.750 --> 00:02:56.800\nIn OSPF we broke up into multiple\nareas to increase performance.\n\n55\n00:02:56.800 --> 00:03:00.600\nIn EIGRP since you only talk to your\nneighbors, that is not an issue.\n\n56\n00:03:00.600 --> 00:03:02.330\nWe don't have that problem.\n\n57\n00:03:02.330 --> 00:03:05.480\nIn OSPF you need multiple areas if\nyou want to do route summarization.\n\n58\n00:03:05.480 --> 00:03:07.660\nIn the EIGRP it does that automatically.\n\n59\n00:03:07.660 --> 00:03:08.870\nWe don't have that problem.\n\n60\n00:03:08.870 --> 00:03:13.470\nSo you never really need more\nthan one autonomous system.\n\n61\n00:03:13.470 --> 00:03:18.210\nSo before we deploy EIGRP we need\nto pick an AS number and deploy it.\n\n62\n00:03:18.210 --> 00:03:23.150\nNow I mentioned BGP in an earlier episode,\nand the AS numbers for\n\n63\n00:03:23.150 --> 00:03:25.010\nBGP, those are out there on the internet.\n\n64\n00:03:25.010 --> 00:03:26.940\nWe have to register those with the IANA.\n\n65\n00:03:26.940 --> 00:03:28.700\nBut this is an interior gateway protocol.\n\n66\n00:03:28.700 --> 00:03:30.460\nIt's just running in our environment.\n\n67\n00:03:30.460 --> 00:03:34.320\nSo we can make up an AS number,\nyou can pick whatever one you want.\n\n68\n00:03:34.320 --> 00:03:37.800\n99% of the time I pick AS number\n1 because it's easy to remember.\n\n69\n00:03:37.800 --> 00:03:39.420\nRight?\nAS number 1 and that's it.\n\n70\n00:03:39.420 --> 00:03:40.900\nSo you do need to pick a number and\n\n71\n00:03:40.900 --> 00:03:45.120\nthe number does have to match\non all of your routers.\n\n72\n00:03:45.120 --> 00:03:47.640\nRemember in OSPF we would only\ntalk to routers that have the same\n\n73\n00:03:47.640 --> 00:03:48.840\narea number as us?\n\n74\n00:03:48.840 --> 00:03:53.660\nIn EIGRP, we'll only talk the routers\nthat have the same AS number as us and\n\n75\n00:03:53.660 --> 00:03:55.760\nit has to be consistent across the board.\n\n76\n00:03:55.760 --> 00:03:58.820\nThis is something that creates\na little confusion because\n\n77\n00:03:58.820 --> 00:04:00.310\nyou don't have an AS number in OSPF.\n\n78\n00:04:00.310 --> 00:04:03.570\nYou have a process ID and\nthe process ID doesn't have to match.\n\n79\n00:04:03.570 --> 00:04:06.900\nBut in EIGRP we have an AS number and\nit does have to match.\n\n80\n00:04:06.900 --> 00:04:10.135\nIt's something easy to confuse on\nthe exam and get a question wrong.\n\n81\n00:04:10.135 --> 00:04:13.110\n&gt;&gt; So it can't have multiple AS\nnumbers inside of your network.\n\n82\n00:04:13.110 --> 00:04:14.290\n&gt;&gt; You normally wouldn't, right?\n\n83\n00:04:14.290 --> 00:04:17.340\nSo in AS, an autonomous system\nrepresents your business, right,\n\n84\n00:04:17.340 --> 00:04:19.940\nthe equipment you own and\nyou are one business.\n\n85\n00:04:19.940 --> 00:04:23.430\nThe only time you'd have more than one AS\nis if you were like a service provider.\n\n86\n00:04:23.430 --> 00:04:24.930\nIf you were an internet\nservice provider and\n\n87\n00:04:24.930 --> 00:04:27.786\nyou had a number of companies that\nyou were providing service to,\n\n88\n00:04:27.786 --> 00:04:30.350\nthese are separate companies and\nyou wanted to keep them isolated from each\n\n89\n00:04:30.350 --> 00:04:35.420\nother, then each company might assign\na separate AS number to isolate them.\n\n90\n00:04:35.420 --> 00:04:40.533\nAnd so you could run more than\none EIGRP process on your router.\n\n91\n00:04:40.533 --> 00:04:42.040\nEach one would just need\na different AS number and\n\n92\n00:04:42.040 --> 00:04:43.342\nthat's how it would keep them separate.\n\n93\n00:04:43.342 --> 00:04:44.454\nIt doesn't need a process ID.\n\n94\n00:04:44.454 --> 00:04:46.346\nIt uses the AS number to keep it separate.\n\n95\n00:04:46.346 --> 00:04:50.770\nSo I couldn't have two AS number 1s,\nit would just combine those.\n\n96\n00:04:50.770 --> 00:04:54.610\nIt would need different, I could have AS\n1 and AS 2 and they would be separate.\n\n97\n00:04:54.610 --> 00:04:58.200\nNow for those of you who go on to CCNP\nwe learn about something called VRF,\n\n98\n00:04:58.200 --> 00:05:02.800\nwhich is Virtual Routing and Forwarding,\nand you actually could do more than AS 1.\n\n99\n00:05:02.800 --> 00:05:04.010\nIt's a whole different world.\n\n100\n00:05:04.010 --> 00:05:05.680\nSo there are ways to do it, but\n\n101\n00:05:05.680 --> 00:05:09.630\nfor this exam, just know that if you\nhave more than one AS number they\n\n102\n00:05:09.630 --> 00:05:11.579\nneed to be different numbers and\nyou can run them on the same router.\n\n103\n00:05:12.700 --> 00:05:15.570\nAll right, so I'm just going to do one AS\nbecause that's all we need here, right?\n\n104\n00:05:15.570 --> 00:05:19.030\nI've got all of these routers and\nI'm going to put them all in AS number 1.\n\n105\n00:05:19.030 --> 00:05:21.690\nAnd then I just need to tell\nit what networks to bring in.\n\n106\n00:05:21.690 --> 00:05:24.780\nWhat networks to advertise through the\nsystem and we can get it up and running.\n\n107\n00:05:24.780 --> 00:05:26.680\nSo let's start with routers one,\ntwo, and three.\n\n108\n00:05:26.680 --> 00:05:28.570\nRight?\nThese guys all share this link right here\n\n109\n00:05:28.570 --> 00:05:32.300\nso I want them to be able to exchange\ninformation between each other, right?\n\n110\n00:05:32.300 --> 00:05:35.180\nSo let me jump over to my routers.\n\n111\n00:05:35.180 --> 00:05:37.670\nAll right, so\nlet's jump into my router one here and\n\n112\n00:05:37.670 --> 00:05:41.140\nI'm gonna get our initial\nconfiguration put in place.\n\n113\n00:05:41.140 --> 00:05:43.890\nSo the first thing I know is I need\nto know what IP addresses I have.\n\n114\n00:05:43.890 --> 00:05:45.310\nI guess I should have checked that before.\n\n115\n00:05:45.310 --> 00:05:45.920\nSo there we go.\n\n116\n00:05:45.920 --> 00:05:47.050\nSo I've got three interfaces.\n\n117\n00:05:47.050 --> 00:05:49.350\nI'm gonna ignore Ethernet0/0 for now.\n\n118\n00:05:49.350 --> 00:05:53.270\nSo in my typology diagram,\nwhere did that thing go?\n\n119\n00:05:53.270 --> 00:05:53.900\nHere.\n\n120\n00:05:53.900 --> 00:05:58.196\nI've really got this 192.168.0.0 and\n192.168.1.0.\n\n121\n00:05:58.196 --> 00:06:00.852\nThose are the two networks that\nI care about on router one, and\n\n122\n00:06:00.852 --> 00:06:04.610\nI can see them both right here:\nGigabitEthernet0/0 and GigabitEthernet1/0.\n\n123\n00:06:04.610 --> 00:06:09.160\nSo I wanna bring those guys into EIGRP.\n\n124\n00:06:09.160 --> 00:06:12.620\nSo the first thing I need to\ndo is I need to turn on EIGRP.\n\n125\n00:06:12.620 --> 00:06:15.580\nI'm going to say router eigrp,\n\n126\n00:06:15.580 --> 00:06:20.110\nand then I'm going to follow that up\nwith an autonomous system number, right?\n\n127\n00:06:20.110 --> 00:06:21.810\nAnd I'm just going to do AS number 1.\n\n128\n00:06:21.810 --> 00:06:26.040\nNow be careful because in OSPF, what was\nthe command we used to turn on the OSPF?\n\n129\n00:06:26.040 --> 00:06:26.980\nRouter OSPF one.\n\n130\n00:06:26.980 --> 00:06:29.560\nAnd I'm saying router EIGRP one.\n\n131\n00:06:29.560 --> 00:06:31.770\nBut know that the one is different.\n\n132\n00:06:31.770 --> 00:06:33.410\nUnder OSPF it was a process ID.\n\n133\n00:06:33.410 --> 00:06:35.440\nIt didn't have to match between routers.\n\n134\n00:06:35.440 --> 00:06:37.240\nHere it's an AS number.\n\n135\n00:06:37.240 --> 00:06:38.650\nIt's got to match.\n\n136\n00:06:38.650 --> 00:06:42.620\nIf I use AS number 1 here I need to\nuse it on all of my other routers too\n\n137\n00:06:42.620 --> 00:06:43.670\nto make sure that gets done.\n\n138\n00:06:44.950 --> 00:06:47.840\nThen I'm running EIGRP.\n\n139\n00:06:47.840 --> 00:06:49.440\nI'm not running it very well.\n\n140\n00:06:49.440 --> 00:06:55.190\nIf I do a show IP protocols,\nI am running EIGRP so it is up and\n\n141\n00:06:55.190 --> 00:07:01.220\nrunning but I'm not advertising any\nnetworks, see routing for networks, none.\n\n142\n00:07:01.220 --> 00:07:04.140\nI'm not actually running\nit in any real sense.\n\n143\n00:07:04.140 --> 00:07:05.280\nI need to get that configured.\n\n144\n00:07:05.280 --> 00:07:08.290\n&gt;&gt; The protocol is turned on,\nit's just not doing anything.\n\n145\n00:07:08.290 --> 00:07:11.220\n&gt;&gt; Right.\nIn theory I could be learning from other\n\n146\n00:07:11.220 --> 00:07:14.950\npeople, but I'm really gonna ignore it cuz\nI haven't turned on any interfaces yet.\n\n147\n00:07:14.950 --> 00:07:18.920\nWe turn on interfaces just like we did\nin OSPF, with the network command.\n\n148\n00:07:18.920 --> 00:07:23.750\nSo we say network, and then we provide\nthe subnet and wildcard mass for\n\n149\n00:07:23.750 --> 00:07:27.730\nthe interface that we wanna turn on,\nall right?\n\n150\n00:07:27.730 --> 00:07:32.775\nSo for example,\nwhen I looked at my interfaces up here,\n\n151\n00:07:32.775 --> 00:07:38.640\nI've got 192.168.0.1 and 192.168.1.1, so I\ncould come in and say network 192.168.0.0.\n\n152\n00:07:38.640 --> 00:07:41.080\nAnd I could just press enter.\n\n153\n00:07:41.080 --> 00:07:46.610\nIf I press enter right here, it's going to\nassume that I put in a class full entry.\n\n154\n00:07:46.610 --> 00:07:50.710\nIt'll look at this and say, it starts\nwith 192, so it's a class C and so\n\n155\n00:07:50.710 --> 00:07:53.430\nI'm gonna look for\nany interface that starts with 192.168.0.\n\n156\n00:07:53.430 --> 00:07:56.153\nAnd I'm gonna bring that into the EIGRP.\n\n157\n00:07:56.153 --> 00:07:59.300\nAnd I did follow class boundaries so\nI could stop right there.\n\n158\n00:07:59.300 --> 00:08:02.567\nAnd that's going to achieve my goal for\nthe first interface.\n\n159\n00:08:02.567 --> 00:08:07.614\nIf I didn't follow class boundaries,\nif I'm doing variable length subnet masks,\n\n160\n00:08:07.614 --> 00:08:11.165\nVLSM, then what I would need to do is,\nin addition to that,\n\n161\n00:08:11.165 --> 00:08:15.307\nI would need to provide a wild card mask,\njust like we did under OSPF.\n\n162\n00:08:15.307 --> 00:08:19.750\nAnd so the wild card mask for\nthis would be 0.0.0.255, right?\n\n163\n00:08:19.750 --> 00:08:22.410\nThe first three octets\nhave to be 192.168.1, and\n\n164\n00:08:22.410 --> 00:08:25.580\nthe last octet can be whatever it wants.\n\n165\n00:08:25.580 --> 00:08:27.044\nI don't care, right?\nThat's the host ID, so\n\n166\n00:08:27.044 --> 00:08:29.160\nthat's gonna get it turned on.\n\n167\n00:08:29.160 --> 00:08:33.095\nThis is just like in OSPF, except in OSPF,\nI would add a little more, wouldn't I?\n\n168\n00:08:33.095 --> 00:08:35.640\nI would say area 0 or area 1.\n\n169\n00:08:35.640 --> 00:08:40.390\nIn EIGRP, we don't have areas, so\nI'll just get rid of that and press Enter.\n\n170\n00:08:40.390 --> 00:08:43.200\nAnd so now,\nI've turned it on from my two networks.\n\n171\n00:08:43.200 --> 00:08:47.454\nNow, I'll tell you guys, in real life\nland, I usually get a little lazy on this,\n\n172\n00:08:47.454 --> 00:08:51.954\nbut if I wanna turn it on for all my\ninterfaces, I use network 0.0.0.0, right,\n\n173\n00:08:51.954 --> 00:08:54.200\nand just catch all the interfaces at once.\n\n174\n00:08:54.200 --> 00:08:57.471\nAnd you can throw in a wild card mask of\nall 0s or all 255s, and it'll snag it,\n\n175\n00:08:57.471 --> 00:09:00.746\nbut if you wanna be specific, remember,\nI've got that management network that\n\n176\n00:09:00.746 --> 00:09:04.050\nwas 10.10.10, or something like that,\nthat I said I wanted to ignore?\n\n177\n00:09:04.050 --> 00:09:05.280\nI wanna leave that one out.\n\n178\n00:09:05.280 --> 00:09:08.050\nSo that's why I'm not using a great\nbig wild card to catch them all.\n\n179\n00:09:08.050 --> 00:09:09.370\nI'm just doing these two individual ones.\n\n180\n00:09:09.370 --> 00:09:12.330\n&gt;&gt; Do you think Cisco will allow you to\nuse that little trick in the exam there?\n\n181\n00:09:12.330 --> 00:09:12.928\n&gt;&gt; Yeah, it works on the exam.\n\n182\n00:09:12.928 --> 00:09:13.594\n&gt;&gt; Awesome.\n\n183\n00:09:13.594 --> 00:09:17.310\n&gt;&gt; Important thing about the exam, on the\nexam, they'll give you tasks to do, and\n\n184\n00:09:17.310 --> 00:09:19.710\nyou've gotta jump in the router and do it.\n\n185\n00:09:19.710 --> 00:09:22.149\nCisco actually does not\ncare how you do it.\n\n186\n00:09:22.149 --> 00:09:25.580\nYou can achieve it through whatever\ngoal you want, they test the results.\n\n187\n00:09:25.580 --> 00:09:31.520\nSo if they want you to add two\nnetwork adapters into EIGRP,\n\n188\n00:09:31.520 --> 00:09:36.020\nwhat they're gonna do when it checks it is\nreally just like a show IP protocols, and\n\n189\n00:09:36.020 --> 00:09:38.900\nsay, do those two networks\nshow up right here, right?\n\n190\n00:09:38.900 --> 00:09:40.810\nAnd if they do, great, you succeed.\n\n191\n00:09:40.810 --> 00:09:42.210\nAnd if they don't, then you failed.\n\n192\n00:09:42.210 --> 00:09:43.520\nThey don't care how you get them in there.\n\n193\n00:09:43.520 --> 00:09:46.470\nSo whatever command works for you,\nyou get them, and you put them in there.\n\n194\n00:09:46.470 --> 00:09:48.760\nAnd you'll see for me it is routing for\nthose two networks.\n\n195\n00:09:48.760 --> 00:09:49.970\nThey're right there.\n\n196\n00:09:49.970 --> 00:09:54.587\nAnd if I take a look at the configuration,\nright, so if I do a show running-config,\n\n197\n00:09:54.587 --> 00:10:01.570\nand I'll do the section command for EIGRP,\nI can take a look at it and there it is.\n\n198\n00:10:01.570 --> 00:10:03.249\nAnd see how it got rid\nof my wild card mask?\n\n199\n00:10:04.320 --> 00:10:06.007\nBecause I was following\nthe class full boundary,\n\n200\n00:10:06.007 --> 00:10:07.945\nit doesn't need the wild card amount,\nso it left it out.\n\n201\n00:10:07.945 --> 00:10:11.950\nIf I was doing vslm, it would have kept it\nand said all right, yeah, you need this.\n\n202\n00:10:11.950 --> 00:10:17.140\nBut in my case, it filtered it out,\nso now I'm running the EIGRP, and\n\n203\n00:10:17.140 --> 00:10:18.870\nI've got those two\nnetworks brought into it.\n\n204\n00:10:18.870 --> 00:10:22.000\nI'm listening, and I'm communicating.\n\n205\n00:10:22.000 --> 00:10:27.030\nSo I'm advertising it out to other\npeople saying hey, I have some routes.\n\n206\n00:10:27.030 --> 00:10:28.110\nAnybody need them?\n\n207\n00:10:28.110 --> 00:10:30.090\nAnd everybody else is\nsupposedly talking to me.\n\n208\n00:10:30.090 --> 00:10:31.810\nNow, nobody's talking to me right now.\n\n209\n00:10:31.810 --> 00:10:34.430\nAnd I know that because when\nI do show IP protocols,\n\n210\n00:10:34.430 --> 00:10:37.120\nI've got this routing information sources,\nand it's empty.\n\n211\n00:10:37.120 --> 00:10:38.680\nThere's no entries in there.\n\n212\n00:10:38.680 --> 00:10:42.010\n&gt;&gt; And that's because you don't have any\nother routers with EIGRP running, right?\n\n213\n00:10:42.010 --> 00:10:43.995\n&gt;&gt; Right, yep,\nI haven't configured anybody else yet.\n\n214\n00:10:43.995 --> 00:10:45.700\nYou'll see my active\ntimer is three minutes.\n\n215\n00:10:45.700 --> 00:10:47.880\nI've been running the EIGRP for\nthree minutes now.\n\n216\n00:10:47.880 --> 00:10:49.127\nAnd we're just kind of waiting.\n\n217\n00:10:49.127 --> 00:10:51.506\nNow, quick comment on that as I scroll up,\n\n218\n00:10:51.506 --> 00:10:55.220\nI don't think it actually shows\nus our true timers in here, yeah.\n\n219\n00:10:56.460 --> 00:10:59.610\nWith RIP, RIP had a 30 second timer.\n\n220\n00:10:59.610 --> 00:11:04.080\nEvery 30 seconds, it sent out a hello\nmessage and a routing table update.\n\n221\n00:11:04.080 --> 00:11:07.624\nAnd then if it didn't hear from somebody\nfor three intervals, 90 seconds,\n\n222\n00:11:07.624 --> 00:11:11.560\nthen it would assume they were down,\nso RIP was slow because of that.\n\n223\n00:11:11.560 --> 00:11:14.460\nWhy doesn't EIGRP have\na bunch of timers up here?\n\n224\n00:11:14.460 --> 00:11:18.260\nWell, the reason is EIGRP doesn't\nwork with standard timers.\n\n225\n00:11:18.260 --> 00:11:21.230\nThere is actually one timer in EIGRP,\nI'll mention it in a second.\n\n226\n00:11:21.230 --> 00:11:23.360\nBut for the most part,\nit doesn't use timers.\n\n227\n00:11:23.360 --> 00:11:26.810\nIt notifies immediately.\n\n228\n00:11:26.810 --> 00:11:30.214\nWhen I turn on EIGRP,\nI immediately send out a notification.\n\n229\n00:11:30.214 --> 00:11:34.375\nAnd then whenever there's a change,\nI immediately send out a notification, so\n\n230\n00:11:34.375 --> 00:11:37.050\nit's called trigger-based, not time-based.\n\n231\n00:11:37.050 --> 00:11:39.380\nOSPF is the same way,\nOSPF is trigger-based also.\n\n232\n00:11:39.380 --> 00:11:41.887\nThey don't wait for a timer,\nthat makes them faster.\n\n233\n00:11:41.887 --> 00:11:44.590\nRIP is slow because it's stuck\non these timers, gotta wait for\n\n234\n00:11:44.590 --> 00:11:46.600\nthese 30 second intervals to hit.\n\n235\n00:11:46.600 --> 00:11:50.140\nWith EIGRP and OSPF,\nthey work on a trigger, triggered events.\n\n236\n00:11:50.140 --> 00:11:53.810\nA change to the routing table triggers a\nrouting update, and we send a message out.\n\n237\n00:11:53.810 --> 00:11:55.200\n&gt;&gt; Do we ever have any\nconflicts with that?\n\n238\n00:11:55.200 --> 00:11:58.570\nLike say, we had a large environment.\n\n239\n00:11:58.570 --> 00:12:01.680\nYou're working on one router,\nI'm working on another, and somehow,\n\n240\n00:12:01.680 --> 00:12:03.950\nwe identically at the same\ntime made a change and\n\n241\n00:12:03.950 --> 00:12:07.870\nthey triggered an event, is there any kind\nof conflict, or does it work itself out?\n\n242\n00:12:07.870 --> 00:12:08.970\n&gt;&gt; There certainly could be.\n\n243\n00:12:08.970 --> 00:12:12.050\nYou could be communicating\nthat a route just came up, and\n\n244\n00:12:12.050 --> 00:12:14.200\nI could be communicating that\nthe same route just came up,\n\n245\n00:12:14.200 --> 00:12:16.160\nright, we're both sending\nout the same communications.\n\n246\n00:12:16.160 --> 00:12:17.860\nWe don't know about each other, right?\n\n247\n00:12:17.860 --> 00:12:19.070\nBut what's gonna happen?\n\n248\n00:12:19.070 --> 00:12:21.580\nYou're gonna hear my change,\nand I'm gonna hear your change.\n\n249\n00:12:21.580 --> 00:12:25.060\nAnd so we're gonna update to reflect that,\nand that triggers another update.\n\n250\n00:12:25.060 --> 00:12:27.040\nAnd so it immediately resolves itself.\n\n251\n00:12:27.040 --> 00:12:31.060\nAnd so, any confusion on the network\nwill cause a reconvergence.\n\n252\n00:12:31.060 --> 00:12:33.220\nAnd it converges very,\nvery quickly and resolves that.\n\n253\n00:12:33.220 --> 00:12:37.030\nThe EIGRP is very fast about recognizing\nchanges and adapting to it on the network.\n\n254\n00:12:38.160 --> 00:12:40.415\nAll right, so\nthat's another advantage of the EIGRP.\n\n255\n00:12:40.415 --> 00:12:41.651\nIt is fast about this stuff.\n\n256\n00:12:41.651 --> 00:12:44.264\nAnd so I'm up and running,\nif I go and turn on another router,\n\n257\n00:12:44.264 --> 00:12:47.050\nwe'll see its routing table\npopulate almost instantaneously.\n\n258\n00:12:47.050 --> 00:12:48.660\nJust very, very quickly, right?\n\n259\n00:12:48.660 --> 00:12:49.710\nSo let's do that.\n\n260\n00:12:49.710 --> 00:12:51.380\nI need to do router 2 and router 3, right?\n\n261\n00:12:51.380 --> 00:12:56.710\nSo on router 2,\nI'm gonna do a configure, and\n\n262\n00:12:56.710 --> 00:13:01.380\nI'll do router eigrp, and I need to do a 1\non this cuz this is an AS number, right?\n\n263\n00:13:01.380 --> 00:13:03.810\nThe autonomous system number has to match.\n\n264\n00:13:03.810 --> 00:13:07.030\nAnd then from here,\nI can do my network statement send.\n\n265\n00:13:07.030 --> 00:13:10.100\nLike I mentioned,\nI could go super wild on this one and\n\n266\n00:13:10.100 --> 00:13:13.950\ndo a full on crazy wild\ncard mask like that.\n\n267\n00:13:13.950 --> 00:13:15.480\nAnd see how my adjacencies just came up.\n\n268\n00:13:15.480 --> 00:13:18.640\nThat grabbed all my interfaces and\nturned on EIGRP.\n\n269\n00:13:18.640 --> 00:13:21.250\nNow, if I take a look at my interfaces,\n\n270\n00:13:21.250 --> 00:13:23.570\nI only have the two interfaces\nhere that I cared about.\n\n271\n00:13:23.570 --> 00:13:26.030\nSo, that's why I went ahead and\ndid the wild card.\n\n272\n00:13:26.030 --> 00:13:30.323\nBut if you wanna exclude networks, you'd\nneed to do them individually, or there is\n\n273\n00:13:30.323 --> 00:13:34.621\nactually another technique you could use,\nsomething called a passive interface.\n\n274\n00:13:34.621 --> 00:13:38.470\nAnd passive interfaces,\nthey used to be on the exam objectives.\n\n275\n00:13:38.470 --> 00:13:41.210\nI think they removed them now, but\na passive interface is where you have\n\n276\n00:13:41.210 --> 00:13:44.860\nan interface that's a part of the EIGRP,\nbut that you don't wanna learn any routes\n\n277\n00:13:44.860 --> 00:13:47.820\non, that you wanna kind of suppress\nthe routes being learned on it.\n\n278\n00:13:47.820 --> 00:13:49.898\nAnd you do that right here\nin the router configuration.\n\n279\n00:13:49.898 --> 00:13:54.540\nYou say Passive-interface and then what\ninterface it is, whichever one, and\n\n280\n00:13:54.540 --> 00:13:55.430\nthat'll suppress routes.\n\n281\n00:13:55.430 --> 00:13:58.230\nBut you still advertise\nthat that network is there.\n\n282\n00:13:58.230 --> 00:14:00.210\nAnd I didn't wanna advertise\nthat network earlier.\n\n283\n00:14:00.210 --> 00:14:02.330\nSo passive interface\ndoesn't solve the problem.\n\n284\n00:14:02.330 --> 00:14:05.410\nThat's why I had to use specific\nnetwork statements over there.\n\n285\n00:14:05.410 --> 00:14:08.131\nRouter 2 and router 3 though,\nI can just use the nice big wild card and\n\n286\n00:14:08.131 --> 00:14:10.330\nsave some time, or at least I think I can.\n\n287\n00:14:10.330 --> 00:14:12.240\nLet me do a show IP interface brief.\n\n288\n00:14:12.240 --> 00:14:16.250\nAnother advantage of doing the nice big\nwild card is if I add new interfaces in\n\n289\n00:14:16.250 --> 00:14:20.380\nthe future, they'll automatically\nbecome part of the EIGRP process.\n\n290\n00:14:20.380 --> 00:14:24.230\nThey'll get advertised out, versus\nwhen I did specific network commands,\n\n291\n00:14:24.230 --> 00:14:27.690\nif I add another interface later on,\nit's gonna be in a different network.\n\n292\n00:14:27.690 --> 00:14:29.760\nI would have to manually\nadd that into EIGRP.\n\n293\n00:14:29.760 --> 00:14:30.680\nAnd maybe you want that.\n\n294\n00:14:30.680 --> 00:14:33.680\nMaybe you want that control, that would\nbe a reason for going that route.\n\n295\n00:14:35.152 --> 00:14:37.080\nAll right, so\nlet me get into router eigrp 1,\n\n296\n00:14:37.080 --> 00:14:42.240\nand I'll do another nice, big,\nfat wild card on this one.\n\n297\n00:14:42.240 --> 00:14:44.080\nI'll do all 0s.\n\n298\n00:14:44.080 --> 00:14:47.480\nIt's all the same, all 0s or all 255s,\nit's kind of aliased on the same.\n\n299\n00:14:47.480 --> 00:14:50.974\nAnd there,\nI get some neighbor adjacencies coming up.\n\n300\n00:14:50.974 --> 00:14:55.880\nAnd if I do a show run and I'll look at\nthe section for eigrp, and we take a look\n\n301\n00:14:55.880 --> 00:15:00.788\nat that, you'll see, hopefully,\nthere we go, that nice big wild card and\n\n302\n00:15:00.788 --> 00:15:05.189\nsee how it ditched my wild card mask and\nit just put 0.0.0.0.\n\n303\n00:15:05.189 --> 00:15:08.730\nIt doesn't need it cuz it's all 0s anyway,\nand there it goes.\n\n304\n00:15:08.730 --> 00:15:12.290\nSo EIGRP can be configured\nin as short as two lines.\n\n305\n00:15:12.290 --> 00:15:14.590\nAnd now it's done,\nit's up and it's running.\n\n306\n00:15:14.590 --> 00:15:15.650\n&gt;&gt; Very simple.\n\n307\n00:15:15.650 --> 00:15:18.280\n&gt;&gt; So\nI just configured it on three routers.\n\n308\n00:15:18.280 --> 00:15:19.730\nHow do I know it's working?\n\n309\n00:15:19.730 --> 00:15:23.230\nWell, I can jump to any one of these\nrouters, and I can do a show ip route,\n\n310\n00:15:23.230 --> 00:15:27.770\nand when I look at my routing table,\nhopefully, I see some EIGRP routes.\n\n311\n00:15:27.770 --> 00:15:31.150\nNow if this is your first time doing this,\nyou're gonna look, and you're gonna say,\n\n312\n00:15:31.150 --> 00:15:33.650\nall right,\nI expect to see an E over here, right?\n\n313\n00:15:33.650 --> 00:15:34.940\nOSPF, it was an O.\n\n314\n00:15:34.940 --> 00:15:36.400\nEIGRP, it should be an E.\n\n315\n00:15:36.400 --> 00:15:39.977\nWell, unfortunately, E was already taken.\n\n316\n00:15:39.977 --> 00:15:44.413\n[LAUGH] So when Cisco created their\nprotocol, it was IGRP originally, and so\n\n317\n00:15:44.413 --> 00:15:45.465\nthey gave it an I.\n\n318\n00:15:45.465 --> 00:15:49.092\nThere was another protocol at the time\ncalled EGP, the exterior gateway protocol,\n\n319\n00:15:49.092 --> 00:15:51.990\nno one runs it anymore,\nit's an ancient protocol.\n\n320\n00:15:51.990 --> 00:15:53.830\nBut they gave it the E, and so\n\n321\n00:15:53.830 --> 00:15:58.470\nwhen they upgraded IGRP to EIGRP,\nthe E was already taken.\n\n322\n00:15:58.470 --> 00:16:03.171\nAnd if you look up here in the legend and\nfind it, I think is E even listed anymore?\n\n323\n00:16:03.171 --> 00:16:06.341\nYeah, the E is not even listed in\nthe legend anymore cuz really,\n\n324\n00:16:06.341 --> 00:16:10.098\nnobody runs EGP But because of that,\nthey had to pick another letter, and so\n\n325\n00:16:10.098 --> 00:16:11.290\nthey picked D for dual.\n\n326\n00:16:11.290 --> 00:16:15.173\nRemember EIGRP's algorithm is\nthe diffusing update algorithm or dual so\n\n327\n00:16:15.173 --> 00:16:17.140\nthat's why they gave it a D.\n\n328\n00:16:17.140 --> 00:16:20.560\nSo, when you look over here in your\nlegend, you're looking for the letter D.\n\n329\n00:16:20.560 --> 00:16:21.090\nAnd I can see it.\n\n330\n00:16:21.090 --> 00:16:24.750\nI've picked up two routes with a D.\n\n331\n00:16:24.750 --> 00:16:28.760\nNow, remember with OSPF my\nmetrics were things like 2, 20,\n\n332\n00:16:28.760 --> 00:16:33.620\nreally low, simple numbers that were a\nresult of the way it calculates out cost.\n\n333\n00:16:33.620 --> 00:16:39.074\nBut EIGRP, I've got 3072, 28416.\n\n334\n00:16:39.074 --> 00:16:40.834\nI've got these crazy metrics.\n\n335\n00:16:40.834 --> 00:16:44.023\nAnd remember that's because we\ntake the reference bandwidth,\n\n336\n00:16:44.023 --> 00:16:47.388\nwe divide it by the actual bandwidth and\nthen we multiply by 256,\n\n337\n00:16:47.388 --> 00:16:49.830\nwhich is why we get such a big number.\n\n338\n00:16:49.830 --> 00:16:53.370\nAnd then we add to it the delay,\nand the delay is in milliseconds.\n\n339\n00:16:53.370 --> 00:16:56.940\nSo it, on a good network,\nmight be 2 milliseconds, but\n\n340\n00:16:56.940 --> 00:16:59.030\non a bad network,\nit might be 1000 milliseconds.\n\n341\n00:16:59.030 --> 00:17:01.560\nSo that adds that number and\nit makes it grow.\n\n342\n00:17:01.560 --> 00:17:04.590\nSo that's where that\nnumber is coming from, and\n\n343\n00:17:04.590 --> 00:17:06.180\nyou end up with these larger numbers.\n\n344\n00:17:06.180 --> 00:17:10.440\nBut that's why EIGRP will be able to tell\nthe difference between a 100 megabit line\n\n345\n00:17:10.440 --> 00:17:11.530\nand a gigabit line,\n\n346\n00:17:11.530 --> 00:17:14.860\nwhereas OSPF was not able to do that\nvery well due to the rounding error.\n\n347\n00:17:14.860 --> 00:17:17.010\nSo we can see that here.\n\n348\n00:17:17.010 --> 00:17:19.617\nIt's picked them up,\nand it's up and going.\n\n349\n00:17:19.617 --> 00:17:22.928\nNow remember with RIP,\nRIP was timer based, and so\n\n350\n00:17:22.928 --> 00:17:26.130\nit was sending updates every 30 seconds.\n\n351\n00:17:26.130 --> 00:17:30.630\nSo when you looked over here at\nthe last time that it communicated,\n\n352\n00:17:30.630 --> 00:17:34.250\nif you saw a number over 30 seconds,\nthat was a problem.\n\n353\n00:17:34.250 --> 00:17:35.650\nBut here I am in EIGRP and\n\n354\n00:17:35.650 --> 00:17:37.795\nboth these routes have times\nover 30 seconds, don't they?\n\n355\n00:17:37.795 --> 00:17:39.740\n2 minutes and 13 seconds,\n\n356\n00:17:39.740 --> 00:17:44.910\n40 seconds, that number's gonna\nkeep going up and up and up.\n\n357\n00:17:44.910 --> 00:17:48.190\nAnd so as I run show ip route, now I\ngot 4 and a half minutes and 3 minutes.\n\n358\n00:17:48.190 --> 00:17:49.438\nSo they keep going up.\n\n359\n00:17:49.438 --> 00:17:51.380\nBut the reason it's going\nup is nothing changed.\n\n360\n00:17:51.380 --> 00:17:53.020\nIf nothing changes,\nwe don't talk about it.\n\n361\n00:17:53.020 --> 00:17:55.860\nBut why bother the other routers,\nnothing changed.\n\n362\n00:17:55.860 --> 00:17:58.390\nIf something changes, then we talk.\n\n363\n00:17:58.390 --> 00:18:01.320\nThe exception, and this is the one\ntime where I mentioned this,\n\n364\n00:18:01.320 --> 00:18:05.890\nif absolutely nothing happens,\nhow do we know nothing's changed?\n\n365\n00:18:05.890 --> 00:18:08.000\nHow do we know that maybe a router\nhasn't disappeared out there and\n\n366\n00:18:08.000 --> 00:18:08.840\nI just don't know about it yet?\n\n367\n00:18:09.870 --> 00:18:11.190\nIt could happen.\n\n368\n00:18:11.190 --> 00:18:16.010\nSo if absolutely nothing happens for\n15 minutes, then it'll go ahead and\n\n369\n00:18:16.010 --> 00:18:17.630\nsend out an update.\n\n370\n00:18:17.630 --> 00:18:21.970\nJust to do it, every 15 minutes, to say,\nhey guys, just in case, here's an update.\n\n371\n00:18:21.970 --> 00:18:24.000\nAnd every 15 minutes,\nthat's so far spread out,\n\n372\n00:18:24.000 --> 00:18:26.770\nthat it really creates zero,\nnext to zero impact on your network.\n\n373\n00:18:26.770 --> 00:18:30.790\nSo there is one timer in play, but\nfor the most part, it's trigger based.\n\n374\n00:18:30.790 --> 00:18:35.360\nWhen a new router powers up, that triggers\nan update and everybody talks to it.\n\n375\n00:18:35.360 --> 00:18:40.000\nWhen a link goes down, that triggers\nan update and the routers communicate out.\n\n376\n00:18:40.000 --> 00:18:42.900\nThe only time we wouldn't have a trigger\nlike that is if a router completely\n\n377\n00:18:42.900 --> 00:18:44.110\ndisappeared.\n\n378\n00:18:44.110 --> 00:18:46.980\nAnd if it disappears, usually,\na link goes down which triggers an update.\n\n379\n00:18:46.980 --> 00:18:49.350\nBut if it manages to disappear\nwithout bringing a link down,\n\n380\n00:18:49.350 --> 00:18:51.100\nthen we might not know\nabout it right away.\n\n381\n00:18:51.100 --> 00:18:53.010\nAnd so there can be some polling and\n\n382\n00:18:53.010 --> 00:18:55.260\nother things that have to happen\nbefore that gets detected.\n\n383\n00:18:55.260 --> 00:18:59.410\nThat can create a slow recovery,\nbut that doesn't happen very often.\n\n384\n00:18:59.410 --> 00:19:01.970\nWhen we do communications,\nthey communicate very quickly and\n\n385\n00:19:01.970 --> 00:19:02.540\nwe learn about it.\n\n386\n00:19:02.540 --> 00:19:04.310\nThe link states change and\nwe communicate very fast.\n\n387\n00:19:04.310 --> 00:19:06.721\nEverything's up to the [INAUDIBLE]\n&gt;&gt; Reminds me when you're talking on\n\n388\n00:19:06.721 --> 00:19:09.148\nthe phone to somebody and you've been\nblabbing on and on and on and on.\n\n389\n00:19:09.148 --> 00:19:13.129\nAnd you realize you haven't heard\na word from them [LAUGH], no uh-huhs or\n\n390\n00:19:13.129 --> 00:19:14.880\nanything and you, hello.\n\n391\n00:19:14.880 --> 00:19:17.610\nYou know, that's us,\nour 15 minute check in.\n\n392\n00:19:17.610 --> 00:19:18.820\nThat's what EIGRP is doing.\n\n393\n00:19:18.820 --> 00:19:19.945\nYou still there?\n\n394\n00:19:19.945 --> 00:19:21.934\nI got some more to say,\nand then it rocks them.\n\n395\n00:19:21.934 --> 00:19:25.511\n&gt;&gt; Yep, exactly, so I've got it\nconfigured here on these two, but\n\n396\n00:19:25.511 --> 00:19:27.540\nthat's a simple part of my network.\n\n397\n00:19:27.540 --> 00:19:29.140\nLet's look at the rest of the network.\n\n398\n00:19:29.140 --> 00:19:35.560\nNow remember that across the top here, R2\nto R4 to R6, those are all gigabit links.\n\n399\n00:19:35.560 --> 00:19:39.490\nR3 to R5 to R6 down here across\nthe bottom, those are 100 megabit links.\n\n400\n00:19:39.490 --> 00:19:41.780\nAnd when I configure this with OSPF,\n\n401\n00:19:41.780 --> 00:19:46.080\nrouter 6 had two routes to the 192.168.0.0\nnetwork, across the top and\n\n402\n00:19:46.080 --> 00:19:50.730\nacross the bottom cuz it saw the gigabit\nand the 100 megabit links as equal.\n\n403\n00:19:50.730 --> 00:19:55.960\nWell, let's get EIGRP running on the rest\nof this hardware and see what happens,\n\n404\n00:19:55.960 --> 00:19:59.690\nsee if it makes that same decision or\nif it's smarter about it.\n\n405\n00:19:59.690 --> 00:20:02.320\nWhich it should be smarter about it\nbecause it can tell the difference\n\n406\n00:20:02.320 --> 00:20:03.760\nbetween those links.\n\n407\n00:20:03.760 --> 00:20:06.030\nSo I'm gonna jump back over to my routers.\n\n408\n00:20:06.030 --> 00:20:08.628\nAnd to save a little bit of time,\n\n409\n00:20:08.628 --> 00:20:15.150\nlet's do the old cheat here where\nI'll write a cut and paste script.\n\n410\n00:20:15.150 --> 00:20:19.360\nSo what I wanna do is on routers 4, 5 and\n6, I wanna get them configured quickly.\n\n411\n00:20:19.360 --> 00:20:24.309\nSo I'm gonna say enable\nconf router eigrp 1\n\n412\n00:20:24.309 --> 00:20:28.198\nnetwork 0.0.0.0 and end.\n\n413\n00:20:28.198 --> 00:20:32.279\nSo those guys right there, that's the\ncommands I need to get eigrp configured on\n\n414\n00:20:32.279 --> 00:20:35.040\npretty much any router, and do it quickly.\n\n415\n00:20:35.040 --> 00:20:37.100\nSo now I can just jump right over here.\n\n416\n00:20:38.340 --> 00:20:40.110\nI'm on router 1 so\nI need to get to router 4.\n\n417\n00:20:40.110 --> 00:20:41.520\nAnd I'll just paste that in.\n\n418\n00:20:41.520 --> 00:20:44.470\nI'll go to router 5, do the same thing.\n\n419\n00:20:44.470 --> 00:20:46.110\nGo to router 6, do the same thing.\n\n420\n00:20:46.110 --> 00:20:49.630\nSo just like that, now I've got EGIRP\ndeployed across my entire environment and\n\n421\n00:20:49.630 --> 00:20:51.550\nI start to see those adjacencies happen.\n\n422\n00:20:51.550 --> 00:20:55.150\nAnd each adjacency is triggering\nan update, and so they're sharing their\n\n423\n00:20:55.150 --> 00:20:58.220\nroutes and the network should\nconverge very, very quickly.\n\n424\n00:20:58.220 --> 00:20:59.300\nIt should already be done.\n\n425\n00:20:59.300 --> 00:21:01.705\nOn router 6, if I do a show ip route,\n\n426\n00:21:01.705 --> 00:21:07.160\nI can see that I've got 192.168.0.1,\n.2, .3, .4, and .5.\n\n427\n00:21:07.160 --> 00:21:11.284\nI've got all those networks that are out\nthere, I learned them via EIGRP, and\n\n428\n00:21:11.284 --> 00:21:15.120\nthey had already been up for\n16 seconds by the time I ran that command.\n\n429\n00:21:15.120 --> 00:21:16.590\nSo that's how fast it is.\n\n430\n00:21:16.590 --> 00:21:20.570\nUsually, EIGRP typically converges\nin less than two seconds.\n\n431\n00:21:20.570 --> 00:21:23.885\nSo that's it, its target goal is\nusually less than two seconds.\n\n432\n00:21:23.885 --> 00:21:27.280\nAnd when I look at these metrics,\nthey're all over the place,\n\n433\n00:21:27.280 --> 00:21:31.320\nbut the key metric that I'm looking for\nis this guy right here, 192.168.0.0.\n\n434\n00:21:31.320 --> 00:21:35.470\nUnder OSPF, I had two routes to get there,\nover the gig line and\n\n435\n00:21:35.470 --> 00:21:36.840\nover the 100 megabit line.\n\n436\n00:21:36.840 --> 00:21:39.641\nNow, I've only got one\nroute to get there and\n\n437\n00:21:39.641 --> 00:21:42.754\nit's over the GigabitEthernet1/0 network.\n\n438\n00:21:42.754 --> 00:21:46.109\nIn fact, the majority of the networks I\nlearned are all over the gigabit links\n\n439\n00:21:46.109 --> 00:21:48.128\nbecause it knows they're faster.\n\n440\n00:21:48.128 --> 00:21:49.580\nThe only ones that\nare over the FastEthernet\n\n441\n00:21:49.580 --> 00:21:53.920\nare the one's that I'm directly connected\nto down here, not ones that I learned.\n\n442\n00:21:53.920 --> 00:21:56.788\nAll the ones that I learned\nare over those gig links and\n\n443\n00:21:56.788 --> 00:22:00.400\nthat's cuz EIGRP is making\na smarter decision about it.\n\n444\n00:22:00.400 --> 00:22:02.190\nNow let's simulate a failure.\n\n445\n00:22:02.190 --> 00:22:05.140\nIf I jump over to router 1 and\n\n446\n00:22:05.140 --> 00:22:08.980\nlet's take 192.168.0 network,\nthis network right here.\n\n447\n00:22:08.980 --> 00:22:14.380\nI'm gonna get into my configuration and\nget into int gi0/0.\n\n448\n00:22:14.380 --> 00:22:16.210\nAnd I'm gonna get ready to\nissue a shutdown command.\n\n449\n00:22:16.210 --> 00:22:17.640\nI'm not gonna run it yet.\n\n450\n00:22:17.640 --> 00:22:22.710\nI'm gonna jump over to router 6,\nand I'm gonna do a show ip route,\n\n451\n00:22:23.900 --> 00:22:29.820\nand I'm gonna filter it so\nthat I just see 192.168.0.0.\n\n452\n00:22:29.820 --> 00:22:33.150\nSo just that one route, and there it is.\n\n453\n00:22:33.150 --> 00:22:38.150\nI'm gonna jump back over to router 1,\nand I'm gonna shut that interface down.\n\n454\n00:22:38.150 --> 00:22:41.040\nAnd then I'll jump back right\nback over to router 6 and\n\n455\n00:22:41.040 --> 00:22:44.770\nwe'll do that same show ip route, and\nyou'll see how quickly it removes it.\n\n456\n00:22:44.770 --> 00:22:49.340\nSo we're gonna kill the interface and then\nrun the command, and it's already gone.\n\n457\n00:22:49.340 --> 00:22:51.500\nThat's how fast EGIRP can update.\n\n458\n00:22:51.500 --> 00:22:55.120\nAnd if I come back here and\nbring the interface back up.\n\n459\n00:22:55.120 --> 00:22:58.042\nLet me just get the command\nqueued up on my screen.\n\n460\n00:22:58.042 --> 00:23:02.450\nI'm gonna bring the interface back up,\nand then we'll see it come back up.\n\n461\n00:23:02.450 --> 00:23:05.375\nNow this one is gonna take a little\nbit longer because interfaces don't\n\n462\n00:23:05.375 --> 00:23:06.749\nimmediately come up on routers.\n\n463\n00:23:06.749 --> 00:23:10.011\nRemember it's gotta wait for it to go up,\nup before it brings it in process, and\n\n464\n00:23:10.011 --> 00:23:11.830\nthat link's gonna come back in.\n\n465\n00:23:11.830 --> 00:23:15.000\nSo when it comes back up, it's gotta\ncommunicate across the different routers\n\n466\n00:23:15.000 --> 00:23:15.990\nand get populated back in it.\n\n467\n00:23:15.990 --> 00:23:18.623\nIt's much quicker for\nour link to go down than it is to come up.\n\n468\n00:23:18.623 --> 00:23:23.469\nNow, the reason it takes longer to\ncome up is that if I have an alternate\n\n469\n00:23:23.469 --> 00:23:27.830\npath selected,\nthe alternate path is already working.\n\n470\n00:23:27.830 --> 00:23:30.700\nSo I wanna make sure the first\npath is functional before I\n\n471\n00:23:30.700 --> 00:23:31.500\nbring the other one in.\n\n472\n00:23:31.500 --> 00:23:34.332\nDid I not bring it up?\n\n473\n00:23:34.332 --> 00:23:36.624\nNo, I did, no shutdown,\nit's just taking a little while.\n\n474\n00:23:36.624 --> 00:23:38.248\nIt's actually taking longer\nthan I thought it would.\n\n475\n00:23:40.300 --> 00:23:41.780\nUsually, it's a little faster than this.\n\n476\n00:23:41.780 --> 00:23:44.060\nBut if you had that alternate path,\nthough, and knows that's good,\n\n477\n00:23:44.060 --> 00:23:46.480\nso leaving a place while it\ncalculates out the other one.\n\n478\n00:23:46.480 --> 00:23:48.130\nThe link should have come out.\n\n479\n00:23:48.130 --> 00:23:50.150\nThis is probably the longest\nI've ever seen it take.\n\n480\n00:23:50.150 --> 00:23:50.660\nI have a problem.\n\n481\n00:23:51.710 --> 00:23:52.980\nThere can be problems.\n\n482\n00:23:52.980 --> 00:23:55.173\nSo there can be issues where\nan update doesn't pass through.\n\n483\n00:23:55.173 --> 00:23:59.252\nBut in a new stable environment like\nthis one, that shouldn't be a problem.\n\n484\n00:23:59.252 --> 00:24:02.154\nSo let me jump and\ncheck some router that's closer.\n\n485\n00:24:02.154 --> 00:24:03.597\nWe talk about proximity.\n\n486\n00:24:03.597 --> 00:24:06.980\nThat Router 1 is talking directly\nto Router 2 and Router 3.\n\n487\n00:24:06.980 --> 00:24:08.400\nIt's talking to these guys right here.\n\n488\n00:24:08.400 --> 00:24:09.670\nThey'll get the update first.\n\n489\n00:24:09.670 --> 00:24:11.940\nAnd then the update spreads\nacross the links from there.\n\n490\n00:24:11.940 --> 00:24:15.034\nSo let's go see if somebody close,\nlike Router 2, has already got that route.\n\n491\n00:24:15.034 --> 00:24:18.796\nIf I jump over to Router 2 and\ndo a show ip route,\n\n492\n00:24:18.796 --> 00:24:22.856\nit's already learned 192.168.0.0.\n\n493\n00:24:22.856 --> 00:24:25.312\nAnd it's had it for\na minute and 15 seconds.\n\n494\n00:24:25.312 --> 00:24:26.940\nSo it's had it for a while.\n\n495\n00:24:26.940 --> 00:24:29.708\nLet's continue on our path to Router 4.\n\n496\n00:24:29.708 --> 00:24:33.870\nIf I go to Router 4 and\ndo a show ip route.\n\n497\n00:24:33.870 --> 00:24:36.379\nIt's got it, and it's had it for\na minute and 30 seconds.\n\n498\n00:24:36.379 --> 00:24:38.780\nIf I go to Router 6 and\ndo that show ip route.\n\n499\n00:24:42.280 --> 00:24:43.710\nIt's had it for a minute and 38 seconds.\n\n500\n00:24:43.710 --> 00:24:50.255\nWhy is my, my filter command\nis not working right, I guess.\n\n501\n00:24:50.255 --> 00:24:52.777\n[CROSSTALK] Nope,\nI see what the problem is.\n\n502\n00:24:52.777 --> 00:24:54.190\nI added a space to the end of it.\n\n503\n00:24:54.190 --> 00:24:55.476\nDarn it, that ruined the whole\ndemonstration, didn't it?\n\n504\n00:24:55.476 --> 00:24:58.500\n&gt;&gt; [LAUGH]\n&gt;&gt; The include command is really picky.\n\n505\n00:24:58.500 --> 00:25:01.690\nIf you add a space to the end of it,\nit's looking for a space.\n\n506\n00:25:01.690 --> 00:25:05.539\nAnd if you look up here,\nit's 192.168.0.0/24.\n\n507\n00:25:05.539 --> 00:25:07.151\nThere's no space there, right?\n\n508\n00:25:07.151 --> 00:25:08.552\nAnd so that's why it wasn't finding it.\n\n509\n00:25:08.552 --> 00:25:09.623\nI ruined my own stinking example.\n\n510\n00:25:09.623 --> 00:25:13.180\nSee, it's been here for two minutes and\nfive seconds, so it had already got it.\n\n511\n00:25:13.180 --> 00:25:14.120\nIt got it pretty quickly.\n\n512\n00:25:14.120 --> 00:25:15.136\nLike I said,\nI thought that was a little bit longer.\n\n513\n00:25:15.136 --> 00:25:17.190\n&gt;&gt; Well, that's good because now\nwe learned to troubleshoot that.\n\n514\n00:25:17.190 --> 00:25:20.330\nIf we were having a little bit of a\nproblem, we could follow the progression.\n\n515\n00:25:20.330 --> 00:25:21.457\n&gt;&gt; Yep.\n\n516\n00:25:21.457 --> 00:25:23.180\nThat's basically how we can spot that.\n\n517\n00:25:23.180 --> 00:25:25.350\nThe same thing happens\nwith paths failing over.\n\n518\n00:25:25.350 --> 00:25:27.630\nMaybe the failure isn't right here,\non Router 1,\n\n519\n00:25:27.630 --> 00:25:28.510\nwhere the whole network goes down.\n\n520\n00:25:28.510 --> 00:25:30.910\nMaybe the failure is on this path.\n\n521\n00:25:30.910 --> 00:25:36.460\nRight now, Router 6 is following Gi\n1/0 to cross the top to get over here.\n\n522\n00:25:36.460 --> 00:25:38.721\nWhat if that Gi 1/0 fails?\n\n523\n00:25:38.721 --> 00:25:40.390\nWhat's gonna happen then?\n\n524\n00:25:40.390 --> 00:25:41.920\nWe'll, we can see that.\n\n525\n00:25:41.920 --> 00:25:48.260\nOn router 6, if I do a show ip route,\nand I'll just pull that network.\n\n526\n00:25:48.260 --> 00:25:51.900\nSo I've got a route, and that route\nis over my GigabitEthernet interface.\n\n527\n00:25:52.990 --> 00:25:57.530\nIf I shut that interface down, so\n\n528\n00:25:57.530 --> 00:26:01.710\nthat's this interface, and\nI'm gonna do that show ip route again.\n\n529\n00:26:01.710 --> 00:26:05.187\nLet me just do that from\nwithin the config here.\n\n530\n00:26:05.187 --> 00:26:05.710\nThere we go.\n\n531\n00:26:05.710 --> 00:26:08.640\nSo I've got the route, and\nit's over my GigabitEthernet interface.\n\n532\n00:26:08.640 --> 00:26:10.483\nI can see it right there over my head.\n\n533\n00:26:10.483 --> 00:26:14.053\nAnd if I do a shut down and\nthen I pull it,\n\n534\n00:26:14.053 --> 00:26:19.050\nI've already got the other\nroute in my routing table.\n\n535\n00:26:19.050 --> 00:26:21.650\nAnd it's over FastEthernet2/0.\n\n536\n00:26:21.650 --> 00:26:23.860\nSee how fast it flipped\nover to that other path?\n\n537\n00:26:23.860 --> 00:26:27.010\nBefore I even got the messages\nabout the interface going down\n\n538\n00:26:27.010 --> 00:26:28.410\nit had already flipped\nover to that other path.\n\n539\n00:26:29.690 --> 00:26:31.154\nHow'd it do that so quickly?\n\n540\n00:26:31.154 --> 00:26:33.197\nWith OSPF, the moment that link changed,\n\n541\n00:26:33.197 --> 00:26:35.880\nwe have to run the shortest\npast first algorithm again.\n\n542\n00:26:35.880 --> 00:26:38.260\nAnd recalculate and\npick who's the next best route.\n\n543\n00:26:38.260 --> 00:26:40.020\nWith EIGRP, we don't.\n\n544\n00:26:40.020 --> 00:26:45.790\nAnd the reason is, in EIGRP, it tracks\nwhat's called a feasible successor.\n\n545\n00:26:45.790 --> 00:26:48.090\nWhen it makes its routing table,\n\n546\n00:26:48.090 --> 00:26:50.340\nthe routes that make it\ninto the routing table,\n\n547\n00:26:50.340 --> 00:26:53.740\nwhat's actually here in our routing table,\nare what are called successor routes.\n\n548\n00:26:53.740 --> 00:26:57.120\nThese are routes that succeeded in\nmaking it to the routing table.\n\n549\n00:26:57.120 --> 00:26:58.594\nThese are the best of the best right here.\n\n550\n00:26:58.594 --> 00:26:59.900\nThis is the best thing that I've got.\n\n551\n00:27:01.160 --> 00:27:03.900\nBut what happens to second place?\n\n552\n00:27:03.900 --> 00:27:06.840\nIn OSPF, second place gets ignored.\n\n553\n00:27:06.840 --> 00:27:07.374\n&gt;&gt; First loser.\n[LAUGH]\n\n554\n00:27:07.374 --> 00:27:08.688\n&gt;&gt; They're the best of the losers and\n\n555\n00:27:08.688 --> 00:27:11.830\nthey get chucked in the database and\nthat's the end of it.\n\n556\n00:27:11.830 --> 00:27:14.680\nAnd when a failure happens,\nit has to do a recalculation.\n\n557\n00:27:14.680 --> 00:27:20.530\nBut in EIGRP, second place gets marked\nas what's called a feasible successor.\n\n558\n00:27:20.530 --> 00:27:25.114\nAnd it knows that if the successor ever\nfails, it can just immediately swap\n\n559\n00:27:25.114 --> 00:27:28.407\nin the feasible successor and\nbe back up and running.\n\n560\n00:27:28.407 --> 00:27:32.580\nAnd then run its algorithm and do checks\njust in case there's something better.\n\n561\n00:27:32.580 --> 00:27:36.190\nSo it's able to recover Faster.\n\n562\n00:27:36.190 --> 00:27:36.991\nOSPF?\n\n563\n00:27:36.991 --> 00:27:40.340\nOSPF comes pretty close to\nconverging in under two seconds.\n\n564\n00:27:40.340 --> 00:27:41.380\nEIGRP?\n\n565\n00:27:41.380 --> 00:27:42.860\nIt's always under two seconds and,\nin fact,\n\n566\n00:27:42.860 --> 00:27:47.080\nit's usually under one second because it's\nalready got the backup route planned.\n\n567\n00:27:47.080 --> 00:27:48.408\nIt's stuck away in the background.\n\n568\n00:27:48.408 --> 00:27:50.392\nI haven't used any show commands.\n\n569\n00:27:50.392 --> 00:27:53.130\nLet me show you a couple of neat\ncommands we can do to see this.\n\n570\n00:27:53.130 --> 00:27:55.270\nActually, let me bring that\ninterface back on real quick.\n\n571\n00:27:57.510 --> 00:27:59.498\nThat way, I have my two routes again.\n\n572\n00:27:59.498 --> 00:28:04.150\nRight now, I'm gonna have one route\neverywhere, and now that'll fix that.\n\n573\n00:28:04.150 --> 00:28:05.590\nThat interface just came up.\n\n574\n00:28:05.590 --> 00:28:08.400\nI'm building some new adjacencies,\nand if I look at my routing table,\n\n575\n00:28:08.400 --> 00:28:10.870\nit's already flipped me\nback over to the Gigabit.\n\n576\n00:28:10.870 --> 00:28:13.950\nAnd that wasn't a feasible successor\nbecause a new route came up.\n\n577\n00:28:13.950 --> 00:28:16.010\nThat's how quick it made that decision.\n\n578\n00:28:16.010 --> 00:28:18.140\nThat's already been up for three\nseconds by the time I ran that command.\n\n579\n00:28:18.140 --> 00:28:19.310\nVery, very fast.\n\n580\n00:28:19.310 --> 00:28:22.020\nEIGRP is fast.\n\n581\n00:28:22.020 --> 00:28:25.360\nWith EIGRP,\nthere two main show commands to remember.\n\n582\n00:28:25.360 --> 00:28:27.400\nThe main one, I guess, the show ip route.\n\n583\n00:28:27.400 --> 00:28:31.110\nThat one I use all the time, so\nI'm not even counting that one.\n\n584\n00:28:31.110 --> 00:28:34.626\nshow ip eigrp neighbors.\n\n585\n00:28:34.626 --> 00:28:36.790\nUnder OSPF, there was no S.\n\n586\n00:28:36.790 --> 00:28:38.260\nUnder EIGRP, there is an S.\n\n587\n00:28:38.260 --> 00:28:39.083\nI don't know why.\n\n588\n00:28:39.083 --> 00:28:41.160\nI usually just type nei so\nI don't have to remember it.\n\n589\n00:28:41.160 --> 00:28:43.600\nBut just in case on the exam,\nit does have an S.\n\n590\n00:28:43.600 --> 00:28:45.070\nAnd here's how I can see\nwho I'm connected to.\n\n591\n00:28:46.130 --> 00:28:49.050\nSo I can see that I'm connected to these\ntwo routers, Router 4 and Router 5.\n\n592\n00:28:49.050 --> 00:28:52.430\nAnd the interface I'm connected on,\nhow long they've been up.\n\n593\n00:28:52.430 --> 00:28:53.100\nFour, right?\n\n594\n00:28:53.100 --> 00:28:54.690\nSo I can see these connections.\n\n595\n00:28:54.690 --> 00:28:58.420\nSo if you're not connecting with\na neighbor, show eigrp neighbor.\n\n596\n00:28:58.420 --> 00:28:59.750\nYou can see if they detect it.\n\n597\n00:28:59.750 --> 00:29:01.500\nIf they show up at all.\n\n598\n00:29:01.500 --> 00:29:07.710\nAnd then,\nyou can run show ip eigrp topology.\n\n599\n00:29:07.710 --> 00:29:11.100\nThis shows you the EIGRP database.\n\n600\n00:29:11.100 --> 00:29:13.460\nAll the routes that are being tracked.\n\n601\n00:29:13.460 --> 00:29:15.040\nAnd when you look in here,\n\n602\n00:29:15.040 --> 00:29:18.090\nwhat you're going to see is\na successor route, the winner.\n\n603\n00:29:18.090 --> 00:29:20.290\nThe winner is the person\nwith the lowest metric.\n\n604\n00:29:20.290 --> 00:29:22.212\nHere's that metric number.\n\n605\n00:29:22.212 --> 00:29:26.563\nAnd then you'll see that\nyou've got one successor, but\n\n606\n00:29:26.563 --> 00:29:29.720\nthen you've got these other routes.\n\n607\n00:29:29.720 --> 00:29:32.961\nAnd these are the feasible successors,\nthe backups.\n\n608\n00:29:32.961 --> 00:29:35.531\nWho is it that can step in and\nbecome a successor?\n\n609\n00:29:35.531 --> 00:29:37.619\nIt would be possible for\nthis one to become a successor.\n\n610\n00:29:38.730 --> 00:29:47.128\nSo in my case, I've got a successor\nwith a metric of 28672.\n\n611\n00:29:47.128 --> 00:29:49.451\nOr no, sorry, 28928.\n\n612\n00:29:49.451 --> 00:29:52.972\nAnd I've got a feasible\nsuccessor of 30720.\n\n613\n00:29:52.972 --> 00:29:54.980\n28928 is the lower number.\n\n614\n00:29:54.980 --> 00:29:55.779\nIt wins.\n\n615\n00:29:55.779 --> 00:29:57.490\n30720 is the higher number.\n\n616\n00:29:57.490 --> 00:29:58.500\nIt loses.\n\n617\n00:29:58.500 --> 00:30:01.760\nBut I keep track of it so I can bring it\nright into the routing table if necessary.\n\n618\n00:30:02.760 --> 00:30:05.050\nNow, there is another number here,\nthe second number.\n\n619\n00:30:05.050 --> 00:30:06.380\nWhat's that all about?\n\n620\n00:30:06.380 --> 00:30:09.750\nWell, they probably won't harp on\nit on the exam, but just in case,\n\n621\n00:30:09.750 --> 00:30:15.290\nwhat you've got are a advertised\ndistance and a feasible distance.\n\n622\n00:30:15.290 --> 00:30:16.275\nThis FD, feasible distance.\n\n623\n00:30:16.275 --> 00:30:18.860\nSee how it says FD is 28928?\n\n624\n00:30:18.860 --> 00:30:21.290\nAnd right here I've got 28928.\n\n625\n00:30:21.290 --> 00:30:24.170\nThe feasible distance is what\nit's actually gonna cost me,\n\n626\n00:30:24.170 --> 00:30:26.790\nthe metric it's gonna take for\nme to get to that destination.\n\n627\n00:30:28.310 --> 00:30:32.340\nThe advertised distance,\nthat's what my neighbor told me.\n\n628\n00:30:32.340 --> 00:30:34.797\nRemember, we see everything from\nthe neighbor's perspective.\n\n629\n00:30:34.797 --> 00:30:39.772\nAnd so my neighbor,\nin this case Router 4, told me that for\n\n630\n00:30:39.772 --> 00:30:46.854\nRouter 4 to get to 192.168.3.0,\nRouter 4 had a metric of 28672.\n\n631\n00:30:46.854 --> 00:30:52.791\nRouter 5 told me that\nhad a metric of 28160.\n\n632\n00:30:52.791 --> 00:30:57.210\nRouter 5's metric is better\nthan Router 4's, isn't it?\n\n633\n00:30:57.210 --> 00:31:02.510\n28160 is lower than 28672,\nbut Router 5 lost.\n\n634\n00:31:03.680 --> 00:31:05.160\nWhy did Router 5 lose?\n\n635\n00:31:05.160 --> 00:31:07.900\nIf it's got a better metric than Router 4,\nthen why did it lose?\n\n636\n00:31:07.900 --> 00:31:12.695\nBecause the advertised distance doesn't\ntake into account my connection to\n\n637\n00:31:12.695 --> 00:31:13.587\nthat router.\n\n638\n00:31:13.587 --> 00:31:16.474\nWhat's my connection to Router 4?\n\n639\n00:31:16.474 --> 00:31:18.690\nWhat's my connection to Router 5?\n\n640\n00:31:18.690 --> 00:31:21.610\nWell, my connection to\nRouter 4 is a gigabit.\n\n641\n00:31:21.610 --> 00:31:23.750\nSee, I'm on a Gigabit interface?\n\n642\n00:31:23.750 --> 00:31:26.285\nMy connection to Router 5 is FastEthernet.\n\n643\n00:31:26.285 --> 00:31:31.433\nConditions downstream might be better for\nRouter 5.\n\n644\n00:31:31.433 --> 00:31:33.766\nBut just for me to get to Router 5,\n\n645\n00:31:33.766 --> 00:31:37.391\nwhen I add in the cost of that\nlink from me to Router 5.\n\n646\n00:31:37.391 --> 00:31:40.457\nIt makes it worse than Router 4.\n\n647\n00:31:40.457 --> 00:31:43.681\nAnd so Router 4 ends up being better for\nthe whole path,\n\n648\n00:31:43.681 --> 00:31:46.130\nnot just what they're telling me.\n\n649\n00:31:46.130 --> 00:31:49.718\nSo the router has to keep track\nof an advertised distance and\n\n650\n00:31:49.718 --> 00:31:51.093\na feasible distance.\n\n651\n00:31:51.093 --> 00:31:55.865\nIt's not uncommon for a better advertised\ndistance to lose to another route because\n\n652\n00:31:55.865 --> 00:31:57.420\nof the feasible distance.\n\n653\n00:31:57.420 --> 00:31:59.384\nThe feasible distance is what matters.\n\n654\n00:31:59.384 --> 00:32:02.992\nSo if we were to look at\nthis on my topology chart,\n\n655\n00:32:02.992 --> 00:32:05.288\nI'm talking about Router 6.\n\n656\n00:32:05.288 --> 00:32:10.617\nCrossing over all the way over to get to\nrouter one to this network down here,\n\n657\n00:32:10.617 --> 00:32:11.830\nright?\n\n658\n00:32:11.830 --> 00:32:14.940\nAnd the advertised distance\nfrom router four is really\n\n659\n00:32:14.940 --> 00:32:20.490\nfrom router four across this gig link,\nacross this gig link, and down.\n\n660\n00:32:20.490 --> 00:32:24.520\nVersus router five where we've got a 100\nmeg link, and then a gig link and down,\n\n661\n00:32:24.520 --> 00:32:28.080\nright, which when you look at it that way\nrouter 5 should have a worse number but\n\n662\n00:32:28.080 --> 00:32:29.500\nfor some reason it's higher.\n\n663\n00:32:29.500 --> 00:32:34.440\nBut when router 6 takes into account these\nlinks, gig here, fast ethernet here,\n\n664\n00:32:34.440 --> 00:32:38.310\nthen it's going across the link and\nfinding out that across the top is better.\n\n665\n00:32:38.310 --> 00:32:41.650\nIt makes the right decision,\nwhich is exactly what we want.\n\n666\n00:32:41.650 --> 00:32:46.310\nIt's hard to reverse engineer these\nnumbers because delay is factored in also.\n\n667\n00:32:46.310 --> 00:32:47.970\nSo, router five had a better connection.\n\n668\n00:32:47.970 --> 00:32:50.220\nI might have some kind of excessive\ndelay on this gig link up here.\n\n669\n00:32:50.220 --> 00:32:53.590\nBut when we factor in the whole path,\neverything ends up better, right?\n\n670\n00:32:53.590 --> 00:32:55.400\nSo that's the way that\nit makes this decision,\n\n671\n00:32:55.400 --> 00:32:56.880\nis keeping track of all\nthat in the database.\n\n672\n00:32:58.260 --> 00:33:00.170\nOne last command I want to show you,\n\n673\n00:33:00.170 --> 00:33:03.180\nmost of the EIGRP configuration\nis really simple.\n\n674\n00:33:03.180 --> 00:33:06.960\nThis was not hard to get it up and\ngoing and its working just fine, right?\n\n675\n00:33:06.960 --> 00:33:11.600\nBut, if things aren't working you might\nneeded do a little debugging and so\n\n676\n00:33:11.600 --> 00:33:17.490\nyou can run debug ip eigrp, and\nyou run it just like that or you can\n\n677\n00:33:17.490 --> 00:33:21.490\nspecify a particular neighbor you want to\ntrouble shoot or an AS number or whatever.\n\n678\n00:33:21.490 --> 00:33:26.290\nBut if you just run that, you're gonna\nstart seeing the EIGRP events that happen\n\n679\n00:33:26.290 --> 00:33:29.710\nand this is nice because remember when I\nadvertised out that route from router one\n\n680\n00:33:29.710 --> 00:33:31.660\nand it took a long time\nto make it over here?\n\n681\n00:33:31.660 --> 00:33:32.940\nIt didn't take a long time did it?\n\n682\n00:33:32.940 --> 00:33:34.960\nI was just running a bad choke command.\n\n683\n00:33:34.960 --> 00:33:38.340\nHad it been debugging I would have\nseen it happen faster, right?\n\n684\n00:33:38.340 --> 00:33:40.630\nWatch what happens here.\n\n685\n00:33:40.630 --> 00:33:44.600\nI'm gonna jump over to router one and\nI'm gonna shut that interface down again.\n\n686\n00:33:44.600 --> 00:33:45.340\nOkay?\n\n687\n00:33:45.340 --> 00:33:48.190\nAll the way on router\nsix I see the messages.\n\n688\n00:33:48.190 --> 00:33:52.950\nI instantly got notified about\nthat route going down and\n\n689\n00:33:52.950 --> 00:33:56.270\nthen as you look at the data here\nyou see it's doing a table lookup.\n\n690\n00:33:56.270 --> 00:33:58.410\nThat's just saying hey,\nwho's the feasible successor?\n\n691\n00:33:58.410 --> 00:34:00.080\nAnd then it's grabbing\nthe feasible successor and\n\n692\n00:34:00.080 --> 00:34:03.460\nit's putting it into the routing table,\nand so here it's updating it and\n\n693\n00:34:03.460 --> 00:34:05.620\ngetting it moved over\nto the new destination.\n\n694\n00:34:05.620 --> 00:34:08.100\nAnd you'll see it's taking the other\none out of the routing table.\n\n695\n00:34:08.100 --> 00:34:12.160\nSo I can see that update happen and\nI know that I already got it.\n\n696\n00:34:12.160 --> 00:34:16.190\nSo now when I do a show IP route and\nI look up that 192.168.0.0 network,\n\n697\n00:34:16.190 --> 00:34:19.110\nit's come out of the routing table.\n\n698\n00:34:20.170 --> 00:34:22.700\nI don't have a route to get to it.\n\n699\n00:34:22.700 --> 00:34:27.020\nAnd if I jump back over here and\ndo a #no shutdown, now it's going to\n\n700\n00:34:27.020 --> 00:34:30.460\nput the route back in the routing table\nand router six is going to learn.\n\n701\n00:34:30.460 --> 00:34:31.680\nThere, it's getting learned and\n\n702\n00:34:31.680 --> 00:34:35.890\nit's reinserting into the routing table,\nand there it is back again.\n\n703\n00:34:35.890 --> 00:34:38.783\nAll right, so this is all happening,\nI can see it with the debug.\n\n704\n00:34:38.783 --> 00:34:40.334\nAnd so had I been debugging earlier,\n\n705\n00:34:40.334 --> 00:34:43.735\nI would have immediately known that all\nmy include command is wasn't working and\n\n706\n00:34:43.735 --> 00:34:46.753\nthat's why I wasn't getting up but\nyou can see in real time right here.\n\n707\n00:34:46.753 --> 00:34:53.533\nThere is another command,\nlet me just do a #no debug ip eigrp.\n\n708\n00:34:53.533 --> 00:34:57.386\nThere's another one that's kind of neat\nthat I probably should show in another\n\n709\n00:34:57.386 --> 00:35:00.730\nepisode which is debug IP route and,\nI thought it was debug IP route.\n\n710\n00:35:00.730 --> 00:35:06.180\nThat would be routing, there we go,\nwhich debugs the routing table.\n\n711\n00:35:06.180 --> 00:35:11.120\nNow any time the routing table changes,\nwhether it's EIGRP or OSPF or directly\n\n712\n00:35:11.120 --> 00:35:14.660\nconnected or whatever, any time the\nrouting table changes you'll see updates.\n\n713\n00:35:14.660 --> 00:35:18.450\nSo when a route comes out of the routing\ntable we can jump over here and\n\n714\n00:35:18.450 --> 00:35:21.250\nwe'll see there it goes,\ndeleting network route.\n\n715\n00:35:21.250 --> 00:35:24.030\nUpdating EIGRP to let it know that\nit's gone, that kind of stuff.\n\n716\n00:35:24.030 --> 00:35:26.250\nIt's taking care of it and\nI see it right there.\n\n717\n00:35:26.250 --> 00:35:33.040\nAnd if I do a no shutdown and I jump\nback over, I'll see it come back in and\n\n718\n00:35:33.040 --> 00:35:36.280\nit's gonna add it into the routing table\nand get it put back in place, all right?\n\n719\n00:35:36.280 --> 00:35:41.330\nSo all that's happening right there and\ngetting it locked in.\n\n720\n00:35:41.330 --> 00:35:44.630\nSo that's basically\nthe way EIGRP works and\n\n721\n00:35:44.630 --> 00:35:47.340\nwhat we've seen here is\ngetting it working for IPv4.\n\n722\n00:35:47.340 --> 00:35:49.930\nIPv6 is almost identical but\nwe'll do a second episode and\n\n723\n00:35:49.930 --> 00:35:53.180\nkinda tackle that one so we can see it\nusing the different addressing scheme but\n\n724\n00:35:53.180 --> 00:35:55.960\nthat right there is EIGRP for IPv4.\n\n725\n00:35:55.960 --> 00:35:58.452\n&gt;&gt; Well IPv6 ought to be\nvery very exciting as well.\n\n726\n00:35:58.452 --> 00:36:04.600\nDon, you did a great job in demonstrating\nIPv4 for us, it does seem like EIGRP\n\n727\n00:36:04.600 --> 00:36:08.775\nreally is like that kid in school that\nwas really smart but socially awkward.\n\n728\n00:36:08.775 --> 00:36:09.400\n&gt;&gt; [LAUGH]\n&gt;&gt; Right?\n\n729\n00:36:09.400 --> 00:36:11.984\nI hope that joke didn't hit\ntoo close to home for you.\n\n730\n00:36:11.984 --> 00:36:12.828\n&gt;&gt; Yeah.\n\n731\n00:36:12.828 --> 00:36:14.190\n&gt;&gt; That being said, [LAUGH]\n&gt;&gt; [LAUGH]\n\n732\n00:36:14.190 --> 00:36:15.064\n&gt;&gt; And it's so\n\n733\n00:36:15.064 --> 00:36:18.842\neasy even Don can do it\nwhile binge drinking Canar.\n\n734\n00:36:18.842 --> 00:36:20.550\n[LAUGH]\n&gt;&gt; [LAUGH]\n\n735\n00:36:20.550 --> 00:36:21.680\n&gt;&gt; And we're having fun now.\n\n736\n00:36:21.680 --> 00:36:25.170\nObviously very simple protocol,\nvery easy to implement, but\n\n737\n00:36:25.170 --> 00:36:28.080\nit's interior,\nyou gotta have Cisco proprietary.\n\n738\n00:36:28.080 --> 00:36:30.360\nBut, man does it work like a charm.\n\n739\n00:36:30.360 --> 00:36:31.040\nAwesome stuff, Don.\n\n740\n00:36:31.040 --> 00:36:34.220\nWe thank you for showing us how to work\nwith that cuz IPv4's probably gonna\n\n741\n00:36:34.220 --> 00:36:37.210\nbe our bread and butter for\nquite a few years to come.\n\n742\n00:36:37.210 --> 00:36:39.190\nThat being said, I'm looking at our clock.\n\n743\n00:36:39.190 --> 00:36:41.210\nWell out of time for this episode.\n\n744\n00:36:41.210 --> 00:36:43.570\nWe totally blew the clock\nout of the water.\n\n745\n00:36:43.570 --> 00:36:45.590\nSo we're going to go ahead and\nclose down the show.\n\n746\n00:36:45.590 --> 00:36:46.580\nWe thank you for watching.\n\n747\n00:36:46.580 --> 00:36:47.280\nThanks for joining us.\n\n748\n00:36:47.280 --> 00:36:49.640\nHopefully we'll see you\nin IPv6 episode as well.\n\n749\n00:36:49.640 --> 00:36:52.620\nBut signing off for ITProTV,\nI've been your host Daniel Lowrie.\n\n750\n00:36:52.620 --> 00:36:53.320\n&gt;&gt; And I'm Don Pezet.\n\n751\n00:36:53.320 --> 00:36:54.581\n&gt;&gt; We'll see you next time.\n\n752\n00:36:54.581 --> 00:37:03.890\n[MUSIC]\n\n",
          "vimeoId": "181120720"
        },
        {
          "description": "In this episode, Daniel and Don demonstrate how you implement the the Enhanced Interior Gateway Routing Protocol(EIGRP) in an IPv6 environment. They show you all the necessary commands, step-by-step, to get EIGRP enabled when using IPv6. They also show you how to verify that EIGRP is working properly.",
          "length": "1442",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/cisco-ccna200105/cisco-ccna200105-2-8-implementing_eigrp_ipv6-082516-1.jpg",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/cisco-ccna200105/cisco-ccna200105-2-8-implementing_eigrp_ipv6-082516-1-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/cisco-ccna200105/cisco-ccna200105-2-8-implementing_eigrp_ipv6-082516-1-sm.jpg",
          "title": "Implementing EIGRP for IPv6",
          "transcript": "WEBVTT\n\n1\n00:00:00.000 --> 00:00:10.000\n[MUSIC]\n\n2\n00:00:12.372 --> 00:00:15.861\nGreetings, everyone, and welcome to\nanother great episode of ITProTV.\n\n3\n00:00:15.861 --> 00:00:20.084\nI'm your host Daniel Lowrie, and today's\nepisode, it's more on our CC&amp;A routing and\n\n4\n00:00:20.084 --> 00:00:21.055\nswitching series.\n\n5\n00:00:21.055 --> 00:00:24.348\nJoining us back in the studio,\nagain, for more on EIGRP,\n\n6\n00:00:24.348 --> 00:00:26.311\nour good friend Mister Don Pezet.\n\n7\n00:00:26.311 --> 00:00:27.051\nDon, welcome back.\n\n8\n00:00:27.051 --> 00:00:27.700\nHow's it going?\n\n9\n00:00:27.700 --> 00:00:30.450\n&gt;&gt; It is going swell, Daniel,\nready to wrap up EIGRP.\n\n10\n00:00:30.450 --> 00:00:33.063\nWe spent a couple of episodes,\nnow, talking how it works and\n\n11\n00:00:33.063 --> 00:00:33.635\nwe saw-\n&gt;&gt; No.\n\n12\n00:00:33.635 --> 00:00:34.620\n&gt;&gt; [LAUGH] It's been fun.\n\n13\n00:00:34.620 --> 00:00:38.665\nWe started implementing with IPV4, which\nis what you'll see most of on the exam.\n\n14\n00:00:38.665 --> 00:00:42.273\nBut we do need to understand\nhow to implement it for IPv6.\n\n15\n00:00:42.273 --> 00:00:46.769\nNow, it's gonna be a little bit different\nthan OSPF because really, fundamentally,\n\n16\n00:00:46.769 --> 00:00:49.030\nEIGRP is the same engine\nbehind the scenes.\n\n17\n00:00:49.030 --> 00:00:51.570\nThey just wrote a different module\nto handle the different addresses.\n\n18\n00:00:51.570 --> 00:00:53.165\nIt's really identical.\n\n19\n00:00:53.165 --> 00:00:54.500\nFunctionality-wise it's identical.\n\n20\n00:00:54.500 --> 00:00:56.350\nThe only thing that\nchanges are the commands.\n\n21\n00:00:56.350 --> 00:00:59.531\nAnd the commands are a little\nbit different under IPv6,\n\n22\n00:00:59.531 --> 00:01:00.863\nas they were with OSPF.\n\n23\n00:01:00.863 --> 00:01:02.600\nSo not much of a difference there.\n\n24\n00:01:02.600 --> 00:01:04.610\nKey thing to remember for the exam,\nthough, is that with OSPF,\n\n25\n00:01:04.610 --> 00:01:06.420\nyou have version 2 and version 3.\n\n26\n00:01:06.420 --> 00:01:07.730\nThey had to rewrite it for IPv6.\n\n27\n00:01:07.730 --> 00:01:10.590\nIn EIGRP, they didn't have to rewrite it.\n\n28\n00:01:10.590 --> 00:01:12.719\nIt's the same, old EIGRP you're used to.\n\n29\n00:01:12.719 --> 00:01:17.021\nThey just had to stick a module onto it\nto handle the longer 128-bit addresses.\n\n30\n00:01:17.021 --> 00:01:20.735\nOnce that was done,\neverything else functions the same.\n\n31\n00:01:20.735 --> 00:01:27.010\nBandwidth, all of our metrics that we use,\nbandwidth, delay, reliability, load, MTU.\n\n32\n00:01:27.010 --> 00:01:28.625\nThey're all handled the same way.\n\n33\n00:01:28.625 --> 00:01:29.906\nMTU was ignored before.\n\n34\n00:01:29.906 --> 00:01:30.902\nIt's still ignored now.\n\n35\n00:01:30.902 --> 00:01:34.030\nIt's the same engine,\nsame formula, same everything.\n\n36\n00:01:34.030 --> 00:01:36.390\nThe only thing that's\ndifferent are the addresses.\n\n37\n00:01:36.390 --> 00:01:40.025\nLet's run through an example of how we\nwould get this configured under IPv6 and\n\n38\n00:01:40.025 --> 00:01:40.846\nsee how it works.\n\n39\n00:01:40.846 --> 00:01:43.090\nI'm gonna bring up my topology here.\n\n40\n00:01:43.090 --> 00:01:46.530\nMy topology is primarily an IPv4 topology.\n\n41\n00:01:46.530 --> 00:01:49.370\nBut back in the OSPF episodes,\nwhat we did is we went ahead and\n\n42\n00:01:49.370 --> 00:01:51.388\nwe converted some of these links to IPv6.\n\n43\n00:01:51.388 --> 00:01:53.770\nI used a technique that I like.\n\n44\n00:01:53.770 --> 00:01:57.290\nWhich is when you have a IPv4 network,\n\n45\n00:01:57.290 --> 00:02:01.940\nyou can convert it over to IPv6 and still\nmaintain the same type of addressing.\n\n46\n00:02:01.940 --> 00:02:04.440\nSo for example, here on Router 2,\nwe got 192.168.2.0,\n\n47\n00:02:04.440 --> 00:02:09.280\nwe can make that FD00:192:168:2::, so\n\n48\n00:02:09.280 --> 00:02:13.780\nit's all 0s for the rest, /64.\n\n49\n00:02:13.780 --> 00:02:18.983\nThat way we maintain our same address\nhierarchy, even though we're in IPv6.\n\n50\n00:02:18.983 --> 00:02:21.844\nI've still got that set up\nfrom the OSPF episode, so\n\n51\n00:02:21.844 --> 00:02:26.100\nwe're just gonna stack EIGRP on top of it,\nand get it up and running.\n\n52\n00:02:26.100 --> 00:02:28.320\nLet's take a look at Router 2's config,\nreal quick.\n\n53\n00:02:28.320 --> 00:02:31.650\nAnd we'll kind of pick up there,\nand that would be Router 1.\n\n54\n00:02:31.650 --> 00:02:34.124\nLet's try the router that I actually want,\nRouter 2.\n\n55\n00:02:34.124 --> 00:02:36.904\nOn Router 2, I'm just gonna take\na look at my interfaces and\n\n56\n00:02:36.904 --> 00:02:38.430\nsee what addresses I've got.\n\n57\n00:02:38.430 --> 00:02:45.060\nSo I'll do a show ipv6 interface brief.\n\n58\n00:02:45.060 --> 00:02:46.868\nI can see we're on Gi 1/0.\n\n59\n00:02:46.868 --> 00:02:54.479\nI've got FD00:192:168:1::2.\n\n60\n00:02:54.479 --> 00:03:00.068\nAnd Gi 2/0, I've got FD00:192:168:2::2.\n\n61\n00:03:00.068 --> 00:03:06.018\nSo these are corresponding with the old\n192.168.1 and 192.162.2 networks.\n\n62\n00:03:06.018 --> 00:03:07.960\nI've just converted them\nover to IPv6 addresses.\n\n63\n00:03:09.160 --> 00:03:12.970\nI've got the same thing on Router 4,\nand the same thing on Router 6.\n\n64\n00:03:12.970 --> 00:03:17.242\nSo as we go across the top, here,\nRouter 2, to Router 4, to Router 6.\n\n65\n00:03:17.242 --> 00:03:19.020\nSame basic configuration.\n\n66\n00:03:19.020 --> 00:03:22.682\nLet's just look at each one of those to\nmake sure that we're starting on common\n\n67\n00:03:22.682 --> 00:03:25.028\nground and\nthat everybody is basically the same.\n\n68\n00:03:25.028 --> 00:03:32.860\nHere on Router, I'll do a show ipv6\nint bri, and I can see the same thing.\n\n69\n00:03:32.860 --> 00:03:34.494\nI've got those networks configured.\n\n70\n00:03:34.494 --> 00:03:39.026\nAnd over on Router 6,\nwe'll do the same right here.\n\n71\n00:03:41.804 --> 00:03:44.610\nThe next thing I wanna check is\nwhether I'm running an IPv6 routing\n\n72\n00:03:44.610 --> 00:03:45.740\nprotocol at all.\n\n73\n00:03:45.740 --> 00:03:48.790\nMaybe I left OSPF in place, so I wanna\nmake sure I don't compete with that.\n\n74\n00:03:48.790 --> 00:03:50.030\nNow I don't have to\nworry about a too much,\n\n75\n00:03:50.030 --> 00:03:53.860\nthough, because let's say that I forgot,\nand I left OSPF running.\n\n76\n00:03:53.860 --> 00:03:58.320\nWell, OSPF has an administrative\ndistance of a 110.\n\n77\n00:03:58.320 --> 00:04:01.065\nEIGRP has administrative distance of 90.\n\n78\n00:04:01.065 --> 00:04:05.230\nThat's tied to the protocol,\nnot the layer 3 protocol.\n\n79\n00:04:05.230 --> 00:04:09.460\nSo if I'm running OSPF version 2,\nit's got an admin distance of 110.\n\n80\n00:04:09.460 --> 00:04:12.744\nIf I'm running OSPF version 3,\nit's got an admin distance of 110.\n\n81\n00:04:12.744 --> 00:04:15.490\nIt's always 110,\nregardless of which protocol.\n\n82\n00:04:15.490 --> 00:04:16.870\nEIGRP, same way.\n\n83\n00:04:16.870 --> 00:04:21.050\nEIGRP is at an admin distance of 90,\nregardless of whether I'm doing IPv6,\n\n84\n00:04:21.050 --> 00:04:23.190\nIPv4, IPX/SPX, whatever, Apple Talk.\n\n85\n00:04:23.190 --> 00:04:25.809\nIt doesn't care.\n\n86\n00:04:25.809 --> 00:04:28.450\nIt's always an admin distance\nof 90 unless I overwrite it.\n\n87\n00:04:28.450 --> 00:04:32.305\nSo even if I forgot a protocol,\nEIGRP is gonna beat it.\n\n88\n00:04:32.305 --> 00:04:34.690\nSo it'll take over anyway.\n\n89\n00:04:34.690 --> 00:04:37.690\nBut just to be sure,\nI'm gonna do a show IP protocols.\n\n90\n00:04:37.690 --> 00:04:40.440\nActually, I'm not gonna do a show\nIP protocol cuz that would be IPv4.\n\n91\n00:04:40.440 --> 00:04:44.189\nI'm gonna do a show ipv6 protocols.\n\n92\n00:04:44.189 --> 00:04:47.984\nBecause I need to see the dynamic\nrouting protocols for IPv6, and\n\n93\n00:04:47.984 --> 00:04:49.621\nright now I don't have any.\n\n94\n00:04:49.621 --> 00:04:51.650\nWell, technically, I have two, right?\n\n95\n00:04:51.650 --> 00:04:53.070\nOne is connected.\n\n96\n00:04:53.070 --> 00:04:54.500\nIt's not really a dynamic\nrouting protocol.\n\n97\n00:04:54.500 --> 00:04:56.458\nIf I'm directly connected to a network,\nI'm gonna see it.\n\n98\n00:04:56.458 --> 00:04:58.824\nAnd then ND is the neighbor discovery.\n\n99\n00:04:58.824 --> 00:05:02.691\nSo if I discover a neighbor,\nI'll discover their link local address so\n\n100\n00:05:02.691 --> 00:05:04.080\nI can talk to them.\n\n101\n00:05:04.080 --> 00:05:05.180\nThose are always there.\n\n102\n00:05:05.180 --> 00:05:09.810\nThey're not really true routing protocols\ncuz I can't get beyond the next hop.\n\n103\n00:05:09.810 --> 00:05:13.226\nBut I can get to them and\nmaybe they can send me somewhere else.\n\n104\n00:05:13.226 --> 00:05:15.370\nI don't know, but those are always there.\n\n105\n00:05:15.370 --> 00:05:17.850\nSo I'm not running OSPF for EIGRP, though.\n\n106\n00:05:17.850 --> 00:05:19.249\nThat's what I wanna fix.\n\n107\n00:05:19.249 --> 00:05:20.943\nWe'll start here in Router 6.\n\n108\n00:05:20.943 --> 00:05:24.540\nI'm gonna get into my configuration,\nand I'm gonna say.\n\n109\n00:05:24.540 --> 00:05:30.420\nWell, what we use to say is we used to say\nrouter eigrp, followed by an AS number.\n\n110\n00:05:30.420 --> 00:05:33.510\nThat was how we enabled\nEIGRP under the IPv4.\n\n111\n00:05:33.510 --> 00:05:36.770\nUnder IPv6,\nit's just a little bit different.\n\n112\n00:05:36.770 --> 00:05:41.047\nFirst off, I need to make sure\nthat I add IPv6 to the command.\n\n113\n00:05:41.047 --> 00:05:47.795\nSo we're gonna say, ipv6 router eigrp 1.\n\n114\n00:05:47.795 --> 00:05:51.165\nNow when I run this, I may get an error.\n\n115\n00:05:51.165 --> 00:05:53.255\nThere's two things that\ncan cause that error.\n\n116\n00:05:53.255 --> 00:05:55.585\nOne, I might be running a really old iOS.\n\n117\n00:05:55.585 --> 00:05:57.915\nOne that doesn't have IPv6 support,\nor even a newer iOS,\n\n118\n00:05:57.915 --> 00:05:59.300\nwhich just doesn't have it.\n\n119\n00:05:59.300 --> 00:06:00.122\nUncommon, but possible.\n\n120\n00:06:00.122 --> 00:06:01.750\nSo that's one reason.\n\n121\n00:06:01.750 --> 00:06:05.070\nThe other reason is I might\nnot have enabled IPv6 routing.\n\n122\n00:06:05.070 --> 00:06:07.750\nA lot of Cisco routers have IPv6 support,\nbut\n\n123\n00:06:07.750 --> 00:06:09.870\nthey don't have IPv6 routing turned on.\n\n124\n00:06:09.870 --> 00:06:11.197\nLet me show you what that looks like.\n\n125\n00:06:11.197 --> 00:06:14.870\nI'm gonna get out of this, and\nlet me just undo that command.\n\n126\n00:06:14.870 --> 00:06:17.040\nSo I'm gonna do a no to turn that off.\n\n127\n00:06:17.040 --> 00:06:23.283\nAnd the command to turn on IPv6\nrouting is ipv6 unicast-routing.\n\n128\n00:06:23.283 --> 00:06:28.350\nThat's what enables IPv6 routing,\nand it was on, on mine, already.\n\n129\n00:06:28.350 --> 00:06:29.900\nBut let's say it was off.\n\n130\n00:06:29.900 --> 00:06:31.240\nIf I turn that off.\n\n131\n00:06:31.240 --> 00:06:34.012\nWhen I go to turn on that\nrouting protocol, whoops.\n\n132\n00:06:34.012 --> 00:06:35.910\n[LAUGH] Now I'm turning it off, there.\n\n133\n00:06:35.910 --> 00:06:40.010\nIf I go to turn it on, see how I get\nthat message, IPv6 routing not enabled?\n\n134\n00:06:40.010 --> 00:06:41.930\nSo remember on the exam,\nand remember in real life,\n\n135\n00:06:41.930 --> 00:06:46.460\nthat you might need to issue\nthe ipv6 unicast-routing command.\n\n136\n00:06:46.460 --> 00:06:49.898\nAnd when you issue that command,\nthat's gonna turn on routing.\n\n137\n00:06:49.898 --> 00:06:53.180\nAnd then you'll be able to start that\nrouting process and get enabled.\n\n138\n00:06:54.430 --> 00:06:56.550\nSo now I'm running EIGRP.\n\n139\n00:06:57.580 --> 00:06:59.200\nWell, not quite.\n\n140\n00:06:59.200 --> 00:07:03.510\nEIGRP for IPv6 is actually a little\nbit different in its configuration.\n\n141\n00:07:03.510 --> 00:07:04.690\nIt's got some requirements.\n\n142\n00:07:04.690 --> 00:07:07.870\nSome things that I need to do\nto get stuff to work right.\n\n143\n00:07:07.870 --> 00:07:14.110\nIf I were to just stop now,\nand do a show ipv6 protocols.\n\n144\n00:07:14.110 --> 00:07:19.020\nI am running EIGRP, but\nit's not quite working right.\n\n145\n00:07:19.020 --> 00:07:21.253\nBasically, because I don't have on for\nany interfaces.\n\n146\n00:07:21.253 --> 00:07:24.920\nNotice how it says Interfaces\ninstead of networks.\n\n147\n00:07:24.920 --> 00:07:28.557\nUnder IPv4, my next step was to use\nnetwork commands to add the various\n\n148\n00:07:28.557 --> 00:07:30.387\nnetworks where I wanna advertise.\n\n149\n00:07:30.387 --> 00:07:33.400\nIn IPv6,\nwe don't use the network command anymore.\n\n150\n00:07:33.400 --> 00:07:36.120\nWe do it on the interfaces,\njust like OSPF.\n\n151\n00:07:36.120 --> 00:07:38.625\n&gt;&gt; Is that because,\ntechnically, with IRR or\n\n152\n00:07:38.625 --> 00:07:41.817\nIPv6 you don't need to have\nlike subnets and all that?\n\n153\n00:07:41.817 --> 00:07:45.050\n&gt;&gt; Yeah, so much of the networks you're\ngonna have are just gonna be slash 64s.\n\n154\n00:07:45.050 --> 00:07:47.420\nI mean, you might make them smaller,\nor make them bigger, or whatever,\n\n155\n00:07:47.420 --> 00:07:49.720\nbut they're usually /64s.\n\n156\n00:07:49.720 --> 00:07:52.593\nRegardless of what the network is,\nif I was go into a network statement,\n\n157\n00:07:52.593 --> 00:07:54.019\nthat's gonna be a long statement.\n\n158\n00:07:54.019 --> 00:07:57.860\nCuz I put in the first chunk,\nthe first half of that 128-bit address\n\n159\n00:07:57.860 --> 00:08:00.558\nthat identifies my network ID and\nall this stuff.\n\n160\n00:08:00.558 --> 00:08:01.720\nIt's the hassle.\n\n161\n00:08:01.720 --> 00:08:04.506\nIt's easier to do on the interface and\nso that's the way they went.\n\n162\n00:08:04.506 --> 00:08:09.126\nOSPF and EIGRP both, under IVP6\nyou turn them on on the interface.\n\n163\n00:08:09.126 --> 00:08:12.619\nSo I need to go to at least one interface\nsomewhere and turn on EIGRP and\n\n164\n00:08:12.619 --> 00:08:14.090\nget it up and going, right?\n\n165\n00:08:14.090 --> 00:08:18.600\nThe other thing that I might need to\nconfigure is going to be the router ID.\n\n166\n00:08:18.600 --> 00:08:23.050\nI don't necessarily have to do it, but\nremember in OSPF we had router IDs?\n\n167\n00:08:23.050 --> 00:08:24.880\nIn EIGRP, we really didn't under IPv4.\n\n168\n00:08:24.880 --> 00:08:28.060\nBut under IPv6 you do, and\nyou'll notice I've already got one.\n\n169\n00:08:28.060 --> 00:08:32.673\nWhen I ran that show IPv6 protocols,\nright here I've got a router ID.\n\n170\n00:08:32.673 --> 00:08:34.577\n192.168.5.6.\n\n171\n00:08:34.577 --> 00:08:37.370\nI might be happy with that, but\nI could also override that.\n\n172\n00:08:37.370 --> 00:08:40.150\nThat would be another configuration\noption that we didn't have under\n\n173\n00:08:40.150 --> 00:08:42.420\nIPv4 that we can do here under IPv6.\n\n174\n00:08:42.420 --> 00:08:45.880\nSo if I wanna get this configured and\nup and going, I'm gonna need to go and\n\n175\n00:08:45.880 --> 00:08:49.060\nturn the routing protocol on,\non some of my interfaces.\n\n176\n00:08:49.060 --> 00:08:52.292\nAnd if I do that show IPv6\ninterface brief again.\n\n177\n00:08:52.292 --> 00:08:55.650\nAll right, so the interfaces that I\nwanna work with are GigabitEthernet1/0,\n\n178\n00:08:55.650 --> 00:08:58.940\nthis guy right here, and\nFastEthernet2/0, those two.\n\n179\n00:08:58.940 --> 00:09:03.618\nSo I'm gonna jump right\ninto interface gi1/0,\n\n180\n00:09:03.618 --> 00:09:07.220\nand then I'm gonna say ipv6 eigrp 1.\n\n181\n00:09:09.120 --> 00:09:10.115\nIPv6, right?\nSo I'm telling\n\n182\n00:09:10.115 --> 00:09:11.710\nit the protocol that I'm using.\n\n183\n00:09:11.710 --> 00:09:13.492\nEIGRP is the routing process.\n\n184\n00:09:13.492 --> 00:09:17.010\nAnd then,1 is the autonomous\nsystem number.\n\n185\n00:09:17.010 --> 00:09:22.250\nNow, if I had an issue with the IPv6\nrouter EIGRP 1 command a moment ago,\n\n186\n00:09:22.250 --> 00:09:25.055\nwhen I issued this, it would have\nthe effective issue in the other commands.\n\n187\n00:09:25.055 --> 00:09:26.640\nSo, I could have shortcutted\nthis a little bit.\n\n188\n00:09:26.640 --> 00:09:29.520\n&gt;&gt; That's good exam stuff because you\nneed all the time you can get when it\n\n189\n00:09:29.520 --> 00:09:30.160\ncomes to the exam, right?\n\n190\n00:09:30.160 --> 00:09:30.713\n&gt;&gt; That's true, yeah.\n\n191\n00:09:30.713 --> 00:09:32.100\nYou can shave a little bit off there.\n\n192\n00:09:32.100 --> 00:09:33.360\nSo, I'm gonna issue that command.\n\n193\n00:09:33.360 --> 00:09:35.200\nSo, that's now turned on for\nthis interface.\n\n194\n00:09:35.200 --> 00:09:37.590\nAnd then I'm gonna jump over to fa2/0,\nand, you know,\n\n195\n00:09:37.590 --> 00:09:40.988\nlet me teach you guys\nanother little thing here.\n\n196\n00:09:40.988 --> 00:09:42.970\nWhen you run an interface\ncommand like this and\n\n197\n00:09:42.970 --> 00:09:46.490\nyou switch interfaces,\nsee how the prompt doesn't change?\n\n198\n00:09:46.490 --> 00:09:49.910\nSometimes you can make a mistake and think\nthat you're about to change to another\n\n199\n00:09:49.910 --> 00:09:52.570\ninterface and\nyou get an error like that, right?\n\n200\n00:09:52.570 --> 00:09:55.290\nAnd see how it dropped me to a prompt?\n\n201\n00:09:55.290 --> 00:09:58.590\nBecause, I put in an interface\nthat didn't exist.\n\n202\n00:09:58.590 --> 00:10:00.800\nSo I know that it kicked\nme out of that prompt.\n\n203\n00:10:00.800 --> 00:10:04.170\nBut if you put in the wrong\ninterface number by accident, and\n\n204\n00:10:04.170 --> 00:10:07.560\nyou switch, sometimes you may\nnot realize what happened and\n\n205\n00:10:07.560 --> 00:10:09.750\nit leaves you in the same prompt.\n\n206\n00:10:09.750 --> 00:10:11.540\nAnd you start issuing commands\nagainst the wrong interface.\n\n207\n00:10:11.540 --> 00:10:15.720\nSo I usually like to do an exit command\nwhenever I move from interface to\n\n208\n00:10:15.720 --> 00:10:20.190\ninterface, just to get back out, and then\nmove into the right interface like that.\n\n209\n00:10:20.190 --> 00:10:23.310\nSo that's another one that can kind\nof help you on the exam sometimes.\n\n210\n00:10:23.310 --> 00:10:27.540\nBut on this one,\nI'm just gonna do ipv6 eigrp 1, and so\n\n211\n00:10:27.540 --> 00:10:32.022\nthat interface is now part of\nthe EIGRP autonomous system 1.\n\n212\n00:10:32.022 --> 00:10:33.762\nI didn't have to put in\nwhat the network was.\n\n213\n00:10:33.762 --> 00:10:36.990\nI didn't have to put in a subnet mask,\nor anything like that.\n\n214\n00:10:36.990 --> 00:10:38.140\nNo network commands.\n\n215\n00:10:38.140 --> 00:10:40.090\nI just stick this on the interface and\nthat's it.\n\n216\n00:10:40.090 --> 00:10:43.050\nSo that makes it much simpler than\nhaving to write these long addresses.\n\n217\n00:10:44.090 --> 00:10:48.126\nAll right, now I could stop here,\nbut I am gonna do one more thing,\n\n218\n00:10:48.126 --> 00:10:54.120\nwhich is to get into IPv6 router EIGRP 1,\nand take a look at that router ID command.\n\n219\n00:10:54.120 --> 00:10:58.540\nAll right, now the router ID,\nwhich is apparently not in here.\n\n220\n00:10:58.540 --> 00:11:01.090\nShoot, I'm forgetting.\n\n221\n00:11:02.320 --> 00:11:03.710\nIt's a weird command.\n\n222\n00:11:03.710 --> 00:11:07.070\nI'm already in the EIGRP routing process.\n\n223\n00:11:07.070 --> 00:11:09.651\nSo you'd think you wouldn't have to do it.\n\n224\n00:11:09.651 --> 00:11:14.320\nBut I actually do have to say eigrp\nrouter-id, and then provide the ID on it.\n\n225\n00:11:14.320 --> 00:11:18.422\nSo kind of annoying there, but that's why\nthat router ID command wasn't showing up,\n\n226\n00:11:18.422 --> 00:11:20.459\nbecause I forgot to stick EIGRP before it.\n\n227\n00:11:20.459 --> 00:11:24.079\nYou'd think you it would know that,\nbecause I am in the EIGRP process, but\n\n228\n00:11:24.079 --> 00:11:25.100\neither way.\n\n229\n00:11:25.100 --> 00:11:29.019\nSo what I issued was ipv6 router eigrp 1,\nand\n\n230\n00:11:29.019 --> 00:11:34.680\nthen I'm following that up with\neigrp router-id followed by the id.\n\n231\n00:11:34.680 --> 00:11:40.900\nAnd just like OSPF,\nit is a id number in IP address format,\n\n232\n00:11:40.900 --> 00:11:43.840\nbut not an actual IP address.\n\n233\n00:11:43.840 --> 00:11:46.600\nSo if this is router 6,\nI can come in and say 0.0.0.6 like that,\n\n234\n00:11:46.600 --> 00:11:51.230\nso I can remember that this is router 6,\nall right?\n\n235\n00:11:51.230 --> 00:11:56.488\nThese router IDs are kind of important if\nI have two liinks between two routers,\n\n236\n00:11:56.488 --> 00:11:59.210\nbecause it can know that it's seeing\nitself on the two links, right?\n\n237\n00:11:59.210 --> 00:12:00.520\nSo it can spot that.\n\n238\n00:12:00.520 --> 00:12:02.910\nWhen you have more that two routers in\nthe mix, it doesn't help all that much and\n\n239\n00:12:02.910 --> 00:12:04.590\nit's just to help us for tracking.\n\n240\n00:12:04.590 --> 00:12:09.560\nBecause, when you do a show ipv6,\neigrp neighbors,\n\n241\n00:12:09.560 --> 00:12:14.780\nyou're gonna see the neighbors\nlisted based on their router ID.\n\n242\n00:12:14.780 --> 00:12:18.470\nAnd so having a router ID you recognize\nwill help you to identify those routers.\n\n243\n00:12:18.470 --> 00:12:20.630\nOtherwise it's going to be\nwhatever the interface is, and\n\n244\n00:12:20.630 --> 00:12:23.680\nif a router has five interfaces it\ncould show up with five different\n\n245\n00:12:23.680 --> 00:12:26.490\nrouter IDs depending on what part\nof the network you're looking at.\n\n246\n00:12:26.490 --> 00:12:29.820\nBy hard setting the router ID,\nwe'll always see the same number.\n\n247\n00:12:31.100 --> 00:12:32.682\nAll right, so, that's router six.\n\n248\n00:12:32.682 --> 00:12:36.420\nI'm gonna repeat the process on router\nfour and router two, although I'll try and\n\n249\n00:12:36.420 --> 00:12:37.410\nnot screw them up this time.\n\n250\n00:12:37.410 --> 00:12:39.324\nSo, I'm gonna knock this other two out,\nand\n\n251\n00:12:39.324 --> 00:12:44.270\nthen we'll have IPv6 with EIGRP routing\nin between these three routers, and\n\n252\n00:12:44.270 --> 00:12:46.600\nwe can verify that's all\nfunctioning properly.\n\n253\n00:12:46.600 --> 00:12:47.660\nSo, let me just jump back here.\n\n254\n00:12:47.660 --> 00:12:49.680\nI'll jump over to router four.\n\n255\n00:12:49.680 --> 00:12:54.320\nRouter four, I've got GI1/0 and\nGI2/0 that I need to deal with.\n\n256\n00:12:54.320 --> 00:12:56.500\nSo I'll get into those interfaces.\n\n257\n00:12:56.500 --> 00:12:59.290\nAnd I'm gonna try and issue as few\ncommands as possible on this one, right?\n\n258\n00:12:59.290 --> 00:13:03.907\nSo I'm gonna get right into\nthe interface and do ipv6 eigrp 1.\n\n259\n00:13:06.650 --> 00:13:11.060\nAnd do the same thing here\non the other interface.\n\n260\n00:13:11.060 --> 00:13:18.261\nAnd then, I'll do ipv6 router eigrp 1,\nrouter-id 0.0.0.4.\n\n261\n00:13:19.630 --> 00:13:20.680\nAnd get that set.\n\n262\n00:13:20.680 --> 00:13:24.480\nYou may wanna set the router ID first,\nand that way you advertise yourself out\n\n263\n00:13:24.480 --> 00:13:28.343\nwith a consistent name from the very\nbeginning versus here where it's gonna,\n\n264\n00:13:28.343 --> 00:13:29.706\nit switches immediately.\n\n265\n00:13:29.706 --> 00:13:33.104\nBut now that the other routers have\na record of the old ID and the new ID,\n\n266\n00:13:33.104 --> 00:13:35.822\nthey view it as two routers,\nso it can cause confusion.\n\n267\n00:13:35.822 --> 00:13:40.320\nSo if we wanna do it that way, on router\ntwo, I'll set the router ID first.\n\n268\n00:13:40.320 --> 00:13:47.580\nSo over on router two,\nI'm gonna say ipv6 router eigrp 1.\n\n269\n00:13:47.580 --> 00:13:53.250\nAnd then I'll say eigrp router-id 0.0.0.2.\n\n270\n00:13:53.250 --> 00:13:57.060\nSo I'm setting the router ID first.\n\n271\n00:13:57.060 --> 00:14:03.958\nAnd then, I'm gonna get into interface\nGI1/0, where I'll do ipv6 eigrp 1,\n\n272\n00:14:03.958 --> 00:14:08.996\nand into 2/0,\nwhere I'll do the same thing, all right?\n\n273\n00:14:08.996 --> 00:14:13.331\nAnd just like that, I'm now configured for\nEIGRP under IPv6, and we're up and\n\n274\n00:14:13.331 --> 00:14:14.150\nrunning.\n\n275\n00:14:14.150 --> 00:14:15.900\nReally wasn't that many commands, right?\n\n276\n00:14:15.900 --> 00:14:19.750\nSet a router ID,\nturn on the interfaces, done.\n\n277\n00:14:19.750 --> 00:14:20.574\nWell we assume it's done.\n\n278\n00:14:20.574 --> 00:14:23.100\n&gt;&gt; Yeah. [LAUGH] &gt;&gt; I haven't verified\nanything, but we assume it's done.\n\n279\n00:14:23.100 --> 00:14:28.090\nSo looking my topology, I'm now running\nIPv6 across these three routers\n\n280\n00:14:28.090 --> 00:14:29.650\nrunning across the top of my topology.\n\n281\n00:14:29.650 --> 00:14:30.850\nAnd they should be exchanging information.\n\n282\n00:14:30.850 --> 00:14:32.400\nI saw those dual messages back there,\n\n283\n00:14:32.400 --> 00:14:35.115\nwhich means I've got some\nadjacencies that are coming up.\n\n284\n00:14:35.115 --> 00:14:37.490\nI'm gonna look just straight\nin the middle of the network.\n\n285\n00:14:37.490 --> 00:14:41.990\nRouter four is in the middle, so it should\nhave two neighbor relationships, right?\n\n286\n00:14:41.990 --> 00:14:43.040\nTwo adjacencies.\n\n287\n00:14:43.040 --> 00:14:46.249\nSo I'm gonna do a show\nipv6 eigrp neighbors.\n\n288\n00:14:46.249 --> 00:14:50.630\nAnd sure enough,\nI've got those two adjacencies, right?\n\n289\n00:14:50.630 --> 00:14:54.171\nNow, the IPv4 command was\nshow ip eigrp neighbors.\n\n290\n00:14:54.171 --> 00:14:55.800\nThis is just show IPv6.\n\n291\n00:14:55.800 --> 00:14:56.519\nSo it's nice.\n\n292\n00:14:56.519 --> 00:15:00.910\nWe just have that simple show command and\nwe just stick v6 on the end of that ip.\n\n293\n00:15:00.910 --> 00:15:02.240\nAnd off you go, right?\n\n294\n00:15:02.240 --> 00:15:03.180\nSo I can see the two neighbors.\n\n295\n00:15:03.180 --> 00:15:05.330\nI do see them with their\nlink-local addresses.\n\n296\n00:15:05.330 --> 00:15:07.310\nBecause, remember in IPv6,\n\n297\n00:15:07.310 --> 00:15:10.850\nyou always talk to people on the same\nsubnet using their link-local.\n\n298\n00:15:10.850 --> 00:15:12.920\nThat doesn't mean I don't know\nabout their other addresses.\n\n299\n00:15:12.920 --> 00:15:14.410\nIt just means that that's how\nI'm communicating to them.\n\n300\n00:15:14.410 --> 00:15:16.190\nThat's how they show up here, right?\n\n301\n00:15:16.190 --> 00:15:19.450\nSo I can see that information that\nI am connected to those neighbors.\n\n302\n00:15:19.450 --> 00:15:25.230\nAnd if I add detail to the end,\nI'll see additional information on them,\n\n303\n00:15:25.230 --> 00:15:27.220\nlike how many prefixes\nthey've exchanged with me,\n\n304\n00:15:27.220 --> 00:15:31.719\nso that I know if I've actually gotten\nsome routes from that person or not.\n\n305\n00:15:31.719 --> 00:15:33.200\nSo I can start to see\nthat information there.\n\n306\n00:15:34.490 --> 00:15:38.189\nI can also do show ipv6 protocols.\n\n307\n00:15:39.660 --> 00:15:41.075\nAnd I can see that I am running IPv6.\n\n308\n00:15:41.075 --> 00:15:43.925\nAnd I'm running it on these\ntwo interfaces, right?\n\n309\n00:15:43.925 --> 00:15:48.330\nSo it is there, but the most important\ncommand is gonna be show ipv6 route.\n\n310\n00:15:48.330 --> 00:15:50.920\nAm I actually learning\nanything from these people?\n\n311\n00:15:50.920 --> 00:15:54.730\nAnd so when I look at my routing table,\nyou'll gonna look for D, right?\n\n312\n00:15:54.730 --> 00:15:57.583\nDo we have any routes that have\na nice letter D beside them?\n\n313\n00:15:57.583 --> 00:15:59.905\nAnd those are ones that I'm\nlearning via somebody else.\n\n314\n00:15:59.905 --> 00:16:01.597\nAnd there's that link-local address again.\n\n315\n00:16:01.597 --> 00:16:03.369\nThat's how I'm actually\ngonna talk to them.\n\n316\n00:16:03.369 --> 00:16:08.560\nIf I have any traffic destined for\nFD00:192:168:1::, then I know\n\n317\n00:16:08.560 --> 00:16:13.840\nthat I can send that to this guy right\nhere on my GigabitEthernet2/0 interface.\n\n318\n00:16:15.590 --> 00:16:19.630\nSo it's up, it's running, and\nI'm exchanging routes, and\n\n319\n00:16:19.630 --> 00:16:23.370\nbecause I'm running it from router 6 over.\n\n320\n00:16:23.370 --> 00:16:25.470\nOn router six, did I turn it on for\nall my interfaces?\n\n321\n00:16:25.470 --> 00:16:27.330\nI think it was three,\nI feel like I only did two.\n\n322\n00:16:27.330 --> 00:16:29.300\nLet's go check router six.\n\n323\n00:16:29.300 --> 00:16:30.880\nOn router six,\nI'm just gonna double check,\n\n324\n00:16:30.880 --> 00:16:34.140\ncuz I think I missed that interface on\nthis one, and an easy way to see that is\n\n325\n00:16:34.140 --> 00:16:38.610\nshow IPv6 protocols because it will tell\nyou the interface as you turn it on.\n\n326\n00:16:38.610 --> 00:16:41.060\nAnd sure enough,\nI've only got two out of my three,\n\n327\n00:16:41.060 --> 00:16:42.780\nit's a really easy way to spot that.\n\n328\n00:16:42.780 --> 00:16:46.520\nThere's another command, I doubt it\nwill be on the exam, but just in case.\n\n329\n00:16:46.520 --> 00:16:49.440\nShow IPv6 EIGRP,\nI believe it's interfaces, there we go.\n\n330\n00:16:49.440 --> 00:16:53.010\nAnd it will actually show you just\nthe interfaces that are running\n\n331\n00:16:53.010 --> 00:16:54.410\nthe EIGRP that works under IPv4.\n\n332\n00:16:54.410 --> 00:16:57.239\nAlso, I don't think I used it then,\nbut you can see it.\n\n333\n00:16:57.239 --> 00:17:01.034\nAnd this is nice, because you can see\nhow many peers are out there, and\n\n334\n00:17:01.034 --> 00:17:03.360\nthen how much data you've\nactually been exchanging.\n\n335\n00:17:03.360 --> 00:17:06.700\nSee how I'm running on FA2/0\nwhere there's no peers?\n\n336\n00:17:06.700 --> 00:17:08.450\nSo, either that's a dead end, or\n\n337\n00:17:08.450 --> 00:17:10.240\nthe routers on the other\nend aren't talking to me.\n\n338\n00:17:10.240 --> 00:17:11.680\nSo, you kind of spot a problem.\n\n339\n00:17:12.730 --> 00:17:15.130\nAll right, in my case,\nmy problem is that I forgot an interface.\n\n340\n00:17:15.130 --> 00:17:19.037\nSo, let's take a look at my interfaces,\nand who'd I forget?\n\n341\n00:17:19.037 --> 00:17:20.502\n0010.\n\n342\n00:17:20.502 --> 00:17:21.416\nAnd 20.\n\n343\n00:17:21.416 --> 00:17:22.903\nI forgot 00.\n\n344\n00:17:22.903 --> 00:17:23.898\n&gt;&gt; Way to phone it in, Don.\n\n345\n00:17:23.898 --> 00:17:24.953\n&gt;&gt; I know.\n&gt;&gt; [LAUGH]\n\n346\n00:17:24.953 --> 00:17:25.929\n&gt;&gt; If you're going to do a job,\n\n347\n00:17:25.929 --> 00:17:27.210\nyou might as well just do half of it.\n\n348\n00:17:27.210 --> 00:17:28.967\n&gt;&gt; That's right [LAUGH].\n\n349\n00:17:28.967 --> 00:17:30.692\n&gt;&gt; Easy enough to fix, right?\n\n350\n00:17:30.692 --> 00:17:34.470\nI just need to bring\nthat into IPv6 EIGRP1.\n\n351\n00:17:34.470 --> 00:17:36.460\nAnd now that's solved.\n\n352\n00:17:36.460 --> 00:17:38.840\nThat was my 172.16 network\njust floating around.\n\n353\n00:17:38.840 --> 00:17:40.370\nMy old IPv4 network.\n\n354\n00:17:40.370 --> 00:17:44.570\nSo, I should see that hop over to router\n4, and ultimately over to router 2.\n\n355\n00:17:44.570 --> 00:17:48.090\nAnd so, on router 2,\nif I do a show IPv6 route,\n\n356\n00:17:49.700 --> 00:17:53.390\nthere it is, already showing up.\n\n357\n00:17:53.390 --> 00:17:55.570\nSo, still is fast as used\nto be in router IPv4,\n\n358\n00:17:55.570 --> 00:17:58.430\nbecause it works exactly\nas it did in router IPv4.\n\n359\n00:17:58.430 --> 00:18:00.330\nAll that's different are the addresses.\n\n360\n00:18:00.330 --> 00:18:02.160\nOur bigger addresses, right?\n\n361\n00:18:02.160 --> 00:18:03.750\nBut that metric, see my metric is 3328?\n\n362\n00:18:03.750 --> 00:18:07.650\nDo I still have, let's see if I still\nhave IPv4 running for this one.\n\n363\n00:18:07.650 --> 00:18:11.580\nSo, if I do a show IP route, there we go.\n\n364\n00:18:11.580 --> 00:18:15.890\nSo, under IPv4, my route to 172\nout of 16 out of zero to zero,\n\n365\n00:18:15.890 --> 00:18:17.070\nsee my metric is 3328, right?\n\n366\n00:18:18.570 --> 00:18:27.360\nWell, if I take a look at that under IPv6,\nmy metric to that route, 3328.\n\n367\n00:18:27.360 --> 00:18:31.570\nRemember, bandwidth, delay,\nwell those are the only ones you can use.\n\n368\n00:18:31.570 --> 00:18:35.600\nBandwidth and delay, those didn't change\nunder IPv4, IPv6, so I get the same exact\n\n369\n00:18:35.600 --> 00:18:39.810\nmetric if load or reliability were on,\nagain, those don't change either.\n\n370\n00:18:39.810 --> 00:18:43.490\nSo, my metric doesn't change,\nmy administrative distance doesn't change,\n\n371\n00:18:43.490 --> 00:18:45.740\nthe way the protocol works doesn't change.\n\n372\n00:18:45.740 --> 00:18:47.260\nIt's really just the address.\n\n373\n00:18:47.260 --> 00:18:51.720\n&gt;&gt; Super easy for us to make that jump\nfrom IPv4 to IPv6, because really though,\n\n374\n00:18:51.720 --> 00:18:56.920\nother than making sure we get that IPv6\nnomenclature underneath in our fingertips\n\n375\n00:18:56.920 --> 00:19:01.370\nthere as we're typing in everything else\nabout it is identical as it was before.\n\n376\n00:19:01.370 --> 00:19:05.180\nSo, it's an easy migration for us if\nwe're working in an EIGRP environment.\n\n377\n00:19:05.180 --> 00:19:05.840\n&gt;&gt; Yep.\n\n378\n00:19:05.840 --> 00:19:08.190\nThe only other command that I\nhaven't shown yet are the debugs.\n\n379\n00:19:08.190 --> 00:19:10.900\nDebugs work the same too though,\nso, for example, on this router,\n\n380\n00:19:10.900 --> 00:19:17.520\nif I were to do a debug IPv6 EIGRP,\ninstead of just plain old debug IP EIGRP.\n\n381\n00:19:18.930 --> 00:19:20.400\nNow I am debugging, and\n\n382\n00:19:20.400 --> 00:19:25.720\nif I jump over to another router\nlike router 6, let's take that one.\n\n383\n00:19:25.720 --> 00:19:27.210\nAnd I will give it an GI0/0 and\nshut it down.\n\n384\n00:19:27.210 --> 00:19:32.220\nThat's route is going to come out of\nthe routing table over on router 2.\n\n385\n00:19:32.220 --> 00:19:33.120\nHere's my updates.\n\n386\n00:19:33.120 --> 00:19:34.030\nThere's my debugs.\n\n387\n00:19:34.030 --> 00:19:35.800\nI can see this route changing.\n\n388\n00:19:35.800 --> 00:19:39.850\nAnd over here I get, well,\nit says routing table not updated.\n\n389\n00:19:39.850 --> 00:19:40.680\nHere we go, deleted.\n\n390\n00:19:40.680 --> 00:19:41.990\nSo it deleted the route.\n\n391\n00:19:41.990 --> 00:19:44.850\nAnd then routing table not updated\nmeans it didn't have a replacement to\n\n392\n00:19:44.850 --> 00:19:45.360\nstick in there.\n\n393\n00:19:45.360 --> 00:19:46.590\nWe didn't have a feasible successor.\n\n394\n00:19:46.590 --> 00:19:47.560\nIt's just gone.\n\n395\n00:19:47.560 --> 00:19:49.820\nAnd so, now the route is no\nlonger in the routing table.\n\n396\n00:19:49.820 --> 00:19:53.310\nIt's out.\nSo, it just pulled my route to 172.16,\n\n397\n00:19:53.310 --> 00:19:57.330\nand if I bring that back up and\n\n398\n00:19:57.330 --> 00:20:02.230\njump back over, we'll see that route\nappear back anytime now, or is it?\n\n399\n00:20:02.230 --> 00:20:03.220\nNo, that's not that message.\n\n400\n00:20:03.220 --> 00:20:04.020\nThere it goes.\n\n401\n00:20:04.020 --> 00:20:05.430\nJust gotta wait and be patient.\n\n402\n00:20:05.430 --> 00:20:06.040\n&gt;&gt; Be patient, Don.\n\n403\n00:20:06.040 --> 00:20:07.170\n&gt;&gt; Cool my jets.\n\n404\n00:20:07.170 --> 00:20:08.640\nAnd there it comes in.\n\n405\n00:20:08.640 --> 00:20:11.780\nAnd I can see route installed for 172.16.\n\n406\n00:20:11.780 --> 00:20:14.170\nIt brought it back in.\n\n407\n00:20:14.170 --> 00:20:18.170\nIt says do advertise out GI2/0.\n\n408\n00:20:18.170 --> 00:20:19.230\nWhat the heck's that all about?\n\n409\n00:20:19.230 --> 00:20:24.160\nWell, if I look at my topology here,\nlet me get to my physical map, right?\n\n410\n00:20:25.360 --> 00:20:30.214\nI learned that route this way, and\nit's saying do advertise it on DO2/0.\n\n411\n00:20:30.214 --> 00:20:34.220\nAll right, advertise it out\nthe interface that I learned it on.\n\n412\n00:20:34.220 --> 00:20:35.550\nWhat's that all about?\n\n413\n00:20:35.550 --> 00:20:39.470\nWell, remember, that's a flaw\nin distance factor protocols.\n\n414\n00:20:39.470 --> 00:20:42.200\nAnd so, we've got split horizon\nthat protects us from that.\n\n415\n00:20:42.200 --> 00:20:45.402\nIt says do advertise it, but\nwe're not actually gonna advertise it.\n\n416\n00:20:45.402 --> 00:20:47.470\nSo, it's gonna stop us\nfrom going out there.\n\n417\n00:20:47.470 --> 00:20:49.520\nI don't have any neighbors on GI1/0.\n\n418\n00:20:49.520 --> 00:20:51.088\nThere's no point in advertising there.\n\n419\n00:20:51.088 --> 00:20:53.130\nI'll wait until I have\na neighbor before I advertise.\n\n420\n00:20:53.130 --> 00:20:54.935\nSo, that's the message we expect to see.\n\n421\n00:20:54.935 --> 00:20:57.440\nEverything's working,\nwe're up and running.\n\n422\n00:20:57.440 --> 00:21:02.710\nAnd so, now I've got a consistent IPv6\nenvironment that's up across the line when\n\n423\n00:21:02.710 --> 00:21:04.640\nyou start working them.\n\n424\n00:21:04.640 --> 00:21:12.250\nIf you want to test these links,\nthose tools actually don't change at all.\n\n425\n00:21:12.250 --> 00:21:16.750\nThat if I wanna ping somebody like\n172.16.0.6, ping is smart enough to know\n\n426\n00:21:17.760 --> 00:21:22.660\nthat it's an IPv4 address,\nand so, that's an IPv4 ping.\n\n427\n00:21:22.660 --> 00:21:26.373\nIf I ping fd00:172:16::6,\n\n428\n00:21:26.373 --> 00:21:31.355\nit's smart enough to know\nthat it's an IPv6 address,\n\n429\n00:21:31.355 --> 00:21:36.370\nand it sends IPv6 data,\ndoesn't change at all.\n\n430\n00:21:36.370 --> 00:21:42.730\nIf I do a trace route to 172.16.0.6,\nthat's IPv4, right?\n\n431\n00:21:42.730 --> 00:21:48.265\nSo, there goes my IPv4 trace route,\nwhich eventually gets there.\n\n432\n00:21:48.265 --> 00:21:52.215\nI see, I go to router four,\nthen I go to router six, and I'm there.\n\n433\n00:21:52.215 --> 00:21:56.200\nAnd if I change that to\n\n434\n00:21:56.200 --> 00:22:01.490\nfd00:172:16::6, it does it with IPv6.\n\n435\n00:22:01.490 --> 00:22:03.660\nSo, those commands really are the same.\n\n436\n00:22:03.660 --> 00:22:07.280\nThat does make life a lot easier\nwhen it comes to working with IPv6,\n\n437\n00:22:08.420 --> 00:22:11.550\nespecially when your routing protocol\nis really the same protocol.\n\n438\n00:22:11.550 --> 00:22:13.350\nYour commands are basically\nthe same commands.\n\n439\n00:22:13.350 --> 00:22:15.650\nYou just add v6 to the end of IP,\nand you're in business.\n\n440\n00:22:15.650 --> 00:22:20.290\nBut remember, the big difference, the big\ndifference is that when I configure EIGRP,\n\n441\n00:22:20.290 --> 00:22:26.970\nI have to add it on the interface,\nusually the right interface.\n\n442\n00:22:26.970 --> 00:22:28.020\nThere we go.\n\n443\n00:22:28.020 --> 00:22:33.681\nSo, I have to add it on the interface\nby saying IPv6 EIGRP and as number.\n\n444\n00:22:33.681 --> 00:22:37.870\nAnd then, if we want to set a router ID,\nwe can set that too.\n\n445\n00:22:39.600 --> 00:22:44.560\nIf we look at our configuration here,\nand here it is.\n\n446\n00:22:44.560 --> 00:22:46.220\nIPv6 router EIGRP 1.\n\n447\n00:22:46.220 --> 00:22:48.281\nAnd then EIGRP router-id.\n\n448\n00:22:48.281 --> 00:22:50.620\nI did 0.0.0.2 to set that ID.\n\n449\n00:22:50.620 --> 00:22:55.170\nSo, easy enough to get those set in place,\nand now we're off and communicating.\n\n450\n00:22:55.170 --> 00:22:57.300\nNot a lot of commands to\nget this one to work.\n\n451\n00:22:57.300 --> 00:22:58.500\nAnd then off we go.\n\n452\n00:22:58.500 --> 00:22:59.840\n&gt;&gt; All right, Don, very straightforward.\n\n453\n00:22:59.840 --> 00:23:02.450\nHopefully, you guys are following\nalong in your books.\n\n454\n00:23:02.450 --> 00:23:04.160\nIf you are, that's great.\n\n455\n00:23:04.160 --> 00:23:07.760\nBut obviously practice, practice, practice\nis what's gonna hammer this home and\n\n456\n00:23:07.760 --> 00:23:11.737\nhelp if you if they throw IPv4\nversus IPv6 questions at you,\n\n457\n00:23:11.737 --> 00:23:14.030\nyou'l be prepared for\nthat because you've done both.\n\n458\n00:23:14.030 --> 00:23:15.910\nYou understand the difference\nbetween both and\n\n459\n00:23:15.910 --> 00:23:18.820\nwhat it takes to get both running\n,even though they are very simple.\n\n460\n00:23:18.820 --> 00:23:23.520\nWe'd hate for users to have a little\nstumbling block that I forgot the IPv6 and\n\n461\n00:23:23.520 --> 00:23:25.687\nthat command, and\nof course I got it wrong.\n\n462\n00:23:25.687 --> 00:23:27.340\nIt's a simple mistake you\ndon't need to be making,\n\n463\n00:23:27.340 --> 00:23:28.750\nthat can come from just practicing.\n\n464\n00:23:28.750 --> 00:23:32.780\nDon, fantastic demonstration for\nus to be able to follow along.\n\n465\n00:23:32.780 --> 00:23:34.632\nIt was very simple, very easy,\nyou did a great job.\n\n466\n00:23:34.632 --> 00:23:35.558\n&gt;&gt; [LAUGH]\n&gt;&gt; We appreciate that,\n\n467\n00:23:35.558 --> 00:23:36.426\nbecause you're very simple.\n\n468\n00:23:36.426 --> 00:23:37.730\n[LAUGH]\n&gt;&gt; Yeah, that's right.\n\n469\n00:23:37.730 --> 00:23:40.580\nIt takes a simple mindedness\nto implement an easy protocol.\n\n470\n00:23:40.580 --> 00:23:41.255\n&gt;&gt; That's right.\n\n471\n00:23:41.255 --> 00:23:43.120\n&gt;&gt; [LAUGH]\n&gt;&gt; Well, that being said,\n\n472\n00:23:43.120 --> 00:23:44.490\nwe've run out of time for this episode.\n\n473\n00:23:44.490 --> 00:23:48.330\nWe do thank you guys for watching,\nbut it is time for us to sign off.\n\n474\n00:23:48.330 --> 00:23:50.900\nFor ITProTV, I have been your host,\nDaniel Laurie.\n\n475\n00:23:50.900 --> 00:23:51.816\n&gt;&gt; And I'm Don Pezet.\n\n476\n00:23:51.816 --> 00:23:53.864\n&gt;&gt; We'll see you next time.\n\n477\n00:23:53.864 --> 00:24:02.061\n[MUSIC]\n\n",
          "vimeoId": "181120719"
        }
      ],
      "title": "Routing Technologies"
    },
    {
      "episodes": [
        {
          "description": "In this episode, Daniel and Don explore the venerable Point-to-Point Protocol or PPP as a simple WAN protocol solution. They begin by giving the history and use of PPP and then jump right into demonstrating what it takes to get PPP configured for a single link from the CLI.",
          "length": "2158",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/cisco-ccna200105/cisco-ccna200105-3-1-1-ppp-082616-1.jpg",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/cisco-ccna200105/cisco-ccna200105-3-1-1-ppp-082616-1-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/cisco-ccna200105/cisco-ccna200105-3-1-1-ppp-082616-1-sm.jpg",
          "title": "Point-to-Point Protocol (PPP)",
          "transcript": "WEBVTT\n\n1\n00:00:00.000 --> 00:00:10.000\n[MUSIC]\n\n2\n00:00:11.916 --> 00:00:16.034\nAll right greetings everyone and welcome\nto another great episode of ITProTV.\n\n3\n00:00:16.034 --> 00:00:18.485\nI'm your host Daniel Lowrie and\ntoday's episode,\n\n4\n00:00:18.485 --> 00:00:22.270\nwe are continuing almost more on our\nCCNA routing and switching series.\n\n5\n00:00:22.270 --> 00:00:25.670\nJoining us back in the studio again\nis our good friend Mr Don Pezet.\n\n6\n00:00:25.670 --> 00:00:27.390\nDon, we're glad to have you today,\nhow's it going?\n\n7\n00:00:27.390 --> 00:00:28.680\n&gt;&gt; It is going swell, Daniel.\n\n8\n00:00:28.680 --> 00:00:30.810\nReady to dive right back\ninto the world of Cisco and\n\n9\n00:00:30.810 --> 00:00:33.340\nwe're kinda moving into\na new section here, right?\n\n10\n00:00:33.340 --> 00:00:37.010\nWe've been focusing on switches and\nthen we focused on routing and\n\n11\n00:00:37.010 --> 00:00:38.570\nrouting protocols.\n\n12\n00:00:38.570 --> 00:00:42.050\nNow we're gonna switch into\nwide area network technologies.\n\n13\n00:00:42.050 --> 00:00:46.560\nAnd when we talk about WANs, it's really\nrouters that we're talking about.\n\n14\n00:00:46.560 --> 00:00:48.390\nYou don't have WAN\nconnectivity on a switch.\n\n15\n00:00:48.390 --> 00:00:49.170\nSwitches are layer 2,\n\n16\n00:00:49.170 --> 00:00:52.950\nthey're designed for internal\ncommunications on your local area network.\n\n17\n00:00:52.950 --> 00:00:56.710\nEven the layer 3 switch still\njust has Ethernet jacks on it.\n\n18\n00:00:56.710 --> 00:01:00.430\nBut when you talk about WAN,\nwide area connectivity,\n\n19\n00:01:00.430 --> 00:01:03.890\nyou're gonna get connected and\nplugged in to some kind of ISP network.\n\n20\n00:01:03.890 --> 00:01:05.480\nSome network you don't control.\n\n21\n00:01:05.480 --> 00:01:07.500\nA network that you normally rent or lease.\n\n22\n00:01:08.520 --> 00:01:12.380\nThink about at home,\nyou might have a cable modem, or DSL.\n\n23\n00:01:13.410 --> 00:01:16.160\nYou don't own the phone\nline that DSL comes in on.\n\n24\n00:01:16.160 --> 00:01:21.754\nYou don't own the coax cable that your\ncable high-speed modem comes in on.\n\n25\n00:01:21.754 --> 00:01:22.640\n&gt;&gt; My neighbor does.\n\n26\n00:01:22.640 --> 00:01:25.799\n&gt;&gt; [LAUGH] Listen,\nI just run it over to the neighbor.\n\n27\n00:01:26.880 --> 00:01:28.960\nYou rent that from the provider right?\n\n28\n00:01:28.960 --> 00:01:31.790\nI have to pay a cable bill,\nI ave to pay a DSL bill,\n\n29\n00:01:31.790 --> 00:01:34.510\na phone bill whatever,\nevery month to keep that line up.\n\n30\n00:01:34.510 --> 00:01:35.920\nIt's rented service.\n\n31\n00:01:35.920 --> 00:01:39.020\nAnd any time you rent a service that\nmeans you don't have full control over\n\n32\n00:01:39.020 --> 00:01:42.077\nsomebody else does and that's really\nwhat defines a wide area network.\n\n33\n00:01:42.077 --> 00:01:46.174\nThere is the geography of it too,\nthat wide area network lets me connect to\n\n34\n00:01:46.174 --> 00:01:50.271\na wide area, usually the Internet,\nthe entire globe or at least my city,\n\n35\n00:01:50.271 --> 00:01:53.801\nmy metro area, that's what it's\ngiving me connectivity to.\n\n36\n00:01:53.801 --> 00:01:57.978\nVersus my LAN where it's normally\njust connectivity within my building.\n\n37\n00:01:57.978 --> 00:02:03.740\nOn the WAN side though, boy are there\na ton of different connections out there.\n\n38\n00:02:03.740 --> 00:02:07.550\nWe really do start to fall into the habit\nof thinking that everything is Ethernet\n\n39\n00:02:07.550 --> 00:02:10.680\nbecause at the end of the day,\nthat's usually what we deal with.\n\n40\n00:02:10.680 --> 00:02:15.950\nWhen you have that cable modem, sure it's\ncoax coming in your house or your office.\n\n41\n00:02:15.950 --> 00:02:19.320\nIt runs into a cable modem,\nscrews right in there.\n\n42\n00:02:19.320 --> 00:02:21.060\nBut then what's on your cable modem?\n\n43\n00:02:21.060 --> 00:02:21.940\nAnd Ethernet Jack.\n\n44\n00:02:21.940 --> 00:02:23.790\nYou just plug in to your regular stuff and\n\n45\n00:02:23.790 --> 00:02:27.860\nyou could plug it right into a switch if\nyou really wanted to and run that way.\n\n46\n00:02:27.860 --> 00:02:32.820\nDSL, it comes in as two copper\nwire pair and it runs into a DSL\n\n47\n00:02:32.820 --> 00:02:37.830\nmode of some sort and it's got an RJ-45\njack on it, it becomes Ethernet.\n\n48\n00:02:37.830 --> 00:02:40.610\nMaybe you order metro Ethernet,\nso they actually run\n\n49\n00:02:40.610 --> 00:02:44.710\nfiber optics right into your office,\nlike we have that here at the studio.\n\n50\n00:02:44.710 --> 00:02:48.890\nWe have fiber optic Internet connected,\nand they run it into the building fiber,\n\n51\n00:02:48.890 --> 00:02:49.990\nand then what do they do?\n\n52\n00:02:49.990 --> 00:02:52.230\nThey hit a media transceiver and\nit becomes copper,\n\n53\n00:02:52.230 --> 00:02:55.610\nit's a RJ-45 jack, it's just plain old\nEthernet and that's what we end up with.\n\n54\n00:02:55.610 --> 00:02:59.150\nSo in this day and age, most of the time,\nwe are dealing with Ethernet, but\n\n55\n00:02:59.150 --> 00:03:02.010\nnot always.\n\n56\n00:03:02.010 --> 00:03:04.440\nThere are other technologies\nthat are out there.\n\n57\n00:03:04.440 --> 00:03:08.320\nTechnologies that are based on\nserial connectivity, or wireless,\n\n58\n00:03:08.320 --> 00:03:11.810\nother things like that,\nthat may run Ethernet, or they may not.\n\n59\n00:03:11.810 --> 00:03:14.960\nAnd a router is designed to have\nlittle modules, little slots,\n\n60\n00:03:14.960 --> 00:03:18.400\nthose WAN interface cards we\ntalked about back in the CCENT.\n\n61\n00:03:18.400 --> 00:03:21.390\nThat let us modify the ports\nthat are on there.\n\n62\n00:03:21.390 --> 00:03:26.080\nAnd if you've got a serial port,\nthat's connected, it doesn't run Ethernet.\n\n63\n00:03:26.080 --> 00:03:30.885\nSerial ports don't have MAC addresses,\nthey don't communicate the same way\n\n64\n00:03:30.885 --> 00:03:35.106\nthat we do with a normal Ethernet\nnetwork connection like when we have\n\n65\n00:03:35.106 --> 00:03:39.290\na copper RJ-45, CAT-5 type solution or\nCAT-6, whatever.\n\n66\n00:03:39.290 --> 00:03:39.872\nIt's different.\n\n67\n00:03:39.872 --> 00:03:41.165\nIt functions differently.\n\n68\n00:03:41.165 --> 00:03:44.345\nSo it needs different ways\nto identify the endpoints.\n\n69\n00:03:44.345 --> 00:03:47.575\nSince we don't have MAC addresses,\nwe can't use address resolution protocol.\n\n70\n00:03:47.575 --> 00:03:50.145\nWe can't just send out a broadcast and\nfind a person on the other side.\n\n71\n00:03:50.145 --> 00:03:54.150\nWe have to have other things that take\nover what was done at layer 2 and\n\n72\n00:03:54.150 --> 00:03:56.030\nreplace it with something new.\n\n73\n00:03:56.030 --> 00:03:58.810\nAnd so there's a number of\ndifferent protocols that do that.\n\n74\n00:03:58.810 --> 00:04:05.310\nThere's protocols like PPP, Frame Relay,\nHDLC, even MPLS to a degree.\n\n75\n00:04:05.310 --> 00:04:09.580\nThere's these different protocols that\nall replace what happens at layer 2.\n\n76\n00:04:09.580 --> 00:04:12.760\nAnd for\nthe exam Cisco really only calls out\n\n77\n00:04:12.760 --> 00:04:14.760\none of them that we truly need\nto worry about, and that's PPP.\n\n78\n00:04:16.210 --> 00:04:18.740\nYou don't see a lot of\nthese technologies anymore.\n\n79\n00:04:18.740 --> 00:04:20.910\nFrame Relay,\nyou used to see it all the time.\n\n80\n00:04:20.910 --> 00:04:24.810\nDaniel you've worked with Frame Relay,\nI've worked with Frame Relay I've\n\n81\n00:04:24.810 --> 00:04:27.630\nprobably messed with thousands\nof lines by this point.\n\n82\n00:04:27.630 --> 00:04:30.804\nTons of Frame Relay lines that\nare out there it's been replaced.\n\n83\n00:04:30.804 --> 00:04:34.044\nBecause Metro Ethernet has become so\ninexpensive that they can just run\n\n84\n00:04:34.044 --> 00:04:36.690\ntraditional Ethernet links\nright in to your buildings and\n\n85\n00:04:36.690 --> 00:04:38.850\nyou don't need crazy\nthings like Frame Relay.\n\n86\n00:04:38.850 --> 00:04:40.150\n&gt;&gt; It's no conversion right?\n\n87\n00:04:40.150 --> 00:04:40.849\nBecause it is Ethernet.\n\n88\n00:04:40.849 --> 00:04:43.982\n&gt;&gt; Yeah, and it makes it a lot simpler to\nsupport and easier to find people that can\n\n89\n00:04:43.982 --> 00:04:46.690\njump right in and start working\nwith the equipment right away.\n\n90\n00:04:46.690 --> 00:04:48.520\nWith Frame Relay,\nyou got this nightmare of a map and\n\n91\n00:04:48.520 --> 00:04:49.830\nall these other things you gotta draw up.\n\n92\n00:04:49.830 --> 00:04:51.740\nIt really becomes challenging.\n\n93\n00:04:51.740 --> 00:04:55.230\nBut, there are still times where you\nsee some of these older protocols,\n\n94\n00:04:55.230 --> 00:04:58.780\nand the best example is\na point-to-point serial line.\n\n95\n00:04:59.870 --> 00:05:03.150\nWhen I get Metro Ethernet, I'm normally\nconnecting to some kind of shared,\n\n96\n00:05:03.150 --> 00:05:06.040\nmetropolitan network,\nand I might be isolated.\n\n97\n00:05:06.040 --> 00:05:10.090\nTechnologies like MPLS,\nthe Multilayer Packet Label Switching,\n\n98\n00:05:10.090 --> 00:05:13.320\nthat allows all the packets to be\nlabelled so they can be kept apart.\n\n99\n00:05:13.320 --> 00:05:16.780\nSo I don't see the other customers on\nthat network, but they are out there.\n\n100\n00:05:16.780 --> 00:05:19.630\nThey are somewhere out there\ncrossing the same wires as me,\n\n101\n00:05:19.630 --> 00:05:21.650\nit's just software that's\nkeeping them separate.\n\n102\n00:05:21.650 --> 00:05:25.810\nWell, there are times we would\nrather have a point to point link.\n\n103\n00:05:25.810 --> 00:05:29.730\nA link where it's only me on that link and\nnobody else.\n\n104\n00:05:29.730 --> 00:05:32.640\nIf you work for a hospital and\nyour transmitting medical records,\n\n105\n00:05:32.640 --> 00:05:38.170\nif you work for a weaponized industry\nany kind of military type organization,\n\n106\n00:05:38.170 --> 00:05:43.030\nyou wanna moved your data across\nthe links that only you are on.\n\n107\n00:05:43.030 --> 00:05:44.610\nAnd MPLS doesn't do that.\n\n108\n00:05:44.610 --> 00:05:46.970\nWith MPLS sure you're labeled and\nisolated, but\n\n109\n00:05:46.970 --> 00:05:48.670\nyou're crossing links with other people.\n\n110\n00:05:48.670 --> 00:05:50.150\nThey are out there, right?\n\n111\n00:05:50.150 --> 00:05:51.390\nSame thing goes for Frame Relay.\n\n112\n00:05:51.390 --> 00:05:54.240\nYou are crossing through switches that\nother people are crossing through.\n\n113\n00:05:54.240 --> 00:05:59.850\nIt's not true isolation, but with\na point-to-point link it's true isolation.\n\n114\n00:05:59.850 --> 00:06:02.180\nYou're on both ends of that link and\nthat's it.\n\n115\n00:06:02.180 --> 00:06:02.840\nIt's your equipment.\n\n116\n00:06:02.840 --> 00:06:04.860\nYour equipment on one end,\nyour equipment on the other end and\n\n117\n00:06:04.860 --> 00:06:06.590\nno one else in between.\n\n118\n00:06:06.590 --> 00:06:10.360\nYou might pass through Telco switches but\nyou're on an isolated circuit and\n\n119\n00:06:10.360 --> 00:06:11.240\nno else can intercept.\n\n120\n00:06:12.240 --> 00:06:15.630\nWith these circuits,\nwe have to take care of everything.\n\n121\n00:06:15.630 --> 00:06:19.430\nWe have to provide all the communication\nfunctionality across it.\n\n122\n00:06:19.430 --> 00:06:22.880\nAnd to do that,\nthe easiest way is to use PPP.\n\n123\n00:06:22.880 --> 00:06:28.060\nSo if you get a point-to-point\nT1 line you can use PPP which is\n\n124\n00:06:28.060 --> 00:06:33.200\nthe point to point protocol and it takes\ncare of all those other components and\n\n125\n00:06:33.200 --> 00:06:36.170\nit takes care what layer 2 is going to do.\n\n126\n00:06:36.170 --> 00:06:41.565\nThe nicest thing about PPP is it's\nsuper simple to get it configured.\n\n127\n00:06:41.565 --> 00:06:43.110\nLet me show you how easy it is.\n\n128\n00:06:43.110 --> 00:06:44.825\nI'm going to bring up my topology.\n\n129\n00:06:44.825 --> 00:06:47.746\nThis is the topology we've been\nusing throughout the show.\n\n130\n00:06:47.746 --> 00:06:48.682\nMy little routers.\n\n131\n00:06:48.682 --> 00:06:50.870\nI've made one subtle change to it.\n\n132\n00:06:50.870 --> 00:06:52.760\nNotice down here, router 3 to router 5.\n\n133\n00:06:52.760 --> 00:06:56.150\nUp until this point, these two routers\nhave been connected via a single fast\n\n134\n00:06:56.150 --> 00:06:59.820\nEthernet jack,\n100 mega bit network connection.\n\n135\n00:06:59.820 --> 00:07:03.120\nI have replaced it with two serial lines,\n\n136\n00:07:03.120 --> 00:07:05.560\nnow the serial lines are being\nrun between these guys.\n\n137\n00:07:05.560 --> 00:07:09.760\nNormally the serial lines on router 3\nwould run to the telephone company and\n\n138\n00:07:09.760 --> 00:07:12.190\nthe serial lines on router 5 would\nrun from their telephone company and\n\n139\n00:07:12.190 --> 00:07:14.730\nwe'd be connected across\nthe Telco network.\n\n140\n00:07:14.730 --> 00:07:18.470\nBut if the buildings are close you\ncould actually run your own line and\n\n141\n00:07:18.470 --> 00:07:19.220\nachieve the same goal.\n\n142\n00:07:19.220 --> 00:07:21.090\nYou don't really need\nthe telephone company involved,\n\n143\n00:07:21.090 --> 00:07:24.150\nyou just need the copper lines\nis what you really want.\n\n144\n00:07:24.150 --> 00:07:25.860\nBut we get those in between.\n\n145\n00:07:25.860 --> 00:07:28.480\nSo now, in order for\nrouter 3 and router 5 to talk,\n\n146\n00:07:28.480 --> 00:07:33.060\nthey're going to have to use this serial\nlink to be able to pass between them.\n\n147\n00:07:33.060 --> 00:07:34.460\nSo I'm gonna implement that.\n\n148\n00:07:34.460 --> 00:07:37.630\nThese are point-to-point links,\nno one else can plug in to these.\n\n149\n00:07:37.630 --> 00:07:41.400\nIt just supports two nodes and\nthat's it and then they can communicate.\n\n150\n00:07:41.400 --> 00:07:46.200\nNow, PPP will take over layer 2,\nbut I still have layer 3 and\n\n151\n00:07:46.200 --> 00:07:47.260\nhigher to worry about.\n\n152\n00:07:47.260 --> 00:07:50.659\nSo, I will have to assign IP addresses so\nthat these nodes can find each other and\n\n153\n00:07:50.659 --> 00:07:52.162\ntalk each other over the link.\n\n154\n00:07:52.162 --> 00:07:55.764\nI need IP addresses so\nthat I can route my traffic across there.\n\n155\n00:07:55.764 --> 00:07:59.970\nI'm running EIGRP from our EIGRP lab\nearlier, so all these routers are running\n\n156\n00:07:59.970 --> 00:08:03.066\nthe EIGRP, I need that to run\nover to the serial links too.\n\n157\n00:08:03.066 --> 00:08:05.964\nSo, they can find each other and\nshare thee routes that are out there and\n\n158\n00:08:05.964 --> 00:08:08.890\nlearn the best way to connect\nfrom one system to another right.\n\n159\n00:08:08.890 --> 00:08:11.420\nSo, all that is going to be\nhappening here in the background\n\n160\n00:08:11.420 --> 00:08:12.910\nas soon as I get it configured.\n\n161\n00:08:12.910 --> 00:08:15.474\n&gt;&gt; Don,\nwhat layer of the model OS PPP reside at?\n\n162\n00:08:15.474 --> 00:08:20.320\n&gt;&gt; So technically, it's layer two,\nit's just replacing ethernet in this case,\n\n163\n00:08:20.320 --> 00:08:23.220\nright, and there are other\nprotocol's like slip that can do it,\n\n164\n00:08:23.220 --> 00:08:24.989\nalthough most people\ndon't run slip anymore.\n\n165\n00:08:26.050 --> 00:08:31.520\nSlip just in TCP/IP, PPP can actually\ncarry IP traffic as well as IPX,\n\n166\n00:08:31.520 --> 00:08:34.230\nSPX, Apple Talk, and\nseveral other protocols.\n\n167\n00:08:34.230 --> 00:08:36.100\nThose are layer 3 and higher, right.\n\n168\n00:08:36.100 --> 00:08:37.949\nSo this is taking over layer 2.\n\n169\n00:08:37.949 --> 00:08:42.695\nThere's HDLC which is the high speed\ndata link Control protocol, HTLC,\n\n170\n00:08:42.695 --> 00:08:46.960\nthat's what your Cisco routers\nare running by default.\n\n171\n00:08:46.960 --> 00:08:49.960\nWhen I turn on these serial links,\nCisco routers run HTLC,\n\n172\n00:08:49.960 --> 00:08:51.520\nwhich is Cisco proprietary.\n\n173\n00:08:51.520 --> 00:08:53.346\nThey'll actually find each other and\nturn themselves on,\n\n174\n00:08:53.346 --> 00:08:54.302\nwithout me messing with them.\n\n175\n00:08:54.302 --> 00:08:56.388\nBut HTLC is not on the exam.\n\n176\n00:08:56.388 --> 00:08:57.221\n&gt;&gt; [LAUGH]\n&gt;&gt; PPP Is, so\n\n177\n00:08:57.221 --> 00:08:58.610\nwe will have to get that\nconfigured a little bit.\n\n178\n00:08:58.610 --> 00:09:00.630\nAll right, so, that's another one.\n\n179\n00:09:00.630 --> 00:09:03.200\nThere's a few others that\nare just really uncommon,\n\n180\n00:09:03.200 --> 00:09:07.060\nbut those are the main ones at layer two,\nright.\n\n181\n00:09:07.060 --> 00:09:09.860\nSo, if I want to get this configured,\nfirst off I need to make sure\n\n182\n00:09:09.860 --> 00:09:12.910\nthat fast ethernet line is down, right,\ncuz I don't want that taking over.\n\n183\n00:09:12.910 --> 00:09:14.720\nAnd then after that,\nI'm going to configure these serial lines.\n\n184\n00:09:14.720 --> 00:09:18.460\nSo I'm going to jump over to router three,\nand we'll get that done, right?\n\n185\n00:09:18.460 --> 00:09:24.110\nSo on router three, I'm gonna start just\nby doing a quick show IP interface brief,\n\n186\n00:09:24.110 --> 00:09:26.515\nall right, and\nI'm gonna see my interfaces.\n\n187\n00:09:26.515 --> 00:09:31.050\nNow, my fast eight ethernet links are\nright here, and, actually I don't have any\n\n188\n00:09:31.050 --> 00:09:34.130\nIP as assigned to this router at all,\nso I'll have to sort that out.\n\n189\n00:09:34.130 --> 00:09:40.373\nBut notice my serial interfaces,\nI've got serial 3/0, 3/1, 3/2, 3/3.\n\n190\n00:09:40.373 --> 00:09:44.702\nNow, I have only got two serial lines,\nright, so\n\n191\n00:09:44.702 --> 00:09:48.200\nwhy do I have four in this router?\n\n192\n00:09:48.200 --> 00:09:52.625\nWell, when you buy the little module,\nthe pop in of the Cisco router,\n\n193\n00:09:52.625 --> 00:09:57.052\nthey normally come as an individual port,\nor a 4 port, or an 8 port.\n\n194\n00:09:57.052 --> 00:09:59.719\nThere's not a lot of 2 port boards that\nare out there, there are some that had it,\n\n195\n00:09:59.719 --> 00:10:00.660\nthat's not what I've got.\n\n196\n00:10:00.660 --> 00:10:02.170\nSo I've got a 4 port board.\n\n197\n00:10:02.170 --> 00:10:04.230\nDoesn't matter am only\ngonna use two of them, but\n\n198\n00:10:04.230 --> 00:10:07.080\nthat's the way that that kinda works out.\n\n199\n00:10:08.520 --> 00:10:13.360\nAll right, so, what I wanna do\nfrom here is I wanna jump in and\n\n200\n00:10:13.360 --> 00:10:14.260\nget this links configured.\n\n201\n00:10:14.260 --> 00:10:16.270\nNow I'm gonna start out with\njust one link, all right?\n\n202\n00:10:16.270 --> 00:10:21.750\nSo, I'm gonna get into my configuration,\nI'm gonna get into interface serial 3/0.\n\n203\n00:10:21.750 --> 00:10:26.670\nAnd from here, I wanna get it turned on,\nso that's the no shutdown command, right?\n\n204\n00:10:26.670 --> 00:10:28.010\nSo, no shutdown, that's gonna turn it on.\n\n205\n00:10:29.020 --> 00:10:31.859\nI'm gonna assign an IP address, and so\n\n206\n00:10:31.859 --> 00:10:36.601\nI'll make this 192.168.3.3\nis what this used to be.\n\n207\n00:10:36.601 --> 00:10:40.700\nNow, I'm going to have two\nlinks here instead of just one.\n\n208\n00:10:40.700 --> 00:10:45.481\nSo, I'm going to apply a little\nbit of subnetting to this one,\n\n209\n00:10:45.481 --> 00:10:48.564\nto divide up my links, and get that set.\n\n210\n00:10:48.564 --> 00:10:55.480\nSo, instead of 255.255.255.0 I'm\ngoing to do 255.255.255.128.\n\n211\n00:10:55.480 --> 00:10:57.510\nAnd that's gonna divide\nthis network in half.\n\n212\n00:10:57.510 --> 00:10:59.580\nSo, I'll have you know 3.3,\n\n213\n00:10:59.580 --> 00:11:04.790\nI guess I could go even smaller,\nit's a point to point link.\n\n214\n00:11:04.790 --> 00:11:07.909\nOn a point to point link,\nhow many people are gonna be on there?\n\n215\n00:11:07.909 --> 00:11:08.964\n&gt;&gt; Two.\n&gt;&gt; Just two.\n\n216\n00:11:08.964 --> 00:11:09.618\n&gt;&gt; [LAUGH]\n&gt;&gt; So\n\n217\n00:11:09.618 --> 00:11:13.290\nI can create a subnet that was so small\nthat it would only fit two IPs, right?\n\n218\n00:11:13.290 --> 00:11:17.881\nSo, I could say my IP\naddress is 192.168.3.1 with\n\n219\n00:11:17.881 --> 00:11:21.690\na 255.255.255.252 subnet mask.\n\n220\n00:11:21.690 --> 00:11:23.229\nAll right, now when I do that,\n\n221\n00:11:23.229 --> 00:11:27.120\nthat's as small as I can get cuz\nthat actually makes four ips.\n\n222\n00:11:27.120 --> 00:11:31.866\nI need one for the network, two for\nthe hosts and one for the broadcast.\n\n223\n00:11:31.866 --> 00:11:37.093\nSo, 192.168.3.0 will be my network,\n.1 and .2 will be available for\n\n224\n00:11:37.093 --> 00:11:41.560\nhosts, and .3 will be my broadcast,\nbecause I'm using that 252.\n\n225\n00:11:41.560 --> 00:11:43.440\nYou see this a lot, that's a /30.\n\n226\n00:11:43.440 --> 00:11:46.890\nAnd so, in ISP's,\nthey'll issue you /30's a lot.\n\n227\n00:11:46.890 --> 00:11:50.400\nNow, little beyond the scope of this\nclass, the Cisco router actually support\n\n228\n00:11:50.400 --> 00:11:53.030\nslash 31 also where there is no\nnetwork reference and no broadcast.\n\n229\n00:11:53.030 --> 00:11:57.080\nThere's just the two host IP's, but\nmost third parties don't support that.\n\n230\n00:11:57.080 --> 00:12:00.820\nSo, if you happen to be connected to\nan ISP and you've got Cisco equipment, and\n\n231\n00:12:00.820 --> 00:12:04.160\nthey've got Cisco equipment,\nthey might give you a slash 31, but for\n\n232\n00:12:04.160 --> 00:12:06.840\nmost people a slash 30 is\nthe smallest network they'll assign.\n\n233\n00:12:07.870 --> 00:12:12.890\nAll right, now, if I stop right here,\nI told it to turn the interface on,\n\n234\n00:12:12.890 --> 00:12:16.170\nand I can see my interface went up,\nand then it went down.\n\n235\n00:12:16.170 --> 00:12:18.590\nIt came on and\nit tried to connect to the other side, and\n\n236\n00:12:18.590 --> 00:12:20.760\nthen it went down because the other\nside is still shut down, right?\n\n237\n00:12:20.760 --> 00:12:23.070\nSo it's not going to come\nup until both sides are up.\n\n238\n00:12:23.070 --> 00:12:28.770\nSo I'm down, but even if the other side\nwas up, it's not actually running PPP yet.\n\n239\n00:12:28.770 --> 00:12:32.230\nIf I do a show interface serial 3/0 and\n\n240\n00:12:32.230 --> 00:12:36.260\nI take a look at\nthe interface's configuration.\n\n241\n00:12:36.260 --> 00:12:41.470\nUp here, I can see encapsulation,\nHDLC, that's the default.\n\n242\n00:12:41.470 --> 00:12:46.848\nThe default is that it'll run HDLC, and it\nwill actually work, if that's what I want,\n\n243\n00:12:46.848 --> 00:12:51.806\nbut that's not what I want, I want PPP,\nso I need to issue encapsulation, PPP.\n\n244\n00:12:51.806 --> 00:12:58.450\nAnd as soon as I do that,\nnow it's got an IP address assigned.\n\n245\n00:12:58.450 --> 00:13:03.970\nAnd it's got an IP, I mean,\nan encapsulation of ppp, all right.\n\n246\n00:13:03.970 --> 00:13:06.340\nSo those are the two commands\nthat I've issued, and\n\n247\n00:13:06.340 --> 00:13:10.260\nif I do a show int s3/0 I\ncan bring it up right here.\n\n248\n00:13:10.260 --> 00:13:13.483\nAnd now I see that my encapsulation\nis properly set to PPP.\n\n249\n00:13:13.483 --> 00:13:16.580\nNow, let me point out a few other\nthings right here in this line.\n\n250\n00:13:16.580 --> 00:13:21.155\nAs you look across the next thing\nLCP request sent, all right.\n\n251\n00:13:21.155 --> 00:13:24.320\nPPP is actually a collection of protocols,\n\n252\n00:13:24.320 --> 00:13:29.420\nand one of the protocols is\nthe link control protocol, LCP.\n\n253\n00:13:29.420 --> 00:13:32.127\nSo, as soon as I turn\nthis on LCP kicks on and\n\n254\n00:13:32.127 --> 00:13:35.232\nis trying to make a connection\nto the other side.\n\n255\n00:13:35.232 --> 00:13:39.590\nThe other side's down so it's gonna fail,\nso I get REQsent and that's it, all right?\n\n256\n00:13:39.590 --> 00:13:42.290\nSo we're gonna watch that a little\nbit later cuz we'll see it actually\n\n257\n00:13:42.290 --> 00:13:45.190\nlink up and the LCP status will change.\n\n258\n00:13:45.190 --> 00:13:46.930\nThere's another part of\nPPP called the IPCP,\n\n259\n00:13:46.930 --> 00:13:51.090\nwhich is\nthe Internet Protocol Control Protocol.\n\n260\n00:13:51.090 --> 00:13:54.460\nAnd IPCP is what's handling\nthe addressing on this link.\n\n261\n00:13:54.460 --> 00:13:58.840\nSo, remember if I don't have MAC\naddresses, how can I do art broadcasts?\n\n262\n00:13:58.840 --> 00:14:01.250\nYou really can't,\nIPCP takes care of that and\n\n263\n00:14:01.250 --> 00:14:04.040\nmakes sure that I can find the IP on\nthe other side and communicate properly.\n\n264\n00:14:04.040 --> 00:14:07.890\nSo, couple of different protocols\nwrapped up inside of PPP.\n\n265\n00:14:07.890 --> 00:14:10.630\n&gt;&gt; Don, really quickly, just practically,\n\n266\n00:14:10.630 --> 00:14:14.300\nyou said that Cisco doesn't\ncall out HDLC on the exam,\n\n267\n00:14:14.300 --> 00:14:18.990\nfor our intents and purposes today, but\nwhy would we choose one over the other?\n\n268\n00:14:18.990 --> 00:14:22.550\nWhat would be the benefit of\ngoing with PPP over HDLC?\n\n269\n00:14:22.550 --> 00:14:27.080\n&gt;&gt; All right, HDLC is fast,\nthe name is High-speed Data Link Control,\n\n270\n00:14:27.080 --> 00:14:30.190\nit's designed to just be fast and so\nit doesn't have a lot of features.\n\n271\n00:14:30.190 --> 00:14:32.480\nIt's pretty bare bones as far\nas features are concerned.\n\n272\n00:14:32.480 --> 00:14:34.190\nIt just brings the line up and\ngets it to work, and\n\n273\n00:14:34.190 --> 00:14:37.500\nif that's all you want HDLC is great,\nit's the default, you can do it.\n\n274\n00:14:37.500 --> 00:14:42.410\nBut PPP is a suite, it adds a collection\nof different things together.\n\n275\n00:14:42.410 --> 00:14:45.842\nAnd that means it adds support for things\nHDLC doesn't have, like authentication.\n\n276\n00:14:45.842 --> 00:14:47.870\nIf I wanted to use names and\npasswords, I can't do that in HDLC.\n\n277\n00:14:47.870 --> 00:14:50.350\nI can in PPP.\n\n278\n00:14:50.350 --> 00:14:53.580\nOr one of the things we will see later,\nwe can do multi-link.\n\n279\n00:14:53.580 --> 00:14:57.210\nI can make more than one serial link and\nbind it together with PPP.\n\n280\n00:14:57.210 --> 00:14:59.618\nIt's made it right there in the protocol,\nHDLC doesn't have it.\n\n281\n00:14:59.618 --> 00:15:01.783\nNow, there are ways to do it with HDLC but\n\n282\n00:15:01.783 --> 00:15:05.870\nit is sticking some other protocol in\naddition to it with PPP is built in.\n\n283\n00:15:05.870 --> 00:15:07.900\nWe can multi link our lines so\nthat cows come along and\n\n284\n00:15:07.900 --> 00:15:09.410\nactually get some high bandwidth.\n\n285\n00:15:09.410 --> 00:15:12.630\nRemember like a T1 line,\nit's only 1.5 megabit but\n\n286\n00:15:12.630 --> 00:15:15.730\nI can take four T1 lines bond them\ntogether now I got six megabit So\n\n287\n00:15:15.730 --> 00:15:17.870\nyou could start to create\nlarger lines by doing this.\n\n288\n00:15:17.870 --> 00:15:19.784\nIt does get expensive though.\n\n289\n00:15:19.784 --> 00:15:22.021\n&gt;&gt; I was about to say,\nthat's gotta be pricey.\n\n290\n00:15:22.021 --> 00:15:24.201\n[LAUGH]\n&gt;&gt; It depends, it can get expensive.\n\n291\n00:15:24.201 --> 00:15:27.410\nBut if we've got those resources\nthen we can certainly do it.\n\n292\n00:15:27.410 --> 00:15:29.220\nSo I've configured one side.\n\n293\n00:15:29.220 --> 00:15:31.370\nLet's go take a look at the other side,\nthat was router 3.\n\n294\n00:15:31.370 --> 00:15:35.230\nRouter 5 is on the other side of that\nlink, and so I'm gonna jump over to it.\n\n295\n00:15:35.230 --> 00:15:37.740\nAnd I'm basically gonna\nrepeat that same process.\n\n296\n00:15:37.740 --> 00:15:42.660\nAnd so here on router 5, if I do a show\nIP interface brief and take a look at it,\n\n297\n00:15:42.660 --> 00:15:44.288\nit's got serial lines,\njust like the other one,\n\n298\n00:15:44.288 --> 00:15:46.450\nthey're all administratively\ndown right now.\n\n299\n00:15:46.450 --> 00:15:50.385\nAnd I'm going to get in the configuration\nand get in to serial 3/0.\n\n300\n00:15:51.440 --> 00:15:54.125\nI'll say, well actually I'm going\nto leave the encapsulation wrong,\n\n301\n00:15:54.125 --> 00:15:55.330\njust to show you guys.\n\n302\n00:15:55.330 --> 00:16:00.210\nI'll do an IP address 192.168.3.2 for\nthis guy.\n\n303\n00:16:00.210 --> 00:16:05.519\n255.255.255.128 so it's got that nice /30.\n\n304\n00:16:05.519 --> 00:16:08.784\n&gt;&gt; [CROSSTALK] 252\n&gt;&gt; [CROSSTALK] You changed it, right?\n\n305\n00:16:08.784 --> 00:16:12.531\nSorry, 252, yep, that's,\nsorry, a slash 30.\n\n306\n00:16:12.531 --> 00:16:13.279\n&gt;&gt; That's right.\n\n307\n00:16:13.279 --> 00:16:16.710\n&gt;&gt; Right, 128 would be a slash 25, right?\n\n308\n00:16:16.710 --> 00:16:19.040\nSo I'm doing a slash 30,\nso it's just two IPs, so\n\n309\n00:16:19.040 --> 00:16:20.950\nlet me just correct that real quick.\n\n310\n00:16:20.950 --> 00:16:24.700\nAnd then I'm gonna leave the encapsulation\nwrong, gonna do a no shutdown.\n\n311\n00:16:24.700 --> 00:16:27.570\nOkay, what's gonna happen is this\nlink's gonna try and come up.\n\n312\n00:16:27.570 --> 00:16:30.730\nAnd when it tries to come up,\nit's gonna try and come up with HDLC.\n\n313\n00:16:30.730 --> 00:16:36.010\nAnd so I should see the line come up,\nhere it is, state changed to up.\n\n314\n00:16:36.010 --> 00:16:38.910\nThe other side is up, so we're both up.\n\n315\n00:16:38.910 --> 00:16:43.810\nOn layer one,\nwe should be able to create a link line.\n\n316\n00:16:43.810 --> 00:16:45.034\nRight.\nAnd there will be little lights\n\n317\n00:16:45.034 --> 00:16:47.270\non this adaptors and so\nyou'll see a light come up.\n\n318\n00:16:47.270 --> 00:16:48.588\nBut then when we get to layer two,\n\n319\n00:16:48.588 --> 00:16:53.410\nI'm running HDLC,\nthe other side is running PPP.\n\n320\n00:16:53.410 --> 00:16:54.810\nAnd so what happens?\n\n321\n00:16:54.810 --> 00:16:56.340\nChanged state to down, right.\n\n322\n00:16:56.340 --> 00:16:58.810\nWe're not able to bring\nthat connection up.\n\n323\n00:16:58.810 --> 00:17:06.530\nSo I need issue out encapsulation ppp and\nnow the link should come up, okay?\n\n324\n00:17:06.530 --> 00:17:09.520\nAnd as soon as it comes up,\nthere, didn't take very long.\n\n325\n00:17:09.520 --> 00:17:11.219\nI see EIGRP coming up, right?\n\n326\n00:17:11.219 --> 00:17:14.584\nSo it's grabbing and starting to build the\nneighbor relationship over that link, so\n\n327\n00:17:14.584 --> 00:17:16.372\nI know I'm communicating across that link.\n\n328\n00:17:16.372 --> 00:17:18.639\nSerial3/0 is up.\n\n329\n00:17:19.960 --> 00:17:20.988\nAnd off we go, right.\n\n330\n00:17:20.988 --> 00:17:22.934\nSo let's take a look at what\nthat interface looks like now.\n\n331\n00:17:22.934 --> 00:17:26.880\nIf I do a show interface serial 3/0,\n\n332\n00:17:26.880 --> 00:17:31.543\nI can see up here that\nmy encapsulation is PPP,\n\n333\n00:17:31.543 --> 00:17:36.180\nmy LCP is Open, it's not request sent.\n\n334\n00:17:36.180 --> 00:17:38.260\nI talked to the other person,\nthey were there.\n\n335\n00:17:38.260 --> 00:17:41.000\nI said, hi, I'm running PPP,\nthey said hey, me too.\n\n336\n00:17:41.000 --> 00:17:44.230\nWe exchanged information, I said,\nhey, I'm not doing authentication so\n\n337\n00:17:44.230 --> 00:17:45.190\nyou're welcome to connect.\n\n338\n00:17:45.190 --> 00:17:46.830\nThe other side said, me either.\n\n339\n00:17:46.830 --> 00:17:53.520\nAnd they bonded, the link came up and\nonce it's open, IPCP turned on.\n\n340\n00:17:53.520 --> 00:17:55.780\nSo now the IP control\nprotocol is running so\n\n341\n00:17:55.780 --> 00:18:00.540\nwe can actually use IP over this link and\nCDP control protocol.\n\n342\n00:18:00.540 --> 00:18:03.530\nThe Cisco discovery protocol\ncontrol protocol on.\n\n343\n00:18:03.530 --> 00:18:08.010\nWhich means even I didn't configure IP\naddresses, at least CPD is running so\n\n344\n00:18:08.010 --> 00:18:10.360\nI should be able to see my neighbor,\nright?\n\n345\n00:18:10.360 --> 00:18:16.920\nIf I do a show cpd neighbor,\nI should see right there.\n\n346\n00:18:16.920 --> 00:18:17.640\nI'm on router five,\n\n347\n00:18:17.640 --> 00:18:21.280\nthere's router three that I communicate\nto and they're over there, right?\n\n348\n00:18:21.280 --> 00:18:25.590\nSo everything is hunky dory,\nexactly the way that I want it to be.\n\n349\n00:18:25.590 --> 00:18:27.510\nAnd I'm able to communicate and\nsee that person,\n\n350\n00:18:27.510 --> 00:18:30.600\nso that's exactly what we wanted, right?\n\n351\n00:18:30.600 --> 00:18:34.350\nSo now that we're up and going,\nwe've got a good valid link and\n\n352\n00:18:34.350 --> 00:18:35.806\nwe're able to communicate.\n\n353\n00:18:35.806 --> 00:18:39.013\nAll right, so\nwhat is going on in the background?\n\n354\n00:18:39.013 --> 00:18:43.344\nIf I'm on router five and\nI try and ping 192.168.3.1, so\n\n355\n00:18:43.344 --> 00:18:45.591\nthat's the other router, right.\n\n356\n00:18:45.591 --> 00:18:48.350\nYou did, 3.2 is me, so\nthat's me pinging myself.\n\n357\n00:18:48.350 --> 00:18:50.080\nAnd 3.1 is the other router.\n\n358\n00:18:50.080 --> 00:18:51.730\nOkay, so I'm able to ping them both.\n\n359\n00:18:53.220 --> 00:18:54.680\nHow is that working?\n\n360\n00:18:54.680 --> 00:18:59.374\nWell, ppp is an encapsulation technology.\n\n361\n00:18:59.374 --> 00:19:02.450\nAnd so what it's doing is it's\ntaking my IP packet, right.\n\n362\n00:19:02.450 --> 00:19:05.958\nMy IP packet Is gonna normally be\nput into an ethernet frame and\n\n363\n00:19:05.958 --> 00:19:08.120\nthen thrown on the network.\n\n364\n00:19:08.120 --> 00:19:11.020\nSo at layer two it becomes and\nethernet frame that's a certain size,\n\n365\n00:19:11.020 --> 00:19:13.070\ngot an MTU size of 1,500 bytes or\nwhatever, so\n\n366\n00:19:13.070 --> 00:19:16.510\nit blocks stuff like that, it sticks\nCRCs on it, throws it online, right?\n\n367\n00:19:16.510 --> 00:19:21.010\nAnd when it goes over ethernet,\nwhen it's going over RJ45 jacks and\n\n368\n00:19:21.010 --> 00:19:23.330\nCAT6 cabling or whatever,\n\n369\n00:19:23.330 --> 00:19:27.980\nit has a certain frequency that it runs\non, a method of going across that line.\n\n370\n00:19:29.120 --> 00:19:32.950\nBut when you cross a serial line,\nit's different.\n\n371\n00:19:32.950 --> 00:19:34.600\nIt's a different way of communicating.\n\n372\n00:19:34.600 --> 00:19:36.970\nWe don't have eight wires,\nnow we have two wires in a pair.\n\n373\n00:19:36.970 --> 00:19:40.710\nYou have a send and a receive line and you\nhave all these flow control options and\n\n374\n00:19:40.710 --> 00:19:43.270\nall these different\nthings that are different\n\n375\n00:19:43.270 --> 00:19:45.640\nthan what we expect our traffic to go in.\n\n376\n00:19:45.640 --> 00:19:51.250\nSo what happens is the router will take\nour traffic, take our regular IP traffic\n\n377\n00:19:51.250 --> 00:19:57.390\nand it will wrap it up, it will\nencapsulate it inside of ppp's format.\n\n378\n00:19:57.390 --> 00:20:00.550\nAnd ppp's format is designed\nto go over serial lines.\n\n379\n00:20:00.550 --> 00:20:02.920\nAnd it's gonna cross that serial\nline to the other side and\n\n380\n00:20:02.920 --> 00:20:07.190\nthen the side it's gonna unwrap it and\nnow you've got\n\n381\n00:20:07.190 --> 00:20:12.080\nthe regular packet that's ready to be\nthrown onto the network on the other side.\n\n382\n00:20:12.080 --> 00:20:13.430\nSo PPP is temporary.\n\n383\n00:20:13.430 --> 00:20:16.335\nIt's really only used as\nwe cross that one link.\n\n384\n00:20:16.335 --> 00:20:21.170\nSo going back to my topology, if I have\na packet that's coming from router six,\n\n385\n00:20:21.170 --> 00:20:24.868\nthen it's just regular old\nethernet over here to router 5.\n\n386\n00:20:24.868 --> 00:20:28.972\nRouter five wraps it up in PPP and\ncrosses over this serial line,\n\n387\n00:20:28.972 --> 00:20:33.533\nrouter three unwraps it from PPP and\nit becomes regular old ethernet and\n\n388\n00:20:33.533 --> 00:20:36.110\ngets thrown across this link here.\n\n389\n00:20:36.110 --> 00:20:40.190\nSo it's just temporary,\nit's just to get us across that link.\n\n390\n00:20:40.190 --> 00:20:42.948\nThe hosts that communicate\nhave no idea that happened.\n\n391\n00:20:42.948 --> 00:20:46.377\nThey never realized they switched from\nethernet to ppp back to ethernet or\n\n392\n00:20:46.377 --> 00:20:48.711\nwhatever, they don't\nknow that's occurring.\n\n393\n00:20:48.711 --> 00:20:52.440\nIt's all invisible to them and\nthey're able to communicate across.\n\n394\n00:20:52.440 --> 00:20:56.730\n&gt;&gt; And this is all for the purposes for us\nto be able to take advantage of the least\n\n395\n00:20:56.730 --> 00:21:01.550\nline using ppp, we are segregated\noff from the rest of the Internet.\n\n396\n00:21:01.550 --> 00:21:03.804\n&gt;&gt; That's exactly it, yeah,\nand ppp is an open standard.\n\n397\n00:21:03.804 --> 00:21:07.839\nSo Cisco, Juniper, 3Com, HP, whatever,\nall those guys support it and\n\n398\n00:21:07.839 --> 00:21:11.491\nthat means it doesn't matter to\nus what equipment's on both ends,\n\n399\n00:21:11.491 --> 00:21:15.162\nwe can get a standard communication\nacross and it's going to work.\n\n400\n00:21:15.162 --> 00:21:18.570\nAll right, now the neat thing about PPP is\nonce we get it turned on, it's gotta a lot\n\n401\n00:21:18.570 --> 00:21:21.834\nof other bells and whistles that we can\nconfigure and, I'm looking at the clock\n\n402\n00:21:21.834 --> 00:21:25.140\nhere to figure out how many of these\nbells and whistles I can get through.\n\n403\n00:21:25.140 --> 00:21:27.340\nSo, things like authentication.\n\n404\n00:21:27.340 --> 00:21:30.580\nIf I wanna do a username and password on\nthis link, now if it's a point to point\n\n405\n00:21:30.580 --> 00:21:35.650\nlink, it is a cable that is run from my\nbuilding right to another building or\n\n406\n00:21:35.650 --> 00:21:39.240\nanother city but\nI control both ends of that cable,\n\n407\n00:21:39.240 --> 00:21:41.920\ndo I really need a username and\na password for that?\n\n408\n00:21:41.920 --> 00:21:43.225\nNot really.\n\n409\n00:21:43.225 --> 00:21:44.586\nIt's point to point.\n\n410\n00:21:44.586 --> 00:21:45.737\nNobody can take over that line.\n\n411\n00:21:45.737 --> 00:21:49.048\nThey'd have to have physical access to\nmy equipment to swap out whatever's on\n\n412\n00:21:49.048 --> 00:21:49.757\nthe other side.\n\n413\n00:21:49.757 --> 00:21:51.795\nAnd so that's a bigger breach\nto having to worry about-\n\n414\n00:21:51.795 --> 00:21:53.344\n&gt;&gt; [CROSSTALK] That's somebody that really\n\n415\n00:21:53.344 --> 00:21:54.352\nwants your data, right?\n\n416\n00:21:54.352 --> 00:21:55.100\n[LAUGH]\n&gt;&gt; Yeah, and\n\n417\n00:21:55.100 --> 00:21:57.483\nthey're well beyond the point\nof causing that danger.\n\n418\n00:21:57.483 --> 00:21:59.250\nSo there's not much we\ncan worry about there.\n\n419\n00:21:59.250 --> 00:22:00.657\nSo setting username and\n\n420\n00:22:00.657 --> 00:22:04.613\npassword is certainly not required\non a dedicated line like this.\n\n421\n00:22:04.613 --> 00:22:08.400\nBut what if it were a temporary line,\na dialer, one that comes up and\n\n422\n00:22:08.400 --> 00:22:10.240\ngoes down, right,\none that's used on demand?\n\n423\n00:22:10.240 --> 00:22:14.530\nIf it's on demand, other people could\nconnect, and we saw this with modems,\n\n424\n00:22:14.530 --> 00:22:18.638\nregular telephone modems where you dial\nup and hang up and that those ways.\n\n425\n00:22:18.638 --> 00:22:20.640\nISDN, the old digital telephone line.\n\n426\n00:22:20.640 --> 00:22:22.558\nSame thing there,\nthey come up and they go down and\n\n427\n00:22:22.558 --> 00:22:24.804\nyou really want to have a username and\na password on those.\n\n428\n00:22:24.804 --> 00:22:26.551\nSo that's another feature\nthat we can configure.\n\n429\n00:22:26.551 --> 00:22:28.259\nAll right, so let's take a look\nat how this works, right?\n\n430\n00:22:28.259 --> 00:22:31.832\nI'm gonna started here on router three and\n\n431\n00:22:31.832 --> 00:22:37.920\nbasically what I wanna do is I want\nto get that link right here, s3/0.\n\n432\n00:22:37.920 --> 00:22:41.041\nI wanna get that authenticating\nbetween these two systems.\n\n433\n00:22:41.041 --> 00:22:44.354\nAnd once that's in business, then we'll\nbe nice and secure and safe just in case\n\n434\n00:22:44.354 --> 00:22:47.488\nsomebody goes and snags the cable out of\nour router and tries to take it over.\n\n435\n00:22:47.488 --> 00:22:53.158\nSo the first thing I need to do is I\nneed to get the user account setup.\n\n436\n00:22:53.158 --> 00:22:56.470\nWhen router three goes to\nauthenticate against router five,\n\n437\n00:22:56.470 --> 00:23:01.040\nit's gonna send its host name, R3,\nas the username to the other side,\n\n438\n00:23:01.040 --> 00:23:05.020\nand the other router's gonna\nsend its host name to us.\n\n439\n00:23:05.020 --> 00:23:07.667\nSo my routers are named R3 and R5.\n\n440\n00:23:07.667 --> 00:23:11.590\nI need to create user accounts for\neach of them on the opposite router.\n\n441\n00:23:11.590 --> 00:23:17.000\nSo here on router three, I need to\ncreate a username for router five.\n\n442\n00:23:17.000 --> 00:23:20.700\nAnd be careful with this because\nit needs to be the same case.\n\n443\n00:23:20.700 --> 00:23:24.087\nSo I capitalize the R in\nthe host name of router five.\n\n444\n00:23:24.087 --> 00:23:27.255\nAnd so here on router three, I need to\nmake sure I use it with the same case.\n\n445\n00:23:27.255 --> 00:23:28.259\nIt is case sensitive.\n\n446\n00:23:28.259 --> 00:23:32.898\nSo I'm gonna say username R5 and\nthen I'm gonna set the password, and\n\n447\n00:23:32.898 --> 00:23:36.080\nI'm just gonna make the password cisco123.\n\n448\n00:23:36.080 --> 00:23:40.660\nNow, quick little caveat, something we\nfound out [LAUGH] just before the show\n\n449\n00:23:40.660 --> 00:23:43.770\nis that if you do a secret here,\nit actually doesn't support that,\n\n450\n00:23:43.770 --> 00:23:46.720\nit breaks chap and so\nit won't build the connection up.\n\n451\n00:23:46.720 --> 00:23:49.430\nSo I know we have a habit of\nusing the secret command so\n\n452\n00:23:49.430 --> 00:23:53.340\nit's an MD5 hash password, but\nhere we just have to use password.\n\n453\n00:23:53.340 --> 00:23:57.280\nWhich means you can do the type seven\npassword encryption if you want, but\n\n454\n00:23:57.280 --> 00:24:00.410\notherwise it's really not\na secure form of encryption.\n\n455\n00:24:00.410 --> 00:24:03.043\nI'm still not too worried about that\nbecause this is a point-to-point link.\n\n456\n00:24:03.043 --> 00:24:05.650\nSomebody would have to have\nphysical access to exploit that.\n\n457\n00:24:05.650 --> 00:24:09.318\nSo if they got ahold of my config, I have\nother problems beyond just them knowing\n\n458\n00:24:09.318 --> 00:24:11.476\nthe password of this point-to-point link.\n\n459\n00:24:11.476 --> 00:24:12.161\nAll right, so\n\n460\n00:24:12.161 --> 00:24:15.830\nI'm gonna create that username and\nthen I'm gonna get into the interface.\n\n461\n00:24:15.830 --> 00:24:18.073\nInt s3/0, all right.\n\n462\n00:24:18.073 --> 00:24:22.785\nAnd I'm gonna issue a really\nstraightforward command #ppp\n\n463\n00:24:22.785 --> 00:24:25.450\nauthentication chap.\n\n464\n00:24:25.450 --> 00:24:27.831\nNow, chap isn't the only\nauthentication protocol.\n\n465\n00:24:27.831 --> 00:24:29.350\nI mentioned pap earlier.\n\n466\n00:24:29.350 --> 00:24:32.003\nIf you do a question mark,\nI can see where I can turn on chap.\n\n467\n00:24:32.003 --> 00:24:36.050\nI can turn on pap and\nthen there's eap and ms-chap also.\n\n468\n00:24:36.050 --> 00:24:37.517\nSo, they support a couple\nof different ones.\n\n469\n00:24:37.517 --> 00:24:41.003\nDepending on your router, you may have\nall these or you may only have chap and\n\n470\n00:24:41.003 --> 00:24:42.220\npap and that's it.\n\n471\n00:24:42.220 --> 00:24:43.750\nBut we picked the one that we want and\n\n472\n00:24:43.750 --> 00:24:46.356\nthe one that's on the exam is chap so\nI'm gonna turn that on.\n\n473\n00:24:46.356 --> 00:24:51.318\nNow as soon as I do that, I'm now\nexpecting the person on the other end of\n\n474\n00:24:51.318 --> 00:24:54.570\nthis link to authenticate against me.\n\n475\n00:24:54.570 --> 00:24:58.375\nAnd if they don't, it's gonna fail and\nI'm gonna take the line down.\n\n476\n00:24:58.375 --> 00:25:00.590\nNow, I don't remember if I\nleft my line up or down.\n\n477\n00:25:00.590 --> 00:25:03.846\nSo I'm gonna #do a show IP\ninterface peripheral quick and\n\n478\n00:25:03.846 --> 00:25:06.979\njust take a look at serial3/0,\nit is up, all right.\n\n479\n00:25:06.979 --> 00:25:09.890\nAnd the line is not going down.\n\n480\n00:25:09.890 --> 00:25:10.829\nIt's staying up.\n\n481\n00:25:10.829 --> 00:25:11.935\nWhy is that?\n\n482\n00:25:11.935 --> 00:25:14.490\nWell, it's gonna be one of\na few different scenarios.\n\n483\n00:25:14.490 --> 00:25:18.903\nBut typically, authentication\nhappens when the line comes up.\n\n484\n00:25:18.903 --> 00:25:20.830\nThis line is already up.\n\n485\n00:25:20.830 --> 00:25:22.532\nAnd so, authentication may not happen.\n\n486\n00:25:22.532 --> 00:25:25.240\nSo, we may need to reset the line\nbefore that takes effect.\n\n487\n00:25:25.240 --> 00:25:27.565\nThe other thing is it could be\nin the process of it going down,\n\n488\n00:25:27.565 --> 00:25:28.899\nwhich we can see that pretty easy.\n\n489\n00:25:28.899 --> 00:25:33.675\nIf I do a show int s3/0,\nwhen I take a look at the interface\n\n490\n00:25:33.675 --> 00:25:39.070\nwhat you may see that LCP says\neither stopping or closing.\n\n491\n00:25:39.070 --> 00:25:42.047\nIf it's the person that initiated the\nconnection and authentication is failing,\n\n492\n00:25:42.047 --> 00:25:43.033\nthen it'll say stopping.\n\n493\n00:25:43.033 --> 00:25:45.180\nIf it's the person receiving\nthe connection and\n\n494\n00:25:45.180 --> 00:25:47.545\nit's failing then it's gonna say closing,\nright?\n\n495\n00:25:47.545 --> 00:25:48.490\nIt's shutting it down.\n\n496\n00:25:48.490 --> 00:25:50.197\nSo in my case, I see it's open.\n\n497\n00:25:50.197 --> 00:25:52.520\nWe've already passed\nthe stage of authentication.\n\n498\n00:25:52.520 --> 00:25:53.650\nThe link was already up.\n\n499\n00:25:53.650 --> 00:25:56.394\nSo if I wanna see it\nactually authenticate,\n\n500\n00:25:56.394 --> 00:25:59.070\nI just need to do a shutdown.\n\n501\n00:25:59.070 --> 00:26:01.800\nSo that line goes down,\nI'll wait a second for that to go down.\n\n502\n00:26:01.800 --> 00:26:03.064\nThat's the neighbor change.\n\n503\n00:26:03.064 --> 00:26:05.990\nThat's what I was waiting on,\nthe actual interface goes down.\n\n504\n00:26:05.990 --> 00:26:09.235\nAnd remember,\nwhen you a show ip interface brief,\n\n505\n00:26:09.235 --> 00:26:13.471\nthe status of the links,\nthere's two columns over here, right?\n\n506\n00:26:13.471 --> 00:26:16.500\nThere's status and protocol.\n\n507\n00:26:16.500 --> 00:26:21.942\nRemember that the status, that's\nthe layer one, the physical interface.\n\n508\n00:26:21.942 --> 00:26:24.450\nAnd the protocol, that's layer two.\n\n509\n00:26:24.450 --> 00:26:27.461\nSo the physical interface as long as I\nhave a link light that's gonna say up\n\n510\n00:26:27.461 --> 00:26:29.503\notherwise, it will say\nadministratively down or\n\n511\n00:26:29.503 --> 00:26:31.221\nif it's unplugged it'll just say down.\n\n512\n00:26:31.221 --> 00:26:33.360\nMine's administratively down, right?\n\n513\n00:26:33.360 --> 00:26:35.758\nAnd then the protocol that's ppp.\n\n514\n00:26:35.758 --> 00:26:38.428\nSo it's possible my interface\ncould be up but ppp could be down,\n\n515\n00:26:38.428 --> 00:26:41.400\nwhich is what would happen if\nauthentication was failing.\n\n516\n00:26:41.400 --> 00:26:46.164\nSo if I come over here and do a no shut\ndown, the link is gonna try and come up.\n\n517\n00:26:46.164 --> 00:26:50.080\nAnd I'm telling it to\ndo chap authentication.\n\n518\n00:26:50.080 --> 00:26:51.829\nSo, the line's gonna come up.\n\n519\n00:26:51.829 --> 00:26:55.051\nThere it goes up and it's trying\nto authenticate in the background.\n\n520\n00:26:55.051 --> 00:26:58.110\nAnd the authentication should be failing,\nright?\n\n521\n00:26:58.110 --> 00:26:59.760\nWe certainly hope that it is failing.\n\n522\n00:26:59.760 --> 00:27:03.950\nAnd so, when it fails,\nthe link will then go down.\n\n523\n00:27:03.950 --> 00:27:09.153\nAnd if you wanna see that process happen,\nyou can #do a debug ppp authentication,\n\n524\n00:27:09.153 --> 00:27:13.858\nand you'll see the authentication\nprocess happening in the background.\n\n525\n00:27:13.858 --> 00:27:15.941\nAnd when it does,\nyou're gonna see messages like these.\n\n526\n00:27:15.941 --> 00:27:20.240\nSee how it's got an O, there it's going\ntoo fast, that O, that's an output.\n\n527\n00:27:20.240 --> 00:27:22.336\nThat means I'm sending a challenge and\n\n528\n00:27:22.336 --> 00:27:25.445\nthen I should see an i and\ninput where I get a response back or\n\n529\n00:27:25.445 --> 00:27:29.337\na challenge from the other side cuz\na chap is a two way challenge, right?\n\n530\n00:27:29.337 --> 00:27:30.800\nSo, I should get\na challenge back from them.\n\n531\n00:27:30.800 --> 00:27:35.021\nI'm outputting a challenge and that's it,\nI'm not getting anything back from\n\n532\n00:27:35.021 --> 00:27:39.426\nthe other side and so I'm outputting from\nR3 am not getting anything back from R5 so\n\n533\n00:27:39.426 --> 00:27:41.870\nthis session is gonna go\ndown here in a moment.\n\n534\n00:27:41.870 --> 00:27:42.874\nAnd it's not going to work.\n\n535\n00:27:42.874 --> 00:27:48.319\nSo let me turn off debug cause otherwise,\nmy screen is gonna fill up with junk and\n\n536\n00:27:48.319 --> 00:27:52.320\nif I do a show interface serial 3/0 and\nlook at it.\n\n537\n00:27:52.320 --> 00:27:54.480\nSee, how my LCP is stopping.\n\n538\n00:27:54.480 --> 00:27:59.105\nMy link control protocol, I can't build an\nauthenticated session with the other side,\n\n539\n00:27:59.105 --> 00:28:01.100\nso I'm gonna stop the session.\n\n540\n00:28:01.100 --> 00:28:02.047\nBut it's gonna keep trying.\n\n541\n00:28:02.047 --> 00:28:04.150\nIt'll keep trying over and\nover again to authenticate.\n\n542\n00:28:04.150 --> 00:28:07.318\nAs long as I leave that line up,\nit's gonna keep trying, all right.\n\n543\n00:28:07.318 --> 00:28:13.596\nSo let me turn that debug back on, And\nI'm gonna jump over to the other side and\n\n544\n00:28:13.596 --> 00:28:16.640\nwe'll get the other side\nconfigured to make this happy.\n\n545\n00:28:16.640 --> 00:28:20.546\nSo on router five, I'm basically gonna\nrepeat the same thing, all right.\n\n546\n00:28:20.546 --> 00:28:24.130\nLooks like I left some debugs on here,\nso let me get those turned off.\n\n547\n00:28:24.130 --> 00:28:26.734\nAll right, so on router five,\nI'm gonna run to the same process.\n\n548\n00:28:26.734 --> 00:28:31.461\nI'm gonna jump into my configuration and\nI'm gonna say #username R3 and\n\n549\n00:28:31.461 --> 00:28:34.310\ncreate the user name for the other side.\n\n550\n00:28:34.310 --> 00:28:37.351\nNow when we do our exchange,\nwe expect our passwords to match.\n\n551\n00:28:37.351 --> 00:28:38.610\nIt's a challenge, right?\n\n552\n00:28:38.610 --> 00:28:40.341\nWe're going to hash\nthe password we have stored and\n\n553\n00:28:40.341 --> 00:28:41.635\ncompare it to what we're being sent.\n\n554\n00:28:41.635 --> 00:28:47.610\nSo I need to come in here, and\nsay the same exact password, all right.\n\n555\n00:28:47.610 --> 00:28:50.569\nThere is a way where we can use\ndifferent passwords on each side.\n\n556\n00:28:50.569 --> 00:28:53.180\nWe covered that in the CCNA security show.\n\n557\n00:28:53.180 --> 00:28:55.458\nBut you can jump in and\noverride this on the interface.\n\n558\n00:28:55.458 --> 00:28:56.939\nSo, I'll show you the command just so\nyou know about it.\n\n559\n00:28:56.939 --> 00:29:00.550\nBut normally, we're gonna have it\nmatch just like this, all right.\n\n560\n00:29:00.550 --> 00:29:05.061\nAnd so now I've gotta use name created for\nthat account, right?\n\n561\n00:29:05.061 --> 00:29:08.575\nAnd I need to jump int s3/0.\n\n562\n00:29:08.575 --> 00:29:15.100\nAnd in that interface I need to\nsay #ppp authentication chap.\n\n563\n00:29:15.100 --> 00:29:19.259\nI've got a user account for router three\nand now I'm doing challenge handshake and\n\n564\n00:29:19.259 --> 00:29:20.338\nlook what happened.\n\n565\n00:29:20.338 --> 00:29:24.639\nAs soon as I ran that,\nmy interface changed state to down and\n\n566\n00:29:24.639 --> 00:29:27.390\nthen changed state to up.\n\n567\n00:29:27.390 --> 00:29:29.287\nMy interface reset, right?\n\n568\n00:29:29.287 --> 00:29:33.990\nAnd once it came up, it didn't just\ncome up, it built an EIGRP relationship.\n\n569\n00:29:33.990 --> 00:29:37.983\nI'm able to communicate with the other\nside, so EIRGP is communicating now and\n\n570\n00:29:37.983 --> 00:29:39.662\nthe interface is up and running.\n\n571\n00:29:39.662 --> 00:29:47.226\nIf I do a show int s3/0 and I take\na look at its status right now, PPP.\n\n572\n00:29:47.226 --> 00:29:51.765\nLCP is open, the connection is up,\nIPCP, CDPCP, they're all running,\n\n573\n00:29:51.765 --> 00:29:54.740\nwe're communicating across that line.\n\n574\n00:29:54.740 --> 00:29:57.978\nEverything as far as the router\nis concerned is happening, right?\n\n575\n00:29:57.978 --> 00:29:59.580\nAnd I should be able to ping across it.\n\n576\n00:29:59.580 --> 00:30:02.800\nIf I ping 3.1, what's the other side,\n\n577\n00:30:02.800 --> 00:30:07.641\nit was 3.2, I can ping both of those but\nlink appears to be up.\n\n578\n00:30:07.641 --> 00:30:10.994\nAnd if I do a show arp and\nlook at my arp table,\n\n579\n00:30:10.994 --> 00:30:15.390\nI don't have an arp entry for 192.168.3.1.\n\n580\n00:30:15.390 --> 00:30:17.161\nNormally, anytime you ping somebody,\n\n581\n00:30:17.161 --> 00:30:20.711\nyou're gonna have an arp entry that stores\ntheir MAC address mapped to their IP.\n\n582\n00:30:20.711 --> 00:30:22.970\nWe don't have MAC addresses\non the serial line.\n\n583\n00:30:22.970 --> 00:30:27.911\nAnd so, I don't have a MAC address to map,\nit wasn't arp that found it It was IPCP\n\n584\n00:30:27.911 --> 00:30:32.002\nand LCP that let us reach out across\nthat ppp line and communicate.\n\n585\n00:30:32.002 --> 00:30:33.840\nI'm gonna just jam as many acronyms-\n&gt;&gt; Yeah [LAUGH].\n\n586\n00:30:33.840 --> 00:30:34.773\n&gt;&gt; In one sentence.\n\n587\n00:30:34.773 --> 00:30:36.610\nSo, it is up and running.\n\n588\n00:30:36.610 --> 00:30:39.879\nIf I jump over to router three,\nI can see the end of the negotiation.\n\n589\n00:30:39.879 --> 00:30:42.702\nNow a moment ago this was scrolling\nby over and over and over and\n\n590\n00:30:42.702 --> 00:30:43.990\nover again, right?\n\n591\n00:30:43.990 --> 00:30:47.340\nBut as soon as I configure the other side,\ninstead of just sending a challenge,\n\n592\n00:30:47.340 --> 00:30:48.243\nlook what happened.\n\n593\n00:30:48.243 --> 00:30:50.520\nHere's where I configured it.\n\n594\n00:30:50.520 --> 00:30:52.833\nAnd so\nyou can see using default call direction,\n\n595\n00:30:52.833 --> 00:30:56.399\ntreating connection as a dedicated line,\nit's serial is point to point.\n\n596\n00:30:56.399 --> 00:30:58.570\nIt's got a session handle for this ID.\n\n597\n00:30:58.570 --> 00:31:00.870\nThis is my 432nd attempt, right.\n\n598\n00:31:00.870 --> 00:31:03.308\nThat's why it said just keep\ntrying over and over and over.\n\n599\n00:31:03.308 --> 00:31:10.100\nI sent a challenge from router three and\nI got an input, a response from Meta5.\n\n600\n00:31:10.100 --> 00:31:14.605\nI sent a CHAP LOGIN Request saying,\nhey, I need you to send me a hash,\n\n601\n00:31:14.605 --> 00:31:16.181\nand they sent me a hash.\n\n602\n00:31:16.181 --> 00:31:18.993\nAnd I looked at it and\ncompared it to my hash and\n\n603\n00:31:18.993 --> 00:31:21.960\nthey matched and so\nI responded with a pass.\n\n604\n00:31:21.960 --> 00:31:23.828\nEverything is good,\nlet's bring this line up.\n\n605\n00:31:23.828 --> 00:31:27.283\nAnd that's the success that\nI output right there, and\n\n606\n00:31:27.283 --> 00:31:32.180\nthen immediately after that, is where\nwe can see the line came up and online.\n\n607\n00:31:32.180 --> 00:31:34.548\nSo there it is,\nwe're able to communicate and\n\n608\n00:31:34.548 --> 00:31:38.386\neverything's functioning the way that it,\nin theory, should, right?\n\n609\n00:31:38.386 --> 00:31:41.228\nSo everything's good,\nit looks like we're up, and\n\n610\n00:31:41.228 --> 00:31:43.760\nwhoops, that's not exactly what I wanted.\n\n611\n00:31:43.760 --> 00:31:44.315\nThere we go.\n\n612\n00:31:44.315 --> 00:31:48.527\nAnd so\nnow if I do a show IP interface brief,\n\n613\n00:31:48.527 --> 00:31:54.033\nI can see that Serial3/0 is up and\nthe protocol is up.\n\n614\n00:31:54.033 --> 00:31:58.758\nNow, if I were to jump in here and\nsay username,\n\n615\n00:31:58.758 --> 00:32:02.784\nlet me just do it like #no username R5.\n\n616\n00:32:02.784 --> 00:32:06.477\nAnd I'm gonna recreate R5 And\nI'm gonna say,\n\n617\n00:32:06.477 --> 00:32:11.450\npassword cisco321,\nall right the wrong password.\n\n618\n00:32:11.450 --> 00:32:12.880\nSo now I've got the wrong password.\n\n619\n00:32:14.140 --> 00:32:15.020\nWhat happens on the router?\n\n620\n00:32:16.130 --> 00:32:18.588\nNothing, authentication\nhas already occurred,\n\n621\n00:32:18.588 --> 00:32:21.650\nauthentication occurred\nwhen the line came up.\n\n622\n00:32:21.650 --> 00:32:24.450\nIt doesn't occur again\nuntil the line goes down.\n\n623\n00:32:24.450 --> 00:32:25.860\nIf I go and shut the line down and\n\n624\n00:32:25.860 --> 00:32:29.600\nturn it back on again it's gonna restart\nand then we're gonna see authentication.\n\n625\n00:32:29.600 --> 00:32:31.534\nBut once authentication is done,\n\n626\n00:32:31.534 --> 00:32:34.140\neverything else on\nthe line runs like normal.\n\n627\n00:32:34.140 --> 00:32:37.390\nSo it's really a one time thing and\nthen every time the line resets.\n\n628\n00:32:37.390 --> 00:32:40.250\nSo, I'm gonna create that environment\nhere just so you guys can see it.\n\n629\n00:32:40.250 --> 00:32:44.270\nI'm gonna shut that link down,\nso it's gonna stop, right?\n\n630\n00:32:44.270 --> 00:32:48.210\nAnd I'll see my EIGRP neighbor falls,\nmy link falls, right?\n\n631\n00:32:48.210 --> 00:32:49.830\nSo everything's good there.\n\n632\n00:32:49.830 --> 00:32:52.290\nWell, it's going to be when things fall.\n\n633\n00:32:52.290 --> 00:32:55.650\nAnd then I'll just do a no shut down and\nwe'll see the authentication kick in.\n\n634\n00:32:55.650 --> 00:32:59.370\nAnd this time the passwords don't match,\nright?\n\n635\n00:32:59.370 --> 00:33:03.000\nAnd so let me turn off the debug so\nit doesn't go too crazy.\n\n636\n00:33:03.000 --> 00:33:07.050\nAnd so we can see how it's trying to\nsend and receive the password, right?\n\n637\n00:33:07.050 --> 00:33:08.540\nAnd it's sending it along and\nit's failing.\n\n638\n00:33:08.540 --> 00:33:10.300\nAnd see these two entries here?\n\n639\n00:33:10.300 --> 00:33:13.700\nThe first one using hostname\nfrom configured hostname.\n\n640\n00:33:13.700 --> 00:33:15.360\nUsing password from AAA, right?\n\n641\n00:33:15.360 --> 00:33:17.200\nSo it's using it from that account and\n\n642\n00:33:17.200 --> 00:33:20.870\nit's trying to authenticate and\nit's failing.\n\n643\n00:33:20.870 --> 00:33:22.550\nThere it is, login response fail.\n\n644\n00:33:22.550 --> 00:33:23.910\nThat link is not coming up.\n\n645\n00:33:23.910 --> 00:33:27.530\nAnd when you have a failure,\nwhen you do show ip interface brief.\n\n646\n00:33:29.230 --> 00:33:32.499\nAnd let me just get the three\nsize zero interface,\n\n647\n00:33:32.499 --> 00:33:36.540\nall right and what you're gonna\nsee is a status of up, down.\n\n648\n00:33:36.540 --> 00:33:39.910\nUp, the physical interface\nhas a link line.\n\n649\n00:33:39.910 --> 00:33:43.750\nDown we couldn't negotiate a password and\nso the link stays down, all right?\n\n650\n00:33:43.750 --> 00:33:45.760\nSo that's the way\nauthentication works on these.\n\n651\n00:33:45.760 --> 00:33:47.700\nIt's pretty straightforward, pretty easy.\n\n652\n00:33:47.700 --> 00:33:49.600\nAt the end of the day it was\nreally just two commands, right?\n\n653\n00:33:49.600 --> 00:33:51.830\nLet me go over to the router\nthat's not broken.\n\n654\n00:33:51.830 --> 00:33:56.460\nSo [LAUGH] on R5 if we take a look\nat the two commands that I issued\n\n655\n00:33:56.460 --> 00:34:01.050\nall it was was on the interface.\n\n656\n00:34:01.050 --> 00:34:03.290\nShoot I'm not in config so\nI don't need to do.\n\n657\n00:34:03.290 --> 00:34:07.180\nOn the interface,\nwe said encapsulation ppp and\n\n658\n00:34:07.180 --> 00:34:10.270\nthen, we said ppp authentication chap.\n\n659\n00:34:10.270 --> 00:34:16.610\nAnd the only other thing we had\nto do was to create the username.\n\n660\n00:34:16.610 --> 00:34:19.480\nAnd so we created the username and\nused that password command got it setup.\n\n661\n00:34:19.480 --> 00:34:21.920\nAnd so really simple, right?\n\n662\n00:34:21.920 --> 00:34:24.100\nTechnically, it was this line.\n\n663\n00:34:24.100 --> 00:34:26.770\nMy scrolling abilities\nare just outstanding.\n\n664\n00:34:26.770 --> 00:34:29.430\nSo technically it was\nthis line right here.\n\n665\n00:34:29.430 --> 00:34:35.280\nPpp authentication chap and the username\ncommand that actually got in there and\n\n666\n00:34:35.280 --> 00:34:38.950\ngot that set for us so that we could\nget that authentication turned on.\n\n667\n00:34:38.950 --> 00:34:41.770\nPretty straightforward there,\nnow we're a little more secure.\n\n668\n00:34:41.770 --> 00:34:45.770\n&gt;&gt; All right, Don, well, ppp obviously is\na nice thing for us to be able to use.\n\n669\n00:34:45.770 --> 00:34:49.280\nYou've done a great job of showing us how\nthat we can implement that, maybe we're\n\n670\n00:34:49.280 --> 00:34:53.650\nusing that least serial line, they do have\ntheir place still in today's society, so\n\n671\n00:34:53.650 --> 00:34:55.220\ndon't think that you might\nnot run into it, and\n\n672\n00:34:55.220 --> 00:34:57.380\nguess what,\nCisco wants you to know for the exam.\n\n673\n00:34:57.380 --> 00:34:58.410\nSo if for\n\n674\n00:34:58.410 --> 00:35:02.290\nthat very reason alone, definitely\nspend some time with whatever you got.\n\n675\n00:35:02.290 --> 00:35:06.710\nYou got simulators or rag time or\nwhatever you're using to work with this.\n\n676\n00:35:06.710 --> 00:35:09.270\nPlay around with this, make sure\nyou got that underneath your belt.\n\n677\n00:35:09.270 --> 00:35:09.840\nThat being said,\n\n678\n00:35:09.840 --> 00:35:13.630\nDon, I know this is not the bottom of\nyour bag of tricks when it comes to ppp.\n\n679\n00:35:13.630 --> 00:35:17.780\nBut we're blown on time, time is gone.\n\n680\n00:35:17.780 --> 00:35:19.430\n[LAUGH]\n&gt;&gt; We do have a little bit more to get to.\n\n681\n00:35:19.430 --> 00:35:22.690\nWe have ppp multilink and\nppp OE that we need to tackle.\n\n682\n00:35:22.690 --> 00:35:23.490\nSo let's do a part two.\n\n683\n00:35:23.490 --> 00:35:25.830\nWe'll come back with a little\nbit more ppp action and\n\n684\n00:35:25.830 --> 00:35:28.780\nthen we'll round it up after that so\nstay tuned for that certainly.\n\n685\n00:35:28.780 --> 00:35:29.950\n&gt;&gt; All right, looking forward to that,\n\n686\n00:35:29.950 --> 00:35:31.850\nlooking forward to seeing\nyou guys there as well.\n\n687\n00:35:31.850 --> 00:35:34.200\nBut as for this episode,\nwe're gonna go ahead and close it down.\n\n688\n00:35:34.200 --> 00:35:37.416\nSigning off for ITPro.TV,\nI've been your host, Daniel Lowrie.\n\n689\n00:35:37.416 --> 00:35:38.097\n&gt;&gt; And I'm Don Pezet.\n\n690\n00:35:38.097 --> 00:35:38.788\n&gt;&gt; We'll see you next time.\n\n691\n00:35:38.788 --> 00:35:44.154\n[MUSIC]\n\n692\n00:35:44.154 --> 00:35:54.154\n[NOISE]\n\n",
          "vimeoId": "181122651"
        },
        {
          "description": "In this episode, Daniel and Don continue their discussion of the Point-to-Point Protocol, this time taking you step-by-step through setting up PPP for a multilink environment. This will allow you to aggregate the bandwidth of multiple connections in real-time.",
          "length": "2007",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/cisco-ccna200105/cisco-ccna200105-3-1-2-ppp_pt2-082616-1.jpg",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/cisco-ccna200105/cisco-ccna200105-3-1-2-ppp_pt2-082616-1-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/cisco-ccna200105/cisco-ccna200105-3-1-2-ppp_pt2-082616-1-sm.jpg",
          "title": "Point-to-Point Protocol (PPP) Part 2",
          "transcript": "WEBVTT\n\n1\n00:00:00.000 --> 00:00:10.000\n[MUSIC]\n\n2\n00:00:12.218 --> 00:00:16.572\nAll right, greetings everyone, and welcome\nto another exciting episode of ITProTV.\n\n3\n00:00:16.572 --> 00:00:19.405\nI'm your host, Daniel Lowrie,\nand in today's episode, well,\n\n4\n00:00:19.405 --> 00:00:23.012\nwe're continuing on with more on our\nCCNA Routing and Switching Series.\n\n5\n00:00:23.012 --> 00:00:27.709\nJoining me back in Thunderdome today, the\nman crazy enough to crawl back in the cage\n\n6\n00:00:27.709 --> 00:00:31.090\nwith us good people,\nit's our good friend Mr. Don Pezet.\n\n7\n00:00:31.090 --> 00:00:32.220\nDon, welcome back sir.\n\n8\n00:00:32.220 --> 00:00:35.133\n&gt;&gt; Thanks for having me back Daniel after\nletting me ramble me on way too long about\n\n9\n00:00:35.133 --> 00:00:36.072\nPPP in the last episode.\n\n10\n00:00:36.072 --> 00:00:39.321\nSo long that we are here for\na part two on Point To Point Protocol, and\n\n11\n00:00:39.321 --> 00:00:42.684\nin the last episode we got a chance to\nsee how to get the thing turned on,\n\n12\n00:00:42.684 --> 00:00:44.282\nwhich was actually pretty easy.\n\n13\n00:00:44.282 --> 00:00:47.228\nThen we got to see authentication,\nchallenging for a username and\n\n14\n00:00:47.228 --> 00:00:49.950\npassword to make sure that\nour lines stayed secure.\n\n15\n00:00:49.950 --> 00:00:54.690\nIn this episode, I wanna show some other\nneat little things you could do with PPP\n\n16\n00:00:54.690 --> 00:00:58.320\nwhich are on the exam objectives and\ncan be on the exam.\n\n17\n00:00:58.320 --> 00:01:01.331\nBut are not so likely to be used\nin the real world [LAUGH] but\n\n18\n00:01:01.331 --> 00:01:03.394\nare important to learn nonetheless.\n\n19\n00:01:03.394 --> 00:01:07.970\nOne of the really cool features\nabout PPP is that it's extensible.\n\n20\n00:01:07.970 --> 00:01:10.880\nYou can add things to it, unlike HDLC,\n\n21\n00:01:10.880 --> 00:01:12.900\nwhere it just brings your\nconnection up and that's it.\n\n22\n00:01:12.900 --> 00:01:16.060\nSo we got a chance to see that\nlast episode with authentication.\n\n23\n00:01:16.060 --> 00:01:18.610\nYou can stick on usernames and\npasswords into PPP, and\n\n24\n00:01:18.610 --> 00:01:21.120\nnow it authenticates\nthe connection on the other side.\n\n25\n00:01:21.120 --> 00:01:26.630\nAnother neat thing that you can do with\nPPP is you can bond links together.\n\n26\n00:01:26.630 --> 00:01:29.386\nAnd I know I mentioned in the last\nepisode, but I didn't actually show it.\n\n27\n00:01:29.386 --> 00:01:33.746\nIf we take a look at my topology, I have\ntwo serial links between routers 3 and\n\n28\n00:01:33.746 --> 00:01:34.900\nrouter 5, right?\n\n29\n00:01:34.900 --> 00:01:38.980\nSo those two serial links right there,\nmaybe they're T1 lines, and\n\n30\n00:01:38.980 --> 00:01:40.730\neach one's 1.5 megabit.\n\n31\n00:01:40.730 --> 00:01:43.640\nWell I can stick different IPs on them,\nand have them independent,\n\n32\n00:01:43.640 --> 00:01:45.340\nand now I've got failover.\n\n33\n00:01:45.340 --> 00:01:47.950\nOne link fails,\nthe other one kicks in, right?\n\n34\n00:01:47.950 --> 00:01:50.230\nOr if I have a routing\nprotocol that supports it,\n\n35\n00:01:50.230 --> 00:01:53.200\nmaybe I can do load\nbalancing across the links.\n\n36\n00:01:53.200 --> 00:01:55.680\nBut if I don't have\na protocol that supports it,\n\n37\n00:01:55.680 --> 00:01:58.110\nthen how can I leverage\nboth of these links?\n\n38\n00:01:58.110 --> 00:02:02.602\nWell, PPP has it built right into the\nprotocol where it can do what's called PPP\n\n39\n00:02:02.602 --> 00:02:03.860\nmultilink.\n\n40\n00:02:03.860 --> 00:02:06.400\nAnd the nice part about multilink\nis it bonds these together, and\n\n41\n00:02:06.400 --> 00:02:08.440\nthey look like one big connection.\n\n42\n00:02:08.440 --> 00:02:12.350\nAnd links can come in and\nout of the link while it's online.\n\n43\n00:02:12.350 --> 00:02:15.120\nAs long as there's at least one\nlink that's running, it'll work.\n\n44\n00:02:15.120 --> 00:02:17.580\nIt's very similar to EtherChannel, right?\n\n45\n00:02:17.580 --> 00:02:18.710\nRemember the lack p and\n\n46\n00:02:18.710 --> 00:02:21.500\npag p etherchannels from back\nin the switching episodes?\n\n47\n00:02:21.500 --> 00:02:23.330\nThat's what this is for WAN links, right?\n\n48\n00:02:23.330 --> 00:02:26.290\nWe can use PPP to bond\nthese links together and\n\n49\n00:02:26.290 --> 00:02:28.490\nit's really not that hard to do,\nall right?\n\n50\n00:02:28.490 --> 00:02:30.679\nSo let's go in and\ntake a look at how we do that.\n\n51\n00:02:30.679 --> 00:02:35.838\nI'm gonna start here on router 3, and I'm\ngonna bond S3/0 and S3/1 together, right?\n\n52\n00:02:35.838 --> 00:02:40.293\nThe first thing that I need to do is,\nin the last few episodes,\n\n53\n00:02:40.293 --> 00:02:43.978\nwe've been configuring\nthe interface itself, so\n\n54\n00:02:43.978 --> 00:02:48.195\nif I do a show running config for\ninterface serial 3/0.\n\n55\n00:02:48.195 --> 00:02:52.320\nWe assign the IP address right on the\ninterface, and we configured it for PPP,\n\n56\n00:02:52.320 --> 00:02:53.865\nand all that.\n\n57\n00:02:53.865 --> 00:02:57.507\nWith multilink we have to take\nthe configuration off the interface,\n\n58\n00:02:57.507 --> 00:02:59.451\nand we put it on a virtual interface,\n\n59\n00:02:59.451 --> 00:03:03.700\na multi-link interface that's going\nto be representative of the bond.\n\n60\n00:03:03.700 --> 00:03:07.400\nRemember with the ether channel,\nhow we had the physical interfaces, but\n\n61\n00:03:07.400 --> 00:03:10.880\nthen you had the port group where\neverything was actually tied to, so\n\n62\n00:03:10.880 --> 00:03:14.400\nI had interface PO1,\nport group 1, or port channel 1.\n\n63\n00:03:14.400 --> 00:03:18.140\nAnd you could go into that interface and\nthat's where everything really went.\n\n64\n00:03:18.140 --> 00:03:19.410\nI need to do the same thing here.\n\n65\n00:03:19.410 --> 00:03:22.166\nSo that means the first thing you\nneed to do is get these two guys\n\n66\n00:03:22.166 --> 00:03:24.720\nconfigured the same way,\nand right now, they're not.\n\n67\n00:03:24.720 --> 00:03:28.131\nSerial 3/0 and Serial 3/1 are different.\n\n68\n00:03:28.131 --> 00:03:31.689\n3/1 doesn't have an IP address and\nit's shut down.\n\n69\n00:03:31.689 --> 00:03:33.435\n3/0 has an IP address.\n\n70\n00:03:33.435 --> 00:03:38.292\nIt's already set for PPP, and so\nit's not quite how I need it to be.\n\n71\n00:03:38.292 --> 00:03:40.210\nAll right, so\nwe're gonna need to get those kinda fixed.\n\n72\n00:03:40.210 --> 00:03:45.930\nSo let me jump into my configuration, and\nI'll get into 3/0, or actually a nice\n\n73\n00:03:45.930 --> 00:03:49.200\nlittle way to do this is to just use the\nrange command from our switches, right?\n\n74\n00:03:49.200 --> 00:03:55.410\nBecause you can say interface range on\na router just like you can on a switch,\n\n75\n00:03:55.410 --> 00:03:59.080\nand so I can jump in here, although it is\ngonna make me type out serial isn't it?\n\n76\n00:03:59.080 --> 00:04:01.570\nNo, is it not gonna let me?\n\n77\n00:04:01.570 --> 00:04:03.680\nIt's not gonna let me do\nthat serial interface.\n\n78\n00:04:03.680 --> 00:04:07.180\nSo normally you can use the range command\nand nail that, and yeah, sure enough,\n\n79\n00:04:07.180 --> 00:04:09.010\nmy serial interface is not in the list.\n\n80\n00:04:09.010 --> 00:04:10.430\nSo it's not gonna let me do it.\n\n81\n00:04:10.430 --> 00:04:11.970\nWe'll do it one at a time.\n\n82\n00:04:11.970 --> 00:04:12.653\n&gt;&gt; Sad face.\n\n83\n00:04:12.653 --> 00:04:13.888\n[LAUGH]\n&gt;&gt; I know it's so difficult.\n\n84\n00:04:13.888 --> 00:04:17.990\nSo I'm gonna do a no IP address to\nget that IP address off of there.\n\n85\n00:04:17.990 --> 00:04:21.371\nAnd I'm wanna do a no encapsulation ppp,\n\n86\n00:04:21.371 --> 00:04:25.610\nwhich is just gonna flip it back to HDLC,\nright?\n\n87\n00:04:25.610 --> 00:04:29.090\nAnd I'm gonna go ahead and\ndo a shutdown and turn it off, all right.\n\n88\n00:04:29.090 --> 00:04:34.845\nAnd so as soon as I do those things, when\nI take a look at my show running-config,\n\n89\n00:04:34.845 --> 00:04:38.840\nand I'll just begin with\nthe first serial interfaces.\n\n90\n00:04:38.840 --> 00:04:42.134\nWhen we go and take a look at that\nconfiguration, those two should match now.\n\n91\n00:04:42.134 --> 00:04:46.233\nAnd so I'm looking at 3/0 and 3/1,\nand sure enough, they do match, right?\n\n92\n00:04:46.233 --> 00:04:48.198\nThat range command sure\nwould've been handy there.\n\n93\n00:04:48.198 --> 00:04:48.837\n&gt;&gt; That would've been great.\n\n94\n00:04:48.837 --> 00:04:49.697\n&gt;&gt; Interesting that it didn't work.\n\n95\n00:04:49.697 --> 00:04:52.370\nSo, all right, so\nnow they're set the same.\n\n96\n00:04:52.370 --> 00:04:56.340\nAnd since they're set the same, I can jump\nin and I can start to configure multilink.\n\n97\n00:04:56.340 --> 00:04:58.010\nNow I'm gonna leave them shut down.\n\n98\n00:04:58.010 --> 00:05:00.550\nAnd when you configure multilink,\nit's a good idea to shut it down,\n\n99\n00:05:00.550 --> 00:05:03.460\nbecause on the other side,\nit's not configured yet.\n\n100\n00:05:03.460 --> 00:05:06.647\nAnd so if I try and do multilink from my\nend and the other end's not ready for it,\n\n101\n00:05:06.647 --> 00:05:08.530\nall sorts of weird stuff can happen.\n\n102\n00:05:08.530 --> 00:05:09.690\nI'm just gonna shut them down,\n\n103\n00:05:09.690 --> 00:05:11.710\nand that way I don't have to\nworry about it, all right?\n\n104\n00:05:11.710 --> 00:05:13.640\nAnd so now, I'm gonna jump in and\n\n105\n00:05:13.640 --> 00:05:15.700\nI'm gonna start by creating\nmy virtual interface.\n\n106\n00:05:15.700 --> 00:05:18.610\nSo the virtual interfaces\nare called multilink interfaces.\n\n107\n00:05:18.610 --> 00:05:25.861\nAnd so I'm just gonna say interface\nmultilink, and then I'll give it a number.\n\n108\n00:05:25.861 --> 00:05:31.070\nAnd most routers it's 1 through 65,535,\nso I'm just going to start with 1.\n\n109\n00:05:31.070 --> 00:05:34.105\nUsually our interfaces start with 0, for\nsome reason multilinks start with 1.\n\n110\n00:05:34.105 --> 00:05:36.795\nI'm not exactly sure why, but\nthat's what it is, and so\n\n111\n00:05:36.795 --> 00:05:38.493\nI'll say interface multilink 1.\n\n112\n00:05:38.493 --> 00:05:41.170\nThat's gonna create the virtual interface,\nand\n\n113\n00:05:41.170 --> 00:05:45.140\nI'm going to attach the IP\naddress to the virtual interface.\n\n114\n00:05:45.140 --> 00:05:49.669\nBecause I don't know which of my physical\nadapters are gonna be up, maybe one,\n\n115\n00:05:49.669 --> 00:05:51.642\nmaybe both, so we attach it here.\n\n116\n00:05:51.642 --> 00:05:56.095\nAnd I did a /30 earlier, right, so\nI'm gonna do the same thing here,\n\n117\n00:05:56.095 --> 00:05:58.441\n255.255.255.252.\n\n118\n00:05:58.441 --> 00:06:02.901\nAnd a /30, remember that that\ngives us two IP addresses, but\n\n119\n00:06:02.901 --> 00:06:06.760\nI'm gonna have two interfaces on my end.\n\n120\n00:06:06.760 --> 00:06:07.820\nIt doesn't matter,\n\n121\n00:06:07.820 --> 00:06:12.700\nthis one IP is gonna get spread across all\nthe interfaces that are in this bundle, so\n\n122\n00:06:12.700 --> 00:06:15.500\nthat knocks that out perfectly, and\nnow I've got the IP address assigned.\n\n123\n00:06:15.500 --> 00:06:17.890\nNow here's where things\nget a little bit weird.\n\n124\n00:06:17.890 --> 00:06:23.750\nI'm in a multilink interface, but\nI need to issue the ppp multilink command,\n\n125\n00:06:23.750 --> 00:06:26.610\nso that it knows that I'm actually gonna\nbuild a multilink bundle out of this.\n\n126\n00:06:26.610 --> 00:06:29.687\nNow you'd kind of think it already\nknew that [LAUGH] because of the whole\n\n127\n00:06:29.687 --> 00:06:33.310\ninterface multilink thing, but\nit doesn't, so we have to issue that.\n\n128\n00:06:33.310 --> 00:06:37.585\nAnd then we need to give it a group\nnumber, because I might have more than one\n\n129\n00:06:37.585 --> 00:06:41.830\nmultilink, and so\nit needs to know which multilink this is.\n\n130\n00:06:41.830 --> 00:06:44.240\nAnd, again, you'd think with\nthe interface number that it would get\n\n131\n00:06:44.240 --> 00:06:45.050\nthat, but it doesn't.\n\n132\n00:06:45.050 --> 00:06:49.461\nSo I'm gonna say, multilink group,\nand then I'll give it a group number.\n\n133\n00:06:49.461 --> 00:06:50.915\nThis will be group number 1, okay?\n\n134\n00:06:50.915 --> 00:06:54.030\nSo now I've got a virtual interface.\n\n135\n00:06:54.030 --> 00:06:57.230\nIt's got an IP and it's group number 1.\n\n136\n00:06:57.230 --> 00:07:00.023\nI can now go to my serial interfaces and\n\n137\n00:07:00.023 --> 00:07:04.572\nI can pick as many interfaces as\nI need and add them to group 1.\n\n138\n00:07:04.572 --> 00:07:08.804\nAnd when I do, those physical interfaces\nwill now be a part of this multilink and\n\n139\n00:07:08.804 --> 00:07:10.522\nallow us to bond them together.\n\n140\n00:07:10.522 --> 00:07:14.445\nSo I'm gonna jump into interface serial\n3/0, and I'd normally use the range\n\n141\n00:07:14.445 --> 00:07:18.425\ncommand here, but this particular router\ndoesn't seem to be happy with that, so\n\n142\n00:07:18.425 --> 00:07:22.540\nI'll just jump in to serial 3/0,\nand I'll give it configured first.\n\n143\n00:07:22.540 --> 00:07:24.839\nI'm not going to assign\nan IP address here,\n\n144\n00:07:24.839 --> 00:07:28.030\nbecause the IP is coming from\nthe multilink bundle, right?\n\n145\n00:07:28.030 --> 00:07:29.800\nI should probably use that terminology.\n\n146\n00:07:29.800 --> 00:07:32.180\nIt's called a bundle,\nwhen you bundle the interfaces together.\n\n147\n00:07:32.180 --> 00:07:35.555\nA lot of us call them bonds or\nether channel or whatever, but\n\n148\n00:07:35.555 --> 00:07:37.927\nit's a multilink bundle, in this case.\n\n149\n00:07:37.927 --> 00:07:41.520\nSo I need to get it joined in,\nand the way I do that is first\n\n150\n00:07:41.520 --> 00:07:45.823\nby making sure my encapsulation is ppp,\nkind of have to have that.\n\n151\n00:07:45.823 --> 00:07:48.479\nAnd then I need to say ppp multilink,\n\n152\n00:07:48.479 --> 00:07:52.436\njust like I did under\nthe multilink group a minute ago.\n\n153\n00:07:52.436 --> 00:07:56.617\nAnd then I need to say ppp multilink\ngroup, and the number this one is in.\n\n154\n00:07:56.617 --> 00:07:58.375\nI've got four serial interfaces.\n\n155\n00:07:58.375 --> 00:08:02.020\nI might put the first two in group one and\nthe second two in group two.\n\n156\n00:08:02.020 --> 00:08:03.570\nNow you have two separate sets.\n\n157\n00:08:03.570 --> 00:08:05.360\nRight?\nBut I'm just going in group one.\n\n158\n00:08:05.360 --> 00:08:08.725\nAnd then I'll do a no shutdown,\nactually, I'm gonna leave it shutdown,\n\n159\n00:08:08.725 --> 00:08:11.070\nbecause I still need to do the other side.\n\n160\n00:08:11.070 --> 00:08:11.810\nRight?\n\n161\n00:08:11.810 --> 00:08:14.550\nI will go ahead and\ndo three slash one though.\n\n162\n00:08:14.550 --> 00:08:16.795\nAnd here's where our\nup-arrow comes in handy.\n\n163\n00:08:16.795 --> 00:08:20.640\nBecause I can just cheat, and\nreissue those same three commands, and\n\n164\n00:08:20.640 --> 00:08:22.440\nnot have to re-type them.\n\n165\n00:08:22.440 --> 00:08:24.270\nSo that now they're configured the same.\n\n166\n00:08:24.270 --> 00:08:28.360\nOn the physical interfaces,\nI just have ppp turned on,\n\n167\n00:08:28.360 --> 00:08:29.789\nand the multilink group assigned.\n\n168\n00:08:30.840 --> 00:08:34.136\nOn the virtual interface is where I have\nthe layer three address aside, right.\n\n169\n00:08:34.136 --> 00:08:37.560\nSo, now that's defined,\nlet me jump over to the other router and\n\n170\n00:08:37.560 --> 00:08:38.568\nwe'll get that set there too.\n\n171\n00:08:38.568 --> 00:08:42.270\nSo on router five, I'm basically\ngonna repeat the same process.\n\n172\n00:08:42.270 --> 00:08:45.950\nLet me get to where I can see my\n\n173\n00:08:47.100 --> 00:08:52.120\ninterfaces, and I need to make them\nthe same, just like I did before.\n\n174\n00:08:52.120 --> 00:08:54.710\nWe need them to be consistent, otherwise\nwhen one of the interfaces comes into\n\n175\n00:08:54.710 --> 00:08:57.490\nthe bundle, it could throw the whole thing\noff if they're configured differently.\n\n176\n00:08:57.490 --> 00:08:58.906\nSo three zero and three one,\n\n177\n00:08:58.906 --> 00:09:02.518\nmy main difference is that I've got\nan IP address in the encapsulation.\n\n178\n00:09:02.518 --> 00:09:04.350\nI can actually leave that encapsulation,\n\n179\n00:09:04.350 --> 00:09:06.520\nbecause I know I'm going to put\nit right back again anyway.\n\n180\n00:09:06.520 --> 00:09:10.460\nBut the IP address definitely has\nto go in that shutdown status.\n\n181\n00:09:10.460 --> 00:09:12.230\n&gt;&gt; Now Don, really quickly,\nyou were talking about the,\n\n182\n00:09:12.230 --> 00:09:13.530\nwe've got the bundles, right?\n\n183\n00:09:13.530 --> 00:09:16.270\nWe've got serial, one and two, or\n\n184\n00:09:16.270 --> 00:09:20.300\nwhatever you have the two serial\nlinks that you wanna bundle together.\n\n185\n00:09:20.300 --> 00:09:22.930\nWhen you do that, and\nyou kept them shut down,\n\n186\n00:09:22.930 --> 00:09:26.420\nso that we can get everything working\nbefore we start bringing things up.\n\n187\n00:09:26.420 --> 00:09:31.330\nWhen you bring up the actual physical\nlinks, the serial links themselves,\n\n188\n00:09:31.330 --> 00:09:35.160\ndoes the link actually become active and\nworking, or do you have to then go\n\n189\n00:09:35.160 --> 00:09:38.750\ninto the virtual link and bring it up, and\nthat's when everything starts to work?\n\n190\n00:09:38.750 --> 00:09:39.580\n&gt;&gt; So, good question right?\n\n191\n00:09:39.580 --> 00:09:42.070\nSo the multilink interface is technically\nup, or it's supposed to be up, but\n\n192\n00:09:42.070 --> 00:09:44.640\nit's down right now because\nthere's nobody in it.\n\n193\n00:09:44.640 --> 00:09:48.720\nAs soon as the first physical link comes\nup, the virtual link will come up too.\n\n194\n00:09:48.720 --> 00:09:52.170\nSo the virtual link is gonna\nbe up any time you have at\n\n195\n00:09:52.170 --> 00:09:53.500\nleast one physical link up, but\n\n196\n00:09:53.500 --> 00:09:56.040\nif all your physical links are down like\nmine are the multilink will be down.\n\n197\n00:09:56.040 --> 00:09:58.850\nSo we don't have to issue a no\nshutdown on the virtual link.\n\n198\n00:09:58.850 --> 00:10:02.040\nYou can issue a shutdown if\nyou wanna turn it off, right.\n\n199\n00:10:02.040 --> 00:10:04.350\nBut it should be off by default.\n\n200\n00:10:04.350 --> 00:10:05.650\nAnd we'll see that here.\n\n201\n00:10:05.650 --> 00:10:07.000\nAll right, so I've got my two interfaces.\n\n202\n00:10:07.000 --> 00:10:08.610\nThey should be configured the same.\n\n203\n00:10:08.610 --> 00:10:10.690\nLet me just verify that.\n\n204\n00:10:10.690 --> 00:10:13.884\nI'm gonna pull the configuration\nback up to make sure that 3/0 and\n\n205\n00:10:13.884 --> 00:10:15.186\n3/1 now have the same configuration.\n\n206\n00:10:15.186 --> 00:10:18.926\nAnd they don't.\n\n207\n00:10:18.926 --> 00:10:20.610\nWhat did I do?\n\n208\n00:10:20.610 --> 00:10:22.040\nThat's right.\nI left the ppp because I'm\n\n209\n00:10:22.040 --> 00:10:23.170\njust gonna put that back anyway.\n\n210\n00:10:23.170 --> 00:10:24.510\nSo, that's fine.\n\n211\n00:10:24.510 --> 00:10:26.810\nAll right, so now I need to\nconfigure my multilink interface.\n\n212\n00:10:26.810 --> 00:10:28.259\nSo I'm gonna get in here.\n\n213\n00:10:28.259 --> 00:10:32.320\nI'll say interface multilink 1,\njust like I did in the last one.\n\n214\n00:10:32.320 --> 00:10:35.196\nI'll say IP address 192.168.3.2 this time.\n\n215\n00:10:35.196 --> 00:10:37.866\nAnd again, it's a small network, right?\n\n216\n00:10:37.866 --> 00:10:42.111\nIt's only two IPs, I've got four\ninterfaces, but only two IPs.\n\n217\n00:10:42.111 --> 00:10:43.268\nBut that's okay,\n\n218\n00:10:43.268 --> 00:10:47.740\nbecause the IP is actually\nattached to the virtual interface.\n\n219\n00:10:47.740 --> 00:10:48.810\nAnd then I can say,\n\n220\n00:10:48.810 --> 00:10:54.690\nppp multilink, followed by multilink and\nthe group number.\n\n221\n00:10:54.690 --> 00:10:57.410\nNow, I'm using group number 1 on\nboth sides, you don't have to.\n\n222\n00:10:57.410 --> 00:10:59.470\nIt does need to match on the 1 router, but\n\n223\n00:10:59.470 --> 00:11:02.100\nI could have group 1 on one side and\ngroup 5 on the other, and\n\n224\n00:11:02.100 --> 00:11:05.460\nthat would be fine, as long as I put\nthe interfaces into the right groups.\n\n225\n00:11:05.460 --> 00:11:06.850\nSo that's done.\n\n226\n00:11:06.850 --> 00:11:13.360\nNow I can jump over to interface serial\n3/0, where I can say encapsulation ppp.\n\n227\n00:11:13.360 --> 00:11:16.900\nI can say ppp multilink.\n\n228\n00:11:18.850 --> 00:11:21.210\nAnd ppp multilink group 1.\n\n229\n00:11:21.210 --> 00:11:25.713\nAnd then I can jump into 3/1 and\n\n230\n00:11:25.713 --> 00:11:30.450\ndo the same exact thing and get that set.\n\n231\n00:11:30.450 --> 00:11:34.380\nSo once that's done,\nnow they're all configured the same.\n\n232\n00:11:34.380 --> 00:11:35.120\nAll right.\n\n233\n00:11:35.120 --> 00:11:39.260\nI do need to do a no shutdown to get that\non, and let me get in the other interface,\n\n234\n00:11:39.260 --> 00:11:39.970\ndo the same thing.\n\n235\n00:11:40.980 --> 00:11:41.950\nSo now we should be good.\n\n236\n00:11:41.950 --> 00:11:42.480\nRight?\n\n237\n00:11:42.480 --> 00:11:44.002\nIf I take a look at my\nrunning configuration,\n\n238\n00:11:44.002 --> 00:11:47.300\nlet's just kind of review really quick\nthe commands that I've issued so far.\n\n239\n00:11:47.300 --> 00:11:51.030\nSo, I created the multilink interface,\nso it will turn up in here somewhere.\n\n240\n00:11:51.030 --> 00:11:52.540\nJust went by, right there.\n\n241\n00:11:52.540 --> 00:11:55.320\nSo I created a multilink interface,\nI gave it an IP address,\n\n242\n00:11:55.320 --> 00:11:58.240\nI told it it was gonna do multilink,\nand that it was in group 1.\n\n243\n00:11:58.240 --> 00:12:04.990\nThen, on my serial interfaces,\nright here, I removed their IP address,\n\n244\n00:12:04.990 --> 00:12:08.370\nset them for ppp, set them for\nmultilink, and put them in group 1.\n\n245\n00:12:08.370 --> 00:12:11.450\nAnd those configurations\nshould match between the two.\n\n246\n00:12:11.450 --> 00:12:12.660\nAll right, so we're good there.\n\n247\n00:12:12.660 --> 00:12:14.970\nThe serial restart-delay is 0,\nthat's a default command.\n\n248\n00:12:14.970 --> 00:12:17.950\nI didn't put that one in there, it's just\npart of what's in the router already.\n\n249\n00:12:17.950 --> 00:12:19.910\nBut the other ones we did set.\n\n250\n00:12:19.910 --> 00:12:21.530\nAll right, so this router is done.\n\n251\n00:12:21.530 --> 00:12:24.530\nThe interfaces are not\nshut down right now, so\n\n252\n00:12:24.530 --> 00:12:27.430\nthey're trying to come up,\nthey're trying to build a connection, but\n\n253\n00:12:27.430 --> 00:12:29.910\nit's failing, just because\nthe other side is not configured.\n\n254\n00:12:29.910 --> 00:12:33.820\nIf I do a show IP interface brief and\nI take a look at it,\n\n255\n00:12:33.820 --> 00:12:39.283\nI can see those interfaces are in a,\nif I can scroll over,\n\n256\n00:12:39.283 --> 00:12:44.680\nwhat have I done,\nhaving window problems today.\n\n257\n00:12:44.680 --> 00:12:48.080\nI can see they're in a up down status,\nright?\n\n258\n00:12:48.080 --> 00:12:50.910\nUp down,\nmeaning that the physical link is up, but\n\n259\n00:12:50.910 --> 00:12:55.180\nthe logical link is down,\nbecause ppp is not able to bond.\n\n260\n00:12:55.180 --> 00:12:59.340\nAnd I should see the same exact thing\ndown here from my multilink connection,\n\n261\n00:12:59.340 --> 00:13:02.170\nexcept it's actually showing down,\ndown right?\n\n262\n00:13:02.170 --> 00:13:05.310\nThere is no physical link for\nthe multilink interface.\n\n263\n00:13:05.310 --> 00:13:09.480\nSo if its protocol goes down, and\nthere's no physical adapter supporting it,\n\n264\n00:13:09.480 --> 00:13:12.720\nthen its fake physical\ninterface goes down, too.\n\n265\n00:13:12.720 --> 00:13:15.900\nSo my multi-link interface\nis showing us down, right?\n\n266\n00:13:15.900 --> 00:13:19.030\nLet's go bring the other side up,\nand we'll see this whole thing work.\n\n267\n00:13:19.030 --> 00:13:22.610\nNow, one of the other commands that\nwe can use to troubleshoot this, or\n\n268\n00:13:22.610 --> 00:13:26.802\njust to see what's going on,\nis show ppp multilink, and\n\n269\n00:13:26.802 --> 00:13:30.870\nthat'll show you if you have any multilink\nbundles, there's that bundled terminology.\n\n270\n00:13:30.870 --> 00:13:32.235\nI've no active bundles.\n\n271\n00:13:32.235 --> 00:13:37.064\nMultilink one is inactive, because serial\n3/1 and serial 3/0 are both inactive too.\n\n272\n00:13:37.064 --> 00:13:40.263\nThey're not up, they're not happy,\nand so it's not working.\n\n273\n00:13:40.263 --> 00:13:44.220\nSo I'm going to get into configuration\ninto serial 3/0, and do a no shutdown.\n\n274\n00:13:44.220 --> 00:13:51.100\nAnd then I'll get into interface 3/1 and\ndo a no shutdown.\n\n275\n00:13:51.100 --> 00:13:55.030\nNow, a lot of messages popped\nacross the screen there.\n\n276\n00:13:55.030 --> 00:14:01.390\nBecause not only did serial 3/0 come up,\nbut the multilink came up also.\n\n277\n00:14:01.390 --> 00:14:04.306\nSo a lot of stuff just happened\nall at once there, and\n\n278\n00:14:04.306 --> 00:14:07.420\nthen I brought up that second link,\nand when I did that,\n\n279\n00:14:07.420 --> 00:14:12.290\nbringing up serial 3/0 by itself was\nenough to bring the multilink up.\n\n280\n00:14:12.290 --> 00:14:16.590\nAnd then, when I brought up 3/1,\nit moved it into the multilink.\n\n281\n00:14:16.590 --> 00:14:18.630\nIn fact,\nlet's do that one at a time instead.\n\n282\n00:14:18.630 --> 00:14:20.760\nSo if I go into 3/1 and\ndo a shutdown, right.\n\n283\n00:14:20.760 --> 00:14:24.790\nSo I'm gonna take it out of the multilink,\nright.\n\n284\n00:14:24.790 --> 00:14:28.410\nLet's take a look at how our\nrouter looks right now, okay?\n\n285\n00:14:28.410 --> 00:14:33.400\nIf I do a show ppp multilink, okay?\n\n286\n00:14:33.400 --> 00:14:35.310\nI do have a valid bundle.\n\n287\n00:14:35.310 --> 00:14:37.390\nI'm router three, and\nthe bundle's name is router five.\n\n288\n00:14:37.390 --> 00:14:39.040\nThat's the router on the other side.\n\n289\n00:14:39.040 --> 00:14:41.200\nSo it knows that's\nthe person on the other end.\n\n290\n00:14:41.200 --> 00:14:43.250\nSo you've got these\nend-point discriminators.\n\n291\n00:14:43.250 --> 00:14:45.830\nIf you have more than one endpoint, you\nhave to discriminate one from the other,\n\n292\n00:14:45.830 --> 00:14:48.050\nand so these are the names that\nwe've got assigned for them.\n\n293\n00:14:48.050 --> 00:14:50.400\nI can see the bundle's been up for\n45 seconds.\n\n294\n00:14:50.400 --> 00:14:54.230\nMy total bandwidth is 1.544 megabytes.\n\n295\n00:14:54.230 --> 00:14:55.380\nI got a T1 and it's up.\n\n296\n00:14:55.380 --> 00:14:57.060\nThat's my total bandwidth, all right.\n\n297\n00:14:57.060 --> 00:14:58.999\nEverything seems to be happy.\n\n298\n00:14:58.999 --> 00:15:04.290\nSerial 3/0 has been active for 46 seconds,\nserial 3/1 is inactive, right.\n\n299\n00:15:04.290 --> 00:15:06.340\nNo inactive multilink interfaces.\n\n300\n00:15:06.340 --> 00:15:09.880\nThat means that I've only got multilink\none, and it's currently active.\n\n301\n00:15:10.960 --> 00:15:16.160\nNow, if I get back into my configuration,\nI go to 3/1, and I do a no shutdown.\n\n302\n00:15:17.970 --> 00:15:18.660\nAll right.\n\n303\n00:15:18.660 --> 00:15:23.250\nThat link is gonna come up, and\nit's gonna join the multilink bundle.\n\n304\n00:15:23.250 --> 00:15:23.790\nRight?\n\n305\n00:15:23.790 --> 00:15:27.670\nSo that's happening in the background, in\ntheory, we don't actually see that here in\n\n306\n00:15:27.670 --> 00:15:30.440\nthe messages that pop up, but that is\nwhat's happening in the background.\n\n307\n00:15:30.440 --> 00:15:33.440\nAnd if I do a show ppp multilink now,\n\n308\n00:15:34.690 --> 00:15:38.560\nI can see that I've got my\ntwo links that are active.\n\n309\n00:15:38.560 --> 00:15:40.980\nThe second one's only been active for\n14 seconds.\n\n310\n00:15:40.980 --> 00:15:48.175\nAnd my total bandwidth is now 3,088 KB,\nor 3 MB.\n\n311\n00:15:48.175 --> 00:15:51.620\nSo I've got a 3 MB link, and I brought\nthat in while the system was online.\n\n312\n00:15:51.620 --> 00:15:54.342\nUsers can be in the system, and\nall of a sudden I doubled my bandwidth.\n\n313\n00:15:54.342 --> 00:15:56.990\nI can add a third link, and\nI've tripled my bandwidth, or\n\n314\n00:15:56.990 --> 00:15:59.970\nquadrupled it, I just keep adding\nto it and I can take ones out.\n\n315\n00:15:59.970 --> 00:16:02.990\nIf one link fails, nobody will notice,\nthe bandwidth just shrinks.\n\n316\n00:16:02.990 --> 00:16:06.690\nThe link gets a little slower, but\notherwise people won't notice,\n\n317\n00:16:06.690 --> 00:16:08.040\nthey can continue to function.\n\n318\n00:16:08.040 --> 00:16:11.640\nSo we get high availability and\nredundancy, in addition to just\n\n319\n00:16:11.640 --> 00:16:15.070\ngreat performance, cuz we're increasing\nthe bandwidth of these links.\n\n320\n00:16:15.070 --> 00:16:17.020\nSo very, very cool technology.\n\n321\n00:16:17.020 --> 00:16:19.120\nIf I do a show IP interface brief,\n\n322\n00:16:20.380 --> 00:16:24.860\nwhat I'm gonna see is that serial 3/ 0 and\n3/1 are both up, up and\n\n323\n00:16:24.860 --> 00:16:28.090\nthey're happy, but it's the multilink\ninterface that I care about.\n\n324\n00:16:28.090 --> 00:16:31.230\nIt's the one that has the IP,\nand it is also up up.\n\n325\n00:16:31.230 --> 00:16:34.790\nAnd where things get really cool,\nis if I look on my routing table.\n\n326\n00:16:34.790 --> 00:16:38.780\nWhen I look at my routing table,\nthere will be routes that I can get to,\n\n327\n00:16:38.780 --> 00:16:41.837\nthat are available like 192.168.4 and 5.\n\n328\n00:16:41.837 --> 00:16:45.517\nAnd if I look at where they're going,\nthey're going out the multilink interface.\n\n329\n00:16:45.517 --> 00:16:50.970\nThey're not going out serial3/0 or 3/1,\nthey're going out the multilink interface.\n\n330\n00:16:50.970 --> 00:16:53.820\nIn other words, we don't care\nwhat physical adaptor they hit\n\n331\n00:16:53.820 --> 00:16:55.780\nas long as it's a part\nof the multilink bundle.\n\n332\n00:16:55.780 --> 00:16:58.990\nSo we now get a good 3\nmegabit communication,\n\n333\n00:16:58.990 --> 00:17:02.850\nwhich if I was running OSPF,\nthe metric is really weird.\n\n334\n00:17:02.850 --> 00:17:03.440\nWith EIGRP,\n\n335\n00:17:03.440 --> 00:17:07.270\nthe metric we can't even recognize,\nbut it's a different metric than you\n\n336\n00:17:07.270 --> 00:17:09.540\nnormally see 'cuz you don't normally\nhave a three negative line, right?\n\n337\n00:17:09.540 --> 00:17:13.550\nIt's kinda odd number to have, but\nthat's all happening right there\n\n338\n00:17:13.550 --> 00:17:17.720\nbeing calculated and thrown in,\nall part of PPP, really cool stuff, right?\n\n339\n00:17:17.720 --> 00:17:21.280\nSo, multi link is one of those\nneat little add-ons to PPP.\n\n340\n00:17:21.280 --> 00:17:23.970\nThere is one other add-on that\ni want to talk about, and\n\n341\n00:17:23.970 --> 00:17:26.760\nthis one I really just\nwanna talk about briefly.\n\n342\n00:17:26.760 --> 00:17:29.739\nIt's in the exam objectives, it's very\nunlikely to show up in the exam and\n\n343\n00:17:29.739 --> 00:17:30.415\nthat's PPPoE.\n\n344\n00:17:30.415 --> 00:17:34.132\nOne of the cool parts of Points to Point\nProtocol is that you can get its serial\n\n345\n00:17:34.132 --> 00:17:35.235\nlineup very fast, and\n\n346\n00:17:35.235 --> 00:17:39.330\nthen you can add things like\nauthentication and multi-link, right.\n\n347\n00:17:39.330 --> 00:17:42.970\nThere's other protocols, like HDLC,\nthat don't have that stuff.\n\n348\n00:17:42.970 --> 00:17:47.660\nEven ethernet, as powerful as ethernet is,\nit doesn't have some of those things.\n\n349\n00:17:47.660 --> 00:17:51.370\nDoes ethernet have a way\nto bond cables together?\n\n350\n00:17:51.370 --> 00:17:54.338\nNo, but CISCO has ether-channel,\nand you can use ether-channel to\n\n351\n00:17:54.338 --> 00:17:57.976\nbond those ethernet links, and now you've\ngot it, you've got it created, right.\n\n352\n00:17:57.976 --> 00:18:01.410\nSo, there are ways to do it,\nto bond those links, with ethernet.\n\n353\n00:18:01.410 --> 00:18:03.370\nBut what about authentication?\n\n354\n00:18:03.370 --> 00:18:05.090\nEthernet doesn't have authentication.\n\n355\n00:18:05.090 --> 00:18:08.110\nYou can run other protocols on top\nof it to give that, right, but\n\n356\n00:18:08.110 --> 00:18:09.390\nit doesn't have it by default.\n\n357\n00:18:09.390 --> 00:18:12.827\nWell those other protocols I mentioned,\nPPP is one of them.\n\n358\n00:18:12.827 --> 00:18:18.722\nThere is a technology called PPPoE,\nPoint to Point Protocol over Ethernet.\n\n359\n00:18:18.722 --> 00:18:23.223\nAnd it's kind of a contradiction of terms,\nbecause a point to point protocol is for\n\n360\n00:18:23.223 --> 00:18:26.517\npoint to point links, and\nethernet is a shared technology.\n\n361\n00:18:26.517 --> 00:18:30.406\nSo ethernet expects you to have more\nthan one host that's out there, but\n\n362\n00:18:30.406 --> 00:18:34.720\nif I want to do authentication on\nan ethernet link, I can use PPPoE.\n\n363\n00:18:34.720 --> 00:18:38.540\nNow in real life land, there's really\nonly one place you see this anymore, and\n\n364\n00:18:38.540 --> 00:18:39.660\nthat's DSL.\n\n365\n00:18:39.660 --> 00:18:45.320\nWith DSL lines,\nif you get a digital subscriber line that\n\n366\n00:18:45.320 --> 00:18:48.610\nthey run a phone line into your business,\nthey stick a DSL modem on it, and they\n\n367\n00:18:48.610 --> 00:18:51.910\nleave you with a RJ 45 jack so you can\nplug it right into your ethernet network.\n\n368\n00:18:51.910 --> 00:18:55.860\nBut when you sign up for that service,\nthat's just a phone line, people could tap\n\n369\n00:18:55.860 --> 00:18:59.170\ninto that, and so they want you to provide\na username and a password to connect.\n\n370\n00:18:59.170 --> 00:19:01.360\nBut ethernet doesn't have a system for\nthat.\n\n371\n00:19:01.360 --> 00:19:06.380\nSo they put PPP on top of the ethernet\njust for authentication services.\n\n372\n00:19:06.380 --> 00:19:11.530\nSo PPPoE is using point to point\nprotocol on top of ethernet.\n\n373\n00:19:11.530 --> 00:19:16.135\nAnd for the exam, they want you to be\nfamiliar with the client side of PPPoE,\n\n374\n00:19:16.135 --> 00:19:18.965\nnot the server side, so\nnot even getting a working operation up,\n\n375\n00:19:18.965 --> 00:19:22.185\nbecause the server side is taken\ncare of by your telecom, right.\n\n376\n00:19:22.185 --> 00:19:24.523\nIn the show notes, I'll put how\nto configure a server, just for\n\n377\n00:19:24.523 --> 00:19:26.054\nthe sake of it, but it's not in the exam.\n\n378\n00:19:26.054 --> 00:19:27.826\nFor the exam they want you\nto see the client side.\n\n379\n00:19:27.826 --> 00:19:30.111\nAnd so let me run through this,\nit's not easy,\n\n380\n00:19:30.111 --> 00:19:33.470\nit's a good ten commands that we\nhave to issue to get it set up.\n\n381\n00:19:33.470 --> 00:19:36.730\nBut basically, what you have to do is\ncreate a virtual interface called a dialer\n\n382\n00:19:36.730 --> 00:19:39.850\nthat says when you connect on this\ninternet line, you're actually dialing in\n\n383\n00:19:39.850 --> 00:19:43.410\nto a server on the other end, and you're\ngonna hand off a username and a password.\n\n384\n00:19:43.410 --> 00:19:46.440\nAnd if it's valid, then this\ndialer interface will come up, and\n\n385\n00:19:46.440 --> 00:19:47.930\nyou can send traffic across it.\n\n386\n00:19:47.930 --> 00:19:50.130\nAnd if it doesn't come up, it's not valid,\n\n387\n00:19:50.130 --> 00:19:52.800\nit goes down, and now you can't\ncommunicate off the ethernet line.\n\n388\n00:19:52.800 --> 00:19:55.466\nSo if somebody would tap in that\nconnection they wouldn't be able to use it\n\n389\n00:19:55.466 --> 00:19:57.447\nwithout the valid username or\na password, all right.\n\n390\n00:19:57.447 --> 00:19:59.128\nLet me walk you through that process.\n\n391\n00:19:59.128 --> 00:20:02.030\nOn router three,\nI've got an extra interface laying around,\n\n392\n00:20:02.030 --> 00:20:04.449\nit's one of my FastEthernet\ninterfaces I believe.\n\n393\n00:20:04.449 --> 00:20:07.260\nLet's see, FA 2/0, we'll use that one.\n\n394\n00:20:07.260 --> 00:20:10.880\nSo, I wanna configure\nPPPoE on FastEthernet2/0.\n\n395\n00:20:10.880 --> 00:20:12.870\nNormally, it's just gonna be\nstraight up regular Ethernet,\n\n396\n00:20:12.870 --> 00:20:14.590\nI'm gonna go a little bit further.\n\n397\n00:20:14.590 --> 00:20:17.100\nOkay, and when we configure PPPoE,\n\n398\n00:20:17.100 --> 00:20:21.890\nwhat I need to start with is actually\nsetting up that particular interface.\n\n399\n00:20:21.890 --> 00:20:26.480\nSo, I'm gonna get into fa2/0 and\nI'm gonna get it configured.\n\n400\n00:20:26.480 --> 00:20:28.980\nNow, I'm gonna remove\nan IP address from it,\n\n401\n00:20:28.980 --> 00:20:31.150\nif I have an IP it shouldn't be on here.\n\n402\n00:20:31.150 --> 00:20:34.020\nThe IP needs to be on the virtual\ninterface much like multi link,\n\n403\n00:20:34.020 --> 00:20:36.997\nthat's where it's gonna be configured,\nbut this isn't a bond,\n\n404\n00:20:36.997 --> 00:20:38.873\nit is gonna be tied to this one interface.\n\n405\n00:20:38.873 --> 00:20:42.813\nAnd from here I need to say PPPoE -client.\n\n406\n00:20:42.813 --> 00:20:47.821\nWhen this interface comes up, I need to\nconnect to a server that's out there and\n\n407\n00:20:47.821 --> 00:20:51.970\nthat server is expecting me to\nsend communication with PPPoE.\n\n408\n00:20:51.970 --> 00:20:56.980\nSo, I'm gonna be a PPPoE client,\nand I'm gonna tie this to\n\n409\n00:20:56.980 --> 00:21:02.309\ndial-pool-number 1 there,\nI'm gonna create a dial pool.\n\n410\n00:21:02.309 --> 00:21:04.476\nNow, dial pool is actually\na really old technology,\n\n411\n00:21:04.476 --> 00:21:06.180\nit was used back in the dial up days.\n\n412\n00:21:06.180 --> 00:21:07.950\nWhen you wanted to reach a number,\n\n413\n00:21:07.950 --> 00:21:10.960\nthat you had to dial with a phone modem\nto connect to, you created a dial\n\n414\n00:21:10.960 --> 00:21:14.210\npool that would be triggered only\nwhen you access those networks.\n\n415\n00:21:14.210 --> 00:21:15.610\nPPPoE works the same way though,\n\n416\n00:21:15.610 --> 00:21:20.530\nso it uses the old terminology, it really\nuses like a flashback to old modem days.\n\n417\n00:21:20.530 --> 00:21:24.625\nWe had to set these stuff up with modems,\nhere we're using it across dial up.\n\n418\n00:21:24.625 --> 00:21:27.085\nAnd DSL you get it from the phone company,\nso\n\n419\n00:21:27.085 --> 00:21:29.655\nit makes sense that they would do it\nthe old way like a phone dial up.\n\n420\n00:21:29.655 --> 00:21:32.115\nAnd so, that's why these commands,\nthey seem kind of dated.\n\n421\n00:21:32.115 --> 00:21:34.795\n&gt;&gt; PPP's like the grandpa\nprotocol sitting there going,\n\n422\n00:21:34.795 --> 00:21:37.910\nback in my day we didn't\npass packets like that.\n\n423\n00:21:37.910 --> 00:21:40.055\n[LAUGH]\n&gt;&gt; It sounds like a joke, but\n\n424\n00:21:40.055 --> 00:21:40.822\nthat's the truth.\n\n425\n00:21:40.822 --> 00:21:42.058\n&gt;&gt; [LAUGH]\n&gt;&gt; That is how it is,\n\n426\n00:21:42.058 --> 00:21:45.615\nthat's how they configure this stuff and\nit really just is DSL where you see this.\n\n427\n00:21:45.615 --> 00:21:46.905\nYou really don't see it anywhere else, or\n\n428\n00:21:46.905 --> 00:21:49.490\nat least I haven't seen it anywhere else,\nall right.\n\n429\n00:21:49.490 --> 00:21:52.290\nSo now, I know that there's going to be\na dial pool involved in this, all right.\n\n430\n00:21:52.290 --> 00:21:54.530\nThat's the end of that interface,\n\n431\n00:21:54.530 --> 00:21:56.450\nI really don't configure\nanything else on that interface.\n\n432\n00:21:56.450 --> 00:21:57.910\nIt just knows that, hey,\n\n433\n00:21:57.910 --> 00:22:03.040\nif I want to connect on this interface, I\nshouldn't unless this dialer is up, right.\n\n434\n00:22:03.040 --> 00:22:04.990\nSo the next thing is I need\nto connect the dialer.\n\n435\n00:22:04.990 --> 00:22:08.530\nSo, I'm gonna say,\nInterface Dialer1, all right.\n\n436\n00:22:08.530 --> 00:22:11.880\nAnd dialers, just like any other\ninterface, they have numbers.\n\n437\n00:22:11.880 --> 00:22:13.400\nOops, I guess I can't do it from in here.\n\n438\n00:22:13.400 --> 00:22:15.820\nIf I get out of the interface,\nthey have numbers, right?\n\n439\n00:22:15.820 --> 00:22:20.153\nBecause I might have more than one dialer,\nand so I've got 0 through 31,999, right?\n\n440\n00:22:20.153 --> 00:22:24.110\nBut I'm just gonna do Dialer1, all right?\n\n441\n00:22:24.110 --> 00:22:26.465\nAnd once I'm in the dialer,\nhere's where the real work happens.\n\n442\n00:22:26.465 --> 00:22:28.492\nHere's where I tell it I'm\ngonna be dialing up and\n\n443\n00:22:28.492 --> 00:22:29.758\nconnecting to the other side.\n\n444\n00:22:29.758 --> 00:22:33.440\nNow when I do PPP,\nit's sitting on top of ethernet.\n\n445\n00:22:33.440 --> 00:22:37.300\nAnd ethernet by default has an MTU\nsize of 1,500 bytes, right.\n\n446\n00:22:37.300 --> 00:22:41.340\nWell, when I go into a dialer,\nI'm going into PPPoE, I'm encapsulating,\n\n447\n00:22:41.340 --> 00:22:42.390\nI'm wrapping it up.\n\n448\n00:22:42.390 --> 00:22:46.234\nAnd so, we need to shrink the MTU\nsize down a bit, so it'll still fit\n\n449\n00:22:46.234 --> 00:22:50.568\ninside an ethernet frame, and so\nthe standard number for that is 1492.\n\n450\n00:22:50.568 --> 00:22:53.304\nI'm gonna say MTU 1492.\n\n451\n00:22:53.304 --> 00:22:54.264\n&gt;&gt; That's easy to remember.\n\n452\n00:22:54.264 --> 00:22:57.310\n&gt;&gt; It's like the-\n&gt;&gt; Columbus sailed the ocean blue.\n\n453\n00:22:57.310 --> 00:22:59.702\n&gt;&gt; There we go, the old rhyme.\n\n454\n00:22:59.702 --> 00:23:01.008\nDo you know the whole thing?\n\n455\n00:23:01.008 --> 00:23:03.824\n&gt;&gt; No, that's the only part I know.\n\n456\n00:23:03.824 --> 00:23:05.437\n&gt;&gt; But for the Americans out there,\nI guess if you're from other countries,\n\n457\n00:23:05.437 --> 00:23:06.368\nyou might not care so much about Columbus.\n\n458\n00:23:06.368 --> 00:23:07.794\nActually, there's plenty of Americans\nthat don't care about Columbus.\n\n459\n00:23:07.794 --> 00:23:12.748\n[LAUGH] But 1492 is the default, and what\nwe're basically doing is leaving 8 bytes,\n\n460\n00:23:12.748 --> 00:23:17.107\nto leave room for the ethernet header\nthat's gonna be ultimately on this to get\n\n461\n00:23:17.107 --> 00:23:19.070\nus to the 1500 bytes, so.\n\n462\n00:23:19.070 --> 00:23:21.230\nWe're just shrinking that\nMTU down a little bit.\n\n463\n00:23:21.230 --> 00:23:26.160\nThen we're gonna say encapsulation PPP,\nbecause it's point to point protocol.\n\n464\n00:23:26.160 --> 00:23:27.650\nThis is a generic dialer and\n\n465\n00:23:27.650 --> 00:23:30.350\nthere are other encapsulations like slip,\nthat used to be used.\n\n466\n00:23:30.350 --> 00:23:32.479\nSo that's why we've got\nto manually say PPP.\n\n467\n00:23:32.479 --> 00:23:37.580\nThen IP address, and if you've got\na static IP, you'd put it here.\n\n468\n00:23:37.580 --> 00:23:40.403\nBut normally, it's DHCP, right,\nthey're issuing you them.\n\n469\n00:23:40.403 --> 00:23:44.210\nBut they can't run normal DHCP because\nnormal DHCP doesn't use authentication.\n\n470\n00:23:44.210 --> 00:23:48.201\nSo, here they're gonna use IPCP,\nthe Internet Protocol Control Protocol,\n\n471\n00:23:48.201 --> 00:23:49.355\nthat's a part of PPP.\n\n472\n00:23:49.355 --> 00:23:53.698\nAnd so, I need to say IP address\nnegotiated, right, which means,\n\n473\n00:23:53.698 --> 00:23:58.270\nIPCP is gonna give me my IP address\nafter I authenticate All right, so,\n\n474\n00:23:58.270 --> 00:24:00.048\nthat's an important one.\n\n475\n00:24:00.048 --> 00:24:08.190\nNow, if the other side is not requiring\nauthentication, then I'm done.\n\n476\n00:24:08.190 --> 00:24:11.348\nIf I'm just trying to do PPOE without\nauthentication, then I'm done.\n\n477\n00:24:11.348 --> 00:24:16.164\nThere's a little bit more as far as Nat or\nwhatever, but if the other side is\n\n478\n00:24:16.164 --> 00:24:20.520\nrequiring authentication,\nI need to add three more lines.\n\n479\n00:24:20.520 --> 00:24:24.990\nI need to say ppp authentication and which\nstyle of authentication, usually chap.\n\n480\n00:24:26.110 --> 00:24:29.630\nAnd from there I need to provide\nthe username and password.\n\n481\n00:24:29.630 --> 00:24:31.670\nAnd unlike when we did\nthis on a serial line,\n\n482\n00:24:31.670 --> 00:24:34.110\nwe're not just gonna use our default\nhost name, we need to provide it.\n\n483\n00:24:34.110 --> 00:24:37.990\nSo I'm gonna say ppp chap hostname\n\n484\n00:24:37.990 --> 00:24:40.520\nfollowed by whatever\nuser name they gave me.\n\n485\n00:24:40.520 --> 00:24:42.910\nSo maybe they tell me hey\nyour user name is dpezet.\n\n486\n00:24:42.910 --> 00:24:44.300\nAll right, well I'm going to put that in.\n\n487\n00:24:44.300 --> 00:24:47.220\nThat's not the host name on my router\nthat's the user name that I was given to\n\n488\n00:24:47.220 --> 00:24:48.610\nauthenticate with.\n\n489\n00:24:48.610 --> 00:24:51.640\nAnd then I can say ppp chap password, and\n\n490\n00:24:51.640 --> 00:24:54.870\nwhatever that password is that\nthey gave me to authenticate with.\n\n491\n00:24:54.870 --> 00:24:57.480\nSo those are the three pieces right\nthere that turn on authentication.\n\n492\n00:24:57.480 --> 00:25:01.130\nAnd if you're using PPPOE,\nthe main reason is authentication.\n\n493\n00:25:01.130 --> 00:25:03.976\nSo those are the three lines\nthat are really important to us.\n\n494\n00:25:03.976 --> 00:25:09.480\nAll right, after that, if I'm doing nat,\nwe usually are with DSL,\n\n495\n00:25:09.480 --> 00:25:14.210\nand so I would do an ip nat outside\nbecause I've got my inside on my LAN.\n\n496\n00:25:14.210 --> 00:25:16.730\nThis would be the outside that I'm gonna\n[INAUDIBLE], so I need to get translated\n\n497\n00:25:16.730 --> 00:25:20.110\nbefore I go across it to whatever\naddress I negotiated there.\n\n498\n00:25:20.110 --> 00:25:21.419\nSo I'm just gonna go ahead and\nput that flag in there.\n\n499\n00:25:22.860 --> 00:25:29.772\nAfter that, remember that I created way\nback here, I said dial-pool-number 1.\n\n500\n00:25:29.772 --> 00:25:32.460\nWell, what I created\nis a dialer interface.\n\n501\n00:25:32.460 --> 00:25:35.110\nThe dialer interface needs\nto be in that pool also.\n\n502\n00:25:35.110 --> 00:25:39.361\nSo, I'm gonna say, dialer pool 1 and\nthat's what actually gonna\n\n503\n00:25:39.361 --> 00:25:43.549\ncreate that pool number one, so\nnow the interface knows about me.\n\n504\n00:25:43.549 --> 00:25:47.920\nAnd that all gets tied\ntogether into a dial-group.\n\n505\n00:25:47.920 --> 00:25:52.770\nAnd I'm gonna stick with, a dialer group,\nand we'll stick with dialer-group 1.\n\n506\n00:25:52.770 --> 00:25:54.860\nAnd the reason you have a dialer group is,\n\n507\n00:25:54.860 --> 00:25:57.640\nI could actually have more than one\ninterface wrapped up into this so\n\n508\n00:25:57.640 --> 00:26:00.170\nthat if one interface failed I\ncould just move on to the next one.\n\n509\n00:26:00.170 --> 00:26:03.558\nAnd we don't use that with Ethernet\nbecause it was designed for dial-up,\n\n510\n00:26:03.558 --> 00:26:05.620\nwhere maybe you get a busy\nsignal on one line.\n\n511\n00:26:05.620 --> 00:26:09.040\nAnd so you move to the next one and\nthe next one because of the busy signals.\n\n512\n00:26:09.040 --> 00:26:10.680\nWe don't get busy signals with Ethernet.\n\n513\n00:26:10.680 --> 00:26:13.970\nSo you usually just have one dialer\ngroup and that's the end of it.\n\n514\n00:26:13.970 --> 00:26:16.570\nAll right, I'm almost done.\n\n515\n00:26:16.570 --> 00:26:20.260\nTechnically, the dialer group is\nconfigured, the interface is configured,\n\n516\n00:26:20.260 --> 00:26:21.740\neverything is the way that I need it.\n\n517\n00:26:21.740 --> 00:26:27.620\nMy only problem is, I need to tell\nit when to use the line, okay.\n\n518\n00:26:27.620 --> 00:26:29.920\nYou have to tell it what's\ncalled interesting traffic.\n\n519\n00:26:29.920 --> 00:26:31.660\nThe line will be down by default and\n\n520\n00:26:31.660 --> 00:26:33.970\nwe have to tell it when to pick up\nthe phone and call the other side.\n\n521\n00:26:33.970 --> 00:26:36.455\nNow it's an Ethernet line, it's always up.\n\n522\n00:26:36.455 --> 00:26:38.425\nBut this is all built around\nthe old dial-up days.\n\n523\n00:26:38.425 --> 00:26:39.685\nAnd then the dial-up days you had to tell,\n\n524\n00:26:39.685 --> 00:26:41.995\nwhat were the trigger\nconditions to make it start.\n\n525\n00:26:41.995 --> 00:26:44.935\nAnd the way we do that is with\nan access list, all right.\n\n526\n00:26:44.935 --> 00:26:46.845\nBut the access list's a little special.\n\n527\n00:26:46.845 --> 00:26:47.845\nWe're gonna have two pieces of this.\n\n528\n00:26:47.845 --> 00:26:49.509\nThis first is the dialer-list.\n\n529\n00:26:49.509 --> 00:26:53.975\nThe dialer-list is basically an access\nlist for the dialer-group, right.\n\n530\n00:26:53.975 --> 00:26:59.713\nAnd so I'm gonna say dialer-list\n1 protocol ip permit.\n\n531\n00:26:59.713 --> 00:27:02.740\nI'm gonna send any IP traffic I want.\n\n532\n00:27:02.740 --> 00:27:06.255\nI could do a filter here and say I'm only\ngonna allow IP traffic that matches this\n\n533\n00:27:06.255 --> 00:27:09.493\ncategory, just TCP, just UDP, and\nyou can get really specific with these.\n\n534\n00:27:09.493 --> 00:27:12.050\nBut when we're talking about\nDSL it's normally really broad.\n\n535\n00:27:12.050 --> 00:27:15.169\nSo I'm just gonna say I'm gonna let all\nIP traffic cross the line all right?\n\n536\n00:27:19.160 --> 00:27:20.740\nSo technically I'm done, right there.\n\n537\n00:27:20.740 --> 00:27:23.460\nHey, I'm just gonna allow anything to\ncross that dial list that wants to.\n\n538\n00:27:23.460 --> 00:27:26.680\nBut if we're doing NAT, we need to get\nthat little piece configured and get that\n\n539\n00:27:26.680 --> 00:27:30.010\nturned on and then we need to setup our\ndefault route to go across the link.\n\n540\n00:27:30.010 --> 00:27:31.100\nSo I'm gonna set up NAT real quick.\n\n541\n00:27:31.100 --> 00:27:32.950\nAnd I'll just go really\nbroad with NAT also.\n\n542\n00:27:32.950 --> 00:27:37.367\nI'm gonna say access-list\n1 permit 0.0.0.0,\n\n543\n00:27:37.367 --> 00:27:44.460\n255.255.255.255, actually we can\nshorten that and just say permit any.\n\n544\n00:27:46.640 --> 00:27:50.600\nAnd so now I'm gonna be allowing\nanybody to get natted and\n\n545\n00:27:50.600 --> 00:27:54.836\nthen I'll just say ip nat\ninside source list 1.\n\n546\n00:27:54.836 --> 00:28:02.140\nInterface dialer one overload, right?\n\n547\n00:28:02.140 --> 00:28:07.396\nSo I'm doing nat, and I'm doing pat also,\nPort Address Translation.\n\n548\n00:28:07.396 --> 00:28:10.070\nSo I'm overloading the IP\naddress that's on dialer 1.\n\n549\n00:28:10.070 --> 00:28:12.190\nWhere does dialer 1 get its IP address?\n\n550\n00:28:12.190 --> 00:28:13.230\nIt's negotiated.\n\n551\n00:28:13.230 --> 00:28:16.410\nIt's coming from the service\nprovider when I connect.\n\n552\n00:28:16.410 --> 00:28:19.780\nAnd so now I'm gonna be\nnatting across that right?\n\n553\n00:28:19.780 --> 00:28:21.913\nAnd the last thing I need to do\nis set my default route, and so\n\n554\n00:28:21.913 --> 00:28:23.119\nI would say something like this.\n\n555\n00:28:23.119 --> 00:28:29.642\nIP route 0.0.0.0, 0.0.0.0 and\nI would point that out dialer 1.\n\n556\n00:28:29.642 --> 00:28:31.072\nAnd so now any time I try and\n\n557\n00:28:31.072 --> 00:28:35.392\naccess a network that is not on my routing\ntable I'm gonna send it to dialer 1.\n\n558\n00:28:35.392 --> 00:28:39.620\ndialer 1 is gonna make sure I match\nthe access to the list, the dialer list,\n\n559\n00:28:39.620 --> 00:28:42.210\nwhich permits any ip traffic so\nI'll be permitted.\n\n560\n00:28:42.210 --> 00:28:45.140\nAnd then it's gonna see that it's natted\nand it'll make sure that I match that.\n\n561\n00:28:45.140 --> 00:28:49.930\nI'm matching anything so it'll nat me, and\nthen it'll reach out and send my username\n\n562\n00:28:49.930 --> 00:28:54.940\nand password to the ISP, bring the link\nup, and now we're able to communicate.\n\n563\n00:28:54.940 --> 00:28:56.530\nIt's a lot of commands, right?\n\n564\n00:28:56.530 --> 00:29:00.640\nIf we look that configuration here\nwith the show running-config,\n\n565\n00:29:00.640 --> 00:29:02.970\nit's a lot of commands to\nget this put in place, but\n\n566\n00:29:02.970 --> 00:29:06.570\nit's one of those where once it's\ndone you never touch it again.\n\n567\n00:29:06.570 --> 00:29:10.280\nAnd the whole purpose of it was\nsimply to authenticate that link.\n\n568\n00:29:10.280 --> 00:29:14.720\nAnd so if I move through and find\neverything that I did on the interface\n\n569\n00:29:14.720 --> 00:29:20.680\nitself, pppoe enable, which I didn't\ndo it, it did it automatically for me.\n\n570\n00:29:20.680 --> 00:29:23.610\nAnd then pppoe client, dial-pool-number 1.\n\n571\n00:29:23.610 --> 00:29:26.790\nSo I tied this interface\nto dial-pool-number 1.\n\n572\n00:29:26.790 --> 00:29:30.780\nAnd then after that,\nwe get to the dialer interface itself.\n\n573\n00:29:30.780 --> 00:29:32.270\nAnd that's where most of my work was,\n\n574\n00:29:32.270 --> 00:29:37.240\nright, where I set the mtu,\nI negotiated my ip, I turned on nat.\n\n575\n00:29:37.240 --> 00:29:40.250\nI tied it to dialer pool 1 and\ndialer-group 1 and\n\n576\n00:29:40.250 --> 00:29:43.720\nthen I set my username and password for\nauthentication on that link, right.\n\n577\n00:29:43.720 --> 00:29:46.780\nSo all that work got done\nright there in the dialer.\n\n578\n00:29:46.780 --> 00:29:49.540\nAnd after that it was just straight\nup nat and a default route for\n\n579\n00:29:49.540 --> 00:29:51.050\nhow to get there, right?\n\n580\n00:29:51.050 --> 00:29:52.800\nAnd that's all standard stuff.\n\n581\n00:29:52.800 --> 00:29:55.110\nNow that it's configured,\nwe're in business.\n\n582\n00:29:55.110 --> 00:29:57.120\nAnd when you do show ip interface brief,\n\n583\n00:29:58.410 --> 00:30:01.720\nyou'll actually see\nthe dialer right there.\n\n584\n00:30:01.720 --> 00:30:04.700\nAnd my dialer right now\nis showing as up up.\n\n585\n00:30:04.700 --> 00:30:05.630\nIt's ready to work.\n\n586\n00:30:05.630 --> 00:30:06.770\nIt's ready to send traffic.\n\n587\n00:30:06.770 --> 00:30:08.640\nAnd if it communicates.,\nit's going to authenticate.\n\n588\n00:30:08.640 --> 00:30:11.121\nNow it hasn't actually communicated yet.\n\n589\n00:30:11.121 --> 00:30:14.140\nAnd when I do it, my username and password\nis gonna fail because there's nobody on\n\n590\n00:30:14.140 --> 00:30:15.740\nthe other side and\nthe line will go up down.\n\n591\n00:30:15.740 --> 00:30:17.050\nThe interface will be up but\n\n592\n00:30:17.050 --> 00:30:20.690\nthe protocol will be down because\nit's not connected to the other side.\n\n593\n00:30:20.690 --> 00:30:22.740\nSo, that's an important part of that.\n\n594\n00:30:22.740 --> 00:30:25.610\nBut you have a few other\ncommands like show pppoe session.\n\n595\n00:30:27.280 --> 00:30:29.880\nWhere you can actually see if you're\nauthenticated against someone on\n\n596\n00:30:29.880 --> 00:30:30.440\nthe other side.\n\n597\n00:30:30.440 --> 00:30:33.410\nSee how my locMAC,\nRemMAC are all zeroed out?\n\n598\n00:30:33.410 --> 00:30:36.990\nI'm not connected to anybody,\nright, so it's not actually up.\n\n599\n00:30:36.990 --> 00:30:40.330\nAnd it's just sitting right\ndown here not doing anything.\n\n600\n00:30:40.330 --> 00:30:43.700\nAnd then if we really wanted to,\nwe could do debug\n\n601\n00:30:43.700 --> 00:30:47.940\nppp authentication like we saw earlier\nif we think our password is failing.\n\n602\n00:30:47.940 --> 00:30:50.730\nBut you can also do debug pppoe.\n\n603\n00:30:50.730 --> 00:30:55.852\nAnd inside of debug pppoe, you could do\nthe raw data errors, events, packets.\n\n604\n00:30:55.852 --> 00:30:58.763\nThere's all sorts of stuff in here that\nwe can debug with pppoe to see it in\n\n605\n00:30:58.763 --> 00:30:59.860\naction, right.\n\n606\n00:30:59.860 --> 00:31:04.927\nSo if I were to say events, and\nin my routing table if I look I've\n\n607\n00:31:04.927 --> 00:31:10.397\ngot a routing entry in here for\n0.0.0.0 going out dialer 1.\n\n608\n00:31:10.397 --> 00:31:15.368\nSo if I try and ping some network that's\nnot in my routing table it's gonna\n\n609\n00:31:15.368 --> 00:31:19.309\nhit 0.0.0.0,\nwhich is gonna go to that dialer 1.\n\n610\n00:31:19.309 --> 00:31:22.996\nAnd so right now in the background\nit's trying to bring dialer 1 up, and\n\n611\n00:31:22.996 --> 00:31:24.790\ndialer 1 should fail.\n\n612\n00:31:24.790 --> 00:31:28.070\nWell dialer 1 never comes up,\npppoe can never trigger, and so\n\n613\n00:31:28.070 --> 00:31:29.460\nthat's why I didn't get any debugs there.\n\n614\n00:31:29.460 --> 00:31:32.160\nSo I had to debug the dialer\nalso to get that far.\n\n615\n00:31:32.160 --> 00:31:33.962\nWell actually there, it timed out.\n\n616\n00:31:33.962 --> 00:31:34.474\n[LAUGH]\n&gt;&gt; [LAUGH]\n\n617\n00:31:34.474 --> 00:31:35.350\n&gt;&gt; So it\n\n618\n00:31:35.350 --> 00:31:39.320\ndid finally show the timeout there on fast\nethernet 2/0 that it never was actually\n\n619\n00:31:39.320 --> 00:31:41.350\nable to reach out to\nsomebody on the other side.\n\n620\n00:31:41.350 --> 00:31:42.910\nSo we can see that happen but\n\n621\n00:31:42.910 --> 00:31:46.518\nreally the only true example of\nthis is when you've got DSL.\n\n622\n00:31:46.518 --> 00:31:49.290\nBut they will make you do authentication\nand a lot of them do the authentication on\n\n623\n00:31:49.290 --> 00:31:52.200\nthe DSL modem so\nyou don't have to do it in your router.\n\n624\n00:31:52.200 --> 00:31:53.830\nAnd in that case you'd never see it.\n\n625\n00:31:53.830 --> 00:31:58.325\nBut Cisco does sell a WIC card that has\nthe DSL modem built in the WIC card.\n\n626\n00:31:58.325 --> 00:32:01.517\nYou pop it in your router, and\nthen you find yourself right here and\n\n627\n00:32:01.517 --> 00:32:05.450\nthat's the scenario where you use this,\nis if you've got the card in the router.\n\n628\n00:32:06.850 --> 00:32:07.680\nBut that's basically it.\n\n629\n00:32:07.680 --> 00:32:08.660\nI know it's a lot of commands.\n\n630\n00:32:08.660 --> 00:32:09.880\nIt is on the exam.\n\n631\n00:32:09.880 --> 00:32:11.600\nThey don't normally ask you\nto configure it though.\n\n632\n00:32:11.600 --> 00:32:13.420\nThey normally just show you a config and\n\n633\n00:32:13.420 --> 00:32:15.970\nyou might have to spot an error\ninside it or something like that.\n\n634\n00:32:15.970 --> 00:32:17.340\nBut do be familiar with it.\n\n635\n00:32:17.340 --> 00:32:19.470\nIt's one of those things that I\nhate to show you cuz I know you're\n\n636\n00:32:19.470 --> 00:32:21.710\nnot gonna use it in real life but\nit is on the exam.\n\n637\n00:32:21.710 --> 00:32:25.528\n&gt;&gt; Well, Don it might be complex but\nat least it's difficult, right?\n\n638\n00:32:25.528 --> 00:32:26.033\n[LAUGH]\n&gt;&gt; That is right.\n\n639\n00:32:26.033 --> 00:32:27.124\n&gt;&gt; Got that going for us.\n\n640\n00:32:27.124 --> 00:32:27.984\nWith that being said,\n\n641\n00:32:27.984 --> 00:32:29.390\nwhat does it tell us?\nThat means,\n\n642\n00:32:29.390 --> 00:32:33.504\nwe need to spend a little bit time looking\nover using PPOE because it can trip you up\n\n643\n00:32:33.504 --> 00:32:37.577\nif they ask you some questions about it.\nYou wanna be able to spot those little,\n\n644\n00:32:37.577 --> 00:32:40.553\nthere's my problem right there,\nI didn't setup the dialer,\n\n645\n00:32:40.553 --> 00:32:42.490\nor whatever the question might be.\n\n646\n00:32:42.490 --> 00:32:43.180\nSo be aware.\n\n647\n00:32:43.180 --> 00:32:44.430\nBe familiar with this.\n\n648\n00:32:44.430 --> 00:32:45.750\nLook over it quite a few times.\n\n649\n00:32:45.750 --> 00:32:48.450\nBecause of its complexity,\nit might be able to snatch you, and\n\n650\n00:32:48.450 --> 00:32:49.650\nwe don't want to see that happen.\n\n651\n00:32:49.650 --> 00:32:51.750\nDon, great demonstration the other day,\nwalked right through it.\n\n652\n00:32:51.750 --> 00:32:52.860\nWe appreciate that.\n\n653\n00:32:52.860 --> 00:32:55.680\nShowed us how to do it, so\nthat we are a little more familiar.\n\n654\n00:32:55.680 --> 00:32:58.140\nSometimes you're trying to\nfigure this stuff out, and\n\n655\n00:32:58.140 --> 00:33:02.290\nyou just need someone to show it to you,\nso you can see how it works in practicum.\n\n656\n00:33:02.290 --> 00:33:04.400\nThat's what we saw today,\nand we appreciate that.\n\n657\n00:33:04.400 --> 00:33:07.280\nBut looks like our time is expired for\nthis episode.\n\n658\n00:33:07.280 --> 00:33:11.430\nWe appreciate your time with us today,\nand we appreciate you watching us.\n\n659\n00:33:11.430 --> 00:33:13.100\nBut we're gonna go ahead and sign off.\n\n660\n00:33:13.100 --> 00:33:15.690\nFor ITProTV, I've been your host,\nDaniel Lowrie.\n\n661\n00:33:15.690 --> 00:33:16.480\n&gt;&gt; And I'm Don Pezet.\n\n662\n00:33:16.480 --> 00:33:20.455\n&gt;&gt; We'll see you next time.\n\n663\n00:33:20.455 --> 00:33:27.340\n[SOUND]\n\n",
          "vimeoId": "181122648"
        },
        {
          "description": "In this episode, Daniel and Don introduce you to a handy little protocol known \nas Generic Routing Encapsulation(GRE). They show you some of the ways the GRE can be useful; ways like masking network complexity, link failure detection, easy redundant link configuration, and easy firewall configuration.",
          "length": "2341",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/cisco-ccna200105/cisco-ccna200105-3-2-gre_tunnels-083116-1.jpg",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/cisco-ccna200105/cisco-ccna200105-3-2-gre_tunnels-083116-1-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/cisco-ccna200105/cisco-ccna200105-3-2-gre_tunnels-083116-1-sm.jpg",
          "title": "Generic Routing Encapsulation (GRE)",
          "transcript": "WEBVTT\n\n1\n00:00:00.143 --> 00:00:10.143\n[MUSIC]\n\n2\n00:00:12.572 --> 00:00:16.858\nGreetings everyone and welcome to another\ngreat episode of ITProTV, I'm your host,\n\n3\n00:00:16.858 --> 00:00:17.690\nDaniel Lowrie.\n\n4\n00:00:17.690 --> 00:00:21.060\nIn today's episode, we continue on\nwith more on our CCNA routing and\n\n5\n00:00:21.060 --> 00:00:22.320\nswitching series.\n\n6\n00:00:22.320 --> 00:00:26.390\nAnd joining us back in the studio\nagain to lend his massive\n\n7\n00:00:26.390 --> 00:00:29.730\nexpertise on that subject,\nour good friend, Mr. Don Pezet.\n\n8\n00:00:29.730 --> 00:00:31.540\nDon, welcome back, I was gonna say Ego,\n\n9\n00:00:31.540 --> 00:00:33.210\nbut-\n&gt;&gt; Well, that is that, so\n\n10\n00:00:33.210 --> 00:00:35.554\nif my head can fit on\nthe screen all at once.\n\n11\n00:00:35.554 --> 00:00:38.912\nWell, ladies and gentlemen, we're diving\nright back into the world of Cisco, and\n\n12\n00:00:38.912 --> 00:00:41.480\nin this episode we're gonna\nlook at a strange technology.\n\n13\n00:00:41.480 --> 00:00:46.060\nWe're gonna look at what's called generic\nrouting encapsulation, or GRE tunnels.\n\n14\n00:00:46.060 --> 00:00:49.550\nAnd when I say the word tunnel,\nthe first thing that pops into my mind,\n\n15\n00:00:49.550 --> 00:00:51.100\nvirtual private network, VPNs.\n\n16\n00:00:51.100 --> 00:00:53.498\nWe build a VPN tunnels all the time.\n\n17\n00:00:53.498 --> 00:00:57.507\nAnytime you wanna send traffic across\nan un-trusted network like the internet,\n\n18\n00:00:57.507 --> 00:00:58.735\nyou whip up a VPN tunnel.\n\n19\n00:00:58.735 --> 00:01:00.640\nAnd what's the purpose of that VPN tunnel?\n\n20\n00:01:00.640 --> 00:01:03.332\nTo take your data,\nscramble it around a bit, and\n\n21\n00:01:03.332 --> 00:01:07.730\nthen throw it through a connection\nthat's not necessarily trustworthy.\n\n22\n00:01:07.730 --> 00:01:11.485\nAnd if somebody intercepts it,\nthey can read that data and see nothing.\n\n23\n00:01:11.485 --> 00:01:13.480\nIt's just cipher text.\n\n24\n00:01:13.480 --> 00:01:14.200\nEncrypted data.\n\n25\n00:01:14.200 --> 00:01:17.450\nAnd then, it gets received at the other\nend where it gets unwrapped and\n\n26\n00:01:17.450 --> 00:01:19.500\ndumped on the other side\nof the network safely.\n\n27\n00:01:19.500 --> 00:01:21.890\nSo a VPN makes sense.\n\n28\n00:01:21.890 --> 00:01:23.900\nWe know exactly what that does.\n\n29\n00:01:23.900 --> 00:01:26.710\nWell, in this episode we're\ngoing to look at GRE tunnels\n\n30\n00:01:26.710 --> 00:01:28.940\nwhich are generic routing\nencapsulation tunnels.\n\n31\n00:01:28.940 --> 00:01:32.350\nWhich work almost the same as VPN tunnels.\n\n32\n00:01:32.350 --> 00:01:36.920\nI'm building a tunnel from one router\nto another router somewhere else, and\n\n33\n00:01:36.920 --> 00:01:39.320\nI'm sending my data across it.\n\n34\n00:01:39.320 --> 00:01:42.308\nThe only difference\nbetween a GRE tunnel and\n\n35\n00:01:42.308 --> 00:01:45.711\na VPN is that GRE tunnels\ndon't encrypt the data.\n\n36\n00:01:45.711 --> 00:01:47.600\nLet's think about that for a second.\n\n37\n00:01:47.600 --> 00:01:49.440\nI'm building a tunnel.\n\n38\n00:01:49.440 --> 00:01:51.280\nAnd it doesn't encrypt the data.\n\n39\n00:01:51.280 --> 00:01:53.070\nThe data just sits-\n&gt;&gt; So what's the purpose?\n\n40\n00:01:53.070 --> 00:01:53.740\n&gt;&gt; Exactly, right.\n\n41\n00:01:53.740 --> 00:01:55.700\nWhy would I even wanna bother with this?\n\n42\n00:01:55.700 --> 00:01:59.410\nAnd GRE tunnels have one primary purpose,\nand\n\n43\n00:01:59.410 --> 00:02:01.230\nit's a purpose that most people\nnever have to deal with.\n\n44\n00:02:01.230 --> 00:02:03.970\nSo GRE tunnels don't get\nused all that often.\n\n45\n00:02:03.970 --> 00:02:07.290\nTheir purpose Is to hide\nnetwork complexity.\n\n46\n00:02:08.600 --> 00:02:10.380\nNow, what do I mean by that?\n\n47\n00:02:10.380 --> 00:02:13.510\nIn a local area network,\nyou normally have a pretty simple design.\n\n48\n00:02:13.510 --> 00:02:16.360\nYou have a core, your distribution layer,\nand your access layer.\n\n49\n00:02:16.360 --> 00:02:19.460\nAnd you've got switches and routers\nwho build up those different layers.\n\n50\n00:02:19.460 --> 00:02:21.880\nAnd it's pretty hierarchical,\nit makes sense.\n\n51\n00:02:21.880 --> 00:02:25.350\nBut when you get to the WAN,\nwhen you get to the wide area network,\n\n52\n00:02:25.350 --> 00:02:29.990\nthings get screwy, things get scrambly,\nand what you get is maybe I buy a T1 line,\n\n53\n00:02:29.990 --> 00:02:35.620\nand that T1 line is supposed to connect\nme to a building in another state,\n\n54\n00:02:35.620 --> 00:02:37.440\nor another country for that matter.\n\n55\n00:02:37.440 --> 00:02:39.540\nSo I have T1 lines on both ends.\n\n56\n00:02:39.540 --> 00:02:41.348\nMaybe they connect to the internet,\nmaybe they don't.\n\n57\n00:02:41.348 --> 00:02:46.850\nBut either way, I plug that T1\nline into a router on my end.\n\n58\n00:02:46.850 --> 00:02:50.460\nI plug the other end of that line\ninto a router at the other location.\n\n59\n00:02:50.460 --> 00:02:53.440\nThat seems simple, but\nwhat's in between them?\n\n60\n00:02:53.440 --> 00:02:57.466\nIn between them is 1 or\nmore telephone companies, and\n\n61\n00:02:57.466 --> 00:03:02.290\nlikely 10s if not 20 switches\nin between us and the other end.\n\n62\n00:03:02.290 --> 00:03:04.050\nAnd we may get routed\nthrough different networks.\n\n63\n00:03:04.050 --> 00:03:06.820\nAny time you do a trace route across\nthe Internet you see how many routers you\n\n64\n00:03:06.820 --> 00:03:09.090\nbounce through before you get\nto your actual destination.\n\n65\n00:03:09.090 --> 00:03:11.130\nThere's a lot of complexity out there.\n\n66\n00:03:11.130 --> 00:03:17.440\nComplexity that we can see that we\ncannot influence one single bit.\n\n67\n00:03:17.440 --> 00:03:20.220\nOnce I hand my traffic\noff to an ISP they're\n\n68\n00:03:20.220 --> 00:03:22.230\nthe ones who determine where it goes.\n\n69\n00:03:22.230 --> 00:03:24.050\nI can't influence that path at all.\n\n70\n00:03:24.050 --> 00:03:27.090\nSo that network complexity\nthat's out there\n\n71\n00:03:27.090 --> 00:03:29.990\nis beyond my control\nI've no control over it.\n\n72\n00:03:29.990 --> 00:03:33.500\nSo what if I wanna learn\nsomething like a routing protocol?\n\n73\n00:03:33.500 --> 00:03:35.260\nWhat if I wanna run OSPF?\n\n74\n00:03:35.260 --> 00:03:37.780\nOr EIGRP or, God forbid, RIP.\n\n75\n00:03:37.780 --> 00:03:42.080\nIf I wanna run one of those protocols,\nand I have my home office, and\n\n76\n00:03:42.080 --> 00:03:43.500\nI have a branch office.\n\n77\n00:03:43.500 --> 00:03:47.030\nAnd I've got a link between them, maybe I\nhave a cable modem at the branch office,\n\n78\n00:03:47.030 --> 00:03:50.950\nand I've got metro Ethernet\nat my home office.\n\n79\n00:03:50.950 --> 00:03:54.720\nWell, the ISP network is in between,\nor the Internet is in between.\n\n80\n00:03:54.720 --> 00:03:58.260\nAnd can I run OSPF or EIGRP and\njust throw it on the Internet?\n\n81\n00:03:58.260 --> 00:04:00.850\nNo, cuz I don't have control over\nany of that other equipment.\n\n82\n00:04:00.850 --> 00:04:04.210\nIf I start sending EIGRP\nhello packets up to my ISP,\n\n83\n00:04:04.210 --> 00:04:07.320\nthey're just gonna ignore them and\ndrop them.\n\n84\n00:04:07.320 --> 00:04:10.640\nMaybe I can sign up for an MPLS line.\n\n85\n00:04:10.640 --> 00:04:14.110\nWith MPLS, the multi-layer\npacket label switching networks.\n\n86\n00:04:14.110 --> 00:04:18.400\nThey hide the complexity by labeling\nthe data, routing it along and\n\n87\n00:04:18.400 --> 00:04:19.930\ndoing all that invisible to me.\n\n88\n00:04:19.930 --> 00:04:22.320\nMPLS is basically like\na layer two replacement.\n\n89\n00:04:22.320 --> 00:04:25.430\nBut if I have a standard Internet\nconnection there's no isolation,\n\n90\n00:04:25.430 --> 00:04:26.215\nthere's no labeling.\n\n91\n00:04:26.215 --> 00:04:28.690\nI'm going on the same Internet\nas everybody else and so\n\n92\n00:04:28.690 --> 00:04:32.200\nI cant run a dynamic routing protocol\nover that type of connection.\n\n93\n00:04:33.270 --> 00:04:34.510\nOr can I?\n\n94\n00:04:34.510 --> 00:04:39.655\nI could if I built a tunnel between me and\nthe other side, and\n\n95\n00:04:39.655 --> 00:04:42.905\nhid all the complexity,\nhid the fat that the internet was there,\n\n96\n00:04:42.905 --> 00:04:45.945\nhid the fact that the telephone\ncompany's network was there.\n\n97\n00:04:45.945 --> 00:04:50.295\nI can hide all that and\nfake it look like a point to point line,\n\n98\n00:04:50.295 --> 00:04:54.905\nand that's exactly what GRE does is it\nmakes it look like you have a point to\n\n99\n00:04:54.905 --> 00:04:58.455\npoint line when the reality you have\na massive complex network under the hood.\n\n100\n00:04:58.455 --> 00:05:01.685\n&gt;&gt; Don, is this like a cheaper alternative\nto having something like a lease line of\n\n101\n00:05:01.685 --> 00:05:02.980\nserial connection?\n\n102\n00:05:02.980 --> 00:05:04.100\n&gt;&gt; It is.\n\n103\n00:05:04.100 --> 00:05:06.620\nAnd if you trust the network\nit's a great solution.\n\n104\n00:05:06.620 --> 00:05:10.610\nBut most of the time when we get a line\nlike this you don't trust the connection.\n\n105\n00:05:10.610 --> 00:05:11.620\nSo what do you do?\n\n106\n00:05:11.620 --> 00:05:12.630\nYou build a VPN tunnel.\n\n107\n00:05:12.630 --> 00:05:14.510\nAnd if you have a VPN\ntunnel you don't need GRE.\n\n108\n00:05:14.510 --> 00:05:17.170\nAnd that's why we don't\nuse GRE very often.\n\n109\n00:05:17.170 --> 00:05:19.480\nBut on the exam objectives\nthey call out GRE.\n\n110\n00:05:19.480 --> 00:05:22.100\nSo we need to know how it works and it is\na great way to get started with tunnels.\n\n111\n00:05:22.100 --> 00:05:24.450\nBecause configuring a VPN\nis actually pretty hard.\n\n112\n00:05:24.450 --> 00:05:28.460\nWhat we're gonna see here is configuring\na GRE tunnel, which is really simple.\n\n113\n00:05:28.460 --> 00:05:30.120\nIt's also the same steps we followed for\n\n114\n00:05:30.120 --> 00:05:34.400\nthe beginning of the VPN and then you\nadd encryption on to the GRE tunnel.\n\n115\n00:05:34.400 --> 00:05:36.440\nNow you've go a VPN, right?\n\n116\n00:05:36.440 --> 00:05:40.080\nBut the GRE tunnel by itself is\nnot encrypting or securing data.\n\n117\n00:05:40.080 --> 00:05:41.360\nIt's not even digitally signing it.\n\n118\n00:05:41.360 --> 00:05:43.680\nIt's just setting the data in its regular,\nold format.\n\n119\n00:05:43.680 --> 00:05:47.300\nSo it needs to be a network that we\ntrust and then we can throw it across.\n\n120\n00:05:47.300 --> 00:05:50.760\nI'm gonna use my network topology that\nwe've been using for all of our labs.\n\n121\n00:05:50.760 --> 00:05:53.280\nWhich is somewhat simple but\nI've made a few changes to it.\n\n122\n00:05:53.280 --> 00:05:55.330\nSo let's recap this guy real quick.\n\n123\n00:05:55.330 --> 00:05:57.330\nI've got router one here on the left.\n\n124\n00:05:57.330 --> 00:06:01.220\nAnd router 1 is plugged into\nthe 192.168.0.0/24 network.\n\n125\n00:06:02.580 --> 00:06:05.661\nOn router 6,\nway over here on the other side,\n\n126\n00:06:05.661 --> 00:06:10.014\nwe're connected to\nthe 172.16.0.0/16 network.\n\n127\n00:06:10.014 --> 00:06:11.524\nMaybe this is my headquarters.\n\n128\n00:06:11.524 --> 00:06:15.000\n172.16.0.0/16, nice big network.\n\n129\n00:06:15.000 --> 00:06:17.580\nAnd then, router one way over here,\nmaybe this is the branch office, and so\n\n130\n00:06:17.580 --> 00:06:19.490\nI've got just a class C on it.\n\n131\n00:06:19.490 --> 00:06:25.920\nSo I wanna be able to run EIGRP or\nOSPF between these routers.\n\n132\n00:06:25.920 --> 00:06:29.090\nSo I have a dynamic routing table that\ngets built up with all these networks.\n\n133\n00:06:29.090 --> 00:06:32.070\nSo I might have a hundred other branches\nand I want them all to show up too.\n\n134\n00:06:32.070 --> 00:06:36.740\nBut the problem is, I've got this internet\nservice provider sitting in between me,\n\n135\n00:06:36.740 --> 00:06:38.000\nor one or more.\n\n136\n00:06:38.000 --> 00:06:39.210\nAnd I've got multiple paths.\n\n137\n00:06:39.210 --> 00:06:42.180\nSee how I can go two different\nroutes to get to the other side.\n\n138\n00:06:42.180 --> 00:06:44.290\nWell, how do I learn about those routes?\n\n139\n00:06:44.290 --> 00:06:45.670\nIs it even worth learning\nabout the routes?\n\n140\n00:06:45.670 --> 00:06:46.730\nThe short answer is no.\n\n141\n00:06:46.730 --> 00:06:50.610\nIt's not worth learning the routes because\nthe ISP is gonna manage that traffic.\n\n142\n00:06:50.610 --> 00:06:56.260\nSo what I might choose to do is come\nin and just build tunnels myself,\n\n143\n00:06:56.260 --> 00:06:59.890\nand build a tunnel to hide all\nof these routers in between.\n\n144\n00:07:01.050 --> 00:07:06.052\nIf I turn on OSPF on router 1, I'm not\ngonna get any cuz the ISP router 2 and\n\n145\n00:07:06.052 --> 00:07:09.160\nrouter 3 here are not gonna answer me.\n\n146\n00:07:09.160 --> 00:07:13.897\nAnd if I turn on OSPF on router 6, router\n4 and router 5 aren't gonna talk to it\n\n147\n00:07:13.897 --> 00:07:18.660\nbecause they are not ISP, they're not\ngonna run a interior gateway protocol.\n\n148\n00:07:18.660 --> 00:07:20.310\nIf I want anything,\nthat would have be BGP,\n\n149\n00:07:20.310 --> 00:07:22.350\nborder gateway protocol\nto communicate with them.\n\n150\n00:07:22.350 --> 00:07:24.266\nAnd that's a pain in the butt so\nI don't want to do that.\n\n151\n00:07:24.266 --> 00:07:25.380\n[LAUGH] So we're gonna try and\n\n152\n00:07:25.380 --> 00:07:28.960\nkeep this simple and build a tunnel\nacross the links to hide that.\n\n153\n00:07:28.960 --> 00:07:31.950\nNow, I can go really easy or\nI can go really complex.\n\n154\n00:07:31.950 --> 00:07:32.900\nReally easy?\n\n155\n00:07:32.900 --> 00:07:34.220\nI just build one tunnel.\n\n156\n00:07:34.220 --> 00:07:35.750\nAnd I don't really care\nwhich path I follow.\n\n157\n00:07:35.750 --> 00:07:36.930\nIf I go across the top path or\n\n158\n00:07:36.930 --> 00:07:39.030\nthe bottom path who cares as\nlong as I build the tunnel and\n\n159\n00:07:39.030 --> 00:07:43.920\nget it in place or I can get really\nspecific, I can build two tunnels.\n\n160\n00:07:43.920 --> 00:07:46.990\nOne tunnel when across the top link and\none tunnel when across the bottom link.\n\n161\n00:07:46.990 --> 00:07:48.662\nMaybe to two different ISPs.\n\n162\n00:07:48.662 --> 00:07:54.240\nAnd so, I might have level three\ncommunications last line and\n\n163\n00:07:54.240 --> 00:07:56.991\nI might have AT&amp;T DSL's back up.\n\n164\n00:07:56.991 --> 00:07:59.105\nAnd so\nI can build two different tunnels and\n\n165\n00:07:59.105 --> 00:08:02.500\nuse metrics to influence which\ntunnel I prefer over the other.\n\n166\n00:08:02.500 --> 00:08:05.210\nSo I can really get involved\nin this stuff if I want.\n\n167\n00:08:05.210 --> 00:08:07.270\nI can even go crazy and load balance.\n\n168\n00:08:07.270 --> 00:08:10.850\nLoad balancing is really tricky when you\nhave different distances in between these\n\n169\n00:08:10.850 --> 00:08:11.415\nlinks.\n\n170\n00:08:11.415 --> 00:08:15.805\nWhen I use the tunnels, I can completely\ninfluence that and really manipulate it.\n\n171\n00:08:15.805 --> 00:08:17.955\nAnother thing is routing\nprotocols like rip.\n\n172\n00:08:17.955 --> 00:08:19.905\nRemember how rip has a maximum hop count.\n\n173\n00:08:19.905 --> 00:08:23.055\nMaximum hop count of 15 hops, we need\nthe 16th, it's dead in the water, right?\n\n174\n00:08:23.055 --> 00:08:23.685\nThat's the end of it.\n\n175\n00:08:23.685 --> 00:08:25.815\nSo 15 hop count max.\n\n176\n00:08:25.815 --> 00:08:30.685\nIf I use GRE tunnels, I can hide hops and\nnow I can extend rip to go even further.\n\n177\n00:08:30.685 --> 00:08:34.340\nWe don't want to run rip anyway, but\nif we do, here's a way we can extend it.\n\n178\n00:08:34.340 --> 00:08:37.010\nSo a lot of weird uses for GRE.\n\n179\n00:08:37.010 --> 00:08:39.460\nIt's got some purposes,\nsecurity is not one of them.\n\n180\n00:08:39.460 --> 00:08:44.608\n&gt;&gt; I have heard of it being used in to\nstop distributing denial service tax,\n\n181\n00:08:44.608 --> 00:08:47.090\nin some way shape or form.\n\n182\n00:08:47.090 --> 00:08:49.822\nAnd maybe use it with another\ndevice [INAUDIBLE] in general,\n\n183\n00:08:49.822 --> 00:08:51.250\nis able to help mitigate that.\n\n184\n00:08:51.250 --> 00:08:54.990\n&gt;&gt; If you have more than one ISP and the\nattacks are coming in on one set of lines,\n\n185\n00:08:54.990 --> 00:08:57.720\nyou can always use the GRE\ntunnel to another ISP.\n\n186\n00:08:57.720 --> 00:08:59.210\nYour IP's don't really change.\n\n187\n00:08:59.210 --> 00:09:00.530\nYour network appears the same.\n\n188\n00:09:00.530 --> 00:09:03.680\nYour routing work flows stay the same but\nnow you've moved over to another ISP.\n\n189\n00:09:03.680 --> 00:09:07.330\nSo you didn't fix the denial of service.\n\n190\n00:09:07.330 --> 00:09:07.950\nYou really can't.\n\n191\n00:09:07.950 --> 00:09:09.660\nYou have to find who is doing it and\nstop them.\n\n192\n00:09:09.660 --> 00:09:11.360\nBut you've redirected around it.\n\n193\n00:09:11.360 --> 00:09:13.040\nSo yeah there's a number\nof different uses.\n\n194\n00:09:13.040 --> 00:09:14.950\nYou can get really\ncreative with GRE tunnels.\n\n195\n00:09:14.950 --> 00:09:16.650\nYou can also cause a lot of problems.\n\n196\n00:09:16.650 --> 00:09:19.940\nWe've got to be careful when we configure\na GRE tunnel to make sure we do it right,\n\n197\n00:09:19.940 --> 00:09:22.240\nbecause you can end up with some types\nof routing loops and things like that.\n\n198\n00:09:22.240 --> 00:09:23.810\nYou just have to be careful with it.\n\n199\n00:09:23.810 --> 00:09:27.870\nBut basically what I wanna do is I wanna\nbuild a GRE tunnel from router one\n\n200\n00:09:27.870 --> 00:09:28.990\nto router six.\n\n201\n00:09:28.990 --> 00:09:33.660\nAnd I'm gonna allow that to hide all\nthe stuff that's going on in between.\n\n202\n00:09:33.660 --> 00:09:35.430\nNow, this ISP network's fake.\n\n203\n00:09:35.430 --> 00:09:36.610\nAnd so I've made it.\n\n204\n00:09:36.610 --> 00:09:39.820\nI actually have access and control to it,\nbut I'm not gonna mess with those routers.\n\n205\n00:09:39.820 --> 00:09:42.900\nThe ISPs are running their\nown routing protocols and\n\n206\n00:09:42.900 --> 00:09:45.360\nexchanging routes and talking to\neach other and all that good stuff.\n\n207\n00:09:45.360 --> 00:09:46.780\nI'm not going to mess with that.\n\n208\n00:09:46.780 --> 00:09:48.000\nI'm gonna leave that be.\n\n209\n00:09:48.000 --> 00:09:48.746\nAnd Router 1 and\n\n210\n00:09:48.746 --> 00:09:52.370\nRouter 6 I've got configured just\nlike a regular old system would be.\n\n211\n00:09:52.370 --> 00:09:54.710\nRouter 1 has two default gateways.\n\n212\n00:09:54.710 --> 00:09:58.590\nOne default gateway is Router 2 and one\ndefault gateway is Router 3, the two ISPs.\n\n213\n00:09:58.590 --> 00:10:00.290\nAnd Router 6 has two default gateways.\n\n214\n00:10:00.290 --> 00:10:02.200\nOne is Router 4 and one is Router 5.\n\n215\n00:10:02.200 --> 00:10:03.240\nSo really straightforward.\n\n216\n00:10:03.240 --> 00:10:03.930\nIf I jump over and\n\n217\n00:10:03.930 --> 00:10:09.020\ntake a look at those routers,\nI'll start here on good old Router 1.\n\n218\n00:10:09.020 --> 00:10:12.990\nIf I do a show ip route, and\ntake a look at its routing table.\n\n219\n00:10:12.990 --> 00:10:15.985\nYou'll just see that one static\nroute right there, right?\n\n220\n00:10:15.985 --> 00:10:17.990\n0.0.0.0, and it's got a metric of 10.\n\n221\n00:10:17.990 --> 00:10:23.290\nThe other one, if I do a show run,\nand I just look for ip route commands.\n\n222\n00:10:23.290 --> 00:10:27.420\nThe other one, I put in with a metric\nof 20, so one with a metric of 10,\n\n223\n00:10:27.420 --> 00:10:28.670\none with a metric of 20.\n\n224\n00:10:28.670 --> 00:10:32.270\nI prefer one of my ISPs over the other.\n\n225\n00:10:32.270 --> 00:10:35.950\nI prefer this ISP, so\nI gave it a metric of 10.\n\n226\n00:10:35.950 --> 00:10:38.840\nThe other ISP and only so much,\nI want it to be a backup and\n\n227\n00:10:38.840 --> 00:10:41.000\nso I gave it a metric of 20, right?\n\n228\n00:10:41.000 --> 00:10:46.740\nSo I've got those set and in place and\nI've done the same thing over on Router 6.\n\n229\n00:10:46.740 --> 00:10:52.380\nSo on Router 6, basically it's\nthe same exact configuration.\n\n230\n00:10:52.380 --> 00:10:54.880\nWell not exactly, different IPs, right.\n\n231\n00:10:54.880 --> 00:11:01.860\nBut, on Router 6, if I do a show run and\njust look forward those route commands.\n\n232\n00:11:01.860 --> 00:11:05.130\nI'll see where I've got two default routes\nyour point to the two different ISPs.\n\n233\n00:11:05.130 --> 00:11:09.430\nNow, normally when I do these is\nit's only gonna use the first one,\n\n234\n00:11:09.430 --> 00:11:10.510\nunless that router is down.\n\n235\n00:11:10.510 --> 00:11:14.810\nSo, if ISP1 fails, then I flipped over\nto ISP2, but it's very noticeable.\n\n236\n00:11:14.810 --> 00:11:16.630\nMy routing table changes.\n\n237\n00:11:16.630 --> 00:11:22.060\nSo, my routing table has that\ngateway of last resort up\n\n238\n00:11:22.060 --> 00:11:26.130\nat the top of it and that gateway of\nlast resort is pointing to 192.168.4.4.\n\n239\n00:11:26.130 --> 00:11:29.575\nIf that route fails,\nmy gateway of last resort changes and\n\n240\n00:11:29.575 --> 00:11:34.460\nbecomes 192.168.5.6 or\n5.5 I think is what the other one was.\n\n241\n00:11:34.460 --> 00:11:36.950\nSo that then would come in,\nmy routing table changes.\n\n242\n00:11:36.950 --> 00:11:41.350\nWith the GRE tunnel, the GRE tunnel\ncould actually move between ISP's and\n\n243\n00:11:41.350 --> 00:11:45.050\nmy route would show as via the tunnel and\n\n244\n00:11:45.050 --> 00:11:48.050\nsince the tunnel still exist\njust going a different route.\n\n245\n00:11:48.050 --> 00:11:48.970\nThe tunnel doesn't change.\n\n246\n00:11:48.970 --> 00:11:51.270\nMy routing table doesn't update\nthings stay a lot more stable.\n\n247\n00:11:51.270 --> 00:11:53.890\nThe complexity is hidden right.\n\n248\n00:11:53.890 --> 00:11:59.190\nSo right now if I'm on router six and\nI want to\n\n249\n00:11:59.190 --> 00:12:05.070\nsend a ping from this network 172.16.0.0\nall the way over to 192.168.0.0.\n\n250\n00:12:05.070 --> 00:12:07.430\nIf I want to send that ping.\n\n251\n00:12:07.430 --> 00:12:10.810\nI'm gonna see all the dirty\ndetails in between right.\n\n252\n00:12:10.810 --> 00:12:14.989\nSo if I do a ping to 192.168.0.1 and\n\n253\n00:12:14.989 --> 00:12:20.249\nI do a source of 172.16.0.6\nthat's my router.\n\n254\n00:12:20.249 --> 00:12:23.610\nI have to do a source because\nwhat is ping do by default.\n\n255\n00:12:23.610 --> 00:12:26.450\nWhen I do a ping it\nlooks at the router and\n\n256\n00:12:26.450 --> 00:12:29.710\nit says which interface is closest\nto the destination and uses that IP.\n\n257\n00:12:29.710 --> 00:12:34.053\nSo we'd use one of these IPs,\nmore likely 192.168.4.6.\n\n258\n00:12:34.053 --> 00:12:37.460\nSo I'm telling it to use this interface,\nthe internal interface and\n\n259\n00:12:37.460 --> 00:12:39.620\noverwriting that behavior.\n\n260\n00:12:39.620 --> 00:12:45.150\nAnd so when it does that it's gonna ping\ncuz to see if I've got connectivity, and\n\n261\n00:12:45.150 --> 00:12:52.420\nif I do a traceroute to that IP and\nI set my source same thing right?\n\n262\n00:12:52.420 --> 00:12:56.020\nSo setting the same basic source and\nit's gonna trace it out.\n\n263\n00:12:56.020 --> 00:12:59.880\nSee how I can spot all\nthe routers in between right?\n\n264\n00:12:59.880 --> 00:13:02.220\nThere's my ISP, Router 4.\n\n265\n00:13:02.220 --> 00:13:05.770\nI jumped from Router 4 to Router 2 and\nfrom Router 2, I go to Router 1 so\n\n266\n00:13:05.770 --> 00:13:06.989\nI see each hop along the way.\n\n267\n00:13:08.390 --> 00:13:12.350\nIf I turn on a routing protocol, those\nare the routers aren't gonna play nice,\n\n268\n00:13:12.350 --> 00:13:15.050\nI'm not gonna learn about the different\npaths that are out there.\n\n269\n00:13:15.050 --> 00:13:18.985\nSo for example,\nI might wanna run ospf, right, so\n\n270\n00:13:18.985 --> 00:13:21.921\nI can come in and I can say router ospf.\n\n271\n00:13:21.921 --> 00:13:26.741\nI need to get in the configuration,\nright, so I get in configuration router,\n\n272\n00:13:26.741 --> 00:13:31.150\nospf 1 and I could feel in like\na really big network statement.\n\n273\n00:13:31.150 --> 00:13:34.760\nAnd just say grab all my interfaces and\nturn areas 0.\n\n274\n00:13:34.760 --> 00:13:39.870\nOkay, when I do that I'm now sending out\n\n275\n00:13:39.870 --> 00:13:44.320\nhello messages on all my interfaces\nincluding my ISP interfaces and\n\n276\n00:13:44.320 --> 00:13:46.100\nthey're gonna ignore me and\nit's not gonna work.\n\n277\n00:13:46.100 --> 00:13:50.170\nSo there's really no point in running\nospf on the interfaces that point to my\n\n278\n00:13:50.170 --> 00:13:51.270\nISP right?\n\n279\n00:13:51.270 --> 00:13:54.900\nSo I'm gonna remove that command and\njust get that out of there so\n\n280\n00:13:54.900 --> 00:13:56.120\nthat I'm not advertising those networks.\n\n281\n00:13:56.120 --> 00:14:00.001\nIn fact let me just turn off ospf for\nright now.\n\n282\n00:14:00.001 --> 00:14:03.870\nAnd then we can turn it back\non when my tunnel is up.\n\n283\n00:14:04.890 --> 00:14:07.000\nSo now I'm going to build a tunnel.\n\n284\n00:14:07.000 --> 00:14:11.720\nI'm going to build a tunnel\nbetween Router six and Router one.\n\n285\n00:14:11.720 --> 00:14:17.040\nAnd when I do that, I'm gonna hide all\nthe complexity that's in between them, and\n\n286\n00:14:17.040 --> 00:14:18.100\nmake that much more simple.\n\n287\n00:14:18.100 --> 00:14:21.070\n&gt;&gt; This is gonna look like just\none hopper or whatever, right?\n\n288\n00:14:21.070 --> 00:14:22.550\n&gt;&gt; Effectively, yeah,\nonce the tunnel's up,\n\n289\n00:14:22.550 --> 00:14:25.490\nRouter 1 will think that it's\ndirectly connected to Router 6.\n\n290\n00:14:25.490 --> 00:14:27.870\nIt'll think that it's right there and\nit's connected.\n\n291\n00:14:27.870 --> 00:14:28.720\nSo that's the nice part.\n\n292\n00:14:28.720 --> 00:14:30.430\nWe don't see any of the other\nstuff in the middle.\n\n293\n00:14:30.430 --> 00:14:31.880\nAnd we can run our\ndynamic routing protocol.\n\n294\n00:14:31.880 --> 00:14:34.990\nWhich is why they call it\nGeneric Routing Encapsulation.\n\n295\n00:14:34.990 --> 00:14:38.780\nWe could throw any dynamic routing\nprotocol inside of this generic tunnel and\n\n296\n00:14:38.780 --> 00:14:42.110\nit all make sure our data hops over\njust as a point to point link.\n\n297\n00:14:42.110 --> 00:14:43.380\nAll right so\nlet's see how we get this set up.\n\n298\n00:14:43.380 --> 00:14:47.600\nFirst off in my lab, I'm using\nprivate IPs here in the ISP world.\n\n299\n00:14:47.600 --> 00:14:50.700\nBut remember in the ISP world in real\nlife, these are gonna be public IPs.\n\n300\n00:14:50.700 --> 00:14:55.710\nPublic routable IPs, and so when I build\nthe tunnel, I'm building it from my\n\n301\n00:14:55.710 --> 00:15:00.690\npublic routable IP to the public\nroutable IP of the destination, right?\n\n302\n00:15:00.690 --> 00:15:02.448\nThat's what I'm connecting.\n\n303\n00:15:02.448 --> 00:15:06.790\nAnd Router 6 has two different public IPs,\nand so I might need to build two tunnels\n\n304\n00:15:06.790 --> 00:15:10.530\nwith two different end points to be able\nto connect to the two different providers.\n\n305\n00:15:10.530 --> 00:15:13.650\nOr a lot of ISPs will issue you another\n\n306\n00:15:13.650 --> 00:15:16.240\npool of IPs that you have\nattached to either a loopback or\n\n307\n00:15:16.240 --> 00:15:19.240\nan internal interface and\nthat's what we terminate the tunnel to.\n\n308\n00:15:19.240 --> 00:15:22.010\nSo you wanna make sure that your\ntunnel terminates to your public IP,\n\n309\n00:15:22.010 --> 00:15:23.040\nthat's where it's gonna connect,\n\n310\n00:15:23.040 --> 00:15:27.920\nand then it's your internal IPs that\nare gonna be routed through the tunnel.\n\n311\n00:15:27.920 --> 00:15:31.683\nSo I'm gonna jump way over here to\nRouter 1, and we'll start on Router 1.\n\n312\n00:15:32.990 --> 00:15:36.890\nAnd on Router 1 I need\nto create the tunnel and\n\n313\n00:15:36.890 --> 00:15:41.210\nthen tell it where the tunnel runs,\nand the commands aren't that hard.\n\n314\n00:15:41.210 --> 00:15:42.780\nFirst off, I've got to create the tunnel.\n\n315\n00:15:42.780 --> 00:15:46.754\nSo I say interface tunnel,\nand then a number.\n\n316\n00:15:46.754 --> 00:15:50.445\nTunnel 0 is the first one, but you see we\ncan go all the way up to 2 billion and\n\n317\n00:15:50.445 --> 00:15:53.533\nsomething, you can have a lot of\ntunnels if you really need to.\n\n318\n00:15:53.533 --> 00:15:55.789\nSo I'm just gonna create\ninterface tunnel zero.\n\n319\n00:15:55.789 --> 00:16:00.890\nNow that tunnel interface is a virtual\ninterface, just like a loopback is, right?\n\n320\n00:16:00.890 --> 00:16:04.010\nSo it's creating that virtual\ninterface right now, and\n\n321\n00:16:04.010 --> 00:16:07.930\nif I do a show ip int brief and\ntake a look at it, there's tunnel zero.\n\n322\n00:16:07.930 --> 00:16:12.220\nIt's unassigned, and\nit shows as up down, okay?\n\n323\n00:16:12.220 --> 00:16:14.530\nUp just means that I haven't\nadministratively shut it down.\n\n324\n00:16:14.530 --> 00:16:16.720\nA tunnel interface will\nalways be up on the status,\n\n325\n00:16:16.720 --> 00:16:18.820\nunless you've administratively shut down.\n\n326\n00:16:18.820 --> 00:16:23.280\nBut protocol down, that means I'm\nnot connected to the other end,\n\n327\n00:16:23.280 --> 00:16:25.950\nwhich makes sense cuz I haven't\nissued any commands for that, right?\n\n328\n00:16:25.950 --> 00:16:26.970\nBut it's gonna show down.\n\n329\n00:16:26.970 --> 00:16:29.889\nWhen it's up, up, that means the tunnel's\nup and I'm talking to the other end.\n\n330\n00:16:31.440 --> 00:16:32.310\nAll right.\nSo now,\n\n331\n00:16:32.310 --> 00:16:34.510\nI've created the tunnel interface,\nI need to get it configured.\n\n332\n00:16:35.520 --> 00:16:39.520\nCouple of little things that we need\nto do before we start building this up.\n\n333\n00:16:39.520 --> 00:16:41.240\nIt is gonna be a point to point link.\n\n334\n00:16:41.240 --> 00:16:44.550\nAnd on a point to point link,\nwe need a network ID, right?\n\n335\n00:16:44.550 --> 00:16:46.680\nWe need an IP address.\n\n336\n00:16:46.680 --> 00:16:49.765\nThere is going to be\na routeable interface here.\n\n337\n00:16:49.765 --> 00:16:52.060\nRouteable interfaces need\nsome kind of address.\n\n338\n00:16:52.060 --> 00:16:53.630\nIf this is IPv6,\nI would use my IPv6 address.\n\n339\n00:16:53.630 --> 00:16:56.240\nI'm just gonna use IPv4, all right?\n\n340\n00:16:56.240 --> 00:16:57.260\nSo I need a network.\n\n341\n00:16:57.260 --> 00:16:59.920\nBut it is point to point, so\nyou don't need a big network.\n\n342\n00:16:59.920 --> 00:17:00.960\nYou can use /30,\n\n343\n00:17:00.960 --> 00:17:05.020\none of those really small networks that\njust have two usable IPs in them, right?\n\n344\n00:17:05.020 --> 00:17:06.850\nCuz it is point to point.\n\n345\n00:17:06.850 --> 00:17:11.163\nSo, if I wanna do that, I can just look in\nand see what's the next available network.\n\n346\n00:17:11.163 --> 00:17:14.310\n192.168.6.0 is my next available network.\n\n347\n00:17:14.310 --> 00:17:17.511\nAnd so, I can give it an IP address, and\n\n348\n00:17:17.511 --> 00:17:22.458\nI can do something really small,\nlike make this 6.1, and\n\n349\n00:17:22.458 --> 00:17:27.605\ndo a 255.255.255.252 which will be a /30.\n\n350\n00:17:27.605 --> 00:17:30.980\nMake it really small\nwith only two usable IPs.\n\n351\n00:17:30.980 --> 00:17:32.610\nOr I could get really big and\nsay, you know what,\n\n352\n00:17:32.610 --> 00:17:35.800\nI'm just gonna use the whole\nclass C because, whatever.\n\n353\n00:17:35.800 --> 00:17:37.160\nBut it is still a point-to-point line.\n\n354\n00:17:37.160 --> 00:17:38.880\nI'll only be able to\nhave two nodes on here.\n\n355\n00:17:38.880 --> 00:17:41.360\nSo it just comes down to whether\nyou wanna waste that piece or not.\n\n356\n00:17:41.360 --> 00:17:41.941\n&gt;&gt; Get buck wild, Don.\n\n357\n00:17:41.941 --> 00:17:43.378\n[LAUGH]\n&gt;&gt; You certainly could, right?\n\n358\n00:17:43.378 --> 00:17:45.327\nI mean, if you're using private IPs,\nwhat do you care?\n\n359\n00:17:45.327 --> 00:17:47.810\nIf you're using public IPs,\nyou're constrained.\n\n360\n00:17:47.810 --> 00:17:50.030\nBut GRE is not intended\nto be used that way.\n\n361\n00:17:50.030 --> 00:17:52.850\nYou don't normally have public\nIP's inside of your tunnel.\n\n362\n00:17:52.850 --> 00:17:54.920\nThere's only one example I can\nthink where you might do that,\n\n363\n00:17:54.920 --> 00:17:56.850\nand that's if you're connecting BGP ASs.\n\n364\n00:17:56.850 --> 00:18:01.530\nIf you have like a BGP AS that's\nbroken up into two separate locations,\n\n365\n00:18:01.530 --> 00:18:03.710\nyou might use GRE to connect\nthose two locations.\n\n366\n00:18:03.710 --> 00:18:05.730\nBut there's other ways to do that.\n\n367\n00:18:05.730 --> 00:18:07.220\nThat's just one scenario we might do it.\n\n368\n00:18:07.220 --> 00:18:09.547\nSo in my scenario, though,\na /30 would make sense.\n\n369\n00:18:09.547 --> 00:18:12.550\nBut since they're private IP's, I'm gonna\nbe a little wasteful and I'll go ahead and\n\n370\n00:18:12.550 --> 00:18:14.160\ndo a class C on it.\n\n371\n00:18:14.160 --> 00:18:17.880\nThe main reason I'm doing that is for\nrouter one, I'd like to end in dot one.\n\n372\n00:18:17.880 --> 00:18:19.650\nAnd for router six,\nI'd like to end in dot six.\n\n373\n00:18:19.650 --> 00:18:21.120\nI can't do that with a /30.\n\n374\n00:18:21.120 --> 00:18:22.936\nIf I step up in a bigger network, I can.\n\n375\n00:18:22.936 --> 00:18:23.720\nAll right.\n\n376\n00:18:23.720 --> 00:18:24.899\nSo, I'm gonna set that IP address.\n\n377\n00:18:25.990 --> 00:18:29.080\nNext, I'm gonna change the MTU size.\n\n378\n00:18:29.080 --> 00:18:31.290\nNow, this is an interesting one.\n\n379\n00:18:31.290 --> 00:18:35.310\nOn a normal Ethernet network, our\nmaximum transition unit is 1,500 bytes.\n\n380\n00:18:35.310 --> 00:18:38.740\nSo every packet that I send on\nthe network, every frame, ultimately,\n\n381\n00:18:38.740 --> 00:18:41.968\nis gonna be usually less than 1,512 bytes.\n\n382\n00:18:41.968 --> 00:18:44.470\nSo, 1500 is kind of the standard.\n\n383\n00:18:44.470 --> 00:18:49.310\nBecause this is being encapsulated, and\nthere might be other encapsulations on\n\n384\n00:18:49.310 --> 00:18:53.910\ntop of that, we can start to run a little\ntight on the size of our communications.\n\n385\n00:18:53.910 --> 00:18:56.430\nSo most people will\nshrink the MTU size down.\n\n386\n00:18:56.430 --> 00:18:59.020\nI believe we did that in our PPP show,\nwhere I shrunk it down like 1492.\n\n387\n00:18:59.020 --> 00:19:02.656\nWith GRE tunnels,\nwe normally even go a little bit lower.\n\n388\n00:19:02.656 --> 00:19:05.030\nAnd so, I'm gonna shrink my\ntunnel down to 1400, all right?\n\n389\n00:19:05.030 --> 00:19:07.080\nYou can probably get away with higher.\n\n390\n00:19:07.080 --> 00:19:08.050\n1492 is probably fine.\n\n391\n00:19:08.050 --> 00:19:10.060\nBut if you ever start\nrunning into weird errors,\n\n392\n00:19:10.060 --> 00:19:12.500\nyou might need to shrink that\nMTU size down a little bit.\n\n393\n00:19:12.500 --> 00:19:15.638\nI'm gonna drop mine down to 1400,\nall right?\n\n394\n00:19:15.638 --> 00:19:16.720\nThen, the important part.\n\n395\n00:19:17.780 --> 00:19:19.670\nI need to set up the tunnel.\n\n396\n00:19:19.670 --> 00:19:23.570\nAnd there's, really, you can get away\nwith one command in some scenarios, but\n\n397\n00:19:23.570 --> 00:19:25.050\nthere's normally two commands.\n\n398\n00:19:25.050 --> 00:19:27.980\nI need to set the destination\nIP of the tunnel.\n\n399\n00:19:27.980 --> 00:19:28.910\nSo, where is the other end?\n\n400\n00:19:28.910 --> 00:19:32.500\nAnd that will be the public IP address\nof the router I'm connecting to.\n\n401\n00:19:32.500 --> 00:19:33.950\nIf you stop there,\n\n402\n00:19:33.950 --> 00:19:36.309\nyou don't necessarily know which\ninterface you're originating from.\n\n403\n00:19:36.309 --> 00:19:38.246\nAnd if you only got one connection,\nthat's not a big deal.\n\n404\n00:19:38.246 --> 00:19:39.900\nBut my routers have two connections.\n\n405\n00:19:39.900 --> 00:19:44.280\nSo I need to issue a second command to\nspecify my source, the destination and\n\n406\n00:19:44.280 --> 00:19:46.670\nthe source of where this\ntunnels is being built.\n\n407\n00:19:46.670 --> 00:19:51.110\nAnd basically whatever I put here,\nI'm gonna flip around the opposite way for\n\n408\n00:19:51.110 --> 00:19:52.020\nthe other end.\n\n409\n00:19:52.020 --> 00:19:54.260\nSo the source and the destination\njust switch for the other end.\n\n410\n00:19:54.260 --> 00:19:55.690\nThat makes the configuration simple.\n\n411\n00:19:55.690 --> 00:20:00.620\nSo if you look at my topology, my source\nfor router 1 is gonna be its public IP,\n\n412\n00:20:00.620 --> 00:20:02.962\nwhich is 192.168.1.1.\n\n413\n00:20:02.962 --> 00:20:06.460\nAnd the destination for router 6,\nthis is where it gets tricky,\n\n414\n00:20:06.460 --> 00:20:08.710\nit's got two different public IPs.\n\n415\n00:20:08.710 --> 00:20:11.150\nWell, I know this top link\nhere is a gigabit link.\n\n416\n00:20:11.150 --> 00:20:12.500\nAnd so, I'm gonna prefer that link.\n\n417\n00:20:12.500 --> 00:20:19.930\nAnd so, I'm gonna terminate on\n192.168.4.6, is what it is.\n\n418\n00:20:19.930 --> 00:20:23.790\nBut since there's two IPs, two ISPs,\nhow do I take advantage of that?\n\n419\n00:20:23.790 --> 00:20:25.470\nIf this one drops,\nmy tunnel's not gonna move.\n\n420\n00:20:25.470 --> 00:20:27.160\nThat IP's gone, right?\n\n421\n00:20:27.160 --> 00:20:28.800\nSo you have two choices.\n\n422\n00:20:28.800 --> 00:20:30.460\nChoice number one,\nyou can build two tunnels.\n\n423\n00:20:30.460 --> 00:20:33.290\nI could build a tunnel across the top,\nand then build another tunnel across\n\n424\n00:20:33.290 --> 00:20:36.300\nthe bottom, and use metrics to influence\nwhich tunnel I flow across, right?\n\n425\n00:20:36.300 --> 00:20:37.830\nThat's certainly a viable solution.\n\n426\n00:20:37.830 --> 00:20:38.640\nIt'd work great.\n\n427\n00:20:38.640 --> 00:20:39.530\nThat's probably what I'd do here.\n\n428\n00:20:40.600 --> 00:20:45.160\nOption number two is I call my ISP up,\nand I say, hey, I need an IP address\n\n429\n00:20:45.160 --> 00:20:49.920\nthat I actually own, one that I can stick\non the router itself on a loop back or\n\n430\n00:20:49.920 --> 00:20:53.120\nwhatever, that's available via both ISPs.\n\n431\n00:20:53.120 --> 00:20:57.570\nThat normally means maintaining your\nown BGPAS, which is kind of a big deal.\n\n432\n00:20:57.570 --> 00:20:59.038\nSmall to medium companies\naren't gonna do that.\n\n433\n00:20:59.038 --> 00:21:02.190\nBut if you got the money,\nif you're an enterprise, you can do it.\n\n434\n00:21:02.190 --> 00:21:04.280\nAnd now, your tunnel terminates\ninto the router itself.\n\n435\n00:21:04.280 --> 00:21:07.730\nIt doesn't care which ISP it crosses,\nand now you get the availability.\n\n436\n00:21:07.730 --> 00:21:09.018\nIt's easier just to build two tunnels.\n\n437\n00:21:09.018 --> 00:21:11.170\n&gt;&gt; I was gonna say, Don,\neven if you are that big company,\n\n438\n00:21:11.170 --> 00:21:15.440\nthat enterprise environment, wouldn't you\nstill wanna go with the first option?\n\n439\n00:21:15.440 --> 00:21:18.810\nJust because you have a little more\ncontrol, it's a lot less money, obviously.\n\n440\n00:21:18.810 --> 00:21:20.990\n&gt;&gt; If I was doing this from scratch,\nI'd say yes.\n\n441\n00:21:20.990 --> 00:21:25.140\nBut the odds are, if you're an enterprise,\nyou might already have your own BGPAS.\n\n442\n00:21:25.140 --> 00:21:27.940\nYou might already have web servers and\nthings like that that you want redundant.\n\n443\n00:21:27.940 --> 00:21:31.210\nAnd if that's the case, you might as well\nuse that infrastructure's already there,\n\n444\n00:21:31.210 --> 00:21:32.350\nGRE snaps right into it.\n\n445\n00:21:32.350 --> 00:21:34.290\nSo it kinda just depends on that.\n\n446\n00:21:34.290 --> 00:21:36.950\nI wouldn't invest in it just for this.\n\n447\n00:21:36.950 --> 00:21:39.930\nBut if I had other things that could\nuse it, too, then I'd get my own AS.\n\n448\n00:21:39.930 --> 00:21:41.250\nThat would be a way to go.\n\n449\n00:21:41.250 --> 00:21:42.880\nAll right, so I'm just going to\nbuild one tunnel, though, right?\n\n450\n00:21:42.880 --> 00:21:43.560\nAcross the top.\n\n451\n00:21:43.560 --> 00:21:45.630\nCuz that, for the exam, all we have\nto know is how to make one tunnel.\n\n452\n00:21:45.630 --> 00:21:48.420\nSo I'm gonna build a tunnel\nright here across this top path.\n\n453\n00:21:48.420 --> 00:21:52.770\nAnd on router 6, its public IP\non the network is 192.168.4.6.\n\n454\n00:21:52.770 --> 00:21:55.850\nThat's what I'm gonna\nterminate to with my router.\n\n455\n00:21:55.850 --> 00:21:57.510\nSo let me jump back over to router 1.\n\n456\n00:21:57.510 --> 00:22:03.680\nAnd I'm gonna say tunnel source,\nand I'll specify that source.\n\n457\n00:22:03.680 --> 00:22:07.210\nNow, for the source,\nI can specify the actual IP address, or\n\n458\n00:22:07.210 --> 00:22:08.870\nI can specify the interface.\n\n459\n00:22:08.870 --> 00:22:11.650\nIf you have DHCP, you might wanna\nspecify the interface name,\n\n460\n00:22:11.650 --> 00:22:13.050\nbecause the IP changes.\n\n461\n00:22:13.050 --> 00:22:15.270\nBut let me tell you,\nthe tunnel's gonna get messed up anyway,\n\n462\n00:22:15.270 --> 00:22:17.100\ncuz remember these numbers\nhave to match on both ends.\n\n463\n00:22:17.100 --> 00:22:18.720\nYou really want static IPs.\n\n464\n00:22:18.720 --> 00:22:20.890\nSo I don't normally specify an interface.\n\n465\n00:22:20.890 --> 00:22:22.900\nThe exception would be if it\nwas a point to point link.\n\n466\n00:22:22.900 --> 00:22:24.460\nSo, if I actually had\na point to point link,\n\n467\n00:22:24.460 --> 00:22:26.850\nbut if I had a point to\npoint link would I need GRE?\n\n468\n00:22:28.070 --> 00:22:28.650\nNot really.\n\n469\n00:22:28.650 --> 00:22:30.890\nSo, it's a pretty rare day\nthat I specify an interface.\n\n470\n00:22:30.890 --> 00:22:33.769\nI normally specify an IP, and\nthat's exactly what I'm gonna do here.\n\n471\n00:22:33.769 --> 00:22:36.662\nAnd so,\nmine's going to be 192.168.1.1, right?\n\n472\n00:22:36.662 --> 00:22:38.880\nThat's my tunnel source.\n\n473\n00:22:38.880 --> 00:22:42.830\nThen I need to say tunnel destination.\n\n474\n00:22:42.830 --> 00:22:47.960\nAnd specify the public IP of the other\nrouter, which in my case is 192.168.4.6.\n\n475\n00:22:47.960 --> 00:22:52.074\nObviously, in real life land,\nthese would be 209.251 whatever.\n\n476\n00:22:52.074 --> 00:22:54.380\nAny kind of actual public registered IP's.\n\n477\n00:22:54.380 --> 00:22:56.330\nBut in this scenario,\nit's these private ones.\n\n478\n00:22:57.470 --> 00:23:01.060\nAs soon as I issue the destination\ncommand, the link's gonna try and come up.\n\n479\n00:23:01.060 --> 00:23:03.830\nI'm reaching out to that other router,\nand trying to bring it up.\n\n480\n00:23:03.830 --> 00:23:04.820\nWell, it's gonna fail.\n\n481\n00:23:04.820 --> 00:23:05.880\nIt's not gonna work, right?\n\n482\n00:23:05.880 --> 00:23:08.770\nSo I'm gonna see it come up, and then\nafter a few seconds it'll come back down\n\n483\n00:23:08.770 --> 00:23:11.470\nagain until I get\nthe other side configured.\n\n484\n00:23:11.470 --> 00:23:14.153\nSo now, I'm gonna jump over and\nget that other side configured, right?\n\n485\n00:23:14.153 --> 00:23:18.850\nIf I jump over to router six,\nI'm gonna repeat the same process.\n\n486\n00:23:18.850 --> 00:23:21.592\nThe big difference here is I'm gonna\nflip the source and the destination.\n\n487\n00:23:21.592 --> 00:23:26.010\nSo, on router 6, I'm gonna say,\ninterface tunnel zero.\n\n488\n00:23:26.010 --> 00:23:27.910\nAnd tunnel numbers don't have to match.\n\n489\n00:23:27.910 --> 00:23:30.160\nThis could be tunnel 500,\nand that would be fine.\n\n490\n00:23:30.160 --> 00:23:32.980\nIt's the source and\ndestination that have to match, all right?\n\n491\n00:23:32.980 --> 00:23:38.100\nI'm gonna give it an IP address,\nwhich will be 192.168.6.6.\n\n492\n00:23:38.100 --> 00:23:39.412\nI did 6.1.\n\n493\n00:23:39.412 --> 00:23:41.290\nFor the other end,\nI'll do 6.6 for this one.\n\n494\n00:23:42.430 --> 00:23:44.001\nAnd remember, if you did a /30,\n\n495\n00:23:44.001 --> 00:23:47.000\nyou'd need to make sure you\nuse the second IP in that /30.\n\n496\n00:23:47.000 --> 00:23:48.550\nAll right?\n\n497\n00:23:48.550 --> 00:23:50.132\nI'm gonna set my MTU.\n\n498\n00:23:50.132 --> 00:23:51.231\nAnd this is really important.\n\n499\n00:23:51.231 --> 00:23:54.891\nIf your MTU doesn't match on both ends,\nyou're really gonna screw things up.\n\n500\n00:23:54.891 --> 00:23:56.705\nSo you gotta make sure the mtu matches.\n\n501\n00:23:56.705 --> 00:23:58.848\nYou don't want one side\nsending a larger frame or\n\n502\n00:23:58.848 --> 00:24:01.075\na larger packet than what\nthe other side expects.\n\n503\n00:24:01.075 --> 00:24:03.990\nCuz then it's gonna fragment and\nit's gonna result in really,\n\n504\n00:24:03.990 --> 00:24:05.720\nreally bad performance.\n\n505\n00:24:05.720 --> 00:24:08.390\nAll right, so I've got that mtu set.\n\n506\n00:24:08.390 --> 00:24:10.200\nAnd then, I need to set my source and\ndestination.\n\n507\n00:24:10.200 --> 00:24:14.320\nSo tunnel source, and this guy's tunnel\nsource is its public IP, 192.168.4.6,\n\n508\n00:24:14.320 --> 00:24:19.220\nwhich is what I put the destination\nas on the other side.\n\n509\n00:24:19.220 --> 00:24:22.595\nAnd then tunnel destination,\nwhich is gonna be 192.168.1.1,\n\n510\n00:24:22.595 --> 00:24:24.760\nthe public IP of router 1.\n\n511\n00:24:24.760 --> 00:24:26.540\nThat was the source on the other side.\n\n512\n00:24:26.540 --> 00:24:29.106\nI've just flipped the source and\nthe destination.\n\n513\n00:24:29.106 --> 00:24:33.430\nAnd the line is gonna try and come up, and\nunlike the other side where it came up and\n\n514\n00:24:33.430 --> 00:24:36.140\nthen eventually went down,\nthis one's gonna come up and stay up,\n\n515\n00:24:36.140 --> 00:24:38.200\ncuz the other side is expecting it.\n\n516\n00:24:38.200 --> 00:24:40.630\nWell, assuming I got connectivity and\nall that good stuff.\n\n517\n00:24:40.630 --> 00:24:41.960\n&gt;&gt; And the other side will come back up.\n\n518\n00:24:41.960 --> 00:24:43.530\n&gt;&gt; It should, yep, it should.\n\n519\n00:24:43.530 --> 00:24:44.940\nYou gotta say should.\n\n520\n00:24:44.940 --> 00:24:47.116\n&gt;&gt; Yeah, should, that's right,\nqualify yourself.\n\n521\n00:24:47.116 --> 00:24:49.193\n[LAUGH] All right, so\nlet's see if this thing worked.\n\n522\n00:24:49.193 --> 00:24:53.915\nI'm gonna do a show ip interface brief,\nand what I'm expecting to see is I\n\n523\n00:24:53.915 --> 00:24:58.277\nwanna see that Tunnel0 is showing\nas up up, and sure enough, I do.\n\n524\n00:24:58.277 --> 00:24:59.610\nOkay, so it's up up.\n\n525\n00:24:59.610 --> 00:25:02.620\nThe first up just means it's not\nadministratively shut down because\n\n526\n00:25:02.620 --> 00:25:03.900\notherwise, it's always gonna be up.\n\n527\n00:25:03.900 --> 00:25:08.301\nThe second up means I did talk to\nthe other side, they answered back and\n\n528\n00:25:08.301 --> 00:25:09.610\nthe tunnel is up.\n\n529\n00:25:09.610 --> 00:25:14.020\nThat means I should be able\nto do a show ip route and\n\n530\n00:25:14.020 --> 00:25:16.930\nI should have the 192.168.6\nnetwork in here.\n\n531\n00:25:16.930 --> 00:25:20.502\nAnd if I look,\nI can find it right here, 192.168.6.\n\n532\n00:25:20.502 --> 00:25:22.270\nAnd it's showing as variably subnetted,\nright?\n\n533\n00:25:22.270 --> 00:25:26.250\nI got this /32, that's me, but\nthe /24 is the network that we made.\n\n534\n00:25:26.250 --> 00:25:30.650\nAnd if I look,\nit's connected via Tunnel0, right?\n\n535\n00:25:30.650 --> 00:25:32.910\nNot via a physical interface anymore.\n\n536\n00:25:32.910 --> 00:25:35.360\nTunnel0, via a virtual interface.\n\n537\n00:25:35.360 --> 00:25:39.370\nAnd I should be able to ping across it.\n\n538\n00:25:39.370 --> 00:25:44.738\nSo if I ping 192.168.6.1,\nI'm 6.6, the other side is 6.1.\n\n539\n00:25:44.738 --> 00:25:48.630\nI should be able to ping\nthat address right there.\n\n540\n00:25:48.630 --> 00:25:49.220\nRight?\n\n541\n00:25:49.220 --> 00:25:56.450\nAnd if I do a show arp and I take a look,\n192.168.6 doesn't show up in here.\n\n542\n00:25:56.450 --> 00:25:57.300\nBut I just did a ping.\n\n543\n00:25:57.300 --> 00:25:58.810\nIt's on the same network as me.\n\n544\n00:25:58.810 --> 00:26:00.270\nWell it's a tunnel interface and\n\n545\n00:26:00.270 --> 00:26:02.960\nit's not leveraging Mac\naddresses the same way as we do.\n\n546\n00:26:02.960 --> 00:26:05.450\nIt knows that person is on the other side,\nand it's actually\n\n547\n00:26:05.450 --> 00:26:08.680\nkinda doing a weird broadcasting thing\nis what it does on point-to-point lines.\n\n548\n00:26:08.680 --> 00:26:11.370\nAnd just throwing the traffic on the line,\nknowing there's only one place for\n\n549\n00:26:11.370 --> 00:26:13.555\nit to go, the person on the other side.\n\n550\n00:26:13.555 --> 00:26:15.420\nPoint-to-points are always\na little different.\n\n551\n00:26:15.420 --> 00:26:18.500\nBut I know that line is up,\nI'm able to communicate across it, and\n\n552\n00:26:18.500 --> 00:26:19.770\nthe tunnel is working.\n\n553\n00:26:19.770 --> 00:26:21.220\nAll right?\n\n554\n00:26:21.220 --> 00:26:25.125\nBut, if I do a show ip route again and\ntake a look at that routing table,\n\n555\n00:26:25.125 --> 00:26:30.773\nI see the 172.16 network, the 192.168.4\nand .5 networks that I'm plugged into.\n\n556\n00:26:30.773 --> 00:26:35.951\nI don't see the 192.168.0 network.\n\n557\n00:26:35.951 --> 00:26:40.449\nWhat router 6 is seeing are the networks\nthat it's directly plugged into in the new\n\n558\n00:26:40.449 --> 00:26:42.000\ntunnel network that I made.\n\n559\n00:26:42.000 --> 00:26:43.590\nThat's what it seeing.\n\n560\n00:26:43.590 --> 00:26:47.120\nBut that tunnel runs all\nthe way to router 1, and\n\n561\n00:26:47.120 --> 00:26:51.267\nrouter 1 is now connected to 192.168.0.0.\n\n562\n00:26:51.267 --> 00:26:52.050\nI don't see that.\n\n563\n00:26:52.050 --> 00:26:52.590\nWhy not?\n\n564\n00:26:52.590 --> 00:26:55.685\nWell, I never turned on\nthe dynamic routing protocol.\n\n565\n00:26:55.685 --> 00:26:57.905\nSo I need to go and\nturn on the dynamic routing protocol and\n\n566\n00:26:57.905 --> 00:27:02.235\nget that running across this tunnel, and\nthen we'll see it actually working and\n\n567\n00:27:02.235 --> 00:27:04.255\nnot having these gaps in it.\n\n568\n00:27:04.255 --> 00:27:04.775\nOkay.\n\n569\n00:27:04.775 --> 00:27:07.375\nI guess I could do static IPs if I wanted,\nand throw them in there, or\n\n570\n00:27:07.375 --> 00:27:10.445\nstatic routes, but-\n&gt;&gt; If we're using dynamic routing\n\n571\n00:27:10.445 --> 00:27:12.495\nprotocols, why not use dynamic\nrouting protocols, right?\n\n572\n00:27:12.495 --> 00:27:13.635\n&gt;&gt; That's the whole point, yeah.\n\n573\n00:27:13.635 --> 00:27:14.825\nSo let's go ahead and do that.\n\n574\n00:27:14.825 --> 00:27:16.003\nSo I'm gonna jump over to router 1.\n\n575\n00:27:16.003 --> 00:27:18.850\nNow, I'm gonna configure things\na little different here,\n\n576\n00:27:18.850 --> 00:27:21.310\nbecause I've got ISPs involved.\n\n577\n00:27:21.310 --> 00:27:25.940\nAnd I don't want to advertise the ISP\nnetworks into my routing protocol.\n\n578\n00:27:25.940 --> 00:27:29.680\nAnd so normally, I might just get lazy and\nif I'm doing OSPF,\n\n579\n00:27:29.680 --> 00:27:32.110\nI might just turn on the great\nbig giant wild card.\n\n580\n00:27:32.110 --> 00:27:34.910\nBut on this one, I wanna be\nspecific about my interfaces, and\n\n581\n00:27:34.910 --> 00:27:36.240\nthere's a reason for this.\n\n582\n00:27:36.240 --> 00:27:38.180\nOn my internal network it's\nnot a big deal, right?\n\n583\n00:27:38.180 --> 00:27:39.562\nI can get into interface.\n\n584\n00:27:39.562 --> 00:27:41.700\nActually, it is a big deal cuz\nI don't know the interface.\n\n585\n00:27:41.700 --> 00:27:44.991\nSo if I look at my physical topology,\nGi0/0.\n\n586\n00:27:44.991 --> 00:27:48.650\nSo if I get into interface Gi0/0,\nI can say,\n\n587\n00:27:48.650 --> 00:27:53.030\nip ospf 1 to create process 1, area 0.\n\n588\n00:27:53.030 --> 00:27:54.920\nRight?\nSo I now am running OSPF,\n\n589\n00:27:54.920 --> 00:27:58.600\nand that interface is in area 0.\n\n590\n00:27:58.600 --> 00:27:59.510\nGreat, all right.\n\n591\n00:28:00.720 --> 00:28:06.951\nI could have instead just said router\nospf 1 and done network 0.0.0.0,\n\n592\n00:28:06.951 --> 00:28:10.860\narea 0 and\nthrown all my interfaces into area 0.\n\n593\n00:28:10.860 --> 00:28:11.755\nOkay.\n\n594\n00:28:11.755 --> 00:28:14.540\nWell, what's the problem there?\n\n595\n00:28:14.540 --> 00:28:18.980\nWell the problem is,\nmy ISP interface is going to area 0.\n\n596\n00:28:18.980 --> 00:28:20.938\nAnd my tunnel goes into area 0.\n\n597\n00:28:20.938 --> 00:28:25.110\nAll right, well,\nthe tunnel is a point-to-point link.\n\n598\n00:28:25.110 --> 00:28:28.370\nIt's one link between me and\nmy destination, right?\n\n599\n00:28:28.370 --> 00:28:31.710\nSo it hides all of this\ncomplexity that I've got.\n\n600\n00:28:31.710 --> 00:28:35.150\nThat means that the tunnel\nmay look like a better route\n\n601\n00:28:35.150 --> 00:28:38.310\nthan hopping through all these\nother routes to the other side.\n\n602\n00:28:38.310 --> 00:28:42.570\nAnd if that happens, if the router\nprefers the tunnel to the physical route,\n\n603\n00:28:42.570 --> 00:28:47.440\nif it learns the tunnel\ndestination via the tunnel,\n\n604\n00:28:47.440 --> 00:28:50.800\nthen it tries to move the tunnel's\ndestination into the tunnel.\n\n605\n00:28:50.800 --> 00:28:54.320\nAnd the tunnel can't be inside of itself.\n\n606\n00:28:54.320 --> 00:28:57.570\nIt creates a routing loop and it drops\nthe tunnel, makes the tunnel go down.\n\n607\n00:28:57.570 --> 00:29:01.080\nWell now I can get to the destination\nagain, so the tunnel comes up.\n\n608\n00:29:01.080 --> 00:29:03.900\nAnd then I try to move the tunnel\ndestination into the tunnel, and\n\n609\n00:29:03.900 --> 00:29:05.780\nit goes down and\nyou end up with a route that flaps.\n\n610\n00:29:05.780 --> 00:29:08.160\nIt comes up and down, and up and down.\n\n611\n00:29:08.160 --> 00:29:09.150\nIt's very common.\n\n612\n00:29:09.150 --> 00:29:10.840\nIf you're running\nCisco Discovery Protocol,\n\n613\n00:29:10.840 --> 00:29:12.230\nyou'll actually see\na warning that comes up.\n\n614\n00:29:12.230 --> 00:29:14.750\nIt says, warning you learned\nthe tunnel destination via the tunnel.\n\n615\n00:29:14.750 --> 00:29:15.970\nThat's bad.\n\n616\n00:29:15.970 --> 00:29:18.235\nSo, when you use a dynamic\nrouting protocol and\n\n617\n00:29:18.235 --> 00:29:22.310\nyouve got GRE tunnels, it's important that\nyou don't do some great big wild card.\n\n618\n00:29:22.310 --> 00:29:26.590\nYou never wanna learn the tunnel\ndestination via the tunnel itself.\n\n619\n00:29:26.590 --> 00:29:30.430\nAnd the easiest way to avoid that is\nto configure OSPF using interface\n\n620\n00:29:30.430 --> 00:29:31.780\ncommands, right?\n\n621\n00:29:31.780 --> 00:29:34.840\nBy using the interface commands,\nI can come in and\n\n622\n00:29:34.840 --> 00:29:37.000\njust tell it the individual interfaces.\n\n623\n00:29:37.000 --> 00:29:42.380\nI do not want the interfaces\nthat are connected to the ISP,\n\n624\n00:29:42.380 --> 00:29:47.810\nso if I do show ip interface brief,\nI don't want my interfaces that\n\n625\n00:29:47.810 --> 00:29:51.800\nare plugged into the ISP, this guy right\nhere, I don't want that interface in OSPF.\n\n626\n00:29:51.800 --> 00:29:55.840\nI don't wanna learn those\nnetworks via the tunnel.\n\n627\n00:29:55.840 --> 00:29:56.800\nThat would be bad.\n\n628\n00:29:56.800 --> 00:29:57.760\nSo I need to leave it out.\n\n629\n00:29:57.760 --> 00:29:58.878\nI need to exclude it.\n\n630\n00:29:58.878 --> 00:30:01.100\nSo I could do really specific\nnetwork commands if I want, but\n\n631\n00:30:01.100 --> 00:30:03.770\nit certainly is faster to\njust do the interface.\n\n632\n00:30:03.770 --> 00:30:10.490\nAnd so I went into interface Gi0/0 and\nI issued ip ospf 1 area 0, right?\n\n633\n00:30:10.490 --> 00:30:16.910\nAnd then I'm gonna get into\ninterface tunnel 0, right?\n\n634\n00:30:16.910 --> 00:30:20.600\nI'm gonna get into that tunnel, and\nI'm gonna issue the same thing.\n\n635\n00:30:20.600 --> 00:30:24.700\nSo now,\nthe tunnel knows that it's in area 0,\n\n636\n00:30:24.700 --> 00:30:29.485\nbut it's not gonna bring\nin the other interfaces.\n\n637\n00:30:29.485 --> 00:30:32.583\nIt's not gonna bring in Gi1/0 and\nbring those in, right?\n\n638\n00:30:32.583 --> 00:30:35.625\nSo I'm gonna send the OSPF\ndata just over the tunnel.\n\n639\n00:30:35.625 --> 00:30:37.279\nI'm gonna do the same thing\non the other side, right?\n\n640\n00:30:37.279 --> 00:30:40.443\nSo important to be really specific here or\nyou're gonna get a route that flaps.\n\n641\n00:30:40.443 --> 00:30:44.935\nNot just a route, the actual tunnel\ninterface will flap up and down.\n\n642\n00:30:44.935 --> 00:30:45.977\nAll right, so the next thing for\n\n643\n00:30:45.977 --> 00:30:47.875\nme to do is jump over to router\n6 to do the same basic thing.\n\n644\n00:30:47.875 --> 00:30:52.700\nSo, on router 6, I'm gonna jump down\nhere and get into my configuration.\n\n645\n00:30:52.700 --> 00:30:54.745\nI need to do a show ip\ninterface brief real quick,\n\n646\n00:30:54.745 --> 00:30:56.560\ncuz I don't remember my interfaces.\n\n647\n00:30:56.560 --> 00:30:58.548\nSo GI0/0 is my inside.\n\n648\n00:30:58.548 --> 00:31:06.090\nSo I'm gonna get into interface GI0/0,\nand say, ip ospf 1 area 0, right?\n\n649\n00:31:06.090 --> 00:31:10.500\nAnd then I'm gonna get\ninto interface tunnel 0,\n\n650\n00:31:10.500 --> 00:31:14.010\nwhere I'll say, ip ospf area 0.\n\n651\n00:31:14.010 --> 00:31:17.478\nNow, normally if I pointed\nOSPF at a WAN connection,\n\n652\n00:31:17.478 --> 00:31:19.488\nmy ISP is just gonna ignore me.\n\n653\n00:31:19.488 --> 00:31:21.160\nThat's what's normally gonna happen.\n\n654\n00:31:21.160 --> 00:31:23.600\nBut here, I'm pointing to the tunnel,\nand so look what happens.\n\n655\n00:31:23.600 --> 00:31:25.990\nI get, an adjacency comes up.\n\n656\n00:31:25.990 --> 00:31:29.430\nAn adjacency is between me and\na neighbor router.\n\n657\n00:31:29.430 --> 00:31:30.830\nBut that's not my neighbor router.\n\n658\n00:31:30.830 --> 00:31:33.660\nI got all this other junk\nin between me and them.\n\n659\n00:31:33.660 --> 00:31:35.290\nWell, not anymore.\n\n660\n00:31:35.290 --> 00:31:36.470\nNow it's hidden.\n\n661\n00:31:36.470 --> 00:31:39.700\nAll this junk is hidden, and\nrouter 6 thinks it has a point-to-point\n\n662\n00:31:39.700 --> 00:31:42.260\nconnection to router 1, and\nthat they're the only other person on\n\n663\n00:31:42.260 --> 00:31:45.870\nthe other end of that line and so\nI can talk to them and we're up.\n\n664\n00:31:45.870 --> 00:31:47.881\nAnd I see OSPF has reacted to that.\n\n665\n00:31:47.881 --> 00:31:50.415\nIf I do a show ip ospf neighbor,\n\n666\n00:31:50.415 --> 00:31:56.461\nthere's my connection to 192.168.6.1 and\nmy state is full.\n\n667\n00:31:56.461 --> 00:31:57.310\nWith a dash,\n\n668\n00:31:57.310 --> 00:32:01.780\nit didn't do a DR BDR election\nbecause it knew it's point to point.\n\n669\n00:32:01.780 --> 00:32:03.160\nThere's only one other\nperson on the other side.\n\n670\n00:32:03.160 --> 00:32:04.230\nI don't need a designated router.\n\n671\n00:32:04.230 --> 00:32:06.310\nThere's only one person I talk to.\n\n672\n00:32:06.310 --> 00:32:09.984\nAnd if I do a show ip route\nI should be learning.\n\n673\n00:32:09.984 --> 00:32:13.326\nThere it is, 192.168.0.0.\n\n674\n00:32:13.326 --> 00:32:15.360\nI'm learning it via OSPF.\n\n675\n00:32:15.360 --> 00:32:19.390\nI now have an OSPF neighbor\non my internet connection,\n\n676\n00:32:19.390 --> 00:32:21.150\nbecause I've hidden the internet.\n\n677\n00:32:21.150 --> 00:32:24.530\nAnd now the OSPF protocol is able to\nrun over this point to point link.\n\n678\n00:32:24.530 --> 00:32:28.050\nAnd if you look at its metric of 1,000,\nwhoops [LAUGH] [INAUDIBLE].\n\n679\n00:32:28.050 --> 00:32:29.232\n&gt;&gt; If you look at its metric.\n\n680\n00:32:29.232 --> 00:32:29.881\n&gt;&gt; I know, I know.\n\n681\n00:32:29.881 --> 00:32:30.598\n&gt;&gt; If you can [LAUGH].\n\n682\n00:32:30.598 --> 00:32:32.150\n&gt;&gt; If I can get my Windows under control.\n\n683\n00:32:32.150 --> 00:32:36.054\nIf you look at this metric of 1001 that's\na pretty odd metric to have, right?\n\n684\n00:32:36.054 --> 00:32:41.600\nBut remember the formula that's getting\nrun, what's the bandwidth of the tunnel?\n\n685\n00:32:41.600 --> 00:32:45.137\nTechnically the tunnel doesn't have\na bandwidth, it's a virtual interface,\n\n686\n00:32:45.137 --> 00:32:47.290\nwhat the heck is its bandwidth?\n\n687\n00:32:47.290 --> 00:32:49.029\nI'm kinda curious myself now,\nI don't know.\n\n688\n00:32:49.029 --> 00:32:51.659\nSo if you do show ip ospf interface,\n\n689\n00:32:51.659 --> 00:32:56.931\nit will show you each interface\nthat's participating inside of OSPF.\n\n690\n00:32:56.931 --> 00:32:59.608\nAnd I don't know if I showed this\ncommand in the OSPF episode or not but\n\n691\n00:32:59.608 --> 00:33:01.230\nit's really important here.\n\n692\n00:33:01.230 --> 00:33:03.970\nshow ip ospf interface,\nyou can see the interface and\n\n693\n00:33:03.970 --> 00:33:06.430\nit'll actually tell you what\nit thinks the bandwidth is.\n\n694\n00:33:06.430 --> 00:33:09.310\nThis is also where I can see what\nthe point to point link is, or\n\n695\n00:33:09.310 --> 00:33:13.466\nthat it is point to point versus\na multi-access network, right?\n\n696\n00:33:13.466 --> 00:33:16.630\nAnd I can see that cost of 1000, right.\n\n697\n00:33:16.630 --> 00:33:20.800\nThat cost of 1000, if you remember\nhow cost is calculated, the reference\n\n698\n00:33:20.800 --> 00:33:25.690\nbandwidth of 100 megabit divided by your\nactual bandwidth, then results in this.\n\n699\n00:33:25.690 --> 00:33:29.730\nWhich I'm trying to do math in my head,\nI think that's one megabit isn't it?\n\n700\n00:33:29.730 --> 00:33:32.820\nWe might have to do the good old\nshow interface command to actually\n\n701\n00:33:32.820 --> 00:33:36.260\nsee what I want here, cuz I'm not\nseeing the bandwidth in this list.\n\n702\n00:33:36.260 --> 00:33:39.540\nAnd I don't feel like doing the math, so\nI'm gonna do a show interface tunnel0 and\n\n703\n00:33:39.540 --> 00:33:40.410\nthat will tell me too.\n\n704\n00:33:41.420 --> 00:33:47.740\nRight there, bandwidth is showing is 8Mb,\nwell that's odd one, all right.\n\n705\n00:33:47.740 --> 00:33:49.117\nWell, actually, here we go.\n\n706\n00:33:49.117 --> 00:33:52.900\nSo there's two different bandwidths on\nan interface, so let me point this out.\n\n707\n00:33:52.900 --> 00:33:54.980\nNotice down here, my tunnel transport.\n\n708\n00:33:54.980 --> 00:33:56.909\nSee how it ended up being MTU 1476?\n\n709\n00:33:56.909 --> 00:33:57.758\nI set it to 1400.\n\n710\n00:33:57.758 --> 00:34:01.100\nSo it's bumped it up, and that's part\nof that overhead I was talking about.\n\n711\n00:34:01.100 --> 00:34:02.550\nI'm trying to stay under 1500.\n\n712\n00:34:02.550 --> 00:34:04.680\nBut then we've got the tunnel transmit and\nreceive bandwidth,\n\n713\n00:34:04.680 --> 00:34:06.350\nand they're set to 8 megabit.\n\n714\n00:34:06.350 --> 00:34:10.540\nAll right, but my line didn't show up as\n8 megabit, it showed up as 1 megabit.\n\n715\n00:34:10.540 --> 00:34:11.640\nSo why is that?\n\n716\n00:34:11.640 --> 00:34:14.928\nWell, if you look up here,\nhere's the bandwidth command.\n\n717\n00:34:14.928 --> 00:34:15.815\nIt wasn't 1 megabit, it was 100K.\n\n718\n00:34:15.815 --> 00:34:19.586\nSo, the reason it's 100K is because\nthe bandwidth was just assigned that,\n\n719\n00:34:19.586 --> 00:34:23.560\nan arbitrary number that it assigned\nwhen I created the tunnel interface.\n\n720\n00:34:23.560 --> 00:34:27.290\nIf I wanna fix that,\nI need to go and override that.\n\n721\n00:34:27.290 --> 00:34:28.987\nThere's a bandwidth command we can use,\n\n722\n00:34:28.987 --> 00:34:32.248\nand the bandwidth command doesn't actually\nchange the bandwidth of the line.\n\n723\n00:34:32.248 --> 00:34:35.800\nIt simply changes the bandwidth\nas the routing protocol sees it.\n\n724\n00:34:35.800 --> 00:34:40.790\nSo, if I wanna manipulate that,\nright, if I know it's a gigabit line,\n\n725\n00:34:40.790 --> 00:34:44.400\nI can get into my configuration,\nI can get in to the tunnel interface and\n\n726\n00:34:44.400 --> 00:34:48.930\nI can say bandwidth, and\nthen specify the bandwidth in kilobits.\n\n727\n00:34:48.930 --> 00:34:54.425\nSo if it's a gig line, that would be\n1,000,000 kilobits, is that right?\n\n728\n00:34:54.425 --> 00:34:56.730\nSo that's kilobits,\nmegabits, gigabits, yeah.\n\n729\n00:34:56.730 --> 00:34:59.890\nSo it'd be 1 million, and\nso now it knows that, and\n\n730\n00:34:59.890 --> 00:35:01.730\nI need to do the same\nthing on the other end.\n\n731\n00:35:01.730 --> 00:35:02.840\nNow, this is a point-to-point link.\n\n732\n00:35:02.840 --> 00:35:04.011\nThere's only one way to get\nfrom point A to point B.\n\n733\n00:35:04.011 --> 00:35:06.700\nSo I don't really care\nwhat the bandwidth is.\n\n734\n00:35:06.700 --> 00:35:10.180\nBut if I want the metrics to be accurate\nif there is more than one tunnel,\n\n735\n00:35:10.180 --> 00:35:10.960\nthen this is important.\n\n736\n00:35:10.960 --> 00:35:13.650\nMaybe one of my tunnels is 100 meg and\nthe other's a gig,\n\n737\n00:35:13.650 --> 00:35:15.330\nI want those numbers to be right.\n\n738\n00:35:15.330 --> 00:35:19.330\nThis has zero influence on\nthe actual bandwidth of the line.\n\n739\n00:35:19.330 --> 00:35:21.870\nThis just influences\nthe dynamic routing protocol.\n\n740\n00:35:21.870 --> 00:35:24.880\nI'm gonna do the same thing on router one,\njust so it's consistent.\n\n741\n00:35:24.880 --> 00:35:25.520\n&gt;&gt; And we do that so\n\n742\n00:35:25.520 --> 00:35:29.110\nthe routing protocol prefers one\nrouter over the other, correct?\n\n743\n00:35:29.110 --> 00:35:31.807\n&gt;&gt; Right, and that it has a proper\nunderstanding of what that bandwidth is,\n\n744\n00:35:31.807 --> 00:35:33.670\nwhich is what it needs\nto make that decision.\n\n745\n00:35:33.670 --> 00:35:38.040\nIf we don't do this, then it's\ngonna make bad decisions all right.\n\n746\n00:35:38.040 --> 00:35:41.888\nAnd so now the metric should be a little\nmore inline when I do a show ip route and\n\n747\n00:35:41.888 --> 00:35:44.420\nI look at the metric that's on here.\n\n748\n00:35:44.420 --> 00:35:49.750\nI should see that metric drop\nfrom 1001 down to probably two,\n\n749\n00:35:49.750 --> 00:35:53.620\nbecause it's just two gig links or\nwhatever, so it will come down.\n\n750\n00:35:53.620 --> 00:35:55.630\nIt will take it a little\nwhile to renegotiate that,\n\n751\n00:35:55.630 --> 00:35:58.470\ncuz remember that OSPF is\na trigger based mechanism, so\n\n752\n00:35:58.470 --> 00:36:01.230\nwhen the network changes that's\nwhen it triggers an update.\n\n753\n00:36:01.230 --> 00:36:03.810\nChanging the bandwidth doesn't\nactually change the network.\n\n754\n00:36:03.810 --> 00:36:08.090\nSo I've got to wait for it to gather that\ndata, but it will get it eventually and\n\n755\n00:36:08.090 --> 00:36:10.940\nthen that metric will update sooner or\nlater.\n\n756\n00:36:10.940 --> 00:36:12.430\nThere, it already happened.\n\n757\n00:36:12.430 --> 00:36:15.430\nSo now I can see that metric dropped to 2,\nright?\n\n758\n00:36:15.430 --> 00:36:17.700\nNow, how do they get a metric of 2?\n\n759\n00:36:17.700 --> 00:36:21.310\nWell, if we look at my chart here,\nI've got a gig link here,\n\n760\n00:36:21.310 --> 00:36:23.220\na gig link here, gig link here, right.\n\n761\n00:36:23.220 --> 00:36:25.360\nAnd a gig link in OSPF has a cost of 1.\n\n762\n00:36:25.360 --> 00:36:28.760\nSo you'd think it would be 1,\n2, 3, right, a cost of 3.\n\n763\n00:36:28.760 --> 00:36:33.130\nWell, it's viewing this as a point\nto point link, as one link.\n\n764\n00:36:33.130 --> 00:36:35.910\nSo going from router 6\nacross all this junk is\n\n765\n00:36:35.910 --> 00:36:38.960\none single gigabit link with a cost of 1.\n\n766\n00:36:38.960 --> 00:36:41.861\nAnd then there's the actual destination\nnetwork, which also has a cost of 1.\n\n767\n00:36:41.861 --> 00:36:45.670\nSo that's where we get to our cost\nof 2 to get from point A to point B.\n\n768\n00:36:45.670 --> 00:36:48.850\nBut now my tunnel is up,\nI'm learning my routes, and\n\n769\n00:36:48.850 --> 00:36:50.260\nas far as these two routers are concerned,\n\n770\n00:36:50.260 --> 00:36:53.980\nthey're directly connected and all that\ncomplexity in between them is gone.\n\n771\n00:36:53.980 --> 00:36:57.180\nLet's go back to the original traceroute\nthat I ran at the very beginning of\n\n772\n00:36:57.180 --> 00:36:58.110\nthe episode.\n\n773\n00:36:58.110 --> 00:37:03.020\nRight, so on router 6, I probably still\nhave that in my history somewhere, or not.\n\n774\n00:37:03.020 --> 00:37:07.860\nSo if I look at my history though,\nI ran that traceroute and\n\n775\n00:37:07.860 --> 00:37:12.090\nI saw the individual hops that are in\nbetween me and the destination.\n\n776\n00:37:12.090 --> 00:37:16.380\nIf I do that traceroute now, I'm gonna\nsee something very different, right.\n\n777\n00:37:16.380 --> 00:37:21.960\nSo if I do a traceroute to 172.16.0.6,\n\n778\n00:37:21.960 --> 00:37:26.260\nwhen it hops across, I'm going to hit\nthe tunnel and then my destination.\n\n779\n00:37:26.260 --> 00:37:30.951\nSo before I saw router2 and router4\nthat were in between me and router6,\n\n780\n00:37:30.951 --> 00:37:32.520\nnow I just see router6.\n\n781\n00:37:32.520 --> 00:37:34.610\nRouter2 and 4 are completely hidden.\n\n782\n00:37:34.610 --> 00:37:35.720\nI jump right over there, right?\n\n783\n00:37:35.720 --> 00:37:38.760\nThat's what a GRE tunnel is all\nabout is hiding complexity.\n\n784\n00:37:38.760 --> 00:37:42.430\nYou get zero security, zero encryption,\nzero digital signature,\n\n785\n00:37:42.430 --> 00:37:43.980\nzero tamper protection.\n\n786\n00:37:43.980 --> 00:37:46.740\nAll you get is hiding complexity.\n\n787\n00:37:46.740 --> 00:37:48.640\nIt's a VPN without all of\nthe security features.\n\n788\n00:37:48.640 --> 00:37:49.930\nThat's what GRE is all about.\n\n789\n00:37:49.930 --> 00:37:50.970\n&gt;&gt; So we got to be really,\n\n790\n00:37:50.970 --> 00:37:54.370\nreally careful about what we\ntunnel across the tunnel, right?\n\n791\n00:37:54.370 --> 00:37:56.630\n&gt;&gt; Yeah, I mean,\nif I'm tunneling across the internet,\n\n792\n00:37:56.630 --> 00:37:59.200\npeople could still intercept that and\nsee what that data is.\n\n793\n00:37:59.200 --> 00:38:01.870\nSo I still need security on top\nof it if it's the internet.\n\n794\n00:38:01.870 --> 00:38:04.730\nBut if it's just a frame relay cloud and\nI'm trying to\n\n795\n00:38:04.730 --> 00:38:07.955\nhide all the frame relay links in between\nit, then that's a secure network.\n\n796\n00:38:07.955 --> 00:38:10.170\nIt's my network but\nI'm hiding that complexity.\n\n797\n00:38:10.170 --> 00:38:13.280\nI'm merging and letting that dynamic\nrouting protocol run across a WAN.\n\n798\n00:38:13.280 --> 00:38:16.650\n&gt;&gt; A very cool tool in our\ntool kit as network admins.\n\n799\n00:38:16.650 --> 00:38:18.820\nHopefully one day you'll\nbe if you're not already.\n\n800\n00:38:18.820 --> 00:38:22.110\nAnd you never know when GRE might be\nthe right tool for the right job.\n\n801\n00:38:22.110 --> 00:38:23.265\nLike Don, you said before,\n\n802\n00:38:23.265 --> 00:38:26.685\nyou're probably not gonna use it a whole\nlot because there's typically better ways\n\n803\n00:38:26.685 --> 00:38:29.061\nin which we'll want to implement\ntunneling and all that.\n\n804\n00:38:29.061 --> 00:38:32.977\nVPN comes right to mind, but you never\nknow when this might be just the right\n\n805\n00:38:32.977 --> 00:38:35.040\nthing that you need for that right job.\n\n806\n00:38:35.040 --> 00:38:36.311\nSo definitely learn GRE.\n\n807\n00:38:36.311 --> 00:38:37.531\nIt can be very very handy and helpful.\n\n808\n00:38:37.531 --> 00:38:39.732\nDon, we thank you for\nexplaining GRE to us.\n\n809\n00:38:39.732 --> 00:38:44.180\nThat we will understand it and that we\nwill be able to use it in our future.\n\n810\n00:38:44.180 --> 00:38:46.757\nThat being said, it looks like we've\nrun out of time for this episode.\n\n811\n00:38:46.757 --> 00:38:48.639\nWe're gonna be go ahead and\nsign off for ITProvTV.\n\n812\n00:38:48.639 --> 00:38:49.956\nI've been your host Daniel Lowrie.\n\n813\n00:38:49.956 --> 00:38:50.873\n&gt;&gt; And I am Don Pezet.\n\n814\n00:38:50.873 --> 00:38:51.834\n&gt;&gt; We'll see you next time.\n\n815\n00:38:51.834 --> 00:39:01.500\n[SOUND]\n\n",
          "vimeoId": "181122650"
        },
        {
          "description": "In this episode, Wes and Don discuss various WAN technologies that the viewer should be aware of for the CCNA Routing and Switching exam. They take a look at the changes in the connectivity types such as company resources moving from internal locations to the cloud and what that means in terms of the connections types. They talk about the topologies, tunnels, VPNs and the common technologies used in these concepts.",
          "length": "2023",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/cisco-ccna200105/cisco-ccna200105-3-3-wan_connectivity-110716-PGM.00_00_11_25.Still001.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/cisco-ccna200105/cisco-ccna200105-3-3-wan_connectivity-110716-PGM.00_00_11_25.Still001-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/cisco-ccna200105/cisco-ccna200105-3-3-wan_connectivity-110716-PGM.00_00_11_25.Still001-sm.jpg",
          "title": "WAN Connectivity",
          "transcript": "WEBVTT\n\n1\n00:00:00.008 --> 00:00:08.302\nWelcome to ITPRO.TV I'm your host-\n&gt;&gt; [CROSSTALK]\n\n2\n00:00:08.302 --> 00:00:10.163\n&gt;&gt; You're watching ITPRO.TV.\n\n3\n00:00:10.163 --> 00:00:15.210\n&gt;&gt; Welcome back to another\nexciting episode here at ITProTV.\n\n4\n00:00:15.210 --> 00:00:16.120\nI'm your host Wes Bryan.\n\n5\n00:00:16.120 --> 00:00:19.570\nAnd in today's episode we're coming\nback at you with more Cisco Routing and\n\n6\n00:00:19.570 --> 00:00:20.080\nSwitching.\n\n7\n00:00:20.080 --> 00:00:22.680\nAnd we've been looking in\na different technologies like\n\n8\n00:00:22.680 --> 00:00:25.430\ninfrastructure maintenance,\ninfrastructure services.\n\n9\n00:00:25.430 --> 00:00:28.796\nWell we got a new one that were coming at\nyou with and that is WAN technologies and\n\n10\n00:00:28.796 --> 00:00:31.380\njoining me in this studio is\nnone other than Mr. Don Pezet.\n\n11\n00:00:31.380 --> 00:00:32.410\nDon, how are you doing sir?\n\n12\n00:00:32.410 --> 00:00:33.342\n&gt;&gt; I'm doing great Wes.\n\n13\n00:00:33.342 --> 00:00:37.656\nReady to dive back in the world of Cisco\nand yeah this episode is WAN connectivity,\n\n14\n00:00:37.656 --> 00:00:39.480\nright, when is wider in network?\n\n15\n00:00:39.480 --> 00:00:44.050\nAnd so we're talking about when you're\ncompany, organization or even your home\n\n16\n00:00:44.050 --> 00:00:50.280\nhas to get connected up to some kind\nof external network that you don't own.\n\n17\n00:00:50.280 --> 00:00:51.450\nYou might control it.\n\n18\n00:00:51.450 --> 00:00:54.840\nYou certainly pay for it,\nbut you don't own it, right?\n\n19\n00:00:54.840 --> 00:00:58.810\nSo this is what a lot of people will call\na leased line or a lease-type connection.\n\n20\n00:00:58.810 --> 00:01:03.700\nIf you think of a home user,\nwhere you might have DSL,\n\n21\n00:01:03.700 --> 00:01:08.350\nor broadband, a high-speed-cable internet,\nor whatever they want to call it.\n\n22\n00:01:08.350 --> 00:01:12.090\nWhen you have those connections,\nyou don't own the phone line,\n\n23\n00:01:12.090 --> 00:01:16.720\nyou don't own the cable connection you\nlease those from the phone company that\n\n24\n00:01:16.720 --> 00:01:20.420\nyou pay rental fee or whatever every\nsingle month that you have it.\n\n25\n00:01:20.420 --> 00:01:22.700\nAnd if you don't want it anymore you\nyou cancel and that's the end of it and\n\n26\n00:01:22.700 --> 00:01:23.860\nyou give the lines back.\n\n27\n00:01:23.860 --> 00:01:28.560\nNow in those scenarios these\nconnections are important to us\n\n28\n00:01:28.560 --> 00:01:31.240\nUsually connects us to the internet for\nhome users.\n\n29\n00:01:31.240 --> 00:01:34.530\nFor businesses it may not connect us to\nany internet, it may connect us to branch\n\n30\n00:01:34.530 --> 00:01:38.040\noffices that are out there and that's\neven more important to our business.\n\n31\n00:01:38.040 --> 00:01:41.840\nSo we have different use case scenarios\nbut the technology underline and\n\n32\n00:01:41.840 --> 00:01:43.220\nit's really all the same.\n\n33\n00:01:43.220 --> 00:01:47.260\nAnd so in this section we wanna talk about\nthose technologies and what they are, and\n\n34\n00:01:47.260 --> 00:01:50.433\njust kind of think about it as we go\nthrough how we would use that for\n\n35\n00:01:50.433 --> 00:01:54.263\nhome versus business, now in the exam\nthe exam is really focused on business.\n\n36\n00:01:54.263 --> 00:01:57.959\nAnd that's what I'm going to focus here\non this show too, is how we use this for\n\n37\n00:01:57.959 --> 00:02:01.770\nthings like home office,\nbranch office connectivity and so on.\n\n38\n00:02:01.770 --> 00:02:06.140\nNow the other reason this is\nreally important is things to it,\n\n39\n00:02:06.140 --> 00:02:08.600\nI'm gonna use the buzzword of\nthe day which is the cloud.\n\n40\n00:02:08.600 --> 00:02:10.150\nWe can blame everything on the cloud.\n\n41\n00:02:10.150 --> 00:02:11.200\nIt's the cloud's fault.\n\n42\n00:02:11.200 --> 00:02:15.300\nBut, more and more companies are moving\ntheir resources into the cloud,\n\n43\n00:02:15.300 --> 00:02:20.330\ninto services like Amazon Web Services,\nAWS, Microsoft Azure,\n\n44\n00:02:20.330 --> 00:02:25.170\nGoogle Compute, Rack Spaces,\nI forgot what theirs is called but\n\n45\n00:02:25.170 --> 00:02:26.910\ntheir whole open stack connectivity.\n\n46\n00:02:26.910 --> 00:02:32.120\nThat those different systems\nare far more cost efficient and\n\n47\n00:02:32.120 --> 00:02:35.500\na lot more powerful than the data centers\nthat we can build in our own environment.\n\n48\n00:02:35.500 --> 00:02:38.600\nSo it makes sense for\ncompanies to move their services up there.\n\n49\n00:02:38.600 --> 00:02:42.330\nWell that changes the ways companies work.\n\n50\n00:02:42.330 --> 00:02:45.860\nIn the olden days,\nreally even three years ago,\n\n51\n00:02:45.860 --> 00:02:49.030\nwe used to have an email server that\nwas right here in the building with us.\n\n52\n00:02:49.030 --> 00:02:52.120\nAnd so when you sent me an email it\nactually came to a mail server that was\n\n53\n00:02:52.120 --> 00:02:55.190\nright here in the building,\nthat we had to back up every single night.\n\n54\n00:02:55.190 --> 00:02:56.900\nAnd if it had a problem\nwe had to restore it, and\n\n55\n00:02:56.900 --> 00:02:59.320\nwhen the server hardware got\nold we had to upgrade it.\n\n56\n00:02:59.320 --> 00:03:03.330\nWell about three years ago we\nmoved that up into the cloud.\n\n57\n00:03:03.330 --> 00:03:05.050\nI'm trying to think of\nwhere it actually is.\n\n58\n00:03:05.050 --> 00:03:07.270\nI think it's in Microsoft Azure right now.\n\n59\n00:03:07.270 --> 00:03:09.770\nSo if you send us an email it\nactually goes up to Azure.\n\n60\n00:03:09.770 --> 00:03:11.700\nNow what does that mean for us?\n\n61\n00:03:11.700 --> 00:03:14.780\nWell it means we save some money,\nit's more reliable, it's more stable.\n\n62\n00:03:14.780 --> 00:03:18.990\nBut it means when I check my email,\ninstead of my laptop\n\n63\n00:03:18.990 --> 00:03:23.180\nreaching out to a server that's just on\nthe other side of these walls Instead,\n\n64\n00:03:23.180 --> 00:03:25.040\nI'm going out to the internet.\n\n65\n00:03:25.040 --> 00:03:27.720\nI'm going out\na Wide Area Network connection,\n\n66\n00:03:27.720 --> 00:03:30.110\na WAN connection out to the internet.\n\n67\n00:03:30.110 --> 00:03:34.140\nAnd if you have a thousand\nemployees in your home office and\n\n68\n00:03:34.140 --> 00:03:37.850\nall thousand employees have to go out the\nWAN connection that connects your cloud\n\n69\n00:03:37.850 --> 00:03:39.930\nresources, that's a big deal.\n\n70\n00:03:39.930 --> 00:03:41.370\nAnd you didn't have to worry about that so\n\n71\n00:03:41.370 --> 00:03:44.890\nmuch before when the servers are right\nthere in the building, right?\n\n72\n00:03:44.890 --> 00:03:46.870\nLocal Area Networks, LAN.\n\n73\n00:03:46.870 --> 00:03:52.990\nYou can get high speed connections on\nthe cheapest of networks, a network\n\n74\n00:03:52.990 --> 00:03:58.020\nthat a company has just failed to invest\nany money in, it's gonna be a 100 MB.\n\n75\n00:03:58.020 --> 00:04:00.930\n100 MB hardware is dirt, cheap these days,\n\n76\n00:04:00.930 --> 00:04:04.040\nso you can have a 100 MB network,\nsuper easy.\n\n77\n00:04:04.040 --> 00:04:06.390\nI'm surprised when I don't encounter\ngigabit these days, all right?\n\n78\n00:04:06.390 --> 00:04:08.120\nMost networks have gigabit LAN.\n\n79\n00:04:09.400 --> 00:04:10.640\njust that is kind of the gig right.\n\n80\n00:04:10.640 --> 00:04:13.660\nMaybe I'm wireless right now,\nI'm wireless you gonna have 54 megabit or\n\n81\n00:04:13.660 --> 00:04:14.770\nhigher this days.\n\n82\n00:04:14.770 --> 00:04:17.986\nAnd that's cheap even consumer\ncan give you 54 megabits.\n\n83\n00:04:17.986 --> 00:04:20.730\nOn a WAN connection though,\n\n84\n00:04:20.730 --> 00:04:24.970\non your wider area connection,\na 100 megabits is still not common.\n\n85\n00:04:24.970 --> 00:04:28.120\nThat it's very common to have\na 20 megabit connection or\n\n86\n00:04:28.120 --> 00:04:30.280\n10 megabit connection even lower.\n\n87\n00:04:30.280 --> 00:04:31.640\nWhen you're talking about\ninternet connectivity,\n\n88\n00:04:31.640 --> 00:04:36.060\nyou're leasing space from a provider and\nyou're not gonna have a ton of bandwidth.\n\n89\n00:04:36.060 --> 00:04:41.210\nSo, when we move our local resources up to\nthe cloud, we gain reliability, we gain\n\n90\n00:04:41.210 --> 00:04:46.120\nefficiency, we gain ease of management,\nbut we usually lose on bandwidth.\n\n91\n00:04:46.120 --> 00:04:47.500\nThat makes things slower.\n\n92\n00:04:47.500 --> 00:04:49.660\nPeople have slower access to email,\nthat's frustrating.\n\n93\n00:04:49.660 --> 00:04:51.910\nAnd so\nwe need to understand when can activities,\n\n94\n00:04:51.910 --> 00:04:53.320\nwe make sure we account for that.\n\n95\n00:04:53.320 --> 00:04:55.300\nThe cloud is a big part of that.\n\n96\n00:04:55.300 --> 00:04:59.450\nWhen your resources are hosting the cloud,\nyour WAN becomes really important.\n\n97\n00:04:59.450 --> 00:05:02.160\n&gt;&gt; And Don, you've mentioned that\nit's just as little as three years\n\n98\n00:05:02.160 --> 00:05:05.370\nago that the way we would connect\nto those internal resources and\n\n99\n00:05:05.370 --> 00:05:08.080\nwhere they're stored\nis rapidly changing so\n\n100\n00:05:08.080 --> 00:05:12.850\nit definitely presents additional options\nthat we didn't have just years prior.\n\n101\n00:05:12.850 --> 00:05:13.710\n&gt;&gt; Yeah, absolutely.\n\n102\n00:05:13.710 --> 00:05:15.690\nAnd let's start with the basics.\n\n103\n00:05:15.690 --> 00:05:17.750\nI guess some little diagrams\nhelp illustrate this.\n\n104\n00:05:17.750 --> 00:05:21.090\nThis is one of those topics where we\ndon't actually have anything to figure,\n\n105\n00:05:21.090 --> 00:05:23.150\nlike no line jumping to a command line or\nwhatever.\n\n106\n00:05:23.150 --> 00:05:25.810\nThese are kind of the concepts\nthat we need to know.\n\n107\n00:05:25.810 --> 00:05:28.960\nAnd in a basic wider Internet\nconnection,you'll see\n\n108\n00:05:28.960 --> 00:05:32.710\nan environment something like this where\nwe have our Local Area Network, right.\n\n109\n00:05:32.710 --> 00:05:35.260\nThis is the network that we own,\nwe controlled,\n\n110\n00:05:35.260 --> 00:05:38.160\nwe bought it, if we don't like a piece\nof equipment we can swap it out,\n\n111\n00:05:38.160 --> 00:05:41.070\nif we wanna change a password\nwe can change a password, right.\n\n112\n00:05:41.070 --> 00:05:43.010\nAnd in our network somewhere.\n\n113\n00:05:43.010 --> 00:05:45.400\nWe'll have we call Edge Router.\n\n114\n00:05:45.400 --> 00:05:50.340\nThe Edge Router is the device that sets\nat the very last point of your network.\n\n115\n00:05:50.340 --> 00:05:55.360\nAnd that Edge Router maybe an actual\nrouter or Cisco 2900 series router or\n\n116\n00:05:55.360 --> 00:05:59.270\nsomething like that or might be\na firewall, or a lot of people just use\n\n117\n00:05:59.270 --> 00:06:03.920\nCisco SA as another firewall type\ndevice that act as tha Edge device.\n\n118\n00:06:03.920 --> 00:06:06.610\nAnd there are some layer 3 switches\nthat could serve this role too.\n\n119\n00:06:06.610 --> 00:06:11.040\nLike the 6500 which have firewall cards,\nyou could do it from a switch.\n\n120\n00:06:11.040 --> 00:06:14.680\nBut typically it's gonna be a router or\na firewall and that's your edge router.\n\n121\n00:06:14.680 --> 00:06:17.940\nAnd then you've got your actual WAN link.\n\n122\n00:06:17.940 --> 00:06:20.580\nYour WAN link can be any of\na number of technologies.\n\n123\n00:06:20.580 --> 00:06:22.310\nIt could be T1 lines.\n\n124\n00:06:22.310 --> 00:06:25.760\nIt could be DSL, cable broadband.\n\n125\n00:06:25.760 --> 00:06:29.090\nIt could be ISDN hopefully not.\n\n126\n00:06:29.090 --> 00:06:32.320\nIt could be MPLS,\nthat's getting to be very common, and\n\n127\n00:06:32.320 --> 00:06:34.350\nMPLS is normally laid on\ntop of other technologies.\n\n128\n00:06:34.350 --> 00:06:35.870\nSo, it could be metro ethernet.\n\n129\n00:06:35.870 --> 00:06:37.570\nThis could just be a regular\nethernet connection.\n\n130\n00:06:37.570 --> 00:06:41.720\nIt doesn't have to be some crazy serial\nbased technology like we've seen before.\n\n131\n00:06:41.720 --> 00:06:43.710\nBut, that's what we're\nactually paying for.\n\n132\n00:06:43.710 --> 00:06:45.350\nThat's where our money goes.\n\n133\n00:06:45.350 --> 00:06:47.690\nAnd that connects us\nto a service provider.\n\n134\n00:06:47.690 --> 00:06:52.150\nNow at the service provider they'll have\na router that you terminate against which\n\n135\n00:06:52.150 --> 00:06:54.100\nalmost always is router.\n\n136\n00:06:54.100 --> 00:06:56.930\nIna cable environment might\nbe a cable head end unit or\n\n137\n00:06:56.930 --> 00:07:01.560\nDSL might be a DSLAM, but\nif you've got t one connectivity or\n\n138\n00:07:01.560 --> 00:07:04.110\nMPLS it's almost always\na router on the other side.\n\n139\n00:07:04.110 --> 00:07:07.130\nIf this were a frame relay line\nthose might be a frame relay switch.\n\n140\n00:07:07.130 --> 00:07:09.980\nThere's different things that the service\nprovider will connect to, but\n\n141\n00:07:09.980 --> 00:07:12.350\nthat puts you on the service\nprovider network.\n\n142\n00:07:12.350 --> 00:07:13.950\nEven if you're buying\nInternet connectivity,\n\n143\n00:07:13.950 --> 00:07:16.860\nit doesn't connect you to the Internet,\nit connects you to the service provider.\n\n144\n00:07:16.860 --> 00:07:20.020\nAnd then they have\na wide area network link\n\n145\n00:07:20.020 --> 00:07:22.180\nthat connects them up to the Internet.\n\n146\n00:07:22.180 --> 00:07:23.930\nAnd depending on how big\nthe service provider is,\n\n147\n00:07:23.930 --> 00:07:28.280\nthis might be a hardcore fiber optic\ncable with terabytes of bandwidth or\n\n148\n00:07:28.280 --> 00:07:31.540\nit could be something really low.\n\n149\n00:07:31.540 --> 00:07:32.820\nA simple T1 or whatever.\n\n150\n00:07:32.820 --> 00:07:35.360\nHopefully, it's on the bigger end of that.\n\n151\n00:07:35.360 --> 00:07:37.660\nBut they'll have usually like an OC3 or\nOC12 or\n\n152\n00:07:37.660 --> 00:07:42.590\nsomething like that that connects\nthem up to an Internet backbone.\n\n153\n00:07:42.590 --> 00:07:46.780\nAnd those OCs or optical cables which\nare fiber optic connections used for\n\n154\n00:07:46.780 --> 00:07:47.340\nbackbones.\n\n155\n00:07:47.340 --> 00:07:48.920\nA lot of ISPs have those.\n\n156\n00:07:48.920 --> 00:07:50.467\nSo you see connectivity like that.\n\n157\n00:07:50.467 --> 00:07:53.297\n&gt;&gt; And Don would you say that\nthe importance in understanding these even\n\n158\n00:07:53.297 --> 00:07:55.541\nthough that we don't own and\ncontrol these networks,\n\n159\n00:07:55.541 --> 00:07:58.613\nwe'll still have to connect to them so\nwe need to know the technologies that\n\n160\n00:07:58.613 --> 00:08:00.650\ndo connect to these ISP based networks,\nright?\n\n161\n00:08:00.650 --> 00:08:03.823\nAbsolutely and\nwhat I wanna know is if I go to an ISP and\n\n162\n00:08:03.823 --> 00:08:07.285\nI say look, my company is\nheavily invested in the cloud so\n\n163\n00:08:07.285 --> 00:08:10.910\nI need a metro ethernet connection\nwith a ton of bandwidth.\n\n164\n00:08:10.910 --> 00:08:12.580\nAnd they say, hey, no problem.\n\n165\n00:08:12.580 --> 00:08:16.220\nWe can run fiber right to your building\nand we can give you a gigabit.\n\n166\n00:08:16.220 --> 00:08:17.290\nAll right.\n\n167\n00:08:17.290 --> 00:08:17.860\nPerfect.\n\n168\n00:08:17.860 --> 00:08:20.660\nI'm gonna have a gigabit\nconnection up to the Internet.\n\n169\n00:08:20.660 --> 00:08:21.390\nWonderful.\n\n170\n00:08:21.390 --> 00:08:21.890\nRight?\n\n171\n00:08:21.890 --> 00:08:25.790\nNow my Local Area Network will have\nthis great connectivity to the Internet.\n\n172\n00:08:25.790 --> 00:08:30.160\nBut then I found out that I'm not\ngetting gigabit access you know a lot of\n\n173\n00:08:30.160 --> 00:08:31.330\nspeed or whatever.\n\n174\n00:08:31.330 --> 00:08:35.300\nAnd the problem can stem from,\nover the service provider,\n\n175\n00:08:35.300 --> 00:08:38.090\nthey may have sold me a gigabit to them.\n\n176\n00:08:38.090 --> 00:08:40.810\nBut might not have given it\nthemselves to the internet.\n\n177\n00:08:40.810 --> 00:08:42.880\nAnd that's a shared across\nall their customers, so\n\n178\n00:08:42.880 --> 00:08:46.180\nthe more their customers the is\nbeing taken away from them.\n\n179\n00:08:46.180 --> 00:08:49.100\nSo I need to understand\nwhat their connectivity is.\n\n180\n00:08:49.100 --> 00:08:50.660\nAnd are they oversubscribing?\n\n181\n00:08:50.660 --> 00:08:51.530\nThey all do.\n\n182\n00:08:51.530 --> 00:08:53.170\nEvery service provider oversubscribes.\n\n183\n00:08:53.170 --> 00:08:56.910\nThey sell more client\nconnectivity than they do\n\n184\n00:08:56.910 --> 00:08:59.450\nactually purchase connectivity themselves.\n\n185\n00:08:59.450 --> 00:09:02.370\nSo in those scenarios you need to make\nsure the service provider can handle\n\n186\n00:09:02.370 --> 00:09:03.790\nyour bandwidth.\n\n187\n00:09:03.790 --> 00:09:06.910\nOr, or and\nyou need to get a service level agreement.\n\n188\n00:09:06.910 --> 00:09:11.630\nAn SLA where they guarantee you, if they\nare selling you a gigabit of bandwidth\n\n189\n00:09:11.630 --> 00:09:13.960\nyou need to make sure that that\ngigabit is available when you need it.\n\n190\n00:09:13.960 --> 00:09:17.430\nAnd a service level agreement\nis how you contract that.\n\n191\n00:09:17.430 --> 00:09:20.690\nNow, the closer you get to 100% SLA,\nthat 100% of your bandwidth is available\n\n192\n00:09:20.690 --> 00:09:24.480\nis available 100% of the time,\nthe more expensive it gets.\n\n193\n00:09:24.480 --> 00:09:26.446\nBut if you cut a deal like 50%,\n\n194\n00:09:26.446 --> 00:09:30.840\nlike 100% of my bandwidth will\nbe available 50% of the time.\n\n195\n00:09:30.840 --> 00:09:33.320\nThat will bring your cost way down\n\n196\n00:09:33.320 --> 00:09:38.010\nbecause they can resell that same bin with\nsomebody else and give them a 50% SLA.\n\n197\n00:09:38.010 --> 00:09:40.700\nAnd between the two of you\nthey can meet that SLA and\n\n198\n00:09:40.700 --> 00:09:42.220\nthe discharge twice with the same bin.\n\n199\n00:09:42.220 --> 00:09:43.290\nThat's what they do.\n\n200\n00:09:43.290 --> 00:09:45.990\nThat's why we've got to understand\nwhat's going on at the service provider,\n\n201\n00:09:45.990 --> 00:09:47.700\nall right.\n\n202\n00:09:47.700 --> 00:09:50.060\nThe other thing to think about is\nthat this is a pretty simple model.\n\n203\n00:09:50.060 --> 00:09:51.360\nThis is pretty basic.\n\n204\n00:09:51.360 --> 00:09:53.810\nWe can make it more advanced if we want.\n\n205\n00:09:53.810 --> 00:09:56.590\nIf all of your resources are in the Cloud,\n\n206\n00:09:56.590 --> 00:09:58.190\nwhat happens if your\nInternet connection fails?\n\n207\n00:09:59.240 --> 00:10:00.340\nIt happens, right?\n\n208\n00:10:00.340 --> 00:10:02.290\nCable and DSL, it happens all the time.\n\n209\n00:10:02.290 --> 00:10:07.570\nBut even metro ethernet, I've worked for\ncompanies in downtown Seattle,\n\n210\n00:10:07.570 --> 00:10:09.890\nwhere we were on the fiber loop for\ndowntown Seattle.\n\n211\n00:10:09.890 --> 00:10:12.720\nI mean, that's a big environment with\n\n212\n00:10:12.720 --> 00:10:14.950\nmillions of people\naffected if it goes out.\n\n213\n00:10:14.950 --> 00:10:16.360\nAnd it's gone out.\n\n214\n00:10:16.360 --> 00:10:19.930\nSomeone's running a back hoe somewhere and\nthey accidentally break the fiber line.\n\n215\n00:10:19.930 --> 00:10:23.880\nOr squirrels get into a junction box\nsomewhere and bite through the fiber.\n\n216\n00:10:23.880 --> 00:10:24.820\nIt happens.\n\n217\n00:10:24.820 --> 00:10:26.450\nThat actually happened up here in Florida.\n\n218\n00:10:26.450 --> 00:10:29.310\nSo, you know, these things they do occur.\n\n219\n00:10:29.310 --> 00:10:33.020\nSo we might choose to go dual home.\n\n220\n00:10:33.020 --> 00:10:36.480\nNot just one ISP, but more than one ISP.\n\n221\n00:10:36.480 --> 00:10:40.490\nAnd to keep my diagram simple, I kept it\nwith one router here, but if we want like\n\n222\n00:10:40.490 --> 00:10:44.270\nhigh availability, you'll probably have\nseparate routers, one router, the one\n\n223\n00:10:44.270 --> 00:10:47.560\nruns the service provider one and another\nrouter that runs the service provider two.\n\n224\n00:10:47.560 --> 00:10:51.330\nBut the ultimate goal is if\none service provider fails,\n\n225\n00:10:51.330 --> 00:10:52.990\nwe can flip over to the other one.\n\n226\n00:10:52.990 --> 00:10:56.410\nAnd if you haven't seen them already\nyou can check out our HSRP episodes and\n\n227\n00:10:56.410 --> 00:10:58.610\nI talk a little bit about how we\ncan kinda balance some of that.\n\n228\n00:10:58.610 --> 00:11:02.310\nBut you can use simple running protocols.\n\n229\n00:11:02.310 --> 00:11:06.100\nIf I have running protocols defined or\nstatic routes with a metric\n\n230\n00:11:06.100 --> 00:11:09.855\nwhere I prefer one ISP over another\nthat can handle a fail over.\n\n231\n00:11:09.855 --> 00:11:13.560\nSo it's really easy to fail\nover from one ISP to another.\n\n232\n00:11:13.560 --> 00:11:18.790\nIf I have a block of public IP's,\nthings get a little bit trickier there.\n\n233\n00:11:18.790 --> 00:11:22.780\nBecause the public IP's are normally\nbonded to one service provider.\n\n234\n00:11:22.780 --> 00:11:26.140\nIf I want my public IP's to be bonded\nto two different service providers,\n\n235\n00:11:26.140 --> 00:11:28.690\nnow I've gotta get border\ngateway protocol involved, BGP.\n\n236\n00:11:28.690 --> 00:11:31.570\nAnd we're going to talk about\nBGP in another episode, but\n\n237\n00:11:31.570 --> 00:11:34.690\nit does get more complex\nwhen we go to a home.\n\n238\n00:11:34.690 --> 00:11:36.450\nBut it's certainly an option and\n\n239\n00:11:36.450 --> 00:11:40.800\nthat's gonna give us where we're not\ndependent on our service provider anymore.\n\n240\n00:11:40.800 --> 00:11:44.460\nAnd if you're pushing resources into\nthe cloud this is really important.\n\n241\n00:11:44.460 --> 00:11:48.480\nRight here in our own studios, we have a\n200 mega bit fiber connection which is our\n\n242\n00:11:48.480 --> 00:11:50.560\nmain connection for the building.\n\n243\n00:11:50.560 --> 00:11:54.840\nBut then we have another 100 mega bit\ncable connection, that's our backup.\n\n244\n00:11:54.840 --> 00:11:55.340\nIt's our backup.\n\n245\n00:11:55.340 --> 00:11:58.090\nBecause if our fiber goes down,\nwe need something to fail over to.\n\n246\n00:11:58.090 --> 00:11:59.490\nAnd we fail over to a cable.\n\n247\n00:11:59.490 --> 00:12:03.060\nAnd now the cable line is significantly\nless expensive than the fiber line.\n\n248\n00:12:03.060 --> 00:12:04.950\nBut that's okay,\ncuz we're really don't use it most days.\n\n249\n00:12:04.950 --> 00:12:07.850\nMost days that, that cable line is\nsitting there doing absolutely nothing.\n\n250\n00:12:07.850 --> 00:12:09.390\nBut when we need it, it's there.\n\n251\n00:12:09.390 --> 00:12:10.910\nAnd that's an important\nconcept to remember.\n\n252\n00:12:12.310 --> 00:12:15.050\nSo then the other things are that.\n\n253\n00:12:15.050 --> 00:12:19.670\nInternet connectivity is not always\na component of wide area networks.\n\n254\n00:12:19.670 --> 00:12:22.460\nRight, I normally think of it that way,\nyou've got a WAN connection,\n\n255\n00:12:22.460 --> 00:12:24.500\nwell you must be connecting\nto the internet.\n\n256\n00:12:24.500 --> 00:12:28.325\nBut a lot companies want private lines.\n\n257\n00:12:28.325 --> 00:12:29.425\nWhat's the problem with the Internet?\n\n258\n00:12:29.425 --> 00:12:31.175\nWes, how private is the Internet?\n\n259\n00:12:31.175 --> 00:12:33.105\n&gt;&gt; Well, I've heard it before.\n\n260\n00:12:33.105 --> 00:12:34.815\nIf you think you've got\nprivacy on the Internet,\n\n261\n00:12:34.815 --> 00:12:38.145\nit's like going to your local mall's\nfood court standing up on a table and\n\n262\n00:12:38.145 --> 00:12:40.795\nyelling out, and\nexpecting not a single person to hear you.\n\n263\n00:12:40.795 --> 00:12:41.915\n&gt;&gt; Exactly, right?\n\n264\n00:12:41.915 --> 00:12:43.795\nIn the Internet, you can't trust it.\n\n265\n00:12:43.795 --> 00:12:46.915\nYou cross many,\nmany routers as you cross the Internet and\n\n266\n00:12:46.915 --> 00:12:50.505\nyou don't know who those companies are,\neven one employee at those companies.\n\n267\n00:12:50.505 --> 00:12:52.570\nSo it's not a trustworthy network.\n\n268\n00:12:52.570 --> 00:12:56.810\nSo, if you have a secure company,\nlet's say, you're a bank.\n\n269\n00:12:56.810 --> 00:12:58.880\nSo, I've got my\nheadquarters from the bank.\n\n270\n00:12:58.880 --> 00:13:01.870\nAnd I've got all these\nbranch offices out there.\n\n271\n00:13:01.870 --> 00:13:03.720\nI might choose not to have\nInternet connectivity.\n\n272\n00:13:03.720 --> 00:13:07.400\nInstead, I get point-to-point\nwide area network links.\n\n273\n00:13:07.400 --> 00:13:09.250\nAnd these might be T one lines.\n\n274\n00:13:09.250 --> 00:13:11.910\nIt might be MPLS circuits or frame relay.\n\n275\n00:13:11.910 --> 00:13:14.160\nThere's a number of different\ntechnologies that are available.\n\n276\n00:13:14.160 --> 00:13:19.130\nBut these are connections that just run\nfrom one branch to my headquarters.\n\n277\n00:13:19.130 --> 00:13:21.070\nThis is called a hub and spoke topology.\n\n278\n00:13:21.070 --> 00:13:23.350\nAnd this is very popular for\n\n279\n00:13:23.350 --> 00:13:27.780\nnetwork where you need security\nabove performance, all right.\n\n280\n00:13:27.780 --> 00:13:31.310\nNow, if we need Internet access,\nwe can always add it in.\n\n281\n00:13:31.310 --> 00:13:35.570\nIt wouldn't be hard to come in and say,\nokay, well turns out that i actually do\n\n282\n00:13:35.570 --> 00:13:38.240\nwant my branches to be able\nto get to the internet.\n\n283\n00:13:38.240 --> 00:13:42.630\nSo, I could go out and\nI could buy an Internet connection.\n\n284\n00:13:42.630 --> 00:13:44.980\nAnd I could connect\nthe headquarters to the Internet.\n\n285\n00:13:44.980 --> 00:13:47.320\nAnd when I do that,\nif a branch wants to get to the Internet,\n\n286\n00:13:47.320 --> 00:13:49.960\nthey can come up to headquarters and\ngo out to the Internet.\n\n287\n00:13:51.050 --> 00:13:53.770\nThe headquarters is always the hub.\n\n288\n00:13:53.770 --> 00:13:55.160\nNow, I know what you're thinking.\n\n289\n00:13:55.160 --> 00:13:57.770\nCouldn't I just get an Internet\nconnection at the branch?\n\n290\n00:13:57.770 --> 00:14:00.170\nWell, by having it all\nfunnel through the hub,\n\n291\n00:14:00.170 --> 00:14:03.400\nthrough the headquarters,\nwe can filter the traffic.\n\n292\n00:14:03.400 --> 00:14:05.450\nYou might have something like a firewall,\nor\n\n293\n00:14:05.450 --> 00:14:10.490\na web filtering software like\nWebsense that you can fire up.\n\n294\n00:14:10.490 --> 00:14:14.640\nCisco partners with Websense\nas well as H2G or something.\n\n295\n00:14:14.640 --> 00:14:15.710\nWhatever the other one is.\n\n296\n00:14:15.710 --> 00:14:19.840\nAnd you can filter that traffic and\nyou do it all in one place.\n\n297\n00:14:19.840 --> 00:14:23.100\nThat guarantees that no branch is\nable to bypass your filtering.\n\n298\n00:14:23.100 --> 00:14:26.320\nIf we have Internet connections\nin every branch, in theory,\n\n299\n00:14:26.320 --> 00:14:29.160\nevery branch becomes a back\ndoor into your network.\n\n300\n00:14:29.160 --> 00:14:32.720\nA hacker could break into the headquarters\nor a hacker could break into\n\n301\n00:14:32.720 --> 00:14:36.550\nanyone of your branches and then use\nthat to leap frog into the headquarters.\n\n302\n00:14:36.550 --> 00:14:40.550\nBut having them all run through\nheadquarters, now the only way in and\n\n303\n00:14:40.550 --> 00:14:41.990\nout of your network is\nthrough headquarters.\n\n304\n00:14:41.990 --> 00:14:44.670\nIt gives you that easier line to defend.\n\n305\n00:14:44.670 --> 00:14:46.650\n&gt;&gt; So if you're, maybe, working for\n\n306\n00:14:46.650 --> 00:14:49.380\na company that is supporting\nmilitary contracts,\n\n307\n00:14:49.380 --> 00:14:52.990\nor maybe needs to be HIPAA compliant,\nyou can't just give everybody access.\n\n308\n00:14:52.990 --> 00:14:54.960\nOr the potential to have\naccess to that information,\n\n309\n00:14:54.960 --> 00:14:56.550\nthis might be a solution to them.\n\n310\n00:14:56.550 --> 00:14:58.500\n&gt;&gt; Yeah, you mentioned the military.\n\n311\n00:14:58.500 --> 00:15:01.550\nI know a lot of viewers aren't in US,\nbut for\n\n312\n00:15:01.550 --> 00:15:06.060\nthose who are in US are military actually\nhas two completely separate networks.\n\n313\n00:15:06.060 --> 00:15:11.008\nWe have Niprnet and Siprnet, which you\nhave one that is non classified data's,\n\n314\n00:15:11.008 --> 00:15:13.370\nthat use to browse the Internet.\n\n315\n00:15:13.370 --> 00:15:16.310\nAnd the other one that\nis the secure network.\n\n316\n00:15:16.310 --> 00:15:19.870\nAnd on that one is not\nconnected to the internet, it's\n\n317\n00:15:19.870 --> 00:15:23.410\nonly connected to the military systems,\nand that's when they move secure data on.\n\n318\n00:15:23.410 --> 00:15:28.170\nSo, they've gone a super complex route,\nthey have two completely\n\n319\n00:15:28.170 --> 00:15:31.560\nseparate networks, and a computer can\nonly be plugged into one of them.\n\n320\n00:15:31.560 --> 00:15:33.600\nSo, there's different ways\nto approach that, but\n\n321\n00:15:33.600 --> 00:15:35.710\nit all comes down to your security needs.\n\n322\n00:15:35.710 --> 00:15:39.920\n&gt;&gt; So Don, you mentioned that, and I\nalways think of a WAN based technology as\n\n323\n00:15:39.920 --> 00:15:41.600\nbeing connected to that public Internet.\n\n324\n00:15:41.600 --> 00:15:43.970\nSo, let me go back to my\nnetwork fundamentals here and\n\n325\n00:15:43.970 --> 00:15:44.830\nsee if I can remember it.\n\n326\n00:15:44.830 --> 00:15:47.200\nSo it just basically means\ngeographically dispersed.\n\n327\n00:15:47.200 --> 00:15:49.840\nIt doesn't have to necessarily be\nconnected to a public network.\n\n328\n00:15:49.840 --> 00:15:52.900\n&gt;&gt; Yeah, yup, wide area and\nin on geographically dispersed.\n\n329\n00:15:52.900 --> 00:15:55.250\nI mean it could be two buildings\nthat are right next to each other.\n\n330\n00:15:55.250 --> 00:15:57.208\nBut you have to lease that line.\n\n331\n00:15:57.208 --> 00:16:01.407\nCuz maybe there's a road in between and\nyou're not allowed to just bury a cable in\n\n332\n00:16:01.407 --> 00:16:05.510\nbetween or try and cast a cable from one\nwindow to another and see how that goes.\n\n333\n00:16:05.510 --> 00:16:08.575\nYou can usually do point to point\nwireless, since something short like that,\n\n334\n00:16:08.575 --> 00:16:12.040\nthat wouldn't be WAN, but\nWAN solution is typically more stable.\n\n335\n00:16:12.040 --> 00:16:14.870\nNow, because our reliance on\nthe network gets more and\n\n336\n00:16:14.870 --> 00:16:18.370\nmore important, if we have things\nlike inter-branch communications,\n\n337\n00:16:18.370 --> 00:16:20.530\nwe might not want those to\npast through the headquarters.\n\n338\n00:16:20.530 --> 00:16:24.700\nAnd so some of the environments will go\nfor high redundancy and high availability.\n\n339\n00:16:24.700 --> 00:16:28.460\nAnd they'll do that by creating\nwhat's called a full mesh network.\n\n340\n00:16:28.460 --> 00:16:30.660\nLet me show you a diagram that\nkinda shows the whole mesh.\n\n341\n00:16:30.660 --> 00:16:33.680\nWe saw hub and spoke just a second ago,\nthis is a full mesh.\n\n342\n00:16:33.680 --> 00:16:37.240\nNotice how I still have three branches and\nI still have Headquarters.\n\n343\n00:16:37.240 --> 00:16:40.100\nBut instead of everybody just\nrunning back to Headquarters,\n\n344\n00:16:40.100 --> 00:16:42.240\nI have everybody connected\nto each other also.\n\n345\n00:16:42.240 --> 00:16:45.500\nSee Branch 1,\nBranch 1 has a connection to Headquarters.\n\n346\n00:16:45.500 --> 00:16:47.390\nBut it's also got\na connection to Branch 3,\n\n347\n00:16:47.390 --> 00:16:49.660\nand it's got a connection\ndown to Branch 2.\n\n348\n00:16:49.660 --> 00:16:53.970\nSo if Headquarters were to fail and\ngo offline, Branch 1, 2, and\n\n349\n00:16:53.970 --> 00:16:55.720\n3 would still be able\nto talk to each other.\n\n350\n00:16:55.720 --> 00:16:57.240\nThey just wouldn't be able\nto get to the Headquarters.\n\n351\n00:16:57.240 --> 00:16:59.260\nThat's kinda nice, right,\nthat I've got that connectivity.\n\n352\n00:16:59.260 --> 00:17:01.700\nAnd if I need to send data\nfrom Branch 1 to Branch 2,\n\n353\n00:17:01.700 --> 00:17:04.980\nI don't have to bother Headquarters\nwith it, I can go direct.\n\n354\n00:17:04.980 --> 00:17:06.960\nThe problem with a full net mesh network,\nwell,\n\n355\n00:17:06.960 --> 00:17:09.810\nI guess the positive side\nis the availability, right?\n\n356\n00:17:09.810 --> 00:17:13.890\nI mean, this is a very stable network\nbecause there's so many links in place\n\n357\n00:17:13.890 --> 00:17:18.900\nthat we can always hop around, if the link\nfrom Branch 1 to Headquarters fails,\n\n358\n00:17:18.900 --> 00:17:22.330\nBranch 1 can just jump to Branch 3 and\nup to Headquarters that way,\n\n359\n00:17:22.330 --> 00:17:27.070\nthere's redundant paths that we can\nachieve, this gives us great availability.\n\n360\n00:17:27.070 --> 00:17:29.500\nBut it doesn't scale very well.\n\n361\n00:17:29.500 --> 00:17:34.190\nEvery time I add a new location,\nI'm having to add more and more lines.\n\n362\n00:17:34.190 --> 00:17:35.610\nThere's a simple formula for this.\n\n363\n00:17:35.610 --> 00:17:37.060\nIt's n minus 1, right?\n\n364\n00:17:37.060 --> 00:17:41.010\nSo, n is the number of locations you have,\nand\n\n365\n00:17:41.010 --> 00:17:46.470\nthen when I add a location,\nn minus 1 is the amount of lines I need.\n\n366\n00:17:46.470 --> 00:17:47.840\nSo here, I've got four locations.\n\n367\n00:17:47.840 --> 00:17:49.390\n4 minus 1 is 3.\n\n368\n00:17:49.390 --> 00:17:52.180\nIf you look at branch one\nits got three connections.\n\n369\n00:17:52.180 --> 00:17:54.240\nIf I look at branch three\nits got three connections.\n\n370\n00:17:54.240 --> 00:17:58.290\nIf I add another branch right,\nso here I bring Branch 4.\n\n371\n00:17:58.290 --> 00:18:03.115\nWhen I add that branch now I've\ngot five branches, five offices.\n\n372\n00:18:03.115 --> 00:18:07.365\nSo five minus four, every office\nneeds four links and here they are.\n\n373\n00:18:07.365 --> 00:18:10.305\nRemember what they said was the key\ncharacteristics of wide area networks\n\n374\n00:18:10.305 --> 00:18:12.115\nyou don't owe this lines you lease them.\n\n375\n00:18:12.115 --> 00:18:14.685\nYou rent them right you're paying for\nthem every month.\n\n376\n00:18:14.685 --> 00:18:19.125\nSo with every line it's getting more and\nmore expensive.\n\n377\n00:18:19.125 --> 00:18:22.940\nThe more locations I add\nthe more it is gonna cost me.\n\n378\n00:18:22.940 --> 00:18:24.520\nAll right, so full mesh.\n\n379\n00:18:24.520 --> 00:18:25.900\nIt's really nice but\n\n380\n00:18:25.900 --> 00:18:30.280\nit's not necessarily something we can\nachieve with point to point links.\n\n381\n00:18:30.280 --> 00:18:34.960\nSo instead, there's a whole selection of\ntechnologies out there that allow us to\n\n382\n00:18:34.960 --> 00:18:40.160\nachieve this environment without\nhaving a ton of individual links.\n\n383\n00:18:41.570 --> 00:18:43.600\nSo the way we do it.\n\n384\n00:18:43.600 --> 00:18:48.540\nIs instead of having full mesh through\nphysical cables we achieve a full mesh\n\n385\n00:18:48.540 --> 00:18:53.358\nby going through a telephone company or\nan ISP and internet service provider.\n\n386\n00:18:53.358 --> 00:18:58.900\nSo what 'm showing here in this diagram,\nsee how Branch 1 only has one connection,\n\n387\n00:18:58.900 --> 00:19:01.560\nand Headquarters only has one connection\nand Branch 3 has one connection and\n\n388\n00:19:01.560 --> 00:19:03.390\nBranch 2 has 1 connection, right.\n\n389\n00:19:03.390 --> 00:19:06.210\nI can add as many branches as I\nwant they all have one connection.\n\n390\n00:19:06.210 --> 00:19:12.290\nBut at the ISP they can interconnect all\nthe devices so it looks like a full mesh.\n\n391\n00:19:12.290 --> 00:19:15.250\nSo it looks like everybody is\nconnected to each other and\n\n392\n00:19:15.250 --> 00:19:18.010\nI can do it without having\nto run n minus 1 anymore.\n\n393\n00:19:18.010 --> 00:19:20.920\nNow it's just one connection for\neach branch.\n\n394\n00:19:20.920 --> 00:19:24.130\nAll right, now the technology to do\nthat has changed over the years.\n\n395\n00:19:24.130 --> 00:19:27.100\nThere's been several\ndifferent ways to do it.\n\n396\n00:19:27.100 --> 00:19:29.800\nSome of the common technology\nthat are out there?\n\n397\n00:19:29.800 --> 00:19:30.690\nFrame relay?\n\n398\n00:19:30.690 --> 00:19:33.980\nFrame relay,\nCisco actually just removed from the exam.\n\n399\n00:19:33.980 --> 00:19:36.990\nAnd I think they might have been\na little bit early on that one\n\n400\n00:19:36.990 --> 00:19:40.670\nbecause you do still see frame\nrelay out there a good bit.\n\n401\n00:19:40.670 --> 00:19:44.520\nFrame relay has been overtaken by MPLS.\n\n402\n00:19:45.580 --> 00:19:51.420\nMPLS Is a newer technology that kind\nof replace what frame relay use to do.\n\n403\n00:19:51.420 --> 00:19:56.360\nBut you actually do see some people\nuse frame relay on top of MPLS.\n\n404\n00:19:56.360 --> 00:19:58.940\nThey have frame relay over MPLS now.\n\n405\n00:19:58.940 --> 00:20:02.940\nSo that's where you still see it out\nin about and if you watch my quality of\n\n406\n00:20:02.940 --> 00:20:05.680\nservice episode I'll talk about\nwhy frame relay is still around.\n\n407\n00:20:05.680 --> 00:20:08.870\nBut putting that out of our mind,\nwhat frame rate and\n\n408\n00:20:08.870 --> 00:20:11.300\nPLS do is actually\nsomething really simple.\n\n409\n00:20:11.300 --> 00:20:16.600\nWhat they do is they create virtual\ncircuits, in NPLS we call them tunnels,\n\n410\n00:20:16.600 --> 00:20:21.660\nin frame relay we call them PVS or\npermanent virtual circuits.\n\n411\n00:20:21.660 --> 00:20:27.270\nAnd what they are is a programmatically\ndefined connection between two lines,\n\n412\n00:20:27.270 --> 00:20:30.490\nso, see that one connection for\nbranch one runs the ISP.\n\n413\n00:20:30.490 --> 00:20:36.820\nAt the ISP it breaks it up,\nin the three virtual connections.\n\n414\n00:20:36.820 --> 00:20:40.470\nAnd one of them runs to Headquarters,\none of them runs to Branch 3, and\n\n415\n00:20:40.470 --> 00:20:42.100\none of them runs Branch 2.\n\n416\n00:20:42.100 --> 00:20:47.250\nSo it's actually n minus 1, but\nit's done virtually instead of physically.\n\n417\n00:20:47.250 --> 00:20:54.000\nSo I physically pay for one line and\nI virtually yet n minus 1.\n\n418\n00:20:54.000 --> 00:20:56.790\nThe nice part here is I can\nscale this out to a hundred,\n\n419\n00:20:56.790 --> 00:21:00.610\na thousand branches, and\nI'm not gonna run broke.\n\n420\n00:21:00.610 --> 00:21:04.990\nIt's a thousand virtual circuit and\nto define one time is done.\n\n421\n00:21:04.990 --> 00:21:07.500\nAnd after that,\nI get the bandwidth of the one line and\n\n422\n00:21:07.500 --> 00:21:09.720\nwhen it comes to billing,\nit's all about bandwidth.\n\n423\n00:21:09.720 --> 00:21:10.790\nBandwidth is all they care about.\n\n424\n00:21:10.790 --> 00:21:13.280\nThey don't care about how many virtual\ncircuits they have, that's easy to define.\n\n425\n00:21:13.280 --> 00:21:15.550\nIt's automatic when the set up the order.\n\n426\n00:21:15.550 --> 00:21:17.800\nBut the bandwidth is what you pay for.\n\n427\n00:21:17.800 --> 00:21:21.050\nHere, we have one link and now we\nget connected to all those branches.\n\n428\n00:21:22.080 --> 00:21:24.910\nAll right, I don't want to dive\ntoo deep into how Frame Relay and\n\n429\n00:21:24.910 --> 00:21:28.500\nMPLS work, but\njust real briefly Frame Relay,\n\n430\n00:21:28.500 --> 00:21:32.990\neach virtual circuit has what's\ncalled DLCI number assigned to it.\n\n431\n00:21:32.990 --> 00:21:36.490\nWhich is, let's see if I can remember\nthis, a Data Link Circuit Identifier,\n\n432\n00:21:36.490 --> 00:21:41.080\nDLCI, it's just a number, think of\nit as a street address on a house.\n\n433\n00:21:41.080 --> 00:21:45.700\nAnd so it'll say, hey the DLCI number for\nthis link is tied to the DLCI number for\n\n434\n00:21:45.700 --> 00:21:47.970\nthis link, and\nthat maps them together and that's that.\n\n435\n00:21:47.970 --> 00:21:49.750\nSo it just needs arbitrary\nnumbers they assign.\n\n436\n00:21:50.930 --> 00:21:56.240\nMPLS does the same thing except instead of\nDLCI numbers it uses labels, all right?\n\n437\n00:21:56.240 --> 00:21:59.070\nThat's the LS in MPLS is label switching.\n\n438\n00:21:59.070 --> 00:22:04.210\nSo what it does is when a packet\nhits the network It says this packet\n\n439\n00:22:04.210 --> 00:22:09.090\nis destined for this location, let m stick\na label on it that says where it's going,\n\n440\n00:22:09.090 --> 00:22:11.430\nand then it's a hops\nacross the isp network.\n\n441\n00:22:11.430 --> 00:22:14.590\nIt's that label that's constantly being\nread instead of a having a separate\n\n442\n00:22:14.590 --> 00:22:16.920\nvirtual circuits, everything is\ninstalled on the ame network and\n\n443\n00:22:16.920 --> 00:22:18.440\nthe labels keep it separate.\n\n444\n00:22:18.440 --> 00:22:22.569\nSo the end result is the same,\nactually work the same in the end, but\n\n445\n00:22:22.569 --> 00:22:25.115\nhow they do it is what is different right.\n\n446\n00:22:25.115 --> 00:22:27.134\nSo, DLCI circuit numbers\nverses label on the packets.\n\n447\n00:22:27.134 --> 00:22:29.520\nOn the I can ask you how that works and\n\n448\n00:22:29.520 --> 00:22:33.300\nI wanna make sure how that works, I just\nwanna make sure you understand for you\n\n449\n00:22:33.300 --> 00:22:36.300\nin the real world that there is actually\na good difference between the two.\n\n450\n00:22:37.850 --> 00:22:41.500\nAll right so, what that's gonna do is that\nis gonna give me connectivity between my\n\n451\n00:22:41.500 --> 00:22:44.910\nbranches and my Headquarters and\nmy branches near the branches.\n\n452\n00:22:44.910 --> 00:22:46.940\nBut, there is a little problem here,\n\n453\n00:22:46.940 --> 00:22:49.780\nremember what I said about the Internet,\nhow private is the Internet?\n\n454\n00:22:49.780 --> 00:22:51.180\nNot private at all.\n\n455\n00:22:51.180 --> 00:22:53.010\nHow private is your ISP?\n\n456\n00:22:53.010 --> 00:22:54.550\nWell, that depends.\n\n457\n00:22:54.550 --> 00:22:57.630\nIt depends on how well you know your ISP,\nhow integrated you are with them,\n\n458\n00:22:57.630 --> 00:23:00.700\nwhether you own the ISP or\nnot, most of us don't.\n\n459\n00:23:00.700 --> 00:23:05.640\nSo for example, our primary ISP here at\nthe studios is an organizational GRU,\n\n460\n00:23:05.640 --> 00:23:07.480\nthe Gainesville Regional Utilities.\n\n461\n00:23:07.480 --> 00:23:08.910\nAnd they're great people.\n\n462\n00:23:08.910 --> 00:23:13.310\nI actually know,\nI think most of their network staff,\n\n463\n00:23:13.310 --> 00:23:15.520\nbut it's a big organization.\n\n464\n00:23:15.520 --> 00:23:17.810\nThey have thousands of employees.\n\n465\n00:23:17.810 --> 00:23:22.810\nI can probably name ten employees there\nand that's a company I know really well.\n\n466\n00:23:22.810 --> 00:23:25.640\nWhat about a company like\nQwest Communications?\n\n467\n00:23:25.640 --> 00:23:29.450\nOr Level Three which, did they buy Qwest?\n\n468\n00:23:29.450 --> 00:23:30.200\nI get it kind of confused.\n\n469\n00:23:30.200 --> 00:23:31.530\nNo, CenturyLink bought Qwest.\n\n470\n00:23:31.530 --> 00:23:34.060\nSo, CenturyLink, Level 3,\nAT&amp;T for that matter.\n\n471\n00:23:34.060 --> 00:23:35.900\nEverybody knows AT&amp;T, right?\n\n472\n00:23:35.900 --> 00:23:38.460\nHow many employees can you name at AT&amp;T?\n\n473\n00:23:38.460 --> 00:23:40.010\nI can't name a single employee.\n\n474\n00:23:40.010 --> 00:23:42.960\nIn fact, the only AT&amp;T employee\nI can think of is Debbie,\n\n475\n00:23:42.960 --> 00:23:44.000\nthe Time Life Operator.\n\n476\n00:23:44.000 --> 00:23:45.500\nAnd that was Time Life, and not even AT&amp;T.\n\n477\n00:23:45.500 --> 00:23:47.800\nSo, I can't even name\na single employee there.\n\n478\n00:23:47.800 --> 00:23:52.510\nSo if my data is crossing their network,\nhow trustworthy are they?\n\n479\n00:23:52.510 --> 00:23:56.360\nI could just roll the dice and say I'm\npretty sure they won't mess up my stuff.\n\n480\n00:23:56.360 --> 00:23:59.490\nBut maybe one day a network\nengineer gets bored and is like hm,\n\n481\n00:23:59.490 --> 00:24:01.180\nI wonder what kind of data\nmoves over this line.\n\n482\n00:24:01.180 --> 00:24:02.940\nAnd starts running a sniffer and\ncapturing it.\n\n483\n00:24:02.940 --> 00:24:04.839\nThey can do it,\nthey've got the lines, right.\n\n484\n00:24:04.839 --> 00:24:09.767\nSo sometimes a wide area network is not\ngonna be enough for us security-wise.\n\n485\n00:24:09.767 --> 00:24:14.190\nAnd in that scenario, we may need to\nbuild up tunnels to protect our data.\n\n486\n00:24:14.190 --> 00:24:17.660\nAnd there's two types of tunnels we need\nto be aware of with wide area networks.\n\n487\n00:24:17.660 --> 00:24:19.700\nOne we've already talked about and\none we haven't.\n\n488\n00:24:19.700 --> 00:24:22.680\nThe one we already talked about,\nare GRE tunnels.\n\n489\n00:24:22.680 --> 00:24:25.940\nAnd so, what I'm showing here\nin this diagram is the same\n\n490\n00:24:25.940 --> 00:24:27.700\ndiagram that I had just a moment ago.\n\n491\n00:24:27.700 --> 00:24:32.740\nSo we're talking about frame relay or\nMPLS, still that same kind of thing.\n\n492\n00:24:32.740 --> 00:24:36.010\nBut instead of just running\nright over the raw network,\n\n493\n00:24:36.010 --> 00:24:40.400\nI've got a tunnel built up between\nHeadquarters and Branch 2.\n\n494\n00:24:40.400 --> 00:24:46.610\nNow, depending on the tunnel technology,\nit's gonna create two different results.\n\n495\n00:24:46.610 --> 00:24:49.660\nMy two technologies serve\ndifferent purposes.\n\n496\n00:24:49.660 --> 00:24:52.930\nThe second one is VPN,\nVirtual Private Network.\n\n497\n00:24:52.930 --> 00:24:54.660\nWhich is typically using IPsec or\n\n498\n00:24:54.660 --> 00:24:58.420\ninternet protocol security and\nthat one is designed for privacy.\n\n499\n00:24:58.420 --> 00:24:59.770\nIt's actually designed for\n\n500\n00:24:59.770 --> 00:25:04.120\na couple of things,\nI gotta try to remember my security triad.\n\n501\n00:25:04.120 --> 00:25:07.200\nIt's confidentiality, integrity and\n\n502\n00:25:07.200 --> 00:25:09.950\navailability, that's what\na VPN tries to provide.\n\n503\n00:25:09.950 --> 00:25:12.510\nConfidentiality, I don't\nwant people reading\n\n504\n00:25:12.510 --> 00:25:14.330\nstuff they are not supposed to read.\n\n505\n00:25:14.330 --> 00:25:17.897\nIntegrity, I wanna make sure that\ndata isn't tampered with in transit,\n\n506\n00:25:17.897 --> 00:25:19.920\nthat it arrives in\nthe form that I sent it.\n\n507\n00:25:19.920 --> 00:25:23.420\nAnd availability, I wanna make sure that\nI can send the data and that it's not\n\n508\n00:25:23.420 --> 00:25:27.590\ngetting filtered or blocked along the way,\nand it's actually able to reach the end.\n\n509\n00:25:27.590 --> 00:25:29.430\nA tunnel provides all three.\n\n510\n00:25:30.460 --> 00:25:34.259\nIt encrypts the data, so if the ISP tries\nto intercept it, they can't read it.\n\n511\n00:25:35.730 --> 00:25:39.628\nIntegrity, when you build a tunnel\nit can do digital signatures.\n\n512\n00:25:39.628 --> 00:25:42.580\nHashes or\nchecksums assigned to every single\n\n513\n00:25:42.580 --> 00:25:45.090\npacket that is thrown on the network or\nframes at this point.\n\n514\n00:25:45.090 --> 00:25:47.390\nAnd if somebody tampers with the frame,\nwe'll know it.\n\n515\n00:25:47.390 --> 00:25:49.880\nWe'll be able to see if\nthere's been tampered with.\n\n516\n00:25:49.880 --> 00:25:52.600\nUsually it's only the payload\nwe care about, so\n\n517\n00:25:52.600 --> 00:25:54.550\nyou might be doing payload encryption and\nthat's it.\n\n518\n00:25:54.550 --> 00:25:56.720\nBut either way you kind\nof achieve the same goal.\n\n519\n00:25:56.720 --> 00:25:59.870\nAnd then lastly is availability, how do\nI make sure I'm not getting filtered?\n\n520\n00:25:59.870 --> 00:26:03.170\nWell, if I've got a tunnel,\nall the ISP see's is the tunnel traffic.\n\n521\n00:26:03.170 --> 00:26:05.270\nThey don't see what's inside of it so\nthey can't filter it.\n\n522\n00:26:05.270 --> 00:26:07.670\nThey can either shut the tunnel down or\nnot and so\n\n523\n00:26:07.670 --> 00:26:09.490\nnow I know I'm able to\nreach to the other side.\n\n524\n00:26:09.490 --> 00:26:12.290\n&gt;&gt; So what GRE Don,\nis it more about obscurity of your data\n\n525\n00:26:12.290 --> 00:26:15.530\nmore than it is actually confidentiality\nor do I understand that right?\n\n526\n00:26:15.530 --> 00:26:21.380\n&gt;&gt; All right, so\nGRE doesn't do any of the CIA triad.\n\n527\n00:26:21.380 --> 00:26:23.060\nIt doesn't do confidentiality or\n\n528\n00:26:23.060 --> 00:26:26.500\nintegrity, maybe you could\ncount as availability.\n\n529\n00:26:26.500 --> 00:26:28.370\nGRE, it's a tunnel.\n\n530\n00:26:28.370 --> 00:26:32.540\nAnd we did an episode on GRE and in that\nepisode, I mention one of the reasons for\n\n531\n00:26:32.540 --> 00:26:34.470\ndoing it was really,\nobscuring your network,\n\n532\n00:26:34.470 --> 00:26:36.740\nlike Wes said, hiding the network.\n\n533\n00:26:36.740 --> 00:26:38.950\nOne of the things about MPLS,\n\n534\n00:26:38.950 --> 00:26:43.840\nremember I said that with frame relay we\nactually have these virtual circuits.\n\n535\n00:26:43.840 --> 00:26:47.510\nAnd on the virtual circuit you only see,\nif the virtual circuit for\n\n536\n00:26:47.510 --> 00:26:50.960\nBranch 1 to Headquarters you only see\nBranch 1 to Headquarters and that's it.\n\n537\n00:26:50.960 --> 00:26:55.360\nBut with MPLS, it leaves your packet\nalone and sticks a label on it.\n\n538\n00:26:55.360 --> 00:26:58.320\nAnd so, which crossing the same\nnetwork as other people.\n\n539\n00:26:58.320 --> 00:27:01.360\nAnd in theory, you would see,\n\n540\n00:27:01.360 --> 00:27:03.760\nnot the other people's traffic,\nthe labels keep that separate.\n\n541\n00:27:03.760 --> 00:27:06.440\nIt's like VLANs, it's actually very,\nvery similar to VLANs.\n\n542\n00:27:06.440 --> 00:27:11.050\nYour traffic is separate but you're\ncrossing through switches and routers and\n\n543\n00:27:11.050 --> 00:27:12.480\nyou can see them.\n\n544\n00:27:12.480 --> 00:27:16.590\nWhen you get a frame relay circuit,\nthis router at Branch 1\n\n545\n00:27:16.590 --> 00:27:19.850\nthinks that it's directly plugged\nin to the Headquarters router.\n\n546\n00:27:19.850 --> 00:27:21.920\nIt thinks that it's a point\nto point cable run,\n\n547\n00:27:21.920 --> 00:27:26.210\nback to back, between those two devices,\nthe telco is invisible.\n\n548\n00:27:26.210 --> 00:27:30.320\nWith MPLS, the telco is not invisible,\nyou can see it.\n\n549\n00:27:30.320 --> 00:27:34.718\nNow, some service providers actually\ndo go the extra step of building and\n\n550\n00:27:34.718 --> 00:27:37.460\nend-to-end for you and then it becomes\ninvisible, then you don't see it.\n\n551\n00:27:37.460 --> 00:27:41.190\nBut there's many ISP's out there\nthat when you get an MPLS line,\n\n552\n00:27:41.190 --> 00:27:42.060\nyou'll see the network.\n\n553\n00:27:42.060 --> 00:27:44.170\nYou'll actually see the network\nthat you're crossing.\n\n554\n00:27:44.170 --> 00:27:48.730\nAnd there's a possibility\nthat they're using some IP\n\n555\n00:27:48.730 --> 00:27:53.140\naddresses that you're using internally.\n\n556\n00:27:53.140 --> 00:27:55.700\nHere at ITProTV network we use\nthe 10.class A, well guess what?\n\n557\n00:27:55.700 --> 00:27:58.600\nSo does just about every ISP out there,\nthey need a nice big network.\n\n558\n00:27:58.600 --> 00:28:01.250\nThey use the 10 dot subnet also.\n\n559\n00:28:01.250 --> 00:28:04.830\nIt's an RFC 1918 private address,\nthey're more than welcome to use it.\n\n560\n00:28:04.830 --> 00:28:07.660\nSo, if they're using the same\nIP addresses as I am,\n\n561\n00:28:07.660 --> 00:28:10.670\nthat's really gonna screw up my routing,\nisn't it?\n\n562\n00:28:10.670 --> 00:28:13.090\nThe other thing is,\nif I'm running EIGRP, OSP,\n\n563\n00:28:13.090 --> 00:28:15.960\nif I'm running some kind of\ninterior gateway protocol,\n\n564\n00:28:15.960 --> 00:28:21.190\nI can't run that across this link unless\nthe ISP volunteers to run it too.\n\n565\n00:28:21.190 --> 00:28:24.099\nWhich sometime will, you can say I'm\nalready running EIGRP and the ISP hey,\n\n566\n00:28:24.099 --> 00:28:25.020\ngreat me too.\n\n567\n00:28:25.020 --> 00:28:26.140\nWe can connect up.\n\n568\n00:28:26.140 --> 00:28:28.260\nBut now I'm learning their routes and\n\n569\n00:28:28.260 --> 00:28:32.330\nif they wanna be malicious, they could\nstart injecting routes in the EIGRP.\n\n570\n00:28:32.330 --> 00:28:34.910\nAnd I would learn them and\nscrew all sorts of stuff up.\n\n571\n00:28:34.910 --> 00:28:36.670\nSo that's a problem.\n\n572\n00:28:36.670 --> 00:28:41.000\nAnd we might want to obscure,\nwe might wanna hide the ISPs network.\n\n573\n00:28:41.000 --> 00:28:45.590\nThen by building a GRE tunnel,\na GRE tunnel doesn't encrypt our data,\n\n574\n00:28:45.590 --> 00:28:51.450\nit doesn't do digital signatures or\nanything, it just hides the network.\n\n575\n00:28:51.450 --> 00:28:53.640\nWhen I put a GRE tunnel\nbetween headquarters and\n\n576\n00:28:53.640 --> 00:28:58.250\nBranch 2, those two are gonna think that\ntheir plugged directly into each other.\n\n577\n00:28:58.250 --> 00:29:02.230\nAnd it won't matter if the ISP is reusing\nsome of the same IP addresses I'm using.\n\n578\n00:29:02.230 --> 00:29:07.016\nIt doesn't matter if the ISP won't\nparticipate in my dynamic routing\n\n579\n00:29:07.016 --> 00:29:07.832\nprotocol.\n\n580\n00:29:07.832 --> 00:29:10.430\nWhen I had the tunnel up, the two routers\nthink they're plugged to each other.\n\n581\n00:29:10.430 --> 00:29:12.701\nAnd they're gonna start\ntalking via that tunnel and\n\n582\n00:29:12.701 --> 00:29:15.160\nthey think their plugged in back-to-back.\n\n583\n00:29:15.160 --> 00:29:20.500\nSo if I just need to obscure the telco\nnetwork, GRE is the solution.\n\n584\n00:29:20.500 --> 00:29:25.030\nBut if I wanted privacy and\nsecurity, a VPN is the solution.\n\n585\n00:29:25.030 --> 00:29:28.659\nAnd really, a VPN is just GRE tunnel\nwith encryption enabled on it,\n\n586\n00:29:28.659 --> 00:29:31.920\nit's really all stacked off\nof the same technology.\n\n587\n00:29:31.920 --> 00:29:35.235\nBut that's where we start to go a little\nbit further with our wide area network\n\n588\n00:29:35.235 --> 00:29:38.250\nconnection, and things start to\nchange a little bit on how they work.\n\n589\n00:29:39.280 --> 00:29:42.960\nSo these are all concepts that we need to\nbe familiar with, with wide area networks.\n\n590\n00:29:42.960 --> 00:29:47.160\nAnd I know as far as\nthe episode is concerned,\n\n591\n00:29:47.160 --> 00:29:49.340\nwe're kinda light on\ntechnical details here.\n\n592\n00:29:49.340 --> 00:29:50.910\nI am not showing you\nhow to configure a VPN.\n\n593\n00:29:50.910 --> 00:29:53.610\nI am not showing you how to\nconfigure an MPLS connection, and\n\n594\n00:29:53.610 --> 00:29:56.810\nthat's because Cisco doesn't\nexpect you to know how to do that.\n\n595\n00:29:56.810 --> 00:30:00.780\nThe bulk of the work for this type of WAN\nconnection is actually done by the ISP.\n\n596\n00:30:00.780 --> 00:30:01.870\nIf you buy a frame relay or\n\n597\n00:30:01.870 --> 00:30:05.140\nan MPLS line, the ISP sets everything up,\nwhat do you do?\n\n598\n00:30:05.140 --> 00:30:08.050\nYou plug a cable in and that's it.\n\n599\n00:30:08.050 --> 00:30:10.070\nIf you're doing a GRE tunnel,\nyeah you got to set that up, so\n\n600\n00:30:10.070 --> 00:30:13.680\nthat's why we have a GRE episode, and for\nVPN tunnels you gotta set that up, but\n\n601\n00:30:13.680 --> 00:30:15.920\nwe cover that in the CCNA Security shows.\n\n602\n00:30:15.920 --> 00:30:17.680\nSo, those are on different exams.\n\n603\n00:30:17.680 --> 00:30:19.360\nSo as far as this exam is concern,\n\n604\n00:30:19.360 --> 00:30:22.100\nthey want you to be familiar with\nwide area network technologies.\n\n605\n00:30:22.100 --> 00:30:24.600\nAnd in real life,\nyou need to be familiar with them anyway.\n\n606\n00:30:24.600 --> 00:30:28.100\nBecause if you're gonna go and\nbuy this stuff and the ISP says,\n\n607\n00:30:28.100 --> 00:30:32.327\nyeah we can get you an MPLS circuit for\nx dollars or frame relay for x dollars or\n\n608\n00:30:32.327 --> 00:30:35.920\na straight T1 for x dollars,\nhow do you pick which one you want?\n\n609\n00:30:35.920 --> 00:30:38.689\nWe need to understand how those lines\nfunction, what it is that they do, and\n\n610\n00:30:38.689 --> 00:30:42.160\nwhat it is that you're purchasing to make\nsure you get the right technology for you.\n\n611\n00:30:42.160 --> 00:30:45.700\n&gt;&gt; And you've mentioned tunneling Don,\nis there a single type of tunnel or\n\n612\n00:30:45.700 --> 00:30:47.610\nthere are various types of tunnels?\n\n613\n00:30:47.610 --> 00:30:50.690\nI notice that you've had one that was\ngoing from a branch office to a branch\n\n614\n00:30:50.690 --> 00:30:52.320\noffice, do we have different types here?\n\n615\n00:30:52.320 --> 00:30:54.790\n&gt;&gt; There are and there aren't.\n\n616\n00:30:54.790 --> 00:30:57.370\nSo, typically we're talking\nabout site to site tunnels.\n\n617\n00:30:57.370 --> 00:31:01.800\nIf there's GRE, there's just GRE,\nthat's it, it's one type of tunnel.\n\n618\n00:31:01.800 --> 00:31:04.999\nWith VPN there's several types of tunnels,\nbut\n\n619\n00:31:04.999 --> 00:31:09.130\nwe are going site-to-site\nit almost always IPsec.\n\n620\n00:31:09.130 --> 00:31:12.411\nInside of the IPsec you can do IKE\nversion 1, and IKE version 2 tunnels but\n\n621\n00:31:12.411 --> 00:31:15.480\nit's really just two different\nversions of the same thing.\n\n622\n00:31:15.480 --> 00:31:20.549\nSo you usually see one tunnel type,\nbe careful with that because in VPN's\n\n623\n00:31:20.549 --> 00:31:25.291\nyou do have things like L2TP,\nLayer 2 Tunneling Protocol, PPTP,\n\n624\n00:31:25.291 --> 00:31:31.670\nthe Point-to-Point Tunneling Protocol,\nSSTP, the SSL Secure Tunneling Protocol.\n\n625\n00:31:31.670 --> 00:31:32.920\nI forget what that one stands for.\n\n626\n00:31:32.920 --> 00:31:35.510\nAnyhow, SSTP, the one that uses SSL.\n\n627\n00:31:35.510 --> 00:31:37.620\nSo you got a couple of different\nones that are out there,\n\n628\n00:31:37.620 --> 00:31:40.142\nthose are usually designed for\nclient connectivity.\n\n629\n00:31:40.142 --> 00:31:44.060\nNot site-to-site, but\nsomebody's laptop connecting to a site, or\n\n630\n00:31:44.060 --> 00:31:45.580\nsomebody's desktop connecting to a site.\n\n631\n00:31:45.580 --> 00:31:47.070\nSo it's a different type\nof connectivity and\n\n632\n00:31:47.070 --> 00:31:49.960\nwe don't normally see that across an ISP.\n\n633\n00:31:49.960 --> 00:31:53.090\nYou can do it but that's not\nreally what that's designed for.\n\n634\n00:31:53.090 --> 00:31:58.080\nThose are what usually what falls under\na DMVPN, like a Dynamic Management VPN.\n\n635\n00:31:58.080 --> 00:32:00.530\nAnd with those,\nthose are tunnels that come up and\n\n636\n00:32:00.530 --> 00:32:02.250\ngo down based on where you are.\n\n637\n00:32:02.250 --> 00:32:05.180\nWhen you're doing site-to-site,\nthose are permanent installations,\n\n638\n00:32:05.180 --> 00:32:07.300\nthey shouldn't come up and\ndown except for one time.\n\n639\n00:32:07.300 --> 00:32:09.220\nThey come up when you first install it,\nand\n\n640\n00:32:09.220 --> 00:32:11.740\nit comes down when you phased out\nto replace it with something else.\n\n641\n00:32:11.740 --> 00:32:15.370\nOtherwise you expect it to be\nup all the time in between.\n\n642\n00:32:15.370 --> 00:32:17.910\nSo, that's where the client\ntype technologies aren't really\n\n643\n00:32:17.910 --> 00:32:19.205\nsuitable for that.\n\n644\n00:32:19.205 --> 00:32:21.640\n&gt;&gt; Don, we appreciate the time\nto stop by the studio and\n\n645\n00:32:21.640 --> 00:32:24.040\nlet us know a little bit\nmore about WAN technologies.\n\n646\n00:32:24.040 --> 00:32:27.640\nNow, it does look like we're pushing\nthe envelope on the clock on this one but\n\n647\n00:32:27.640 --> 00:32:29.220\nbefore we take the time to sign out here,\n\n648\n00:32:29.220 --> 00:32:31.770\ndo you got any additional\nwords about WAN technologies?\n\n649\n00:32:31.770 --> 00:32:32.440\n&gt;&gt; Just remember,\n\n650\n00:32:32.440 --> 00:32:35.340\nI know we didn't jump into configurations\nbecause that is not really covered on this\n\n651\n00:32:35.340 --> 00:32:37.380\nexam but that doesn't mean we\ndon't want you to learn it.\n\n652\n00:32:37.380 --> 00:32:41.300\nIf you wanna learn more right here in the\nCCNA series we've got an episode on GRE\n\n653\n00:32:41.300 --> 00:32:43.100\ntunnels so you can learn how to do those.\n\n654\n00:32:43.100 --> 00:32:47.650\nIf you jump over to our CCNA Security\nshow, we cover VPNs exhaustively in there.\n\n655\n00:32:47.650 --> 00:32:50.050\nSo you learn the client side,\nand site-to-site.\n\n656\n00:32:50.050 --> 00:32:51.360\nSo we go through those.\n\n657\n00:32:51.360 --> 00:32:54.320\nIf you wanna learn more about MPLS, well,\n\n658\n00:32:54.320 --> 00:32:58.890\nthat one's really covered in the CCNP\nservice provider certification.\n\n659\n00:32:58.890 --> 00:33:02.930\nSo that's a much higher level because\nonly ISPs really have to deal with.\n\n660\n00:33:02.930 --> 00:33:05.490\nThat's not something an end-user\nnormally has to deal with.\n\n661\n00:33:05.490 --> 00:33:09.290\nWhat was the other technology\nthat I mentioned, frame relay.\n\n662\n00:33:09.290 --> 00:33:12.050\nFrame relay we actually cover in\nthe CCNP Route certification so\n\n663\n00:33:12.050 --> 00:33:13.420\nyou can jump over and catch that too.\n\n664\n00:33:13.420 --> 00:33:16.975\nThat's where they expect you to know how\nto do it, so it's not that we don't want\n\n665\n00:33:16.975 --> 00:33:19.315\nto show you how to do that,\nit's just that it's not on the exam.\n\n666\n00:33:19.315 --> 00:33:22.265\nBut we do have that content\navailable in the ITProTV library.\n\n667\n00:33:22.265 --> 00:33:25.405\n&gt;&gt; Well Don, we do appreciate your time,\nand we appreciate you the viewer watching.\n\n668\n00:33:25.405 --> 00:33:27.005\nLooks like that's a great\nplace to wrap it up.\n\n669\n00:33:27.005 --> 00:33:29.905\nSigning out for ITProTV,\nI've been your host Wes Bryan.\n\n670\n00:33:29.905 --> 00:33:30.837\n&gt;&gt; And I'm Don Pezet.\n\n671\n00:33:30.837 --> 00:33:33.194\n&gt;&gt; And we'll see you next time.\n\n672\n00:33:33.194 --> 00:33:38.857\n[MUSIC]\n\n673\n00:33:38.857 --> 00:33:41.909\n&gt;&gt; Thank you for watching ITProTV.\n\n",
          "vimeoId": "191164746"
        },
        {
          "description": "In this episode, Wes and Don explain the concepts surrounding the external border gateway protocol (EBGP). They look at the purpose for EBGP as well as to how it applies to autonomous systems. Finally, they will demonstrate how to configure EBGP.",
          "length": "2063",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/cisco-ccna200105/cisco-ccna200105-3-4-external_border_gateway_protocol-110816-1.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/cisco-ccna200105/cisco-ccna200105-3-4-external_border_gateway_protocol-110816-1-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/cisco-ccna200105/cisco-ccna200105-3-4-external_border_gateway_protocol-110816-1-sm.jpg",
          "title": "External Border Gateway Protocol",
          "transcript": "WEBVTT\n\n1\n00:00:00.220 --> 00:00:05.332\nWelcome to ITProTV,\nI'm your host- [CROSSTALK]\n\n2\n00:00:05.332 --> 00:00:08.735\n[MUSIC]\n\n3\n00:00:08.735 --> 00:00:12.200\n&gt;&gt; You're watching ITProTV.\n\n4\n00:00:12.200 --> 00:00:14.895\n&gt;&gt; Welcome to another great\nepisode here at ITProTV.\n\n5\n00:00:14.895 --> 00:00:16.025\nI'm your host Wes Bryan.\n\n6\n00:00:16.025 --> 00:00:16.995\nAnd in today's episode,\n\n7\n00:00:16.995 --> 00:00:20.605\nwe're continuing through our\nCISCO CCNA Routing and Switching.\n\n8\n00:00:20.605 --> 00:00:23.075\nAnd we're moving forward\nin WAN technologies.\n\n9\n00:00:23.075 --> 00:00:26.137\nJoining me in the studios yet\nagain is none other than Mr. Don Pezet.\n\n10\n00:00:26.137 --> 00:00:27.307\nDon, how you doing sir?\n\n11\n00:00:27.307 --> 00:00:30.157\n&gt;&gt; I'm doing great, Wes,\nready to dive right back into Cisco.\n\n12\n00:00:30.157 --> 00:00:32.667\nAnd what we're gonna be looking at\ntoday is kind of an interesting one.\n\n13\n00:00:32.667 --> 00:00:36.457\nBecause with each version of the CCNA,\nthey bring in new objectives,\n\n14\n00:00:36.457 --> 00:00:39.107\nthey take out old objectives,\nthings change.\n\n15\n00:00:39.107 --> 00:00:43.547\nAnd this is the first time that\nCisco has incorporated BGP,\n\n16\n00:00:43.547 --> 00:00:47.980\nthe Border Gateway Protocol into the CCNA\ntrack, it's really kinda interesting.\n\n17\n00:00:47.980 --> 00:00:51.480\nAnd they did it but\njust very, very lightly.\n\n18\n00:00:51.480 --> 00:00:53.129\nWe've already talked a bit about BGP, so\n\n19\n00:00:53.129 --> 00:00:56.108\nlet's start out with the refresher kind\nof what we already know about BGP.\n\n20\n00:00:56.108 --> 00:00:59.880\nAnd then what we're gonna do is we're\ngonna see how to actually implement it in\n\n21\n00:00:59.880 --> 00:01:02.638\nour environment in the most\nsimplest forms, all right?\n\n22\n00:01:02.638 --> 00:01:05.323\nNow way back, if you think back\nto the beginning of the series,\n\n23\n00:01:05.323 --> 00:01:07.540\nit feels like forever ago now.\n\n24\n00:01:07.540 --> 00:01:10.130\nWe did an episode on\ndynamic routing protocols.\n\n25\n00:01:10.130 --> 00:01:12.380\nAnd we talked about several different\nprotocols that were out there.\n\n26\n00:01:12.380 --> 00:01:15.832\nWe focused on RIP, EIGRP and OSPF.\n\n27\n00:01:15.832 --> 00:01:17.636\nAnd at the time,\nI brought up a little table,\n\n28\n00:01:17.636 --> 00:01:20.220\na table I've got on my screen right now.\n\n29\n00:01:20.220 --> 00:01:24.220\nAnd I said that those were all\ninterior routing protocols.\n\n30\n00:01:24.220 --> 00:01:27.180\nWe use those for managing routes and\npaths inside our network.\n\n31\n00:01:27.180 --> 00:01:29.910\nOn the network that we control and\nthat we own.\n\n32\n00:01:29.910 --> 00:01:32.740\nSo usually these are considered LAN or\nlocal area network.\n\n33\n00:01:32.740 --> 00:01:35.950\nAlthough you can have a private WAN and\nyou can run them on those too.\n\n34\n00:01:35.950 --> 00:01:40.730\nSo, the important part here is that\nit's interior to your company.\n\n35\n00:01:40.730 --> 00:01:42.650\nWhen you look at a company\nin terms of a network,\n\n36\n00:01:42.650 --> 00:01:44.980\nyour company is what's\ncalled an autonomous system.\n\n37\n00:01:44.980 --> 00:01:48.200\nA system that you run,\nyou manage, you control.\n\n38\n00:01:48.200 --> 00:01:52.340\nAnd interior protocols run in\none autonomous system, right?\n\n39\n00:01:52.340 --> 00:01:55.770\nSo you just have one AS and\nthat's where all of your equipment is.\n\n40\n00:01:55.770 --> 00:01:59.470\nThat one AS may expand across\nmany multiple geographic regions.\n\n41\n00:01:59.470 --> 00:02:03.946\nBut it's still one company,\nright, your autonomous system.\n\n42\n00:02:03.946 --> 00:02:08.511\nAt the time, I mentioned exterior routing\nprotocols and in particular, just one,\n\n43\n00:02:08.511 --> 00:02:10.777\nBorder Gateway Protocol, BGP, right?\n\n44\n00:02:11.980 --> 00:02:16.450\nBGP is designed to connect\nseparate networks together,\n\n45\n00:02:16.450 --> 00:02:17.790\nseparate autonomous systems.\n\n46\n00:02:17.790 --> 00:02:19.110\nNetworks owned and\n\n47\n00:02:19.110 --> 00:02:24.330\ncontrolled by two completely different\npeople to get the connected, right?\n\n48\n00:02:24.330 --> 00:02:28.500\nAnd this is what used on the largest\nnetwork in the planet, the Internet.\n\n49\n00:02:28.500 --> 00:02:31.550\nOn the Internet,\nyou have ten of thousands,\n\n50\n00:02:31.550 --> 00:02:37.570\nhundreds of thousands of completely\nseparate networks that all interconnect.\n\n51\n00:02:37.570 --> 00:02:38.970\nThat all hooked together.\n\n52\n00:02:38.970 --> 00:02:41.759\nSo that when you go to a webpage,\nwhen you fire up a power web browser and\n\n53\n00:02:41.759 --> 00:02:42.970\ngo to cisco.com.\n\n54\n00:02:42.970 --> 00:02:48.780\nYou might pass through 12 or 14 different\nrouters on your way to your destination.\n\n55\n00:02:48.780 --> 00:02:54.480\nAnd each of those routers is probably\nin a different autonomous system.\n\n56\n00:02:54.480 --> 00:02:59.370\nSome might be owned by one ISP or\nanother ISP, one backbone or\n\n57\n00:02:59.370 --> 00:03:01.050\nanother backbone as you pass through.\n\n58\n00:03:01.050 --> 00:03:05.230\nYou're hopping through these autonomous\nsystems on your way to a destination.\n\n59\n00:03:05.230 --> 00:03:05.890\nAll right?\n\n60\n00:03:05.890 --> 00:03:10.300\nThat's the way that Border Gateway\nProtocol works, it links those together.\n\n61\n00:03:10.300 --> 00:03:14.954\nNow on the exam, they want us to\nknow the interior protocols really,\n\n62\n00:03:14.954 --> 00:03:18.900\nreally well, but the exterior,\nthey save that for CCNP.\n\n63\n00:03:18.900 --> 00:03:22.970\nFor those of you that go on to CCNP route,\nthat's where you real delve into BGP.\n\n64\n00:03:22.970 --> 00:03:27.980\nBut on the latest exam objectives, they\ndid add that they want you to know how to\n\n65\n00:03:27.980 --> 00:03:32.150\nconfigure BGP to connect to\nan Internet service provider.\n\n66\n00:03:32.150 --> 00:03:35.690\nSo if you're a private company and\nyou need to establish a connection to\n\n67\n00:03:35.690 --> 00:03:39.130\nan Internet service provider,\nthat you can do that quickly and easily.\n\n68\n00:03:39.130 --> 00:03:43.780\nAnd this is like the most\nsimple form of BGP, right?\n\n69\n00:03:43.780 --> 00:03:48.978\nIf we get more complex, BGP is what's\ncalled a Path Vector Protocol.\n\n70\n00:03:48.978 --> 00:03:52.500\nAnd what Path Vector means is\nthat every autonomous system is\n\n71\n00:03:52.500 --> 00:03:54.580\nassigned an AS number.\n\n72\n00:03:54.580 --> 00:03:58.080\nAnd all BGP is doing is tracking the path.\n\n73\n00:03:58.080 --> 00:04:02.490\nSo for example, if I'm way over\nhere on this 172.16.1 network.\n\n74\n00:04:02.490 --> 00:04:07.770\nAnd I wanna get to the 172.16.4 network,\nI've got two different paths.\n\n75\n00:04:07.770 --> 00:04:11.878\nI can go from AS 2020 to\nAS 119 over to AS 37131.\n\n76\n00:04:11.878 --> 00:04:16.744\nOr I could go AS 2020 up to AS 74 and\n\n77\n00:04:16.744 --> 00:04:19.700\ndown to AS 37131.\n\n78\n00:04:19.700 --> 00:04:22.540\nI've got two paths.\n\n79\n00:04:22.540 --> 00:04:24.740\nAnd that's all BGP keeps\ntrack of are the paths.\n\n80\n00:04:24.740 --> 00:04:27.090\nAnd then whichever one is shorter,\nthat's the one it picks.\n\n81\n00:04:27.090 --> 00:04:30.280\nSo, if there's one way that goes\nthrough two autonomous systems and\n\n82\n00:04:30.280 --> 00:04:34.242\none way that goes through five autonomous\nsystems, it'll pick the one that's two.\n\n83\n00:04:34.242 --> 00:04:35.968\nBGP doesn't look at bandwidth.\n\n84\n00:04:35.968 --> 00:04:39.295\nIt doesn't look at up time, reliability,\ndelay, it doesn't look at anything other\n\n85\n00:04:39.295 --> 00:04:41.810\nthan the amount of autonomous\nsystems you pass through, right?\n\n86\n00:04:41.810 --> 00:04:46.600\nBGP is actually not incredibly\nintelligent, but that's important.\n\n87\n00:04:46.600 --> 00:04:50.690\nBecause networks like the Internet are so\nvast, so big and so\n\n88\n00:04:50.690 --> 00:04:54.800\nconstantly changing that if we try to\ntrack that stuff, it would be a nightmare.\n\n89\n00:04:54.800 --> 00:04:56.880\nThe equipment would be way too expensive,\n\n90\n00:04:56.880 --> 00:04:59.430\nsome that's not technologically\nimpossible right now.\n\n91\n00:04:59.430 --> 00:05:03.300\nSo you need a simple minded protocol\nto be able to manage that and\n\n92\n00:05:03.300 --> 00:05:05.300\nthat's exactly what GBP is.\n\n93\n00:05:05.300 --> 00:05:10.620\nIn fact, BGP by itself can't move traffic,\nit's actually kind of useless.\n\n94\n00:05:10.620 --> 00:05:14.210\nIt needs to be combined with an interior\nprotocol to really get some work done.\n\n95\n00:05:14.210 --> 00:05:17.511\nSo BGP almost always runs on tops of OSPF,\nor\n\n96\n00:05:17.511 --> 00:05:22.430\nEIGRP, or a bunch of static routes,\nto really get the work done.\n\n97\n00:05:22.430 --> 00:05:26.110\nBut BGP is managing that\noverall path that we follow.\n\n98\n00:05:26.110 --> 00:05:28.900\nAnd as the network gets more and\nmore complex,\n\n99\n00:05:28.900 --> 00:05:34.540\nyou end up with more than one path and\nit picks the shortest of the paths, right?\n\n100\n00:05:34.540 --> 00:05:37.610\nSo in this scenario, now that I've\ninjected another autonomous system down at\n\n101\n00:05:37.610 --> 00:05:42.040\nthe bottom, the upper path is only three\nAS, that's gonna be the path we pick.\n\n102\n00:05:42.040 --> 00:05:44.010\nBut in reality when a router\ngoes to forward it,\n\n103\n00:05:44.010 --> 00:05:45.690\nit's gonna look in its routing table.\n\n104\n00:05:45.690 --> 00:05:49.000\nAnd it needs an interior route to\nbe able to get to where it's going,\n\n105\n00:05:49.000 --> 00:05:50.210\nusually a static route.\n\n106\n00:05:50.210 --> 00:05:52.620\nAnd it really is only\ninfluencing the next hop.\n\n107\n00:05:52.620 --> 00:05:55.610\nOnce we get to the other AS,\nthe other AS takes over and\n\n108\n00:05:55.610 --> 00:05:58.260\nthey make the decision in where\nto send things, all right.\n\n109\n00:05:58.260 --> 00:06:00.760\nThis gets really complex really fast and\nif you work for\n\n110\n00:06:00.760 --> 00:06:03.310\nan Internet service provider,\nyou'll do this every day.\n\n111\n00:06:03.310 --> 00:06:06.080\nBut if you work for\na company, if you work for\n\n112\n00:06:06.080 --> 00:06:09.570\na company, you only have one AS and\nthat's it.\n\n113\n00:06:09.570 --> 00:06:14.870\nAnd you're really just sending\ntraffic out to get to the Internet.\n\n114\n00:06:14.870 --> 00:06:17.000\nYou're never routing traffic through you.\n\n115\n00:06:17.000 --> 00:06:20.140\nYou don't want the Internet to be able\nto pass through your environment out.\n\n116\n00:06:20.140 --> 00:06:23.970\nIt will say that AS 2020,\nthat's my company, right?\n\n117\n00:06:23.970 --> 00:06:28.160\nI don't want where if one ISP\nloses their Internet connection,\n\n118\n00:06:28.160 --> 00:06:31.780\nlet's say that AS 119 is Verizon, right?\n\n119\n00:06:31.780 --> 00:06:33.130\nI'm just making up and\n\n120\n00:06:33.130 --> 00:06:37.404\ntheir backbone connection that\nruns through AS 11859 goes down.\n\n121\n00:06:37.404 --> 00:06:42.290\nI don't want all of Verizon to start\nsending their traffic through my AS\n\n122\n00:06:42.290 --> 00:06:46.120\nbecause I've got\na connection to another ISP.\n\n123\n00:06:46.120 --> 00:06:47.620\nThat's not why I'm paying for these lines.\n\n124\n00:06:47.620 --> 00:06:49.090\nI don't wanna support Verizon.\n\n125\n00:06:49.090 --> 00:06:50.510\nThey're supposed to support me.\n\n126\n00:06:50.510 --> 00:06:54.780\nSo, for a business,\nour participation in BGP is very small.\n\n127\n00:06:54.780 --> 00:06:57.160\nIn fact, it's so small,\nthat you don't normally do it.\n\n128\n00:06:57.160 --> 00:07:01.960\nSo like here at our studios,\nwe have a 200 megabit fiber line,\n\n129\n00:07:01.960 --> 00:07:04.990\nwe have a 100 megabit\ncable broadband line.\n\n130\n00:07:04.990 --> 00:07:09.380\nAnd we connect to those, we've sent our\nInternet access out through them, but\n\n131\n00:07:09.380 --> 00:07:10.930\nwe don't participate in BGP at all.\n\n132\n00:07:10.930 --> 00:07:13.250\nWe do not run BGP here, all right?\n\n133\n00:07:13.250 --> 00:07:17.180\nSo why would we run BGP\nif we don't need to?\n\n134\n00:07:17.180 --> 00:07:22.630\nIf there's only one way in and one way\nout of your network, you do not need BGP.\n\n135\n00:07:22.630 --> 00:07:25.250\nIt's not gonna make a lick of difference,\nall right?\n\n136\n00:07:25.250 --> 00:07:27.767\nBut if there's more than one way in and\nout of your network, right?\n\n137\n00:07:28.810 --> 00:07:32.020\nIf we take a look at this AS here,\nit's got two ways.\n\n138\n00:07:32.020 --> 00:07:33.920\nTwo ways in and out,\nmaybe two different ISPs.\n\n139\n00:07:33.920 --> 00:07:39.120\nMaybe up here we've got Level 3 and\nthen down here, we've got Century Link.\n\n140\n00:07:39.120 --> 00:07:40.980\nI've got two different ISPs.\n\n141\n00:07:40.980 --> 00:07:41.980\nWell, again,\n\n142\n00:07:41.980 --> 00:07:45.630\nif I'm just browsing the Internet,\nI don't really care which one I go out.\n\n143\n00:07:45.630 --> 00:07:46.872\nI don't need BGP.\n\n144\n00:07:46.872 --> 00:07:51.103\nBut what if I have a block of public\nIP addresses, I have a data center\n\n145\n00:07:51.103 --> 00:07:55.870\nright here in AS 20 20 and my data\ncenter has servers that are public IPs.\n\n146\n00:07:55.870 --> 00:08:00.305\nAnd my connection to Level 3 fails and\nso I switched over to Century Link.\n\n147\n00:08:00.305 --> 00:08:06.193\nWell when we get public IPs,\nwe're normally renting them from our ISP.\n\n148\n00:08:06.193 --> 00:08:08.160\nSo we might be renting\nthem from level three.\n\n149\n00:08:08.160 --> 00:08:10.468\nWhen level three fails,\nI jump over to CenturyLink,\n\n150\n00:08:10.468 --> 00:08:12.584\nthey don't control those public IPs,\ndo they?\n\n151\n00:08:12.584 --> 00:08:18.360\nSo if I'm a larger enterprise,\nI don't wanna lease IPs, I wanna own them.\n\n152\n00:08:18.360 --> 00:08:21.105\nI'll go to the ARIN or\nI'll go to one of those organizations.\n\n153\n00:08:21.105 --> 00:08:25.760\nAnd I will buy a block of IPs that I\nown and I'll get them to assign me,\n\n154\n00:08:25.760 --> 00:08:28.570\nan autonomous system number.\n\n155\n00:08:28.570 --> 00:08:30.402\nSo will then become AS2020, and\n\n156\n00:08:30.402 --> 00:08:33.948\nnow we've got our own block of IPs\nthat are independent of level three or\n\n157\n00:08:33.948 --> 00:08:36.979\nCenturyLink or whoever else it\nis we choose to partner with.\n\n158\n00:08:36.979 --> 00:08:40.307\nNow we have our own block of IPs, yeah?\n\n159\n00:08:40.307 --> 00:08:42.269\n&gt;&gt; I was gonna say, Don,\nI do have a question.\n\n160\n00:08:42.269 --> 00:08:45.429\nSo if I understand this right,\nthe interior routing protocols,\n\n161\n00:08:45.429 --> 00:08:48.704\ntheir routing tables aren't shared\nbetween autonomous systems,\n\n162\n00:08:48.704 --> 00:08:52.680\non contrast the BGPs should be globally\naccessible between autonomous systems.\n\n163\n00:08:52.680 --> 00:08:55.995\n&gt;&gt; Right, I mean unless you're doing\nsomething crazy and running a private BGP\n\n164\n00:08:55.995 --> 00:08:58.804\ninstance, which nobody has a network\nlarge enough to need that.\n\n165\n00:08:58.804 --> 00:09:03.082\nNobody, like literally not even\nthe military or governments, they don't.\n\n166\n00:09:03.082 --> 00:09:06.027\nBut if you did,\nmaybe you'd have it private there.\n\n167\n00:09:06.027 --> 00:09:09.994\nBut the whole point of BGP is to\nhelp us get to public IP ranges.\n\n168\n00:09:09.994 --> 00:09:12.800\nYou want those to be public,\nyou need those to be advertised.\n\n169\n00:09:12.800 --> 00:09:17.170\nSo when I get my own block of IPs,\nand they're tied to AS 2020,\n\n170\n00:09:17.170 --> 00:09:21.060\nI need to advertise those,\nI need to share those with the world.\n\n171\n00:09:21.060 --> 00:09:24.480\nAnd so I can connect my AS to\nlevel three communications.\n\n172\n00:09:24.480 --> 00:09:26.958\nI can connect my AS to CenturyLink or\nVerizon or\n\n173\n00:09:26.958 --> 00:09:29.190\nwhoever else it is I want to partner with.\n\n174\n00:09:29.190 --> 00:09:34.002\nMaybe I had ten different ISP connections,\nand I can peer with all of them.\n\n175\n00:09:34.002 --> 00:09:36.985\nAnd now that path gets added\nto the Internet's database, or\n\n176\n00:09:36.985 --> 00:09:38.457\nat least the best one of them.\n\n177\n00:09:38.457 --> 00:09:40.967\nAnd if one of them fails,\nthe others are there too.\n\n178\n00:09:40.967 --> 00:09:42.812\nAnd the whole Internet will learn that,\nhey,\n\n179\n00:09:42.812 --> 00:09:44.572\nI can get to Don's IPs\nthrough level three.\n\n180\n00:09:44.572 --> 00:09:47.356\nWhoop, level three went down,\nI can do it through CenturyLink.\n\n181\n00:09:47.356 --> 00:09:48.936\nWhoop, they went down,\nI can jump over here.\n\n182\n00:09:48.936 --> 00:09:52.814\nSo now we have redundant paths\nto get to our public IP block.\n\n183\n00:09:52.814 --> 00:09:55.402\nSo when would you run BGP?\n\n184\n00:09:55.402 --> 00:10:00.348\nIf you own, actually own,\nyour own IP block.\n\n185\n00:10:00.348 --> 00:10:04.711\nIf you're just renting IPs from your ISP,\nyou don't need BGP.\n\n186\n00:10:04.711 --> 00:10:08.970\nIf there's only one way in and one way\nout of your network, you don't need BGP.\n\n187\n00:10:08.970 --> 00:10:12.650\nBut if you own your actual IP block, and\n\n188\n00:10:12.650 --> 00:10:16.830\nyou want more than one ISP\nto be able to route for it?\n\n189\n00:10:16.830 --> 00:10:18.791\nThat's when you need BGP.\n\n190\n00:10:18.791 --> 00:10:20.796\nSo there's a very specific scenario for\nbusinesses.\n\n191\n00:10:20.796 --> 00:10:22.934\nFor ISPs you run it all the time.\n\n192\n00:10:22.934 --> 00:10:27.115\nIf you work for an ISP,\nyou will work with BGP on a daily basis.\n\n193\n00:10:27.115 --> 00:10:29.852\nBut for a company, small, medium, large,\n\n194\n00:10:29.852 --> 00:10:33.826\nit boils down to do you own your IP block,\nand most people don't.\n\n195\n00:10:33.826 --> 00:10:34.850\nWe don't own ours, right?\n\n196\n00:10:34.850 --> 00:10:39.920\nWe get ours from GRU, if we ever cancel\nour GRU service, we'll lose those IPs.\n\n197\n00:10:39.920 --> 00:10:43.127\nAnd if our GRU line goes down and\nwe fail over to our cable line,\n\n198\n00:10:43.127 --> 00:10:45.478\nthe cable line has all\ndifferent public IPs.\n\n199\n00:10:45.478 --> 00:10:47.436\nAnd that's fine for\nus getting out to the Internet.\n\n200\n00:10:47.436 --> 00:10:49.230\nAnd we don't have any servers\nhere in the building anyway.\n\n201\n00:10:49.230 --> 00:10:50.910\nThey're all up in the cloud, right?\n\n202\n00:10:50.910 --> 00:10:54.501\nSo if we flip over lines, we don't care\nabout those IPs, it doesn't matter.\n\n203\n00:10:54.501 --> 00:10:57.534\nBut if we had servers here,\nthen it would matter.\n\n204\n00:10:57.534 --> 00:11:02.604\nThen we would need to make sure those\nIPs followed us over and we'd need BGP.\n\n205\n00:11:02.604 --> 00:11:06.392\nAll right, so let's pretend for a moment\nthat we do own a block of IPs, and\n\n206\n00:11:06.392 --> 00:11:10.141\nI actually got a router setup here in\nthe background with that scenario.\n\n207\n00:11:10.141 --> 00:11:14.507\nSo here's a router of mine, NYEDGE1, and\n\n208\n00:11:14.507 --> 00:11:19.935\nif I do a show ip interface brief,\nI've got two lines.\n\n209\n00:11:19.935 --> 00:11:24.858\nOkay, gi0/0 is my connection to\nmy Internet service provider.\n\n210\n00:11:24.858 --> 00:11:28.951\nI've given it an IP of 209.251.0.2, right?\n\n211\n00:11:28.951 --> 00:11:32.910\nSo that's usually like a point to point\nlink that connects us to the ISP.\n\n212\n00:11:32.910 --> 00:11:34.826\nBut then I've got gi0/1 and\n\n213\n00:11:34.826 --> 00:11:38.887\nthat has a block of IPs that I'm\ngonna pretend that I own, right?\n\n214\n00:11:38.887 --> 00:11:41.302\nThese are actually some that\nare attached to our building.\n\n215\n00:11:41.302 --> 00:11:46.344\nSo 209.251.159.186,\nif I look at the actual interface,\n\n216\n00:11:46.344 --> 00:11:50.186\nI'll see that's a 255.255.255.240,\n\n217\n00:11:50.186 --> 00:11:54.274\nwhich means that it's actually,\nwhat would that range be?\n\n218\n00:11:54.274 --> 00:11:59.292\nIt would be 177,\nit would be 209 to 251.159.177\n\n219\n00:11:59.292 --> 00:12:03.152\nall the way up to like 191 or\nsomewhere in there.\n\n220\n00:12:03.152 --> 00:12:08.213\nSo I've got a block of about 16 IPs,\n15 usable IPs, right?\n\n221\n00:12:08.213 --> 00:12:12.731\nAnd if I actually owned these, then I\nneed to get an autonomous system number\n\n222\n00:12:12.731 --> 00:12:15.782\nassigned to me, so\nI can put those blocks in the AS.\n\n223\n00:12:15.782 --> 00:12:20.554\nAnd then whenever I connect to an ISP,\nI can just join the AS,\n\n224\n00:12:20.554 --> 00:12:22.625\nI connect my AS to theirs.\n\n225\n00:12:22.625 --> 00:12:25.908\nNow, if I only have one ISP, I don't even\nhave to do that, I can just call the ISP\n\n226\n00:12:25.908 --> 00:12:28.818\nand I can say, hey, this is my public\nblock, can you add it to your AS?\n\n227\n00:12:28.818 --> 00:12:30.910\nAnd they'll do it, and\nI don't have to worry about BGP.\n\n228\n00:12:32.020 --> 00:12:37.120\nBut if I want more than one ISP, then I'm\nconnecting my autonomous system, right?\n\n229\n00:12:37.120 --> 00:12:39.870\nSo let's run through how that\nconfiguration looks, and\n\n230\n00:12:39.870 --> 00:12:42.220\nit's actually not that hard at all, okay?\n\n231\n00:12:42.220 --> 00:12:45.970\nThe way it works is first off,\nwe need to get BGP turned on.\n\n232\n00:12:45.970 --> 00:12:47.602\nAnd so the command for\n\n233\n00:12:47.602 --> 00:12:53.322\nthat is just router bgp followed by\nyour autonomous system number, okay?\n\n234\n00:12:53.322 --> 00:12:56.640\nNow you can make one up if you want, but\nthat's not gonna work out on the Internet.\n\n235\n00:12:56.640 --> 00:12:58.030\nRemember, the whole point\nof this is that we have\n\n236\n00:12:58.030 --> 00:12:59.810\npublic IPs that are assigned to us.\n\n237\n00:12:59.810 --> 00:13:02.860\nSo if you don't have public IPs, then\nthere's really no point in doing this.\n\n238\n00:13:03.860 --> 00:13:06.076\nIf you have the public IPs,\nif you purchased them and owned them,\n\n239\n00:13:06.076 --> 00:13:08.674\nyou should've been assigned an autonomous\nsystem number at the same time.\n\n240\n00:13:08.674 --> 00:13:12.250\nAnd then any time you purchase new ones,\nthe get added to the same AS number.\n\n241\n00:13:12.250 --> 00:13:14.820\nIf you didn't,\nthen you need to reach out to ARIN,\n\n242\n00:13:14.820 --> 00:13:17.080\nor you can usually buy\nit through your ISP too.\n\n243\n00:13:17.080 --> 00:13:19.032\nThey can kind of broker that deal, but\n\n244\n00:13:19.032 --> 00:13:21.597\nyou'll punch in your\nautonomous system number.\n\n245\n00:13:21.597 --> 00:13:27.647\nNow, most AS numbers are between 1 and\n65,535, it's a 16-bit number, right?\n\n246\n00:13:27.647 --> 00:13:30.598\nBut a few years ago they expanded\nthat range to add in more numbers,\n\n247\n00:13:30.598 --> 00:13:32.980\nand so you can have a less\nnumbers of a really high now.\n\n248\n00:13:32.980 --> 00:13:35.273\nSee, how Cisco is letting\nme putting up to 4 billion.\n\n249\n00:13:35.273 --> 00:13:40.128\nSo you might have a really high number,\nif not, terribly common so, but\n\n250\n00:13:40.128 --> 00:13:41.573\nthey're out there.\n\n251\n00:13:41.573 --> 00:13:43.637\nSo I'm just gonna make one out there,\n\n252\n00:13:43.637 --> 00:13:47.730\nI'll say that I'm autonomous\nsystem number 65,001, okay?\n\n253\n00:13:47.730 --> 00:13:53.909\nSo that's my autonomous system, I just\ncreated my autonomous system, all right?\n\n254\n00:13:53.909 --> 00:13:56.070\nNow what's in my autonomous system?\n\n255\n00:13:56.070 --> 00:13:58.882\nWell I need to specify the networks\nI am connected to, and\n\n256\n00:13:58.882 --> 00:14:01.063\nright now,I am connected to two networks.\n\n257\n00:14:01.063 --> 00:14:05.760\nThere is the block that I own, and\nthen there is the connection to my ISP.\n\n258\n00:14:05.760 --> 00:14:11.872\nSo I am gonna say,\nnetwork 209.251.159.186,\n\n259\n00:14:11.872 --> 00:14:14.822\nand I'm gonna put the mask in.\n\n260\n00:14:14.822 --> 00:14:18.283\nThis is different than OSPF and\nEIGRP where you have the wildcard mask,\n\n261\n00:14:18.283 --> 00:14:20.290\nhere it's the actual subnet mask.\n\n262\n00:14:20.290 --> 00:14:22.290\nRemember, these are public IPs, so\n\n263\n00:14:22.290 --> 00:14:26.020\nyou do have an actual subnet\nmask that's assigned to you,\n\n264\n00:14:26.020 --> 00:14:30.220\nyou have a certain bit, value assigned\nto it, and so I need to punch that in.\n\n265\n00:14:30.220 --> 00:14:35.809\nMine was 255.255.240,\nthat's the block of IPs that I have.\n\n266\n00:14:35.809 --> 00:14:39.364\nAnd I am getting red flagged,\n186 is my IP,\n\n267\n00:14:39.364 --> 00:14:44.430\nI need to put the actual subnet reference,\nwhich in this case is 176.\n\n268\n00:14:44.430 --> 00:14:47.340\nThere, okay, so\nthat's the network that I got.\n\n269\n00:14:48.400 --> 00:14:53.647\nAnd then I've got the network that\nI'm using to connect to my ISP,\n\n270\n00:14:53.647 --> 00:14:58.812\nwhich was 209.251.0.0, and\nthat was just a class c.\n\n271\n00:14:58.812 --> 00:15:01.688\nOkay, so I've got my autonomous system and\n\n272\n00:15:01.688 --> 00:15:05.745\nI've just put these two IP blocks\ninto my autonomous system.\n\n273\n00:15:05.745 --> 00:15:08.859\nOkay, now technically,\nI don't own this block, but\n\n274\n00:15:08.859 --> 00:15:11.849\nit's the block I'm gonna\nuse to connect to the ISP.\n\n275\n00:15:11.849 --> 00:15:15.619\nSo the network command is what's\ngonna activate that interface, so\n\n276\n00:15:15.619 --> 00:15:17.250\nI'm gonna bring that one in.\n\n277\n00:15:17.250 --> 00:15:20.690\nAfter that,\nI'm ready to connect to the ISP.\n\n278\n00:15:20.690 --> 00:15:24.190\nNow before I do that,\nlet me just do a quick show ip route.\n\n279\n00:15:24.190 --> 00:15:29.020\nAnd I'm gonna verify that my routing table\nis made up only of directly connected or\n\n280\n00:15:29.020 --> 00:15:30.006\nstatic routes.\n\n281\n00:15:30.006 --> 00:15:31.540\nI have no BGP routes, right?\n\n282\n00:15:31.540 --> 00:15:37.080\nIf I look at my legend up here, BGP routes\nwill actually show up with a B beside them\n\n283\n00:15:37.080 --> 00:15:38.710\nand I don't have any that have a B.\n\n284\n00:15:38.710 --> 00:15:40.870\nSo I'm not learning anything with BGP.\n\n285\n00:15:40.870 --> 00:15:45.270\nIf I do show IP protocols,\nI'll see that I am running BGP now.\n\n286\n00:15:45.270 --> 00:15:49.754\nSo there's bgp for\nautonomous system 65001, but right now,\n\n287\n00:15:49.754 --> 00:15:52.991\nI don't have any routing\ninformation sources.\n\n288\n00:15:52.991 --> 00:15:54.486\nNobody's talking to me, right?\n\n289\n00:15:54.486 --> 00:15:56.577\nSo I'm just kind of on my own.\n\n290\n00:15:56.577 --> 00:15:59.339\nI need to connect to a neighbor.\n\n291\n00:15:59.339 --> 00:16:03.044\nAnd so the statement for\ndoing that is we're going to say neighbor,\n\n292\n00:16:03.044 --> 00:16:05.450\nfollowed by the IP\naddress of the neighbor.\n\n293\n00:16:05.450 --> 00:16:09.847\nNow remember, the IG or P in OSPF,\nwe just discovered people.\n\n294\n00:16:09.847 --> 00:16:10.760\nBGP doesn't do that.\n\n295\n00:16:10.760 --> 00:16:12.900\nThere's no automatic discovery in BGP.\n\n296\n00:16:12.900 --> 00:16:15.996\nYou have to statically map your neighbor,\nright?\n\n297\n00:16:15.996 --> 00:16:20.060\nSo I'm gonna say neighbor 209.251.0.1,\nthat's my ISP, right.\n\n298\n00:16:20.060 --> 00:16:22.510\nThat's what I'm gonna connect to.\n\n299\n00:16:22.510 --> 00:16:25.570\nAnd then the important part.\n\n300\n00:16:25.570 --> 00:16:31.780\nI need to say remote -as and\nwhat their autonomous system number is.\n\n301\n00:16:31.780 --> 00:16:35.680\nSo I call up the ISP and I say,\nhey, I'm autonomous system 65001.\n\n302\n00:16:35.680 --> 00:16:38.110\nI wanna connect to you guys.\n\n303\n00:16:38.110 --> 00:16:39.580\nWhat's your AS number?\n\n304\n00:16:39.580 --> 00:16:42.481\nAnd they tell me,\nmaybe there's 65,000, right?\n\n305\n00:16:42.481 --> 00:16:46.355\nThere's actually a range of AS numbers\nthat are set aside for private use,\n\n306\n00:16:46.355 --> 00:16:50.270\nwhich is, I believe it's 49,152,\nall the way up to 65,535.\n\n307\n00:16:50.270 --> 00:16:52.350\nSo this one's in the private range.\n\n308\n00:16:52.350 --> 00:16:55.490\nIn real life lane, you'll have\nnumbers that are in the public range.\n\n309\n00:16:55.490 --> 00:16:57.030\nSo I'm gonna punch that in.\n\n310\n00:16:57.030 --> 00:16:59.582\nNow, assuming they've\nconfigured their end,\n\n311\n00:16:59.582 --> 00:17:02.392\nthe moment I run that I'm\ngonna sure talking to them.\n\n312\n00:17:02.392 --> 00:17:05.782\nAnd I'm going to say, hey I'm in AS65001,\n\n313\n00:17:05.782 --> 00:17:10.000\nyou're in AS65000,\nwe should start talking.\n\n314\n00:17:10.000 --> 00:17:12.070\nAnd sure enough,\ntheir end was already set up, so\n\n315\n00:17:12.070 --> 00:17:16.290\nmy adjacency comes up, and\nnow I'm sharing routes with them.\n\n316\n00:17:16.290 --> 00:17:19.550\nI'm telling them about my public block,\nand\n\n317\n00:17:19.550 --> 00:17:23.590\nthey're telling me about any\npublic blocks that they have.\n\n318\n00:17:23.590 --> 00:17:25.850\nNow, you got to be careful.\n\n319\n00:17:25.850 --> 00:17:27.290\nWhat public blocks does an ISP have?\n\n320\n00:17:28.330 --> 00:17:31.840\nWell in theory, the entire planet, right?\n\n321\n00:17:31.840 --> 00:17:34.600\nYour ISP has to know\nabout the whole world.\n\n322\n00:17:34.600 --> 00:17:36.985\nSo they give you the full BGP table.\n\n323\n00:17:36.985 --> 00:17:41.253\nIt's over 600,000 routes.\n\n324\n00:17:41.253 --> 00:17:43.730\nNow, your routing table stored\nin memory in your router,\n\n325\n00:17:43.730 --> 00:17:44.520\nhow much memory do you have?\n\n326\n00:17:44.520 --> 00:17:46.700\nNot enough for that, right.\n\n327\n00:17:46.700 --> 00:17:50.810\nYou have to have one of those really big\nhigh end routers, the routers that cost\n\n328\n00:17:50.810 --> 00:17:53.360\nover $100,000 to be able to manage\nthat routing table, it's too much.\n\n329\n00:17:53.360 --> 00:17:57.870\nSo the ISP is normally gonna ask you,\nhey, what network you want us to send?\n\n330\n00:17:57.870 --> 00:17:59.630\nAnd they'll usually\ngive you three choices.\n\n331\n00:17:59.630 --> 00:18:01.290\nOne, is the full routing table,\n\n332\n00:18:01.290 --> 00:18:05.260\nthey'll send you the whole thing\nif you want it, you don't want it.\n\n333\n00:18:05.260 --> 00:18:11.550\nTwo, they can send you just the routes\nthat are actually in their AS.\n\n334\n00:18:11.550 --> 00:18:14.640\nOkay, just the ones that\nare actually controlled by an ISP,\n\n335\n00:18:14.640 --> 00:18:16.390\nthat's normally what you want.\n\n336\n00:18:16.390 --> 00:18:18.910\nOr three, they can send you nothing,\nthey can send you no routes.\n\n337\n00:18:18.910 --> 00:18:21.490\nAnd then you can just use static routing,\nright?\n\n338\n00:18:21.490 --> 00:18:25.930\nNow, why would I want the networks\nthey're directly connected to.\n\n339\n00:18:25.930 --> 00:18:29.300\nIf I'm connected to two ISPs,\nI might prefer one over another.\n\n340\n00:18:29.300 --> 00:18:32.960\nSo let's say I'm connected to\nlevel three and CenturyLink and\n\n341\n00:18:32.960 --> 00:18:36.700\nI might have more bandwidth with\nCenturyLink, so I prefer that one.\n\n342\n00:18:36.700 --> 00:18:40.740\nWell, if I leave it that way,\nmaybe I use a static default route or\n\n343\n00:18:40.740 --> 00:18:41.829\nwhatever that prefer CenturyLink.\n\n344\n00:18:42.940 --> 00:18:47.910\nIf I wanna access a level three network,\nI'm gonna go out CenturyLink,\n\n345\n00:18:47.910 --> 00:18:50.640\nout to the internet over to level\nthree even though I had a direct\n\n346\n00:18:50.640 --> 00:18:52.270\nconnection to level three.\n\n347\n00:18:52.270 --> 00:18:55.760\nSo by having level three advertise\ntheir direct networks to me,\n\n348\n00:18:55.760 --> 00:18:58.440\nit'll make sure that when I wanna talk\nto level three I'd go to level three.\n\n349\n00:18:58.440 --> 00:18:59.943\nI don't go through somebody\nelse to get there, right?\n\n350\n00:18:59.943 --> 00:19:03.191\nSo that's why we want that\nsmaller routing [INAUDIBLE]\n\n351\n00:19:03.191 --> 00:19:04.952\n&gt;&gt; Don with a dynamic routing protocol\n\n352\n00:19:04.952 --> 00:19:08.710\nlike BGP is convergence ever an issue\ndo you ever have to worry about that?\n\n353\n00:19:08.710 --> 00:19:09.657\n&gt;&gt; BGP doesn't converge.\n\n354\n00:19:09.657 --> 00:19:12.230\n&gt;&gt; It doesn't.\n&gt;&gt; Interesting concept there right, so\n\n355\n00:19:12.230 --> 00:19:15.780\nwith OSPF and EIGRP and\nRIP we're all worried about convergence,\n\n356\n00:19:15.780 --> 00:19:18.558\nevery router should have\nthe same identical routing table.\n\n357\n00:19:18.558 --> 00:19:21.520\nImagine if 100,000 routers\n\n358\n00:19:21.520 --> 00:19:24.860\nacross the planet all had to have at the\nsame routing table, it would never happen.\n\n359\n00:19:24.860 --> 00:19:27.316\nAnd most of them don't even have\nthe full routing table at all.\n\n360\n00:19:27.316 --> 00:19:30.330\nSo BGP, doesn't converge.\n\n361\n00:19:30.330 --> 00:19:32.580\nNo convergence, no failover.\n\n362\n00:19:32.580 --> 00:19:34.570\nNo advanced path selection.\n\n363\n00:19:34.570 --> 00:19:37.680\nBGP, doesn't do a whole heck of a lot.\n\n364\n00:19:37.680 --> 00:19:40.590\nIt just tracks what AS's\nare connected to which other ones.\n\n365\n00:19:40.590 --> 00:19:41.470\nAnd what's the shortest path?\n\n366\n00:19:41.470 --> 00:19:42.400\nThat's all they do.\n\n367\n00:19:42.400 --> 00:19:46.600\nBGP is a very simple protocol and\nit has to be because of scale.\n\n368\n00:19:46.600 --> 00:19:49.980\nThere's no way you can converge 100,000\nrouters, it would never happen.\n\n369\n00:19:49.980 --> 00:19:52.610\n&gt;&gt; And it seems like that's where those\nthree choices that you're talking about\n\n370\n00:19:52.610 --> 00:19:55.770\nthat you can make become important\non how you optimize your network.\n\n371\n00:19:55.770 --> 00:19:57.060\n&gt;&gt; Absolutely, absolutely, yeah.\n\n372\n00:19:57.060 --> 00:19:59.750\nIf you pull a full table you're just,\nthat's a recipe for disaster,\n\n373\n00:19:59.750 --> 00:20:01.260\nunless you're in ISP, right.\n\n374\n00:20:01.260 --> 00:20:04.190\nSo, you usually wanna pulled\nthe table just the networks\n\n375\n00:20:04.190 --> 00:20:06.200\nthat ISP controls, right?\n\n376\n00:20:06.200 --> 00:20:08.500\nNow when I connected,\nI didn't confirm, did I?\n\n377\n00:20:08.500 --> 00:20:10.020\nAnd coz it does not mean it does it,\n\n378\n00:20:10.020 --> 00:20:13.050\nit's the ISP you call and\nyou talk when you set this up.\n\n379\n00:20:13.050 --> 00:20:14.980\nThey've do a lot other\nwork on that on their end.\n\n380\n00:20:14.980 --> 00:20:16.990\nAnd so for\nthe exam we're not to know that, right?\n\n381\n00:20:16.990 --> 00:20:19.910\nIn fact, technically we've done everything\nwe need know for the exam right here.\n\n382\n00:20:19.910 --> 00:20:21.390\nI'm gonna go a little beyond it.\n\n383\n00:20:21.390 --> 00:20:23.530\nBut let's take a look what happened.\n\n384\n00:20:23.530 --> 00:20:25.400\nI know I built an adjacency up.\n\n385\n00:20:25.400 --> 00:20:27.470\nOkay, so how do I verify that's working?\n\n386\n00:20:27.470 --> 00:20:29.880\nWell the easiest way is show IP route.\n\n387\n00:20:29.880 --> 00:20:32.670\nIf I look at my routing table, if this\nisn't worked, I should have some BGP\n\n388\n00:20:32.670 --> 00:20:37.070\nroutes in my routing table and sure enough\nright there, I'm getting some BGP routes.\n\n389\n00:20:37.070 --> 00:20:40.125\nOkay, and see how they're in here with\nan administrative distance of 20?\n\n390\n00:20:40.125 --> 00:20:42.410\nThat's a very highly preferred route.\n\n391\n00:20:42.410 --> 00:20:46.360\nBecause I know the ISP has these,\nthey actually control them.\n\n392\n00:20:46.360 --> 00:20:50.560\nI want to use those over anything I would\nlearn with an interior protocol, right?\n\n393\n00:20:51.630 --> 00:20:53.190\nOther ways I can verify it?\n\n394\n00:20:53.190 --> 00:20:57.520\nThere's show IP BGP summary,\none of my favorite commands.\n\n395\n00:20:57.520 --> 00:21:01.630\nWhen you run show IP BGP summary,\nit'll show you your neighbors and\n\n396\n00:21:01.630 --> 00:21:03.200\nwhether you've learned anything.\n\n397\n00:21:03.200 --> 00:21:08.379\nI can see that I'm connected to\nthis IP which is in AS65000,\n\n398\n00:21:08.379 --> 00:21:12.158\nI'm in 65001, they're in 65000.\n\n399\n00:21:12.158 --> 00:21:18.142\nAnd I can see that I've received six\nprefixes from them, six networks.\n\n400\n00:21:18.142 --> 00:21:20.823\nThat's important because just\nbecause I've received six,\n\n401\n00:21:20.823 --> 00:21:23.830\ndoesn't mean they all made it\nin the routing table, right?\n\n402\n00:21:23.830 --> 00:21:24.980\nLet's see, in fact,\n\n403\n00:21:24.980 --> 00:21:28.850\nif I look in the routing table,\nI only have five BGP routes.\n\n404\n00:21:28.850 --> 00:21:34.490\nI received six prefixes but only five made\nit in, what the heck is that all about?\n\n405\n00:21:34.490 --> 00:21:39.070\nWell, it means that I had\na better route from someone else.\n\n406\n00:21:39.070 --> 00:21:40.510\nAnd so I cancelled one of their routes.\n\n407\n00:21:40.510 --> 00:21:41.790\nOr one of their routes was invalid.\n\n408\n00:21:41.790 --> 00:21:44.620\nMaybe it was a bad route that came in,\nand I had to throw it out, right?\n\n409\n00:21:44.620 --> 00:21:46.420\nHey, how the heck can\nI have a better route?\n\n410\n00:21:46.420 --> 00:21:48.550\nThat has an admin distance of 20.\n\n411\n00:21:48.550 --> 00:21:52.760\nIf I had something from EIGR P, or OSPF,\na RIP would have been overwritten.\n\n412\n00:21:52.760 --> 00:21:54.080\nBut not a static route.\n\n413\n00:21:54.080 --> 00:21:55.940\nOr a directly connected route.\n\n414\n00:21:55.940 --> 00:21:57.980\nAnd that directly connected,\nthat's the problem.\n\n415\n00:21:57.980 --> 00:22:02.560\nI'm connected to the ISP on the network\nthat I'm directly connected with, right.\n\n416\n00:22:02.560 --> 00:22:05.110\nSo if I learned a network via BGP,\nI'm not gonna bring it in.\n\n417\n00:22:05.110 --> 00:22:10.060\nYou can actually run\nshow IP BGP RIB-failure.\n\n418\n00:22:10.060 --> 00:22:12.230\nA RIB is the routing information base.\n\n419\n00:22:12.230 --> 00:22:14.490\nIt's the database that BGP maintains.\n\n420\n00:22:14.490 --> 00:22:19.640\nAnd when you run that rib-failure, it'll\nshow you if there was an invalid route.\n\n421\n00:22:19.640 --> 00:22:23.110\nThen it would show it here, if I had\na bad route that had to get trashed.\n\n422\n00:22:23.110 --> 00:22:25.520\nSo I know it wasn't a bad\nroute that I learned,\n\n423\n00:22:25.520 --> 00:22:28.420\nit's just a route that wasn't as\ngood as something I already had.\n\n424\n00:22:28.420 --> 00:22:33.130\nIf you do a show IP BGP,\n\n425\n00:22:33.130 --> 00:22:36.480\nremember when I did show IP BGP summary,\nI saw my neighbors?\n\n426\n00:22:36.480 --> 00:22:39.090\nShow IP BGP, shows me the routes.\n\n427\n00:22:39.090 --> 00:22:41.260\nAnd I can look at all\nthe routes that I learned.\n\n428\n00:22:41.260 --> 00:22:43.080\nAnd see these symbols\nover here on the left?\n\n429\n00:22:43.080 --> 00:22:44.460\nThey're kind of important.\n\n430\n00:22:44.460 --> 00:22:46.920\nThe star, the star means it's valid.\n\n431\n00:22:46.920 --> 00:22:48.130\nIf it was a bad route,\n\n432\n00:22:48.130 --> 00:22:52.130\nit would've shown under the RIB-failure\nand it wouldn't have a star here, right?\n\n433\n00:22:52.130 --> 00:22:54.840\nSo if you see a missing star,\nthat's a problem.\n\n434\n00:22:54.840 --> 00:22:56.890\nAnd then the greater than symbol.\n\n435\n00:22:56.890 --> 00:22:58.670\nThat means it's the best route in BGP.\n\n436\n00:23:00.150 --> 00:23:03.660\nI might learn more than one route in BGP,\nI'll pick the best one,\n\n437\n00:23:03.660 --> 00:23:04.670\nthat'll get the greater than symbol.\n\n438\n00:23:04.670 --> 00:23:08.120\nThe one with the greater than\nsymbol is the one I'm gonna submit\n\n439\n00:23:08.120 --> 00:23:10.490\nto the routing table.\n\n440\n00:23:10.490 --> 00:23:14.440\nBut notice this route right here,\nit doesn't have a greater than symbol.\n\n441\n00:23:14.440 --> 00:23:15.820\nIt's not the best route.\n\n442\n00:23:15.820 --> 00:23:17.310\nThis is the one that didn't make it in.\n\n443\n00:23:17.310 --> 00:23:20.620\nAnd that's because I have\na directly connected route.\n\n444\n00:23:20.620 --> 00:23:25.670\nDirectly connected has an administrative\ndistance of zero, right?\n\n445\n00:23:25.670 --> 00:23:30.030\nDirectly connected is zero,\nstatic is one, BGP is 20.\n\n446\n00:23:30.030 --> 00:23:33.090\nSo static's, and\ndirectly connected can override BGP, and\n\n447\n00:23:33.090 --> 00:23:34.590\nthat's exactly what's happening here.\n\n448\n00:23:34.590 --> 00:23:38.460\nThat one didn't make it in\nthe routing table, right?\n\n449\n00:23:38.460 --> 00:23:39.650\nNow my example's pretty simple.\n\n450\n00:23:39.650 --> 00:23:43.652\nSo I just have a one AS but if I was\nconnected to a real ISP then I have more\n\n451\n00:23:43.652 --> 00:23:46.826\nASs down the path,\nI would see these pass listed here.\n\n452\n00:23:46.826 --> 00:23:51.810\nI would see 220 comma,\n500 comma, 1138 comma and so on,\n\n453\n00:23:51.810 --> 00:23:56.533\nYou used to the different ASs in\nthe path to get to that network But\n\n454\n00:23:56.533 --> 00:24:00.469\nif the ISP is just sending\nyou their condensed table,\n\n455\n00:24:00.469 --> 00:24:04.696\nthen there will only be one\nother As on the end, their AS.\n\n456\n00:24:04.696 --> 00:24:07.329\nAnd so it'll look very similar\nto what I have here, okay?\n\n457\n00:24:07.329 --> 00:24:12.877\nAnd see how the path actually does\nhave two entries, 65,000 and then i.\n\n458\n00:24:12.877 --> 00:24:15.783\n65,000 means that's\nthe AS I need to get to,\n\n459\n00:24:15.783 --> 00:24:19.228\nand then i means, once I'm in that AS,\nthere's an internal\n\n460\n00:24:19.228 --> 00:24:23.640\nrouting protocol that's gonna help me\nactually get to the network, right?\n\n461\n00:24:23.640 --> 00:24:25.850\nSo that's gonna end there, that i.\n\n462\n00:24:25.850 --> 00:24:29.209\nAll right, so that's what we see with BGP.\n\n463\n00:24:29.209 --> 00:24:33.417\nAnd at the end of the day,\nwhat did I really run?\n\n464\n00:24:33.417 --> 00:24:35.760\nWell, just a handful of commands.\n\n465\n00:24:35.760 --> 00:24:40.530\nI ran router BGP with my AS to\ncreate the autonomous system,\n\n466\n00:24:40.530 --> 00:24:44.790\nthen I ran two network commands,\nto advertise my networks.\n\n467\n00:24:44.790 --> 00:24:46.705\nAnd notice how the mask\ndisappeared on that one,\n\n468\n00:24:46.705 --> 00:24:49.519\nthat's because I actually followed\na class full boundary on that one.\n\n469\n00:24:49.519 --> 00:24:51.160\nSo it didn't need the mask,\nit threw it away.\n\n470\n00:24:51.160 --> 00:24:54.200\nBut this one was VLSM, or\nvariable link subnet mask, so\n\n471\n00:24:54.200 --> 00:24:55.790\nit had to include the mask.\n\n472\n00:24:55.790 --> 00:24:58.200\nAnd then my neighbor statement, right?\n\n473\n00:24:58.200 --> 00:25:00.560\nThose four commands right there,\n\n474\n00:25:00.560 --> 00:25:03.485\nthese other commands log neighbor changes,\nthat's a default.\n\n475\n00:25:03.485 --> 00:25:07.760\nSo that put entries to your log file,\nbut the other ones that's it, and\n\n476\n00:25:07.760 --> 00:25:08.830\nnow I'm up and running BGP,\n\n477\n00:25:08.830 --> 00:25:12.330\nI'm connected to my service provider,\nnot very hard to configure is it?\n\n478\n00:25:12.330 --> 00:25:15.435\nNow there are some slightly more\nadvance things that you may or\n\n479\n00:25:15.435 --> 00:25:16.516\nmay not choose to do.\n\n480\n00:25:16.516 --> 00:25:21.579\nI have a bit of a problem here,\nwhen I created AS 65000,\n\n481\n00:25:21.579 --> 00:25:27.560\nand I mapped my ISP, I did it all\nvia one interface, GI 0/0, right?\n\n482\n00:25:27.560 --> 00:25:29.882\nWhat if that interface goes down?\n\n483\n00:25:29.882 --> 00:25:34.979\nIf that interface goes down, I'm no longer\nconnected to this AS, and that's it.\n\n484\n00:25:34.979 --> 00:25:35.837\nWhat if I want a redundancy?\n\n485\n00:25:35.837 --> 00:25:38.583\nWhat if I want to have more\nthan one link to that ISP?\n\n486\n00:25:38.583 --> 00:25:43.081\nYou can't do it this way, so instead\nof bonding it to a physical interface,\n\n487\n00:25:43.081 --> 00:25:48.235\na lot of times what we'll do is we'll bond\nit to a loopback interface instead, right?\n\n488\n00:25:48.235 --> 00:25:53.011\nIf I look at my router,\nI have a loopback interface\n\n489\n00:25:53.011 --> 00:25:57.240\non loopback 0, which is 1.1.1.1.\n\n490\n00:25:57.240 --> 00:26:03.038\nIf I bond my AS to that, I can set up my\nneighbor relationships based on that IP.\n\n491\n00:26:03.038 --> 00:26:05.834\nAnd when I do that,\nif one interface fails,\n\n492\n00:26:05.834 --> 00:26:09.140\nI can still answer that\nIP on other interfaces.\n\n493\n00:26:09.140 --> 00:26:11.680\nI can keep my connection up,\nI can have redundant links cuz remember,\n\n494\n00:26:11.680 --> 00:26:12.850\nBGP doesn't do redundancy.\n\n495\n00:26:12.850 --> 00:26:16.530\nI have to trick it, and you trick it\nby using loopback interfaces like this.\n\n496\n00:26:16.530 --> 00:26:20.938\nSo the best practice is not to\ndefine neighbors on interface IPs,\n\n497\n00:26:20.938 --> 00:26:24.945\nbut instead to define neighbors\non a loopback instead, and\n\n498\n00:26:24.945 --> 00:26:29.372\nthat makes the configuration\na little bit more complex, right?\n\n499\n00:26:29.372 --> 00:26:31.768\nSo what I'm gonna do is I'm gonna\nget into my configuration, and\n\n500\n00:26:31.768 --> 00:26:33.477\nI'm gonna delete everything\nthat I just did.\n\n501\n00:26:33.477 --> 00:26:37.510\nSo I'm gonna get rid of BGP 6500, right?\n\n502\n00:26:37.510 --> 00:26:39.458\nSo that just got trimmed off.\n\n503\n00:26:39.458 --> 00:26:44.239\nAnd if I do a show IP route,\nall my BGP routes should be gone.\n\n504\n00:26:44.239 --> 00:26:45.893\nAnd nope, they're still there.\n\n505\n00:26:45.893 --> 00:26:50.474\nSo [LAUGH] that's cuz I'm\nactually in AS 65001.\n\n506\n00:26:50.474 --> 00:26:52.086\nSo if I did the right AS number,\nthat'll help.\n\n507\n00:26:52.086 --> 00:26:53.147\nThere we go.\n\n508\n00:26:53.147 --> 00:26:56.070\nSo it's deleting the neighbor,\nthe routes will go away.\n\n509\n00:26:56.070 --> 00:26:58.617\nAnytime now, there we go.\n\n510\n00:26:58.617 --> 00:27:05.165\nRoutes are gone, and if I do a show\nip bgp summary, BGP not active, okay?\n\n511\n00:27:05.165 --> 00:27:09.491\nAnd I'm gonna redefine it, so\nI'm gonna say bgp 65001, and so\n\n512\n00:27:09.491 --> 00:27:11.140\nI'm turning bgp back on.\n\n513\n00:27:11.140 --> 00:27:14.859\nAnd this time,\nwhen I do my neighbor statement, okay?\n\n514\n00:27:14.859 --> 00:27:19.819\nI'm gonna do neighbor 209.251.0.1,\n\n515\n00:27:19.819 --> 00:27:22.931\nand I'm gonna come in here, and\n\n516\n00:27:22.931 --> 00:27:28.481\nI'm gonna specify the remote-as,\nlike we did before.\n\n517\n00:27:28.481 --> 00:27:31.047\nAnd actually when I do that it's\ngonna bring the connection up right\n\n518\n00:27:31.047 --> 00:27:31.775\naway, isn't it?\n\n519\n00:27:31.775 --> 00:27:35.416\nSo I don't want the connection\nto come up right away, so\n\n520\n00:27:35.416 --> 00:27:39.922\nwhat I'm gonna do is get into\ninterface gi0/0, and shut it down.\n\n521\n00:27:39.922 --> 00:27:45.283\nAll right, so\nnow I get back into BGP 6501,\n\n522\n00:27:45.283 --> 00:27:48.365\nall right, and I'll say,\n\n523\n00:27:48.365 --> 00:27:55.354\nneighbor 209.251.0.1 remote-as 65000.\n\n524\n00:27:55.354 --> 00:27:58.616\nAll right, so\nthat's exactly what I entered earlier.\n\n525\n00:27:58.616 --> 00:28:03.354\nAnd then I'm gonna say, neighbor and\nI can specify other options like\n\n526\n00:28:03.354 --> 00:28:08.347\nwhat I want my update source to be,\nwhich I'm gonna set it to loopback 0.\n\n527\n00:28:08.347 --> 00:28:13.872\nNow whenever I talk to that neighbor,\ninstead of using the IP from the nearest\n\n528\n00:28:13.872 --> 00:28:18.990\ninterface which would gi0/0 I'm\ngonna use the IP from loopback 0.\n\n529\n00:28:18.990 --> 00:28:22.403\nAnd that IP can be answered to from\nany of the interfaces on my router.\n\n530\n00:28:22.403 --> 00:28:25.162\nNow, I've got flexibility to move\nfrom interface to interface,\n\n531\n00:28:25.162 --> 00:28:27.260\ncuz I'm tying it to the loopback.\n\n532\n00:28:27.260 --> 00:28:29.587\nNow, a little bit of a problem.\n\n533\n00:28:29.587 --> 00:28:35.070\nBGP or EBGP, like we're doing here,\nis really designed to only go one hop.\n\n534\n00:28:35.070 --> 00:28:36.871\nIt's supposed to be direct connections.\n\n535\n00:28:36.871 --> 00:28:38.683\nThis isn't a direct connection anymore,\n\n536\n00:28:38.683 --> 00:28:41.111\nthe connection's gonna come\nin my gi0/0 interface.\n\n537\n00:28:41.111 --> 00:28:44.639\nAnd then it's gonna have to hop to my\nloopback interface, and EBGP doesn't do\n\n538\n00:28:44.639 --> 00:28:48.019\nthat by default, so this actually\nwouldn't work if I stopped right here.\n\n539\n00:28:48.019 --> 00:28:54.200\nI need one more line,\nI'm gonna say neighbor 209.251.0.1\n\n540\n00:28:54.200 --> 00:28:59.149\nebgp-multihop, and\nthe number of hops I want to allow.\n\n541\n00:28:59.149 --> 00:29:02.631\nThe default is one,\nI'm gonna bump it up to two, okay?\n\n542\n00:29:02.631 --> 00:29:05.687\nThat way, I can hop from my\ngi0/0 to the loop back, or\n\n543\n00:29:05.687 --> 00:29:10.523\nin the other direction, from the loop back\ninto the gi0/0 and then the destination.\n\n544\n00:29:10.523 --> 00:29:12.765\nSo I'm allowing that one extra hop, right?\n\n545\n00:29:12.765 --> 00:29:15.989\nA little more complex to do it this way,\nI have to set my update source, and\n\n546\n00:29:15.989 --> 00:29:17.850\nI have to allow the extra hop.\n\n547\n00:29:17.850 --> 00:29:20.830\nBut once it's done,\nI now have the flexibility\n\n548\n00:29:20.830 --> 00:29:24.750\nof doing more than one connection to\nan ISP, having redundant links to the ISP.\n\n549\n00:29:26.430 --> 00:29:29.452\nOne more advanced thing that I might\nwanna do is to set a password.\n\n550\n00:29:29.452 --> 00:29:35.520\nSo I'm gonna say, that neighbor password,\nand then whatever the password is.\n\n551\n00:29:35.520 --> 00:29:38.890\nNow if it's a point to point link\nwhy bother setting up a password?\n\n552\n00:29:38.890 --> 00:29:39.530\nWell normally,\n\n553\n00:29:39.530 --> 00:29:44.560\nyou wouldn't, but if you're bound to\na loopback, now there's an extra hop.\n\n554\n00:29:44.560 --> 00:29:47.930\nNow in theory somebody could spoof\ntraffic and throw it in and do things.\n\n555\n00:29:47.930 --> 00:29:50.455\nSo it's kind of important to have\na password to secure it, all right.\n\n556\n00:29:50.455 --> 00:29:51.891\nSo I'm gonna set that too.\n\n557\n00:29:51.891 --> 00:29:56.441\nMy overall connection is now\na little bit more complex, right?\n\n558\n00:29:56.441 --> 00:30:01.064\nSo instead of just one neighbor\ncommand followed by the networks.\n\n559\n00:30:01.064 --> 00:30:05.341\nNow, I've got four different neighbor\ncommands to get that setu p.\n\n560\n00:30:05.341 --> 00:30:09.376\nAnd I'm forgetting to do networks, and so\n\n561\n00:30:09.376 --> 00:30:14.545\nI'll punch those in, and\nthen we will be in business.\n\n562\n00:30:14.545 --> 00:30:20.365\nSo let me just get this one in, so\nthis is the block that I control.\n\n563\n00:30:20.365 --> 00:30:24.785\nAnd then I'll do the ISP connection\nwhich is on the boundary,\n\n564\n00:30:24.785 --> 00:30:27.422\nthere, and so now we're all set up.\n\n565\n00:30:27.422 --> 00:30:31.013\nSo if I get into interface gi0/0,\nwhoops, and\n\n566\n00:30:31.013 --> 00:30:35.558\nit doesn't give me my challenge\nhere turning on an interface.\n\n567\n00:30:35.558 --> 00:30:37.191\nSo [LAUGH] there we go.\n\n568\n00:30:37.191 --> 00:30:40.367\nSo I'm gonna turn that interface back on,\nand when that happen,\n\n569\n00:30:40.367 --> 00:30:43.154\nI should be able to start\ntalking to my neighbor, right?\n\n570\n00:30:43.154 --> 00:30:47.413\nSo it's gonna come up, interface just\none up, bgp is gonna connect in and\n\n571\n00:30:47.413 --> 00:30:52.085\ntry to reach out to the neighbor, and it's\ngonna try to connect from the loopback\n\n572\n00:30:52.085 --> 00:30:55.681\ninterface, instead of from\nthe actual gi0/0 interface.\n\n573\n00:30:55.681 --> 00:30:58.837\nAnd when that happens, we should get\nan adjacency that builds up, and\n\n574\n00:30:58.837 --> 00:31:00.558\nthen we should be in business, okay?\n\n575\n00:31:00.558 --> 00:31:02.616\nAssuming I typed everything correctly.\n\n576\n00:31:02.616 --> 00:31:06.353\nAnd BGP can be a little slow,\nremember, we don't converge.\n\n577\n00:31:06.353 --> 00:31:08.697\nThings aren't super fast,\nwe don't have a lot of redundancies.\n\n578\n00:31:08.697 --> 00:31:13.504\nSo things can take a little bit of time,\nbut it usually doesn't take that long, so\n\n579\n00:31:13.504 --> 00:31:16.445\noop, okay, so\nhere I'm getting some warnings.\n\n580\n00:31:16.445 --> 00:31:23.213\nSee this bad authentication no MD5\ndigest from 209.251.0.1, okay.\n\n581\n00:31:23.213 --> 00:31:25.330\nSo what does that mean?\n\n582\n00:31:25.330 --> 00:31:27.810\nWell it means that I set\na password on my side,\n\n583\n00:31:27.810 --> 00:31:31.760\nand apparently ISP hasn't set\na password on their side, right?\n\n584\n00:31:31.760 --> 00:31:35.660\nI'm not getting a digest from them, right?\n\n585\n00:31:35.660 --> 00:31:38.110\nWell actually,\nI guess I have a neighbor just came up.\n\n586\n00:31:38.110 --> 00:31:40.625\nSo do you have the password failed\na few times and then it came up,\n\n587\n00:31:40.625 --> 00:31:41.568\nthat's interesting.\n\n588\n00:31:41.568 --> 00:31:45.388\nSo maybe I just wanted sending\nthe password, that was odd.\n\n589\n00:31:45.388 --> 00:31:46.108\nSo normally,\n\n590\n00:31:46.108 --> 00:31:50.635\nyou'll see it in MD5 digest type message\nwhen you're not getting the connection.\n\n591\n00:31:50.635 --> 00:31:52.003\nI found out what this is,\n\n592\n00:31:52.003 --> 00:31:56.303\nthe old connection that was still in\nplace when they were connecting to me.\n\n593\n00:31:56.303 --> 00:31:57.056\nThat is what it is.\n\n594\n00:31:57.056 --> 00:32:02.065\nSee how this is 209.251.0.1\nconnecting to 209.251.0.2,\n\n595\n00:32:02.065 --> 00:32:04.647\nit's not connecting to 1.1.1.1.\n\n596\n00:32:04.647 --> 00:32:06.756\nSo that's the other connection\nthat didn't have a password,\n\n597\n00:32:06.756 --> 00:32:07.921\nthat's what those messages are.\n\n598\n00:32:07.921 --> 00:32:12.235\nSo those should clearly up eventually, and\nthen my other connection should come up.\n\n599\n00:32:12.235 --> 00:32:17.796\nSo I'm gonna do a show ip bgp summary, and\nlet's just see if I pick up a neighbor.\n\n600\n00:32:17.796 --> 00:32:22.566\nAnd Ido have a neighbor, and I can see\nthat I received six prefixes from it.\n\n601\n00:32:22.566 --> 00:32:26.370\nAnd if I do a show ip route and\nlook at my routing table,\n\n602\n00:32:26.370 --> 00:32:29.890\nI've got those BGP routes coming in,\nright?\n\n603\n00:32:29.890 --> 00:32:33.448\nThe only difference here is that is being\nbound to my loopback interface instead\n\n604\n00:32:33.448 --> 00:32:36.755\nthat being bound of the physical side,\nand I had a password on it, right?\n\n605\n00:32:36.755 --> 00:32:40.434\nSo if I do a show ip bgp,\nI see those routes,\n\n606\n00:32:40.434 --> 00:32:46.176\nright in there that I'm writing and\nwe are communicating, okay?\n\n607\n00:32:46.176 --> 00:32:49.530\nAnd notice up right here\nmy BGP table version is 8,\n\n608\n00:32:49.530 --> 00:32:53.300\nlocal router id is 1.1.1.1\nis using my loopback.\n\n609\n00:32:53.300 --> 00:32:55.937\nNow the ISP still has that entry\nto the my other address, and so\n\n610\n00:32:55.937 --> 00:32:58.293\nthat's just gonna keep\nfailing cuz it's sending it.\n\n611\n00:32:58.293 --> 00:33:02.005\nI need to call my ISP and say, hey,\ncan you turn off that connection to\n\n612\n00:33:02.005 --> 00:33:06.560\n209.251.0.2, cuz now I'm using 1.1.1.1,\nand I'll be fine.\n\n613\n00:33:06.560 --> 00:33:11.552\n&gt;&gt; And Don, thank you for taking a time to\nshow us a little bit more about the EBGP.\n\n614\n00:33:11.552 --> 00:33:13.226\n&gt;&gt; [LAUGH]\n&gt;&gt; If I could get that acronym right,\n\n615\n00:33:13.226 --> 00:33:15.415\ndoes look like we're coming to\nthe end of another episode though.\n\n616\n00:33:15.415 --> 00:33:16.231\nBut before we do it,\n\n617\n00:33:16.231 --> 00:33:19.015\ndo you have any parting words that\nyou'd like to tell them about BGP?\n\n618\n00:33:19.015 --> 00:33:22.855\n&gt;&gt; The main thing is that in real life\nplaying BGp is super easy for most people,\n\n619\n00:33:22.855 --> 00:33:24.244\nbecause you don't run it.\n\n620\n00:33:24.244 --> 00:33:27.499\n[LAUGH] Most people don't need to run BGP,\nand if you do,\n\n621\n00:33:27.499 --> 00:33:31.725\nif you just have a connection to a single\nISP, they'll do all the work for\n\n622\n00:33:31.725 --> 00:33:35.432\nyou, you usually don't even have\nto run it internally at all.\n\n623\n00:33:35.432 --> 00:33:39.641\nIt really only comes into play if you\nown your own block of public IPs, and\n\n624\n00:33:39.641 --> 00:33:41.366\nyou've got two or more ISPs,\n\n625\n00:33:41.366 --> 00:33:45.784\nthat's when you need to run BGP that's\nwhen it becomes an important thing.\n\n626\n00:33:45.784 --> 00:33:49.409\nSo that's why it's not so prominent on\nthis exam, that's why it hasn't been on\n\n627\n00:33:49.409 --> 00:33:52.530\nthe exam in the past,\nbecause it's just not all that common.\n\n628\n00:33:52.530 --> 00:33:56.613\nBut now, it helps us to get ready to\nknow what BGP is like and be ready for\n\n629\n00:33:56.613 --> 00:33:57.248\nthe CCMP.\n\n630\n00:33:57.248 --> 00:33:57.972\nWe jump in there, and\n\n631\n00:33:57.972 --> 00:34:00.162\nwe're really gonna learn the advanced\nstuff over on that side.\n\n632\n00:34:00.162 --> 00:34:03.112\n&gt;&gt; All right, Don,\nwe appreciate that information.\n\n633\n00:34:03.112 --> 00:34:05.221\nWe appreciate you the viewer,\ntime to wrap it up.\n\n634\n00:34:05.221 --> 00:34:07.983\nSigning out for ITPro.TV,\nI've been your host Wes Brian.\n\n635\n00:34:07.983 --> 00:34:09.096\n&gt;&gt; I'm Don Pezet.\n\n636\n00:34:09.096 --> 00:34:11.872\n&gt;&gt; And we'll see you next time.\n\n637\n00:34:11.872 --> 00:34:17.810\n[MUSIC]\n\n638\n00:34:17.810 --> 00:34:21.037\n&gt;&gt; Thank you for watching ITPro.TV.\n\n",
          "vimeoId": "191051634"
        }
      ],
      "title": "WAN Technologies"
    },
    {
      "episodes": [
        {
          "description": "In this episode, Wes and Don take a look at Hot Standby Router Protocol or HSRP. They explain virtual IP addresses when using HSRP as well as the states that a router can be  go through like initial, listen, speak…etc. They also explore priorities",
          "length": "1977",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/cisco-ccna200105/cisco-ccna200105-4-1-101716-PGM.00_32_43_18.Still001.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/cisco-ccna200105/cisco-ccna200105-4-1-101716-PGM.00_32_43_18.Still001-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/cisco-ccna200105/cisco-ccna200105-4-1-101716-PGM.00_32_43_18.Still001-sm.jpg",
          "title": "Hot Standby Router Protocol (HSRP)",
          "transcript": "WEBVTT\n\n1\n00:00:00.220 --> 00:00:06.749\nWelcome to IT PRO TV,\nI'm your host [CROSSTALK]\n\n2\n00:00:06.749 --> 00:00:08.327\n[MUSIC]\n\n3\n00:00:08.327 --> 00:00:12.330\n&gt;&gt; You're watching IT PRO.TV.\n\n4\n00:00:12.330 --> 00:00:15.200\n&gt;&gt; Welcome back to another exciting\nepisode here at IT PRO.TV.\n\n5\n00:00:15.200 --> 00:00:18.704\nI'm your host Wes Bryan and in today's\nepisode, we're coming back at you with\n\n6\n00:00:18.704 --> 00:00:22.174\nmore Cisco routing and switching,\nlooking at our infrastructure services.\n\n7\n00:00:22.174 --> 00:00:25.140\nJoining us in the studio for this endeavor\nis none other than Mr. Don Pezet.\n\n8\n00:00:25.140 --> 00:00:26.260\nDon, how are you doing sir?\n\n9\n00:00:26.260 --> 00:00:28.840\n&gt;&gt; I'm doing great Wes, and ready to\njump back into the world of Cisco.\n\n10\n00:00:28.840 --> 00:00:33.520\nIn particular, HSRP which is\nthe hot standby router protocol.\n\n11\n00:00:33.520 --> 00:00:38.150\nIt's a really neat function that's built\ninto pretty much every Cisco router and\n\n12\n00:00:38.150 --> 00:00:40.430\nthe majority of the Cisco\nswitchers that are out there.\n\n13\n00:00:40.430 --> 00:00:43.450\nAnd it allows us to create\na redundant default gateway,\n\n14\n00:00:43.450 --> 00:00:45.150\nwhich is a pretty handy thing to have.\n\n15\n00:00:45.150 --> 00:00:49.950\n&gt;&gt; Now, Don, in PC and basic computing, I\nrealize when we have more than one device,\n\n16\n00:00:49.950 --> 00:00:52.800\nif we have a couple of hard drives, we put\nthem in array to array, depending on how\n\n17\n00:00:52.800 --> 00:00:55.470\nwe set it up we do it for things\nlike fault tolerance and redundancy.\n\n18\n00:00:55.470 --> 00:00:59.190\nI wanna still have access to my data, but\nwhen we start talking about networking,\n\n19\n00:00:59.190 --> 00:01:01.040\nwhy do we want the redundancy\nbuilt into our network?\n\n20\n00:01:01.040 --> 00:01:03.750\n&gt;&gt; All right, so,\nit's kinda the same concept, right?\n\n21\n00:01:03.750 --> 00:01:06.990\nIf you have a server, and you're worried\nabout losing power, what do you do?\n\n22\n00:01:06.990 --> 00:01:08.020\nYou add a second power supply.\n\n23\n00:01:08.020 --> 00:01:10.600\nNow, if a power supply fails, the other\none kicks over and you're in business.\n\n24\n00:01:10.600 --> 00:01:13.580\nMaybe add a battery back up on\ntop of that in case, you know,\n\n25\n00:01:13.580 --> 00:01:15.280\nyou actually lose power from the wall.\n\n26\n00:01:15.280 --> 00:01:18.280\nYou want your hard drives to be redundant,\nyou buy more hard drives,\n\n27\n00:01:18.280 --> 00:01:20.250\nyou do array to array or\nsomething like that, right?\n\n28\n00:01:20.250 --> 00:01:23.480\nIt's that same concept applied to routers.\n\n29\n00:01:23.480 --> 00:01:27.044\nNow, where it gets tricky, if you guys\nare watching these episodes in order,\n\n30\n00:01:27.044 --> 00:01:28.668\nyou just saw our routing protocol.\n\n31\n00:01:28.668 --> 00:01:32.601\nThings like EIGRP or OSPF where if you\nhave more than one path on the network,\n\n32\n00:01:32.601 --> 00:01:35.680\nthen those routing protocols\nwill find the other paths.\n\n33\n00:01:35.680 --> 00:01:38.570\nIf one path fails,\nthey'll just route around.\n\n34\n00:01:38.570 --> 00:01:41.720\nSo why do we need a redundancy\nprotocol if we have that?\n\n35\n00:01:41.720 --> 00:01:44.590\nAnd the reason is the way\nthat gateways work, right.\n\n36\n00:01:44.590 --> 00:01:46.880\nLet me show you in a diagram here so\nI can illustrate what's going on.\n\n37\n00:01:46.880 --> 00:01:48.960\nIt's a little easier\nwhen you see it this way.\n\n38\n00:01:48.960 --> 00:01:51.550\nSo I've got kind of a sample\nnetwork up here in my diagram.\n\n39\n00:01:51.550 --> 00:01:54.439\nI've got a network,192.168.0.0, and\n\n40\n00:01:54.439 --> 00:01:59.519\nit wants to cross through my routing\ninfrastructure to get over to 192.168.1.0.\n\n41\n00:01:59.519 --> 00:02:00.060\nI've got two paths, right?\n\n42\n00:02:01.360 --> 00:02:03.260\nSo if I'm running OSPF or EIGRP,\n\n43\n00:02:03.260 --> 00:02:06.500\nthey're gonna look at this and\nthey're gonna say okay, well I can go\n\n44\n00:02:06.500 --> 00:02:10.930\nRouter A to Router B to Router C to Router\nE, and I can get to the destination.\n\n45\n00:02:10.930 --> 00:02:14.133\nOr I can go Router A to Router D to\nRouter E, and get to the destination.\n\n46\n00:02:14.133 --> 00:02:15.529\nWhich one are they gonna pick?\n\n47\n00:02:15.529 --> 00:02:16.127\nI don't know.\n\n48\n00:02:16.127 --> 00:02:18.270\nRight, [LAUGH] it depends on the protocol.\n\n49\n00:02:18.270 --> 00:02:20.540\nThey use different metrics and\nall that good stuff.\n\n50\n00:02:20.540 --> 00:02:22.670\nSo, they'll figure one way out or another.\n\n51\n00:02:22.670 --> 00:02:26.030\nWell, what if I have\na failure on that network?\n\n52\n00:02:26.030 --> 00:02:27.000\nSo I have a router that goes down.\n\n53\n00:02:27.000 --> 00:02:27.690\nWell, what's gonna happen?\n\n54\n00:02:28.810 --> 00:02:29.830\nIt's not a big deal.\n\n55\n00:02:29.830 --> 00:02:32.740\nA dynamic routing protocol\nwill see that failure and say,\n\n56\n00:02:32.740 --> 00:02:36.880\nokay, well, the ABCE path,\nthat's no longer valid.\n\n57\n00:02:36.880 --> 00:02:40.990\nAnd now the ADE path that is valid, so\nthat's the route we're gonna go, and\n\n58\n00:02:40.990 --> 00:02:41.900\nwe're in business.\n\n59\n00:02:41.900 --> 00:02:43.270\nSo there's your redundancy.\n\n60\n00:02:43.270 --> 00:02:45.220\nAnd we didn't need a crazy\nprotocol to handle this.\n\n61\n00:02:45.220 --> 00:02:47.660\nWe just use our regular routing protocols,\nproblem solved.\n\n62\n00:02:48.690 --> 00:02:55.120\nBut where this scenario breaks down\nis if you have a single point, right?\n\n63\n00:02:55.120 --> 00:02:57.840\nWhat if Router A was the one that failed?\n\n64\n00:02:57.840 --> 00:03:04.700\nWell, on the 192.168.0.0 network, Router\nA is what's called the first hop, right?\n\n65\n00:03:04.700 --> 00:03:06.652\nIf you trace route out your network and\n\n66\n00:03:06.652 --> 00:03:08.970\nfigure out all the routers\nyou pass through,\n\n67\n00:03:08.970 --> 00:03:12.937\nthis is the very first hop, the default\ngateway for the host on this network.\n\n68\n00:03:12.937 --> 00:03:16.997\nIf the default gateway goes down, it\ndoesn't matter how many paths we have on\n\n69\n00:03:16.997 --> 00:03:21.179\nthe network, who cares, because we can't\neven get out of our own network, and\n\n70\n00:03:21.179 --> 00:03:24.830\nthat's the big problem with\ndynamic routing protocols.\n\n71\n00:03:24.830 --> 00:03:25.870\nI shouldn't call it a problem.\n\n72\n00:03:25.870 --> 00:03:30.393\nIt's just an area that dynamic routing\nprotocols don't handle because there is\n\n73\n00:03:30.393 --> 00:03:31.560\nonly one route.\n\n74\n00:03:31.560 --> 00:03:34.944\nOne way in, one way out for\nthat network and if that one way is gone,\n\n75\n00:03:34.944 --> 00:03:37.110\nnow we're out of luck.\n\n76\n00:03:37.110 --> 00:03:38.640\nNow, when I talk about a failure here,\n\n77\n00:03:38.640 --> 00:03:42.530\nthis failure,\nit could be the network jack goes down.\n\n78\n00:03:42.530 --> 00:03:44.290\nIt could be the ISP goes down.\n\n79\n00:03:44.290 --> 00:03:46.600\nIt could be the entire router\nfails due to a power supply.\n\n80\n00:03:46.600 --> 00:03:49.950\nThere's any number of reasons why\nthat router might have failed.\n\n81\n00:03:49.950 --> 00:03:52.260\nBut either way,\nit's now no longer accessible, and\n\n82\n00:03:52.260 --> 00:03:54.130\nwe can't get out of the network.\n\n83\n00:03:54.130 --> 00:03:56.620\nAnd this network is semi-complex.\n\n84\n00:03:56.620 --> 00:04:00.610\nA lot of people have networks that were\nfar more simple, something like this\n\n85\n00:04:00.610 --> 00:04:05.420\nwhere you just have a router, and\nit connects you to the Internet,\n\n86\n00:04:05.420 --> 00:04:08.690\nand that router might be,\nthe most common is 192.168.0.1.\n\n87\n00:04:08.690 --> 00:04:10.570\nMost people do .1 for your router.\n\n88\n00:04:10.570 --> 00:04:11.990\nYou don't have to, there's no rule.\n\n89\n00:04:11.990 --> 00:04:14.780\nIt's just, the router's normally\nthe first device we set up.\n\n90\n00:04:14.780 --> 00:04:16.970\n&gt;&gt; Now, why would we even\nneed to use the protocol?\n\n91\n00:04:16.970 --> 00:04:19.150\nWhy don't we just go ahead and\nstick another router in there?\n\n92\n00:04:19.150 --> 00:04:20.390\nWouldn't that solve the problem?\n\n93\n00:04:20.390 --> 00:04:21.740\n&gt;&gt; All right so\nyou could go that route, right.\n\n94\n00:04:21.740 --> 00:04:26.420\nSo if I take this router, and I have\na failure obviously, I'm out of luck.\n\n95\n00:04:26.420 --> 00:04:27.810\nSo maybe I do like Wes said,\n\n96\n00:04:27.810 --> 00:04:30.860\nhey I'm just gonna go out,\nwhoops sorry, if I blow up my router.\n\n97\n00:04:30.860 --> 00:04:32.730\nThere we go, I'm going to go out and\nbuy a second router.\n\n98\n00:04:32.730 --> 00:04:34.340\nSo here we go,\nI've got Router A and Router B.\n\n99\n00:04:34.340 --> 00:04:40.369\nI've set up router A to 192.168.0.1,\nand Router B to be 192.168.0.2.\n\n100\n00:04:40.369 --> 00:04:40.917\nAnd you know,\n\n101\n00:04:40.917 --> 00:04:44.500\nI've got these guys both drawn with their\nown connection out to the Internet, right?\n\n102\n00:04:44.500 --> 00:04:45.980\nBut maybe I'm a tight wad.\n\n103\n00:04:45.980 --> 00:04:49.730\nI don't want to buy two T1 lines or\nDSL or whatever.\n\n104\n00:04:49.730 --> 00:04:55.290\nSo you might actually have another switch\nparked over here that these guys run into.\n\n105\n00:04:55.290 --> 00:04:59.800\nSo it is still just one connection out\nto the internet or something like that.\n\n106\n00:04:59.800 --> 00:05:02.060\nIt could be two separate\nconnections to the internet too.\n\n107\n00:05:02.060 --> 00:05:03.616\nI want full total redundancy.\n\n108\n00:05:03.616 --> 00:05:08.060\nAll right, well,\nwhat happens if Router A fails?\n\n109\n00:05:08.060 --> 00:05:11.090\nAll right, this is my default gateway,\nso it fails.\n\n110\n00:05:11.090 --> 00:05:14.180\nWhat I do, well, Router B is still up,\nI can go at it, problem solved,\n\n111\n00:05:14.180 --> 00:05:15.390\ndidn't need another protocol, did I?\n\n112\n00:05:16.410 --> 00:05:17.582\nWell, sort of.\n\n113\n00:05:17.582 --> 00:05:20.717\nAs far as the network is concerned, you're\nabsolutely right, we've got a redundancy,\n\n114\n00:05:20.717 --> 00:05:23.470\nwe're able to get out to the internet,\neverything's fine.\n\n115\n00:05:23.470 --> 00:05:27.170\nBut where the problem comes in\nare desktop operating systems.\n\n116\n00:05:27.170 --> 00:05:30.260\nSo if you're running Mac OS,\nif you're running Windows,\n\n117\n00:05:30.260 --> 00:05:34.130\nif you're running Linux, those operating\nsystems really expect you to have\n\n118\n00:05:34.130 --> 00:05:36.750\none default gateway, and that's it.\n\n119\n00:05:36.750 --> 00:05:39.309\nAnd if that one default gateway goes away,\n\n120\n00:05:41.060 --> 00:05:44.880\nit doesn't matter if you have 15 other\ngateways, you don't have them set up.\n\n121\n00:05:44.880 --> 00:05:46.050\nLet me show you what I mean.\n\n122\n00:05:46.050 --> 00:05:50.800\nIf I go, I'm on a Mac, and so if I go into\nmy system preferences, and I go into my\n\n123\n00:05:50.800 --> 00:05:56.270\nnetwork settings, and let's say, I switch\nover to doing a manual assignment.\n\n124\n00:05:56.270 --> 00:05:57.680\nSee how I've got this field,\n\n125\n00:05:57.680 --> 00:06:01.170\nwell it's gonna gripe at me cuz I'm\npicking our not valid IP, okay.\n\n126\n00:06:02.410 --> 00:06:06.150\nSo if I go in here, I've got this\none field for my router, right?\n\n127\n00:06:06.150 --> 00:06:08.710\nAnd it's just one field.\n\n128\n00:06:08.710 --> 00:06:12.780\nSo if I were to put in 192.168.0.1 and\n\n129\n00:06:12.780 --> 00:06:18.030\nthat router fails,\nI'm not gonna go to 192.168.0.2.\n\n130\n00:06:18.030 --> 00:06:20.900\nNow, I know some of you guys that are more\nadvanced users out there thinking,\n\n131\n00:06:20.900 --> 00:06:22.300\nwell actually I can go to the terminal and\n\n132\n00:06:22.300 --> 00:06:26.860\nI can add in some routes with additional\nmetrics and influence it that way.\n\n133\n00:06:26.860 --> 00:06:31.070\nYou can, but if you're handing out\nDHCP addresses from the server,\n\n134\n00:06:31.070 --> 00:06:33.760\nthese are normal environments,\nyou've only got that one gateway.\n\n135\n00:06:33.760 --> 00:06:37.980\nAnd if that one gateway no longer exists,\nyou're out of luck, all right?\n\n136\n00:06:37.980 --> 00:06:42.180\nSo, the problem with this solution\nis not on the router side,\n\n137\n00:06:42.180 --> 00:06:45.060\nthe problem with this solution is\non the work station side, right?\n\n138\n00:06:45.060 --> 00:06:47.720\nSo I'm not gonna be able to get\nout of the network unless I go to\n\n139\n00:06:47.720 --> 00:06:52.060\nevery one of my workstations and\nchange their gateway over to .2, right?\n\n140\n00:06:52.060 --> 00:06:57.310\nLet's say I have a 1000 work stations,\nthat's gonna take a while, right?\n\n141\n00:06:57.310 --> 00:06:59.280\nMaybe I have DHCP set up.\n\n142\n00:06:59.280 --> 00:07:02.020\nSo I go into DHCP and\nI modify the default gateway there.\n\n143\n00:07:02.020 --> 00:07:03.990\nAll right, hey, great,\nI'm going to hand out a new one.\n\n144\n00:07:03.990 --> 00:07:09.760\nWell, if I've got eight day leases,\nwe only renew leases after 50% of leases\n\n145\n00:07:09.760 --> 00:07:13.540\nconsumed so at four days, it could take up\nto four days for everybody to get the new\n\n146\n00:07:13.540 --> 00:07:16.500\ngateway and by that point, the other\ngateway's probably back on line again.\n\n147\n00:07:16.500 --> 00:07:18.470\nSo that's not terribly effective either.\n\n148\n00:07:18.470 --> 00:07:19.750\nI could go and change the router.\n\n149\n00:07:19.750 --> 00:07:22.570\nRight, so I go to Router B,\nI can change its IP address to .1.\n\n150\n00:07:22.570 --> 00:07:24.460\nRight, so that would work.\n\n151\n00:07:24.460 --> 00:07:28.302\nIf router A fails, I just go to Router B,\nand I change its IP to .1.\n\n152\n00:07:28.302 --> 00:07:29.710\nProblem solved.\n\n153\n00:07:29.710 --> 00:07:31.420\nBut I have to do it manually.\n\n154\n00:07:31.420 --> 00:07:32.380\nI have to do it myself.\n\n155\n00:07:33.380 --> 00:07:35.490\nWouldn't it have been nice\nif that was automatic?\n\n156\n00:07:35.490 --> 00:07:38.620\nRight, if it just happened\nwithout me getting involved.\n\n157\n00:07:38.620 --> 00:07:40.530\nNow, it becomes .1.\n\n158\n00:07:40.530 --> 00:07:44.430\nWell, we could probably work\nsomething out like that, right?\n\n159\n00:07:44.430 --> 00:07:48.350\nBut the problem becomes, what do I\ndo when Router A comes back online?\n\n160\n00:07:48.350 --> 00:07:51.000\nWhen Router A comes back online, it's .1.\n\n161\n00:07:51.000 --> 00:07:52.509\nRouter B has now .1 also.\n\n162\n00:07:52.509 --> 00:07:56.179\nNow, I've got conflicting IPs and\nthat's a whole different set of problems,\n\n163\n00:07:56.179 --> 00:07:56.740\nall right?\n\n164\n00:07:56.740 --> 00:07:59.593\nAnd that's where HSRP comes in.\n\n165\n00:07:59.593 --> 00:08:04.499\nHRP takes care of saying,\nwe're gonna take this IP address.\n\n166\n00:08:04.499 --> 00:08:06.361\nAnd yeah,\nit might be on this one router, but\n\n167\n00:08:06.361 --> 00:08:09.110\nif it fails we're gonna hand it\nover to somebody else, right?\n\n168\n00:08:09.110 --> 00:08:09.918\nWe're gonna exchange it.\n\n169\n00:08:09.918 --> 00:08:12.572\nSo, it's gonna bounce back and\nforth between routers, and\n\n170\n00:08:12.572 --> 00:08:15.916\nit lets us achieve what we can't achieve\nright here with physical routers.\n\n171\n00:08:15.916 --> 00:08:18.994\nAnd the way it looks is like this.\n\n172\n00:08:18.994 --> 00:08:21.565\nYes, you have 2 routers, right?\n\n173\n00:08:21.565 --> 00:08:22.820\nSo,I've got router A and router B.\n\n174\n00:08:22.820 --> 00:08:26.980\nI got 192.168.0.2 and 192.168.0.3, right?\n\n175\n00:08:26.980 --> 00:08:33.130\nAnd 192.168.0.1 is not\nassigned to either of them.\n\n176\n00:08:33.130 --> 00:08:39.170\nInstead, 192.168.0.1 is\nattached to a virtual router.\n\n177\n00:08:39.170 --> 00:08:41.250\nIt's floating out there, right?\n\n178\n00:08:41.250 --> 00:08:44.680\nAnd it's floating in\nbetween the 2 routers.\n\n179\n00:08:44.680 --> 00:08:48.299\nTechnically, both routers\nhave 192.168.0.1.\n\n180\n00:08:48.299 --> 00:08:53.880\nAnd that way, if router A fails,\nrouter B just takes it over for .1.\n\n181\n00:08:53.880 --> 00:08:56.190\nAnd if router B fails but\n\n182\n00:08:56.190 --> 00:08:59.580\nrouter A's still online then .1\ncomes back over to router A.\n\n183\n00:08:59.580 --> 00:09:01.510\nIt can now bounce back and forth.\n\n184\n00:09:01.510 --> 00:09:04.680\nAnd the best part is all of\nyour workstations out there,\n\n185\n00:09:04.680 --> 00:09:05.630\nthey don't know that.\n\n186\n00:09:05.630 --> 00:09:07.899\nThey think that .1 is real router, and\n\n187\n00:09:07.899 --> 00:09:12.530\nthey're going to .1 regardless of which\nactual hardware it's running from.\n\n188\n00:09:12.530 --> 00:09:13.700\nSo, they can move back and\n\n189\n00:09:13.700 --> 00:09:16.520\nforth as needed,\nwhich is a pretty cool thing, right?\n\n190\n00:09:16.520 --> 00:09:21.670\nIt gives you that flexibility without\nhaving to reconfigure your clients.\n\n191\n00:09:21.670 --> 00:09:23.138\nAnd what I think is the best part,\n\n192\n00:09:23.138 --> 00:09:28.310\nwhat we're gonna see later in the episode\nis it happens really, really fast.\n\n193\n00:09:28.310 --> 00:09:33.340\nWhen router A goes offline, router B will\nbe back online in less than a second.\n\n194\n00:09:33.340 --> 00:09:35.050\nIt is really fast.\n\n195\n00:09:35.050 --> 00:09:38.800\nIf you're running a continual ping,\nyou'll usually only lose 1 ping, and\n\n196\n00:09:38.800 --> 00:09:39.440\nthat's about it.\n\n197\n00:09:39.440 --> 00:09:40.530\nIt's super fast.\n\n198\n00:09:40.530 --> 00:09:43.220\n&gt;&gt; Now, you mentioned the layer 3\ninformation there that it shares this\n\n199\n00:09:43.220 --> 00:09:45.920\nvirtual IP address, and\nthis is on the LAN, so,\n\n200\n00:09:45.920 --> 00:09:48.350\nwhat is the layer 2 information\nlook like on the local LAN?\n\n201\n00:09:48.350 --> 00:09:49.010\n&gt;&gt; Great question, right?\n\n202\n00:09:49.010 --> 00:09:52.390\nBecause think about what happens\nwhen you ping an address, right?\n\n203\n00:09:52.390 --> 00:09:56.800\nIf I go to ping an address, I have its\nlayer 3 address, right, an IP address.\n\n204\n00:09:56.800 --> 00:10:01.450\nWell, I have to do a ARP broadcast to\nfind out the MAC address to add it\n\n205\n00:10:01.450 --> 00:10:03.670\nto my ARP cache.\n\n206\n00:10:03.670 --> 00:10:05.791\nAnd every router every switch,\nthey all have that.\n\n207\n00:10:05.791 --> 00:10:10.998\nEvery PC, Mac, Windows,\nwhatever ,you've got this ARP cache.\n\n208\n00:10:10.998 --> 00:10:15.181\nSo, if .1 moves from router to another and\nit's got a different MAC address,\n\n209\n00:10:15.181 --> 00:10:16.440\nwhat's gonna happen?\n\n210\n00:10:16.440 --> 00:10:21.750\nWell, I might have cached the old MAC\naddress on my arc table, that's a problem.\n\n211\n00:10:21.750 --> 00:10:26.150\nSo, with HSRP,\nit doesn't just virtualize the IP address,\n\n212\n00:10:26.150 --> 00:10:28.560\nit virtualizes the MAC address also.\n\n213\n00:10:28.560 --> 00:10:31.530\nAnd that way, when 1 router fails,\nthe other 1 takes over.\n\n214\n00:10:31.530 --> 00:10:34.680\nIt's not only taking over the IP,\nit's also taking over the MAC address.\n\n215\n00:10:34.680 --> 00:10:37.685\nThe layer 2 and\nlayer 3 addresses both hand over.\n\n216\n00:10:37.685 --> 00:10:41.880\nSo, on your workstations, they don't\neven have to do on our podcast TN.\n\n217\n00:10:41.880 --> 00:10:44.920\nThat's part of why this is so fast, right?\n\n218\n00:10:44.920 --> 00:10:48.200\nAnd I mentioned like dropping 1 ping,\nwell, dropping a ping,\n\n219\n00:10:48.200 --> 00:10:49.080\nthat's not a big of a deal.\n\n220\n00:10:49.080 --> 00:10:52.888\nIf it's a TCP session, it's usually just\n1 window that has to be re-transmitted.\n\n221\n00:10:52.888 --> 00:10:54.688\nSo, whatever your window\nsize happens to be,\n\n222\n00:10:54.688 --> 00:10:57.747\nthat's what I have to re-transmitted\ncuz you'll lose that in the fail over.\n\n223\n00:10:57.747 --> 00:10:59.902\nIf you're doing UDP,\nit just skips right over it.\n\n224\n00:10:59.902 --> 00:11:03.543\nSo, most end users will never even notice.\n\n225\n00:11:03.543 --> 00:11:06.670\nIn fact, the only device that will really\nnotice this happened are the switches.\n\n226\n00:11:06.670 --> 00:11:09.663\nIf you have a switch,\nit's gonna see the MAC address for\n\n227\n00:11:09.663 --> 00:11:11.902\nthe router jump from one port to another.\n\n228\n00:11:11.902 --> 00:11:14.579\nIt will be like it looks like\nsomebody unplugged that one and\n\n229\n00:11:14.579 --> 00:11:16.940\nplugged it in over here\nin that other port.\n\n230\n00:11:16.940 --> 00:11:20.340\nBut a switch is designed to handle that,\nit will recognize it really fast.\n\n231\n00:11:20.340 --> 00:11:24.000\nAnd there's no spanning tree delay\ncuz we're not actually unplugging or\n\n232\n00:11:24.000 --> 00:11:25.170\nplugging in a cable.\n\n233\n00:11:25.170 --> 00:11:28.160\nThose ports are already passed\nthrough spanning tree, so\n\n234\n00:11:28.160 --> 00:11:30.970\nthe MAC address just jumps over and\nit updates.\n\n235\n00:11:30.970 --> 00:11:33.370\nAnd it's really cool this happens.\n\n236\n00:11:33.370 --> 00:11:35.590\nNow, one thing I forgot to mention\nright at the very beginning\n\n237\n00:11:36.850 --> 00:11:39.830\nI did say that HSSRP is built\ninto most CISCO equipment.\n\n238\n00:11:39.830 --> 00:11:44.320\nWhat I didn't mention was that the reason\nit's built in is because CISCO created.\n\n239\n00:11:44.320 --> 00:11:50.400\nHSSRP is CISCO proprietary, it's their\ntechnology, so if you have Juniper\n\n240\n00:11:50.400 --> 00:11:54.650\nrouters or Ad Tran routers or something\nlike that, They don't run HSRP, right?\n\n241\n00:11:54.650 --> 00:11:55.630\nIt is Cisco-proprietary.\n\n242\n00:11:55.630 --> 00:12:00.840\nThere are some open-source or\nopen-technology-type protocols out there.\n\n243\n00:12:00.840 --> 00:12:03.830\nVRRP is one,\nthe Virtual Router Redundancy Protocol.\n\n244\n00:12:04.910 --> 00:12:06.920\nVRRP is supported by a ton of equipment.\n\n245\n00:12:06.920 --> 00:12:10.670\nIt's also supported by some Cisco\nequipment, not Not every router and\n\n246\n00:12:10.670 --> 00:12:12.580\nactually not very many switches.\n\n247\n00:12:12.580 --> 00:12:16.060\nBut it is supported by some of them and\nso it is out there.\n\n248\n00:12:16.060 --> 00:12:20.570\nFor those going into the CCNP we'll take\na look at the RRP there its not easy.\n\n249\n00:12:20.570 --> 00:12:23.050\n&gt;&gt; Don in your diagram you\nshowed two routers and\n\n250\n00:12:23.050 --> 00:12:26.230\nyou showed a virtual IP address,\nnow with those routers themselves,\n\n251\n00:12:26.230 --> 00:12:30.420\nhow does a router know that hey I'm\nthe one right now, I'm taking the routes.\n\n252\n00:12:30.420 --> 00:12:32.110\nAnd I'm passing them out to the internet.\n\n253\n00:12:32.110 --> 00:12:34.200\nAnd how do they not get confused\nbetween the two of them?\n\n254\n00:12:34.200 --> 00:12:34.910\n&gt;&gt; All right, you know,\n\n255\n00:12:34.910 --> 00:12:39.480\nlet's, this is probably one that's easier\nto explain by seeing than just by telling.\n\n256\n00:12:39.480 --> 00:12:40.560\nSo let me do this.\n\n257\n00:12:40.560 --> 00:12:44.480\nI'm gonna jump over and I'm gonna show\nyou guys a pretty standard scenario for\n\n258\n00:12:44.480 --> 00:12:45.880\ndeploying something like this.\n\n259\n00:12:45.880 --> 00:12:49.020\nWhat I have is a network with\na couple of devices on it.\n\n260\n00:12:49.020 --> 00:12:50.560\nThese are gonna be switches.\n\n261\n00:12:50.560 --> 00:12:53.520\nHSRP is for first hop.\n\n262\n00:12:53.520 --> 00:12:55.290\nSo it's not deployed out on a WAN,\n\n263\n00:12:55.290 --> 00:12:58.220\nit's usually deployed right in\nhouse in your own equipment.\n\n264\n00:12:58.220 --> 00:13:01.310\nAnd the best place for\nusing it is for interVLAN routing.\n\n265\n00:13:01.310 --> 00:13:03.890\nAnd as a result HSRP is\nnormally used on switches.\n\n266\n00:13:03.890 --> 00:13:06.300\nYou can use it on routers though,\nit works perfectly fine on routers.\n\n267\n00:13:06.300 --> 00:13:09.160\nI've done it hundreds of\ntimes out in production.\n\n268\n00:13:09.160 --> 00:13:13.080\nBut on switches I also always\nuse it on switches because\n\n269\n00:13:13.080 --> 00:13:15.140\nVLAN redundancy is so important.\n\n270\n00:13:15.140 --> 00:13:18.840\nRemember with a layer three\nswitch that you've got VLANs, and\n\n271\n00:13:18.840 --> 00:13:20.760\neach VLAN has its own subnet.\n\n272\n00:13:20.760 --> 00:13:22.700\nAnd I need to be about to route\npeople between those VLANs.\n\n273\n00:13:22.700 --> 00:13:26.600\nWell, if that switch fails,\nall my inner VLAN routing dies.\n\n274\n00:13:26.600 --> 00:13:28.360\nMy entire internal network could die.\n\n275\n00:13:28.360 --> 00:13:31.830\nSo having two switches doing inter\nVLAN routing is even better, right?\n\n276\n00:13:31.830 --> 00:13:33.510\nIt gives me a little\nmore flexibility there.\n\n277\n00:13:33.510 --> 00:13:36.000\nSo what I'm gonna do is I'm\ngonna take my two switches.\n\n278\n00:13:36.000 --> 00:13:38.940\nI've got NYCORE1 and NYCORE2.\n\n279\n00:13:38.940 --> 00:13:43.630\nI want these guys to be my main\nswitches for my network, right,\n\n280\n00:13:43.630 --> 00:13:44.750\nNYCORE1 and NYCORE2.\n\n281\n00:13:44.750 --> 00:13:47.880\nAnd so\nthey're gonna be layer three switches.\n\n282\n00:13:47.880 --> 00:13:49.370\nThat are gonna handle a routing.\n\n283\n00:13:49.370 --> 00:13:52.180\nSo, the first thing I'm gonna do is\nI'm gonna issue the IP routing command\n\n284\n00:13:52.180 --> 00:13:54.960\nto make sure that they are actually\ndoing layer three switching, right?\n\n285\n00:13:56.170 --> 00:14:00.300\nThen, I'm gonna assign some IP addresses.\n\n286\n00:14:00.300 --> 00:14:02.713\nI'm gonna get into interface vlan 1, and\n\n287\n00:14:02.713 --> 00:14:06.275\non vlan 1 I'm gonna say\nthis guy is 192.160.0.2.\n\n288\n00:14:08.866 --> 00:14:13.660\nAnd let me just issue a no shut\ndown in case that one shut down.\n\n289\n00:14:13.660 --> 00:14:15.960\nAnd so that one's set up for vlan 1.\n\n290\n00:14:15.960 --> 00:14:21.242\nAnd then maybe I'll get into vlan 2 and\nI'll just say IP address 192.168.\n\n291\n00:14:21.242 --> 00:14:22.340\nwe'll do 2.2 for that one.\n\n292\n00:14:23.880 --> 00:14:24.380\nWhoops.\n\n293\n00:14:26.000 --> 00:14:28.460\nAnd we'll throw in IP address on that one.\n\n294\n00:14:29.750 --> 00:14:30.560\nNow, okay.\n\n295\n00:14:30.560 --> 00:14:36.440\nAnd so now I've got two VLANs, and\nI've got some IPs assigned to them, right?\n\n296\n00:14:36.440 --> 00:14:40.260\nAnd I'm in layer three switching mode,\nso if I do show ip route,\n\n297\n00:14:41.950 --> 00:14:44.812\nI should see those guys in my\nrouting table, there's 192.168.0.\n\n298\n00:14:44.812 --> 00:14:51.710\n192.168.2's not showing up, because I\ndon't have any interfaces in that VLAN And\n\n299\n00:14:51.710 --> 00:14:54.520\nif there's no interfaces in the VLAN that\nare up, the interface is gonna stay down.\n\n300\n00:14:54.520 --> 00:14:58.090\nSo I'll have to create a trunk port\nto actually get that to come up,\n\n301\n00:14:58.090 --> 00:15:01.150\nwhich we could actually do easy enough.\n\n302\n00:15:01.150 --> 00:15:03.370\nNYCORE2, I've got two connections to.\n\n303\n00:15:03.370 --> 00:15:05.110\nSo let me just get into one of those.\n\n304\n00:15:06.440 --> 00:15:09.080\nAnd we'll take port 23.\n\n305\n00:15:09.080 --> 00:15:12.300\nAnd we'll say switchport mode trunk.\n\n306\n00:15:14.060 --> 00:15:17.180\nWhoops, I need to determine\nhow I need to encapsulate it.\n\n307\n00:15:17.180 --> 00:15:19.670\nSo I'll say switchboard\ntrunk encapsulation dot1q.\n\n308\n00:15:19.670 --> 00:15:23.490\nAnd then we'll put it in trunk mode,\nthere we go.\n\n309\n00:15:23.490 --> 00:15:26.060\nLet me just make sure it's not shut down.\n\n310\n00:15:26.060 --> 00:15:27.690\nSo that one's gonna start trunking.\n\n311\n00:15:27.690 --> 00:15:30.250\nAs soon as that trunks my\nVLAN 2 interface'll come up.\n\n312\n00:15:30.250 --> 00:15:32.040\nSo that'll be fine.\n\n313\n00:15:32.040 --> 00:15:33.190\nSo this guy is set up.\n\n314\n00:15:33.190 --> 00:15:34.890\nLet me do the same thing over on NYCORE2.\n\n315\n00:15:34.890 --> 00:15:38.730\nNow, I am gonna do it\na little bit different.\n\n316\n00:15:38.730 --> 00:15:40.590\nLet me do a show IP interface brief.\n\n317\n00:15:40.590 --> 00:15:45.160\nAnd I'm gonna exclude any\nunassigned interfaces.\n\n318\n00:15:45.160 --> 00:15:50.118\nThere, so we can see the two IP addresses\nthat I've got assigned on this NYCORE1.\n\n319\n00:15:50.118 --> 00:15:53.760\nAnd I'm gonna to go over to NYCORE2 and\nbasically repeat that same process.\n\n320\n00:15:53.760 --> 00:15:56.823\nRight, so\nI'm gonna get into configuration.\n\n321\n00:15:56.823 --> 00:15:58.809\nI'll do IP routing.\n\n322\n00:15:58.809 --> 00:16:04.327\nI'll do interface vlan 1,\nand assign 192.168.0.3.\n\n323\n00:16:04.327 --> 00:16:06.114\nI'm not assigning the same IP here.\n\n324\n00:16:06.114 --> 00:16:10.349\nAnd the reason is, each router in\nHSRP needs its own unique IP, so\n\n325\n00:16:10.349 --> 00:16:11.900\nwe can still manage it.\n\n326\n00:16:11.900 --> 00:16:15.350\nIf they don't have a unique IP,\nhow can I SSH into that switch?\n\n327\n00:16:15.350 --> 00:16:16.250\nHow can I control a switch?\n\n328\n00:16:16.250 --> 00:16:18.150\nHow can the switches\neven talk to each other,\n\n329\n00:16:18.150 --> 00:16:19.830\nif they're using the same IP address?\n\n330\n00:16:19.830 --> 00:16:21.050\nThey can't, right?\n\n331\n00:16:21.050 --> 00:16:23.300\nSo you still need a unique IP on each.\n\n332\n00:16:23.300 --> 00:16:27.805\nAnd I'm doing .2 and .3, just because in\nmy mind it's easy to keep that straight.\n\n333\n00:16:27.805 --> 00:16:31.657\n.1 is the gateway, .2 and\n.3 are the two routers, right?\n\n334\n00:16:31.657 --> 00:16:34.940\nBut I could pick whatever IPs I want,\nas long as they're in that same network.\n\n335\n00:16:34.940 --> 00:16:38.459\nAll right, so I'll get that one set.\n\n336\n00:16:38.459 --> 00:16:42.128\nLet me get into interface\nvlan 2 where we said,\n\n337\n00:16:42.128 --> 00:16:47.681\nIP address 192.168.2.3, and\nwe'll get that one signed.\n\n338\n00:16:47.681 --> 00:16:54.502\nAnd then we'll get into that interface and\n\n339\n00:16:54.502 --> 00:16:59.628\nwe'll set our encapsulation.\n\n340\n00:16:59.628 --> 00:17:04.320\nAnd we'll turn on trunking there,\nall right.\n\n341\n00:17:04.320 --> 00:17:10.474\nSo now if I do a show IP interface\nbrief and I exclude any unassigned.\n\n342\n00:17:10.474 --> 00:17:14.160\nI'll see those two IPs 192.168.0.3 and\n192.168.2.3,\n\n343\n00:17:14.160 --> 00:17:17.150\nwhich still hasn't come up, but\nwe'll see what happens later.\n\n344\n00:17:19.070 --> 00:17:21.918\nAll right, so\nnow I've got .2 and .3, right.\n\n345\n00:17:21.918 --> 00:17:26.401\nThe next step is,\nI'm gonna tell these guys that .1 exists.\n\n346\n00:17:26.401 --> 00:17:30.023\nBut that .1 is supposed to\nbe shared between the 2, so\n\n347\n00:17:30.023 --> 00:17:34.736\nthat they both can support that address\nand have it bounce between them.\n\n348\n00:17:34.736 --> 00:17:39.657\nAnd this is where we get to Wes' question,\nwhich is when they start to share it,\n\n349\n00:17:39.657 --> 00:17:42.017\nare they both active at the same time?\n\n350\n00:17:42.017 --> 00:17:43.910\nAnd the answer is no, right?\n\n351\n00:17:43.910 --> 00:17:48.210\nWhen you have two switches or\ntwo routers, or even a router and\n\n352\n00:17:48.210 --> 00:17:49.590\na switch, you can mix and match.\n\n353\n00:17:49.590 --> 00:17:52.441\nThere's not really a lot of use case\nscenarios for that but you can do it.\n\n354\n00:17:52.441 --> 00:17:55.812\nWhen they come up,\nonly one person can control the IP and\n\n355\n00:17:55.812 --> 00:18:00.290\nthe Mac address at a time,\nif they both do it's gonna reek havoc.\n\n356\n00:18:00.290 --> 00:18:04.390\nSo one of them is gonna go\ninto what's called active.\n\n357\n00:18:04.390 --> 00:18:07.920\nIn the active mode that means they\nactively control the IP address and\n\n358\n00:18:07.920 --> 00:18:09.030\nthe Mac address, and\n\n359\n00:18:09.030 --> 00:18:13.020\ncommunications are flowing through\nthe system at that moment, all right.\n\n360\n00:18:13.020 --> 00:18:15.728\nThe other device is gonna go into standby,\n\n361\n00:18:15.728 --> 00:18:20.935\nstandby means we're not in control of\nthe IP right now, but we're just waiting.\n\n362\n00:18:20.935 --> 00:18:26.420\nAnd if the active guy ever fails, we're\nready to jump right back in and take over.\n\n363\n00:18:26.420 --> 00:18:30.050\nAnd the reason I mention that now is\nthe command I use to configure this\n\n364\n00:18:30.050 --> 00:18:34.140\nis the standby command, not HSRP,\nso it gets a little confusing.\n\n365\n00:18:34.140 --> 00:18:37.650\nSo to get this turned on what I'm gonna\ndo is I'm gonna go up here to core 1.\n\n366\n00:18:37.650 --> 00:18:40.700\nAnd on core 1,\nI'm gonna get into my configuration,\n\n367\n00:18:40.700 --> 00:18:43.860\nI'm gonna get into interface vlan 1.\n\n368\n00:18:43.860 --> 00:18:47.250\nAnd right now,\nif I look at the configuration on vlan 1,\n\n369\n00:18:47.250 --> 00:18:50.086\nall I've done is assign an IP address,\nright?\n\n370\n00:18:50.086 --> 00:18:54.999\nSo I'm gonna add another line here,\nand I'm gonna say, standby and\n\n371\n00:18:54.999 --> 00:18:59.720\nI'm gonna follow that up with\na standby group number, okay?\n\n372\n00:18:59.720 --> 00:19:04.232\nNow the group number by default\nis between 0 and 255, right?\n\n373\n00:19:04.232 --> 00:19:07.560\nI'm just gonna do group number 1,\nso standby 1.\n\n374\n00:19:07.560 --> 00:19:12.360\nThe group number is how we tell one\ninstance of HSRP apart from another.\n\n375\n00:19:12.360 --> 00:19:16.870\nIf I have ten VLAN, I might want to\nrun ten separate instances of HSRP,\n\n376\n00:19:17.910 --> 00:19:20.760\nor I might just wanna run one instance\nthat covers all the interfaces.\n\n377\n00:19:20.760 --> 00:19:21.965\nIt's up to me how I wanna do it, but\n\n378\n00:19:21.965 --> 00:19:23.640\nwe gotta have a group\nnumber to tell them apart.\n\n379\n00:19:23.640 --> 00:19:28.344\nSo I'm just gonna do standby 1,\nand then after that we say, IP and\n\n380\n00:19:28.344 --> 00:19:30.630\nwhat the shared address is.\n\n381\n00:19:30.630 --> 00:19:36.080\nSo the shared address is gonna\nbe 192.168.0.1, all right?\n\n382\n00:19:36.080 --> 00:19:39.710\nThat one command right there,\njust configured HSRP.\n\n383\n00:19:39.710 --> 00:19:41.682\nI turned it on, it's up and it's running.\n\n384\n00:19:41.682 --> 00:19:44.360\nHSRP is super easy to configure.\n\n385\n00:19:44.360 --> 00:19:47.920\nIn fact, all I've gotta do now is\ngo over to the other switch and\n\n386\n00:19:47.920 --> 00:19:50.530\nissue the same exact command.\n\n387\n00:19:50.530 --> 00:19:54.536\nOn the other switch,\nI'm gonna come in here,\n\n388\n00:19:54.536 --> 00:19:59.775\nget into interface VLAN 1 and\nI'm gonna say, standby, and\n\n389\n00:19:59.775 --> 00:20:05.035\nthe group number that I pick,\nIP 192.168.0.1.\n\n390\n00:20:05.035 --> 00:20:06.529\nThe same IP, right?\n\n391\n00:20:06.529 --> 00:20:09.793\nSo I'm assigning that IP and letting\nit know that hey, this one's shared,\n\n392\n00:20:09.793 --> 00:20:11.940\nyou're not the only one with it.\n\n393\n00:20:11.940 --> 00:20:15.287\nAnd so when I run that,\nit's going to talk to the other device.\n\n394\n00:20:15.287 --> 00:20:17.900\nNow if you look,\nI haven't run this command yet.\n\n395\n00:20:17.900 --> 00:20:21.770\nI haven't pressed Enter, but if you look\nup here at NYCORE1, look what happened.\n\n396\n00:20:21.770 --> 00:20:24.443\nI got a little message, and it says,\n\n397\n00:20:24.443 --> 00:20:29.977\nHSRP-STATECHANGE: Vlan1 Group 1\nstate Standby to Active, all right.\n\n398\n00:20:29.977 --> 00:20:31.670\nWhat happened?\n\n399\n00:20:31.670 --> 00:20:34.680\nWell, there's actually five\nstates that we go through,\n\n400\n00:20:34.680 --> 00:20:35.950\nand I wish I could show them to you.\n\n401\n00:20:35.950 --> 00:20:38.980\nBut they happen so\nfast that they're not normally visible.\n\n402\n00:20:38.980 --> 00:20:41.480\nAnd so\nall I'm seeing here is the last one.\n\n403\n00:20:41.480 --> 00:20:45.220\nSo when you first turn on HSRP,\nyou flip the switch and it kicks on.\n\n404\n00:20:46.380 --> 00:20:48.350\nYou move into a state that's\ncalled initializing, right?\n\n405\n00:20:48.350 --> 00:20:52.633\nIn the logs, it's actually just written as\ninitial, but it's short for initializing.\n\n406\n00:20:52.633 --> 00:20:56.230\nSo that means HSRP is turning on,\nit's just starting the service.\n\n407\n00:20:56.230 --> 00:21:00.850\nAfter that it goes into listen mode,\nin listen mode,\n\n408\n00:21:00.850 --> 00:21:03.870\nwe're listening to see if somebody\nelse is already running HSRP.\n\n409\n00:21:03.870 --> 00:21:07.478\nIf somebody else is already running HSRP,\nI don't wanna mess with them, or maybe I\n\n410\n00:21:07.478 --> 00:21:10.797\ndo, there are some ways we can configure\nit where they mess with each other.\n\n411\n00:21:10.797 --> 00:21:13.460\nSo we need to listen and\nsee what's out there.\n\n412\n00:21:13.460 --> 00:21:16.835\nOnce we've got that,\nwe move into speak mode, okay?\n\n413\n00:21:16.835 --> 00:21:19.480\nIf we've found somebody else out there,\nwe're gonna speak to them.\n\n414\n00:21:19.480 --> 00:21:20.600\nWe're gonna talk to them and tell them\u007f,\n\n415\n00:21:20.600 --> 00:21:24.420\nhey, we're ready to jump into HSRP, can\nyou tell me what your configuration is, so\n\n416\n00:21:24.420 --> 00:21:27.340\nI can compare it to mine and\nsee what needs to happen, right?\n\n417\n00:21:27.340 --> 00:21:31.520\nIf nobody else is out there, then you\nstill speak, and you say, hey everybody?\n\n418\n00:21:31.520 --> 00:21:34.715\nI don't think any of you are running HSRP\nbut just in case, I'm about to kick it on.\n\n419\n00:21:34.715 --> 00:21:36.984\nSo speak now or forever hold your peace.\n\n420\n00:21:36.984 --> 00:21:40.030\nSo that's what happens in the speak phase.\n\n421\n00:21:40.030 --> 00:21:42.640\nAfter speak, we go to standby.\n\n422\n00:21:42.640 --> 00:21:46.650\nStandby means I'm ready to go active,\nbut I haven't gone active yet.\n\n423\n00:21:46.650 --> 00:21:49.850\nI'm waiting either because\nI'm all by myself, or\n\n424\n00:21:49.850 --> 00:21:51.359\nbecause somebody else is already active.\n\n425\n00:21:52.410 --> 00:21:56.010\nAnd if nobody else is active,\nthen we move to the last phase.\n\n426\n00:21:56.010 --> 00:21:59.580\nWe move from standby to active,\nand that's what I saw right here,\n\n427\n00:21:59.580 --> 00:22:03.720\nis that nobody else was running HSRP,\nso we move from standby to active.\n\n428\n00:22:03.720 --> 00:22:05.520\nThis router is now active for\n\n429\n00:22:05.520 --> 00:22:10.610\nthe MAC address and for\nthe IP address for 192.168.0.1.\n\n430\n00:22:10.610 --> 00:22:14.030\nSo down here on NYCORE2\nwhen I press Enter.\n\n431\n00:22:14.030 --> 00:22:16.080\nIt's gonna go through those five states.\n\n432\n00:22:16.080 --> 00:22:19.120\nIt's gonna through initializing,\nwhen it turns on.\n\n433\n00:22:19.120 --> 00:22:23.413\nIt's gonna go into listening and\nit's gonna hear NYCORE1.\n\n434\n00:22:23.413 --> 00:22:26.581\nIt's gonna go into speaking,\nit's gonna talk to NYCORE1 and\n\n435\n00:22:26.581 --> 00:22:30.240\nthen NYCORE's gonna say, hey,\nI'm already running HSRP.\n\n436\n00:22:30.240 --> 00:22:32.525\nHere's the virtual MAC\naddress that I'm using.\n\n437\n00:22:32.525 --> 00:22:36.230\nAnd I've got the IP, I'm up and going,\nso you don't really need to do anything.\n\n438\n00:22:36.230 --> 00:22:39.978\nAnd so then we'll move into standby,\nand we'll stop.\n\n439\n00:22:39.978 --> 00:22:41.680\nThis one will stop in standby.\n\n440\n00:22:41.680 --> 00:22:46.700\nNo need to go active, because the other\nrouter is already active, and\n\n441\n00:22:46.700 --> 00:22:47.810\nI can see that message right there.\n\n442\n00:22:47.810 --> 00:22:50.290\nI just went from Speak to Standby.\n\n443\n00:22:50.290 --> 00:22:56.487\nSo this guy's now in Standby mode,\nand it's in business, okay?\n\n444\n00:22:56.487 --> 00:23:01.024\nRight now, I'm running HSRP,\n192.168.0.1 is a virtual IP address.\n\n445\n00:23:01.024 --> 00:23:04.120\nIt's got a virtual MAC address tied to it.\n\n446\n00:23:04.120 --> 00:23:06.103\nAnd now I can go to any\nof my work stations and\n\n447\n00:23:06.103 --> 00:23:07.824\nI can set .1 as my default gateway.\n\n448\n00:23:07.824 --> 00:23:12.550\nAnd I'm gonna reach right out and hit it,\nand reach out to the network, right?\n\n449\n00:23:12.550 --> 00:23:14.060\nLet's see if that works.\n\n450\n00:23:14.060 --> 00:23:18.064\nSo I'm gonna jump over to this\nother switch that I've got.\n\n451\n00:23:18.064 --> 00:23:19.796\nThis guy is just access switch,\n\n452\n00:23:19.796 --> 00:23:22.952\nI'm gonna use it kinda like\na host on the network, right?\n\n453\n00:23:22.952 --> 00:23:27.581\nSo let me just enable, I'm not gonna\nuse it as a layer three device,\n\n454\n00:23:27.581 --> 00:23:30.110\njust a regular old layer two device.\n\n455\n00:23:30.110 --> 00:23:32.210\nSo I'm gonna get into interface vlan 1,\n\n456\n00:23:32.210 --> 00:23:34.370\nI'll give it ip address 192.168.0.10,\nright?\n\n457\n00:23:34.370 --> 00:23:40.107\nThat's a good IP, as good as any.\n\n458\n00:23:40.107 --> 00:23:43.086\nI'll bring that interface up, and\n\n459\n00:23:43.086 --> 00:23:48.870\nthen I'm gonna do a ip\ndefault-gateway 192.168.0.1.\n\n460\n00:23:48.870 --> 00:23:54.873\nNow remember, NYCORE1 is actually .2,\nand NYCORE2 is actually .3.\n\n461\n00:23:54.873 --> 00:23:59.848\n.1 is a virtual, it's fake, it's floating\nout there in the middle of nowhere, right?\n\n462\n00:23:59.848 --> 00:24:02.979\nAnd that's what I'm assigning\nas my default gateway.\n\n463\n00:24:02.979 --> 00:24:06.342\nAnd now, if I try and ping some IPs,\nright, let me ping each of these,\n\n464\n00:24:06.342 --> 00:24:08.289\n192.168.0.1, all right?\n\n465\n00:24:08.289 --> 00:24:10.878\nI'm gonna do an arp broadcast to find it,\nand\n\n466\n00:24:10.878 --> 00:24:15.053\nthen I'm gonna add it to my arp cache and\nthen I'm gonna ping it, right?\n\n467\n00:24:15.053 --> 00:24:16.918\nSo there's my pings,\nthey all went through.\n\n468\n00:24:16.918 --> 00:24:21.011\nI'm gonna ping .2, and\nI'm gonna ping .3, all right?\n\n469\n00:24:21.011 --> 00:24:23.966\nI can get to each one of them,\nI got five successful pings on all three.\n\n470\n00:24:23.966 --> 00:24:29.840\nAnd if I do a show arp and look at my\ntable, right, let's look at we found.\n\n471\n00:24:29.840 --> 00:24:34.985\n.2 has this MAC address,\n.3 has this MAC address, but\n\n472\n00:24:34.985 --> 00:24:41.710\n.1, .1 is that virtual, and\nlook at that MAC address right there.\n\n473\n00:24:41.710 --> 00:24:43.910\nAll right,\nit doesn't match either of them.\n\n474\n00:24:43.910 --> 00:24:45.070\nAnd that's important,\n\n475\n00:24:45.070 --> 00:24:48.630\nbecause if it matched one of them,\nwhen that router failed,\n\n476\n00:24:48.630 --> 00:24:51.820\nwe would have to purge the arp cache\nbefore people would find the other one.\n\n477\n00:24:51.820 --> 00:24:54.230\nIt's gotta have its own,\nunique, separate MAC address.\n\n478\n00:24:55.370 --> 00:24:57.650\nAll right, now let's talk a little\nbit about that MAC address.\n\n479\n00:24:57.650 --> 00:25:01.483\nThe MAC address, it kinda looks somewhat\nrandom, but it really isn't, okay.\n\n480\n00:25:01.483 --> 00:25:06.830\nWith HSRP, what's not random, I guess,\n\n481\n00:25:06.830 --> 00:25:13.218\nis this whole first section of\nthe MAC address, 0000.0c07.ac.\n\n482\n00:25:13.218 --> 00:25:17.050\nIf you're sitting there at home and\nyou fire up your Cisco router or\n\n483\n00:25:17.050 --> 00:25:21.380\nyour Cisco switch, and\nyou turn on HSRP the same way that I did,\n\n484\n00:25:21.380 --> 00:25:23.550\nyour MAC address is gonna start\nwith those same characters.\n\n485\n00:25:24.710 --> 00:25:27.450\nThe only part that might be different\nis right here at the end, and\n\n486\n00:25:27.450 --> 00:25:29.190\nthe odds are it's the same too.\n\n487\n00:25:29.190 --> 00:25:34.160\nAnd the reason is, with HSRP,\nthe MAC address always uses\n\n488\n00:25:34.160 --> 00:25:36.610\nthis first section of the MAC address,\nthat's always set.\n\n489\n00:25:36.610 --> 00:25:40.390\nYou can recognize HSRP on a network\njust by looking at a sniffer log\n\n490\n00:25:40.390 --> 00:25:41.860\nbecause of that MAC address.\n\n491\n00:25:41.860 --> 00:25:46.230\nAnd the last two digits or\ntwo characters, that's the group number.\n\n492\n00:25:46.230 --> 00:25:48.660\nI did group number 1,\nand so I have a 1 there.\n\n493\n00:25:48.660 --> 00:25:50.950\nIf I had done group number 5,\nit would be 05.\n\n494\n00:25:50.950 --> 00:25:54.523\nIf I had done group number 16,\nit would be 0F.\n\n495\n00:25:54.523 --> 00:25:56.410\nRight, I had to go hexadecimal.\n\n496\n00:25:56.410 --> 00:26:00.475\nI'm not gonna go above 16 cuz it\ngets out of my hexadecimal skills.\n\n497\n00:26:00.475 --> 00:26:06.045\nBut [LAUGH] it is hexadecimal, and\nso, you can go 0 to 255, right?\n\n498\n00:26:06.045 --> 00:26:08.573\nYou'd get 256 different values\nthat you can have in there, and\n\n499\n00:26:08.573 --> 00:26:10.065\nthat's the group number.\n\n500\n00:26:10.065 --> 00:26:13.949\nSo if you're sitting at home and you\nconfigure HSRP, and you do group number 1,\n\n501\n00:26:13.949 --> 00:26:16.595\nyou'll get the same exact\nMAC address that I just did.\n\n502\n00:26:16.595 --> 00:26:19.949\nAnd if you do group number 55,\nand I do group number 55,\n\n503\n00:26:19.949 --> 00:26:23.050\nwe'll have the same\nexact MAC address again.\n\n504\n00:26:23.050 --> 00:26:27.390\nAll right, so that MAC address isn't\nrandom, not random at all, right?\n\n505\n00:26:27.390 --> 00:26:29.640\nThis part is always the same,\n\n506\n00:26:29.640 --> 00:26:33.525\nand then the last part is always the group\nnumber, that's how it always is.\n\n507\n00:26:33.525 --> 00:26:36.955\n&gt;&gt; Now, Don, with the protocols here,\nI know that Cisco, just like things like\n\n508\n00:26:36.955 --> 00:26:41.515\nIGRP, they maintain it, and then it\ngoes to EIGRP and has enhancements.\n\n509\n00:26:41.515 --> 00:26:43.200\nAre we doing the same thing\nhere with this protocol?\n\n510\n00:26:43.200 --> 00:26:45.658\n&gt;&gt; [LAUGH] Yeah, so,\nwhen you turn on HSRP, I guess,\n\n511\n00:26:45.658 --> 00:26:48.305\nlet me clarify the statement\nI just made a second ago.\n\n512\n00:26:48.305 --> 00:26:50.005\nWhich is, if you configure HSRP at home,\n\n513\n00:26:50.005 --> 00:26:52.440\nyou're gonna have the same\nMAC address as me.\n\n514\n00:26:52.440 --> 00:26:54.580\nWell, there's actually a chance\nyou might not [LAUGH].\n\n515\n00:26:54.580 --> 00:26:57.790\nAnd so, it comes down to the version,\nall right?\n\n516\n00:26:57.790 --> 00:26:59.780\nIf you configure it exactly\nthe way that I did, yes,\n\n517\n00:26:59.780 --> 00:27:01.430\nyou will get the same MAC address I did.\n\n518\n00:27:01.430 --> 00:27:05.220\nAll right, but there's actually two\nversions of HSRP, there's version 1 and\n\n519\n00:27:05.220 --> 00:27:06.080\nversion 2.\n\n520\n00:27:06.080 --> 00:27:10.180\nWhen you turn on HSRP, you're gonna be\nin version 1 by default, all right.\n\n521\n00:27:10.180 --> 00:27:13.420\nAnd that's what I'm in, I'm in version 1,\nand that's the MAC address that I got.\n\n522\n00:27:13.420 --> 00:27:17.214\nIf you turn it on though, you might\nchoose to move it into version 2.\n\n523\n00:27:17.214 --> 00:27:19.775\nAnd in version 2,\nthe MAC address is different.\n\n524\n00:27:19.775 --> 00:27:21.960\nOkay now,\nwhy is the MAC address is different?\n\n525\n00:27:21.960 --> 00:27:23.740\nThe MAC address is different\nbecause of the group number.\n\n526\n00:27:23.740 --> 00:27:27.190\nThis only allowed for 255 group numbers.\n\n527\n00:27:27.190 --> 00:27:29.650\nWell, what if I have 4,000 VLANs?\n\n528\n00:27:29.650 --> 00:27:31.780\nYou can do that, right?\n\n529\n00:27:31.780 --> 00:27:34.318\nMost Cisco switches support\nup to 4,095 VLANs, right?\n\n530\n00:27:34.318 --> 00:27:38.961\nSo, if you have 4,095 VLANs, you can't\nhave a separate HSRP instance for\n\n531\n00:27:38.961 --> 00:27:39.664\nevery one.\n\n532\n00:27:39.664 --> 00:27:41.270\nYou probably wouldn't want that anyway.\n\n533\n00:27:41.270 --> 00:27:44.510\nBut there's some ISPs and\nstuff out there that do want that, right?\n\n534\n00:27:44.510 --> 00:27:50.150\nAnd so, with this, we can only have 256\ndifferent HSRP groups, 0 through 255.\n\n535\n00:27:50.150 --> 00:27:54.860\nWith HSRP version 2, they increased\nthe size of the group number.\n\n536\n00:27:54.860 --> 00:27:57.950\nBut the problem was, in the old MAC\naddress, we only had those two characters,\n\n537\n00:27:57.950 --> 00:28:00.350\nwhich just wasn't enough,\nso they had to make more.\n\n538\n00:28:00.350 --> 00:28:01.867\nRight, let me flip mine over to version 2,\n\n539\n00:28:01.867 --> 00:28:04.170\nand I'll show you what it\nlooks like in version 2.\n\n540\n00:28:04.170 --> 00:28:07.806\nSo if I go back up to NYCORE1 here, right,\n\n541\n00:28:07.806 --> 00:28:12.900\nand I issued standby 1 ip blah,\nblah, blah, right?\n\n542\n00:28:12.900 --> 00:28:19.400\nSo if I wanna change that version, what\nwe can do is we can say standby version,\n\n543\n00:28:19.400 --> 00:28:23.130\nand then you can specify version 1 or\nversion 2.\n\n544\n00:28:23.130 --> 00:28:25.316\nRight, version 1's the default so\nyou don't need to run that one,\n\n545\n00:28:25.316 --> 00:28:26.860\nI'll do standby version 2.\n\n546\n00:28:26.860 --> 00:28:31.580\nOkay, and what's gonna happen, I just\nwent from Active down to Initialize,\n\n547\n00:28:31.580 --> 00:28:35.310\ninto the tear-down HSRP,\nall the way to the bottom and\n\n548\n00:28:35.310 --> 00:28:38.170\nrebuild it back up because\nof the new MAC address.\n\n549\n00:28:38.170 --> 00:28:39.730\nAnd my other router,\nif I'm not fast enough,\n\n550\n00:28:39.730 --> 00:28:41.780\nis gonna get angry at me, so\nlet me jump over to the other one.\n\n551\n00:28:41.780 --> 00:28:45.810\nSee, the other one is actually\ngoing from Standby to Active now.\n\n552\n00:28:45.810 --> 00:28:47.470\nIt views the other one as failed.\n\n553\n00:28:47.470 --> 00:28:50.338\nSo I need to come in here and\ndo the same thing, standby version 2.\n\n554\n00:28:50.338 --> 00:28:53.430\nSee, there's some duplicate\naddresses coming up.\n\n555\n00:28:53.430 --> 00:28:55.020\nIt's wreaking all sorts of havoc.\n\n556\n00:28:55.020 --> 00:28:57.680\nYou need to make sure your version\nnumber's the same between your equipment.\n\n557\n00:28:57.680 --> 00:29:01.800\nSo in my case,\nI've got version 2 now on both sides.\n\n558\n00:29:01.800 --> 00:29:03.640\nAll right, so\nthey're gonna get happy again.\n\n559\n00:29:04.710 --> 00:29:07.150\nAnd this one is now initializing, so\n\n560\n00:29:07.150 --> 00:29:09.380\nwe'll give that a second\nto kind of sort itself out.\n\n561\n00:29:09.380 --> 00:29:11.087\nInitializing takes a little bit of time.\n\n562\n00:29:11.087 --> 00:29:16.750\nBut once that's done, then we should\nsee that 192.168.0.1 exists again.\n\n563\n00:29:16.750 --> 00:29:18.780\nAnd it's up, and it's happy now.\n\n564\n00:29:18.780 --> 00:29:20.960\nI'm getting some duplicate\nMAC address warnings,\n\n565\n00:29:20.960 --> 00:29:23.800\nthose will clear up as soon as\nthe other one flips over to standby.\n\n566\n00:29:25.050 --> 00:29:27.670\nWhich it should have done by now,\nand it has, good, all right.\n\n567\n00:29:27.670 --> 00:29:30.630\nSo, I can see right here,\nI went from Speak to Standby, so\n\n568\n00:29:30.630 --> 00:29:32.600\neverything should be cleared now,\nall right?\n\n569\n00:29:32.600 --> 00:29:35.430\nSo let's go test that real\nquick from NYACCESS1.\n\n570\n00:29:36.820 --> 00:29:41.407\nSo I'm gonna repeat my pings,\nnow remember this MAC address up here,\n\n571\n00:29:41.407 --> 00:29:45.309\n0000.0c07.ac, right, that's gonna change.\n\n572\n00:29:45.309 --> 00:29:52.306\nSo now I'm gonna ping 192.168.0.1,\nso I'm gonna ping it again.\n\n573\n00:29:52.306 --> 00:29:58.095\nI can ping it, and if I do a show arp now,\nthat is different, right?\n\n574\n00:29:58.095 --> 00:30:01.033\nLet me see if I can get both on\nthe screen at the same time.\n\n575\n00:30:01.033 --> 00:30:03.707\nIt was 00000c.\n\n576\n00:30:03.707 --> 00:30:05.328\nSo that's all the same, right?\n\n577\n00:30:05.328 --> 00:30:06.273\nThat's c for Cisco.\n\n578\n00:30:06.273 --> 00:30:07.643\nThat's how I remember that one.\n\n579\n00:30:07.643 --> 00:30:12.782\nAnd then instead of 07,\nit's now got 9f.f0.\n\n580\n00:30:12.782 --> 00:30:16.850\nSo 07.ac became 9f.f0.\n\n581\n00:30:16.850 --> 00:30:21.341\nWell what it actually\ndid is it became 9f.f,\n\n582\n00:30:21.341 --> 00:30:28.713\nthat is the common MAC address for\nHSRP version 2, 0000.0c9f.f,\n\n583\n00:30:28.713 --> 00:30:34.380\nand then these three digits\nare my group number now.\n\n584\n00:30:34.380 --> 00:30:38.453\nNow I've got three hexadecimal digits\navailable for the group number,\n\n585\n00:30:38.453 --> 00:30:41.066\nwhich means I can have 0 through 4,095.\n\n586\n00:30:41.066 --> 00:30:47.390\nI get 4,096 possible group numbers which\nkind of matches up with some VLAN numbers.\n\n587\n00:30:47.390 --> 00:30:50.460\nI think it's more than just a coincidence,\nright, that was the plan.\n\n588\n00:30:50.460 --> 00:30:54.270\nAnd so now, on a switch,\nif I'm in version 2, and\n\n589\n00:30:54.270 --> 00:30:58.820\nI go to configure standby, right,\nlet's say I want to do it on vlan 2.\n\n590\n00:30:58.820 --> 00:31:00.285\nAnd so I say standby.\n\n591\n00:31:00.285 --> 00:31:04.042\nWhen I do my group number,\nshoot, I changed interfaces.\n\n592\n00:31:04.042 --> 00:31:07.470\nI would need to do standby version 2,\nthere we go.\n\n593\n00:31:07.470 --> 00:31:10.400\nStandby, and I do my group number.\n\n594\n00:31:10.400 --> 00:31:14.558\nNow the group number is 0 through 4,095,\nokay.\n\n595\n00:31:14.558 --> 00:31:17.900\nNow I didn't mean to point it out,\nbut accidentally, I did.\n\n596\n00:31:17.900 --> 00:31:21.880\nWhen you change the version number of\nHSRP, it's on a per interface basis.\n\n597\n00:31:21.880 --> 00:31:25.020\nSo I changed it on the vlan\n1 interface a moment ago.\n\n598\n00:31:25.020 --> 00:31:27.389\nThis interface, vlan 2,\nwas still version 1, right, so\n\n599\n00:31:27.389 --> 00:31:28.834\nyou have to change it per interface.\n\n600\n00:31:28.834 --> 00:31:30.402\nBut once you're in version 2,\n\n601\n00:31:30.402 --> 00:31:33.841\nthat's the main difference of\nthe larger group numbers, all right.\n\n602\n00:31:33.841 --> 00:31:38.757\nSo at this point, HSRP is up and running,\nI've got this one virtual IP that's\n\n603\n00:31:38.757 --> 00:31:43.760\nfloating between the two switches, and\none is ready to take over for the other.\n\n604\n00:31:43.760 --> 00:31:46.170\nIf one fails,\nthe other one's gonna jump in, and\n\n605\n00:31:46.170 --> 00:31:48.850\nwe've actually got the magic\nof HSRP up and running.\n\n606\n00:31:48.850 --> 00:31:52.680\nThe configuration really\nboiled down to one command,\n\n607\n00:31:52.680 --> 00:31:54.620\ntwo if you wanted to get fun with it,\nright?\n\n608\n00:31:54.620 --> 00:32:01.800\nSo if I do a show run for interface vlan\n1, technically, the only command I needed\n\n609\n00:32:01.800 --> 00:32:07.000\nwas this guy right here, standby,\ngroup number, IP, shared IP.\n\n610\n00:32:07.000 --> 00:32:10.550\nAnd then I added that version number also,\nnot necessarily for\n\n611\n00:32:10.550 --> 00:32:11.950\nme cuz I've only got one group.\n\n612\n00:32:11.950 --> 00:32:15.706\nBut if I needed more than 256 groups,\nI would need that command in there also.\n\n613\n00:32:15.706 --> 00:32:18.637\nNow there's a lot more to configure with\nHSRP, and we actually haven't even seen\n\n614\n00:32:18.637 --> 00:32:21.555\nthe failover yet, but Wes has given\nme the evil eye that I'm out of time.\n\n615\n00:32:21.555 --> 00:32:24.566\nSo we're probably gonna need to go onto\na part two on this cuz I need to show you\n\n616\n00:32:24.566 --> 00:32:27.105\nguys the actual failover,\nthat's kind of important.\n\n617\n00:32:27.105 --> 00:32:29.655\nBut there's also some\nmore advanced settings\n\n618\n00:32:29.655 --> 00:32:33.245\nthat we can configure inside of HSRP that\nmake it work the way that we want to.\n\n619\n00:32:33.245 --> 00:32:36.770\nThe default functionality is not\nnecessarily exactly what you want.\n\n620\n00:32:36.770 --> 00:32:38.514\n&gt;&gt; Well,\nthat does look like a good stopping point,\n\n621\n00:32:38.514 --> 00:32:41.064\nso we're gonna go ahead and take\nthe time to sign out here for ITPRO.TV.\n\n622\n00:32:41.064 --> 00:32:42.610\nI've been your host, Wes Bryan.\n\n623\n00:32:42.610 --> 00:32:43.810\n&gt;&gt; And I'm Don Pezet.\n\n624\n00:32:43.810 --> 00:32:44.613\n&gt;&gt; And we'll see you next time.\n\n625\n00:32:44.613 --> 00:32:52.015\n[MUSIC]\n\n626\n00:32:52.015 --> 00:32:56.710\n&gt;&gt; Thank you for watching ITPRO.TV.\n\n",
          "vimeoId": "188021655"
        },
        {
          "description": "In this episode, Wes and Don continue their discussion on  Hot Standby Router Protocol or HSRP. They look at the router roles when utilizing the protocol",
          "length": "1690",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/cisco-ccna200105/cisco-ccna200105-4-1-2-hsrp_pt2-101716-PGM.00_30_47_28.Still001.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/cisco-ccna200105/cisco-ccna200105-4-1-2-hsrp_pt2-101716-PGM.00_30_47_28.Still001-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/cisco-ccna200105/cisco-ccna200105-4-1-2-hsrp_pt2-101716-PGM.00_30_47_28.Still001-sm.jpg",
          "title": "Hot Standby Router Protocol (HSRP) Part 2",
          "transcript": "WEBVTT\n\n1\n00:00:04.826 --> 00:00:08.210\n[MUSIC]\n\n2\n00:00:08.210 --> 00:00:11.412\n&gt;&gt; You're watching ITPro.TV.\n\n3\n00:00:11.412 --> 00:00:15.100\n&gt;&gt; Welcome back to another\nexciting episode here at ITPro.TV.\n\n4\n00:00:15.100 --> 00:00:18.050\nI'm your host Wes Bryan, and in today's\nepisode, we're coming back at you\n\n5\n00:00:18.050 --> 00:00:21.144\nwith more of that Cisco routing and\nswitch infrastructure service.\n\n6\n00:00:21.144 --> 00:00:23.970\nAnd we're coming back\nwith a part two on HSRP,\n\n7\n00:00:23.970 --> 00:00:26.610\nand joining us in the studio is\nnone other than Mr. Don Pezet.\n\n8\n00:00:26.610 --> 00:00:27.690\nDon, how you doing sir?\n\n9\n00:00:27.690 --> 00:00:28.550\n&gt;&gt; I am doing great, Wes.\n\n10\n00:00:28.550 --> 00:00:31.742\nYeah, we had so much fun in the last\nepisode that we ran out of time so\n\n11\n00:00:31.742 --> 00:00:34.821\nwe're back with a little more HSRP and\nit's kind of important.\n\n12\n00:00:34.821 --> 00:00:38.447\nBecause what we did in the last episode\nis we got a chance to see what HSRP was,\n\n13\n00:00:38.447 --> 00:00:40.952\nhow it worked, and\nhow to do a basic configuration.\n\n14\n00:00:40.952 --> 00:00:43.539\nWhich really boiled down\nto something very simple,\n\n15\n00:00:43.539 --> 00:00:45.730\nbut what we didn't do\nwas actually test it.\n\n16\n00:00:45.730 --> 00:00:48.340\nWe didn't see failover and\nverify the functionality.\n\n17\n00:00:48.340 --> 00:00:51.460\nAnd there's some advanced features in\nthere that we may want to tweak also.\n\n18\n00:00:51.460 --> 00:00:54.570\nAnd that's what we're going to\ntackle right here in this episode.\n\n19\n00:00:54.570 --> 00:00:58.510\nSo first off I wanna start just by kind of\nrecapping the commands that we issued in\n\n20\n00:00:58.510 --> 00:00:59.310\nthe last episode.\n\n21\n00:00:59.310 --> 00:01:03.520\nWhich really boil down to just one\ncommand to get HSRP up and going.\n\n22\n00:01:03.520 --> 00:01:05.450\nTwo if you wanna switch\nover into version two.\n\n23\n00:01:05.450 --> 00:01:08.740\nAnd then after that we've got some\nother cool things that we'll see, so\n\n24\n00:01:08.740 --> 00:01:10.670\nlet's jump in and kind of recap that.\n\n25\n00:01:10.670 --> 00:01:15.900\nSo I'm gonna take NYCORE1 here, I've\ngot two switches, NYCORE1 and NYCORE2.\n\n26\n00:01:15.900 --> 00:01:18.860\nAnd they both have IP\naddresses on VLAN1 and\n\n27\n00:01:18.860 --> 00:01:24.320\nI want them to basically team up with a\nvirtual IP and get HSRP redundancy, right.\n\n28\n00:01:24.320 --> 00:01:27.290\nSo the command that we saw in\nthe last episode was pretty simple.\n\n29\n00:01:27.290 --> 00:01:29.634\nBasically I just jumped\ninto configuration,\n\n30\n00:01:29.634 --> 00:01:32.285\ngot into the interface that\nhad the IP that I wanted.\n\n31\n00:01:32.285 --> 00:01:38.274\nAnd just to kind of see that one\nagain this interface is 192.168.0.2,\n\n32\n00:01:38.274 --> 00:01:42.380\non the other switch, it's 192.168.0.3.\n\n33\n00:01:42.380 --> 00:01:46.230\nAnd so all we had to do was issue\none command which was standby\n\n34\n00:01:48.370 --> 00:01:49.730\nfollowed by a group number.\n\n35\n00:01:49.730 --> 00:01:55.370\nID group number one, IP, and\nthen the IP address that we wanted\n\n36\n00:01:55.370 --> 00:01:57.910\nto share, i wanted to share 192.168.0.1.\n\n37\n00:01:57.910 --> 00:02:01.640\nAnd so when I ran that,\nthat's what turned on HSRP,\n\n38\n00:02:01.640 --> 00:02:05.400\ngenerated the virtual router, and\nactually got things up and going.\n\n39\n00:02:05.400 --> 00:02:08.550\nThe only other command we\nissued was standby version 2,\n\n40\n00:02:08.550 --> 00:02:11.650\nto flip us from version 1 to\nversion 2 mode, all right.\n\n41\n00:02:11.650 --> 00:02:13.850\nSo now that's gonna come up,\nand it's gonna be happy.\n\n42\n00:02:13.850 --> 00:02:16.480\nAnd then I did the same\nthing on the other switch.\n\n43\n00:02:16.480 --> 00:02:19.712\nSo I'm not gonna wait on that one, I'm\njust gonna jump right over to the other\n\n44\n00:02:19.712 --> 00:02:21.516\none and do that same basic configuration.\n\n45\n00:02:21.516 --> 00:02:25.697\nSo if I take a look at the interface\nhere it's 192.168.0.3,\n\n46\n00:02:25.697 --> 00:02:28.725\nI'm just gonna get right\nback into that interface.\n\n47\n00:02:28.725 --> 00:02:33.117\nDo standby 1, IP 192.168.0.1 and\n\n48\n00:02:33.117 --> 00:02:39.420\nstandby version 2, so\nthat it's in that different version.\n\n49\n00:02:39.420 --> 00:02:43.650\nSo really super simple config\nto get this set up and\n\n50\n00:02:43.650 --> 00:02:47.170\nIn a few moments these two devices\nare gonna talk to each other.\n\n51\n00:02:47.170 --> 00:02:51.830\nOne is gonna go active, the other one's\ngonna go standby and we're gonna be up and\n\n52\n00:02:51.830 --> 00:02:53.740\nrunning in an HSRP cluster.\n\n53\n00:02:53.740 --> 00:02:55.470\nMeaning that if one node fails,\n\n54\n00:02:55.470 --> 00:02:59.120\nthe other will be able to take over and\nit'll be as simple as that.\n\n55\n00:02:59.120 --> 00:03:03.890\nNow if I jump back over here to NYCORE1,\nI can see where it's already progressed.\n\n56\n00:03:03.890 --> 00:03:05.670\nSee my STATECHANGE here?\n\n57\n00:03:05.670 --> 00:03:09.530\nVLAN group one,\nstate standby moved to active, right.\n\n58\n00:03:09.530 --> 00:03:11.630\nSo it became the active router, and\n\n59\n00:03:11.630 --> 00:03:14.647\nthat makes sense cuz it's the first one\nthat I configured, it's gonna come up.\n\n60\n00:03:14.647 --> 00:03:18.057\nThe other one's gonna come up and\nsee that somebody's already active and\n\n61\n00:03:18.057 --> 00:03:20.537\nit's gonna become a standby,\nor at least it should.\n\n62\n00:03:20.537 --> 00:03:21.813\nLet's look down here, and\n\n63\n00:03:21.813 --> 00:03:24.868\nsure enough I can see where it\nwent from speak to standby, right.\n\n64\n00:03:24.868 --> 00:03:29.299\nRemember the five states that HSRP has,\nwe start with initialization, right, or\n\n65\n00:03:29.299 --> 00:03:30.510\ninitial.\n\n66\n00:03:30.510 --> 00:03:34.610\nThen we move into listen, we listen to see\nif anybody else is out there running HSRP.\n\n67\n00:03:34.610 --> 00:03:38.970\nThen we go to speak, where we talk to\nthe other people that are running HSRP,\n\n68\n00:03:38.970 --> 00:03:42.140\nor we at least send a warning out for\nanybody who's not talking.\n\n69\n00:03:42.140 --> 00:03:46.460\nThen we move into standby, we're ready\nto become active but we're just waiting.\n\n70\n00:03:46.460 --> 00:03:47.330\nAnd then there's active,\n\n71\n00:03:47.330 --> 00:03:50.470\nwhere we are the person who's\nin charge of the virtual router.\n\n72\n00:03:50.470 --> 00:03:54.010\nNow if I wanna verify this configuration,\n\n73\n00:03:54.010 --> 00:03:56.600\nin the last episode I just\npinged the virtual IP.\n\n74\n00:03:56.600 --> 00:04:00.920\nBut pinging the virtual IP doesn't\nactually verify HSRP's config.\n\n75\n00:04:00.920 --> 00:04:05.705\nIt verifies HSRP's config on one device,\nnot on the standby.\n\n76\n00:04:05.705 --> 00:04:09.150\nThere's no good way with ping to\ntest on the standby device at all.\n\n77\n00:04:09.150 --> 00:04:12.944\nSo the best way to verify it\nis to use a show command,\n\n78\n00:04:12.944 --> 00:04:16.470\nthat we can do a show standby and\ntake a look at that config.\n\n79\n00:04:16.470 --> 00:04:21.850\nSo for example back on NYCORE1,\nif I do a show standby.\n\n80\n00:04:22.990 --> 00:04:24.982\nIf you just run show standby\nby itself like this,\n\n81\n00:04:24.982 --> 00:04:27.550\nit's gonna show me\nthe information that I want.\n\n82\n00:04:27.550 --> 00:04:33.310\nIf I have 20 standby groups, it'll show\nme the status of all 20 standby groups.\n\n83\n00:04:33.310 --> 00:04:35.590\nSo what you normally\ndo is show standby and\n\n84\n00:04:35.590 --> 00:04:40.230\nthen you follow that up with the interface\nthat has the standby group that you want.\n\n85\n00:04:40.230 --> 00:04:43.230\nSo for example, my standby group\nis configured on VLAN1, so\n\n86\n00:04:43.230 --> 00:04:45.860\nI can do a show standby VLAN1.\n\n87\n00:04:45.860 --> 00:04:49.380\nAnd that will show me just\nthat one standby group, right.\n\n88\n00:04:49.380 --> 00:04:51.960\nRemember that a standby group can\ncover more than one interface.\n\n89\n00:04:51.960 --> 00:04:56.074\nSo I can have standby\ngroup one covering VLAN1,\n\n90\n00:04:56.074 --> 00:05:00.140\nVLAN2, VLAN3, all wrapped up\ninto one if I wanted, right.\n\n91\n00:05:00.140 --> 00:05:01.828\nWe don't normally do that but\nyou certainly can.\n\n92\n00:05:01.828 --> 00:05:04.730\nIf I just do show standby\nit'll show them all.\n\n93\n00:05:04.730 --> 00:05:07.780\nI've only got one so that's fine for\nme, and there it is.\n\n94\n00:05:07.780 --> 00:05:12.570\nSo here I see VLAN1 group one version two,\nso I am in version two mode.\n\n95\n00:05:12.570 --> 00:05:17.880\nAnd state is active,\nI am the active router in HSRP.\n\n96\n00:05:17.880 --> 00:05:22.125\nSo the virtual IP and the virtual MAC\naddress, they were created by me.\n\n97\n00:05:22.125 --> 00:05:24.510\nAnd they're active and I control them,\n\n98\n00:05:24.510 --> 00:05:28.880\nso any traffic being sent to\nthe virtual IP is coming right here.\n\n99\n00:05:28.880 --> 00:05:32.460\nAnd so I see that virtual IP address and\nthe virtual MAC address right here.\n\n100\n00:05:32.460 --> 00:05:38.028\nAnd as we look down, I can see\nactive router is local, that's me.\n\n101\n00:05:38.028 --> 00:05:43.941\nAnd then standby router is 192.168.0.3,\nthat's NYCORE2.\n\n102\n00:05:43.941 --> 00:05:48.750\nSo NYCORE1 is active,\nNYCORE2 is standby, right.\n\n103\n00:05:48.750 --> 00:05:50.710\nLet's go look at it from\nNYCORE2's perspective.\n\n104\n00:05:50.710 --> 00:05:55.290\nIf we jump over to NYCORE2, I'm gonna do\nthe same thing, right, so show standby.\n\n105\n00:05:56.720 --> 00:05:59.791\nAnd we'll see a lot of\nthe same information right,\n\n106\n00:05:59.791 --> 00:06:03.085\nexcept instead of active\nthis one is standby, right.\n\n107\n00:06:03.085 --> 00:06:05.866\nAnd as I look here at the MAC address,\nthe MAC address is the same,\n\n108\n00:06:05.866 --> 00:06:07.090\nthat's not any different.\n\n109\n00:06:07.090 --> 00:06:11.011\nThe active router is 192.168.0.2 and\n\n110\n00:06:11.011 --> 00:06:15.050\nI can see the actual MAC\naddress of that router.\n\n111\n00:06:15.050 --> 00:06:19.060\nNot the virtual shared one that's up here\nright, cuz that's gotta be the same.\n\n112\n00:06:19.060 --> 00:06:21.680\nBut the one down here is the actual\nMAC address of that router.\n\n113\n00:06:21.680 --> 00:06:24.530\nAnd then I see standby router is local, so\n\n114\n00:06:24.530 --> 00:06:27.650\nI've got one active and\nI've got one standby.\n\n115\n00:06:27.650 --> 00:06:32.060\nNow once this is up and\ngoing how do we know it works?\n\n116\n00:06:32.060 --> 00:06:36.000\nWell the easiest way to test it\nis to simulate a failure, right.\n\n117\n00:06:36.000 --> 00:06:40.295\nI'm gonna jump over to a third device,\nso here's NYACCESS1.\n\n118\n00:06:40.295 --> 00:06:44.356\nAnd on NYACCESS1, this is just\na regular old switch, it's layer two,\n\n119\n00:06:44.356 --> 00:06:46.230\nnot doing any layer three stuff.\n\n120\n00:06:46.230 --> 00:06:52.115\nIf I ping 192.168.0.1,\nI can ping it, all right.\n\n121\n00:06:52.115 --> 00:06:57.920\nAnd if I ping 192.168.2 and .3 right,\nthose are the unique IPs on the switches.\n\n122\n00:06:57.920 --> 00:07:02.430\nI can do a show arp and\nI'll see those devices.\n\n123\n00:07:02.430 --> 00:07:06.650\nI know that .1 is HSRP, because I can\nspot that MAC address right there,\n\n124\n00:07:06.650 --> 00:07:09.190\nthat standard MAC address for HSRP.\n\n125\n00:07:09.190 --> 00:07:12.830\nSo I know HSRP is working and\nI know I can ping that address.\n\n126\n00:07:12.830 --> 00:07:19.100\nAnd i know from the show standby command\nthat NYCORE1 is the active router.\n\n127\n00:07:19.100 --> 00:07:22.390\nSo when I did that ping it\nactually went to NYCORE1, but\n\n128\n00:07:22.390 --> 00:07:24.010\nwhat if NYCORE1 were to fail?\n\n129\n00:07:25.020 --> 00:07:28.381\nLet's go simulate that,\nI'm gonna jump up to NYCORE1 and\n\n130\n00:07:28.381 --> 00:07:33.990\nI'm just gonna get into interface\nVLAN1 and do a shut down.\n\n131\n00:07:33.990 --> 00:07:36.790\nWhen I shut that interface down,\nthat's a failure, okay.\n\n132\n00:07:36.790 --> 00:07:40.420\nAnd so when it fails, notice how it says\n\n133\n00:07:40.420 --> 00:07:45.220\nthe HSRP group 1 state went\nfrom active to init, it reset.\n\n134\n00:07:45.220 --> 00:07:48.230\nIt reset the HSRP group\ncuz there's a failure, and\n\n135\n00:07:48.230 --> 00:07:50.250\nit's not gonna be able to come back\nup because the interface is down.\n\n136\n00:07:50.250 --> 00:07:53.125\nSo HSRP is just dead\nright here on NYCORE1.\n\n137\n00:07:53.125 --> 00:07:56.505\nAnd as I skim down a little\nfurther into NYCORE2,\n\n138\n00:07:56.505 --> 00:08:00.861\nsee how it went from standby To\nactive very, very fast, right?\n\n139\n00:08:00.861 --> 00:08:02.973\nSo it jumped from standby to active.\n\n140\n00:08:02.973 --> 00:08:06.813\nAnd if I jump down here to NYACCESS1,\n\n141\n00:08:06.813 --> 00:08:11.856\nI can ping 192.168.0.1 and I ping it.\n\n142\n00:08:11.856 --> 00:08:18.481\nAnd if I do a show arp and I take a look\nat the MAC address from 192.168.0.1,\n\n143\n00:08:18.481 --> 00:08:23.270\nand I compare it to the MAC up here,\nthey're the same.\n\n144\n00:08:23.270 --> 00:08:25.494\nI didn't even have to flush my arp cache,\n\n145\n00:08:25.494 --> 00:08:29.370\nI didn't have to do a another arp\nbroadcast, I just went to the same IP and\n\n146\n00:08:29.370 --> 00:08:32.358\nthe same MAC address that I\ngot a few seconds before, and\n\n147\n00:08:32.358 --> 00:08:36.398\nit still works and that's because\nNYCORE2 is now active for the cluster.\n\n148\n00:08:36.398 --> 00:08:40.730\nBack in NYCORE2, if I do a show standby,\n\n149\n00:08:42.040 --> 00:08:47.660\nearlier it said that this was the standby\nand the other guy was active,\n\n150\n00:08:47.660 --> 00:08:52.860\nnow when I look at it,\nI can see that NYCore2 is active, right?\n\n151\n00:08:52.860 --> 00:08:55.710\nIt is active, there's the IP address and\nMAC address that it's got, and\n\n152\n00:08:55.710 --> 00:08:57.580\ndown here active router is local.\n\n153\n00:08:57.580 --> 00:09:01.310\nStandby router unknown,\nwe don't know who the standby router is.\n\n154\n00:09:01.310 --> 00:09:03.100\nBecause the standby router failed, right?\n\n155\n00:09:03.100 --> 00:09:05.510\nThat was NYCORE1, it's down,\nit's gone, it's out.\n\n156\n00:09:05.510 --> 00:09:07.920\nAnd there is no other standby.\n\n157\n00:09:07.920 --> 00:09:12.490\nSo what I now have is\na one node HSRP cluster.\n\n158\n00:09:12.490 --> 00:09:15.310\nAnd there's not really a lot of call for\nthat.\n\n159\n00:09:15.310 --> 00:09:19.130\nA normal HSRP cluster's gonna have\ntwo nodes, an active and a standby.\n\n160\n00:09:19.130 --> 00:09:23.320\nThe only time you might choose to do\na one node, would be maybe you've got\n\n161\n00:09:23.320 --> 00:09:27.490\none router right now and in the future\nyou're planning on adding another one.\n\n162\n00:09:27.490 --> 00:09:28.410\nAnd so, you say, well,\n\n163\n00:09:28.410 --> 00:09:31.940\nI've got this router now, and\nnext month I'm gonna add a second router.\n\n164\n00:09:31.940 --> 00:09:36.290\nSo I'm gonna go and add HSRP right now\neven though there's only one node, so\n\n165\n00:09:36.290 --> 00:09:38.100\nthat down the road when\nI add the second router,\n\n166\n00:09:38.100 --> 00:09:40.580\nI can do it without interrupting services.\n\n167\n00:09:40.580 --> 00:09:45.165\nIf I don't configure HSRP, if I put\n192.168.0.1 in this one router and\n\n168\n00:09:45.165 --> 00:09:46.660\nwanna changed it later,\n\n169\n00:09:46.660 --> 00:09:50.816\nI'm gonna then create some network\ndowntime cuz I've gotta remove the .1 IP,\n\n170\n00:09:50.816 --> 00:09:54.910\nI've gotta add a unique IP, I gotta\nconfigure HSRP and bring it online.\n\n171\n00:09:54.910 --> 00:09:57.990\nIt's not a long outrage, however,\nhow long it will take you to type,\n\n172\n00:09:57.990 --> 00:09:59.670\nso 30 seconds maybe.\n\n173\n00:09:59.670 --> 00:10:02.260\nBut the arp cache has to\nkinda propagate and clear,\n\n174\n00:10:02.260 --> 00:10:04.090\ncuz now you're gonna have\nthat fake MAC address.\n\n175\n00:10:04.090 --> 00:10:07.710\nSo, by assigning it ahead of time,\nyou can kinda stop that.\n\n176\n00:10:07.710 --> 00:10:09.585\nBut I'll be honest with you,\nmost people don't do that,\n\n177\n00:10:09.585 --> 00:10:10.981\nI'll get a second router a month from now.\n\n178\n00:10:10.981 --> 00:10:12.629\nYou usually get them at the same time.\n\n179\n00:10:12.629 --> 00:10:15.860\n&gt;&gt; Now you've shown us a two\nrouter demonstration here.\n\n180\n00:10:15.860 --> 00:10:17.990\nYou just had mentioned the scenario\nthat we would see one.\n\n181\n00:10:17.990 --> 00:10:22.110\nHow about scaling out farther, can we go\nthree routers, can we go four routers?\n\n182\n00:10:22.110 --> 00:10:25.740\nDoes this scale up to very\nlarge infrastructures?\n\n183\n00:10:25.740 --> 00:10:30.370\n&gt;&gt; It does, I don't actually\nknow the maximum number, but\n\n184\n00:10:30.370 --> 00:10:32.180\nI know for\na fact you can do at least eight.\n\n185\n00:10:32.180 --> 00:10:34.390\nSo you can throw in additional routers.\n\n186\n00:10:34.390 --> 00:10:39.015\nBut here's the thing,\nthere's really only three roles in HSRP,\n\n187\n00:10:39.015 --> 00:10:42.040\nactive, standby, and other, okay?\n\n188\n00:10:42.040 --> 00:10:45.370\nActive, that's the one who's in charge\nof the virtual IP, that's the main one,\n\n189\n00:10:45.370 --> 00:10:46.720\nthe one that's important.\n\n190\n00:10:46.720 --> 00:10:48.260\nThen standby, that's the backup,\n\n191\n00:10:48.260 --> 00:10:50.950\nthat's just who's gonna take\nover when the active fails.\n\n192\n00:10:50.950 --> 00:10:55.100\nEverybody else, every other router\nthat you had, becomes other.\n\n193\n00:10:55.100 --> 00:10:57.670\nAnd what other means is\nit's just sitting there,\n\n194\n00:10:57.670 --> 00:10:59.480\nsitting there not doing anything, right?\n\n195\n00:10:59.480 --> 00:11:04.210\nAnd if the active fails,\nthe standby becomes active and\n\n196\n00:11:04.210 --> 00:11:08.370\nthen all of the other then fight to\nsee who gets to become the standby,\n\n197\n00:11:08.370 --> 00:11:10.500\nwho becomes the new standby, all right?\n\n198\n00:11:10.500 --> 00:11:14.760\nAnd so in my scenario when the active\nfailed, my standby went active and\n\n199\n00:11:14.760 --> 00:11:19.320\nthere was nobody else to feel the standby\nrole and so now I've got those standby.\n\n200\n00:11:19.320 --> 00:11:21.320\nBut if I had more than two\nrouters I could have done it.\n\n201\n00:11:21.320 --> 00:11:24.460\nSo I could have had three or\nfour or eight or more.\n\n202\n00:11:24.460 --> 00:11:28.680\n&gt;&gt; On that other role, if you will,\nis there anything that we can dictate,\n\n203\n00:11:28.680 --> 00:11:31.510\nhey, we want let's say router\nthree to come online and\n\n204\n00:11:31.510 --> 00:11:35.704\nbe in the standby or maybe router four or\nis that something that's really just gonna\n\n205\n00:11:35.704 --> 00:11:38.290\nbe kinda internally fought for,\nlike you said?\n\n206\n00:11:38.290 --> 00:11:41.930\n&gt;&gt; Well, by default, it's just fought for\nand it is really a first come first serve\n\n207\n00:11:41.930 --> 00:11:46.060\nkind of thing, whoever makes the decision\nfirst is the one who's gonna win.\n\n208\n00:11:46.060 --> 00:11:48.790\nBut we can influence that and\nlet me give you a great example.\n\n209\n00:11:48.790 --> 00:11:51.770\nSo, when I have two routers and\nthey're configured for\n\n210\n00:11:51.770 --> 00:11:56.270\nHSRP, Cisco treats those\nrouters equally by default.\n\n211\n00:11:56.270 --> 00:12:00.980\nIt doesn't care at all whether one is\nthe active or the other is active.\n\n212\n00:12:00.980 --> 00:12:01.650\nWho cares, right?\n\n213\n00:12:01.650 --> 00:12:03.100\nIt treats them equally.\n\n214\n00:12:03.100 --> 00:12:07.160\nWell, if they're identical routers,\nthen I may not care either.\n\n215\n00:12:07.160 --> 00:12:10.390\nI might be perfectly fine with them\nbeing different like that, right?\n\n216\n00:12:10.390 --> 00:12:15.440\nBut, what if one of them is a nice\n\n217\n00:12:15.440 --> 00:12:20.460\n2900 a brand new current series router and\nthe other one is my old 2800 that\n\n218\n00:12:20.460 --> 00:12:24.390\nI just happen to have laying around so I\nchucked it in there and used as a backup?\n\n219\n00:12:24.390 --> 00:12:28.350\nI might wanna make sure the 2900\nis active, unless it fails and\n\n220\n00:12:28.350 --> 00:12:30.690\nthen the 2800 can step in and\ntake over the role.\n\n221\n00:12:30.690 --> 00:12:34.910\nSo in that case, I may want to influence\nwho becomes the primary influence,\n\n222\n00:12:34.910 --> 00:12:37.710\nwho it is that is the head honcho,\nthat's one scenario.\n\n223\n00:12:37.710 --> 00:12:41.790\nAnother scenario is, I've got two routers,\nthey're in HSRP, and\n\n224\n00:12:41.790 --> 00:12:44.700\none day my Internet access\nstarts running kind of slow.\n\n225\n00:12:44.700 --> 00:12:46.540\nAnd I'm like gee, let me jump in and\n\n226\n00:12:46.540 --> 00:12:50.450\nlook at my interface statistics to see\nhow much bandwidth is getting eaten up.\n\n227\n00:12:50.450 --> 00:12:56.348\nWell, I have to figure out who's the\nactive router, is it NYCORE1 or NYCORE2?\n\n228\n00:12:56.348 --> 00:12:59.950\nIf it's NYCORE2,\nI might connect to NYCORE1 and\n\n229\n00:12:59.950 --> 00:13:03.480\nlook at the interface status and\nsee if the bandwidth is next to nothing,\n\n230\n00:13:03.480 --> 00:13:06.980\nand I'm like whatever we've got tons\nof bandwidth when in reality NYCORE2\n\n231\n00:13:06.980 --> 00:13:09.960\nis active and\nit's been completely saturated.\n\n232\n00:13:09.960 --> 00:13:12.082\nSo, now I've gotta try to\nremember which one is active.\n\n233\n00:13:12.082 --> 00:13:14.969\nAnd so, in a lot of scenarios,\nit makes sense for\n\n234\n00:13:14.969 --> 00:13:17.787\nus to say,\nthis one router is the main router and\n\n235\n00:13:17.787 --> 00:13:22.070\nthe other guy is the standby and\nI always want it to be that way.\n\n236\n00:13:22.070 --> 00:13:25.530\nBut if you don't configure that, by\ndefault, every router is treated equally.\n\n237\n00:13:25.530 --> 00:13:27.530\nAnd you can actually see that,\nif we go back here and\n\n238\n00:13:27.530 --> 00:13:31.460\nlook at my NYCORE2 or NYCORE1 status.\n\n239\n00:13:31.460 --> 00:13:35.590\nIf you look in that show standby output,\nthis whole block here,\n\n240\n00:13:35.590 --> 00:13:40.380\nthere's a little spot in here where it\nsays your router's priority, right?\n\n241\n00:13:40.380 --> 00:13:44.521\nSee how this router has a priority of 100,\nwhich is the default, default 100.\n\n242\n00:13:44.521 --> 00:13:47.563\nWell, when I was looking at NYCORE1,\n\n243\n00:13:47.563 --> 00:13:52.091\nNYCORE1 also had a priority of 100,\ndefault 100.\n\n244\n00:13:52.091 --> 00:13:56.631\nSo the two routers were tied and because\nthere's a tie we really don't care which\n\n245\n00:13:56.631 --> 00:13:59.920\none is active and\nit's going to be first come first serve.\n\n246\n00:13:59.920 --> 00:14:02.723\nI configured NYCORE1 first so\nit becomes active.\n\n247\n00:14:02.723 --> 00:14:06.103\nAnd then NYCORE2 became a standby,\njust because that's how I configured it.\n\n248\n00:14:06.103 --> 00:14:10.663\nBut right now, when I shut down in\nNYCORE1, NYCORE 2 is gonna become active,\n\n249\n00:14:10.663 --> 00:14:11.763\nor it already has.\n\n250\n00:14:11.763 --> 00:14:14.155\nBut NYCORE1, let's fix it.\n\n251\n00:14:14.155 --> 00:14:17.660\nI'm gonna bring that\ninterface back online, okay?\n\n252\n00:14:17.660 --> 00:14:21.210\nSo when I do no shutdown,\nthe vlan 1 interface comes back online.\n\n253\n00:14:21.210 --> 00:14:22.650\nIt's gonna see the other router.\n\n254\n00:14:22.650 --> 00:14:25.800\nRight now I'm moving\nthrough initialization,\n\n255\n00:14:25.800 --> 00:14:30.980\nlisten, speak, standby, and\nthen potentially active.\n\n256\n00:14:30.980 --> 00:14:35.850\nBut what's gonna happen is my router's\ngonna come up, it's got a priority of 100,\n\n257\n00:14:35.850 --> 00:14:38.670\nit's gonna see the other\nrouter has a priority of 100,\n\n258\n00:14:38.670 --> 00:14:42.440\nthe other router is already active,\nwe'll just go standby.\n\n259\n00:14:42.440 --> 00:14:47.010\nAnd so there, right there, we can see\nwe just went from speak to standby.\n\n260\n00:14:47.010 --> 00:14:48.180\nI didn't go active.\n\n261\n00:14:48.180 --> 00:14:54.840\nThere is nothing special about NYCORE1,\nit's treated identically to NYCORE2.\n\n262\n00:14:54.840 --> 00:14:57.330\nSo let's say that we wanna\nmake NYCORE1 special.\n\n263\n00:14:57.330 --> 00:15:01.130\nWe want it to be the dominant router, I\nwant it to be the one that goes active so\n\n264\n00:15:01.130 --> 00:15:04.410\nthat when I come in in the morning,\nand I go to troubleshoot something or\n\n265\n00:15:04.410 --> 00:15:07.760\nlook at bandwidth statistics,\nunless I've had a failure,\n\n266\n00:15:07.760 --> 00:15:11.590\nI should know that NYCORE1 is\nthe active router, not NYCORE2.\n\n267\n00:15:11.590 --> 00:15:13.540\nI will only go to NYCORE2\nif there is a failure.\n\n268\n00:15:13.540 --> 00:15:16.660\nSo if I wanna get that configured,\nI need to adjust the priority,\n\n269\n00:15:16.660 --> 00:15:20.050\nI need to give the NYCORE1\na higher priority than NYCORE2.\n\n270\n00:15:20.050 --> 00:15:21.473\nThen they won't be treated equal,\nall right?\n\n271\n00:15:21.473 --> 00:15:24.445\nFortunately, priority is really\neasy to work with, let me show you.\n\n272\n00:15:24.445 --> 00:15:28.989\nSo I'm gonna take NYCORE1, and\nI'm still in the vlan interface,\n\n273\n00:15:28.989 --> 00:15:31.550\nthis is done on a per interface basis.\n\n274\n00:15:31.550 --> 00:15:34.530\nSo you'll get into whichever interface\nit is that has the virtual IP.\n\n275\n00:15:34.530 --> 00:15:37.220\nAnd you're gonna say standby,\n\n276\n00:15:37.220 --> 00:15:41.230\nand the group number,\nfollowed by the priority, right?\n\n277\n00:15:41.230 --> 00:15:45.380\nSo we're gonna come in here and\nsay standby 1 priority,\n\n278\n00:15:45.380 --> 00:15:47.250\nand then your priority number.\n\n279\n00:15:47.250 --> 00:15:50.977\nPriority is 0 through 255,\nwhere 0 is the lowest priority,\n\n280\n00:15:50.977 --> 00:15:54.729\nlike I never want this guy to go active,\nit's kind of pointless.\n\n281\n00:15:54.729 --> 00:15:57.311\nAnd then 255 would be highest priority,\n\n282\n00:15:57.311 --> 00:16:00.047\nI always wanna make sure\nthis guy goes active.\n\n283\n00:16:00.047 --> 00:16:01.971\nNow, just because 255 is the highest,\n\n284\n00:16:01.971 --> 00:16:05.237\nI can still set three different\nrouters to all have a priority of 255.\n\n285\n00:16:05.237 --> 00:16:07.730\nNow I've got a three-way tie and\nI've defeated the purpose.\n\n286\n00:16:07.730 --> 00:16:08.510\nSo in our head,\n\n287\n00:16:08.510 --> 00:16:11.330\nwe have to keep it straight what\nnumbers we've assigned where.\n\n288\n00:16:11.330 --> 00:16:14.350\nIn my scenario, I just need to\nbump it up a little bit more.\n\n289\n00:16:14.350 --> 00:16:15.565\nHigher is better.\n\n290\n00:16:15.565 --> 00:16:20.390\nIt's the opposite of routing protocols,\nwhere lower is better for a metric.\n\n291\n00:16:20.390 --> 00:16:21.570\nHere, higher is better.\n\n292\n00:16:21.570 --> 00:16:23.410\nIt's just one of those\nthings you have to memorize.\n\n293\n00:16:23.410 --> 00:16:27.300\nSo I'm gonna give a priority of 110,\njust 10 higher.\n\n294\n00:16:27.300 --> 00:16:29.790\nThe other router is 100, this one is 110.\n\n295\n00:16:29.790 --> 00:16:32.210\nThis one now has priority.\n\n296\n00:16:32.210 --> 00:16:37.600\nIf I were to cut off HSRP and turn these\ntwo devices on at the same time and\n\n297\n00:16:37.600 --> 00:16:38.956\nthey start talking to each other.\n\n298\n00:16:38.956 --> 00:16:44.598\nOne's got 110, the other's got 100,\nthis guy's going to become the active.\n\n299\n00:16:44.598 --> 00:16:49.300\nAnd we'll see it in the status\nif I do a show standby.\n\n300\n00:16:49.300 --> 00:16:53.693\nWhen I go in here and I look at NYCORE1,\nI can see right here,\n\n301\n00:16:53.693 --> 00:16:56.804\nPriority 110 (configured 110).\n\n302\n00:16:56.804 --> 00:16:58.800\n&gt;&gt; Now Don,\nI noticed something just above that line.\n\n303\n00:16:58.800 --> 00:17:00.150\nIt talks about standby there.\n\n304\n00:17:00.150 --> 00:17:01.492\nYou said that that's the local router.\n\n305\n00:17:01.492 --> 00:17:04.220\nSo it looks like it's still in standby and\nhasn't gone active yet.\n\n306\n00:17:04.220 --> 00:17:06.926\n&gt;&gt; All right, so\nHSRP is really easy to configure.\n\n307\n00:17:06.926 --> 00:17:10.759\nBut this is one of the times when there's\nactually two different things coming\n\n308\n00:17:10.759 --> 00:17:11.348\ninto play.\n\n309\n00:17:11.348 --> 00:17:13.580\nI have assigned priority to NYCORE1.\n\n310\n00:17:13.580 --> 00:17:15.692\nIt is now the highest priority.\n\n311\n00:17:15.692 --> 00:17:18.490\nAnd if we take a look at what\nI've said just a moment ago.\n\n312\n00:17:18.490 --> 00:17:20.565\nIf I were to power off HSRP and\n\n313\n00:17:20.565 --> 00:17:24.988\npower these two guys on at the same time,\nthis one would win.\n\n314\n00:17:24.988 --> 00:17:26.610\nBut that's not what happened, is it?\n\n315\n00:17:26.610 --> 00:17:29.560\nThe other one is active,\nNYCORE2 is active.\n\n316\n00:17:29.560 --> 00:17:35.450\nEven though it's got a priority of 100,\nthe other one is still active.\n\n317\n00:17:35.450 --> 00:17:38.120\nThis one has a priority of 110,\nit's still standby.\n\n318\n00:17:38.120 --> 00:17:44.042\nAnd the reason is this line right here,\nPreemption disabled.\n\n319\n00:17:44.042 --> 00:17:48.240\nBy default, when an HSRP node comes up,\n\n320\n00:17:48.240 --> 00:17:53.200\nif there's already somebody active and\nworking fine, it leaves it alone.\n\n321\n00:17:53.200 --> 00:17:55.205\nIt says, hey,\nthat guy's doing a great job.\n\n322\n00:17:55.205 --> 00:17:56.150\nI'm not gonna mess with that.\n\n323\n00:17:56.150 --> 00:17:58.920\nWhy break something that's working fine?\n\n324\n00:17:58.920 --> 00:18:01.010\nAnd it leaves it alone.\n\n325\n00:18:01.010 --> 00:18:06.240\nNow again, if you have two identical\nrouters, there's really no\n\n326\n00:18:07.910 --> 00:18:10.860\nspecific bandwidth or performance\nreason to jump back to the other one.\n\n327\n00:18:10.860 --> 00:18:15.110\nSo who cares if we're on router two for\nthe next month versus router one,\n\n328\n00:18:15.110 --> 00:18:16.050\nit doesn't mater.\n\n329\n00:18:16.050 --> 00:18:18.572\nIt matters for\nus just as far as record keeping.\n\n330\n00:18:18.572 --> 00:18:21.319\nOr being able to quickly identify\ndata without having to look at who\n\n331\n00:18:21.319 --> 00:18:22.670\nthe active router is.\n\n332\n00:18:22.670 --> 00:18:25.590\nBut as far as functionality wise,\nit doesn't matter.\n\n333\n00:18:25.590 --> 00:18:26.420\nSo who cares?\n\n334\n00:18:26.420 --> 00:18:29.080\nIf it doesn't matter,\nleave the other guy active.\n\n335\n00:18:29.080 --> 00:18:31.657\nBecause when we fail back,\nlet's say we moved\n\n336\n00:18:31.657 --> 00:18:35.837\nit back where this guy was now active,\nwe're gonna lose at least one ping.\n\n337\n00:18:35.837 --> 00:18:38.210\nAnd that's a very small thing to lose.\n\n338\n00:18:38.210 --> 00:18:40.070\nBut it is data loss, nonetheless.\n\n339\n00:18:40.070 --> 00:18:43.180\nSo if we could avoid that by\njust not failing back, why not?\n\n340\n00:18:43.180 --> 00:18:44.520\nAnd that's the default.\n\n341\n00:18:44.520 --> 00:18:48.960\nSo the default is we only fail over when\nthere's an actual change in the topology.\n\n342\n00:18:48.960 --> 00:18:54.005\nSo NYCORE1 went down,\nNYCORE2 became active.\n\n343\n00:18:54.005 --> 00:18:58.651\nNYCORE2 is gonna stay active even\nwhen NYCORE1 comes back up and\n\n344\n00:18:58.651 --> 00:19:00.620\ncomes in standby.\n\n345\n00:19:00.620 --> 00:19:06.050\nAnd NYCORE1 will not become active\nunless NYCORE2 fails down the road.\n\n346\n00:19:06.050 --> 00:19:10.180\nBut if I wanna change that, if I wanna\nmake sure it does come back to NYCORE1,\n\n347\n00:19:10.180 --> 00:19:12.580\nI need to turn on preemption.\n\n348\n00:19:12.580 --> 00:19:15.180\nAnd you don't have to turn on\npreemption on both routers.\n\n349\n00:19:15.180 --> 00:19:18.380\nYou just have to turn it on on the router\nthat you want to do the interrupting.\n\n350\n00:19:18.380 --> 00:19:22.370\nIn theory,\nNYCORE2 should never interrupt NYCORE1.\n\n351\n00:19:22.370 --> 00:19:23.410\nNYCORE1 should be active.\n\n352\n00:19:23.410 --> 00:19:25.793\nSo I don't need preemption on NYCORE2.\n\n353\n00:19:25.793 --> 00:19:28.186\nBut I do need it on NYCORE1.\n\n354\n00:19:28.186 --> 00:19:30.840\nThat's the one that needs to be\nable to interrupt the other one.\n\n355\n00:19:30.840 --> 00:19:34.790\nAnd so I'm gonna jump in here and\nget into int vlan 1.\n\n356\n00:19:34.790 --> 00:19:39.990\nAnd I'll say, standby 1 preempt.\n\n357\n00:19:41.370 --> 00:19:44.440\nAnd that's gonna tell it that\nI wanna turn on preemption.\n\n358\n00:19:44.440 --> 00:19:46.460\nAnd so now, when I come up and\n\n359\n00:19:46.460 --> 00:19:50.648\nsomebody else is already active,\nif my priority is higher, I'll bump them.\n\n360\n00:19:50.648 --> 00:19:53.242\nI'll say, my priority's better than you.\n\n361\n00:19:53.242 --> 00:19:56.420\nI'm gonna take over, and\nsee how fast it happened?\n\n362\n00:19:56.420 --> 00:19:58.050\nRight there,\nI went from standby to active.\n\n363\n00:19:58.050 --> 00:20:01.080\nI'm now preempting, the other guy isn't.\n\n364\n00:20:01.080 --> 00:20:04.660\nIf I come here and\nI do a show standby on NYCORE1,\n\n365\n00:20:04.660 --> 00:20:07.910\nyou'll see that preemption is now enabled.\n\n366\n00:20:07.910 --> 00:20:12.030\nIf I jump over to NYCORE2,\nmy console's timed out.\n\n367\n00:20:13.650 --> 00:20:15.189\nI can do a show standby.\n\n368\n00:20:15.189 --> 00:20:19.320\nAnd on one this one,\nI can see preemption is disabled.\n\n369\n00:20:19.320 --> 00:20:20.380\nAnd I'm fine with that.\n\n370\n00:20:20.380 --> 00:20:21.965\nIt's got a lower priority anyway.\n\n371\n00:20:21.965 --> 00:20:24.670\nSo it should never interrupt\nthe other one unless the other fails.\n\n372\n00:20:24.670 --> 00:20:26.150\nIf the other one fails,\nwe don't need preemption.\n\n373\n00:20:26.150 --> 00:20:27.864\nIt's gonna take it over anyway.\n\n374\n00:20:27.864 --> 00:20:29.446\nNow, I'll be honest with you guys.\n\n375\n00:20:29.446 --> 00:20:32.909\nIn real life land, I normally turn up\npreemption on all of them just for\n\n376\n00:20:32.909 --> 00:20:34.098\nconsistency's sake.\n\n377\n00:20:34.098 --> 00:20:36.794\nThat way, the config is the same\nacross the devices even though it's\n\n378\n00:20:36.794 --> 00:20:37.457\nnot necessary.\n\n379\n00:20:37.457 --> 00:20:41.597\nBut on the exam, know that you only need\nto configure preemption on the devices you\n\n380\n00:20:41.597 --> 00:20:43.100\nactually want to interrupt.\n\n381\n00:20:44.248 --> 00:20:47.451\nNow another thing worth mentioning is,\nwhen you look at the priorities,\n\n382\n00:20:47.451 --> 00:20:50.049\nsee how this one says\nPriority 100 (default 100)?\n\n383\n00:20:50.049 --> 00:20:52.980\nThat's what you're normally\ngonna see on a default priority.\n\n384\n00:20:52.980 --> 00:20:56.562\nBut you might have noticed a little\ndifference back here on NYCORE1.\n\n385\n00:20:56.562 --> 00:21:01.444\nOn NYCORE1,\nit says Priority 110 (configured 110).\n\n386\n00:21:01.444 --> 00:21:03.216\nNow why the change in terminology?\n\n387\n00:21:03.216 --> 00:21:05.500\nWell, it is configured,\nright, so there is that.\n\n388\n00:21:05.500 --> 00:21:09.830\nBut it's not on the CCNA exam, but\nyou'll see it on the CCNP exams.\n\n389\n00:21:09.830 --> 00:21:15.420\nWhere we can actually get in and\napply certain conditions to the router.\n\n390\n00:21:15.420 --> 00:21:18.230\nMy scenario here is\nthe basic HSRP scenarios,\n\n391\n00:21:18.230 --> 00:21:20.370\nwhat you're gonna see on the CCNA exam.\n\n392\n00:21:20.370 --> 00:21:27.100\nBut in more complex environments, I might\nhave two different ISP connections.\n\n393\n00:21:27.100 --> 00:21:32.159\nAnd if one ISP connection fails,\nI still have the second one, so I'm okay.\n\n394\n00:21:32.159 --> 00:21:35.270\nI don't need the failover cuz I still\nhave the second ISP connection.\n\n395\n00:21:35.270 --> 00:21:38.930\nAnd so you can assign what's\ncalled a weight to each interface.\n\n396\n00:21:38.930 --> 00:21:41.020\nAnd when an interface fails,\n\n397\n00:21:41.020 --> 00:21:45.540\nit will lower your priority based\non a value that you assigned.\n\n398\n00:21:45.540 --> 00:21:49.280\nSo I might say that each interface\nthat I lose lowers my priority by 10.\n\n399\n00:21:49.280 --> 00:21:52.580\nSo if I lose one ISP, I drop to 100.\n\n400\n00:21:52.580 --> 00:21:55.495\nAnd it would say,\nPriority 100 (configured 110).\n\n401\n00:21:55.495 --> 00:21:57.330\nIt would show that I was down 10.\n\n402\n00:21:57.330 --> 00:21:58.424\nBut I'm still at 100.\n\n403\n00:21:58.424 --> 00:22:01.300\nI'm tied with the other router,\nso I'll stay active.\n\n404\n00:22:01.300 --> 00:22:03.913\nBut if I lose another interface,\nit will drop down to 90.\n\n405\n00:22:03.913 --> 00:22:06.530\nAnd when that happens,\nnow I'm lower than the other router, and\n\n406\n00:22:06.530 --> 00:22:08.170\nthe other router will take over.\n\n407\n00:22:08.170 --> 00:22:11.040\nSo you can use that to influence when\nyou fail over and when you don't.\n\n408\n00:22:11.040 --> 00:22:12.602\nAgain, not on the CCNA exam.\n\n409\n00:22:12.602 --> 00:22:15.220\nBut for those of you that go on to CCNP,\nyou'll learn that.\n\n410\n00:22:15.220 --> 00:22:18.888\nThere's actually some really cool stuff\nyou can do with HSRP behind the scenes.\n\n411\n00:22:18.888 --> 00:22:22.250\nBut for CCNA, they want us to know\nthe basics, which is what we've seen here.\n\n412\n00:22:22.250 --> 00:22:26.590\nI need to configure a priority if I want\none router to be the dominant router.\n\n413\n00:22:26.590 --> 00:22:30.830\nAnd I need to configure preemption if I\nwant it to take over after it comes back\n\n414\n00:22:30.830 --> 00:22:33.205\nonline, which it will do automatically.\n\n415\n00:22:33.205 --> 00:22:35.428\nAnd remember,\nif you've got more than two routers, so\n\n416\n00:22:35.428 --> 00:22:36.715\nlike what Wes was asking about.\n\n417\n00:22:36.715 --> 00:22:38.330\nIf I've got four or five routers,\n\n418\n00:22:38.330 --> 00:22:42.685\nI need to set priorities on each one to\nset up my hierarchy, my pecking order.\n\n419\n00:22:42.685 --> 00:22:46.785\nI might have five routers and I want one\nparticular router to be the main active\n\n420\n00:22:46.785 --> 00:22:48.720\nand one particular one to be the standby.\n\n421\n00:22:48.720 --> 00:22:51.355\nAnd then the other three routers,\nI might have priorities in there, too.\n\n422\n00:22:51.355 --> 00:22:54.040\nLike from the best down to\nthe worst router or whatever.\n\n423\n00:22:54.040 --> 00:22:56.500\nYou need to go in and\nset those priorities to influence that.\n\n424\n00:22:56.500 --> 00:23:01.569\nOtherwise, it's a first come, first served\nbattle royal anytime there's a failure.\n\n425\n00:23:01.569 --> 00:23:04.455\n&gt;&gt; Alright, Don, now I know we're pushing\nthe envelope on the clock over there.\n\n426\n00:23:04.455 --> 00:23:06.519\nBut is that something you\ncould show us real quick?\n\n427\n00:23:06.519 --> 00:23:08.085\n&gt;&gt; Yeah, I can jump into that.\n\n428\n00:23:08.085 --> 00:23:11.749\nSo we've already got HSRP configured for\nour VLAN.\n\n429\n00:23:11.749 --> 00:23:13.535\nLet me get back into this console here.\n\n430\n00:23:13.535 --> 00:23:17.525\nSo, right now, when I do a show standby,\nI've got just one standby group.\n\n431\n00:23:17.525 --> 00:23:21.130\nStandby Group 1, there it is,\nand it's on interface VLAN 1.\n\n432\n00:23:21.130 --> 00:23:25.879\nIf I wanna configure a second HSRP group,\nor combined failover or whatever,\n\n433\n00:23:25.879 --> 00:23:28.150\nthe decision is really easy to make.\n\n434\n00:23:28.150 --> 00:23:30.130\nAll you do is you get into the interface.\n\n435\n00:23:30.130 --> 00:23:34.297\nSo I'm gonna get into int vlan 2,\nand I'm gonna say standby.\n\n436\n00:23:34.297 --> 00:23:40.397\nAnd if i say standby 1,\nand then ip 192.168.2.1.\n\n437\n00:23:40.397 --> 00:23:46.717\nIf I do this, I'm joining\nthe same standby group as VLAN 1.\n\n438\n00:23:46.717 --> 00:23:50.590\nAnd so now if VLAN 1 fails over,\nVLAN 2 will fail over alongside it.\n\n439\n00:23:50.590 --> 00:23:52.382\nThey're gonna go together.\n\n440\n00:23:52.382 --> 00:23:55.762\nIf I wanna keep them separate like\nyou normally would on a switch,\n\n441\n00:23:55.762 --> 00:23:59.510\nthen I wanna do a different standby group,\nand I'm in the habit of this,\n\n442\n00:23:59.510 --> 00:24:01.309\nis that I just use the VLAN number.\n\n443\n00:24:01.309 --> 00:24:03.359\nSo if it's VLAN 2, I do standby Group 2.\n\n444\n00:24:03.359 --> 00:24:04.829\nIt's the way I like to do it.\n\n445\n00:24:04.829 --> 00:24:06.642\nSo then it just makes it\neasier to troubleshoot and\n\n446\n00:24:06.642 --> 00:24:07.641\nfind things in the future.\n\n447\n00:24:07.641 --> 00:24:11.706\nSo I can say standby 2 ip 192.168.2.1.\n\n448\n00:24:11.706 --> 00:24:16.053\nNow VLAN 1 could failover and\nVLAN 2 could stay active right here, and\n\n449\n00:24:16.053 --> 00:24:17.440\nit wouldn't matter.\n\n450\n00:24:17.440 --> 00:24:21.800\nAll right, so we can just run that,\nand it looks like we got an error.\n\n451\n00:24:21.800 --> 00:24:25.158\nFHRP, which is HSRP.\n\n452\n00:24:25.158 --> 00:24:28.100\nGroup not consistent with already\nconfigured groups on the switch stack.\n\n453\n00:24:28.100 --> 00:24:29.530\nAll right, so we got an error.\n\n454\n00:24:29.530 --> 00:24:31.660\nAnd what this error means,\nif you encounter it.\n\n455\n00:24:31.660 --> 00:24:33.100\nYou shouldn't encounter it.\n\n456\n00:24:33.100 --> 00:24:35.740\nI skipped a step which\nis why I encountered it.\n\n457\n00:24:35.740 --> 00:24:37.896\nWhat's going on here is I\ntold that standby Group 2.\n\n458\n00:24:37.896 --> 00:24:41.250\nOr I'd probably get the same if I\ndid standby Group 1, wouldn't I?\n\n459\n00:24:41.250 --> 00:24:42.180\nLet me do it again.\n\n460\n00:24:42.180 --> 00:24:46.734\nThe problem is, remember from\nearlier in the part one episode.\n\n461\n00:24:46.734 --> 00:24:50.216\nI talked about how HSRP is\nconfigured on a per interface basis.\n\n462\n00:24:50.216 --> 00:24:52.014\nAnd when you set a version number,\n\n463\n00:24:52.014 --> 00:24:55.320\nthe version number is on\na per interface basis, right?\n\n464\n00:24:55.320 --> 00:24:57.830\nExcept for the version number,\nit's not tied to a group, is it?\n\n465\n00:24:57.830 --> 00:25:01.770\nThe version number is separate,\nuse the standby version command.\n\n466\n00:25:01.770 --> 00:25:05.290\nStandby version 1 or standby version 2,\nyou never specify group number.\n\n467\n00:25:05.290 --> 00:25:09.245\nSo the problem here is this interface\nis defaulting to version 1, and\n\n468\n00:25:09.245 --> 00:25:11.650\nmy other interface is in version 2.\n\n469\n00:25:11.650 --> 00:25:16.174\nSo if I create a standby Group 1 here and\nI have a standby group 1 on the other.\n\n470\n00:25:16.174 --> 00:25:18.780\nOne's version 2 and one's version 1,\nand that's a conflict.\n\n471\n00:25:18.780 --> 00:25:20.810\nThat's where we get\nthe inconsistent configuration, and\n\n472\n00:25:20.810 --> 00:25:22.060\nthat's why the warning is coming up.\n\n473\n00:25:22.060 --> 00:25:25.920\nSo what I need to do is actually\nmake this, this is VLAN 2.\n\n474\n00:25:25.920 --> 00:25:27.892\nI need to make it version 2 also.\n\n475\n00:25:27.892 --> 00:25:35.520\nAnd then I can say standby 1 if I wanna\nbe in the same group right there.\n\n476\n00:25:35.520 --> 00:25:37.250\nLet me just remove that, or\n\n477\n00:25:37.250 --> 00:25:42.050\nI can go into standby 2 if I\nwant it to be in its own group.\n\n478\n00:25:42.050 --> 00:25:44.500\nOn a router,\nI typically put them together.\n\n479\n00:25:44.500 --> 00:25:46.270\nOn a switch,\nI typically keep them separate.\n\n480\n00:25:46.270 --> 00:25:48.643\nNow, that's not a hard and fast rule.\n\n481\n00:25:48.643 --> 00:25:50.469\nYou have to use what's\nsuitable in your environment.\n\n482\n00:25:50.469 --> 00:25:53.788\nBut, for me, that's what normally\nmeets the needs of my requirements.\n\n483\n00:25:53.788 --> 00:25:58.063\nAnd when I'm done with that in a moment,\nthat's gonna come up and\n\n484\n00:25:58.063 --> 00:26:00.104\ngo active for that interface.\n\n485\n00:26:00.104 --> 00:26:01.578\nAnd if I do a show standby,\n\n486\n00:26:01.578 --> 00:26:05.900\nwhat I'll actually see are the two\ndifferent groups now, all right?\n\n487\n00:26:05.900 --> 00:26:07.620\nAnd, I should have waited\njust a little longer.\n\n488\n00:26:07.620 --> 00:26:09.100\nSee it just went active,\nso let me do that again.\n\n489\n00:26:09.100 --> 00:26:10.660\nI'll do a show standby.\n\n490\n00:26:10.660 --> 00:26:14.677\nAnd what I can see is that for\nGroup 1, I'm active.\n\n491\n00:26:14.677 --> 00:26:18.230\nBecause we've got the higher priority and\nwe're set to pre-emp.\n\n492\n00:26:18.230 --> 00:26:19.640\nSo this one's active.\n\n493\n00:26:19.640 --> 00:26:23.408\nAnd then for Group 2,\nwe're active because we're the only one.\n\n494\n00:26:23.408 --> 00:26:25.960\n[LAUGH] And so we're active and\nup and running.\n\n495\n00:26:25.960 --> 00:26:29.170\nAnd if I go into int vlan 1 and\n\n496\n00:26:29.170 --> 00:26:32.818\nshut it down, VLAN 1 is gonna\nfailover to the other guy, right?\n\n497\n00:26:34.020 --> 00:26:35.427\nBut what about VLAN 2?\n\n498\n00:26:35.427 --> 00:26:37.540\nVLAN 2 is gonna be left alone.\n\n499\n00:26:37.540 --> 00:26:39.860\nSo when I do a show standby, and\n\n500\n00:26:39.860 --> 00:26:43.840\nI take a look at that output,\nI'll see where VLAN 1 is now dead.\n\n501\n00:26:43.840 --> 00:26:46.445\nIt's in the initialization state.\n\n502\n00:26:46.445 --> 00:26:49.010\nAnd then if I look at VLAN 2,\nit's still active.\n\n503\n00:26:49.010 --> 00:26:50.288\nThey're now able to failover separately.\n\n504\n00:26:50.288 --> 00:26:53.147\nSo the way we control whether\nthey failover together or\n\n505\n00:26:53.147 --> 00:26:55.480\nseparate is simply by the group number.\n\n506\n00:26:55.480 --> 00:26:58.360\nIf you share the group number,\nthey're gonna failover together.\n\n507\n00:26:58.360 --> 00:27:00.530\nIf you separate group numbers,\nthey failover separately.\n\n508\n00:27:00.530 --> 00:27:02.430\nIt gives you complete\ncontrol of what you want.\n\n509\n00:27:02.430 --> 00:27:05.590\n&gt;&gt; Don, we appreciate you taking the time\nto fit that little bit of extra in there.\n\n510\n00:27:05.590 --> 00:27:07.276\nNow, I know I already threatened\nhim once with the time plot.\n\n511\n00:27:07.276 --> 00:27:07.856\n&gt;&gt; [LAUGH]\n&gt;&gt; But\n\n512\n00:27:07.856 --> 00:27:10.988\nwe wouldn't be doing you guys much\njustice before we sign off if I\n\n513\n00:27:10.988 --> 00:27:15.048\ndon't give you at least another chance to\nimpart some words of wisdom before we go.\n\n514\n00:27:15.048 --> 00:27:18.888\n&gt;&gt; All right, what we've seen in part one\nand part two is really all you need for\n\n515\n00:27:18.888 --> 00:27:21.900\nHSRP out there in the real world\nto make it really powerful.\n\n516\n00:27:21.900 --> 00:27:23.860\nIt's not a hard thing to configure.\n\n517\n00:27:23.860 --> 00:27:26.600\nIt's just four or five commands\naltogether to get it up and going.\n\n518\n00:27:26.600 --> 00:27:28.570\nThere is a lot more you can do with it,\nthough.\n\n519\n00:27:28.570 --> 00:27:32.370\nAnd for those of you that go on to CCNP,\nyou'll see some of that in the CCNP route.\n\n520\n00:27:32.370 --> 00:27:34.359\nOr actually,\nI think most of it's in CCNP switch,\n\n521\n00:27:34.359 --> 00:27:35.810\nwhere you see the really cool stuff.\n\n522\n00:27:35.810 --> 00:27:39.640\nSo definitely check that out, but for\nthe most part, it's easy to configure.\n\n523\n00:27:39.640 --> 00:27:43.968\nIt is Cisco proprietary so you gotta buy\nmore Cisco stuff, it's old point, I guess.\n\n524\n00:27:43.968 --> 00:27:47.310\nBut once you've got that,\neasy to deploy and just a great solution.\n\n525\n00:27:47.310 --> 00:27:49.610\n&gt;&gt; Well, Don, we appreciate you\nbeing here in the studio with us.\n\n526\n00:27:49.610 --> 00:27:51.330\nAnd we appreciate you,\nthe viewer, watching.\n\n527\n00:27:51.330 --> 00:27:54.208\nWe're gonna go ahead and\nsign out here for ITProTV.\n\n528\n00:27:54.208 --> 00:27:55.745\nI've been your host, Wes Bryan.\n\n529\n00:27:55.745 --> 00:27:56.596\n&gt;&gt; And I'm Don Pezet.\n\n530\n00:27:56.596 --> 00:27:59.096\n&gt;&gt; And we'll see you next time.\n\n531\n00:27:59.096 --> 00:28:05.011\n[MUSIC]\n\n532\n00:28:05.011 --> 00:28:05.950\n&gt;&gt; Thank you for watching ITProTV.\n\n",
          "vimeoId": "188021726"
        },
        {
          "description": "In this episode, Wes and Don discuss access control lists (ACLs). They take a look at standard ACLs while explaining the benefits and drawbacks of using this type of ACL. Finally they will introduce extended ACLs.",
          "length": "1965",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/cisco-ccna200105/cisco-ccna200105-4-2-1-access_control_lists-101816-1.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/cisco-ccna200105/cisco-ccna200105-4-2-1-access_control_lists-101816-1-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/cisco-ccna200105/cisco-ccna200105-4-2-1-access_control_lists-101816-1-sm.jpg",
          "title": "Access Control Lists",
          "transcript": "WEBVTT\n\n1\n00:00:00.220 --> 00:00:07.377\n[NOISE]\n\n2\n00:00:07.377 --> 00:00:08.965\n[MUSIC]\n\n3\n00:00:08.965 --> 00:00:10.440\n&gt;&gt; You're watching IT Pro TV.\n\n4\n00:00:12.380 --> 00:00:15.200\n&gt;&gt; Welcome back to another exciting\nepisode here at IT Pro TV.\n\n5\n00:00:15.200 --> 00:00:16.430\nI'm your host, Wes Bryan.\n\n6\n00:00:16.430 --> 00:00:19.450\nAnd in today's episode, coming back\nat you with more CISCO routing and\n\n7\n00:00:19.450 --> 00:00:22.350\nswitching, infrastructure services and\njoining me in the studios for\n\n8\n00:00:22.350 --> 00:00:24.920\nthis very endeavor,\nis none other than Mr. Don Pezet.\n\n9\n00:00:24.920 --> 00:00:25.920\nDon, how you doing,sir?\n\n10\n00:00:25.920 --> 00:00:28.540\n&gt;&gt; I'm doing great, Wes, ready to dive\nright back into the world of Cisco.\n\n11\n00:00:28.540 --> 00:00:32.170\nAnd in this episode, what we're gonna\nbe tackling, are access control lists.\n\n12\n00:00:32.170 --> 00:00:35.540\nNow, most of you should have\nalready completed the CCENT\n\n13\n00:00:35.540 --> 00:00:36.650\ntraining at this point.\n\n14\n00:00:36.650 --> 00:00:39.540\nAnd back in the CCENT,\nwe learned about access control lists,\n\n15\n00:00:39.540 --> 00:00:43.560\na method of filtering traffic\nthat passes through our network,\n\n16\n00:00:43.560 --> 00:00:46.940\nit's kinda like using a router as\na firewall, right, picking and\n\n17\n00:00:46.940 --> 00:00:49.660\nchoosing what traffic we allow through and\nwhat traffic we want to block.\n\n18\n00:00:49.660 --> 00:00:51.660\nSo it's a neat functionality.\n\n19\n00:00:51.660 --> 00:00:54.960\nBut what we'll learned in\nCCENT was pretty limited.\n\n20\n00:00:54.960 --> 00:00:58.180\nWe were focused on standard\naccess control lists,\n\n21\n00:00:58.180 --> 00:01:01.370\nlists that filter traffic\nbased on a source IP address.\n\n22\n00:01:01.370 --> 00:01:04.110\nWell, in this episode,\nwe're gonna be taking a look at extended\n\n23\n00:01:04.110 --> 00:01:06.820\naccess control lists, and\nthese are a little more powerful.\n\n24\n00:01:06.820 --> 00:01:11.090\nThese will just filter all sorts of crazy\nthings, not just source IP, but also\n\n25\n00:01:11.090 --> 00:01:15.710\ndestination IP, port numbers, protocol,\nwe can filter based on a schedule.\n\n26\n00:01:15.710 --> 00:01:18.500\nThere's all sorts of crazy things\nyou can do with an extended ACL.\n\n27\n00:01:18.500 --> 00:01:21.910\nThey're very powerful which also\nmeans they're more complex,\n\n28\n00:01:21.910 --> 00:01:23.780\na little bit harder to use.\n\n29\n00:01:23.780 --> 00:01:28.440\nBut we'll see there's actually a number\nof great scenarios we can use of this.\n\n30\n00:01:28.440 --> 00:01:30.540\nAnd you'll find in real\nlife that a lot of times,\n\n31\n00:01:30.540 --> 00:01:35.180\nyou use extended ACLs more than standard\nACLs just because of that extra power.\n\n32\n00:01:35.180 --> 00:01:36.810\nAll right, so\nthat's kind of what's in our agenda today.\n\n33\n00:01:36.810 --> 00:01:39.710\nAnd what I wanna do just here at the\nbeginning is, I know I said we're gonna\n\n34\n00:01:39.710 --> 00:01:43.450\ncover extended ACLs, but I wanna start off\nwith standard ACLs, just do a quick recap,\n\n35\n00:01:43.450 --> 00:01:46.420\nso we all remember exactly how\naccess control lists work and then\n\n36\n00:01:46.420 --> 00:01:50.380\nget a chance to see how we can extend that\nfunctionality and make it more powerful.\n\n37\n00:01:50.380 --> 00:01:52.410\nLet's start by taking a look\nat my network topology.\n\n38\n00:01:52.410 --> 00:01:55.060\nSo, I've got a little network\nmap pulled up here and\n\n39\n00:01:55.060 --> 00:01:58.110\nthis the topology we've been using\nthroughout most of the show.\n\n40\n00:01:58.110 --> 00:02:01.473\nBasically, I've got router one\nparked over here on the left and\n\n41\n00:02:01.473 --> 00:02:06.159\nit's on the 192.168.0 network and\nit's on the 192.168.1 network.\n\n42\n00:02:06.159 --> 00:02:11.991\nAnd then up here in-between routers 2 and\n4, I got the 192.168.2 network.\n\n43\n00:02:11.991 --> 00:02:15.688\nNow router 4 is 192.168.2.4, so\n\n44\n00:02:15.688 --> 00:02:19.775\nthat's the IP dress for\nrouter 4 on this network.\n\n45\n00:02:19.775 --> 00:02:23.352\nAnd if router 1 wants\nto get to that network,\n\n46\n00:02:23.352 --> 00:02:28.100\nit's gotta pass through router\n2 to get over to router 4.\n\n47\n00:02:28.100 --> 00:02:30.830\nThat's the path it has to\nfollow through the network.\n\n48\n00:02:30.830 --> 00:02:32.600\nThat puts router 2 in a good position,\n\n49\n00:02:32.600 --> 00:02:37.610\nbecause it's in between the two routers,\nand as a result, it can filter traffic.\n\n50\n00:02:37.610 --> 00:02:42.140\nSo, maybe I wanna control who's\nallowed to get to router 4.\n\n51\n00:02:42.140 --> 00:02:44.300\nMaybe I don't want rRouter\n1 to get to rRouter 4.\n\n52\n00:02:44.300 --> 00:02:47.720\nI might want router 3 to get to router 4,\nbut not router 1.\n\n53\n00:02:47.720 --> 00:02:51.760\nSo I can use an access control list\nright here on router 2 to block that.\n\n54\n00:02:51.760 --> 00:02:54.320\nNow remember when we create\naccess control lists,\n\n55\n00:02:54.320 --> 00:02:57.880\nwe always have to be\nthinking about direction.\n\n56\n00:02:57.880 --> 00:03:01.770\nAccess control lists apply in a direction,\neither in or out.\n\n57\n00:03:01.770 --> 00:03:05.400\nSo when I filter router\n1 going to router 4,\n\n58\n00:03:05.400 --> 00:03:07.440\nI need to think about that traffic flow.\n\n59\n00:03:07.440 --> 00:03:09.920\nLet's say it's ping or telnet.\n\n60\n00:03:09.920 --> 00:03:13.120\nWe'll just say, well I guess any\nof them really, we'll do telnet.\n\n61\n00:03:13.120 --> 00:03:16.931\nSo if I'm telnetting from\nrouter 1 to router 4,\n\n62\n00:03:16.931 --> 00:03:21.480\nmy packets will go in this\ninterface of router 2.\n\n63\n00:03:21.480 --> 00:03:23.430\nThey'll get routed to\nthe other interface and\n\n64\n00:03:23.430 --> 00:03:26.680\nthey'll go out this other\ninterface on router 2.\n\n65\n00:03:26.680 --> 00:03:29.140\nSo those are the two places\nwhere I can filter it.\n\n66\n00:03:29.140 --> 00:03:34.660\nI can filter it on the way in or filter it\non the way out, now which one do I pick?\n\n67\n00:03:34.660 --> 00:03:36.420\nCuz at the end of the day,\ndoes it really matter?\n\n68\n00:03:36.420 --> 00:03:38.620\nDo I really care where I filter it?\n\n69\n00:03:38.620 --> 00:03:41.110\nActually it does make a difference,\nbecause\n\n70\n00:03:41.110 --> 00:03:45.942\nwhen that packet hits this interface\nhere on router 2, it's coming in and\n\n71\n00:03:45.942 --> 00:03:51.230\nthen once it comes in,\nI have to decode the packet.\n\n72\n00:03:51.230 --> 00:03:53.380\nI've got to run it against\nmy routing table and\n\n73\n00:03:53.380 --> 00:03:55.370\nfigure out which route matches it best.\n\n74\n00:03:55.370 --> 00:04:00.380\nWhen I find the correct route, I've got to\nthen switch it over to the other interface\n\n75\n00:04:00.380 --> 00:04:02.490\nand then shoot it out\nthat other interface.\n\n76\n00:04:02.490 --> 00:04:04.130\nWhen I shoot it out the other interface,\n\n77\n00:04:04.130 --> 00:04:07.750\nI've gotta recalculate the layer two\nheader, put a new CRC on the thing and\n\n78\n00:04:07.750 --> 00:04:10.520\nthen chuck it out that\ninterface out the other side.\n\n79\n00:04:10.520 --> 00:04:11.670\nThe router has to do a lot of work.\n\n80\n00:04:11.670 --> 00:04:14.790\nAnd then if it goes to\nhit this interface and\n\n81\n00:04:14.790 --> 00:04:17.260\nI filter it there,\nI throw that packet away.\n\n82\n00:04:17.260 --> 00:04:20.050\nI just did all of that work for\npacket that I just threw away.\n\n83\n00:04:21.120 --> 00:04:23.520\nIf I had filtered it when it came in,\n\n84\n00:04:23.520 --> 00:04:25.780\nthen I wouldn't have run it\nagainst the routing table.\n\n85\n00:04:25.780 --> 00:04:28.240\nI wouldn't have had to have\nrebuild the layer two header.\n\n86\n00:04:28.240 --> 00:04:30.370\nI wouldn't have had to\ndo all that crazy stuff.\n\n87\n00:04:30.370 --> 00:04:32.430\nI just look at the packet,\nI have to decode it.\n\n88\n00:04:32.430 --> 00:04:33.060\nYou gotta do that.\n\n89\n00:04:33.060 --> 00:04:37.210\nYou have to be able to look at the packet\nand then I throw it away and that's it.\n\n90\n00:04:37.210 --> 00:04:41.035\nSo performance is usually gonna\nbe better on incoming ACLs,\n\n91\n00:04:41.035 --> 00:04:43.291\nthan outgoing ACLs if you can do it.\n\n92\n00:04:43.291 --> 00:04:46.349\nWe'll see later on there some scenarios\nwhere you can't do an incoming,\n\n93\n00:04:46.349 --> 00:04:50.110\nyou have to do an outgoing and that's\nfine, right, you've got the capability.\n\n94\n00:04:50.110 --> 00:04:52.590\nBut if you've got the choice,\nyou've got the flexibility,\n\n95\n00:04:52.590 --> 00:04:56.060\nincoming ACLs normally perform\nbetter than outgoing ACLs.\n\n96\n00:04:56.060 --> 00:04:58.023\n&gt;&gt; And Don, in these standard ACLs,\n\n97\n00:04:58.023 --> 00:05:01.870\nwhat do we use as our criteria\non how we're gonna filter it.\n\n98\n00:05:01.870 --> 00:05:03.600\nAll right, so\nstandard ACLs are super basic.\n\n99\n00:05:03.600 --> 00:05:06.500\nAll you've got is source IP address,\nthat's it.\n\n100\n00:05:06.500 --> 00:05:08.340\nYou can't filter based on destination IP.\n\n101\n00:05:08.340 --> 00:05:13.050\nYou can't filter based on protocol or\nport, all you have is source IP.\n\n102\n00:05:13.050 --> 00:05:17.800\nSo if I wanna filter the traffic, I need\nto know what router 1's IP address is, so\n\n103\n00:05:17.800 --> 00:05:21.730\nthat when I see traffic coming\nin this interface from that IP,\n\n104\n00:05:21.730 --> 00:05:23.270\nI can block it, all right.\n\n105\n00:05:23.270 --> 00:05:27.900\nNow here's where choosing\nthe interface comes in handy, right.\n\n106\n00:05:27.900 --> 00:05:31.790\nIf I start blocking rRouter 1's\ntraffic as it comes in this interface,\n\n107\n00:05:31.790 --> 00:05:35.910\nrouter 1 will no longer be able\nto get to router 2 either or\n\n108\n00:05:35.910 --> 00:05:37.920\nanybody else on the other\nside of router 2.\n\n109\n00:05:37.920 --> 00:05:39.840\nIt's a little aggressive.\n\n110\n00:05:39.840 --> 00:05:42.480\nVersus if I blocked it on the way out,\n\n111\n00:05:42.480 --> 00:05:45.410\nrouter 1 would still be able to get to\nrouter 2, and router 1 would still be able\n\n112\n00:05:45.410 --> 00:05:48.100\nto get to any other networks that\nmight be attached to router 2.\n\n113\n00:05:48.100 --> 00:05:50.880\nNow, I don't have any others, but if there\nwere, it'd be able to get to them and\n\n114\n00:05:50.880 --> 00:05:53.250\nit would just be blocked going\nto the 192.168.2 network.\n\n115\n00:05:54.400 --> 00:05:58.450\nSo where I place the ACL is also gonna\ndetermine how restrictive it is.\n\n116\n00:05:58.450 --> 00:06:01.480\nAnd that 's another challenge we have with\nstandard ACLs, because they're so basic,\n\n117\n00:06:01.480 --> 00:06:02.800\nwe don't get a lot of flexibility.\n\n118\n00:06:02.800 --> 00:06:05.430\n&gt;&gt; Now Don, I think I could kind of\nsee the benefits of the standard ACL.\n\n119\n00:06:05.430 --> 00:06:07.140\nLooks like it's very easy to set up,\n\n120\n00:06:07.140 --> 00:06:10.350\nmaybe even easy to find\na specific entry in there.\n\n121\n00:06:10.350 --> 00:06:11.880\nWhat are some of the limitations?\n\n122\n00:06:11.880 --> 00:06:14.420\nWhat are the drawbacks\nto using a standard ACL?\n\n123\n00:06:14.420 --> 00:06:17.440\n&gt;&gt; The main limitation is that you\njust have source IP and that's it.\n\n124\n00:06:17.440 --> 00:06:20.950\nYou've got no other flexibility,\nno other control or granular control.\n\n125\n00:06:20.950 --> 00:06:23.086\nAnd that's what we're gonna\nget on the extended ACLs,\n\n126\n00:06:23.086 --> 00:06:25.910\nwe have just a ton of different\nthings that we can filter on.\n\n127\n00:06:25.910 --> 00:06:28.240\nBut let's start with the basics,\nand then we'll build up from there.\n\n128\n00:06:28.240 --> 00:06:31.740\nSo I'm gonna jump over to router 2,\nwell let's start on router 1.\n\n129\n00:06:31.740 --> 00:06:34.850\nLet's make sure that router 1 can\nactually get to router 4 first before I\n\n130\n00:06:34.850 --> 00:06:35.950\ntry and filter it.\n\n131\n00:06:35.950 --> 00:06:37.610\nAlways a good idea, even on the exam.\n\n132\n00:06:37.610 --> 00:06:40.880\nMake sure you can actually make the\nconnection before you try and filter it.\n\n133\n00:06:40.880 --> 00:06:44.520\nSo I'm gonna jump over to router 1 and\n\n134\n00:06:44.520 --> 00:06:46.960\nI got it parked around here somewhere,\nthere we go.\n\n135\n00:06:46.960 --> 00:06:53.070\nSo here's router 1 and if I just\ntake a look at my interfaces here,\n\n136\n00:06:53.070 --> 00:06:56.070\nI've got 192.168.0.1 and\nI've got 192.168.1.1.\n\n137\n00:06:56.070 --> 00:07:00.460\nThat's the IP that's closest to router 4.\n\n138\n00:07:00.460 --> 00:07:03.920\nAnd so if I do a telnet to 192.168.2.5,\n\n139\n00:07:03.920 --> 00:07:08.910\nright, I'm going through router 2o and\ngoing over to router 4.\n\n140\n00:07:08.910 --> 00:07:11.250\nWhen I do that, I get in, right?\n\n141\n00:07:11.250 --> 00:07:14.390\nWell, I at least get a log in\nprompt which means I did connect.\n\n142\n00:07:14.390 --> 00:07:18.850\nI can do a log in and do a show user and\nI can see that I am logged in and\n\n143\n00:07:18.850 --> 00:07:20.620\nthat my source is 192.168.1.1, right?\n\n144\n00:07:22.400 --> 00:07:25.410\nSo that's who I am when I\nconnect to router 4, and\n\n145\n00:07:25.410 --> 00:07:27.520\nI am able to do it, all right?\n\n146\n00:07:27.520 --> 00:07:28.780\nSo let me get out of that.\n\n147\n00:07:28.780 --> 00:07:32.560\nI'm gonna jump over to router 2,\nand I'm gonna filter it, all right?\n\n148\n00:07:32.560 --> 00:07:36.686\nSo on router 2, the first thing I need\nto do is create an access control list.\n\n149\n00:07:36.686 --> 00:07:41.658\nAnd when you create an access list,\nthe command we use is access-list\n\n150\n00:07:41.658 --> 00:07:46.377\nfollowed by a number and that number\nis gonna determine what type of\n\n151\n00:07:46.377 --> 00:07:51.432\naccess control list we have and\na standard ACL like we saw back in CCENT,\n\n152\n00:07:51.432 --> 00:07:56.770\nis gonna start with 1 through 99 or\n1300 through 1999, right?\n\n153\n00:07:56.770 --> 00:07:59.868\nThe original range is 1 through 99 But\ncustomers were asking Cisco for\n\n154\n00:07:59.868 --> 00:08:03.220\nmore numbers, cuz they didn't wanna\nreuse numbers on different routers, so\n\n155\n00:08:03.220 --> 00:08:05.290\nthey could keep their records straight.\n\n156\n00:08:05.290 --> 00:08:09.890\nAnd so Cisco added another block of\n700 numbers, that covers most people.\n\n157\n00:08:09.890 --> 00:08:11.980\nAnd so that's where we get\nthe two different ranges.\n\n158\n00:08:11.980 --> 00:08:15.550\nSo I can pick either of those ranges and\nI'll be fine.\n\n159\n00:08:15.550 --> 00:08:18.070\nI'm just gonna do access-list 1,\nand I'll start right there.\n\n160\n00:08:18.070 --> 00:08:19.950\nSo it's gonna be a standard ACL.\n\n161\n00:08:19.950 --> 00:08:22.610\nNow as soon as I say that\nI'm doing a standard ACL,\n\n162\n00:08:22.610 --> 00:08:24.740\nmy commands start to get limited.\n\n163\n00:08:24.740 --> 00:08:27.300\nThere's less and\nless things that I'm able to type.\n\n164\n00:08:27.300 --> 00:08:30.720\nThe next thing I need to specify is\nwhether I'm permitting or denying.\n\n165\n00:08:30.720 --> 00:08:33.570\nAm I allowing the traffic to pass through,\nor am I blocking it?\n\n166\n00:08:33.570 --> 00:08:37.660\nI want to block router one, right,\nso I'm gonna be doing a deny.\n\n167\n00:08:37.660 --> 00:08:42.790\nThere is a third command there, remark is\nif I wanna put a not in the access list.\n\n168\n00:08:42.790 --> 00:08:44.370\nThe line doesn't actually do anything.\n\n169\n00:08:44.370 --> 00:08:46.470\nIt's just a not, like a record,\nI can put in there.\n\n170\n00:08:48.010 --> 00:08:51.800\nKeep in mind that when build this what\nwe're actually building is a list,\n\n171\n00:08:51.800 --> 00:08:56.770\nan access control list in ACL which is\nmade up of access controls entries or\n\n172\n00:08:56.770 --> 00:08:57.890\nACE's.\n\n173\n00:08:57.890 --> 00:09:01.740\nSo what I'm typing right now is\nactually gonna create two things.\n\n174\n00:09:01.740 --> 00:09:06.670\nIt's gonna create the ACL because ACL1\ndoesn't exist and then it's gonna create\n\n175\n00:09:06.670 --> 00:09:11.340\nthe first entry, the first access control\nentry in the access control list.\n\n176\n00:09:11.340 --> 00:09:15.820\nSo this is gonna create both the ACL and\nthe ACE and so\n\n177\n00:09:15.820 --> 00:09:22.550\nI'm gonna say access-list1 deny and then\nI need to specify who I'm going to deny.\n\n178\n00:09:22.550 --> 00:09:26.390\nAnd I can deny any which\nwould block everybody.\n\n179\n00:09:26.390 --> 00:09:27.740\nThat's a really useful one right there.\n\n180\n00:09:27.740 --> 00:09:29.240\nIt's gonna kill my port.\n\n181\n00:09:29.240 --> 00:09:35.030\nOr, I can specify a particular host,\nby name or IP, or I can specify a network.\n\n182\n00:09:36.160 --> 00:09:39.360\nMaybe I want to block just Router 1.\n\n183\n00:09:39.360 --> 00:09:46.650\nSo I could say, host 192.168.1.1,\nand that would just block Router 1.\n\n184\n00:09:46.650 --> 00:09:53.200\nOr, maybe I wanna block\nthe entire 192.168.1 network.\n\n185\n00:09:54.360 --> 00:09:57.590\nOr I know on the other side of\nRouter 1 is the 192.168.0 network,\n\n186\n00:09:57.590 --> 00:09:59.590\nmaybe I wanna block that whole network,\nright?\n\n187\n00:09:59.590 --> 00:10:01.270\nIf I go back to my topology,\n\n188\n00:10:01.270 --> 00:10:04.430\nthat's this network down here that\nkind of branches off of Router 1.\n\n189\n00:10:04.430 --> 00:10:05.900\nMaybe I wanna block that whole network.\n\n190\n00:10:05.900 --> 00:10:09.326\nWell, that's a Class C/24 network.\n\n191\n00:10:09.326 --> 00:10:13.120\nIf I wanna block that whole one,\nI can certainly do that, right?\n\n192\n00:10:13.120 --> 00:10:16.690\nAnd this is another thing\nwe learned in the CCNT,\n\n193\n00:10:16.690 --> 00:10:20.250\nis that we do that not with a subnet mask,\nbut with a wildcard mask.\n\n194\n00:10:20.250 --> 00:10:22.570\nNow, before I do that,\nI'm gonna finish this line right here.\n\n195\n00:10:22.570 --> 00:10:26.332\nSo, I just said access-list 1 deny host\n\n196\n00:10:26.332 --> 00:10:32.070\n192.168.1.1, that's\nblocking a single host and\n\n197\n00:10:32.070 --> 00:10:36.120\nthat made the access-list and\nthe access control entry.\n\n198\n00:10:36.120 --> 00:10:41.530\nIf you do a show access-list that'll show\nall your access lists on the screen, I\n\n199\n00:10:41.530 --> 00:10:44.740\njust want access list one, and if you have\nmore than one it can fill your screen up.\n\n200\n00:10:44.740 --> 00:10:48.360\nSo I'll show access list one and\nhere's the access list it just made, so\n\n201\n00:10:48.360 --> 00:10:54.590\nhere I've got standard IP access list one,\nthat's the ACL and then here's my first\n\n202\n00:10:54.590 --> 00:11:00.140\nentry, deny 192.168.1.1,\nsee how I dropped the host key word.\n\n203\n00:11:00.140 --> 00:11:03.890\nIn a standard ACL, it assumes that if\nyou put an IP with no wildcard mask,\n\n204\n00:11:03.890 --> 00:11:04.860\nthen you mean a host.\n\n205\n00:11:04.860 --> 00:11:08.230\nAnd so it shortened that down for\nme, all right?\n\n206\n00:11:08.230 --> 00:11:11.410\nNow I wanna add another\nentry to this list.\n\n207\n00:11:11.410 --> 00:11:16.990\nWell, the way we add another entry is we\njust type another access-list 1 command.\n\n208\n00:11:16.990 --> 00:11:20.900\nAnd whatever I type now is gonna be added\nafter the line that I put in, right?\n\n209\n00:11:20.900 --> 00:11:26.170\nNow, when I do this, I'm not creating\nthe ACL anymore, the ACL already exists.\n\n210\n00:11:26.170 --> 00:11:28.970\nSo, now all I'm creating is an ACE,\nan Axis Control Entry,\n\n211\n00:11:28.970 --> 00:11:30.690\nthat will go to the end of the list.\n\n212\n00:11:30.690 --> 00:11:35.610\nAnd, so, if I want to deny the entire\n192.168.0.0 network, well, you will see in\n\n213\n00:11:37.380 --> 00:11:41.980\nthe help here, I need to type in\nthe host name or network, right?\n\n214\n00:11:41.980 --> 00:11:46.930\nAnd I'm going to do 192.168.0.0 And\nthen if you do a question mark you'll\n\n215\n00:11:46.930 --> 00:11:51.310\nsee where it asks for\na wildcard mask, or wildcard bits.\n\n216\n00:11:52.450 --> 00:11:57.190\nNow remember, wildcard bits are a lot\ndifferent than a subnet mask.\n\n217\n00:11:57.190 --> 00:12:00.420\nIn a subnet mask,\nif we convert a subnet mask into binary,\n\n218\n00:12:00.420 --> 00:12:03.480\nyou've got 1s on the left And\n0s on the right.\n\n219\n00:12:03.480 --> 00:12:06.030\nAnd wherever you have a 1,\nthat's your network ID.\n\n220\n00:12:06.030 --> 00:12:08.050\nAnd wherever you have a 0,\nthat's your host ID, right?\n\n221\n00:12:08.050 --> 00:12:11.570\nThat's how we separate things out,\nand the 1s and 0s never mix.\n\n222\n00:12:11.570 --> 00:12:18.310\nBut in a wildcard mask, the 1s simply\nindicate bits that have to match.\n\n223\n00:12:18.310 --> 00:12:21.890\nAnd the 0s, actually, hang on,\nI got that one backwards, don't I?\n\n224\n00:12:21.890 --> 00:12:24.990\nThe 0s indicate bits that have to match.\n\n225\n00:12:24.990 --> 00:12:28.140\nAnd the 1s indicate bits\nthat can be a wildcard.\n\n226\n00:12:28.140 --> 00:12:29.800\nThey can be whatever, right?\n\n227\n00:12:29.800 --> 00:12:31.720\nSo when I wanna filter this out,\n\n228\n00:12:31.720 --> 00:12:37.170\nif I'm saying I need to match anybody\nwho starts with 192.168.0 All right?\n\n229\n00:12:37.170 --> 00:12:44.728\nAnybody who starts with 192.168.0, then\nwhat I would do is say 0.0.0.225, right?\n\n230\n00:12:44.728 --> 00:12:49.540\nSee how I've got the 0s,\nthat means these have to match.\n\n231\n00:12:49.540 --> 00:12:55.918\nSo any address that starts with\n192.168.0 and the last octet I did 255.\n\n232\n00:12:55.918 --> 00:12:58.420\nIf I were convert that to binary,\nwhat do I get?\n\n233\n00:12:58.420 --> 00:13:01.481\nEight ones, eight ones means\nthis entire octed, this last\n\n234\n00:13:01.481 --> 00:13:05.663\nvalue can be whatever it wants which is\ngood because that's the host ID, right?\n\n235\n00:13:05.663 --> 00:13:12.497\nAnd the host ID here would be 192.168.0.1\nall the way through 192.168.0.254, right?\n\n236\n00:13:12.497 --> 00:13:17.743\nSo that would all fall in that range, so\nthat's gonna block that entire network.\n\n237\n00:13:17.743 --> 00:13:21.850\nAll right now let's see how well\nwe all paid attention in CCNT.\n\n238\n00:13:22.890 --> 00:13:24.770\nMy list is kind of done\nthe way that I want it, right?\n\n239\n00:13:24.770 --> 00:13:30.860\nIf I do a show at access-list,\nI'll see I've got my two entries, right?\n\n240\n00:13:30.860 --> 00:13:33.355\nThe first one is blocking 192.168.1.1.\n\n241\n00:13:33.355 --> 00:13:37.107\nThe second one is blocking\nthe entire 192.168.0.0 network.\n\n242\n00:13:37.107 --> 00:13:38.654\nThat's exactly what I want.\n\n243\n00:13:38.654 --> 00:13:41.975\nI'm done right, access is finished.\n\n244\n00:13:41.975 --> 00:13:47.260\nWell be careful because remember what's in\nthe background in every access control,\n\n245\n00:13:47.260 --> 00:13:48.040\nstandard or extended.\n\n246\n00:13:48.040 --> 00:13:48.540\nIt doesn't matter,\n\n247\n00:13:48.540 --> 00:13:54.150\nevery access control list, there's\nan implicit deny all hidden at the end.\n\n248\n00:13:54.150 --> 00:13:57.300\nSo when traffic comes to the router\nit's going to run it against this ACL,\n\n249\n00:13:57.300 --> 00:14:00.600\nit's gonna start with the first line, and\nmove down to the second, and the third,\n\n250\n00:14:00.600 --> 00:14:04.130\nand the fourth and keep moving down\nthe line until it finds a match.\n\n251\n00:14:04.130 --> 00:14:08.290\nAnd when it matches, it's either gonna\npermit or deny based on the match.\n\n252\n00:14:08.290 --> 00:14:11.390\nOnce that's done it stops,\nit doesn't process the rest of the list.\n\n253\n00:14:11.390 --> 00:14:12.850\nBut if it goes through and\nit doesn't find a match,\n\n254\n00:14:12.850 --> 00:14:17.410\nit doesn't match any line,\nthen we hit the implicit deny all.\n\n255\n00:14:17.410 --> 00:14:21.060\nIn the implicit deny all, everything gets\ndenied, everything gets thrown away.\n\n256\n00:14:21.060 --> 00:14:24.190\nIf I were to put this list in place\nright now, I'd be in real trouble.\n\n257\n00:14:24.190 --> 00:14:28.220\nBecause I've got two denies and\nthen an implicit denial.\n\n258\n00:14:28.220 --> 00:14:29.630\nI'm not permitting any traffic.\n\n259\n00:14:29.630 --> 00:14:31.800\nThis list would block everything.\n\n260\n00:14:31.800 --> 00:14:36.290\nSo I need to add one more line\nto permit everybody else.\n\n261\n00:14:36.290 --> 00:14:37.380\nSo I'm gonna add one more.\n\n262\n00:14:37.380 --> 00:14:42.330\nI'll just do access-list 1 permit any.\n\n263\n00:14:42.330 --> 00:14:45.120\nAnd that's going to allow\neverybody else to pass through.\n\n264\n00:14:46.570 --> 00:14:51.520\nNow if I do a show access-list, now my\nlist is written the way that I want it.\n\n265\n00:14:51.520 --> 00:14:56.360\nI'm blocking the people I wanna block,\nand then permitting everybody else.\n\n266\n00:14:56.360 --> 00:14:59.710\nThis is what we want when we have\na really restrictive access list.\n\n267\n00:14:59.710 --> 00:15:03.010\nOne where we pick who we wanna block.\n\n268\n00:15:03.010 --> 00:15:04.860\nI guess it's gonna be less restrictive.\n\n269\n00:15:04.860 --> 00:15:07.420\nWe're blocking certain people and\nallowing everybody else.\n\n270\n00:15:07.420 --> 00:15:09.950\nIf you want to go the other way around,\nyou want to block everybody and\n\n271\n00:15:09.950 --> 00:15:13.620\nthen just permit certain people,\nthen I would do permit lines first.\n\n272\n00:15:13.620 --> 00:15:15.410\nAnd let the implicit denial do its work.\n\n273\n00:15:15.410 --> 00:15:16.490\nThat'd be fine.\n\n274\n00:15:16.490 --> 00:15:18.950\nBut the way I need it, I'm just\ntrying to block particular people, so\n\n275\n00:15:18.950 --> 00:15:22.650\nthis list is the one that makes a little\nbit more sense for me, all right.\n\n276\n00:15:22.650 --> 00:15:24.320\nNow am I done?\n\n277\n00:15:24.320 --> 00:15:27.840\nNo, in ACL by itself\ndoesn't do a darn thing.\n\n278\n00:15:27.840 --> 00:15:32.040\nWe have to attach it to an interface and\nthis is not attached to interface.\n\n279\n00:15:32.040 --> 00:15:37.650\nIf I do a show IP interface brief,\nI've got a couple of interfaces and\n\n280\n00:15:37.650 --> 00:15:41.260\nwe talked about the two different\ninterfaces that I could apply this right\n\n281\n00:15:41.260 --> 00:15:42.460\nback in my topology.\n\n282\n00:15:42.460 --> 00:15:48.437\nI could apply it AS the traffic goes into\nrouter 2 which would be in GI 1 slash 0.\n\n283\n00:15:48.437 --> 00:15:52.641\nGigabit ethernet at 1 slash 0 or I could\napply this traffic goes out Router 2 on\n\n284\n00:15:52.641 --> 00:15:56.490\nGigabit ethernet at 2 slash 0 But\nI wanted to do mine on the way in right.\n\n285\n00:15:56.490 --> 00:15:59.230\nSo I'm gonna filter on the way in GI 1/0.\n\n286\n00:15:59.230 --> 00:16:02.430\nSo I need to go and attach that,\nand get it put in place, all right.\n\n287\n00:16:02.430 --> 00:16:06.134\nSo let me jump over to that interface and\n\n288\n00:16:06.134 --> 00:16:10.070\nI'll get into gigabit ethernet 1/0.\n\n289\n00:16:10.070 --> 00:16:12.440\nAnd I'm gonna attach that access list,\nall right.\n\n290\n00:16:12.440 --> 00:16:15.580\nNow when we go to attach the access list,\nwhoops, I forgot a key word.\n\n291\n00:16:15.580 --> 00:16:22.160\nWe say IP Access-group and\nthen the number, right?\n\n292\n00:16:22.160 --> 00:16:25.230\nNow it's access-group\ninstead of access-list.\n\n293\n00:16:25.230 --> 00:16:27.510\nIt's a little confusing\nbecause of that but\n\n294\n00:16:27.510 --> 00:16:30.080\nthe reason is they had to use a different\ncommand so that you didn't accidentally\n\n295\n00:16:30.080 --> 00:16:32.680\nstart creating an access list\nright here in the interface and\n\n296\n00:16:32.680 --> 00:16:36.240\nthe group refers to a group of access\ncontrol entries which is the list, right?\n\n297\n00:16:36.240 --> 00:16:37.700\nIt's really just another word for list.\n\n298\n00:16:37.700 --> 00:16:40.750\nSo I'm gonna say ip access-group 1.\n\n299\n00:16:40.750 --> 00:16:43.050\nSo I'm applying that access list.\n\n300\n00:16:43.050 --> 00:16:46.620\nAnd then I need to give it a direction,\nin or out.\n\n301\n00:16:46.620 --> 00:16:50.270\nAm I filtering traffic on the way into\nthis interface or on the way out?\n\n302\n00:16:50.270 --> 00:16:52.790\nIf I do out it's\n\n303\n00:16:52.790 --> 00:16:57.410\nbackwards I'm saying I'm only filtering\ntraffic as it leaves this interface.\n\n304\n00:16:57.410 --> 00:17:02.200\nWell, Router 1 is gonna go in this\ninterface on its way to Router 4.\n\n305\n00:17:02.200 --> 00:17:07.710\nWhen Router 4 replies, the reply will\ncome back and go out that interface.\n\n306\n00:17:07.710 --> 00:17:11.490\nWell the reply,\nwill have a source IP address of Router 4,\n\n307\n00:17:11.490 --> 00:17:13.100\nnot a source address of Router 1.\n\n308\n00:17:13.100 --> 00:17:16.500\nOn the reply,\nthe destination will be Router 1, and so\n\n309\n00:17:16.500 --> 00:17:19.560\nmy ACL will never match,\nthe ACL won't work, right?\n\n310\n00:17:19.560 --> 00:17:22.911\nTraffic will still move through just fine,\nthe direction is really important,\n\n311\n00:17:22.911 --> 00:17:24.997\nyou get the direction wrong and\nit doesn't work.\n\n312\n00:17:24.997 --> 00:17:29.100\nAll right, and you can have two different\nACLs, one for in and one for out.\n\n313\n00:17:29.100 --> 00:17:32.000\nSo you could actually have different\nfilters in place, that's pretty common.\n\n314\n00:17:32.000 --> 00:17:35.040\nBut in my scenario,\nI just need it one direction.\n\n315\n00:17:35.040 --> 00:17:37.220\nIf I stop router one from\ngetting to router four,\n\n316\n00:17:37.220 --> 00:17:39.790\nI don't have to worry about\nrouter four replying to it.\n\n317\n00:17:39.790 --> 00:17:43.120\nSo I'm gonna jump back\nover to the router and\n\n318\n00:17:43.120 --> 00:17:45.520\nfinish that command to filter\ntraffic on the way in.\n\n319\n00:17:46.842 --> 00:17:50.480\nAll right once that's done,\nhow do I know it's working?\n\n320\n00:17:50.480 --> 00:17:52.950\nWell there's a few different\nways we can see this working.\n\n321\n00:17:52.950 --> 00:17:59.850\nIf you do a show ip interface and then the\ninterface you just applied the list to.\n\n322\n00:17:59.850 --> 00:18:03.206\nI'm going to show ip interface gi1/0,\nall right.\n\n323\n00:18:03.206 --> 00:18:08.950\nWhen I take a look at it, I can see right\nhere in inbound access list is one.\n\n324\n00:18:08.950 --> 00:18:12.100\nOkay, so I know that I'm filtering\nthat traffic properly and\n\n325\n00:18:12.100 --> 00:18:14.191\nthat's good, all right?\n\n326\n00:18:14.191 --> 00:18:17.070\nBut, I also notice\na little problem happened.\n\n327\n00:18:17.070 --> 00:18:19.810\nYou guys probably saw this message pop up.\n\n328\n00:18:19.810 --> 00:18:23.180\nI've got a DUAL message, right,\nremember DUAL, Diffusing Update algorithm,\n\n329\n00:18:23.180 --> 00:18:24.760\nthis is EIGRP.\n\n330\n00:18:24.760 --> 00:18:28.491\nI'm running a dynamic routing protocol\nRouter 1, Router 2, Router 4,\n\n331\n00:18:28.491 --> 00:18:32.398\nthey're all talking to each other with\nEIGRP when I put that access list in place\n\n332\n00:18:32.398 --> 00:18:35.810\nit filtered Router 1,\nit blocked Router 1, it blocked Router 1.\n\n333\n00:18:37.130 --> 00:18:41.662\nSo Router 1 is sending out EIGRP\nmessages and it's hitting Router 2 and\n\n334\n00:18:41.662 --> 00:18:43.890\nRouter 2 is filtering them.\n\n335\n00:18:43.890 --> 00:18:45.680\nAnd so\nmy neighbor relationship to 192.168.1.1,\n\n336\n00:18:45.680 --> 00:18:50.940\nmy neighbor relationship to Router\n1 is now being blocked, right?\n\n337\n00:18:50.940 --> 00:18:52.350\nRemember what my goal was?\n\n338\n00:18:52.350 --> 00:18:56.103\nMy goal was to stop Router 1\nfrom getting to Router 4 and so\n\n339\n00:18:56.103 --> 00:19:00.776\nI filtered all of Router 1's traffic\nright here in this interface which\n\n340\n00:19:00.776 --> 00:19:04.548\nstopped Router 1 from even\nbeing to able to see Router 2.\n\n341\n00:19:04.548 --> 00:19:11.130\nAnd so now Router 1 has dropped out\nof EIGRP and that's a problem, right?\n\n342\n00:19:11.130 --> 00:19:15.120\nAnd normally, you'd think okay well I\njust need to put an exception for EIGRP.\n\n343\n00:19:15.120 --> 00:19:17.080\nYou can't do that with a standard ACL.\n\n344\n00:19:17.080 --> 00:19:20.090\nA standard ACL works on source IP only.\n\n345\n00:19:20.090 --> 00:19:21.565\nI can't do that.\n\n346\n00:19:21.565 --> 00:19:25.245\nThe only way I can fix this\nproblem is to move the ACL.\n\n347\n00:19:25.245 --> 00:19:28.155\nInstead of blocking it as traffic\ncomes into this interface,\n\n348\n00:19:28.155 --> 00:19:30.055\nI can move it to the other interface.\n\n349\n00:19:30.055 --> 00:19:32.395\nNow, I didn't wanna do that\nearlier because of performance.\n\n350\n00:19:32.395 --> 00:19:34.725\nAlways better to filter on the way in,\nright?\n\n351\n00:19:34.725 --> 00:19:36.505\nIn this scenario though,\nit's too restrictive.\n\n352\n00:19:36.505 --> 00:19:41.260\nIt's killing off EIGRP,\nif I move the ACL over here,\n\n353\n00:19:41.260 --> 00:19:44.320\nRouter 1 will still be able to\ntalk to Router 2 using EIGRP.\n\n354\n00:19:44.320 --> 00:19:48.960\nIt'll still be able to learn routes but\nit won't be able to get over to Router 4.\n\n355\n00:19:48.960 --> 00:19:50.230\nThis is what I meant earlier about,\n\n356\n00:19:50.230 --> 00:19:52.910\nit's kind of a tough decision to figure\nout whether you wanna go in or out.\n\n357\n00:19:52.910 --> 00:19:55.560\nAnd sometimes you have to experiment\naround a little bit to find the perfect\n\n358\n00:19:55.560 --> 00:19:56.500\nsolution.\n\n359\n00:19:56.500 --> 00:20:01.480\nSo in my scenario I need to move that\nACL to get EIGRP functioning again.\n\n360\n00:20:01.480 --> 00:20:08.890\nSo let me jump back over and I'm gonna\nremove the ACL from interface GI1/0.\n\n361\n00:20:08.890 --> 00:20:13.963\nSo I'm gonna say no ip access-group 1 in.\n\n362\n00:20:13.963 --> 00:20:17.854\nAnd then I'm gonna jump over to GI2/0.\n\n363\n00:20:17.854 --> 00:20:20.230\nSee how my EIGRP came right back up.\n\n364\n00:20:20.230 --> 00:20:21.750\nEIGRP's really fast, right, and\n\n365\n00:20:21.750 --> 00:20:24.920\nso it came right back up as\nsoon as that list was removed.\n\n366\n00:20:24.920 --> 00:20:26.300\nAnd I'm gonna get into my other interface,\n\n367\n00:20:26.300 --> 00:20:28.890\nlet me make sure that's the right one,\nit is.\n\n368\n00:20:28.890 --> 00:20:33.630\nAnd I'm gonna say IP acces-group 1 out,\nright?\n\n369\n00:20:33.630 --> 00:20:39.200\nI'm doing out this time because the\ntraffic is leaving GI2/0, not coming in.\n\n370\n00:20:39.200 --> 00:20:41.340\nI'm filtering it on the way out.\n\n371\n00:20:41.340 --> 00:20:45.090\nWhen I do that, EIGRP is still happy.\n\n372\n00:20:45.090 --> 00:20:48.960\nI'm able to talk to the router so\nthat's okay, but\n\n373\n00:20:48.960 --> 00:20:50.770\nmy traffic will get filtered\non the way to Router 4.\n\n374\n00:20:50.770 --> 00:20:53.000\nSo that's gonna be the better\nsolution in this scenario.\n\n375\n00:20:53.000 --> 00:20:56.580\nSometimes your first idea\nmight not be the best one, and\n\n376\n00:20:56.580 --> 00:20:58.870\nyou have to kind of work through it and\nfigure it out in your environment.\n\n377\n00:21:00.040 --> 00:21:03.900\nSo if I jump back over\nto Router 1 I see my\n\n378\n00:21:03.900 --> 00:21:06.070\nneighbor adjencenies involved in changing.\n\n379\n00:21:06.070 --> 00:21:09.460\nIf I do a show IP route,\nI'm still learning Azure key routes.\n\n380\n00:21:09.460 --> 00:21:10.870\nHere's a couple of them down here.\n\n381\n00:21:10.870 --> 00:21:12.530\nAnd see I'm learning192.168.4.0, right?\n\n382\n00:21:12.530 --> 00:21:22.430\nIf I look at my little topology here\n192.148.4.0 is way over here on Router 4.\n\n383\n00:21:22.430 --> 00:21:24.120\nI'm not allowed to talk to Router 4.\n\n384\n00:21:24.120 --> 00:21:26.460\nSo how am I learning that?\n\n385\n00:21:26.460 --> 00:21:30.530\nWell, remember, EIGRP is very fancy,\nit's very technical.\n\n386\n00:21:30.530 --> 00:21:32.690\nBut at the end of the day,\nit's a distance-vector protocol.\n\n387\n00:21:32.690 --> 00:21:34.190\nYou only talk to your neighbor.\n\n388\n00:21:34.190 --> 00:21:37.240\nIn other words, Router 1's just\ntalking to Router 2 and that's it.\n\n389\n00:21:37.240 --> 00:21:38.940\nRouter 1 never talks to Router 4.\n\n390\n00:21:38.940 --> 00:21:42.010\nRouter 2 talks to Router 4, and\nit's relaying those routes to me.\n\n391\n00:21:42.010 --> 00:21:43.760\nThat's how I'm learning it.\n\n392\n00:21:43.760 --> 00:21:45.080\nBecause I can still talk to Router 2.\n\n393\n00:21:45.080 --> 00:21:48.500\nI don't care about Router 4 at all,\nI don't even know who Router 4 really is.\n\n394\n00:21:48.500 --> 00:21:50.300\nI just see what Router 2 is telling me.\n\n395\n00:21:50.300 --> 00:21:56.480\n&gt;&gt; So, can see where those or now, I can\nsee where those standard ACLs can be easy.\n\n396\n00:21:56.480 --> 00:21:59.450\nBut boy, they can really break your\nentire routing infrastructure.\n\n397\n00:21:59.450 --> 00:22:02.190\n&gt;&gt; Yeah, and there's a lot of people\nout there that say, fine, screw it.\n\n398\n00:22:02.190 --> 00:22:05.400\nI'm never gonna use standard ACL,\nI'll always do extended.\n\n399\n00:22:05.400 --> 00:22:07.990\nBe careful of that though,\nbecause there is a performance benefit.\n\n400\n00:22:07.990 --> 00:22:10.900\nSo if you can use\na standard ACL you should.\n\n401\n00:22:10.900 --> 00:22:13.700\nAny time you can, use a standard ACL.\n\n402\n00:22:13.700 --> 00:22:15.690\nBut there's a lot of\nsituations where you can't,\n\n403\n00:22:15.690 --> 00:22:19.990\nwhere you need to go a little more\nadvanced and you end up going to extended.\n\n404\n00:22:19.990 --> 00:22:22.610\nSo that's the way I treat it,\nI always start saying all right,\n\n405\n00:22:22.610 --> 00:22:24.990\ncan I solve this problem\nwith standard ACLs?\n\n406\n00:22:24.990 --> 00:22:25.610\nAnd if I can, I do.\n\n407\n00:22:25.610 --> 00:22:28.510\nAnd then if I can't,\nthen I move onto the others.\n\n408\n00:22:28.510 --> 00:22:31.420\nI've got the ACL in place,\nlet's see if it's actually working.\n\n409\n00:22:31.420 --> 00:22:35.510\nSo I'm going to jump over to Router 1 and\nwe saw at the beginning of the show\n\n410\n00:22:35.510 --> 00:22:40.130\non Router 1 I was able to\ntelnet over to Router 4.\n\n411\n00:22:40.130 --> 00:22:41.940\nSo I was able to do that before.\n\n412\n00:22:41.940 --> 00:22:47.140\nNow I'm going to try to telnet to\n192.168.2.4 just like I did before,\n\n413\n00:22:47.140 --> 00:22:47.710\nall right.\n\n414\n00:22:49.070 --> 00:22:53.120\nAnd this time destination\nunreachable gateway or host down.\n\n415\n00:22:53.120 --> 00:22:55.120\nI can't get to the other side, all right.\n\n416\n00:22:55.120 --> 00:22:56.130\nWhy not?\n\n417\n00:22:56.130 --> 00:22:59.190\nWell, as far as this router's\nconcerned we don't know why.\n\n418\n00:22:59.190 --> 00:23:02.110\nWe reached out to the gateway and\nthe gateway said, no thanks.\n\n419\n00:23:02.110 --> 00:23:03.760\nAnd that was it our gateway is Router 2,\nright?\n\n420\n00:23:03.760 --> 00:23:05.180\nSo Router 2 refused us.\n\n421\n00:23:05.180 --> 00:23:06.980\nWe don't know why, it just happened.\n\n422\n00:23:06.980 --> 00:23:08.410\nThe routers don't explain a lot.\n\n423\n00:23:08.410 --> 00:23:09.950\nBecause you are potentially an attacker.\n\n424\n00:23:09.950 --> 00:23:12.150\nSo they are like nope,\nyou are blocked, that's it.\n\n425\n00:23:12.150 --> 00:23:14.180\nBut I wasn't able to get to Router 4.\n\n426\n00:23:14.180 --> 00:23:17.558\nAnd I can verify that is\nhappening over on Router 2.\n\n427\n00:23:17.558 --> 00:23:23.370\nOn Router 2 if I do a show access\nstash list let me just punch that in.\n\n428\n00:23:23.370 --> 00:23:28.820\nWhen I look at the ACL you'll see matches,\nI've got 63 matches.\n\n429\n00:23:28.820 --> 00:23:31.990\n63 Packets have tried to move\n\n430\n00:23:31.990 --> 00:23:37.060\nfrom 192.168.1.1 over to Router 4 and\nthey've been blocked, all right.\n\n431\n00:23:37.060 --> 00:23:40.061\nNow I blocked 192.168.0.0 also.\n\n432\n00:23:40.061 --> 00:23:42.314\nI just haven't used it so\nthere haven't been any matches there.\n\n433\n00:23:42.314 --> 00:23:44.660\nAnd then permit any would\npermit anybody else.\n\n434\n00:23:44.660 --> 00:23:46.288\nI haven't really done anything with that,\neither.\n\n435\n00:23:46.288 --> 00:23:49.665\nBut if I look at Router 1,\nlet me just jump over to Router 1 again.\n\n436\n00:23:49.665 --> 00:23:53.712\nRouter 1 has a few different IP addresses,\nright.\n\n437\n00:23:53.712 --> 00:23:55.840\nIt's got the 10.10.10 network.\n\n438\n00:23:55.840 --> 00:23:59.118\nIt's got the 192.168.0 and 198.168.1.\n\n439\n00:23:59.118 --> 00:24:04.385\nSo when I do something like pinging,\nwhen I ping to router four it's looking\n\n440\n00:24:04.385 --> 00:24:09.427\nat the interfaces and saying which\ninterface is closest to router four.\n\n441\n00:24:09.427 --> 00:24:13.858\nAnd in this case the closest one is\ngonna to be the 192.168.1.1 inferface.\n\n442\n00:24:13.858 --> 00:24:16.577\nAnd so, it's gonna use that and\nthey're gonna fail, right, so\n\n443\n00:24:16.577 --> 00:24:18.720\nthere it goes failing the ping.\n\n444\n00:24:18.720 --> 00:24:20.750\nWhat if I switched to\na different interface though?\n\n445\n00:24:20.750 --> 00:24:23.740\nRemember with ping you can\nspecify a source interface.\n\n446\n00:24:23.740 --> 00:24:27.492\nAnd so, I can come in and say I wanna\ndo a source interface of, that's right,\n\n447\n00:24:27.492 --> 00:24:29.625\nthat's when you have to\ntype all the way out.\n\n448\n00:24:29.625 --> 00:24:34.460\nGigabyte ethernet one size zero, right?\n\n449\n00:24:34.460 --> 00:24:37.645\nOne size zero,\nif I go back to my topology is,\n\n450\n00:24:37.645 --> 00:24:42.681\nI actually want 0/0 that's\nthe one that's on 192.168.00.\n\n451\n00:24:42.681 --> 00:24:44.300\nSo let me jump over and do that.\n\n452\n00:24:45.940 --> 00:24:49.911\nSo now I'm pinging from\nthe 192.168.0.1 address,\n\n453\n00:24:49.911 --> 00:24:52.418\nI'm pinging from a different address.\n\n454\n00:24:52.418 --> 00:24:54.177\nAnd those aren't getting through, either.\n\n455\n00:24:54.177 --> 00:24:59.290\nAnd if I go to router two and re-verify\nthat list, see how I've got matches now?\n\n456\n00:24:59.290 --> 00:25:02.879\nI've got matches on that\n192.168.0.0 network.\n\n457\n00:25:02.879 --> 00:25:03.480\nAll right.\n\n458\n00:25:03.480 --> 00:25:05.470\nBut what about the 10.10 network?\n\n459\n00:25:05.470 --> 00:25:06.470\nActually, on the 10.10 network,\n\n460\n00:25:06.470 --> 00:25:09.190\nI can't even remember if I put that,\nis that in the routing table?\n\n461\n00:25:09.190 --> 00:25:10.380\nYeah, it's in the routing table.\n\n462\n00:25:10.380 --> 00:25:13.250\nSo let me try from the 10.10 instead.\n\n463\n00:25:13.250 --> 00:25:16.650\nWhich is I think a loop\nback interface in this one.\n\n464\n00:25:16.650 --> 00:25:17.930\nNope.\nEthernet 0/0.\n\n465\n00:25:17.930 --> 00:25:21.578\nLet me source this one from ethernet 0/0.\n\n466\n00:25:21.578 --> 00:25:25.675\nWhen I do that my source\nis the 10.10 network.\n\n467\n00:25:25.675 --> 00:25:26.714\nRight there see?\n\n468\n00:25:26.714 --> 00:25:28.720\n10.10.10.1.\n\n469\n00:25:28.720 --> 00:25:31.270\nAnd my pings all made it through.\n\n470\n00:25:31.270 --> 00:25:36.389\nThey made it through because when you\nlook at that ACL what happened was\n\n471\n00:25:36.389 --> 00:25:41.452\nit didn't match line ten,\nright, because it was 10.10.1.\n\n472\n00:25:41.452 --> 00:25:43.920\nIt didn't match the second line.\n\n473\n00:25:43.920 --> 00:25:46.770\nThe third line though, permit any,\nthat's the one that matched.\n\n474\n00:25:46.770 --> 00:25:48.840\nI got five matches cuz I sent five pings.\n\n475\n00:25:48.840 --> 00:25:50.110\nAnd it worked, right.\n\n476\n00:25:50.110 --> 00:25:54.740\nSo that's basically what we expect to see\nwith these access list when we make them.\n\n477\n00:25:54.740 --> 00:25:56.550\nIt's just limiting us, right.\n\n478\n00:25:56.550 --> 00:26:00.050\nWe're limited to a source IP, and\na source IP can be overridden.\n\n479\n00:26:00.050 --> 00:26:02.150\nActually, it can be overridden\npretty easily, right.\n\n480\n00:26:02.150 --> 00:26:06.040\nYou could spoof a source address, and\nif I spoof the source address and\n\n481\n00:26:06.040 --> 00:26:12.400\nI throw malicious packets on the network\nwith a spoofed source I can bypass an ACL.\n\n482\n00:26:12.400 --> 00:26:14.190\nAnd that's kind of a problem.\n\n483\n00:26:14.190 --> 00:26:18.940\nAnd that's why ACLs aren't the be all,\nend all of security.\n\n484\n00:26:18.940 --> 00:26:24.770\nThat they're really just looking at that\nlayer two and layer three header, right?\n\n485\n00:26:24.770 --> 00:26:28.550\nWith the firewall, like a Cisco ASA,\nthey do what's called DPI,\n\n486\n00:26:28.550 --> 00:26:30.550\ndeep packet inspection.\n\n487\n00:26:30.550 --> 00:26:33.520\nThey don't just look at layer two and\nlayer three, they go on to look at layer\n\n488\n00:26:33.520 --> 00:26:37.130\nfour, five, six, some of them even go\nhigher all the way to layer seven, and\n\n489\n00:26:37.130 --> 00:26:38.700\nthey look at what's going\non inside of the packet.\n\n490\n00:26:38.700 --> 00:26:44.860\nAnd they're able to spot when something's\ncoming in on Port 21 but it's not actually\n\n491\n00:26:44.860 --> 00:26:49.320\nFTP traffic, or something is coming in on\nport 23 but is not actually telnet, and\n\n492\n00:26:49.320 --> 00:26:51.730\nthey spot it, and they can filter,\nand they can block that out.\n\n493\n00:26:51.730 --> 00:26:54.760\nSo, this is not a replacement for\nfirewalls.\n\n494\n00:26:54.760 --> 00:26:57.040\nBut it is great for\nthings like anti-spoofing.\n\n495\n00:26:57.040 --> 00:27:00.650\nIf you wanna say,\nI've got a WAN connection to the internet.\n\n496\n00:27:00.650 --> 00:27:04.770\nSo, on a WAN connection to the internet,\nI should never receive traffic from\n\n497\n00:27:04.770 --> 00:27:07.460\nprivate IPs,\nfrom RFC 1918 addresses, and that's\n\n498\n00:27:07.460 --> 00:27:11.790\nwhat I showed in CCNT is that we could\nwhip up a quick standard ACL that blocked\n\n499\n00:27:11.790 --> 00:27:15.040\nthe private IP ranges because those should\nnever come from the internet anyway so\n\n500\n00:27:15.040 --> 00:27:19.610\ngreat way to filter that off, and very low\nresource intensive because standard ACLs\n\n501\n00:27:19.610 --> 00:27:24.450\njust base on source IP the router has to\nlook at source IP anyway, because it's\n\n502\n00:27:24.450 --> 00:27:27.790\ngonna have to run that against the routing\ntable when it pulls the destination IPs.\n\n503\n00:27:27.790 --> 00:27:30.600\nSo it's gonna have to deal with\nthat stuff no matter what,\n\n504\n00:27:30.600 --> 00:27:32.420\nwe're just adding one extra check there,\nit's not a big deal.\n\n505\n00:27:33.480 --> 00:27:36.660\nExtended ACLs are the ones that\ntake it a lot further, right?\n\n506\n00:27:36.660 --> 00:27:40.571\nAnd the extended ACLs are the ones that\nwe need to know for the exam for CCNA.\n\n507\n00:27:40.571 --> 00:27:43.650\nBut I actually had to know both of them,\nwhich is why I'm covering it right now.\n\n508\n00:27:43.650 --> 00:27:46.650\nSo I wanna take a look at the extended\nACLs and how they function, and\n\n509\n00:27:46.650 --> 00:27:47.730\nkinda do a dive in them.\n\n510\n00:27:47.730 --> 00:27:50.010\nI know we're a little shy on time.\n\n511\n00:27:50.010 --> 00:27:52.380\nI went a little longer on\nstandard ACLs than I intended.\n\n512\n00:27:53.740 --> 00:27:57.110\nSo let me cover one more thing\nbefore we wrap this episode up.\n\n513\n00:27:58.260 --> 00:28:01.010\nIn the next episode,\nwhen we start doing extended ACL's,\n\n514\n00:28:01.010 --> 00:28:03.480\nsomething really handy\nwith extended ACL's.\n\n515\n00:28:03.480 --> 00:28:08.221\nThey get complex, and so sometimes it's\nhard to see whether they are working or\n\n516\n00:28:08.221 --> 00:28:13.032\nnot, and so there's a keyword that you can\nadd to any Access Control Entry called\n\n517\n00:28:13.032 --> 00:28:16.241\nlog so you can keep a record\nof what happened, right.\n\n518\n00:28:16.241 --> 00:28:18.238\nAnd that way when you're\ntesting your ACLs and\n\n519\n00:28:18.238 --> 00:28:21.640\ngetting it to work you can make things\nkind of function the way you want.\n\n520\n00:28:21.640 --> 00:28:24.410\nNow if you use logging be really careful,\n\n521\n00:28:24.410 --> 00:28:27.020\nin a high traffic network\nit can flood your logs and\n\n522\n00:28:27.020 --> 00:28:30.400\nyou can lose valuable information and\nit doesn't achieve any real purpose.\n\n523\n00:28:30.400 --> 00:28:34.500\nSo when I do logging,\nwhat I normally do is create an additional\n\n524\n00:28:34.500 --> 00:28:37.660\naccess control list that has logging and\nI can flip between the two.\n\n525\n00:28:37.660 --> 00:28:40.070\nSo let me show you that real quick\nin the time that I've got and\n\n526\n00:28:40.070 --> 00:28:41.910\nthen in the next episode\nwe'll do extended.\n\n527\n00:28:41.910 --> 00:28:45.610\nSo when I do a show run and\n\n528\n00:28:45.610 --> 00:28:47.620\nI take a look at the running\nconfiguration here on router two.\n\n529\n00:28:47.620 --> 00:28:52.820\nI can find the ACL that we\njust made right here, okay?\n\n530\n00:28:52.820 --> 00:28:58.400\nSo here's access-list 1, and that's the\nACL that we made just a moment ago, okay?\n\n531\n00:28:58.400 --> 00:29:01.610\nAnd what you can do is\nyou can take that ACL and\n\n532\n00:29:01.610 --> 00:29:05.410\nyou can fire into really any text editor.\n\n533\n00:29:05.410 --> 00:29:05.940\nAnd so\n\n534\n00:29:05.940 --> 00:29:10.030\nI'm just gonna kinda cut and paste that\nright here into this little text editor.\n\n535\n00:29:10.030 --> 00:29:13.680\nAnd what I'm gonna do is\nI'm gonna take that ACL and\n\n536\n00:29:13.680 --> 00:29:15.680\nI'm just gonna change those numbers.\n\n537\n00:29:15.680 --> 00:29:17.650\nAnd I'm gonna create access-list 2,\nall right?\n\n538\n00:29:17.650 --> 00:29:20.610\nSo different number, but same ACL.\n\n539\n00:29:20.610 --> 00:29:26.420\nAnd at the end of my denys I'm\ngonna add that log keyword.\n\n540\n00:29:26.420 --> 00:29:31.730\nOkay so, see how it's accessless to deny,\nthere's the IP I wanna deny and log.\n\n541\n00:29:31.730 --> 00:29:35.440\nSo I'm gonna log those, and I'm not\ngonna worry about logging this permit\n\n542\n00:29:35.440 --> 00:29:38.130\nany because,\nthat could be a lot of traffic, right?\n\n543\n00:29:38.130 --> 00:29:39.530\nSo I don't wanna deal with that.\n\n544\n00:29:39.530 --> 00:29:41.090\nBut by logging the traffic,\n\n545\n00:29:41.090 --> 00:29:44.170\nI'll get a better idea of\nwhat's working and what's not.\n\n546\n00:29:44.170 --> 00:29:48.370\nAnd now I can just take that and\ncome right back into my router and\n\n547\n00:29:48.370 --> 00:29:49.220\nI can just paste it in.\n\n548\n00:29:50.290 --> 00:29:54.560\nAnd so now, I have access list one and\naccess list two, they're identical, but\n\n549\n00:29:54.560 --> 00:29:56.190\naccess list two has logging.\n\n550\n00:29:56.190 --> 00:30:00.120\nSo when I'm troubleshooting,\nI can jump over to my interface.\n\n551\n00:30:00.120 --> 00:30:01.420\nWe're doing config so\n\n552\n00:30:01.420 --> 00:30:04.920\nI need to do gi, this is where our\nnetwork diagram comes in really handy.\n\n553\n00:30:04.920 --> 00:30:07.816\nYou lose track of your interfaces, GI2/0.\n\n554\n00:30:07.816 --> 00:30:15.560\nSo I can get into GI2/0, and\nI can say ip access-group 2 out.\n\n555\n00:30:15.560 --> 00:30:16.380\nEarlier I had one out.\n\n556\n00:30:16.380 --> 00:30:19.750\nYou can only have one outgoing exosystem,\none incoming.\n\n557\n00:30:19.750 --> 00:30:23.540\nSo when I apply a second outgoing,\nit just replaces the first one.\n\n558\n00:30:23.540 --> 00:30:30.071\nBefore I run that If I do a,\nShow ip interface gi2/0,\n\n559\n00:30:30.071 --> 00:30:35.710\nand I'm gonna filter that to just look for\nany line with the word list.\n\n560\n00:30:35.710 --> 00:30:38.646\nThere we go,\nI can see my outgoing access list is 1.\n\n561\n00:30:38.646 --> 00:30:43.049\nAnd then I'm gonna say,\nip access-group 2 out.\n\n562\n00:30:44.390 --> 00:30:47.350\nAnd now when I run that same command,\nsee how it's not one and\n\n563\n00:30:47.350 --> 00:30:51.210\ntwo it replaced one with two, now my end\nusers aren't going to see any difference,\n\n564\n00:30:51.210 --> 00:30:54.820\nright no difference there at all\nbecause the ACL is identical, but\n\n565\n00:30:54.820 --> 00:30:59.570\nnow I get logging and so\nwhen we do things that would trip the ACL,\n\n566\n00:30:59.570 --> 00:31:03.560\nlike I run one of those\npings that gets blocked.\n\n567\n00:31:03.560 --> 00:31:07.635\nWhen I take a look on router two,\nI can actually see a message, right there,\n\n568\n00:31:07.635 --> 00:31:10.710\nlist 2 denied, 192.168.1.1, 1 packet.\n\n569\n00:31:10.710 --> 00:31:14.053\nAnd so I can actually see it happening,\nbut if you've got millions of packets\n\n570\n00:31:14.053 --> 00:31:17.770\nper second moving through your network,\nimagine how much data this would generate.\n\n571\n00:31:17.770 --> 00:31:22.020\nIt'll fill your logs up, so that's why\nI say don't leave it on terribly long.\n\n572\n00:31:22.020 --> 00:31:27.860\nAnd when you're done, all you have to\ndo is flip right back to number one.\n\n573\n00:31:27.860 --> 00:31:30.910\nAgain identical list but\nnow the logging is off so\n\n574\n00:31:30.910 --> 00:31:33.050\nit's not gonna log and\nyou're able to continue on.\n\n575\n00:31:33.050 --> 00:31:36.670\nSo definitely a handy thing when you're\ntroubleshooting ACLs in the beginning and\n\n576\n00:31:36.670 --> 00:31:38.010\ntrying to get them working.\n\n577\n00:31:38.010 --> 00:31:41.760\nWith extended ACLs, it goes even further\nbecause it'll show you the port numbers\n\n578\n00:31:41.760 --> 00:31:45.160\nand that's really useful because you'll\nthink you've approved an application and\n\n579\n00:31:45.160 --> 00:31:48.170\nyou know how applications are, they tell\nyou, you need these three ports open.\n\n580\n00:31:48.170 --> 00:31:51.050\nAnd then it turns out there's a fourth or\nfifth port that wasn't documented.\n\n581\n00:31:51.050 --> 00:31:53.220\nAnd you can see it getting\nblocked in the logs.\n\n582\n00:31:53.220 --> 00:31:56.350\nAnd now you know what to go back and open\nup in the firewalls and figure that out.\n\n583\n00:31:56.350 --> 00:31:57.960\nSo logging is a really handy thing.\n\n584\n00:31:57.960 --> 00:32:01.010\n&gt;&gt; Don, we appreciate you stopping by\nthe studios and then demonstrating and\n\n585\n00:32:01.010 --> 00:32:01.630\nexplaining it.\n\n586\n00:32:01.630 --> 00:32:04.250\nI know we've got more to come,\nso stick around for a part two,\n\n587\n00:32:04.250 --> 00:32:08.867\nwhere we go In debt into the extend,\nin debt to extended ACL it's very good.\n\n588\n00:32:08.867 --> 00:32:10.140\n&gt;&gt; [LAUGH] Is that crazy?\n\n589\n00:32:10.140 --> 00:32:10.730\n&gt;&gt; That’s right.\n\n590\n00:32:10.730 --> 00:32:12.510\nSo Don before we do call it a day,\n\n591\n00:32:12.510 --> 00:32:15.290\ndo you have anytime else you want\nto wrap up on this episode with?\n\n592\n00:32:15.290 --> 00:32:18.050\n&gt;&gt; I know for some of you guys\nStandard ACL might seem kind of boring but\n\n593\n00:32:18.050 --> 00:32:19.645\nthey're on the exam,\nyou need to know them.\n\n594\n00:32:19.645 --> 00:32:21.315\nI know we covered them in CCENT.\n\n595\n00:32:21.315 --> 00:32:24.255\nThe extended ACLs are just as important,\nso we're gonna cover those next.\n\n596\n00:32:24.255 --> 00:32:25.735\nDefinitely stay tuned for part two.\n\n597\n00:32:25.735 --> 00:32:28.515\n&gt;&gt; Well, we appreciate you being here, and\nwe appreciate you, the viewer, watching.\n\n598\n00:32:28.515 --> 00:32:31.395\nSigning out for ITProTV,\nI've been your host Wes Bryan.\n\n599\n00:32:31.395 --> 00:32:32.035\n&gt;&gt; And I'm Don Pezet.\n\n600\n00:32:32.035 --> 00:32:34.314\n&gt;&gt; And we'll see you next time.\n\n601\n00:32:34.314 --> 00:32:40.233\n[MUSIC]\n\n602\n00:32:40.233 --> 00:32:43.544\n&gt;&gt; Thank you for watching ITPRO.TV.\n\n",
          "vimeoId": "188024253"
        },
        {
          "description": "In this episode, Wes and Don continue their discussion on access control lists (ACLs). They dive more into extended ACLs showing more of the options that are available.",
          "length": "2021",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/cisco-ccna200105/cisco-ccna200105-4-2-2-access_control_lists_pt2-101816-1.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/cisco-ccna200105/cisco-ccna200105-4-2-2-access_control_lists_pt2-101816-1-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/cisco-ccna200105/cisco-ccna200105-4-2-2-access_control_lists_pt2-101816-1-sm.jpg",
          "title": "Access Control Lists Part 2",
          "transcript": "WEBVTT\n\n1\n00:00:00.180 --> 00:00:06.579\nWelcome to ITProTV,\nI'm your host [CROSSTALK]\n\n2\n00:00:06.579 --> 00:00:08.246\n[MUSIC]\n\n3\n00:00:08.246 --> 00:00:11.599\n&gt;&gt; You're watching ITPro.TV.\n\n4\n00:00:11.599 --> 00:00:14.880\n&gt;&gt; Welcome back to another\nexciting episode here at ITPro.TV,\n\n5\n00:00:14.880 --> 00:00:16.272\nI'm your host Wes Bryan.\n\n6\n00:00:16.272 --> 00:00:19.615\nAnd in today's episode we're coming back\nat you with more of the CISCO routing and\n\n7\n00:00:19.615 --> 00:00:21.171\nswitching infrastructure service.\n\n8\n00:00:21.171 --> 00:00:25.914\nAnd this is actually a continuation, we're\ngoing into a part two from an earlier,\n\n9\n00:00:25.914 --> 00:00:27.490\nwhat we started with ACLs.\n\n10\n00:00:27.490 --> 00:00:30.480\nAnd we ended with a cliff hanger,\nyes you can blame it on Don,\n\n11\n00:00:30.480 --> 00:00:35.000\nhe got your feet wet with extended ACLs,\nbut to extend the conversation.\n\n12\n00:00:35.000 --> 00:00:36.430\nHere's none other than Mr. Don Pezet.\n\n13\n00:00:36.430 --> 00:00:37.330\nDon, how are you doing, sir?\n\n14\n00:00:37.330 --> 00:00:40.300\n&gt;&gt; I'm doing swell, Wes, and I promise\nI'm gonna try and stay on track today.\n\n15\n00:00:40.300 --> 00:00:42.700\nI know I talked a little more about\nstandard ACLs than I intended to,\n\n16\n00:00:42.700 --> 00:00:45.270\nbut it's important that we know\nthe foundations before we make things\n\n17\n00:00:45.270 --> 00:00:49.030\neven more complex,which is exactly\nwhat we're gonna do in this episode.\n\n18\n00:00:49.030 --> 00:00:52.210\nSo in the last episode,\nwe saw standard ACLs and\n\n19\n00:00:52.210 --> 00:00:55.800\nhow we could filter traffic\nbased on a source IP address.\n\n20\n00:00:55.800 --> 00:00:59.170\nBut that caused some problems\nin the implementation, right.\n\n21\n00:00:59.170 --> 00:01:02.300\nWhen I went in to install that ACL,\n\n22\n00:01:02.300 --> 00:01:05.890\nit blocks everything from\nthat source IP address.\n\n23\n00:01:05.890 --> 00:01:08.680\nOr it approves everything\nfrom that source address.\n\n24\n00:01:08.680 --> 00:01:09.510\nAnd that's it.\n\n25\n00:01:09.510 --> 00:01:13.390\nYou really don't get any fine\ngrained controls with standard ACLs.\n\n26\n00:01:13.390 --> 00:01:15.500\nAnd so that's what we look to fix today,\n\n27\n00:01:15.500 --> 00:01:18.490\nis how do we get beyond\nthe limitations of a standard ACL.\n\n28\n00:01:18.490 --> 00:01:21.150\n&gt;&gt; You know in part one of this episode\nyou kinda briefly mentioned some of\n\n29\n00:01:21.150 --> 00:01:23.590\nthe extra things that you can\ndo with extended ACLs, Don.\n\n30\n00:01:23.590 --> 00:01:27.440\nCan you kinda recap some of the extended\nfeatures I guess you should say?\n\n31\n00:01:27.440 --> 00:01:28.710\n&gt;&gt; There's two main things, right?\n\n32\n00:01:28.710 --> 00:01:31.690\nFirst we're not just\nlimited to source anymore.\n\n33\n00:01:31.690 --> 00:01:35.660\nExtended ACLs can look at source and\ndestination.\n\n34\n00:01:35.660 --> 00:01:41.460\nSo I can say I wanna filter one host when\nit's trying to contact one other host.\n\n35\n00:01:41.460 --> 00:01:44.540\nInstead of saying everything\nfrom this one particular host,\n\n36\n00:01:44.540 --> 00:01:46.460\nI can really get specific there.\n\n37\n00:01:46.460 --> 00:01:48.740\nBut the coolest part is we\ncan go ever further, right?\n\n38\n00:01:48.740 --> 00:01:52.330\nWhen we talk about source and destination\nIP addresses, that's layer three.\n\n39\n00:01:52.330 --> 00:01:58.370\nExtended ACLs can go to layer four,\nand start to look at TCP versus UDP.\n\n40\n00:01:58.370 --> 00:02:01.800\nAnd then they can go to layer five,\nand look at the session port.\n\n41\n00:02:01.800 --> 00:02:04.530\nSo I can say If it's Telnet, right.\n\n42\n00:02:04.530 --> 00:02:05.890\nWhat is Telnet?\n\n43\n00:02:05.890 --> 00:02:06.480\nTCP port 23.\n\n44\n00:02:06.480 --> 00:02:11.420\nSo I can say,\nfilter host a when it's going to host b\n\n45\n00:02:11.420 --> 00:02:13.760\nusing TCP on port 23 specifically.\n\n46\n00:02:15.190 --> 00:02:17.330\nAnd everything else might be allowed or\nblocked.\n\n47\n00:02:17.330 --> 00:02:21.390\nI can really be super granular and\nspecific.\n\n48\n00:02:21.390 --> 00:02:22.820\nAnd It's not on the exam,\n\n49\n00:02:22.820 --> 00:02:25.520\nbut you can go even further to\nset things like a schedule.\n\n50\n00:02:25.520 --> 00:02:28.410\nYou can say we're gonna\napprove this traffic\n\n51\n00:02:28.410 --> 00:02:30.000\nonly between these certain times, right?\n\n52\n00:02:30.000 --> 00:02:32.120\nThat's another thing that we\ncan do with extended ACLs.\n\n53\n00:02:32.120 --> 00:02:37.834\nThey can be very, very powerful,\nbut with great power comes great,\n\n54\n00:02:37.834 --> 00:02:42.102\nwell complexity in this case,\nnot responsibility.\n\n55\n00:02:42.102 --> 00:02:44.030\nBut this is more complex, right?\n\n56\n00:02:44.030 --> 00:02:47.600\nThe command line is longer, it's more\ndifficult to configure, but it is really,\n\n57\n00:02:47.600 --> 00:02:48.424\nreally valuable.\n\n58\n00:02:48.424 --> 00:02:52.349\nBecause out there in the real word,\nthe rule of thumb for me is,\n\n59\n00:02:52.349 --> 00:02:57.100\nI look at a problem and I say,\ncan I solve this with a standard ACL?\n\n60\n00:02:57.100 --> 00:02:59.345\nBecause you're always better\noff doing that if you can.\n\n61\n00:02:59.345 --> 00:03:03.500\nBecause standard ACLs give you\nbetter performance on the router.\n\n62\n00:03:03.500 --> 00:03:05.430\nBut if you can't solve\nit with a standard ACL,\n\n63\n00:03:05.430 --> 00:03:08.450\nif you need more fine-grained controls,\nyou've gotta go extended.\n\n64\n00:03:08.450 --> 00:03:10.130\nAnd don't be afraid to do that.\n\n65\n00:03:10.130 --> 00:03:11.053\nI talk about performance.\n\n66\n00:03:11.053 --> 00:03:13.422\nI'm talking about performance under heavy,\nheavy load, right?\n\n67\n00:03:13.422 --> 00:03:15.590\nMillions of packets per second.\n\n68\n00:03:15.590 --> 00:03:17.550\nMost routers don't handle\nthat level of traffic.\n\n69\n00:03:17.550 --> 00:03:20.220\nAnd you've got hardware built into\nthe router that's designed to\n\n70\n00:03:20.220 --> 00:03:21.190\nhandle this stuff.\n\n71\n00:03:21.190 --> 00:03:23.178\nSo it can actually handle\na good bit of traffic.\n\n72\n00:03:23.178 --> 00:03:26.294\nBut when you build an ACL,\nthe bigger the ACL is,\n\n73\n00:03:26.294 --> 00:03:29.130\nthe more resources it takes to apply.\n\n74\n00:03:29.130 --> 00:03:32.440\nSo if you have an ACL\nthat's less than say 50 or\n\n75\n00:03:32.440 --> 00:03:35.500\n60 entries, it's really not a big deal.\n\n76\n00:03:35.500 --> 00:03:37.940\nBut when you start getting into 300 or\n\n77\n00:03:37.940 --> 00:03:40.860\n400 entries,\nthat ACL is becoming really complex.\n\n78\n00:03:40.860 --> 00:03:43.670\nAnd a firewall would be\nbetter suited to handle that.\n\n79\n00:03:43.670 --> 00:03:48.110\nCisco ASAs have what are called ASICs,\nApplication Specific Integrated Circuits.\n\n80\n00:03:48.110 --> 00:03:51.310\nThey're built right into the motherboard\nthat are specifically designed for\n\n81\n00:03:51.310 --> 00:03:52.110\npacket filtration.\n\n82\n00:03:52.110 --> 00:03:53.820\nThat's what they do.\n\n83\n00:03:53.820 --> 00:03:57.570\nThe routers do a lot of it in software,\nthey do it in their general purpose CPU.\n\n84\n00:03:57.570 --> 00:04:01.190\nAnd the general purpose CPU in a lot of\nthese routers is not terribly powerful.\n\n85\n00:04:01.190 --> 00:04:04.056\nSo it will handle small and\nmedium business traffic.\n\n86\n00:04:04.056 --> 00:04:06.633\nBut when you start getting to\nthe larger and enterprise networks,\n\n87\n00:04:06.633 --> 00:04:09.460\nwe want to be careful with that and\njust measure your performance.\n\n88\n00:04:09.460 --> 00:04:11.290\nAnd when you reach that tipping point,\n\n89\n00:04:11.290 --> 00:04:13.430\nswitch over to a firewall instead,\nall right.\n\n90\n00:04:13.430 --> 00:04:16.040\nWell I've gabbed on enough\nabout this concept.\n\n91\n00:04:16.040 --> 00:04:18.000\nLet's actually see this in action, right?\n\n92\n00:04:18.000 --> 00:04:22.340\nIf we wanna kinda recap what we\ndid back in the first episode,\n\n93\n00:04:22.340 --> 00:04:24.230\nwhat we were filtering was,\n\n94\n00:04:24.230 --> 00:04:28.590\nI said that I didn't want router one\nto be able to contact router four.\n\n95\n00:04:28.590 --> 00:04:31.940\nRight, we created an ACL that blocked\nrouter one going to router four and\n\n96\n00:04:31.940 --> 00:04:34.510\nwe applied it right here on router two.\n\n97\n00:04:34.510 --> 00:04:37.950\nAnd with that ACL, if I jump in and\ntake a look at it.\n\n98\n00:04:37.950 --> 00:04:39.050\nLet's see that was on router two.\n\n99\n00:04:40.440 --> 00:04:45.870\nThat was access list one, so\nI am going to show access-list 1.\n\n100\n00:04:45.870 --> 00:04:48.389\nHere is the ACL that we\nwrote in the last episode.\n\n101\n00:04:48.389 --> 00:04:52.190\nSo I denied 192.68.1.1.\n\n102\n00:04:52.190 --> 00:04:53.908\nAnd when we did that,\n\n103\n00:04:53.908 --> 00:04:59.260\nit denies every single thing coming\nout of router one and kills it.\n\n104\n00:04:59.260 --> 00:05:01.397\nAnd that was a problem for\nme at the beginning of that episode.\n\n105\n00:05:01.397 --> 00:05:06.392\nBecause when I applied it to router two,\nwhen I applied it to this\n\n106\n00:05:06.392 --> 00:05:12.150\ninterface right here, it broke EIGRP\nbetween router one and router two.\n\n107\n00:05:12.150 --> 00:05:17.960\nIt would have been nice if I could have\nleft the ACL there and put an exception in\n\n108\n00:05:17.960 --> 00:05:24.060\nand said, hey don't block EIGRP let that\ngo through, but block everything else.\n\n109\n00:05:24.060 --> 00:05:27.750\nOr just block Telnet going\nover to router four.\n\n110\n00:05:27.750 --> 00:05:31.310\nI could have been a little more\nspecific about what I wanted to block.\n\n111\n00:05:31.310 --> 00:05:33.980\nBut I couldn't do that\nwith a standard ACL.\n\n112\n00:05:33.980 --> 00:05:35.850\nBut in this episode I can.\n\n113\n00:05:35.850 --> 00:05:39.083\nSo let me show you how that works and\nwe'll get an idea of how these ACLs can\n\n114\n00:05:39.083 --> 00:05:41.048\nyou put in place and\ncan solve that problem.\n\n115\n00:05:41.048 --> 00:05:44.363\nBecause I really wanna filter\nwhen I traffic is coming in this\n\n116\n00:05:44.363 --> 00:05:45.536\ninterface, right.\n\n117\n00:05:45.536 --> 00:05:51.869\nWhen router one goes to router four\npasses in Gi1/0 and out Gi2/0.\n\n118\n00:05:51.869 --> 00:05:54.713\nIf I can filter coming in, well,\n\n119\n00:05:54.713 --> 00:05:59.625\nI can block traffic before\nI hit the routing table.\n\n120\n00:05:59.625 --> 00:06:01.870\nAnd that way I saved\nresources on the router.\n\n121\n00:06:01.870 --> 00:06:05.900\nIn fact, it offsets the resource\nload of an extended ACL.\n\n122\n00:06:05.900 --> 00:06:08.470\nBy doing less routing table lookups,\nright?\n\n123\n00:06:08.470 --> 00:06:11.673\nIf I filter on the way out,\nI've gotta do a routing table lookup, and\n\n124\n00:06:11.673 --> 00:06:15.444\nthen move the data over to that interface,\nand then possibly end up dropping it.\n\n125\n00:06:15.444 --> 00:06:17.590\nI waste resources, right?\n\n126\n00:06:17.590 --> 00:06:21.730\nSo if I can move it back to Gi1/0, and\njust be a little more specific about\n\n127\n00:06:21.730 --> 00:06:24.800\nwhat I wanna block, then things\nwill work out really well, right?\n\n128\n00:06:24.800 --> 00:06:29.420\nSo let's do that,\nlet's say that I'm okay with router one\n\n129\n00:06:29.420 --> 00:06:33.420\ncontacting router four, but\nI really just want to block Telnet.\n\n130\n00:06:33.420 --> 00:06:34.720\nTelnet is not secure, right?\n\n131\n00:06:34.720 --> 00:06:36.210\nIt's unencrypted traffic.\n\n132\n00:06:36.210 --> 00:06:40.090\nI want to block that and stop it from\ngetting through to the other side, but\n\n133\n00:06:40.090 --> 00:06:40.860\nI'll allow SSH.\n\n134\n00:06:40.860 --> 00:06:43.160\nSSH is fine, I don't want Telnet.\n\n135\n00:06:43.160 --> 00:06:47.800\nOkay, so I can craft an ACL that\nspecifically blocks Telnet.\n\n136\n00:06:47.800 --> 00:06:51.160\nAnd I can do it to block everybody or\nI can just block router one.\n\n137\n00:06:51.160 --> 00:06:54.290\nAnd that's what I'm gonna do,\nI want to be pretty specific on this one.\n\n138\n00:06:54.290 --> 00:06:56.510\nAll right, so let's take a look\nwhat that syntax would look like.\n\n139\n00:06:57.720 --> 00:06:59.600\nWhen we created our access\nlists in the last episode,\n\n140\n00:06:59.600 --> 00:07:01.250\nI had to pick a number for it.\n\n141\n00:07:01.250 --> 00:07:03.680\nEvery access list has a number.\n\n142\n00:07:03.680 --> 00:07:06.770\nWell, I shouldn't say every, I'll show\nyou guys named ACLs in a little bit, and\n\n143\n00:07:06.770 --> 00:07:07.970\nthey don't have numbers.\n\n144\n00:07:07.970 --> 00:07:09.630\nBut most ACLs have numbers.\n\n145\n00:07:09.630 --> 00:07:14.040\nSo when I come in and I say, access-list,\nI then have to pick a number.\n\n146\n00:07:14.040 --> 00:07:19.554\nAnd a standard ACL is 1-99 or 1300-1999.\n\n147\n00:07:19.554 --> 00:07:20.906\nThose are standard ACLs.\n\n148\n00:07:20.906 --> 00:07:23.030\nThey can only filter on source IP.\n\n149\n00:07:24.030 --> 00:07:27.914\nBut if I do 100 through 199, or if I do,\n\n150\n00:07:27.914 --> 00:07:33.356\nlet's see what is the extended one,\nit's in here somewhere.\n\n151\n00:07:33.356 --> 00:07:39.290\nHere, 2000 through 2699, that guy,\nthose are extended ACLs.\n\n152\n00:07:39.290 --> 00:07:44.580\nAnd extended ACLs can filter on source IP,\ndestination IP, source port,\n\n153\n00:07:44.580 --> 00:07:46.560\ndestination port or all four.\n\n154\n00:07:46.560 --> 00:07:50.740\nYou can filter on all four criteria,\nthat would be really super mega specific.\n\n155\n00:07:50.740 --> 00:07:53.200\nAll right, so we can really get\nin there and filter things.\n\n156\n00:07:53.200 --> 00:07:56.550\nNow when we do that, that's great,\nyou know things kinda work out.\n\n157\n00:07:57.670 --> 00:08:01.136\nBut if we Wanna be a little more general.\n\n158\n00:08:01.136 --> 00:08:02.870\nYou can always leave certain criteria off,\nand\n\n159\n00:08:02.870 --> 00:08:05.160\nnow you're just filtering\nbased on certain things.\n\n160\n00:08:05.160 --> 00:08:09.000\nSo if I wanna filter router\n1 going to router 4,\n\n161\n00:08:09.000 --> 00:08:12.560\nI need to know my source and\ndestination IP addresses.\n\n162\n00:08:12.560 --> 00:08:17.295\nRouter 1 is 192.168.1.1,\nso that's the source IP.\n\n163\n00:08:17.295 --> 00:08:21.910\nAnd router 4 is 192.168.2.4,\nso that's the destination.\n\n164\n00:08:21.910 --> 00:08:24.930\nSo I know my source and destination.\n\n165\n00:08:24.930 --> 00:08:28.500\nIf I just wanna block everything\nfrom router 1 to router 4,\n\n166\n00:08:28.500 --> 00:08:30.800\nI don't have to worry about ports and\nstuff.\n\n167\n00:08:30.800 --> 00:08:35.170\nI can just base it on the IPs, and\nwe can put that block in place, all right?\n\n168\n00:08:35.170 --> 00:08:36.250\nSo, let's test that out.\n\n169\n00:08:36.250 --> 00:08:39.630\nLet's start with just IPs, and\nthen we'll work our way up to protocols.\n\n170\n00:08:39.630 --> 00:08:42.830\nSo the first thing I wanna do is I wanna\nmake sure that router 1 can actually\n\n171\n00:08:42.830 --> 00:08:43.630\ncommunicate to router 4.\n\n172\n00:08:43.630 --> 00:08:45.310\nSo I'm gonna start there.\n\n173\n00:08:45.310 --> 00:08:51.130\nSo on router 1 I'm gonna do a ping to\n192.168.2.4, so can I ping router 4?\n\n174\n00:08:51.130 --> 00:08:55.500\nAnd I can, can I telnet to router 4?\n\n175\n00:08:56.550 --> 00:08:57.910\nAll right, and it looks like I can.\n\n176\n00:08:57.910 --> 00:09:01.790\nI'm gonna log in, so\nI'm just punching in my credentials here.\n\n177\n00:09:01.790 --> 00:09:04.900\nAnd I'll do a show user, so\nI can verify my own address.\n\n178\n00:09:04.900 --> 00:09:07.500\nIt shows that I am logged\nin from 192.168.1.1, right.\n\n179\n00:09:10.010 --> 00:09:13.630\nSo I can telnet, and how about ssh?\n\n180\n00:09:13.630 --> 00:09:19.980\nSo I'm gonna try and\nssh into router four, and there we go.\n\n181\n00:09:19.980 --> 00:09:23.770\nAnd I can ssh in.\n\n182\n00:09:23.770 --> 00:09:25.390\nOkay, so I'm able to get in.\n\n183\n00:09:25.390 --> 00:09:27.070\nLet me get out of that one.\n\n184\n00:09:27.070 --> 00:09:28.850\nAnd there we go, all right.\n\n185\n00:09:28.850 --> 00:09:31.530\nSo I can ping, I can telnet, I can ssh.\n\n186\n00:09:31.530 --> 00:09:33.920\nI've got full communications\nwith router four.\n\n187\n00:09:33.920 --> 00:09:36.590\nAnd I wanna filter that.\n\n188\n00:09:36.590 --> 00:09:38.730\nNow, if I do a show ip route.\n\n189\n00:09:38.730 --> 00:09:41.540\nI'm just gonna do this cuz we had\nthis problem in the last episode.\n\n190\n00:09:41.540 --> 00:09:45.888\nIs that I'm learning the route\nto router 4 via EIGRP, so\n\n191\n00:09:45.888 --> 00:09:49.340\nI need EIGRP to work for\nme to get to router 4.\n\n192\n00:09:49.340 --> 00:09:52.010\nAnd remember, in the last episode\nwhen I turned on my standard ACL,\n\n193\n00:09:52.010 --> 00:09:54.430\nit blocked the EIGRP, and so\n\n194\n00:09:54.430 --> 00:09:58.450\nI had to change it from an incoming ACL\nto an outgoing ACL to work around that.\n\n195\n00:09:58.450 --> 00:09:59.340\nWith an extended ACO,\n\n196\n00:09:59.340 --> 00:10:03.710\nI am not gonna have to do that\nbecause I can be really specific.\n\n197\n00:10:03.710 --> 00:10:05.630\nAnd so\nI'll be able to apply this incoming and\n\n198\n00:10:05.630 --> 00:10:07.560\nnot have the same problem\nfrom the last episode.\n\n199\n00:10:07.560 --> 00:10:09.740\nAll right, so let's get this ACO created.\n\n200\n00:10:09.740 --> 00:10:13.300\nI'm gonna jump into the right router,\nthat's gonna start, right?\n\n201\n00:10:13.300 --> 00:10:17.010\nI need to filter on router 2, router 2\nis in between router 1 and router 4.\n\n202\n00:10:17.010 --> 00:10:21.276\nSo router 1's traffic is gonna\npass in GI1/0 on router 2 and\n\n203\n00:10:21.276 --> 00:10:26.020\nit's going to pass out GI2/0 on\nthe way to router 4, all right.\n\n204\n00:10:26.020 --> 00:10:29.840\nSo I need to do my filtering on router\ntwo, so here I am on router two,\n\n205\n00:10:29.840 --> 00:10:32.110\nand I\"m gonna say access-list.\n\n206\n00:10:32.110 --> 00:10:35.630\nNow I need to pick a number that's in the\nrange of extended ACLs, I'm gonna do 101,\n\n207\n00:10:35.630 --> 00:10:37.630\nall right.\n\n208\n00:10:37.630 --> 00:10:42.700\nAnd so now I'm saying I'm creating\naccess list 101, what do I want to do?\n\n209\n00:10:42.700 --> 00:10:47.290\nNow the syntax for an extended ACL is\ndifferent than a syntax for a standard\n\n210\n00:10:47.290 --> 00:10:53.150\nACL, right, because I need to come in and\nspecify whether I'm denying or permitting.\n\n211\n00:10:53.150 --> 00:10:58.030\nAnd then I need to\nspecify the protocol and\n\n212\n00:10:58.030 --> 00:11:01.000\nthe host and destination, right,\nso the source and destination.\n\n213\n00:11:01.000 --> 00:11:04.170\nI need to specify each of those things\nit's gonna be a longer command.\n\n214\n00:11:04.170 --> 00:11:06.360\nI also have a few different options.\n\n215\n00:11:06.360 --> 00:11:09.060\nNow, deny and permit, those are the two\nthat I really wanna use and\n\n216\n00:11:09.060 --> 00:11:10.350\nwe had those on standard.\n\n217\n00:11:10.350 --> 00:11:13.910\nRemark, if I wanna add a comment\ninto the ACL I can do that too.\n\n218\n00:11:13.910 --> 00:11:15.640\nAnd then I've got this dynamic.\n\n219\n00:11:15.640 --> 00:11:20.080\nNow, dynamic doesn't show up on the exam\nbut this is one that allows you to\n\n220\n00:11:20.080 --> 00:11:23.640\ndynamically adjust between permit and\ndeny based on certain criteria.\n\n221\n00:11:23.640 --> 00:11:27.610\nThat you might have an entry that is\npermit sometimes and deny others.\n\n222\n00:11:27.610 --> 00:11:29.650\nUsually you can do this\ntied in with the schedule.\n\n223\n00:11:29.650 --> 00:11:31.660\nThere's a few different\nways to achieve that.\n\n224\n00:11:31.660 --> 00:11:33.180\nNot every router supports dynamic ACL.\n\n225\n00:11:33.180 --> 00:11:35.890\nSo you might not see\nthat on yours at home or\n\n226\n00:11:35.890 --> 00:11:37.720\nin the lab on the exam it might not exist.\n\n227\n00:11:37.720 --> 00:11:40.040\nIt's not on the exam anyway so\nit doesn't really matter if it shows up.\n\n228\n00:11:40.040 --> 00:11:42.740\nBut just know that it does exist\nif you ever need something like\n\n229\n00:11:42.740 --> 00:11:44.860\nthat in real life.\n\n230\n00:11:44.860 --> 00:11:47.810\nAll right, so\nI'm gonna do access lis= 101.\n\n231\n00:11:47.810 --> 00:11:49.220\nAnd I'm going to deny traffic.\n\n232\n00:11:49.220 --> 00:11:52.760\nI'm trying to block router one\nfrom getting to router four.\n\n233\n00:11:53.880 --> 00:11:54.880\nSo I do deny.\n\n234\n00:11:54.880 --> 00:11:58.960\nNow, the next thing I need\nto specify is the protocol.\n\n235\n00:11:58.960 --> 00:12:04.920\nAnd understand that there's layer four\nprotocols, and layer five sessions.\n\n236\n00:12:04.920 --> 00:12:06.700\nA lot of times when we\ntalk about protocols,\n\n237\n00:12:06.700 --> 00:12:08.680\nwe start thinking about\nthe session port numbers.\n\n238\n00:12:08.680 --> 00:12:12.690\nHey, I'm doing HTTP so that's port 80,\nI'm doing telnet, that's port 23.\n\n239\n00:12:12.690 --> 00:12:16.730\nWell, that's great, yes, that's true,\nthat's a session layer protocol.\n\n240\n00:12:16.730 --> 00:12:19.840\nBut at the transport layer, layer four.\n\n241\n00:12:19.840 --> 00:12:25.770\nYou're either using TCP or UDP or\nsomething weird and out there, right.\n\n242\n00:12:25.770 --> 00:12:28.360\nSo usually it's TCP and\nUDP and so you'll see.\n\n243\n00:12:28.360 --> 00:12:29.140\nI can specify that.\n\n244\n00:12:29.140 --> 00:12:32.340\nHere's TCP and here's UDP.\n\n245\n00:12:32.340 --> 00:12:33.660\nWell what if I want both?\n\n246\n00:12:33.660 --> 00:12:36.730\nRight, if I wanna get both of\nthem I could do two lines.\n\n247\n00:12:36.730 --> 00:12:42.450\nOr you could say IP,\niP is Any Internet Protocol.\n\n248\n00:12:42.450 --> 00:12:46.970\nAnd so that's gonna get both tcp and\nudp and a couple of others right?\n\n249\n00:12:46.970 --> 00:12:51.810\nNotice how icmp has its own entry,\nthat's for ping.\n\n250\n00:12:51.810 --> 00:12:53.550\nOr igmp, that's for multicast.\n\n251\n00:12:53.550 --> 00:12:57.140\nSo you've got a couple of other ones that\nare gonna get wrapped up when you do iP.\n\n252\n00:12:57.140 --> 00:13:00.310\nIt'll gather those also but there\nare others that are even more special.\n\n253\n00:13:00.310 --> 00:13:03.200\nNotice how the IGRP is on the lists.\n\n254\n00:13:03.200 --> 00:13:07.350\nRemember how that got blocked on us\nearlier in the standard ACL, in part one.\n\n255\n00:13:07.350 --> 00:13:09.320\nThat if I was doing an extended,\n\n256\n00:13:09.320 --> 00:13:11.980\nI could have added another entry that\npermit the IGRP, block everything else and\n\n257\n00:13:11.980 --> 00:13:14.820\nI could have done it right here\nat the layer four protocol.\n\n258\n00:13:14.820 --> 00:13:18.060\nSo that is what putting right here,\nis the layer for and I am going to do IP,\n\n259\n00:13:18.060 --> 00:13:24.630\nI'm gonna block all IP traffic\nfrom router one to router four.\n\n260\n00:13:24.630 --> 00:13:26.990\nNow it's time for\nthe source and destination.\n\n261\n00:13:26.990 --> 00:13:27.950\nFor the source and destination,\n\n262\n00:13:27.950 --> 00:13:30.720\nthey're specified just like\nthey are in a standard ACL.\n\n263\n00:13:30.720 --> 00:13:34.660\nIn a standard ACL you either put\na network or an individual host.\n\n264\n00:13:34.660 --> 00:13:37.320\nIf it's a network you're gonna\nfollow it with a wildcard mask.\n\n265\n00:13:37.320 --> 00:13:42.260\nIf it's an individual host you just type,\nhost and then who it's gonna be.\n\n266\n00:13:42.260 --> 00:13:45.530\nIf it's gonna be something big like\neverybody you could say any and\n\n267\n00:13:45.530 --> 00:13:49.310\nthat would incorporate everybody.\n\n268\n00:13:49.310 --> 00:13:54.140\nSo I'm gonna say host 192.168.1.1\nthat's who I'm doing as the source.\n\n269\n00:13:54.140 --> 00:13:55.510\nAnd you'll even notice here in the help.\n\n270\n00:13:55.510 --> 00:13:58.780\nSee how it says source address,\nsource host, right?\n\n271\n00:13:58.780 --> 00:14:01.850\nAnd then, I can specify the destination.\n\n272\n00:14:01.850 --> 00:14:03.020\nNow when I do a question mark here.\n\n273\n00:14:03.020 --> 00:14:06.130\nI'm going to see more than just\ndestination in some scenarios.\n\n274\n00:14:06.130 --> 00:14:07.540\nNot here cuz I put IP.\n\n275\n00:14:07.540 --> 00:14:10.570\nIf I just do TCP or UDP,\nI'd be able to pick ports.\n\n276\n00:14:10.570 --> 00:14:13.750\nBut because I did IP as a whole,\nI don't see any port selections here.\n\n277\n00:14:13.750 --> 00:14:15.540\nIt's just asking for the destination.\n\n278\n00:14:15.540 --> 00:14:18.640\nAnd the destination in this case,\nis gonna be host 192.168.2.4 and\n\n279\n00:14:18.640 --> 00:14:23.320\nmy head's gonna cover that up.\n\n280\n00:14:23.320 --> 00:14:25.600\nBut 192.168.2.4, there we go.\n\n281\n00:14:25.600 --> 00:14:31.950\nSo any traffic coming from router\n1 going to router 4, right.\n\n282\n00:14:31.950 --> 00:14:35.560\nAnd if I continue on,\nI'll see even more options and\n\n283\n00:14:35.560 --> 00:14:37.110\nhere's really start to get a little crazy.\n\n284\n00:14:37.110 --> 00:14:39.500\nThe only one we really need to know for\nthe exam is log but\n\n285\n00:14:39.500 --> 00:14:43.210\nI can turn on logging, and now I've got\na record of that traffic being blocked.\n\n286\n00:14:43.210 --> 00:14:45.710\nAnd I wouldn't turn on\nlogging in production, but\n\n287\n00:14:45.710 --> 00:14:47.370\nI am gonna turn on\nlogging here in the show.\n\n288\n00:14:47.370 --> 00:14:50.000\nSo I'm just gonna add that keyword\nlog right there to the end.\n\n289\n00:14:50.000 --> 00:14:53.150\nThe other things that you\nsee up here though, DSCP,\n\n290\n00:14:53.150 --> 00:14:54.860\nthose are div serve code points.\n\n291\n00:14:54.860 --> 00:14:56.100\nIf you're doing quality of service,\n\n292\n00:14:56.100 --> 00:14:58.158\nyou might be tagging\ntraffic as certain things.\n\n293\n00:14:58.158 --> 00:15:00.980\nSo voice over IP traffic\ngets tagged as one thing,\n\n294\n00:15:00.980 --> 00:15:05.970\nand streaming video gets tagged as another\nand FTP gets tagged as something else.\n\n295\n00:15:05.970 --> 00:15:09.159\nI can build my ACL based\non what DSPC has said.\n\n296\n00:15:09.159 --> 00:15:11.330\nIt's kinda a neat thing to do.\n\n297\n00:15:11.330 --> 00:15:14.450\nWe can do, whether it's fragmented\ntraffic or whole traffic.\n\n298\n00:15:14.450 --> 00:15:20.330\nWe can do precedents if we specifying\nsome additional quality service settings.\n\n299\n00:15:20.330 --> 00:15:21.480\nWe've got time ranges.\n\n300\n00:15:21.480 --> 00:15:22.620\nWe can tie it to a schedule.\n\n301\n00:15:22.620 --> 00:15:24.790\nThis ACL might only apply\nduring certain windows.\n\n302\n00:15:24.790 --> 00:15:29.790\nAnd type or service or TOS, that's the old\nschool type of quality of service.\n\n303\n00:15:29.790 --> 00:15:33.660\nYou can filter based on that too, so\na lot of advanced functionality in here.\n\n304\n00:15:33.660 --> 00:15:34.580\nNone of those are on the exam.\n\n305\n00:15:35.870 --> 00:15:39.350\nAll right, so\nI've created my first entry right?\n\n306\n00:15:39.350 --> 00:15:40.600\nSo I'm done.\n\n307\n00:15:40.600 --> 00:15:45.220\nWell, just like a standard ACL,\non an extended ACL there's an implied\n\n308\n00:15:45.220 --> 00:15:49.320\nline at the very end of this thing,\nthere's an implicit deny all.\n\n309\n00:15:49.320 --> 00:15:53.671\nIf I stop right here, I'm denying\ntraffic from router one to router 4 and\n\n310\n00:15:53.671 --> 00:15:55.918\nI'm also denying everybody else, so\n\n311\n00:15:55.918 --> 00:16:00.149\nI need to add one more alignment\nthat permits everything else, right?\n\n312\n00:16:00.149 --> 00:16:08.970\nI'm gonna say access-list 101\npermit ip any any, right?\n\n313\n00:16:08.970 --> 00:16:13.180\nI'm permitting IP traffic from\nany source to any destination,\n\n314\n00:16:13.180 --> 00:16:16.660\nI'm allowing everything\nelse to pass through, okay?\n\n315\n00:16:16.660 --> 00:16:17.362\nSo I'm gonna set that.\n\n316\n00:16:17.362 --> 00:16:23.260\nNow normally I'd stop right here But\nI am going to add one more entry, right?\n\n317\n00:16:23.260 --> 00:16:26.470\nBecause we're going to have EIGRP in play.\n\n318\n00:16:26.470 --> 00:16:28.030\nAnd actually,\nmaybe I won't add that entry,\n\n319\n00:16:28.030 --> 00:16:29.690\nmaybe I'll just leave it off, right?\n\n320\n00:16:29.690 --> 00:16:31.250\nBecause maybe we don't know.\n\n321\n00:16:31.250 --> 00:16:34.695\nHey, does EIGRP get included under IP?\n\n322\n00:16:34.695 --> 00:16:38.604\nEIGRP uses multi-cast,\nmulti-cast uses an IPv4 address,\n\n323\n00:16:38.604 --> 00:16:42.040\nso It should be allowed through,\nbut is it?\n\n324\n00:16:42.040 --> 00:16:43.420\nMaybe it isn't, right?\n\n325\n00:16:43.420 --> 00:16:44.100\nWe'll find out.\n\n326\n00:16:44.100 --> 00:16:46.170\nIf it gets blocked, we'll know it.\n\n327\n00:16:46.170 --> 00:16:49.520\nAnd if it gets blocked,\nwe'll see it in our, well I guess\n\n328\n00:16:49.520 --> 00:16:52.170\nwe wouldn't necessarily see it in our\nlogs unless we turned logging on.\n\n329\n00:16:52.170 --> 00:16:54.750\nThe implicit deny all,\nit's there at the end.\n\n330\n00:16:54.750 --> 00:16:58.950\nWe don't see it, but\nit is there, and it doesn't log.\n\n331\n00:16:58.950 --> 00:17:02.050\nSo if something matches that and\ngets denied, we don't really know it.\n\n332\n00:17:02.050 --> 00:17:04.450\nIf I wanna keep a record of that,\nthough, I could add one more line.\n\n333\n00:17:04.450 --> 00:17:12.490\nI could say access-list 101 deny ip any\nany, and throw a log keyword on the end.\n\n334\n00:17:12.490 --> 00:17:14.140\nThat's actually not gonna work for\nme though, is it?\n\n335\n00:17:14.140 --> 00:17:18.872\nIf EIGRP is included in IP,\nthen it would be permitted by this line.\n\n336\n00:17:18.872 --> 00:17:21.922\nIf it's not included in IP then it's not\ngoing to match this line either cuz this\n\n337\n00:17:21.922 --> 00:17:23.070\nline is keying off of IP also.\n\n338\n00:17:23.070 --> 00:17:26.410\nSo this is where you kind of have to\nfiddle around with it a little bit.\n\n339\n00:17:26.410 --> 00:17:29.400\nWe could say that we\nspecifically permit it, so\n\n340\n00:17:29.400 --> 00:17:33.290\nI could permit eigrp any any, like that.\n\n341\n00:17:33.290 --> 00:17:35.271\nRight, and add a log to the end, and\n\n342\n00:17:35.271 --> 00:17:38.690\nthat way if any traffic matches\nit I know I need the line.\n\n343\n00:17:38.690 --> 00:17:41.212\nBut if no traffic matches it,\nI know it's getting approved up here and\n\n344\n00:17:41.212 --> 00:17:42.684\nI don't have to worry about it any more.\n\n345\n00:17:42.684 --> 00:17:46.148\nSo you can kind of test a little bit\nto figure out exactly what you need to\n\n346\n00:17:46.148 --> 00:17:49.550\nget your traffic working in\nyour environment, all right.\n\n347\n00:17:49.550 --> 00:17:53.840\nBut once we've got that set up,\nnow my ACL's in pretty good shape, right?\n\n348\n00:17:53.840 --> 00:17:56.110\nLet's take a look at what\nthe actual ACL looks like.\n\n349\n00:17:56.110 --> 00:17:58.600\nSo that was access list 101.\n\n350\n00:17:58.600 --> 00:18:02.140\nI've got a deny that's blocking\nrouter one to router four.\n\n351\n00:18:02.140 --> 00:18:05.180\nAnd it's gonna generate log\nmessages whenever that happens.\n\n352\n00:18:05.180 --> 00:18:07.280\nI've got a permit that's\npermitting everything else.\n\n353\n00:18:07.280 --> 00:18:10.730\nEverything else is okay, I just want to\nblock router one going to router four.\n\n354\n00:18:10.730 --> 00:18:13.690\nAnd then, I've got an extra\nlittle entry in here just for\n\n355\n00:18:13.690 --> 00:18:15.190\nEIGRP just in case I need it.\n\n356\n00:18:15.190 --> 00:18:17.550\nIf I don't, I can always come and\nremove this line later.\n\n357\n00:18:17.550 --> 00:18:19.940\nNo sense in having an extra line\nin the ACL if we don't need it.\n\n358\n00:18:21.480 --> 00:18:23.680\nAll right, now I just need to\nattach it to an interface.\n\n359\n00:18:23.680 --> 00:18:28.650\nFortunately attaching extended ACL to an\ninterface, is the same as a standard ACL.\n\n360\n00:18:28.650 --> 00:18:31.700\nSo all I have to do is get into\nthe appropriate interface,\n\n361\n00:18:31.700 --> 00:18:33.250\nwhich I've already forgotten.\n\n362\n00:18:33.250 --> 00:18:35.425\nSo if I get back to my math,\nit's gonna be GI1/0.\n\n363\n00:18:35.425 --> 00:18:37.747\nI want it incoming on GI1/0.\n\n364\n00:18:37.747 --> 00:18:41.320\nSo I'll get into the interface GI1/0.\n\n365\n00:18:41.320 --> 00:18:45.570\nAnd I'll say IP access-group 101 in,\n\n366\n00:18:45.570 --> 00:18:51.390\nI'm catching traffic as it\ncomes in versus out, right?\n\n367\n00:18:51.390 --> 00:18:53.994\nAnd if I do a show ip int gi1/0,\n\n368\n00:18:53.994 --> 00:18:58.834\nI'm gonna filter that just for\nlines talking about the list.\n\n369\n00:18:58.834 --> 00:19:03.930\nI can see that I don't have an outgoing\nlist, and I just have 101 as incoming.\n\n370\n00:19:03.930 --> 00:19:07.320\nAnd let me make sure I remove the list\nfrom the other episode on 2/0, so\n\n371\n00:19:07.320 --> 00:19:09.599\nI'm gonna do the same thing and\nlook at 2/0 and\n\n372\n00:19:09.599 --> 00:19:12.420\nmake sure I don't have an acl set there,\ngood.\n\n373\n00:19:12.420 --> 00:19:16.600\nAll right so\nall we have is our extended acl.\n\n374\n00:19:16.600 --> 00:19:19.560\nBut it's in place now, and\nit should be doing its job.\n\n375\n00:19:19.560 --> 00:19:23.621\nIf I do a show access-list 101,\nthere it is and\n\n376\n00:19:23.621 --> 00:19:28.374\nI've already got seven matches\non ip any any, all right?\n\n377\n00:19:28.374 --> 00:19:31.470\nSo, it's good,\ntraffic is moving through it.\n\n378\n00:19:31.470 --> 00:19:33.520\nLet's go test router one.\n\n379\n00:19:33.520 --> 00:19:41.605\nOn router one,\nif I do a #show ip eigrp neighbors.\n\n380\n00:19:41.605 --> 00:19:43.229\nWhoops, I can type, there we go.\n\n381\n00:19:44.660 --> 00:19:48.899\nI still have a neighbor\nrelationship with 192.168.1.2,\n\n382\n00:19:48.899 --> 00:19:50.995\nand I've heard from it recently.\n\n383\n00:19:50.995 --> 00:19:53.353\nSo actually uptime is pretty high,\n\n384\n00:19:53.353 --> 00:19:58.237\nmy whole timer is at 13 seconds 11\nseconds, and it just reset to 14.\n\n385\n00:19:58.237 --> 00:19:59.974\nSo I'm talking to that other person.\n\n386\n00:19:59.974 --> 00:20:03.380\nSo EIGRP is working between router one and\nrouter two.\n\n387\n00:20:03.380 --> 00:20:06.496\nAnd back on router 2,\nwhen I looked at that ACL,\n\n388\n00:20:06.496 --> 00:20:09.772\nsee how there's no matches\nagainst the end entry?\n\n389\n00:20:09.772 --> 00:20:13.413\nThat's how I know EIGRP is\nactually included in IP so\n\n390\n00:20:13.413 --> 00:20:18.310\nit's being counted right there and\nso I know it's not being blocked.\n\n391\n00:20:18.310 --> 00:20:22.340\nSo just this last line I don't actually\nneed it, I can get rid of that entry.\n\n392\n00:20:22.340 --> 00:20:25.510\nAnd now my ACL's a little bit\nsmaller then it was before, right.\n\n393\n00:20:25.510 --> 00:20:27.470\nAnd we'll talk about removing\nentries here in a little bit.\n\n394\n00:20:28.630 --> 00:20:29.590\nAll right, let's test the rest of it.\n\n395\n00:20:29.590 --> 00:20:33.400\nSo on router one let's see\nwhat I can do on the network.\n\n396\n00:20:33.400 --> 00:20:35.680\nNow earlier I was able\nto ping router four, so\n\n397\n00:20:35.680 --> 00:20:38.079\nnow I'm gonna try to ping 192.168.2.4.\n\n398\n00:20:39.120 --> 00:20:40.650\nAnd I can't do it, all right.\n\n399\n00:20:40.650 --> 00:20:41.770\nI'm not able to ping.\n\n400\n00:20:41.770 --> 00:20:46.440\nAnd if I jump over to Router 2,\nI can see Axis list 101 denied,\n\n401\n00:20:46.440 --> 00:20:49.110\nit denied my CMP traffic.\n\n402\n00:20:49.110 --> 00:20:50.350\nIt denied a ping.\n\n403\n00:20:50.350 --> 00:20:51.475\nAnd it's showing that one right there.\n\n404\n00:20:51.475 --> 00:20:54.460\nNow notice how it only says 1 packet,\neven though I sent 5.\n\n405\n00:20:54.460 --> 00:20:57.517\nThe reason is it combines\nlog messages like these so\n\n406\n00:20:57.517 --> 00:20:59.732\nthat it doesn't flood your screen.\n\n407\n00:20:59.732 --> 00:21:01.630\nSo it did actually block all five,\n\n408\n00:21:01.630 --> 00:21:04.452\nbut it's just showing 1\npacket as being blocked.\n\n409\n00:21:04.452 --> 00:21:06.380\nAll right, let's try Telnet.\n\n410\n00:21:06.380 --> 00:21:08.145\nSo if I switch over to Telnet this time.\n\n411\n00:21:08.145 --> 00:21:09.670\nWhich actually should\njust be in my history.\n\n412\n00:21:10.870 --> 00:21:12.890\nDestination unreachable gateway or\nhost down.\n\n413\n00:21:12.890 --> 00:21:16.493\nLet's try ssh, and same thing, right?\n\n414\n00:21:16.493 --> 00:21:19.450\nSo I'm completely blocked\ngoing to router 4.\n\n415\n00:21:19.450 --> 00:21:23.470\nBut if I try and ping other stuff over\nthere like 192.168.2.2, that's router 2,\n\n416\n00:21:23.470 --> 00:21:25.386\nI can get to router 2.\n\n417\n00:21:25.386 --> 00:21:29.085\nI just can't get to, whoops,\nthat one doesn't exist.\n\n418\n00:21:29.085 --> 00:21:33.508\nI can't get to things that don't exist and\nI can't get to router four.\n\n419\n00:21:33.508 --> 00:21:37.336\nAnd back over here on router two,\nmy log messages, there I can see TCP\n\n420\n00:21:37.336 --> 00:21:41.290\ntraffic was denied from my router\ngoing over to the other router.\n\n421\n00:21:41.290 --> 00:21:45.350\nAll right, it's just showing TCP here, so\nI don't know if that was telnet or SSH,\n\n422\n00:21:45.350 --> 00:21:46.170\nwhichever one.\n\n423\n00:21:46.170 --> 00:21:48.660\nBut it blocked that traffic,\nand I can see it's working.\n\n424\n00:21:48.660 --> 00:21:54.760\nAll right, so this ACL is now blocking\nbased on source and destination.\n\n425\n00:21:54.760 --> 00:21:58.110\nAnd it really wasn't that much\nharder than a standard ACL, right?\n\n426\n00:21:58.110 --> 00:22:03.960\nSo when I do a show access-list and\nwe look at it,\n\n427\n00:22:03.960 --> 00:22:10.010\nlet me look at the config,\njust gonna be a little better, here.\n\n428\n00:22:10.010 --> 00:22:14.638\nSo when we look at how those access-lists\nare defined, the standard ACL and\n\n429\n00:22:14.638 --> 00:22:18.198\nthe extended ACL isn't all\nthat much different, right?\n\n430\n00:22:18.198 --> 00:22:22.900\nThe main difference, you have to put\nthe protocol suite, so IP or TCP or UDP.\n\n431\n00:22:22.900 --> 00:22:26.300\nAnd then you have to\nhave a destination also.\n\n432\n00:22:26.300 --> 00:22:30.210\nAll right, but this is probably\nthe most basic of extended ACLs.\n\n433\n00:22:30.210 --> 00:22:32.730\nLet's go a little more advanced.\n\n434\n00:22:32.730 --> 00:22:36.460\nMaybe I don't wanna block everything\nfrom router one to router four.\n\n435\n00:22:36.460 --> 00:22:38.290\nI just wanna block Telnet.\n\n436\n00:22:38.290 --> 00:22:40.800\nRight, at the beginning of the episode\nI said, Telnet's not secure.\n\n437\n00:22:40.800 --> 00:22:42.060\nI don't want Telnet.\n\n438\n00:22:42.060 --> 00:22:44.170\nSSH is okay, ping is okay.\n\n439\n00:22:44.170 --> 00:22:45.740\nI just don't want Telnet.\n\n440\n00:22:46.740 --> 00:22:50.860\nWell, we can recraft our access\nlist to account for that, right?\n\n441\n00:22:50.860 --> 00:22:52.980\nSo I'm gonna create another access list.\n\n442\n00:22:52.980 --> 00:22:57.930\nI'm gonna do access-list, 102, and\n\n443\n00:22:57.930 --> 00:23:04.320\nI'm going to deny tcp, so\nI'm being specific here, right.\n\n444\n00:23:04.320 --> 00:23:06.110\nI need to know telnet, what is telnet?\n\n445\n00:23:06.110 --> 00:23:07.560\nTCP port 23.\n\n446\n00:23:07.560 --> 00:23:10.270\nRemember in the CCE and\nT training how we had that list of\n\n447\n00:23:10.270 --> 00:23:11.990\nport numbers that you're supposed\nto memorize for the exam?\n\n448\n00:23:11.990 --> 00:23:14.570\nYou were probably thinking,\nI don't want to memorize this junk.\n\n449\n00:23:14.570 --> 00:23:16.350\nHere's where we need it, right.\n\n450\n00:23:16.350 --> 00:23:19.330\nI need to know that Telnet uses TCP.\n\n451\n00:23:19.330 --> 00:23:22.490\nI need to know that TFTP uses UDP.\n\n452\n00:23:22.490 --> 00:23:25.809\nI need to know which protocols\nuse which protocols,\n\n453\n00:23:25.809 --> 00:23:29.589\nwhich layer five sessions use\nwhich layer four protocols.\n\n454\n00:23:29.589 --> 00:23:31.660\nSo that I can match these things up.\n\n455\n00:23:31.660 --> 00:23:34.850\nSo I know that Telnet is\na TCP based protocol.\n\n456\n00:23:34.850 --> 00:23:42.867\nAnd then I'm gonna block from 192.168.1.1,\nso that's router 1.\n\n457\n00:23:42.867 --> 00:23:46.896\nAnd if I do my question mark now,\nthings will go a little different, right?\n\n458\n00:23:46.896 --> 00:23:50.320\nA minute ago,\nall I had was destination stuff, right?\n\n459\n00:23:50.320 --> 00:23:54.010\nDestination address or any,\nthat's what I had, and host.\n\n460\n00:23:54.010 --> 00:24:00.192\nBut now I've got eq,\ngt, lt, neq and range.\n\n461\n00:24:00.192 --> 00:24:01.692\nWhat are those?\n\n462\n00:24:01.692 --> 00:24:05.820\nPort numbers, eq, equals.\n\n463\n00:24:05.820 --> 00:24:13.230\nIf the port equals this number, gt,\nif the port is greater than this number.\n\n464\n00:24:14.230 --> 00:24:18.830\nMaybe I wanna allow ports 1 through 1024,\nthe well-known ports, and\n\n465\n00:24:18.830 --> 00:24:21.140\nI wanna block everything above 1024.\n\n466\n00:24:21.140 --> 00:24:23.419\nI could say gt 1024.\n\n467\n00:24:23.419 --> 00:24:27.150\nNow anything greater than 1024 will\nget blocked, so you could do that.\n\n468\n00:24:27.150 --> 00:24:29.532\nLt is less than, you can do the opposite.\n\n469\n00:24:29.532 --> 00:24:32.496\nI wanna permit anything less than 1025,\n\n470\n00:24:32.496 --> 00:24:37.415\nthat would achieve the same goal,\njust two ways of writing the same thing.\n\n471\n00:24:37.415 --> 00:24:43.370\nNeq, not equal, I might wanna block\nanything not equal to port 80.\n\n472\n00:24:43.370 --> 00:24:46.380\nMaybe I have a web server and I only wanna\nallow people to get to it on port 80.\n\n473\n00:24:46.380 --> 00:24:50.460\nWell, I can do a permit with an eq 80, or\n\n474\n00:24:50.460 --> 00:24:54.235\nI can do a deny with an neq 80,\na not equal.\n\n475\n00:24:54.235 --> 00:24:57.640\nIt'll achieved the same thing,\ntwo ways of writing the same thing.\n\n476\n00:24:57.640 --> 00:24:59.340\nAnd then lastly is a range.\n\n477\n00:24:59.340 --> 00:25:01.440\nI use this with SIP phones a lot.\n\n478\n00:25:01.440 --> 00:25:05.600\nSIP phones, they'll usually have a UDP\nrange, it's like 10,000 to 10,500 or\n\n479\n00:25:05.600 --> 00:25:07.450\nsomething crazy like that.\n\n480\n00:25:07.450 --> 00:25:12.890\nAnd so you'll say permit for the range,\nfor the UDP range 10,000 through 10,500 so\n\n481\n00:25:12.890 --> 00:25:15.860\nyou can grab a block of\nport numbers like that.\n\n482\n00:25:16.920 --> 00:25:18.980\nBut the key thing to\nnote with all of these,\n\n483\n00:25:18.980 --> 00:25:21.530\nthey don't really say it very well here.\n\n484\n00:25:21.530 --> 00:25:26.180\nIs that all of these is\ntalking about a source port.\n\n485\n00:25:26.180 --> 00:25:29.340\nSo Wes, we'll put you on the spot.\n\n486\n00:25:29.340 --> 00:25:33.590\nIf I'm on a machine and\nI'm gonna Telnet to a server.\n\n487\n00:25:33.590 --> 00:25:38.380\nI know it's Telnet uses tcp port 23 but\nthat's my destination port.\n\n488\n00:25:38.380 --> 00:25:39.988\nWhat is my source port when I Telnet.\n\n489\n00:25:39.988 --> 00:25:43.073\n&gt;&gt; I think it's gonna be above 49151.\n\n490\n00:25:43.073 --> 00:25:47.198\nSo I'll be 49152 to 65,535\n&gt;&gt; Right, so\n\n491\n00:25:47.198 --> 00:25:51.906\nwe know the range, so\nyou know it's 49,152 or 53,\n\n492\n00:25:51.906 --> 00:25:55.784\nwhatever it is, all the way up to 65,535.\n\n493\n00:25:55.784 --> 00:25:59.744\nBig range, but I don't know what\nit's gonna pick, who knows?\n\n494\n00:25:59.744 --> 00:26:03.209\nAnd you never wanna just approve a giant\nrange like that cuz hackers can take\n\n495\n00:26:03.209 --> 00:26:06.399\nadvantage of that pretty easy and\nstart scanning the whole range, so\n\n496\n00:26:06.399 --> 00:26:08.140\nyou want to be specific.\n\n497\n00:26:08.140 --> 00:26:11.580\nAnd on a source port,\nwe don't know what the source port is.\n\n498\n00:26:11.580 --> 00:26:14.490\nActually, I'm telnetting into\na terminal server right now.\n\n499\n00:26:14.490 --> 00:26:20.595\nIf I were to do a netstat -an.\n\n500\n00:26:20.595 --> 00:26:25.710\nI'm actually overriding the Telnet ports,\nso I'm using a couple weird ports.\n\n501\n00:26:25.710 --> 00:26:27.950\nLet's see source ports are though.\n\n502\n00:26:27.950 --> 00:26:28.910\nWhen I Telnet,\n\n503\n00:26:28.910 --> 00:26:33.790\nI'm actually using ports 2000 I'm sure\nthey're in here somewhere, right here.\n\n504\n00:26:33.790 --> 00:26:35.590\nSo, this is my connection.\n\n505\n00:26:35.590 --> 00:26:39.920\nI'm connected to a terminal\nserver that has the console for\n\n506\n00:26:39.920 --> 00:26:42.150\nrouter one is on Port 2001.\n\n507\n00:26:42.150 --> 00:26:46.950\nSo I'm seeing a destination, for Telnet\nyou'd normally see destination of 23.\n\n508\n00:26:46.950 --> 00:26:51.400\nBut on the source, see how it's 49290?\n\n509\n00:26:51.400 --> 00:26:52.320\nThat was randomly picked.\n\n510\n00:26:52.320 --> 00:26:54.700\nI didn't pick that, it picks it.\n\n511\n00:26:54.700 --> 00:26:58.580\nSo we don't normally filter\nbased on a source port.\n\n512\n00:26:58.580 --> 00:27:00.610\nIn fact, the only time you really\nfilter on a source port is when\n\n513\n00:27:00.610 --> 00:27:03.400\nyou're trying to filter\nreplies from the server.\n\n514\n00:27:03.400 --> 00:27:06.600\nCuz when a server replies it will\nreply with a source port of 23 or\n\n515\n00:27:06.600 --> 00:27:10.530\na source port of 80, but it's always\nbetter to kill traffic on the way\n\n516\n00:27:10.530 --> 00:27:12.920\nto the server to not\nwaste the server's time.\n\n517\n00:27:12.920 --> 00:27:14.319\nThen it is to catch it\nwhen the servers replying,\n\n518\n00:27:14.319 --> 00:27:17.630\nthe server's already done the work,\nnow we've wasted resources.\n\n519\n00:27:17.630 --> 00:27:21.230\nSo we rarely filter\nbased on a source port.\n\n520\n00:27:21.230 --> 00:27:23.268\nThere are some scenarios, but it is rare.\n\n521\n00:27:23.268 --> 00:27:27.710\nAnd so when you look at the rule,\nit's not very clear about that.\n\n522\n00:27:27.710 --> 00:27:30.630\nIt doesn't say this is a source, it\nassumes you know that because you just put\n\n523\n00:27:30.630 --> 00:27:34.110\nthe source IP, so now you must be\ntalking about the source port.\n\n524\n00:27:35.330 --> 00:27:39.550\nBut I don't wanna do a source port,\nI'm gonna move on to the destination.\n\n525\n00:27:39.550 --> 00:27:45.420\nAnd the destination is router four,\nso I'm gonna say, host 192.168.2.4.\n\n526\n00:27:45.420 --> 00:27:49.310\nAnd now if I do a question mark,\nI see the same stuff.\n\n527\n00:27:49.310 --> 00:27:50.960\nWell, some additional things too.\n\n528\n00:27:50.960 --> 00:27:53.880\nBut now when I do eq or gt or lt,\n\n529\n00:27:53.880 --> 00:27:57.850\nthis is the destination port and\nI do know the destination port.\n\n530\n00:27:57.850 --> 00:28:01.450\nIf this is Telnet the destination\nport is going to equal.\n\n531\n00:28:01.450 --> 00:28:03.860\nSo I'll do eq 23.\n\n532\n00:28:03.860 --> 00:28:06.434\nOr if you're forgetful you\ncan do a question mark and\n\n533\n00:28:06.434 --> 00:28:09.433\nthere's actually some of them\nthat are identified by name.\n\n534\n00:28:09.433 --> 00:28:13.952\nYou can't always rely on this but there's\na good chunk of them in here, like FTP,\n\n535\n00:28:13.952 --> 00:28:18.014\nand SSH, Telnet, those those guys\nare in there, they're well known but\n\n536\n00:28:18.014 --> 00:28:20.310\nthere's some that aren't in here.\n\n537\n00:28:20.310 --> 00:28:23.780\nAnd so\nthen you've got a little bit a problem.\n\n538\n00:28:23.780 --> 00:28:25.680\nSo it's not perfect.\n\n539\n00:28:25.680 --> 00:28:30.590\nBut I think HTTPS, is secure,\nis it in here somewhere?\n\n540\n00:28:30.590 --> 00:28:32.710\nI don't think it's in here.\n\n541\n00:28:32.710 --> 00:28:36.740\nYeah, so if you wanna do HTTPS it doesn't\nhave a shortcut name for whatever reason.\n\n542\n00:28:36.740 --> 00:28:38.020\nApparently there's not.\n\n543\n00:28:38.020 --> 00:28:40.795\nIt's not popular enough even though\nit's used by more than 50% of web users.\n\n544\n00:28:40.795 --> 00:28:43.327\nBut, anyhow,\nit's better to know the port number,\n\n545\n00:28:43.327 --> 00:28:47.050\ndon't rely on these little shortcuts,\nknow the port number.\n\n546\n00:28:47.050 --> 00:28:52.040\nI want port 23, so I'm just gonna\nsay eq 23, and now we're good.\n\n547\n00:28:52.040 --> 00:28:56.620\nI want to deny TCP traffic\ncoming from router 1 going\n\n548\n00:28:56.620 --> 00:28:59.120\nto router 2 with a destination of port 23.\n\n549\n00:28:59.120 --> 00:29:03.060\nEverything else is okay,\nI just wanna block that.\n\n550\n00:29:03.060 --> 00:29:09.480\nAnd so I do need to add one more line to\naccess list 102 permitting IP any any.\n\n551\n00:29:09.480 --> 00:29:11.530\nI want to permit everything else.\n\n552\n00:29:11.530 --> 00:29:13.630\nThose two lines right there,\nthat's perfect.\n\n553\n00:29:13.630 --> 00:29:18.570\nNow I'm just blocking router one to\nrouter four when it's using Telnet, and\n\n554\n00:29:18.570 --> 00:29:20.490\neverything else is okay.\n\n555\n00:29:20.490 --> 00:29:22.300\nEverything else is approved.\n\n556\n00:29:22.300 --> 00:29:25.840\nI just need to put this in place so\nlet me get into my interface which, again,\n\n557\n00:29:25.840 --> 00:29:29.040\nI've already forgotten is gi1/0.\n\n558\n00:29:29.040 --> 00:29:31.880\nThat's half the battle these days,\njust keeping interfaces straight.\n\n559\n00:29:31.880 --> 00:29:39.050\nAnd I'll do the, ip access-group 102 in,\nthat's gonna replace 101.\n\n560\n00:29:39.050 --> 00:29:46.620\nAnd if I do a show ip int gi1/0 and\nfilter that down.\n\n561\n00:29:46.620 --> 00:29:50.380\nUsing the pipe filters is really handy for\nfinding exactly what you wanna see,\n\n562\n00:29:50.380 --> 00:29:52.740\nand not having to sift through\na bunch of information.\n\n563\n00:29:52.740 --> 00:29:54.490\nOn the exam where you\nhave time constraints,\n\n564\n00:29:54.490 --> 00:29:56.570\nthat's something you wanna\ntake into consideration.\n\n565\n00:29:56.570 --> 00:29:59.200\nBut I can see that 102 is now in place.\n\n566\n00:29:59.200 --> 00:30:05.290\nAnd if I show that access list, there it\nis, and I've already got traffic matching.\n\n567\n00:30:05.290 --> 00:30:06.260\nWhat's matching?\n\n568\n00:30:06.260 --> 00:30:09.680\nWell, EIGRP,\nit's sending its little updates.\n\n569\n00:30:09.680 --> 00:30:12.130\nCDP, Cisco Discovery Protocol,\nit's sending updates.\n\n570\n00:30:12.130 --> 00:30:14.260\nAll that stuff,\nthat's gonna trigger these matches.\n\n571\n00:30:14.260 --> 00:30:17.140\nBut I haven't tried Telnet yet\nso I haven't seen that one.\n\n572\n00:30:17.140 --> 00:30:18.040\nLet's go and see if that's working.\n\n573\n00:30:18.040 --> 00:30:20.630\nI'm gonna jump over to router one.\n\n574\n00:30:20.630 --> 00:30:24.760\nAnd on router one,\nI'm gonna try and ping router four.\n\n575\n00:30:24.760 --> 00:30:29.640\nNow, ping doesn't use port 23,\nactually doesn't use a port at all.\n\n576\n00:30:29.640 --> 00:30:31.030\nIt's ICMP, it doesn't have ports.\n\n577\n00:30:31.030 --> 00:30:35.240\nIt doesn't track each individual ping,\nit just hopes it gets an echo back.\n\n578\n00:30:35.240 --> 00:30:38.870\nI guess there is a little identifier\nnumber in there but it's not a port.\n\n579\n00:30:38.870 --> 00:30:41.020\nSo when I send this ping out,\n\n580\n00:30:41.020 --> 00:30:45.790\nit shouldn't match the deny and\nit should catch the next one, the permit.\n\n581\n00:30:45.790 --> 00:30:48.000\nSo when I ping it, I get through, success.\n\n582\n00:30:49.020 --> 00:30:54.010\nAnd SSH, SSH isn't Telnet,\nit's using port 22.\n\n583\n00:30:54.010 --> 00:30:56.980\nAnd so when I SSH out, that's TCP port 22,\n\n584\n00:30:56.980 --> 00:31:01.100\njust getting the password prompt is\nenough to know that it made it there.\n\n585\n00:31:01.100 --> 00:31:03.490\nBut I'm able to log in,\nand there's router four.\n\n586\n00:31:03.490 --> 00:31:08.400\nNow both of those were successes,\nwe made it through.\n\n587\n00:31:08.400 --> 00:31:12.540\nAnd so on router two, it should just\nbe incrementing the success count,\n\n588\n00:31:12.540 --> 00:31:15.430\nand I'm all the way up to 62 matches now.\n\n589\n00:31:15.430 --> 00:31:17.350\nBut Telnet, that's the one that I blocked,\n\n590\n00:31:17.350 --> 00:31:22.580\nso let's test out good old Telnet,\nand I was able to Telnet before.\n\n591\n00:31:22.580 --> 00:31:23.800\nAnd now I'm blocked.\n\n592\n00:31:23.800 --> 00:31:28.690\nNow when I go back to router two, I should\nbe able to see that, and there it is.\n\n593\n00:31:28.690 --> 00:31:30.750\nI got one match on that Telnet line.\n\n594\n00:31:30.750 --> 00:31:32.120\nI forgot to turn on logging so\n\n595\n00:31:32.120 --> 00:31:35.060\nI didn't get a nice log message,\nbut it did match it.\n\n596\n00:31:35.060 --> 00:31:37.080\nIt blocked just Telnet.\n\n597\n00:31:37.080 --> 00:31:40.980\nSo you can see with an extended ACL,\nwe get a lot more power.\n\n598\n00:31:40.980 --> 00:31:45.650\nWe get the power to say this host,\nwhen it talks to this other host or\n\n599\n00:31:45.650 --> 00:31:46.680\nyou can do an entire network, right.\n\n600\n00:31:46.680 --> 00:31:51.650\nThis entire network when it talks to this\none host, on this particular protocol and\n\n601\n00:31:51.650 --> 00:31:54.380\nyou get in there and you filter that and\nyou tie down and restrict it.\n\n602\n00:31:54.380 --> 00:31:58.960\nSo definitely a cool thing to do there,\nreally tighten up those permissions and\n\n603\n00:31:58.960 --> 00:32:00.185\nget things set the way you want.\n\n604\n00:32:00.185 --> 00:32:01.010\nThere's a lot of power here.\n\n605\n00:32:02.210 --> 00:32:05.685\nIt is more complex so it takes a little\nlonger to get these worked out.\n\n606\n00:32:05.685 --> 00:32:09.040\nYou'll have to do some testing and\nexperimenting before quite get it right,\n\n607\n00:32:09.040 --> 00:32:10.302\nexactly the way you want.\n\n608\n00:32:10.302 --> 00:32:13.990\nAnd you'll find you need to add lines and\nremove lines to get everything kind of\n\n609\n00:32:13.990 --> 00:32:16.950\nset the way you need it, and\nwe have not really covered that yet.\n\n610\n00:32:16.950 --> 00:32:20.200\nI know I'm low on time,\nWas is giving me the evil eye over here.\n\n611\n00:32:20.200 --> 00:32:22.240\nSo maybe we'll go on to a part three.\n\n612\n00:32:22.240 --> 00:32:25.770\nAnd in part three I wanna show you some\nmore examples of extended ACLs and\n\n613\n00:32:25.770 --> 00:32:29.000\nI wanna show you a way that we\ncan make them easy to edit.\n\n614\n00:32:29.000 --> 00:32:32.090\nEasy to insert and\nremove lines even from the middle of it.\n\n615\n00:32:32.090 --> 00:32:34.890\nSo that we can tweak it and change it\nto get it the way that we want it,\n\n616\n00:32:34.890 --> 00:32:37.640\nto make that perfect list before\nwe move it into production.\n\n617\n00:32:37.640 --> 00:32:40.330\nSo definitely an important\nthing to learn and see, and\n\n618\n00:32:40.330 --> 00:32:43.900\nI haven't even talked about IPv6 yet, so\nI definitely need to tackle that one, too.\n\n619\n00:32:43.900 --> 00:32:45.310\nWe'll do that one in part three.\n\n620\n00:32:45.310 --> 00:32:47.370\n&gt;&gt; Well, Don,\nwe appreciate you stopping the studios.\n\n621\n00:32:47.370 --> 00:32:50.920\nYeah, we gotta put blocks on this guy's\nfeet to slow him down a little bit.\n\n622\n00:32:50.920 --> 00:32:52.170\nAnd as you've already mentioned,\n\n623\n00:32:52.170 --> 00:32:54.490\nit does look like we are coming\nto the end of another episode.\n\n624\n00:32:54.490 --> 00:32:57.640\nBut before we do, do you got anything else\nyou'd like to maybe pull out of the old\n\n625\n00:32:57.640 --> 00:32:59.600\nACL cookbook for our viewers?\n\n626\n00:32:59.600 --> 00:33:03.320\n&gt;&gt; Key thing is, I know I mentioned\nalways use standard ACLs if you can, but\n\n627\n00:33:03.320 --> 00:33:05.690\ndon't feel bad if you have to go and\nuse an extended ACL.\n\n628\n00:33:05.690 --> 00:33:06.840\nThe routers can handle it.\n\n629\n00:33:06.840 --> 00:33:09.200\nJust know that, the bigger and\nbigger that ACL gets,\n\n630\n00:33:09.200 --> 00:33:12.785\nthe more entries you have in it,\nyou do need to keep track of performance.\n\n631\n00:33:12.785 --> 00:33:14.975\nJust make sure if the router\nstarts slowing down,\n\n632\n00:33:14.975 --> 00:33:16.905\nit might be time to put\nfirewall in instead.\n\n633\n00:33:16.905 --> 00:33:18.975\nAlways remember there is\nthat option out there.\n\n634\n00:33:18.975 --> 00:33:21.031\n&gt;&gt; All right, great information Don,\nwe appreciate you, and\n\n635\n00:33:21.031 --> 00:33:22.129\nwe appreciate you the viewers.\n\n636\n00:33:22.129 --> 00:33:25.317\nStick around because we are coming back\nwith the part three, but until then,\n\n637\n00:33:25.317 --> 00:33:27.875\nsigning up for ITProTV,\nI've been your host Wes Brian.\n\n638\n00:33:27.875 --> 00:33:28.535\n&gt;&gt; And I'm Don Pezet.\n\n639\n00:33:28.535 --> 00:33:30.076\n&gt;&gt; And we'll see you next time.\n\n640\n00:33:30.076 --> 00:33:36.800\n[MUSIC]\n\n641\n00:33:36.800 --> 00:33:41.089\nThank you for watching ITPro.TV.\n\n",
          "vimeoId": "188662825"
        },
        {
          "description": "In this episode, Wes and Don continue their discussion on access control lists (ACLs). They finish explaining extended ACLs and demonstrate named ACLs.",
          "length": "2243",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/cisco-ccna200105/cisco-ccna200105-4-2-3-access_control_lists_pt3-101816-PGM.00_37_09_09.Still001.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/cisco-ccna200105/cisco-ccna200105-4-2-3-access_control_lists_pt3-101816-PGM.00_37_09_09.Still001-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/cisco-ccna200105/cisco-ccna200105-4-2-3-access_control_lists_pt3-101816-PGM.00_37_09_09.Still001-sm.jpg",
          "title": "Access Control Lists Part 3",
          "transcript": "WEBVTT\n\n1\n00:00:00.773 --> 00:00:02.859\nWelcome to ITProTV,\nI'm your host Don Pezet.\n\n2\n00:00:02.859 --> 00:00:06.333\n[CROSSTALK]\n\n3\n00:00:06.333 --> 00:00:08.268\n[MUSIC]\n\n4\n00:00:08.268 --> 00:00:12.510\n&gt;&gt; You're watching ITProTV.\n\n5\n00:00:12.510 --> 00:00:15.380\n&gt;&gt; Welcome back to another\nexciting episode here at ITProTV.\n\n6\n00:00:15.380 --> 00:00:16.320\nI'm your host, Wes Bryan.\n\n7\n00:00:16.320 --> 00:00:20.600\nAnd in today's episode, we're continuing\nthrough our Cisco's CCNA routing and\n\n8\n00:00:20.600 --> 00:00:21.500\nswitching.\n\n9\n00:00:21.500 --> 00:00:24.090\nWe're looking at the infrastructure\nservices and well,\n\n10\n00:00:24.090 --> 00:00:26.990\nwe're kinda working on\na mini-series here with ACLs.\n\n11\n00:00:26.990 --> 00:00:28.990\nThat's right,\nwe're coming back with a part three.\n\n12\n00:00:28.990 --> 00:00:32.280\nKeep in mind, in the first part,\nwe talked about the standard ACLs.\n\n13\n00:00:32.280 --> 00:00:35.410\nSecond part, Don showed us\na little bit about extended ACLs.\n\n14\n00:00:35.410 --> 00:00:36.420\nBut we're not done, so\n\n15\n00:00:36.420 --> 00:00:39.010\njoining me back in the studio is\nnone other than mister Don Pezet.\n\n16\n00:00:39.010 --> 00:00:39.960\nDon, how you doing sir?\n\n17\n00:00:39.960 --> 00:00:40.840\n&gt;&gt; I'm doing great, Wes.\n\n18\n00:00:40.840 --> 00:00:43.550\nReady to jump in and try to wrap up,\naccess control list.\n\n19\n00:00:43.550 --> 00:00:46.260\nI know it's kinda been a,\na long journey so far.\n\n20\n00:00:46.260 --> 00:00:47.040\nBut we've got some cool\n\n21\n00:00:47.040 --> 00:00:49.560\nthings right here in this episode\nthat are pretty important to know.\n\n22\n00:00:49.560 --> 00:00:51.990\nNot only for the exam,\nbut also for real life.\n\n23\n00:00:51.990 --> 00:00:55.120\nWhat we've seen up to this point\nare standard and extended ACLs.\n\n24\n00:00:55.120 --> 00:00:57.610\nAnd we've done them from\nthe command line like normal, and\n\n25\n00:00:57.610 --> 00:00:59.990\nwe did them as numbered ACLs.\n\n26\n00:00:59.990 --> 00:01:01.090\nAnd that works fine, right?\n\n27\n00:01:01.090 --> 00:01:03.100\nThe ACLs we've made up to\nthis point were great.\n\n28\n00:01:03.100 --> 00:01:05.340\nThey do their job and they're done.\n\n29\n00:01:05.340 --> 00:01:07.940\nBut there's a little bit of a problem\nwith the way that we've created the ACLs\n\n30\n00:01:07.940 --> 00:01:08.980\nup until now.\n\n31\n00:01:08.980 --> 00:01:10.990\nThey're kind of hard to support.\n\n32\n00:01:10.990 --> 00:01:14.380\nAnd the main problem comes from\nhow we enter them in, right?\n\n33\n00:01:14.380 --> 00:01:18.330\nAs I entered each command,\nas we punched in a line.\n\n34\n00:01:18.330 --> 00:01:21.670\nIt just adds to the end of the ACL.\n\n35\n00:01:21.670 --> 00:01:25.110\nWell, what happens down the road if\nI decide I wanna change something,\n\n36\n00:01:25.110 --> 00:01:27.230\nI wanna go and\nmodify something and fix it?\n\n37\n00:01:27.230 --> 00:01:29.570\nLet me show you an example,\nthe problem I'm talking about.\n\n38\n00:01:29.570 --> 00:01:33.360\nSo, for example,\nI'll take router two here.\n\n39\n00:01:33.360 --> 00:01:39.000\nAnd let me just whip up a quick extended\nACL, I'm gonna say access-list.\n\n40\n00:01:39.000 --> 00:01:41.627\n102 or 103.\n\n41\n00:01:41.627 --> 00:01:43.400\nI think I've used a couple of them by now.\n\n42\n00:01:43.400 --> 00:01:48.140\nAnd I'm going to, maybe I wanna block\na couple of bad host on my network, right.\n\n43\n00:01:48.140 --> 00:01:56.190\nSo I say deny host 192.168.0.55\ngoing to anybody, right?\n\n44\n00:01:56.190 --> 00:01:59.208\nSo, I gonna block this guy and\nkeep him out there, right?\n\n45\n00:01:59.208 --> 00:02:03.012\nAnd, whoops.\nI guess I kinda need throw in a protocol,\n\n46\n00:02:03.012 --> 00:02:03.790\nright?\n\n47\n00:02:03.790 --> 00:02:06.898\nSo either TCP or UDP or\nwhatever, I'm blocking IP.\n\n48\n00:02:06.898 --> 00:02:08.516\nSo I'm gonna knock that guy out, right?\n\n49\n00:02:08.516 --> 00:02:12.438\nAnd I know a couple other hosts that\nare on the network I wanna take out,\n\n50\n00:02:12.438 --> 00:02:15.030\nso maybe I knock out 60 and 65, also.\n\n51\n00:02:15.030 --> 00:02:16.771\nSo I'm blocking these guys.\n\n52\n00:02:16.771 --> 00:02:22.087\nNow I wanna allow everybody else\nthrough so I add in a access-list\n\n53\n00:02:22.087 --> 00:02:26.740\n103 Permit ip any any to\nallow everyone else through.\n\n54\n00:02:26.740 --> 00:02:31.190\nSo, if I take a look at that\naccess list as I've written it.\n\n55\n00:02:31.190 --> 00:02:34.990\nI blocked my three bad hosts,\nand I allow everybody else.\n\n56\n00:02:34.990 --> 00:02:36.650\nI guess I could have done\nthis as a standard ACL,\n\n57\n00:02:36.650 --> 00:02:39.930\nsince I'm really only doing source IP,\nbut you guys get the point.\n\n58\n00:02:39.930 --> 00:02:42.180\nWell, what happens now?\n\n59\n00:02:42.180 --> 00:02:44.315\nWhen somebody calls me up on the phone and\n\n60\n00:02:44.315 --> 00:02:46.240\nsays, hey Don we get another bad host for\nyou.\n\n61\n00:02:46.240 --> 00:02:50.592\nWe need to block number 70, 192.168.0.70.\n\n62\n00:02:50.592 --> 00:02:51.480\nAnd I say, all right.\n\n63\n00:02:51.480 --> 00:02:53.343\nWell let me just jump in to my config.\n\n64\n00:02:53.343 --> 00:02:56.183\nAnd I will drop in here and\n\n65\n00:02:56.183 --> 00:03:01.066\nwe'll deny 192.168.0.70.\n\n66\n00:03:01.066 --> 00:03:04.430\nAnd so I punched that in and\nI'm blocking them right?\n\n67\n00:03:04.430 --> 00:03:08.590\nWell, you may find, that that host\nis still able to get through and\n\n68\n00:03:08.590 --> 00:03:09.720\nthey're not being blocked.\n\n69\n00:03:09.720 --> 00:03:13.390\nAnd the reason is,\nif you look at the access control list.\n\n70\n00:03:13.390 --> 00:03:17.083\nIf we do a show access list 103.\n\n71\n00:03:17.083 --> 00:03:18.920\nSee where it put that line?\n\n72\n00:03:18.920 --> 00:03:20.510\nIt put at the end.\n\n73\n00:03:20.510 --> 00:03:25.480\nEvery time you punch in a new line\non the ACL it sticks it at the end.\n\n74\n00:03:25.480 --> 00:03:29.684\nAnd where that's a problem is if you've\ndone a permit IP any any like this or\n\n75\n00:03:29.684 --> 00:03:32.776\na deny IP any any and\nyou're blocking everybody else.\n\n76\n00:03:32.776 --> 00:03:36.860\nHow do you get something\nentered in above that line?\n\n77\n00:03:36.860 --> 00:03:38.520\nAll right,\nthat's where our challenge comes in.\n\n78\n00:03:38.520 --> 00:03:40.905\nAnd when we create ACLs the old way.\n\n79\n00:03:40.905 --> 00:03:42.840\nIt's really difficult to go in and\nedit that.\n\n80\n00:03:42.840 --> 00:03:47.794\nIn fact, the way CISCO used to recommend\nit was they said well just do a show run.\n\n81\n00:03:47.794 --> 00:03:52.860\nPull up a show running dash config and\nfind where the access list was created.\n\n82\n00:03:52.860 --> 00:03:55.864\nAnd so we'd go in and\nwe'd find access list 103.\n\n83\n00:03:55.864 --> 00:04:00.550\nRight, and so I could take\naccess-list 103, I'll just copy that.\n\n84\n00:04:00.550 --> 00:04:05.320\nAnd they would tell you to copy it and\nput it into a text editor or some sort.\n\n85\n00:04:05.320 --> 00:04:07.090\nAnd once you were in a text editor.\n\n86\n00:04:07.090 --> 00:04:09.570\nYou could modify it however you want and\nyou could come in here and\n\n87\n00:04:09.570 --> 00:04:12.850\nchange all your lines,\nmove them around, change the order.\n\n88\n00:04:12.850 --> 00:04:17.770\nSo I might come in and move that line,\nwell, that didn't do what I wanted.\n\n89\n00:04:17.770 --> 00:04:21.150\nSo I can come in and\nmove that line right to where I want it.\n\n90\n00:04:21.150 --> 00:04:25.890\nAnd then all I have to do is delete\nthe access list and paste this back in.\n\n91\n00:04:25.890 --> 00:04:27.560\nIt will recreate it in the right order.\n\n92\n00:04:27.560 --> 00:04:29.200\nWell that's kind of a pain.\n\n93\n00:04:29.200 --> 00:04:34.600\nAnd what's even worse is if I\ndelete the old access list.\n\n94\n00:04:34.600 --> 00:04:38.960\nFor a brief moment my network is going to\nbe unprotected while I paste this one in.\n\n95\n00:04:38.960 --> 00:04:42.920\nAnd this might turn up on the exams so\nlet me just mention one other thing, so\n\n96\n00:04:42.920 --> 00:04:44.150\nlet's say that I want to do this.\n\n97\n00:04:44.150 --> 00:04:46.740\nI've got this access list,\nI've got it applied to an interface and\n\n98\n00:04:46.740 --> 00:04:48.460\nnow I need it to change it out, right?\n\n99\n00:04:48.460 --> 00:04:53.230\nSo I take this, I copy it, and I'm ready\nto go and replace what's already there.\n\n100\n00:04:53.230 --> 00:04:57.000\nNow, if I just come in and paste it,\nthat's not gonna work, right?\n\n101\n00:04:57.000 --> 00:04:59.560\nIf I just paste that in the right order.\n\n102\n00:04:59.560 --> 00:05:02.430\nBecause what's going to happen is\nif I do a show access list 103.\n\n103\n00:05:02.430 --> 00:05:07.370\nAnd I take a look how it,\nsee how it's still out of order?\n\n104\n00:05:07.370 --> 00:05:10.710\nBecause when I pasted it in, those\nlines already matched lines that exist.\n\n105\n00:05:10.710 --> 00:05:12.120\nAnd so it doesn't let them go in.\n\n106\n00:05:12.120 --> 00:05:16.360\nIt just ignored everything that I did,\nso that didn't work.\n\n107\n00:05:16.360 --> 00:05:20.264\nIf I've got it assigned to an interface,\nso\n\n108\n00:05:20.264 --> 00:05:24.703\nlet's say I've got IP access-group 103 in.\n\n109\n00:05:24.703 --> 00:05:29.386\nAll right so that access list is\nnow attached to interface gi2/0.\n\n110\n00:05:29.386 --> 00:05:35.233\nIf I do a no access-list 103.\n\n111\n00:05:35.233 --> 00:05:39.028\nAnd I delete the access list,\nwhat happens?\n\n112\n00:05:39.028 --> 00:05:40.940\nThe access list is gone.\n\n113\n00:05:40.940 --> 00:05:45.360\nBut if I do a show interface IP gi2/0, and\n\n114\n00:05:45.360 --> 00:05:49.310\nI'll filter that just to how me lists.\n\n115\n00:05:49.310 --> 00:05:52.580\nWhoops, I need show IP interface.\n\n116\n00:05:52.580 --> 00:05:54.390\nGetting right command always helps.\n\n117\n00:05:54.390 --> 00:05:58.330\nThere we go, and notice how\nthe inbound access list is set to 103.\n\n118\n00:05:58.330 --> 00:06:04.650\nAnd if I do a show access-list 103,\n103 doesn't exist.\n\n119\n00:06:04.650 --> 00:06:06.000\nSo what happens?\n\n120\n00:06:06.000 --> 00:06:09.240\nWell, this is a good trick question for\nyou, because remember that every access\n\n121\n00:06:09.240 --> 00:06:13.110\nlist has an implicit line,\nan implicit deny all.\n\n122\n00:06:13.110 --> 00:06:15.600\nSo even though the list is gone,\ntechnically it still has a deny all.\n\n123\n00:06:15.600 --> 00:06:17.520\nSo what would happen to all my traffic?\n\n124\n00:06:17.520 --> 00:06:20.560\nWell, in the old days,\nit would actually block the port.\n\n125\n00:06:20.560 --> 00:06:22.330\nWe wouldn't be able to\nuse the port any more.\n\n126\n00:06:22.330 --> 00:06:26.240\nBut they put a little safety switch in\nprobably about eight years ago now.\n\n127\n00:06:26.240 --> 00:06:30.350\nSo every modern CISCO router, if they see\nan empty list attached to an interface,\n\n128\n00:06:30.350 --> 00:06:31.570\nthey just ignored it.\n\n129\n00:06:31.570 --> 00:06:35.120\nSo even though I've got this entry\nsaying access-list 103 is applied.\n\n130\n00:06:35.120 --> 00:06:38.860\n103 doesn't exist, and so\nit doesn't actually apply anything and\n\n131\n00:06:38.860 --> 00:06:41.340\ntraffic is allowed through, so\nI'm not really filtering here.\n\n132\n00:06:41.340 --> 00:06:44.300\nSo I removed access-list 103.\n\n133\n00:06:44.300 --> 00:06:47.310\nWhich means I immediately stop\nfiltering on the interface and\n\n134\n00:06:47.310 --> 00:06:49.460\nnow I'm wide open and vulnerable.\n\n135\n00:06:49.460 --> 00:06:55.670\nAnd then, I paste in the entry from\nNotepad or whatever it is that I'm using.\n\n136\n00:06:55.670 --> 00:07:00.470\nAnd now access-list 103 is there,\nexists, it applies.\n\n137\n00:07:00.470 --> 00:07:02.390\nAnd now that it's there.\n\n138\n00:07:02.390 --> 00:07:05.500\nIf I do a show access-list 103.\n\n139\n00:07:05.500 --> 00:07:07.050\nEverything's in the right order.\n\n140\n00:07:07.050 --> 00:07:10.360\nSo that seems great, everything\nworked the way we wanted, right?\n\n141\n00:07:10.360 --> 00:07:14.060\nWell, there's actually\nanother little problem here.\n\n142\n00:07:14.060 --> 00:07:16.880\nI guess the big problem is that we\nwere unprotected for a brief while.\n\n143\n00:07:16.880 --> 00:07:19.260\nAnd you never want to be\nunprotected if you can avoid it.\n\n144\n00:07:19.260 --> 00:07:24.170\nThe second problem is when I pasted\nthat in, it happened really fast.\n\n145\n00:07:24.170 --> 00:07:31.360\nBut as soon as I pasted that first line\nin, access-list 103 was no longer empty.\n\n146\n00:07:31.360 --> 00:07:37.020\nSo when that first line was put in there,\nthat implicit deny all started working.\n\n147\n00:07:37.020 --> 00:07:42.440\nAnd so for a brief moment I had a deny\nwith an implicit deny after it and\n\n148\n00:07:42.440 --> 00:07:43.390\nthe port was shutdown.\n\n149\n00:07:43.390 --> 00:07:46.560\nAnd when the second line went in,\nand the third line, and\n\n150\n00:07:46.560 --> 00:07:49.940\nthe fourth line,\neach of these lines went in.\n\n151\n00:07:49.940 --> 00:07:53.921\nThe denial was there and\nthe entire port was basically shutdown.\n\n152\n00:07:53.921 --> 00:07:56.521\nIt wasn't until this\nfifth line got pasted in,\n\n153\n00:07:56.521 --> 00:07:59.321\nthat everybody was allowed\nto flow through again.\n\n154\n00:07:59.321 --> 00:08:03.197\nNow, that happened really fast when I\npasted it in, so you're probably thinking,\n\n155\n00:08:03.197 --> 00:08:06.310\nwell Don, who really cares,\nthat was super fast.\n\n156\n00:08:06.310 --> 00:08:11.180\nWell, what if I was SSH'd\ninto this router, right?\n\n157\n00:08:11.180 --> 00:08:15.430\nIf I had SSH or Telnet or whatever into\nthis router and I go to paste that list,\n\n158\n00:08:15.430 --> 00:08:18.590\nthe first list entry goes in, it's a deny.\n\n159\n00:08:18.590 --> 00:08:21.010\nThe implicit deny all starts working.\n\n160\n00:08:21.010 --> 00:08:24.430\nNow I'm denying everything\nincluding my SSH session.\n\n161\n00:08:24.430 --> 00:08:26.175\nI can lock myself out of the router.\n\n162\n00:08:26.175 --> 00:08:29.700\nAnd you definitely don't want to do\nthat so the old method of copying and\n\n163\n00:08:29.700 --> 00:08:32.690\npasting the access list entries like this,\n\n164\n00:08:32.690 --> 00:08:36.320\nthe ACE's was that you could\nlock yourself out of the router.\n\n165\n00:08:36.320 --> 00:08:38.840\nSo there's two solutions to that.\n\n166\n00:08:38.840 --> 00:08:41.520\nSolution one is what I\nshowed in the last episode.\n\n167\n00:08:41.520 --> 00:08:42.390\nCreate a different ACL.\n\n168\n00:08:42.390 --> 00:08:43.701\nThis is ACL 103.\n\n169\n00:08:43.701 --> 00:08:47.586\nI could create ACL 104 that's in\nthe right order, and then just go and\n\n170\n00:08:47.586 --> 00:08:50.783\nchange from access list 103\nto 104 in the interface.\n\n171\n00:08:50.783 --> 00:08:52.550\nWhen you do that, you're always protected.\n\n172\n00:08:52.550 --> 00:08:54.510\nYou either had the old ACL or the new one.\n\n173\n00:08:54.510 --> 00:08:56.300\nAnd the new one applies all at once,\nand so\n\n174\n00:08:56.300 --> 00:08:58.850\nyou don't have to worry about\nlocking yourself out, right?\n\n175\n00:08:58.850 --> 00:08:59.789\nThat's a good solution.\n\n176\n00:09:01.080 --> 00:09:05.170\nThe second solution though, is wouldn't it\nbe nice if I can just edit the stinking\n\n177\n00:09:05.170 --> 00:09:08.448\nlist [LAUGH] And add an entry right\nin the middle of it if I wanted to?\n\n178\n00:09:08.448 --> 00:09:10.529\nAnd the answer is you can.\n\n179\n00:09:10.529 --> 00:09:14.790\nYou can if you use what are called\nnamed access control lists.\n\n180\n00:09:14.790 --> 00:09:17.565\nWhen we create an access control list,\nwe normally use a number, but\n\n181\n00:09:17.565 --> 00:09:19.820\nCisco realized that there's\ntwo problems with numbers.\n\n182\n00:09:19.820 --> 00:09:22.350\nOne, there's only so many numbers,\nand eventually you'll run out.\n\n183\n00:09:22.350 --> 00:09:25.630\nAnd two, it's hard to remember\nwhat the heck an access list does.\n\n184\n00:09:25.630 --> 00:09:28.310\nHey, Wes, here's access list 105,\nwhat does it do?\n\n185\n00:09:28.310 --> 00:09:30.310\n&gt;&gt; I have absolutely\nno clue looking at it.\n\n186\n00:09:30.310 --> 00:09:31.650\n&gt;&gt; Yeah, it's just 105.\n\n187\n00:09:31.650 --> 00:09:34.650\nMaybe we can read it and figure it out,\nbut otherwise you don't know.\n\n188\n00:09:34.650 --> 00:09:37.770\nSo they said, why don't we do a named ACL,\nthey said you can give it a name.\n\n189\n00:09:37.770 --> 00:09:43.080\nSo I can create an access control\nlist that says WAN anti-spoofing,\n\n190\n00:09:43.080 --> 00:09:45.410\nand now you look at it and you're like,\nI know what that ACL does.\n\n191\n00:09:45.410 --> 00:09:48.890\nIt's WAN, so it's attached to my\nWide Area Network and it's anti-spoofing.\n\n192\n00:09:48.890 --> 00:09:49.651\nIt's in the name.\n\n193\n00:09:49.651 --> 00:09:51.026\nIt makes life a lot easier.\n\n194\n00:09:51.026 --> 00:09:55.921\nBut the other part on named ACLs\nis that every access control entry\n\n195\n00:09:55.921 --> 00:09:57.354\nhas a line number.\n\n196\n00:09:57.354 --> 00:10:01.150\nAnd you'll notice at anytime I use the\nshow command to show access list, right?\n\n197\n00:10:01.150 --> 00:10:04.854\nSo when I do show access-list 103,\n\n198\n00:10:04.854 --> 00:10:08.800\nI see these line numbers,\nline 10, 20, 30, 40, 50.\n\n199\n00:10:08.800 --> 00:10:14.527\nBut when I look at the running-config,\nwhen I look at the running-config and\n\n200\n00:10:14.527 --> 00:10:18.629\npull that up,\nI don't see those line numbers, right?\n\n201\n00:10:18.629 --> 00:10:21.650\nI just see access-list 103 and so on.\n\n202\n00:10:21.650 --> 00:10:24.600\nThose line numbers are being determined\njust by the order these are entered in, so\n\n203\n00:10:24.600 --> 00:10:26.195\nthat doesn't really help me all that much.\n\n204\n00:10:26.195 --> 00:10:31.010\nBut with a named ACL, the line numbers\nbecome part of the configuration and\n\n205\n00:10:31.010 --> 00:10:35.760\nI am able to work with them and I am\nable to delete individual line numbers.\n\n206\n00:10:35.760 --> 00:10:38.350\nI'm able to insert things\nin between line numbers.\n\n207\n00:10:38.350 --> 00:10:40.590\nI can work with it and edit it.\n\n208\n00:10:40.590 --> 00:10:42.590\nAnd it's far easier to support.\n\n209\n00:10:42.590 --> 00:10:45.470\nSo in real life land,\nyou're going to want to use this.\n\n210\n00:10:45.470 --> 00:10:47.960\n&gt;&gt; Now, Don, with these line numbers I\nnotice that you haven't really added\n\n211\n00:10:47.960 --> 00:10:49.570\nanything else to your commands.\n\n212\n00:10:49.570 --> 00:10:51.050\nThe increments of ten,\n\n213\n00:10:51.050 --> 00:10:55.090\nis that a default that is set when\nyou create a new ACE in the ACL?\n\n214\n00:10:55.090 --> 00:10:57.550\nAnd if it is, is it something\nthat you can modify as well?\n\n215\n00:10:57.550 --> 00:10:58.540\n&gt;&gt; So it is the default.\n\n216\n00:10:58.540 --> 00:11:02.240\nThe default is it's going to skip by ten\nevery time, and the reason is to leave you\n\n217\n00:11:02.240 --> 00:11:05.140\nplenty of room so\nyou can insert other stuff in the future.\n\n218\n00:11:05.140 --> 00:11:06.340\nYou can overwrite it super easy.\n\n219\n00:11:06.340 --> 00:11:08.872\nYou can skip by none if you want.\n\n220\n00:11:08.872 --> 00:11:11.589\nYou get them all right in a row, but\nit's a good idea to leave a nice,\n\n221\n00:11:11.589 --> 00:11:12.457\nlittle space there.\n\n222\n00:11:12.457 --> 00:11:16.057\nAnd the line numbers, you can have\nthem into the tens of thousands,\n\n223\n00:11:16.057 --> 00:11:17.460\nit's really no big deal.\n\n224\n00:11:17.460 --> 00:11:20.080\nI think it goes all the way\nup into the billions.\n\n225\n00:11:20.080 --> 00:11:21.810\nSo don't worry about leaving a gap.\n\n226\n00:11:21.810 --> 00:11:23.205\nAnd leaving a gap is only gonna help you\n\n227\n00:11:23.205 --> 00:11:25.440\ncuz then you can insert\nthings in the future.\n\n228\n00:11:25.440 --> 00:11:26.860\nSo you definitely want that.\n\n229\n00:11:26.860 --> 00:11:30.010\nLet's take a look at how to create a named\nACL so that we have an understanding and\n\n230\n00:11:30.010 --> 00:11:32.590\nthen we'll actually see these line\nnumbers in action, all right?\n\n231\n00:11:32.590 --> 00:11:37.330\nSo when you create a named ACL,\na named ACL can be standard or extended.\n\n232\n00:11:37.330 --> 00:11:38.670\nIt can be either one.\n\n233\n00:11:38.670 --> 00:11:42.240\nAnd remember before we\nwould say access-list?\n\n234\n00:11:42.240 --> 00:11:43.540\nAnd then you'd put in a number, and\n\n235\n00:11:43.540 --> 00:11:46.940\nthe number is what determined\nwhether it was standard or extended.\n\n236\n00:11:46.940 --> 00:11:51.060\nBut if I use a name, how does it\nknow if it's standard or extended?\n\n237\n00:11:51.060 --> 00:11:52.370\nWell it doesn't.\n\n238\n00:11:52.370 --> 00:11:54.010\nSo we actually have to\nuse a different command.\n\n239\n00:11:54.010 --> 00:11:59.660\nInstead of access-list,\nwe have to say ip access-list.\n\n240\n00:11:59.660 --> 00:12:04.693\nAnd now it knows that we're about\nto create a named ACL, all right?\n\n241\n00:12:04.693 --> 00:12:10.344\nAnd that named ACL can be extended or\nstandard, right?\n\n242\n00:12:10.344 --> 00:12:11.605\nIt can actually be a number\nof different things,\n\n243\n00:12:11.605 --> 00:12:13.380\nyou see all the crazy other\nsettings that we've got here.\n\n244\n00:12:13.380 --> 00:12:16.500\nBut the ones I care about are extended and\nstandard.\n\n245\n00:12:16.500 --> 00:12:18.610\nSo I'm gonna say ip access-list.\n\n246\n00:12:18.610 --> 00:12:20.600\nAnd then if I want to create\na standard one, I can,\n\n247\n00:12:20.600 --> 00:12:23.690\nI'm gonna create an extended one,\nall right?\n\n248\n00:12:23.690 --> 00:12:29.820\nAnd then we start to create\nthe access control list, all right?\n\n249\n00:12:29.820 --> 00:12:34.230\nNow see how it's asking me for\neither a number or a name?\n\n250\n00:12:34.230 --> 00:12:37.430\nI actually could do a numbered ACL here,\n\n251\n00:12:37.430 --> 00:12:41.910\nand if I do a numbered ACL here,\nit is gonna track the line numbers.\n\n252\n00:12:41.910 --> 00:12:44.630\nIt's gonna track line numbers\nlike we anticipated and\n\n253\n00:12:44.630 --> 00:12:47.790\nwe'll be able to edit it even\nthough we're using a numbered ACL.\n\n254\n00:12:47.790 --> 00:12:52.210\nBut normally by the time you've gotten\nhere, you can use a name right here.\n\n255\n00:12:52.210 --> 00:12:53.620\nAnd that's what you want to do.\n\n256\n00:12:53.620 --> 00:12:55.320\nSo I'm gonna go ahead and use a name.\n\n257\n00:12:55.320 --> 00:13:00.375\nAnd so this one might be filter-bad-hosts.\n\n258\n00:13:01.400 --> 00:13:04.430\nNow be careful with that name,\nbecause the name is case sensitive.\n\n259\n00:13:04.430 --> 00:13:07.060\nSo if I do it all lowercase here,\nI'm gonna do it all lowercase later.\n\n260\n00:13:07.060 --> 00:13:09.610\nIf I do a capital letter here,\nI've got to do a capital later.\n\n261\n00:13:09.610 --> 00:13:11.698\nSo it's not a uncommon mistake for\n\n262\n00:13:11.698 --> 00:13:14.945\nsomebody to create an ACL\nwith some capital letters.\n\n263\n00:13:14.945 --> 00:13:18.169\nAnd then they go to the interface,\nand they go to attach the ACL\n\n264\n00:13:18.169 --> 00:13:22.220\nto the interface and they get the case\nwrong, and it's an empty ACL, right?\n\n265\n00:13:22.220 --> 00:13:24.610\nIt doesn't filter and\nall the traffic moves through.\n\n266\n00:13:24.610 --> 00:13:26.710\nSo be careful with case\nsensitivity on this one.\n\n267\n00:13:26.710 --> 00:13:31.390\nSo I'm giving it a name, and\nI'm just gonna press Enter right there.\n\n268\n00:13:31.390 --> 00:13:34.030\nThat's gonna create the named ACL.\n\n269\n00:13:34.030 --> 00:13:38.000\nSee my prompt, config-ext,\nI'm doing it extended, and\n\n270\n00:13:38.000 --> 00:13:41.980\nthen nacl, named access control list.\n\n271\n00:13:41.980 --> 00:13:48.020\nBefore when I did access-list,\nlike this, the very first line\n\n272\n00:13:48.020 --> 00:13:53.050\ncreated ACL 103 and\ncreated the first access control entry.\n\n273\n00:13:53.050 --> 00:13:54.940\nSo it did both at the same time.\n\n274\n00:13:54.940 --> 00:14:00.480\nBut in a named ACL, the first command\njust creates the access control list.\n\n275\n00:14:00.480 --> 00:14:03.150\nNo entires, I don't have any entries yet.\n\n276\n00:14:03.150 --> 00:14:05.500\nAnd now I punch in the entries.\n\n277\n00:14:05.500 --> 00:14:09.770\nAnd the entries you can enter them\nin really simple or really complex.\n\n278\n00:14:09.770 --> 00:14:11.620\nIt's kind of up to you how want to do it.\n\n279\n00:14:11.620 --> 00:14:18.317\nSo for example, if I'm doing a standard\nACL, I would just say permit or\n\n280\n00:14:18.317 --> 00:14:23.920\ndeny followed by a host\nif I was doing a host,\n\n281\n00:14:23.920 --> 00:14:27.370\nor a network if I was doing\nan entire network, right?\n\n282\n00:14:27.370 --> 00:14:30.090\nSo we could punch that in,\nand that's my entry.\n\n283\n00:14:30.090 --> 00:14:33.240\nI don't have to do the big long\nline anymore, cuz I'm in the ACL,\n\n284\n00:14:33.240 --> 00:14:35.230\nnow I'm just adding an entry.\n\n285\n00:14:35.230 --> 00:14:38.493\nAnd if I'm doing an extended,\nthen it's very similar right?\n\n286\n00:14:38.493 --> 00:14:43.457\nI would say permit or deny, followed by\nthe protocol, right, so I might be doing\n\n287\n00:14:43.457 --> 00:14:48.207\nTCP, followed by the source and\ndestination, whatever those happen to be.\n\n288\n00:14:48.207 --> 00:14:50.947\nAnd if I'm doing some\nkind of port like EQ23,\n\n289\n00:14:50.947 --> 00:14:55.330\nI would punch all that information\nin right here nice and easy.\n\n290\n00:14:55.330 --> 00:15:00.830\nNow if I just start typing these in, it's\ngoing to assign sequence numbers for me.\n\n291\n00:15:00.830 --> 00:15:03.430\nIt's going assign the line\nnumbers automatically.\n\n292\n00:15:03.430 --> 00:15:08.200\nBut if you do a question mark here,\nyou'll see where you can actually type in\n\n293\n00:15:08.200 --> 00:15:11.580\nthe sequence number yourself,\nif you wanted to have a particular number.\n\n294\n00:15:11.580 --> 00:15:14.840\nAnd that's how you would\ninsert something in your ACL.\n\n295\n00:15:14.840 --> 00:15:17.150\nThat's how you would add\nan entry to put it in there.\n\n296\n00:15:17.150 --> 00:15:21.500\nSo, let's recreate the ACL I made\na minute ago, that ACL 103, right?\n\n297\n00:15:21.500 --> 00:15:27.955\nIn access control list 103, I was blocking\nsome hosts, 55, 60, 65, 70, right?\n\n298\n00:15:27.955 --> 00:15:29.587\nSo I'm gonna go in and\nI'm gonna do that again.\n\n299\n00:15:29.587 --> 00:15:33.573\nI'm gonna say deny ip cuz I'm\njust gonna do the whole thing,\n\n300\n00:15:33.573 --> 00:15:37.100\nhost 192.168.0.55, and deny ip host.\n\n301\n00:15:43.760 --> 00:15:45.180\nAnd let's see.\n\n302\n00:15:45.180 --> 00:15:48.120\nI'm doing extended ACL, I kind of forgot.\n\n303\n00:15:48.120 --> 00:15:49.670\nStandard ACL you just do the source.\n\n304\n00:15:49.670 --> 00:15:51.480\nExtended I've got to do source and\ndestination.\n\n305\n00:15:51.480 --> 00:15:52.948\nSo I need to make sure\nthe destination's any, right?\n\n306\n00:15:52.948 --> 00:15:55.421\nSo I'm blocking that host\nwhen it goes anywhere.\n\n307\n00:15:55.421 --> 00:16:01.138\nAnd then I'll do 60 and 65 and\n70 was the other one, right?\n\n308\n00:16:01.138 --> 00:16:03.263\nSo those are the four\nthat I blocked in 103.\n\n309\n00:16:03.263 --> 00:16:06.961\nAnd then I did a permit ip\nany any at the end, right,\n\n310\n00:16:06.961 --> 00:16:11.690\nthat's effectively the same\nACL as I made before, right?\n\n311\n00:16:11.690 --> 00:16:14.420\nSo if I do a show access-list 103,\n\n312\n00:16:14.420 --> 00:16:19.590\nI'll see that access list right there,\nand that's exactly how I wrote it before.\n\n313\n00:16:19.590 --> 00:16:23.500\nAnd if I do a show access-list,\nand I name it, or\n\n314\n00:16:23.500 --> 00:16:26.030\nI put in the name that I specified before,\nright.\n\n315\n00:16:26.030 --> 00:16:28.945\nWhich I called,\nwhat the heck did I call this thing?\n\n316\n00:16:28.945 --> 00:16:31.610\n[LAUGH] Filter bad hosts.\n\n317\n00:16:31.610 --> 00:16:32.750\nFilter bad hosts.\n\n318\n00:16:33.800 --> 00:16:36.970\nThere we go,\nI can see that they're identical.\n\n319\n00:16:36.970 --> 00:16:38.370\nRight, there's really no difference.\n\n320\n00:16:38.370 --> 00:16:39.570\nI got the same line numbers,\n\n321\n00:16:39.570 --> 00:16:43.150\neverything is identical to\nthe way it was created before.\n\n322\n00:16:43.150 --> 00:16:46.140\nThe big difference here, though,\nis somebody calls me up on the phone and\n\n323\n00:16:46.140 --> 00:16:48.280\nsays Don, I've got another bad host.\n\n324\n00:16:48.280 --> 00:16:51.510\nI've got a bad host, and\nit's .75, 192.168.0.75.\n\n325\n00:16:51.510 --> 00:16:54.630\nAnd I look at this, I'm like, great.\n\n326\n00:16:54.630 --> 00:16:57.860\nI need that to go in between Line 40 and\n50.\n\n327\n00:16:57.860 --> 00:17:00.250\nSo I gotta get it in between here.\n\n328\n00:17:00.250 --> 00:17:03.710\nWell I guess let me copy this,\nput it in notepad.\n\n329\n00:17:03.710 --> 00:17:07.930\nWell no, I can get into the ACL\njust like I am right now.\n\n330\n00:17:07.930 --> 00:17:12.234\nAnd I can say, 45 deny ip host\n\n331\n00:17:12.234 --> 00:17:17.560\n192.168.0.75 any.\n\n332\n00:17:17.560 --> 00:17:21.750\nAnd now it's gonna create a new\nline with a sequence number of 45.\n\n333\n00:17:21.750 --> 00:17:28.220\nAnd if you look at that, see how 40,\n45, 50, it just inserted it in between.\n\n334\n00:17:28.220 --> 00:17:31.560\nSo by leaving that little gap in there,\n\n335\n00:17:31.560 --> 00:17:34.700\nI can add nine more things right\nin between those two lines.\n\n336\n00:17:34.700 --> 00:17:36.550\nWell eight more now that\nI've eaten up one of those.\n\n337\n00:17:36.550 --> 00:17:39.170\nSo I've got this extra\nspace that I can use.\n\n338\n00:17:39.170 --> 00:17:42.100\nAnd if you ever run out,\nso maybe I add nine,\n\n339\n00:17:42.100 --> 00:17:46.630\nyou can have it resequence the list where\nit'll go and space them all out by ten.\n\n340\n00:17:46.630 --> 00:17:48.070\nIt'll automatically\nadjust the line numbers.\n\n341\n00:17:48.070 --> 00:17:50.600\nYou might have noticed that\ncommand when I created the ACL.\n\n342\n00:17:50.600 --> 00:17:53.890\nThat was one of the options that I\nhad was to resequence it which is,\n\n343\n00:17:53.890 --> 00:17:56.420\nlet's actually back out here.\n\n344\n00:17:56.420 --> 00:18:01.550\nSo when I did IP access-list,\nand I told it extended.\n\n345\n00:18:01.550 --> 00:18:05.660\nNotice right here we've got\nresequence an access list and so\n\n346\n00:18:05.660 --> 00:18:08.310\nwe can tell it to like\nrenumber if we need to.\n\n347\n00:18:08.310 --> 00:18:11.540\nPretty uncommon though, if you're\nleaving gaps of nine between each.\n\n348\n00:18:11.540 --> 00:18:13.300\nThat usually gives it leniency.\n\n349\n00:18:13.300 --> 00:18:17.120\nIf I'm adding host to block,\nthe reality is.\n\n350\n00:18:17.120 --> 00:18:19.289\nI could add in-between any of these.\n\n351\n00:18:19.289 --> 00:18:23.640\nI could do 1 through 9,\n11 through 19, 21 through 29.\n\n352\n00:18:23.640 --> 00:18:25.930\nThose are are all before\nthe permit ipn ne.\n\n353\n00:18:25.930 --> 00:18:29.210\nI got tons of room so\nwe dont normally need to re-sequence.\n\n354\n00:18:29.210 --> 00:18:35.500\nEven better, if I get back into the ACL,\nso let me just jump back into that one.\n\n355\n00:18:35.500 --> 00:18:36.650\nWhoops.\n\n356\n00:18:36.650 --> 00:18:38.990\nApparently that's out of my history,\nso let me go back in the long way.\n\n357\n00:18:40.310 --> 00:18:45.000\nSo I'm gonna get back into\nmy ip access-list extended,\n\n358\n00:18:45.000 --> 00:18:48.250\nand it was filter-bad-hosts.\n\n359\n00:18:48.250 --> 00:18:51.290\nAgain remembering the case sensitivity,\ncuz if I get the casing wrong,\n\n360\n00:18:51.290 --> 00:18:54.530\nthen I'm going into a different\naccess list, something all new.\n\n361\n00:18:54.530 --> 00:18:56.370\nAnd now let's say that I get a call and\n\n362\n00:18:56.370 --> 00:19:01.260\nI hear, hey Don, 192.168.0.60, they\nhad a virus, but we've cleaned it now.\n\n363\n00:19:01.260 --> 00:19:04.320\nIt's cleaned out, it's okay for\nthem to talk on the network.\n\n364\n00:19:04.320 --> 00:19:06.240\nYou can remove them from the list.\n\n365\n00:19:06.240 --> 00:19:10.137\nOkay, I need to come in here and\njust do a no 20.\n\n366\n00:19:10.137 --> 00:19:12.320\nAnd we can remove line number 20.\n\n367\n00:19:12.320 --> 00:19:15.290\nAnd so that one's going to come out,\nand I'm no longer blocking .60,\n\n368\n00:19:15.290 --> 00:19:17.590\nor at least I hope I'm not.\n\n369\n00:19:17.590 --> 00:19:21.812\nSo if I do show access-list\nfilter-bad-hosts,\n\n370\n00:19:21.812 --> 00:19:27.023\nI can see line 20 is gone,\n10 jumps to 30, 40 and so on.\n\n371\n00:19:27.023 --> 00:19:30.264\n&gt;&gt; And then if OCD kicks in and you don't\nlike the fact that the line numbers\n\n372\n00:19:30.264 --> 00:19:33.350\nare not like the way you had then\nwe just resequence them, right.\n\n373\n00:19:33.350 --> 00:19:35.420\nAnd it maybe straighten up a little bit.\n\n374\n00:19:35.420 --> 00:19:38.120\n&gt;&gt; Yeah and for the viewers that\nhave watched enough IT Pro TV,\n\n375\n00:19:38.120 --> 00:19:40.690\nI\n&gt;&gt; I'm not OCD enough to worry about that.\n\n376\n00:19:40.690 --> 00:19:43.010\nI'm used to my access list having gaps.\n\n377\n00:19:43.010 --> 00:19:46.010\nMike Roderic, yeah, he's somebody who\nwould absolutely have to have those\n\n378\n00:19:46.010 --> 00:19:48.020\nnumbers right or he'd get frustrated.\n\n379\n00:19:48.020 --> 00:19:51.720\nSo, you can certainly do that but it\ndoesn't really make a difference because,\n\n380\n00:19:51.720 --> 00:19:55.860\nI don't think I mentioned this in other of\nthe other episodes, when you write an ACL,\n\n381\n00:19:55.860 --> 00:19:59.690\nthis is the way that it's written for\nyou as a human being to interpret it.\n\n382\n00:19:59.690 --> 00:20:01.570\nThe router actually\ndoesn't use it this way.\n\n383\n00:20:01.570 --> 00:20:05.460\nWhen you punch all this data in\nit takes it and it compiles it.\n\n384\n00:20:05.460 --> 00:20:10.280\nIt actually compiles it into machine code\nthat it's able to load into RAM so that it\n\n385\n00:20:10.280 --> 00:20:14.290\ncan scan the packets in RAM without having\nto refer to this human written list.\n\n386\n00:20:14.290 --> 00:20:17.240\nAnd it's able to take it and\nbasically shorten each line\n\n387\n00:20:17.240 --> 00:20:19.900\ndown to basically just\nthe bits that need to match.\n\n388\n00:20:19.900 --> 00:20:21.400\nAnd whether it's permit or deny.\n\n389\n00:20:21.400 --> 00:20:23.530\nAnd it makes it super simple like that.\n\n390\n00:20:23.530 --> 00:20:25.450\nAnd that way it's able to apply it very,\n\n391\n00:20:25.450 --> 00:20:28.970\nvery quickly at near wire speed\nwithout impacting performance.\n\n392\n00:20:28.970 --> 00:20:32.210\nSo these line numbers are just\na convenience to you.\n\n393\n00:20:32.210 --> 00:20:34.870\nThe router, once it compiles it it\ndoesn't even have line numbers anymore.\n\n394\n00:20:34.870 --> 00:20:36.340\nSo it's not even a issue there.\n\n395\n00:20:37.390 --> 00:20:38.080\nAll right.\n\n396\n00:20:38.080 --> 00:20:40.610\nSo the cool part about these named ACLs\n\n397\n00:20:40.610 --> 00:20:44.140\nis they make it a lot easier to\nsupport the access list afterwards.\n\n398\n00:20:44.140 --> 00:20:46.370\nFor creating the ACL, for\ncreating it in the first place,\n\n399\n00:20:46.370 --> 00:20:49.390\nit's a little bit harder to do it\nthis way than the old numbered way.\n\n400\n00:20:49.390 --> 00:20:52.600\nSo if you just need to get an ACL\nthrown in place really fast and\n\n401\n00:20:52.600 --> 00:20:56.040\nget it done,\nun-numbered ACL will work, right?\n\n402\n00:20:56.040 --> 00:20:58.210\nBut if you know you're going to\nbe supporting this long term, and\n\n403\n00:20:58.210 --> 00:21:01.740\nyou need to insert things and\nchange things, a named ACL is better.\n\n404\n00:21:01.740 --> 00:21:05.290\nAnd as a result, Cisco recommends\nthat you always do named ACLs.\n\n405\n00:21:05.290 --> 00:21:08.600\nWhether they're standard or\nextended always do a named ACL.\n\n406\n00:21:08.600 --> 00:21:09.800\nThat's the new way to do things.\n\n407\n00:21:09.800 --> 00:21:14.240\nSo on the exam you're mostly going to\nsee named ACLs, be ready for that.\n\n408\n00:21:14.240 --> 00:21:17.960\nNow we've been talking a lot about\nIPV4 in these few episodes or\n\n409\n00:21:17.960 --> 00:21:20.160\nparts, how about IPV6?\n\n410\n00:21:20.160 --> 00:21:23.510\n&gt;&gt; All right,\nIPV6 is kind of a different beast.\n\n411\n00:21:23.510 --> 00:21:27.780\nWith IPV6, we have access\ncontrol lists just like IPV4.\n\n412\n00:21:27.780 --> 00:21:32.060\nAnd when you create them,\nThere's a little more to it.\n\n413\n00:21:32.060 --> 00:21:33.830\nIt actually requires the sequence numbers.\n\n414\n00:21:33.830 --> 00:21:36.390\nWe got to have those and\nthe syntax is a little bit different, but\n\n415\n00:21:36.390 --> 00:21:40.600\nit is still similar enough for\nus to get in and apply it.\n\n416\n00:21:40.600 --> 00:21:42.850\nBefore I forget,\njust while my mind is on this.\n\n417\n00:21:42.850 --> 00:21:44.930\nI just showed you guys how\nto create a named ACL.\n\n418\n00:21:44.930 --> 00:21:47.140\nI never actually showed\nyou guys how to attach it.\n\n419\n00:21:47.140 --> 00:21:50.340\nHow to put it on to\nan interface to use it, and for\n\n420\n00:21:50.340 --> 00:21:52.070\nthe most part it's just\nlike we did before.\n\n421\n00:21:52.070 --> 00:21:56.955\nIf I went into interface GI2/0\nwith a numbered ACL I would say IP\n\n422\n00:21:56.955 --> 00:22:00.470\naccess-group and\nthen I would do the number.\n\n423\n00:22:00.470 --> 00:22:02.020\nAnd in or out, right?\n\n424\n00:22:02.020 --> 00:22:09.580\nWith a named ACL, you just do the name,\nfilter-bad-hosts in, and it attaches.\n\n425\n00:22:09.580 --> 00:22:11.260\nSo it attaches the same way.\n\n426\n00:22:11.260 --> 00:22:14.550\nIt's just the creation that's different,\neverything else about the ACL is the same.\n\n427\n00:22:14.550 --> 00:22:16.066\nSo that's how you attach it.\n\n428\n00:22:16.066 --> 00:22:19.230\nI just wanted to make sure that I showed\nthat, and didn't forget to get it in here.\n\n429\n00:22:19.230 --> 00:22:20.010\nBut under IPv6.\n\n430\n00:22:20.010 --> 00:22:22.760\nIPv6 is a different beast, right.\n\n431\n00:22:22.760 --> 00:22:26.802\nWith IPv6 you still have source address\nis in destination address cuz you\n\n432\n00:22:26.802 --> 00:22:30.529\nstill have port numbers,\nyour networks of far far larger in IPv6.\n\n433\n00:22:30.529 --> 00:22:31.817\nThat's a little bit different.\n\n434\n00:22:31.817 --> 00:22:35.050\nBut, otherwise filtering\ntraffic is really the same.\n\n435\n00:22:35.050 --> 00:22:38.670\nYou still have host see one block\nyou still have the extended\n\n436\n00:22:38.670 --> 00:22:42.630\naccess list you make that allows the\nresources and destination are good stuff.\n\n437\n00:22:42.630 --> 00:22:43.790\nBut the syntax is different.\n\n438\n00:22:43.790 --> 00:22:46.400\nSo let's run over an example\nof that really quick.\n\n439\n00:22:46.400 --> 00:22:49.200\nIf I wanna create an access list for IPv6.\n\n440\n00:22:49.200 --> 00:22:54.998\nWell, remember what I've been running\nup until now, has been IP access-list.\n\n441\n00:22:54.998 --> 00:22:57.180\nWell, let me back up on that.\n\n442\n00:22:57.180 --> 00:23:00.590\nWhen it was just a numbered ACL I was\ndoing access-list followed by a number.\n\n443\n00:23:00.590 --> 00:23:04.720\nWhen I did a named ACL\nit was ip access-list.\n\n444\n00:23:04.720 --> 00:23:06.030\nAnd then so on, right?\n\n445\n00:23:06.030 --> 00:23:11.398\nWith IPv6, it's actually IPv6 access-list.\n\n446\n00:23:11.398 --> 00:23:16.458\nSo IP access-list would\ncreate a named IPv4 ACL.\n\n447\n00:23:16.458 --> 00:23:19.175\nOr I guess I could throw a number in\nthere too but normally it's a named one.\n\n448\n00:23:19.175 --> 00:23:23.320\nIPv6 access-list is gonna\ndo the same thing for IPv6.\n\n449\n00:23:23.320 --> 00:23:25.980\nAll right, then I give it a name, right?\n\n450\n00:23:25.980 --> 00:23:29.451\nAnd so maybe it's filter bad host.\n\n451\n00:23:29.451 --> 00:23:32.574\nAgain, I am just gonna make it\nsomething a little bit simpler.\n\n452\n00:23:32.574 --> 00:23:34.459\nI will call it LAN filter, all right.\n\n453\n00:23:34.459 --> 00:23:36.375\nSo this is going to be my LAN filter.\n\n454\n00:23:36.375 --> 00:23:41.193\nAnd when I create that,\nnow I am in config-ipv6-ACL, right?\n\n455\n00:23:41.193 --> 00:23:43.933\nJust like the named ACL\nprompt from earlier.\n\n456\n00:23:43.933 --> 00:23:47.924\nBut this one doesn't actually\nsay n ACL because with IPV6,\n\n457\n00:23:47.924 --> 00:23:50.827\nthere actually all named for\nthe most part.\n\n458\n00:23:50.827 --> 00:23:54.674\nIf I get back out here and\ndo IPV6 access dash list and\n\n459\n00:23:54.674 --> 00:23:57.742\na question mark, see how it's got word?\n\n460\n00:23:57.742 --> 00:23:59.821\nIt's expecting a name.\n\n461\n00:23:59.821 --> 00:24:04.695\nNow, funny part here, and some of you out\nthere in TV land might be saying, hey,\n\n462\n00:24:04.695 --> 00:24:07.649\nI've created an IPv6 ACL,\nand I used a number.\n\n463\n00:24:07.649 --> 00:24:10.759\nWell you can, but the number's\nactually being treated as a word.\n\n464\n00:24:10.759 --> 00:24:12.353\nThe number doesn't actually mean anything.\n\n465\n00:24:12.353 --> 00:24:18.610\nSo you could do 99, or 9,999, or 99,999,\nor whatever the heck you wanted.\n\n466\n00:24:18.610 --> 00:24:20.410\nIt doesn't matter,\nit's gonna treat it as a word, right?\n\n467\n00:24:20.410 --> 00:24:24.910\nSo in IPv6,\nreally every access list is a named ACL.\n\n468\n00:24:24.910 --> 00:24:26.946\nAnd that's because IPv6 is the future.\n\n469\n00:24:26.946 --> 00:24:29.471\nAnd Cisco just said, hey,\nnamed ACLs are the future.\n\n470\n00:24:29.471 --> 00:24:30.890\nThis is the way we want you to do it.\n\n471\n00:24:30.890 --> 00:24:31.950\nThat's all we're gonna implement in IPv6.\n\n472\n00:24:33.570 --> 00:24:37.880\nAll right, so\nif I get back to my IPv6 access list here.\n\n473\n00:24:37.880 --> 00:24:40.330\nNow I can start putting in\nmy access list entries.\n\n474\n00:24:40.330 --> 00:24:43.450\nAnd the entries are pretty similar.\n\n475\n00:24:43.450 --> 00:24:46.620\nIf I just start typing, I can do permit.\n\n476\n00:24:46.620 --> 00:24:48.580\nI can do deny.\n\n477\n00:24:48.580 --> 00:24:52.462\nAnd it will attach a line number\nto each one for me as I write it.\n\n478\n00:24:52.462 --> 00:24:54.949\nSo it'll do that just\nlike we've seen before.\n\n479\n00:24:54.949 --> 00:24:59.100\nSo if I do deny and\nstart taking a look at it here.\n\n480\n00:24:59.100 --> 00:25:02.220\nI can do deny and\njump right into a particular source.\n\n481\n00:25:02.220 --> 00:25:07.159\nI can say deny IPv6, or IP, or so on.\n\n482\n00:25:07.159 --> 00:25:12.708\nWhat's going here is I'm actually seeing\na mixture of standard and extended ACLs.\n\n483\n00:25:12.708 --> 00:25:16.712\nIn a standard ACL, we would say deny and\nthen host blah, blah,\n\n484\n00:25:16.712 --> 00:25:20.670\nblah, or straight up network,\nblah, blah, blah, right?\n\n485\n00:25:20.670 --> 00:25:23.380\nThat's how we would do a standard,\nwith just a source.\n\n486\n00:25:23.380 --> 00:25:26.690\nWith an extended,\nwe would specify a protocol.\n\n487\n00:25:26.690 --> 00:25:27.650\nWell, in IPv6,\n\n488\n00:25:27.650 --> 00:25:31.320\nthey don't make us differentiate\nbetween a standard and an extended.\n\n489\n00:25:31.320 --> 00:25:34.150\nThe way we differentiate is by\nwhat we're about to enter here.\n\n490\n00:25:34.150 --> 00:25:37.513\nIf you put just straight up a host,\nthen it knows that's a source and\n\n491\n00:25:37.513 --> 00:25:39.590\nthat you're doing a standard.\n\n492\n00:25:39.590 --> 00:25:42.752\nBut if you put a protocol,\nthen it knows you're doing an extended, so\n\n493\n00:25:42.752 --> 00:25:44.157\nit's able to figure that out.\n\n494\n00:25:44.157 --> 00:25:46.540\nLess commands is a little more easy for\n\n495\n00:25:46.540 --> 00:25:49.599\nus cuz now we're creating\nthem all the same way.\n\n496\n00:25:49.599 --> 00:25:55.631\nSo if I want to deny router one going\nto router four or something like that.\n\n497\n00:25:55.631 --> 00:26:00.400\nI would come in and I would say deny tcp,\nwe'll say I'm blocking Telnet, right?\n\n498\n00:26:00.400 --> 00:26:05.770\nSo deny tcp host, and then whatever\nthat host happens to be, right?\n\n499\n00:26:05.770 --> 00:26:07.920\nAnd it could be a very long address.\n\n500\n00:26:07.920 --> 00:26:10.590\nI'll try and\njust do something kinda short.\n\n501\n00:26:10.590 --> 00:26:12.470\nAnd it didn't like that so much, did it?\n\n502\n00:26:13.570 --> 00:26:16.388\nThere we go, so\nI'm gonna put in this host.\n\n503\n00:26:16.388 --> 00:26:20.691\nAnd then I can specify the prefix, right?\n\n504\n00:26:20.691 --> 00:26:24.290\nAnd so that's where I would say /64 or\nwhatever.\n\n505\n00:26:24.290 --> 00:26:26.640\nNow, when you're doing a host,\nyou don't need that prefix.\n\n506\n00:26:26.640 --> 00:26:28.640\nThat's why it gave me that error.\n\n507\n00:26:28.640 --> 00:26:32.781\nBecause I said host, it knows that\nI'm talking about a 128-bit match.\n\n508\n00:26:32.781 --> 00:26:40.271\nIf was doing the whole network,\nthen I would say something like 2001::/64.\n\n509\n00:26:40.271 --> 00:26:41.832\nAnd it would know I was talking\nabout that whole network.\n\n510\n00:26:41.832 --> 00:26:43.396\nSee how I didn't get an error there?\n\n511\n00:26:43.396 --> 00:26:47.950\nVersus when I did a host,\nit didn't like that prefix.\n\n512\n00:26:47.950 --> 00:26:49.040\nActually, it seemed happy there.\n\n513\n00:26:49.040 --> 00:26:52.693\nBut cuz I left the host command out,\nthat will do it, there.\n\n514\n00:26:52.693 --> 00:26:54.217\nAll right, so I'm gonna deny that host.\n\n515\n00:26:54.217 --> 00:27:01.257\nAnd I'll say, when they go to anybody and\ntheir port equals and then 23, right?\n\n516\n00:27:01.257 --> 00:27:04.394\nI know a lot of people don't\nnecessarily think about this,\n\n517\n00:27:04.394 --> 00:27:06.914\nthat IPv6's cutting edge, it's new stuff.\n\n518\n00:27:06.914 --> 00:27:07.939\nIt's a good 15 years old.\n\n519\n00:27:07.939 --> 00:27:10.363\nIt's not that cutting edge,\nbut it's cool and it's new.\n\n520\n00:27:10.363 --> 00:27:11.998\nTelnet is super ancient.\n\n521\n00:27:11.998 --> 00:27:14.940\nYou could still use Telnet over\nIPv6 though, it works just fine.\n\n522\n00:27:14.940 --> 00:27:18.000\nSo I might wanna block that,\nand here I am blocking it.\n\n523\n00:27:18.000 --> 00:27:21.420\nI didn't do a sequence number,\nI just punched it in, right?\n\n524\n00:27:21.420 --> 00:27:26.160\nAnd so when I look at this access list,\nit's gonna have sequence numbers.\n\n525\n00:27:26.160 --> 00:27:29.729\nOne that's gonna be assigned\nby the system for me, right?\n\n526\n00:27:29.729 --> 00:27:32.289\nIf I wanna put the sequence\nnumber in myself, so\n\n527\n00:27:32.289 --> 00:27:34.337\nI know that one just became line 10.\n\n528\n00:27:34.337 --> 00:27:37.925\nIf I wanna put one in myself,\nnotice when I do a question mark,\n\n529\n00:27:37.925 --> 00:27:40.830\nthere's no entry here for a number.\n\n530\n00:27:40.830 --> 00:27:43.050\nThere's a word, sequence.\n\n531\n00:27:43.050 --> 00:27:45.309\nAnd I'm not entirely\nsure why Cisco did that.\n\n532\n00:27:45.309 --> 00:27:49.907\nWhy on the other one, I can just type\n10 permit whatever if I'm doing IPv4.\n\n533\n00:27:49.907 --> 00:27:53.429\nBut on IPv6,\nyou actually have to type sequence and\n\n534\n00:27:53.429 --> 00:27:55.840\nthen the sequence number you want.\n\n535\n00:27:55.840 --> 00:28:00.200\nSo if I wanna do sequence number 5,\nI can do that and then permit or deny,\n\n536\n00:28:00.200 --> 00:28:01.890\nand so on, right?\n\n537\n00:28:01.890 --> 00:28:03.140\nSo a little bit different.\n\n538\n00:28:03.140 --> 00:28:07.557\nIn IPv4 named ACL, I would just do\nthe number followed by permit or deny.\n\n539\n00:28:07.557 --> 00:28:13.800\nIn IPv6, you have to say sequence number\nand then follow it by the permit or deny.\n\n540\n00:28:13.800 --> 00:28:16.989\nSo I might wanna deny somebody else.\n\n541\n00:28:18.054 --> 00:28:20.810\nLet's just say it's another\nhost on the network, right?\n\n542\n00:28:20.810 --> 00:28:22.509\nSo, all right, I'll do the whole network.\n\n543\n00:28:22.509 --> 00:28:25.490\nSo I'm just gonna block the whole\nstinking network because I can.\n\n544\n00:28:26.550 --> 00:28:30.063\nAnd so\nI'm gonna deny them going to any host,\n\n545\n00:28:30.063 --> 00:28:35.269\nwhere equals, Let's do UDP, and\nactually, if I'm gonna do a port,\n\n546\n00:28:35.269 --> 00:28:38.667\nI got it way back here cuz I left out\nthe protocol, kind of important, right?\n\n547\n00:28:38.667 --> 00:28:40.296\nYou do deny followed by the protocol.\n\n548\n00:28:40.296 --> 00:28:42.450\nSo it knows that I'm doing extended ACL.\n\n549\n00:28:42.450 --> 00:28:46.920\nAnd then I punch in the source, the\ndestination, and the port that it equals.\n\n550\n00:28:46.920 --> 00:28:49.115\nAnd so now I've got that one in there,\nand it knows that it's sequence number 5.\n\n551\n00:28:50.220 --> 00:28:56.880\nBut if I just come in here and\nsay, permit ip any any, right?\n\n552\n00:28:56.880 --> 00:29:01.859\nNow, or actually I gotta remember\nthe protocol I'm in, permit ipv6 any any.\n\n553\n00:29:01.859 --> 00:29:04.684\nNow, it's just gonna add that to the end.\n\n554\n00:29:04.684 --> 00:29:09.244\nAnd if I do a show access-list and\nI take a look at that.\n\n555\n00:29:09.244 --> 00:29:11.550\nAnd we get down to\nthe access list down here.\n\n556\n00:29:11.550 --> 00:29:14.820\nSee how it's not showing those\nline numbers at the beginning?\n\n557\n00:29:14.820 --> 00:29:16.080\nIt's showing the line numbers at the end,\nright?\n\n558\n00:29:17.450 --> 00:29:20.010\nWhy have the line numbers\nat the end like that?\n\n559\n00:29:20.010 --> 00:29:21.430\nWhy do it different?\n\n560\n00:29:21.430 --> 00:29:23.450\nThe reason it's doing it different is so\n\n561\n00:29:23.450 --> 00:29:26.120\nthat it's stored in\nthe configuration file.\n\n562\n00:29:26.120 --> 00:29:27.870\nAnd if I were to copy these lines and\n\n563\n00:29:27.870 --> 00:29:31.570\npaste them on some other\nrouter somewhere else.\n\n564\n00:29:31.570 --> 00:29:34.580\nAll the lines should have\nthe exact same sequence number.\n\n565\n00:29:34.580 --> 00:29:36.281\nWith the other ACLs, if I were to copy and\n\n566\n00:29:36.281 --> 00:29:39.300\npaste them onto a new router somewhere\nelse, they'd get renumbered.\n\n567\n00:29:39.300 --> 00:29:42.465\nAnd that might not be a big deal to you,\nmight not be a big deal to me.\n\n568\n00:29:42.465 --> 00:29:45.282\nBut there's a lot of people out\nthere that use automation scripts.\n\n569\n00:29:45.282 --> 00:29:49.880\nAnd if I have an automation script that's\nset to reach in to modify line 57.\n\n570\n00:29:49.880 --> 00:29:52.836\nAnd all of a sudden, I restore\na router from backup or whatever.\n\n571\n00:29:52.836 --> 00:29:55.222\nAnd line 57 is not there anymore,\nor line 57 is different,\n\n572\n00:29:55.222 --> 00:29:56.492\nthat could cause some problems.\n\n573\n00:29:56.492 --> 00:29:59.594\nSo by doing it this way,\nwe're able to keep it in there,\n\n574\n00:29:59.594 --> 00:30:01.254\nto keep that number the same.\n\n575\n00:30:01.254 --> 00:30:04.050\nAnd I'm using show commands,\nlet me show you in the running config.\n\n576\n00:30:04.050 --> 00:30:08.130\nIf I do a show running-config, and\nwe'll pull it up in the config itself,\n\n577\n00:30:08.130 --> 00:30:08.990\nwhere you can really see.\n\n578\n00:30:10.110 --> 00:30:11.672\nLet me just bring this\ndown here towards the end.\n\n579\n00:30:11.672 --> 00:30:15.130\nAll right, so all these access\nlists that I made up here,\n\n580\n00:30:15.130 --> 00:30:16.910\nthese are just straight up numbered ones.\n\n581\n00:30:16.910 --> 00:30:18.370\nAnd they don't have line numbers.\n\n582\n00:30:18.370 --> 00:30:22.757\nAnd when you get to filter-bad-hosts,\nit doesn't have line numbers either.\n\n583\n00:30:22.757 --> 00:30:24.201\nBut we saw the line numbers a minute ago.\n\n584\n00:30:24.201 --> 00:30:28.280\nRemember I made a 35 or 30, or\nI don't know, whatever it was.\n\n585\n00:30:28.280 --> 00:30:30.800\nI deleted line 20, they had line numbers.\n\n586\n00:30:30.800 --> 00:30:32.422\nThose line numbers were in RAM.\n\n587\n00:30:32.422 --> 00:30:34.915\nIf I reboot the router,\nit's gonna re-sequence.\n\n588\n00:30:34.915 --> 00:30:37.509\nAnd these are gonna become 10,\n20, 30, 40, 50.\n\n589\n00:30:37.509 --> 00:30:39.297\nSo it will re-sequence on a reboot.\n\n590\n00:30:39.297 --> 00:30:40.374\nHopefully, you never have to reboot.\n\n591\n00:30:40.374 --> 00:30:42.405\nBut if you do, it'll re-sequence.\n\n592\n00:30:42.405 --> 00:30:46.920\nBut with IPv6,\nif I continue down, right there,\n\n593\n00:30:46.920 --> 00:30:50.808\nthe sequence numbers are in there, right?\n\n594\n00:30:50.808 --> 00:30:55.723\nExcept notice my permit ipv6 any any,\nsee how it didn't get a sequence number?\n\n595\n00:30:55.723 --> 00:30:58.049\nIt just stuck it at the end, right?\n\n596\n00:30:58.049 --> 00:31:01.339\nIt knew to stick it at the end\nbecause of the any any.\n\n597\n00:31:01.339 --> 00:31:04.920\nIt knew that it was a big kind\nof one that grabs everything.\n\n598\n00:31:04.920 --> 00:31:07.410\nAnd so it knew to stick it at the end\nwithout a line number like that.\n\n599\n00:31:07.410 --> 00:31:10.960\nSo that as I add more in the future,\nif I reboot, it'll kind of re-sequence\n\n600\n00:31:10.960 --> 00:31:13.865\nto make sure that that one's at\nthe end cuz it is a catch all.\n\n601\n00:31:13.865 --> 00:31:17.340\nVersus the other ones where it maintained\nthose line numbers, all right?\n\n602\n00:31:17.340 --> 00:31:18.670\nSo it's pretty smart about that stuff.\n\n603\n00:31:18.670 --> 00:31:20.830\nIt's pretty smart to figure\nout what needs to go where.\n\n604\n00:31:20.830 --> 00:31:23.044\nOn sequence 5, I typed that number.\n\n605\n00:31:23.044 --> 00:31:25.409\nOn sequence 10, I didn't,\nit assigned that.\n\n606\n00:31:25.409 --> 00:31:29.620\nAnd I didn't on the any any, but it knew\nthat a catch all needs to go at the end.\n\n607\n00:31:29.620 --> 00:31:32.290\nSo it's able to grab that and\nget that proper.\n\n608\n00:31:32.290 --> 00:31:33.370\nSo pretty neat stuff.\n\n609\n00:31:33.370 --> 00:31:35.124\nIf I needed that any any\nto be somewhere else,\n\n610\n00:31:35.124 --> 00:31:37.890\nthen I would need to do the sequence\ncommand to get it there.\n\n611\n00:31:37.890 --> 00:31:42.080\nSo creating the IPv6 access list\nis just a little bit different.\n\n612\n00:31:42.080 --> 00:31:43.600\nAs far as applying it to an interface,\n\n613\n00:31:43.600 --> 00:31:45.330\nthough, that's where\nthings get really weird.\n\n614\n00:31:46.350 --> 00:31:48.592\nI know, it's already kinda weird\ndealing with IPv6 addresses, but\n\n615\n00:31:48.592 --> 00:31:49.277\nlet me just show you.\n\n616\n00:31:49.277 --> 00:31:56.279\nIf I were to get into Gi2/0, and\nI want to apply an IPv4 access list,\n\n617\n00:31:56.279 --> 00:32:01.321\nwe'd say ip access-group filter-bad-hosts.\n\n618\n00:32:01.321 --> 00:32:02.981\nHosts in, right?\n\n619\n00:32:02.981 --> 00:32:05.940\nSo there we go,\nI just applied an IPv4 access list.\n\n620\n00:32:05.940 --> 00:32:09.820\nIf I wanted to do IPv6, here's where\nit's really strange, we say IPv6, and\n\n621\n00:32:09.820 --> 00:32:12.840\nit's not access-group.\n\n622\n00:32:12.840 --> 00:32:17.506\nInstead, it is traffic-filter.\n\n623\n00:32:17.506 --> 00:32:23.250\nAll right, Cisco is again thinking to the\nfuture, the future way of doing things.\n\n624\n00:32:23.250 --> 00:32:26.660\nWhen I tell you access group,\nwhat do you think?\n\n625\n00:32:26.660 --> 00:32:29.190\nIf you had never worked with Cisco\nbefore and I said access group,\n\n626\n00:32:29.190 --> 00:32:33.170\nI would think that I'm granting\naccess to a group if IPs.\n\n627\n00:32:33.170 --> 00:32:36.230\nBut an ACL is often times\ndoing the exact opposite.\n\n628\n00:32:36.230 --> 00:32:38.130\nYou're denying access to certain people,\n\n629\n00:32:38.130 --> 00:32:40.510\notherwise you wouldn't have\nan ACL in the first place, right?\n\n630\n00:32:40.510 --> 00:32:42.410\nSo the name isn't necessarily intuitive.\n\n631\n00:32:42.410 --> 00:32:44.480\nHere, traffic filter.\n\n632\n00:32:44.480 --> 00:32:46.250\nThat makes a lot more sense, right?\n\n633\n00:32:46.250 --> 00:32:48.860\nIt also lines up with what's\nin the RFCs for IPv6.\n\n634\n00:32:48.860 --> 00:32:52.270\nSo it's a little more\nin line with the actual\n\n635\n00:32:52.270 --> 00:32:54.130\nlanguage as a part of the IPv6 standard.\n\n636\n00:32:54.130 --> 00:32:57.070\nSo, we'll say IPv6 traffic-filter and\n\n637\n00:32:57.070 --> 00:33:02.150\nthen the name of the filter which mine was\ncalled wan-filter if I remember, right?\n\n638\n00:33:02.150 --> 00:33:04.080\nAnd then we just say, in or out, right?\n\n639\n00:33:04.080 --> 00:33:08.319\nSo, it is actually applied the same way,\njust instead of access-group, or\n\n640\n00:33:08.319 --> 00:33:13.750\nip access-group,\nyou're saying IPv6 traffic-filter.\n\n641\n00:33:13.750 --> 00:33:16.620\nAnd when we apply that,\nit's on there, right?\n\n642\n00:33:16.620 --> 00:33:20.290\nNow be careful, because remember\nthe command I keep using to verify,\n\n643\n00:33:20.290 --> 00:33:26.180\nI do show IP interface and then\nan interface and then I like to filter it,\n\n644\n00:33:26.180 --> 00:33:29.770\njust to look for the word list,\ncuz then I can find exactly what I want.\n\n645\n00:33:29.770 --> 00:33:32.850\nRemember that,\nyou can have one incoming and\n\n646\n00:33:32.850 --> 00:33:35.890\none outgoing ACL on an interface, right?\n\n647\n00:33:35.890 --> 00:33:39.870\nWell, it's actually one in and\none out per protocol.\n\n648\n00:33:39.870 --> 00:33:45.290\nSo, I can have one incoming IPv4 access\nlist, one outgoing IPv4 access list,\n\n649\n00:33:45.290 --> 00:33:49.480\none incoming IPv6 access list,\none outgoing IPv6 access list.\n\n650\n00:33:49.480 --> 00:33:51.868\nI can have four ACLs on\nthis one interface, right.\n\n651\n00:33:51.868 --> 00:33:58.170\nAnd show IP interface is\nshowing IPv4 information.\n\n652\n00:33:58.170 --> 00:34:04.260\nIf I do show IPv6, that's where things\nchange, and the keyword is different.\n\n653\n00:34:04.260 --> 00:34:06.480\nSo if I, shoot.\n\n654\n00:34:06.480 --> 00:34:07.910\nI actually have IPv6 turned off,\n\n655\n00:34:07.910 --> 00:34:11.170\ncuz I don't have an IPv6 address\nassigned to this interface.\n\n656\n00:34:11.170 --> 00:34:12.510\nThat makes a difference too, right?\n\n657\n00:34:12.510 --> 00:34:14.070\nSo, I need to get an IPv6 address.\n\n658\n00:34:14.070 --> 00:34:18.150\nLet's do something like that.\n\n659\n00:34:19.460 --> 00:34:23.870\nAnd I probably need to turn on\nIPv6 unicast routing, there we go.\n\n660\n00:34:23.870 --> 00:34:27.640\nYou guys probably remember from the IPv6\nshows, this is a few things we need to do\n\n661\n00:34:27.640 --> 00:34:31.920\nto get IPv6 up and\ngoing before it's actually functional.\n\n662\n00:34:31.920 --> 00:34:34.330\nThere we go,\nnow I'm actually seeing stuff.\n\n663\n00:34:34.330 --> 00:34:39.270\nAnd, if you look input\nfeatures access list, right.\n\n664\n00:34:39.270 --> 00:34:43.115\nSo, it's telling me there is\nan access list applied for input and\n\n665\n00:34:43.115 --> 00:34:46.400\nthen the inbound access\nlist is LAN filter.\n\n666\n00:34:46.400 --> 00:34:47.530\nI don't have an outbound one right now.\n\n667\n00:34:47.530 --> 00:34:50.733\nSo now, had I done that command\nI ran a minute ago, right.\n\n668\n00:34:50.733 --> 00:34:54.478\nWhere I include the word list,\nI would have got that, right there,\n\n669\n00:34:54.478 --> 00:34:57.130\ninbound access list wan-filter, right?\n\n670\n00:34:57.130 --> 00:34:58.810\nSo, we get it applied.\n\n671\n00:34:58.810 --> 00:35:00.380\nIt's in place, we can see it.\n\n672\n00:35:00.380 --> 00:35:05.880\nAll the other commands, like do show\naccess-list will show IPv4 and IPv6.\n\n673\n00:35:05.880 --> 00:35:08.820\nAnd you'll have match lines that show\nup here that let you know if traffic\n\n674\n00:35:08.820 --> 00:35:09.600\nis hitting it.\n\n675\n00:35:09.600 --> 00:35:10.830\nYou can use the log keyword.\n\n676\n00:35:10.830 --> 00:35:13.870\nAll the things you used under IPv4,\nyou can use under IPv6.\n\n677\n00:35:13.870 --> 00:35:15.455\nIt's just the syntax that's\na little bit different.\n\n678\n00:35:15.455 --> 00:35:19.180\n&gt;&gt; Done a lot of good information on ACLs\nand I did notice that when you jumped over\n\n679\n00:35:19.180 --> 00:35:22.550\nto IPv6, it seemed to have a lot more\nof those sequence numbers available.\n\n680\n00:35:22.550 --> 00:35:24.870\nI think it double them\nis what it looked like.\n\n681\n00:35:24.870 --> 00:35:26.850\n&gt;&gt; Like 4 billion or\nsomething, it's up there.\n\n682\n00:35:26.850 --> 00:35:28.270\n&gt;&gt; Yeah it was something astronomical.\n\n683\n00:35:28.270 --> 00:35:30.780\nNow it does look like we're coming\nto the end of another episode.\n\n684\n00:35:30.780 --> 00:35:32.750\nBut again, do want to give you a chance.\n\n685\n00:35:32.750 --> 00:35:35.590\nGot any final words on ACLs for\nour viewers?\n\n686\n00:35:35.590 --> 00:35:39.090\nAs far as I'm concerned, what we've\ncovered in the last three episodes is\n\n687\n00:35:39.090 --> 00:35:42.840\nreally everything we need to know in\nthe real world for ACL's as well as for\n\n688\n00:35:42.840 --> 00:35:43.930\nthe exam.\n\n689\n00:35:43.930 --> 00:35:48.060\nThere is one other topic if you're\nreading your exam objectives\n\n690\n00:35:48.060 --> 00:35:52.890\ncalled the a pick That is a software suite\nfrom Cisco that we're gonna talk about in\n\n691\n00:35:52.890 --> 00:35:53.710\na separate episode.\n\n692\n00:35:53.710 --> 00:35:56.400\nIt's kind of big enough that\nit needs it's own episode.\n\n693\n00:35:56.400 --> 00:36:00.060\nIt's not something you're gonna use in\nreal life, but it is on the exam, so\n\n694\n00:36:00.060 --> 00:36:00.730\nwe do need to cover it.\n\n695\n00:36:00.730 --> 00:36:02.000\nWe'll put it in a different episode.\n\n696\n00:36:02.000 --> 00:36:04.290\nBut what you've just seen right there,\nthose last three episodes,\n\n697\n00:36:04.290 --> 00:36:06.890\nthat's really pretty\nmuch everything you need.\n\n698\n00:36:06.890 --> 00:36:10.730\nNow, how you implement it in your\nenvironment is gonna be different.\n\n699\n00:36:10.730 --> 00:36:12.540\nYou've got to take your time,\n\n700\n00:36:12.540 --> 00:36:15.550\ndesign your ACLs to match up\nwith your software requirements.\n\n701\n00:36:15.550 --> 00:36:22.750\nTest things out, and remember that all\nACLs are unit directional by default.\n\n702\n00:36:22.750 --> 00:36:25.470\nWe're filtering traffic in one way.\n\n703\n00:36:25.470 --> 00:36:29.310\nSo, if I have a filter coming\nthe other way, if I have an in and\n\n704\n00:36:29.310 --> 00:36:32.280\nan out, I need to be allowing\ntraffic in both directions.\n\n705\n00:36:32.280 --> 00:36:35.950\nSo, if I'm trying to\nallow web traffic out,\n\n706\n00:36:35.950 --> 00:36:38.600\nI need to open port 80 going out,\nor destination port 80.\n\n707\n00:36:38.600 --> 00:36:42.230\nBut I need to allow replies to come\nback in, that I have a source of 80.\n\n708\n00:36:42.230 --> 00:36:45.290\nSo, always think about that,\nyour ACLs go in two directions.\n\n709\n00:36:45.290 --> 00:36:46.710\nSo, if you're filtering\nin both directions,\n\n710\n00:36:46.710 --> 00:36:48.610\neverything has to be entered in twice.\n\n711\n00:36:48.610 --> 00:36:50.880\nThere's some router and\nswitches, some firewalls,\n\n712\n00:36:50.880 --> 00:36:54.370\nactually all firewalls, have what are\ncalled reflexive ACLs where it change in\n\n713\n00:36:54.370 --> 00:36:56.730\none direction applies to\nthe other direction also.\n\n714\n00:36:56.730 --> 00:36:58.070\nMost routers don't have that though.\n\n715\n00:36:58.070 --> 00:37:02.360\nSo understand that bidirectional\nfiltering can be problematic.\n\n716\n00:37:02.360 --> 00:37:04.380\n&gt;&gt; Well done.\nAs always, it's great to have you here and\n\n717\n00:37:04.380 --> 00:37:05.910\nit's great to have you the viewer here.\n\n718\n00:37:05.910 --> 00:37:08.740\nSigning out for\nITProTV I've been your host, Wes Bryant.\n\n719\n00:37:08.740 --> 00:37:09.760\n&gt;&gt; And I'm Don Pizzett.\n\n720\n00:37:09.760 --> 00:37:11.179\n&gt;&gt; And we'll see you next time.\n\n721\n00:37:11.179 --> 00:37:18.159\n[MUSIC]\n\n722\n00:37:18.159 --> 00:37:21.086\nThank you for watching ITProTV\n\n",
          "vimeoId": "188021654"
        },
        {
          "description": "In this episode, Wes and Don dive into the Application Policy Infrastructure Controller- Enterprise Module. They describe the benefits of APIC-EM like allowing for visibility of ACL behavior prior to deployment as well as using APIC-EM for online sandbox testing.",
          "length": "1855",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/cisco-ccna200105/cisco-ccna200105-4-3-using_the_apic_em-102016.00_30_41_14.Still001.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/cisco-ccna200105/cisco-ccna200105-4-3-using_the_apic_em-102016.00_30_41_14.Still001-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/cisco-ccna200105/cisco-ccna200105-4-3-using_the_apic_em-102016.00_30_41_14.Still001-sm.jpg",
          "title": "Using APIC-EM",
          "transcript": "WEBVTT\n\n1\n00:00:00.008 --> 00:00:03.725\nWelcome to ITPro.TV,\nI'm your host Don Pezet,\n\n2\n00:00:03.725 --> 00:00:07.449\ncoming at you live from\nSan Francisco [CROSSTALK].\n\n3\n00:00:07.449 --> 00:00:08.339\n[MUSIC]\n\n4\n00:00:08.339 --> 00:00:10.802\n&gt;&gt; You're watching ITPro.TV.\n\n5\n00:00:12.260 --> 00:00:15.310\n&gt;&gt; Welcome back to another\nexciting episode here at ITProTV.\n\n6\n00:00:15.310 --> 00:00:16.470\nI'm your host, Wes Bryan.\n\n7\n00:00:16.470 --> 00:00:19.804\nAnd in today's episode, we're coming\nback at you with more Cisco routing and\n\n8\n00:00:19.804 --> 00:00:20.370\nswitching.\n\n9\n00:00:20.370 --> 00:00:22.340\nAnd we're looking at\ninfrastructure services.\n\n10\n00:00:22.340 --> 00:00:25.255\nNow, before this acronym's thrown at me,\nI'm gonna try this here.\n\n11\n00:00:25.255 --> 00:00:26.840\n&gt;&gt; [LAUGH]\n&gt;&gt; And this is the advanced\n\n12\n00:00:26.840 --> 00:00:31.220\nPolicy Infrastructure\nController Enterprise Module.\n\n13\n00:00:31.220 --> 00:00:32.200\n&gt;&gt; Yeah, that's a mouthful, and\n\n14\n00:00:32.200 --> 00:00:35.400\nto help us with that very subject\nis none other than Mr Don Pezet.\n\n15\n00:00:35.400 --> 00:00:36.480\nDon, how you doing, sir?\n\n16\n00:00:36.480 --> 00:00:37.381\n&gt;&gt; I'm doing swell, Wes.\n\n17\n00:00:37.381 --> 00:00:38.490\nYeah, this is a big one.\n\n18\n00:00:38.490 --> 00:00:41.192\nSo this episode we're gonna be\ntaking a look at the APIC-EM.\n\n19\n00:00:41.192 --> 00:00:45.526\nAnd the APIC-EM is a neat kind of\ntool that's available from Cisco, and\n\n20\n00:00:45.526 --> 00:00:50.300\nit's one of the new objectives that was\nadded in the latest refresh of the CCNA.\n\n21\n00:00:50.300 --> 00:00:53.550\nAnd so let me talk just a little\nbit about that, first off.\n\n22\n00:00:53.550 --> 00:00:56.100\nThe APIC-EM, it's a software suite.\n\n23\n00:00:56.100 --> 00:00:59.294\nIt's actually a collection of tools that\nare made available via web interface and\n\n24\n00:00:59.294 --> 00:01:00.367\nit's powered by a server.\n\n25\n00:01:00.367 --> 00:01:03.574\nAnd if you work in an enterprise\nenvironment, a complex network,\n\n26\n00:01:03.574 --> 00:01:06.510\nyou can use the APIC-EM to do\na handful of different things.\n\n27\n00:01:06.510 --> 00:01:07.849\nIt's actually really powerful and\n\n28\n00:01:07.849 --> 00:01:09.951\nCisco's adding a number of\nfeatures to it all the time.\n\n29\n00:01:09.951 --> 00:01:14.311\nSo what you basically do is you have a\nserver that sits on your network somewhere\n\n30\n00:01:14.311 --> 00:01:16.670\nand it runs the APIC software.\n\n31\n00:01:16.670 --> 00:01:22.287\nAnd the APIC software, what it stands for,\nand Wes, you were almost dead-on with it.\n\n32\n00:01:22.287 --> 00:01:24.343\nIt's hard to remember so\nI actually have it written down myself.\n\n33\n00:01:24.343 --> 00:01:28.240\nIt's the Application Policy\nInfrastructure Controller.\n\n34\n00:01:28.240 --> 00:01:29.529\nSo that's what the APIC is.\n\n35\n00:01:29.529 --> 00:01:33.318\nAnd what it's designed to do is\nprovide a software interface for\n\n36\n00:01:33.318 --> 00:01:36.790\nthird parties to interact\nwith Cisco equipment, right.\n\n37\n00:01:36.790 --> 00:01:41.050\nAnd this is a thing that was\nuncommon even two years ago, but\n\n38\n00:01:41.050 --> 00:01:43.860\nnow we're starting to see more and\nmore of it thanks to what's called SDN.\n\n39\n00:01:43.860 --> 00:01:46.510\nSTN is software-defined networking.\n\n40\n00:01:46.510 --> 00:01:49.520\nIn the olden days when you'd set\nup a switch, you'd take it and\n\n41\n00:01:49.520 --> 00:01:52.680\nyou'd assigned ports to a VLAN and\nthat was that, right.\n\n42\n00:01:52.680 --> 00:01:57.420\nWell, now, you might have ports that\nsometimes need to be on one VLAN,\n\n43\n00:01:57.420 --> 00:01:58.810\nother times need to be\non a different VLAN.\n\n44\n00:01:58.810 --> 00:02:00.946\nMaybe you're some kind of\ncloud service provider, and\n\n45\n00:02:00.946 --> 00:02:02.269\nyou've got tenants that come in.\n\n46\n00:02:02.269 --> 00:02:04.937\nAnd so, when they spin up servers,\nyou need to isolate them.\n\n47\n00:02:04.937 --> 00:02:07.310\nAnd it's stuff that's all\nbeing software-driven.\n\n48\n00:02:07.310 --> 00:02:09.830\nWell, every time you wanna make a change,\nyou don't wanna have to open up a support\n\n49\n00:02:09.830 --> 00:02:12.860\nticket to the network team,\nto get them to change over a port.\n\n50\n00:02:12.860 --> 00:02:14.710\nIt'd be nice if your software could do it.\n\n51\n00:02:14.710 --> 00:02:17.148\nAnd so Cisco's really started\nto open up about that.\n\n52\n00:02:17.148 --> 00:02:20.720\nAnd the APIC allows you to\nwrite custom software and\n\n53\n00:02:20.720 --> 00:02:25.000\nyou can call through an API, through\nan Application Programming Interface,\n\n54\n00:02:25.000 --> 00:02:27.540\nnot to be confused with the APIC,\nwhich is different.\n\n55\n00:02:27.540 --> 00:02:31.817\nBut to be able to use an API to\ntalk to the APIC and say hey,\n\n56\n00:02:31.817 --> 00:02:33.469\nI need you to do this.\n\n57\n00:02:33.469 --> 00:02:35.956\nI need you to take this switch and\nmove these ports to this VLAN.\n\n58\n00:02:35.956 --> 00:02:38.341\nOr I need you to take this router and\nadd a static route.\n\n59\n00:02:38.341 --> 00:02:42.310\nOr I need you to take that ASA and\nadd this rule to allow traffic through it.\n\n60\n00:02:42.310 --> 00:02:45.810\nOr I need you to remove it, or\nI just need to monitor performance.\n\n61\n00:02:45.810 --> 00:02:48.766\nAnd you can do all of that and\nthe APIC turns around and does it for you.\n\n62\n00:02:48.766 --> 00:02:50.447\nIt's kind of cool, right?\n\n63\n00:02:50.447 --> 00:02:54.416\nThat means that we can use the APIC for\na number different things, and\n\n64\n00:02:54.416 --> 00:02:58.796\nCisco was constantly writing these modules\nthat stick onto it to add more and\n\n65\n00:02:58.796 --> 00:03:00.620\nmore functionality.\n\n66\n00:03:00.620 --> 00:03:04.470\nAnd for the CCNA, they only want you\nto know about one of those modules, and\n\n67\n00:03:04.470 --> 00:03:06.030\nthat's the Enterprise Module, the.\n\n68\n00:03:06.030 --> 00:03:11.200\nAnd the Enterprise Module is designed to\nlet you, in an enterprise environment,\n\n69\n00:03:11.200 --> 00:03:14.830\nmonitor your equipment, so\nyou can see if it's up, healthy,\n\n70\n00:03:14.830 --> 00:03:20.650\nfunctioning the way that you want,\nand to test and diagnose your network.\n\n71\n00:03:20.650 --> 00:03:23.415\nIf you're about to make\na change on the network,\n\n72\n00:03:23.415 --> 00:03:27.941\nyou can make the change in the APIC-EM and\nsee how it affects your environment.\n\n73\n00:03:27.941 --> 00:03:31.127\nOr you can make the change in the actual\nequipment, and the APIC-EM will learn\n\n74\n00:03:31.127 --> 00:03:34.440\nabout it and it'll incorporate it and\nit'll show you what's going on.\n\n75\n00:03:34.440 --> 00:03:36.540\nAnd so you can quickly do testing.\n\n76\n00:03:36.540 --> 00:03:39.850\nSo you're about to roll out a change,\nthe testing happens automatically,\n\n77\n00:03:39.850 --> 00:03:43.450\nand if the change is bad, you roll it\nback, right, and everything's great.\n\n78\n00:03:43.450 --> 00:03:45.620\nYou kind of avoid a disaster.\n\n79\n00:03:45.620 --> 00:03:49.411\nAnd this can be done over ten devices,\na hundred devices, a thousand devices\n\n80\n00:03:49.411 --> 00:03:52.807\nhowever it is that you have loaded in and\nmanaged by your APIC server.\n\n81\n00:03:52.807 --> 00:03:55.337\nAnd the more devices you might need\nmore than one APIC server to get\n\n82\n00:03:55.337 --> 00:03:56.510\neverything going.\n\n83\n00:03:56.510 --> 00:04:00.321\nSo, where this becomes a challenge is for\nyou, as the learner,\n\n84\n00:04:00.321 --> 00:04:04.133\nsomebody who's out there,\nyou want to study and get your CCNA so\n\n85\n00:04:04.133 --> 00:04:06.898\nyou're are just getting\nstarted with Cisco.\n\n86\n00:04:06.898 --> 00:04:10.146\nAnd if you work for an enterprise\nenvironment you may well have an APIC\n\n87\n00:04:10.146 --> 00:04:13.620\nserver there that you're able to use,\nbut most people don't.\n\n88\n00:04:13.620 --> 00:04:16.730\nFor two reasons, one,\nit's kind of a difficult thing to deploy.\n\n89\n00:04:16.730 --> 00:04:19.166\nYou've gotta have a server,\nyou have to have an infrastructure for it.\n\n90\n00:04:19.166 --> 00:04:21.089\nAnd the second reason is it's really new,\nand\n\n91\n00:04:21.089 --> 00:04:24.870\nenterprises don't jump on new stuff right\naway, and that makes it hard to learn.\n\n92\n00:04:24.870 --> 00:04:27.990\nSo what Cisco did is they created\nwhat's called the DevNet Sandbox.\n\n93\n00:04:27.990 --> 00:04:29.790\nAnd I'll put the link in the show notes.\n\n94\n00:04:29.790 --> 00:04:32.300\nBut you can go to Cisco's DevNet Sandbox,\nand\n\n95\n00:04:32.300 --> 00:04:36.840\nyou can reserve an APIC environment that's\nrunning right in their data centers.\n\n96\n00:04:36.840 --> 00:04:40.400\nAnd for a couple of hours you\ncan have access to routers, and\n\n97\n00:04:40.400 --> 00:04:43.200\nswitches, and and APIC server, so\nthat you can mess around with it, and\n\n98\n00:04:43.200 --> 00:04:45.280\nlearn it, and see how it works, all right.\n\n99\n00:04:45.280 --> 00:04:48.474\nIt's actually not that hard to use,\nand with the DevNet Sandboxes,\n\n100\n00:04:48.474 --> 00:04:49.531\nyou can do it for free.\n\n101\n00:04:49.531 --> 00:04:52.414\nSo if you're wondering about that at home,\nyou're like, well,\n\n102\n00:04:52.414 --> 00:04:55.770\nAPIC-EM is nice whatever, but\nhow am I gonna get a chance to use that?\n\n103\n00:04:55.770 --> 00:04:56.617\nThe DevNet Sandbox.\n\n104\n00:04:56.617 --> 00:04:57.572\nThat's the way to do it.\n\n105\n00:04:57.572 --> 00:05:03.130\nAnd if you don't have the show notes,\nthe URL is just devnetsandbox.cisco.com.\n\n106\n00:05:03.130 --> 00:05:06.350\nIf you go to that URL,\nyou do have to have a Cisco account.\n\n107\n00:05:06.350 --> 00:05:08.460\nCisco Connect Online or CCO.\n\n108\n00:05:08.460 --> 00:05:11.070\nIf you have a CCO account, which is free,\nyou just sign up and get it.\n\n109\n00:05:11.070 --> 00:05:13.593\nThen you can reserve lab time and\ngain access to it.\n\n110\n00:05:13.593 --> 00:05:16.068\nThey'll give you VPN credentials and\nyou VPN into the lab, and\n\n111\n00:05:16.068 --> 00:05:17.990\nyou've got access to it, all right.\n\n112\n00:05:17.990 --> 00:05:20.644\nLet me just kinda show you real\nquick what that looks like.\n\n113\n00:05:20.644 --> 00:05:21.440\nSo, here I am.\n\n114\n00:05:21.440 --> 00:05:23.230\nI'm connected to one of\nthe DevNet Sandboxes, and\n\n115\n00:05:23.230 --> 00:05:25.080\nyou can see the environment\nthey've given me.\n\n116\n00:05:25.080 --> 00:05:27.287\nIt's got an APIC server\nsitting right here.\n\n117\n00:05:27.287 --> 00:05:30.603\nSo they've already installed the APIC, and\nit's got the Enterprise Module loaded.\n\n118\n00:05:30.603 --> 00:05:31.970\nThe APIC-EM.\n\n119\n00:05:31.970 --> 00:05:36.080\nAnd then as far as equipment,\nI've got a 2951 router.\n\n120\n00:05:36.080 --> 00:05:38.702\nI've got a 3650 Layer 3` switch.\n\n121\n00:05:38.702 --> 00:05:40.683\nI've got a 2921 router.\n\n122\n00:05:40.683 --> 00:05:43.770\nAnd over here I've got a 2951 router.\n\n123\n00:05:43.770 --> 00:05:46.670\nSo I've got a couple of different\ndevices that are thrown on the network.\n\n124\n00:05:46.670 --> 00:05:49.932\nAnd depending on which lab you launch,\nthey have different hardware, and\n\n125\n00:05:49.932 --> 00:05:51.761\nsome of it is really expensive hardware.\n\n126\n00:05:51.761 --> 00:05:55.120\nStuff that we couldn't normally\nafford just on a personal basis.\n\n127\n00:05:55.120 --> 00:05:57.688\nMaybe your company has it, but\nif you're dropping that kind of dough it's\n\n128\n00:05:57.688 --> 00:05:59.585\nprobably in production,\nnot available for testing.\n\n129\n00:05:59.585 --> 00:06:02.260\nHere's the chance to work with the\nequipment and not have to mess with it.\n\n130\n00:06:02.260 --> 00:06:04.280\nAnd then down here at the bottom\nyou'll see I've got a couple of Linux\n\n131\n00:06:04.280 --> 00:06:04.960\nservers too.\n\n132\n00:06:04.960 --> 00:06:06.760\nI didn't create these, Cisco did.\n\n133\n00:06:06.760 --> 00:06:09.470\nWhen I launched the lab, these were\na part of my lab, and here they are and\n\n134\n00:06:09.470 --> 00:06:10.960\nthey're available, all right.\n\n135\n00:06:10.960 --> 00:06:15.050\nNow the neat part is I can\nlog into the APIC-EM and\n\n136\n00:06:15.050 --> 00:06:18.690\nstart to use it without having to have\nthe infrastructure myself, all right.\n\n137\n00:06:18.690 --> 00:06:22.086\nSo here I am logged into the APIC-EM and\nit's web-driven so\n\n138\n00:06:22.086 --> 00:06:23.492\nI just use a web browser.\n\n139\n00:06:23.492 --> 00:06:24.828\nI'm using Google Chrome.\n\n140\n00:06:24.828 --> 00:06:28.610\nAnd you get logged in and you can\nstart to work with your environment.\n\n141\n00:06:28.610 --> 00:06:30.690\nAnd on the left side here I'll\nsee all the different components\n\n142\n00:06:30.690 --> 00:06:31.278\nthat are a part of it.\n\n143\n00:06:31.278 --> 00:06:35.610\nWe've got Discovery, Device Inventory,\nHost Inventory, Topology, IWIN,\n\n144\n00:06:35.610 --> 00:06:38.050\nPath Trace and Network Plug and Play.\n\n145\n00:06:38.050 --> 00:06:40.623\nAnd Cisco is adding new\nfeatures all the time.\n\n146\n00:06:40.623 --> 00:06:46.110\nNotice this, there's a little kind of\nadvertisement thing here, EasyQoS Beta.\n\n147\n00:06:46.110 --> 00:06:48.610\nIf you want to roll out quality\nof service in your environment,\n\n148\n00:06:48.610 --> 00:06:50.790\nwell QoS is really complex and hard to do.\n\n149\n00:06:50.790 --> 00:06:55.450\nWe can fire up the APIC-EM, it can\nlearn our environment, and it can make\n\n150\n00:06:55.450 --> 00:07:00.090\nsuggestions on how to deploy QoS for\nour applications, and even do it for us.\n\n151\n00:07:00.090 --> 00:07:02.570\nReach out and configure the devices,\nif we really wanna go that route.\n\n152\n00:07:02.570 --> 00:07:05.077\nSo it does some really cool\nstuff there if we want that, and\n\n153\n00:07:05.077 --> 00:07:06.879\nthose are new things that are coming out.\n\n154\n00:07:06.879 --> 00:07:08.970\nI'm not signed on for that beta.\n\n155\n00:07:08.970 --> 00:07:10.586\nSo I don't believe I have access to it.\n\n156\n00:07:10.586 --> 00:07:14.460\nBut some of the other things here that\nwe can do are what I wanna look at.\n\n157\n00:07:14.460 --> 00:07:18.260\nOn the CCNA exam objectives specifically\nit says you need to know how to\n\n158\n00:07:18.260 --> 00:07:20.910\ntroubleshoot a network\nby using the APIC-EM.\n\n159\n00:07:20.910 --> 00:07:23.030\nAll right, well sorry,\n\n160\n00:07:23.030 --> 00:07:26.250\nnot just troubleshoot a network,\ntroubleshoot access control lists, right?\n\n161\n00:07:26.250 --> 00:07:29.780\nSo in the last three episodes we've\ntalked about access control lists,\n\n162\n00:07:29.780 --> 00:07:31.630\nand how we deploy them, and\nhow we work with them, and\n\n163\n00:07:31.630 --> 00:07:34.750\nwe did it all via the command\nline of our Cisco routers, right.\n\n164\n00:07:34.750 --> 00:07:37.862\nWell, if I wanna do it kind\nof in an automated fashion,\n\n165\n00:07:37.862 --> 00:07:42.075\nI wanna do it through something like\nthe APIC-EM, I can do it right here.\n\n166\n00:07:42.075 --> 00:07:45.642\nAnd so on the left side, I've gotta do\na couple of things to get this set up.\n\n167\n00:07:45.642 --> 00:07:49.045\nAnd what I've got are those three devices\nkind of parked in the background,\n\n168\n00:07:49.045 --> 00:07:50.386\nlet me just pull them up here.\n\n169\n00:07:50.386 --> 00:07:57.580\nSo, I've got this 2951,\nI've got my 3650 and I've got my 2921.\n\n170\n00:07:57.580 --> 00:08:01.869\nThese three devices that we we\nsaw over here in the topology.\n\n171\n00:08:01.869 --> 00:08:04.968\nThat's this guy down here,\nthis guy up here,\n\n172\n00:08:04.968 --> 00:08:08.600\nand this little guy parked over here,\nright?\n\n173\n00:08:08.600 --> 00:08:11.110\nAnd these two routers,\nif they wanna talk to each other,\n\n174\n00:08:11.110 --> 00:08:13.760\nthey have to pass through\nthis layer three switch.\n\n175\n00:08:13.760 --> 00:08:16.610\nAnd so what I'm gonna do is I'm gonna\ndeploy some access control lists up here\n\n176\n00:08:16.610 --> 00:08:20.700\non this layer three switch to filter\ntraffic going from one router\n\n177\n00:08:20.700 --> 00:08:21.790\nto the other.\n\n178\n00:08:21.790 --> 00:08:25.655\nAnd when I employ it, I'm gonna use the\nAPIC-EM to make sure it's working the way\n\n179\n00:08:25.655 --> 00:08:29.240\nthat I intended it to, and if it isn't,\nthen I can go fix things from there,\n\n180\n00:08:29.240 --> 00:08:29.818\nall right?\n\n181\n00:08:29.818 --> 00:08:34.114\nNow when you make the changes, you might\nmake them on the devices themselves, or\n\n182\n00:08:34.114 --> 00:08:36.186\nyou might make them through the APIC.\n\n183\n00:08:36.186 --> 00:08:38.690\nThe APIC actually doesn't have\na great UI for making changes.\n\n184\n00:08:38.690 --> 00:08:40.980\nThey expect you to use\nthird party software and\n\n185\n00:08:40.980 --> 00:08:42.760\nreach in through the API, right?\n\n186\n00:08:42.760 --> 00:08:45.500\nWell, on the exam that's not\nsomething we're gonna have available.\n\n187\n00:08:45.500 --> 00:08:48.000\nSo I'm just gonna make\nthe changes via the CLI.\n\n188\n00:08:48.000 --> 00:08:49.590\nIf I make the changes via the CLI,\n\n189\n00:08:49.590 --> 00:08:52.500\nthe APIC will actually harvest that\ninformation from my devices, so\n\n190\n00:08:52.500 --> 00:08:56.120\nI need to get that set up first,\nand that's what's called discovery.\n\n191\n00:08:56.120 --> 00:08:58.820\nSo over here on the left side,\nI'm gonna go to Discovery, and\n\n192\n00:08:58.820 --> 00:09:02.180\nI'm gonna tell the APIC-EM to\nstart watching my network and\n\n193\n00:09:02.180 --> 00:09:04.620\nlearning about the equipment\nthat's out there.\n\n194\n00:09:04.620 --> 00:09:06.810\nAnd shoot, my session has timed out.\n\n195\n00:09:06.810 --> 00:09:08.970\nSo let me just get logged\nback into this thing.\n\n196\n00:09:08.970 --> 00:09:10.920\nAnd I'm gonna tell it to\ndiscover the network.\n\n197\n00:09:10.920 --> 00:09:13.080\nNow, how do we do discovery?\n\n198\n00:09:13.080 --> 00:09:15.130\nThere's actually several different ways.\n\n199\n00:09:15.130 --> 00:09:19.050\nWhen you go in to do discovery you're\ngonna see we can discover by CDP,\n\n200\n00:09:19.050 --> 00:09:20.920\nCisco Discovery Protocol.\n\n201\n00:09:20.920 --> 00:09:24.360\nWe can do SNMP\nthe Simple Network Management Protocol.\n\n202\n00:09:24.360 --> 00:09:26.650\nOr we can just do straight up CLI.\n\n203\n00:09:26.650 --> 00:09:30.060\nIt can SSH into the devices and\nharvest information that way.\n\n204\n00:09:30.060 --> 00:09:33.070\nAnd so\nin order to effectively use the APIC\n\n205\n00:09:33.070 --> 00:09:35.010\nwe need to populate some of this data.\n\n206\n00:09:35.010 --> 00:09:38.360\nSo I'm gonna create a discovery, which\nI'll just call my standard discovery.\n\n207\n00:09:39.420 --> 00:09:42.310\nAnd for the discovery type,\nI'll stick with CDP.\n\n208\n00:09:42.310 --> 00:09:44.580\nWith CDP,\nI need to tell it a device to start with.\n\n209\n00:09:44.580 --> 00:09:46.490\nAnd so\nI'm gonna tell it that layer 3 switch,\n\n210\n00:09:46.490 --> 00:09:50.696\nthe one that's kind of in the middle\nof my topology, which is 10.10.50.62.\n\n211\n00:09:50.696 --> 00:09:55.290\nSo I'm gonna come in and\npunch that in here, 10.10.50.62.\n\n212\n00:09:55.290 --> 00:10:00.600\nAll right, next I'm gonna tell it down\nhere that I'm using SNMP also and\n\n213\n00:10:00.600 --> 00:10:04.230\nI can drop that down and\nI pick SNMP version 3 or version 2.\n\n214\n00:10:04.230 --> 00:10:08.330\nI can give it a read community or\nwrite community and if I got more than one\n\n215\n00:10:08.330 --> 00:10:12.690\nI can specify each of those, I just need\nto come in and tell it what I wanna use.\n\n216\n00:10:12.690 --> 00:10:16.078\nI'm gonna expand that out and\ngo down down here to SNMP version 2.\n\n217\n00:10:16.078 --> 00:10:20.720\nAnd now if you're just logged into\nthe lab, you can set your own SNMP\n\n218\n00:10:20.720 --> 00:10:23.370\ncommunities, but they actually\nalready have it set up for us.\n\n219\n00:10:23.370 --> 00:10:28.366\nSo if I come in and look for SNMP, see\nhow I've got a read-only called public,\n\n220\n00:10:28.366 --> 00:10:31.565\nand I've got a read-write called cisco123.\n\n221\n00:10:31.565 --> 00:10:36.369\nSo back in the APIC for the read, I'm just\ngonna put in public and for the right,\n\n222\n00:10:36.369 --> 00:10:38.040\nI'll put in cisco123.\n\n223\n00:10:38.040 --> 00:10:41.628\nAnd then down here at\nthe bottom my CLI credentials.\n\n224\n00:10:41.628 --> 00:10:43.640\nIf we need actually log into the devices,\n\n225\n00:10:43.640 --> 00:10:47.038\nif it's gonna SSH in then it's gonna\nneed credentials to get in there.\n\n226\n00:10:47.038 --> 00:10:52.270\nSo I'm gonna punch in my admin credentials\nthere to be able to connect in.\n\n227\n00:10:52.270 --> 00:10:55.520\nIf you've got a separate enable password\nthen you'll need to punch that in.\n\n228\n00:10:55.520 --> 00:10:58.790\nI don't have a separate enable\npassword cuz I'm doing AAA new models.\n\n229\n00:10:58.790 --> 00:11:02.310\nSo when I log in it authorizes me\nto be enabled right off the bat, so\n\n230\n00:11:02.310 --> 00:11:04.130\nI don't need that one.\n\n231\n00:11:04.130 --> 00:11:06.750\nOnce you've got those credentials\nin you go ahead start discovery.\n\n232\n00:11:06.750 --> 00:11:09.810\nAnd now it's gonna search the network and\nfind your devices.\n\n233\n00:11:09.810 --> 00:11:13.100\nAnd so what it's doing is\nit's starting with this 3650,\n\n234\n00:11:13.100 --> 00:11:18.150\nthat's one whose IP I put in, and\nfrom there it will do a show CDP neighbor.\n\n235\n00:11:18.150 --> 00:11:21.300\nIt will find the neighbors,\nconnect into them, gather their data and\n\n236\n00:11:21.300 --> 00:11:22.710\npopulate all that information.\n\n237\n00:11:22.710 --> 00:11:26.670\nAll right, now it's already been done here\nonce because I've got the topology but\n\n238\n00:11:26.670 --> 00:11:29.640\nafter that it's going in and\nbuilding up here in the APIC, right?\n\n239\n00:11:29.640 --> 00:11:33.780\nCuz this topology, this is actually\npart of the dev net sandbox.\n\n240\n00:11:33.780 --> 00:11:35.586\nNot part of the APIC, right?\n\n241\n00:11:35.586 --> 00:11:37.709\nSo this is just me in the dev net sandbox.\n\n242\n00:11:37.709 --> 00:11:41.320\nThe APIC was actually empty and\nso now it's scanning through and\n\n243\n00:11:41.320 --> 00:11:42.210\nfinding those device.\n\n244\n00:11:42.210 --> 00:11:43.460\nAnd so it's starting the scan and\n\n245\n00:11:43.460 --> 00:11:45.490\nwe'll give it a moment while it does that,\nall right?\n\n246\n00:11:45.490 --> 00:11:50.070\nNow while we're waiting on that let\nme jump over to my devices, and\n\n247\n00:11:50.070 --> 00:11:51.290\nwe're gonna test a few things.\n\n248\n00:11:51.290 --> 00:11:52.530\nActually it kind of already finished.\n\n249\n00:11:52.530 --> 00:11:54.695\nBut anyhow, we'll test the things anyway.\n\n250\n00:11:54.695 --> 00:12:00.381\nWhat I wanna test is I wanna test\nconnectivity between this 2921 and\n\n251\n00:12:00.381 --> 00:12:01.718\nthis 2951.\n\n252\n00:12:01.718 --> 00:12:05.201\nAnd basically,\non the left side I've got 10.10.50.66, and\n\n253\n00:12:05.201 --> 00:12:07.799\non the right side I've got 10.10.50.70.\n\n254\n00:12:07.799 --> 00:12:09.973\nThose are the two devices that\nI'm gonna be testing between.\n\n255\n00:12:09.973 --> 00:12:14.609\nSo .66 Going to .70 and I know that might\nseem like they're on the same network but\n\n256\n00:12:14.609 --> 00:12:16.910\nthese are actually slash 30s I believe.\n\n257\n00:12:16.910 --> 00:12:21.890\nSo really small networks and I'm having to\nbe routed by this layer 3 switch up here.\n\n258\n00:12:21.890 --> 00:12:26.490\nSo if I jump over to that 2921, let me get\n\n259\n00:12:26.490 --> 00:12:31.440\nback over to it and,\nshoot my sessions are timing out.\n\n260\n00:12:31.440 --> 00:12:34.120\nYou only get so long before it\nkicks you out for inactivity.\n\n261\n00:12:34.120 --> 00:12:36.910\nSo let me,\nlet me get back logged into that one.\n\n262\n00:12:36.910 --> 00:12:39.390\nWhoops, and if I put in the right\npassword, I'll get in faster, too.\n\n263\n00:12:39.390 --> 00:12:40.440\nThere we go.\n\n264\n00:12:40.440 --> 00:12:43.110\nAnd after all that,\nit's the wrong device anyway.\n\n265\n00:12:43.110 --> 00:12:45.790\nSo we'll get back logged in and\nonce we're in there,\n\n266\n00:12:45.790 --> 00:12:48.550\nI'll be able to traceroute and\nshow that path there.\n\n267\n00:12:48.550 --> 00:12:53.670\nSo I'm on a 2921 and my IP,\nif I do a show IP interface brief,\n\n268\n00:12:53.670 --> 00:12:58.780\nand I'll exclude all the assigned\ninterfaces, I'm 10.10.50.66.\n\n269\n00:12:58.780 --> 00:13:01.410\nAnd if I wanna ping 10.10.50.70, right,\n\n270\n00:13:01.410 --> 00:13:07.900\nwhich is that other device,\nthe 2951, I can ping it.\n\n271\n00:13:07.900 --> 00:13:12.745\nAnd if I do a trace route to\n10.10.50.70 I'll see where I\n\n272\n00:13:12.745 --> 00:13:14.873\nhad to pass through a router.\n\n273\n00:13:14.873 --> 00:13:18.470\nAnd that router was 10.10.50.65\nwhich is the layer 3 switch.\n\n274\n00:13:18.470 --> 00:13:21.230\nSo this router has to pass\nthrough the layer three switch\n\n275\n00:13:21.230 --> 00:13:24.220\nto then get to the router on\nthe other side and vice versa.\n\n276\n00:13:24.220 --> 00:13:27.800\nSo that layer three switch is in\nthe perfect place to apply an ACL.\n\n277\n00:13:27.800 --> 00:13:30.040\nNow I don't have any ACLs right now.\n\n278\n00:13:30.040 --> 00:13:33.600\nSo if I were to go into a ping like\nI just did, it's going to work.\n\n279\n00:13:33.600 --> 00:13:37.380\nIf I were to try and telnet, assuming\nit's configured, it would work, right?\n\n280\n00:13:37.380 --> 00:13:40.420\nSo as I punch that in,\nI can try and connect and\n\n281\n00:13:40.420 --> 00:13:42.170\nI should be able to connect to it.\n\n282\n00:13:42.170 --> 00:13:44.330\nDestination unreachable,\nthat's an interesting one.\n\n283\n00:13:44.330 --> 00:13:47.360\nLet me try SSH and see if that's enabled.\n\n284\n00:13:47.360 --> 00:13:50.510\nWe can always enable them if we need to.\n\n285\n00:13:50.510 --> 00:13:52.750\nAnd there we go, that one's enabled.\n\n286\n00:13:52.750 --> 00:13:55.860\nAnd so I can SSH over, and\nI can get connected, right?\n\n287\n00:13:55.860 --> 00:13:57.480\nSo I've got connectivity between the two.\n\n288\n00:13:58.620 --> 00:14:01.160\nWe usually don't enable telnet\nbecause it's not encrypted.\n\n289\n00:14:01.160 --> 00:14:03.070\nYou don't want that unencrypted\ndata moving across the network,\n\n290\n00:14:03.070 --> 00:14:05.670\nso I'm kinda fine with that.\n\n291\n00:14:05.670 --> 00:14:07.650\nAll right, so I've got good connectivity.\n\n292\n00:14:07.650 --> 00:14:11.588\nNow let's say that I wanted to make\nsure that telnet wasn't enabled.\n\n293\n00:14:11.588 --> 00:14:14.510\nI don't wanna allow telnet\ntraffic on my network so\n\n294\n00:14:14.510 --> 00:14:18.070\nI'm gonna create an ACL to\nblock telnet traffic, right?\n\n295\n00:14:18.070 --> 00:14:20.210\nSo I wanna make sure that\ndoesn't get across the network.\n\n296\n00:14:20.210 --> 00:14:23.050\nBut when I do it,\nmaybe my network's really complex.\n\n297\n00:14:23.050 --> 00:14:26.130\nMaybe I've got 20 hops\nthat I go through and\n\n298\n00:14:26.130 --> 00:14:30.340\nwhen I deploy this ACL it might\nbreak one or more things.\n\n299\n00:14:30.340 --> 00:14:34.000\nWell, what you can do is in the APIC-EM\nyou can create these little monitors.\n\n300\n00:14:34.000 --> 00:14:36.680\nThey're tests that are testing your\nnetwork to make sure the certain\n\n301\n00:14:36.680 --> 00:14:37.500\ncommunications work.\n\n302\n00:14:37.500 --> 00:14:38.920\nAnd when you put the ACL in,\n\n303\n00:14:38.920 --> 00:14:43.180\nyou can go check these tests\nto see if you broke anything.\n\n304\n00:14:43.180 --> 00:14:45.000\nIt's a great way to spot\nwhether you broke anything,\n\n305\n00:14:45.000 --> 00:14:47.980\ninstead of having to go to 20\ndifferent hops and check traffic,\n\n306\n00:14:47.980 --> 00:14:51.780\nit can all be checked automatically for\nme right through the APIC-EM.\n\n307\n00:14:51.780 --> 00:14:55.310\nAll right, let me jump over and\nturn on telnet on that other router.\n\n308\n00:14:55.310 --> 00:15:00.070\nSo I'll jump over to this one and\nmore than likely what we've got\n\n309\n00:15:00.070 --> 00:15:03.830\nis a transport input command\nthat is turning it off.\n\n310\n00:15:03.830 --> 00:15:08.540\nSo well actually, transport input off,\ntelnet should be working on this device.\n\n311\n00:15:08.540 --> 00:15:13.900\nBut I do have an access class, it is\na standard ACL so that's not blocking us.\n\n312\n00:15:13.900 --> 00:15:15.330\nSo we should be able to Telnet into that.\n\n313\n00:15:16.440 --> 00:15:20.000\nAll right, well, we'll test with ping and\nSSH and kind of filter from there.\n\n314\n00:15:20.000 --> 00:15:22.495\nAll right, so\nwhat we can do is back in the APIC-EM,\n\n315\n00:15:22.495 --> 00:15:24.580\nnow that the discovery has finished,\nright?\n\n316\n00:15:24.580 --> 00:15:26.430\nSo my discovery's gone inactive.\n\n317\n00:15:26.430 --> 00:15:30.860\nIf I go over here to my device inventory,\nI should see those devices.\n\n318\n00:15:30.860 --> 00:15:33.787\nThey should have been discovered and\nthey'll turn up right in here.\n\n319\n00:15:33.787 --> 00:15:38.597\nSo I'm just gonna take a quick look and\nsure enough I see my 2951, the 2921.\n\n320\n00:15:38.597 --> 00:15:43.207\nI've actually got another 2951 and\nthen a 3650.\n\n321\n00:15:43.207 --> 00:15:46.213\nSo couple of different devices all kinda\nfloating out there in the network, right?\n\n322\n00:15:46.213 --> 00:15:50.080\nAnd they're all reachable, they're\nonline and I'm able to talk to them.\n\n323\n00:15:51.270 --> 00:15:53.990\nSo what I'm gonna do\nnow is on the left side\n\n324\n00:15:53.990 --> 00:15:56.630\ndown here I've got what's\ncalled a path trace.\n\n325\n00:15:56.630 --> 00:16:00.631\nAnd the path trace is where we can\ndefine applications on our network.\n\n326\n00:16:00.631 --> 00:16:04.313\nI can say, hey I've got this program and\nit comes from this IP,\n\n327\n00:16:04.313 --> 00:16:08.015\nand it goes to this other IP,\nand here's the protocol it uses.\n\n328\n00:16:08.015 --> 00:16:11.891\nCan you test it and\nmake sure it's functioning, right?\n\n329\n00:16:11.891 --> 00:16:16.960\nSo if I come in here and start a new path\ntrace, it's gonna ask me for my source.\n\n330\n00:16:16.960 --> 00:16:21.120\nAnd when I click on it, it's gonna show\nme all the stuff that was discovered.\n\n331\n00:16:21.120 --> 00:16:25.540\nAnd I'm gonna be coming from the 2921,\n\n332\n00:16:25.540 --> 00:16:30.780\nfrom this guy right here,\nand the 2921 is 10.10.50.66.\n\n333\n00:16:30.780 --> 00:16:33.690\nSo in here, if I look,\nI've got 10.10.50.66.\n\n334\n00:16:33.690 --> 00:16:37.900\nNow a lot of your routers might\nhave more than one IP address.\n\n335\n00:16:37.900 --> 00:16:40.050\nAnd so when I choose that device,\n\n336\n00:16:40.050 --> 00:16:43.390\nit's then gonna show me all of\nthe IP addresses on that one device.\n\n337\n00:16:43.390 --> 00:16:45.455\nAnd that's important too,\nbecause when you're testing for\n\n338\n00:16:45.455 --> 00:16:49.570\nACL's the interface you test\nfrom makes a difference, right?\n\n339\n00:16:49.570 --> 00:16:54.057\nBecause if I test from this interface down\nhere, my source IP will be 10.2.2.3, and\n\n340\n00:16:54.057 --> 00:16:59.300\nhere my source IP will be 10.10.50.66,\nand that's gonna affect my ACL's.\n\n341\n00:16:59.300 --> 00:17:00.794\nSo I'm gonna go ahead and choose that IP.\n\n342\n00:17:00.794 --> 00:17:06.743\nAnd my destination is the other switch,\nor the other router, 10.10.50.70.\n\n343\n00:17:06.743 --> 00:17:10.500\nSo I'm gonna choose that, and\nchoose it's IP, all right?\n\n344\n00:17:10.500 --> 00:17:14.530\nNow, if I just operate here, all it's\nreally doing is a ping and that's it.\n\n345\n00:17:14.530 --> 00:17:18.220\nBut I'm gonna hit more options and\nI can specify a source port and\n\n346\n00:17:18.220 --> 00:17:20.600\na destination port, and a protocol.\n\n347\n00:17:20.600 --> 00:17:23.550\nHere is where I can actually\ndefine what I'm doing.\n\n348\n00:17:23.550 --> 00:17:26.540\nSo maybe it's web traffic\nthat I'm monitoring.\n\n349\n00:17:26.540 --> 00:17:27.470\nMaybe it's SSH, right?\n\n350\n00:17:27.470 --> 00:17:31.219\nIf it's SSH, I'm gonna have\nsome port higher than 49,000,\n\n351\n00:17:31.219 --> 00:17:34.900\nI'll just put 50,000,\nright, for my Source Port.\n\n352\n00:17:34.900 --> 00:17:36.750\nFor my Destination Port,\nit's gonna be Port 22.\n\n353\n00:17:36.750 --> 00:17:39.160\nSo TCP with a destination of Port 22.\n\n354\n00:17:39.160 --> 00:17:43.620\nAnd then down here,\nI'm gonna tell it to do an ACL Trace.\n\n355\n00:17:43.620 --> 00:17:47.470\nI wanna do, not just a test to see if it\nworks, which is what it does by default.\n\n356\n00:17:47.470 --> 00:17:50.630\nBut also, show me where the ACL's apply.\n\n357\n00:17:50.630 --> 00:17:53.490\nAnd that's really important, cuz if\nI get blocked anywhere along the way,\n\n358\n00:17:53.490 --> 00:17:55.190\nit's gonna show me where I get blocked,\nand\n\n359\n00:17:55.190 --> 00:17:57.970\nI'll know exactly why that\ntraffic got blocked, all right?\n\n360\n00:17:57.970 --> 00:18:01.250\nSo we can punch that in,\nget it kinda set the way we want.\n\n361\n00:18:01.250 --> 00:18:03.240\nI'm gonna set it for a periodic refresh.\n\n362\n00:18:03.240 --> 00:18:05.650\nEvery 30 seconds it's\ngonna check this traffic.\n\n363\n00:18:05.650 --> 00:18:08.320\nYou don't have to do that, you could turn\nthat off, and now it's a manual thing.\n\n364\n00:18:08.320 --> 00:18:12.460\nAnd so now anytime I make a change to\nan ACL, I can go and run all these tests.\n\n365\n00:18:12.460 --> 00:18:14.820\nBut the reality is you're\ngonna build a lot of tests, so\n\n366\n00:18:14.820 --> 00:18:17.330\nit's nice to just tell it to\nperiodically refresh on it's own.\n\n367\n00:18:17.330 --> 00:18:21.200\nAnd that way I might have 50 different\ntests, and when I make a change I just go\n\n368\n00:18:21.200 --> 00:18:24.470\nand look, and within 30 seconds\nwe'll know if everything works.\n\n369\n00:18:24.470 --> 00:18:28.430\nSo I'm gonna start this trace, and\nthat one's gonna be tracing SSH,\n\n370\n00:18:28.430 --> 00:18:31.360\nit'll take just a second and\nthen it'll appear right here.\n\n371\n00:18:31.360 --> 00:18:33.530\nI'm gonna create another trace, and\n\n372\n00:18:33.530 --> 00:18:38.440\nmy other trace is going to be for\nwe'll do Telnet, or\n\n373\n00:18:38.440 --> 00:18:42.500\nmaybe HTTP we can do any, a number of\ndifferent protocols, but I'll do Telnet.\n\n374\n00:18:42.500 --> 00:18:43.759\nSo I'm gonna start a new path trace.\n\n375\n00:18:44.800 --> 00:18:49.759\nAnd I'm gonna do the same IP as\nI'm testing from 10.10.50.66,\n\n376\n00:18:49.759 --> 00:18:52.168\ngoing to 10.10.50.70.\n\n377\n00:18:52.168 --> 00:18:57.200\nAnd I'll do a source port of whatever,\n50 001 is fine.\n\n378\n00:18:57.200 --> 00:19:00.450\nAnd I'm doing Telnet, which is port 23.\n\n379\n00:19:00.450 --> 00:19:03.210\nAnd so TCP port 23.\n\n380\n00:19:03.210 --> 00:19:06.066\nACL Trace, Periodic Refresh\nkind of the same as before.\n\n381\n00:19:06.066 --> 00:19:08.610\nAnd I'm gonna go and\nstart that trace, all right.\n\n382\n00:19:08.610 --> 00:19:11.890\nNow in the background what it is\ndoing is creating these traces and\n\n383\n00:19:11.890 --> 00:19:15.040\nevery 30 seconds it's checking my\nequipment to make sure it communicates.\n\n384\n00:19:15.040 --> 00:19:19.780\nAnd when it does, over here,\nit's giving me the ACL Trace.\n\n385\n00:19:19.780 --> 00:19:24.030\nIt's showing me hopping across\nthe way to get to where I'm going.\n\n386\n00:19:24.030 --> 00:19:27.780\nThe one I'm looking at right now, if you\nlook up top, ACL's destination port 23.\n\n387\n00:19:27.780 --> 00:19:29.400\nAnd see how I'm getting blocked.\n\n388\n00:19:29.400 --> 00:19:32.840\nNow a moment ago I got blocked with\nTelnet, and I didn't know why, right.\n\n389\n00:19:32.840 --> 00:19:34.250\nAnd, we can go and look.\n\n390\n00:19:34.250 --> 00:19:37.360\nRemember I saw that there was\nan access class on one, but\n\n391\n00:19:37.360 --> 00:19:39.810\nI didn't really delve\ninto that very deeply.\n\n392\n00:19:39.810 --> 00:19:42.000\nSo, I can see here that\nI am getting blocked.\n\n393\n00:19:42.000 --> 00:19:45.260\nAnd more importantly,\nif I look down here I can find out why.\n\n394\n00:19:45.260 --> 00:19:47.630\nI can't get in because on GI 0/0,\n\n395\n00:19:47.630 --> 00:19:52.880\non this router, there's an access\ncontrol list that's blocking me.\n\n396\n00:19:52.880 --> 00:19:55.790\nAnd if I expand that out,\nI can find out why.\n\n397\n00:19:55.790 --> 00:19:59.280\nRight here, deny tcp any eq telnet.\n\n398\n00:19:59.280 --> 00:20:02.770\nThere's been over 6,000 matches,\nwhere it's been denied.\n\n399\n00:20:02.770 --> 00:20:04.340\nSo, right here.\n\n400\n00:20:04.340 --> 00:20:07.060\nI didn't even necessarily know,\nthat there was an ACL on the other side.\n\n401\n00:20:07.060 --> 00:20:09.360\nBut now I know, and\nI know what interface it's on, and\n\n402\n00:20:09.360 --> 00:20:13.150\nI know exactly which access control\nentry is blocking me, it's line ten.\n\n403\n00:20:13.150 --> 00:20:15.570\nI need to go and take a look at that ACL.\n\n404\n00:20:15.570 --> 00:20:18.260\nThis is really important,\nbecause if I had 20 hops, and\n\n405\n00:20:18.260 --> 00:20:20.540\nI'm getting blocked,\nwhere am I getting blocked?\n\n406\n00:20:20.540 --> 00:20:21.530\nThere's 20 hops.\n\n407\n00:20:21.530 --> 00:20:25.900\nI have to go to every one of those routers\nto figure out what went wrong, and\n\n408\n00:20:25.900 --> 00:20:27.670\nthen go in and fix it.\n\n409\n00:20:27.670 --> 00:20:30.480\nAll right, so\nnow I know exactly where the problem is.\n\n410\n00:20:30.480 --> 00:20:35.830\nThe problem is on that 2951,\nand if I look at SSAH, right?\n\n411\n00:20:35.830 --> 00:20:40.010\nSo I'm gonna click on this one and\nyou can't name the test.\n\n412\n00:20:40.010 --> 00:20:41.030\nI wish they would add that feature.\n\n413\n00:20:41.030 --> 00:20:43.420\nSo you've always gotta pay attention\nup here to what your ports are and\n\n414\n00:20:43.420 --> 00:20:45.410\nsee how my destination port is 22.\n\n415\n00:20:45.410 --> 00:20:48.530\nAnd I see,\nI am able to make it through on SSH.\n\n416\n00:20:48.530 --> 00:20:51.180\nAnd when I look down here I can\nsee that I am passing through and\n\n417\n00:20:51.180 --> 00:20:53.500\nthat there is an access control list, and\n\n418\n00:20:53.500 --> 00:20:58.700\nwhen I look at it I'm hitting a permit\nIP any, any that's allowing me through.\n\n419\n00:20:59.820 --> 00:21:05.340\nAnd it's an any, any so the port number\ndoesn't really matter and that's line 20.\n\n420\n00:21:05.340 --> 00:21:07.400\nLine ten of that ACL was\nblocking me earlier.\n\n421\n00:21:07.400 --> 00:21:09.370\nIt's on the same interface though.\n\n422\n00:21:09.370 --> 00:21:12.870\nSo right now that saves me a lot of time.\n\n423\n00:21:12.870 --> 00:21:16.450\nNow, when I get blocked I can\nfind out exactly where it is.\n\n424\n00:21:16.450 --> 00:21:20.720\nAnd if I make a change to the network,\nit'll detect that and learn it, and\n\n425\n00:21:20.720 --> 00:21:22.170\nupdate the system to reflect that.\n\n426\n00:21:22.170 --> 00:21:24.440\nSo let's see how that works out, right?\n\n427\n00:21:24.440 --> 00:21:27.250\nI'm gonna jump over to that 2951.\n\n428\n00:21:27.250 --> 00:21:29.595\nSo let me get over to that one.\n\n429\n00:21:29.595 --> 00:21:31.745\nAnd, just passed it there, all rigt.\n\n430\n00:21:31.745 --> 00:21:36.946\nSo on the 2951, thanks to the apic,\nI know that on interface gi0/0,\n\n431\n00:21:36.946 --> 00:21:41.860\nit's got an access control\nlist that's messing with me.\n\n432\n00:21:41.860 --> 00:21:45.964\nAnd if I do a show IP interface gi0/0,\n\n433\n00:21:45.964 --> 00:21:51.774\nI can look in here and\nfind the incoming and outgoing ACL.\n\n434\n00:21:51.774 --> 00:21:57.430\nAnd I've got an inbound ACL right here,\nwhich is apic-em, right.\n\n435\n00:21:57.430 --> 00:22:01.600\nSo that's what's blocking me, that ACL,\nso let's take a look at that.\n\n436\n00:22:01.600 --> 00:22:08.194\nIf I do a show access-list,\napic-em, it's denying Telnet,\n\n437\n00:22:08.194 --> 00:22:13.470\nand it's permitting everything else,\nright.\n\n438\n00:22:13.470 --> 00:22:18.611\nSo when I tried to Telnet in I got\nblocked, and my first thought was, I bet\n\n439\n00:22:18.611 --> 00:22:24.507\nthere's a transport input entry, right,\nbecause when you do a VTY configuration.\n\n440\n00:22:24.507 --> 00:22:27.520\nLet me just hunt down a VTY configuration,\nright here.\n\n441\n00:22:27.520 --> 00:22:31.930\nSo we do line vty 04, and\nyou start to specify it.\n\n442\n00:22:31.930 --> 00:22:33.490\nI normally disable Telnet by saying,\n\n443\n00:22:33.490 --> 00:22:37.100\ntransport input SSH,\nthat makes it where Telnet's disabled.\n\n444\n00:22:37.100 --> 00:22:38.010\nThat's how I normally block it,\n\n445\n00:22:38.010 --> 00:22:41.010\nso that was my first thought, but\nthat's not what it was at all was it.\n\n446\n00:22:41.010 --> 00:22:44.510\nIt turned out to be an ACL, and the ACL\nhappened to be right here on this device.\n\n447\n00:22:44.510 --> 00:22:49.190\nBut it's not this one, this is\naccess-class 23 in, 23 is a low number,\n\n448\n00:22:49.190 --> 00:22:51.560\nthat's a standard ACL.\n\n449\n00:22:51.560 --> 00:22:57.260\nStandard ACL's can filter based on\nsource IP not destination, right.\n\n450\n00:22:57.260 --> 00:22:58.800\nNot port number.\n\n451\n00:22:58.800 --> 00:23:02.443\nAnd we saw on apic what was blocking\nus was specifically a port so\n\n452\n00:23:02.443 --> 00:23:06.358\nif I look at access list 23,\nif I do it show access slash list 23,\n\n453\n00:23:06.358 --> 00:23:10.252\nit doesn't even exist, it's empty,\nand what does empty ACL do?\n\n454\n00:23:10.252 --> 00:23:11.794\nAbsolutely nothing, right?\n\n455\n00:23:11.794 --> 00:23:13.020\nSo that's not my problem.\n\n456\n00:23:13.020 --> 00:23:14.910\nThis is where troubleshooting\nit on my own would be difficult,\n\n457\n00:23:14.910 --> 00:23:16.100\ncuz there's a lot of red herrings here,\n\n458\n00:23:16.100 --> 00:23:17.880\nthings that are pointing\nme in the wrong direction.\n\n459\n00:23:17.880 --> 00:23:21.110\nAnd now I look at it and I'm like,\nit's not a transport input command,\n\n460\n00:23:21.110 --> 00:23:23.440\nit's not this access list and\n\n461\n00:23:23.440 --> 00:23:27.120\nit turns out to be an ACL on the interface\nthat I just happen to be passing through.\n\n462\n00:23:27.120 --> 00:23:30.790\nAnd because the apic-em knows my topology,\ncuz I did the discovery,\n\n463\n00:23:30.790 --> 00:23:31.990\nknows that I'm connected.\n\n464\n00:23:31.990 --> 00:23:35.280\nIt knows exactly where the problem is,\nand can report it back to me.\n\n465\n00:23:35.280 --> 00:23:38.760\nAnd so if I go in, and\n\n466\n00:23:39.910 --> 00:23:44.610\ntake a look the access list.\n\n467\n00:23:44.610 --> 00:23:46.490\nLet me just find it here.\n\n468\n00:23:46.490 --> 00:23:51.380\nHere's the access list that's affecting\nme, IP access-list extended apic-em.\n\n469\n00:23:51.380 --> 00:23:52.380\nMy first line,\n\n470\n00:23:52.380 --> 00:23:57.240\nline ten, is denying Telnet, my second\nline is permitting everything else.\n\n471\n00:23:57.240 --> 00:23:58.870\nSo, I wanna go in and change that.\n\n472\n00:23:58.870 --> 00:24:02.824\nI'm gonna modify that ACL, and\nbasically remove line ten, so\n\n473\n00:24:02.824 --> 00:24:05.147\nthat I can get telnet working again.\n\n474\n00:24:05.147 --> 00:24:07.913\nAnd then just for fun,\nI'll put in an entry to block SSH,\n\n475\n00:24:07.913 --> 00:24:11.546\nso that we can see the apic detect that\nand kind of flip the roles around, and\n\n476\n00:24:11.546 --> 00:24:13.060\nsee how that changes, right?\n\n477\n00:24:13.060 --> 00:24:17.078\nSo let me jump into my config,\nand I'm gonna get into that ACL.\n\n478\n00:24:17.078 --> 00:24:23.390\nAnd I'm gonna do a no 10\nto get rid of that line.\n\n479\n00:24:23.390 --> 00:24:31.480\nAnd then I will do a 10\npermit tcp any any eq telnet.\n\n480\n00:24:31.480 --> 00:24:33.430\nSo I'm allowing telnet in.\n\n481\n00:24:33.430 --> 00:24:37.890\nAnd then I'll do a 15 deny tcp\nany any eq ssh, all right.\n\n482\n00:24:40.740 --> 00:24:43.947\nSo I'm gonna block ssh and,\noo do I not have an alias for shh?\n\n483\n00:24:43.947 --> 00:24:45.540\nI don't.\n\n484\n00:24:45.540 --> 00:24:47.680\nI wonder what the heck iOS this is.\n\n485\n00:24:47.680 --> 00:24:50.320\nSo [LAUGH],\nI mentioned that in the ACL episodes.\n\n486\n00:24:50.320 --> 00:24:53.360\nDon't count on the name shortcuts being\nthere cuz you'll bump into stuff like I'm\n\n487\n00:24:53.360 --> 00:24:54.500\nbumping into here.\n\n488\n00:24:54.500 --> 00:24:57.350\nIf you have the port numbers memorized\nthough, it's no big deal at all, is it?\n\n489\n00:24:57.350 --> 00:25:00.000\nSo, port 22 is what I wanna block, right?\n\n490\n00:25:00.000 --> 00:25:04.100\nAnd, I'm having to do line numbers,\nbecause line 20 is a permit any any.\n\n491\n00:25:04.100 --> 00:25:06.170\nRight, so\nI need these all to be before line 20,\n\n492\n00:25:06.170 --> 00:25:08.680\nthat's why I'm doing line\nnumbers at the beginning.\n\n493\n00:25:08.680 --> 00:25:13.290\nSo now if I take a look at that ACL,\nwhat just happened?\n\n494\n00:25:14.480 --> 00:25:15.820\nI was ssh'd in.\n\n495\n00:25:15.820 --> 00:25:16.960\nRight, cuz I'm a good admin.\n\n496\n00:25:16.960 --> 00:25:18.700\nI like to use encrypted connections.\n\n497\n00:25:18.700 --> 00:25:19.909\nI just blocked ssh.\n\n498\n00:25:19.909 --> 00:25:21.420\nI'm in trouble now.\n\n499\n00:25:21.420 --> 00:25:22.770\nI just locked myself out of this device.\n\n500\n00:25:22.770 --> 00:25:23.694\nThat was a bad change.\n\n501\n00:25:23.694 --> 00:25:25.830\nI probably should've thought\nthat through a little more.\n\n502\n00:25:25.830 --> 00:25:27.420\nBut I'm okay, right?\n\n503\n00:25:27.420 --> 00:25:30.800\nBecause, the APIC is gonna detect that and\nit'll show me.\n\n504\n00:25:30.800 --> 00:25:32.100\nIf I didn't notice I got locked out.\n\n505\n00:25:32.100 --> 00:25:34.560\nI was like, I guess I just dropped\nconnection and I walk off,\n\n506\n00:25:34.560 --> 00:25:38.050\nI could jump back to the APIC and it's\ngonna refresh the test here in a moment.\n\n507\n00:25:38.050 --> 00:25:41.910\nAnd when it refreshes the test,\nwe're gonna see that that gets blocked.\n\n508\n00:25:41.910 --> 00:25:44.550\nAnd I'll know,\nman I actually messed something up.\n\n509\n00:25:44.550 --> 00:25:48.050\nI need to go and undo that change, I need\nto put it back to the way it was, right?\n\n510\n00:25:48.050 --> 00:25:49.870\nOr maybe that's what I wanted.\n\n511\n00:25:49.870 --> 00:25:52.592\nNow fortunately I've got Telnet\nas back up here too but.\n\n512\n00:25:52.592 --> 00:25:59.124\nSo back in here when I look at APIC\nscreen, here's my test that I made.\n\n513\n00:25:59.124 --> 00:26:03.198\nAnd you can see this is testing for 22 and\nit still shows me as being successful.\n\n514\n00:26:03.198 --> 00:26:05.580\nNow I set it's a refresh every 30 seconds,\nbut\n\n515\n00:26:05.580 --> 00:26:07.915\nif you look over here last\nupdated a minute ago.\n\n516\n00:26:07.915 --> 00:26:09.460\nSo it still hasn't updated.\n\n517\n00:26:09.460 --> 00:26:12.870\nI have noticed that it can be\na little bit slow to update.\n\n518\n00:26:12.870 --> 00:26:15.270\nSo you might have to wait a moment for\nthis to take effect and\n\n519\n00:26:15.270 --> 00:26:16.940\nactually reflect the data you want.\n\n520\n00:26:16.940 --> 00:26:21.600\nI believe that's because Cisco has\ntheir lab resources kind of tied up\n\n521\n00:26:21.600 --> 00:26:24.880\nto be as tight as possible,\nbecause it is available for free.\n\n522\n00:26:24.880 --> 00:26:27.680\nWhen you do this in an enterprise\nenvironment, it's usually very, very fast.\n\n523\n00:26:27.680 --> 00:26:30.970\nBut within a short amount of time,\nthis one should repopulate and\n\n524\n00:26:30.970 --> 00:26:31.900\nwe'll be in business.\n\n525\n00:26:31.900 --> 00:26:33.640\nBut to kinda speed things up a little bit,\n\n526\n00:26:33.640 --> 00:26:35.610\nwhat I'll do is if I just\ndelete that test out.\n\n527\n00:26:36.980 --> 00:26:38.000\nWe can delete it.\n\n528\n00:26:38.000 --> 00:26:39.450\nAnd then just re-create it.\n\n529\n00:26:39.450 --> 00:26:41.610\nAnd that'll make it do\nthe test again right now.\n\n530\n00:26:41.610 --> 00:26:45.516\nSo if I come in and\nsay that I'm coming from 10.10.50.66, and\n\n531\n00:26:45.516 --> 00:26:47.723\nI'm going to 10.10.50.70.\n\n532\n00:26:47.723 --> 00:26:49.863\nI'll set up source ports.\n\n533\n00:26:49.863 --> 00:26:51.569\nI'm going on port 22.\n\n534\n00:26:51.569 --> 00:26:57.020\nIt's TCP, and I'll tell it to do an ACL\ntrace and I'll start that one up.\n\n535\n00:26:57.020 --> 00:26:59.572\nThen it's gonna run that test again,\nand it's gonna run it now.\n\n536\n00:26:59.572 --> 00:27:00.679\nSo, it's just kinda forcing it.\n\n537\n00:27:00.679 --> 00:27:02.180\nYou shouldn't have to do that, right?\n\n538\n00:27:02.180 --> 00:27:04.020\nBut, it's gonna run that test.\n\n539\n00:27:04.020 --> 00:27:06.370\nAnd it should find out what's going on.\n\n540\n00:27:06.370 --> 00:27:08.040\nNow see how mine is still passing?\n\n541\n00:27:08.040 --> 00:27:10.340\nThat means that my database\nhasn't updated yet.\n\n542\n00:27:10.340 --> 00:27:13.782\nRemember that the APIC, it's not\nactually running the test on the router.\n\n543\n00:27:13.782 --> 00:27:16.570\nIt's not connecting to the router and\ndoing a ssh connection.\n\n544\n00:27:16.570 --> 00:27:19.960\nWhat it's doing is it's loaded the\nconfigure that router into it's database.\n\n545\n00:27:19.960 --> 00:27:24.110\nAnd it's running it against\na simulated version of that hardware.\n\n546\n00:27:24.110 --> 00:27:27.230\nRight, that's the whole part of the\nAPIC Is that it's really all simulated.\n\n547\n00:27:27.230 --> 00:27:29.000\nSo it's running it right now, but\n\n548\n00:27:29.000 --> 00:27:30.850\nit's running it on a vision\nthat's a little bit old.\n\n549\n00:27:30.850 --> 00:27:33.270\nSo I'm gonna need to rerun discovery\nto make sure that it gets that\n\n550\n00:27:33.270 --> 00:27:34.820\nnewest database.\n\n551\n00:27:34.820 --> 00:27:38.560\nAnd so if I jump back to my discovery,\nmy discovery is idle right now.\n\n552\n00:27:38.560 --> 00:27:40.460\nSo here's my standard\ndiscovery that's inactive,\n\n553\n00:27:40.460 --> 00:27:42.940\nand I'm just gonna start it again so\nit'll go out and harvest it.\n\n554\n00:27:42.940 --> 00:27:45.620\nNow, again,\nin real Lifeline it does this on its own.\n\n555\n00:27:45.620 --> 00:27:48.394\nIt goes out and\nharvests that information and\n\n556\n00:27:48.394 --> 00:27:51.975\ngets it, but we'll kind of\nforce it along here in the lab.\n\n557\n00:27:51.975 --> 00:27:55.372\nAll right, so I'm going to do my cool,\ncalm, confident host thing here and\n\n558\n00:27:55.372 --> 00:27:57.140\nwait just a second while it refreshes.\n\n559\n00:27:57.140 --> 00:27:59.443\nIt shouldn't take too long and\nactually it looks like it's done now.\n\n560\n00:27:59.443 --> 00:28:03.190\nSo, I see that my discovery's\ngone inactive so that's fine.\n\n561\n00:28:03.190 --> 00:28:05.190\nIt has harvested all the new data.\n\n562\n00:28:05.190 --> 00:28:07.710\nAnd if I jump back over to my path trace.\n\n563\n00:28:07.710 --> 00:28:09.920\nI can take a look at the path traces,\nthey should have updated by now.\n\n564\n00:28:09.920 --> 00:28:11.930\nThey're supposed to be\nupdating every 30 seconds.\n\n565\n00:28:11.930 --> 00:28:14.980\nSo, if I take a look at this first one,\nhere's the one for telnet right?\n\n566\n00:28:14.980 --> 00:28:18.660\nSo, I see port 23 and\nit was getting blocked before.\n\n567\n00:28:18.660 --> 00:28:20.270\nNow I got a nice green check mark.\n\n568\n00:28:20.270 --> 00:28:21.280\nIt's making it through, right?\n\n569\n00:28:21.280 --> 00:28:22.370\nSo, that's good.\n\n570\n00:28:22.370 --> 00:28:24.240\nAnd I can see that path right down here.\n\n571\n00:28:24.240 --> 00:28:28.350\nAnd I'm hitting an ACL and I'm hitting\na line that's allowing me through,\n\n572\n00:28:28.350 --> 00:28:30.950\nwhich is where I permitted telnet.\n\n573\n00:28:30.950 --> 00:28:33.208\nRight, I'm allowing that traffic through,\nand there we go.\n\n574\n00:28:33.208 --> 00:28:36.250\nAll right,\nMy other test was testing for ssh.\n\n575\n00:28:36.250 --> 00:28:40.740\nAnd if I take a look at it,\nit was passing before, now it's failing.\n\n576\n00:28:40.740 --> 00:28:44.080\nSo I can see I crossed that line and\nhit that block.\n\n577\n00:28:44.080 --> 00:28:46.005\nAnd right down here I can see exactly why.\n\n578\n00:28:46.005 --> 00:28:49.291\nOn Interface GI 00 there\nwas an access list, and\n\n579\n00:28:49.291 --> 00:28:54.625\nif I extend that out to look at it, I can\nsee that line 15 is denying me port 22.\n\n580\n00:28:54.625 --> 00:28:57.720\nThat's the line that I put in, remember\nI did a manual sequence number of 15.\n\n581\n00:28:57.720 --> 00:29:01.800\nSo I know exactly which router,\nexactly which interface,\n\n582\n00:29:01.800 --> 00:29:05.690\nexactly which ACL, and\nexactly which ACE is blocking me.\n\n583\n00:29:05.690 --> 00:29:07.250\nVery detailed information.\n\n584\n00:29:07.250 --> 00:29:12.160\nAnd that's why the APIC Is so useful for\ndiagnosing and troubleshooting ACLs.\n\n585\n00:29:12.160 --> 00:29:14.450\nCuz you get really exact information.\n\n586\n00:29:14.450 --> 00:29:16.610\nBut it's really only\nuseful in large networks.\n\n587\n00:29:16.610 --> 00:29:19.280\nIn a small network, there's only one or\ntwo routers you have to check out.\n\n588\n00:29:19.280 --> 00:29:20.230\nIt's not a big deal, right?\n\n589\n00:29:20.230 --> 00:29:22.717\nSo you don't need hardware\nlike what the APIC Is.\n\n590\n00:29:22.717 --> 00:29:27.220\nBut in a massive environment, a complex\nenvironment, it's a really valuable tool.\n\n591\n00:29:27.220 --> 00:29:30.190\nSo, Cisco added it into\nthe exam objectives.\n\n592\n00:29:30.190 --> 00:29:32.690\nA lot of people weren't too\nhappy with that, including me.\n\n593\n00:29:32.690 --> 00:29:36.430\nI mean, it's just not a terribly useful\nthing for somebody at a CCNA level.\n\n594\n00:29:36.430 --> 00:29:38.370\nBut, thanks to the devnet sandbox,\n\n595\n00:29:38.370 --> 00:29:40.880\nyou've got a chance to be able to jump in\nthere and use it, and try it yourself.\n\n596\n00:29:40.880 --> 00:29:44.950\nIt is a neat program, it does a heck of a\nlot more, than just troubleshooting ACLs.\n\n597\n00:29:44.950 --> 00:29:46.130\n&gt;&gt; Don, that's great information.\n\n598\n00:29:46.130 --> 00:29:47.650\nThank you for stopping by the studio here.\n\n599\n00:29:47.650 --> 00:29:50.840\nIt does look like we're coming up\non the end of another episode.\n\n600\n00:29:50.840 --> 00:29:53.364\nAnd I'm not even gonna fall on my\nface with that acronym anymore.\n\n601\n00:29:53.364 --> 00:29:54.930\n&gt;&gt; [LAUGH]\n&gt;&gt; We'll just call it APIC.\n\n602\n00:29:54.930 --> 00:30:00.330\nBut before we do sign off on this episode,\ndo you got any parting words for the APIC?\n\n603\n00:30:00.330 --> 00:30:02.460\n&gt;&gt; Just remember that it is a great tool.\n\n604\n00:30:02.460 --> 00:30:05.350\nWhat we looked at right there was the GUI.\n\n605\n00:30:05.350 --> 00:30:08.290\nYou might be asking yourself,\nDon when you changed that ACL why'd you\n\n606\n00:30:08.290 --> 00:30:10.650\ndo it from the CLI instead of\ndoing it through the APIC?\n\n607\n00:30:10.650 --> 00:30:15.469\nAnd the reason is, there's not actually a\nGUI on the APIC That I can use to do that.\n\n608\n00:30:15.469 --> 00:30:18.175\nYou're suppose to use third party\nsoftware, you're suppose to use the API,\n\n609\n00:30:18.175 --> 00:30:19.775\nand set programming commands.\n\n610\n00:30:19.775 --> 00:30:20.625\nAnd I'm not a developer.\n\n611\n00:30:20.625 --> 00:30:23.015\nSo it's a little bit outside\nof my pay grade on that one.\n\n612\n00:30:23.015 --> 00:30:25.405\nThat's why I use the CLI.\n\n613\n00:30:25.405 --> 00:30:27.925\nSo just be aware that from\na programmer's perspective,\n\n614\n00:30:27.925 --> 00:30:30.855\nthey have complete control of these\ndevices, can do a lot of crazy things.\n\n615\n00:30:30.855 --> 00:30:32.595\n&gt;&gt; Well, Don, thank you for\nthat information.\n\n616\n00:30:32.595 --> 00:30:33.665\nWe do appreciate it.\n\n617\n00:30:33.665 --> 00:30:35.505\nWe hope you guys have\nenjoyed this episode.\n\n618\n00:30:35.505 --> 00:30:37.625\nWe're gonna go ahead and\nsign out for ITProTV.\n\n619\n00:30:37.625 --> 00:30:39.495\nI've been your host, Wes Bryan.\n\n620\n00:30:39.495 --> 00:30:40.135\n&gt;&gt; And I'm Don Pezet.\n\n621\n00:30:40.135 --> 00:30:41.867\n&gt;&gt; And we'll see you next time.\n\n622\n00:30:41.867 --> 00:30:48.493\n[MUSIC]\n\n623\n00:30:48.493 --> 00:30:51.605\nThank you for watching ITProTV.\n\n",
          "vimeoId": "188994782"
        },
        {
          "description": "In this episode, Wes and Don take a look at the concepts surrounding Quality of Service commonly known as QoS. They explain the purpose for QoS as well as technologies such as marking, device trusts, marking, prioritization, shaping and traffic policing. They will also demonstrate setting up auto QoS.",
          "length": "2065",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/cisco-ccna200105/cisco-ccna200105-4-4-1-quality_of_service-110816-1.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/cisco-ccna200105/cisco-ccna200105-4-4-1-quality_of_service-110816-1-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/cisco-ccna200105/cisco-ccna200105-4-4-1-quality_of_service-110816-1-sm.jpg",
          "title": "Quality of Service",
          "transcript": "WEBVTT\n\n1\n00:00:00.000 --> 00:00:02.777\nWelcome to ITProTV,\nI'm your host Don Pezet.\n\n2\n00:00:02.777 --> 00:00:06.339\n&gt;&gt; [CROSSTALK].\n\n3\n00:00:06.339 --> 00:00:08.413\n[MUSIC]\n\n4\n00:00:08.413 --> 00:00:10.892\n&gt;&gt; You're watching ItPro TV.\n\n5\n00:00:12.340 --> 00:00:15.190\n&gt;&gt; Welcome back to another\nexciting episode here at ITProTV.\n\n6\n00:00:15.190 --> 00:00:16.500\nI'm your host, Wes Bryan, and\n\n7\n00:00:16.500 --> 00:00:19.580\nin today's episode we're continuing\nthrough our Cisco Routing and\n\n8\n00:00:19.580 --> 00:00:22.850\nSwitching Series, and we've been\ntalking about infrastructure services.\n\n9\n00:00:22.850 --> 00:00:24.700\nWell, we've got more\nof that same thing for\n\n10\n00:00:24.700 --> 00:00:28.960\nyou today, but to lend his expertise on\nthis is none other than Mr. Don Pezet.\n\n11\n00:00:28.960 --> 00:00:30.040\nDon, how are you doing, sir?\n\n12\n00:00:30.040 --> 00:00:32.170\n&gt;&gt; I'm doing great, Wes,\nready to dive right back in, and\n\n13\n00:00:32.170 --> 00:00:36.390\nin this episode we're gonna be tackling\nthe concept of quality of service, QoS.\n\n14\n00:00:36.390 --> 00:00:39.350\nAnd QoS, boy, it is a big topic.\n\n15\n00:00:39.350 --> 00:00:42.950\nIt's actually an umbrella term, it wraps\nup a number of different tools and\n\n16\n00:00:42.950 --> 00:00:46.730\ntechniques we can use to improve\nperformance on our network.\n\n17\n00:00:46.730 --> 00:00:49.350\nAs a result, it's a pretty complex topic,\nit's a pretty hard one,\n\n18\n00:00:49.350 --> 00:00:52.160\nand it's one that a lot of people\nget kind of worried about.\n\n19\n00:00:52.160 --> 00:00:54.010\nBut, at the CCNA level,\n\n20\n00:00:54.010 --> 00:00:57.390\nwhat Cisco wants is to make sure that we\njust have a conceptual understanding.\n\n21\n00:00:57.390 --> 00:01:00.980\nThe actual exam objective reads something\nlike describe quality of service\n\n22\n00:01:00.980 --> 00:01:04.510\ncomponents or something crazy like that,\nbut we're gonna go a little beyond that.\n\n23\n00:01:04.510 --> 00:01:06.420\nI hate just describing something and\nnot going further.\n\n24\n00:01:06.420 --> 00:01:09.550\nSo, we're gonna talk about it, we're gonna\ntalk about the different concepts, and\n\n25\n00:01:09.550 --> 00:01:12.680\nthen I'm gonna show you how to quickly and\neasily implement it on your network,\n\n26\n00:01:12.680 --> 00:01:14.430\nif you're just trying to get it in place.\n\n27\n00:01:14.430 --> 00:01:17.040\nThat's kind of what we're going to take\na look at here in this episode as we move\n\n28\n00:01:17.040 --> 00:01:18.220\nthrough quality of service.\n\n29\n00:01:18.220 --> 00:01:19.980\n&gt;&gt; So, Don,\nwhen we talk about quality of service,\n\n30\n00:01:19.980 --> 00:01:23.490\nfirst thing I would think is,\nwhat's the purpose of quality of service?\n\n31\n00:01:23.490 --> 00:01:27.200\n&gt;&gt; Well, first thing, it is important,\nit wasn't always important,\n\n32\n00:01:27.200 --> 00:01:29.410\nthere was a time when we didn't\nreally need quality of service.\n\n33\n00:01:29.410 --> 00:01:33.600\nIn fact, when TCP/IP was originally\ndeveloped back in the day,\n\n34\n00:01:33.600 --> 00:01:36.960\nit had no quality of service\nfunctionality built into it.\n\n35\n00:01:36.960 --> 00:01:40.970\nIt all had to get bolted on after the fact\nwhich is part of the reason why there's so\n\n36\n00:01:40.970 --> 00:01:44.860\nmany different techniques for\ndoing QoS because they're all just kluges,\n\n37\n00:01:44.860 --> 00:01:47.090\nstuck on top of the IP\nversion four protocol.\n\n38\n00:01:48.130 --> 00:01:51.210\nIPv6 handles it much, much better but\nit IPv4 it gets snapped on.\n\n39\n00:01:51.210 --> 00:01:55.590\nSo The idea behind Claudia's service,\nwhat happened was\n\n40\n00:01:55.590 --> 00:01:59.810\nin the early days of networking, all\nnetwork traffic was created equal, right?\n\n41\n00:01:59.810 --> 00:02:01.340\nIt was all treated equal.\n\n42\n00:02:01.340 --> 00:02:04.050\nEverybody got equal access to the network.\n\n43\n00:02:04.050 --> 00:02:06.940\nAnd in a small network that\nwasn't a big deal, but\n\n44\n00:02:06.940 --> 00:02:10.730\nthe larger your network got\nthe more of a problem that created.\n\n45\n00:02:10.730 --> 00:02:14.700\nSo for example Maybe I'm sitting here and\nI'm doing real work.\n\n46\n00:02:14.700 --> 00:02:16.950\nI'm editing some documents on the network.\n\n47\n00:02:16.950 --> 00:02:22.460\nMeanwhile, Wes is over there watching\nNetflix or YouTube or goofing off.\n\n48\n00:02:22.460 --> 00:02:27.080\nAnd we're both getting equal\naccess to the network.\n\n49\n00:02:27.080 --> 00:02:31.170\nSo now my work is slowing down\nbecause he's goofing off, right?\n\n50\n00:02:31.170 --> 00:02:33.430\nI'm not getting the full\naccess that I need.\n\n51\n00:02:33.430 --> 00:02:35.590\nAnd that's a problem with networks.\n\n52\n00:02:35.590 --> 00:02:37.480\nNetworks are not intelligent by default.\n\n53\n00:02:37.480 --> 00:02:40.740\nThey don't know whether your\ntraffic is useful or not.\n\n54\n00:02:40.740 --> 00:02:45.400\nNow what quality of service does is it\nlets us step in and say this type of\n\n55\n00:02:45.400 --> 00:02:50.680\ntraffic needs higher access to network\nresources than this other type of traffic.\n\n56\n00:02:50.680 --> 00:02:52.640\nWe define a quality, right?\n\n57\n00:02:52.640 --> 00:02:57.430\nAnd nowhere is this more evident than\nin voiceover IP With voice over IP,\n\n58\n00:02:57.430 --> 00:03:00.300\nyou need to be able to pick up a phone and\nmake a phone call.\n\n59\n00:03:00.300 --> 00:03:04.990\nAnd it needs to be at what our\ntraditional wire quality service is.\n\n60\n00:03:04.990 --> 00:03:06.860\nSo to do a nice,\n\n61\n00:03:06.860 --> 00:03:11.380\nclean voice call, you need about\n64 kilobytes of bandwidth traffic.\n\n62\n00:03:11.380 --> 00:03:13.430\nAnd that's not a lot.\n\n63\n00:03:13.430 --> 00:03:14.710\nMostly you're thinking, 64 k.\n\n64\n00:03:14.710 --> 00:03:15.530\nThat's nothing.\n\n65\n00:03:15.530 --> 00:03:16.050\nI'm on 100 megabyte.\n\n66\n00:03:16.050 --> 00:03:17.400\nNow you have tons more than that.\n\n67\n00:03:17.400 --> 00:03:18.090\nIn that.\n\n68\n00:03:18.090 --> 00:03:22.980\nBut the problem with the voice call\nis you don't just need 64K right now,\n\n69\n00:03:22.980 --> 00:03:27.170\nyou need 64K the entire time\nthe phone line is up and\n\n70\n00:03:27.170 --> 00:03:30.140\nif you're doing higher quality\ncalls like or whatever,\n\n71\n00:03:30.140 --> 00:03:34.300\nyou can end up with 128K even\nhigher numbers like that and\n\n72\n00:03:34.300 --> 00:03:38.480\nyou need consistently throughout\nthe length of the whole call.\n\n73\n00:03:38.480 --> 00:03:41.150\nWell Most traffic isn't like that.\n\n74\n00:03:41.150 --> 00:03:44.420\nMost traffic doesn't generate a consistent\nlevel of bandwidth consumption.\n\n75\n00:03:44.420 --> 00:03:48.220\nMost traffic is what we call bursty\ntraffic, it peaks and valleys.\n\n76\n00:03:48.220 --> 00:03:52.220\nSo, maybe when you first start to play\nthat YouTube video it offers a bunch.\n\n77\n00:03:52.220 --> 00:03:53.830\nAnd so there's a big peak of traffic and\n\n78\n00:03:53.830 --> 00:03:56.880\nthen it slows down while it\nques the rest while you watch.\n\n79\n00:03:56.880 --> 00:04:01.920\nSo, that's what you normally see And if\nsomebody's in the middle of a voice call\n\n80\n00:04:01.920 --> 00:04:05.040\nand I go to open up a network\ndocument I'm gonna burst.\n\n81\n00:04:05.040 --> 00:04:09.220\nAnd my burst might cause a little\nglitch in that voice call.\n\n82\n00:04:09.220 --> 00:04:11.246\nNot a big deal if there's just\n2 people on the network, but\n\n83\n00:04:11.246 --> 00:04:14.270\nif there's 2,000 people on the network\n\n84\n00:04:14.270 --> 00:04:18.310\nthere might be a couple of 100 people\ncausing little glitches in my phone call.\n\n85\n00:04:18.310 --> 00:04:20.990\nNow my 1 call has 100s of glitches in it.\n\n86\n00:04:20.990 --> 00:04:23.850\nAnd it sounds terrible and\nI get up for experience.\n\n87\n00:04:23.850 --> 00:04:26.650\nSo when we deploy technologies\nlike voice over IP,\n\n88\n00:04:26.650 --> 00:04:31.970\nwe normally side by side with that\ndeployment, implement quality of service\n\n89\n00:04:31.970 --> 00:04:35.250\nand with QS, we can say, we can tell\nour switches and routers and firewalls.\n\n90\n00:04:35.250 --> 00:04:39.150\nWe can say, when you see voice\nover IP traffic, make sure\n\n91\n00:04:39.150 --> 00:04:44.010\nit gets access to the resources it needs\nEverybody else can wait in line, right.\n\n92\n00:04:44.010 --> 00:04:45.540\nNow we're segregating traffic.\n\n93\n00:04:45.540 --> 00:04:46.530\nWell, we're not segregating,\n\n94\n00:04:46.530 --> 00:04:51.490\nwe're not separating, it's still together,\nbut we're not treating it equal anymore.\n\n95\n00:04:51.490 --> 00:04:54.820\nWe're treating some traffic as more\nimportant than other traffic so\n\n96\n00:04:54.820 --> 00:04:57.850\nthat we get that quality of service,\nwe get a good experience for\n\n97\n00:04:57.850 --> 00:05:00.860\nthe services that are important to us,\nright.\n\n98\n00:05:00.860 --> 00:05:05.770\nWhere it gets tricky is How do we tell\nthe network what is important to us?\n\n99\n00:05:05.770 --> 00:05:08.440\nOr how do we even figure\nout what's important to us?\n\n100\n00:05:08.440 --> 00:05:09.610\nRight, look here at our studio,\n\n101\n00:05:09.610 --> 00:05:12.856\nso here in the ITProTV Studios\nwhat is important to us here?\n\n102\n00:05:12.856 --> 00:05:15.540\nWell our video stream,\n\n103\n00:05:15.540 --> 00:05:18.760\nbut most of our video actually happens\nthrough a dedicated video network.\n\n104\n00:05:18.760 --> 00:05:21.210\nIt's not even on the same network\nas our regular computers.\n\n105\n00:05:21.210 --> 00:05:25.540\nSo we don't have to prioritize,\nit's all ready isolated but\n\n106\n00:05:25.540 --> 00:05:28.390\nwe've got Voice over IP phones that's\npretty important, we have video\n\n107\n00:05:28.390 --> 00:05:32.720\nconferencing unit it's also important,\nwe have music that's streamed and\n\n108\n00:05:32.720 --> 00:05:36.960\npiped into the speakers in the hallway\nthat's not so important right.\n\n109\n00:05:36.960 --> 00:05:39.700\nWe have OSs computers it's\nreally unimportant so\n\n110\n00:05:39.700 --> 00:05:43.590\nwe have different levels of things some\nthings are more important than others\n\n111\n00:05:43.590 --> 00:05:46.240\nWe have to get in and\nwe have to tell the system how to do it.\n\n112\n00:05:46.240 --> 00:05:46.920\nAll right?\n\n113\n00:05:46.920 --> 00:05:50.910\nAnd, that's the trickiest part about\nquality of service because, when\n\n114\n00:05:50.910 --> 00:05:55.110\nmost people think of QOS, me included,\nI think about bandwidth management.\n\n115\n00:05:55.110 --> 00:05:58.430\nAnd where do you need\nbandwidth management the most?\n\n116\n00:05:58.430 --> 00:06:00.560\nOn your WAN connections,\nyour wide-area network.\n\n117\n00:06:00.560 --> 00:06:05.630\nWe talked about this a little bit\nin the WAN connectivity episode.\n\n118\n00:06:05.630 --> 00:06:07.990\nIf you're using cloud services, right?\n\n119\n00:06:07.990 --> 00:06:12.840\nSo maybe you've moved your entire\ncompany over to Microsoft Office 365 or\n\n120\n00:06:12.840 --> 00:06:15.690\nGoogle Docs For Business or\nwhatever it's called this week.\n\n121\n00:06:15.690 --> 00:06:16.740\nThey keep changing the name.\n\n122\n00:06:16.740 --> 00:06:20.060\nSo maybe you've moved your system\ninto one of those cloud services.\n\n123\n00:06:20.060 --> 00:06:23.430\nWell now your Internet\naccess is really important.\n\n124\n00:06:23.430 --> 00:06:26.420\nAnd you need your connectivity\nto the Cloud service to be\n\n125\n00:06:26.420 --> 00:06:28.360\nprioritized over other traffic, right?\n\n126\n00:06:28.360 --> 00:06:30.710\nSo that people going to YouTube\naren't gonna mess that up.\n\n127\n00:06:30.710 --> 00:06:34.120\nAnd so most of us think of it in\nterms of the internet connection.\n\n128\n00:06:34.120 --> 00:06:36.930\nBut that's not really where\nquality of service is powerful.\n\n129\n00:06:36.930 --> 00:06:39.970\nWe'll see that it's actually\na little bit different.\n\n130\n00:06:39.970 --> 00:06:40.860\nIs this something, Don,\n\n131\n00:06:40.860 --> 00:06:44.020\nwhere you could use a piece of software\nthat could do a traffic analysis and\n\n132\n00:06:44.020 --> 00:06:46.740\nyou could look at trends or something\nto determine what's higher priority?\n\n133\n00:06:46.740 --> 00:06:49.120\nOr is that just simply knowing\nthe technology that's up and\n\n134\n00:06:49.120 --> 00:06:50.640\nwhat they're using?\n\n135\n00:06:50.640 --> 00:06:53.200\n&gt;&gt; The cheating answer would be both,\nright?\n\n136\n00:06:53.200 --> 00:06:55.710\nIf you don't have a lot of time and\nyou don't have a lot of money,\n\n137\n00:06:55.710 --> 00:06:59.722\nthen you just look at the software, the\nservices, that your employees use, right?\n\n138\n00:06:59.722 --> 00:07:02.410\nJust Go the employees, hey,\nwhat do you spend the most time in?\n\n139\n00:07:02.410 --> 00:07:04.310\nI spend the most time in email.\n\n140\n00:07:04.310 --> 00:07:07.970\nOkay, well, email's kind of\nan asynchronous thing anyway.\n\n141\n00:07:07.970 --> 00:07:10.020\nYou can email downloads in\nthe background and you deal with this.\n\n142\n00:07:10.020 --> 00:07:11.390\nThere's not really much\nwe need to optimize.\n\n143\n00:07:11.390 --> 00:07:12.950\nProbably don't need quality of service.\n\n144\n00:07:12.950 --> 00:07:17.010\nBut Voice over IP, video conferencing,\ntime sensitive things,\n\n145\n00:07:17.010 --> 00:07:19.370\nwhat we call real time traffic, right?\n\n146\n00:07:19.370 --> 00:07:23.580\nNot to be confused with RTP, the real time\nprotocol, RTP is used for a lot of video\n\n147\n00:07:23.580 --> 00:07:28.210\nstreaming Phones typically use SIP a\ndifferent protocol but they're real time.\n\n148\n00:07:28.210 --> 00:07:31.080\nIn other words we expect no delay.\n\n149\n00:07:31.080 --> 00:07:32.170\nUsually UDP traffic.\n\n150\n00:07:32.170 --> 00:07:34.230\nUDP traffic you expect no delay.\n\n151\n00:07:34.230 --> 00:07:37.922\nThat's stuff that's gonna be prioritized,\nother traffic you can have a little delay.\n\n152\n00:07:37.922 --> 00:07:41.673\nIf I click on a webpage and it takes\njust a second longer to load that doesnt\n\n153\n00:07:41.673 --> 00:07:45.672\ndestroy my experience, its a little\nannoying but it doesnt the experience so\n\n154\n00:07:45.672 --> 00:07:48.196\nthat would be a lower\npriority traffic right, so\n\n155\n00:07:48.196 --> 00:07:50.718\nyou just kind of have to\nunderstand the traffic,\n\n156\n00:07:50.718 --> 00:07:54.839\nif you dont understand the traffic if your\na consultant and this is the first time\n\n157\n00:07:54.839 --> 00:07:58.654\nyou walk into a business that's where\nyou fire up protocol analyzer, and\n\n158\n00:07:58.654 --> 00:08:02.527\nyou start looking at things but just\nbeware its not the volume of the traffic\n\n159\n00:08:02.527 --> 00:08:06.690\nthat matters It's the criticality,\nthe importance of that traffic.\n\n160\n00:08:06.690 --> 00:08:09.310\nSo, you normally have to talk\nto people to figure it out.\n\n161\n00:08:09.310 --> 00:08:12.585\nSoftware can't tell you how important\none person is over another,\n\n162\n00:08:12.585 --> 00:08:14.083\nsoftware doesn't know that.\n\n163\n00:08:14.083 --> 00:08:17.416\nSoftware doesn't know who the CEO is,\nit doesn't know who the mailroom clerk is.\n\n164\n00:08:17.416 --> 00:08:19.650\nSo that's where software\nbecomes a challenge.\n\n165\n00:08:19.650 --> 00:08:20.599\nYou really have to talk to people.\n\n166\n00:08:22.190 --> 00:08:25.440\nNow, I said that when we implement quality\nof service we think in terms of bandwidth\n\n167\n00:08:25.440 --> 00:08:27.740\nmanagement, we normally think\nabout it in terms of the WAN.\n\n168\n00:08:27.740 --> 00:08:31.367\nBut, that's not where most quality\nof service actually happens, right?\n\n169\n00:08:31.367 --> 00:08:34.025\nThat's where the actual\nimplementation is going to be.\n\n170\n00:08:34.025 --> 00:08:37.710\nBut quality of service actually\nstarts on our switches.\n\n171\n00:08:37.710 --> 00:08:39.973\nLet me bring up a diagram here.\n\n172\n00:08:39.973 --> 00:08:42.597\nCisco recommends when\nyou design a network,\n\n173\n00:08:42.597 --> 00:08:45.989\nthat your follow their three\nlevel design model, right?\n\n174\n00:08:45.989 --> 00:08:50.804\nSo we have these three layers for our\nequipment, core, distribution and access.\n\n175\n00:08:50.804 --> 00:08:52.227\nI know we've talked about\nthis in other shows,\n\n176\n00:08:52.227 --> 00:08:53.800\nwell let's just kinda rehash\nit real little quick.\n\n177\n00:08:53.800 --> 00:08:57.314\nAt the core, that's where we have,\ngenerally, our routers,\n\n178\n00:08:57.314 --> 00:08:58.690\nour edge connectivity.\n\n179\n00:08:58.690 --> 00:09:00.110\nThings like our WAN connectivity,\n\n180\n00:09:00.110 --> 00:09:03.190\nthe Internet or\nexternal connections to our partners.\n\n181\n00:09:03.190 --> 00:09:07.680\nThe core has one job and one job only,\nand that's to move data really fast,\n\n182\n00:09:07.680 --> 00:09:11.167\nit needs to get data from point\nA to point B as fast as it can,\n\n183\n00:09:11.167 --> 00:09:13.535\nthat's all your core should be doing.\n\n184\n00:09:13.535 --> 00:09:17.518\nA lot of people refer to this as the back\nbone, the back bone should not be terribly\n\n185\n00:09:17.518 --> 00:09:21.000\nintelligent, it should\njust be moving data fast.\n\n186\n00:09:21.000 --> 00:09:22.500\nThe distribution layer.\n\n187\n00:09:22.500 --> 00:09:25.022\nThe distribution layer\nis inside your network.\n\n188\n00:09:25.022 --> 00:09:27.680\nSo it's not necessarily connected\nto the WAN or anything.\n\n189\n00:09:27.680 --> 00:09:30.927\nIts internal equipment, but\nthis is where your intelligence is.\n\n190\n00:09:30.927 --> 00:09:33.790\nThis is where your routing should happen.\n\n191\n00:09:33.790 --> 00:09:37.170\nYour access control lists,\nyour filters, things of that nature.\n\n192\n00:09:37.170 --> 00:09:40.990\nThe intelligence of your network\nhappens at the distribution layer.\n\n193\n00:09:40.990 --> 00:09:43.490\nAt the core layer, were normally\ntalking about routers and firewalls.\n\n194\n00:09:43.490 --> 00:09:48.460\nAt the distribution layer, these might\nbe firewalls and layer three switches.\n\n195\n00:09:48.460 --> 00:09:50.664\nLayer three switches,\nare more common in the distribution layer.\n\n196\n00:09:50.664 --> 00:09:53.570\nWe want our data to move fast,\nbut we also need intelligence.\n\n197\n00:09:53.570 --> 00:09:57.000\nThis is where we'll have HSRP and\nRedundancy Protocol's and\n\n198\n00:09:57.000 --> 00:10:01.460\nall the logic for our network,\nand then you get down to access.\n\n199\n00:10:01.460 --> 00:10:04.500\nThe access layer,\nis going to be made up of switches.\n\n200\n00:10:04.500 --> 00:10:06.500\nAnd wireless access points.\n\n201\n00:10:06.500 --> 00:10:09.270\nAnd they have one real job.\n\n202\n00:10:09.270 --> 00:10:12.570\nAnd that one real job is port density.\n\n203\n00:10:12.570 --> 00:10:14.893\nWe want people to be able\nto connect to our network.\n\n204\n00:10:14.893 --> 00:10:17.800\nIf they're physical switches,\nwe're turn off physical ports.\n\n205\n00:10:17.800 --> 00:10:21.070\nWe need as many physical ports as we can\nget, to support all the workstations and\n\n206\n00:10:21.070 --> 00:10:22.760\nlaptops and all that other stuff.\n\n207\n00:10:22.760 --> 00:10:24.880\nIf we're talking about\nwireless access points,\n\n208\n00:10:24.880 --> 00:10:26.610\nwe're talking about wireless clients,\nright?\n\n209\n00:10:26.610 --> 00:10:28.460\nAnd so\nnow we're talking about antennas, and\n\n210\n00:10:28.460 --> 00:10:31.130\nnumber of clients that can connect to each\naccess point before we have to add more.\n\n211\n00:10:32.140 --> 00:10:33.280\nThat's their primary focus.\n\n212\n00:10:34.360 --> 00:10:36.603\nSo, where does quality of\nservice fall into this model?\n\n213\n00:10:36.603 --> 00:10:41.364\nWell, we usually have a lot of bandwidth\nwhen it comes to distribution and access.\n\n214\n00:10:41.364 --> 00:10:42.838\nBandwidth is not normally a problem there.\n\n215\n00:10:42.838 --> 00:10:45.130\nWe've got gigabit or\nhigher networks these days.\n\n216\n00:10:45.130 --> 00:10:48.320\nThe Uplink between our access and\nour distribution switches,\n\n217\n00:10:48.320 --> 00:10:51.340\nare normally ten gig or\neven 40 gig connections.\n\n218\n00:10:51.340 --> 00:10:54.335\nYou might have some bandwidth\nconstraints there but most people don't.\n\n219\n00:10:54.335 --> 00:10:57.550\n.Where we have constraints\nare usually at the core,\n\n220\n00:10:57.550 --> 00:10:58.890\nwhen you connect to the internet.\n\n221\n00:10:58.890 --> 00:11:01.890\nWhen you have that MPOS line TU 1 or\nwhatever,\n\n222\n00:11:01.890 --> 00:11:05.540\nyou've only got 20 megs or\n100 megs of bandwidth.\n\n223\n00:11:05.540 --> 00:11:07.750\nVersus your gig network down here.\n\n224\n00:11:07.750 --> 00:11:10.900\nThat becomes a constraint, and\nthat's where we need quality and service.\n\n225\n00:11:10.900 --> 00:11:15.850\nThe problem is, we want the core\nto do things as fast as possible.\n\n226\n00:11:15.850 --> 00:11:19.350\nAnd how fast can it be if it's\nhaving to classify traffic?\n\n227\n00:11:19.350 --> 00:11:21.530\nWhat was router normally look at?\n\n228\n00:11:21.530 --> 00:11:22.890\nSource IP, destination IP.\n\n229\n00:11:22.890 --> 00:11:24.390\nIt doesn't even really\ncare about source IP,\n\n230\n00:11:24.390 --> 00:11:26.290\nit's really looking at\nthat destination IP.\n\n231\n00:11:26.290 --> 00:11:27.586\nWhere do I need to send this?\n\n232\n00:11:27.586 --> 00:11:30.990\nSo, a router's a layer three device.\n\n233\n00:11:30.990 --> 00:11:34.320\nIt receives a layer one signal,\nan electrical normally.\n\n234\n00:11:34.320 --> 00:11:37.680\nIt takes a look at layer two's source and\ndestination, MAC address and\n\n235\n00:11:37.680 --> 00:11:40.200\nultimately has to rewrite\nthe layer two header.\n\n236\n00:11:40.200 --> 00:11:42.850\nAnd then,\nthe layer three header of the packet,\n\n237\n00:11:42.850 --> 00:11:46.580\nit has to look at to figure out\nwhere the traffic is going to.\n\n238\n00:11:46.580 --> 00:11:47.130\nRight?\n\n239\n00:11:47.130 --> 00:11:49.000\nAnd then it sends it along based on that.\n\n240\n00:11:49.000 --> 00:11:53.410\nWell, if I'm trying to classify traffic\nand say, this is voice over IP traffic,\n\n241\n00:11:53.410 --> 00:11:56.370\nit's important or well that's web browser,\nthat's not important.\n\n242\n00:11:56.370 --> 00:11:59.870\nWhat do I have to look at there,\nlayer four, layer five?\n\n243\n00:11:59.870 --> 00:12:03.930\nWe've got to go higher up in the OSI\nmodel to figure out what that packet is\n\n244\n00:12:03.930 --> 00:12:04.900\ndoing, right?\n\n245\n00:12:04.900 --> 00:12:06.423\nWe have to look a little higher.\n\n246\n00:12:06.423 --> 00:12:09.115\nWe have to look at the segment,\nwe have to look at the session protocol.\n\n247\n00:12:09.115 --> 00:12:11.516\nThat means the core router's now,\n\n248\n00:12:11.516 --> 00:12:15.950\nhaving to do more than just move\ndata as fast as possible, right?\n\n249\n00:12:15.950 --> 00:12:19.244\nSo we don't want our core\ndevices classifying traffic.\n\n250\n00:12:19.244 --> 00:12:21.545\nWe might want our core\ndevices to act on it, but\n\n251\n00:12:21.545 --> 00:12:23.970\nwe don't want them to\nhave to classify traffic.\n\n252\n00:12:23.970 --> 00:12:25.022\nCuz that slows them down.\n\n253\n00:12:25.022 --> 00:12:26.970\nRemember, they're supposed to be fast.\n\n254\n00:12:26.970 --> 00:12:34.170\nSo, quality of service, really happens\nway down here, in our access switches.\n\n255\n00:12:34.170 --> 00:12:37.190\nOn the access switches,\nthis is where people plug in.\n\n256\n00:12:37.190 --> 00:12:39.630\nThey plug in their regular computers and\nthey get connectivity.\n\n257\n00:12:39.630 --> 00:12:41.600\nPort density is their primary focus.\n\n258\n00:12:41.600 --> 00:12:43.770\nSo, are those switches really busy?\n\n259\n00:12:43.770 --> 00:12:44.860\nNot normally.\n\n260\n00:12:44.860 --> 00:12:48.930\nNormally, their RAM utilization is super\nlow, their CPU utilization is super low.\n\n261\n00:12:48.930 --> 00:12:51.710\nThey're just tracking a MAC address table,\nand\n\n262\n00:12:51.710 --> 00:12:54.390\nmoving frames based on\ndestination MAC address.\n\n263\n00:12:54.390 --> 00:12:55.620\nThat's all they do.\n\n264\n00:12:55.620 --> 00:12:59.180\nSo, they really don't do\na whole heck of a lot.\n\n265\n00:12:59.180 --> 00:13:01.270\nSo, when we deploy quality of service,\n\n266\n00:13:01.270 --> 00:13:04.260\nwhat we do is we normally implement\nit right there in the access switch.\n\n267\n00:13:04.260 --> 00:13:07.220\nAnd we get into that switch and\nwe say okay, I need you to look for\n\n268\n00:13:07.220 --> 00:13:09.690\nthis traffic, look for\nvoice over IP traffic, and\n\n269\n00:13:09.690 --> 00:13:13.780\nlook for streaming video traffic,\nlook for web traffic.\n\n270\n00:13:13.780 --> 00:13:19.240\nAnd I need you to tag it,\ntag it to label what it is.\n\n271\n00:13:19.240 --> 00:13:24.110\nSo that we know what that traffic is,\nand when it crosses the network and\n\n272\n00:13:24.110 --> 00:13:25.680\nit gets all the way up to the core.\n\n273\n00:13:25.680 --> 00:13:31.440\nThe core can look at that packet and right\nthere in the TCP/IP header, it can see\n\n274\n00:13:31.440 --> 00:13:35.020\nwhat type of traffic it is without having\nto decode all the way into the packet,\n\n275\n00:13:35.020 --> 00:13:38.540\nwithout having to do any deep packet\nanalysis or anything crazy like that.\n\n276\n00:13:38.540 --> 00:13:42.090\nThere's just a tag on there that says,\nhey, this is really important stuff.\n\n277\n00:13:42.090 --> 00:13:43.256\nOr hey, this is not so important.\n\n278\n00:13:43.256 --> 00:13:45.830\nThe tag's already there, right?\n\n279\n00:13:45.830 --> 00:13:48.880\nAnd so quality of service really has\n\n280\n00:13:48.880 --> 00:13:51.340\nthree different components\nwe need to worry about.\n\n281\n00:13:51.340 --> 00:13:55.580\nThere's the tagging system, that happens\ndown here at the access layer, right?\n\n282\n00:13:55.580 --> 00:13:57.630\nWhich we normally call classification.\n\n283\n00:13:57.630 --> 00:14:00.030\nWe're classifying the traffic.\n\n284\n00:14:00.030 --> 00:14:02.639\nSo, classification happens\ndown here at access.\n\n285\n00:14:03.670 --> 00:14:08.750\nThen, we have the actual restrictions\nthat we put in place, the prioritization.\n\n286\n00:14:08.750 --> 00:14:12.290\nAnd that occurs typically at your core,\nright?\n\n287\n00:14:12.290 --> 00:14:18.250\nAnd then in between that,\nwe have what's called the trust system.\n\n288\n00:14:18.250 --> 00:14:24.240\nThe core has to trust the tags that are\ncoming from the Access switches, right?\n\n289\n00:14:24.240 --> 00:14:27.350\nBecause we don't want\nto just trust anybody.\n\n290\n00:14:27.350 --> 00:14:29.750\nIf that were the case,\nI'm a network admin, right,\n\n291\n00:14:29.750 --> 00:14:31.890\nI've worked with quality of service a lot.\n\n292\n00:14:31.890 --> 00:14:36.880\nI can just take my laptop, and\nI can set my laptop to tag\n\n293\n00:14:36.880 --> 00:14:40.580\nevery one of my frames is important,\nbefore setting in the network, right?\n\n294\n00:14:40.580 --> 00:14:43.161\nI just tag my own data, and\nnow when it goes on the network,\n\n295\n00:14:43.161 --> 00:14:46.132\nit flags it's important and\nit goes now we need to forward it fast.\n\n296\n00:14:46.132 --> 00:14:47.816\nJust cuz I felt like it, right?\n\n297\n00:14:47.816 --> 00:14:51.484\nWe don't want end users to be able to\nclassify their own data because they think\n\n298\n00:14:51.484 --> 00:14:53.327\ntheir traffic's important, right?\n\n299\n00:14:53.327 --> 00:14:57.740\nSo, we need it to be our own devices\nthat do it, and we need to trust those.\n\n300\n00:14:57.740 --> 00:15:00.530\nSo, that's kind of the third\npiece of the puzzle, right?\n\n301\n00:15:00.530 --> 00:15:07.420\nClassification, the actual prioritization\nand then the trust between the two, right?\n\n302\n00:15:07.420 --> 00:15:11.150\nNow, how we do those\nthings varies quite a bit?\n\n303\n00:15:11.150 --> 00:15:14.430\nAnd there's several different technologies\nwe're gonna talk about in here,\n\n304\n00:15:14.430 --> 00:15:16.630\nin a minute that really get into this.\n\n305\n00:15:16.630 --> 00:15:20.640\nBut, with classification, I guess I\nshould clarify that term a little bit.\n\n306\n00:15:20.640 --> 00:15:24.195\nClassifying the traffic, that just\nmeans sorting it into different piles.\n\n307\n00:15:24.195 --> 00:15:27.830\nHere's my high priority pile,\nhere's my low priority pile.\n\n308\n00:15:27.830 --> 00:15:30.034\nHere's my normal traffic pile, right?\n\n309\n00:15:30.034 --> 00:15:33.320\nOnce we've classified them,\nwe have to tag them.\n\n310\n00:15:33.320 --> 00:15:34.760\nAnd they don't call it a tag.\n\n311\n00:15:34.760 --> 00:15:36.020\nThey call it a mark.\n\n312\n00:15:36.020 --> 00:15:38.060\nWe're marking the traffic.\n\n313\n00:15:38.060 --> 00:15:41.580\nSo, you mark it, and there's several\ndifferent ways to mark them.\n\n314\n00:15:41.580 --> 00:15:46.090\nWay back in the beginning of the IPV 4\ndays, you had what was called a ToS, or\n\n315\n00:15:46.090 --> 00:15:47.660\na Type of Service.\n\n316\n00:15:47.660 --> 00:15:49.371\nAnd if you look at\nthe IPv4 specifications,\n\n317\n00:15:49.371 --> 00:15:52.488\nyou'll actually see there's a little\nheader value in there for type of service.\n\n318\n00:15:52.488 --> 00:15:55.648\nWell, it wasn't very robust, they hadn't\nreally thought it through cuz this was\n\n319\n00:15:55.648 --> 00:15:57.467\nback in the days when we\ndidn't really need it.\n\n320\n00:15:57.467 --> 00:16:00.289\nAnd so\nover time that's evolved quite a bit.\n\n321\n00:16:00.289 --> 00:16:05.052\nAnd so you hear things like TOS,\ntype of service, COS, class of service,\n\n322\n00:16:05.052 --> 00:16:10.240\nQOS, quality of service, they are all\nvariations of the same concept.\n\n323\n00:16:10.240 --> 00:16:14.693\nAt the end of the day though we're marking\nthat traffic and the most common way to\n\n324\n00:16:14.693 --> 00:16:19.110\nmark it, is what's called the DSCP or\na div serve code point, all right.\n\n325\n00:16:19.110 --> 00:16:21.675\nDiv serve code point,\nDSCP, it's a little value,\n\n326\n00:16:21.675 --> 00:16:24.784\nit's a two digit hexadecimal\nvalue that we assign to traffic.\n\n327\n00:16:24.784 --> 00:16:29.046\nAnd the way it works is, you kinda have\nthese canned numbers that you assignee,\n\n328\n00:16:29.046 --> 00:16:31.770\nthat you prioritize the traffic, right.\n\n329\n00:16:31.770 --> 00:16:34.472\nYou have EF, EF is high priority.\n\n330\n00:16:34.472 --> 00:16:37.460\nActually most people say it stands for\nExpress Forwarding.\n\n331\n00:16:37.460 --> 00:16:38.425\nTechnically it doesn't stand for anything.\n\n332\n00:16:38.425 --> 00:16:41.160\nIt's actually a decimal value but\nit's Express Forward, right.\n\n333\n00:16:41.160 --> 00:16:43.650\nEF, that's really important stuff.\n\n334\n00:16:43.650 --> 00:16:46.080\nAnd then after that you\nhave a series of numbers.\n\n335\n00:16:46.080 --> 00:16:50.935\nYou have One, one, one, two, one three,\none four which really like 11,\n\n336\n00:16:50.935 --> 00:16:55.441\n12, 13 and 14 but that's tier one traffic,\nreally important.\n\n337\n00:16:55.441 --> 00:17:00.232\nAnd then inside of tier one, you have\ntier one level one, tier one level two,\n\n338\n00:17:00.232 --> 00:17:05.614\ntier one level three, tier one level four\nwhich would be 11, 12, 13 and 14 and\n\n339\n00:17:05.614 --> 00:17:12.014\nthen you have 21, 22, 23, 24, 31,\n32, 33, 34, and 41, 42, 43, 44.\n\n340\n00:17:12.014 --> 00:17:16.641\nFour tiers, tier one through four, and\nthen each tier has four levels inside of\n\n341\n00:17:16.641 --> 00:17:19.562\nit and you can use those\nto classify your traffic.\n\n342\n00:17:19.562 --> 00:17:25.040\nSo you can say voice over IP traffic for\nme is tier one traffic.\n\n343\n00:17:25.040 --> 00:17:26.430\nTier one level one.\n\n344\n00:17:26.430 --> 00:17:29.250\nBut web traffic is tier\nthree level two and\n\n345\n00:17:29.250 --> 00:17:30.950\nyou define that based on your own needs.\n\n346\n00:17:30.950 --> 00:17:32.480\nNow you can prioritize based on it.\n\n347\n00:17:32.480 --> 00:17:36.250\n&gt;&gt; Don, is there enough different types of\ntraffic that you would need all of those\n\n348\n00:17:36.250 --> 00:17:37.000\nindividual marks?\n\n349\n00:17:37.000 --> 00:17:40.990\nCuz it does seem like there's a lot of\ndifferent classifications that you can do.\n\n350\n00:17:40.990 --> 00:17:44.678\n&gt;&gt; Yeah it depends on how you wanna do it,\nsee for me when I prioritize,\n\n351\n00:17:44.678 --> 00:17:49.040\nI usually on a smaller medium network,\nI don't even like to deal with marking.\n\n352\n00:17:49.040 --> 00:17:52.713\nI just do base on IP address like hey\nthis device is really important to me,\n\n353\n00:17:52.713 --> 00:17:56.411\nthis other device isn't and you\nprioritize based on IP, you can do that.\n\n354\n00:17:56.411 --> 00:17:57.715\nThat's a simple way.\n\n355\n00:17:57.715 --> 00:17:59.480\nIt doesn't scale very well though.\n\n356\n00:17:59.480 --> 00:18:02.290\nThe more devices you have, the more\ndifficult that becomes to manage, and\n\n357\n00:18:02.290 --> 00:18:04.960\nthat's where the classifications\nbecome important.\n\n358\n00:18:04.960 --> 00:18:07.670\nAnd usually most companies\nonly have three or\n\n359\n00:18:07.670 --> 00:18:10.960\nfour different types of\ntraffic they need to classify.\n\n360\n00:18:10.960 --> 00:18:14.060\nBut depending on your size you\nmight have needs for more so\n\n361\n00:18:14.060 --> 00:18:15.460\nyou've got a number of\ndifferent ways to do it.\n\n362\n00:18:15.460 --> 00:18:17.990\nYou just pick the one that's suitable for\nyour environment.\n\n363\n00:18:17.990 --> 00:18:19.680\n&gt;&gt; And so I was gonna say,\nso in smaller networks,\n\n364\n00:18:19.680 --> 00:18:21.938\nmaybe all of those different\nmarks might not be beneficial.\n\n365\n00:18:21.938 --> 00:18:24.978\nBut as your enterprise networks\nexpand out a little bit more,\n\n366\n00:18:24.978 --> 00:18:27.789\nyou can definitely see where\nyou'd probably use those.\n\n367\n00:18:27.789 --> 00:18:31.420\n&gt;&gt; Yeah, a lot of people\nonly use two classes, right?\n\n368\n00:18:31.420 --> 00:18:34.950\nThe first class would just be their\nvoice over IP traffic, right?\n\n369\n00:18:34.950 --> 00:18:36.840\nThat's what they want to be important.\n\n370\n00:18:36.840 --> 00:18:40.380\nAnd then everything else gets thrown\ninto what's called the Scavenger class.\n\n371\n00:18:40.380 --> 00:18:41.930\nScavenger class, that sounds bad, right?\n\n372\n00:18:41.930 --> 00:18:43.890\nBut it just means they'll\ntake whatever's left.\n\n373\n00:18:43.890 --> 00:18:46.050\nWhatever bandwidth is left,\nwe'll take it, that's great.\n\n374\n00:18:46.050 --> 00:18:48.356\nAnd that's all most companies need.\n\n375\n00:18:48.356 --> 00:18:52.970\nYou see that with video gamers,\nwhere they have their home network.\n\n376\n00:18:52.970 --> 00:18:54.268\nAnd they'll say hey,\n\n377\n00:18:54.268 --> 00:18:58.374\nmy video game computer, my XBox or\nwhatever, that's high priority.\n\n378\n00:18:58.374 --> 00:18:59.883\nAnd it shows where your priorities are.\n\n379\n00:18:59.883 --> 00:19:01.411\nBut everything else doesn't matter.\n\n380\n00:19:01.411 --> 00:19:03.100\nYou can just take whatever's left.\n\n381\n00:19:03.100 --> 00:19:05.720\nThat's really simple and that works\nin small and medium environments.\n\n382\n00:19:05.720 --> 00:19:08.750\nBut when you start getting large, they're\njust too many devices to manage that way.\n\n383\n00:19:08.750 --> 00:19:11.120\nAnd that's where you really need\nto be classifying that traffic.\n\n384\n00:19:12.230 --> 00:19:18.140\nAll right, now, once we classify\nthe traffic, we've sorted into our piles,\n\n385\n00:19:18.140 --> 00:19:22.320\nwe mark it, we put a little tag on there,\nand then what happens?\n\n386\n00:19:22.320 --> 00:19:25.140\nWell, everything I just described,\nif we go back to my diagram,\n\n387\n00:19:25.140 --> 00:19:27.270\neverything I just described is\nhappening down here at Access.\n\n388\n00:19:27.270 --> 00:19:30.960\nWe classify and\nmark the traffic right here at Access.\n\n389\n00:19:30.960 --> 00:19:33.324\nAnd then by the time the traffic\nmakes it up to the core, or\n\n390\n00:19:33.324 --> 00:19:35.261\nwe could be doing this at distribution,\ntoo.\n\n391\n00:19:35.261 --> 00:19:36.960\nIt could happen in either place.\n\n392\n00:19:36.960 --> 00:19:40.660\nBut once it makes it to the core now\nthe core can take an action, all right.\n\n393\n00:19:40.660 --> 00:19:42.480\nAnd what action is that?\n\n394\n00:19:42.480 --> 00:19:45.360\nWell, let me show you guys what happens.\n\n395\n00:19:45.360 --> 00:19:48.197\nAll right, in a normal device.\n\n396\n00:19:48.197 --> 00:19:51.150\nLet's just pretend we don't\nhave quality of service, right.\n\n397\n00:19:51.150 --> 00:19:53.668\nOur traffic makes it to a router.\n\n398\n00:19:53.668 --> 00:19:56.810\nA switch is the same way too,\nbut well I talk about switches.\n\n399\n00:19:56.810 --> 00:20:00.400\nSo either way our traffic makes it to\nthe router or switch and it goes in\n\n400\n00:20:00.400 --> 00:20:04.440\nto the backplane, right, the circuit board\nin the back of the router or switch.\n\n401\n00:20:04.440 --> 00:20:07.090\nAnytime your traffic moves from one\ninterface to another the backplane\n\n402\n00:20:07.090 --> 00:20:07.600\nis in between.\n\n403\n00:20:08.610 --> 00:20:13.150\nAnd when we hit that backplane,\nwe're gonna exit the device.\n\n404\n00:20:13.150 --> 00:20:15.604\nAnd when we exit the device,\nwe're gonna exit through an interface,\n\n405\n00:20:15.604 --> 00:20:16.443\nthey call that egress.\n\n406\n00:20:16.443 --> 00:20:17.497\nYou have ingress and egress.\n\n407\n00:20:17.497 --> 00:20:19.508\nIngress in coming in, egress is going out.\n\n408\n00:20:19.508 --> 00:20:21.862\nI think It's Latin or something like that.\n\n409\n00:20:21.862 --> 00:20:23.820\n[LAUGH] Who knows these days.\n\n410\n00:20:23.820 --> 00:20:26.100\nSo we're gonna exit an interface.\n\n411\n00:20:26.100 --> 00:20:30.610\nThe problem is there may be more than\none person talking at the same time and\n\n412\n00:20:30.610 --> 00:20:32.950\nthey both need to exit\nfrom the same interface.\n\n413\n00:20:32.950 --> 00:20:34.050\nSo what happens?\n\n414\n00:20:34.050 --> 00:20:35.976\nIs there a collision and\none gets thrown away?\n\n415\n00:20:35.976 --> 00:20:40.230\nNo Instead of a collision,\nthe devices use a memory buffer.\n\n416\n00:20:40.230 --> 00:20:41.137\nThey use a memory buffer and\n\n417\n00:20:41.137 --> 00:20:43.118\nthey say here's two people who\nwanna talk at the same time.\n\n418\n00:20:43.118 --> 00:20:45.435\nI'm gonna save them to\nthe memory buffer first so\n\n419\n00:20:45.435 --> 00:20:48.877\nI can send one out the interface and\nthe other one can wait just a second and\n\n420\n00:20:48.877 --> 00:20:51.510\nthen we'll forward it along\nright afterwards right?\n\n421\n00:20:51.510 --> 00:20:53.380\nThe memory buffers really handle that.\n\n422\n00:20:53.380 --> 00:20:55.720\nAnd, depending on how\nexpensive your device is,\n\n423\n00:20:55.720 --> 00:20:57.540\nthe bigger that memory buffer can be,\nright?\n\n424\n00:20:57.540 --> 00:21:00.790\nThe really expensive switches have huge\nmemory buffers for each interface.\n\n425\n00:21:00.790 --> 00:21:03.363\nThe really cheap ones may not\nhave a memory buffer at all, and\n\n426\n00:21:03.363 --> 00:21:04.791\nthen you would have a collision.\n\n427\n00:21:04.791 --> 00:21:07.380\nI'm talking about the really crappy\nones you buy at the electronics store.\n\n428\n00:21:07.380 --> 00:21:09.669\nSo it just kind of depends on the device.\n\n429\n00:21:09.669 --> 00:21:11.609\nBut that memory buffer\nbecomes really important.\n\n430\n00:21:12.750 --> 00:21:15.771\nAnd as we send our traffic\ninto that memory buffer,\n\n431\n00:21:15.771 --> 00:21:18.167\nit's basically broken up into blocks.\n\n432\n00:21:18.167 --> 00:21:20.770\nAnd for\nsimplicity's sake I just drew eight.\n\n433\n00:21:20.770 --> 00:21:24.360\nThere's normally hundreds, thousands,\ntens of thousands of these, right?\n\n434\n00:21:24.360 --> 00:21:27.290\nCuz you gotta think about how\nmany bits are we storing?\n\n435\n00:21:27.290 --> 00:21:28.930\nThere's gonna be a one or\na zero right here.\n\n436\n00:21:28.930 --> 00:21:34.690\nAnd a one or zero right here,\nyou might have 64 kilobits of buffer.\n\n437\n00:21:34.690 --> 00:21:38.146\nAnd that would mean you have 64,000 little\nblocks where you could store data and\n\n438\n00:21:38.146 --> 00:21:40.258\nI just didn't feel like\ndrawing that many squares.\n\n439\n00:21:40.258 --> 00:21:41.938\nSo here I've got eight, right.\n\n440\n00:21:41.938 --> 00:21:45.636\n[LAUGH] So as data comes in if\nthe interface is available we'll skip\n\n441\n00:21:45.636 --> 00:21:48.380\nthe buffer and\ngo straight to the interface.\n\n442\n00:21:48.380 --> 00:21:51.100\nWhy bother buffering, we're on the back\nplane, we've got the interface,\n\n443\n00:21:51.100 --> 00:21:52.950\nwe're done right?\n\n444\n00:21:52.950 --> 00:21:57.350\nBut if the interface is in use,\nthen we'll write to the buffer.\n\n445\n00:21:57.350 --> 00:22:00.610\nAnd as soon as the interface is not\nin use then the buffer will exit and\n\n446\n00:22:00.610 --> 00:22:03.500\nany new traffic is gonna\ncontinue to go into the buffer.\n\n447\n00:22:03.500 --> 00:22:07.140\nAll right now for\nthe most part that's not a big deal right?\n\n448\n00:22:07.140 --> 00:22:11.053\nHere comes my data I've got voice over IP\ntraffic, I've got video traffic I've got\n\n449\n00:22:11.053 --> 00:22:13.601\nweb traffic and\nit's all being written to the buffer.\n\n450\n00:22:13.601 --> 00:22:15.365\nAs long as the interface is available,\n\n451\n00:22:15.365 --> 00:22:19.210\nthis traffic is gonna cycle through\nthat buffer and it's no big deal, right?\n\n452\n00:22:19.210 --> 00:22:23.800\nSo the next step here is that the traffic\nin the first buffer block is gonna\n\n453\n00:22:23.800 --> 00:22:25.910\nget sent to the interface and\nit's gonna go out.\n\n454\n00:22:25.910 --> 00:22:31.920\nAnd then any new traffic that's coming in,\nwell, the traffic is gonna cycle forward.\n\n455\n00:22:31.920 --> 00:22:36.940\nSo this web traffic here in block two\nIs gonna move over to block one and\n\n456\n00:22:36.940 --> 00:22:39.820\nit doesn't actually move blocks because\nthat would be a read write operation and\n\n457\n00:22:39.820 --> 00:22:40.650\nit takes too long.\n\n458\n00:22:40.650 --> 00:22:44.130\nWhat happens is that this switch or\nwhatever just says number one isn't\n\n459\n00:22:44.130 --> 00:22:46.720\nfront of the line anymore, number two is\nthe front of the line so that the front of\n\n460\n00:22:46.720 --> 00:22:48.830\nthe line is constantly moving so\nit doesn't have to rewrite traffic.\n\n461\n00:22:48.830 --> 00:22:51.920\nIt's all very very fast\nthe way this happens.\n\n462\n00:22:51.920 --> 00:22:53.770\n&gt;&gt; And without quality of service Don,\n\n463\n00:22:53.770 --> 00:22:57.710\ndoes that mean it's a first come first\nserve type basis and we really have no way\n\n464\n00:22:57.710 --> 00:23:02.030\nto say okay well something else is gonna\ngo in because we haven't prioritized yet?\n\n465\n00:23:02.030 --> 00:23:06.970\n&gt;&gt; Yeah In fact I'm, glad you mentioned\nfirst in first out right FIFO, that's what\n\n466\n00:23:06.970 --> 00:23:10.930\nthis is actually called is FIFO some\npeople will call it queuing there is some\n\n467\n00:23:10.930 --> 00:23:14.620\nvariations of it like fair queuing but\nbasically it's first come, first serve.\n\n468\n00:23:14.620 --> 00:23:18.440\nSo whatever packet got here first\ngets access to the interface.\n\n469\n00:23:18.440 --> 00:23:21.270\nWhatever packet gets here second goes\nin the buffer, and third and fourth.\n\n470\n00:23:21.270 --> 00:23:23.190\nAnd so\nsee how my stuff is just kinda mixed here.\n\n471\n00:23:23.190 --> 00:23:26.770\nI've got web and\nvideo kinda mixed and that's it.\n\n472\n00:23:26.770 --> 00:23:33.020\nWell if a voiceover IP call comes in,\nthis video block just left.\n\n473\n00:23:33.020 --> 00:23:34.860\nIt just hit the interface to leave.\n\n474\n00:23:34.860 --> 00:23:38.456\nAnd see how I've kind of drawn little\nhops, this is my sad version of a drawing,\n\n475\n00:23:38.456 --> 00:23:40.565\nhow everybody's kinda\nmoving up in the line.\n\n476\n00:23:40.565 --> 00:23:44.300\nAnd so block seven here become\navailable and that video traffic, or\n\n477\n00:23:44.300 --> 00:23:46.463\nvoice of IP traffic in this case sorry,\n\n478\n00:23:46.463 --> 00:23:49.770\nis gonna jump right into\nthe next available block, right.\n\n479\n00:23:49.770 --> 00:23:52.018\nEverybody is kind of moving forward,\nwe're cycling through.\n\n480\n00:23:52.018 --> 00:23:55.422\nSo, this voice over IP traffic\nis gonna have to wait,\n\n481\n00:23:55.422 --> 00:23:58.902\nbecause there's six other\nbits of data in front of it,\n\n482\n00:23:58.902 --> 00:24:02.472\nthat have to exit to the interface\nBefore it can do that.\n\n483\n00:24:02.472 --> 00:24:05.084\nSo it's just having to wait\nfirst come first served.\n\n484\n00:24:05.084 --> 00:24:08.917\n&gt;&gt; And Don this kind of seems a little\nbit like traditional traffic like FTP.\n\n485\n00:24:08.917 --> 00:24:12.316\nI mean it can handle being father back in\nthat line because it's just a little bit\n\n486\n00:24:12.316 --> 00:24:12.974\nof a delay, but\n\n487\n00:24:12.974 --> 00:24:16.920\nit doesn't look like the voice over IP\nwould do well with that kind of scenario.\n\n488\n00:24:16.920 --> 00:24:18.080\n&gt;&gt; Two challenges here, right?\n\n489\n00:24:18.080 --> 00:24:20.850\nSo one is you are having to wait, right?\n\n490\n00:24:20.850 --> 00:24:24.000\nAnd the longer you spend in that buffer\nthe more delayed your phone call is.\n\n491\n00:24:24.000 --> 00:24:27.890\nAnd if you're passing through 20 switches\non your way to a destination, or\n\n492\n00:24:27.890 --> 00:24:31.780\n20 routers for that matter, this could\nbe happening 20 different times.\n\n493\n00:24:31.780 --> 00:24:34.380\nEach one making you a little bit slower.\n\n494\n00:24:34.380 --> 00:24:38.050\nWhen you do a trace route and you look at\nthe delays between you and all the devices\n\n495\n00:24:38.050 --> 00:24:41.790\nin the path, a lot of times the delay,\nat least a small portion of it,\n\n496\n00:24:41.790 --> 00:24:45.400\nis coming from the buffer that's happening\non each interface as you move through.\n\n497\n00:24:45.400 --> 00:24:47.870\nYou gotta wait for access to the network.\n\n498\n00:24:47.870 --> 00:24:50.420\nThe other problem is,\nwhat happens if the buffer's full?\n\n499\n00:24:50.420 --> 00:24:54.440\nIf there's a lot of traffic on\nthe network and the interface is busy and\n\n500\n00:24:54.440 --> 00:24:58.340\nall the buffers are full,\nsystems will do what's called a tail drop.\n\n501\n00:24:58.340 --> 00:25:00.835\nA tail drop is first in, first out, right?\n\n502\n00:25:00.835 --> 00:25:03.110\nThe first people there go into the buffer.\n\n503\n00:25:03.110 --> 00:25:08.540\nThe last in, if there's no in, if there's\nno room, it gets discarded, right?\n\n504\n00:25:08.540 --> 00:25:13.590\nSo this voice over IP call could come in,\nthe memory buffer can be full, and\n\n505\n00:25:13.590 --> 00:25:15.860\nthe router or\nthe switcher just drove the traffic away.\n\n506\n00:25:15.860 --> 00:25:16.910\nAnd so what happens there?\n\n507\n00:25:16.910 --> 00:25:20.450\nWell if it's a TCP communication,\nwe'll do a re-transmit.\n\n508\n00:25:20.450 --> 00:25:21.570\nNot that big of a deal.\n\n509\n00:25:21.570 --> 00:25:24.820\nBut it's UDP, which a lot of voice\ncalls would be or video streaming.\n\n510\n00:25:24.820 --> 00:25:27.430\nIf it's UDP, we don't know what happened.\n\n511\n00:25:27.430 --> 00:25:31.280\nAnd now you get an interruption\nin the call, a quick little blip.\n\n512\n00:25:31.280 --> 00:25:33.060\nIf it happens one time\nyou might not notice.\n\n513\n00:25:33.060 --> 00:25:36.320\nBut if it's happening a lot, you're\nconstantly getting these little blips in\n\n514\n00:25:36.320 --> 00:25:39.310\nthe call and it kills the call quality,\nit's really bad.\n\n515\n00:25:39.310 --> 00:25:40.590\nSo that's a problem, right?\n\n516\n00:25:40.590 --> 00:25:42.230\nThat's why we don't want this to happen.\n\n517\n00:25:42.230 --> 00:25:46.240\nSo the most basic form of quality\nof service is something called\n\n518\n00:25:46.240 --> 00:25:47.780\nprioritization.\n\n519\n00:25:47.780 --> 00:25:52.330\nWith prioritization if we've\nclassified the traffic,\n\n520\n00:25:52.330 --> 00:25:56.440\nwe can classify voice over\nIP as high priority, right?\n\n521\n00:25:56.440 --> 00:26:00.740\nAnd then, when that video\ntraffic exited block one and\n\n522\n00:26:00.740 --> 00:26:04.660\nwent off to the interface, the voice over\nIP traffic comes in and the router or\n\n523\n00:26:04.660 --> 00:26:07.220\nswitch will let it skip\nto the front of the line.\n\n524\n00:26:07.220 --> 00:26:09.770\nIt'll say you're voice,\nyou go to the front of the line, and\n\n525\n00:26:09.770 --> 00:26:11.250\nit will move it right there.\n\n526\n00:26:11.250 --> 00:26:15.819\nPrioritization adjust the way traffic\nenters the buffers, all right.\n\n527\n00:26:15.819 --> 00:26:19.030\nPrioritization doesn't happen\nif the buffers are empty.\n\n528\n00:26:19.030 --> 00:26:22.248\nIf the interfaces available we go\nstraight to the interface, we don't need\n\n529\n00:26:22.248 --> 00:26:25.381\nprioritization for that right,\ncus you're straight to the interface.\n\n530\n00:26:25.381 --> 00:26:30.580\nSo all traffic is created equal\nwhen the interface is available.\n\n531\n00:26:30.580 --> 00:26:34.660\nBut the moment the interface is full and\nwe start to hit the buffers,\n\n532\n00:26:34.660 --> 00:26:37.330\nprioritization let's us\norganized that traffic and\n\n533\n00:26:37.330 --> 00:26:38.710\nbump people to the front of the line.\n\n534\n00:26:38.710 --> 00:26:42.190\n&gt;&gt; This kinda seems like the people that\nannoy me when you go to a theme park and\n\n535\n00:26:42.190 --> 00:26:43.430\nthey've got the express pass.\n\n536\n00:26:43.430 --> 00:26:44.725\nAnd you just waited two hours in line.\n\n537\n00:26:44.725 --> 00:26:46.369\n&gt;&gt; [LAUGH]\n&gt;&gt; And then this person comes up and\n\n538\n00:26:46.369 --> 00:26:49.865\nright away they get on that ride\nyou've been waiting so patently for.\n\n539\n00:26:49.865 --> 00:26:52.680\n&gt;&gt; That's a great example cuz\nthey've been classified, right?\n\n540\n00:26:52.680 --> 00:26:54.940\nSo early on they got a reservation.\n\n541\n00:26:54.940 --> 00:26:57.140\nReservations at a restaurant\nare another great example.\n\n542\n00:26:57.140 --> 00:27:00.740\nHours beforehand they called in and\nsaid hey, I need a table at 6:00 PM.\n\n543\n00:27:00.740 --> 00:27:04.770\nAnd I might have shown up at 5:45 and\nwaited unannounced for a table for\n\n544\n00:27:04.770 --> 00:27:05.617\n15 minutes.\n\n545\n00:27:05.617 --> 00:27:08.767\nBut because they called in early, they\ngo straight to the front of the line and\n\n546\n00:27:08.767 --> 00:27:09.650\nthey get that table.\n\n547\n00:27:09.650 --> 00:27:13.640\nAnd that's just a really handy thing\nto do when it's sensitive traffic,\n\n548\n00:27:13.640 --> 00:27:15.360\nwhen it's important traffic.\n\n549\n00:27:15.360 --> 00:27:18.560\nBut we've gotta make sure it's classified\nahead of time for that to work, all right?\n\n550\n00:27:18.560 --> 00:27:21.580\nSo this is one of the most basic\ntechniques in quality of service.\n\n551\n00:27:21.580 --> 00:27:22.960\nIt's called prioritization.\n\n552\n00:27:22.960 --> 00:27:25.320\nYou prioritize traffic based\non how important it is to you.\n\n553\n00:27:26.400 --> 00:27:30.810\nBut there are other things that we can do\nbased on the volume of traffic we have and\n\n554\n00:27:30.810 --> 00:27:32.490\nthe type of data that we're moving.\n\n555\n00:27:32.490 --> 00:27:37.500\nSo for example, we might do what's\ncalled traffic shaping, right?\n\n556\n00:27:37.500 --> 00:27:39.450\nTraffic shaping is a neat one.\n\n557\n00:27:39.450 --> 00:27:40.520\nI mentioned tail drop.\n\n558\n00:27:40.520 --> 00:27:44.910\nSo with tail drop if the buffers get full,\nthere's nowhere to put the data,\n\n559\n00:27:44.910 --> 00:27:46.170\nwhether it's high priority or not.\n\n560\n00:27:46.170 --> 00:27:49.400\nIf the buffers are full,\nwe start throwing traffic away.\n\n561\n00:27:49.400 --> 00:27:51.010\nAnd that can be a problem, right?\n\n562\n00:27:51.010 --> 00:27:52.210\nIf we have high priority traffic,\n\n563\n00:27:52.210 --> 00:27:56.540\nwe need to always make sure there's some\nplace in the buffers for that traffic.\n\n564\n00:27:56.540 --> 00:28:01.070\nSo, on Cisco switches and Cisco routers,\nwe can actually customize the buffers.\n\n565\n00:28:01.070 --> 00:28:03.690\nNow let me tell you,\nthis is a really hard thing to do,\n\n566\n00:28:03.690 --> 00:28:07.020\nwhich is why on the exam they\ndon't expect you to do it.\n\n567\n00:28:07.020 --> 00:28:10.200\nFor those of you that go on to\nbe like CCNP service provider,\n\n568\n00:28:10.200 --> 00:28:11.130\nyou will have to do it.\n\n569\n00:28:11.130 --> 00:28:12.070\nAnd let me tell you, it's hard.\n\n570\n00:28:12.070 --> 00:28:15.000\nThere's a whole bunch of\nformulas you have to know.\n\n571\n00:28:15.000 --> 00:28:17.730\nAnd basically like a whole worksheet you\nhave to fill out to figure out how to\n\n572\n00:28:17.730 --> 00:28:18.980\nadjust the buffers.\n\n573\n00:28:18.980 --> 00:28:20.340\nThe buffers on a Cisco switch or\n\n574\n00:28:20.340 --> 00:28:25.660\nrouter are configured in a default manner\nthat some really smart people created.\n\n575\n00:28:25.660 --> 00:28:27.260\nAnd for you to adjust the buffers,\n\n576\n00:28:27.260 --> 00:28:29.180\nyou have to be smarter\nthan those smart people.\n\n577\n00:28:29.180 --> 00:28:32.680\nThat means you've really gotta know\nyour stuff, it is a complex thing.\n\n578\n00:28:32.680 --> 00:28:36.980\nBut, if you understand your traffic,\nyou can tweak the buffers to make it where\n\n579\n00:28:36.980 --> 00:28:40.860\nit's tuned for your traffic and\nyou get the most out of your network.\n\n580\n00:28:40.860 --> 00:28:43.890\nAll right, and when we do that,\nwe do have a little problem.\n\n581\n00:28:43.890 --> 00:28:46.450\nHow do we always make sure\nthere's room in the buffers?\n\n582\n00:28:46.450 --> 00:28:50.229\nWell, we make room by never\nletting them get full.\n\n583\n00:28:50.229 --> 00:28:52.230\nAnd there's two ways to do that.\n\n584\n00:28:52.230 --> 00:28:55.770\nOne way is what's called traffic\npolicing and another is traffic shaping.\n\n585\n00:28:55.770 --> 00:28:57.880\nOkay, let's start with traffic policing.\n\n586\n00:28:57.880 --> 00:28:59.640\nTraffic policing works like this.\n\n587\n00:28:59.640 --> 00:29:03.090\nI mentioned how most traffic\nis bursty in nature, right?\n\n588\n00:29:03.090 --> 00:29:06.592\nSo we don't have just\none flat level of data.\n\n589\n00:29:06.592 --> 00:29:09.550\nAll right, data is constantly going up and\ndown and so on.\n\n590\n00:29:09.550 --> 00:29:13.490\nSo here I got some data and\nit's bumping up and down and so on, right.\n\n591\n00:29:13.490 --> 00:29:18.295\nSo I might wanna step in and set up\na desire threshold, and say, all right,\n\n592\n00:29:18.295 --> 00:29:22.811\nI don't want web traffic to consume\nmore than 80% of my bandwidth.\n\n593\n00:29:22.811 --> 00:29:26.345\nBy doing that, I'm saying I wanna reserve,\n20% for other stuff right,\n\n594\n00:29:26.345 --> 00:29:29.020\nI'm setting a limit for this traffic.\n\n595\n00:29:29.020 --> 00:29:34.130\nAnd if I do traffic policing what happens\nto the traffic that goes over that line?\n\n596\n00:29:35.200 --> 00:29:37.930\nIt gets thrown away,\nit gets discarded, right?\n\n597\n00:29:37.930 --> 00:29:42.990\nSo when we do policing anything\nover that line gets discarded, and\n\n598\n00:29:42.990 --> 00:29:43.900\nwhat happens then?\n\n599\n00:29:43.900 --> 00:29:47.100\nWell, if it's TCP traffic\nit gets retransmitted.\n\n600\n00:29:47.100 --> 00:29:48.340\nIt's not a big deal right?\n\n601\n00:29:48.340 --> 00:29:50.980\nThat web traffic was taking\nup too much bandwidth.\n\n602\n00:29:50.980 --> 00:29:54.470\nAnd so now, we slow it down by\ndiscarding and causing retransmits and\n\n603\n00:29:54.470 --> 00:29:55.510\nthen it happens later.\n\n604\n00:29:55.510 --> 00:29:59.600\nSo, this little peak would have\nto get retransmitted down here\n\n605\n00:29:59.600 --> 00:30:01.140\nwhen we've got availability anyway.\n\n606\n00:30:01.140 --> 00:30:03.540\nSo now,\nwe've leveled off that traffic a bit,\n\n607\n00:30:03.540 --> 00:30:05.960\nand that allows us to have\nmore room in the buffers.\n\n608\n00:30:05.960 --> 00:30:08.800\n&gt;&gt; And Don, help me understand\nwhy that would be better than\n\n609\n00:30:08.800 --> 00:30:11.210\nthe prioritization and\ntraffic getting dropped.\n\n610\n00:30:11.210 --> 00:30:14.420\nBecause it seems in both instances\nhere traffic is going to get dropped.\n\n611\n00:30:14.420 --> 00:30:16.270\n&gt;&gt; Well, you'd use them together, right.\n\n612\n00:30:16.270 --> 00:30:20.190\nSo prioritization doesn't actually\ninfluence whether things get dropped or\n\n613\n00:30:20.190 --> 00:30:21.140\nnot, right.\n\n614\n00:30:21.140 --> 00:30:23.190\nPrioritization let's you get\nto the front of the line.\n\n615\n00:30:23.190 --> 00:30:25.830\nBut what if there's no room in the line?\n\n616\n00:30:25.830 --> 00:30:27.800\nWell I would have to go to\nthe front of the line, and\n\n617\n00:30:27.800 --> 00:30:29.830\nsomebody else would have\nto come out of the line.\n\n618\n00:30:29.830 --> 00:30:31.470\nA router's never gonna\ntake you out of the line.\n\n619\n00:30:31.470 --> 00:30:32.860\nIt doesn't do that, right?\n\n620\n00:30:32.860 --> 00:30:35.560\nIt controls you getting into\nthe line in the first place.\n\n621\n00:30:35.560 --> 00:30:39.460\nSo, prioritization only works\nif there's room in the buffer.\n\n622\n00:30:39.460 --> 00:30:42.420\nSo you probably wouldn't use\nprioritization by itself.\n\n623\n00:30:42.420 --> 00:30:44.920\nYou would use prioritization and\npolicing together.\n\n624\n00:30:44.920 --> 00:30:48.110\nYou use policing to make sure\nthere was always room in the line.\n\n625\n00:30:48.110 --> 00:30:51.510\nAnd then you would use prioritization to\nmake sure that you could jump to the front\n\n626\n00:30:51.510 --> 00:30:52.030\nof that line.\n\n627\n00:30:52.030 --> 00:30:54.120\nSo they do two different things,\nbut they work together.\n\n628\n00:30:54.120 --> 00:30:55.260\nSo they are very closely related.\n\n629\n00:30:55.260 --> 00:30:58.190\nAnd it goes back to quality of\nservice is an umbrella term,\n\n630\n00:30:58.190 --> 00:31:01.490\nit's a big word,\nit covers a lot of different things.\n\n631\n00:31:01.490 --> 00:31:04.900\nSo we have to pick\nthe pieces that work for us.\n\n632\n00:31:04.900 --> 00:31:08.610\nAll right, now the negative of policing\nis it does throw traffic away, right?\n\n633\n00:31:09.660 --> 00:31:13.140\nIf your traffic is bursty,\nthere is another option.\n\n634\n00:31:13.140 --> 00:31:16.190\nIf your traffic is consistently over,\nthen you got a big problem, right?\n\n635\n00:31:16.190 --> 00:31:17.550\nThat becomes a bit of a challenge.\n\n636\n00:31:17.550 --> 00:31:21.640\nSo the other solution for\nus is to do what's called traffic shaping.\n\n637\n00:31:21.640 --> 00:31:23.525\nTraffic shaping works with bursty traffic.\n\n638\n00:31:23.525 --> 00:31:27.557\nAnd what traffic shaping does is instead\nof throwing the overages away, so\n\n639\n00:31:27.557 --> 00:31:30.309\nremember back here with\npolicing I got overages and\n\n640\n00:31:30.309 --> 00:31:33.447\nwhere I got my dotted lines\nthat's just throwing it away.\n\n641\n00:31:33.447 --> 00:31:37.608\nBut with shaping what it does is it\nbuffers that part that went over in\n\n642\n00:31:37.608 --> 00:31:41.404\na separate buffer,\nyou have to make buffer room for this, and\n\n643\n00:31:41.404 --> 00:31:44.380\nthen it just sends it right afterwards.\n\n644\n00:31:44.380 --> 00:31:47.500\nSee how I kind of move the peaks down\nit actually doesn't look like that.\n\n645\n00:31:47.500 --> 00:31:54.200\nInstead what it looks like, we would\ngo from this to a more leveled out.\n\n646\n00:31:54.200 --> 00:31:58.130\nSee how these are just longer pronounced\nareas of me running at the peak?\n\n647\n00:31:58.130 --> 00:32:02.540\nSo it's,\nI guess if I jump from here to here, so\n\n648\n00:32:02.540 --> 00:32:06.570\nif we watch this line\nright here where it's at.\n\n649\n00:32:06.570 --> 00:32:09.200\nThese two peaks are just\ngonna get leveled out.\n\n650\n00:32:09.200 --> 00:32:12.020\nAnd when it gets leveled out,\nsee how it jumps over and\n\n651\n00:32:12.020 --> 00:32:14.210\nI just have a longer period.\n\n652\n00:32:14.210 --> 00:32:17.740\nI stay under my threshold and\nI don't have to retransmit traffic.\n\n653\n00:32:17.740 --> 00:32:19.739\nBut I do have to allocate memory for this.\n\n654\n00:32:19.739 --> 00:32:22.260\nAnd your switches, your routers,\nthey've only got so much memory.\n\n655\n00:32:22.260 --> 00:32:25.990\nSo I'm taking away memory\nto store this data.\n\n656\n00:32:25.990 --> 00:32:27.810\nI gotta make sure I can handle that,\nall right?\n\n657\n00:32:27.810 --> 00:32:30.960\nSo traffic shaping is\na little more involved.\n\n658\n00:32:30.960 --> 00:32:33.550\nBut the end result is usually better.\n\n659\n00:32:33.550 --> 00:32:37.320\nTraffic policing is very easy,\ndoesn't require a lot of resources.\n\n660\n00:32:37.320 --> 00:32:39.040\nBut it does generate a lot of retransmit.\n\n661\n00:32:39.040 --> 00:32:41.240\nIt's really where we're\nplacing the burden.\n\n662\n00:32:41.240 --> 00:32:44.590\nTraffic shaping, the burden is\nright here on our router or switch.\n\n663\n00:32:44.590 --> 00:32:48.170\nTraffic policing, the burden is on\nthe client who generated the traffic.\n\n664\n00:32:48.170 --> 00:32:51.500\nCuz they're the ones who are gonna have to\nretransmit because they went over, right?\n\n665\n00:32:51.500 --> 00:32:54.780\nSo those are a couple of\ntechniques that we can use\n\n666\n00:32:54.780 --> 00:32:56.390\nwith quality of service\nto control our traffic.\n\n667\n00:32:57.450 --> 00:33:00.900\nAnd I know I'm running out of time,\nWes is giving me the evil eye.\n\n668\n00:33:00.900 --> 00:33:03.539\nI've got a few other little\nconcepts I need to talk about.\n\n669\n00:33:03.539 --> 00:33:07.368\nAnd the other thing is I really hate\nthe fact that we're just talking about\n\n670\n00:33:07.368 --> 00:33:08.180\nthe concepts.\n\n671\n00:33:08.180 --> 00:33:10.918\nAnd so I'm gonna go a little bit\nbeyond the exam [objective and\n\n672\n00:33:10.918 --> 00:33:12.996\nI'm gonna show you guys\nhow to implement this.\n\n673\n00:33:12.996 --> 00:33:14.540\nSo we're gonna go on to a part two.\n\n674\n00:33:14.540 --> 00:33:18.750\nAnd in part two, I need to cover just a\nfew more things about congestion detection\n\n675\n00:33:18.750 --> 00:33:20.180\nand congestion management.\n\n676\n00:33:20.180 --> 00:33:22.170\nAnd then I'll show you how to quickly and\n\n677\n00:33:22.170 --> 00:33:25.820\neasily deploy quality of service in your\nenvironment to classify your traffic and\n\n678\n00:33:25.820 --> 00:33:28.010\nget it marked and\nactually take action on it.\n\n679\n00:33:28.010 --> 00:33:29.810\nSo that'll all come up in part two.\n\n680\n00:33:29.810 --> 00:33:34.212\n&gt;&gt; Well Don, we appreciate you taking the\ntime to impart quality of service to us.\n\n681\n00:33:34.212 --> 00:33:38.287\nBut we want you to stick around because\nlike Don said, we do have an example or\n\n682\n00:33:38.287 --> 00:33:40.276\nmore examples coming up in part two.\n\n683\n00:33:40.276 --> 00:33:43.409\nBut before we sign off, Don, you got\nany additional comments in this one or\n\n684\n00:33:43.409 --> 00:33:45.170\nyou're just gonna hold off for part two?\n\n685\n00:33:45.170 --> 00:33:47.755\n&gt;&gt; The main thing to remember\nat this point is on the exam,\n\n686\n00:33:47.755 --> 00:33:49.560\nyou need to know these concepts.\n\n687\n00:33:49.560 --> 00:33:52.040\nRight so I know it's not as fun\nas actually implementing but\n\n688\n00:33:52.040 --> 00:33:53.920\nyou need to understand the concepts and\nwhat they are.\n\n689\n00:33:53.920 --> 00:33:54.960\nThat's what they are testing on,\n\n690\n00:33:54.960 --> 00:33:58.820\nyou should be able to as they\nsay describe quality of service.\n\n691\n00:33:58.820 --> 00:34:01.530\nSo the implementation is nice, but\n\n692\n00:34:01.530 --> 00:34:03.895\nmake sure you understand the concepts,\nthat what's on the exam.\n\n693\n00:34:03.895 --> 00:34:06.050\n&gt;&gt; All right, well that looks like\nit's a great place to wrap up.\n\n694\n00:34:06.050 --> 00:34:08.660\nStick around because we do have\nmore Quality of a Service coming,\n\n695\n00:34:08.660 --> 00:34:11.088\nsigning off for ITPro.tv,\nI've been your host Wes Bryan.\n\n696\n00:34:11.088 --> 00:34:12.100\n&gt;&gt; And I am Don Pezet.\n\n697\n00:34:12.100 --> 00:34:15.036\n&gt;&gt; And we'll see you next time.\n\n698\n00:34:15.036 --> 00:34:20.622\n[MUSIC]\n\n699\n00:34:20.622 --> 00:34:24.860\nThank you for watching ITPro.tv\n\n",
          "vimeoId": "193879829"
        },
        {
          "description": "In this episode, Wes and Don continue their discussion on the concepts surrounding Quality of Service. They explain concepts like congestion management and random market detection or RED. They will finally demonstrate how to configure a network for QoS.",
          "length": "1827",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/cisco-ccna200105/cisco-ccna200105-4-4-2-quality_of_service_pt2-110816-110816-1.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/cisco-ccna200105/cisco-ccna200105-4-4-2-quality_of_service_pt2-110816-110816-1-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/cisco-ccna200105/cisco-ccna200105-4-4-2-quality_of_service_pt2-110816-110816-1-sm.jpg",
          "title": "Quality of Service Part 2",
          "transcript": "WEBVTT\n\n1\n00:00:00.320 --> 00:00:02.274\nWelcome to ITProTV, I'm your host, Don.\n\n2\n00:00:02.274 --> 00:00:05.066\n[CROSSTALK] Live from San Francisco.\n\n3\n00:00:05.066 --> 00:00:08.299\n[MUSIC]\n\n4\n00:00:08.299 --> 00:00:10.220\n&gt;&gt; You're watching ITProTV.\n\n5\n00:00:10.220 --> 00:00:15.360\n&gt;&gt; Welcome back to another\nexciting episode here at ITPRO TV.\n\n6\n00:00:15.360 --> 00:00:17.580\nI'm your host, Wes Bryan,\nand in today's episode,\n\n7\n00:00:17.580 --> 00:00:20.930\nwe're continuing through our cisco\nrouting and switching series.\n\n8\n00:00:20.930 --> 00:00:23.010\nWe're talking about\ninfrastructure services, and\n\n9\n00:00:23.010 --> 00:00:25.530\nthis is actually a part\ntwo in quality of service.\n\n10\n00:00:25.530 --> 00:00:28.320\nJoining us back in the studios is\nnone other than Mr. Don Pezet.\n\n11\n00:00:28.320 --> 00:00:29.300\nDon, how're you doing, sir?\n\n12\n00:00:29.300 --> 00:00:30.220\n&gt;&gt; I'm doing great, Wes.\n\n13\n00:00:30.220 --> 00:00:31.590\nReady to dive back in.\n\n14\n00:00:31.590 --> 00:00:34.800\nAnd I I I talked a little too long\non QOS in the last episode, so\n\n15\n00:00:34.800 --> 00:00:37.170\nI've got to pick back up\nwhere I left off and.\n\n16\n00:00:37.170 --> 00:00:39.830\nAnd try and you know, keep us on track.\n\n17\n00:00:39.830 --> 00:00:43.140\nWe talked a lot about QOS\nconcepts in the last episode.\n\n18\n00:00:43.140 --> 00:00:46.850\nWe talked about, how quality of service\nworked, talked about prioritization,\n\n19\n00:00:46.850 --> 00:00:49.690\ntraffic shaping, traffic policing.\n\n20\n00:00:49.690 --> 00:00:52.570\nWe talked about,\nthedata classification and\n\n21\n00:00:52.570 --> 00:00:54.780\nmarking, a little bit\nof diffserv code point.\n\n22\n00:00:54.780 --> 00:00:56.710\nRight.\nThose are all concepts that we covered.\n\n23\n00:00:56.710 --> 00:00:59.110\nThere were only two things\nthat I didn't really get to.\n\n24\n00:00:59.110 --> 00:01:02.230\nOne of the topics that I\ntalked about was tail drop.\n\n25\n00:01:02.230 --> 00:01:05.470\nAnd tail drop was how our\nbuffers function, right.\n\n26\n00:01:05.470 --> 00:01:09.362\nThat, we, as data reached the buffers,\nwe had the first-in,\n\n27\n00:01:09.362 --> 00:01:11.190\nfirst-out way of handling it.\n\n28\n00:01:11.190 --> 00:01:14.410\nSo, for example,\nlet me let me pull up my diagram on that.\n\n29\n00:01:14.410 --> 00:01:18.590\nSo, when we have data coming from\nthe backplane of a router or a switch.\n\n30\n00:01:18.590 --> 00:01:22.260\nThat's destined for\nan interface right that's gonna exit or\n\n31\n00:01:22.260 --> 00:01:24.410\negress from the router switch.\n\n32\n00:01:24.410 --> 00:01:30.070\nIf that interface is already busy we've\ngotta go to the buffer and without quality\n\n33\n00:01:30.070 --> 00:01:35.230\nof service in place the buffer is just\nhandled on a first in first out basis.\n\n34\n00:01:35.230 --> 00:01:39.190\nSo data is being written to it\nin the order that it arrives and\n\n35\n00:01:39.190 --> 00:01:40.990\nwhoever's at the front of the line.\n\n36\n00:01:40.990 --> 00:01:44.670\nWill be the first person to\nmake it in to the interface as\n\n37\n00:01:44.670 --> 00:01:46.790\nsoon as the interface become available.\n\n38\n00:01:46.790 --> 00:01:52.070\nAnd once that exits,\neverybody else kinda moves up in line and\n\n39\n00:01:52.070 --> 00:01:55.630\nthat frees up space for other people to\ncome in and start filling those buffers.\n\n40\n00:01:55.630 --> 00:01:59.000\nSo this is the first in\nfirst out mechanism.\n\n41\n00:01:59.000 --> 00:02:03.360\nNow the problem with this mechanism\nis that it's not terribly fair.\n\n42\n00:02:03.360 --> 00:02:07.210\nAnd I know the world is not fair,\nbut it's not fair and\n\n43\n00:02:07.210 --> 00:02:10.940\nthat it doesn't treat anybody differently,\ntreat everybody equal,\n\n44\n00:02:10.940 --> 00:02:13.780\nand it's kind a it's different\nthan our social norms really.\n\n45\n00:02:13.780 --> 00:02:16.730\nAre we supposed to treat\neverybody normal or equal?\n\n46\n00:02:16.730 --> 00:02:18.760\nWith network traffic\nit's not quite like that.\n\n47\n00:02:18.760 --> 00:02:23.010\nThat some network traffic maybe really\nimportant and some might not be.\n\n48\n00:02:23.010 --> 00:02:26.300\nVoice over IP expects low latency,\n\n49\n00:02:26.300 --> 00:02:31.220\nas little delay as possible versus\nweb browsers where if I have\n\n50\n00:02:31.220 --> 00:02:36.740\n18 millisecond delay when I put up\na webpage, I'm not even gonna notice that.\n\n51\n00:02:36.740 --> 00:02:40.530\nBut an 18 millisecond delay in a VoIP\ncall, if it happens repeatedly,\n\n52\n00:02:40.530 --> 00:02:42.110\nwill really degrade the quality of call.\n\n53\n00:02:42.110 --> 00:02:43.280\nYou'll notice that.\n\n54\n00:02:43.280 --> 00:02:47.280\nSo, some protocols are really\nsensitive and others aren't.\n\n55\n00:02:47.280 --> 00:02:52.920\nAnd traditional tail drop, queuing,\nit doesn't take that into account.\n\n56\n00:02:52.920 --> 00:02:55.600\nAnd so some protocols just don't\nperform as well when they run on\n\n57\n00:02:55.600 --> 00:02:57.090\nthe traditional model.\n\n58\n00:02:57.090 --> 00:03:00.030\nSo, there's two things we\ncan do to help prevent that.\n\n59\n00:03:00.030 --> 00:03:02.220\nI mean, we talked about some of the things\nwe could do in the last episode,\n\n60\n00:03:02.220 --> 00:03:04.740\ntalking about prioritization and\nand traffic shaping and\n\n61\n00:03:04.740 --> 00:03:07.480\nstuff to kind of free up room\nin the buffers to make sure.\n\n62\n00:03:07.480 --> 00:03:10.630\nOur VOIP calls can always jump right\nto the front of the line and stuff.\n\n63\n00:03:10.630 --> 00:03:12.670\nBut there are a few\nother things we can do.\n\n64\n00:03:12.670 --> 00:03:15.890\nWe can adjust how the cues work.\n\n65\n00:03:15.890 --> 00:03:18.990\nInstead of being first in, first out is\na few different methods we can put in\n\n66\n00:03:18.990 --> 00:03:20.380\nplace to kinda change that behavior.\n\n67\n00:03:20.380 --> 00:03:22.750\n&gt;&gt; You know it's interesting,\nDon, and correct me if I'm wrong.\n\n68\n00:03:22.750 --> 00:03:26.920\nSo far it looks like we've been\nmore reactive traffic management.\n\n69\n00:03:26.920 --> 00:03:30.690\nIs there something that we can do\nthat might be a little bit proactive,\n\n70\n00:03:30.690 --> 00:03:34.110\nrather than waiting in beforehand\n&gt;&gt; Yeah, and\n\n71\n00:03:34.110 --> 00:03:38.350\ntwo of the easiest methods to do that,\nwell I think it's one method.\n\n72\n00:03:38.350 --> 00:03:39.570\nIt's RED.\n\n73\n00:03:39.570 --> 00:03:41.475\nRED is random early detection.\n\n74\n00:03:41.475 --> 00:03:42.500\nR-E-D.\n\n75\n00:03:42.500 --> 00:03:45.040\nAnd then there's a modified\nversion called W-RED.\n\n76\n00:03:45.040 --> 00:03:47.930\nWhich is weighted random early detection.\n\n77\n00:03:47.930 --> 00:03:53.320\nAnd, what RED and W-RED are,\nis they are congestion management.\n\n78\n00:03:53.320 --> 00:03:56.080\nThey look at an interface and they try and\n\n79\n00:03:56.080 --> 00:04:01.320\npredict when congestion's is gonna happen,\nwhen the buffers might be full.\n\n80\n00:04:01.320 --> 00:04:05.200\nAnd then, it can take actions ahead\nof time to prevent the buffer from\n\n81\n00:04:05.200 --> 00:04:08.240\nactually becoming full, to determine\nwho it is that should be filtered.\n\n82\n00:04:08.240 --> 00:04:13.020\nThey put a little bit of fairness\ncheck in there, all right?\n\n83\n00:04:13.020 --> 00:04:16.650\nThese are really easy to implement cuz you\ndon't have to have traffic even classified\n\n84\n00:04:16.650 --> 00:04:17.620\nor marked for this.\n\n85\n00:04:17.620 --> 00:04:20.900\nIt can actually just look at\ntraffic that's running like normal.\n\n86\n00:04:20.900 --> 00:04:25.380\nWhen you change the cues on\nan interface to use RAD or\n\n87\n00:04:25.380 --> 00:04:29.080\nWRAD, what it starts doing is running\na little statistical formula.\n\n88\n00:04:29.080 --> 00:04:31.330\nIt starts tracking the traffic\nthat's on the link.\n\n89\n00:04:31.330 --> 00:04:35.660\nAnd if it's just RAD, let's just do\nregular, the random early detection.\n\n90\n00:04:35.660 --> 00:04:38.400\nIt's looking at host that are talking and\n\n91\n00:04:38.400 --> 00:04:42.170\nit's trying to figure out who's talking\na lot and who's talking a little.\n\n92\n00:04:42.170 --> 00:04:47.120\nAnd at the interface ever sure\nis getting congested, congested.\n\n93\n00:04:47.120 --> 00:04:51.420\nWhoever is talking a lot, they\nare the ones, they are gonna get dropped.\n\n94\n00:04:51.420 --> 00:04:53.060\nAnd whoever is talking a little.\n\n95\n00:04:53.060 --> 00:04:54.300\nThey'll be allowed to communicate.\n\n96\n00:04:54.300 --> 00:04:58.495\nSo if I'm sending 100\nkilobytes of traffic, and\n\n97\n00:04:58.495 --> 00:05:05.680\nWes is sending a 100 megabytes of traffic,\nhe's sending way more traffic than I am.\n\n98\n00:05:05.680 --> 00:05:09.860\nAnd so if traffic starts to drop,\nwould it be fair if my traffic dropped?\n\n99\n00:05:09.860 --> 00:05:11.760\nI'm only sending 100 kilobit.\n\n100\n00:05:11.760 --> 00:05:14.890\nWes has sent way over a 100 kilobit.\n\n101\n00:05:14.890 --> 00:05:17.650\nSo if he did that,\nshouldn't I be entitled to my 100k?\n\n102\n00:05:17.650 --> 00:05:20.030\nShouldn't we get equal\naccess to the network?\n\n103\n00:05:20.030 --> 00:05:21.290\nIt doesn't work like that.\n\n104\n00:05:21.290 --> 00:05:22.550\nbecause it's first in, first out.\n\n105\n00:05:22.550 --> 00:05:25.450\nAs long as Wes is in before me,\nhe'll get priority.\n\n106\n00:05:25.450 --> 00:05:27.388\nAnd I'll get dropped just\nbecause I came afterward.\n\n107\n00:05:27.388 --> 00:05:31.210\nNow, with RED.\n\n108\n00:05:31.210 --> 00:05:32.170\nIt'll look at it.\n\n109\n00:05:32.170 --> 00:05:34.380\nIt'll say, well, I see Wes's host.\n\n110\n00:05:34.380 --> 00:05:35.650\nHe's he's up to 100 megabit.\n\n111\n00:05:35.650 --> 00:05:37.280\nNow, he's communicated a lot.\n\n112\n00:05:37.280 --> 00:05:39.290\nDon, he's he's just\nsending his first 100K.\n\n113\n00:05:39.290 --> 00:05:44.580\nI'm gonna drop Wes, so that Don can\nget the same access that Wes had.\n\n114\n00:05:44.580 --> 00:05:49.200\nYou know that I can send that 100K,\nand then, Wes will have to retransmit.\n\n115\n00:05:49.200 --> 00:05:50.310\nRight.\n\n116\n00:05:50.310 --> 00:05:54.710\nHeavy users on the network will get\npenalized, light users wont, and\n\n117\n00:05:54.710 --> 00:05:55.610\nthat's fair, right?\n\n118\n00:05:55.610 --> 00:05:57.550\nEverybody's getting equal access.\n\n119\n00:05:57.550 --> 00:05:59.580\n&gt;&gt; So in a scenario that you\nused in the first episode,\n\n120\n00:05:59.580 --> 00:06:02.260\nwhere maybe I'm watching Netflix, right?\n\n121\n00:06:02.260 --> 00:06:06.140\nAnd we obviously on our\nbusiness don't want that, which\n\n122\n00:06:06.140 --> 00:06:09.203\nalso makes me think you've been using\na traffic analyzer and you're on to me.\n\n123\n00:06:09.203 --> 00:06:11.570\n&gt;&gt; [LAUGH]\n&gt;&gt; Then it might say well hey you're\n\n124\n00:06:11.570 --> 00:06:15.720\nexceeding whatever that limit is, now\nwe're gonna start dropping that traffic.\n\n125\n00:06:15.720 --> 00:06:17.890\n&gt;&gt; Yeah and\nreally it's just based on statistics so\n\n126\n00:06:17.890 --> 00:06:19.820\nwe don't actually even\nhave to put in the limits.\n\n127\n00:06:19.820 --> 00:06:22.650\nYou don't have to say like Wes\nis limited to x amount of bytes,\n\n128\n00:06:22.650 --> 00:06:25.215\nit's just looking at it\nas a statistical average.\n\n129\n00:06:25.215 --> 00:06:26.960\nRight so that's the way it works.\n\n130\n00:06:26.960 --> 00:06:29.570\nThe only problem with red\nis it's not very granular.\n\n131\n00:06:29.570 --> 00:06:31.100\nIt's really just looking at hosts.\n\n132\n00:06:31.100 --> 00:06:32.950\nSo we talked about work traffic.\n\n133\n00:06:32.950 --> 00:06:36.890\nWes might be moving 100 megabits of\ndata and a lot of that might be Netflix.\n\n134\n00:06:36.890 --> 00:06:39.370\nBut on any given day.\n\n135\n00:06:39.370 --> 00:06:40.750\nBut some of it might be email.\n\n136\n00:06:40.750 --> 00:06:45.560\nMight be work related email, or\nhe might have a VOIP phone and he might\n\n137\n00:06:45.560 --> 00:06:49.710\nwatch a movie on Netflix for an hour, but\nhe'll only have a two minute phone call.\n\n138\n00:06:49.710 --> 00:06:53.390\nThat two minute phone call,\nthat's priority traffic, right?\n\n139\n00:06:53.390 --> 00:06:58.260\nBut red won't see that,\nred looks at the big picture.\n\n140\n00:06:58.260 --> 00:07:01.150\nSo weighted detection, w red,\nthat goes a step further.\n\n141\n00:07:01.150 --> 00:07:05.770\nAnd with w red It tracks the statistical\nand analysis just like before.\n\n142\n00:07:05.770 --> 00:07:07.880\nExcept now, it's looking at the protocol.\n\n143\n00:07:07.880 --> 00:07:10.980\nIt's going a little more\nbeyond just a host and\n\n144\n00:07:10.980 --> 00:07:13.560\nit's a more advanced\nform of what red does.\n\n145\n00:07:13.560 --> 00:07:16.220\nBut they both work the same way,\nit's just and\n\n146\n00:07:16.220 --> 00:07:19.700\nentire host versus all\nthe individual protocols and host.\n\n147\n00:07:19.700 --> 00:07:23.650\nAnd so now we figure out what's\nthe best traffic to drop,\n\n148\n00:07:23.650 --> 00:07:25.510\nversus just whatever came in last, right?\n\n149\n00:07:25.510 --> 00:07:28.790\nSo those are some neat techniques that can\nbe implemented again on the interface.\n\n150\n00:07:28.790 --> 00:07:31.200\nAnd something I didn't\nmention in the last episode,\n\n151\n00:07:31.200 --> 00:07:35.100\nI think I mentioned it tangentially but\nnot straight outright.\n\n152\n00:07:35.100 --> 00:07:40.250\nWhen we do quality of service and\nwe start doing traffic restrictions,we\n\n153\n00:07:40.250 --> 00:07:44.270\nalmost always do this on\nthe exit of the interface.\n\n154\n00:07:45.540 --> 00:07:48.470\nWhen you go to configure this you'll\nsee we could do this on the ingress.\n\n155\n00:07:48.470 --> 00:07:50.940\nYou can apply to interface on the way in.\n\n156\n00:07:50.940 --> 00:07:52.180\nBut we don't normally do that.\n\n157\n00:07:52.180 --> 00:07:55.662\nAnd the reason we don't is,\non the ingress,\n\n158\n00:07:55.662 --> 00:07:59.337\nthat traffic has already\nmade it to the router.\n\n159\n00:07:59.337 --> 00:08:00.838\nOr it's already made it to the switch.\n\n160\n00:08:00.838 --> 00:08:03.450\nSo whether you drop it or\nnot doesn't really matter.\n\n161\n00:08:03.450 --> 00:08:05.993\nIf you have a 100 megabit line coming in,\nand\n\n162\n00:08:05.993 --> 00:08:10.572\nit's running at 100% utilization coming\nin, then you start dropping traffic,\n\n163\n00:08:10.572 --> 00:08:15.560\nit makes no difference whatsoever because\nthe line is already completely consumed.\n\n164\n00:08:15.560 --> 00:08:18.430\nSo quality of service doesn't\nreally work well on the ingress.\n\n165\n00:08:18.430 --> 00:08:20.340\nYou can do it,\nit'll let you put the commands in.\n\n166\n00:08:20.340 --> 00:08:21.640\nIt's just kinda pointless.\n\n167\n00:08:21.640 --> 00:08:24.270\nSo, on the egress,\nthat's the one you control.\n\n168\n00:08:24.270 --> 00:08:26.430\nThe traffic hasn't made\nit to the interface yet.\n\n169\n00:08:26.430 --> 00:08:29.040\nYou dictate who gets that interface and\nwho doesn't.\n\n170\n00:08:29.040 --> 00:08:32.280\nSo quality of service is almost\nalways an outbound thing.\n\n171\n00:08:32.280 --> 00:08:35.570\nOn the inbound, that's where we do\nour marking and classification.\n\n172\n00:08:35.570 --> 00:08:37.750\nTraffic comes in,\nwe mark it and classify it.\n\n173\n00:08:37.750 --> 00:08:41.290\nOn the way out, we use the marking\nto actually make our decisions.\n\n174\n00:08:42.860 --> 00:08:45.040\nThere's one other technology\nI need to mention here, and\n\n175\n00:08:45.040 --> 00:08:49.950\nit's one that man I thought was gonna\ngo away, but it came back again.\n\n176\n00:08:49.950 --> 00:08:52.510\nIf you've read through\nthe exam objectives,\n\n177\n00:08:52.510 --> 00:08:55.810\nyou'll know that Frame Relay\nis no longer on the CCNA exam,\n\n178\n00:08:55.810 --> 00:08:59.450\nwhich a lot of us were thankful for\ncuz it was kinda overly complex.\n\n179\n00:08:59.450 --> 00:09:03.152\nSo Frame Relay is really kinda gone\naway and MPLS is really replaced it.\n\n180\n00:09:04.310 --> 00:09:09.740\nThe only problem is, with MPLS,\nif it's MPLS over an Ethernet network,\n\n181\n00:09:09.740 --> 00:09:13.890\nyou can take advantage of things like RED\nand WRED and other technologies like that.\n\n182\n00:09:13.890 --> 00:09:17.450\nBut, if the MPLS network is using\na tunnel, and the network is\n\n183\n00:09:17.450 --> 00:09:21.370\nhidden from you, it's very difficult\nto do quality of service over MPLS.\n\n184\n00:09:21.370 --> 00:09:24.400\nAnd so, what you can do,\nand it's gonna sound crazy,\n\n185\n00:09:24.400 --> 00:09:28.830\nbut you can do Frame Relay over MPLS.\n\n186\n00:09:28.830 --> 00:09:32.480\nFrame Relay protocol\nrunning on top of MPLS.\n\n187\n00:09:32.480 --> 00:09:36.840\nAnd the only reason you'd really do that\nis that in Frame Relay, you had some\n\n188\n00:09:36.840 --> 00:09:41.500\nextra functionality that could help you\ndo things like congestion management.\n\n189\n00:09:41.500 --> 00:09:45.650\nAnd you may have that MPLS and you may\nnot, based on the tunnel that's created.\n\n190\n00:09:45.650 --> 00:09:49.750\nAnd if you don't, you can use the pieces\nfrom Frame Relay and bring it in.\n\n191\n00:09:49.750 --> 00:09:52.620\nFortunately, we don't have to learn how to\nconfigure all that, but the two concepts I\n\n192\n00:09:52.620 --> 00:09:59.002\nwanna mention are what are called\nFECNs and BECNs, F-E-C-N and B-E-C-N.\n\n193\n00:09:59.002 --> 00:10:02.820\nThis is\nForward Early Congestion Notification and\n\n194\n00:10:02.820 --> 00:10:06.202\nBackwards Early Congestion Notification.\n\n195\n00:10:06.202 --> 00:10:09.072\nIt's really ECN, Early Congestion\nNotification is what it is based on, but\n\n196\n00:10:09.072 --> 00:10:11.440\nit runs in both directions forwards and\nbackwards.\n\n197\n00:10:11.440 --> 00:10:16.060\nAnd what happens is with Frame Relay it\nexpected all these different switches\n\n198\n00:10:16.060 --> 00:10:18.550\nbetween the telco network between us and\nthe destination.\n\n199\n00:10:18.550 --> 00:10:23.290\nAnd it can watch across that and see when\nit thought congestion was going to occur.\n\n200\n00:10:23.290 --> 00:10:27.040\nAnd it can send a notification back,\nit can send a notification back or\n\n201\n00:10:27.040 --> 00:10:31.000\nforward to let people know, hey,\nyou need to slow down a little bit.\n\n202\n00:10:31.000 --> 00:10:34.690\nIf you don't slow down right now, I'm\ngonna have to start dropping traffic or\n\n203\n00:10:34.690 --> 00:10:37.450\nsomebody else is gonna start dropping\ntraffic and you gonna do the retransmits.\n\n204\n00:10:37.450 --> 00:10:38.203\nSo you pick.\n\n205\n00:10:38.203 --> 00:10:42.885\n[LAUGH] You can either do re-transmits or\nyou can slow down a little.\n\n206\n00:10:42.885 --> 00:10:46.410\nNow your devices could act on that and\nthat worked out really well, right?\n\n207\n00:10:46.410 --> 00:10:49.320\nSo early congestion notification\nit was kind of baked in.\n\n208\n00:10:49.320 --> 00:10:52.440\nYou could tweak it and configure it but\nit was really baked into Frame Relay.\n\n209\n00:10:52.440 --> 00:10:56.482\nWhen you run Frame Relay on top of MPLS,\nyou now get that functionally there too.\n\n210\n00:10:56.482 --> 00:10:59.785\nSo RED and WRED,\nthose are probably the two most common.\n\n211\n00:10:59.785 --> 00:11:02.570\nThey're really easy to implement, they\nwork really great on Ethernet networks.\n\n212\n00:11:02.570 --> 00:11:06.793\nWhen you start getting into WAN interfaces\nthough if you can't use those, if for\n\n213\n00:11:06.793 --> 00:11:10.581\nsome reasons they aren't working,\nyou can switch over to Frame Relay,\n\n214\n00:11:10.581 --> 00:11:14.280\nFECN and BECN system and\nthey'll achieve the same result.\n\n215\n00:11:14.280 --> 00:11:15.600\n&gt;&gt; Now Don at the beginning\nof the episodes,\n\n216\n00:11:15.600 --> 00:11:18.290\none of the things you mentioned is\nthat we're gonna actually dive in and\n\n217\n00:11:18.290 --> 00:11:19.140\nsee this in action.\n\n218\n00:11:19.140 --> 00:11:20.580\nWe've talked about the concepts,\n\n219\n00:11:20.580 --> 00:11:23.730\ntalked about the theories are you gonna\nshow us how we would implement this?\n\n220\n00:11:23.730 --> 00:11:28.470\n&gt;&gt; Absolutely, so the first thing I just\nwanna kinda throw a little caveat here,\n\n221\n00:11:28.470 --> 00:11:31.660\nis that quality of service is really,\nreally hard, right?\n\n222\n00:11:31.660 --> 00:11:33.320\nIt's a difficult thing to do.\n\n223\n00:11:34.850 --> 00:11:35.810\nLet me clarify.\n\n224\n00:11:35.810 --> 00:11:38.030\nIt's actually really easy\nto do to put it in place.\n\n225\n00:11:38.030 --> 00:11:39.910\nIt's really hard to get it right.\n\n226\n00:11:39.910 --> 00:11:43.150\nAnd the reason is no\ntwo networks are equal.\n\n227\n00:11:43.150 --> 00:11:47.700\nSo to get quality of service right, you've\nreally gotta understand your network.\n\n228\n00:11:47.700 --> 00:11:51.122\nYou've really got to understand your\ntraffic, the protocols that are in use,\n\n229\n00:11:51.122 --> 00:11:54.147\nthe types of traffic, and\nyou really gotta understand your network.\n\n230\n00:11:54.147 --> 00:11:57.621\nAnd then you've gotta run through the\nformulas and tweak all the queues to get\n\n231\n00:11:57.621 --> 00:12:01.720\nthem the right size to match your network\nto get the ultimate performance out of it.\n\n232\n00:12:01.720 --> 00:12:06.561\nYou can spend weeks, months, even years\ngetting this configured properly and\n\n233\n00:12:06.561 --> 00:12:10.328\nimplemented in your network,\nthat's the really hard part.\n\n234\n00:12:10.328 --> 00:12:13.255\nBut if you just wanna deploy QoS and\nfollow some of Cisco's best practices you\n\n235\n00:12:13.255 --> 00:12:15.823\njust like their recommended numbers\nyou can actually have QoS up and\n\n236\n00:12:15.823 --> 00:12:19.380\nrunning in just a matter of minutes\nit's really not that big of a deal.\n\n237\n00:12:19.380 --> 00:12:20.425\nBut to get it tweaked and\n\n238\n00:12:20.425 --> 00:12:24.039\ncustomized to get the best performance\nout of your network that's the hard part.\n\n239\n00:12:24.039 --> 00:12:28.008\nAnd there are people that make their\nentire living just out of configuring\n\n240\n00:12:28.008 --> 00:12:31.989\nquality of service, and it's because\nit is a very, very complex thing.\n\n241\n00:12:31.989 --> 00:12:35.650\nSo what I'm gonna show you guys\nis what's called auto QoS.\n\n242\n00:12:35.650 --> 00:12:41.591\nAuto QoS is a fast way to get Cisco's best\npractice implementation put in place.\n\n243\n00:12:41.591 --> 00:12:44.006\nAnd once you do that\nyou can monitor it and\n\n244\n00:12:44.006 --> 00:12:47.230\nthen you just tweak it to\nmatch your environment.\n\n245\n00:12:47.230 --> 00:12:50.260\nAnd this is how I normally do is that\nI normally implement based on the best\n\n246\n00:12:50.260 --> 00:12:51.340\npractices.\n\n247\n00:12:51.340 --> 00:12:54.880\nAnd then I can monitor and see and\ntrack over the course of a month or\n\n248\n00:12:54.880 --> 00:12:56.500\nhowever long and make tweaks and\n\n249\n00:12:56.500 --> 00:12:59.150\nadjustments to get to where I want\ninstead of trying to start from scratch.\n\n250\n00:12:59.150 --> 00:13:01.520\nBecause you usually don't\nhave great documentation,\n\n251\n00:13:01.520 --> 00:13:03.900\nat least, most of the companies\nI've worked for haven't.\n\n252\n00:13:03.900 --> 00:13:06.450\nSo when you don't have that,\n\n253\n00:13:06.450 --> 00:13:11.000\nyou've gotta kind of just try some\nthings out and see what happens.\n\n254\n00:13:12.320 --> 00:13:13.900\nSo what I'm gonna do is\nget this put in place.\n\n255\n00:13:13.900 --> 00:13:16.540\nNow, Cisco routers and\nswitches have this auto system.\n\n256\n00:13:16.540 --> 00:13:19.090\nA lot of people don't know about it or\nhaven't seen it.\n\n257\n00:13:19.090 --> 00:13:22.630\nIt's a series of macros that\nare built into your devices\n\n258\n00:13:22.630 --> 00:13:25.140\nthat let you quickly implement\ncertain technologies.\n\n259\n00:13:25.140 --> 00:13:27.860\nWith QoS you'll see there's gonna be a lot\nof commands that we're gonna run through.\n\n260\n00:13:27.860 --> 00:13:29.440\nSo let me just start here.\n\n261\n00:13:29.440 --> 00:13:31.550\nI'm gonna jump into this switch.\n\n262\n00:13:31.550 --> 00:13:32.294\nThis switch,\n\n263\n00:13:32.294 --> 00:13:35.954\nactually let me see what version\nswitch this is cuz I don't remember.\n\n264\n00:13:35.954 --> 00:13:38.899\nI think this is a 29-6, it is a 3750.\n\n265\n00:13:38.899 --> 00:13:43.631\nSo I'm on a 3750, I think it's\nactually a 3750x, but anyhow, so\n\n266\n00:13:43.631 --> 00:13:47.740\nI'm on this 3750,\nwhich is a layer of three switch.\n\n267\n00:13:47.740 --> 00:13:51.720\nSo this switch could be\ndeployed as an access switch.\n\n268\n00:13:51.720 --> 00:13:53.620\nIt's a little over kill for access.\n\n269\n00:13:53.620 --> 00:13:58.129\nIt could be deployed as a distribution\nswitch, cuz this is layer three.\n\n270\n00:13:58.129 --> 00:14:01.188\nOr it could be a core switch,\nbecause while it is layer three and\n\n271\n00:14:01.188 --> 00:14:04.080\nit's kind of logic,\nit also has non-blocking ports.\n\n272\n00:14:04.080 --> 00:14:08.080\nSo it's got all gig ports and every port\nhas a true gig connection to the back\n\n273\n00:14:08.080 --> 00:14:09.880\nplane, so it's a great core switch, too.\n\n274\n00:14:09.880 --> 00:14:12.350\nSo 3750 is very flexible switches.\n\n275\n00:14:12.350 --> 00:14:16.150\nNot the cheapest thing you're\ngonna encounter out there but\n\n276\n00:14:16.150 --> 00:14:18.900\na very flexible and robust switch.\n\n277\n00:14:18.900 --> 00:14:21.579\nSo what I'm gonna do is I'm\ngonna take this device, and\n\n278\n00:14:21.579 --> 00:14:23.873\nI'm gonna implement some\nquality of service.\n\n279\n00:14:23.873 --> 00:14:27.154\nLet me just do a quick show cdp neighbors.\n\n280\n00:14:27.154 --> 00:14:31.640\nAnd on this switch I have a Voice\nover IP phone plugged in.\n\n281\n00:14:31.640 --> 00:14:36.670\nSee this phone right here, you can\nalways spot Cisco phones because their\n\n282\n00:14:36.670 --> 00:14:41.920\ndevice ID starts with SEP and then it's\ngot the Mac address kinda tucked into it.\n\n283\n00:14:41.920 --> 00:14:47.263\nBut if I look over here I can see it's\nan IP phone plugged into FA1-0-12.\n\n284\n00:14:47.263 --> 00:14:50.330\nSo let's say I wanna get that port setup.\n\n285\n00:14:50.330 --> 00:14:54.820\nI want the port set up so it will classify\ntraffic, so I need to do my marking.\n\n286\n00:14:54.820 --> 00:14:59.060\nBut that it'll also manage bandwidth\non an interface because I've got\n\n287\n00:14:59.060 --> 00:15:00.800\nreturn traffic for that voice call.\n\n288\n00:15:00.800 --> 00:15:04.088\nYou've got data going out from me\ntalking to whoever I'm calling,\n\n289\n00:15:04.088 --> 00:15:07.847\nand you've got data coming back so that\nI can hear the person on the other end.\n\n290\n00:15:07.847 --> 00:15:10.905\nAnd most VoIP phones have two\nnetwork jacks on them, so\n\n291\n00:15:10.905 --> 00:15:13.945\nyou can daisy chain the person's computer.\n\n292\n00:15:13.945 --> 00:15:15.490\nTheir computer plugs into the phone.\n\n293\n00:15:15.490 --> 00:15:16.920\nThe phone plugs into the wall.\n\n294\n00:15:16.920 --> 00:15:21.630\nSo now you've got the computer's traffic\nand the phone's traffic on the same port.\n\n295\n00:15:21.630 --> 00:15:24.982\nIf I look at the configuration for\n\n296\n00:15:24.982 --> 00:15:29.568\nfa1/0/12, I see I'm configured here for\njust one VLAN,\n\n297\n00:15:29.568 --> 00:15:33.480\neverything's just VLAN1, but a lot of\ntimes we'll set up for more than one VLAN.\n\n298\n00:15:33.480 --> 00:15:37.800\nSo, you'll have your data on one VLAN and\nyour voice traffic on another.\n\n299\n00:15:37.800 --> 00:15:40.010\nAnd now, I've got the two different sets.\n\n300\n00:15:40.010 --> 00:15:44.440\nBut right now, if I plug my computer\ninto this phone, the computer and\n\n301\n00:15:44.440 --> 00:15:49.720\nthe phone are both on the same VLAN both\ncarrying traffic on the same link and\n\n302\n00:15:49.720 --> 00:15:51.690\nboth being treated equally, right?\n\n303\n00:15:51.690 --> 00:15:55.287\nSo when I get my return\ntraffic it's gonna be FIFO.\n\n304\n00:15:55.287 --> 00:15:58.227\nAnd there will be times where my\ncomputer might be downloading a file and\n\n305\n00:15:58.227 --> 00:16:00.922\nit gets prioritized over my Voice\nover IP's return traffic and so\n\n306\n00:16:00.922 --> 00:16:03.862\nnow my call quality starts breaking\nI have a hard time hearing the person\n\n307\n00:16:03.862 --> 00:16:06.424\non the other side when I'm\ndownloading files on my computer.\n\n308\n00:16:06.424 --> 00:16:10.481\nI don't want that, so, I want quality\nof service turned on here, right.\n\n309\n00:16:10.481 --> 00:16:13.001\nNow, when we configure quality of service,\n\n310\n00:16:13.001 --> 00:16:15.799\nthere's a few different\ncommands that get used.\n\n311\n00:16:15.799 --> 00:16:18.991\nYou can see if quality of service is\nturned on cuz you'll see the commands in\n\n312\n00:16:18.991 --> 00:16:20.267\nthe running configuration.\n\n313\n00:16:20.267 --> 00:16:23.453\nAnd this switch really doesn't\nhave much done on it at all.\n\n314\n00:16:23.453 --> 00:16:26.228\nI think the majority of what\nwe are gonna see are defaults.\n\n315\n00:16:26.228 --> 00:16:30.968\nIt's NYCORE2 is the name of the switch,\nbut after that, so far, if we just kinda\n\n316\n00:16:30.968 --> 00:16:35.602\nskip through the config, everything's\npretty much at the factory defaults.\n\n317\n00:16:35.602 --> 00:16:39.256\nSwitch doesn't even have an IP,\nin fact, other than the host name,\n\n318\n00:16:39.256 --> 00:16:41.860\nthis is a completely\nfactory default switch.\n\n319\n00:16:41.860 --> 00:16:46.150\nEverything else here is straight\nout of the box, so that's good.\n\n320\n00:16:46.150 --> 00:16:50.110\nAll right, so if I wanna get\nquality servers turned on, well,\n\n321\n00:16:50.110 --> 00:16:51.550\nI need to get in and configure that.\n\n322\n00:16:51.550 --> 00:16:54.870\nThere's two main things I need to do,\nthe first thing is,\n\n323\n00:16:54.870 --> 00:16:57.410\nquality of service is actually\nnot turned on by default.\n\n324\n00:16:57.410 --> 00:17:01.121\nWell, on most switches, I've seen one or\ntwo that had it, it's really rare.\n\n325\n00:17:01.121 --> 00:17:03.780\nSo, normally,\nquality of service is off by default.\n\n326\n00:17:03.780 --> 00:17:12.450\nIf you did a show mls?,\nsee how I've got this qos?\n\n327\n00:17:12.450 --> 00:17:18.350\nSo, show mls, qos, that lets us see the\nquality of service and when we take a look\n\n328\n00:17:18.350 --> 00:17:21.800\nat that, you'll see all the different\nstatistics I can pull up and other things.\n\n329\n00:17:21.800 --> 00:17:26.715\nAnd I do show mls, qos interface fa1/0/12,\nit's gonna show me\n\n330\n00:17:26.715 --> 00:17:31.702\nthe status and I can see right here\nquality of service is disabled.\n\n331\n00:17:31.702 --> 00:17:35.640\nIt's just not even turned on,\nokay, trust state is not trusted,\n\n332\n00:17:35.640 --> 00:17:39.850\neverything else is no class of service,\nit's just not turned on, all right.\n\n333\n00:17:39.850 --> 00:17:44.590\nAnd that just means that it's not in use,\nand that's what I expect.\n\n334\n00:17:44.590 --> 00:17:47.215\nNow, if I turn on quality of service,\n\n335\n00:17:47.215 --> 00:17:51.940\nI just jump in to my configuration and\nI run mls qos.\n\n336\n00:17:53.050 --> 00:17:56.950\nThat just turned on quality of\nservers on the switch, all right, and\n\n337\n00:17:56.950 --> 00:18:01.970\nif I do a show mls qos interface fa1/0/12,\n\n338\n00:18:01.970 --> 00:18:05.470\nand I take a look at that interface now.\n\n339\n00:18:06.830 --> 00:18:11.480\nNow qos is enabled and\nsee on my trust state is not trusted.\n\n340\n00:18:11.480 --> 00:18:14.710\nIf I have classified traffic\ncoming in this interface,\n\n341\n00:18:14.710 --> 00:18:17.280\nI'm gonna throw the class away,\nI'm not gonna trust it.\n\n342\n00:18:17.280 --> 00:18:19.790\nBut if it's a VoIP phone on the other\nside, then I might trust it,\n\n343\n00:18:19.790 --> 00:18:21.160\nI'll need to change that, right.\n\n344\n00:18:21.160 --> 00:18:23.692\nSo that goes back to trust I\ntalked about in the last episode.\n\n345\n00:18:23.692 --> 00:18:28.201\nSo it is an enabled, but when you look\nat it, the qos mode is still port-based.\n\n346\n00:18:28.201 --> 00:18:33.760\nThere's not really anything\ntruly configured on it.\n\n347\n00:18:33.760 --> 00:18:39.640\nIf I really get into that interface and\n\n348\n00:18:39.640 --> 00:18:43.920\nI pull up the buffers, I can take a look\nat the buffers and here they are.\n\n349\n00:18:43.920 --> 00:18:45.560\nI've got the port is mapped to qset 1,\n\n350\n00:18:45.560 --> 00:18:48.544\nthe allocations between\nthe queues are 25 25 25 25.\n\n351\n00:18:48.544 --> 00:18:51.660\nIt's got four queues 25% in each one,\n\n352\n00:18:51.660 --> 00:18:56.460\nit's all equal, everything's treated the\nsame and that's it that's default right.\n\n353\n00:18:56.460 --> 00:18:59.100\nSo even though I turned on\nqos it's still FIFO it's\n\n354\n00:18:59.100 --> 00:19:02.250\nstill first in first out it's\nnot really doing anything.\n\n355\n00:19:02.250 --> 00:19:06.000\nOn a Cisco switch it's normally\ndoing what's called fair\n\n356\n00:19:06.000 --> 00:19:07.920\nqueueing which is a form of red.\n\n357\n00:19:07.920 --> 00:19:13.410\nSo that's there it's up,\nthat's basically what it's doing.\n\n358\n00:19:13.410 --> 00:19:17.770\nBut if I look at my running configuration\nI'm not really gonna see much, right.\n\n359\n00:19:17.770 --> 00:19:19.960\nI'll see that running mls\nqos command that I ran,\n\n360\n00:19:19.960 --> 00:19:22.040\nthat'll be tucked away in here somewhere.\n\n361\n00:19:22.040 --> 00:19:23.723\nIf we scroll through, there it is, but\n\n362\n00:19:23.723 --> 00:19:27.000\notherwise all my interfaces\nare still normal, right.\n\n363\n00:19:27.000 --> 00:19:30.140\nSo while I've turned on qos I\nhaven't really created any major\n\n364\n00:19:30.140 --> 00:19:31.610\nimpact on the switch.\n\n365\n00:19:31.610 --> 00:19:37.600\nAll right, now for the hard part,\nI'm gonna jump into the interface and\n\n366\n00:19:37.600 --> 00:19:40.240\nI'm gonna get into interface fa1/0/12,\nall right.\n\n367\n00:19:40.240 --> 00:19:42.280\nIf I do a show run for\n\n368\n00:19:42.280 --> 00:19:48.230\ninterface fa1/0/12 right now it's\njust at the defaults, nothing okay.\n\n369\n00:19:48.230 --> 00:19:52.260\nI'm gonna use an auto script\nto get qos turned on.\n\n370\n00:19:52.260 --> 00:19:55.660\nRight and depending on your switch or\nrouter, there may be a number of different\n\n371\n00:19:55.660 --> 00:19:59.090\nautoscripts, on this one the qos\none is the only one that I have.\n\n372\n00:19:59.090 --> 00:20:01.480\nSo I'm gonna say auto qos and\n\n373\n00:20:01.480 --> 00:20:04.160\nthen you can tell it a little\nbit about what you wanna do.\n\n374\n00:20:04.160 --> 00:20:06.550\nAm I just trying to classify traffic?\n\n375\n00:20:06.550 --> 00:20:11.720\nAm I trying to trust any of the dev serve\ncode point or classes service markings?\n\n376\n00:20:11.720 --> 00:20:14.351\nAm I configuring this for\nvoice over IP or video?\n\n377\n00:20:14.351 --> 00:20:16.866\nRight, these are templates\nthat Cisco has created and\n\n378\n00:20:16.866 --> 00:20:19.008\nvoice over IP is kinda\nthe most important one.\n\n379\n00:20:19.008 --> 00:20:24.402\nI've got a VOIP phone here so that's what\nI wanna do, I'm gonna say auto qos voip.\n\n380\n00:20:24.402 --> 00:20:28.585\nAnd from here, I can actually I can't stop\nthere I have to go a little bit further\n\n381\n00:20:28.585 --> 00:20:31.902\nbecause I need to tell it what's\non the other end of this right.\n\n382\n00:20:31.902 --> 00:20:34.597\nI might have an actual Cisco IP phone, and\n\n383\n00:20:34.597 --> 00:20:38.524\nour switch can intelligently\ntalk to that IP phone, right.\n\n384\n00:20:38.524 --> 00:20:42.000\nIt can do things like voice VLANs and\nall that crazy stuff.\n\n385\n00:20:42.000 --> 00:20:44.960\nIt could be that I've got a third\nparty like a polycom phone and\n\n386\n00:20:44.960 --> 00:20:46.640\nI can't talk to it like\nI can in a Cisco phone.\n\n387\n00:20:46.640 --> 00:20:49.290\nAnd so, for that one, I would need\nto tell it that I'm gonna trust and\n\n388\n00:20:49.290 --> 00:20:51.950\nI want it to configure\nthe markings on that phone.\n\n389\n00:20:51.950 --> 00:20:55.480\nI could also have a soft phone\ninstead of a hard phone.\n\n390\n00:20:55.480 --> 00:20:58.680\nThose are little different too, cuz the\nsoft phones don't do the classification.\n\n391\n00:20:58.680 --> 00:21:02.970\nBut I've got a real phone, so\nI'm gonna say, cisco phone, all right.\n\n392\n00:21:02.970 --> 00:21:07.240\nSo once I've got that in place, I can run\nthat and see how it paused right there?\n\n393\n00:21:07.240 --> 00:21:09.820\nAnd it's kinda sitting and\nit's taking a moment?\n\n394\n00:21:09.820 --> 00:21:14.220\nIn the background, it just run a script,\nit ran a script and\n\n395\n00:21:14.220 --> 00:21:15.820\nput it in place, all right.\n\n396\n00:21:15.820 --> 00:21:18.790\nAnd as the script ran through, it started\nassigning information to the port, and\n\n397\n00:21:18.790 --> 00:21:22.390\nit got a little mad, because part of\nthe script assigns these policies before\n\n398\n00:21:22.390 --> 00:21:25.000\nthey're made, and then it turns around and\nit makes the policies.\n\n399\n00:21:25.000 --> 00:21:27.610\nSo, it takes it just a moment\nto go through and do that.\n\n400\n00:21:27.610 --> 00:21:31.810\nBut what it just did in the background\nis it configured a best practices,\n\n401\n00:21:31.810 --> 00:21:36.710\nstandards based, voice over IP\nconfiguration for quality service.\n\n402\n00:21:36.710 --> 00:21:40.576\nAnd now if I do a show run for\ninterface fa1/0/12,\n\n403\n00:21:40.576 --> 00:21:44.863\nthere's a little bit more in\nthere now isn't there, right.\n\n404\n00:21:44.863 --> 00:21:47.014\nEarlier there was just one line which was,\n\n405\n00:21:47.014 --> 00:21:49.477\nor actually there wasn't a line at all,\nright.\n\n406\n00:21:49.477 --> 00:21:52.735\nCuz I was on VLAN 1 so\nthere were no lines, so\n\n407\n00:21:52.735 --> 00:21:55.690\nall of this was just add it, okay.\n\n408\n00:21:55.690 --> 00:21:57.056\nWell what did it do?\n\n409\n00:21:57.056 --> 00:22:01.973\nThe first thing it did is it change\nthe queues, instead of having 25, 25,\n\n410\n00:22:01.973 --> 00:22:06.015\n25, 25, I've got 10,\n10, 60, 20, all right.\n\n411\n00:22:06.015 --> 00:22:07.504\nStill adds up to 100, but\n\n412\n00:22:07.504 --> 00:22:12.456\nits increased the size of one queue while\ndecreasing the size of the other queues.\n\n413\n00:22:12.456 --> 00:22:16.569\nAnd that way it can take less important\ntraffic and send it to the smaller queues,\n\n414\n00:22:16.569 --> 00:22:17.731\nthe smaller buffers.\n\n415\n00:22:17.731 --> 00:22:19.879\nAnd it can take important traffic,\nlike voice over IP and\n\n416\n00:22:19.879 --> 00:22:21.060\nmove it to the bigger buffers.\n\n417\n00:22:21.060 --> 00:22:23.884\nIt's setting aside memory for\nthese communications,\n\n418\n00:22:23.884 --> 00:22:27.650\nyou can see that it's doing\na priority queue on outbound traffic.\n\n419\n00:22:27.650 --> 00:22:30.320\nOutbound is where we prioritize,\ninbound we can't really prioritize,\n\n420\n00:22:30.320 --> 00:22:31.920\nthe traffic's already come in.\n\n421\n00:22:31.920 --> 00:22:34.510\nWe can see that it's turned on trusting,\n\n422\n00:22:34.510 --> 00:22:37.110\nit's gonna trust any\nmarkings the phone sets.\n\n423\n00:22:37.110 --> 00:22:39.970\nIf you have a Cisco phone,\nyou can go into Cisco phone settings and\n\n424\n00:22:39.970 --> 00:22:42.330\nset it to express forward or\nwhatever level you want and\n\n425\n00:22:42.330 --> 00:22:44.400\nwe'll trust that markings so\nwe don't have to do it ourselves.\n\n426\n00:22:45.570 --> 00:22:49.800\nBut if it isn't, we see that auto\nqos statement is still there and\n\n427\n00:22:49.800 --> 00:22:52.490\nwe've got a service policy attached.\n\n428\n00:22:52.490 --> 00:22:56.480\nWhat's the service policy, well, remember\nall that stuff about traffic shaping and\n\n429\n00:22:56.480 --> 00:22:58.780\ntraffic policing and all that?\n\n430\n00:22:58.780 --> 00:23:03.900\nYour service policy is what defines that,\nif I do a I can do a show policy map or\n\n431\n00:23:03.900 --> 00:23:07.111\nI'll just do the show\nrunning configuration.\n\n432\n00:23:07.111 --> 00:23:10.308\nIf we take a lot at,\nactually let me get out of config,\n\n433\n00:23:10.308 --> 00:23:14.500\nif we take a lot at the running\nconfiguration there is a lot more added to\n\n434\n00:23:14.500 --> 00:23:16.794\nmy config than just on the interface.\n\n435\n00:23:16.794 --> 00:23:19.154\nSo if I just go and\ntake a look at that running config,\n\n436\n00:23:19.154 --> 00:23:22.670\nwhen we start to go through,\neverything looks pretty normal so far.\n\n437\n00:23:22.670 --> 00:23:27.250\nAnd then, we get to this giant block, now,\n\n438\n00:23:27.250 --> 00:23:31.270\nimagine how long this episode would be if\nI typed in all this stuff myself, right.\n\n439\n00:23:31.270 --> 00:23:34.970\nLet's go a step further, imagine how\nsmart I'd have be to be to know all these\n\n440\n00:23:34.970 --> 00:23:37.160\ncommands I don't know them right.\n\n441\n00:23:37.160 --> 00:23:40.910\nWhen you plan out quality of service it's\nall about tweaking and customizing and\n\n442\n00:23:40.910 --> 00:23:44.450\nthese are standard templates that\nCisco has created and put in place.\n\n443\n00:23:44.450 --> 00:23:48.400\nAnd we could jump in and tweak them if\nwe really know what we're looking for,\n\n444\n00:23:48.400 --> 00:23:50.570\nif we really know and\nunderstand our traffic.\n\n445\n00:23:50.570 --> 00:23:51.890\nBut you'll see as it's\ncoming through here and\n\n446\n00:23:51.890 --> 00:23:54.560\nsetting up some of\nthe source route queuing.\n\n447\n00:23:54.560 --> 00:23:57.380\nWe've got our input bandwidth and\nthresholds, our buffers.\n\n448\n00:23:57.380 --> 00:24:00.211\nAnd it's basically defining\nthese templates that can then be\n\n449\n00:24:00.211 --> 00:24:01.359\nreused somewhere else.\n\n450\n00:24:01.359 --> 00:24:06.540\nSo, it's created class of service maps,\ndiff serve code point maps, and so on.\n\n451\n00:24:06.540 --> 00:24:07.338\nYou may not use all these.\n\n452\n00:24:07.338 --> 00:24:09.074\nYou may not use any of them.\n\n453\n00:24:09.074 --> 00:24:11.068\nBut these are all templates\nthat are put in place.\n\n454\n00:24:11.068 --> 00:24:15.604\nAnd so that's the first thing you'll\nnotice is this giant block of templates\n\n455\n00:24:15.604 --> 00:24:18.619\nthat have all been dumped in there and\nput in place.\n\n456\n00:24:18.619 --> 00:24:19.238\nAll right.\n\n457\n00:24:19.238 --> 00:24:24.226\nAnd then as we get down a little further,\nyou're gonna find some class maps.\n\n458\n00:24:24.226 --> 00:24:26.790\nNow, class maps by themselves\ndon't do anything.\n\n459\n00:24:26.790 --> 00:24:29.982\nYou have to attach them to a service\npolicy to actually get them to do\n\n460\n00:24:29.982 --> 00:24:30.552\nanything.\n\n461\n00:24:30.552 --> 00:24:34.668\nBut the class map is how it's classifying\ntraffic, and look what it's got here.\n\n462\n00:24:34.668 --> 00:24:39.870\nClass-map match-all\nAutoQoS-VoIP-RTP-Trust,\n\n463\n00:24:39.870 --> 00:24:43.470\nlooking for real time protocol,\nwhat our voice call uses.\n\n464\n00:24:43.470 --> 00:24:47.698\nAnd if it finds it,\nit's matching that ip dscp ef.\n\n465\n00:24:47.698 --> 00:24:51.530\nIf something is flagged as\nexpress forward, right?\n\n466\n00:24:51.530 --> 00:24:54.280\nThat's gonna match this class right here,\nthat's RTP and\n\n467\n00:24:54.280 --> 00:24:55.710\nwe're gonna move that along.\n\n468\n00:24:55.710 --> 00:24:59.932\nAfter that,\nyou got diffserv code point cs3 and af31.\n\n469\n00:24:59.932 --> 00:25:04.726\nThat 31, those are those numbers I was\ntalking about in the last episode how\n\n470\n00:25:04.726 --> 00:25:10.582\nthere was 11 through 14, 21 through 24,\n31 through 34, and 41 through 44.\n\n471\n00:25:10.582 --> 00:25:16.010\nHere's 31, so this is tier three\nlevel one traffic that it's flagging.\n\n472\n00:25:16.010 --> 00:25:18.918\nSo that's gonna get flagged\nas control traffic.\n\n473\n00:25:18.918 --> 00:25:20.307\nAnd then after that,\n\n474\n00:25:20.307 --> 00:25:24.946\nthere's one that's not showing up\nhere which is like a default class.\n\n475\n00:25:24.946 --> 00:25:29.040\nI think we actually see that a little\nbit lower if I'd scroll down a bit.\n\n476\n00:25:29.040 --> 00:25:32.168\nLet me,\nI'm kinda zooming all over the place here.\n\n477\n00:25:32.168 --> 00:25:35.060\nIn the policy map,\nhere's where it brings it in.\n\n478\n00:25:35.060 --> 00:25:38.693\nAnd it says, all right, so\nanything that I've flagged for\n\n479\n00:25:38.693 --> 00:25:42.772\ntrust, for RTP, we're gonna set\nthat DiffServ code point to ef.\n\n480\n00:25:42.772 --> 00:25:46.428\nThat's what we want, and\nthen it's doing traffic policing.\n\n481\n00:25:46.428 --> 00:25:47.030\nRight?\n\n482\n00:25:47.030 --> 00:25:48.794\nNot shaping but policing.\n\n483\n00:25:48.794 --> 00:25:51.788\nAnd it's setting the bandwidth\nthat it's allowing.\n\n484\n00:25:51.788 --> 00:25:55.663\nOkay?\nAnd so it's got this thing set up for\n\n485\n00:25:55.663 --> 00:26:01.123\n320 kilobits and\nit's allowing 8000 more bits or\n\n486\n00:26:01.123 --> 00:26:03.750\neight kilobits for burst.\n\n487\n00:26:03.750 --> 00:26:06.920\nSo it'll actually let it burst\nover that limit if it needs to.\n\n488\n00:26:06.920 --> 00:26:11.628\nBut if it goes above that, if it exceeds,\nit's gonna get policed, right,\n\n489\n00:26:11.628 --> 00:26:12.666\nversus shaped.\n\n490\n00:26:12.666 --> 00:26:15.327\nAnd then we can see\nthe control traffic down here.\n\n491\n00:26:15.327 --> 00:26:19.690\nControl traffic needs much less bandwidth,\nand so they've got 32K set aside with that\n\n492\n00:26:19.690 --> 00:26:22.560\n8K burst, and if they exceed,\nthey'll police it.\n\n493\n00:26:22.560 --> 00:26:24.648\nSo they've got those limits in place.\n\n494\n00:26:24.648 --> 00:26:26.319\nWhat about everything else?\n\n495\n00:26:26.319 --> 00:26:29.805\nWell, there's actually another class that\nwe don't see here called class default.\n\n496\n00:26:29.805 --> 00:26:33.491\nAnd class default, if we don't configure\nit, becomes what's called scavenger class.\n\n497\n00:26:33.491 --> 00:26:35.273\nIt just takes it left, right?\n\n498\n00:26:35.273 --> 00:26:40.229\nVoice over IP is always going\nto have 320K if it needs it.\n\n499\n00:26:40.229 --> 00:26:43.455\nAnd the control will always\nhave 32K if it needs it.\n\n500\n00:26:43.455 --> 00:26:46.006\nIf it doesn't need it then it's\navailable other stuff can take it,\n\n501\n00:26:46.006 --> 00:26:47.096\nit can scavenge it, right?\n\n502\n00:26:47.096 --> 00:26:48.813\nAnd then there's the rest of\nthe bandwidth on the line.\n\n503\n00:26:48.813 --> 00:26:51.108\nThis is more than a 320K line.\n\n504\n00:26:51.108 --> 00:26:52.399\nI think it's a gigabit interface.\n\n505\n00:26:52.399 --> 00:26:54.940\nSo all that other bandwidth is\navailable to scavenger class.\n\n506\n00:26:54.940 --> 00:26:58.233\nBut I've got 320K right here if I need it.\n\n507\n00:26:58.233 --> 00:27:01.679\nAll right, so that's the policy methods\nin place that would then tie to\n\n508\n00:27:01.679 --> 00:27:03.932\nthe interface to actually\nmake all this work.\n\n509\n00:27:03.932 --> 00:27:07.990\nSo there's a lot of moving pieces\ninvolved with quality of service.\n\n510\n00:27:07.990 --> 00:27:15.800\nAnd if I get back out\nto my exec prompt here.\n\n511\n00:27:15.800 --> 00:27:21.439\nEarlier, I did a show mls\nqos interface fa1/0/12 and\n\n512\n00:27:21.439 --> 00:27:26.287\nwe saw where the buffers\nwere 25 25 25 25 and\n\n513\n00:27:26.287 --> 00:27:29.240\ntrust was turned off, right?\n\n514\n00:27:29.240 --> 00:27:33.111\nBut now when I take a look at that\ninterface, I can come in here and\n\n515\n00:27:33.111 --> 00:27:34.711\nI can see, I am trusting.\n\n516\n00:27:34.711 --> 00:27:38.647\nI am trusting the marks that come from\nthat phone, if the phone's set up for it.\n\n517\n00:27:38.647 --> 00:27:42.794\nAnd we can see a little bit more if I do,\nwell let's see,\n\n518\n00:27:42.794 --> 00:27:47.680\nshow mls qos, actually,\nshoot I did want that command.\n\n519\n00:27:47.680 --> 00:27:50.449\nIf I add buffers to the end.\n\n520\n00:27:50.449 --> 00:27:53.030\nAnd I can see my queues.\n\n521\n00:27:53.030 --> 00:27:54.180\nThey're not 25 25 25 25 are they?\n\n522\n00:27:54.180 --> 00:27:57.255\nThey're 10 10 26 54.\n\n523\n00:27:57.255 --> 00:28:00.992\nI know what you're thinking is that\nearlier didn't that command say 10\n\n524\n00:28:00.992 --> 00:28:01.845\n10 60 20?\n\n525\n00:28:01.845 --> 00:28:04.964\nWell the system has optimized it and\nit's been moved around.\n\n526\n00:28:04.964 --> 00:28:09.344\nThat'll happen, the system optimizes those\nnumbers change still pretty close to 60\n\n527\n00:28:09.344 --> 00:28:12.138\nand 20 right but\nit has changed it a bit to get that set.\n\n528\n00:28:12.138 --> 00:28:15.445\nSo we can see that now we're\nactively doing quality of service on\n\n529\n00:28:15.445 --> 00:28:16.986\nthis particular interface.\n\n530\n00:28:16.986 --> 00:28:20.909\nAt least on traffic\nthat's coming back to me.\n\n531\n00:28:20.909 --> 00:28:24.799\nSo, if I'm on this phone, what I'm hearing\nis getting quality of service applied.\n\n532\n00:28:24.799 --> 00:28:26.690\nWhat I'm sending is getting marked.\n\n533\n00:28:27.730 --> 00:28:33.265\nBut somewhere down the line it's gotta\nbe qos to be able to get improved or\n\n534\n00:28:33.265 --> 00:28:34.189\nwhatever.\n\n535\n00:28:34.189 --> 00:28:36.710\nSo I would now need to go to my\nWAN interfaces or whatever and\n\n536\n00:28:36.710 --> 00:28:40.158\nconfigure the other side of this to make\nsure that my outbound traffic is getting\n\n537\n00:28:40.158 --> 00:28:40.988\noptimized, too.\n\n538\n00:28:40.988 --> 00:28:43.719\nI've really only optimized one side of it,\nright?\n\n539\n00:28:43.719 --> 00:28:47.074\nSo as far as commands, I didn't really\nenter all that many commands, right?\n\n540\n00:28:47.074 --> 00:28:50.229\nAnd mostly I used the auto qos\nscript to get this put in place.\n\n541\n00:28:50.229 --> 00:28:52.733\nBut if you look at the config\nit's a lot of commands and\n\n542\n00:28:52.733 --> 00:28:56.195\nthat's why Cisco doesn't want you to\nhave to configure it for the CC&amp;A.\n\n543\n00:28:56.195 --> 00:28:59.459\nThey save that for\nthe higher end certifications cuz it does,\n\n544\n00:28:59.459 --> 00:29:01.923\nit gets really hard,\ndesigning it properly.\n\n545\n00:29:01.923 --> 00:29:05.389\nAnd you can make mistakes and\nyou can have a gig line and\n\n546\n00:29:05.389 --> 00:29:07.948\nnow you're only using 20 megs of it.\n\n547\n00:29:07.948 --> 00:29:10.634\nAnd the rest of it never gets used\ncuz you've got bad policing setup or\n\n548\n00:29:10.634 --> 00:29:12.240\nsomething that can happen.\n\n549\n00:29:12.240 --> 00:29:13.844\nAnd you can really mess up the network.\n\n550\n00:29:13.844 --> 00:29:17.230\nSo you want to make sure that you\nunderstand what you're doing with it.\n\n551\n00:29:17.230 --> 00:29:18.839\nThese auto qos scripts\nare pretty safe though.\n\n552\n00:29:18.839 --> 00:29:21.195\nIf you throw them out there,\nthey work pretty well.\n\n553\n00:29:21.195 --> 00:29:23.589\n&gt;&gt; Well, Don, thank you for\nactually showing us the hands-on part.\n\n554\n00:29:23.589 --> 00:29:24.940\nWe hope you enjoyed it.\n\n555\n00:29:24.940 --> 00:29:26.875\nIt does look like we're coming\nto the end of another episode.\n\n556\n00:29:26.875 --> 00:29:30.580\nBut before we do, Don, do you have any\nparting words on quality of service and\n\n557\n00:29:30.580 --> 00:29:32.347\nwhat the viewers might need to know?\n\n558\n00:29:32.347 --> 00:29:34.820\n&gt;&gt; If you don't have a lab environment,\nget one.\n\n559\n00:29:34.820 --> 00:29:38.240\nYou don't wanna just roll out quality\nof service on your production network.\n\n560\n00:29:38.240 --> 00:29:39.180\nIt can be a nightmare,\n\n561\n00:29:39.180 --> 00:29:42.260\nbecause you usually don't have that\nfull understanding of the network.\n\n562\n00:29:42.260 --> 00:29:43.999\nSo test it out in the lab, try it out.\n\n563\n00:29:43.999 --> 00:29:45.517\nDo some test communications.\n\n564\n00:29:45.517 --> 00:29:48.796\nUse the ping protocol, because ping can\nrun on different ports with different\n\n565\n00:29:48.796 --> 00:29:51.650\nsizes so you can test out\nwhether qos is actually working.\n\n566\n00:29:51.650 --> 00:29:54.909\nMake sure you test it throughly\nbefore rolling it into production.\n\n567\n00:29:54.909 --> 00:29:58.310\nAnd always back up your configs so\nyou can roll back if you need to, so\n\n568\n00:29:58.310 --> 00:29:59.630\nyou can undo the changes.\n\n569\n00:29:59.630 --> 00:30:02.178\nWhen you start messing with your\nbuffers you can do all sorts,\n\n570\n00:30:02.178 --> 00:30:04.922\nyou can lock yourself out of\nthe equipment if you're not careful,\n\n571\n00:30:04.922 --> 00:30:06.788\nso make sure you've\nalways got that backup.\n\n572\n00:30:06.788 --> 00:30:10.341\n&gt;&gt; Well that's a great place to wrap\nthis one up so we're gonna go ahead and\n\n573\n00:30:10.341 --> 00:30:11.476\nsign out for ITProTV.\n\n574\n00:30:11.476 --> 00:30:12.912\nI've been your host Wes Bryan.\n\n575\n00:30:12.912 --> 00:30:15.011\n&gt;&gt; And I'm Don Pezet\n&gt;&gt; And we'll see you next time.\n\n576\n00:30:15.011 --> 00:30:21.908\n[MUSIC]\n\n577\n00:30:21.908 --> 00:30:25.361\n&gt;&gt; Thank you for watching ITPro.TV.\n\n",
          "vimeoId": "190928839"
        }
      ],
      "title": "Infrastructure Services"
    },
    {
      "episodes": [
        {
          "description": "In this episode, Wes and Don explore the simple network management  protocol or SNMP. They talk about the differences between the versions of SNMP, i.e. versions 1,2 and 3 as well as the benefits and drawbacks of the different versions including configuration and security. They will demonstrate how to set up the SNMP protocols within a network.",
          "length": "2142",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/cisco-ccna200105/cisco-ccna200105-5-1-snmp-102016.00_35_26_10.Still001.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/cisco-ccna200105/cisco-ccna200105-5-1-snmp-102016.00_35_26_10.Still001-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/cisco-ccna200105/cisco-ccna200105-5-1-snmp-102016.00_35_26_10.Still001-sm.jpg",
          "title": "Simple Network Management Protocol",
          "transcript": "WEBVTT\n\n1\n00:00:00.000 --> 00:00:01.212\nWelcome to ITProTV.\n\n2\n00:00:01.212 --> 00:00:02.300\nI'm your host, [CROSSTALK]\n\n3\n00:00:02.300 --> 00:00:08.396\n[MUSIC]\n\n4\n00:00:08.396 --> 00:00:10.781\n&gt;&gt; You're watching ITProTV.\n\n5\n00:00:10.781 --> 00:00:14.433\n&gt;&gt; Welcome back to another\nexciting episode here at ITProTV.\n\n6\n00:00:14.433 --> 00:00:17.595\nI'm your host, Wes Bryan,\nand in today's episode,\n\n7\n00:00:17.595 --> 00:00:21.941\nwe're moving through our series in\nthe Cisco CCNA routing and switching.\n\n8\n00:00:21.941 --> 00:00:24.810\nAnd we're moving into\ninfrastructure maintenance.\n\n9\n00:00:24.810 --> 00:00:27.390\nJoining me in the studios today\nis none other than Mr. Don Pezet.\n\n10\n00:00:27.390 --> 00:00:28.400\nDon, how you doing sir?\n\n11\n00:00:28.400 --> 00:00:29.180\n&gt;&gt; I'm doing great, Wes.\n\n12\n00:00:29.180 --> 00:00:30.800\nReady to dive right back\ninto the world of Cisco.\n\n13\n00:00:30.800 --> 00:00:33.280\nAnd I know we did infrastructure\nservices for a while,\n\n14\n00:00:33.280 --> 00:00:35.520\na lot of the crazy things that we\ncould turn on in a Cisco router.\n\n15\n00:00:35.520 --> 00:00:37.110\nNow we're doing\ninfrastructure maintenance.\n\n16\n00:00:37.110 --> 00:00:40.880\nThings that we can do to keep our system\nup and running, happy, and smiling, and\n\n17\n00:00:40.880 --> 00:00:42.930\neverything's working\nthe way it's supposed to.\n\n18\n00:00:42.930 --> 00:00:45.580\nWell, that's one of the things\na lot of people forget.\n\n19\n00:00:45.580 --> 00:00:48.940\nThey spend a lot of time figuring out how\nto get something working in the first\n\n20\n00:00:48.940 --> 00:00:50.470\nplace, and don't spend so\n\n21\n00:00:50.470 --> 00:00:53.960\nmuch time thinking about, now it needs to\nrun for years and years and years on end.\n\n22\n00:00:53.960 --> 00:00:57.040\nA Cisco router, a Cisco switch.\n\n23\n00:00:57.040 --> 00:00:59.530\nThey might only sell them for\ntwo maybe three years.\n\n24\n00:00:59.530 --> 00:01:02.610\nThey might only support them for\nfive or six years.\n\n25\n00:01:02.610 --> 00:01:03.750\nBut if you let them run,\n\n26\n00:01:03.750 --> 00:01:07.690\nmost of them will run a good seven to ten\nyears without having a hardware failure.\n\n27\n00:01:07.690 --> 00:01:11.610\nAnd so you may need a support\nequipment for a long long time.\n\n28\n00:01:11.610 --> 00:01:15.250\nAnd how do we keep an eye on it to\nmake sure it's behaving properly?\n\n29\n00:01:15.250 --> 00:01:19.640\nNow there's different ways of\nmonitoring systems and equipment.\n\n30\n00:01:19.640 --> 00:01:23.390\nThere is the old fashion way, which is\nyou don't, don't monitor just wait and\n\n31\n00:01:23.390 --> 00:01:26.760\nif something goes wrong your end\nuser will let you know right.\n\n32\n00:01:26.760 --> 00:01:29.650\nWe use to do that with like\nemail service back in the day.\n\n33\n00:01:29.650 --> 00:01:34.000\nThe email server went down there'd be\nsome employees somewhere who was in email\n\n34\n00:01:34.000 --> 00:01:36.655\nevery second of the day, and the moment\nit went down they give you that call.\n\n35\n00:01:36.655 --> 00:01:39.880\nIts the fastest to learning\nsystem in the world, but\n\n36\n00:01:39.880 --> 00:01:42.190\nit's a bad end user experience, isn't it?\n\n37\n00:01:42.190 --> 00:01:45.890\nSo it's always better if we\ncan see things ahead of time.\n\n38\n00:01:45.890 --> 00:01:46.820\nIf we can spot them.\n\n39\n00:01:46.820 --> 00:01:51.780\nAnd one of the really tricky things\nis trending data over time, right.\n\n40\n00:01:51.780 --> 00:01:54.000\nBecause I might have\nsomething like a memory leak.\n\n41\n00:01:54.000 --> 00:01:58.950\nAnd I've seen this on Cisco switches\nbefore where I look at the switch one day,\n\n42\n00:01:58.950 --> 00:02:00.390\nand it's at 50% memory.\n\n43\n00:02:00.390 --> 00:02:01.830\nWell that's okay, 50% that's not bad.\n\n44\n00:02:01.830 --> 00:02:05.080\nAnd then I look at it a few days later and\nit's at 52%.\n\n45\n00:02:05.080 --> 00:02:07.160\nAll right, 52 I'm okay with that.\n\n46\n00:02:07.160 --> 00:02:10.227\nAnd then I look at it a week or\ntwo later and it's at 60%.\n\n47\n00:02:10.227 --> 00:02:12.310\nWell, okay, 60% fine.\n\n48\n00:02:12.310 --> 00:02:16.650\nAnd I keep doing that over time and\nall the sudden it's, six months later.\n\n49\n00:02:16.650 --> 00:02:19.380\nAnd it's at 85% memory utilization and\nI'm thinking,\n\n50\n00:02:19.380 --> 00:02:21.470\nboy I'm gonna have to upgrade that switch.\n\n51\n00:02:21.470 --> 00:02:22.750\nIt doesn't have enough memory.\n\n52\n00:02:22.750 --> 00:02:27.560\nWell if I understood the big picture,\nif I knew that it was slowly creeping up,\n\n53\n00:02:27.560 --> 00:02:29.470\nmonth after month, after month.\n\n54\n00:02:29.470 --> 00:02:30.440\nThen I would know there was a problem,\n\n55\n00:02:30.440 --> 00:02:33.220\nthat there was a memory leak in\nthe switch that needed to be dealt with.\n\n56\n00:02:33.220 --> 00:02:37.370\nBut you have to have that trend of data\nto be able to put those things together\n\n57\n00:02:37.370 --> 00:02:40.020\nto put the puzzle pieces together and\nsee what's going on.\n\n58\n00:02:40.020 --> 00:02:45.400\n&gt;&gt; Now Don, the email example,\nthat's more of a reactive solution.\n\n59\n00:02:45.400 --> 00:02:48.610\nAnd what we're gonna be looking at\ntoday is gonna be more of a proactive\n\n60\n00:02:48.610 --> 00:02:49.600\nsolution, right?\n\n61\n00:02:49.600 --> 00:02:51.560\nWe can get to that before\nit actually happens.\n\n62\n00:02:51.560 --> 00:02:54.520\n&gt;&gt; Absolutely, so just as a scenario.\n\n63\n00:02:54.520 --> 00:02:58.530\nMaybe Cisco releases a security\nadvisory today and they say,\n\n64\n00:02:58.530 --> 00:03:03.460\nwarning there is an exploit in\niOS version 12.1 release or\n\n65\n00:03:03.460 --> 00:03:10.130\nI guess now it wouldn't get newer,\n15.4 sub release 22T, right?\n\n66\n00:03:10.130 --> 00:03:14.860\nSo you start thinking to yourself,\nshoot there is this patch I need to do,\n\n67\n00:03:14.860 --> 00:03:18.040\nI wonder if I have any equipment\nthat's running that release, right.\n\n68\n00:03:18.040 --> 00:03:21.100\nMaybe I'm already on newer releases and\nI don't need to worry about this at all.\n\n69\n00:03:21.100 --> 00:03:22.813\nOr maybe I'm on even older ones, and\n\n70\n00:03:22.813 --> 00:03:26.372\nI should be super worried cuz this isn't\nthe only security advisory for me.\n\n71\n00:03:26.372 --> 00:03:29.902\nSo in that scenario, I need to be\nable to look at all of my devices and\n\n72\n00:03:29.902 --> 00:03:32.632\nfind out what version of\nthe iOS they're running.\n\n73\n00:03:32.632 --> 00:03:35.790\nWell, wouldn't it be nice if there\nwas some way I could query that?\n\n74\n00:03:35.790 --> 00:03:38.560\nI mean,\nI know I could ssh into the devices and\n\n75\n00:03:38.560 --> 00:03:41.120\ndo a quick show version, right?\n\n76\n00:03:41.120 --> 00:03:43.930\nBut, if I had a thousand devices,\nthere's nothing quick about that at all.\n\n77\n00:03:43.930 --> 00:03:45.090\nI'm gonna have to go to each one.\n\n78\n00:03:45.090 --> 00:03:46.190\nThat's a nightmare.\n\n79\n00:03:46.190 --> 00:03:49.100\nSo, if there was a way that we could\nreach out and talk to the devices,\n\n80\n00:03:49.100 --> 00:03:52.380\njust real quick and say, give me your iOS\nversion, and then move on to the next one,\n\n81\n00:03:52.380 --> 00:03:53.450\ndo the same thing.\n\n82\n00:03:53.450 --> 00:03:54.760\nThat would be really handy.\n\n83\n00:03:54.760 --> 00:03:57.820\nAnd that's exactly what SNMP does.\n\n84\n00:03:57.820 --> 00:04:00.850\nSNMP is the simple network\nmanagement protocol.\n\n85\n00:04:00.850 --> 00:04:04.780\nIt's an open standard that's supported\nby darn near everybody, and it provides\n\n86\n00:04:04.780 --> 00:04:09.932\nan easy mechanism for us to reach out to\ngear on the network and ask it questions.\n\n87\n00:04:09.932 --> 00:04:11.120\nAsk it questions about things,\n\n88\n00:04:11.120 --> 00:04:13.570\nlike what version of your\noperating system are you running?\n\n89\n00:04:13.570 --> 00:04:16.380\nWhat is the bandwidth of\nyou second network adapter?\n\n90\n00:04:16.380 --> 00:04:18.350\nWhat temperature is your CPU at?\n\n91\n00:04:18.350 --> 00:04:19.840\nHow faster your fan is spinning?\n\n92\n00:04:19.840 --> 00:04:21.780\nHow much hard drive space\ndo you have available?\n\n93\n00:04:21.780 --> 00:04:25.600\nAnd it's not just Cisco equipment,\nwe can so this with that Window Server or\n\n94\n00:04:25.600 --> 00:04:29.030\nLinux boxes,\nwe can do this with all sorts of thing and\n\n95\n00:04:29.030 --> 00:04:32.520\nit's not the standard they all support\nright that makes things really convenient.\n\n96\n00:04:32.520 --> 00:04:35.130\nSo that's what SNMP is all about.\n\n97\n00:04:35.130 --> 00:04:38.870\nNow on a Cisco device, it's actually\npretty easy to configure SNMP and\n\n98\n00:04:38.870 --> 00:04:41.020\nit's one of our exam\nobjectives we need to do it.\n\n99\n00:04:41.020 --> 00:04:45.080\nBut the Cisco device is really\nthe reporting device, so\n\n100\n00:04:45.080 --> 00:04:46.990\nhow do we get the information out of SNMP?\n\n101\n00:04:46.990 --> 00:04:50.120\nWell we normally do it\nwith third party software.\n\n102\n00:04:50.120 --> 00:04:52.230\nThere's a lot of companies\nout there like Solar Winds.\n\n103\n00:04:52.230 --> 00:04:55.060\nThey have a product called\nthe Network Performance Monitor.\n\n104\n00:04:55.060 --> 00:04:57.700\nAnd it can collect all of\nthe data from your devices and\n\n105\n00:04:57.700 --> 00:05:01.490\nstore it in a database, and then represent\nit as pie charts and graphs, and\n\n106\n00:05:01.490 --> 00:05:03.890\nall of that good stuff that makes it\nreally easy to interpret that data,\n\n107\n00:05:03.890 --> 00:05:07.460\nand you'll see memory utilization\nclimbing up over time.\n\n108\n00:05:07.460 --> 00:05:10.510\nOr you'll see where you're running\nout of bandwidth during peak hours.\n\n109\n00:05:10.510 --> 00:05:12.230\nYou'll see that information.\n\n110\n00:05:12.230 --> 00:05:14.710\nBut if you have to manually go and\nget that data, it's pretty hard.\n\n111\n00:05:14.710 --> 00:05:18.900\nI'm gonna kind of show you both ways here\nin the show just so you get an idea of it.\n\n112\n00:05:18.900 --> 00:05:22.970\nBut the way it starts is by\nconfiguring the router or\n\n113\n00:05:22.970 --> 00:05:25.130\nswitch to answer SNMP requests.\n\n114\n00:05:25.130 --> 00:05:26.510\nNow you might be asking,\n\n115\n00:05:26.510 --> 00:05:29.330\nif this is such a great system why\nisn't it turned on by default?\n\n116\n00:05:29.330 --> 00:05:32.620\nAnd the reason is SNMP is actually\na little more powerful than just\n\n117\n00:05:32.620 --> 00:05:34.500\nFinding out what data's like, right?\n\n118\n00:05:34.500 --> 00:05:38.930\nFor example, not only can I query data,\nbut I can change data.\n\n119\n00:05:38.930 --> 00:05:42.020\nSo, for example, I might have\nan interface with a certain IP address.\n\n120\n00:05:42.020 --> 00:05:44.390\nI can use SNMP to push\na new IP address to it.\n\n121\n00:05:44.390 --> 00:05:47.140\nSo you can write data to\nthe configuration, and\n\n122\n00:05:47.140 --> 00:05:49.440\nthat's not something you want\njust any old person to do.\n\n123\n00:05:49.440 --> 00:05:52.770\nSo Cisco has this stuff turned off\nby default, we gotta turn it on.\n\n124\n00:05:52.770 --> 00:05:55.890\nThe other thing is you can set\nup what are called SNMP traps.\n\n125\n00:05:55.890 --> 00:05:59.420\nA trap is where, instead of us\nasking the device questions and\n\n126\n00:05:59.420 --> 00:06:03.000\ngetting answers,\nwe have the device tell us.\n\n127\n00:06:03.000 --> 00:06:05.700\nAnd that's usually something we\ndo with a triggered emergency.\n\n128\n00:06:05.700 --> 00:06:09.200\nAn interface goes down so\nit sends us and SNMP trap.\n\n129\n00:06:09.200 --> 00:06:12.780\nWell that SNMP trap was designed to go to\nthird party software that's waiting for\n\n130\n00:06:12.780 --> 00:06:16.180\nthat, that it hears it and\nthen it does something extra like.\n\n131\n00:06:16.180 --> 00:06:18.841\nPages you on you pager.\n\n132\n00:06:18.841 --> 00:06:20.358\nI guess we're back in 1997, now.\n\n133\n00:06:20.358 --> 00:06:24.696\nIt sends you a text message on your cell,\nyour cell phone, your cellular telephone.\n\n134\n00:06:24.696 --> 00:06:29.370\n[LAUGH] It sends you a fax,\nan email, whatever it does.\n\n135\n00:06:29.370 --> 00:06:31.680\nRight, whichever decade you\nhappen to be trapped in.\n\n136\n00:06:31.680 --> 00:06:33.450\nApparently, I'm in a time warp.\n\n137\n00:06:33.450 --> 00:06:35.510\nBut it can send that stuff to you.\n\n138\n00:06:35.510 --> 00:06:36.930\nAnd now you can take action.\n\n139\n00:06:36.930 --> 00:06:40.270\nYou can be reactive very\nquickly after a problem.\n\n140\n00:06:40.270 --> 00:06:43.290\nOr ideally, if you're looking at\nyour reports you can be proactive.\n\n141\n00:06:43.290 --> 00:06:45.940\nYou can see you're running\nout of bandwidth or\n\n142\n00:06:45.940 --> 00:06:48.580\nyou're coming close to running out\nof bandwidth, it's time to upgrade.\n\n143\n00:06:48.580 --> 00:06:50.680\nOr you're running low on CPU or\nmemory resources,\n\n144\n00:06:50.680 --> 00:06:53.740\nyou can see that ahead of time\nbefore you actually run out.\n\n145\n00:06:53.740 --> 00:06:55.850\nWhich is when the problem occurs.\n\n146\n00:06:55.850 --> 00:06:58.600\nAll right, so how does it work?\n\n147\n00:06:58.600 --> 00:07:01.090\nWell, the first thing we need to do\nis we need to get into a device and\n\n148\n00:07:01.090 --> 00:07:02.190\nget it configured.\n\n149\n00:07:02.190 --> 00:07:03.290\nAnd before we do that,\n\n150\n00:07:03.290 --> 00:07:07.240\nlet me just mention that there's actually\ntwo different ways to configure SNMP.\n\n151\n00:07:07.240 --> 00:07:10.290\nWell, there's more, but\non the exam, there's two.\n\n152\n00:07:10.290 --> 00:07:12.508\nThere's multiple versions of SNMP.\n\n153\n00:07:12.508 --> 00:07:16.970\nSNMP version one, it's old, it's outdated,\nnobody uses it, it's not on the exam.\n\n154\n00:07:16.970 --> 00:07:22.860\nSNMP version two c that's the most\ncommon one and that it is on the exam.\n\n155\n00:07:22.860 --> 00:07:26.570\nSNMP version two c is\nreally easy to configure.\n\n156\n00:07:26.570 --> 00:07:29.470\nYou can get it configured and\nturn on a device very, very quickly.\n\n157\n00:07:29.470 --> 00:07:31.730\nSo it's simple, it's easy.\n\n158\n00:07:31.730 --> 00:07:34.870\nBut that trade off is\nit's not terribly secure.\n\n159\n00:07:34.870 --> 00:07:35.855\nWhen I configure it,\n\n160\n00:07:35.855 --> 00:07:38.994\nI'll show you how basically you\nhave what are called communities.\n\n161\n00:07:38.994 --> 00:07:41.058\nCommunities are kind of like\nthe passwords for SNMP.\n\n162\n00:07:41.058 --> 00:07:44.985\nSo there will be a read only password or\ncommunity and\n\n163\n00:07:44.985 --> 00:07:48.620\na read and write password or community.\n\n164\n00:07:48.620 --> 00:07:51.920\nAnd if somebody gets ahold of that\ncommunity string, they have access to it.\n\n165\n00:07:51.920 --> 00:07:54.817\nSo any time I have an employee\nleave the company, I gotta go and\n\n166\n00:07:54.817 --> 00:07:56.454\nchange all my community strings.\n\n167\n00:07:56.454 --> 00:07:57.586\nThat's kind of a pain.\n\n168\n00:07:57.586 --> 00:08:01.677\nSo in SNMP version three,\nthey sought to fix that.\n\n169\n00:08:01.677 --> 00:08:04.791\nIn SNMP Version 3, you can create\nindividually user accounts and\n\n170\n00:08:04.791 --> 00:08:08.470\npasswords and you can create groups and\nso I can assign permissions to a group.\n\n171\n00:08:08.470 --> 00:08:11.210\nI can put a user in a group and\nif an employee leaves the company,\n\n172\n00:08:11.210 --> 00:08:12.570\nI can just take them out of the group and\n\n173\n00:08:12.570 --> 00:08:14.900\nI don't have to mess with any of\nthe rest of my configurations.\n\n174\n00:08:14.900 --> 00:08:17.510\nSo I have a lot more\ngranular control security.\n\n175\n00:08:17.510 --> 00:08:22.350\nSo we get better security, but\nthe trade off is it's harder to set up.\n\n176\n00:08:22.350 --> 00:08:26.040\nSo, we'll start with SNMP Version 2C,\nagain it can be really fast, up and going,\n\n177\n00:08:26.040 --> 00:08:29.040\nand then see what it does,\nand then we'll do version 3,\n\n178\n00:08:29.040 --> 00:08:31.200\nget to see the slightly harder way.\n\n179\n00:08:31.200 --> 00:08:33.380\nAll right, so,\nwhat does this look like on a router?\n\n180\n00:08:33.380 --> 00:08:36.650\nWell, I've got a router\nfired up on the network, and\n\n181\n00:08:36.650 --> 00:08:38.360\nlet me just get logged into this thing.\n\n182\n00:08:39.580 --> 00:08:43.470\nAnd I am, I'm actually connected\nto the console of this router.\n\n183\n00:08:43.470 --> 00:08:45.240\nBut it would be the same on the network.\n\n184\n00:08:45.240 --> 00:08:47.770\nThis really doesn't matter.\n\n185\n00:08:47.770 --> 00:08:49.380\nBut basically to get it configured.\n\n186\n00:08:49.380 --> 00:08:50.980\nThe first thing I should\nprobably do is see whether or\n\n187\n00:08:50.980 --> 00:08:53.390\nnot I've got SNMP configured\non that first place.\n\n188\n00:08:53.390 --> 00:08:55.740\nSo I'm gonna do a show running config.\n\n189\n00:08:55.740 --> 00:08:57.590\nAnd I'm gonna look for\n\n190\n00:08:57.590 --> 00:09:01.210\nany string containing SNMP,\njust to see if it's already configured.\n\n191\n00:09:01.210 --> 00:09:02.640\nAnd it's not, all right?\n\n192\n00:09:02.640 --> 00:09:04.360\nI haven't really done much to this router.\n\n193\n00:09:04.360 --> 00:09:07.310\nI assigned a user account to it,\nenabled SSH.\n\n194\n00:09:07.310 --> 00:09:09.130\nI haven't even changed the host name.\n\n195\n00:09:09.130 --> 00:09:13.770\nSo in a default configuration from Cisco,\nSNMP is normally turned off.\n\n196\n00:09:13.770 --> 00:09:18.860\nAnd if we wanna turn it on, there's really\njust one command that we need to do.\n\n197\n00:09:18.860 --> 00:09:20.430\n&gt;&gt; Yeah.\n&gt;&gt; I mean, there's a couple of different\n\n198\n00:09:20.430 --> 00:09:23.950\nones but there's really just one\ncommand to get it fired up and going.\n\n199\n00:09:23.950 --> 00:09:27.970\nAnd that command is SNMP dash server,\nright.\n\n200\n00:09:27.970 --> 00:09:28.560\nWe're the server.\n\n201\n00:09:28.560 --> 00:09:32.670\npeople will ask us questions and\nwe will answer, so SNMP dash server and\n\n202\n00:09:32.670 --> 00:09:34.672\nthen community, right.\n\n203\n00:09:34.672 --> 00:09:37.857\nAn SNMP version 2C a community.\n\n204\n00:09:37.857 --> 00:09:39.190\nDid I spell that right, yeah.\n\n205\n00:09:39.190 --> 00:09:43.030\nCommunity is like the password and\nthen I need to give it a community name.\n\n206\n00:09:43.030 --> 00:09:45.800\nSo maybe I'll call this\none itprotv dash ro,\n\n207\n00:09:45.800 --> 00:09:48.250\nright because it's going\nto be my read only.\n\n208\n00:09:48.250 --> 00:09:50.660\nAnd that's just a name, so\nthat doesn't make it read-only.\n\n209\n00:09:50.660 --> 00:09:53.400\nI need to actually say ro, right?\n\n210\n00:09:53.400 --> 00:09:57.800\nAnd if I do a question mark there, you'll\nsee where I can do ro for read-only, or\n\n211\n00:09:57.800 --> 00:09:59.420\nrw for read-write.\n\n212\n00:09:59.420 --> 00:10:00.470\nOkay, so I'll do ro.\n\n213\n00:10:01.510 --> 00:10:02.930\nNow, SNMP is on.\n\n214\n00:10:02.930 --> 00:10:04.150\nI just turned it on.\n\n215\n00:10:04.150 --> 00:10:06.440\nThat's it.\nOne command, and now I'm running SNMP.\n\n216\n00:10:07.530 --> 00:10:11.990\nAnyone on my network can reach out to\nthis router and ask it questions and\n\n217\n00:10:11.990 --> 00:10:13.370\nthe router is gonna answer.\n\n218\n00:10:13.370 --> 00:10:15.880\nNow, is that good or bad?\n\n219\n00:10:15.880 --> 00:10:18.060\nWell it's good in a way I\ncan get data really easy.\n\n220\n00:10:18.060 --> 00:10:21.580\nIt's bad in that anybody\non the network could do it.\n\n221\n00:10:21.580 --> 00:10:24.040\nAnd they could query the router and\nfind out all sorts of things.\n\n222\n00:10:24.040 --> 00:10:26.050\nThey could get a dump of the access lists,\n\n223\n00:10:26.050 --> 00:10:28.600\nthey could do all sorts of things\nthat might help them exploit this.\n\n224\n00:10:28.600 --> 00:10:33.290\nIf I'm an attacker,\nI could now query the iOS version and\n\n225\n00:10:33.290 --> 00:10:35.140\nthen just look for\nexploits for that iOS version.\n\n226\n00:10:35.140 --> 00:10:37.160\nIt makes life a little too easy.\n\n227\n00:10:37.160 --> 00:10:39.650\n&gt;&gt; Now Don is there any way that\nyou can secure this version two?\n\n228\n00:10:39.650 --> 00:10:42.690\nWhat would you suggest if you\nare gonna run version two and\n\n229\n00:10:42.690 --> 00:10:44.470\nmaybe you're not using the other version?\n\n230\n00:10:44.470 --> 00:10:48.730\n&gt;&gt; So really the best way to secure it\nis to use an access control list, right.\n\n231\n00:10:48.730 --> 00:10:54.580\nSo for example if I go in here and\nsay snmp-server community itprotv-rw,\n\n232\n00:10:54.580 --> 00:10:56.690\nand I'm gonna make a read-write one.\n\n233\n00:10:56.690 --> 00:10:59.720\nI definitely wanna protect that,\n\n234\n00:10:59.720 --> 00:11:03.710\ncuz I don't want somebody pushing\nchanges into my router via SNMP.\n\n235\n00:11:03.710 --> 00:11:06.660\nSo I need to protect it, and the best\nway to do that is with an access list.\n\n236\n00:11:06.660 --> 00:11:11.400\nAnd with an access list, you can dictate\nwho's allowed to contact us via SNMP?\n\n237\n00:11:11.400 --> 00:11:14.270\nAnd you really do that based\non source IP address so\n\n238\n00:11:14.270 --> 00:11:16.980\nwe can use a simple\nstandard ACL to do that.\n\n239\n00:11:16.980 --> 00:11:21.110\nSo right now, I don't think I have any\naccess lists on this system, nope, so I'm\n\n240\n00:11:21.110 --> 00:11:26.400\njust going to whip up a quick access list\nand so I'll say access list 1, permit, and\n\n241\n00:11:26.400 --> 00:11:31.040\nthen whoever it is that I want to permit\nso for example, I'll say host and\n\n242\n00:11:31.040 --> 00:11:37.080\nwhatever my laptop's IP happens to be.\n\n243\n00:11:37.080 --> 00:11:43.110\nSo let's go figure out\nwhat my IP is real quick.\n\n244\n00:11:43.110 --> 00:11:51.123\nSo if I do, let's see, so mine is\n10.0.14.72, so we'll add that here.\n\n245\n00:11:51.123 --> 00:11:52.220\n10.0.14.72.\n\n246\n00:11:52.220 --> 00:11:54.120\nAnd then, that's really all I need.\n\n247\n00:11:54.120 --> 00:11:57.240\nI can leave everything else as it is.\n\n248\n00:11:57.240 --> 00:11:59.550\nBecause in an access list,\nwhat's gonna be next?\n\n249\n00:11:59.550 --> 00:12:02.980\nAn implicit deny all,\neverybody else is gonna get denied.\n\n250\n00:12:02.980 --> 00:12:06.020\nNow, I might wanna log this\nactivity to keep track of it and so\n\n251\n00:12:06.020 --> 00:12:08.280\nI might do this access list\na little bit different, right?\n\n252\n00:12:08.280 --> 00:12:09.730\nSo let me let me go back here.\n\n253\n00:12:09.730 --> 00:12:11.740\nAnd I'm gonna add the word\nlog to the end of it.\n\n254\n00:12:11.740 --> 00:12:14.890\nSo I can keep track of every\ntime I talk to it via SNMP.\n\n255\n00:12:14.890 --> 00:12:19.610\nAnd I might even want to do the deny,\nwhere I do a deny any, and\n\n256\n00:12:19.610 --> 00:12:20.940\nI might wanna do that.\n\n257\n00:12:20.940 --> 00:12:23.220\nEven though there's an implicit denial,\nI might choose to do a log.\n\n258\n00:12:23.220 --> 00:12:25.770\nSo now if somebody does try to\nhit it via SNMP I'll see it.\n\n259\n00:12:25.770 --> 00:12:27.790\nNow why is that important?\n\n260\n00:12:27.790 --> 00:12:32.420\nWhen I do my SNMP queries,\nSNMP version 2C doesn't encrypt anything.\n\n261\n00:12:32.420 --> 00:12:34.970\nSo if somebody captures packets\non the network they could see\n\n262\n00:12:34.970 --> 00:12:38.150\nthe community string and then they\ncould reach out and try and get it.\n\n263\n00:12:38.150 --> 00:12:40.800\nSo by doing these ACL's I\nstop them from connecting.\n\n264\n00:12:40.800 --> 00:12:42.660\nI don't stop them from figuring\nout the community string.\n\n265\n00:12:42.660 --> 00:12:44.230\nThey could still figure that out.\n\n266\n00:12:44.230 --> 00:12:47.280\nAnd then potentially they could try and\nspoof my IP and things so I'd have to take\n\n267\n00:12:47.280 --> 00:12:50.780\nother measures, that's where SNMP\nversion two see, starts falling apart.\n\n268\n00:12:50.780 --> 00:12:54.120\nSo the recommendation with version two is,\nit's simple and easy, but\n\n269\n00:12:54.120 --> 00:12:56.130\nyou should only use it on\nreally trusted networks.\n\n270\n00:12:56.130 --> 00:13:00.170\nNetworks that you know are safe and\nsecure and not something that is like,\n\n271\n00:13:00.170 --> 00:13:04.440\nyour DMZ or a WAN or whatever,\nthat's just a recipe for disaster there.\n\n272\n00:13:05.660 --> 00:13:06.250\nAll right.\n\n273\n00:13:06.250 --> 00:13:08.580\nSo, SNMP is up and running.\n\n274\n00:13:08.580 --> 00:13:11.080\nAnd I'm pretty much in business.\n\n275\n00:13:11.080 --> 00:13:12.420\nI mean,\nthere's other things that we can do.\n\n276\n00:13:12.420 --> 00:13:14.180\nLike if you do snmp-server?,\n\n277\n00:13:14.180 --> 00:13:17.750\nyou'll see there's a bunch of\nother stuff that we can set.\n\n278\n00:13:17.750 --> 00:13:20.840\nNormally, people only said\na couple of things in here,\n\n279\n00:13:20.840 --> 00:13:24.540\nlike you can put your contact information\nand the city, stuff like that.\n\n280\n00:13:24.540 --> 00:13:28.140\nSo when you query it, you can say, well,\nthis router happens to be in Gainesville,\n\n281\n00:13:28.140 --> 00:13:29.440\nor it's managed by Wes.\n\n282\n00:13:29.440 --> 00:13:31.680\nAnd so if something's wrong with it,\nI need to email Wes.\n\n283\n00:13:31.680 --> 00:13:34.640\nYou can put that kind of\ninformation in there if you want.\n\n284\n00:13:34.640 --> 00:13:38.000\nSo for example, I might say,\nsnmp-server location.\n\n285\n00:13:38.000 --> 00:13:39.880\nAnd then it's just a string\nyou can put whatever you want.\n\n286\n00:13:39.880 --> 00:13:41.630\nI'll say this one's in Gainesville,\n\n287\n00:13:41.630 --> 00:13:45.890\nFlorida because that's\nactually where it is.\n\n288\n00:13:45.890 --> 00:13:47.510\nAnd then I might say, smp-server.\n\n289\n00:13:47.510 --> 00:13:51.450\nAnd from here I can put in who\nthe administrative contact was, right.\n\n290\n00:13:51.450 --> 00:13:54.330\nSo I can say, contact and\n\n291\n00:13:54.330 --> 00:13:58.780\nI'll say the contact is Don Pezet and\nI might even throw my e-mail in there.\n\n292\n00:13:58.780 --> 00:14:02.330\nSo if somebody sees a problem alert here\nthey know exactly who to reach out too and\n\n293\n00:14:02.330 --> 00:14:02.870\nhow to get to me.\n\n294\n00:14:02.870 --> 00:14:05.140\nOr you stick your phone number in or\nwhatever you want.\n\n295\n00:14:05.140 --> 00:14:06.770\nThese are all optional things.\n\n296\n00:14:06.770 --> 00:14:11.770\nTechnically the very first line I ran\nway up here, this guy right here,\n\n297\n00:14:11.770 --> 00:14:15.880\nsnmp server community itprotv-ro ro,\n\n298\n00:14:15.880 --> 00:14:19.590\nthat was really the only thing I needed to\ndo to get SNMP up and running, all right.\n\n299\n00:14:19.590 --> 00:14:22.390\nAnd a lot of people, you'll see two\ncommunity strings that they use.\n\n300\n00:14:22.390 --> 00:14:23.890\nIt's in most textbooks,\n\n301\n00:14:23.890 --> 00:14:27.590\nwhere for read-only,\nthey do a community called public.\n\n302\n00:14:27.590 --> 00:14:29.530\nAnd for read-write,\nthey do a community called private.\n\n303\n00:14:29.530 --> 00:14:33.240\nThe public and private names there's\nno forced reason for you to use those,\n\n304\n00:14:33.240 --> 00:14:34.360\nthose are just very common.\n\n305\n00:14:34.360 --> 00:14:37.630\nSo if you ever see public and private,\nthose are just ones they made.\n\n306\n00:14:37.630 --> 00:14:39.950\nAnd most people don't bother to deviate,\n\n307\n00:14:39.950 --> 00:14:43.010\nbecause again the community\nstrings aren't secure anyway.\n\n308\n00:14:43.010 --> 00:14:45.710\nSo you're not really gaining any\nsecurity through the community strings,\n\n309\n00:14:45.710 --> 00:14:47.060\nyou're only stopping a hacker for\n\n310\n00:14:47.060 --> 00:14:49.890\na couple of extra seconds by using\na different community string.\n\n311\n00:14:49.890 --> 00:14:52.720\nSo you might as well use private and\npublic, because.\n\n312\n00:14:52.720 --> 00:14:53.560\nIt doesn't matter.\n\n313\n00:14:53.560 --> 00:14:55.920\nBut you flag them as read-only or\nread-write, and\n\n314\n00:14:55.920 --> 00:14:57.770\nthen you assign security to them.\n\n315\n00:14:57.770 --> 00:14:59.630\nAnd which actually,\nI've forgotten to do, haven't I?\n\n316\n00:14:59.630 --> 00:15:03.280\nI created an ACL, but\nI never actually attached it, did I?\n\n317\n00:15:03.280 --> 00:15:08.690\nSo I have an access list,\nif I do a show access-list, there's ACL 1.\n\n318\n00:15:08.690 --> 00:15:13.730\nAnd what I need to do, is I need to\nrevisit those lines way back here where I\n\n319\n00:15:13.730 --> 00:15:19.700\nturned on SNMP and if I had done\nanother question mark at the end,\n\n320\n00:15:19.700 --> 00:15:22.080\nyou'd see where I can attach that ACL.\n\n321\n00:15:22.080 --> 00:15:24.310\nI can do it if it's a named ACL or\na numbered one.\n\n322\n00:15:24.310 --> 00:15:25.270\nMine's numbered.\n\n323\n00:15:25.270 --> 00:15:28.910\nAnd so I'm gonna add that to the read\nonly, and I'm gonna add that for\n\n324\n00:15:28.910 --> 00:15:29.570\nthe read write.\n\n325\n00:15:29.570 --> 00:15:31.800\nWhich in hindsight would have\nbeen faster for me to just type.\n\n326\n00:15:31.800 --> 00:15:36.180\nBut there we go, all right, so now not\nanybody on the network can query it.\n\n327\n00:15:36.180 --> 00:15:39.990\nIn fact,\nonly people that match that access list.\n\n328\n00:15:39.990 --> 00:15:43.650\nSo when I look at that access list,\nit's just me, 10.0.14.72.\n\n329\n00:15:43.650 --> 00:15:46.050\nI'm the only person that can query it.\n\n330\n00:15:47.530 --> 00:15:50.502\nAnd now, I'm ready to reach out and\ngrab data out of it.\n\n331\n00:15:50.502 --> 00:15:53.903\nWell on the exam they want you\nto know what I just showed you,\n\n332\n00:15:53.903 --> 00:15:55.411\nthe server side, right.\n\n333\n00:15:55.411 --> 00:15:58.261\nBecause on the how do I\nget data out of it part,\n\n334\n00:15:58.261 --> 00:16:00.742\nwe normally use third party software.\n\n335\n00:16:00.742 --> 00:16:03.669\nBecause third party software\ndoes something really important.\n\n336\n00:16:03.669 --> 00:16:08.040\nWhen I wanna query data out of this\nrouter, I need to know where that data is.\n\n337\n00:16:08.040 --> 00:16:10.810\nSo the example I gave earlier\nwas I wanna get the version of\n\n338\n00:16:10.810 --> 00:16:13.090\niOS that this router is running, okay.\n\n339\n00:16:13.090 --> 00:16:14.860\nWell, how do I get that?\n\n340\n00:16:14.860 --> 00:16:19.513\nWell, in the command line on most UNIX\nbased system like I'm on a Mac which is\n\n341\n00:16:19.513 --> 00:16:22.582\nUNIX based,\nyou have a utility called snmpwalk.\n\n342\n00:16:22.582 --> 00:16:27.025\nAnd what snmpwalk does is it\nlets you query a device and\n\n343\n00:16:27.025 --> 00:16:30.730\nget the snmp values back on it, okay?\n\n344\n00:16:30.730 --> 00:16:33.840\nAnd it's not necessarily the most user\n\n345\n00:16:33.840 --> 00:16:37.460\nfriendly command because you need to\nknow exactly what you're looking for.\n\n346\n00:16:37.460 --> 00:16:38.590\nIf I wanna reach out and\n\n347\n00:16:38.590 --> 00:16:42.950\nquery data out of this thing,\nI need to do a fairly long command.\n\n348\n00:16:42.950 --> 00:16:45.890\nLet me get it, so\nmy head's not gonna cover it up.\n\n349\n00:16:45.890 --> 00:16:47.210\nAnd we'll type it out.\n\n350\n00:16:47.210 --> 00:16:51.620\nSo I'm gonna do snmpwalk and\nI'm gonna type some numbers here.\n\n351\n00:16:51.620 --> 00:16:52.950\nThey're really long and\nyou might be thinking wow,\n\n352\n00:16:52.950 --> 00:16:54.320\nhow does Don have that memorized?\n\n353\n00:16:54.320 --> 00:16:56.800\nI don't, it's written on\na piece of paper over here.\n\n354\n00:16:56.800 --> 00:17:00.500\nI don't mind admitting that\ncuz this is crazy stuff.\n\n355\n00:17:00.500 --> 00:17:03.620\nNormally, we're gonna use third party\nsoftware that already has all this data\n\n356\n00:17:03.620 --> 00:17:05.550\nmapped into it so that we don't have to.\n\n357\n00:17:05.550 --> 00:17:06.450\nBut I'll do snmpwalk.\n\n358\n00:17:06.450 --> 00:17:10.840\nI'm gonna tell it that my snmp\nis actually using version 2c, so\n\n359\n00:17:10.840 --> 00:17:15.890\nI can do a -v 2c -c for\nthe community string.\n\n360\n00:17:15.890 --> 00:17:19.690\nI'm gonna use itprotv-ro, right,\ncuz I'm using the read only string.\n\n361\n00:17:19.690 --> 00:17:23.950\nI'm just querying data, so\nI don't need to do any kind of read-write.\n\n362\n00:17:23.950 --> 00:17:25.950\nAnd then I need to tell it\nwho I'm reaching out to.\n\n363\n00:17:25.950 --> 00:17:32.660\nSo my particular router is\n10.0.222.111 and now the fun part.\n\n364\n00:17:32.660 --> 00:17:36.070\nI need to tell it the data I want and\nthe data I want\n\n365\n00:17:36.070 --> 00:17:40.900\nis buried in what's called an OID,\nan object identifier.\n\n366\n00:17:40.900 --> 00:17:44.100\nEvery single bit of data in\nSNMP has an OID assigned to it,\n\n367\n00:17:44.100 --> 00:17:45.990\na number that identifies it.\n\n368\n00:17:45.990 --> 00:17:50.938\nAnd the number for iOS version is,\n\n369\n00:17:50.938 --> 00:17:54.008\nthis is the fun part,\n\n370\n00:17:54.008 --> 00:18:03.230\n1.3.6.1.4.1.9.9.25.1.1.1.2.\n\n371\n00:18:03.230 --> 00:18:06.434\nNow had I had that memorized,\nI'd be an amazing instructor, but\n\n372\n00:18:06.434 --> 00:18:08.250\nthat's a really long crazy number.\n\n373\n00:18:09.790 --> 00:18:11.710\nHow do you find out that number?\n\n374\n00:18:11.710 --> 00:18:13.410\nWell first off,\nlet's see if it even works, right?\n\n375\n00:18:13.410 --> 00:18:15.560\nIf I run that, there we go.\n\n376\n00:18:15.560 --> 00:18:17.810\nI just reached out to\nthe router over the network.\n\n377\n00:18:17.810 --> 00:18:20.490\nBack on the router,\nsee I just got a access list 1 permitted.\n\n378\n00:18:20.490 --> 00:18:22.120\nIt knows that I reached out to it.\n\n379\n00:18:22.120 --> 00:18:26.080\nAnd it returned right here all\nthe information about that router.\n\n380\n00:18:26.080 --> 00:18:30.200\n&gt;&gt; Now Don, because that number runs,\njust rolls right off the tongue so easy.\n\n381\n00:18:30.200 --> 00:18:31.732\nHow can we interpret that information?\n\n382\n00:18:31.732 --> 00:18:33.604\n&gt;&gt; [LAUGH]\n&gt;&gt; Cuz like you said,\n\n383\n00:18:33.604 --> 00:18:36.170\nyou had to write it down to be even\nable to enter that command into the CLI.\n\n384\n00:18:36.170 --> 00:18:38.270\nHow are we gonna interpret\nthat information?\n\n385\n00:18:38.270 --> 00:18:40.940\n&gt;&gt; Yeah, well, and\nit's funny cuz I actually got it wrong.\n\n386\n00:18:40.940 --> 00:18:44.040\nI was just trying to\nquery the iOS version.\n\n387\n00:18:44.040 --> 00:18:48.290\nAnd if you looked, the iOS version's right\nhere, which was tucked under this value.\n\n388\n00:18:48.290 --> 00:18:50.670\nAnd I did 1.1.1.2 and stopped.\n\n389\n00:18:50.670 --> 00:18:55.072\nI should have gone one step further and\ndone 1.1.1.2.7.\n\n390\n00:18:55.072 --> 00:18:58.820\nAnd then I would have just gotten this\none value that had the iOS version.\n\n391\n00:18:58.820 --> 00:19:00.330\nSo I cut it a little bit short.\n\n392\n00:19:00.330 --> 00:19:04.900\nNow what happens is Cisco publishes\na document and every vendor does,\n\n393\n00:19:04.900 --> 00:19:09.170\nHP, Dell, Juniper, Microsoft,\ncuz it works on software too.\n\n394\n00:19:09.170 --> 00:19:10.700\nRight?\nRed Hat, those guys.\n\n395\n00:19:10.700 --> 00:19:12.828\nThey push out what are called MIBs.\n\n396\n00:19:12.828 --> 00:19:16.200\nMIB or\nM-I-B is a management information base and\n\n397\n00:19:16.200 --> 00:19:18.930\nthen MIB is like an index,\nlike a dictionary almost.\n\n398\n00:19:18.930 --> 00:19:22.090\nIt's got a list of all the numbers and\nwhat they're mapped to.\n\n399\n00:19:22.090 --> 00:19:25.570\nSo if I want the bandwidth\non the second interface,\n\n400\n00:19:25.570 --> 00:19:29.490\nI can look at the MIB, find the entry for\nbandwidth on the second interface and\n\n401\n00:19:29.490 --> 00:19:31.280\nsee the number that correlates to it.\n\n402\n00:19:31.280 --> 00:19:33.020\nIt's a nightmare to read the MIB files.\n\n403\n00:19:33.020 --> 00:19:34.240\nThey're a mess.\n\n404\n00:19:34.240 --> 00:19:36.702\nBut when you have third part software,\nyou just chuck them in there.\n\n405\n00:19:36.702 --> 00:19:38.350\nA lot of them already have it built in.\n\n406\n00:19:38.350 --> 00:19:40.290\nAnd now they know how to\nquery that data and get it.\n\n407\n00:19:40.290 --> 00:19:44.150\nSo that's exactly how I got that number is\nI pulled up the MIB from Cisco's website\n\n408\n00:19:44.150 --> 00:19:45.210\nand that's how I knew it was there.\n\n409\n00:19:45.210 --> 00:19:48.190\n&gt;&gt; Maybe our viewers out there\nare wondering of examples of third\n\n410\n00:19:48.190 --> 00:19:48.780\nparty software.\n\n411\n00:19:48.780 --> 00:19:52.030\nDo you have some examples of people\nwho supply this third party software?\n\n412\n00:19:52.030 --> 00:19:53.730\n&gt;&gt; Yeah, the one I like.\n\n413\n00:19:53.730 --> 00:19:55.440\nThere's not a lot of good free ones.\n\n414\n00:19:55.440 --> 00:19:57.110\nThere's a couple of free\nones that are out there.\n\n415\n00:19:57.110 --> 00:19:59.640\nBut the one I really like\nis kind of expensive.\n\n416\n00:19:59.640 --> 00:20:00.790\nLet me just pull it up here.\n\n417\n00:20:00.790 --> 00:20:03.280\nWhich is the SolarWinds\nNetwork Performance Monitor.\n\n418\n00:20:03.280 --> 00:20:07.130\nAnd so I'm gonna pull this up and\nif you go to their\n\n419\n00:20:07.130 --> 00:20:11.330\nwebsite solarwinds.com and go to\nthe Network Performance Monitor page.\n\n420\n00:20:11.330 --> 00:20:15.000\nThey have some demos and stuff and they\nactually have an interactive demo that you\n\n421\n00:20:15.000 --> 00:20:19.010\ncan pull up if you get to\nthe right product page.\n\n422\n00:20:19.010 --> 00:20:21.290\nWe want the Network Performance Monitor.\n\n423\n00:20:21.290 --> 00:20:23.210\nAnd with their interactive demo,\n\n424\n00:20:23.210 --> 00:20:25.890\nyou can actually log in to one\nof their sites and see it.\n\n425\n00:20:25.890 --> 00:20:30.680\nAnd actually,\nthe interactive demo seems to be missing,\n\n426\n00:20:30.680 --> 00:20:31.960\nwe can download the free trial.\n\n427\n00:20:31.960 --> 00:20:35.300\nBut anyhow, you can kind of get an idea\nhere from their videos how it works.\n\n428\n00:20:35.300 --> 00:20:39.100\nWhen they connect to a Cisco device,\nyou can expand out the routers and\n\n429\n00:20:39.100 --> 00:20:40.250\nyou see all the interfaces.\n\n430\n00:20:40.250 --> 00:20:42.640\nYou click on an interface,\nyou get pie charts and graphs.\n\n431\n00:20:42.640 --> 00:20:44.730\nYou're not getting raw numbers\non your screen that are a mess,\n\n432\n00:20:44.730 --> 00:20:46.530\nyou get usable data.\n\n433\n00:20:46.530 --> 00:20:48.800\nYou can generate that trend data,\nit's all there,\n\n434\n00:20:48.800 --> 00:20:52.050\nit really does do a pretty impressive job.\n\n435\n00:20:52.050 --> 00:20:55.580\nAnd they've got a handful of\ndifferent products that all do that\n\n436\n00:20:55.580 --> 00:20:57.040\nsame kind of thing.\n\n437\n00:20:57.040 --> 00:20:58.860\nAnd it's really useful.\n\n438\n00:20:58.860 --> 00:21:03.910\nEspecially if you're the one\nwho's being tasked with actually\n\n439\n00:21:03.910 --> 00:21:04.800\nputting this data together.\n\n440\n00:21:04.800 --> 00:21:06.580\nYou've gotta report back to management.\n\n441\n00:21:06.580 --> 00:21:10.020\nAnd management, they don't necessarily\nknow how to read the data like you do.\n\n442\n00:21:10.020 --> 00:21:16.180\nSo software like this is\nwhat lets you actually\n\n443\n00:21:17.260 --> 00:21:21.450\nturn it into usable data that anybody\ncan read and interpret and understand.\n\n444\n00:21:21.450 --> 00:21:26.440\nSo here we go, the interactive device\nhad to do a little creative searching.\n\n445\n00:21:26.440 --> 00:21:28.520\nAnd eventually we got one, here we go.\n\n446\n00:21:28.520 --> 00:21:32.100\nSo when you log in like this, I'm seeing\nall these different devices over here.\n\n447\n00:21:32.100 --> 00:21:34.300\nAnd let's pull up some Cisco devices and\n\n448\n00:21:34.300 --> 00:21:36.400\nthere's some Cisco devices that\nare having problems right now.\n\n449\n00:21:36.400 --> 00:21:38.900\nSee how some of them\nhave red dots on them?\n\n450\n00:21:38.900 --> 00:21:42.110\nAnd when I float over it'll tell\nme this one seems to be down.\n\n451\n00:21:42.110 --> 00:21:43.570\nThe device is offline.\n\n452\n00:21:43.570 --> 00:21:46.200\nBut if you keep looking,\nsome might have yellow marks on them.\n\n453\n00:21:46.200 --> 00:21:48.400\nWhich means it's not down but\nit does have a problem.\n\n454\n00:21:48.400 --> 00:21:52.640\nThis one's critical, it's got some sort of\nhardware status issue and looking at it,\n\n455\n00:21:52.640 --> 00:21:54.540\nthe status issue doesn't\nimmediately show up.\n\n456\n00:21:54.540 --> 00:21:57.840\nBut it's got one or\nmore interface is showing as unknown.\n\n457\n00:21:57.840 --> 00:22:01.200\nSo if I click on that device,\nit's gonna take me in and\n\n458\n00:22:01.200 --> 00:22:02.750\nI'll see some more information.\n\n459\n00:22:02.750 --> 00:22:05.500\nAnd all this information\nis coming from SNMP.\n\n460\n00:22:05.500 --> 00:22:07.940\nIt's gathering it,\nputting it in a database and\n\n461\n00:22:07.940 --> 00:22:09.860\nthen representing it right here.\n\n462\n00:22:09.860 --> 00:22:14.260\nSo we can start to see,\nlike this example here, the response time.\n\n463\n00:22:14.260 --> 00:22:16.510\nAnd I can see for the most part\nwe're less than one millisecond,\n\n464\n00:22:16.510 --> 00:22:17.700\nthat's good response time.\n\n465\n00:22:17.700 --> 00:22:21.740\nBut see how it's tracked it, over and\nover and over again, I get trends.\n\n466\n00:22:21.740 --> 00:22:25.130\nAnd I can see this is peak time,\nthis is when business hours open and\n\n467\n00:22:25.130 --> 00:22:26.090\nthings get really busy.\n\n468\n00:22:26.090 --> 00:22:27.360\nAnd here's the middle of the night, so\n\n469\n00:22:27.360 --> 00:22:32.730\nI expect it to be low, you can see hard\ndrive utilization or memory and CPU load.\n\n470\n00:22:32.730 --> 00:22:35.140\nMaybe the CPU is being\ntaxed on this system,\n\n471\n00:22:35.140 --> 00:22:37.530\nso you can get an idea of\nthat when you look at it.\n\n472\n00:22:37.530 --> 00:22:40.670\n&gt;&gt; And all this information\nagain is based on those OIDs.\n\n473\n00:22:40.670 --> 00:22:43.590\nAgain, getting loaded\ninto that MIB database.\n\n474\n00:22:43.590 --> 00:22:45.950\nAnd then the software itself\njust interprets it for you and\n\n475\n00:22:45.950 --> 00:22:48.835\nputs something out there that well,\nWest can even read.\n\n476\n00:22:48.835 --> 00:22:50.384\n&gt;&gt; Yeah, that's exactly what it does.\n\n477\n00:22:50.384 --> 00:22:51.950\nBut obviously this is not cheap software.\n\n478\n00:22:51.950 --> 00:22:53.380\nSo on the cheap side,\n\n479\n00:22:53.380 --> 00:22:55.830\nyou can obviously query it yourself\nfrom the command line like I did.\n\n480\n00:22:55.830 --> 00:23:00.600\nSnmpWalk is open source software that is\nbuilt into just about every Unix system.\n\n481\n00:23:00.600 --> 00:23:03.810\nThere's also some other third party\nutilities that are out there.\n\n482\n00:23:03.810 --> 00:23:06.400\nI know manage engine has a free one.\n\n483\n00:23:06.400 --> 00:23:08.732\nThis one is called iReasoning mid browser.\n\n484\n00:23:08.732 --> 00:23:10.217\nThey have a free personal version,\n\n485\n00:23:10.217 --> 00:23:12.830\nthey also have enterprise\nversions that cost money.\n\n486\n00:23:12.830 --> 00:23:17.170\nAnd this is actually a straight up MIB\ntree walker, see how it says MIB tree?\n\n487\n00:23:17.170 --> 00:23:21.310\nAnd what this let's you do is\nconnect to a device like my router.\n\n488\n00:23:21.310 --> 00:23:25.380\nAnd you can punch in a community string,\nwhich you kind of need.\n\n489\n00:23:25.380 --> 00:23:30.240\nSo I can give it the itprotv-ro and\nitprotv-rw.\n\n490\n00:23:30.240 --> 00:23:33.122\nWe can specify what version of SNMP\nwe're running, I'm running version 2.\n\n491\n00:23:33.122 --> 00:23:36.300\nAnd then you can tell it to gather data.\n\n492\n00:23:36.300 --> 00:23:40.310\nNow, earlier I was pulling from\nwhat was it, the 1.3 table and\n\n493\n00:23:40.310 --> 00:23:41.730\nsee how it's got 1.3 here?\n\n494\n00:23:41.730 --> 00:23:47.410\nIf I just leave it way up at 1, 3, and\ntell it to get next, let me just run that.\n\n495\n00:23:47.410 --> 00:23:50.261\nIt's gonna reach out and\nsee how it's gathering data and\n\n496\n00:23:50.261 --> 00:23:51.874\nit's bringing it back in here.\n\n497\n00:23:51.874 --> 00:23:56.505\nAnd so I can start to look at that\ndata and if I double-click on it.\n\n498\n00:23:56.505 --> 00:23:58.389\nSee how it just exploded over here.\n\n499\n00:23:58.389 --> 00:24:00.389\nAnd now I can start to see inside of it.\n\n500\n00:24:00.389 --> 00:24:03.510\nI'm seeing management data,\nI'm inside the system object ID.\n\n501\n00:24:03.510 --> 00:24:08.385\nHere's the system contact, and if I take\na look at that you can see Don Pezet,\n\n502\n00:24:08.385 --> 00:24:11.420\ndon@itpro.tv, that's what I\nput in when I configured this.\n\n503\n00:24:11.420 --> 00:24:15.190\nAnd system location,\nif we take a look at that.\n\n504\n00:24:15.190 --> 00:24:17.070\nThere it is, Gainesville, Florida, right?\n\n505\n00:24:17.070 --> 00:24:18.570\nIt's harvesting this information.\n\n506\n00:24:18.570 --> 00:24:20.015\nAnd I can just browse through and\n\n507\n00:24:20.015 --> 00:24:24.680\ndouble-click on it, and find what I'm\nlooking for if I don't know it, right?\n\n508\n00:24:24.680 --> 00:24:28.570\nIf I knew it, if I knew the actual\nnumber here, I could type in the OID and\n\n509\n00:24:28.570 --> 00:24:29.280\nfind it, right?\n\n510\n00:24:29.280 --> 00:24:31.235\nSo there's plenty of software\nout there like this.\n\n511\n00:24:31.235 --> 00:24:35.232\nAnd you'll see, here's I can query the\ninterfaces, here's the interface table.\n\n512\n00:24:35.232 --> 00:24:38.245\nSo I can look at all the different\ninterfaces that I have in the system ,and\n\n513\n00:24:38.245 --> 00:24:41.130\nthen I can look into each interface and\nsee the bandwidth and all that.\n\n514\n00:24:41.130 --> 00:24:44.813\nIt's all tucked away in the system,\nif you just know how to ask.\n\n515\n00:24:44.813 --> 00:24:47.394\nAnd that's what the teaches.\n\n516\n00:24:47.394 --> 00:24:51.420\nAll right, so we've seen SNMP\nwork with version two, right.\n\n517\n00:24:51.420 --> 00:24:54.440\nThe simple not crazy complex stuff, but\n\n518\n00:24:54.440 --> 00:24:56.590\nthat's not what we really want\nto use in production any more.\n\n519\n00:24:56.590 --> 00:24:58.820\nWe really wanna use SNMP version three.\n\n520\n00:24:58.820 --> 00:25:00.320\nSNMP version three, at its heart,\n\n521\n00:25:00.320 --> 00:25:03.760\nworks the same as version two,\nit just adds security.\n\n522\n00:25:03.760 --> 00:25:06.210\nAdds just a little more\ncontrol over what we wanna do.\n\n523\n00:25:06.210 --> 00:25:07.380\nSo let me show you an example, and\n\n524\n00:25:07.380 --> 00:25:10.130\nthis'll get a little more complex\nthan what we saw a moment ago.\n\n525\n00:25:10.130 --> 00:25:14.470\nAll right, so instead of defining\nthings as just straight up communities,\n\n526\n00:25:14.470 --> 00:25:18.140\nwe're gonna go a step further, and set\nup some basic authentication, all right.\n\n527\n00:25:18.140 --> 00:25:22.710\nSo, the first thing you can do, is when\nyou grant somebody access to SNMP version\n\n528\n00:25:22.710 --> 00:25:26.430\nthree, you don't have to\ngive them the whole tree.\n\n529\n00:25:26.430 --> 00:25:28.600\nWhat we did in version two,\nyou get the whole tree.\n\n530\n00:25:28.600 --> 00:25:30.760\nIn version three,\nwe can define what are called views.\n\n531\n00:25:30.760 --> 00:25:33.890\nAnd a view can limit somebody\nto an individual tree.\n\n532\n00:25:33.890 --> 00:25:40.620\nSo I might do something like this,\nSNMP server view, and then create a view.\n\n533\n00:25:40.620 --> 00:25:43.740\nAnd so I might call this view IOS version,\nright?\n\n534\n00:25:43.740 --> 00:25:45.260\nSo this view, if somebody queries it,\n\n535\n00:25:45.260 --> 00:25:48.380\nit's only going to contain\nthe IOS version and that's it.\n\n536\n00:25:49.470 --> 00:25:51.360\nSo I'll say ios-version.\n\n537\n00:25:51.360 --> 00:25:54.040\nAnd then I'm gonna tell it\nexactly what to get to.\n\n538\n00:25:54.040 --> 00:25:56.614\nAnd I'm gonna type that big long OID,\n\n539\n00:25:56.614 --> 00:26:00.803\nwhich I probably should have copy and\npasted, but here we go.\n\n540\n00:26:00.803 --> 00:26:04.850\nAnd I'm gonna go all the way down\nto .7 this time, I'll get it right.\n\n541\n00:26:04.850 --> 00:26:06.430\nAnd I'm gonna say included.\n\n542\n00:26:06.430 --> 00:26:09.870\nThat included keyword is important\nbecause you can exclude things too.\n\n543\n00:26:09.870 --> 00:26:14.510\nI might want to give them the whole 1.3.6\ntree and exclude certain things from it.\n\n544\n00:26:14.510 --> 00:26:16.180\nI'm gonna do included.\n\n545\n00:26:16.180 --> 00:26:21.050\nAll right, so that's gonna be a view\nthat just has the iOS version.\n\n546\n00:26:21.050 --> 00:26:25.542\nI might do a bigger one that is used for\nmy management software, right?\n\n547\n00:26:25.542 --> 00:26:30.158\nSo I might create a view called\nmgmt-software, all right?\n\n548\n00:26:30.158 --> 00:26:32.725\nAnd in this one,\nI might add tons of stuff, right?\n\n549\n00:26:32.725 --> 00:26:37.568\nI might take the iso tree,\nwhich is the bulk of the SNMP data, and\n\n550\n00:26:37.568 --> 00:26:39.750\nmake that included.\n\n551\n00:26:39.750 --> 00:26:45.950\nI might do the mib-2, which is where\nsome of the advanced data is stored.\n\n552\n00:26:45.950 --> 00:26:47.940\nI might do,\nwhat are some of the other ones?\n\n553\n00:26:49.550 --> 00:26:52.667\nI'm trying to do some of this from memory.\n\n554\n00:26:52.667 --> 00:26:54.994\nThe Cisco one is actually\nanother useful one.\n\n555\n00:26:54.994 --> 00:26:57.146\nSo I'm in adding in entire trees and\n\n556\n00:26:57.146 --> 00:27:00.533\nbasically giving this thing\na pretty big view, right?\n\n557\n00:27:00.533 --> 00:27:04.138\nI could have also just done it by\nthe number and said, 1.3 and stop.\n\n558\n00:27:04.138 --> 00:27:07.981\n1.3 lines up with the ISO tree\nwhich has most of what I want.\n\n559\n00:27:07.981 --> 00:27:12.290\nYou could also just say 1, and it would\ndo the whole stinking thing altogether.\n\n560\n00:27:12.290 --> 00:27:15.242\nSo a couple of different options\nthere with how we create it.\n\n561\n00:27:15.242 --> 00:27:18.635\nAll right, so those of views\nthat is one powerful thing, but\n\n562\n00:27:18.635 --> 00:27:21.827\nthe other powerful thing is\nthat i can create groups, and\n\n563\n00:27:21.827 --> 00:27:26.371\ngive the groups access to these views and\ncreate users and put them in the groups.\n\n564\n00:27:26.371 --> 00:27:29.127\nSo, for example,\nI might creat a group for my help desk.\n\n565\n00:27:29.127 --> 00:27:32.527\nSo i say snap-server group.\n\n566\n00:27:33.659 --> 00:27:35.459\nHelp desk, so I'm creating a group.\n\n567\n00:27:35.459 --> 00:27:37.428\nObviously this has to\nbe a version 3 group,\n\n568\n00:27:37.428 --> 00:27:39.250\ncuz we don't have groups in version 2.\n\n569\n00:27:39.250 --> 00:27:41.010\nSo this is an SMP version 3.\n\n570\n00:27:41.010 --> 00:27:45.270\nAnd then, I need to set up how we're\ngonna be handling authentication,\n\n571\n00:27:45.270 --> 00:27:47.630\nas far as read, or read and write.\n\n572\n00:27:47.630 --> 00:27:49.340\nOkay, so\nI'm gonna give this one just read.\n\n573\n00:27:49.340 --> 00:27:51.868\nI want the help desk to be able to\nquery data from the system, but\n\n574\n00:27:51.868 --> 00:27:53.511\nnot actually change anything, right?\n\n575\n00:27:53.511 --> 00:27:55.570\nThe network admins change things.\n\n576\n00:27:55.570 --> 00:27:58.290\nAnd then we can tell it what\nI want them to read, and\n\n577\n00:27:58.290 --> 00:28:02.620\nI wanna give them the iOS version view.\n\n578\n00:28:02.620 --> 00:28:06.400\nSo when I do that ios-version,\nnow anybody from the help desk,\n\n579\n00:28:06.400 --> 00:28:07.170\nany user that's in there,\n\n580\n00:28:07.170 --> 00:28:12.200\nwill be able to query it and they'll be\nable to get just the iOS version view.\n\n581\n00:28:12.200 --> 00:28:13.380\nSo now they can query that version or\n\n582\n00:28:13.380 --> 00:28:15.240\nwhatever other individual\nelements I wanna give them.\n\n583\n00:28:15.240 --> 00:28:18.300\nBut what about my management software?\n\n584\n00:28:18.300 --> 00:28:22.790\nSo if I am using Solar Winds and\nI want to create an account or\n\n585\n00:28:22.790 --> 00:28:24.590\na group for them and give them access,\n\n586\n00:28:24.590 --> 00:28:29.800\nI basically do the same command, except I\nwould do a different group name obviously,\n\n587\n00:28:29.800 --> 00:28:33.990\nand instead of ios-version, I would say\nmanagement-software and specify that.\n\n588\n00:28:35.670 --> 00:28:39.610\nAll right, next,\nI want to create a user account.\n\n589\n00:28:39.610 --> 00:28:40.970\nSo maybe I want to create\na user account for me.\n\n590\n00:28:40.970 --> 00:28:43.070\nSo I'm gonna be in the helpdesk group.\n\n591\n00:28:43.070 --> 00:28:49.600\nSo, I'll say, snmp=server user dpezet,\nso, an account for me.\n\n592\n00:28:49.600 --> 00:28:53.300\nI'm gonna put myself in\nthe helpdesk group, right.\n\n593\n00:28:53.300 --> 00:28:53.950\nSo I'm in that group.\n\n594\n00:28:53.950 --> 00:28:55.760\nThat means I can be taken\nout of the group later.\n\n595\n00:28:55.760 --> 00:28:56.860\nI don't have to mess with the group.\n\n596\n00:28:56.860 --> 00:28:58.870\nI don't have to mess\nwith those permissions.\n\n597\n00:28:58.870 --> 00:29:04.240\nAnd then, I can say I'm v3, also,\nand for the authentication, I'm\n\n598\n00:29:04.240 --> 00:29:08.530\ngonna get whether I'm read or read write\nbased on the group that I'm in, right?\n\n599\n00:29:08.530 --> 00:29:10.340\nThat's what we set up here.\n\n600\n00:29:10.340 --> 00:29:13.180\nSo, here, the authentication\nneeds to be what my password is.\n\n601\n00:29:13.180 --> 00:29:16.470\nAnd we can do an md5 hashed password,\nwhich is important, right?\n\n602\n00:29:16.470 --> 00:29:18.850\nWe don't want to have non-secure\npasswords like version two,\n\n603\n00:29:18.850 --> 00:29:21.500\nwhere it sends community strings over\nthe Internet or over the network.\n\n604\n00:29:21.500 --> 00:29:23.890\nI wanna make sure that I have\nmy individual password, and\n\n605\n00:29:23.890 --> 00:29:25.870\nI can type in whatever that's gonna be,\nI'll do cisco123.\n\n606\n00:29:27.540 --> 00:29:32.810\nSo when I run that, if I do a show run,\n\n607\n00:29:32.810 --> 00:29:37.840\nand I look for SNMP lines, I can find\nwhere my user account is in there.\n\n608\n00:29:37.840 --> 00:29:40.810\nAnd, let's see, where'd my, shoot,\n\n609\n00:29:40.810 --> 00:29:46.240\nit actually puts it under\na little nested entry.\n\n610\n00:29:46.240 --> 00:29:50.187\nAnd, let's see,\nwhere did my user account go?\n\n611\n00:29:50.187 --> 00:29:53.690\n[LAUGH] So, it creates a user account and\nnormally makes it into the config, but\n\n612\n00:29:53.690 --> 00:29:54.560\nI lost mine.\n\n613\n00:29:54.560 --> 00:29:59.550\nActually, I did get a little message\nabout, there we go let's check that and\n\n614\n00:30:02.570 --> 00:30:05.000\nshoot, I forgot, this is actually\nbeing stored in a different database,\n\n615\n00:30:05.000 --> 00:30:07.410\nwhich is why it's not showing up here,\nwe'll see it in just a second.\n\n616\n00:30:07.410 --> 00:30:11.660\nSo, once that user account's created,\nthat user account is now in the helpdesk,\n\n617\n00:30:11.660 --> 00:30:13.620\nin that group, and able to communicate.\n\n618\n00:30:13.620 --> 00:30:15.240\nNow, I forgot a step, right?\n\n619\n00:30:15.240 --> 00:30:16.980\nThe different database that I mentioned.\n\n620\n00:30:16.980 --> 00:30:18.850\nAll right, so what is this\nother database that I speak of?\n\n621\n00:30:18.850 --> 00:30:20.800\nWell, actually I kind of forgot about it,\nright?\n\n622\n00:30:20.800 --> 00:30:22.650\nThe user counts don't go\ninto the configuration,\n\n623\n00:30:22.650 --> 00:30:25.830\nthey go into a separate SNMP database\nthat's stored right there on the router.\n\n624\n00:30:25.830 --> 00:30:27.410\nSo I'm not gonna see it\nin the config right here.\n\n625\n00:30:27.410 --> 00:30:31.660\nBut if we get out of our config for\na minute, you can do a show SNMP.\n\n626\n00:30:32.790 --> 00:30:35.870\nAnd if you do a question mark, you'll see\nall the different things you can view,\n\n627\n00:30:35.870 --> 00:30:38.410\nincluding the users in groups.\n\n628\n00:30:38.410 --> 00:30:42.890\nAnd so I'm gonna do a show SNMP user And\nwhen I run that, I can see right there,\n\n629\n00:30:42.890 --> 00:30:45.190\nthere's my user account, dpezet.\n\n630\n00:30:45.190 --> 00:30:48.110\nAnd the authentication protocol is MD5 or\nhas passwords.\n\n631\n00:30:48.110 --> 00:30:49.420\nAnd I'm in the help desk group.\n\n632\n00:30:49.420 --> 00:30:51.670\nSo my user account definitely got created.\n\n633\n00:30:51.670 --> 00:30:54.610\nIt's just not in the configuration\nof the router, right.\n\n634\n00:30:54.610 --> 00:30:55.540\nIt's stored separate.\n\n635\n00:30:55.540 --> 00:30:58.450\nThat also means that if I take\nthis config and back it up,\n\n636\n00:30:58.450 --> 00:31:02.450\nif I were to store the config on a new\nrouter, I may be missing my user account.\n\n637\n00:31:02.450 --> 00:31:04.590\nSo that's something we need\nto keep recordkeeping of.\n\n638\n00:31:04.590 --> 00:31:08.030\nYou can also use triple a, which is a\nlittle bit beyond what this episode does,\n\n639\n00:31:08.030 --> 00:31:11.200\nto account for those users in a different\nway where their stored on the network.\n\n640\n00:31:11.200 --> 00:31:14.400\nBut here they're just stored\nin the SNMP database.\n\n641\n00:31:14.400 --> 00:31:18.459\nAll right, so now, I'm basically\nconfigured for snmp version 3.\n\n642\n00:31:18.459 --> 00:31:21.449\nIf I do a show run,\nI need that do command,\n\n643\n00:31:21.449 --> 00:31:26.660\ncus I'm out of config already, and\nI pull up all the SNMP commands.\n\n644\n00:31:26.660 --> 00:31:27.950\nI've got quite a few in here.\n\n645\n00:31:27.950 --> 00:31:31.510\nNow some of these I don't\nactually need anymore.\n\n646\n00:31:31.510 --> 00:31:36.380\nSo, for example, where I went through and\ndefined some settings,\n\n647\n00:31:36.380 --> 00:31:40.950\nlike the community steams and stuff, I've\ngot access control lists on them which\n\n648\n00:31:41.960 --> 00:31:45.760\nare not necessarily gonna matter any more\nunless I'm doing version two queries.\n\n649\n00:31:45.760 --> 00:31:49.089\nI've got my passwords, so I might wanna\nkinda clean that up a little bit, but\n\n650\n00:31:49.089 --> 00:31:50.846\notherwise, version 3 is up and going.\n\n651\n00:31:50.846 --> 00:31:54.425\nYou see where version 3 is a little\nmore complex to get configured, but\n\n652\n00:31:54.425 --> 00:31:56.344\nonce it's there we're in business.\n\n653\n00:31:56.344 --> 00:32:00.096\nNow if I want to query that,\nlet me jump over to my terminal again.\n\n654\n00:32:00.096 --> 00:32:02.888\nBefore, I mean I had\na long command before,\n\n655\n00:32:02.888 --> 00:32:06.160\nwhen I was querying using version 2C.\n\n656\n00:32:06.160 --> 00:32:10.400\nIf I wanna query with version 3,\nthat line changes a good bit.\n\n657\n00:32:10.400 --> 00:32:13.661\nSo I'm gonna come in and\nsay that I'm querying with version 3.\n\n658\n00:32:13.661 --> 00:32:18.327\nAnd then I need to tell it that I\ndon't need a community string cause,\n\n659\n00:32:18.327 --> 00:32:20.130\nthat's very version 2.\n\n660\n00:32:20.130 --> 00:32:24.985\nSo, when i do this I'm gonna query in and\nI'm gonna give it a log in name and\n\n661\n00:32:24.985 --> 00:32:28.380\nI'll say my authorization is no privilege.\n\n662\n00:32:28.380 --> 00:32:33.217\nIn other words I'm not rewrite, I'm not\nan admin, I'm just asking a question.\n\n663\n00:32:33.217 --> 00:32:37.935\nAnd then I need to tell it my\nuser account which is dpezet.\n\n664\n00:32:37.935 --> 00:32:43.489\nAnd then I need to tell it my\nauthentication protocol which is MD5 and\n\n665\n00:32:43.489 --> 00:32:47.628\nI need to tell it my\npassword which is cisco123.\n\n666\n00:32:47.628 --> 00:32:51.680\nNow I'm gonna hash that, and\nonly send the hash over the network.\n\n667\n00:32:51.680 --> 00:32:55.580\nAnd on the router side it's gonna hash the\npassword and compare that with what's on\n\n668\n00:32:55.580 --> 00:32:58.710\nits side, and if the hashes match then\nwe know I sent the right password.\n\n669\n00:32:58.710 --> 00:33:01.470\nSo I'm not sending my password over\nthe network, that's important.\n\n670\n00:33:01.470 --> 00:33:04.710\nAnd then I tell it who I'm\ngonna be reaching out to, and\n\n671\n00:33:04.710 --> 00:33:06.170\nwhat information I want.\n\n672\n00:33:06.170 --> 00:33:10.820\nAnd when I go to query that,\nit reaches out and it gets it.\n\n673\n00:33:10.820 --> 00:33:14.970\nAnd right there,\nI can see that I am running Version 15.1.\n\n674\n00:33:14.970 --> 00:33:17.610\nMy user account was in\nthe help desk group.\n\n675\n00:33:17.610 --> 00:33:21.230\nSo I was able to query this and\nI was able to get dot seven.\n\n676\n00:33:21.230 --> 00:33:25.780\nIf I try and query something else,\nwell, actually I guess I did, I forgot.\n\n677\n00:33:25.780 --> 00:33:27.690\nI didn't type in the dot seven,\nthere, right?\n\n678\n00:33:27.690 --> 00:33:31.440\nSo queried everything that was in 1.1.1.2.\n\n679\n00:33:31.440 --> 00:33:36.212\nBut I only got back 1.1.1.2.7.\n\n680\n00:33:36.212 --> 00:33:38.540\nWhere did 2.6 go, 2.5, 2.4?\n\n681\n00:33:38.540 --> 00:33:40.130\nThey were all there a minute ago.\n\n682\n00:33:40.130 --> 00:33:42.960\nWe saw them in the third party software,\nright?\n\n683\n00:33:42.960 --> 00:33:45.240\nAll those other ones that\nget tucked away in there.\n\n684\n00:33:45.240 --> 00:33:48.160\nOr even in my previous query back here.\n\n685\n00:33:48.160 --> 00:33:52.762\nWhen I ran that earlier query,\nright here I got .1,.2, .3, .4, .5,\n\n686\n00:33:52.762 --> 00:33:54.310\n.6 and then there's 7.\n\n687\n00:33:54.310 --> 00:33:57.880\nWell, in my new one I'm\nlimited by that view.\n\n688\n00:33:57.880 --> 00:34:03.340\nIf I were to try and query .6, no such\ninstance currently exists at this OID.\n\n689\n00:34:03.340 --> 00:34:06.410\nI know it exists,\nI'm just not allowed to see it.\n\n690\n00:34:06.410 --> 00:34:10.430\nAnd if I do .7, there we go,\nI get the IOS version back.\n\n691\n00:34:10.430 --> 00:34:12.196\nActually, let's see,\nno more variables left.\n\n692\n00:34:12.196 --> 00:34:13.560\nThis one is, shoot,\n\n693\n00:34:13.560 --> 00:34:18.288\ncuz I've only allowed one value I actually\nhave to query the parent to get it back.\n\n694\n00:34:18.288 --> 00:34:19.810\nAnd there we go, there's my dot seven.\n\n695\n00:34:19.810 --> 00:34:22.580\nSo we could pull that back and\nwe get it, that's all I see.\n\n696\n00:34:22.580 --> 00:34:25.340\nThat's that filter kicking\nin place to make sure\n\n697\n00:34:25.340 --> 00:34:27.770\nthat I only get the data\nI'm allowed to see.\n\n698\n00:34:27.770 --> 00:34:28.850\nVery powerful stuff.\n\n699\n00:34:28.850 --> 00:34:29.600\n&gt;&gt; That's very good and\n\n700\n00:34:29.600 --> 00:34:33.490\nit's nice that you can implement that\nrole based access control in version 3.\n\n701\n00:34:33.490 --> 00:34:35.570\nNow, all things must come to an end so\n\n702\n00:34:35.570 --> 00:34:38.020\nit does look like we're coming\nto the end of another episode.\n\n703\n00:34:38.020 --> 00:34:41.550\nBut Don, before we do, do you have\nany parting words of advice on SNMP?\n\n704\n00:34:41.550 --> 00:34:42.290\n&gt;&gt; All right, for\n\n705\n00:34:42.290 --> 00:34:46.600\nthe exam you need to know how to configure\nversion 2 which is super easy, right?\n\n706\n00:34:46.600 --> 00:34:50.713\nYou community strings, set it as read only\nor read-write, maybe attach an access\n\n707\n00:34:50.713 --> 00:34:54.080\nlist, that's it, SNMP version 2,\neasy and you need version 3.\n\n708\n00:34:54.080 --> 00:34:57.704\nSo version 3, know how to create a view,\nknow how to create a group,\n\n709\n00:34:57.704 --> 00:34:59.450\nknow how to create a user.\n\n710\n00:34:59.450 --> 00:35:02.040\nAnd know how to have a view\nattached to a group,\n\n711\n00:35:02.040 --> 00:35:04.480\nhave a user in the group and\nknow that part.\n\n712\n00:35:04.480 --> 00:35:06.580\nThat's all you need to know,\nthe router side.\n\n713\n00:35:06.580 --> 00:35:09.250\nDon't worry about the Unix command,\nthe big long command that I just did,\n\n714\n00:35:09.250 --> 00:35:09.905\ndon't worry about that.\n\n715\n00:35:09.905 --> 00:35:11.630\nCisco's not gonna hammer you on that.\n\n716\n00:35:11.630 --> 00:35:13.350\nThey want you to know the router side.\n\n717\n00:35:13.350 --> 00:35:15.500\nHow you get it set up over there,\nthat's the important part.\n\n718\n00:35:15.500 --> 00:35:17.656\n&gt;&gt; Well Don,\nwe appreciate you stopping by the studios.\n\n719\n00:35:17.656 --> 00:35:20.510\nAnd in part in this information,\nwe appreciate you the viewer watching,\n\n720\n00:35:20.510 --> 00:35:21.640\nwe hope you enjoyed it.\n\n721\n00:35:21.640 --> 00:35:23.790\nBut we're gonna go ahead and\nsign out here at ITProTV.\n\n722\n00:35:23.790 --> 00:35:25.800\nI've been your host, Wes Bryan.\n\n723\n00:35:25.800 --> 00:35:26.840\n&gt;&gt; And I'm Don Pezet.\n\n724\n00:35:26.840 --> 00:35:27.954\n&gt;&gt; And we'll see you next time.\n\n725\n00:35:27.954 --> 00:35:35.007\n[MUSIC]\n\n726\n00:35:35.007 --> 00:35:38.678\nThank you for watching ITPRO.TV.\n\n",
          "vimeoId": "188994780"
        },
        {
          "description": "In this episode, Wes and Don explore IP service level agreements (SLAs) and tracking objects. They explain what types of things can be monitored with SLAs and demonstrate configuring them.",
          "length": "2264",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/cisco-ccna200105/cisco-ccna200105-5-2-ip_slas_and_tracking-102116.00_37_27_01.Still001.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/cisco-ccna200105/cisco-ccna200105-5-2-ip_slas_and_tracking-102116.00_37_27_01.Still001-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/cisco-ccna200105/cisco-ccna200105-5-2-ip_slas_and_tracking-102116.00_37_27_01.Still001-sm.jpg",
          "title": "IP SLA's and Tracking Objects",
          "transcript": "WEBVTT\n\n1\n00:00:00.180 --> 00:00:02.905\nWelcome to ITProTV,\nI'm your host, Don Pezet.\n\n2\n00:00:02.905 --> 00:00:04.595\n&gt;&gt; [CROSSTALK]\n&gt;&gt; Coming at you live from San Francisco.\n\n3\n00:00:04.595 --> 00:00:08.578\n[CROSSTALK]\n\n4\n00:00:08.578 --> 00:00:12.270\n&gt;&gt; You're watching ITProTV.\n\n5\n00:00:12.270 --> 00:00:15.310\n&gt;&gt; Welcome back to another\nexciting episode here at ITProTV.\n\n6\n00:00:15.310 --> 00:00:16.570\nI'm your host, Wes Bryan.\n\n7\n00:00:16.570 --> 00:00:20.300\nAnd in today's episode we're continuing\nalong in our Cisco, routing and switching.\n\n8\n00:00:20.300 --> 00:00:22.620\nAnd we're looking at\ninfrastructure maintenance.\n\n9\n00:00:22.620 --> 00:00:25.630\nJoining me back in the studios\ntoday is none other than Don Pezet.\n\n10\n00:00:25.630 --> 00:00:26.702\nDon, how you doing, sir?\n\n11\n00:00:26.702 --> 00:00:29.380\n&gt;&gt; I am doing swell Wes, and\nready to jump right back in.\n\n12\n00:00:29.380 --> 00:00:33.170\nIn this episode we're gonna be\ntaking a look at IP SLAs or\n\n13\n00:00:33.170 --> 00:00:34.715\nService Level Agreements.\n\n14\n00:00:34.715 --> 00:00:38.840\nAnd the SLA is, it's actually a pretty\nmisunderstood feature inside of Cisco\n\n15\n00:00:38.840 --> 00:00:39.680\nrouters and switches.\n\n16\n00:00:39.680 --> 00:00:41.480\nBut it's one that's pretty darn useful,\n\n17\n00:00:41.480 --> 00:00:44.520\nIf you know how to get configured and\nput it to work.\n\n18\n00:00:44.520 --> 00:00:47.040\nSo let's talk about it a little bit.\n\n19\n00:00:47.040 --> 00:00:49.100\nFirst off, let's start with the basics.\n\n20\n00:00:49.100 --> 00:00:50.718\nRight, what the heck is an SLA?\n\n21\n00:00:50.718 --> 00:00:53.050\nWes and I were actually talking\nabout it right before this show.\n\n22\n00:00:53.050 --> 00:00:55.530\nWhen most people hear SLA,\nservice level agreement,\n\n23\n00:00:55.530 --> 00:00:59.630\nyou think about the contract that you\nenter into when you buy an Internet line.\n\n24\n00:00:59.630 --> 00:01:01.520\nWhen you reach out to\na telephone company and\n\n25\n00:01:01.520 --> 00:01:04.700\nyou buy point-to-point private lines,\nT1's, MPLS,\n\n26\n00:01:04.700 --> 00:01:09.430\neven just Internet connections,\neven your cable modem at home.\n\n27\n00:01:09.430 --> 00:01:11.969\nIf you have a broadband cable internet or\nDSL,\n\n28\n00:01:11.969 --> 00:01:15.432\na lot of times as part of the contract\nyou sign when you buy that.\n\n29\n00:01:15.432 --> 00:01:19.508\nThere's a service level\nagreement where they say, look,\n\n30\n00:01:19.508 --> 00:01:24.490\nthat line is going to be up 98% of\nthe time, or 99.5% of the time.\n\n31\n00:01:24.490 --> 00:01:27.610\nOr we'll hold your down time\nto 1 hour a month or less, or\n\n32\n00:01:27.610 --> 00:01:29.830\nsomething like that, right?\n\n33\n00:01:29.830 --> 00:01:32.890\nThat's the service level agreement\nyou enter into with that company.\n\n34\n00:01:32.890 --> 00:01:36.320\nThey're guaranteeing a certain level of\nservice that's gonna be available for you.\n\n35\n00:01:36.320 --> 00:01:39.560\nAnd if they don't meet\nthat level of service,\n\n36\n00:01:39.560 --> 00:01:41.310\nthey normally give you\nsome kind of a credit.\n\n37\n00:01:41.310 --> 00:01:44.300\nThey refund you a little bit,\nright, so that's what an SLA is.\n\n38\n00:01:45.360 --> 00:01:49.490\nBut that's not exactly what an SLA\nis inside of a Cisco router or\n\n39\n00:01:49.490 --> 00:01:50.810\na Cisco switch.\n\n40\n00:01:50.810 --> 00:01:52.770\nThe SLAs that we work with\ninside of the routers and\n\n41\n00:01:52.770 --> 00:01:57.760\nswitches are more like internal SLAs,\nones that we track for our own purposes.\n\n42\n00:01:57.760 --> 00:02:02.650\nAnd the example I like to use is If I have\na contract from an ISP that says they're\n\n43\n00:02:02.650 --> 00:02:07.080\ngonna keep my line up and hold it to less\nthan half an hour of downtime a month.\n\n44\n00:02:08.350 --> 00:02:12.680\nHow do I know, in a given month, that line\nhad less than half an hour of downtime?\n\n45\n00:02:12.680 --> 00:02:15.910\nWell, I can use monitoring software,\nif I have third-party monitoring software,\n\n46\n00:02:15.910 --> 00:02:16.960\nI could do that.\n\n47\n00:02:16.960 --> 00:02:19.120\nI could look at the reports from the ISP.\n\n48\n00:02:19.120 --> 00:02:24.150\nBut can you trust the reporting from\nthe people who were causing the downtime?\n\n49\n00:02:24.150 --> 00:02:25.300\nMaybe not, right?\n\n50\n00:02:25.300 --> 00:02:28.110\nSo it'd be nice to have your\nown independent verification\n\n51\n00:02:28.110 --> 00:02:29.600\nof that service level agreement.\n\n52\n00:02:29.600 --> 00:02:35.200\nSo Cisco built in a monitoring sub system,\nan IP SLA built right into the Cisco iOS.\n\n53\n00:02:35.200 --> 00:02:38.850\nAnd you can use it to\ntrack all sorts of things.\n\n54\n00:02:38.850 --> 00:02:44.060\nYou can tell it to watch a line, and\ntell me how much downtime it's had.\n\n55\n00:02:44.060 --> 00:02:46.260\nTell me what the delay\nis like on the line.\n\n56\n00:02:46.260 --> 00:02:50.190\nTell me what the jitter, or\nother performance characteristics are.\n\n57\n00:02:50.190 --> 00:02:54.114\nIP SLAs in the Cisco iOS can\ntrack a ton of different things.\n\n58\n00:02:54.114 --> 00:02:55.434\nIn fact, I got this giant list here.\n\n59\n00:02:55.434 --> 00:02:59.850\nIt can track whether DHCP is functioning,\nwhether DNS is functioning.\n\n60\n00:02:59.850 --> 00:03:02.226\nIt can check Frame Relay configurations,\nFTP, HTTP, right?\n\n61\n00:03:02.226 --> 00:03:05.378\nSo it can actually reach\nout to these systems.\n\n62\n00:03:05.378 --> 00:03:08.664\nYou wanna make sure your\nwebsite is up 24 hours a day,\n\n63\n00:03:08.664 --> 00:03:11.170\nseven days a week, you can do an HTTP SLA.\n\n64\n00:03:11.170 --> 00:03:14.403\nIt'll reach out to that site and\nsee if it can connect to it, and\n\n65\n00:03:14.403 --> 00:03:15.686\ngive you that data back.\n\n66\n00:03:15.686 --> 00:03:20.520\nWe've got pings, jitter I already\nmentioned, MPLS, more pings.\n\n67\n00:03:20.520 --> 00:03:23.500\nThere's actually several types of\npings and jitter it can monitor.\n\n68\n00:03:23.500 --> 00:03:27.360\nGeneric TCP connections,\nmaybe I've got a database server, and\n\n69\n00:03:27.360 --> 00:03:30.290\nI need to be able to connect\nto it on TCP port 1494.\n\n70\n00:03:30.290 --> 00:03:33.290\nWell, if the database server goes down,\nI won't be able to connect to that port.\n\n71\n00:03:33.290 --> 00:03:36.974\nSo I can create an IPS to lay the tracks,\nwhether or not that port is up or down.\n\n72\n00:03:36.974 --> 00:03:39.368\nRight, I can reach out and I can see that.\n\n73\n00:03:39.368 --> 00:03:42.474\nWe can also track VoIP communications,\ncan we establish a SIP connection,\n\n74\n00:03:42.474 --> 00:03:45.310\nthat kinda stuff,\nreally impressive, all right?.\n\n75\n00:03:45.310 --> 00:03:50.250\nWell, that's not exactly what\nwe need to know for the CCNA.\n\n76\n00:03:50.250 --> 00:03:52.570\nFor the CCNA,\nthe exam objective actually says,\n\n77\n00:03:52.570 --> 00:03:57.810\nwe need to know how to use IP SLAs\nto troubleshoot connectivity.\n\n78\n00:03:57.810 --> 00:03:59.640\nNot to track a service level agreement,\n\n79\n00:03:59.640 --> 00:04:03.170\nwhich is what they're really intended for,\nbut to use them for troubleshooting.\n\n80\n00:04:03.170 --> 00:04:04.870\nSo what the heck is that all about?\n\n81\n00:04:04.870 --> 00:04:07.465\nWell, IP SLAs were not intended for\ntroubleshooting.\n\n82\n00:04:07.465 --> 00:04:10.680\nThey were intended for reporting,\nto let you know when there was a problem.\n\n83\n00:04:10.680 --> 00:04:15.400\nBut it turns out they're actually\npretty handy for troubleshooting too.\n\n84\n00:04:15.400 --> 00:04:18.084\nAnd the thing is, you can actually\nuse them several different ways.\n\n85\n00:04:18.084 --> 00:04:20.220\nAnd you can use them for\nways they weren't originally intended.\n\n86\n00:04:20.220 --> 00:04:24.180\nI was, again,\ntalking to Wes before the show about it.\n\n87\n00:04:24.180 --> 00:04:27.580\nIf you've ever seen me troubleshoot\na problem, like on our network here or\n\n88\n00:04:27.580 --> 00:04:31.070\non other companies that I've\nbeen to to help out, that\n\n89\n00:04:31.070 --> 00:04:35.950\nwhen a piece of the network fails or goes\ndown, one of the first things that I'll\n\n90\n00:04:35.950 --> 00:04:40.950\ndo is I'll normally open up a window on my\ncomputer, and I'll start a continual ping.\n\n91\n00:04:40.950 --> 00:04:43.240\nSo, maybe the internet goes down, right?\n\n92\n00:04:43.240 --> 00:04:44.530\nSo what do I do?\n\n93\n00:04:44.530 --> 00:04:47.300\nOn that computer I jump over, I start up\na ping, and I keep it running, right?\n\n94\n00:04:47.300 --> 00:04:51.590\nSo, like here, I'm on a Mac here.\n\n95\n00:04:51.590 --> 00:04:55.730\nOn any Mac or\nLinux based system you just run ping, and\n\n96\n00:04:55.730 --> 00:04:58.480\nyou point it to some external IP,\nall right?\n\n97\n00:04:58.480 --> 00:05:00.959\nAnd it's gonna start pinging,\nand it's gonna ping forever.\n\n98\n00:05:00.959 --> 00:05:04.530\nIt's a continuous ping,\nit's just gonna keep doing that, right?\n\n99\n00:05:04.530 --> 00:05:07.400\nSo let's assume for a moment that\nmy Internet connection was down.\n\n100\n00:05:07.400 --> 00:05:08.762\nWell, this ping is going to start failing.\n\n101\n00:05:08.762 --> 00:05:11.210\nIt's gonna fail, fail, fail.\n\n102\n00:05:11.210 --> 00:05:14.570\nAnd then when I fix the problem,\nI'll see it start again, right?\n\n103\n00:05:14.570 --> 00:05:17.363\nOr if I'm seeing bad\nperformance on the network,\n\n104\n00:05:17.363 --> 00:05:20.962\nI might be paying attention to\nthis latency right here, right?\n\n105\n00:05:20.962 --> 00:05:22.850\nMy delay on that ping.\n\n106\n00:05:22.850 --> 00:05:24.700\nSo I can see the number go up or down.\n\n107\n00:05:24.700 --> 00:05:25.690\nAnd see how it fluctuates?\n\n108\n00:05:25.690 --> 00:05:27.158\nSome are 12.73s.\n\n109\n00:05:27.158 --> 00:05:30.342\nSome are high, like 13.17 something.\n\n110\n00:05:30.342 --> 00:05:36.270\nSo you can watch it and see it happen,\nand you just leave it running.\n\n111\n00:05:36.270 --> 00:05:37.514\nI do this all the time.\n\n112\n00:05:37.514 --> 00:05:39.712\nAnd sometimes I forget and\nI leave it running for days at a time,\n\n113\n00:05:39.712 --> 00:05:40.960\nwhich is my own fault.\n\n114\n00:05:40.960 --> 00:05:45.530\nBut when I'm working the problem, I start\na ping like this and I'll let it run.\n\n115\n00:05:45.530 --> 00:05:47.422\nOn Linux, on Mac,\nit's just done like this.\n\n116\n00:05:47.422 --> 00:05:50.100\nYou just do a ping and hit Ctrl+C to stop.\n\n117\n00:05:50.100 --> 00:05:55.098\nOn Windows, you would actually do a -T,\nand that's what would tell it to just\n\n118\n00:05:55.098 --> 00:05:58.375\nkeep running,\nkeep pinging until the end of time.\n\n119\n00:05:58.375 --> 00:06:01.632\nAnd it would just keep pinging and\ngo, I don't think that works, yet,\n\n120\n00:06:01.632 --> 00:06:03.140\nit doesn't work on Unix.\n\n121\n00:06:03.140 --> 00:06:05.480\nBut on Windows, it's just -T.\n\n122\n00:06:05.480 --> 00:06:08.306\nSo on those platforms,\nit's easy to monitor that stuff.\n\n123\n00:06:08.306 --> 00:06:13.081\nBut if you work for an ISP and\nyou support routers and switches,\n\n124\n00:06:13.081 --> 00:06:16.700\nand you don't have\nworkstations to test from.\n\n125\n00:06:16.700 --> 00:06:19.190\nYou're trying to diagnose\nsomething from a customer site.\n\n126\n00:06:19.190 --> 00:06:20.900\nYou don't have access to their servers and\nworkstations.\n\n127\n00:06:20.900 --> 00:06:23.410\nYou just have access to your router\nthat's out there in the field.\n\n128\n00:06:23.410 --> 00:06:29.890\nWell, on a Cisco router, if I jump over to\na Cisco router, let me get this one, here.\n\n129\n00:06:29.890 --> 00:06:34.640\nAnd, on a Cisco router, when we do pings,\nit's got a lot of options for ping, right?\n\n130\n00:06:34.640 --> 00:06:37.140\nIf I want to do a ping,\nI can ping out to a hostname,\n\n131\n00:06:37.140 --> 00:06:38.980\nI can ping out to IP addresses.\n\n132\n00:06:38.980 --> 00:06:42.180\nI've got all sorts of different stuff,\nso if I wanna ping,\n\n133\n00:06:42.180 --> 00:06:44.682\nwe'll do 192.168.2.4, right?\n\n134\n00:06:44.682 --> 00:06:46.160\nSo I wanna ping that address.\n\n135\n00:06:46.160 --> 00:06:50.400\nWell, I don't get a whole heck of a lot of\noptions that turn up after that, right?\n\n136\n00:06:50.400 --> 00:06:55.070\nWell, I need to actually add a little bit\nmore here, so it knows what I'm doing.\n\n137\n00:06:55.070 --> 00:06:57.550\nAnd then, well, actually,\nwe still don't the options, do we?\n\n138\n00:06:57.550 --> 00:07:01.540\nThere are actually more options I can\ntype right here from the command line.\n\n139\n00:07:01.540 --> 00:07:03.400\nThey just don't show up in\nthe context-sensitive help.\n\n140\n00:07:03.400 --> 00:07:05.860\nSo I could specify a source interface,\nand so on.\n\n141\n00:07:05.860 --> 00:07:08.390\nIf you wanna see all those,\nyou can just run ping by itself and\n\n142\n00:07:08.390 --> 00:07:09.915\nyou can do the advanced commands.\n\n143\n00:07:09.915 --> 00:07:12.830\nThere's also some things missing\nbecause I didn't enable first,\n\n144\n00:07:12.830 --> 00:07:14.300\nwhich I probably should've done.\n\n145\n00:07:14.300 --> 00:07:16.770\nSo when we do it that way,\nlet me take a look at it, there we go.\n\n146\n00:07:16.770 --> 00:07:19.170\nI can start to see all\nthe sub-options showing up.\n\n147\n00:07:19.170 --> 00:07:21.990\nSo here I've got things like,\nI can specify my source interface.\n\n148\n00:07:21.990 --> 00:07:25.960\nI can specify a timeout,\nhow long do I wait for a response?\n\n149\n00:07:25.960 --> 00:07:30.710\nOne thing I can't specify though, is to\nping continually, to just ping forever.\n\n150\n00:07:30.710 --> 00:07:31.740\nIt's not an option.\n\n151\n00:07:31.740 --> 00:07:34.910\nThe closest I get is a repeat, right?\n\n152\n00:07:34.910 --> 00:07:38.392\nNormally when I ping, so,\nif I ping 8.8.8.8, and I run that,\n\n153\n00:07:38.392 --> 00:07:39.680\nit's gonna reach on.\n\n154\n00:07:39.680 --> 00:07:41.888\nShoot, these guys aren't actually\nconnected to the internet.\n\n155\n00:07:41.888 --> 00:07:44.254\nLet me stop that one,\nlet me ping somebody internal.\n\n156\n00:07:44.254 --> 00:07:49.662\nSo, I'll ping 192.168.2.4.\n\n157\n00:07:49.662 --> 00:07:52.065\nThere we go, all right,\nit's gonna send five pings.\n\n158\n00:07:52.065 --> 00:07:58.131\nFive pings with a, I believe it's\nlike a two-millisecond timeout?\n\n159\n00:07:58.131 --> 00:08:01.134\nIt's a really short timeout on Cisco,\nthat's what they do by default.\n\n160\n00:08:01.134 --> 00:08:04.280\nI could bump up the timeout if I want,\nbut I could also do a repeat.\n\n161\n00:08:04.280 --> 00:08:06.803\nAnd so maybe I want to start\na continual ping on this.\n\n162\n00:08:06.803 --> 00:08:09.575\nAnd so I'm like all right, well let\nme just tell it to repeat 100 times.\n\n163\n00:08:09.575 --> 00:08:11.203\nAll right, I want it to repeat 100 times.\n\n164\n00:08:11.203 --> 00:08:16.095\nWell, that's cool, but you'll be surprised\nhow fast it burns through 100 pings.\n\n165\n00:08:16.095 --> 00:08:18.860\nIt's gonna burn through that pretty quick,\nand now it's done.\n\n166\n00:08:18.860 --> 00:08:20.545\nIf I was trying to watch the network for\nperformance,\n\n167\n00:08:20.545 --> 00:08:21.601\nI really didn't get to see that.\n\n168\n00:08:21.601 --> 00:08:24.301\nAnd that's kind of the weakness\nof the ping command here\n\n169\n00:08:24.301 --> 00:08:25.092\non the router\n&gt;&gt; And\n\n170\n00:08:25.092 --> 00:08:28.611\none of the things I notice when you just\npinged on the Cisco's router there is that\n\n171\n00:08:28.611 --> 00:08:31.147\nit really didn't give you\na lot individual information,\n\n172\n00:08:31.147 --> 00:08:32.773\nlike you did in the Unix shell there.\n\n173\n00:08:32.773 --> 00:08:35.909\n&gt;&gt; Yeah, I don't see anything\nindividually, I just see the exclamation\n\n174\n00:08:35.909 --> 00:08:39.108\npoints, and then I get my nice table\nsummary at the end when it finishes.\n\n175\n00:08:39.108 --> 00:08:41.589\nSo if I bumped this interval up to 10,000,\n\n176\n00:08:41.589 --> 00:08:45.470\nactually don't even know what the highest\nnumber is you could put in there.\n\n177\n00:08:45.470 --> 00:08:49.677\n2 billion, so I could put in 2 billion and\nit's gonna start that long ping,\n\n178\n00:08:49.677 --> 00:08:51.359\nbut I've got no way to check and\n\n179\n00:08:51.359 --> 00:08:55.100\nsee the information on it other\nthen if I see some dots up here.\n\n180\n00:08:55.100 --> 00:08:58.552\nBut if I'm doing something like working\non a delay, I'm trying to fix a delay\n\n181\n00:08:58.552 --> 00:09:01.595\nproblem, I'm not gonna see the delay\nuntil it completes the ping.\n\n182\n00:09:01.595 --> 00:09:04.260\nAnd so,\nthat's kind of a limitation of this.\n\n183\n00:09:04.260 --> 00:09:07.685\nAnd most people overcome it by saying, all\nright, well forget it, I'll just go and\n\n184\n00:09:07.685 --> 00:09:09.002\nping from a laptop or a desktop.\n\n185\n00:09:09.002 --> 00:09:11.370\nThat works, you can do that, right.\n\n186\n00:09:11.370 --> 00:09:14.270\nOr you can leverage the IPSLA's.\n\n187\n00:09:14.270 --> 00:09:17.460\nIPSLA's can track this also and\nyou can check\n\n188\n00:09:17.460 --> 00:09:20.948\nthe status of them whenever you want,\nand they keep running if you disconnect.\n\n189\n00:09:20.948 --> 00:09:22.786\nIf I had disconnected when I\nwas halfway through that ping,\n\n190\n00:09:22.786 --> 00:09:23.979\nit wouldn't have run the other ones.\n\n191\n00:09:23.979 --> 00:09:26.373\nAs soon as my shell dies,\nthat ping dies, but\n\n192\n00:09:26.373 --> 00:09:28.525\nan SLA keeps running in the background.\n\n193\n00:09:28.525 --> 00:09:30.920\nSo let me show you how the SLAs work.\n\n194\n00:09:30.920 --> 00:09:33.744\nI'm gonna track this guy right here,\n192.168.2.4.\n\n195\n00:09:33.744 --> 00:09:36.810\nI just wanna track my performance and\nconnectivity to that one.\n\n196\n00:09:36.810 --> 00:09:40.513\nSo I'm gonna jump into my config,\nand I'm gonna get that set up.\n\n197\n00:09:40.513 --> 00:09:43.380\nNow the first thing I'm gonna\ngo is I'm gonna create an SLA.\n\n198\n00:09:43.380 --> 00:09:45.167\nAnd you can have more than one SLA.\n\n199\n00:09:45.167 --> 00:09:47.440\nSo I'm gonna say IP SLA.\n\n200\n00:09:47.440 --> 00:09:49.614\nAnd then I need to assign it a number.\n\n201\n00:09:49.614 --> 00:09:53.126\nNow, it looks like I can\nhave up to two billion SLAs.\n\n202\n00:09:53.126 --> 00:09:54.784\nYou don't want to create two billion.\n\n203\n00:09:54.784 --> 00:09:58.110\nEvery one increases the resource\nload on the router.\n\n204\n00:09:58.110 --> 00:10:01.450\nIf you've got 5, 10, even 20,\nit's really not that big of a deal.\n\n205\n00:10:01.450 --> 00:10:03.615\nBut when you start getting into\nthe hundreds and thousands,\n\n206\n00:10:03.615 --> 00:10:05.876\nyou should probably have\na dedicated router for that, right.\n\n207\n00:10:05.876 --> 00:10:08.640\nIt's just so\nmuch monitoring traffic on the network.\n\n208\n00:10:08.640 --> 00:10:11.690\nBut I'm just creating one, so\nit's not gonna be a big deal, all right?\n\n209\n00:10:11.690 --> 00:10:12.530\nNow when you run that,\n\n210\n00:10:12.530 --> 00:10:17.120\nit's gonna take you into the SLA prompt,\nso I've now got config-ip-sla.\n\n211\n00:10:17.120 --> 00:10:20.960\nAnd here is where I can tell it\nwhat kind of SLA I want to make.\n\n212\n00:10:20.960 --> 00:10:24.900\nNow for those of you that go on to\nthe CCNP, we actually use a lot of these.\n\n213\n00:10:24.900 --> 00:10:27.610\nBut for those of you sticking\nright here with CCNA,\n\n214\n00:10:27.610 --> 00:10:31.970\nthere's only one that we really\ncare about, and that's ICMP echo.\n\n215\n00:10:31.970 --> 00:10:36.210\nThe exam objectives specifically\ncall out using echos, or\n\n216\n00:10:36.210 --> 00:10:38.750\npings, to be able to troubleshoot\nwith SLAs, all right.\n\n217\n00:10:38.750 --> 00:10:44.630\nSo, I'm gonna create an ICMP echo SLA.\n\n218\n00:10:44.630 --> 00:10:47.613\nAnd it's just like a ping,\nwe need to tell it who we're pinging.\n\n219\n00:10:47.613 --> 00:10:51.870\nI'm gonna ping 192.168.2.4, right?\n\n220\n00:10:51.870 --> 00:10:56.033\nAnd I can stop there but\nI actually wanna go a little bit further.\n\n221\n00:10:56.033 --> 00:10:57.880\nPings can be a little weird.\n\n222\n00:10:57.880 --> 00:11:00.200\nIf I'm just trying to test connectivity,\nI'd stop here.\n\n223\n00:11:00.200 --> 00:11:04.786\nBut if I'm doing things like testing with\naccess control lists, the ping could\n\n224\n00:11:04.786 --> 00:11:09.290\nchange source interfaces based on\ncertain conditions on the network.\n\n225\n00:11:09.290 --> 00:11:13.020\nAnd that can make us bypass a ACL\nsometimes and not bypass it other times.\n\n226\n00:11:13.020 --> 00:11:15.697\nSo I always like to assign\nthe source interface so\n\n227\n00:11:15.697 --> 00:11:19.174\nthat it knows exactly which\ninterface I want this to come from.\n\n228\n00:11:19.174 --> 00:11:22.110\nYou can also do source IP, I believe.\n\n229\n00:11:22.110 --> 00:11:23.550\nYeah, source IP.\n\n230\n00:11:23.550 --> 00:11:26.650\nSo you can specify the exact IP\naddress you wanna be as the source.\n\n231\n00:11:26.650 --> 00:11:30.560\nI normally do an interface, because if\nI change the IP in the future this'll\n\n232\n00:11:30.560 --> 00:11:32.790\nautomatically update and\nI don't have to come mess with it again.\n\n233\n00:11:32.790 --> 00:11:37.052\nAll right, so I might wanna have this one\nmirror another interface and actually,\n\n234\n00:11:37.052 --> 00:11:40.821\nI probably should have paid attention\nto that before getting into here,\n\n235\n00:11:40.821 --> 00:11:42.325\nwhich interface I've got.\n\n236\n00:11:42.325 --> 00:11:47.919\nI think it is actually my 1/0 but\nwe will find out real quick.\n\n237\n00:11:47.919 --> 00:11:52.335\nAll right, so,\nI wanna source this from gI1/0, good.\n\n238\n00:11:52.335 --> 00:11:54.323\nI, yes, I guessed right, good.\n\n239\n00:11:54.323 --> 00:11:56.153\nSo anytime I send this ping.\n\n240\n00:11:56.153 --> 00:11:59.481\nI'm gonna be pinging 192.168.2.4 and\n\n241\n00:11:59.481 --> 00:12:04.286\nit's gonna be sourced from\ngI1/0 which is 192.168.1.1.\n\n242\n00:12:04.286 --> 00:12:06.824\nNow that's not on the same network\nas the destination I'm pinging so\n\n243\n00:12:06.824 --> 00:12:08.200\nI'm gonna get routed.\n\n244\n00:12:08.200 --> 00:12:12.310\nSo not only am I testing connectivity with\npings, but I'm also testing my routes.\n\n245\n00:12:12.310 --> 00:12:13.801\nDo I have a route to get there?\n\n246\n00:12:13.801 --> 00:12:16.380\nAm I able to make it\nacross to the other end?\n\n247\n00:12:16.380 --> 00:12:19.856\nBecause I have to get routed,\nI have to go through a default gateway\n\n248\n00:12:19.856 --> 00:12:22.595\nto get to the destination IP right here,\nall right.\n\n249\n00:12:22.595 --> 00:12:27.600\nNow, the next thing I need to do, you'll\nnotice that my prompt changed again.\n\n250\n00:12:27.600 --> 00:12:30.440\nAnd now it's config-ip-sla-echo.\n\n251\n00:12:30.440 --> 00:12:32.910\nIt knows I'm doing an echo,\n\n252\n00:12:32.910 --> 00:12:35.920\nnow I can tell it anything I\nwanna change about that echo.\n\n253\n00:12:35.920 --> 00:12:38.860\nAnd if you do a question mark,\nyou'll see you can change all sorts\n\n254\n00:12:38.860 --> 00:12:42.130\nof stuff in here like\nthe timeout interval and so on.\n\n255\n00:12:42.130 --> 00:12:46.647\nThere's only one that I really worry\nabout normally, and that is frequency.\n\n256\n00:12:46.647 --> 00:12:48.940\nFrequency is how often do I want to ping?\n\n257\n00:12:48.940 --> 00:12:51.970\nDo I want to ping every 60 seconds?\n\n258\n00:12:51.970 --> 00:12:54.550\nIf I'm just monitoring a line and\nI'm not really too worried about it,\n\n259\n00:12:54.550 --> 00:12:58.430\nI might do once a minute, just to keep\nload on the network down and all that.\n\n260\n00:12:58.430 --> 00:13:00.280\nI might want to ping\na lot more frequently, so\n\n261\n00:13:00.280 --> 00:13:01.880\nI can specify that right here.\n\n262\n00:13:01.880 --> 00:13:05.200\nThere's not a whole lot of need\nto change a lot of other stuff.\n\n263\n00:13:05.200 --> 00:13:09.010\nBut there are some that are useful,\nlike the data size and other things.\n\n264\n00:13:09.010 --> 00:13:12.500\nBecause if you're testing thing like\nquality of service, you might need\n\n265\n00:13:12.500 --> 00:13:16.480\nlarger packets to be able to test whether\nquality of service is working right.\n\n266\n00:13:16.480 --> 00:13:18.600\nBut I'm gonna do frequency.\n\n267\n00:13:18.600 --> 00:13:20.330\nAnd then I can specify how often.\n\n268\n00:13:20.330 --> 00:13:24.700\nAs little as once a second, or I can\ngo all the way up to 604,000 seconds,\n\n269\n00:13:24.700 --> 00:13:29.310\nwhich I guess would be, I don't\neven know how many minutes that is.\n\n270\n00:13:29.310 --> 00:13:31.222\nIt's actually several days I think,\nisn't it.\n\n271\n00:13:31.222 --> 00:13:35.990\nSo anyhow, I'll go ahead and put something\nlow like, we'll do every five seconds,\n\n272\n00:13:35.990 --> 00:13:37.300\nright, so I'm gonna do a frequency five.\n\n273\n00:13:37.300 --> 00:13:41.152\nSo every five seconds we're gonna send\na ping to the other side, all right.\n\n274\n00:13:41.152 --> 00:13:46.328\nSo now, I've got that SLA created and\nhere's the mistake a lot of people make.\n\n275\n00:13:46.328 --> 00:13:48.060\nIs they stop right there.\n\n276\n00:13:48.060 --> 00:13:52.144\nThe SLA actually doesn't do anything\nwhen you create it, it just sits there.\n\n277\n00:13:52.144 --> 00:13:56.450\nI've defined the SLA,\nnow I need to tell it when to run.\n\n278\n00:13:56.450 --> 00:13:59.580\nSo we've got to attach a schedule to\nthe SLA to actually make it do what\n\n279\n00:13:59.580 --> 00:14:00.080\nwe want it to do.\n\n280\n00:14:00.080 --> 00:14:06.980\nAnd so I'm gonna say ip sla and before\nI did IP sla 1 to create the first SLA.\n\n281\n00:14:06.980 --> 00:14:11.100\nNow I'm gonna say ip sla schedule, so\n\n282\n00:14:11.100 --> 00:14:15.387\nI'm defining a schedule and\nI need to attach it to my SLA.\n\n283\n00:14:15.387 --> 00:14:18.890\nWell, the schedule needs a number,\nthe SLA already has a number.\n\n284\n00:14:18.890 --> 00:14:22.480\nThe schedule can be reused\non more than one SLA.\n\n285\n00:14:22.480 --> 00:14:23.971\nSo this one gets its\nown independent number.\n\n286\n00:14:23.971 --> 00:14:27.300\nI'm gonna use the same number,\nbut it doesn't have to be,\n\n287\n00:14:27.300 --> 00:14:29.440\nSchedule 1 isn't married to SLA 1.\n\n288\n00:14:29.440 --> 00:14:32.410\nSo this could be Schedule 1 and\nthe SLA could be SLA 5.\n\n289\n00:14:32.410 --> 00:14:36.803\nAnd I could reattach that same schedule\nto more than one SLAs to achieve\n\n290\n00:14:36.803 --> 00:14:37.779\nthe same goal.\n\n291\n00:14:37.779 --> 00:14:42.302\nSo I'm gonna create Schedule 1 and\nI'm gonna give it a lifetime, and\n\n292\n00:14:42.302 --> 00:14:45.380\nthe lifetime is how long\nI want this to go on for.\n\n293\n00:14:45.380 --> 00:14:47.290\nDo I want it to run for one hour?\n\n294\n00:14:47.290 --> 00:14:48.470\nDo I want it to run for one day?\n\n295\n00:14:48.470 --> 00:14:50.970\nI want it to run forever.\n\n296\n00:14:50.970 --> 00:14:53.650\nI'm always gonna track this\nline's performance, or\n\n297\n00:14:53.650 --> 00:14:56.120\nwhatever it is I'm gonna do, so\nthis schedule's defined forever.\n\n298\n00:14:56.120 --> 00:14:59.110\nThen I need to define a start time.\n\n299\n00:14:59.110 --> 00:15:02.391\nI can start it at midnight, maybe I want\nit to run in 24 hour intervals and so\n\n300\n00:15:02.391 --> 00:15:04.648\nI start it at midnight and\nlet it run through the day so\n\n301\n00:15:04.648 --> 00:15:06.366\nI can meter out peak time or something.\n\n302\n00:15:06.366 --> 00:15:07.283\nBut with this one, I'm in a hurry.\n\n303\n00:15:07.283 --> 00:15:11.543\nSo I'm going to say start time,\nnow, and since I'm running forever,\n\n304\n00:15:11.543 --> 00:15:13.780\nthat's really all I need.\n\n305\n00:15:13.780 --> 00:15:18.110\nBut if I wasn't running forever, that's\nwhere I could define an end time also.\n\n306\n00:15:18.110 --> 00:15:21.040\nAnd so we could go on and\ncontinue to provide other things.\n\n307\n00:15:21.040 --> 00:15:23.240\nYou can age it out,\nyou can tell it to recur.\n\n308\n00:15:23.240 --> 00:15:24.190\nYou can do other things.\n\n309\n00:15:24.190 --> 00:15:25.110\nBut I'm running forever.\n\n310\n00:15:25.110 --> 00:15:26.280\nSo I don't need those options, all right.\n\n311\n00:15:27.630 --> 00:15:29.660\nSo now I've defined a schedule.\n\n312\n00:15:29.660 --> 00:15:33.228\nBut the schedule is not tied to the SLA.\n\n313\n00:15:33.228 --> 00:15:35.740\nI created an SLA, SLA number one.\n\n314\n00:15:35.740 --> 00:15:37.990\nI created a schedule, schedule number one.\n\n315\n00:15:37.990 --> 00:15:42.540\nNow I need to tie them together, and\nthat's when things actually start working.\n\n316\n00:15:42.540 --> 00:15:46.260\nAnd we tie them together by saying track.\n\n317\n00:15:46.260 --> 00:15:50.130\nYou're creating what's called a track\nobject, we're tracking performance.\n\n318\n00:15:50.130 --> 00:15:51.120\nSo I'm gonna create a track.\n\n319\n00:15:51.120 --> 00:15:52.590\nTrack number one.\n\n320\n00:15:52.590 --> 00:15:58.280\nAnd track number one is\ngonna be tied to IP SLA 1.\n\n321\n00:15:58.280 --> 00:16:03.134\nAnd so track number 1 is gonna\nbasically be tied to that schedule and\n\n322\n00:16:03.134 --> 00:16:04.594\ngrab SLA number 1.\n\n323\n00:16:04.594 --> 00:16:07.102\nAnd we're testing reachability.\n\n324\n00:16:07.102 --> 00:16:08.583\nCan we reach the other side?\n\n325\n00:16:08.583 --> 00:16:11.480\nIt's gonna ping every five seconds.\n\n326\n00:16:11.480 --> 00:16:14.570\nAnd if the ping is successful,\nwe can reach the destination.\n\n327\n00:16:14.570 --> 00:16:17.270\nIf the ping fails,\nwe can't reach the destination.\n\n328\n00:16:17.270 --> 00:16:18.890\nAnd I'm gonna run that.\n\n329\n00:16:18.890 --> 00:16:21.040\nNow we're actually tracking.\n\n330\n00:16:21.040 --> 00:16:22.540\nNow it's actually doing something.\n\n331\n00:16:22.540 --> 00:16:26.370\nEvery five seconds, it's reaching out to\nthe other side, and it's doing some work.\n\n332\n00:16:26.370 --> 00:16:28.360\nNow that was quiet a few\ncommands in there,\n\n333\n00:16:28.360 --> 00:16:31.250\nthey weren't like long crazy commands,\nbut this is a lot to remember.\n\n334\n00:16:31.250 --> 00:16:34.210\nIf I do a show run and\nwe'll pull back up here, and\n\n335\n00:16:34.210 --> 00:16:38.017\nwe take a look at everything I just\npunched in, it does add up a bit, right?\n\n336\n00:16:38.017 --> 00:16:41.423\nSo there's the track statement that\nactually got everything working, right?\n\n337\n00:16:41.423 --> 00:16:47.200\nThey got my SLA going, and then as I move\ndown, we'll find where I define the SLA.\n\n338\n00:16:47.200 --> 00:16:51.488\nAnd here is where I set it up to be able\nto ping and use that source interface and\n\n339\n00:16:51.488 --> 00:16:56.053\nthe frequency, and then here is the\nschedule that I define right there, right?\n\n340\n00:16:56.053 --> 00:17:00.149\nSo those are the three pieces that\nwe had to put in place, the SLA,\n\n341\n00:17:00.149 --> 00:17:03.066\nthe schedule, and the track object, right?\n\n342\n00:17:03.066 --> 00:17:07.090\nSo now that it's running, what do I do?\n\n343\n00:17:07.090 --> 00:17:10.040\nWell, I now have a continual\nping running in the background.\n\n344\n00:17:10.040 --> 00:17:11.000\nEvery five seconds it's\n\n345\n00:17:11.000 --> 00:17:13.400\nreaching out across network\ntrying to hit the other side.\n\n346\n00:17:13.400 --> 00:17:14.366\nHow do i know that, right?\n\n347\n00:17:14.366 --> 00:17:17.523\nWell, we don't have to do crazy debugs or\nanything,\n\n348\n00:17:17.523 --> 00:17:19.920\nyou actually can do debugs if you want.\n\n349\n00:17:19.920 --> 00:17:24.086\nI've got the track object,\nbecause I've got the track object,\n\n350\n00:17:24.086 --> 00:17:28.170\nI can just run show track 1,\nshow me the track object.\n\n351\n00:17:28.170 --> 00:17:30.405\nAnd here it is,\nI can see reachability is up.\n\n352\n00:17:30.405 --> 00:17:33.177\nI've had one change a minute and\nnine seconds ago,\n\n353\n00:17:33.177 --> 00:17:35.930\nwhich is when I turned it on and\nnow we're up.\n\n354\n00:17:35.930 --> 00:17:38.507\nThe last operations return code was okay,\nand\n\n355\n00:17:38.507 --> 00:17:41.680\nthe latest round trip\ntime was 58 milliseconds.\n\n356\n00:17:41.680 --> 00:17:44.900\nAnd so,\nI can see what that status is right now.\n\n357\n00:17:44.900 --> 00:17:47.820\nAnd I can start to check that,\nanytime that I need to, so\n\n358\n00:17:47.820 --> 00:17:51.460\nI'd make a change on the network,\nI'd do a show track 1, and I see.\n\n359\n00:17:51.460 --> 00:17:53.320\nAnd then I go and make another change,\nand I do a show track 1.\n\n360\n00:17:53.320 --> 00:17:54.898\nAnd then I can see it,\nand I can monitor it.\n\n361\n00:17:54.898 --> 00:17:58.620\nIf I had third party software,\nit can actually record these records, and\n\n362\n00:17:58.620 --> 00:18:01.670\nwe can see it in chart form,\nand all that other crazy stuff.\n\n363\n00:18:01.670 --> 00:18:03.450\nBut right here I can show track 1, and\n\n364\n00:18:03.450 --> 00:18:05.910\nI can see the status of\nit at any given time.\n\n365\n00:18:05.910 --> 00:18:07.490\nAnd I can see it's still up.\n\n366\n00:18:07.490 --> 00:18:11.640\nMy round trip time went up\na little bit this last time, but\n\n367\n00:18:11.640 --> 00:18:12.580\nyou expect to see that change.\n\n368\n00:18:12.580 --> 00:18:16.010\nThere it actually went down, and so it's\nfluctuating as the network fluctuates.\n\n369\n00:18:16.010 --> 00:18:18.920\nAnd I'm now monitoring that other system.\n\n370\n00:18:18.920 --> 00:18:23.670\nThe cool part about this is,\nif that network were to go down, right?\n\n371\n00:18:23.670 --> 00:18:25.210\nThen I would see that here.\n\n372\n00:18:25.210 --> 00:18:27.280\nIn fact let me jump over\nto that other router.\n\n373\n00:18:27.280 --> 00:18:33.290\nI'm actually pinging my router four,\nso if I jump over to router four, and,\n\n374\n00:18:33.290 --> 00:18:36.180\nwhoops, apparently I have a password,\nwhich hopefully I remember.\n\n375\n00:18:36.180 --> 00:18:40.596\nThere we go.\nAnd I'm pinging 192.168.2.4.\n\n376\n00:18:40.596 --> 00:18:42.651\nThat's this interface GI2/0.\n\n377\n00:18:42.651 --> 00:18:47.940\nSo I'm gonna get into interface GI2/0,\nand I'm gonna shut it down, okay?\n\n378\n00:18:47.940 --> 00:18:50.440\nNow when I shut that interface down,\nam I gonna be able to ping it?\n\n379\n00:18:50.440 --> 00:18:52.370\nNo, so that's down,\n\n380\n00:18:52.370 --> 00:18:58.010\nand if I jump back over to router one,\nand I take a look at that track.\n\n381\n00:18:58.010 --> 00:19:01.899\nWell, remember I'm pinging it every\nfive seconds and, there it went.\n\n382\n00:19:01.899 --> 00:19:03.954\nSee that status message\nthat just popped up?\n\n383\n00:19:03.954 --> 00:19:10.970\nTRACKINNG-5-STATE, 1 ip sla 1\nreachability went from up to down, right?\n\n384\n00:19:10.970 --> 00:19:14.010\nThe first one is telling me\nthis is track number one.\n\n385\n00:19:14.010 --> 00:19:16.370\nAnd then SLA 1 is the one\nthat just went down, and\n\n386\n00:19:16.370 --> 00:19:19.120\nI can see the reachability\nwent from up to down.\n\n387\n00:19:19.120 --> 00:19:20.470\nAnd that's in my logs.\n\n388\n00:19:20.470 --> 00:19:24.040\nSo if I come in in the morning,\nand I just want to see like,\n\n389\n00:19:24.040 --> 00:19:26.600\nhey did that line go down at\nall in the middle of the night?\n\n390\n00:19:26.600 --> 00:19:28.880\nI could look at my logs, and\nif I see it go up to down,\n\n391\n00:19:28.880 --> 00:19:32.480\nand then see it go down to up,\nI'll know that there was an outage, right?\n\n392\n00:19:32.480 --> 00:19:36.190\nCuz I might not know there was an outage\nat 3 AM, maybe the company is closed.\n\n393\n00:19:36.190 --> 00:19:37.630\nIt doesn't matter if\nthe company is closed though,\n\n394\n00:19:37.630 --> 00:19:40.210\nbecause the ISP has promised me up time.\n\n395\n00:19:40.210 --> 00:19:43.190\nI don't care if it's 3 AM, and I'm not\nusing it, I paid for that up time, and\n\n396\n00:19:43.190 --> 00:19:44.620\nI want it.\n\n397\n00:19:44.620 --> 00:19:48.542\nSo it tracked it, it found it, and\nif I jump back over to router four and\n\n398\n00:19:48.542 --> 00:19:52.490\ndo a no shutdown, it'll track it and\nthen see it come back up.\n\n399\n00:19:52.490 --> 00:19:54.970\nNow it'll take just a moment cuz\nthe interface has gotta come up.\n\n400\n00:19:54.970 --> 00:19:57.470\nAnd I don't know if I have spanning\ntree going on here or not.\n\n401\n00:19:57.470 --> 00:20:00.620\nI think I've got a directly\nconnected cable, so\n\n402\n00:20:00.620 --> 00:20:02.120\nthat should come up pretty quickly.\n\n403\n00:20:02.120 --> 00:20:05.171\nSo if we give it a few seconds,\nit's gonna see it, and there it goes,\n\n404\n00:20:05.171 --> 00:20:06.129\nwent from down to up.\n\n405\n00:20:06.129 --> 00:20:10.895\nAnd again, that's in my log, so now when I\ncome in in the morning I can do a show log\n\n406\n00:20:10.895 --> 00:20:13.999\nand I can look at my logs and\nI can find these entries.\n\n407\n00:20:13.999 --> 00:20:20.880\nAnd, now I know, hey from 3:35:04\nto 3:36:09, I had an outage.\n\n408\n00:20:20.880 --> 00:20:22.340\nI was down for a minute.\n\n409\n00:20:22.340 --> 00:20:25.510\nAll right well the ISP said I'd have less\nthan five minutes of downtime a month.\n\n410\n00:20:25.510 --> 00:20:28.210\nSo let me just keep track of that,\nand then the next time it happens, and\n\n411\n00:20:28.210 --> 00:20:29.580\nthe next and we'll just add it up.\n\n412\n00:20:29.580 --> 00:20:33.170\nAnd then when the ISP says, here's\nyour bill, you say well wait a minute.\n\n413\n00:20:33.170 --> 00:20:36.380\nI've actually got a record\nof this downtime right here,\n\n414\n00:20:36.380 --> 00:20:40.450\nand It exceeds what you promised me,\nso that's what we can see with SLA.\n\n415\n00:20:40.450 --> 00:20:43.690\n&gt;&gt; Now, you've been showing us monitoring,\nDon is there any way that we can, maybe\n\n416\n00:20:43.690 --> 00:20:49.130\neven provide some kind of a response,\nif you will, to a down state with these?\n\n417\n00:20:49.130 --> 00:20:49.930\n&gt;&gt; You can.\n\n418\n00:20:51.430 --> 00:20:53.970\nFor the CCNA, what they want us to do is\nto use it for troubleshooting, right?\n\n419\n00:20:53.970 --> 00:20:56.420\nTo be able to watch the line while\nyou go and make adjustments.\n\n420\n00:20:56.420 --> 00:20:58.790\nSo maybe you put in a bad\naccess control list,\n\n421\n00:20:58.790 --> 00:21:01.880\nor maybe you're just testing an ACL,\nright?\n\n422\n00:21:01.880 --> 00:21:05.240\nAnd so you want to see that\nthat's working, and that's it.\n\n423\n00:21:05.240 --> 00:21:07.040\nThere's nothing really about a response.\n\n424\n00:21:07.040 --> 00:21:09.580\nBut We actually can use it\nto do responses, right?\n\n425\n00:21:09.580 --> 00:21:11.273\nLet me show you\na troubleshooting example so\n\n426\n00:21:11.273 --> 00:21:13.433\nyou know exactly what we wanna see for\nthe exam, right?\n\n427\n00:21:13.433 --> 00:21:16.317\nAnd then I'll show you a response,\nlike what's it's asking, so\n\n428\n00:21:16.317 --> 00:21:17.666\nyou get to see both sides of it.\n\n429\n00:21:17.666 --> 00:21:24.482\nOn the troubleshooting side, let's say\nI'm working on a access control list and\n\n430\n00:21:24.482 --> 00:21:29.690\nI'm doing something like\npermitting HTTP traffic.\n\n431\n00:21:29.690 --> 00:21:34.260\nBut I can't test that from my router cuz a\nrouter can't generate HTTP traffic, right?\n\n432\n00:21:34.260 --> 00:21:37.590\nBut I can create an SLA\nthat generate HTTP traffic.\n\n433\n00:21:37.590 --> 00:21:39.360\nAnd then I could watch the access list and\n\n434\n00:21:39.360 --> 00:21:42.480\nsee if I'm getting hits on\nthe right access control entry.\n\n435\n00:21:42.480 --> 00:21:43.440\nIt's an easy way to see that.\n\n436\n00:21:43.440 --> 00:21:45.230\nSo if I wanna do that\nwith my ping one here.\n\n437\n00:21:45.230 --> 00:21:47.720\nLet me jump over to router two,\nrouter two.\n\n438\n00:21:47.720 --> 00:21:51.340\nRouter two sits in between router one and\nrouter four.\n\n439\n00:21:51.340 --> 00:21:55.707\nAnd so on this guy,\nif I were to create an access list,\n\n440\n00:21:55.707 --> 00:22:03.300\nI could jump into my configuration and say\nlike access-list 101, I'll do an extended.\n\n441\n00:22:03.300 --> 00:22:08.620\nI want to do permit icmp or\n\n442\n00:22:08.620 --> 00:22:13.350\nmaybe I wanna do a deny,\nI'll do a deny icmp any any.\n\n443\n00:22:13.350 --> 00:22:16.300\nSo I'm gonna be blocking pings and\n\n444\n00:22:16.300 --> 00:22:22.030\nthen I'll do an access-list\n101 permit ip any any, okay?\n\n445\n00:22:22.030 --> 00:22:24.260\nSo I'm just blocking pings.\n\n446\n00:22:24.260 --> 00:22:25.530\nEverything else is okay, but\n\n447\n00:22:25.530 --> 00:22:28.610\nI'm not letting pings pass\nthrough an interface, right?\n\n448\n00:22:28.610 --> 00:22:32.490\nAnd then what I do is I take\na look at my interfaces, and\n\n449\n00:22:32.490 --> 00:22:34.340\nI'm gonna block it on gi1/0.\n\n450\n00:22:34.340 --> 00:22:41.150\nSo if I get into gi1/0, I'm trying to\nblock pings going from router one.\n\n451\n00:22:41.150 --> 00:22:42.270\nActually, you know what?\n\n452\n00:22:42.270 --> 00:22:45.530\nLet me be a little more\nspecific with that access list.\n\n453\n00:22:45.530 --> 00:22:47.140\nCuz, I wanna make sure\nthis test works right.\n\n454\n00:22:47.140 --> 00:22:51.170\nSo I'm gonna go no access-list 101 and\nwe'll recreate that.\n\n455\n00:22:51.170 --> 00:22:57.380\nI'm gonna say access-list 101 I'm going\nto deny icmp coming from 192.168.1.1,\n\n456\n00:22:57.380 --> 00:23:01.910\ncoming from that router\nspecifically going to anyone.\n\n457\n00:23:01.910 --> 00:23:03.620\nRight, I'm gonna block that.\n\n458\n00:23:03.620 --> 00:23:06.450\nOops, now I need to throw\nin a little host keyword or\n\n459\n00:23:06.450 --> 00:23:08.330\nit's gonna get mad at me, there.\n\n460\n00:23:08.330 --> 00:23:12.630\nAnd then I'm gonna do an access-list\n101 permit ip any, any.\n\n461\n00:23:12.630 --> 00:23:17.470\nSo now I'm just blocking pings\ncoming from that one router.\n\n462\n00:23:17.470 --> 00:23:21.470\nAnd I'm gonna get into interface gi1/0\nwhich is the interface that router\n\n463\n00:23:21.470 --> 00:23:22.430\nis passing through, right?\n\n464\n00:23:22.430 --> 00:23:24.387\nIf I look at my topology router one,\n\n465\n00:23:24.387 --> 00:23:27.208\nactually let me get to one\nwith interfaces, here.\n\n466\n00:23:27.208 --> 00:23:32.678\nRouter one is 192.168.1.1 it\npasses out this interface and\n\n467\n00:23:32.678 --> 00:23:37.429\ngoes in GI1/0, goes out of GI2/0 and\nover to router 4.\n\n468\n00:23:37.429 --> 00:23:41.060\nWell it's going in GI1/0, right?\n\n469\n00:23:41.060 --> 00:23:43.110\nSo if I create an access list here, and\n\n470\n00:23:43.110 --> 00:23:47.530\nlet's say I put it in backwards,\nI put it in as an out access list instead.\n\n471\n00:23:47.530 --> 00:23:51.642\nWell, I've got a ping going every five\nseconds from router one up to router two.\n\n472\n00:23:51.642 --> 00:23:58.957\nSo if I jump back over to router two and\nI apply that access list backwards, right?\n\n473\n00:23:58.957 --> 00:24:00.249\nSo I'm gonna apply that access list.\n\n474\n00:24:00.249 --> 00:24:01.644\nI'm gonna make it an out instead of an in.\n\n475\n00:24:01.644 --> 00:24:05.090\nHow do I know right away\nthat that's not working?\n\n476\n00:24:05.090 --> 00:24:08.250\nWell, I can go over the other router and\ntest and do some pings.\n\n477\n00:24:09.560 --> 00:24:13.500\nBut since I have an SLA, I know within\nfive seconds it's gonna ping anyway and\n\n478\n00:24:13.500 --> 00:24:14.420\nyes I'm stalling.\n\n479\n00:24:14.420 --> 00:24:16.780\nSo any time in the next five\nseconds it's gonna ping.\n\n480\n00:24:16.780 --> 00:24:19.640\nAnd I can do a show access-list.\n\n481\n00:24:19.640 --> 00:24:23.780\nAnd what I should see is that deny IC and\nP should be incrementing.\n\n482\n00:24:23.780 --> 00:24:26.490\nIt should be going up, but\nI don't have any matches.\n\n483\n00:24:26.490 --> 00:24:30.600\nIn fact, I've got four\nmatches here on permit IP and\n\n484\n00:24:30.600 --> 00:24:35.630\nif I keep doing a show access list,\nthat permit IP is going up.\n\n485\n00:24:35.630 --> 00:24:39.020\nThat's the ping, every five seconds and\nso I can look at this and say,\n\n486\n00:24:39.020 --> 00:24:44.560\nthat deny line is not working Because\nit's not incrementing at all.\n\n487\n00:24:44.560 --> 00:24:46.990\nAnd so, if I go and fix my command,\n\n488\n00:24:46.990 --> 00:24:51.560\nI'm gonna remove it as an out and\nchange it to an in.\n\n489\n00:24:54.410 --> 00:24:57.030\nNow I can do a show access-list, and\n\n490\n00:24:57.030 --> 00:25:01.450\nwhat I should start to see is I should\nstart to see that ping getting blocked.\n\n491\n00:25:01.450 --> 00:25:03.470\nAnd there we go, now I got a match.\n\n492\n00:25:03.470 --> 00:25:06.620\nAnd I didn't have to go back to the other\nrouter cuz it's continually pinging.\n\n493\n00:25:06.620 --> 00:25:09.950\nAnd that's how we can use it for\ntroubleshooting, you start that ping and\n\n494\n00:25:09.950 --> 00:25:11.410\nnow you don't have to go\nback to that router anymore.\n\n495\n00:25:11.410 --> 00:25:15.770\nYou can go to other systems and start\ntrying to fix the problem and see it.\n\n496\n00:25:15.770 --> 00:25:17.460\nWith an access-list we see it right here.\n\n497\n00:25:17.460 --> 00:25:21.260\nWith things just whether or\nnot we fixed a bad route,\n\n498\n00:25:21.260 --> 00:25:24.030\nyou can start to see that by\njumping back over and looking at,\n\n499\n00:25:24.030 --> 00:25:28.810\ndid you get these track messages, these\nreachability messages, did they come up?\n\n500\n00:25:28.810 --> 00:25:31.080\nSo that's a way that we can use it for\ntroubleshooting.\n\n501\n00:25:32.380 --> 00:25:36.256\nBut how do we use it to actually\ntake some kind of action,\n\n502\n00:25:36.256 --> 00:25:39.402\nto make a move based on\nsomething that we did?\n\n503\n00:25:39.402 --> 00:25:42.449\nWell, what we can do is we can\ntake that track object and\n\n504\n00:25:42.449 --> 00:25:43.990\nwe can attach it to things.\n\n505\n00:25:43.990 --> 00:25:46.792\nThere's all sorts of different\nsystems that let you attach it.\n\n506\n00:25:46.792 --> 00:25:49.480\nAnd a great example is a route.\n\n507\n00:25:49.480 --> 00:25:52.841\nLet me go remove that ACL real quick so\nit doesn't get in our way and\n\n508\n00:25:52.841 --> 00:25:54.692\nthen I'll show how we can fix this.\n\n509\n00:25:54.692 --> 00:26:00.459\nSo I'm gonna say no ip access-group\n101 in and we'll get rid of that.\n\n510\n00:26:00.459 --> 00:26:04.466\nAnd actually I'm gonna just get rid\nof that access list altogether so\n\n511\n00:26:04.466 --> 00:26:06.758\nI definitely know it's not in the way.\n\n512\n00:26:06.758 --> 00:26:11.540\nSo now, I've got that ping going and\nlet's take a look at how Router 1 works.\n\n513\n00:26:11.540 --> 00:26:14.990\nWhen I go into Router 1, it's configured\nvery much like a branch router would be.\n\n514\n00:26:14.990 --> 00:26:18.290\nOn a branch router, you normally have\nan internet connection plugged in and\n\n515\n00:26:18.290 --> 00:26:21.170\nthat internet connect goes to 1-ISP.\n\n516\n00:26:21.170 --> 00:26:24.603\nWell, your connection to the ISP\nmight be perfectly fine.\n\n517\n00:26:24.603 --> 00:26:27.920\nAnd so, you'll have a default route that\ngoes to the ISP and everything looks good.\n\n518\n00:26:27.920 --> 00:26:32.480\nBut sometimes, ISPs lose their\nconnection to the Internet.\n\n519\n00:26:32.480 --> 00:26:34.850\nSo my connection to the ISP might be fine,\nbut\n\n520\n00:26:34.850 --> 00:26:37.290\ntheir connection to\nthe Internet might go down.\n\n521\n00:26:37.290 --> 00:26:38.510\nMy router's not gonna see that.\n\n522\n00:26:38.510 --> 00:26:39.350\nIt's not gonna know that.\n\n523\n00:26:39.350 --> 00:26:41.150\nNow, if you only got one ISP,\nit doesn't matter.\n\n524\n00:26:41.150 --> 00:26:43.400\nYou're down either way so who cares.\n\n525\n00:26:43.400 --> 00:26:45.390\nBut what if you had two ISPs?\n\n526\n00:26:45.390 --> 00:26:51.240\nWhat if I had one ISP that I really liked,\nand one ISP that was a backup.\n\n527\n00:26:51.240 --> 00:26:54.077\nWell, if the connection to\nthe main ISP is good, but\n\n528\n00:26:54.077 --> 00:26:57.563\ntheir internet connection is down,\nI'm gonna keep using it and\n\n529\n00:26:57.563 --> 00:27:00.484\nI'm never going to know to\nflip over to the other ISP.\n\n530\n00:27:00.484 --> 00:27:03.790\nSo I'm just gonna keep staying on\nthis one that's actually down.\n\n531\n00:27:03.790 --> 00:27:07.800\nSo we can use track objects\nto go a step further.\n\n532\n00:27:07.800 --> 00:27:09.860\nDon't just watch whether\nthe interface is up,\n\n533\n00:27:09.860 --> 00:27:12.650\nactually see if you can get to\nthis IP address on the other side.\n\n534\n00:27:12.650 --> 00:27:17.590\nAnd if for some reason you can't, then\nflip over to the other ISP or whatever.\n\n535\n00:27:17.590 --> 00:27:18.770\nLet me show you how that works.\n\n536\n00:27:18.770 --> 00:27:23.506\nSo here on Router 1, if I take a look\nat my routing table, it's super small.\n\n537\n00:27:23.506 --> 00:27:29.250\nI've got my local networks,\n192.168.0.0, 192.168.1.1.\n\n538\n00:27:29.250 --> 00:27:32.270\nAnd now I've got a static default route.\n\n539\n00:27:32.270 --> 00:27:34.836\nThis is the default route that would\npoint to my Internet service provider.\n\n540\n00:27:34.836 --> 00:27:41.046\nMy ISP is 192.168.1.2, that's the router I\ngo to when I wanna get to a destination.\n\n541\n00:27:41.046 --> 00:27:46.650\nAnd right now it's I ping at 192.168.2.4.\n\n542\n00:27:46.650 --> 00:27:52.194\nI can get there and I'm doing it\nby passing through that gateway.\n\n543\n00:27:52.194 --> 00:27:56.060\nI go to 192.168.1.2 first, and\nthen I go to my destination.\n\n544\n00:27:57.450 --> 00:28:01.280\nNow, that's going on right now,\nmy track object is running.\n\n545\n00:28:02.290 --> 00:28:07.580\nAnd if I go and down that other system,\nso I'm gonna go over to Router 4,\n\n546\n00:28:07.580 --> 00:28:11.020\nand on Router 4 I'm gonna\nshut this interface down.\n\n547\n00:28:11.020 --> 00:28:13.800\nSo let me just shut down.\n\n548\n00:28:13.800 --> 00:28:17.430\nAnd when I shut it down,\nthis becomes non-reachable.\n\n549\n00:28:17.430 --> 00:28:20.810\nSo if I jump back over to router one and\nI try and\n\n550\n00:28:20.810 --> 00:28:24.030\nping it, I can't ping it\nanymore because it went down.\n\n551\n00:28:24.030 --> 00:28:26.740\nBut let's look at the reaction\nmy router just took.\n\n552\n00:28:26.740 --> 00:28:28.960\nSo my router can't ping it.\n\n553\n00:28:28.960 --> 00:28:32.590\nBut if I look at, and\nmy track object just detected it.\n\n554\n00:28:32.590 --> 00:28:34.210\nMy track object knows it's down.\n\n555\n00:28:34.210 --> 00:28:39.630\nBut if I do a show IP route,\nI've still got my static route to the ISP.\n\n556\n00:28:39.630 --> 00:28:44.118\nAnd if I try and trace route,\nI'm still gonna try.\n\n557\n00:28:44.118 --> 00:28:47.110\nI'm gonna go to the ISP to try and\nget to that destination.\n\n558\n00:28:47.110 --> 00:28:49.300\nBut the ISP has had some kind of outage.\n\n559\n00:28:49.300 --> 00:28:51.093\nThey're not connected to\nthe Internet anymore.\n\n560\n00:28:51.093 --> 00:28:55.284\nSo what I should really do is give up on\nthat ISP, take away that default route and\n\n561\n00:28:55.284 --> 00:28:57.610\nflip over to another\nISP if I have a backup.\n\n562\n00:28:57.610 --> 00:29:01.340\nIf I'm multi home and I have a second\nISP I can jump over to that.\n\n563\n00:29:01.340 --> 00:29:06.970\nBut in this scenario it's never gonna\nhappen because my static route It's there,\n\n564\n00:29:06.970 --> 00:29:07.830\nit's a static route.\n\n565\n00:29:07.830 --> 00:29:10.390\nThe only thing that's gonna bring\nthat static route down is if my\n\n566\n00:29:10.390 --> 00:29:11.280\ninterface goes down.\n\n567\n00:29:11.280 --> 00:29:14.720\nSo if the ISP's router failed,\nmy link would go down.\n\n568\n00:29:14.720 --> 00:29:16.180\nAnd that would cause\nthe route to come out.\n\n569\n00:29:16.180 --> 00:29:20.647\nSo we could simulate that if we wanna\nsee what its reaction would be.\n\n570\n00:29:20.647 --> 00:29:24.791\nSo if I look at this one,\nthat is interface gi1/0.\n\n571\n00:29:24.791 --> 00:29:28.150\nSo if I shut that down,\nthat's a different story.\n\n572\n00:29:28.150 --> 00:29:29.860\nThe physical interface goes down.\n\n573\n00:29:29.860 --> 00:29:32.010\nMy link lights are gonna go down, and\n\n574\n00:29:32.010 --> 00:29:36.350\nwhen my link lights go down then\nI'll take that interface out.\n\n575\n00:29:36.350 --> 00:29:39.160\nAnd, shoot, this one's actually\nrunning through a switch.\n\n576\n00:29:39.160 --> 00:29:41.090\nThat's not gonna happen, is it?\n\n577\n00:29:41.090 --> 00:29:41.810\nThat's the other problem.\n\n578\n00:29:41.810 --> 00:29:44.720\nIf you run to a switch your\ninterface is always gonna be up.\n\n579\n00:29:44.720 --> 00:29:46.690\nJust like mine,\neven though the person on the other side.\n\n580\n00:29:46.690 --> 00:29:47.950\nBecause I'm not running a direct cable,\n\n581\n00:29:47.950 --> 00:29:49.980\nI've got a switch in the way so\nthat the switch will fail.\n\n582\n00:29:49.980 --> 00:29:54.260\nSo there's any number of things that could\nmake the line still look like it's up,\n\n583\n00:29:54.260 --> 00:29:56.050\neven though it's not really functional.\n\n584\n00:29:56.050 --> 00:29:58.470\nAnd so, that's where these track objects,\n\n585\n00:29:58.470 --> 00:30:00.510\nthat's where these SLAs\nreally can come in handy.\n\n586\n00:30:00.510 --> 00:30:02.700\nSo right now I'm still up.\n\n587\n00:30:02.700 --> 00:30:05.620\nAnd if I do a show ip route,\nthat static route is still there.\n\n588\n00:30:05.620 --> 00:30:07.240\nI can't even get to the gateway.\n\n589\n00:30:07.240 --> 00:30:10.240\nAnd it's still gonna be\nthere in my routing table.\n\n590\n00:30:10.240 --> 00:30:16.520\nSo the problem is when you\nlook at your configuration.\n\n591\n00:30:16.520 --> 00:30:21.498\nThe way the static route reads,\nit says I wanna route 0.0.0.0\n\n592\n00:30:21.498 --> 00:30:25.150\n0.0.0.0 to this IP or this interface.\n\n593\n00:30:25.150 --> 00:30:28.940\nAnd it's gonna do it as long\nas it has some interface that\n\n594\n00:30:28.940 --> 00:30:30.240\npoints to that network.\n\n595\n00:30:30.240 --> 00:30:33.180\nAnd I'm directly connected to that network\nso I'm always gonna have an interface.\n\n596\n00:30:33.180 --> 00:30:36.970\nSo what we can do is we can jump into\nconfig and we can remove that route.\n\n597\n00:30:36.970 --> 00:30:40.341\nI'm just gonna take that route and\nget it out of there.\n\n598\n00:30:40.341 --> 00:30:41.900\nSo there it goes.\n\n599\n00:30:41.900 --> 00:30:43.910\nAnd then,\nI'm gonna put the route back in but\n\n600\n00:30:43.910 --> 00:30:46.450\nI'm gonna add a little\nsomething to the end of it.\n\n601\n00:30:46.450 --> 00:30:48.120\nWhen you add a static route,\nif you do a question mark,\n\n602\n00:30:48.120 --> 00:30:52.710\nyou'll see there's a few things you\ncan put in, including a track object.\n\n603\n00:30:52.710 --> 00:30:56.690\nI can tell it to track, and\nthen I can specify my track object.\n\n604\n00:30:56.690 --> 00:30:58.590\nSo now I'm saying,\nhere's this static route.\n\n605\n00:30:58.590 --> 00:31:03.020\nBut only put it in the routing table\nif this track object is functional.\n\n606\n00:31:03.020 --> 00:31:05.500\nIf it's functional, great put it in there.\n\n607\n00:31:05.500 --> 00:31:07.040\nIf it's not functional, don't.\n\n608\n00:31:07.040 --> 00:31:08.780\nAnd so, now that it's in there,\n\n609\n00:31:08.780 --> 00:31:15.010\nwhen I do a show IP route,\nthe static route's not there.\n\n610\n00:31:15.010 --> 00:31:17.320\nIt's not there cuz I can't get to my ISP.\n\n611\n00:31:17.320 --> 00:31:19.259\nWell, what if I bring my ISP back on line.\n\n612\n00:31:19.259 --> 00:31:21.493\nI'm gonna do a no shut down.\n\n613\n00:31:21.493 --> 00:31:22.705\nSo no shut down.\n\n614\n00:31:22.705 --> 00:31:27.781\nIf I jump back over to my router,\nI should be able to ping 192.168.1.2.\n\n615\n00:31:27.781 --> 00:31:30.310\nThat's my ISP.\n\n616\n00:31:30.310 --> 00:31:32.370\nThere we go, their line just came up.\n\n617\n00:31:32.370 --> 00:31:37.019\nAnd I can even ping over to that\nother network, the 2.2 network.\n\n618\n00:31:37.019 --> 00:31:38.980\nI say I can.\n\n619\n00:31:38.980 --> 00:31:40.580\nI have to wait.\n\n620\n00:31:40.580 --> 00:31:44.500\nSo for me to ping another network,\nI've gotta go through my default gateway.\n\n621\n00:31:44.500 --> 00:31:49.110\nAnd if I do a show ip route,\nI don't have a default gateway yet.\n\n622\n00:31:49.110 --> 00:31:50.100\nWhy not?\n\n623\n00:31:50.100 --> 00:31:52.994\nWell, I'm monitoring my track object.\n\n624\n00:31:52.994 --> 00:31:56.724\nAnd when I do a show track 1,\nmy track object is still down.\n\n625\n00:31:56.724 --> 00:31:59.741\nIt's down because yes,\nI can get to the ISP, But\n\n626\n00:31:59.741 --> 00:32:03.281\nthey can't get to router four,\ncuz router four is down.\n\n627\n00:32:03.281 --> 00:32:05.062\nRemember, I shut its interface down too.\n\n628\n00:32:05.062 --> 00:32:07.992\nSo the track object is smart\nenough to know that while, yes,\n\n629\n00:32:07.992 --> 00:32:11.030\nI can get to the ISP,\nthey're not connected to the Internet.\n\n630\n00:32:11.030 --> 00:32:12.670\nThey're not connected\nto these other hosts.\n\n631\n00:32:12.670 --> 00:32:13.880\nSo I'm not gonna put that route in.\n\n632\n00:32:13.880 --> 00:32:16.160\nThere's no point,\nI can't get to where I need to go.\n\n633\n00:32:16.160 --> 00:32:19.719\nIf there's some other route, I'll go that\nway because they can probably get there.\n\n634\n00:32:20.720 --> 00:32:22.690\nBut now if I go and fix that router.\n\n635\n00:32:22.690 --> 00:32:27.420\nIf I go to router four and do a no\nshutdown, and bring that one back online,\n\n636\n00:32:27.420 --> 00:32:30.710\nnow my track object will detect.\n\n637\n00:32:30.710 --> 00:32:34.570\nAnd any moment now it's gonna\nget detected, any moment being\n\n638\n00:32:34.570 --> 00:32:37.010\nafter the interface comes up and\nthen five seconds beyond that, right?\n\n639\n00:32:37.010 --> 00:32:38.500\nSo we do have to wait a few seconds.\n\n640\n00:32:38.500 --> 00:32:41.120\nThat's gonna come up and\nthen it'll be alive, right.\n\n641\n00:32:41.120 --> 00:32:45.690\nSo instead of tracking,\nlet me jump over here.\n\n642\n00:32:45.690 --> 00:32:50.960\nSo instead of just tracking this link\ngoing over to my gateway between router\n\n643\n00:32:50.960 --> 00:32:55.340\n1 and router 2, I'm actually sending\na ping all the way along this path and\n\n644\n00:32:55.340 --> 00:32:57.150\nif I can get over here, great.\n\n645\n00:32:57.150 --> 00:32:59.370\nAnd if I can't,\nthen move over to someone else.\n\n646\n00:32:59.370 --> 00:33:01.170\nAnd see, my router,\nI do actually have another path.\n\n647\n00:33:01.170 --> 00:33:03.990\nI could put a second static route\nin that went down here, and\n\n648\n00:33:03.990 --> 00:33:04.930\ngive it a higher metric.\n\n649\n00:33:04.930 --> 00:33:08.120\nAnd so that one becomes my backup,\nand then this would be the primary.\n\n650\n00:33:08.120 --> 00:33:11.117\nI think I've stalled long enough,\nit should be up by now.\n\n651\n00:33:12.864 --> 00:33:14.650\nAnd it's not up yet.\n\n652\n00:33:15.900 --> 00:33:18.310\nYou know what?\nI've created a catch 22.\n\n653\n00:33:18.310 --> 00:33:24.420\nI'm pinging an IP that I can only\nget to if the static route is up.\n\n654\n00:33:24.420 --> 00:33:28.340\nBut the static route's not gonna come\nup because it can't ping the IP.\n\n655\n00:33:28.340 --> 00:33:31.270\nSo I've created a bit of a catch\n22 on myself which is why\n\n656\n00:33:31.270 --> 00:33:32.530\nit's not gonna work here.\n\n657\n00:33:32.530 --> 00:33:37.040\nSo my reachability is down\ncuz I'm pinging 192.168.2.4.\n\n658\n00:33:37.040 --> 00:33:41.850\nAnd as long as 192.168.2.4 is reachable,\nit's gonna come up.\n\n659\n00:33:41.850 --> 00:33:46.777\nBut if I look at my routing table, I don't\nhave a route from 192.168.2.4 all right.\n\n660\n00:33:46.777 --> 00:33:50.872\nSo the solution to this is I need to add\nanother static route for that just for\n\n661\n00:33:50.872 --> 00:33:51.594\nthat one IP.\n\n662\n00:33:51.594 --> 00:33:53.667\nAnd I need to give it\na really high metric so\n\n663\n00:33:53.667 --> 00:33:56.469\nit's only preferred in times\nwhen the network is down.\n\n664\n00:33:56.469 --> 00:33:58.250\nSo let me just throw that in real quick.\n\n665\n00:33:58.250 --> 00:34:02.740\nAnd again, this goes a little bit beyond\nCCNA, this is what we do in the CCNP side.\n\n666\n00:34:02.740 --> 00:34:07.299\nBut I'm just gonna do a quick route for\n192.168.2.4, and\n\n667\n00:34:07.299 --> 00:34:10.555\nI'm gonna be super specific on this one,\nright.\n\n668\n00:34:10.555 --> 00:34:14.180\nSo just that one IP, a /32.\n\n669\n00:34:14.180 --> 00:34:17.440\nAnd I'm gonna route that\nover to my default gateway.\n\n670\n00:34:17.440 --> 00:34:18.410\nSo I'll punch that in.\n\n671\n00:34:19.650 --> 00:34:21.586\nAnd now when I look at my routing table,\n\n672\n00:34:22.982 --> 00:34:27.236\nNow I've got that one individual route\nto get to that one IP that I'm tracking.\n\n673\n00:34:27.236 --> 00:34:30.940\nAnd if I ping, shoot,\nI forgot to give it a high metric.\n\n674\n00:34:30.940 --> 00:34:33.568\nSo I said I was gonna give it\na high metric because I only want\n\n675\n00:34:33.568 --> 00:34:36.532\nto use this when I've got a problem,\nwhen I'm testing, right.\n\n676\n00:34:36.532 --> 00:34:39.370\nAnd so what I meant to do\nwas when I added that route,\n\n677\n00:34:39.370 --> 00:34:41.560\nI guess my heads kind of covering a bit.\n\n678\n00:34:41.560 --> 00:34:44.340\nIf we go a little bit further,\nremember how I added that track object?\n\n679\n00:34:44.340 --> 00:34:47.730\nAnother thing you can add is\nan administrative distance.\n\n680\n00:34:47.730 --> 00:34:50.150\nAnd if you give it a really\nhigh one like 250,\n\n681\n00:34:50.150 --> 00:34:52.625\nthen that's only gonna kick in\nwhen there's no other route.\n\n682\n00:34:52.625 --> 00:34:55.823\nBecause a static route has\nan administrative distance of one.\n\n683\n00:34:55.823 --> 00:34:57.956\nEIGRP is 90, OSPF is 110,\n\n684\n00:34:57.956 --> 00:35:02.235\nRIP is 120 all those guys are gonna\nbe better than this route.\n\n685\n00:35:02.235 --> 00:35:04.885\nSo, you just give it a high metric so\nit can make it in there.\n\n686\n00:35:04.885 --> 00:35:07.785\nSo, once that's done\nthen it gets picked up.\n\n687\n00:35:07.785 --> 00:35:12.120\nSo, now if I look at my routing table,\nthat track object came up.\n\n688\n00:35:12.120 --> 00:35:17.355\nAnd when I do a show IP route,\nthe static route that I made for\n\n689\n00:35:17.355 --> 00:35:19.505\n192.168.2.4 is there for my testing.\n\n690\n00:35:19.505 --> 00:35:23.190\nBut the static default route\njust came up also, right?\n\n691\n00:35:23.190 --> 00:35:26.700\nSo this static default route is now\nmarried to whether or not we can get to\n\n692\n00:35:26.700 --> 00:35:31.000\nthis one public IP or external IP that's\nout there on the Internet somewhere.\n\n693\n00:35:31.000 --> 00:35:33.650\nYou gotta be careful with this though,\nyou don't want to pick Google.\n\n694\n00:35:33.650 --> 00:35:36.450\nBecause what happens if Google\ndecides to change their IP?\n\n695\n00:35:36.450 --> 00:35:39.762\nOr Google decides to reboot their server?\n\n696\n00:35:39.762 --> 00:35:42.410\nYour network's gonna failover\nbecause of something they did.\n\n697\n00:35:42.410 --> 00:35:45.390\nSo only track IPs you know you can trust.\n\n698\n00:35:45.390 --> 00:35:48.040\nTrack your IPs that are in the cloud or\nsomething like that.\n\n699\n00:35:48.040 --> 00:35:51.810\nDon't track IPs that you don't have\ncontrol over, that's really important.\n\n700\n00:35:52.860 --> 00:35:54.390\nBut right here,\n\n701\n00:35:54.390 --> 00:35:59.540\nI'm actually taking an action based\non the status of a track object.\n\n702\n00:35:59.540 --> 00:36:02.250\nWhile the track object is up,\nwhile that SLA is working and\n\n703\n00:36:02.250 --> 00:36:03.910\nI get reachability, the route'll be there.\n\n704\n00:36:03.910 --> 00:36:08.260\nAnd the moment that reachability goes\naway, the static route comes out, okay.\n\n705\n00:36:08.260 --> 00:36:10.730\nSo, that's cool stuff,\nthat's how you use it in the real world.\n\n706\n00:36:10.730 --> 00:36:12.590\nBut on the exam, they want you\nto know it from troubleshooting.\n\n707\n00:36:12.590 --> 00:36:16.550\nAnd from the troubleshooting side, they\njust want you to know the ICMP echoes.\n\n708\n00:36:16.550 --> 00:36:18.630\nCreate an SLA, create a schedule,\n\n709\n00:36:18.630 --> 00:36:20.866\nand then stick a track object on it so\nyou can watch it.\n\n710\n00:36:20.866 --> 00:36:23.890\nAnd once you've got those three things,\nnow you've got this continual ping running\n\n711\n00:36:23.890 --> 00:36:25.265\nand you'll be able to\nsee it on the network.\n\n712\n00:36:25.265 --> 00:36:25.980\nYou'll be able to monitor it.\n\n713\n00:36:25.980 --> 00:36:29.380\nIf it ever gets interrupted, you'll be\nable to see that, it gets in your logs.\n\n714\n00:36:29.380 --> 00:36:33.020\nAnd then you can troubleshoot and\nfind out where your issues are from there.\n\n715\n00:36:33.020 --> 00:36:36.580\nIt's really pretty handy and\nit's like a continual ping on a desktop.\n\n716\n00:36:36.580 --> 00:36:37.870\n&gt;&gt; Don, that's a lot of great information.\n\n717\n00:36:37.870 --> 00:36:40.690\nI can tell you, those SLAs certainly\nwasn't what I was thinking when\n\n718\n00:36:40.690 --> 00:36:41.210\nyou said SLAs.\n\n719\n00:36:41.210 --> 00:36:42.600\n&gt;&gt; [LAUGH]\n&gt;&gt; But it does look like we're coming to\n\n720\n00:36:42.600 --> 00:36:44.060\nthe end of another episode.\n\n721\n00:36:44.060 --> 00:36:46.340\nAnd we wouldn't be doing you justice\nif I didn't give you a chance.\n\n722\n00:36:46.340 --> 00:36:47.990\nDo you have any parting words?\n\n723\n00:36:47.990 --> 00:36:50.140\nFor those of you who do want to\nlearn the more advance stuff.\n\n724\n00:36:50.140 --> 00:36:52.010\nDefinitely check out our CCNP series.\n\n725\n00:36:52.010 --> 00:36:56.030\nWe cover it in CCNP route, there's\na lot of good stuff in there on SLAs.\n\n726\n00:36:56.030 --> 00:36:57.790\nAnd then just go out on the Internet and\nsearch.\n\n727\n00:36:57.790 --> 00:37:00.220\nYou'll find a lot of people do\nsome really neat things with it.\n\n728\n00:37:00.220 --> 00:37:04.480\nThere's also an embedded management\ninterface inside of Cisco\n\n729\n00:37:04.480 --> 00:37:06.150\ndevices called the EEM.\n\n730\n00:37:06.150 --> 00:37:11.090\nAnd it allows you to do even more things,\nlike send emails based on actions, and\n\n731\n00:37:11.090 --> 00:37:12.580\nyou can start to learn about lot that too.\n\n732\n00:37:12.580 --> 00:37:15.680\nIt gets really complex really fast, but\nyou can do some pretty fun stuff with it.\n\n733\n00:37:15.680 --> 00:37:17.590\nSo definitely do a Google\nsearch on that one.\n\n734\n00:37:17.590 --> 00:37:19.020\nYou'll find all sorts of good things.\n\n735\n00:37:19.020 --> 00:37:20.610\n&gt;&gt; All right, Don.\nWell, thank you for joining us and\n\n736\n00:37:20.610 --> 00:37:21.530\nlending your expertise.\n\n737\n00:37:21.530 --> 00:37:23.060\nAnd thank you to the viewer watching.\n\n738\n00:37:23.060 --> 00:37:25.220\nWe're gonna go ahead and\nSign out here for ITPRO.TV.\n\n739\n00:37:25.220 --> 00:37:27.380\nI've been your host, Wes Bryan.\n\n740\n00:37:27.380 --> 00:37:27.970\n&gt;&gt; And I'm Don Pezet.\n\n741\n00:37:27.970 --> 00:37:32.523\n&gt;&gt; And we'll see you next time.\n\n742\n00:37:32.523 --> 00:37:36.223\n[MUSIC]\n\n743\n00:37:36.223 --> 00:37:39.885\n&gt;&gt; Thank you for watching ITProTV.\n\n",
          "vimeoId": "188994781"
        },
        {
          "description": "In this episode, Wes and Don introduce the Switch Port Analyzer also known as SPAN. They look at SPAN’s ability to mirror traffic, transmit or receive, the usefulness in IDS and IPS deployments. Finally they will demonstrate setting up, configuring and using SPAN.",
          "length": "1907",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/cisco-ccna200105/cisco-ccna200105-5-3-switch_port_analyzer-102116-PGM.00_31_33_20.Still001.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/cisco-ccna200105/cisco-ccna200105-5-3-switch_port_analyzer-102116-PGM.00_31_33_20.Still001-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/cisco-ccna200105/cisco-ccna200105-5-3-switch_port_analyzer-102116-PGM.00_31_33_20.Still001-sm.jpg",
          "title": "Switch Port Analyzer (SPAN)",
          "transcript": "WEBVTT\n\n1\n00:00:00.270 --> 00:00:06.602\nWelcome to ITProTV,\nI'm your host Don Pezet [CROSSTALK]\n\n2\n00:00:06.602 --> 00:00:08.500\n[MUSIC]\n\n3\n00:00:08.500 --> 00:00:11.354\n&gt;&gt; You're watching ITProTV.\n\n4\n00:00:11.354 --> 00:00:15.525\n&gt;&gt; Welcome back to another\nExciting episode here at ITProTV.\n\n5\n00:00:15.525 --> 00:00:16.745\nI'm your host Wes Bryan.\n\n6\n00:00:16.745 --> 00:00:19.785\nAnd today we're coming back at you\nwith more Cisco routing and switching.\n\n7\n00:00:19.785 --> 00:00:22.455\nAnd we're continuing through\ninfrastructure maintenance.\n\n8\n00:00:22.455 --> 00:00:25.665\nAnd joining us in the studios today\nis none other than Mr. Don Pezet.\n\n9\n00:00:25.665 --> 00:00:26.725\nDon, how you doing, sir?\n\n10\n00:00:26.725 --> 00:00:27.535\n&gt;&gt; I'm doing great, Wes.\n\n11\n00:00:27.535 --> 00:00:29.025\nReady to dive right back into Cisco, and\n\n12\n00:00:29.025 --> 00:00:32.255\nactually kind of excited because we're\ngonna be jumping back into switches.\n\n13\n00:00:32.255 --> 00:00:34.355\nI kinda feel like we've\nneglected switches.\n\n14\n00:00:34.355 --> 00:00:37.410\nWe haven't talked about them in I\ndon't know, probably ten episodes now.\n\n15\n00:00:37.410 --> 00:00:39.800\nAnd it's time to give back\nto some of the basics.\n\n16\n00:00:39.800 --> 00:00:42.870\nAnd as you guys know, we've been going\nthrough infrastructure maintenance and\n\n17\n00:00:42.870 --> 00:00:45.990\nsome of the tools that are built in\nthe Cisco equipment that we can use for\n\n18\n00:00:45.990 --> 00:00:48.150\ntroubleshooting and diagnostic purposes.\n\n19\n00:00:48.150 --> 00:00:51.270\nAnd the one we're gonna look at\ntoday is one of the fancier ones,\n\n20\n00:00:51.270 --> 00:00:53.130\nit's what's called SPAN.\n\n21\n00:00:53.130 --> 00:00:56.650\nAnd that's short for switch port analyzer.\n\n22\n00:00:56.650 --> 00:00:59.490\nThe switch port analyzer's\na neat technology\n\n23\n00:00:59.490 --> 00:01:03.530\nthat let's us clone traffic on one\nport and send it to another port.\n\n24\n00:01:03.530 --> 00:01:05.660\nA lot of other vendors\ncall this port mirrorings.\n\n25\n00:01:05.660 --> 00:01:07.800\nYou might already be familiar\nwith it under that name.\n\n26\n00:01:07.800 --> 00:01:10.790\nBut Cisco calls it SPAN,\nswitch port analyzer.\n\n27\n00:01:10.790 --> 00:01:12.870\nOn the exam expect to see SPAN.\n\n28\n00:01:12.870 --> 00:01:14.720\nDon't expect to see mirror.\n\n29\n00:01:14.720 --> 00:01:16.520\nBut that is usually what we know it.\n\n30\n00:01:16.520 --> 00:01:18.000\nSome people call it reflectors,\n\n31\n00:01:18.000 --> 00:01:21.860\nalthough reflector usually indicates that\ntraffic isn't getting to the destination.\n\n32\n00:01:21.860 --> 00:01:24.080\nBut with mirroring, it does.\n\n33\n00:01:24.080 --> 00:01:26.620\nNow, you might be asking yourself,\n\n34\n00:01:26.620 --> 00:01:30.490\nwhy the heck would we want to mirror\ntraffic in the first place, right?\n\n35\n00:01:30.490 --> 00:01:32.190\nAnd let me show you an example.\n\n36\n00:01:32.190 --> 00:01:35.940\nSo let's say that I get a call one day and\nsomebody says,\n\n37\n00:01:35.940 --> 00:01:40.770\nman just the bandwidth on\nthe network is through the roof.\n\n38\n00:01:40.770 --> 00:01:43.330\nWe're getting really slow connections.\n\n39\n00:01:43.330 --> 00:01:46.040\nThere's some just flood of\ntraffic on the network.\n\n40\n00:01:46.040 --> 00:01:47.330\nCan you figure out what it is?\n\n41\n00:01:47.330 --> 00:01:49.310\nFigure out who's eating\nup all the bandwidth.\n\n42\n00:01:49.310 --> 00:01:51.600\nWell, my first thought is okay,\neasy enough,\n\n43\n00:01:51.600 --> 00:01:55.300\nlet me fire up a network sniffer and\nlet me capture some traffic.\n\n44\n00:01:55.300 --> 00:01:57.870\nAnd when I capture that traffic off\nof the network with the sniffer,\n\n45\n00:01:57.870 --> 00:01:59.960\nI can see exactly who it is.\n\n46\n00:01:59.960 --> 00:02:03.740\nBut there's a little\nproblem with a sniffer, and\n\n47\n00:02:03.740 --> 00:02:06.830\nthe problem stems from how switches work.\n\n48\n00:02:06.830 --> 00:02:10.140\nIf you just fire up a sniffer on your\nnetwork and start capturing traffic.\n\n49\n00:02:10.140 --> 00:02:12.900\nLet's say for\nexample I want to capture Wes laptop.\n\n50\n00:02:12.900 --> 00:02:15.430\nWell, Wes and\nI are plugged into the same switch.\n\n51\n00:02:15.430 --> 00:02:20.310\nSo it's me, Wes, and our router\nall plugged into the same switch.\n\n52\n00:02:20.310 --> 00:02:23.310\nAnd so when Wes goes out to the Internet,\nif he's flooding our Internet connection\n\n53\n00:02:23.310 --> 00:02:25.870\nwith traffic,\nI'm plugged into the same switch.\n\n54\n00:02:25.870 --> 00:02:28.550\nI should see it, right, but I don't.\n\n55\n00:02:28.550 --> 00:02:30.364\nIf I were to fire up\nsomething like Wireshark,\n\n56\n00:02:30.364 --> 00:02:31.950\nwhich I'm actually running right now.\n\n57\n00:02:31.950 --> 00:02:33.880\nSo, I'm running Wireshark and\n\n58\n00:02:33.880 --> 00:02:37.730\nI'm capturing all the traffic\nI can from Wes' laptop.\n\n59\n00:02:37.730 --> 00:02:43.757\nNow Wes' IP, and Wes, correct me\nif I'm wrong here, is 10.0.14.71.\n\n60\n00:02:43.757 --> 00:02:46.223\nAnd so, what I'm I seeing\nhere is a packet capture, and\n\n61\n00:02:46.223 --> 00:02:48.849\nI've actually been running this for\nseveral minutes, and\n\n62\n00:02:48.849 --> 00:02:52.140\nit's been gathering everything\nthat Wes has sent out, all right?\n\n63\n00:02:52.140 --> 00:02:55.840\nWell, Wes, I can see your laptop from here\nand I know you're on the ITProTV website.\n\n64\n00:02:55.840 --> 00:03:00.070\nSo I should be able to see some kind of\nentry in here that indicates you went to\n\n65\n00:03:00.070 --> 00:03:00.830\nITProTV.\n\n66\n00:03:00.830 --> 00:03:04.090\nNow, I don't actually know\nthe IP address of ITProTV.\n\n67\n00:03:04.090 --> 00:03:05.940\nSo let me look that up real quick.\n\n68\n00:03:05.940 --> 00:03:12.330\nSo if we were to go to ITPro.TV,\nwe'd be going to 192.124.249.106.\n\n69\n00:03:12.330 --> 00:03:16.823\nNow I know at first glance that looks\nlike a private IP, but it is a public IP,\n\n70\n00:03:16.823 --> 00:03:19.226\n192.124 is in the public range.\n\n71\n00:03:19.226 --> 00:03:21.230\n192.168 are the private.\n\n72\n00:03:21.230 --> 00:03:23.280\nSo, that's the Internet address.\n\n73\n00:03:23.280 --> 00:03:28.340\nAnd I should see that in here somewhere,\nbut I don't.\n\n74\n00:03:28.340 --> 00:03:30.560\nIn fact, I kinda know it's a pattern.\n\n75\n00:03:30.560 --> 00:03:32.690\nThis column right here is the destination.\n\n76\n00:03:32.690 --> 00:03:37.540\nAnd if you look at the destination,\nthey're almost all identical.\n\n77\n00:03:37.540 --> 00:03:39.087\nLet's take a closer look at that.\n\n78\n00:03:39.087 --> 00:03:44.630\nThose destinations,\n10.0.255.255, what is that?\n\n79\n00:03:44.630 --> 00:03:49.820\nWell our network here in\nthe studio is 10.0.0.0/16.\n\n80\n00:03:49.820 --> 00:03:54.420\nWe use a class A subnet but\nwe break it down into a class B.\n\n81\n00:03:54.420 --> 00:03:58.727\nSo everybody's computer here in\nthe studio is 10.0.something, and so\n\n82\n00:03:58.727 --> 00:04:01.652\nwhen I see 10.0.255.255 what is that?\n\n83\n00:04:01.652 --> 00:04:02.947\nA broadcast.\n\n84\n00:04:02.947 --> 00:04:05.323\nEvery time Wes does an ARP broadcast or\n\n85\n00:04:05.323 --> 00:04:10.149\nsome kind of network broadcast to locate\nsystems on the network or whatever,\n\n86\n00:04:10.149 --> 00:04:15.662\nit's gonna show up right here as 10.0.255,\nright, so those are broadcasts.\n\n87\n00:04:15.662 --> 00:04:23.170\nThen 224.0.0.251, Wes, let's put you\non the spot, you know what 224 is?\n\n88\n00:04:23.170 --> 00:04:25.100\n&gt;&gt; I believe that's the multicast range.\n\n89\n00:04:25.100 --> 00:04:27.110\n&gt;&gt; Right, that's right at\nthe beginning of the multicast range.\n\n90\n00:04:27.110 --> 00:04:29.870\nSo every multicast IP starts with 224.\n\n91\n00:04:29.870 --> 00:04:30.730\nI'm seeing multicast.\n\n92\n00:04:30.730 --> 00:04:34.257\nAnd in fact, if you look,\nit's MDNS, multicast DNS.\n\n93\n00:04:34.257 --> 00:04:35.393\nWes is on a Mac, and\n\n94\n00:04:35.393 --> 00:04:39.390\nApple devices use multicast DNS to\nfind each other on the network.\n\n95\n00:04:39.390 --> 00:04:40.960\nAnd so that's what's going on right there.\n\n96\n00:04:40.960 --> 00:04:42.100\nHe discovering us.\n\n97\n00:04:42.100 --> 00:04:45.850\nIf we're running dynamic routing protocols\nlike EIGRP, we'd see 224.0.0.5, .6, .9,\n\n98\n00:04:45.850 --> 00:04:52.940\nOSPF uses some of them too, and so\nyou'll see those addresses popping up.\n\n99\n00:04:52.940 --> 00:04:54.570\nThose are multicasts.\n\n100\n00:04:54.570 --> 00:04:57.700\nI don't see any unicast traffic.\n\n101\n00:04:57.700 --> 00:05:02.680\nIf I look, I'm only gonna see\nmulticast and broadcast and that's it.\n\n102\n00:05:02.680 --> 00:05:05.670\nAnd that's because of\nthe way switches function.\n\n103\n00:05:05.670 --> 00:05:10.970\nSwitches take unicast traffic and send it\ndirectly to the port it needs to go to.\n\n104\n00:05:10.970 --> 00:05:13.340\nAnd they don't mess\nabout with other people.\n\n105\n00:05:13.340 --> 00:05:17.170\nAnd so, I'm not gonna see Wes's traffic or\nanybody else's for that matter.\n\n106\n00:05:17.170 --> 00:05:19.780\nIf I took out my filter here,\nI would just see broadcasts and\n\n107\n00:05:19.780 --> 00:05:21.510\nstuff from other people.\n\n108\n00:05:21.510 --> 00:05:24.510\nThe only unicast I would\nsee would be ones from me.\n\n109\n00:05:24.510 --> 00:05:25.668\nSo this is not a useful view.\n\n110\n00:05:25.668 --> 00:05:29.446\nIn fact, I'm really wasting time here by\ncollecting this data because I'm not gonna\n\n111\n00:05:29.446 --> 00:05:31.448\nsee the information that I want,\nall right?\n\n112\n00:05:31.448 --> 00:05:34.620\nNow, why is that?\n\n113\n00:05:34.620 --> 00:05:36.610\nWell, way back in an earlier episode,\n\n114\n00:05:36.610 --> 00:05:39.090\nI talked about how switches and\nrouters work.\n\n115\n00:05:39.090 --> 00:05:43.940\nActually, I think it was in the CCENT\ntraining, not in the CCNA at all.\n\n116\n00:05:43.940 --> 00:05:46.150\nSo it would have been a while back.\n\n117\n00:05:46.150 --> 00:05:47.790\nNow, if we take a look at this diagram,\n\n118\n00:05:47.790 --> 00:05:49.990\nI'll kind of run you\nthrough the process again.\n\n119\n00:05:49.990 --> 00:05:52.890\nIf I take three devices and\nin fact this is exactly what we\n\n120\n00:05:52.890 --> 00:05:55.872\nhave here in the studio,\nour router is plugged into port one.\n\n121\n00:05:55.872 --> 00:05:59.100\nMy laptop is in port two or three and\nWes is in port two or three.\n\n122\n00:05:59.100 --> 00:06:00.820\nI don't remember which of\nus is plugged into one.\n\n123\n00:06:00.820 --> 00:06:02.730\nBut one of us is plugged into these ports,\nright?\n\n124\n00:06:02.730 --> 00:06:06.580\nSo, let's just assume, well, you know\nwhat happens when you assume, right.\n\n125\n00:06:06.580 --> 00:06:10.360\nLet's figure out what port Wes is actually\nplugged in so we know right where he is.\n\n126\n00:06:10.360 --> 00:06:16.330\nNow, what I can do is I'm gonna give\nthis switch an IP address real quick,\n\n127\n00:06:16.330 --> 00:06:19.130\nand I'll show you guys how\nto find somebody's port.\n\n128\n00:06:19.130 --> 00:06:22.700\nI'm gonna do a interface vlan 1.\n\n129\n00:06:22.700 --> 00:06:25.940\nAnd I'm gonna give this switch\nan IP address in our network.\n\n130\n00:06:25.940 --> 00:06:29.901\nSo I'm just gonna give it an IP\nright there in the same network.\n\n131\n00:06:29.901 --> 00:06:34.186\nAnd I need it to have an IP because I'm\ngonna get it to try and ping Wes, right.\n\n132\n00:06:34.186 --> 00:06:40.980\nSo Wes' laptop is 10.0.14.\n\n133\n00:06:40.980 --> 00:06:41.520\nWhat was it?\n\n134\n00:06:41.520 --> 00:06:43.920\n10.0.14.71.\n\n135\n00:06:43.920 --> 00:06:47.880\nSo I'm gonna try and ping Wes' laptop,\nand I can ping it, and\n\n136\n00:06:47.880 --> 00:06:52.220\nif I do a show arp,\nnow I know his MAC address, right?\n\n137\n00:06:52.220 --> 00:06:55.370\nIf you can ping somebody,\nthen you can learn their MAC address.\n\n138\n00:06:55.370 --> 00:06:57.400\nAnd when you know their MAC address,\n\n139\n00:06:57.400 --> 00:07:00.320\nyou can figure out where they\nare in the switch because a switch\n\n140\n00:07:00.320 --> 00:07:04.370\nmaintains a MAC address table,\nwhich Mac addresses are on which port.\n\n141\n00:07:04.370 --> 00:07:08.710\nSo if I do a show mac address-table,\n\n142\n00:07:08.710 --> 00:07:11.710\nI should be able to look in here and\nfind Wes' MAC address.\n\n143\n00:07:11.710 --> 00:07:14.020\nNow we have a lot of systems\non our network here, so\n\n144\n00:07:14.020 --> 00:07:15.190\nI'm gonna try and pare this down.\n\n145\n00:07:15.190 --> 00:07:18.405\nWes' MAC address ends in 2ed9, so\n\n146\n00:07:18.405 --> 00:07:23.905\nI'm just gonna filter that to\nonly include lines with 2ed9,\n\n147\n00:07:23.905 --> 00:07:27.452\nwait, is that right or did I screw it up?\n\n148\n00:07:27.452 --> 00:07:28.592\nNope, 2ed9.\n\n149\n00:07:28.592 --> 00:07:31.090\nAll right, so\nI'm just gonna look for that.\n\n150\n00:07:31.090 --> 00:07:33.690\nAnd there he is,\nWes is on port number three.\n\n151\n00:07:33.690 --> 00:07:36.220\nIt's a little trick you can use\nto find people's port without,\n\n152\n00:07:36.220 --> 00:07:38.640\nI didn't have to walk in the closet or\ntrack a cable.\n\n153\n00:07:38.640 --> 00:07:40.860\nI didn't need to go look at the wall\njacket that he's plugged into to figure\n\n154\n00:07:40.860 --> 00:07:41.910\nout what number it is.\n\n155\n00:07:41.910 --> 00:07:44.780\nI just found it all right here through the\nswitch by exploring the MAC address table.\n\n156\n00:07:44.780 --> 00:07:47.400\nReally neat thing to do,\nso Wes is on port three.\n\n157\n00:07:47.400 --> 00:07:51.260\nSo going back to my diagram,\nif this is Wes, right.\n\n158\n00:07:51.260 --> 00:07:54.840\nSo, we'll just say that this is Wes, okay.\n\n159\n00:07:54.840 --> 00:07:57.412\nI'll stick a little name tag on it here so\nI can remember.\n\n160\n00:07:57.412 --> 00:08:01.254\nHere's Wes [LAUGH] in tiniest\npossible lettering that I could do.\n\n161\n00:08:01.254 --> 00:08:03.451\nSo Wes is right here.\n\n162\n00:08:03.451 --> 00:08:05.184\nI'm on the laptop over here.\n\n163\n00:08:05.184 --> 00:08:06.452\nSo when I monitor it.\n\n164\n00:08:06.452 --> 00:08:08.332\nWhen I start watching the network,\n\n165\n00:08:08.332 --> 00:08:11.220\nI'm trying to see anything\nthat passes over my port.\n\n166\n00:08:11.220 --> 00:08:12.280\nPort number two.\n\n167\n00:08:12.280 --> 00:08:13.060\nRight?\n\n168\n00:08:13.060 --> 00:08:15.180\nBut Wes is pointing to port number three.\n\n169\n00:08:15.180 --> 00:08:22.430\nIf this were a hub, with the way\nhubs work, traffic goes in one port.\n\n170\n00:08:22.430 --> 00:08:25.130\nAnd gets flooded out every other port.\n\n171\n00:08:25.130 --> 00:08:29.850\nSo, if West started talking on his port,\non port number three right.\n\n172\n00:08:29.850 --> 00:08:32.980\nSo he's sending traffic\nin the port number three.\n\n173\n00:08:32.980 --> 00:08:36.970\nHis traffic would then\nflood out every other port.\n\n174\n00:08:36.970 --> 00:08:41.100\nIf I'm plugged into port number two,\nI'm going to get a copy of his traffic and\n\n175\n00:08:41.100 --> 00:08:42.470\nI can intercept it and see it.\n\n176\n00:08:42.470 --> 00:08:45.200\nIf you worked on networks\nback in the 1980s or,\n\n177\n00:08:45.200 --> 00:08:47.610\nin the early 1990s you probably\ntook advantage of this.\n\n178\n00:08:47.610 --> 00:08:49.080\nHubs were great for that.\n\n179\n00:08:49.080 --> 00:08:50.600\nBut the performance stunk.\n\n180\n00:08:50.600 --> 00:08:53.660\nThe performance stunk because you were\nflooding every port with your traffic.\n\n181\n00:08:53.660 --> 00:08:56.810\nEverybody was colliding with each\nother and it made communication tough.\n\n182\n00:08:56.810 --> 00:08:58.700\nYou really couldn't have networks over.\n\n183\n00:08:58.700 --> 00:09:01.520\nLike 80 machines on\na single subnet because,\n\n184\n00:09:01.520 --> 00:09:04.842\nthings would really start to get too\ncrazy, and that is where switches came in.\n\n185\n00:09:04.842 --> 00:09:09.650\nSwitches, maintain a Mac address table,\nwhat I just searched a second ago, and\n\n186\n00:09:09.650 --> 00:09:14.120\nthe way the Mac address table works,\nis the switch watches what is going on,\n\n187\n00:09:14.120 --> 00:09:18.460\nand as it finds people it puts\nthere Mac addresses into the table.\n\n188\n00:09:18.460 --> 00:09:23.860\nSo, for example, here is Wes's Mac\naddress the switch saw him talking.\n\n189\n00:09:23.860 --> 00:09:25.750\nWes send him an art broadcast or\n\n190\n00:09:25.750 --> 00:09:28.740\nany of that Apple stuff that's\nconstantly flooding the network.\n\n191\n00:09:28.740 --> 00:09:31.250\nAnd it said okay I now\nknow your MAC address and\n\n192\n00:09:31.250 --> 00:09:32.810\nit's right here on port number three.\n\n193\n00:09:32.810 --> 00:09:35.960\nAnd it did the same thing for me right.\n\n194\n00:09:35.960 --> 00:09:38.760\nMy MAC address I'll be on port number two.\n\n195\n00:09:38.760 --> 00:09:42.008\nSo if I just look for\nzero slash two, that's gonna be me.\n\n196\n00:09:42.008 --> 00:09:46.932\nAnd so, it learned me.\n\n197\n00:09:46.932 --> 00:09:49.830\nAnd said that i was on port number two and\nit learned our router, right.\n\n198\n00:09:49.830 --> 00:09:50.790\nSo, our router 10.0.0.1.\n\n199\n00:09:50.790 --> 00:09:55.730\nAnd so, if i'm gonna show ARP.\n\n200\n00:09:55.730 --> 00:09:58.510\nI can find the Mac address of the router.\n\n201\n00:09:58.510 --> 00:10:02.060\nAnd it learned that, and it's stuck\nthat on the Mack address table two.\n\n202\n00:10:02.060 --> 00:10:04.780\nSo, those all are getting put in there.\n\n203\n00:10:04.780 --> 00:10:09.260\nAnd when Wes goes to browse the Internet,\nhe sends traffic to Port 3.\n\n204\n00:10:09.260 --> 00:10:15.240\nThe switch looks it up and it says,\nyou're trying to get to the router.\n\n205\n00:10:15.240 --> 00:10:16.860\nWell, the router's MAC\naddress is on Port 1.\n\n206\n00:10:16.860 --> 00:10:21.120\nSo we'll take your traffic and\nwe'll send it straight out Port #1.\n\n207\n00:10:21.120 --> 00:10:25.110\nMy port, right, because,\nI'm plugged into Port 2, I never get it.\n\n208\n00:10:25.110 --> 00:10:26.510\nI never see that.\n\n209\n00:10:26.510 --> 00:10:30.240\nThe only thing I see is when Wes\nsends out a broadcast or a multicast.\n\n210\n00:10:30.240 --> 00:10:32.960\nThose are going to hit the switch and the\nswitch says alright I need to flood these\n\n211\n00:10:32.960 --> 00:10:35.140\nout because everybody needs to\nsee it because it's a broadcast.\n\n212\n00:10:35.140 --> 00:10:36.530\nAnd that's all I see.\n\n213\n00:10:36.530 --> 00:10:41.300\nSo a network sniffer is pretty\nuseless on a switch network, isn't it?\n\n214\n00:10:41.300 --> 00:10:45.190\nWell, on a normal unmanaged switch, yes.\n\n215\n00:10:45.190 --> 00:10:49.440\nBut on a Cisco switch,\non a managed Cisco switch we have span.\n\n216\n00:10:49.440 --> 00:10:54.910\nAnd with span, I can say, man I need to\nsee who's eating up this routers traffic.\n\n217\n00:10:54.910 --> 00:10:59.660\nAnd I can grab that routers port, and\nI can copy the traffic to my port.\n\n218\n00:10:59.660 --> 00:11:03.900\nAnd now, I can see everything going in and\nout of the router.\n\n219\n00:11:03.900 --> 00:11:07.180\nOr if I know Wes is the problem,\nWes is a problem, so\n\n220\n00:11:07.180 --> 00:11:08.680\nlet's just run with the reality here.\n\n221\n00:11:08.680 --> 00:11:10.790\nSo I know Wes is a problem.\n\n222\n00:11:10.790 --> 00:11:12.110\nI wanna see what he's doing.\n\n223\n00:11:12.110 --> 00:11:13.460\nWait, what is he doing?\n\n224\n00:11:13.460 --> 00:11:14.250\nIs he on ESPN?\n\n225\n00:11:14.250 --> 00:11:16.470\nIs he, I wanna capture his traffic.\n\n226\n00:11:16.470 --> 00:11:20.210\nNow, this day and age,\nmost of your traffic is encrypted.\n\n227\n00:11:20.210 --> 00:11:22.560\nBut you still see the IP addresses.\n\n228\n00:11:22.560 --> 00:11:25.500\nYou still know, you can do DNS look\nups to figure out where they're going.\n\n229\n00:11:25.500 --> 00:11:26.610\nAnd you can kind of go that way.\n\n230\n00:11:26.610 --> 00:11:28.390\nI might not be able to see the payload,\nbut\n\n231\n00:11:28.390 --> 00:11:30.280\nI can figure out what type\nof traffic he's generating.\n\n232\n00:11:30.280 --> 00:11:31.640\nSo it's still useful.\n\n233\n00:11:31.640 --> 00:11:34.170\nEspecially for\nseeing who's eating up all the bandwidth.\n\n234\n00:11:34.170 --> 00:11:37.680\nSo what we can do is we\ncan tell the switch,\n\n235\n00:11:37.680 --> 00:11:40.460\nhey, take anything on port number three.\n\n236\n00:11:40.460 --> 00:11:42.790\nAnything on port number\nthree that Wes does, and\n\n237\n00:11:42.790 --> 00:11:46.200\nsend a copy of it to me on port two.\n\n238\n00:11:46.200 --> 00:11:51.150\nBy doing that now,\nnormally I might only see Wes broadcast.\n\n239\n00:11:51.150 --> 00:11:53.080\nBut now i'm going to see his broadcast and\n\n240\n00:11:53.080 --> 00:11:55.110\nhis unicast travel not even destined for\nme.\n\n241\n00:11:55.110 --> 00:11:55.860\nRight?\n\n242\n00:11:55.860 --> 00:11:59.410\nI know it's not working right now because,\nwhen I look at my wire shark.\n\n243\n00:11:59.410 --> 00:12:02.280\nWhich is running right now,\nthis very moment.\n\n244\n00:12:02.280 --> 00:12:06.120\nWes is watching a video stream over here,\nand so I know he is getting traffic.\n\n245\n00:12:06.120 --> 00:12:07.620\nIt is not showing up in here at all.\n\n246\n00:12:08.880 --> 00:12:12.080\nWell lets fo configure port mirroring,\nand we will get a chance to see it.\n\n247\n00:12:12.080 --> 00:12:12.760\nAll right.\n\n248\n00:12:12.760 --> 00:12:15.229\nFortunately, it is actually\npretty easy to configure.\n\n249\n00:12:15.229 --> 00:12:21.100\nSo here I am on the switch, and on the\nswitch when I do a show MAC address table,\n\n250\n00:12:21.100 --> 00:12:23.900\nI was able to find Wes,\nI was able to find me, right.\n\n251\n00:12:23.900 --> 00:12:27.080\nSo, we were kind of each in there and\nwe were able to look at that.\n\n252\n00:12:27.080 --> 00:12:29.650\nNow, if I actually do a full\nshow MAC address table,\n\n253\n00:12:29.650 --> 00:12:31.600\nthere's gonna be a lot of MACs in here.\n\n254\n00:12:31.600 --> 00:12:34.270\nBecause this switch uplink's\ninto the ITProTV network.\n\n255\n00:12:34.270 --> 00:12:38.090\nAnd so on port one, that's the uplink\nthat gets us to the router and\n\n256\n00:12:38.090 --> 00:12:42.730\nso you're seeing all these Mac addresses\nfor computers, cell phones, printers.\n\n257\n00:12:42.730 --> 00:12:46.210\nAs an IT company, I can't even\nbegin to guess how many devices,\n\n258\n00:12:46.210 --> 00:12:47.990\nwell I guess it kinda tells me,\nright, 157.\n\n259\n00:12:47.990 --> 00:12:50.370\nSo, we got a lot of devices\nhere in this studio and\n\n260\n00:12:50.370 --> 00:12:51.990\nthey're all showing up in there.\n\n261\n00:12:51.990 --> 00:12:54.590\nBut Wes and I are gonna be only\nones that are on different ports.\n\n262\n00:12:54.590 --> 00:12:57.140\nNow see how all these are on\nport one because of the uplink?\n\n263\n00:12:57.140 --> 00:13:02.530\nAnd then buried in there we've got,\nWes and I right in there, okay?\n\n264\n00:13:02.530 --> 00:13:07.380\nSo all that's already been tracked, I just\nneed to tell the switch to copy the stuff.\n\n265\n00:13:07.380 --> 00:13:10.940\nI know Wes is on port three and\nI'm on port two.\n\n266\n00:13:10.940 --> 00:13:13.420\nSo I wanna copy the traffic from\nport three over to port two, and\n\n267\n00:13:13.420 --> 00:13:16.100\nI wanna do it so\nthat Wes doesn't even know it happens.\n\n268\n00:13:16.100 --> 00:13:18.620\nNow before I turn it on,\ncouple of words of caution.\n\n269\n00:13:19.710 --> 00:13:22.720\nYou need to have a good\nhandle on bandwidth.\n\n270\n00:13:22.720 --> 00:13:27.890\nWhen we copy traffic, the default is\nthat we can grab either the transmit.\n\n271\n00:13:27.890 --> 00:13:29.470\nOr the received traffic.\n\n272\n00:13:29.470 --> 00:13:32.740\nThe traffic going to Wes,\nrr the traffic coming from West.\n\n273\n00:13:32.740 --> 00:13:34.250\nBut you can actually grab both.\n\n274\n00:13:34.250 --> 00:13:37.740\nI can grab what's going in,\ncoming in from West's port.\n\n275\n00:13:37.740 --> 00:13:39.610\nWhen I copy that to my port,\n\n276\n00:13:39.610 --> 00:13:42.700\nI need to make sure that my port has\nenough band to handle it, right?\n\n277\n00:13:42.700 --> 00:13:46.880\nIf Wes is on gig port and\nI am only a hundred meg port?\n\n278\n00:13:46.880 --> 00:13:49.770\nMy port is gonna get blown out and\nwhat's gonna happen is it'll\n\n279\n00:13:49.770 --> 00:13:53.440\nmove my port into an error disabled\nstate and will shut my port off, right?\n\n280\n00:13:53.440 --> 00:13:54.580\nSo, I don't wanna block myself out.\n\n281\n00:13:54.580 --> 00:13:55.650\nWe don't want that.\n\n282\n00:13:55.650 --> 00:13:58.640\nSo on a Cisco switch, when you go and\nmirror a port like this,\n\n283\n00:13:58.640 --> 00:14:02.920\nwhen I mirror Wes port to mine, it's\nactually gonna stop my port from talking.\n\n284\n00:14:02.920 --> 00:14:03.840\nI won't be able to talk anymore.\n\n285\n00:14:03.840 --> 00:14:06.430\nI'm gonna be just listening.\n\n286\n00:14:06.430 --> 00:14:10.020\nSo if that's the only network\nconnection you have on your laptop,\n\n287\n00:14:10.020 --> 00:14:11.450\nyou're cutting yourself off.\n\n288\n00:14:11.450 --> 00:14:14.280\nSo it's a good idea to have like\na wired and a wireless connection on\n\n289\n00:14:14.280 --> 00:14:16.840\nyour laptop so you can still\ncommunicate over the wireless while\n\n290\n00:14:16.840 --> 00:14:19.000\nyou're sniffing on the wire, right.\n\n291\n00:14:19.000 --> 00:14:22.280\nOr you can enable it to let you talk to.\n\n292\n00:14:22.280 --> 00:14:25.220\nBut now you've gotta make sure you\nhave enough bandwidth for you to talk.\n\n293\n00:14:25.220 --> 00:14:27.950\nAnd to carry all the port\nthat you're mirroring to.\n\n294\n00:14:27.950 --> 00:14:29.440\nSo maybe you're on a gig port.\n\n295\n00:14:29.440 --> 00:14:31.800\nAnd you're mirroring a 100 meg port.\n\n296\n00:14:31.800 --> 00:14:33.000\nYou got 900 megs more available.\n\n297\n00:14:33.000 --> 00:14:33.840\nSo you're OK.\n\n298\n00:14:33.840 --> 00:14:35.400\nYou're not gonna over subscribe.\n\n299\n00:14:35.400 --> 00:14:38.730\nBut if you're a 100 meg port and\nyou're monitoring a 100 meg port\n\n300\n00:14:38.730 --> 00:14:42.760\nbe really careful if you let your own\nsystem talk you usually don't want that.\n\n301\n00:14:42.760 --> 00:14:44.250\nSo keep that in mind when you set this up.\n\n302\n00:14:44.250 --> 00:14:45.890\nWe always have to think about bandwidth.\n\n303\n00:14:45.890 --> 00:14:48.630\nAll right, so I'm gonna tell the switch\nto start mirroring that traffic.\n\n304\n00:14:48.630 --> 00:14:53.690\nI'm gonna jump into my config so\nlet me just get into my terminal here.\n\n305\n00:14:54.950 --> 00:14:57.940\nAnd the commands are actually not so\nbad on this.\n\n306\n00:14:57.940 --> 00:15:01.610\nWith the switch port analyzer we can\nfigure it with a command, monitor.\n\n307\n00:15:02.810 --> 00:15:05.350\nWe're monitoring traffic on a port.\n\n308\n00:15:05.350 --> 00:15:08.010\nAnd when you go to monitor it,\nyou're defining a session.\n\n309\n00:15:08.010 --> 00:15:09.650\nYou can have more than one session.\n\n310\n00:15:09.650 --> 00:15:12.180\nI can be mapping different\nports to different places.\n\n311\n00:15:12.180 --> 00:15:14.240\nI might be doing something temporary,\nlike I'm talking about here,\n\n312\n00:15:14.240 --> 00:15:16.470\nI need to hook up a sniffer\njust to watch things.\n\n313\n00:15:16.470 --> 00:15:20.750\nBut I might have an intrusion\ndetection system an IDS right.\n\n314\n00:15:20.750 --> 00:15:22.430\nOr an intrusion prevention IPS.\n\n315\n00:15:22.430 --> 00:15:25.670\nIPS wouldn't normally use this but\nIDS would.\n\n316\n00:15:25.670 --> 00:15:28.320\nYou might wanna capture all of the traffic\n\n317\n00:15:28.320 --> 00:15:32.180\nfrom your router that's connected to the\nWAN and send it to the IDS for inspection.\n\n318\n00:15:32.180 --> 00:15:35.410\nYou'd put that in place to be permanent\nyou'd leave that in there all the time so\n\n319\n00:15:35.410 --> 00:15:36.980\nyour IDS could work.\n\n320\n00:15:36.980 --> 00:15:37.890\nOr you can do it temporarily.\n\n321\n00:15:37.890 --> 00:15:38.900\nOr you can have more than one.\n\n322\n00:15:38.900 --> 00:15:41.800\nI might be doing temporarily for\nme and permanently for an IDS.\n\n323\n00:15:41.800 --> 00:15:43.630\nNow I've got two different stands running.\n\n324\n00:15:43.630 --> 00:15:46.550\nSo you can actually create\nmany different sessions.\n\n325\n00:15:46.550 --> 00:15:47.830\nSo I'm going to create a monitor session.\n\n326\n00:15:47.830 --> 00:15:49.360\nI need to give it a number.\n\n327\n00:15:49.360 --> 00:15:52.752\nNow, depending on how\nexpensive your switch is,\n\n328\n00:15:52.752 --> 00:15:55.999\nis going to determine how\nmany spans you can do.\n\n329\n00:15:55.999 --> 00:16:00.160\nThe switch I'm on, it's actually one of\nthe lower end Cisco Enterprise models.\n\n330\n00:16:00.160 --> 00:16:01.883\nSo I can only do two sessions.\n\n331\n00:16:01.883 --> 00:16:05.783\nSo I can have two separate\nsessions doing port marrying.\n\n332\n00:16:05.783 --> 00:16:09.453\nBut if you're on like a 6500 you'll\nbe able to do 16, sometimes 32,\n\n333\n00:16:09.453 --> 00:16:10.760\nsometimes even more.\n\n334\n00:16:10.760 --> 00:16:11.705\nIt just depends on the switch.\n\n335\n00:16:11.705 --> 00:16:15.380\nSo, expect to see something different than\nwhat I'm seeing here unless you're on\n\n336\n00:16:16.390 --> 00:16:17.560\nsomething really cheap.\n\n337\n00:16:17.560 --> 00:16:20.300\nSo if you're on like a 3500 that\n\n338\n00:16:20.300 --> 00:16:24.590\nkind of series like a 3560 those\nguys usually only have two spans.\n\n339\n00:16:24.590 --> 00:16:27.540\nBut when you get up to 3750s,\nit starts creeping up, and\n\n340\n00:16:27.540 --> 00:16:29.650\nyou get a or either 16, and beyond.\n\n341\n00:16:29.650 --> 00:16:31.400\nSo you gotta have the back\nplane to be able to handle it.\n\n342\n00:16:31.400 --> 00:16:34.520\nAll right, so\nI'm gonna create monitor session one.\n\n343\n00:16:34.520 --> 00:16:38.530\nAnd after that I need to tell it\nthe source and the destination.\n\n344\n00:16:38.530 --> 00:16:40.690\nAnd that's normally all we provide,\nsource and destination.\n\n345\n00:16:40.690 --> 00:16:42.510\nYou can apply a filter.\n\n346\n00:16:42.510 --> 00:16:45.510\nFiltering is important if\nyou're monitoring a trunk.\n\n347\n00:16:45.510 --> 00:16:48.240\nIf I'm monitoring a trunk,\nit's carrying traffic for\n\n348\n00:16:48.240 --> 00:16:51.490\nmore than one VLAN that\ncan be a lot of data, but\n\n349\n00:16:51.490 --> 00:16:54.410\nI can filter and say I wanna monitor\nthis truck but just this one VLAN.\n\n350\n00:16:54.410 --> 00:16:58.020\nAnd so, you can put a filter in place and\nthat I'll let you do it, okay?\n\n351\n00:16:58.020 --> 00:17:00.950\nSo, in my case though, I don’t need\na filter, I wanna get everything\n\n352\n00:17:00.950 --> 00:17:03.410\nless as doing, so I can find a what\nthe heck is doing over there?\n\n353\n00:17:03.410 --> 00:17:06.040\nSo, I’m gonna start by\nsetting up the source.\n\n354\n00:17:06.040 --> 00:17:08.780\nSo, I need to grab data from him.\n\n355\n00:17:08.780 --> 00:17:13.130\nAnd I can do a source VLAN if I'm wanting\nto monitor one of my virtual interfaces,\n\n356\n00:17:13.130 --> 00:17:15.980\none of the routed interfaces, or\nI can do a physical interface,\n\n357\n00:17:15.980 --> 00:17:17.080\nand that's what I want.\n\n358\n00:17:17.080 --> 00:17:18.930\nI want to monitor a physical interface.\n\n359\n00:17:18.930 --> 00:17:20.470\nThere's an option for a remote.\n\n360\n00:17:20.470 --> 00:17:22.690\nThere's a technology called Rspan,\nremote span.\n\n361\n00:17:22.690 --> 00:17:25.840\nI might want a mirror report that's\nactually on a different switch.\n\n362\n00:17:25.840 --> 00:17:29.660\nAnd we cover that in the CCNP switch show\nwhen you move to the more advanced stuff.\n\n363\n00:17:29.660 --> 00:17:33.430\nIt's not commonly used because there is\nadditional bandwidth concerns when you\n\n364\n00:17:33.430 --> 00:17:35.480\nbuild more than one switch.\n\n365\n00:17:35.480 --> 00:17:38.088\nBut that's what that remote option is.\n\n366\n00:17:38.088 --> 00:17:43.280\nDespite the interface he's on,\nhe's on FA zero slash three..\n\n367\n00:17:43.280 --> 00:17:45.790\nAnd if I stop right there,\n\n368\n00:17:45.790 --> 00:17:50.150\nI'm just going to get his received traffic\nand that's all that's gonna come over.\n\n369\n00:17:50.150 --> 00:17:51.400\nBut I can specify it.\n\n370\n00:17:51.400 --> 00:17:54.730\nI can come in and\nI can say I want the RX, right?\n\n371\n00:17:54.730 --> 00:17:56.210\nJust as received traffic.\n\n372\n00:17:56.210 --> 00:18:02.250\nI can do tx, just to get this transmit\ntraffic or I can do both, right?\n\n373\n00:18:02.250 --> 00:18:07.330\nIf I do both,\nI'm getting full duplex communications,\n\n374\n00:18:07.330 --> 00:18:08.520\nsend and receive at the same time.\n\n375\n00:18:08.520 --> 00:18:10.550\nI gotta make sure I have bandwidth for\nthat, I do.\n\n376\n00:18:10.550 --> 00:18:13.640\nSo I'll go ahead and do both, right?\n\n377\n00:18:13.640 --> 00:18:16.290\nAnd then we can run that.\n\n378\n00:18:16.290 --> 00:18:18.510\nNext, I need to tell it where to send it.\n\n379\n00:18:18.510 --> 00:18:21.250\nSo now, it knows what I wanna gather,\nI need to tell it where to send it.\n\n380\n00:18:21.250 --> 00:18:26.140\nSo I'm gonna come in here and say,\nmonitor session 1 destination.\n\n381\n00:18:26.140 --> 00:18:27.990\nAnd we'll specify that interface.\n\n382\n00:18:27.990 --> 00:18:30.420\nSo I'm gonna do interface fa0/2.\n\n383\n00:18:30.420 --> 00:18:34.070\nI'm gonna send his traffic to me.\n\n384\n00:18:34.070 --> 00:18:41.280\nAnd if I do a little question after that,\nnotice how I've got this option, ingress.\n\n385\n00:18:41.280 --> 00:18:44.970\nWhen I press Enter,\nIt's gonna stop my port.\n\n386\n00:18:44.970 --> 00:18:48.670\nStop port two from being\nable to ingress traffic.\n\n387\n00:18:48.670 --> 00:18:52.740\nIn other words, I can't send traffic\ninto fa0/2, I can't talk anymore.\n\n388\n00:18:52.740 --> 00:18:54.780\nIt's gonna make it where I can't talk and\n\n389\n00:18:54.780 --> 00:18:56.970\nthat's to guarantee I've\ngot enough bandwidth.\n\n390\n00:18:56.970 --> 00:18:59.910\nI'm on 100 megaport,\nWest is on 100 megaport.\n\n391\n00:18:59.910 --> 00:19:03.090\nWhat happens if he goes full tilt and\neats his whole 100 megs?\n\n392\n00:19:03.090 --> 00:19:05.940\nI need 100 megs in this interface\nto handle it, otherwise I'm gonna\n\n393\n00:19:05.940 --> 00:19:08.950\nstart dropping frames, and\nI'm not gonna have a true mirror anymore.\n\n394\n00:19:08.950 --> 00:19:11.050\nSo that's the default.\n\n395\n00:19:11.050 --> 00:19:13.940\nBut if I'm on a gig port,\nand he's on 100 meg port,\n\n396\n00:19:13.940 --> 00:19:19.010\nthen I could add ingress, and then I'd\nstill be able to talk on the port.\n\n397\n00:19:19.010 --> 00:19:22.190\nAnd I could still communicate,\nwhich is good.\n\n398\n00:19:22.190 --> 00:19:26.070\nBut I'd still be capturing all his traffic\nand most of the time, we don't want that.\n\n399\n00:19:26.070 --> 00:19:29.490\nWe want to use a dedicated interface just\nfor it, and that's what I'm gonna do.\n\n400\n00:19:29.490 --> 00:19:33.160\nSo, as soon as I do that,\nmy laptop can't talk, all right.\n\n401\n00:19:33.160 --> 00:19:36.520\nNow, if I can't talk any more,\nwhat's gonna happen?\n\n402\n00:19:37.580 --> 00:19:39.150\nI just got locked out of the switch.\n\n403\n00:19:39.150 --> 00:19:39.780\nRight?\n\n404\n00:19:39.780 --> 00:19:43.310\nI was remoted into the switch and\nnow I'm dead in the water.\n\n405\n00:19:43.310 --> 00:19:46.070\nYou've got to be careful about that, too.\n\n406\n00:19:46.070 --> 00:19:50.948\nThat's where if you've got a wireless\nnetwork, I can come on and turn my Wi Fi\n\n407\n00:19:50.948 --> 00:19:55.570\non and now my laptop can talk over\nthe WiFi instead of over the wire.\n\n408\n00:19:55.570 --> 00:19:57.490\nI am monitoring on the wire.\n\n409\n00:19:57.490 --> 00:19:58.750\nBut I can talk over the WiFi.\n\n410\n00:19:58.750 --> 00:20:01.330\nAnd so now I can communicate on\nthe network even though I'm monitoring.\n\n411\n00:20:01.330 --> 00:20:03.030\nTwo network adapters really helps.\n\n412\n00:20:03.030 --> 00:20:05.800\nAnd you might have noticed in\nthe background my Wireshark is blowing up\n\n413\n00:20:05.800 --> 00:20:06.720\nnow, right?\n\n414\n00:20:06.720 --> 00:20:09.670\nAs soon as I ran that,\nnow I'm seeing tons of stuff.\n\n415\n00:20:09.670 --> 00:20:12.270\nIn fact I'm gonna, let met stop this.\n\n416\n00:20:12.270 --> 00:20:13.894\nActually, before I stop it Wes,\n\n417\n00:20:13.894 --> 00:20:16.563\ncan you do a ping to eight dot\neight dot eight dot eight.\n\n418\n00:20:16.563 --> 00:20:19.300\nI want him to do some traffic\nthat I can easily find.\n\n419\n00:20:19.300 --> 00:20:19.820\nRight?\n\n420\n00:20:19.820 --> 00:20:21.300\nSo ping to 8.8.8.8.\n\n421\n00:20:21.300 --> 00:20:24.850\nSo he's going to do that ping real quick.\n\n422\n00:20:24.850 --> 00:20:26.967\nAll of his traffic is\nbeing mirrored to me.\n\n423\n00:20:26.967 --> 00:20:29.540\n&gt;&gt; Done.\nI'm not actually cut off on the network.\n\n424\n00:20:29.540 --> 00:20:30.380\nI just can't talk.\n\n425\n00:20:30.380 --> 00:20:31.930\nBut I can listen just fine.\n\n426\n00:20:31.930 --> 00:20:36.620\nAnd here's everything Wes is sending and\neverything Wes is receiving.\n\n427\n00:20:36.620 --> 00:20:37.190\nAll right.\n\n428\n00:20:37.190 --> 00:20:42.130\nHe just did that ping to 8.8.8.8,\nI imagine it happened.\n\n429\n00:20:42.130 --> 00:20:44.200\nThere's so much stuff here, right?\n\n430\n00:20:44.200 --> 00:20:47.470\nYou'd be surprised how much data\na computer generates in a given day.\n\n431\n00:20:47.470 --> 00:20:49.220\nSo, let me just stop this.\n\n432\n00:20:49.220 --> 00:20:50.880\nAnd I hope I don't have a backlog.\n\n433\n00:20:50.880 --> 00:20:53.110\nI'm pretty sure,\nI just saw one of the pings.\n\n434\n00:20:53.110 --> 00:20:54.460\nI'm gonna stop that.\n\n435\n00:20:54.460 --> 00:20:56.980\nAnd let's just take a quick\nlook at what's coming across.\n\n436\n00:20:56.980 --> 00:21:01.170\nThe first thing I'm gonna notice is that I\ndo still have a lot of broadcast traffic.\n\n437\n00:21:01.170 --> 00:21:04.280\nIt's not like the broadcast traffic\ndisappears, that's still there.\n\n438\n00:21:04.280 --> 00:21:09.940\nBut when I scroll back a bit,\nI can start to see non-broadcast traffic.\n\n439\n00:21:09.940 --> 00:21:11.860\nWait, did it take me\nall the way to the top?\n\n440\n00:21:11.860 --> 00:21:13.670\nIt did, darn it,\nlet me get down to the good stuff.\n\n441\n00:21:13.670 --> 00:21:15.170\nGood stuff's all the way at the bottom.\n\n442\n00:21:15.170 --> 00:21:16.480\nHere we go.\n\n443\n00:21:16.480 --> 00:21:19.470\nSo, now I'm seeing,\nthere's one of the pings.\n\n444\n00:21:19.470 --> 00:21:20.650\nAnd notice this ping.\n\n445\n00:21:20.650 --> 00:21:25.160\nBefore, I saw everything coming from Wes,\nthe broadcast he was sending out.\n\n446\n00:21:25.160 --> 00:21:27.230\nNow I'm seeing things going to Wes.\n\n447\n00:21:27.230 --> 00:21:33.200\nHere's Wes sending a ping, so\n10.0.14.71 going to 8.8.8.8.\n\n448\n00:21:33.200 --> 00:21:38.410\nAnd then I see the reply from 8.8.8.8,\ngoing to west on 10.0.14.71.\n\n449\n00:21:38.410 --> 00:21:39.890\nI can see that communication.\n\n450\n00:21:40.990 --> 00:21:44.420\nI wouldn't normally.\n\n451\n00:21:44.420 --> 00:21:45.530\nThat's a unicast, right?\n\n452\n00:21:45.530 --> 00:21:46.950\nOr, here,\n10.0.14.71 going to 104.156.60.48.\n\n453\n00:21:46.950 --> 00:21:49.030\nOkay.\nMaybe that's somebody\n\n454\n00:21:50.290 --> 00:21:51.600\nout there on the internet.\n\n455\n00:21:51.600 --> 00:21:53.400\nI don't know what the heck it is.\n\n456\n00:21:53.400 --> 00:21:57.320\nBut Wes was talking to somebody, and\nso I might need to trace that out.\n\n457\n00:21:57.320 --> 00:22:00.820\nIf he was sending gigs or\nterabytes of data to this IP,\n\n458\n00:22:00.820 --> 00:22:02.220\nI might wanna know who it is.\n\n459\n00:22:02.220 --> 00:22:04.140\nIf you work for the NSA, right,\n\n460\n00:22:04.140 --> 00:22:07.020\nyou might wanna say, I think he\nmight be leaking data out, right?\n\n461\n00:22:07.020 --> 00:22:09.010\nYou could be the next Wikileaks.\n\n462\n00:22:09.010 --> 00:22:10.920\nSo I need to find out what that data was.\n\n463\n00:22:10.920 --> 00:22:14.140\nAnd it might be encrypted, but I know he\ntransmitted a large quantity of data.\n\n464\n00:22:14.140 --> 00:22:15.160\nI can go and find out why.\n\n465\n00:22:15.160 --> 00:22:18.060\nAll right,\nthat's the thing that spam let's us do.\n\n466\n00:22:18.060 --> 00:22:22.200\nThat's the advantage we get by\nhaving something like this in place,\n\n467\n00:22:22.200 --> 00:22:25.690\nis that I can now reach out and see that.\n\n468\n00:22:25.690 --> 00:22:27.230\nI can see that data.\n\n469\n00:22:27.230 --> 00:22:30.780\nAnd once you've got it, boy,\nthere's a lot of stuff you can do.\n\n470\n00:22:30.780 --> 00:22:33.650\nIf it's unencrypted traffic,\nyou can actually see what's going on.\n\n471\n00:22:33.650 --> 00:22:35.200\nHere's a DNS lookup.\n\n472\n00:22:35.200 --> 00:22:39.180\nRight, some DNS lookups are actually\nencrypted but a lot of them aren't.\n\n473\n00:22:39.180 --> 00:22:43.520\nSo you can pick a communication like\nthis one where you did a DNS lookup, and\n\n474\n00:22:43.520 --> 00:22:49.565\nthe nice thing about DNS is a lookup is\nalmost always in a Single packet, right?\n\n475\n00:22:49.565 --> 00:22:52.995\nCuz DNS link ups aren't very big, so\nthey don't usually get fragmented.\n\n476\n00:22:52.995 --> 00:22:56.605\nSo when I pick that DNS look\nup I can come down here and\n\n477\n00:22:56.605 --> 00:22:58.335\nlook at the raw data inside of it.\n\n478\n00:22:58.335 --> 00:23:00.795\nHere's the response that came in.\n\n479\n00:23:00.795 --> 00:23:03.784\nAnd typically you can find the answer And\nso\n\n480\n00:23:03.784 --> 00:23:08.269\nhe was doing a look up for\nsafebrowsing-cache.google.com,\n\n481\n00:23:08.269 --> 00:23:12.680\nactually I think that's the DNS\nserver that he was looking up.\n\n482\n00:23:14.840 --> 00:23:15.583\nYeah, it was.\n\n483\n00:23:15.583 --> 00:23:18.906\nSo this is actually,\njust querying that, but you can look in\n\n484\n00:23:18.906 --> 00:23:22.850\nthis raw data sometimes and\nyou can actually see and find that out.\n\n485\n00:23:22.850 --> 00:23:25.810\nAnd tools like Wireshark can\nactually decode a lot of this stuff.\n\n486\n00:23:25.810 --> 00:23:30.670\nYou go into it and\ngo to Follow TCP Stream.\n\n487\n00:23:30.670 --> 00:23:33.710\nIt'll try and\nreassemble that entire communication.\n\n488\n00:23:33.710 --> 00:23:35.870\nAnd yeah, well, it didn't work so\nwell, didn't it?\n\n489\n00:23:35.870 --> 00:23:37.600\nActually, there it goes.\n\n490\n00:23:37.600 --> 00:23:39.530\nSo here,\nyou could see a whole communication.\n\n491\n00:23:39.530 --> 00:23:43.820\nHe connected and here's Google saying yup,\nI'm an Internet Authority.\n\n492\n00:23:43.820 --> 00:23:46.130\nAnd let me just return back my names.\n\n493\n00:23:46.130 --> 00:23:48.710\nAnd we can actually see that entire\n\n494\n00:23:48.710 --> 00:23:50.590\nexchange that he did\nwhile talking with it.\n\n495\n00:23:50.590 --> 00:23:53.717\nNow, Wes might not have actually\ngone to Google's website.\n\n496\n00:23:53.717 --> 00:23:55.270\nBut Google Adsense, right,\n\n497\n00:23:55.270 --> 00:23:58.447\npeople have those links in almost\nevery web page these days.\n\n498\n00:23:58.447 --> 00:23:59.908\nSo, no matter what web page you go to,\n\n499\n00:23:59.908 --> 00:24:02.442\nyou're almost always doing some\nkind of lookup against Google.\n\n500\n00:24:02.442 --> 00:24:06.413\nAnd so I can see and\ntrack that whole thing right through here.\n\n501\n00:24:06.413 --> 00:24:10.661\nAnd yeah, some of it's encrypted, what's\nred is him sending something to Google,\n\n502\n00:24:10.661 --> 00:24:13.350\nwhat's blue is Google talking back to him.\n\n503\n00:24:13.350 --> 00:24:17.150\nAnd so we can see and it does look\nlike the actual payload was encrypted,\n\n504\n00:24:17.150 --> 00:24:19.180\njust the announcements\nup here was unencrypted.\n\n505\n00:24:19.180 --> 00:24:20.990\nSo not a lot of good data there.\n\n506\n00:24:20.990 --> 00:24:25.470\nBut if Wes had done a telnet session, I'd\nsee that whole telnet session right here.\n\n507\n00:24:25.470 --> 00:24:29.144\nWe'd actually be able to\nsee that information and\n\n508\n00:24:29.144 --> 00:24:32.620\ngather it and kinda spot what's going on.\n\n509\n00:24:32.620 --> 00:24:36.500\nJust to test that,\nlet me start this capture again.\n\n510\n00:24:37.970 --> 00:24:39.853\nAll right, so\nhere I'm running another capture.\n\n511\n00:24:39.853 --> 00:24:41.790\nAnd Wes, can you drop to your terminal?\n\n512\n00:24:41.790 --> 00:24:42.620\n&gt;&gt; I can, I'm there now.\n\n513\n00:24:42.620 --> 00:24:46.926\n&gt;&gt; And telnet to 10.0.0.4.\n\n514\n00:24:46.926 --> 00:24:50.192\nI'm gonna have him telnet into\na device on the network, all right?\n\n515\n00:24:50.192 --> 00:24:52.144\n&gt;&gt; That was 10.0.0.4?\n\n516\n00:24:52.144 --> 00:24:53.347\n&gt;&gt; .4, yep.\n\n517\n00:24:53.347 --> 00:24:55.210\nAnd so he is gonna telnet to a device.\n\n518\n00:24:55.210 --> 00:25:00.860\nAnd it's gonna ask him for\na username and a password, right?\n\n519\n00:25:00.860 --> 00:25:03.023\nAnd so I need to come in here and\nchange my filter.\n\n520\n00:25:03.023 --> 00:25:04.032\nCuz I'm filtering too much stuff.\n\n521\n00:25:04.032 --> 00:25:09.140\nI need to do IP source equals 10.0.14,\nwas it 71?\n\n522\n00:25:09.140 --> 00:25:09.760\n&gt;&gt; 71, yep.\n\n523\n00:25:09.760 --> 00:25:13.480\n&gt;&gt; 71, okay.\nSo then, I'm seeing his traffic again.\n\n524\n00:25:13.480 --> 00:25:15.947\nAnd -- actually,\nI'm not seeing your traffic, am I?\n\n525\n00:25:15.947 --> 00:25:18.759\nLet's see.\n\n526\n00:25:18.759 --> 00:25:24.138\nLet me just flush all that out.\n\n527\n00:25:25.277 --> 00:25:26.149\nThere we go.\n\n528\n00:25:26.149 --> 00:25:30.792\nAll right, so\nI wanna do IP address equals 10.14.71.\n\n529\n00:25:30.792 --> 00:25:31.841\nSo I'm just seeing your traffic.\nAll right, so\n\n530\n00:25:31.841 --> 00:25:33.528\nI want you to telnet into that switch.\n\n531\n00:25:33.528 --> 00:25:35.360\n&gt;&gt; Okay.\n&gt;&gt; Yeah, I think it's a switch.\n\n532\n00:25:35.360 --> 00:25:37.700\nAnd just put in a fake username and\npassword.\n\n533\n00:25:37.700 --> 00:25:40.270\nSo username Wes and\npassword something, right?\n\n534\n00:25:41.280 --> 00:25:43.870\nNow he's telneting, and\nthat's an unencrypted session.\n\n535\n00:25:43.870 --> 00:25:47.070\nThat's being mirrored over\nto me through span, and so\n\n536\n00:25:47.070 --> 00:25:49.690\nI'm able to see it and decode it.\n\n537\n00:25:49.690 --> 00:25:51.940\nSo as soon as you, you got a bad prompt?\n\n538\n00:25:51.940 --> 00:25:52.660\nOkay.\n&gt;&gt; I did.\n\n539\n00:25:52.660 --> 00:25:53.420\n&gt;&gt; All right, so\n\n540\n00:25:53.420 --> 00:25:55.450\nI'm just gonna give it a second to\nmake sure I don't have a backlog.\n\n541\n00:25:55.450 --> 00:25:58.380\nSometimes if your laptop gets slow,\nmy laptop's doing a lot right now,\n\n542\n00:25:58.380 --> 00:25:59.460\nI can get a backlog.\n\n543\n00:25:59.460 --> 00:26:00.360\nSo I'm gonna stop that.\n\n544\n00:26:01.360 --> 00:26:08.890\nAnd then I'm gonna look for\ntraffic that has a destination.\n\n545\n00:26:08.890 --> 00:26:14.920\nSo IP destination host equals 10.0.0.4.\n\n546\n00:26:14.920 --> 00:26:18.924\nAll right, so I'm going to look for\nthat traffic, that did not work.\n\n547\n00:26:18.924 --> 00:26:25.963\nSo, let's do IP address equals 10.0.0.4.\n\n548\n00:26:25.963 --> 00:26:29.200\nThere we go, and\nI can see a telnet session right there.\n\n549\n00:26:29.200 --> 00:26:31.080\nRight there is that\ntelnet session from Wes.\n\n550\n00:26:31.080 --> 00:26:33.640\nAnd I'm gonna take that,\nand I'm gonna follow it.\n\n551\n00:26:33.640 --> 00:26:35.210\nAnd I'll follow the TCP stream.\n\n552\n00:26:35.210 --> 00:26:36.700\nAnd it's going to put it together.\n\n553\n00:26:36.700 --> 00:26:39.900\nSo, Wes connected and\nhe got a message that's an HP switch.\n\n554\n00:26:39.900 --> 00:26:41.770\nAnd so he got a message from the switch.\n\n555\n00:26:41.770 --> 00:26:42.956\nAnd so here is all that data.\n\n556\n00:26:42.956 --> 00:26:46.090\nAnd this time they're red is\nsomething that was sent to Wes, and\n\n557\n00:26:46.090 --> 00:26:48.645\nthen the blue is something\nthat Wes sent back to it.\n\n558\n00:26:48.645 --> 00:26:55.450\nAnd as I look down, I can see where it\nprompted him for a username, right here.\n\n559\n00:26:55.450 --> 00:26:57.500\nAnd I can see the username, something.\n\n560\n00:26:57.500 --> 00:26:58.439\nDid you type something for the username?\n\n561\n00:26:58.439 --> 00:26:59.284\n&gt;&gt; That was the password.\n\n562\n00:26:59.284 --> 00:26:59.947\n&gt;&gt; That was the password.\n\n563\n00:26:59.947 --> 00:27:01.101\nWhat did you use for username?\n\n564\n00:27:01.101 --> 00:27:02.161\n&gt;&gt; Wes.\n\n565\n00:27:02.161 --> 00:27:03.341\n&gt;&gt; I can see that here.\n\n566\n00:27:03.341 --> 00:27:05.468\nIt echoed back.\n\n567\n00:27:05.468 --> 00:27:09.917\nHere's the W key press,\nthe E key press and the S key press.\n\n568\n00:27:09.917 --> 00:27:10.832\nSo they're just a little spread out.\n\n569\n00:27:10.832 --> 00:27:11.914\nSee how they're blue?\n\n570\n00:27:11.914 --> 00:27:18.070\nSo, he did W, e, s, for the username.\n\n571\n00:27:18.070 --> 00:27:21.180\nAnd he was typing it one at a time and\nit was showing onscreen.\n\n572\n00:27:21.180 --> 00:27:23.730\nWith the actual password,\nit didn't show onscreen, did it?\n\n573\n00:27:23.730 --> 00:27:24.495\nIt was obscured?\n\n574\n00:27:24.495 --> 00:27:25.750\n&gt;&gt; Mm-hm.\n&gt;&gt; So it never echoed it back.\n\n575\n00:27:25.750 --> 00:27:27.070\nSo that's why it's all together like that.\n\n576\n00:27:27.070 --> 00:27:28.970\nAnd we see something, right?\n\n577\n00:27:28.970 --> 00:27:32.650\nSo I can actually see the password that\nhe typed in, it's an invalid password,\n\n578\n00:27:32.650 --> 00:27:34.190\nbut I can see it.\n\n579\n00:27:34.190 --> 00:27:36.845\nThat's the stuff we can do with\na sniffer that's very powerful.\n\n580\n00:27:36.845 --> 00:27:40.330\nAnd on a switch that's not possible,\nnormally.\n\n581\n00:27:40.330 --> 00:27:43.990\nIn an unmanaged switch,\nyou can't see this traffic but\n\n582\n00:27:43.990 --> 00:27:46.520\nin a managed switch then you can.\n\n583\n00:27:46.520 --> 00:27:48.350\nAnd so let me let me get\nconnected back to my switch.\n\n584\n00:27:48.350 --> 00:27:51.920\nNow I'm still locked out and\nso I'm gonna have to, let me\n\n585\n00:27:53.630 --> 00:27:58.710\nswitch over, shoot,\nI'm still gonna be locked out, aren't I?\n\n586\n00:27:58.710 --> 00:28:01.050\nSo I'm gonna have to switch over to\na different way to connect to it.\n\n587\n00:28:01.050 --> 00:28:02.390\nI gotta cut off my physical adapter.\n\n588\n00:28:02.390 --> 00:28:04.930\nOtherwise, I'm trying to\nuse my physical adapter,\n\n589\n00:28:04.930 --> 00:28:08.410\ncuz your system will prefer a physical\nadapter over your wireless normally.\n\n590\n00:28:08.410 --> 00:28:10.980\nSo I need to just change\nmy priority real quick.\n\n591\n00:28:10.980 --> 00:28:14.220\nOr I guess what would've been faster is\njust to unplug my physical adapter, but\n\n592\n00:28:14.220 --> 00:28:16.180\nthat'll make Wireshark really mad.\n\n593\n00:28:16.180 --> 00:28:21.321\nSo I'm just gonna change my\npriority here real quick,\n\n594\n00:28:21.321 --> 00:28:28.375\nand that will let me take my WiFi and\nmove it up towards the top, there we go.\n\n595\n00:28:28.375 --> 00:28:31.671\nSo now, I'm gonna start talking\nthrough my WiFi connection,\n\n596\n00:28:31.671 --> 00:28:33.670\nwhich, let me get back to my console.\n\n597\n00:28:33.670 --> 00:28:37.940\nI actually, on this show, you guys\nsee me console into a lot of stuff,\n\n598\n00:28:37.940 --> 00:28:40.250\nI don't normally have a cable run\nfrom my laptop to the device,\n\n599\n00:28:40.250 --> 00:28:42.380\nI have a little device\ncalled an air console.\n\n600\n00:28:42.380 --> 00:28:46.510\nAnd you plug it into a console port, and\nit connects to your WiFi network, and so\n\n601\n00:28:46.510 --> 00:28:49.170\nyou can console in without\nhaving to be right there.\n\n602\n00:28:49.170 --> 00:28:52.680\nSo now I can jump in and\nconnect to a device.\n\n603\n00:28:52.680 --> 00:28:56.390\nThere we go, and so now I'm back in.\n\n604\n00:28:56.390 --> 00:28:59.660\nAll right, so\nI know this had been running.\n\n605\n00:28:59.660 --> 00:29:01.190\nI know I've been getting the traffic.\n\n606\n00:29:01.190 --> 00:29:03.070\nIf I log into the switch for\nthe first time, and\n\n607\n00:29:03.070 --> 00:29:06.890\nI just wanna see what's in place,\nI can always run show monitor.\n\n608\n00:29:06.890 --> 00:29:08.414\nRemember monitor is the command\nwe use to configure.\n\n609\n00:29:08.414 --> 00:29:12.170\nSo show monitor is gonna tell me each of\nthe sessions that I've got up and running.\n\n610\n00:29:12.170 --> 00:29:15.910\nAnd so here's my session that's\nmirroring port 3 to port 2.\n\n611\n00:29:15.910 --> 00:29:18.710\nI diagnose the network,\nI find out what Wes is doing.\n\n612\n00:29:18.710 --> 00:29:22.220\nAnd when I'm done figuring everything\nout I need to make sure I turn off\n\n613\n00:29:22.220 --> 00:29:23.160\nthe monitor, right?\n\n614\n00:29:23.160 --> 00:29:24.810\nI need to get rid of that session.\n\n615\n00:29:24.810 --> 00:29:29.907\nAnd the way we do that is by\njumping back into configuration and\n\n616\n00:29:29.907 --> 00:29:33.836\nsaying no monitor session and\nthe port number.\n\n617\n00:29:33.836 --> 00:29:34.925\nThe session number, sorry not port.\n\n618\n00:29:34.925 --> 00:29:36.990\nI'm thinking OSI model here.\n\n619\n00:29:36.990 --> 00:29:39.790\nSo I needed to no monitor session 1.\n\n620\n00:29:39.790 --> 00:29:41.940\nAnd I don't have to undo the source and\ndestination.\n\n621\n00:29:41.940 --> 00:29:45.450\nThose go away together,\nthis eliminated the entire session.\n\n622\n00:29:45.450 --> 00:29:49.670\nAnd so now if I do a show monitor\nI'm no longer monitoring anything.\n\n623\n00:29:50.710 --> 00:29:55.770\nAnd my port is allowed to talk again, so\nI can talk over my Ethernet adapter and\n\n624\n00:29:55.770 --> 00:29:58.220\nI'm not bound to just\nthe wireless anymore, right?\n\n625\n00:29:58.220 --> 00:30:02.070\nBut that's how we can use the switch\nport analyzer to diagnose and\n\n626\n00:30:02.070 --> 00:30:02.970\ntroubleshoot networks.\n\n627\n00:30:02.970 --> 00:30:05.890\nAnd enables a lot of third party tools,\nusually sniffers and\n\n628\n00:30:05.890 --> 00:30:09.270\nintrusion detection systems,\nIDSs and packet capture.\n\n629\n00:30:09.270 --> 00:30:11.610\nThose are the two real big uses for that.\n\n630\n00:30:11.610 --> 00:30:12.510\n&gt;&gt; That's a great information.\n\n631\n00:30:12.510 --> 00:30:13.300\nThis has been a fun one.\n\n632\n00:30:13.300 --> 00:30:16.530\nIn fact I might even challenge some\nof our viewers to pause the video and\n\n633\n00:30:16.530 --> 00:30:19.910\ngrab some of them public IP addresses and\ndo an nslookup.\n\n634\n00:30:19.910 --> 00:30:22.640\nMaybe you can tell what I was\nlooking at during this episode.\n\n635\n00:30:22.640 --> 00:30:23.390\n&gt;&gt; Do we wanna know?\n\n636\n00:30:23.390 --> 00:30:24.835\n[LAUGH]\n&gt;&gt; No it's okay.\n\n637\n00:30:24.835 --> 00:30:27.850\n[LAUGH] But Don, it does look like we're\ncoming to the end of another episode.\n\n638\n00:30:27.850 --> 00:30:31.950\nBut before we sign out, do you got any\nadditional advice you might wanna use on\n\n639\n00:30:31.950 --> 00:30:34.695\nour gib to our viewers regarding SPAN?\n\n640\n00:30:34.695 --> 00:30:36.365\n&gt;&gt; For real life LAN, two things, right?\n\n641\n00:30:36.365 --> 00:30:38.945\nOne, make sure you have two network\nadapters on your monitoring station.\n\n642\n00:30:38.945 --> 00:30:41.775\nYou guys saw I knew it was gonna happen,\nand I still locked myself out.\n\n643\n00:30:41.775 --> 00:30:42.965\nSo it does happen.\n\n644\n00:30:42.965 --> 00:30:45.425\nYou might need to reprioritize your cards,\nlike I did.\n\n645\n00:30:45.425 --> 00:30:47.545\nThe other thing is make sure you\nturn it off when you're done.\n\n646\n00:30:47.545 --> 00:30:51.280\nCuz if you leave it on,\nit's gonna keep spamming that traffic and\n\n647\n00:30:51.280 --> 00:30:53.910\nyou are eating up extra bandwidth\non your backplane by doing this.\n\n648\n00:30:53.910 --> 00:30:56.500\nSo make sure you turn it off when\nyou are done unless it's a permanent\n\n649\n00:30:56.500 --> 00:30:58.010\ninstallation like IDS.\n\n650\n00:30:58.010 --> 00:30:59.900\nFor the exam, remember the two commands,\n\n651\n00:30:59.900 --> 00:31:03.770\nremember the monitor session,\nfollowed by a number, and then source.\n\n652\n00:31:03.770 --> 00:31:06.220\nAnd monitor session, followed by a number,\nand the destination.\n\n653\n00:31:06.220 --> 00:31:09.070\nThose are the two key things\nto get SPAN up and running.\n\n654\n00:31:10.280 --> 00:31:11.900\nI don't think it'll show up on the exam,\nbut\n\n655\n00:31:11.900 --> 00:31:14.140\njust in case,\nyou can set more than one destination.\n\n656\n00:31:14.140 --> 00:31:16.450\nI can mirror one port to two\ndifferent places if I wanted.\n\n657\n00:31:16.450 --> 00:31:17.610\nIt does support that.\n\n658\n00:31:17.610 --> 00:31:21.130\nThe higher end switches do that pretty\noften, lower end switches not so much.\n\n659\n00:31:21.130 --> 00:31:24.540\nBut just be aware of that and\nthat's pretty much all we need about SPAN.\n\n660\n00:31:24.540 --> 00:31:27.250\n&gt;&gt; Well Don, thank you for lending your\nexpertise and thank you to the viewer for\n\n661\n00:31:27.250 --> 00:31:27.750\nwatching.\n\n662\n00:31:27.750 --> 00:31:29.520\nLooks like we are gonna wrap this one up,\nso\n\n663\n00:31:29.520 --> 00:31:33.220\nsigning off for ITPro.TV,\nI've been your host, Wes Bryan.\n\n664\n00:31:33.220 --> 00:31:33.940\n&gt;&gt; And I'm Don Pezet.\n\n665\n00:31:33.940 --> 00:31:34.980\n&gt;&gt; And we'll see you next time.\n\n666\n00:31:34.980 --> 00:31:42.177\n[MUSIC]\n\n667\n00:31:42.177 --> 00:31:44.538\n&gt;&gt; Thank you for watching ITPRO.TV.\n\n",
          "vimeoId": "195023238"
        },
        {
          "description": "In this episode, Wes and Don external services and how is relates to enterprise network architecture. They discuss a couple of models, the first being a legacy model with the inclusion of services such as RADIUS and TACACS+. They also dive into a newer model known as software defined networks or SDN, explaining the differences between these models as well as the benefits of SDN.",
          "length": "2173",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/cisco-ccna200105/cisco-ccna200105-5-4-external_services-110916-high.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/cisco-ccna200105/cisco-ccna200105-5-4-external_services-110916-high-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/cisco-ccna200105/cisco-ccna200105-5-4-external_services-110916-high-sm.jpg",
          "title": "External Services",
          "transcript": "WEBVTT\n\n1\n00:00:00.008 --> 00:00:01.274\nWelcome to ITProTV.\n\n2\n00:00:01.274 --> 00:00:02.279\nI'm your host, Don Pezet.\n\n3\n00:00:02.279 --> 00:00:08.273\n[CROSSTALK]\n\n4\n00:00:08.273 --> 00:00:12.170\n&gt;&gt; You're watching ITProTV.\n\n5\n00:00:12.170 --> 00:00:14.884\n&gt;&gt; Welcome back to another\nexciting episode here at ITProTV.\n\n6\n00:00:14.884 --> 00:00:15.740\nI'm your host, Wes Bryan.\n\n7\n00:00:15.740 --> 00:00:16.674\nAnd in today's episode,\n\n8\n00:00:16.674 --> 00:00:19.228\nwe're continuing through our series\nin Cisco Routing and Switching.\n\n9\n00:00:19.228 --> 00:00:23.670\nAnd we've been looking at\nthe infrastructure's maintenance.\n\n10\n00:00:23.670 --> 00:00:26.250\nJoining me back in the studios today for\nthis very topic,\n\n11\n00:00:26.250 --> 00:00:28.700\nif I can figure out what we're doing,\nis Don Pezet.\n\n12\n00:00:28.700 --> 00:00:29.850\nDon, how are you doing, sir?\n\n13\n00:00:29.850 --> 00:00:30.480\n&gt;&gt; I'm doing great, Wes.\n\n14\n00:00:30.480 --> 00:00:32.632\nI know we're switching it up today and\ndoing a little maintenance.\n\n15\n00:00:32.632 --> 00:00:35.621\nWe've been jumping around through our\ninfrastructure services and other things.\n\n16\n00:00:35.621 --> 00:00:36.728\nAnd in this episode,\n\n17\n00:00:36.728 --> 00:00:40.640\nwe're gonna be tackling what I\nlike to call extermal services.\n\n18\n00:00:40.640 --> 00:00:45.290\nExternal services are stuff that\nhappens outside of our Cisco equipment.\n\n19\n00:00:45.290 --> 00:00:47.540\nAnd I know, this is a Cisco exam.\n\n20\n00:00:47.540 --> 00:00:51.020\nWe were learning router switches,\nCisco technologies.\n\n21\n00:00:51.020 --> 00:00:56.220\nBut you'll find that out there in\nthe real world, sometimes it's not.\n\n22\n00:00:56.220 --> 00:00:58.860\nIt might not be that you can't\ndo something on a Cisco device.\n\n23\n00:00:58.860 --> 00:01:02.290\nBut just that you can, it just takes more\neffort than to do it somewhere else.\n\n24\n00:01:02.290 --> 00:01:06.098\nAnd so, oftentimes, we'll integrate\nour Cisco devices with other software,\n\n25\n00:01:06.098 --> 00:01:06.888\nother systems.\n\n26\n00:01:06.888 --> 00:01:08.675\nTo make things run a little more smoothly.\n\n27\n00:01:08.675 --> 00:01:11.850\nOr provide some functionality\nwe wouldn't otherwise have.\n\n28\n00:01:11.850 --> 00:01:15.200\nAnd that's what I've thrown under\nthis umbrella of external services.\n\n29\n00:01:15.200 --> 00:01:18.060\nThat's what we're gonna be taking\na look at right here in this episode.\n\n30\n00:01:18.060 --> 00:01:21.000\nSo let me just start off with\nwhy we even care about this.\n\n31\n00:01:22.150 --> 00:01:25.020\nWe've seen a lot of what\nour devices can do.\n\n32\n00:01:25.020 --> 00:01:26.500\nWe've seen how to set up a Cisco router.\n\n33\n00:01:26.500 --> 00:01:29.860\nWe've seen how to set up a switch and to\nget it configured and get it put in place.\n\n34\n00:01:29.860 --> 00:01:31.070\nWe've seen how to troubleshoot.\n\n35\n00:01:31.070 --> 00:01:33.980\nWe've seen all of these\ndifferent crazy things all right\n\n36\n00:01:33.980 --> 00:01:35.110\non the devices themselves.\n\n37\n00:01:36.860 --> 00:01:41.590\nBut we've always been looking\nat it as a single device.\n\n38\n00:01:41.590 --> 00:01:43.040\nI'm working on one router.\n\n39\n00:01:43.040 --> 00:01:45.820\nAnd so if I need to assign a couple IPs,\nI just assign the IPs.\n\n40\n00:01:45.820 --> 00:01:47.614\nIf I need to change some\nrouting configurations,\n\n41\n00:01:47.614 --> 00:01:50.540\nI just change the configurations,\nit's one device.\n\n42\n00:01:50.540 --> 00:01:53.820\nBut let's step out of our\ntraining shoes for a moment.\n\n43\n00:01:53.820 --> 00:01:55.390\nSo I'm done at home studying.\n\n44\n00:01:55.390 --> 00:01:57.480\nI'm gonna step out of study mode.\n\n45\n00:01:57.480 --> 00:01:59.080\nAnd let's go into work mode.\n\n46\n00:01:59.080 --> 00:02:01.920\nWhen you work for\nan enterprise organization.\n\n47\n00:02:01.920 --> 00:02:03.480\nMaybe not really a small or\n\n48\n00:02:03.480 --> 00:02:07.370\nmedium company, but a large or\nan enterprise sized organization.\n\n49\n00:02:07.370 --> 00:02:08.600\nYou're not talking about\none router anymore.\n\n50\n00:02:08.600 --> 00:02:10.280\nYou're not talking about one switch.\n\n51\n00:02:10.280 --> 00:02:14.481\nYou're talking about thousands of\nrouters or thousands of switches.\n\n52\n00:02:14.481 --> 00:02:20.750\nAnd doing a simple configuration can\nactually be a really massive chore.\n\n53\n00:02:20.750 --> 00:02:21.914\nMaking a simple change.\n\n54\n00:02:21.914 --> 00:02:27.850\nIf you decide, I wanna put a login\nbanner on all of my switches.\n\n55\n00:02:27.850 --> 00:02:29.470\nWell, login banners are easy.\n\n56\n00:02:29.470 --> 00:02:30.760\nWe have the MOTD feature.\n\n57\n00:02:30.760 --> 00:02:32.786\nWe saw that I think back in CCENT.\n\n58\n00:02:32.786 --> 00:02:36.150\nBut easy command, easy to learn and\nmemorize and do it.\n\n59\n00:02:36.150 --> 00:02:40.867\nBut imagine if you had to SSH into\na thousand different devices and\n\n60\n00:02:40.867 --> 00:02:43.538\npaste that little bit of command in.\n\n61\n00:02:43.538 --> 00:02:44.610\nThat would be a lot of work.\n\n62\n00:02:44.610 --> 00:02:46.660\nIt would be a lot of work,\nit would take a long time.\n\n63\n00:02:46.660 --> 00:02:47.992\nAnd unless you're an hourly employee,\n\n64\n00:02:47.992 --> 00:02:49.646\nthat's not something\nyou're going to wanna do.\n\n65\n00:02:49.646 --> 00:02:53.890\nAnd so we need to leverage other systems.\n\n66\n00:02:53.890 --> 00:02:57.450\nTo be able to help us configure,\nand control, and maintain,\n\n67\n00:02:57.450 --> 00:03:00.604\nand support all the infrastructure\nwe have out there.\n\n68\n00:03:00.604 --> 00:03:02.810\nAnd this isn't just Cisco.\n\n69\n00:03:02.810 --> 00:03:03.950\nThis really goes for any.\n\n70\n00:03:03.950 --> 00:03:07.040\nThis could be a Microsoft show or\na Juniper show or\n\n71\n00:03:07.040 --> 00:03:07.760\na whatever, it wouldn't matter.\n\n72\n00:03:07.760 --> 00:03:11.800\nThey're all in the same problem,\nthat managing one device is easy.\n\n73\n00:03:11.800 --> 00:03:14.510\nManaging a thousand\ndevices is pretty hard.\n\n74\n00:03:14.510 --> 00:03:17.020\nSo that's where our\nexternal services come in.\n\n75\n00:03:17.020 --> 00:03:20.660\nThey make life a lot easier on us by\nsupporting a lot of the infrastructure\n\n76\n00:03:20.660 --> 00:03:23.760\nthat we just wouldn't normally have,\nthat we would have to do manually.\n\n77\n00:03:23.760 --> 00:03:24.940\nThat would be a nightmare.\n\n78\n00:03:24.940 --> 00:03:27.260\nSo that's what we're gonna\ntake a look at right here.\n\n79\n00:03:27.260 --> 00:03:29.210\nIt is a little bit subjective.\n\n80\n00:03:29.210 --> 00:03:32.730\nBecause you need to look at your\nenvironment, your work environment.\n\n81\n00:03:32.730 --> 00:03:34.990\nAnd find out where you'd actually benefit.\n\n82\n00:03:34.990 --> 00:03:38.473\nBecause there are plenty of times\nwhere I have looked at it and said,\n\n83\n00:03:38.473 --> 00:03:41.784\nit is just faster for me to jump in and\nconfigure this one device.\n\n84\n00:03:41.784 --> 00:03:43.062\nAnd there's nothing wrong with that.\n\n85\n00:03:43.062 --> 00:03:45.425\nBut there's other times\nwhere I've looked at it and\n\n86\n00:03:45.425 --> 00:03:48.810\nI said, boy,\nI wish I could do this way easier.\n\n87\n00:03:48.810 --> 00:03:52.790\nAnd I have written scripts like\nthat MOTD example I gave you of\n\n88\n00:03:52.790 --> 00:03:54.000\nsetting a login banner.\n\n89\n00:03:54.000 --> 00:03:58.250\nYou might write a script just like\na Python script or Pearl script or\n\n90\n00:03:58.250 --> 00:04:00.540\nsomething that SSHs into the device.\n\n91\n00:04:00.540 --> 00:04:05.110\nJumps in the config, pastes in that\nbanner and then exits out and saves.\n\n92\n00:04:05.110 --> 00:04:06.560\nYou could write a script\nthat does that pretty easy.\n\n93\n00:04:08.070 --> 00:04:12.938\nBut where it gets challenging is if I\nthen point that at a thousand routers and\n\n94\n00:04:12.938 --> 00:04:14.470\nmaybe it fails on five.\n\n95\n00:04:14.470 --> 00:04:16.130\nSo five out of a thousand.\n\n96\n00:04:16.130 --> 00:04:17.770\nHow do I know which five failed?\n\n97\n00:04:17.770 --> 00:04:20.329\nNow, I've got to create a logging system\nto be able to keep track of whether it was\n\n98\n00:04:20.329 --> 00:04:20.982\nsuccessful or not.\n\n99\n00:04:20.982 --> 00:04:23.742\nOr an audit the system to go and\nconnect to the routers and\n\n100\n00:04:23.742 --> 00:04:26.180\nverify whether that line is in the config.\n\n101\n00:04:26.180 --> 00:04:28.180\nIt becomes a real\nchallenge to do it right.\n\n102\n00:04:29.600 --> 00:04:32.380\nIf you're not so worried,\nif it's not mission critical,\n\n103\n00:04:32.380 --> 00:04:34.800\nyeah, you could sloppily throw it in and\nget it done.\n\n104\n00:04:34.800 --> 00:04:38.249\nBut if you want it done right,\nit becomes a real challenge.\n\n105\n00:04:38.249 --> 00:04:41.440\nAnd that's where this external\nsoftware is gonna come in.\n\n106\n00:04:41.440 --> 00:04:45.795\nNow, there's two different ways that we\ncan integrate external services into Cisco\n\n107\n00:04:45.795 --> 00:04:46.347\ndevices.\n\n108\n00:04:46.347 --> 00:04:49.314\nThere's the legacy model,\nand there's the new SDN or\n\n109\n00:04:49.314 --> 00:04:51.700\nsoftware defined networking model.\n\n110\n00:04:51.700 --> 00:04:52.830\nSo let's start with the legacy model.\n\n111\n00:04:52.830 --> 00:04:56.130\nBecause that one is directly\nsupported by all Cisco equipment\n\n112\n00:04:56.130 --> 00:04:57.490\nwith very little infrastructure.\n\n113\n00:04:57.490 --> 00:05:01.290\nWe'll start there, and\nthen we'll get into SDN afterwards.\n\n114\n00:05:01.290 --> 00:05:06.210\nSo the legacy model is if you want to\nintegrate some external service with\n\n115\n00:05:06.210 --> 00:05:10.560\na Cisco router or switch,\nCisco has to put support for it in there.\n\n116\n00:05:10.560 --> 00:05:14.710\nThey've got to bake support for\nthat into the IOS so that it'll work.\n\n117\n00:05:14.710 --> 00:05:18.477\nAnd they've done that with a number of\ndifferent protocols and systems and\n\n118\n00:05:18.477 --> 00:05:21.008\nwhatever it is that we need\nto be able to manage it.\n\n119\n00:05:21.008 --> 00:05:25.120\nSo, for example,\nwe did the network monitoring episode.\n\n120\n00:05:25.120 --> 00:05:28.625\nIf you watched the monitoring episode,\nI talk about SNMP.\n\n121\n00:05:28.625 --> 00:05:32.565\nAnd with SNMP,\nthe simple network management protocol.\n\n122\n00:05:32.565 --> 00:05:33.859\nI'll get it right this time.\nI think I said monitoring in\n\n123\n00:05:33.859 --> 00:05:34.554\nthe last episode.\n\n124\n00:05:34.554 --> 00:05:39.008\nBut with SNMP, we can connect and\ncollect information about our routers and\n\n125\n00:05:39.008 --> 00:05:39.710\nswitches.\n\n126\n00:05:39.710 --> 00:05:43.447\nAnd bring it into a nice GUI dashboard or\nwhatever and see the help and everything,\n\n127\n00:05:43.447 --> 00:05:44.810\nit's great.\n\n128\n00:05:44.810 --> 00:05:49.560\nAnd we can do that because Cisco\nintegrated SNMP into the IOS.\n\n129\n00:05:49.560 --> 00:05:51.440\nSame thing for\n\n130\n00:05:51.440 --> 00:05:55.330\nsome of the other technologies\nthat report back like NetFlow.\n\n131\n00:05:55.330 --> 00:05:57.030\nNetFlow is integrated into the IOS.\n\n132\n00:05:57.030 --> 00:05:58.900\nHelps that Cisco created NetFlow, I guess.\n\n133\n00:05:58.900 --> 00:06:01.150\nBut they chose to put\nthat support in there.\n\n134\n00:06:01.150 --> 00:06:03.140\nThere's other services that are in there,\ntoo.\n\n135\n00:06:03.140 --> 00:06:06.140\nLike when I do file transfers\nfrom a Cisco router or switch.\n\n136\n00:06:06.140 --> 00:06:09.654\nThat I can do FTP, SSH, and so on.\n\n137\n00:06:09.654 --> 00:06:13.230\nOr not SSH for files, it would be SCP,\nsecure copy protocol.\n\n138\n00:06:13.230 --> 00:06:14.430\nWell, here let me just show you.\n\n139\n00:06:14.430 --> 00:06:16.415\nI'm gonna take this switch that I've got.\n\n140\n00:06:16.415 --> 00:06:19.550\nInstead of me just trying to remember\nthem all off the top of my head.\n\n141\n00:06:19.550 --> 00:06:20.313\nWe can see it on an actual device.\n\n142\n00:06:20.313 --> 00:06:21.541\nIf I do copy ?,\n\n143\n00:06:21.541 --> 00:06:26.845\nI can see all the file transfer\nprotocols that are supported here.\n\n144\n00:06:26.845 --> 00:06:30.509\nAnd as you look down the list,\nyou'll see ftp, http, https,\n\n145\n00:06:30.509 --> 00:06:32.321\nscp for secure copy protocol.\n\n146\n00:06:32.321 --> 00:06:33.453\nWe've got tftp,\n\n147\n00:06:33.453 --> 00:06:38.530\neven xmodem and ymodem, which\nare something you really don't wanna use.\n\n148\n00:06:38.530 --> 00:06:41.922\nBut this is all stuff that\nCisco's integrated in.\n\n149\n00:06:41.922 --> 00:06:44.530\nAnd that's the key aspect\nof the legacy model,\n\n150\n00:06:44.530 --> 00:06:47.970\nis that you basically have to wait for\nCisco to approve it for you.\n\n151\n00:06:47.970 --> 00:06:51.220\nAnd that creates some challenges\nthat get addressed in the new model,\n\n152\n00:06:51.220 --> 00:06:52.550\nin the SDN model.\n\n153\n00:06:52.550 --> 00:06:56.420\nBut before I jump into SDN, let me just\nshow you the legacy model in action.\n\n154\n00:06:56.420 --> 00:06:59.993\nAnd there's no better way to see it than\nwhat I think is one of the most useful\n\n155\n00:06:59.993 --> 00:07:01.034\nexternal services.\n\n156\n00:07:01.034 --> 00:07:02.160\nAnd that's AAA.\n\n157\n00:07:02.160 --> 00:07:04.127\nWe've talked about AAA once or\ntwice throughout this series.\n\n158\n00:07:04.127 --> 00:07:09.230\nI'm talking about authentication,\nauthorization, and accounting.\n\n159\n00:07:10.290 --> 00:07:12.910\nAuthentication, when somebody logs in,\n\n160\n00:07:12.910 --> 00:07:15.090\nhow do we verify they\nare who they say they are?\n\n161\n00:07:15.090 --> 00:07:19.040\nWell, when you log into a Cisco router,\nhow do you authenticate?\n\n162\n00:07:19.040 --> 00:07:22.720\nWell, if it's the old model,\nyou just use a password, and that's it.\n\n163\n00:07:22.720 --> 00:07:24.480\nYou have a login password.\n\n164\n00:07:24.480 --> 00:07:26.820\nIf it's the new model,\nyou have a username and a password.\n\n165\n00:07:26.820 --> 00:07:28.190\nSo if you have that username and password,\n\n166\n00:07:28.190 --> 00:07:29.994\nyou've just authenticated\nyou are who you say you are.\n\n167\n00:07:29.994 --> 00:07:35.460\nWell, after that, how does the router\nknow what you're able to do?\n\n168\n00:07:35.460 --> 00:07:36.567\nWhat are you authorized to do?\n\n169\n00:07:36.567 --> 00:07:40.831\nAnd the authorization comes from,\nwell, if I create a user account,\n\n170\n00:07:40.831 --> 00:07:42.359\nI set a privilege level.\n\n171\n00:07:42.359 --> 00:07:44.440\nAnd that privilege level\ndetermines my access.\n\n172\n00:07:44.440 --> 00:07:46.590\nWe saw that in an earlier episode.\n\n173\n00:07:46.590 --> 00:07:52.410\nAnd then, once I'm connected,\nhow do I keep track of who connected when?\n\n174\n00:07:52.410 --> 00:07:53.252\nAnd how long they were connected?\n\n175\n00:07:53.252 --> 00:07:54.921\nAnd what they did while\nthey were connected?\n\n176\n00:07:54.921 --> 00:07:55.433\nThat's accounting.\n\n177\n00:07:55.433 --> 00:07:56.709\nThat's the third piece of AAA.\n\n178\n00:07:56.709 --> 00:08:01.700\nAnd built into the router We actually\nhave authentication, authorization,\n\n179\n00:08:01.700 --> 00:08:03.371\nand accounting, right?\n\n180\n00:08:03.371 --> 00:08:07.160\nLet me just show you if I wanna use what's\nbuilt into this switch for example.\n\n181\n00:08:07.160 --> 00:08:08.480\nI could jump into my configuration.\n\n182\n00:08:08.480 --> 00:08:15.530\nI could say username admin, so I'm gonna\ncreate an account for the admin user.\n\n183\n00:08:15.530 --> 00:08:20.196\nAnd I can say privilege level 15.\n\n184\n00:08:20.196 --> 00:08:23.560\nSo now there's gonna be a user\naccount named magnum and\n\n185\n00:08:23.560 --> 00:08:25.970\nthey'll authorize at privilege level 15.\n\n186\n00:08:25.970 --> 00:08:28.670\nThey can do whatever they want\nonce they're in the system.\n\n187\n00:08:28.670 --> 00:08:30.810\nThey have full access, right?\n\n188\n00:08:30.810 --> 00:08:32.369\nAnd then I can set their password.\n\n189\n00:08:32.369 --> 00:08:35.619\nI'll do secret cisco123, right?\n\n190\n00:08:35.619 --> 00:08:39.692\nWhat I just did right there in that\nline that's authentication and\n\n191\n00:08:39.692 --> 00:08:43.650\nauthorization, and\nwhere does that user get stored?\n\n192\n00:08:43.650 --> 00:08:46.290\nIn the local user database right\nhere on the Cisco routers,\n\n193\n00:08:46.290 --> 00:08:47.740\nactually in the config, right?\n\n194\n00:08:47.740 --> 00:08:49.280\nThat's what we saw earlier.\n\n195\n00:08:49.280 --> 00:08:55.120\nNow what you just saw me do was create\na user account right here on one switch,\n\n196\n00:08:55.120 --> 00:08:56.990\nand I just did it by hand.\n\n197\n00:08:56.990 --> 00:08:59.543\nAnd I'm gonna do a triple a new model\njust to make sure I'm doing a username\n\n198\n00:08:59.543 --> 00:09:00.510\nand a password.\n\n199\n00:09:00.510 --> 00:09:02.760\nSo I did it by hand, that was easy, right?\n\n200\n00:09:03.830 --> 00:09:05.890\nWell, what if I have 1,000 routers?\n\n201\n00:09:05.890 --> 00:09:09.870\nI got to connect to each one and\nI've got to create this, right?\n\n202\n00:09:09.870 --> 00:09:11.510\nWell, if I have to connect\nto 1,000 routers and\n\n203\n00:09:11.510 --> 00:09:13.770\ndo it the odds are I'm gonna create\nthe same user name and the same password.\n\n204\n00:09:13.770 --> 00:09:15.399\nWhat if that password gets compromised?\n\n205\n00:09:16.420 --> 00:09:17.030\nNow I've gotta go and\n\n206\n00:09:17.030 --> 00:09:21.610\nreset it on a thousand devices and\nthat's not something I wanna do.\n\n207\n00:09:21.610 --> 00:09:26.900\nWhat if I have a team of\nten network admins and\n\n208\n00:09:26.900 --> 00:09:30.510\nI need them all to have access so I share\nthis user name and password with them.\n\n209\n00:09:30.510 --> 00:09:33.330\nAnd then I let go one of those\nnetwork admins maybe they go and\n\n210\n00:09:33.330 --> 00:09:37.760\nget another job somewhere else or\nthey cause a scene in the office,\n\n211\n00:09:37.760 --> 00:09:38.980\nyou gotta fire them or whatever it is.\n\n212\n00:09:38.980 --> 00:09:42.140\nMaybe they just work with Wes' work ethic\nand then you gotta cut them, right?\n\n213\n00:09:42.140 --> 00:09:45.090\nSo they leave,\nI've gotta change that password.\n\n214\n00:09:45.090 --> 00:09:48.710\nBut all the network admins are using\nthe same username and password.\n\n215\n00:09:48.710 --> 00:09:51.810\nSo now, not only do i have to change it\non 1,000 devices, I've gotta reeducate my\n\n216\n00:09:51.810 --> 00:09:55.330\nteam to say let's go ahead and\nchange over this other account.\n\n217\n00:09:55.330 --> 00:09:56.840\nSo the user account,\n\n218\n00:09:56.840 --> 00:10:00.790\nthe authentication and authorization\nbuilt into the Cisco router is not very\n\n219\n00:10:00.790 --> 00:10:06.260\nflexible in a large environment, so\nI can use an external authentication.\n\n220\n00:10:06.260 --> 00:10:07.160\nAnd Cisco routers actually\n\n221\n00:10:07.160 --> 00:10:12.110\nsupport two different types of external\nauthentication, there's RADIUS and TACACS.\n\n222\n00:10:12.110 --> 00:10:16.260\nRADIUS is a very old dial-up\nprotocol that is an open standard.\n\n223\n00:10:16.260 --> 00:10:21.410\nIt's supported by darn near everybody and\nthat means it's very, very commonly used.\n\n224\n00:10:21.410 --> 00:10:23.980\nEven today, even though\nthe protocol's over 30 years old,\n\n225\n00:10:23.980 --> 00:10:25.840\nit is still very widely used.\n\n226\n00:10:25.840 --> 00:10:30.818\nAnd what it does is it allows systems to\nauthenticate against an external user\n\n227\n00:10:30.818 --> 00:10:31.590\ndatabase.\n\n228\n00:10:31.590 --> 00:10:35.830\nAnd just as an example,\nit could be an RSA security appliance.\n\n229\n00:10:35.830 --> 00:10:37.710\nSo you can have those little RSA tokens.\n\n230\n00:10:37.710 --> 00:10:40.000\nI did that at a bank that I worked for.\n\n231\n00:10:40.000 --> 00:10:42.750\nIt could be\nthe Microsoft Active Directory, so\n\n232\n00:10:42.750 --> 00:10:45.200\npeople could just use their\nWindows accounts to log in.\n\n233\n00:10:45.200 --> 00:10:46.490\nThat's kinda nice.\n\n234\n00:10:46.490 --> 00:10:51.280\nWhen you hire a new network admin, are you\ngonna give them a Windows login for\n\n235\n00:10:51.280 --> 00:10:54.050\nyour regular network, and then you're\ngonna give them a Cisco login and\n\n236\n00:10:54.050 --> 00:10:54.970\nall these different logins.\n\n237\n00:10:54.970 --> 00:10:57.240\nWouldn't it be nice if\nthey just have one login?\n\n238\n00:10:57.240 --> 00:10:58.470\nYou can do that with a RADIUS.\n\n239\n00:10:58.470 --> 00:11:00.370\nWe can point it at the Active Directory.\n\n240\n00:11:00.370 --> 00:11:05.100\nThe best part there is every network\nadmin can have their own user account.\n\n241\n00:11:05.100 --> 00:11:09.320\nAnd if I terminate a network admin,\nI just disable their account.\n\n242\n00:11:09.320 --> 00:11:10.060\nThat one account.\n\n243\n00:11:10.060 --> 00:11:11.970\nEverybody else still works like normal.\n\n244\n00:11:11.970 --> 00:11:15.010\nOr if a password gets compromised,\nits just one account.\n\n245\n00:11:15.010 --> 00:11:18.410\nI can disable that account and\nthe other ones still work like normal.\n\n246\n00:11:18.410 --> 00:11:21.300\nThe other thing though that's really\ncool is if you're using like the active\n\n247\n00:11:21.300 --> 00:11:24.650\ndirectory if somebody's\npassword we want it to expire.\n\n248\n00:11:24.650 --> 00:11:27.270\nI don't want people to have\npasswords over 30 days old.\n\n249\n00:11:27.270 --> 00:11:31.300\nYou can't do that on a Cisco router\nwe can't set an age on the passwords.\n\n250\n00:11:31.300 --> 00:11:33.440\nYou can on the firewalls but\nnot on the routers.\n\n251\n00:11:33.440 --> 00:11:36.500\nBut if I'm tied to the active directory\nI can set the age limit over on the AD.\n\n252\n00:11:36.500 --> 00:11:38.930\nAnd when they login to Windows\nthat will reset their password.\n\n253\n00:11:38.930 --> 00:11:42.510\nWhen they login to the router or switch,\nthey're using their Windows account so\n\n254\n00:11:42.510 --> 00:11:45.200\nnow we've got that\nenhanced authentication.\n\n255\n00:11:45.200 --> 00:11:48.710\nSo using that external user\ndatabase gives us a lot more power,\n\n256\n00:11:48.710 --> 00:11:50.420\na lot easier manageability.\n\n257\n00:11:50.420 --> 00:11:54.510\nGives us the ability to create groups and\nput people in groups, that's kinda nice.\n\n258\n00:11:54.510 --> 00:11:56.500\nAnd that's actually how I've\ngot this environment set up.\n\n259\n00:11:56.500 --> 00:11:59.680\nI've got an Active Directory\nin the background and\n\n260\n00:11:59.680 --> 00:12:02.650\nthere's a Windows group called net admins.\n\n261\n00:12:02.650 --> 00:12:07.510\nAnd if there's any user in the net admins\ngroup, I wanna allow them to log into\n\n262\n00:12:07.510 --> 00:12:12.920\nthis router, and have privilege level 15,\nto be able to get to that level.\n\n263\n00:12:12.920 --> 00:12:15.300\nWell, take my account for example.\n\n264\n00:12:15.300 --> 00:12:18.300\nSo I've got a Windows\naccount called dpezet.\n\n265\n00:12:18.300 --> 00:12:22.160\nAnd if I look at my running config, and\n\n266\n00:12:22.160 --> 00:12:27.530\nI search for dpezet,\nI'm not in there, right?\n\n267\n00:12:27.530 --> 00:12:29.280\nIf I take a look at\nthat running config and\n\n268\n00:12:29.280 --> 00:12:33.930\nI look for user names, all I see is that\nadmin account that I just created, right?\n\n269\n00:12:33.930 --> 00:12:37.263\nSo I don't have a user account\nright here in the system but\n\n270\n00:12:37.263 --> 00:12:39.977\nI can tell it to use\nan external user database.\n\n271\n00:12:39.977 --> 00:12:44.840\nAnd when I do that, it'll be able to reach\nout, and use that other system, right?\n\n272\n00:12:44.840 --> 00:12:46.163\nThat other system will be able to get it.\n\n273\n00:12:46.163 --> 00:12:50.360\nSo if I get it set up.\n\n274\n00:12:50.360 --> 00:12:52.030\nSo let me show you how that works.\n\n275\n00:12:52.030 --> 00:12:54.390\nI'm gonna jump into my configuration and\n\n276\n00:12:54.390 --> 00:12:56.150\nit's just on a handful\nof commands to do this.\n\n277\n00:12:56.150 --> 00:13:00.090\nSo first off I have to be in AAA new model\nwhich I already am so that's fine and\n\n278\n00:13:00.090 --> 00:13:02.260\nI need to support a username and\na password.\n\n279\n00:13:02.260 --> 00:13:06.030\nThen I need to define a RADIUS or\na TACACS server.\n\n280\n00:13:06.030 --> 00:13:09.280\nNow if you've never heard those terms\nbefore, RADIUS is an open standard\n\n281\n00:13:09.280 --> 00:13:12.120\nit's supported by darn near everybody and\nit's a really good protocol.\n\n282\n00:13:12.120 --> 00:13:13.096\nThat's the one we normally use.\n\n283\n00:13:13.096 --> 00:13:18.385\nTACACS, it's TACACS+, T-A-C-A-C-S plus.\n\n284\n00:13:18.385 --> 00:13:23.770\nSo terminal access control\naccess control server plus.\n\n285\n00:13:23.770 --> 00:13:25.940\nWay back in the day it was just TACACS and\n\n286\n00:13:25.940 --> 00:13:30.680\nit was an open standard but it pretty\nmuch got abandoned by the ISP industry.\n\n287\n00:13:30.680 --> 00:13:34.490\nIt just really didn't get used and\nmost people gave up on it.\n\n288\n00:13:34.490 --> 00:13:35.180\nExcept for Cisco.\n\n289\n00:13:35.180 --> 00:13:35.840\nCisco liked it.\n\n290\n00:13:35.840 --> 00:13:39.580\nThey kept it around and they modified\nit and they improved it and they did so\n\n291\n00:13:39.580 --> 00:13:42.570\nmuch to it that it no longer\nconforms to the standard.\n\n292\n00:13:42.570 --> 00:13:45.820\nAnd so now they call it TACACS+\nto signify that it's changed and\n\n293\n00:13:45.820 --> 00:13:47.480\nit's not compatible with the old TACACS.\n\n294\n00:13:47.480 --> 00:13:50.120\nIt's like really significantly different.\n\n295\n00:13:50.120 --> 00:13:53.570\nThe reason they kept it around is\nbecause of a slight difference\n\n296\n00:13:53.570 --> 00:13:55.580\nin TACACS over RADIUS.\n\n297\n00:13:55.580 --> 00:13:57.920\nRemember we were talking about AAA here,\nright?\n\n298\n00:13:57.920 --> 00:14:02.500\nAuthentication, authorization and\naccounting, well, RADIUS and\n\n299\n00:14:02.500 --> 00:14:05.230\nTACACS have to provide all three roles.\n\n300\n00:14:05.230 --> 00:14:09.700\nAnd they each have their strengths and\ntheir weaknesses, RADIUS.\n\n301\n00:14:09.700 --> 00:14:11.490\nRADIUS does great authentication.\n\n302\n00:14:11.490 --> 00:14:14.300\nWe can validate username and\na password, great.\n\n303\n00:14:14.300 --> 00:14:17.520\nIt does okay with authorization.\n\n304\n00:14:17.520 --> 00:14:20.280\nOn the authorization side,\nit can say, yeah,\n\n305\n00:14:20.280 --> 00:14:23.750\nthat person should be privilege level\n15 or they can privilege level one.\n\n306\n00:14:23.750 --> 00:14:24.540\nBut that's about it.\n\n307\n00:14:24.540 --> 00:14:25.650\nIt's not very granular.\n\n308\n00:14:25.650 --> 00:14:29.250\nWe can't say they can run this one\ncommand but not this other command.\n\n309\n00:14:29.250 --> 00:14:31.280\nIt's just really broad.\n\n310\n00:14:31.280 --> 00:14:34.040\nSo it's not the greatest at authorization.\n\n311\n00:14:34.040 --> 00:14:36.960\nAnd then accounting,\nRADIUS is awesome at accounting.\n\n312\n00:14:36.960 --> 00:14:38.770\nIt can log everything that you do,\nevery command you issue.\n\n313\n00:14:38.770 --> 00:14:41.530\nIt can do all sorts of crazy stuff,\nRADIUS is great for that.\n\n314\n00:14:41.530 --> 00:14:47.835\nSo RADIUS is good at authentication and\naccounting, not so much authorization.\n\n315\n00:14:47.835 --> 00:14:53.270\nTACACS+ is great for authentication,\nit'll validate username and password.\n\n316\n00:14:53.270 --> 00:14:59.340\nIt is amazing authorization, it can\ngo down to the individual command and\n\n317\n00:14:59.340 --> 00:15:01.260\nso for example,\nI could create an account for Wes and\n\n318\n00:15:01.260 --> 00:15:05.490\nI can say Wes is allowed to use ping,\nbut not trace route.\n\n319\n00:15:05.490 --> 00:15:08.160\nHe's allowed to use ping to\nthis one particular host but\n\n320\n00:15:08.160 --> 00:15:09.480\nnot ping to another host.\n\n321\n00:15:09.480 --> 00:15:12.740\nYou can get super granular with\nwhat he's allowed to do and\n\n322\n00:15:12.740 --> 00:15:13.920\nwhat he's not allowed to do.\n\n323\n00:15:13.920 --> 00:15:17.410\nHe's allowed to run this one command\nonly between 1:00 PM and 2:00 PM.\n\n324\n00:15:17.410 --> 00:15:20.828\nYou can really do some crazy\nstuff with TACACS pretty amazing.\n\n325\n00:15:20.828 --> 00:15:23.930\nBut on the accounting side,\nyeah, it's pretty bad.\n\n326\n00:15:23.930 --> 00:15:26.220\nIt'll record that you've logged in and\nthat's it.\n\n327\n00:15:26.220 --> 00:15:28.010\nIt doesn't even record that\nit logged out in most cases.\n\n328\n00:15:28.010 --> 00:15:32.000\nSo it's really not that\neffective at accounting.\n\n329\n00:15:32.000 --> 00:15:34.810\nSo they each have their strengths and\nweaknesses.\n\n330\n00:15:34.810 --> 00:15:36.960\nAnd so Cisco kept TACACS around.\n\n331\n00:15:36.960 --> 00:15:39.900\nBecause what they do is they have\na commercial product called ACS\n\n332\n00:15:39.900 --> 00:15:42.210\nthe Access Control Server.\n\n333\n00:15:42.210 --> 00:15:45.820\nAnd what ACS does is it\ncombines RADIUS and TACACS.\n\n334\n00:15:45.820 --> 00:15:48.360\nIt uses RADIUS for\nauthentication and accounting and\n\n335\n00:15:48.360 --> 00:15:49.860\nit uses TACACS for authorization.\n\n336\n00:15:49.860 --> 00:15:52.630\nAnd by combing them both it\ngives the best of both worlds.\n\n337\n00:15:52.630 --> 00:15:54.972\nThat's what they do in\ntheir proprietary product.\n\n338\n00:15:54.972 --> 00:15:57.770\nBut for the rest of us out there we're\nusually gonna pick one or the other.\n\n339\n00:15:57.770 --> 00:16:00.088\nI said I was gonna authenticate\nagainst the Active Directory.\n\n340\n00:16:00.088 --> 00:16:02.650\nWell, Microsoft only supports Radius.\n\n341\n00:16:02.650 --> 00:16:03.285\nThey don't support TACACS.\n\n342\n00:16:03.285 --> 00:16:04.268\nSo I can't use TACACS.\n\n343\n00:16:04.268 --> 00:16:06.860\nI'm gonna have to use Radius\nto get this setup, right?\n\n344\n00:16:06.860 --> 00:16:08.800\nSo let me show you how it works,\nwe'll jump in and we'll do the config.\n\n345\n00:16:08.800 --> 00:16:12.560\nNow, the switch I was using a moment ago,\nI noticed kind of while\n\n346\n00:16:12.560 --> 00:16:17.300\nI was sitting here that it's\nactually running the 12.2 iOS and\n\n347\n00:16:17.300 --> 00:16:21.510\nRadius was configured different\non 12.2 then it is on 15.1.\n\n348\n00:16:21.510 --> 00:16:23.390\nThe commands are a little different.\n\n349\n00:16:23.390 --> 00:16:27.270\nOn the exam it's 15,\nit's the 15 point iOS train.\n\n350\n00:16:27.270 --> 00:16:30.520\nSo I'm gonna switch over to a router\ninstead that's running the 15 iOS.\n\n351\n00:16:30.520 --> 00:16:35.260\nAnd actually, let me just verify real\nquick that it is indeed running the 15.\n\n352\n00:16:35.260 --> 00:16:36.950\nSo I'm gonna do a quick show version.\n\n353\n00:16:36.950 --> 00:16:40.620\nI wanna make sure that we configure this\nthe same way that it is done on the exam.\n\n354\n00:16:40.620 --> 00:16:41.630\nSo yeah, this one's running 15.2.\n\n355\n00:16:41.630 --> 00:16:43.557\nThat'll work out perfect.\n\n356\n00:16:43.557 --> 00:16:48.640\nAll right, so what I'm gonna do is,\nfirst off, let me just show you guys,\n\n357\n00:16:48.640 --> 00:16:53.730\nI'm gonna do a quick search for\nusernames on this system.\n\n358\n00:16:53.730 --> 00:16:56.050\nSo I've got that admin account and\nthat's it.\n\n359\n00:16:56.050 --> 00:16:58.690\nSo I don't have a dpezet account here.\n\n360\n00:16:58.690 --> 00:17:01.985\nThat exists over in the Active Directory\nbut it doesn't exist on this router.\n\n361\n00:17:01.985 --> 00:17:04.115\nSo right now if I try to\nlog into this router,\n\n362\n00:17:04.115 --> 00:17:06.280\nI'm not gonna be able to get into it,\nokay?\n\n363\n00:17:06.280 --> 00:17:12.676\nI could test that real quick, let me\nmake sure I got triple A new-model and\n\n364\n00:17:12.676 --> 00:17:17.161\nI will do a,\nI'm going to cheat a little bit and\n\n365\n00:17:17.161 --> 00:17:22.090\njust get SSH up and running really fast\nwhich apparently it's already set up for.\n\n366\n00:17:22.090 --> 00:17:26.110\nAll right, so\nthis router is set up for SSH.\n\n367\n00:17:26.110 --> 00:17:27.830\nAnd if I jump back over to\nthat other switch I was on.\n\n368\n00:17:27.830 --> 00:17:30.320\nLet me just test out.\n\n369\n00:17:30.320 --> 00:17:35.430\nI'm gonna try and\nssh into that router, right?\n\n370\n00:17:35.430 --> 00:17:38.635\nNow I'm gonna try and\nlog in as admin first,\n\n371\n00:17:38.635 --> 00:17:41.852\nso let me make sure\nthe login is set to admin.\n\n372\n00:17:41.852 --> 00:17:44.880\nAnd I'll punch in the password.\n\n373\n00:17:44.880 --> 00:17:46.970\nAnd I'm able to get in, right?\n\n374\n00:17:46.970 --> 00:17:52.710\nSo if I do a show user or\nusers, there we go.\n\n375\n00:17:52.710 --> 00:17:55.710\nI can see that I'm logged in and\nI'm logged in as admin, okay?\n\n376\n00:17:55.710 --> 00:17:58.126\nNow, I'm gonna try and\nlog in as dpezet, right?\n\n377\n00:17:58.126 --> 00:18:02.040\nMy dpezet account that exists in the\nActive Directory and it doesn't exist on\n\n378\n00:18:02.040 --> 00:18:05.240\nthe router, so when I try and\nconnect, that account doesn't exist.\n\n379\n00:18:05.240 --> 00:18:06.959\nI'm going to punch in my password and\n\n380\n00:18:06.959 --> 00:18:10.350\nit's going to fail because the user\naccount just isn't there, right?\n\n381\n00:18:10.350 --> 00:18:12.930\nSo I just get the password prompt\nagain and that's that, right?\n\n382\n00:18:12.930 --> 00:18:17.751\nSo I need to tell that router,\nstop looking at your own database and\n\n383\n00:18:17.751 --> 00:18:19.810\ninstead look at a radius server.\n\n384\n00:18:19.810 --> 00:18:20.990\nAn external service.\n\n385\n00:18:22.000 --> 00:18:26.340\nI'm going to jump back over to that\nrouter and we'll get that set up.\n\n386\n00:18:26.340 --> 00:18:28.900\nAll right, the commands for\nit, it's really not that bad.\n\n387\n00:18:28.900 --> 00:18:30.270\nSome of the commands are really long.\n\n388\n00:18:30.270 --> 00:18:32.990\nBut the first thing I need to do is I\nneed to tell it about a radius server.\n\n389\n00:18:32.990 --> 00:18:36.680\nSo I'm gonna come in here and\nI'll just say, radius server.\n\n390\n00:18:36.680 --> 00:18:38.190\nAnd I need to give it a nickname.\n\n391\n00:18:38.190 --> 00:18:39.170\nSome name I recognize.\n\n392\n00:18:39.170 --> 00:18:41.970\nSo it would normally be\nthe host name of the server.\n\n393\n00:18:41.970 --> 00:18:45.390\nI'll just call mine aaaerver1.\n\n394\n00:18:45.390 --> 00:18:47.180\nYou probably want more than one server.\n\n395\n00:18:47.180 --> 00:18:49.360\nBecause what happens if\nyour radius server fails?\n\n396\n00:18:49.360 --> 00:18:50.520\nNow you can't authenticate, right?\n\n397\n00:18:50.520 --> 00:18:51.500\nSo it's kind of important.\n\n398\n00:18:51.500 --> 00:18:53.090\nYou usually wanna have more than one.\n\n399\n00:18:53.090 --> 00:18:55.020\nBut I'll just define one for now.\n\n400\n00:18:55.020 --> 00:19:01.260\nAnd so I'm gonna say address ipv4 and\nI'll point it at my radius server.\n\n401\n00:19:01.260 --> 00:19:03.560\nOkay, so\nthat's my radius server's IP address.\n\n402\n00:19:03.560 --> 00:19:07.970\nWhen you talk to a radius server,\nyou have to hand off a shared secret, so\n\n403\n00:19:07.970 --> 00:19:09.530\nI'm gonna set my shared secret.\n\n404\n00:19:09.530 --> 00:19:11.510\nThis is defined on the radius server.\n\n405\n00:19:11.510 --> 00:19:14.020\nAny radius client that\ntries to authenticate\n\n406\n00:19:14.020 --> 00:19:16.670\nhas to have a secure\nconnection to the server, so\n\n407\n00:19:16.670 --> 00:19:19.550\nthat's what this pre-shared key is doing,\nis creating that secured connection.\n\n408\n00:19:19.550 --> 00:19:22.110\nAnd then we can send credentials\nover it and it's secure, right?\n\n409\n00:19:22.110 --> 00:19:23.380\nSo that's why we gotta specify that.\n\n410\n00:19:24.460 --> 00:19:27.940\nAll right, now if I had more radius\nservers, I would just come in here and\n\n411\n00:19:27.940 --> 00:19:28.800\ndefine them, right?\n\n412\n00:19:28.800 --> 00:19:33.811\nSo I could say radius server\naaaserver 2 and specify that.\n\n413\n00:19:33.811 --> 00:19:38.860\nI don't actually have a second one in my\nlab but just for the sake of of doing it.\n\n414\n00:19:38.860 --> 00:19:43.240\nI can define a second one,\nwhoops, if I get my syntax right.\n\n415\n00:19:43.240 --> 00:19:46.230\nAnd so you would just define\nwhatever servers that you had and\n\n416\n00:19:46.230 --> 00:19:49.290\nif they had the same key or a different\nkey you would specify all that.\n\n417\n00:19:49.290 --> 00:19:53.230\nAll right, so\nI've defined two radius servers.\n\n418\n00:19:53.230 --> 00:19:57.140\nNow if you're going for redundancy,\nyou wanna group them together, right?\n\n419\n00:19:57.140 --> 00:20:00.010\nGroup them together so that if one fails\nit goes, flips over to the other one.\n\n420\n00:20:00.010 --> 00:20:03.750\nIf I don't group them together, I'll use\none and if it fails, I give up, right?\n\n421\n00:20:03.750 --> 00:20:05.670\nSo I'm gonna create a group.\n\n422\n00:20:05.670 --> 00:20:09.153\nAnd I'll create a triple a group,\n\n423\n00:20:09.153 --> 00:20:14.960\nserver radius and I'm just gonna tell it,\nthen I'm gonna call it itprotv-radius,\n\n424\n00:20:14.960 --> 00:20:17.990\nright, that's the name\nI'm giving this group.\n\n425\n00:20:17.990 --> 00:20:22.622\nAnd then inside of the group,\nI'll say server name aaaserver1 and\n\n426\n00:20:22.622 --> 00:20:27.020\nthen if I wanted,\nI would say server name aaaserver2, right?\n\n427\n00:20:28.140 --> 00:20:31.330\nTriple A server two doesn't exist, so if\nI put it in here, I'm gonna start getting\n\n428\n00:20:31.330 --> 00:20:33.900\nlog messages about it not connecting and\nit's gonna get angry at me.\n\n429\n00:20:33.900 --> 00:20:35.430\nSo I'm gonna leave that one off.\n\n430\n00:20:35.430 --> 00:20:37.848\nBut you would just enter in each of\nyour server names right here, right?\n\n431\n00:20:37.848 --> 00:20:41.426\nSo now they're all grouped together\ninto whatever you called this group and,\n\n432\n00:20:41.426 --> 00:20:45.980\nif you're doing TACAcS instead, it is the\nsame commands, except instead of radius,\n\n433\n00:20:45.980 --> 00:20:47.180\nyou would say tacacs.\n\n434\n00:20:47.180 --> 00:20:47.850\nThat's the simple difference.\n\n435\n00:20:50.200 --> 00:20:52.800\nAll right, so\nnow I've got a group created.\n\n436\n00:20:52.800 --> 00:20:56.010\nAll I need to do now is tell\nthe router to use the group.\n\n437\n00:20:56.010 --> 00:21:00.650\nAnd the way we do that is by\nmodifying triple a's authentication.\n\n438\n00:21:00.650 --> 00:21:05.950\nSo the default form of authentication for\nlogins is to look at the local database.\n\n439\n00:21:05.950 --> 00:21:07.670\nI'm gonna tell it that for\n\n440\n00:21:07.670 --> 00:21:13.010\ntriple a authentication login,\nI want the default to be a group instead.\n\n441\n00:21:13.010 --> 00:21:15.090\nAnd I'm gonna use my itprotv-radius group.\n\n442\n00:21:16.205 --> 00:21:17.740\nNow I could stop right here.\n\n443\n00:21:17.740 --> 00:21:21.470\nIf I stop right here, it's gonna work but\nwhat if the radius server fails?\n\n444\n00:21:22.740 --> 00:21:24.327\nI'm only looking at the radius server.\n\n445\n00:21:24.327 --> 00:21:26.820\nIf the radius server fails, I can't login.\n\n446\n00:21:26.820 --> 00:21:30.390\nSo as a backup,\nyou might wanna add local to the end.\n\n447\n00:21:30.390 --> 00:21:33.240\nAnd that says hey, if I can't get to\nthe radius server, I'll go ahead and\n\n448\n00:21:33.240 --> 00:21:34.460\nuse the local database.\n\n449\n00:21:34.460 --> 00:21:38.130\nBut I'll only use the local database\nIf the radius server is offline,\n\n450\n00:21:38.130 --> 00:21:39.660\njust as a backup, and\n\n451\n00:21:39.660 --> 00:21:43.440\nthen I would set a unique password on that\nadmin account for every single device.\n\n452\n00:21:43.440 --> 00:21:46.580\nA thousand devices, a thousand different\npasswords, and you don't hand those outs.\n\n453\n00:21:46.580 --> 00:21:48.060\nYou don't give those to network admins.\n\n454\n00:21:48.060 --> 00:21:49.210\nThose are the emergency passwords.\n\n455\n00:21:50.700 --> 00:21:52.450\nSo I'll go ahead and define that.\n\n456\n00:21:52.450 --> 00:21:54.160\nNow, that's authentication.\n\n457\n00:21:54.160 --> 00:21:58.200\nWe can do the same thing\ntor authorization, okay?\n\n458\n00:21:58.200 --> 00:22:02.450\nSo with authorization, when you login,\nyou get an exec prompt.\n\n459\n00:22:02.450 --> 00:22:05.910\nAnd I'm gonna come in and just say,\nwhen somebody gets an exec prompt,\n\n460\n00:22:05.910 --> 00:22:10.570\nI'm gonna look at itprotv-radius to\nfind out what they're authorized to do.\n\n461\n00:22:10.570 --> 00:22:12.830\nWhat privilege level\nare they going to get?\n\n462\n00:22:12.830 --> 00:22:14.120\nAnd so I'll specify that.\n\n463\n00:22:14.120 --> 00:22:16.110\nAnd I'll use the local database\nas a back up there, too.\n\n464\n00:22:17.340 --> 00:22:21.180\nAll right, so now my system knows\nwhen somebody goes to log in,\n\n465\n00:22:21.180 --> 00:22:23.700\ndon't look at the local database first,\nlook at radius first.\n\n466\n00:22:24.990 --> 00:22:27.570\nAnd the user account should\nexist over there, right?\n\n467\n00:22:27.570 --> 00:22:29.840\nAnd I've got radius up and\nrunning on a Windows Server,\n\n468\n00:22:29.840 --> 00:22:32.110\nthat's something we'd\ncover in a Windows show.\n\n469\n00:22:32.110 --> 00:22:36.330\nBut it doesn't matter what kind of radius\nserver it is, you get it set up and\n\n470\n00:22:36.330 --> 00:22:38.839\nthen the way we interact with it is\nright here, it's always the same.\n\n471\n00:22:40.600 --> 00:22:43.750\nSo, now my router's set up for\nthe radius authentication.\n\n472\n00:22:43.750 --> 00:22:45.020\nI've got my debugs turned on.\n\n473\n00:22:45.020 --> 00:22:48.030\nWe can jump over to another device,\nSSH in, and we should\n\n474\n00:22:48.030 --> 00:22:52.250\nbe able to see that authentication happen,\nassuming it works, right?\n\n475\n00:22:52.250 --> 00:22:54.740\nSo let's jump over, I'll just use\nthis other switch that I've got,\n\n476\n00:22:54.740 --> 00:22:56.320\nwhich I've timed out on.\n\n477\n00:22:56.320 --> 00:23:01.090\nSo let me get in here and\nI will do a quick SSH.\n\n478\n00:23:01.090 --> 00:23:03.850\nAnd I'm gonna log in as my dpezet account,\n\n479\n00:23:03.850 --> 00:23:06.100\nwhich we verified does\nnot exist on that router.\n\n480\n00:23:06.100 --> 00:23:07.160\nThere was an admin account.\n\n481\n00:23:07.160 --> 00:23:08.260\nAnd that's it.\n\n482\n00:23:08.260 --> 00:23:10.730\nAnd I'm gonna be point to that router.\n\n483\n00:23:10.730 --> 00:23:12.550\nAnd I'm gonna connect.\n\n484\n00:23:12.550 --> 00:23:14.210\nIt's gonna prompt me for my password.\n\n485\n00:23:14.210 --> 00:23:15.870\nI'll punch in my password.\n\n486\n00:23:17.120 --> 00:23:18.530\nAnd it logs me in, right?\n\n487\n00:23:18.530 --> 00:23:20.690\nIt logs me in and I'm connected.\n\n488\n00:23:20.690 --> 00:23:22.840\nI just sent username dpezet.\n\n489\n00:23:22.840 --> 00:23:28.700\nIf I do a show users, I can see that\nI'm logged in as dpezet, right?\n\n490\n00:23:28.700 --> 00:23:32.040\nBut if I do a show run and\n\n491\n00:23:32.040 --> 00:23:36.950\nI look at the list of usernames,\nthere's only admin.\n\n492\n00:23:36.950 --> 00:23:38.700\nThere's no dpezet, right?\n\n493\n00:23:38.700 --> 00:23:40.580\nIt came from somewhere else.\n\n494\n00:23:40.580 --> 00:23:42.540\n&gt;&gt; And\nthat's what I was going to say here.\n\n495\n00:23:42.540 --> 00:23:44.390\nSo now it's not using that local database.\n\n496\n00:23:44.390 --> 00:23:46.290\nIt's reaching out to\nthat radius server now.\n\n497\n00:23:46.290 --> 00:23:47.120\nIs that what we're seeing?\n\n498\n00:23:47.120 --> 00:23:50.410\n&gt;&gt; Yeah, absolutely, if I were to,\nlet me exit out of that.\n\n499\n00:23:50.410 --> 00:23:54.092\nIf I were to get out of that session and\nrepeat it and\n\n500\n00:23:54.092 --> 00:23:56.559\nsend the admin account, right?\n\n501\n00:23:56.559 --> 00:24:00.315\nNow, remember, the admin account,\nthat actually exists on that edge router,\n\n502\n00:24:00.315 --> 00:24:01.430\nwe've got it in there.\n\n503\n00:24:01.430 --> 00:24:04.866\nAnd so if I punched in those credentials\nto log in It should be looking at\n\n504\n00:24:04.866 --> 00:24:07.329\nthat local user database and\nfinding it, right?\n\n505\n00:24:07.329 --> 00:24:08.820\nWell, no.\n\n506\n00:24:08.820 --> 00:24:11.440\nIt uses radius first, and\n\n507\n00:24:11.440 --> 00:24:16.620\nonly if the radius server is offline will\nit then flip over to the local database.\n\n508\n00:24:16.620 --> 00:24:18.360\nSo it actually went to the radius server,\n\n509\n00:24:18.360 --> 00:24:21.470\nthe admin account doesn't exist on\nthe radius server, it just rejected me.\n\n510\n00:24:21.470 --> 00:24:24.050\n&gt;&gt; So the precedence, it's enforced.\n\n511\n00:24:24.050 --> 00:24:25.530\n&gt;&gt; Yeah.\n&gt;&gt; And you don't bypass it.\n\n512\n00:24:25.530 --> 00:24:28.420\n&gt;&gt; Absolutely, and that's important,\nbecause this should\n\n513\n00:24:28.420 --> 00:24:31.600\ntruly be a backup password not\nsomething we'd use on a regular basis.\n\n514\n00:24:31.600 --> 00:24:34.490\nNow, I left those debugs\nrunning on other routers.\n\n515\n00:24:34.490 --> 00:24:37.190\nLet me go back, and\nwe'll see exactly what happened.\n\n516\n00:24:37.190 --> 00:24:38.840\nRight?\nIt's kind of a lot.\n\n517\n00:24:38.840 --> 00:24:40.110\nSo, let me get back here.\n\n518\n00:24:40.110 --> 00:24:40.810\nAll right.\n\n519\n00:24:40.810 --> 00:24:43.230\nSo here we see the login session starting.\n\n520\n00:24:43.230 --> 00:24:46.250\nI've got a AAA/Bind and you'll see\nwhere it's asking for a password.\n\n521\n00:24:46.250 --> 00:24:49.080\nI set up my user name,\nnow it's asking for a password, and\n\n522\n00:24:49.080 --> 00:24:51.280\nthen it builds it all into a packet,\nright.\n\n523\n00:24:51.280 --> 00:24:55.420\nSo here we can see Sending\nan IPv4 Radius Packet, and\n\n524\n00:24:55.420 --> 00:24:57.740\nit's sending my user name, dpezet.\n\n525\n00:24:57.740 --> 00:25:01.690\nIt's sending my password, which it\ndoesn't display on the screen thankfully,\n\n526\n00:25:01.690 --> 00:25:03.940\nand then where it's going from and\ngoing to.\n\n527\n00:25:03.940 --> 00:25:06.080\nSo it sends all that, and\nit sends it to the other side, and\n\n528\n00:25:06.080 --> 00:25:09.350\nthe radius over on the other\nside does authentication first.\n\n529\n00:25:09.350 --> 00:25:10.720\nAnd that's this line right here.\n\n530\n00:25:10.720 --> 00:25:13.250\nWe just received authentication, and\n\n531\n00:25:13.250 --> 00:25:17.090\nsee how it's got Access-Accept,\naccess accepted.\n\n532\n00:25:17.090 --> 00:25:18.130\nIt says I'm good.\n\n533\n00:25:18.130 --> 00:25:21.730\nMy username and my password are good so\nthat's the authentication, and\n\n534\n00:25:21.730 --> 00:25:25.520\nthen right beneath it\nhere is my authorization.\n\n535\n00:25:25.520 --> 00:25:27.160\nWhat am I authorized to do?\n\n536\n00:25:27.160 --> 00:25:30.450\nWell I'm authorized to give a shell\nwith a privilege level of 15.\n\n537\n00:25:30.450 --> 00:25:33.290\nDid you notice when I SSH'd in\n\n538\n00:25:33.290 --> 00:25:37.230\nit immediately took me to\na privileged user prompt?\n\n539\n00:25:37.230 --> 00:25:39.560\nIt had a little pound\nsymbol in the command line.\n\n540\n00:25:39.560 --> 00:25:43.570\nIt didn't take me to a greater than\nprompt where I then had to type enable,\n\n541\n00:25:43.570 --> 00:25:47.413\nit automatically enabled me because\nit knew I was authorised for\n\n542\n00:25:47.413 --> 00:25:49.690\nprivilege level 15,\nthat was authorization right?\n\n543\n00:25:49.690 --> 00:25:53.176\nSo that all happened and it got logged,\nwhich is the accounting piece, so\n\n544\n00:25:53.176 --> 00:25:55.550\nall three parts are AAA happened right?\n\n545\n00:25:55.550 --> 00:26:00.760\nNow when exited out see how you know\nwe have this little process here and\n\n546\n00:26:00.760 --> 00:26:04.380\nit kinda ends when I exited out,\nand then I logged in as admin.\n\n547\n00:26:04.380 --> 00:26:09.050\nIt all starts over again, and I can see\nthat admin account, and it put that\n\n548\n00:26:09.050 --> 00:26:15.070\ntogether and sent it to the radius server,\nand the radius server said Access-Reject.\n\n549\n00:26:15.070 --> 00:26:18.630\nThe user account didn't exist on\nthe radius server, so it rejected it and\n\n550\n00:26:18.630 --> 00:26:19.690\nwe were kicked out.\n\n551\n00:26:19.690 --> 00:26:20.840\nIt prompt us for another password.\n\n552\n00:26:22.210 --> 00:26:24.840\nThe router actually doesn't know\nwhether the user exists or not, or\n\n553\n00:26:24.840 --> 00:26:25.730\nwhether the password is wrong.\n\n554\n00:26:25.730 --> 00:26:28.000\nIt doesn't know, so that is why\nit re-prompts for the password.\n\n555\n00:26:28.000 --> 00:26:29.700\nBut everything just works right there,\n\n556\n00:26:29.700 --> 00:26:32.580\nwe just authenticated\nit's external system, and\n\n557\n00:26:32.580 --> 00:26:37.020\nthis gives us a centralized user database,\na single user account that we can use.\n\n558\n00:26:37.020 --> 00:26:38.690\nIt makes life a lot easier,\neasier to manage.\n\n559\n00:26:38.690 --> 00:26:40.940\nYou could have thousands of routers.\n\n560\n00:26:40.940 --> 00:26:42.690\nYou could have 50 network admins.\n\n561\n00:26:42.690 --> 00:26:44.390\nYou hire a new network admin, and\n\n562\n00:26:44.390 --> 00:26:46.820\nyou just put their Windows account\nin the net admins group, and\n\n563\n00:26:46.820 --> 00:26:50.276\nnow they have access to all the routers\nand switches, and if they get fired or\n\n564\n00:26:50.276 --> 00:26:52.490\nwhatever, we just take them out of that\ngroup and now they don't have the access.\n\n565\n00:26:52.490 --> 00:26:56.230\nWe get that centralized granular\ncontrol that's really powerful.\n\n566\n00:26:56.230 --> 00:26:58.750\n&gt;&gt; Now Don,\nyou called this the legacy model, and\n\n567\n00:26:58.750 --> 00:27:01.680\nlet me play devil's advocate here for\njust a second.\n\n568\n00:27:01.680 --> 00:27:03.480\nIf it isn't broke, why fix it?\n\n569\n00:27:03.480 --> 00:27:06.260\nWhy would we go to something different?\n\n570\n00:27:06.260 --> 00:27:11.710\n&gt;&gt; All right so the problem boils down\nto really one word which is waiting.\n\n571\n00:27:13.180 --> 00:27:18.310\nI said earlier that with this model we\nhave to wait on Cisco to implement it.\n\n572\n00:27:18.310 --> 00:27:19.790\nSo if I want authentication,\n\n573\n00:27:19.790 --> 00:27:24.180\nthat's great, Cisco's already got it,\nbut what if I want something else?\n\n574\n00:27:24.180 --> 00:27:29.150\nWhat if I don't know, maybe we've got\nsome crazy new management software,\n\n575\n00:27:29.150 --> 00:27:32.140\nand we want that software to be able\nto control our routers and switches.\n\n576\n00:27:32.140 --> 00:27:35.930\nWe have to wait for Cisco to implement\nthat protocol to be able to manage it,\n\n577\n00:27:35.930 --> 00:27:38.510\nand maybe Cisco decides\nthey don't want to do it.\n\n578\n00:27:38.510 --> 00:27:40.170\nWe're just not gonna do that.\n\n579\n00:27:40.170 --> 00:27:43.110\nWell, now there's no waiting involved,\nthere's nothing,\n\n580\n00:27:43.110 --> 00:27:44.510\nyou just can't do it, right?\n\n581\n00:27:44.510 --> 00:27:48.300\nSo you're kind of at the whim\nof Cisco with the legacy model.\n\n582\n00:27:48.300 --> 00:27:52.550\nWith the new model though now\nthe power is in your control.\n\n583\n00:27:52.550 --> 00:27:56.570\nThe new model is what's called\nsoftware defined networking or SDN.\n\n584\n00:27:56.570 --> 00:27:59.280\nIt's a bit of a buzz word, you'll see it\non cloud websites all over the place,\n\n585\n00:27:59.280 --> 00:28:04.330\nSDN, and what SDN does Is it says,\nhey for now on Cisco's\n\n586\n00:28:04.330 --> 00:28:10.010\nnot gonna write protocol supports right\ninto the devices, into IOS anymore.\n\n587\n00:28:10.010 --> 00:28:14.220\nInstead they're gonna create\nwhat's called an API.\n\n588\n00:28:14.220 --> 00:28:20.140\nAn API is an application programming\ninterface and it's what software uses.\n\n589\n00:28:20.140 --> 00:28:25.270\nIt allows software to talk to a system and\ncommunicate, and so they created APIs.\n\n590\n00:28:25.270 --> 00:28:28.850\nThat when they do authentication,\nwhen they do interface configuration,\n\n591\n00:28:28.850 --> 00:28:31.680\nwhen they do reporting and all these\nother things, instead of writing if for\n\n592\n00:28:31.680 --> 00:28:36.550\na particular protocol,\nthey write it for their own API, and\n\n593\n00:28:36.550 --> 00:28:40.990\nany third party software manufacturer\ncan write software that doesn't talk to\n\n594\n00:28:40.990 --> 00:28:45.700\nrouters, that doesn't talk to switches or\nfirewalls, but talks to Cisco's API.\n\n595\n00:28:47.040 --> 00:28:49.620\nNow, once they talk to Cisco's API\nthat will convert it and\n\n596\n00:28:49.620 --> 00:28:52.010\nallow them to talk to the routers and\nswitches and so on.\n\n597\n00:28:52.010 --> 00:28:54.220\nSo we don't have to wait on Cisco anymore.\n\n598\n00:28:54.220 --> 00:28:57.790\nCisco exposes all the functionality\nthrough the API and\n\n599\n00:28:57.790 --> 00:29:01.520\nthe software vendors can create whatever\nkind of custom solution they want.\n\n600\n00:29:02.720 --> 00:29:06.120\nNow for the exam they don't\nexpect you to be a developer, and\n\n601\n00:29:06.120 --> 00:29:09.030\nthey're definitely not gonna test\nyou on third party software.\n\n602\n00:29:09.030 --> 00:29:15.910\nIt's a Cisco exam, but they do want you to\nunderstand how SDN works, and so I whipped\n\n603\n00:29:15.910 --> 00:29:19.340\nup a diagram to try and show it, cuz\nsometimes a picture is worth 1,000 words.\n\n604\n00:29:19.340 --> 00:29:23.470\nSo I whipped up this little diagram,\nand what it shows is\n\n605\n00:29:23.470 --> 00:29:27.830\nhow the whole SDN structure works, and\nthe key part is right here in the middle,\n\n606\n00:29:27.830 --> 00:29:30.760\nthis guy right here,\nthis is the service controller.\n\n607\n00:29:31.780 --> 00:29:35.770\nWith the service controller, this is the\npart that's really doing the true work,\n\n608\n00:29:35.770 --> 00:29:40.440\nand we've already seen a service\ncontroller in this show with the APIC-EM.\n\n609\n00:29:40.440 --> 00:29:44.055\nIf you watched our episode on\ntroubleshooting ACLs with the APIC-EM,\n\n610\n00:29:44.055 --> 00:29:46.340\nthe APIC is actually a service controller.\n\n611\n00:29:46.340 --> 00:29:50.850\nIt's an SDN service controller,\nand it is capable of talking to\n\n612\n00:29:50.850 --> 00:29:56.180\nthird party software, and capable of\ntalking to Cisco hardware and devices.\n\n613\n00:29:56.180 --> 00:30:00.180\nOkay, so it's a middleman, and\nthe APIC is just one example,\n\n614\n00:30:00.180 --> 00:30:03.530\nthere's also OpenSDN, there's a couple\nof other solutions that are out there.\n\n615\n00:30:03.530 --> 00:30:06.390\nThere's even some third party controllers\nthat are out there, but generally,\n\n616\n00:30:06.390 --> 00:30:09.230\nyou wanna stick with the Cisco one if\nyou're dealing with Cisco equipment.\n\n617\n00:30:09.230 --> 00:30:13.720\nBut there's other equipment, and you might\nhave HP procured stuff, and so the APIC\n\n618\n00:30:13.720 --> 00:30:17.030\ndoesn't work so well with HP stuff, so you\nmight need a third party solution there.\n\n619\n00:30:17.030 --> 00:30:22.460\nBut the service controller is what's\nproviding the API access and there's two\n\n620\n00:30:22.460 --> 00:30:27.530\nAPIs we need to know about, the Southbound\nAPI and the Northbound API, all right?\n\n621\n00:30:27.530 --> 00:30:31.050\nThe Southbound API is what\nallows the service controller\n\n622\n00:30:31.050 --> 00:30:32.660\nto talk to the hardware.\n\n623\n00:30:32.660 --> 00:30:37.910\nSo if you have the Cisco APIC,\nit's got Cisco's southbound API in it,\n\n624\n00:30:37.910 --> 00:30:42.190\nso it knows how to talk to Cisco ASAs,\nCisco catalyst switches,\n\n625\n00:30:42.190 --> 00:30:46.970\nCisco routers, the aeronet access points,\nit knows how to talk to all that stuff,\n\n626\n00:30:46.970 --> 00:30:49.400\nbecause Cisco's written\nthat in the southbound API.\n\n627\n00:30:50.770 --> 00:30:55.220\nIf you wanna support HP procure stuff\nyou would need an extension of that\n\n628\n00:30:55.220 --> 00:30:59.300\nAPI to allow the apex to\ntalk to those other devices.\n\n629\n00:30:59.300 --> 00:31:03.105\nSo most of the vendors are frivolously\nworking on putting this stuff out,\n\n630\n00:31:03.105 --> 00:31:04.990\nif it's not out already.\n\n631\n00:31:04.990 --> 00:31:07.720\nThose are gonna communicate\nthrough that back end.\n\n632\n00:31:07.720 --> 00:31:10.960\nOn the front end we have\nthe Northbound API, and\n\n633\n00:31:10.960 --> 00:31:13.982\nthis is where our software reaches\ninto the service controller.\n\n634\n00:31:13.982 --> 00:31:19.210\nThat software doesn't need to know how to\ntalk to the hardware, it needs to know how\n\n635\n00:31:19.210 --> 00:31:24.140\nto talk to the controller it needs to know\nthe controllers API, that Northbound API,\n\n636\n00:31:24.140 --> 00:31:27.872\nand you might be talking to it\nwith something that is combined.\n\n637\n00:31:27.872 --> 00:31:32.440\nSo the APIC itself is\nthe actual service controller.\n\n638\n00:31:32.440 --> 00:31:35.400\nThe APIC-EM, the enterprise module,\n\n639\n00:31:35.400 --> 00:31:38.080\nthat's the management software\nthat sits on top of it.\n\n640\n00:31:38.080 --> 00:31:40.620\nThat's the web interface that I\nwas using in that show, and so\n\n641\n00:31:40.620 --> 00:31:44.050\nsee how I've got APIC-EM listed as the\nservice controller and I've got APIC-EM\n\n642\n00:31:44.050 --> 00:31:47.940\nlisted as the software too, it's kind of\ncombined, but it's not always that way.\n\n643\n00:31:47.940 --> 00:31:49.880\nFor example VMware, vCenter.\n\n644\n00:31:49.880 --> 00:31:53.118\nIf you got a VMware environment,\nand you're using vCenter,\n\n645\n00:31:53.118 --> 00:31:55.400\nyou may have virtual Cisco switches.\n\n646\n00:31:55.400 --> 00:32:00.121\nYou may have a Cisco fiber fabric for your\nstorage area network You might have Cisco\n\n647\n00:32:00.121 --> 00:32:02.531\nrouters and switches that are involved.\n\n648\n00:32:02.531 --> 00:32:06.756\nYour virtualization hosts probably have\nVLAN trunks that run to switches, so\n\n649\n00:32:06.756 --> 00:32:09.980\nwe need VLANs activated and deactivated.\n\n650\n00:32:09.980 --> 00:32:13.920\nVMware has written all that into\nthe vCenter Server software.\n\n651\n00:32:13.920 --> 00:32:18.190\nAnd it knows how to communicate with\nthe northbound API to talk to APIC or\n\n652\n00:32:18.190 --> 00:32:19.470\nOpen SDN.\n\n653\n00:32:19.470 --> 00:32:23.420\nSo when you bring up a new virtual\nmachine and you say its on VLAN 12,\n\n654\n00:32:23.420 --> 00:32:28.570\nthe vCenter server can\nreach out to Open SDN and\n\n655\n00:32:28.570 --> 00:32:31.700\nit can say, hey, I need to take\nthis port and add VLAN 12 to it.\n\n656\n00:32:31.700 --> 00:32:35.590\nAnd then Open SDN can turn around and\nreach out to that switch and say,\n\n657\n00:32:35.590 --> 00:32:40.312\ntake this port and add VLAN 12\nto the allowed VLAN list, right?\n\n658\n00:32:40.312 --> 00:32:43.885\nSo vCenter didn't have to know\nhow to talk to the switch.\n\n659\n00:32:43.885 --> 00:32:47.420\nvCenter just had to know how to\ntalk to the service controller.\n\n660\n00:32:47.420 --> 00:32:52.080\nAnd that's the real power of this,\nis that you, or a third party company, or\n\n661\n00:32:52.080 --> 00:32:55.580\nanybody can create whatever software they\nwant, and have this really get integrated.\n\n662\n00:32:55.580 --> 00:32:57.440\nAnd the cloud has ushered\na lot of this in.\n\n663\n00:32:57.440 --> 00:33:01.669\nBecause when you go to Amazon Web\nServices, when you go to Microsoft Azure,\n\n664\n00:33:01.669 --> 00:33:03.796\nyou're creating virtual machines.\n\n665\n00:33:03.796 --> 00:33:07.042\nAnd you never see the underlying hardware,\nyou never see the switches and\n\n666\n00:33:07.042 --> 00:33:08.257\nrouters that are in place.\n\n667\n00:33:08.257 --> 00:33:11.749\nBut you're making changes that\naffect the underlying hardware, but\n\n668\n00:33:11.749 --> 00:33:15.491\nyou just don't see it, because you're\ndealing with the northbound API.\n\n669\n00:33:15.491 --> 00:33:17.067\nYou're dealing with the software, and\n\n670\n00:33:17.067 --> 00:33:19.470\non the back end it's\ntalking to that hardware.\n\n671\n00:33:19.470 --> 00:33:21.620\nThat's software defined networking.\n\n672\n00:33:21.620 --> 00:33:24.900\nAnd it makes it where our software no\nlonger cares about what the hardware\n\n673\n00:33:24.900 --> 00:33:25.550\nis under the hood.\n\n674\n00:33:25.550 --> 00:33:27.382\nWe're just gonna tell\nthe service controller.\n\n675\n00:33:27.382 --> 00:33:29.610\nNow it has to worry about the back end,\nright?\n\n676\n00:33:29.610 --> 00:33:31.802\nAnd Cisco's not the only one doing this.\n\n677\n00:33:31.802 --> 00:33:34.838\nAll of the various networking companies\nare really moving forward in this.\n\n678\n00:33:34.838 --> 00:33:37.200\nIf they're not, they're companies that'll\nbe out of business in a few years.\n\n679\n00:33:37.200 --> 00:33:38.941\nSo I mean, that's how critical this is.\n\n680\n00:33:38.941 --> 00:33:43.274\nBut the APIC is an example, the vCenter,\nand then my head is over it, but\n\n681\n00:33:43.274 --> 00:33:45.210\nI put Python Scripts down here.\n\n682\n00:33:45.210 --> 00:33:48.220\nCuz you can write your own Python Scripts\nand have it interact with this stuff.\n\n683\n00:33:48.220 --> 00:33:51.310\nYou don't have to have crazy\nexpensive software managing it,\n\n684\n00:33:51.310 --> 00:33:54.080\nit's really up to you\nwhat you want to have.\n\n685\n00:33:54.080 --> 00:33:55.910\nYou get a lot of power with this, right?\n\n686\n00:33:55.910 --> 00:33:57.850\nThat's what software\ndefined networking is.\n\n687\n00:33:57.850 --> 00:34:01.690\nAnd so what we're starting to see is all\nthose old services that Cisco had to\n\n688\n00:34:01.690 --> 00:34:04.710\nincorporate into the iOS\nare now coming out.\n\n689\n00:34:04.710 --> 00:34:09.304\nAnd Cisco has one simple authentication\nmodule that the service controller can use\n\n690\n00:34:09.304 --> 00:34:10.951\nwhen it talks to the devices.\n\n691\n00:34:10.951 --> 00:34:15.668\nBut on the other end, you might have\na RADIUS server, a TACACS server,\n\n692\n00:34:15.668 --> 00:34:17.805\nActive Directory, whatever.\n\n693\n00:34:17.805 --> 00:34:20.393\nAnd maybe we make\nan Active Directory extension so\n\n694\n00:34:20.393 --> 00:34:23.100\nthese two can just talk\nright to each other.\n\n695\n00:34:23.100 --> 00:34:25.250\nAnd then I don't have to have\na RADIUS server in the middle,\n\n696\n00:34:25.250 --> 00:34:27.760\nI can really deploy\ntechnologies a lot more simple.\n\n697\n00:34:27.760 --> 00:34:29.170\nAnd that's what SDM is all about.\n\n698\n00:34:29.170 --> 00:34:31.790\nSo, that's the new model,\nbut when I say new,\n\n699\n00:34:31.790 --> 00:34:35.110\nI mean this has only been really\ncatching on the last couple of years.\n\n700\n00:34:35.110 --> 00:34:39.630\nSo, it'll be a solid probably 10 years\nbefore we see some of the old technologies\n\n701\n00:34:39.630 --> 00:34:40.240\ngo away.\n\n702\n00:34:40.240 --> 00:34:41.745\nRADIUS, TACACS, and stuff will be there.\n\n703\n00:34:41.745 --> 00:34:44.396\nBut what you're gonna see it that\nCisco's gonna stop adding services,\n\n704\n00:34:44.396 --> 00:34:46.056\nthey're gonna stop incorporating things.\n\n705\n00:34:46.056 --> 00:34:48.594\nSo if you're in that waiting phase,\nstop waiting,\n\n706\n00:34:48.594 --> 00:34:50.970\nyou need to move over to\nthe new infrastructure.\n\n707\n00:34:50.970 --> 00:34:53.530\nYou need to get a service\ncontroller in place, and\n\n708\n00:34:53.530 --> 00:34:55.900\nnow you can start incorporating\nthings from third-party vendors or\n\n709\n00:34:55.900 --> 00:34:58.050\nfrom yourself, and\nyou're not waiting on Cisco anymore.\n\n710\n00:34:58.050 --> 00:35:01.263\nSo that's the new model that\nreplaces the old legacy.\n\n711\n00:35:01.263 --> 00:35:02.863\n&gt;&gt; Don, that's a lot of great information.\n\n712\n00:35:02.863 --> 00:35:03.623\nLooking at the clock,\n\n713\n00:35:03.623 --> 00:35:05.705\nit does look like we're coming\nto the end of another episode.\n\n714\n00:35:05.705 --> 00:35:10.085\nBut, before we do, do you have any\nadvice on the legacy networks versus\n\n715\n00:35:10.085 --> 00:35:13.010\nthe SDN that you would\nlike the viewers to know?\n\n716\n00:35:13.010 --> 00:35:16.740\n&gt;&gt; The main thing to know is that\nthe legacy stuff isn't going away.\n\n717\n00:35:16.740 --> 00:35:18.620\nIt's just not gonna be expanding anymore,\nso\n\n718\n00:35:18.620 --> 00:35:22.690\nif you're using the legacy configuration,\ndon't feel like you have to move to SDN.\n\n719\n00:35:22.690 --> 00:35:25.160\nIf all I needed was RADIUS support,\nI've got that baked in and\n\n720\n00:35:25.160 --> 00:35:26.870\nI don't have to move away from it, right?\n\n721\n00:35:26.870 --> 00:35:28.320\nAnd that's why it's still on the exam.\n\n722\n00:35:28.320 --> 00:35:30.730\nThat's why, if you look at the exam\nobjectives, RADIUS is right there, right?\n\n723\n00:35:30.730 --> 00:35:34.000\nWe still need to know those things,\nbut, new stuff.\n\n724\n00:35:34.000 --> 00:35:35.340\nWe'll move over to the SDN side, and\n\n725\n00:35:35.340 --> 00:35:38.200\nif you haven't messed with SDN at all,\nyou really should.\n\n726\n00:35:38.200 --> 00:35:39.300\nIt is kind of coming down.\n\n727\n00:35:39.300 --> 00:35:42.970\nI know what the CCNA level,\nit's an advanced topic.\n\n728\n00:35:42.970 --> 00:35:45.030\nBut as you move forward into CCNP and\nother topics,\n\n729\n00:35:45.030 --> 00:35:46.750\nyou'll start to see SDN\ncreeping up more and\n\n730\n00:35:46.750 --> 00:35:49.510\nmore, just because of how tightly\nintegrated into the cloud it is.\n\n731\n00:35:49.510 --> 00:35:50.910\nSo it is, it is important.\n\n732\n00:35:50.910 --> 00:35:52.236\n&gt;&gt; Well, Don, we appreciate that,\n\n733\n00:35:52.236 --> 00:35:54.401\nlooks like it's gonna be a good\nspot to wrap this one up.\n\n734\n00:35:54.401 --> 00:35:55.884\nThank you to the viewer for watching.\n\n735\n00:35:55.884 --> 00:35:59.280\nSo signing out for ITProTV,\nI've been your host, Wes Bryan.\n\n736\n00:35:59.280 --> 00:36:00.080\n&gt;&gt; And I'm Don Pezet.\n\n737\n00:36:00.080 --> 00:36:02.131\n&gt;&gt; And we'll see you next time.\n\n738\n00:36:02.131 --> 00:36:08.180\n[MUSIC]\n\n739\n00:36:08.180 --> 00:36:11.193\nThank you for watching ITProTV.\n\n",
          "vimeoId": "204535639"
        }
      ],
      "title": "Infrastructure Maintenance"
    }
  ],
  "url": "ccna-routing-switching4",
  "vLab": false
}
