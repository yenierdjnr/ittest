{
  "description": "Those looking to complete the Cisco Certified Network Professional (CCNP) Routing and Switching certification will find in this course an overview of the process in achieving the certification and details about the 300-101 Route exam for implementing Cisco IP routing, which is one of three exams required to pass in order to receive the certification. The exam focuses on Cisco router implementation in medium and large environments and the exam objectives cover a wide range of topics including Layer 3 technologies, Infrastructure services and security, and others, which can also benefit those continuing to pursue the CCIE certification.",
  "descriptionMD": "",
  "length": "130340",
  "name": "CCNP Routing and Switching - ROUTE",
  "practiceExam": true,
  "subtitle": "Implementing Cisco IP Routing",
  "tagUrl": "network-admin",
  "topics": [
    {
      "episodes": [
        {
          "description": "The CCNP certification helps one when in the environment of working with hundreds of switches or routers and to achieve it, one will first need to have already achieved the CCENT and the CCNA certifications as a prerequisite. Viewers will hear an overview about the knowledge one needs to attain the CCNP certification, about the three exams one will need to take and the 300-101 Route exam objectives for implementing Cisco IP routing.",
          "length": "847",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/ccnproute/001-Intro-To-CCNP-Route.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/ccnproute/001-Intro-To-CCNP-Route-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/ccnproute/001-Intro-To-CCNP-Route-sm.jpg",
          "title": "Overview of CCNP Route",
          "transcript": "1\n00:00:00,000 --> 00:00:08,175\n[MUSIC]\n\n2\n00:00:08,175 --> 00:00:09,388\nThe CCNP Routing and\n\n3\n00:00:09,388 --> 00:00:14,270\nSwitching certification is\nthe Cisco Certified Network Professional.\n\n4\n00:00:14,270 --> 00:00:17,790\nIt's the next step in most people's\ncareers after they achieve their CCNA,\n\n5\n00:00:17,790 --> 00:00:22,600\nthe Cisco Certified Network Associate,\nand possibly some of the specializations.\n\n6\n00:00:22,600 --> 00:00:23,740\nBut the CCNP Routing and\n\n7\n00:00:23,740 --> 00:00:27,990\nSwitching really builds off of the,\nwell, CCNA Routing and Switching.\n\n8\n00:00:27,990 --> 00:00:33,290\nAnd it basically takes our network\nknowledge from just a handful of devices\n\n9\n00:00:33,290 --> 00:00:34,880\nto something much larger.\n\n10\n00:00:34,880 --> 00:00:37,770\nRight Ronnie, so in CCNA, how many\ndevices are we really talking about?\n\n11\n00:00:37,770 --> 00:00:41,320\n>> We normally end up talking about\ntwo routers, or maybe three routers,\n\n12\n00:00:41,320 --> 00:00:45,530\nand a couple of switches, when we start\nworking with the devices themselves.\n\n13\n00:00:45,530 --> 00:00:48,270\nMaking sure first of all,\nthey can have basic connectivity, and\n\n14\n00:00:48,270 --> 00:00:50,700\nthat we can configure those devices.\n\n15\n00:00:50,700 --> 00:00:52,910\nOnce we start doing that,\nwe then connect them to routers.\n\n16\n00:00:52,910 --> 00:00:56,070\nAgain, multiple routers, making sure that\nthey can communicate with each other.\n\n17\n00:00:56,070 --> 00:01:00,340\nBut really building a small to medium\nsize network is what we normally hear\n\n18\n00:01:00,340 --> 00:01:02,010\nthe term being in CCNA.\n\n19\n00:01:02,010 --> 00:01:02,760\n>> For a lot of people,\n\n20\n00:01:02,760 --> 00:01:07,040\nthe knowledge you gain from CCNA gets\nyou ready to set up branch offices.\n\n21\n00:01:07,040 --> 00:01:08,650\nBut what if you're not\nworking in a branch office?\n\n22\n00:01:08,650 --> 00:01:10,820\nWhat if you're working in\nthe headquarters, the big node?\n\n23\n00:01:10,820 --> 00:01:13,290\nYou got hundreds of routers or\nhundreds of switches.\n\n24\n00:01:13,290 --> 00:01:16,120\nThat's where CCNP Routing and\nSwitching comes in.\n\n25\n00:01:16,120 --> 00:01:21,229\nAnd the exam that we're about to\nprepare for is the 300-101 route exam.\n\n26\n00:01:21,229 --> 00:01:24,670\nIt's got a very simple name,\nImplementing Cisco IP Routing.\n\n27\n00:01:24,670 --> 00:01:27,080\nAnd what it is does is it\nfocuses solely on routers.\n\n28\n00:01:27,080 --> 00:01:31,260\nThat's different than the CCNA,\nwhere we tackled them all kinda together.\n\n29\n00:01:31,260 --> 00:01:35,880\nUnder CCNP, we do routing,\nswitching, and troubleshooting.\n\n30\n00:01:35,880 --> 00:01:37,250\nIt's three separate exams,\n\n31\n00:01:37,250 --> 00:01:40,940\nthree separate areas, and\nthat let's us really drill down.\n\n32\n00:01:40,940 --> 00:01:44,592\nWe take all the same concepts that\nyou've already learned about in CCNA, or\n\n33\n00:01:44,592 --> 00:01:45,684\nthat you should have.\n\n34\n00:01:45,684 --> 00:01:48,190\nYou can't get your CCNP\nwithout a CCNA first.\n\n35\n00:01:48,190 --> 00:01:51,934\nWe take those same concepts, and then we\ngo much deeper, and look at the advanced\n\n36\n00:01:51,934 --> 00:01:55,570\nconsiderations we have when we\nhave large amounts of equipment.\n\n37\n00:01:55,570 --> 00:01:58,840\nThis gets you ready for the enterprise and\nhome office type model.\n\n38\n00:01:58,840 --> 00:02:00,590\nI shouldn't say home office.\n\n39\n00:02:00,590 --> 00:02:01,670\nThat makes me think of my home.\n\n40\n00:02:01,670 --> 00:02:03,070\nI mean like, headquarters.\n\n41\n00:02:04,320 --> 00:02:06,570\nLet's talk a little bit about this exam.\n\n42\n00:02:06,570 --> 00:02:09,450\nIf you go to Cisco's website,\nI've got it pulled up here.\n\n43\n00:02:09,450 --> 00:02:13,210\nThis is their CCNP Routing and\nSwitching page, and\n\n44\n00:02:13,210 --> 00:02:17,757\nthe way I get here is I just\ntype www.cisco.com/go/CCNP,\n\n45\n00:02:17,757 --> 00:02:22,830\n/go is their little alias folder and\n/CCNP sends you in here.\n\n46\n00:02:22,830 --> 00:02:26,133\nThey just kind of show that you\nshould already have your CCNA.\n\n47\n00:02:26,133 --> 00:02:29,021\nYou've got to have that to\nprogress to CCNP, and then for\n\n48\n00:02:29,021 --> 00:02:32,220\nmost people the next step is CCIE,\nthe high level.\n\n49\n00:02:32,220 --> 00:02:36,370\nBut in the CCNP, you've got three exams,\nroute, switch and t-shoot.\n\n50\n00:02:36,370 --> 00:02:38,120\nAnd we're about to cover route.\n\n51\n00:02:39,140 --> 00:02:44,030\nSo nice to be able to break that down and\nlook at just the routing piece.\n\n52\n00:02:44,030 --> 00:02:48,150\nThe exam itself is very similar to\nthe other Cisco exams you may have taken.\n\n53\n00:02:48,150 --> 00:02:48,790\nIt's 120 minutes.\n\n54\n00:02:48,790 --> 00:02:55,820\nYou get two hours, which is not a ton of\ntime, and then you get 45 to 65 questions.\n\n55\n00:02:55,820 --> 00:02:58,860\nThat's a huge gap right there,\n20 question gap.\n\n56\n00:02:58,860 --> 00:03:02,970\nThat means your exam could be up\nto a third shorter than somebody\n\n57\n00:03:02,970 --> 00:03:06,230\nsitting next to you,\nin terms of the number of questions.\n\n58\n00:03:06,230 --> 00:03:09,260\nBut they're all two hours,\nbecause of the labs.\n\n59\n00:03:09,260 --> 00:03:12,680\nSome of the interactive labs in the exam\nare more challenging than others, and\n\n60\n00:03:12,680 --> 00:03:13,930\nthey take more time.\n\n61\n00:03:13,930 --> 00:03:16,770\nYou may have more lab\nquestions than your neighbor.\n\n62\n00:03:16,770 --> 00:03:19,720\nYour neighbor might have less than you,\nor more multiple choice questions, so\n\n63\n00:03:19,720 --> 00:03:21,400\nthey kind of balance out.\n\n64\n00:03:21,400 --> 00:03:24,290\nThat's why there's such a variation\nin the number of exams.\n\n65\n00:03:26,100 --> 00:03:27,730\nExams are all proctored\nthrough Pearson VUE.\n\n66\n00:03:27,730 --> 00:03:29,158\nIf you wanna sign up for the exam,\n\n67\n00:03:29,158 --> 00:03:31,760\nyou've got to go to\nthe Pearson VUE website and do it.\n\n68\n00:03:31,760 --> 00:03:34,160\nCisco tests exclusively with Pearson VUE.\n\n69\n00:03:34,160 --> 00:03:36,300\nYou can't do it with\nlike Sylvan Prometric or\n\n70\n00:03:36,300 --> 00:03:39,660\nthe other testing vendors,\nyou've got to go to Pearson VUE.\n\n71\n00:03:39,660 --> 00:03:42,390\nFortunately, there's Pearson VUE\ncenters all over the world.\n\n72\n00:03:42,390 --> 00:03:44,794\nIt's not like you've got to\ngo to Cisco headquarters, or\n\n73\n00:03:44,794 --> 00:03:47,455\na Cisco authorized training provider,\nor anything like that.\n\n74\n00:03:47,455 --> 00:03:50,140\nYou can just go to your nearest\nVUE center and take the exam.\n\n75\n00:03:51,820 --> 00:03:54,920\nNow, the exam itself,\nbe aware of a couple of things.\n\n76\n00:03:54,920 --> 00:03:56,240\nFirst off, this is the 300-101.\n\n77\n00:03:56,240 --> 00:04:00,520\nWhen you’re out there getting ready for\nit, you’ll come across another number and,\n\n78\n00:04:00,520 --> 00:04:01,820\nin fact, did they list it back here?\n\n79\n00:04:01,820 --> 00:04:04,140\nI don’t think they did.\n\n80\n00:04:04,140 --> 00:04:05,905\nLet me go to that, oops.\n\n81\n00:04:05,905 --> 00:04:07,630\n>> [LAUGH]\n>> I don’t wanna go back too far.\n\n82\n00:04:07,630 --> 00:04:12,720\nWhat you’ll see is that the CCNP was\nrecently updated to version 2.0.\n\n83\n00:04:12,720 --> 00:04:18,200\nIt was version 1.1 before that, and really\n1.0 to 1.1, they didn't change the exams.\n\n84\n00:04:18,200 --> 00:04:22,930\nIt had the same exam for a long time,\nfor seems like four years.\n\n85\n00:04:22,930 --> 00:04:24,510\nIt was a long time.\n\n86\n00:04:24,510 --> 00:04:28,780\nAnd that means that there are a ton of\nbooks and training materials that are out\n\n87\n00:04:28,780 --> 00:04:32,800\nthere, that are built upon the 1.0 and\n1.1 curriculum, and not the 2.0.\n\n88\n00:04:32,800 --> 00:04:35,730\nWell, depending on when\nyou're watching this series,\n\n89\n00:04:35,730 --> 00:04:39,900\nif you're watching this live right now,\nthe 1.1 exam is still active.\n\n90\n00:04:39,900 --> 00:04:43,680\nWhen you go to sign up for it,\nyou can actually still sign up for\n\n91\n00:04:43,680 --> 00:04:45,730\nthe older exams.\n\n92\n00:04:45,730 --> 00:04:50,090\nLet me do a search for\nthe CCNP route class.\n\n93\n00:04:50,090 --> 00:04:52,000\nThe class that they do.\n\n94\n00:04:52,000 --> 00:04:54,370\nAnd well that's Global Knowledge,\nis not who I wanted.\n\n95\n00:04:54,370 --> 00:04:55,950\nI want Cisco.\n>> There we go.\n\n96\n00:04:55,950 --> 00:04:57,030\n>> If we go to Cisco's.\n\n97\n00:04:57,030 --> 00:04:58,741\nOh, that just took me right\nback to the same page.\n\n98\n00:04:58,741 --> 00:05:02,300\nOh, if I just scroll down,\nsee there we go.\n\n99\n00:05:02,300 --> 00:05:03,820\nNotice here, for the required exams for\n\n100\n00:05:03,820 --> 00:05:07,770\nthe CCNP, you've got to do route,\nswitch, and tshoot.\n\n101\n00:05:07,770 --> 00:05:09,650\nBut see how there's two exams.\n\n102\n00:05:09,650 --> 00:05:15,544\n642-902, that's the 1.0, 1.1 exam.\n\n103\n00:05:15,544 --> 00:05:19,363\nLast data test is January 29th, 2015.\n\n104\n00:05:19,363 --> 00:05:22,970\nWe're filming this in October of 2014,\nso that's three more months.\n\n105\n00:05:22,970 --> 00:05:24,680\nYou could still get in and do that.\n\n106\n00:05:24,680 --> 00:05:26,570\nIf you've got a bunch of materials\nthat are built off of the old\n\n107\n00:05:26,570 --> 00:05:28,370\ncontent, that's fine.\n\n108\n00:05:28,370 --> 00:05:31,290\nAnd if you watch our new content,\nyou'll actually get you ready for\n\n109\n00:05:31,290 --> 00:05:32,590\nthe old exam too, just as well,\n\n110\n00:05:32,590 --> 00:05:35,990\nwe just cover some additional things\nthat aren't on that exam yet.\n\n111\n00:05:35,990 --> 00:05:40,555\nBut, if you're moving forward,\nyou really need to do the new exam.\n\n112\n00:05:40,555 --> 00:05:45,140\nThey'll both give you the same CCNP,\nthey'll both expire in two years.\n\n113\n00:05:45,140 --> 00:05:48,460\nYou gotta do continuing education, so\nyou have to re-up every two years.\n\n114\n00:05:48,460 --> 00:05:50,780\nDoesn't matter whether you did\nthe old exam or the new exam.\n\n115\n00:05:50,780 --> 00:05:52,430\nCisco doesn't get particular like that.\n\n116\n00:05:53,610 --> 00:05:56,370\nBut, if you're just starting out,\ndefinitely do the new one,\n\n117\n00:05:56,370 --> 00:06:00,350\nbecause after January 29, 2015,\nyou can't take the old one anymore.\n\n118\n00:06:00,350 --> 00:06:04,890\nAnd so if you prepared for the older exam\nand now you missed that date, you've gotta\n\n119\n00:06:04,890 --> 00:06:08,240\nkind of start over and pick up all the\ndifferences to get to the new end date.\n\n120\n00:06:08,240 --> 00:06:09,740\nIt'll make life harder\non you than it should.\n\n121\n00:06:11,180 --> 00:06:14,244\nAnd you'll see all the exams\nhave been updated, switch and\n\n122\n00:06:14,244 --> 00:06:17,440\ntshoot, which we're not\ncovering in this series.\n\n123\n00:06:17,440 --> 00:06:20,574\nOn the round side,\nwe're really focused on that 300-101.\n\n124\n00:06:20,574 --> 00:06:26,680\nAnd the 300-101 objectives are focused\nspecifically on routing topics.\n\n125\n00:06:26,680 --> 00:06:29,710\nAnd you'll see that it\nstarts out really low level.\n\n126\n00:06:29,710 --> 00:06:32,510\nGeneral concepts that you should\nalready be familiar with.\n\n127\n00:06:33,850 --> 00:06:37,250\nThe thing is, you should already be\na CCNA, but when did you get it?\n\n128\n00:06:37,250 --> 00:06:39,280\nYou could have got it years ago, you know?\n\n129\n00:06:39,280 --> 00:06:40,450\nMaybe you don't use Cisco everyday.\n\n130\n00:06:40,450 --> 00:06:43,320\nThis information gets\nkind of out of your head.\n\n131\n00:06:43,320 --> 00:06:44,910\nWe covered that in\nthe beginning as a refresher.\n\n132\n00:06:46,830 --> 00:06:48,010\nAfter that we go into Layer 2.\n\n133\n00:06:48,010 --> 00:06:51,450\nNow you might be saying to yourself, wait\na minute Don, didn't you just say this was\n\n134\n00:06:51,450 --> 00:06:55,160\na route show, a route exam, why would\nwe talk about Layer 2 technologies?\n\n135\n00:06:55,160 --> 00:06:58,390\nWell, even though our\nrouter operates at Layer 3,\n\n136\n00:06:58,390 --> 00:07:01,100\nwhat's going on at Layer\n2 makes a difference.\n\n137\n00:07:01,100 --> 00:07:04,020\nAnd so you'll see inside of Layer 2\ntechnologies where it starts to break\n\n138\n00:07:04,020 --> 00:07:08,250\ndown things like PPP and Chap,\nwhich your router might need to\n\n139\n00:07:08,250 --> 00:07:12,880\nparticipate in as part of a WAN link,\nor frame relay, for example.\n\n140\n00:07:12,880 --> 00:07:16,050\nYou don't do frame relay to a switch,\nwhich is a Layer 2 device.\n\n141\n00:07:16,050 --> 00:07:19,530\nYou do frame, well I guess, if you\nhad frame relay switch you would, but\n\n142\n00:07:19,530 --> 00:07:21,510\na normal Ethernet switch you wouldn't.\n\n143\n00:07:21,510 --> 00:07:24,300\nBut you do terminate\nframe relay on a router.\n\n144\n00:07:24,300 --> 00:07:24,930\nAnd so\n\n145\n00:07:24,930 --> 00:07:29,010\nwe need to understand how that works in\nthose Layer 2 sides of that technology.\n\n146\n00:07:30,200 --> 00:07:33,240\nNow some of that, like frame relay,\nused to be covered in-depth in CCNA.\n\n147\n00:07:33,240 --> 00:07:36,620\nAnd they started to phase some of that\nout of there and move it up to CCNP,\n\n148\n00:07:36,620 --> 00:07:39,604\nbecause it's less likely that people\nin a branch are gonna encounter that.\n\n149\n00:07:39,604 --> 00:07:41,780\nThey've all switched to cable,\nDSL or whatever.\n\n150\n00:07:44,370 --> 00:07:46,110\nWe've got Layer 3 technologies\nwhat comes up next.\n\n151\n00:07:46,110 --> 00:07:49,566\nAnd on the Layer 3 notice\nthese exam percentages.\n\n152\n00:07:49,566 --> 00:07:50,834\n>> [LAUGH]\n>> 10%, 10%,\n\n153\n00:07:50,834 --> 00:07:53,750\n40% of the exam comes\nfrom this one section.\n\n154\n00:07:53,750 --> 00:07:56,155\nAlmost half the exam is right from here.\n\n155\n00:07:56,155 --> 00:07:57,083\nIt's routing right?\n\n156\n00:07:57,083 --> 00:07:58,511\nLayer 3.\n\n157\n00:07:58,511 --> 00:08:02,995\nAnd if you look at what's inside of there,\nit's stuff that well, that you'd expect.\n\n158\n00:08:02,995 --> 00:08:06,935\nWe can see things like understanding\nIP addressing, VOSM, ARP,\n\n159\n00:08:06,935 --> 00:08:08,765\nDHCP all that good stuff.\n\n160\n00:08:08,765 --> 00:08:10,345\nWe've got IPv6 addressing.\n\n161\n00:08:10,345 --> 00:08:14,105\nNotice the exam pretty much\ntreats them equally now.\n\n162\n00:08:14,105 --> 00:08:17,190\nYou used to get just a little\nbit of IPv6 on the exam.\n\n163\n00:08:17,190 --> 00:08:18,510\nNow you get a lot of it.\n\n164\n00:08:18,510 --> 00:08:19,990\nThat's the way that we're moving forward.\n\n165\n00:08:19,990 --> 00:08:21,740\nYou need to understand it.\n\n166\n00:08:21,740 --> 00:08:23,550\nAfter that we've got\nour routing protocols.\n\n167\n00:08:23,550 --> 00:08:27,370\nWe've got static routing,\ndefault routing, our different types,\n\n168\n00:08:27,370 --> 00:08:31,850\nand then we jump into EIGRP in OSPF and\nBGP.\n\n169\n00:08:33,280 --> 00:08:36,910\nNow EIGRP in OSPF,\nyou've already learned about in the CCNA.\n\n170\n00:08:36,910 --> 00:08:40,320\nWe go further and show some of\nthe more advanced configurations.\n\n171\n00:08:40,320 --> 00:08:42,350\nBGP-\n>> I haven't seen.\n\n172\n00:08:42,350 --> 00:08:44,655\n>> Actually,\ndo they cover that in the newest?\n\n173\n00:08:44,655 --> 00:08:45,380\n>> No.\n>> No, still no.\n\n174\n00:08:45,380 --> 00:08:48,470\nI knew they were flashing out the CCNA so\nyou never know.\n\n175\n00:08:48,470 --> 00:08:49,820\nBut yeah, for\n\n176\n00:08:49,820 --> 00:08:53,300\nBGP, for a lot of you, this might be\nthe first time you're exposed to it.\n\n177\n00:08:53,300 --> 00:08:56,170\nAnd the Border Gateway Protocol,\nboy that thing is important, so\n\n178\n00:08:56,170 --> 00:08:58,540\nwe'll get a chance to see that and\nstart to work with it.\n\n179\n00:08:58,540 --> 00:09:02,840\nThere's also some really cool\nstuff that I enjoy like VRF.\n\n180\n00:09:02,840 --> 00:09:07,120\nTaking one physical router and\ndividing it into multiple virtual routers.\n\n181\n00:09:07,120 --> 00:09:10,400\nThat used to be ISP level stuff,\nbut now we can do it\n\n182\n00:09:10,400 --> 00:09:14,790\nhere inside a CCNP at the regular\nenterprise level and it's the neat stuff!\n\n183\n00:09:14,790 --> 00:09:17,860\nYou can do some really cool things\nwith VRF, but if you're doing MPLS,\n\n184\n00:09:17,860 --> 00:09:20,380\nthat's where VRF really comes in handy.\n\n185\n00:09:20,380 --> 00:09:24,754\nBut you'll see all the different route\ntopics, and just look at that exam and\n\n186\n00:09:24,754 --> 00:09:28,340\nbe like, if it's huge, with all\nthe different things that get covered.\n\n187\n00:09:28,340 --> 00:09:30,970\nAnd really valuable stuff, so\nthat will be a huge section for this show.\n\n188\n00:09:33,620 --> 00:09:35,370\nAfter that, we've got VPN technologies.\n\n189\n00:09:35,370 --> 00:09:39,450\nNow Cisco really wants you\nto terminate VPNs on an ASA.\n\n190\n00:09:39,450 --> 00:09:41,410\nOn their firewall appliances.\n\n191\n00:09:41,410 --> 00:09:43,150\nBut your routers can build a VPN.\n\n192\n00:09:43,150 --> 00:09:47,340\nAnd so we'll take a look at things\nlike dynamic VPNs, the easy VPN, or\n\n193\n00:09:47,340 --> 00:09:52,030\neasy virtual networking is what it's\ncalled now, GRE tunnels, we'll get\n\n194\n00:09:52,030 --> 00:09:55,310\na chance to see those, how they work,\nand how we can use them on our routers.\n\n195\n00:09:55,310 --> 00:09:57,340\nYou may not use that in production, but\n\n196\n00:09:57,340 --> 00:09:59,240\nit's important to understand\nthat the feature is there and\n\n197\n00:09:59,240 --> 00:10:02,990\nunderstand how to use it, so that you know\nwhether or not it's the right fit for you.\n\n198\n00:10:05,270 --> 00:10:07,180\nAfter that,\nwe've got Infrastructure Security,\n\n199\n00:10:07,180 --> 00:10:10,620\nwhere we start to take a look\nat securing our devices.\n\n200\n00:10:10,620 --> 00:10:14,680\nIf you did the CCNA Security,\nyou already got a preview of some of this.\n\n201\n00:10:14,680 --> 00:10:17,300\nHow to use RADIUS to\nauthenticate on your routers.\n\n202\n00:10:17,300 --> 00:10:20,020\nHow to secure your VTYs, and so on.\n\n203\n00:10:20,020 --> 00:10:24,060\nBut if you didn't do CCNA Security,\nhere's your first exposure to it.\n\n204\n00:10:24,060 --> 00:10:27,500\nWe need to understand how to properly\nsecure our routers to prevent attacks.\n\n205\n00:10:28,980 --> 00:10:31,080\nAnd then lastly, Infrastructure Services.\n\n206\n00:10:31,080 --> 00:10:34,980\nThis is what I call the leftovers right.\n\n207\n00:10:34,980 --> 00:10:38,720\nAll the other cool junk you can do on\nyour router that they didn't include\n\n208\n00:10:38,720 --> 00:10:41,210\nin the other modules cuz\nthey just didn't quite fit.\n\n209\n00:10:41,210 --> 00:10:42,190\nAnd so, they throw it in here.\n\n210\n00:10:42,190 --> 00:10:43,630\nAnd that doesn't mean\nthis stuff is worthless.\n\n211\n00:10:43,630 --> 00:10:44,220\nIt's good stuff.\n\n212\n00:10:44,220 --> 00:10:45,790\nThis is my favorite section.\n\n213\n00:10:45,790 --> 00:10:49,970\nCuz you start getting into things\nlike using SCP to securely copy data,\n\n214\n00:10:49,970 --> 00:10:54,190\nand how to configure SNMP logging,\nnetwork time protocol,\n\n215\n00:10:54,190 --> 00:10:56,370\nall this other really good stuff.\n\n216\n00:10:56,370 --> 00:11:00,060\nIPSLAs, netflow, really fun stuff.\n\n217\n00:11:00,060 --> 00:11:01,940\nYou guys, you'll really enjoy\nthat section at the end,\n\n218\n00:11:01,940 --> 00:11:04,760\nbecause it's just cool technology\nafter cool technology.\n\n219\n00:11:04,760 --> 00:11:06,740\nThat's kind of how we wrap it up.\n\n220\n00:11:06,740 --> 00:11:10,300\nBut you'll see that all of this\nis being implemented on routers.\n\n221\n00:11:10,300 --> 00:11:13,110\nAt no point did we see a switch,\nnot even Layer 3 switching.\n\n222\n00:11:13,110 --> 00:11:15,720\nWe really don't even deal with\nLayer 3 switching in this one,\n\n223\n00:11:15,720 --> 00:11:21,680\nit's really just routing on routers.\n\n224\n00:11:21,680 --> 00:11:25,970\nFor most people, this will be the first\nexam you take on the way to your CCNP.\n\n225\n00:11:25,970 --> 00:11:27,540\nIt doesn't have to be.\n\n226\n00:11:27,540 --> 00:11:30,350\nCisco doesn't mandate that you\ntake these exams in order.\n\n227\n00:11:30,350 --> 00:11:32,530\nI know some people like\nto start out on switch,\n\n228\n00:11:32,530 --> 00:11:34,690\nbecause they feel it's\na little bit easier.\n\n229\n00:11:34,690 --> 00:11:37,340\nI think most people get more hands on\nexperience with a switch than they do on\n\n230\n00:11:37,340 --> 00:11:40,420\na router,\nbecause you change switches all the time.\n\n231\n00:11:40,420 --> 00:11:42,100\nIt doesn't really matter\nwhich one you start with,\n\n232\n00:11:42,100 --> 00:11:43,760\nyou're welcome to start\nwith the other one.\n\n233\n00:11:43,760 --> 00:11:46,790\nBut TSHOOT really does\nneed to be the last one.\n\n234\n00:11:46,790 --> 00:11:50,830\nAnd that's because TSHOOT\ndraws from switch and route.\n\n235\n00:11:50,830 --> 00:11:55,600\nAnd it says, okay, you learned how things\nwere gonna go when they work right.\n\n236\n00:11:55,600 --> 00:11:56,590\nWhat happens when they work wrong?\n\n237\n00:11:56,590 --> 00:12:00,150\nAnd they mix it together, and so,\nyou really need the switch and\n\n238\n00:12:00,150 --> 00:12:03,320\nroute knowledge before you take TSHOOT.\n\n239\n00:12:03,320 --> 00:12:07,340\nJust keep that in mind when you plan the\norder for taking these exams and studying.\n\n240\n00:12:07,340 --> 00:12:10,770\n>> When you're studying remember,\nthe fundamental concepts you learned about\n\n241\n00:12:10,770 --> 00:12:13,450\nin your CCNA studies\nare really gonna help.\n\n242\n00:12:13,450 --> 00:12:14,400\nDon't just overlook it.\n\n243\n00:12:14,400 --> 00:12:16,660\nIf you go, hey, I really wanted CCNP, but\n\n244\n00:12:16,660 --> 00:12:20,600\nyou just didn't want to spend time in\nthe CCNA studies, you've gotta go back.\n\n245\n00:12:20,600 --> 00:12:23,600\nFundamentals for\nthis exam are gonna be so important.\n\n246\n00:12:23,600 --> 00:12:27,170\nYou're not gonna realize it until you're\njust partway through and you're gonna say,\n\n247\n00:12:27,170 --> 00:12:28,840\nhey, I remember doing some of this.\n\n248\n00:12:28,840 --> 00:12:30,780\nBut it's gonna be really important\nwhen we get into the route,\n\n249\n00:12:30,780 --> 00:12:33,610\ninto the deeper stuff,\nfor the routing protocols,\n\n250\n00:12:33,610 --> 00:12:36,890\nabout how important it is that we\nknow just the basic operations.\n\n251\n00:12:36,890 --> 00:12:38,240\nAnd so the more that you review that,\n\n252\n00:12:38,240 --> 00:12:41,680\nthe more prepared you're gonna also\nbe as you head into this topic.\n\n253\n00:12:41,680 --> 00:12:42,940\n>> Yeah, absolutely yeah.\n\n254\n00:12:42,940 --> 00:12:44,450\nAnd you know this is a pretty fun one.\n\n255\n00:12:44,450 --> 00:12:47,630\nI know for me, when I was learning Cisco,\nand studying for\n\n256\n00:12:47,630 --> 00:12:52,580\na lot of this stuff, the CCNL, that was\ngreat but I kind of, by that point,\n\n257\n00:12:52,580 --> 00:12:56,040\nI already knew how to take a router\nout of the box and get it turned on.\n\n258\n00:12:56,040 --> 00:13:00,410\nI didn't learn anything shocking and\nnew when I was studying for CCNL.\n\n259\n00:13:00,410 --> 00:13:03,210\nThis was in 2000, so 14 years ago.\n\n260\n00:13:03,210 --> 00:13:08,400\nBut when I started studying for the CCNP,\nthat was when I learned really cool stuff.\n\n261\n00:13:08,400 --> 00:13:09,370\nAnd I learned stuff where I was,\n\n262\n00:13:09,370 --> 00:13:11,640\nman I can't wait until I\nget to the office tomorrow.\n\n263\n00:13:11,640 --> 00:13:12,600\nBecause I'm going to implement this.\n\n264\n00:13:12,600 --> 00:13:13,662\nWhich is a terrible idea, right?\n\n265\n00:13:13,662 --> 00:13:15,981\n>> [LAUGH]\n>> You don't want to rush right out and\n\n266\n00:13:15,981 --> 00:13:17,070\nimplement something.\n\n267\n00:13:17,070 --> 00:13:20,080\nDon, 14 years ago was a little more-\n>> Bearing.\n\n268\n00:13:20,080 --> 00:13:20,790\n>> Yeah.\n\n269\n00:13:20,790 --> 00:13:22,055\nRisk taking, I suppose.\n\n270\n00:13:22,055 --> 00:13:24,790\n>> [LAUGH]\n>> But you will learn cool stuff,\n\n271\n00:13:24,790 --> 00:13:28,690\nand you'll find that your routers are way\nmore powerful than you thought they were.\n\n272\n00:13:28,690 --> 00:13:30,120\nAnd that they can do\nsome really neat things,\n\n273\n00:13:30,120 --> 00:13:31,040\nif you just know how to turn it on.\n\n274\n00:13:31,040 --> 00:13:32,710\n>> Right.\n>> And that's what we're gonna see\n\n275\n00:13:32,710 --> 00:13:33,950\nhere in this show.\n\n276\n00:13:33,950 --> 00:13:35,170\n>> Right.\n\n277\n00:13:35,170 --> 00:13:37,410\n>> If that sounds like something\nyou guys want to learn about,\n\n278\n00:13:37,410 --> 00:13:39,080\nyou're in the right place.\n\n279\n00:13:39,080 --> 00:13:40,590\nIf you're just getting started with Cisco,\n\n280\n00:13:40,590 --> 00:13:45,450\nI do recommend you jump over to our\nCCNA show first, or CCENT and CCNA.\n\n281\n00:13:45,450 --> 00:13:48,794\nMake sure you get the basics under your\nunder your belt, and then after that,\n\n282\n00:13:48,794 --> 00:13:50,657\ncome back and\nsee us right here with route.\n\n283\n00:13:50,657 --> 00:13:54,836\nBut if you've already got that knowledge\nand you're excited, pumped up, well,\n\n284\n00:13:54,836 --> 00:13:55,445\nwe are too.\n\n285\n00:13:55,445 --> 00:13:56,375\nWe're ready to get into this.\n\n286\n00:13:56,375 --> 00:13:59,815\nRonnie and I both,\nwe're old time Cisco guys, and\n\n287\n00:13:59,815 --> 00:14:02,055\nreally enjoy working with equipment,\nit's a lot of fun.\n\n288\n00:14:02,055 --> 00:14:03,255\n>> Yeah, it is.\n\n289\n00:14:03,255 --> 00:14:05,865\n>> All right, well,\nhope to see you guys in the show.\n\n290\n00:14:05,865 --> 00:14:06,365\nTake it easy.\n\n",
          "vimeoId": "109692164"
        }
      ],
      "title": "Overview of CCNP Route (300-101)"
    },
    {
      "episodes": [
        {
          "description": "Cisco Express Forwarding (CEF) is a feature found inside Cisco routers which is a special way of handling data that moving through routers that can route packets at near wire speed. Viewers will hear about some basic networking principles and hear discussions on the Forwarding Information Base (FIB) and Adjacency Table used by Cisco Express Forwarding.",
          "length": "882",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/ccnproute/1-1-Cisco-Network-Forwarding.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/ccnproute/1-1-Cisco-Network-Forwarding-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/ccnproute/1-1-Cisco-Network-Forwarding-sm.jpg",
          "title": "Cisco Express Forwarding",
          "transcript": "1\n00:00:00,000 --> 00:00:05,674\n[SOUND] In this segment,we're gonna\n\n2\n00:00:05,674 --> 00:00:11,534\ntake a look at exam objective 1.1.\n\n3\n00:00:11,534 --> 00:00:16,038\nWhich is identify Cisco Express\nforwarding concepts.\n\n4\n00:00:16,038 --> 00:00:20,190\nWhat that really boils down to is,\nyou need to know what CEF is.\n\n5\n00:00:20,190 --> 00:00:24,740\nCEF, Cisco Express Forwarding, is a big\nfeature found inside of Cisco routers.\n\n6\n00:00:24,740 --> 00:00:28,200\nAnd it's one of those really cool\nones that's just on by default.\n\n7\n00:00:28,200 --> 00:00:30,350\nAnd most of us never\nhave to worry about it.\n\n8\n00:00:30,350 --> 00:00:32,045\nBut the way I describe it is.\n\n9\n00:00:32,045 --> 00:00:35,035\nWhen somebody looks at a Cisco router,\nand they see that price tag.\n\n10\n00:00:35,035 --> 00:00:37,085\nAnd they say why is it so expensive?\n\n11\n00:00:37,085 --> 00:00:40,845\nOh my goodness, I can get this\nNetgear router for super cheap.\n\n12\n00:00:40,845 --> 00:00:45,580\nWell CEF is one of the main reasons\nthat Cisco router is more expensive.\n\n13\n00:00:45,580 --> 00:00:49,440\nIt's a special way of handling data\nthat moves through your router.\n\n14\n00:00:49,440 --> 00:00:56,190\nSo that you can route packets at near or\nat wire speed, okay?\n\n15\n00:00:56,190 --> 00:00:56,790\nWire speed.\n\n16\n00:00:56,790 --> 00:01:00,010\nThat means that you've got electricity\ncoming in, electricity going out.\n\n17\n00:01:00,010 --> 00:01:02,070\nAnd basically you can handle and\nroute that data,\n\n18\n00:01:02,070 --> 00:01:05,510\nin the same amount of time it takes to\nmove the electricity through the router.\n\n19\n00:01:05,510 --> 00:01:06,510\nThat's fast.\n\n20\n00:01:07,580 --> 00:01:09,610\nIf you have to manipulate\nthat data at all.\n\n21\n00:01:09,610 --> 00:01:12,670\nAll of a sudden it slows\nthat communication down and\n\n22\n00:01:12,670 --> 00:01:14,440\nyour not at wire speed anymore.\n\n23\n00:01:14,440 --> 00:01:17,020\nSo your router actually\nslows traffic down.\n\n24\n00:01:17,020 --> 00:01:21,100\nSo when you look at those Netgear routers,\nor any of those lower end routers.\n\n25\n00:01:21,100 --> 00:01:22,250\nThey're doing exactly that.\n\n26\n00:01:22,250 --> 00:01:24,160\nThey do slow your traffic down.\n\n27\n00:01:24,160 --> 00:01:25,740\nBut for a home user, you don't care.\n\n28\n00:01:25,740 --> 00:01:28,020\nFor a home user,\nuse my home as an example, right?\n\n29\n00:01:28,020 --> 00:01:31,710\nI've got a one hundred megabit\nin my house for the most part.\n\n30\n00:01:31,710 --> 00:01:34,800\nAnd I have a cable modem\nthat's only forty megabit.\n\n31\n00:01:34,800 --> 00:01:37,730\nSo if I have a hundred meg connection\nthat's bottlenecking down a forty megs,\n\n32\n00:01:37,730 --> 00:01:39,830\ndo I care if the traffic\nslows down a little bit?\n\n33\n00:01:41,440 --> 00:01:43,560\nBut in an enterprise you do.\n\n34\n00:01:43,560 --> 00:01:47,170\nIf that's an internal router,\nwith a gig network on one side and\n\n35\n00:01:47,170 --> 00:01:48,250\na gig network on the other side.\n\n36\n00:01:48,250 --> 00:01:50,090\nYou don't want to slow\nyour traffic down at all.\n\n37\n00:01:50,090 --> 00:01:51,610\nEspecially, if you have Voice Over IP, or\n\n38\n00:01:51,610 --> 00:01:54,480\nother traffic that can\nbe effected by latency.\n\n39\n00:01:54,480 --> 00:01:55,920\nAnd that's where CEF comes in.\n\n40\n00:01:57,400 --> 00:01:59,710\nAlright, so how does CEF work?\n\n41\n00:01:59,710 --> 00:02:01,170\n>> When we take a look at CEF,\n\n42\n00:02:01,170 --> 00:02:05,630\nwe have to understand then that at one\npoint routers didn't work this way.\n\n43\n00:02:05,630 --> 00:02:08,460\nSo when data moves through the router,\nwe want to at least take you\n\n44\n00:02:08,460 --> 00:02:11,430\nthrough the process of what could\nhave happened at one point.\n\n45\n00:02:11,430 --> 00:02:13,450\nSo we're gonna talk about some of\nthe different ways that routers\n\n46\n00:02:13,450 --> 00:02:14,594\ncan do switching.\n\n47\n00:02:14,594 --> 00:02:18,080\nAnd then we're going to talk about CEF,\nand what it really does.\n\n48\n00:02:18,080 --> 00:02:21,190\n>> Yeah you know,\nlet's go engineering style first.\n\n49\n00:02:21,190 --> 00:02:24,510\nLet's talk about the actual\nmechanics of a Cisco router.\n\n50\n00:02:24,510 --> 00:02:26,460\nIf you open up a Cisco router,\nyou'll see a circuit board, and\n\n51\n00:02:26,460 --> 00:02:27,750\nthere's all sorts of junk in there.\n\n52\n00:02:27,750 --> 00:02:31,320\nAnd you'll see little copper traces\nrunning all across the motherboard.\n\n53\n00:02:31,320 --> 00:02:35,730\nWell, those copper traces are actually\ndivided up into three planes.\n\n54\n00:02:35,730 --> 00:02:39,550\nThe planes are just like traffic\nlanes of traffic on the motherboard.\n\n55\n00:02:39,550 --> 00:02:40,370\nAnd the three planes,\n\n56\n00:02:40,370 --> 00:02:45,150\nI've kinda done a simple diagram\nhere to show the three planes.\n\n57\n00:02:45,150 --> 00:02:49,090\nYou've got the management plane,\nwhich is where things like your VTYs,\n\n58\n00:02:49,090 --> 00:02:50,750\nwhen you SSH into a router.\n\n59\n00:02:50,750 --> 00:02:52,320\nOr bring up it's web UI, whatever.\n\n60\n00:02:52,320 --> 00:02:53,620\nThat's where that stuff happens.\n\n61\n00:02:53,620 --> 00:02:55,390\nThe management of the router.\n\n62\n00:02:55,390 --> 00:02:59,490\nYou've got your data plane, that's where\nyour raw data comes into the router,\n\n63\n00:02:59,490 --> 00:03:00,390\nand exits the router.\n\n64\n00:03:00,390 --> 00:03:02,790\nAnd then you have your control plane.\n\n65\n00:03:02,790 --> 00:03:05,960\nAnd the control plane is where\nthings like your routing protocols,\n\n66\n00:03:05,960 --> 00:03:08,030\nyour software, runs.\n\n67\n00:03:08,030 --> 00:03:10,040\nSo when you’re writing\naccess control lists,\n\n68\n00:03:10,040 --> 00:03:13,630\nwhen you’re creating a dynamic routing\nprotocol and its routing tables.\n\n69\n00:03:13,630 --> 00:03:17,690\nWhen you’re creating that kind of\nmanipulation, the logic of your router.\n\n70\n00:03:17,690 --> 00:03:20,000\nThat's all happening here\nin the control plane.\n\n71\n00:03:20,000 --> 00:03:24,180\nThe control plane is handled by\na general purpose processor.\n\n72\n00:03:24,180 --> 00:03:26,560\nA processor that's running\non the motherboard,\n\n73\n00:03:26,560 --> 00:03:28,675\nthat's handling those activities.\n\n74\n00:03:28,675 --> 00:03:34,845\nAnd in old routers, now when I say old,\nI'm talking late 80s, early 90s.\n\n75\n00:03:34,845 --> 00:03:37,175\nSo a long time ago.\n\n76\n00:03:37,175 --> 00:03:41,917\nRouters back then all did what\nwas called processed switching.\n\n77\n00:03:41,917 --> 00:03:44,757\nYour traffic would come\nin in one interface.\n\n78\n00:03:44,757 --> 00:03:46,967\nThe traffic would get decoded.\n\n79\n00:03:46,967 --> 00:03:49,377\nTurn from electricity into binary.\n\n80\n00:03:49,377 --> 00:03:51,867\nAnd sent up to the control plain.\n\n81\n00:03:51,867 --> 00:03:55,010\nSent up to that plain\nwhere it can be examined.\n\n82\n00:03:55,010 --> 00:03:58,730\nRun against the routing table,\ndetermine where it should go, and\n\n83\n00:03:58,730 --> 00:04:00,730\nthen drop back on the data plane.\n\n84\n00:04:00,730 --> 00:04:03,530\nBefore being sent out\nsome other interface,\n\n85\n00:04:03,530 --> 00:04:04,750\nor occasionally the same interface.\n\n86\n00:04:05,920 --> 00:04:10,620\nThat process, process switching,\nit's not very efficient.\n\n87\n00:04:10,620 --> 00:04:14,430\nEvery single packet is being thrown\nagainst this general purpose CPU.\n\n88\n00:04:14,430 --> 00:04:18,020\nAnd that general purpose CPU is\nrunning the data, and it takes time.\n\n89\n00:04:18,020 --> 00:04:19,200\nIt creates latency.\n\n90\n00:04:19,200 --> 00:04:20,830\nIt slows down the network.\n\n91\n00:04:20,830 --> 00:04:24,270\nNow we're talking about nanoseconds here,\nwhich to us is nothing.\n\n92\n00:04:24,270 --> 00:04:27,320\nBut in the computer world,\nthat's an eternity.\n\n93\n00:04:27,320 --> 00:04:30,180\nYou know, so we want that stuff\nto go as fast as possible.\n\n94\n00:04:30,180 --> 00:04:32,570\nBut in the old days, that was\nthe only way they knew how to do it.\n\n95\n00:04:32,570 --> 00:04:35,870\nWas to send it from the data\nplane to the control plane.\n\n96\n00:04:35,870 --> 00:04:39,420\nDo your routing, do your ACL filtering,\ndo all that other stuff, NAT.\n\n97\n00:04:39,420 --> 00:04:40,760\nWhatever else you're doing.\n\n98\n00:04:40,760 --> 00:04:43,200\nThen drop it down on the data plane,\nand send it out.\n\n99\n00:04:44,690 --> 00:04:46,620\nThere's got to be a better\nway right Ronnie?\n\n100\n00:04:46,620 --> 00:04:49,160\nWhat was next after process switching.\n\n101\n00:04:49,160 --> 00:04:52,670\n>> After process switching is\nwhat we call the fast switching.\n\n102\n00:04:52,670 --> 00:04:56,330\nAnd for us in fast switching, it starts\nto handle a little bit differently here.\n\n103\n00:04:56,330 --> 00:04:58,950\nSo when we take a look\nat the fast switching.\n\n104\n00:04:58,950 --> 00:05:02,290\nThis is where we begin to\nuse caching a lot more.\n\n105\n00:05:02,290 --> 00:05:04,570\nSo that we take the first\nbit ,and we go hey,\n\n106\n00:05:04,570 --> 00:05:06,370\nwe don't actually have\nto send everything up.\n\n107\n00:05:06,370 --> 00:05:11,400\nWe've gone ahead and cached some of it\non the wire, or the line card itself.\n\n108\n00:05:11,400 --> 00:05:13,880\n>> Yeah it's really neat how it works.\n\n109\n00:05:13,880 --> 00:05:17,710\nCisco basically said look,\nnobody just sends one packet, right?\n\n110\n00:05:17,710 --> 00:05:21,590\nI guess there's some protocols like UDP\nwhere every packet's kind of independent.\n\n111\n00:05:21,590 --> 00:05:23,940\nBut most of our communications use TCP.\n\n112\n00:05:23,940 --> 00:05:27,480\nAnd your data,\nit rarely fits in one packet.\n\n113\n00:05:27,480 --> 00:05:30,800\nAfter you deal with the headers and\nall that other stuff.\n\n114\n00:05:30,800 --> 00:05:31,640\nBy the end of the day,\n\n115\n00:05:31,640 --> 00:05:36,805\nyou end up with around 600 600\nbytes of actual room for data.\n\n116\n00:05:36,805 --> 00:05:37,885\nIt's not much.\n\n117\n00:05:37,885 --> 00:05:39,625\nSo who's sending 600 bytes?\n\n118\n00:05:39,625 --> 00:05:40,845\nWell, maybe you're clicking on a webpage.\n\n119\n00:05:40,845 --> 00:05:41,605\nThat might.\n\n120\n00:05:41,605 --> 00:05:43,515\nBut most people are sending much more.\n\n121\n00:05:43,515 --> 00:05:46,955\nThat means your packet is getting\nbroken up into multiple packets,\n\n122\n00:05:46,955 --> 00:05:48,580\nto send across the network.\n\n123\n00:05:48,580 --> 00:05:52,270\nAnd your router in a process\nswitched environment is sending\n\n124\n00:05:52,270 --> 00:05:55,900\nevery one of those packets up to\nthe control plain individually.\n\n125\n00:05:55,900 --> 00:05:58,310\nTo assess a destination to send it along.\n\n126\n00:05:58,310 --> 00:06:03,210\nBut Cisco said look, what are the odds\nof us sending one packet one way,\n\n127\n00:06:03,210 --> 00:06:05,460\nand then sending additional\npackets a different way?\n\n128\n00:06:05,460 --> 00:06:08,170\nIf anything,\nthat can actually cause some problems.\n\n129\n00:06:08,170 --> 00:06:10,830\nSo they introduced something\ncalled fast switching.\n\n130\n00:06:10,830 --> 00:06:15,310\nWhich takes the first packet,\nsends it up to the control plane.\n\n131\n00:06:15,310 --> 00:06:16,860\nRuns it against the routing table.\n\n132\n00:06:16,860 --> 00:06:18,740\nFigures out where it's gonna go.\n\n133\n00:06:18,740 --> 00:06:21,300\nAnd then brings it down to\nthe data plane to send it along.\n\n134\n00:06:21,300 --> 00:06:25,280\nAnd it does exactly what Ronnie said,\nIt caches that decision.\n\n135\n00:06:25,280 --> 00:06:29,080\nAnd the rest of the traffic in that\ncommunication, it's called a flow.\n\n136\n00:06:29,080 --> 00:06:33,160\nSo the rest of that flow doesn't\nhave to go to the control plane.\n\n137\n00:06:33,160 --> 00:06:37,790\nIt can just come right through at\nwire speed or at near wire speed.\n\n138\n00:06:37,790 --> 00:06:41,120\nMoving through using the cache\nof the first packet.\n\n139\n00:06:41,120 --> 00:06:44,300\nSo that speeds things up significantly.\n\n140\n00:06:44,300 --> 00:06:46,940\nFrom a single packet it's no different.\n\n141\n00:06:46,940 --> 00:06:48,560\nYou're getting process switch.\n\n142\n00:06:48,560 --> 00:06:51,314\nBut for any communication that\nbreaks up into more than one packet,\n\n143\n00:06:51,314 --> 00:06:52,890\nwhich is almost everything.\n\n144\n00:06:52,890 --> 00:06:55,690\nThen that's where you're gonna\nsee your performance increase.\n\n145\n00:06:55,690 --> 00:06:57,300\nAnd that's a big deal.\n\n146\n00:06:57,300 --> 00:07:00,610\nAnd that's why Cisco became\nthe company they are today.\n\n147\n00:07:00,610 --> 00:07:01,980\nBack in the 80's and 90's,\n\n148\n00:07:01,980 --> 00:07:06,250\nthey had this technology that\nsignificantly improved performance.\n\n149\n00:07:06,250 --> 00:07:09,230\nAnd so in the 90's it was hard to\nfind an internet service provider\n\n150\n00:07:09,230 --> 00:07:11,760\nthat didn't use Cisco because of this.\n\n151\n00:07:11,760 --> 00:07:14,060\nIt was a big difference, big game changer.\n\n152\n00:07:15,720 --> 00:07:17,340\nBut they didn't stop there.\n\n153\n00:07:17,340 --> 00:07:19,270\nThey said you boy you know.\n\n154\n00:07:19,270 --> 00:07:23,780\nThat first packet gets processed switched,\nall the rest end up going by really fast.\n\n155\n00:07:23,780 --> 00:07:29,240\nWouldn't it be really cool if we could\nget it all to go on the data plane.\n\n156\n00:07:29,240 --> 00:07:31,820\nAnd just have data move through the router\nwithout even going to the control plane.\n\n157\n00:07:33,240 --> 00:07:37,760\nAnd so what they did, is they created\nCISCO express forwarding, CEF.\n\n158\n00:07:37,760 --> 00:07:41,966\nAnd with CEF all of your\nroutes are pre-cached.\n\n159\n00:07:41,966 --> 00:07:44,740\nThey're pre-cached down\nhere on the data plane.\n\n160\n00:07:44,740 --> 00:07:48,180\nSo even the first packet that comes along.\n\n161\n00:07:48,180 --> 00:07:50,740\nstays on the data plane and moves through.\n\n162\n00:07:50,740 --> 00:07:52,960\nAnd doesn't hit the control plane.\n\n163\n00:07:52,960 --> 00:07:56,310\nInstead, the control pane is\njust updating our cache and\n\n164\n00:07:56,310 --> 00:08:00,530\ndata moves at near wire\nspeed almost all the time.\n\n165\n00:08:00,530 --> 00:08:01,890\nI say almost, there are a few exceptions.\n\n166\n00:08:01,890 --> 00:08:03,670\nWe might choose to override it.\n\n167\n00:08:03,670 --> 00:08:06,990\nBut by default,\nif we leave our configuration alone.\n\n168\n00:08:06,990 --> 00:08:10,450\nMost of our traffic is gonna\ngo straight on the data plane.\n\n169\n00:08:10,450 --> 00:08:13,450\nEven that first packet which\nsolves problems with UDP.\n\n170\n00:08:13,450 --> 00:08:16,850\nUDP didn't really benefit\nfrom the fast switching.\n\n171\n00:08:16,850 --> 00:08:19,300\nBut UDP does benefit from CEF.\n\n172\n00:08:20,820 --> 00:08:24,110\nAll right.\nSo that is what CEF is.\n\n173\n00:08:24,110 --> 00:08:25,780\nThat's why it's awesome.\n\n174\n00:08:25,780 --> 00:08:28,300\nAnd why we want it.\n\n175\n00:08:28,300 --> 00:08:32,710\nEvery Cisco router that I've purchased or\nused in the last.\n\n176\n00:08:32,710 --> 00:08:34,630\nProbably the last four or five years.\n\n177\n00:08:34,630 --> 00:08:38,310\nHas had CEF enabled and\nrunning by default for IPV4.\n\n178\n00:08:39,720 --> 00:08:43,920\nFor IPV6, most CISCO routers\nship with IPV6 disabled.\n\n179\n00:08:43,920 --> 00:08:45,680\nSo you might need to turn it on for IPV6.\n\n180\n00:08:45,680 --> 00:08:48,760\nYou'll see the command turning\nit off in your config.\n\n181\n00:08:48,760 --> 00:08:50,670\nBut for most routers, it's already on.\n\n182\n00:08:50,670 --> 00:08:53,380\nSo it's not like it's something\nthat we have to configure.\n\n183\n00:08:53,380 --> 00:08:55,710\nunless you want to override it, right?\n\n184\n00:08:55,710 --> 00:08:57,880\nThere's not a whole lot of reason\nto override it though, but\n\n185\n00:08:57,880 --> 00:08:59,360\nyou might choose to.\n\n186\n00:08:59,360 --> 00:09:00,590\nSo, just keep that in mind.\n\n187\n00:09:00,590 --> 00:09:03,420\nReal simple technology is built in.\n\n188\n00:09:03,420 --> 00:09:04,450\nBut, how does it work?\n\n189\n00:09:04,450 --> 00:09:05,430\n>> Yeah.\n\n190\n00:09:05,430 --> 00:09:07,130\n>> How does it handle that?\n\n191\n00:09:07,130 --> 00:09:08,685\nAnd, why didn't Cisco think of it earlier?\n\n192\n00:09:08,685 --> 00:09:09,620\n>> [LAUGH]\n>> Why didn't other companies\n\n193\n00:09:09,620 --> 00:09:10,210\nthink of it earlier?\n\n194\n00:09:10,210 --> 00:09:13,900\nWell, the reason is,\nsome of the flaws in the old methods.\n\n195\n00:09:13,900 --> 00:09:14,720\nSome of the problems that we had.\n\n196\n00:09:15,770 --> 00:09:17,710\nWhen we talk about fast switching.\n\n197\n00:09:17,710 --> 00:09:18,630\nWith fast switching,\n\n198\n00:09:18,630 --> 00:09:22,330\nthat first packet went up here to\nour control plane, and we routed it.\n\n199\n00:09:23,350 --> 00:09:27,090\nThat means that the data plane\nreally had no idea about routes.\n\n200\n00:09:27,090 --> 00:09:31,140\nAnd so when it cached that route, when it\ncached it down here in the data plane for\n\n201\n00:09:31,140 --> 00:09:31,900\nfast switching.\n\n202\n00:09:31,900 --> 00:09:32,480\nWhat happens if that route goes bad?\nRight,\n\n203\n00:09:32,480 --> 00:09:36,520\nwhat happens if we fail\nover to another route?\n\n204\n00:09:36,520 --> 00:09:38,270\nThe data plane doesn't know about it.\n\n205\n00:09:38,270 --> 00:09:41,890\nSo they didn't have a way to make the data\nplane understand the routing table.\n\n206\n00:09:41,890 --> 00:09:43,830\nFast switching didn't do that.\n\n207\n00:09:43,830 --> 00:09:45,640\nSo instead what they did is they said,\n\n208\n00:09:45,640 --> 00:09:49,450\nall right, every time that a packet goes\nthrough the control plane to get routed,\n\n209\n00:09:49,450 --> 00:09:52,380\nit's just going to apply\nto that communication.\n\n210\n00:09:52,380 --> 00:09:56,090\nAnd that way the next communication will\nrun through the control plane again.\n\n211\n00:09:56,090 --> 00:09:57,290\nIn case the route is updated.\n\n212\n00:09:58,440 --> 00:10:01,250\nSo that was a problem with fast switching.\n\n213\n00:10:01,250 --> 00:10:03,070\nWe just didn't have a way\nto update the cache.\n\n214\n00:10:03,070 --> 00:10:04,190\nSo the cache never was updated.\n\n215\n00:10:04,190 --> 00:10:06,140\nThings aged out, and\nthey aged out immediately.\n\n216\n00:10:06,140 --> 00:10:08,720\nIt's that one flow, and that's it.\n\n217\n00:10:08,720 --> 00:10:12,120\nWith CEF they said,\nlet's make the planes talk.\n\n218\n00:10:12,120 --> 00:10:14,750\nLet's make it where any\ntime a route is added, or\n\n219\n00:10:14,750 --> 00:10:17,320\nremoved from the routing table\nhere in the control plane.\n\n220\n00:10:17,320 --> 00:10:20,740\nThat it immediately reaches out\nto the data plane and caches it.\n\n221\n00:10:20,740 --> 00:10:23,470\nRegardless of whether\nthere's a flow using it.\n\n222\n00:10:23,470 --> 00:10:25,870\nWith fast switching there\nhad to be a flow using it.\n\n223\n00:10:25,870 --> 00:10:27,830\nBut with CEF it doesn't.\n\n224\n00:10:27,830 --> 00:10:34,060\nYour entire routing table gets cached into\nthe data plane and CEF is ready to rock.\n\n225\n00:10:34,060 --> 00:10:36,050\nThat's the big difference, alright?\n\n226\n00:10:36,050 --> 00:10:40,810\nAnd that hash is what we call the FIB,\nor the forwarding information base.\n\n227\n00:10:41,840 --> 00:10:44,660\nThat FIB, that's the key database for CEF.\n\n228\n00:10:44,660 --> 00:10:47,680\nThat's how packets coming,\nin know where to go.\n\n229\n00:10:47,680 --> 00:10:49,670\nAnd they don't have to\nlook at the routing table.\n\n230\n00:10:49,670 --> 00:10:52,660\nThere's hashes for\neach of the networks that are created.\n\n231\n00:10:52,660 --> 00:10:55,600\nAnd it's compared to hashes of the packet.\n\n232\n00:10:55,600 --> 00:10:57,330\nAnd now why use hashes?\n\n233\n00:10:57,330 --> 00:10:59,850\nBecause we don't want to\nhave to code the header.\n\n234\n00:10:59,850 --> 00:11:03,180\nWe don't want to have to convert\nanymore than we absolutely have to.\n\n235\n00:11:03,180 --> 00:11:05,370\nSo it just calculates these hashes and\ncompares them together.\n\n236\n00:11:05,370 --> 00:11:07,440\nSo it could do it without\ndecoding the packet.\n\n237\n00:11:07,440 --> 00:11:10,500\nWhich is what gets us at\nthat near wire speed.\n\n238\n00:11:10,500 --> 00:11:15,130\nSo the FIB, the forwarding information\nbase, very, very key to CEF.\n\n239\n00:11:15,130 --> 00:11:15,790\nThat's the cache.\n\n240\n00:11:18,040 --> 00:11:19,890\nSome people actually call\nthat the route cache.\n\n241\n00:11:19,890 --> 00:11:22,340\nAnd even in some commands they'll\nrefer to it as the route cache.\n\n242\n00:11:22,340 --> 00:11:23,770\nSo just be aware of that.\n\n243\n00:11:23,770 --> 00:11:27,000\nSo that's what that FIB is.\n\n244\n00:11:27,000 --> 00:11:29,830\n>> We also have in\nthe CISCO Express Foarding,\n\n245\n00:11:29,830 --> 00:11:33,500\nnot only that FIB,\nthe Forwarding Information Base,\n\n246\n00:11:33,500 --> 00:11:36,140\nwe also have what we call\nthe adjacency table, too.\n\n247\n00:11:36,140 --> 00:11:38,440\nSo on the adjacency table.\n\n248\n00:11:38,440 --> 00:11:41,940\nIt really is actually learning about\nthe next devices actually over there.\n\n249\n00:11:41,940 --> 00:11:43,880\nAnd saying hey,\nwe got to keep that in mind,\n\n250\n00:11:43,880 --> 00:11:46,980\nand where the data is actually going to\nbe forwarded out of and which interface.\n\n251\n00:11:46,980 --> 00:11:49,720\nSo it really does go ahead and\npre-make the decisions for us.\n\n252\n00:11:49,720 --> 00:11:52,190\nVery easy on that data plan.\n\n253\n00:11:52,190 --> 00:11:57,100\n>> You know the fib, it basically says,\nwhen you get data that's headed for\n\n254\n00:11:57,100 --> 00:11:59,480\na destination, send it to this interface.\n\n255\n00:11:59,480 --> 00:12:01,220\nBut it doesn't say what\nhappens after that.\n\n256\n00:12:01,220 --> 00:12:03,370\nAnd the adjacency table has that next hop.\n\n257\n00:12:04,390 --> 00:12:06,540\nNot only does it have that, though,\nand here's the really cool part.\n\n258\n00:12:06,540 --> 00:12:09,010\nIt doesn't, it kind of blows your mind.\n\n259\n00:12:09,010 --> 00:12:11,910\nI get excited about this stuff,\nI don't know about other people.\n\n260\n00:12:11,910 --> 00:12:15,710\nBut what's in there is, it says,\nalright, this is your next hop.\n\n261\n00:12:15,710 --> 00:12:18,150\nAnd here's your layer two headers.\n\n262\n00:12:18,150 --> 00:12:19,620\nI've already made them for you.\n\n263\n00:12:19,620 --> 00:12:23,110\nYou know a router,\nwhen the router receives a packet.\n\n264\n00:12:23,110 --> 00:12:27,080\nThe layer three header, that's the source\nin destination, let's just say IP.\n\n265\n00:12:27,080 --> 00:12:27,590\n>> Right.\n>> Right.\n\n266\n00:12:27,590 --> 00:12:29,950\nTCPIP is the source and\ndestination IP address.\n\n267\n00:12:29,950 --> 00:12:32,320\nThat's gonna stay the same as\nwe've passed through routers.\n\n268\n00:12:32,320 --> 00:12:35,920\nBut your layer two information changes\nwith each router it goes through.\n\n269\n00:12:35,920 --> 00:12:39,390\nThe router has to actually edit\nyour packet, changes CRCs,\n\n270\n00:12:39,390 --> 00:12:40,680\nchanges all sorts of stuff.\n\n271\n00:12:40,680 --> 00:12:46,330\nWell with CEF, you're adjacency table\nalready has the layer two information for\n\n272\n00:12:46,330 --> 00:12:48,780\nthat next hop already in there.\n\n273\n00:12:48,780 --> 00:12:51,340\nSo it's effectively\nprebuilt those headers.\n\n274\n00:12:51,340 --> 00:12:54,450\nSo instead of having to build it\nevery time, it just swaps it out.\n\n275\n00:12:54,450 --> 00:12:55,918\nIt says here you go off\non the network you go.\n\n276\n00:12:55,918 --> 00:12:58,750\nSo no ARP look ups, and nothing like that.\n\n277\n00:12:58,750 --> 00:12:59,720\nIt's all all ready done.\n\n278\n00:12:59,720 --> 00:13:01,110\nIt's ready to turn on.\n\n279\n00:13:01,110 --> 00:13:03,730\nAnd that again makes things really fast.\n\n280\n00:13:03,730 --> 00:13:07,050\nSo the FIB tells us what\ninterface to go out.\n\n281\n00:13:07,050 --> 00:13:10,338\nAnd the adjacency table gives us\nthe final piece of information.\n\n282\n00:13:10,338 --> 00:13:11,490\nThe layer two data.\n\n283\n00:13:11,490 --> 00:13:15,660\nTo be able to jump out, and connect to\nthat next end point and move us along.\n\n284\n00:13:15,660 --> 00:13:18,600\nCombined, that's the CEF magic.\n\n285\n00:13:18,600 --> 00:13:20,020\nWonder twin powers unite.\n\n286\n00:13:20,020 --> 00:13:23,080\nThat's the, [LAUGH] that is CEF.\n\n287\n00:13:23,080 --> 00:13:25,050\nSo, real important technology.\n\n288\n00:13:25,050 --> 00:13:28,910\nA lot of people see that CEF\nenable command in the config and\n\n289\n00:13:28,910 --> 00:13:29,780\nthey just ignore it.\n\n290\n00:13:29,780 --> 00:13:31,050\nI don't know what that is.\n\n291\n00:13:31,050 --> 00:13:34,470\nBut, it's really cool and\nit's why Cisco equipment is so powerful.\n\n292\n00:13:34,470 --> 00:13:37,350\nWhy it's able to move stuff really,\nreally fast.\n\n293\n00:13:37,350 --> 00:13:40,170\nAnd we see it on almost\nall Cisco routers today.\n\n294\n00:13:40,170 --> 00:13:42,090\nAnd you even see it on a lot\nof the layer three switches.\n\n295\n00:13:42,090 --> 00:13:43,855\nSo it's definitely present there.\n\n296\n00:13:43,855 --> 00:13:45,950\nBecause it definitely\nimproves performance.\n\n297\n00:13:46,960 --> 00:13:47,820\n>> Yeah.\nYou can't help but\n\n298\n00:13:47,820 --> 00:13:52,300\nactually understand now, because we don't\nhave to actually switch planes anymore.\n\n299\n00:13:52,300 --> 00:13:54,930\nWhere everything is now\noperating on one plane.\n\n300\n00:13:54,930 --> 00:13:56,960\nWhy things can actually move a lot faster.\n\n301\n00:13:56,960 --> 00:14:00,860\nWith that forwarding information base\ncatching the route table right there.\n\n302\n00:14:00,860 --> 00:14:02,920\nDon't again have to slow down any part.\n\n303\n00:14:02,920 --> 00:14:04,200\nIt's already looking it up.\n\n304\n00:14:04,200 --> 00:14:07,020\nThe hashes without having\nto decode the data.\n\n305\n00:14:07,020 --> 00:14:10,636\nAnd then, with the adjacency table having\nthe MAC address headers ready to go.\n\n306\n00:14:10,636 --> 00:14:15,160\nOr the layer 2 header,\nI shouldn't just say MAC, ready to go.\n\n307\n00:14:15,160 --> 00:14:17,110\nHow data can be so fast.\n\n308\n00:14:17,110 --> 00:14:21,039\nAnd this is why we want to make sure that\nwe use the Cisco routers in our network.\n\n309\n00:14:22,440 --> 00:14:25,320\n>> Alright, so in this segment we've\ngot a chance to take a look at CEF.\n\n310\n00:14:25,320 --> 00:14:26,740\nWhat it was, and how it worked.\n\n311\n00:14:26,740 --> 00:14:30,940\nWe talked about our three data planes,\nthe management, control, and data planes.\n\n312\n00:14:30,940 --> 00:14:33,210\nAnd we got a chance to see\nthe components of CEF.\n\n313\n00:14:33,210 --> 00:14:36,287\nWhich were the FIB and\nthe adjacency table.\n\n314\n00:14:36,287 --> 00:14:38,420\nI hope you guys enjoyed the segment.\n\n315\n00:14:38,420 --> 00:14:40,420\nStay tuned, we've got more\nnetwork principles coming up.\n\n",
          "vimeoId": "109692166"
        },
        {
          "description": "In a small network environment, things work pretty easily, but in a large network, a few more problems start to arise and a possible solution could be to run a dynamic routing protocol. Viewers will hear about networking challenges including some of the challenges when sending data through multiple routers with redundant paths, some of the basic concepts of data moving through the network, as well as see demonstrations of the routing process as data moves through multiple routers.",
          "length": "756",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/ccnproute/1-2-General-Network-Challenges.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/ccnproute/1-2-General-Network-Challenges-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/ccnproute/1-2-General-Network-Challenges-sm.jpg",
          "title": "General Network Challenges",
          "transcript": "1\n00:00:00,000 --> 00:00:07,931\n[MUSIC]\n\n2\n00:00:07,931 --> 00:00:12,204\nIn this segment we're gonna take\na look at exam objective 1.2,\n\n3\n00:00:12,204 --> 00:00:15,980\nwhich is explain general\nnetwork challenges.\n\n4\n00:00:15,980 --> 00:00:18,780\nIn the CCNA you learned about\nnetworks that were very small.\n\n5\n00:00:18,780 --> 00:00:23,360\nAnd in a small network, things work pretty\neasily, it's kind of hard to break them.\n\n6\n00:00:23,360 --> 00:00:24,800\nBut in a large network,\n\n7\n00:00:24,800 --> 00:00:27,810\nwe get some interesting things that\ncreep up that we need to be aware off.\n\n8\n00:00:27,810 --> 00:00:30,840\nAnd we're gonna cover those here\nin this segment to make sure that\n\n9\n00:00:30,840 --> 00:00:32,320\nyou guys understand some of those.\n\n10\n00:00:32,320 --> 00:00:35,080\nThat way we get to the more\nadvanced technologies,\n\n11\n00:00:35,080 --> 00:00:36,180\nyou'll have these in\nthe back of your mind.\n\n12\n00:00:36,180 --> 00:00:39,090\nAnd you'll say hm, how does this\nfix that challenge that I've got?\n\n13\n00:00:39,090 --> 00:00:43,990\nOr oh, as I plan for advanced DIGRP,\nautonomous systems or\n\n14\n00:00:43,990 --> 00:00:46,640\nwhatever, how can I use that\nto correct these challenges?\n\n15\n00:00:47,650 --> 00:00:52,060\nThe first challenge that we want to\ntake a look at is unicast challenges.\n\n16\n00:00:52,060 --> 00:00:54,570\nWhen we have a unicast\nbased network right,\n\n17\n00:00:54,570 --> 00:00:59,200\nwhen we're sending unicast communications,\nthat's one host talking to another.\n\n18\n00:00:59,200 --> 00:01:02,020\nAnd if the two hosts are right\nhere on the same network,\n\n19\n00:01:02,020 --> 00:01:03,910\nunicast is no big deal, right?\n\n20\n00:01:03,910 --> 00:01:05,910\nThe unicast process is very simple.\n\n21\n00:01:05,910 --> 00:01:09,090\nWe send an art process to find\nthe MAC address of the remote,\n\n22\n00:01:09,090 --> 00:01:11,970\nwe add that to our cache, and\nthen we talk directly to the remote.\n\n23\n00:01:11,970 --> 00:01:13,320\nThat's it.\n\n24\n00:01:13,320 --> 00:01:17,760\nBut in a large network, where you've got\nmultiple networks, and you've got many,\n\n25\n00:01:17,760 --> 00:01:19,320\nmany routers,\n\n26\n00:01:19,320 --> 00:01:24,530\nyour system It has to be able to find out\nhow to get to a system somewhere else.\n\n27\n00:01:24,530 --> 00:01:27,270\nIt has to be able to find\na route through the network.\n\n28\n00:01:27,270 --> 00:01:30,240\nAnd our end user computers,\nthey can't do it.\n\n29\n00:01:30,240 --> 00:01:32,700\nIn theory, they could,\nif we really wanted to go crazy.\n\n30\n00:01:32,700 --> 00:01:36,480\nBut you'll have tons of end user stations,\nand if all of them are calculating rounds,\n\n31\n00:01:36,480 --> 00:01:37,170\nthat would be a big deal.\n\n32\n00:01:37,170 --> 00:01:38,710\nThat would be a problem.\n\n33\n00:01:38,710 --> 00:01:40,630\nSo instead our routers have to do that.\n\n34\n00:01:40,630 --> 00:01:43,920\nOur routers have to\nunderstand the big picture.\n\n35\n00:01:43,920 --> 00:01:48,050\nThey've got to know the whole network,\nso that we can make the right decision,\n\n36\n00:01:48,050 --> 00:01:49,490\nto send traffic to a destination.\n\n37\n00:01:50,590 --> 00:01:55,450\nNow, the old way of doing that was\nwith what were called static routes.\n\n38\n00:01:55,450 --> 00:01:58,230\nStatic routes are where\nwe manually go in and\n\n39\n00:01:58,230 --> 00:02:02,220\ntell each router how to\nget to each others, right?\n\n40\n00:02:02,220 --> 00:02:05,130\nSo each of these white lines really\nrepresents a separate network.\n\n41\n00:02:05,130 --> 00:02:08,210\nA network between these two routers, or\na network between these two routers,\n\n42\n00:02:08,210 --> 00:02:09,100\nand so on.\n\n43\n00:02:09,100 --> 00:02:10,820\nI only drew two actual networks here,\n\n44\n00:02:10,820 --> 00:02:15,070\nbut each of these links is\nreally at least one network.\n\n45\n00:02:15,070 --> 00:02:20,200\nAnd so, this router way over here, in\norder to get to this router on the other\n\n46\n00:02:20,200 --> 00:02:26,090\nside, has to learn about all the networks\nin between, and that can be really tough.\n\n47\n00:02:26,090 --> 00:02:27,840\nIf you've only got one way in and\n\n48\n00:02:27,840 --> 00:02:32,045\none way out like, here on this router,\nstatic route routes are really simple.\n\n49\n00:02:32,045 --> 00:02:36,035\nYou say, any traffic coming in from here,\njust goes out this interface.\n\n50\n00:02:36,035 --> 00:02:38,415\nAnd any traffic coming in from here,\ngoes out this interface.\n\n51\n00:02:38,415 --> 00:02:39,855\nReally simple.\n\n52\n00:02:39,855 --> 00:02:43,825\nBut in a large network,\nit gets out of hand right away, right?\n\n53\n00:02:43,825 --> 00:02:46,275\nWith this router there's\ntwo different pathways.\n\n54\n00:02:46,275 --> 00:02:48,545\nSo I can't just use a default gateway.\n\n55\n00:02:48,545 --> 00:02:51,530\nI can't use a gateway of last resort\nto say send this data out on interface.\n\n56\n00:02:51,530 --> 00:02:53,110\nI've got to be very specific.\n\n57\n00:02:53,110 --> 00:02:56,400\nUnder these conditions,\nsend traffic out this interface.\n\n58\n00:02:56,400 --> 00:02:59,060\nUnder other conditions,\nsend the traffic out this other interface.\n\n59\n00:02:59,060 --> 00:03:02,480\nAnd with static routes,\nwe're doing this manually, right.\n\n60\n00:03:02,480 --> 00:03:06,150\nOur goal is to achieve\nwhat's called convergence.\n\n61\n00:03:06,150 --> 00:03:09,640\nConvergence is when every router\nknows about every other router.\n\n62\n00:03:09,640 --> 00:03:12,460\nIt has the same exact routing\ntable as everybody else,\n\n63\n00:03:12,460 --> 00:03:14,980\nas far as how to get to a destination.\n\n64\n00:03:14,980 --> 00:03:18,400\nAnd with static routes,\nthat's you doing it.\n\n65\n00:03:18,400 --> 00:03:20,890\nAnd the instant you have a network\nfailure, like if this link goes down,\n\n66\n00:03:20,890 --> 00:03:25,650\nyour topology changes, and\nstatic routes might not recognize that.\n\n67\n00:03:25,650 --> 00:03:28,575\nAnd you could end up with\nsub-optimal routing pretty easily.\n\n68\n00:03:28,575 --> 00:03:31,440\nSub-optimal routing is where\nyour routes still work,\n\n69\n00:03:31,440 --> 00:03:35,830\ndata still gets from point A to point B,\nbut it's not as fast as it could be.\n\n70\n00:03:35,830 --> 00:03:37,720\nThere might be better routes\nthat aren't being used.\n\n71\n00:03:38,880 --> 00:03:40,810\nSub-optimal routing is\nthe best case scenario.\n\n72\n00:03:40,810 --> 00:03:43,690\nYou could end up with other things,\nlike an actual broken network.\n\n73\n00:03:43,690 --> 00:03:46,660\nYou could have your network fail, even\nthough you've got redundant links, and\n\n74\n00:03:46,660 --> 00:03:47,740\nyou're not taking advantage of it.\n\n75\n00:03:47,740 --> 00:03:49,500\nNow you've got an actual outage.\n\n76\n00:03:49,500 --> 00:03:53,210\nThat's one of our big challenges with\nunicast traffic is making sure that our\n\n77\n00:03:53,210 --> 00:03:57,610\nrouting is redundant, and\nthat we achieve convergence.\n\n78\n00:03:57,610 --> 00:04:02,130\nThat all the routers have the same\ninformation in the routing tables.\n\n79\n00:04:02,130 --> 00:04:04,130\nAll right, so, how do we do that, though?\n\n80\n00:04:04,130 --> 00:04:07,080\nI mean, if static routes aren't gonna\nwork for us, what's our alternative?\n\n81\n00:04:07,080 --> 00:04:10,920\n>> We gotta use things like dynamic\nrouting protocols to make sure\n\n82\n00:04:10,920 --> 00:04:14,870\nthat the routers can talk with each other\nand update each other when we do that.\n\n83\n00:04:14,870 --> 00:04:19,114\nIt is by doing this that if\na route does go down, or goes bad.\n\n84\n00:04:19,114 --> 00:04:21,740\n[LAUGH] You know, takes over to the 7-11.\n\n85\n00:04:21,740 --> 00:04:26,600\nIt just goes bad, that now those routers\nthat are using dynamic protocols can\n\n86\n00:04:26,600 --> 00:04:29,820\nupdate the other ones without you and\nI having to go in and\n\n87\n00:04:29,820 --> 00:04:31,730\nactually change the routes that's there.\n\n88\n00:04:31,730 --> 00:04:35,820\nSo dynamic rounding protocols\nare the way that we normally do go.\n\n89\n00:04:35,820 --> 00:04:37,800\n>> Yep, so that's definitely\ngonna be a piece of our network.\n\n90\n00:04:37,800 --> 00:04:40,303\nWhile we know we could use\nstatic routes everywhere,\n\n91\n00:04:40,303 --> 00:04:42,570\nit's typically not a good idea.\n\n92\n00:04:42,570 --> 00:04:45,640\nIn fact, on the exam, when you get\nto a lot of simulation questions,\n\n93\n00:04:45,640 --> 00:04:46,670\nthey'll tell you to do things, and\n\n94\n00:04:46,670 --> 00:04:51,260\nthey'll tell you specifically not to\nuse static routes cuz it's cheating.\n\n95\n00:04:51,260 --> 00:04:52,770\nIt's not what you'd use in real life.\n\n96\n00:04:52,770 --> 00:04:54,720\nSo, we need to be aware of that, and\n\n97\n00:04:54,720 --> 00:04:57,450\ndynamic routing protocols really provide\na lot of that flexibility for us.\n\n98\n00:04:57,450 --> 00:05:00,930\nThey give us rapid convergence,\nthey give us fault tolerance,\n\n99\n00:05:00,930 --> 00:05:03,610\nthey make sure the routers are all\nmaking the same decisions,\n\n100\n00:05:03,610 --> 00:05:06,010\nunless we mess with them,\nwhich we'll talk about later.\n\n101\n00:05:06,010 --> 00:05:09,950\nBut for the most part, a dynamic routing\nprotocol is exactly what we want.\n\n102\n00:05:09,950 --> 00:05:12,110\nAnd it overcomes the challenges\nof unicast routing.\n\n103\n00:05:13,490 --> 00:05:16,460\nAnother challenge that we\nhave is out of order packets.\n\n104\n00:05:16,460 --> 00:05:22,130\nWhen you have a network that has multiple\npathways to get to a destination,\n\n105\n00:05:22,130 --> 00:05:24,610\nyou can end up with out of order packets.\n\n106\n00:05:24,610 --> 00:05:27,795\nWhere, let's back track a little bit.\n\n107\n00:05:27,795 --> 00:05:30,455\nWhen I send data across the network,\nthere's something I have to\n\n108\n00:05:30,455 --> 00:05:33,815\nconform to called an MTU,\na maximum transmission unit.\n\n109\n00:05:33,815 --> 00:05:37,875\nAnd if I'm sending more data\nthan what my MTU is set at,\n\n110\n00:05:37,875 --> 00:05:40,075\nI've gotta break it up\ninto multiple packets.\n\n111\n00:05:40,075 --> 00:05:41,855\nNow an MTU is typically 1,500 bytes.\n\n112\n00:05:41,855 --> 00:05:45,055\n>> Right.\n>> Which is not a lot of room.\n\n113\n00:05:45,055 --> 00:05:45,755\nRight?\n\n114\n00:05:45,755 --> 00:05:48,990\nSo anytime you're sending more than\nthat you're gonna have to break it up.\n\n115\n00:05:48,990 --> 00:05:52,820\nAnd so when you send your data, you\nhave to attach sequence numbers to it so\n\n116\n00:05:52,820 --> 00:05:56,900\nthat on the other side it can be\nreassemble back into your original data.\n\n117\n00:05:56,900 --> 00:06:02,400\nWell, if your data out of order, the other\nside needs to know how to handle that.\n\n118\n00:06:02,400 --> 00:06:05,970\nAnd fortunately most systems have a TCP\nbuffer where they'll buffer the packets in\n\n119\n00:06:05,970 --> 00:06:08,900\nmemory until they get the right\nsequences and reorder it.\n\n120\n00:06:08,900 --> 00:06:11,940\nAnd if one's missing,\nthey'll just request a retransmit.\n\n121\n00:06:11,940 --> 00:06:13,860\nBut, those buffers can fill up.\n\n122\n00:06:13,860 --> 00:06:17,010\nYou can run out of room in the buffers,\nand then what do you do?\n\n123\n00:06:17,010 --> 00:06:19,930\nYou start dropping packets,\nyou start doing retransmits for\n\n124\n00:06:19,930 --> 00:06:22,150\ndata that you really didn't\nneed a retransmit of.\n\n125\n00:06:22,150 --> 00:06:24,440\nAnd it's just because\nthe data was out of order.\n\n126\n00:06:24,440 --> 00:06:30,060\nSo we need to ensure that not only are we\nsending our traffic along one path,\n\n127\n00:06:30,060 --> 00:06:33,250\nbut that the other sides understand to\nrespond back on that path, and that things\n\n128\n00:06:33,250 --> 00:06:36,920\nare going in the same direction to\navoid packets being sent out of order.\n\n129\n00:06:36,920 --> 00:06:40,690\nMost software can handle it, but\nsome software that can't, VPNs hate it.\n\n130\n00:06:40,690 --> 00:06:41,440\n>> Right.\n\n131\n00:06:41,440 --> 00:06:43,320\n>> VPNs can view it as\na man in the middle attack,\n\n132\n00:06:43,320 --> 00:06:45,930\nlike somebody is modifying\npackets causing a delay.\n\n133\n00:06:45,930 --> 00:06:49,340\nThat can cause things like\nIPSEC sessions to fail.\n\n134\n00:06:49,340 --> 00:06:52,840\nVoice Over IP, if you get your\npackets out of order in Voice Over IP,\n\n135\n00:06:52,840 --> 00:06:54,768\nit just throws away the out of order ones.\n\n136\n00:06:54,768 --> 00:06:57,768\nSo an out of order packet,\none coming in the wrong place,\n\n137\n00:06:57,768 --> 00:07:00,780\nit might as well have been\nlost in transmission, right?\n\n138\n00:07:00,780 --> 00:07:03,380\nSo it's kinda viewed\nthe same way as latency.\n\n139\n00:07:03,380 --> 00:07:05,480\nWhat are other things that are sensitive?\n\n140\n00:07:05,480 --> 00:07:06,720\nOh, firewalls.\n\n141\n00:07:06,720 --> 00:07:09,240\nIf you have a firewall that's\ndoing deep packet inspection,\n\n142\n00:07:09,240 --> 00:07:11,940\nDPI, they can view out of order packets.\n\n143\n00:07:11,940 --> 00:07:15,300\nAgain, as a man in the middle attack,\nand take defensive action.\n\n144\n00:07:15,300 --> 00:07:16,650\nSo this one might have been modified.\n\n145\n00:07:16,650 --> 00:07:18,030\nI'll throw that one out.\n\n146\n00:07:18,030 --> 00:07:22,140\nSo out of order packets will often\ntimes yield a lot of retransmits.\n\n147\n00:07:22,140 --> 00:07:23,710\nYou're sending data more than once.\n\n148\n00:07:23,710 --> 00:07:26,300\nIt's wasting bandwidth,\nand it's creating latency.\n\n149\n00:07:26,300 --> 00:07:28,370\nIt's slowing down your communications.\n\n150\n00:07:28,370 --> 00:07:29,110\nThose are our problems.\n\n151\n00:07:30,610 --> 00:07:32,230\nAll right,\nnow fortunately with the routing protocol,\n\n152\n00:07:32,230 --> 00:07:35,530\nif all of our routers are running the same\ndynamic routing protocol, and they're all\n\n153\n00:07:35,530 --> 00:07:39,210\nmaking the same decisions, you shouldn't\nend up with out of order packets.\n\n154\n00:07:39,210 --> 00:07:40,500\nThat shouldn't happen.\n\n155\n00:07:40,500 --> 00:07:44,340\nBut if you're using static routes,\nif you're overriding some of the decisions\n\n156\n00:07:44,340 --> 00:07:48,100\nthat a dynamic routing protocol is making,\nyou can end up with these.\n\n157\n00:07:48,100 --> 00:07:50,290\nOr if you're running more\nthan one routing protocol.\n\n158\n00:07:50,290 --> 00:07:54,290\nWhen you redistribute between them, you\ncan cause problems with the metrics, and\n\n159\n00:07:54,290 --> 00:07:56,250\nthat can result in out of order.\n\n160\n00:07:56,250 --> 00:08:00,360\nAlthough more commonly it leads to\nwhat we have in objective 1.2C,\n\n161\n00:08:00,360 --> 00:08:03,340\nwhich is asymmetric routing.\n\n162\n00:08:03,340 --> 00:08:07,890\nAsymmetric routing is where we\nsend traffic on one path, and\n\n163\n00:08:07,890 --> 00:08:10,375\nwe get the reply back on a different path.\n\n164\n00:08:10,375 --> 00:08:13,690\nSo, going back to my example here.\n\n165\n00:08:13,690 --> 00:08:18,620\nI might send traffic and go across these\ntop routers, but then on the reply,\n\n166\n00:08:18,620 --> 00:08:21,230\nwe come back and\nwe go across the bottom routers.\n\n167\n00:08:21,230 --> 00:08:21,810\nRight?\n\n168\n00:08:21,810 --> 00:08:24,070\nNow how's that matter?\n\n169\n00:08:24,070 --> 00:08:29,650\nWell across the top we might have\nhigh speed metro ethernet lines.\n\n170\n00:08:29,650 --> 00:08:33,070\nAcross the bottom we might have T1,\nslower serial lines.\n\n171\n00:08:33,070 --> 00:08:36,280\nWe might have huge amounts of\nbandwidth across the top, and\n\n172\n00:08:36,280 --> 00:08:37,870\nsmall across the bottom.\n\n173\n00:08:37,870 --> 00:08:41,590\nWe might have different rules,\nlike ACLs, or NAT rules.\n\n174\n00:08:41,590 --> 00:08:44,160\nWe might have NATs sitting in between\nsome of these on the bottom that we\n\n175\n00:08:44,160 --> 00:08:44,790\ndon't have on the top.\n\n176\n00:08:44,790 --> 00:08:47,910\nThese are the things\nthat can cause problems.\n\n177\n00:08:47,910 --> 00:08:51,790\nAsymmetric routing can be a good thing,\nit's not always bad, right?\n\n178\n00:08:51,790 --> 00:08:55,090\nIt can be good because if you\nsend traffic on one route and\n\n179\n00:08:55,090 --> 00:08:59,220\nreceive it on another,\nthey can be using separate data lines, and\n\n180\n00:08:59,220 --> 00:09:01,160\nyou can effectively increase\nyour bandwidth doing that.\n\n181\n00:09:01,160 --> 00:09:03,240\nRight?\nThat's a good scenario.\n\n182\n00:09:03,240 --> 00:09:05,930\nBut a bad scenario would\nbe things like NAT, right?\n\n183\n00:09:05,930 --> 00:09:09,025\nNetwork address translation can get\nconfused, and now you're losing data.\n\n184\n00:09:09,025 --> 00:09:10,395\nYou end up with unidirectional traffic.\n\n185\n00:09:10,395 --> 00:09:13,105\nYou send it, but\nyou never get anything back.\n\n186\n00:09:13,105 --> 00:09:14,395\nOther things, VPNs.\n\n187\n00:09:14,395 --> 00:09:17,025\nVPNs can get really finicky about this.\n\n188\n00:09:17,025 --> 00:09:21,305\nBecause a lot of VPNs, when they're\noperating in tunnel mode versus transport\n\n189\n00:09:21,305 --> 00:09:25,500\nmode In tunnel mode, in tunnel mode,\nthey're encrypting part of the TCP header,\n\n190\n00:09:25,500 --> 00:09:27,520\nand even part of the IP\nheader to an extent.\n\n191\n00:09:27,520 --> 00:09:29,400\nBut they're really TCP header and higher.\n\n192\n00:09:29,400 --> 00:09:33,440\nAnd so when we start manipulating their\npath, if we're changing port numbers or\n\n193\n00:09:33,440 --> 00:09:35,140\nwhatever, it can break the packet.\n\n194\n00:09:35,140 --> 00:09:36,540\nIt can view it as tampered with.\n\n195\n00:09:36,540 --> 00:09:38,310\nAnd your VPN tunnel will throw it away.\n\n196\n00:09:38,310 --> 00:09:40,830\nSo you start ending up with\nbroken communications there.\n\n197\n00:09:40,830 --> 00:09:43,750\n>> Yeah,\nwe also mentioned state full firewalls.\n\n198\n00:09:43,750 --> 00:09:46,380\nRemember if your firewall is\nbuilding that state, in other words,\n\n199\n00:09:46,380 --> 00:09:50,450\ndata has to go through your firewall,\nand the return traffic comes back, and\n\n200\n00:09:50,450 --> 00:09:52,345\nit comes in on a different interface.\n\n201\n00:09:52,345 --> 00:09:54,440\nThere's not state built for\nthat state full firewall, and\n\n202\n00:09:54,440 --> 00:09:55,530\nit may just drop the packet too.\n\n203\n00:09:56,948 --> 00:10:00,450\n>> Now if you're using a dynamic routing\nprotocol, it should take care of this.\n\n204\n00:10:00,450 --> 00:10:03,920\nIf all of our routers are running\nthe same dynamic routing protocol, and\n\n205\n00:10:03,920 --> 00:10:07,690\nthey're all configured the same way,\nthey'll learn the topology, and\n\n206\n00:10:07,690 --> 00:10:10,370\nthey'll make the same decisions.\n\n207\n00:10:10,370 --> 00:10:13,480\nThere's some older routing protocols\nthough, that can get broken pretty easily.\n\n208\n00:10:13,480 --> 00:10:15,810\nThey're not on the exam anymore,\ncuz really,\n\n209\n00:10:15,810 --> 00:10:17,790\nyou shouldn't really be running them.\n\n210\n00:10:17,790 --> 00:10:20,010\nBut the newer routing protocols\nreally take care of it.\n\n211\n00:10:20,010 --> 00:10:22,930\nSo the only time we end up\nwith this asymmetric routing\n\n212\n00:10:22,930 --> 00:10:24,850\nare really just a couple of scenarios.\n\n213\n00:10:24,850 --> 00:10:28,820\nThere would be the scenario where we\noverride our routing protocol settings.\n\n214\n00:10:28,820 --> 00:10:32,750\nSo in OSPF, EIGRP, they've all got where\nyou can manipulate their algorithm.\n\n215\n00:10:32,750 --> 00:10:37,490\nAnd if you manipulate the algorithm on one\nrouter, it can cause that one router to\n\n216\n00:10:37,490 --> 00:10:41,620\nmake different decisions than other\nrouters, resulting in asymmetric routing.\n\n217\n00:10:41,620 --> 00:10:42,790\nIf you're gonna modify the metrics,\n\n218\n00:10:42,790 --> 00:10:45,990\nit's a good idea to modify\nthe metrics on all of your routers,\n\n219\n00:10:45,990 --> 00:10:49,420\nso they all take advantage of that, and\nthey're all making the same decisions.\n\n220\n00:10:50,720 --> 00:10:53,160\nThe other scenario is\nwith something like BGP.\n\n221\n00:10:53,160 --> 00:10:57,260\nBorder gateway protocol, where you\ndon't get to choose the whole path.\n\n222\n00:10:57,260 --> 00:10:58,860\nYou don't see the whole Internet.\n\n223\n00:10:58,860 --> 00:11:01,130\nYou really just see autonomous systems.\n\n224\n00:11:01,130 --> 00:11:04,450\nAnd what happens inside of those\nautonomous systems is invisible to you.\n\n225\n00:11:04,450 --> 00:11:09,270\nSo you know the AS to contact, but inside\nof that you have no idea what to do.\n\n226\n00:11:09,270 --> 00:11:12,670\nAnd there,\nyou're at the mercy of the remote end.\n\n227\n00:11:12,670 --> 00:11:13,600\nIt's not your network.\n\n228\n00:11:13,600 --> 00:11:15,440\nYou can't control it.\n\n229\n00:11:15,440 --> 00:11:19,530\nBut there are certain ways that we can\ninfluence communications to make sure that\n\n230\n00:11:19,530 --> 00:11:22,610\ndoesn't happen, and\nwe'll see those later on in this show.\n\n231\n00:11:22,610 --> 00:11:24,010\nNot in this very segment,\n\n232\n00:11:24,010 --> 00:11:27,592\nbut in other topics such as when\nwe move to advanced routing.\n\n233\n00:11:27,592 --> 00:11:30,770\nWe'll see ways to manipulate\nthe decisions that other people make.\n\n234\n00:11:30,770 --> 00:11:35,050\nWe can't tell them what to do, but we can\nhelp them make the decision that we want.\n\n235\n00:11:35,050 --> 00:11:36,070\nBy feeding them the right data.\n\n236\n00:11:36,070 --> 00:11:39,280\nSo when you get a chance to see that,\nthat's especially important with BGP.\n\n237\n00:11:40,920 --> 00:11:43,600\nAll right, so\nwhen it comes to network challenges,\n\n238\n00:11:43,600 --> 00:11:45,450\nwe've identified a couple\nof different things here.\n\n239\n00:11:45,450 --> 00:11:49,170\nI think the solution to all of them really\nis to run a dynamic routing protocol.\n\n240\n00:11:49,170 --> 00:11:53,200\nAnd to be careful with any\nmodifications you make to your metrics.\n\n241\n00:11:53,200 --> 00:11:53,860\nRight, Ronnie?\n\n242\n00:11:53,860 --> 00:11:54,760\n>> Right. Yep. So for us,\n\n243\n00:11:54,760 --> 00:11:59,080\ndynamic routing protocols are the solution\nto many of the problems that we're facing.\n\n244\n00:11:59,080 --> 00:12:02,910\nWe address the unicast issues\nthat we actually can deal with.\n\n245\n00:12:02,910 --> 00:12:05,970\nAnd also talked about\nthe out of order packets.\n\n246\n00:12:05,970 --> 00:12:10,020\nRemember that data that comes in,\nnot in the sequence that it needs to be.\n\n247\n00:12:10,020 --> 00:12:12,730\nIt has to be able to be resequenced and\n\n248\n00:12:12,730 --> 00:12:15,530\nput back in before the end\nuser device actually gets it.\n\n249\n00:12:15,530 --> 00:12:18,790\nAnd we also talked about the possibility\nof asymmetric routing too,\n\n250\n00:12:18,790 --> 00:12:22,390\nwhere data may go out one interface, but\ncome in on a different interface for us.\n\n251\n00:12:22,390 --> 00:12:25,900\nAnd these are all issues we have to\ndeal with, and our routers can help us\n\n252\n00:12:25,900 --> 00:12:28,880\nespecially if we actually know what\nto turn on, and what not to turn on.\n\n253\n00:12:30,520 --> 00:12:32,810\n>> All right,\nwell I hope you guys enjoyed the segment.\n\n254\n00:12:32,810 --> 00:12:35,040\nStay tuned we've got more\nnetwork principles coming up.\n\n",
          "vimeoId": "109692167"
        },
        {
          "description": "When it comes to IP operations, it behaves one way for local communication and a different way for remote communications. Viewers will hear about IP operations, basic router functions when packets are too large or bounce around multiple routers and the process of breaking large data into segments for data delivery.",
          "length": "1307",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/ccnproute/1-3-IP-Operations-Pt1.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/ccnproute/1-3-IP-Operations-Pt1-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/ccnproute/1-3-IP-Operations-Pt1-sm.jpg",
          "title": "IP Operations Part 1",
          "transcript": "1\n00:00:00,025 --> 00:00:05,264\n[SOUND] In this segment, we're gonna\n\n2\n00:00:05,264 --> 00:00:09,997\ntake a look at objective 1.3,\n\n3\n00:00:09,997 --> 00:00:14,909\nwhich is describe IP operations.\n\n4\n00:00:14,909 --> 00:00:18,932\nAnd what that means is that they want you\nto understand exactly what happens to data\n\n5\n00:00:18,932 --> 00:00:22,139\nas it moves across your network,\nas it passes through routers and\n\n6\n00:00:22,139 --> 00:00:24,575\nit eventually reaches its destination.\n\n7\n00:00:24,575 --> 00:00:27,390\nThere's a whole lot of activity\ngoing on the back end and\n\n8\n00:00:27,390 --> 00:00:30,570\nthis is fundamental knowledge\nthat we need to be aware of.\n\n9\n00:00:30,570 --> 00:00:35,680\nSo what I wanna do is kind of take a look\nat a network and see that process.\n\n10\n00:00:35,680 --> 00:00:37,355\nNow when we talk about data\nmoving across our network,\n\n11\n00:00:37,355 --> 00:00:40,760\nthere's really two different\nmethods that it can move.\n\n12\n00:00:40,760 --> 00:00:46,460\nIf we have two hosts that are on\nthe same network talking to each other,\n\n13\n00:00:46,460 --> 00:00:47,780\nrouters aren't involved.\n\n14\n00:00:47,780 --> 00:00:49,660\nSo that's a local communication.\n\n15\n00:00:49,660 --> 00:00:52,130\nLocal communications are handled one way.\n\n16\n00:00:52,130 --> 00:00:56,570\nBut if I have two hosts that\nare on two different networks,\n\n17\n00:00:56,570 --> 00:00:57,930\nrouters have to get involved.\n\n18\n00:00:57,930 --> 00:01:00,880\nThose are routed, or\nremote communications.\n\n19\n00:01:00,880 --> 00:01:02,760\nSo when it comes to IP.\n\n20\n00:01:02,760 --> 00:01:06,560\nIt behaves one way for local\ncommunications, and a different way for\n\n21\n00:01:06,560 --> 00:01:08,090\nremote communications.\n\n22\n00:01:08,090 --> 00:01:11,270\nAnd that's because we need to bring\nrouters in to help with the remotes.\n\n23\n00:01:11,270 --> 00:01:13,450\nBut the local side's really easy.\n\n24\n00:01:13,450 --> 00:01:15,290\nWhat's the process for\na local communication?\n\n25\n00:01:15,290 --> 00:01:16,690\nIt's really straightforward.\n\n26\n00:01:16,690 --> 00:01:17,340\n>> Yeah.\n\n27\n00:01:17,340 --> 00:01:21,350\nWhen we have two devices on the same IP\nnetwork, what we're gonna see is that\n\n28\n00:01:21,350 --> 00:01:24,300\nthose devices really don't have\nto bring the IP layer in to it.\n\n29\n00:01:24,300 --> 00:01:27,590\nWhat we have to do,\nis be able to do an ARP,\n\n30\n00:01:27,590 --> 00:01:30,780\nand once our device says hey run\nwith side, we'll do an ARP and\n\n31\n00:01:30,780 --> 00:01:34,810\nwe get the MAC address back, then it gets\nentered into that MAC address table and\n\n32\n00:01:34,810 --> 00:01:38,010\nthen we directly are able to\ncommunicate on that same network.\n\n33\n00:01:38,010 --> 00:01:40,950\nSo there's really not a lot\nof involved process there,\n\n34\n00:01:40,950 --> 00:01:44,230\nit's just about those two devices\nlearning each other's MAC address, and\n\n35\n00:01:44,230 --> 00:01:48,330\nnow they have direct communication\non that same physical network.\n\n36\n00:01:48,330 --> 00:01:50,250\n>> Different network protocols\nhandle this different ways, but\n\n37\n00:01:50,250 --> 00:01:54,200\nwith IP which is what you'll see on\nthe exam, it's based on your subnet mass.\n\n38\n00:01:54,200 --> 00:01:57,570\nSo it just looks at the IP\naddress of the destination and\n\n39\n00:01:57,570 --> 00:02:01,710\naccording to your subnet mass if that's\non your subnet it goes straight to it.\n\n40\n00:02:01,710 --> 00:02:04,470\nIt runs exactly like Ronnie said and\nthat's it.\n\n41\n00:02:04,470 --> 00:02:05,120\nSuper simple.\n\n42\n00:02:06,180 --> 00:02:10,970\nBut, what if it looks at that destination\naddress, compares it to your subnet, and\n\n43\n00:02:10,970 --> 00:02:13,850\nsays, Ooh, this is not on my subnet.\n\n44\n00:02:13,850 --> 00:02:17,640\nIf it's not on your subnet,\nthen it's gonna go through a router.\n\n45\n00:02:17,640 --> 00:02:22,040\nAnd your hosts, your end units here,\nwhether they're Linux, Mac, Windows,\n\n46\n00:02:22,040 --> 00:02:27,470\nwhatever, they're going to have\na default router that they can talk to.\n\n47\n00:02:27,470 --> 00:02:31,600\nNow in Cisco land,\nwe call that the gateway of last resort.\n\n48\n00:02:31,600 --> 00:02:34,720\nBut for the operating systems,\nthey call it different things right.\n\n49\n00:02:34,720 --> 00:02:37,370\nYou'll see it most commonly\nreferred to as a default gateway.\n\n50\n00:02:37,370 --> 00:02:40,570\nThe default gateway just says if I want to\ntalk to somebody on a different network\n\n51\n00:02:40,570 --> 00:02:42,630\nthan me, here's the router I go and\ntalk to.\n\n52\n00:02:42,630 --> 00:02:43,680\nAll right.\n\n53\n00:02:43,680 --> 00:02:46,760\nAnd most systems only have support for\none default gateway.\n\n54\n00:02:46,760 --> 00:02:49,710\nSo you specify the router\nyou want them to go to.\n\n55\n00:02:49,710 --> 00:02:53,140\nThey take that traffic and\nthey send it to that router.\n\n56\n00:02:53,140 --> 00:02:57,090\nAnd that router, then,\nhas to figure out where to send the data.\n\n57\n00:02:57,090 --> 00:03:01,430\nAnd that data, then, starts bouncing\nfrom router to router to router,\n\n58\n00:03:01,430 --> 00:03:05,900\nalong the way, until it reaches\nthe actual destination, and\n\n59\n00:03:05,900 --> 00:03:09,850\nthis router is able to talk directly to\nthe other host in the same way that Ronnie\n\n60\n00:03:09,850 --> 00:03:12,420\nwas talking about, because that's\na local communication at that point.\n\n61\n00:03:12,420 --> 00:03:16,460\nThe router can do a ARP broadcast and\nhit that destination machine,\n\n62\n00:03:16,460 --> 00:03:19,820\nwhereas we can't do a broadcast\nacross all these routers.\n\n63\n00:03:19,820 --> 00:03:24,320\nThat router is local, they can find it and\nsend the data to that end unit, right?\n\n64\n00:03:24,320 --> 00:03:28,500\nBut, what's actually happening\nto our data as it moves along?\n\n65\n00:03:28,500 --> 00:03:34,050\nWell, let me bring up another diagram\nhere, I've got one parked somewhere, here.\n\n66\n00:03:35,100 --> 00:03:40,920\nAs our data moves across the network,\nit's moving through the OSI model, right?\n\n67\n00:03:40,920 --> 00:03:43,790\nAnd the OSI model, you guys should\nbe old hand at this, right?\n\n68\n00:03:43,790 --> 00:03:46,410\nYou should have it memorized,\nand know it by heart.\n\n69\n00:03:46,410 --> 00:03:48,820\nYou should have known that\nbefore your CCNA exam, but\n\n70\n00:03:48,820 --> 00:03:52,330\nit's the seven layer communication\nmodel that networks use, and\n\n71\n00:03:52,330 --> 00:03:58,000\nrouters are layer three devices and\nas our data is run through the OSI model,\n\n72\n00:03:58,000 --> 00:04:01,630\nyou'll see where additional\nheaders are being added.\n\n73\n00:04:01,630 --> 00:04:05,170\nWell, at layer three,\nthat's where our source and\n\n74\n00:04:05,170 --> 00:04:07,830\nour destination IP addresses are set.\n\n75\n00:04:07,830 --> 00:04:09,440\nThat's the start and\n\n76\n00:04:09,440 --> 00:04:14,905\nthe finish of our communication, where our\ndata came from and where it's going to.\n\n77\n00:04:14,905 --> 00:04:17,860\nYour router's looking at the layer\nthree data to make its decision.\n\n78\n00:04:17,860 --> 00:04:19,500\nThat's why they're called\nlayer three devices,\n\n79\n00:04:19,500 --> 00:04:21,890\ncuz that's how they make their decisions.\n\n80\n00:04:21,890 --> 00:04:26,430\nBut it's actually layer two,\nthis guy right here, the frame level,\n\n81\n00:04:26,430 --> 00:04:27,470\nnot the packet.\n\n82\n00:04:27,470 --> 00:04:32,920\nThe layer two frame contains a source and\ndestination MAC address and\n\n83\n00:04:32,920 --> 00:04:38,000\nthat's what steers your data when\nit's on an individual network.\n\n84\n00:04:38,000 --> 00:04:39,170\nSo if you've ever wondered,\n\n85\n00:04:39,170 --> 00:04:43,760\nwhen my host goes to send data\nthrough a default gateway, how does\n\n86\n00:04:43,760 --> 00:04:48,540\nit know to send it to the gateway, if the\nIP address says it's going somewhere else.\n\n87\n00:04:48,540 --> 00:04:53,480\nI've got a little worksheet that I use\nto kind of demonstrate that process and\n\n88\n00:04:53,480 --> 00:04:57,140\nwhat's actually happening as\nwe move through a network.\n\n89\n00:04:57,140 --> 00:05:01,240\nAnd so I've got a network drawn here, and\nI have to put a lot of data in it, so\n\n90\n00:05:01,240 --> 00:05:03,510\nI have to keep it kind of\nzoomed in to see everything.\n\n91\n00:05:03,510 --> 00:05:05,050\nBut just at a high level,\n\n92\n00:05:05,050 --> 00:05:10,770\nI've got PC1 that wants to talk to\nServer 1, all the way on the other side.\n\n93\n00:05:10,770 --> 00:05:13,235\nAnd I've got routers\nthat are in between it.\n\n94\n00:05:13,235 --> 00:05:14,375\nThis happens all the time, right?\n\n95\n00:05:14,375 --> 00:05:19,395\nIf you communicate out to the Internet,\nif I want to reach out to the Internet and\n\n96\n00:05:19,395 --> 00:05:22,555\ntalk to somebody,\nlet me do a trace route to somebody.\n\n97\n00:05:22,555 --> 00:05:24,165\nWe'll do the itvpro website.\n\n98\n00:05:25,175 --> 00:05:28,885\nSo I'm not in the same building\nas the itvpro website,\n\n99\n00:05:28,885 --> 00:05:32,380\nI'm in a completely separate building,\nand so if I do a trace route I'll see\n\n100\n00:05:32,380 --> 00:05:36,300\nall the hops that I go through, all the\ndifferent routers that I passed through.\n\n101\n00:05:36,300 --> 00:05:41,780\nThis is our internal fire wall,and then\nI'm hitting our ISP which is GRU and\n\n102\n00:05:41,780 --> 00:05:46,360\nI'm bouncing around through GRU's network\nand we'll start to see more routes\n\n103\n00:05:46,360 --> 00:05:51,310\nas we move from our ISP into the Internet\nbackbones and to the destination.\n\n104\n00:05:51,310 --> 00:05:55,120\nEach of these hops represents\na router that's involved\n\n105\n00:05:55,120 --> 00:05:57,740\nin making a decision as\nto where to send my data.\n\n106\n00:05:57,740 --> 00:05:58,780\nAll right.\n\n107\n00:05:58,780 --> 00:06:02,360\nAnd each router is manipulating\nthe layer two data,\n\n108\n00:06:02,360 --> 00:06:07,410\nthe layer two data is\nchanging at every single hop.\n\n109\n00:06:07,410 --> 00:06:13,400\nSo when my data reaches the destination,\nlayer three and higher is untouched.\n\n110\n00:06:13,400 --> 00:06:17,597\nBut layer two has been completely\nre-written and usually doesn't match\n\n111\n00:06:17,597 --> 00:06:21,400\nanything at all from the original\nlayer two header that I sent out.\n\n112\n00:06:21,400 --> 00:06:25,780\nLayer two is limited to a local network\nwhen you pass the routers it's changed.\n\n113\n00:06:25,780 --> 00:06:28,080\nSo let's see that in operation.\n\n114\n00:06:28,080 --> 00:06:33,270\nI'm going to take PC1 here and\nI don't want to mess around with NAT so\n\n115\n00:06:33,270 --> 00:06:35,820\nI'll just do all internal networks here.\n\n116\n00:06:35,820 --> 00:06:39,530\nBut NAT is an extra level of complexity\nthat gets kind of added on here cuz with\n\n117\n00:06:39,530 --> 00:06:42,960\nnetwork address translation you might\nbe changing your layer three data.\n\n118\n00:06:42,960 --> 00:06:45,071\nBut let’s just assume these\nare all local networks.\n\n119\n00:06:45,071 --> 00:06:52,198\nSo I got PC1 here, and\nPC1 is 192.168.0.100,\n\n120\n00:06:52,198 --> 00:06:55,021\nand I’ve got my router,\n\n121\n00:06:55,021 --> 00:07:00,945\nwhich is 192.168.0.1 on that network.\n\n122\n00:07:00,945 --> 00:07:03,199\nSo that’s its IP address.\n\n123\n00:07:05,530 --> 00:07:08,350\nThat's its IP address right there.\n\n124\n00:07:08,350 --> 00:07:16,340\nRouter 1 then connects to other networks.\n\n125\n00:07:16,340 --> 00:07:21,748\nMaybe it connects to 192.168.5.1 and\n\n126\n00:07:21,748 --> 00:07:24,970\nlet's just assume these are all Class Cs,\nright?\n\n127\n00:07:24,970 --> 00:07:26,930\nI don't want to get too crazy\nworrying about subnets and\n\n128\n00:07:26,930 --> 00:07:28,730\nthings that make this more complex.\n\n129\n00:07:28,730 --> 00:07:31,060\nSo these are all just /24s, right?\n\n130\n00:07:32,230 --> 00:07:39,805\nSo it'll be 5.1 and router 2 over here\nwill be, where's my text box, there.\n\n131\n00:07:39,805 --> 00:07:44,380\n192.168.5.2, and as we continue\nto pass across this network,\n\n132\n00:07:44,380 --> 00:07:49,325\nthis might be 192.168.10.2,\n\n133\n00:07:49,325 --> 00:07:53,130\nand so on, as we pass along.\n\n134\n00:07:53,130 --> 00:07:57,090\nAnd I'm just using that final\noctet to represent the router, but\n\n135\n00:07:57,090 --> 00:08:02,142\nthese IPs could be whatever you wanted\nthem to be And we'll say this is .15.3.\n\n136\n00:08:02,142 --> 00:08:06,325\nAnd the person that I actually\nwanna talk to is way down here and\n\n137\n00:08:06,325 --> 00:08:10,682\nmaybe their address is\n192.168.15.200 Right.\n\n138\n00:08:10,682 --> 00:08:14,783\nSo way back here at the start\nI know my IP address is\n\n139\n00:08:14,783 --> 00:08:19,703\n192.168.0.100 and its a class C or /24.\n\n140\n00:08:19,703 --> 00:08:21,600\nSo 192.168.0 is my subnet.\n\n141\n00:08:22,810 --> 00:08:31,112\nI want to talk to this guy\ndown here 192.168.15.200.\n\n142\n00:08:31,112 --> 00:08:36,061\nI can look at the IP address,\ncompare it to my subnet mask /24, and\n\n143\n00:08:36,061 --> 00:08:37,750\nI can see they don't match.\n\n144\n00:08:37,750 --> 00:08:39,250\nThey don't match, so\n\n145\n00:08:39,250 --> 00:08:44,800\nthe host way back here says I\ncan't get to that guy directly.\n\n146\n00:08:44,800 --> 00:08:50,170\nI'm going to have to go through my\ndefault gateway, through 192.168.0.1.\n\n147\n00:08:50,170 --> 00:08:55,140\nSo it builds up the initial\nframe to be sent on the network.\n\n148\n00:08:55,140 --> 00:08:58,440\nAnd that takes us back to,\nwhat did I do with that other slide?\n\n149\n00:08:58,440 --> 00:09:00,260\nHere, that takes us back to this.\n\n150\n00:09:00,260 --> 00:09:04,330\nWe've got to take our data and we've got\nto add the appropriate information so\n\n151\n00:09:04,330 --> 00:09:09,390\nthat our system knows, yes I'm going\nto 192.168.15.200 yeah I'm going to\n\n152\n00:09:09,390 --> 00:09:14,830\nthat other machine, but I need to stop at\nthe default gateway first to get there.\n\n153\n00:09:14,830 --> 00:09:19,370\nAnd it's the layer 3 and\nlayer 2 headers that allow us to do that.\n\n154\n00:09:19,370 --> 00:09:23,277\nSo if I go back to that diagram.\n\n155\n00:09:23,277 --> 00:09:27,980\nHere's PC1 building up the layer 2 and\nlayer 3.\n\n156\n00:09:27,980 --> 00:09:30,030\nThe layer 3 is the easiest, right?\n\n157\n00:09:30,030 --> 00:09:31,980\nWe got our source IP.\n\n158\n00:09:31,980 --> 00:09:35,890\nThat's not exactly what I wanted.\n\n159\n00:09:35,890 --> 00:09:38,908\n[LAUGH] Where is my.\n\n160\n00:09:38,908 --> 00:09:41,460\nThis is why makes me angry sometimes.\n\n161\n00:09:41,460 --> 00:09:47,940\nAll right, so here well just add on to the\nsource IP so its going to be 192.168.0.\n\n162\n00:09:47,940 --> 00:09:48,690\nWhat am I?\n\n163\n00:09:48,690 --> 00:09:49,190\n100?\n>> Mmhm.\n\n164\n00:09:49,190 --> 00:09:52,176\n>> There we go and [LAUGH] our destination\n\n165\n00:09:52,176 --> 00:09:59,120\nIP, let me clean this up here in\na second is 192.168.15.200, right?\n\n166\n00:10:00,250 --> 00:10:05,070\nThose are the ones that I wanna talk\nto to get to where I'm going, right?\n\n167\n00:10:05,070 --> 00:10:08,540\nMy source and\nmy destination IP right there, all right.\n\n168\n00:10:10,860 --> 00:10:13,980\nSource and destination MAC\naddress are a different story.\n\n169\n00:10:13,980 --> 00:10:16,370\nCan I send an art broadcast?\n\n170\n00:10:16,370 --> 00:10:22,100\nAll the way across these routers to\nfind out the MAC address of server 1.\n\n171\n00:10:22,100 --> 00:10:23,420\nNot gonna happen, right?\n\n172\n00:10:23,420 --> 00:10:26,390\nRouters block broadcasts by default.\n\n173\n00:10:26,390 --> 00:10:28,580\nYou can do things like directed broadcast,\n\n174\n00:10:28,580 --> 00:10:30,450\nwhere you can manipulate\nthat a little bit.\n\n175\n00:10:30,450 --> 00:10:34,110\nBut by default, routers drop broadcasts.\n\n176\n00:10:34,110 --> 00:10:37,500\nSo if that's what's happening here\nI can't find this MAC address,\n\n177\n00:10:37,500 --> 00:10:39,370\nbut I don't need this MAC address.\n\n178\n00:10:39,370 --> 00:10:42,980\nBecause I need some way to say that my\npacket is not going to that machine but\n\n179\n00:10:42,980 --> 00:10:45,960\ninstead my packet is going to the router.\n\n180\n00:10:45,960 --> 00:10:47,870\nBut if I change the destination IP,\n\n181\n00:10:47,870 --> 00:10:51,250\nhow will it remember who\nI was going to get to?\n\n182\n00:10:51,250 --> 00:10:54,560\nSo our layer two header is used for\nthat instead.\n\n183\n00:10:54,560 --> 00:10:56,430\nAnd so when I go into my layer two header.\n\n184\n00:10:58,270 --> 00:10:59,960\nYou know I should remember\nthis keyboard shortcut by now.\n\n185\n00:10:59,960 --> 00:11:02,030\nIt's like control two or something.\n\n186\n00:11:02,030 --> 00:11:03,760\nI'm gonna put in my source MAC address.\n\n187\n00:11:03,760 --> 00:11:05,260\nNow, I'll just make one up right.\n\n188\n00:11:05,260 --> 00:11:11,256\nSo let's say its ABCD.1234.0001.\n\n189\n00:11:11,256 --> 00:11:12,916\nAll right, that's my MAC address.\n\n190\n00:11:12,916 --> 00:11:20,080\nAnd for the, well, we'll say 100 so that I\ncan remember that that's actually my PC.\n\n191\n00:11:20,080 --> 00:11:25,950\nAnd the for the destination MAC address, I\nneed to fill in the router's MAC address.\n\n192\n00:11:25,950 --> 00:11:27,840\nI can do an ARP broadcast for that.\n\n193\n00:11:27,840 --> 00:11:32,760\nIf I know my default gateway is\n192.168.0.1, I can do an ARP broadcast and\n\n194\n00:11:32,760 --> 00:11:34,670\nsay, what's the MAC address for that IP?\n\n195\n00:11:34,670 --> 00:11:36,780\nAnd the router will respond and\nsay, hey that's me.\n\n196\n00:11:36,780 --> 00:11:41,610\nHere's my MAC address, and I can add that\ninto my ARP cache and populate my packet.\n\n197\n00:11:41,610 --> 00:11:45,370\nAnd so I'll put in that MAC address\nhere that I'm gonna talk to and\n\n198\n00:11:45,370 --> 00:11:50,990\nit may be completely different\nfrom whatever I have.\n\n199\n00:11:50,990 --> 00:11:58,450\nSo it might be something\nlike 0E12.47C1.0EF1,\n\n200\n00:11:58,450 --> 00:12:03,370\nsomething crazy like that, right?\n\n201\n00:12:03,370 --> 00:12:05,760\nNot that that's crazy, but just different.\n\n202\n00:12:05,760 --> 00:12:13,060\nSo I punch that in, and now when my frame\ngoes out on the network, because that data\n\n203\n00:12:13,060 --> 00:12:19,090\nhas been manipulated my packet has\ntwo different destinations, right?\n\n204\n00:12:19,090 --> 00:12:23,630\nThe destination at layer three,\nthat's the end to end.\n\n205\n00:12:23,630 --> 00:12:25,730\nPC one to server one.\n\n206\n00:12:25,730 --> 00:12:28,240\nWho I am and who I'm trying to get to.\n\n207\n00:12:28,240 --> 00:12:34,175\nBut Layer 2, that's just me and\nmy next hop.\n\n208\n00:12:34,175 --> 00:12:36,185\nThe next person I'm trying to get to.\n\n209\n00:12:36,185 --> 00:12:38,495\nThe default gateway, right?\n\n210\n00:12:38,495 --> 00:12:44,065\nSo when I throw this frame on the network,\nyou're switches are going to see it.\n\n211\n00:12:44,065 --> 00:12:46,385\nBut if you have switches,\nthey're going to see it.\n\n212\n00:12:46,385 --> 00:12:49,025\nAnd they're going to look at that\ndestination MAC address and say,\n\n213\n00:12:49,025 --> 00:12:49,735\noh I know where that is.\n\n214\n00:12:49,735 --> 00:12:52,165\nThat's this port, which is the port\nyour router is plugged into.\n\n215\n00:12:53,270 --> 00:12:58,270\nNow if a PC were to receive a packet\nlike that that had their MAC address but\n\n216\n00:12:58,270 --> 00:13:03,870\na different destination IP address, a PC\nwould throw it out but a router doesn't.\n\n217\n00:13:03,870 --> 00:13:07,375\nA router gets that and says oh,\nit's my MAC address right?\n\n218\n00:13:07,375 --> 00:13:09,391\nSo it was meant to be coming to me, but\n\n219\n00:13:09,391 --> 00:13:13,970\nthe IP is somebody different I need\nto figure out how to get there.\n\n220\n00:13:13,970 --> 00:13:16,060\nAnd it's gonna look at its routing\ntables to make that decision.\n\n221\n00:13:17,770 --> 00:13:20,210\nAll right.\nSo router one is going to receive that\n\n222\n00:13:20,210 --> 00:13:24,698\npacket across the network, and it's gonna\nlook at the data and make a decision.\n\n223\n00:13:24,698 --> 00:13:27,235\nNow its [INAUDIBLE] Adding\ntable can be very complex.\n\n224\n00:13:27,235 --> 00:13:28,155\nIt can be very simple.\n\n225\n00:13:28,155 --> 00:13:31,065\nWho knows how much work it's gotta\ndo to figure out where to go?\n\n226\n00:13:31,065 --> 00:13:36,145\nBut once it makes that decision,\nit now knows where to go, and\n\n227\n00:13:36,145 --> 00:13:39,535\nit has to change the packet to\nsend it to the right destination.\n\n228\n00:13:39,535 --> 00:13:43,175\nRouter one is gonna send\nthat packet to router two.\n\n229\n00:13:43,175 --> 00:13:45,770\nAnd so,\nwhen router one sends it to router two,\n\n230\n00:13:45,770 --> 00:13:48,870\nit can't change the destination\nIP that will ruin the packet.\n\n231\n00:13:48,870 --> 00:13:51,880\nThe packet has to know the beginning and\nthe end.\n\n232\n00:13:51,880 --> 00:13:55,290\nSo instead in the layer two\nheader at the frame level,\n\n233\n00:13:55,290 --> 00:14:00,039\nit modifies the source and\ndestination MAC address.\n\n234\n00:14:00,039 --> 00:14:02,460\nHere is when thing starts to get weird.\n\n235\n00:14:03,590 --> 00:14:07,130\nIt's not going to be the same\nMac address that we sent to,\n\n236\n00:14:07,130 --> 00:14:09,210\nthat was the interface that faced us.\n\n237\n00:14:09,210 --> 00:14:10,740\nBut when Router 1 talks to Router 2,\n\n238\n00:14:10,740 --> 00:14:13,170\nit's usually going to be\nusing a different interface.\n\n239\n00:14:13,170 --> 00:14:17,010\nAnd so the source MAC will actually be\nthe MAC address of Router 1s interface\n\n240\n00:14:17,010 --> 00:14:19,010\nthat faces Router 2.\n\n241\n00:14:19,010 --> 00:14:21,070\nAnd Router 2's MAC address,\n\n242\n00:14:21,070 --> 00:14:24,260\nthat destination, will be the MAC\naddress that faces Router 1.\n\n243\n00:14:24,260 --> 00:14:29,040\nSo, this packet, when it comes here,\nthe layer to data, the frame layer data,\n\n244\n00:14:29,040 --> 00:14:32,640\nthat's going to have the mac\naddresses just for this link, right?\n\n245\n00:14:32,640 --> 00:14:36,560\nAnd this is all part of LLC,\nand the data link control and\n\n246\n00:14:36,560 --> 00:14:39,900\nall that other good stuff that happens\nat layer two that allows our packet, or\n\n247\n00:14:39,900 --> 00:14:43,020\nour frame,\nto actually move across the network.\n\n248\n00:14:43,020 --> 00:14:47,010\nSo the frame will look a lot\ndifferent on this journey, if I,\n\n249\n00:14:47,010 --> 00:14:49,230\nI'm going to try to save\na little bit of time here.\n\n250\n00:14:49,230 --> 00:14:56,240\nBecause I can take this data and\nlet me just copy it,\n\n251\n00:14:56,240 --> 00:14:59,780\nsince it gave me so much trouble getting\nthat data put in there in the first place.\n\n252\n00:14:59,780 --> 00:15:03,530\nWell just copy and paste, save some time.\n\n253\n00:15:03,530 --> 00:15:04,030\nAll right.\n\n254\n00:15:05,150 --> 00:15:09,480\nSo, what it allows me to\ndo is to take this data\n\n255\n00:15:11,100 --> 00:15:15,600\nand just modify it to represent\nthat leg of the journey.\n\n256\n00:15:15,600 --> 00:15:19,300\nNow, the source and destination IP,\nthey stay the same, all right?\n\n257\n00:15:19,300 --> 00:15:22,330\nIt came from me, and\nit's going to this other PC.\n\n258\n00:15:22,330 --> 00:15:25,820\nWhat changes are the layer two headers.\n\n259\n00:15:25,820 --> 00:15:28,250\nAnd that's gonna change,\nI won't make up anymore mac addresses.\n\n260\n00:15:28,250 --> 00:15:29,710\nThat's fairly painful to watch.\n\n261\n00:15:29,710 --> 00:15:33,120\nSo I'll just call this router 1s mac.\n\n262\n00:15:35,040 --> 00:15:40,345\nAnd then the destination\nwill be Router 2s MAC.\n\n263\n00:15:40,345 --> 00:15:43,445\nCan't believe I made that same typo twice.\n\n264\n00:15:43,445 --> 00:15:46,045\nAll right, so it's gonna modify it so\n\n265\n00:15:46,045 --> 00:15:50,995\nthe layer two data is steering us\non that next leg of the journey.\n\n266\n00:15:50,995 --> 00:15:52,185\nLayer three stays the same.\n\n267\n00:15:52,185 --> 00:15:55,936\nAnd that process is gonna\ncontinue as we move forward,\n\n268\n00:15:55,936 --> 00:16:00,678\nas we move from router to router as\nwe move to each leg of that journey.\n\n269\n00:16:00,678 --> 00:16:04,929\nSo as I move from router two to router\nthree, it's doing the same thing.\n\n270\n00:16:04,929 --> 00:16:08,089\nIt's gonna modify the packet right here.\n\n271\n00:16:08,089 --> 00:16:09,489\nWell, it's not actually\nmodifying the packet.\n\n272\n00:16:09,489 --> 00:16:10,749\nIt's modifying the frame.\n\n273\n00:16:10,749 --> 00:16:12,349\nThat terminology's important.\n\n274\n00:16:12,349 --> 00:16:15,210\nOn the exam, let me bring up another\ndiagram that I've got floating.\n\n275\n00:16:15,210 --> 00:16:17,010\nOr actually go back to the same one.\n\n276\n00:16:17,010 --> 00:16:20,625\nWhen we talk about data layer 4,\nit's called a segment.\n\n277\n00:16:20,625 --> 00:16:23,035\nWhen we talk about data at layer 3,\nit's a packet.\n\n278\n00:16:24,155 --> 00:16:26,405\nWhen we talk about data at layer 2,\nit's a frame.\n\n279\n00:16:26,405 --> 00:16:30,545\nAnd that's why I keep going back and forth\nbetween packet and frame because sometimes\n\n280\n00:16:30,545 --> 00:16:33,655\nI'm talking about the layer 3 header and\nsometimes I'm talking about the layer 2.\n\n281\n00:16:33,655 --> 00:16:37,235\nIn real life, you'll hear people use them\ninterchangeably and that's not correct.\n\n282\n00:16:37,235 --> 00:16:40,205\nAnd on the exam,\nthey'll be very specific about it, so\n\n283\n00:16:40,205 --> 00:16:42,595\nyou need to make sure you know that\ndifferentiation in terminology.\n\n284\n00:16:44,130 --> 00:16:44,740\nAlright.\n\n285\n00:16:44,740 --> 00:16:47,420\nBut going back to the model here.\n\n286\n00:16:47,420 --> 00:16:51,840\nSo when we go from router two to router\nthree, that data has to be updated.\n\n287\n00:16:51,840 --> 00:16:56,700\nAnd so you'll see that it comes\nin here and it updates it again.\n\n288\n00:16:56,700 --> 00:17:01,150\nAnd this time it's just updating it for\nthis particular leg of the journey.\n\n289\n00:17:02,150 --> 00:17:05,110\nThe source and\ndestination IPs stay the same.\n\n290\n00:17:05,110 --> 00:17:08,950\nThe source MAC, though,\nis now gonna be Router 2's MAC, and\n\n291\n00:17:08,950 --> 00:17:11,680\nthe destination MAC is\ngoing to be Router 3's MAC.\n\n292\n00:17:13,200 --> 00:17:16,310\nAnd then where it really changes, so now\nit's gonna know how to get to Router 3,\n\n293\n00:17:16,310 --> 00:17:18,278\nand it's gonna jump to Router 3.\n\n294\n00:17:18,278 --> 00:17:22,290\nBut Router 3 Shares\na network with Server 1, so\n\n295\n00:17:22,290 --> 00:17:27,730\nwhen router three goes to build this\nfinal frame to send on the network, well,\n\n296\n00:17:27,730 --> 00:17:32,120\nthe source and\ndestination IPs really don't change, but\n\n297\n00:17:32,120 --> 00:17:36,790\nthose MAC addresses change once again, but\nthis time, it's a little bit different,\n\n298\n00:17:36,790 --> 00:17:41,260\nbecause it's going to know the MAC\naddress of the destination.\n\n299\n00:17:41,260 --> 00:17:43,980\nSo the Source MAC that's\ngonna become Router 3's MAC.\n\n300\n00:17:43,980 --> 00:17:50,860\nBut the destination,\nthat will be Server 1's MAC address.\n\n301\n00:17:50,860 --> 00:17:54,280\nIt's able to broadcast out,\ndo an ARP broadcast and say,\n\n302\n00:17:54,280 --> 00:17:57,010\nhey what's the MAC address for\n192.168.15.200?\n\n303\n00:17:57,010 --> 00:18:00,590\nThat server will respond and\nthe router can talk directly to it.\n\n304\n00:18:00,590 --> 00:18:05,090\nSo by the time our packet\nreaches server one,\n\n305\n00:18:05,090 --> 00:18:08,030\nit looks a little different\nthan it originally did.\n\n306\n00:18:08,030 --> 00:18:10,580\nBack in the very beginning,\nif I jump back to the beginning.\n\n307\n00:18:10,580 --> 00:18:15,344\nbeginning of my conversation,\nwhich is here, our source and\n\n308\n00:18:15,344 --> 00:18:19,834\ndestination IP, 192.168.0.100, my PC,\n\n309\n00:18:19,834 --> 00:18:25,240\ndestination 192.168.15.200, Server 1.\n\n310\n00:18:25,240 --> 00:18:27,780\nThe source MAC address was\nmy MAC address from my PC.\n\n311\n00:18:27,780 --> 00:18:31,140\nThe destination MAC address\nwas my default gateway.\n\n312\n00:18:31,140 --> 00:18:34,099\nThis was router one's MAC.\n\n313\n00:18:37,809 --> 00:18:39,909\nThe actual Mac address number\ndoesn't really matter so\n\n314\n00:18:39,909 --> 00:18:42,810\nit'd probably make more sense\nif I just put the name in here.\n\n315\n00:18:42,810 --> 00:18:44,430\nSo this is PC1's Mac.\n\n316\n00:18:44,430 --> 00:18:47,790\nAll right.\n\n317\n00:18:47,790 --> 00:18:51,060\nBut then as we journeyed along that\nchanged and changed and changed until we\n\n318\n00:18:51,060 --> 00:18:55,598\nreached the very end where yes\nthe layer three data was the same.\n\n319\n00:18:55,598 --> 00:19:00,530\nThe Layer 2 data became a source\nof Router Three's MAC and\n\n320\n00:19:00,530 --> 00:19:02,300\na destination of Server 1's MAC.\n\n321\n00:19:02,300 --> 00:19:07,090\nNow, neat stuff happens here because when\nServer 1 receives that, it's gonna cache\n\n322\n00:19:07,090 --> 00:19:10,600\nthat entry to say- hey when I reply to\nthis guy, it came from my default gateway,\n\n323\n00:19:10,600 --> 00:19:15,260\nI need to go back to my default gateway so\nit'll know who to contact to get there.\n\n324\n00:19:15,260 --> 00:19:20,560\nThat process is happening with each and\nevery router you pass through.\n\n325\n00:19:20,560 --> 00:19:26,690\nRouters are Layer 3 devices, but they have\nto completely rewrite the Layer 2 header,\n\n326\n00:19:26,690 --> 00:19:30,350\nso while they make their\ndecisions at Layer 3,\n\n327\n00:19:30,350 --> 00:19:34,220\nit's really Layer 2 that they use to\nget the data where it's going, right?\n\n328\n00:19:34,220 --> 00:19:36,200\nThat's what they work with,\nthey make changes, so\n\n329\n00:19:36,200 --> 00:19:40,430\nLayer 2 is very important\ninside of a router.\n\n330\n00:19:40,430 --> 00:19:41,578\n>> Yeah.\nA lot of the times,\n\n331\n00:19:41,578 --> 00:19:44,767\nit's easy to think about, it's easy to get\nconfused I should say, why in the world do\n\n332\n00:19:44,767 --> 00:19:48,140\nwe have to have Layer 2 information if\nwe've got the Layer 3 address on it.\n\n333\n00:19:48,140 --> 00:19:52,320\nRemember that for Layer 2, it's how we\nmove the data from device to device.\n\n334\n00:19:52,320 --> 00:19:56,110\nWhereas, the Layer Three information,\nthe address information,\n\n335\n00:19:56,110 --> 00:20:01,590\nis how we will know when the device\ngets to its ultimate destination.\n\n336\n00:20:01,590 --> 00:20:06,320\nAlong that path, what we saw, is that\nthe unchanging Layer Three information.\n\n337\n00:20:06,320 --> 00:20:09,660\nTells the router,\nyou're not quite where you need to be yet.\n\n338\n00:20:09,660 --> 00:20:11,620\nSo every router when it takes\na look at layer three and\n\n339\n00:20:11,620 --> 00:20:15,000\ngoes that's not really destined for\nme, it goes in and\n\n340\n00:20:15,000 --> 00:20:17,940\nchanges that layer two and\nforwards it on to the next device.\n\n341\n00:20:17,940 --> 00:20:19,680\nAt the end there, on server number one,\n\n342\n00:20:19,680 --> 00:20:23,120\nwhen it matches up the mac address and\nprocesses that.\n\n343\n00:20:23,120 --> 00:20:26,000\nAnd then it goes to the IP layer,\nthe layer three.\n\n344\n00:20:26,000 --> 00:20:27,010\nAnd says, wait a minute.\n\n345\n00:20:27,010 --> 00:20:29,580\nThat destination matches mine.\n\n346\n00:20:29,580 --> 00:20:33,630\nSo on that packet it matches it\ndoesn't have anywhere else to go.\n\n347\n00:20:33,630 --> 00:20:36,690\nSo we need both to make sure\nthat the data can actually get\n\n348\n00:20:36,690 --> 00:20:38,920\nmoving from one destination to another.\n\n349\n00:20:38,920 --> 00:20:42,400\nAnd we need to be able to tell where\nultimately that packet is going and\n\n350\n00:20:42,400 --> 00:20:45,520\nthat's what the IP address does for us.\n\n351\n00:20:45,520 --> 00:20:47,600\nAnd the routers actually know\nhow to treat that long path,\n\n352\n00:20:47,600 --> 00:20:49,100\nand that's why it works so effectively.\n\n353\n00:20:50,310 --> 00:20:52,120\nSo when we talk about IP operations.\n\n354\n00:20:52,120 --> 00:20:53,840\nThat's exactly what we're\ntalking about right there.\n\n355\n00:20:53,840 --> 00:20:57,610\nThat process of modifying the frame\nfield to send them to their destination.\n\n356\n00:20:57,610 --> 00:21:00,580\nIt's really important that you understand\nthat that's what a router's doing.\n\n357\n00:21:00,580 --> 00:21:04,070\nIt needs that source and destination\nIP to do the routing table lookups.\n\n358\n00:21:04,070 --> 00:21:06,280\nAnd that's what we really\nfocus our attention on.\n\n359\n00:21:06,280 --> 00:21:09,880\nAnd it makes it easy to lose sight of\nthat Layer 2 piece that's going on.\n\n360\n00:21:09,880 --> 00:21:13,340\nThat's why routers were able to interact\nwith things like frame relay and so on,\n\n361\n00:21:13,340 --> 00:21:14,830\ncuz they're able to\nwrite that Layer 2 data.\n\n362\n00:21:14,830 --> 00:21:17,630\nThey can handle multiple data types,\nversus switches,\n\n363\n00:21:17,630 --> 00:21:19,000\nwhich really just do Ethernet.\n\n364\n00:21:20,090 --> 00:21:23,520\nSo Ronnie, I think that's a pretty\ngood summary right there.\n\n365\n00:21:23,520 --> 00:21:26,560\nWe got a chance to take\na look at IP operations\n\n366\n00:21:26,560 --> 00:21:29,960\nhow a router is able to move\ntraffic from one link to another.\n\n367\n00:21:29,960 --> 00:21:34,170\nWe also looked at local communications,\nwhile our own PCs make that decision, and\n\n368\n00:21:34,170 --> 00:21:36,400\ndon't have to get routers involved.\n\n369\n00:21:36,400 --> 00:21:38,250\nThose are the two general\ntypes of IP operations.\n\n370\n00:21:38,250 --> 00:21:41,450\nAll right,\nwell I hope you guys enjoyed the segment.\n\n371\n00:21:41,450 --> 00:21:46,040\nStay tuned,\nwe've got more IP operations coming up.\n\n",
          "vimeoId": "109692169"
        },
        {
          "description": "ICMP is a protocol that is used to receive status messages back from devices to see if connections are valid and networks are working. Viewers will hear about ICMP unreachables and redirects, IPv6 and IPv4 fragmentation and time-to-live (TTL).",
          "length": "1060",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/ccnproute/1-3-IP-Operations-Pt-2.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/ccnproute/1-3-IP-Operations-Pt-2-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/ccnproute/1-3-IP-Operations-Pt-2-sm.jpg",
          "title": "IP Operations Part 2",
          "transcript": "1\n00:00:00,008 --> 00:00:05,108\n[SOUND]\n\n2\n00:00:08,103 --> 00:00:09,261\nIn this segment,\n\n3\n00:00:09,261 --> 00:00:15,180\nwe're gonna continue with Objective 1.3\nwhich is understanding IP operations.\n\n4\n00:00:15,180 --> 00:00:18,190\nWe've got a few little odds and ends to\ncover that are important to understand\n\n5\n00:00:18,190 --> 00:00:20,370\nwhat's happening on our network.\n\n6\n00:00:20,370 --> 00:00:25,750\nSpecifically, we're going to take a look\nat ICMP unreachables and ICMP redirects.\n\n7\n00:00:25,750 --> 00:00:28,120\nSo that's one topic that we're gonna hit.\n\n8\n00:00:28,120 --> 00:00:31,530\nWe've got IPV4 and\nIPV6 fragmentation to take a look at.\n\n9\n00:00:31,530 --> 00:00:34,140\nAnd lastly, we'll take a look\nat time to lives, or TTLs.\n\n10\n00:00:34,140 --> 00:00:38,430\nSo let's get started with ICMP\nunreachables and redirects.\n\n11\n00:00:39,450 --> 00:00:42,510\nFirst at a real high level,\nwhat the heck is ICMP?\n\n12\n00:00:42,510 --> 00:00:44,190\nYou should know by now, right?\n\n13\n00:00:44,190 --> 00:00:47,160\n>> ICMP is\nInternet Control Messaging Protocol.\n\n14\n00:00:47,160 --> 00:00:51,530\nAnd this is one of the basic\nprotocols that we use\n\n15\n00:00:51,530 --> 00:00:55,380\nto be able to get messages back, that's\nkinda the simplest way to understand it,\n\n16\n00:00:55,380 --> 00:00:59,770\nfrom devices, especially when we need\nthe information immediately, right?\n\n17\n00:00:59,770 --> 00:01:01,170\nSo ICMP is really good.\n\n18\n00:01:01,170 --> 00:01:04,010\nICMP redirects and unreachables\nare what we're focusing in on.\n\n19\n00:01:04,010 --> 00:01:07,790\n>> Yep, now remember ICMP, we don't\nactually use it to move payload, right?\n\n20\n00:01:07,790 --> 00:01:08,590\nIt doesn't move our data.\n\n21\n00:01:08,590 --> 00:01:10,710\nIt's simply for status messaging, right?\n\n22\n00:01:10,710 --> 00:01:13,580\nSo checking to see if our\nconnections are valid,\n\n23\n00:01:13,580 --> 00:01:15,320\nunderstanding whether\nour network is working.\n\n24\n00:01:15,320 --> 00:01:17,990\nSo it's really like a monitoring protocol,\nand\n\n25\n00:01:17,990 --> 00:01:19,870\nmost of what it does is invisible to us.\n\n26\n00:01:19,870 --> 00:01:22,150\nIt's all done in the background.\n\n27\n00:01:22,150 --> 00:01:26,590\nFor troubleshooting purposes, we might\nuse ICMP echoes, which are our pings,\n\n28\n00:01:26,590 --> 00:01:29,380\nto send a ping to another\nhost to see if it's online.\n\n29\n00:01:29,380 --> 00:01:32,420\nBut your routers are using ICMPs also.\n\n30\n00:01:32,420 --> 00:01:37,680\nAnd the two types of ICMPs they typically\nuse are ICMP unreachables and redirects.\n\n31\n00:01:37,680 --> 00:01:39,150\nWe'll start with unreachables.\n\n32\n00:01:39,150 --> 00:01:43,290\nAn ICMP unreachable is the notice\nthat a router will send you\n\n33\n00:01:43,290 --> 00:01:46,840\nif it doesn't have a route\nto a destination, okay?\n\n34\n00:01:46,840 --> 00:01:49,770\nNow where that router is is going\nto influence that decision.\n\n35\n00:01:49,770 --> 00:01:50,690\nIf it's your router,\n\n36\n00:01:50,690 --> 00:01:55,480\nif it's your default gateway, you got to\nsend a message out to this remote network,\n\n37\n00:01:55,480 --> 00:01:58,690\nit runs it against this routing table and\nit doesn’t have a destination.\n\n38\n00:01:58,690 --> 00:02:00,280\nSo it replies to you and\n\n39\n00:02:00,280 --> 00:02:04,170\nsays here’s an ICMP unreachable,\nI can’t get to that network.\n\n40\n00:02:04,170 --> 00:02:07,840\nAnd so you then say well, destination\nunreachable, I’ll throw this out.\n\n41\n00:02:07,840 --> 00:02:10,580\nI can’t get there, right,\nand that’s the end of it.\n\n42\n00:02:10,580 --> 00:02:15,050\nIf your host supports more\nthan one default gateway,\n\n43\n00:02:15,050 --> 00:02:18,220\nthat's what will trigger it to then\nreach out to the next default gateway.\n\n44\n00:02:18,220 --> 00:02:22,100\nBut most hosts don't, most hosts\ndon't have multiple default gateways.\n\n45\n00:02:22,100 --> 00:02:26,095\nAnd so that ICMP unreachable is\nwhat ends your communication.\n\n46\n00:02:26,095 --> 00:02:28,255\nBut between routers,\nit's a little different.\n\n47\n00:02:28,255 --> 00:02:32,605\nIf one router reaches out to another\nrouter to send traffic to a destination,\n\n48\n00:02:32,605 --> 00:02:36,880\nand that second router sends\nan ICMP unreachable, your router or\n\n49\n00:02:36,880 --> 00:02:39,800\nwhatever the first router is,\nmight be able to make other decisions,\n\n50\n00:02:39,800 --> 00:02:42,370\nmight be able to find a way around that.\n\n51\n00:02:42,370 --> 00:02:45,250\nIn the end, if it can't,\nif there's no other way to get there,\n\n52\n00:02:45,250 --> 00:02:48,470\nthe ICMP unreachable will\nbe forwarded down to you.\n\n53\n00:02:48,470 --> 00:02:52,170\nSo, when you get these unreachables\nthe response will actually\n\n54\n00:02:52,170 --> 00:02:55,750\ncome from whatever router\nin line was the last one,\n\n55\n00:02:55,750 --> 00:02:58,600\nthe one that gave up,\nthe one that didn't have a route.\n\n56\n00:02:58,600 --> 00:03:01,620\nAnd you'll get that message back\nto know to abandon traffic.\n\n57\n00:03:01,620 --> 00:03:04,848\nIt's also another way to say,\nhey stop sending me data, right,\n\n58\n00:03:04,848 --> 00:03:08,916\ndon't send it this way you're kinda\nwasting time, try and conserve bandwidth.\n\n59\n00:03:08,916 --> 00:03:11,312\nA lot of hosts ignore that,\nbut routers usually won't.\n\n60\n00:03:11,312 --> 00:03:13,170\nAll right, so\nthat's what an unreachable does,\n\n61\n00:03:13,170 --> 00:03:15,610\nyour routers use that\nmonitor network status.\n\n62\n00:03:15,610 --> 00:03:20,060\nA redirect on the other end,\nis a pretty neat thing, all right.\n\n63\n00:03:20,060 --> 00:03:24,130\nICMP redirects are where you might be\nsending data to a remote system and\n\n64\n00:03:24,130 --> 00:03:25,930\nyou go to your default gateway.\n\n65\n00:03:25,930 --> 00:03:29,750\nAnd the default gateway looks at its\nrouting table to find another way out, and\n\n66\n00:03:29,750 --> 00:03:33,920\nfinds that there's actually another\ngateway on the same network that would\n\n67\n00:03:33,920 --> 00:03:35,380\nhave been better for you.\n\n68\n00:03:35,380 --> 00:03:39,160\nAnd so it's gonna be routing traffic\nout the the interface that it came in.\n\n69\n00:03:39,160 --> 00:03:42,480\nNow that gets hard to understand,\nso let me show you guys a diagram.\n\n70\n00:03:42,480 --> 00:03:45,200\nLet's say I've got a private\nnetwork like this one.\n\n71\n00:03:45,200 --> 00:03:46,520\nAnd I'm sitting here on a private network,\nand\n\n72\n00:03:46,520 --> 00:03:49,870\nI've actually got two\ngateways out to the internet.\n\n73\n00:03:49,870 --> 00:03:53,980\nBut my host, like most hosts,\nonly supports one default gateway.\n\n74\n00:03:53,980 --> 00:03:55,770\nSo I used the router on the right.\n\n75\n00:03:55,770 --> 00:03:57,980\nSo I send my data to\nthe router on the right.\n\n76\n00:03:57,980 --> 00:04:00,960\nAnd it looks at its routing table for\nwhere my data needs to go and it decides,\n\n77\n00:04:00,960 --> 00:04:04,600\nyou know what, this router over here\nwould actually do a better job.\n\n78\n00:04:04,600 --> 00:04:09,710\nSo it could forward the data\nover to that router, okay?\n\n79\n00:04:09,710 --> 00:04:12,880\nBut there's a little situation\nthat happens when we do that.\n\n80\n00:04:12,880 --> 00:04:15,360\nSo if my host, actually here,\nI'll fill the little host out.\n\n81\n00:04:15,360 --> 00:04:20,770\nSo here's my host, and if my host goes\nto communicate out to the outside world,\n\n82\n00:04:20,770 --> 00:04:25,640\nand I send my data from my host\nto the router on the right, okay?\n\n83\n00:04:25,640 --> 00:04:26,696\nSo here's my data,\n\n84\n00:04:26,696 --> 00:04:30,750\nlet me pick some fancy color that will\nreally stand out here, and blow our minds.\n\n85\n00:04:30,750 --> 00:04:32,770\nOkay, so\nmy data's going up to that router.\n\n86\n00:04:32,770 --> 00:04:35,280\nAnd it decides that the other\nrouter would be better choice,\n\n87\n00:04:35,280 --> 00:04:39,740\nwell it's gonna take it and\nforward it over to that other router.\n\n88\n00:04:39,740 --> 00:04:45,210\nForwarding it to the other router is going\nto basically duplicate my work, right?\n\n89\n00:04:45,210 --> 00:04:48,470\nSending it over to this other router,\nand the other router will then be\n\n90\n00:04:48,470 --> 00:04:51,220\nable to take that traffic and\nsend it out to the internet,\n\n91\n00:04:51,220 --> 00:04:54,110\nwhich is where I really wanted\nit to go to anyway, right?\n\n92\n00:04:54,110 --> 00:04:58,610\nSo that's the kinda the process that\nwould happen without ICMP redirects.\n\n93\n00:04:58,610 --> 00:05:03,460\nBut with an ICMP redirect the router\ncan actually tell the client and\n\n94\n00:05:03,460 --> 00:05:05,960\nsay, hey, instead of coming to me, for\n\n95\n00:05:05,960 --> 00:05:09,650\nthis, why don't you go straight\nto this other router, all right?\n\n96\n00:05:09,650 --> 00:05:14,300\nGo straight to the other router, take me\nout as a middleman to shorten us one hop.\n\n97\n00:05:14,300 --> 00:05:16,550\nAnd the router,\nit'll be this router on the right,\n\n98\n00:05:16,550 --> 00:05:20,850\nthat sends the ICMP redirect to your\nclient, saying, go to the other host.\n\n99\n00:05:20,850 --> 00:05:25,940\nAnd from then on your client will say,\nokay, for that particular IP or\n\n100\n00:05:25,940 --> 00:05:29,360\nnetwork, or whatever,\nwe'll bend that traffic, and\n\n101\n00:05:29,360 --> 00:05:34,780\nsend it straight over there,\ntaking our first guy out of the loop.\n\n102\n00:05:34,780 --> 00:05:35,430\nRight?\n\n103\n00:05:35,430 --> 00:05:39,760\nThat's important, because if we didn't\ndo that, let's say we didn't do it and\n\n104\n00:05:39,760 --> 00:05:42,360\nwe left our network like this,\nwhat's gonna happen with our reply?\n\n105\n00:05:43,470 --> 00:05:48,090\nWell, the reply is gonna come from\nthe internet to our destination.\n\n106\n00:05:48,090 --> 00:05:50,660\nOkay, so here's our reply coming in.\n\n107\n00:05:50,660 --> 00:05:53,390\nAnd this router is gonna\nsee that it's destined for\n\n108\n00:05:53,390 --> 00:05:56,850\nmy IP,\nit's gonna send it straight there, okay?\n\n109\n00:05:56,850 --> 00:05:59,430\nWell, when it sends it straight there,\n\n110\n00:05:59,430 --> 00:06:02,665\nthink about the MAC addresses\nthat are involved in this, right?\n\n111\n00:06:02,665 --> 00:06:07,425\nOn my way out of the network, my\ndestination MAC address was gateway one.\n\n112\n00:06:08,455 --> 00:06:10,845\nGateway one sent me to gateway two,\nand out to the internet.\n\n113\n00:06:10,845 --> 00:06:14,085\nWhen the reply comes back,\ngateway two will talk directly to me.\n\n114\n00:06:14,085 --> 00:06:18,015\nThat means the source MAC\naddress will be gateway two.\n\n115\n00:06:18,015 --> 00:06:20,920\nMy destination on the way\nout was gateway one.\n\n116\n00:06:20,920 --> 00:06:22,900\nMy source on the way back was gateway two.\n\n117\n00:06:22,900 --> 00:06:25,510\nI'm gonna look like I'm getting\ntraffic from a different location.\n\n118\n00:06:26,610 --> 00:06:30,320\nAnd VPNs, voice over IP,\na lot of that stuff will break.\n\n119\n00:06:30,320 --> 00:06:33,110\nThey just won't work in that scenario.\n\n120\n00:06:33,110 --> 00:06:36,090\nSo ICMP redirect solved that problem.\n\n121\n00:06:36,090 --> 00:06:38,585\nNow the problem with ICMP redirects\nis they can be exploited.\n\n122\n00:06:38,585 --> 00:06:40,710\n>> Mm-hm.\n>> Attackers can take advantage of that\n\n123\n00:06:40,710 --> 00:06:43,730\nto cause redirects to move traffic\nwhere you don't want it to go.\n\n124\n00:06:43,730 --> 00:06:47,310\nSo a lot of people disable ICMP redirects.\n\n125\n00:06:47,310 --> 00:06:51,290\nIf you've only got one default gateway,\nthere's no point in having the redirects,\n\n126\n00:06:51,290 --> 00:06:52,080\nso you can turn that off.\n\n127\n00:06:52,080 --> 00:06:54,280\nIn a lot of security training\nyou'll learn about that.\n\n128\n00:06:54,280 --> 00:06:57,040\nBut if you've got more\nthan one default gateway,\n\n129\n00:06:57,040 --> 00:06:59,390\nthat's what ICMP redirects\nare designed for.\n\n130\n00:06:59,390 --> 00:07:02,060\nAnd so you can take advantage\nof that to move your data\n\n131\n00:07:02,060 --> 00:07:04,980\nwhen your hosts don't support\nmore than one default gateway.\n\n132\n00:07:06,450 --> 00:07:11,300\nAll right, so that's one of our little\nbell and whistle that we kinda have in IP\n\n133\n00:07:11,300 --> 00:07:15,070\noperations that we can manipulate the way\nthat our data moves through the network.\n\n134\n00:07:16,370 --> 00:07:17,829\nThe next one we've got is fragmentation.\n\n135\n00:07:19,390 --> 00:07:23,080\nIPv4 and IPv6 have a maximum size for\n\n136\n00:07:23,080 --> 00:07:25,170\nthe amount of data that can\nbe sent on the network.\n\n137\n00:07:25,170 --> 00:07:27,970\nIt's called an MTU or\na maximum transmission unit.\n\n138\n00:07:27,970 --> 00:07:31,780\nAnd when data is bigger than the MTU,\nwhat do we do about it?\n\n139\n00:07:31,780 --> 00:07:34,184\n>> You have to break it\nup into multiple pieces.\n\n140\n00:07:34,184 --> 00:07:38,170\nAnd so your routers will\nactually accept a certain size.\n\n141\n00:07:38,170 --> 00:07:41,420\nOnce it gets past that size it says,\nlook that's too big,\n\n142\n00:07:41,420 --> 00:07:45,370\nwhat I'd like to do instead is to package\nit into multiple smaller units and\n\n143\n00:07:45,370 --> 00:07:46,808\nthen we can transmit across.\n\n144\n00:07:46,808 --> 00:07:52,200\nAnd so MTUs are very important because\nyou can have it where the MTU is big and\n\n145\n00:07:52,200 --> 00:07:55,110\nit just drops it and\nwe don't have any recourse to doing it.\n\n146\n00:07:55,110 --> 00:07:58,690\nBut since we can actually manipulate that\nwe can change those things if we need to.\n\n147\n00:07:58,690 --> 00:08:02,920\n>> Yeah, and this is kind of a decision\nthat's made between you and your router.\n\n148\n00:08:02,920 --> 00:08:04,810\nWhen you look at hops on a network,\n\n149\n00:08:04,810 --> 00:08:08,800\nyou can have different\nMTUs all along that path.\n\n150\n00:08:08,800 --> 00:08:13,700\nSo at a minimum between your PC and\nyour switch you're gonna have an MTU size.\n\n151\n00:08:13,700 --> 00:08:16,285\nBut then between your switch and\nyour router and so on.\n\n152\n00:08:16,285 --> 00:08:19,060\nMTUs are really down at layer two, right?\n\n153\n00:08:19,060 --> 00:08:23,210\nSo we also have MTUs that get\ninvoloved at higher layers, but\n\n154\n00:08:23,210 --> 00:08:27,100\nat layer two the typical MTU on\nan ethernet network is 1500 bytes.\n\n155\n00:08:27,100 --> 00:08:28,160\nSo you'll normally see 1500.\n\n156\n00:08:28,160 --> 00:08:31,580\nIt can be lower or it can be higher.\n\n157\n00:08:31,580 --> 00:08:33,690\nThere is actually a little\nmore room above that.\n\n158\n00:08:33,690 --> 00:08:37,780\nBut usually we do 1500 to leave that\nextra room for things like VLAN tagging.\n\n159\n00:08:37,780 --> 00:08:41,310\nIf you're doing 802.1Q VLAN tagging,\nyou need room for that tag.\n\n160\n00:08:41,310 --> 00:08:43,690\nSo 1500 is pretty much\nthe standard out there.\n\n161\n00:08:43,690 --> 00:08:44,760\nAll right.\n\n162\n00:08:44,760 --> 00:08:46,150\nI say pretty much cuz you can change it.\n\n163\n00:08:46,150 --> 00:08:47,090\nYou can make it whatever you want.\n\n164\n00:08:47,090 --> 00:08:51,200\nYou can make your MTU on your ethernet\nnetwork 1000 bytes if you want.\n\n165\n00:08:51,200 --> 00:08:53,310\nAnd there are reasons to manipulate it,\nright?\n\n166\n00:08:53,310 --> 00:08:58,220\nIf we have a dedicated network just for\niSCSI storage, we might\n\n167\n00:08:58,220 --> 00:09:03,540\nchoose to use a higher MTU to minimize\nthe amount of header calculations we do.\n\n168\n00:09:03,540 --> 00:09:08,610\nWhen we create that layer two header\npart of that is CRC, a checksum, right?\n\n169\n00:09:08,610 --> 00:09:11,240\nAnd it's a mathematical operation\nto calculate that checksum.\n\n170\n00:09:11,240 --> 00:09:15,480\nSo the more checksums you make the more\nwork you have to do to handle it.\n\n171\n00:09:15,480 --> 00:09:19,150\nBut on a storage network you might\nuse what are called super frames.\n\n172\n00:09:19,150 --> 00:09:22,720\nAnd a super frame is 9,000 bytes.\n\n173\n00:09:22,720 --> 00:09:25,030\nVersus the 1500 bytes we normally see.\n\n174\n00:09:25,030 --> 00:09:28,300\nSo for every six frames on\na regular ethernet network,\n\n175\n00:09:28,300 --> 00:09:30,570\nif you're using super frames,\nyou'd send one.\n\n176\n00:09:30,570 --> 00:09:33,918\nSo for every six CRCs you'd\ncalculate under regular ethernet,\n\n177\n00:09:33,918 --> 00:09:36,110\nyou're only calculating one.\n\n178\n00:09:36,110 --> 00:09:39,920\nAnd on a storage network like iSCSI,\nit helps immensely.\n\n179\n00:09:39,920 --> 00:09:42,960\nIt takes a lot of overhead\nout of the communications.\n\n180\n00:09:42,960 --> 00:09:44,720\niSCSI still sucks, right?\n\n181\n00:09:44,720 --> 00:09:46,810\n>> [LAUGH]\n>> But at least it's a little bit better\n\n182\n00:09:46,810 --> 00:09:47,480\nin that scenario.\n\n183\n00:09:48,590 --> 00:09:51,290\nSo we need to make sure we understand\nthat fragmentation is happening and\n\n184\n00:09:51,290 --> 00:09:52,940\nwhat those MTUs are.\n\n185\n00:09:52,940 --> 00:09:55,670\nSo that we know when we're sending large\nquantities of data they are getting\n\n186\n00:09:55,670 --> 00:10:00,000\nbroken up, and our other devices\nare having to reassemble that.\n\n187\n00:10:00,000 --> 00:10:04,815\nThey'll have receive buffers where\nthey're capturing that data and\n\n188\n00:10:04,815 --> 00:10:06,710\nkinda sorting it out, right?\n\n189\n00:10:06,710 --> 00:10:09,100\nReassembling it back into\nthe data as we sent it.\n\n190\n00:10:09,100 --> 00:10:11,170\nAnd those buffers can\nactually get overflowed.\n\n191\n00:10:12,740 --> 00:10:14,860\nAll right.\nSo when it comes to the fragmentation,\n\n192\n00:10:14,860 --> 00:10:16,030\nI'm trying to think if\nI'm leaving anything out.\n\n193\n00:10:16,030 --> 00:10:17,670\nThat should be pretty good there.\n\n194\n00:10:17,670 --> 00:10:25,020\nWe'll talk a little bit later how TCP and\nyour higher level protocols can plan for\n\n195\n00:10:25,020 --> 00:10:28,900\nthe MTU, can actually take care of\nthis before it gets down to layer two.\n\n196\n00:10:28,900 --> 00:10:32,040\nSo it's rare that at that layer, you're\ngonna have to deal with anything more, but\n\n197\n00:10:32,040 --> 00:10:33,780\nin the old days it was something\nwe dealt with quite a bit.\n\n198\n00:10:36,050 --> 00:10:40,410\nAll right, and the last topic that we need\nto talk about are TTLs, time to lives.\n\n199\n00:10:40,410 --> 00:10:42,910\nWhen a packet goes out on the network,\nright, so\n\n200\n00:10:42,910 --> 00:10:46,080\nif it goes out,\ndo I have my diagram still?\n\n201\n00:10:46,080 --> 00:10:46,620\nHere, this diagram.\n\n202\n00:10:46,620 --> 00:10:48,620\nLet me bring this diagram up.\n\n203\n00:10:48,620 --> 00:10:52,280\nSo if I send a packet out to\nthe internet and it hits one router and\n\n204\n00:10:52,280 --> 00:10:54,810\nit goes out to another router and\nanother router.\n\n205\n00:10:54,810 --> 00:11:00,320\nThere's always the potential that a bad\nroute can be put in place somewhere.\n\n206\n00:11:00,320 --> 00:11:06,060\nSo for example if I'm trying to reach\n192.168.5.0, and I get to this router,\n\n207\n00:11:06,060 --> 00:11:09,690\nit might have a route that says the best\nway to get there is down this leg.\n\n208\n00:11:09,690 --> 00:11:13,450\nAnd so as I go across the network,\nit sends me the wrong way.\n\n209\n00:11:13,450 --> 00:11:15,620\nAnd then that just sends\nme right back again.\n\n210\n00:11:15,620 --> 00:11:18,530\nAnd then I end up in a loop, right?\n\n211\n00:11:18,530 --> 00:11:23,010\nRouting loops are generally the result\nof either poorly manipulated routing\n\n212\n00:11:23,010 --> 00:11:28,810\nprotocols, static routes that affected\nbehavior, or some kind of network failure.\n\n213\n00:11:28,810 --> 00:11:31,050\nThose can all result in routing loops.\n\n214\n00:11:31,050 --> 00:11:35,767\nAnd when it happens, you data will rattle\naround, potentially forever, right?\n\n215\n00:11:35,767 --> 00:11:38,120\nIn a small network,\nit could rattle around forever, and\n\n216\n00:11:38,120 --> 00:11:40,740\nthe only way to solve it would be to turn\nthe equipment off and turn it back on, and\n\n217\n00:11:40,740 --> 00:11:42,820\nmake the packets drop.\n\n218\n00:11:42,820 --> 00:11:45,060\nOn the internet that's not possible.\n\n219\n00:11:45,060 --> 00:11:47,070\nYou can't just turn the internet off,\nright?\n\n220\n00:11:47,070 --> 00:11:49,260\nSo these packets could pile up and\nrattle around forever.\n\n221\n00:11:49,260 --> 00:11:52,250\nSo we need a solution to that,\nand the solution is a TTL.\n\n222\n00:11:53,700 --> 00:11:55,290\nWith a time to live,\n\n223\n00:11:55,290 --> 00:12:01,010\nevery time your packet passes through\na router the time to live is decremented.\n\n224\n00:12:01,010 --> 00:12:04,940\nSo your host operating system,\nwhatever your OS is, will choose the TTL.\n\n225\n00:12:04,940 --> 00:12:10,440\nAnd it might pick a TTL of 64, 128, I've\nseen 256, which I think is a little high.\n\n226\n00:12:10,440 --> 00:12:13,180\nYour average average communication out\non the internet is going to pass through\n\n227\n00:12:13,180 --> 00:12:15,260\nbetween 20 and 25 routers.\n\n228\n00:12:15,260 --> 00:12:19,060\nSo a TTL of 256 is a little bit overkill.\n\n229\n00:12:19,060 --> 00:12:22,080\nBut you'll see 64 pretty commonly.\n\n230\n00:12:22,080 --> 00:12:28,820\nNow when you send your data along, when it\nhits router one, it reduces it to 63 and\n\n231\n00:12:28,820 --> 00:12:33,040\nthen 62 and then 61 and then 60,\n59, it hits the destination.\n\n232\n00:12:33,040 --> 00:12:37,790\nNow 59, there's plenty of room for\nmore routers in that path, right?\n\n233\n00:12:37,790 --> 00:12:41,950\nBut if I get in a loop, each time I'm\nin this loop, there's four routers in\n\n234\n00:12:41,950 --> 00:12:46,360\nthe loop, so I can only pass through that\nso many times before my TTL hits zero.\n\n235\n00:12:46,360 --> 00:12:48,920\nAnd when a router goes to\ndecrement a packet and\n\n236\n00:12:48,920 --> 00:12:52,680\nsees the TTL is only one, it says,\nwe'll I'm gonna decrement it to zero.\n\n237\n00:12:52,680 --> 00:12:54,212\n.\nSo, I'll throw it away.\n\n238\n00:12:54,212 --> 00:12:56,850\nAnd it'lll discard the packet.\n\n239\n00:12:56,850 --> 00:13:00,340\nThat's how we prevent packets from\nrattling around on a network for\n\n240\n00:13:00,340 --> 00:13:01,830\neternity, right?\n\n241\n00:13:01,830 --> 00:13:04,150\nTTL solved that problem.\n\n242\n00:13:04,150 --> 00:13:07,030\nEvery communication on the network\nhas that TTL attached.\n\n243\n00:13:07,030 --> 00:13:10,215\nIf it doesn't for some reason,\nyour first router will add one.\n\n244\n00:13:10,215 --> 00:13:12,630\nIt'll stick it on there, but\nit shouldn't have to do that, right?\n\n245\n00:13:12,630 --> 00:13:16,151\nA lot of ISPs will just drop the packets\nand not send it if that's the scenario.\n\n246\n00:13:16,151 --> 00:13:17,890\nSo normally your host\nis going to set that.\n\n247\n00:13:17,890 --> 00:13:21,650\nBut it does vary from OS to OS and\nhardware to hardware.\n\n248\n00:13:21,650 --> 00:13:23,240\nI don't even remember Windows.\n\n249\n00:13:23,240 --> 00:13:25,160\nLet's just do a quick ping.\n\n250\n00:13:25,160 --> 00:13:28,900\nWindows when I do a ping to a host,\nit'll usually tell you the TTL.\n\n251\n00:13:28,900 --> 00:13:31,920\nAnd you can see my TTL is 64.\n\n252\n00:13:31,920 --> 00:13:35,570\nI just pinged my router, which is\nright here on the same network as me.\n\n253\n00:13:35,570 --> 00:13:39,620\nI did not have to go through a single\nrouter to get there, so my TTL was 64,\n\n254\n00:13:39,620 --> 00:13:41,040\nnever reduced.\n\n255\n00:13:41,040 --> 00:13:44,150\nSo my default TTL here in Windows 8 is 64.\n\n256\n00:13:44,150 --> 00:13:47,820\nBut as I ping out to somebody\non the internet, right,\n\n257\n00:13:47,820 --> 00:13:51,080\nI'll ping out to oops, to an invalid IP.\n\n258\n00:13:51,080 --> 00:13:55,310\nI'll ping out to a valid IP,\nsee how my TTL is 55?\n\n259\n00:13:55,310 --> 00:13:57,830\nWell if I take 64 and I subtract 55,\n\n260\n00:13:57,830 --> 00:14:00,850\nthat means I passed through\nnine routers to get there.\n\n261\n00:14:00,850 --> 00:14:04,360\nEach router reducing the TTL by one and\n\n262\n00:14:04,360 --> 00:14:06,990\nthat's to ensure that I don't\njust rattle around forever.\n\n263\n00:14:06,990 --> 00:14:12,600\nAll right, that's another action that your\nrouter is performing in the background.\n\n264\n00:14:12,600 --> 00:14:15,430\nSo routers, they do a lot more\nthan just routing don't they?\n\n265\n00:14:15,430 --> 00:14:16,850\n>> Mmhm.\n>> A lot of neat little stuff\n\n266\n00:14:16,850 --> 00:14:18,350\ngoing on in the background.\n\n267\n00:14:18,350 --> 00:14:21,230\n>> Yeah, the TTL originally was\nsupposed to be one second, and\n\n268\n00:14:21,230 --> 00:14:25,410\nthen once they realized that it could\ntake forever to get to the seconds,\n\n269\n00:14:25,410 --> 00:14:29,770\nto decrement down to zero, they decided\nto change that and now router by router.\n\n270\n00:14:29,770 --> 00:14:32,200\nSo another term you may hear,\nis the term hop limit, I think,\n\n271\n00:14:32,200 --> 00:14:33,305\nis the term that you also hear.\n\n272\n00:14:33,305 --> 00:14:35,070\nSo, that may be newer than TTL.\n\n273\n00:14:35,070 --> 00:14:38,200\nIn IPv6, I think that's what\nthey call it is hop limit.\n\n274\n00:14:38,200 --> 00:14:41,160\n>> The maximum amount of hops that\nyou can pass through before this\n\n275\n00:14:41,160 --> 00:14:43,190\npacket should be discarded.\n\n276\n00:14:43,190 --> 00:14:44,009\nAll right, so,\n\n277\n00:14:44,009 --> 00:14:47,940\nin this segment we got a chance to take a\nlook at the second part of IP operations.\n\n278\n00:14:47,940 --> 00:14:50,994\nWe took a look at,\nwell a couple of different things right?\n\n279\n00:14:50,994 --> 00:14:53,840\nICMP unreachables and redirects,\nwhich are pretty neat.\n\n280\n00:14:53,840 --> 00:14:58,018\nWe got a chance to see fragmentation and\nwe talk about it under IPv4,\n\n281\n00:14:58,018 --> 00:14:59,974\nbut IPv6 is the same way right?\n\n282\n00:14:59,974 --> 00:15:02,046\nIPv4 and IPv6 are layer three,\n\n283\n00:15:02,046 --> 00:15:07,530\nthey run on top of the same layer two\ntechnology, so they fragment the same way.\n\n284\n00:15:07,530 --> 00:15:11,710\nAnd then we got to take a look at TTLs,\ntime to lives.\n\n285\n00:15:11,710 --> 00:15:13,330\nSo pretty neat stuff.\n\n286\n00:15:13,330 --> 00:15:14,650\nHope you guys enjoyed this segment.\n\n287\n00:15:14,650 --> 00:15:17,510\nStay tuned we've got more IP operations.\n\n288\n00:15:17,510 --> 00:15:18,862\nActually no, we don't, do we?\n\n289\n00:15:18,862 --> 00:15:20,400\nThat's the last of IP operations.\n\n290\n00:15:20,400 --> 00:15:22,710\nWe've got more network\nprinciples coming up.\n\n",
          "vimeoId": "109693247"
        },
        {
          "description": "TCP is a very frequently used protocol that provides reliable delivery of communications across the network. Viewers will hear the difference between TCP and UDP traffic, the use of windowing for TCP traffic, as well as discussions on the MTU, MSS, Latency and other TCP operations.",
          "length": "2739",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/ccnproute/1-4-TCP-Operations.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/ccnproute/1-4-TCP-Operations-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/ccnproute/1-4-TCP-Operations-sm.jpg",
          "title": "TCP Operations",
          "transcript": "1\n00:00:00,000 --> 00:00:10,000\n[MUSIC]\n\n2\n00:00:15,336 --> 00:00:22,503\n[SOUND]\n\n3\n00:00:22,503 --> 00:00:32,795\n[MUSIC]\n\n4\n00:00:32,795 --> 00:00:35,641\nAll right, good morning,\ngood afternoon, and good evening.\n\n5\n00:00:35,641 --> 00:00:38,296\nAnd welcome to back to\nanother episode of ITproTV.\n\n6\n00:00:38,296 --> 00:00:43,546\nI'm your host Don Pezet back again\nwith another episode of CCNP route.\n\n7\n00:00:43,546 --> 00:00:46,892\nWe are going to be diving into\nObjective 1.4 today which is\n\n8\n00:00:46,892 --> 00:00:50,540\nexplaining TCP Operations and\nthis is an important one, right?\n\n9\n00:00:50,540 --> 00:00:52,670\nFor a lot of you guys you've\nalready learned about TCP and\n\n10\n00:00:52,670 --> 00:00:55,510\nits basic functionality in the CCNA level.\n\n11\n00:00:55,510 --> 00:00:58,210\nI don't want to bore you to\ndeath with a bunch of really\n\n12\n00:00:58,210 --> 00:01:00,365\nhigh level details about TCP.\n\n13\n00:01:00,365 --> 00:01:03,570\nSo, let me start out with just a little\nsummary which will pretty much summarize\n\n14\n00:01:03,570 --> 00:01:05,560\nthe things you learned at the CCNA side.\n\n15\n00:01:05,560 --> 00:01:09,730\nAnd then I'm gonna dive into the specific\ncomponents that they address on the exam.\n\n16\n00:01:09,730 --> 00:01:12,690\nThey go a little bit beyond\nwhat you see at the CCNA level.\n\n17\n00:01:12,690 --> 00:01:15,390\nThese are important because there's\na lot of things that the TCP does in\n\n18\n00:01:15,390 --> 00:01:19,140\nthe background that most people don't\nappreciate, they just don't know.\n\n19\n00:01:19,140 --> 00:01:21,320\nLet's take a look at the exam\nobjectives real quick.\n\n20\n00:01:21,320 --> 00:01:24,030\nSo here I've got Objective 1.4,\n\n21\n00:01:24,030 --> 00:01:28,640\nas posted by Cisco, and explain TCP\noperations is the basics, right?\n\n22\n00:01:28,640 --> 00:01:31,290\nThe TCP handshake and basic functionality.\n\n23\n00:01:31,290 --> 00:01:34,110\nBut after that we talk about\nthings like a path MTU, and\n\n24\n00:01:34,110 --> 00:01:36,220\nthat's something that a lot of\npeople haven't seen before.\n\n25\n00:01:36,220 --> 00:01:38,350\nSo we'll discuss what that is,\nand what it does.\n\n26\n00:01:38,350 --> 00:01:39,890\nWe'll get a chance to see MSS,\n\n27\n00:01:39,890 --> 00:01:43,330\nwhich is Maximum Segment Size,\nthat ties into the MTU.\n\n28\n00:01:43,330 --> 00:01:48,210\nLatency, Windowing, Bandwidth-delay\nproduct, and Global synchronization.\n\n29\n00:01:48,210 --> 00:01:52,520\nA lot of different little issues that\ncan kind of pop up in networks that TCP\n\n30\n00:01:52,520 --> 00:01:53,750\ntries to address.\n\n31\n00:01:53,750 --> 00:01:56,740\nAnd even one or two issues that TCP\ndoesn't really address very well.\n\n32\n00:01:56,740 --> 00:01:58,920\nSo we'll get a chance to see that and\n\n33\n00:01:58,920 --> 00:02:00,900\nwhat those are as we progress\nthrough this episode.\n\n34\n00:02:00,900 --> 00:02:03,160\nAll right, well enough of the overview.\n\n35\n00:02:03,160 --> 00:02:05,010\nLet's jump in and take a look at TCP.\n\n36\n00:02:05,010 --> 00:02:05,950\nAll right.\n\n37\n00:02:05,950 --> 00:02:09,680\nTCP itself is a very very\nfrequently used protocol.\n\n38\n00:02:09,680 --> 00:02:13,710\nWhen you browse to our website today, or\nwhen you connect to your email server,\n\n39\n00:02:13,710 --> 00:02:15,100\nwhen you FTP somewhere or\n\n40\n00:02:15,100 --> 00:02:19,960\nuse SSH, you're using TCP\nthe Transmission Control Protocol.\n\n41\n00:02:19,960 --> 00:02:25,580\nAnd the main reason you use it is\nbecause TCP gives you reliable delivery.\n\n42\n00:02:25,580 --> 00:02:28,310\nWhen we look at communications\ngoing across a network,\n\n43\n00:02:28,310 --> 00:02:30,700\nwe need to make sure that they\nmake it to the other side.\n\n44\n00:02:30,700 --> 00:02:32,580\nHow do we know that it\nmade it to the other side?\n\n45\n00:02:32,580 --> 00:02:37,880\nWell, most of our protocols don't\nprovide any mechanism for that, right?\n\n46\n00:02:37,880 --> 00:02:38,620\nIP.\n\n47\n00:02:38,620 --> 00:02:40,880\nIP, the Internet Protocol,\nruns at layer three.\n\n48\n00:02:40,880 --> 00:02:44,620\nAnd at layer three,\nthere is no error correction mechanism,\n\n49\n00:02:44,620 --> 00:02:45,950\nthere’s no way to fix an error.\n\n50\n00:02:45,950 --> 00:02:49,060\nIf a packet gets lost on the network,\nit’s just gone.\n\n51\n00:02:49,060 --> 00:02:50,360\nThat’s it.\n\n52\n00:02:50,360 --> 00:02:54,490\nAt layer four, we have two different\nprotocols that really vie for power,\n\n53\n00:02:54,490 --> 00:02:56,310\nUDP and TCP.\n\n54\n00:02:56,310 --> 00:02:58,380\nUDP, that has no error\ncorrection mechanism.\n\n55\n00:02:58,380 --> 00:03:00,280\nIf packets get lost, they just get lost.\n\n56\n00:03:00,280 --> 00:03:04,810\nBut TCP on the other hand, it has\nerror correction, it does detection.\n\n57\n00:03:04,810 --> 00:03:08,630\nIt will know when information\ndidn't make it to the other side.\n\n58\n00:03:08,630 --> 00:03:11,120\nAnd when the information does, it'll know.\n\n59\n00:03:11,120 --> 00:03:14,800\nIt'll know if it did or if it didn't,\nand if it didn't, it'll retransmit it.\n\n60\n00:03:14,800 --> 00:03:17,800\nIt'll resend that data to make\nsure it gets to the other side.\n\n61\n00:03:17,800 --> 00:03:20,070\nSo TCP gives us reliable delivery.\n\n62\n00:03:20,070 --> 00:03:22,230\nThat's how we know when\nwe need to use TCP.\n\n63\n00:03:22,230 --> 00:03:25,050\nAll right so how does it do this?\n\n64\n00:03:25,050 --> 00:03:28,830\nWell it does this through a very\nsimple mechanism using what are called\n\n65\n00:03:28,830 --> 00:03:30,200\nsequence numbers.\n\n66\n00:03:30,200 --> 00:03:33,650\nBut before I dive into that,\nlet me start with the basics.\n\n67\n00:03:33,650 --> 00:03:37,090\nThe basics are,\nwhen I wanna reach out to another host and\n\n68\n00:03:37,090 --> 00:03:41,000\nbuild up a TCP session,\nI do what's called a TCP handshake.\n\n69\n00:03:41,000 --> 00:03:43,780\nI have to make sure the other\nside supports this and\n\n70\n00:03:43,780 --> 00:03:47,060\nwe have to get set up to be able\nto do this reliable delivery.\n\n71\n00:03:47,060 --> 00:03:49,900\nThe handshake process works pretty simple.\n\n72\n00:03:49,900 --> 00:03:50,850\nAll right.\n\n73\n00:03:50,850 --> 00:03:51,570\nThat's the complex.\n\n74\n00:03:51,570 --> 00:03:52,320\nHere's the simple side.\n\n75\n00:03:53,570 --> 00:03:56,540\nWhen host A wants to\nreach out to host B and\n\n76\n00:03:56,540 --> 00:04:01,590\nhave a reliable communication, it starts\nby sending a message called a SYN message,\n\n77\n00:04:01,590 --> 00:04:03,370\nwhich is a synchronization message.\n\n78\n00:04:03,370 --> 00:04:06,840\nWe're telling the other side hey,\nI want to open up a TCP session and\n\n79\n00:04:06,840 --> 00:04:09,870\nI want to make sure that\nmy data makes it to you.\n\n80\n00:04:10,960 --> 00:04:13,680\nThe other side says,\nhey, that sounds great.\n\n81\n00:04:13,680 --> 00:04:15,500\nI support TCP too let's do it.\n\n82\n00:04:15,500 --> 00:04:17,630\nI'll go ahead and\nbuild a session back with you.\n\n83\n00:04:18,720 --> 00:04:21,130\nThey send an acknowledgment back and\n\n84\n00:04:21,130 --> 00:04:24,520\nthe acknowledgement is saying, yes,\nI got your synchronization message.\n\n85\n00:04:24,520 --> 00:04:28,860\nAnd so I got your SYN, I'm sending you an\nACK, I'm acknowledging it, I'm good to go,\n\n86\n00:04:28,860 --> 00:04:29,870\nall right.\n\n87\n00:04:29,870 --> 00:04:31,320\nSo, that's an important piece.\n\n88\n00:04:31,320 --> 00:04:34,670\nBut notice that it also sends\nalong a synchronization.\n\n89\n00:04:34,670 --> 00:04:37,010\nSo, it's sending a SYN/ACK.\n\n90\n00:04:37,010 --> 00:04:42,440\nThat synchronization is host B building\nup a TCBP session with host A,\n\n91\n00:04:42,440 --> 00:04:44,780\ndoing the same thing in reverse.\n\n92\n00:04:44,780 --> 00:04:47,740\nWe need reliable two way communications,\ndon't we?\n\n93\n00:04:47,740 --> 00:04:50,870\nAnd so that's why it's\nbuilding up the reverse side.\n\n94\n00:04:50,870 --> 00:04:53,170\nSo it's a two way process, right?\n\n95\n00:04:53,170 --> 00:04:56,670\nWell, we send a SYN, they send a SYN/ACK,\n\n96\n00:04:56,670 --> 00:05:00,790\nwe now need to acknowledge\nthe synchronization message they sent us.\n\n97\n00:05:00,790 --> 00:05:04,700\nSo we send a final act back to them,\nletting know, okay,\n\n98\n00:05:04,700 --> 00:05:06,900\nwe got your synchronization message.\n\n99\n00:05:06,900 --> 00:05:08,695\nNow we're good to go.\n\n100\n00:05:08,695 --> 00:05:13,155\nWhen that process is done, our endpoints\nare said to be synchronized and\n\n101\n00:05:13,155 --> 00:05:17,215\nwe can now start to communicate\nour data using TCP, all right.\n\n102\n00:05:17,215 --> 00:05:19,555\nThis process is called a 3 way handshake,\n\n103\n00:05:19,555 --> 00:05:23,715\nbecause of the three steps,\nSYN, SYN/ACK and ACK.\n\n104\n00:05:23,715 --> 00:05:26,005\nAnd this happens automatically\nin the background.\n\n105\n00:05:26,005 --> 00:05:29,120\nIt's a part of TCP, when your computer\nstarts talking to another one.\n\n106\n00:05:29,120 --> 00:05:31,150\nThis is the first step all right.\n\n107\n00:05:31,150 --> 00:05:35,780\nIf this session fails, if this handshake\nfails then we can't communicate,\n\n108\n00:05:35,780 --> 00:05:36,490\nall right.\n\n109\n00:05:36,490 --> 00:05:39,475\nIf the other side doesn't acknowledge\nus or if their not running TCP,\n\n110\n00:05:39,475 --> 00:05:42,300\nif they don't support that,\nwe can't communicate.\n\n111\n00:05:42,300 --> 00:05:45,860\nSo this has to happen before we\nstart sending communications.\n\n112\n00:05:45,860 --> 00:05:48,750\nNow the whole purpose of TCP\nis reliable communication,\n\n113\n00:05:48,750 --> 00:05:51,750\nwe need to know our data\nmade it to the other side.\n\n114\n00:05:51,750 --> 00:05:53,220\nHow does this help us?\n\n115\n00:05:53,220 --> 00:05:56,860\nWell, inside of these communications,\nthese synchronization and\n\n116\n00:05:56,860 --> 00:06:00,250\nacknowledgement messages,\nthere are sequence numbers.\n\n117\n00:06:00,250 --> 00:06:03,050\nAnd the sequence numbers are how\nwe identify our data crossing over\n\n118\n00:06:03,050 --> 00:06:03,820\nthe network.\n\n119\n00:06:03,820 --> 00:06:06,000\nSo the other side will know\nwhat data it's getting, and\n\n120\n00:06:06,000 --> 00:06:08,060\nwhat data it's already received.\n\n121\n00:06:08,060 --> 00:06:09,630\nThose sequence numbers\nare really important.\n\n122\n00:06:09,630 --> 00:06:12,730\nBut how do you know what sequence\nnumber your neighbor is gonna use?\n\n123\n00:06:12,730 --> 00:06:13,280\nYou don't.\n\n124\n00:06:13,280 --> 00:06:15,030\nThey can be just picked out of the blue,\n\n125\n00:06:15,030 --> 00:06:18,840\nso we've got to come up with some\nmechanism to be able to handle that.\n\n126\n00:06:18,840 --> 00:06:21,575\nAnd it's actually handled\nright here in the handshake.\n\n127\n00:06:21,575 --> 00:06:24,655\nYou can pick whatever\nsequence number you want.\n\n128\n00:06:24,655 --> 00:06:26,435\nYou can just pick it out of the blue.\n\n129\n00:06:26,435 --> 00:06:27,085\nAll right?\n\n130\n00:06:27,085 --> 00:06:29,645\nAnd once you've got that sequence number,\nyou can send it to the other guy,\n\n131\n00:06:29,645 --> 00:06:31,245\nand they can build off that.\n\n132\n00:06:31,245 --> 00:06:34,545\nThey can use it, and use it as that\nstarting point for your communication.\n\n133\n00:06:34,545 --> 00:06:36,835\nThat's what happens here in the handshake.\n\n134\n00:06:36,835 --> 00:06:39,215\nMy other diagram here goes\ninto a little more detail.\n\n135\n00:06:39,215 --> 00:06:43,525\nAnd what it's showing are the actual\nsequence numbers inside of it.\n\n136\n00:06:43,525 --> 00:06:47,330\nThat synchronization message that you send\nit's made up of a couple of things, but\n\n137\n00:06:47,330 --> 00:06:51,250\nthe two main parts are the control\nmessage and the sequence number.\n\n138\n00:06:51,250 --> 00:06:52,670\nThe control message is saying, hey,\n\n139\n00:06:52,670 --> 00:06:55,250\nthis is a SYN,\nthis is a synchronization message.\n\n140\n00:06:56,480 --> 00:07:00,900\nAnd the sequence number is saying,\nthis is the sequence number for\n\n141\n00:07:00,900 --> 00:07:05,170\nthis particular segment that we're\nsending across the line, right?\n\n142\n00:07:05,170 --> 00:07:08,170\nThat word segment,\nthe segment is kind of important, right?\n\n143\n00:07:08,170 --> 00:07:12,690\nRemember that as our data goes through\nthe OSI Model, the seven layer OSI Model,\n\n144\n00:07:12,690 --> 00:07:17,540\nwe're adding headers and doing different\nthings at each step along that OSI Model.\n\n145\n00:07:17,540 --> 00:07:21,780\nAnd as we add more data to it,\nour data changes at layer four,\n\n146\n00:07:21,780 --> 00:07:25,960\nat the transport layer,\nour data is said to be a segment.\n\n147\n00:07:25,960 --> 00:07:30,180\nSo when the TCP headers are being added,\nyou've now created a segment.\n\n148\n00:07:30,180 --> 00:07:31,390\nWhen you get into layer three,\n\n149\n00:07:31,390 --> 00:07:35,730\nthe network layer, that's where you add\nyour layer three header, your IP address.\n\n150\n00:07:35,730 --> 00:07:36,300\nRight.\n\n151\n00:07:36,300 --> 00:07:39,190\nAnd at that point, you become a packet.\n\n152\n00:07:39,190 --> 00:07:42,130\nAnd when you get down to layer two,\nthe data link layer, that's where you\n\n153\n00:07:42,130 --> 00:07:45,890\nadd your Mac addresses, your source of\nMac, your source of destination Macs.\n\n154\n00:07:45,890 --> 00:07:49,000\nThat's your layer two header and\nnow you become a frame.\n\n155\n00:07:49,000 --> 00:07:52,628\nSo what you throw in the actual\nnetwork is a frame, but\n\n156\n00:07:52,628 --> 00:07:56,833\nin the context of TCP we're\nactually dealing with segments.\n\n157\n00:07:56,833 --> 00:07:59,998\nSo on the exam when they talk about\na segment you know they're talking about\n\n158\n00:07:59,998 --> 00:08:01,400\nlayer four.\n\n159\n00:08:01,400 --> 00:08:02,917\nWhich is the transport layer.\n\n160\n00:08:02,917 --> 00:08:07,010\nSo when we send that sequence number 300,\nwhat happened to one to 299?\n\n161\n00:08:07,010 --> 00:08:08,850\nThey don't exist.\n\n162\n00:08:08,850 --> 00:08:10,280\nWe just picked 300 out of a hat.\n\n163\n00:08:10,280 --> 00:08:12,380\nWe decided that was\nthe number we wanted and\n\n164\n00:08:12,380 --> 00:08:17,180\nsince this is a SYN message, the other\nside will know, this is the first one.\n\n165\n00:08:17,180 --> 00:08:19,580\nSo I don't expect one through 299.\n\n166\n00:08:19,580 --> 00:08:21,140\nWe're just going to 300.\n\n167\n00:08:21,140 --> 00:08:23,740\nAnd when I say we pick it out of a hat,\nwe really do.\n\n168\n00:08:23,740 --> 00:08:26,248\nIt can be a completely random number.\n\n169\n00:08:26,248 --> 00:08:27,772\nYou can pick whatever number you want.\n\n170\n00:08:27,772 --> 00:08:33,130\nIt can be 5 it can be 5,000 it can be 227,\nwhatever you want.\n\n171\n00:08:33,130 --> 00:08:36,352\nI believe it's a maximum of 65,535 but\n\n172\n00:08:36,352 --> 00:08:40,530\nit's any number you\nwant within that range.\n\n173\n00:08:40,530 --> 00:08:43,630\nNow when you send it to the other side,\nit's a synchronization, so\n\n174\n00:08:43,630 --> 00:08:45,650\nthe other side needs to acknowledge it.\n\n175\n00:08:45,650 --> 00:08:49,894\nAnd the acknowledgement is saying,\nyes, I received your SYN message and\n\n176\n00:08:49,894 --> 00:08:52,093\nnow I'm ready for your next message.\n\n177\n00:08:52,093 --> 00:08:54,780\nI got it, I'm ready for the next one.\n\n178\n00:08:54,780 --> 00:08:57,080\nIt's our confirmation of receipt.\n\n179\n00:08:57,080 --> 00:09:02,260\nAnd so you'll see that in the SYN/ACK that\ngoes back, the control says it's both\n\n180\n00:09:02,260 --> 00:09:06,000\na synchronization and an acknowledgement,\nand it's acknowledging 301.\n\n181\n00:09:06,000 --> 00:09:06,500\nAlright.\n\n182\n00:09:07,530 --> 00:09:10,850\nWell, we sent 300,\nwhy is it acknowledging 301?\n\n183\n00:09:10,850 --> 00:09:14,324\nWhat that means is, yes, we got 300.\n\n184\n00:09:14,324 --> 00:09:16,631\nNow we're ready for 301.\n\n185\n00:09:16,631 --> 00:09:17,551\nWe're ready for the next one.\n\n186\n00:09:17,551 --> 00:09:18,352\nAll right.\n\n187\n00:09:18,352 --> 00:09:22,939\nIf we didn't get that back, if we didn't\nget a acknowledgment for 301 back,\n\n188\n00:09:22,939 --> 00:09:27,270\nwe would know that 300 never made it,\nand we'd need to resend it.\n\n189\n00:09:27,270 --> 00:09:27,800\nAll right?\n\n190\n00:09:27,800 --> 00:09:31,520\nSo this is more of a I'm ready,\nsend me this one next.\n\n191\n00:09:31,520 --> 00:09:32,350\nOkay.\n\n192\n00:09:32,350 --> 00:09:36,250\nThe sequence number they picked though,\nsee how this sequence number's 800?\n\n193\n00:09:36,250 --> 00:09:38,292\nThat's completely different than 300.\n\n194\n00:09:38,292 --> 00:09:39,830\nWhy is that?\n\n195\n00:09:39,830 --> 00:09:44,474\nWell, the reason is that this is\na separate TCP sessions right,\n\n196\n00:09:44,474 --> 00:09:47,410\nits the return, the reverse side.\n\n197\n00:09:47,410 --> 00:09:51,940\nSo we've got A to B and we've got B to\nA and for B to A, for the return trip they\n\n198\n00:09:51,940 --> 00:09:56,170\ncan pick whatever sequence number they\nwant and so here host B just chose 800.\n\n199\n00:09:56,170 --> 00:09:59,375\nSo when we get the SYN/ACK\nwe know they got our 300 and\n\n200\n00:09:59,375 --> 00:10:02,290\nwe're ready to start sending other things.\n\n201\n00:10:02,290 --> 00:10:07,630\nBut we need to acknowledge their 800 so\nwe send an acknowledgement back and\n\n202\n00:10:07,630 --> 00:10:10,790\nin our acknowledgement,\nwe're acknowledging 801.\n\n203\n00:10:10,790 --> 00:10:15,220\nYes we got 800, now we're ready for 801.\n\n204\n00:10:15,220 --> 00:10:18,070\nAnd then our new sequence number is 301.\n\n205\n00:10:18,070 --> 00:10:19,750\nOur last one was 300.\n\n206\n00:10:19,750 --> 00:10:20,370\nHere is 301.\n\n207\n00:10:20,370 --> 00:10:24,440\nNow our handshake is in place,\nand we're ready to go.\n\n208\n00:10:25,690 --> 00:10:28,420\nThat's whats happening in that handshake.\n\n209\n00:10:28,420 --> 00:10:31,840\nNow there's a few different things\nthat can happen that break this up,\n\n210\n00:10:31,840 --> 00:10:32,920\nthat make it a little less normal.\n\n211\n00:10:32,920 --> 00:10:35,980\nSo here I've got it nice and normalized,\nall in order, looks all pretty.\n\n212\n00:10:35,980 --> 00:10:40,030\nThis is not how it works in\nreal life most of the time.\n\n213\n00:10:40,030 --> 00:10:42,440\nIn real life,\nthere's two things that mix this up.\n\n214\n00:10:42,440 --> 00:10:45,580\nThing number one is lost data.\n\n215\n00:10:45,580 --> 00:10:48,550\nMaybe our SYN message never\nmakes it to the other side.\n\n216\n00:10:48,550 --> 00:10:51,290\nOr maybe their acknowledgement\nnever makes it back.\n\n217\n00:10:51,290 --> 00:10:55,380\nIf we wait for an acknowledgement and we\ndon't get it, we need to do a re-transmit.\n\n218\n00:10:55,380 --> 00:10:58,110\nWe know if I never get\nan acknowledgement for 301,\n\n219\n00:10:58,110 --> 00:11:00,674\nthey must never have gotten my SYN for\n300.\n\n220\n00:11:01,810 --> 00:11:04,180\nSo, or whatever was sequence number 300,\n\n221\n00:11:04,180 --> 00:11:06,690\nyou know the SYN is done at\nthe very beginning, the handshake.\n\n222\n00:11:06,690 --> 00:11:09,820\nOnce the handshake is done,\nthen we’re just sending our regular data.\n\n223\n00:11:09,820 --> 00:11:12,429\nSo sequence 300 might be\npart of my regular data.\n\n224\n00:11:12,429 --> 00:11:17,549\nSo if I never get that acknowledgement\nback for 301, then I need to resend 300.\n\n225\n00:11:17,549 --> 00:11:19,590\nAll right.\nNow the cause of that could be two-fold.\n\n226\n00:11:19,590 --> 00:11:22,850\nIt could be that my data never made\nit to them in the first place.\n\n227\n00:11:22,850 --> 00:11:24,340\nThey're not gonna send me\nan acknowledgement if they\n\n228\n00:11:24,340 --> 00:11:25,500\nnever even got the data.\n\n229\n00:11:25,500 --> 00:11:28,340\nThey don't know what number\nto acknowledge, all right.\n\n230\n00:11:28,340 --> 00:11:31,240\nBut the other thing that could be\nthat they did receive the data and\n\n231\n00:11:31,240 --> 00:11:33,900\nit was the acknowledgement\nthat got lost on the network.\n\n232\n00:11:33,900 --> 00:11:35,730\nMaybe I just never received\nthat acknowledgement,\n\n233\n00:11:35,730 --> 00:11:37,150\neven though they got the data.\n\n234\n00:11:37,150 --> 00:11:40,120\nIf that happens,\nwe'll re-transmit the data.\n\n235\n00:11:40,120 --> 00:11:42,640\nAnd when they get it,\nthey've already received 300.\n\n236\n00:11:42,640 --> 00:11:46,730\nThey're getting a second copy of 300,\nnow they're not gonna process it.\n\n237\n00:11:46,730 --> 00:11:49,400\nThey're gonna look in there and\nsay this could be an attacker,\n\n238\n00:11:49,400 --> 00:11:53,230\nthis could somebody re-transmitting\nthis data, so they're gonna discard it.\n\n239\n00:11:53,230 --> 00:11:57,080\nBut they'll send another acknowledgment,\nthey will acknowledge it saying, yeah,\n\n240\n00:11:57,080 --> 00:11:58,890\nI've already got it,\nhere's your acknowledgement.\n\n241\n00:11:58,890 --> 00:12:01,150\nAll right?\nSo that protects us from an attack, but\n\n242\n00:12:01,150 --> 00:12:03,700\nit does create the mechanism to\nwhere the re-transmit works.\n\n243\n00:12:03,700 --> 00:12:08,200\nWe get the data, and then the next\nsegment will be ready to send, all right?\n\n244\n00:12:08,200 --> 00:12:11,500\nThat's one scenario where things\ndon't quite behave like this.\n\n245\n00:12:11,500 --> 00:12:15,730\nThe second scenario is with\nsequence number randomization.\n\n246\n00:12:15,730 --> 00:12:20,100\nMost modern operating systems do sequence\nnumber randomization because an attacker\n\n247\n00:12:20,100 --> 00:12:21,860\ncan use a sniffer on the network.\n\n248\n00:12:21,860 --> 00:12:24,930\nThey can capture your packets or\nyour frames.\n\n249\n00:12:24,930 --> 00:12:27,760\nThey can decode it down to layer four,\nto the segment and\n\n250\n00:12:27,760 --> 00:12:29,610\nthey can see what sequence\nnumber you're on.\n\n251\n00:12:29,610 --> 00:12:33,050\nAnd they can use sequence number\nprediction to guess what number's next.\n\n252\n00:12:33,050 --> 00:12:34,450\nIt's not hard right here.\n\n253\n00:12:34,450 --> 00:12:36,510\nIf I did 300, and then 301,\n\n254\n00:12:36,510 --> 00:12:39,120\nyou guys have probably unraveled\nthe mystery here, right?\n\n255\n00:12:39,120 --> 00:12:40,650\nThe next one is 302.\n\n256\n00:12:40,650 --> 00:12:43,870\nSo an attacker could forge a 302, and\n\n257\n00:12:43,870 --> 00:12:48,470\nsend it on the network, even before\nthe acknowledgement for 301 is sent.\n\n258\n00:12:48,470 --> 00:12:51,520\nSend it ahead of time\nto beat us to doing it.\n\n259\n00:12:51,520 --> 00:12:55,300\nNow, host B might get it and\nview it as being from us because it's got\n\n260\n00:12:55,300 --> 00:12:57,710\nthe right sequence number and\nit brings it in, all right?\n\n261\n00:12:57,710 --> 00:13:01,220\nThat's a very viable attack,\na very real attack.\n\n262\n00:13:01,220 --> 00:13:04,970\nSo, most modern operating systems\ndo sequence number randomizations.\n\n263\n00:13:06,010 --> 00:13:10,370\nWhen they receive a sequence number, they\nacknowledge that they've received it and\n\n264\n00:13:10,370 --> 00:13:12,400\nthey're ready for the next number.\n\n265\n00:13:12,400 --> 00:13:16,900\nFrom there,\nwe can then pick whatever number we want.\n\n266\n00:13:16,900 --> 00:13:20,960\nJust because they say they're ready for\n301 doesn't mean I have to send them 301.\n\n267\n00:13:20,960 --> 00:13:22,300\nI can send them 535.\n\n268\n00:13:22,300 --> 00:13:23,270\nRIght?\n\n269\n00:13:23,270 --> 00:13:25,500\nSo I can send them a different number and\nthey'll acknowledge that.\n\n270\n00:13:26,540 --> 00:13:30,720\nThe other thing that can happen\nis host B can respond back\n\n271\n00:13:30,720 --> 00:13:33,880\nwith acknowledging a higher number.\n\n272\n00:13:33,880 --> 00:13:37,850\nThey can acknowledge 500, and\nthat would say yeah, I received 300,\n\n273\n00:13:37,850 --> 00:13:38,670\nI'm ready for 500.\n\n274\n00:13:38,670 --> 00:13:41,450\nI'm ready for something far beyond.\n\n275\n00:13:41,450 --> 00:13:44,200\nAnd then we can step up and\nmove to that level.\n\n276\n00:13:44,200 --> 00:13:48,240\nSo these numbers can be adjusted\nin flight if they need to be.\n\n277\n00:13:48,240 --> 00:13:50,540\nMost of your modern operating\nsystems will do it.\n\n278\n00:13:50,540 --> 00:13:54,570\nIf your OS's dont then\nusually your firewalls will.\n\n279\n00:13:54,570 --> 00:13:59,490\nAll Cisco ASA's have sequence\nnumbered randomization turned on\n\n280\n00:13:59,490 --> 00:14:04,530\nby default so when frames pass through\nthose and you know, they decode it up to\n\n281\n00:14:04,530 --> 00:14:08,420\nthe transport layer in ASA, it's gotta\nbe able to look at the port numbers and\n\n282\n00:14:08,420 --> 00:14:10,490\nall that information to do\nthe firewall filtering.\n\n283\n00:14:10,490 --> 00:14:13,220\nSo it's going to be decoding\nthe packet up to that layer and\n\n284\n00:14:13,220 --> 00:14:17,360\nwhile it's got it decoded, it'll go in,\nchange the sequence numbers, changing them\n\n285\n00:14:17,360 --> 00:14:21,530\nto make it where they can't be predicted,\nwhere they're semi-random, all right?\n\n286\n00:14:21,530 --> 00:14:25,490\nI say semi-random because in a computer,\nnothing is ever truly random, right?\n\n287\n00:14:25,490 --> 00:14:27,510\nBut it does as good a job as it can,\nand so\n\n288\n00:14:27,510 --> 00:14:30,080\nit'll randomize it to\nprevent that type of attack.\n\n289\n00:14:30,080 --> 00:14:32,530\nNow, nothing's foolproof,\nthe attack is still possible.\n\n290\n00:14:32,530 --> 00:14:35,330\nSome people have figured out the\nrandomization algorithms and they can kind\n\n291\n00:14:35,330 --> 00:14:39,680\nof guess from there so that's why\nwe don't rely on TCP for security.\n\n292\n00:14:39,680 --> 00:14:41,580\nYou want something on top of this, right?\n\n293\n00:14:41,580 --> 00:14:46,000\nIf you want a true guarantee of security,\nyou'll use SSL or TLS, right?\n\n294\n00:14:46,000 --> 00:14:49,860\nYou'll use VPN tunnels,\nother things that lay on top of TCP.\n\n295\n00:14:49,860 --> 00:14:53,990\nBut right here,\nwe at least have our sequence numbers.\n\n296\n00:14:53,990 --> 00:14:59,210\nSo as far as the basic operation of TCP,\nsetting up this session,\n\n297\n00:14:59,210 --> 00:15:02,020\ngetting us communicated, well, that's it.\n\n298\n00:15:02,020 --> 00:15:04,810\nThat's how communications in TCP work.\n\n299\n00:15:04,810 --> 00:15:08,450\nNow, if we want to go beyond that though,\nthere are a lot of neat little bells and\n\n300\n00:15:08,450 --> 00:15:10,280\nwhistles that we'll see\ninside of there and\n\n301\n00:15:10,280 --> 00:15:13,140\nI'm going to go a little out\nof order with the objectives.\n\n302\n00:15:13,140 --> 00:15:16,270\nIf we take a look at\nthe objectives themselves,\n\n303\n00:15:16,270 --> 00:15:20,981\nI want to jump down to 1.4D because\nit makes sense to do this one next.\n\n304\n00:15:20,981 --> 00:15:23,840\n1.4D is Windowing.\n\n305\n00:15:23,840 --> 00:15:25,830\nWhat the heck is windowing?\n\n306\n00:15:25,830 --> 00:15:30,440\nWell, with windowing, what we try\nto do is make TCP more efficient.\n\n307\n00:15:30,440 --> 00:15:32,660\nOne of the problems with TCP is for\n\n308\n00:15:32,660 --> 00:15:37,620\nevery sequence number we send,\nwe need an acknowledgement back, right?\n\n309\n00:15:37,620 --> 00:15:43,660\nWell, if we get one acknowledgement for\nevery sequence number we send, that\n\n310\n00:15:43,660 --> 00:15:48,190\nmeans that 50% of our traffic is going\nto simply be acknowledgements, right?\n\n311\n00:15:48,190 --> 00:15:52,410\nWe're getting a lot of traffic back\nthat's kind of unnecessary, right?\n\n312\n00:15:52,410 --> 00:15:53,310\nAnd we're having to wait.\n\n313\n00:15:53,310 --> 00:15:53,814\nAll right,\n\n314\n00:15:53,814 --> 00:15:57,251\nwe need someone to acknowledge data before\nwe send this next set of data, right?\n\n315\n00:15:57,251 --> 00:15:58,870\nSo it slows things down.\n\n316\n00:15:58,870 --> 00:16:00,333\nIt's bad for performance.\n\n317\n00:16:00,333 --> 00:16:02,198\nThe more acknowledgements you send,\n\n318\n00:16:02,198 --> 00:16:06,170\nthe slower your transfers the more data\nyou are going to generate on the network.\n\n319\n00:16:06,170 --> 00:16:10,440\nSo a TCP window tries to\nmake this more efficient.\n\n320\n00:16:10,440 --> 00:16:17,040\nThe window says that one acknowledgement\ncan cover more than one sequence number.\n\n321\n00:16:17,040 --> 00:16:21,070\nSo I might be sending five, or 50, or\n\n322\n00:16:21,070 --> 00:16:24,310\n500 segments, right,\nall with unique sequence numbers.\n\n323\n00:16:24,310 --> 00:16:28,110\nAnd get just one acknowledgement\nback that covers them, all right?\n\n324\n00:16:28,110 --> 00:16:29,440\nThat's a window.\n\n325\n00:16:29,440 --> 00:16:32,660\nAnd the windows work like this.\n\n326\n00:16:32,660 --> 00:16:38,717\nWe send a message, so here we are sending\na new communication across, all right?\n\n327\n00:16:38,717 --> 00:16:41,425\nAnd when we do our acknowledgement\nin the very beginning,\n\n328\n00:16:41,425 --> 00:16:43,460\nwhen the TCP handshake happens.\n\n329\n00:16:43,460 --> 00:16:47,330\nAnd as soon as the handshake is done,\nwe negotiate a window size.\n\n330\n00:16:47,330 --> 00:16:51,160\nNow what a lot of systems do is start\nwith a very low window size and\n\n331\n00:16:51,160 --> 00:16:54,500\nthen after they negotiate,\nmove up to something higher, right?\n\n332\n00:16:54,500 --> 00:16:56,000\nOther systems might try it differently.\n\n333\n00:16:56,000 --> 00:16:59,230\nThey might start with a really high window\nsize and then move lower to compensate.\n\n334\n00:16:59,230 --> 00:17:01,060\nBut the two systems have to negotiate.\n\n335\n00:17:01,060 --> 00:17:05,100\nBecause different operating systems use\ndifferent default window sizes, and\n\n336\n00:17:05,100 --> 00:17:09,770\ndifferent network conditions would demand\ndifferent window sizes, all right?\n\n337\n00:17:09,770 --> 00:17:11,370\nIf you're on dial up connection or\n\n338\n00:17:11,370 --> 00:17:16,320\nsomething really unreliable, your window\nsize is going to be fairly small.\n\n339\n00:17:16,320 --> 00:17:18,020\nBut if you're on something\nthat's very reliable,\n\n340\n00:17:18,020 --> 00:17:19,750\nyou can push huge amounts\nof data without loss,\n\n341\n00:17:19,750 --> 00:17:22,810\nlike fiber optic networks,\nyour window size might be very large.\n\n342\n00:17:22,810 --> 00:17:26,830\nIt just depends on how much you\ncan communicate, all right?\n\n343\n00:17:26,830 --> 00:17:30,400\nSo here this is an exam of our\nwindow size was three, all right.\n\n344\n00:17:30,400 --> 00:17:34,990\nIf our window size was three,\nwe might send across three pieces of data.\n\n345\n00:17:34,990 --> 00:17:37,540\nSo here we're sending across sequence one,\nsequence two, sequence three.\n\n346\n00:17:37,540 --> 00:17:43,195\nAnd then we're getting one acknowledgement\nback saying acknowledge four.\n\n347\n00:17:43,195 --> 00:17:46,645\nI got one two three,\nI'm ready for four, all right.\n\n348\n00:17:46,645 --> 00:17:48,465\nIn the acknowledgement\nafter the handshake,\n\n349\n00:17:48,465 --> 00:17:50,165\nwe had sent back to do\na window size of three.\n\n350\n00:17:50,165 --> 00:17:54,008\nThat's how host B knew to go ahead and\nsend three sequence numbers across,\n\n351\n00:17:54,008 --> 00:17:56,642\nall right, and not wait for\nthe acknowledgement.\n\n352\n00:17:56,642 --> 00:18:01,122\nThat's really what the window says, is you\ncan send up to this many numbers without\n\n353\n00:18:01,122 --> 00:18:05,667\nwaiting for an acknowledgement, but once\nyou hit this number, once you hit three in\n\n354\n00:18:05,667 --> 00:18:10,590\nthis case, then you need to stop and wait\nto get an acknowledgment back, all right?\n\n355\n00:18:10,590 --> 00:18:14,080\nAnd so that number is gonna vary\nbased on your connection and\n\n356\n00:18:14,080 --> 00:18:16,850\nit may even adjust during communications,\nright?\n\n357\n00:18:16,850 --> 00:18:20,450\nIt can be variable and\nadjusted as needed to compensate for\n\n358\n00:18:20,450 --> 00:18:22,420\ncommunications on your network, all right.\n\n359\n00:18:22,420 --> 00:18:25,750\nBut this really does save a lot\nof resources on the network.\n\n360\n00:18:25,750 --> 00:18:29,400\nThe only negative with this is\nif something didn't make it.\n\n361\n00:18:29,400 --> 00:18:33,060\nIf I don't get that acknowledgement four,\nif I'm sitting there waiting and\n\n362\n00:18:33,060 --> 00:18:34,480\nI don't get acknowledgement four,\n\n363\n00:18:34,480 --> 00:18:39,690\nwell I don't know which of my sequence\nnumbers didn't make it to the other side.\n\n364\n00:18:39,690 --> 00:18:40,810\nDid none of them make it?\n\n365\n00:18:40,810 --> 00:18:43,360\nMaybe all three didn't\nmake it to the other side.\n\n366\n00:18:43,360 --> 00:18:46,620\nMaybe one in two did, but three didn't.\n\n367\n00:18:46,620 --> 00:18:50,300\nBut I don't know, because I'm getting\none acknowledgement from all of them.\n\n368\n00:18:50,300 --> 00:18:54,500\nSo when I do the retransmit,\nI have to retransmit the entire window.\n\n369\n00:18:55,750 --> 00:19:00,730\nSo the bigger your window is,\nthe more of a set of data your\n\n370\n00:19:00,730 --> 00:19:04,900\ngoing to have to retransmit when a failure\nhappens, and that's why on and unreliable\n\n371\n00:19:04,900 --> 00:19:09,130\nnetwork big window sizes are bad because\nyour retransmit are going to be bigger.\n\n372\n00:19:09,130 --> 00:19:13,590\nOn a unreliable network, smaller windows\nare better because now your retransmitting\n\n373\n00:19:13,590 --> 00:19:16,900\nless data when an outage,\nyou know when data gets lost.\n\n374\n00:19:16,900 --> 00:19:20,840\nSo, keep that in mind with\nthe communications that we send across.\n\n375\n00:19:20,840 --> 00:19:23,416\nIt is an interesting thing.\n\n376\n00:19:23,416 --> 00:19:26,123\nThere's entire websites out there\non the internet where people\n\n377\n00:19:26,123 --> 00:19:29,100\ndemonstrate how to calculate\nthe optimal window size.\n\n378\n00:19:29,100 --> 00:19:30,610\nFor most of us we don't have to do that.\n\n379\n00:19:30,610 --> 00:19:34,320\nYour operating systems, your routers, your\nfirewalls, they all do this now for us,\n\n380\n00:19:34,320 --> 00:19:39,330\nand so that ancient art of calculating\na Windows size is really best left in\n\n381\n00:19:39,330 --> 00:19:41,060\nto 80s and early 90s.\n\n382\n00:19:41,060 --> 00:19:45,730\nBut if you want some history on that,\nyou can go on and just do a search for\n\n383\n00:19:45,730 --> 00:19:47,710\nthe word RWIN.\n\n384\n00:19:47,710 --> 00:19:51,300\nRWIN, it's an abbreviation for\nReceive Window.\n\n385\n00:19:51,300 --> 00:19:56,760\nAnd so with TCP, it runs a calculation\nthat uses your bandwidth and\n\n386\n00:19:56,760 --> 00:19:58,750\nyour optimal receive window.\n\n387\n00:19:58,750 --> 00:20:02,430\nAnd it calculates that together to\nfigure out what's the best combination\n\n388\n00:20:02,430 --> 00:20:03,960\nto use as your window size.\n\n389\n00:20:03,960 --> 00:20:08,380\nAnd it just changes, it changes constantly\nbased on conditions on your network.\n\n390\n00:20:08,380 --> 00:20:11,980\nSo it's not really something that you\nwanna get involved in on your own.\n\n391\n00:20:11,980 --> 00:20:14,410\nBut that process is pretty\nstraightforward, right?\n\n392\n00:20:14,410 --> 00:20:17,230\nMinimizing the amount of\nacknowledgements that we send so\n\n393\n00:20:17,230 --> 00:20:18,720\nthat we can optimize our communications.\n\n394\n00:20:18,720 --> 00:20:21,490\nWe're not having to acknowledge\nevery individual, single thing.\n\n395\n00:20:23,190 --> 00:20:26,110\nAll right, I'm trying to thing\nif I left anything out here.\n\n396\n00:20:26,110 --> 00:20:29,730\nThere is something else I wanted to\nmention on bandwidth delay product but\n\n397\n00:20:29,730 --> 00:20:32,550\nI will save that for the later segments.\n\n398\n00:20:32,550 --> 00:20:35,180\nThat's pretty much it for TCP.\n\n399\n00:20:35,180 --> 00:20:39,710\nNow, when a TCP communication is done,\nit just ends.\n\n400\n00:20:39,710 --> 00:20:42,000\nIt tears down the session and that's it.\n\n401\n00:20:42,000 --> 00:20:45,020\nAnd then next time we establish\na TCP session with that host,\n\n402\n00:20:45,020 --> 00:20:47,070\nwe'll have to do a whole new handshake,\nright.\n\n403\n00:20:47,070 --> 00:20:48,990\nSo every time we connect to a host,\n\n404\n00:20:48,990 --> 00:20:51,280\nwe could be negotiating\nall new sequence numbers.\n\n405\n00:20:51,280 --> 00:20:54,140\nBut the handshake is really fast,\nbrief, and not a big deal.\n\n406\n00:20:55,550 --> 00:21:01,280\nAll right, so in this segment, we got\na chance to see basic TCP operation,\n\n407\n00:21:01,280 --> 00:21:05,400\nhow it handles things with acknowledgments\nand synchronization messages and syntax.\n\n408\n00:21:05,400 --> 00:21:07,910\nAnd then we got to take\na look at window sizes and\n\n409\n00:21:07,910 --> 00:21:10,690\nhow we can optimize\nthe communications on the network.\n\n410\n00:21:10,690 --> 00:21:14,660\nThose are the two basic areas and\nthat shouldn't be new for you guys,\n\n411\n00:21:14,660 --> 00:21:17,990\nthat's stu.ff that we talked about,\nthat was all covered in the CCNA exam so\n\n412\n00:21:17,990 --> 00:21:19,100\nyou should've seen that before.\n\n413\n00:21:19,100 --> 00:21:21,111\nIt probably didn't blow your mind,\nall right?\n\n414\n00:21:21,111 --> 00:21:23,570\nBut in the next few segments we're going\nto take a look at some of the more\n\n415\n00:21:23,570 --> 00:21:26,545\nadvanced things that are behind the scenes\nwith TCP and these are the things that\n\n416\n00:21:26,545 --> 00:21:30,665\nare not covered in CCNA so they may be new\nfor some of you, maybe old hat for some.\n\n417\n00:21:30,665 --> 00:21:33,765\nSo stay tuned,\nwe're going to take a break right now.\n\n418\n00:21:33,765 --> 00:21:38,235\nBut stay tuned after this we'll be\nback with more TCP configuration.\n\n419\n00:21:38,235 --> 00:21:45,815\n[MUSIC]\n\n420\n00:21:45,815 --> 00:21:47,340\nAll right, welcome back everybody.\n\n421\n00:21:47,340 --> 00:21:50,140\nSo in our second segment we're going to\ntake a look at some of the more advanced\n\n422\n00:21:50,140 --> 00:21:51,430\nfeatures inside a TCP.\n\n423\n00:21:51,430 --> 00:21:55,630\nSome of the things we don't normally\ntalk about because they're automatic.\n\n424\n00:21:55,630 --> 00:21:57,820\nBut the things we need to be\naware of in the background,\n\n425\n00:21:57,820 --> 00:22:00,210\nespecially at the CCMP level.\n\n426\n00:22:00,210 --> 00:22:04,600\nThe first one I want to talk about\nis objective 1.4a which is IPV4 and\n\n427\n00:22:04,600 --> 00:22:07,060\nIPV6 PMTU.\n\n428\n00:22:07,060 --> 00:22:11,680\nLet me bring up the exam objectives so we\ncan see that real quick, right here, PMTU.\n\n429\n00:22:11,680 --> 00:22:14,940\nNow MTU, maximum transmission unit,\n\n430\n00:22:14,940 --> 00:22:17,766\nthat's a term we should already\nbe familiar with, all right?\n\n431\n00:22:17,766 --> 00:22:22,790\nAt layer two, at our frame level when\nwe're creating a frame on the network\n\n432\n00:22:22,790 --> 00:22:24,940\nthe frame can only be so big.\n\n433\n00:22:24,940 --> 00:22:29,883\nAnd on a standard ethernet network,\nit's normally 1500 bytes.\n\n434\n00:22:29,883 --> 00:22:31,130\nIt doesn't have to be, right?\n\n435\n00:22:31,130 --> 00:22:34,260\nWe can adjust that like super\nframes using 9,000 bytes, but\n\n436\n00:22:34,260 --> 00:22:36,400\nthe most common one you'll\nencounter is 1500 bytes.\n\n437\n00:22:36,400 --> 00:22:41,140\nAnd what happens if your data\nis bigger than 1500 bytes?\n\n438\n00:22:41,140 --> 00:22:45,200\nWell, it's gotta be broken\nup into multiple frames.\n\n439\n00:22:45,200 --> 00:22:48,870\nAll right and they call that fragmentation\nright, you're fragmenting your data across\n\n440\n00:22:48,870 --> 00:22:50,360\nmultiple frames to send\nit across the network.\n\n441\n00:22:50,360 --> 00:22:52,510\nSo that's what an MTU does.\n\n442\n00:22:52,510 --> 00:22:56,330\nSo what is a PMTU a path MTU.\n\n443\n00:22:56,330 --> 00:23:01,160\nWell MTU's are only\ncalculated between nodes.\n\n444\n00:23:01,160 --> 00:23:04,360\nSo when we look at a complex\nnetwork like this,\n\n445\n00:23:04,360 --> 00:23:10,370\nmy PC talking to a router and maybe I'm\ntalking all the way to a PC way over here.\n\n446\n00:23:10,370 --> 00:23:16,240\nWell if my PC is talking to a router, that\nlink, that layer two link between me and\n\n447\n00:23:16,240 --> 00:23:19,380\nthe router, it's got an MT or\na maximum transmission unit.\n\n448\n00:23:19,380 --> 00:23:22,450\nAll right, and so when I'm talking to\nthat router, I'm aware of that, and\n\n449\n00:23:22,450 --> 00:23:24,440\nI'm fragmenting my data accordingly.\n\n450\n00:23:24,440 --> 00:23:26,710\nBut that's just this link.\n\n451\n00:23:26,710 --> 00:23:28,080\nWhat about this link here?\n\n452\n00:23:28,080 --> 00:23:29,770\nWhat about this one over here, right?\n\n453\n00:23:29,770 --> 00:23:33,160\nI might be gigabit ethernet but\n\n454\n00:23:33,160 --> 00:23:38,000\nthis might be a 1.544 megabit\nT1 serial line, all right?\n\n455\n00:23:38,000 --> 00:23:41,580\nThis might be a 10 gig metro e MPLS line.\n\n456\n00:23:41,580 --> 00:23:45,898\nYou can have all sorts of different\nconnections across the path before you\n\n457\n00:23:45,898 --> 00:23:48,833\nreach the end unit,\nthe machine at the other end.\n\n458\n00:23:48,833 --> 00:23:53,301\nAnd so while we might be planning for\nfragmentation right here,\n\n459\n00:23:53,301 --> 00:23:57,360\nthere could be fragmentation\nall along this path.\n\n460\n00:23:57,360 --> 00:24:00,850\nAnd that all affects performance.\n\n461\n00:24:00,850 --> 00:24:06,152\nSo, one of the things that TCP\ndoes is to calculate a path MTU\n\n462\n00:24:06,152 --> 00:24:12,427\nto look at the MTUs all the way across\nthe link to find the smallest one.\n\n463\n00:24:12,427 --> 00:24:15,654\nWhen it finds the smallest MTU\nacross all of these links,\n\n464\n00:24:15,654 --> 00:24:17,410\nwho knows where that might be.\n\n465\n00:24:17,410 --> 00:24:18,980\nIt might be here,\nit might be at the other end.\n\n466\n00:24:18,980 --> 00:24:21,497\nWhen it finds the smallest one,\n\n467\n00:24:21,497 --> 00:24:26,670\nTCP will start crafting its\nsegment to fit that size.\n\n468\n00:24:26,670 --> 00:24:29,623\nIt'll make the segments that size,\nso that they don't fragment.\n\n469\n00:24:29,623 --> 00:24:33,991\nSo that when they get down to layer 2,\nthey'll already be small enough, so\n\n470\n00:24:33,991 --> 00:24:38,909\nthey fit within a 1,500 byte frame or\nmaybe it's smaller, somewhere out here,\n\n471\n00:24:38,909 --> 00:24:43,840\nmaybe on one of these links,\nsomebody's dropped it down to 1492.\n\n472\n00:24:43,840 --> 00:24:49,021\nYou see this when people have 802.1Q VLAN\ntagging and they're doing MPLS tagging,\n\n473\n00:24:49,021 --> 00:24:53,666\nthey get a couple of different tags on\nthere, you need room for those tags Tags.\n\n474\n00:24:53,666 --> 00:24:57,171\nSo some people might shrink their\nMTU a bit to make room for that and\n\n475\n00:24:57,171 --> 00:25:00,265\nensure their data doesn't\noverlap with the tags.\n\n476\n00:25:00,265 --> 00:25:05,235\nSo it'll detect that and it will\nstart shrinking the packets early or\n\n477\n00:25:05,235 --> 00:25:08,302\nshrinking the segment early, so\nthat by the time it gets into a frame,\n\n478\n00:25:08,302 --> 00:25:12,852\nit's already small enough and\nwe don't have to do any fragmentation.\n\n479\n00:25:12,852 --> 00:25:17,832\nNow that frame can cross each of\nthese different links going from node\n\n480\n00:25:17,832 --> 00:25:22,012\nto node to node and\nnot fragment versus one that might\n\n481\n00:25:22,012 --> 00:25:25,210\nfragment between this router and\nthe next router.\n\n482\n00:25:25,210 --> 00:25:27,416\nBut then be fine between\nthese two routers,\n\n483\n00:25:27,416 --> 00:25:30,109\nthen fragment again between these two and\nthen so on.\n\n484\n00:25:30,109 --> 00:25:32,260\nIt's having to get\nreassembled multiple times.\n\n485\n00:25:32,260 --> 00:25:35,540\nIf we can plan early,\nthat gets taken care of.\n\n486\n00:25:35,540 --> 00:25:37,344\nTCP is able to handle that.\n\n487\n00:25:37,344 --> 00:25:39,207\nWe're talking to the other hosts and so\n\n488\n00:25:39,207 --> 00:25:42,662\nwe can get a chance to see that\ncommunication and figure out the path MTU.\n\n489\n00:25:42,662 --> 00:25:44,640\nNow you could calculate this yourself.\n\n490\n00:25:44,640 --> 00:25:47,928\nYou could go and figure it out and\nset your MTU, but\n\n491\n00:25:47,928 --> 00:25:50,209\nMTUs are set globally on a device.\n\n492\n00:25:50,209 --> 00:25:53,525\nSo if we adjust the MTU, it's gonna\nadjust it for all of our communications,\n\n493\n00:25:53,525 --> 00:25:55,570\nwhich would include local communications.\n\n494\n00:25:55,570 --> 00:25:56,551\nThat would be bad.\n\n495\n00:25:56,551 --> 00:26:01,160\nSo TCP plans ahead,\nwe're not actually adjusting our MTU.\n\n496\n00:26:01,160 --> 00:26:03,429\nOur MTU here might still be set to 1,500.\n\n497\n00:26:04,690 --> 00:26:10,332\nBut if we detect an MTU out here that's\nsay 1,200, ours is set to 1,500.\n\n498\n00:26:10,332 --> 00:26:15,792\nBut if TCP starts shrinking the segments\nso they're already under 1,200,\n\n499\n00:26:15,792 --> 00:26:20,630\nwhen they get down to layer two,\nit'll see this 1,200 byte data.\n\n500\n00:26:20,630 --> 00:26:24,081\nAnd it'll say, well, 1500 is my maximum\nMTU, that fits, I'll just send it along.\n\n501\n00:26:24,081 --> 00:26:28,841\nAnd it's already small enough that it goes\nalong without having to be fragmented,\n\n502\n00:26:28,841 --> 00:26:30,609\nthat's what path MTU's do and\n\n503\n00:26:30,609 --> 00:26:34,250\nthat's one of the things that\nTCP takes care of for us.\n\n504\n00:26:34,250 --> 00:26:36,559\nLooking at the end to end communication.\n\n505\n00:26:37,870 --> 00:26:42,280\nNow that kind of leads us\ninto the next objective.\n\n506\n00:26:42,280 --> 00:26:45,275\nSo IPv4 and IPv6 path MTU.\n\n507\n00:26:45,275 --> 00:26:50,440\nIPv4 and\nIPv,6 they're layer three protocols.\n\n508\n00:26:50,440 --> 00:26:51,966\nTCP is at layer four, but\n\n509\n00:26:51,966 --> 00:26:56,053\nthe MTUs that we're dealing with\nare really way down at layer two.\n\n510\n00:26:56,053 --> 00:27:03,341\nSo the behavior of TCP and MTUs, really\nisn't any different for IPv4 and IPv6.\n\n511\n00:27:03,341 --> 00:27:06,829\nThey're just the layer three addressing\npiece and it doesn't really impact, so\n\n512\n00:27:06,829 --> 00:27:08,440\nit's pretty much the same.\n\n513\n00:27:08,440 --> 00:27:12,100\nSo that's our objective right there,\nbut the next one, 1.4b is MSS,\n\n514\n00:27:12,100 --> 00:27:15,480\nwhich is maximum segment size.\n\n515\n00:27:15,480 --> 00:27:18,105\nNow that sounds really familiar,\nthat's why I'm tying these together.\n\n516\n00:27:18,105 --> 00:27:22,117\nThe maximum segment sizes,\nif I'm generating a segment,\n\n517\n00:27:22,117 --> 00:27:25,098\nwhat's the biggest size\nthat I can make it?\n\n518\n00:27:25,098 --> 00:27:29,210\nAnd remember, segments that's at layer\nfour and that's at the transport layer.\n\n519\n00:27:29,210 --> 00:27:33,430\nWe build the segment, the maximum segment\nsize needs to conform to our MTU.\n\n520\n00:27:34,520 --> 00:27:36,420\nOtherwise, we'll fragment.\n\n521\n00:27:36,420 --> 00:27:40,230\nAnd so that's what it's determining is\nwhat's gonna be that maximum segment size\n\n522\n00:27:40,230 --> 00:27:46,230\nto conform to the path MTU this to work\ntogether, but there is a different.\n\n523\n00:27:46,230 --> 00:27:49,360\nThe path MTU that's\nthe maximum transmission unit,\n\n524\n00:27:49,360 --> 00:27:54,700\nthe smallest maximum transmission\nunit between these nodes.\n\n525\n00:27:54,700 --> 00:27:58,620\nSo the node here on the left all\nthe way to the node here on the right,\n\n526\n00:27:58,620 --> 00:28:00,190\nall these links in between.\n\n527\n00:28:00,190 --> 00:28:01,384\nWhat's the lowest MTU?\n\n528\n00:28:01,384 --> 00:28:02,190\nThat's the path MTU.\n\n529\n00:28:03,650 --> 00:28:07,013\nThe maximum segment size\ndoes not equal that.\n\n530\n00:28:07,013 --> 00:28:10,667\nIf the MTU from here to there is 1,200 and\n\n531\n00:28:10,667 --> 00:28:16,050\nI generate a segment of 1,200,\nI'm gonna fragment.\n\n532\n00:28:16,050 --> 00:28:18,820\nI can't be exactly there,\nI have to leave a little more room.\n\n533\n00:28:18,820 --> 00:28:19,980\nNow what's that room for?\n\n534\n00:28:19,980 --> 00:28:22,020\nWell, let's take a look at\nwhat a segment looks like.\n\n535\n00:28:22,020 --> 00:28:24,618\nIf I go to my little OSI model here.\n\n536\n00:28:24,618 --> 00:28:27,510\nSo here's the OSI model,\nthere's 1 through 7.\n\n537\n00:28:27,510 --> 00:28:30,577\nAnd at layer 6 and 7,\nthat's just our Data.\n\n538\n00:28:30,577 --> 00:28:32,022\nOur application generates some data.\n\n539\n00:28:32,022 --> 00:28:34,110\nIt's what we're transmitting, it's\nthe whole reason we're using the network.\n\n540\n00:28:35,270 --> 00:28:38,733\nBut layer 5 and below,\nthey're adding information.\n\n541\n00:28:38,733 --> 00:28:41,480\nInformation that our\nnetworking gear needs.\n\n542\n00:28:41,480 --> 00:28:45,540\nAt layer five, that's our Session data to\nhelp identify us from other clients and\n\n543\n00:28:45,540 --> 00:28:47,570\nwhat software we're using and\nall that good stuff and\n\n544\n00:28:47,570 --> 00:28:50,230\nwe build this session to that other host.\n\n545\n00:28:50,230 --> 00:28:53,797\nLayer 4 is what I'm talking about,\nthese are my Segments.\n\n546\n00:28:53,797 --> 00:28:55,840\nThis is where TCP is doing its action.\n\n547\n00:28:55,840 --> 00:29:00,752\nSo my layer 4 header is what's containing\nmy sequence numbers, acknowledgements,\n\n548\n00:29:00,752 --> 00:29:03,713\nall that other stuff that\nwas done in the handshake,\n\n549\n00:29:03,713 --> 00:29:06,287\nthat's all right here\nin my Level 4 Header.\n\n550\n00:29:06,287 --> 00:29:08,060\nThis is my Segment.\n\n551\n00:29:08,060 --> 00:29:11,694\nIf I build a Segment,\nthat's the same size as my MTU.\n\n552\n00:29:11,694 --> 00:29:14,198\nIf my MTU is 1,200 bytes and\n\n553\n00:29:14,198 --> 00:29:20,056\nI build a Segment that's 1,200 bytes,\nI still have more data to add.\n\n554\n00:29:20,056 --> 00:29:23,716\nI still have my Layer 3 Header to add,\nwhich is my source and\n\n555\n00:29:23,716 --> 00:29:25,600\ndestination IP address.\n\n556\n00:29:25,600 --> 00:29:27,152\nMy routing information.\n\n557\n00:29:27,152 --> 00:29:31,237\nThat's gonna get stuck on and\nthat's when I become a packet and\n\n558\n00:29:31,237 --> 00:29:36,169\nthen down at layer 2, I need to add my\nsource and destination MAC address for\n\n559\n00:29:36,169 --> 00:29:39,670\nmy hardware direction and\nthen my Layer 2 Checksum.\n\n560\n00:29:39,670 --> 00:29:41,765\nThe cyclical redundancy check,\nwe can use for\n\n561\n00:29:41,765 --> 00:29:44,086\ndetecting if the packet\ngot corrupted in transit.\n\n562\n00:29:44,086 --> 00:29:49,448\nThose get added and now I'm a Frame and\nit's a Frame that goes on the network and\n\n563\n00:29:49,448 --> 00:29:53,690\nit's the Frame that has to conform\nto the MTU not the Segment.\n\n564\n00:29:55,060 --> 00:29:57,980\nIf the segment is equal to the MTU,\n\n565\n00:29:57,980 --> 00:30:02,734\nthese headers and\nthe trailer will push me over the MTU.\n\n566\n00:30:02,734 --> 00:30:04,890\nIt'll push me over the sides and\nnow I'll have to fragment.\n\n567\n00:30:04,890 --> 00:30:07,840\nAnd when I fragment, now I have\nto calculate new layer to CRC's,\n\n568\n00:30:07,840 --> 00:30:09,461\nI'm creating more than one frame.\n\n569\n00:30:09,461 --> 00:30:10,330\nI'm doing a lot more work.\n\n570\n00:30:11,370 --> 00:30:12,569\nSo, that's bad.\n\n571\n00:30:12,569 --> 00:30:16,020\nSo with TCP, it looks the path MTU,\nit says that's the number.\n\n572\n00:30:16,020 --> 00:30:17,473\nGreat, I've got it.\n\n573\n00:30:17,473 --> 00:30:21,356\nI need to subtract out the layer two,\nlayer three, and\n\n574\n00:30:21,356 --> 00:30:24,912\neven the layer four header,\neven its own header.\n\n575\n00:30:24,912 --> 00:30:27,824\nIt's got a subtract out the header and\n\n576\n00:30:27,824 --> 00:30:32,260\nwhat's left is the amount\nof space we have for data.\n\n577\n00:30:32,260 --> 00:30:34,333\nOur Data and our Layer 5 Header,\n\n578\n00:30:34,333 --> 00:30:39,011\nthat information right there is what\nwill fit in the maximum segment size.\n\n579\n00:30:39,011 --> 00:30:43,950\nSo don't get them confused,\nmaximum segment size and path MTU.\n\n580\n00:30:43,950 --> 00:30:47,569\nThey sound like they'd be similar,\nthe same size, but\n\n581\n00:30:47,569 --> 00:30:52,967\nthe maximum segment size just excludes\nthese headers and gives us that remainder.\n\n582\n00:30:52,967 --> 00:30:55,779\nTo give you an idea\nthe most common default for\n\n583\n00:30:55,779 --> 00:30:58,300\na maximum segment size is 586 bytes.\n\n584\n00:30:59,550 --> 00:31:03,360\nSo while the most common\nMTU is 1,500 bytes,\n\n585\n00:31:03,360 --> 00:31:08,633\nthe most common maximum segment\nsize is 586, that is very small.\n\n586\n00:31:08,633 --> 00:31:11,490\nIt's almost a third of our data.\n\n587\n00:31:11,490 --> 00:31:14,562\nAnd that means when you're sending\ninformation across the network,\n\n588\n00:31:14,562 --> 00:31:16,393\nyou're sending it in very small pieces.\n\n589\n00:31:16,393 --> 00:31:18,330\nThe frames that you're sending are very,\nvery tiny.\n\n590\n00:31:18,330 --> 00:31:22,493\nSo you're sending tons of frames,\nthousands, millions,\n\n591\n00:31:22,493 --> 00:31:26,096\nbillions of frames for\nlike doing a large download.\n\n592\n00:31:26,096 --> 00:31:28,315\nIf you go and\ndownload an ISO image off the internet,\n\n593\n00:31:28,315 --> 00:31:31,654\nyou're talking about billions of frames\nbeing done for that communication.\n\n594\n00:31:31,654 --> 00:31:36,150\nWhen you're accessing a web page or\npulling up an image, accessing an email.\n\n595\n00:31:36,150 --> 00:31:40,640\nThat email might be 64K,\n64 kilobytes in size.\n\n596\n00:31:40,640 --> 00:31:46,268\nIf your maximum segment size is 586\nbytes and you're getting an image or\n\n597\n00:31:46,268 --> 00:31:52,625\nan email that's, well let's say,\nit's 14K, so that's 14,000 bytes.\n\n598\n00:31:52,625 --> 00:31:57,105\nAnd you've only got 586 bytes in a single\nsegment, that 1 email is being spread\n\n599\n00:31:57,105 --> 00:32:01,969\nacross Well, probably over 30 frames, over\ndifferent frames on the network, right,\n\n600\n00:32:01,969 --> 00:32:05,000\n30 different segments\ninside of those frames.\n\n601\n00:32:05,000 --> 00:32:09,420\nSo, that starts to add up really fast, and\nyou guys can start to see where the whole\n\n602\n00:32:09,420 --> 00:32:12,940\nheader and trailer processing and\nall that can be kinda burdensome.\n\n603\n00:32:12,940 --> 00:32:14,630\nWell, fortunately,\nmost of that happens in hardware, right?\n\n604\n00:32:14,630 --> 00:32:17,450\nYour network adapter does that or\nthe interface on your router,\n\n605\n00:32:17,450 --> 00:32:18,610\nthe interface on your switch.\n\n606\n00:32:18,610 --> 00:32:22,090\nThey do it in hardware, so\nyou don't see the impact on your OS.\n\n607\n00:32:22,090 --> 00:32:25,800\nBut TCP, that happens in software, right?\n\n608\n00:32:25,800 --> 00:32:28,150\nThat happens in software on\nan operating system for a desktop.\n\n609\n00:32:28,150 --> 00:32:30,170\nAnd so it does slow them down.\n\n610\n00:32:30,170 --> 00:32:33,800\nOn your routers, on your switches,\nit's done in hardware, right?\n\n611\n00:32:33,800 --> 00:32:35,090\nThey've got ASICs,\n\n612\n00:32:35,090 --> 00:32:38,310\napplication specific integrated\ncircuits that take care of that.\n\n613\n00:32:38,310 --> 00:32:40,400\nOn a server though, it's done in software.\n\n614\n00:32:40,400 --> 00:32:43,030\nSo that's why you'll start to see\na lot of network cards that are out\n\n615\n00:32:43,030 --> 00:32:46,640\nthere that have TCP offload engines, TOE,\nso that they can do that in hardware, so\n\n616\n00:32:46,640 --> 00:32:49,700\nthey can do it on the network\nadapter itself to alleviate that.\n\n617\n00:32:49,700 --> 00:32:51,430\nAll of this is happening\nin the background, and\n\n618\n00:32:51,430 --> 00:32:54,870\nif you're not aware of it,\nit can impact performance on your system.\n\n619\n00:32:54,870 --> 00:32:57,510\nFortunately the MSS and the path MTU,\n\n620\n00:32:57,510 --> 00:33:00,911\nthat's all calculated between the hosts\nwhen they negotiate out their TCP session.\n\n621\n00:33:02,940 --> 00:33:06,400\nAll right, so those are a couple\nof neat little additions,\n\n622\n00:33:06,400 --> 00:33:11,140\nlittle tack-ons there that TCP does that\nmost of us never even really think about.\n\n623\n00:33:11,140 --> 00:33:12,780\nThere are a few other things.\n\n624\n00:33:12,780 --> 00:33:18,110\nFor example it's gotta keep track\nof how the network is performing.\n\n625\n00:33:18,110 --> 00:33:22,110\nRemember I mentioned the window size and\nhow the window size is adjustable,\n\n626\n00:33:22,110 --> 00:33:25,380\nit can get bigger or smaller based\non the conditions of our network.\n\n627\n00:33:25,380 --> 00:33:28,970\nWell how do we figure out\nthe conditions of the network?\n\n628\n00:33:28,970 --> 00:33:30,775\nWell it's actually monitoring that,\n\n629\n00:33:30,775 --> 00:33:33,660\nit's keeping track of\nthe conditions as it works.\n\n630\n00:33:33,660 --> 00:33:36,052\nAnd it uses a few things to do that.\n\n631\n00:33:36,052 --> 00:33:38,512\nThe main one is simply latency.\n\n632\n00:33:38,512 --> 00:33:41,694\nLatency really impacts TCP.\n\n633\n00:33:41,694 --> 00:33:46,608\nLatency is the amount of time it takes to\nsend a packet from one host to another.\n\n634\n00:33:46,608 --> 00:33:49,590\nHow long does it take for\ndata to get from one host to another?\n\n635\n00:33:49,590 --> 00:33:50,260\nRight?\n\n636\n00:33:50,260 --> 00:33:51,760\nThere's an amount of time involved.\n\n637\n00:33:51,760 --> 00:33:53,960\nIt's usually very small,\nlike nanoseconds, right?\n\n638\n00:33:53,960 --> 00:33:55,110\nBut there is time.\n\n639\n00:33:55,110 --> 00:33:58,380\nIf my communication is just going from\nmy laptop right here to another laptop\n\n640\n00:33:58,380 --> 00:34:01,540\nsitting right beside me,\nit's probably very, very short.\n\n641\n00:34:01,540 --> 00:34:06,520\nBut if it's travelling to a server in\nBulgaria, I've got to cross the world,\n\n642\n00:34:06,520 --> 00:34:09,210\nI've got to get to the other side of\nthe globe, that's a long way away.\n\n643\n00:34:09,210 --> 00:34:10,484\nIt's gonna take time for\nthat data to get there.\n\n644\n00:34:10,484 --> 00:34:14,060\nIf I'm waiting for some kind of\nacknowledgement from the other side,\n\n645\n00:34:14,060 --> 00:34:15,890\nI've got to plan for that latency.\n\n646\n00:34:15,890 --> 00:34:20,350\nAnd if the latency is too long, I might\nbe waiting for an acknowledgement, and\n\n647\n00:34:20,350 --> 00:34:21,640\ndecide I didn't get it,\n\n648\n00:34:21,640 --> 00:34:24,420\nthat I need to retransmit,\nwhen I just didn't wait long enough.\n\n649\n00:34:24,420 --> 00:34:27,150\nAnd then I get the acknowledgement\nafter I've already retransmitted.\n\n650\n00:34:27,150 --> 00:34:29,190\nSo we've got to be aware of that.\n\n651\n00:34:29,190 --> 00:34:31,910\nAnd that's part of\nthe calculation that goes into\n\n652\n00:34:31,910 --> 00:34:34,450\nfiguring out what your\noptimum window size is.\n\n653\n00:34:34,450 --> 00:34:37,970\nThe window size depends upon latency.\n\n654\n00:34:37,970 --> 00:34:40,570\nHow long it takes that communication,\nhow long do we wait for\n\n655\n00:34:40,570 --> 00:34:43,730\nthe acknowledgement before we\nretransmit an entire window.\n\n656\n00:34:43,730 --> 00:34:46,660\nIf we start retransmitting big windows,\n\n657\n00:34:46,660 --> 00:34:49,930\nwhat will happen is TCP will\nstart shrinking it down.\n\n658\n00:34:49,930 --> 00:34:54,260\nIt will reduce the communications\nto make up for that.\n\n659\n00:34:54,260 --> 00:34:58,810\nAnd then it will have to slowly build back\nup to get us back up to where we were.\n\n660\n00:34:58,810 --> 00:35:01,570\nSo it needs to be able to do that\nreliably, but not constantly.\n\n661\n00:35:01,570 --> 00:35:03,750\nWe don't want to constantly be\ndropping down to small window sizes,\n\n662\n00:35:03,750 --> 00:35:06,190\nbecause our communications\nwill be inefficient.\n\n663\n00:35:06,190 --> 00:35:06,880\nRight.\n\n664\n00:35:06,880 --> 00:35:08,400\nLatency is a part of that.\n\n665\n00:35:08,400 --> 00:35:12,200\nThe other part is\nthe bandwidth delay product.\n\n666\n00:35:13,300 --> 00:35:15,880\nBandwidth delay product or\nBDP, that is an official term,\n\n667\n00:35:15,880 --> 00:35:19,236\nyou'll see it in some of the TCP\nstandardizations, if you're ever bored and\n\n668\n00:35:19,236 --> 00:35:22,872\nyou sit around and read RFC's, you'll see\nthese terms thrown around quick a bit.\n\n669\n00:35:22,872 --> 00:35:26,699\nBut BDP,\nit's actually what is name implies,\n\n670\n00:35:26,699 --> 00:35:30,150\nit's the product of bandwidth and delay.\n\n671\n00:35:30,150 --> 00:35:31,710\nIf you take bandwidth and\n\n672\n00:35:31,710 --> 00:35:36,360\nmultiply it by delay, you know how your\nBDP, your bandwidth delay product.\n\n673\n00:35:36,360 --> 00:35:38,060\nThat might sound familiar to you.\n\n674\n00:35:38,060 --> 00:35:42,460\nFor EIGRP, that is one of our metrics.\n\n675\n00:35:42,460 --> 00:35:48,060\nAnd with times delay, that's the default\nresult of the EIGRP algorithm.\n\n676\n00:35:48,060 --> 00:35:52,020\nEIGRP can take into account all sorts\nof other metrics, but bandwidth and\n\n677\n00:35:52,020 --> 00:35:53,490\ndelay are the only ones\nthat are on by default.\n\n678\n00:35:53,490 --> 00:35:56,090\nAnd if you boil that whole formula down,\n\n679\n00:35:56,090 --> 00:35:58,500\nthe metric comes down to\nbandwidth times delay.\n\n680\n00:35:58,500 --> 00:36:02,290\nWell TCP uses that same information.\n\n681\n00:36:02,290 --> 00:36:05,450\nWhen we pick a window size,\nwe've gotta understand our bandwidth,\n\n682\n00:36:05,450 --> 00:36:08,050\nwe've gotta understand our delay.\n\n683\n00:36:08,050 --> 00:36:10,930\nAnd if we understand\nwhat those values are,\n\n684\n00:36:10,930 --> 00:36:14,480\nit can result in that value\nI mentioned earlier, RWIN.\n\n685\n00:36:14,480 --> 00:36:16,060\nRight, the receive window.\n\n686\n00:36:16,060 --> 00:36:19,300\nAnd the receive window is\nthe optimal receive window for\n\n687\n00:36:19,300 --> 00:36:20,520\nyour network conditions.\n\n688\n00:36:20,520 --> 00:36:24,090\nAnd different systems are gonna have\ndifferent optimal receive windows.\n\n689\n00:36:24,090 --> 00:36:25,770\nSo that's why in TCBS then negotiated out.\n\n690\n00:36:25,770 --> 00:36:29,110\nThere was a time where we use to hard\nset that, back in the dial up days.\n\n691\n00:36:29,110 --> 00:36:32,870\nWhen you were dialing up on\na 28.8 modem or a 14.4 or\n\n692\n00:36:32,870 --> 00:36:36,790\nsomething that was really\nlow bandwidth modem,\n\n693\n00:36:36,790 --> 00:36:41,340\nyou had to tweak your Windows to make sure\nthat it was optimized for your connection.\n\n694\n00:36:41,340 --> 00:36:44,550\nAnd because your connection\nmight have variable speeds,\n\n695\n00:36:44,550 --> 00:36:47,730\nyou might connect at 14.4 but\nthen step up or step down.\n\n696\n00:36:47,730 --> 00:36:49,700\nIt was really difficult and\nreally challenging.\n\n697\n00:36:50,840 --> 00:36:52,230\nFortunately, we're kind of beyond that,\nright?\n\n698\n00:36:52,230 --> 00:36:55,300\nNow that we have Ethernet networks,\nnow that networks are a lot more reliable,\n\n699\n00:36:55,300 --> 00:36:57,960\nwe have broadband in home and\nremote offices,\n\n700\n00:36:57,960 --> 00:37:02,260\nwe have Metro E and\nMPLS in corporate offices.\n\n701\n00:37:02,260 --> 00:37:05,970\nThese networks are leaps and bounds\nbeyond what we had in the 80s and 90s.\n\n702\n00:37:05,970 --> 00:37:09,310\nAnd so, a lot of this technology is\nautomatically handled for us, and\n\n703\n00:37:09,310 --> 00:37:11,710\nwe don't have to worry about it.\n\n704\n00:37:11,710 --> 00:37:14,320\nSo that is the bandwidth delay product.\n\n705\n00:37:16,050 --> 00:37:18,760\nThe very last one that we have here\nis global synchronization, and\n\n706\n00:37:18,760 --> 00:37:20,034\nthis is an interesting one.\n\n707\n00:37:20,034 --> 00:37:23,371\nAll right.\nGlobal synchronization is a feature of\n\n708\n00:37:23,371 --> 00:37:26,365\nTCP I suppose, but it's a bad one.\n\n709\n00:37:26,365 --> 00:37:27,445\nThis is not a good thing.\n\n710\n00:37:27,445 --> 00:37:29,826\nAll of the other things we've talked\nabout have kind of been good things.\n\n711\n00:37:29,826 --> 00:37:31,104\nWell latency, right?\n\n712\n00:37:31,104 --> 00:37:32,763\nLatency is not necessarily a good thing.\n\n713\n00:37:32,763 --> 00:37:36,571\nThe amount of time packets take to\ncross the network, that's latency.\n\n714\n00:37:36,571 --> 00:37:40,170\nIf it's really long then it's bad,\nbut if it's short, it's good.\n\n715\n00:37:40,170 --> 00:37:42,380\nGlobal synchronization,\nthough, is always bad.\n\n716\n00:37:42,380 --> 00:37:44,960\nWhen TCP was designed,\n\n717\n00:37:44,960 --> 00:37:50,170\nthey designed it with a little bit of\na congestion, detection mechanism.\n\n718\n00:37:50,170 --> 00:37:52,130\nWhat it does is it looks at the network,\nand\n\n719\n00:37:52,130 --> 00:37:57,340\nif it sees a lot of retransmits happening,\nit assumes the network is congested,\n\n720\n00:37:57,340 --> 00:38:00,880\nand it will slow down its communications.\n\n721\n00:38:00,880 --> 00:38:02,800\nIt reduces the window size.\n\n722\n00:38:02,800 --> 00:38:05,570\nSo instead of sending,\nlet's say our window is 64.\n\n723\n00:38:05,570 --> 00:38:11,500\nSo we're sending 64 sequences across, and\nthen getting one acknowledgement back.\n\n724\n00:38:11,500 --> 00:38:14,400\nAnd I start missing acknowledgements,\nso I'm having to retransmit.\n\n725\n00:38:14,400 --> 00:38:20,010\nSo instead of sending 64 at a time, I'll\nreduce down, and we'll go down to five.\n\n726\n00:38:20,010 --> 00:38:22,550\nAnd now we'll send five sequences and\nwait for that acknowledgement.\n\n727\n00:38:22,550 --> 00:38:24,860\nSo now we're transmitting slower,\nall right.\n\n728\n00:38:24,860 --> 00:38:30,590\nAnd if you've got a congested network\nby slowing down that helps out right.\n\n729\n00:38:30,590 --> 00:38:33,125\nWe get less retransmits because now\nour data's going to make it through.\n\n730\n00:38:33,125 --> 00:38:35,660\nWe're freeing up bandwidth so\neverybody can play nice.\n\n731\n00:38:35,660 --> 00:38:37,508\nTCP does that automatically.\n\n732\n00:38:37,508 --> 00:38:40,320\nIt's congestion detection.\n\n733\n00:38:40,320 --> 00:38:46,110\nAnd when that happens it then fires up\nsomething called a slow start mechanism,\n\n734\n00:38:46,110 --> 00:38:49,920\nand the slow start algorithm or\nslow start mechanism kicks in and\n\n735\n00:38:49,920 --> 00:38:56,420\nsays once we've stepped down, now we can\nstart testing the waters to step back up.\n\n736\n00:38:56,420 --> 00:38:57,960\nWe're waiting to see when congestion ends.\n\n737\n00:38:57,960 --> 00:39:01,320\nRight, because congestion, it's normally\nburst deep, right, burst type traffic.\n\n738\n00:39:01,320 --> 00:39:03,470\nWe get this congestion, and it goes away.\n\n739\n00:39:03,470 --> 00:39:05,500\nSo we don't want to just stay\nat this low number forever.\n\n740\n00:39:05,500 --> 00:39:07,130\nWe wanna be able to step back up.\n\n741\n00:39:07,130 --> 00:39:09,350\nAnd so slow start does that,\nand it uses timers.\n\n742\n00:39:09,350 --> 00:39:15,730\nIt has these fixed timers that it uses\nto step back up to move us to more and\n\n743\n00:39:15,730 --> 00:39:19,480\nmore increased traffic,\nuntil we get back to our old window size.\n\n744\n00:39:19,480 --> 00:39:21,830\nTo whatever our maximum window size is.\n\n745\n00:39:21,830 --> 00:39:22,780\nThat's good, right?\n\n746\n00:39:22,780 --> 00:39:23,890\nIt sounds good.\n\n747\n00:39:23,890 --> 00:39:25,890\nWell, on paper it is good.\n\n748\n00:39:25,890 --> 00:39:32,540\nBut the problem is, or\nthe problems are, the fixed timers.\n\n749\n00:39:32,540 --> 00:39:33,552\nTCP uses a fixed timer.\n\n750\n00:39:33,552 --> 00:39:36,540\nIf you have a gig connection, and\n\n751\n00:39:36,540 --> 00:39:42,323\nit's running at 500 MB utilization,\n50%, it's fine.\n\n752\n00:39:42,323 --> 00:39:45,214\nEverybody is pushing the highest\nwindow size they can reliably.\n\n753\n00:39:45,214 --> 00:39:50,540\nThen as it gets to 600 and\n700 MB, 800 MB, it's fine.\n\n754\n00:39:50,540 --> 00:39:52,225\nIt's at 80% now, but it's fine.\n\n755\n00:39:52,225 --> 00:39:54,793\nEverybody's moving at\nthe maximum window size.\n\n756\n00:39:54,793 --> 00:39:57,546\nThen when it moves up to 900 megabit and\n\n757\n00:39:57,546 --> 00:40:01,008\nthen a gigabit,\nwhen you fully saturate that line,\n\n758\n00:40:01,008 --> 00:40:06,140\nNow when people send more data than\nthe line can handle, it has to get queued.\n\n759\n00:40:06,140 --> 00:40:08,461\nWell, I guess it could get dropped.\n\n760\n00:40:08,461 --> 00:40:10,004\nIt depends on how\nthe device is configured.\n\n761\n00:40:10,004 --> 00:40:12,537\nMost devices have a queue.\n\n762\n00:40:12,537 --> 00:40:15,021\nThey do some kind of FIFO queuing or\nW read or\n\n763\n00:40:15,021 --> 00:40:17,850\nsome of the various types\nof quality of service,\n\n764\n00:40:17,850 --> 00:40:22,059\nbut they queue the data in their memory\nbuffers since there's not enough\n\n765\n00:40:22,059 --> 00:40:27,280\nbandwidth to send it right now and\nthen they send it when they get a chance.\n\n766\n00:40:27,280 --> 00:40:30,818\nOr if the queues are full,\nthey drop the data.\n\n767\n00:40:30,818 --> 00:40:33,515\nThey say I'm sorry, I just don't have\nthe room for it and they drop it.\n\n768\n00:40:33,515 --> 00:40:36,011\nThe result to TCP is the same.\n\n769\n00:40:36,011 --> 00:40:39,368\nIf the data gets buffered,\nit doesn't make it to the other end and\n\n770\n00:40:39,368 --> 00:40:41,212\nwe don't get the acknowledgment.\n\n771\n00:40:41,212 --> 00:40:44,929\nAnd if it stays in the buffer too long,\nit's the equivalent of being dropped.\n\n772\n00:40:44,929 --> 00:40:48,959\nIf it doesn't make in the buffer,\nif it just gets dropped, well then to TCP,\n\n773\n00:40:48,959 --> 00:40:49,830\nit got dropped.\n\n774\n00:40:49,830 --> 00:40:54,129\nSo TCP will detect that\ncongestion really fast.\n\n775\n00:40:54,129 --> 00:40:57,705\nNow if the buffers are clearing really\nfast, then that might not be a problem.\n\n776\n00:40:57,705 --> 00:40:59,504\nSo, it just sends and\nwe don't detect congestion.\n\n777\n00:40:59,504 --> 00:41:04,914\nBut if anything stays in the buffer too\nlong or if it gets dropped, TCP sees it.\n\n778\n00:41:04,914 --> 00:41:07,330\nIt knows, it sees these\nacknowledgements not coming back.\n\n779\n00:41:07,330 --> 00:41:09,398\nSo, it then slows down.\n\n780\n00:41:09,398 --> 00:41:12,170\nWell, if that line hit a full gigabit,\n\n781\n00:41:12,170 --> 00:41:15,540\nwhich of my users are gonna\nsee the congestion?\n\n782\n00:41:15,540 --> 00:41:17,339\nIs just one person gonna\nsee the congestion?\n\n783\n00:41:17,339 --> 00:41:18,361\nNo.\n\n784\n00:41:18,361 --> 00:41:21,577\nThey're all gonna see it at\npretty much the same time.\n\n785\n00:41:21,577 --> 00:41:25,438\nSo you have all these nodes that are\nsaturating this gigabit line and they all\n\n786\n00:41:25,438 --> 00:41:29,255\npretty much see it at the same time and\nso they all step down at the same time.\n\n787\n00:41:29,255 --> 00:41:33,180\nAnd when they all step down at the same\ntime, the network gets better.\n\n788\n00:41:33,180 --> 00:41:35,477\nThe network gets healthy,\nthe line's not saturated anymore.\n\n789\n00:41:35,477 --> 00:41:39,726\nWorks perfect, but\nthe fixed timers kick in.\n\n790\n00:41:39,726 --> 00:41:42,769\nThey all use the same timers.\n\n791\n00:41:42,769 --> 00:41:46,619\nThey run the same slow start algorithm and\nthey start ramping backup and\n\n792\n00:41:46,619 --> 00:41:49,131\nthey're all ramping\nbackup at the same time.\n\n793\n00:41:49,131 --> 00:41:50,188\nAnd so what happens?\n\n794\n00:41:50,188 --> 00:41:54,390\nBy the time they reach full again,\nthe line is saturated again.\n\n795\n00:41:54,390 --> 00:41:56,445\nThey just re-saturate and\nthey do it at the same time.\n\n796\n00:41:56,445 --> 00:41:59,596\nSo that triggers it and\nthey drop right back again, so\n\n797\n00:41:59,596 --> 00:42:02,131\nthat's called global synchronization.\n\n798\n00:42:02,131 --> 00:42:06,383\nWhen the line gets fully saturated,\nall of the nodes using it detect it at\n\n799\n00:42:06,383 --> 00:42:11,278\npretty much the same time or it's close\nenough that the difference is negligible.\n\n800\n00:42:11,278 --> 00:42:14,722\nSo they might as well see it at the same\ntime and then when they fire up their\n\n801\n00:42:14,722 --> 00:42:17,955\nfixed timers, they just end up\nbumping right back into each other.\n\n802\n00:42:17,955 --> 00:42:19,349\nThey're synchronized,\n\n803\n00:42:19,349 --> 00:42:22,713\nbecause the congestion is a common\nelement across all of them.\n\n804\n00:42:22,713 --> 00:42:25,954\nAnd unfortunately,\nthere's not much we can do about it.\n\n805\n00:42:25,954 --> 00:42:31,168\nThat's inherent in TCP, that's a problem\nwith TCP, that it does this ramp up.\n\n806\n00:42:31,168 --> 00:42:33,446\nSo you can't fix it in TCP, but\n\n807\n00:42:33,446 --> 00:42:37,484\nyou can fix it by using\ndifferent queuing mechanisms.\n\n808\n00:42:37,484 --> 00:42:41,356\nOn your routers and on your switches\nyou can use quality service, and\n\n809\n00:42:41,356 --> 00:42:45,044\nyou can have high priority traffic\nversus low priority traffic.\n\n810\n00:42:45,044 --> 00:42:49,363\nAnd your high priority traffic gets first\naccess to the queues and gets through and\n\n811\n00:42:49,363 --> 00:42:52,694\nyour low priority traffic is the traffic,\nthat gets dropped.\n\n812\n00:42:52,694 --> 00:42:56,328\nAnd so the low priority traffic, yeah,\nit's gonna have global synchronization.\n\n813\n00:42:56,328 --> 00:42:58,011\nIt's gonna run into that problem, but\n\n814\n00:42:58,011 --> 00:43:01,228\nyou're high priority traffic is getting\naccess to that interface first.\n\n815\n00:43:01,228 --> 00:43:03,190\nThey don't even see it,\nthey just move right on through.\n\n816\n00:43:03,190 --> 00:43:06,957\nSo we can use quality of service or\nclass of service type of service,\n\n817\n00:43:06,957 --> 00:43:10,265\nall the different bandwidth management,\napplications,\n\n818\n00:43:10,265 --> 00:43:12,133\nthere's a ton of them out there.\n\n819\n00:43:12,133 --> 00:43:16,463\nWhichever one we choose, we can use to\nmanage that for our critical traffic.\n\n820\n00:43:16,463 --> 00:43:19,299\nBut if it's our critical\ntraffic saturating the line,\n\n821\n00:43:19,299 --> 00:43:22,628\nthen we're right back to having\nglobal synchronization again.\n\n822\n00:43:22,628 --> 00:43:28,180\nSo that's not so much a feature of TCP,\nit's really just something, a condition\n\n823\n00:43:28,180 --> 00:43:33,102\nthat we need to be aware of and\nit does affect performance on the network.\n\n824\n00:43:33,102 --> 00:43:34,496\nIt's something that is out there.\n\n825\n00:43:34,496 --> 00:43:41,238\nSo in this segment, we got a chance\nto take a look at TCP operations.\n\n826\n00:43:41,238 --> 00:43:44,851\nWe started with the high-level overview,\njust how TCP handshakes work and\n\n827\n00:43:44,851 --> 00:43:48,633\nwhat sequence numbers are and then we got\nto look at some of the advanced bells and\n\n828\n00:43:48,633 --> 00:43:49,493\nwhistles of TCP.\n\n829\n00:43:49,493 --> 00:43:53,618\nWe talked about the path MTU,\nwe talk about the maximum segment size and\n\n830\n00:43:53,618 --> 00:43:55,007\nthose two are related.\n\n831\n00:43:55,007 --> 00:43:56,169\nThey really work hand in hand.\n\n832\n00:43:56,169 --> 00:43:59,305\nWe talk about latency and\nthe bandwidth-delay product and\n\n833\n00:43:59,305 --> 00:44:02,136\nhow that can be used for\ncalculating our window size.\n\n834\n00:44:02,136 --> 00:44:06,163\nWindowing was a piece I covered in\nthe first segment and then we wrapped up\n\n835\n00:44:06,163 --> 00:44:10,667\ntalking about global synchronization,\nwhich is a little problem that TCP has.\n\n836\n00:44:10,667 --> 00:44:12,952\nBut all of that in a nutshell is really,\n\n837\n00:44:12,952 --> 00:44:16,843\nthe information that we need to\nknow about TCP going into the exam.\n\n838\n00:44:16,843 --> 00:44:20,888\nUnderstand that the majority of your\ncommunications are gonna be TCP based and\n\n839\n00:44:20,888 --> 00:44:23,902\nso these are things that\nare happening in the background.\n\n840\n00:44:23,902 --> 00:44:27,593\nAnd when you run a sniffer,\nyou start inspecting network traffic,\n\n841\n00:44:27,593 --> 00:44:31,347\nthis is a lot of the traffic you're\ngonna see right up at the beginning\n\n842\n00:44:31,347 --> 00:44:34,409\nin the headers of those frames\nthat are on your network.\n\n843\n00:44:34,409 --> 00:44:37,301\nWell, I hope you guys enjoyed that.\n\n844\n00:44:37,301 --> 00:44:40,941\nRemember, if you have any questions on\nwhat we talked about today live during\n\n845\n00:44:40,941 --> 00:44:43,013\nthe show, you can go to itpro.tv/live and\n\n846\n00:44:43,013 --> 00:44:45,371\nyou will see the chat box\nright beneath the video.\n\n847\n00:44:45,371 --> 00:44:48,994\nPost your questions there, get the chat\nmonitor right here in the studio, so\n\n848\n00:44:48,994 --> 00:44:50,678\nI can answer those during the show.\n\n849\n00:44:50,678 --> 00:44:54,394\nIf you have questions after the show,\nmake use of our Q and A forums.\n\n850\n00:44:54,394 --> 00:44:59,062\nOn the top of every page on the ITProTV\nsite, you'll see link that says, Q and A,\n\n851\n00:44:59,062 --> 00:44:59,966\njump in there.\n\n852\n00:44:59,966 --> 00:45:02,566\nThere are forums,\nyou post your questions, we monitor, and\n\n853\n00:45:02,566 --> 00:45:04,122\nanswer even after the show, right?\n\n854\n00:45:04,122 --> 00:45:07,571\nWe wanna make sure you guys get\nthe information you need to be successful.\n\n855\n00:45:07,571 --> 00:45:09,905\nWell, I hope you guys enjoyed the show.\n\n856\n00:45:09,905 --> 00:45:10,706\nStay tuned.\n\n857\n00:45:10,706 --> 00:45:13,005\nGot more CCMP episodes coming up.\n\n858\n00:45:13,005 --> 00:45:14,050\nWe're still in objective one.\n\n859\n00:45:14,050 --> 00:45:17,184\nWe've got a ton more objectives,\nso I hope to see you then.\n\n860\n00:45:17,184 --> 00:45:19,610\nSigning off for ITProTV, I'm Don Pezet.\n\n861\n00:45:19,610 --> 00:45:21,910\nI'll see you next time.\n\n862\n00:45:21,910 --> 00:45:31,910\n[MUSIC]\n\n",
          "vimeoId": "109693246"
        },
        {
          "description": "UDP is designed for fast communications, but it does not provide reliable delivery of communication data. Viewers will hear about UDP operations and some of the major challenge that it can cause with TCP traffic called TCP starvation.",
          "length": "1143",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/ccnproute/1-5-UDP-Operations.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/ccnproute/1-5-UDP-Operations-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/ccnproute/1-5-UDP-Operations-sm.jpg",
          "title": "UDP Operations",
          "transcript": "1\n00:00:06,630 --> 00:00:15,323\n[MUSIC]\n\n2\n00:00:15,323 --> 00:00:22,382\n[SOUND]\n\n3\n00:00:22,382 --> 00:00:32,382\n[MUSIC]\n\n4\n00:00:34,138 --> 00:00:36,646\nGood morning, good afternoon,\nand good evening.\n\n5\n00:00:36,646 --> 00:00:39,307\nAnd welcome back to another\nepisode of ITProTV.\n\n6\n00:00:39,307 --> 00:00:44,236\nI'm your host Don Pezet, back again\nwith another episode of CCNP Route.\n\n7\n00:00:44,236 --> 00:00:48,059\nIn this episode we're gonna\ntake a look at Objective 1.5,\n\n8\n00:00:48,059 --> 00:00:51,880\nwhich is UDP Operations,\nor explain UDP Operations.\n\n9\n00:00:51,880 --> 00:00:55,570\nAnd this is gonna be one of our\nshorter episodes because UDP\n\n10\n00:00:55,570 --> 00:00:58,000\nis a really simple [LAUGH] protocol.\n\n11\n00:00:58,000 --> 00:01:00,330\nThat's kind of the glory of it,\nwhat makes it work.\n\n12\n00:01:00,330 --> 00:01:04,440\nUDP is designed for a fast communications.\n\n13\n00:01:04,440 --> 00:01:09,220\nIf you need to get data from point\nA to point B as fast as possible,\n\n14\n00:01:09,220 --> 00:01:11,970\nUDP, it's your protocol of choice.\n\n15\n00:01:11,970 --> 00:01:15,740\nIt works great,\nexcept it has some little quirks to it.\n\n16\n00:01:17,230 --> 00:01:24,900\nThe primary thing about UDP is that it\ndoes not provide reliable delivery.\n\n17\n00:01:24,900 --> 00:01:27,240\nIn a previous segment,\nwe talked about TCP,\n\n18\n00:01:27,240 --> 00:01:31,880\nthe transmission control protocol,\nand TCP gives you reliable delivery.\n\n19\n00:01:31,880 --> 00:01:34,890\nIf your data doesn't make it to\nthe other end, it'll re-transmit.\n\n20\n00:01:34,890 --> 00:01:37,870\nYou know your data will\nmake it to the other side.\n\n21\n00:01:37,870 --> 00:01:42,380\nUDP achieves its speed by\ngiving up that functionality.\n\n22\n00:01:42,380 --> 00:01:43,350\nUDP is not reliable.\n\n23\n00:01:43,350 --> 00:01:45,935\nIt is a best effort protocol.\n\n24\n00:01:45,935 --> 00:01:50,123\nIt'll try to get your data to the other\nside, but if it doesn't get there,\n\n25\n00:01:50,123 --> 00:01:52,596\nit doesn't care, it just keeps on moving.\n\n26\n00:01:52,596 --> 00:01:57,643\nUDP achieves it speed, and\nefficiency by sacrificing error checking,\n\n27\n00:01:57,643 --> 00:02:00,322\nre-transmit, acknowledgements.\n\n28\n00:02:00,322 --> 00:02:04,560\nAll of those other bells, and\nwhistles we have in TCP are gone in UDP,\n\n29\n00:02:04,560 --> 00:02:06,960\nand that makes it fast.\n\n30\n00:02:06,960 --> 00:02:10,310\nIt's fast, it's simple,\nand it's efficient.\n\n31\n00:02:10,310 --> 00:02:12,660\nYou'll see the UDP headers\nare a lot smaller.\n\n32\n00:02:12,660 --> 00:02:16,030\nThere's just not a whole heck of\na lot that goes on inside a UDP, and\n\n33\n00:02:16,030 --> 00:02:17,390\nthat's the glory of it.\n\n34\n00:02:17,390 --> 00:02:21,725\nNow, you might be asking yourself, Don,\n[LAUGH] if this thing's not reliable,\n\n35\n00:02:21,725 --> 00:02:24,911\nif I'm not gonna necessarily\nget my data to the other side,\n\n36\n00:02:24,911 --> 00:02:26,464\nwhy the heck would I use UDP?\n\n37\n00:02:26,464 --> 00:02:28,380\nIt sounds like a terrible protocol.\n\n38\n00:02:28,380 --> 00:02:31,230\nAnd the answer to that is\nactually pretty simple.\n\n39\n00:02:31,230 --> 00:02:34,920\nYou're probably using UDP right now,\nwatching this episode.\n\n40\n00:02:34,920 --> 00:02:38,001\nYou may not be, but you may,\nit kind of depends on your software.\n\n41\n00:02:38,001 --> 00:02:41,992\nVideo conferencing,\naudio streaming, video streaming,\n\n42\n00:02:41,992 --> 00:02:45,512\nvoice over IP,\nany type of communication like that,\n\n43\n00:02:45,512 --> 00:02:49,361\nwhere you're trying to move\ndata as quickly as possible.\n\n44\n00:02:49,361 --> 00:02:53,907\nAnd you don't need every single packet,\nevery single bit of data,\n\n45\n00:02:53,907 --> 00:02:57,230\nthen you can use UDP to\nmake it more efficient.\n\n46\n00:02:57,230 --> 00:02:57,855\nWhat do I mean by that?\n\n47\n00:02:57,855 --> 00:02:59,878\nWell, if I'm in a voice call with you.\n\n48\n00:02:59,878 --> 00:03:03,110\nSo let's say, I call you on the phone,\nand we're talking.\n\n49\n00:03:03,110 --> 00:03:04,870\nAnd it's a voice over IP call.\n\n50\n00:03:04,870 --> 00:03:07,050\nSo, my call is going\nover the Internet to you.\n\n51\n00:03:07,050 --> 00:03:11,409\nAnd something happens, where one of my\nframes gets lost out there on the network.\n\n52\n00:03:12,630 --> 00:03:16,590\nWell, with TCP it would identify that,\nand it would re-transmit it.\n\n53\n00:03:16,590 --> 00:03:19,470\nWell, that little packet that got lost,\n\n54\n00:03:19,470 --> 00:03:21,610\nthat might have contained\nme saying the word, the.\n\n55\n00:03:22,780 --> 00:03:24,690\nProbably not,\nit's probably even smaller than that, but\n\n56\n00:03:24,690 --> 00:03:26,240\nlet's pretend that it's a word, the.\n\n57\n00:03:26,240 --> 00:03:29,180\nWell, that got dropped, and\nnow I'm re-transmitting it.\n\n58\n00:03:29,180 --> 00:03:30,710\nWell, what do you hear on the phone?\n\n59\n00:03:30,710 --> 00:03:32,651\nOn the phone you hear a pause.\n\n60\n00:03:32,651 --> 00:03:35,960\nThe phone call stops, and waits for\n\n61\n00:03:35,960 --> 00:03:40,260\nthat re-transmit to come in, so here's\nthe word, the, and then we continue on.\n\n62\n00:03:40,260 --> 00:03:44,462\nWell, now you're a fraction of\na second behind, and every time that\n\n63\n00:03:44,462 --> 00:03:48,821\nhappens you get a little further behind,\nand a little further behind.\n\n64\n00:03:48,821 --> 00:03:51,893\nAnd all of a sudden you end up in one of\nthose phone calls that's kind of like on\n\n65\n00:03:51,893 --> 00:03:55,255\na cable news show, when they're talking to\na war correspondent on the other side of\n\n66\n00:03:55,255 --> 00:03:56,580\nthe planet.\n\n67\n00:03:56,580 --> 00:04:01,210\nSo they're like, so Tom, what are the\nweather conditions in Afghanistan like?\n\n68\n00:04:01,210 --> 00:04:03,808\nAnd Tom, he's on there, on the camera,\nhe's just sitting there.\n\n69\n00:04:06,211 --> 00:04:09,139\nWell, things are looking bright, and\nsunny, Bob, and they start going on, and\n\n70\n00:04:09,139 --> 00:04:11,010\nthere's that big delay.\n\n71\n00:04:11,010 --> 00:04:14,330\nThat's what would happen to voice traffic,\nif we waited.\n\n72\n00:04:14,330 --> 00:04:15,990\nOr video traffic like this.\n\n73\n00:04:15,990 --> 00:04:20,020\nIf you lost one single frame,\nthis video that you're watching,\n\n74\n00:04:20,020 --> 00:04:23,520\ndepending on how you watch it,\nis probably 30 frames per second.\n\n75\n00:04:23,520 --> 00:04:26,550\nSo, you're seeing 30 images every second.\n\n76\n00:04:26,550 --> 00:04:27,910\nWhat if one of those images gets lost?\n\n77\n00:04:29,060 --> 00:04:29,740\nWho cares?\n\n78\n00:04:29,740 --> 00:04:31,400\nYou skip past it.\n\n79\n00:04:31,400 --> 00:04:36,080\nCuz if you had to reload that image, I\nwould freeze, and then pick backup again.\n\n80\n00:04:36,080 --> 00:04:38,200\nAnd that would be super annoying.\n\n81\n00:04:38,200 --> 00:04:42,230\nIt's really annoying to watch stuttering\nvideo, or listen to stuttering audio.\n\n82\n00:04:42,230 --> 00:04:44,990\nSo for those, we use UDP.\n\n83\n00:04:44,990 --> 00:04:49,260\nWe throw the data as fast as we can,\nwe get it to you as quick as you can.\n\n84\n00:04:49,260 --> 00:04:51,590\nAnd if one of them gets lost,\njust skip it.\n\n85\n00:04:52,590 --> 00:04:55,710\nWith 30 frames per second,\nif I'm waving my hand across the screen,\n\n86\n00:04:55,710 --> 00:04:58,520\nsure my hand might disappear from here,\nand re-appear here.\n\n87\n00:04:58,520 --> 00:05:02,250\nBut at least it's smooth, and\nthe audio doesn't get interrupted, and\n\n88\n00:05:02,250 --> 00:05:03,330\nwe continue on.\n\n89\n00:05:03,330 --> 00:05:06,630\nOr a voice call, sure,\nmaybe there's a little stutter, or a pop.\n\n90\n00:05:06,630 --> 00:05:07,990\nBut then you continue on.\n\n91\n00:05:07,990 --> 00:05:12,090\nUDP is perfectly suited for\nthose types of communications.\n\n92\n00:05:12,090 --> 00:05:14,672\nNow, just because UDP doesn't\ngive us any error correction,\n\n93\n00:05:14,672 --> 00:05:17,755\nit doesn't mean that you couldn't lay\nsomething else on top of it to do it.\n\n94\n00:05:17,755 --> 00:05:24,676\nThere is software like FTP, file transfer\nprotocol, or DNS that both use UDP also.\n\n95\n00:05:24,676 --> 00:05:28,880\nWell, if I'm downloading a file, and\nif I lose a frame somewhere in the middle\n\n96\n00:05:28,880 --> 00:05:32,150\nof downloading that file,\nthat file is gonna be corrupted.\n\n97\n00:05:32,150 --> 00:05:36,262\nWell, UDP doesn't correct for\nit, but FTP can.\n\n98\n00:05:36,262 --> 00:05:40,010\nFTP will run the checksum on the data,\nand check and see that something missing,\n\n99\n00:05:40,010 --> 00:05:43,190\nand it'll re-request that block of data.\n\n100\n00:05:43,190 --> 00:05:45,750\nSo it's doing block checksums,\nas it transfers.\n\n101\n00:05:45,750 --> 00:05:49,275\nOr DNS, if I don't get my response,\nit just does another re-request.\n\n102\n00:05:49,275 --> 00:05:53,045\nSo, other software may add error\nchecking on top of it, but\n\n103\n00:05:53,045 --> 00:05:55,905\nUDP itself does no error checking.\n\n104\n00:05:55,905 --> 00:05:57,975\nIt throws the data out there, and says,\n\n105\n00:05:57,975 --> 00:06:00,185\nboy I hope it made it,\ncuz here's the next set of data.\n\n106\n00:06:00,185 --> 00:06:02,025\nAnd it continues rifling on.\n\n107\n00:06:02,025 --> 00:06:04,855\nBest effort delivery\nis what that's called.\n\n108\n00:06:04,855 --> 00:06:07,920\nIt makes an effort, but\nit doesn’t do it reliably.\n\n109\n00:06:07,920 --> 00:06:11,140\nIt doesn’t guarantee\ndelivery to the other side.\n\n110\n00:06:11,140 --> 00:06:15,810\nSo, if we were to compare UDP to TCP,\nhere, let me bring up a diagram.\n\n111\n00:06:15,810 --> 00:06:17,920\nHere’s an example of a TCP communication.\n\n112\n00:06:17,920 --> 00:06:21,820\nWe’ve got a handshake completing,\nwe send some sequenced numbers.\n\n113\n00:06:21,820 --> 00:06:23,820\nSo, Host B is sending data to Host A,\n\n114\n00:06:23,820 --> 00:06:28,760\nand then Host A acknowledges receipt\nsaying, yeah, I got those three sequences.\n\n115\n00:06:28,760 --> 00:06:31,190\nNow, I'm ready for the next one.\n\n116\n00:06:31,190 --> 00:06:34,860\nSo, we know the other host got their data,\nand we continue.\n\n117\n00:06:34,860 --> 00:06:37,070\nAnd if we don't get the acknowledgement,\nwe know to re-transmit.\n\n118\n00:06:37,070 --> 00:06:40,597\nThat's the error correction\nbuilt in to TCP.\n\n119\n00:06:40,597 --> 00:06:44,545\nUDP looks more like this,\nthere is no hand shake,\n\n120\n00:06:44,545 --> 00:06:47,960\nUDP starts throwing the data at Host A.\n\n121\n00:06:47,960 --> 00:06:51,400\nA connection is made,\nwe do reach out to the other host.\n\n122\n00:06:51,400 --> 00:06:55,170\nWe have layer 2 or layer 3,\nthose things have to happen.\n\n123\n00:06:55,170 --> 00:06:58,921\nBut at layer 4 UDP doesn't do a hand\nshake, it doesn't build a session.\n\n124\n00:06:58,921 --> 00:07:04,823\nEach individual segment that we send on\nthe network, is independent of the others.\n\n125\n00:07:04,823 --> 00:07:06,490\nThere's no sequenced numbers.\n\n126\n00:07:06,490 --> 00:07:09,450\nIf these get delivered out of order,\nthen they're out of order.\n\n127\n00:07:09,450 --> 00:07:10,620\nThat's just how [LAUGH] it is.\n\n128\n00:07:10,620 --> 00:07:12,670\nThey just get thrown to the other side.\n\n129\n00:07:12,670 --> 00:07:16,360\nYour software might add additional\nthings to fix that, but UDP won't.\n\n130\n00:07:16,360 --> 00:07:20,190\nIt's just gonna start rifling that data\none after the other, to the other side.\n\n131\n00:07:20,190 --> 00:07:23,850\nAnd if one doesn't make it though,\nlike if this one cuts short, and\n\n132\n00:07:23,850 --> 00:07:26,770\ngets stopped somewhere, it just sends\nthe next one, and the next one, and\n\n133\n00:07:26,770 --> 00:07:31,820\nthe next one, and\nkeeps doing the same thing for perpetuity.\n\n134\n00:07:31,820 --> 00:07:33,000\nIt just keeps going on.\n\n135\n00:07:33,000 --> 00:07:35,050\nBut that's a good thing.\n\n136\n00:07:35,050 --> 00:07:36,510\nThat's what we want with UDP.\n\n137\n00:07:37,700 --> 00:07:40,780\nSo, what do we need to learn about UDP?\n\n138\n00:07:40,780 --> 00:07:41,640\nNot much.\n\n139\n00:07:41,640 --> 00:07:44,490\nThere's not a handshake to memorize,\nthere's not any crazy advanced\n\n140\n00:07:44,490 --> 00:07:49,330\ntechnology in here for detecting bandwidth\ncongestion, or anything like that.\n\n141\n00:07:49,330 --> 00:07:53,060\nUDP is simple, and\noblivious to most network settings.\n\n142\n00:07:53,060 --> 00:07:55,670\nIt just throws data out there,\nand off it goes.\n\n143\n00:07:57,430 --> 00:08:00,950\nBut there are a couple things that\nCisco calls out specifically.\n\n144\n00:08:00,950 --> 00:08:02,900\nLet me pull those objectives back up,\nwhere did I put those?\n\n145\n00:08:02,900 --> 00:08:03,720\nHere.\n\n146\n00:08:03,720 --> 00:08:07,190\nThey call out starvation, and latency.\n\n147\n00:08:07,190 --> 00:08:08,680\nThat first one, starvation.\n\n148\n00:08:08,680 --> 00:08:16,140\nStarvation is not actually a feature of\nUDP, it's a problem that UDP can cause.\n\n149\n00:08:16,140 --> 00:08:17,920\nLet me give you a scenario.\n\n150\n00:08:17,920 --> 00:08:22,238\nIf you've already watched our TCP episode,\nthe one that we filmed before this, so\n\n151\n00:08:22,238 --> 00:08:30,060\nthe Objective 1.4 up here, I talked about\nhow TCP has built-in congestion detection.\n\n152\n00:08:30,060 --> 00:08:34,670\nIt will detect when the network is\ncongested, and it'll slow itself down, and\n\n153\n00:08:34,670 --> 00:08:35,940\nlet the congestion clear.\n\n154\n00:08:35,940 --> 00:08:38,390\nAnd once it's clear, it'll build back up.\n\n155\n00:08:38,390 --> 00:08:39,650\nIt has a slow start algorithm.\n\n156\n00:08:39,650 --> 00:08:42,710\nIt lets it build backup, and\nget backup to full speed.\n\n157\n00:08:42,710 --> 00:08:44,970\nSo TCP is aware,\nwhen the network gets busy.\n\n158\n00:08:46,140 --> 00:08:48,118\nUDP is not aware.\n\n159\n00:08:48,118 --> 00:08:49,670\nIt doesn't know, that the network is busy.\n\n160\n00:08:49,670 --> 00:08:51,063\nIt doesn't care.\nIt just keeps throwing it out.\n\n161\n00:08:51,063 --> 00:08:55,307\nAnd if data is getting dropped because the\nqueue is on a router interface that filled\n\n162\n00:08:55,307 --> 00:08:56,529\nup, it doesn't care.\n\n163\n00:08:56,529 --> 00:08:58,480\nIt just keeps throwing, and\nthey keep getting dropped.\n\n164\n00:08:58,480 --> 00:09:02,270\nAnd then congestion will eventually\nclear itself, and UDP is still going.\n\n165\n00:09:02,270 --> 00:09:04,110\nSo, it's oblivious.\n\n166\n00:09:04,110 --> 00:09:07,840\nBut that whole act of being oblivious,\n\n167\n00:09:07,840 --> 00:09:11,140\ncan cause what's called queue\nstarvation on our network.\n\n168\n00:09:11,140 --> 00:09:13,310\nOr TCP starvation is\nwhat a lot of us call it.\n\n169\n00:09:13,310 --> 00:09:15,620\nLet me show you, what that is.\n\n170\n00:09:15,620 --> 00:09:17,270\nI've got a real simple diagram here,\n\n171\n00:09:17,270 --> 00:09:22,300\nthat just shows a kind of\na visualization of an interface queue.\n\n172\n00:09:22,300 --> 00:09:25,940\nSo on a router,\nall of your interfaces have a queue.\n\n173\n00:09:25,940 --> 00:09:27,140\nIt's a little block of memory,\n\n174\n00:09:27,140 --> 00:09:30,940\nthat's set aside to store data\nwhen the interface is busy.\n\n175\n00:09:30,940 --> 00:09:35,220\nIf the interface is busy sending data\nright now, and you get more data to send,\n\n176\n00:09:35,220 --> 00:09:36,390\nwhat does it do?\n\n177\n00:09:36,390 --> 00:09:37,375\ndoes it just throw it away?\n\n178\n00:09:37,375 --> 00:09:42,680\nWell, all routers 25 years ago would,\nthey would just throw it away.\n\n179\n00:09:42,680 --> 00:09:45,670\nBut modern routers,\nanything made in the last 20 years,\n\n180\n00:09:45,670 --> 00:09:49,750\nwill have a block of memory set aside,\nto be able to store that data.\n\n181\n00:09:49,750 --> 00:09:51,760\nThey may even have more than one block.\n\n182\n00:09:51,760 --> 00:09:54,250\nThey may have many queues\non that interface.\n\n183\n00:09:54,250 --> 00:09:56,320\nBut you'll usually have at least one.\n\n184\n00:09:56,320 --> 00:09:58,650\nEven layer two devices,\nlike switches will have this.\n\n185\n00:09:58,650 --> 00:10:01,510\nBut routers especially will\nhave interface queues.\n\n186\n00:10:01,510 --> 00:10:03,890\nAnd then interface queue\ncan be a varying size.\n\n187\n00:10:03,890 --> 00:10:06,565\nThe more expensive your router,\nthe bigger that queue is.\n\n188\n00:10:06,565 --> 00:10:09,290\nCuz you need a bigger queue\nto handle more connections.\n\n189\n00:10:09,290 --> 00:10:14,450\nBut let's just pretend that our\ninterface queue is 64k in size.\n\n190\n00:10:14,450 --> 00:10:15,940\nThat doesn't sound like a lot, but\n\n191\n00:10:15,940 --> 00:10:18,730\nit is actually a pretty decent amount for\na system.\n\n192\n00:10:18,730 --> 00:10:22,410\nIf you are queueing up more than 64k,\nthen you may have problems.\n\n193\n00:10:22,410 --> 00:10:24,070\nWell, I guess I should clarify that.\n\n194\n00:10:24,070 --> 00:10:26,640\nFor a WAN link,\nthat's a pretty good amount.\n\n195\n00:10:26,640 --> 00:10:30,410\nFor a LAN, if you got gig links,\nthat 64k is almost negligible.\n\n196\n00:10:30,410 --> 00:10:32,350\nSo, you need something\nmuch bigger than that, and\n\n197\n00:10:32,350 --> 00:10:34,240\nyou'll see much bigger\ninterface queues on those.\n\n198\n00:10:34,240 --> 00:10:36,390\nSo, it does vary based on your equipment.\n\n199\n00:10:36,390 --> 00:10:37,760\nBut for my example, we'll pretend 64k.\n\n200\n00:10:38,870 --> 00:10:41,630\nWell, when my network\nstarts communicating,\n\n201\n00:10:41,630 --> 00:10:44,190\nif the interface gets backlogged.\n\n202\n00:10:44,190 --> 00:10:48,030\nMaybe I've got a T1 line,\na 1.544 Megabit T1 line.\n\n203\n00:10:48,030 --> 00:10:49,140\nAnd the interface for\n\n204\n00:10:49,140 --> 00:10:53,000\nit, I've got enough outgoing traffic\nthat its saturated right now.\n\n205\n00:10:53,000 --> 00:10:54,880\nIt's at a 100% utilization.\n\n206\n00:10:54,880 --> 00:10:58,595\nWel,l any new traffic I get while that\nline is full is gonna get written to my\n\n207\n00:10:58,595 --> 00:11:02,045\nqueue, to wait in line to be\nable to get to the interface.\n\n208\n00:11:02,045 --> 00:11:05,745\nAnd here, I'm just showing some TCP,\nand UDP traffic in the queue.\n\n209\n00:11:05,745 --> 00:11:07,775\nAlthough, you can barely see that TCP.\n\n210\n00:11:07,775 --> 00:11:10,315\nLet me change that color,\nso we can actually see it.\n\n211\n00:11:10,315 --> 00:11:13,650\nThere, so I've got TCP, and\nUDP traffic inside of that queue.\n\n212\n00:11:13,650 --> 00:11:17,830\nAnd as long as there's extra room in\nthe queue, there's empty space, I'm fine.\n\n213\n00:11:18,890 --> 00:11:21,150\nAnd as my system gets busier,\n\n214\n00:11:21,150 --> 00:11:26,150\nthese levels of data may increase as\nI add more traffic on the network,\n\n215\n00:11:26,150 --> 00:11:29,690\nand more systems start communicating,\nand we start filling up.\n\n216\n00:11:29,690 --> 00:11:34,425\nBut as long as there's empty space,\nwe're okay.\n\n217\n00:11:34,425 --> 00:11:37,180\nUDP, it doesn't care about\nthe congestion anyway.\n\n218\n00:11:38,500 --> 00:11:40,798\nTCP isn't gonna see the congestion yet,\n\n219\n00:11:40,798 --> 00:11:45,394\nbecause while our data's going into the\nqueue it's gonna hit the interface next,\n\n220\n00:11:45,394 --> 00:11:49,546\nand it's not gonna stay in the queue\nlong enough that it shows its dropped.\n\n221\n00:11:49,546 --> 00:11:52,490\nBut what happens when the queue gets full?\n\n222\n00:11:52,490 --> 00:11:56,790\nIf the queue gets full, so\nour traffic stretches to fill that queue.\n\n223\n00:11:57,790 --> 00:11:59,870\nWell, let's make TCP the culprit.\n\n224\n00:11:59,870 --> 00:12:01,980\nSo, TCP starts sending traffic.\n\n225\n00:12:01,980 --> 00:12:04,464\nThat is the slowest move ever there.\n\n226\n00:12:04,464 --> 00:12:07,930\n[LAUGH] So,\nif TCP starts filling us up with traffic.\n\n227\n00:12:07,930 --> 00:12:11,370\nA lot of TCP traffic on the network,\nand the queue gets full.\n\n228\n00:12:11,370 --> 00:12:14,220\nNow, what's gonna happen to new\ntraffic that hits the interface?\n\n229\n00:12:14,220 --> 00:12:18,000\nNew traffic hitting the interface\nwon't be able to go in the queue, and\n\n230\n00:12:18,000 --> 00:12:19,470\nit will get dropped.\n\n231\n00:12:19,470 --> 00:12:21,550\nNow, UDP is not gonna care about that,\nit'll keep sending,\n\n232\n00:12:21,550 --> 00:12:24,020\neven though it's getting dropped.\n\n233\n00:12:24,020 --> 00:12:29,257\nTCP, on the other hand, will recognize\nthe congestion, and reduce its values.\n\n234\n00:12:29,257 --> 00:12:33,851\nSo, it'll slow down to reduce congestion.\n\n235\n00:12:33,851 --> 00:12:36,776\nThis is gonna reduce it\nto a pretty low level.\n\n236\n00:12:36,776 --> 00:12:39,236\nWell, that's because it understands\nthe congestion happened, and\n\n237\n00:12:39,236 --> 00:12:40,160\nit needs you to slow down.\n\n238\n00:12:40,160 --> 00:12:44,930\nUDP doesn't understand that though,\nso what's UDP gonna do?\n\n239\n00:12:44,930 --> 00:12:49,510\nUDP is gonna continue to\ngrow to fill the queue.\n\n240\n00:12:50,580 --> 00:12:54,910\nUDP doesn't know about the congestion,\nand so even though TCP just\n\n241\n00:12:56,000 --> 00:13:01,870\nstepped down to minimize the congestion,\nUDP fills the gap, and now TCP is screwed.\n\n242\n00:13:01,870 --> 00:13:04,280\nIt's [LAUGH] not that\nthe congestion's gonna clear itself,\n\n243\n00:13:04,280 --> 00:13:09,020\nbecause UDP has now\nstarved TCP of bandwidth.\n\n244\n00:13:09,020 --> 00:13:10,700\nUDP will fill that gap.\n\n245\n00:13:10,700 --> 00:13:15,675\nSo, the fact that TCPS congestion\nprotection in it is a great thing, but\n\n246\n00:13:15,675 --> 00:13:17,670\nnot everybody plays nice.\n\n247\n00:13:17,670 --> 00:13:20,910\nAnd so, when they back off,\nUDP just says hey it's a buffet.\n\n248\n00:13:20,910 --> 00:13:23,080\nLet's go ahead, and jump in,\nand grab everything.\n\n249\n00:13:23,080 --> 00:13:26,660\nAnd now TCP,\nour reliable communications, the ones we\n\n250\n00:13:26,660 --> 00:13:29,940\nreally don't want to lose data,\ngets starved, and starts to add outages.\n\n251\n00:13:29,940 --> 00:13:33,880\nWe start getting network connectivity\nissues, failed connections, and so on, and\n\n252\n00:13:33,880 --> 00:13:35,520\nthat's bad.\n\n253\n00:13:35,520 --> 00:13:38,870\nThis is a condition of UDP\nthat we need to be aware of.\n\n254\n00:13:38,870 --> 00:13:40,200\nNow, how do we fix it?\n\n255\n00:13:40,200 --> 00:13:43,010\nWell, you can't add\ncongestion to actual UDP.\n\n256\n00:13:43,010 --> 00:13:44,080\nIt just doesn't support it.\n\n257\n00:13:44,080 --> 00:13:45,590\nSo, we can't do that.\n\n258\n00:13:45,590 --> 00:13:47,740\nSo, we've got to find some other solution.\n\n259\n00:13:47,740 --> 00:13:52,490\nAnd the way you solve it,\nis by using quality of service.\n\n260\n00:13:52,490 --> 00:13:57,740\nWith quality of service, you can\ndesignate classes of your traffic, and\n\n261\n00:13:57,740 --> 00:14:04,390\nyou can classify TCP to have higher\npriority access to the queues than UDP.\n\n262\n00:14:04,390 --> 00:14:06,980\nYou can make UDP lower priority.\n\n263\n00:14:06,980 --> 00:14:10,670\nRemember, that if UDP loses some packets,\nthat's fine.\n\n264\n00:14:10,670 --> 00:14:11,750\nUDP can handle that.\n\n265\n00:14:11,750 --> 00:14:14,750\nIt's designed for traffic,\nthat lose a few packets.\n\n266\n00:14:14,750 --> 00:14:15,650\nBut TCP can't.\n\n267\n00:14:15,650 --> 00:14:20,860\nSo, we want to ensure that UDP\ncan't over-utilize the queue.\n\n268\n00:14:20,860 --> 00:14:25,760\nSo, you might wanna designate that UDP\ncan only have 50% of the queue, or\n\n269\n00:14:25,760 --> 00:14:28,790\nUDP has a maximum bandwidth\nit's allowed to consume.\n\n270\n00:14:28,790 --> 00:14:33,450\nOr if your router has more than one queue,\nyou might wanna define separate queues.\n\n271\n00:14:33,450 --> 00:14:35,990\nOne queue for TCP, and\na separate queue for UDP.\n\n272\n00:14:35,990 --> 00:14:38,240\nYou can classify your traffic that way.\n\n273\n00:14:38,240 --> 00:14:41,770\nAnd that way when UDP starts going crazy,\nit's got limits on it.\n\n274\n00:14:41,770 --> 00:14:46,790\nOr it's just affecting it's own queue,\nand TCP still has it's own room to grow.\n\n275\n00:14:46,790 --> 00:14:50,790\nBut prioritizing TCP\nover UDP is a good idea.\n\n276\n00:14:50,790 --> 00:14:52,640\nTCP is reliable communication,\n\n277\n00:14:52,640 --> 00:14:56,460\nit needs to get through,\nit's usually our important stuff.\n\n278\n00:14:56,460 --> 00:15:00,430\nEmails, the web access,\nmainframe access, things like that,\n\n279\n00:15:00,430 --> 00:15:02,720\nthose are almost always done over TCP.\n\n280\n00:15:02,720 --> 00:15:06,580\nUDP is typically video streaming,\nvoiceover IP, audio,\n\n281\n00:15:06,580 --> 00:15:10,070\nthat kind of thing, and\ncan afford to lose a packet, or two.\n\n282\n00:15:10,070 --> 00:15:14,560\nWell, I said voiceover IP, you may find\nthat voice is really important to you.\n\n283\n00:15:14,560 --> 00:15:17,630\nAnd so,\nyou don’t want voice losing some packets.\n\n284\n00:15:17,630 --> 00:15:19,980\nSo you may need to further classify, and\n\n285\n00:15:19,980 --> 00:15:23,090\nsay voice UDP traffic\ncan use the bandwidth.\n\n286\n00:15:23,090 --> 00:15:24,760\nBut other UDP traffic can't see.\n\n287\n00:15:24,760 --> 00:15:27,820\nSo you've really got to tailor that to\nyour business, and your business needs.\n\n288\n00:15:27,820 --> 00:15:30,360\nBut there's no way to\nfix it in UDP itself.\n\n289\n00:15:30,360 --> 00:15:36,460\nUDP will starve your queues for TCP,\nor it'll starve TCP in the queues.\n\n290\n00:15:36,460 --> 00:15:39,130\nAnd that's just because it has no\nidea about the bandwidth congestion.\n\n291\n00:15:40,180 --> 00:15:41,730\nIt's a condition you need to be aware of,\nand\n\n292\n00:15:41,730 --> 00:15:42,929\nit's something a lot of\npeople don't think about.\n\n293\n00:15:44,340 --> 00:15:47,550\nThe only other bullet point\nthey call out is latency, and\n\n294\n00:15:47,550 --> 00:15:50,830\nwith latency, well, it's latency.\n\n295\n00:15:50,830 --> 00:15:55,410\nThat's the amount of time it takes\na packet to get from one host to another.\n\n296\n00:15:55,410 --> 00:15:58,650\nAnd if that host is sitting next to you,\nit might be very short.\n\n297\n00:15:58,650 --> 00:16:01,550\nIf that host is very far away,\nit could take a long time.\n\n298\n00:16:01,550 --> 00:16:04,740\nIt could take a second,\neven two seconds to get there.\n\n299\n00:16:04,740 --> 00:16:08,660\nLong latency can be bad for\nthings like voice over IP, and\n\n300\n00:16:08,660 --> 00:16:10,360\nthat's where UDP excels.\n\n301\n00:16:10,360 --> 00:16:13,910\nSince UDP doesn't have all the hand\nshaking, and it doesn't wait for\n\n302\n00:16:13,910 --> 00:16:19,100\nacknowledgements, its latency\nwill be lower than TCP.\n\n303\n00:16:19,100 --> 00:16:21,260\nIts header is also smaller.\n\n304\n00:16:21,260 --> 00:16:24,392\nWe don’t have to do things like\nsequenced numbers, and re-orders,\n\n305\n00:16:24,392 --> 00:16:27,560\nand re-assembly because this\nis just coming in as a stream.\n\n306\n00:16:27,560 --> 00:16:33,140\nSo UDP’s simplicity, its smaller header,\nmakes it faster to process.\n\n307\n00:16:33,140 --> 00:16:35,740\nYour systems are able to receive it\nmore quickly, and process it, so\n\n308\n00:16:35,740 --> 00:16:39,010\nit is a faster protocol\nin terms of the latency,\n\n309\n00:16:39,010 --> 00:16:43,370\nthe time it takes that data to get from\none host to another, and get process.\n\n310\n00:16:43,370 --> 00:16:47,560\nThat whole thing about dumping\nthe handshake not doing the handshake,\n\n311\n00:16:47,560 --> 00:16:50,950\nyou're just getting the data there,\nmakes it ideal for voice over IP, or\n\n312\n00:16:50,950 --> 00:16:52,680\nany other low latency communication.\n\n313\n00:16:54,180 --> 00:16:57,030\nIf you do have latency on the network,\nif it is a slow connection.\n\n314\n00:16:57,030 --> 00:16:58,660\nUDP will still send traffic over.\n\n315\n00:16:58,660 --> 00:17:01,260\nYou can still make a voice over\nIP call over a crappy line.\n\n316\n00:17:01,260 --> 00:17:03,730\nIt's just not gonna sound very good.\n\n317\n00:17:03,730 --> 00:17:06,670\nUDP is designed to be fast.\n\n318\n00:17:06,670 --> 00:17:10,740\nSo all those times you hear people say,\nwhy would you use UDP, it's garbage.\n\n319\n00:17:10,740 --> 00:17:12,090\nIt's not reliable.\n\n320\n00:17:12,090 --> 00:17:13,580\nWhy would I use that?\n\n321\n00:17:13,580 --> 00:17:14,880\nNow, you know why.\n\n322\n00:17:14,880 --> 00:17:16,140\nSpeed.\nEfficiency.\n\n323\n00:17:16,140 --> 00:17:16,950\nThat's where we want it.\n\n324\n00:17:18,760 --> 00:17:21,070\nSo, that's pretty much it for UDP.\n\n325\n00:17:21,070 --> 00:17:24,957\nThe only last comment that I wanna make\non it is that a UDP header is actually\n\n326\n00:17:24,957 --> 00:17:26,411\nsmaller than TCP headers.\n\n327\n00:17:26,411 --> 00:17:31,780\nSo your overhead for\nusing UDP is a little smaller than TCP.\n\n328\n00:17:31,780 --> 00:17:35,470\nThat means you can usually get a little\nmore data in your frames before they have\n\n329\n00:17:35,470 --> 00:17:38,330\nto be fragmented, and\nthat makes it more efficient too.\n\n330\n00:17:38,330 --> 00:17:41,600\nThere's a lot of good things about UDP,\nfor not being reliable.\n\n331\n00:17:43,250 --> 00:17:47,380\nWell, in this segment we took a look\nat UDP the basic operation of it,\n\n332\n00:17:47,380 --> 00:17:48,600\nwhich was pretty straightforward.\n\n333\n00:17:48,600 --> 00:17:52,040\nI did a little comparison to TCP\ncuz that helps to understand it.\n\n334\n00:17:52,040 --> 00:17:55,160\nWe also talked about starvation,\nand what that is, and\n\n335\n00:17:55,160 --> 00:17:57,110\nhow that can cause\nproblems on our networks.\n\n336\n00:17:57,110 --> 00:17:59,250\nAnd lastly,\nwe talked a little bit about latency.\n\n337\n00:18:00,620 --> 00:18:01,780\nI hope you guys enjoyed the segment.\n\n338\n00:18:01,780 --> 00:18:06,130\nRemember, if you have any questions\non this, feel free to ask.\n\n339\n00:18:06,130 --> 00:18:06,970\nLive during the show,\n\n340\n00:18:06,970 --> 00:18:11,400\nyou can go to itpro.tv/live and\nyou'll see the chat box below the video.\n\n341\n00:18:11,400 --> 00:18:14,380\nPost your questions there,\nwe monitor and answer during the show.\n\n342\n00:18:14,380 --> 00:18:17,600\nIf you have questions after the show,\nuse our Q&A forums.\n\n343\n00:18:17,600 --> 00:18:20,940\nOn the top of every page at\nitpro.tv you'll see the Q&A link.\n\n344\n00:18:20,940 --> 00:18:21,950\nIt'll take you to the forums,\n\n345\n00:18:21,950 --> 00:18:24,090\nyou can post your questions there,\nwe monitor and answer.\n\n346\n00:18:26,280 --> 00:18:27,730\nLike I said,\nI hope you guy enjoyed the segment.\n\n347\n00:18:27,730 --> 00:18:30,600\nStay tuned, we've got more CCNP\nepisodes coming down the pipe.\n\n348\n00:18:30,600 --> 00:18:32,740\nWe're still in Objective 1, so\nwe've got a long way to go.\n\n349\n00:18:32,740 --> 00:18:35,580\nSo, make sure you catch up with all that,\nit's gonna be a good time.\n\n350\n00:18:35,580 --> 00:18:37,620\nWe'll get into some of the more\nhands-on stuff later on,\n\n351\n00:18:37,620 --> 00:18:38,750\nthat's a lot more entertaining.\n\n352\n00:18:39,830 --> 00:18:42,568\nWell, signing off for\nITProTV, I'm Don Pezet.\n\n353\n00:18:42,568 --> 00:18:44,994\nAnd I'll see you next time.\n\n354\n00:18:44,994 --> 00:18:54,994\n[MUSIC]\n\n355\n00:18:57,057 --> 00:19:03,386\n[SOUND]\n\n",
          "vimeoId": "109819618"
        },
        {
          "description": "Even little changes to the configurable values inside a dynamic routing protocol can cause problems throughout the rest of the infrastructure. Viewers will hear about changes with the network including routing parameters of Administrative Distance and Metrics, migration to IPv6 addressing, using dual stacking technology and will also hear about the two different routing protocol migration strategies: changing AD and a moving wave change using Route Redistribution.",
          "length": "2294",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/ccnproute/1-6-Proposed-Changes.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/ccnproute/1-6-Proposed-Changes-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/ccnproute/1-6-Proposed-Changes-sm.jpg",
          "title": "Proposed Changes",
          "transcript": "1\n00:00:00,000 --> 00:00:08,099\n[MUSIC]\n\n2\n00:00:08,099 --> 00:00:12,364\nIn this segment, we're gonna take\na look at exam objective 1.6,\n\n3\n00:00:12,364 --> 00:00:16,410\nwhich is recognize proposed\nchanges to the network.\n\n4\n00:00:16,410 --> 00:00:20,180\nNow, this is one of the areas that Cisco's\nimproved on the exam from the old one,\n\n5\n00:00:20,180 --> 00:00:23,430\nthe old one point oh one point one exam,\nfor this actually we're\n\n6\n00:00:23,430 --> 00:00:26,570\njust going to this giant almost like\nsales and marketing presentation.\n\n7\n00:00:26,570 --> 00:00:27,900\nI always hated that.\n\n8\n00:00:27,900 --> 00:00:31,750\nBut, in the new 2.0, they've revised\nit to be a lot more meaningful.\n\n9\n00:00:31,750 --> 00:00:37,400\nAnd what they're really stressing Is, that\nyou need to understand that in a dynamic\n\n10\n00:00:37,400 --> 00:00:42,990\nrouted environment, when you make\na little change in one place it can\n\n11\n00:00:42,990 --> 00:00:48,080\nvery easily propagate out through the rest\nof your infrastructure and wreak havoc.\n\n12\n00:00:48,080 --> 00:00:50,950\nYou can cause a lot of problems.\n\n13\n00:00:50,950 --> 00:00:54,360\nSo that's what they're talking about in\n1.6 is we need to understand what's going\n\n14\n00:00:54,360 --> 00:00:58,930\non on the network, what changes are being\nmade, and the ramifications that may have.\n\n15\n00:00:58,930 --> 00:01:03,210\nAnd they start off real simple with\nrouting protocol parameters, right.\n\n16\n00:01:03,210 --> 00:01:06,960\nIf we make changes to routing protocol\nparameters, what effect will that have,\n\n17\n00:01:06,960 --> 00:01:10,940\nand what they're really talking about\nare the little configurable values\n\n18\n00:01:10,940 --> 00:01:13,520\ninside of each of the dynamic\nrouting protocols.\n\n19\n00:01:13,520 --> 00:01:18,120\nNow in the CCNA,\nwe learned about what EIGRP and\n\n20\n00:01:18,120 --> 00:01:21,410\nOSPF and-\n>> Static routing.\n\n21\n00:01:21,410 --> 00:01:24,420\n>> For the most part,\nyou turn them on and they run, and\n\n22\n00:01:24,420 --> 00:01:27,370\nthat's, I mean, static routing, I suppose,\nthat you have to get a little involved in,\n\n23\n00:01:27,370 --> 00:01:30,170\nbut with EIGRP and\nOSPF you turn them on and\n\n24\n00:01:30,170 --> 00:01:32,915\nthey make their decisions and\nthey do a pretty good job, right?\n\n25\n00:01:33,935 --> 00:01:38,085\nThey do a good job because somebody really\nsmart came up with the algorithm for that.\n\n26\n00:01:38,085 --> 00:01:38,755\nRight?\n\n27\n00:01:38,755 --> 00:01:41,795\nLike the dikstra algorithm and OSPF and\n\n28\n00:01:41,795 --> 00:01:46,462\nthe diffusing update algorithm in EIGRP\n>> A lot of\n\n29\n00:01:46,462 --> 00:01:48,932\nreally powerful minds were\nput together to work on that,\n\n30\n00:01:48,932 --> 00:01:52,482\nto make those protocols make\nthe best decisions possible.\n\n31\n00:01:52,482 --> 00:01:53,272\n>> Right.\n\n32\n00:01:53,272 --> 00:01:57,252\n>> So in most cases, we don't have to\nconfigure any variables, or options, or\n\n33\n00:01:57,252 --> 00:01:58,950\nanything like that.\n\n34\n00:01:58,950 --> 00:02:03,390\nBut there may be times where you\nneed to override those, all right?\n\n35\n00:02:03,390 --> 00:02:06,525\nAs a refresher, there's not a whole\nheck of a lot we can change, right?\n\n36\n00:02:06,525 --> 00:02:09,470\n>> Mm-hm.\n>> So in OSPF, what is OSPF's metric?\n\n37\n00:02:10,490 --> 00:02:11,410\nBandwidth, right?\n\n38\n00:02:11,410 --> 00:02:12,720\nOSPF cares about bandwidth.\n\n39\n00:02:12,720 --> 00:02:15,500\nWhen it makes a decision across your\nnetwork, its looking at bandwidth.\n\n40\n00:02:15,500 --> 00:02:19,440\nSo if we take a network like this one\nI've got on my computer here, when hosts\n\n41\n00:02:19,440 --> 00:02:23,820\nin 192.168.0 try to get to 192.168.5,\nthey gotta pass through all these routers.\n\n42\n00:02:23,820 --> 00:02:27,920\nAnd these routers are going to\nmake decisions, if this is OSPF,\n\n43\n00:02:27,920 --> 00:02:29,550\nbased on bandwidth.\n\n44\n00:02:29,550 --> 00:02:36,520\nSo, if this link right here is a T1 line,\n1.544 megabit of bandwidth and\n\n45\n00:02:36,520 --> 00:02:41,490\nthis is a 56K dial-up,\nwhich one is OSPF going to pick?\n\n46\n00:02:41,490 --> 00:02:43,340\nThe top one, all right?\n\n47\n00:02:43,340 --> 00:02:45,100\nBut we can override bandwidth.\n\n48\n00:02:45,100 --> 00:02:48,260\nWe can override bandwidth on\nany individual link on OSPF.\n\n49\n00:02:48,260 --> 00:02:50,560\nYou just go to the interface and\nuse the bandwidth command and\n\n50\n00:02:50,560 --> 00:02:54,600\nyou can override that and that will change\nthe way that this router makes decisions.\n\n51\n00:02:56,110 --> 00:03:00,880\nBut, you're just changing\nit on that one router.\n\n52\n00:03:00,880 --> 00:03:04,060\nThe other routers don't use\nthat same logic, right?\n\n53\n00:03:04,060 --> 00:03:05,840\nThey're not overwriting that bandwidth.\n\n54\n00:03:05,840 --> 00:03:08,640\nSo, if I tell it one thing here,\n\n55\n00:03:08,640 --> 00:03:11,490\nat the other end of that\ncable it doesn't know it.\n\n56\n00:03:11,490 --> 00:03:16,400\nAnd so now we can start ending up\nwith things like asymmetric routing.\n\n57\n00:03:16,400 --> 00:03:17,000\nAll right.\nAnd\n\n58\n00:03:17,000 --> 00:03:20,380\nthat's really our big\nrisk with this stuff.\n\n59\n00:03:20,380 --> 00:03:23,792\nSo for example,\nif my whole top route here is ten megabit,\n\n60\n00:03:23,792 --> 00:03:26,125\nthat's nice and legible, isn't it.\n\n61\n00:03:26,125 --> 00:03:26,775\n>> [LAUGH].\n\n62\n00:03:26,775 --> 00:03:30,685\n>> Let me just bump that up and make\nit something we can actually see here.\n\n63\n00:03:30,685 --> 00:03:31,545\nThere we go.\n\n64\n00:03:31,545 --> 00:03:35,735\nSo if that whole link across the top\nis a bunch of ten megabit metro\n\n65\n00:03:35,735 --> 00:03:36,985\nE type connections, right.\n\n66\n00:03:36,985 --> 00:03:39,945\nSo we got ten meg, ten meg,\nten meg, and ten meg.\n\n67\n00:03:39,945 --> 00:03:40,445\nRight.\n\n68\n00:03:44,035 --> 00:03:49,350\nSo somebody from 192.168.0, if they want\nto make it all the way over to 192.168.5,\n\n69\n00:03:49,350 --> 00:03:52,090\nthat is a straight ten meg\ncircuit all the way across.\n\n70\n00:03:53,720 --> 00:03:58,890\nAnd then across the bottom down here\nmaybe I've got things like T1 lines.\n\n71\n00:03:58,890 --> 00:04:01,180\nSo these are my back up lines.\n\n72\n00:04:01,180 --> 00:04:04,870\nSo I've got this whole 1.554 megabit\n\n73\n00:04:04,870 --> 00:04:07,010\nset of lines that runs across the bottom,\nright.\n\n74\n00:04:07,010 --> 00:04:09,770\nThat's pretty much your standard T1 or\nserial circuit.\n\n75\n00:04:11,520 --> 00:04:12,350\nAll right.\n\n76\n00:04:12,350 --> 00:04:14,310\nAnd so now I've got an alternate path.\n\n77\n00:04:14,310 --> 00:04:15,460\nIt's not completely alternate.\n\n78\n00:04:15,460 --> 00:04:16,500\nSome of the equipment is shared.\n\n79\n00:04:16,500 --> 00:04:20,080\nI go from this router, down this link,\ndown this link, up this link and\n\n80\n00:04:20,080 --> 00:04:23,650\nthis one is still shared on my way across,\nright?\n\n81\n00:04:23,650 --> 00:04:29,710\nSo when I'm sending across that network,\nif I make a change on this router,\n\n82\n00:04:29,710 --> 00:04:32,755\nand I say, you know what, let me change\nthe ten meg line to show that it's only\n\n83\n00:04:32,755 --> 00:04:36,120\none meg, and that way we prefer the T1,\nyou can do that.\n\n84\n00:04:36,120 --> 00:04:39,590\nYou go into the interface you\nchange the bandwidth and you do it.\n\n85\n00:04:39,590 --> 00:04:42,280\nAnd now when this router\ngoes to send traffic, yes,\n\n86\n00:04:42,280 --> 00:04:44,340\nit's going to send it down to this router.\n\n87\n00:04:45,520 --> 00:04:48,050\nAnd then it's going to wheedle\nits way over to the other side.\n\n88\n00:04:48,050 --> 00:04:49,910\nOn the other side when\nthe traffic starts coming back,\n\n89\n00:04:49,910 --> 00:04:53,165\nthough, this router is not involved\nin this decision any more.\n\n90\n00:04:53,165 --> 00:04:54,229\nOur other routers are.\n\n91\n00:04:54,229 --> 00:04:56,380\nSo as they start making the decisions,\nthey are going to say,\n\n92\n00:04:56,380 --> 00:04:57,770\nwell ten meg, ten meg.\n\n93\n00:04:57,770 --> 00:05:00,550\nHey, I could go down here\nto this 1.5 meg stuff, or\n\n94\n00:05:00,550 --> 00:05:03,630\nI could stay up here on ten meg, and\nthat's what they're going to do.\n\n95\n00:05:03,630 --> 00:05:07,720\nAnd so, now our traffic is coming\nback to us on a different path\n\n96\n00:05:07,720 --> 00:05:09,320\nthan the way that it went out.\n\n97\n00:05:09,320 --> 00:05:10,780\nAnd that might be what we want.\n\n98\n00:05:10,780 --> 00:05:11,910\nWe might want that.\n\n99\n00:05:11,910 --> 00:05:12,570\nRight?\n\n100\n00:05:12,570 --> 00:05:15,530\nBut in most scenarios that\ncreates asymmetric routing.\n\n101\n00:05:15,530 --> 00:05:17,500\nAnd now we've broken some things.\n\n102\n00:05:17,500 --> 00:05:23,620\nSome things like IPsec and VPNs in general\nreally, really hate asymmetric routing.\n\n103\n00:05:23,620 --> 00:05:25,850\nSo these are the things\nthat we need to understand.\n\n104\n00:05:25,850 --> 00:05:28,790\nWith OSPF it's pretty much just bandwidth.\n\n105\n00:05:28,790 --> 00:05:33,480\nWhen you manipulate bandwidth,\nyou're changing the way that OSPF works.\n\n106\n00:05:33,480 --> 00:05:35,230\nThere is one other thing\nyou can change in OSPF.\n\n107\n00:05:35,230 --> 00:05:37,390\nWe'll see it later in the OSPF shows.\n\n108\n00:05:37,390 --> 00:05:42,620\nBut when OSPF calculates its metric,\nthe metric is\n\n109\n00:05:42,620 --> 00:05:47,430\nyour reference bandwidth divided by\nthe bandwidth of a particular line, and\n\n110\n00:05:47,430 --> 00:05:49,300\nthat creates a number that’s your metric.\n\n111\n00:05:49,300 --> 00:05:50,780\nWhat’s the reference bandwidth?\n\n112\n00:05:50,780 --> 00:05:52,370\nDo you remember, Ronnie?\n\n113\n00:05:52,370 --> 00:05:53,090\n>> It’s 100 megabits.\n\n114\n00:05:53,090 --> 00:05:54,780\n>> Put you on the spot.\n\n115\n00:05:54,780 --> 00:05:55,690\n>> Yes.\n>> So it’s 100 megabits, so\n\n116\n00:05:55,690 --> 00:05:56,720\nwhy did they pick 100 megabits?\n\n117\n00:05:57,840 --> 00:05:59,080\nPretty common, right?\n\n118\n00:05:59,080 --> 00:06:00,560\nSo that’s the reference bandwidth.\n\n119\n00:06:00,560 --> 00:06:02,450\nYou can change the reference bandwidth.\n\n120\n00:06:02,450 --> 00:06:06,120\nOn this router, you could make\nthe reference band with a gigabit,\n\n121\n00:06:06,120 --> 00:06:07,790\nand then on these other routers,\n\n122\n00:06:07,790 --> 00:06:12,400\nif the reference bandwidths are still 100\nmegabit, that's gonna create a problem\n\n123\n00:06:12,400 --> 00:06:14,790\nbecause they generate these metrics,\nand they store them, and\n\n124\n00:06:14,790 --> 00:06:18,080\nthey share the metrics across the link,\nso the other routers know about it.\n\n125\n00:06:18,080 --> 00:06:22,760\nAnd now we start to get really inaccurate\ninformation about our links and\n\n126\n00:06:22,760 --> 00:06:23,800\nour interfaces.\n\n127\n00:06:23,800 --> 00:06:29,190\nSo if you change your reference bandwidth,\nthe important thing to do is to change\n\n128\n00:06:29,190 --> 00:06:32,870\nit everywhere, on all of your\nrouters in OSPF that are in,\n\n129\n00:06:32,870 --> 00:06:37,660\nat least in that area, but preferably\nthroughout your entire autonomous system.\n\n130\n00:06:37,660 --> 00:06:40,620\nBut if you compartmentalize within inside\nof an area that protects it, the other\n\n131\n00:06:40,620 --> 00:06:43,180\nareas could still use a different\nreference bandwidth if they wanted and\n\n132\n00:06:43,180 --> 00:06:45,310\nit wouldn't really create an impact.\n\n133\n00:06:45,310 --> 00:06:50,745\nSo you've just gotta understand\nthat a little change can cause big,\n\n134\n00:06:50,745 --> 00:06:51,400\nbig differences.\n\n135\n00:06:52,800 --> 00:06:56,030\nAll right, I talked about OSPF,\nwhat about EIGRP, right?\n\n136\n00:06:56,030 --> 00:06:57,220\nAnything we can manipulate there?\n\n137\n00:06:57,220 --> 00:06:59,120\n>> Yeah, with EIGRP we have,\n\n138\n00:06:59,120 --> 00:07:04,270\nwhere the metric is based on kind of\na composite metric of bandwidth and delay.\n\n139\n00:07:04,270 --> 00:07:06,850\nAnd normally what we talk\nabout in the CCNA levels,\n\n140\n00:07:06,850 --> 00:07:10,410\nthe only one that we really recommend\nthat we change is the bandwidth.\n\n141\n00:07:10,410 --> 00:07:14,875\nBut you can change to the delay as well,\nand causing that change will cause again,\n\n142\n00:07:14,875 --> 00:07:18,515\nthe changes throughout the entire network\nthat we might not want to have, too.\n\n143\n00:07:18,515 --> 00:07:19,585\nSo those are normally\n\n144\n00:07:19,585 --> 00:07:22,975\nthe fundamental changes that\nwe make in the metric changes.\n\n145\n00:07:22,975 --> 00:07:25,645\n>> Yeah.\nAnd with EIGRP you can really get in there\n\n146\n00:07:25,645 --> 00:07:27,255\nand tweak things.\n\n147\n00:07:27,255 --> 00:07:28,915\nIt has five different metrics.\n\n148\n00:07:28,915 --> 00:07:31,625\nWell, let's just do our quick refresher,\nright?\n\n149\n00:07:31,625 --> 00:07:33,945\nSo it technically has five metrics.\n\n150\n00:07:33,945 --> 00:07:35,355\nIt only has four that it uses, right?\n\n151\n00:07:35,355 --> 00:07:41,200\nSo it's got bandwidth, delay,\nreliability, load and MTU.\n\n152\n00:07:41,200 --> 00:07:42,322\nAll right?\n\n153\n00:07:42,322 --> 00:07:48,530\nMTU though, it's there, it's transmitted\nin the EIGRP packets but it's not used.\n\n154\n00:07:48,530 --> 00:07:51,156\nSo MTU doesn't actually get factored\nin the formula to ignore so\n\n155\n00:07:51,156 --> 00:07:53,208\nthere's not really much\nyou can do with that one.\n\n156\n00:07:53,208 --> 00:07:56,638\nBut the other guys, bandwidth, delay,\n\n157\n00:07:56,638 --> 00:08:01,056\nreliability and load,\nthose four, those get used.\n\n158\n00:08:01,056 --> 00:08:02,739\nThey're there,\nthey can be used in the formula.\n\n159\n00:08:02,739 --> 00:08:07,143\nBut the way the formula is written\nby default, only bandwidth and\n\n160\n00:08:07,143 --> 00:08:08,490\ndelay get used.\n\n161\n00:08:08,490 --> 00:08:10,210\nSo load and reliability don't.\n\n162\n00:08:10,210 --> 00:08:13,910\nAnd the reason they do that is load and\nreliability are constantly changing.\n\n163\n00:08:13,910 --> 00:08:15,780\nSo that means your formula\nis constantly having to run,\n\n164\n00:08:15,780 --> 00:08:16,810\nyou're having to recalculate,\n\n165\n00:08:16,810 --> 00:08:20,170\nand your routing table can be constantly\nchanging, and that's usually bad.\n\n166\n00:08:20,170 --> 00:08:20,700\nRight.\nSo\n\n167\n00:08:20,700 --> 00:08:22,950\nthat's why they just do bandwidth in play.\n\n168\n00:08:22,950 --> 00:08:23,910\nBut you can change that.\n\n169\n00:08:23,910 --> 00:08:26,760\nYou might want to turn on load and\nreliability.\n\n170\n00:08:27,860 --> 00:08:29,560\nCouple of problems you could\nbump into there, right.\n\n171\n00:08:29,560 --> 00:08:31,320\nThe first one just being\nthe rapid changes.\n\n172\n00:08:31,320 --> 00:08:35,985\nIf you turn that on, you're gonna start\nseeing a lot of rapid routes coming in and\n\n173\n00:08:35,985 --> 00:08:37,955\nout of the table, decisions being made.\n\n174\n00:08:37,955 --> 00:08:40,985\nYour CPU utilization on your routers are\ngonna spike because they're handing all of\n\n175\n00:08:40,985 --> 00:08:42,475\nthose changes.\n\n176\n00:08:42,475 --> 00:08:44,335\nThe other thing is if you activate it,\n\n177\n00:08:44,335 --> 00:08:46,315\nyou have to activate it on\neach router individually.\n\n178\n00:08:46,315 --> 00:08:48,525\nIt's not like some global\nchange you can do.\n\n179\n00:08:48,525 --> 00:08:50,185\nSo it goes back to just like with OSPF.\n\n180\n00:08:50,185 --> 00:08:52,685\nDon't make the change on one router.\n\n181\n00:08:52,685 --> 00:08:53,765\nYou need to make it on all of them.\n\n182\n00:08:53,765 --> 00:08:56,750\nCuz otherwise if you make the change on\none router in your autonomous system,\n\n183\n00:08:56,750 --> 00:09:02,720\nit'll start making different decisions\nthan other routers and you can end up in,\n\n184\n00:09:02,720 --> 00:09:06,320\nwell at a minimum you'll usually\nend up with asymmetric routing.\n\n185\n00:09:06,320 --> 00:09:09,100\nBut it can be worse,\nyou can actually generate loops\n\n186\n00:09:09,100 --> 00:09:12,810\nthat are very difficult to detect if\nyour routes are flapping very fast\n\n187\n00:09:12,810 --> 00:09:16,230\nit can be hard to detect that the loop\nis there, but traffic is getting lost.\n\n188\n00:09:16,230 --> 00:09:17,790\nAnd you'll see things\nlike 50% packet loss.\n\n189\n00:09:17,790 --> 00:09:18,392\n>> [LAUGH]\n>> And\n\n190\n00:09:18,392 --> 00:09:20,840\nstuff like that'll start creeping up.\n\n191\n00:09:20,840 --> 00:09:23,640\nLet me just bring up just\na quick review cuz I know\n\n192\n00:09:23,640 --> 00:09:25,790\nCCNA might have been a while back for\nyou guys.\n\n193\n00:09:25,790 --> 00:09:29,350\nI'm just pulling up the EIGRP\ndocumentation on Cisco's site.\n\n194\n00:09:29,350 --> 00:09:31,520\nAnd they published that metric right here.\n\n195\n00:09:32,770 --> 00:09:34,910\nLet's see if I can zoom\nin on that a little bit.\n\n196\n00:09:34,910 --> 00:09:41,190\nAnd this is the formula that's used\nto calculate out the EIGRP metric.\n\n197\n00:09:41,190 --> 00:09:45,560\nAnd you'll see bandwidth, load,\ndelay, reliability, right?\n\n198\n00:09:45,560 --> 00:09:46,690\nThere's the four that I talked about.\n\n199\n00:09:46,690 --> 00:09:48,950\nMTU is not included, right?\n\n200\n00:09:48,950 --> 00:09:50,260\nSo MTU we just throw out.\n\n201\n00:09:50,260 --> 00:09:52,960\nAnd then there's these K values.\n\n202\n00:09:52,960 --> 00:09:56,210\nK1, K2, K3, K4, K5.\nThese are the variables that we\n\n203\n00:09:56,210 --> 00:09:59,030\ncan use to manipulate EIGRP.\n\n204\n00:09:59,030 --> 00:10:03,270\nAnd K1 and K3 by default those are one.\n\n205\n00:10:03,270 --> 00:10:04,310\nThose are turned on.\n\n206\n00:10:04,310 --> 00:10:07,960\nAnd that's what's gonna make bandwidth and\ndelay actually do something.\n\n207\n00:10:07,960 --> 00:10:11,420\nBut the other ones, K2, K4,\nand K5, they're all zeroes.\n\n208\n00:10:11,420 --> 00:10:14,490\nAnd it's the zeroes that make\nreliability get cancelled out,\n\n209\n00:10:14,490 --> 00:10:19,400\nload gets cancelled out, and\nyou're left with just bandwidth and delay.\n\n210\n00:10:19,400 --> 00:10:21,280\nSo that's what those K values do.\n\n211\n00:10:21,280 --> 00:10:24,090\nAnd if you wanna manipulate\nEIGRP's performance,\n\n212\n00:10:24,090 --> 00:10:25,390\nthat's what you're manipulating.\n\n213\n00:10:25,390 --> 00:10:28,060\nYou're changing these K values, all right?\n\n214\n00:10:28,060 --> 00:10:30,280\nTo kinda square that away and\nget these set so\n\n215\n00:10:30,280 --> 00:10:33,840\nthat is actually takes those\nother metrics into account.\n\n216\n00:10:33,840 --> 00:10:36,930\nAgain, if you do that,\nyou've gotta change it globally.\n\n217\n00:10:36,930 --> 00:10:38,230\nIf you don't,\n\n218\n00:10:38,230 --> 00:10:42,160\nyou're gonna bump into issues where your\nrouters are not making the same decisions.\n\n219\n00:10:42,160 --> 00:10:45,570\nAnd it becomes very difficult\nto get a converged network,\n\n220\n00:10:45,570 --> 00:10:47,650\nwhere every router knows all\nthe routes the other routers know.\n\n221\n00:10:49,320 --> 00:10:52,240\nAll right, so\nthose are routing protocol metrics.\n\n222\n00:10:53,440 --> 00:10:56,520\nWith static routes we really\ndon't have much there.\n\n223\n00:10:56,520 --> 00:10:58,920\nYou manually set a metric and\nyou have to do that anyway,\n\n224\n00:10:58,920 --> 00:11:00,330\nthere is no dynamic metric.\n\n225\n00:11:00,330 --> 00:11:04,040\nSo I don't really count that one as a\nwidespread change cuz a static route just\n\n226\n00:11:04,040 --> 00:11:05,790\naffects that one router.\n\n227\n00:11:05,790 --> 00:11:10,740\nBut a static route could override the\ndecision of a dynamic routing protocol,\n\n228\n00:11:10,740 --> 00:11:12,720\nand that's something we\nhave to keep in mind too.\n\n229\n00:11:12,720 --> 00:11:14,850\nWhen you put a static route in,\n\n230\n00:11:14,850 --> 00:11:18,540\nyou're saying you know better than\nthe dynamic routing protocol.\n\n231\n00:11:18,540 --> 00:11:21,270\nAnd so now, even though the dynamic\nrouting protocol might know a better\n\n232\n00:11:21,270 --> 00:11:23,950\nchoice, it's gonna use\nwhat you told it and\n\n233\n00:11:23,950 --> 00:11:26,260\nthat means it may send data\nin the wrong direction.\n\n234\n00:11:26,260 --> 00:11:29,100\nIt may send data down a dead\nend because the static\n\n235\n00:11:29,100 --> 00:11:31,688\nroute doesn't do detection by default.\n\n236\n00:11:31,688 --> 00:11:33,340\nIt just does interface monitoring,\n\n237\n00:11:33,340 --> 00:11:37,190\nit doesn't actually monitor an endpoint\nunless you go in and set that up.\n\n238\n00:11:37,190 --> 00:11:41,100\n>> Sometimes we run into this issue when\nwe think that something is going wrong,\n\n239\n00:11:41,100 --> 00:11:43,810\nwe say lets just send a static\nroute just to test and\n\n240\n00:11:43,810 --> 00:11:46,930\nmake sure that everything is functioning\n>> We go ahead and\n\n241\n00:11:46,930 --> 00:11:49,420\nset that static route in and\nstart taking that route.\n\n242\n00:11:49,420 --> 00:11:53,380\nThen we go, okay, everything looks like\nit's fine, and so we forget about it.\n\n243\n00:11:53,380 --> 00:11:56,480\nThen later on we start to\nwonder why are we still\n\n244\n00:11:56,480 --> 00:11:59,610\ngoing this way instead of using\nthe dynamic routing protocol.\n\n245\n00:11:59,610 --> 00:12:01,700\nA lot of times it's just because\n\n246\n00:12:02,930 --> 00:12:05,410\nof forgotten configurations\nthat may be there.\n\n247\n00:12:05,410 --> 00:12:10,210\nOr just a bad typo that actually ends\nup sending data into a place of,\n\n248\n00:12:10,210 --> 00:12:11,530\nit doesn't go anywhere.\n\n249\n00:12:11,530 --> 00:12:12,680\nSo, going ahead and\n\n250\n00:12:12,680 --> 00:12:15,780\nchecking that is actually part of\nsomething that we also have to realize.\n\n251\n00:12:15,780 --> 00:12:18,420\nWe have static routes along the path.\n\n252\n00:12:18,420 --> 00:12:21,280\nWe may have to again go back in and\nfind all the static routes and\n\n253\n00:12:21,280 --> 00:12:24,070\neither remove them or\nchange them the way you want to.\n\n254\n00:12:24,070 --> 00:12:28,800\nBut why in the world do the static\nroutes end up really manipulating us so\n\n255\n00:12:28,800 --> 00:12:31,310\nbadly and overriding those protocols?\n\n256\n00:12:31,310 --> 00:12:34,560\nIt's because of that other thing\nthat we can also change to, and\n\n257\n00:12:34,560 --> 00:12:37,970\neven though we don't like to it might be\nthat administrative distance, right Don?\n\n258\n00:12:37,970 --> 00:12:39,590\n>> Yeah, now administrative distance,\n\n259\n00:12:39,590 --> 00:12:42,880\nthat's how we tell the router\nwhich protocol to prefer.\n\n260\n00:12:42,880 --> 00:12:47,870\nIf we learn the same route from OSPF and\nEIGRP, which one do we prefer?\n\n261\n00:12:47,870 --> 00:12:48,640\n>> Right.\n\n262\n00:12:48,640 --> 00:12:51,795\n>> And\nCisco has kind of preset this up for us.\n\n263\n00:12:51,795 --> 00:12:52,495\n>> [LAUGH]\n>> Right?\n\n264\n00:12:52,495 --> 00:12:53,335\nSo they've got some default\n\n265\n00:12:53,335 --> 00:12:55,780\nvalues in place and\nall of your routers are using that.\n\n266\n00:12:55,780 --> 00:12:59,610\nBut when you're doing something like\na migration, when you're running an old\n\n267\n00:12:59,610 --> 00:13:03,160\nprotocol and a new protocol, and\nyou're switching between them.\n\n268\n00:13:03,160 --> 00:13:06,770\nYou might want to manipulate that to have\nthe router switch to your new protocol,\n\n269\n00:13:06,770 --> 00:13:08,640\nprefer that one instead.\n\n270\n00:13:08,640 --> 00:13:10,120\nAnd as you go to make that change,\n\n271\n00:13:10,120 --> 00:13:13,330\nyou're gonna have different routers\nmaking different decisions,\n\n272\n00:13:13,330 --> 00:13:16,000\nusing different routing protocols for\nmaking their decisions.\n\n273\n00:13:16,000 --> 00:13:17,380\nAnd that can really wreak some havoc.\n\n274\n00:13:17,380 --> 00:13:21,680\nWith most of the modern protocols,\nif you're running EIGRP or\n\n275\n00:13:21,680 --> 00:13:24,460\nOSPF, you're normally safe.\n\n276\n00:13:24,460 --> 00:13:29,170\nBut if you start factoring in\nother protocols like RIFT or IGRP\n\n277\n00:13:29,170 --> 00:13:33,000\nsome of the older stuff, you can really\nrun into some problems when you start\n\n278\n00:13:33,000 --> 00:13:36,440\nmanipulating your administrative distance\nbecause you might have some protocols that\n\n279\n00:13:36,440 --> 00:13:40,180\nare respecting classful boundaries and\nother protocols that aren't.\n\n280\n00:13:40,180 --> 00:13:43,630\nOr even with EIGRP and\nOSPF you might have where EIGRP\n\n281\n00:13:43,630 --> 00:13:47,720\ndoes automatic route summarization and\nOSPF doesn't.\n\n282\n00:13:47,720 --> 00:13:52,270\nSo if you prefer EIGRP by default,\nwhich is the default, and\n\n283\n00:13:52,270 --> 00:13:56,760\nyou override that to prefer OSPF\nnow your summarizations go away and\n\n284\n00:13:56,760 --> 00:13:59,840\nyour routing tables change and\nyou get more information that's in there.\n\n285\n00:13:59,840 --> 00:14:02,630\nAnd that can have lasting effects, right?\n\n286\n00:14:02,630 --> 00:14:05,160\nYour database starts\nto grow because you're\n\n287\n00:14:05,160 --> 00:14:08,090\npushing more link states out\nsince the summaries are gone.\n\n288\n00:14:08,090 --> 00:14:12,040\nSo we have to understand that, and\nagain that's another global type change.\n\n289\n00:14:12,040 --> 00:14:13,280\nWhen you make the change in one place,\n\n290\n00:14:13,280 --> 00:14:18,050\nit spreads, that damage really starts\nto spread throughout the environment.\n\n291\n00:14:18,050 --> 00:14:22,080\nSo I've got Cisco's documentation pulled\nup here for the administrative distance.\n\n292\n00:14:22,080 --> 00:14:26,490\nAnd in this CCNA level they really just\nhave you memorize five of them I think.\n\n293\n00:14:26,490 --> 00:14:29,780\nBut there's a full table for\nadministrative distance that you'll\n\n294\n00:14:29,780 --> 00:14:33,390\nsee that covers a lot of\ndifferent types of routes.\n\n295\n00:14:33,390 --> 00:14:36,820\nAnd they purposely don't get into\nthis in the CCNA level cuz it's just\n\n296\n00:14:36,820 --> 00:14:38,230\nmore than you need to know.\n\n297\n00:14:38,230 --> 00:14:43,640\nBut at this level, the CCNP level, it is\na good idea to be aware of all of these.\n\n298\n00:14:43,640 --> 00:14:44,250\nAll right.\n\n299\n00:14:44,250 --> 00:14:48,150\nNow when we look at it,\nthese are Cisco's recommendations.\n\n300\n00:14:48,150 --> 00:14:49,710\nWhere do they get these numbers from?\n\n301\n00:14:49,710 --> 00:14:50,375\nThey made them up.\n\n302\n00:14:50,375 --> 00:14:51,190\n>> [LAUGH]\n>> Right?\n\n303\n00:14:51,190 --> 00:14:53,300\nAdmistrative distance is a Cisco thing.\n\n304\n00:14:53,300 --> 00:14:57,060\nIt's not an IETF standard, or whatever.\n\n305\n00:14:57,060 --> 00:14:59,490\nIt's just Cisco thing, they decided for\n\n306\n00:14:59,490 --> 00:15:02,260\nCisco routers this is\nthe order we’ll prefer things.\n\n307\n00:15:02,260 --> 00:15:05,290\nNow if you’re only running one routing\nprotocol, then this doesn’t matter.\n\n308\n00:15:05,290 --> 00:15:08,410\nYou don’t care what the administrative\ndistance is there’s only one to pick from.\n\n309\n00:15:08,410 --> 00:15:12,610\nBut if you’re mixing it up, if you’ve got\na couple of different routing protocols in\n\n310\n00:15:12,610 --> 00:15:16,070\nplace, then this really becomes important.\n\n311\n00:15:16,070 --> 00:15:19,480\nAdministrative distance is\na number between zero and 255,\n\n312\n00:15:19,480 --> 00:15:22,370\nwhere zero is the absolute best.\n\n313\n00:15:22,370 --> 00:15:24,510\nThat's the closest route to us.\n\n314\n00:15:24,510 --> 00:15:25,530\nWe're measuring distance.\n\n315\n00:15:25,530 --> 00:15:27,270\nZero.\nHow far away is it?\n\n316\n00:15:27,270 --> 00:15:27,970\nZero.\n>> That's right.\n\n317\n00:15:27,970 --> 00:15:29,100\nYep.\n>> Right.\n\n318\n00:15:29,100 --> 00:15:32,090\nThat's the best and\nthat's a connected interface.\n\n319\n00:15:32,090 --> 00:15:33,870\nSomething that we're\nactually plugged into.\n\n320\n00:15:33,870 --> 00:15:36,829\nCan't get better than a direct\nconnection to a network.\n\n321\n00:15:38,810 --> 00:15:43,970\n255 on the other hand, the highest\nnumber way down here, that's the worst.\n\n322\n00:15:43,970 --> 00:15:45,540\nThat's the maximum we can get to.\n\n323\n00:15:45,540 --> 00:15:48,560\nThe administrative distance is\nstored in a eight bit number, so\n\n324\n00:15:48,560 --> 00:15:51,440\nwe've got zero through 255,\nthat's where that comes from.\n\n325\n00:15:51,440 --> 00:15:53,225\nAnd you'll see that 255 is unknown.\n\n326\n00:15:53,225 --> 00:15:56,280\nAll right,\nif we have a route that we've learned and\n\n327\n00:15:56,280 --> 00:16:01,294\nthe administrator distance is 255, that\nmeans we don't know where it came from.\n\n328\n00:16:01,294 --> 00:16:05,750\nWe got this route, it came from\nsomewhere but I don't know where.\n\n329\n00:16:05,750 --> 00:16:08,140\nThat shouldn't happen,\n\n330\n00:16:08,140 --> 00:16:11,520\nyou shouldn't ever have a route where\nyou don't know what the source is.\n\n331\n00:16:11,520 --> 00:16:14,520\nNotice this little note at\nthe bottom that says if you get one,\n\n332\n00:16:14,520 --> 00:16:18,020\nthe route may show up in the routing\nprotocols or whatever, but\n\n333\n00:16:18,020 --> 00:16:19,860\nit will not be installed\nin the routing table.\n\n334\n00:16:19,860 --> 00:16:23,330\nA route with an administrative\ndistances 255 will not be installed\n\n335\n00:16:23,330 --> 00:16:24,000\nin the routing table.\n\n336\n00:16:25,890 --> 00:16:31,510\nAfter that everything in between zero and\n255, those are regular protocols.\n\n337\n00:16:31,510 --> 00:16:35,670\nAnd Cisco orders them\nbased on their accuracy,\n\n338\n00:16:35,670 --> 00:16:39,210\nwhich ones they think will\nbe the most accurate.\n\n339\n00:16:39,210 --> 00:16:43,530\nNow you could argue against that because\nwhat's the second one, a static route.\n\n340\n00:16:43,530 --> 00:16:45,460\nA static route has a value of one.\n\n341\n00:16:45,460 --> 00:16:49,260\nAfter a connected interface,\nthat's the next best thing, static route.\n\n342\n00:16:49,260 --> 00:16:54,440\nNow a static route is when we override\nthe router and well, people make mistakes.\n\n343\n00:16:54,440 --> 00:16:56,140\nSo it might not be the most accurate.\n\n344\n00:16:56,140 --> 00:16:57,770\nBut remember what a static\nroute does; it's you\n\n345\n00:16:57,770 --> 00:16:59,280\nsaying you know better than the router.\n\n346\n00:16:59,280 --> 00:17:02,050\nYou know something the router doesn't and\nso you're helping it out.\n\n347\n00:17:02,050 --> 00:17:03,870\nAnd so the router will always honor that.\n\n348\n00:17:03,870 --> 00:17:05,460\nIt will do what you tell it.\n\n349\n00:17:05,460 --> 00:17:06,610\nThat's the purpose of the device.\n\n350\n00:17:07,820 --> 00:17:10,540\nAfter that though, things change, right?\n\n351\n00:17:10,540 --> 00:17:12,570\nAfter that we start to see EIGRP.\n\n352\n00:17:12,570 --> 00:17:16,112\nNow notice how EIGRP is listed\nmore than once, all right?\n\n353\n00:17:16,112 --> 00:17:20,360\nIn CCNE, you got a real\nbrief introduction to EIGRP,\n\n354\n00:17:20,360 --> 00:17:23,410\nlater one we're going to do a series of\nshows where we go super in depth, and\n\n355\n00:17:23,410 --> 00:17:27,190\nyou're gonna learn about several different\ntypes of routes, inside the EIGRP.\n\n356\n00:17:27,190 --> 00:17:31,740\nAnd several different types of routes\ninside of OSPF as our networks get bigger.\n\n357\n00:17:31,740 --> 00:17:37,400\nEIGRP is listed more than once,\nyou've got EIGRP summary routes and\n\n358\n00:17:37,400 --> 00:17:41,450\ndown here you've got EIGRP internal,\nright,\n\n359\n00:17:41,450 --> 00:17:46,475\nby itself and then way down\nhere you've got EIGRP external.\n\n360\n00:17:46,475 --> 00:17:49,995\nAnd what these mean are, well summary\nroutes, those are the summaries.\n\n361\n00:17:49,995 --> 00:17:52,825\nIt wants to make sure that\nthe summaries take precedence\n\n362\n00:17:52,825 --> 00:17:54,245\nover the individual routes, right?\n\n363\n00:17:54,245 --> 00:17:56,255\nThat way we don't have a bunch\nof junk in our rounding tables.\n\n364\n00:17:56,255 --> 00:17:59,735\nSo they gave that\nan administrative distance of 5.\n\n365\n00:17:59,735 --> 00:18:03,285\nInternal EIGRP itself,\nthey gave 90, all right?\n\n366\n00:18:03,285 --> 00:18:04,035\nSo it's 90.\n\n367\n00:18:04,035 --> 00:18:06,425\nAnd then external EIGRP,\n\n368\n00:18:06,425 --> 00:18:11,090\nthese are routes that didn't originate\nfrom EIGRP but we're redistributed.\n\n369\n00:18:11,090 --> 00:18:14,250\nThey were brought in to\nEIGRP from another protocol.\n\n370\n00:18:14,250 --> 00:18:18,510\nThat means their source was another\nprotocol, we've translated them.\n\n371\n00:18:18,510 --> 00:18:24,090\nAnd when you translate a route like that,\nyou usually lose some metrics.\n\n372\n00:18:24,090 --> 00:18:28,980\nThink of it this way,\nif I bring a route from RIP into EIGRP.\n\n373\n00:18:28,980 --> 00:18:30,780\nWhat is RIPs metric?\n\n374\n00:18:30,780 --> 00:18:31,860\nHop count.\n\n375\n00:18:31,860 --> 00:18:34,000\nDoes EIGRP use hop count as a metric?\n\n376\n00:18:35,010 --> 00:18:36,340\nNo.\nSo the metric for\n\n377\n00:18:36,340 --> 00:18:38,680\nthat route is worthless to me\nwhen I bring it into EIGRP, so\n\n378\n00:18:38,680 --> 00:18:40,050\nwe have to make something up.\n\n379\n00:18:40,050 --> 00:18:44,112\nAnd so that's why it moves it way\ndown here to the bottom, 170.\n\n380\n00:18:44,112 --> 00:18:49,490\nBecause it knows whatever metric we attach\nto that is something we made up, right?\n\n381\n00:18:49,490 --> 00:18:51,770\nIt may be very,\nyou may have broken out a calculator and\n\n382\n00:18:51,770 --> 00:18:54,720\nfigured out exactly what it need to be for\nthat link, but it doesn't matter,\n\n383\n00:18:54,720 --> 00:18:56,870\nat some point you effectively made it up.\n\n384\n00:18:58,200 --> 00:19:02,780\nYou see the same thing with OSPF, OSPF\nhas an administrative distance of 110,\n\n385\n00:19:02,780 --> 00:19:07,600\nbut actually you know what\nthey're not listing, interesting.\n\n386\n00:19:07,600 --> 00:19:10,690\nThere are some alternative ones for\nOSPF they're not listing on this page.\n\n387\n00:19:12,340 --> 00:19:15,660\nWe'll see those in the OSPF show but there\nare a few other ones that we'll see with\n\n388\n00:19:15,660 --> 00:19:19,240\ninner area and some of those\nother routes that can creep up\n\n389\n00:19:19,240 --> 00:19:21,880\nfrom there with the external one and\nexternal two [INAUDIBLE].\n\n390\n00:19:21,880 --> 00:19:25,360\nSome of the other ones\nthat you'll see are BGP,\n\n391\n00:19:25,360 --> 00:19:31,040\nBorder Gimick Protocol,\nyou'll find it way down here for internal.\n\n392\n00:19:31,040 --> 00:19:34,560\nInternal BGP is 200 versus\nexternal BGP that's 20.\n\n393\n00:19:34,560 --> 00:19:37,830\nThat's the opposite of EIGRP.\n\n394\n00:19:37,830 --> 00:19:39,580\nWhy would we do something like that?\n\n395\n00:19:39,580 --> 00:19:43,320\nWhy would we prefer BGP\nroutes from some other source\n\n396\n00:19:43,320 --> 00:19:46,400\nthan the BGP routes that\nwe generate ourself.\n\n397\n00:19:46,400 --> 00:19:51,250\nThe reason is BGP is\nan exterior gateway protocol.\n\n398\n00:19:51,250 --> 00:19:54,460\nIt's not designed to route\npeople on the internal network.\n\n399\n00:19:54,460 --> 00:19:58,280\nYou should be using a interior gateway\nprotocol inside of your network.\n\n400\n00:19:58,280 --> 00:20:01,140\nYou should be using OSPF for\nEIGRP your RIP or\n\n401\n00:20:01,140 --> 00:20:06,150\nwhatever, and then take those routes and\nredistribute them into to BGP.\n\n402\n00:20:06,150 --> 00:20:11,960\nSo those will be shown as exterior as\nthese guys right here, external, right?\n\n403\n00:20:11,960 --> 00:20:16,160\nAnd they're coming from IGPs that\nare very trustworthy, so we prefer those.\n\n404\n00:20:16,160 --> 00:20:20,060\nBut, if we've created our\nown internal BGP route,\n\n405\n00:20:20,060 --> 00:20:23,960\nit's not very reliable because BGP,\nwhat's its metric.\n\n406\n00:20:23,960 --> 00:20:25,180\nAutonomous system numbers.\n\n407\n00:20:25,180 --> 00:20:27,790\nIt uses and AS path as a metric.\n\n408\n00:20:27,790 --> 00:20:29,140\nIt doesn't look at bandwidth.\n\n409\n00:20:29,140 --> 00:20:30,450\nIt doesn't look at\n>> Mm-hm.\n\n410\n00:20:30,450 --> 00:20:31,880\n>> You know, latency, delay.\n\n411\n00:20:31,880 --> 00:20:34,650\nIt doesn't look at anything,\njust the autonomous system path.\n\n412\n00:20:34,650 --> 00:20:37,770\nSo, those routes that we get are not very\n\n413\n00:20:37,770 --> 00:20:38,310\noptimized\n>> Huh.\n\n414\n00:20:38,310 --> 00:20:38,950\n>> Or efficient.\n\n415\n00:20:38,950 --> 00:20:41,870\nSo the router's going to prefer\nthose internal routing profiles.\n\n416\n00:20:44,075 --> 00:20:45,265\nLet's see, what have I skipped over?\n\n417\n00:20:45,265 --> 00:20:47,505\nSome of the older junk, like IGRP.\n\n418\n00:20:47,505 --> 00:20:50,748\nThat's the old interior gateway\nrouting protocol from Cisco.\n\n419\n00:20:50,748 --> 00:20:54,155\nThat is so boy,\nyou want to stay away from that one.\n\n420\n00:20:54,155 --> 00:20:55,422\nWe've got RIP.\n\n421\n00:20:55,422 --> 00:20:57,122\nRouting Information Protocol.\n\n422\n00:20:57,122 --> 00:21:00,415\nWe also have ISIS, Intermediate System\nto Intermediate System.\n\n423\n00:21:00,415 --> 00:21:05,042\nThat one, people look at it,\nand they say, man, that's old.\n\n424\n00:21:05,042 --> 00:21:06,292\nWhy do we even have to have that?\n\n425\n00:21:06,292 --> 00:21:09,912\nIt was on my CCMP exam when I originally\ndid it, and then it went away.\n\n426\n00:21:09,912 --> 00:21:11,672\nAnd then it came back again.\n\n427\n00:21:11,672 --> 00:21:15,052\nSo, the first time I had to renew my CCMP,\nit was gone.\n\n428\n00:21:15,052 --> 00:21:18,950\nAnd then the second time I renewed\nmy CCMP, it was back again.\n\n429\n00:21:18,950 --> 00:21:21,210\nAnd I was like what the heck\nwhy are you bringing this back,\n\n430\n00:21:21,210 --> 00:21:25,750\nand what happened was when IPv6 was\nreally starting to gain popularity\n\n431\n00:21:25,750 --> 00:21:27,585\nthe other routing protocols\nhadn't been updated yet.\n\n432\n00:21:27,585 --> 00:21:30,640\nISIS can route anything.\n\n433\n00:21:30,640 --> 00:21:32,540\nIt doesn't care what the protocol is.\n\n434\n00:21:32,540 --> 00:21:33,640\nSo they brought it back for\n\n435\n00:21:33,640 --> 00:21:36,920\na little while to be able to handle that\nuntil the other protocols caught up.\n\n436\n00:21:36,920 --> 00:21:39,890\nThe other protocols call it up,\nand now ISIS kind of gone again.\n\n437\n00:21:41,750 --> 00:21:44,210\nAnd then you have ODR, on demand routing.\n\n438\n00:21:44,210 --> 00:21:45,965\nThat's kind of one of my favorites.\n\n439\n00:21:45,965 --> 00:21:48,260\n>> [LAUGH]\n>> I usually disable it on routers.\n\n440\n00:21:48,260 --> 00:21:51,540\nBut that's how routers figure out their\nown routes by looking at our packets going\n\n441\n00:21:51,540 --> 00:21:55,770\nacross the network and so you can kind of\nlearn routes from each other that way.\n\n442\n00:21:55,770 --> 00:22:00,410\nIt's not truly a routing protocol,\nbut more like a discovery mechanism.\n\n443\n00:22:00,410 --> 00:22:04,070\nI guess you could argue that that's\nwhat most dynamic routing protocols are.\n\n444\n00:22:04,070 --> 00:22:05,550\nBut ODR is down there.\n\n445\n00:22:05,550 --> 00:22:08,623\nSo this is the order of preference,\nall right?\n\n446\n00:22:08,623 --> 00:22:12,540\nNow, if we're gonna be migrating networks,\nright?\n\n447\n00:22:12,540 --> 00:22:16,788\nIf we're running RIP right now,\nand we decide to go to EIGRP,\n\n448\n00:22:16,788 --> 00:22:19,370\nthis works out really well for us.\n\n449\n00:22:19,370 --> 00:22:21,570\nAs we start to roll out EIGRP\nour routers just prefer it.\n\n450\n00:22:22,880 --> 00:22:25,920\nBut what if we were running EIGRP and\n\n451\n00:22:25,920 --> 00:22:29,030\nnow we have a need for\nthird party routers that can't run EIGRP.\n\n452\n00:22:29,030 --> 00:22:31,810\nSo we've gotta migrate from EIGRP to OSPF.\n\n453\n00:22:31,810 --> 00:22:35,130\nWell as we start deploying OSPF,\nit's not gonna work,\n\n454\n00:22:35,130 --> 00:22:38,170\nbecause the router is gonna prefer EIGRP.\n\n455\n00:22:38,170 --> 00:22:41,080\nThe EIGRP routes are gonna\nmake it in the routing table.\n\n456\n00:22:41,080 --> 00:22:44,580\nAnd the OSPF routes won't, because their\nadministrative distance is higher.\n\n457\n00:22:44,580 --> 00:22:48,170\nSo as we do that migration we might want\nto manipulate the administrative distance\n\n458\n00:22:48,170 --> 00:22:51,370\nto make our routers\nprefer OSPF over EIGRP.\n\n459\n00:22:52,960 --> 00:22:57,570\nBut when you start making that change,\nit's done router by router.\n\n460\n00:22:57,570 --> 00:23:00,840\nSo if I change this router and\nI change this one, and\n\n461\n00:23:00,840 --> 00:23:06,150\nI change this one, well this guy down\nhere might still be preferring EIGRP.\n\n462\n00:23:06,150 --> 00:23:09,590\nBut now,\nroutes up here are coming out of OSPF and\n\n463\n00:23:09,590 --> 00:23:14,520\nthey're not being sent into EIGRP so\nnow I'm not learning some of those routes.\n\n464\n00:23:14,520 --> 00:23:18,300\nSo when we do a balancing act like that,\nit gets really challenging.\n\n465\n00:23:18,300 --> 00:23:21,630\nNow you've got to start making sure you\neither do redistribution or plan for\n\n466\n00:23:21,630 --> 00:23:24,580\ndowntime or\nwhatever to get that kind of balance.\n\n467\n00:23:24,580 --> 00:23:28,746\nAnd we'll talk about migrations in the\nnext little segment, but that's what we\n\n468\n00:23:28,746 --> 00:23:33,158\nhave to remember as we start to manipulate\nadministrative distance, when one router\n\n469\n00:23:33,158 --> 00:23:37,326\nprefers one protocol over another it's\neffectively using different metrics,\n\n470\n00:23:37,326 --> 00:23:41,064\ndifferent logic for making its path\nchoices and you can end up with some of\n\n471\n00:23:41,064 --> 00:23:44,040\nthe same problems as adjusting\nthe metrics themselves.\n\n472\n00:23:45,581 --> 00:23:49,774\nAll right, probably a little more in depth\nthan Cisco actually wanted us to go on\n\n473\n00:23:49,774 --> 00:23:50,726\nthis objective.\n\n474\n00:23:50,726 --> 00:23:55,469\nBut, the key thing to remember here is,\nwhen you make changes like\n\n475\n00:23:55,469 --> 00:24:00,398\nthis you always, always, always,\nplan, test, deploy, right?\n\n476\n00:24:00,398 --> 00:24:01,374\nPlan, make a map,\n\n477\n00:24:01,374 --> 00:24:05,112\nfigure out the change you want,\nfigure out where the changes have to be.\n\n478\n00:24:05,112 --> 00:24:06,121\nTest.\n\n479\n00:24:06,121 --> 00:24:09,952\nBring up a virtual environment or bring up\nsome physical equipment in a closet and\n\n480\n00:24:09,952 --> 00:24:10,810\njust test it out.\n\n481\n00:24:10,810 --> 00:24:12,150\nSee how it works.\n\n482\n00:24:12,150 --> 00:24:15,190\nAnd then deploy,\nonly after you've ensured that it works.\n\n483\n00:24:15,190 --> 00:24:18,405\nBecause if you create down time,\na t the router level like this,\n\n484\n00:24:18,405 --> 00:24:21,485\nyou can have hundreds, thousands of\nemployees who are not able to work.\n\n485\n00:24:22,705 --> 00:24:24,985\nAll right so that's pretty much it.\n\n486\n00:24:24,985 --> 00:24:28,635\nThe main problems that we generate\nare routing loops, or sub-optimal routing,\n\n487\n00:24:28,635 --> 00:24:31,525\nright, inefficient or\nbad choices on our routers.\n\n488\n00:24:31,525 --> 00:24:33,865\nBut as long as we plan for\nthat, we'll usually be okay.\n\n489\n00:24:35,115 --> 00:24:36,065\nAll right we've got a bit more.\n\n490\n00:24:36,065 --> 00:24:40,205\nWe need to talk about migrating to IPv6\nand migrating between routing protocols.\n\n491\n00:24:40,205 --> 00:24:42,130\nSo the other two pieces of this objective.\n\n492\n00:24:42,130 --> 00:24:44,380\nBut let's stop and\ntake a break and when we get back,\n\n493\n00:24:44,380 --> 00:24:45,770\nwe'll get a chance to see that.\n\n494\n00:24:45,770 --> 00:24:47,950\nSo, stay tuned, we'll be back after this.\n\n495\n00:24:47,950 --> 00:24:51,732\n[SOUND] All right,\n\n496\n00:24:51,732 --> 00:24:57,283\nwelcome back everybody.\n\n497\n00:24:57,283 --> 00:25:00,941\nSo, we talked a little bit about how\nchanges can spread through our network and\n\n498\n00:25:00,941 --> 00:25:01,783\ncause problems.\n\n499\n00:25:01,783 --> 00:25:06,170\nAnd we just need to plan, test,\ndeploy, pretty straight forward.\n\n500\n00:25:06,170 --> 00:25:08,910\nBut there are some changes\nthat we need to make,\n\n501\n00:25:08,910 --> 00:25:11,220\nthat we need to have\nspread across our network.\n\n502\n00:25:11,220 --> 00:25:14,880\nAnd those usually take\nthe form of migrations, right?\n\n503\n00:25:14,880 --> 00:25:17,160\nWe're migrating from one\nprotocol to another.\n\n504\n00:25:17,160 --> 00:25:18,935\nAnd there's a great example right now.\n\n505\n00:25:18,935 --> 00:25:20,890\n>> [LAUGH]\n>> With IPv4 versus IPv6, right?\n\n506\n00:25:22,140 --> 00:25:22,700\n>> Yep.\n\n507\n00:25:22,700 --> 00:25:26,050\n>> Ronnie you want to give everybody\njust a quick 30 second overview of\n\n508\n00:25:26,050 --> 00:25:28,430\nwhy we would want to\nmigrate from IPv4 to IPv6.\n\n509\n00:25:28,430 --> 00:25:31,110\n>> Sure, yeah.\nThe reason why we're migrating from IPv4\n\n510\n00:25:31,110 --> 00:25:33,170\nto IPv6 is really simple.\n\n511\n00:25:33,170 --> 00:25:37,610\nWe are in this area where we're starting\nto run out of IP addresses in IPv4\n\n512\n00:25:37,610 --> 00:25:38,760\non the internet.\n\n513\n00:25:38,760 --> 00:25:43,100\nActually I think we're officially out,\nand so, we need a new protocol.\n\n514\n00:25:43,100 --> 00:25:46,720\nAnd since we're already doing it out\nthere, we might as well also follow suit\n\n515\n00:25:46,720 --> 00:25:51,090\ninside of our LANs, as well as when we're\nconnecting to other branch offices, too.\n\n516\n00:25:51,090 --> 00:25:55,262\nSo, we need to go ahead and begin to think\nabout the change, and the migration, and\n\n517\n00:25:55,262 --> 00:25:58,917\nthink about everything else that we\nneed to do, to get it switched over.\n\n518\n00:25:58,917 --> 00:26:02,459\n>> And, of course, with Cisco being one\nof the leading network companies in\n\n519\n00:26:02,459 --> 00:26:05,730\nthe world, they're on the cutting\nedge of IPV6 rollouts.\n\n520\n00:26:05,730 --> 00:26:10,070\nAnd so all Cisco equipment\nmanufactured since, I think,\n\n521\n00:26:10,070 --> 00:26:11,080\nsince 2005-\n>> Yeah.\n\n522\n00:26:11,080 --> 00:26:13,680\n>> Has IPv6 support native in it.\n\n523\n00:26:13,680 --> 00:26:18,225\nSo if you wanna migrate to IPv6 it's\npretty easy, but there's a caveat.\n\n524\n00:26:18,225 --> 00:26:20,375\n>> [LAUGH]\n>> Most other people haven't done it yet.\n\n525\n00:26:20,375 --> 00:26:22,920\n>> Right.\n>> So if you just pull the switch and jump\n\n526\n00:26:22,920 --> 00:26:27,490\nover to IPv6 today, you're gonna be on\na little island all by yourself, because\n\n527\n00:26:27,490 --> 00:26:31,410\nother businesses out there, other ISPs,\nthey may not have switched to it yet.\n\n528\n00:26:31,410 --> 00:26:33,090\nOur ISP is a great example.\n\n529\n00:26:33,090 --> 00:26:34,310\nThey don't support IPv6 yet.\n\n530\n00:26:34,310 --> 00:26:37,060\nSo if we were to cut over to it here\nin our studio, we'd be out of luck.\n\n531\n00:26:37,060 --> 00:26:37,560\n>> Yeah.\n\n532\n00:26:37,560 --> 00:26:38,470\n>> All right.\n\n533\n00:26:38,470 --> 00:26:41,880\nBut if you're fortunate enough to be in\none of those areas where you can do it, or\n\n534\n00:26:41,880 --> 00:26:43,460\nif you're just getting ready,\n\n535\n00:26:43,460 --> 00:26:48,890\nyou can deploy IPv6 side by side with\nIPv4, so they can coexist together.\n\n536\n00:26:50,420 --> 00:26:53,500\nThat configuration is\nwhats called dual stack.\n\n537\n00:26:53,500 --> 00:26:57,830\nAnd every Cisco router supports it,\nrunning IPv6 and IPv4 side by side.\n\n538\n00:26:57,830 --> 00:27:02,780\nAll right, so if we wanna plan a migration\nto IPv6, one of the easiest ways\n\n539\n00:27:02,780 --> 00:27:06,030\nto do it is just lay it right on\ntop of our existing network, right?\n\n540\n00:27:06,030 --> 00:27:07,750\nLet's go back to my diagram here.\n\n541\n00:27:07,750 --> 00:27:11,660\nSo assuming that we're running IPv4 on all\nthese, my network might be running great.\n\n542\n00:27:11,660 --> 00:27:14,910\nAnd then I could deploy\nIPv6 on this router.\n\n543\n00:27:14,910 --> 00:27:17,220\nIPv4 is still running doing its own thing.\n\n544\n00:27:17,220 --> 00:27:20,770\nIPv6 uses its own routing protocols,\nits own routing table, right?\n\n545\n00:27:20,770 --> 00:27:23,450\nIt's separate from IPv4,\nso you really don't\n\n546\n00:27:23,450 --> 00:27:27,500\nimpact your IPv4 infrastructure at\nall as you start to lay this on top.\n\n547\n00:27:27,500 --> 00:27:28,740\nAnd so you can go through and\n\n548\n00:27:28,740 --> 00:27:34,000\nlay your IPv6 infrastructure right on top\nof those routers, and now you've got both.\n\n549\n00:27:35,040 --> 00:27:39,920\nAnd then, when you're done and we finally\nreach that day, probably 20 years from\n\n550\n00:27:39,920 --> 00:27:42,060\nnow, when they say all right,\nthat's it, we're turning off IPv4.\n\n551\n00:27:42,060 --> 00:27:46,880\nYou can just go to your routers and\nremove IPv4, turning that off.\n\n552\n00:27:46,880 --> 00:27:48,690\nAnd now you're straight up, just IPv6.\n\n553\n00:27:48,690 --> 00:27:50,100\nAll right.\n\n554\n00:27:50,100 --> 00:27:51,520\nReally cut and dry.\n\n555\n00:27:51,520 --> 00:27:53,320\nSo what's the hard part about that?\n\n556\n00:27:53,320 --> 00:27:57,620\nWell, the hard part is the other companies\nthat aren't participating in it,\n\n557\n00:27:57,620 --> 00:27:59,950\nthe other people who aren't helping you.\n\n558\n00:27:59,950 --> 00:28:03,800\nUs, for example,\nwhere our ISP is not supporting IPv6 yet.\n\n559\n00:28:03,800 --> 00:28:04,880\nThat's gonna stop us.\n\n560\n00:28:04,880 --> 00:28:07,880\nIf we switch to an all\nIPv6 network internally,\n\n561\n00:28:07,880 --> 00:28:09,890\nhow do we get through this\nISP that doesn't support it?\n\n562\n00:28:09,890 --> 00:28:13,510\nAnd there's a sort of tunneling\ntechnology you can use for\n\n563\n00:28:13,510 --> 00:28:17,130\nthat, like 6to4 tunnels,\nTeredo tunnels, ISATAP, right?\n\n564\n00:28:17,130 --> 00:28:18,582\nThey're all terrible.\n\n565\n00:28:18,582 --> 00:28:19,094\n[LAUGH]\n>> [LAUGH]\n\n566\n00:28:19,094 --> 00:28:21,480\n>> They're all really hard to work with,\n\n567\n00:28:21,480 --> 00:28:23,060\nbut you take your IPv6 traffic and\n\n568\n00:28:23,060 --> 00:28:27,300\nyou tunnel it across an IPv4\nnetwork to get it to a destination.\n\n569\n00:28:27,300 --> 00:28:30,230\nAnd then it can explode back to\nIPv6 traffic on the other side.\n\n570\n00:28:30,230 --> 00:28:32,750\nSo you can leapfrog IPv4 networks, right?\n\n571\n00:28:34,030 --> 00:28:38,120\nSome of them like ISATAP,\nare designed to be used internally only.\n\n572\n00:28:38,120 --> 00:28:39,920\nThey don't go over the internet very well.\n\n573\n00:28:39,920 --> 00:28:42,820\nOther ones like Teredo,\nare designed to go over the internet.\n\n574\n00:28:42,820 --> 00:28:45,010\nSome of them work with NAT,\nsome of them don't.\n\n575\n00:28:45,010 --> 00:28:47,960\nSo, you'll have to pick and\nchoose the technology that's right for\n\n576\n00:28:47,960 --> 00:28:50,050\nyou based on your type of deployment.\n\n577\n00:28:50,050 --> 00:28:54,225\nNow I'll tell you guys,as someone who's\nworked with this stuff, if there's anyway\n\n578\n00:28:54,225 --> 00:28:58,130\nyou can avoid using IPv6 tunnels, you\nshould do it because they're all a pain.\n\n579\n00:28:59,520 --> 00:29:01,540\nAnd nothing against\nthe people that develop them,\n\n580\n00:29:01,540 --> 00:29:03,290\nit's a very tricky thing to develop.\n\n581\n00:29:03,290 --> 00:29:05,870\nAnd they're all designed\nto be temporary kludges,\n\n582\n00:29:05,870 --> 00:29:08,920\nsomething you throw in to get you by and\nnot to run on in production.\n\n583\n00:29:10,050 --> 00:29:12,140\nSo you might use one to get\nyourself up and connected, and\n\n584\n00:29:12,140 --> 00:29:15,020\nthen when it's ready to go,\nthen once everybody's moved over,\n\n585\n00:29:15,020 --> 00:29:17,170\nyou can remove it and\nnow it's a thing of the past.\n\n586\n00:29:17,170 --> 00:29:18,890\nYou used it temporarily.\n\n587\n00:29:18,890 --> 00:29:22,010\nBut just keep that in mind as we\nmove across an IPv6 environment.\n\n588\n00:29:22,010 --> 00:29:22,780\nWe can do dual step.\n\n589\n00:29:22,780 --> 00:29:24,240\nWe can run both.\n\n590\n00:29:24,240 --> 00:29:25,280\n>> Right.\n\n591\n00:29:25,280 --> 00:29:28,445\n>> Now what if we want to migrate from\none routing protocol to another, right?\n\n592\n00:29:28,445 --> 00:29:30,010\n>> Mm-hm.\n>> That's the last scenario they ask.\n\n593\n00:29:30,010 --> 00:29:32,910\n>> Right.\n>> Is routing protocol migration.\n\n594\n00:29:32,910 --> 00:29:36,410\nThere are many reasons why you\nmight migrate from one protocol\n\n595\n00:29:36,410 --> 00:29:37,650\nto another, all right?\n\n596\n00:29:37,650 --> 00:29:40,975\nSometimes you're just upgrading\nto a better protocol, right?\n\n597\n00:29:40,975 --> 00:29:41,830\n>> Mm-hm.\n\n598\n00:29:41,830 --> 00:29:44,810\n>> You might,\nmaybe you go to work somewhere, and\n\n599\n00:29:44,810 --> 00:29:47,880\nyou find that all of their\nequipment is running RIP.\n\n600\n00:29:49,170 --> 00:29:50,850\nRouting information protocol, RIP,\n\n601\n00:29:50,850 --> 00:29:55,640\nis perfectly good if you're not\nworried about latency for convergence.\n\n602\n00:29:55,640 --> 00:29:58,950\nIf you don't mind about slow\nfailure detection, RIP is fine.\n\n603\n00:29:58,950 --> 00:30:01,190\nBut in large networks it gets crushed.\n\n604\n00:30:01,190 --> 00:30:03,080\nSo maybe you go to work somewhere and\ntheir running RIP and\n\n605\n00:30:03,080 --> 00:30:04,620\nyou want to move them to something better.\n\n606\n00:30:04,620 --> 00:30:07,950\nOr you've been working there and\nyou used RIP because it was simple, but\n\n607\n00:30:07,950 --> 00:30:12,120\nnow your network has grown and\nyou've outgrown RIP.\n\n608\n00:30:12,120 --> 00:30:14,080\nYou've got more than 15 hops somewhere,\nand so\n\n609\n00:30:14,080 --> 00:30:16,870\nyou need to move to a protocol\nthat can handle that, right?\n\n610\n00:30:16,870 --> 00:30:18,940\nSo you need to step up to somebody better.\n\n611\n00:30:18,940 --> 00:30:20,680\nWell, how do we go about that?\n\n612\n00:30:20,680 --> 00:30:22,820\nHow do we go about a protocol\nmigration like that?\n\n613\n00:30:24,280 --> 00:30:26,360\nWell, there's two main paths, right?\n\n614\n00:30:26,360 --> 00:30:28,100\nThe first path is just like IPv6.\n\n615\n00:30:28,100 --> 00:30:34,270\nMost Cisco routers can run more than\none routing protocol at the same time.\n\n616\n00:30:34,270 --> 00:30:36,640\nSo they can go kind of dual stack.\n\n617\n00:30:36,640 --> 00:30:37,580\nIt's not necessarily dual,\n\n618\n00:30:37,580 --> 00:30:40,960\ncuz a lot of routers can run many\nrouting protocols at the same time.\n\n619\n00:30:40,960 --> 00:30:42,741\nYou might be running five or\nsix different ones.\n\n620\n00:30:42,741 --> 00:30:43,450\nAll right?\n\n621\n00:30:43,450 --> 00:30:45,115\nSo, when we go to deploy this,\n\n622\n00:30:45,115 --> 00:30:49,320\nwe can choose to run more than one\nrouting protocol at the same time.\n\n623\n00:30:49,320 --> 00:30:51,240\nYou do need to evaluate your routers.\n\n624\n00:30:51,240 --> 00:30:54,160\nIf you have like some of the 800 series\nrouters, they don't have a ton of memory.\n\n625\n00:30:54,160 --> 00:30:55,270\nThey don't have a ton of processor.\n\n626\n00:30:55,270 --> 00:30:59,870\nAnd so they don't do a good job with\nrunning more than one protocol, right?\n\n627\n00:30:59,870 --> 00:31:02,130\nBut other ones can handle it just fine,\nright?\n\n628\n00:31:02,130 --> 00:31:05,320\nAny of the four digit Cisco routers\ncan do it without a big deal.\n\n629\n00:31:05,320 --> 00:31:06,005\nThey got the memory.\n\n630\n00:31:06,005 --> 00:31:09,290\n>> [LAUGH]\n>> All right, now when we go to roll it\n\n631\n00:31:09,290 --> 00:31:12,780\nout, though, it's a little different\nthan dual stack with IPv4 and v6.\n\n632\n00:31:12,780 --> 00:31:14,860\nWith IPv4 and v6,\nthat's two separate networks.\n\n633\n00:31:14,860 --> 00:31:18,310\nWhen you're running two routing protocols,\nthat's the same network.\n\n634\n00:31:18,310 --> 00:31:21,510\nIt's the same IPv4 or IPv6 network, and\n\n635\n00:31:21,510 --> 00:31:25,110\nyour administrative distance is\ngonna kick in to override that.\n\n636\n00:31:25,110 --> 00:31:28,760\nSo if you're running RIP, and\nyou start laying EIGRP on top of that,\n\n637\n00:31:28,760 --> 00:31:33,240\nthe routers will start using EIGRP\nright now, and they'll stop using RIP.\n\n638\n00:31:33,240 --> 00:31:34,640\nAnd that's a problem, right?\n\n639\n00:31:34,640 --> 00:31:37,500\nThat's gonna basically cause\nissues on your system.\n\n640\n00:31:37,500 --> 00:31:41,600\nAnd so what you'll want to do is use\nadministrative distances to manipulate\n\n641\n00:31:41,600 --> 00:31:42,580\nthat, right?\n\n642\n00:31:42,580 --> 00:31:44,160\nSo let's go back to my topology here.\n\n643\n00:31:45,370 --> 00:31:48,440\nLet's say that I'm running\nRIP across all of these guys.\n\n644\n00:31:48,440 --> 00:31:53,166\nWell, RIP has an administrative\ndistance of 120.\n\n645\n00:31:53,166 --> 00:31:54,909\nSo it's 120.\n\n646\n00:31:54,909 --> 00:31:58,456\nIf I start installing EIGRP,\nit has the administrative distance of 90.\n\n647\n00:31:58,456 --> 00:32:00,720\nThat's lower, it'll be preferred.\n\n648\n00:32:00,720 --> 00:32:05,380\nSo step one, I might go to All of my\nrouters, and set the administrative\n\n649\n00:32:05,380 --> 00:32:10,353\ndistance of RIB to be something low,\nor set the administrative distance for\n\n650\n00:32:10,353 --> 00:32:15,325\nEIGRP to be something higher, I might\nset EIGRP to be 121 and then that way\n\n651\n00:32:15,325 --> 00:32:20,510\nI can go and install EIGRP on each and\nevery one of these guys, all right.\n\n652\n00:32:20,510 --> 00:32:24,260\nGet it installed, put the administrative\ndistances higher than RIB and so\n\n653\n00:32:24,260 --> 00:32:26,700\nthe protocol will run,\nit will build its adjacencies,\n\n654\n00:32:26,700 --> 00:32:30,560\nthey'll start exchanging information but\nthe EIGRP routes won't make it in\n\n655\n00:32:30,560 --> 00:32:35,540\na routing table unless EIGRP\nknows a route that RIP doesn't.\n\n656\n00:32:35,540 --> 00:32:39,240\nRemember that RIP can follow\nclassable boundaries by its default.\n\n657\n00:32:39,240 --> 00:32:41,760\nIt defaults to RIP version one,\nso it's gonna be classable.\n\n658\n00:32:41,760 --> 00:32:44,830\nYou probably moved it to version two,\nbut even in version two\n\n659\n00:32:44,830 --> 00:32:48,320\nit does auto summarization, so you might\nstill have that on, and so there might be\n\n660\n00:32:48,320 --> 00:32:51,970\nsome summary routes and EIGRP won't\nhave those so you need to look for\n\n661\n00:32:51,970 --> 00:32:57,070\nthose, and put those in place in\nEIGRP also, so that we don't end up\n\n662\n00:32:57,070 --> 00:33:01,010\nwith a situation where EIGRP learns a\nroute rift didn't know, and overrides it.\n\n663\n00:33:01,010 --> 00:33:02,880\nRight, goes into the routing table and\nwe didn't want it there.\n\n664\n00:33:04,130 --> 00:33:06,760\nWe can start to deploy it that way, and\n\n665\n00:33:06,760 --> 00:33:10,530\nthen once EIGRP is deployed\nthroughout our entire organization,\n\n666\n00:33:10,530 --> 00:33:13,760\nwe can just go right behind and start\nswitching those administrative distances.\n\n667\n00:33:13,760 --> 00:33:16,200\nSwitch it back to the way it was,\nand EIGRP will go active.\n\n668\n00:33:16,200 --> 00:33:19,180\nThat'll let us choose when EIGRP\nactually goes active, all right?\n\n669\n00:33:20,750 --> 00:33:22,810\nBut there's little caveats,\nthings that make it difficult,\n\n670\n00:33:22,810 --> 00:33:24,730\nlike figuring out those summaries,\nand so on.\n\n671\n00:33:24,730 --> 00:33:27,630\nSo that might not be the best\nmigration alternative for\n\n672\n00:33:27,630 --> 00:33:31,950\nsomeone, another way to do it\nis a rolling wave migration.\n\n673\n00:33:31,950 --> 00:33:34,640\nWhere, instead of trying to\nmigrate all your routers at once,\n\n674\n00:33:34,640 --> 00:33:36,840\nyou take them in batches.\n\n675\n00:33:36,840 --> 00:33:40,760\nAnd you use route redistribution to\nswitch from one protocol to another.\n\n676\n00:33:40,760 --> 00:33:43,280\nLet me show you how that works, all right.\n\n677\n00:33:43,280 --> 00:33:44,940\nIf we take my diagram here,\n\n678\n00:33:44,940 --> 00:33:47,800\nwe can start with a router like\nthis one all the way on the left.\n\n679\n00:33:47,800 --> 00:33:52,250\nNow let's pretend that we're running RIP,\nacross this whole environment, okay?\n\n680\n00:33:52,250 --> 00:33:54,860\nAnd I wanna switch over to EIGRP.\n\n681\n00:33:54,860 --> 00:33:58,170\nSo, I can install EIGRP right here,\nno big deal.\n\n682\n00:33:58,170 --> 00:34:00,290\nI'm running RIP, and DIGRP.\n\n683\n00:34:01,650 --> 00:34:04,950\nWhen I'm running RIP and DIGRP at the same\ntime, I'm gonna prefer EIGRP, but\n\n684\n00:34:04,950 --> 00:34:07,280\nnobody else is telling me any routes.\n\n685\n00:34:07,280 --> 00:34:09,360\nSo it's not gonna make any difference,\nright?\n\n686\n00:34:09,360 --> 00:34:12,100\nI'm still learning those RIP routes, and\nthey're still making it into my routing\n\n687\n00:34:12,100 --> 00:34:13,720\ntable because I'm not learning\nanything better, right?\n\n688\n00:34:15,060 --> 00:34:18,660\nSo I've now installed EIGRP on one router.\n\n689\n00:34:18,660 --> 00:34:20,570\nI'm ready to move to the next.\n\n690\n00:34:20,570 --> 00:34:22,680\nWhen I go to the next,\nthat's that sensitive moment.\n\n691\n00:34:22,680 --> 00:34:26,070\nThat's the moment when things\nchange where the second router and\n\n692\n00:34:26,070 --> 00:34:27,240\nthe third router and so on.\n\n693\n00:34:27,240 --> 00:34:30,650\nThey are gonna be getting\ninformation from both protocols and\n\n694\n00:34:30,650 --> 00:34:32,800\nthings can get confused and\nif you haven't done your planning,\n\n695\n00:34:32,800 --> 00:34:36,540\nyou can have summary routes and stuff\nlike that, that reek all sorts of havoc.\n\n696\n00:34:36,540 --> 00:34:41,820\nSo instead, you can do what's\ncalled a moving boundary.\n\n697\n00:34:41,820 --> 00:34:44,050\nWith a moving boundary, what we do.\n\n698\n00:34:44,050 --> 00:34:50,940\nIs we pick a spot in our network,\nand we say, all right, I'm in here.\n\n699\n00:34:50,940 --> 00:34:52,970\nAnd, well that didn't work.\n\n700\n00:34:52,970 --> 00:34:54,873\nI was gonna try and\nmove this down a little bit.\n\n701\n00:34:56,755 --> 00:34:57,591\nThere we go.\n\n702\n00:34:57,591 --> 00:34:59,271\nAll right, so we started here, and\n\n703\n00:34:59,271 --> 00:35:02,360\nthat was officially our boundary\nin the very beginning, right.\n\n704\n00:35:02,360 --> 00:35:04,420\nThis router was running both protocols.\n\n705\n00:35:04,420 --> 00:35:07,630\nAnd oh, you know I said OSPFD yeah,\n[INAUDIBLE] same thing, right?\n\n706\n00:35:07,630 --> 00:35:10,520\nLet's say we're going OSPFD EIGRP, right.\n\n707\n00:35:10,520 --> 00:35:14,710\nOr vice versa,\nwe're going from EIGRP to OSPF.\n\n708\n00:35:14,710 --> 00:35:15,360\nRight?\n\n709\n00:35:15,360 --> 00:35:21,200\nSo I can deploy OSPF right here,\nand now I'm running both.\n\n710\n00:35:21,200 --> 00:35:24,700\nI can then go to these routers and\nswitch them.\n\n711\n00:35:24,700 --> 00:35:28,510\nAnd when I do this,\nwhen I move my boundary like this,\n\n712\n00:35:28,510 --> 00:35:32,640\nwhat I'm going to do is I'm going\nto remove EIGRP from this router.\n\n713\n00:35:32,640 --> 00:35:34,660\nSo that it’s just running OSPF.\n\n714\n00:35:35,790 --> 00:35:40,050\nNow when I do that,\nit will only learn OSPF routes,\n\n715\n00:35:40,050 --> 00:35:42,380\nit will not learn EIGRP routes.\n\n716\n00:35:42,380 --> 00:35:45,390\nSo on these routers that\nare now the boundary,\n\n717\n00:35:45,390 --> 00:35:50,680\nI need to redistribute my routes\nfrom EIGRP into OSPF and vice versa.\n\n718\n00:35:50,680 --> 00:35:55,070\nOSPF into EIGRP so all these guys can\nlearn about this network over here.\n\n719\n00:35:55,070 --> 00:35:59,430\nI'm redistributing which means I'm\nmanually telling it which routes\n\n720\n00:35:59,430 --> 00:36:03,530\nare allowed to pass between the protocols\nthat guarantees that we pick and\n\n721\n00:36:03,530 --> 00:36:06,560\nchoose the routes and we don't end\nup with any accidental summaries or\n\n722\n00:36:06,560 --> 00:36:08,470\nthings like that jumping in and\nweird behavior.\n\n723\n00:36:08,470 --> 00:36:09,560\nIt gives us full control.\n\n724\n00:36:10,790 --> 00:36:15,420\nThe other benefit is, when you run two\nrouting protocols on the same router at\n\n725\n00:36:15,420 --> 00:36:19,310\nthe same time,\nit requires some resources, memory, CPU.\n\n726\n00:36:19,310 --> 00:36:23,000\nSo that creates a little bit\nof a burden on our systems.\n\n727\n00:36:23,000 --> 00:36:27,165\nWell by doing it this way, the only people\nrunning two protocols are the boundaries.\n\n728\n00:36:27,165 --> 00:36:32,120\nThese guys over here, and these guys over\nhere, they're only running one protocol.\n\n729\n00:36:32,120 --> 00:36:36,580\nAnd so as I start moving my network,\nI can do this as a rolling wave.\n\n730\n00:36:36,580 --> 00:36:40,500\nThis might take weeks, or months,\nas you go through your network\n\n731\n00:36:40,500 --> 00:36:44,970\nmoving that boundary, and each time you\nmove the boundary, these routers were\n\n732\n00:36:44,970 --> 00:36:49,050\nrunning both protocols, these routers\nare just running one protocol.\n\n733\n00:36:49,050 --> 00:36:53,240\nAnd you continually move until\nyou get to the last one.\n\n734\n00:36:53,240 --> 00:36:55,400\nAnd then you remove that\nprotocol that you ran originally.\n\n735\n00:36:55,400 --> 00:36:58,385\nSo we remove the EIGRP and\nnow we're all OSPF.\n\n736\n00:36:59,680 --> 00:37:01,420\nIt sounds like a lot of work.\n\n737\n00:37:01,420 --> 00:37:03,070\nIt is a lot of work.\n\n738\n00:37:03,070 --> 00:37:07,530\nBut it gives you the best control and\nbest protection against making mistakes.\n\n739\n00:37:07,530 --> 00:37:11,260\nBecause you're moving in stages and\nyou're picking the routes to push\n\n740\n00:37:11,260 --> 00:37:16,070\nbetween the protocols to give you\nthat protection on the network.\n\n741\n00:37:16,070 --> 00:37:16,780\nRight.\n\n742\n00:37:16,780 --> 00:37:23,270\nSo that is a phased or moving boundary\nmigration between routing protocols.\n\n743\n00:37:23,270 --> 00:37:26,530\nAll coming down to understanding how\nyour changes are going to effect for\n\n744\n00:37:26,530 --> 00:37:28,170\nthe network and that's really\nwhat they're calling out here.\n\n745\n00:37:29,290 --> 00:37:30,910\nYou can never be too safe with this stuff.\n\n746\n00:37:30,910 --> 00:37:34,730\nYou've gotta plan, you've gotta do better\nabout making sure you understand what\n\n747\n00:37:34,730 --> 00:37:37,510\nchanged are gonna happen and\nhow that's gonna affect the routes and\n\n748\n00:37:37,510 --> 00:37:38,220\nthe traffic on your network.\n\n749\n00:37:39,952 --> 00:37:45,030\nAll right, so for objective 1.6 I\ndefinitely talked more than I intended to\n\n750\n00:37:45,030 --> 00:37:47,920\non this one, but I think we covered\nit in pretty good depth there.\n\n751\n00:37:47,920 --> 00:37:52,650\nThat's what they're looking for and with\nthat, we really wrapped up objective 1.0.\n\n752\n00:37:52,650 --> 00:37:55,440\nIn this segment, we got a chance to see\n\n753\n00:37:55,440 --> 00:37:58,720\nsome of the things to think about as we\nstart to deploy changes on our network.\n\n754\n00:37:58,720 --> 00:38:02,030\nWe talked about migrating IPV4 to IPV6.\n\n755\n00:38:02,030 --> 00:38:06,070\nWe wrapped up by dealing with migrating\nfrom one routing protocol to another.\n\n756\n00:38:07,220 --> 00:38:10,870\nAll right, well,\nstay tuned we've got more CCNP coming up.\n\n757\n00:38:10,870 --> 00:38:12,320\nI hope you guys enjoyed the segment.\n\n758\n00:38:12,320 --> 00:38:13,070\nAnd we'll see you then.\n\n",
          "vimeoId": "109806709"
        }
      ],
      "title": "Network Principles"
    },
    {
      "episodes": [
        {
          "description": "Layer 2 technologies make up a relatively small portion of the Route exam, but are still important to understand. Viewers will hear discussions on the sub-objectives that will be covered including configuring PPP and explaining Frame Relay.",
          "length": "199",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/ccnproute/2-0-Layer-2-Technologies.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/ccnproute/2-0-Layer-2-Technologies-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/ccnproute/2-0-Layer-2-Technologies-sm.jpg",
          "title": "Layer 2 Technologies",
          "transcript": "1\n00:00:00,000 --> 00:00:08,145\n[MUSIC]\n\n2\n00:00:08,145 --> 00:00:12,230\nIn objective 2.0 we take a look\nat Layer 2 Technologies.\n\n3\n00:00:12,230 --> 00:00:15,680\nNow I know what you're thinking,\nthis is a route exam,\n\n4\n00:00:15,680 --> 00:00:17,780\nwhy are we wasting our time\nwith layer 2 technology?\n\n5\n00:00:17,780 --> 00:00:18,730\nWhere's layer three?\n\n6\n00:00:18,730 --> 00:00:19,530\nRight.\n\n7\n00:00:19,530 --> 00:00:20,690\nWell it's coming up.\n\n8\n00:00:20,690 --> 00:00:23,930\nBut we need to tackle layer 2\nfirst because routers they've\n\n9\n00:00:23,930 --> 00:00:25,670\ngot to plug into something.\n\n10\n00:00:25,670 --> 00:00:29,990\nAnd when a router plugs in most of\nthe time it's plugging into an Ethernet\n\n11\n00:00:29,990 --> 00:00:30,893\nnetwork, that's fine.\n\n12\n00:00:30,893 --> 00:00:33,850\nBut it's also able to plug\ninto wide area networks.\n\n13\n00:00:33,850 --> 00:00:37,010\nAnd so we need to take a moment to look\nat some of the serial technologies that\n\n14\n00:00:37,010 --> 00:00:38,470\nare out there that you may encounter.\n\n15\n00:00:38,470 --> 00:00:41,090\nAnd some of these aren't\ncovered in great depth in CCNA,\n\n16\n00:00:41,090 --> 00:00:43,158\nsome of them are, and so\nthis is the chance to look at them.\n\n17\n00:00:43,158 --> 00:00:47,790\nSo objective 2.0 is one of the shorter\nobjectives that's in the whole list,\n\n18\n00:00:47,790 --> 00:00:50,040\nIf we take a look at it,\nit's only got a few subpoints on it.\n\n19\n00:00:50,040 --> 00:00:54,100\nAnd it only makes up 10% of the exam,\nbut it is important so\n\n20\n00:00:54,100 --> 00:00:55,652\nwe need to make sure\nthat we understand that.\n\n21\n00:00:55,652 --> 00:01:01,848\nAll right, so we start out with objective\n2.1, which is configure and verify PPP.\n\n22\n00:01:01,848 --> 00:01:06,960\nPPP is Point-to-Point Protocol, which is\nused for communicating over serial lines,\n\n23\n00:01:06,960 --> 00:01:13,736\nand it's still used today because of some\nof the neat little features that it has.\n\n24\n00:01:13,736 --> 00:01:16,670\n>> In 2.1.a,\nI couldn't remember what the number was.\n\n25\n00:01:16,670 --> 00:01:20,370\nWe also wanna make sure that if we're\ngoing over those WAN connections,\n\n26\n00:01:20,370 --> 00:01:24,300\nthat we need to be able to verify that the\ndevice on the other end is who they claim\n\n27\n00:01:24,300 --> 00:01:27,718\nto be and device on our end can actually\ndo that through authentication.\n\n28\n00:01:27,718 --> 00:01:32,180\nSo normally in using that with Cisco\nrouters, we're probably gonna either rely\n\n29\n00:01:32,180 --> 00:01:34,715\non PAP, or we're gonna rely on CHAP for\nthe authentication.\n\n30\n00:01:34,715 --> 00:01:37,178\nSo we're gonna see how to configure\nthat and get that set up.\n\n31\n00:01:37,178 --> 00:01:41,740\n>> Yep, and 2.1.b gets a little\nmore advanced as we jump into\n\n32\n00:01:41,740 --> 00:01:44,110\nPPP over Ethernet, or PPPoE.\n\n33\n00:01:44,110 --> 00:01:46,870\nAnd that's used commonly\nin DSL deployment,\n\n34\n00:01:46,870 --> 00:01:49,230\nso you still see that one\nout there a good bit.\n\n35\n00:01:49,230 --> 00:01:51,264\nAnd so\nwe'll get a chance to see how to use that.\n\n36\n00:01:51,264 --> 00:01:52,300\nAgain, building off of PPP.\n\n37\n00:01:52,300 --> 00:01:57,300\nAll right, in objective 2.2,\nwe're gonna look at frame relay.\n\n38\n00:01:57,300 --> 00:02:01,020\nFrame relay is a widely used\ntechnology out there for enterprises.\n\n39\n00:02:01,020 --> 00:02:02,690\nThat is, eroding, right?\n\n40\n00:02:02,690 --> 00:02:04,700\nIt's slowly being eaten up by MPLS.\n\n41\n00:02:04,700 --> 00:02:06,450\nWe're kinda seeing that get replaced.\n\n42\n00:02:06,450 --> 00:02:07,920\nBut it's still widely deployed.\n\n43\n00:02:07,920 --> 00:02:10,970\nVery commonly you'll encounter it out\nthere in enterprise networks, and\n\n44\n00:02:10,970 --> 00:02:12,870\nthat's why it's on the exam objectives.\n\n45\n00:02:12,870 --> 00:02:15,110\nSo we're gonna take a look at that in 2.2.\n\n46\n00:02:15,110 --> 00:02:18,870\n>> We wanna make sure that we\nunderstand the basic setup\n\n47\n00:02:18,870 --> 00:02:23,010\nof how we connect our N\nrouters as a customer getting\n\n48\n00:02:23,010 --> 00:02:26,350\nconnecting into the frame relay network,\n>> And then we're also gonna talk about\n\n49\n00:02:26,350 --> 00:02:29,070\nconfiguring just a basic frame switch so\nthat\n\n50\n00:02:29,070 --> 00:02:33,650\nwe can make sure that the other end see us\nfor our connection all the way through.\n\n51\n00:02:33,650 --> 00:02:35,260\nSo we'll see that in the basic operations.\n\n52\n00:02:36,310 --> 00:02:38,510\n>> Yep.\nSo once our basic operations are up,\n\n53\n00:02:38,510 --> 00:02:40,490\nthen we get to move into some\nof our bigger topologies.\n\n54\n00:02:40,490 --> 00:02:41,635\nAnd there's two that we'll cover.\n\n55\n00:02:41,635 --> 00:02:44,950\n2.2.b and\nc is Point-to-Point communication.\n\n56\n00:02:44,950 --> 00:02:48,500\nIt's just routers connecting directly\nto each other using frame relay.\n\n57\n00:02:48,500 --> 00:02:51,910\nAnd then multipoint where we'll\nstart to see building up hub and\n\n58\n00:02:51,910 --> 00:02:55,200\nspoke or full mesh infrastructures\nusing frame relay.\n\n59\n00:02:55,200 --> 00:02:56,880\nYou'll see, it's pretty neat stuff.\n\n60\n00:02:56,880 --> 00:02:59,588\nIt's not so hard to work with, but\nit is a different line of thinking.\n\n61\n00:02:59,588 --> 00:03:03,040\nBut Frame Relay tunnels,\nthey're not really tunnels, right, but\n\n62\n00:03:03,040 --> 00:03:06,440\nthe frame relay connections will\nterminate on your routers, and\n\n63\n00:03:06,440 --> 00:03:07,890\nthat's why it's on the route exam.\n\n64\n00:03:07,890 --> 00:03:11,310\nSo even though it's a layer 2 technology,\nwe're gonna see it right here.\n\n65\n00:03:11,310 --> 00:03:11,940\nAll right?\n\n66\n00:03:11,940 --> 00:03:14,540\nSo if that sounds exciting to you,\nthen you're in the right place.\n\n67\n00:03:14,540 --> 00:03:17,220\nWe're gonna be diving into\nall of that coming up.\n\n68\n00:03:17,220 --> 00:03:17,930\nWe hope to see you then.\n\n",
          "vimeoId": "109806711"
        },
        {
          "description": "Point to Point Protocol (PPP) is designed to work in serial based networks, which uses analog communications compared to most communications used today which are digital. Viewers will hear how to implement authentication to PPP and see the basic Layer 2 configuration of both PPP and PPPoE on routers.",
          "length": "3065",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/ccnproute/2-1-Configure-PPP.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/ccnproute/2-1-Configure-PPP-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/ccnproute/2-1-Configure-PPP-sm.jpg",
          "title": "Configure PPP",
          "transcript": "1\n00:00:00,000 --> 00:00:10,000\n[MUSIC]\n\n2\n00:00:33,878 --> 00:00:35,250\nAll right.\nGood morning, good afternoon,\n\n3\n00:00:35,250 --> 00:00:38,970\nand good evening, and welcome back\nto another episode of IT Pro TV.\n\n4\n00:00:38,970 --> 00:00:41,960\nI'm your host, Don Pezet,\nback again with Mr. Ronnie Wong.\n\n5\n00:00:41,960 --> 00:00:42,910\nHow's it going, Ronnie?\n\n6\n00:00:42,910 --> 00:00:46,020\n>> It is going well today, but\nthere is no entertainment news at all,\n\n7\n00:00:46,020 --> 00:00:50,060\nso it is completely a normal day\nwithout any reference to anybody.\n\n8\n00:00:50,060 --> 00:00:51,370\n>> Without any entertainment?\n\n9\n00:00:51,370 --> 00:00:53,630\n>> Any entertainment for-\n>> Great.\n\n10\n00:00:53,630 --> 00:00:54,980\n>> No train wreck at all.\n\n11\n00:00:54,980 --> 00:00:57,780\n>> So do we need to use our Ben Stein\nvoices for the episode and just-\n\n12\n00:00:57,780 --> 00:00:58,528\n>> We very much-\n\n13\n00:00:58,528 --> 00:01:02,230\n>> [LAUGH] All right well maybe we\n\n14\n00:01:02,230 --> 00:01:03,380\nwon't do that.\n\n15\n00:01:03,380 --> 00:01:06,890\nWe'd probably fall asleep with\nyou guys out there in TV land.\n\n16\n00:01:06,890 --> 00:01:12,450\nToday we are jumping into exam\nobjective 2.1 which is configure and\n\n17\n00:01:12,450 --> 00:01:16,138\nverify point to point protocol, or PPP.\n\n18\n00:01:16,138 --> 00:01:19,880\nNow if you're like me, in the back of\nyour mind, you're thinking, wow, PPP,\n\n19\n00:01:19,880 --> 00:01:23,280\nI remember that, it was really\ncool in 1992, when we needed this.\n\n20\n00:01:23,280 --> 00:01:27,720\nPPP is an old protocol,\nit's been around a long time,\n\n21\n00:01:27,720 --> 00:01:29,950\nand you don't see it very much anymore.\n\n22\n00:01:29,950 --> 00:01:33,440\nBut it's still out there, and we need\nto learn about it so we're prepared for\n\n23\n00:01:33,440 --> 00:01:34,310\nit when we see it.\n\n24\n00:01:34,310 --> 00:01:36,780\nWe also need to learn about it because\nit's on the exam objectives and\n\n25\n00:01:36,780 --> 00:01:39,810\nyou wanna pass the test, so\nwe definitely have to have that.\n\n26\n00:01:39,810 --> 00:01:44,170\nBut let's talk about why PPP is\nstill out there, what it is.\n\n27\n00:01:44,170 --> 00:01:48,990\nWell, PPP was designed to work\nin serial based networks.\n\n28\n00:01:48,990 --> 00:01:51,260\nOn an ethernet network, we have frames.\n\n29\n00:01:51,260 --> 00:01:51,790\nRight?\nAnd\n\n30\n00:01:51,790 --> 00:01:55,850\nthe frames had certain characteristics,\nlike an MTU and all that.\n\n31\n00:01:55,850 --> 00:01:58,980\nAnd we throw them on the network, and\nthey go around, and it works really well.\n\n32\n00:02:00,070 --> 00:02:04,200\nBut on serial lines,\nthings like that don't work anymore.\n\n33\n00:02:04,200 --> 00:02:07,940\nThat serial lines use analog\ncommunications in a lot of cases, and\n\n34\n00:02:07,940 --> 00:02:10,550\nour data is not ready to\nbe converted into analog.\n\n35\n00:02:10,550 --> 00:02:11,930\nOur data is ones and zeros, it's digital.\n\n36\n00:02:11,930 --> 00:02:12,489\nThat's what we want.\n\n37\n00:02:13,620 --> 00:02:17,636\nIt's not ready to handle that kind of\ncommunication across serial lines.\n\n38\n00:02:17,636 --> 00:02:21,620\nSo that's what PPP was designed to do,\nto take our data and\n\n39\n00:02:21,620 --> 00:02:25,420\nput it into a format that\nwould pass over a serial line.\n\n40\n00:02:25,420 --> 00:02:29,833\nAnd it's a very generic protocol and\nit's designed to handle TCP/IP,\n\n41\n00:02:29,833 --> 00:02:35,520\nit candle IPX/SPX, Apple Talk, all sorts\nof protocols can piggyback on top of PPP.\n\n42\n00:02:35,520 --> 00:02:38,860\nBecause PPP encapsulates your data.\n\n43\n00:02:38,860 --> 00:02:43,000\nit takes your data and wraps it up in\na PPP wrapper that is suitable for\n\n44\n00:02:43,000 --> 00:02:45,000\ngoing across serial lines.\n\n45\n00:02:45,000 --> 00:02:47,860\nI'm not just talking about dial up.\n\n46\n00:02:47,860 --> 00:02:49,910\nI'm talking about T 1 lines, frame relay,\n\n47\n00:02:49,910 --> 00:02:52,530\nanything that uses a serial\ntype connectivity.\n\n48\n00:02:52,530 --> 00:02:54,730\nYou can even use it on non-serial stuff,\n\n49\n00:02:54,730 --> 00:02:57,110\nwhich we'll see why we\nmight do that later on.\n\n50\n00:02:57,110 --> 00:03:00,880\nSo that was what it was originally\nintended for and you still see it today,\n\n51\n00:03:00,880 --> 00:03:04,610\nin some cases we have a simple\npoint-to-point T1 line.\n\n52\n00:03:04,610 --> 00:03:08,000\nPeople might use PPP on that line\nbecause it's just so easy to configure,\n\n53\n00:03:08,000 --> 00:03:13,055\nit gets right in there and\nknocks it out and it gets the job done.\n\n54\n00:03:13,055 --> 00:03:14,240\n>> [INAUDIBLE]\n>> Sorry, go ahead.\n\n55\n00:03:14,240 --> 00:03:17,470\n>> The advantage with PPP is\nthat it also gives us that\n\n56\n00:03:17,470 --> 00:03:19,520\npart of the authentication\nthat we need to do.\n\n57\n00:03:19,520 --> 00:03:22,140\nSo even though we originally\nhad some different\n\n58\n00:03:22,140 --> 00:03:26,820\nways to do the point-to-point connections,\nit didn't offer us that advantage.\n\n59\n00:03:26,820 --> 00:03:29,980\nSo that if were connecting over a very\nlong distance, we never knew if somebody\n\n60\n00:03:29,980 --> 00:03:33,780\nhad taken that router offline and\nput in just another device in place.\n\n61\n00:03:33,780 --> 00:03:37,350\nSo with PPP, it adds in that additional\nlayer that we want to make sure.\n\n62\n00:03:37,350 --> 00:03:39,480\nAnd it provides a little bit of security.\n\n63\n00:03:39,480 --> 00:03:44,140\n>> Yeah, and that actually leads to one of\nthe biggest used cases of PPP right now is\n\n64\n00:03:44,140 --> 00:03:48,620\nPPPoE with DSL,\nwhere DSL is technically digital and\n\n65\n00:03:48,620 --> 00:03:52,950\nit's using ethernet communications,\nbut they use PPP on top of ethernet,\n\n66\n00:03:52,950 --> 00:03:57,730\nbecause ethernet doesn't give you any kind\nof authentication mechanism, PPP does.\n\n67\n00:03:57,730 --> 00:04:01,490\nSo they combine the two, and that gives\nthem that authentication mechanism to make\n\n68\n00:04:01,490 --> 00:04:03,950\nsure that only their customers can act.\n\n69\n00:04:03,950 --> 00:04:07,210\nAnother neat feature of PPP is multilink.\n\n70\n00:04:07,210 --> 00:04:09,970\nWith PPP,\nyou can take multiple connections,\n\n71\n00:04:09,970 --> 00:04:15,200\nmultiple serial lines, and\nbond them in to a single connection.\n\n72\n00:04:15,200 --> 00:04:17,030\nThis was originally developed for\ndial up, but\n\n73\n00:04:17,030 --> 00:04:19,550\nyou can use it with other\ntypes of links too.\n\n74\n00:04:19,550 --> 00:04:20,180\nIf you have four or\n\n75\n00:04:20,180 --> 00:04:25,170\nfive T1s you can bond them all in to\na multi-link bundle and off you go.\n\n76\n00:04:25,170 --> 00:04:29,350\nYou don't have to worry about equal cost\npath balancing or anything like that.\n\n77\n00:04:29,350 --> 00:04:31,380\nIt's just bonds them and\nsees it as a single link.\n\n78\n00:04:31,380 --> 00:04:35,120\nIt's kind of like etherchannel right?\n\n79\n00:04:35,120 --> 00:04:39,150\nWhere we combine those nicks together\ninto a single connection, or lackp or\n\n80\n00:04:39,150 --> 00:04:41,670\npagd, any of that stuff,\nbut for serial lines.\n\n81\n00:04:41,670 --> 00:04:42,560\nAll right.\n\n82\n00:04:42,560 --> 00:04:44,250\nAnd I'm forgetting something,\nwhat else is it?\n\n83\n00:04:44,250 --> 00:04:46,590\nOh, just the simplicity of it.\n\n84\n00:04:46,590 --> 00:04:49,620\nIf you have a point to point serial\nline and use one to get it up and\n\n85\n00:04:49,620 --> 00:04:53,500\nrunning fast,\nPPP is one of the easiest ways to do it.\n\n86\n00:04:53,500 --> 00:04:58,050\nNow, Cisco routers actually run\na protocol called HDLC by default, and\n\n87\n00:04:58,050 --> 00:05:00,880\nHDLC is just as easy but\nit's Cisco proprietary.\n\n88\n00:05:00,880 --> 00:05:04,940\nSo if you have two Cisco devices,\nyou plug in the serial line and it's up.\n\n89\n00:05:04,940 --> 00:05:07,430\nI mean, HDLC is super automatic.\n\n90\n00:05:07,430 --> 00:05:09,240\nBut if you have one Cisco device and\n\n91\n00:05:09,240 --> 00:05:12,880\none Juniper device,\nwell they don't do HDLC together.\n\n92\n00:05:12,880 --> 00:05:16,560\nSo if you go to PPP they'll connect and\ncome right up.\n\n93\n00:05:16,560 --> 00:05:19,850\nSo great way to get a serial line up and\nrunning with minimal effort.\n\n94\n00:05:21,110 --> 00:05:23,760\nThose are the reasons why we\nstill see PPP today, all right.\n\n95\n00:05:24,780 --> 00:05:28,430\nAnd on the exam they're really\njust asking us a couple of things.\n\n96\n00:05:28,430 --> 00:05:32,730\nThe main thing is they want us to\nunderstand how PPP does authentication and\n\n97\n00:05:32,730 --> 00:05:35,570\nthen see a basic implementation of PPPoE.\n\n98\n00:05:35,570 --> 00:05:37,140\nIn fact,\nif we look at the exam objectives,\n\n99\n00:05:37,140 --> 00:05:39,940\nthey don't even go too far on that at all.\n\n100\n00:05:39,940 --> 00:05:41,360\nWhere are my exam objectives?\n\n101\n00:05:41,360 --> 00:05:41,880\nHere.\n\n102\n00:05:41,880 --> 00:05:44,120\nThey don't even go too\nfar into that at all.\n\n103\n00:05:44,120 --> 00:05:46,430\nThey say PPPoE configuration.\n\n104\n00:05:46,430 --> 00:05:47,410\nClient side only.\n\n105\n00:05:47,410 --> 00:05:50,360\nNot the server side, just setting up the\nclient how we can get connected to that to\n\n106\n00:05:50,360 --> 00:05:51,700\npass off our credentials.\n\n107\n00:05:51,700 --> 00:05:56,550\nSo, we'll get a chance to look at these\ntwo pieces of information, and who knows?\n\n108\n00:05:56,550 --> 00:05:59,040\nYou may end up having to deploy this\nin production in the near future.\n\n109\n00:05:59,040 --> 00:06:04,700\nAll right, so let's get started with\na simple implementation of PPP.\n\n110\n00:06:04,700 --> 00:06:08,470\nAnd I know I've already said it before,\nit's really simple to bring it up.\n\n111\n00:06:08,470 --> 00:06:09,970\nI've got a couple of routers.\n\n112\n00:06:09,970 --> 00:06:12,380\nAnd actually let me do this in Visio.\n\n113\n00:06:12,380 --> 00:06:13,250\nHere we go.\n\n114\n00:06:13,250 --> 00:06:17,050\nI've got a headquarters router and\na branch router, right.\n\n115\n00:06:17,050 --> 00:06:19,130\nAnd they're connected via a serial link.\n\n116\n00:06:19,130 --> 00:06:23,370\nSo I've got this serial1/1\nlink that runs between them.\n\n117\n00:06:23,370 --> 00:06:26,510\nLet's just say I want a quick and\ndirty, get that line fired up so\n\n118\n00:06:26,510 --> 00:06:28,960\nmy routers can communicate to each other.\n\n119\n00:06:28,960 --> 00:06:34,360\nWe can use PPPE, PPP, and we're like one\ncommand away from getting this working.\n\n120\n00:06:34,360 --> 00:06:35,800\nLet's take a look at one of the routers.\n\n121\n00:06:35,800 --> 00:06:37,890\nSo, that's buried around here somewhere.\n\n122\n00:06:37,890 --> 00:06:40,100\nI'll jump over to my HQ router.\n\n123\n00:06:40,100 --> 00:06:45,240\nAnd I'm gonna do a show\nrun interface serial 1/1.\n\n124\n00:06:46,250 --> 00:06:49,050\nAll right, so let me just fix that.\n\n125\n00:06:49,050 --> 00:06:49,810\nThere we go.\n\n126\n00:06:49,810 --> 00:06:53,710\nSo, looking at it,\nI've got an IP address assigned to it.\n\n127\n00:06:53,710 --> 00:06:55,650\nSo this one's 192.168.2.1 that's the IP,\n\n128\n00:06:55,650 --> 00:06:58,330\nbut I haven't really\ndone anything else to it.\n\n129\n00:06:58,330 --> 00:07:00,140\nSo, it just has an IP.\n\n130\n00:07:00,140 --> 00:07:01,887\nAnd if I go take a look at Branch 1.\n\n131\n00:07:04,284 --> 00:07:07,472\nI'm typing these commands all the way out,\nI wouldn't normally do that, but\n\n132\n00:07:07,472 --> 00:07:10,290\noh you know what, actually I didn't\nwant to get into config, did I?\n\n133\n00:07:10,290 --> 00:07:13,720\nI just wanna do a show run int s1/1.\n\n134\n00:07:13,720 --> 00:07:14,810\nThere we go.\n\n135\n00:07:14,810 --> 00:07:16,310\nSo I see on this one, same thing.\n\n136\n00:07:16,310 --> 00:07:19,790\nI haven't done anything special,\nI've just set an IP address.\n\n137\n00:07:19,790 --> 00:07:23,320\nAnd it's 192.168.2.2.\nNow if these are both Cisco routers,\n\n138\n00:07:23,320 --> 00:07:23,960\nwhich they are.\n\n139\n00:07:25,000 --> 00:07:28,450\nHDLC should be kicking in and I should\nactually be able to communicate across\n\n140\n00:07:28,450 --> 00:07:31,190\nthis line right now without\ndoing anything special.\n\n141\n00:07:31,190 --> 00:07:35,270\nIf I jump over to my headquarters,\nI should be able to ping 192.168.2.2,\n\n142\n00:07:35,270 --> 00:07:38,230\nwhich is the other side and I can.\n\n143\n00:07:39,720 --> 00:07:40,370\nAll right.\n\n144\n00:07:40,370 --> 00:07:41,310\nBut that's not ppp.\n\n145\n00:07:42,310 --> 00:07:47,150\nIf I do a show interface 0 1/1, and\n\n146\n00:07:47,150 --> 00:07:50,640\nI look, I can see right here,\nencapsulation HTLC.\n\n147\n00:07:50,640 --> 00:07:53,751\nThat's what it's doing.\n\n148\n00:07:53,751 --> 00:07:56,572\nBut if I want to use PPP,\nI just need to go into the interface and\n\n149\n00:07:56,572 --> 00:07:57,511\nissue one command.\n\n150\n00:07:57,511 --> 00:07:59,491\nEncapsulation PPP.\n\n151\n00:07:59,491 --> 00:08:00,271\nAll right?\n\n152\n00:08:00,271 --> 00:08:05,663\nAnd so if I go in here and do that,\nI'll get into interface serial 1/1 and\n\n153\n00:08:05,663 --> 00:08:08,330\nI'll type, encapsulation.PPP.\n\n154\n00:08:10,010 --> 00:08:15,180\nNow when I do that, one side is set to\nPPP and the other side is set to htlc.\n\n155\n00:08:15,180 --> 00:08:16,760\nSo my line is gonna go down.\n\n156\n00:08:16,760 --> 00:08:17,340\nThere it goes.\n\n157\n00:08:18,790 --> 00:08:22,080\nAnd so I need to jump over and\ndo the other side to get it fixed.\n\n158\n00:08:22,080 --> 00:08:22,808\nSo let me jump over to my branch.\n\n159\n00:08:26,860 --> 00:08:27,963\nAnd I'll do the same thing.\n\n160\n00:08:30,842 --> 00:08:33,776\nThere we go, and\nnow it's switched over to PPP, and\n\n161\n00:08:33,776 --> 00:08:36,450\nthe line should come back up, all right?\n\n162\n00:08:36,450 --> 00:08:41,220\nNow the line may take a moment, usually\nyou have to get some traffic generated\n\n163\n00:08:41,220 --> 00:08:44,430\nover it for it to actually renegotiate and\nthen the links should come back up.\n\n164\n00:08:44,430 --> 00:08:47,910\nAnd mine is kind of sitting here,\nI'm gonna try and send a ping across it.\n\n165\n00:08:47,910 --> 00:08:49,350\nSo I'm gonna try and\nping to the other side.\n\n166\n00:08:49,350 --> 00:08:51,750\nI'm getting success rates.\n\n167\n00:08:51,750 --> 00:08:55,935\nAnd if I do a show interface serial 1/1,\n\n168\n00:08:55,935 --> 00:09:00,825\nI can see that I am now doing\nencapsulation.PPP and it's up and running.\n\n169\n00:09:00,825 --> 00:09:06,505\nSo, PPP to turn it on, just one command,\nencapsulation PPP, no big deal at all.\n\n170\n00:09:06,505 --> 00:09:09,710\nI didn't have to configure anything\njust to get it up and running.\n\n171\n00:09:09,710 --> 00:09:13,240\nRight, that's one of the big\nfeatures of it, is the simplicity.\n\n172\n00:09:13,240 --> 00:09:15,090\nAnd the fact that it can\ncarry more than one protocol.\n\n173\n00:09:15,090 --> 00:09:16,970\nThere were alternatives\nto PPP in the beginning,\n\n174\n00:09:16,970 --> 00:09:19,100\nlike SLIP that would just move IP.\n\n175\n00:09:19,100 --> 00:09:24,340\nBut this one will do EIGRP,\nI mean it'll do EIGRP but\n\n176\n00:09:24,340 --> 00:09:27,015\nit'll do IPv4 as well as IPv6, AppleTalk.\n\n177\n00:09:27,015 --> 00:09:29,750\n[INAUDIBLE].\n\n178\n00:09:29,750 --> 00:09:33,650\nNow, inside of PPP there's\na number of different components.\n\n179\n00:09:33,650 --> 00:09:34,980\nYou see some of those here,\n\n180\n00:09:34,980 --> 00:09:38,450\nthe link control protocol is what's\nactually building up that session.\n\n181\n00:09:38,450 --> 00:09:43,660\nYou see LCP open, that means your two PPP\nsystems are talking to each other and\n\n182\n00:09:43,660 --> 00:09:45,030\nthe link is open.\n\n183\n00:09:45,030 --> 00:09:46,760\nIf it's closed, that means it's down.\n\n184\n00:09:46,760 --> 00:09:49,790\nSo LCP is what's actually\nbuilding up that session.\n\n185\n00:09:49,790 --> 00:09:53,920\nAnd once you connect,\nyou've got things like IPCP, all right.\n\n186\n00:09:53,920 --> 00:09:59,400\nWhich is the internet protocol\ncontrol protocol, IPCP.\n\n187\n00:09:59,400 --> 00:10:01,970\nAnd that handles building\nup my IP connection.\n\n188\n00:10:01,970 --> 00:10:04,120\nYou can do some really\ncool stuff with IPCP.\n\n189\n00:10:04,120 --> 00:10:07,880\nIt can do it's own little DHCP server\nto assign IP to the other side.\n\n190\n00:10:07,880 --> 00:10:10,520\nThat's what you would use\nwith dial up type systems.\n\n191\n00:10:10,520 --> 00:10:14,090\nSo you don't have to use DHCP,\nyou can use IPCP to do it.\n\n192\n00:10:14,090 --> 00:10:18,780\nSame thing with CDPCP which is the Cisco\ndiscovery protocol, control protocol and\n\n193\n00:10:18,780 --> 00:10:23,390\nso that one is handling CDP\ndiscovery over that link, all right.\n\n194\n00:10:23,390 --> 00:10:26,050\nSo, a lot of different\ncomponents under the hood but\n\n195\n00:10:26,050 --> 00:10:28,660\nwe don't have to configure them so\nit's not a big deal.\n\n196\n00:10:28,660 --> 00:10:29,530\nPPP is simple.\n\n197\n00:10:31,400 --> 00:10:33,790\nAll right,\nwell what if we want to get more advanced?\n\n198\n00:10:33,790 --> 00:10:35,040\nRonnie, you gave us the scenario.\n\n199\n00:10:35,040 --> 00:10:38,180\nWhat if someone swaps out that router or\nchanges the device.\n\n200\n00:10:38,180 --> 00:10:40,430\nHow do I really know I'm connecting\nto the person I think I am?\n\n201\n00:10:40,430 --> 00:10:46,200\n>> Yeah, when we start to do this, we need\nto add in the component authentication.\n\n202\n00:10:46,200 --> 00:10:49,820\nThat is the basic way that we can ensure\nthat if we can’t see the other router,\n\n203\n00:10:49,820 --> 00:10:53,060\nit’s not in the same room, it’s not\nin the same building, we ensure that\n\n204\n00:10:53,060 --> 00:10:56,350\nwhen we are connecting, we are sending\nour data to the right device and\n\n205\n00:10:56,350 --> 00:11:01,930\nwe need to configure kind of a little\nbit unusually, I believe, on both ends.\n\n206\n00:11:01,930 --> 00:11:05,610\nThe strange thing is, when we configure\nauthentication, it’s kind of a mirrored\n\n207\n00:11:05,610 --> 00:11:09,270\nauthentication that we have to configure,\nand we’ll see that in this segment.\n\n208\n00:11:09,270 --> 00:11:09,790\nYeah.\n\n209\n00:11:09,790 --> 00:11:12,380\nWhen you configure authentication,\nyou can do it one way.\n\n210\n00:11:12,380 --> 00:11:12,950\nRight.\n\n211\n00:11:12,950 --> 00:11:15,030\nYou can make it where like,\n\n212\n00:11:15,030 --> 00:11:19,860\nthe headquarters requires the branch\nto authenticate to connect.\n\n213\n00:11:19,860 --> 00:11:20,650\nRight.\n\n214\n00:11:20,650 --> 00:11:22,210\nBut we don't normally do that.\n\n215\n00:11:22,210 --> 00:11:26,240\nWe normally do two way authentication,\nwhere the headquarters requires the branch\n\n216\n00:11:26,240 --> 00:11:29,640\nto authenticate, and the branch requires\nthe headquarters to authenticate.\n\n217\n00:11:29,640 --> 00:11:30,930\nSo you can configure it either way.\n\n218\n00:11:30,930 --> 00:11:33,920\nIf you want to go one way, you just\nleave off half the commands, right.\n\n219\n00:11:33,920 --> 00:11:37,520\nBut if you want to go both ways, you'll\nhave to configure this on both sides and\n\n220\n00:11:37,520 --> 00:11:38,920\nset a matching password.\n\n221\n00:11:38,920 --> 00:11:41,500\nAnd so they'll look for that matching\npassword, and as long as they match\n\n222\n00:11:41,500 --> 00:11:45,030\nthey're both authenticating each other and\nthe system comes up.\n\n223\n00:11:45,030 --> 00:11:49,260\nNow with PPP, we have two\nauthentication protocols to pick from.\n\n224\n00:11:49,260 --> 00:11:51,287\nPAP and CHAP.\n\n225\n00:11:51,287 --> 00:11:55,900\nAnd they, as far as the commands go,\nare the same.\n\n226\n00:11:55,900 --> 00:11:59,450\nYou just when you type it,\nyou swap out the word PAP for CHAP.\n\n227\n00:11:59,450 --> 00:12:04,070\nBut PAP is plain text\nauthentication protocol, right, or\n\n228\n00:12:04,070 --> 00:12:05,730\npassword authentication protocol, shoot.\n\n229\n00:12:05,730 --> 00:12:06,270\nThat's what it is.\n\n230\n00:12:06,270 --> 00:12:08,940\nBut it's plain text is\nthe key thing there.\n\n231\n00:12:08,940 --> 00:12:12,050\nPAP is gonna send your password\nacross the link in plain text.\n\n232\n00:12:12,050 --> 00:12:14,639\nAnd that's not something\nyou normally want.\n\n233\n00:12:15,840 --> 00:12:18,280\nThis is all from back in the old\ndays when you had dial up,\n\n234\n00:12:18,280 --> 00:12:21,540\nwhich is point to point so you didn't\nhave to worry about people listening in.\n\n235\n00:12:21,540 --> 00:12:23,540\nCHAP solves that problem.\n\n236\n00:12:23,540 --> 00:12:25,960\nCHAP is the Challenge Handshake\nAuthentication Protocol and\n\n237\n00:12:25,960 --> 00:12:29,060\nit uses a hash value of your password, so\n\n238\n00:12:29,060 --> 00:12:31,910\nyou don't actually send your password\nacross the link, you send a hash.\n\n239\n00:12:31,910 --> 00:12:35,190\nAnd on the other side they hash\nthe password that was stored and\n\n240\n00:12:35,190 --> 00:12:35,950\nthey compare them.\n\n241\n00:12:35,950 --> 00:12:38,750\nAnd if the hashes match,\nit's the same password, right?\n\n242\n00:12:38,750 --> 00:12:42,340\nSo chap is more secure, and\nthat's what you normally want to do.\n\n243\n00:12:42,340 --> 00:12:45,000\nOnly use PAP if you\n\n244\n00:12:45,000 --> 00:12:49,130\nabsolutely just have an end point\nthat doesn't support chap, right.\n\n245\n00:12:49,130 --> 00:12:51,740\nOtherwise you should always use chap for\nauthentication with PPP.\n\n246\n00:12:51,740 --> 00:12:55,400\nAll right, the configuration\nis pretty straight forward,\n\n247\n00:12:55,400 --> 00:12:58,570\nwe've got to go into our interface and\ntell it to do authentication.\n\n248\n00:12:58,570 --> 00:13:00,520\nAnd then we've got to get our user\nname and password squared away.\n\n249\n00:13:00,520 --> 00:13:02,930\nAnd this is the part that you were\ntalking about that's odd, right Ronnie?\n\n250\n00:13:02,930 --> 00:13:05,890\n>> Yeah, it's the mirrored\nconfiguration that we have to do.\n\n251\n00:13:05,890 --> 00:13:10,410\nA lot of times when we begin to set this\nup we may set it up identically on both\n\n252\n00:13:10,410 --> 00:13:15,090\nends, on both routers, and that's when we\nend up seeing some failures because what\n\n253\n00:13:15,090 --> 00:13:19,540\nthey're looking for is gonna be a user\nname that's pointing at the other router\n\n254\n00:13:19,540 --> 00:13:21,610\nand so we have to actually\nkind of change that up.\n\n255\n00:13:21,610 --> 00:13:22,670\n>> Mhm.\n\n256\n00:13:22,670 --> 00:13:24,190\nSo we need to create\nsome user accounts for\n\n257\n00:13:24,190 --> 00:13:29,560\nour routers, by default PPP will\nuse the host name of the router.\n\n258\n00:13:29,560 --> 00:13:32,760\nSo when branch one goes to connect to\nthe headquarters its going to pass a user\n\n259\n00:13:32,760 --> 00:13:34,200\nname of BR1.\n\n260\n00:13:34,200 --> 00:13:38,110\nSo on headquarters I’ve gotta\ncreate a user account for BR1, and\n\n261\n00:13:38,110 --> 00:13:41,720\nthe same thing in reverse when HQ comes\nin, it’s gonna show a user account of HQ.\n\n262\n00:13:41,720 --> 00:13:45,160\nNow you can override that use\nwhatever user name you want, but\n\n263\n00:13:45,160 --> 00:13:46,840\nthe default is the host name.\n\n264\n00:13:46,840 --> 00:13:50,480\nThat’s what most of us use, it’s easy to\nkeep track of when you do it that way.\n\n265\n00:13:50,480 --> 00:13:53,660\nIf we start using alternate names,\nit can get confusing.\n\n266\n00:13:53,660 --> 00:13:56,430\nSo, that's where I'm going to start,\nis on headquarters.\n\n267\n00:13:56,430 --> 00:13:57,950\nI'm gonna get into my configuration, and\n\n268\n00:13:57,950 --> 00:14:00,580\nI'm gonna create a user account for\nbranch one.\n\n269\n00:14:00,580 --> 00:14:05,650\nSo, I'll say, user BR1,\nsecret you could say password,\n\n270\n00:14:05,650 --> 00:14:09,310\nif you wanted, but remember that's\ngonna go unencrypted into your config.\n\n271\n00:14:09,310 --> 00:14:14,090\nAnd then I'll put what my password's\ngonna be, and I'll just use cisco123.\n\n272\n00:14:14,090 --> 00:14:18,850\nAnd, oh sorry, username, there we go.\n\n273\n00:14:18,850 --> 00:14:20,960\nAll right, so\nnow I've created a user account for\n\n274\n00:14:20,960 --> 00:14:23,650\nbranch 1 right here on the server.\n\n275\n00:14:23,650 --> 00:14:27,790\nAll right, now if I wanted branch 1\nto authenticate with headquarters and\n\n276\n00:14:27,790 --> 00:14:29,570\nthat was it I could stop right here.\n\n277\n00:14:29,570 --> 00:14:32,420\nI've got the user account and\nI could figure the rest of it right here.\n\n278\n00:14:32,420 --> 00:14:37,300\nBut if I want to authenticate the other\ndirection too, which is a great idea,\n\n279\n00:14:37,300 --> 00:14:40,370\nthen we need to go to the other side and\ncreate the account there.\n\n280\n00:14:40,370 --> 00:14:44,120\nSo I'm gonna go over to branch one,\nand I'm gonna do the opposite here.\n\n281\n00:14:44,120 --> 00:14:49,460\nI'm gonna say username HQ secret cisco123,\nall right?\n\n282\n00:14:51,040 --> 00:14:54,510\nNow I'm not specifying a privilege level.\n\n283\n00:14:54,510 --> 00:14:57,620\nSo it's gonna default to\nthe lowest privilege possible.\n\n284\n00:14:57,620 --> 00:15:02,925\nSo this account doesn't have have access\nto my system beyond the most basic access.\n\n285\n00:15:02,925 --> 00:15:04,805\nThat's fine.\nI don't need to actually give them access.\n\n286\n00:15:04,805 --> 00:15:07,045\nI'm just authenticating this\nconnection and that's it.\n\n287\n00:15:07,045 --> 00:15:08,725\nSo, nobody's ever going to\nactually log in with it.\n\n288\n00:15:09,935 --> 00:15:12,585\nNow, notice I use the same\npassword on both sides.\n\n289\n00:15:12,585 --> 00:15:16,425\nThat's kind of important because\nthe hashes have to match.\n\n290\n00:15:16,425 --> 00:15:21,485\nYou can't use a different password on the\ntwo sides, otherwise it's going to fail.\n\n291\n00:15:21,485 --> 00:15:24,790\nBut you technically could\nuse a different password.\n\n292\n00:15:24,790 --> 00:15:28,630\nYou would just have to override it in\nthe interface command on the other side to\n\n293\n00:15:28,630 --> 00:15:30,710\nmake sure that it matched\nwhat was specified.\n\n294\n00:15:30,710 --> 00:15:34,640\nIf you don't want to do overrides, doing\nit this way, notch it all out at once.\n\n295\n00:15:34,640 --> 00:15:37,080\nWe use the same password on both sides and\nyou're in business.\n\n296\n00:15:37,080 --> 00:15:40,915\nSo different usernames,\nsame password, key to making it work.\n\n297\n00:15:40,915 --> 00:15:41,530\n>> Mm-hm.\n\n298\n00:15:41,530 --> 00:15:45,790\nAll right, so my next step, so you just\nthink of it as a pre shared key, right?\n\n299\n00:15:45,790 --> 00:15:47,570\nYou want it to be the same on both sides.\n\n300\n00:15:47,570 --> 00:15:50,320\nThe next step is to tell PPP to use it.\n\n301\n00:15:50,320 --> 00:15:53,850\nPPP doesn't know to use this stuff yet,\nso we've gotta go and tell it.\n\n302\n00:15:53,850 --> 00:15:58,719\nSo up here on headquarters,\nI'm gonna go into interface serial 1/1,\n\n303\n00:15:58,719 --> 00:16:02,801\nand I'm gonna tell it to do\nauthentication And the command for\n\n304\n00:16:02,801 --> 00:16:07,983\nthat is PPP authentication, and then\nwhat type of authentication I wanna do,\n\n305\n00:16:07,983 --> 00:16:11,780\nand you'll see where I've got CHAP and\nPAP right there.\n\n306\n00:16:11,780 --> 00:16:13,630\nThose are the two that'll be on the exam.\n\n307\n00:16:13,630 --> 00:16:17,440\nThere's other ones, EAP,\nMS CHAP, MS CHAP version two.\n\n308\n00:16:17,440 --> 00:16:19,880\nYou've got the Microsoft variants of CHAP.\n\n309\n00:16:19,880 --> 00:16:24,770\nWhat you can do, they're not standard, but\nthey're good, and then you've got EAP.\n\n310\n00:16:24,770 --> 00:16:26,730\nThe Extensible Authentication Protocol,\n\n311\n00:16:26,730 --> 00:16:30,030\nwhere you could actually do\ncertificate-based authentication.\n\n312\n00:16:30,030 --> 00:16:33,030\nAnd, that can give you a level\nof security that's even high.\n\n313\n00:16:33,030 --> 00:16:35,660\nAll right, but we're gonna do chat.\n\n314\n00:16:35,660 --> 00:16:39,040\nSo I'm gonna say PPP authentication chat.\n\n315\n00:16:39,040 --> 00:16:40,890\nNow, the server knows.\n\n316\n00:16:40,890 --> 00:16:44,700\nThe headquarters knows that when somebody\nconnects they need to authenticate.\n\n317\n00:16:44,700 --> 00:16:46,720\nAnd look what just happened\nto my serial line.\n\n318\n00:16:46,720 --> 00:16:48,230\nIt went down, okay.\n\n319\n00:16:48,230 --> 00:16:49,610\nNow it just came back up.\n\n320\n00:16:49,610 --> 00:16:52,890\nAnd it went down again,\nit's gonna start flapping.\n\n321\n00:16:52,890 --> 00:16:57,190\nThe branch is trying to bring the line up,\nbut it doesn't know the password.\n\n322\n00:16:57,190 --> 00:17:00,130\nAnd so it's getting it wrong every time,\ntime and time again.\n\n323\n00:17:00,130 --> 00:17:02,860\nWell, the branch knows\nthe password; we gave it to it!\n\n324\n00:17:02,860 --> 00:17:04,800\nBut, it doesn't know to give it to us.\n\n325\n00:17:04,800 --> 00:17:06,910\nIt doesn't know to do authentication.\n\n326\n00:17:06,910 --> 00:17:11,523\nSo I've gotta go and issue the same\ncommand on the other side, so\n\n327\n00:17:11,523 --> 00:17:13,836\nI'm gonna go over to my branch.\n\n328\n00:17:13,836 --> 00:17:14,550\nAll right.\n\n329\n00:17:14,550 --> 00:17:19,030\nAnd I'll go into interface serial 1/1,\nand I'll say PPP authentication chap.\n\n330\n00:17:19,030 --> 00:17:19,620\nAll right?\n\n331\n00:17:21,510 --> 00:17:26,380\nNow it knows, when I authenticate,\nI need to send a hash of my password,\n\n332\n00:17:26,380 --> 00:17:30,340\nand the other side needs to be\nsending me a hash of their password.\n\n333\n00:17:30,340 --> 00:17:33,101\nAnd we’ll compare the two,\nand if they match.\n\n334\n00:17:33,101 --> 00:17:34,360\nThen we're in.\n\n335\n00:17:34,360 --> 00:17:36,370\nAnd I should see my\nflapping stop over here.\n\n336\n00:17:38,880 --> 00:17:40,570\nNot yet, so it's down right now.\n\n337\n00:17:42,750 --> 00:17:44,380\nIf this ever happens, you can wait.\n\n338\n00:17:44,380 --> 00:17:46,090\nThere's a little timer that kicks in.\n\n339\n00:17:46,090 --> 00:17:47,500\nOr you can just shut\nthe interface down and\n\n340\n00:17:47,500 --> 00:17:48,990\nturn it back on again,\nwhich is what I'm gonna do.\n\n341\n00:17:48,990 --> 00:17:50,040\nI'm gonna do a little shut down.\n\n342\n00:17:52,070 --> 00:17:55,100\nAnd then a no shut down\nto bring it back up.\n\n343\n00:17:55,100 --> 00:17:56,500\nJust kinda force it.\n\n344\n00:17:56,500 --> 00:17:59,300\nAnother thing you may bump into\nis if the lines all ready up,\n\n345\n00:17:59,300 --> 00:18:02,540\nit may not go down right away cuz\ntechnically the connections already made.\n\n346\n00:18:02,540 --> 00:18:05,920\nSo doing a shut down and a no shut\ndown will guarantee that it happens.\n\n347\n00:18:05,920 --> 00:18:06,860\nSo we can see it come up.\n\n348\n00:18:08,570 --> 00:18:10,280\nActually it's coming up and\nthen going right back down again.\n\n349\n00:18:10,280 --> 00:18:11,200\nDid I do a typo?\n\n350\n00:18:12,870 --> 00:18:14,390\nIt is unhappy.\n\n351\n00:18:14,390 --> 00:18:14,900\nAll right, so,\n\n352\n00:18:14,900 --> 00:18:18,140\nlet me just double check my configuration\nto make sure I didn't do a typo.\n\n353\n00:18:18,140 --> 00:18:21,610\nWe've got our settings on both sides, our\nuser accounts and passwords should match,\n\n354\n00:18:21,610 --> 00:18:22,890\nunless I screwed it up.\n\n355\n00:18:22,890 --> 00:18:24,180\nAnd then the links should come up.\n\n356\n00:18:24,180 --> 00:18:25,500\nBut in my case it is not.\n\n357\n00:18:25,500 --> 00:18:29,490\nSo now we get one of the annoying\npart of troubleshooting.\n\n358\n00:18:29,490 --> 00:18:33,420\nIf you try and troubleshoot right now it's\ncontinually spamming your screen with\n\n359\n00:18:33,420 --> 00:18:33,990\nthis message.\n\n360\n00:18:33,990 --> 00:18:37,080\nSo you may wanna shut the interface\ndown while you troubleshoot it.\n\n361\n00:18:37,080 --> 00:18:39,440\nWhich is exactly what I'm gonna do.\n\n362\n00:18:39,440 --> 00:18:43,000\nAnd now I can go and\ntake a look at what's going on here.\n\n363\n00:18:43,000 --> 00:18:45,680\nSo I'm just gonna look at my config.\n\n364\n00:18:45,680 --> 00:18:49,430\nSo I'm using the Do command cause\nI don't wanna get out of config.\n\n365\n00:18:49,430 --> 00:18:52,590\nAnd then I'm doing\nthe Show Run Interface Serial 1/1 so\n\n366\n00:18:52,590 --> 00:18:54,430\nI can take a look at what I've got.\n\n367\n00:18:54,430 --> 00:18:58,810\nI can see that I've got encapsulation PPP,\nPPP authentication chap, right?\n\n368\n00:18:58,810 --> 00:19:01,010\nSo those basic commands are there.\n\n369\n00:19:01,010 --> 00:19:04,360\nI've got my username and\npassword which were defined earlier.\n\n370\n00:19:04,360 --> 00:19:07,630\nNow I encrypted them, so I'm not gonna\nbe able to see what that password is.\n\n371\n00:19:07,630 --> 00:19:11,990\nSo if I screwed that up, there's not a\ngood way to verify the password is wrong.\n\n372\n00:19:11,990 --> 00:19:15,970\nSo you almost always just\nhave to recreate the account.\n\n373\n00:19:15,970 --> 00:19:19,740\nSo I'm using show run, I'm using\nthe pipe command into the include,\n\n374\n00:19:19,740 --> 00:19:22,840\nwhich is a little grep utility\nthat let's me search for a string.\n\n375\n00:19:22,840 --> 00:19:26,460\nSo I'm searching the running config for\nusername.\n\n376\n00:19:26,460 --> 00:19:32,250\nAnd there's that user name, BRI secret\nfive, and so it is there, it is created.\n\n377\n00:19:32,250 --> 00:19:36,060\nAnd so that should be good enough.\n\n378\n00:19:36,060 --> 00:19:37,590\nBut it is not doing it.\n\n379\n00:19:37,590 --> 00:19:40,620\nSo I'm gonna try one additional thing.\n\n380\n00:19:40,620 --> 00:19:44,280\nSo when we push our access\nacross the line like this,\n\n381\n00:19:44,280 --> 00:19:46,290\nI mentioned you can override your values.\n\n382\n00:19:46,290 --> 00:19:49,190\nYou can hardset it so\nit know which ones to use.\n\n383\n00:19:49,190 --> 00:19:53,320\nIt's supposed to use the host name for me,\nthis HQ, when it connects across, and for\n\n384\n00:19:53,320 --> 00:19:54,290\nsome reason it's not.\n\n385\n00:19:54,290 --> 00:19:57,250\nAnd that actually may just be\nthat I fat fingered the password.\n\n386\n00:19:57,250 --> 00:19:59,640\nSo let me redo that real quick.\n\n387\n00:19:59,640 --> 00:20:01,490\nI'll just say no username.\n\n388\n00:20:03,070 --> 00:20:05,360\nBR1.\nAnd I'll recreate it.\n\n389\n00:20:05,360 --> 00:20:06,310\nNew username, BR1, secret.\n\n390\n00:20:06,310 --> 00:20:11,284\nActually, you know what,\nI'm gonna just do password, so\n\n391\n00:20:11,284 --> 00:20:16,460\nthat I can see it in my config,\nand make sure that it's right.\n\n392\n00:20:16,460 --> 00:20:18,690\nAnd then I'll go over to branch one and\n\n393\n00:20:18,690 --> 00:20:21,720\nredefine it there too just\nto be on the safe side.\n\n394\n00:20:21,720 --> 00:20:23,830\nActually, let me check its serial 1/1,\n\n395\n00:20:23,830 --> 00:20:28,412\nand I can see encapsulation PPP,\nPPP authentication chap.\n\n396\n00:20:28,412 --> 00:20:32,868\nAnd I'll do no username, HQ.\n\n397\n00:20:32,868 --> 00:20:35,877\nAnd I'll just recreate that.\n\n398\n00:20:38,710 --> 00:20:39,558\nThere!\n\n399\n00:20:39,558 --> 00:20:41,030\nAll right.\n\n400\n00:20:41,030 --> 00:20:42,210\nLet's go and bring that back up and\n\n401\n00:20:42,210 --> 00:20:45,750\nwe'll see if it was just me\ntyping the password wrong.\n\n402\n00:20:45,750 --> 00:20:50,750\nThe human error is normally the one\nthat leads us to failure [LAUGH] so\n\n403\n00:20:50,750 --> 00:20:52,170\nwe'll give that a second.\n\n404\n00:20:52,170 --> 00:20:55,583\nIf it still gives me grief, I'll manually\nset the username to make sure it's using\n\n405\n00:20:55,583 --> 00:20:58,898\nthe right thing and we can even override\nthe password on the interface if we want,\n\n406\n00:20:58,898 --> 00:21:01,020\nso those are good commands\nto be familiar with too.\n\n407\n00:21:01,020 --> 00:21:03,520\nLooks like the line just came up,\nI'm gonna wait a second,\n\n408\n00:21:03,520 --> 00:21:05,930\nI don't wanna be overly optimistic here.\n\n409\n00:21:05,930 --> 00:21:08,630\nBut, hopefully, this will come up.\n\n410\n00:21:08,630 --> 00:21:13,610\nWe're back in business, that means\nI just typed the password wrong.\n\n411\n00:21:13,610 --> 00:21:17,710\nLooks like it's staying up!\n\n412\n00:21:17,710 --> 00:21:19,417\nLet me see if I can ping across.\n\n413\n00:21:19,417 --> 00:21:19,950\nAll right.\n\n414\n00:21:19,950 --> 00:21:23,510\nSo, that one is serial 1/1, so\nif the other side is 192.168.2.2, and\n\n415\n00:21:23,510 --> 00:21:25,670\nsure enough,\nI'm able to communicate across it.\n\n416\n00:21:25,670 --> 00:21:28,050\nSo, I'm authenticating across the line.\n\n417\n00:21:29,370 --> 00:21:32,340\nHow do I really know I'm\nauthenticating though, right?\n\n418\n00:21:32,340 --> 00:21:34,910\nMaybe, maybe I just came\nup without authentication.\n\n419\n00:21:34,910 --> 00:21:38,830\nSo when we're trouble shooting like this,\na lot of the time it's a matter of just\n\n420\n00:21:38,830 --> 00:21:41,030\nlooking at your config and\nspotting the error.\n\n421\n00:21:41,030 --> 00:21:42,360\nBut if I looked at my config and\n\n422\n00:21:42,360 --> 00:21:45,390\nstill couldn't spot the error, the next\nthing I would do would be to use some\n\n423\n00:21:45,390 --> 00:21:48,180\ndebug commands to see what's\ngoing on behind the hood.\n\n424\n00:21:48,180 --> 00:21:51,940\nBut you can still use the debug\nanyway just to see it happen,\n\n425\n00:21:51,940 --> 00:21:53,230\nwhich is kind of neat.\n\n426\n00:21:53,230 --> 00:21:55,860\nLet's take a look at that.\n\n427\n00:21:55,860 --> 00:21:57,600\nSo I'm gonna go back into that\ninterface and shut it down.\n\n428\n00:21:57,600 --> 00:21:58,100\nAll right.\n\n429\n00:21:59,640 --> 00:22:02,058\nSo it's gonna be off.\n\n430\n00:22:02,058 --> 00:22:04,810\nAnd I'm gonna use some debug commands\n\n431\n00:22:04,810 --> 00:22:08,650\nto get it where we can see what's\nhappening in the background.\n\n432\n00:22:08,650 --> 00:22:11,590\nSome of the cool ones that we can use,\nthere's debug,\n\n433\n00:22:11,590 --> 00:22:15,740\nPPP, let's see,\nit's PPP authentication right?\n\n434\n00:22:15,740 --> 00:22:17,940\nThere we go.\n\n435\n00:22:17,940 --> 00:22:22,370\nDebug PPP authentication, that's a cool\none because when it goes to authenticate,\n\n436\n00:22:22,370 --> 00:22:23,700\nwe'll see the process.\n\n437\n00:22:23,700 --> 00:22:24,800\nThat's how we can know it's doing it.\n\n438\n00:22:26,560 --> 00:22:27,420\nAll right.\n\n439\n00:22:27,420 --> 00:22:31,540\nSo now I get back into serial 1/1 and\nI'll do a no shut down.\n\n440\n00:22:31,540 --> 00:22:34,370\nIt's gonna come back up, and I should\nbe able to see the authentication.\n\n441\n00:22:34,370 --> 00:22:37,660\nThis way I know that we're\nactually authenticating.\n\n442\n00:22:37,660 --> 00:22:38,830\nAnd there it is.\n\n443\n00:22:38,830 --> 00:22:43,530\nWhen you're looking at this output, you'll\nsee PPP, that's your basic connection.\n\n444\n00:22:43,530 --> 00:22:46,300\nYou'll see chap,\nthat's the authentication.\n\n445\n00:22:46,300 --> 00:22:50,670\nAnd anything with an O that's output,\nbut we're sending, and\n\n446\n00:22:50,670 --> 00:22:54,270\nanything with an I is input,\nwe're receiving.\n\n447\n00:22:54,270 --> 00:22:57,650\nSo output, we sent a challenge from HQ.\n\n448\n00:22:57,650 --> 00:23:01,330\nAnd then input,\nwe received the challenge from branch one.\n\n449\n00:23:02,650 --> 00:23:04,740\nWe challenge them, they challenged us.\n\n450\n00:23:04,740 --> 00:23:05,460\nAll right.\n\n451\n00:23:05,460 --> 00:23:08,770\nSo then we send each other our hashes,\nright.\n\n452\n00:23:08,770 --> 00:23:11,730\nSo we sent a CHAP SENDAUTH Request, and\n\n453\n00:23:11,730 --> 00:23:15,570\nwe received the response\nwith a hash password.\n\n454\n00:23:15,570 --> 00:23:17,990\nWe then compared that hash password.\n\n455\n00:23:17,990 --> 00:23:19,360\nSee here where it says.\n\n456\n00:23:19,360 --> 00:23:21,220\nUsing host-name from unknown source,\nright.\n\n457\n00:23:21,220 --> 00:23:23,790\nSo it's using the host-name\nfrom the other side, BR1.\n\n458\n00:23:23,790 --> 00:23:26,560\nAnd it's checking it against\nthe password from AAA.\n\n459\n00:23:26,560 --> 00:23:30,320\nThat's our local security database in this\nscenario, and looking at that username and\n\n460\n00:23:30,320 --> 00:23:33,310\npassword, hashing it, and\nseeing if they match.\n\n461\n00:23:33,310 --> 00:23:36,280\nAnd when they match,\nwe know it's good, right?\n\n462\n00:23:36,280 --> 00:23:38,688\nBut then we need to authenticate\nwith the other side, and so\n\n463\n00:23:38,688 --> 00:23:40,930\nhere where we're responding to them.\n\n464\n00:23:40,930 --> 00:23:43,980\nAnd sending a log-in request to them, and\n\n465\n00:23:43,980 --> 00:23:48,460\nwe're authenticating a second time\nthat's us authenticating against them.\n\n466\n00:23:48,460 --> 00:23:49,280\nAll right.\n\n467\n00:23:49,280 --> 00:23:52,486\nSo I can see that it happened,\neverything was happy and\n\n468\n00:23:52,486 --> 00:23:56,611\nthen I saw my interface come up right\nthere after everybody was happy.\n\n469\n00:23:56,611 --> 00:23:59,951\nSo I know authentication is happening.\n\n470\n00:23:59,951 --> 00:24:01,671\nAll right.\n\n471\n00:24:01,671 --> 00:24:04,100\nI mentioned that we can\noverride some of these values.\n\n472\n00:24:04,100 --> 00:24:05,670\nSo there's two more\ncommands I wanna show you.\n\n473\n00:24:05,670 --> 00:24:08,985\nOn the interface I could\nalso have said PPP,\n\n474\n00:24:08,985 --> 00:24:14,450\nchap, post name, and\nthen specify whatever I wanted.\n\n475\n00:24:14,450 --> 00:24:16,410\nSo if I didn't want to\nuse HQ as my username,\n\n476\n00:24:16,410 --> 00:24:18,370\nI could have specified something else.\n\n477\n00:24:19,520 --> 00:24:21,980\nAnd where this comes in handy is,\nwhat if somebody comes and\n\n478\n00:24:21,980 --> 00:24:24,030\nchanges the hostname down the road?\n\n479\n00:24:24,030 --> 00:24:25,900\nIt's gonna break PPP.\n\n480\n00:24:25,900 --> 00:24:27,790\nSo you could hard set it here.\n\n481\n00:24:27,790 --> 00:24:29,710\nI could say PPP chap hostname HQ.\n\n482\n00:24:29,710 --> 00:24:32,230\nThat's already my hostname.\n\n483\n00:24:32,230 --> 00:24:36,150\nBut now if somebody changes the hostname\nof the router, I'll still use HQ here for\n\n484\n00:24:36,150 --> 00:24:36,700\nthis channel.\n\n485\n00:24:36,700 --> 00:24:39,090\nWe'll make sure that those\naren't tied together anymore.\n\n486\n00:24:39,090 --> 00:24:41,360\nSo sometimes I like to do this\neven if it's the same name,\n\n487\n00:24:41,360 --> 00:24:43,270\njust to guarantee that security.\n\n488\n00:24:43,270 --> 00:24:44,530\nAnd same thing with the password.\n\n489\n00:24:44,530 --> 00:24:47,800\nYou can say, PPP chap password, and\n\n490\n00:24:47,800 --> 00:24:51,940\nwhat you want that password to be,\noverriding that user account again.\n\n491\n00:24:51,940 --> 00:24:56,000\nSo, at this stage, you don't even\nreally need the user account anymore.\n\n492\n00:24:56,000 --> 00:24:58,720\nThe credentials are coming right\nhere out of the interface.\n\n493\n00:24:58,720 --> 00:25:03,375\nSo, that's another alternative\nthat you've got available.\n\n494\n00:25:03,375 --> 00:25:08,050\nAll right, so when it comes to PPP turning\non authentication, not a big deal is it?\n\n495\n00:25:08,050 --> 00:25:12,260\n>> As long as you remember to make sure\nthat when you set that username it's for\n\n496\n00:25:12,260 --> 00:25:16,730\nthe account on the other side,\nmaking sure you use the same password,\n\n497\n00:25:16,730 --> 00:25:18,370\nit's probably gonna work.\n\n498\n00:25:18,370 --> 00:25:22,290\nThe nice thing about PPP because of\nsimplicity, very simple to use simple\n\n499\n00:25:22,290 --> 00:25:25,110\nbugging command to be able to\nsee if everything is working.\n\n500\n00:25:26,280 --> 00:25:29,750\nIt is by far the simplest kind of\nconfiguration we can have between two\n\n501\n00:25:29,750 --> 00:25:30,250\ncomputers.\n\n502\n00:25:31,640 --> 00:25:34,680\n>> Yeah it works really well and\nit's a good technology.\n\n503\n00:25:34,680 --> 00:25:38,860\nOther protocols, other things\nlike ethernet and frame relays,\n\n504\n00:25:38,860 --> 00:25:41,810\nthose guys, they just don't have\nauthentication built into them.\n\n505\n00:25:41,810 --> 00:25:44,292\nPPP does because of the old dial up page,\nwhen you paid for\n\n506\n00:25:44,292 --> 00:25:46,640\nhours of Internet access every month,\nand all that.\n\n507\n00:25:46,640 --> 00:25:48,240\nThat's where this comes from.\n\n508\n00:25:48,240 --> 00:25:51,600\nAnd it's still useful today just\nto do quick authentication.\n\n509\n00:25:51,600 --> 00:25:56,090\nYou can use VPN tunnels and other things,\nproxies, whatever, to do the same thing.\n\n510\n00:25:56,090 --> 00:25:58,570\nBut PPP is way down a layer or two.\n\n511\n00:25:58,570 --> 00:26:02,320\nSo it doesn't require even IP addresses\nto be able to authenticate and\n\n512\n00:26:02,320 --> 00:26:03,990\nbring the tunnel up,\nthat makes it very flexible.\n\n513\n00:26:05,550 --> 00:26:08,290\nAnd we're gonna see an extension of\nthat in the next segment when we take\n\n514\n00:26:08,290 --> 00:26:12,240\na look at PPP over ethernet or PPPOE.\n\n515\n00:26:12,240 --> 00:26:15,060\nBut for right now I think that's\na pretty good stopping point for us.\n\n516\n00:26:15,060 --> 00:26:18,649\nSo, why don't we pause and\ntake a break and\n\n517\n00:26:18,649 --> 00:26:22,550\nwhen we get back,\nmore PPP action after this.\n\n518\n00:26:22,550 --> 00:26:28,516\n[MUSIC]\n\n519\n00:26:28,516 --> 00:26:30,570\nAll right, welcome back everybody.\n\n520\n00:26:30,570 --> 00:26:35,600\nFor the second part of objective 2.1,\nwe're gonna take a look at PPPOE,\n\n521\n00:26:35,600 --> 00:26:39,040\nthe point to point protocol over ethernet.\n\n522\n00:26:39,040 --> 00:26:42,500\nAnd I know I've already mentioned it,\nbut just to kind of review, you might be\n\n523\n00:26:42,500 --> 00:26:45,530\nsaying to yourself, wait a minute,\nPPP that's a serial protocol, right?\n\n524\n00:26:45,530 --> 00:26:47,390\nFor allowing us to communicate\nover serial lines.\n\n525\n00:26:47,390 --> 00:26:50,380\nWhy would we use it with\nethernet when we don't need it?\n\n526\n00:26:50,380 --> 00:26:54,900\nWell, there really is just one scenario,\nand that's where you need authentication.\n\n527\n00:26:54,900 --> 00:26:57,960\nEthernet doesn't have authentication,\nPPPoE does.\n\n528\n00:26:57,960 --> 00:27:02,010\nSo we can stick it on top of ethernet and\nnow we get an authentication mechanism to\n\n529\n00:27:02,010 --> 00:27:04,530\ncontrol who's allowed\nto access our network.\n\n530\n00:27:04,530 --> 00:27:06,490\nYou see this really common with broadband.\n\n531\n00:27:06,490 --> 00:27:09,190\nSo it's usually used with DSL, and\n\n532\n00:27:09,190 --> 00:27:12,970\nthat's where you've got an ethernet\nconnection your DSL modem which then sends\n\n533\n00:27:12,970 --> 00:27:16,180\nyou over to their D slam,\nthat whole connectivity model there.\n\n534\n00:27:16,180 --> 00:27:18,160\nAnd they need to authenticate you and\ntheir customer,\n\n535\n00:27:18,160 --> 00:27:20,290\nand you've got to send a username and\npassword.\n\n536\n00:27:20,290 --> 00:27:23,450\nSo you can use PPPoE with chap, or PAP or\n\n537\n00:27:23,450 --> 00:27:26,300\nwhatever to authenticate yourself and\nrun across that link.\n\n538\n00:27:27,590 --> 00:27:30,590\nSo, it's pretty straight\nforward to implement, but\n\n539\n00:27:30,590 --> 00:27:32,960\nit uses some really weird stuff.\n\n540\n00:27:32,960 --> 00:27:36,295\nThe thing you have to remember is\nthat PPP was originally designed for\n\n541\n00:27:36,295 --> 00:27:39,540\ndial up networks,\ndial up modems and connecting.\n\n542\n00:27:39,540 --> 00:27:42,718\nSo a lot of the terminology we're gonna\nsee in this configuration is going to be\n\n543\n00:27:42,718 --> 00:27:45,140\ndial up stuff.\n\n544\n00:27:45,140 --> 00:27:48,280\nAnd so some of the commands we're gonna\nsee are a little on the dated side.\n\n545\n00:27:48,280 --> 00:27:53,360\nNow if we want to see this in action, well\non the certification they just want us\n\n546\n00:27:53,360 --> 00:27:58,630\nto put in enough to have a client connect,\nthey want you to do the client side.\n\n547\n00:27:58,630 --> 00:28:01,640\nBut if we just do the client side\nthe link's not going to come up.\n\n548\n00:28:01,640 --> 00:28:06,020\nSo, we'll bring a server up too just to\nbe able to see that, that whole process.\n\n549\n00:28:06,020 --> 00:28:09,510\nBut, I've got these two routers,\nheadquarters and branch.\n\n550\n00:28:09,510 --> 00:28:11,990\nAnd you'll see there's this\nethernet network right here.\n\n551\n00:28:11,990 --> 00:28:16,400\nSo, E0/0 on headquarters,\nand E0/0 on branch.\n\n552\n00:28:16,400 --> 00:28:18,000\nBoth connect to this cloud.\n\n553\n00:28:18,000 --> 00:28:22,400\nAnd it's a standard ethernet network, so\nthey should be able to communicate over\n\n554\n00:28:22,400 --> 00:28:24,300\nthat without authentication or\nanything crazy.\n\n555\n00:28:24,300 --> 00:28:26,790\nLet's go test our basic connectivity.\n\n556\n00:28:26,790 --> 00:28:30,180\nSo here's my branch and if I look at\nE0/0 it's 192.168.0.2 and if I look at\n\n557\n00:28:36,850 --> 00:28:39,570\nmy headquarters,\nit is on E0/0 192.168.0.1.\n\n558\n00:28:39,570 --> 00:28:42,600\nAnd I should be able to ping\nbetween them just fine.\n\n559\n00:28:42,600 --> 00:28:46,180\nSo, let me just give that a test here,\nand I'm pinging from headquarters A.\n\n560\n00:28:46,180 --> 00:28:48,340\nI lost a ping because of an Arp lookup,\nright?\n\n561\n00:28:48,340 --> 00:28:49,340\nThat has to be expected.\n\n562\n00:28:51,400 --> 00:28:54,950\nIf I test from branch, I should\nget successful connectivity there.\n\n563\n00:28:54,950 --> 00:28:56,330\nI'm good!\n\n564\n00:28:56,330 --> 00:28:58,640\nEthernet doesn't do authentication,\nit's up and we're working.\n\n565\n00:28:59,940 --> 00:29:04,910\nNow if I lay PPPoE on top of it, we can\nstart to do things like authentication.\n\n566\n00:29:05,920 --> 00:29:10,610\nNow, on the branch side,\nthis is going to be our client.\n\n567\n00:29:10,610 --> 00:29:14,110\nAnd for the client this set\nup is kind of interesting.\n\n568\n00:29:14,110 --> 00:29:16,560\nWhen you do dial up access like this.\n\n569\n00:29:16,560 --> 00:29:21,000\nYou typically don't have an IP\naddress you get the IP address\n\n570\n00:29:21,000 --> 00:29:23,340\nas part of your connection process, right.\n\n571\n00:29:23,340 --> 00:29:28,085\nSo to get this setup I am going\nto go into interface E0/0 and\n\n572\n00:29:28,085 --> 00:29:32,590\nI am gonna say no IP address.\n\n573\n00:29:32,590 --> 00:29:35,270\nI'm gonna remove the IP\naddress from that interface.\n\n574\n00:29:35,270 --> 00:29:37,860\nI'm gonna get that from\nthe server when I connect to it.\n\n575\n00:29:37,860 --> 00:29:40,360\nIt's kind of like DHCP, all right?\n\n576\n00:29:40,360 --> 00:29:41,551\nI'm also gonna do a shut down.\n\n577\n00:29:41,551 --> 00:29:45,195\nAnd whenever you start adding\na bunch of command like this,\n\n578\n00:29:45,195 --> 00:29:47,955\nif the interface is up while\nyou're configuring it,\n\n579\n00:29:47,955 --> 00:29:50,405\nyou'll start getting all sorts of\nweird status messages throughout.\n\n580\n00:29:50,405 --> 00:29:54,675\nSo it's a good idea to shut the interface\ndown while you work with it.\n\n581\n00:29:54,675 --> 00:29:57,595\nAfter this, now we're ready to\nstart doing our configuration.\n\n582\n00:29:57,595 --> 00:30:01,625\nOn the interface itself there's\nreally just one command we need,\n\n583\n00:30:01,625 --> 00:30:03,175\ntechnically there's two commands.\n\n584\n00:30:03,175 --> 00:30:08,193\nBut the main command we need is\n\n585\n00:30:08,193 --> 00:30:15,240\nPPPoE-client dial-pool-number 1.\n\n586\n00:30:15,240 --> 00:30:18,190\nAnd what that's doing is saying that\nwe're going to be a PPPoE client.\n\n587\n00:30:18,190 --> 00:30:20,920\nWe're connecting to a PPPoE server.\n\n588\n00:30:20,920 --> 00:30:25,190\nAnd when we go to connect,\nwe're gonna use a dial pool.\n\n589\n00:30:25,190 --> 00:30:28,830\nA dial pool, it used to be a collection\nof servers that you could dial up to.\n\n590\n00:30:28,830 --> 00:30:32,060\nAnd if one failed,\nyou could move to the next, and so on.\n\n591\n00:30:32,060 --> 00:30:34,910\nNow on ethernet,\nwe don't need phone numbers anymore so\n\n592\n00:30:34,910 --> 00:30:36,250\nthat doesn't really get involved.\n\n593\n00:30:36,250 --> 00:30:37,670\nBut you still have to\ncreate the dial pool.\n\n594\n00:30:37,670 --> 00:30:40,240\nThis is the tie back to\nour old dial up days.\n\n595\n00:30:40,240 --> 00:30:41,770\nAnd I'm just creating the first pool.\n\n596\n00:30:41,770 --> 00:30:45,808\nIt will be pool number one.\n\n597\n00:30:45,808 --> 00:30:48,220\nNow when I run that,\nnothing special happens.\n\n598\n00:30:48,220 --> 00:30:54,374\nThere is a second command that is\nuseful to run, which is PPPoE, wait.\n\n599\n00:30:55,410 --> 00:30:56,640\nNo, actually, what is it?\n\n600\n00:30:56,640 --> 00:30:57,579\nPPPoE enable.\n>> Enable.\n\n601\n00:30:57,579 --> 00:30:58,845\n>> Now I've got to remember\nmy own command here, PPPoE.\n\n602\n00:30:58,845 --> 00:31:02,722\n>> Not enough Ps.\n\n603\n00:31:02,722 --> 00:31:04,187\n>> [LAUGH] I'm going to\nscrew this one all up.\n\n604\n00:31:04,187 --> 00:31:05,299\nThere we go.\n>> It's inevitable.\n\n605\n00:31:05,299 --> 00:31:06,007\n>> PPPOE enable, all right?\n\n606\n00:31:06,007 --> 00:31:11,960\nOn most Cisco routers, just running the\nclient command is enough to turn it on.\n\n607\n00:31:11,960 --> 00:31:13,640\nBut notice on mine that it didn't.\n\n608\n00:31:13,640 --> 00:31:16,850\nAnd so when I ran PPPoE enable,\nthat's when it turned on.\n\n609\n00:31:16,850 --> 00:31:20,610\nAnd I knew to do that cuz I didn't see\nmy little link statuses change, so\n\n610\n00:31:20,610 --> 00:31:22,330\nthat's why I went ahead and\npunched that in there.\n\n611\n00:31:22,330 --> 00:31:26,300\nThat's actually gonna turn on PPPoE for\nthis interface.\n\n612\n00:31:26,300 --> 00:31:28,720\nI might have other interfaces\nwhere I don't want to do it.\n\n613\n00:31:28,720 --> 00:31:29,980\nNow it's on for this one.\n\n614\n00:31:29,980 --> 00:31:31,150\nThose are my two commands right there.\n\n615\n00:31:31,150 --> 00:31:36,800\nPPPoE enable and\nPPPoE-client dial-pool-number 1.\n\n616\n00:31:38,660 --> 00:31:42,280\nThat's the interface but I'm referencing\na dial pool that doesn't exist.\n\n617\n00:31:42,280 --> 00:31:43,875\nNow I need to go and\ncreate that dial pool.\n\n618\n00:31:43,875 --> 00:31:50,240\nSo what we're doing is we're\ncreating a virtual interface.\n\n619\n00:31:50,240 --> 00:31:54,774\nYou'll see these messages just came up,\nInterface Virtual Access1,\n\n620\n00:31:54,774 --> 00:31:56,120\nchanged state to up.\n\n621\n00:31:56,120 --> 00:31:59,160\nWhen you do PPPoE,\nyou've got your physical interface.\n\n622\n00:31:59,160 --> 00:32:03,053\nAnd you build a virtual interface on top\nof it that's doing the authentication and\n\n623\n00:32:03,053 --> 00:32:04,630\nthe encapsulation.\n\n624\n00:32:04,630 --> 00:32:07,390\nSo, I need to get that configured.\n\n625\n00:32:07,390 --> 00:32:10,230\nAnd we do that by creating\nwhat's called a dialer.\n\n626\n00:32:10,230 --> 00:32:13,360\nI'm going to say interface dialer one.\n\n627\n00:32:13,360 --> 00:32:16,190\nAnd this is what's going to\nbe basically that dial pool.\n\n628\n00:32:16,190 --> 00:32:17,860\nIt's gonna list how I can get connected.\n\n629\n00:32:17,860 --> 00:32:19,940\nAnd we used to put phone numbers and\nstuff in there.\n\n630\n00:32:19,940 --> 00:32:23,430\nBut this time, I'm gonna put things that\nrelate to what I'm trying to do, right?\n\n631\n00:32:24,780 --> 00:32:28,760\nI'm gonna say, well,\nthere's one that I always forget, right?\n\n632\n00:32:28,760 --> 00:32:32,350\nPPPOE, the PPPOE header is\nabout eight bytes in size, so\n\n633\n00:32:32,350 --> 00:32:34,160\nit takes a little bit of space.\n\n634\n00:32:34,160 --> 00:32:36,890\nSo I'm gonna shrink my MTU\nto make room for that.\n\n635\n00:32:36,890 --> 00:32:38,930\nI'm gonna say MTU 1,492.\n\n636\n00:32:38,930 --> 00:32:42,590\nMy normal MTU on ethernet is 1,500,\n\n637\n00:32:42,590 --> 00:32:47,720\nI'm reducing it by eight to make room for\nthe header, for the PPPOE data.\n\n638\n00:32:47,720 --> 00:32:49,040\nSo I'm shrinking that down to 1,492.\n\n639\n00:32:49,040 --> 00:32:53,230\nThen, I'll say encapsulation PPP.\n\n640\n00:32:54,230 --> 00:32:56,680\nI'm doing PPP over this dialer.\n\n641\n00:32:56,680 --> 00:32:59,030\nYou know you could do slip or other ones.\n\n642\n00:32:59,030 --> 00:33:02,030\nI don't even know if the CISCO routers\nsupport the other ones anymore.\n\n643\n00:33:02,030 --> 00:33:05,540\nThat's still a slip and\nsome of the other guys, but I want PPP.\n\n644\n00:33:06,700 --> 00:33:10,070\nThen I'm going to say IP address.\n\n645\n00:33:10,070 --> 00:33:12,780\nMy IP address is not attached to the\nphysical interface anymore it's attached\n\n646\n00:33:12,780 --> 00:33:13,670\nto the virtual.\n\n647\n00:33:13,670 --> 00:33:17,080\nSo I need to punch it in here and\nI can either statically set it, or\n\n648\n00:33:17,080 --> 00:33:19,390\nI can say negotiated.\n\n649\n00:33:19,390 --> 00:33:21,300\nThe server is gonna give it to me.\n\n650\n00:33:21,300 --> 00:33:22,140\nAnd that's what you normally do.\n\n651\n00:33:22,140 --> 00:33:29,620\nAll right, after that,\nI'm pretty much done with this interface.\n\n652\n00:33:29,620 --> 00:33:30,815\nHowever.\n\n653\n00:33:30,815 --> 00:33:35,135\nIf I'm doing authentication, this is the\nplace where I would put my username and\n\n654\n00:33:35,135 --> 00:33:35,805\nmy password.\n\n655\n00:33:35,805 --> 00:33:41,075\nI would say PPP chap, post name, whatever.\n\n656\n00:33:41,075 --> 00:33:43,495\nPPP chap, password, whatever.\n\n657\n00:33:43,495 --> 00:33:45,015\nYou'd put that right\nhere on the interface.\n\n658\n00:33:45,015 --> 00:33:48,700\nNow I'm gonna leave the authentication\npiece off, because for most of you,\n\n659\n00:33:48,700 --> 00:33:51,170\nthis is probably the first time\nyou've seen this configuration.\n\n660\n00:33:51,170 --> 00:33:53,230\nAnd I don't want to\nmake it overly complex.\n\n661\n00:33:53,230 --> 00:33:54,800\nSo we'll leave authentication off.\n\n662\n00:33:54,800 --> 00:33:58,220\nBut it's configured the same as\nwe did it in the first segment,\n\n663\n00:33:58,220 --> 00:34:01,460\nexcept instead of attaching\nthe authentication to the interface,\n\n664\n00:34:01,460 --> 00:34:03,990\nthe physical interface,\nyou attach it to the dialer.\n\n665\n00:34:03,990 --> 00:34:05,350\nSo you just go into the dialer.\n\n666\n00:34:05,350 --> 00:34:07,750\nDo the same commands we did\nin the first segment and\n\n667\n00:34:07,750 --> 00:34:10,110\nthat's what takes care of\nthe authentication piece.\n\n668\n00:34:11,280 --> 00:34:15,120\nNow I do need to let it know\nthat this is dialer pool one.\n\n669\n00:34:15,120 --> 00:34:17,150\nSo I'll go ahead and designate that.\n\n670\n00:34:17,150 --> 00:34:21,760\nAnd then this last one,\nif you have more than one dialer,\n\n671\n00:34:21,760 --> 00:34:25,260\nyou can round robin through them, and\nthat's called using a dialer group.\n\n672\n00:34:25,260 --> 00:34:27,280\nI've only got one, but\nyou still have to designate it.\n\n673\n00:34:27,280 --> 00:34:33,100\nSo I'll say dialer Group one, all right?\n\n674\n00:34:33,100 --> 00:34:34,760\nSo that's gonna combine\nit into that group.\n\n675\n00:34:36,450 --> 00:34:41,180\nAll right, now once I've got that\nin place, now I need to go and\n\n676\n00:34:41,180 --> 00:34:42,370\ndo some additional configuration.\n\n677\n00:34:42,370 --> 00:34:46,214\nNow, when I did dialer group,\nit does a couple of things, right?\n\n678\n00:34:46,214 --> 00:34:49,890\nBut the main thing is it puts my dialer\n\n679\n00:34:49,890 --> 00:34:54,690\nas being available as a pool to be able\nto use and it attaches an access list.\n\n680\n00:34:54,690 --> 00:34:58,010\nIt's kind of like the access dash group\ncommand you do on a normal interface,\n\n681\n00:34:58,010 --> 00:34:59,510\nhere I've got dialer dash group.\n\n682\n00:34:59,510 --> 00:35:02,500\nSo it allows me to attach an access list,\naccess list one.\n\n683\n00:35:02,500 --> 00:35:06,350\nThat way I can filter what traffic\nis allowed to go across this link.\n\n684\n00:35:06,350 --> 00:35:10,580\nI may not want all the traffic on my\nnetwork to pass it I can specify specific\n\n685\n00:35:10,580 --> 00:35:13,270\ntraffic that's allowed to hit it.\n\n686\n00:35:13,270 --> 00:35:16,680\nSo I need to designate that, so\nI'm gonna get out of here and\n\n687\n00:35:16,680 --> 00:35:22,150\nI'll say dialer-list 1,\nand now I can specify.\n\n688\n00:35:22,150 --> 00:35:25,380\nSo this is like access-list,\nhere it's dialer-list.\n\n689\n00:35:25,380 --> 00:35:28,350\nThe traffic that will\ntrigger this line to come up.\n\n690\n00:35:28,350 --> 00:35:32,140\nAnd it's a different syntax\nthen what you normally have.\n\n691\n00:35:32,140 --> 00:35:38,530\nSo I'm gonna specify protocol IP permit\nand I'm just saying allow all IP traffic.\n\n692\n00:35:38,530 --> 00:35:43,230\nSo IP traffic of any sort is\nallowed to bring this line up.\n\n693\n00:35:43,230 --> 00:35:48,540\nOkay, now that's pretty much it I would\nprobably, if this branch, if this\n\n694\n00:35:48,540 --> 00:35:52,510\nonly connection was this PPPOE connection,\nI'd probably add a static route.\n\n695\n00:35:52,510 --> 00:35:57,360\nSomething like IP route 0.0.0.0 and\nI would point that to dialer one, right?\n\n696\n00:35:57,360 --> 00:36:01,620\nSo if you want to get out to the internet,\nor somewhere else, draw dialer one.\n\n697\n00:36:02,980 --> 00:36:05,130\nBut in my scenario,\nI'm just testing this single link, so\n\n698\n00:36:05,130 --> 00:36:05,980\nI'm not gonna bother with that.\n\n699\n00:36:05,980 --> 00:36:07,460\nBut that's what you'd normally do.\n\n700\n00:36:07,460 --> 00:36:10,550\nSo that they know to hit that dialer,\nthat would bring the dialer up, and\n\n701\n00:36:10,550 --> 00:36:11,390\nwe connect to the other side.\n\n702\n00:36:11,390 --> 00:36:16,170\nNow that's not gonna happen here\nbecause my link is down, right?\n\n703\n00:36:16,170 --> 00:36:22,135\nIf I do a no shutdown, it's gonna try and\ndo PPPOE, but it's server is not set up.\n\n704\n00:36:22,135 --> 00:36:23,885\nSo I'm going to leave it down for\nright now.\n\n705\n00:36:23,885 --> 00:36:26,715\nBut let's review\nthe configuration in whole.\n\n706\n00:36:26,715 --> 00:36:31,525\nSo, let me just get to the interface,\nand we'll run through what we just did.\n\n707\n00:36:31,525 --> 00:36:36,332\nSo here on the interface, notice that\nPPPOE enable kinda changed a little bit on\n\n708\n00:36:36,332 --> 00:36:39,542\nme, PPPOE enable group global.\n\n709\n00:36:39,542 --> 00:36:42,632\nWell, that’s it just saying\nPPPOE has turned on and\n\n710\n00:36:42,632 --> 00:36:45,232\nit’s using the global group settings,\nwe haven’t overridden that.\n\n711\n00:36:45,232 --> 00:36:47,322\nThere’s some really advance\nstuff you can do in here\n\n712\n00:36:47,322 --> 00:36:49,142\nyou don’t need to know for the exam.\n\n713\n00:36:49,142 --> 00:36:51,442\nAnd then here’s where I designated\nthat dial pool number to use, so\n\n714\n00:36:51,442 --> 00:36:52,602\nit know to look for dialer one.\n\n715\n00:36:53,710 --> 00:36:56,400\nThen, if I scroll down a bit,\nI'll find dialer 1,\n\n716\n00:36:56,400 --> 00:37:00,260\nand you'll see where I set the MTU.\n\n717\n00:37:00,260 --> 00:37:03,040\nI told it to get the IP address from\nthe server, and I turned on PPP.\n\n718\n00:37:03,040 --> 00:37:06,410\nI told it that this was gonna be pool 1,\n\n719\n00:37:06,410 --> 00:37:10,915\nand I put it into a group and designated\nthat access list number one, and\n\n720\n00:37:10,915 --> 00:37:13,425\nthat access list is right down here,\ndialer-list-1 protocol ip permit.\n\n721\n00:37:13,425 --> 00:37:17,855\nAll right?\nWe might go beyond this, right?\n\n722\n00:37:17,855 --> 00:37:22,855\nSo here on the dialer we'll\ndo PPP authentication chap,\n\n723\n00:37:22,855 --> 00:37:26,260\ndesignate our PPP chap host name,\nPPP chap password.\n\n724\n00:37:26,260 --> 00:37:30,830\nIf we're doing NAT, we would do\nIP NAT outside on this interface and\n\n725\n00:37:30,830 --> 00:37:34,010\nthen create our access list and all that\nto configure NAT to go across the link.\n\n726\n00:37:34,010 --> 00:37:35,610\nSo you may need to do a lot more.\n\n727\n00:37:35,610 --> 00:37:38,600\nJust remember in your mind,\nonce you've created the dialer\n\n728\n00:37:38,600 --> 00:37:41,700\nall your configuration needs to go on\nthe dialer not on the physical interface.\n\n729\n00:37:41,700 --> 00:37:43,190\nThe physical interface isn't real anymore.\n\n730\n00:37:43,190 --> 00:37:44,190\nYou don't use it.\n\n731\n00:37:44,190 --> 00:37:46,220\nEverything goes over the dialer,\nall right?\n\n732\n00:37:46,220 --> 00:37:48,780\nSo those are the additional things\nthat you might wanna stick on there,\n\n733\n00:37:48,780 --> 00:37:50,040\na default route.\n\n734\n00:37:50,040 --> 00:37:54,970\nAnd I've got an example of\nthis to put in the show notes.\n\n735\n00:37:54,970 --> 00:37:58,820\nSo when I post it with the episode,\nI've actually got things like, NAT, and\n\n736\n00:37:58,820 --> 00:37:59,790\nall that stuff in there.\n\n737\n00:37:59,790 --> 00:38:02,580\nJust so\nyou can see a full fledged configuration.\n\n738\n00:38:02,580 --> 00:38:04,680\nBut what they want you to know on\nthe exam is just to get it to work.\n\n739\n00:38:04,680 --> 00:38:07,230\nAnd to get it to work,\nthese are the commands we need, right?\n\n740\n00:38:07,230 --> 00:38:10,082\nThere's really not a lot in\nthe general scheme of things.\n\n741\n00:38:11,997 --> 00:38:16,100\nAll right, this guy is not gonna get me\nvery far without a server though, and\n\n742\n00:38:16,100 --> 00:38:16,805\non the exam,\n\n743\n00:38:16,805 --> 00:38:21,330\nthey don't require you to know how to set\nup a server Is that ISP stuff, right?\n\n744\n00:38:21,330 --> 00:38:22,170\nSo if you go and\n\n745\n00:38:22,170 --> 00:38:26,450\ndo the CCNP service provider track,\nyou'll learn how to set that up.\n\n746\n00:38:26,450 --> 00:38:31,878\nBut, I'm just gonna do a quick and\ndirty server over here on HQ.\n\n747\n00:38:31,878 --> 00:38:36,470\nSo, on HQ I have to set up,\nit's called broadband access.\n\n748\n00:38:36,470 --> 00:38:43,440\nSo I'm gonna define a VBA group,\nwhich I will just call PPPOE global.\n\n749\n00:38:43,440 --> 00:38:46,670\nSo it's gonna know that it is\ngonna be a PPPOE server, so\n\n750\n00:38:46,670 --> 00:38:49,140\nI get some virtual\ninterfaces created there.\n\n751\n00:38:49,140 --> 00:38:52,090\nAnd I'm going to say virtual template one.\n\n752\n00:38:53,360 --> 00:38:57,830\nI had a virtual interface on my other\nserver, on my other, on branch one,\n\n753\n00:38:57,830 --> 00:38:59,680\nthis virtual access one.\n\n754\n00:38:59,680 --> 00:39:03,750\nOn a server, you'll have many for all\nthe different clients that connect to you,\n\n755\n00:39:03,750 --> 00:39:05,480\nyou will have a lot of virtual interfaces.\n\n756\n00:39:05,480 --> 00:39:08,560\nSo instead of creating a virtual\ninterface you create a template.\n\n757\n00:39:08,560 --> 00:39:11,310\nA template that can be cloned over and\nover and over again for\n\n758\n00:39:11,310 --> 00:39:14,630\neach person that connects since that's\nwhat I'm defining here, that template.\n\n759\n00:39:15,870 --> 00:39:18,470\nThen, I'm gonna get into that template, so\n\n760\n00:39:18,470 --> 00:39:20,750\nI'll switch to interface\nvirtual template 1.\n\n761\n00:39:20,750 --> 00:39:23,460\nAnd now I'm in the template, and\n\n762\n00:39:23,460 --> 00:39:26,960\nI'm just gonna say IP address,\nso this is my server,\n\n763\n00:39:26,960 --> 00:39:31,370\nso on the server I want to be 192.168\n68.222, I'll pick a whole new network.\n\n764\n00:39:31,370 --> 00:39:38,000\nAll right, so that's the IP\naddress my server is gonna use.\n\n765\n00:39:38,000 --> 00:39:40,690\nThen for the,\nI'm forgetting something, right?\n\n766\n00:39:40,690 --> 00:39:44,700\nI need to reduce my MTU just like\nwe did on the other side, right?\n\n767\n00:39:44,700 --> 00:39:49,170\nSo I'm gonna reduce it by eight bytes\nthere down to 1492 and then I'll say,\n\n768\n00:39:49,170 --> 00:39:54,390\npeer default IP address.\n\n769\n00:39:54,390 --> 00:39:55,210\nPool.\n\n770\n00:39:55,210 --> 00:39:57,551\nI need to tell it where they're\ngonna get the IP address.\n\n771\n00:39:57,551 --> 00:40:01,187\nI'm gonna give the client an IP address,\nand I'm gonna do it from a pool,\n\n772\n00:40:01,187 --> 00:40:02,371\nbasically a DHCP pool.\n\n773\n00:40:02,371 --> 00:40:04,760\nBut I'm not gonna use DHCP to do it.\n\n774\n00:40:04,760 --> 00:40:06,460\nPPP has its own mechanism.\n\n775\n00:40:06,460 --> 00:40:08,060\nThe IPCP mechanism.\n\n776\n00:40:08,060 --> 00:40:10,870\nIt'll hand off this IP for me,\nand so I'm gonna use that.\n\n777\n00:40:10,870 --> 00:40:15,940\nBut I do need to create a pool,\nwhich I'll just call PPPoE-client.\n\n778\n00:40:15,940 --> 00:40:19,180\nSo I'm gonna give them an IP\naddress from this pool.\n\n779\n00:40:19,180 --> 00:40:22,320\nThis pool that I haven't made yet,\nI probably need to make it.\n\n780\n00:40:22,320 --> 00:40:24,489\nAll right, so I've got that defined there.\n\n781\n00:40:25,690 --> 00:40:27,640\nSo it knows the pool to use.\n\n782\n00:40:27,640 --> 00:40:29,760\nLet's see, I've got my virtual interface.\n\n783\n00:40:29,760 --> 00:40:31,620\nIf I was doing authentication,\n\n784\n00:40:31,620 --> 00:40:34,520\nhere's where I would put my\nauthentication in the template.\n\n785\n00:40:34,520 --> 00:40:38,320\nThat way, when it clones this\ntemplate to make the other values,\n\n786\n00:40:38,320 --> 00:40:39,920\nit'll have the settings along with it.\n\n787\n00:40:39,920 --> 00:40:42,390\nSo I would do PPP authentication chat.\n\n788\n00:40:42,390 --> 00:40:44,470\nPPP chat post name whatever.\n\n789\n00:40:44,470 --> 00:40:46,890\nPPP chat password whatever.\n\n790\n00:40:46,890 --> 00:40:51,070\nIf I was doing that on this side which you\nprobably wouldn't, but if I was doing that\n\n791\n00:40:51,070 --> 00:40:54,880\non this side I'd go through and specify\nthose settings here on the template.\n\n792\n00:40:54,880 --> 00:40:57,430\nThe template's what's gonna get\ncloned to create the interfaces.\n\n793\n00:40:59,050 --> 00:41:01,940\nOne other thing I need to do,\nI told it to pull the use, but\n\n794\n00:41:01,940 --> 00:41:04,390\nI haven't created it so\nI'm going to make one real quick.\n\n795\n00:41:04,390 --> 00:41:06,500\nAnd I'll say ip local pool.\n\n796\n00:41:07,500 --> 00:41:12,180\nA local pool is not a DACP pool I'm\nnot using DACP, I'm just using for\n\n797\n00:41:12,180 --> 00:41:13,000\nsomething else.\n\n798\n00:41:13,000 --> 00:41:14,250\nIn this case PPPoE.\n\n799\n00:41:15,280 --> 00:41:19,310\nI called it PPPoE-client and\n\n800\n00:41:19,310 --> 00:41:23,630\nnormally I'd put a range of IPs here but\nsince I've only got one client.\n\n801\n00:41:23,630 --> 00:41:26,420\nI could specify a destination,\nas many as I needed.\n\n802\n00:41:26,420 --> 00:41:28,620\nSince I've only got one client\nI'll stop right there, right?\n\n803\n00:41:28,620 --> 00:41:31,570\nSo it's just gonna get .2, I don't wanna\nhave to guess what IP it gets, right, so\n\n804\n00:41:31,570 --> 00:41:32,460\n.2 is what it'll get.\n\n805\n00:41:35,400 --> 00:41:37,430\nAnd that's pretty much it.\n\n806\n00:41:37,430 --> 00:41:38,980\nSince I had to do it on the other router,\n\n807\n00:41:38,980 --> 00:41:44,930\nI'm gonna assume on this one that I need\nto do a ppoe enable on this interface.\n\n808\n00:41:44,930 --> 00:41:48,830\nBut, since I'm a server, I can't just\nrun pppoe enable, it'll get mad at me.\n\n809\n00:41:48,830 --> 00:41:53,960\nSo, I'll need to add onto\nthat the group global, so\n\n810\n00:41:53,960 --> 00:41:55,740\nit knows where I'm\npulling my configuration.\n\n811\n00:41:55,740 --> 00:41:58,600\nSo now, PPPoE is turned on for\nthat interface.\n\n812\n00:41:59,620 --> 00:42:00,740\nWhen I turned it on for the client,\n\n813\n00:42:00,740 --> 00:42:02,990\nI got a bunch of messages about\nthe virtual interfaces coming up.\n\n814\n00:42:02,990 --> 00:42:05,400\nI didn't get that here\nbecause I'm the server.\n\n815\n00:42:05,400 --> 00:42:07,530\nThe virtual interfaces aren't up yet,\nright?\n\n816\n00:42:07,530 --> 00:42:09,330\nIt's when they connect and\nthe template gets cloned,\n\n817\n00:42:09,330 --> 00:42:11,560\nthat's when they start getting created.\n\n818\n00:42:11,560 --> 00:42:13,870\nBut my client should be able to connect.\n\n819\n00:42:13,870 --> 00:42:15,390\nLet's review that config real quick.\n\n820\n00:42:15,390 --> 00:42:18,200\nAnd again,\nI'll post this config with the show notes.\n\n821\n00:42:18,200 --> 00:42:22,720\nBut if we take a look, what I did in\nthe beginning was to create the BBA,\n\n822\n00:42:22,720 --> 00:42:24,650\nwhich is right here.\n\n823\n00:42:24,650 --> 00:42:26,800\nThere's that bba-group.\n\n824\n00:42:26,800 --> 00:42:29,260\nAnd I assigned a virtual-template to it.\n\n825\n00:42:29,260 --> 00:42:33,300\nAnd then I went into the virtual-template,\nwhich is down here somewhere, there.\n\n826\n00:42:33,300 --> 00:42:36,140\nAnd that's where I set the mtu.\n\n827\n00:42:36,140 --> 00:42:39,140\nI told it the address that\nI was going to use and\n\n828\n00:42:39,140 --> 00:42:41,410\nhow I was going to give\naddresses to the peers.\n\n829\n00:42:41,410 --> 00:42:44,420\nAnd I defined that pool for\nthe addresses for the peers right here.\n\n830\n00:42:45,520 --> 00:42:48,770\nAnd after that we're ready to go, if I\nwanted to do authentication and NAT and\n\n831\n00:42:48,770 --> 00:42:52,070\nall that other good stuff, we would add\nit right here to the virtual template,\n\n832\n00:42:52,070 --> 00:42:52,576\nall right?\n\n833\n00:42:54,618 --> 00:42:58,375\nNext we can jump over to the client and\nbuild the session up.\n\n834\n00:42:58,375 --> 00:42:58,955\nAll right.\n\n835\n00:42:58,955 --> 00:43:01,645\nWhen we build the session up it's\ngonna be built on top of PPPoE and\n\n836\n00:43:01,645 --> 00:43:04,305\nI'll be able to recognize it easily\nbecause of the weird IP I'll get.\n\n837\n00:43:04,305 --> 00:43:07,815\nI'll get an IP from a different network\nin the pool so it's easy to spot.\n\n838\n00:43:07,815 --> 00:43:10,592\nBut we do have a series of debug\ncommands we can use to see it happen.\n\n839\n00:43:10,592 --> 00:43:15,002\nAnd also let's see,\nwhat are some of the easier ones to use?\n\n840\n00:43:15,002 --> 00:43:17,272\nSo, I don't want to go too crazy.\n\n841\n00:43:17,272 --> 00:43:19,482\nWe have commands like show pppoe session,\n\n842\n00:43:20,562 --> 00:43:23,722\nthat'll show us any PPPoE\nconnections we have.\n\n843\n00:43:23,722 --> 00:43:26,142\nI've got a connection, but it's not up.\n\n844\n00:43:26,142 --> 00:43:27,632\nRight, that interface\nis shutdown right now,\n\n845\n00:43:27,632 --> 00:43:30,842\nso that's why it's all down here just\nshowing basically nothing, right.\n\n846\n00:43:30,842 --> 00:43:31,342\nAll zeros.\n\n847\n00:43:32,450 --> 00:43:36,480\nWe've got debug ppp authentication.\n\n848\n00:43:36,480 --> 00:43:38,785\nThat's not a specific to PPPoE.\n\n849\n00:43:38,785 --> 00:43:43,310\nIf you're doing PPP authentication of\nany sort then it'll show you the output.\n\n850\n00:43:43,310 --> 00:43:48,360\nLastly we've got debug pppoe followed\nby a number of different things.\n\n851\n00:43:48,360 --> 00:43:52,340\nRight, the raw data, the elogs,\nthe errors, the events, the packets,\n\n852\n00:43:52,340 --> 00:43:53,300\nand so on.\n\n853\n00:43:53,300 --> 00:43:54,460\nI'm gonna add events.\n\n854\n00:43:56,130 --> 00:44:01,213\nWhoops, if I can spell it, so that we can\nsee the actual PPPOE session build up.\n\n855\n00:44:01,213 --> 00:44:03,819\nAll right.\n\n856\n00:44:03,819 --> 00:44:05,035\nSo there we got one.\n\n857\n00:44:05,035 --> 00:44:06,365\nI gotta padi timer.\n\n858\n00:44:06,365 --> 00:44:07,675\nThat's it trying to build up.\n\n859\n00:44:07,675 --> 00:44:08,495\nThe interface is down.\n\n860\n00:44:08,495 --> 00:44:09,895\nAll right.\n\n861\n00:44:09,895 --> 00:44:12,585\nSo let's go turn that interface on and\nwe'll see some action.\n\n862\n00:44:13,645 --> 00:44:14,285\nOr at least I hope we will.\n\n863\n00:44:15,455 --> 00:44:16,695\nAll right, the interface is gonna come up.\n\n864\n00:44:18,445 --> 00:44:23,300\nAll right, there it goes, and\nppp always should negotiate and come up.\n\n865\n00:44:23,300 --> 00:44:26,155\nNow, in real life land, it's going to come\nup on it's own right away because you've\n\n866\n00:44:26,155 --> 00:44:27,660\ngot a lot of traffic on your network.\n\n867\n00:44:27,660 --> 00:44:30,180\nBut here in my lab, there's no traffic.\n\n868\n00:44:30,180 --> 00:44:31,650\nRemember that access list we defined?\n\n869\n00:44:31,650 --> 00:44:34,160\nThat was what was going\nto bring the tunnel up.\n\n870\n00:44:34,160 --> 00:44:38,700\nAnd so I may have to wait a little bit for\nsomething like cdp to trigger, or\n\n871\n00:44:38,700 --> 00:44:40,900\nsomething else before\nit wakes the tunnel up.\n\n872\n00:44:40,900 --> 00:44:41,810\nAnd that's what just happened.\n\n873\n00:44:41,810 --> 00:44:43,720\nSomething else woke it up.\n\n874\n00:44:43,720 --> 00:44:47,538\nI could have done some pings, but remember\nI don't have an IP address on that\n\n875\n00:44:47,538 --> 00:44:51,493\ninterface, so I might have to wait a while\nbefore I can figure out what to ping.\n\n876\n00:44:51,493 --> 00:44:54,290\nBut here we go,\nit's coming up and we can see.\n\n877\n00:44:54,290 --> 00:45:00,040\nWe sent out our communication E 0/0 and\nwe connected to a server.\n\n878\n00:45:00,040 --> 00:45:05,150\nThe server responded to us and\ngave us a MAC address to use, all right.\n\n879\n00:45:05,150 --> 00:45:08,720\nWe've got a remote and a local MAC\naddress and look at those things.\n\n880\n00:45:08,720 --> 00:45:09,680\nThey're fake.\n\n881\n00:45:09,680 --> 00:45:13,620\nThese are fake MAC addresses to\nuse with our virtual interfaces.\n\n882\n00:45:15,150 --> 00:45:19,824\nSo, the remote, R:, that's the MAC address\nthe other server's gonna use, and L:,\n\n883\n00:45:19,824 --> 00:45:22,754\nthat's the MAC address we're\ngonna use inside of PPP so\n\n884\n00:45:22,754 --> 00:45:24,270\nwe can identify each other.\n\n885\n00:45:25,430 --> 00:45:27,890\nThen, we can see information\nabout the exchange,\n\n886\n00:45:27,890 --> 00:45:30,420\nif we were doing authentication\nthat's what would happen next.\n\n887\n00:45:30,420 --> 00:45:32,670\nI didn't turn on authentication,\nso we don't have it.\n\n888\n00:45:32,670 --> 00:45:36,930\nSo now it just reaches in and it brings\nup the dialer and binds it to a virtual\n\n889\n00:45:36,930 --> 00:45:43,280\ninterface and you'll see that VI2, Virtual\nInterface 2, and DI1, the Dialer 1.\n\n890\n00:45:43,280 --> 00:45:47,040\nThere's that virtual access\ninterface coming up.\n\n891\n00:45:47,040 --> 00:45:49,900\nAnd it should receive an IP\naddress after that, and\n\n892\n00:45:49,900 --> 00:45:52,770\nthen we'll see the virtual\ninterface actually come up.\n\n893\n00:45:52,770 --> 00:45:55,100\nSo there's my virtual access 2.\n\n894\n00:45:55,100 --> 00:45:58,040\nWhat happened to virtual access 1?\n\n895\n00:45:58,040 --> 00:46:01,760\nWell it came up earlier, was trying to\nconnect, and was just sitting there.\n\n896\n00:46:01,760 --> 00:46:05,570\nSo it was timing out,\nvirtual access 2 came up in the mean time.\n\n897\n00:46:05,570 --> 00:46:06,840\nThese are virtual interfaces.\n\n898\n00:46:06,840 --> 00:46:08,130\nYou'll get new ones and old ones.\n\n899\n00:46:08,130 --> 00:46:08,730\nThey'll come and\n\n900\n00:46:08,730 --> 00:46:12,880\ngo all the time and that can make\na bit of a mess in your configuration.\n\n901\n00:46:12,880 --> 00:46:15,460\nThey'll stay in your\nconfiguration sometimes.\n\n902\n00:46:15,460 --> 00:46:16,600\nBut if you have a lot of failures,\n\n903\n00:46:16,600 --> 00:46:19,160\nthey can kinda start small and\nmake things a little messy.\n\n904\n00:46:19,160 --> 00:46:20,240\nBut you'll see them come and go.\n\n905\n00:46:20,240 --> 00:46:23,510\nThose virtual access ones,\nthey're virtual interfaces.\n\n906\n00:46:23,510 --> 00:46:26,453\nIf your line goes idle and\nit goes down it'll usually just remove it,\n\n907\n00:46:26,453 --> 00:46:29,576\nthe interface will disappear until\nyou build another connection on it.\n\n908\n00:46:30,951 --> 00:46:32,120\nBut, it looks like I'm up.\n\n909\n00:46:32,120 --> 00:46:37,243\nIf I do a show ip int br,\nI should see a new interface.\n\n910\n00:46:37,243 --> 00:46:39,200\nThis virtual access 2.\n\n911\n00:46:39,200 --> 00:46:41,080\nThat's the one that came up.\n\n912\n00:46:41,080 --> 00:46:46,493\nI'll see dialer 1 right there,\n192.168.222.2.\n\n913\n00:46:46,493 --> 00:46:49,660\nI've got that IP address on the other\nside and I know that because right here.\n\n914\n00:46:49,660 --> 00:46:51,690\nWhere did that IP address come from?\n\n915\n00:46:51,690 --> 00:46:52,630\nIPCP.\n\n916\n00:46:52,630 --> 00:46:53,670\nRight?\n\n917\n00:46:53,670 --> 00:46:54,640\nPPC assigned it to me.\n\n918\n00:46:56,400 --> 00:46:58,000\nIf I try and ping across the line.\n\n919\n00:47:00,330 --> 00:47:04,620\nSo I'm gonna try and ping the server with\nthe IP I assigned it, I can ping it.\n\n920\n00:47:04,620 --> 00:47:10,177\nAnd if I jump over to the server which is\nmy headquarters and I do a show ip int br.\n\n921\n00:47:12,050 --> 00:47:15,085\nI'll see that I not only\nhave virtual access 1 but\n\n922\n00:47:15,085 --> 00:47:18,700\nI now have virtual access 1.1,\na sub interface.\n\n923\n00:47:18,700 --> 00:47:22,700\nFor each client that connects to a server\nit creates a sub interface to mount to\n\n924\n00:47:22,700 --> 00:47:26,910\nthem, and that sub interface\nwas cloned from this template.\n\n925\n00:47:26,910 --> 00:47:29,230\nRight?\nSo see here is the template, and\n\n926\n00:47:29,230 --> 00:47:32,000\nit matches virtual access 1.1.\n\n927\n00:47:32,000 --> 00:47:35,620\nBut the template shows us down,\ndown cuz it's not really being used,\n\n928\n00:47:35,620 --> 00:47:37,670\nit was cloned to create the others.\n\n929\n00:47:37,670 --> 00:47:41,550\nAnd as more clients connect, well I guess\nI'll run out of IPs cuz I created a pool\n\n930\n00:47:41,550 --> 00:47:44,610\nof one address but as more clients\nconnect they'll each get their\n\n931\n00:47:44,610 --> 00:47:48,620\nown sub interface so that they're isolated\nto be able to communicate to the server.\n\n932\n00:47:48,620 --> 00:47:52,838\nAll right, so\nwe expect to see a couple of downed\n\n933\n00:47:52,838 --> 00:47:56,650\ninterfaces on a PPPOE server, all right?\n\n934\n00:47:56,650 --> 00:47:59,195\nSo the configuration,\nit's not terribly difficult but\n\n935\n00:47:59,195 --> 00:48:02,011\nit's a lot of weird commands\nyou don't normally run, right?\n\n936\n00:48:02,011 --> 00:48:04,251\nMost people don't\nencounter these commands.\n\n937\n00:48:04,251 --> 00:48:05,811\nRonnie, have you used this\nin production at all?\n\n938\n00:48:05,811 --> 00:48:06,660\n>> [CROSSTALK] No, never.\n\n939\n00:48:06,660 --> 00:48:08,160\n>> Yeah.\n>> Yeah, never.\n\n940\n00:48:08,160 --> 00:48:11,800\nOn the 800 series routers, those little\nones that you use with DSL a lot.\n\n941\n00:48:11,800 --> 00:48:15,681\nYou'll see it, but on your bigger routers\nit's rare that you are on DSL into them,\n\n942\n00:48:15,681 --> 00:48:18,660\nand PPPoE becomes something\nthat is less attractive.\n\n943\n00:48:18,660 --> 00:48:20,700\nIf you are on a multi-tenancy network,\n\n944\n00:48:20,700 --> 00:48:23,090\nyou know a network you\nshare with other people.\n\n945\n00:48:23,090 --> 00:48:26,675\nYou can use PPPoE to help\ncontrol who has access to what.\n\n946\n00:48:26,675 --> 00:48:31,120\nYou're usually better off using VLANs or\nIPsec or whatever to do that.\n\n947\n00:48:31,120 --> 00:48:32,900\nPrivate VLANs do it really well.\n\n948\n00:48:32,900 --> 00:48:36,830\nSo there's other technologies that\nlayer to that can solve the problem.\n\n949\n00:48:36,830 --> 00:48:39,560\nBut PPPOE gives you a username and\npassword.\n\n950\n00:48:39,560 --> 00:48:42,880\nAnd it's pretty easy and\nit's supported by a lot of equipment,\n\n951\n00:48:42,880 --> 00:48:45,188\nnot just CISCO but tons of third parties.\n\n952\n00:48:45,188 --> 00:48:50,940\nAll right so\nthat's basically PPPoE in a nutshell.\n\n953\n00:48:50,940 --> 00:48:53,120\nSo in this segment we got\na chance to take a look.\n\n954\n00:48:53,120 --> 00:48:56,680\nWell we started out in the beginning\nof the episode with just looking at\n\n955\n00:48:56,680 --> 00:48:57,405\nPPP in general.\n\n956\n00:48:57,405 --> 00:49:00,260\nRight?\nWe got a chance to see all authentication\n\n957\n00:49:00,260 --> 00:49:02,240\nand how to implement that.\n\n958\n00:49:02,240 --> 00:49:05,944\nAnd we saw just a couple of other caveats,\nlittle things to do with PPP and\n\n959\n00:49:05,944 --> 00:49:06,630\ndebugging.\n\n960\n00:49:07,880 --> 00:49:11,700\nOn PPPoE, which what we did next, we got\na chance to see how to bring that up.\n\n961\n00:49:11,700 --> 00:49:14,690\nAnd really not too much\nto it once it's up.\n\n962\n00:49:14,690 --> 00:49:17,920\nOn the exam, they want you to\nknow the client configuration,\n\n963\n00:49:17,920 --> 00:49:19,150\nnot necessarily the server side.\n\n964\n00:49:19,150 --> 00:49:22,450\nSo memorize the client configuration,\nknow that one, and have it.\n\n965\n00:49:22,450 --> 00:49:25,400\nWhen I post the show notes, I'll post\nboth the client and the server so\n\n966\n00:49:25,400 --> 00:49:25,909\nthat you have them.\n\n967\n00:49:27,600 --> 00:49:28,160\nAll right.\n\n968\n00:49:28,160 --> 00:49:30,750\nRonnie I think we got that pretty good.\n\n969\n00:49:30,750 --> 00:49:32,200\nDid I leave anything out?\n\n970\n00:49:32,200 --> 00:49:34,400\n>> No, I think we covered\nthe objective fairly well.\n\n971\n00:49:34,400 --> 00:49:35,730\nThe Layer 2 technologies.\n\n972\n00:49:35,730 --> 00:49:38,810\nRemember to focus in on that\nclient side configurations.\n\n973\n00:49:38,810 --> 00:49:40,110\nRemember the background behind it too,\n\n974\n00:49:40,110 --> 00:49:44,030\nis that normally where we see it\nis in using the DSL connection.\n\n975\n00:49:44,030 --> 00:49:48,570\nDSL providers like to be able to control\naccess to who gets access to the network.\n\n976\n00:49:48,570 --> 00:49:51,320\nThis may be the way they tend to do it.\n\n977\n00:49:51,320 --> 00:49:54,780\n>> All right, well, this is probably\na pretty good spot for us to wrap up then.\n\n978\n00:49:54,780 --> 00:49:56,810\nRemember if you have\nquestions on any of this,\n\n979\n00:49:56,810 --> 00:50:00,160\ncuz it does get a little tricky,\nfeel free to ask.\n\n980\n00:50:00,160 --> 00:50:02,738\nLive during the show,\nyou can go to itpro.tv/live.\n\n981\n00:50:02,738 --> 00:50:05,740\nYou can post your questions right there\nin the chat room beneath the video.\n\n982\n00:50:05,740 --> 00:50:06,410\nIt's live.\n\n983\n00:50:06,410 --> 00:50:07,730\nWe're watching that chatroom right now.\n\n984\n00:50:07,730 --> 00:50:09,030\nSo you post a question.\n\n985\n00:50:09,030 --> 00:50:09,590\nWe'll answer it.\n\n986\n00:50:09,590 --> 00:50:13,070\nIf you have questions after the show,\nuse our Q&A forums.\n\n987\n00:50:13,070 --> 00:50:14,390\nIf you go into the Q&A forums,\n\n988\n00:50:14,390 --> 00:50:17,430\nyou just use that Q&A link at\nthe top of any one of our pages.\n\n989\n00:50:17,430 --> 00:50:20,970\nYou can post your question there, and\nwe monitor and answer after the show.\n\n990\n00:50:20,970 --> 00:50:23,740\nSo a good way to get in\ncontact with us afterwards.\n\n991\n00:50:23,740 --> 00:50:25,620\nYou can always email us individually but\n\n992\n00:50:25,620 --> 00:50:27,470\nyou never know which of us\nis gonna get to it first.\n\n993\n00:50:27,470 --> 00:50:30,030\nSo if you post to the Q&A,\nyou get us all, right?\n\n994\n00:50:30,030 --> 00:50:32,740\nAnd someone will make sure\nyour question gets answered.\n\n995\n00:50:32,740 --> 00:50:34,850\nWe wanna make sure you You guys\nhave the information you need so\n\n996\n00:50:34,850 --> 00:50:36,780\nthat you can understand this technology.\n\n997\n00:50:36,780 --> 00:50:38,520\nIt's pretty cool stuff.\n\n998\n00:50:38,520 --> 00:50:39,922\n>> It is cool stuff.\n\n999\n00:50:39,922 --> 00:50:43,190\n>> All right, well signing off for\nITproTV, I'm Don Pezet.\n\n1000\n00:50:43,190 --> 00:50:44,538\n>> I'm Ronnie Wong.\n\n1001\n00:50:44,538 --> 00:50:46,618\n>> And we will see you next time.\n\n1002\n00:50:46,618 --> 00:50:56,299\n[MUSIC]\n\n",
          "vimeoId": "109806713"
        },
        {
          "description": "Frame Relay is an older technology for connecting across a Service Provider's Network, which can be really easy to implement. Viewers will see the basic configuration of frame relay in a Point-to-Point configuration, Multipoint Configuration and Full Mesh using physical interfaces (point-to-point) and sub interfaces (multipoint and full-mesh) to show Frame relay’s versatility and use basic commands to verify configuration.",
          "length": "6143",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/ccnproute/2-2-Frame-Relay.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/ccnproute/2-2-Frame-Relay-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/ccnproute/2-2-Frame-Relay-sm.jpg",
          "title": "Frame Relay",
          "transcript": "1\n00:00:00,000 --> 00:00:10,000\n[MUSIC]\n\n2\n00:00:15,011 --> 00:00:22,278\n[SOUND]\n\n3\n00:00:22,278 --> 00:00:32,278\n[MUSIC]\n\n4\n00:00:33,530 --> 00:00:36,722\nAll right, good morning,\ngood afternoon, and good evening, and\n\n5\n00:00:36,722 --> 00:00:38,861\nwelcome back to another\nepisode of IT ProTv.\n\n6\n00:00:38,861 --> 00:00:41,881\nI'm your host, Don Pezet,\nback again with Mr. Ronnie Wong.\n\n7\n00:00:41,881 --> 00:00:42,580\nHow's it going, Ronnie?\n\n8\n00:00:42,580 --> 00:00:43,490\n>> It is going well.\n\n9\n00:00:43,490 --> 00:00:48,370\nI'm just as excited as you are about\nthe upcoming Hobbit movie.\n\n10\n00:00:48,370 --> 00:00:50,700\nThe six part series that never ends.\n\n11\n00:00:50,700 --> 00:00:52,350\n>> The Boredom Of The Rings?\n\n12\n00:00:52,350 --> 00:00:53,900\n>> [LAUGH] The Boredom Of The Rings, yes.\n\n13\n00:00:53,900 --> 00:00:57,740\n[LAUGH] I've never wanted to fall\nasleep in a theater as much as\n\n14\n00:00:57,740 --> 00:00:59,335\nthe last Hobbit movie.\n\n15\n00:00:59,335 --> 00:01:02,540\n[LAUGH] The never ending cycle there.\n\n16\n00:01:02,540 --> 00:01:04,430\nBut speaking of trilogies.\n\n17\n00:01:04,430 --> 00:01:05,360\n>> Yes?\n\n18\n00:01:05,360 --> 00:01:09,370\n>> We're gonna jump back into the trilogy\nof CCNP training, and the first episode\n\n19\n00:01:09,370 --> 00:01:13,068\nis, of course, CCNP Route\n>> [INAUDIBLE] [CROSSTALK] So\n\n20\n00:01:13,068 --> 00:01:17,871\nwe're going to be diving back\ninto CCNP Route this morning,\n\n21\n00:01:17,871 --> 00:01:23,911\nin particular hitting objective 2.2,\nwhich is to explain frame relay.\n\n22\n00:01:23,911 --> 00:01:26,770\nAll right.\nNow, notice what they're saying there.\n\n23\n00:01:26,770 --> 00:01:32,400\nThe actual title of the objective\nis to explain not to configure.\n\n24\n00:01:32,400 --> 00:01:35,260\nWe're going to show you the configuration\npiece too because the best way to\n\n25\n00:01:35,260 --> 00:01:36,820\nunderstand something is\nto actually implement it.\n\n26\n00:01:36,820 --> 00:01:38,410\nThat's how you're going to learn it.\n\n27\n00:01:38,410 --> 00:01:42,790\nBut on the exam you're not going to see\na whole heck of a lot of configuration for\n\n28\n00:01:42,790 --> 00:01:45,780\nframe relay anymore,\nlike in the simulation labs.\n\n29\n00:01:45,780 --> 00:01:47,630\nThey stress other technologies.\n\n30\n00:01:47,630 --> 00:01:50,910\nFrame relay is a very common\ntechnology in enterprises,\n\n31\n00:01:50,910 --> 00:01:52,980\nbut it is one that's on the wane.\n\n32\n00:01:52,980 --> 00:01:55,660\nIt's being replaced by MPLS.\n\n33\n00:01:55,660 --> 00:01:58,890\nSo you're starting to see MPLS\nimplementations all over, and\n\n34\n00:01:58,890 --> 00:02:01,830\ncompanies are moving\naway from frame relay.\n\n35\n00:02:01,830 --> 00:02:05,210\nThat being said, frame relay is\nstill out there quite a bit.\n\n36\n00:02:05,210 --> 00:02:08,520\nAnd it is definitely not an uncommon\ntechnology, you run across it a lot.\n\n37\n00:02:08,520 --> 00:02:13,360\nAnd you probably will for the next\nfive to seven years more than likely.\n\n38\n00:02:13,360 --> 00:02:15,730\nSo it is something we definitely\nneed to be aware of and\n\n39\n00:02:15,730 --> 00:02:17,760\nwe need to know to work with.\n\n40\n00:02:17,760 --> 00:02:19,830\nSo let's start with the basics.\n\n41\n00:02:19,830 --> 00:02:22,130\nWhat is frame relay?\n\n42\n00:02:22,130 --> 00:02:24,080\nWell, oh, sorry.\n\n43\n00:02:24,080 --> 00:02:26,740\n>> Frame relay is a technology\nthat replaces an older\n\n44\n00:02:26,740 --> 00:02:31,060\ntechnology that was really designed\nin the days of ISDN, to try and\n\n45\n00:02:31,060 --> 00:02:34,100\nmake things a little bit easier,\nand faster.\n\n46\n00:02:34,100 --> 00:02:37,760\nBecause of the way that the ISDN\ntechnology then was designed.\n\n47\n00:02:37,760 --> 00:02:43,010\nSo now we move everything to a private\nWAN connection, and move to faster links.\n\n48\n00:02:43,010 --> 00:02:46,300\nAnd be able to actually have more\ncustomers connect into that one\n\n49\n00:02:46,300 --> 00:02:49,920\nconnection instead of just doing\npoint-to-point links is where we begin.\n\n50\n00:02:49,920 --> 00:02:54,670\n>> One of the big obstacles we had in the\n90s, really, is when this was at its peak.\n\n51\n00:02:54,670 --> 00:02:56,000\nOne of the big obstacles was,\n\n52\n00:02:56,000 --> 00:03:01,010\nif you wanted a private line between\nmultiple geographic locations,\n\n53\n00:03:01,010 --> 00:03:04,080\nit was really difficult to get that in the\n90s, especially one with good bandwidth.\n\n54\n00:03:04,080 --> 00:03:04,640\nRight?\n\n55\n00:03:04,640 --> 00:03:07,780\nSo you can get a T1 line that\nwould connect you to the Internet.\n\n56\n00:03:07,780 --> 00:03:10,040\nAnd it would usually cost\nyou about $1200 a month, or\n\n57\n00:03:10,040 --> 00:03:12,720\nsomething pretty ridiculous like that.\n\n58\n00:03:12,720 --> 00:03:14,470\nSo there really expensive, but\n\n59\n00:03:14,470 --> 00:03:16,970\nthey would connect you to the Internet,\nto a public network.\n\n60\n00:03:16,970 --> 00:03:20,830\nIf you wanted a private\nlink between two cities.\n\n61\n00:03:20,830 --> 00:03:21,820\nRight?\n\n62\n00:03:21,820 --> 00:03:23,680\nThere really wasn't a great solution,\n\n63\n00:03:23,680 --> 00:03:27,440\nwe didn't have fiber optic networks spread\nall over the place like we do today.\n\n64\n00:03:27,440 --> 00:03:29,910\nBut telcos did, the telephone companies.\n\n65\n00:03:29,910 --> 00:03:33,740\nBut regular private industries and\ninternet service providers didn't.\n\n66\n00:03:33,740 --> 00:03:36,220\nSo if you wanted to connect\ntwo separate cities,\n\n67\n00:03:36,220 --> 00:03:41,740\nyou could do a really incredibly expensive\nlink, or nothing, you could rely\n\n68\n00:03:41,740 --> 00:03:45,390\non something like the internet which was\nstill in the fledgling stages back then.\n\n69\n00:03:45,390 --> 00:03:49,460\nSo frame relay was designed to\nbe kind of an intermediary.\n\n70\n00:03:49,460 --> 00:03:52,820\nA neat way to be able to interconnect\ncompanies or buildings or\n\n71\n00:03:52,820 --> 00:03:56,220\nwhatever across the telephone\ncompany's network.\n\n72\n00:03:56,220 --> 00:03:57,870\nSo not the public internet, right?\n\n73\n00:03:57,870 --> 00:04:01,440\nNot a shared network where you've gotta\nworry about other people seeing your data.\n\n74\n00:04:01,440 --> 00:04:04,010\nBut across the telephone company's\nnetwork, the same networks that people\n\n75\n00:04:04,010 --> 00:04:08,330\nmake phone calls over, so they're private\nchannels that are built up and you have\n\n76\n00:04:08,330 --> 00:04:12,740\nthe equivalent of a dedicated link running\nbetween one of your facilities and another\n\n77\n00:04:12,740 --> 00:04:16,185\nfacility, even though the facilities\nmight be in completely separate cities.\n\n78\n00:04:16,185 --> 00:04:21,250\nNow it is built atop\nthe telephone company's network.\n\n79\n00:04:21,250 --> 00:04:26,270\nAnd with frame relay, the bulk of the work\nis actually done by the telephone company.\n\n80\n00:04:26,270 --> 00:04:30,458\nSo when it comes to implementing\nframe relay, it can be super easy.\n\n81\n00:04:30,458 --> 00:04:34,430\nI've done, I've lost count,\n\n82\n00:04:34,430 --> 00:04:39,620\nI've done well over 150 frame\nrelay installs in my career.\n\n83\n00:04:39,620 --> 00:04:41,990\nI've dealt with it a lot.\n\n84\n00:04:41,990 --> 00:04:45,310\nI worked at an insurance company\nnot too terribly long ago.\n\n85\n00:04:45,310 --> 00:04:49,070\nWhere we had,\nwell actually there we had at\n\n86\n00:04:49,070 --> 00:04:51,880\nleast 110 frame relay lines\njust in that one company.\n\n87\n00:04:51,880 --> 00:04:54,930\nNot counting the ones I've dealt\nwith at other organizations.\n\n88\n00:04:54,930 --> 00:04:59,670\nAnd with these connections, a lot of the\ntime you call the telephone companies and\n\n89\n00:04:59,670 --> 00:05:02,390\nsay, hey I need a drop\nhere in this building and\n\n90\n00:05:02,390 --> 00:05:05,560\nI need a drop in this other\nbuilding in this other city.\n\n91\n00:05:05,560 --> 00:05:09,040\nAnd they say, okay we'll put that in place\nand what kind of routers do you have?\n\n92\n00:05:09,040 --> 00:05:13,610\nAnd I would say, all right well at\nthis location I've got a 2610 and\n\n93\n00:05:13,610 --> 00:05:16,790\nat that location I've got whatever and\nthey would say, all right.\n\n94\n00:05:16,790 --> 00:05:19,520\nWe'll send you the config file and\nthey would send you the configuration,\n\n95\n00:05:19,520 --> 00:05:21,400\nyou'd paste it in the router and\nyou were done.\n\n96\n00:05:21,400 --> 00:05:24,670\nThe phone company actually\ndid the work for you, right.\n\n97\n00:05:24,670 --> 00:05:26,960\nThey are the ones that\nmanage all of this stuff.\n\n98\n00:05:26,960 --> 00:05:29,120\nOther times it was a little harder\nwhen we had to get involved, and\n\n99\n00:05:29,120 --> 00:05:30,880\nwe'll show you all the steps here.\n\n100\n00:05:30,880 --> 00:05:33,320\nBut at the end of the day, the hard\nwork's done by the telephone company and\n\n101\n00:05:33,320 --> 00:05:35,850\nthey feed you the data that you need.\n\n102\n00:05:35,850 --> 00:05:38,890\nNow that name, frame relay, right.\n\n103\n00:05:38,890 --> 00:05:43,040\nThe first word is frame, and in our\nminds we should be thinking, frames.\n\n104\n00:05:43,040 --> 00:05:45,120\nFrames are layer two, right?\n\n105\n00:05:45,120 --> 00:05:50,740\nFrame relay is a layer two technology,\nit's taking the place of ethernet.\n\n106\n00:05:50,740 --> 00:05:54,170\nAnd so it has to do all the various\nthings that we would normally do\n\n107\n00:05:54,170 --> 00:05:57,790\ninside of ethernet at layer two,\nand basically make up for\n\n108\n00:05:57,790 --> 00:06:00,340\nthat across these\ntelephone company networks.\n\n109\n00:06:00,340 --> 00:06:04,140\nAnd then layer three and\nhigher, it's the same, right?\n\n110\n00:06:04,140 --> 00:06:07,560\nWe use IP addressing at layer three, and\ngo up, and you can do whatever the heck\n\n111\n00:06:07,560 --> 00:06:10,780\nyou want with all the other layers,\nbut we're just swapping out layer two.\n\n112\n00:06:10,780 --> 00:06:13,320\nSo things like MAC addresses go away.\n\n113\n00:06:13,320 --> 00:06:15,570\nWe don't have MAC\naddresses in frame relay.\n\n114\n00:06:15,570 --> 00:06:20,110\nAnd other things like LLC,\nthe link layer control and\n\n115\n00:06:20,110 --> 00:06:23,960\nthose things, they're a part\nof an ethernet communications.\n\n116\n00:06:23,960 --> 00:06:25,890\nThey're not a part of frame relays.\n\n117\n00:06:25,890 --> 00:06:28,390\nSo frame relay replaces all of that.\n\n118\n00:06:28,390 --> 00:06:31,370\nWhen we send data across the line it\nhas to be formatted to handle that.\n\n119\n00:06:31,370 --> 00:06:34,500\nIt crosses the frame relay network and\nthen at the other end it gets\n\n120\n00:06:34,500 --> 00:06:37,100\ndumped on our network as\nregular ethernet traffic again.\n\n121\n00:06:38,930 --> 00:06:42,910\nAll right, so, in that process there's\na few things we have to kind of grasp,\n\n122\n00:06:42,910 --> 00:06:45,000\nwe have to get our minds around.\n\n123\n00:06:45,000 --> 00:06:47,760\nIf we don't have MAC addresses and\n\n124\n00:06:47,760 --> 00:06:50,450\nMAC addresses are really how we\ncommunicate to other machines on\n\n125\n00:06:50,450 --> 00:06:55,010\nthe network, how do we communicate to\nother systems on a frame relay network?\n\n126\n00:06:55,010 --> 00:07:00,250\nWell, the short is you don’t, you actually\ndon’t connect directly to that remote.\n\n127\n00:07:00,250 --> 00:07:02,590\nSo if I have two cities that\nare connected with frame relay,\n\n128\n00:07:02,590 --> 00:07:04,140\nthey don’t talk directly.\n\n129\n00:07:04,140 --> 00:07:08,230\nYou actually talk to your\ntelephone company switch.\n\n130\n00:07:08,230 --> 00:07:10,800\nYour telephone company will\nhave a switch usually within\n\n131\n00:07:10,800 --> 00:07:12,700\ntwo miles of your building, right.\n\n132\n00:07:12,700 --> 00:07:13,930\nIf they don't have their CO,\n\n133\n00:07:13,930 --> 00:07:17,780\ntheir central office,\nthey'll normally have sub-switches.\n\n134\n00:07:17,780 --> 00:07:20,380\nAnd the sub-switches spread\nall over the cities.\n\n135\n00:07:20,380 --> 00:07:23,350\nIf you're in a big city like New York,\nyou probably never see these,\n\n136\n00:07:23,350 --> 00:07:24,500\ncuz they're underground.\n\n137\n00:07:24,500 --> 00:07:27,200\nBut if you're in a little city\nlike ours here in Gainesville,\n\n138\n00:07:27,200 --> 00:07:30,280\nyou'll see them as these big\ngreen boxes or even some big\n\n139\n00:07:30,280 --> 00:07:34,440\nsilver ones that are even taller that will\nbe set at various street intersections.\n\n140\n00:07:34,440 --> 00:07:36,520\nThose are usually your\ntelephone company switches.\n\n141\n00:07:36,520 --> 00:07:39,515\nThey can be cable sometimes but\nthey're usually telephone company.\n\n142\n00:07:39,515 --> 00:07:44,245\nAnd, they put those every so often, so\nyou've got a connection that is close by.\n\n143\n00:07:44,245 --> 00:07:49,555\nSo, they can run connections into your\nneighborhood or office space or wherever.\n\n144\n00:07:49,555 --> 00:07:52,799\nSo, that's what you're actually\nconnecting with is that switch.\n\n145\n00:07:52,799 --> 00:07:57,645\nOnce the telephone company receives\nyour communications, they say, oh,\n\n146\n00:07:57,645 --> 00:08:00,749\nthis is coming from\ncustomer number 1754 and\n\n147\n00:08:00,749 --> 00:08:05,910\nI need to direct that Over here, and\nthey put a virtual circuit in place.\n\n148\n00:08:05,910 --> 00:08:09,370\nThe virtual circuit is saying that\nyour traffic from this location,\n\n149\n00:08:09,370 --> 00:08:10,720\ngoes to this other location.\n\n150\n00:08:10,720 --> 00:08:15,230\nAnd it passes it weaves its way\nthrough the telephone company network.\n\n151\n00:08:15,230 --> 00:08:19,110\nAnd it's all invisible to you,\nbecause this is layer two.\n\n152\n00:08:19,110 --> 00:08:21,660\nThey don't mess with your IP addresses,\nyour routes, none of that.\n\n153\n00:08:21,660 --> 00:08:23,810\nStuff layer three and above,\ncompletely untouched.\n\n154\n00:08:23,810 --> 00:08:28,650\nSo at layer two, they're taking your data\nand shuttling it to the other side, so\n\n155\n00:08:28,650 --> 00:08:32,490\na frame is really\ninvisible to our clients.\n\n156\n00:08:32,490 --> 00:08:36,500\nBut the routers they have to talk to that\nswitch, so it is visible to the routers,\n\n157\n00:08:36,500 --> 00:08:38,860\nthey see it, and\nthat's why we gotta configure there.\n\n158\n00:08:38,860 --> 00:08:42,070\nAnd that's why this is in\nthe route certification and\n\n159\n00:08:42,070 --> 00:08:45,030\nnot in the layer two,\nthe switch certification.\n\n160\n00:08:47,220 --> 00:08:50,150\nRonnie, you whipped up a nice\nlittle diagram that illustrates\n\n161\n00:08:50,150 --> 00:08:50,910\nthis point, right?\n\n162\n00:08:50,910 --> 00:08:57,140\nLet me pull this up, I guess it would\nhelp if I was actually sharing my screen.\n\n163\n00:08:57,140 --> 00:09:00,880\nI'm keeping it private,\nI don't want you guys to see my diagram.\n\n164\n00:09:00,880 --> 00:09:04,070\nBut basically,\nwhen you connect to that local switch,\n\n165\n00:09:04,070 --> 00:09:06,880\nyou're connecting to one\ntelephone company switch.\n\n166\n00:09:06,880 --> 00:09:10,220\nBut there's tens, hundreds,\n\n167\n00:09:10,220 --> 00:09:14,870\nmaybe even thousands of these\nswitches spread throughout your city.\n\n168\n00:09:14,870 --> 00:09:18,590\nAnd then as you go between cities,\nthere's even more of these switches.\n\n169\n00:09:18,590 --> 00:09:21,610\nAnd telephone switches\nare a magical beast, right?\n\n170\n00:09:21,610 --> 00:09:25,320\nThey're very specific, they're designed\nfor telephone calls, and ISBN, and\n\n171\n00:09:25,320 --> 00:09:25,820\nframe relay.\n\n172\n00:09:25,820 --> 00:09:29,550\nThese technologies that\nthe phone company manages.\n\n173\n00:09:29,550 --> 00:09:31,330\nAnd they're made by various vendors,\n\n174\n00:09:31,330 --> 00:09:34,130\nthey might by Cisco switches,\nsometimes they are.\n\n175\n00:09:34,130 --> 00:09:35,220\nSometimes they're Nortel,\n\n176\n00:09:35,220 --> 00:09:39,640\neven though Nortel is now bankrupt,\ntheir switches are still pretty prevalent.\n\n177\n00:09:39,640 --> 00:09:41,940\nThey might be StrataCom or\n\n178\n00:09:41,940 --> 00:09:45,080\nsome of the other companies that are out\nthere that make these giant switches.\n\n179\n00:09:45,080 --> 00:09:46,840\nAnd they're spread all over the place.\n\n180\n00:09:46,840 --> 00:09:49,610\nAnd the telephone company takes\ncare of mapping those together or\n\n181\n00:09:49,610 --> 00:09:50,770\nbuilding the connections.\n\n182\n00:09:50,770 --> 00:09:53,570\nIt's almost always fiber\noptics in between them,\n\n183\n00:09:53,570 --> 00:09:56,220\nalthough in some smaller cities\nyou might still have copper.\n\n184\n00:09:56,220 --> 00:09:58,775\nSo sometimes it's just copper or\nbetween the switches, but\n\n185\n00:09:58,775 --> 00:10:00,425\na lot of times it's fiber.\n\n186\n00:10:00,425 --> 00:10:03,345\nAnd these will usually be\na couple of miles apart, so even\n\n187\n00:10:03,345 --> 00:10:06,445\nthose these are just little lines here,\nthese might be a few miles apart as we go.\n\n188\n00:10:07,865 --> 00:10:11,275\nSo when we go to my frame-relay,\nwe're telling the company.\n\n189\n00:10:11,275 --> 00:10:15,485\nHey, I've got a headquarters here and\nthis might be in Gainesville, Florida.\n\n190\n00:10:15,485 --> 00:10:20,460\nAnd then I've got a branch down here which\nmight also be in Gainesville, Florida.\n\n191\n00:10:20,460 --> 00:10:24,320\nAnd I might have another branch over here\nthat might be in Orlando, Florida or\n\n192\n00:10:24,320 --> 00:10:26,940\nAtlanta, Georgia,\nsome different city somewhere else.\n\n193\n00:10:28,290 --> 00:10:32,380\nAnd when you buy that, the telephone\ncompany will go to the nearest switch to\n\n194\n00:10:32,380 --> 00:10:34,540\nyour building and they'll run you a link.\n\n195\n00:10:34,540 --> 00:10:36,250\nIt's probably already there, right?\n\n196\n00:10:36,250 --> 00:10:38,900\nBecause they run phone lines everywhere\nand they kinda piggyback off of that, so\n\n197\n00:10:38,900 --> 00:10:40,700\nthey probably already\ngot the link in place.\n\n198\n00:10:40,700 --> 00:10:44,150\nBut if not they'll run one, and they'll\nrun that link in your building, and\n\n199\n00:10:44,150 --> 00:10:48,410\nyou now have a connection to that switch\nthen they go back to their office.\n\n200\n00:10:48,410 --> 00:10:50,800\nAnd they say, hey guys,\ncan somebody build a circuit?\n\n201\n00:10:50,800 --> 00:10:56,180\nAnd their engineers on the back-end will\nbuild a circuit between this switch,\n\n202\n00:10:56,180 --> 00:10:59,520\nand the switch nearest to the destination.\n\n203\n00:10:59,520 --> 00:11:02,830\nAnd that virtual circuit is like\na map across their network.\n\n204\n00:11:02,830 --> 00:11:05,080\nAnd it's invisible,\nit's like a tunnel, almost.\n\n205\n00:11:05,080 --> 00:11:07,630\nIt's not a true tunnel,\nbut it's like that.\n\n206\n00:11:07,630 --> 00:11:12,110\nSo that any traffic we output from\nbranch one will hit this switch, and\n\n207\n00:11:12,110 --> 00:11:14,130\nthe switch will know to\nforward it to this switch.\n\n208\n00:11:14,130 --> 00:11:16,150\nThat switch will know to\nforward it to this one, and\n\n209\n00:11:16,150 --> 00:11:20,080\nthat'll know to forward it to headquarters\nand headquarters will receive it.\n\n210\n00:11:20,080 --> 00:11:21,990\nAnd we don't see that infrastructure,\n\n211\n00:11:21,990 --> 00:11:25,960\nit's all hidden to us,\nthat's the frame-relay cloud.\n\n212\n00:11:25,960 --> 00:11:30,190\nAnd for the exam, you don't need to\nknow how to setup the frame-relay cloud.\n\n213\n00:11:30,190 --> 00:11:33,070\nIt's really not that big of a deal but\nyou don't have to worry about that,\n\n214\n00:11:33,070 --> 00:11:34,990\nwe're worried about the router side.\n\n215\n00:11:34,990 --> 00:11:36,940\nAnd so,\nwe're really being frame-relay clients.\n\n216\n00:11:38,190 --> 00:11:40,690\nSo, we just need to define enough\ninformation to be able to connect\n\n217\n00:11:40,690 --> 00:11:41,210\nto that switch.\n\n218\n00:11:42,920 --> 00:11:45,830\nNow, that circuit that we\nbuilt across the cloud?\n\n219\n00:11:45,830 --> 00:11:53,680\nThat is a PVC, or a Permanent Virtual\nCircuit, why is it called that?\n\n220\n00:11:53,680 --> 00:11:57,500\n>> The permanent virtual circuit\nestablishes really a point-to-point\n\n221\n00:11:57,500 --> 00:12:02,260\nconnection, so that our traffic goes\nthrough that one point no matter what.\n\n222\n00:12:02,260 --> 00:12:06,430\nThe nice thing about the frame-relay\ncloud is if one path is blocked,\n\n223\n00:12:06,430 --> 00:12:08,810\nit can still rebuild that\ncircuit all the way around, so\n\n224\n00:12:08,810 --> 00:12:11,525\nthat we have a permanent\nconnection to the other side.\n\n225\n00:12:11,525 --> 00:12:14,465\nThis is in contrast with something\nlike what we call an SVC or\n\n226\n00:12:14,465 --> 00:12:15,985\nSwitch Virtual Circuit.\n\n227\n00:12:15,985 --> 00:12:18,755\nWhich is more like the telephone call,\nsoon as somebody hangs up\n\n228\n00:12:18,755 --> 00:12:21,725\nit drops that circuit and then\nrebuilds another one when it needs to.\n\n229\n00:12:21,725 --> 00:12:25,125\nSo this one's always up inside\nof that cloud, and that means\n\n230\n00:12:25,125 --> 00:12:28,315\nwe don't ever have to worry about\ndialing in or doing anything like that.\n\n231\n00:12:28,315 --> 00:12:32,075\nIt's gonna maintain its connection\nall the way through that network.\n\n232\n00:12:32,075 --> 00:12:36,120\n>> Yeah, switch virtual circuits,\nthey're really useful when you've got\n\n233\n00:12:36,120 --> 00:12:39,150\ndifferent places you're gonna connect to,\njust like a phone call, right?\n\n234\n00:12:39,150 --> 00:12:40,950\nBut with frame-relay,\nwe don't normally do that.\n\n235\n00:12:40,950 --> 00:12:44,270\nWe're always going to the same place,\nso it's a virtual circuit but\n\n236\n00:12:44,270 --> 00:12:48,110\nit's permanent, it put it in place and\nit's always up.\n\n237\n00:12:48,110 --> 00:12:51,080\nWell, unless you screw up your equipment,\nit's always up.\n\n238\n00:12:51,080 --> 00:12:55,320\nSo, even if you take your routers and turn\nthem off, the circuit is still defined.\n\n239\n00:12:55,320 --> 00:12:57,770\nIt’s still there and\nit’s still held open waiting for you.\n\n240\n00:12:57,770 --> 00:13:00,700\nYou just need to connect on the ends,\nand then it comes up.\n\n241\n00:13:00,700 --> 00:13:03,970\nNow that makes frame-relay\na tricky one to troubleshoot,\n\n242\n00:13:05,040 --> 00:13:09,750\nbecause when you bring your router up,\nit's gonna connect to the local switch,\n\n243\n00:13:09,750 --> 00:13:13,540\nand you might be connected to\nthe local switch just fine.\n\n244\n00:13:13,540 --> 00:13:15,890\nYou can see that switch,\nyou can work with it, and\n\n245\n00:13:15,890 --> 00:13:17,960\neverything is up, the interface is up.\n\n246\n00:13:18,970 --> 00:13:23,610\nBut if the router at the other\nend is down, you don't know it,\n\n247\n00:13:23,610 --> 00:13:24,300\nyour connection's up.\n\n248\n00:13:25,330 --> 00:13:29,450\nSo, we can't rely on things like just,\nis our interface up?\n\n249\n00:13:29,450 --> 00:13:31,580\nCuz our interface might say up, up, but\n\n250\n00:13:31,580 --> 00:13:35,800\nwe're not able to send any data across\nit because the other end is down.\n\n251\n00:13:35,800 --> 00:13:37,880\nSo when we troubleshoot frame-relay,\n\n252\n00:13:37,880 --> 00:13:41,250\nwe've gotta look at not just our\nconnection to the Toko switch.\n\n253\n00:13:41,250 --> 00:13:44,940\nBut the health of the PVC itself,\nthat virtual circuit,\n\n254\n00:13:44,940 --> 00:13:49,280\nto see whether the circuit is truly\nfunctional if the other end is responding.\n\n255\n00:13:49,280 --> 00:13:51,780\nSo, we've got a few extra\nthings that we look at, so\n\n256\n00:13:51,780 --> 00:13:55,450\nwhile we don't have to configure this\ncloud, these switches in between.\n\n257\n00:13:55,450 --> 00:13:58,070\nWe do at least need to\nmonitor the circuit,\n\n258\n00:13:58,070 --> 00:14:00,650\njust to tell the health\nof our frame-relay.\n\n259\n00:14:00,650 --> 00:14:04,050\nNow, one of the neatest\nfeatures of frame-relay\n\n260\n00:14:04,050 --> 00:14:08,250\nis the fact that these circuits\ncould be reconfigured fairly easily.\n\n261\n00:14:08,250 --> 00:14:10,670\nAnd that's how a lot of\nenterprises use this, so\n\n262\n00:14:10,670 --> 00:14:15,330\na common deployment scenario\nis to have a headquarters.\n\n263\n00:14:15,330 --> 00:14:21,140\nAnd then somewhere else,\nto have a disaster recovery site.\n\n264\n00:14:21,140 --> 00:14:24,240\nI'm gonna have my headquarters\nright here in Gainesville, but\n\n265\n00:14:24,240 --> 00:14:27,150\nmy disaster recovery site maybe\nit's up in Atlanta, Georgia.\n\n266\n00:14:28,310 --> 00:14:35,660\nSo, if it's in a different location then I\ngo and I get a frame relay line run to it.\n\n267\n00:14:35,660 --> 00:14:38,630\nAnd it'll probably be plugged into\na different switch somewhere.\n\n268\n00:14:38,630 --> 00:14:40,280\nSo, let me just get that plugged in.\n\n269\n00:14:40,280 --> 00:14:42,920\nAnd so, there's my disaster recovery site.\n\n270\n00:14:42,920 --> 00:14:46,580\nMy branches have permanent\nvirtual circuits that\n\n271\n00:14:46,580 --> 00:14:48,310\nlink them back to headquarters.\n\n272\n00:14:48,310 --> 00:14:49,770\nOr at least we normally would,\n\n273\n00:14:49,770 --> 00:14:55,250\nwe would come in and tie that line\nis exactly not what I wanted.\n\n274\n00:14:55,250 --> 00:14:59,450\nBut they'd build a circuit that\nlooked something like this,\n\n275\n00:14:59,450 --> 00:15:01,860\nlet's do red here, make it all pretty.\n\n276\n00:15:03,220 --> 00:15:08,650\nSo they get a permanent circuit put in\nplace that looks something like that.\n\n277\n00:15:08,650 --> 00:15:11,520\nAnd that's connecting them\nto the headquarters, and\n\n278\n00:15:11,520 --> 00:15:14,890\nall the little switches\nin-between are invisible.\n\n279\n00:15:14,890 --> 00:15:17,530\nThey don't see that,\nthere's those two connections.\n\n280\n00:15:17,530 --> 00:15:21,740\nWell, if my headquarters fails,\nheadquarters goes offline.\n\n281\n00:15:21,740 --> 00:15:26,000\nI can call the Telco company real quick\nand I say, guys we're having a disaster,\n\n282\n00:15:26,000 --> 00:15:27,970\nthe headquarters is down.\n\n283\n00:15:27,970 --> 00:15:33,290\nCan you move our PVCs to point\nto the disaster recovery site?\n\n284\n00:15:33,290 --> 00:15:35,890\nAnd at the telephone\ncompany they can say sure.\n\n285\n00:15:35,890 --> 00:15:38,470\nWe'll just reach out,\nwe'll modify those mappings,\n\n286\n00:15:38,470 --> 00:15:41,450\nand now we'll point those,\nthat didn't work.\n\n287\n00:15:41,450 --> 00:15:48,924\nWe'll point those endpoints to map,\nto the disaster recovery center instead.\n\n288\n00:15:48,924 --> 00:15:53,641\nAnd they'll move it, and now your branches\nare connected to DR, just like that.\n\n289\n00:15:53,641 --> 00:15:55,917\nYou don't have to go and\nchange anything at the branches.\n\n290\n00:15:55,917 --> 00:15:57,600\nNow they're switched over.\n\n291\n00:15:57,600 --> 00:16:00,869\nIf you have two branches that's not\nreally saving you a lot of time right?\n\n292\n00:16:00,869 --> 00:16:04,098\nBut if you have 1,000 branches right,\nif you're a massive organization,\n\n293\n00:16:04,098 --> 00:16:05,722\nyou have 1,000 offices out there.\n\n294\n00:16:05,722 --> 00:16:09,700\nYou could switch all 1,000 of them to\nDR at a moment's notice, all right.\n\n295\n00:16:11,000 --> 00:16:12,950\nThat's really cool.\n\n296\n00:16:12,950 --> 00:16:18,230\nAnd for the longest time frame relay was\nthe only technology that could do that.\n\n297\n00:16:18,230 --> 00:16:20,760\nAnd so that was why it was so\ngenerally accepted.\n\n298\n00:16:20,760 --> 00:16:22,172\nAnd why we still see it in enterprises.\n\n299\n00:16:22,172 --> 00:16:26,273\nAnd if you're relying on it for something\nas critical as disaster recovery,\n\n300\n00:16:26,273 --> 00:16:28,550\nyou can see why you'd\nbe slow to change it.\n\n301\n00:16:28,550 --> 00:16:31,115\nMPLS can do the same thing.\n\n302\n00:16:31,115 --> 00:16:36,280\nBut it requires changing over a technology\nthat you reply on for disaster recovery.\n\n303\n00:16:36,280 --> 00:16:39,830\nSo companies are slow to adopt MPLS but\nwe're seeing that happen over time.\n\n304\n00:16:39,830 --> 00:16:41,941\nAll right, so\nthis is a neat thing, and in fact,\n\n305\n00:16:41,941 --> 00:16:44,324\nwhen you set up frame relay\nwith a telephone provider.\n\n306\n00:16:44,324 --> 00:16:48,374\nIf you tell them this is what you're gonna\ndo, then they'll actually set all this\n\n307\n00:16:48,374 --> 00:16:51,780\nstuff up ahead of time so\nthat you can quickly failover.\n\n308\n00:16:51,780 --> 00:16:54,130\nAnd these virtual circuits,\nthey're virtual.\n\n309\n00:16:54,130 --> 00:16:55,194\nThey don't cost money, right?\n\n310\n00:16:55,194 --> 00:16:58,027\nIt's just, well, you might have to pay for\ninitial sign up.\n\n311\n00:16:58,027 --> 00:16:59,210\nBut they're virtual.\n\n312\n00:16:59,210 --> 00:17:01,932\nThey're just sitting there\nin place of the switches, so\n\n313\n00:17:01,932 --> 00:17:04,653\nyou can even reach out to\nthe phone company and say, hey,\n\n314\n00:17:04,653 --> 00:17:07,505\ncan you guys go ahead and\nbuild two sets of tunnels, right?\n\n315\n00:17:07,505 --> 00:17:11,457\nOne that runs from my branch to\nthe Disaster Recovery Center,\n\n316\n00:17:11,457 --> 00:17:14,400\nand one that runs up to the headquarters.\n\n317\n00:17:14,400 --> 00:17:19,631\nSo that each of my branches\nactually has two connections.\n\n318\n00:17:19,631 --> 00:17:23,624\nIt's not like point to point lines where\nif I wanted a connection to headquarters\n\n319\n00:17:23,624 --> 00:17:27,395\nand I want a connection to disaster\nrecovery I had to buy two T1 lines right.\n\n320\n00:17:27,395 --> 00:17:30,340\nIt's not like that,\nhere they're just virtual circuits.\n\n321\n00:17:30,340 --> 00:17:34,790\nI've got one connection to\nthe local telco switch and\n\n322\n00:17:34,790 --> 00:17:39,220\nthen I've got multiple virtual circuits\nthat go to different destinations.\n\n323\n00:17:39,220 --> 00:17:39,940\nAll right?\n\n324\n00:17:39,940 --> 00:17:42,700\nThese are called\nmultipoint connections and\n\n325\n00:17:42,700 --> 00:17:45,465\nit's another great benefit of frame relay.\n\n326\n00:17:45,465 --> 00:17:49,018\nAnd Ronnie, I'm going to rely on another\none of your pictures here because you show\n\n327\n00:17:49,018 --> 00:17:51,165\nsome of the different ways\nwe can implement that.\n\n328\n00:17:51,165 --> 00:17:53,185\nRight?\nLet's take a look at these.\n\n329\n00:17:53,185 --> 00:17:56,435\nThe first one is one of\nthe very very popular ones.\n\n330\n00:17:56,435 --> 00:17:59,175\nRight?\nWhich is a hub and spoke topology.\n\n331\n00:17:59,175 --> 00:18:03,134\nSo the hub and spoke, this is the idea\nof us having a headquarters and\n\n332\n00:18:03,134 --> 00:18:05,460\nthen we have a bunch of branches.\n\n333\n00:18:05,460 --> 00:18:09,020\nAnd we can take that environment and\n\n334\n00:18:09,020 --> 00:18:13,892\neach branch has one connection to their\nlocal telco and, the local telco switch,\n\n335\n00:18:13,892 --> 00:18:17,160\nand then they get a virtual circuit that\nleads them back to the headquarters.\n\n336\n00:18:17,160 --> 00:18:20,890\nNow if you had three branches and\nyou were doing point to point T1s.\n\n337\n00:18:20,890 --> 00:18:23,850\nThat would mean you'd need\na T1 at each branch and\n\n338\n00:18:23,850 --> 00:18:27,290\nyou'd need three T1s here at headquarters,\nright?\n\n339\n00:18:27,290 --> 00:18:28,550\nOne for each branch.\n\n340\n00:18:28,550 --> 00:18:29,930\nThat starts to get expensive.\n\n341\n00:18:29,930 --> 00:18:31,838\nIf you have a hundred branches\ndo you want a hundred T1s?\n\n342\n00:18:31,838 --> 00:18:33,998\n>> No.\n>> It's gonna be a lot of money, right?\n\n343\n00:18:33,998 --> 00:18:38,670\nI mean, if you need that guaranteed\nbandwidth dedication you might do that.\n\n344\n00:18:38,670 --> 00:18:42,540\nBut the odds are each of these guys are\nnot pushing a huge amount of bandwidth.\n\n345\n00:18:42,540 --> 00:18:48,710\nSo I might get frame relay lines run out\nat each branch that are 500 K, right?\n\n346\n00:18:48,710 --> 00:18:51,790\nSo 500 kilobit for their bandwidth speed.\n\n347\n00:18:51,790 --> 00:18:56,370\nAnd then at the headquarters, I could get\none frame relay connection that was 1.5\n\n348\n00:18:56,370 --> 00:19:00,046\nmegabit and now all three of these\nguys could come across that one and\n\n349\n00:19:00,046 --> 00:19:01,748\nhave full bandwidth, right?\n\n350\n00:19:01,748 --> 00:19:04,581\nYou can get variable bandwidth\nwith a frame relay line.\n\n351\n00:19:04,581 --> 00:19:06,184\nYou get what you pay for.\n\n352\n00:19:06,184 --> 00:19:10,476\nBut this could be one physical connection\nbetween the headquarters router and\n\n353\n00:19:10,476 --> 00:19:12,890\nthe switch but multiple virtual circuits.\n\n354\n00:19:14,610 --> 00:19:18,677\nOn a positive side, my branches get\nconnected, I don't have an overly complex\n\n355\n00:19:18,677 --> 00:19:21,668\nconfiguration at the home office and\nwe're in business.\n\n356\n00:19:21,668 --> 00:19:27,006\nOn a negative side, we do have shared\nbandwidth and if one branch wants\n\n357\n00:19:27,006 --> 00:19:32,897\nto talk to another branch, they have to\ngo through the headquarters to do it.\n\n358\n00:19:32,897 --> 00:19:36,097\nSo they're gonna consume bandwidth\non the way up to headquarters and\n\n359\n00:19:36,097 --> 00:19:38,096\nbandwidth on the way out of headquarters.\n\n360\n00:19:38,096 --> 00:19:40,800\nI'm effectively doubling\nthe bandwidth consumption for\n\n361\n00:19:40,800 --> 00:19:44,065\nbranch to branch communications\nthrough headquarters, all right.\n\n362\n00:19:44,065 --> 00:19:45,519\nThat's a negative.\n\n363\n00:19:45,519 --> 00:19:49,123\nBut this typology is great, if you don't\nneed branch to branch communication, and\n\n364\n00:19:49,123 --> 00:19:50,200\nmost companies don't.\n\n365\n00:19:50,200 --> 00:19:53,030\nWhen you have a branch, it just\ntalks to headquarters and that's it.\n\n366\n00:19:55,190 --> 00:19:57,840\nBut if we do want branch\nto branch communications,\n\n367\n00:19:57,840 --> 00:20:00,410\nthen we may want to go\na little bit different.\n\n368\n00:20:00,410 --> 00:20:04,790\nA much more complex model\nis to do a full mesh.\n\n369\n00:20:06,120 --> 00:20:08,270\nThe virtual circuits are virtual.\n\n370\n00:20:08,270 --> 00:20:12,800\nSo if we want every branch to connect to\nevery other branch with physical lines,\n\n371\n00:20:12,800 --> 00:20:14,670\nthat gets really expensive.\n\n372\n00:20:14,670 --> 00:20:16,680\nRonnie do you remember the formula for\nthat?\n\n373\n00:20:16,680 --> 00:20:20,485\nIt's like N x (N-1) or\nsomething like that?\n\n374\n00:20:20,485 --> 00:20:21,206\nShoot.\n\n375\n00:20:21,206 --> 00:20:25,250\n>> It's the number of devices minus one,\ntimes some, yeah.\n\n376\n00:20:25,250 --> 00:20:28,480\nThere's a formula for\nfiguring out how many links\n\n377\n00:20:28,480 --> 00:20:32,650\neach office would need to have if\nyou wanted a full mesh topology.\n\n378\n00:20:32,650 --> 00:20:35,360\nIf you think about it,\nI've got four routers here.\n\n379\n00:20:35,360 --> 00:20:39,380\nSo I want a full mesh, each router would\nneed a connection to every other router.\n\n380\n00:20:39,380 --> 00:20:42,210\nSo I guess it's just N minus one.\n\n381\n00:20:42,210 --> 00:20:43,250\nSo four minus one.\n\n382\n00:20:43,250 --> 00:20:46,620\nEach branch would need three\nconnections to create a full mesh where\n\n383\n00:20:46,620 --> 00:20:49,470\nevery office was tied\nto every other office.\n\n384\n00:20:49,470 --> 00:20:52,890\nAnd if you're doing that with physical\nlinks that would mean I'd need three here,\n\n385\n00:20:52,890 --> 00:20:56,050\nthree here, three here, three here,\na total of 12 connections.\n\n386\n00:20:57,190 --> 00:21:03,064\nIf I had 100 branches, I would need\n99 connections in each branch, and\n\n387\n00:21:03,064 --> 00:21:08,750\nif there's 100 branches at 99 connections\neach, that's 990 total connections.\n\n388\n00:21:08,750 --> 00:21:10,419\nI'm gonna go broke.\nThe telco bill alone.\n\n389\n00:21:10,419 --> 00:21:13,298\nSo a full mesh topology\nnormally doesn't scale.\n\n390\n00:21:13,298 --> 00:21:15,689\nYou can't get very big with a full mesh.\n\n391\n00:21:15,689 --> 00:21:19,034\nBut because these are virtual\ncircuits you can.\n\n392\n00:21:19,034 --> 00:21:23,992\nIf you have one physical connection and\nthen you have one virtual circuit or\n\n393\n00:21:23,992 --> 00:21:28,171\nif you have 100 virtual circuits\nit doesn't matter right?\n\n394\n00:21:28,171 --> 00:21:30,250\nThis is one physical connection.\n\n395\n00:21:30,250 --> 00:21:33,170\nSo all of a sudden a full\nmesh becomes very realistic.\n\n396\n00:21:33,170 --> 00:21:35,870\nAnd now the branches\ncan talk to each other,\n\n397\n00:21:35,870 --> 00:21:39,460\nwithout passing through headquarters,\nand that's lot more efficient,\n\n398\n00:21:39,460 --> 00:21:42,145\nif you need inter-office or\nbranch to branch communications.\n\n399\n00:21:45,670 --> 00:21:47,770\nSometimes you just need a mix though.\n\n400\n00:21:47,770 --> 00:21:49,890\nSo you can mix it up.\n\n401\n00:21:49,890 --> 00:21:53,080\nAnd you can do a partial mesh or\na hybrid, all right.\n\n402\n00:21:54,390 --> 00:21:58,260\nAnd that's where some of the offices have\ninterconnections between each other and\n\n403\n00:21:58,260 --> 00:22:00,020\nsome don't, all right.\n\n404\n00:22:00,020 --> 00:22:03,991\nThe way you normally see something like\nthis would be like the example that I gave\n\n405\n00:22:03,991 --> 00:22:04,532\nearlier.\n\n406\n00:22:04,532 --> 00:22:07,377\nNot there, where did I do that example?\n\n407\n00:22:07,377 --> 00:22:09,211\nThe other tab.\n\n408\n00:22:09,211 --> 00:22:10,220\nNo, shoot.\n\n409\n00:22:10,220 --> 00:22:11,533\n>> You just didn't select on it.\n\n410\n00:22:11,533 --> 00:22:13,507\n>> Oh, here.\n[LAUGH] So, in this one,\n\n411\n00:22:13,507 --> 00:22:17,880\nwhere I've got my branches are all\nconnected to headquarters, and\n\n412\n00:22:17,880 --> 00:22:21,191\nthey're connected to DR,\nthis is a partial mesh.\n\n413\n00:22:21,191 --> 00:22:24,940\nI don't have a full mesh, because branch\none is not connected to branch two, but\n\n414\n00:22:24,940 --> 00:22:27,380\nmultiple devices are connected\nto multiple areas.\n\n415\n00:22:27,380 --> 00:22:29,110\nThis is a partial mesh.\n\n416\n00:22:29,110 --> 00:22:31,153\nAnd that's what Ronnie's\nshowing over here, right?\n\n417\n00:22:31,153 --> 00:22:33,974\nA partial mesh in that environment.\n\n418\n00:22:33,974 --> 00:22:37,633\nAnd because they're virtual circuits, it's\nreally just a matter of calling the phone\n\n419\n00:22:37,633 --> 00:22:41,007\ncompany and saying, hey, can you create\na new PVC in between these two offices?\n\n420\n00:22:41,007 --> 00:22:43,571\nThey put the PVC in place and\nnow you're connected, right?\n\n421\n00:22:43,571 --> 00:22:45,910\nA little extra configuration\non the router and you're done.\n\n422\n00:22:47,870 --> 00:22:52,450\nAll right, so that's the basics\nof a frame relay infrastructure.\n\n423\n00:22:53,450 --> 00:22:55,090\nWhen we go to set it up,\n\n424\n00:22:55,090 --> 00:22:59,210\nwe've gotta get our router talking\nto that telco switch, right.\n\n425\n00:22:59,210 --> 00:23:02,192\nThat's the connection\nthat we actually set up,\n\n426\n00:23:02,192 --> 00:23:05,550\nis that little piece of us\ntalking to the telco switch.\n\n427\n00:23:05,550 --> 00:23:09,869\nAnd the telco switches, they speak\na different language than our routers do.\n\n428\n00:23:09,869 --> 00:23:13,745\nYou know, our routers they're\ndesigned to do layer three,\n\n429\n00:23:13,745 --> 00:23:15,870\nIP routing, all that stuff.\n\n430\n00:23:15,870 --> 00:23:18,050\nThey usually do ethernet communications.\n\n431\n00:23:18,050 --> 00:23:21,380\nAnd now we're trying to get them\nto talk to a frame relay network.\n\n432\n00:23:21,380 --> 00:23:24,300\nIt's a different language,\nit's a different type of protocol.\n\n433\n00:23:24,300 --> 00:23:26,390\nIt requires different communications.\n\n434\n00:23:26,390 --> 00:23:30,663\nSo before we can get them talking we've\ngotta tell the router how to talk to that\n\n435\n00:23:30,663 --> 00:23:31,191\nswitch.\n\n436\n00:23:31,191 --> 00:23:34,372\nAnd there's a few different\nlanguages we need to be aware of.\n\n437\n00:23:34,372 --> 00:23:36,985\nWhat are the different\nlanguages we got Ronnie?\n\n438\n00:23:36,985 --> 00:23:39,631\nLet's see if we can make\na little list here.\n\n439\n00:23:39,631 --> 00:23:43,904\n>> We have the Q933A.\n\n440\n00:23:43,904 --> 00:23:44,705\n>> Is it gonna let me type?\n\n441\n00:23:44,705 --> 00:23:45,785\n>> I don't know.\n\n442\n00:23:45,785 --> 00:23:47,229\nOh.\nYou know what, here, let me do this.\n\n443\n00:23:47,229 --> 00:23:51,111\nLet me [LAUGH] I'm just gonna steal this.\n\n444\n00:23:51,111 --> 00:23:52,725\n>> [LAUGH]\n>> And we'll use it.\n\n445\n00:23:52,725 --> 00:23:56,351\nAll right, so there's q933a.\n\n446\n00:23:56,351 --> 00:24:00,920\nThere is-\n>> ANSI, Annex D or something?\n\n447\n00:24:02,340 --> 00:24:04,110\n>> We'll just call it ANSI for now.\n\n448\n00:24:04,110 --> 00:24:07,570\n>> And then Cisco,\nwhich is the Cisco consorting.\n\n449\n00:24:08,700 --> 00:24:12,630\n>> When we go to configure our router\nthese are the three we have to pick from.\n\n450\n00:24:12,630 --> 00:24:14,730\nWhen we connect the router\nto that Telco switch,\n\n451\n00:24:14,730 --> 00:24:17,800\nwhen we plug that cable\nin we have to tell it.\n\n452\n00:24:17,800 --> 00:24:19,900\nWhat language that switch\nis gonna be talking in, and\n\n453\n00:24:19,900 --> 00:24:21,570\nthere's three main languages.\n\n454\n00:24:21,570 --> 00:24:22,690\nThese three right here.\n\n455\n00:24:22,690 --> 00:24:24,730\nNow, how do you know which one to use?\n\n456\n00:24:24,730 --> 00:24:26,690\nThe Telco company will tell you.\n\n457\n00:24:26,690 --> 00:24:29,650\nWhen they sell you the Frame Relay line,\nthey'll say,\n\n458\n00:24:29,650 --> 00:24:35,660\nthe switch in your area requires\nthe q933a standard or ANSI or Cisco.\n\n459\n00:24:35,660 --> 00:24:36,500\nAll right?\n\n460\n00:24:36,500 --> 00:24:38,940\nBut there is a little more to\nthe name than that, right?\n\n461\n00:24:38,940 --> 00:24:41,240\nAnd we'll post these with the show notes,\ntoo, so\n\n462\n00:24:41,240 --> 00:24:43,320\ndon't feel like you have\nto jot all these down.\n\n463\n00:24:43,320 --> 00:24:45,890\nBut let me kinda write out some\nof the full names here and\n\n464\n00:24:45,890 --> 00:24:48,100\nwe'll talk a little bit about each.\n\n465\n00:24:48,100 --> 00:24:49,580\nThe first one is q933a, and\n\n466\n00:24:49,580 --> 00:24:55,820\noutside of the United States this is\nprobably the most popular one, right?\n\n467\n00:24:55,820 --> 00:24:58,690\nWhich makes it really the most\npopular one in the world.\n\n468\n00:25:00,170 --> 00:25:06,434\nIt is the ITU-T Q.933+Annex A.\n\n469\n00:25:06,434 --> 00:25:10,470\nThat's the full name for\nthat guy right there.\n\n470\n00:25:10,470 --> 00:25:11,380\nIt's quite a mouthful.\n\n471\n00:25:11,380 --> 00:25:14,400\nLet me just move that a bit.\n\n472\n00:25:14,400 --> 00:25:15,380\nThere.\n\n473\n00:25:15,380 --> 00:25:17,350\nAll right, so what is all that?\n\n474\n00:25:17,350 --> 00:25:21,960\nWell the ITUT, that's an international\ntelecom standards board, right.\n\n475\n00:25:21,960 --> 00:25:25,670\nThey create standards for\ntelecommunications across the globe.\n\n476\n00:25:25,670 --> 00:25:27,777\nAnd so when they put something out,\npeople listen.\n\n477\n00:25:27,777 --> 00:25:30,090\nCuz that's how countries\nare gonna be able to interact.\n\n478\n00:25:30,090 --> 00:25:35,650\nAnd they have a standard, Q.933A Combined\nwith the some of the variations of it.\n\n479\n00:25:35,650 --> 00:25:38,110\nAnd the variation that\nthey used here is Annex A.\n\n480\n00:25:38,110 --> 00:25:43,310\nAnd if we use those two together, that's\nwhat defines Frame Relay communications\n\n481\n00:25:43,310 --> 00:25:45,790\nwith a frame relay switch in most nations.\n\n482\n00:25:47,100 --> 00:25:49,300\nOn the Cisco side when\nwe do the configuration,\n\n483\n00:25:49,300 --> 00:25:50,970\nCisco just refers to it as q933a.\n\n484\n00:25:52,480 --> 00:25:53,950\nBut that's the full name for\nit right there.\n\n485\n00:25:56,790 --> 00:25:59,680\nAnother one that we have is ANSI,\nand what ANSI,\n\n486\n00:25:59,680 --> 00:26:06,540\nthis is\nthe American National Standards Institute.\n\n487\n00:26:06,540 --> 00:26:10,380\nThere's no way I've got enough room for\nthis Institute.\n\n488\n00:26:10,380 --> 00:26:14,050\nAnd the standard itself\nis actually called,\n\n489\n00:26:14,050 --> 00:26:19,090\nI've got it written down here because I\ncan never remember it, T1.617 Annex D.\n\n490\n00:26:19,090 --> 00:26:20,300\nAll right?\n\n491\n00:26:20,300 --> 00:26:21,540\n>> Now why can't you remember that, Don?\n\n492\n00:26:21,540 --> 00:26:22,900\n>> I know, it's a mouthful.\n\n493\n00:26:22,900 --> 00:26:23,790\n>> Yeah.\n>> For the exam,\n\n494\n00:26:23,790 --> 00:26:25,350\nyou really just need to remember ANSI.\n\n495\n00:26:25,350 --> 00:26:28,290\nBut it's a standard, but\nnotice that little part right there.\n\n496\n00:26:28,290 --> 00:26:29,650\nAmerican national standard.\n\n497\n00:26:29,650 --> 00:26:31,454\nThis is kind of a U.S. thing.\n\n498\n00:26:31,454 --> 00:26:34,800\nThe US is really bad when it\ncomes to telecommunications.\n\n499\n00:26:34,800 --> 00:26:38,170\nAnd for our US viewers,\nwe're right here in the US.\n\n500\n00:26:38,170 --> 00:26:42,000\nWe hate to say that something we're doing\nis not great, but boy I'll tell you,\n\n501\n00:26:42,000 --> 00:26:46,070\nEurope is leaps and bounds above us\nwhen it comes to telecommunications.\n\n502\n00:26:46,070 --> 00:26:51,140\nAnd we still stick by some of our\nreally old standards that were set by\n\n503\n00:26:52,410 --> 00:26:53,515\nAlexander Graham Bell.\n\n504\n00:26:53,515 --> 00:26:56,260\n[LAUGH] And it sounds funny,\nbut it's absolutely true.\n\n505\n00:26:56,260 --> 00:26:57,340\n>> True.\n\n506\n00:26:57,340 --> 00:27:01,070\n>> So the ANSI, they set up some\nstandards to be able to use, and\n\n507\n00:27:01,070 --> 00:27:03,930\nthey're very popular here in the US and\neven in Canada.\n\n508\n00:27:03,930 --> 00:27:06,820\nBut outside of the US\nthey're not as popular.\n\n509\n00:27:06,820 --> 00:27:08,440\nSo, when you connect to\none of those switches,\n\n510\n00:27:08,440 --> 00:27:10,660\nit might be using that ANSI standard.\n\n511\n00:27:10,660 --> 00:27:13,270\nEspecially if it's like a Nortel switch.\n\n512\n00:27:13,270 --> 00:27:14,960\nA lot of times you'll see ANSI on those.\n\n513\n00:27:17,030 --> 00:27:21,330\nCisco also has their own language for\nthe switches.\n\n514\n00:27:21,330 --> 00:27:23,420\nAnd Cisco does make Frame Relay switches.\n\n515\n00:27:23,420 --> 00:27:25,940\nBut it's not just Cisco.\n\n516\n00:27:25,940 --> 00:27:29,490\nThis one is actually built\nby the Cisco Consortium.\n\n517\n00:27:30,700 --> 00:27:34,480\nThat is a partnership\nbetween multiple companies.\n\n518\n00:27:34,480 --> 00:27:39,090\nThere's multiple organizations\nthat we're a part of that.\n\n519\n00:27:39,090 --> 00:27:45,600\nWe have, obviously we have Cisco, we\nalso have NorTel, that was a part of it.\n\n520\n00:27:45,600 --> 00:27:48,230\nWe had DEC And\n\n521\n00:27:48,230 --> 00:27:53,500\nStrataCom was the fourth one, so\nthose four companies got together and\n\n522\n00:27:53,500 --> 00:27:57,680\nsaid, let's create our own little\nstandard language for Frame Relay.\n\n523\n00:27:57,680 --> 00:28:01,050\nAnd so those switches from those vendors\nwill typically use that language,\n\n524\n00:28:01,050 --> 00:28:01,930\nall right?\n\n525\n00:28:01,930 --> 00:28:04,500\nNow, I mentioned NorTel a lot\nof times will use ANSI, so\n\n526\n00:28:04,500 --> 00:28:08,750\neven though NorTel is a part of this\nconsortium they still use ANSI in a lot of\n\n527\n00:28:08,750 --> 00:28:14,080\ncases because it's a standard versus\nthe Cisco consortium which isn't.\n\n528\n00:28:14,080 --> 00:28:17,640\nSo this one came out early and\nthen kind of got superseded.\n\n529\n00:28:17,640 --> 00:28:19,700\nAnd that's how we see things a lot.\n\n530\n00:28:19,700 --> 00:28:22,120\nBut those are the three main languages\nthose switches are going to speak.\n\n531\n00:28:22,120 --> 00:28:24,590\nAnd so\nwhen we do our configuration we're gonna\n\n532\n00:28:24,590 --> 00:28:27,110\nhave to use the one the telephone\ncompany tells us to use.\n\n533\n00:28:29,250 --> 00:28:33,640\nThere is one that we don't really talk\nabout, which is, when we define this\n\n534\n00:28:33,640 --> 00:28:37,310\nlanguage, you could actually leave\nit off and not define a language.\n\n535\n00:28:37,310 --> 00:28:39,830\nAnd the Cisco router will\ndo its best to auto-sense.\n\n536\n00:28:39,830 --> 00:28:43,120\nIt will look at the data and try and\nfigure out which one to use.\n\n537\n00:28:43,120 --> 00:28:45,710\nSo auto sense isn't\nreally its own standard.\n\n538\n00:28:45,710 --> 00:28:48,470\nIt's just figuring out\nwhich of these to use.\n\n539\n00:28:48,470 --> 00:28:50,930\nAnd so it'll look at them and try and\nmake a determination from there.\n\n540\n00:28:50,930 --> 00:28:54,830\nSo that functionality is kind of\nbuilt in to the Cisco license.\n\n541\n00:28:56,990 --> 00:29:01,160\nAll right, so using that, that's what's\ngoing to let us talk to that switch.\n\n542\n00:29:01,160 --> 00:29:05,080\nAnd this is called the LMI type.\n\n543\n00:29:05,080 --> 00:29:11,340\nSo these guys right here that I'm listing,\nthese are the LMI types, all right.\n\n544\n00:29:11,340 --> 00:29:15,050\nAnd LMI is the-\n>> Local Management Interface.\n\n545\n00:29:15,050 --> 00:29:15,950\n>> Thank you Ronnie.\n\n546\n00:29:15,950 --> 00:29:18,682\nI am terrible with acronyms.\n\n547\n00:29:18,682 --> 00:29:19,795\nLocal Management Interface.\n\n548\n00:29:19,795 --> 00:29:24,399\nAnd it's talking about local management,\nin other words, your router talking to\n\n549\n00:29:24,399 --> 00:29:28,290\nthat Telco switch and\nit's your interface to connect to them.\n\n550\n00:29:28,290 --> 00:29:30,550\nIt lets you see the switch.\n\n551\n00:29:30,550 --> 00:29:33,210\nThe switch that's normally\ninvisible to your network,\n\n552\n00:29:33,210 --> 00:29:36,280\nyou can use the LMI\nlanguage to talk to it.\n\n553\n00:29:36,280 --> 00:29:40,950\nI get status information, query the PVC,\nsee what mappings there are.\n\n554\n00:29:40,950 --> 00:29:44,160\nYou can get a lot of information from it,\nusing the LMI.\n\n555\n00:29:44,160 --> 00:29:46,740\nWe'll see that when we\ndo the implementation.\n\n556\n00:29:46,740 --> 00:29:49,170\nSo, when you get ready to set up for\nFrame-Relay,\n\n557\n00:29:49,170 --> 00:29:53,460\none of the first things that you need\nto do is ask the telephone company what\n\n558\n00:29:53,460 --> 00:29:56,520\nLMI type do I need to use, and\nthey're going to tell you which one.\n\n559\n00:29:58,900 --> 00:30:00,660\nAfter that we need a circuit identifier.\n\n560\n00:30:00,660 --> 00:30:03,570\nBut I see I've already rambled\non past our break spot.\n\n561\n00:30:03,570 --> 00:30:05,930\nSo why don't we stop here and\ntake a break.\n\n562\n00:30:05,930 --> 00:30:09,130\nAnd when we get back we're going to talk\na little bit more about the circuits.\n\n563\n00:30:09,130 --> 00:30:11,910\nAnd then we'll stop our boring\npart here and actually jump in and\n\n564\n00:30:11,910 --> 00:30:13,530\nshow how to configure all of this.\n\n565\n00:30:13,530 --> 00:30:15,853\nSo stay tuned, we'll be back in a minute.\n\n566\n00:30:15,853 --> 00:30:22,747\n[MUSIC]\n\n567\n00:30:22,747 --> 00:30:24,964\nAll right, welcome back everybody.\n\n568\n00:30:24,964 --> 00:30:28,277\nThe last thing that we need to talk\nabout as far as the concept of\n\n569\n00:30:28,277 --> 00:30:31,100\nFrame Relay are those virtual circuits.\n\n570\n00:30:31,100 --> 00:30:34,690\nVirtual circuits are really neat,\nmostly because we don't have to do them,\n\n571\n00:30:34,690 --> 00:30:36,610\nthe phone company does it for us.\n\n572\n00:30:36,610 --> 00:30:40,340\nAnd then they give us the little piece of\ninformation that we need to be able to use\n\n573\n00:30:40,340 --> 00:30:40,910\nthat circuit.\n\n574\n00:30:42,400 --> 00:30:45,460\nEvery circuit has\nan identifier attached to it.\n\n575\n00:30:45,460 --> 00:30:48,340\nAnd that identifier,\nwe normally call it a DLCI.\n\n576\n00:30:48,340 --> 00:30:49,760\nIt's D-L-C-I.\n\n577\n00:30:49,760 --> 00:30:54,360\nAnd it just stands for\ndata link connection identifier.\n\n578\n00:30:55,690 --> 00:30:58,300\nData link, right,\nwhat's our data link layer?\n\n579\n00:30:58,300 --> 00:30:59,070\n>> Layer two.\n\n580\n00:30:59,070 --> 00:31:00,700\n>> Layer two of the OSI model.\n\n581\n00:31:00,700 --> 00:31:03,440\nSo Datalink lets us know\nright now if it's layer two,\n\n582\n00:31:03,440 --> 00:31:06,530\nand it's a connection identifier.\n\n583\n00:31:06,530 --> 00:31:10,460\nIt's the way that we know what we're\nsupposed to talk to on the switch.\n\n584\n00:31:10,460 --> 00:31:13,795\nThe DLCI is what takes\nthe place of a Mac address.\n\n585\n00:31:14,845 --> 00:31:17,955\nSo in an Ethernet network,\nif you wanna talk to an IT host, you've\n\n586\n00:31:17,955 --> 00:31:22,385\ngot the IP address at layer three, and\nyou've got the Mac address at layer two.\n\n587\n00:31:22,385 --> 00:31:24,575\nAnd that Mac address is how you reach out.\n\n588\n00:31:24,575 --> 00:31:27,015\nAnd the switch knows where to send you,\nand all that good stuff.\n\n589\n00:31:27,015 --> 00:31:30,475\nWith Frame Relay, you have the IP\naddress at layer three, and\n\n590\n00:31:30,475 --> 00:31:33,540\nthe DELCI number at layer two.\n\n591\n00:31:33,540 --> 00:31:36,720\nSo we need to let our router\nknow what DLCI to you,\n\n592\n00:31:36,720 --> 00:31:39,080\nwhat Datalink connection\nidentifier to use,\n\n593\n00:31:39,080 --> 00:31:43,540\nwhen it talks to that telco switch,\nbut here's where it gets weird.\n\n594\n00:31:43,540 --> 00:31:45,250\nWe don't see the other end.\n\n595\n00:31:45,250 --> 00:31:49,012\nWe don't see the remote router\nwhen we talk on Frame Relay.\n\n596\n00:31:49,012 --> 00:31:51,078\nWe talk to the telco switch, so\n\n597\n00:31:51,078 --> 00:31:54,821\nthe DLCI numbers are really\nonly locally significant.\n\n598\n00:31:54,821 --> 00:31:55,537\nMac addresses,\n\n599\n00:31:55,537 --> 00:31:58,408\nthose are tied to the actual person\nthat you're trying to talk to.\n\n600\n00:31:58,408 --> 00:32:00,260\nBut a DLCI number is not.\n\n601\n00:32:00,260 --> 00:32:04,650\nAnd so we have to program these in and in\nthe old days you had to do it manually but\n\n602\n00:32:04,650 --> 00:32:09,100\nnow we have a lot of automatic detection\nthat happens and we'll learn those.\n\n603\n00:32:09,100 --> 00:32:12,410\nBut let me just show you an example\nof what those DLCIs are like.\n\n604\n00:32:12,410 --> 00:32:14,350\nGoing back to this diagram I used earlier,\n\n605\n00:32:14,350 --> 00:32:17,080\nthere's all these switches\nthat are in the mix.\n\n606\n00:32:17,080 --> 00:32:20,050\nSo, what happens is,\nwhen I get branch one connected,\n\n607\n00:32:20,050 --> 00:32:24,200\nthe phone company will tell me all right,\nbranch one is connected to headquarters.\n\n608\n00:32:24,200 --> 00:32:28,390\nAnd when you talk to the switch you're\nyou're gonna be using DLCI number 4101.\n\n609\n00:32:28,390 --> 00:32:31,530\nSo, they'll give you a number, right?\n\n610\n00:32:31,530 --> 00:32:33,110\nIt's normally a small number.\n\n611\n00:32:33,110 --> 00:32:35,530\nIt's usually three, four digits.\n\n612\n00:32:35,530 --> 00:32:38,750\nI've seen five digit ones, but\nthey're not normally that big.\n\n613\n00:32:38,750 --> 00:32:42,830\nAnd so, they'll give you a number And\nyou tell your router here,\n\n614\n00:32:42,830 --> 00:32:46,500\nhey when you wanna talk to\nheadquarters talk to this DLC number.\n\n615\n00:32:46,500 --> 00:32:48,720\nIt's kinda like mapping\nan IP to a MAC address.\n\n616\n00:32:48,720 --> 00:32:52,470\nYou're mapping the IP of\nheadquarters to a DLCI number.\n\n617\n00:32:52,470 --> 00:32:54,030\nAnd then your branch router will know hey,\n\n618\n00:32:54,030 --> 00:32:57,590\nwhen I get traffic for headquarters send\nit on this DLCI and it'll hit the switch.\n\n619\n00:32:57,590 --> 00:33:00,470\nNow the switch will send it all\nalong through here to the switch\n\n620\n00:33:00,470 --> 00:33:01,840\nup at headquarters.\n\n621\n00:33:01,840 --> 00:33:05,570\nAnd headquarters is connected and\nthey have a DLCI number up there.\n\n622\n00:33:05,570 --> 00:33:10,820\nNow that DCLI number almost never matches.\n\n623\n00:33:10,820 --> 00:33:13,880\nIt's never, I'm not gonna say never,\nit could be.\n\n624\n00:33:13,880 --> 00:33:16,820\nIf all of these switches run\nby the same phone company,\n\n625\n00:33:16,820 --> 00:33:19,350\nand the numbers just happen to be\navailable, they might be the same.\n\n626\n00:33:19,350 --> 00:33:22,530\nI’ve never had it happen,\nit’s always different.\n\n627\n00:33:22,530 --> 00:33:25,020\nAnd so\nthey will have a different number up here,\n\n628\n00:33:25,020 --> 00:33:29,220\nthe headquarters will have a connection to\nbranch one that might be DLCI number 23.\n\n629\n00:33:29,220 --> 00:33:34,470\nSo headquarters knows when they wanna\ntalk to branch one, they talk on DLCI 23,\n\n630\n00:33:34,470 --> 00:33:42,150\nand the phone company is mapping DLCI\n23 here with DLCI 4101 over here.\n\n631\n00:33:42,150 --> 00:33:44,010\nAnd that's what creates\nthat virtual circuit.\n\n632\n00:33:44,010 --> 00:33:46,460\nThe map they put in place to do that.\n\n633\n00:33:46,460 --> 00:33:49,560\nSo we need to know which DLCI\nnumber to communicate with.\n\n634\n00:33:49,560 --> 00:33:52,775\nAnd when you've got more than one\nconnection they'll tell you more than one\n\n635\n00:33:52,775 --> 00:33:53,480\nDLCI.\n\n636\n00:33:53,480 --> 00:33:57,415\nThey'll say at branch one,\nuse DLC 4101 to get to headquarters.\n\n637\n00:33:57,415 --> 00:34:02,290\nAnd use DLCI 5702 to get to branch two.\n\n638\n00:34:02,290 --> 00:34:04,930\nAll right, and so now,\nI’ll have two different mappings, and\n\n639\n00:34:04,930 --> 00:34:08,220\nI’ll map those IPs to the DLCI\nnumbers to reach out and communicate.\n\n640\n00:34:09,230 --> 00:34:12,410\nSo that DLCI number is really important,\nbut remember,\n\n641\n00:34:12,410 --> 00:34:15,950\nit is just locally significant,\nit’s just you talking to the switch.\n\n642\n00:34:15,950 --> 00:34:18,090\nAfter you hit the switch,\nthat DLCI number goes away.\n\n643\n00:34:18,090 --> 00:34:20,490\nThe switch knows where to send you,\nand on the other end,\n\n644\n00:34:20,490 --> 00:34:22,570\nit’s usually a completely\ndifferent DLCI number.\n\n645\n00:34:24,350 --> 00:34:25,110\nAll right.\n\n646\n00:34:25,110 --> 00:34:28,470\nSo that's gonna be the basics for\nmy communications.\n\n647\n00:34:28,470 --> 00:34:32,430\nWe can manually map those DLCIs and\na lot of times we have to.\n\n648\n00:34:32,430 --> 00:34:34,750\nThe main reason we have to do that is,\n\n649\n00:34:34,750 --> 00:34:40,810\nframe relay almost every service provider\nblocks broadcasts on frame relay.\n\n650\n00:34:40,810 --> 00:34:43,670\nYou don't allow discoveries to\nhappen What is the frame relay\n\n651\n00:34:43,670 --> 00:34:45,360\nswitch gonna do with a broadcast?\n\n652\n00:34:45,360 --> 00:34:47,660\nWell, a switch would normally\nflood it at every port,\n\n653\n00:34:47,660 --> 00:34:50,090\nwhich would include every customer,\nand they don't want that.\n\n654\n00:34:50,090 --> 00:34:53,890\nSo broadcasts are not allowed\non most frame relay networks.\n\n655\n00:34:53,890 --> 00:34:56,389\nThey're called NBMA networks.\n\n656\n00:34:56,389 --> 00:35:02,060\nNon-Broadcast Multi-Access, and that means\n\n657\n00:35:02,060 --> 00:35:07,270\nyou can have more than one machine on it,\nmulti-access, but it's non-broadcast.\n\n658\n00:35:07,270 --> 00:35:11,080\nSo I can't rely on mechanisms like ARP,\naddress resolution protocol, where I reach\n\n659\n00:35:11,080 --> 00:35:14,090\nout and I say hey, I'm trying to get\nto 192.168.1.5, who's got that DLCI?\n\n660\n00:35:14,090 --> 00:35:17,270\nI can't do that, right?\n\n661\n00:35:19,060 --> 00:35:22,510\nSo most frame review networks will make\nuse of something called Inverse arc.\n\n662\n00:35:23,590 --> 00:35:28,670\nWhere when you boot up, instead of sending\nout a broadcast to say who has this IP,\n\n663\n00:35:29,750 --> 00:35:34,610\ninstead you boot up and\nyou send out a unicast.\n\n664\n00:35:34,610 --> 00:35:37,430\nAnd the unicast says, I'm here,\n\n665\n00:35:37,430 --> 00:35:40,870\nmy IP address is 192.168.1.1 and\nhere's my DLCI number.\n\n666\n00:35:41,890 --> 00:35:44,760\nAnd you communicate across the switch and\n\n667\n00:35:44,760 --> 00:35:47,210\nyou actually don't have to say your DLCI\nnumber, the switch takes care of that.\n\n668\n00:35:47,210 --> 00:35:50,970\nSo you just say I have this IP and\nthe switch will receive it and say,\n\n669\n00:35:50,970 --> 00:35:54,380\noh you're talking I need to\nforward that to the other end.\n\n670\n00:35:54,380 --> 00:35:56,190\nAnd the other end will receive it and\n\n671\n00:35:56,190 --> 00:36:01,270\nthey'll learn that your IP address\nis attached to that DLCI number.\n\n672\n00:36:01,270 --> 00:36:04,620\nSo you can do automatic learning of what\n\n673\n00:36:04,620 --> 00:36:07,030\nIP is tied to what circuit number\nif inverse arp is allowed.\n\n674\n00:36:07,030 --> 00:36:12,970\nIf inverse arp is not allowed,\nYou've got to manually map it.\n\n675\n00:36:12,970 --> 00:36:17,490\nAnd we'll show you both ways in the\nconfiguration, we can do it dynamic, or\n\n676\n00:36:17,490 --> 00:36:18,740\nwe can do it manual.\n\n677\n00:36:18,740 --> 00:36:21,930\na lot of times I'll do manual even if\ndynamic is supported just to know that\n\n678\n00:36:21,930 --> 00:36:23,970\nit's there, and it's always in place, and\n\n679\n00:36:23,970 --> 00:36:27,350\nI don't have to learn it,\nkind of shave off a little bit of time.\n\n680\n00:36:27,350 --> 00:36:30,040\nBut even that can cause some\nproblems if you're trying to do\n\n681\n00:36:30,040 --> 00:36:33,880\nchanges in your network and so on, so\nthe dynamic functionality is there.\n\n682\n00:36:35,910 --> 00:36:40,100\nAlright so in a nutshell,\nthat's how frame relay functions.\n\n683\n00:36:40,100 --> 00:36:41,950\nLet's take a look at the configuration.\n\n684\n00:36:41,950 --> 00:36:45,470\nNow the hardest part about\nframe relay is there's really\n\n685\n00:36:45,470 --> 00:36:49,695\nthree different ways to I guess\nthere's four ways to configure it.\n\n686\n00:36:49,695 --> 00:36:54,185\nWhen you configure a frame relay link, it\ncould be point-to-point, it could just be\n\n687\n00:36:54,185 --> 00:36:58,525\na single link from one branch to another\nbranch or to the headquarters, right?\n\n688\n00:36:58,525 --> 00:37:01,037\nJust point-to-point That’s\nthe simplest configuration.\n\n689\n00:37:02,417 --> 00:37:08,697\nOr it can be multi point, one connection\nwith connections to multiple destinations.\n\n690\n00:37:08,697 --> 00:37:11,737\nSo there’s two different\nconfiguration models right there.\n\n691\n00:37:11,737 --> 00:37:15,060\nPoint to point, Point-to-multipoint.\n\n692\n00:37:15,060 --> 00:37:20,760\nThen we have the option of configuring\nit on a physical interface or\n\n693\n00:37:20,760 --> 00:37:24,890\na subinterface, and subinterfaces,\nyou might remember those from Router on\n\n694\n00:37:24,890 --> 00:37:28,920\na Stick, VLAN management on a router,\nyou can use subinterfaces\n\n695\n00:37:28,920 --> 00:37:32,460\nin Frame-Relay to spread your\ndlcis across the subinterfaces.\n\n696\n00:37:32,460 --> 00:37:35,080\nIt’s useful for\na number of different reasons.\n\n697\n00:37:35,080 --> 00:37:38,180\nBut it gives us a lot of flexibility\nin configuration options.\n\n698\n00:37:38,180 --> 00:37:41,950\nSo we almost always configure\nframe relay on a subinterface.\n\n699\n00:37:41,950 --> 00:37:44,370\nBut you can do it on a physical interface.\n\n700\n00:37:44,370 --> 00:37:45,430\nSo when I do point to point,\n\n701\n00:37:45,430 --> 00:37:49,390\nI could do point to point on the physical\ninterface or on a subinterface.\n\n702\n00:37:49,390 --> 00:37:50,250\nAnd I could do point and\n\n703\n00:37:50,250 --> 00:37:53,310\nmultipoint, on the physical interface or\non the subinterface.\n\n704\n00:37:53,310 --> 00:37:56,560\nSo it's kinda like there's four\ndifferent configuration styles.\n\n705\n00:37:56,560 --> 00:37:57,510\nAlright.\n\n706\n00:37:57,510 --> 00:38:00,780\nOn the exam you know you could\nsee examples of any of them but\n\n707\n00:38:00,780 --> 00:38:03,430\nin real life LAN you almost always\ndo the southern phase models.\n\n708\n00:38:03,430 --> 00:38:05,330\nSo I want to show you guys each\nof those as we go through this.\n\n709\n00:38:07,800 --> 00:38:09,090\nAlright so let's take a look at that.\n\n710\n00:38:09,090 --> 00:38:12,455\nNow I have a Topology built up\nhere from my own little lab,\n\n711\n00:38:12,455 --> 00:38:14,975\nand I’m gonna bring that\nup to show you guys.\n\n712\n00:38:18,202 --> 00:38:18,795\nAnd is that?\n\n713\n00:38:18,795 --> 00:38:20,105\nThat’s sort of legible, I suppose.\n\n714\n00:38:20,105 --> 00:38:21,325\nLet’s see if I can make that bigger.\n\n715\n00:38:21,325 --> 00:38:26,060\nI don’t know that that got any bigger,\nbut [LAUGH] But\n\n716\n00:38:26,060 --> 00:38:29,800\nwhat you're looking at here,\nthis is my frame-relay topology.\n\n717\n00:38:29,800 --> 00:38:32,140\nAnd what I did is I set\nup a frame-relay switch.\n\n718\n00:38:32,140 --> 00:38:34,360\nI'm pretending to be\nthe telephone company.\n\n719\n00:38:34,360 --> 00:38:38,620\nAnd as the telephone company,\nI mapped these DLCI numbers together.\n\n720\n00:38:38,620 --> 00:38:41,280\nAnd so\nwhat I did is at headquarters I have one\n\n721\n00:38:41,280 --> 00:38:43,550\nserial line run to my headquarters router.\n\n722\n00:38:43,550 --> 00:38:47,870\nIt's on Serial 1/0 and\nI mapped a DLCI number on it.\n\n723\n00:38:47,870 --> 00:38:48,510\n102.\n\n724\n00:38:48,510 --> 00:38:53,540\nAnd on my frame relay switch,\nI map DLCI number 102\n\n725\n00:38:53,540 --> 00:38:59,840\nat headquarters over to DLCI\nnumber 201 here on branch one.\n\n726\n00:38:59,840 --> 00:39:03,910\nSo if I wanna connect headquarters to\nbranch one, I've already got a DLCI.\n\n727\n00:39:03,910 --> 00:39:08,090\nI've got a permanent virtual circuit\nin place that I can use to do that.\n\n728\n00:39:08,090 --> 00:39:08,630\n>> All right?\n\n729\n00:39:08,630 --> 00:39:12,830\nSo it's there, it's available, I could\nbring that up and go point to point.\n\n730\n00:39:14,260 --> 00:39:17,570\nBut since they're virtual circuits,\nwhile I was in there I went ahead and\n\n731\n00:39:17,570 --> 00:39:18,940\ndefined all these others.\n\n732\n00:39:18,940 --> 00:39:24,370\nI defined a full mesh PVC\nenvironment across my routers.\n\n733\n00:39:24,370 --> 00:39:26,110\nThat doesn't mean we have to use it.\n\n734\n00:39:26,110 --> 00:39:29,520\nJust because you have the full mesh\nthere for PVCs you can ignore them.\n\n735\n00:39:29,520 --> 00:39:31,750\nYou can just use the DLCI\nnumbers you want.\n\n736\n00:39:31,750 --> 00:39:33,670\nAnd so you can have one\ntopology that you can use for\n\n737\n00:39:33,670 --> 00:39:35,170\nall the different examples\nthat are laid down.\n\n738\n00:39:35,170 --> 00:39:37,337\nSo that's what I did,\nI kind of set it up ahead of time.\n\n739\n00:39:37,337 --> 00:39:41,633\nBut if you notice when I'm doing the\nconfiguration if I'm looking down here,\n\n740\n00:39:41,633 --> 00:39:46,209\nwhat I've got, printed it out on paper\nbecause it's hard to remember this stuff.\n\n741\n00:39:46,209 --> 00:39:49,841\nA network diagram is worth its weight\nin gold when it comes to configuring\n\n742\n00:39:49,841 --> 00:39:50,683\nframe-relay.\n\n743\n00:39:50,683 --> 00:39:53,323\nSo we need to be able to keep\ntrack of what PVCs are where and\n\n744\n00:39:53,323 --> 00:39:54,600\nhow we reach out to people.\n\n745\n00:39:54,600 --> 00:39:57,507\nSo as we're going through\nthe configuration if you're thinking man,\n\n746\n00:39:57,507 --> 00:40:00,670\nhow does Don remember these DLCI numbers,\nthe secret is that I don't.\n\n747\n00:40:00,670 --> 00:40:02,260\nI don't remember the del c numbers.\n\n748\n00:40:02,260 --> 00:40:03,310\nI've got my documentation, right?\n\n749\n00:40:03,310 --> 00:40:06,500\nThat's what you should do in real life and\non the exam,\n\n750\n00:40:06,500 --> 00:40:09,960\nyou'll have an image that will be\nyour what do they call it an exhibit?\n\n751\n00:40:09,960 --> 00:40:11,080\n>> Yeah.\nAn exhibit.\n\n752\n00:40:11,080 --> 00:40:13,260\n>> So that exhibit will be there,\nthey'll have that.\n\n753\n00:40:13,260 --> 00:40:16,190\nThat map for\nyou that you'll use, all right?\n\n754\n00:40:16,190 --> 00:40:18,840\nBut this is all information the telephone\ncompany would give us anyways so\n\n755\n00:40:18,840 --> 00:40:20,300\nthat's where we get it from.\n\n756\n00:40:20,300 --> 00:40:22,860\nAnd now we go into the configuration.\n\n757\n00:40:22,860 --> 00:40:26,443\nSo I want to start with\nthe most simple configuration.\n\n758\n00:40:26,443 --> 00:40:30,283\nI'm going to do a point to point link\nbetween headquarters and branch one and\n\n759\n00:40:30,283 --> 00:40:33,943\nI'm going to do it across that\nserial interface, no sub-interfaces.\n\n760\n00:40:33,943 --> 00:40:37,373\nSo I'm just gonna do it right on\nthe parent interface, and bridge that gap,\n\n761\n00:40:37,373 --> 00:40:38,260\nall right?\n\n762\n00:40:38,260 --> 00:40:41,610\nSo pretty straightforward\ntype of communication here.\n\n763\n00:40:41,610 --> 00:40:45,050\nSo let's take a look at that process.\n\n764\n00:40:45,050 --> 00:40:48,420\nSo first thing I'm gonna do is\nI'm gonna get in my routers,\n\n765\n00:40:48,420 --> 00:40:53,920\nwhich I have buried away in here, and I'll\nget started on headquarters, all right?\n\n766\n00:40:53,920 --> 00:40:56,130\nSo here I am on my headquarters router and\n\n767\n00:40:56,130 --> 00:40:59,140\nI'm just gonna do a show\nrun interface serial 1/0.\n\n768\n00:40:59,140 --> 00:41:01,070\nSo we can take a look at it.\n\n769\n00:41:01,070 --> 00:41:06,550\nAnd on my serial 1/0 interface I can\nsee pretty simple configuration.\n\n770\n00:41:06,550 --> 00:41:07,580\nYeah, I didn't do anything.\n\n771\n00:41:07,580 --> 00:41:10,150\nI did a no shutdown on it, right?\n\n772\n00:41:10,150 --> 00:41:13,180\nSo these are just the default\nconfigurations for this particular one.\n\n773\n00:41:13,180 --> 00:41:15,740\nIt's got no IP address,\nits fair-queing is turned off.\n\n774\n00:41:15,740 --> 00:41:18,300\nThere's no restart delay\non the serial line.\n\n775\n00:41:18,300 --> 00:41:21,340\nThese are just default commands,\nall right?\n\n776\n00:41:21,340 --> 00:41:24,430\nI need to tell it that\nwe're doing frame relay and\n\n777\n00:41:24,430 --> 00:41:25,630\nI need to get us connected\nto the other side.\n\n778\n00:41:27,422 --> 00:41:29,310\nAll right, so\nlet's start with getting this setup.\n\n779\n00:41:29,310 --> 00:41:32,400\nI'm not going to be able to communicate\nvery much without and IP address so\n\n780\n00:41:32,400 --> 00:41:35,590\nI'm going to need to get an IP address\non here so that's where I'll start.\n\n781\n00:41:35,590 --> 00:41:40,370\nI'm gonna to get into serial 1/0,\nand I'll just do an IP address.\n\n782\n00:41:40,370 --> 00:41:42,230\nAnd I need to pick an IP\nthat's not already in use, and\n\n783\n00:41:42,230 --> 00:41:43,350\nI don't know what IPs I'm using.\n\n784\n00:41:43,350 --> 00:41:49,560\nLet's see, let's see,\nI'm using all sorts of IPs.\n\n785\n00:41:49,560 --> 00:41:54,090\nLet's do, we'll use the 192.168.3 network.\n\n786\n00:41:54,090 --> 00:41:57,270\nAnd that way I don't\nbump into anything else.\n\n787\n00:41:57,270 --> 00:42:05,276\nSo I'm gonna say IP address\n192.168.3.1 and I'll be wasteful.\n\n788\n00:42:05,276 --> 00:42:07,050\nThis is gonna be a point to point link.\n\n789\n00:42:07,050 --> 00:42:09,480\nSo I could use a really small network.\n\n790\n00:42:09,480 --> 00:42:12,440\nYou know,\nI could go down to a 252 In fact,\n\n791\n00:42:12,440 --> 00:42:14,080\nI guess we could do that just to see it.\n\n792\n00:42:14,080 --> 00:42:15,210\nBut you could do a class c.\n\n793\n00:42:15,210 --> 00:42:17,168\nYou can do as big a network as you want.\n\n794\n00:42:17,168 --> 00:42:22,170\nOn a point-to-point network we\nnormally do a /30, which gives\n\n795\n00:42:22,170 --> 00:42:27,330\nus two usable IPs, a subnet reference, and\na broadcast, four addresses all together.\n\n796\n00:42:27,330 --> 00:42:30,340\nThe broadcast we're not gonna use\ncuz this is gonna be frame-relay but\n\n797\n00:42:30,340 --> 00:42:34,670\nthere actually is a scenario where\nwe use broadcast in here that\n\n798\n00:42:34,670 --> 00:42:35,850\nI'll talk about a little bit later.\n\n799\n00:42:35,850 --> 00:42:40,350\nCuz a lot of our routing\nprotocols depend on multicast and\n\n800\n00:42:40,350 --> 00:42:45,962\nframe relay treats multicast and broadcast\nthe same so I'll address that later.\n\n801\n00:42:45,962 --> 00:42:50,300\nAll right, just in case I forgot I'll do\na no shutdown, this one's already on.\n\n802\n00:42:50,300 --> 00:42:55,170\nAnd right now I'm up, and the serial\nline's got a default configuration,\n\n803\n00:42:55,170 --> 00:42:57,770\nso what's our default encapsulation for\na serial line?\n\n804\n00:42:59,160 --> 00:43:00,530\nIt's HDLC, right?\n\n805\n00:43:00,530 --> 00:43:02,600\nHDLC is what a Cisco\nrouter defaults to for\n\n806\n00:43:02,600 --> 00:43:07,070\nserial, so it's trying to use HDLC to\nnegotiate a connection, that's gonna fail.\n\n807\n00:43:07,070 --> 00:43:13,310\nSo I need to tell it encapsulation\nframe dash relay, all right?\n\n808\n00:43:13,310 --> 00:43:16,350\nWhen I tell it that, it's going\nto know it's a frame relay line.\n\n809\n00:43:16,350 --> 00:43:20,957\nIf it's a sysco router on the other side,\nthen I can just say encapsulation frame\n\n810\n00:43:20,957 --> 00:43:26,068\ndash relay, and that's it, I'm sorry,\na Sysco switch, right, the switch.\n\n811\n00:43:26,068 --> 00:43:32,247\nBut, if it's a Nortel or someone else, a\nlot of times they run IETF Standards Mode,\n\n812\n00:43:32,247 --> 00:43:36,526\nso I might need to add to the end of this,\nIETF, all right?\n\n813\n00:43:36,526 --> 00:43:39,800\nI'm using a Cisco switch, so I don't\nneed it, but just know in real life you\n\n814\n00:43:39,800 --> 00:43:42,318\nmight need to add this to be\nable to get that connectivity.\n\n815\n00:43:42,318 --> 00:43:43,858\nIt comes down to the Telco switch, and\n\n816\n00:43:43,858 --> 00:43:46,810\nthey'll tell ou whether\nit's in IETF mode or not.\n\n817\n00:43:46,810 --> 00:43:47,670\nSo I'll leave that off.\n\n818\n00:43:48,690 --> 00:43:50,070\nAnd I'll just run that.\n\n819\n00:43:50,070 --> 00:43:51,840\nNow I'm running frame relay.\n\n820\n00:43:51,840 --> 00:43:54,460\nWell notice how my line just came up.\n\n821\n00:43:54,460 --> 00:43:58,740\nMy line came up and\nI'm talking to the switch.\n\n822\n00:43:58,740 --> 00:44:04,440\nIf inverse ARP is allowed and automatic\ndiscovery is running, my auto sensory\n\n823\n00:44:04,440 --> 00:44:10,790\nLMI type is running, if all the stars\nare in alignment that's all I need to do.\n\n824\n00:44:10,790 --> 00:44:14,290\nWe get all our information from\nthe switch, we're ready to go.\n\n825\n00:44:14,290 --> 00:44:16,210\nBut that's not always the case.\n\n826\n00:44:16,210 --> 00:44:19,490\nSometimes the automatic\ndetection stuff doesn't work.\n\n827\n00:44:19,490 --> 00:44:22,610\nAnd sometimes we can't\ndetect the LMI type.\n\n828\n00:44:22,610 --> 00:44:25,530\nAnd so,\nI make it a habit of hard-setting them.\n\n829\n00:44:25,530 --> 00:44:27,970\nAnd, you guys have probably seen\nthis is some of my other shows,\n\n830\n00:44:27,970 --> 00:44:30,050\nI do not like auto-detection.\n\n831\n00:44:30,050 --> 00:44:31,970\nBecause auto detection takes time.\n\n832\n00:44:31,970 --> 00:44:34,800\nSo if a line never goes down when it\ncomes back up that creates a delay and\n\n833\n00:44:34,800 --> 00:44:35,900\nI'd rather not have it.\n\n834\n00:44:35,900 --> 00:44:37,900\nSo I like to statically set\nthings it makes me happy.\n\n835\n00:44:37,900 --> 00:44:39,900\nIt's my little quirk.\n\n836\n00:44:39,900 --> 00:44:46,690\nSo I'm going to statically set this one,\nI'm going to say frame-relay lmi-type.\n\n837\n00:44:46,690 --> 00:44:51,110\nNow here's where I can tell it what\nlmi-type to use, and there's Cisco, Anci,\n\n838\n00:44:51,110 --> 00:44:51,610\nand Q933a.\n\n839\n00:44:51,610 --> 00:44:53,480\nThe three I get to pick from.\n\n840\n00:44:54,730 --> 00:44:58,490\nAll right,\nnow I’m actually gonna use ants,\n\n841\n00:44:58,490 --> 00:45:00,380\nwell shoot, I do have a Cisco switch.\n\n842\n00:45:00,380 --> 00:45:02,170\nI’ll punch in Cisco.\n\n843\n00:45:02,170 --> 00:45:04,350\nI’m trying to remember,\n>> [LAUGH]\n\n844\n00:45:04,350 --> 00:45:04,960\n>> When I set up my,\n\n845\n00:45:04,960 --> 00:45:06,430\nlet me pull up my Front-Relay switch.\n\n846\n00:45:06,430 --> 00:45:08,450\nI think I might’ve Overridden it here.\n\n847\n00:45:08,450 --> 00:45:10,290\nLet me just take a look.\n\n848\n00:45:10,290 --> 00:45:14,600\nDid I override my type?\n\n849\n00:45:16,730 --> 00:45:18,840\nNope.\nDoesn't look like I did.\n\n850\n00:45:18,840 --> 00:45:19,960\nSo I must be in Cisco mode.\n\n851\n00:45:19,960 --> 00:45:20,540\nOkay.\n\n852\n00:45:20,540 --> 00:45:22,120\nSo let me go back to my HQ here.\n\n853\n00:45:22,120 --> 00:45:25,480\nSo I'm gonna stick in Cisco mode, so\nI'll just say frame-relay lmi-type cisco,\n\n854\n00:45:25,480 --> 00:45:26,130\nall right?\n\n855\n00:45:27,820 --> 00:45:30,900\nAutodetection has already figured it out,\nthat's why the interface came up,\n\n856\n00:45:30,900 --> 00:45:33,260\nif I had it wrong the interface\nwouldn't have come up, but\n\n857\n00:45:33,260 --> 00:45:36,450\nnow I can see that it's perfectly happy,\nand nothing happened when I ran that\n\n858\n00:45:36,450 --> 00:45:38,388\ncommand because I just set it\nto what it already was Was.\n\n859\n00:45:38,388 --> 00:45:44,290\nAll right, the next thing I wanna\ndo is define my dlci number.\n\n860\n00:45:44,290 --> 00:45:47,400\nMy system’s probably already learned it,\nbut I’m gonna tell it,\n\n861\n00:45:47,400 --> 00:45:49,260\nI’m gonna tell it what it is.\n\n862\n00:45:49,260 --> 00:45:52,832\nAnd so what we can do,\nwe can say frame-relay,\n\n863\n00:45:52,832 --> 00:45:58,970\ninterface-dlci, and what DLCI\nnumber is tied to this interface?\n\n864\n00:45:58,970 --> 00:46:02,110\nIn a point to point line,\nyou've only got one DLCI.\n\n865\n00:46:02,110 --> 00:46:06,170\nAnd if I go back to my network diagram,\nmy DLCI over to branch one is 102.\n\n866\n00:46:06,170 --> 00:46:10,330\nSo I'm gonna hard set it and\ntell it to use 102.\n\n867\n00:46:10,330 --> 00:46:15,550\nWhen I communicate out, I'm just\ngonna be using DLCI 102, all right?\n\n868\n00:46:15,550 --> 00:46:16,850\nNow notice my prompt changed.\n\n869\n00:46:16,850 --> 00:46:20,090\nI'm in the DLCI prompt We don't\nnormally have change anything, but\n\n870\n00:46:20,090 --> 00:46:24,260\nyou have a series of commands you can use\nto modify the itself, a lot of which has\n\n871\n00:46:24,260 --> 00:46:28,620\nto deal with like bandwidth calculations,\nquality of service type things.\n\n872\n00:46:28,620 --> 00:46:32,180\nWe don't normally need to mess with that,\nso I'm just going to hit exit And\n\n873\n00:46:32,180 --> 00:46:35,070\nget back to my interface prompt.\n\n874\n00:46:36,230 --> 00:46:38,170\nAll right,\nonce I've got that done that's it.\n\n875\n00:46:38,170 --> 00:46:44,380\nAll right, my interface is configured and\nif I do a show run interface serial 1/0.\n\n876\n00:46:44,380 --> 00:46:47,750\nWe can see what all I did there.\n\n877\n00:46:47,750 --> 00:46:49,690\nI set an IP address.\n\n878\n00:46:49,690 --> 00:46:52,360\nI set my encapsulation to frame-relay.\n\n879\n00:46:52,360 --> 00:46:55,730\nI manually set the Dell C which\nI probably didn't need to do.\n\n880\n00:46:55,730 --> 00:46:57,660\nAnd I manually set the LMI tag,\nwhich again,\n\n881\n00:46:57,660 --> 00:46:59,760\nI probably didn't need to do, all right?\n\n882\n00:46:59,760 --> 00:47:02,800\nAnd I might even want\nto go one step further.\n\n883\n00:47:02,800 --> 00:47:04,910\nI might still be doing\nautomatic detection,\n\n884\n00:47:04,910 --> 00:47:07,040\ntrying to find other\npeople that are out there.\n\n885\n00:47:07,040 --> 00:47:12,390\nI might want to turn that off, and so I\nmight want to go one extra step, and on my\n\n886\n00:47:12,390 --> 00:47:19,630\nserial interface, I might want to say no\nframe dash relay inverse dash art, right?\n\n887\n00:47:19,630 --> 00:47:22,430\nThat says disable\nthe inverse art mechanism,\n\n888\n00:47:22,430 --> 00:47:24,820\ndon't dynamically learn anything.\n\n889\n00:47:24,820 --> 00:47:27,100\nIf you want to manually\nset it like I'm doing,\n\n890\n00:47:27,100 --> 00:47:30,350\nyou can disable the automatic detection,\nand that will do it, all right?\n\n891\n00:47:30,350 --> 00:47:33,630\nNot a requirement, but can help,\nespecially when it comes to\n\n892\n00:47:33,630 --> 00:47:37,230\ntroubleshooting You can eliminate things,\nso I’m gonna punch that in right there.\n\n893\n00:47:38,990 --> 00:47:41,930\nAll right, at that point,\nI’m done on this router.\n\n894\n00:47:41,930 --> 00:47:46,878\nMy router is up, it’s good, you know,\nI did break one of the little rules there.\n\n895\n00:47:46,878 --> 00:47:51,327\nWith Frame-Relay, it’s a good idea to shut\nthe interface while you configure it,\n\n896\n00:47:51,327 --> 00:47:55,024\ncuz as you put the changes in,\nyou’re talking to that Telco switch and\n\n897\n00:47:55,024 --> 00:47:56,671\nit can create some confusion.\n\n898\n00:47:56,671 --> 00:47:58,774\nSo, I'm just gonna reset that real quick.\n\n899\n00:47:58,774 --> 00:48:00,526\nI'm just gonna do a shutdown.\n\n900\n00:48:00,526 --> 00:48:03,772\nAnd wait a second so\nthat it flushes whatever it has, and\n\n901\n00:48:03,772 --> 00:48:05,440\nthen I'll do a no shutdown.\n\n902\n00:48:05,440 --> 00:48:10,250\nCuz it might have learned some DLCI's\nwhile inverse arp was turned on.\n\n903\n00:48:10,250 --> 00:48:12,090\nAnd I don't want those sitting around.\n\n904\n00:48:12,090 --> 00:48:15,210\nSo, I'm just gonna do that, and then I'll\ndo a no shutdown to bring it back up.\n\n905\n00:48:16,700 --> 00:48:17,690\nNow it's come back up,\n\n906\n00:48:17,690 --> 00:48:22,680\nI'm gonna know about my DLCI that I\ndefined, I shouldn't learned any.\n\n907\n00:48:22,680 --> 00:48:26,840\nAll right, how do we know if this work?\n\n908\n00:48:26,840 --> 00:48:29,960\nWell, just as a preface, it's not working,\n\n909\n00:48:29,960 --> 00:48:32,960\nI know it's not,\ncuz we haven't done the other end, right.\n\n910\n00:48:32,960 --> 00:48:35,740\nBut I should be talking to the telephone\ncompany switch at this point and\n\n911\n00:48:35,740 --> 00:48:37,480\nwe should be able to verify that.\n\n912\n00:48:37,480 --> 00:48:40,620\n>> And we have several different show\ncommands that will really help us here.\n\n913\n00:48:40,620 --> 00:48:47,040\nThe show frame relay-lmi, I think is\nnormally the first one that we run.\n\n914\n00:48:47,040 --> 00:48:49,650\nThat shows that we're actually\ncommunicating with the frame relay switch.\n\n915\n00:48:51,280 --> 00:48:55,410\n>> That show frame relay, frame-relaylmi.\n\n916\n00:48:55,410 --> 00:48:57,190\nIt is, it's usually my go-to one.\n\n917\n00:48:57,190 --> 00:48:58,740\nAnd the main reason,\nyou might be thinking,\n\n918\n00:48:58,740 --> 00:49:00,890\nwell can't I just look at\nthe interface status, right?\n\n919\n00:49:00,890 --> 00:49:03,480\nAnd you can do a show IP interface brief.\n\n920\n00:49:03,480 --> 00:49:06,680\nAnd you can see that serial 1/1 is up, up.\n\n921\n00:49:06,680 --> 00:49:09,430\nBut remember what I said earlier,\nthat's not really meaningful.\n\n922\n00:49:09,430 --> 00:49:13,249\nAnd that's why we skip that one and\ngo straight to show frame-relay lmi,\n\n923\n00:49:13,249 --> 00:49:14,610\nlike Ronnie said.\n\n924\n00:49:14,610 --> 00:49:18,020\nThis is gonna show,\nare we talking to our Telco switch.\n\n925\n00:49:19,140 --> 00:49:23,750\nAnd since only one side is up, I'm not\ngonna see a whole lot of information here.\n\n926\n00:49:23,750 --> 00:49:28,532\nBut what I'm looking for is, I'm looking\nto see a good healthy lineup here.\n\n927\n00:49:28,532 --> 00:49:32,534\nIt says an LMI type, and see how type\nequals Cisco, and that’s it’s not seeing\n\n928\n00:49:32,534 --> 00:49:37,315\nanything undetected or whatever,\nwhich means I’m not talking to the switch.\n\n929\n00:49:37,315 --> 00:49:42,120\nThe other thing is your system is\ngonna start sending status inquiries.\n\n930\n00:49:42,120 --> 00:49:46,010\nWhether the line is working or not,\nyou should be sending status inquiries, so\n\n931\n00:49:46,010 --> 00:49:48,100\nyou should see that number,\nand it should be incrementing.\n\n932\n00:49:48,100 --> 00:49:49,470\nIt should be going up over time.\n\n933\n00:49:50,490 --> 00:49:54,590\nAnd over here,\nyou should be receiving status messages.\n\n934\n00:49:54,590 --> 00:49:56,090\nIf you're receiving status messages,\n\n935\n00:49:56,090 --> 00:49:59,420\nthat means you're actually\ngetting replies from the switch.\n\n936\n00:49:59,420 --> 00:50:02,000\nJust because you're sending, doesn't\nmean you're actually seeing the switch,\n\n937\n00:50:02,000 --> 00:50:05,200\nyou could be sending the wrong message and\nthe switch isn't gonna be able to reply.\n\n938\n00:50:05,200 --> 00:50:07,495\nSo we're really looking to\nsee that number increasing.\n\n939\n00:50:09,540 --> 00:50:13,819\nNow the longer you hold an interface shut\ndown, the more out of sync these can get,\n\n940\n00:50:13,819 --> 00:50:17,043\nso don’t expect these to match up exactly,\nand you’ll see,\n\n941\n00:50:17,043 --> 00:50:19,605\nlike I received more status\nmatches than I sent.\n\n942\n00:50:19,605 --> 00:50:23,491\nAnd that’s not uncommon, it means that\nwhen I did my shutdown and no shut, when\n\n943\n00:50:23,491 --> 00:50:27,445\nit came up, I was probably receiving an\nolder one and so now they’re out of sync.\n\n944\n00:50:27,445 --> 00:50:29,586\nBut just expect to say that increment.\n\n945\n00:50:29,586 --> 00:50:33,101\nSo if you run it more than once,\nsee it was 30 and 31.\n\n946\n00:50:33,101 --> 00:50:34,483\nNow it's 38 and 39.\n\n947\n00:50:34,483 --> 00:50:35,760\nThey're going up.\n\n948\n00:50:36,950 --> 00:50:39,884\nSo I know that I'm talking to\nthe switch on the other side.\n\n949\n00:50:39,884 --> 00:50:40,690\n>> Yeah.\n\n950\n00:50:40,690 --> 00:50:43,640\nThis is a good indication that if\nyou're running Frame Relay and\n\n951\n00:50:43,640 --> 00:50:45,675\nall of a sudden you\nare not sending anything.\n\n952\n00:50:45,675 --> 00:50:48,120\nSo you might of configured\neverything perfectly.\n\n953\n00:50:48,120 --> 00:50:51,630\nBut if you're like me sometimes you\nconfigure everything perfectly except for\n\n954\n00:50:51,630 --> 00:50:53,890\nno shutdown.\n\n955\n00:50:53,890 --> 00:50:55,090\nAnd then you start saying oh wait.\n\n956\n00:50:56,380 --> 00:50:58,140\nWhy am I not sending any messages?\n\n957\n00:50:58,140 --> 00:51:00,790\nThat's usually a clear\nindication of that on your end.\n\n958\n00:51:00,790 --> 00:51:02,800\nNothing is actually sending out yet, but\n\n959\n00:51:02,800 --> 00:51:06,690\nif you go to the other end and you’re\nreceiving any messages, it may mean that\n\n960\n00:51:06,690 --> 00:51:09,210\nwe didn't get something configured right,\nso we’re not receiving anything.\n\n961\n00:51:09,210 --> 00:51:10,244\n>> Yep.\n\n962\n00:51:10,244 --> 00:51:10,828\nAll right, so\n\n963\n00:51:10,828 --> 00:51:14,360\nthat’s our link to the Telco switch,\nwhat about the link to the other end.\n\n964\n00:51:14,360 --> 00:51:17,040\nWell that's where we need to\nmonitor the virtual circuit.\n\n965\n00:51:17,040 --> 00:51:22,290\nAnd we can see the virtual circuit through\nthe eyes of the LMI, through the switch.\n\n966\n00:51:22,290 --> 00:51:26,057\nWe can ask the switch to tell us about\nthe circuit and it will tell us.\n\n967\n00:51:26,057 --> 00:51:30,240\nNow, to do that we do need to know\nthe DLCI number we're looking at.\n\n968\n00:51:30,240 --> 00:51:34,210\nAnd if you get automatic detection\nthen you might not know the DLCI.\n\n969\n00:51:34,210 --> 00:51:37,230\nIf you turn on auto, this is all auto,\nyou might not know the DLCI number.\n\n970\n00:51:37,230 --> 00:51:40,020\nAnd if you have more than one DLCI,\nit can get really confusing.\n\n971\n00:51:40,020 --> 00:51:45,440\nSo, your router is actually maintaining\na map of all the DLCI numbers that it has.\n\n972\n00:51:45,440 --> 00:51:48,896\nSo, if you don't know the DLCI number,\n\n973\n00:51:48,896 --> 00:51:54,396\nyou can always start with the little\nshow frame-relay PVC map.\n\n974\n00:51:54,396 --> 00:51:59,050\nThat will show any, or\nshoot, just PVC, sorry.\n\n975\n00:51:59,050 --> 00:51:59,830\nThere we go.\n\n976\n00:51:59,830 --> 00:52:01,690\nShow frame-relay PVC.\n\n977\n00:52:01,690 --> 00:52:02,500\nThere we go.\n\n978\n00:52:02,500 --> 00:52:06,220\nSo, I'll see my PVC's right here,\nmy circuits that I've learned about, and\n\n979\n00:52:06,220 --> 00:52:10,500\nthere's DLCI 102, and I see it,\nand I know it's there.\n\n980\n00:52:10,500 --> 00:52:15,370\nSo I can see that PVC, and I can\ndetermine whether or not it's healthy.\n\n981\n00:52:15,370 --> 00:52:19,760\nNotice it's right here and\nthe usage says local, all right?\n\n982\n00:52:19,760 --> 00:52:21,390\nIt's local, I've got it.\n\n983\n00:52:21,390 --> 00:52:24,900\nAnd the PVC status, inactive.\n\n984\n00:52:24,900 --> 00:52:29,660\nIt's local, it's being presented by that\nlocal switch, I can't connect to it.\n\n985\n00:52:29,660 --> 00:52:32,650\nBut it's inactive because\nthe other end is not up.\n\n986\n00:52:32,650 --> 00:52:34,720\nThat's whats giving me the status for\nthe remote end, and\n\n987\n00:52:34,720 --> 00:52:36,610\nletting me know I'm not in good shape.\n\n988\n00:52:36,610 --> 00:52:39,690\nThat in the fact that there's no\ntraffic being sent across it right,\n\n989\n00:52:39,690 --> 00:52:41,540\nall these big zeros down here.\n\n990\n00:52:41,540 --> 00:52:43,653\nNo traffic going across because\nthe other end is not up.\n\n991\n00:52:43,653 --> 00:52:47,505\nSo show-frame relay PVC,\nwe'll let us sit out.\n\n992\n00:52:47,505 --> 00:52:52,350\nSo I get to see that,\nI see the information that's out there.\n\n993\n00:52:53,450 --> 00:52:55,600\nNow we need to configure the other side.\n\n994\n00:52:55,600 --> 00:52:59,150\nSo I'll jump over to branch one and we're\nbasically gonna repeat the same process\n\n995\n00:52:59,150 --> 00:53:01,330\nover here but\nI need to use the other DLCI number.\n\n996\n00:53:01,330 --> 00:53:04,530\nAt branch one it's DLCI number 201.\n\n997\n00:53:04,530 --> 00:53:06,123\nSo we'll go and get that configured.\n\n998\n00:53:06,123 --> 00:53:12,746\nSo I'll get into my configuration,\nI'll get into serial 1/0.\n\n999\n00:53:12,746 --> 00:53:14,711\nI'm gonna do a shutdown this time, and\n\n1000\n00:53:14,711 --> 00:53:18,166\nactually I need to look at\nthe configuration that's on it right now,\n\n1001\n00:53:18,166 --> 00:53:21,279\njust to see what commands I've got,\nlooks like all default.\n\n1002\n00:53:21,279 --> 00:53:27,200\nGood, so I'm gonna give this one\nan IP address of 192.168.3.2.\n\n1003\n00:53:27,200 --> 00:53:31,340\nAnd I did end up doing a 252\non the other side, didn't I?\n\n1004\n00:53:31,340 --> 00:53:33,319\n>> Yep.\n\n1005\n00:53:33,319 --> 00:53:35,060\n>> So I've got that IP address in place.\n\n1006\n00:53:35,060 --> 00:53:38,436\nI'll say, encapsulation frame-relay.\n\n1007\n00:53:38,436 --> 00:53:42,910\nFrame-relay, lmi-type in the lmi.\n\n1008\n00:53:42,910 --> 00:53:45,290\nNow the remote M might have\na different lmi, right.\n\n1009\n00:53:45,290 --> 00:53:47,270\nIt might be plugged into a different\nvendor switch or whatever.\n\n1010\n00:53:47,270 --> 00:53:48,090\nThat's not uncommon.\n\n1011\n00:53:48,090 --> 00:53:50,590\nSo they don't have to\nmatch on the two sides.\n\n1012\n00:53:50,590 --> 00:53:51,420\nIn my case they do.\n\n1013\n00:53:53,590 --> 00:54:00,567\nAnd then I'll set that interface DLCI\nwhich on the other side was 201.\n\n1014\n00:54:00,567 --> 00:54:04,780\nMan, I don't need to change anything\nthere so I've got my DLCI and\n\n1015\n00:54:04,780 --> 00:54:07,510\nI'll do a no frame-relay inverse-arp.\n\n1016\n00:54:07,510 --> 00:54:10,380\nI don't have to do that but I wanna that\njust to make sure that it's my manual\n\n1017\n00:54:10,380 --> 00:54:11,840\nmappings that are all doing the work.\n\n1018\n00:54:12,840 --> 00:54:15,970\nThen I'll do a no shut down,\nand I'll get out of my config.\n\n1019\n00:54:18,030 --> 00:54:20,370\nAll right,\nI'll see the interface come up but\n\n1020\n00:54:20,370 --> 00:54:22,810\nthat just means I'm seeing\nthe local switch, right.\n\n1021\n00:54:22,810 --> 00:54:26,570\nSo that's up and now we'll repeat\nwhat we did over at the other side.\n\n1022\n00:54:26,570 --> 00:54:30,720\nWe'll do a show frame-relay lmi.\n\n1023\n00:54:32,590 --> 00:54:34,540\nAnd I'm talking to that switch.\n\n1024\n00:54:34,540 --> 00:54:37,460\nI've only sent one status inquiry and\nreceived one.\n\n1025\n00:54:37,460 --> 00:54:39,670\nThat's not enough when we\nreally decide this is healthy.\n\n1026\n00:54:39,670 --> 00:54:41,210\nSo, I'm gonna wait a second.\n\n1027\n00:54:41,210 --> 00:54:45,050\nAnd then I'll just rerun that, and I can\nsee I've gone two and two, all right?\n\n1028\n00:54:45,050 --> 00:54:46,370\nI am talking to that switch.\n\n1029\n00:54:47,710 --> 00:54:49,040\nAnd then I'll do a show\nof frame relay PVC.\n\n1030\n00:54:49,040 --> 00:54:52,867\nAnd I see I've got this PVC 201.\n\n1031\n00:54:52,867 --> 00:54:56,057\nPVC status, active.\n\n1032\n00:54:56,057 --> 00:54:58,570\nNot inactive, the other side is up.\n\n1033\n00:54:58,570 --> 00:54:59,790\nWe've gone active.\n\n1034\n00:54:59,790 --> 00:55:02,480\nWell shoot.\n\n1035\n00:55:02,480 --> 00:55:05,430\nSo on this one notice I've got\nsome other DLCI's being turned up.\n\n1036\n00:55:05,430 --> 00:55:06,910\nThese were automatically detected right.\n\n1037\n00:55:06,910 --> 00:55:10,080\nThere's more DLCI's on this interface and\nthese are inactive.\n\n1038\n00:55:10,080 --> 00:55:13,580\nSee how it says DLCI usage unused.\n\n1039\n00:55:13,580 --> 00:55:15,550\nIt exists, I'm just not using it.\n\n1040\n00:55:15,550 --> 00:55:17,901\nAnd the status is active\ncuz I'm not using it so\n\n1041\n00:55:17,901 --> 00:55:20,323\nI have no idea what's\ngoing on on the other end.\n\n1042\n00:55:20,323 --> 00:55:24,143\nBut the DLCI that we mapped is 201,\nit’s active.\n\n1043\n00:55:24,143 --> 00:55:25,892\nAnd in fact,\nif I jump over to headquarters,\n\n1044\n00:55:25,892 --> 00:55:27,740\nthat one should now say\nactive over here too.\n\n1045\n00:55:27,740 --> 00:55:31,933\nSo headquarters have gone active.\n\n1046\n00:55:31,933 --> 00:55:35,110\nSo we should good to start\nflowing some traffic.\n\n1047\n00:55:35,110 --> 00:55:39,638\nIf I do a little ping to 192.168.3.2,\nthat’s the remote side,\n\n1048\n00:55:39,638 --> 00:55:41,985\nI should be able to ping able to ping it.\n\n1049\n00:55:41,985 --> 00:55:47,570\nAnd I’m glad I said should, because it\nis just sitting there and thinking.\n\n1050\n00:55:47,570 --> 00:55:51,580\nDid I miss a command?\n\n1051\n00:55:51,580 --> 00:55:55,873\nLet’s see, show ip int brief.\n\n1052\n00:55:55,873 --> 00:56:01,830\nMake sure I didn't do a typo on that IP,\nso we want 192.168.3.1, all right.\n\n1053\n00:56:01,830 --> 00:56:05,220\nSo it looks like my layer\nthree side is not too happy,\n\n1054\n00:56:05,220 --> 00:56:10,450\nI'm not pinging 192.168.3.2, and so\nit is not seeing that on the other side.\n\n1055\n00:56:10,450 --> 00:56:13,210\nNow, I've disabled inverse ARP, and so\n\n1056\n00:56:13,210 --> 00:56:16,680\nsome of the automatic detection\nthat's happening is not taking place.\n\n1057\n00:56:16,680 --> 00:56:18,070\nAnd when that happens,\n\n1058\n00:56:18,070 --> 00:56:21,580\nsometimes we need to put what's\ncalled a frame relay map in place.\n\n1059\n00:56:21,580 --> 00:56:22,670\nIn my scenario I shouldn't, but\n\n1060\n00:56:22,670 --> 00:56:28,350\nit does happen sometimes,\nwhere we map an IP address to a DLCI.\n\n1061\n00:56:28,350 --> 00:56:32,772\nAnd these are things that, in multi-point\nnetworks, we'll absolutely use.\n\n1062\n00:56:32,772 --> 00:56:35,310\nIn point-to-point its\nnormally automatically taken\n\n1063\n00:56:35,310 --> 00:56:39,517\ncare of by the circuit, but\nif I do a show frame-relay map.\n\n1064\n00:56:40,890 --> 00:56:45,150\nI've got no mapping, so I'm not really\nmapping that IP to a particular DLCI,\n\n1065\n00:56:45,150 --> 00:56:47,890\nthat means I'm not\nlearning the other side.\n\n1066\n00:56:47,890 --> 00:56:51,800\nIf I were to turn inverse ARP back on, I\nbet it would find it, but I'm gonna go and\n\n1067\n00:56:51,800 --> 00:56:54,220\nmanually map that to take care of it.\n\n1068\n00:56:54,220 --> 00:57:00,450\nAnd inverse ARP is not supported by every\ntelco, so this is not an uncommon thing.\n\n1069\n00:57:00,450 --> 00:57:03,250\nBut on the interface,\nyou basically just say, frame relay map,\n\n1070\n00:57:03,250 --> 00:57:07,570\nand you'll see where you can map\ndifferent protocols, I'm dealing with IP.\n\n1071\n00:57:07,570 --> 00:57:12,018\nSo frame relay map IP, and then I can\nspecify the IP address I'm mapping.\n\n1072\n00:57:12,018 --> 00:57:13,240\nI'm doing 198.168.3.2, and\n\n1073\n00:57:13,240 --> 00:57:18,438\nthen I just need to tell it\nthe DLCI number that it's on.\n\n1074\n00:57:18,438 --> 00:57:23,470\nMy headquarters DLCI number is 102, that's\nwhat gets them to the other branch and\n\n1075\n00:57:23,470 --> 00:57:26,180\nso that's the mapping I need to put in.\n\n1076\n00:57:26,180 --> 00:57:30,773\nSo I'm gonna put that in and\nif I do a show frame-relay map now,\n\n1077\n00:57:30,773 --> 00:57:37,120\nthere's that mapping,\nI've got 192.168.3.2 pointing to DLCI 102.\n\n1078\n00:57:37,120 --> 00:57:42,540\nAnd notice here it says static,\nif inverse arp is turned on,\n\n1079\n00:57:42,540 --> 00:57:45,170\nit'll learn these automatically and\nright there it'll say dynamic.\n\n1080\n00:57:45,170 --> 00:57:47,340\nSo it's easy to spot\nthe ones that you've learned\n\n1081\n00:57:47,340 --> 00:57:48,432\nversus the ones that you've put in.\n\n1082\n00:57:49,930 --> 00:57:50,934\nAll right, I need to go and\n\n1083\n00:57:50,934 --> 00:57:54,060\ndo the opposite thing on branch one cuz\nI'll bet branch one has the same problem.\n\n1084\n00:57:55,930 --> 00:57:57,010\nSure enough, it's map is empty.\n\n1085\n00:57:58,010 --> 00:58:01,160\nSo I'll get into serial 1/0 and\nI'll just do a quick frame relay map.\n\n1086\n00:58:02,210 --> 00:58:06,459\nAnd I'll map the home office's IP\nto DLC number 201 on this side,\n\n1087\n00:58:06,459 --> 00:58:08,957\nthe branch is connected to DLCI 201.\n\n1088\n00:58:12,131 --> 00:58:14,569\nAll right, and if I look at that map,\nthere's the map.\n\n1089\n00:58:14,569 --> 00:58:19,280\nAnd now if I try and ping across the line,\nit'll know exactly what DLCI to use, and\n\n1090\n00:58:19,280 --> 00:58:20,525\nthere we go, right?\n\n1091\n00:58:20,525 --> 00:58:22,565\nSo there was our problem.\n\n1092\n00:58:22,565 --> 00:58:25,530\nIf I had turned in-reverse R back on that\nmore than likely would have worked, but\n\n1093\n00:58:25,530 --> 00:58:27,180\nwithout it, I do a manual map.\n\n1094\n00:58:27,180 --> 00:58:30,100\nAnd the manual maps actually do\ngive you some extra control.\n\n1095\n00:58:30,100 --> 00:58:33,090\nThere's a little feature I'll talk about\nlater where we'll actually want that.\n\n1096\n00:58:33,090 --> 00:58:35,780\nSo there's times where you have inverse\nARP and you'll wanna turn it off so\n\n1097\n00:58:35,780 --> 00:58:39,950\nthat you can do the maps to override some\nof the little quirks of an MVNA node.\n\n1098\n00:58:39,950 --> 00:58:45,880\nAll right, but as far as basic frame\nrelay is concerned, that's now up.\n\n1099\n00:58:45,880 --> 00:58:48,340\nI can ping both ways, or\nat least I say I can.\n\n1100\n00:58:48,340 --> 00:58:50,100\nLet's see if we can, yep.\n\n1101\n00:58:50,100 --> 00:58:54,440\nAnd if I do a little show cdp neighbor,\nwell it's not gonna show up there,\n\n1102\n00:58:54,440 --> 00:58:55,980\nbecause actually,\n\n1103\n00:58:55,980 --> 00:58:58,730\nit's not gonna show up there because CDP\nis not working over our frame relay.\n\n1104\n00:58:58,730 --> 00:59:02,280\nBecause of something I mentioned a second\nago, so we'll have to double back on that.\n\n1105\n00:59:02,280 --> 00:59:06,800\nBut CDP uses broadcast, and\nthat's not gonna work across this link, so\n\n1106\n00:59:06,800 --> 00:59:08,445\nthat's why we're not\nseeing a CDP neighbor.\n\n1107\n00:59:08,445 --> 00:59:11,380\nBut the link is up, I'm able to\ncommunicate through the other side, so\n\n1108\n00:59:11,380 --> 00:59:14,575\nwe're good there, and we're ready to rock.\n\n1109\n00:59:14,575 --> 00:59:15,250\n>> Right.\n\n1110\n00:59:15,250 --> 00:59:20,210\n>> The configuration at the end of\nthe day if I take a look at it here,\n\n1111\n00:59:20,210 --> 00:59:24,320\nI get encapsulation frame relay and\nthat was probably enough.\n\n1112\n00:59:24,320 --> 00:59:27,086\nI had all my inverse ARP and all that\nstuff was supported by my switch, so\n\n1113\n00:59:27,086 --> 00:59:28,440\nthat was really enough.\n\n1114\n00:59:28,440 --> 00:59:30,590\nBut I went on and\nhard set everything, right?\n\n1115\n00:59:30,590 --> 00:59:35,260\nI did the interface DLCI,\nI did the LMI type, right?\n\n1116\n00:59:35,260 --> 00:59:38,120\nAnd then because I disabled inverse ARP,\nI went ahead and\n\n1117\n00:59:38,120 --> 00:59:41,950\ndid an IP map to tell it exactly who\nto get to, and what DLCI number to use.\n\n1118\n00:59:41,950 --> 00:59:44,967\nSo that's an example right there of\na point to point the hard way, right?\n\n1119\n00:59:44,967 --> 00:59:48,067\nAll the different configuration\nsettings that we may bump into.\n\n1120\n00:59:48,067 --> 00:59:51,174\nAll right, well that's a pretty good\nstopping point for us right there,\n\n1121\n00:59:51,174 --> 00:59:53,340\nthat's a single point-to-point line.\n\n1122\n00:59:53,340 --> 00:59:57,625\nWhen we get back, I want to move that\nconfiguration to a sub interface, so\n\n1123\n00:59:57,625 --> 00:59:59,810\nthat we can then go and\ndo multipoint also, and\n\n1124\n00:59:59,810 --> 01:00:03,330\nactually have the different ways\nall configured on the same line.\n\n1125\n01:00:03,330 --> 01:00:06,200\nSo, we'll get a chance to see\nthat when we pick back up.\n\n1126\n01:00:06,200 --> 01:00:07,680\nStay tuned, we'll be back after this.\n\n1127\n01:00:07,680 --> 01:00:15,539\n[MUSIC]\n\n1128\n01:00:15,539 --> 01:00:19,854\nAll right, in the last segment we got our\nfirst chance to see point-to-point frame\n\n1129\n01:00:19,854 --> 01:00:24,330\nrelay configured on two routers, and\nI did it right on the interface itself.\n\n1130\n01:00:24,330 --> 01:00:27,430\nAnd I'll tell you guys in real life land,\nthat's something I never do,\n\n1131\n01:00:27,430 --> 01:00:30,380\nI always configure a frame\nrelay on a sub interface.\n\n1132\n01:00:30,380 --> 01:00:33,390\nAnd the reason is it leaves us open for\nexpansion later on.\n\n1133\n01:00:33,390 --> 01:00:37,535\nIt's really easy to add more DLCIs and\nother things, when you've got\n\n1134\n01:00:37,535 --> 01:00:41,140\nsub-interfaces in place than when you\ndo it right on the parent interface.\n\n1135\n01:00:41,140 --> 01:00:44,880\nSo what I want to do is take our\nconfiguration from before the break and\n\n1136\n01:00:44,880 --> 01:00:46,210\nmove it to a subinterface.\n\n1137\n01:00:46,210 --> 01:00:47,620\nAnd before I do that,\n\n1138\n01:00:47,620 --> 01:00:50,416\nthere is a little bit of clean up I need\nto do because a lot of these commands\n\n1139\n01:00:50,416 --> 01:00:55,370\nthat I put in don't need to be on\nthe parent, but on the sub-interface.\n\n1140\n01:00:55,370 --> 01:00:57,730\nBut some commands do have\nto stay on the parent.\n\n1141\n01:00:57,730 --> 01:01:00,560\nOn the parent interface is\nwhere we have to configure our\n\n1142\n01:01:00,560 --> 01:01:02,140\ncommunication with the switch.\n\n1143\n01:01:02,140 --> 01:01:06,300\nSo I need encapsulation frame\nrelay on the parent interface, and\n\n1144\n01:01:06,300 --> 01:01:10,330\nI need the frame relay LMI type\nto be on the parent interface.\n\n1145\n01:01:10,330 --> 01:01:12,390\nAnd if I'm gonna disable inverse ARP,\n\n1146\n01:01:12,390 --> 01:01:15,670\nthat needs to be done on\nthe parent interface too.\n\n1147\n01:01:15,670 --> 01:01:19,910\nThe rest of these we would actually\ndo on the sub-interface instead,\n\n1148\n01:01:19,910 --> 01:01:21,630\nmoving those commands off.\n\n1149\n01:01:21,630 --> 01:01:25,100\nSo some things go on the parent,\nsome things go on the sub, right?\n\n1150\n01:01:25,100 --> 01:01:26,530\nAt a minimum on the parent,\n\n1151\n01:01:26,530 --> 01:01:30,520\nyou're gonna define the encapsulation,\nand the LMI type, right?\n\n1152\n01:01:30,520 --> 01:01:32,480\nAnd then you'll go into your sub and\nstart to do other things.\n\n1153\n01:01:32,480 --> 01:01:36,790\nSo I'm gonna get in there and\njust remove some of these commands.\n\n1154\n01:01:36,790 --> 01:01:41,170\nI need no IP address, so\nI'm taking that IP address off of there.\n\n1155\n01:01:41,170 --> 01:01:44,150\nAnd it's probably a good idea to shut\nthis down while I'm working on it,\n\n1156\n01:01:44,150 --> 01:01:47,470\njust to not freak out the TelCo\nas I start pulling stuff.\n\n1157\n01:01:47,470 --> 01:01:48,600\nI'll go ahead and\n\n1158\n01:01:48,600 --> 01:01:53,590\nturn inverse ARP back on, I think I've\nfinished that little demonstration.\n\n1159\n01:01:53,590 --> 01:01:55,953\nI will get rid of the interface DLCI.\n\n1160\n01:01:55,953 --> 01:01:59,353\n>> [CROSSTALK]\n>> Oh, I've got a typo,\n\n1161\n01:01:59,353 --> 01:01:59,990\nwell press through here, right.\n\n1162\n01:01:59,990 --> 01:02:07,250\nSo let me fix that, and\noh, I've got a PVC map.\n\n1163\n01:02:07,250 --> 01:02:11,801\nSo I need to do a no frame-relay map,\nIP 192.168.3.2.\n\n1164\n01:02:11,801 --> 01:02:14,310\nSo we'll get that map out of there, and\n\n1165\n01:02:14,310 --> 01:02:16,650\nwhen I removed the map,\nI could have typed it all the way out.\n\n1166\n01:02:16,650 --> 01:02:18,940\nBut you can map an IP address to one DLCI.\n\n1167\n01:02:18,940 --> 01:02:22,410\nSo if you stop right there, that's\nenough for it to actually remove it, and\n\n1168\n01:02:22,410 --> 01:02:24,950\nthen I can get that removed, too.\n\n1169\n01:02:24,950 --> 01:02:30,510\nSo if I do a show run interface\nserial 1/0, I can see what's left.\n\n1170\n01:02:30,510 --> 01:02:34,040\nEncapsulation frame relay,\nframe relay LMI type Cisco.\n\n1171\n01:02:34,040 --> 01:02:36,990\nThe other commands here are defaults,\nI've got a shutdown, and\n\n1172\n01:02:36,990 --> 01:02:38,180\nI've got no IP address, right?\n\n1173\n01:02:38,180 --> 01:02:40,089\nSo really just two commands\non the parent interface.\n\n1174\n01:02:41,580 --> 01:02:44,060\nThen I'm gonna get into my sub-interface,\n\n1175\n01:02:44,060 --> 01:02:48,050\nI'm gonna divide this one physical\ninterface into multiple virtuals.\n\n1176\n01:02:48,050 --> 01:02:49,880\nIf it's a point-to-point,\nyou might be asking yourself,\n\n1177\n01:02:49,880 --> 01:02:51,930\nwell why bother with that, right?\n\n1178\n01:02:51,930 --> 01:02:56,070\nAnd my answer to that is,\nit might be point-to-point today,\n\n1179\n01:02:56,070 --> 01:02:59,850\nbut what about later on,\nwhat if you add a DR side, or whatever?\n\n1180\n01:02:59,850 --> 01:03:03,800\nIt sure would be nice to already\nbe set up to handle that, right?\n\n1181\n01:03:03,800 --> 01:03:05,520\nBut if you've already configured\nit on the physical interface\n\n1182\n01:03:05,520 --> 01:03:09,230\nyou'll have to change it, so better to\njust start off with the sub-interfaces.\n\n1183\n01:03:09,230 --> 01:03:14,103\nSo I'm gonna say interface\nserial 1/0 point,\n\n1184\n01:03:14,103 --> 01:03:17,390\nand then some number, okay?\n\n1185\n01:03:17,390 --> 01:03:21,190\nAnd you can pick whatever number you want,\nall right?\n\n1186\n01:03:21,190 --> 01:03:24,160\nFor me, when it's a point-to-point,\nI'll usually use the DLCI number.\n\n1187\n01:03:24,160 --> 01:03:28,440\nSo if it's DLCI number 102, I'll just\nsub-interface 102 just to keep it even.\n\n1188\n01:03:28,440 --> 01:03:31,570\nBut if it's multi-point, you'll have\nmore than one DLCIs involved, and\n\n1189\n01:03:31,570 --> 01:03:34,450\nso it's not so convenient anymore, is it?\n\n1190\n01:03:34,450 --> 01:03:36,052\nSo it doesn't really matter what you pick.\n\n1191\n01:03:36,052 --> 01:03:40,640\nI'm gonna say this is connecting to\nbranched one, so I'll pick one, all right?\n\n1192\n01:03:40,640 --> 01:03:41,810\nSo that's what I'm gonna do.\n\n1193\n01:03:41,810 --> 01:03:44,509\nNow, I can't stop there.\n\n1194\n01:03:44,509 --> 01:03:48,368\nWhen we do router on a stick, you're\nusing Ethernet as your encapsulation.\n\n1195\n01:03:48,368 --> 01:03:50,833\nWell it's not encapsulation,\nthis is your frame type.\n\n1196\n01:03:50,833 --> 01:03:54,928\nAnd when you create a subinterface\nit handles that just fine,\n\n1197\n01:03:54,928 --> 01:03:59,256\nbut with Frame Relay, it needs to\nknow is this a point to point, or\n\n1198\n01:03:59,256 --> 01:04:01,550\nis it a point to multi point?\n\n1199\n01:04:01,550 --> 01:04:05,040\nBecause a point to point will\njust have one delsi, and\n\n1200\n01:04:05,040 --> 01:04:09,110\nwe don’t have to do things like maps or\nwe usually don’t have to do maps.\n\n1201\n01:04:09,110 --> 01:04:11,750\nIf it's a multi point, though,\nwe're going to have to do maps and so\n\n1202\n01:04:11,750 --> 01:04:14,230\nit needs to know whether or\nnot to enable that functionality.\n\n1203\n01:04:14,230 --> 01:04:17,870\nSo there's an extra little bit that\nI'll need to specify on here, and\n\n1204\n01:04:17,870 --> 01:04:19,290\nwhy is it telling me\nthat it's unrecognized?\n\n1205\n01:04:20,850 --> 01:04:24,890\nInterface, s one slash zero point one,\nif you just type it in, start typing,\n\n1206\n01:04:24,890 --> 01:04:26,100\nI think it accepts it.\n\n1207\n01:04:27,310 --> 01:04:29,530\nYou know that's try to run without\nat it and see it gripe at us.\n\n1208\n01:04:29,530 --> 01:04:31,080\nWell, see it says it's incomplete.\n\n1209\n01:04:31,080 --> 01:04:37,900\nBut basically you just need to add\nto it point-to-point or you can add\n\n1210\n01:04:37,900 --> 01:04:42,030\nto it with multi point to let it know that\nit's gonna be a multi point sub interface.\n\n1211\n01:04:42,030 --> 01:04:44,640\nNow it's written point-to-point but\n\n1212\n01:04:44,640 --> 01:04:47,030\nwhen you do multi-point,\nit's just written multi-point.\n\n1213\n01:04:47,030 --> 01:04:50,360\nThere's no ./2/ multi-point,\nyou just write it that way.\n\n1214\n01:04:50,360 --> 01:04:52,650\nSo, we'll see that later.\n\n1215\n01:04:52,650 --> 01:04:54,070\nSo there we go, it's happy and\n\n1216\n01:04:54,070 --> 01:04:56,860\nI don't know why the context help\nisn't turning up on that one.\n\n1217\n01:04:56,860 --> 01:04:58,739\nBut there we go, it's just point to point.\n\n1218\n01:05:00,490 --> 01:05:04,190\nNow I do the point to point specific\nconfiguration things, right?\n\n1219\n01:05:04,190 --> 01:05:07,740\nHere's the spot where I dive in and\nI start to put my individual settings.\n\n1220\n01:05:07,740 --> 01:05:13,350\nSo I'm gonna set my IP address,\nand what did I use before?\n\n1221\n01:05:13,350 --> 01:05:15,300\nThree dot one.\n\n1222\n01:05:15,300 --> 01:05:16,150\n>> 30 bits a minute.\n\n1223\n01:05:16,150 --> 01:05:17,970\n>> I'll stick with that same address.\n\n1224\n01:05:17,970 --> 01:05:19,580\nIt's signing it right there.\n\n1225\n01:05:19,580 --> 01:05:21,150\nI'll set my dlci number.\n\n1226\n01:05:23,130 --> 01:05:28,010\nI do need to set my dlci number because\nI might have more than one dlci,\n\n1227\n01:05:28,010 --> 01:05:29,460\nif not now then later.\n\n1228\n01:05:29,460 --> 01:05:33,020\nSo, I need to define it and\non this side it's 102 and there,\n\n1229\n01:05:33,020 --> 01:05:35,500\nit takes me to that other prompt again.\n\n1230\n01:05:36,810 --> 01:05:40,850\nNow, if I have inverse ARP in place,\nthen I'll be able to learn\n\n1231\n01:05:40,850 --> 01:05:44,380\nabout the person on the other side, and\nI don't have to do any frame relay maps.\n\n1232\n01:05:44,380 --> 01:05:47,600\nIf I don't have inverse ARP,\nhere's where I would add a map.\n\n1233\n01:05:47,600 --> 01:05:50,160\nAnd so I would go and\npunch in a map on this one.\n\n1234\n01:05:50,160 --> 01:05:55,450\nBut we rarely have to do that on a point\nto point, so that should be enough for me.\n\n1235\n01:05:55,450 --> 01:05:59,690\nI’m gonna get back to the parent\ninterface and I’ll do a no shutdown.\n\n1236\n01:06:02,210 --> 01:06:05,830\nAnd once that’s done, I should be\nable to connect to the other side.\n\n1237\n01:06:05,830 --> 01:06:09,080\nNow, just because I did a subinterface\non this side doesn’t mean I have\n\n1238\n01:06:09,080 --> 01:06:10,850\nto do a subinterface on the other side.\n\n1239\n01:06:10,850 --> 01:06:15,100\nSo I can leave branch one configured right\non the parent interface if I wanted.\n\n1240\n01:06:15,100 --> 01:06:17,500\nAll right, or I could go and\nmove it to a subinterface.\n\n1241\n01:06:17,500 --> 01:06:20,130\nThat doesn't matter, right,\ncause that's kind of virtual, all right?\n\n1242\n01:06:20,130 --> 01:06:24,700\nBut it should be up, and it should\nfunction the exact same way as it did\n\n1243\n01:06:24,700 --> 01:06:31,240\nbefore, so if I do a show IP\ninterface brief, I see serial 1/0 has\n\n1244\n01:06:31,240 --> 01:06:37,170\nno IP address and is up, and the sub\ninterface has an IP and is up also.\n\n1245\n01:06:37,170 --> 01:06:40,450\nRemember if you shut the parent down it\nshuts down all the sub interfaces, so\n\n1246\n01:06:40,450 --> 01:06:41,530\nbe careful with that in the future.\n\n1247\n01:06:42,780 --> 01:06:48,330\nIf I do a show frame-dash relay,\nlet's start with LMI, right?\n\n1248\n01:06:48,330 --> 01:06:50,030\nI already know that I'm seeing the switch.\n\n1249\n01:06:50,030 --> 01:06:51,300\nThere's nothing special there, right?\n\n1250\n01:06:51,300 --> 01:06:55,270\nWe were seeing that before and we didn't\nmove that from the parent interface.\n\n1251\n01:06:55,270 --> 01:06:59,580\nBut what we did move was the PVC and\nif I take a look at my PVC,\n\n1252\n01:06:59,580 --> 01:07:02,520\nthere's 102 and it shows as active.\n\n1253\n01:07:02,520 --> 01:07:04,820\nThe interface is the sub interface now.\n\n1254\n01:07:04,820 --> 01:07:07,490\nAll right, and\nit looks like it's up and happy.\n\n1255\n01:07:07,490 --> 01:07:11,980\nBut I don't really know if that's\ncommunications that I generated before or\n\n1256\n01:07:11,980 --> 01:07:16,850\nnow, until II may need to watch to see if\nthese are actually incrementing and so on.\n\n1257\n01:07:16,850 --> 01:07:19,420\nI might see some errors,\nI don't see any errors.\n\n1258\n01:07:19,420 --> 01:07:23,150\nBut, you might see some errors\njust because of the conversion,\n\n1259\n01:07:23,150 --> 01:07:24,600\nas we are making those changes.\n\n1260\n01:07:24,600 --> 01:07:27,760\nBut I was good this time, and I shut the\ninterface down while I worked on it, and\n\n1261\n01:07:27,760 --> 01:07:29,130\nthat avoids us from getting errors.\n\n1262\n01:07:31,350 --> 01:07:36,279\nAll right now if I do a show frame\nrelay-map, I didn't do a map,\n\n1263\n01:07:36,279 --> 01:07:37,670\nbut here it is.\n\n1264\n01:07:37,670 --> 01:07:43,430\nI learned that there's a point to point\non dlci 102 and I'm connected to it.\n\n1265\n01:07:43,430 --> 01:07:45,920\nNow it's not saying what\nIPs on the other side, but\n\n1266\n01:07:45,920 --> 01:07:48,150\nbecause I've got inverse r I'll try and\nlearn.\n\n1267\n01:07:48,150 --> 01:07:53,790\nI'll try and learn people that are out\nthere and so if I try and communicate\n\n1268\n01:07:53,790 --> 01:07:58,770\nacross that line to 192.168.3.2,\nthe other router, I get there, right.\n\n1269\n01:07:58,770 --> 01:08:04,050\nAnd if I do a show frame relay map,\nI don't see that IP in my map, and\n\n1270\n01:08:04,050 --> 01:08:06,400\nthat's because the point to point\nline doesn't really need that.\n\n1271\n01:08:06,400 --> 01:08:09,910\nThere's only one other end, so\nany traffic that should be destined for\n\n1272\n01:08:09,910 --> 01:08:13,680\nthat, it's just gonna go to whatever's\non the other end, so it handles it, and\n\n1273\n01:08:13,680 --> 01:08:15,880\nit sends it across the other side.\n\n1274\n01:08:15,880 --> 01:08:16,620\nYou don't need a map, all right?\n\n1275\n01:08:18,190 --> 01:08:22,910\nThat's basically frame relay,\npoint to point, on a sub-interface.\n\n1276\n01:08:22,910 --> 01:08:25,860\nBut the cool part about doing\nit this way is it frees us up\n\n1277\n01:08:25,860 --> 01:08:27,890\nto create more sub-interfaces.\n\n1278\n01:08:27,890 --> 01:08:31,560\nMore that are either point to point to\nother branches if we wanna go that route\n\n1279\n01:08:31,560 --> 01:08:35,990\nor multi point, if we want to\nconnect on one on one branch.\n\n1280\n01:08:35,990 --> 01:08:38,360\nAll right now,\nhow do we make that decision?\n\n1281\n01:08:38,360 --> 01:08:40,170\nHow do we just,\nwell actually before I jump into that,\n\n1282\n01:08:40,170 --> 01:08:42,690\nlet me just recap that configuration,\nright.\n\n1283\n01:08:42,690 --> 01:08:47,470\nSo let me pull up that config.\n\n1284\n01:08:47,470 --> 01:08:48,870\nSo here's the config that I just did,\n\n1285\n01:08:48,870 --> 01:08:51,640\nand I just want to point out what's on\nthe parent and what's on the child.\n\n1286\n01:08:51,640 --> 01:08:54,600\nRight, on the parent,\nencapsulation frame-relay,\n\n1287\n01:08:54,600 --> 01:08:57,460\nframe relay LMI type system, all right.\n\n1288\n01:08:57,460 --> 01:08:59,160\nOn the sub interface,\n\n1289\n01:08:59,160 --> 01:09:03,960\nmy second IP address,\nframe relay interface dlci 102, all right?\n\n1290\n01:09:03,960 --> 01:09:07,740\nAnd that was it, but if I wanted to go and\ndo more things I could punch them in\n\n1291\n01:09:07,740 --> 01:09:09,870\nthere, but that's the basic\nconfiguration right there.\n\n1292\n01:09:09,870 --> 01:09:12,460\nI've split it off into a sub interface.\n\n1293\n01:09:12,460 --> 01:09:16,500\nAll right Now my other two routers,\nI’ve got branch 2 and branch 3 and\n\n1294\n01:09:16,500 --> 01:09:18,230\nI wanna get them connected.\n\n1295\n01:09:18,230 --> 01:09:22,860\nI could create two more sub interfaces,\n0.1, 0.2, do point to point to those\n\n1296\n01:09:22,860 --> 01:09:28,460\nbranches also, but\nwhat if don’t want that?\n\n1297\n01:09:28,460 --> 01:09:31,780\nOne of the things about doing\na point to point like this is\n\n1298\n01:09:31,780 --> 01:09:34,750\neach one requires their\nown separate network.\n\n1299\n01:09:34,750 --> 01:09:38,030\nWhen I created that connection for\nbranch one,\n\n1300\n01:09:38,030 --> 01:09:42,050\nI created the 192.168.3 network,\nand it's a slash 30.\n\n1301\n01:09:42,050 --> 01:09:45,090\nSo I could create more slash 30s for\nthose other branches but\n\n1302\n01:09:45,090 --> 01:09:46,965\nit's a little wasteful of IPs, isn't it?\n\n1303\n01:09:46,965 --> 01:09:49,520\nCuz each connection has a broadcast and\na sub net reference.\n\n1304\n01:09:49,520 --> 01:09:52,160\nI'm wasting two IPs with each connection.\n\n1305\n01:09:52,160 --> 01:09:54,210\nWhat if I just want to have one network?\n\n1306\n01:09:54,210 --> 01:09:56,830\nOne network that is my\nframe relay network.\n\n1307\n01:09:56,830 --> 01:10:00,920\nSo I want 192.168.4 to be\nmy frame relay network.\n\n1308\n01:10:00,920 --> 01:10:02,340\nI just want it to be a class c.\n\n1309\n01:10:02,340 --> 01:10:03,890\nI can have 254 branches out there.\n\n1310\n01:10:04,960 --> 01:10:06,990\nWell if I count headquarters,\n253 branches.\n\n1311\n01:10:08,110 --> 01:10:10,900\nSo I can have all of that out there,\nall on one network.\n\n1312\n01:10:10,900 --> 01:10:12,540\nOne broadcast, one subnet network, and\n\n1313\n01:10:12,540 --> 01:10:15,330\nthat's it we can't do that\nwith point to points.\n\n1314\n01:10:15,330 --> 01:10:19,280\nPoint to points are just two host,\nbut a multi point you can and\n\n1315\n01:10:19,280 --> 01:10:22,070\nthat's really the deciding factor\nbetween one versus the other.\n\n1316\n01:10:22,070 --> 01:10:25,910\nIf you wanna have one\ncommon frame relay network\n\n1317\n01:10:25,910 --> 01:10:29,270\nyou'll use a multi point connection,\nbut if you want.\n\n1318\n01:10:29,270 --> 01:10:34,100\nIndividual networks for each one,\nyou'll use point-to-points.\n\n1319\n01:10:34,100 --> 01:10:37,740\nAt the end of the day,\nit's the same amount of dlci's, and\n\n1320\n01:10:37,740 --> 01:10:40,540\nyou use your interface the same\nway as far as bandwidth, so\n\n1321\n01:10:40,540 --> 01:10:42,370\nthe difference really\ncomes down to management.\n\n1322\n01:10:42,370 --> 01:10:46,420\nWith individual routes to each,\nyou can manipulate your routing table.\n\n1323\n01:10:46,420 --> 01:10:48,320\nYou can control access, you can Filter,\n\n1324\n01:10:48,320 --> 01:10:51,730\nyou can create ACLs in between\nthe branches in your main router.\n\n1325\n01:10:51,730 --> 01:10:54,840\nAll right, but with a multi-point\nyou'll lose that functionality.\n\n1326\n01:10:54,840 --> 01:10:57,550\nYou get one flat network,\nso it's simpler to manage.\n\n1327\n01:10:57,550 --> 01:11:01,730\nBut any ACL you put on there is\ngonna apply to all of your remotes.\n\n1328\n01:11:01,730 --> 01:11:04,280\nSo your ACL capabilities\nare a little bit limited.\n\n1329\n01:11:04,280 --> 01:11:08,330\nAnd your branches will be able to\ntalk directly to each other, but\n\n1330\n01:11:08,330 --> 01:11:10,620\nthey're still passing\nthrough th headquarters and\n\n1331\n01:11:10,620 --> 01:11:14,600\nnot one common ACL applies and\nthat's really difficult to configure.\n\n1332\n01:11:14,600 --> 01:11:16,790\nPoint to point makes it easier to manage.\n\n1333\n01:11:16,790 --> 01:11:19,163\nSo multi-point interfaces\naren't the most popular, but\n\n1334\n01:11:19,163 --> 01:11:21,542\nwe need to be familiar with them so\nwe know how to set them up.\n\n1335\n01:11:23,887 --> 01:11:24,390\nAll right.\n\n1336\n01:11:24,390 --> 01:11:25,890\nSo, starting here on the headquarters,\n\n1337\n01:11:25,890 --> 01:11:29,839\nI'm gonna have to do a couple of things\ndifferent for a multi-point interface.\n\n1338\n01:11:29,839 --> 01:11:32,944\nFirst thing, I've got my serial 1/0, and\n\n1339\n01:11:32,944 --> 01:11:37,334\nI've got 0.1 as the subinterface\nthat connects to branch 1.\n\n1340\n01:11:37,334 --> 01:11:41,801\nI’m gonna create a new one that\nconnects to my other branches, so\n\n1341\n01:11:41,801 --> 01:11:46,268\nI’ll do 0.2 and I need to let\nit know that it’s multipoint, so\n\n1342\n01:11:46,268 --> 01:11:49,292\nI’m just gonna add that to end multipoint.\n\n1343\n01:11:49,292 --> 01:11:50,511\nAll right.\n\n1344\n01:11:50,511 --> 01:11:52,694\nSo I've got this new subinterface created.\n\n1345\n01:11:52,694 --> 01:11:54,840\nI need to give myself\nan IP address on that.\n\n1346\n01:11:54,840 --> 01:11:56,190\nSo I'll say IP address 192.168.4.1 and\nI'll do it as a class C this time.\n\n1347\n01:11:56,190 --> 01:12:00,983\nI don't want to do it as\na slash 30 because I'm gonna\n\n1348\n01:12:00,983 --> 01:12:04,080\nhave more than one host out there.\n\n1349\n01:12:04,080 --> 01:12:07,281\nSo I'm gonna do a nice big network and\nI'll be .1.\n\n1350\n01:12:07,281 --> 01:12:08,734\nAll right.\n\n1351\n01:12:08,734 --> 01:12:14,520\nFrom there, I'm up, I've got my IP\naddress, now I need to deal with my DLCIs.\n\n1352\n01:12:14,520 --> 01:12:17,180\nIf I've got inverse ARP,\nI'm learning my DLCIs.\n\n1353\n01:12:17,180 --> 01:12:20,220\nWell, one of them's already being stolen\nby that other point to point interface, so\n\n1354\n01:12:20,220 --> 01:12:24,574\nthat one's gone, but I'll learn about\nthe other DLCIs that are out there.\n\n1355\n01:12:24,574 --> 01:12:28,610\nSo I don't use the frame dash\nrelay interface dash DLCI command.\n\n1356\n01:12:28,610 --> 01:12:31,968\nIn fact, it'll give you an error if you\ndo, cuz you can have more than one DLCI.\n\n1357\n01:12:31,968 --> 01:12:37,210\nOne DLCI that points to each of\nthe different branches that are out there.\n\n1358\n01:12:37,210 --> 01:12:39,140\nSo if I have five branches,\nI'll have five DLCIs.\n\n1359\n01:12:39,140 --> 01:12:40,720\nIf I have ten branches, I'll have ten.\n\n1360\n01:12:40,720 --> 01:12:42,900\nSo the interface DLCI\ncommand is not needed.\n\n1361\n01:12:42,900 --> 01:12:46,830\nBut, what I need to do\nnow is go through and\n\n1362\n01:12:46,830 --> 01:12:49,760\nlet it know who else is out there and\nhow we get to them.\n\n1363\n01:12:49,760 --> 01:12:52,400\nWhich DLCI corresponds to which neighbor.\n\n1364\n01:12:53,860 --> 01:12:56,580\nSo I need to do frame relay maps.\n\n1365\n01:12:56,580 --> 01:12:59,430\nYou have to use maps with multi port.\n\n1366\n01:12:59,430 --> 01:13:00,850\nWell, I shouldn't say have to.\n\n1367\n01:13:00,850 --> 01:13:03,810\nThere are ways the phone company\ncan take care of managing this for\n\n1368\n01:13:03,810 --> 01:13:08,870\nyou, and your systems will find each other\nand it works amazingly, so I've heard.\n\n1369\n01:13:08,870 --> 01:13:10,610\nI've never had that work for me.\n\n1370\n01:13:10,610 --> 01:13:13,580\nSo, static frame relay maps\nare pretty much the way that I go.\n\n1371\n01:13:13,580 --> 01:13:17,760\nI manually tell it which\nIPs are tied to which DLCI.\n\n1372\n01:13:17,760 --> 01:13:22,110\nSo we'll say,\nframe dash relay, map IP, and\n\n1373\n01:13:22,110 --> 01:13:25,490\nthen the IP's of our neighbors,\nthe people that are out there.\n\n1374\n01:13:25,490 --> 01:13:28,890\nSo I'll say that branch two,\nwhich would be 192.168.4.2,\n\n1375\n01:13:28,890 --> 01:13:33,410\nso branch two is going\nto be available on DLCI,\n\n1376\n01:13:33,410 --> 01:13:35,840\ngotta go to my document here,\nwhich is DLCI 103, all right.\n\n1377\n01:13:37,700 --> 01:13:39,790\nSo that's where branch two is.\n\n1378\n01:13:39,790 --> 01:13:42,810\nAnd then I'll do the same thing for\nbranch three.\n\n1379\n01:13:42,810 --> 01:13:47,270\nSo that's gonna be the IP of branch three,\nand that is on DLCI 104.\n\n1380\n01:13:47,270 --> 01:13:51,806\nSo I'm 192.168.4.1 and\nif I want to get to .2 or .3,\n\n1381\n01:13:51,806 --> 01:13:54,840\nthose are the DCLI numbers\nI use to get there.\n\n1382\n01:13:56,870 --> 01:14:00,630\nNow, I normally do a little bit more\nwhen I put these frame relay maps in.\n\n1383\n01:14:02,130 --> 01:14:05,090\nFrame relay is a non broadcast\nmulti access network.\n\n1384\n01:14:05,090 --> 01:14:07,020\nBroadcasts are not allowed.\n\n1385\n01:14:07,020 --> 01:14:11,410\nAnd when I put these entries, I'll be\nable to get to them using unicast but\n\n1386\n01:14:11,410 --> 01:14:13,490\nnot broadcast, okay.\n\n1387\n01:14:13,490 --> 01:14:18,265\nBut if I'm gonna run a routing\nprotocol like EIGRP or OSPF,\n\n1388\n01:14:18,265 --> 01:14:20,830\nthey use multicast, right?\n\n1389\n01:14:20,830 --> 01:14:23,940\nIf you had EIGRP configured\nin the old way or RIP,\n\n1390\n01:14:23,940 --> 01:14:25,840\nright, they might use broadcasting.\n\n1391\n01:14:25,840 --> 01:14:26,775\nBut most of them use multicast.\n\n1392\n01:14:27,780 --> 01:14:32,240\nAnd frame relay treats multicast just like\na broadcast, and so they get blocked.\n\n1393\n01:14:32,240 --> 01:14:36,640\nSo, what I can do is I can tell the\nrouter, hey if you generate a broadcast,\n\n1394\n01:14:36,640 --> 01:14:41,330\ninstead of trying to broadcast on this\ninterface, turn it into a unicast and\n\n1395\n01:14:41,330 --> 01:14:44,100\nsend it to this person in the map.\n\n1396\n01:14:44,100 --> 01:14:46,650\nAnd you can enable that feature just by\n\n1397\n01:14:46,650 --> 01:14:49,470\nadding the broadcast\nkeyword to the end of it.\n\n1398\n01:14:50,650 --> 01:14:54,520\nNow any time I try and send a broadcast\nthat would go to 198.168.4.2 it\n\n1399\n01:14:54,520 --> 01:14:59,780\nwill convert it to a unicast and send it\nout DLSI 103 right to that destination.\n\n1400\n01:14:59,780 --> 01:15:04,885\nThat will fix my routing protocols, and\nit's a good idea to turn that on, right?\n\n1401\n01:15:04,885 --> 01:15:07,335\nThere's other ways to get around it,\nyou can do like GRE tunnels and\n\n1402\n01:15:07,335 --> 01:15:08,405\ncraziness like that.\n\n1403\n01:15:08,405 --> 01:15:10,815\nBut this is one of the easiest mechanisms.\n\n1404\n01:15:10,815 --> 01:15:14,204\nBut you do need to turn it on for\neach DLCI.\n\n1405\n01:15:14,204 --> 01:15:18,446\nEvery DLCI, the command is managed\nIndividually for each one, so\n\n1406\n01:15:18,446 --> 01:15:20,959\nI'm adding that to 103 and 104.\n\n1407\n01:15:20,959 --> 01:15:26,801\nAll right, now you can map more than\none IP address to the same DLCI.\n\n1408\n01:15:26,801 --> 01:15:30,534\nIts possible there's more than one IP\naddress that you wanna tie to although not\n\n1409\n01:15:30,534 --> 01:15:31,490\ncommonly.\n\n1410\n01:15:31,490 --> 01:15:33,970\nBut you can, and so we can punch that in.\n\n1411\n01:15:33,970 --> 01:15:36,340\nBut there is one scenario\nthat I really like to do.\n\n1412\n01:15:36,340 --> 01:15:39,490\nWhen this is done and working,\nI'll be able to ping .2 and .3.\n\n1413\n01:15:39,490 --> 01:15:43,680\nBut I won't be able to ping myself.\n\n1414\n01:15:43,680 --> 01:15:47,960\nIf you try and ping 192.168.4.1, we don't\nhave a DLCI map to it, we won't get to it.\n\n1415\n01:15:47,960 --> 01:15:51,800\nNow, it's us, and you'd think the system\nwould be smart enough to figure that out.\n\n1416\n01:15:51,800 --> 01:15:55,390\nBut, think about it in terms of IPv4,\nright?\n\n1417\n01:15:55,390 --> 01:15:58,500\nYou can't ping an IP address\nwithout a MAC address.\n\n1418\n01:15:58,500 --> 01:16:01,300\nI can't ping an IP without a DLCI number.\n\n1419\n01:16:01,300 --> 01:16:03,400\nSo, what you can do,\nif you wanna be able to ping yourself,\n\n1420\n01:16:03,400 --> 01:16:05,915\nit's not It's not required,\nyou don't have to do this.\n\n1421\n01:16:05,915 --> 01:16:08,905\nBut if you want to ping yourself for\ntroubleshooting purposes,\n\n1422\n01:16:08,905 --> 01:16:12,815\nyou need to map your own IP to\none of the existing DLCI numbers.\n\n1423\n01:16:12,815 --> 01:16:14,735\nDoesn't matter which one, you can pick.\n\n1424\n01:16:14,735 --> 01:16:17,215\nIt doesn't matter because this isn't\na real entry, it's kind of fake.\n\n1425\n01:16:17,215 --> 01:16:19,345\nJust so you can ping yourself.\n\n1426\n01:16:19,345 --> 01:16:23,260\nSo I usually add one more map,\njust for myself.\n\n1427\n01:16:23,260 --> 01:16:25,680\nAnd so here I'm gonna ping .1 to DLCI 104.\n\n1428\n01:16:25,680 --> 01:16:28,180\nIt's not actually gonna\ngo out to that DLCI.\n\n1429\n01:16:28,180 --> 01:16:30,370\nIt's gonna see that's me and\nI'll ping myself and\n\n1430\n01:16:30,370 --> 01:16:33,200\nI'll get my responses, all right.\n\n1431\n01:16:33,200 --> 01:16:35,540\nNow, if you have more than one map,\n\n1432\n01:16:35,540 --> 01:16:40,510\nto the same DLCI number, you only\nhave to use the broadcast tag once.\n\n1433\n01:16:40,510 --> 01:16:43,940\nIf you use it once, it will use it for all\nthe maps you have for that DLCI number, so\n\n1434\n01:16:43,940 --> 01:16:45,830\nthe broadcast is technically optional,\n\n1435\n01:16:45,830 --> 01:16:49,500\nthis second time I could leave that off,\nI usually make a habit of putting it,\n\n1436\n01:16:49,500 --> 01:16:51,850\nit doesn't hurt to have it more than once,\nso I usually do it.\n\n1437\n01:16:51,850 --> 01:16:55,580\nBut we can leave it off, and the broadcast\nfunctionality will still be enabled for\n\n1438\n01:16:55,580 --> 01:16:56,608\nthat DLSI.\n\n1439\n01:16:56,608 --> 01:17:01,600\nWith that done, we're good to go.\n\n1440\n01:17:01,600 --> 01:17:06,198\nWe now have a multipoint connection set\nup, but my other ends aren't set up so\n\n1441\n01:17:06,198 --> 01:17:10,441\nit's not gonna quite work, but\nif I do a show frame-relay LMI, well,\n\n1442\n01:17:10,441 --> 01:17:14,024\nI know the LMI, so\nthat doesn't show me anything, right?\n\n1443\n01:17:14,024 --> 01:17:17,802\nShow frame-relay pvc, there's 102,\n\n1444\n01:17:17,802 --> 01:17:21,985\nwhich is up on that point\nto point interface, but\n\n1445\n01:17:21,985 --> 01:17:27,105\nI now see 103,\nwhich is on serial one slash oh point two.\n\n1446\n01:17:27,105 --> 01:17:28,249\nBut it's not up, right,\n\n1447\n01:17:28,249 --> 01:17:31,180\nit's status inactive because\nthe other side's not configured.\n\n1448\n01:17:31,180 --> 01:17:34,840\nAnd the same thing with one 104,\nthe other side's just not configured.\n\n1449\n01:17:35,990 --> 01:17:41,220\nAnd if I do a show frame dash relay map,\nI'd still have on serial zero, or\n\n1450\n01:17:41,220 --> 01:17:46,425\none slash zero point one, there's\nthat inverse ARP automatic detection\n\n1451\n01:17:46,425 --> 01:17:51,590\npoint-to-point entry, and then here's\nthe map for my multipoint link.\n\n1452\n01:17:51,590 --> 01:17:55,940\nAnd you'll see that they're all inactive\nbecause the DLCI's are inactive.\n\n1453\n01:17:55,940 --> 01:17:59,270\nBut these are mapping the IPs to\nthe DLCI numbers, and you'll see that\n\n1454\n01:17:59,270 --> 01:18:03,370\nbroadcast keyword right there, which lets\nyou know that I'm able to broadcasts.\n\n1455\n01:18:03,370 --> 01:18:04,939\nYou see that was on by default up here.\n\n1456\n01:18:06,560 --> 01:18:09,950\nAll right so let me go throw a quick and\ndirty configuration on the other ones so\n\n1457\n01:18:09,950 --> 01:18:11,870\nwe can see them come up all right.\n\n1458\n01:18:11,870 --> 01:18:15,210\nSo Ill just jump over to branch two and\nI'm not gonna do anything fancy here,\n\n1459\n01:18:15,210 --> 01:18:19,520\nI'm just gonna get into\nzero one slash zero.\n\n1460\n01:18:19,520 --> 01:18:23,485\nll do some in cap FRAME RELAY,\n\n1461\n01:18:23,485 --> 01:18:29,516\nI'll do IP address 102.168.4.2\n\n1462\n01:18:29,516 --> 01:18:36,351\n[Blank Audio] Frame-relay interface-DLCI.\n\n1463\n01:18:36,351 --> 01:18:41,580\nAnd over here branch two is 301.\n\n1464\n01:18:41,580 --> 01:18:46,270\nAll right, and\n\n1465\n01:18:46,270 --> 01:18:48,715\nI will go ahead and do a frame-relay\nmap just to be on the safe side.\n\n1466\n01:18:48,715 --> 01:18:52,660\n192.168.4.1 and here is where things\nget a little weird, all right.\n\n1467\n01:18:53,940 --> 01:18:55,927\nIf I do a frame relay map on branch two,\n\n1468\n01:18:55,927 --> 01:18:59,670\nbranch two needs to know how to get\nto the home office, right, 4.1.\n\n1469\n01:18:59,670 --> 01:19:02,638\nSo I'm gonna say frame-relay\nmap IP 192.168.4.1 and\n\n1470\n01:19:02,638 --> 01:19:04,228\nI'm gonna map that to DLCI 301.\n\n1471\n01:19:04,228 --> 01:19:06,640\nAll right.\n\n1472\n01:19:08,360 --> 01:19:11,120\nWell, what about branch three?\n\n1473\n01:19:11,120 --> 01:19:12,710\nWhat about that other branch?\n\n1474\n01:19:12,710 --> 01:19:14,890\nIf I wanna be able to communicate\ndirectly to the other branches,\n\n1475\n01:19:14,890 --> 01:19:16,950\nI need to know their DLCI number, too.\n\n1476\n01:19:16,950 --> 01:19:20,070\nAnd there technically going through\nthe home office to get to me,\n\n1477\n01:19:20,070 --> 01:19:21,960\nright this is hub and spoke style,\n\n1478\n01:19:21,960 --> 01:19:26,820\neverybody's going through the home office,\nso I'll need to add another map entry for\n\n1479\n01:19:26,820 --> 01:19:30,690\nthe other branch, and\nI'm pointing it to the home office.\n\n1480\n01:19:30,690 --> 01:19:32,490\nI guess I should add\nbroadcast the end of that.\n\n1481\n01:19:32,490 --> 01:19:34,930\nSo I'm pointing it to the home office\ncuz that's how they're gonna come to me.\n\n1482\n01:19:34,930 --> 01:19:38,630\nThey're gonna come to me through the home\noffice in a hub and spoke model.\n\n1483\n01:19:38,630 --> 01:19:41,180\nSo I'm pointing both of those\nIPs to the home office.\n\n1484\n01:19:41,180 --> 01:19:43,400\nThat's how I'm going to get up there.\n\n1485\n01:19:43,400 --> 01:19:44,956\nSo I'll put that extra map entry in.\n\n1486\n01:19:44,956 --> 01:19:46,165\nBut that should be everything we need.\n\n1487\n01:19:46,165 --> 01:19:47,849\nEncapsulation frame relay.\n\n1488\n01:19:47,849 --> 01:19:48,968\nI didn't set my LMA type.\n\n1489\n01:19:48,968 --> 01:19:53,866\nI guess I can go ahead and set that\nAlthough autodetect worked fine for us,\n\n1490\n01:19:53,866 --> 01:19:58,690\nand I'll do a no shutdown to be on\nthe safe side, and that branch is done.\n\n1491\n01:19:58,690 --> 01:20:05,739\nAnd then what I can do, is I can cheat and\ncopy this configuration.\n\n1492\n01:20:09,327 --> 01:20:14,380\nAnd we'll just modify that a little\nbit for our other site, right?\n\n1493\n01:20:14,380 --> 01:20:21,590\nIt's gonna be dot three,\nits DELC number is going to be 401, and\n\n1494\n01:20:21,590 --> 01:20:25,670\nit's got to be able to communicate to the\nhome office, and the other branch, right?\n\n1495\n01:20:25,670 --> 01:20:30,829\nSo I'm just gonna update this\nto reflect the information from\n\n1496\n01:20:30,829 --> 01:20:37,787\nthat other office there, and I'm gonna add\na little no shutdown to the end of that.\n\n1497\n01:20:37,787 --> 01:20:40,730\nLooks good, and\nthat will save me some typing, right?\n\n1498\n01:20:40,730 --> 01:20:44,990\nSo now I can jump over to branch three,\nget into my configuration,\n\n1499\n01:20:44,990 --> 01:20:48,980\njust paste that right in,\nand there we go, all right.\n\n1500\n01:20:48,980 --> 01:20:52,430\nWhen it's done, the link should come\nup and I should now have a hub and\n\n1501\n01:20:52,430 --> 01:20:53,540\nspoke model.\n\n1502\n01:20:53,540 --> 01:20:54,260\nBranch two and\n\n1503\n01:20:54,260 --> 01:20:59,460\nbranch three are both connecting to the\nhome office on that multi point interface.\n\n1504\n01:20:59,460 --> 01:21:01,472\nAnd we can test that out up here.\n\n1505\n01:21:01,472 --> 01:21:03,914\nI'm gonna do a show frame dash relay PVC.\n\n1506\n01:21:03,914 --> 01:21:06,620\nSo I'm on the home office now,\nor headquarters.\n\n1507\n01:21:06,620 --> 01:21:11,585\n102 was up from earlier,\nthat's the point to point,\n\n1508\n01:21:11,585 --> 01:21:15,630\nbut now 103 is active and 104 is active.\n\n1509\n01:21:15,630 --> 01:21:18,630\nSo they've come up, and\n\n1510\n01:21:18,630 --> 01:21:25,000\nif I do a show frame dash relay map,\nthere's my mappings to the branches.\n\n1511\n01:21:25,000 --> 01:21:28,630\nAnd they show as being active,\nso they're up, they're defined.\n\n1512\n01:21:28,630 --> 01:21:29,660\nAnd we can test it.\n\n1513\n01:21:29,660 --> 01:21:30,160\n>> That's great.\n\n1514\n01:21:32,120 --> 01:21:33,560\n>> Now I should be able\nto ping branch two.\n\n1515\n01:21:34,790 --> 01:21:36,240\nAnd branch three, right?\n\n1516\n01:21:36,240 --> 01:21:39,820\nThey're in the same network, same\nsubnet range, and I can reach out them.\n\n1517\n01:21:39,820 --> 01:21:43,605\nAnd I can ping myself because we put\nthat little map in for ourselves.\n\n1518\n01:21:43,605 --> 01:21:46,180\nRight, so I've got full connectivity.\n\n1519\n01:21:46,180 --> 01:21:49,573\nNow connectivity between the branch and\nthe home offices, that's easy, right?\n\n1520\n01:21:49,573 --> 01:21:53,580\nBut connectivity between the branches\nthemselves, that's a little tricky.\n\n1521\n01:21:53,580 --> 01:21:54,740\nI had to put that extra map in.\n\n1522\n01:21:54,740 --> 01:21:56,580\nSo we do need to test that.\n\n1523\n01:21:56,580 --> 01:21:58,710\nI'll go over to branch two.\n\n1524\n01:21:58,710 --> 01:22:01,720\nAnd I'm gonna see if I\ncan ping branch three, so\n\n1525\n01:22:01,720 --> 01:22:03,710\nI'll just try and ping to branch three.\n\n1526\n01:22:03,710 --> 01:22:04,730\nAnd, sure enough, I'm good.\n\n1527\n01:22:04,730 --> 01:22:05,950\nI didn't go direct to branch three.\n\n1528\n01:22:05,950 --> 01:22:08,470\nI went through the home\noffice to get there, but\n\n1529\n01:22:08,470 --> 01:22:10,720\nbranch two can see branch three,\nall right?\n\n1530\n01:22:10,720 --> 01:22:14,740\nWe now have a healthy\nmulti point configuration.\n\n1531\n01:22:14,740 --> 01:22:19,653\nGoing back to my diagram, branch one is\npoint to point to the home office, but\n\n1532\n01:22:19,653 --> 01:22:22,527\nbranch two and\nbranch three are multi point,\n\n1533\n01:22:22,527 --> 01:22:27,370\nboth coming into the home office on\nthe same multi point subinterface.\n\n1534\n01:22:27,370 --> 01:22:30,100\nI've mixed and matched on the home office.\n\n1535\n01:22:30,100 --> 01:22:34,350\nI did interfaces or configurations on\nthe interfaces themselves out here.\n\n1536\n01:22:34,350 --> 01:22:39,539\nBut at the home office I did it on\nsubinterfaces, and if we go back to review\n\n1537\n01:22:39,539 --> 01:22:44,919\nthat real quick, gonna switch to home\noffice, and I’ll just do a show run.\n\n1538\n01:22:44,919 --> 01:22:48,604\nAll right, so on the parent interface,\nI put my overall frame relay commands to\n\n1539\n01:22:48,604 --> 01:22:51,640\ntalk to the switch, right,\nthe LMI type and the encapsulation.\n\n1540\n01:22:52,700 --> 01:22:58,060\nFor point to point, I set up just LC 102,\nbut then for point to multi point, I\n\n1541\n01:22:58,060 --> 01:23:03,290\nset up each of the individual DELCS using\nmaps to say how to get to those people.\n\n1542\n01:23:03,290 --> 01:23:07,260\nRight, not a terribly difficult\nconfiguration, but not the most intuitive.\n\n1543\n01:23:07,260 --> 01:23:11,729\nYou're basically taking over the role\nof layer two functionality, of ARP and\n\n1544\n01:23:11,729 --> 01:23:14,990\nmapping IPsto those DELCS numbers for\ncommunications.\n\n1545\n01:23:17,070 --> 01:23:22,740\nAll right, so we've seen point to point,\nwe've seen point to multi point, right?\n\n1546\n01:23:22,740 --> 01:23:24,080\nWhich is hub and spoke.\n\n1547\n01:23:24,080 --> 01:23:28,520\nThe last thing we need to see is a full\nmesh, where everybody's connected to\n\n1548\n01:23:28,520 --> 01:23:30,880\neverybody directly, and\nthey're not passing through anybody.\n\n1549\n01:23:30,880 --> 01:23:34,080\nIt's a full mesh environment, all right?\n\n1550\n01:23:34,080 --> 01:23:36,340\nAnd that's what we're\ngonna take a look at next.\n\n1551\n01:23:36,340 --> 01:23:38,800\nBut we're running a little\nshort on time on this segment.\n\n1552\n01:23:38,800 --> 01:23:42,240\nSo why don't we stop and\ntake a break and when we get back,\n\n1553\n01:23:42,240 --> 01:23:44,259\nfull mesh craziness after this.\n\n1554\n01:23:44,259 --> 01:23:48,149\n[SOUND] All right,\n\n1555\n01:23:48,149 --> 01:23:53,859\nwelcome back everybody.\n\n1556\n01:23:53,859 --> 01:23:55,710\nSo for our last segment of the show,\n\n1557\n01:23:55,710 --> 01:24:00,090\nwhat we're gonna take a look at is a full\nmesh implementation of frame relay.\n\n1558\n01:24:00,090 --> 01:24:02,630\nNow keep in mind as we go through\nthese different configurations,\n\n1559\n01:24:02,630 --> 01:24:06,250\nI'm not changing the physical\nconfiguration at all.\n\n1560\n01:24:06,250 --> 01:24:09,410\nEach of these routers just have\none serial cable run into em.\n\n1561\n01:24:09,410 --> 01:24:11,850\nI'm just configuring it a slightly\ndifferent way each time,\n\n1562\n01:24:11,850 --> 01:24:14,160\ncreating different virtual circuits.\n\n1563\n01:24:14,160 --> 01:24:16,890\nThe phone company's who's doing\nthe real work on this one, right?\n\n1564\n01:24:16,890 --> 01:24:20,240\nLet me go back to my network\ndiagram before we dive in, and\n\n1565\n01:24:20,240 --> 01:24:23,460\nshow you the PVCs that we've got in place.\n\n1566\n01:24:23,460 --> 01:24:27,903\nI've got my headquarters, and\nthese three branch offices, and\n\n1567\n01:24:27,903 --> 01:24:32,750\nthey each have their one physical\nconnection on serial one slash zero to\n\n1568\n01:24:32,750 --> 01:24:37,434\nthe TelCo switch, and the TelCo has\nbuilt three PVCs at each location\n\n1569\n01:24:37,434 --> 01:24:42,314\nconnecting them to the other locations,\nso I have a full virtual mesh.\n\n1570\n01:24:42,314 --> 01:24:45,187\nRight, I don’t get\nhardware fault tolerance,\n\n1571\n01:24:45,187 --> 01:24:49,410\nlike if the physical line here\nfails on branch one, it’s out.\n\n1572\n01:24:49,410 --> 01:24:53,130\nRight, but\nI do get independence of the branches.\n\n1573\n01:24:53,130 --> 01:24:54,940\nWhen we do a hub and spoke model,\n\n1574\n01:24:54,940 --> 01:24:59,110\nif the hub goes down, yeah,\nthe spokes are isolated.\n\n1575\n01:25:00,240 --> 01:25:03,130\nBut in this layout,\nwe've got each of these branches.\n\n1576\n01:25:03,130 --> 01:25:07,790\nIf one of them goes down, the other three\nare still interconnected, they can talk.\n\n1577\n01:25:07,790 --> 01:25:08,930\nThe one just disappears.\n\n1578\n01:25:10,090 --> 01:25:12,100\nRight, in a full mesh model,\n\n1579\n01:25:12,100 --> 01:25:17,380\nthis is where we'll normally pick a single\nflat network to use in the cloud.\n\n1580\n01:25:17,380 --> 01:25:22,180\nInstead of using point to point links\nwhere we've got different subnets for each\n\n1581\n01:25:22,180 --> 01:25:26,260\none, here that would mean having three sub\ninterfaces, three different subnets, for\n\n1582\n01:25:26,260 --> 01:25:30,430\nreaching out to these branches of each\nlocation that becomes a hassle to manage.\n\n1583\n01:25:30,430 --> 01:25:33,390\nAnd every time you add a new router,\nyou've gotta go and\n\n1584\n01:25:33,390 --> 01:25:35,310\nupdate these it becomes a mess.\n\n1585\n01:25:35,310 --> 01:25:41,450\nBut if we do one big flat network here,\njust one like class C, then we could have\n\n1586\n01:25:41,450 --> 01:25:47,350\nup to 254 branches or offices that\nwere all connected into a full mesh.\n\n1587\n01:25:47,350 --> 01:25:52,430\nA ton of PVCs to map all those\nsystems together, right.\n\n1588\n01:25:52,430 --> 01:25:57,530\nIf your service provider supports inverse\nARP it becomes even easier cuz then they\n\n1589\n01:25:57,530 --> 01:26:01,360\nlearn the topology, but in my case I'm\ngonna do a manual map just to be able\n\n1590\n01:26:01,360 --> 01:26:04,940\nto show how to get to each of the IPs so\nwe can see that process.\n\n1591\n01:26:04,940 --> 01:26:06,920\nSo in real life this might\nbe a little bit easier.\n\n1592\n01:26:06,920 --> 01:26:09,050\nI'm gonna do it kinda the hard way,\njust so we see it all.\n\n1593\n01:26:10,178 --> 01:26:14,110\nAll right, so when we set this up,\nthe nice thing is the configuration is\n\n1594\n01:26:14,110 --> 01:26:17,590\npretty much the same at all the branches\ncuz they're all being set up the same way.\n\n1595\n01:26:17,590 --> 01:26:21,957\nThey're all being set up with multiple\nconnections out, multi point connections.\n\n1596\n01:26:21,957 --> 01:26:26,270\nRight, so when we do one, we just modify\nthat config and go and do the other.\n\n1597\n01:26:26,270 --> 01:26:29,930\nSo I've actually done the three branches,\nand I'm just gonna get started here at\n\n1598\n01:26:29,930 --> 01:26:32,600\nthe headquarters and bring it online,\nand we'll see that come up.\n\n1599\n01:26:32,600 --> 01:26:35,520\nI didn't want to bore you guys doing\nthe same configuration four times.\n\n1600\n01:26:37,712 --> 01:26:41,510\nAll right, so let's jump over to\nthe equipment and see this in action.\n\n1601\n01:26:41,510 --> 01:26:42,610\nWhere is my equipment?\n\n1602\n01:26:42,610 --> 01:26:43,110\nHere.\n\n1603\n01:26:44,180 --> 01:26:45,610\nAll right, so here's my headquarters, and,\n\n1604\n01:26:45,610 --> 01:26:48,000\nduring the break I wiped out\nthe configuration on it.\n\n1605\n01:26:48,000 --> 01:26:49,463\nSo if I do a show run interface,\n\n1606\n01:26:49,463 --> 01:26:53,480\nserial one slash zero, you'll see\nI'm back to just the defaults there.\n\n1607\n01:26:53,480 --> 01:26:58,160\nAnd if I do a show IP interface brief,\nyou'll see the sub interface is gone.\n\n1608\n01:26:58,160 --> 01:27:02,166\nI no longer have that in place, so\nit's wiped out and all back to normal.\n\n1609\n01:27:02,166 --> 01:27:06,260\nAll right, so now we're each gonna\nget a setup for multi point.\n\n1610\n01:27:06,260 --> 01:27:08,840\nNow I could do multi point\non the physical interface.\n\n1611\n01:27:08,840 --> 01:27:10,160\nI actually did that at the branches.\n\n1612\n01:27:10,160 --> 01:27:12,040\nI just did it on the physical interface.\n\n1613\n01:27:12,040 --> 01:27:14,630\nBut here at the home office I'm\ngonna do it on a sub interface,\n\n1614\n01:27:14,630 --> 01:27:16,680\nbecause that gives us that\nflexibility to expand.\n\n1615\n01:27:16,680 --> 01:27:20,080\nIf we wanna break things out into\nindividual ones later, we can.\n\n1616\n01:27:20,080 --> 01:27:24,420\nRight, so I'm gonna get into\nmy physical interface and\n\n1617\n01:27:24,420 --> 01:27:28,120\nI'm gonna lay down my\nbasic configuration items.\n\n1618\n01:27:28,120 --> 01:27:32,978\nLike, well, actually,\nI'm going to shut it down while I do this,\n\n1619\n01:27:32,978 --> 01:27:36,903\nand then I'm going to do\nencapsulation frame relay and\n\n1620\n01:27:36,903 --> 01:27:40,690\nframe dash relay LMI\ndash type in my LMI type.\n\n1621\n01:27:40,690 --> 01:27:44,538\nAll right, I know mine would auto\ndetect but I'm gonna go ahead and\n\n1622\n01:27:44,538 --> 01:27:45,989\nmanually set it anyway.\n\n1623\n01:27:45,989 --> 01:27:49,936\nOnce those are defined I could go on and\ndo a few other things right here if I\n\n1624\n01:27:49,936 --> 01:27:52,611\nreally needed to,\nlike disabling inverse ARP.\n\n1625\n01:27:52,611 --> 01:27:59,070\nBut in my case I'm gonna leave that be and\nnow I'm gonna work on my sub interface.\n\n1626\n01:27:59,070 --> 01:28:01,140\nOne little recommendation I might make.\n\n1627\n01:28:01,140 --> 01:28:02,450\nI know earlier in the show,\n\n1628\n01:28:02,450 --> 01:28:06,680\nwhat I did was I went from this\ninterface right into the sub interface.\n\n1629\n01:28:06,680 --> 01:28:11,120\nSome people like to do that, some like\nto exit out of the interface first and\n\n1630\n01:28:11,120 --> 01:28:12,760\nthen go into the sub interface.\n\n1631\n01:28:12,760 --> 01:28:15,800\nIt really doesn't make a difference\nwhich prompt you're in.\n\n1632\n01:28:15,800 --> 01:28:19,010\nA lot of times I don't like to switch\ndirectly between interfaces cuz it can be\n\n1633\n01:28:19,010 --> 01:28:21,440\nhard to tell sometimes\nwhether you actually switch.\n\n1634\n01:28:21,440 --> 01:28:25,460\nBut this time the prompt actually changes,\nso I know that.\n\n1635\n01:28:25,460 --> 01:28:28,830\nSo that's why I kinda jump from one\ninterface right to another one,\n\n1636\n01:28:28,830 --> 01:28:31,000\nalthough I don't do that in other shows.\n\n1637\n01:28:31,000 --> 01:28:38,140\nSo I'm gonna say interface 1/0.1\nmultipoint, and because it changes\n\n1638\n01:28:38,140 --> 01:28:41,210\nto sub-interface I know the command\nworked, I know it went in there, right?\n\n1639\n01:28:41,210 --> 01:28:42,440\nSo that's why I'm jumping straight.\n\n1640\n01:28:44,170 --> 01:28:45,760\nAll right now I just\nneed to get this set up.\n\n1641\n01:28:45,760 --> 01:28:49,130\nAnd we've kind of already seen\na multi-point configuration before.\n\n1642\n01:28:49,130 --> 01:28:51,510\nThis one's just gonna be a little\nbit bigger because I need to add\n\n1643\n01:28:51,510 --> 01:28:52,400\neach of my hosts.\n\n1644\n01:28:52,400 --> 01:28:54,010\nThis is a full mesh.\n\n1645\n01:28:54,010 --> 01:28:57,180\nSo I've gotta be able to reach out and\nconnect to them all.\n\n1646\n01:28:57,180 --> 01:29:00,900\nAt a minimum I'm gonna need an IP address.\n\n1647\n01:29:00,900 --> 01:29:05,430\nAnd for this network I'm gonna\nuse the 192.168.1 network.\n\n1648\n01:29:05,430 --> 01:29:06,240\nI'll make this one .1.\n\n1649\n01:29:06,240 --> 01:29:09,258\nAnd it's gonna be a class C.\n\n1650\n01:29:09,258 --> 01:29:11,880\nBecause it's multi-point I\nneed to leave enough room\n\n1651\n01:29:12,920 --> 01:29:15,930\nto have more than just one\nother host out there, right.\n\n1652\n01:29:15,930 --> 01:29:18,890\nI need to account for branch one,\nbranch two, branch three and so on.\n\n1653\n01:29:20,010 --> 01:29:21,040\nAll right.\n\n1654\n01:29:21,040 --> 01:29:24,980\nNow, I could probably stop there if I had\n\n1655\n01:29:26,400 --> 01:29:30,600\ninverse ARP functioning, if I was able\nto detect those guys on the other side.\n\n1656\n01:29:30,600 --> 01:29:33,830\nBut I'm planning on running\na routing protocol on this later.\n\n1657\n01:29:33,830 --> 01:29:37,940\nI want to throw EIGRP on top of it and I\nknow I'm gonna have some broadcast issues.\n\n1658\n01:29:37,940 --> 01:29:40,300\nSo I've got to make a choice here.\n\n1659\n01:29:40,300 --> 01:29:44,150\nEither one, I can fix it here\non the frame relay side Or\n\n1660\n01:29:44,150 --> 01:29:46,500\ntwo, I can fix it on the EIGR key side.\n\n1661\n01:29:46,500 --> 01:29:48,460\nThere is a way we can override it there.\n\n1662\n01:29:48,460 --> 01:29:50,020\nBut I'm gonna fix it here\non the frame-relay side.\n\n1663\n01:29:50,020 --> 01:29:51,380\nI'm gonna go ahead and do my maps.\n\n1664\n01:29:51,380 --> 01:29:57,440\nAll right, and so\nI'm gonna map each of the remote branches.\n\n1665\n01:29:57,440 --> 01:30:00,533\nThat I wanna create redundancy with.\n\n1666\n01:30:00,533 --> 01:30:05,860\nSo branch one is going to be 1.2 and\nits del c is102.\n\n1667\n01:30:05,860 --> 01:30:09,440\nAnd I'll add that broadcast keyword.\n\n1668\n01:30:10,850 --> 01:30:14,200\nAnd then I'll do branch two\nwhich is actually gonna be 1.3.\n\n1669\n01:30:14,200 --> 01:30:18,020\nI know it gets kind of confusing,\nthe IP addresses.\n\n1670\n01:30:18,020 --> 01:30:22,170\nAnd again good documentation will\nhelp you not mix up your IPs.\n\n1671\n01:30:22,170 --> 01:30:26,080\nAnd then here will be the other branch,\nright there, okay?\n\n1672\n01:30:26,080 --> 01:30:30,850\nSo I'm the headquarters, I'm .1,\nand that's why branch 1 is .2, and\n\n1673\n01:30:30,850 --> 01:30:34,200\nbranch 2 is .3, and branch 3 is .4,\nbecause I'm already using .1.\n\n1674\n01:30:34,200 --> 01:30:37,760\nI guess I could have made the headquarters\nlike .254, and gone that way,\n\n1675\n01:30:37,760 --> 01:30:38,515\nbut I didn't.\n\n1676\n01:30:39,740 --> 01:30:41,550\nSo I'm mapping each one of those so\n\n1677\n01:30:41,550 --> 01:30:45,030\nI know that on this one link,\nI've got three del cs I can use.\n\n1678\n01:30:45,030 --> 01:30:46,940\nThose will get me to those branches, and\n\n1679\n01:30:46,940 --> 01:30:49,090\nI'm using the del cs that\nthe phone company has given me.\n\n1680\n01:30:49,090 --> 01:30:53,197\nNow I'm gonna add one more because\nI might wanna ping myself for\n\n1681\n01:30:53,197 --> 01:30:55,445\ntroubleshooting purposes.\n\n1682\n01:30:55,445 --> 01:30:57,475\nAll right, and\nif I don't add this it's not gonna work.\n\n1683\n01:30:57,475 --> 01:31:02,435\nSo I'm gonna go ahead and do\na frame-relay map IP 192.168.1.1 myself.\n\n1684\n01:31:02,435 --> 01:31:06,155\nAnd then I can pick any of the del cs.\n\n1685\n01:31:06,155 --> 01:31:07,935\nIt does have to be a valid del c.\n\n1686\n01:31:07,935 --> 01:31:11,450\nIf I pick a del c that's not\nup then the ping’s gonna fail.\n\n1687\n01:31:11,450 --> 01:31:14,670\nSo I just have to pick\none of the active ones.\n\n1688\n01:31:14,670 --> 01:31:16,550\nSo I’ll do 102, and\n\n1689\n01:31:16,550 --> 01:31:21,060\nthen I can add the broadcast keyword\nif I want, I normally do, but\n\n1690\n01:31:21,060 --> 01:31:25,960\ntechnically you don’t have to because 102\nalready has broadcast enabled up here.\n\n1691\n01:31:25,960 --> 01:31:29,240\nIt doesn't hurt to do it, and\nin real life land, I normally do.\n\n1692\n01:31:29,240 --> 01:31:33,440\nI just put the broadcast type there\nall the time, but for the exam, for\n\n1693\n01:31:33,440 --> 01:31:35,830\nyour own learning, the official\nstatement is that you don't have to.\n\n1694\n01:31:37,680 --> 01:31:40,654\nAnd once that's done,\nI've got the three del cs,\n\n1695\n01:31:40,654 --> 01:31:43,080\nthey're there, they should be ready to go.\n\n1696\n01:31:43,080 --> 01:31:43,860\n>> Yeah.\n\n1697\n01:31:43,860 --> 01:31:46,360\nThe only thing we need to do is\ndo some show commands and verify.\n\n1698\n01:31:46,360 --> 01:31:48,410\nOf course you can just do like we do.\n\n1699\n01:31:48,410 --> 01:31:50,960\nGet a little bit excited and just go,\nlet's just ping and see what happens.\n\n1700\n01:31:50,960 --> 01:31:54,090\nBut, yeah, a lot of times show commands\nare where we're gonna go instead.\n\n1701\n01:31:54,090 --> 01:31:54,830\n>> Yeah.\n\n1702\n01:31:54,830 --> 01:31:57,946\nSo we've got our show frame-relay.\n\n1703\n01:31:57,946 --> 01:31:59,245\n>> LMI.\n>> LMI.\n\n1704\n01:31:59,245 --> 01:32:01,035\nSo we can see if we're talking.\n\n1705\n01:32:01,035 --> 01:32:03,125\nAnd I've got my LMI set to Cisco.\n\n1706\n01:32:03,125 --> 01:32:05,295\nAnd we've got a problem.\n\n1707\n01:32:05,295 --> 01:32:06,975\nI already know what the problem\nis cuz it's my fault.\n\n1708\n01:32:06,975 --> 01:32:07,977\n>> Yeah, me too [LAUGH].\n\n1709\n01:32:07,977 --> 01:32:12,275\n>> So I can see my status zero,\nstatus messages received, zero.\n\n1710\n01:32:12,275 --> 01:32:15,745\nWhen you see zero zero like this,\nI guess it's possible,\n\n1711\n01:32:15,745 --> 01:32:19,275\nyou could have put the config in and\nyou got here so fast that you haven't even\n\n1712\n01:32:19,275 --> 01:32:22,570\nsent your first status inquiry yet, but\nyou would have to move at lightspeed.\n\n1713\n01:32:22,570 --> 01:32:25,730\nI've not sent a single status inquiry.\n\n1714\n01:32:25,730 --> 01:32:27,722\nWhich usually means\nthe interface is shut down.\n\n1715\n01:32:27,722 --> 01:32:29,190\n[LAUGH] That's when you don't send them.\n\n1716\n01:32:29,190 --> 01:32:30,760\nI don't think I turned\nthe interface back on.\n\n1717\n01:32:30,760 --> 01:32:33,095\n>> And\nthat is normally my mistake right there.\n\n1718\n01:32:33,095 --> 01:32:34,600\n>> [LAUGH]\n>> Is getting everything configured and\n\n1719\n01:32:34,600 --> 01:32:36,910\ngoing, I know that\nconfiguration's correct.\n\n1720\n01:32:36,910 --> 01:32:39,073\nAnd then forgetting to\nactually do a no shutdown.\n\n1721\n01:32:39,073 --> 01:32:40,749\n[INAUDIBLE]\n>> Yep, and that's mine right there.\n\n1722\n01:32:40,749 --> 01:32:41,396\n>> There it is, yeah.\n\n1723\n01:32:41,396 --> 01:32:44,763\n>> And again, I'm administratively down so\nI need to go and fix that real quick,\n\n1724\n01:32:44,763 --> 01:32:48,340\nso let me get back into serial 1/0,\nand I'll do a no shutdown.\n\n1725\n01:32:48,340 --> 01:32:53,405\nNow, you can shut down individual\nsub-interfaces if you want.\n\n1726\n01:32:53,405 --> 01:32:59,421\nBut if you shut down the parent interface,\nall the subs go down with it.\n\n1727\n01:32:59,421 --> 01:33:06,700\nSo I had a shutdown command on serial 1/0,\nand 1/0.1 also went administratively down.\n\n1728\n01:33:06,700 --> 01:33:08,880\nThat doesn't mean I had\nthe shutdown command on the sob.\n\n1729\n01:33:08,880 --> 01:33:11,040\nIt's just bringing that\nin from the parent.\n\n1730\n01:33:11,040 --> 01:33:12,460\nSo that should take care of that.\n\n1731\n01:33:13,510 --> 01:33:16,820\nAll right, so\nlet me just verify that that has happened.\n\n1732\n01:33:16,820 --> 01:33:18,388\nYep, and so now they are up, up.\n\n1733\n01:33:18,388 --> 01:33:21,220\nBut with frame-relay we don't trust an up,\nup.\n\n1734\n01:33:21,220 --> 01:33:22,910\nThat just tells us we can see the switch.\n\n1735\n01:33:24,250 --> 01:33:28,280\nAll right.\nSo now I'll do, show frame-relay lmi.\n\n1736\n01:33:28,280 --> 01:33:28,970\nAnd there you go.\n\n1737\n01:33:28,970 --> 01:33:32,760\nSend three, receive three,\nthat's a good run, all right.\n\n1738\n01:33:34,510 --> 01:33:38,210\nSo next I can do, show frame-relay pvc.\n\n1739\n01:33:38,210 --> 01:33:42,246\nAnd I should see the three permanent\nvirtual circuits that were made.\n\n1740\n01:33:42,246 --> 01:33:43,730\nThere's 102.\n\n1741\n01:33:43,730 --> 01:33:45,340\nStatus is active, right.\n\n1742\n01:33:45,340 --> 01:33:49,600\nStatus active means the other\nend is up also so that's good.\n\n1743\n01:33:49,600 --> 01:33:52,880\nSo it's up, I'm not moving data\nover it but at least it's up.\n\n1744\n01:33:52,880 --> 01:33:55,730\nI can see 103 and it's active, and\n\n1745\n01:33:55,730 --> 01:34:00,060\n104 which is active also, so\nthings are looking good there.\n\n1746\n01:34:00,060 --> 01:34:00,760\nAll right?\n\n1747\n01:34:00,760 --> 01:34:04,216\nAnd oh there's other PVCs in place,\nlet me just move past those.\n\n1748\n01:34:04,216 --> 01:34:05,052\nAll right.\n\n1749\n01:34:05,052 --> 01:34:09,680\n[LAUGH] So when I set this up, I actually\ncreated additional PVCs too just for\n\n1750\n01:34:09,680 --> 01:34:11,720\nthe heck of it so\nthere's a bunch of other ones in there.\n\n1751\n01:34:12,975 --> 01:34:16,055\nSo those PVCs are there, I've got my\nthree connections out to the remotes, and\n\n1752\n01:34:16,055 --> 01:34:17,575\nthey're available, all right?\n\n1753\n01:34:17,575 --> 01:34:19,205\nSo what's next?\n\n1754\n01:34:19,205 --> 01:34:22,845\nWell, what's next is connectivity.\n\n1755\n01:34:22,845 --> 01:34:23,865\nTry and use them.\n\n1756\n01:34:23,865 --> 01:34:25,682\nYeah, I guess I could look at my map,\njust to be sure.\n\n1757\n01:34:25,682 --> 01:34:29,282\nWe're going to stall that\nmoment of revelation.\n\n1758\n01:34:29,282 --> 01:34:30,462\nSo I'll do show frame-relay map.\n\n1759\n01:34:30,462 --> 01:34:31,612\nAnd there's my maps.\n\n1760\n01:34:31,612 --> 01:34:33,252\nWe've statically defined these.\n\n1761\n01:34:33,252 --> 01:34:37,152\nSo I'm saying, here's how you get\nto these IPs, and these are static.\n\n1762\n01:34:37,152 --> 01:34:41,232\nWe put them in and they've got\nthat broadcast tag right there.\n\n1763\n01:34:41,232 --> 01:34:44,162\nAnd you'll even notice how this first\none is missing the broadcast tag.\n\n1764\n01:34:44,162 --> 01:34:45,662\nThat's because I didn't put it there.\n\n1765\n01:34:45,662 --> 01:34:46,940\nBut it doesn't matter.\n\n1766\n01:34:46,940 --> 01:34:50,541\nWe've got broadcasts for\nthat del c right on the very next line.\n\n1767\n01:34:50,541 --> 01:34:54,690\nAll right, so let's test this out.\n\n1768\n01:34:54,690 --> 01:34:57,180\nIf I ping 192.168.1.1 that's me right?\n\n1769\n01:34:57,180 --> 01:34:59,520\nAnd as long as that del c is\nup I'll be able to ping me.\n\n1770\n01:34:59,520 --> 01:35:02,340\nAnd then I can start to move\nthrough the other branches.\n\n1771\n01:35:02,340 --> 01:35:03,936\n.2, that's branch three.\n\n1772\n01:35:03,936 --> 01:35:07,090\nAnd .3 and .4.\n\n1773\n01:35:07,090 --> 01:35:10,990\nI'm now reaching out to\nall of the other branches.\n\n1774\n01:35:10,990 --> 01:35:13,540\nAll right, and I'm doing it through\nthe del cs that are defined.\n\n1775\n01:35:13,540 --> 01:35:15,510\nThat's these guys right here.\n\n1776\n01:35:15,510 --> 01:35:19,920\nSo I just traveled across these three del\ncs to get to those three branches and\n\n1777\n01:35:19,920 --> 01:35:20,690\nthey came back to me.\n\n1778\n01:35:20,690 --> 01:35:22,630\nAnd they came back to me directly.\n\n1779\n01:35:22,630 --> 01:35:28,830\nAll right, well branch one going to branch\ntwo, it's got its own del c that connects\n\n1780\n01:35:28,830 --> 01:35:33,490\nthose two branches so they could go direct\nand not pass through the headquarters.\n\n1781\n01:35:33,490 --> 01:35:34,570\nThat doesn't work with hub and spoke.\n\n1782\n01:35:34,570 --> 01:35:37,900\nAnd that means if my headquarters fails,\nbranch one and\n\n1783\n01:35:37,900 --> 01:35:40,950\nbranch two will still be able to\nsee each other and communicate.\n\n1784\n01:35:42,050 --> 01:35:42,726\nLet's test that.\n\n1785\n01:35:42,726 --> 01:35:44,827\nAll right, let me take my headquarters.\n\n1786\n01:35:46,279 --> 01:35:52,664\nAnd I'm gonna shut its interface down.\n\n1787\n01:35:52,664 --> 01:35:55,952\nAll right, so headquarters is now\nofficially out of the frame relay mix,\n\n1788\n01:35:55,952 --> 01:35:59,040\nwell, it will be as soon as I\nget my message, there we go.\n\n1789\n01:35:59,040 --> 01:36:00,330\nSo now it's out.\n\n1790\n01:36:00,330 --> 01:36:03,610\nIf I go to branch one, and\n\n1791\n01:36:03,610 --> 01:36:08,240\nI do a show frame-relay pvc,\n\n1792\n01:36:08,240 --> 01:36:12,290\nwhat I should see is the first pvc, 201.\n\n1793\n01:36:12,290 --> 01:36:14,140\nThat's the one connecting\nus to the home office.\n\n1794\n01:36:14,140 --> 01:36:17,090\nNow, it's still showing active right now,\nand that's because when\n\n1795\n01:36:17,090 --> 01:36:19,850\nyou have a failure, it takes a moment for\nthe system to detect it.\n\n1796\n01:36:19,850 --> 01:36:23,612\nIt actually has little timers that run,\nbut it is going to drop soon.\n\n1797\n01:36:23,612 --> 01:36:27,049\nSo in a moment we'll see that one\ngo from active down to inactive,\n\n1798\n01:36:27,049 --> 01:36:31,882\nand eventually, maybe to deleted, if it's\nactually being removed and decommissioned.\n\n1799\n01:36:31,882 --> 01:36:35,922\nBut otherwise it'll just sit there in\ninactive while it's out, all right?\n\n1800\n01:36:35,922 --> 01:36:38,920\nBut the other two guys, 203, 204,\n\n1801\n01:36:38,920 --> 01:36:42,600\nthese guys are still active,\nand they should be up.\n\n1802\n01:36:44,510 --> 01:36:45,330\nI say should.\n\n1803\n01:36:45,330 --> 01:36:46,820\nWell, let's find out, all right?\n\n1804\n01:36:46,820 --> 01:36:52,380\nSo, if I try and ping 192.168.1.1,\nthat's the home office,\n\n1805\n01:36:52,380 --> 01:36:55,350\nand if I try and ping it, it fails.\n\n1806\n01:36:55,350 --> 01:36:57,910\nOkay, so I'm not getting the home office.\n\n1807\n01:36:57,910 --> 01:37:02,922\nI'm .2 so there's not a lot\nof need to ping that one.\n\n1808\n01:37:02,922 --> 01:37:06,096\n.3, that's the next branch and\nI can ping it.\n\n1809\n01:37:06,096 --> 01:37:09,270\nAnd .4, I can still ping it.\n\n1810\n01:37:09,270 --> 01:37:12,860\nI've created an environment\nthat is fully redundant.\n\n1811\n01:37:12,860 --> 01:37:16,390\nNo one office is responsible for\nthe full connection.\n\n1812\n01:37:16,390 --> 01:37:18,140\nIt's a full mesh and\n\n1813\n01:37:18,140 --> 01:37:21,740\nI didn't have to go broke investing\nin multiple physical lines.\n\n1814\n01:37:21,740 --> 01:37:26,290\nThe DLCIs, those virtual circuits\nthat the telco is creating,\n\n1815\n01:37:26,290 --> 01:37:27,690\nthose are what's providing\nthat connectivity.\n\n1816\n01:37:29,950 --> 01:37:34,620\nSo, for those of you who have\ntaken like the Network+ class, or\n\n1817\n01:37:34,620 --> 01:37:36,560\nexam or whatever, and\nyou looked at these topologies.\n\n1818\n01:37:36,560 --> 01:37:37,640\nThey show that full mesh.\n\n1819\n01:37:37,640 --> 01:37:38,780\nLike nobody does that.\n\n1820\n01:37:38,780 --> 01:37:40,870\nYou'd go broke with all these connections.\n\n1821\n01:37:40,870 --> 01:37:43,170\nOr could you imagine a server\nwith 100 network cards in it?\n\n1822\n01:37:43,170 --> 01:37:44,400\nNobody's going to do that.\n\n1823\n01:37:44,400 --> 01:37:45,580\nWell, that's true.\n\n1824\n01:37:45,580 --> 01:37:49,990\nOn the physical side,\na full mesh is not realistic.\n\n1825\n01:37:49,990 --> 01:37:53,830\nBut on a logical side,\nnot only is a full mesh realistic,\n\n1826\n01:37:53,830 --> 01:37:58,500\nit's very easy to achieve, and\nwe get some really good redundancy.\n\n1827\n01:37:58,500 --> 01:38:03,360\nAnd what some people will do is they'll\nactually get two frame relay circuits, so\n\n1828\n01:38:03,360 --> 01:38:07,630\nthat they can get physical redundancy,\non the physical frame relay lines, and\n\n1829\n01:38:07,630 --> 01:38:11,360\nthen do the pvcs to connect\nout to the other sides.\n\n1830\n01:38:11,360 --> 01:38:15,320\nAnd now they get a full mesh in\nthe cloud with two physical circuits, so\n\n1831\n01:38:15,320 --> 01:38:16,540\nyou can get redundancy that way too.\n\n1832\n01:38:17,790 --> 01:38:18,640\n>> Sounds like a good idea.\n\n1833\n01:38:19,880 --> 01:38:23,160\n>> Now the only negative about frame relay\nis you're really married to your telephone\n\n1834\n01:38:23,160 --> 01:38:24,850\nprovider, right?\n\n1835\n01:38:24,850 --> 01:38:27,140\nYou are using them to get these lines and\n\n1836\n01:38:27,140 --> 01:38:30,610\nto switch away you'd have to basically\nmove to an all different technology.\n\n1837\n01:38:30,610 --> 01:38:32,110\nSo there is a bit of a reliance there, but\n\n1838\n01:38:32,110 --> 01:38:35,290\nthe trade off is that you get\na private network, right?\n\n1839\n01:38:35,290 --> 01:38:38,070\nNot connected to the internet,\nunless you want it to be.\n\n1840\n01:38:38,070 --> 01:38:40,930\nAnd so it's secure,\nit's easy to use, it's layer two so\n\n1841\n01:38:40,930 --> 01:38:43,910\nyou can lay whatever the heck on\ntop of it, layer three and higher.\n\n1842\n01:38:43,910 --> 01:38:47,810\nAnd it's yours to do with as you please.\n\n1843\n01:38:47,810 --> 01:38:50,650\n>> Yeah, it makes sense to actually\ntake a look at frame relay for\n\n1844\n01:38:50,650 --> 01:38:54,780\nan option because of how easy it is for\nus to configure.\n\n1845\n01:38:54,780 --> 01:38:56,451\nSo even though there\nwere a lot of commands,\n\n1846\n01:38:56,451 --> 01:38:59,343\nyou noticed that none of them were really\nsuper in depth like some of the other\n\n1847\n01:38:59,343 --> 01:39:01,735\ntechnologies that you\nmay end up running into.\n\n1848\n01:39:01,735 --> 01:39:07,360\nSo, if it's ease, if it's lower cost\nthan the idea of creating multiple\n\n1849\n01:39:07,360 --> 01:39:11,740\ndirect connections to all these places,\nframe relay's probably the way to go.\n\n1850\n01:39:11,740 --> 01:39:12,340\n>> Yeah, absolutely.\n\n1851\n01:39:13,360 --> 01:39:18,740\nAll right, so that's really about all we\nneed to know for frame relay for the exam.\n\n1852\n01:39:18,740 --> 01:39:20,170\nWe showed you guys how to set it up,\n\n1853\n01:39:20,170 --> 01:39:22,270\na couple of different\nconfiguration scenarios.\n\n1854\n01:39:22,270 --> 01:39:24,701\nWe took a look at some\nbasic troubleshooting,\n\n1855\n01:39:24,701 --> 01:39:28,450\nright, the tools we can use to query\nthe status and pull that information.\n\n1856\n01:39:28,450 --> 01:39:30,370\nAnd I’ve got show notes written up for\n\n1857\n01:39:30,370 --> 01:39:32,930\nall this that I’ll post which,\nwhere are those things?\n\n1858\n01:39:32,930 --> 01:39:34,610\nIt seems like I’ve got those show\nnotes around here somewhere.\n\n1859\n01:39:34,610 --> 01:39:36,220\nHere we go.\n\n1860\n01:39:36,220 --> 01:39:39,070\nSo, let me bring these up, just kind of\nshow you what I jotted down for you guys.\n\n1861\n01:39:39,070 --> 01:39:41,297\nSome of the difference acronyms\nthat you need to be aware of,\n\n1862\n01:39:41,297 --> 01:39:42,790\nthat you might see on the exam.\n\n1863\n01:39:42,790 --> 01:39:46,450\nSome of the basic commands you'll use as\nyou're troubleshooting and examining,\n\n1864\n01:39:46,450 --> 01:39:50,120\nand some of the configuration commands,\njust real generic here.\n\n1865\n01:39:50,120 --> 01:39:53,631\nAnd then I actually gave\na point-to-point sub-interface,\n\n1866\n01:39:53,631 --> 01:39:58,170\npoint-to-point sub-interface, oh,\ndid I call them both sub-interface?\n\n1867\n01:39:58,170 --> 01:39:58,780\nI did.\n\n1868\n01:39:58,780 --> 01:40:03,515\nThis is a point-to-point on the interface\nexample, this is a point-to-point\n\n1869\n01:40:03,515 --> 01:40:08,335\nsub-interface example, and then a point-\nto-multipoint example right here.\n\n1870\n01:40:08,335 --> 01:40:12,075\nI guess I should just call\nthat a multipoint example.\n\n1871\n01:40:12,075 --> 01:40:13,755\nSo, I gotta couple of those samples,\n\n1872\n01:40:13,755 --> 01:40:15,325\nwhich are really the ones\nwe used here on the show.\n\n1873\n01:40:15,325 --> 01:40:18,855\nAnd so I'll make those available for\nyou guys to download with the episode.\n\n1874\n01:40:18,855 --> 01:40:22,675\nBut otherwise,\nthat's pretty much it for frame relay.\n\n1875\n01:40:22,675 --> 01:40:27,045\nNow if you're in a position in real life,\nwhere you're looking to design a network\n\n1876\n01:40:27,045 --> 01:40:29,490\nand this sounded like a great option for\nyou.\n\n1877\n01:40:29,490 --> 01:40:32,580\nIf you're building something new today,\nyou're probably better off deploying\n\n1878\n01:40:32,580 --> 01:40:34,950\nMPLS instead, and so\nyou need to look into that.\n\n1879\n01:40:34,950 --> 01:40:37,960\nIt uses these packet labels to do\nthe redirection just like a DLCI.\n\n1880\n01:40:37,960 --> 01:40:40,680\nIt's a little more powerful,\na little more flexible, and\n\n1881\n01:40:40,680 --> 01:40:44,660\nhas a neat functionality, and\nit's not dependent on serial lines.\n\n1882\n01:40:44,660 --> 01:40:46,620\nThey use it on top of ethernet, so\n\n1883\n01:40:46,620 --> 01:40:49,180\nyou can get metro E lines\nwith much higher bandwidth.\n\n1884\n01:40:49,180 --> 01:40:53,560\nAnd so MPLS is kind of the way of\nthe future, but frame relay is not gone.\n\n1885\n01:40:53,560 --> 01:40:56,840\nSo if you go to work somewhere it's\nvery possible they'll already have\n\n1886\n01:40:56,840 --> 01:40:58,230\na frame relay network in place.\n\n1887\n01:40:58,230 --> 01:41:01,430\nSo definitely keep that\nin mind in your studies.\n\n1888\n01:41:02,590 --> 01:41:04,380\nAll right,\nwell that is pretty much a wrap for\n\n1889\n01:41:04,380 --> 01:41:08,760\nexam objective 2.2,\nwhich was explain frame relay.\n\n1890\n01:41:08,760 --> 01:41:12,040\nWe got a chance to take a look at\nthe operations and what that setup was.\n\n1891\n01:41:12,040 --> 01:41:15,128\nWe saw a point-to-point model and\na multipoint model, and\n\n1892\n01:41:15,128 --> 01:41:20,510\nwe went a little bit extra and saw the\nfull mesh configuration with frame relay.\n\n1893\n01:41:20,510 --> 01:41:23,260\nSo that's about it for this one.\n\n1894\n01:41:23,260 --> 01:41:26,760\nLet me remind you guys,\nif you have questions on any of this,\n\n1895\n01:41:26,760 --> 01:41:27,980\nfeel free to ask.\n\n1896\n01:41:27,980 --> 01:41:30,270\nLive during the show you\ncan go to itpro.tv/live,\n\n1897\n01:41:30,270 --> 01:41:32,740\nand you'll see the chat\nbox beneath the video.\n\n1898\n01:41:32,740 --> 01:41:35,840\nPost your questions there,\nwe monitor and answer during the show.\n\n1899\n01:41:35,840 --> 01:41:39,890\nIf you have questions after the show,\nuse our Q&A forums.\n\n1900\n01:41:39,890 --> 01:41:44,290\nAt the top of every page in ITProTV you'll\nsee a link that says Q&A, click on it.\n\n1901\n01:41:44,290 --> 01:41:46,980\nOnce you go in there you can\npost a question, we monitor and\n\n1902\n01:41:46,980 --> 01:41:48,520\nanswer after hours, right?\n\n1903\n01:41:48,520 --> 01:41:49,970\nNot in the middle of the night.\n\n1904\n01:41:49,970 --> 01:41:54,850\nWe do sleep, but throughout the week we\ncheck in and answer people's questions.\n\n1905\n01:41:54,850 --> 01:41:58,060\nWe wanna make sure you guys have\nthe information you need to be successful.\n\n1906\n01:41:59,252 --> 01:42:01,000\nAll right well I hope you\nguys enjoyed the show.\n\n1907\n01:42:01,000 --> 01:42:03,060\nSigning off for ITProTV I'm Don Pezet.\n\n1908\n01:42:03,060 --> 01:42:04,150\n>> And I'm Ronnie Wong.\n\n1909\n01:42:04,150 --> 01:42:05,794\n>> And we will see you next time.\n\n1910\n01:42:05,794 --> 01:42:15,794\n[MUSIC]\n\n1911\n01:42:17,986 --> 01:42:23,840\n[SOUND]\n\n",
          "vimeoId": "109959114"
        }
      ],
      "title": "Layer 2 Technologies"
    },
    {
      "episodes": [
        {
          "description": "For the Route exam one will need to be able to identify, configure and verify IPv4 addressing and subnetting, which contains three different types of addressing: unicast, broadcast and multicast communications. Viewers will hear about some of the basic IPv4 addressing concepts, the difference between the different types of IPv4 addressing and how to assign IPv4 addressing using DHCP and DHCP relay, as well as hear about how ARP functions within a network and across a network.",
          "length": "4251",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/ccnproute/cisco-ccnproute-3-1-ip_addressing-020215.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/ccnproute/cisco-ccnproute-3-1-ip_addressing-020215-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/ccnproute/cisco-ccnproute-3-1-ip_addressing-020215-sm.jpg",
          "title": "IP Addressing",
          "transcript": "1\n00:00:00,012 --> 00:00:10,012\n[MUSIC]\n\n2\n00:00:32,436 --> 00:00:35,229\nAll right, good morning,\ngood afternoon, and good evening.\n\n3\n00:00:35,229 --> 00:00:37,692\nAnd welcome back to another\nepisode of ITProTV.\n\n4\n00:00:37,692 --> 00:00:40,360\nI'm your host Don Pezet,\nback with Mr. Ronnie Wong.\n\n5\n00:00:40,360 --> 00:00:40,976\nHow's it going, Ronnie?\n\n6\n00:00:40,976 --> 00:00:42,102\n>> It is going well.\n\n7\n00:00:42,102 --> 00:00:44,494\nAnother beautiful day\nhere in sunny Florida.\n\n8\n00:00:44,494 --> 00:00:45,503\nActually, it's not sunny.\n\n9\n00:00:45,503 --> 00:00:49,246\n>> [LAUGH]\n>> But another beautiful day in Florida,\n\n10\n00:00:49,246 --> 00:00:51,985\nand we are starting in on CCNP route.\n\n11\n00:00:51,985 --> 00:00:54,640\nBeen waiting for this for a long time so\nexcited and ready to get started.\n\n12\n00:00:54,640 --> 00:00:55,241\n>> Yeah.\nSo\n\n13\n00:00:55,241 --> 00:00:59,003\nwe've covered the first couple objectives\nalready as we moved through some of\n\n14\n00:00:59,003 --> 00:00:59,920\nthe basic topics.\n\n15\n00:00:59,920 --> 00:01:03,285\nAnd this is the last little\nsection of remedial knowledge that\n\n16\n00:01:03,285 --> 00:01:05,430\nwe need to be aware of for CCNP routing.\n\n17\n00:01:05,430 --> 00:01:09,165\nI know some of you guys are chomping\nat the bit to get to the real technical\n\n18\n00:01:09,165 --> 00:01:12,220\nstuff, the BGP, the higher end routing,\n>> We'll get to that.\n\n19\n00:01:12,220 --> 00:01:15,130\nBut, this is the last of our little\nreview episodes to get you prepared for\n\n20\n00:01:15,130 --> 00:01:16,390\nthat exam.\n\n21\n00:01:16,390 --> 00:01:20,235\nOne of the exam objectives that\nthey hit on is, well it's 3.1.\n\n22\n00:01:20,235 --> 00:01:26,240\nIdentify, configure and\nverify IPv4 addressing and subnetting.\n\n23\n00:01:26,240 --> 00:01:29,273\nNow, that means we need to be\nfamiliar with IPv4 subnetting, but\n\n24\n00:01:29,273 --> 00:01:31,557\nwe need to be familiar with IPv6 also,\nright.?\n\n25\n00:01:31,557 --> 00:01:33,750\nWe don't want to pigeon\nhole ourselves on one.\n\n26\n00:01:33,750 --> 00:01:36,917\nBut on the exam,\nthe exercises that you perform.\n\n27\n00:01:36,917 --> 00:01:39,960\nEspecially when you get into some\nof the practical labs in the exam.\n\n28\n00:01:39,960 --> 00:01:43,849\nYou will have to perform activities\nthat require you to understand the IPv4\n\n29\n00:01:43,849 --> 00:01:44,405\nsubnets.\n\n30\n00:01:44,405 --> 00:01:47,010\nAnd know how these networks match up.\n\n31\n00:01:47,010 --> 00:01:49,988\nAnd be able to translate from\nbinary to decimal and back again.\n\n32\n00:01:49,988 --> 00:01:54,160\nAnd do that quickly and\naccurately on the exam.\n\n33\n00:01:54,160 --> 00:01:55,315\nTo make sure we've covered\nour bases there, and\n\n34\n00:01:55,315 --> 00:01:56,311\nthat's what we're gonna do right here.\n\n35\n00:01:56,311 --> 00:02:00,890\n>> There's no greater substitute than to\ncontinue to learn those fundamentals.\n\n36\n00:02:00,890 --> 00:02:03,583\nMake sure they're drilled into\nyour head on the exam day.\n\n37\n00:02:03,583 --> 00:02:07,640\nThat's the hard time when you go,\nI should have paid attention more\n\n38\n00:02:07,640 --> 00:02:12,475\nto the binary conversion, the subnetting\nthat we've been talking about.\n\n39\n00:02:12,475 --> 00:02:13,773\nThat's the last place to do it.\n\n40\n00:02:13,773 --> 00:02:16,927\nSo we want to make sure that these\nfundamentals that we cover are drilled\n\n41\n00:02:16,927 --> 00:02:19,465\ninto your head to where\nit becomes second nature.\n\n42\n00:02:19,465 --> 00:02:23,695\nBy the time you're ready for the exam,\nyou'll be ready for succeeding and without\n\n43\n00:02:23,695 --> 00:02:27,640\nhaving to think about these little things\nthat we're gonna be talking about today.\n\n44\n00:02:27,640 --> 00:02:28,165\n>> All right.\nNow,\n\n45\n00:02:28,165 --> 00:02:31,639\nwe're not gonna go crazy in depth on a lot\nof these, because you should already have\n\n46\n00:02:31,639 --> 00:02:34,200\nthis knowledge by the time\nyou make it to CCMP Route.\n\n47\n00:02:34,200 --> 00:02:38,433\nSo if we cover something and you go, man,\nI really wish I knew more about that,\n\n48\n00:02:38,433 --> 00:02:41,147\nwhat I'd encourage you to\ndo is one of two things.\n\n49\n00:02:41,147 --> 00:02:43,940\nWe did cover a lot of\nthis in the CCNA show.\n\n50\n00:02:43,940 --> 00:02:46,837\nSo if you jump over to the CCNA show,\nit's covered there.\n\n51\n00:02:46,837 --> 00:02:50,455\nBut even there, there's some kind\nof prior knowledge expected.\n\n52\n00:02:50,455 --> 00:02:53,782\nBut if you jump over to our\nCompTIA Network PLus show.\n\n53\n00:02:53,782 --> 00:02:57,414\nNow remember, as a subscriber to ITproTV,\nyou have access to the whole library.\n\n54\n00:02:57,414 --> 00:03:00,016\nSo you can jump over to\nthe CompTIA Network Plus episode.\n\n55\n00:03:00,016 --> 00:03:01,398\nRonnie and I did a series.\n\n56\n00:03:01,398 --> 00:03:05,630\nI call it my IPv4 Subnetting Super Show.\n\n57\n00:03:05,630 --> 00:03:09,107\nWhere we break it down, from start\nto finish, go real in-depth in it.\n\n58\n00:03:09,107 --> 00:03:11,420\nI think it ended up being like\nfive episodes, didn't it, Ronnie?\n\n59\n00:03:11,420 --> 00:03:12,240\n>> Did.\n\n60\n00:03:12,240 --> 00:03:15,098\n>> It's as in depth as you\ncan get on this stuff.\n\n61\n00:03:15,098 --> 00:03:18,430\nBut by the time you reach the CCMP level,\nyou should already have this knowledge.\n\n62\n00:03:18,430 --> 00:03:20,930\nIf you don't, jump on over to that\nNetwork Plus show and watch them.\n\n63\n00:03:20,930 --> 00:03:21,980\nIt's a good little series.\n\n64\n00:03:21,980 --> 00:03:25,691\nWe do some sample exam questions in\nthere too, it's really good stuff.\n\n65\n00:03:25,691 --> 00:03:27,832\nFor the rest of you,\nlet's just keep it high level so\n\n66\n00:03:27,832 --> 00:03:29,789\nwe don't bore you to\ndeath on something basic.\n\n67\n00:03:29,789 --> 00:03:33,130\nIn IPV4, let's start out with\nthe simple communications.\n\n68\n00:03:33,130 --> 00:03:36,897\nIn IPV4, we have three types\nof addressing that we use.\n\n69\n00:03:36,897 --> 00:03:40,780\nThere's unicast, broadcast, and\nmulticast communications, and\n\n70\n00:03:40,780 --> 00:03:44,210\nthe addresses that are associated\nwith each of them.\n\n71\n00:03:44,210 --> 00:03:45,780\nAll right?\nSo I'll start with unicast.\n\n72\n00:03:45,780 --> 00:03:50,340\nNow, unicast is just when two\ncomputers are talking to each other.\n\n73\n00:03:50,340 --> 00:03:54,030\nOne person talking to one other person,\nand that's it.\n\n74\n00:03:54,030 --> 00:03:58,220\nEach computer will have a unique\nIP address, and they're able to\n\n75\n00:03:58,220 --> 00:04:01,800\nfind each other on the network because\nof the uniqueness of the address.\n\n76\n00:04:01,800 --> 00:04:03,430\nIf they overlapped,\nif they were duplicates,\n\n77\n00:04:03,430 --> 00:04:05,890\nyou wouldn't be able to tell\none person from another, and\n\n78\n00:04:05,890 --> 00:04:08,420\nthat would breakdown the unicast system.\n\n79\n00:04:08,420 --> 00:04:13,125\nNormally, unicast traffic should make up\nthe bulk of the traffic on your network.\n\n80\n00:04:13,125 --> 00:04:14,833\nOne computer talking to\none another computer,\n\n81\n00:04:14,833 --> 00:04:17,450\nthat's what's happening most of the time.\n\n82\n00:04:17,450 --> 00:04:21,723\n>> Another type of address that we also\nused today is what we call a broadcast\n\n83\n00:04:21,723 --> 00:04:22,362\naddress.\n\n84\n00:04:22,362 --> 00:04:26,652\nThe broadcast address is when we\nhave a single sender that tries to\n\n85\n00:04:26,652 --> 00:04:31,075\ncommunicate with every other\ndevice on that same subnet.\n\n86\n00:04:31,075 --> 00:04:34,735\nNow, when we do that, we tend to send it\nout to what we call a broadcast address.\n\n87\n00:04:34,735 --> 00:04:36,421\nAnd all of the devices listen for\n\n88\n00:04:36,421 --> 00:04:39,755\nthat address as well as\ntheir own unicast address.\n\n89\n00:04:39,755 --> 00:04:42,371\nAnd then,\nthey can receive the exact same message.\n\n90\n00:04:42,371 --> 00:04:45,877\nSometimes we make a mistake on this,\nthinking that it's the one sender that's\n\n91\n00:04:45,877 --> 00:04:48,580\ndirectly communicating\nwith every single sender.\n\n92\n00:04:48,580 --> 00:04:50,948\nBut that would be\nmultiple unicast instead.\n\n93\n00:04:50,948 --> 00:04:55,812\nSo remember, it's usually one sending\naddress to one broadcast address, and\n\n94\n00:04:55,812 --> 00:04:59,500\nthat goes out to every single\ndevice on that network.\n\n95\n00:04:59,500 --> 00:05:04,097\nWe still use some of this for\nmanagement traffic on our networks.\n\n96\n00:05:04,097 --> 00:05:06,480\n>> The third type of communication\nwe have is multicast.\n\n97\n00:05:06,480 --> 00:05:10,005\nAnd in multicast,\nit's not one person talking to one person.\n\n98\n00:05:10,005 --> 00:05:13,695\nIt's not one person talking to\neverybody like a broadcast,\n\n99\n00:05:13,695 --> 00:05:16,238\nit's one person talking to some people.\n\n100\n00:05:16,238 --> 00:05:17,325\nSomething in between.\n\n101\n00:05:17,325 --> 00:05:19,860\nRight?\nA multicast is when\n\n102\n00:05:19,860 --> 00:05:22,310\nyou've got like video\nstreaming is a great example.\n\n103\n00:05:22,310 --> 00:05:23,775\nWhere I'm sending out a video stream, and\n\n104\n00:05:23,775 --> 00:05:25,616\nthere's five different\npeople that wanna watch it.\n\n105\n00:05:25,616 --> 00:05:27,276\nWell, it's all the same video stream.\n\n106\n00:05:27,276 --> 00:05:30,605\nSo instead of sending it five separate\ntimes, I can send it once and\n\n107\n00:05:30,605 --> 00:05:32,040\nit can go to all five people.\n\n108\n00:05:32,040 --> 00:05:35,192\nIt's say one-to-many type communication.\n\n109\n00:05:35,192 --> 00:05:39,480\nThis is used frequently in video and\naudio streaming, but it used very,\n\n110\n00:05:39,480 --> 00:05:40,898\nvery heavily in IPv6.\n\n111\n00:05:40,898 --> 00:05:44,410\nIn fact in IPv6,\nyou don't have broadcasting anymore.\n\n112\n00:05:44,410 --> 00:05:47,147\nBroadcasting went away, and\nthey were replaced by multicast.\n\n113\n00:05:47,147 --> 00:05:49,770\nBecause multicast is far more efficient.\n\n114\n00:05:49,770 --> 00:05:50,490\nRight?\n\n115\n00:05:50,490 --> 00:05:54,850\nIf I'm sending out a broadcast to try and\nfind somebody on the network, for example.\n\n116\n00:05:54,850 --> 00:05:57,376\nI wanna find Ronnie's computer,\nso I send a broadcast out.\n\n117\n00:05:57,376 --> 00:05:59,770\nIf there's a hundred computers out there.\n\n118\n00:05:59,770 --> 00:06:01,420\nWell, I'll hit Ronnie, he'll respond.\n\n119\n00:06:01,420 --> 00:06:02,640\nThat's what I wanted.\n\n120\n00:06:02,640 --> 00:06:06,455\nBut, I'm bothering 99 other people too,\nand that's kind of pointless.\n\n121\n00:06:06,455 --> 00:06:07,600\nIt's just kind of annoying them.\n\n122\n00:06:07,600 --> 00:06:08,734\nAnd that's broadcast traffic.\n\n123\n00:06:08,734 --> 00:06:11,277\nThat's a waste of\nresources on their system.\n\n124\n00:06:11,277 --> 00:06:14,158\nSo with a multicast,\nwe can eliminate that.\n\n125\n00:06:14,158 --> 00:06:16,927\nWith a multicast we can say, hey,\nI'm just gonna send this out.\n\n126\n00:06:16,927 --> 00:06:18,773\nAnd I just wanna talk\nto these four people.\n\n127\n00:06:18,773 --> 00:06:22,921\nDon't bother the other 100 computers on\nmy network, let's just keep it right and\n\n128\n00:06:22,921 --> 00:06:23,446\nfocused.\n\n129\n00:06:23,446 --> 00:06:25,810\nSo that's a multicast.\n\n130\n00:06:25,810 --> 00:06:30,987\nThe way these IP addresses look\nis pretty standard, right?\n\n131\n00:06:30,987 --> 00:06:33,562\nLet's show some examples,\nlet me bring up my laptop.\n\n132\n00:06:33,562 --> 00:06:36,761\nI just got a blank note here,\nI'll fire up some examples.\n\n133\n00:06:36,761 --> 00:06:38,000\nWhen we think of an IPv4 address,\n\n134\n00:06:38,000 --> 00:06:40,111\nyou probably think of something\nreally popular, right?\n\n135\n00:06:40,111 --> 00:06:46,596\nLike 192.168.0.1, or 127.0.0.1.\n\n136\n00:06:46,596 --> 00:06:48,967\nThese are standard IPv4 addresses, right?\n\n137\n00:06:48,967 --> 00:06:51,769\nIt's a 32-bit binary number.\n\n138\n00:06:51,769 --> 00:06:57,072\nWritten in four eight bit segments,\nwhich are called octets.\n\n139\n00:06:57,072 --> 00:06:59,072\nAnd then converted into decimal, so\n\n140\n00:06:59,072 --> 00:07:01,980\nit's a dotted decimal notation\nis what they call it.\n\n141\n00:07:01,980 --> 00:07:05,521\nIt's an annoying naming, but\nbasically it looks something like this.\n\n142\n00:07:05,521 --> 00:07:08,983\nAnd it's typically combined\nwith a subnet mask.\n\n143\n00:07:08,983 --> 00:07:12,844\nAnd the subnet mask is pretty important\nbecause it's going to help us figure out\n\n144\n00:07:12,844 --> 00:07:16,890\nwhether this is a unicast address, a\nbroadcast address, or a multicast address.\n\n145\n00:07:18,440 --> 00:07:24,950\nNow, if it's a unicast address the parts\nthat are labelled here with a 0 in the.\n\n146\n00:07:24,950 --> 00:07:25,911\nThose are going to be unique.\n\n147\n00:07:25,911 --> 00:07:29,418\nSo I might have 198.168.0.1 and\n\n148\n00:07:29,418 --> 00:07:34,320\n198.168.0.2, and so on for that network.\n\n149\n00:07:34,320 --> 00:07:38,349\nAnd each one of those is a unique,\nseparate computer.\n\n150\n00:07:38,349 --> 00:07:41,560\nAnd with that last octet being part of\nwhat's known as the host ID, right.\n\n151\n00:07:41,560 --> 00:07:44,330\nWe've got our network ID.\n\n152\n00:07:44,330 --> 00:07:47,330\nRight?\nWhich is where we have all the 255s, and\n\n153\n00:07:47,330 --> 00:07:50,330\nthat's followed by the host ID,\nwhich where I've got that zero.\n\n154\n00:07:50,330 --> 00:07:53,420\nSo where my network ID is\nalways going to be the same.\n\n155\n00:07:53,420 --> 00:07:56,690\nIf you have two computers on the same\nnetwork, their network ID has to match.\n\n156\n00:07:56,690 --> 00:07:58,690\nThe host ID has to be different.\n\n157\n00:07:58,690 --> 00:07:59,690\nIt's got to be unique, right?\n\n158\n00:07:59,690 --> 00:08:00,836\nThat's identifying them.\n\n159\n00:08:00,836 --> 00:08:03,512\nAnd this is really a binary octet, right?\n\n160\n00:08:03,512 --> 00:08:07,879\nIt's an eight bit binary octet, and\nThose numbers, we see them in decimal, but\n\n161\n00:08:07,879 --> 00:08:12,970\nthe routers, the switches, the computers,\nthey're all seeing them in binary.\n\n162\n00:08:12,970 --> 00:08:19,050\nAnd for a broadcast address,\nthat number is simply all ones.\n\n163\n00:08:19,050 --> 00:08:23,190\nIf we take that last octet there and make\nit all ones, then it becomes a broadcast.\n\n164\n00:08:23,190 --> 00:08:27,130\nNow if I had eight 1s in binary,\nwhat is that in decimal?\n\n165\n00:08:27,130 --> 00:08:28,090\nWell, 255, that’s right.\n\n166\n00:08:28,090 --> 00:08:29,300\nSo if I had 192.168.0.255,\n\n167\n00:08:29,300 --> 00:08:33,100\nthat would be the broadcast address for\nthat network, right?\n\n168\n00:08:34,980 --> 00:08:38,560\nWe use the subnet mask to help\ndetermine what our broadcast is,\n\n169\n00:08:38,560 --> 00:08:42,030\nor whether we're looking at a regular\nunicast address, or something special.\n\n170\n00:08:43,850 --> 00:08:44,800\nNow multicast addresses,\n\n171\n00:08:44,800 --> 00:08:47,080\nthey have a completely different\ntype of addressing, right Ronnie?\n\n172\n00:08:47,080 --> 00:08:48,890\n>> Yeah.\nWhen we take a look at the multicast\n\n173\n00:08:48,890 --> 00:08:52,970\naddress, this is where the network\nportion is going to be different.\n\n174\n00:08:52,970 --> 00:08:56,760\nThere's normally the three classes of\naddresses that we would normally see on\n\n175\n00:08:56,760 --> 00:09:00,678\nthe Internet, class A, B, and C, but\nthis is where we get into class D range.\n\n176\n00:09:00,678 --> 00:09:06,540\nBeginning at 2240.0.0 going\nall the way through 239.\n\n177\n00:09:06,540 --> 00:09:10,510\nAll the way through to the end there,\n0.0.0,\n\n178\n00:09:10,510 --> 00:09:12,510\nprobably even the upper end of that, too.\n\n179\n00:09:13,920 --> 00:09:14,570\nYeah, the upper end.\n\n180\n00:09:14,570 --> 00:09:15,868\n>> All the way to the top of that one.\n\n181\n00:09:15,868 --> 00:09:19,440\nSo, the multi-cast range,\nyou don't identify it by looking for\n\n182\n00:09:19,440 --> 00:09:22,500\na 255 at the end or anything, you just\nlook for that 224 at the beginning.\n\n183\n00:09:22,500 --> 00:09:26,110\nIt's a really big address space,\nright, it does go all the way to 239.\n\n184\n00:09:26,110 --> 00:09:29,490\nIt's so big though, most people\nusually just stay in the 224 range,\n\n185\n00:09:29,490 --> 00:09:30,950\nso it's pretty easy to spot.\n\n186\n00:09:30,950 --> 00:09:36,350\nBut on the exam, if you see a 228 or\na 231, that's in the multi-cast range.\n\n187\n00:09:36,350 --> 00:09:38,374\nYou need to recognize that\nas a multi-cast address.\n\n188\n00:09:38,374 --> 00:09:39,145\nNow.\nNow,\n\n189\n00:09:39,145 --> 00:09:43,179\nmulticast is important to us in this show,\nand not just in this episode, but\n\n190\n00:09:43,179 --> 00:09:47,527\nin the entire CCNP route series, because\nall of the routing protocols that we work\n\n191\n00:09:47,527 --> 00:09:50,890\nwith use multicast to send\nupdates between the routers.\n\n192\n00:09:50,890 --> 00:09:54,730\nSo when you're running EIGRP,\nor OSPF, RIP version 2, BGP,\n\n193\n00:09:54,730 --> 00:09:57,600\nthey're all using, well, not BGP.\n\n194\n00:09:57,600 --> 00:10:01,530\nShoot, that one's still using unicast,\nbut the other ones are using multicast.\n\n195\n00:10:01,530 --> 00:10:05,550\nBecause there may be more than one router\nto communicate with on the network, and\n\n196\n00:10:05,550 --> 00:10:07,440\na multicast is more efficient.\n\n197\n00:10:07,440 --> 00:10:10,800\nAnd we can have problems with\nthat if we're not careful.\n\n198\n00:10:10,800 --> 00:10:13,780\nWe'll see when we talk\nabout frame relay that\n\n199\n00:10:13,780 --> 00:10:16,760\nif you're trying to send multicast over\nframe relay, it might get blocked,\n\n200\n00:10:16,760 --> 00:10:19,780\ncuz a lot of ISP don't allow\nbroadcast type traffic.\n\n201\n00:10:19,780 --> 00:10:21,490\nMultitask is wrapped up into that.\n\n202\n00:10:21,490 --> 00:10:25,690\nSo, technologies like EIGRP have special\nsettings you can apply when they're\n\n203\n00:10:25,690 --> 00:10:29,520\nflowing over networks like that,\nto convert them away from multicast.\n\n204\n00:10:29,520 --> 00:10:31,960\nSo, it is important to remember that,\n\n205\n00:10:31,960 --> 00:10:34,430\nthat we have this multicast\ntechnology under the hood.\n\n206\n00:10:34,430 --> 00:10:36,520\nAnd it's powering the routing\nprotocols that we use.\n\n207\n00:10:38,895 --> 00:10:43,840\nNow, we talked about unicast,\nwe talked about multicast and broadcast.\n\n208\n00:10:43,840 --> 00:10:46,530\nAnd this is probably not earth\nshattering stuff to you guys, right?\n\n209\n00:10:46,530 --> 00:10:48,550\nYou should already be familiar with this.\n\n210\n00:10:48,550 --> 00:10:49,520\nBut the other comment,\n\n211\n00:10:49,520 --> 00:10:53,860\nthe other objective that Cisco calls out,\nis something called VLSM.\n\n212\n00:10:53,860 --> 00:10:55,280\nVariable Length Subnet Mask.\n\n213\n00:10:55,280 --> 00:10:58,570\nAnd this is another one that I\nknow we covered in the CCNA show,\n\n214\n00:10:58,570 --> 00:11:00,130\nwe definitely covered in\nthe Network Plus show,\n\n215\n00:11:00,130 --> 00:11:04,040\nso you should have already been exposed\nwith, but just a quick refresh.\n\n216\n00:11:05,190 --> 00:11:09,792\nLet's take a look at an example of\njust a normal set of IPs on a network.\n\n217\n00:11:09,792 --> 00:11:14,390\nI mentioned how IP address\ntypically have a subnet mask, and\n\n218\n00:11:14,390 --> 00:11:16,692\nthere's three primary\nsubnet masks that we see.\n\n219\n00:11:16,692 --> 00:11:21,530\nThey are tied to the old classes,\nlike the old Class A subnet mask,\n\n220\n00:11:21,530 --> 00:11:27,130\nthe Class B subnet mask, and\nthe Class C subnet mask, right?\n\n221\n00:11:27,130 --> 00:11:30,980\nAnd these are throwbacks from\nan earlier day of the Internet.\n\n222\n00:11:30,980 --> 00:11:33,970\nWhen addresses fell into\nthese class ranges.\n\n223\n00:11:33,970 --> 00:11:39,410\nAnd the class ranges just dictated how\nmany octets were a part of the network ID\n\n224\n00:11:39,410 --> 00:11:40,960\nversus the host ID.\n\n225\n00:11:40,960 --> 00:11:43,580\nAnd these were really written in binary,\n\n226\n00:11:43,580 --> 00:11:47,170\non the exam a lot of times you'll see them\nwritten in subnet shorthand notation.\n\n227\n00:11:47,170 --> 00:11:52,010\nSo that Class A actually becomes a /8.\n\n228\n00:11:52,010 --> 00:11:55,360\nThere we go.\n\n229\n00:11:55,360 --> 00:11:56,260\n>> 16.\nAnd 24.\n\n230\n00:11:56,260 --> 00:11:58,070\n>> There we go.\n\n231\n00:11:58,070 --> 00:12:01,598\nSo that's that subnet shorthand notation,\nand it's basically saying,\n\n232\n00:12:01,598 --> 00:12:05,350\nthere's 8 bits that are part of the\nnetwork ID in the Class A, and there's 16\n\n233\n00:12:05,350 --> 00:12:09,460\nbits that are part of that network ID in\nClass B, and there's 24 in a Class C.\n\n234\n00:12:09,460 --> 00:12:12,500\nAnd kind of designate\nan easier to write method.\n\n235\n00:12:14,660 --> 00:12:18,990\nNow when get a normal address,\nI receive the address, and\n\n236\n00:12:18,990 --> 00:12:22,280\nthey tell me what the subnet mask is.\n\n237\n00:12:22,280 --> 00:12:26,480\nAnd so\nthey'll say something like 192.168.0.1/24.\n\n238\n00:12:26,480 --> 00:12:27,850\nAnd I can say, all right, well,\n\n239\n00:12:27,850 --> 00:12:31,330\n24 bits, that means the first three\noctets are part of my network ID.\n\n240\n00:12:31,330 --> 00:12:35,890\nAnd the last, the first 24 bits,\nnot octets, that would be a little crazy.\n\n241\n00:12:35,890 --> 00:12:38,650\nBut the last eight bits\nare part of my host ID, and\n\n242\n00:12:38,650 --> 00:12:41,170\nthat means this dot one is my host ID.\n\n243\n00:12:41,170 --> 00:12:48,330\nAnd if I had another computer,\nthat was that address,\n\n244\n00:12:48,330 --> 00:12:52,420\nand they said all right, are these two\ncomputers on the same network or not?\n\n245\n00:12:52,420 --> 00:12:54,910\nWell, are they on the same number Ronnie?\n\n246\n00:12:54,910 --> 00:12:56,010\n>> They would be, and\n\n247\n00:12:56,010 --> 00:13:00,650\nwe'd take a look at the prefix notation\nthat we see right there with the /24.\n\n248\n00:13:00,650 --> 00:13:06,420\nBoth of them are showing us that the first\nthree octets are exactly the same,\n\n249\n00:13:06,420 --> 00:13:09,430\nwhich puts both of those\naddresses in the same network,\n\n250\n00:13:09,430 --> 00:13:10,699\neven though they are different devices.\n\n251\n00:13:12,590 --> 00:13:14,220\n>> Now where it starts to get tricky,\n\n252\n00:13:14,220 --> 00:13:18,430\nthough, is when we don't\nfollow a standard subnet mask.\n\n253\n00:13:18,430 --> 00:13:19,920\nWhen we look at these\nsubnet masks up here,\n\n254\n00:13:19,920 --> 00:13:21,360\nthese are the standard class full ones.\n\n255\n00:13:21,360 --> 00:13:25,140\nAnd and visually, as a human,\nthey're easy to read because\n\n256\n00:13:25,140 --> 00:13:29,080\nit's basically breaking the network and\nthe host ID apart on the end of an octet.\n\n257\n00:13:29,080 --> 00:13:30,360\nSo where you see a period,\n\n258\n00:13:30,360 --> 00:13:33,370\nthat'll be one of our stops\nbetween network ID and host ID.\n\n259\n00:13:33,370 --> 00:13:38,160\nBut with VLSM, variable length\nsubnet mask, we break the rules.\n\n260\n00:13:38,160 --> 00:13:40,620\nWe can put that line somewhere else.\n\n261\n00:13:40,620 --> 00:13:45,380\nFor example,\nthese could be /25s, all right?\n\n262\n00:13:45,380 --> 00:13:48,980\nAnd now that I made it a /25,\nI'll put you on the spot Ronnie, so\n\n263\n00:13:48,980 --> 00:13:51,080\nnow that it's a /25,\nare these guys on the same network?\n\n264\n00:13:51,080 --> 00:13:53,510\n>> They would not be on the same network.\n\n265\n00:13:53,510 --> 00:13:59,090\nAnd that is because if we were to take\nthe first 25 bits of the address,\n\n266\n00:13:59,090 --> 00:14:03,980\nwe would end up seeing that the network\nportion would actually be different.\n\n267\n00:14:03,980 --> 00:14:08,030\nSo what we'd end up seeing\nis that the 128 represents\n\n268\n00:14:08,030 --> 00:14:10,235\na second network right\nthere at the division.\n\n269\n00:14:10,235 --> 00:14:14,610\n>> Yep, and just to make sure\nthat everybody understands.\n\n270\n00:14:14,610 --> 00:14:18,150\nMy goal here is not necessarily to go\ndeep dive into how this works, but\n\n271\n00:14:18,150 --> 00:14:21,230\nto help highlight whether or\nnot you need additional study on this.\n\n272\n00:14:21,230 --> 00:14:23,690\nSo let's just do the example\nquick in binary so\n\n273\n00:14:23,690 --> 00:14:27,100\nwe can see what's going on behind\nthe scenes, so we understand how it works.\n\n274\n00:14:27,100 --> 00:14:31,250\nIf I go back to saying this was a /24,\nall right, like that.\n\n275\n00:14:31,250 --> 00:14:37,130\nWell, if I take that, and I'll just\nmove this up in my screen a bit here.\n\n276\n00:14:37,130 --> 00:14:38,850\nI know I'm going low tech today.\n\n277\n00:14:38,850 --> 00:14:43,607\nSo, if I take 192.168.0.1, and\n\n278\n00:14:43,607 --> 00:14:46,610\nI convert that to binary, so\n\n279\n00:14:46,610 --> 00:14:52,560\nthat will be 11000000.10101000.\n\n280\n00:14:52,560 --> 00:14:53,062\n>> Yep.\n>> Yep.\n\n281\n00:14:53,062 --> 00:14:56,600\n>> [LAUGH]\n>> You know you do things in your head and\n\n282\n00:14:56,600 --> 00:14:57,520\nyou take a risk.\n\n283\n00:14:57,520 --> 00:14:58,020\n>> Oh yeah.\n\n284\n00:14:59,470 --> 00:15:00,540\nI've done it.\n\n285\n00:15:00,540 --> 00:15:01,230\n>> There we go.\n\n286\n00:15:01,230 --> 00:15:03,980\nSo there's 192.168.0.1 in binary.\n\n287\n00:15:03,980 --> 00:15:07,970\nAnd if I do the same things for 128, well,\n\n288\n00:15:07,970 --> 00:15:12,670\nI know 192.168.0, those are the same.\n\n289\n00:15:12,670 --> 00:15:16,950\nAnd then the differences is 128,\nwhich is actually pretty easy to convert.\n\n290\n00:15:16,950 --> 00:15:18,730\nI picked easy numbers so\nI wouldn't make a mistake.\n\n291\n00:15:18,730 --> 00:15:19,386\nThere we go [LAUGH].\n\n292\n00:15:19,386 --> 00:15:21,250\n>> [LAUGH]\n>> And then if I take my subnet\n\n293\n00:15:21,250 --> 00:15:22,230\nmask, right?\n\n294\n00:15:22,230 --> 00:15:26,330\nIf it's a /24,\nmaybe I don't know what my subnet mask is.\n\n295\n00:15:26,330 --> 00:15:32,190\nWell if it's /24, that means the first\n24 bits are part of the network ID,\n\n296\n00:15:32,190 --> 00:15:34,740\nand the last 8 bits\nare part of the host ID.\n\n297\n00:15:34,740 --> 00:15:37,060\nAnd so I can just do like ones and zeroes.\n\n298\n00:15:37,060 --> 00:15:41,030\nAnd what I normally do to kind\nof help me just mentally,\n\n299\n00:15:41,030 --> 00:15:44,120\nis I draw a little bit of a line.\n\n300\n00:15:44,120 --> 00:15:48,510\nWhere the ones end,\nthat's the end of that network ID, and\n\n301\n00:15:48,510 --> 00:15:50,000\nthat's where the host ID starts.\n\n302\n00:15:50,000 --> 00:15:51,200\nRight?\nSo basically\n\n303\n00:15:51,200 --> 00:15:54,240\nright here where this line is,\nthat's the end of the network ID.\n\n304\n00:15:54,240 --> 00:15:55,380\nWell, when I look at this for\n\n305\n00:15:55,380 --> 00:15:58,990\ntwo computers to be on the same network,\nthe network ID has to match.\n\n306\n00:15:58,990 --> 00:16:02,234\nAnd if I look at these two guys all\nthe way up to that line, I've got a match.\n\n307\n00:16:02,234 --> 00:16:06,508\nAnd if we were to convert\nthis back to decimal,\n\n308\n00:16:06,508 --> 00:16:11,012\nthat's simply 255.255.255.0.\n\n309\n00:16:11,012 --> 00:16:11,975\nThere we go.\n\n310\n00:16:11,975 --> 00:16:13,485\nAnd so there's our addresses.\n\n311\n00:16:13,485 --> 00:16:17,416\nAnd this is what it would look\nlike if it was a /24, right?\n\n312\n00:16:17,416 --> 00:16:20,440\nLet me just add that in here,\n\n313\n00:16:20,440 --> 00:16:24,540\nso somebody reading these notes later will\nknow what the heck I'm talking about.\n\n314\n00:16:24,540 --> 00:16:26,197\nAll right, so that's a /24.\n\n315\n00:16:26,197 --> 00:16:27,455\nAll right?\n\n316\n00:16:27,455 --> 00:16:33,920\nBut, if I took that and made it a /25,\nthings become a lot different, right?\n\n317\n00:16:33,920 --> 00:16:36,570\n>> Yep, well what we'll end up seeing here\n\n318\n00:16:36,570 --> 00:16:40,200\ninstead is now instead of taking\nlook at the first 24 bits,\n\n319\n00:16:40,200 --> 00:16:44,730\nwe need to include one more bit over\ntowards the host ID portion side.\n\n320\n00:16:44,730 --> 00:16:47,350\nAnd when we do that and\nwe compare the two addresses,\n\n321\n00:16:47,350 --> 00:16:51,620\nwe end up seeing that it actually\nis showing two different networks.\n\n322\n00:16:51,620 --> 00:16:54,900\nWe'll also need, of course to\nconvert the subnet masks, as well.\n\n323\n00:16:54,900 --> 00:16:58,300\nTo indicate that we\nare actually doing a /25, too.\n\n324\n00:16:58,300 --> 00:17:00,350\nSo Don's gone ahead and done that for us.\n\n325\n00:17:00,350 --> 00:17:04,110\nAnd now he's essentially moving that line,\nthat theoretical line,\n\n326\n00:17:04,110 --> 00:17:10,625\nadding in one more bit to 25 bits, which\nleaves us only with 7 bits of the host ID,\n\n327\n00:17:10,625 --> 00:17:14,625\nand now when we convert that what\n\n328\n00:17:15,665 --> 00:17:20,015\nwe'll end up seeing is the first address\nwill be the 192.168.0.0 network.\n\n329\n00:17:20,015 --> 00:17:26,625\nAnd notice that the second one will be\n192.168.0.128 with the 25 bit subnet mask.\n\n330\n00:17:26,625 --> 00:17:27,925\n>> Yeah, so two things happened here.\n\n331\n00:17:27,925 --> 00:17:29,775\n>> Yep.\n>> One, not only are these guys on\n\n332\n00:17:29,775 --> 00:17:31,175\ntwo separate networks now, right?\n\n333\n00:17:31,175 --> 00:17:33,105\nWhich I can tell right here\nif I look at the network ID.\n\n334\n00:17:33,105 --> 00:17:35,600\nRemember everything to the left\nof the line has to match for\n\n335\n00:17:35,600 --> 00:17:37,060\nthem to be on the same network.\n\n336\n00:17:37,060 --> 00:17:38,480\nAnd in this case I can see they don't.\n\n337\n00:17:38,480 --> 00:17:41,150\nTo the left of the line this one\nhas a zero, this one has a one.\n\n338\n00:17:41,150 --> 00:17:44,130\nThey don't match,\nthey're on different networks.\n\n339\n00:17:44,130 --> 00:17:47,310\nNot only that, but this 128 address,\n\n340\n00:17:47,310 --> 00:17:53,240\nthat was a perfectly valid host address up\nhere, is no longer a valid host address.\n\n341\n00:17:53,240 --> 00:17:58,070\nDown here, 128, if you look,\nsee how the host ID is all zeros?\n\n342\n00:17:58,070 --> 00:18:01,370\nThat means it's the subnet address,\nand you can't use that one.\n\n343\n00:18:01,370 --> 00:18:04,080\nWell, you normally can't use that one,\nthere are some exceptions to it.\n\n344\n00:18:04,080 --> 00:18:05,360\nBut in this case you wouldn't be able to.\n\n345\n00:18:05,360 --> 00:18:07,170\nSo we can't use it.\n\n346\n00:18:07,170 --> 00:18:08,910\nIt's not a valid IP anymore.\n\n347\n00:18:08,910 --> 00:18:11,970\nThis network would actually start, as far\nas usable IPs, with 192.168.0.129 and\n\n348\n00:18:11,970 --> 00:18:17,530\nit would run all the way up to 254.\n\n349\n00:18:17,530 --> 00:18:22,110\nBecause when we get to 255,\nthis would end up being all ones again.\n\n350\n00:18:22,110 --> 00:18:23,730\nAnd if it's all ones.\n\n351\n00:18:23,730 --> 00:18:24,770\n>> That's our broadcast.\n\n352\n00:18:24,770 --> 00:18:25,740\n>> That's the broadcast, yep.\n\n353\n00:18:25,740 --> 00:18:29,190\nSo all zeros is the subnet address or\nsubnet reference.\n\n354\n00:18:29,190 --> 00:18:31,550\nAnd then all ones is the broadcast, right?\n\n355\n00:18:31,550 --> 00:18:33,040\nThose are the two different names.\n\n356\n00:18:33,040 --> 00:18:36,230\nYou see it at the beginning and\nthe end of an IP range.\n\n357\n00:18:36,230 --> 00:18:39,290\nAnd that's where you'll see a lot of\ntextbooks, they talk about N minus two.\n\n358\n00:18:39,290 --> 00:18:42,010\nRight, you're trying to figure out\nhow many hosts are on the network.\n\n359\n00:18:42,010 --> 00:18:45,730\nSo it's the number of nodes or\nN minus two.\n\n360\n00:18:45,730 --> 00:18:49,340\nYou're losing one for the subnet ID and\nyou're losing one for\n\n361\n00:18:49,340 --> 00:18:50,360\nthe broadcast address.\n\n362\n00:18:50,360 --> 00:18:52,040\nYou take away those two addresses and\n\n363\n00:18:52,040 --> 00:18:54,020\nthe rest is how many usable\naddresses you have left.\n\n364\n00:18:55,180 --> 00:18:57,130\n>> Also remember for preparation for\n\n365\n00:18:57,130 --> 00:18:59,990\nthe exam, too,\n>> A lot of times what you'll actually\n\n366\n00:18:59,990 --> 00:19:03,720\nget, or the reason why we want\nto know how to do this, and\n\n367\n00:19:03,720 --> 00:19:07,580\nyou probably already remember, but\nlet's remind everybody that first of all,\n\n368\n00:19:07,580 --> 00:19:10,630\nit's because we're trying\nto conserve addresses.\n\n369\n00:19:10,630 --> 00:19:14,090\nSo a lot of times where you're saying,\nhey, I need to make sure\n\n370\n00:19:14,090 --> 00:19:18,488\nI'm not wasting any addresses, or I need\nto conserve as many addresses as possible.\n\n371\n00:19:18,488 --> 00:19:22,320\nA variable link subnet mask is usually\nour primary way of achieving that goal.\n\n372\n00:19:23,470 --> 00:19:25,300\n>> Yeah, we haven't gotten to it yet\nin this show, but\n\n373\n00:19:25,300 --> 00:19:29,600\neventually we're gonna get to an episode\nwhere we talk about route summerazation.\n\n374\n00:19:29,600 --> 00:19:32,620\nAnd route summarization is where\nthis comes in really handy.\n\n375\n00:19:32,620 --> 00:19:34,960\nAs your routing table gets bigger and\nbigger and\n\n376\n00:19:34,960 --> 00:19:38,110\nbigger on a router, the more and\nmore processing power it takes\n\n377\n00:19:38,110 --> 00:19:42,440\nto run a prefix down that routing table\nand find out where to send it, right.\n\n378\n00:19:42,440 --> 00:19:47,380\nSo that action of doing a routing\ntable look up is kind of a burden\n\n379\n00:19:47,380 --> 00:19:47,930\non a big router.\n\n380\n00:19:47,930 --> 00:19:50,710\nNow, on a home router, on a small or\n\n381\n00:19:50,710 --> 00:19:53,690\nmedium business router where you've\ngot less than a few hundred routes,\n\n382\n00:19:53,690 --> 00:19:55,470\nit's no big deal,\nyou don't worry about this stuff.\n\n383\n00:19:55,470 --> 00:19:57,680\nBut if you work for\nan Internet service provider, and\n\n384\n00:19:57,680 --> 00:20:01,480\nyou've got over a million routes or\njust hundreds of thousands of routes for\n\n385\n00:20:01,480 --> 00:20:03,780\nthat matter, that routing table is big.\n\n386\n00:20:03,780 --> 00:20:06,849\nAnd anything you can do to shrink\nthe routing table down will help.\n\n387\n00:20:06,849 --> 00:20:14,526\nSo for example, in your routing\ntable you might have 192.168.0.0/24,\n\n388\n00:20:14,526 --> 00:20:20,038\nand 192.168.1.0/24, 192.168.2.\n\n389\n00:20:20,038 --> 00:20:21,820\nI know,\nthis is getting a little bit boring.\n\n390\n00:20:21,820 --> 00:20:25,180\nBut, I'm just gonna throw\na couple of 'em in here.\n\n391\n00:20:25,180 --> 00:20:28,030\nAnd, I'm gonna throw one extra\none in here just to show\n\n392\n00:20:28,030 --> 00:20:29,460\nsome of the limitations that we have.\n\n393\n00:20:29,460 --> 00:20:32,240\nBut, if you've got a couple\nof these different networks.\n\n394\n00:20:32,240 --> 00:20:37,260\nAnd basically they all just say you can\nget to that network via E0/0, right.\n\n395\n00:20:37,260 --> 00:20:42,010\nThis particular interface\nthat's on my router, right?\n\n396\n00:20:42,010 --> 00:20:44,920\nSo each of these are available\nthrough the same destination.\n\n397\n00:20:44,920 --> 00:20:52,980\nWell they all have their\nown routing table entry.\n\n398\n00:20:52,980 --> 00:20:55,430\nAnd so when I do a look up I have to run\n\n399\n00:20:55,430 --> 00:20:58,260\ndown the routing table each one\nof these is occupying space.\n\n400\n00:20:58,260 --> 00:21:03,350\nWith route summarization, we can use\nthings like variable-length subnet masks\n\n401\n00:21:03,350 --> 00:21:07,920\nto combine networks together to\nshrink the routing table down.\n\n402\n00:21:07,920 --> 00:21:10,750\nIf we were to take these and\nwrite them in binary,\n\n403\n00:21:10,750 --> 00:21:15,350\nyou'll see that there's actually\na point where they're all the same and\n\n404\n00:21:15,350 --> 00:21:19,040\nthen it starts to change and\nwe can adjust that range to cover it.\n\n405\n00:21:19,040 --> 00:21:21,190\nSo here I'm going to\ncheat just a little bit.\n\n406\n00:21:21,190 --> 00:21:25,530\nI'm going to jump up here and\nwe'll grab some of my text from earlier.\n\n407\n00:21:25,530 --> 00:21:26,590\nSo I don't have to do all this by hand.\n\n408\n00:21:26,590 --> 00:21:29,750\nAnd you don't have to watch\nme type boring binary.\n\n409\n00:21:29,750 --> 00:21:32,319\nSo if I write each of these guys out.\n\n410\n00:21:33,750 --> 00:21:36,590\nAnd, oops, going a little bit crazy here.\n\n411\n00:21:36,590 --> 00:21:41,890\nBut if I write each one of these guys\nout here and kinda throw them in.\n\n412\n00:21:41,890 --> 00:21:49,190\nIf I take that 1.0, or actually I\nguess I started with 0.0, right?\n\n413\n00:21:49,190 --> 00:21:52,310\nSo we'll take 0.0, and 1.0,\nand 2.0, and 3.0, right?\n\n414\n00:21:52,310 --> 00:21:54,980\nJust kinda writing each\none of these guys out.\n\n415\n00:21:54,980 --> 00:21:58,230\nWell, along the way,\nwe've got 192.168 and then\n\n416\n00:21:58,230 --> 00:22:03,310\nthat third octet is where things are gonna\nstart getting a little bit different.\n\n417\n00:22:03,310 --> 00:22:07,170\nThings are gonna get where they don't\nmatch anymore cuz I've got one,\n\n418\n00:22:07,170 --> 00:22:09,380\ntwo, three, and so on.\n\n419\n00:22:09,380 --> 00:22:11,520\nSo if I adjust these to match that, right.\n\n420\n00:22:11,520 --> 00:22:15,048\nThis one's zero, this one's one,\nthis one's two, oops.\n\n421\n00:22:15,048 --> 00:22:16,010\n>> [LAUGH]\n>> All new binary.\n\n422\n00:22:16,010 --> 00:22:18,720\nWe're going quantum\nmathematics on this one.\n\n423\n00:22:18,720 --> 00:22:23,290\nBut if I start to write these guys out,\nyou'll see where they are the same\n\n424\n00:22:23,290 --> 00:22:28,210\nthrough a huge portion of their address,\nright?\n\n425\n00:22:28,210 --> 00:22:31,570\nSo if I'm a router,\nI can consolidate this.\n\n426\n00:22:31,570 --> 00:22:34,400\nI can do route summarization.\n\n427\n00:22:34,400 --> 00:22:39,270\nAnd combine these into something much,\nmuch smaller that takes less space, right?\n\n428\n00:22:39,270 --> 00:22:42,360\nAnd if we look at what we've got here,\nthese numbers,\n\n429\n00:22:42,360 --> 00:22:44,870\nthey all match up to a certain point.\n\n430\n00:22:44,870 --> 00:22:49,630\nAnd I go from left to right and look for\nthe point where they stop being the same,\n\n431\n00:22:49,630 --> 00:22:53,480\nwell, these 8 bits are the same for\nall of these networks.\n\n432\n00:22:53,480 --> 00:22:56,150\nAnd the next eight bits are the same for\nall of these networks, and\n\n433\n00:22:56,150 --> 00:23:00,170\nthe next eight bits, not so much, right?\n\n434\n00:23:00,170 --> 00:23:03,181\nThe first five bits are the same for\nall of them, but\n\n435\n00:23:03,181 --> 00:23:05,297\nthe last three bits are different.\n\n436\n00:23:05,297 --> 00:23:10,162\nI've got 000, 001, 010, 011, and 100.\n\n437\n00:23:10,162 --> 00:23:12,210\nThey don't match, okay?\n\n438\n00:23:12,210 --> 00:23:15,910\nSo I could move my line three lines over.\n\n439\n00:23:15,910 --> 00:23:17,280\nThree bits over.\n\n440\n00:23:17,280 --> 00:23:19,870\nMove that host ID and make it bigger.\n\n441\n00:23:19,870 --> 00:23:21,310\nMake the network ID smaller.\n\n442\n00:23:21,310 --> 00:23:24,400\nAnd now I can consolidate\nall these into one network.\n\n443\n00:23:24,400 --> 00:23:26,280\nThe problem is that when I do that,\n\n444\n00:23:26,280 --> 00:23:29,390\nI am going to get more\nnetworks than actually exist.\n\n445\n00:23:29,390 --> 00:23:32,700\nSo, I have to find the sweet\nspot kind of in between.\n\n446\n00:23:32,700 --> 00:23:34,900\nI don't wanna grab networks\nthat I don't have.\n\n447\n00:23:34,900 --> 00:23:39,765\nFor example, if I had 192.168.5.0, and\n\n448\n00:23:39,765 --> 00:23:44,260\nmaybe it was via some other network,\nright.\n\n449\n00:23:44,260 --> 00:23:46,550\nSo maybe that particular network,\n\n450\n00:23:46,550 --> 00:23:50,880\nit's out there, it's just via some\nserial interface that I have.\n\n451\n00:23:50,880 --> 00:23:54,990\nI don't want to wrap it together because\nit has to go to different location.\n\n452\n00:23:56,120 --> 00:24:03,765\nIf I had that in my mix and I tried to\nsummarize all of 0 through 4 together.\n\n453\n00:24:03,765 --> 00:24:06,735\nI couldn't do that without\naccidentally grabbing 5, right?\n\n454\n00:24:06,735 --> 00:24:08,146\nIt would come along for the ride.\n\n455\n00:24:08,146 --> 00:24:11,122\nAnd I'll show you what I mean So\n\n456\n00:24:11,122 --> 00:24:16,961\nif I'm trying to grab zero through\nfour and I move that line,\n\n457\n00:24:16,961 --> 00:24:23,490\nwell four has a one in this third\nbit right here from the right.\n\n458\n00:24:23,490 --> 00:24:25,070\nThe other guys don't, they have zeroes.\n\n459\n00:24:25,070 --> 00:24:27,830\nSo I would have to draw\nthe line right there.\n\n460\n00:24:27,830 --> 00:24:30,930\nAnd that would include five,\nit would grab it also.\n\n461\n00:24:30,930 --> 00:24:34,460\nI'd grab more networks than I want so\nI can't do that.\n\n462\n00:24:34,460 --> 00:24:37,640\nSo I'm not going to be able to grab four,\nbut zero, one, two and\n\n463\n00:24:37,640 --> 00:24:43,060\nthree, if I drew the line right there, I\ncould grab jus them and consolidate them.\n\n464\n00:24:43,060 --> 00:24:45,390\nAnd so if I wanted to do\nsome route summarization,\n\n465\n00:24:45,390 --> 00:24:50,280\nI wanted to make that smaller, I could\ntake just those guys and I could do that.\n\n466\n00:24:50,280 --> 00:24:50,890\nI could move it.\n\n467\n00:24:50,890 --> 00:24:53,910\nI'd need to move it two lines to\nthe left so instead of a slash 24,\n\n468\n00:24:53,910 --> 00:24:57,290\nI'd need to step down to a slash 22.\n\n469\n00:24:57,290 --> 00:25:01,060\nAnd that would move that\nline right over here.\n\n470\n00:25:02,150 --> 00:25:05,510\nAnd now if you look,\neverything to the left matches.\n\n471\n00:25:05,510 --> 00:25:08,848\nTo the right is different, but\nI'm okay with that, right?\n\n472\n00:25:08,848 --> 00:25:14,655\nAnd now that one network,\nthis 192.168.0.0/22\n\n473\n00:25:14,655 --> 00:25:18,419\nincludes all four of these networks, and\n\n474\n00:25:18,419 --> 00:25:24,330\nI can say that that's available\nvia E00 and I could take that and\n\n475\n00:25:24,330 --> 00:25:30,705\npop that up here in my routing table and\nthat could replace four lines.\n\n476\n00:25:30,705 --> 00:25:35,595\nThese four lines right here could\nbecome one line with that /22,\n\n477\n00:25:35,595 --> 00:25:39,105\nmaking my routing table smaller, making\nrouting table look ups happen faster.\n\n478\n00:25:39,105 --> 00:25:42,515\nAnd that's one of the big advantages for\nsubnetting like this.\n\n479\n00:25:42,515 --> 00:25:44,605\nMost people don't make use of subnets, or\n\n480\n00:25:44,605 --> 00:25:49,710\nvariable length subnet masks on a typical\nbasis because If you're using private IPs,\n\n481\n00:25:49,710 --> 00:25:53,130\nyou can waste IPs left and\nright if you want, but for routing\n\n482\n00:25:53,130 --> 00:25:57,680\ntable summarization like this, it's\nthe difference between having to buy new,\n\n483\n00:25:57,680 --> 00:26:01,790\nmore expensive hardware or\nhaving your own hardware work just fine.\n\n484\n00:26:01,790 --> 00:26:04,320\nIt's a big difference, yeah.\n\n485\n00:26:04,320 --> 00:26:08,380\nIf any of you ever have the chance\nto go and work with an ISP or\n\n486\n00:26:08,380 --> 00:26:11,640\nsee the routing tables, an Internet\nservice provider has a routing table that\n\n487\n00:26:11,640 --> 00:26:15,800\ncontains hundreds of thousands of routes,\nif not millions of routes in some cases.\n\n488\n00:26:15,800 --> 00:26:19,030\nAnd you can get routers\nthat can handle that.\n\n489\n00:26:19,030 --> 00:26:24,020\nThey cost a ton of money when even some of\nthe lower cost routers can handle it if\n\n490\n00:26:24,020 --> 00:26:27,130\nyou just summarize those routes down,\ncollapse the information down.\n\n491\n00:26:27,130 --> 00:26:28,050\nIt makes a big difference.\n\n492\n00:26:28,050 --> 00:26:31,390\n>> Yeah, and James mentioned something\nvery important in our chatroom.\n\n493\n00:26:31,390 --> 00:26:32,590\nHe talks about the very fact that,\n\n494\n00:26:32,590 --> 00:26:34,580\nsomething that we all need\nto know about our routers,\n\n495\n00:26:34,580 --> 00:26:38,780\nis that anything that we're doing on our\nrouter has an associated cost to it.\n\n496\n00:26:38,780 --> 00:26:42,260\nAnd so whatever we can do to\nhelp our routers to perform\n\n497\n00:26:42,260 --> 00:26:46,310\nmore efficiently like route summarization\nit does take up less memory.\n\n498\n00:26:46,310 --> 00:26:48,474\nIt does take up a lot\nless processing time, and\n\n499\n00:26:48,474 --> 00:26:51,761\nthat makes our routers be able to\nperform better for us when we need it.\n\n500\n00:26:51,761 --> 00:26:54,270\n>> Yeah and it is the difference.\n\n501\n00:26:54,270 --> 00:26:57,160\nIf you go to an ISP a lot of\nthe routers they have are the big ones.\n\n502\n00:26:57,160 --> 00:26:58,630\nThey're the size of racks, you know.\n\n503\n00:26:58,630 --> 00:27:00,620\nThey're huge devices.\n\n504\n00:27:00,620 --> 00:27:03,670\nBut you can get these smaller,\nlike a Cisco 7200, right.\n\n505\n00:27:03,670 --> 00:27:07,410\nIt's maybe about this big, and it's\ncapable of containing the entire internet\n\n506\n00:27:07,410 --> 00:27:09,940\nrouting table, the BGP routing table.\n\n507\n00:27:09,940 --> 00:27:13,940\nIf you have enough memory in it,\nit's got the processor power to do it.\n\n508\n00:27:13,940 --> 00:27:15,630\nMost people don't need to do that though.\n\n509\n00:27:15,630 --> 00:27:17,550\nAnd so you get these subsets of addresses.\n\n510\n00:27:17,550 --> 00:27:19,860\nWe'll talk more about\nthat when we get to BGP.\n\n511\n00:27:19,860 --> 00:27:23,170\nBut just be aware that variable length\nsubnet masking, it's not just for\n\n512\n00:27:23,170 --> 00:27:24,130\nbreaking up networks.\n\n513\n00:27:24,130 --> 00:27:25,720\nIt's not just for conserving IPs.\n\n514\n00:27:25,720 --> 00:27:28,600\nBut it's also for\nconserving resources on the router.\n\n515\n00:27:28,600 --> 00:27:31,460\nSo it's an important thing to know.\n\n516\n00:27:31,460 --> 00:27:35,420\nIf you're one of those people\nthat on each exam along the way.\n\n517\n00:27:35,420 --> 00:27:37,420\nYou did network plus and\nyou said you know what,\n\n518\n00:27:37,420 --> 00:27:39,590\nscrew it,\nI'm not going to learn to do subnetting.\n\n519\n00:27:39,590 --> 00:27:40,710\nI'll just get those questions wrong.\n\n520\n00:27:40,710 --> 00:27:42,560\nI'll get everything else right and\nI'll pass.\n\n521\n00:27:42,560 --> 00:27:43,680\nWell that works right?\n\n522\n00:27:43,680 --> 00:27:45,650\nThere's only so many subnetting questions.\n\n523\n00:27:45,650 --> 00:27:50,090\nAnd if you did the same thing on the CCENT\nand the CCNA exam, well, it works.\n\n524\n00:27:50,090 --> 00:27:52,120\nThere's only so many subnetting questions.\n\n525\n00:27:52,120 --> 00:27:56,640\nBut by the time you get here, we're gonna\ntake a look at things like prefix lists,\n\n526\n00:27:56,640 --> 00:27:57,910\nrouting summarization.\n\n527\n00:27:57,910 --> 00:28:00,930\nThe BGP tables is a whole route filtering.\n\n528\n00:28:00,930 --> 00:28:06,610\nThey're all built upon DLSM and\nidentifying prefixes and\n\n529\n00:28:06,610 --> 00:28:09,920\nif you don't know how to do that,\nit's a big gap in your knowledge and\n\n530\n00:28:09,920 --> 00:28:12,955\nit's hard to build foundationally\non top of that if you haven't.\n\n531\n00:28:12,955 --> 00:28:15,220\nSo, now's the time to learn\nit if you haven't, right?\n\n532\n00:28:15,220 --> 00:28:16,750\nNow, if you've already seen this,\n\n533\n00:28:16,750 --> 00:28:19,190\nif nothing we showed you was new here,\nthen perfect.\n\n534\n00:28:19,190 --> 00:28:21,980\nYou're in the right spot, you've\nwhere you need to be knowledge-wise.\n\n535\n00:28:21,980 --> 00:28:23,190\nBut if any of that was confusing,\n\n536\n00:28:23,190 --> 00:28:26,600\nif you hadn't seen that before, definitely\njump over to the network plus show.\n\n537\n00:28:26,600 --> 00:28:28,810\nWe do the IPv4 super show.\n\n538\n00:28:28,810 --> 00:28:32,800\nWe break all that down, and\nyou can get a good through dousing of it.\n\n539\n00:28:32,800 --> 00:28:36,565\nBut if you're kinda on the fence,\nit comes down to practice.\n\n540\n00:28:36,565 --> 00:28:38,725\nThe more you practice with it,\nthe more you do subnetting,\n\n541\n00:28:38,725 --> 00:28:40,615\nthe better you get at it,\nso just be aware of that.\n\n542\n00:28:42,195 --> 00:28:44,435\nAll right, well, Ronnie,\nthat's probably enough on IP addressing.\n\n543\n00:28:44,435 --> 00:28:46,980\nWhat do you think?\n>> I think so, yeah, it's great review.\n\n544\n00:28:46,980 --> 00:28:49,240\nRemember, fundamentals are key.\n\n545\n00:28:49,240 --> 00:28:53,250\nLearning those fundamentals and not being\nthrown by them on the day of the exam is\n\n546\n00:28:53,250 --> 00:28:56,090\ngonna help you out cuz time\nis a big issue for the exams.\n\n547\n00:28:56,090 --> 00:28:58,690\n>> Yep.\n>> All right, well ladies and gentlemen,\n\n548\n00:28:58,690 --> 00:29:00,730\nthat's a good spot for\nus to stop and take a break.\n\n549\n00:29:00,730 --> 00:29:01,940\nWe'll pause for a breather here.\n\n550\n00:29:01,940 --> 00:29:05,670\nWhen we get back, We're gonna talk\na little bit about layer two addressing\n\n551\n00:29:05,670 --> 00:29:09,550\nbefore moving on, and we've got some\nDHCP and a couple other little nuts and\n\n552\n00:29:09,550 --> 00:29:10,650\nbolts to cover in this show.\n\n553\n00:29:10,650 --> 00:29:12,260\nSo, stay tuned.\n\n554\n00:29:12,260 --> 00:29:14,721\nWe'll be back after this.\n\n555\n00:29:14,721 --> 00:29:22,160\n[SOUND]\nAll right, welcome back everybody.\n\n556\n00:29:22,160 --> 00:29:25,230\nSo in the first segment we talked\na bit about IPv4 addressing,\n\n557\n00:29:25,230 --> 00:29:29,910\nwhich is really at layer three of\nthe old OSI model, the networking layer.\n\n558\n00:29:29,910 --> 00:29:31,910\nNow, we're going to switch\nit up a little bit and\n\n559\n00:29:31,910 --> 00:29:35,060\nstep down to layer two,\nthe data link of the OSI model.\n\n560\n00:29:35,060 --> 00:29:39,060\nWhere now we're going all the way back to\nour early network knowledge, OSI model.\n\n561\n00:29:39,060 --> 00:29:42,550\nBut what we need to do is we need to\nunderstand that when two computers\n\n562\n00:29:42,550 --> 00:29:46,510\ntalk to each other, they use the layer\nthree address that we just talked about,\n\n563\n00:29:46,510 --> 00:29:48,190\nthey use those to find each other.\n\n564\n00:29:48,190 --> 00:29:50,880\nBut at the end of the day they don't\nuse those to talk to each other.\n\n565\n00:29:50,880 --> 00:29:52,780\nThey use the layer two addressing for\nthat.\n\n566\n00:29:52,780 --> 00:29:57,020\nAnd layer two is very important because\nwhen we get to the trouble shooting,\n\n567\n00:29:57,020 --> 00:30:01,458\nespecially those of you that go on to do\nthe tshoot exam you'll see that the layer\n\n568\n00:30:01,458 --> 00:30:05,567\ntwo tools for doing discovery becomes\nreally important just to see if your\n\n569\n00:30:05,567 --> 00:30:09,233\nlines are even functioning better yet\nthe layer three side of it.\n\n570\n00:30:09,233 --> 00:30:11,912\nSo, let's talk a little bit\nabout how layer two works,\n\n571\n00:30:11,912 --> 00:30:14,780\nhow two machines even find\neach other on the network.\n\n572\n00:30:14,780 --> 00:30:18,240\n>> What we're taking a look at here\nis the protocol that we call ARP or\n\n573\n00:30:18,240 --> 00:30:20,670\naddress resolution protocol.\n\n574\n00:30:20,670 --> 00:30:24,060\nAnd what ARP allows a machine\nto be able to do is,\n\n575\n00:30:24,060 --> 00:30:27,430\nif given a layer three address\nsuch as an IP address,\n\n576\n00:30:27,430 --> 00:30:32,460\nis to be able to find the layer two\ndevice that we can send that address to.\n\n577\n00:30:32,460 --> 00:30:34,030\nSo we want to make sure that our,\n\n578\n00:30:34,030 --> 00:30:38,230\nthat we understand at least the process,\nand how that's going to end up happening.\n\n579\n00:30:38,230 --> 00:30:43,380\nSo on my machine we have a basic diagram\nof normally what would end up happening.\n\n580\n00:30:43,380 --> 00:30:46,460\nIf we were starting off with\njust a unicast address,\n\n581\n00:30:46,460 --> 00:30:50,010\nin other words source to\na destination address.\n\n582\n00:30:50,010 --> 00:30:54,130\nWell, we know what the IP\naddress is going to be, and so\n\n583\n00:30:54,130 --> 00:30:57,780\nwe normally would have that inside\nof our header on the IP addresses.\n\n584\n00:30:57,780 --> 00:31:01,170\nSo here is my source and\nhere is my destination.\n\n585\n00:31:01,170 --> 00:31:06,160\nI know what my layer two address is,\nbecause that is who I'm sending it to.\n\n586\n00:31:06,160 --> 00:31:11,360\nBut it could be that I have this process\nright here, which I don't know what the,\n\n587\n00:31:11,360 --> 00:31:17,230\nI'm gonna say it wrong, the layer two\naddress of this IP address is going to be.\n\n588\n00:31:17,230 --> 00:31:20,770\nSo we need to be able to discover that,\nand that's what ARP helps us to do.\n\n589\n00:31:20,770 --> 00:31:23,710\n>> Yeah, and if that other machine\nwas on the same network as us, right?\n\n590\n00:31:23,710 --> 00:31:26,560\nSo, in Ronnie's,\nyou've got PC01 on the left there, and\n\n591\n00:31:26,560 --> 00:31:28,980\nthe file server is on a different network.\n\n592\n00:31:28,980 --> 00:31:30,500\nYou can see there's\na router in between it.\n\n593\n00:31:30,500 --> 00:31:33,970\nThat's our first indicator, but\nalso just the different IP scheme.\n\n594\n00:31:33,970 --> 00:31:35,580\nYou've got 172.16.0 on the left.\n\n595\n00:31:35,580 --> 00:31:37,470\nYou've got 192.168.0 on the right.\n\n596\n00:31:37,470 --> 00:31:40,336\nThey're two different networks,\nbut let's pretend for\n\n597\n00:31:40,336 --> 00:31:43,683\na moment they were both right next\nto each other on the same network.\n\n598\n00:31:43,683 --> 00:31:48,329\nIf they're on the same network, PC01 would\njust send out a broadcast and say hey,\n\n599\n00:31:48,329 --> 00:31:51,930\nI'm trying to find, let's say\nthat it was the same IP whatever,\n\n600\n00:31:51,930 --> 00:31:54,877\nI'm trying to find 192.168.0.200 and\n\n601\n00:31:54,877 --> 00:31:59,145\nthe file server would hear that broadcast\nbecause it's on the same network.\n\n602\n00:31:59,145 --> 00:32:03,239\nAnd it would reply back, it would say\nhey that's me, I'm 192.168.0.200.\n\n603\n00:32:03,239 --> 00:32:06,117\nAnd when it replies,\nthe reply has the MAC address,\n\n604\n00:32:06,117 --> 00:32:09,332\nthat layer two address, for\na file server attached to it.\n\n605\n00:32:09,332 --> 00:32:12,314\nSo PC one learns it and\nadds it to its ARP table,\n\n606\n00:32:12,314 --> 00:32:15,005\nits address resolution protocol table.\n\n607\n00:32:15,005 --> 00:32:18,645\nAnd now, our cache,\ndepending on what you want to call it.\n\n608\n00:32:18,645 --> 00:32:21,452\nNow, we can do look ups\nagainst that to reach out and\n\n609\n00:32:21,452 --> 00:32:24,800\ntalk to that host on the same network,\nthat's really easy.\n\n610\n00:32:24,800 --> 00:32:26,120\nThat's going on all the time.\n\n611\n00:32:26,120 --> 00:32:29,260\nIt actually makes up a good chunk of the\nbroadcast traffic that you have on your\n\n612\n00:32:29,260 --> 00:32:31,700\nnetwork is these ARP communications.\n\n613\n00:32:31,700 --> 00:32:33,400\nBut when it's different\nnetworks like yours, Ronnie,\n\n614\n00:32:33,400 --> 00:32:34,570\nit's a different process, isn't it?\n\n615\n00:32:34,570 --> 00:32:35,200\n>> Yep.\n\n616\n00:32:35,200 --> 00:32:38,320\nSo when we have them on\ntwo separate networks.\n\n617\n00:32:38,320 --> 00:32:41,170\nNotice that there are also gonna\nbe devices in between, now,\n\n618\n00:32:41,170 --> 00:32:46,090\nwhat we're really focusing in on\nhere is gonna be the router itself.\n\n619\n00:32:46,090 --> 00:32:49,750\nEven if I were able to discover\nwhat the MAC address would be,\n\n620\n00:32:49,750 --> 00:32:52,060\nit normally is gonna be exactly\nthe way that Don described it,\n\n621\n00:32:52,060 --> 00:32:56,770\nis because a broadcast has come back\nfrom the ARP request, it has come back.\n\n622\n00:32:56,770 --> 00:32:59,350\nBut even if I were to\nissue an ARP request,\n\n623\n00:32:59,350 --> 00:33:04,670\nI would never get to the 192.168.0.200\nbecause it is a broadcast and\n\n624\n00:33:04,670 --> 00:33:07,880\nthe router is normally\nnot going to allow that.\n\n625\n00:33:07,880 --> 00:33:13,710\nSo what ends up happening here instead,\nis that it will change along the path.\n\n626\n00:33:13,710 --> 00:33:17,450\nThe router, because it's also probably\ngoing to be the default gateway for\n\n627\n00:33:17,450 --> 00:33:22,270\nthis network, it's instead going\nto tell it to send the traffic.\n\n628\n00:33:22,270 --> 00:33:23,000\nIn other words,\n\n629\n00:33:23,000 --> 00:33:28,740\nput the layer two address of the router on\nthe packet, to be forwarded to the router.\n\n630\n00:33:28,740 --> 00:33:31,920\nAnd then the router will go ahead and\ntake a look and\n\n631\n00:33:31,920 --> 00:33:35,660\nsee if it can also determine\nthe MAC address in the future.\n\n632\n00:33:35,660 --> 00:33:39,480\nSo at this point, what we are actually\ndoing is we are determining the next\n\n633\n00:33:39,480 --> 00:33:45,260\ndevice that PC1 can send to, to forward\nit along it's path to the destination.\n\n634\n00:33:45,260 --> 00:33:49,500\n>> Yeah, and a lot of operating\nsystems call that the default gateway.\n\n635\n00:33:49,500 --> 00:33:52,850\nIn CISCO land,\nwe call that the gateway of last resort.\n\n636\n00:33:52,850 --> 00:33:55,090\nYour router, your default router.\n\n637\n00:33:55,090 --> 00:33:57,250\nThis is the person you reach\nout to find another network,\n\n638\n00:33:57,250 --> 00:33:58,910\nand that's the MAC address you need.\n\n639\n00:33:58,910 --> 00:34:01,390\nAnd that way, your packet,\nwhen it hits the network, or\n\n640\n00:34:01,390 --> 00:34:04,270\nreally your frame,\nwhen it hits the network, at layer three,\n\n641\n00:34:04,270 --> 00:34:08,050\nthe source is PC01 and\nthe destination is File Server.\n\n642\n00:34:08,050 --> 00:34:13,040\nBut at layer two, the source is PC01 and\nthe destination is that router.\n\n643\n00:34:13,040 --> 00:34:16,550\nAnd then the router does its\njob to send the frame along.\n\n644\n00:34:16,550 --> 00:34:20,920\nIt encodes it or decodes it as a packet,\nto look at the layer three data\n\n645\n00:34:20,920 --> 00:34:24,640\nthen re-encodes it, builds a frame,\nand throws it on the network, right?\n\n646\n00:34:24,640 --> 00:34:27,490\nThat terminology, packet, frame, right?\n\n647\n00:34:27,490 --> 00:34:30,900\nThose are important to remember on the\nexam because when we talk about a packet,\n\n648\n00:34:30,900 --> 00:34:33,990\nwe're talking about the layer three\nheader, the layer three data.\n\n649\n00:34:33,990 --> 00:34:36,140\nWe talk about a frame, it's layer two.\n\n650\n00:34:36,140 --> 00:34:37,910\nRight, and\non the exam you'll see that terminology,\n\n651\n00:34:37,910 --> 00:34:40,020\nthey'll expect you to know that.\n\n652\n00:34:40,020 --> 00:34:43,590\nNow, the ARP process is\nconstantly occurring.\n\n653\n00:34:43,590 --> 00:34:46,100\nEvery time you talk to another\nsystem that's out there,\n\n654\n00:34:46,100 --> 00:34:49,070\nthe first time you talk to it,\nyou've got to find your layer two address.\n\n655\n00:34:49,070 --> 00:34:50,880\nAnd that goes for your routers also.\n\n656\n00:34:50,880 --> 00:34:54,900\nIt's really easy to always think of this\nin terms of the PCs but your routers and\n\n657\n00:34:54,900 --> 00:34:56,530\nswitches do the same thing.\n\n658\n00:34:56,530 --> 00:35:00,340\nSo if I had a chain of routers like\nwhat you have across the internet,\n\n659\n00:35:00,340 --> 00:35:04,390\neach one is learning the layer two\naddress of the next router in line.\n\n660\n00:35:04,390 --> 00:35:09,040\nAnd with each hop that that packet\ntakes moving across internet,\n\n661\n00:35:09,040 --> 00:35:11,900\nthe layer two header is changing for\n\n662\n00:35:11,900 --> 00:35:14,880\nevery single hop along the way as\nit moves from router to router.\n\n663\n00:35:14,880 --> 00:35:20,080\nAnd that is a constant ongoing process\nthat never really stops, right?\n\n664\n00:35:20,080 --> 00:35:22,180\n>> Yeah.\nUsually when we took a look at the CCNA\n\n665\n00:35:22,180 --> 00:35:25,930\nlevel, the only layer two address that\nwe mentioned was just the MAC address.\n\n666\n00:35:25,930 --> 00:35:30,660\nAs we get NCCMP,there are othey types\nof layer two addresses out there\n\n667\n00:35:30,660 --> 00:35:34,010\nwhich could be converted there, but\nfor right now, we'll just use that.\n\n668\n00:35:34,010 --> 00:35:35,970\nWe'll just call it a layer two address.\n\n669\n00:35:35,970 --> 00:35:36,660\nSo just remember,\n\n670\n00:35:36,660 --> 00:35:41,130\nit is that ongoing process until it hits\nthat destination network at the end.\n\n671\n00:35:41,130 --> 00:35:43,540\nThen that last device will find\n\n672\n00:35:43,540 --> 00:35:47,320\nthe destination MAC address\nalong with that IP address.\n\n673\n00:35:47,320 --> 00:35:48,680\nWhen it sends it on that device,\n\n674\n00:35:48,680 --> 00:35:53,030\nit will be able to process the layer two\nheader as well as the layer three header.\n\n675\n00:35:53,030 --> 00:35:56,230\nAnd it now knows that it has\nno other place for it to go.\n\n676\n00:35:56,230 --> 00:36:00,840\nAnd so the ARP process is by far one\nof the neatest of processes as you\n\n677\n00:36:00,840 --> 00:36:04,950\nwork through each device, and see\nthe layer two change happen along the way.\n\n678\n00:36:04,950 --> 00:36:07,510\nBut the layer three address,\nremember that should never change.\n\n679\n00:36:08,650 --> 00:36:11,590\n>> Now in the world of routers,\nit's important to remember that\n\n680\n00:36:11,590 --> 00:36:14,516\nthere are some interfaces that\ndon't have MAC addresses.\n\n681\n00:36:14,516 --> 00:36:19,760\nSerial interfaces, frame relay, MPLS.\n\n682\n00:36:19,760 --> 00:36:22,510\nA lot of times when you're\ndoing special encoding,\n\n683\n00:36:22,510 --> 00:36:26,080\nthings that replaces the layer\ntwo functionality for Ethernet.\n\n684\n00:36:26,080 --> 00:36:27,450\nYou don't have a MAC address anymore.\n\n685\n00:36:27,450 --> 00:36:29,950\nSo in frame relay,\nwe have things like a DLCI number.\n\n686\n00:36:29,950 --> 00:36:34,120\nA D-L-C-I which is a data link\ncontrol identifier connector.\n\n687\n00:36:34,120 --> 00:36:35,190\n>> Connection identifier.\n\n688\n00:36:35,190 --> 00:36:36,390\n>> Circuit.\nCircuit identifier.\n\n689\n00:36:36,390 --> 00:36:37,208\n>> Circuit identifier.\n\n690\n00:36:37,208 --> 00:36:38,300\n>> [LAUGH] I'll screw that one up.\n\n691\n00:36:38,300 --> 00:36:39,650\nAnyhow, you have a DLCI number.\n\n692\n00:36:39,650 --> 00:36:43,350\nAnd the DLCI number takes\nthe place of the MAC address.\n\n693\n00:36:43,350 --> 00:36:48,970\nIf you have, well, frame relay uses DLCIs,\nif you have just a serial interface,\n\n694\n00:36:48,970 --> 00:36:51,950\nif you're doing PPP, it might\ngenerate a fake MAC address to use.\n\n695\n00:36:51,950 --> 00:36:53,820\nThat happens with point t point protocol.\n\n696\n00:36:53,820 --> 00:36:58,340\nIf you're doing MPLS you have labels\nthat take the place of MAC addresses.\n\n697\n00:36:58,340 --> 00:37:01,370\nSo be aware that not every\ntype of connector uses that.\n\n698\n00:37:01,370 --> 00:37:03,750\nWe're really talking about\nEthernet right here.\n\n699\n00:37:03,750 --> 00:37:06,330\nEthernet communications over fiber or\ncopper, or\n\n700\n00:37:06,330 --> 00:37:09,500\nwireless, all use MAC addresses for\nthat communication.\n\n701\n00:37:09,500 --> 00:37:12,170\nIt's a real important piece\nof that communication.\n\n702\n00:37:13,650 --> 00:37:15,870\nSo definitely keep that in mind.\n\n703\n00:37:15,870 --> 00:37:18,980\nNow, if we want to see some\nof this stuff in action,\n\n704\n00:37:18,980 --> 00:37:21,500\nlet me just do a quick test here.\n\n705\n00:37:21,500 --> 00:37:24,010\nI'll bring up some routers real quick.\n\n706\n00:37:24,010 --> 00:37:24,910\nHere we go, all right.\n\n707\n00:37:24,910 --> 00:37:27,720\nSo I've got some routers pulled\nup here on my system and\n\n708\n00:37:27,720 --> 00:37:30,290\nI've got a router called headquarters.\n\n709\n00:37:30,290 --> 00:37:33,840\nAnd it has an Ethernet interface,\nthis E0/0,\n\n710\n00:37:33,840 --> 00:37:36,360\nthat connects it to another\nrouter called branch one.\n\n711\n00:37:36,360 --> 00:37:41,320\nSo headquarters is connected to branch\none over straight Ethernet interface, and\n\n712\n00:37:41,320 --> 00:37:42,710\non headquarters,\n\n713\n00:37:42,710 --> 00:37:46,590\nif I do a show IP interface brief,\nI can see E0/0 is 192.168.0.1,right?\n\n714\n00:37:46,590 --> 00:37:50,359\nThat's my address.\n\n715\n00:37:50,359 --> 00:37:55,519\nAnd if I take a look at branch one and\ndo the same thing,\n\n716\n00:37:55,519 --> 00:38:01,401\nI can see that E0/0 is 192.168.0.2, right?\n\n717\n00:38:01,401 --> 00:38:04,340\nSo, .1 and .2,\nthey're on the same network,\n\n718\n00:38:04,340 --> 00:38:06,120\nor I haven't verified the subnet mask.\n\n719\n00:38:06,120 --> 00:38:08,040\nBut they should be on the same network.\n\n720\n00:38:08,040 --> 00:38:10,690\nSo they should be able to\ntalk to each other just fine.\n\n721\n00:38:10,690 --> 00:38:14,030\nNow, if they've never communicated before,\n\n722\n00:38:14,030 --> 00:38:17,860\nthen I'll have to do an ARP broadcast\nto be able to find the other person.\n\n723\n00:38:17,860 --> 00:38:20,730\nBut that's normally already happened,\nright?\n\n724\n00:38:20,730 --> 00:38:24,480\nBecause most Cisco routers,\nlet's do quiz time here, right Ronnie?\n\n725\n00:38:24,480 --> 00:38:28,500\nIf I take just two Cisco routers out\nof the box and I plug a crossover\n\n726\n00:38:28,500 --> 00:38:31,430\ncable in between them, assuming\nthe interfaces aren't shut down, right?\n\n727\n00:38:31,430 --> 00:38:33,800\nCause some routers ship with\nthe interfaces shut down.\n\n728\n00:38:33,800 --> 00:38:38,300\nAssuming the interfaces are up,\neven if I don't configure an IP address,\n\n729\n00:38:38,300 --> 00:38:41,160\nthere's something running that lets\nthose routers talk to each other,\n\n730\n00:38:41,160 --> 00:38:44,120\ndo you guys remember what\nthat is out there in TV land?\n\n731\n00:38:44,120 --> 00:38:45,990\nWell, CISCO discovery protocol.\n\n732\n00:38:45,990 --> 00:38:47,955\nCDP, all right.\n\n733\n00:38:47,955 --> 00:38:49,915\nCDP let's the routers discover each other.\n\n734\n00:38:49,915 --> 00:38:54,435\nIt's running automatically, so typically,\nthey have already found each other.\n\n735\n00:38:54,435 --> 00:38:58,335\nOr even if not, Cisco could maybe LLDP\nhas kicked in and discovered them,\n\n736\n00:38:58,335 --> 00:39:00,290\nor maybe nothing has.\n\n737\n00:39:00,290 --> 00:39:02,550\nIf nothing has, then yeah,\nit's not gonna show up in my list here.\n\n738\n00:39:02,550 --> 00:39:04,420\nI will not detect that person, and\n\n739\n00:39:04,420 --> 00:39:08,050\nthe first time I communicate,\nthe ARP broadcast is going have happened.\n\n740\n00:39:08,050 --> 00:39:11,400\nAll right, now, how do I know\nif it's already happened or not?\n\n741\n00:39:11,400 --> 00:39:13,330\nWell, I can look at my ARP table,\nall right?\n\n742\n00:39:13,330 --> 00:39:17,450\nYou've got a show arp, and\nif you do a show arp?, you could see\n\n743\n00:39:17,450 --> 00:39:21,310\nwhere you can pull a record for a specific\nMAC address, if you know what it is.\n\n744\n00:39:21,310 --> 00:39:22,760\nI usually don't.\n\n745\n00:39:22,760 --> 00:39:25,550\nAnd so you can then specify\nparticular interfaces.\n\n746\n00:39:25,550 --> 00:39:29,800\nI wanna see the ARP information for\nthis interface or that interface,\n\n747\n00:39:29,800 --> 00:39:32,280\nor whatever, or you can just press Enter.\n\n748\n00:39:32,280 --> 00:39:33,580\nShow ARP.\n\n749\n00:39:33,580 --> 00:39:36,930\nAnd when you run that\nyou'll get your ARP cache.\n\n750\n00:39:36,930 --> 00:39:39,880\nHere's that table,\nthe ARP table that I was talking about.\n\n751\n00:39:39,880 --> 00:39:42,320\nIt's a list of IP addresses and\n\n752\n00:39:42,320 --> 00:39:46,550\nthe associated MAC addresses that go\nalong with them, and who you've learned.\n\n753\n00:39:46,550 --> 00:39:49,150\nAnd so here I am on branch\none which is 192.168.2.0,\n\n754\n00:39:49,150 --> 00:39:53,660\nit knows its own address, right?\n\n755\n00:39:53,660 --> 00:39:55,690\nAnd there's nobody else in here, right?\n\n756\n00:39:55,690 --> 00:39:58,290\nWell, I mean, these other addresses\nwhich are all branch one.\n\n757\n00:39:58,290 --> 00:40:00,680\nBranch one really just knows about itself,\nright?\n\n758\n00:40:00,680 --> 00:40:04,350\nWhich means I might have CDP turned off or\nCDP might not have run yet.\n\n759\n00:40:04,350 --> 00:40:05,380\nI don't know.\n\n760\n00:40:05,380 --> 00:40:08,732\nBut once something makes it into the ARP\ncache, it stays in here for a certain age.\n\n761\n00:40:08,732 --> 00:40:11,426\nWe'll only remember for\na certain amount of time.\n\n762\n00:40:11,426 --> 00:40:15,472\nAnd if enough time goes by, where we're\nnot talking to them, it ages out.\n\n763\n00:40:15,472 --> 00:40:18,661\nAnd that way, if you do something\nlike replace a network card or\n\n764\n00:40:18,661 --> 00:40:22,650\nmove them from one jack to another,\nwe'll just relearn their new positions.\n\n765\n00:40:23,960 --> 00:40:27,275\nNow, if I do a quick\nping out to another host.\n\n766\n00:40:27,275 --> 00:40:30,290\nLike if I try and\nping to the headquarters router.\n\n767\n00:40:30,290 --> 00:40:34,690\nWhen I did that ping,\nnotice how the first ping failed, and\n\n768\n00:40:34,690 --> 00:40:36,950\nthen the other four pings\nwent through just fine.\n\n769\n00:40:36,950 --> 00:40:41,450\nAnd if I repeat that, all five of\nthem were successful this time.\n\n770\n00:40:41,450 --> 00:40:42,390\nWhat was the difference?\n\n771\n00:40:42,390 --> 00:40:43,860\nWhat made that difference?\n\n772\n00:40:43,860 --> 00:40:45,870\nWhy did that first ping fail?\n\n773\n00:40:45,870 --> 00:40:47,690\nThat was the ARP lookup.\n\n774\n00:40:47,690 --> 00:40:51,540\nOn a Windows machine or a Unix machine,\nyou don't normally see that.\n\n775\n00:40:51,540 --> 00:40:55,430\nBut Cisco has the timeouts for\ntheir pings set a lot lower, and\n\n776\n00:40:55,430 --> 00:40:59,060\nit actually times out waiting for\nthat ARP lookup to happen, and so\n\n777\n00:40:59,060 --> 00:41:01,535\nthe first one failed, and\nthe other four went through.\n\n778\n00:41:01,535 --> 00:41:06,020\nAnd the second time that I ran it, all\nfive succeeded because the ARP look up was\n\n779\n00:41:06,020 --> 00:41:08,840\nalready done, it was already cached and\nit was in place.\n\n780\n00:41:08,840 --> 00:41:10,295\nNice big Ghostbusters symbol there.\n\n781\n00:41:10,295 --> 00:41:11,640\n>> [LAUGH]\n>> That was my little\n\n782\n00:41:11,640 --> 00:41:13,820\nwindow resize utility kicking in.\n\n783\n00:41:13,820 --> 00:41:17,750\nBut anyhow, that jumps in and\nnow they all succeed.\n\n784\n00:41:17,750 --> 00:41:20,550\nIt's in my ARP cache and\nif I haven't rambled on for\n\n785\n00:41:20,550 --> 00:41:22,440\ntoo long it should still be there, right?\n\n786\n00:41:22,440 --> 00:41:23,900\nI'm bad about that.\n\n787\n00:41:23,900 --> 00:41:27,210\nSo if I do a show ARP, sure enough,\n\n788\n00:41:27,210 --> 00:41:30,550\nright there I can see\n192.168.0.1 is in my ARP cache,\n\n789\n00:41:30,550 --> 00:41:34,160\nand here's the MAC address of that router\nand the interface that it's tied to.\n\n790\n00:41:34,160 --> 00:41:37,700\nIf I go out that interface I should be\nable to get to that MAC address and\n\n791\n00:41:37,700 --> 00:41:40,500\ncommunicate, all right.\n\n792\n00:41:40,500 --> 00:41:42,430\nI should, right.\n[LAUGH] It doesn't guarantee connectivity,\n\n793\n00:41:42,430 --> 00:41:44,430\njust because it's in the ARP cache, right.\n\n794\n00:41:44,430 --> 00:41:47,760\nWe might have learned this and\nhad unidirectional traffic, right.\n\n795\n00:41:47,760 --> 00:41:51,000\nMaybe we can receive, but we can't send,\nand so it's made it into our ARP cache,\n\n796\n00:41:51,000 --> 00:41:52,330\nbut we can't reply back.\n\n797\n00:41:52,330 --> 00:41:55,940\nSo just because it's in you ARP cache\ndoesn't guarantee communications.\n\n798\n00:41:55,940 --> 00:41:57,330\nBut it's a pretty good indicator, right.\n\n799\n00:41:57,330 --> 00:42:00,130\nIf it's in there,\nyou should be able to talk to it.\n\n800\n00:42:00,130 --> 00:42:03,540\nEven if the other side is\na Cisco PIX Firewall that's got\n\n801\n00:42:03,540 --> 00:42:06,840\nfull rules on blocking every\nbit of traffic I throw at them.\n\n802\n00:42:06,840 --> 00:42:09,100\nThey still have to answer\nto the ARP broadcast,\n\n803\n00:42:09,100 --> 00:42:11,220\notherwise nobody would be\nable to find the device.\n\n804\n00:42:11,220 --> 00:42:13,890\nSo I might still get\nblocked communicating, but\n\n805\n00:42:13,890 --> 00:42:18,100\nI know at layer 2 I've got a good\nconnection to that other device.\n\n806\n00:42:18,100 --> 00:42:22,610\nSo from a trouble shooting stand point\nthat's a very useful thing, all right.\n\n807\n00:42:22,610 --> 00:42:26,170\nAnd we can always clear the ARP cache\nif we want, using the clear command to\n\n808\n00:42:26,170 --> 00:42:30,960\nwipe that out, but we don't normally need\nto because entries will age out over time.\n\n809\n00:42:30,960 --> 00:42:34,530\nIf I continue to talk to that\nperson on the other side,\n\n810\n00:42:34,530 --> 00:42:36,460\nthe ARP entry will stay fresh.\n\n811\n00:42:36,460 --> 00:42:40,140\nBut if I don't, if I don't keep\ncommunicating to that address,\n\n812\n00:42:40,140 --> 00:42:41,760\nit'll get older and older.\n\n813\n00:42:41,760 --> 00:42:45,470\nAnd see I'm at two minutes already, and\nyour router will have a default age,\n\n814\n00:42:45,470 --> 00:42:47,880\nwhich I believe is five\nminutes if I remember right.\n\n815\n00:42:47,880 --> 00:42:51,460\nThat when it hits that age, if I haven't\ntalked to that router in that time.\n\n816\n00:42:51,460 --> 00:42:53,590\nLet's go ahead and\nremove it from the ARP cache and\n\n817\n00:42:53,590 --> 00:42:55,290\nI'll have to relearn it next time.\n\n818\n00:42:55,290 --> 00:42:57,080\nBut if I keep talking to it, right.\n\n819\n00:42:57,080 --> 00:43:01,180\nIf I keep sending information over to\nthat other guy, generating data, well,\n\n820\n00:43:01,180 --> 00:43:04,480\nwhen I go to the ARP cache, it's gonna\nkeep that fresh and not age it out.\n\n821\n00:43:04,480 --> 00:43:08,400\nAnd I went a little too fast there, but\nit'll keep that fresh and stop it from\n\n822\n00:43:08,400 --> 00:43:11,290\naging out, but it ensures that you always\ncommunicate with the right person.\n\n823\n00:43:12,760 --> 00:43:15,080\nSo, that's happening all the time.\n\n824\n00:43:15,080 --> 00:43:18,660\nYour switches definitely keep\ntrack of an ARP cache because\n\n825\n00:43:18,660 --> 00:43:21,150\nthey need to have their\nmanagement interface accessible.\n\n826\n00:43:21,150 --> 00:43:25,200\nEven the layer 2 switches,\nwhich just track MAC addresses not IPs.\n\n827\n00:43:25,200 --> 00:43:29,370\nThey still have an ARC cache because\nof their management interface, right.\n\n828\n00:43:29,370 --> 00:43:32,370\nOtherwise you wouldn't be able to\nconnect to the management interface.\n\n829\n00:43:32,370 --> 00:43:35,930\nLayer 3 routers definitely have it\nbecause they're matching up IPs\n\n830\n00:43:35,930 --> 00:43:38,270\nto MACs to be able to\ncommunicate that way.\n\n831\n00:43:38,270 --> 00:43:40,990\nSo, it's an important function,\nand it's pretty easy to work with.\n\n832\n00:43:42,610 --> 00:43:45,830\nAll right, so that's basically\naddress resolution protocol.\n\n833\n00:43:45,830 --> 00:43:49,980\nI guess that I didn't show the other\nside of this, which is if I jump over to\n\n834\n00:43:49,980 --> 00:43:53,268\nthe headquarter's router, and\nI look at its ARP table, right.\n\n835\n00:43:54,520 --> 00:43:56,430\nIt's going to have the other side, too.\n\n836\n00:43:57,450 --> 00:44:00,310\nI didn't initiate any communications\nwith the other side, though.\n\n837\n00:44:00,310 --> 00:44:02,420\nThat's why my age is showing empty here.\n\n838\n00:44:02,420 --> 00:44:04,000\nBut, they've been, or,\nactually, right here.\n\n839\n00:44:04,000 --> 00:44:05,750\nThis guy, three.\n\n840\n00:44:05,750 --> 00:44:08,260\nSo, dot one, that's me,\nthat one's empty, but\n\n841\n00:44:08,260 --> 00:44:10,550\ndot two,\nit's got three minutes on that age.\n\n842\n00:44:10,550 --> 00:44:11,930\nThat's me talking to them.\n\n843\n00:44:11,930 --> 00:44:15,480\nThey initiated a connection with me,\nbut I added it to the ARP table, right.\n\n844\n00:44:15,480 --> 00:44:17,240\nSo you don't have to initiate it yourself.\n\n845\n00:44:17,240 --> 00:44:19,478\nAnybody that connects to you will\nget added to your ARP cache.\n\n846\n00:44:21,671 --> 00:44:27,605\nAll right, so address resolution protocol,\npretty important, that's layer 2 stuff.\n\n847\n00:44:27,605 --> 00:44:29,625\nWhat about the in between technologies,\nRonnie?\n\n848\n00:44:29,625 --> 00:44:33,075\nWhat about things that are like in\nbetween layer 2 and layer 3 and\n\n849\n00:44:33,075 --> 00:44:35,155\nthe one I'm thinking of is DHCP.\n\n850\n00:44:35,155 --> 00:44:39,995\n>> Right, we still have to be\nable to get addresses on devices.\n\n851\n00:44:39,995 --> 00:44:43,945\nAnd a lot of times when were dealing with\nrouters we tend to only go ahead and\n\n852\n00:44:43,945 --> 00:44:49,120\nstatically assign IP addresses to\nthe router interfaces themselves.\n\n853\n00:44:49,120 --> 00:44:51,280\nBut we don't necessarily have to do that.\n\n854\n00:44:51,280 --> 00:44:56,230\nWe can still use what we call dynamic\nhost configuration protocol to help us\n\n855\n00:44:56,230 --> 00:45:00,540\nto be able to control the IP addresses\nthat we want to hand out, but\n\n856\n00:45:00,540 --> 00:45:03,300\nas well as to assign\nthem to those devices.\n\n857\n00:45:03,300 --> 00:45:07,590\nSo when we take a look at it, we're\ngonna specifically take a look at DHCP\n\n858\n00:45:07,590 --> 00:45:10,060\nservers and then we'll talk\nabout the clients a little bit.\n\n859\n00:45:10,060 --> 00:45:13,410\nAnd then even a special thing\nwe call the relay agent, too.\n\n860\n00:45:13,410 --> 00:45:16,150\n>> Yeah, for the exam they really wanna\nmake sure that you're aware of how to set\n\n861\n00:45:16,150 --> 00:45:17,780\nup a router as a DHCP server.\n\n862\n00:45:17,780 --> 00:45:20,870\nNow in real life LAN,\nyou may not choose to do that, right.\n\n863\n00:45:20,870 --> 00:45:23,470\nSmall businesses, home offices,\n\n864\n00:45:23,470 --> 00:45:26,740\nyou might use your router as\na DHCP server, but as you get into\n\n865\n00:45:26,740 --> 00:45:30,530\nlarger environments you're gonna want to\nhave a dedicated DHCP server somewhere.\n\n866\n00:45:30,530 --> 00:45:35,100\nAnd that really changes the way\nthe things function because\n\n867\n00:45:35,100 --> 00:45:36,890\nnow you got this external box.\n\n868\n00:45:36,890 --> 00:45:38,540\nAnd so\nwe need to take a look at how that works.\n\n869\n00:45:38,540 --> 00:45:40,600\nAnd if you went through the CCNA training,\n\n870\n00:45:40,600 --> 00:45:43,180\nyou already learned how to set\nup a DHCP server on a router.\n\n871\n00:45:43,180 --> 00:45:45,810\nBut we really didn't talk about relays,\nso we'll get a chance to see that here.\n\n872\n00:45:45,810 --> 00:45:51,190\nBut let's start with the basics with\njust setting up a DHCP server, right.\n\n873\n00:45:51,190 --> 00:45:55,860\nSo any Cisco router can be a DHCP server,\nright, we’ve got that functionality.\n\n874\n00:45:55,860 --> 00:45:59,500\nAnd really, all a DHCP server is,\nis a database, right.\n\n875\n00:45:59,500 --> 00:46:02,860\nIt’s a database of addresses,\nor a pool of addresses.\n\n876\n00:46:02,860 --> 00:46:05,620\nAnd when somebody on the network\nboots up and doesn’t have an address,\n\n877\n00:46:05,620 --> 00:46:07,160\nthey can send out a broadcast, right.\n\n878\n00:46:07,160 --> 00:46:09,240\nSo here we get our layer 2 stuff, right.\n\n879\n00:46:09,240 --> 00:46:13,010\nThey don't have a layer 3 address so\nthey have to fall back on layer 2.\n\n880\n00:46:13,010 --> 00:46:14,930\nThey send out a great big\nbroadcast that says, hey,\n\n881\n00:46:14,930 --> 00:46:17,380\nsomebody out there, I need an IP address.\n\n882\n00:46:17,380 --> 00:46:18,530\nPlease help me.\n\n883\n00:46:18,530 --> 00:46:22,720\nAnd a DHCP server on the network will\nhear that and say, oh, I can help you.\n\n884\n00:46:22,720 --> 00:46:24,750\nAnd it'll respond with a DHCP offer.\n\n885\n00:46:24,750 --> 00:46:26,470\nThis is a whole process\nthat goes along with that.\n\n886\n00:46:26,470 --> 00:46:27,845\nAnd Ronnie, you've got a diagram for\nthis, don't you?\n\n887\n00:46:27,845 --> 00:46:30,120\n>> Yep.\nSo I just made a simple diagram for us to,\n\n888\n00:46:30,120 --> 00:46:34,020\nat least logically,\nunderstand what Don was just describing.\n\n889\n00:46:34,020 --> 00:46:37,420\nIf I have a machine that doesn't\nhave an IP address on that network.\n\n890\n00:46:37,420 --> 00:46:40,770\nAnd I have a DHCP server\nthat's also running.\n\n891\n00:46:40,770 --> 00:46:44,570\nThat particular client then is\ngoing to issue that broadcast out\n\n892\n00:46:44,570 --> 00:46:47,270\nin what we call a DHCP discovery.\n\n893\n00:46:47,270 --> 00:46:49,230\nThat is just a broadcast message out,\n\n894\n00:46:49,230 --> 00:46:53,490\nsaying I need an IP\naddress on my computer.\n\n895\n00:46:53,490 --> 00:46:58,540\nAnd the only one that really responds\nto that is gonna be the DHCP Server.\n\n896\n00:46:58,540 --> 00:47:01,370\nIt's gonna respond back with\nwhat they call an offer.\n\n897\n00:47:01,370 --> 00:47:04,760\nUsually the offer includes,\nof course, the IP address.\n\n898\n00:47:04,760 --> 00:47:08,140\nUsually a default router or\ngateway of some sort.\n\n899\n00:47:08,140 --> 00:47:10,920\nMaybe even some other\noptions that we include.\n\n900\n00:47:10,920 --> 00:47:14,670\nAnd at that point,\nthe client will be able to receive that.\n\n901\n00:47:14,670 --> 00:47:19,180\nAnd when he does, he's going to tell\nthe DHCP server to mark him down for\n\n902\n00:47:19,180 --> 00:47:19,870\nthat information.\n\n903\n00:47:19,870 --> 00:47:22,170\nSo don't assign that to anybody else.\n\n904\n00:47:22,170 --> 00:47:25,510\nAnd then the server will send back,\nlastly, what we call an acknowledgement.\n\n905\n00:47:25,510 --> 00:47:27,700\nOr here officially called a DHCPACK.\n\n906\n00:47:27,700 --> 00:47:31,130\nIt will tell the client\nthat I've got this.\n\n907\n00:47:31,130 --> 00:47:33,590\nYou don't have to worry about it anymore.\n\n908\n00:47:33,590 --> 00:47:37,160\nThe nice thing about this is that it's\nnormally leased for a period of time.\n\n909\n00:47:37,160 --> 00:47:41,640\nIn other words, it's not statically set\non that machine so it holds it forever.\n\n910\n00:47:41,640 --> 00:47:44,458\nWhat will normally happen is after\nthat particular lease period,\n\n911\n00:47:44,458 --> 00:47:47,330\nit will end up being able to\ntake that information back\n\n912\n00:47:47,330 --> 00:47:49,710\nif that information's no longer\nrequired by that client.\n\n913\n00:47:51,030 --> 00:47:52,750\n>> Yep, and\nthat's the process that's happening.\n\n914\n00:47:52,750 --> 00:47:55,610\nAll four of those steps are broadcasts,\nright.\n\n915\n00:47:55,610 --> 00:47:58,970\nIt's broadcasting as it communicates\nthrough all these because that client\n\n916\n00:47:58,970 --> 00:48:02,280\ndoesn't have it's own IP address so\nit can't do unicast yet.\n\n917\n00:48:02,280 --> 00:48:05,790\nAnd when that's done,\nthen it switches over to unicast mode.\n\n918\n00:48:05,790 --> 00:48:08,730\nNow that DHCP server will\ntypically be a Unix or\n\n919\n00:48:08,730 --> 00:48:13,350\nWindows or Mac OS or whatever box\nthat's set up to be that DHCP server.\n\n920\n00:48:13,350 --> 00:48:15,290\nBut we can set it up on our router and\n\n921\n00:48:15,290 --> 00:48:17,046\nit's not even a terribly difficult thing,\nis it?\n\n922\n00:48:17,046 --> 00:48:19,059\n>> Nope.\n>> So let's say that I want to set that\n\n923\n00:48:19,059 --> 00:48:20,423\nup here on my HQ router.\n\n924\n00:48:20,423 --> 00:48:22,373\nSo here I am on headquarters and.\n\n925\n00:48:22,373 --> 00:48:27,275\nIf I look at my networks I can\nsee I've got on my E00 I've\n\n926\n00:48:27,275 --> 00:48:31,170\ngot this 192.168.0.1 network.\n\n927\n00:48:31,170 --> 00:48:31,702\nRIght?\n\n928\n00:48:31,702 --> 00:48:34,128\nWhich is just the standard class C and\n\n929\n00:48:34,128 --> 00:48:38,940\nmaybe I wanna provide DHCP addresses\non the network for my clients.\n\n930\n00:48:38,940 --> 00:48:41,130\nWell, the configuration is not a hard one.\n\n931\n00:48:41,130 --> 00:48:44,556\nThe first thing we need to do is to\ncreate that DHCP database I mentioned,\n\n932\n00:48:44,556 --> 00:48:47,715\nthat pool of address that are going\nto be available to our clients.\n\n933\n00:48:47,715 --> 00:48:51,050\nAnd then we need to tell the router to\ngo ahead and hand them out, all right?\n\n934\n00:48:51,050 --> 00:48:54,660\nSo if I want to set that up I'll\njust jump into my configuration.\n\n935\n00:48:54,660 --> 00:48:57,100\nAnd I'll start by creating the pool.\n\n936\n00:48:57,100 --> 00:48:59,580\nAnd the pool command is\npretty straightforward.\n\n937\n00:48:59,580 --> 00:49:03,320\nIt's ip dhcp pool, and\nthen you give it a name right?\n\n938\n00:49:03,320 --> 00:49:05,700\nSo I might call this the.\n\n939\n00:49:05,700 --> 00:49:07,295\nI think this is actually\nlike my Metro E network.\n\n940\n00:49:07,295 --> 00:49:13,053\nSo I'll call this my Metro_E E-Pool.\n\n941\n00:49:13,053 --> 00:49:16,680\nAll right, and my prompt changes,\nnow I'm in the pool.\n\n942\n00:49:16,680 --> 00:49:20,270\nAnd here I can define my IP\naddress ranges, my options,\n\n943\n00:49:20,270 --> 00:49:22,870\nall the other various things\nI might want to specify.\n\n944\n00:49:22,870 --> 00:49:27,782\nSo the minimum, the bare minimum is\nyou have specify a range of IPs.\n\n945\n00:49:27,782 --> 00:49:33,062\nSo I'll say 198.168.0.0.\n\n946\n00:49:33,062 --> 00:49:36,184\nThis is where it gets\na little counterintuitive.\n\n947\n00:49:36,184 --> 00:49:38,993\nI'm on the 192.168.0.0 network.\n\n948\n00:49:38,993 --> 00:49:44,360\nAnd I need to tell it my network,\nwhich is the entire network.\n\n949\n00:49:44,360 --> 00:49:46,630\nSo I just gave it the whole class C.\n\n950\n00:49:46,630 --> 00:49:50,240\nI'll have to go and do some exclusions\nin a minute to make sure that I don't\n\n951\n00:49:50,240 --> 00:49:53,800\nissue out IPs that I'm using statically,\nespecially my own.\n\n952\n00:49:53,800 --> 00:49:55,280\nSo, we'll have to change that.\n\n953\n00:49:55,280 --> 00:49:57,720\nBut, you can start to specify\nother options in here too,\n\n954\n00:49:57,720 --> 00:49:59,910\nlike default router is a big one.\n\n955\n00:49:59,910 --> 00:50:03,760\nSo, I might want people to default to\ncoming to me as the default router.\n\n956\n00:50:03,760 --> 00:50:05,960\nThere's other ones you'll see,\nlike if I do my question mark here,\n\n957\n00:50:05,960 --> 00:50:10,090\nyou'll see things like your name servers,\nyour DNS servers.\n\n958\n00:50:10,090 --> 00:50:11,660\nIf you want to hand those out.\n\n959\n00:50:11,660 --> 00:50:15,670\nOther options, if you want raw DHCP\noptions, like maybe you have voice over IP\n\n960\n00:50:15,670 --> 00:50:19,260\nstuff, so you need to do option 66,\nor some of those other guys.\n\n961\n00:50:19,260 --> 00:50:21,210\nYou can specify them,\nand provide them too.\n\n962\n00:50:21,210 --> 00:50:23,900\nSo it's really a fully\nfunctional DHCP server,\n\n963\n00:50:23,900 --> 00:50:25,219\nit can do everything that you need.\n\n964\n00:50:26,940 --> 00:50:29,470\nHere, I'll go ahead and specify DNS\nserver just for the heck of it.\n\n965\n00:50:30,710 --> 00:50:33,100\nWe'll go ahead and\nhand out like Google's and there we go.\n\n966\n00:50:33,100 --> 00:50:36,598\nI've got a couple of\noptions that are in place.\n\n967\n00:50:36,598 --> 00:50:40,437\nIf I were to stop here,\nit's the pool, it's created,\n\n968\n00:50:40,437 --> 00:50:43,250\nit's got the settings that I need.\n\n969\n00:50:43,250 --> 00:50:46,562\nBut I need to add the exclusions and this\nis the part that it's so counterintuitive\n\n970\n00:50:46,562 --> 00:50:49,641\nin my opinion because you don't actually\ndo it from inside the pool itself.\n\n971\n00:50:49,641 --> 00:50:54,160\nYou have to get out of the pool and\nyou do it out here.\n\n972\n00:50:54,160 --> 00:50:56,576\nSo when you take a look at IP?\n\n973\n00:50:56,576 --> 00:50:59,030\nYou'll see you've got\na handful of commands in here.\n\n974\n00:50:59,030 --> 00:51:00,800\nLet's see if i can find them right here.\n\n975\n00:51:00,800 --> 00:51:03,990\nFor the DHCP server we can\nspecify server parameters.\n\n976\n00:51:03,990 --> 00:51:08,040\nAnd we can go in and\nstart to set up exclusions based on that.\n\n977\n00:51:08,040 --> 00:51:11,046\nAnd you've also got your\nregular DHCP configurations.\n\n978\n00:51:11,046 --> 00:51:12,400\nActually, I think it's under that one,\nisn't it?\n\n979\n00:51:12,400 --> 00:51:13,444\n>> It is, yep.\n\n980\n00:51:13,444 --> 00:51:16,777\n>> So it's IP DHCP excluded-address.\n\n981\n00:51:16,777 --> 00:51:17,682\n>> There we go, and\n\n982\n00:51:17,682 --> 00:51:21,390\nso now I can go through and\nI can start to exclude the address ranges.\n\n983\n00:51:21,390 --> 00:51:27,363\nSo, maybe I just want to give\nout 192.168.0.100 through 150.\n\n984\n00:51:27,363 --> 00:51:32,386\nSo I would need to exclude 192.168.0.1\n\n985\n00:51:32,386 --> 00:51:36,360\nthrough 192.168.0.99 and\n\n986\n00:51:36,360 --> 00:51:43,734\nthen I would need to exclude 151\nall the way through 254, all right.\n\n987\n00:51:43,734 --> 00:51:46,910\nSo I'm putting in those exclusions.\n\n988\n00:51:46,910 --> 00:51:52,658\nNow, although my pool was the whole\nclass C now it's just 100 through 150,\n\n989\n00:51:52,658 --> 00:51:53,499\nall right.\n\n990\n00:51:53,499 --> 00:51:55,099\nLittle bit weird, and here,\n\n991\n00:51:55,099 --> 00:51:58,430\nlet's look at what that\nconfiguration actually looks like.\n\n992\n00:51:59,590 --> 00:52:03,664\nSo if I pull up my configuration,\nhere's the pool that I defined.\n\n993\n00:52:03,664 --> 00:52:09,110\nI defined the entire 192.168.0 network as\nwell as the default router and DNS server.\n\n994\n00:52:09,110 --> 00:52:11,077\nHere's the exclusion, whoops.\n\n995\n00:52:11,077 --> 00:52:13,720\nOh great, now I'm gonna drag\nthis thing somewhere crazy.\n\n996\n00:52:13,720 --> 00:52:17,625\nHere's the exclusions that\nare outside of the pool.\n\n997\n00:52:17,625 --> 00:52:18,704\nSo a little bit weird.\n\n998\n00:52:18,704 --> 00:52:22,680\nIf you create 10 or 20 pools,\nall the exclusions get lumped together.\n\n999\n00:52:22,680 --> 00:52:25,710\nIt becomes pretty hard to read, but\nthat's the way that it logs it.\n\n1000\n00:52:27,110 --> 00:52:31,869\nAll right, so once I've got that in there,\nI'm a DHCP server.\n\n1001\n00:52:31,869 --> 00:52:33,398\nIt's actually running right now.\n\n1002\n00:52:33,398 --> 00:52:34,581\nI am a DHCP server.\n\n1003\n00:52:34,581 --> 00:52:40,138\nIf I get any requests on the 192.168.0\nnetwork, I'll answer, all right?\n\n1004\n00:52:40,138 --> 00:52:42,495\nLet's test that out.\n\n1005\n00:52:42,495 --> 00:52:48,354\nI'm just gonna jump over to my branch one,\nand, if I do a show run interface E00,\n\n1006\n00:52:48,354 --> 00:52:53,581\nI've got a static IP address assigned\non that interface right now right.\n\n1007\n00:52:53,581 --> 00:52:56,554\nBut if I jump into that interface,\nand I'll do a no IP address, so\n\n1008\n00:52:56,554 --> 00:52:57,810\nI'll just get rid of that.\n\n1009\n00:52:57,810 --> 00:53:03,250\nAnd then I'll say IP address DHCP,\nand that says go out and\n\n1010\n00:53:03,250 --> 00:53:07,011\nrequest an address for me, all right?\n\n1011\n00:53:07,011 --> 00:53:12,880\nAnd it should have already gotten it,\nbut I will do a show IP interface brief.\n\n1012\n00:53:12,880 --> 00:53:14,960\nAnd it hasn't yet, whoop, there it goes.\n\n1013\n00:53:14,960 --> 00:53:17,990\nI just got my little status message,\nlet me move that up on my screen.\n\n1014\n00:53:17,990 --> 00:53:21,085\nINC, interface e00\nassigned a DHCP address.\n\n1015\n00:53:21,085 --> 00:53:27,512\nIt got 192.168.0.100, and its hostname\nis VR1, which I kind of already knew.\n\n1016\n00:53:27,512 --> 00:53:30,288\nAnd if I do a show IP interface brief now,\n\n1017\n00:53:30,288 --> 00:53:35,859\nI can see it got 192.168.0.100,\nand its source was DHCP, right?\n\n1018\n00:53:35,859 --> 00:53:39,170\nI'm now getting a DHCP address\nfrom that home router.\n\n1019\n00:53:40,280 --> 00:53:42,100\nPretty easy to set up a DHCP server.\n\n1020\n00:53:42,100 --> 00:53:43,150\nNot a giant challenge there.\n\n1021\n00:53:44,950 --> 00:53:48,080\nBut we're not normally gonna set it\nup on a router like this, are we?\n\n1022\n00:53:48,080 --> 00:53:50,610\nWe're normally gonna have it\nrunning on a server somewhere.\n\n1023\n00:53:50,610 --> 00:53:54,070\nAnd so there's some extra complexities\nwhen we get involved in a situation like\n\n1024\n00:53:54,070 --> 00:53:55,720\nthat, that we want to tackle.\n\n1025\n00:53:55,720 --> 00:53:58,120\nBut looking at the clock we're\nshort on time in this segment.\n\n1026\n00:53:58,120 --> 00:53:59,770\nSo let's stop here and take a break, and\n\n1027\n00:53:59,770 --> 00:54:02,730\nwhen we get back,\nwe're gonna take a look at handling DHCP\n\n1028\n00:54:02,730 --> 00:54:05,690\nwhen it's hosted on an external server;\nwhich is a lot more real world.\n\n1029\n00:54:05,690 --> 00:54:07,941\nSo stay tuned,\nwe'll be back in just a few.\n\n1030\n00:54:07,941 --> 00:54:14,828\n[MUSIC]\n\n1031\n00:54:14,828 --> 00:54:16,820\nAll right, welcome back everybody.\n\n1032\n00:54:16,820 --> 00:54:21,280\nSo now we're gonna shift gears from\ntextbook land to real world land.\n\n1033\n00:54:21,280 --> 00:54:25,190\nIn the real world, you're not gonna\nuse your router as a DHCP server and\n\n1034\n00:54:25,190 --> 00:54:27,570\nthere's a few reasons for that, right?\n\n1035\n00:54:27,570 --> 00:54:28,660\nReason number one,\n\n1036\n00:54:28,660 --> 00:54:31,250\nit's not exactly the easiest thing\nto work with in the world, right?\n\n1037\n00:54:31,250 --> 00:54:33,330\nThe command line interface and all that.\n\n1038\n00:54:33,330 --> 00:54:37,070\nReason number two, if you ever reboot your\nrouter, all the leases get wiped out and\n\n1039\n00:54:37,070 --> 00:54:38,600\nit starts with a fresh and empty database.\n\n1040\n00:54:38,600 --> 00:54:41,230\nIt doesn't save the database\nto flash by default.\n\n1041\n00:54:41,230 --> 00:54:42,750\nAnd you can make it do that,\n\n1042\n00:54:42,750 --> 00:54:46,200\nbut your router typically doesn't have\na ton of extra room on it for it.\n\n1043\n00:54:46,200 --> 00:54:49,690\nSo it doesn't make a great\nplace to have your DHCP server.\n\n1044\n00:54:49,690 --> 00:54:53,100\nI guess a third reason would be that your\nrouter's normally outside of your firewall\n\n1045\n00:54:53,100 --> 00:54:55,560\ntoo, so\nthat might another reason not to do it.\n\n1046\n00:54:55,560 --> 00:55:00,550\nBut instead you will likely have a server\nsomewhere that's running Linux or\n\n1047\n00:55:00,550 --> 00:55:04,830\nWindows or whatever that's acting as\nthe DHCP server for your network.\n\n1048\n00:55:04,830 --> 00:55:09,830\nNow if you just have one subnet then\nthere's nothing to do on the router right?\n\n1049\n00:55:09,830 --> 00:55:12,260\nA client sends out a broadcast that says,\nhey I need an address,\n\n1050\n00:55:12,260 --> 00:55:14,381\nthe DHCP server is right there,\nthey get their answer.\n\n1051\n00:55:14,381 --> 00:55:18,400\nAnd they're in business but what if\nwe have more than one subnet Ronnie?\n\n1052\n00:55:18,400 --> 00:55:19,604\nWhat happens then?\n\n1053\n00:55:19,604 --> 00:55:22,172\n>> When we have more than one subnet and\nwe still want to\n\n1054\n00:55:22,172 --> 00:55:26,850\nuse the DHCP server we're going to have to\nset up what we call a DHCP relay agent.\n\n1055\n00:55:26,850 --> 00:55:32,003\nOn my laptop we have a very simple diagram\nfor us to follow and take a look here.\n\n1056\n00:55:32,003 --> 00:55:36,811\nSo what we were talking about earlier with\nthe DHCP server when we're on the same\n\n1057\n00:55:36,811 --> 00:55:41,044\nsubnet, fairly easy to see,\nall these other computers that are set to\n\n1058\n00:55:41,044 --> 00:55:45,940\nautomatically obtain their IP\naddresses will get their IP addresses.\n\n1059\n00:55:45,940 --> 00:55:50,420\nBut what if I had this other network\nover here on the right hand side.\n\n1060\n00:55:50,420 --> 00:55:52,610\nAnd let's say that there were\nhundreds of devices, but\n\n1061\n00:55:52,610 --> 00:55:56,040\nI didn't have a DHCP\nserver set up over here.\n\n1062\n00:55:56,040 --> 00:55:58,441\nWell, because it's actually\nin a different network,\n\n1063\n00:55:58,441 --> 00:56:00,543\nthere's probably gonna\nbe a router in between.\n\n1064\n00:56:00,543 --> 00:56:05,326\nAnd what we want to do is be able to\nconfigure the router to accept those\n\n1065\n00:56:05,326 --> 00:56:10,710\nDHCP offers and then translate them\ninto a unicast over to DHCP server.\n\n1066\n00:56:10,710 --> 00:56:13,880\nTo be able to actually allow\nthe DHCP to go through.\n\n1067\n00:56:13,880 --> 00:56:14,864\n>> Yeah that's a key component there.\n\n1068\n00:56:14,864 --> 00:56:18,834\nRemember when Ronnie was showing the four\nsteps of the DHCP request process,\n\n1069\n00:56:18,834 --> 00:56:19,453\nthat DORA.\n\n1070\n00:56:19,453 --> 00:56:20,578\nThere we go.\n\n1071\n00:56:20,578 --> 00:56:22,669\nAll of those are broadcasts, all right.\n\n1072\n00:56:22,669 --> 00:56:26,080\nRouters do not forward\nbroadcasts by default.\n\n1073\n00:56:26,080 --> 00:56:28,230\nYour broadcasts get cut off at the router.\n\n1074\n00:56:28,230 --> 00:56:31,435\nThe router is the boundary for\nyour broadcast domain.\n\n1075\n00:56:31,435 --> 00:56:34,825\nSo, the DHCP request will not pass\nthrough that router by default, so\n\n1076\n00:56:34,825 --> 00:56:37,050\nwe go back to your other diagram.\n\n1077\n00:56:37,050 --> 00:56:40,040\nIf I'm that client computer\nall the way on the left there,\n\n1078\n00:56:40,040 --> 00:56:41,900\nmy broadcast passes through that switch,\n\n1079\n00:56:41,900 --> 00:56:46,140\nit goes to interface e0/1 on the router,\nand then it dies, right?\n\n1080\n00:56:46,140 --> 00:56:47,820\nIt never gets anywhere.\n\n1081\n00:56:47,820 --> 00:56:53,761\nSo you can tell the router to act like\na proxy, to catch that broadcast,\n\n1082\n00:56:53,761 --> 00:57:00,309\nconvert it to a unicast, and send it\ndirectly to a DHCP server somewhere else.\n\n1083\n00:57:00,309 --> 00:57:04,680\nThe DHCP server somewhere else\nwill reply back as a unicast.\n\n1084\n00:57:04,680 --> 00:57:08,150\nYour router will then convert\nit back to a broadcast again,\n\n1085\n00:57:08,150 --> 00:57:11,480\nand throw it out on that network\non the left side as a broadcast.\n\n1086\n00:57:11,480 --> 00:57:13,910\nSo the router is really doing two things.\n\n1087\n00:57:13,910 --> 00:57:16,040\nOne, it's converting from\nbroadcast to unicast.\n\n1088\n00:57:16,040 --> 00:57:21,026\nAnd two, it's redirecting it to a DHCP\nserver that's in the known address\n\n1089\n00:57:21,026 --> 00:57:24,523\nsomewhere else,\nit's really cool stuff, right?\n\n1090\n00:57:24,523 --> 00:57:28,631\nThere's different names for\nthis technology, it's called, well,\n\n1091\n00:57:28,631 --> 00:57:32,053\nthe official name if you go and\npull like the I333 specs or\n\n1092\n00:57:32,053 --> 00:57:34,625\nwhatever is is that it's a DHCP relay.\n\n1093\n00:57:34,625 --> 00:57:37,955\nWe're relaying the communication\nfrom left to right.\n\n1094\n00:57:37,955 --> 00:57:41,735\nAnd if you hear about this in the Windows\nworld, they call it a DHCP relay agent.\n\n1095\n00:57:41,735 --> 00:57:42,795\nIn Cisco land,\n\n1096\n00:57:42,795 --> 00:57:47,165\nwe call it an IP helper address which\nis what Ronnie just wrote up there.\n\n1097\n00:57:47,165 --> 00:57:48,115\nThe helper address.\n\n1098\n00:57:48,115 --> 00:57:51,980\nWe're saying if we get a DHCP broadcast,\nwho can help us with that?\n\n1099\n00:57:51,980 --> 00:57:53,420\nWho do we send it to?\n\n1100\n00:57:53,420 --> 00:57:54,910\nAnd we use a helper address to do it.\n\n1101\n00:57:54,910 --> 00:57:57,600\nSo in real life land,\nyou'll hear all three of those names.\n\n1102\n00:57:57,600 --> 00:58:02,020\nDHCP relay, DHCP relay agent,\nIP helper address.\n\n1103\n00:58:02,020 --> 00:58:05,140\nOn the exam, it'll typically be called\nthe helper address because well,\n\n1104\n00:58:05,140 --> 00:58:07,620\nit's the Cisco exam,\nthat's the names we wanna look for.\n\n1105\n00:58:07,620 --> 00:58:10,900\n>> Now the thing that tripped me up\nthe first time I tried to configure this\n\n1106\n00:58:10,900 --> 00:58:15,640\nis I really didn't know where to\nconfigure the IP helper address.\n\n1107\n00:58:15,640 --> 00:58:18,340\nSo I configured it on another interface\n\n1108\n00:58:18,340 --> 00:58:21,350\ninstead of the one that is facing\nthe network that needs it.\n\n1109\n00:58:21,350 --> 00:58:22,880\nAnd that doesn't work either.\n\n1110\n00:58:22,880 --> 00:58:24,360\nSo it depends on where you do it.\n\n1111\n00:58:24,360 --> 00:58:26,393\nAnd that's why I wanted to\nclearly mark it out here.\n\n1112\n00:58:26,393 --> 00:58:30,648\nThat if we do assign a helper address,\nwe want to make sure it's on the interface\n\n1113\n00:58:30,648 --> 00:58:34,420\nthat's facing The network that\nneeds the DHCP service to run.\n\n1114\n00:58:34,420 --> 00:58:38,850\nCuz that's what allows us\nthen to have that the DHCP\n\n1115\n00:58:38,850 --> 00:58:43,790\nprocess in broadcast intercepted and\nchanged to a unicast back end.\n\n1116\n00:58:43,790 --> 00:58:48,686\nIf I do it on the E0/0 it's probably\nnot gonna help me out to get\n\n1117\n00:58:48,686 --> 00:58:50,419\naddresses over here.\n\n1118\n00:58:50,419 --> 00:58:55,260\n>> Yeah, the way I remember it is that the\nIP helper address command is a listener.\n\n1119\n00:58:55,260 --> 00:58:58,990\nYou're creating a listener, so\nwhat interface do you wanna listen on for\n\n1120\n00:58:58,990 --> 00:59:00,305\nDHCP communications?\n\n1121\n00:59:00,305 --> 00:59:01,780\nCuz you might have more\nthan one interface.\n\n1122\n00:59:01,780 --> 00:59:04,040\nYou might have subinterfaces,\nso you'll have many,\n\n1123\n00:59:04,040 --> 00:59:05,550\nmany different helper addresses.\n\n1124\n00:59:05,550 --> 00:59:07,470\nWhere you really see this\nas in a layer three switch.\n\n1125\n00:59:07,470 --> 00:59:10,590\nIf you have a layer three\nswitch with 20 VLANs..\n\n1126\n00:59:10,590 --> 00:59:15,490\nAnd you want to have one DHCP\nserver that services all 20 VLANs.\n\n1127\n00:59:15,490 --> 00:59:18,450\nSo in each VLAN you do a helper address.\n\n1128\n00:59:18,450 --> 00:59:19,880\nAnd you say all right, if I get broadcast,\n\n1129\n00:59:19,880 --> 00:59:23,620\nif I get these DHCP requests on VLAN\nnumber 10, or VLAN number 11, or\n\n1130\n00:59:23,620 --> 00:59:29,440\nVLAN number 12, receive the request and\nsend it to the DHCP servers in unicast.\n\n1131\n00:59:29,440 --> 00:59:34,260\nNow, if I have more than one helper\naddress, how does it know which network\n\n1132\n00:59:34,260 --> 00:59:37,170\nto assign to the client,\nto the person that's connecting?\n\n1133\n00:59:37,170 --> 00:59:38,410\nHow does it know?\n\n1134\n00:59:38,410 --> 00:59:42,810\nWell, when it converts it from\na broadcast to a unicast,\n\n1135\n00:59:42,810 --> 00:59:48,090\nthe router will tack on to that\npacket what network it came from.\n\n1136\n00:59:48,090 --> 00:59:52,643\nSo it'll say, hey, I just gotta\nbroadcast on my 192.168.0 network.\n\n1137\n00:59:52,643 --> 00:59:55,496\nAnd then it'll send it to the DHCP\nserver with that little flag on it.\n\n1138\n00:59:55,496 --> 01:00:01,072\nAnd the DHCP server will look at it and\nsay, okay, this originated from 192.168.0,\n\n1139\n01:00:01,072 --> 01:00:04,680\nlet me see if I have a pool\nthat matches that network.\n\n1140\n01:00:04,680 --> 01:00:06,890\nAnd if it has a pool\nthat matches the network,\n\n1141\n01:00:06,890 --> 01:00:09,590\nit will assign an IP from\nthe appropriate pool.\n\n1142\n01:00:09,590 --> 01:00:10,700\nIt's really awesome.\n\n1143\n01:00:10,700 --> 01:00:12,630\nThe DHCP server does that built-in.\n\n1144\n01:00:12,630 --> 01:00:18,340\nSo you can have one DHCP server\nthat services many, many networks.\n\n1145\n01:00:18,340 --> 01:00:23,140\nNow that works out great for\nLANs, for Local Area Networks.\n\n1146\n01:00:23,140 --> 01:00:26,273\nOn a WAN you can do it but\nit's not so great, right?\n\n1147\n01:00:26,273 --> 01:00:27,820\nHere's the reason.\n\n1148\n01:00:27,820 --> 01:00:32,600\nLet's say I have a headquarters and I have\n500 branches spread across Canada, right?\n\n1149\n01:00:32,600 --> 01:00:33,836\nWe're going Canadian today, Ronnie.\n\n1150\n01:00:33,836 --> 01:00:34,356\n>> Sounds good.\n\n1151\n01:00:34,356 --> 01:00:36,051\n>> So this is what it's all aboot.\n\n1152\n01:00:36,051 --> 01:00:39,054\n>> [LAUGH]\n>> So we have 500 branches spread across\n\n1153\n01:00:39,054 --> 01:00:43,389\nCanada and my headquarters,\nI set up a massive DHCP server.\n\n1154\n01:00:43,389 --> 01:00:44,411\nI'm like, this is gonna be awesome.\n\n1155\n01:00:44,411 --> 01:00:47,455\nI'm gonna do a clusterered DHCP server,\nhigh redundancy and\n\n1156\n01:00:47,455 --> 01:00:50,770\nall that right there in my headquarters,\nall right?\n\n1157\n01:00:50,770 --> 01:00:53,730\nWell, if I'm out at branch number 312,\n\n1158\n01:00:53,730 --> 01:00:57,520\nand I generate a DHCP request,\nright, a broadcast.\n\n1159\n01:00:57,520 --> 01:00:58,840\nThe router catches it.\n\n1160\n01:00:58,840 --> 01:01:02,441\nThe helper address sees it, forwards it\nalong to headquarters, we get an address.\n\n1161\n01:01:02,441 --> 01:01:07,020\nBut if branch 312's Internet\nconnection goes down, what happens?\n\n1162\n01:01:07,020 --> 01:01:10,446\nNow they can't get the DHCP server so\nit doesn't matter that they have\n\n1163\n01:01:10,446 --> 01:01:14,490\na helper address because they can't\nreach the DHCP server anymore.\n\n1164\n01:01:14,490 --> 01:01:17,350\nNow when their leases run out\nthey lose their addresses and\n\n1165\n01:01:17,350 --> 01:01:22,050\ncommunications break down, so\nit's not so ideal in that scenario.\n\n1166\n01:01:22,050 --> 01:01:25,849\nWhile you certainly can do it,\nit's not really worth it.\n\n1167\n01:01:25,849 --> 01:01:27,993\nBut if you have a headquarters, and\n\n1168\n01:01:27,993 --> 01:01:32,714\nyou've got 20 different VLANs at\nthe headquarters, it's nice to be able to\n\n1169\n01:01:32,714 --> 01:01:36,882\nhave one DHCP server that handles\nall 20 VLANs and not divide it up.\n\n1170\n01:01:36,882 --> 01:01:40,118\nSo that's where we really see\nthis the most heavily, all right.\n\n1171\n01:01:40,118 --> 01:01:43,200\nAnd in those cases, if you're doing this\non a layer three switch, you'd apply\n\n1172\n01:01:43,200 --> 01:01:47,640\nthe helper address to the virtual\ninterface for the LAN, so the VLAN.\n\n1173\n01:01:47,640 --> 01:01:51,863\nSo you'd go into interface VLAN 12 or\ninterface VLAN 13.\n\n1174\n01:01:51,863 --> 01:01:54,900\nIf you're doing it on a physical\ninterface, it's the same thing.\n\n1175\n01:01:54,900 --> 01:01:57,444\nYou would just go into interface E0/1.\n\n1176\n01:01:57,444 --> 01:01:58,870\nAnd you would enter in the helper-address.\n\n1177\n01:01:58,870 --> 01:02:00,028\nLet me show you what it looks like.\n\n1178\n01:02:00,028 --> 01:02:03,802\nHere on my headquarters machine, if I get\ninto, well, I gotta get into config first,\n\n1179\n01:02:03,802 --> 01:02:05,960\nI guess that'll make a difference.\n\n1180\n01:02:05,960 --> 01:02:10,741\nAnd if I get into e0/0, now I'm in that\ninterface and in like in Ronnie's diagram,\n\n1181\n01:02:10,741 --> 01:02:13,178\nI'm gonna apply that IP helper-address.\n\n1182\n01:02:13,178 --> 01:02:16,751\nAnd it's just IP helper-address.\n\n1183\n01:02:16,751 --> 01:02:20,480\nAnd then the IP address\nof the DHCP server.\n\n1184\n01:02:20,480 --> 01:02:22,130\nNow I am a DHCP server.\n\n1185\n01:02:22,130 --> 01:02:25,510\nYou'd never do a helper address to\nyourself because you list it and\n\n1186\n01:02:25,510 --> 01:02:26,400\nyou get it.\n\n1187\n01:02:26,400 --> 01:02:31,060\nSo I need to specify the IP address\nof a DHCP server somewhere else.\n\n1188\n01:02:31,060 --> 01:02:34,880\nSo I'm listening on\nthis 192.168.0 network.\n\n1189\n01:02:34,880 --> 01:02:40,010\nBut the DHCP server might be on\na completely unrelated network.\n\n1190\n01:02:40,010 --> 01:02:45,770\nAnd so I point to the individual\nIP address of that DHCP server.\n\n1191\n01:02:45,770 --> 01:02:47,280\nAnd we punch it in.\n\n1192\n01:02:47,280 --> 01:02:53,120\nNow any DHCP request that I get on E0/0,\nI'm going to receive it.\n\n1193\n01:02:53,120 --> 01:02:55,370\nI'm gonna turn it into a unicast, and\n\n1194\n01:02:55,370 --> 01:02:59,535\nI'm gonna send it to 172.16.0.120, and\nhopefully, there's a DHCP server there,\n\n1195\n01:02:59,535 --> 01:03:02,680\ncuz if there isn't, it's just gonna\ntrail off into nowhere, right?\n\n1196\n01:03:03,720 --> 01:03:07,090\nBut if there is, we'll connect,\nit'll issue an address, and\n\n1197\n01:03:07,090 --> 01:03:09,880\nwe'll pass it out back on.\n\n1198\n01:03:09,880 --> 01:03:13,160\nSo that's basically the way\nthose IP helper addresses work.\n\n1199\n01:03:13,160 --> 01:03:17,350\nThe only problem with the helper address,\nit's hard to see them function, right.\n\n1200\n01:03:17,350 --> 01:03:20,283\nWell, when they work, you know they\nwork because you're getting addresses on\n\n1201\n01:03:20,283 --> 01:03:22,929\nthe remote side, but it's all just\npassing right through the router.\n\n1202\n01:03:22,929 --> 01:03:26,690\nSo it's not like there's some kind of pool\nwe can query the status of to see it.\n\n1203\n01:03:26,690 --> 01:03:28,400\nIt's all just passing through.\n\n1204\n01:03:28,400 --> 01:03:29,080\nRight.\n\n1205\n01:03:29,080 --> 01:03:32,370\nSo we might need to do some additional\nthings like debug commands to\n\n1206\n01:03:32,370 --> 01:03:34,620\nactually see these things at work.\n\n1207\n01:03:34,620 --> 01:03:35,180\n>> Yeah.\n\n1208\n01:03:35,180 --> 01:03:37,240\nThe debug commands that we're\nspecifically looking at,\n\n1209\n01:03:37,240 --> 01:03:42,370\nthere's actually three of them that kind\nof show us the majority of what we need.\n\n1210\n01:03:42,370 --> 01:03:46,490\nOne is called debug IP DHCP events, and\n\n1211\n01:03:46,490 --> 01:03:51,570\nthen the other one is ip dhc actually\ndhcp server, I'm lying to you.\n\n1212\n01:03:51,570 --> 01:03:55,301\nDhcp server events.\n\n1213\n01:03:55,301 --> 01:03:55,870\n>> All right.\n\n1214\n01:03:55,870 --> 01:03:59,035\n>> And then there is ip dhcp server\n\n1215\n01:03:59,035 --> 01:04:07,650\npacket, and that will get you,\nthat will get you.\n\n1216\n01:04:07,650 --> 01:04:09,523\n>> Now packet's the one I like\nthough it can get you a flood\n\n1217\n01:04:09,523 --> 01:04:10,927\nof information if you're not careful.\n\n1218\n01:04:10,927 --> 01:04:14,567\nEvents, that's gonna show you\nmajor events like people renewing,\n\n1219\n01:04:14,567 --> 01:04:16,081\npeople getting an address.\n\n1220\n01:04:16,081 --> 01:04:18,891\nBut packet,\nthat gets right down to the nitty gritty.\n\n1221\n01:04:18,891 --> 01:04:23,731\nIf you are just a relay agent,\nyou're not gonna have a ton of events but\n\n1222\n01:04:23,731 --> 01:04:27,410\nyou will have packets as\nyou relay those across.\n\n1223\n01:04:27,410 --> 01:04:31,080\nIf you are a DHCP server\nyou'll have a ton of events.\n\n1224\n01:04:31,080 --> 01:04:33,030\nSo the two commands kind\nof go hand in hand and\n\n1225\n01:04:33,030 --> 01:04:37,840\nthose were debug IP DHCP server events and\npacket.\n\n1226\n01:04:37,840 --> 01:04:41,220\nThose were the two main debug\ncommands that we have there.\n\n1227\n01:04:41,220 --> 01:04:45,550\nAnd remember, if you're SSH in or Telneted\ninto your router, in order to see those\n\n1228\n01:04:45,550 --> 01:04:48,930\ndebugs you'll need to do a terminal\nmonitor command to see the output.\n\n1229\n01:04:48,930 --> 01:04:50,540\nI'm on the console so I don't need it.\n\n1230\n01:04:50,540 --> 01:04:53,860\nBut if you are remotely connected,\nyou'll need to do a terminal monitor or\n\n1231\n01:04:53,860 --> 01:04:55,130\njust to look at your log file.\n\n1232\n01:04:55,130 --> 01:04:56,040\nThat's where they'll end up.\n\n1233\n01:04:57,290 --> 01:05:01,580\nThere is one more if you want to\ngo super crazy on the debugging.\n\n1234\n01:05:01,580 --> 01:05:06,634\nYou can go debug DHCP detail.\n\n1235\n01:05:06,634 --> 01:05:09,055\nNo, I'm not going to run that one.\n\n1236\n01:05:09,055 --> 01:05:11,590\n>> [LAUGH]\n>> Debug DHCP detail,\n\n1237\n01:05:11,590 --> 01:05:14,520\nit gives you a lot of information.\n\n1238\n01:05:14,520 --> 01:05:17,140\nI'm on the console so\nit's actually safe for me to run it.\n\n1239\n01:05:17,140 --> 01:05:21,050\nBut if you are SSH or Telneted in\non a busy network you can get so\n\n1240\n01:05:21,050 --> 01:05:24,290\nmuch information that your terminal\nsession will get overwhelmed and\n\n1241\n01:05:24,290 --> 01:05:27,910\nyou can lock yourself out of the router.\n\n1242\n01:05:27,910 --> 01:05:30,250\nThat would be bad.\n\n1243\n01:05:30,250 --> 01:05:31,210\nBut looking at it here,\n\n1244\n01:05:31,210 --> 01:05:35,400\nI just got a message that popped up my\nDHCP demon checking for expired leases.\n\n1245\n01:05:35,400 --> 01:05:37,000\nI am a server.\n\n1246\n01:05:37,000 --> 01:05:38,730\nSo, it's running and checking for those.\n\n1247\n01:05:38,730 --> 01:05:39,800\nAll right, let's generate an event.\n\n1248\n01:05:39,800 --> 01:05:41,590\nI'm gonna go over to Branch1.\n\n1249\n01:05:41,590 --> 01:05:43,860\nBranch1 is the one we\nconfigured as a client.\n\n1250\n01:05:44,870 --> 01:05:47,750\nAnd, I'm just gonna get in to\nits interface and shut it down.\n\n1251\n01:05:50,130 --> 01:05:52,605\nSo that's gonna turn that\ninterface off eventually.\n\n1252\n01:05:52,605 --> 01:05:54,710\n>> [LAUGH]\n>> And there we go.\n\n1253\n01:05:54,710 --> 01:05:58,930\nIt'll shut it down, and now that's\nbasically giving up my DHCP address.\n\n1254\n01:05:58,930 --> 01:06:01,640\nSo there goes that\ninterface shutting down.\n\n1255\n01:06:01,640 --> 01:06:03,510\nAnd if I do a no shutdown\nit's going to come back up.\n\n1256\n01:06:06,680 --> 01:06:10,580\nAnd when it comes back up,\neven though my lease was still valid,\n\n1257\n01:06:10,580 --> 01:06:12,200\nit's going to go out and\nget another lease.\n\n1258\n01:06:12,200 --> 01:06:14,260\nSo it's reaching out to get that address.\n\n1259\n01:06:14,260 --> 01:06:15,750\nNow, notice I got an address.\n\n1260\n01:06:17,140 --> 01:06:22,800\nYour router, if it's a DHCP server, and\n\n1261\n01:06:22,800 --> 01:06:26,690\nan IP helper like mine is,\nthe DHCP server wins.\n\n1262\n01:06:26,690 --> 01:06:28,455\nIt actually does relay too.\n\n1263\n01:06:28,455 --> 01:06:30,270\nIt's relaying to that other server.\n\n1264\n01:06:30,270 --> 01:06:32,910\nBut when it comes to DHCP\nit's first come first serve.\n\n1265\n01:06:32,910 --> 01:06:35,800\nThe first server that answers wins.\n\n1266\n01:06:35,800 --> 01:06:39,480\nWell the routers gonna beat whoever\nit's relaying to, cuz it's in line.\n\n1267\n01:06:39,480 --> 01:06:43,150\nAnd so I still got an address\neven though I was relaying to\n\n1268\n01:06:43,150 --> 01:06:45,530\na server that doesn't exist.\n\n1269\n01:06:45,530 --> 01:06:49,370\nNow, if I jump back over to HQ,\nlook at all this information that I got.\n\n1270\n01:06:49,370 --> 01:06:50,830\nNow, I don't even have detail turned on.\n\n1271\n01:06:50,830 --> 01:06:53,290\nThis is just regular operation.\n\n1272\n01:06:53,290 --> 01:06:54,340\nThere's a lot going on here.\n\n1273\n01:06:55,760 --> 01:06:58,040\nHere we can see we gave up our lease.\n\n1274\n01:06:58,040 --> 01:07:01,090\nRemember when I shut down the interface,\nit took it a moment to shut down?\n\n1275\n01:07:01,090 --> 01:07:02,120\nIt was terminating the lease.\n\n1276\n01:07:02,120 --> 01:07:04,030\nIt was giving it back, right?\n\n1277\n01:07:04,030 --> 01:07:05,997\nAnd I can see the information here,\n\n1278\n01:07:05,997 --> 01:07:09,570\nthe DHCP release that came in for\n192.168.0.100.\n\n1279\n01:07:09,570 --> 01:07:13,380\nIt was given back to us to make\navailable to somebody else, and\n\n1280\n01:07:13,380 --> 01:07:17,300\nthen as we look down here,\nwe get some boot requests coming in.\n\n1281\n01:07:17,300 --> 01:07:21,170\nThis is me starting to get new\naddressing and notice here,\n\n1282\n01:07:21,170 --> 01:07:25,730\nI've got DHCP boot requests coming from,\nand it's giving me the GUID,\n\n1283\n01:07:25,730 --> 01:07:32,020\nwhich is nice and long,\nforwarded to 172.16.0.120.\n\n1284\n01:07:32,020 --> 01:07:36,660\nI received a DHCP request, and\nI forwarded it to that host.\n\n1285\n01:07:36,660 --> 01:07:41,030\nSending it over to that other guy,\nso that it can get the address.\n\n1286\n01:07:41,030 --> 01:07:45,170\nBut at the same time,\nI handled the address too.\n\n1287\n01:07:45,170 --> 01:07:49,540\nWe sent a notification of discover,\nwe received the discover, and now,\n\n1288\n01:07:49,540 --> 01:07:51,990\nwe're getting ready to do our offer.\n\n1289\n01:07:51,990 --> 01:07:55,800\nSo you'll see that Discover happens, and\nas I scroll down, you'll see some of\n\n1290\n01:07:55,800 --> 01:07:59,380\nthe other events that occur as we\nrespond back and offer up the address.\n\n1291\n01:07:59,380 --> 01:08:01,170\nHere's the DHCP offer.\n\n1292\n01:08:01,170 --> 01:08:06,100\nSo, we're offering in an address,\nand then here's the acknowledgement\n\n1293\n01:08:06,100 --> 01:08:08,690\nthat they've gone ahead and\nsaid they wanted it.\n\n1294\n01:08:08,690 --> 01:08:12,210\nWe're gonna go ahead and acknowledge that,\nand then they'll have the address.\n\n1295\n01:08:12,210 --> 01:08:14,170\nMeanwhile, I did still relay it.\n\n1296\n01:08:14,170 --> 01:08:18,920\nI did still send it off to somebody else,\nbut I'm not waiting for that.\n\n1297\n01:08:18,920 --> 01:08:21,280\nIf that server wants to respond,\ngreat, I'll forward that along, but\n\n1298\n01:08:21,280 --> 01:08:24,940\nif that server never responds who cares,\nI issued the address too.\n\n1299\n01:08:24,940 --> 01:08:26,169\nIt's all right there in the debugs.\n\n1300\n01:08:28,363 --> 01:08:32,730\nAll right, well,\nthat's basically it for DHCP.\n\n1301\n01:08:32,730 --> 01:08:33,570\nJust one more thing.\n\n1302\n01:08:33,570 --> 01:08:35,660\nLet's go back to Ronnie's\ndiagram real quick.\n\n1303\n01:08:35,660 --> 01:08:40,610\nIt is really important to remember where\nthe IP helper address command goes.\n\n1304\n01:08:40,610 --> 01:08:42,860\nIt doesn't go nearest the DHCP server.\n\n1305\n01:08:42,860 --> 01:08:45,240\nIt goes to where we're listening for\nthe broadcast.\n\n1306\n01:08:45,240 --> 01:08:47,880\nSo it goes nearest to the clients\nthat you're trying to help.\n\n1307\n01:08:47,880 --> 01:08:49,820\nSo in his case it's interface E0/1.\n\n1308\n01:08:49,820 --> 01:08:52,430\nThat's pointed to those\nclients on the left.\n\n1309\n01:08:52,430 --> 01:08:53,930\nThat's who we want to help.\n\n1310\n01:08:53,930 --> 01:08:57,510\nThe DHCP server could be on any of\nthe various interfaces of our router.\n\n1311\n01:08:57,510 --> 01:08:59,340\nAnd it doesn't even have\nto be directly connected.\n\n1312\n01:08:59,340 --> 01:09:02,180\nIt could be a few more hops down\nthe road if it needed to be.\n\n1313\n01:09:02,180 --> 01:09:09,590\nBut our listener needs to be right there\non the same network as those clients.\n\n1314\n01:09:09,590 --> 01:09:11,450\nAll right,\nwell Ronnie that's about it for DHCP,\n\n1315\n01:09:11,450 --> 01:09:13,840\ncan you think of anything else\nwe should throw in on that one?\n\n1316\n01:09:13,840 --> 01:09:17,110\n>> Nope, just remember,\nthe fundamentals are important.\n\n1317\n01:09:17,110 --> 01:09:20,070\nAs much as you're ready to jump into\nthose advanced details, going through\n\n1318\n01:09:20,070 --> 01:09:23,920\nthe fundamentals really will help\nbecause that becomes second nature and\n\n1319\n01:09:23,920 --> 01:09:26,830\nthen you can really focus in\non the advanced learning.\n\n1320\n01:09:26,830 --> 01:09:28,430\nOnce these things are down.\n\n1321\n01:09:28,430 --> 01:09:30,360\nSo I hate to stress it but\n\n1322\n01:09:30,360 --> 01:09:35,760\nit is as important as it gets that at this\npoint this does not confuse you at all.\n\n1323\n01:09:37,380 --> 01:09:39,330\n>> All right, well we'll go ahead and\nwrap this one here.\n\n1324\n01:09:39,330 --> 01:09:42,020\nWe do have a little bit more in the 3.0\n\n1325\n01:09:42,020 --> 01:09:45,040\nobjective that we need to tackle before\nwe get to our newer and exciting stuff.\n\n1326\n01:09:45,040 --> 01:09:47,720\nBut this will wrap up our IPv4 addressing.\n\n1327\n01:09:47,720 --> 01:09:51,170\nStay tuned we've got an IPv6 episode\ncoming up and a few other little nuts and\n\n1328\n01:09:51,170 --> 01:09:54,600\nbolts that we need to cover before\nwe jump into the new content.\n\n1329\n01:09:54,600 --> 01:09:56,735\nSo it will get exciting at some point.\n\n1330\n01:09:56,735 --> 01:09:57,780\n[LAUGH] All right.\n\n1331\n01:09:57,780 --> 01:09:58,950\nWell, I hope you guys enjoyed the show.\n\n1332\n01:09:58,950 --> 01:09:59,990\nLet me remind you,\n\n1333\n01:09:59,990 --> 01:10:02,940\nif you have any questions on what we've\ntalked about live during the show you\n\n1334\n01:10:02,940 --> 01:10:06,930\ncan go to http://itpro.tv/live and\nyou'll see the chat box beneath the video.\n\n1335\n01:10:06,930 --> 01:10:10,110\nPost your questions there,\nwe monitor and answer during the show.\n\n1336\n01:10:10,110 --> 01:10:13,300\nIf you have any questions after the show,\nuse our Q&A forums.\n\n1337\n01:10:13,300 --> 01:10:16,600\nOn top of every page on itpro.tv,\nyou'll see a link that says Q&A,\n\n1338\n01:10:16,600 --> 01:10:20,280\nYou can jump in there, ask your questions,\nand we'll get back to you.\n\n1339\n01:10:20,280 --> 01:10:23,140\nIt's a great way to reach out to us\nif we're not live and on the air.\n\n1340\n01:10:24,240 --> 01:10:25,520\nAll right, well,\nI hope you guys enjoyed the show.\n\n1341\n01:10:25,520 --> 01:10:27,922\nSigning off for ITPro tv I'm Don Pezet.\n\n1342\n01:10:27,922 --> 01:10:28,804\n>> And I'm Ronnie Wong.\n\n1343\n01:10:28,804 --> 01:10:30,477\n>> And, I'll see you next time.\n\n1344\n01:10:30,477 --> 01:10:40,477\n[MUSIC]\n\n1345\n01:10:44,323 --> 01:10:51,020\n[SOUND]\n\n",
          "vimeoId": "118589024"
        },
        {
          "description": "IPv6 is only recently seeing adoption because of the lack of IPv4 addresses and added features to IPv6, but the majority of environments still work with IPv4 because a lot of money has been invested into it and many ISPs don't even support IPv6 yet. Viewers will hear about IPv6 on Cisco routers including the various types of addressing available, when each type of address is typically used, automatic configuration and DHCP for IPv6.",
          "length": "4365",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/ccnproute/cisco-ccnproute-3-2-ipv6_addressing-020315.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/ccnproute/cisco-ccnproute-3-2-ipv6_addressing-020315-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/ccnproute/cisco-ccnproute-3-2-ipv6_addressing-020315-sm.jpg",
          "title": "IPv6 Addressing",
          "transcript": "1\n00:00:00,000 --> 00:00:10,000\n[MUSIC]\n\n2\n00:00:15,149 --> 00:00:22,729\n[SOUND]\n\n3\n00:00:22,729 --> 00:00:33,426\n[MUSIC]\n\n4\n00:00:33,426 --> 00:00:36,111\n>> All right, good morning,\ngood afternoon, and good evening.\n\n5\n00:00:36,111 --> 00:00:38,660\nWelcome back to another\nepisode of IT Pro TV.\n\n6\n00:00:38,660 --> 00:00:42,660\nI'm your host Don Pezet, back again with\nMr. Ronnie Wong, how's it going Ronnie?\n\n7\n00:00:42,660 --> 00:00:46,158\n>> It is going well this morning,\nwith our Carmen Electra references.\n\n8\n00:00:46,158 --> 00:00:48,990\n>> [LAUGH]\n>> We are ready for a shocking day.\n\n9\n00:00:48,990 --> 00:00:51,340\n>> See, for those of you watching\nrecorded, you missed out on so\n\n10\n00:00:51,340 --> 00:00:54,271\nmany things, like our introductory\ncommunications this morning.\n\n11\n00:00:54,271 --> 00:00:54,880\n>> That's right.\n\n12\n00:00:54,880 --> 00:00:57,690\n>> As we debated the merits of\nthe Carmen Electra workout.\n\n13\n00:00:57,690 --> 00:00:58,390\n>> Yes.\n\n14\n00:00:58,390 --> 00:01:03,060\n>> But barring that [LAUGH] we're gonna\nbe talking about IPv6 on Cisco routers.\n\n15\n00:01:03,060 --> 00:01:06,840\nWe're jumping right back into\nthe CCNP routing and switching show.\n\n16\n00:01:06,840 --> 00:01:08,330\nParticularly routing, today.\n\n17\n00:01:08,330 --> 00:01:11,340\nAnd we're just talking\nabout IPv6 addressing.\n\n18\n00:01:11,340 --> 00:01:14,640\nNow this is designed to be kind\nof a high level overview, and\n\n19\n00:01:14,640 --> 00:01:18,600\nto cover a couple of topics that might not\nhave been addressed in the CCNA training,\n\n20\n00:01:18,600 --> 00:01:20,890\nthat you should have already\ncompleted at this point.\n\n21\n00:01:20,890 --> 00:01:23,890\nIPv6 is an important technology.\n\n22\n00:01:23,890 --> 00:01:26,200\nIt's been out for a long, long time.\n\n23\n00:01:26,200 --> 00:01:27,990\nIt's been out for over twenty years now.\n\n24\n00:01:27,990 --> 00:01:32,670\nAnd it's only recently seeing\na grand adoption that ISPs and\n\n25\n00:01:32,670 --> 00:01:35,805\nstarting to kind of,\nlet's use our big words today,\n\n26\n00:01:35,805 --> 00:01:37,975\nproliferate, out across the internet,\n>> Wow.\n\n27\n00:01:37,975 --> 00:01:39,945\n>> I know, I'm going crazy.\n\n28\n00:01:39,945 --> 00:01:41,555\nSo it is important.\n\n29\n00:01:41,555 --> 00:01:45,285\nLet's start with just a real quick\noverview of why we even care\n\n30\n00:01:45,285 --> 00:01:46,525\nabout IPv6, right?\n\n31\n00:01:46,525 --> 00:01:49,180\nThe main thing is IPv4 has a little\n\n32\n00:01:50,210 --> 00:01:52,660\nbit of a problem with its address spaces,\nright Ronnie?\n\n33\n00:01:52,660 --> 00:01:56,170\n>> The address space for\nIPv4 is officially done.\n\n34\n00:01:56,170 --> 00:02:02,470\nNow what we mean by that is that the ISPs\nno longer have addresses to hand out.\n\n35\n00:02:02,470 --> 00:02:04,830\nNow that doesn't mean that\nthey're all used up and gone.\n\n36\n00:02:04,830 --> 00:02:09,270\nBut there's nothing left in reserve for\nthat gigantic pool of IP addresses.\n\n37\n00:02:09,270 --> 00:02:14,070\nA little bit over 4 billion of them\nis no longer available anymore.\n\n38\n00:02:14,070 --> 00:02:18,450\nAnd with that now being gone with nothing\nin reserve, they've gone ahead and said,\n\n39\n00:02:18,450 --> 00:02:21,100\nlook, now is the time\nto switch over to that.\n\n40\n00:02:21,100 --> 00:02:25,280\nBut it is the lack of IPv4 address\nspaces that we normally hear about.\n\n41\n00:02:25,280 --> 00:02:28,460\nAnd that's the major reason\nwhy we need to convert.\n\n42\n00:02:28,460 --> 00:02:31,320\n>> Yeah, and\nyou see a lot of sensationalist press out\n\n43\n00:02:31,320 --> 00:02:32,140\nthere about this stuff.\n\n44\n00:02:32,140 --> 00:02:35,440\nAnd if somebody says, oh,\nI can't get an IPv4 address, well,\n\n45\n00:02:35,440 --> 00:02:36,573\nthey didn't try very hard, all right?\n\n46\n00:02:36,573 --> 00:02:38,600\n>> [LAUGH]\n>> I've never been turned down for\n\n47\n00:02:38,600 --> 00:02:40,840\nan IPv4 address when I request one.\n\n48\n00:02:40,840 --> 00:02:42,410\nEven bigger blocks like 32 addresses,\n\n49\n00:02:42,410 --> 00:02:44,550\nthey usually don't have\na problem issuing those.\n\n50\n00:02:44,550 --> 00:02:45,950\nThe addresses are out there.\n\n51\n00:02:45,950 --> 00:02:47,460\nBut the end is in sight, right?\n\n52\n00:02:47,460 --> 00:02:50,230\nThere is going to come a time where\nyou go to the ISP and you say,\n\n53\n00:02:50,230 --> 00:02:52,280\nI need 32 addresses, and\nthey say, all right, well,\n\n54\n00:02:52,280 --> 00:02:56,230\nyou've gotta give me documented proof\nexactly how you're gonna use these 32 IPs.\n\n55\n00:02:56,230 --> 00:02:59,080\nAnd we're gonna monitor you, and\nif you stop using for a period of time,\n\n56\n00:02:59,080 --> 00:02:59,750\nwe'll take them back.\n\n57\n00:02:59,750 --> 00:03:04,420\nThey're going to get strict about that\nsoon, so we've got to find something.\n\n58\n00:03:04,420 --> 00:03:05,530\nIPv6 is that solution.\n\n59\n00:03:05,530 --> 00:03:08,840\nWell IPv6 was the solution 20 years ago.\n\n60\n00:03:08,840 --> 00:03:10,550\nWhy aren't we already on it?\n\n61\n00:03:10,550 --> 00:03:13,290\nAnd the reason is IPv4 still works.\n\n62\n00:03:13,290 --> 00:03:15,860\nAnd people have invested\na lot of money in it.\n\n63\n00:03:15,860 --> 00:03:17,570\nSo when you go out there\nin the real world,\n\n64\n00:03:17,570 --> 00:03:19,750\nyou're going to be working\nin an IPv4 environment.\n\n65\n00:03:19,750 --> 00:03:20,560\nThat's just how it is.\n\n66\n00:03:20,560 --> 00:03:21,900\nThat's what you're going to bump into.\n\n67\n00:03:21,900 --> 00:03:23,560\nThe bulk of the internet is still IPv4.\n\n68\n00:03:24,760 --> 00:03:29,250\nMany ISPs don't even support IPv6 yet,\nso you are gonna deal with IPv4.\n\n69\n00:03:29,250 --> 00:03:31,710\nAnd on the exam the bulk\nof what you'll see is IPv4.\n\n70\n00:03:32,800 --> 00:03:36,620\nBut we do need to be aware of IPv6\ncuz it is on the exam also and\n\n71\n00:03:36,620 --> 00:03:39,310\nCisco expects you to be a well\nrounded network engineer.\n\n72\n00:03:39,310 --> 00:03:44,230\nSo You need to understand the different\nconcepts that are involved, all right?\n\n73\n00:03:44,230 --> 00:03:46,500\nSo, with IPv6 it doesn't just\nsolve the address space problem,\n\n74\n00:03:46,500 --> 00:03:50,310\nit adds a ton of other\nfeatures like built-in IPsec,\n\n75\n00:03:50,310 --> 00:03:54,770\nextendable headers, all sorts of really\ncool stuff like that that's in there.\n\n76\n00:03:54,770 --> 00:03:58,280\nIn this episode we're going to\ntake a look at that cool stuff and\n\n77\n00:03:58,280 --> 00:03:59,460\nhow it affects our routers.\n\n78\n00:03:59,460 --> 00:04:03,180\nHow we can leverage on our systems\nto make our networks more robust.\n\n79\n00:04:03,180 --> 00:04:04,920\nRight?\nAnd there's some neat things.\n\n80\n00:04:04,920 --> 00:04:07,830\nBut before we jump into that, let's just\ndo our quick overview of the different\n\n81\n00:04:07,830 --> 00:04:10,100\ntypes of addressing that we have in IPv6.\n\n82\n00:04:10,100 --> 00:04:12,900\nAlright?\nLet's start off with our basic\n\n83\n00:04:12,900 --> 00:04:14,130\nUnicast, Ronnie.\n\n84\n00:04:14,130 --> 00:04:18,470\n>> The basic Unicast address, of course,\nas we've already talked about Unicast\n\n85\n00:04:18,470 --> 00:04:22,256\nas being a one to one type of\ntransmission, direct communication.\n\n86\n00:04:22,256 --> 00:04:26,390\nWith IPv6 there are several\ndifferent types of Unicast, but\n\n87\n00:04:26,390 --> 00:04:31,440\nthe one that we're normally focused in on\nis what we call a global Unicast address.\n\n88\n00:04:31,440 --> 00:04:37,080\nAnd with that global Unicast address,\nif you take that entire IP address space,\n\n89\n00:04:37,080 --> 00:04:40,080\nit normally begins with a two and\n\n90\n00:04:40,080 --> 00:04:44,160\nthen followed by a zero, zero,\nzero or any other number.\n\n91\n00:04:44,160 --> 00:04:47,220\nBut usually it's only those first\nthree bits that we're worried about.\n\n92\n00:04:47,220 --> 00:04:50,790\nSo a lot of time you'll see that two,\nzero, zero, followed by a slash three,\n\n93\n00:04:50,790 --> 00:04:53,952\nand then the rest of the address\ncan be whatever it needs to be.\n\n94\n00:04:53,952 --> 00:04:57,750\n>> Yeah, and the IANA,\nwho's responsible for\n\n95\n00:04:57,750 --> 00:05:01,910\nissuing out a lot of these addresses, and\nthe ARIN, the different organizations,\n\n96\n00:05:01,910 --> 00:05:04,660\nthey're issuing them out, and\nthey're kinda starting at the bottom.\n\n97\n00:05:04,660 --> 00:05:08,540\nAnd so on the Internet you see\na lot of 2001, 2002, or so on.\n\n98\n00:05:08,540 --> 00:05:12,730\nIn fact, here,\nlet me show you guys an example here.\n\n99\n00:05:12,730 --> 00:05:15,730\nLet me get a terminal\nfired up on my machine.\n\n100\n00:05:15,730 --> 00:05:16,660\nAnd here we go.\n\n101\n00:05:16,660 --> 00:05:20,480\nSo if I do a quick lookup against,\nlike, www.cisco.com.\n\n102\n00:05:20,480 --> 00:05:20,980\nRight?\n\n103\n00:05:22,160 --> 00:05:27,090\nSo if pull up their address, I get some\ninformation back and, oh shoot I forgot,\n\n104\n00:05:27,090 --> 00:05:31,210\non the Mac it doesn't do\nthe IPv6 address by default.\n\n105\n00:05:31,210 --> 00:05:33,450\nRonnie, you're on a Windows machine,\naren't you?\n\n106\n00:05:33,450 --> 00:05:36,910\nWell, actually I know the entry.\n\n107\n00:05:36,910 --> 00:05:43,578\nCisco's IPv6 address it is, hang on,\nI know it from looking it up earlier,\n\n108\n00:05:43,578 --> 00:05:49,239\nit's 2001:428:2004:18F::90, right?\n\n109\n00:05:49,239 --> 00:05:56,390\nRight there, that is the address\nassociated with www.cisco.com.\n\n110\n00:05:56,390 --> 00:06:00,630\nSo, if you were on an IPv6 host, and\nyou were to do that www.cisco.com,\n\n111\n00:06:00,630 --> 00:06:04,600\nit would return that address, and you'd\nbe able to browse and get to that host,\n\n112\n00:06:04,600 --> 00:06:05,890\nif you were an IPv6 system.\n\n113\n00:06:05,890 --> 00:06:08,830\nNow this is a globally unique address,\n\n114\n00:06:08,830 --> 00:06:12,740\nit starts with 200 like Ronnie\nwas saying And then it goes 2001.\n\n115\n00:06:12,740 --> 00:06:16,980\nAnd 2001 is the most common, cuz it's\nthe beginning of the address base, and\n\n116\n00:06:16,980 --> 00:06:18,710\nthe address base is massive.\n\n117\n00:06:18,710 --> 00:06:22,430\nWe're talking about trillions upon\ntrillions upon trillions of addresses, and\n\n118\n00:06:22,430 --> 00:06:27,270\nthat's barely even scraping the iceberg\nthere, cuz it's a, what it is?\n\n119\n00:06:27,270 --> 00:06:29,702\nUndecillion or something crazy?\n\n120\n00:06:29,702 --> 00:06:30,280\n>> Yeah, undecillion.\n\n121\n00:06:30,280 --> 00:06:33,150\n>> The amount of addresses is huge.\n\n122\n00:06:33,150 --> 00:06:36,080\nSo we'll probably see 2001 for\na long, long time.\n\n123\n00:06:36,080 --> 00:06:40,370\nBut the address space actually\nruns all the way up to E00.\n\n124\n00:06:40,370 --> 00:06:45,940\nSo you could see like C02A.\n\n125\n00:06:45,940 --> 00:06:48,430\nAnd that would be\na globally unique address.\n\n126\n00:06:48,430 --> 00:06:49,440\nIt falls in that range.\n\n127\n00:06:49,440 --> 00:06:51,810\nSo 200 all the way through E00.\n\n128\n00:06:51,810 --> 00:06:54,610\nThose are those globally unique addresses.\n\n129\n00:06:54,610 --> 00:06:59,200\nAnd these are the equivalent of\nthe registered public IPs under IPv4.\n\n130\n00:06:59,200 --> 00:07:01,650\nThe ones that you have to go and register.\n\n131\n00:07:01,650 --> 00:07:05,270\nThat you are the only one in\nthe entire planet using it.\n\n132\n00:07:05,270 --> 00:07:08,430\nIf you see an address that starts\nwith 200 all the way through E00,\n\n133\n00:07:08,430 --> 00:07:12,460\nthose should be unique\nacross the whole planet.\n\n134\n00:07:12,460 --> 00:07:14,045\nThat's why they call them globally unique.\n\n135\n00:07:14,045 --> 00:07:15,240\n>> Mm-hm.\n\n136\n00:07:15,240 --> 00:07:19,670\nNow these particular Unicast addresses\nare also what they call aggregatable.\n\n137\n00:07:19,670 --> 00:07:22,560\nAnd that means that what we have is\nthe first three bits are either gonna be\n\n138\n00:07:22,560 --> 00:07:25,000\na two ranging all the way\nup through the E.\n\n139\n00:07:25,000 --> 00:07:29,130\nAnd then the next 45 bits, usually\nthose are gonna be what we call that\n\n140\n00:07:29,130 --> 00:07:33,390\naggregatable space, or the global\nrouting prefix, is normally what we see.\n\n141\n00:07:33,390 --> 00:07:36,125\nSo the first 48 bits is that.\n\n142\n00:07:36,125 --> 00:07:40,202\nIt's for us to be able to say look, what's\ngonna happen is that you're gonna have\n\n143\n00:07:40,202 --> 00:07:43,573\ncertain areas in which,\nyou know everybody's gonna share those,\n\n144\n00:07:43,573 --> 00:07:46,842\nnot only those first three bits,\nbut also the next 45 bits too.\n\n145\n00:07:46,842 --> 00:07:51,602\n>> Yeah and then after the 45 bits, you\nhave another 16 bits, which identify, it\n\n146\n00:07:51,602 --> 00:07:56,430\ncan kind of vary, normally it identifies\na downlevel ISP, but it could identify you\n\n147\n00:07:56,430 --> 00:08:01,276\nas a company if you're large enough, and\nthey call that the site level aggregator.\n\n148\n00:08:01,276 --> 00:08:06,330\nSo at the upper level you have\nyour core service providers.\n\n149\n00:08:06,330 --> 00:08:08,190\nRight?\nThe ARIN and\n\n150\n00:08:08,190 --> 00:08:11,615\nthe INA that's issuing out the addresses,\nthey issue out to the big guys.\n\n151\n00:08:11,615 --> 00:08:13,470\nRight?\nWhich will be companies like\n\n152\n00:08:13,470 --> 00:08:19,330\nLevel Three Communications or Quest,\nAT&T, and who else is out there?\n\n153\n00:08:19,330 --> 00:08:20,760\nWhat is it?\nUUNet, something like that?\n\n154\n00:08:20,760 --> 00:08:21,900\n>> Cogent, something like that.\n\n155\n00:08:21,900 --> 00:08:22,920\n>> Cogent, yeah those guys.\n\n156\n00:08:22,920 --> 00:08:24,110\nYeah, the really big guys.\n\n157\n00:08:24,110 --> 00:08:26,410\nRight?\nSo they'll be up in that first 45 or\n\n158\n00:08:26,410 --> 00:08:32,410\n48 bits and then after that, the 16 bits,\nthis'll normally be the smaller ISPs.\n\n159\n00:08:32,410 --> 00:08:35,340\nNot saying that they're small,\njust they're not a backbone.\n\n160\n00:08:35,340 --> 00:08:37,530\nRight?\nThey're these more regional ISPs,\n\n161\n00:08:37,530 --> 00:08:39,240\nthey'll identify them.\n\n162\n00:08:39,240 --> 00:08:43,690\nAnd then beyond that, well, we've\nonly accounted for the first 64 bits,\n\n163\n00:08:43,690 --> 00:08:45,510\nwhat happens to the other 64 bits?\n\n164\n00:08:45,510 --> 00:08:47,740\nWe'll, those are available for\nthe customers.\n\n165\n00:08:47,740 --> 00:08:50,040\nSo now the ISPs issue those\nout to the customers, and\n\n166\n00:08:50,040 --> 00:08:54,000\nyou end up getting a pretty\nbig address chunk by default.\n\n167\n00:08:54,000 --> 00:08:55,535\nThe way that IPv6 is designed.\n\n168\n00:08:55,535 --> 00:08:57,660\nRonnie, you know the number off hand?\n\n169\n00:08:57,660 --> 00:08:59,370\n>> 64 bit.\n\n170\n00:08:59,370 --> 00:09:02,340\n>> If you have a 64 bit available for\nhost IDs.\n\n171\n00:09:02,340 --> 00:09:03,250\nHow many you end up with?\n\n172\n00:09:03,250 --> 00:09:04,130\n>> The number? No. >> It's massive.\n\n173\n00:09:04,130 --> 00:09:05,520\n>> Yeah, it's gigantic.\n\n174\n00:09:05,520 --> 00:09:06,970\nYeah, if we think about it.\n\n175\n00:09:06,970 --> 00:09:09,324\nRight?\nThere's many different analogies that\n\n176\n00:09:09,324 --> 00:09:12,860\nare used, but the one that I like\nthat I've heard Don actually use is.\n\n177\n00:09:12,860 --> 00:09:16,825\nEvery single person, if they were just\nto be issued one of these addresses and\n\n178\n00:09:16,825 --> 00:09:17,880\ntheir host.\n\n179\n00:09:17,880 --> 00:09:20,600\nIn other words the number of computers\nthat can have is currently larger than\n\n180\n00:09:20,600 --> 00:09:22,960\nthe entire population of\nthe Internet right now.\n\n181\n00:09:22,960 --> 00:09:24,950\n>> Yeah.\n>> So everybody could be assigned\n\n182\n00:09:24,950 --> 00:09:25,860\na network and\n\n183\n00:09:25,860 --> 00:09:29,160\nyou'd have more addresses than what's\ncurrently available on the Internet.\n\n184\n00:09:29,160 --> 00:09:30,690\nIt's huge.\n>> Yeah and\n\n185\n00:09:30,690 --> 00:09:33,440\nthe value of having\naddress space that big.\n\n186\n00:09:33,440 --> 00:09:37,430\nIs that technologies like NAT, Network\nAddress Translation, become redundant.\n\n187\n00:09:37,430 --> 00:09:38,360\nYou don't need them anymore.\n\n188\n00:09:38,360 --> 00:09:40,810\nAnd if you can do away with NAT,\nthere's so\n\n189\n00:09:40,810 --> 00:09:42,420\nmany problems we have today that go away.\n\n190\n00:09:42,420 --> 00:09:44,090\nI was talking about them before the show.\n\n191\n00:09:44,090 --> 00:09:48,100\nThings like SIP for\nVoice Over IP or IP telephony.\n\n192\n00:09:48,100 --> 00:09:50,810\nSIP has a lot of problems\nwith port negotiations.\n\n193\n00:09:50,810 --> 00:09:52,550\nBut most of it's tied to NAT,\n\n194\n00:09:52,550 --> 00:09:57,120\nand if you don't do NAT, if everybody\nhas a real public IP, SIP works great.\n\n195\n00:09:57,120 --> 00:10:01,100\nAs well as a lot of other VPN\ntechnologies, but IPv6, you have IPsec\n\n196\n00:10:01,100 --> 00:10:07,160\nbuilt in so you don't even need the VPN\ntechnologies anymore like you used to.\n\n197\n00:10:07,160 --> 00:10:11,280\nYou still need VPN technologies as\nfar as authenticating who you are.\n\n198\n00:10:11,280 --> 00:10:14,850\nBut the encryption can be carried\nby IPsec in the protocol itself.\n\n199\n00:10:14,850 --> 00:10:17,050\nSo a lot of neat power there.\n\n200\n00:10:17,050 --> 00:10:21,330\nStuff that we really want to have\nif we can just get this deployed.\n\n201\n00:10:21,330 --> 00:10:24,310\nNow the global unique addresses, those\nare what most of us are going to use.\n\n202\n00:10:24,310 --> 00:10:25,850\nSince NAT's not necessary.\n\n203\n00:10:25,850 --> 00:10:27,710\nThat's gonna be the one.\n\n204\n00:10:27,710 --> 00:10:31,990\nBut you do still have private IPs too,\njust like in IPv4.\n\n205\n00:10:33,220 --> 00:10:35,810\nIn IPv4, if I wanna set up my own\nnetwork and I need a ton of of IPs,\n\n206\n00:10:35,810 --> 00:10:37,480\nI don't go out and get public IPs.\n\n207\n00:10:37,480 --> 00:10:39,540\nRight?\nBecause they're harder to come by.\n\n208\n00:10:39,540 --> 00:10:41,540\nSo instead I use private IPs.\n\n209\n00:10:41,540 --> 00:10:43,653\nI use 192.168.\n\n210\n00:10:43,653 --> 00:10:47,330\nI use 172.16 or ten dot whatever.\n\n211\n00:10:47,330 --> 00:10:50,064\nI use these ranges that\nare set aside in RFC19, 18.\n\n212\n00:10:50,064 --> 00:10:50,740\nRight?\n\n213\n00:10:50,740 --> 00:10:53,900\nWell in IPv6 they have that too.\n\n214\n00:10:53,900 --> 00:10:56,280\nThey call it a Unique Local Address.\n\n215\n00:10:56,280 --> 00:10:59,180\nIt's RFC,\nI gotta look at my own notes here.\n\n216\n00:10:59,180 --> 00:11:00,920\nRFC4193 that defines these.\n\n217\n00:11:00,920 --> 00:11:04,440\nNow they're available but\nthey're really not necessary.\n\n218\n00:11:04,440 --> 00:11:09,330\nBecause the public IPs are so\nfreely given, the address base is so\n\n219\n00:11:09,330 --> 00:11:11,210\nbig, you might as well use public IPs.\n\n220\n00:11:11,210 --> 00:11:12,430\nNow, I know what you're thinking.\n\n221\n00:11:12,430 --> 00:11:14,950\nYou're thinking,\nwhat about the security implications?\n\n222\n00:11:14,950 --> 00:11:18,505\nI don't want all of my\ncomputers to have a public IP.\n\n223\n00:11:18,505 --> 00:11:22,025\nWell, that doesn't actually\nprovide any security,\n\n224\n00:11:22,025 --> 00:11:25,165\nall it does is obscure your internal IPs.\n\n225\n00:11:25,165 --> 00:11:29,540\nSo you really need a firewall,\neven in a netted solution.\n\n226\n00:11:29,540 --> 00:11:32,970\nSo here, when we have all public IPs,\nyou just still need a firewall.\n\n227\n00:11:32,970 --> 00:11:36,080\nYou need a firewall that's filtering\nwhat accesses allowed in to say,\n\n228\n00:11:36,080 --> 00:11:39,925\nI won't allow incoming traffic unless\nit's a reply to my outgoing traffic.\n\n229\n00:11:39,925 --> 00:11:42,520\nRight?\nSo firewalls become more important but\n\n230\n00:11:42,520 --> 00:11:44,490\nyou just give a public IP to everybody and\nthat's it.\n\n231\n00:11:44,490 --> 00:11:49,530\nSo you don't really need these local\naddresses, these unique local addresses.\n\n232\n00:11:49,530 --> 00:11:52,630\nBut if you want to use them you can and\n\n233\n00:11:52,630 --> 00:11:55,790\nthey're easy to spot a lot of\npeople do make use of them.\n\n234\n00:11:55,790 --> 00:12:03,990\nThe address space is technically FC00::/7,\n\n235\n00:12:03,990 --> 00:12:09,120\nso the first seven bits which really is\njust the FC0 part is what adheres to that.\n\n236\n00:12:09,120 --> 00:12:12,630\nNow what they don't tell you,\nthey do tell you it's in the standard, but\n\n237\n00:12:12,630 --> 00:12:14,190\nwhat the textbooks never mention.\n\n238\n00:12:14,190 --> 00:12:19,180\nI had a good forum post on this a few\nmonths ago where the eight bit.\n\n239\n00:12:19,180 --> 00:12:24,790\nThe eight bit defines whether or\nnot the address was just made up by you or\n\n240\n00:12:24,790 --> 00:12:27,180\nif it was assigned by\nsome kind of registry.\n\n241\n00:12:27,180 --> 00:12:28,810\nWell with these private\naddresses like this,\n\n242\n00:12:28,810 --> 00:12:29,930\nthey're almost always assigned by us.\n\n243\n00:12:29,930 --> 00:12:30,660\nWe make them up.\n\n244\n00:12:30,660 --> 00:12:32,552\nSo the whole point.\n\n245\n00:12:32,552 --> 00:12:33,150\nRight?\n\n246\n00:12:33,150 --> 00:12:36,760\nSo, even though only seven bits\ntruly defines this network,\n\n247\n00:12:36,760 --> 00:12:41,850\nthe eight bit has to be a one to identify\nthis was a locally made up address.\n\n248\n00:12:41,850 --> 00:12:44,659\nSo, you don't really see FC0,\n\n249\n00:12:44,659 --> 00:12:47,935\nyou normally see FD0 because\nof that extra bit being a one.\n\n250\n00:12:47,935 --> 00:12:51,625\nSo FD0 and up from there,\nthose are the ones that we see for\n\n251\n00:12:51,625 --> 00:12:52,815\nthese private network.\n\n252\n00:12:52,815 --> 00:12:55,335\nAnd you can make whatever\nnetwork you want, and\n\n253\n00:12:55,335 --> 00:12:57,505\nthat's what I'm gonna use here in my lab.\n\n254\n00:12:57,505 --> 00:13:02,260\nIf you're building your own network, you\nmay choose to go ahead and uses these FC,\n\n255\n00:13:02,260 --> 00:13:05,450\nand FD0 on your network\nbecause they're private.\n\n256\n00:13:05,450 --> 00:13:07,240\nThey're not used anywhere\nout there on the Internet.\n\n257\n00:13:07,240 --> 00:13:09,730\nIf you wanted to go to the Internet\nwith one of those addresses though,\n\n258\n00:13:09,730 --> 00:13:10,880\nyou'd have to do NAT.\n\n259\n00:13:10,880 --> 00:13:14,840\nAnd you can do NAT under IPv6,\nit's just you shouldn't have to.\n\n260\n00:13:14,840 --> 00:13:17,350\nBut if your ISP isn't\ngiving you addresses,\n\n261\n00:13:17,350 --> 00:13:20,560\nyou can't just grab real IPs and use them.\n\n262\n00:13:20,560 --> 00:13:25,863\nYou need some fake ones to use and\nthe FC0/7 that's the one for you.\n\n263\n00:13:25,863 --> 00:13:26,643\nAll right.\n\n264\n00:13:26,643 --> 00:13:29,840\nNow, I skipped over link local addresses.\n\n265\n00:13:29,840 --> 00:13:31,670\nRon you want to talk\nabout those real quick?\n\n266\n00:13:31,670 --> 00:13:32,260\n>> Yeah.\nWe take\n\n267\n00:13:32,260 --> 00:13:37,190\na look at link local addresses these\nare kind of the self assigned addresses\n\n268\n00:13:37,190 --> 00:13:42,090\nthat your particular computer will end up\nhaving or your interface will have too.\n\n269\n00:13:42,090 --> 00:13:47,630\nSo your machine, normally if it doesn't\nget a global prefix right away and\n\n270\n00:13:47,630 --> 00:13:52,075\nif we're not doing\nthe unique local addresses.\n\n271\n00:13:52,075 --> 00:13:54,130\n>> [LAUGH]\n>> Your computer will automatically give\n\n272\n00:13:54,130 --> 00:14:00,470\nitself an address that begins with\nFE80 and that's gonna also be a /10.\n\n273\n00:14:00,470 --> 00:14:05,520\nSo it's really only the first ten bits\nthat are gonna begin that way and\n\n274\n00:14:05,520 --> 00:14:09,720\nthen you're gonna have the next 48 bits or\nso\n\n275\n00:14:09,720 --> 00:14:12,900\nthat will usually be zeroes,\nor something else.\n\n276\n00:14:12,900 --> 00:14:17,940\nAnd then the last one will usually be\nour Mac address along with that EUI 64.\n\n277\n00:14:17,940 --> 00:14:22,800\nSo it gives us the ability\nto have our own machines.\n\n278\n00:14:22,800 --> 00:14:27,070\nIf it's at least connected to the link and\nthere are other IPv6\n\n279\n00:14:28,300 --> 00:14:32,360\ndevices on that same link, that they'll be\nable to communicate with each other even\n\n280\n00:14:32,360 --> 00:14:37,610\nif I don't do the unique local, or\nI don't have the global address on it.\n\n281\n00:14:37,610 --> 00:14:41,170\n>> I remember when I\nfirst learned about IPv6.\n\n282\n00:14:41,170 --> 00:14:42,680\nWhich it would have been 1997 or so.\n\n283\n00:14:42,680 --> 00:14:43,820\nIt's really been out.\n\n284\n00:14:43,820 --> 00:14:45,650\n>> Long time.\n>> A long, long time.\n\n285\n00:14:45,650 --> 00:14:49,090\nWhen I was first reading I had bought\nthis, it was just a white paper,\n\n286\n00:14:49,090 --> 00:14:51,020\nbecause there weren't even\nprinted books on it yet.\n\n287\n00:14:51,020 --> 00:14:53,420\nAnd I was reading it and I was reading\nabout these link local addresses.\n\n288\n00:14:53,420 --> 00:14:56,960\nAnd as they were describing it, in my\nmind I'm listening and I'm like, wow,\n\n289\n00:14:56,960 --> 00:14:59,620\nthis is exactly what a Mac address does.\n\n290\n00:14:59,620 --> 00:15:01,340\nThis is exactly what ARP is for.\n\n291\n00:15:01,340 --> 00:15:03,780\nWhy have they reinvented the wheel?\n\n292\n00:15:03,780 --> 00:15:05,600\nWhy have they created\nsomething that is the same?\n\n293\n00:15:05,600 --> 00:15:09,730\nWhen your computer boots up and\nyou don't have an IPv6 address,\n\n294\n00:15:09,730 --> 00:15:12,230\nyou need to be able to\ncommunicate to get one.\n\n295\n00:15:12,230 --> 00:15:16,232\nWell why not just do a DACP broadcast and\nsay hey somebody give me an address.\n\n296\n00:15:16,232 --> 00:15:17,060\nAll right?\n\n297\n00:15:17,060 --> 00:15:20,670\nWell IPv6 doesn't have broadcasts.\n\n298\n00:15:20,670 --> 00:15:24,200\nYou can't send out a broadcast\nto find anybody who's out there.\n\n299\n00:15:24,200 --> 00:15:28,470\nSo you need some mechanism to communicate\nwith people on the same link as you.\n\n300\n00:15:28,470 --> 00:15:30,390\nAnd it's not gonna be broadcast.\n\n301\n00:15:30,390 --> 00:15:32,030\nIt's gonna be multicast.\n\n302\n00:15:32,030 --> 00:15:33,790\nWell to communicate on\na multicast network,\n\n303\n00:15:33,790 --> 00:15:35,590\nyou need an address to be\nable to talk to yourself.\n\n304\n00:15:35,590 --> 00:15:37,240\nSo you need something to start with.\n\n305\n00:15:37,240 --> 00:15:39,880\nAnd the link local addresses\n\n306\n00:15:39,880 --> 00:15:43,900\nare automatically generated\naddresses that serve that purpose.\n\n307\n00:15:43,900 --> 00:15:48,650\nARP can't work the way that it's supposed\nto and in fact in IPv6 you don't have ARP,\n\n308\n00:15:48,650 --> 00:15:50,140\nit gets replaced by MLD.\n\n309\n00:15:50,140 --> 00:15:54,290\nBut you don't really use ARP anymore\nbecause the broadcast system is gone.\n\n310\n00:15:54,290 --> 00:15:57,960\nSo link locals,\nyou automatically generate an address.\n\n311\n00:15:57,960 --> 00:16:00,440\nOnce you've got that\nautomatically generated address,\n\n312\n00:16:00,440 --> 00:16:03,232\nnow you can start talking to\nthe various multi-case addresses.\n\n313\n00:16:03,232 --> 00:16:07,382\nThat relate to getting a DHCP address or\ndiscovering a router, or\n\n314\n00:16:07,382 --> 00:16:09,350\nall the other pieces of IPv6.\n\n315\n00:16:09,350 --> 00:16:12,210\nAnd that's what we're gonna take\na look at in the rest of this show,\n\n316\n00:16:12,210 --> 00:16:13,720\nafter we get past the first break.\n\n317\n00:16:13,720 --> 00:16:17,330\nWe'll see that whole discovery process,\nthe way that our routers educate our\n\n318\n00:16:17,330 --> 00:16:20,690\nclients and\nthe way the network kind of builds itself.\n\n319\n00:16:20,690 --> 00:16:25,930\nBut the key thing to remember with IPv6 is\nyou will always have a link local address.\n\n320\n00:16:25,930 --> 00:16:27,680\nIt's the one address that\nyou're guaranteed to have.\n\n321\n00:16:27,680 --> 00:16:29,700\nYou will always have a link local address.\n\n322\n00:16:29,700 --> 00:16:33,570\nIf you didn't assign it, your system will\nmake one, it'll pick one for itself.\n\n323\n00:16:33,570 --> 00:16:35,460\nAnd there's a few mechanisms for\ndoing that.\n\n324\n00:16:35,460 --> 00:16:36,860\nWe'll see it later on.\n\n325\n00:16:36,860 --> 00:16:38,460\nSo you're gonna have that.\n\n326\n00:16:38,460 --> 00:16:41,890\nOnce you have that,\nyou can communicate and then you might get\n\n327\n00:16:41,890 --> 00:16:47,170\na global unique address, or\nyou might get a unique local address.\n\n328\n00:16:47,170 --> 00:16:49,170\nYou'll still have your link global.\n\n329\n00:16:49,170 --> 00:16:51,502\nYou'll have more than one address.\n\n330\n00:16:51,502 --> 00:16:56,090\nWith IPv6 it is very,\nvery common to have more than one address.\n\n331\n00:16:56,090 --> 00:16:58,240\nYou may have a link local that you use for\n\n332\n00:16:58,240 --> 00:17:01,970\ndirect link communications right there on\nyour network by talking to your gateway.\n\n333\n00:17:01,970 --> 00:17:06,600\nYou'll have your unique address that\nyou use for routing within your LAN or\n\n334\n00:17:06,600 --> 00:17:08,310\nrouting out to the Internet.\n\n335\n00:17:08,310 --> 00:17:10,920\nYou may have anycast addresses.\n\n336\n00:17:10,920 --> 00:17:12,790\nAnycast addresses are awesome.\n\n337\n00:17:12,790 --> 00:17:15,980\nNormally, we get an address,\nit's tied to one interface.\n\n338\n00:17:15,980 --> 00:17:19,500\nWell, if you have router with five\ninterfaces you'd need five IPs.\n\n339\n00:17:19,500 --> 00:17:23,630\nBut within any cast address,\nyou attach the address to the router.\n\n340\n00:17:23,630 --> 00:17:25,630\nIf it has five interfaces,\n\n341\n00:17:25,630 --> 00:17:29,530\nit can answer on all five\ninterfaces with that one address.\n\n342\n00:17:29,530 --> 00:17:32,421\nThat's really important for\nmulticast communications because it needs\n\n343\n00:17:32,421 --> 00:17:35,530\nto be visible on all those different\ninterfaces, really neat stuff.\n\n344\n00:17:35,530 --> 00:17:38,260\nSo IPv6 breaks a lot of\nthe rules we had with IPv4,\n\n345\n00:17:38,260 --> 00:17:41,570\nand it does it to make the network better.\n\n346\n00:17:41,570 --> 00:17:45,820\nThey've had a lot of time to perfect IPv6,\nand in that time they've done great work.\n\n347\n00:17:45,820 --> 00:17:47,210\nIn the beginning, back in the 1990s,\n\n348\n00:17:47,210 --> 00:17:51,700\nthey said well just solve this address\nspace problem and that's all it did.\n\n349\n00:17:51,700 --> 00:17:54,378\nWell when it didn't get rapidly adopted.\n\n350\n00:17:54,378 --> 00:17:55,020\nRight?\nThe .com\n\n351\n00:17:55,020 --> 00:17:57,030\nboom is what caused things to get delayed.\n\n352\n00:17:57,030 --> 00:17:59,720\nPeople dumped so\nmuch money into IPv4 networks,\n\n353\n00:17:59,720 --> 00:18:01,550\nthey couldn't fathom replacing it.\n\n354\n00:18:01,550 --> 00:18:04,620\nWell, because IPv6 didn't get\nrapidly adopted they said,\n\n355\n00:18:04,620 --> 00:18:07,490\nall right we've got some time on\nour hands, let's make it better.\n\n356\n00:18:07,490 --> 00:18:11,300\nAnd they just started adding more and\nmore and more cool stuff to it.\n\n357\n00:18:11,300 --> 00:18:14,010\nAnd you end up with this very\nrobust protocol that has\n\n358\n00:18:14,010 --> 00:18:15,040\naddresses that are a nightmare.\n\n359\n00:18:15,040 --> 00:18:16,300\nRight?\nThis is people's biggest fear.\n\n360\n00:18:16,300 --> 00:18:18,950\nThey're like oh my gosh, how am I ever\ngoing to remember an IPv6 address?\n\n361\n00:18:18,950 --> 00:18:20,690\nThey're so long.\n\n362\n00:18:20,690 --> 00:18:22,120\nAnd people get intimidated.\n\n363\n00:18:22,120 --> 00:18:25,610\nBut the reality is you shouldn't\nhave to remember an IPv6 address.\n\n364\n00:18:25,610 --> 00:18:30,500\nIt's so automated, it does so\nmuch automatic configuration.\n\n365\n00:18:30,500 --> 00:18:33,630\nThat it's a rare day that you\nneed to type in an address.\n\n366\n00:18:33,630 --> 00:18:35,710\nAnd on those days when you do?\n\n367\n00:18:35,710 --> 00:18:38,150\nJust make sure you have a good\nDNS infrastructure in place and\n\n368\n00:18:38,150 --> 00:18:39,020\nyou won't have to do that either.\n\n369\n00:18:39,020 --> 00:18:39,710\nRight?\nAnd so\n\n370\n00:18:39,710 --> 00:18:42,430\nit's really not a big\ndeal to jump into IPv6.\n\n371\n00:18:43,470 --> 00:18:46,430\nAnd we're gonna see that as we start to\nconfigure it on some of the routers and\n\n372\n00:18:46,430 --> 00:18:48,030\nget that put in place.\n\n373\n00:18:48,030 --> 00:18:51,370\nBut those are some examples of\nthe addresses that we're gonna see.\n\n374\n00:18:51,370 --> 00:18:51,890\nRight?\n\n375\n00:18:51,890 --> 00:18:54,890\nWe talked about global unique.\n\n376\n00:18:54,890 --> 00:18:56,300\nHelp me out here, Ronnie.\n\n377\n00:18:56,300 --> 00:18:59,860\n>> Local, and then the unicast\nlocal as well, or local unicast.\n\n378\n00:18:59,860 --> 00:19:00,930\n>> Yep.\n\n379\n00:19:00,930 --> 00:19:05,000\nNow, when you were talking about\nlink-local, you mentioned EUI64.\n\n380\n00:19:05,000 --> 00:19:05,800\n>> I did.\n\n381\n00:19:05,800 --> 00:19:08,050\n>> All right,\nlet's talk about that a little bit.\n\n382\n00:19:08,050 --> 00:19:13,760\nWith EY 64 it's a mechanism that helps\nus automatically generate an address.\n\n383\n00:19:13,760 --> 00:19:16,390\nOne of the big challenges with\nautomatically generating an address is\n\n384\n00:19:16,390 --> 00:19:18,758\nthat you could duplicate somebody else's.\n\n385\n00:19:18,758 --> 00:19:20,210\nRight?\nAnd then you have a problem.\n\n386\n00:19:20,210 --> 00:19:23,315\nSo EUI 64 was created to try and\nsolve that.\n\n387\n00:19:23,315 --> 00:19:24,050\nRight?\n>> Yep.\n\n388\n00:19:24,050 --> 00:19:27,480\nWith EUI 64, I've got to remember\nwhat that stands for right now for\n\n389\n00:19:27,480 --> 00:19:28,126\nthe life of me.\n\n390\n00:19:28,126 --> 00:19:28,740\n>> [LAUGH] Extended, all right.\n\n391\n00:19:28,740 --> 00:19:30,320\n>> Extended Unique Identifier.\n\n392\n00:19:30,320 --> 00:19:32,290\nI actually did put it in the notes so\nwe're fine.\n\n393\n00:19:32,290 --> 00:19:34,180\n>> [LAUGH]\n>> I always get to that point where I say\n\n394\n00:19:34,180 --> 00:19:38,550\nEUI 64, I'm like I don't remember exactly\nbut Extended Unique Identifier, and\n\n395\n00:19:38,550 --> 00:19:42,150\nwhat this allows us to do in that,\nwhat we call interface identifier.\n\n396\n00:19:42,150 --> 00:19:45,400\nIn other words, not in a portion that's\ngonna be the routeable portion or\n\n397\n00:19:45,400 --> 00:19:50,190\nthe first 64 bits, but\nit's those last 64 bits.\n\n398\n00:19:50,190 --> 00:19:54,540\nAnd to help us, we need to make sure that\nthose last 64 bits which identifies that\n\n399\n00:19:54,540 --> 00:19:57,290\nparticular interface\nuniquely on our networks.\n\n400\n00:19:57,290 --> 00:20:00,290\nWe have to be able to come\nup with a unique number.\n\n401\n00:20:00,290 --> 00:20:04,960\nAnd the way that they've chosen to do that\nis to really take the MAC address itself.\n\n402\n00:20:06,060 --> 00:20:11,170\nAnd when they do that they pick up 48\nbits of that 64 bit address space.\n\n403\n00:20:11,170 --> 00:20:15,420\nWhich means that they leave 16\nbits that they have to fill in.\n\n404\n00:20:15,420 --> 00:20:20,010\nTo make sure that it was unique,\nthey essentially pulled 24 bits of\n\n405\n00:20:20,010 --> 00:20:25,130\nthe left hand side of that MAC address,\nand the other 24 bits,\n\n406\n00:20:25,130 --> 00:20:30,850\nand split it in the middle and\nadded in an FFFE in the middle.\n\n407\n00:20:30,850 --> 00:20:34,920\nAnd that really made those 48 bits\n\n408\n00:20:34,920 --> 00:20:39,610\ninto a very unique 64 bit address.\n\n409\n00:20:39,610 --> 00:20:44,020\nNow, to ensure that it was unique,\nfrom the very left-hand side,\n\n410\n00:20:44,020 --> 00:20:47,230\nin other words,\nusually what we would call the OUI number.\n\n411\n00:20:47,230 --> 00:20:52,830\nThe seventh bit of that,\nthey've also made that a special bit too.\n\n412\n00:20:52,830 --> 00:20:58,490\nUsually that ends up being a zero, that's\nnormally gonna be a, I think locally.\n\n413\n00:20:58,490 --> 00:21:00,140\nI can't remember.\n\n414\n00:21:00,140 --> 00:21:01,030\n>> The zero or the one?\n\n415\n00:21:01,030 --> 00:21:01,550\n>> Yeah, the zero or the one.\nYeah,\n\n416\n00:21:01,550 --> 00:21:03,200\nzero is locally administered and\none is global.\n\n417\n00:21:03,200 --> 00:21:04,740\n>> Yeah, locally administered.\n\n418\n00:21:04,740 --> 00:21:06,880\nAnd then if it actually becomes that zero,\nit's globally.\n\n419\n00:21:06,880 --> 00:21:09,020\nIn other words,\nyou don't have to worry about it.\n\n420\n00:21:09,020 --> 00:21:14,700\nSo those bits right there really also\nhelp to insure that we have that unique.\n\n421\n00:21:14,700 --> 00:21:17,310\nNow, it is a possibility\nthat it could be duplicated.\n\n422\n00:21:17,310 --> 00:21:19,500\nSomebody was able to spoof a MAC address.\n\n423\n00:21:19,500 --> 00:21:21,080\nBut normally that's not gonna happen.\n\n424\n00:21:21,080 --> 00:21:23,770\nAnd if it does, there's other\nthings working in the background\n\n425\n00:21:23,770 --> 00:21:28,660\nto help prevent that EUI 64 number\nfrom being duplicated as well.\n\n426\n00:21:28,660 --> 00:21:31,860\n>> Yeah this is another example\nof just great thinking.\n\n427\n00:21:31,860 --> 00:21:34,860\nIf you ever wonder there's\nthese people they go,\n\n428\n00:21:34,860 --> 00:21:36,702\nthey get and\nthey get PHDs in computer science.\n\n429\n00:21:36,702 --> 00:21:37,665\n>> [LAUGH]\n>> And you're like what do\n\n430\n00:21:37,665 --> 00:21:38,198\nthey do for a living?\n\n431\n00:21:38,198 --> 00:21:39,390\n>> Yeah.\n>> This is the kind of stuff they do,\n\n432\n00:21:39,390 --> 00:21:43,320\nthey think of amazing ideas that you look\nat it and you're like, wow that makes so\n\n433\n00:21:43,320 --> 00:21:45,190\nmuch sense, why didn't I think of that?\n\n434\n00:21:45,190 --> 00:21:48,890\nAnd it's usually because you're\nnot at the Einstein level genius.\n\n435\n00:21:48,890 --> 00:21:49,870\nRight?\nThese people are really,\n\n436\n00:21:49,870 --> 00:21:50,890\nreally intelligent.\n\n437\n00:21:50,890 --> 00:21:56,010\nAnd they said we need a way to guarantee\ncomputers don't get the same address, and\n\n438\n00:21:56,010 --> 00:21:59,290\nwhat we really need to\ndo is generate 64 bits,\n\n439\n00:21:59,290 --> 00:22:02,920\na 64 bit hexadecimal number\nthat we guarantee is unique.\n\n440\n00:22:02,920 --> 00:22:05,460\nNow a 64 bit hexadecimal is really,\nreally big.\n\n441\n00:22:05,460 --> 00:22:10,020\nSo odds are if you just auto-generated\none, you'd probably be safe.\n\n442\n00:22:10,020 --> 00:22:12,490\nBut, you don't wanna bank on\nthose odds if you can avoid it.\n\n443\n00:22:12,490 --> 00:22:17,910\nSo they said, man, where can we get\na hexadecimal number that's unique and\n\n444\n00:22:17,910 --> 00:22:19,040\nit's 64 bits.\n\n445\n00:22:19,040 --> 00:22:19,940\nWell they didn't know where.\n\n446\n00:22:19,940 --> 00:22:20,620\nRight?\n\n447\n00:22:20,620 --> 00:22:24,390\nBut if you look around on your computer,\nthat MAC address.\n\n448\n00:22:24,390 --> 00:22:27,670\nIt's 48 bits, it's hexadecimal,\nit's 48 bits, it's already there,\n\n449\n00:22:27,670 --> 00:22:28,900\nit's already unique.\n\n450\n00:22:28,900 --> 00:22:30,660\nAt 48 bits it's a rare,\n\n451\n00:22:30,660 --> 00:22:34,950\nrare day that you encounter network\nadapters that have the same MAC address.\n\n452\n00:22:34,950 --> 00:22:36,860\nAnd so they said look,\nlet's just reuse that.\n\n453\n00:22:36,860 --> 00:22:38,763\nThe only problem was that it\nwas short like you said Ronnie.\n\n454\n00:22:38,763 --> 00:22:40,580\n>> Yes.\n>> It was only 48 bits when\n\n455\n00:22:40,580 --> 00:22:43,190\nwe need it to be 64 and\nthat's where the padding comes in.\n\n456\n00:22:43,190 --> 00:22:47,580\nNow the padding gets confusing because\nof that administration bit that you were\n\n457\n00:22:47,580 --> 00:22:48,520\nmentioning Ronnie.\n\n458\n00:22:48,520 --> 00:22:51,840\nSo I wanna show you guys an example\nwith my laptop right here.\n\n459\n00:22:51,840 --> 00:22:52,540\nOkay.\n\n460\n00:22:52,540 --> 00:22:59,150\nSo what I did is I pulled up my laptop,\nand this is the link local address.\n\n461\n00:22:59,150 --> 00:23:04,991\nThat's assigned to my laptop right now.\n\n462\n00:23:04,991 --> 00:23:06,040\nOkay?\n\n463\n00:23:06,040 --> 00:23:09,479\nSo I've got this\nfe80::3e15:c2ff:fec7:f916.\n\n464\n00:23:09,479 --> 00:23:10,960\nAll right.\n\n465\n00:23:10,960 --> 00:23:12,187\nThis is my MAC address.\n\n466\n00:23:12,187 --> 00:23:12,720\nAll right.\n\n467\n00:23:13,790 --> 00:23:19,830\nSo this is the MAC address of my physical\nnetwork deck, 3c:15:c2:c7:f9:16.\n\n468\n00:23:19,830 --> 00:23:25,550\nNow when I look up here,\nI can see c7:f9:16 right there.\n\n469\n00:23:25,550 --> 00:23:29,060\nAnd when I look at my\nMac address c7:f9:16.\n\n470\n00:23:29,060 --> 00:23:33,310\nThat's the 24 bits,\nthe last 24 bits of my MAC address.\n\n471\n00:23:34,650 --> 00:23:42,222\nThe first 24 bit though are 3c:15:c2 and\nif I look up here I've got 3e15:c2.\n\n472\n00:23:42,222 --> 00:23:42,990\nAll right?\n\n473\n00:23:42,990 --> 00:23:44,280\nNot 3c but 3e.\n\n474\n00:23:45,390 --> 00:23:46,430\nWhat happened there?\n\n475\n00:23:48,730 --> 00:23:50,542\nWhat happened is that administration bit.\n\n476\n00:23:50,542 --> 00:23:51,440\nAll right?\n\n477\n00:23:51,440 --> 00:23:56,850\nIf this was locally administered\nit would be a zero and\n\n478\n00:23:56,850 --> 00:23:59,580\nI would end up with 3c like I expect.\n\n479\n00:23:59,580 --> 00:24:02,884\nBut because my system generated\nit based on my physical adapter,\n\n480\n00:24:02,884 --> 00:24:04,934\nmy physical adapter was assigned a MAC.\n\n481\n00:24:04,934 --> 00:24:08,206\nFrom the hardware\nmanufacturer it did a one.\n\n482\n00:24:08,206 --> 00:24:12,110\nSaying that it was globally unique,\nthis was assigned by the manufacturer.\n\n483\n00:24:12,110 --> 00:24:16,130\nAnd so that c became an e and\nnow it's 3e15:c2 and\n\n484\n00:24:16,130 --> 00:24:22,100\nright in the middle of\nthat address is ff:fe.\n\n485\n00:24:22,100 --> 00:24:25,550\nThere's that padding that Ronnie\nwas talking about where it's\n\n486\n00:24:25,550 --> 00:24:29,080\npadded that number out\nto basically be 64 bits.\n\n487\n00:24:30,620 --> 00:24:35,440\nAnd so this right here makes up the final\n64 bits of my linked local address.\n\n488\n00:24:35,440 --> 00:24:38,861\nThe first 64 bits I've got fe80::,\n\n489\n00:24:38,861 --> 00:24:43,151\nwhich means fe80, and\nthen three blocks of zeros.\n\n490\n00:24:43,151 --> 00:24:45,898\nIf we were to write that all the way out,\n\n491\n00:24:45,898 --> 00:24:49,411\nthere would be three more\nblocks of zeros in here.\n\n492\n00:24:49,411 --> 00:24:52,910\nThat would be the fully blown\nout address right there, and\n\n493\n00:24:52,910 --> 00:24:57,197\nit becomes a little bit easier to\nkind of see here's my first 64 bits,\n\n494\n00:24:57,197 --> 00:25:01,198\nthat's my network ID, and\na link local it'll look like this, and\n\n495\n00:25:01,198 --> 00:25:06,014\nthen here's my host ID, the remaining\n64 bits, and it's been EUI64'd.\n\n496\n00:25:06,014 --> 00:25:08,620\nNow, most people do use EUI64.\n\n497\n00:25:08,620 --> 00:25:10,420\nIt's super easy, you get a quick address,\n\n498\n00:25:10,420 --> 00:25:12,610\nyou don't have to configure anything,\nand you're done.\n\n499\n00:25:13,850 --> 00:25:15,370\nBut it's kind of hard to remember that.\n\n500\n00:25:15,370 --> 00:25:17,100\nI'm not gonna remember that address.\n\n501\n00:25:17,100 --> 00:25:20,950\nI don't remember my MAC address,\nbetter yet if we stick more bits on it.\n\n502\n00:25:20,950 --> 00:25:25,440\nSo you can manually set\nyour linked local address.\n\n503\n00:25:25,440 --> 00:25:32,075\nIf you want your linked local address\nto be fe80::1, you can do that.\n\n504\n00:25:32,075 --> 00:25:35,662\nThat's a perfectly valid linked local\naddress and it's easy to remember, and\n\n505\n00:25:35,662 --> 00:25:36,580\nnow you've set it.\n\n506\n00:25:36,580 --> 00:25:42,168\nOkay, now if I were to blow this\nout into the full addressing,\n\n507\n00:25:42,168 --> 00:25:46,040\nI'm gonna have all these blocks of zeros.\n\n508\n00:25:49,280 --> 00:25:50,350\nAm I going too far?\n\n509\n00:25:50,350 --> 00:25:52,150\nLet's see, one, two, three,\nfour, one, two, three\n\n510\n00:25:52,150 --> 00:25:53,300\n>> You got one more zero.\n\n511\n00:25:53,300 --> 00:25:53,920\n>> There.\n\n512\n00:25:53,920 --> 00:25:54,890\nRight?\n\n513\n00:25:54,890 --> 00:25:56,110\n>> I think you're missing one block.\n\n514\n00:25:56,110 --> 00:25:57,710\n>> One, two, three, four,\none, two, I am missing.\n\n515\n00:25:57,710 --> 00:25:58,660\nAll right.\n\n516\n00:25:58,660 --> 00:25:59,895\nThis is the problem with long addresses.\n\n517\n00:25:59,895 --> 00:26:00,859\n>> There we go.\n\n518\n00:26:00,859 --> 00:26:02,960\nSo if I were to blow that\nout into the full value.\n\n519\n00:26:02,960 --> 00:26:04,040\nWe see this long one.\n\n520\n00:26:04,040 --> 00:26:10,050\nNow notice up here it was this 3c\nbecame a 3e because of that bit change.\n\n521\n00:26:10,050 --> 00:26:12,550\nThat would actually be\noccurring right here.\n\n522\n00:26:12,550 --> 00:26:15,450\nBut because I made this address up myself,\n\n523\n00:26:15,450 --> 00:26:19,180\nthat bit needs to be a zero to represent\nthat it was locally generated.\n\n524\n00:26:19,180 --> 00:26:21,110\nAnd so this ends up being a zero.\n\n525\n00:26:21,110 --> 00:26:25,770\nAnd that makes these extremely\ncollapsible, very very small addresses.\n\n526\n00:26:25,770 --> 00:26:28,764\nI was able to write that as fe80::1.\n\n527\n00:26:28,764 --> 00:26:30,370\nEasy to remember.\n\n528\n00:26:30,370 --> 00:26:33,100\nSo, if you're statically\nassigning addresses and\n\n529\n00:26:33,100 --> 00:26:36,570\ntrying to make things small and\nyou can, and it's not so painful.\n\n530\n00:26:36,570 --> 00:26:41,720\nNormally I would do something like\nfd00: and then specify a network,\n\n531\n00:26:41,720 --> 00:26:46,190\nmaybe this is network number five and\nthen the host or whatever.\n\n532\n00:26:46,190 --> 00:26:48,710\nNow those addresses are so small, so\n\n533\n00:26:48,710 --> 00:26:52,460\neasy to remember and you're not\nintimidated by the address base anymore.\n\n534\n00:26:53,675 --> 00:26:58,065\nBut, when we do this, you need to remember\nthat this is the linked local address.\n\n535\n00:26:58,065 --> 00:27:01,315\nYou might also have your\nglobally unique address, and so\n\n536\n00:27:01,315 --> 00:27:04,265\none might not match the other, unless you\ngo in and statically set that one, too.\n\n537\n00:27:04,265 --> 00:27:07,375\nSo statically setting an IP address,\ndefinitely possibly, and\n\n538\n00:27:07,375 --> 00:27:09,895\nnot even all that uncommon when\nit comes to networking gear.\n\n539\n00:27:11,925 --> 00:27:12,735\nAll right, so\n\n540\n00:27:12,735 --> 00:27:15,075\nwe've talked about some of the different\naddress bases that were out there.\n\n541\n00:27:16,140 --> 00:27:19,268\nWe talked about the different\ntypes of addresses in IPv6 and\n\n542\n00:27:19,268 --> 00:27:22,540\nthen we just talked about EUI64 and\nauto generation but\n\n543\n00:27:22,540 --> 00:27:27,800\nup until this point, we really haven't\nseen how this works on a Cisco router.\n\n544\n00:27:27,800 --> 00:27:29,740\nAnd that's what we wanna see next.\n\n545\n00:27:29,740 --> 00:27:32,910\nBut looking at the clock this is a good\nspot for us to stop and take a break.\n\n546\n00:27:32,910 --> 00:27:34,311\nSo let's pause here and take a breather.\n\n547\n00:27:34,311 --> 00:27:37,400\nWhen we get back, we'll see this\nin action on a Cisco router.\n\n548\n00:27:37,400 --> 00:27:39,757\nStay tuned, we'll be back after this.\n\n549\n00:27:39,757 --> 00:27:43,194\n[SOUND] All right,\n\n550\n00:27:43,194 --> 00:27:48,242\nwelcome back everybody.\n\n551\n00:27:48,242 --> 00:27:52,070\nSo in the first segment we talked\nabout the addressing that's out there.\n\n552\n00:27:52,070 --> 00:27:55,280\nAnd we talked a little bit about\nhow IPv6 kind of functions.\n\n553\n00:27:55,280 --> 00:27:59,490\nAnd we were building ourselves up to\nactually deploy this onto our routers.\n\n554\n00:27:59,490 --> 00:28:02,880\nAnd what we want to do is show how\nautomatic a lot of this stuff is.\n\n555\n00:28:02,880 --> 00:28:05,460\nAnd how simple it is to get it configured.\n\n556\n00:28:05,460 --> 00:28:11,300\nThe linked local addresses automatically\ngenerate the moment you turn IPv6 on.\n\n557\n00:28:11,300 --> 00:28:15,640\nAnd then as you start to communicate,\nyour router can actually be configured to\n\n558\n00:28:15,640 --> 00:28:18,960\neducate all the other systems out there on\nthe network about what network you're on,\n\n559\n00:28:18,960 --> 00:28:20,370\nand what address they should have,\nand so on.\n\n560\n00:28:20,370 --> 00:28:21,730\nIt's actually pretty neat.\n\n561\n00:28:21,730 --> 00:28:25,514\nSo that's what we're gonna look at\nthe rest of the show, but before we dive\n\n562\n00:28:25,514 --> 00:28:29,678\ninto that, I do want to cover a little bit\nof alphabet soup before we jump in there.\n\n563\n00:28:29,678 --> 00:28:31,624\nBecause we've got ND, NA, NS,\n\n564\n00:28:31,624 --> 00:28:36,283\nRA, RS which are all different types of\ncommunications that we have on IPv6 and\n\n565\n00:28:36,283 --> 00:28:40,892\nI think that I threw out MLD earlier so\nwe might as well get that one there, too.\n\n566\n00:28:40,892 --> 00:28:42,611\nSee how many crazy letters we can get.\n\n567\n00:28:42,611 --> 00:28:43,911\nLet's start with ND.\n\n568\n00:28:43,911 --> 00:28:46,279\nND is neighbor discovery.\n\n569\n00:28:46,279 --> 00:28:50,817\nRemember I mentioned early in the show\nthat IPv6 does not have broadcast anymore.\n\n570\n00:28:50,817 --> 00:28:53,889\nIt used to be under IPv4, if you wanted\nto find other people on the network,\n\n571\n00:28:53,889 --> 00:28:55,670\nthe easiest way was to\nsend out a broadcast.\n\n572\n00:28:55,670 --> 00:28:56,810\nA message to everybody.\n\n573\n00:28:56,810 --> 00:28:59,740\nJust say, hey, is so and so out there.\n\n574\n00:28:59,740 --> 00:29:02,070\nAnd you knew they'd get the message,\nbecause it was a broadcast.\n\n575\n00:29:02,070 --> 00:29:03,170\nIt went everywhere.\n\n576\n00:29:03,170 --> 00:29:05,330\nEverywhere in your LAN.\n\n577\n00:29:05,330 --> 00:29:08,090\nWell, in IPv6 we can't do that anymore.\n\n578\n00:29:08,090 --> 00:29:11,140\nSo instead we need to\ncommunicate using multicast.\n\n579\n00:29:11,140 --> 00:29:14,170\nAnd multicast is session based so\nwe gotta wait for this session to connect.\n\n580\n00:29:15,500 --> 00:29:17,950\nWell, it's kind of a one way session so\nit's not a true session.\n\n581\n00:29:17,950 --> 00:29:22,280\nBut it does require a listener\nbasically to be ready and listening for\n\n582\n00:29:22,280 --> 00:29:23,490\nthese communications to occur.\n\n583\n00:29:23,490 --> 00:29:25,220\nSo it's similar to a session.\n\n584\n00:29:25,220 --> 00:29:31,070\nWell, ND neighbor discovery is what\npowers this, and there's two sides to it.\n\n585\n00:29:31,070 --> 00:29:36,614\nSo ND is the overall name, neighbor\ndiscovery, and inside it we have neighbor\n\n586\n00:29:36,614 --> 00:29:42,720\nadvertising, or advertisement, and\nneighbor solicitation, NA, and NS.\n\n587\n00:29:42,720 --> 00:29:45,230\nSo let's talk about those,\nRonnie, what is NA?\n\n588\n00:29:45,230 --> 00:29:47,550\n>> When we take a look at\nneighbor advertisement.\n\n589\n00:29:47,550 --> 00:29:50,640\nThis is the stuff that\nthe neighbor is going to say hey,\n\n590\n00:29:50,640 --> 00:29:53,940\nhere's what you need to know about me.\n\n591\n00:29:53,940 --> 00:29:57,650\nSo a lot of times it's a response to\nwhat we call that neighbor solicitation.\n\n592\n00:29:57,650 --> 00:30:01,030\nSomeone asking us for information.\n\n593\n00:30:01,030 --> 00:30:04,640\nSo when we start doing neighbor discovery,\nit's usually an ICMP message saying hey,\n\n594\n00:30:04,640 --> 00:30:06,770\nI need to find out more\ninformation about you.\n\n595\n00:30:06,770 --> 00:30:10,270\nThat would be kind of the basics\nof that neighbor solicitation.\n\n596\n00:30:10,270 --> 00:30:13,790\nThe advertisement is now\nthe neighbor responding back.\n\n597\n00:30:13,790 --> 00:30:17,190\nSo as long as you're on that same length,\nyou're usually gonna get this\n\n598\n00:30:17,190 --> 00:30:22,290\nlayer two addressing coming back and\nforth across that particular length.\n\n599\n00:30:22,290 --> 00:30:25,980\n>> Yeah, now that neighbor advertisement,\nit can be polled,\n\n600\n00:30:25,980 --> 00:30:28,680\nwhich is what Ronnie was describing,\nor it can be periodic.\n\n601\n00:30:28,680 --> 00:30:31,220\nIn the polled environment,\nit's exactly like Ronnie said.\n\n602\n00:30:31,220 --> 00:30:34,200\nSomebody sends out a solicitation.\n\n603\n00:30:34,200 --> 00:30:37,250\nI'm trying to find this neighbor,\nI need more information on them.\n\n604\n00:30:37,250 --> 00:30:40,960\nAnd, we hear it because we're listening\non that multicast address, and\n\n605\n00:30:40,960 --> 00:30:42,740\nwe respond with our advertisement.\n\n606\n00:30:42,740 --> 00:30:45,570\nThat's polled,\nwe polled to get the advertisement back.\n\n607\n00:30:45,570 --> 00:30:49,770\nA periodic one though, is where\nyou're node will just periodically,\n\n608\n00:30:49,770 --> 00:30:51,350\njust every now and then, tell the network,\n\n609\n00:30:51,350 --> 00:30:54,440\nhey guys, I'm here,\njust wanna let you know I'm pretty cool.\n\n610\n00:30:54,440 --> 00:30:54,970\nI'm sitting here.\n\n611\n00:30:54,970 --> 00:30:57,600\nIf you guys need anything just let\nme know, I'm available, right.\n\n612\n00:30:57,600 --> 00:31:01,608\nThat is a periodic advertisement.\n\n613\n00:31:01,608 --> 00:31:06,280\nNow, your PCs, your laptops, your cell\nphones, they don't really need to do a lot\n\n614\n00:31:06,280 --> 00:31:09,920\nof periodic advertisement, but we're\ngonna see it's different with routers.\n\n615\n00:31:09,920 --> 00:31:13,620\nWith routers, you want them\nadvertising themselves on the network,\n\n616\n00:31:13,620 --> 00:31:17,080\nbecause you might have one more than\ngateway to get out of your network, and\n\n617\n00:31:17,080 --> 00:31:18,520\nyour machines need to learn about that.\n\n618\n00:31:18,520 --> 00:31:20,960\nIf you bring up a new router,\nyou want your machines to learn about it.\n\n619\n00:31:20,960 --> 00:31:24,380\nSo they'll do periodic advertising to make\nsure that everybody knows about them.\n\n620\n00:31:24,380 --> 00:31:27,290\nBut just be aware the advertisements\ncan run both ways.\n\n621\n00:31:27,290 --> 00:31:31,100\nEither an advertisement that's\ninitiated by a solicitation or\n\n622\n00:31:31,100 --> 00:31:33,260\nan advertisement that's\njust initiated by a timer.\n\n623\n00:31:33,260 --> 00:31:36,260\nA certain amount of time passed,\ntime to do an advertisement.\n\n624\n00:31:36,260 --> 00:31:39,460\nBut that's a piece of neighbor discovery.\n\n625\n00:31:39,460 --> 00:31:42,590\nAnd that makes it where when our computers\ncome up and they get that linked local\n\n626\n00:31:42,590 --> 00:31:47,700\naddress and they see the local network,\nright, that they can find the other\n\n627\n00:31:47,700 --> 00:31:51,919\nclients that are out there, and they can\ncommunicate all without using broadcast.\n\n628\n00:31:53,060 --> 00:31:56,990\nNow when we bring a router into the mix\nthat's where it gets really important.\n\n629\n00:31:56,990 --> 00:31:59,460\nHere's where we have RA and RS.\n\n630\n00:31:59,460 --> 00:32:00,554\nRouter advertisement and\n\n631\n00:32:00,554 --> 00:32:03,389\nrouter solicitation which is just\nlike neighbor advertisement and\n\n632\n00:32:03,389 --> 00:32:05,654\nneighbor solicitation it's just\n>> These are routers.\n\n633\n00:32:05,654 --> 00:32:07,584\nNow why is a router important to us,\nRonnie?\n\n634\n00:32:07,584 --> 00:32:12,271\n>> Yeah, routers important to us,\nbecause of the way that IP version six\n\n635\n00:32:12,271 --> 00:32:16,887\nis going to start try to group our\nIP version six addresses together.\n\n636\n00:32:16,887 --> 00:32:22,483\nSo when I have another router and\nit's looking for how is my global address\n\n637\n00:32:22,483 --> 00:32:27,553\ngonna be or my local unicast,\nif I can remember what it's called.\n\n638\n00:32:27,553 --> 00:32:29,078\n>> [LAUGH]\n>> Well, what's that gonna be.\n\n639\n00:32:29,078 --> 00:32:33,674\nWell, it's normally gonna send out\na message, a router solicitation saying,\n\n640\n00:32:33,674 --> 00:32:36,725\nhey, I want to determine\nwhat my address is gonna be.\n\n641\n00:32:36,725 --> 00:32:39,820\nAs a host, I want to determine that.\n\n642\n00:32:39,820 --> 00:32:43,024\nSo if that router is usually\nrunning an any cast address,\n\n643\n00:32:43,024 --> 00:32:47,296\nwhich most of them are probably going\nto be doing, then they can respond back\n\n644\n00:32:47,296 --> 00:32:51,637\nwith a router advertisement and get that\nnetwork portion of the their address\n\n645\n00:32:51,637 --> 00:32:55,881\nassigned to them through learning\nabout that through the advertisement.\n\n646\n00:32:55,881 --> 00:33:00,012\n>> Yeah, now when a router comes up, it's\nadvertising itself just like a neighbor,\n\n647\n00:33:00,012 --> 00:33:02,856\nso might ask yourself why not\njust do the neighbor stuff.\n\n648\n00:33:02,856 --> 00:33:05,184\nThere's two pieces about\na router that are important.\n\n649\n00:33:05,184 --> 00:33:07,506\nRonnie, you mentioned\nthe network that you're on.\n\n650\n00:33:07,506 --> 00:33:11,152\nThe first 64 bits of your address, if\nyou're trying to automatically configure\n\n651\n00:33:11,152 --> 00:33:13,651\nan address, you need to know\nwhat network you're on, so\n\n652\n00:33:13,651 --> 00:33:16,742\nthe router can communicate that as\nwell as communicating the prefix.\n\n653\n00:33:16,742 --> 00:33:20,178\nYour prefix in an IPv6 address is\nyour network ID and then everything\n\n654\n00:33:20,178 --> 00:33:24,280\nthat follows that is your host ID, what\nidentifies you as an individual machine.\n\n655\n00:33:24,280 --> 00:33:26,649\nSo the router can tell\nyou what prefix to use.\n\n656\n00:33:26,649 --> 00:33:28,634\nHey, welcome to the network.\n\n657\n00:33:28,634 --> 00:33:30,155\nI see you're on a link local address.\n\n658\n00:33:30,155 --> 00:33:34,619\nIf you want, go ahead and auto-generate an\naddress in this prefix in this network and\n\n659\n00:33:34,619 --> 00:33:37,165\nyou will be able to see\neverybody else just fine.\n\n660\n00:33:37,165 --> 00:33:38,923\nThat's one piece.\n\n661\n00:33:38,923 --> 00:33:41,530\nThe second piece is, it's a router.\n\n662\n00:33:41,530 --> 00:33:42,366\nIt's a gateway.\n\n663\n00:33:42,366 --> 00:33:45,501\nIt says oh, by the way,\nif you need to talk to some other network,\n\n664\n00:33:45,501 --> 00:33:47,443\njust let me know, just come through me.\n\n665\n00:33:47,443 --> 00:33:49,544\nI'm a router,\nI can get you to other places.\n\n666\n00:33:49,544 --> 00:33:53,201\nSo we learn about our gateway,\nwe learn about our router.\n\n667\n00:33:53,201 --> 00:33:56,955\nSo through a router solicitation and\na router advertisement, we can learn what\n\n668\n00:33:56,955 --> 00:34:00,315\nnetwork we're on, which helps us\nauto configure the right address and\n\n669\n00:34:00,315 --> 00:34:02,963\nwe can learn what default\ngateway we need to go through.\n\n670\n00:34:02,963 --> 00:34:05,883\nNow in your mind, you're thinking\nthis sounds a lot like DHCP.\n\n671\n00:34:05,883 --> 00:34:06,824\nWell, it is.\n\n672\n00:34:06,824 --> 00:34:12,414\nDHCP gives us an address and it gives us\na router to use, but DHCP is stateful.\n\n673\n00:34:12,414 --> 00:34:14,097\nIt keeps a database of all those entries.\n\n674\n00:34:14,097 --> 00:34:17,749\nHere where we're talking about the router\nadvertisements, this is stateless.\n\n675\n00:34:17,749 --> 00:34:21,639\nThe clients get what network they're on,\nbut they generate their own address.\n\n676\n00:34:21,639 --> 00:34:24,432\nThat's not stored in a database somewhere\nand they learn the router used,\n\n677\n00:34:24,432 --> 00:34:26,129\nthey get that from the router and\nthat's it.\n\n678\n00:34:26,129 --> 00:34:27,581\nThere's no record of it.\n\n679\n00:34:27,581 --> 00:34:29,374\nThere's no lease time or anything.\n\n680\n00:34:29,374 --> 00:34:33,268\nSo very different than DHCP from those\naspects, but they get their address and\n\n681\n00:34:33,268 --> 00:34:34,626\nnow they can communicate.\n\n682\n00:34:34,626 --> 00:34:38,531\nThe only problem is you can only get so\nfar with an IP address and\n\n683\n00:34:38,531 --> 00:34:39,820\na default gateway.\n\n684\n00:34:39,820 --> 00:34:42,183\nWe normally, want to have more.\n\n685\n00:34:42,183 --> 00:34:45,489\nWe want to have DNS server,\na domain name, a time server,\n\n686\n00:34:45,489 --> 00:34:48,066\nall the other things\nthat DHCP might give us.\n\n687\n00:34:48,066 --> 00:34:53,682\nIPv6 does support DHCP,\nwe'll see that at the end of the show,\n\n688\n00:34:53,682 --> 00:34:58,888\nwe'll DHCPv6, but\nyou can also do what's called SLAAC.\n\n689\n00:34:58,888 --> 00:34:59,944\nS-L-A-A-C.\n\n690\n00:34:59,944 --> 00:35:00,885\n>> Yeah.\n\n691\n00:35:00,885 --> 00:35:02,202\n>> And that's kind of a neat one,\n\n692\n00:35:02,202 --> 00:35:04,794\ncuz really just an extension\nof our router advertisements.\n\n693\n00:35:04,794 --> 00:35:05,456\n>> Yeah.\n\n694\n00:35:05,456 --> 00:35:09,722\nSLAAC stands for\nstateless address autoconfiguration and\n\n695\n00:35:09,722 --> 00:35:15,010\neven though the words are kind of\ncombined together, usually you see them\n\n696\n00:35:15,010 --> 00:35:20,312\nall written in capital letters for\nS-L-A-A-C, if I said that right.\n\n697\n00:35:20,312 --> 00:35:23,893\n[CROSSTALK] And so,\na lot of times you'll see that.\n\n698\n00:35:23,893 --> 00:35:26,595\nAnd so when they talk about\nstateless autoconfiguration,\n\n699\n00:35:26,595 --> 00:35:29,196\nthe stateless part means we're\nnot keeping track of it.\n\n700\n00:35:29,196 --> 00:35:34,053\nAnd the device can autogenerate a lot of\nstuff that you would normally think about\n\n701\n00:35:34,053 --> 00:35:36,940\neven in DHCP as far as\nthe address portion.\n\n702\n00:35:36,940 --> 00:35:39,610\nBut not all of the other stuff\nthat Don was talking about,\n\n703\n00:35:39,610 --> 00:35:42,793\nsuch as the DNS servers and all of\nthat unless we get it all set up too.\n\n704\n00:35:42,793 --> 00:35:44,685\n>> So Ronnie, let's do this.\n\n705\n00:35:44,685 --> 00:35:47,947\nLet's do a really basic IPv6\nconfiguration, just to show two nodes\n\n706\n00:35:47,947 --> 00:35:51,843\ntalking and then we'll step it up a notch\nand we'll do the stateless autoconfig.\n\n707\n00:35:51,843 --> 00:35:54,241\nAnd that way,\nwe get a chance to see how quickly and\n\n708\n00:35:54,241 --> 00:35:58,146\neasily we can bring an IPv6 network up and\nget it routing and moving on a network.\n\n709\n00:35:58,146 --> 00:36:01,983\nAnd then after we've finished all that\ntowards the end of the show, we'll do DHCP\n\n710\n00:36:01,983 --> 00:36:05,614\nversion six and that's one of the parts\nthat a lot of a textbooks are lacking.\n\n711\n00:36:05,614 --> 00:36:08,636\nA lot of them don't have that example of\nhow to do DHCPv6, but it's pretty easy.\n\n712\n00:36:08,636 --> 00:36:10,076\nWe'll knock it out.\n\n713\n00:36:10,076 --> 00:36:13,692\nSo let's start with some basic\nfunctionality, I've got two routers here.\n\n714\n00:36:13,692 --> 00:36:17,436\nI've got a router called headquarters and\nI've got a branch router called BR1 and\n\n715\n00:36:17,436 --> 00:36:21,076\nthey've got a metro Ethernet connection,\njust a 10 meg link in between them,\n\n716\n00:36:21,076 --> 00:36:22,326\nwhich I think is turned on.\n\n717\n00:36:22,326 --> 00:36:26,538\n[LAUGH] I guess, I should double check\nthat and make sure that it is actually up.\n\n718\n00:36:26,538 --> 00:36:30,688\nSo, I've got these two links and\nit's just connecting the two systems.\n\n719\n00:36:30,688 --> 00:36:33,945\nI've got IPv4 addresses on them,\nbut I'm going to ignore IPv4.\n\n720\n00:36:33,945 --> 00:36:38,525\nNow remember for IPv6,\nthe commands are almost identical to IPv4,\n\n721\n00:36:38,525 --> 00:36:42,339\njust anywhere you'd say,\nIP before, now you say IPv6.\n\n722\n00:36:42,339 --> 00:36:47,406\nSo instead of show IP int brief,\nwhich is one of my favorite commands.\n\n723\n00:36:47,406 --> 00:36:51,509\nI would instead say,\nshow IPv6 interface brief and\n\n724\n00:36:51,509 --> 00:36:54,690\nnow I see that additional information.\n\n725\n00:36:56,140 --> 00:37:01,041\nNow if I wanna get these guys configured,\nall I have to do is jump into my\n\n726\n00:37:01,041 --> 00:37:05,878\nconfiguration, jump into a interface and\nassign an IPv6 address.\n\n727\n00:37:05,878 --> 00:37:10,956\nSo I can say, IPv6 address and then\nwhatever it is I want that address to be.\n\n728\n00:37:10,956 --> 00:37:14,589\nIf I want it to be\nautomatically configured,\n\n729\n00:37:14,589 --> 00:37:18,137\nI can do that too or\nI can just leave this off.\n\n730\n00:37:18,137 --> 00:37:23,129\nIf I just say IPv6 enable,\nthat's gonna turn on IPv6.\n\n731\n00:37:23,129 --> 00:37:25,381\nAnd remember,\nthe address that I said we'd always have?\n\n732\n00:37:25,381 --> 00:37:28,830\nWe'll always have a link local address.\n\n733\n00:37:28,830 --> 00:37:34,420\nSo when I do IPv6 enable,\nit's gonna get a link local address.\n\n734\n00:37:34,420 --> 00:37:38,723\nLet me do a no shutdown and\nbring that interface up and I'll go and\n\n735\n00:37:38,723 --> 00:37:42,162\ndo the same thing on the other side for\nthis router.\n\n736\n00:37:42,162 --> 00:37:47,386\nSo I'm gonna do IPv6 enable and\nno shutdown to bring that up.\n\n737\n00:37:47,386 --> 00:37:49,979\nNow I'm running IPv4 and\nIPv6 at the same time,\n\n738\n00:37:49,979 --> 00:37:54,256\nthat's called a dual stack configuration,\nwhich every Cisco router supports.\n\n739\n00:37:54,256 --> 00:37:57,729\nSo no big deal there, but\nit's up and running and\n\n740\n00:37:57,729 --> 00:38:00,797\nI should have a link to\na local address now.\n\n741\n00:38:00,797 --> 00:38:07,763\nIf I do a show ipv6 int e0/0\".\n\n742\n00:38:07,763 --> 00:38:13,080\nWhen I look at my information,\nright here I can see my IPv6 is enabled.\n\n743\n00:38:13,080 --> 00:38:18,041\nI have a link global address and\nthere it is and it's FE80:: and then for\n\n744\n00:38:18,041 --> 00:38:22,531\nthe remaining 64 bits I've got my\nMac address with an FF:FE right\n\n745\n00:38:22,531 --> 00:38:25,955\nthere in the middle,\nit did EUI-64 by default.\n\n746\n00:38:25,955 --> 00:38:28,149\nSome systems do that, some don't.\n\n747\n00:38:28,149 --> 00:38:30,752\nLike Microsoft Windows,\nthey don't do EUI-64 by default,\n\n748\n00:38:30,752 --> 00:38:31,965\nthey do a random generation.\n\n749\n00:38:31,965 --> 00:38:36,052\nSo it may be that way,\nit may be like this just depends.\n\n750\n00:38:36,052 --> 00:38:38,710\nBut here I did, I got that link local and\nI'm in business.\n\n751\n00:38:38,710 --> 00:38:41,494\nNow as I look down the line though,\n\n752\n00:38:41,494 --> 00:38:45,825\nI'll see things like no\nnotes in here about routers.\n\n753\n00:38:45,825 --> 00:38:48,705\nIt hasn't discovered any routers\non the network or anything,\n\n754\n00:38:48,705 --> 00:38:52,416\nI'm just a regular client and I'm looking\nfor other clients that are out there.\n\n755\n00:38:52,416 --> 00:38:55,841\nBut you'll see down here in the list,\nhere's my neighbor discovery and\n\n756\n00:38:55,841 --> 00:38:59,618\nI've got a neighbor discovery\nreachable time of 30,000 milliseconds.\n\n757\n00:38:59,618 --> 00:39:03,734\nThat means if I find a client out there\nand I don't hear from them for 30 seconds,\n\n758\n00:39:03,734 --> 00:39:08,166\nI'll assume that they're unreachable and\nI'll remove them from my own little cache.\n\n759\n00:39:08,166 --> 00:39:09,861\nSo they're not cached anymore.\n\n760\n00:39:09,861 --> 00:39:14,063\nAnd right above it DAD,\nthat's Duplicate Address Detection.\n\n761\n00:39:14,063 --> 00:39:18,694\nSo DAD is basically, when you generate\nyour address in your auto-generation,\n\n762\n00:39:18,694 --> 00:39:22,020\nthere's a possibility\nyou'll get a duplicate.\n\n763\n00:39:22,020 --> 00:39:24,300\nAnd if that happens and\nyou need to know that, so\n\n764\n00:39:24,300 --> 00:39:26,910\nyou can move to a different address and\nthat's what DAD does.\n\n765\n00:39:26,910 --> 00:39:30,346\nAnd I can see that I've done one DAD\nattempt, which is what you expect to see.\n\n766\n00:39:30,346 --> 00:39:33,103\nI picked an address, I tested it.\n\n767\n00:39:33,103 --> 00:39:34,609\nIt tested fine.\nIf you see two or three,\n\n768\n00:39:34,609 --> 00:39:37,300\nthat indicate the hit duplicate and\nhad try again.\n\n769\n00:39:37,300 --> 00:39:39,383\nSo you expect to see one.\n\n770\n00:39:39,383 --> 00:39:43,316\nNow if I take this link local address and\nI'm just gonna copy that and\n\n771\n00:39:43,316 --> 00:39:47,951\nI'll jump over to my other router, my\nother router should have the same thing.\n\n772\n00:39:47,951 --> 00:39:51,556\nSo if I do a show ipv6 int e0/0,\nit's got a link local address right there.\n\n773\n00:39:51,556 --> 00:39:55,521\nAnd no information in\nthere about any routers,\n\n774\n00:39:55,521 --> 00:39:59,298\nI didn't actually bring up an IPv6 router.\n\n775\n00:39:59,298 --> 00:40:02,533\nKey thing to remember there for the exam,\n\n776\n00:40:02,533 --> 00:40:08,000\nCisco routers have IPv6 enabled\nby default, but not IPv6 routing.\n\n777\n00:40:08,000 --> 00:40:10,633\nSo, I'm just an IPv6 client right now.\n\n778\n00:40:10,633 --> 00:40:13,790\nWhen you do IPv6 enable on an interface,\nyou're just a client.\n\n779\n00:40:13,790 --> 00:40:17,020\nSo I don't technically have any\nrouters for IPv6 on my network.\n\n780\n00:40:18,683 --> 00:40:22,690\nBut if I try and\nping the link local of the other node.\n\n781\n00:40:22,690 --> 00:40:23,200\nRight?\n\n782\n00:40:23,200 --> 00:40:24,210\nSo this is the other node.\n\n783\n00:40:24,210 --> 00:40:24,790\nMine ends in 100.\n\n784\n00:40:24,790 --> 00:40:26,680\nThe other guy ends in 200.\n\n785\n00:40:26,680 --> 00:40:31,190\nI'm gonna try and ping them, I have to\nspecify my interface that I wanna use.\n\n786\n00:40:31,190 --> 00:40:33,590\nI have to specify an interface,\nbecause in IPv6,\n\n787\n00:40:33,590 --> 00:40:36,530\nthat address could be attached as\nan anycast, we could attach anywhere.\n\n788\n00:40:36,530 --> 00:40:37,100\nRight?\nSo\n\n789\n00:40:37,100 --> 00:40:39,570\nI have to tell it what interface\nto use and there we go.\n\n790\n00:40:39,570 --> 00:40:41,960\nI ping, and get right over to it.\n\n791\n00:40:41,960 --> 00:40:46,820\nAnd unlike in our last episode of IPv4,\nmy first ping didn't fail.\n\n792\n00:40:46,820 --> 00:40:49,410\nIt didn't fail because I didn't have\nto do an ARP broadcast and wait for\n\n793\n00:40:49,410 --> 00:40:51,020\na response and all that stuff.\n\n794\n00:40:51,020 --> 00:40:52,460\nWe've already done neighbor discovery.\n\n795\n00:40:52,460 --> 00:40:54,540\nI already know about that\nneighbor that's out there.\n\n796\n00:40:54,540 --> 00:40:58,420\nPing, successful right from the beginning.\n\n797\n00:40:58,420 --> 00:41:00,570\nRight?\nSo, basic IPv6 functionality\n\n798\n00:41:00,570 --> 00:41:01,390\nis nothing to it.\n\n799\n00:41:01,390 --> 00:41:03,450\nRight?\nJust knock it in there and you're done.\n\n800\n00:41:03,450 --> 00:41:04,810\n>> Yeah.\nThe hardest part of that\n\n801\n00:41:04,810 --> 00:41:09,158\nconfiguration is what Don mentioned at the\nbeginning, is getting used to typing IPv6.\n\n802\n00:41:09,158 --> 00:41:12,740\nAnd I know that sounds strange,\n\n803\n00:41:12,740 --> 00:41:17,230\nbut when you've been doing your CCNA\nstudies and getting up to this point.\n\n804\n00:41:17,230 --> 00:41:20,210\nYou're so used to typing an IP address or\n\n805\n00:41:20,210 --> 00:41:22,950\nIP anything that you forget\nabout that v6 portion.\n\n806\n00:41:22,950 --> 00:41:24,080\nAnd then when you go and try and\n\n807\n00:41:24,080 --> 00:41:26,920\nsee if this is working,\nyou're wondering why it isn't?\n\n808\n00:41:26,920 --> 00:41:28,260\nIt's usually that.\n\n809\n00:41:28,260 --> 00:41:30,320\nSo everything else is\nworking just the same,\n\n810\n00:41:30,320 --> 00:41:34,630\nthe only thing that we did differently is\nwe told that interface to discover its\n\n811\n00:41:34,630 --> 00:41:37,510\nown, by doing the IPv6 enable.\n\n812\n00:41:37,510 --> 00:41:40,290\nTo essentially generate it's\nown link local address.\n\n813\n00:41:40,290 --> 00:41:42,630\nBesides that it really\nis working the same.\n\n814\n00:41:42,630 --> 00:41:43,800\n>> Yeah.\n\n815\n00:41:43,800 --> 00:41:45,830\nNow a couple of the neat\ncommands that we can use here.\n\n816\n00:41:45,830 --> 00:41:48,300\nI'm gonna jump back over to my branch.\n\n817\n00:41:48,300 --> 00:41:51,780\nAnd remember I mentioned there was\nnothing in here that showed me\n\n818\n00:41:51,780 --> 00:41:52,995\nthat I've learned about routers.\n\n819\n00:41:52,995 --> 00:41:54,890\nRight?\nThere's actually a neat little command\n\n820\n00:41:54,890 --> 00:41:56,665\nthat more people should use.\n\n821\n00:41:56,665 --> 00:41:58,750\n>> [LAUGH]\n>> It's a show IPv6 routers.\n\n822\n00:42:00,010 --> 00:42:01,260\nAnd what that'll do,\n\n823\n00:42:01,260 --> 00:42:04,540\nis it'll display a list of all the IPv6\nrouters that you've found out about.\n\n824\n00:42:04,540 --> 00:42:08,530\nOn your IPv4 you'd usually only have\none gateway and that was it, but\n\n825\n00:42:08,530 --> 00:42:10,020\non IPv6 you can have more than one.\n\n826\n00:42:10,020 --> 00:42:12,480\nSo this would list all\nthe routers that it's found.\n\n827\n00:42:12,480 --> 00:42:14,840\nWell I've got basic auto\nconfig working here.\n\n828\n00:42:14,840 --> 00:42:16,980\nI haven't really learned\nany settings off of it.\n\n829\n00:42:16,980 --> 00:42:18,092\nRight?\nThe very, very basic stuff.\n\n830\n00:42:18,092 --> 00:42:19,190\nAll right.\n\n831\n00:42:19,190 --> 00:42:21,210\nI'm going to combine this\nwith another command.\n\n832\n00:42:21,210 --> 00:42:25,190\nI'm gonna do debug IPv6 nd.\n\n833\n00:42:25,190 --> 00:42:28,270\nAll right.\nI'm gonna debug neighbor discovery.\n\n834\n00:42:28,270 --> 00:42:29,950\nNeighbor discovery is\nrunning in the background.\n\n835\n00:42:29,950 --> 00:42:33,090\nI'm doing neighbor advertisement,\nneighbor solicitations.\n\n836\n00:42:33,090 --> 00:42:35,140\nI'm doing mostly solicitations from here.\n\n837\n00:42:35,140 --> 00:42:36,290\nRouter solicitations.\n\n838\n00:42:36,290 --> 00:42:36,860\nRight?\nTrying\n\n839\n00:42:36,860 --> 00:42:39,070\nto find a router that's\nout there on the network.\n\n840\n00:42:39,070 --> 00:42:41,070\nRight now it's pretty quiet,\ncause my network's already up.\n\n841\n00:42:41,070 --> 00:42:43,380\nIf I were to shut the interface down and\nbring it back up, that would change.\n\n842\n00:42:43,380 --> 00:42:47,500\nI'm gonna leave that debug running,\nand I'm gonna take headquarters.\n\n843\n00:42:47,500 --> 00:42:49,578\nAnd I'm gonna make\nheadquarters an actual router.\n\n844\n00:42:49,578 --> 00:42:50,690\nAll right?\n\n845\n00:42:50,690 --> 00:42:52,510\nIf I want headquarters to be a router,\n\n846\n00:42:52,510 --> 00:42:55,130\nI probably need to give\nit an actual IP address.\n\n847\n00:42:55,130 --> 00:42:56,735\nNot some auto generated thing.\n\n848\n00:42:56,735 --> 00:42:57,420\nRight?\n\n849\n00:42:57,420 --> 00:42:58,705\nYou can do auto generation.\n\n850\n00:42:58,705 --> 00:43:00,360\nRight?\nBecause other people will just learn\n\n851\n00:43:00,360 --> 00:43:01,080\nthe address anyway.\n\n852\n00:43:01,080 --> 00:43:05,730\nIt doesn't have to be a static IP on a\nrouter like you used to but we usually do.\n\n853\n00:43:05,730 --> 00:43:10,590\nSo I'm going to go ahead and get into E00,\nand I'm gonna give it a static IP.\n\n854\n00:43:10,590 --> 00:43:16,190\nSo I'm gonna say, IPv6 address, and\nI'm gonna manually assign an address.\n\n855\n00:43:16,190 --> 00:43:19,732\nI'm gonna give it fd00:230,\ncuz we use the,\n\n856\n00:43:19,732 --> 00:43:23,769\nour IPv4 address here in\nthe studio is 10.1.230.\n\n857\n00:43:23,769 --> 00:43:29,750\nSo I'm just gonna say fd00:230::1.\n\n858\n00:43:29,750 --> 00:43:32,770\nSo all zeros and\nthen a one at the end, /64.\n\n859\n00:43:32,770 --> 00:43:36,046\nRight?\nI could have said fd00:230::/64 and\n\n860\n00:43:36,046 --> 00:43:39,546\nthen EUI-64 and\nhad it autogenerate the last 64 bits.\n\n861\n00:43:39,546 --> 00:43:45,216\nBut I wanted to use an easy address,\nand I'm used to having my router as .1,\n\n862\n00:43:45,216 --> 00:43:48,444\nso that's basically what I've done here,\n\n863\n00:43:48,444 --> 00:43:52,900\nis I've made a network and\nput the router at .1.\n\n864\n00:43:52,900 --> 00:43:55,160\nAll right?\nBut I'm still not a router.\n\n865\n00:43:55,160 --> 00:43:58,690\nYou're not a router until,\nat the global prompt,\n\n866\n00:43:58,690 --> 00:44:03,310\nyou issue IPv6 unicast-routing.\n\n867\n00:44:03,310 --> 00:44:04,670\nReal important command.\n\n868\n00:44:04,670 --> 00:44:08,528\nThat turns you from an IPv6\nclient into an IPv6 router.\n\n869\n00:44:08,528 --> 00:44:09,660\nAll right.\n\n870\n00:44:09,660 --> 00:44:11,020\nSo I'm gonna run that now I'm a router.\n\n871\n00:44:11,020 --> 00:44:16,448\nAnd when somebody starts\nto do router solicitations,\n\n872\n00:44:16,448 --> 00:44:18,525\nRSs, I will do a router advertisement.\n\n873\n00:44:18,525 --> 00:44:20,135\nAnd I'll say hey, I'm a router.\n\n874\n00:44:20,135 --> 00:44:20,965\nFancy that.\nAll right?\n\n875\n00:44:20,965 --> 00:44:23,158\nSo if you need to get out on\nthe network just let me know,\n\n876\n00:44:23,158 --> 00:44:24,276\nand I'll help you get out.\n\n877\n00:44:24,276 --> 00:44:25,155\nAll right.\n\n878\n00:44:25,155 --> 00:44:27,555\nBut there are some interesting\nthings that are gonna happen here.\n\n879\n00:44:27,555 --> 00:44:32,475\nI'm a router not just for\nmy local address.\n\n880\n00:44:32,475 --> 00:44:34,505\nBut I'm also a router for my link local.\n\n881\n00:44:34,505 --> 00:44:35,915\nSo people will learn it that way too, and\n\n882\n00:44:35,915 --> 00:44:38,055\nthat's probably how I'll get\ndetected over here on the branch.\n\n883\n00:44:38,055 --> 00:44:39,430\nLet's see what happens?\n\n884\n00:44:40,610 --> 00:44:43,010\nSo back here on the branch I\ncan see some stuff popped up.\n\n885\n00:44:43,010 --> 00:44:45,080\nI'll just move that up my\nscreen a little bit here.\n\n886\n00:44:45,080 --> 00:44:50,460\nI can see that I did a neighbor discovery,\nand basically it's doing a send here,\n\n887\n00:44:50,460 --> 00:44:54,982\nand I got an advertisement\nback from FD00:230::1.\n\n888\n00:44:54,982 --> 00:44:55,637\nRight?\n\n889\n00:44:55,637 --> 00:44:58,310\nI got a response back from the router.\n\n890\n00:44:58,310 --> 00:45:00,590\nAnd we can see that we sent\nsome information back to them,\n\n891\n00:45:00,590 --> 00:45:03,250\nwe received a router advertisement.\n\n892\n00:45:03,250 --> 00:45:03,770\nRight?\nSo\n\n893\n00:45:03,770 --> 00:45:09,070\nI learned about a router and it's coming\nfrom the linked local of that router.\n\n894\n00:45:09,070 --> 00:45:12,020\nNow, why do I see it\nfrom the linked local?\n\n895\n00:45:12,020 --> 00:45:15,800\nWell, the router has an fd0 address,\nbut I don't.\n\n896\n00:45:15,800 --> 00:45:18,380\nOn this router I've only\ngot a linked local address.\n\n897\n00:45:18,380 --> 00:45:21,640\nThe router has, the headquarters router,\n\n898\n00:45:21,640 --> 00:45:26,310\nhas a statically assigned address but\nmy client here, branch one, doesn't.\n\n899\n00:45:26,310 --> 00:45:28,270\nAnd so\nit doesn't know about that network, so\n\n900\n00:45:28,270 --> 00:45:29,870\nit's got to learn it on this link local.\n\n901\n00:45:29,870 --> 00:45:31,170\nAll right?\n\n902\n00:45:31,170 --> 00:45:36,230\nAnd if I do a show IPv6 routers,\nI can see I do know a router now.\n\n903\n00:45:36,230 --> 00:45:38,140\nI can get to it via this\nlink local address.\n\n904\n00:45:38,140 --> 00:45:39,290\nThat's how I can talk to it.\n\n905\n00:45:39,290 --> 00:45:42,370\nIt's out there, it's got a valid lifetime,\nI've learned a router.\n\n906\n00:45:43,400 --> 00:45:47,310\nSo now, I've got a link local address,\nand I know a router.\n\n907\n00:45:47,310 --> 00:45:49,870\nAnd what commands have I\nissued here on branch one?\n\n908\n00:45:49,870 --> 00:45:53,675\nOn the interface I typed IPv6 enable and\nthat's it.\n\n909\n00:45:53,675 --> 00:45:55,700\nRight?\nSo I didn't type anything too crazy but\n\n910\n00:45:55,700 --> 00:45:57,660\nI'm already learning about\nsystems that are out there.\n\n911\n00:45:59,440 --> 00:46:01,520\nAnd if I look at my routing table,\n\n912\n00:46:01,520 --> 00:46:05,305\nI've got a static entry here\nthat's routing out to that router.\n\n913\n00:46:05,305 --> 00:46:07,320\nRight?\nI've got a gateway of last resort.\n\n914\n00:46:07,320 --> 00:46:10,530\nSo that shows how easy\nthis configuration can be.\n\n915\n00:46:10,530 --> 00:46:13,923\nOn the router we have to do a few commands\nbut on the client, just IPv6 and him.\n\n916\n00:46:15,148 --> 00:46:18,590\nAll right now, what if I want\nthe client to have an fd00 address.\n\n917\n00:46:18,590 --> 00:46:19,900\nRight?\nIn that network that I made.\n\n918\n00:46:19,900 --> 00:46:22,470\nThere we need to go a little bit further.\n\n919\n00:46:22,470 --> 00:46:25,470\nAnd that's where we start to\nbring in our stateless auto or\n\n920\n00:46:25,470 --> 00:46:27,340\naddress auto configuration.\n\n921\n00:46:27,340 --> 00:46:29,552\nSo we need to get that punched in and\nget that configured.\n\n922\n00:46:29,552 --> 00:46:31,680\nRight?\nBut as far as the basic configuration\n\n923\n00:46:31,680 --> 00:46:32,217\nthat's it.\n\n924\n00:46:33,972 --> 00:46:35,017\nAll right.\n\n925\n00:46:35,017 --> 00:46:38,370\nWe are a little bit low on time, I think\nI have enough time to get slacking here.\n\n926\n00:46:38,370 --> 00:46:39,349\nLet's give it a shot Ronnie.\n\n927\n00:46:39,349 --> 00:46:40,462\n>> Right.\n>> We'll try and get in here.\n\n928\n00:46:40,462 --> 00:46:41,200\nAll right.\n\n929\n00:46:41,200 --> 00:46:43,530\nSo slack the stateless auto configuration.\n\n930\n00:46:43,530 --> 00:46:46,690\nOn our router that's gonna\nbe handing out the config,\n\n931\n00:46:46,690 --> 00:46:48,080\nthere's some commands that\nwe've gotta enter in.\n\n932\n00:46:48,080 --> 00:46:52,590\nAnd it's very similar to DHCP, but\nI don't want you guys to get it confused.\n\n933\n00:46:52,590 --> 00:46:56,600\nWe wanna hand out more than just\nthat there's a router out there.\n\n934\n00:46:56,600 --> 00:46:57,110\nRight?\n\n935\n00:46:57,110 --> 00:47:00,010\nSo, it's kinda like DHCP,\nhanding out DHCP options, and\n\n936\n00:47:00,010 --> 00:47:02,910\nwe use the DHCP pool commands.\n\n937\n00:47:02,910 --> 00:47:05,460\nSo, we're actually reusing\nsome other features, but\n\n938\n00:47:05,460 --> 00:47:06,660\nyou'll see that it's\na little bit different.\n\n939\n00:47:06,660 --> 00:47:07,680\nThe big difference is,\n\n940\n00:47:07,680 --> 00:47:12,550\nas I define this, you'll notice I never\nactually created an IP pool, and that's\n\n941\n00:47:12,550 --> 00:47:16,930\nbecause I'm not telling people what IP to\nuse, I'm telling them what options to use.\n\n942\n00:47:16,930 --> 00:47:18,230\nAll right?\n\n943\n00:47:18,230 --> 00:47:19,810\nSo let me show you how that works.\n\n944\n00:47:19,810 --> 00:47:22,775\nFirst off, we make sure that we've\ngot IPv6 unicast routing turned\n\n945\n00:47:22,775 --> 00:47:23,292\non, which I do.\n\n946\n00:47:23,292 --> 00:47:24,520\nAll right.\n\n947\n00:47:24,520 --> 00:47:25,710\nThen we create a pool.\n\n948\n00:47:25,710 --> 00:47:26,590\nSo I'll create a pool.\n\n949\n00:47:27,890 --> 00:47:30,907\nI'm gonna say IPv6 DHCP pool,\nand then a name.\n\n950\n00:47:30,907 --> 00:47:31,520\nRight?\n\n951\n00:47:31,520 --> 00:47:33,243\nI'll call mine the ITProTV-Studio.\n\n952\n00:47:33,243 --> 00:47:33,750\nAll right.\n\n953\n00:47:35,240 --> 00:47:39,710\nSo I'm creating a DHCP pool, but\nI'm not actually gonna turn DHCP on.\n\n954\n00:47:39,710 --> 00:47:42,050\nIn the pool I'm just\ngonna define my options.\n\n955\n00:47:42,050 --> 00:47:45,240\nSo I need to specify, for\nexample, a DNS server.\n\n956\n00:47:45,240 --> 00:47:48,180\nAnd, I don't actually have a DNS server so\n\n957\n00:47:48,180 --> 00:47:52,548\nI'll just make one up,\nI'll pretend that there's one at five.\n\n958\n00:47:52,548 --> 00:47:55,080\nRight?\nSo fd00:230::5, that's my DHCP server.\n\n959\n00:47:55,080 --> 00:47:58,991\nSo that's an option that I'm gonna\nhand out to clients that connect.\n\n960\n00:47:58,991 --> 00:48:00,259\nAll right?\n\n961\n00:48:00,259 --> 00:48:03,122\nThen I'm gonna get into my interface.\n\n962\n00:48:03,122 --> 00:48:07,693\nSo I'm gonna get back into e00, and here's\nwhere things start to get a little bit.\n\n963\n00:48:07,693 --> 00:48:08,715\nOdd.\n\n964\n00:48:08,715 --> 00:48:13,260\nI have to tell the other people out there\nwhat prefix they're supposed to use.\n\n965\n00:48:13,260 --> 00:48:16,450\nI need to let them know so\nthey can jump on to the right network.\n\n966\n00:48:16,450 --> 00:48:22,540\nSo I'm gonna say IPv6 nd,\nthis is a neighbor discovery command.\n\n967\n00:48:22,540 --> 00:48:26,360\nPrefix and then I'm telling\nthe clients what network to use.\n\n968\n00:48:26,360 --> 00:48:30,330\nAnd I want them to be on\nthe FD00:230 network.\n\n969\n00:48:30,330 --> 00:48:33,360\nSo I'm just specify that, and\n\n970\n00:48:33,360 --> 00:48:34,920\nactually I think it makes\nyou stick a zero on the end.\n\n971\n00:48:34,920 --> 00:48:38,500\nI don't remember if you need that zero or\nnot.\n\n972\n00:48:38,500 --> 00:48:39,700\nThe zero's kind of redundant,\n\n973\n00:48:39,700 --> 00:48:42,080\nthat last one I'm gonna stick it there,\ncuz I think you have to have it.\n\n974\n00:48:42,080 --> 00:48:45,150\nBut once that's there,\nI'm now telling people about that prefix.\n\n975\n00:48:45,150 --> 00:48:49,850\nI'm saying hey, this the network you\nguys are supposed to be on, fd00:230.\n\n976\n00:48:49,850 --> 00:48:53,820\nAnd I don't care what address you pick,\nauto generate the last 64 bit but\n\n977\n00:48:53,820 --> 00:48:58,239\nyour first 64 bits need to be this,\nfd00:230::.\n\n978\n00:48:58,239 --> 00:49:00,570\nRight?.\nAnd while you're at it.\n\n979\n00:49:00,570 --> 00:49:04,440\nYour DNS server should be fd00:230::5.\n\n980\n00:49:04,440 --> 00:49:05,640\nRight?\nFrom right here.\n\n981\n00:49:05,640 --> 00:49:06,800\nI'm pointing at the wrong spot.\n\n982\n00:49:06,800 --> 00:49:09,620\nActually right here, and\nthat's what they're gonna get.\n\n983\n00:49:09,620 --> 00:49:11,570\nAnd so there's the configuration.\n\n984\n00:49:11,570 --> 00:49:14,030\nJust a little bit more\nthat we have to do though.\n\n985\n00:49:15,060 --> 00:49:19,080\nBy default, the router advertisements get\nsuppressed on your own router, and so\n\n986\n00:49:19,080 --> 00:49:20,260\nI need to turn that off.\n\n987\n00:49:20,260 --> 00:49:26,600\nSo I'm gonna say no IPv6 nd suppress-ra.\n\n988\n00:49:26,600 --> 00:49:29,250\nSo I'm turning off that depression.\n\n989\n00:49:29,250 --> 00:49:32,710\nCisco doesn't want you to accidentally\nadvertise out your router.\n\n990\n00:49:32,710 --> 00:49:35,670\nYou might not be ready for\nthis to go into production just yet.\n\n991\n00:49:35,670 --> 00:49:37,390\nSo the advertisement doesn't happen.\n\n992\n00:49:37,390 --> 00:49:38,380\nI'm turning it on here.\n\n993\n00:49:38,380 --> 00:49:39,982\nNow, I'm gonna be\nadvertising all this stuff.\n\n994\n00:49:39,982 --> 00:49:41,470\nAll right?\n\n995\n00:49:41,470 --> 00:49:46,360\nThen I need to let it know\nwhen I do the advertisement,\n\n996\n00:49:46,360 --> 00:49:50,180\nI'm including options beyond the prefix.\n\n997\n00:49:50,180 --> 00:49:52,470\nBy default it will just push this prefix.\n\n998\n00:49:52,470 --> 00:49:55,310\nBut remember,\nI want to push this DNS server also.\n\n999\n00:49:55,310 --> 00:49:57,550\nSo I need to tell it that\nI'm pushing other options.\n\n1000\n00:49:57,550 --> 00:50:04,240\nSo I'll say, ipv6 nd other-config-flag.\n\n1001\n00:50:04,240 --> 00:50:07,860\nThat's letting it know that I'm gonna be\npushing more options than just the prefix.\n\n1002\n00:50:09,230 --> 00:50:11,690\nAnd the last thing is it needs\nto know where to get those from.\n\n1003\n00:50:11,690 --> 00:50:13,790\nThe other options are gonna\ncome from that pool.\n\n1004\n00:50:13,790 --> 00:50:18,589\nI'll say ipv6 dhcp server ITProTV-Studio.\n\n1005\n00:50:18,589 --> 00:50:19,770\nAll right.\n\n1006\n00:50:19,770 --> 00:50:23,930\nNow that's the same command\nI'd use to turn on dhcp, but\n\n1007\n00:50:23,930 --> 00:50:28,650\nnotice that when I created that pool up\nhere, I never did assign an IP range.\n\n1008\n00:50:28,650 --> 00:50:31,060\nI created a pool with no addresses.\n\n1009\n00:50:31,060 --> 00:50:32,990\nAnd that's why this is stateless.\n\n1010\n00:50:32,990 --> 00:50:35,450\nPeople are gonna come to me and\ngonna ask for an address.\n\n1011\n00:50:35,450 --> 00:50:40,600\nAnd I'm gonna give them a prefix and\na DNS server and a default gateway.\n\n1012\n00:50:40,600 --> 00:50:42,190\nI'm not gonna give them an address.\n\n1013\n00:50:42,190 --> 00:50:44,590\nI'm not gonna create a record\nof the address they had.\n\n1014\n00:50:44,590 --> 00:50:46,480\nI'm not gonna keep logs of that.\n\n1015\n00:50:46,480 --> 00:50:49,015\nI'm just gonna say here's\nthe information you need.\n\n1016\n00:50:49,015 --> 00:50:49,950\nFigure out your own address.\n\n1017\n00:50:49,950 --> 00:50:51,825\nRight?\nIt's stateless.\n\n1018\n00:50:51,825 --> 00:50:56,105\nSo this router won't have a record of\nall the clients that are out there.\n\n1019\n00:50:56,105 --> 00:50:58,165\nI won't know how many\naddresses that I've issued.\n\n1020\n00:50:58,165 --> 00:51:00,770\nI could have issued five address,\nor 5,000 addresses.\n\n1021\n00:51:00,770 --> 00:51:02,252\nI won't know because it's stateless.\n\n1022\n00:51:02,252 --> 00:51:03,240\nAll right.\n\n1023\n00:51:03,240 --> 00:51:06,950\nSo while the commands say DHCP,\nit's not actually DHCP that we've enabled.\n\n1024\n00:51:06,950 --> 00:51:09,150\nAll right.\n\n1025\n00:51:09,150 --> 00:51:14,310\nWith all of that done now,\nwe're advertising these settings out, and\n\n1026\n00:51:14,310 --> 00:51:18,440\nany client that comes up on our\nnetwork can do a router solicitation.\n\n1027\n00:51:18,440 --> 00:51:21,260\nAnd they'll learn the prefix,\nthey'll learn the gateway,\n\n1028\n00:51:21,260 --> 00:51:23,910\nthey'll learn the DNS server and\npopulate that information.\n\n1029\n00:51:23,910 --> 00:51:28,220\nIn fact if I jump over to branch one\nit's probably already done some of this.\n\n1030\n00:51:28,220 --> 00:51:31,270\nWe can that it's starting to\npull some information in.\n\n1031\n00:51:31,270 --> 00:51:36,040\nAnd what I'm gonna do is just to make sure\nthat I get a good clean start on this one,\n\n1032\n00:51:36,040 --> 00:51:40,150\nI'm just gonna do a shut down on\nthe interface and let it clear out.\n\n1033\n00:51:40,150 --> 00:51:42,160\nSo there we go.\nSee how it's removing itself.\n\n1034\n00:51:42,160 --> 00:51:44,175\nIt's freeing up neighbor discovery.\n\n1035\n00:51:44,175 --> 00:51:46,380\nKinda clearing that out and\nthen I'll do a no shut down.\n\n1036\n00:51:46,380 --> 00:51:48,660\nI just want to make sure\nI get a good clean one so\n\n1037\n00:51:48,660 --> 00:51:50,942\nwe know that the features\nactually came from the router.\n\n1038\n00:51:50,942 --> 00:51:52,100\nAll right.\n\n1039\n00:51:52,100 --> 00:51:53,280\nSo there it goes.\n\n1040\n00:51:53,280 --> 00:51:56,320\nWe see the duplicate address detection\nkicking in right there to see if we've\n\n1041\n00:51:56,320 --> 00:51:57,440\nduped somebody.\n\n1042\n00:51:57,440 --> 00:51:59,635\nAnd then it's starting to\ndo neighbor discovery.\n\n1043\n00:51:59,635 --> 00:52:01,080\nRight?\nSo there it's outputting.\n\n1044\n00:52:01,080 --> 00:52:04,040\nIt's reaching out and\ntrying to find stuff on the network.\n\n1045\n00:52:04,040 --> 00:52:07,300\nIn a moment it should start to\ndo the router solicitation, and\n\n1046\n00:52:07,300 --> 00:52:08,025\nwe'll learn the rest.\n\n1047\n00:52:08,025 --> 00:52:10,420\nOkay, so we'll give it a second.\n\n1048\n00:52:10,420 --> 00:52:12,170\nSometimes I get impatient on this stuff.\n\n1049\n00:52:12,170 --> 00:52:13,500\nIt usually is pretty quick though.\n\n1050\n00:52:13,500 --> 00:52:16,850\nLet's see if we've already got it and\nit just didn't show up.\n\n1051\n00:52:16,850 --> 00:52:19,090\nI'm gonna do a show IPv6 interface brief.\n\n1052\n00:52:19,090 --> 00:52:23,570\nAnd see I still just have my link local,\nso I haven't gotten everything else yet.\n\n1053\n00:52:23,570 --> 00:52:24,790\nSo we'll have to wait on that.\n\n1054\n00:52:24,790 --> 00:52:28,950\nIf I do a show IPv6 routers,\nI haven't learned the router yet either.\n\n1055\n00:52:28,950 --> 00:52:31,978\nSo I need to wait a moment as\nit starts to do that discovery.\n\n1056\n00:52:31,978 --> 00:52:34,980\nI'm just gonna jump over to my\nheadquarters router here and\n\n1057\n00:52:34,980 --> 00:52:37,880\nI want to double-check\neverything here too.\n\n1058\n00:52:37,880 --> 00:52:41,100\nAnd sometimes the router can\nget a little confused because I\n\n1059\n00:52:41,100 --> 00:52:43,720\nhad to disable the suppression.\n\n1060\n00:52:43,720 --> 00:52:46,870\nSo I might actually have to do\na shutdown and no shutdown here too,\n\n1061\n00:52:46,870 --> 00:52:49,390\nwhich I'll go ahead and\ndo just to be on the absolute safe side.\n\n1062\n00:52:50,850 --> 00:52:59,865\nSo I'll flush that out, and\ngive that a moment All right.\n\n1063\n00:52:59,865 --> 00:53:01,530\nAnd so here we go.\n\n1064\n00:53:01,530 --> 00:53:02,680\nI can see, oh see.\n\n1065\n00:53:02,680 --> 00:53:04,790\nWhile I was doing that,\nit received a router advertisement,\n\n1066\n00:53:04,790 --> 00:53:06,010\nI just didn't wait for it.\n\n1067\n00:53:06,010 --> 00:53:09,920\nSo [LAUGH] sometimes I get impatient,\nyou try and rush it too fast.\n\n1068\n00:53:09,920 --> 00:53:13,120\nWith the autodiscovery, most of this\nstuff is on a 30 second timer, and\n\n1069\n00:53:13,120 --> 00:53:15,930\nso you've gotta wait about 30 seconds for\nthings to happen.\n\n1070\n00:53:15,930 --> 00:53:18,400\nThere we go, I'm receiving another\nrouter advertisement there.\n\n1071\n00:53:18,400 --> 00:53:20,080\nAnd we'll just give it a moment.\n\n1072\n00:53:20,080 --> 00:53:21,360\nWhile it sorts itself out.\n\n1073\n00:53:23,310 --> 00:53:25,097\nAnd yeah, I still just have my FE80.\n\n1074\n00:53:29,103 --> 00:53:30,515\nBut we'll give that a moment and\n\n1075\n00:53:30,515 --> 00:53:33,370\nwhat its supposed to be doing\nis learning the prefix.\n\n1076\n00:53:33,370 --> 00:53:33,870\nRight?\n\n1077\n00:53:33,870 --> 00:53:36,330\nLearning the DNS server,\nlearning the other information and\n\n1078\n00:53:36,330 --> 00:53:41,300\nthen getting us configured far beyond\njust having a common IP address.\n\n1079\n00:53:41,300 --> 00:53:42,680\nLet me do a show IPv6 routers.\n\n1080\n00:53:43,970 --> 00:53:45,120\nAnd I do see the router now.\n\n1081\n00:53:45,120 --> 00:53:51,990\nAnd if we do a show IPv6 interface E00,\nyou can look in here.\n\n1082\n00:53:51,990 --> 00:53:56,680\nYou'll actually see some information\nhere about your solicitations and so\n\n1083\n00:53:56,680 --> 00:54:00,560\nlike here I've got my default\nrouter listed on the interface now.\n\n1084\n00:54:00,560 --> 00:54:05,720\nAnd that will show IPv6 interface and\nthen the interface that I'm looking at.\n\n1085\n00:54:05,720 --> 00:54:07,260\nI see IPv6 is enabled and it's up.\n\n1086\n00:54:07,260 --> 00:54:10,380\nSo we should be getting our\ninformation unless I missed something.\n\n1087\n00:54:10,380 --> 00:54:11,250\nLet me see if I missed a command.\n\n1088\n00:54:12,370 --> 00:54:14,530\nI'm probably just being\ntoo impatient here.\n\n1089\n00:54:14,530 --> 00:54:17,470\nBut I'm just gonna do a show run,\nand we'll verify my command.\n\n1090\n00:54:17,470 --> 00:54:20,950\nSo if we kinda walk through the commands\nthat I did, I had to create that pool.\n\n1091\n00:54:20,950 --> 00:54:25,900\nSo here's the pool, ipv6 dhcp pool, and\nall I specified in there was a DNS server.\n\n1092\n00:54:25,900 --> 00:54:26,780\nNothing too crazy.\n\n1093\n00:54:26,780 --> 00:54:29,790\nI could have done more,\nlike there's the SMTP server, and\n\n1094\n00:54:29,790 --> 00:54:32,260\nall those other settings, but\nI just wanted to push the DNS server.\n\n1095\n00:54:32,260 --> 00:54:35,040\nAnd then when I got down to the interface.\n\n1096\n00:54:35,040 --> 00:54:35,690\nRight?\n\n1097\n00:54:35,690 --> 00:54:38,270\nI assigned an address, so\nI made myself FD00:230::1.\n\n1098\n00:54:38,270 --> 00:54:43,190\nRight?\nThat was the address I assigned myself.\n\n1099\n00:54:43,190 --> 00:54:45,850\nI then define a prefix and oh it turns\nout you don't need that as zero,\n\n1100\n00:54:45,850 --> 00:54:48,750\nI added that as zero earlier,\nit trimmed it off for me.\n\n1101\n00:54:48,750 --> 00:54:50,250\nWe got IPv6 enable,\n\n1102\n00:54:50,250 --> 00:54:55,170\nwe did the prefix, we told it we were\npushing other configuration options.\n\n1103\n00:54:55,170 --> 00:54:59,820\nAnd we assign the entry,\nthe suppression command has been removed,\n\n1104\n00:54:59,820 --> 00:55:01,200\nthat might be a default on this iOS.\n\n1105\n00:55:01,200 --> 00:55:06,010\nLet's see if that's the case,\nor I did a typo and\n\n1106\n00:55:06,010 --> 00:55:07,760\ndidn't see it, that happens sometimes.\n\n1107\n00:55:07,760 --> 00:55:10,620\nIf you type commands too fast, you\ndon't notice the error that happens, so\n\n1108\n00:55:10,620 --> 00:55:13,020\nI might have, I might have not done that.\n\n1109\n00:55:13,020 --> 00:55:16,040\nSo, let's re-run that command.\n\n1110\n00:55:16,040 --> 00:55:18,850\nUsually if the command is missing\noutright, that means that it was\n\n1111\n00:55:18,850 --> 00:55:22,160\neither a typo or it's a default command so\nit's not gonna show up.\n\n1112\n00:55:22,160 --> 00:55:27,348\nSo we'll do a no IPv6 on this one,\nnd suppress RA.\n\n1113\n00:55:31,609 --> 00:55:34,485\nAnd now if it's not there,\nthen it is the default.\n\n1114\n00:55:34,485 --> 00:55:36,190\nYep, it's the default\non this particular iOS.\n\n1115\n00:55:36,190 --> 00:55:36,880\nSo I'm fine with that.\n\n1116\n00:55:38,670 --> 00:55:39,870\nAnd we should be good to go.\n\n1117\n00:55:40,970 --> 00:55:42,490\nSo we'll let that sit.\n\n1118\n00:55:42,490 --> 00:55:44,480\nBut I am not seeing any.\n\n1119\n00:55:44,480 --> 00:55:47,940\nYeah no new discovery\ncame through on this guy.\n\n1120\n00:55:47,940 --> 00:55:51,580\nCould give it a reload, I suppose,\nif I truly wanna be impatient.\n\n1121\n00:55:51,580 --> 00:55:54,670\nWe'll have to do that, reload this guy.\n\n1122\n00:55:54,670 --> 00:55:57,450\nI'm actually not going to save this,\noh, shoot.\n\n1123\n00:55:57,450 --> 00:55:58,870\nI know what I'm forgetting.\n\n1124\n00:55:58,870 --> 00:56:00,488\nThere is an important\ncommand on the client side.\n\n1125\n00:56:00,488 --> 00:56:01,460\nAll right?\n>> [LAUGH]\n\n1126\n00:56:01,460 --> 00:56:02,745\n>> The Cisco client.\n\n1127\n00:56:02,745 --> 00:56:04,530\n>> Yeah.\n>> If you're using a Cisco router,\n\n1128\n00:56:04,530 --> 00:56:08,817\nif this were a Windows box or a Linux or\nwhatever, then this wouldn't be a problem.\n\n1129\n00:56:08,817 --> 00:56:12,051\nRight?\nBut on a Cisco router, if you're a client.\n\n1130\n00:56:12,051 --> 00:56:14,664\nAuto config's actually disabled\nby default, I forgot about that.\n\n1131\n00:56:14,664 --> 00:56:17,240\n>> Mm.\n>> So I need to enable auto config.\n\n1132\n00:56:17,240 --> 00:56:18,580\nAnd it's really easy to do.\n\n1133\n00:56:18,580 --> 00:56:23,190\nYou just say IPv6 address auto config\non the interface and I didn't do that.\n\n1134\n00:56:23,190 --> 00:56:25,574\nOf course now, I don't think I can\nbreak out of this prompt can I?\n\n1135\n00:56:27,855 --> 00:56:29,115\nThere we go, all right.\n\n1136\n00:56:29,115 --> 00:56:33,215\nSo let's do that, yeah,\nI kind of forgot the client's side.\n\n1137\n00:56:33,215 --> 00:56:36,055\nSo, when I look at\nthe configuration on ne/0,\n\n1138\n00:56:36,055 --> 00:56:38,845\nI just have IPv6 enabled, and that's it.\n\n1139\n00:56:38,845 --> 00:56:40,585\nI don't have anything too crazy there.\n\n1140\n00:56:40,585 --> 00:56:47,150\nBut what I need to do,\nis I need to say IPv6 address auto config.\n\n1141\n00:56:47,150 --> 00:56:50,830\nWhen I do that, that's gonna tell it to\nautomatically configure the interface.\n\n1142\n00:56:50,830 --> 00:56:52,520\nAnd there we go.\nNow we start to see some stuff\n\n1143\n00:56:52,520 --> 00:56:53,460\nrolling through.\n\n1144\n00:56:53,460 --> 00:56:55,240\nKind of an important command.\n\n1145\n00:56:55,240 --> 00:56:59,390\nSo I can see we've got a neighbor\nadvertisement going on for\n\n1146\n00:56:59,390 --> 00:57:00,635\nFD00, blah, blah.\n\n1147\n00:57:00,635 --> 00:57:03,595\nSo it's actually reaching out trying\nto find this information, and\n\n1148\n00:57:03,595 --> 00:57:05,135\ngetting information back.\n\n1149\n00:57:05,135 --> 00:57:07,235\nAnd so we'll see that\ninformation start to roll by.\n\n1150\n00:57:08,455 --> 00:57:12,935\nAnd now on my client,\nif I do a show IPv6 interface brief.\n\n1151\n00:57:14,085 --> 00:57:18,095\nNow I can see I've got\nan FD00:230 address.\n\n1152\n00:57:18,095 --> 00:57:20,565\nThe rest of it was EUI64.\n\n1153\n00:57:20,565 --> 00:57:24,160\nI've got my mac address with FF;FE\nright in the middle of it there.\n\n1154\n00:57:24,160 --> 00:57:26,470\nSo I can see that it pulled it that way.\n\n1155\n00:57:26,470 --> 00:57:27,690\nThat's fine.\n\n1156\n00:57:27,690 --> 00:57:32,150\nAnd if I do a show IPv6 routers,\nI can see the router out there.\n\n1157\n00:57:32,150 --> 00:57:35,190\nAnd I still use the FE80\nbecause that's the link local.\n\n1158\n00:57:35,190 --> 00:57:37,270\nYou always communicate\nwith that if you can.\n\n1159\n00:57:37,270 --> 00:57:40,680\nBut right down here,\nI see that prefix of FD00:230.\n\n1160\n00:57:40,680 --> 00:57:44,120\nNow I'm learning and\ncommunicating from that router.\n\n1161\n00:57:44,120 --> 00:57:47,525\nI can't really test my name\nserver because it's a made up IP.\n\n1162\n00:57:47,525 --> 00:57:49,560\nBut that would be the next test.\n\n1163\n00:57:49,560 --> 00:57:53,450\nWould be to test the name server,\nand see if that functions.\n\n1164\n00:57:53,450 --> 00:57:58,000\nBut that would, I guess I could just type\nin an address, and it should give me my.\n\n1165\n00:57:58,000 --> 00:58:00,350\nOh it doesn't tell you the name server.\n\n1166\n00:58:00,350 --> 00:58:02,950\nBut anyhow, so\nthat can kind of be the next step.\n\n1167\n00:58:02,950 --> 00:58:05,750\nBut now I'm getting my configuration and\nI'm in business.\n\n1168\n00:58:05,750 --> 00:58:08,190\nSo that is stateless auto config.\n\n1169\n00:58:08,190 --> 00:58:09,740\nI learned about my prefix.\n\n1170\n00:58:09,740 --> 00:58:12,600\nI learned what network I was\nsupposed to be on from the router.\n\n1171\n00:58:12,600 --> 00:58:14,550\nBut the router doesn't keep a database for\nthat.\n\n1172\n00:58:14,550 --> 00:58:18,190\nIt's stateless, and the next time I\nreboot, I rediscover it all from scratch.\n\n1173\n00:58:18,190 --> 00:58:19,710\nThere's no lease or lifetime.\n\n1174\n00:58:19,710 --> 00:58:26,009\nI now have this address for as long as\nI want until I reboot, and that's that.\n\n1175\n00:58:26,009 --> 00:58:29,420\nSo moral of the story here,\nthe server side was a little bit complex.\n\n1176\n00:58:29,420 --> 00:58:33,710\nWe had a good 9 or 10 commands\nthat we punched in on our router.\n\n1177\n00:58:33,710 --> 00:58:35,400\nBut on my client side\nit's just one command.\n\n1178\n00:58:35,400 --> 00:58:39,424\nIt's kind of important\nIPv6 address auto config.\n\n1179\n00:58:39,424 --> 00:58:43,570\nThat what I had to issue on\nthe interface to get that to kick in.\n\n1180\n00:58:43,570 --> 00:58:45,940\nWell Ronnie, I did take longer\nthan I planned on that one.\n\n1181\n00:58:45,940 --> 00:58:49,220\nSo sorry for the long segment on this one,\nbut we'll stop and take a break here.\n\n1182\n00:58:49,220 --> 00:58:51,670\nWhen we get back I want to show you DHCP.\n\n1183\n00:58:51,670 --> 00:58:53,800\nDHCP is a good bit different.\n\n1184\n00:58:53,800 --> 00:58:55,870\nWe have a lot more options\nthat we have to specify there.\n\n1185\n00:58:55,870 --> 00:58:58,424\nSo, stay tuned, we'll be back after this.\n\n1186\n00:58:58,424 --> 00:59:06,038\n[MUSIC]\n\n1187\n00:59:06,038 --> 00:59:08,490\n>> All right, welcome back, everybody.\n\n1188\n00:59:08,490 --> 00:59:09,610\nSo in the last segment,\n\n1189\n00:59:09,610 --> 00:59:14,010\nwe got a chance to see SLAAC,\nour stateless address auto-configuration.\n\n1190\n00:59:14,010 --> 00:59:17,100\nAnd it was eerily similar to DHCP,\n\n1191\n00:59:17,100 --> 00:59:21,290\nwith the exception of not\nkeeping track of a database.\n\n1192\n00:59:21,290 --> 00:59:23,550\nSo in this segment, we're gonna go all in.\n\n1193\n00:59:23,550 --> 00:59:24,660\nWe're gonna go DACPv6.\n\n1194\n00:59:25,710 --> 00:59:30,210\nNow, a lot of people out there say,\nif you're doing IPv6 you don't need DACP.\n\n1195\n00:59:30,210 --> 00:59:31,270\nAnd that's what we just saw.\n\n1196\n00:59:31,270 --> 00:59:33,430\nTechnically we don't need DHCP anymore.\n\n1197\n00:59:34,430 --> 00:59:39,950\nBut if you wanna keep track of who\nhad what address at what time.\n\n1198\n00:59:39,950 --> 00:59:42,270\nAnd you know,\nwhen they were valid on the network.\n\n1199\n00:59:42,270 --> 00:59:43,630\nWhen they were invalid on the network.\n\n1200\n00:59:43,630 --> 00:59:44,870\nIf you wanna expire addresses.\n\n1201\n00:59:44,870 --> 00:59:46,890\nIf you wanna have that kinda control.\n\n1202\n00:59:46,890 --> 00:59:49,140\nThere really is no substitute for DHCP.\n\n1203\n00:59:49,140 --> 00:59:54,529\nAnd so it was ported forward to IPv6, and\nyou certainly can set up a DHCP6 server.\n\n1204\n00:59:54,529 --> 00:59:56,229\nSo that's what we're gonna do.\n\n1205\n00:59:56,229 --> 00:59:59,051\nIs we're gonna configure one of\nour routers as a DHCP6 server.\n\n1206\n00:59:59,051 --> 01:00:03,860\nAnd we'll issue out addresses to a client,\nand we'll grab an IP from a client.\n\n1207\n01:00:05,330 --> 01:00:08,590\nThe process is really similar\nto what we just saw with SLAAC.\n\n1208\n01:00:08,590 --> 01:00:11,050\nExcept this time we are going to\ndefine a range in that DHCP pool.\n\n1209\n01:00:11,050 --> 01:00:13,400\nSo let's kind of run through that process.\n\n1210\n01:00:13,400 --> 01:00:14,930\nI reset my routers during the break.\n\n1211\n01:00:14,930 --> 01:00:17,020\nSo I'm back to kind of a clean config.\n\n1212\n01:00:17,020 --> 01:00:19,580\nAnd I'm going to get started\nhere on my headquarters router.\n\n1213\n01:00:19,580 --> 01:00:24,550\nAnd my headquarters router, that's the one\nthat's going to be the DHCP v6 server.\n\n1214\n01:00:24,550 --> 01:00:27,090\nI've got a few commands to\nissue here to get it set up.\n\n1215\n01:00:28,800 --> 01:00:31,850\nFirst command that should always be on\nmy mind when I'm configuring a router\n\n1216\n01:00:31,850 --> 01:00:33,190\nto do IPv6.\n\n1217\n01:00:33,190 --> 01:00:37,070\nIs that IPv6, which I spelled wrong.\n\n1218\n01:00:37,070 --> 01:00:39,396\nHow do you spell IPv6, Ronnie?\n\n1219\n01:00:39,396 --> 01:00:42,235\n[LAUGH]\n>> IPv6 unicast-routing.\n\n1220\n01:00:42,235 --> 01:00:45,040\nIf you forget that command,\nnone of the rest of this stuff works.\n\n1221\n01:00:45,040 --> 01:00:47,330\nAll the other commands go in but\nyou won't get very far.\n\n1222\n01:00:48,350 --> 01:00:51,275\nMuch like the auto config command.\n\n1223\n01:00:51,275 --> 01:00:53,740\n>> [LAUGH]\n>> Alright so the next thing I'm gonna do,\n\n1224\n01:00:53,740 --> 01:00:56,400\nis I'm gonna create my DHCP pool.\n\n1225\n01:00:56,400 --> 01:00:58,160\nSo I'll say IPv6 DHCP pool.\n\n1226\n01:00:58,160 --> 01:01:02,780\nAnd I'll just call it\nITProTV-Studio like I did before.\n\n1227\n01:01:02,780 --> 01:01:04,950\nI reset my config so\nthis is an all new pool.\n\n1228\n01:01:06,680 --> 01:01:11,160\nAnd now,\nI'm gonna specify an address range.\n\n1229\n01:01:11,160 --> 01:01:13,230\nAnd it's a prefix inside of DHCP.\n\n1230\n01:01:13,230 --> 01:01:16,840\nSo I'll say address prefix,\nand I'll tell it the network.\n\n1231\n01:01:18,240 --> 01:01:24,210\nAnd so I'm gonna do that fd00:230,\nlike I did before.\n\n1232\n01:01:25,790 --> 01:01:29,400\nAnd now I need to specify the lifetime.\n\n1233\n01:01:29,400 --> 01:01:31,500\nYou're gonna get\nan address from this pool.\n\n1234\n01:01:31,500 --> 01:01:33,880\nAnd you'll have a lease.\n\n1235\n01:01:33,880 --> 01:01:36,610\nDHCP uses leases, and\nyou need to specify two values.\n\n1236\n01:01:38,000 --> 01:01:40,570\nOne, which is the validity period.\n\n1237\n01:01:40,570 --> 01:01:44,270\nSo what is the absolute longest\nyou can use this address for\n\n1238\n01:01:44,270 --> 01:01:46,390\nbefore we flag it as invalid.\n\n1239\n01:01:46,390 --> 01:01:48,040\nThink of this as your normal lease time.\n\n1240\n01:01:48,040 --> 01:01:51,264\nBut we also specify a preferred lifetime.\n\n1241\n01:01:51,264 --> 01:01:56,250\nWhich is saying, we prefer that you\ncheck back in, in this amount of time.\n\n1242\n01:01:56,250 --> 01:02:00,130\nInstead of waiting until the very end.\n\n1243\n01:02:00,130 --> 01:02:03,520\nSo that way people renew early and\nthey keep it active, and so\n\n1244\n01:02:03,520 --> 01:02:06,010\nwe know the addresses are valid.\n\n1245\n01:02:06,010 --> 01:02:10,580\nNow, because the address base is so\nbig, if you go on Cisco's website, or\n\n1246\n01:02:10,580 --> 01:02:12,860\nin a lot of the Cisco press books,\nor whatever.\n\n1247\n01:02:12,860 --> 01:02:15,490\nThey'll set the lifetimes to infinite.\n\n1248\n01:02:15,490 --> 01:02:17,000\nThey'll just go all out.\n\n1249\n01:02:17,000 --> 01:02:18,610\nYou can certainly do that.\n\n1250\n01:02:18,610 --> 01:02:20,750\nBut I caution you,\nif you set it to infinite.\n\n1251\n01:02:20,750 --> 01:02:22,840\nThe address space is really big.\n\n1252\n01:02:22,840 --> 01:02:25,260\nAnd over the period of three, four years.\n\n1253\n01:02:25,260 --> 01:02:28,660\nAs clients connect, and disconnect,\nthey're getting these infinite leases.\n\n1254\n01:02:28,660 --> 01:02:31,210\nAnd they're being stored\nin your DHCP database.\n\n1255\n01:02:31,210 --> 01:02:34,050\nWhich is growing bigger,\nand bigger, and bigger.\n\n1256\n01:02:34,050 --> 01:02:36,465\nAnd on a router,\nthat's not a great idea, all right.\n\n1257\n01:02:36,465 --> 01:02:37,800\n>> [LAUGH]\n>> On a server, maybe.\n\n1258\n01:02:37,800 --> 01:02:39,785\nI don't know.\nBut on a router, I wouldn't do it.\n\n1259\n01:02:39,785 --> 01:02:41,505\nSo I always recommend\nputting in a lifetime.\n\n1260\n01:02:41,505 --> 01:02:42,825\nAnd that's what I'm going to do.\n\n1261\n01:02:42,825 --> 01:02:45,255\nSo I'll come in here and\njust say lifetime.\n\n1262\n01:02:45,255 --> 01:02:46,745\n>> That's in seconds.\n\n1263\n01:02:46,745 --> 01:02:49,115\n>> Yeah it's annoyingly in seconds.\n\n1264\n01:02:49,115 --> 01:02:51,945\nI'll just specify\nthe validity period first.\n\n1265\n01:02:51,945 --> 01:02:53,795\nAnd then the preferred lifetime.\n\n1266\n01:02:53,795 --> 01:02:55,135\nAnd they are in seconds.\n\n1267\n01:02:55,135 --> 01:02:56,945\nSo I'm going to specify.\n\n1268\n01:02:56,945 --> 01:02:59,815\nIn Microsoft land we always\ndo eight day leases.\n\n1269\n01:02:59,815 --> 01:03:01,268\nSo I'll go ahead and do eight days.\n\n1270\n01:03:01,268 --> 01:03:02,328\nIn seconds.\n\n1271\n01:03:02,328 --> 01:03:06,680\n>> [LAUGH]\n>> Which is 691200.\n\n1272\n01:03:07,770 --> 01:03:10,800\nSo somebody can have this lease for\neight days.\n\n1273\n01:03:10,800 --> 01:03:12,940\nI'll issue it to them,\nthey'll have it for eight days.\n\n1274\n01:03:12,940 --> 01:03:15,110\nAnd they don't have to check in again,\nand that's that.\n\n1275\n01:03:15,110 --> 01:03:18,350\nAnd then at the end of eight days,\nif they haven't checked in again.\n\n1276\n01:03:18,350 --> 01:03:21,709\nI invalidate that lease, and I make\nthat address available for sombody else.\n\n1277\n01:03:23,170 --> 01:03:25,325\nBut next I'm gonna provide\nthe preferred lifetime.\n\n1278\n01:03:26,440 --> 01:03:29,170\nI prefer if they'd check\nin every 24 hours.\n\n1279\n01:03:29,170 --> 01:03:33,710\nSo I'm gonna go ahead and\nspecify 24 hours in seconds, 86,400.\n\n1280\n01:03:33,710 --> 01:03:38,790\nThere, so now I've got a prefix.\n\n1281\n01:03:38,790 --> 01:03:40,980\nAnd I've got the lifetimes assigned to it.\n\n1282\n01:03:43,570 --> 01:03:46,510\nNext, I need to tell it about my address.\n\n1283\n01:03:46,510 --> 01:03:47,260\nSo they can get to me.\n\n1284\n01:03:47,260 --> 01:03:50,170\nSo I'll say, link-address.\n\n1285\n01:03:50,170 --> 01:03:53,020\nAnd, or wait a minute, sorry.\n\n1286\n01:03:53,020 --> 01:03:55,700\nFor my link address I'm\nsupposed to find my link\n\n1287\n01:03:55,700 --> 01:03:58,150\nlocal address that they're\ngonna use to communicate to me.\n\n1288\n01:03:58,150 --> 01:03:59,620\nBecause they don't have an address yet.\n\n1289\n01:03:59,620 --> 01:04:02,280\nSo they're going to be using\ntheir link local, their fe80.\n\n1290\n01:04:02,280 --> 01:04:03,540\nAnd they're gonna talk to me that way.\n\n1291\n01:04:03,540 --> 01:04:05,193\nSo I need to give myself an address for\nit.\n\n1292\n01:04:05,193 --> 01:04:07,376\nNow I'm doing it here,\nin the DHCP pool, so\n\n1293\n01:04:07,376 --> 01:04:10,280\nthey're gonna see this\nas their DHCP server.\n\n1294\n01:04:10,280 --> 01:04:12,924\nSo I'll say link-address, and\n\n1295\n01:04:12,924 --> 01:04:18,787\nthen I'll do fe80 :230::1/64\nnow I'm just making that up.\n\n1296\n01:04:18,787 --> 01:04:21,984\nFE8, that lets it know this\nis a link local address.\n\n1297\n01:04:21,984 --> 01:04:27,327\nBut then I chose to give it :230::1\njust so I can visually recognize this.\n\n1298\n01:04:27,327 --> 01:04:32,549\nAll right,\nnext I want to give them a DNS server.\n\n1299\n01:04:32,549 --> 01:04:39,213\nSo I'll give them fd00:230::5.\n\n1300\n01:04:39,213 --> 01:04:40,442\nThat's their DNS server.\n\n1301\n01:04:40,442 --> 01:04:42,051\nI know in the last\nsegment that I mentioned,\n\n1302\n01:04:42,051 --> 01:04:43,410\nwe could give out like time servers.\n\n1303\n01:04:43,410 --> 01:04:47,100\nSo if I wanted to do that,\nI believe it's sntp-server.\n\n1304\n01:04:47,100 --> 01:04:47,960\nNope, apparently it isn't.\n\n1305\n01:04:47,960 --> 01:04:49,310\nWhat is it?\n\n1306\n01:04:49,310 --> 01:04:51,820\n>> Address.\n>> Oh, SMTP address, there we go.\n\n1307\n01:04:53,290 --> 01:04:54,220\nSlight variation.\n\n1308\n01:04:54,220 --> 01:04:58,130\nIt would be too much to ask to get\ngood consistency of commands there.\n\n1309\n01:04:58,130 --> 01:05:03,235\nSo I did SMTP address, FD00: 230::6.\n\n1310\n01:05:03,235 --> 01:05:05,546\nThese servers don't exist,\nI'm just throwing in values so\n\n1311\n01:05:05,546 --> 01:05:06,800\nthat they'll be there.\n\n1312\n01:05:06,800 --> 01:05:07,720\nThese are like our DHCP options.\n\n1313\n01:05:09,200 --> 01:05:12,280\nAnd if you do a question mark, you'll see\nwhere you can do vendor specific options.\n\n1314\n01:05:12,280 --> 01:05:14,830\nSo you can put in all those\ncustom ones if you want.\n\n1315\n01:05:14,830 --> 01:05:15,790\nYou can do all sorts of things.\n\n1316\n01:05:17,480 --> 01:05:19,960\nAll right, so now I've got my pool set.\n\n1317\n01:05:21,380 --> 01:05:24,900\nFrom here, I need to go and\nturn it on on my interface.\n\n1318\n01:05:24,900 --> 01:05:31,180\nSo I'll get into interface E00, and I'll\nstart with a little bit of IPv6 enable.\n\n1319\n01:05:31,180 --> 01:05:32,600\nI need to get that going.\n\n1320\n01:05:32,600 --> 01:05:34,930\nAnd then I'm gonna give\nmyself a static address.\n\n1321\n01:05:34,930 --> 01:05:39,210\nI'll say IPv6 address FD00:230::1.\n\n1322\n01:05:39,210 --> 01:05:42,490\nThat's what I want my address to be.\n\n1323\n01:05:43,520 --> 01:05:45,740\nThen I'll tell it that I'm doing DHCP.\n\n1324\n01:05:45,740 --> 01:05:48,410\nThe big difference from when we did SLAAC.\n\n1325\n01:05:48,410 --> 01:05:52,580\nIs that here,\nwhen I point to that DHCP pool,\n\n1326\n01:05:52,580 --> 01:05:54,720\nthis pool actually has\na prefix entered into it.\n\n1327\n01:05:54,720 --> 01:05:57,450\nSo it actually has a range\nof addresses available.\n\n1328\n01:05:57,450 --> 01:06:00,250\nSo, I'm gonna tell it that\nI'm gonna be a DHCP server.\n\n1329\n01:06:00,250 --> 01:06:02,480\nAnd that my pool is ITProTV-Studio.\n\n1330\n01:06:02,480 --> 01:06:04,210\nThere we go.\n\n1331\n01:06:04,210 --> 01:06:06,900\nI've got my IPv6 enabled.\n\n1332\n01:06:06,900 --> 01:06:11,090\nI should be good to go,\nyeah actually I think I am good to go.\n\n1333\n01:06:11,090 --> 01:06:14,570\nLet me just verify that config, and\nmake sure I didn't miss any commands.\n\n1334\n01:06:14,570 --> 01:06:16,850\nSo I created my pool right here.\n\n1335\n01:06:17,850 --> 01:06:19,150\nDifferent than the pool last time.\n\n1336\n01:06:19,150 --> 01:06:21,820\nIs the main fact that I\nput in my address prefix.\n\n1337\n01:06:21,820 --> 01:06:24,850\nSo I designated that so\nit's got that range of addresses.\n\n1338\n01:06:24,850 --> 01:06:31,100\nAnd then on the interface,\nI enabled IPV 6 and I tied the pool to it.\n\n1339\n01:06:31,100 --> 01:06:32,430\nSo we should be good to go there.\n\n1340\n01:06:32,430 --> 01:06:34,600\nWe're now up and running as a DHCP server.\n\n1341\n01:06:36,100 --> 01:06:40,860\nOn the client side,\nI can jump into that interface.\n\n1342\n01:06:42,320 --> 01:06:43,790\nAnd did I do a no shut down on this one?\n\n1343\n01:06:45,030 --> 01:06:45,760\nI don't think I did.\n\n1344\n01:06:45,760 --> 01:06:49,200\nLet me go back to my server, and\nmake sure I do a no shutdown.\n\n1345\n01:06:50,340 --> 01:06:52,650\nOtherwise we won't get very far there.\n\n1346\n01:06:52,650 --> 01:06:54,950\nLayer one connectivity,\nyou gotta have that in place.\n\n1347\n01:06:54,950 --> 01:06:56,460\nThere we go.\n\n1348\n01:06:56,460 --> 01:06:59,040\nAll right, so\nnow that was the server side.\n\n1349\n01:06:59,040 --> 01:07:01,620\nOn the client side,\nwe jump into our interface, and\n\n1350\n01:07:01,620 --> 01:07:02,790\njust a couple of commands here.\n\n1351\n01:07:02,790 --> 01:07:06,370\n[COUGH] Basically,\nwe need to say IPv6 enable.\n\n1352\n01:07:06,370 --> 01:07:08,830\nIt's gotta know that it's doing that.\n\n1353\n01:07:08,830 --> 01:07:13,260\nAnd we need to say ipv6 address dhcp.\n\n1354\n01:07:14,570 --> 01:07:18,010\nNot IPv6 address auto config.\n\n1355\n01:07:18,010 --> 01:07:20,440\nAuto config was for the stateless stuff.\n\n1356\n01:07:20,440 --> 01:07:23,090\nWe still generate our own\naddress when you do stateless.\n\n1357\n01:07:23,090 --> 01:07:28,330\nWhen I say DHCP, the router is gonna\ngenerate our address, and give it to us.\n\n1358\n01:07:28,330 --> 01:07:31,990\nSo that's the variation and that's why\nthis command is different on the client.\n\n1359\n01:07:31,990 --> 01:07:34,150\nSo auto config, if we generate the IP.\n\n1360\n01:07:34,150 --> 01:07:39,560\nDHCP if the server generates the IP.\n\n1361\n01:07:39,560 --> 01:07:41,390\nNow I'll do a no shutdown on that.\n\n1362\n01:07:43,040 --> 01:07:44,770\nSo that's all I've done on the client.\n\n1363\n01:07:44,770 --> 01:07:46,630\nThe interface is going to come up.\n\n1364\n01:07:46,630 --> 01:07:48,630\nNeighbor discovery and\nall that's going to kick in.\n\n1365\n01:07:48,630 --> 01:07:50,560\nMy debug should still be going.\n\n1366\n01:07:50,560 --> 01:07:53,870\nAnd it's going to find that\ninformation and get an address.\n\n1367\n01:07:53,870 --> 01:07:55,210\nNow just like regular DHCP,\n\n1368\n01:07:55,210 --> 01:07:59,330\nI will get a message that says\nthe address was issued, eventually.\n\n1369\n01:07:59,330 --> 01:08:00,850\nAnd we'll have the address.\n\n1370\n01:08:00,850 --> 01:08:01,570\nWe'll have our information.\n\n1371\n01:08:01,570 --> 01:08:03,350\nAnd we'll be ready to rock.\n\n1372\n01:08:03,350 --> 01:08:04,270\nNow I'm going to wait.\n\n1373\n01:08:04,270 --> 01:08:06,770\nPatiently, or impatiently, I don't know.\n\n1374\n01:08:06,770 --> 01:08:08,400\nAnd see what happens.\n\n1375\n01:08:08,400 --> 01:08:13,018\nIf you're curious,\nyou can always do show ipv6 dhcp.\n\n1376\n01:08:14,379 --> 01:08:16,010\nAnd it would give you\na little bit of information.\n\n1377\n01:08:16,010 --> 01:08:18,800\nNow, mine's just showing me an identifier,\nand that's not a good sign.\n\n1378\n01:08:18,800 --> 01:08:21,060\nIt means I'm not finding anything else.\n\n1379\n01:08:21,060 --> 01:08:23,140\nSo we'll see if I can't\nspot what's going on.\n\n1380\n01:08:23,140 --> 01:08:24,120\nMy interface came up.\n\n1381\n01:08:27,770 --> 01:08:31,920\nAnd I guess my debug turned\noff because I got an address.\n\n1382\n01:08:31,920 --> 01:08:34,530\nRight there,\nI can see that I did get an address.\n\n1383\n01:08:34,530 --> 01:08:36,570\nI did a show ipv6 int brief.\n\n1384\n01:08:36,570 --> 01:08:39,952\nLet me change that to show ipv6 int e0/0.\n\n1385\n01:08:39,952 --> 01:08:45,190\nAnd I can see that I've\ngot that link-local there.\n\n1386\n01:08:45,190 --> 01:08:49,620\nI've got this global unicast address\nthat I got of fd00: and so on.\n\n1387\n01:08:49,620 --> 01:08:55,310\nSo that's all available,\nand so it is up and going.\n\n1388\n01:08:55,310 --> 01:08:56,980\nAnd it got its address.\n\n1389\n01:08:56,980 --> 01:08:58,980\nAnd if I jump back to my headquarters.\n\n1390\n01:08:58,980 --> 01:09:01,950\nWell this is the guy that\nissued out that address.\n\n1391\n01:09:01,950 --> 01:09:05,200\nAnd if we do,\nlet's see if I can remember this command.\n\n1392\n01:09:05,200 --> 01:09:07,660\nIt is show ipv6 dhcp database.\n\n1393\n01:09:07,660 --> 01:09:08,360\nThere we go.\n\n1394\n01:09:10,970 --> 01:09:12,520\nMy database is showing empty.\n\n1395\n01:09:12,520 --> 01:09:14,310\nThat's not always good, is it?\n\n1396\n01:09:14,310 --> 01:09:16,140\nLet's see if we can find the binding for\nthat one.\n\n1397\n01:09:17,190 --> 01:09:18,010\nThere we go.\n\n1398\n01:09:18,010 --> 01:09:20,230\nSo if I look in my binding,\nhere's the client.\n\n1399\n01:09:20,230 --> 01:09:21,880\nThis is my other client.\n\n1400\n01:09:21,880 --> 01:09:24,400\nMy branch ones MAC address engine 200.\n\n1401\n01:09:24,400 --> 01:09:25,340\nSo here it is.\n\n1402\n01:09:25,340 --> 01:09:27,330\nAnd here's the address\nthat we assigned to them.\n\n1403\n01:09:27,330 --> 01:09:29,550\nThe preferred lifetime of 24 hours.\n\n1404\n01:09:29,550 --> 01:09:31,710\nThe valid lifetime of eight days.\n\n1405\n01:09:31,710 --> 01:09:33,130\nAnd when they expire.\n\n1406\n01:09:33,130 --> 01:09:37,540\nSo I can see the binding, they've\ngot that address, and it's in place.\n\n1407\n01:09:37,540 --> 01:09:40,080\nThis is different Than SLAAC.\n\n1408\n01:09:40,080 --> 01:09:43,570\nWith SLAAC, I can't see who\nI've issued to in the past.\n\n1409\n01:09:43,570 --> 01:09:45,490\nBut with DHCP it's stateful.\n\n1410\n01:09:45,490 --> 01:09:47,810\nWe keep that state, and\nwe keep a record of it in the database.\n\n1411\n01:09:47,810 --> 01:09:50,520\nSo when I look at the binding database,\nthere it is.\n\n1412\n01:09:50,520 --> 01:09:51,880\nI've got a record of it.\n\n1413\n01:09:51,880 --> 01:09:53,370\nAnd I know how long it's good for.\n\n1414\n01:09:53,370 --> 01:09:56,980\nSo they need to check\nback in every 24 hours.\n\n1415\n01:09:56,980 --> 01:10:00,530\nIf they run eight days without\nchecking in, I free up that address.\n\n1416\n01:10:00,530 --> 01:10:01,880\nAnd I turn it back over to somebody else.\n\n1417\n01:10:03,390 --> 01:10:05,910\nAlright dhcp not hard to configure.\n\n1418\n01:10:05,910 --> 01:10:08,510\nJust be aware you can\ndo infinite life times,\n\n1419\n01:10:08,510 --> 01:10:10,090\nthey seem to do it in all the examples.\n\n1420\n01:10:10,090 --> 01:10:11,560\nI don't know why they do that.\n\n1421\n01:10:11,560 --> 01:10:16,300\nIf you run that way and you run for a few\nyears, you can run out of memory you know.\n\n1422\n01:10:16,300 --> 01:10:18,050\nIt can get to be a big database.\n\n1423\n01:10:18,050 --> 01:10:21,360\nAnd these routers don't save\nthe database to flash by default.\n\n1424\n01:10:21,360 --> 01:10:24,360\nSo if you reboot the router,\nthe database gets wiped.\n\n1425\n01:10:24,360 --> 01:10:26,020\nAnd so that's not necessarily good.\n\n1426\n01:10:26,020 --> 01:10:28,040\nThere is a way to get it\nto save that to flash.\n\n1427\n01:10:28,040 --> 01:10:31,320\nI can't remember it off hand,\nbut it's just not a great idea.\n\n1428\n01:10:31,320 --> 01:10:33,710\nWe typically don't use routers for\nDHCP servers.\n\n1429\n01:10:33,710 --> 01:10:35,730\nSo just bear that in mind.\n\n1430\n01:10:35,730 --> 01:10:40,020\nWith stateless autoconfig,\nyou rarely need to.\n\n1431\n01:10:40,020 --> 01:10:40,660\nUse stateless.\n\n1432\n01:10:40,660 --> 01:10:41,860\nIt pushes out the address.\n\n1433\n01:10:41,860 --> 01:10:42,910\nEverybody gets their own address.\n\n1434\n01:10:42,910 --> 01:10:44,350\nRegisters with DNS and off they go.\n\n1435\n01:10:44,350 --> 01:10:46,850\nYou really don't have to\nremember the addresses anymore.\n\n1436\n01:10:48,440 --> 01:10:53,120\nAlright, so that's pretty much it for\nbasic IPv6 operation.\n\n1437\n01:10:53,120 --> 01:10:55,220\nIt doesn't mean we're done with IPv6.\n\n1438\n01:10:55,220 --> 01:10:58,900\nThroughout this show, as we start\ngetting into things like EIGRP and OSPF.\n\n1439\n01:10:58,900 --> 01:11:01,450\nWe're going to see IPv4 and\n\n1440\n01:11:01,450 --> 01:11:06,320\nIPv6 routing with those guys\nbecause their both on the exam.\n\n1441\n01:11:06,320 --> 01:11:08,990\nYou need to be able to use\nthose protocols for both.\n\n1442\n01:11:08,990 --> 01:11:11,120\nSo important differentiator there.\n\n1443\n01:11:11,120 --> 01:11:13,810\nDifferent ways to configure things for\nthe different protocols.\n\n1444\n01:11:13,810 --> 01:11:17,880\nWe will see more, but as far as\nthe basics, that's about it for IPv6.\n\n1445\n01:11:19,310 --> 01:11:21,880\nRonnie, can you think of anything else\nwe should throw in before we wrap it up?\n\n1446\n01:11:21,880 --> 01:11:23,410\n>> The only thing that I recommend is,\n\n1447\n01:11:23,410 --> 01:11:27,060\nif this is confusing you as\nfar as the hexadecimal goes.\n\n1448\n01:11:27,060 --> 01:11:29,380\nPlease take some time, and\nmake sure you go back and\n\n1449\n01:11:29,380 --> 01:11:32,800\nlearn a little bit of\nhexadecimal conversion.\n\n1450\n01:11:32,800 --> 01:11:36,140\nThat's gonna also help you when\nyou're getting ready for the exam.\n\n1451\n01:11:36,140 --> 01:11:40,610\nWhen you do see IPv4 addresses and\nIPv6 addresses.\n\n1452\n01:11:40,610 --> 01:11:41,860\nAnd you're gonna be comparing them.\n\n1453\n01:11:41,860 --> 01:11:45,440\nSo make sure you at least learn\nsome of those conversions.\n\n1454\n01:11:45,440 --> 01:11:47,140\nPractice, practice, practice is the key.\n\n1455\n01:11:49,140 --> 01:11:51,270\n>> All right, well ladies and\ngentlemen, let me remind you guys.\n\n1456\n01:11:51,270 --> 01:11:54,140\nIf you have questions on any of this,\nfeel free to ask.\n\n1457\n01:11:54,140 --> 01:11:56,670\nLive during the show you\ncan go to itpro.tv/live.\n\n1458\n01:11:56,670 --> 01:11:59,110\nAnd you'll see the chat\nbox beneath the video.\n\n1459\n01:11:59,110 --> 01:12:00,300\nPost your questions there.\n\n1460\n01:12:00,300 --> 01:12:02,110\nWe monitor and answer during the show.\n\n1461\n01:12:02,110 --> 01:12:06,540\nIf you have questions after the show, like\nwhen we're showing reruns or whatever.\n\n1462\n01:12:06,540 --> 01:12:10,260\nYou can hit that Q and A link at the top\nof every page on the IT Pro TV site.\n\n1463\n01:12:10,260 --> 01:12:11,680\nIt will take you to the forums.\n\n1464\n01:12:11,680 --> 01:12:13,220\nYou can post your questions there.\n\n1465\n01:12:13,220 --> 01:12:15,380\nWe monitor and answer after the show.\n\n1466\n01:12:15,380 --> 01:12:18,370\nTake advantage of that resource,\nits there for you.\n\n1467\n01:12:18,370 --> 01:12:20,050\nWell I hope you guys\nenjoyed today's episode.\n\n1468\n01:12:20,050 --> 01:12:22,590\nSigning off for IT Pro TV I'm Don Pezet.\n\n1469\n01:12:22,590 --> 01:12:25,054\n>> I'm Ronnie Wong.\n>> And we'll see ya next time.\n\n1470\n01:12:25,054 --> 01:12:35,054\n[MUSIC]\n\n1471\n01:12:38,728 --> 01:12:45,120\n[SOUND]\n\n",
          "vimeoId": "118718382"
        },
        {
          "description": "Static routing is when one gives a command to a router to manually go somewhere, which overrides any other route preference. Viewers will hear about configuring static routing including the pros and cons of using static routing and hear demonstrations on how to configure it and use IP SLA to \"track\" the viability of the next hop.",
          "length": "2854",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/ccnproute/cisco-ccnproute-3-3-static_routing-020415.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/ccnproute/cisco-ccnproute-3-3-static_routing-020415-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/ccnproute/cisco-ccnproute-3-3-static_routing-020415-sm.jpg",
          "title": "Static Routing",
          "transcript": "1\n00:00:00,022 --> 00:00:10,022\n[MUSIC]\n\n2\n00:00:15,381 --> 00:00:22,881\n[SOUND]\n\n3\n00:00:22,881 --> 00:00:33,770\n[MUSIC]\n\n4\n00:00:33,770 --> 00:00:36,794\nAll right, good morning,\ngood afternoon, and good evening,\n\n5\n00:00:36,794 --> 00:00:38,930\nwelcome back to another\nepisode of IT Pro TV.\n\n6\n00:00:38,930 --> 00:00:42,030\nI'm your host Don Pezet,\nback to you and Mr. Ronnie Wong.\n\n7\n00:00:42,030 --> 00:00:42,730\nHow's it going Ronnie?\n\n8\n00:00:42,730 --> 00:00:44,360\n>> It is going well today.\n\n9\n00:00:44,360 --> 00:00:46,090\nAnother beautiful day here in Florida.\n\n10\n00:00:46,090 --> 00:00:48,380\nI was gonna say sunny,\nbut I'd be lying to you.\n\n11\n00:00:48,380 --> 00:00:53,180\nIt is a great day to get started and\nwe're here to do some CCNP Route.\n\n12\n00:00:53,180 --> 00:00:55,460\nSo we're taking a look at\na lot of neat stuff today,\n\n13\n00:00:55,460 --> 00:00:58,570\nand just making sure we cover\nthe fundamentals that we need to.\n\n14\n00:00:58,570 --> 00:01:01,660\nAnd get ready for\nsome of the deeper CCMP studies.\n\n15\n00:01:01,660 --> 00:01:03,340\n>> Yeah,\nI wish it was a lot of neat stuff.\n\n16\n00:01:03,340 --> 00:01:05,050\nThere's actually just\na little bit of neat stuff.\n\n17\n00:01:05,050 --> 00:01:09,060\nWe've got a small objective today,\n3.3, which is configure and\n\n18\n00:01:09,060 --> 00:01:11,300\nverify static routing.\n\n19\n00:01:11,300 --> 00:01:15,750\nNow, it's easy to lose sight as you\nstudy for the CCMP about static routing.\n\n20\n00:01:15,750 --> 00:01:19,000\nWe spend so much time talking\nabout dynamic routing protocols.\n\n21\n00:01:19,000 --> 00:01:24,590\nEIGRP, OSPF, RIP, BGP,\nall these protocols that do amazing things\n\n22\n00:01:24,590 --> 00:01:28,940\nthat you start to lose sight of\nthe original guy, the basic static route.\n\n23\n00:01:28,940 --> 00:01:31,460\nAnd so that's what we're gonna\ntalk about here in this episode.\n\n24\n00:01:31,460 --> 00:01:33,010\nIt will be a shorter one\nbecause there's only so\n\n25\n00:01:33,010 --> 00:01:34,740\nmuch you can talk about\nwith basic static routes.\n\n26\n00:01:34,740 --> 00:01:37,370\nBut it's important to know and\nbe aware of.\n\n27\n00:01:37,370 --> 00:01:41,200\nNow, when it comes to static routing,\nlet's just kind of define what it is.\n\n28\n00:01:41,200 --> 00:01:43,210\nYou guys are mostly familiar\nwith this I'm sure.\n\n29\n00:01:43,210 --> 00:01:47,580\nBut, static routing is simply when we\ntell the router how to get somewhere,\n\n30\n00:01:47,580 --> 00:01:49,960\nwe manually interact with the router and\nsay,\n\n31\n00:01:49,960 --> 00:01:54,530\nhey, if you need to get to this network,\nhere's the way you can get there.\n\n32\n00:01:54,530 --> 00:01:57,320\nWe're overriding whatever other\nfunctionality that's not with\n\n33\n00:01:57,320 --> 00:01:57,850\nthat static route.\n\n34\n00:01:57,850 --> 00:01:59,930\n>> Yeah.\nWhen we take a look at static routes,\n\n35\n00:01:59,930 --> 00:02:02,520\nwhat we're trying to do is, we're saying,\n\n36\n00:02:02,520 --> 00:02:07,170\nhere's how the router is going to take\nthat one path to the best destination.\n\n37\n00:02:07,170 --> 00:02:09,370\nNow, Cisco loves this thing.\n\n38\n00:02:09,370 --> 00:02:14,150\nLoves static routing so\nmuch that when you put in a static route,\n\n39\n00:02:14,150 --> 00:02:16,550\nit doesn't matter what the dynamic\nrouting protocol normally is,\n\n40\n00:02:16,550 --> 00:02:20,620\nthis is gonna be the preferred one\nbecause it believes you know better\n\n41\n00:02:20,620 --> 00:02:24,130\nthan what those routing protocols\ncan actually end up figuring out.\n\n42\n00:02:24,130 --> 00:02:28,680\nSo it actually says well, you're the boss,\nso you figure out how to do it, and\n\n43\n00:02:28,680 --> 00:02:30,450\nlet's just do it your way instead.\n\n44\n00:02:30,450 --> 00:02:33,350\n>> Yeah, in the world of routes, you know\nwe have an administrative distance that\n\n45\n00:02:33,350 --> 00:02:36,150\ndetermines which routes get\npreferred over other ones.\n\n46\n00:02:36,150 --> 00:02:39,120\nAnd a static route has\nan administrative distance of one.\n\n47\n00:02:40,150 --> 00:02:43,030\nThe lower number wins and\nthat's a pretty low number there, right?\n\n48\n00:02:43,030 --> 00:02:46,660\nVersus EIGRP that's 90,\nor OSPF that's 110.\n\n49\n00:02:46,660 --> 00:02:51,430\nOne, that's pretty low,\nin fact by default,\n\n50\n00:02:51,430 --> 00:02:56,050\nthe only thing that beats a static\nroute is a directly connected route.\n\n51\n00:02:56,050 --> 00:02:59,460\nIf you have an interface that is\ndirectly connected to a network,\n\n52\n00:02:59,460 --> 00:03:02,010\nthat has an administrative\ndistance of zero.\n\n53\n00:03:02,010 --> 00:03:03,880\nSo, when you put a static route in,\n\n54\n00:03:03,880 --> 00:03:06,670\nif you're not running a dynamic routing\nprotocol, then it's just a normal route.\n\n55\n00:03:06,670 --> 00:03:09,920\nYou put it in, and that's it, but\nif you're running any dynamic routing\n\n56\n00:03:09,920 --> 00:03:14,930\nprotocols, by default, your static route\nwill override the dynamic protocol.\n\n57\n00:03:14,930 --> 00:03:18,030\nIt'll take precedence over it and\nmake it into the routing table.\n\n58\n00:03:18,030 --> 00:03:18,790\n>> Yeah.\n\n59\n00:03:18,790 --> 00:03:21,780\nThe nice thing about entering\nstatic routes is that one,\n\n60\n00:03:21,780 --> 00:03:24,150\nit's incredibly easy to do so.\n\n61\n00:03:24,150 --> 00:03:28,580\nSo once you learn the command,\nit really is fairly easy to do so.\n\n62\n00:03:28,580 --> 00:03:33,890\nSo once that's set up in there,\nthe administrative distance takes over,\n\n63\n00:03:33,890 --> 00:03:37,380\nwe don't have to worry about, the router\nsays hey, here's what we wanna do.\n\n64\n00:03:37,380 --> 00:03:40,820\nSecondly, because we're not running\na dynamic routing protocol,\n\n65\n00:03:40,820 --> 00:03:43,430\nwe're not having the router\ndo anything else.\n\n66\n00:03:43,430 --> 00:03:48,190\nThe router actually has a lot less\noverhead, so that way once it's set up,\n\n67\n00:03:48,190 --> 00:03:51,040\nthe router just looked at round test,\nyeah let's just go and do that.\n\n68\n00:03:51,040 --> 00:03:52,830\nLet's not have to calculate any metrics,\n\n69\n00:03:52,830 --> 00:03:55,530\nlet's not have to do anything\nelse to discover anything else.\n\n70\n00:03:55,530 --> 00:03:57,070\nLet's just do it your way.\n\n71\n00:03:57,070 --> 00:04:02,070\nSo that makes it very extremely nice and\neasy for the CPU on the router.\n\n72\n00:04:02,070 --> 00:04:04,460\n>> Now, Ronnie, you just got done\ntalking nice about static routes,\n\n73\n00:04:04,460 --> 00:04:06,270\nlet me talk bad about them for a second.\n\n74\n00:04:06,270 --> 00:04:10,060\nWhenever you have pros,\nlike that they're easy to configure,\n\n75\n00:04:10,060 --> 00:04:13,670\nand low overhead, there's always some\nnegatives that go along with it.\n\n76\n00:04:13,670 --> 00:04:15,600\nOne of the big negatives\nthat we have is that,\n\n77\n00:04:15,600 --> 00:04:18,220\nthat low overhead where we're\nnot doing calculations?\n\n78\n00:04:18,220 --> 00:04:21,520\nThat means that if the status\nof our network changes,\n\n79\n00:04:21,520 --> 00:04:23,000\nyour static route doesn't change.\n\n80\n00:04:23,000 --> 00:04:23,630\nIt's static.\n\n81\n00:04:23,630 --> 00:04:24,870\nYou've manually put it in there.\n\n82\n00:04:24,870 --> 00:04:27,510\nIt's gonna stay even if\nthe destination is gone and\n\n83\n00:04:27,510 --> 00:04:30,730\nthat means you can have\nbad routes as a result.\n\n84\n00:04:30,730 --> 00:04:33,470\nSo not so great there,\nthey're not dynamic.\n\n85\n00:04:33,470 --> 00:04:35,320\nThey're also prone to mistake.\n\n86\n00:04:35,320 --> 00:04:36,620\nWe put them in there, right?\n\n87\n00:04:36,620 --> 00:04:40,220\nA human being types in that static\nroute and you can make an error.\n\n88\n00:04:40,220 --> 00:04:42,670\nYou can put something in\nthat's not valid ,and now,\n\n89\n00:04:42,670 --> 00:04:44,060\nyou've got a route that you can't read.\n\n90\n00:04:44,060 --> 00:04:45,810\nSo those are some of the negatives.\n\n91\n00:04:45,810 --> 00:04:49,290\nThe last one that I want\nto mention is that,\n\n92\n00:04:49,290 --> 00:04:53,810\nas we start to put this stuff in,\nover time things change, right?\n\n93\n00:04:53,810 --> 00:04:55,020\nAnd with dynamic routing protocol,\n\n94\n00:04:55,020 --> 00:04:56,820\nyour routers will learn about\nthe changes that are out there.\n\n95\n00:04:56,820 --> 00:04:57,850\nBut with a static route they don't.\n\n96\n00:04:57,850 --> 00:05:01,080\nYou would have to manually go and\nmodify it.\n\n97\n00:05:01,080 --> 00:05:02,080\nSo let's say for example,\n\n98\n00:05:02,080 --> 00:05:06,070\nyou worked at a company that had 300\nbranch office spread across your country.\n\n99\n00:05:07,130 --> 00:05:09,680\nAnd you used all static routing, right?\n\n100\n00:05:09,680 --> 00:05:12,790\nAnd so each branch had a static\nroute to get to the various other\n\n101\n00:05:12,790 --> 00:05:13,990\nbranches that are out there.\n\n102\n00:05:13,990 --> 00:05:18,720\nWell, if I had 300 branches and\nI open up my 301st store, I would have\n\n103\n00:05:18,720 --> 00:05:23,620\nto go to all of the other routers and\nupdate their routing tables.\n\n104\n00:05:23,620 --> 00:05:25,710\nI have to put a manual route in\nthere to say, oh yeah, by the way,\n\n105\n00:05:25,710 --> 00:05:27,930\nthere's this new store,\nhere's how you can get it, right?\n\n106\n00:05:27,930 --> 00:05:31,420\nI have to go and do that by hand versus\na dynamic routing protocol where\n\n107\n00:05:31,420 --> 00:05:34,230\nyou bring up that new store and\neverybody else just learns about it.\n\n108\n00:05:34,230 --> 00:05:36,170\nIt's all done seamlessly.\n\n109\n00:05:36,170 --> 00:05:37,620\nSo there's trade offs.\n\n110\n00:05:38,800 --> 00:05:40,930\nStatic routes, they're easy to implement.\n\n111\n00:05:40,930 --> 00:05:42,210\nThey override other protocols.\n\n112\n00:05:42,210 --> 00:05:43,800\nYou can manually influence behavior.\n\n113\n00:05:43,800 --> 00:05:45,090\nThat's good.\n\n114\n00:05:45,090 --> 00:05:47,980\nBut there's maintenance we have to do\nby hand and mistakes that can be made.\n\n115\n00:05:47,980 --> 00:05:48,480\nThat's bad.\n\n116\n00:05:48,480 --> 00:05:52,830\nYou've got to weigh those decisions\nto determine whether a static route\n\n117\n00:05:52,830 --> 00:05:53,700\nis right for you.\n\n118\n00:05:54,990 --> 00:05:58,210\nNow, there is one scenario where\nstatic routes are almost always\n\n119\n00:05:58,210 --> 00:05:59,300\nthe right decision.\n\n120\n00:05:59,300 --> 00:06:01,360\nAnd that's when we're dealing\nwith default gateways.\n\n121\n00:06:01,360 --> 00:06:04,170\nBut in this episode, we're not really\ngoing to focus on default gateways.\n\n122\n00:06:04,170 --> 00:06:06,560\nWe'll save that for the next episode.\n\n123\n00:06:06,560 --> 00:06:12,540\nBut when you put in a static route,\nyou've got to have a reason to do that.\n\n124\n00:06:12,540 --> 00:06:14,690\nIf any of you go on to do the CCIE exam.\n\n125\n00:06:14,690 --> 00:06:18,640\nIt's in almost every single question\nwhere they say you need to fix or\n\n126\n00:06:18,640 --> 00:06:20,120\nprovide this solution.\n\n127\n00:06:20,120 --> 00:06:21,510\nAnd do not use static routes.\n\n128\n00:06:21,510 --> 00:06:23,060\nThey always said, don't use static routes.\n\n129\n00:06:23,060 --> 00:06:25,600\nYou've got to make dynamic\nrouting protocols do this.\n\n130\n00:06:25,600 --> 00:06:28,730\nIt's because the dynamic routing\nprotocols are powerful, they're smart,\n\n131\n00:06:28,730 --> 00:06:30,070\nthey make good decisions.\n\n132\n00:06:30,070 --> 00:06:31,780\nYou should be using them.\n\n133\n00:06:31,780 --> 00:06:34,740\nBut, if you've got a router\nthat's deployed somewhere and\n\n134\n00:06:34,740 --> 00:06:36,620\nthere's only one way in and\n\n135\n00:06:36,620 --> 00:06:40,360\none way out of that network, you don't\nneed a dynamic routing protocol for that.\n\n136\n00:06:40,360 --> 00:06:40,940\nWhat's there to learn?\n\n137\n00:06:40,940 --> 00:06:42,650\nThere's only one way in and\none way out, right?\n\n138\n00:06:42,650 --> 00:06:45,090\nSo, so why bother with\na dynamic routing protocol?\n\n139\n00:06:45,090 --> 00:06:49,260\nYou can use static routes to define the\nnetworks that are on that other side and\n\n140\n00:06:49,260 --> 00:06:50,440\noff you go.\n\n141\n00:06:50,440 --> 00:06:52,780\nMuch more simple, much more compact and\n\n142\n00:06:52,780 --> 00:06:55,110\nyou'll get better performance\nout of your router.\n\n143\n00:06:55,110 --> 00:06:58,480\nSo keep all of that in mind\nwhen it comes to static routes.\n\n144\n00:06:58,480 --> 00:07:00,960\nNow, what if we want to\nimplement a static route?\n\n145\n00:07:00,960 --> 00:07:02,640\nWell they're pretty easy, right?\n\n146\n00:07:02,640 --> 00:07:06,370\nWe basically tell the router a network,\nso we have to give it a subnet and\n\n147\n00:07:06,370 --> 00:07:07,440\na subnet mask.\n\n148\n00:07:07,440 --> 00:07:09,540\nWe give it a network, and\nwe tell it how to get there.\n\n149\n00:07:09,540 --> 00:07:12,950\nAnd there's two ways to\ntell it where to go.\n\n150\n00:07:12,950 --> 00:07:14,480\nYou can tell it a destination IP.\n\n151\n00:07:14,480 --> 00:07:19,662\nYou can say hey, if you need to\nget to network 192.168.0.0/24,\n\n152\n00:07:19,662 --> 00:07:24,552\nyou can get there via this other\nrouter 192.168.1.5, right?\n\n153\n00:07:24,552 --> 00:07:26,390\nYou're specifying the next hop.\n\n154\n00:07:26,390 --> 00:07:28,640\nWho's the next hop on that journey?\n\n155\n00:07:28,640 --> 00:07:31,760\nUnlike a dynamic routing protocol\nwe don't know the whole path.\n\n156\n00:07:31,760 --> 00:07:33,030\nWe just know the next hop.\n\n157\n00:07:33,030 --> 00:07:35,280\nThat's what a static route does, right?\n\n158\n00:07:35,280 --> 00:07:36,200\nThat's good.\n\n159\n00:07:36,200 --> 00:07:39,190\nIf it's an IP, if it's a particular\nhost on the other side.\n\n160\n00:07:39,190 --> 00:07:41,260\nThere is another way to do it, though.\n\n161\n00:07:41,260 --> 00:07:44,243\nIf it's a point to point link\nlike a serial line, a T1 line,\n\n162\n00:07:44,243 --> 00:07:47,300\nthere's only one other router\non the other side of that line.\n\n163\n00:07:47,300 --> 00:07:49,214\nYou don't need to specify\na destination IP.\n\n164\n00:07:49,214 --> 00:07:52,134\nInstead, you can specify\na destination interface.\n\n165\n00:07:52,134 --> 00:07:56,648\nSo you can say the network\n192.168.0.0/24 is available.\n\n166\n00:07:56,648 --> 00:07:58,988\nVia my Serial1/0 interface.\n\n167\n00:07:58,988 --> 00:08:02,770\nSo just shoot it right out there, S1/0.\n\n168\n00:08:02,770 --> 00:08:03,650\nBy doing it that way,\n\n169\n00:08:03,650 --> 00:08:07,340\nit works independently of the IP\nrouter on the other side.\n\n170\n00:08:07,340 --> 00:08:11,430\nBut it assumes a point to point network,\nso it's not as versatile,\n\n171\n00:08:11,430 --> 00:08:13,710\nit's not as flexible as when\nwe specify a destination IP.\n\n172\n00:08:15,050 --> 00:08:19,990\nBut there are some pros to doing that,\nto pointing to an interface versus an IP,\n\n173\n00:08:19,990 --> 00:08:23,270\nthat come in kinda handy, and I wanna\nshow you guys that so we get a good\n\n174\n00:08:23,270 --> 00:08:27,700\nunderstanding, and so let's take a look at\nan example of doing some static routes.\n\n175\n00:08:27,700 --> 00:08:32,540\nAll right, I'm gonna take a router here,\nand I've got this branch one router and\n\n176\n00:08:32,540 --> 00:08:38,590\nif I jump into its configuration,\nI'll turn on one of its interfaces here.\n\n177\n00:08:38,590 --> 00:08:44,130\nActually, let me look at these\ninterfaces really quick.\n\n178\n00:08:44,130 --> 00:08:47,470\nOn my E0/0 interface,\nI've got the 192.168.0.2 network.\n\n179\n00:08:47,470 --> 00:08:50,270\nThat's what I've got on my e zero zero.\n\n180\n00:08:50,270 --> 00:08:51,930\nAnd on my e01 I've got 172.16.2.\n\n181\n00:08:51,930 --> 00:08:56,940\nRight so there's another\nnetwork that's available there.\n\n182\n00:08:56,940 --> 00:08:58,630\nAnd that interface is up.\n\n183\n00:08:59,930 --> 00:09:01,598\nSo if I look at my routing table,\n\n184\n00:09:01,598 --> 00:09:06,990\nI've got 192.168.0.0 which I'm\ndirectly connected to right?\n\n185\n00:09:06,990 --> 00:09:10,472\nAnd remember directly connected has\nan administrative distance of zero.\n\n186\n00:09:10,472 --> 00:09:11,460\nAnd I've got 172.16.\n\n187\n00:09:11,460 --> 00:09:13,051\nI thought it was .2.\n\n188\n00:09:13,051 --> 00:09:13,846\nOh it is.\n\n189\n00:09:13,846 --> 00:09:19,860\n172.16.2, it's subnetted right\nthere on this other interface,\n\n190\n00:09:19,860 --> 00:09:21,270\nso it's sitting in available.\n\n191\n00:09:21,270 --> 00:09:23,790\nI'm directly connected to it, all right.\n\n192\n00:09:23,790 --> 00:09:27,548\nIf I take a look at my other router,\nmy headquarters router here.\n\n193\n00:09:27,548 --> 00:09:30,780\nIt's got 192.168.0.\n\n194\n00:09:30,780 --> 00:09:33,910\nIt's on that same network\nas the other router.\n\n195\n00:09:33,910 --> 00:09:37,220\nBut it's not connected to 172.16.2.\n\n196\n00:09:37,220 --> 00:09:39,870\nIt doesn't know about\nthe 172.16.2 network.\n\n197\n00:09:39,870 --> 00:09:41,880\nIt has to go to the other\nrouter to get there.\n\n198\n00:09:43,000 --> 00:09:45,850\nSo, let me turn on this\ninterface real quick.\n\n199\n00:09:48,720 --> 00:09:51,260\nDon't wanna leave that part off.\n\n200\n00:09:51,260 --> 00:09:52,150\nThere we go.\n\n201\n00:09:52,150 --> 00:09:55,390\nAnd so now, I should be able to ping\nbetween my headquarters router and\n\n202\n00:09:55,390 --> 00:09:57,440\nthat branch router that's\nout there which is .2.\n\n203\n00:09:57,440 --> 00:09:59,730\nGive that just a second.\n\n204\n00:09:59,730 --> 00:10:00,940\nThere we go, all right.\n\n205\n00:10:00,940 --> 00:10:04,130\nSo I've got basic connectivity\nbetween my headquarters router and\n\n206\n00:10:04,130 --> 00:10:06,600\nmy branch router and they're\nconnecting via that 192.168.0 network,\n\n207\n00:10:06,600 --> 00:10:09,970\nthat's what's in between\nthese two routers.\n\n208\n00:10:09,970 --> 00:10:15,910\nBut I know on the other side of the branch\nrouter is the network 172.16.2,\n\n209\n00:10:15,910 --> 00:10:17,830\nthat network is over there.\n\n210\n00:10:17,830 --> 00:10:20,256\nAnd that branch router has an IP.\n\n211\n00:10:20,256 --> 00:10:22,801\nOf 172.16.2.1.\n\n212\n00:10:22,801 --> 00:10:26,130\nThat's that local IP\nhere on my routing table.\n\n213\n00:10:26,130 --> 00:10:27,750\nSo I know it's got that address.\n\n214\n00:10:27,750 --> 00:10:29,150\nAnd I know it's out there.\n\n215\n00:10:29,150 --> 00:10:31,220\nI need to be able to get to it.\n\n216\n00:10:31,220 --> 00:10:35,730\nBut if I try and get to it, it will fail.\n\n217\n00:10:35,730 --> 00:10:38,160\nSo if I try and ping 172.16.2.1.\n\n218\n00:10:38,160 --> 00:10:39,460\nI'm gonna try and get to it.\n\n219\n00:10:39,460 --> 00:10:42,060\nI'm gonna look to my routing table and\nI'm not gonna have a route.\n\n220\n00:10:43,120 --> 00:10:45,670\nI'm not running any routing\nprotocols right now, so\n\n221\n00:10:45,670 --> 00:10:47,340\nI don't know how to get there.\n\n222\n00:10:47,340 --> 00:10:48,930\nWell, what if I didn't know that for sure?\n\n223\n00:10:48,930 --> 00:10:52,320\nHow can we verify that we're\nrunning routing protocols?\n\n224\n00:10:52,320 --> 00:10:52,940\n>> Yeah.\n\n225\n00:10:52,940 --> 00:10:57,500\n>> If we take a look, the easiest way to\ndo that is to do the show IP protocols.\n\n226\n00:10:57,500 --> 00:11:01,110\nAnd that should tell us, at least, if\nthere's a routing protocol turning on, and\n\n227\n00:11:01,110 --> 00:11:02,340\nright now, let's see.\n\n228\n00:11:02,340 --> 00:11:02,840\nOh, no.\n>> They're not.\n\n229\n00:11:02,840 --> 00:11:04,040\n>> It's just the default and\n\n230\n00:11:04,040 --> 00:11:05,540\nthe self-aware stuff.\n\n231\n00:11:05,540 --> 00:11:09,680\nSo, right now, I'm not running EIGRP or\nOSPF or any of those other guys, so\n\n232\n00:11:09,680 --> 00:11:13,080\nI'm not learning any routes.\n\n233\n00:11:13,080 --> 00:11:15,930\nAnd if I look at my routing table,\nwhich we did just a minute ago, but\n\n234\n00:11:15,930 --> 00:11:20,040\nif I look at it again, I'll see\nthat 172.16.2 is not in that list.\n\n235\n00:11:20,040 --> 00:11:27,730\nThere's other stuff, but 172.16.2 is not\nthere, so I can tell it how to get there.\n\n236\n00:11:27,730 --> 00:11:31,404\nI can jump into my config, and I can say,\n\n237\n00:11:31,404 --> 00:11:36,260\nIP route 172.16.2.0 255.255.255.0.\n\n238\n00:11:36,260 --> 00:11:44,750\nSo that class C network is\navailable via somebody else.\n\n239\n00:11:44,750 --> 00:11:46,620\nAnd that somebody else,\nif you do a question mark,\n\n240\n00:11:46,620 --> 00:11:49,450\nyou'll see can be an IP address.\n\n241\n00:11:49,450 --> 00:11:50,610\nOr it can be an interface.\n\n242\n00:11:50,610 --> 00:11:52,220\nThat's what all this other stuff is.\n\n243\n00:11:52,220 --> 00:11:53,050\nRight?\n\n244\n00:11:53,050 --> 00:11:56,792\nAnd so I'll just say that\nit's available via 172.16.\n\n245\n00:11:56,792 --> 00:11:59,260\nno, wait, 192.168.0.2.\n\n246\n00:11:59,260 --> 00:12:02,900\nThat's the IP address of the other router.\n\n247\n00:12:02,900 --> 00:12:04,850\nAll right?\n\n248\n00:12:04,850 --> 00:12:09,320\nWhen I put that in and\nI look at my routing table,\n\n249\n00:12:09,320 --> 00:12:14,445\nI'll see it right in here\nthat I have a 172.16.2 route.\n\n250\n00:12:14,445 --> 00:12:14,945\nOkay?\n\n251\n00:12:16,570 --> 00:12:24,950\nAnd it's showing up in here as a static\nroute so it's got the S on the side of it.\n\n252\n00:12:24,950 --> 00:12:26,100\nIt's a static route.\n\n253\n00:12:26,100 --> 00:12:29,510\nAnd look at that metric right there 1/0,\nright?\n\n254\n00:12:29,510 --> 00:12:31,280\nThe 1, that's our administrative distance,\n\n255\n00:12:31,280 --> 00:12:34,550\nour static route has\nan administrative distance of 1.\n\n256\n00:12:34,550 --> 00:12:36,290\nThe metric is a zero.\n\n257\n00:12:36,290 --> 00:12:39,380\nWell that's because static\nroutes don't have a metric.\n\n258\n00:12:39,380 --> 00:12:40,590\nThere's no metric to measure.\n\n259\n00:12:40,590 --> 00:12:43,040\nThere's only just the next hop and\nthat's it.\n\n260\n00:12:43,040 --> 00:12:44,970\nSo the metric is always\nzero on a static route.\n\n261\n00:12:45,970 --> 00:12:47,650\nWe can manipulate\nthe administrative distance.\n\n262\n00:12:47,650 --> 00:12:51,420\nWe can't really manipulate\nthe metric on that.\n\n263\n00:12:51,420 --> 00:12:54,020\nNow we've got that punched in there.\n\n264\n00:12:54,020 --> 00:12:54,890\nWe've got that route.\n\n265\n00:12:55,910 --> 00:12:59,075\nI should be able to get to that system,\nright?\n\n266\n00:12:59,075 --> 00:13:00,700\n192.168.0.2.\nThat is the other router.\n\n267\n00:13:00,700 --> 00:13:06,950\nIf I ping that, I can get to it, right?\n\n268\n00:13:06,950 --> 00:13:11,650\nAnd if I ping to 172.16.2.1\nI can get to it, right.\n\n269\n00:13:11,650 --> 00:13:15,260\nI'm able to get to this network\nnow because I taught the router\n\n270\n00:13:15,260 --> 00:13:17,270\nabout the network, right.\n\n271\n00:13:17,270 --> 00:13:22,450\nNow, when you do a static route like this,\nit's pretty easy, right.\n\n272\n00:13:22,450 --> 00:13:24,970\nThere's the route,\nit's right there, it's in place.\n\n273\n00:13:24,970 --> 00:13:26,278\nMy router knows how to get there.\n\n274\n00:13:26,278 --> 00:13:29,400\nWe're done, right?\n\n275\n00:13:29,400 --> 00:13:31,450\nBrian, can you spot the problem here?\n\n276\n00:13:32,480 --> 00:13:33,260\n>> No, I cannot.\n\n277\n00:13:33,260 --> 00:13:34,030\nI've tried.\n\n278\n00:13:34,030 --> 00:13:37,100\n>> There's a problem here that's\nnot immediately evident, so\n\n279\n00:13:37,100 --> 00:13:39,110\nI don't blame you for not seeing it.\n\n280\n00:13:39,110 --> 00:13:43,050\nI put the static route in, I can ping\nto that other router, I can get there.\n\n281\n00:13:43,050 --> 00:13:44,580\nThings are working fine, right?\n\n282\n00:13:44,580 --> 00:13:46,170\nEverything is good.\n\n283\n00:13:46,170 --> 00:13:48,550\nWell, let me do a diagram here.\n\n284\n00:13:48,550 --> 00:13:52,040\nWhip up my little, simple diagrams.\n\n285\n00:13:52,040 --> 00:13:56,840\nAnd we'll grab a couple of routers,\nthrow it over here\n\n286\n00:13:58,090 --> 00:14:02,810\nlike this, and so\nI guess I need some clouds, right?\n\n287\n00:14:02,810 --> 00:14:04,500\nWe gotta have some clouds.\n\n288\n00:14:04,500 --> 00:14:06,700\nPretty clouds, right?\n\n289\n00:14:06,700 --> 00:14:11,940\nAnd, we'll throw some of these in here,\npretty clouds.\n\n290\n00:14:11,940 --> 00:14:15,508\nSo, this is sort of what\nI've got in my environment.\n\n291\n00:14:15,508 --> 00:14:20,332\nSo if we bring this all down,\n\n292\n00:14:20,332 --> 00:14:24,563\nto something like this.\n\n293\n00:14:24,563 --> 00:14:30,445\nAll right, well I know that\nthe network in the middle,\n\n294\n00:14:30,445 --> 00:14:32,685\nthe network in between these two routers.\n\n295\n00:14:32,685 --> 00:14:37,935\nSo in my little lab here,\nthis would be my HQ router, and\n\n296\n00:14:37,935 --> 00:14:41,525\nthis would be my branch one router, right.\n\n297\n00:14:41,525 --> 00:14:43,790\nSo this is kinda the layout that I've got.\n\n298\n00:14:43,790 --> 00:14:45,880\nAnd the network that's in the middle here,\n\n299\n00:14:45,880 --> 00:14:50,990\nI guess I should really\nmake that a cloud too.\n\n300\n00:14:50,990 --> 00:14:55,010\nIt would make a little more\nsense if I clouded this all out.\n\n301\n00:14:55,010 --> 00:14:57,850\nBecause the network in the middle\nis the one that is 192.168.0.0.\n\n302\n00:14:57,850 --> 00:15:01,710\nThat's actually sitting in\nbetween all of this stuff.\n\n303\n00:15:02,970 --> 00:15:06,240\nAnd so headquarters is 192.168.0.1.\n\n304\n00:15:06,240 --> 00:15:07,490\nBranch one is 192.168.0.2.\n\n305\n00:15:07,490 --> 00:15:10,260\nRight?\nAnd so I was able to ping between them,\n\n306\n00:15:10,260 --> 00:15:15,160\nand on headquarters,\nI put a static route that told it,\n\n307\n00:15:15,160 --> 00:15:19,150\nif it wanted to get to 172.16.2.0,\nit could.\n\n308\n00:15:19,150 --> 00:15:22,550\nRight, by going across\nthe wire to branch one.\n\n309\n00:15:22,550 --> 00:15:25,190\nAnd then it could jump\nover to that network.\n\n310\n00:15:25,190 --> 00:15:27,130\nWell, over here on headquarters,\n\n311\n00:15:27,130 --> 00:15:32,330\nI've got the 172.16.0 network\nsitting over here, right.\n\n312\n00:15:32,330 --> 00:15:36,580\nWhen I did the ping from\nheadquarters over to this route,\n\n313\n00:15:36,580 --> 00:15:39,290\nit looks at the routing table and\nsays okay, how am I gonna get there?\n\n314\n00:15:39,290 --> 00:15:41,224\nLet's look at that routing table again.\n\n315\n00:15:41,224 --> 00:15:45,526\nIf I look at the routing table on\nheadquarters, it looks at it and says,\n\n316\n00:15:45,526 --> 00:15:48,985\nokay, you're trying to get to 172.16.2.0.\n\n317\n00:15:48,985 --> 00:15:51,079\nThat's where you're trying to get to it.\n\n318\n00:15:51,079 --> 00:15:56,313\nYou're gonna get there by\ngoing through 192.168.0.2.\n\n319\n00:15:56,313 --> 00:16:00,567\nSo that's where we gotta start,\nwe gotta get to 192.168.0.2, so\n\n320\n00:16:00,567 --> 00:16:04,381\nlet's look at the routing table again and\nfind 192.168.0.\n\n321\n00:16:04,381 --> 00:16:06,030\nHow do we get to that network?\n\n322\n00:16:06,030 --> 00:16:09,370\nAnd so it looks down the list and\nit finds it right here.\n\n323\n00:16:09,370 --> 00:16:10,262\nAnd it says, okay, we can get to that.\n\n324\n00:16:10,262 --> 00:16:13,071\n[INAUDIBLE], Ethernet0/0, right?\n\n325\n00:16:13,071 --> 00:16:18,377\nThat's the interface we're gonna go off to\nget to that first hop to get to 172.16.2,\n\n326\n00:16:18,377 --> 00:16:19,070\nall right?\n\n327\n00:16:19,070 --> 00:16:22,470\nSo when I did my ping,\nit originated the ping.\n\n328\n00:16:22,470 --> 00:16:26,010\nIt set the source of\nthe ping to this network,\n\n329\n00:16:26,010 --> 00:16:30,300\ncause this network was the closest to\nwhere I was trying to get, all right.\n\n330\n00:16:30,300 --> 00:16:32,940\nAnd the ping worked just fine but\n\n331\n00:16:32,940 --> 00:16:38,150\nwatch what happens if I source the ping\nfrom another interface, right.\n\n332\n00:16:38,150 --> 00:16:42,900\nI've got that 172.16.0 network\nright here on my E0/1 interface.\n\n333\n00:16:44,580 --> 00:16:46,440\nSo if I were to redo that ping.\n\n334\n00:16:46,440 --> 00:16:50,470\nSo if I just do a straight\nup ping to 172.16.2.1.\n\n335\n00:16:50,470 --> 00:16:53,190\nI get there but if I add onto it.\n\n336\n00:16:53,190 --> 00:16:55,550\nLet's see if this iOS will let me do it.\n\n337\n00:16:55,550 --> 00:16:57,020\nYep it will.\n\n338\n00:16:57,020 --> 00:16:59,280\nNot every iOS has the source option here.\n\n339\n00:16:59,280 --> 00:17:02,440\nSometimes you have to do the extended ping\ncommands where you just type ping and\n\n340\n00:17:02,440 --> 00:17:04,200\npress enter and walk through the menus but\n\n341\n00:17:04,200 --> 00:17:06,160\na lot of them have where\nyou can just do source.\n\n342\n00:17:06,160 --> 00:17:13,784\nAnd then you can specify an interface\nas the source so I can say even at 0/1.\n\n343\n00:17:13,784 --> 00:17:18,570\nSo now I'm saying when I ping to that\nother side, I want you to source\n\n344\n00:17:18,570 --> 00:17:23,280\nthe ping from whatever IP\naddress is on my E0/1 interface.\n\n345\n00:17:23,280 --> 00:17:26,362\nFor me, that's 172.16.0.1.\n\n346\n00:17:26,362 --> 00:17:28,943\nWhen I do that ping, see here it goes,\n\n347\n00:17:28,943 --> 00:17:33,089\nsending the packet with\na source of 172.16.0.1.\n\n348\n00:17:33,089 --> 00:17:36,880\nAnd now that I've changed my source IP,\nmy pings are not going through.\n\n349\n00:17:37,960 --> 00:17:40,250\nSo the pings worked when I\nwas coming from 192.168.0,\n\n350\n00:17:40,250 --> 00:17:44,760\nthey don't work when they're\ncoming from another IP.\n\n351\n00:17:44,760 --> 00:17:45,700\nWhy is that, Ronnie?\n\n352\n00:17:45,700 --> 00:17:46,732\n>> Well it's the other side.\n\n353\n00:17:46,732 --> 00:17:51,388\nWe don't actually have a route\nthat comes back this way,\n\n354\n00:17:51,388 --> 00:17:55,171\nthat goes back to the 172.16.0.0.\n\n355\n00:17:55,171 --> 00:17:59,340\nSo the problem is, with static routing,\nagain a misconfiguration.\n\n356\n00:17:59,340 --> 00:18:03,110\nSetting up one side does not\nnecessarily set the other side up.\n\n357\n00:18:03,110 --> 00:18:04,880\nSo that there is no return path for\n\n358\n00:18:04,880 --> 00:18:08,550\nthat ping back to that\nnetwork which Don sourced to.\n\n359\n00:18:08,550 --> 00:18:09,820\n>> Yup, that is exactly right.\n\n360\n00:18:09,820 --> 00:18:13,100\nSo what we did is we took headquarters and\n\n361\n00:18:13,100 --> 00:18:17,360\nwe taught headquarters about this\nnetwork way over here, right.\n\n362\n00:18:17,360 --> 00:18:18,630\nThat's what we did.\n\n363\n00:18:18,630 --> 00:18:20,130\nThat's kind of a sissy line right there.\n\n364\n00:18:20,130 --> 00:18:21,092\nThere we go, now it's a manly line.\n\n365\n00:18:21,092 --> 00:18:22,147\n>> [LAUGH]\n>> All right, so\n\n366\n00:18:22,147 --> 00:18:26,820\nwe taught headquarters about that\nnetwork over there but branch one,\n\n367\n00:18:26,820 --> 00:18:29,380\nbranch one knows about this network\nbecause this directly plugged into it.\n\n368\n00:18:29,380 --> 00:18:32,050\nAnd branch one knows about this network\nbecause it's directly plugged into it\n\n369\n00:18:32,050 --> 00:18:36,270\nalso, which is why the ping worked\nwhen sourced from headquarters but\n\n370\n00:18:36,270 --> 00:18:38,940\nwhen I sourced it from\nthis interface over here,\n\n371\n00:18:38,940 --> 00:18:42,730\nbranch one does not know\nabout this network.\n\n372\n00:18:42,730 --> 00:18:45,890\nSo what we end up having\nto do is an extra step.\n\n373\n00:18:45,890 --> 00:18:49,420\nWe've got to take branch one and\neducate it.\n\n374\n00:18:49,420 --> 00:18:54,310\nWe've got to teach branch one\nabout this network over here.\n\n375\n00:18:55,640 --> 00:18:59,370\nStatic routes are rarely\njust done on one router.\n\n376\n00:18:59,370 --> 00:19:00,900\nThis is where we start\nto get the complexity.\n\n377\n00:19:00,900 --> 00:19:05,850\nWe've got to remember to go to the other\nrouters and educate them too right.\n\n378\n00:19:05,850 --> 00:19:09,950\nAnd when we do that then we have what's\ncalled convergence which we'll use\n\n379\n00:19:09,950 --> 00:19:12,930\nthat convergence word a ton in\nthe dynamic routing protocols.\n\n380\n00:19:12,930 --> 00:19:17,290\nConvergence is where every router knows\nthe same routes as all the other routers.\n\n381\n00:19:17,290 --> 00:19:19,460\nWhen everybody's got\nthe same routing table or\n\n382\n00:19:19,460 --> 00:19:21,620\nat least the same destinations\nin the routing table.\n\n383\n00:19:21,620 --> 00:19:24,910\nSo I need to jump over to branch one and\ngive it a lesson.\n\n384\n00:19:24,910 --> 00:19:25,660\nAnd that's what I'm gonna do.\n\n385\n00:19:25,660 --> 00:19:27,411\nWe'll jump over to branch one.\n\n386\n00:19:27,411 --> 00:19:31,510\nAnd on this guy I'll just\nget into it's config and\n\n387\n00:19:31,510 --> 00:19:37,957\nI'll say #ip route\n172.16.0.0 255.255.255.0 and\n\n388\n00:19:37,957 --> 00:19:42,643\nfor the destination,\nI'll point to that other router,\n\n389\n00:19:42,643 --> 00:19:47,449\n192.168.0.1, so I'll throw that in there.\n\n390\n00:19:49,550 --> 00:19:52,440\nAnd I'll do a show ip route static.\n\n391\n00:19:52,440 --> 00:19:54,200\nYou know,\na lot of people don't use this option.\n\n392\n00:19:54,200 --> 00:19:58,055\nShow ip route is what we normally use,\nbut you can add to the end of it show\n\n393\n00:19:58,055 --> 00:20:02,510\nip route ospf, or show ip route eigrp,\nand specify an autonomous system number.\n\n394\n00:20:02,510 --> 00:20:06,527\nAnd it'll filter what routes you get back,\nI just want to see my statics.\n\n395\n00:20:06,527 --> 00:20:11,660\nSo if I do show IP static, there it is,\nI get the static route and it's in place.\n\n396\n00:20:11,660 --> 00:20:15,020\nSo I've got it, it's in place, wonderful.\n\n397\n00:20:15,020 --> 00:20:20,250\nI know some people do show IP route and\nthey filter it into an include and\n\n398\n00:20:20,250 --> 00:20:23,450\nthey look for s followed by a space right.\n\n399\n00:20:23,450 --> 00:20:25,990\nYou have to do a back slash\nto escape the space but\n\n400\n00:20:25,990 --> 00:20:31,130\nwhen you do it this way it'll return it\nback and you'll get some extra things but\n\n401\n00:20:31,130 --> 00:20:33,330\nnotice how I get the static route but\n\n402\n00:20:33,330 --> 00:20:37,180\nit left off this part right here where\nit says that it was variably sub netted.\n\n403\n00:20:37,180 --> 00:20:41,620\nSo doing the show IP route static actually\ngives you a little bit more information\n\n404\n00:20:41,620 --> 00:20:44,400\nthan doing a filter, but\nboth of them end up giving you the route.\n\n405\n00:20:45,690 --> 00:20:49,180\nAll right, so in this case,\nI see the route's in place,\n\n406\n00:20:49,180 --> 00:20:53,650\nlet's go test that ping again, the ping\nthat failed just a moment ago, right.\n\n407\n00:20:53,650 --> 00:20:57,500\nNow, when I go to ping,\nit sourced off of my E0/1.\n\n408\n00:20:57,500 --> 00:20:58,730\nI get successes.\n\n409\n00:20:58,730 --> 00:21:02,810\nNow I've got a converged network\nthat's healthy and happy but\n\n410\n00:21:02,810 --> 00:21:04,640\nthat shows you the update process.\n\n411\n00:21:04,640 --> 00:21:08,450\nIf I add a new network I've gotta go and\nteach each of my routers about that new\n\n412\n00:21:08,450 --> 00:21:11,080\nnetwork and that's one of\nthe burdens of doing static routing.\n\n413\n00:21:13,370 --> 00:21:19,130\nNow in this scenario I pointed the route\nto a IP address to a particular IP.\n\n414\n00:21:19,130 --> 00:21:21,510\nAnd I want to show you something\nthat happens with that.\n\n415\n00:21:21,510 --> 00:21:25,685\nIf I do a show IP route,\nI can spot that route.\n\n416\n00:21:25,685 --> 00:21:27,325\nAnd it's right here in my routing table.\n\n417\n00:21:27,325 --> 00:21:32,215\nThe way to get to 172.16.2.0,\nit's right there in my routing table,\n\n418\n00:21:32,215 --> 00:21:34,635\nit's active right now, okay.\n\n419\n00:21:34,635 --> 00:21:38,754\nAnd I can get there via 192.168.0.2,\nvia that guy.\n\n420\n00:21:38,754 --> 00:21:41,795\nWell, what happens if\nthat guy's not available.\n\n421\n00:21:41,795 --> 00:21:44,582\nWhat if that guy goes offline, right?\n\n422\n00:21:44,582 --> 00:21:48,720\nWell, the route stays\nin the routing table.\n\n423\n00:21:48,720 --> 00:21:53,918\nIf I go into my configuration, I go into\nE0/0 and I shut down that interface,\n\n424\n00:21:53,918 --> 00:21:58,520\nso my E0/0,\nthe one I have a 192.168.0 address on,\n\n425\n00:21:58,520 --> 00:22:02,910\nwhen I shut that down and\nI do a show IP route.\n\n426\n00:22:02,910 --> 00:22:04,920\nAnd I look at my routing table.\n\n427\n00:22:04,920 --> 00:22:08,331\nI can look in here and\nspot what happens to my routes.\n\n428\n00:22:08,331 --> 00:22:13,812\nThe 192.168.0.0 network is gone now.\n\n429\n00:22:13,812 --> 00:22:14,415\nIt's gone.\n\n430\n00:22:14,415 --> 00:22:16,691\nAnd do you see my static route?\n\n431\n00:22:16,691 --> 00:22:20,253\nWhere is the 172.16.2 network?\n\n432\n00:22:20,253 --> 00:22:21,834\nIt's gone, right.\n\n433\n00:22:21,834 --> 00:22:26,490\nOn newer IOS's,\nit's smart enough to spot that.\n\n434\n00:22:26,490 --> 00:22:29,030\nIt says hey I can't get to\nthe destination of this route, so\n\n435\n00:22:29,030 --> 00:22:31,120\nI'll take it out of the routing table,\nand it's gone.\n\n436\n00:22:31,120 --> 00:22:32,690\nIt's smart about that.\n\n437\n00:22:32,690 --> 00:22:35,260\nIt wasn't always like that.\n\n438\n00:22:35,260 --> 00:22:38,590\nOn older IOS's, and by older,\nI mean just a couple of years ago.\n\n439\n00:22:38,590 --> 00:22:40,690\nSo, this is really ones that\nare still used in production.\n\n440\n00:22:40,690 --> 00:22:42,210\nThat didn't always happen.\n\n441\n00:22:42,210 --> 00:22:46,660\nThe route might stay in the routing table,\nand that's a big problem.\n\n442\n00:22:46,660 --> 00:22:51,870\nIf it's the physical interface that\ngoes down, the route will come out.\n\n443\n00:22:51,870 --> 00:22:55,650\nAnd that was the big reason why in the old\ndays, a lot of times when you build your\n\n444\n00:22:55,650 --> 00:22:59,370\nroute, instead of pointing it to an IP\naddress, you pointed it to an interface.\n\n445\n00:22:59,370 --> 00:23:02,210\nAnd that way if the interface went down,\nyes the route would come out but\n\n446\n00:23:02,210 --> 00:23:05,240\nwhen you point to an IP, the older iOS's\nweren't smart enough to deal with that.\n\n447\n00:23:05,240 --> 00:23:09,560\nThe newer ones are, but there's another\nthing that we can do that's pretty\n\n448\n00:23:09,560 --> 00:23:14,420\nimportant, which is tracking the IP\nthat we're reaching out to, all right?\n\n449\n00:23:14,420 --> 00:23:16,960\nLet me show you this from a slightly\ndifferent perspective, so\n\n450\n00:23:16,960 --> 00:23:17,670\nyou can see what happens.\n\n451\n00:23:17,670 --> 00:23:20,380\nNow, I caused a failure here\non headquarters, right?\n\n452\n00:23:20,380 --> 00:23:23,700\nWhat if the failure\nwasn't on headquarters?\n\n453\n00:23:23,700 --> 00:23:27,156\nI'm going to turn that interface back on.\n\n454\n00:23:27,156 --> 00:23:30,928\nInterface comes back up,\nI go to my routing table, and\n\n455\n00:23:30,928 --> 00:23:35,520\nright here I can see the 172.16.2\nnetwork pop right back in\n\n456\n00:23:35,520 --> 00:23:39,626\nbecause that interface is back\nup again and we can get to it.\n\n457\n00:23:39,626 --> 00:23:44,960\nIf I do a ping to 172.16.2.1\nI can get to it just fine.\n\n458\n00:23:44,960 --> 00:23:46,000\nRight?\n\n459\n00:23:46,000 --> 00:23:49,470\nWhat if the failure though\nwas somewhere else?\n\n460\n00:23:49,470 --> 00:23:53,150\nIn my diagram,\nI drew headquarters and branch one.\n\n461\n00:23:53,150 --> 00:23:55,010\nRight?\nAnd there's just this cloud in between.\n\n462\n00:23:55,010 --> 00:23:55,830\nWell what is that cloud?\n\n463\n00:23:55,830 --> 00:23:57,780\nWell in my lab, it's a switch.\n\n464\n00:23:57,780 --> 00:24:00,600\nThere's a switch in between\nheadquarters and branch one.\n\n465\n00:24:00,600 --> 00:24:04,820\nIf the branch one router were to\npower off, does the interface for\n\n466\n00:24:04,820 --> 00:24:05,600\nheadquarters go down?\n\n467\n00:24:06,740 --> 00:24:07,240\nNo.\n>> No.\n\n468\n00:24:07,240 --> 00:24:08,710\n>> It stays up, right.\n\n469\n00:24:08,710 --> 00:24:11,850\nIt stays up because it's plugged\ninto a switch, got a link light.\n\n470\n00:24:11,850 --> 00:24:15,940\nSo headquarters doesn't know the failure\nhappened, and the route stays.\n\n471\n00:24:15,940 --> 00:24:20,590\nThe route stays, sending your traffic\nto somewhere that doesn't respond.\n\n472\n00:24:20,590 --> 00:24:22,150\nLet's see that in action.\n\n473\n00:24:22,150 --> 00:24:24,591\nNow, I have to remember if that's\na crossover cable or an actual switch.\n\n474\n00:24:24,591 --> 00:24:29,019\n[LAUGH] I guess we'll find out real quick,\nwon't we?\n\n475\n00:24:29,019 --> 00:24:31,920\nLet me get into e0/0 on branch, and so\n\n476\n00:24:31,920 --> 00:24:33,800\nI'm gonna cause the failure\nover here on branch one.\n\n477\n00:24:35,000 --> 00:24:36,770\nI'm shutting down that interface, and so\n\n478\n00:24:36,770 --> 00:24:39,790\nbranch one gets its message\nabout the interface going down.\n\n479\n00:24:39,790 --> 00:24:43,940\nIf I jump over to headquarters,\nit didn't get any messages.\n\n480\n00:24:43,940 --> 00:24:46,800\nIts interface is still up and happy.\n\n481\n00:24:46,800 --> 00:24:51,266\nAnd when I do that show IP\nroute I can look in here and\n\n482\n00:24:51,266 --> 00:24:53,630\nthe 172.16.2 network is still there.\n\n483\n00:24:56,340 --> 00:25:01,050\nThe routing table can only detect\nfailures on the router itself.\n\n484\n00:25:01,050 --> 00:25:02,240\nWhen it comes to static routes.\n\n485\n00:25:02,240 --> 00:25:04,790\nThis is kind of the whole point\nof a dynamic routing protocol,\n\n486\n00:25:04,790 --> 00:25:06,590\nis you can learn everybody else's stuff.\n\n487\n00:25:06,590 --> 00:25:11,420\nBut with a static route,\nit only monitors the router itself.\n\n488\n00:25:11,420 --> 00:25:14,360\nAll the other guys out there,\nit doesn't monitor them, so\n\n489\n00:25:14,360 --> 00:25:17,630\nit assumes that route is still valid\neven though it isn't, and if I try and\n\n490\n00:25:17,630 --> 00:25:22,310\nping 172.16.2.1, it fails,\ncause the gateway is not up.\n\n491\n00:25:22,310 --> 00:25:27,910\nSo that's a problem, and there's\na easy way that we can fix that with\n\n492\n00:25:27,910 --> 00:25:31,390\nwhat's called a track or an SLA,\na service level agreement.\n\n493\n00:25:31,390 --> 00:25:32,520\nSo, I wanna take a look at that.\n\n494\n00:25:32,520 --> 00:25:34,959\nI also, I kinda skipped over\nfloating statics, didn't I?\n\n495\n00:25:34,959 --> 00:25:36,220\nShoot.\n\n496\n00:25:36,220 --> 00:25:38,820\nWe'll talk about those two,\nbut why don't we do this?\n\n497\n00:25:38,820 --> 00:25:41,280\nBefore I jump into how to solve\nwe can solve this problem,\n\n498\n00:25:41,280 --> 00:25:42,520\nlet's stop and take a break.\n\n499\n00:25:42,520 --> 00:25:44,850\nAnd when we get back we'll jump into that.\n\n500\n00:25:44,850 --> 00:25:46,360\nI'll show you how to fix this problem,\n\n501\n00:25:46,360 --> 00:25:48,800\nhow to get it to monitor\nthe remote host even for a static.\n\n502\n00:25:50,100 --> 00:25:58,280\nAnd then we'll talk about floating statics\nwhich are kinda neat as an alternative.\n\n503\n00:25:58,280 --> 00:25:59,985\nSo stay tuned,\nwe'll be back in just a moment.\n\n504\n00:25:59,985 --> 00:26:03,081\n[SOUND] All right.\n\n505\n00:26:03,081 --> 00:26:04,009\nWelcome back everybody.\n\n506\n00:26:04,009 --> 00:26:07,390\nSo we left off talking about one of\nthe problems with static routing.\n\n507\n00:26:07,390 --> 00:26:10,860\nHow it monitors the physical\ninterface status.\n\n508\n00:26:10,860 --> 00:26:14,340\nBut as long as the physical interface is\nup it pretty much assumes that the static\n\n509\n00:26:14,340 --> 00:26:15,030\nroute works.\n\n510\n00:26:15,030 --> 00:26:18,020\nIt assumes that you\nknow more than it does.\n\n511\n00:26:18,020 --> 00:26:19,370\nAnd so it leaves it in place, and\n\n512\n00:26:19,370 --> 00:26:22,240\nunfortunately sometimes we don't\nknow as much as the router does.\n\n513\n00:26:22,240 --> 00:26:25,430\nSo we need it to be able to make more\nintelligent decisions to understand\n\n514\n00:26:25,430 --> 00:26:28,490\nwhether or\nnot that route is actually good and valid.\n\n515\n00:26:28,490 --> 00:26:30,720\nSo we've gotta educate it a little bit.\n\n516\n00:26:30,720 --> 00:26:35,590\nAnd to do that,\nwe can use what's called an IP SLA.\n\n517\n00:26:35,590 --> 00:26:40,780\nAn SLA, a service level agreement, is just\na simple little monitoring tool built into\n\n518\n00:26:40,780 --> 00:26:42,710\nalmost every Cisco device these days.\n\n519\n00:26:42,710 --> 00:26:45,710\nThey can monitor for\nall sorts of things, but we're gonna\n\n520\n00:26:45,710 --> 00:26:50,360\nuse it here cuz I wanna monitor just\nwhether a remote IP is reachable or not.\n\n521\n00:26:50,360 --> 00:26:51,940\nAnd if that IP doesn't\nbecome reachable for\n\n522\n00:26:51,940 --> 00:26:55,240\nsome reason, we wanna remove our\nroute from the routing table.\n\n523\n00:26:55,240 --> 00:26:57,050\nSo the process for\ndoing this is pretty easy.\n\n524\n00:26:57,050 --> 00:27:00,070\nBefore I do that, though, I caused\na failure on the network before the break.\n\n525\n00:27:00,070 --> 00:27:01,920\nI wanna undo that failure.\n\n526\n00:27:01,920 --> 00:27:04,070\nSo I'm gonna jump over to branch one.\n\n527\n00:27:04,070 --> 00:27:08,020\nAnd just do a no shut down on its\ninterface to get things back up.\n\n528\n00:27:08,020 --> 00:27:14,130\nAs it stands,\nwe've created a set of static routes.\n\n529\n00:27:14,130 --> 00:27:18,690\nHeadquarters has a static route that\ntells it how to get to 172.16.2 and\n\n530\n00:27:18,690 --> 00:27:22,680\nbranch one has a static route that\ntells it how to get to 172.16.0.\n\n531\n00:27:22,680 --> 00:27:23,890\nI'm worried about this headquarters one.\n\n532\n00:27:23,890 --> 00:27:25,630\nI'm going to say all right.\n\n533\n00:27:25,630 --> 00:27:28,200\nIf branch one were to fail,\n\n534\n00:27:28,200 --> 00:27:30,610\nI need headquarters not to\nbother sending traffic that way.\n\n535\n00:27:30,610 --> 00:27:33,120\nDon't bother sending it because\nthere's no way to get there.\n\n536\n00:27:33,120 --> 00:27:35,560\nPull the route from the routing table.\n\n537\n00:27:35,560 --> 00:27:37,360\nSo to do that we'll configure an SLA.\n\n538\n00:27:39,330 --> 00:27:41,370\nSo let me just make sure\nthat our network is healthy.\n\n539\n00:27:41,370 --> 00:27:43,030\nAnd jump back to headquarters and\n\n540\n00:27:43,030 --> 00:27:47,050\nmake sure that I can indeed\nget to the 172.16.1 network.\n\n541\n00:27:47,050 --> 00:27:47,760\nAnd I can.\n\n542\n00:27:47,760 --> 00:27:49,110\nSo I'm getting there.\n\n543\n00:27:49,110 --> 00:27:51,680\nNow let's create this\nservice level moment.\n\n544\n00:27:51,680 --> 00:27:54,530\nNow when we're monitoring\na remote gateway,\n\n545\n00:27:54,530 --> 00:27:58,810\na lot of times you're not able to\ntalk to it in any meaningful manner.\n\n546\n00:27:58,810 --> 00:28:02,800\nIt's not like we can Telnet or\nSSH into an internet service providers\n\n547\n00:28:02,800 --> 00:28:06,220\nrouter they're not gonna let you do that,\nwell, they probably shouldn't.\n\n548\n00:28:06,220 --> 00:28:07,880\nSo those moments can be pings.\n\n549\n00:28:07,880 --> 00:28:09,300\nSo what I wanna do is I\nwanna tell the router,\n\n550\n00:28:09,300 --> 00:28:11,470\nhey, I want you to ping that gateway.\n\n551\n00:28:11,470 --> 00:28:13,760\nJust ping it every now and\nthen send a ping that way.\n\n552\n00:28:13,760 --> 00:28:17,900\nAnd if the ping doesn't get there,\nthat means that node is probably down.\n\n553\n00:28:17,900 --> 00:28:21,680\nAnd if it's down,\ndon't bother routing traffic through it.\n\n554\n00:28:21,680 --> 00:28:24,360\nRegardless of whether our\ninterface is up or down.\n\n555\n00:28:24,360 --> 00:28:26,480\nWe're monitoring reachability.\n\n556\n00:28:26,480 --> 00:28:28,520\nCan we reach that network?\n\n557\n00:28:28,520 --> 00:28:30,540\nLayer one and\nlayer two might be perfectly happy, but\n\n558\n00:28:30,540 --> 00:28:34,160\nif layer three is not working,\ndon't send traffic that way.\n\n559\n00:28:34,160 --> 00:28:35,880\nSo we'll set that up.\n\n560\n00:28:35,880 --> 00:28:37,090\nWe start by defining an SLA.\n\n561\n00:28:37,090 --> 00:28:40,270\nNow be careful on this if you go out\non the Internet and do research.\n\n562\n00:28:40,270 --> 00:28:43,630\nThis is one of the few commands where\nCisco doesn't seem to care about backwards\n\n563\n00:28:43,630 --> 00:28:44,730\ncompatibility.\n\n564\n00:28:44,730 --> 00:28:47,220\nAnd with each version of the iOS,\nthey tweak it a little bit.\n\n565\n00:28:47,220 --> 00:28:51,060\nSo when I learned this originally,\nthe commands that I was issuing were\n\n566\n00:28:51,060 --> 00:28:55,800\nthe IP SLA RTR commands, which were\nthe old ones for doing the monitoring.\n\n567\n00:28:55,800 --> 00:29:00,860\nAnd then they had the IP SLA monitor\ncommands all the way up to and\n\n568\n00:29:00,860 --> 00:29:04,960\nthen starting with the newer iOS's in\n15 what you're gonna see on the exam\n\n569\n00:29:04,960 --> 00:29:07,150\nwe just define straight up ip SLA's.\n\n570\n00:29:07,150 --> 00:29:09,170\nSo the syntax has changed.\n\n571\n00:29:09,170 --> 00:29:11,470\nWhat I'm gonna show you\nhere is what's on the exam.\n\n572\n00:29:11,470 --> 00:29:14,380\nIn real life if you still have\nrouters running older IOS's,\n\n573\n00:29:14,380 --> 00:29:15,710\nyou might need to use the old commands.\n\n574\n00:29:15,710 --> 00:29:19,380\nSo don't be shocked if some of\nthese commands don't work for you.\n\n575\n00:29:19,380 --> 00:29:21,960\nSo I'm going to start by defining\na service level agreement.\n\n576\n00:29:21,960 --> 00:29:25,420\nAnd on your router you can have many,\nmany different SLA's.\n\n577\n00:29:25,420 --> 00:29:26,990\nYou might do these for\nall sorts of things.\n\n578\n00:29:26,990 --> 00:29:29,150\nMonitoring jitter for\nvoice over IP networks.\n\n579\n00:29:29,150 --> 00:29:30,220\nAll sorts of stuff.\n\n580\n00:29:30,220 --> 00:29:31,490\nBut I'm just going to do a simple one.\n\n581\n00:29:31,490 --> 00:29:34,670\nI'm gonna say IP SLA and\nthen you have to give it a number.\n\n582\n00:29:34,670 --> 00:29:39,680\nAnd you'll see you can give it any number\none through two point whatever billion.\n\n583\n00:29:39,680 --> 00:29:40,880\nSo you can go crazy with it.\n\n584\n00:29:40,880 --> 00:29:42,710\nI'm just gonna do SLA number one.\n\n585\n00:29:42,710 --> 00:29:44,990\nSo here's the first SLA that I'm making.\n\n586\n00:29:44,990 --> 00:29:46,590\nAnd I'm gonna tell it.\n\n587\n00:29:46,590 --> 00:29:48,410\nWhat type of SLA it's gonna be.\n\n588\n00:29:48,410 --> 00:29:50,960\nI'm just gonna do an ICMP echo.\n\n589\n00:29:52,130 --> 00:29:54,420\nAnd we'll do a whole show\non these SLA's later on but\n\n590\n00:29:54,420 --> 00:29:56,200\nyou'll see there's more\nstuff we can monitor.\n\n591\n00:29:56,200 --> 00:29:58,620\nJigger, path echoes, all sorts of stuff.\n\n592\n00:29:58,620 --> 00:29:59,980\nBut I just want to do an ICMP echo.\n\n593\n00:29:59,980 --> 00:30:01,290\nJust a ping.\n\n594\n00:30:01,290 --> 00:30:04,520\nI want to ping somebody\nelse that's out there.\n\n595\n00:30:04,520 --> 00:30:06,450\nAnd I need someone who I'm gonna ping.\n\n596\n00:30:06,450 --> 00:30:08,515\nWell I'm going to ping that gateway.\n\n597\n00:30:08,515 --> 00:30:10,490\nThe 172.16.2 network.\n\n598\n00:30:10,490 --> 00:30:15,670\nI put a route in that says I can get\nthere if I go through 192.168.0.2.\n\n599\n00:30:15,670 --> 00:30:19,110\nSo I want to monitor that IP.\n\n600\n00:30:19,110 --> 00:30:22,200\nI want to send a ping to\nthat IP every now and\n\n601\n00:30:22,200 --> 00:30:24,030\nthen to make sure that it's still online.\n\n602\n00:30:25,600 --> 00:30:28,560\nOnce I do that, I'll get my ICMP options.\n\n603\n00:30:28,560 --> 00:30:31,000\nAnd you'll see there's a lot of\nstuff you can tweak in here,\n\n604\n00:30:31,000 --> 00:30:32,555\nthe frequency and so on.\n\n605\n00:30:32,555 --> 00:30:35,190\nThe default frequency,\nif I remember right, is every 60 seconds.\n\n606\n00:30:35,190 --> 00:30:36,950\nWhich is probably fine for me.\n\n607\n00:30:36,950 --> 00:30:39,240\nYou might want to lower\nit down to five seconds.\n\n608\n00:30:39,240 --> 00:30:39,940\nYou can make it higher.\n\n609\n00:30:39,940 --> 00:30:41,400\nYou can set your threshold.\n\n610\n00:30:41,400 --> 00:30:45,340\nHow many failures you wait before\nyou actually deem it being down.\n\n611\n00:30:45,340 --> 00:30:47,430\nSo there's a ton of stuff\nwe can customize, but\n\n612\n00:30:47,430 --> 00:30:50,570\nI want to go simple because we have\na separate SLA episode for this.\n\n613\n00:30:50,570 --> 00:30:52,530\nI'm not actually going to\nset anything in there.\n\n614\n00:30:52,530 --> 00:30:53,920\nI'm just going to type exit.\n\n615\n00:30:53,920 --> 00:30:57,830\nNow it's going to go with the defaults and\nit's going to ping that IP.\n\n616\n00:30:57,830 --> 00:30:59,610\nThat's what the SLA does.\n\n617\n00:30:59,610 --> 00:31:02,560\nNow, this next command is\nthe one that everybody forgets.\n\n618\n00:31:02,560 --> 00:31:04,020\nSo far, it was really easy.\n\n619\n00:31:04,020 --> 00:31:06,998\nI did IPSLA1, that created the SLA.\n\n620\n00:31:06,998 --> 00:31:10,310\nI did ICMP-echo and\nthen the IP I wanted to ping.\n\n621\n00:31:10,310 --> 00:31:16,020\nSo now I've got the SLA created,\nbut it's not actually running.\n\n622\n00:31:16,020 --> 00:31:18,110\nYou have to set a schedule.\n\n623\n00:31:18,110 --> 00:31:20,330\nYou have to define when it runs.\n\n624\n00:31:20,330 --> 00:31:23,400\nAnd if you don't do that it never runs and\nit doesn't work.\n\n625\n00:31:23,400 --> 00:31:27,090\nSo that's the next command for\nme, is to set the schedule.\n\n626\n00:31:27,090 --> 00:31:29,860\nSo I'll say IP SLA schedule.\n\n627\n00:31:31,530 --> 00:31:33,520\nAnd I need to tell it which\nSLA I'm working with.\n\n628\n00:31:33,520 --> 00:31:34,984\nI'm working with number one.\n\n629\n00:31:34,984 --> 00:31:40,798\nAnd then I need to tell it how long I want\nit to run for and when I want it to start.\n\n630\n00:31:40,798 --> 00:31:42,158\nWell I want this to run forever.\n\n631\n00:31:42,158 --> 00:31:44,872\nSo I'm going to say life forever.\n\n632\n00:31:44,872 --> 00:31:45,672\nAll right.\n\n633\n00:31:45,672 --> 00:31:46,899\nYou can do life questionmark and\n\n634\n00:31:46,899 --> 00:31:49,044\nyou can see where you can\nspecify the amount of seconds.\n\n635\n00:31:49,044 --> 00:31:52,730\nMaybe I only want it to run for 10\nminutes, or 100 minutes, or however long.\n\n636\n00:31:52,730 --> 00:31:53,670\nYou can specify that.\n\n637\n00:31:53,670 --> 00:31:56,640\nBut I want mine to run forever, all right.\n\n638\n00:31:56,640 --> 00:32:00,900\nAnd then you define a start time, and\nyou tell it when you want to start.\n\n639\n00:32:00,900 --> 00:32:03,380\nWell, no sense dilly-dallying,\nI want it to start now.\n\n640\n00:32:03,380 --> 00:32:05,610\nSo I'm just gonna put now.\n\n641\n00:32:05,610 --> 00:32:10,740\nSo, starting now and running forever,\nI want it to start pinging that IP.\n\n642\n00:32:11,890 --> 00:32:14,990\nAnd so now the SOA is working.\n\n643\n00:32:14,990 --> 00:32:17,200\nNow it's pinging that IP.\n\n644\n00:32:17,200 --> 00:32:18,710\nAt a set interval.\n\n645\n00:32:18,710 --> 00:32:23,030\nAnd if that ping fails,\nit'll flag the SLA as failing.\n\n646\n00:32:23,030 --> 00:32:25,500\nSo we'll now know that,\nthat other end is not reachable.\n\n647\n00:32:27,890 --> 00:32:31,980\nThe last thing I need to do,\nis I need to modify my static route.\n\n648\n00:32:31,980 --> 00:32:35,950\nNow when I enter that in.\n\n649\n00:32:35,950 --> 00:32:38,960\nThe command I entered wad right here,\n\n650\n00:32:38,960 --> 00:32:44,137\nIP route 172.16.2.0 255.255.255.0,\n\n651\n00:32:44,137 --> 00:32:48,194\nand then the IP I went to, 192.1680.2.\n\n652\n00:32:48,194 --> 00:32:49,730\nSo what I need to do, and apparently\nmy windows trying to resize itself.\n\n653\n00:32:52,640 --> 00:32:53,690\nThere we go.\n\n654\n00:32:53,690 --> 00:32:56,270\nWhat I need to do, is I need to get\nthat route out of there, all right.\n\n655\n00:32:56,270 --> 00:33:01,240\nAnd then I need to re-enter the route\nwith some different options.\n\n656\n00:33:01,240 --> 00:33:04,240\nI'm just using the no command to\nremove that route, so now it's gone.\n\n657\n00:33:05,320 --> 00:33:09,770\nAnd then I'm gonna put the route right\nback in again, but I'm gonna add to it.\n\n658\n00:33:09,770 --> 00:33:13,740\nAnd I'm gonna add to it track 1.\n\n659\n00:33:13,740 --> 00:33:17,010\nThat means track SLA number 1.\n\n660\n00:33:17,010 --> 00:33:21,730\nIf SLA number 1 goes into failure,\npull this route out of the routing table.\n\n661\n00:33:21,730 --> 00:33:25,940\nBut if SLA1 is happy, leave this route\nin the routing table, all right.\n\n662\n00:33:25,940 --> 00:33:30,150\nThis takes a static route and\nkind of makes it dynamic, in a way.\n\n663\n00:33:30,150 --> 00:33:33,020\nMakes it where it learns based\non the status of the SLA.\n\n664\n00:33:33,020 --> 00:33:34,030\nWhich is pretty awesome.\n\n665\n00:33:36,170 --> 00:33:41,700\nNow if I get out of my config, I can\ndo a quick show IP SLA statistics one.\n\n666\n00:33:43,130 --> 00:33:47,830\nI want to pull up the statistics for that\nfirst SLA, and I can see that it's an ICNP\n\n667\n00:33:47,830 --> 00:33:53,410\necho, that it's running, it's been running\nsince 8:20, and I've got two successes so\n\n668\n00:33:53,410 --> 00:33:57,980\nfar, no failures It's SLA,\nright, or as happy as SLAs get.\n\n669\n00:33:59,370 --> 00:34:00,210\nWell, here's the cool part.\n\n670\n00:34:01,260 --> 00:34:05,320\nWhen the other side fails,\nthis ping starts to fail.\n\n671\n00:34:05,320 --> 00:34:08,840\nMy router sees the ping fail, and it pulls\nthe route out of the routing table, right?\n\n672\n00:34:08,840 --> 00:34:10,130\nLet's see that.\n\n673\n00:34:10,130 --> 00:34:14,250\nI'll jump back over to branch one, and\nI'll do a shutdown on that interface,\n\n674\n00:34:14,250 --> 00:34:16,090\nand when I did this earlier, remember,\n\n675\n00:34:16,090 --> 00:34:18,230\nit didn't take the route\nout of the routing table.\n\n676\n00:34:18,230 --> 00:34:19,040\nIt stayed.\n\n677\n00:34:19,040 --> 00:34:22,120\nBecause my other router,\nthe headquarters router, was healthy.\n\n678\n00:34:22,120 --> 00:34:25,060\nWell here it's gonna pull it out,\nand let's see what happens.\n\n679\n00:34:25,060 --> 00:34:29,040\nNow depending on the threshold this might\ntake a little while before it gets to\n\n680\n00:34:29,040 --> 00:34:33,550\na failure, but what'll happen\nis I've got three successes, and\n\n681\n00:34:33,550 --> 00:34:36,380\nI guess I probably should have set\nthe frequency to make faster, right.\n\n682\n00:34:36,380 --> 00:34:39,610\nIt's default frequency,\nI think is 60 seconds.\n\n683\n00:34:39,610 --> 00:34:41,380\nWe might actually have\nto wait a little bit.\n\n684\n00:34:41,380 --> 00:34:45,820\nBefore it detects that failure, but when\nit picks up that failure, it'll then move.\n\n685\n00:34:45,820 --> 00:34:49,920\nAnd the longer your frequency,\nthe longer it takes to detect failure.\n\n686\n00:34:49,920 --> 00:34:53,180\nSo you might want something shorter, but\nyou also don't want to annoy the hell\n\n687\n00:34:53,180 --> 00:34:56,840\nout of your ISP by sending a ton of\npings to their equipment all the time.\n\n688\n00:34:56,840 --> 00:34:57,800\nThey can probably handle it,\n\n689\n00:34:57,800 --> 00:35:00,630\nbut you probably want to keep\nthat some what reasonable.\n\n690\n00:35:00,630 --> 00:35:03,220\nBut eventually it will\ndetect that failure.\n\n691\n00:35:03,220 --> 00:35:07,690\nAnd we'll test my patience here\nwhich is granted not the greatest.\n\n692\n00:35:07,690 --> 00:35:09,300\nBut it will detect that failure.\n\n693\n00:35:09,300 --> 00:35:10,250\nIt will light up.\n\n694\n00:35:10,250 --> 00:35:12,530\nSo the SOA will show that\nit's got a failure, and\n\n695\n00:35:12,530 --> 00:35:14,460\nthe route will come out\nof the routing table.\n\n696\n00:35:14,460 --> 00:35:17,990\nWhat we might want to do is just let that\none sit and jump over to my next example.\n\n697\n00:35:17,990 --> 00:35:19,000\nNope, there we go.\n\n698\n00:35:19,000 --> 00:35:21,040\nSee you just have to be patient sometimes.\n\n699\n00:35:21,040 --> 00:35:23,420\nSo I can see right here\nnumber of successes, three.\n\n700\n00:35:23,420 --> 00:35:25,330\nNumber of failures, one.\n\n701\n00:35:25,330 --> 00:35:27,810\nSo I have had a failure now on that SLA,\nall right.\n\n702\n00:35:27,810 --> 00:35:32,930\nAnd depending on what my threshold time is\nnow, it's gonna wait that threshold time.\n\n703\n00:35:32,930 --> 00:35:35,480\nTo determine whether or\nnot this is actually down or\n\n704\n00:35:35,480 --> 00:35:37,290\nif it was just a one time fluke, right.\n\n705\n00:35:37,290 --> 00:35:40,400\nBecause sometimes you don't want to\nyank a route just because of a one time\n\n706\n00:35:40,400 --> 00:35:41,370\npacket loss.\n\n707\n00:35:41,370 --> 00:35:43,120\nSo it will wait and see.\n\n708\n00:35:43,120 --> 00:35:49,160\nBut assuming that the threshold is short\nenough, I should see the static gone,\n\n709\n00:35:49,160 --> 00:35:51,870\nand sure enough, if I look in here,\nI no longer see 172.16.2,\n\n710\n00:35:51,870 --> 00:35:57,810\nit would be there with\nits own little entry.\n\n711\n00:35:57,810 --> 00:35:59,950\nAnd yeah, I do not see it.\n\n712\n00:35:59,950 --> 00:36:00,710\nIn this list.\n\n713\n00:36:00,710 --> 00:36:01,300\nAll right?\n\n714\n00:36:01,300 --> 00:36:05,850\nOr if I do a show IP route static,\nI get nothing back.\n\n715\n00:36:05,850 --> 00:36:08,160\nRight?\nThe route is out of the routing table.\n\n716\n00:36:08,160 --> 00:36:09,170\nThe route still exists.\n\n717\n00:36:09,170 --> 00:36:11,960\nIf I do a show run and I look for\n\n718\n00:36:11,960 --> 00:36:13,990\nthat route,\nit's still right there in my config.\n\n719\n00:36:15,360 --> 00:36:17,440\nIt just came out of the routing\ntable because the track.\n\n720\n00:36:17,440 --> 00:36:22,030\nIt failed the SLA, and\nwhen the other side comes back up, right.\n\n721\n00:36:23,230 --> 00:36:25,600\nWhen it comes back up,\nthe pings will be successful now,\n\n722\n00:36:25,600 --> 00:36:29,910\nand when they start succeeding, the route\nwill come back in the routing table, and\n\n723\n00:36:29,910 --> 00:36:31,430\nthen we'll have a happy SLA, and\n\n724\n00:36:31,430 --> 00:36:34,880\neverything will be wonderful, happy,\nshiny, people holding hands and all that.\n\n725\n00:36:34,880 --> 00:36:36,770\nAnd it'll come back\ninto the routing table.\n\n726\n00:36:36,770 --> 00:36:39,230\nSo I just kind of have to watch that SLA,\nso\n\n727\n00:36:39,230 --> 00:36:42,660\nI'm gonna watch the statistics on it,\nuntil I start seeing successes again.\n\n728\n00:36:42,660 --> 00:36:45,490\nAnd when I see those successes,\nthere we go.\n\n729\n00:36:46,620 --> 00:36:49,340\nSo cool way to fix a static route.\n\n730\n00:36:49,340 --> 00:36:50,820\nSo if you have to use a static route and\n\n731\n00:36:50,820 --> 00:36:52,870\nyou're worried about those downstream\nfailures, this is one to check.\n\n732\n00:36:54,020 --> 00:36:57,130\nI use this at home cuz I have\na cable provider that I have\n\n733\n00:36:57,130 --> 00:36:58,660\na number of problems with.\n\n734\n00:36:58,660 --> 00:37:03,100\nAnd what'll happen is usually\nmy cable link is up and fine.\n\n735\n00:37:03,100 --> 00:37:05,630\nIn fact, I can talk to their equipment.\n\n736\n00:37:05,630 --> 00:37:08,590\nIt's Cox,\nI don't care if I name the company.\n\n737\n00:37:08,590 --> 00:37:12,300\nSo it's Cox cable and\nI can ping their equipment just fine.\n\n738\n00:37:12,300 --> 00:37:14,430\nBut then I can't ping out to the Internet.\n\n739\n00:37:14,430 --> 00:37:17,510\nSo something happens at their headquarters\nwhere I'm not getting out to the Internet\n\n740\n00:37:17,510 --> 00:37:18,430\nsometimes.\n\n741\n00:37:18,430 --> 00:37:23,020\nAnd so when I set up a monitor, I don't\nwant to monitor cox, I want to monitor all\n\n742\n00:37:23,020 --> 00:37:27,750\nthe way out to the Internet so I'll pick\nlike an IP address at Google You do want\n\n743\n00:37:27,750 --> 00:37:30,500\nto be careful with that though, because\nwhat if Google reboots their equipment?\n\n744\n00:37:30,500 --> 00:37:31,850\nWhat if they take their IP offline?\n\n745\n00:37:31,850 --> 00:37:34,700\nAll of a sudden, you think your internet\nis offline when it isn't, right.\n\n746\n00:37:34,700 --> 00:37:37,420\nSo, pick an IP that's reliable to monitor.\n\n747\n00:37:37,420 --> 00:37:39,840\nYou'll typically monitor\nyour default gateway.\n\n748\n00:37:39,840 --> 00:37:41,240\nRight?\nThat's what you're watching\n\n749\n00:37:41,240 --> 00:37:44,410\nto give us an extra level\nof visibility on here.\n\n750\n00:37:44,410 --> 00:37:45,660\nHave I stalled long enough?\n\n751\n00:37:45,660 --> 00:37:47,250\nThere you go, I have a success.\n\n752\n00:37:47,250 --> 00:37:51,480\nIf I take a look at my routing table,\nthe round has it made it back in just yet.\n\n753\n00:37:52,510 --> 00:37:55,870\nRemember with your routing table it has a,\nthey call it flapping protection.\n\n754\n00:37:55,870 --> 00:37:58,810\nWhere just because\nthe route came up right now\n\n755\n00:37:58,810 --> 00:38:01,730\ndoesn't mean its not just gonna\nfail back again here in a second.\n\n756\n00:38:01,730 --> 00:38:04,940\nSo it may take a moment for\nthat route to make it back into the table.\n\n757\n00:38:04,940 --> 00:38:07,770\nJust because I got a success doesn't\nmean it's gonna jump right in.\n\n758\n00:38:07,770 --> 00:38:10,490\nThat's that threshold that it has to wait,\nso.\n\n759\n00:38:10,490 --> 00:38:12,910\nAnd here shortly it should reappear.\n\n760\n00:38:14,190 --> 00:38:17,210\nAnd again it'll make it back in\nthe table and we'll be happy.\n\n761\n00:38:17,210 --> 00:38:19,110\nSo that's the basic process.\n\n762\n00:38:19,110 --> 00:38:20,110\nIt's pretty cool stuff, SLA.\n\n763\n00:38:20,110 --> 00:38:22,780\nAnd if you want to learn more\nabout it definitely stay tuned.\n\n764\n00:38:22,780 --> 00:38:25,170\nBecause we do have an episode\njust on SLA's coming up.\n\n765\n00:38:26,760 --> 00:38:31,480\n>> Next thing we want to take a look at\nis what we call Floating static routes.\n\n766\n00:38:31,480 --> 00:38:35,380\nNow, most of the time, we're gonna be\nrunning dynamic routing protocols, and\n\n767\n00:38:35,380 --> 00:38:36,220\nwhat can happen,\n\n768\n00:38:36,220 --> 00:38:39,780\nthough, is that if you have your\ndynamic routing protocol running,\n\n769\n00:38:39,780 --> 00:38:44,190\nsuch as EIGRP, and you have a network\nin there and its destination, what if,\n\n770\n00:38:44,190 --> 00:38:50,270\nby accident Someone goes ahead and puts\nin a static route to that same network.\n\n771\n00:38:50,270 --> 00:38:51,490\nWhat normally would happen would is that,\n\n772\n00:38:51,490 --> 00:38:54,930\nthat static network will have a lower\nadministrative distance and take over.\n\n773\n00:38:54,930 --> 00:38:58,110\nUsually, that's not gonna be the case\nbecause we probably won't let that happen,\n\n774\n00:38:58,110 --> 00:39:00,940\nbut what if we wanna set\nsomething like a backup instead?\n\n775\n00:39:00,940 --> 00:39:06,180\nThat if that dynamic routing protocol went\ndown, we wanted to have a static route\n\n776\n00:39:06,180 --> 00:39:11,280\nthat then Be able to take over and\nstill get our data where it needs to go.\n\n777\n00:39:11,280 --> 00:39:15,330\nThis is where floating static\nroutes come into play for us.\n\n778\n00:39:15,330 --> 00:39:20,040\nIt's a neat way to get this done,\nand it really is helpful because\n\n779\n00:39:20,040 --> 00:39:24,920\nIt doesn't override the dynamic\nrouting protocol by default.\n\n780\n00:39:24,920 --> 00:39:26,290\n>> They call it a floating static route,\n\n781\n00:39:26,290 --> 00:39:28,810\nbecause the static route won't\nshow up in the routing table.\n\n782\n00:39:28,810 --> 00:39:33,080\nIt's just floating there in memory\nwaiting for its chance to jump in, and\n\n783\n00:39:33,080 --> 00:39:35,420\ntake over in the event that\na dynamic protocol dies out.\n\n784\n00:39:35,420 --> 00:39:37,040\nNow remember what I said\nearlier in the show.\n\n785\n00:39:37,040 --> 00:39:38,920\nStatic routes don't have a metric.\n\n786\n00:39:38,920 --> 00:39:42,236\nThey just have an administrative distance\nand that administrative distance is so\n\n787\n00:39:42,236 --> 00:39:43,204\nlow, they always win.\n\n788\n00:39:43,204 --> 00:39:45,202\nIf we wanna create\na floating static route,\n\n789\n00:39:45,202 --> 00:39:47,578\nwe just manipulate that\nadministrative distance.\n\n790\n00:39:47,578 --> 00:39:50,712\nWe set it to a number higher than\nour dynamic routing protocol.\n\n791\n00:39:50,712 --> 00:39:52,872\nLet me give you an example.\n\n792\n00:39:52,872 --> 00:39:53,866\nLet's see, where's my diagram.\n\n793\n00:39:53,866 --> 00:39:54,586\nHere.\n\n794\n00:39:54,586 --> 00:39:56,130\nI've got two more routers.\n\n795\n00:39:56,130 --> 00:39:57,050\nI've got branch two and\n\n796\n00:39:57,050 --> 00:40:00,850\nbranch three, and they're connected\nvia this 192.168.0.0 network.\n\n797\n00:40:02,220 --> 00:40:05,358\nEach of them has their\nown class C branched off.\n\n798\n00:40:05,358 --> 00:40:08,425\nRight, so\n172.16.4 is connected to branch two.\n\n799\n00:40:08,425 --> 00:40:12,240\nAnd 172.16.6 is connected to branch 3.\n\n800\n00:40:12,240 --> 00:40:15,960\nAnd they're learning about each\nother's networks using EIGRP.\n\n801\n00:40:17,270 --> 00:40:21,600\nWell, what happens if something\nhappens on this network and\n\n802\n00:40:21,600 --> 00:40:24,150\nit starts blocking EIGRP traffic?\n\n803\n00:40:24,150 --> 00:40:29,025\nWell, the route to get there is still\ngood, but it's EIGRP that's damaged.\n\n804\n00:40:29,025 --> 00:40:32,690\nRight, so I might want to create\na floating static route that serves\n\n805\n00:40:32,690 --> 00:40:36,998\nas a backup that says, hey, if EIGRP\nmalfunctions, here's this backup route\n\n806\n00:40:36,998 --> 00:40:40,566\nthat can jump in and take over its\nrole and get us put back in place.\n\n807\n00:40:40,566 --> 00:40:43,337\nRight, it's a neat little\nsystem that can jump in and\n\n808\n00:40:43,337 --> 00:40:45,770\nfix that problem on our network.\n\n809\n00:40:45,770 --> 00:40:48,971\nThe only difficulty is we have to make\nsure we manipulate the administrative\n\n810\n00:40:48,971 --> 00:40:50,027\ndistances to handle it.\n\n811\n00:40:50,027 --> 00:40:52,310\nSo let me show you that process.\n\n812\n00:40:52,310 --> 00:40:55,025\nIf I take a look at branch two.\n\n813\n00:40:55,025 --> 00:40:59,699\nAll right, now branch two, if I look at\nit, it's local interfaces, it's connected\n\n814\n00:40:59,699 --> 00:41:05,700\nto the 192.168.0 network, and\nit's connected to the 172.16.4 network.\n\n815\n00:41:05,700 --> 00:41:11,480\nIt's not connected to 172.16.6, so it's\ngotta learn that from the other router.\n\n816\n00:41:11,480 --> 00:41:13,810\nAnd if I do a show IP route EIGRP,\n\n817\n00:41:14,990 --> 00:41:20,010\nI can see where I am indeed learning\n172.16.6 from the other router.\n\n818\n00:41:21,430 --> 00:41:27,729\nIf I wanted to put a backup in there,\nwell I could jump in and\n\n819\n00:41:27,729 --> 00:41:32,616\nI could say IP route 172.16.6.0,\n\n820\n00:41:32,616 --> 00:41:37,900\n255.255.254 that's a slash 23.\n\n821\n00:41:37,900 --> 00:41:40,733\n255.255.254.0.\n\n822\n00:41:40,733 --> 00:41:43,267\nAnd then I can specify who it's going to,\nright, and\n\n823\n00:41:43,267 --> 00:41:45,293\nif you look at the way\nEIGRP has learned it,\n\n824\n00:41:45,293 --> 00:41:49,090\nit's learned it just out that interface,\nbut it's got that via gateway also.\n\n825\n00:41:49,090 --> 00:41:50,940\nSo I'll punch in the gateway.\n\n826\n00:41:50,940 --> 00:41:53,060\nSo I'm just duplicating that route.\n\n827\n00:41:53,060 --> 00:41:59,630\nWell, when I do that, the EIGRP route\nhad an administrative distance of 90.\n\n828\n00:41:59,630 --> 00:42:03,570\nThis new route I just put in had\nan administrative distance of one.\n\n829\n00:42:03,570 --> 00:42:04,358\nWhich one's gonna win?\n\n830\n00:42:04,358 --> 00:42:06,900\nWell, this one.\n\n831\n00:42:06,900 --> 00:42:10,690\nSo if I take a look at my\nrouting table and I look for\n\n832\n00:42:10,690 --> 00:42:14,500\nan EIGRP route, the 172.16.6 is gone.\n\n833\n00:42:14,500 --> 00:42:17,275\nAnd if I look for\nthe static, it's in there.\n\n834\n00:42:17,275 --> 00:42:17,779\nRight, so\n\n835\n00:42:17,779 --> 00:42:21,760\nI just overrode the other one because of\nthat administrative distance right there.\n\n836\n00:42:23,030 --> 00:42:24,830\nSo instead what I should have done.\n\n837\n00:42:26,670 --> 00:42:28,610\nSo I'm just gonna remove\nthat route real quick.\n\n838\n00:42:28,610 --> 00:42:31,220\nIs when I put it in, I should have\n\n839\n00:42:31,220 --> 00:42:34,230\nmodified the administrative distance\nwhich is super easy for a static route.\n\n840\n00:42:34,230 --> 00:42:35,858\nIt's just the very next\nvalue that I provide.\n\n841\n00:42:35,858 --> 00:42:39,483\nOne through 255 is the distance metric for\nthis route.\n\n842\n00:42:39,483 --> 00:42:41,810\nAnd notice how they call\nit a distance metric there.\n\n843\n00:42:41,810 --> 00:42:45,715\nIt's the administrative distance, not to\nbe confused with the routing protocol\n\n844\n00:42:45,715 --> 00:42:49,705\nmetric because we don't have a routing\nprotocol metric for a static, right?\n\n845\n00:42:49,705 --> 00:42:52,858\nNow the EIGRP route had a metric of 90.\n\n846\n00:42:52,858 --> 00:42:56,754\nWell, it's always good to verify though,\nbecause maybe it was external EIGRP so\n\n847\n00:42:56,754 --> 00:43:00,780\nit might have a, what is that, 170,\nso it could be something different.\n\n848\n00:43:00,780 --> 00:43:05,108\nBut in this case it's 90, so\nI'm just gonna go one higher, 91.\n\n849\n00:43:05,108 --> 00:43:09,436\nAll right, so this one's gonna go in\nwith administrated instance of 91, and\n\n850\n00:43:09,436 --> 00:43:12,359\nif I take a look at my routing table now,\nwhat do I see?\n\n851\n00:43:14,910 --> 00:43:16,920\nEIGRP route is still there.\n\n852\n00:43:16,920 --> 00:43:23,270\nAnd if I look for the statics,\nit's not there, right, but it's not gone.\n\n853\n00:43:23,270 --> 00:43:27,290\nIt's in my config,\nit's just floating, it's waiting.\n\n854\n00:43:27,290 --> 00:43:30,420\nIf something happens to that EIGRP\nroute with an admin distance of 90,\n\n855\n00:43:30,420 --> 00:43:34,610\nthe static route with the admin distance\nof 91 jumps in and takes its place.\n\n856\n00:43:35,710 --> 00:43:38,170\nAnd I can do the same thing\nover on branch three.\n\n857\n00:43:39,650 --> 00:43:43,557\nI can say IP route 172.16.4.0.\n\n858\n00:43:43,557 --> 00:43:46,195\n255 255 254.0.\n\n859\n00:43:46,195 --> 00:43:51,620\nAnd I'll point that over to 192.168.0.\n\n860\n00:43:51,620 --> 00:43:55,900\nThree, and\nI'll set its admin distance to 91.\n\n861\n00:43:55,900 --> 00:43:58,860\nSo now I've got the same thing\nconfigured on the two different\n\n862\n00:43:58,860 --> 00:44:00,500\nrouters for each other.\n\n863\n00:44:00,500 --> 00:44:05,942\nAnd if something happens to EIGRP,\nthese routes should jump in and fix it.\n\n864\n00:44:05,942 --> 00:44:10,170\nRight, let me just make sure\nthat I've got my routes learned.\n\n865\n00:44:10,170 --> 00:44:14,206\nThere's the route for\n172.16.4 on the one and\n\n866\n00:44:14,206 --> 00:44:17,900\nthe static did not make it\ninto the routing table.\n\n867\n00:44:17,900 --> 00:44:20,770\nAll right,\nnow if I do like a no router EIGRP one,\n\n868\n00:44:20,770 --> 00:44:23,650\nI'm just going to kill\noff EIGRP on this router.\n\n869\n00:44:23,650 --> 00:44:27,960\nRight, so branch three just\ndropped its EIGRP configuration.\n\n870\n00:44:27,960 --> 00:44:30,090\nEIGRP routes are going to come\nout of the routing table.\n\n871\n00:44:30,090 --> 00:44:31,282\nGot a nice little memory error there.\n\n872\n00:44:31,282 --> 00:44:32,470\n>> Yeah.\n>> [LAUGH] So\n\n873\n00:44:32,470 --> 00:44:34,390\nthat's going to come out\nof the routing table.\n\n874\n00:44:34,390 --> 00:44:35,930\nThere we go.\nWe see the relationship\n\n875\n00:44:35,930 --> 00:44:37,470\ndropping on that one.\n\n876\n00:44:37,470 --> 00:44:41,992\nComes out, now the static routes have that\nhigher admin distance, but there's nobody\n\n877\n00:44:41,992 --> 00:44:45,858\nto compete with, so they jump in and\nit should make it in the routing table.\n\n878\n00:44:45,858 --> 00:44:52,441\nSo I should be able to ping 172.16.6.1,\nI think was the other IP.\n\n879\n00:44:52,441 --> 00:44:57,069\nYeah, so I still can ping it, and\nif I do a show IP route EIGRP,\n\n880\n00:44:57,069 --> 00:45:01,270\nwe've got no EIGRP routes,\nthey've all been dumped.\n\n881\n00:45:02,310 --> 00:45:07,740\nAnd if I look at my statics, there's my\nstatic with its admin distance of 91.\n\n882\n00:45:07,740 --> 00:45:09,890\nRemember, the number on the left\nis your admin distance,\n\n883\n00:45:09,890 --> 00:45:11,670\nthe number on the right is your metric.\n\n884\n00:45:11,670 --> 00:45:14,230\nGot no metric,\nthis one has an admin distance of 91.\n\n885\n00:45:14,230 --> 00:45:17,510\nThat static was waiting for\nit's chance to jump in and take over.\n\n886\n00:45:18,960 --> 00:45:22,960\nNow I'll admit, I don't typically use\nthis with standard routes like this,\n\n887\n00:45:22,960 --> 00:45:24,590\nI normally use it with default routes.\n\n888\n00:45:24,590 --> 00:45:26,370\nAnd so\nthat's the example I typically give.\n\n889\n00:45:26,370 --> 00:45:29,000\nWe've got a separate episode for default\nroutes, so we'll jump into that and\n\n890\n00:45:29,000 --> 00:45:33,110\nsee it a little bit later, but here,\nit's in place and ready to rock.\n\n891\n00:45:33,110 --> 00:45:35,870\nNothing too crazy or spectacular there.\n\n892\n00:45:35,870 --> 00:45:39,359\nJumps in, that's a nice little back up.\n\n893\n00:45:39,359 --> 00:45:42,330\nAll right so I think that's about it for\nstatic routes, Ronnie.\n\n894\n00:45:42,330 --> 00:45:44,483\nWe can only drone on on this for so long.\n\n895\n00:45:44,483 --> 00:45:45,950\n>> [LAUGH]\n>> There are some route map\n\n896\n00:45:45,950 --> 00:45:47,900\nthings that we'll talk about\non later episodes, but for\n\n897\n00:45:47,900 --> 00:45:51,060\nthe most part, that's all we need\nto know about static routes.\n\n898\n00:45:52,660 --> 00:45:55,160\nRonnie can you think of anything\nelse we should throw in on that?\n\n899\n00:45:55,160 --> 00:45:58,022\n>> Nope, remember that as far\nas the floating routes go,\n\n900\n00:45:58,022 --> 00:46:01,340\nas long as it's just EIGRP that's down,\nwe're okay.\n\n901\n00:46:01,340 --> 00:46:03,150\nBut if the other side is down, well,\n\n902\n00:46:03,150 --> 00:46:05,620\nthat floating route's not\ngonna help you at all.\n\n903\n00:46:05,620 --> 00:46:09,470\nSo you might see where you go over\na different interface instead that\n\n904\n00:46:09,470 --> 00:46:11,620\nto put that in there and\nget over to that other network.\n\n905\n00:46:11,620 --> 00:46:13,960\nBesides that, everything is good.\n\n906\n00:46:13,960 --> 00:46:14,880\nYep.\n\n907\n00:46:14,880 --> 00:46:18,533\n>> All right, so in this episode we took\na look at static routes, which you guys\n\n908\n00:46:18,533 --> 00:46:21,956\nshould have already been familiar with\nfrom CCNA, but we did add on to it\n\n909\n00:46:21,956 --> 00:46:25,952\na little bit, with floating statics as\nwell as the IPSLAs, which are pretty cool,\n\n910\n00:46:25,952 --> 00:46:29,525\nand we'll see more about SLAs down\nthe road too, it's really fun stuff.\n\n911\n00:46:29,525 --> 00:46:33,035\nSo kind of neat, little extra things we\ncan do with static routes you might not\n\n912\n00:46:33,035 --> 00:46:34,720\nhave dealt with before.\n\n913\n00:46:34,720 --> 00:46:37,660\nSo part of the episode was review,\npart of it was new.\n\n914\n00:46:37,660 --> 00:46:39,310\nAll stuff that's on the exams.\n\n915\n00:46:39,310 --> 00:46:43,100\nSo make sure you've got a good\nfirm understanding of this, and\n\n916\n00:46:43,100 --> 00:46:45,840\nif you don't,\nfeel free to ask us questions, right?\n\n917\n00:46:45,840 --> 00:46:48,910\nLive during the show,\nyou can go to ITPro.tv/live and\n\n918\n00:46:48,910 --> 00:46:51,880\nyou'll see the chat box beneath the video,\npost your questions there.\n\n919\n00:46:51,880 --> 00:46:54,150\nWe monitor and answer during the show.\n\n920\n00:46:54,150 --> 00:46:57,340\nIf you have questions after the show,\nuse our Q and A forums.\n\n921\n00:46:57,340 --> 00:47:00,750\nAt the top of every page on IT Pro TV,\nyou'll see a link that says Q and\n\n922\n00:47:00,750 --> 00:47:02,300\nA, it will take you to the forums.\n\n923\n00:47:02,300 --> 00:47:03,200\nPost your questions there.\n\n924\n00:47:03,200 --> 00:47:04,740\nWe monitor and answer after the show.\n\n925\n00:47:05,930 --> 00:47:08,108\nTake advantage of that resource.\nIt is there for you.\n\n926\n00:47:08,108 --> 00:47:10,983\nAll right well signing off for\nIT Pro TV, I'm Don Pezet.\n\n927\n00:47:10,983 --> 00:47:11,900\n>> And I'm Ronnie Wong.\n\n928\n00:47:11,900 --> 00:47:13,275\n>> And we'll see you next time.\n\n929\n00:47:13,275 --> 00:47:23,275\n[MUSIC]\n\n930\n00:47:27,608 --> 00:47:33,990\n[SOUND]\n\n",
          "vimeoId": "118805997"
        },
        {
          "description": "A default route takes the packets that come into a router that don't match any entry on the routing table and forwards it to a particular interface or IP address. Viewers will hear about the use of default routing on Cisco routers, how to configure static default routes and how to redistribute a default route into OSPF and EIGRP.",
          "length": "2266",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/ccnproute/cisco-ccnproute-3-4-default_routing-020415.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/ccnproute/cisco-ccnproute-3-4-default_routing-020415-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/ccnproute/cisco-ccnproute-3-4-default_routing-020415-sm.jpg",
          "title": "Default Routing",
          "transcript": "1\n00:00:00,000 --> 00:00:10,000\n[MUSIC]\n\n2\n00:00:33,890 --> 00:00:35,733\nAll right, good morning,\ngood afternoon, and good evening and\n\n3\n00:00:35,733 --> 00:00:37,018\nwelcome back to another\nepisode of ITProTV.\n\n4\n00:00:37,018 --> 00:00:41,741\nI'm your host, Don Pezet,\nback again with Mr. Ronnie Wong.\n\n5\n00:00:41,741 --> 00:00:42,480\nHow's it going, Ronnie?\n\n6\n00:00:42,480 --> 00:00:44,940\n>> It is going well, another day,\n\n7\n00:00:44,940 --> 00:00:50,295\nanother exciting episode here on\nCCNP route, ready to get started.\n\n8\n00:00:50,295 --> 00:00:52,515\n>> Yep.\nWe're following up after our last episode\n\n9\n00:00:52,515 --> 00:00:55,740\non static routes with\nan episode on default routing.\n\n10\n00:00:55,740 --> 00:00:57,935\n>> [LAUGH]\n>> And when you looked at the objectives,\n\n11\n00:00:57,935 --> 00:00:59,925\nyou were going down the list,\nyou probably thought to yourself.\n\n12\n00:00:59,925 --> 00:01:02,985\nWell, default route is not much\ndifferent than a static route.\n\n13\n00:01:02,985 --> 00:01:06,755\nFor most people when you implement a\ndefault route it is going to a static, but\n\n14\n00:01:06,755 --> 00:01:08,455\nit doesn't always have to be.\n\n15\n00:01:08,455 --> 00:01:10,645\nAnd we're gonna take a look at\nthat right here in this episode.\n\n16\n00:01:10,645 --> 00:01:13,940\nBut before I get ahead of myself,\nlet's start off real basic.\n\n17\n00:01:13,940 --> 00:01:16,350\n>> What the heck is a default route,\nRonnie?\n\n18\n00:01:16,350 --> 00:01:19,730\n>> Yeah, when we take a look at\nthe concept of a default route.\n\n19\n00:01:19,730 --> 00:01:21,980\nIf it doesn't match anything\nelse in the routing table.\n\n20\n00:01:21,980 --> 00:01:24,990\nIf we have packets that come into a router\nthat doesn't match anything else.\n\n21\n00:01:24,990 --> 00:01:27,470\nWe still want to send that data somewhere.\n\n22\n00:01:27,470 --> 00:01:31,610\nWe don't really want it to necessarily\njust drop off the planet or into space.\n\n23\n00:01:31,610 --> 00:01:33,680\nWe really want to put it somewhere.\n\n24\n00:01:33,680 --> 00:01:36,940\nSo what we can have is an entry\nin our routing table that says,\n\n25\n00:01:36,940 --> 00:01:39,400\nif it doesn't match anything else,\nlet's go in and\n\n26\n00:01:39,400 --> 00:01:43,130\nforward it out this particular\ninterface or this IP address.\n\n27\n00:01:43,130 --> 00:01:46,920\nAnd we can set that up with one particular\ncommand and it just makes it easy.\n\n28\n00:01:46,920 --> 00:01:48,670\nIn other words, it becomes a catch all for\n\n29\n00:01:48,670 --> 00:01:53,070\nus even if we didn't end up setting\na particular route somewhere.\n\n30\n00:01:53,070 --> 00:01:57,190\n>> And CISCO's official term for\nthis is the Gateway of Last Resort.\n\n31\n00:01:57,190 --> 00:02:00,436\nAnd that means we're looking for\na way to get to a network,\n\n32\n00:02:00,436 --> 00:02:04,358\nwe run down our routing table,\nif anything matches we'll take that.\n\n33\n00:02:04,358 --> 00:02:06,231\n>> [LAUGH]\n>> But if there's absolutely nothing,\n\n34\n00:02:06,231 --> 00:02:09,613\nthere's no other route that's even like\na horrible metric, then we need something.\n\n35\n00:02:09,613 --> 00:02:11,626\n>> We need something here.\n\n36\n00:02:11,626 --> 00:02:13,050\n>> Here's our last ditch effort.\n\n37\n00:02:13,050 --> 00:02:15,387\nThis is it, we'll just throw caution\nto the wind and give it a shot,\n\n38\n00:02:15,387 --> 00:02:16,092\nchuck it out there.\n\n39\n00:02:16,092 --> 00:02:16,650\nRight?\n\n40\n00:02:16,650 --> 00:02:19,770\nSo that's what this default route does.\n\n41\n00:02:19,770 --> 00:02:24,590\nNow, most people will only have one\ndefault route, you have one ISP.\n\n42\n00:02:24,590 --> 00:02:27,240\nBut in larger organizations,\nyou may have redundant ISPs,\n\n43\n00:02:27,240 --> 00:02:30,110\nyou may have multiple paths in and\nout of your network.\n\n44\n00:02:30,110 --> 00:02:32,070\nThen you can end up with\nmore than one default route,\n\n45\n00:02:32,070 --> 00:02:33,570\nand that's perfectly fine too.\n\n46\n00:02:33,570 --> 00:02:36,510\nBut your router is only\ngonna use one of them.\n\n47\n00:02:36,510 --> 00:02:38,870\nSo, it's got to pick the best\nof the default routes.\n\n48\n00:02:38,870 --> 00:02:41,038\nAnd so we can always attach\nthings like metrics and\n\n49\n00:02:41,038 --> 00:02:45,030\nadministrative distances to default\nroutes to influence their selection.\n\n50\n00:02:45,030 --> 00:02:46,710\nBut before we get into all of that,\n\n51\n00:02:46,710 --> 00:02:49,830\nlet's just take a look of an example\nof how to use default routes.\n\n52\n00:02:49,830 --> 00:02:54,270\nDefault routes for most people,\nif you only have one way in and\n\n53\n00:02:54,270 --> 00:02:56,030\none way out of your network,\n\n54\n00:02:56,030 --> 00:03:00,302\na single default route is probably the\nonly thing you need in your routing table.\n\n55\n00:03:00,302 --> 00:03:02,270\nAll right?\nLet me show you an example.\n\n56\n00:03:02,270 --> 00:03:03,792\nLet me bring up this diagram here.\n\n57\n00:03:03,792 --> 00:03:06,085\nI've got I've got two routers and\n\n58\n00:03:06,085 --> 00:03:08,795\nactually, yeah well,\nwe'll kinda pretend here.\n\n59\n00:03:08,795 --> 00:03:10,695\nIt's actually these routers\nthat I'm gonna use.\n\n60\n00:03:10,695 --> 00:03:11,855\nI've got two routers and\n\n61\n00:03:11,855 --> 00:03:14,995\nthese are the routers that I used\nin the static route episode.\n\n62\n00:03:14,995 --> 00:03:17,890\nIf you've already seen that one,\nthese are the same routers that I used.\n\n63\n00:03:17,890 --> 00:03:19,300\nAnd each router, so\n\n64\n00:03:19,300 --> 00:03:23,900\nmy headquarters router,\nwas connected to the 172.16.0 network.\n\n65\n00:03:23,900 --> 00:03:28,890\nMy branch router was connected\nto the 172.16.2 network.\n\n66\n00:03:28,890 --> 00:03:29,540\nAll right.\nAnd\n\n67\n00:03:29,540 --> 00:03:34,480\nin between them they had\na common network of 192.168.0.0.\n\n68\n00:03:34,480 --> 00:03:37,910\nNow, if I'm sitting on\nthe 172.16.0 network and\n\n69\n00:03:37,910 --> 00:03:40,640\nI wanna get to the 172.16.2 network.\n\n70\n00:03:40,640 --> 00:03:44,380\nHow many ways in and\nout of headquarters do I have?\n\n71\n00:03:45,600 --> 00:03:46,290\nJust one.\n\n72\n00:03:46,290 --> 00:03:47,173\nThere's only one way to go.\n\n73\n00:03:47,173 --> 00:03:49,530\nAll right.\nI don't need a complex routing table to\n\n74\n00:03:49,530 --> 00:03:50,720\nfigure this stuff out.\n\n75\n00:03:50,720 --> 00:03:52,590\nThere's only one way to go.\n\n76\n00:03:52,590 --> 00:03:55,770\nSo instead of trying to maintain\na bunch of individual routes.\n\n77\n00:03:55,770 --> 00:03:59,520\nI could just put in one default route and\nbe done with the whole thing.\n\n78\n00:03:59,520 --> 00:04:01,330\nAnd just say that's it,\nthat's the way you go to get everywhere.\n\n79\n00:04:01,330 --> 00:04:03,300\nAnywhere you want to go,\nyou just go right in here.\n\n80\n00:04:03,300 --> 00:04:06,820\nSo if you have a home router, at home,\nyour small office, whatever that's likely,\n\n81\n00:04:06,820 --> 00:04:09,380\nall you have on it is one default route.\n\n82\n00:04:09,380 --> 00:04:14,070\nSo we can put that in and we can do\nit either statically or dynamically.\n\n83\n00:04:14,070 --> 00:04:16,970\nWe can learn a default route\nvia routing protocols.\n\n84\n00:04:16,970 --> 00:04:17,590\nAll right?\n\n85\n00:04:17,590 --> 00:04:19,820\nSo I wanna show you guys some\nexamples that I have and\n\n86\n00:04:19,820 --> 00:04:21,220\nkind of how we put it in place.\n\n87\n00:04:21,220 --> 00:04:22,010\nBut let's go back and\n\n88\n00:04:22,010 --> 00:04:25,810\nsolve the problem from the earlier\nepisode with default routes.\n\n89\n00:04:25,810 --> 00:04:26,730\nAll right?\n\n90\n00:04:26,730 --> 00:04:31,570\nIf I take a look at my headquarters\nrouter, so here I am on headquarters, and\n\n91\n00:04:31,570 --> 00:04:33,610\nI'll do a show IP route.\n\n92\n00:04:33,610 --> 00:04:37,240\nI can see that I've got routes in here for\n\n93\n00:04:37,240 --> 00:04:41,620\nthe 172.16.0 network because\nI'm directly connected to it.\n\n94\n00:04:41,620 --> 00:04:43,800\nAnd I've got routes in here for 192.168.1,\n\n95\n00:04:43,800 --> 00:04:45,980\nbecause apparently I'm directly\nconnected to that too.\n\n96\n00:04:45,980 --> 00:04:47,320\nOh shoot, you know what?\n\n97\n00:04:48,530 --> 00:04:52,580\nIn this episode we were using\nan ethernet network, that was 192.168.0.\n\n98\n00:04:52,580 --> 00:04:57,180\nHere I'm using a serial network,\nlike a T1 line, this 192.168.1.\n\n99\n00:04:57,180 --> 00:04:59,270\nSo slightly different numbering there.\n\n100\n00:04:59,270 --> 00:05:01,890\nSo I see that cuz I'm directly\nconnected to it on my serial interface.\n\n101\n00:05:01,890 --> 00:05:03,210\nAll right.\n\n102\n00:05:03,210 --> 00:05:06,720\nAnd then lastly, I've got a connection to\nan ISP, a connection out to the Internet.\n\n103\n00:05:06,720 --> 00:05:09,250\nAnd that's where we normally\nuse a default route.\n\n104\n00:05:09,250 --> 00:05:10,410\nRight?\nIt's to say here's our connection to\n\n105\n00:05:10,410 --> 00:05:12,600\nthe Internet, all those other\nnetworks that are out there.\n\n106\n00:05:12,600 --> 00:05:15,230\nBut I'm gonna ignore that Internet\nconnection right now, and\n\n107\n00:05:15,230 --> 00:05:16,726\njust focus on my internal network.\n\n108\n00:05:16,726 --> 00:05:21,301\nIf I wanna get to 172.16.2.\n\n109\n00:05:21,301 --> 00:05:23,130\nRight?\nIf I wanna get to this network over here,\n\n110\n00:05:23,130 --> 00:05:26,010\nI needed my routing table and\nit's not there.\n\n111\n00:05:26,010 --> 00:05:27,820\nAnd if it doesn't mention\nanything in the routing table,\n\n112\n00:05:27,820 --> 00:05:29,240\nit is gonna go to\nthe gateway of last resort.\n\n113\n00:05:29,240 --> 00:05:33,430\nBut I can see right here,\ngateway of last resort is not set.\n\n114\n00:05:33,430 --> 00:05:34,590\nSo we need to create one.\n\n115\n00:05:34,590 --> 00:05:35,250\nRight?\n\n116\n00:05:35,250 --> 00:05:38,620\nSo I'll just go on my config and\nI'll say IP route.\n\n117\n00:05:38,620 --> 00:05:40,520\nJust like doing a normal static route.\n\n118\n00:05:40,520 --> 00:05:42,145\nThe difference here is the network.\n\n119\n00:05:42,145 --> 00:05:43,490\nRight?\nWhat do we put in for the network?\n\n120\n00:05:43,490 --> 00:05:47,830\n>> The network that we're gonna actually\nend up putting in is gonna be a 0.0.0.0,\n\n121\n00:05:47,830 --> 00:05:50,740\nand this is where it gets\na little bit strange.\n\n122\n00:05:50,740 --> 00:05:53,910\nMost people aren't gonna like this,\nis the subnet mask of 0.0.0.0.\n\n123\n00:05:53,910 --> 00:05:55,860\nAnd so it does look a little bit strange,\n\n124\n00:05:55,860 --> 00:06:00,850\nbut this is the way\nthat we've gotta do it.\n\n125\n00:06:00,850 --> 00:06:03,710\nAll of the sudden, people start getting\nconfused if your not used to this and\n\n126\n00:06:03,710 --> 00:06:06,512\nthey might go, why am I putting\nin a wild card mask instead?\n\n127\n00:06:06,512 --> 00:06:08,110\n>> Yeah.\n>> But this is the way to do it.\n\n128\n00:06:08,110 --> 00:06:08,974\n>> Yeah, all zeros,\n\n129\n00:06:08,974 --> 00:06:12,710\nthat would indicate that the entire\nsub-net mask is part of the host ID.\n\n130\n00:06:12,710 --> 00:06:14,740\nBut this is the catch-all we put in for\nCisco.\n\n131\n00:06:14,740 --> 00:06:16,130\nThey call it the catch-all range.\n\n132\n00:06:16,130 --> 00:06:19,560\nWhen you say route, followed by four\nzeros, followed by four more zeros,\n\n133\n00:06:19,560 --> 00:06:21,320\nthat's saying any other network.\n\n134\n00:06:21,320 --> 00:06:23,350\nAnybody that doesn't\nmatch the routing table.\n\n135\n00:06:23,350 --> 00:06:24,460\nAnd then you just tell it where to go.\n\n136\n00:06:24,460 --> 00:06:25,478\nRight?\n\n137\n00:06:25,478 --> 00:06:28,360\nIf I wanted to go to\nthe router on the other side\n\n138\n00:06:28,360 --> 00:06:29,910\nof this link, well, I'm 192.168.1.1.\n\n139\n00:06:29,910 --> 00:06:34,020\nIf I look at branch one, it's 192.168.1.2.\n\n140\n00:06:34,020 --> 00:06:39,560\nSo I'm gonna say send\nall that to 192.168.1.2.\n\n141\n00:06:39,560 --> 00:06:40,640\nIf I get traffic for\n\n142\n00:06:40,640 --> 00:06:43,862\na network that doesn't match my\nrouting table, go out that interface.\n\n143\n00:06:43,862 --> 00:06:44,480\nAll right?\n\n144\n00:06:44,480 --> 00:06:46,670\nAnd I'll specify that there.\n\n145\n00:06:46,670 --> 00:06:52,060\nGo to 192.168.1.2.\nAnd when I look at my routing table now,\n\n146\n00:06:52,060 --> 00:06:55,820\nI'll see that I've got that\nstatic route right here.\n\n147\n00:06:55,820 --> 00:06:58,390\nAnd notice the little asterisk beside it?\n\n148\n00:06:58,390 --> 00:07:02,431\nThat means that it is a candidate\nto become a default route.\n\n149\n00:07:02,431 --> 00:07:03,400\nAll right?\n\n150\n00:07:03,400 --> 00:07:05,920\nYou might have more than\none default route and\n\n151\n00:07:05,920 --> 00:07:09,110\nsome of them might become candidates\nto the gateway of last resort.\n\n152\n00:07:09,110 --> 00:07:12,350\nSome of them might not be candidates\nbecause of bad metrics or\n\n153\n00:07:12,350 --> 00:07:13,710\nsome other reason.\n\n154\n00:07:13,710 --> 00:07:18,780\nBut in this case I've got one, it's\na candidate, and if I look up here, I'll\n\n155\n00:07:18,780 --> 00:07:24,690\nsee the gateway of last resort is set to\n192.168.1.2, it's set, and it's in place.\n\n156\n00:07:26,545 --> 00:07:29,405\nAnd then it's got to network 0.0.0.0.\n\n157\n00:07:29,405 --> 00:07:30,465\nRight?\n\n158\n00:07:30,465 --> 00:07:32,035\nYou'll pretty much always see that.\n\n159\n00:07:32,035 --> 00:07:34,685\nThat's saying that you're just gonna send\nall of your traffic to 192.168.1.2 and\n\n160\n00:07:34,685 --> 00:07:36,365\nyou don't care how you get there.\n\n161\n00:07:36,365 --> 00:07:37,975\nAll right?\n\n162\n00:07:37,975 --> 00:07:41,485\nThere are times where you\ndon't want your default,\n\n163\n00:07:41,485 --> 00:07:44,370\nyour gateway of last resort\nto be a particular router.\n\n164\n00:07:44,370 --> 00:07:46,140\nYou want it to be a particular network.\n\n165\n00:07:46,140 --> 00:07:49,924\nYou say, hey, if I need to get this\ntraffic out, send it over to this other\n\n166\n00:07:49,924 --> 00:07:53,182\nnetwork instead, and\nwhen you get over to that other network.\n\n167\n00:07:53,182 --> 00:07:56,385\nThen that network will figure\nout where to send it from there.\n\n168\n00:07:56,385 --> 00:08:00,967\nAnd that's configured a slightly different\nway using the IP default-network\n\n169\n00:08:00,967 --> 00:08:03,940\ncommand instead of the IP route command.\n\n170\n00:08:03,940 --> 00:08:08,450\nWhen you do IP default-network and specify\nthat network that you want to send to.\n\n171\n00:08:08,450 --> 00:08:11,940\nThat'll populate this two network\nfield and get something in there.\n\n172\n00:08:11,940 --> 00:08:14,250\nIt's very rare that people use that today.\n\n173\n00:08:14,250 --> 00:08:17,630\nISPs use that sometimes, but\neven there usually VGP and\n\n174\n00:08:17,630 --> 00:08:20,580\nother protocols take its place,\nso it's a pretty rare setting.\n\n175\n00:08:20,580 --> 00:08:24,240\nAll right, so\nin this case I now have a default route.\n\n176\n00:08:24,240 --> 00:08:27,410\nIf I generate traffic that\ndoesn't match the routing table,\n\n177\n00:08:27,410 --> 00:08:28,222\nit's gonna go out that route.\n\n178\n00:08:28,222 --> 00:08:29,260\nAll right?\n\n179\n00:08:29,260 --> 00:08:31,175\nAnd you can test it, and\nnot just with pings.\n\n180\n00:08:31,175 --> 00:08:35,250\nLike when you do show IP route,\nif you follow that up by an IP address,\n\n181\n00:08:35,250 --> 00:08:37,195\nit'll tell you what route\nit uses to figure it out.\n\n182\n00:08:37,195 --> 00:08:38,480\nRight?\nAnd if I do show IP route,\n\n183\n00:08:38,480 --> 00:08:40,668\nand I specify a network that I know.\n\n184\n00:08:40,668 --> 00:08:41,810\nRight?\nLike 192.168.1.5.\n\n185\n00:08:41,810 --> 00:08:45,860\nIt'll say, all right, well,\nif you wanna go at that one,\n\n186\n00:08:45,860 --> 00:08:48,150\nyou'll go via this connected\nroute that I have.\n\n187\n00:08:49,220 --> 00:08:53,160\nBut if you type in some random network or\na network that's not the routing table.\n\n188\n00:08:53,160 --> 00:08:55,410\nLike 172.16.4.\n\n189\n00:08:55,410 --> 00:08:56,034\nRight?\n\n190\n00:08:56,034 --> 00:08:59,812\nIt's not the routing table, and\nwe get subnet not in table.\n\n191\n00:08:59,812 --> 00:09:00,650\nAll right.\n\n192\n00:09:00,650 --> 00:09:03,530\nWhen you see subnet not in table,\nthat says I'm gonna\n\n193\n00:09:03,530 --> 00:09:08,380\nuse the gateway of last resort to try and\nget to that network.\n\n194\n00:09:08,380 --> 00:09:09,794\nAnd so if I do a ping to 172.16.4.1.\n\n195\n00:09:10,870 --> 00:09:13,550\nI get, well, I'm getting\ndestination unreachables right now.\n\n196\n00:09:13,550 --> 00:09:16,352\nOh, I didn't configure my other side.\n\n197\n00:09:16,352 --> 00:09:18,580\nSo [LAUGH] I haven't\nconfigured the other side.\n\n198\n00:09:18,580 --> 00:09:20,340\n>> Yeah.\n>> That was the problem the first episode.\n\n199\n00:09:20,340 --> 00:09:22,750\nSo I need to take care of that other side.\n\n200\n00:09:22,750 --> 00:09:23,250\nRight?\n\n201\n00:09:24,510 --> 00:09:25,460\nAll right, so I'm gonna jump over here.\n\n202\n00:09:25,460 --> 00:09:27,120\nThe problem is on this router.\n\n203\n00:09:27,120 --> 00:09:29,550\nWhen I look at it's routing table,\nit has no gateway of last resort.\n\n204\n00:09:29,550 --> 00:09:31,910\nIt has no way to get\nback to my first router.\n\n205\n00:09:31,910 --> 00:09:34,295\nAnd did I type in the wrong\ndefault gateway too?\n\n206\n00:09:34,295 --> 00:09:39,300\n[LAUGH] Let's check out a few things here.\n\n207\n00:09:39,300 --> 00:09:43,220\nI set my default gateway to 192.168.1.2.\n\n208\n00:09:43,220 --> 00:09:45,055\nAnd, am I even able to reach that?\n\n209\n00:09:45,055 --> 00:09:46,550\n>> [LAUGH]\n>> Yes I am, okay.\n\n210\n00:09:46,550 --> 00:09:48,930\nSo that's the other side,\nI'm able to get to it.\n\n211\n00:09:48,930 --> 00:09:51,290\nSo I just need to configure my other\nside to have their route back.\n\n212\n00:09:51,290 --> 00:09:52,510\nAnd I'll just do the same thing here.\n\n213\n00:09:52,510 --> 00:09:54,820\nIf you've already watched\nour Static Route episode,\n\n214\n00:09:54,820 --> 00:09:58,190\nyou'll remember we had to configure\nboth sides to get two-way connectivity.\n\n215\n00:09:58,190 --> 00:10:02,430\nWell I'm just gonna do the same thing\nhere, just with default routes.\n\n216\n00:10:02,430 --> 00:10:08,120\nSo I'll just punch that in and here it's\ngonna be routing the other direction.\n\n217\n00:10:08,120 --> 00:10:13,950\nSo 192.168.1.1 is the other router and\nso I'll punch that in and\n\n218\n00:10:13,950 --> 00:10:17,660\nnow when I look at my routing table here,\nI have a gateway of last resort set here.\n\n219\n00:10:17,660 --> 00:10:21,558\nSo if branch one gets any traffic for\na network that's not on the list,\n\n220\n00:10:21,558 --> 00:10:24,478\nit'll send it through that\ngateway of last resort.\n\n221\n00:10:26,208 --> 00:10:29,915\nAll right, and I was trying to ping\none 172.16.4 but it's actually .2, so\n\n222\n00:10:29,915 --> 00:10:33,880\nthat's why I was getting the unreachable,\nis there was just nothing there.\n\n223\n00:10:33,880 --> 00:10:37,292\nSo let's go back here and\nwe'll reattempt this on headquarters.\n\n224\n00:10:37,292 --> 00:10:43,070\nI'm gonna try and ping 172.16.2.1 which\nI know is not in my routing table and\n\n225\n00:10:43,070 --> 00:10:48,610\nwhen I ping it, it's gonna use the gateway\nof last resort and I get my successes.\n\n226\n00:10:48,610 --> 00:10:51,160\nIt followed that path across\nto the other line and\n\n227\n00:10:51,160 --> 00:10:53,920\nI'm able to make it to the other side.\n\n228\n00:10:53,920 --> 00:10:54,970\nRight.\nSo default routes\n\n229\n00:10:54,970 --> 00:10:59,530\nthey're just that catch all, that last\nresort to use when no other route matches.\n\n230\n00:11:00,730 --> 00:11:03,600\nNow, here, I'm using with internal\nroutes and that's pretty uncommon.\n\n231\n00:11:03,600 --> 00:11:06,570\nNormally, we're going to use it with\nsomething like Internet connectivity.\n\n232\n00:11:06,570 --> 00:11:07,274\nRight?\nSo,\n\n233\n00:11:07,274 --> 00:11:09,250\nthe default route will point to your ISP.\n\n234\n00:11:09,250 --> 00:11:11,915\nYou're saying hey,\nI know my internal networks.\n\n235\n00:11:11,915 --> 00:11:13,100\nI've got my local area network.\n\n236\n00:11:13,100 --> 00:11:13,920\nThat's stuff is fine.\n\n237\n00:11:14,930 --> 00:11:18,915\nBut if I want to get to a network out\non the Internet, go out this route.\n\n238\n00:11:18,915 --> 00:11:19,430\nOkay.\nSo\n\n239\n00:11:19,430 --> 00:11:22,350\nI wanna show you guys an example of that\nand some of the things that come into\n\n240\n00:11:22,350 --> 00:11:24,710\nplay with a dynamic route\nthat can factor into that.\n\n241\n00:11:24,710 --> 00:11:27,990\nBefore I jump into that stuff,\nlet me just mention a few other things.\n\n242\n00:11:27,990 --> 00:11:32,320\nIf you haven't watched the static route\nepisode yet, you should probably go ahead\n\n243\n00:11:32,320 --> 00:11:37,440\nand watch it cuz we cover some other\nthings in there like floating statics.\n\n244\n00:11:37,440 --> 00:11:39,500\nYou can make a floating default route,\n\n245\n00:11:39,500 --> 00:11:42,950\nwhere it's administrative distance\nis higher than your dynamic routes.\n\n246\n00:11:42,950 --> 00:11:46,830\nSo the default routes you learn from\na dynamic routing table take effect first.\n\n247\n00:11:46,830 --> 00:11:50,520\nAnd if those routes fail, then the static\ndefault jumps in and take over.\n\n248\n00:11:51,840 --> 00:11:53,620\nRight?\nOr we did IPSLAs too.\n\n249\n00:11:53,620 --> 00:11:54,910\nRight?\n>> We did.\n\n250\n00:11:54,910 --> 00:11:58,870\n>> And so we can do an SLA that says\nyou've got a default route in place that's\n\n251\n00:11:58,870 --> 00:12:00,960\npointing to your service provider.\n\n252\n00:12:00,960 --> 00:12:03,450\nAnd if the service provider fails or\n\n253\n00:12:03,450 --> 00:12:06,315\ngoes down, remove the default\nroute from your routing table.\n\n254\n00:12:06,315 --> 00:12:07,760\nRight?\nThat way we're not trying to flow\n\n255\n00:12:07,760 --> 00:12:09,680\ntraffic out a link that's no longer valid.\n\n256\n00:12:09,680 --> 00:12:12,820\nIf you've got more than one ISP.\n\n257\n00:12:12,820 --> 00:12:14,600\nThen you have more than one default route.\n\n258\n00:12:14,600 --> 00:12:16,750\nHow does it pick which\ndefault route to use?\n\n259\n00:12:16,750 --> 00:12:19,060\nWell, you can use SLAs to manage that or\n\n260\n00:12:19,060 --> 00:12:22,870\nyou can use the metrics that\nare associated with the routes.\n\n261\n00:12:22,870 --> 00:12:23,910\nRight?\nBut let\n\n262\n00:12:23,910 --> 00:12:26,200\nme show you an example of that real quick.\n\n263\n00:12:26,200 --> 00:12:30,430\nOn my headquarters router,\nI have a connection out to an ISP.\n\n264\n00:12:30,430 --> 00:12:31,790\nRight here.\n\n265\n00:12:31,790 --> 00:12:34,800\nI also have this static\nroute that I already put in,\n\n266\n00:12:34,800 --> 00:12:36,835\nthat's pointing to my internal network.\n\n267\n00:12:36,835 --> 00:12:37,630\nRight?\n\n268\n00:12:37,630 --> 00:12:43,710\nSo if I go in here and put in a new route,\nthat's a default route pointing to my ISP.\n\n269\n00:12:43,710 --> 00:12:45,570\nSo I'm saying IP route 0.0.0.0.0.0.0.0.\n\n270\n00:12:45,570 --> 00:12:50,377\nAnd then I'll point to my ISP.\n\n271\n00:12:53,256 --> 00:12:54,997\nWhich is .1, there.\n\n272\n00:12:54,997 --> 00:12:56,044\nAll right.\n\n273\n00:12:56,044 --> 00:12:59,500\nNow I've got two of these routes.\n\n274\n00:13:00,800 --> 00:13:03,237\nI've got two routes for\nthat 0.0.0.0 that are in place.\n\n275\n00:13:03,237 --> 00:13:03,737\nAll right?\n\n276\n00:13:05,270 --> 00:13:06,818\nAnd if I do a show IP route.\n\n277\n00:13:09,175 --> 00:13:12,830\nI'll see they've both made it into\nthe routing table because they're a tie.\n\n278\n00:13:12,830 --> 00:13:15,530\nWhoops.\nThat's not what I wanted.\n\n279\n00:13:15,530 --> 00:13:18,720\nThey're a tie for the best route.\n\n280\n00:13:18,720 --> 00:13:19,800\nRight?\nSo they both made it in.\n\n281\n00:13:19,800 --> 00:13:20,700\nThey're both candidates.\n\n282\n00:13:20,700 --> 00:13:22,100\nThey can both go in.\n\n283\n00:13:22,100 --> 00:13:24,960\nAnd then if you look though,\nit only picked one of them.\n\n284\n00:13:24,960 --> 00:13:28,950\nIt picked the one to the ISP,\nthe one with the higher IP address.\n\n285\n00:13:28,950 --> 00:13:32,360\nSo it picked that one to use\nbased solely on the IP address,\n\n286\n00:13:32,360 --> 00:13:33,900\ncuz everything else was a match.\n\n287\n00:13:33,900 --> 00:13:38,830\nThe administrative distance was a match,\nthe amounts of bits in the subnet mask\n\n288\n00:13:38,830 --> 00:13:41,770\nwas a match, these are all things\nthat the router uses for tiebreakers.\n\n289\n00:13:41,770 --> 00:13:45,610\nAnd so at the end of the day everything\nmatched, it just picked the higher IP.\n\n290\n00:13:45,610 --> 00:13:47,390\nAnd that's the one that made it in.\n\n291\n00:13:47,390 --> 00:13:52,230\nSo I might wanna influence which one gets\nchosen first versus the other and so\n\n292\n00:13:52,230 --> 00:13:53,940\nwe can go in and we can change that.\n\n293\n00:13:53,940 --> 00:13:56,970\nRight?\nWe can modify our metric to set that.\n\n294\n00:13:56,970 --> 00:14:01,670\nSo I might want the connection to\nthe ISP to be preferred first and so\n\n295\n00:14:01,670 --> 00:14:04,210\nI just leave it be like it is.\n\n296\n00:14:04,210 --> 00:14:07,030\nBut I go back and I take the one\nthat points to the other router.\n\n297\n00:14:07,030 --> 00:14:09,590\nAnd I might remove that one.\n\n298\n00:14:09,590 --> 00:14:11,460\nYou do have to remove it.\n\n299\n00:14:11,460 --> 00:14:13,300\nAnd then I might give it\na slightly higher metric.\n\n300\n00:14:13,300 --> 00:14:14,580\nLike a metric of two.\n\n301\n00:14:14,580 --> 00:14:16,236\nWhich is actually\nthe administrative distance.\n\n302\n00:14:16,236 --> 00:14:17,883\nRight?\nWe don't have a true metric on\n\n303\n00:14:17,883 --> 00:14:19,150\na static route like this.\n\n304\n00:14:20,350 --> 00:14:22,770\nWhen I do that [COUGH] it\nnow has a higher metric.\n\n305\n00:14:24,470 --> 00:14:29,180\nSo when I look at my routing table,\nI only have one static in there now.\n\n306\n00:14:29,180 --> 00:14:29,750\nRight?\n\n307\n00:14:29,750 --> 00:14:31,530\nAnd that's the one that shows,\nand the other one's gone.\n\n308\n00:14:31,530 --> 00:14:32,960\nIt's not gone, gone.\n\n309\n00:14:32,960 --> 00:14:34,000\nIt's floating.\n\n310\n00:14:34,000 --> 00:14:37,580\nIt's in there waiting, and if this one\nwere to come out of the routing table,\n\n311\n00:14:37,580 --> 00:14:39,880\nthe other one would appear back again.\n\n312\n00:14:39,880 --> 00:14:44,930\nIf I were to like down that interface,\nwhich is my E0/2.\n\n313\n00:14:44,930 --> 00:14:49,980\nSo if I were to down\nthat interface to my ISP,\n\n314\n00:14:49,980 --> 00:14:55,150\nthe interface goes away, and, if I look\n\n315\n00:14:55,150 --> 00:14:59,365\nat my routing table, I'll see the other\ngateway of last resort has jumped in.\n\n316\n00:14:59,365 --> 00:15:01,518\nRight?\nIt's a floating gateway of last resort.\n\n317\n00:15:03,666 --> 00:15:07,392\nAnother thing that I forgot to mention,\nI guess, is that we can point these static\n\n318\n00:15:07,392 --> 00:15:10,940\nroutes not just at an IP, but\nyou can point them at an interface.\n\n319\n00:15:10,940 --> 00:15:12,820\nIf it's a point-to-point link.\n\n320\n00:15:12,820 --> 00:15:15,110\nRight?\nIf that link is a serial line and\n\n321\n00:15:15,110 --> 00:15:16,630\nthere's only one other\nnode on the other side,\n\n322\n00:15:16,630 --> 00:15:21,670\nyou can just point at the line\ninstead of at the IP address.\n\n323\n00:15:21,670 --> 00:15:26,540\nFor example, one branch one,\nits gateway of last resort is 192.60.1.1.\n\n324\n00:15:26,540 --> 00:15:30,510\nIf I look at my interfaces,\n\n325\n00:15:32,340 --> 00:15:35,310\nI'll see that that interface\nis actually serial link.\n\n326\n00:15:35,310 --> 00:15:36,680\nA serial sub-interface.\n\n327\n00:15:36,680 --> 00:15:38,990\nRight?\nThat's what it's tied to.\n\n328\n00:15:38,990 --> 00:15:42,460\nWhat I could do,\nis I could remove that route.\n\n329\n00:15:43,510 --> 00:15:45,299\nAnd I could put it back in.\n\n330\n00:15:48,178 --> 00:15:53,344\nPointing it not to an IP, but\npointing to an interface.\n\n331\n00:15:53,344 --> 00:15:54,146\nAll right.\n\n332\n00:15:54,146 --> 00:15:56,930\nSo, it's serial 1/0.\n\n333\n00:15:56,930 --> 00:15:59,460\n.1, like that.\n\n334\n00:15:59,460 --> 00:16:03,256\nAnd now when I look at my routing table,\nthe default route is there, but\n\n335\n00:16:03,256 --> 00:16:06,450\ninstead of pointing at an IP,\nit points to an interface.\n\n336\n00:16:06,450 --> 00:16:09,820\nNow when you do this it works just fine,\nbut look at that gateway of last resort.\n\n337\n00:16:11,132 --> 00:16:14,480\nSince it's pointed to an interface it\ndoesn't have an IP to key off of, so\n\n338\n00:16:14,480 --> 00:16:15,930\nwhen you point it to\nan interface like this,\n\n339\n00:16:15,930 --> 00:16:17,960\nthe gateway of last resort\nwill show as zeros.\n\n340\n00:16:17,960 --> 00:16:18,650\nBut that's fine.\n\n341\n00:16:18,650 --> 00:16:19,690\nIt is still working.\n\n342\n00:16:19,690 --> 00:16:21,300\nIt’s still functioning the way\nthat it is suppose to.\n\n343\n00:16:21,300 --> 00:16:22,940\nIt just doesn't have an IP to list.\n\n344\n00:16:25,070 --> 00:16:28,770\nAnother thing you might bump\ninto in real life land is,\n\n345\n00:16:28,770 --> 00:16:32,380\nI've mentioned is with tie breakers that\nthe router uses to determine which route\n\n346\n00:16:32,380 --> 00:16:34,170\nto stick into the routing table.\n\n347\n00:16:34,170 --> 00:16:35,720\nIf I put the other route back in.\n\n348\n00:16:37,440 --> 00:16:37,940\nThis guy.\n\n349\n00:16:40,090 --> 00:16:44,288\nSo if I have two static routes,\nhere's one, the default route goes to\n\n350\n00:16:44,288 --> 00:16:50,360\nSerial1/0.1, and here's another one,\nthe default route goes to 192.168.1.1.\n\n351\n00:16:50,360 --> 00:16:52,137\nThey technically go to the same place.\n\n352\n00:16:52,137 --> 00:16:53,924\nRight?\nOne's going over the serial interface,\n\n353\n00:16:53,924 --> 00:16:56,040\nthe other one's going over\nthe serial interface.\n\n354\n00:16:56,040 --> 00:16:58,760\nIt's just the target\nis listed differently.\n\n355\n00:16:58,760 --> 00:17:00,410\nWhen that happens,\n\n356\n00:17:00,410 --> 00:17:04,400\none of the tie breakers is whether\nit points to an IP or an interface.\n\n357\n00:17:04,400 --> 00:17:08,530\nAnd if something points to an interface,\nit's preferred over the IP.\n\n358\n00:17:08,530 --> 00:17:11,780\nSo when we take a look\nat that routing table.\n\n359\n00:17:11,780 --> 00:17:16,700\nSee how I only got one entry in there, and\nit's showing this one as being directly\n\n360\n00:17:16,700 --> 00:17:21,950\nconnected, but it's that serial 1/0.1\nthat's taking effect and making it in.\n\n361\n00:17:21,950 --> 00:17:24,495\nI only see it once because it this\n\n362\n00:17:24,495 --> 00:17:26,895\npreferring the one with\nthe physical interface.\n\n363\n00:17:26,895 --> 00:17:30,365\nSo, even if these pointed to different\ndestinations, it would prefer the one with\n\n364\n00:17:30,365 --> 00:17:33,885\nthe physical interface as opposed\nto the one that destins to an IP.\n\n365\n00:17:33,885 --> 00:17:38,050\nIt does make the IP address populate\nin here so you are able to see that.\n\n366\n00:17:38,050 --> 00:17:40,300\nSo interesting little tidbit there.\n\n367\n00:17:40,300 --> 00:17:42,870\nBut yeah, you won't see the multiple\ndefault gateways there.\n\n368\n00:17:44,780 --> 00:17:47,060\nAll right, so,\nlet me just pull that back up again.\n\n369\n00:17:47,060 --> 00:17:48,850\nJust so we can see what I did.\n\n370\n00:17:48,850 --> 00:17:53,010\nSo I just did the IP\nroute 0.0.0.0 0.0.0.0 and\n\n371\n00:17:53,010 --> 00:17:55,260\nthen follow it with an interface\nname instead of an IP.\n\n372\n00:17:55,260 --> 00:17:57,680\nAll right, and like I said earlier,\n\n373\n00:17:57,680 --> 00:18:02,190\nI could follow this up with\na track command, the track in SLA.\n\n374\n00:18:02,190 --> 00:18:04,990\nMonitor there too and\nmake sure we're using the right gateway,\n\n375\n00:18:04,990 --> 00:18:07,450\nthe gateway that is up and\nfunctional for us.\n\n376\n00:18:07,450 --> 00:18:12,380\nAlright so pretty cool stuff there as far\nas basic default route functionality.\n\n377\n00:18:14,120 --> 00:18:16,770\nBut there is one more thing that we need\nto talk about that is pretty important in\n\n378\n00:18:16,770 --> 00:18:19,730\nthis show especially with the later\nepisodes we're gonna get to.\n\n379\n00:18:19,730 --> 00:18:24,040\nWhich is default routes within\na dynamic routing protocol.\n\n380\n00:18:24,040 --> 00:18:28,430\nSo, I wanna show you how these are handled\nin routing protocols like EIGRP and\n\n381\n00:18:28,430 --> 00:18:32,850\nOSPF, but let's stop and take a breather\nreal quick, and when we get back,\n\n382\n00:18:32,850 --> 00:18:34,920\nwe'll dive into that and\nget a chance to see it.\n\n383\n00:18:34,920 --> 00:18:36,380\nSo, stay tuned.\n\n384\n00:18:36,380 --> 00:18:39,414\nWe'll be back in a few.\n\n385\n00:18:39,414 --> 00:18:46,541\n[SOUND] All right, welcome back everybody.\n\n386\n00:18:46,541 --> 00:18:49,680\nSo what we're gonna cover in this segment\nis actually something pretty neat.\n\n387\n00:18:49,680 --> 00:18:52,210\nSomething that a lot of people\ndon't realize you can do, and\n\n388\n00:18:52,210 --> 00:18:58,600\nthat is you can learn your gateway of last\nresort from a dynamic writing protocol.\n\n389\n00:18:58,600 --> 00:19:03,010\nIn other words, your default route\ndoesn't have to be static at all.\n\n390\n00:19:03,010 --> 00:19:08,460\nWe can learn it through EIGRP or OSPF or\nsome other protocol and use that.\n\n391\n00:19:08,460 --> 00:19:09,700\nAnd that's really powerful,\n\n392\n00:19:09,700 --> 00:19:14,410\nbecause your dynamic routing protocols\nhave metrics, unlike a static.\n\n393\n00:19:14,410 --> 00:19:17,280\nSo if you have more than one ISP,\nmore than one way in and\n\n394\n00:19:17,280 --> 00:19:19,950\none way out,\nyour routing protocol can look at it and\n\n395\n00:19:19,950 --> 00:19:24,450\nsay well, this gateway is only two\nhops away on a 100 megabit network.\n\n396\n00:19:24,450 --> 00:19:27,760\nThis other gateway is four hops\naway on a 10 megabit network.\n\n397\n00:19:27,760 --> 00:19:31,120\nI'm gonna go the 100 megabit one and\nyou'll use the best gateway.\n\n398\n00:19:31,120 --> 00:19:34,080\nAnd if one fails, you'll automatically\nflip over to the other one because\n\n399\n00:19:34,080 --> 00:19:35,620\nthe routing protocol re-negotiates it.\n\n400\n00:19:35,620 --> 00:19:38,250\nSo there's a lot of benefits\n\n401\n00:19:38,250 --> 00:19:41,900\nto learning your default route\nvia a dynamic routing protocol.\n\n402\n00:19:41,900 --> 00:19:42,720\nAll right?\n\n403\n00:19:42,720 --> 00:19:48,530\nUnfortunately, the way that you set\nthis up is different for every protocol.\n\n404\n00:19:48,530 --> 00:19:50,220\nThe two that I want to show\nyou here in this episode\n\n405\n00:19:50,220 --> 00:19:54,280\nare the two that you'll see on\nthe exam and that's OSPF and EIGRP.\n\n406\n00:19:54,280 --> 00:19:57,150\nSo I want to show you the process\nof getting those in there and\n\n407\n00:19:57,150 --> 00:20:01,770\nthe real problem is that somewhere,\nat some point, you have to have at least\n\n408\n00:20:01,770 --> 00:20:05,780\none router that knows the default\nroute and it educates everybody else.\n\n409\n00:20:05,780 --> 00:20:10,040\nSo there will be a static route somewhere,\nall right.\n\n410\n00:20:10,040 --> 00:20:13,120\nAnd so, let me show you an example\nhere that we'll set up in this show.\n\n411\n00:20:13,120 --> 00:20:17,290\nSo I've got branch two and\nbranch three, all right.\n\n412\n00:20:17,290 --> 00:20:20,010\nBranch two has a network,\nbranch three has a network,\n\n413\n00:20:20,010 --> 00:20:24,470\nand they're connected via this\n192.168.0 network, all right.\n\n414\n00:20:24,470 --> 00:20:30,850\nNow branch two actually has a connection\nto a ISP, to an Internet service provider.\n\n415\n00:20:30,850 --> 00:20:32,960\nSo let's add that in\nhere on my little chart.\n\n416\n00:20:34,070 --> 00:20:36,270\nAnd I've already forgotten\nwhat network that is, but\n\n417\n00:20:36,270 --> 00:20:37,415\nI'm just gonna write on here Internet.\n\n418\n00:20:37,415 --> 00:20:40,290\n>> [LAUGH]\n>> So branch two has a connection to\n\n419\n00:20:40,290 --> 00:20:47,130\nthe Internet and\nit's able to get out and do stuff.\n\n420\n00:20:47,130 --> 00:20:51,980\nNow, on branch two, because it's\nthe one that connects to that network,\n\n421\n00:20:51,980 --> 00:20:54,250\nI'm gonna have to put\na static route on it.\n\n422\n00:20:54,250 --> 00:20:55,930\nSo I'll have to put\na static route on there so\n\n423\n00:20:55,930 --> 00:20:58,445\nthat branch two knows how\nto get out to the Internet.\n\n424\n00:20:58,445 --> 00:21:01,650\nBut once it's there, branch two can\n\n425\n00:21:01,650 --> 00:21:06,930\nadvertise that default route into EIGRP,\nor OSPF, or whatever protocols I have.\n\n426\n00:21:06,930 --> 00:21:11,200\nAnd all the other routers in\nmy land can learn about it.\n\n427\n00:21:11,200 --> 00:21:14,140\nCan learn and say oh, branch two is\na way to get out of this network.\n\n428\n00:21:14,140 --> 00:21:15,280\nI can go that route.\n\n429\n00:21:15,280 --> 00:21:18,680\nAnd in the future I can add more routers\nwith connections to other ISPs and\n\n430\n00:21:18,680 --> 00:21:19,630\nadvertise those in.\n\n431\n00:21:19,630 --> 00:21:22,100\nAnd we'll learn and figure that out.\n\n432\n00:21:22,100 --> 00:21:26,380\nSo I'm going to start my adventure\non branch two with setting up\n\n433\n00:21:26,380 --> 00:21:28,110\nthat default route for\nthe internet connection.\n\n434\n00:21:28,110 --> 00:21:29,850\nSo let me jump over to branch two.\n\n435\n00:21:29,850 --> 00:21:33,530\nAnd I'll just do a show IP route.\n\n436\n00:21:35,220 --> 00:21:36,910\nAnd if I look at my routing table,\n\n437\n00:21:36,910 --> 00:21:39,090\nI can see all these different\nconnections that I've got, right.\n\n438\n00:21:39,090 --> 00:21:41,387\nSo I've got the 172.16.4.\n\n439\n00:21:41,387 --> 00:21:45,170\nWhy do I have, I got a couple\nof different networks in here.\n\n440\n00:21:45,170 --> 00:21:47,940\nOh, I've already got my dynamic\nrouting protocols running, I forgot.\n\n441\n00:21:47,940 --> 00:21:52,310\nSo I've got EIGRP running here, I'm\nlearning about some other networks, right.\n\n442\n00:21:52,310 --> 00:21:55,470\nBut let me just change\nthis to connected so\n\n443\n00:21:55,470 --> 00:21:57,590\nI get a little bit less on my screen here.\n\n444\n00:21:57,590 --> 00:22:01,230\nSo I've got the 172.16.4 network\nI'm directly plugged into.\n\n445\n00:22:01,230 --> 00:22:03,848\nThe 192.168.0 network I'm\ndirectly plugged into.\n\n446\n00:22:03,848 --> 00:22:10,663\nAnd the 192.168.1 network and\nI thought I had an ISP, where's my ISP?\n\n447\n00:22:10,663 --> 00:22:13,299\nLet me check branch three and\nsee if it's the one with the ISP.\n\n448\n00:22:15,316 --> 00:22:18,374\nAnd it is,\nI must have shut the interface down.\n\n449\n00:22:18,374 --> 00:22:18,977\n>> Yeah, I think you did.\n\n450\n00:22:18,977 --> 00:22:19,709\n>> All right.\n\n451\n00:22:19,709 --> 00:22:24,005\nSo we kind of need\na connection to an ISP and,\n\n452\n00:22:24,005 --> 00:22:27,615\nyou know, I'm just gonna fake one.\n\n453\n00:22:27,615 --> 00:22:31,216\nSo I'll get into interface E0/2.\n\n454\n00:22:31,216 --> 00:22:33,870\nAnd lets say that this is\nthe interface pointing to my ISP.\n\n455\n00:22:33,870 --> 00:22:41,344\nSo, I'll say that it's IP\naddress is 209.251.133.176.\n\n456\n00:22:42,780 --> 00:22:45,860\nI'm just making up an IP there,\nI think that's one of our IPs.\n\n457\n00:22:45,860 --> 00:22:47,775\nIf it's one of your IPs, I do apologize.\n\n458\n00:22:47,775 --> 00:22:50,810\n>> [LAUGH]\n>> I'm pretty sure that's one of ours.\n\n459\n00:22:50,810 --> 00:22:53,944\nSo I'll just give it an IP address and\nmask.\n\n460\n00:22:58,055 --> 00:22:58,580\nAm I in 240?\n\n461\n00:22:58,580 --> 00:23:01,210\nNo, see it's gonna make me, you know what?\n\n462\n00:23:01,210 --> 00:23:01,751\nScrew it go down.\n\n463\n00:23:01,751 --> 00:23:04,066\n>> [LAUGH]\n>> It's a fake address anyway,\n\n464\n00:23:04,066 --> 00:23:06,220\nI'll pick whatever subnet I want.\n\n465\n00:23:06,220 --> 00:23:08,960\nSo I've got this connection to an ISP.\n\n466\n00:23:08,960 --> 00:23:09,960\nRight?\nAnd\n\n467\n00:23:09,960 --> 00:23:12,370\nI mentioned there has to be\na static route somewhere.\n\n468\n00:23:12,370 --> 00:23:13,770\nThat's kinda where this starts.\n\n469\n00:23:13,770 --> 00:23:18,800\nSo I'm going to say IP route 0.0.0.0 and\nI'm going to point that out to my\n\n470\n00:23:18,800 --> 00:23:22,130\nISP and\nwhatever their IP address happens to be.\n\n471\n00:23:22,130 --> 00:23:24,540\nSo maybe they're 175, right.\n\n472\n00:23:24,540 --> 00:23:27,150\n>> Don, I think I spotted why I gave\nyou a bad subnet mask there is because\n\n473\n00:23:27,150 --> 00:23:28,502\nyou actually did pick a network ID.\n\n474\n00:23:28,502 --> 00:23:29,569\n[LAUGH]\n>> I did.\n\n475\n00:23:29,569 --> 00:23:32,323\nI picked it right on the- [CROSSTALK]\n>> I just looked at it, I was like, oh.\n\n476\n00:23:32,323 --> 00:23:32,983\nThere it is.\n\n477\n00:23:32,983 --> 00:23:37,060\n>> Well, that's what I get so, you are far\nbetter at binary than I am, Ronnie.\n\n478\n00:23:37,060 --> 00:23:39,610\nAll right, so now,\nif I look here on branch two,\n\n479\n00:23:39,610 --> 00:23:44,780\nand I look at my routing table,\nI've got this route that I just put in and\n\n480\n00:23:44,780 --> 00:23:48,270\nif I turn the interface on,\nit'll actually show up.\n\n481\n00:23:49,655 --> 00:23:50,715\nI love the interface shutdown.\n\n482\n00:23:50,715 --> 00:23:52,675\nThat causes a little bit of a problem.\n\n483\n00:23:52,675 --> 00:23:54,015\nThere we go.\n\n484\n00:23:54,015 --> 00:23:57,225\nSo now if I look at it\nI'm a little more normal.\n\n485\n00:23:57,225 --> 00:23:59,160\nAs normal as I'm going to get today,\nI guess.\n\n486\n00:23:59,160 --> 00:24:02,143\nSo here's my connection\nto the ISP on E0/2.\n\n487\n00:24:02,143 --> 00:24:05,477\nI've got that static route that says\nif I want to get to anybody not listed\n\n488\n00:24:05,477 --> 00:24:08,000\nin my routing table, go out to that IP.\n\n489\n00:24:08,000 --> 00:24:11,210\nThat's my default gateway,\nmy gateway of last resort.\n\n490\n00:24:11,210 --> 00:24:15,110\nNow this router is running EIGRP and OSPF.\n\n491\n00:24:16,680 --> 00:24:21,390\nAnd branch three is running EIGRP and\nOSPF also, and\n\n492\n00:24:21,390 --> 00:24:25,840\nif I look at its routing table, I can see\nwhere I'm learning some EIGRP routes.\n\n493\n00:24:25,840 --> 00:24:29,970\nEIGRP has the better metric, so\nI don't see any OSPF routes right now.\n\n494\n00:24:30,970 --> 00:24:32,580\nSo, you know,\nit's just kind of showing up.\n\n495\n00:24:32,580 --> 00:24:36,170\nIt's there but\nno gateway of last resort all right.\n\n496\n00:24:36,170 --> 00:24:37,420\nThe reason is,\n\n497\n00:24:37,420 --> 00:24:42,490\nwhen you run dynamic routing protocols,\nthey will talk to other routers and\n\n498\n00:24:42,490 --> 00:24:46,580\nexchange your directly connected routes\nif you've chosen to advertise them.\n\n499\n00:24:46,580 --> 00:24:49,030\nAnd the other routes that you've learned.\n\n500\n00:24:49,030 --> 00:24:51,960\nIt will not advertise routes\nlearned through other methods,\n\n501\n00:24:51,960 --> 00:24:54,450\nlike statics and other routing protocols.\n\n502\n00:24:54,450 --> 00:24:58,170\nFor that you have to do what's\ncalled route redistribution.\n\n503\n00:24:58,170 --> 00:25:01,870\nRedistribution is where you take\na route learned from one source,\n\n504\n00:25:01,870 --> 00:25:06,160\none routing protocol, and advertise\nit into another routing protocol.\n\n505\n00:25:06,160 --> 00:25:09,340\nYou're basically sharing routes\nbetween disparate systems.\n\n506\n00:25:09,340 --> 00:25:11,270\nAnd it's a sensitive thing,\nbecause you can make mistakes and\n\n507\n00:25:11,270 --> 00:25:14,270\nyou can completely screw your routing\ntable if you're not careful with it.\n\n508\n00:25:14,270 --> 00:25:17,940\nBut when it's something like this, a\ndefault route, it's actually pretty easy.\n\n509\n00:25:17,940 --> 00:25:19,570\nThe process is just a little different.\n\n510\n00:25:19,570 --> 00:25:20,680\nWe'll start with the easy one.\n\n511\n00:25:20,680 --> 00:25:21,900\nThe easy one is OSPF.\n\n512\n00:25:21,900 --> 00:25:23,870\nOSPF makes this super easy.\n\n513\n00:25:23,870 --> 00:25:27,310\nIf I jump back over to branch two,\nand you know,\n\n514\n00:25:27,310 --> 00:25:30,180\nI might just cut off EIGRP altogether,\nright.\n\n515\n00:25:30,180 --> 00:25:34,180\nSo if I do a no router eigrp 1.\n\n516\n00:25:34,180 --> 00:25:35,780\nI guess I could have\ndone a passive interface,\n\n517\n00:25:35,780 --> 00:25:38,410\nbut we'll just kill it altogether.\n\n518\n00:25:38,410 --> 00:25:40,500\nSo I'm gonna look at my IP protocols, and\n\n519\n00:25:40,500 --> 00:25:42,840\nI'll see that I'm running OSPF and\nthat's it.\n\n520\n00:25:42,840 --> 00:25:47,400\nIf I jump over to branch three, my routing\ntable should be adjusting appropriately.\n\n521\n00:25:47,400 --> 00:25:50,820\nAnd yeah, now I've got OSPF routes right\nthere in my routing table, all right.\n\n522\n00:25:50,820 --> 00:25:51,880\nStill no gateway of last resort.\n\n523\n00:25:53,310 --> 00:25:56,840\nWhat I need to do is,\nI need to tell branch two, this\n\n524\n00:25:56,840 --> 00:26:00,680\ndefault gateway that you've got, advertise\nit out so other people can learn about it.\n\n525\n00:26:00,680 --> 00:26:04,270\nLet branch three learn about this default\ngateway via your routing protocol.\n\n526\n00:26:06,030 --> 00:26:10,361\nSo back here on branch two,\nI need to get into OSPF.\n\n527\n00:26:10,361 --> 00:26:12,056\nWhich I'm gonna spell wrong [LAUGH].\n\n528\n00:26:12,056 --> 00:26:13,710\n>> [LAUGH]\n>> It's sad when you spell something that\n\n529\n00:26:13,710 --> 00:26:14,730\nis an acronym.\n\n530\n00:26:14,730 --> 00:26:18,760\nBut I'm gonna go into my OSPF and\nI'm gonna add this default route.\n\n531\n00:26:18,760 --> 00:26:21,930\nI'm gonna add it in here and tell it to\nadvertise that out to everybody else.\n\n532\n00:26:21,930 --> 00:26:24,200\nAnd so\nthe way we do that is by saying default.\n\n533\n00:26:24,200 --> 00:26:26,200\nYou get into the routing protocol first,\nso\n\n534\n00:26:26,200 --> 00:26:29,370\nI did router OSPF 1 because 1 is\nthe process number that I used.\n\n535\n00:26:29,370 --> 00:26:37,842\nAnd I'm gonna say\ndefault-information originate.\n\n536\n00:26:37,842 --> 00:26:40,620\nAnd if I stop right there,\n\n537\n00:26:40,620 --> 00:26:43,170\nIt's actually not gonna work\nquite the way that I want it.\n\n538\n00:26:43,170 --> 00:26:44,920\nWhen you originate, what you're saying is,\n\n539\n00:26:44,920 --> 00:26:49,420\ntake this default information that you've\ngot, and show yourself as the origin.\n\n540\n00:26:49,420 --> 00:26:52,630\nSo everybody else is gonna learn about it,\nand it's gonna come in with this empty\n\n541\n00:26:52,630 --> 00:26:56,810\nmetric, so it's usually a good idea\nto go ahead and assign a metric.\n\n542\n00:26:56,810 --> 00:27:00,930\nIf you assign a metric now,\nas you add other gateways, you can assign\n\n543\n00:27:00,930 --> 00:27:05,190\nmetrics to them too, to make it where\nyou influence who is gonna get chosen.\n\n544\n00:27:05,190 --> 00:27:08,580\nAnd you can prefer one over the other so\nI'm going to say like metric 5, right.\n\n545\n00:27:08,580 --> 00:27:11,730\nA static route has no metric.\n\n546\n00:27:11,730 --> 00:27:14,510\nOSPF uses bandwidth to calculate a metric.\n\n547\n00:27:14,510 --> 00:27:18,010\nIf the static route doesn't have that,\nit can't calculate a valid metric, so\n\n548\n00:27:18,010 --> 00:27:19,260\nI'm providing it one.\n\n549\n00:27:19,260 --> 00:27:21,940\nThat's really what this\nprocess is all about.\n\n550\n00:27:21,940 --> 00:27:24,628\nAnd I could sit down and\ndo the math, and say, all right,\n\n551\n00:27:24,628 --> 00:27:28,268\nwell my Internet connection is 40 megabit,\nand if I take 100 megabit and\n\n552\n00:27:28,268 --> 00:27:31,350\ndivide it by 40, that's the true\nmetric that OSPF should use.\n\n553\n00:27:31,350 --> 00:27:35,140\nSo I could put that in if I wanted to be\ntruthful about the bandwidth of that link.\n\n554\n00:27:35,140 --> 00:27:37,140\nIn my case, I'm just making up files.\n\n555\n00:27:37,140 --> 00:27:39,970\nSo we'll learn more about\nthat in the OSPF episodes.\n\n556\n00:27:39,970 --> 00:27:41,990\nBut here I'll just say metric of 5.\n\n557\n00:27:41,990 --> 00:27:46,340\nNow there is another option here which,\nis the always option.\n\n558\n00:27:46,340 --> 00:27:51,120\nIf you say always, it doesn't matter if\nyou have a static default route or not.\n\n559\n00:27:51,120 --> 00:27:55,400\nYour router will always say hey, I'm a\ndefault route, you should come through me,\n\n560\n00:27:55,400 --> 00:27:58,810\nI can get you wherever you need to go,\nwhether it's valid or not, okay.\n\n561\n00:27:58,810 --> 00:28:00,620\nThere are times where you wanna use that.\n\n562\n00:28:00,620 --> 00:28:03,120\nWe'll learn more about\nOSPF stub areas later on,\n\n563\n00:28:03,120 --> 00:28:05,890\nand that becomes really\nhandy in stub areas.\n\n564\n00:28:05,890 --> 00:28:08,190\nBut in this case, I don't wanna do that.\n\n565\n00:28:08,190 --> 00:28:08,950\nI don't want it to force,\n\n566\n00:28:08,950 --> 00:28:11,850\nI want it to happen only if I\nhave a valid default route.\n\n567\n00:28:11,850 --> 00:28:14,590\nSo when I press Enter, what I'm saying is,\n\n568\n00:28:14,590 --> 00:28:19,730\nas long as there's a route on my\nrouting table to the 0.0.0.0 network,\n\n569\n00:28:19,730 --> 00:28:22,900\nthen advertise myself out\nas being a default route.\n\n570\n00:28:23,900 --> 00:28:26,872\nSo default-information originate, and\n\n571\n00:28:26,872 --> 00:28:30,510\nI could have stopped there but\nI went with metric 5.\n\n572\n00:28:31,550 --> 00:28:34,060\nNow I'm advertising that into OSPF.\n\n573\n00:28:34,060 --> 00:28:36,920\nAnd branch three is gonna learn that.\n\n574\n00:28:36,920 --> 00:28:40,150\nBranch three, right now,\nhas no gateway of last resort.\n\n575\n00:28:40,150 --> 00:28:44,700\nAnd if I do a show IP route, now I can\nsee I do have a gateway of last resort.\n\n576\n00:28:44,700 --> 00:28:47,160\nWhich is branch two, the other branch.\n\n577\n00:28:47,160 --> 00:28:52,730\nAnd if I look I can see right here,\nI learned an OSPF route to 0.0.0.0.\n\n578\n00:28:52,730 --> 00:28:57,490\nIt's got an admin distance of 110,\ncuz it's OSPF, and a metric of 5, right.\n\n579\n00:28:57,490 --> 00:29:01,880\nThere's that metric that I punched in,\nand I can get to it via OSPF.\n\n580\n00:29:01,880 --> 00:29:05,110\nSo if I have five more routers behind\nhere, they can all learn that default\n\n581\n00:29:05,110 --> 00:29:08,430\ngateway, and they can use it\nto get out to that network.\n\n582\n00:29:08,430 --> 00:29:09,240\nAnd if I were to try and\n\n583\n00:29:09,240 --> 00:29:13,640\nping something not in my list,\nI should be able to get to it, right.\n\n584\n00:29:14,730 --> 00:29:17,380\nAnd you'll see I even learned that\nISP network down here, I should\n\n585\n00:29:17,380 --> 00:29:20,230\nprobably trim that a bit,but we'll\nworry about that in the OSP episodes.\n\n586\n00:29:20,230 --> 00:29:23,580\nBut if I try and ping out to one of those\nnetworks like out there on the Internet,\n\n587\n00:29:23,580 --> 00:29:27,210\nI should be able to get to it and\nthat's the route that it's gonna go.\n\n588\n00:29:27,210 --> 00:29:29,820\nIf I ping my other router,\nit's gonna get there.\n\n589\n00:29:29,820 --> 00:29:33,430\nIf I do a traceroute for\nsome Internet source,\n\n590\n00:29:33,430 --> 00:29:36,432\nwhatever is gonna go through there,\nI've learned that default route via OSPF.\n\n591\n00:29:36,432 --> 00:29:40,161\nAll right, OSPF was pretty easy,\nright, it was one command.\n\n592\n00:29:40,161 --> 00:29:44,293\nYou go to the router with a default route,\nyou get into the routing process, and\n\n593\n00:29:44,293 --> 00:29:46,283\nyou run that one command right there.\n\n594\n00:29:46,283 --> 00:29:51,840\nDefault-information originate,\nand then a metric, all right.\n\n595\n00:29:51,840 --> 00:29:54,040\nOther routing protocols\nare a little bit harder.\n\n596\n00:29:54,040 --> 00:29:58,600\nRouting protocols like EIGRP require us to\nuse the actual redistribution commands.\n\n597\n00:29:58,600 --> 00:30:01,050\nAnd that's fine, you should learn\nthe redistribution commands anyway,\n\n598\n00:30:01,050 --> 00:30:04,580\nbecause you use them any time\nyou redistribute a non default.\n\n599\n00:30:04,580 --> 00:30:06,678\nSo we're gonna make use of that in OSPF.\n\n600\n00:30:06,678 --> 00:30:11,230\nNow first off, let me get,\nI mean in EIRGP, let me get rid of OSPF.\n\n601\n00:30:11,230 --> 00:30:15,449\nSo I'm just gonna get rid\nof my OSPF instance and\n\n602\n00:30:15,449 --> 00:30:20,735\nturn on EIGRP, and\nI'm just gonna advertise everything.\n\n603\n00:30:24,360 --> 00:30:26,830\nAll right,\nlet me give that a second to settle down.\n\n604\n00:30:26,830 --> 00:30:31,380\nSo if I look at my routing table,\nI can see that I'm running EIGRP now.\n\n605\n00:30:32,770 --> 00:30:36,940\nI've got a gateway of last resort,\nI'm advertising all my various networks.\n\n606\n00:30:36,940 --> 00:30:41,490\nAnd over on branch three, since I just\ndumped OSPF, when I look at it's routing\n\n607\n00:30:41,490 --> 00:30:45,030\ntable, I can see its gateway\nof last resort just went away.\n\n608\n00:30:45,030 --> 00:30:48,810\nBranch three was learning its gateway\nof last resort from branch two.\n\n609\n00:30:48,810 --> 00:30:51,420\nAnd it was learning it via OSPF,\nwhich is now off.\n\n610\n00:30:51,420 --> 00:30:51,940\nAnd so that's gone.\n\n611\n00:30:53,430 --> 00:30:55,840\nSo now I wanna learn that\ndefault route via EIGRP.\n\n612\n00:30:57,800 --> 00:30:59,570\nThere's my OSPF adjacency going down.\n\n613\n00:30:59,570 --> 00:31:01,350\nI guess I could turn it off over here too.\n\n614\n00:31:01,350 --> 00:31:04,085\nJust ditch that.\n\n615\n00:31:04,085 --> 00:31:09,160\nAll right, so back over here,\nit's kind of the same process for OSPF.\n\n616\n00:31:09,160 --> 00:31:12,760\nI need to get into EIGRP, and tell it\nto redistribute that default route.\n\n617\n00:31:12,760 --> 00:31:16,120\nSo the process here is a couple of steps.\n\n618\n00:31:16,120 --> 00:31:19,848\nFirst I need to have the default route,\nright, which I already do, or\n\n619\n00:31:19,848 --> 00:31:21,381\nat least I assume I still do.\n\n620\n00:31:21,381 --> 00:31:22,668\nLet me just check it, make sure.\n\n621\n00:31:22,668 --> 00:31:25,456\nOops, if I spell that right,\nthat command will work better.\n\n622\n00:31:25,456 --> 00:31:29,653\nThere, in my config,\nI can see I've got IP route 0.0.0.0\n\n623\n00:31:29,653 --> 00:31:33,718\n0.0.0.0 going to 209.251.133.175.\n\n624\n00:31:33,718 --> 00:31:36,800\nSo I've already got that\ndefault route created.\n\n625\n00:31:36,800 --> 00:31:39,420\nI just need to tel EIGRP\nto do something with it.\n\n626\n00:31:39,420 --> 00:31:44,325\nSo I'll go into router EIGRP followed\nby my AS number, which mine is 1.\n\n627\n00:31:45,430 --> 00:31:47,800\nAnd now I'm gonna tell it\nto redistribute that route.\n\n628\n00:31:47,800 --> 00:31:50,590\nAnd so you say, redistribute static.\n\n629\n00:31:51,980 --> 00:31:56,160\nAnd that's says, look for\nany static routes on my system and\n\n630\n00:31:56,160 --> 00:31:57,840\nbring them into EIGRP.\n\n631\n00:31:57,840 --> 00:32:01,759\nSo if there's static route, bring it in,\nand tell other people about it.\n\n632\n00:32:01,759 --> 00:32:04,690\nNow there's a little quirk with\nEIGRP that has to do with metrics.\n\n633\n00:32:05,980 --> 00:32:09,033\nIf I stop right here,\nit's probably not gonna work, right.\n\n634\n00:32:09,033 --> 00:32:10,172\nThe routes probably won't show up, and\n\n635\n00:32:10,172 --> 00:32:12,050\nyou'll be scratching your head\nsaying what the heck's going on,\n\n636\n00:32:12,050 --> 00:32:12,800\nwhy isn't this working?\n\n637\n00:32:13,940 --> 00:32:20,610\nIn EIGRP on most IOS's, you have to define\nthe metric in order for this to work.\n\n638\n00:32:20,610 --> 00:32:23,610\nIt's not done as part of the redistribute\ncommand it's actually done via separate\n\n639\n00:32:23,610 --> 00:32:26,630\ncommand, you need to set a default metric\nso I'm gonna go ahead and do that.\n\n640\n00:32:26,630 --> 00:32:31,450\nNow EIJRP actually has several\ndifferent metrics that it uses.\n\n641\n00:32:31,450 --> 00:32:36,460\nIt does bandwidth, load,\nreliability, MTU, and\n\n642\n00:32:36,460 --> 00:32:39,120\nwho am I leaving off, Ronnie?\n\n643\n00:32:41,070 --> 00:32:46,803\nBandwidth, load, reliability,\nMTU, and something.\n\n644\n00:32:46,803 --> 00:32:48,783\n>> [LAUGH]\n>> [LAUGH].\n\n645\n00:32:48,783 --> 00:32:49,504\n>> Biometrics.\nI can't seem to\n\n646\n00:32:49,504 --> 00:32:50,590\nremember the fifth off hand.\n\n647\n00:32:50,590 --> 00:32:52,470\nBut we need to define what\nthose metrics are, and\n\n648\n00:32:52,470 --> 00:32:57,610\nyou can just use the default-metric\ncommand, and when you do a question mark,\n\n649\n00:32:57,610 --> 00:33:00,520\nit actually walks you through each\nof the ones that you need, right?\n\n650\n00:33:00,520 --> 00:33:03,790\nSo delay, thank you,\nRichard in the chat room jumping in.\n\n651\n00:33:05,600 --> 00:33:08,530\nSo basically we need to provide\nwhat each of these values are for\n\n652\n00:33:08,530 --> 00:33:09,720\nthe routes that come in.\n\n653\n00:33:09,720 --> 00:33:12,520\nThe static routes have no metric.\n\n654\n00:33:12,520 --> 00:33:15,850\nSo when it redistributes them, how does it\nbring it in if it doesn't have a metric?\n\n655\n00:33:15,850 --> 00:33:19,190\nThat's why we have to give it\na default metric to put in there.\n\n656\n00:33:19,190 --> 00:33:20,640\nSo, we'll go through and specify that.\n\n657\n00:33:20,640 --> 00:33:24,020\nAnd I'll just set it to like\nten megabit for the bandwidth.\n\n658\n00:33:24,020 --> 00:33:26,330\nRight, and\nthe next thing it wants is that delay.\n\n659\n00:33:26,330 --> 00:33:27,250\nI'll just say delay of one.\n\n660\n00:33:27,250 --> 00:33:30,450\nAnd then it wants the reliability.\n\n661\n00:33:30,450 --> 00:33:33,200\nWith reliability 255 is\n100 percent reliable.\n\n662\n00:33:33,200 --> 00:33:33,970\nIt tells me right there.\n\n663\n00:33:33,970 --> 00:33:35,510\nSo I'll just do 255.\n\n664\n00:33:35,510 --> 00:33:39,070\nThen we've got the load,\nright, and I'll just say one.\n\n665\n00:33:39,070 --> 00:33:42,280\nOne means the line is basically empty.\n\n666\n00:33:42,280 --> 00:33:45,130\n255 means you're at 100%\nbandwidth consumption.\n\n667\n00:33:45,130 --> 00:33:45,920\nThere's no more room.\n\n668\n00:33:47,060 --> 00:33:50,350\nAnd then the last one is MTU,\nwhich doesn't actually get used, so\n\n669\n00:33:50,350 --> 00:33:52,420\nyou can put whatever the heck\nyou want in here, but\n\n670\n00:33:52,420 --> 00:33:56,150\n1500 is a standard MTU size,\nso I'll punch that in.\n\n671\n00:33:56,150 --> 00:34:02,760\nSo there's my five metrics that'll be used\nby default when we redistribute a route,\n\n672\n00:34:02,760 --> 00:34:06,580\nso now, the static route comes in,\nhas a default set of metrics.\n\n673\n00:34:06,580 --> 00:34:08,250\nI start advertizing it out.\n\n674\n00:34:08,250 --> 00:34:09,180\nNow it works.\n\n675\n00:34:09,180 --> 00:34:11,620\nSo there's two commands that\nI had to do for that, right.\n\n676\n00:34:11,620 --> 00:34:13,640\nThe first one was redistribute static.\n\n677\n00:34:13,640 --> 00:34:15,950\nThat brings the static routes into EIGRP.\n\n678\n00:34:15,950 --> 00:34:20,600\nAnd the second one was to set that\ndefault metric to get that in place so\n\n679\n00:34:20,600 --> 00:34:23,180\nit would know what metric to\nuse as it calculated it out.\n\n680\n00:34:24,920 --> 00:34:28,109\nAnd in the background, branch three\nshould have already learned that.\n\n681\n00:34:29,880 --> 00:34:34,220\nSo if I do a show IP route, I can see\nthat I do have a gateway of last resort.\n\n682\n00:34:35,220 --> 00:34:38,460\nIt's showing up as EIGRP external.\n\n683\n00:34:38,460 --> 00:34:39,960\nRight?\nIt came from an external source,\n\n684\n00:34:39,960 --> 00:34:42,380\nin this case,\na static route being brought in.\n\n685\n00:34:42,380 --> 00:34:45,070\nWhenever you redistribute,\nit'll show up as external.\n\n686\n00:34:45,070 --> 00:34:46,770\nAnd there's my default\nroute via 192.168.0.3.\n\n687\n00:34:46,770 --> 00:34:49,820\nI'm learning it via my\ndynamic routing protocol.\n\n688\n00:34:49,820 --> 00:34:50,360\nAll right.\n\n689\n00:34:52,760 --> 00:34:57,400\nIf you're using a dynamic protocol\nyou should do learned default routes.\n\n690\n00:34:57,400 --> 00:34:58,940\nThat's the way to do it.\n\n691\n00:34:58,940 --> 00:35:02,910\nUse your dynamic routing protocol for\neverything if possible, right.\n\n692\n00:35:02,910 --> 00:35:06,970\nYou will avoid static routes\nwherever you can because.\n\n693\n00:35:06,970 --> 00:35:07,640\nThey're not dynamic.\n\n694\n00:35:07,640 --> 00:35:08,300\nThey don't change.\n\n695\n00:35:08,300 --> 00:35:09,440\nThey don't react to systems.\n\n696\n00:35:09,440 --> 00:35:12,240\nThey rely on you to modify them.\n\n697\n00:35:12,240 --> 00:35:14,660\nIf we learn them, they tend to themselves.\n\n698\n00:35:14,660 --> 00:35:17,060\nIt's pretty awesome.\n\n699\n00:35:17,060 --> 00:35:18,980\nDifferent processors, there's RIP.\n\n700\n00:35:18,980 --> 00:35:20,920\nYou can do redistribution on RIP also.\n\n701\n00:35:22,010 --> 00:35:25,460\nBGP doesn't really make use of the default\nroutes, so you don't see it there.\n\n702\n00:35:25,460 --> 00:35:28,240\nBut EIGRP and OSPF,\nthose are the two most common, and\n\n703\n00:35:28,240 --> 00:35:30,840\nthose are examples,\nright there of how to redistribute it.\n\n704\n00:35:30,840 --> 00:35:34,100\nNow, we are gonna do a whole\nseparate episode on redistribution,\n\n705\n00:35:34,100 --> 00:35:35,930\ncause there's a lot\nmore we might wanna do.\n\n706\n00:35:35,930 --> 00:35:40,800\nThat redistribute static command I issued,\nwould redistribute every static route\n\n707\n00:35:40,800 --> 00:35:44,390\nthat I have and that might not be what\nI want so we normally combine that with\n\n708\n00:35:44,390 --> 00:35:49,000\na route map to be able to filter which\nroutes make it in and which ones don't.\n\n709\n00:35:49,000 --> 00:35:50,160\nOr at least an access list.\n\n710\n00:35:50,160 --> 00:35:52,590\nThere's a few different\nways like a prefix list.\n\n711\n00:35:52,590 --> 00:35:56,640\nThat you can use to filter which data\ngets redistributed and which don't.\n\n712\n00:35:56,640 --> 00:36:00,350\nSo we'll see a lot more of that later in\nthe show when we get to path manipulation.\n\n713\n00:36:01,790 --> 00:36:05,220\nAs far as default routes,\nthat's basically it.\n\n714\n00:36:05,220 --> 00:36:07,290\nNow you kind of see why I wanted\nto separate this one out.\n\n715\n00:36:07,290 --> 00:36:11,790\nWe had the static routing episode but\nnot all of this was static, so\n\n716\n00:36:11,790 --> 00:36:14,820\nwe branches off into another little\nepisode and you got to see if here.\n\n717\n00:36:16,810 --> 00:36:19,300\nWell Ronnie, I talked a lot and\nI'm out of stuff to talk about.\n\n718\n00:36:19,300 --> 00:36:20,280\nCan you think of anything\nelse to throw in?\n\n719\n00:36:20,280 --> 00:36:21,460\n>> Nope.\n\n720\n00:36:21,460 --> 00:36:24,300\nThe static routes and\nthe default routes, very important.\n\n721\n00:36:24,300 --> 00:36:27,930\nFundamentals again, but\ngood because it lays that foundation for\n\n722\n00:36:27,930 --> 00:36:30,520\nthe redistribution that we're\ngonna be going over later and\n\n723\n00:36:30,520 --> 00:36:33,560\nsome of the other things\ninside of OSPF and EIGRP.\n\n724\n00:36:33,560 --> 00:36:35,140\nThis is a good place for\n\n725\n00:36:35,140 --> 00:36:38,290\nus to actually have some solid\nknowledge in before we jump into that.\n\n726\n00:36:38,290 --> 00:36:39,530\n>> Absolutely.\n\n727\n00:36:39,530 --> 00:36:42,030\nAll rught, well ladies and gentlemen,\nthat's a good spot for us to wrap it up.\n\n728\n00:36:42,030 --> 00:36:46,600\nLet me remind you if you have questions\non any of this, feel free to ask.\n\n729\n00:36:46,600 --> 00:36:49,620\nLive during the show,\nyou can go to itpro.tv/live and\n\n730\n00:36:49,620 --> 00:36:52,610\nyou'll see the chat box beneath the video.\n\n731\n00:36:52,610 --> 00:36:53,340\nWhatever we're doing.\n\n732\n00:36:53,340 --> 00:36:54,430\nThis video thing that we do.\n\n733\n00:36:54,430 --> 00:36:56,090\nAnd you can type your questions there.\n\n734\n00:36:56,090 --> 00:36:57,690\nWe monitor and answer during the show.\n\n735\n00:36:57,690 --> 00:36:58,710\nAnd sometimes you guys answer.\n\n736\n00:36:58,710 --> 00:37:00,608\nThanks again, Richard, for the delay.\n\n737\n00:37:00,608 --> 00:37:03,140\n[LAUGH] Pretty helpful.\n\n738\n00:37:03,140 --> 00:37:06,820\nIf you have questions after the show,\nmake use of our Q&A forums.\n\n739\n00:37:06,820 --> 00:37:11,200\nYou can click on the Q&A link at the top\nof every page on the ITProTV site,\n\n740\n00:37:11,200 --> 00:37:12,610\nit'll take you to the forums.\n\n741\n00:37:12,610 --> 00:37:15,850\nPost your questions there,\nwe monitor and answer after the show.\n\n742\n00:37:15,850 --> 00:37:18,730\nTake advantage of that resource,\nit's there for you.\n\n743\n00:37:18,730 --> 00:37:20,810\nAll right, well I hope you\nguys enjoyed today's episode.\n\n744\n00:37:20,810 --> 00:37:23,070\nSigning off for ITProTV, I'm Don Pezet.\n\n745\n00:37:23,070 --> 00:37:23,983\n>> And I'm Ronnie Wong.\n\n746\n00:37:23,983 --> 00:37:29,895\n>> And we'll see\n\n747\n00:37:29,895 --> 00:37:36,301\nyou next time.\n\n748\n00:37:36,301 --> 00:37:39,732\n[MUSIC].\n\n749\n00:37:39,732 --> 00:37:46,110\n[SOUND].\n\n",
          "vimeoId": "118805998"
        },
        {
          "description": "Cisco wants to ensure those pursuing the CCNP certification know the difference between different dynamic routing protocols. Viewers will hear about the general types of dynamic routing protocols, which include: distance vector, link-state and path vector.",
          "length": "3066",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/ccnproute/cisco-ccnproute-3-5-routing_protocols-020515.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/ccnproute/cisco-ccnproute-3-5-routing_protocols-020515-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/ccnproute/cisco-ccnproute-3-5-routing_protocols-020515-sm.jpg",
          "title": "Routing Protocols",
          "transcript": "1\n00:00:00,000 --> 00:00:10,000\n[MUSIC]\n\n2\n00:00:14,952 --> 00:00:22,091\n[SOUND]\n\n3\n00:00:22,091 --> 00:00:32,091\n[MUSIC]\n\n4\n00:00:33,226 --> 00:00:36,179\nAll right, good morning,\ngood afternoon and good evening,\n\n5\n00:00:36,179 --> 00:00:38,242\nwelcome back to another episode ITProTV.\n\n6\n00:00:38,242 --> 00:00:42,620\nI'm your host Don Pezet, back again\nwith Ronnamous Maximus, Mr. Ronnie Wong.\n\n7\n00:00:42,620 --> 00:00:43,370\nHow's it going Ronnie?\n\n8\n00:00:43,370 --> 00:00:44,210\n>> It is going well.\n\n9\n00:00:44,210 --> 00:00:45,671\nA little bit of Three Stooges\nhistory this morning.\n\n10\n00:00:45,671 --> 00:00:47,030\n>> [LAUGH]\n>> And we're ready to go.\n\n11\n00:00:47,030 --> 00:00:51,373\nYou only got two to deal with today,\nso that's me and Don, [LAUGH] I think.\n\n12\n00:00:51,373 --> 00:00:52,406\n>> You know we need\na third Stooge up here.\n\n13\n00:00:52,406 --> 00:00:53,102\n>> We do.\n[LAUGH]\n\n14\n00:00:53,102 --> 00:00:53,875\n>> Who's it gonna be?\n\n15\n00:00:53,875 --> 00:00:54,760\nWell, you know what?\n\n16\n00:00:54,760 --> 00:00:56,450\nOur third stooge today can be the routers.\n\n17\n00:00:56,450 --> 00:01:00,290\n>> Cuz we're going to be jumping\ninto a CCNP route episode.\n\n18\n00:01:00,290 --> 00:01:03,110\nStill tackling a little bit of reviews,\nsome of the core\n\n19\n00:01:03,110 --> 00:01:06,120\nknowledge that we need to understand\nbefore we move into the advanced stuff.\n\n20\n00:01:06,120 --> 00:01:10,370\nAnd, today, we're actually gonna be\nbeginning our Dynamic Routing Protocols.\n\n21\n00:01:10,370 --> 00:01:12,550\nI know this is what a lot of\npeople have been waiting for.\n\n22\n00:01:12,550 --> 00:01:15,728\nWhen you think of the CCNP ROUTE exam,\nyou think of routing protocols.\n\n23\n00:01:15,728 --> 00:01:18,810\nYou think, oh, that's probably what\nmakes up the bulk of the exam.\n\n24\n00:01:18,810 --> 00:01:20,822\nYou'd sort of be right, I guess.\n\n25\n00:01:20,822 --> 00:01:24,410\n[LAUGH] I'd say probably a good third\nof the exam is built around routing\n\n26\n00:01:24,410 --> 00:01:25,290\nprotocols.\n\n27\n00:01:25,290 --> 00:01:30,260\nThe whole rest of the exam is built around\nmanipulating the routes, be that inside or\n\n28\n00:01:30,260 --> 00:01:31,650\noutside of a routing protocol.\n\n29\n00:01:31,650 --> 00:01:36,670\nBut how we do that is gonna vary based on\nthe type of routing protocol we're using.\n\n30\n00:01:36,670 --> 00:01:38,940\nAnd that's what this\nobjective is all about.\n\n31\n00:01:38,940 --> 00:01:43,590\nObjective 3.5,\nevaluate routing protocol types.\n\n32\n00:01:43,590 --> 00:01:47,260\nWhat Cisco wants to ensure is that you\nknow the difference between the different\n\n33\n00:01:47,260 --> 00:01:50,940\nrouting protocols, and when one's\nsuitable for a situation versus another.\n\n34\n00:01:50,940 --> 00:01:53,910\nAnd so we're just gonna run over\nthe general types they have and\n\n35\n00:01:53,910 --> 00:01:54,980\nkeep it kinda high-level.\n\n36\n00:01:54,980 --> 00:01:56,820\nThis will be a shorter episode for us.\n\n37\n00:01:56,820 --> 00:02:00,710\nAs we move through and\njust tackle each of those concepts.\n\n38\n00:02:00,710 --> 00:02:01,550\nSo let's do that.\n\n39\n00:02:01,550 --> 00:02:02,892\nLet's just start off really high level.\n\n40\n00:02:02,892 --> 00:02:07,590\nRonnie, what are the three types of\nrouting protocols Cisco calls out?\n\n41\n00:02:07,590 --> 00:02:09,760\n>> Yeah, when we take a look\nat Cisco routing protocols,\n\n42\n00:02:09,760 --> 00:02:12,430\nthe three major types\nof routing protocols.\n\n43\n00:02:12,430 --> 00:02:14,410\nOne is called distance vector.\n\n44\n00:02:14,410 --> 00:02:16,850\nThe other one is gonna be\nwhat we call link state.\n\n45\n00:02:16,850 --> 00:02:20,280\nAnd, then if you're just doing the CCNA,\nin other words, you've just finished this,\n\n46\n00:02:20,280 --> 00:02:25,260\nyou might have heard people refer off to\nBGP in almost hushed tones like there's\n\n47\n00:02:25,260 --> 00:02:27,430\nsomething else actually out there, but-\n>> Magic.\n\n48\n00:02:27,430 --> 00:02:31,010\n>> Yeah, like there's some mystical\nmagic that you haven't yet touched.\n\n49\n00:02:31,010 --> 00:02:34,860\nBut that's what we call a path\nvector type of routing protocol.\n\n50\n00:02:34,860 --> 00:02:39,250\nSo when they do that high level overview\nof describing what each of these do, and\n\n51\n00:02:39,250 --> 00:02:42,060\nthen later on, we'll actually\nget into seeing how they work,\n\n52\n00:02:42,060 --> 00:02:45,210\nand of course,\nthen manipulating routes inside of them.\n\n53\n00:02:45,210 --> 00:02:48,560\n>> Now where it gets confusing, is that\nwe talk about these three categories,\n\n54\n00:02:48,560 --> 00:02:51,880\nThe distance vector,\nlink state, path vector, Right?\n\n55\n00:02:51,880 --> 00:02:56,030\nBut, there's also another way to\ndivide up our protocols which is,\n\n56\n00:02:56,030 --> 00:02:59,220\ninterior routing protocols and\nexterior routing protocols.\n\n57\n00:02:59,220 --> 00:03:01,610\nYou normally hear them called IGPs and\nEGPs, right?\n\n58\n00:03:01,610 --> 00:03:04,820\nInterior gateway protocols and\nexterior gateway protocols.\n\n59\n00:03:04,820 --> 00:03:09,530\nWell an interior protocol is one\nthat's designed to handle routing\n\n60\n00:03:09,530 --> 00:03:10,850\nwithin a company, right?\n\n61\n00:03:10,850 --> 00:03:14,710\nWithin an infrastructure that you own and\ncontrol, a private network.\n\n62\n00:03:14,710 --> 00:03:17,860\nThat's what an interior protocol\nis typically designed for.\n\n63\n00:03:17,860 --> 00:03:22,520\nAn exterior protocol, on the other hand,\nlike an EGP, an External Gateway Protocol\n\n64\n00:03:22,520 --> 00:03:26,630\nis designed to handle routing on a much,\nmuch larger network.\n\n65\n00:03:26,630 --> 00:03:31,351\nTypically a WAN, a Wide Area Network, or\na public network like the Internet, right?\n\n66\n00:03:31,351 --> 00:03:35,870\nWell, when it comes to the three divisions\nthat we talked about, link state,\n\n67\n00:03:35,870 --> 00:03:39,510\npath vector, distance vector,\nthose can be used either way.\n\n68\n00:03:39,510 --> 00:03:42,490\nThey can be used interior or\nthey can be used exterior.\n\n69\n00:03:42,490 --> 00:03:44,920\nSo, that's why we have two\ndifferent divisions of it.\n\n70\n00:03:44,920 --> 00:03:47,990\nAnd I know there's a lot of\npeople who say Path vector is for\n\n71\n00:03:47,990 --> 00:03:49,590\nexterior protocols only.\n\n72\n00:03:49,590 --> 00:03:51,620\nWell, in practice, yeah,\n\n73\n00:03:51,620 --> 00:03:54,860\nwe really only use path vector in\nexternal, on things like the Internet.\n\n74\n00:03:54,860 --> 00:03:57,110\nThat's really the only place\nwhere we use these path vector.\n\n75\n00:03:57,110 --> 00:03:59,820\nBut you can use them as\ninterior if you want.\n\n76\n00:03:59,820 --> 00:04:01,840\nYou can,\nthere's nothing to stop you, right?\n\n77\n00:04:01,840 --> 00:04:06,390\nSo don't get pigeon holed, especially on\nthe exam when they throw questions at you.\n\n78\n00:04:06,390 --> 00:04:09,420\nDon't feel like just because\na protocol is path vector,\n\n79\n00:04:09,420 --> 00:04:11,878\nyou can only use it externally,\nyou can't use it internally.\n\n80\n00:04:11,878 --> 00:04:12,800\nYou can, right?\n\n81\n00:04:12,800 --> 00:04:15,737\nAnd there are a lot of people,\na lot of scenarios where we do that.\n\n82\n00:04:15,737 --> 00:04:19,590\nAnd we'll even see some in this series,\nlater on down the road.\n\n83\n00:04:19,590 --> 00:04:22,360\nWe'll see some examples of\nBDP inside of your network,\n\n84\n00:04:22,360 --> 00:04:24,380\nso definitely keep that in mind.\n\n85\n00:04:25,580 --> 00:04:28,540\nNow, as we look at each of these\nprotocols, it's also easy to pigeon\n\n86\n00:04:28,540 --> 00:04:32,183\nhole yourself into thinking that some of\nthem well, that some of them suck, right?\n\n87\n00:04:32,183 --> 00:04:33,506\nSome of them aren't very good.\n\n88\n00:04:33,506 --> 00:04:37,202\nAnd while that might be true,\nunderstand that there is a time and\n\n89\n00:04:37,202 --> 00:04:39,334\na place for each of these protocols.\n\n90\n00:04:39,334 --> 00:04:43,780\nThat even the really crummy ones,\nlike RIP, still have a use.\n\n91\n00:04:43,780 --> 00:04:46,080\nThere's a reason they're\nstill supported today.\n\n92\n00:04:46,080 --> 00:04:47,840\nAnd, so on the exam,\n\n93\n00:04:47,840 --> 00:04:51,710\ndon't rule out to crummy protocols\njust cuz you have a favorite.\n\n94\n00:04:51,710 --> 00:04:53,660\nUnderstand that you've got\ndifferent functionality and\n\n95\n00:04:53,660 --> 00:04:56,760\ndifferent features in each of them and\nkeep an open mind.\n\n96\n00:04:56,760 --> 00:04:57,755\nI'm pretty bad about this.\n\n97\n00:04:57,755 --> 00:04:58,436\n>> [LAUGH]\n>> In real life,\n\n98\n00:04:58,436 --> 00:05:01,307\nif I'm gonna deploy a routing protocol,\nit's going to be OSPF.\n\n99\n00:05:01,307 --> 00:05:02,409\nIt's just a given, all right?\n\n100\n00:05:02,409 --> 00:05:05,210\nI never deploy RIP, I never deploy EIGRP.\n\n101\n00:05:05,210 --> 00:05:08,600\nI always deploy OSPF In\nproduction environments.\n\n102\n00:05:08,600 --> 00:05:10,360\nBut I still learn the others.\n\n103\n00:05:10,360 --> 00:05:12,460\nI still learned the RIPs and the EIGRP,\n\n104\n00:05:12,460 --> 00:05:16,090\nand the other protocols because\nthey have their benefits.\n\n105\n00:05:16,090 --> 00:05:17,400\nThere's pros and cons to each.\n\n106\n00:05:17,400 --> 00:05:19,150\nThere's a time and a place for them.\n\n107\n00:05:19,150 --> 00:05:21,799\nAnd so, on the exam, I'm Mr.\nEquality, right?\n\n108\n00:05:21,799 --> 00:05:24,305\nWhen I get to that question, I'm like all\nright, I can use any of these protocols.\n\n109\n00:05:24,305 --> 00:05:25,473\nAnd that's important, and\n\n110\n00:05:25,473 --> 00:05:28,788\neven in real life there are times where\nyou might want one of the other protocols.\n\n111\n00:05:28,788 --> 00:05:32,090\nAll right, so Ronnie, let's dive in.\n\n112\n00:05:32,090 --> 00:05:36,250\n>> Yeah, so we're gonna take a look at\nthe distance vector protocols first.\n\n113\n00:05:36,250 --> 00:05:38,710\nNow before I do that,\nremember that static routing protocols,\n\n114\n00:05:38,710 --> 00:05:41,360\nat this point you should, these\nare the ones that we manually configure.\n\n115\n00:05:41,360 --> 00:05:43,940\nDistance vector protocols are some\nthat we're gonna configure and\n\n116\n00:05:43,940 --> 00:05:45,830\nallow the routers to work with.\n\n117\n00:05:45,830 --> 00:05:48,470\nAnd usually the first one\nthat we end up learning about\n\n118\n00:05:48,470 --> 00:05:51,550\nis gonna be what we call\nthe distance vector protocol.\n\n119\n00:05:51,550 --> 00:05:53,158\nNow if we split that name up, right?\n\n120\n00:05:53,158 --> 00:05:56,770\nWhat we actually do learn is that this\ntype of protocol will then give us\n\n121\n00:05:56,770 --> 00:06:00,410\na distance, in other words,\nhow far we are to our destination network.\n\n122\n00:06:00,410 --> 00:06:02,200\nAnd the term vector means direction.\n\n123\n00:06:02,200 --> 00:06:07,072\nIn other words, what direction, what\ninterface are we going to leave so that we\n\n124\n00:06:07,072 --> 00:06:12,110\ncan get towards that ultimate destination,\nthat best path to where we want to go?\n\n125\n00:06:12,110 --> 00:06:12,673\nAnd, so\n\n126\n00:06:12,673 --> 00:06:18,740\nthat is kind of the basic overview of what\na distance vector protocol tries to do.\n\n127\n00:06:18,740 --> 00:06:20,750\n>> Yeah, now for\na distance vector protocol,\n\n128\n00:06:20,750 --> 00:06:24,710\nthat distance is typically measured\nin what's called a hop count.\n\n129\n00:06:24,710 --> 00:06:27,100\nHow many routers you have to\ngo to get to a destination.\n\n130\n00:06:27,100 --> 00:06:30,100\nNow there are more than one distance\nvector protocol out there, and\n\n131\n00:06:30,100 --> 00:06:33,110\nthey can choose to use whatever\nthey want for the distance.\n\n132\n00:06:33,110 --> 00:06:36,800\nBut the most common distance vector\nprotocol that's out there is RIP,\n\n133\n00:06:36,800 --> 00:06:38,640\nthe router information protocol.\n\n134\n00:06:38,640 --> 00:06:41,890\nRIP is very old, it's been around\na long time, it's been updated, right?\n\n135\n00:06:41,890 --> 00:06:43,320\nSo it's not like it's ancient and\ndecrepit and\n\n136\n00:06:43,320 --> 00:06:45,310\nyou can't use it anymore,\nit's been updated.\n\n137\n00:06:45,310 --> 00:06:47,428\nBut it's very mature,\nit's been around a long time.\n\n138\n00:06:47,428 --> 00:06:49,630\nIt's very easy to use.\n\n139\n00:06:49,630 --> 00:06:52,280\nThat's probably one of its\nbiggest saving graces is it's\n\n140\n00:06:52,280 --> 00:06:54,150\nsuper easy to implement RIP.\n\n141\n00:06:54,150 --> 00:06:58,110\nBut it is the poster child of\ndistance vector protocols.\n\n142\n00:06:58,110 --> 00:07:00,328\nWith RIP, it's tracking hop count,\n\n143\n00:07:00,328 --> 00:07:04,291\nhow many routers you have to go through\nto get from point A to point B.\n\n144\n00:07:04,291 --> 00:07:09,440\nAnd it makes its decision based\nsolely on that value, just hop count.\n\n145\n00:07:09,440 --> 00:07:11,440\nAnd its decision is the vector part,\nright?\n\n146\n00:07:11,440 --> 00:07:14,480\nWhich interface do we go out\nto get to our destination?\n\n147\n00:07:14,480 --> 00:07:18,020\nAnd that's a key thing to remember about\nall of these dynamic routing protocols.\n\n148\n00:07:18,020 --> 00:07:22,584\nSome of them are insanely advanced and\nunderstand your whole network topology.\n\n149\n00:07:22,584 --> 00:07:25,050\nAnd see the whole network from end to end.\n\n150\n00:07:25,050 --> 00:07:28,080\nBut at the end of the day,\nthe routing protocols,\n\n151\n00:07:28,080 --> 00:07:31,930\nall of them are just picking the next hop.\n\n152\n00:07:31,930 --> 00:07:35,942\nA routing protocol can only control\nthe path you follow on the device that\n\n153\n00:07:35,942 --> 00:07:36,673\nyou're on.\n\n154\n00:07:36,673 --> 00:07:39,109\nOnce it gets off that device\nit can't control it anymore,\n\n155\n00:07:39,109 --> 00:07:41,460\nit's up to somebody else\nto make the decision.\n\n156\n00:07:41,460 --> 00:07:46,390\nSo you're really just picking the next\nhop, the very next step in that journey.\n\n157\n00:07:46,390 --> 00:07:50,260\nAlthough you might know the full journey,\nyou can only influence the very next step.\n\n158\n00:07:51,580 --> 00:07:53,689\n>> The nice thing about the distance\nvector, I don't wanna say nice thing,\n\n159\n00:07:53,689 --> 00:07:55,131\nit's probably not the nicest\nthing in the world.\n\n160\n00:07:55,131 --> 00:07:56,671\n>> It's nice.\n>> Yeah, it's nice, but\n\n161\n00:07:56,671 --> 00:08:01,824\nonly learns its own routing table from the\nneighbors it's directly connected to So\n\n162\n00:08:01,824 --> 00:08:05,136\nsometimes you may hear\nthe term routing by rumor, and\n\n163\n00:08:05,136 --> 00:08:10,800\nthat's because it doesn't actually know\nwhat's beyond the next hop a lot of times.\n\n164\n00:08:10,800 --> 00:08:15,590\nIt's accepting the fact that that next\nrouter that it's going to be connected to\n\n165\n00:08:15,590 --> 00:08:18,390\nis giving it its best\npossible information.\n\n166\n00:08:18,390 --> 00:08:20,710\nAnd sometimes that\ninformation can be wrong.\n\n167\n00:08:20,710 --> 00:08:23,800\nIt can lead to other problems that\nare out there, such as routing loops.\n\n168\n00:08:23,800 --> 00:08:27,510\nSo you do have to be careful when you do\nimplement these distance vector protocols.\n\n169\n00:08:27,510 --> 00:08:29,040\n>> You know, Ronnie,\nlet's take a look at this.\n\n170\n00:08:29,040 --> 00:08:32,140\nI have a little diagram here to\ndemonstrate how these distance vector\n\n171\n00:08:32,140 --> 00:08:35,860\nprotocols work so we make sure we've\ngot a good understanding of it.\n\n172\n00:08:35,860 --> 00:08:39,355\nOn the left side of my diagram\nI've got the 192.168.0 network.\n\n173\n00:08:39,355 --> 00:08:41,510\nSo let's say that's where my laptop is.\n\n174\n00:08:41,510 --> 00:08:45,127\nAnd on the right side of the network,\nI've got 192.168.1.0 and\n\n175\n00:08:45,127 --> 00:08:48,222\nlet's say that's where Ronnie's laptop is.\n\n176\n00:08:48,222 --> 00:08:52,895\nAnd so I wanna talk to Ronnie's laptop,\nmy laptop way over here.\n\n177\n00:08:52,895 --> 00:08:56,471\nI guess I could stop being lazy and\nactually stick a laptop over here.\n\n178\n00:08:56,471 --> 00:08:58,057\nSo there he goes, this is my laptop.\n\n179\n00:08:58,057 --> 00:09:02,797\nAnd so if I'm sitting on my laptop and I'm\ndoing work or whatever and reaching out,\n\n180\n00:09:02,797 --> 00:09:07,199\nmy laptop is gonna look at this and\nit's gonna say, all right, I'm trying to\n\n181\n00:09:07,199 --> 00:09:12,385\ncontact somebody who's on a different\nsubnet, on a different network than me.\n\n182\n00:09:12,385 --> 00:09:15,475\nAnd so\nif I wanna get to that other person,\n\n183\n00:09:15,475 --> 00:09:17,935\nI'm gonna have to go\nthrough a default gateway.\n\n184\n00:09:17,935 --> 00:09:19,649\nSo I'm gonna have to go my router and\n\n185\n00:09:19,649 --> 00:09:23,435\nthat router is gonna steer me to wherever\nit is that I'm trying to get, right?\n\n186\n00:09:23,435 --> 00:09:29,027\nSo I'm coming from my network to my\ndefault gateway, that's the first\n\n187\n00:09:29,027 --> 00:09:34,448\nstep of my journey as I start to move\nalong going across they network.\n\n188\n00:09:34,448 --> 00:09:37,558\nSo there we go all right, well, here let's\nput some kind of color that's really\n\n189\n00:09:37,558 --> 00:09:40,042\nvisible like purple,\nthis is my purple track.\n\n190\n00:09:40,042 --> 00:09:43,600\nAll right so I'm gonna start my\njourney jumping over to my router.\n\n191\n00:09:43,600 --> 00:09:45,085\nNow my router has to figure out,\n\n192\n00:09:45,085 --> 00:09:48,285\nrouter A has to figure out how to get\nto that network on the other side.\n\n193\n00:09:48,285 --> 00:09:51,260\nAnd it's got a few different ways\nthat it can get there, right?\n\n194\n00:09:51,260 --> 00:09:54,330\nWe can start by going\nacross that top path.\n\n195\n00:09:54,330 --> 00:09:58,060\nIt can go right across, whoop,\nthat's not what I wanted.\n\n196\n00:09:58,060 --> 00:10:04,420\nIt can go right across the top path here,\nacross and over to the destination.\n\n197\n00:10:04,420 --> 00:10:07,399\nAnd if it goes that way,\nit'll get there, it'll work fine right?\n\n198\n00:10:07,399 --> 00:10:09,228\nIt'll just jump right over and\nthere we go.\n\n199\n00:10:09,228 --> 00:10:13,288\nBut we do have another choice,\nour other choice is that we\n\n200\n00:10:13,288 --> 00:10:18,300\ncould jump from Router A down to Router D,\nup to Router E and over.\n\n201\n00:10:18,300 --> 00:10:21,740\nThat's my other choice that's available,\nall right.\n\n202\n00:10:21,740 --> 00:10:24,450\nSo how does it figure\nout which one to go on?\n\n203\n00:10:24,450 --> 00:10:27,140\nWell, a distance vector protocol,\nit just counts the hops.\n\n204\n00:10:27,140 --> 00:10:33,690\nGoing across the top, I've got one, two,\nthree hops before I hit the destination.\n\n205\n00:10:33,690 --> 00:10:37,570\nGoing across the bottom the blue route,\nI go one, two hops and\n\n206\n00:10:37,570 --> 00:10:38,970\nI get to the destination.\n\n207\n00:10:38,970 --> 00:10:42,950\nThe green route is three hops,\nthe blue route is two hops.\n\n208\n00:10:42,950 --> 00:10:46,810\nI wanna go two hops, I wanna go the bottom\nroute, and that's the way it'll send me.\n\n209\n00:10:46,810 --> 00:10:49,260\nSo router a will make a decision and\n\n210\n00:10:49,260 --> 00:10:53,220\nthat decision will be to send traffic for\n192.168.1.\n\n211\n00:10:53,220 --> 00:10:57,240\nOut this interface down to router D,\nthat's the decision that it makes.\n\n212\n00:10:57,240 --> 00:10:57,930\n>> Yeah.\n\n213\n00:10:57,930 --> 00:11:02,610\nBut this decision doesn't always mean that\nit's the best possible path to get there,\n\n214\n00:11:02,610 --> 00:11:04,480\nat least in terms of time.\n\n215\n00:11:04,480 --> 00:11:09,515\nSo it could be that that bottom route may\nactually be across very slow connections,\n\n216\n00:11:09,515 --> 00:11:13,105\nand what if the top route is\nacross very fast connections.\n\n217\n00:11:13,105 --> 00:11:16,765\nIn other words we know we could get there\na lot faster by going that top route, but\n\n218\n00:11:16,765 --> 00:11:20,005\nthe distance vector protocol\ngenerally says look, my metric,\n\n219\n00:11:20,005 --> 00:11:22,045\nthe way that I determine it, I don't care.\n\n220\n00:11:22,045 --> 00:11:23,687\nIt's only by that hop count.\n\n221\n00:11:23,687 --> 00:11:27,798\nThe next hop that's there to get me, and\nso the lower the hop count, the better\n\n222\n00:11:27,798 --> 00:11:32,380\nthat that pass can be, regardless of\nthe connection quality that we have.\n\n223\n00:11:32,380 --> 00:11:34,230\n>> Yeah, the connection\nacross these bottom routers,\n\n224\n00:11:34,230 --> 00:11:38,850\nthose could be 1.5 megabit T1 lines, but\nthen the connection across these routers\n\n225\n00:11:38,850 --> 00:11:42,970\nup top could be 100 megabit\nmetro ethernet connections.\n\n226\n00:11:42,970 --> 00:11:46,880\nSo significantly faster,\nyou'd wanna go the top route.\n\n227\n00:11:46,880 --> 00:11:49,210\nThe distance vector protocol's\nnot gonna realize that.\n\n228\n00:11:49,210 --> 00:11:53,100\nWhat it results in is what Cisco\ncalled sub-optimal routing.\n\n229\n00:11:53,100 --> 00:11:54,210\nIt works.\n\n230\n00:11:54,210 --> 00:11:57,290\nI'm able to get from my network on\nthe left to the network on the right.\n\n231\n00:11:57,290 --> 00:11:59,870\nI'm just not taking\nthe best path possible.\n\n232\n00:11:59,870 --> 00:12:05,840\nWhen a router picks a path that's not\nthe best, that's sub-optimal routing.\n\n233\n00:12:05,840 --> 00:12:07,300\nAnd we want to avoid that when possible.\n\n234\n00:12:07,300 --> 00:12:10,765\nIn fact, we'll have a whole segment in\nanother episode where we troubleshoot\n\n235\n00:12:10,765 --> 00:12:13,970\nsub-optimal routing and things that\ncan cause us to pick a bad path.\n\n236\n00:12:13,970 --> 00:12:19,210\nIn this case, it's the routing protocol\nitself that's picking the bad path.\n\n237\n00:12:19,210 --> 00:12:21,818\nSo it's just it's behavior,\nit's how it functions.\n\n238\n00:12:21,818 --> 00:12:25,720\nSo if we've got a dynamic network,\na network with various bandwidths,\n\n239\n00:12:25,720 --> 00:12:29,100\nour distance vector protocol\ndoesn't look at bandwidth and\n\n240\n00:12:29,100 --> 00:12:31,780\nit's gonna make a bad decision,\nand we're sub optimal.\n\n241\n00:12:31,780 --> 00:12:35,750\nNow not every distance\nvector protocol does that.\n\n242\n00:12:35,750 --> 00:12:39,980\nAnother very famous distance\nvector protocol is EIGRP,\n\n243\n00:12:39,980 --> 00:12:43,520\nthe Enhanced Interior Gateway\nRouting Protocol from Cisco.\n\n244\n00:12:43,520 --> 00:12:48,620\nNow Cisco, for years they said well,\nwe're not really distance vector,\n\n245\n00:12:48,620 --> 00:12:52,200\nwe're hybrid distance vector, or whatever.\n\n246\n00:12:52,200 --> 00:12:54,610\nNow they just say it's\nadvanced distance vector.\n\n247\n00:12:54,610 --> 00:12:59,460\nBut deep down under the hood inside\nof the EIGRP routing protocol\n\n248\n00:12:59,460 --> 00:13:04,170\nit is a distance vector protocol,\nbut it doesn't care about hop count.\n\n249\n00:13:04,170 --> 00:13:07,440\nIt actually doesn't even pay attention\nto hop count, it completely ignores it.\n\n250\n00:13:07,440 --> 00:13:11,290\nIt looks at two metrics,\nbandwidth and delay.\n\n251\n00:13:11,290 --> 00:13:13,180\nHow much bandwidth does the line have, and\n\n252\n00:13:13,180 --> 00:13:15,990\nhow long is it taking my\ntraffic to transit the line?\n\n253\n00:13:15,990 --> 00:13:20,480\nThat is far more accurate for making\na better decision than what RIP does.\n\n254\n00:13:20,480 --> 00:13:24,130\nSo, with a distance vector protocol,\nif I need a more advanced,\n\n255\n00:13:24,130 --> 00:13:29,634\na smarter decision I'll\ngo with EIGRP over OSPF.\n\n256\n00:13:29,634 --> 00:13:32,320\nBut, under the hood,\n\n257\n00:13:32,320 --> 00:13:36,122\nEIGRP functions just like RIP does\nas far as how they communicate.\n\n258\n00:13:36,122 --> 00:13:38,530\nI wanna reach back to something\nRonnie mentioned earlier.\n\n259\n00:13:38,530 --> 00:13:42,840\nWhich is that in a distance\nvector protocol you only talk\n\n260\n00:13:42,840 --> 00:13:44,730\nto your neighbor and that's it.\n\n261\n00:13:44,730 --> 00:13:47,930\nYou only talk to routers that\nyou're directly connected to and\n\n262\n00:13:47,930 --> 00:13:50,530\nthat's key to remember for the exam.\n\n263\n00:13:50,530 --> 00:13:53,690\nWe need to know how these routers\nare building up their routing table.\n\n264\n00:13:53,690 --> 00:13:57,140\nSo let's walk through an example of\nthat and this will help highlight,\n\n265\n00:13:57,140 --> 00:14:01,870\nwhere our problem can come in, where we\ncan start to get these situations where\n\n266\n00:14:01,870 --> 00:14:04,720\nthe routers can end up creating\na routing loop for example.\n\n267\n00:14:06,310 --> 00:14:10,920\nLet's say we're running rip, we'll go rip\ncuz hop count is much easier to track than\n\n268\n00:14:10,920 --> 00:14:15,340\nrunning the dual formula and\nfiguring out EIGRP's metric.\n\n269\n00:14:15,340 --> 00:14:19,090\nSo if we have each of these little\nlinks here counting as a hop,\n\n270\n00:14:20,480 --> 00:14:24,290\nwhen our routers start to talk to each\nother they start with advertments,\n\n271\n00:14:24,290 --> 00:14:26,820\nthey advertise the routes\nthey're connected to and\n\n272\n00:14:26,820 --> 00:14:30,450\nif you're directly connected to\nit what's your hop count, zero.\n\n273\n00:14:30,450 --> 00:14:33,400\nSo that's what they start with\nadvertising with these zero networks,\n\n274\n00:14:33,400 --> 00:14:35,310\nthese networks that have a zero hop count.\n\n275\n00:14:35,310 --> 00:14:38,980\nAnd then it starts getting exchanged\nfrom router to router to router.\n\n276\n00:14:38,980 --> 00:14:41,860\nSo Router E for\nexample is connected to 192.168.1.0,\n\n277\n00:14:41,860 --> 00:14:45,700\nso it's got a zero metric to be\nable to get to that network.\n\n278\n00:14:45,700 --> 00:14:46,500\nIt's directly connected.\n\n279\n00:14:47,760 --> 00:14:50,970\nIt then advertises it to Router C.\n\n280\n00:14:50,970 --> 00:14:52,250\nAnd Router D, right.\n\n281\n00:14:52,250 --> 00:14:55,849\nSo that advertisement is basically,\n\n282\n00:14:55,849 --> 00:15:00,240\ncome from this router and\nit's gonna head up.\n\n283\n00:15:00,240 --> 00:15:01,386\nOh, that's kind of cool.\n\n284\n00:15:01,386 --> 00:15:05,450\nIt's gonna head up here\nto these other routers.\n\n285\n00:15:05,450 --> 00:15:10,230\nIt's communicating it out and letting\nthem know about this other network.\n\n286\n00:15:10,230 --> 00:15:15,183\nAnd as it does it, it's telling them,\nhey, my hop count.\n\n287\n00:15:15,183 --> 00:15:21,980\nIf I need to get 192.168.1,\nI can get there in zero hops, right?\n\n288\n00:15:21,980 --> 00:15:23,420\nZero hops, and I'm there.\n\n289\n00:15:24,920 --> 00:15:27,520\nSo, the other routers\nare going to learn that.\n\n290\n00:15:27,520 --> 00:15:31,155\nSo router C learns it and\nrouter D leans it and\n\n291\n00:15:31,155 --> 00:15:35,780\nwhen they learn it,\nthey learn it coming from router E.\n\n292\n00:15:35,780 --> 00:15:39,291\nI am just messing my diagram all up,\nthere we go, it will make sense,\n\n293\n00:15:39,291 --> 00:15:40,392\nthere we go alright.\n\n294\n00:15:40,392 --> 00:15:43,512\nSo Router E learns it because it's\ndirectly connected then advertises it out\n\n295\n00:15:43,512 --> 00:15:45,020\nto Router C and Router D.\n\n296\n00:15:45,020 --> 00:15:50,130\nRouter C and Router D learn it as\nbeing zero hops away from Router E.\n\n297\n00:15:50,130 --> 00:15:53,690\nAnd they say, well, all right, I can\ngo through Router E and I'll get there.\n\n298\n00:15:53,690 --> 00:15:54,455\nRouter E is one hop.\n\n299\n00:15:54,455 --> 00:15:59,737\nSo when Router C and Router D learn it,\nthey learn it as one hop away.\n\n300\n00:15:59,737 --> 00:16:01,289\nRight?\nIt's just one hop away,\n\n301\n00:16:01,289 --> 00:16:02,315\nand they can get to it.\n\n302\n00:16:02,315 --> 00:16:05,240\nAnd then, they advertise it out.\n\n303\n00:16:05,240 --> 00:16:08,960\nThey advertise it out over to Router B.\n\n304\n00:16:10,500 --> 00:16:12,590\nSo we just kinda continue this chain on.\n\n305\n00:16:13,600 --> 00:16:19,540\nAnd we continue to advertise\nthat out to Router D also.\n\n306\n00:16:19,540 --> 00:16:20,650\nNo, Router D already had this.\n\n307\n00:16:20,650 --> 00:16:23,080\nWe advertise it down to Router A.\n\n308\n00:16:23,080 --> 00:16:26,450\nSo, Router A is gonna learn it.\n\n309\n00:16:26,450 --> 00:16:30,510\nAnd Router D is saying, hey,\nI'm one hop away to get there.\n\n310\n00:16:30,510 --> 00:16:33,770\nAnd so when Router A learns it,\nit says, well Router D is one hop away.\n\n311\n00:16:33,770 --> 00:16:37,420\nI've gotta go through Router D so\nit's 2 hops away for me.\n\n312\n00:16:37,420 --> 00:16:38,970\nSo it learns that it's 2 hops.\n\n313\n00:16:38,970 --> 00:16:41,300\nRouter B learns that it's 2 hops also.\n\n314\n00:16:41,300 --> 00:16:43,470\nAnd then Router B advertises it again.\n\n315\n00:16:44,680 --> 00:16:48,360\nAnd this time Router B\nadvertises it over Router A.\n\n316\n00:16:48,360 --> 00:16:50,640\nBut Router B is 2 hops away.\n\n317\n00:16:50,640 --> 00:16:52,860\nSo when Router A learns it.\n\n318\n00:16:52,860 --> 00:16:55,500\nIt's gonna learn it and say,\nwell I have to go through Router B.\n\n319\n00:16:55,500 --> 00:16:59,590\nRouter B is 2 hops away,\nI must be 3 hops away.\n\n320\n00:16:59,590 --> 00:17:03,960\nSo it learns this top path is 3 hops away.\n\n321\n00:17:03,960 --> 00:17:07,200\nAnd the bottom path is only 2 hops away.\n\n322\n00:17:07,200 --> 00:17:10,380\nSo it's able to separate those out and\nknow the distance.\n\n323\n00:17:12,180 --> 00:17:15,890\nHere's the problem with\nthe Distance Vector Protocol though.\n\n324\n00:17:15,890 --> 00:17:17,460\nYou only talk to your neighbor.\n\n325\n00:17:18,470 --> 00:17:22,195\nWhen Router A hears that Router B is\n2 hops away, that's all it knows.\n\n326\n00:17:22,195 --> 00:17:23,100\nIt's 2 hops away.\n\n327\n00:17:23,100 --> 00:17:24,910\nIt doesn't know anything about those hops.\n\n328\n00:17:24,910 --> 00:17:26,250\nIt doesn't know about Router C.\n\n329\n00:17:26,250 --> 00:17:27,090\nIt doesn't know the Router E.\n\n330\n00:17:27,090 --> 00:17:29,030\nIt doesn't know those guys exist at all.\n\n331\n00:17:29,030 --> 00:17:33,560\nIt has no clue as to what's going on\nthe other side of Router B and Router D.\n\n332\n00:17:33,560 --> 00:17:34,790\nThat's all that Router A sees.\n\n333\n00:17:34,790 --> 00:17:37,080\nIts vision stops right there.\n\n334\n00:17:37,080 --> 00:17:40,460\nAnd that's where Ronnie's comment came,\nwhich was routing by rumor?\n\n335\n00:17:40,460 --> 00:17:45,100\n>> Yep, routing by rumor is one of these\nthings that do have problems with.\n\n336\n00:17:45,100 --> 00:17:50,630\nBecause what if, now, something\nlike Router C stops reporting that,\n\n337\n00:17:50,630 --> 00:17:54,020\nhey, there's no longer\na route over this way?\n\n338\n00:17:54,020 --> 00:17:57,290\nWell it could be that Router B has yet\nto learn that.\n\n339\n00:17:57,290 --> 00:18:01,440\nAnd so the only thing that's updating\nRouter A now is actually Router B.\n\n340\n00:18:01,440 --> 00:18:06,440\nAnd it hasn't yet gotten the time to\nlearn that this particular route is bad.\n\n341\n00:18:06,440 --> 00:18:07,540\nSo that routing by rumor.\n\n342\n00:18:07,540 --> 00:18:10,680\nAnd the reason why we also\nend up getting this problem\n\n343\n00:18:10,680 --> 00:18:14,550\nis because the way that the distance\nVector Protocol also tends to work\n\n344\n00:18:14,550 --> 00:18:17,890\nWhich is only updating periodically too.\n\n345\n00:18:17,890 --> 00:18:20,420\nIs that you will get\nthis unusual thing where\n\n346\n00:18:20,420 --> 00:18:22,978\nRouter A may not know that\nsomething new has developed.\n\n347\n00:18:22,978 --> 00:18:25,090\n>> Yeah.\nLet's fresh this out.\n\n348\n00:18:25,090 --> 00:18:30,000\nBecause I know we talk about it in like\nthe ICND training and all that stuff.\n\n349\n00:18:30,000 --> 00:18:33,970\nBut I wanna make sure everybody\nhas a good understanding of it.\n\n350\n00:18:33,970 --> 00:18:36,460\nSo when we're advertizing this stuff out,\n\n351\n00:18:36,460 --> 00:18:41,510\nit's coming across as being a certain\namount of hops away, right?\n\n352\n00:18:41,510 --> 00:18:43,540\nAnd so that's what I was counting,\nas we laid this out,\n\n353\n00:18:43,540 --> 00:18:48,520\nto figure out exactly where\nwe were on our journey.\n\n354\n00:18:48,520 --> 00:18:52,190\nAnd so we had 1 hop, 2 hops,\nand then 3 hops, ultimately,\n\n355\n00:18:52,190 --> 00:18:53,870\nby the time we get down here.\n\n356\n00:18:53,870 --> 00:18:55,480\nAnd then here we had 1 hop.\n\n357\n00:18:55,480 --> 00:18:56,980\nAnd 2 hops.\n\n358\n00:18:56,980 --> 00:18:58,320\nSo here it's pretty straightforward.\n\n359\n00:18:58,320 --> 00:19:00,570\nRouter A has an easy decision to make.\n\n360\n00:19:00,570 --> 00:19:02,530\nIf I go the purple route,\nit's 3 hops away.\n\n361\n00:19:02,530 --> 00:19:03,950\nIf I go the blue route it's 2 hops away.\n\n362\n00:19:03,950 --> 00:19:04,820\nLet's go the blue route.\n\n363\n00:19:04,820 --> 00:19:05,430\nDone.\n\n364\n00:19:05,430 --> 00:19:06,110\nProblem solved.\n\n365\n00:19:07,230 --> 00:19:13,670\nBut the thing is, Router A doesn't\nactually know what those hops are.\n\n366\n00:19:13,670 --> 00:19:17,140\nAnd if Router A sees a route disappear,\n\n367\n00:19:17,140 --> 00:19:21,870\nlike let's say that for\nwhatever reason we have a route fail.\n\n368\n00:19:21,870 --> 00:19:25,690\nAnd don't I have some kind of\nlike crazy explosion icon or\n\n369\n00:19:25,690 --> 00:19:28,210\nsomething [LAUGH] I was\nusing in another show?\n\n370\n00:19:28,210 --> 00:19:31,040\nYeah, we have all sorts, there it is.\n\n371\n00:19:31,040 --> 00:19:31,970\nNow what is going on here?\n\n372\n00:19:33,860 --> 00:19:36,455\nThis is me not mastering\nmy drawing tools here.\n\n373\n00:19:36,455 --> 00:19:37,300\n>> [LAUGH]\n>> All right.\n\n374\n00:19:37,300 --> 00:19:40,800\nSo let's say we have some kind\nof failure on the network.\n\n375\n00:19:40,800 --> 00:19:46,550\nWhen we have a failure where a route\nstops getting advertised for some reason.\n\n376\n00:19:46,550 --> 00:19:51,090\nMaybe this blue route stops getting\nadvertised for whatever reason.\n\n377\n00:19:51,090 --> 00:19:54,230\nI don't know what the failure\nmight be that would lead to that.\n\n378\n00:19:54,230 --> 00:19:57,470\nBut let's just say that\nthe route goes down.\n\n379\n00:19:57,470 --> 00:20:00,740\nMaybe it legitimately goes down,\nthat can certainly happen.\n\n380\n00:20:00,740 --> 00:20:03,210\nSo we have a failure out here and\nthis network goes down.\n\n381\n00:20:03,210 --> 00:20:07,970\nWell, when this netowork goes down,\nRouter A is gonna lose that network too.\n\n382\n00:20:07,970 --> 00:20:10,260\nSo it's not getting\nthe blue route anymore.\n\n383\n00:20:10,260 --> 00:20:12,030\nBut it is getting the purple route.\n\n384\n00:20:12,030 --> 00:20:16,310\nAnd so it continues to advertise\nthat purple route out.\n\n385\n00:20:16,310 --> 00:20:21,400\nAnd so it will advertise the purple\nroute over to our other routers.\n\n386\n00:20:21,400 --> 00:20:25,600\nSo it's gonna advertise it\nright down here to Router D.\n\n387\n00:20:25,600 --> 00:20:29,190\nRouter D was sending us the blue route,\nbut the blue route's dead now.\n\n388\n00:20:29,190 --> 00:20:32,320\nSo Router A is going to send it\non as another way to get there.\n\n389\n00:20:32,320 --> 00:20:36,730\nThe difference being that now it's going\nto be 4 hops away if we go this route.\n\n390\n00:20:36,730 --> 00:20:37,530\nOkay.\n\n391\n00:20:37,530 --> 00:20:41,710\nAnd then Router D is not getting\nthat route from Router E anymore.\n\n392\n00:20:41,710 --> 00:20:43,150\nAnd so it's gonna go.\n\n393\n00:20:43,150 --> 00:20:47,120\nAnd advertise that out to Router E.\n\n394\n00:20:47,120 --> 00:20:49,380\nSo it's advertising it back over here.\n\n395\n00:20:49,380 --> 00:20:51,370\nAnd when it advertises it in.\n\n396\n00:20:51,370 --> 00:20:55,750\nIt's gonna advertise it in and\nit's gonna be 5 hops at this point.\n\n397\n00:20:55,750 --> 00:20:58,270\nSorry, it's starting to get a little\nbit messy here in my diagram but\n\n398\n00:20:58,270 --> 00:21:00,020\nI think you guys see the point.\n\n399\n00:21:00,020 --> 00:21:01,770\nSo it's gonna be 5 hops away.\n\n400\n00:21:01,770 --> 00:21:06,900\nRouter E is learning that hey I can get to\n192.168.1.0 if I go through Router D and\n\n401\n00:21:06,900 --> 00:21:09,870\nit's 5 hops away alright.\n\n402\n00:21:09,870 --> 00:21:15,530\nWhat Router E doesn't know, it doesn't\nknow that its learning its own route.\n\n403\n00:21:15,530 --> 00:21:16,230\nRight?\n\n404\n00:21:16,230 --> 00:21:21,860\nIt's Router E that advertised\nto router to C to B to A to D.\n\n405\n00:21:21,860 --> 00:21:23,430\nAnd now it's back to E again.\n\n406\n00:21:23,430 --> 00:21:26,060\nWe're learning our own route.\n\n407\n00:21:26,060 --> 00:21:30,080\nAnd if this is caused\nby a failure over here.\n\n408\n00:21:31,090 --> 00:21:34,470\nRouter E's directly connected\nroute to that network is gone.\n\n409\n00:21:35,570 --> 00:21:38,800\nAnd so it's looking for\nsome other way to get to 192.168.1.0.\n\n410\n00:21:38,800 --> 00:21:41,310\nIt says there's got to be some other way.\n\n411\n00:21:41,310 --> 00:21:42,000\nOh here's this one.\n\n412\n00:21:42,000 --> 00:21:43,590\nIt's 5 hops away.\n\n413\n00:21:43,590 --> 00:21:45,220\n5 hops.\nWell that's better than not being\n\n414\n00:21:45,220 --> 00:21:46,020\nable to get there at all.\n\n415\n00:21:46,020 --> 00:21:47,560\nLet me go that way.\n\n416\n00:21:47,560 --> 00:21:52,150\nAnd so now, traffic from my network\ncomes all the way over here.\n\n417\n00:21:52,150 --> 00:21:54,630\nAnd then this router says oh,\nyou need to go.\n\n418\n00:21:54,630 --> 00:21:57,600\nOr actually I guess it would go up this\nway since that route exists already.\n\n419\n00:21:57,600 --> 00:21:59,760\nSo we go up this way and\naround, get to Router E.\n\n420\n00:21:59,760 --> 00:22:01,900\nAnd Router E would say oh yeah,\nI can get there.\n\n421\n00:22:01,900 --> 00:22:05,550\nLet me send you over here to Router D and\nnow we're gonna loop.\n\n422\n00:22:05,550 --> 00:22:09,580\nNow our traffic just rattles around,\naround, and around in a circle here.\n\n423\n00:22:09,580 --> 00:22:11,190\nAnd we never get to our destination.\n\n424\n00:22:11,190 --> 00:22:14,280\nAnd we waste bandwidth.\n\n425\n00:22:14,280 --> 00:22:17,360\nThat's a problem with\nDistance Vector Protocols.\n\n426\n00:22:17,360 --> 00:22:20,360\nDistance Vector Protocols do\nnot see the whole topology.\n\n427\n00:22:20,360 --> 00:22:25,520\nSo they can't spot a loop and they rely\non other technologies to solve it.\n\n428\n00:22:25,520 --> 00:22:28,420\nNow we're gonna tackle the other other\ntechnologies in another episode, but\n\n429\n00:22:28,420 --> 00:22:30,370\njust to summarize them so you guys know.\n\n430\n00:22:30,370 --> 00:22:33,684\nThere's things like split horizon,\npoise and reverse.\n\n431\n00:22:33,684 --> 00:22:36,200\nCounter Infinity is the problem, but\n\n432\n00:22:36,200 --> 00:22:40,140\nmaximum metrics, countdown timers or\nhold down timers.\n\n433\n00:22:40,140 --> 00:22:42,920\nWe've got several different\ntechnologies like that in our routers\n\n434\n00:22:42,920 --> 00:22:47,140\nthat are all designed to\nprevent this exact scenario.\n\n435\n00:22:47,140 --> 00:22:50,040\nSo don't feel like, oh,\nI shouldn't use system vector protocols.\n\n436\n00:22:50,040 --> 00:22:50,540\nThey're terrible.\n\n437\n00:22:50,540 --> 00:22:51,780\nThey're gonna create loops.\n\n438\n00:22:51,780 --> 00:22:53,962\nThey've got the technologies\nin there to prevent that.\n\n439\n00:22:53,962 --> 00:22:59,870\nBut non-Distance Vector Protocols,\nthey do their own loop detection.\n\n440\n00:22:59,870 --> 00:23:03,650\nThey do their own loop detection\nbecause they know the whole topology,\n\n441\n00:23:03,650 --> 00:23:04,718\nthey see everything.\n\n442\n00:23:04,718 --> 00:23:08,520\nLink-state and\nPath-vector see the whole topology.\n\n443\n00:23:08,520 --> 00:23:10,770\nAnd they can spot a loop super easy.\n\n444\n00:23:10,770 --> 00:23:12,720\nDistance Vector doesn't.\n\n445\n00:23:12,720 --> 00:23:16,550\nSo they have to have these extra\ntechnologies to support them and\n\n446\n00:23:16,550 --> 00:23:17,110\nprevent the loops.\n\n447\n00:23:17,110 --> 00:23:19,020\nNow, after saying all that.\n\n448\n00:23:19,020 --> 00:23:23,490\nYou might be asking yourself, why would\nI wanna use a Distance Vector Protocol?\n\n449\n00:23:23,490 --> 00:23:26,830\nAnd so, Ronnie, what are some of the good\nthings that might make us wanna use\n\n450\n00:23:26,830 --> 00:23:28,150\na Distance Vector Protocol?\n\n451\n00:23:28,150 --> 00:23:31,410\n>> Some of the good things that might make\nus wanna use the Distance Vector Protocol\n\n452\n00:23:31,410 --> 00:23:32,805\nis a very small network.\n\n453\n00:23:32,805 --> 00:23:36,040\n[LAUGH] [LAUGH] Small networks.\n\n454\n00:23:36,040 --> 00:23:37,460\nBecause they're easy.\n\n455\n00:23:37,460 --> 00:23:39,710\n>> Yeah.\n>> Distance Vector Protocols are very easy\n\n456\n00:23:39,710 --> 00:23:40,970\nto bring up.\n\n457\n00:23:40,970 --> 00:23:45,790\nRIP is probably one of the easiest routing\nprotocols to configure on the planet.\n\n458\n00:23:45,790 --> 00:23:47,100\nIt's slow to converge.\n\n459\n00:23:47,100 --> 00:23:49,790\nIt doesn't pick up failures and\nflip over real fast.\n\n460\n00:23:49,790 --> 00:23:53,360\nSo it's not the greatest there but\nit's super easy to configure.\n\n461\n00:23:53,360 --> 00:23:56,340\nAnd in a small network where\nyou don't have a lot of routes.\n\n462\n00:23:56,340 --> 00:23:58,127\nRIP is perfectly good and you can use it.\n\n463\n00:23:58,127 --> 00:24:01,006\nAnd it's got the technology in\nthere to prevent loops like this.\n\n464\n00:24:01,006 --> 00:24:04,511\nBut because of that way that it\nfunctions it can be a little risky.\n\n465\n00:24:04,511 --> 00:24:07,449\nEIGRP on the other hand is perfectly safe,\nvery powerful.\n\n466\n00:24:07,449 --> 00:24:10,720\nEIGRP could be used to\nroute the entire Internet.\n\n467\n00:24:10,720 --> 00:24:12,325\nIf you wanted, it would do just fine,\n\n468\n00:24:12,325 --> 00:24:16,650\nmulti-protocol support, lot of really\ncool things to be found in EIGRP.\n\n469\n00:24:18,020 --> 00:24:21,170\nSo don't discount them out of hand,\nthey all have their place but\n\n470\n00:24:21,170 --> 00:24:24,450\nthis is how a distance\nvector protocol functions.\n\n471\n00:24:24,450 --> 00:24:28,370\nThat limitation of who you see on the\nnetwork, you only see your neighbors and\n\n472\n00:24:28,370 --> 00:24:31,560\nthat can create some confusion.\n\n473\n00:24:31,560 --> 00:24:34,370\nWell, Ronnie we talked a lot longer about\n\n474\n00:24:34,370 --> 00:24:37,170\ndistance vector than I thought we\nwere going to but let's do this.\n\n475\n00:24:37,170 --> 00:24:38,610\nLet's stop and take a break.\n\n476\n00:24:38,610 --> 00:24:41,810\nWhen we get back, we still have link\nstate, which is my favorite, and\n\n477\n00:24:41,810 --> 00:24:43,580\npath vector that we need to jump into.\n\n478\n00:24:43,580 --> 00:24:46,060\nSo those are some good ones that\nwe'll tackle after the break.\n\n479\n00:24:46,060 --> 00:24:46,905\nSo stay tuned.\n\n480\n00:24:46,905 --> 00:24:48,419\nWe'll be back in just a few.\n\n481\n00:24:48,419 --> 00:24:52,040\n[NOISE] All right,\n\n482\n00:24:52,040 --> 00:24:57,358\nwelcome back everybody.\n\n483\n00:24:57,358 --> 00:25:00,189\nSo in the first segment, we talked\nabout distance vector protocols, and\n\n484\n00:25:00,189 --> 00:25:00,955\nthat was awesome.\n\n485\n00:25:00,955 --> 00:25:03,165\n[LAUGH] So\nnow we're gonna switch gears and\n\n486\n00:25:03,165 --> 00:25:05,706\nwe're gonna talk about\nlink state protocols.\n\n487\n00:25:05,706 --> 00:25:08,890\nNow link state protocols,\nthis is where I normally go.\n\n488\n00:25:08,890 --> 00:25:12,370\nI mentioned earlier in the show that\nwhen I deploy dynamic routing protocol I\n\n489\n00:25:12,370 --> 00:25:16,090\nalmost always do OSPF and\nI have a few reasons for that.\n\n490\n00:25:16,090 --> 00:25:18,810\nOne is, I like link-state protocols and\nthe way they function.\n\n491\n00:25:18,810 --> 00:25:22,170\nBut the main reason I do it is\nbecause OSPF is an industry standard.\n\n492\n00:25:22,170 --> 00:25:27,530\nEvery vendor supports OSPF versus things\nlike EIGRP that are really Cisco only.\n\n493\n00:25:27,530 --> 00:25:31,510\nSo if you wanna be safe deploy\na protocol that you know you can run for\n\n494\n00:25:31,510 --> 00:25:35,880\nyears on end, OSPF is kind of the way to\ngo and that's where I normally end up.\n\n495\n00:25:35,880 --> 00:25:41,830\nNow, link state protocols differ from\ndistance vector protocols in a few areas,\n\n496\n00:25:41,830 --> 00:25:46,730\nbut the main area that's different\nis that a link state router\n\n497\n00:25:46,730 --> 00:25:51,930\ndoesn't just communicate with its\nneighbors it communicates with everybody,\n\n498\n00:25:51,930 --> 00:25:54,810\nall of the routers within\nyour autonomous system.\n\n499\n00:25:54,810 --> 00:26:00,090\nSo that's a lot of communication and\nthat means you get a lot of information.\n\n500\n00:26:00,090 --> 00:26:03,470\nYou get full networking visibility,\nso if there is a loop you know it,\n\n501\n00:26:03,470 --> 00:26:08,280\nif you're learning your own route back\nagain you know it you see whats going on.\n\n502\n00:26:08,280 --> 00:26:11,400\nLink state protocols are very,\nvery intelligent,\n\n503\n00:26:11,400 --> 00:26:15,330\nand that's probably one of their\nbiggest pros, their biggest benefit.\n\n504\n00:26:15,330 --> 00:26:18,680\n>> Yeah, nice thing about link state\nprotocols is you can think about it like\n\n505\n00:26:18,680 --> 00:26:23,630\nbeing an atlas that we used to use instead\nof the GPS system that we have today.\n\n506\n00:26:23,630 --> 00:26:29,630\nWhere we actually have a map to every\npossible location inside of our network.\n\n507\n00:26:29,630 --> 00:26:32,790\nAnd so\nevery router has that full database and\n\n508\n00:26:32,790 --> 00:26:38,540\nthat also means that it doesn't have to\ncommunicate as often as what, the regular\n\n509\n00:26:38,540 --> 00:26:42,910\ndistance vector would have to do and\nit makes it easier for updating too.\n\n510\n00:26:42,910 --> 00:26:46,830\nNow, we only really just get incremental\nchanges that happen throughout\n\n511\n00:26:46,830 --> 00:26:47,910\nour network.\n\n512\n00:26:47,910 --> 00:26:51,450\nSo with the link state type of protocols\n\n513\n00:26:51,450 --> 00:26:53,770\nit really does generate a lot\nof traffic at the beginning.\n\n514\n00:26:53,770 --> 00:26:57,771\nIt normally requires the routers to\nbe a little bit more intensive, but\n\n515\n00:26:57,771 --> 00:27:02,000\nthen once they settle down we really don't\nhave to actually to get regular updates\n\n516\n00:27:02,000 --> 00:27:03,420\nvery often at all.\n\n517\n00:27:03,420 --> 00:27:07,210\n>> Yeah, and the way I normally\ndescribe it is the Spiderman quote.\n\n518\n00:27:07,210 --> 00:27:09,258\nWith great power comes\ngreat responsibility.\n\n519\n00:27:09,258 --> 00:27:11,990\n>> [LAUGH]\n>> With OSPF it handles\n\n520\n00:27:11,990 --> 00:27:14,950\na lot of information, link state\nprotocols in general they handle a lot\n\n521\n00:27:14,950 --> 00:27:18,860\nof information and\nthat equals overhead all right?\n\n522\n00:27:18,860 --> 00:27:22,950\nOf the various types of routing protocols\nthat we talk about link state protocols\n\n523\n00:27:22,950 --> 00:27:26,480\neasily consume the most cpu and\nthe most ram.\n\n524\n00:27:26,480 --> 00:27:30,530\nSo if you're running one of\nthose really low end routes\n\n525\n00:27:30,530 --> 00:27:32,480\nlike a three digit router right?\n\n526\n00:27:32,480 --> 00:27:36,240\nLike the Cisco 800's if you're running\none of those and you're in a network with\n\n527\n00:27:36,240 --> 00:27:39,740\nthousands upon thousands of routes, the\nrouter's not gonna be able to handle it.\n\n528\n00:27:39,740 --> 00:27:42,900\nIt's gonna consume too much CPU,\nand it's gonna make poor decisions.\n\n529\n00:27:42,900 --> 00:27:46,170\nIt's gonna make slow updates, and\nyou're gonna have poor network conversion.\n\n530\n00:27:46,170 --> 00:27:48,940\nBut if you're running a nicer router,\na 2900, a 7200,\n\n531\n00:27:48,940 --> 00:27:50,970\nsomething like that,\nit'll handle it just fine.\n\n532\n00:27:50,970 --> 00:27:54,930\nIt's designed to handle it,\nit's got hardware for that, so OSPF but\n\n533\n00:27:54,930 --> 00:27:55,965\nI keep saying OSPF.\n\n534\n00:27:55,965 --> 00:27:58,160\n>> [LAUGH]\n>> There are other link state protocols\n\n535\n00:27:58,160 --> 00:28:00,540\nout there like IS-IS is\n\n536\n00:28:00,540 --> 00:28:02,000\nanother one [LAUGH]\n>> [LAUGH]\n\n537\n00:28:02,000 --> 00:28:04,270\n>> So intermediate system to\n\n538\n00:28:04,270 --> 00:28:05,870\nintermediate system.\n\n539\n00:28:05,870 --> 00:28:09,300\nThere are other link state protocols\nthat are out there they all\n\n540\n00:28:09,300 --> 00:28:14,200\nfunction on the same basic premise,\nthey communicate with the entire network.\n\n541\n00:28:14,200 --> 00:28:17,710\nNow on the exam they don't cover IS-IS\nany more, but they do cover OSPF,\n\n542\n00:28:17,710 --> 00:28:21,900\nwe're gonna tackle that in later episodes\nbut just keep in mind that it's using\n\n543\n00:28:21,900 --> 00:28:26,530\nmultitask communications between all\nthe routers to get full visibility.\n\n544\n00:28:26,530 --> 00:28:30,230\nNow link-state protocols have\nto use something for a metric.\n\n545\n00:28:30,230 --> 00:28:34,000\nIn distance vector, remember how\nwe said RIP uses hop count and\n\n546\n00:28:34,000 --> 00:28:37,170\nEIGRP uses bandwidth and delay.\n\n547\n00:28:37,170 --> 00:28:39,750\nWith OSPF, it just uses bandwidth.\n\n548\n00:28:39,750 --> 00:28:41,750\nIt uses bandwidth as its metric and\nthat's it.\n\n549\n00:28:41,750 --> 00:28:43,810\nSo nothing crazy and complex there.\n\n550\n00:28:43,810 --> 00:28:46,450\nIn fact, the metric,\nit might look complex but\n\n551\n00:28:46,450 --> 00:28:48,280\nat the end of the day it's\na really simple formula.\n\n552\n00:28:48,280 --> 00:28:53,060\nIt's just 100 megabits divided by\nwhatever the bandwidth of that line is,\n\n553\n00:28:53,060 --> 00:28:54,790\nthat's the metric for that line.\n\n554\n00:28:54,790 --> 00:28:58,310\nSo if I have a 10 megabit line,\n100 megabit divided by 10 megabit is 10.\n\n555\n00:28:58,310 --> 00:29:04,380\nI guess it would actually done in bits,\nso it would be 10 million or\n\n556\n00:29:04,380 --> 00:29:08,660\n10 thousand bits, bad math there, but\nthat would be the metric for that line.\n\n557\n00:29:08,660 --> 00:29:13,050\nBut, it's an aggregate metric,\nit adds up the line across the way and\n\n558\n00:29:13,050 --> 00:29:14,190\nlet me show you why that's important.\n\n559\n00:29:14,190 --> 00:29:16,170\nLet me bring this diagram up here.\n\n560\n00:29:16,170 --> 00:29:19,970\nThis is that same network from earlier\nin the show and remember that a distance\n\n561\n00:29:19,970 --> 00:29:24,070\nvector protocol would look at hopcount,\nand so that bottom route was chosen.\n\n562\n00:29:24,070 --> 00:29:24,910\nAnd I made the comment.\n\n563\n00:29:24,910 --> 00:29:30,250\nI said well what if that bottom link was\na series of T1 lines 1.5 megabit right,\n\n564\n00:29:30,250 --> 00:29:33,650\nand the upper link was Metro E and\nmaybe it's a gigabit.\n\n565\n00:29:33,650 --> 00:29:36,020\nWell when your router goes\nto make that decision\n\n566\n00:29:37,230 --> 00:29:40,340\nif it just looking hop count\nit'll pick the slower link.\n\n567\n00:29:40,340 --> 00:29:42,504\nBut if it's looking at bandwidth right?\n\n568\n00:29:42,504 --> 00:29:47,260\nWe've got gig, gig, gig, 1.544 megabit\nacross the bottom it's gonna look\n\n569\n00:29:47,260 --> 00:29:51,510\nat those and it's gonna say let's go\nthe top route, the top route is better.\n\n570\n00:29:52,620 --> 00:29:55,800\nBut think about the things that\ncould try and confuse this.\n\n571\n00:29:55,800 --> 00:29:59,368\nWhat if router a actually\njust had two T1 lines?\n\n572\n00:29:59,368 --> 00:30:03,080\nLike this all right.\n\n573\n00:30:03,080 --> 00:30:09,030\nWhen router a calculates its metric if\nit was only looking at the next link,\n\n574\n00:30:09,030 --> 00:30:09,620\nthese are both T1's.\n\n575\n00:30:09,620 --> 00:30:10,950\nSo they're equal.\n\n576\n00:30:10,950 --> 00:30:15,070\nIt'll treat them the same and that's it,\nit won't know the difference.\n\n577\n00:30:15,070 --> 00:30:19,000\nBut a link state protocol doesn't\njust look at its neighbor,\n\n578\n00:30:19,000 --> 00:30:20,380\nit looks all the way across.\n\n579\n00:30:20,380 --> 00:30:24,270\nSo Router A will know that this link down\nhere is a gigabit and that this link\n\n580\n00:30:24,270 --> 00:30:29,010\ndown here is a gigabit versus this link\nover here which is only 1.5 megabit.\n\n581\n00:30:29,010 --> 00:30:33,410\nSo going across the top\nroute it sees that we've got\n\n582\n00:30:33,410 --> 00:30:38,750\na higher bandwidth on the whole versus\nacross on the bottom where we don't.\n\n583\n00:30:38,750 --> 00:30:40,200\nIt'll know that difference.\n\n584\n00:30:40,200 --> 00:30:43,130\nNow, that may not impact things very much.\n\n585\n00:30:43,130 --> 00:30:44,950\nIt may impact them a lot.\n\n586\n00:30:44,950 --> 00:30:47,747\nIn the scenario where the bottom route,\n\n587\n00:30:47,747 --> 00:30:51,458\nlet's say that this is only\na 768 K link down here.\n\n588\n00:30:51,458 --> 00:30:56,282\nRight, so on the bottom,\nwe've got 1.544 megabit then 768k,\n\n589\n00:30:56,282 --> 00:30:59,930\nup at the top,\nI've got 1.544, 1 gig, 1 gig.\n\n590\n00:30:59,930 --> 00:31:01,359\nWhen it looks at these,\n\n591\n00:31:01,359 --> 00:31:04,870\nit has to figure out what\nthe slowest point on that link is.\n\n592\n00:31:04,870 --> 00:31:07,630\nRight, cause it doesn't\nmatter if this is a gig\n\n593\n00:31:07,630 --> 00:31:11,210\nif I can only get 1.5 megas\nof traffic up to it right?\n\n594\n00:31:11,210 --> 00:31:14,390\nSo when our network goes to make\na decision it looks at the whole path and\n\n595\n00:31:14,390 --> 00:31:18,980\nsays alright I'm gonna treat\nthis whole path as 1.5 megabit.\n\n596\n00:31:18,980 --> 00:31:20,640\nBut the path on the bottom,\n\n597\n00:31:20,640 --> 00:31:26,180\nI'll treat that whole path as 768 K cuz\nthat's the slowest link in that chain.\n\n598\n00:31:26,180 --> 00:31:30,330\nSo it has to be aware of those downstream\nthings to make the right decision for\n\n599\n00:31:30,330 --> 00:31:31,230\nthe next hop.\n\n600\n00:31:31,230 --> 00:31:32,780\nThat ultimate decision it makes.\n\n601\n00:31:32,780 --> 00:31:34,400\nWhich interface do I go out?\n\n602\n00:31:34,400 --> 00:31:37,270\nRight, and so\nit will choose to go out this top one,\n\n603\n00:31:37,270 --> 00:31:40,310\nbecause it understands the full\nextent of the network.\n\n604\n00:31:40,310 --> 00:31:42,288\nThat's the power of a link state protocol.\n\n605\n00:31:42,288 --> 00:31:47,710\nAll right, so\nlink state protocols are very powerful.\n\n606\n00:31:47,710 --> 00:31:50,570\nThey are designed for interior use.\n\n607\n00:31:50,570 --> 00:31:54,410\nYou could use them exterior, this is one\nof the comments they make about OSPF.\n\n608\n00:31:54,410 --> 00:31:57,242\nIs that you could route the entire\nInternet using OSPF if you wanted to.\n\n609\n00:31:57,242 --> 00:31:59,136\nThey don't for various reasons but\n\n610\n00:31:59,136 --> 00:32:02,872\nthe main thing is just the amount\nof processing power that's needed.\n\n611\n00:32:02,872 --> 00:32:04,815\nIn an interior network, in a LAN,\n\n612\n00:32:04,815 --> 00:32:09,440\nyou typically have enough power to handle\nthat just fine, and they do a great job.\n\n613\n00:32:11,770 --> 00:32:15,920\nAll right, so that's kind of\nthe basics of a link-state protocol.\n\n614\n00:32:15,920 --> 00:32:16,600\nThe positives,\n\n615\n00:32:16,600 --> 00:32:20,260\nit makes really great decisions\ndepending on the protocol you choose.\n\n616\n00:32:20,260 --> 00:32:23,010\nIf it's OSPF,\nit's based entirely on bandwidth.\n\n617\n00:32:23,010 --> 00:32:23,940\nYou can influence it.\n\n618\n00:32:23,940 --> 00:32:25,550\nWe'll see that later on, too.\n\n619\n00:32:25,550 --> 00:32:28,020\nBut no loop detection is necessary.\n\n620\n00:32:28,020 --> 00:32:31,890\nThey use cool formulas to be able\nto calculate out that full path and\n\n621\n00:32:31,890 --> 00:32:32,520\nmake the right decision.\n\n622\n00:32:34,810 --> 00:32:36,735\nAll right,\nI think that's about it for that one.\n\n623\n00:32:36,735 --> 00:32:38,355\nIs there anything else we\nneed to mention on that one?\n\n624\n00:32:38,355 --> 00:32:39,301\n>> No, I don't think so.\n>> Okay.\n\n625\n00:32:39,301 --> 00:32:40,541\n>> [LAUGH]\n>> Well,\n\n626\n00:32:40,541 --> 00:32:44,790\nI guess one last thing to throw\nout about link-state protocols.\n\n627\n00:32:44,790 --> 00:32:47,100\nI mentioned they have that\nfull view of the network.\n\n628\n00:32:47,100 --> 00:32:50,220\nIt's not actually the same\nview on each router.\n\n629\n00:32:50,220 --> 00:32:53,960\nWhat each router does is each router\ntreats itself as if it was the center\n\n630\n00:32:53,960 --> 00:32:54,590\nof the network.\n\n631\n00:32:54,590 --> 00:32:58,020\nIt says I am the main\npart of this network.\n\n632\n00:32:58,020 --> 00:33:01,120\nAnd then it builds a tree that\nbranches out from itself to\n\n633\n00:33:01,120 --> 00:33:03,210\nfigure out all of\nthe different destinations.\n\n634\n00:33:03,210 --> 00:33:08,080\nSo each router has its own tree,\nits own little view, its\n\n635\n00:33:08,080 --> 00:33:12,180\nown map of the network, and so they can't\njust share that map between each other.\n\n636\n00:33:12,180 --> 00:33:15,420\nSo you can't have like one\nreally beefy router and\n\n637\n00:33:15,420 --> 00:33:17,330\nthen a bunch of crummy cheap ones.\n\n638\n00:33:17,330 --> 00:33:20,410\nThey all have to be able to generate and\nprocess that tree itself, right.\n\n639\n00:33:20,410 --> 00:33:23,350\nYou gotta have some good balance there.\n\n640\n00:33:23,350 --> 00:33:23,957\nAll right, but\n\n641\n00:33:23,957 --> 00:33:27,200\nthe big benefit of technologies like\nthis is they are open standards.\n\n642\n00:33:27,200 --> 00:33:28,510\nEvery vendor supports them.\n\n643\n00:33:28,510 --> 00:33:33,020\nA lot of people end up going\nwith things like OSPF.\n\n644\n00:33:33,020 --> 00:33:35,826\nAll right, the last type of routing\nprotocol we're gonna talk about is\n\n645\n00:33:35,826 --> 00:33:36,540\nthe path vector.\n\n646\n00:33:37,795 --> 00:33:41,380\nPath vector is the most strange\nof the three types, and if you're\n\n647\n00:33:41,380 --> 00:33:46,190\njust coming from the CCNA show, you really\nhaven't worked with path vector at all.\n\n648\n00:33:46,190 --> 00:33:47,570\nSo let's talk about how these work.\n\n649\n00:33:48,760 --> 00:33:54,690\nPath vector is designed for\nreally, really big networks, okay.\n\n650\n00:33:54,690 --> 00:33:58,360\nAnd, just to give you an idea of the\nscope, there's really only one network out\n\n651\n00:33:58,360 --> 00:34:00,291\nthere that needs this, and\nthat's the internet, all right.\n\n652\n00:34:01,540 --> 00:34:04,360\nPath vector protocols were designed for\nthe internet.\n\n653\n00:34:04,360 --> 00:34:08,155\nA massive network containing\nmillions of nodes,\n\n654\n00:34:08,155 --> 00:34:13,956\ncontaining hundreds of thousands of\nnetworks, that's a lot to deal with.\n\n655\n00:34:13,956 --> 00:34:20,680\nLet me see, what is the website\nthat's got the BGP route statistics.\n\n656\n00:34:20,680 --> 00:34:21,960\nIt's got a weird name.\n\n657\n00:34:21,960 --> 00:34:23,435\nI always forget it.\n\n658\n00:34:23,435 --> 00:34:24,414\nPotaroo, that's it.\n\n659\n00:34:24,414 --> 00:34:25,482\n>> Potaroo.\n>> Potaroo.\n\n660\n00:34:25,482 --> 00:34:27,747\nSo BGP, the Border Gateway Protocol,\n\n661\n00:34:27,747 --> 00:34:31,790\nthat is the routing protocol\nthat's in use across the internet.\n\n662\n00:34:31,790 --> 00:34:37,050\nIt is a path vector protocol, and what\nthey're showing here is if you were to get\n\n663\n00:34:37,050 --> 00:34:40,990\nthe BGP RIB for the internet, that's the\nrouting information base, they're showing\n\n664\n00:34:40,990 --> 00:34:45,270\neach year how many more routes were added,\nand you can see the dot com boom\n\n665\n00:34:45,270 --> 00:34:48,875\nright here where things really started to\nskyrocket and then all the bankruptcies.\n\n666\n00:34:48,875 --> 00:34:51,010\n>> [LAUGH]\n>> And then Facebook, and\n\n667\n00:34:51,010 --> 00:34:52,890\nthings started picking back up again.\n\n668\n00:34:52,890 --> 00:34:57,812\nSo here we are now in 2015, and\nyou can see there's over 500,000\n\n669\n00:34:57,812 --> 00:35:00,990\nprefixes In the BGP routing table.\n\n670\n00:35:00,990 --> 00:35:05,336\nSo if you're an internet router, there's\nover 500,000 networks that are out there.\n\n671\n00:35:05,336 --> 00:35:10,473\nHow do you plan all the different\npaths across 500,000 networks?\n\n672\n00:35:10,473 --> 00:35:12,200\nAnd the shorter answer is you don't.\n\n673\n00:35:12,200 --> 00:35:13,100\nIt's just too much.\n\n674\n00:35:13,100 --> 00:35:16,330\nRouters can't handle\nthat level of decision.\n\n675\n00:35:16,330 --> 00:35:21,770\nSo instead, we have to break it\nup into manageable chunks, and\n\n676\n00:35:21,770 --> 00:35:24,350\nthat's what a path vector protocol does.\n\n677\n00:35:24,350 --> 00:35:29,260\nWe take something like the internet,\nand we break it up into chunks called\n\n678\n00:35:29,260 --> 00:35:35,040\nautonomous systems, and\neach autonomous system might have 5,\n\n679\n00:35:35,040 --> 00:35:41,060\n500, 5000 networks inside of it, but\nit's just one big autonomous system.\n\n680\n00:35:41,060 --> 00:35:45,000\nAnd so when we say, when we need\nto get from point A to point B,\n\n681\n00:35:45,000 --> 00:35:47,830\nwe don't need to know all\nthe nitty-gritty details in-between.\n\n682\n00:35:47,830 --> 00:35:51,850\nWe just need to know what autonomous\nsystems do we need to pass through\n\n683\n00:35:51,850 --> 00:35:54,060\nto get to that destination, right.\n\n684\n00:35:54,060 --> 00:35:57,560\nAnd that's how a path factor protocol\nworks, making something very big and\n\n685\n00:35:57,560 --> 00:35:59,540\ncomplex very, very simple.\n\n686\n00:36:00,770 --> 00:36:03,870\nNow, there's some pros and cons with\npath vector and the way that they work,\n\n687\n00:36:03,870 --> 00:36:07,570\nbut at a really basic level,\nthat's how they function.\n\n688\n00:36:08,920 --> 00:36:12,640\nAll right, so let's make this\nmore complex now, all right.\n\n689\n00:36:12,640 --> 00:36:15,160\nThe autonomous systems, what are those?\n\n690\n00:36:15,160 --> 00:36:18,265\nWell, in BGP an autonomous system\ntypically represents an internet\n\n691\n00:36:18,265 --> 00:36:19,660\nservice provider.\n\n692\n00:36:19,660 --> 00:36:22,270\nSo this is normally one\nof the backbone networks,\n\n693\n00:36:22,270 --> 00:36:27,140\nyour ISP, your cable company, your phone\ncompany if they've got DSL service.\n\n694\n00:36:27,140 --> 00:36:29,850\nThey will typically have\nan autonomous system number.\n\n695\n00:36:29,850 --> 00:36:32,410\nBut you as a private company might, also.\n\n696\n00:36:32,410 --> 00:36:39,030\nIf you have connections to more than one\nISP and you own your own IP address block,\n\n697\n00:36:39,030 --> 00:36:42,800\nin other words you're not just renting\nIPs from your ISP, if you own your own IP\n\n698\n00:36:42,800 --> 00:36:46,940\nblock, you very well may be assigned\nyour own autonomous system number.\n\n699\n00:36:46,940 --> 00:36:52,340\nThe ARIN, the people that manage IP\naddress assignments here in America,\n\n700\n00:36:52,340 --> 00:36:55,710\nthey also manage the autonomous\nsystem assignments, too.\n\n701\n00:36:55,710 --> 00:36:57,230\nSo you can get the AS number assigned,\n\n702\n00:36:57,230 --> 00:37:00,720\nit all comes down from the IANA\nthat issues this stuff out.\n\n703\n00:37:00,720 --> 00:37:04,930\nSo typically it's an ISP, but\nit could be you privately.\n\n704\n00:37:04,930 --> 00:37:08,490\nAnd that's where I know I get questions\nfrom a lot of people in the past saying\n\n705\n00:37:08,490 --> 00:37:11,010\nwhy do we have to learn BGP for\nCCNP ROUTE?\n\n706\n00:37:11,010 --> 00:37:13,700\nAren't we focused on enterprise\nrouting technologies?\n\n707\n00:37:13,700 --> 00:37:18,550\nShouldn't that be in the CCSP,\nthe service provider certification?\n\n708\n00:37:18,550 --> 00:37:19,300\nWell, it is.\n\n709\n00:37:19,300 --> 00:37:21,100\nIt's all over the service provider one.\n\n710\n00:37:21,100 --> 00:37:25,520\nIf you go for CCSP,\nyou will get just slammed with BGP stuff.\n\n711\n00:37:25,520 --> 00:37:28,890\nBut on our side, we need to learn it,\ntoo, because we're the edge.\n\n712\n00:37:28,890 --> 00:37:30,214\nWe connect to these networks.\n\n713\n00:37:30,214 --> 00:37:31,003\nIt's out there.\n\n714\n00:37:31,003 --> 00:37:35,944\nWe use it, and if we own our own IPs,\nthat edge extends into our network,\n\n715\n00:37:35,944 --> 00:37:40,070\nand now we've gotta be able\nto manage to a basic level.\n\n716\n00:37:40,070 --> 00:37:44,070\nSo to pass the CCNP ROUTE exam, you've got\nto know how BGP works, and you've got to\n\n717\n00:37:44,070 --> 00:37:47,570\nknow how to implement it, not on\nthe internet scale, but on the enterprise\n\n718\n00:37:47,570 --> 00:37:52,500\nscale, something much smaller, and\nwe're gonna see that down the road.\n\n719\n00:37:52,500 --> 00:37:57,010\nNow, if I'm sitting over here\non this 192.168.0 network, and\n\n720\n00:37:57,010 --> 00:38:01,470\nI'm trying to access a workstation\nout on the 192.168.1 network,\n\n721\n00:38:01,470 --> 00:38:02,910\nI've gotta figure out how to get there.\n\n722\n00:38:02,910 --> 00:38:04,797\nAnd I probably got some router\nthat's gonna send me along.\n\n723\n00:38:04,797 --> 00:38:08,209\nAnd in my router, it's gonna look at\nthe routing table, and it's gonna say,\n\n724\n00:38:08,209 --> 00:38:10,446\nall right I need to find 192.168.1.0.\n\n725\n00:38:10,446 --> 00:38:11,607\nHow do I get there?\n\n726\n00:38:11,607 --> 00:38:15,750\nAnd it's gonna look at the path,\nthe path vector.\n\n727\n00:38:15,750 --> 00:38:18,280\nAnd there's two paths to get there.\n\n728\n00:38:18,280 --> 00:38:24,610\nI could go through AS 65401 and\nthen jump up to 65429 and\n\n729\n00:38:24,610 --> 00:38:30,240\nthen jump down to 65417 and\nthen jump over to my destination, or\n\n730\n00:38:30,240 --> 00:38:37,080\nI could go to 65401 and jump over to 65417\nand then make my destination, right.\n\n731\n00:38:37,080 --> 00:38:40,020\nTwo different paths,\nwhich one's the best one?\n\n732\n00:38:41,060 --> 00:38:42,050\nThe shorter one.\n\n733\n00:38:42,050 --> 00:38:44,260\nMuch like a distance vector protocol,\n\n734\n00:38:44,260 --> 00:38:47,700\npath vector cares simply about,\nwe'll call it, hop count.\n\n735\n00:38:47,700 --> 00:38:50,940\nThey're not true hops, right, because\nwhen we talk about an autonomous system,\n\n736\n00:38:50,940 --> 00:38:53,300\nthere could be hundreds of\nrouters inside of there.\n\n737\n00:38:53,300 --> 00:38:55,160\nSo there can be many, many hops.\n\n738\n00:38:55,160 --> 00:38:57,341\nSo we're really just talking\nabout AS hops, right,\n\n739\n00:38:57,341 --> 00:38:58,750\nhops across autonomous systems.\n\n740\n00:38:58,750 --> 00:39:03,771\nSo if we were to kinda break\nthis down into paths, we've got,\n\n741\n00:39:03,771 --> 00:39:08,999\nif I can type, oh great,\nnow I'm doing all sorts of stuff here.\n\n742\n00:39:08,999 --> 00:39:11,087\nAll right, so I've got path one,\n\n743\n00:39:11,087 --> 00:39:15,987\nwhich we can't read because I've chosen\nblack, apparently, as my coloring.\n\n744\n00:39:19,954 --> 00:39:24,505\nAll right, so we've got path one,\n\n745\n00:39:24,505 --> 00:39:31,041\nwhich is 65401, 65429, 65417.\n\n746\n00:39:31,041 --> 00:39:34,827\nAnd then we've got path two,\n\n747\n00:39:34,827 --> 00:39:39,533\nwhich is 65401, 65417.\n\n748\n00:39:39,533 --> 00:39:42,470\nOkay, there's the two\npaths that I can pick.\n\n749\n00:39:42,470 --> 00:39:45,320\nAnd it's just listing the AS\nnumbers that I have to\n\n750\n00:39:45,320 --> 00:39:46,700\npass through to get to that destination.\n\n751\n00:39:46,700 --> 00:39:49,070\nThat's how a path vector\nprotocol functions.\n\n752\n00:39:50,220 --> 00:39:53,480\nLoop detection inside a path\nvector is super easy.\n\n753\n00:39:53,480 --> 00:39:57,428\nIn link state, I said how the link state\nprotocols see the whole network, and\n\n754\n00:39:57,428 --> 00:39:59,144\nthat's how they can spot a loop.\n\n755\n00:39:59,144 --> 00:40:02,522\nWell, with path vector, just by nature,\nyou can't see the whole network.\n\n756\n00:40:02,522 --> 00:40:04,322\nThe network is too big, right.\n\n757\n00:40:04,322 --> 00:40:07,351\nBut we don't have to,\nbecause, for example,\n\n758\n00:40:07,351 --> 00:40:12,870\nif I were to have a loop, right,\nlet's draw a loop, like what might happen.\n\n759\n00:40:12,870 --> 00:40:15,140\nWhere something might go like this.\n\n760\n00:40:15,140 --> 00:40:20,220\nLet me make that bigger so we can see it.\n\n761\n00:40:22,230 --> 00:40:23,090\nThere we go.\n\n762\n00:40:23,090 --> 00:40:24,810\nSo that'll loop like this.\n\n763\n00:40:24,810 --> 00:40:25,930\nThat's a routing loop,\n\n764\n00:40:25,930 --> 00:40:28,600\nand really the routing loop\nprobably wouldn't branch back out.\n\n765\n00:40:28,600 --> 00:40:31,120\nIt would probably just continue to spiral.\n\n766\n00:40:31,120 --> 00:40:34,090\nAnd so, if it continues to spiral,\nwhat would that look like?\n\n767\n00:40:34,090 --> 00:40:38,405\nSo if we had a path 3,\nit might look something like this.\n\n768\n00:40:38,405 --> 00:40:44,428\n65401,65429, ,65417,\n\n769\n00:40:44,428 --> 00:40:51,725\n65401, 65429, and then, so on and so on.\n\n770\n00:40:51,725 --> 00:40:58,033\nCreating that loop.\n\n771\n00:40:58,033 --> 00:41:02,050\nAll the path vector protocol\nhas to do is look and\n\n772\n00:41:02,050 --> 00:41:05,580\nsay, do I see the same number twice,\nright?\n\n773\n00:41:05,580 --> 00:41:07,870\nI've got 65401 here,\nI've got 65401 here, that's a loop.\n\n774\n00:41:07,870 --> 00:41:09,210\nDone.\nYou found a loop,\n\n775\n00:41:09,210 --> 00:41:12,570\nthrow that route in the trash,\nit's garbage, right?\n\n776\n00:41:12,570 --> 00:41:14,670\nSo loop detection is super easy.\n\n777\n00:41:14,670 --> 00:41:17,050\nAnd when you've got a network\nthe size of the Internet and\n\n778\n00:41:17,050 --> 00:41:22,290\nyou've got thousands of ISPs across\nthe globe putting routes in.\n\n779\n00:41:22,290 --> 00:41:24,250\nAny one of them can make a mistake and\nthey do.\n\n780\n00:41:24,250 --> 00:41:27,490\nThey do make mistakes and\nit's got to be caught and filtered out.\n\n781\n00:41:27,490 --> 00:41:30,230\nThere was a big one,\nthat was like 10 years ago now,\n\n782\n00:41:30,230 --> 00:41:36,065\nwhere an ISP made a mistake in China,\n\n783\n00:41:36,065 --> 00:41:41,375\nand it caused over 30% of Internet to be\nrouted through China's Great Firewall,\n\n784\n00:41:41,375 --> 00:41:44,375\nand there was a lot of conspiracy\ntheories at the time, was it a mistake,\n\n785\n00:41:44,375 --> 00:41:47,365\nwere they actually flowing traffic\nthat way on purpose, who knows.\n\n786\n00:41:47,365 --> 00:41:52,715\nBut it just showed a mistake in BGP could\nsend traffic spiraling off into nowhere,\n\n787\n00:41:52,715 --> 00:41:54,155\nand that's not so good.\n\n788\n00:41:54,155 --> 00:41:57,970\nSo being able to quickly\nidentify loops like this\n\n789\n00:41:57,970 --> 00:42:01,650\nwithout a crazy complex algorithm\nis what makes this powerful.\n\n790\n00:42:01,650 --> 00:42:07,180\nIf we see two path names like that,\ntwo AS numbers that it's the same one,\n\n791\n00:42:07,180 --> 00:42:10,120\nthen we know it's a loop and\nwe throw it out.\n\n792\n00:42:10,120 --> 00:42:15,102\nThe exception is when you see two\nof them and it's in a row, so\n\n793\n00:42:15,102 --> 00:42:20,894\nif I see like, 65401, 65401,\nand then so on, like that,\n\n794\n00:42:24,238 --> 00:42:28,540\nAll right, that's not a loop, because\nit's 65401, 65401 again, 65429, 65417.\n\n795\n00:42:28,540 --> 00:42:35,430\nYou'll see that sometimes when people\nare trying to manipulate the path.\n\n796\n00:42:36,770 --> 00:42:37,370\nLet's say for\n\n797\n00:42:37,370 --> 00:42:42,430\nexample that I wanted to make sure\nthat path number one was the winner.\n\n798\n00:42:42,430 --> 00:42:45,630\nI wanted to make sure that\nit was the best path.\n\n799\n00:42:45,630 --> 00:42:48,820\nPath number two is the best one\nright now because it's the shortest.\n\n800\n00:42:48,820 --> 00:42:51,585\nWell, there's not real metric behind BGP.\n\n801\n00:42:51,585 --> 00:42:54,660\nIt doesn't look at bandwidth,\nit doesn't look at delay.\n\n802\n00:42:54,660 --> 00:42:57,300\nIt doesn't look at MTU or\nanything like that.\n\n803\n00:42:57,300 --> 00:42:58,950\nIt just looks the path.\n\n804\n00:42:58,950 --> 00:43:02,580\nSo the way we manipulate routes inside\nof a path vector protocol is to\n\n805\n00:43:02,580 --> 00:43:04,000\nmanipulate that path.\n\n806\n00:43:04,000 --> 00:43:08,950\nAnd so you can put dummy ASs in here, to\n\n807\n00:43:08,950 --> 00:43:14,350\nmake that path appear longer, all right.\n\n808\n00:43:14,350 --> 00:43:18,636\nSo now this bottom path,\n65401.65401.65401.65417, right,\n\n809\n00:43:18,636 --> 00:43:19,890\nit's still valid.\n\n810\n00:43:19,890 --> 00:43:24,270\nThat is the path across here but\nnow it looks longer than path one and\n\n811\n00:43:24,270 --> 00:43:25,970\nI'll pick path one instead.\n\n812\n00:43:25,970 --> 00:43:29,840\nSo you'll see manipulations like that if\nyou look at the real VGP tables out there\n\n813\n00:43:29,840 --> 00:43:33,300\non the internet, you'll see manipulations\nlike that pretty frequently and\n\n814\n00:43:33,300 --> 00:43:35,890\nit's people basically people\ninfluencing the path as being chosen,\n\n815\n00:43:35,890 --> 00:43:37,280\nthat doesn't count as a loop.\n\n816\n00:43:37,280 --> 00:43:42,090\nIt's manipulating which path\nloops shorter, all right.\n\n817\n00:43:42,090 --> 00:43:44,950\nSo, that's how a path\nvector protocol works.\n\n818\n00:43:44,950 --> 00:43:47,540\nNow, you might be asking\nyourself a big question here,\n\n819\n00:43:47,540 --> 00:43:51,880\nwhich is, all right,\nnow that my computer knows the way to get\n\n820\n00:43:51,880 --> 00:43:56,980\nto the destination computer is 6541 to\n65417, how does it actually get there?\n\n821\n00:43:56,980 --> 00:43:59,500\nAnd that's the funny\npart about path vectors.\n\n822\n00:43:59,500 --> 00:44:00,030\nIt doesn't know.\n\n823\n00:44:01,290 --> 00:44:04,230\nIt says, well, here's the autonomous\nsystems you need to go through.\n\n824\n00:44:04,230 --> 00:44:05,110\nGood luck getting there.\n\n825\n00:44:05,110 --> 00:44:10,190\nA path vector protocol by itself can't\nget you from point A to point B.\n\n826\n00:44:10,190 --> 00:44:11,620\nIt doesn't know how to do it.\n\n827\n00:44:11,620 --> 00:44:14,550\nIt doesn't know the individual\nhops along the way.\n\n828\n00:44:14,550 --> 00:44:15,700\nIt knows the big picture.\n\n829\n00:44:16,700 --> 00:44:20,500\nBut once your router knows the big picture\nit can figure out things from there.\n\n830\n00:44:20,500 --> 00:44:22,610\nYour router can say, all right, well,\n\n831\n00:44:22,610 --> 00:44:27,080\nI need to go to AS 65401 first,\nwhat's my quickest way there?\n\n832\n00:44:27,080 --> 00:44:30,420\nAnd it looks and says, well, I've got this\nlink, that connects to a router right\n\n833\n00:44:30,420 --> 00:44:36,120\nhere, and that router is in AS 65401,\nand so you make that jump.\n\n834\n00:44:36,120 --> 00:44:39,550\nYou jump from your network\nright over to that router\n\n835\n00:44:39,550 --> 00:44:44,070\nbecause that's the one that's\nclosest to get you over to AS 65401.\n\n836\n00:44:44,070 --> 00:44:48,500\nAnd at that router it says okay well,\n\n837\n00:44:48,500 --> 00:44:52,680\nnow you're here you're in AS 65401,\nwe need to get you to 192.168.1.0.\n\n838\n00:44:52,680 --> 00:45:00,720\nThe next hop, or next AS, is 65417,\nhow do I get to there as fast as possible?\n\n839\n00:45:00,720 --> 00:45:05,730\nAnd so inside of this AS, it looks\nat the routers to figure out which\n\n840\n00:45:05,730 --> 00:45:09,880\nones connected to 65417 and it says all\nright we've got this router over here\n\n841\n00:45:09,880 --> 00:45:12,820\nthat's connected to 65417,\nlet's go to that guy.\n\n842\n00:45:12,820 --> 00:45:14,170\nHow do we get there?\n\n843\n00:45:14,170 --> 00:45:17,330\nWell, there will be\nan interior routing protocol.\n\n844\n00:45:17,330 --> 00:45:19,400\nThere'll be an IGP behind the scenes.\n\n845\n00:45:19,400 --> 00:45:24,180\nThere will be RIP, or OSPF, or\nEIGRP running under the hood that'll say\n\n846\n00:45:24,180 --> 00:45:27,900\nto get from this router to this router,\nhere's the path you take.\n\n847\n00:45:27,900 --> 00:45:34,200\nAnd that IGP is what's doing\nthe internal routing to get us\n\n848\n00:45:34,200 --> 00:45:40,240\nfrom one router to the next on\nthe inside of that network.\n\n849\n00:45:41,290 --> 00:45:42,751\nAll right, so that's the IGP kicking in.\n\n850\n00:45:42,751 --> 00:45:47,116\nAnd then once we get there,\nthe path vector protocol kicks back in so\n\n851\n00:45:47,116 --> 00:45:51,265\nBGP or whatever it is that we're\nusing kicks in and it says okay.\n\n852\n00:45:51,265 --> 00:45:56,675\nWell we're jumping from this AS over to\nthis other AS to get to that destination.\n\n853\n00:45:56,675 --> 00:45:58,700\nSo it jumps us across that lane.\n\n854\n00:45:58,700 --> 00:46:03,521\nAnd then once we get to that router\non the other side it says okay great,\n\n855\n00:46:03,521 --> 00:46:05,423\nnow we're in 65417.\n\n856\n00:46:05,423 --> 00:46:08,454\n65417 is connected to this other network.\n\n857\n00:46:08,454 --> 00:46:09,254\nWe need to get you there.\n\n858\n00:46:09,254 --> 00:46:11,850\nHow do we get you there?\n\n859\n00:46:11,850 --> 00:46:14,600\nAnd it kicks in and says all right\nwell let's reach out to the IGP.\n\n860\n00:46:14,600 --> 00:46:18,960\nWe're already in the right AS, now let's\nget you to the network, and the IGP kicks\n\n861\n00:46:18,960 --> 00:46:24,160\nback in, and it routes across whatever\nit chooses as the best path and I don't\n\n862\n00:46:24,160 --> 00:46:28,830\nknow you rarely know exactly what it is\nthat's getting you across at that point.\n\n863\n00:46:28,830 --> 00:46:30,940\nYou don't know the bandwidth\nof these lines,\n\n864\n00:46:30,940 --> 00:46:33,360\nthe routers,\nyou may not even know the hop count.\n\n865\n00:46:33,360 --> 00:46:36,210\nSometimes the hop counts get masked\ninside of an autonomous system,\n\n866\n00:46:36,210 --> 00:46:38,950\nsometimes they don't, so\nyou may not see that.\n\n867\n00:46:38,950 --> 00:46:43,880\nBut my path from left to right is really,\none,\n\n868\n00:46:43,880 --> 00:46:49,530\ntwo, three, four, five,\nsix hops to get to the destination.\n\n869\n00:46:49,530 --> 00:46:54,280\nBut it's only two AS's so that's why I say\nthe as number doesn't necessarily match up\n\n870\n00:46:54,280 --> 00:46:57,570\nwith the hop count as we get\nfrom one side to the other.\n\n871\n00:46:57,570 --> 00:47:02,140\nSo path vector protocols,\ntheir primary design is to handle really,\n\n872\n00:47:02,140 --> 00:47:04,180\nreally big networks.\n\n873\n00:47:04,180 --> 00:47:06,480\nMake really big networks manageable.\n\n874\n00:47:06,480 --> 00:47:07,940\nBut by them self they're useless.\n\n875\n00:47:07,940 --> 00:47:09,630\nWe have to combine them with an IGP.\n\n876\n00:47:09,630 --> 00:47:14,290\nAnd the IGP's are typically link state or\ndistance vector.\n\n877\n00:47:14,290 --> 00:47:20,000\nNobody that I know of, nobody today\nhas made an IGP that uses path vector.\n\n878\n00:47:20,000 --> 00:47:23,250\nBecause interior networks aren't that big\nand path vector doesn't tell us how to\n\n879\n00:47:23,250 --> 00:47:27,190\nget to our destination anyway, so it's not\neffective, and that's why we don't have\n\n880\n00:47:27,190 --> 00:47:32,520\nany interior path-based protocols,\nbut you can implement BGP interior,\n\n881\n00:47:32,520 --> 00:47:36,340\nand we'll see that later on, it's just got\nto be stuck with another IGP on top of it.\n\n882\n00:47:36,340 --> 00:47:39,130\nSo interesting stuff there, but\nthat's basically how it functions.\n\n883\n00:47:40,600 --> 00:47:44,870\nAll right, now, let's see, it seems like\nI had something else profound to mention.\n\n884\n00:47:44,870 --> 00:47:46,750\nOh path vector protocols,\n\n885\n00:47:46,750 --> 00:47:50,580\nanother characteristic of a path\nvector protocol is how basic they are.\n\n886\n00:47:50,580 --> 00:47:53,925\nThey don't do things like load balancing,\nthey don't look at bandwidth,\n\n887\n00:47:53,925 --> 00:47:56,557\nthey don't look at delay,\nthey don't look at that stuff.\n\n888\n00:47:56,557 --> 00:47:58,578\nThey don't know if two lines are equal,\nthey're just looking at path.\n\n889\n00:47:58,578 --> 00:48:01,258\nSo they don't do load balancing.\n\n890\n00:48:01,258 --> 00:48:04,950\nWhen you look at a path vector protocol\nIt'll only have one way to get to\n\n891\n00:48:04,950 --> 00:48:05,834\na destination.\n\n892\n00:48:05,834 --> 00:48:10,243\nWhen I have path one and path two here\nthat both go to that destination,\n\n893\n00:48:10,243 --> 00:48:13,290\nif path one is longer, it throws it away.\n\n894\n00:48:13,290 --> 00:48:15,690\nIt throws it away and\nit only uses path two.\n\n895\n00:48:15,690 --> 00:48:19,350\nAnd only if path two fails,\ndoes path one come back into the picture.\n\n896\n00:48:19,350 --> 00:48:22,160\nSo there's no load balancing,\nnothing crazy like that.\n\n897\n00:48:22,160 --> 00:48:26,720\nBut if you look here,\nI've got two links between these two ASs.\n\n898\n00:48:26,720 --> 00:48:31,940\nIn between 65401 and 65429, it would be up\nto the IGP, the Interior Gateway Protocol,\n\n899\n00:48:31,940 --> 00:48:35,590\nit would be up to that to do load\nbalancing across these links.\n\n900\n00:48:35,590 --> 00:48:39,750\nIf I don't, BGP will send\nthe traffic all across one link,\n\n901\n00:48:39,750 --> 00:48:41,930\nunless it fails it'll jump\nover to the other one.\n\n902\n00:48:41,930 --> 00:48:47,180\nSo it really does have to go hand\nin hand with something else.\n\n903\n00:48:47,180 --> 00:48:51,810\nThis is our basic rundown of path vector\nand I think I was pretty thorough there.\n\n904\n00:48:51,810 --> 00:48:53,170\nRonnie, can you think of anything else?\n\n905\n00:48:53,170 --> 00:48:55,680\n>> I think so, no.\nThe path vector is by far, if you've just\n\n906\n00:48:55,680 --> 00:48:59,740\ndone the CC&A, it's probably the one\nthat's going to be the most foreign to us.\n\n907\n00:48:59,740 --> 00:49:03,770\nSo spend a little bit of time at\nleast understanding the basics of it.\n\n908\n00:49:03,770 --> 00:49:08,140\nThe hard thing, at least that I remember,\nis going from the idea that everything\n\n909\n00:49:08,140 --> 00:49:12,170\nis about a metric and the fastest path\nto get there, to realizing that BGP,\n\n910\n00:49:12,170 --> 00:49:15,940\nwhat it tries to do is manipulate the way\nthat it wants you go through there.\n\n911\n00:49:15,940 --> 00:49:19,731\nSo it's not necessarily about the metric,\nit's all about, hey we wanna get it there,\n\n912\n00:49:19,731 --> 00:49:21,360\nwe wanna get it there our way too.\n\n913\n00:49:21,360 --> 00:49:22,910\nSo, it's neat,\n\n914\n00:49:22,910 --> 00:49:28,140\nbut it is a little bit unusual looking at\nAS numbers instead of metrics everywhere.\n\n915\n00:49:28,140 --> 00:49:29,050\n>> Yeah, it's neat.\n\n916\n00:49:29,050 --> 00:49:31,350\nAnd I look forward to those\nepisodes where we get into BGP and\n\n917\n00:49:31,350 --> 00:49:33,530\neverybody gets that chance to see it for\nthe first time.\n\n918\n00:49:33,530 --> 00:49:34,480\nIt's pretty cool.\n\n919\n00:49:34,480 --> 00:49:35,650\nSo.\n\n920\n00:49:35,650 --> 00:49:38,540\nAll right, well,\nI think that's about it for this one.\n\n921\n00:49:38,540 --> 00:49:41,890\nSo in this episode we talked about\nthe three different categories of routing\n\n922\n00:49:41,890 --> 00:49:43,560\nprotocols that we're gonna learn about.\n\n923\n00:49:43,560 --> 00:49:46,680\nWe started with distance vector,\nthen we moved into Link-state, and\n\n924\n00:49:46,680 --> 00:49:49,130\nthen we wrapped up right\nthere with path vector.\n\n925\n00:49:49,130 --> 00:49:53,240\nAnd so for the whole rest of the series\nthat we talk about RIP and EIGRP,\n\n926\n00:49:53,240 --> 00:49:54,870\nremember they're distance vector.\n\n927\n00:49:54,870 --> 00:49:57,030\nWhen we talk about OSPF,\nremember that it's Link-state.\n\n928\n00:49:57,030 --> 00:49:59,870\nAnd when we talk about BGP,\nit's path vector.\n\n929\n00:49:59,870 --> 00:50:02,750\nSo keep those characteristics we\ndiscussed in mind as we work with\n\n930\n00:50:02,750 --> 00:50:03,440\nthose other protocols.\n\n931\n00:50:04,780 --> 00:50:07,840\nAll right, well that's a pretty good\nspot for us to wrap this episode up.\n\n932\n00:50:07,840 --> 00:50:11,410\nSo let me just remind you guys, if you\nhave any questions live during the show,\n\n933\n00:50:11,410 --> 00:50:13,920\nyou can go to itpro.tv/live,\n\n934\n00:50:13,920 --> 00:50:16,740\nyou'll see the chat box beneath the video,\npost your questions there.\n\n935\n00:50:16,740 --> 00:50:18,470\nWe monitor and answer during the show.\n\n936\n00:50:18,470 --> 00:50:21,500\nIf you have questions after the show,\nuse our Q&A forums.\n\n937\n00:50:21,500 --> 00:50:26,590\nAt the top of every page on ITProTV you'll\nsee a link that says Q&A, click on it.\n\n938\n00:50:26,590 --> 00:50:28,750\nYou'll jump into the forums,\nyou post your question there.\n\n939\n00:50:28,750 --> 00:50:30,290\nWe monitor and answer after the show.\n\n940\n00:50:30,290 --> 00:50:32,440\nIt's a great way to get\nanswers to your question so\n\n941\n00:50:32,440 --> 00:50:34,960\nyou're not sitting there scratching your\nhead trying to figure something out when\n\n942\n00:50:34,960 --> 00:50:36,180\nwe can just answer it for you.\n\n943\n00:50:36,180 --> 00:50:38,504\nTake advantage of that resource,\nit is there for you.\n\n944\n00:50:38,504 --> 00:50:41,488\nWell I hope you guys\nenjoyed today's episode.\n\n945\n00:50:41,488 --> 00:50:43,578\nSigning off for ITProTV, I'm Don Pezet.\n\n946\n00:50:43,578 --> 00:50:44,332\n>> I'm Ronnie Wong.\n\n947\n00:50:44,332 --> 00:50:45,902\n>> And we'll see you next time.\n\n948\n00:50:45,902 --> 00:50:55,902\n[MUSIC]\n\n949\n00:50:59,826 --> 00:51:06,100\n[SOUND]\n\n",
          "vimeoId": "118920349"
        },
        {
          "description": "Administrative distance is something Cisco routers keeps track for different routes that might be considered the best possible route based on the protocol used. Viewers will hear about the use of Administrative Distance on Cisco routers and about changing the default administrative distances to give preference of one routing protocol over another even when the metrics are different.",
          "length": "1320",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/ccnproute/cisco-ccnproute-3-6-administrative_distance-020515.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/ccnproute/cisco-ccnproute-3-6-administrative_distance-020515-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/ccnproute/cisco-ccnproute-3-6-administrative_distance-020515-sm.jpg",
          "title": "Administrative Distance",
          "transcript": "1\n00:00:00,000 --> 00:00:10,000\n[MUSIC]\n\n2\n00:00:14,763 --> 00:00:22,076\n[SOUND]\n\n3\n00:00:22,076 --> 00:00:32,076\n[MUSIC]\n\n4\n00:00:33,176 --> 00:00:35,961\nAll right, good morning,\ngood afternoon, and good evening.\n\n5\n00:00:35,961 --> 00:00:38,271\nAnd welcome back to another\nepisode of ITProTV.\n\n6\n00:00:38,271 --> 00:00:41,380\nI'm your host Don Pezet,\nback again with Mr. Ronnie Wong.\n\n7\n00:00:41,380 --> 00:00:42,100\nHow's it going, Ronnie?\n\n8\n00:00:42,100 --> 00:00:46,535\n>> It is going well, ready for\nour Megadeth guitar solo.\n\n9\n00:00:46,535 --> 00:00:48,670\n>> [LAUGH]\n>> Go ahead, Don, we're ready to go.\n\n10\n00:00:48,670 --> 00:00:50,480\n>> That's right, you know,\nit's funny, we have so\n\n11\n00:00:50,480 --> 00:00:53,490\nmany people here in the studio that\nplay guitar and I am not one of them.\n\n12\n00:00:53,490 --> 00:00:55,130\n>> Oh!\n>> So if I play the solo,\n\n13\n00:00:55,130 --> 00:00:56,338\nI would be playing an MP3.\n\n14\n00:00:56,338 --> 00:00:58,330\n>> Nice.\n>> [LAUGH] All right,\n\n15\n00:00:58,330 --> 00:01:01,610\nwell, we are gonna jump back\ninto CCNP route this morning.\n\n16\n00:01:01,610 --> 00:01:06,410\nAnd we got a fairly short episode here\ncuz we're tackling a pretty easy concept,\n\n17\n00:01:06,410 --> 00:01:08,460\nwhich is administrative distance.\n\n18\n00:01:08,460 --> 00:01:11,290\nAdministrative distance is something\nthat your router keeps track of.\n\n19\n00:01:11,290 --> 00:01:13,400\nAnd really it's a Cisco thing,\n\n20\n00:01:13,400 --> 00:01:16,630\nsomething that Cisco created to keep\ntrack of things on their routers.\n\n21\n00:01:16,630 --> 00:01:18,430\nBecause, believe it or\n\n22\n00:01:18,430 --> 00:01:23,180\nnot, on occasion some people might want\nto run more than one routing protocol.\n\n23\n00:01:23,180 --> 00:01:25,970\nAnd when you run more than\none routing protocol,\n\n24\n00:01:25,970 --> 00:01:28,710\nyou might learn the same route twice.\n\n25\n00:01:28,710 --> 00:01:31,250\nIf I learn a route from two\ndifferent routing protocols,\n\n26\n00:01:31,250 --> 00:01:34,040\nhow do I pick which one I want to use?\n\n27\n00:01:34,040 --> 00:01:37,950\nWell, in the official standards of each\nrouting protocol, they don't define it,\n\n28\n00:01:37,950 --> 00:01:40,760\nbecause it's just standardizing\nthat one protocol.\n\n29\n00:01:40,760 --> 00:01:45,310\nSo when you start mixing protocols it's\nup to the vendors to solve the problem.\n\n30\n00:01:45,310 --> 00:01:48,120\nSo Freecom, HP, Juniper, Cisco,\n\n31\n00:01:48,120 --> 00:01:50,550\nthey all have to have different\nways to solve the problem.\n\n32\n00:01:50,550 --> 00:01:54,210\nAnd the way that Cisco chose to\nsolve it was with a system called\n\n33\n00:01:54,210 --> 00:01:55,990\nadministrative distance.\n\n34\n00:01:55,990 --> 00:01:58,225\nAnd the principle's pretty\nstraight forward right buddy?\n\n35\n00:01:58,225 --> 00:02:02,399\n>> Yeah, the administrative distance is\nwhat normally we call the believability of\n\n36\n00:02:02,399 --> 00:02:04,582\nthe route or the reliability of the route.\n\n37\n00:02:04,582 --> 00:02:08,462\nSo what Cisco routers have done is that\nthey've built into the process of what\n\n38\n00:02:08,462 --> 00:02:10,379\ngets entered into the routing table.\n\n39\n00:02:10,379 --> 00:02:14,396\nIs that there's always this kind\nof list of what will get in and\n\n40\n00:02:14,396 --> 00:02:17,970\nwhat will get out, or\nwhat will not make it in, right?\n\n41\n00:02:17,970 --> 00:02:19,750\nIt begins really at the top there, and\n\n42\n00:02:19,750 --> 00:02:23,450\none of those things is now when it\nactually learns about two different routes\n\n43\n00:02:23,450 --> 00:02:27,010\nfrom two different protocols,\nit still has to build that routing table.\n\n44\n00:02:27,010 --> 00:02:30,050\nAnd the way it has to build that\nrouting table, it has to decide which\n\n45\n00:02:30,050 --> 00:02:34,460\none of those two is gonna be\nconsidered the best possible route.\n\n46\n00:02:34,460 --> 00:02:37,680\nNow, the problem is,\nif you run with EIGRP, EIGRP's gonna say,\n\n47\n00:02:37,680 --> 00:02:39,820\nof course my route's better.\n\n48\n00:02:39,820 --> 00:02:44,069\nOSPF is gonna say no my route is better,\nwell how do we decide?\n\n49\n00:02:44,069 --> 00:02:47,624\nIn Cisco what they've done\nis that they've assigned\n\n50\n00:02:47,624 --> 00:02:51,655\nreally arbitrary numbers to\neach of the routing protocols.\n\n51\n00:02:51,655 --> 00:02:56,420\nAnd the way that it ends up is whatever\nthe lower administrative distance is, that\n\n52\n00:02:56,420 --> 00:03:02,180\nwill become the one that gets entered into\nthe routing table if there's a conflict.\n\n53\n00:03:02,180 --> 00:03:04,520\n>> Yeah, and so they made a scale.\n\n54\n00:03:04,520 --> 00:03:06,808\nIt's a scale from 0 to 255, right?\n\n55\n00:03:06,808 --> 00:03:10,055\nEight binary bits,\nthat's where that came from.\n\n56\n00:03:10,055 --> 00:03:11,320\n0 to 255,\n\n57\n00:03:11,320 --> 00:03:15,530\nand they said we need to rank all of our\nrouting protocols based on this scale.\n\n58\n00:03:15,530 --> 00:03:17,570\nAnd so that's exactly what they did.\n\n59\n00:03:17,570 --> 00:03:20,670\nNow it is completely arbitrary,\nthese are numbers that Cisco made up.\n\n60\n00:03:20,670 --> 00:03:23,730\nAnd I say, Cisco like the company,\nI'm sure there was some person, or team or\n\n61\n00:03:23,730 --> 00:03:25,050\nwhatever that sat there and did it.\n\n62\n00:03:25,050 --> 00:03:27,990\nAnd they basically said, okay, here's\nall the protocols that we recognize.\n\n63\n00:03:29,020 --> 00:03:30,350\nWhich ones do we like the most?\n\n64\n00:03:30,350 --> 00:03:31,774\nAnd it wasn't like, or whatever.\n\n65\n00:03:31,774 --> 00:03:34,430\n>> [LAUGH]\n>> It was which ones are the most accurate\n\n66\n00:03:34,430 --> 00:03:36,740\nversus which ones are the least accurate?\n\n67\n00:03:36,740 --> 00:03:41,880\nAnd they built up this list of all\nof the different protocols and\n\n68\n00:03:41,880 --> 00:03:42,770\ngave them a number.\n\n69\n00:03:42,770 --> 00:03:45,860\nAnd they left nice little\ngaps in between each one.\n\n70\n00:03:45,860 --> 00:03:49,330\nSo as new routing protocols came out,\nthey could be injected in there.\n\n71\n00:03:49,330 --> 00:03:52,990\nBut also so that you could\nrearrange them if you wanted.\n\n72\n00:03:52,990 --> 00:03:56,150\nAll right,\nwhat were looking at here is a table\n\n73\n00:03:56,150 --> 00:04:00,570\nof the default administrative\ndistances that Cisco routers assign.\n\n74\n00:04:00,570 --> 00:04:03,550\nYou can override this to\nyour heart's content.\n\n75\n00:04:03,550 --> 00:04:07,580\nIf you love OSPF and you hate EIGRP,\n\n76\n00:04:07,580 --> 00:04:11,040\nyou can change their administrative\ndistances, so that OSPF is preferred.\n\n77\n00:04:11,040 --> 00:04:13,000\nIt's up to you,\nyou can do that, all right.\n\n78\n00:04:13,000 --> 00:04:14,500\nWord of caution.\n\n79\n00:04:14,500 --> 00:04:17,190\nIf you start manipulating\nadministrative distances,\n\n80\n00:04:17,190 --> 00:04:20,810\nyou probably need to do the same\nmanipulation on all of your equipment.\n\n81\n00:04:20,810 --> 00:04:22,290\nIf you have 20 routers,\n\n82\n00:04:22,290 --> 00:04:24,770\nyou should probably modify\nthe administrative distance on all 20.\n\n83\n00:04:24,770 --> 00:04:26,960\nNow that's not always true.\n\n84\n00:04:26,960 --> 00:04:31,150\nIf you watched our static routing episode,\nI showed in that episode\n\n85\n00:04:31,150 --> 00:04:33,460\nthat we manipulated\nthe administrative distances and\n\n86\n00:04:33,460 --> 00:04:36,050\nstatic routes there just\nto influence one router.\n\n87\n00:04:36,050 --> 00:04:36,980\nAnd if that's all you're doing,\n\n88\n00:04:36,980 --> 00:04:41,170\ninfluencing one router, then you wouldn't\nneed to make that change everywhere else.\n\n89\n00:04:41,170 --> 00:04:44,700\nBut when you start overriding\nthese values, you are saying,\n\n90\n00:04:44,700 --> 00:04:46,230\nI know more than the router does.\n\n91\n00:04:46,230 --> 00:04:48,300\nI want to influence its decision.\n\n92\n00:04:48,300 --> 00:04:49,770\nSo the router says,\nokay I'll let you do that,\n\n93\n00:04:49,770 --> 00:04:51,930\nI hope you know what you're doing, right?\n\n94\n00:04:51,930 --> 00:04:55,450\nSo you could start to create\nthings like routing loops or\n\n95\n00:04:55,450 --> 00:04:56,790\ndead ends in your network.\n\n96\n00:04:56,790 --> 00:04:59,900\nThey call them black holes where your\ntraffic just wanders off into nowhere.\n\n97\n00:04:59,900 --> 00:05:03,725\nYou can create those by accident if you\nstart manipulating the administrative\n\n98\n00:05:03,725 --> 00:05:05,920\ndistance, and different routers\nmake different decisions.\n\n99\n00:05:05,920 --> 00:05:10,990\n>> Yeah, now in the CCNA studies, you did\nlearn about some of the administrative\n\n100\n00:05:10,990 --> 00:05:14,740\ndistances, so the good thing is\nthat means you've got a head start.\n\n101\n00:05:14,740 --> 00:05:19,480\nFor CCNP, you'll notice that this table\nactually fills out several more, including\n\n102\n00:05:19,480 --> 00:05:24,430\nthose internal and external administrative\ndistances that we didn't see before.\n\n103\n00:05:24,430 --> 00:05:26,270\nAnd those are gonna\nbecome very important for\n\n104\n00:05:26,270 --> 00:05:29,270\nus as we want to do more\nroute manipulation.\n\n105\n00:05:29,270 --> 00:05:33,040\nSo, if you think,\nI know enough, that's CCNA.\n\n106\n00:05:33,040 --> 00:05:34,670\nYou've got to know all of these.\n\n107\n00:05:34,670 --> 00:05:36,960\nAnd there is just no\nway to get around that.\n\n108\n00:05:36,960 --> 00:05:38,672\nSo start memorizing.\n\n109\n00:05:38,672 --> 00:05:42,480\n>> Yeah, for the most part,\nit is fairly straight forward.\n\n110\n00:05:42,480 --> 00:05:44,610\nA directly connected interface.\n\n111\n00:05:44,610 --> 00:05:46,680\nCan you get anymore believable than that?\n\n112\n00:05:46,680 --> 00:05:48,240\nThat's the old seeing is believing.\n\n113\n00:05:48,240 --> 00:05:52,120\nI'm directly connected to this network,\nI know it exists, so it gets a 0.\n\n114\n00:05:52,120 --> 00:05:56,640\n0 means it's 100% here,\nit functions, you can use this.\n\n115\n00:05:56,640 --> 00:05:59,380\nNothing else is gonna be better,\nyou're directly connected.\n\n116\n00:05:59,380 --> 00:06:03,490\nAt the other end of the spectrum is 255.\n\n117\n00:06:03,490 --> 00:06:07,640\nNow 255 is Unknown and Ronnie,\nyou put a little asterisk on there,\n\n118\n00:06:07,640 --> 00:06:10,070\nwhich is kind of an important\nlittle footnote.\n\n119\n00:06:10,070 --> 00:06:14,250\nIf we have an unknown route, do we use it?\n\n120\n00:06:14,250 --> 00:06:15,310\n>> No.\n\n121\n00:06:15,310 --> 00:06:16,717\n>> No.\n255 means even though we\n\n122\n00:06:16,717 --> 00:06:19,895\nlearned this route, even though we've\ngot it, we don't trust it at all.\n\n123\n00:06:19,895 --> 00:06:21,793\nThis is basically gonna be suppressed.\n\n124\n00:06:21,793 --> 00:06:25,672\nOut of all these numbers,\n0 through 254, we're gonna use them,\n\n125\n00:06:25,672 --> 00:06:28,300\n255 we're basically going to ignore.\n\n126\n00:06:28,300 --> 00:06:29,840\nThis is how we kill a route.\n\n127\n00:06:29,840 --> 00:06:32,310\nIf you wanna kill a route and\njust get it out of your table or whatever,\n\n128\n00:06:32,310 --> 00:06:33,720\nthis is a great way to do it.\n\n129\n00:06:33,720 --> 00:06:36,760\nSo 255 is basically a dead route, right?\n\n130\n00:06:36,760 --> 00:06:37,599\nYou won't normally have those.\n\n131\n00:06:37,599 --> 00:06:42,884\nAll of the other ones in between,\n1 through 254, those are usable routes\n\n132\n00:06:42,884 --> 00:06:47,945\nthat we prioritize based on their\nadministrative distance, all right?\n\n133\n00:06:47,945 --> 00:06:50,910\nAnd some of these, like Ronnie said,\nare the ones that you've already seen.\n\n134\n00:06:50,910 --> 00:06:53,020\nStatic routes, EIGRP,\n\n135\n00:06:53,020 --> 00:06:56,810\nand really it was internal EIGRP that\nyou learned about in CCNA, right?\n\n136\n00:06:56,810 --> 00:07:02,340\nThis guy at an administrative distance\nof 90, OSPF at 110, RIP at 120, right.\n\n137\n00:07:02,340 --> 00:07:05,530\nThose are the ones that you saw before.\n\n138\n00:07:05,530 --> 00:07:07,920\nThe extra one's though,\nare pretty important too.\n\n139\n00:07:07,920 --> 00:07:08,900\nTake a look at EIGRP.\n\n140\n00:07:08,900 --> 00:07:14,793\nWe have EIGRP summary routes,\nwe have EIGRP internal routes,\n\n141\n00:07:14,793 --> 00:07:18,630\nand EIGRP external routes, okay.\n\n142\n00:07:18,630 --> 00:07:22,568\nNow what Cisco's done is they've said\nlook, if you get a summary route,\n\n143\n00:07:22,568 --> 00:07:25,770\nEIGRP does auto-summarization.\n\n144\n00:07:25,770 --> 00:07:29,210\nAnd so it will try and collect routes\ntogether to be more efficient.\n\n145\n00:07:29,210 --> 00:07:31,850\nAnd if you see a summary route,\nyou can bank on it,\n\n146\n00:07:31,850 --> 00:07:32,940\nit's something that you can trust.\n\n147\n00:07:32,940 --> 00:07:35,170\nYou should follow the summary route so\n\n148\n00:07:35,170 --> 00:07:38,050\nthat we don't end up with a bunch of extra\nroutes created in the routing table.\n\n149\n00:07:38,050 --> 00:07:40,610\nSo they prioritize that summary route,\nand they give it a route,\n\n150\n00:07:40,610 --> 00:07:44,570\nI mean an admin distance of 5,\nwhich is super believable, right,\n\n151\n00:07:44,570 --> 00:07:48,140\nreally high level of trust there.\n\n152\n00:07:48,140 --> 00:07:50,247\nA regular internal EIGRP\nroute just has 90.\n\n153\n00:07:50,247 --> 00:07:54,449\nNow, that 90 makes it more\npreferable than OSPF, and RIP.\n\n154\n00:07:54,449 --> 00:07:58,460\nSo if you're running OSPF and RIP,\nyou'll prefer EIGRP over them.\n\n155\n00:07:58,460 --> 00:08:01,833\nBut EIGRP external.\n\n156\n00:08:01,833 --> 00:08:04,530\nNow, what is an external?\n\n157\n00:08:04,530 --> 00:08:07,360\nWell, again, if you watched,\nwe did this in another show.\n\n158\n00:08:07,360 --> 00:08:08,335\nThe default route show.\n\n159\n00:08:08,335 --> 00:08:12,780\nIn the default route show, I redistributed\nsome static routes into EIGRP.\n\n160\n00:08:12,780 --> 00:08:15,030\nThey came from an external source.\n\n161\n00:08:15,030 --> 00:08:19,210\nWhen you redistribute a route,\nyou have to assign a metric.\n\n162\n00:08:19,210 --> 00:08:21,460\nAnd you can make up\nthe metric if you want.\n\n163\n00:08:21,460 --> 00:08:24,480\nYou can just put BS in there,\nand it'll work.\n\n164\n00:08:24,480 --> 00:08:26,100\nOr you can try to be very, very accurate.\n\n165\n00:08:26,100 --> 00:08:27,110\nBut the router doesn't know.\n\n166\n00:08:27,110 --> 00:08:29,220\nThe router does know if you're making\nup those number, if they're real,\n\n167\n00:08:29,220 --> 00:08:30,790\nwhen you put those metrics in.\n\n168\n00:08:30,790 --> 00:08:35,820\nAnd so that external EIGRP route,\nthey bump it way down here to 170.\n\n169\n00:08:35,820 --> 00:08:40,310\nLower than OSPF and RIP because they're\nsaying if I learn it from OSPF,\n\n170\n00:08:40,310 --> 00:08:42,440\nat least I know the metric is real.\n\n171\n00:08:42,440 --> 00:08:46,010\nBut if I learn it from External EIGRP,\nthe metric might be completely fake.\n\n172\n00:08:46,010 --> 00:08:49,350\nSo let me give it a high\nadministrative distance so\n\n173\n00:08:49,350 --> 00:08:53,120\nI'll try and pick something that's more\nbelievable than this one that could have\n\n174\n00:08:53,120 --> 00:08:55,190\neasily faked metrics, all right?\n\n175\n00:08:55,190 --> 00:08:56,942\nThat's why we see that broken apart.\n\n176\n00:08:56,942 --> 00:09:00,001\nNow we don't see that with OSPF\nwhere OSPF you have internal and\n\n177\n00:09:00,001 --> 00:09:03,878\nexternal, actually you have two different\ntypes of external routes, right?\n\n178\n00:09:03,878 --> 00:09:05,860\nThe OE1, OE2.\n\n179\n00:09:05,860 --> 00:09:08,840\nSo OSPF isn't broken up like that but\n\n180\n00:09:08,840 --> 00:09:12,260\nthat's because of the way\nthat the standard is written.\n\n181\n00:09:12,260 --> 00:09:15,620\nCisco created the IGRP and so\nthey have a lot of control over it.\n\n182\n00:09:15,620 --> 00:09:17,290\nThey can break it apart like this.\n\n183\n00:09:17,290 --> 00:09:19,460\nThe other protocols they didn't create.\n\n184\n00:09:19,460 --> 00:09:23,610\nAnd so they can't break them into pieces\nand so that creates some trust issues and\n\n185\n00:09:23,610 --> 00:09:28,100\nthat's part of why EIGRP has a higher\nlevel of trust than OSPF and\n\n186\n00:09:28,100 --> 00:09:31,590\nRIP because Cisco knows they have\nmore control over the protocol.\n\n187\n00:09:33,500 --> 00:09:34,818\nSome of the other ones\nthat we see in the list,\n\n188\n00:09:34,818 --> 00:09:36,122\nlet’s just kind of walk\ndown the line here.\n\n189\n00:09:36,122 --> 00:09:37,694\nWe’ve got external BGP, so\n\n190\n00:09:37,694 --> 00:09:42,228\nthat’s Border Gateway Protocol in between\nautonomous systems on the Internet.\n\n191\n00:09:42,228 --> 00:09:46,260\nExternal systems BGP that’s very\ntrustworthy at a level of 20.\n\n192\n00:09:46,260 --> 00:09:51,960\nIf you’re moving across the Internet,\nyou need to be using BGP to do it.\n\n193\n00:09:51,960 --> 00:09:55,680\nBut at the end of the day BGP doesn't\nknow how to do the interior stuff so\n\n194\n00:09:55,680 --> 00:09:57,590\nit relies on interior protocols.\n\n195\n00:09:57,590 --> 00:10:04,370\nSo if we look way down here, internal\nBGP is super untrustworthy at 200.\n\n196\n00:10:04,370 --> 00:10:07,790\nIf we can get a route from EIGRP or RIP or\n\n197\n00:10:07,790 --> 00:10:12,040\nOSPF we should us that for\nthe interior side.\n\n198\n00:10:12,040 --> 00:10:14,810\nBut if none of those are there,\nthen we can try and use BGP.\n\n199\n00:10:14,810 --> 00:10:16,050\nIt'll probably fail, right?\n\n200\n00:10:16,050 --> 00:10:17,030\nIt very rarely works.\n\n201\n00:10:17,030 --> 00:10:20,350\nBut we can try it and\nthat's why it's way down here at 200.\n\n202\n00:10:20,350 --> 00:10:24,220\nAnything else is better than\ntrying to rely on IBGP.\n\n203\n00:10:24,220 --> 00:10:26,472\nIBGP might work, but\na lot of times it doesn't.\n\n204\n00:10:26,472 --> 00:10:29,363\nAll right let's see what else\ndo we have here on our list.\n\n205\n00:10:29,363 --> 00:10:30,964\nGood old IGRP.\n\n206\n00:10:30,964 --> 00:10:35,430\nEIGRP is the enhanced interior\ngateway routing protocol.\n\n207\n00:10:35,430 --> 00:10:39,850\nBefore it was the interior gateway\nrouting protocol, that's the old one.\n\n208\n00:10:39,850 --> 00:10:41,760\nIGRP is old.\n\n209\n00:10:41,760 --> 00:10:43,280\nIt's classful.\n\n210\n00:10:43,280 --> 00:10:47,550\nIt follows the old classful routing rules\nand as a result it's not very flexible.\n\n211\n00:10:47,550 --> 00:10:49,940\nI don't think anybody uses it anymore.\n\n212\n00:10:49,940 --> 00:10:52,710\nBut still has an admin distance.\n\n213\n00:10:52,710 --> 00:10:57,930\nNow there is a little bit of hubris here,\nthat Cisco would prefer IGRP over OSPF and\n\n214\n00:10:57,930 --> 00:11:03,450\nRIP, when OSPF and RIP can be classless\nand give you more accurate results.\n\n215\n00:11:03,450 --> 00:11:08,060\nSo that one I don't know why they stuck\nin an admin distance of 100 on that one.\n\n216\n00:11:08,060 --> 00:11:10,420\nBut odds are, you're not running it\nanyway so it doesn't matter, but\n\n217\n00:11:10,420 --> 00:11:11,340\nyou could manipulate that.\n\n218\n00:11:12,920 --> 00:11:13,545\nWhat else do we have?\n\n219\n00:11:13,545 --> 00:11:16,810\nIS-IS, right, Intermediate System\nto Intermediate System.\n\n220\n00:11:16,810 --> 00:11:19,010\nThat one is another routing protocol.\n\n221\n00:11:19,010 --> 00:11:24,076\nIt's a link State protocol that is\nactually layer three protocol independent.\n\n222\n00:11:24,076 --> 00:11:29,625\nSo it doesn't care if you're running IPv4,\nIPv6, IPX/SPX, Appletalk.\n\n223\n00:11:29,625 --> 00:11:32,940\nIt'll move any of those guys,\nvery, very flexible dynamic.\n\n224\n00:11:32,940 --> 00:11:35,900\nSo it's in here at a cost of 115.\n\n225\n00:11:35,900 --> 00:11:37,600\nOr an administrative distance of 115.\n\n226\n00:11:37,600 --> 00:11:40,370\nThat would cost us.\n\n227\n00:11:40,370 --> 00:11:41,710\nWe've got RIP that we know about.\n\n228\n00:11:41,710 --> 00:11:46,659\nAnd in RIP 120 the other routing protocols\nare better because RIP just looks at\n\n229\n00:11:46,659 --> 00:11:47,471\nhop counts.\n\n230\n00:11:47,471 --> 00:11:49,711\nSo that's got that higher cost on it.\n\n231\n00:11:49,711 --> 00:11:50,478\nEGP.\n\n232\n00:11:50,478 --> 00:11:51,870\nEGP is a fun one.\n\n233\n00:11:51,870 --> 00:11:52,920\nHave you every used EGP, Ronnie?\n\n234\n00:11:52,920 --> 00:11:53,680\n>> I have not.\n\n235\n00:11:53,680 --> 00:11:54,280\n>> Neither have I.\n\n236\n00:11:54,280 --> 00:11:55,850\nAnd I've never met\nanybody that has either.\n\n237\n00:11:57,590 --> 00:11:59,720\nBGP, Border Gateway Protocol.\n\n238\n00:11:59,720 --> 00:12:01,560\nWhen we talk about how you\nroute on the Internet, and\n\n239\n00:12:01,560 --> 00:12:03,080\nwe talk about path vector protocols,\n\n240\n00:12:03,080 --> 00:12:06,590\nBGP is the one that always comes to mind,\nit's what's used on the Internet.\n\n241\n00:12:06,590 --> 00:12:08,230\nBut it's not the only one.\n\n242\n00:12:08,230 --> 00:12:12,540\nEGP, the Exterior Gateway Protocol,\nwas actually out before BGP.\n\n243\n00:12:12,540 --> 00:12:15,210\nAnd so it's another path vector\nprotocol that's out there for\n\n244\n00:12:15,210 --> 00:12:17,020\ndoing that exterior routing.\n\n245\n00:12:17,020 --> 00:12:19,880\nBut the only network that's really big\nenough to need it is the Internet,\n\n246\n00:12:19,880 --> 00:12:22,160\nand the Internet doesn't use EGP.\n\n247\n00:12:22,160 --> 00:12:24,150\nSo it's really a forgotten protocol.\n\n248\n00:12:24,150 --> 00:12:25,600\nI've never seen it in production.\n\n249\n00:12:25,600 --> 00:12:28,250\nI've done it in labs,\njust to see it and mess with it.\n\n250\n00:12:28,250 --> 00:12:29,260\nIt's not on the exam.\n\n251\n00:12:29,260 --> 00:12:33,822\nBut that one's in here, and it's got\nthat admin distance of 140, all right.\n\n252\n00:12:33,822 --> 00:12:34,857\nODR.\n\n253\n00:12:34,857 --> 00:12:37,440\nODR is probably my least\nfavorite of all of these.\n\n254\n00:12:37,440 --> 00:12:39,770\nODR is on-demand routing.\n\n255\n00:12:39,770 --> 00:12:44,930\nOn demand routing is where the routers,\nthey aren't running a routing protocol.\n\n256\n00:12:44,930 --> 00:12:47,570\nThey aren't running RIP or\nOSPF or anything like that.\n\n257\n00:12:47,570 --> 00:12:48,880\nThey're just a router.\n\n258\n00:12:48,880 --> 00:12:53,210\nAnd they try and\nfigure out how to get places.\n\n259\n00:12:53,210 --> 00:12:54,100\nAll right?\n\n260\n00:12:54,100 --> 00:12:55,780\nIt's kinda hard to explain.\n\n261\n00:12:55,780 --> 00:12:57,670\nLet me see if I have a diagram.\n\n262\n00:12:57,670 --> 00:12:59,438\nI could show what ODR does.\n\n263\n00:12:59,438 --> 00:13:05,530\nAll right let's say that router A is\nnot running any routing protocols.\n\n264\n00:13:05,530 --> 00:13:07,970\nOkay, but all these other routers are.\n\n265\n00:13:07,970 --> 00:13:09,620\nRouter B, router C, router D, router E,\n\n266\n00:13:09,620 --> 00:13:14,870\nthey're all running router protocols, and\nwe put a static route on router B that\n\n267\n00:13:14,870 --> 00:13:19,370\nsays hey if you want to 192.168.0.0\nyou can go to router A.\n\n268\n00:13:19,370 --> 00:13:23,660\nSo I put that static route on router B so\nit knows to get across here.\n\n269\n00:13:23,660 --> 00:13:27,010\nBut I don't put a static\nroute on router A, right.\n\n270\n00:13:27,010 --> 00:13:28,550\nWhen we saw that in\nthe static route episode.\n\n271\n00:13:28,550 --> 00:13:30,360\nWith static routes you\ngotta do both sides.\n\n272\n00:13:30,360 --> 00:13:31,210\nMaybe I only did one side.\n\n273\n00:13:32,760 --> 00:13:36,590\nWell, if ODR is enabled on router A,\nsomething neat's gonna happen here.\n\n274\n00:13:36,590 --> 00:13:38,893\nWhen that traffic comes along, and\n\n275\n00:13:38,893 --> 00:13:44,500\nit comes up to router C and it comes up\nto router B, it's gonna hit router B.\n\n276\n00:13:44,500 --> 00:13:47,420\nAnd router B is gonna\nsee that static route.\n\n277\n00:13:47,420 --> 00:13:49,892\nAnd the static route is gonna say,\noh yeah you can get to the network,\n\n278\n00:13:49,892 --> 00:13:50,624\njust go to router A.\n\n279\n00:13:50,624 --> 00:13:52,420\nAnd it's gonna go to router A.\n\n280\n00:13:52,420 --> 00:13:54,790\nAnd router A will send us\non to the destination.\n\n281\n00:13:54,790 --> 00:13:56,770\nThat's all gonna work as planned.\n\n282\n00:13:56,770 --> 00:13:57,570\nAll right?\n\n283\n00:13:57,570 --> 00:13:59,700\nBut the problem comes\nwith the return trip.\n\n284\n00:13:59,700 --> 00:14:02,930\nWhen that machine on\nthe other side goes to reply,\n\n285\n00:14:02,930 --> 00:14:06,920\nthe reply's gonna come back and\nit's gonna come back to router A.\n\n286\n00:14:06,920 --> 00:14:10,670\nAnd router A doesn't\nhave the static route.\n\n287\n00:14:10,670 --> 00:14:15,460\nWell, with ODR, with On-Demand Routing,\nwhat happens is router A says okay,\n\n288\n00:14:15,460 --> 00:14:17,910\nI don't have a route to that network,\nbut you know what?\n\n289\n00:14:17,910 --> 00:14:20,600\nI received that traffic on\nthis interface over here.\n\n290\n00:14:20,600 --> 00:14:25,420\nThat's where it came in, so it makes sense\nthat that's gonna be the path back out,\n\n291\n00:14:25,420 --> 00:14:27,800\nso let's just send out that link.\n\n292\n00:14:27,800 --> 00:14:32,820\nAnd it sends it out along that link,\nhoping that it'll get to the destination,\n\n293\n00:14:32,820 --> 00:14:34,100\nthat it'll just go and\n\n294\n00:14:34,100 --> 00:14:37,320\nmake it based on the way the traffic\ncame in in the first place.\n\n295\n00:14:37,320 --> 00:14:39,425\nSo it's just gonna send it along.\n\n296\n00:14:39,425 --> 00:14:41,720\nAnd in this case, it's right.\n\n297\n00:14:41,720 --> 00:14:44,000\nIt gets to Router B and Router B says,\noh yeah, yeah, no problem.\n\n298\n00:14:44,000 --> 00:14:47,100\nWe'll send you right back along,\nand off we go.\n\n299\n00:14:47,100 --> 00:14:50,780\nNow we are able to communicate\nacross this network\n\n300\n00:14:50,780 --> 00:14:53,840\neven though the static routes weren't\nput in place properly, right.\n\n301\n00:14:53,840 --> 00:14:55,880\nODR solves that problem,\non-demand routing.\n\n302\n00:14:55,880 --> 00:14:57,370\nNow that sounds great, doesn't it?\n\n303\n00:14:57,370 --> 00:14:58,320\nYou're like, well, wonderful!\n\n304\n00:14:58,320 --> 00:15:01,170\nIt solved the problem,\nisn't ODR a good thing?\n\n305\n00:15:01,170 --> 00:15:06,440\nThe problem is there are a number of\nattacks that you can pull off on a router\n\n306\n00:15:06,440 --> 00:15:11,630\nto falsify your source IP and\nODR can add those as valid routes and\n\n307\n00:15:11,630 --> 00:15:14,590\nall of a sudden you can\nman-in-the-middle attack really easy.\n\n308\n00:15:14,590 --> 00:15:18,980\nODR is not a sophisticated protocol,\nit doesn't have a lot of power behind it.\n\n309\n00:15:18,980 --> 00:15:21,161\nIt's designed to solve a human mistake and\n\n310\n00:15:21,161 --> 00:15:23,653\nit doesn't solve it in\nthe most elegant of ways.\n\n311\n00:15:23,653 --> 00:15:27,117\nThe real solution here is to, either A,\nput the proper static routes in\n\n312\n00:15:27,117 --> 00:15:30,492\nlike you're supposed to, or\nB run a real dynamic routing protocol.\n\n313\n00:15:30,492 --> 00:15:34,770\nSo ODR is actually disabled\non most Cisco equipment.\n\n314\n00:15:34,770 --> 00:15:37,060\nAll the equipment I've seen recently,\nit's been disabled.\n\n315\n00:15:37,060 --> 00:15:40,970\nYou can turn it on if you want,\nit's there, you can do it, but\n\n316\n00:15:40,970 --> 00:15:42,060\nit's off by default.\n\n317\n00:15:42,060 --> 00:15:46,694\nYou really don't mess with it too much but\nbecause ODR is just guessing on the route,\n\n318\n00:15:46,694 --> 00:15:48,337\nit's not very trustworthy.\n\n319\n00:15:48,337 --> 00:15:51,100\nAnd that's why we see things like our.\n\n320\n00:15:51,100 --> 00:15:52,591\nWhere was that chart?\n\n321\n00:15:52,591 --> 00:15:54,437\nHere.\nLike our admin distance,\n\n322\n00:15:54,437 --> 00:15:57,307\nwhere ODR Has a pretty high\nadministrative distance.\n\n323\n00:15:57,307 --> 00:15:58,189\n160, right?\n\n324\n00:15:58,189 --> 00:15:59,977\nIt's just not terribly trustworthy.\n\n325\n00:15:59,977 --> 00:16:01,890\nSo it's down there on that list.\n\n326\n00:16:03,740 --> 00:16:06,370\nThen we get to external EIGRP,\nwhich I already talked about.\n\n327\n00:16:06,370 --> 00:16:08,740\nRight?\nBecause the metric is effectively made up.\n\n328\n00:16:08,740 --> 00:16:11,280\nWe give it that high admin distance.\n\n329\n00:16:11,280 --> 00:16:12,100\nInternal BGP.\n\n330\n00:16:12,100 --> 00:16:14,450\nWell, BGP doesn't know about\ninternal networks, right?\n\n331\n00:16:14,450 --> 00:16:16,380\nIt just knows about the overall path.\n\n332\n00:16:16,380 --> 00:16:18,990\nSo we try not to trust\nIBGP unless we have to.\n\n333\n00:16:18,990 --> 00:16:20,940\nAnd it's at 200.\n\n334\n00:16:20,940 --> 00:16:22,660\nAnd then we get to that 255,\nUnknown, right?\n\n335\n00:16:23,770 --> 00:16:27,030\nThese are the default administrative\ndistances that are defined by Cisco, and\n\n336\n00:16:27,030 --> 00:16:29,250\nfor the exam you need\nto know all of these.\n\n337\n00:16:29,250 --> 00:16:33,830\nIt's pretty unlikely you'll see IS-IS or\nIGRP, but the other ones,\n\n338\n00:16:33,830 --> 00:16:35,830\nyou need to get familiar with.\n\n339\n00:16:35,830 --> 00:16:37,390\n>> Yeah.\nThe only other thing I wanna mention here\n\n340\n00:16:37,390 --> 00:16:41,350\non the administrative distances, remember\nwhen you go and do the show IP route, and\n\n341\n00:16:41,350 --> 00:16:44,520\nyou look at those numbers in the bracket,\nusually the administrative distance\n\n342\n00:16:44,520 --> 00:16:48,720\nis the first number, and the one after the\nslash is gonna be the metric number too.\n\n343\n00:16:48,720 --> 00:16:52,060\nSometimes we forget that, so\nagain just another simple reminder.\n\n344\n00:16:52,060 --> 00:16:53,200\n>> Yeah.\n\n345\n00:16:53,200 --> 00:16:55,890\nNow what about al those gaps, right?\n\n346\n00:16:55,890 --> 00:17:00,150\nIn our environment if we decide that\nwe like OSPF better, I can go and\n\n347\n00:17:00,150 --> 00:17:03,159\ntake OSPF and\ngive it an admin distance of 80, right?\n\n348\n00:17:03,159 --> 00:17:05,570\nOr an admin distance of two.\n\n349\n00:17:05,570 --> 00:17:09,360\nAnd now, OSPF is going to be preferred\nover all of this other stuff, right?\n\n350\n00:17:09,360 --> 00:17:12,600\nAnd I can go to all of my routers, if I\nhave 200 routers, I go to all of them and\n\n351\n00:17:12,600 --> 00:17:14,330\nsay, admin distance for OSPF is two.\n\n352\n00:17:14,330 --> 00:17:16,560\nAnd now it's gonna be preferred, right?\n\n353\n00:17:16,560 --> 00:17:18,620\nThat's one way to use this.\n\n354\n00:17:18,620 --> 00:17:21,680\nBut how many gaps do you really need\nto be able to do something like that?\n\n355\n00:17:21,680 --> 00:17:25,380\nYou don't need many, but\nthere's a lot of gaps here.\n\n356\n00:17:25,380 --> 00:17:26,750\nThere's some huge gaps like 170 to 200.\n\n357\n00:17:26,750 --> 00:17:30,990\nThere's 30 extra blocks in there.\n\n358\n00:17:30,990 --> 00:17:32,020\nAnd 20 to 90.\n\n359\n00:17:32,020 --> 00:17:33,700\nThere's a good 70 extra little blocks.\n\n360\n00:17:33,700 --> 00:17:36,000\nSo, why is there so much space?\n\n361\n00:17:36,000 --> 00:17:40,310\nWell, like we did in\nthe static routing episode,\n\n362\n00:17:40,310 --> 00:17:42,290\nwhere we did floating static routes,\n\n363\n00:17:42,290 --> 00:17:46,980\nyou can manipulate the administrative\ndistance on a per route basis.\n\n364\n00:17:46,980 --> 00:17:49,410\nI might have five different\nroutes I learn via OSPF,\n\n365\n00:17:49,410 --> 00:17:53,790\nand their default admin\ndistance would be 110.\n\n366\n00:17:53,790 --> 00:17:58,010\nAnd I might take those routes and\nmanipulate some of them, so\n\n367\n00:17:58,010 --> 00:18:00,510\nthat some routes have\nan admin distance of 112, and\n\n368\n00:18:00,510 --> 00:18:03,650\nothers have an admin distance of 115 or\n114.\n\n369\n00:18:03,650 --> 00:18:07,190\nYou can manipulate those to make them\n\n370\n00:18:08,780 --> 00:18:11,770\nprefer one over the other, so\nas we start from one route.\n\n371\n00:18:11,770 --> 00:18:15,020\nAnd when we talk about path manipulation\nlater on, we're going to see that,\n\n372\n00:18:15,020 --> 00:18:17,450\nwe'll manipulate that admin distance.\n\n373\n00:18:17,450 --> 00:18:22,180\nIt's also possible that you have a router\nwith a connection to two different ISPs,\n\n374\n00:18:22,180 --> 00:18:23,760\nor to two different other networks.\n\n375\n00:18:23,760 --> 00:18:26,660\nAnd one connection is using RIP and\n\n376\n00:18:26,660 --> 00:18:30,990\nthe other is using OSPF, and\nyou want to do equal cost load balancing.\n\n377\n00:18:30,990 --> 00:18:33,960\nWell, when it sees these two paths,\n\n378\n00:18:33,960 --> 00:18:36,015\nit's going to pick the OSPF\none over the RIP one.\n\n379\n00:18:36,015 --> 00:18:39,180\nThrow the RIP one out, and all your\ntraffic is going to go over the OSPF link.\n\n380\n00:18:39,180 --> 00:18:40,070\nRight?\n\n381\n00:18:40,070 --> 00:18:43,450\nBut in reality,\nit could have gone either way.\n\n382\n00:18:43,450 --> 00:18:46,110\nIf it went either way, well,\nit would have got to the destination,\n\n383\n00:18:46,110 --> 00:18:49,520\nand if we wanted to load balance, it can't\ndo that with the two different protocols.\n\n384\n00:18:49,520 --> 00:18:53,880\nSo I might manipulate that one path,\nso that on that path, OSPF and\n\n385\n00:18:53,880 --> 00:18:55,600\nRIP have the same cost.\n\n386\n00:18:55,600 --> 00:18:59,630\nNow both routes make it into\nthe routing table, and we load balance.\n\n387\n00:18:59,630 --> 00:19:02,740\nWhen two routes to the same destination\nmake it into the routing table,\n\n388\n00:19:02,740 --> 00:19:05,830\nCisco Express Forwarding kicks in and\nwe load balance.\n\n389\n00:19:05,830 --> 00:19:08,530\nSo that's a scenario where I might\ntake two routing protocols and\n\n390\n00:19:08,530 --> 00:19:13,330\ngive them the same admin distance, but I'd\nprobably just do that for specific routes.\n\n391\n00:19:13,330 --> 00:19:14,930\nI probably wouldn't do it for\nthe whole routing protocol.\n\n392\n00:19:14,930 --> 00:19:18,365\nYou do have a lot of control over that,\nall right?\n\n393\n00:19:18,365 --> 00:19:21,560\nBut, at it's base value, and we're going\nto see this throughout the rest of\n\n394\n00:19:21,560 --> 00:19:24,780\nthe series as we deal with routes, we'll\nsee this administrative distances popping\n\n395\n00:19:24,780 --> 00:19:28,515\nup, but as base theory, just remember,\nit's a way of setting a preference,\n\n396\n00:19:28,515 --> 00:19:32,690\nwhich routes you prefer over\nwhich routes you prefer less.\n\n397\n00:19:32,690 --> 00:19:34,850\nYou'll still use them, right,\nwith the exception of the 255.\n\n398\n00:19:34,850 --> 00:19:38,340\nYou'll still use them If you have to,\nbut you'd prefer something better.\n\n399\n00:19:39,980 --> 00:19:43,670\nAll right, so that's really about it for\nadmin distance.\n\n400\n00:19:43,670 --> 00:19:46,990\nKeep in mind the static routs just have an\nadmin distance, they don't have a metric.\n\n401\n00:19:46,990 --> 00:19:49,960\nDirectly connected routes don't\nhave either, they're just zero.\n\n402\n00:19:49,960 --> 00:19:55,240\nAll of the other routes have\na admin distance, and a metric.\n\n403\n00:19:55,240 --> 00:19:57,700\nAnd so\nwhen there's a tie on admin distance,\n\n404\n00:19:57,700 --> 00:20:01,760\nit's the metric that then makes the\ndecision from there, so keep that in mind.\n\n405\n00:20:01,760 --> 00:20:03,480\nUnless it's two different protocols.\n\n406\n00:20:03,480 --> 00:20:04,420\nIf you set OSPF and\n\n407\n00:20:04,420 --> 00:20:10,050\nRIP to have the same admin distance, their\nmetric is not really comparable, is it?\n\n408\n00:20:10,050 --> 00:20:14,420\nAnd what'll happen is hop count\nhas a maximum value of 16.\n\n409\n00:20:14,420 --> 00:20:19,470\nIn a OSPF metric, your metric will be\nusually in the hundreds of thousands, and\n\n410\n00:20:19,470 --> 00:20:20,680\nso they don't compare.\n\n411\n00:20:20,680 --> 00:20:22,210\nAnd that can result in\nsome problems there too.\n\n412\n00:20:22,210 --> 00:20:24,000\nSo you gotta be careful\nwith things like that.\n\n413\n00:20:24,000 --> 00:20:26,940\nWhen you start manipulating admin\ndistance, you've really gotta watch\n\n414\n00:20:26,940 --> 00:20:31,230\nyour routing table to make sure you\nget the proper desired results.\n\n415\n00:20:31,230 --> 00:20:33,330\nYou gotta monitor for sub-optimal routing.\n\n416\n00:20:33,330 --> 00:20:36,220\nAnd in fact, I think we have\na specific exam objective for that.\n\n417\n00:20:36,220 --> 00:20:38,460\nRight?\nIt's a, I think it's in this section,\n\n418\n00:20:38,460 --> 00:20:40,250\nthree point something.\n\n419\n00:20:40,250 --> 00:20:41,660\nMonitor for some optimal routing.\n\n420\n00:20:41,660 --> 00:20:43,570\nSo we'll get a chance to see\nthat a little bit later on.\n\n421\n00:20:43,570 --> 00:20:45,470\nAll right Ronnie,\n\n422\n00:20:45,470 --> 00:20:48,000\ncan you think of anything else\nto throw in on admin distance?\n\n423\n00:20:48,000 --> 00:20:50,160\n>> Nope, yeah,\nthat's pretty good coverage, so.\n\n424\n00:20:50,160 --> 00:20:51,860\n>> All right, I appreciate it.\n\n425\n00:20:51,860 --> 00:20:53,960\nAnd we'll post these\nnotes with the episode.\n\n426\n00:20:53,960 --> 00:20:58,140\nThis little diagram I'm showing,\nit'll be a PDF attached to the episode.\n\n427\n00:20:58,140 --> 00:20:59,990\nThis is something that Ronnie made.\n\n428\n00:20:59,990 --> 00:21:01,710\nRonnie does the best notes.\n\n429\n00:21:01,710 --> 00:21:02,900\nSo yeah, we'll post that.\n\n430\n00:21:02,900 --> 00:21:04,410\nBut you can find it on Cisco's website,\n\n431\n00:21:04,410 --> 00:21:07,410\nor every Cisco textbook has this\ntable printed in there too.\n\n432\n00:21:07,410 --> 00:21:08,680\nSo definitely something to memorize.\n\n433\n00:21:08,680 --> 00:21:10,890\nIt's not so bad.\n\n434\n00:21:10,890 --> 00:21:12,770\nAll right, well let's go ahead and\nwrap this one up here.\n\n435\n00:21:12,770 --> 00:21:14,960\nDo remember if you have any questions,\nlet us know.\n\n436\n00:21:14,960 --> 00:21:17,649\nLive during the show you\ncan go to itpro.tv/live.\n\n437\n00:21:17,649 --> 00:21:20,220\nThere's a chat box right\nbeneath the video.\n\n438\n00:21:20,220 --> 00:21:21,020\nPost your question there.\n\n439\n00:21:21,020 --> 00:21:23,160\nWe monitor and answer during the show.\n\n440\n00:21:23,160 --> 00:21:26,560\nIf you have questions after the show,\nuse our Q&A forums.\n\n441\n00:21:26,560 --> 00:21:29,750\nTop of every page you'll see a link that\nsays Q&A, it'll take you to the forums,\n\n442\n00:21:29,750 --> 00:21:33,110\npost your questions there,\nwe monitor and answer after the show.\n\n443\n00:21:33,110 --> 00:21:35,410\nI hope you guys enjoyed this episode.\n\n444\n00:21:35,410 --> 00:21:37,591\nSigning off right,\nIT Pro TV, I'm Don Pezet.\n\n445\n00:21:37,591 --> 00:21:38,091\n>> I'm Ronnie Wong.\n\n446\n00:21:38,091 --> 00:21:38,996\n>> And we'll see you next time.\n\n447\n00:21:38,996 --> 00:21:45,489\n[MUSIC]\n\n",
          "vimeoId": "118920351"
        },
        {
          "description": "Passive interfaces are a tool built into Cisco routers, which allows one to have a little more control over where a routing protocol runs. By default routing protocols advertise out of all interfaces configured in the routing protocol and passive interfaces can be used to prevent advertising specific protocols. Viewers will hear discussions about passive interfaces and the various behaviors when using EIGRP, OSPF and RIP.",
          "length": "2449",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/ccnproute/cisco-ccnproute-3-7-passive_interfaces-020515-2.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/ccnproute/cisco-ccnproute-3-7-passive_interfaces-020515-2-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/ccnproute/cisco-ccnproute-3-7-passive_interfaces-020515-2-sm.jpg",
          "title": "Passive Interfaces",
          "transcript": "1\n00:00:00,000 --> 00:00:10,000\n[MUSIC]\n\n2\n00:00:33,153 --> 00:00:36,530\nAll right, good morning,\ngood afternoon and good evening and\n\n3\n00:00:36,530 --> 00:00:38,961\nwelcome back to another\nepisode of ITProTV.\n\n4\n00:00:38,961 --> 00:00:42,021\nI'm your host Don Pezet,\nback again with Mr. Ronnie Wong.\n\n5\n00:00:42,021 --> 00:00:42,870\nHow's it going Ronnie?\n\n6\n00:00:42,870 --> 00:00:43,890\n>> It is going well.\n\n7\n00:00:43,890 --> 00:00:46,270\nI am all caught up on my\nDowntown Abbey references.\n\n8\n00:00:46,270 --> 00:00:49,890\nAnd so we are ready for\nanother exciting CCNP show.\n\n9\n00:00:49,890 --> 00:00:53,470\n>> Well, we are jumping into\na neat one for this episode.\n\n10\n00:00:53,470 --> 00:00:58,430\nNormally, we're talking about how to\nestablish routing communications between\n\n11\n00:00:58,430 --> 00:01:01,220\nsystems so that they can all\nlearn each others routes.\n\n12\n00:01:01,220 --> 00:01:04,110\nBut in today's episode,\nwe're gonna tackle passive interface,\n\n13\n00:01:04,110 --> 00:01:06,300\nwhich is are all about\nnot learning routes, so\n\n14\n00:01:06,300 --> 00:01:09,750\ntoday we're going to learn how not\nto learn, which is pretty awesome.\n\n15\n00:01:09,750 --> 00:01:12,070\nSo it's like being in college again!\n\n16\n00:01:12,070 --> 00:01:16,250\nSo what we're gonna do is we're going\nto take a look at passive interfaces,\n\n17\n00:01:16,250 --> 00:01:21,730\nand passive interfaces are a pretty neat\ntool that's built into every Cisco router,\n\n18\n00:01:21,730 --> 00:01:24,910\nbecause it allows you to\nhave a little more control\n\n19\n00:01:24,910 --> 00:01:27,820\nover where your routing protocols run,\nall right?\n\n20\n00:01:27,820 --> 00:01:29,750\nLet's just start off with what it does.\n\n21\n00:01:29,750 --> 00:01:33,120\nThe passive-interface is a command that\nwhen we issue it on to an interface,\n\n22\n00:01:33,120 --> 00:01:38,720\nwe're basically saying,\ndo not participate in a routing protocol.\n\n23\n00:01:38,720 --> 00:01:42,540\nWe might want to advertise\na network into a routing protocol,\n\n24\n00:01:42,540 --> 00:01:45,150\nbut not actually have\nthe interface participate.\n\n25\n00:01:45,150 --> 00:01:46,230\nNow that sounds confusing.\n\n26\n00:01:46,230 --> 00:01:50,510\nLet me show a diagram here so I can kind\nof communicate this a little better.\n\n27\n00:01:51,810 --> 00:01:54,100\nSo let’s say I’ve got\na network like this one,\n\n28\n00:01:54,100 --> 00:01:56,480\nmaybe with some less lines on it here.\n\n29\n00:01:56,480 --> 00:01:58,440\nSo I’ve got a network like this one.\n\n30\n00:01:58,440 --> 00:02:03,220\nAnd I'm running, we'll say we're\nrunning EIGRP across all these routers.\n\n31\n00:02:03,220 --> 00:02:05,830\nSo they're all learning\neach other's information.\n\n32\n00:02:05,830 --> 00:02:10,400\nWell router A is plugged into\nthe 192.168.0.0 network and\n\n33\n00:02:10,400 --> 00:02:14,280\nI want all the other\nrouters to learn about it.\n\n34\n00:02:14,280 --> 00:02:18,660\nSo I want to propagate that data out and\nhave everybody get that network and\n\n35\n00:02:18,660 --> 00:02:20,610\nbe happy and all of that.\n\n36\n00:02:20,610 --> 00:02:22,436\nThe happiness of these\nrouters is important to me.\n\n37\n00:02:22,436 --> 00:02:25,720\n[LAUGH] So\nwe're letting that replicate out.\n\n38\n00:02:25,720 --> 00:02:27,360\nBut here's the thing.\n\n39\n00:02:27,360 --> 00:02:29,600\nIn most of our routing protocols, in RIP,\n\n40\n00:02:29,600 --> 00:02:34,060\nEIGRP, OSPF, we go into our routing\nprotocols configuration and\n\n41\n00:02:34,060 --> 00:02:38,400\nwe say, network 192.168.0.0,\nright that advertises the network in, or\n\n42\n00:02:38,400 --> 00:02:43,780\nOSPF, you have to specify an area\nnumber also but we advertised it out.\n\n43\n00:02:43,780 --> 00:02:47,420\nWhen you use that network command,\nit's actually doing two things.\n\n44\n00:02:47,420 --> 00:02:49,280\nOne, it's advertising the network,\nthat's what I want.\n\n45\n00:02:49,280 --> 00:02:53,510\nIt's advertising this 192.168.0\nnetwork to all the other routers so\n\n46\n00:02:53,510 --> 00:02:54,990\nthey can learn about it.\n\n47\n00:02:54,990 --> 00:02:58,440\nBut the other thing it's doing is it's\nsaying let's start sending updates\n\n48\n00:02:58,440 --> 00:03:02,500\nout this interface in case\nthere's any routers over here.\n\n49\n00:03:02,500 --> 00:03:06,810\nThat interface is now participating\nin our routing protocol.\n\n50\n00:03:06,810 --> 00:03:08,390\nNow, we might not want that.\n\n51\n00:03:08,390 --> 00:03:10,110\nAnd why wouldn't we want that there?\n\n52\n00:03:10,110 --> 00:03:13,160\n>> Well, when we take a look\nat this example, right?\n\n53\n00:03:13,160 --> 00:03:14,650\nIf there are no other routers,\nin other words,\n\n54\n00:03:14,650 --> 00:03:18,890\nif there's no chance of another router\nbeing over there to participate, why\n\n55\n00:03:18,890 --> 00:03:23,530\nare we sending out the possibility that\nwe're going to want to participate in it?\n\n56\n00:03:23,530 --> 00:03:26,670\nReally it's just wasting\nthe resources on that router, so\n\n57\n00:03:26,670 --> 00:03:30,740\nwhat we might want to choose to do is to\nallow the other interfaces to participate,\n\n58\n00:03:30,740 --> 00:03:35,870\nbut not this one that's connected to that\nsubnet over there on the 0.0 network.\n\n59\n00:03:35,870 --> 00:03:38,170\n>> Yeah, and we achieved that\nby flagging it as passive.\n\n60\n00:03:38,170 --> 00:03:40,640\nPassive says yes I want to\nadvertise the network, but\n\n61\n00:03:40,640 --> 00:03:42,980\nno I don't want that\ninterface to participate.\n\n62\n00:03:42,980 --> 00:03:46,830\nThe risk if you don't do this,\nis let's say this guy named Don\n\n63\n00:03:46,830 --> 00:03:51,590\ncomes onto your network and\nhe is just a real bad guy, right?\n\n64\n00:03:51,590 --> 00:03:54,268\nJust awesome amazing skills [LAUGH].\n\n65\n00:03:54,268 --> 00:03:57,660\nSo anyhow, somebody who's not very nice,\nand he goes onto Google and\n\n66\n00:03:57,660 --> 00:03:59,959\nhe does a Google search for\na OSPF hack utility,\n\n67\n00:03:59,959 --> 00:04:03,431\nand five minutes later he's got a hack\nutility running on his machine.\n\n68\n00:04:03,431 --> 00:04:04,726\nAnd he listens and\n\n69\n00:04:04,726 --> 00:04:10,480\nsees the OSPF Multi-task communications\nare going across the network.\n\n70\n00:04:10,480 --> 00:04:14,360\nAnd then he advertises it out, and says\nhey I'm an OSPF router, talk to me, right?\n\n71\n00:04:14,360 --> 00:04:17,060\nAnd starts exchanging\nroutes with router A.\n\n72\n00:04:17,060 --> 00:04:19,740\nAnd then he starts injecting\nfalse routes and says oh,\n\n73\n00:04:19,740 --> 00:04:23,240\nby the way, I can get you to\n192.168.1.0 really, really fast.\n\n74\n00:04:24,700 --> 00:04:27,620\nAnd so you start routing your\ntraffic to this other network.\n\n75\n00:04:27,620 --> 00:04:29,640\nInstead of going over here,\nyou route it to this laptop.\n\n76\n00:04:29,640 --> 00:04:32,600\nAnd now I start intercepting,\nI mean not me, somebody named Don,\n\n77\n00:04:32,600 --> 00:04:36,180\nstarts intercepting this traffic,\nand they've got access to it.\n\n78\n00:04:36,180 --> 00:04:38,150\nThey can read through the data,\nthey can sift through it.\n\n79\n00:04:38,150 --> 00:04:41,040\nYou've basically got a man\nin the middle attack now.\n\n80\n00:04:41,040 --> 00:04:42,450\nThat's one of the risks that we have.\n\n81\n00:04:42,450 --> 00:04:46,380\nAnd some of the routing protocols,\nlike OSPF, support doing authentication,\n\n82\n00:04:46,380 --> 00:04:48,430\nwhere we can put user\nauthentication in there,\n\n83\n00:04:48,430 --> 00:04:51,030\nand that would stop this\ntype of attack too.\n\n84\n00:04:51,030 --> 00:04:55,880\nBut, it would be better to just not make\nthe attack possible in the first place,\n\n85\n00:04:55,880 --> 00:04:59,600\nand by making this interface right here\npassive, we can solve that problem.\n\n86\n00:05:00,790 --> 00:05:04,330\nNow, we've already talked about passive\ninterfaces back in the CCNA level, so\n\n87\n00:05:04,330 --> 00:05:07,290\neverything that I've said so\nfar should be stuff you're familiar with.\n\n88\n00:05:07,290 --> 00:05:10,290\nBut on the CCNP,\nthey get a little bit more picky.\n\n89\n00:05:10,290 --> 00:05:13,890\nThere's actually some weird behaviors\ninside of the passive interface command\n\n90\n00:05:13,890 --> 00:05:15,130\nthat we need to be aware of.\n\n91\n00:05:15,130 --> 00:05:18,120\nIt doesn't function the same way for\nevery protocol.\n\n92\n00:05:19,540 --> 00:05:22,540\nEverything that I just said in\nthe beginning of the segment is true for\n\n93\n00:05:22,540 --> 00:05:23,830\neach of the protocols.\n\n94\n00:05:23,830 --> 00:05:27,190\nBut then there's little caveats\nthat make that behavior weird.\n\n95\n00:05:27,190 --> 00:05:29,670\nAll right, let's start with EIGRP.\n\n96\n00:05:29,670 --> 00:05:33,920\nEIGRP is the one that's the poster\nchild that works the way that we would\n\n97\n00:05:33,920 --> 00:05:35,160\nexpect it to.\n\n98\n00:05:35,160 --> 00:05:40,420\nWhen you flag an interface as passive,\nthe interface effectively disappears\n\n99\n00:05:40,420 --> 00:05:44,820\nas far as participation in EIGRP, but\nthe network still gets activated.\n\n100\n00:05:44,820 --> 00:05:46,930\nLet me show you what I mean.\n\n101\n00:05:46,930 --> 00:05:50,590\nI've got two routers and\nI'll just flip over to them here.\n\n102\n00:05:50,590 --> 00:05:52,968\nI've got a headquarters and\na branch router.\n\n103\n00:05:52,968 --> 00:05:57,380\nAnd they're connected via\nan Ethernet link, right?\n\n104\n00:05:57,380 --> 00:06:03,600\nSo if I go into my headquarters router\nand, let me make that a little bit bigger.\n\n105\n00:06:03,600 --> 00:06:07,500\nAnd I'll go ahead get into it,\ne0/0, and do a no shutdown, and\n\n106\n00:06:07,500 --> 00:06:11,070\nI'll do the same thing\non my branch router.\n\n107\n00:06:12,950 --> 00:06:16,240\nI'll get into e0/0 and do a no shutdown.\n\n108\n00:06:16,240 --> 00:06:22,307\nAll right, so they both are connected\nvia this e0/0 interface and\n\n109\n00:06:22,307 --> 00:06:28,594\nif I look at that interface\ne0/0 is 192.168.0 something.\n\n110\n00:06:28,594 --> 00:06:32,030\nHeadquarters is dot one,\nthe branch is dot two.\n\n111\n00:06:32,030 --> 00:06:35,660\nSo if I come in here and\nI say router EIGRP followed by an AS\n\n112\n00:06:37,970 --> 00:06:41,170\nnumber, I'll just do AS one,\nand network 192.168.0.0,\n\n113\n00:06:41,170 --> 00:06:46,200\nthat just turned on EIGRP for\nthat interface, for e0/0.\n\n114\n00:06:46,200 --> 00:06:49,090\nIt's now actively participating and\nlooking for\n\n115\n00:06:49,090 --> 00:06:52,400\nneighbors inside of that network,\nall right?\n\n116\n00:06:52,400 --> 00:06:55,830\nIf I go to headquarters,\nand I do the same thing.\n\n117\n00:06:55,830 --> 00:06:56,670\nWhoops, already in there.\n\n118\n00:06:58,870 --> 00:07:04,091\nAnd I just do router eigrp\n1 network 192.168.0.0.\n\n119\n00:07:04,091 --> 00:07:06,767\nNow it's bringing up\nthat e00 interface and\n\n120\n00:07:06,767 --> 00:07:09,930\nthere I just saw the neighbor\nrelationship build up.\n\n121\n00:07:09,930 --> 00:07:15,340\nWe built a neighbor relationship up\nover that link because we wanted that.\n\n122\n00:07:15,340 --> 00:07:19,168\nNow, if I start to inject some routes\nin each of these routers here,\n\n123\n00:07:19,168 --> 00:07:20,725\nthey know the E00 route.\n\n124\n00:07:20,725 --> 00:07:22,943\nThey know that between each other\nbecause they're directly connected.\n\n125\n00:07:22,943 --> 00:07:24,708\nSo I need to add some other networks.\n\n126\n00:07:24,708 --> 00:07:29,740\nSo on this one,\nI'll add network 172.16.0.0.\n\n127\n00:07:29,740 --> 00:07:38,040\nIf I look at my interfaces, 172.16.0.0\nis attached to my e0/1 interface.\n\n128\n00:07:38,040 --> 00:07:40,884\nAnd so when I issued that command,\n\n129\n00:07:40,884 --> 00:07:46,684\nwhat it just did is it made e0/1\na full participant inside of EIGRP.\n\n130\n00:07:46,684 --> 00:07:50,746\nNow that means that network is\nbeing advertised in EIGRP and\n\n131\n00:07:50,746 --> 00:07:54,724\nif I jump over to branch one,\nand I do a show IP route EIGRP,\n\n132\n00:07:54,724 --> 00:07:58,967\nI can see I'm learning\nthat 172.16.0.0 network.\n\n133\n00:07:58,967 --> 00:07:59,618\nThat's what I wanted.\n\n134\n00:07:59,618 --> 00:08:00,825\nThat's why I did that network command.\n\n135\n00:08:00,825 --> 00:08:09,289\nbut, the interface over on headquarter\nis now participating in EIGRP.\n\n136\n00:08:09,289 --> 00:08:15,570\nIf I do a, show IP protocols, and\nI look at the output for EIGRP.\n\n137\n00:08:15,570 --> 00:08:18,740\nYou can look down here and\nit gives you information about it,\n\n138\n00:08:18,740 --> 00:08:20,600\nwhat it's doing and then right here.\n\n139\n00:08:20,600 --> 00:08:25,466\nRouting for\ninterfaces 172.16.0 and 192.168.0,\n\n140\n00:08:25,466 --> 00:08:32,070\nit's handling those interfaces and looking\nfor other neighbors that are out there.\n\n141\n00:08:32,070 --> 00:08:34,950\nNow we don't see that, right, it's kind\nof invisible in the background, but\n\n142\n00:08:34,950 --> 00:08:38,250\na quick debug will kind of reveal\nthat if we want to look for it.\n\n143\n00:08:38,250 --> 00:08:42,350\nHere I'll do a debug let's\nsee if I can remember this,\n\n144\n00:08:42,350 --> 00:08:44,470\nEIGRP packets is what I want.\n\n145\n00:08:45,510 --> 00:08:49,830\nAll right, so\nnow I'm debugging all my EIGRP packets and\n\n146\n00:08:49,830 --> 00:08:53,590\nI can see that I'm sending a hello\n\n147\n00:08:54,810 --> 00:09:00,600\nout E0/0 and\nI'm sending a hello out E0/1 right there.\n\n148\n00:09:00,600 --> 00:09:04,860\nI'm sending out hellos our both,\nE00 and E01 which means if somebody's\n\n149\n00:09:04,860 --> 00:09:10,200\nout on that 172.16 network, the one that's\nconnected to E01, they'll hear my hellos.\n\n150\n00:09:10,200 --> 00:09:13,030\nAnd they can send me a hello back and\ntry and join.\n\n151\n00:09:13,030 --> 00:09:16,330\nI'm advertising out to a network\nwhere there's no routers.\n\n152\n00:09:16,330 --> 00:09:19,360\nSo the only possible person that could\npop up in there would be an attackers.\n\n153\n00:09:19,360 --> 00:09:22,380\nThere's no legitimate reason a router\nshould be on that interface.\n\n154\n00:09:22,380 --> 00:09:25,460\nSo I probably want to\nflag that as passive.\n\n155\n00:09:25,460 --> 00:09:30,520\nLet me just turn off debugging and\nthen we'll flag it as passive.\n\n156\n00:09:30,520 --> 00:09:33,900\nNow fortunately flagging an interface\nas passive is super easy.\n\n157\n00:09:33,900 --> 00:09:37,820\nInside of our routing protocol,\nso I did router EIGRP one,\n\n158\n00:09:37,820 --> 00:09:43,067\nI then just say passive -interface E0/1.\n\n159\n00:09:43,067 --> 00:09:45,370\nI'm going to make that interface passive.\n\n160\n00:09:46,690 --> 00:09:51,070\nAnd if I turn my debugs back on,\nwe'll see how that changes.\n\n161\n00:09:52,690 --> 00:09:53,540\nSo there we go.\n\n162\n00:09:53,540 --> 00:09:58,710\nNow if I watch, I should still see\nhow low it's going out E00, but\n\n163\n00:09:58,710 --> 00:10:00,970\nI shouldn't see how low is\ngoing out E01 anymore, right.\n\n164\n00:10:00,970 --> 00:10:05,900\nSo I'm just going to watch this for\na second and make sure E01 doesn't pop up.\n\n165\n00:10:05,900 --> 00:10:09,960\nI see zero zero, zero zero,\nright lots of zero zero, no E01.\n\n166\n00:10:09,960 --> 00:10:16,190\nRight, but if I jump over to branch one,\nand I do a show IP route EIGRP.\n\n167\n00:10:16,190 --> 00:10:19,180\nI'm still learning that network.\n\n168\n00:10:19,180 --> 00:10:20,570\nThat's what I wanted.\n\n169\n00:10:20,570 --> 00:10:22,290\nI'm learning the network, but\n\n170\n00:10:22,290 --> 00:10:27,100\nI'm not allowing that interface to\nfunction in EIGRP, and that's what I want.\n\n171\n00:10:27,100 --> 00:10:28,410\nRight?\n\n172\n00:10:28,410 --> 00:10:33,650\nNow the configuration that I just did\nthere that's good if you just want\n\n173\n00:10:33,650 --> 00:10:36,400\none interface to be that way, right?\n\n174\n00:10:36,400 --> 00:10:39,100\nBut what if you want all\nof your interfaces to be or\n\n175\n00:10:39,100 --> 00:10:42,530\nmaybe a hundred interfaces you\nwant them all to be passive and\n\n176\n00:10:42,530 --> 00:10:45,150\njust one or two not passive, All right.\n\n177\n00:10:45,150 --> 00:10:48,020\nWell doing it this way is\na little bit time consuming and\n\n178\n00:10:48,020 --> 00:10:49,135\nI think going here and say.\n\n179\n00:10:49,135 --> 00:10:51,850\nPassive-interface, and\nthen specify that for\n\n180\n00:10:51,850 --> 00:10:54,830\neach of the various interfaces that\nwere out there, that would take a while.\n\n181\n00:10:54,830 --> 00:10:56,937\nI’d get really bored really fast.\n\n182\n00:10:56,937 --> 00:11:05,280\nSo instead, what you can do is you\ncan say passive-interface default,\n\n183\n00:11:06,800 --> 00:11:10,760\nand now it makes all of\nthe interfaces passive by default.\n\n184\n00:11:10,760 --> 00:11:13,270\nAnd notice my adjacency just dropped.\n\n185\n00:11:13,270 --> 00:11:16,930\nI just lost my neighbor because\nall of my interfaces are passive.\n\n186\n00:11:16,930 --> 00:11:22,560\nSo then I need to override it by\nsaying no passive-interface E0/0 and\n\n187\n00:11:22,560 --> 00:11:29,000\nthat’s going to put it back, and there\nmy neighbor should come in back again.\n\n188\n00:11:29,000 --> 00:11:31,800\nSo if you're wanting to make\na lot of interfaces passive,\n\n189\n00:11:31,800 --> 00:11:33,890\nswitches to the default is passive and\n\n190\n00:11:33,890 --> 00:11:37,030\nthen you just put exceptions in for\nthe interfaces that you want.\n\n191\n00:11:37,030 --> 00:11:42,060\nAnd if we take a look at\nthat EIGRP configuration\n\n192\n00:11:42,060 --> 00:11:45,360\nyou can see where I still have\nthe passive interface default.\n\n193\n00:11:45,360 --> 00:11:47,870\nBut I've got that over ride in there for\nE00.\n\n194\n00:11:47,870 --> 00:11:51,800\nAnd the passive interface\nE00 is gone because\n\n195\n00:11:51,800 --> 00:11:54,300\nthe default command over wrote it so\nit disappeared.\n\n196\n00:11:54,300 --> 00:11:55,540\nAnd now I've got it set this way.\n\n197\n00:11:55,540 --> 00:11:57,560\nSame result or\nit should be the same result.\n\n198\n00:11:57,560 --> 00:11:58,540\nLet's turn on my debugs.\n\n199\n00:12:00,050 --> 00:12:01,800\nGuess I could be wrong.\n\n200\n00:12:01,800 --> 00:12:03,120\nSo we'll debug that one.\n\n201\n00:12:03,120 --> 00:12:07,660\nI should still only be seeing\nhello activity on e zero zero and\n\n202\n00:12:07,660 --> 00:12:08,380\nthere goes some now.\n\n203\n00:12:09,730 --> 00:12:14,800\nSo not seeing any hello activity on\nE01 and if I jump over to branch one\n\n204\n00:12:17,330 --> 00:12:23,125\nand do a show IP route EIGRP I'm\nstill learning that 172.16 network,\n\n205\n00:12:23,125 --> 00:12:27,335\nright, so everything's functioning the way\nthat I want, just different default value.\n\n206\n00:12:27,335 --> 00:12:30,205\n>> Every one in a while when you're\nstarting to troubleshoot this.\n\n207\n00:12:30,205 --> 00:12:33,155\nA lot of times you can also see\nthe passive interface by going into\n\n208\n00:12:33,155 --> 00:12:34,675\nthe show IP protocols.\n\n209\n00:12:34,675 --> 00:12:36,465\nDon can we do that on\nthe headquarters rounder?\n\n210\n00:12:36,465 --> 00:12:37,795\n>> Sure.\n>> That way you actually end up\n\n211\n00:12:37,795 --> 00:12:39,425\nseeing that there's a list piece.\n\n212\n00:12:39,425 --> 00:12:40,735\nSometimes you're actually wondering,\n\n213\n00:12:40,735 --> 00:12:43,430\nwhy is this not working even\nthough the protocol's set?\n\n214\n00:12:43,430 --> 00:12:44,440\nAnd if we take a look,\n\n215\n00:12:44,440 --> 00:12:48,300\nnotice under passive interfaces right\nthere, it lists it right there.\n\n216\n00:12:48,300 --> 00:12:52,180\nThat might be the reason why you're not\ngetting the actual advertisement sort of\n\n217\n00:12:52,180 --> 00:12:55,100\nthe hellos on that interface that\nyou think that you're supposed\n\n218\n00:12:55,100 --> 00:12:56,600\nto be getting it on.\n\n219\n00:12:56,600 --> 00:12:59,580\nSo another quick and easy way for\nyou check that out too.\n\n220\n00:12:59,580 --> 00:13:02,980\n>> Yeah, troubleshooting\na network not showing up or\n\n221\n00:13:02,980 --> 00:13:05,790\na router adjacency not building\nup can be kind of tricky.\n\n222\n00:13:05,790 --> 00:13:08,320\nAnd show IP protocols is a good\nway to get a summary of that.\n\n223\n00:13:08,320 --> 00:13:11,930\nYou see all sorts of good stuff in here,\nlike your admin distance,\n\n224\n00:13:11,930 --> 00:13:15,510\nthat's important, the interfaces,\nthe networks you're routing for.\n\n225\n00:13:15,510 --> 00:13:18,070\nBut that passive interface\nlist is important.\n\n226\n00:13:18,070 --> 00:13:21,610\nI did the passive interface default\ncommand which grabbed them all, but\n\n227\n00:13:21,610 --> 00:13:24,410\nit's going to list each of my\nindividual interfaces right there and\n\n228\n00:13:24,410 --> 00:13:25,590\nwhich ones are passive.\n\n229\n00:13:25,590 --> 00:13:31,930\nIf I were to fire up all of my other\nnetworks, if I were to get into Oops.\n\n230\n00:13:31,930 --> 00:13:32,820\nOh, I'm already in my router.\n\n231\n00:13:32,820 --> 00:13:34,720\nIf I were to do something like,\nnetwork 0.0.0.0, right,\n\n232\n00:13:34,720 --> 00:13:39,090\nI'm just going to fire up EIGRP for\nall of my interfaces.\n\n233\n00:13:39,090 --> 00:13:39,860\nOkay.\n\n234\n00:13:39,860 --> 00:13:42,900\nWhen I do that,\nthe default command kicks in.\n\n235\n00:13:42,900 --> 00:13:46,465\nAnd when I take a look at my protocols,\n\n236\n00:13:46,465 --> 00:13:48,325\neach one will start\ngetting listed under here.\n\n237\n00:13:48,325 --> 00:13:49,645\nI say it'll start,\nI guess they're shut down?\n\n238\n00:13:53,355 --> 00:13:56,025\nNo they're up but I put the network\ncommand in wrong, let's see.\n\n239\n00:13:56,025 --> 00:13:59,795\nOh, I need to leave that off, there we go.\n\n240\n00:13:59,795 --> 00:14:07,770\nLet's give that a second And\nit's not creeping in there.\n\n241\n00:14:07,770 --> 00:14:09,190\n>> Yeah.\n>> Well that's crazy.\n\n242\n00:14:09,190 --> 00:14:10,820\nWell I can manually enter them in.\n\n243\n00:14:10,820 --> 00:14:14,590\nEIGRP does take a wild card where you\ncan just turn on all of your networks at\n\n244\n00:14:14,590 --> 00:14:16,480\nonce but\nit doesn't seem to be accepting mine.\n\n245\n00:14:16,480 --> 00:14:19,530\nI put it in there as\nthat bigger wild card.\n\n246\n00:14:19,530 --> 00:14:23,600\nIt's not catching it, but\nwe can always do it by hand.\n\n247\n00:14:23,600 --> 00:14:26,820\nIf I start to add other networks, though,\nthey're going to default to passive and\n\n248\n00:14:26,820 --> 00:14:27,760\nthey'll get added to that list,\n\n249\n00:14:27,760 --> 00:14:32,360\nwhich helps with troubleshooting, so\nlet me just add some of these other ones.\n\n250\n00:14:32,360 --> 00:14:37,055\nWhat else do we have?\n\n251\n00:14:37,055 --> 00:14:40,130\n204.109.63, oops.\n\n252\n00:14:40,130 --> 00:14:40,760\nWe’ve got 181,\n\n253\n00:14:40,760 --> 00:14:44,240\nyou know all of these different ISP\nnetworks I’ve got on this router.\n\n254\n00:14:47,072 --> 00:14:49,506\nAnd we’ll just two more.\n\n255\n00:14:49,506 --> 00:14:53,070\nI don’t want to get too bored\nhere punching in networks.\n\n256\n00:14:53,070 --> 00:14:58,610\nI get bored easy and\nnow when I do show IP protocols, we can\n\n257\n00:14:58,610 --> 00:15:03,450\nsee the showing up here and why are they\nnot showing up on my passive interface?\n\n258\n00:15:03,450 --> 00:15:04,220\nWhat have I done?\n\n259\n00:15:04,220 --> 00:15:05,740\nLet's verify my configuration.\n\n260\n00:15:07,802 --> 00:15:10,565\nAll right, so just looking at my\nconfiguration here I've got my network\n\n261\n00:15:10,565 --> 00:15:12,460\n0.0, that should have caught them all.\n\n262\n00:15:12,460 --> 00:15:14,780\nI do have my passive interface default.\n\n263\n00:15:14,780 --> 00:15:18,220\nSo they should all have lit up\nin the passive interface list.\n\n264\n00:15:18,220 --> 00:15:20,360\nI'll see if my router's\nlearning them over here.\n\n265\n00:15:22,380 --> 00:15:28,390\nAnd we are learning them,\nthey are popping over.\n\n266\n00:15:28,390 --> 00:15:30,760\nSo there's the,\noh the 192's haven't made it have they?\n\n267\n00:15:30,760 --> 00:15:34,490\n>> Nope.\n>> Got a few little problems there.\n\n268\n00:15:34,490 --> 00:15:36,430\nWe might have some auto-summary\nproblems kicking in.\n\n269\n00:15:36,430 --> 00:15:38,610\nWe got some other EIGRP problems\nthat might be popping in and\n\n270\n00:15:38,610 --> 00:15:39,680\ncausing problems here.\n\n271\n00:15:39,680 --> 00:15:42,640\nBut basically they're all going to\nget flagged passive by default.\n\n272\n00:15:42,640 --> 00:15:44,680\nYou know a quick debug\nwill help find this out.\n\n273\n00:15:45,730 --> 00:15:48,565\nSo if I do a debug EIGRP packet,\nI can look and\n\n274\n00:15:48,565 --> 00:15:52,720\nsee if I'm seeing those hello\npackets go out other interfaces.\n\n275\n00:15:52,720 --> 00:15:56,504\nI expect to see the hello packets going\nout, let me turn that off real quick.\n\n276\n00:15:56,504 --> 00:16:02,192\nI expect to see them going out The E01,\nI mean the E00.\n\n277\n00:16:02,192 --> 00:16:03,725\nI don't expect to see them\ngoing out anywhere else.\n\n278\n00:16:03,725 --> 00:16:05,150\nNow I've got some receives.\n\n279\n00:16:05,150 --> 00:16:06,270\nI'm going to ignore those.\n\n280\n00:16:06,270 --> 00:16:08,430\nHere I'm sending a Hello out loop back 0.\n\n281\n00:16:08,430 --> 00:16:10,250\nI'm sending a Hello out, E03.\n\n282\n00:16:10,250 --> 00:16:13,650\nMy Passive Interface Command\nis not functioning.\n\n283\n00:16:13,650 --> 00:16:14,490\nSo, let's jump back in.\n\n284\n00:16:14,490 --> 00:16:15,780\nI'm going to re-issue the command.\n\n285\n00:16:18,670 --> 00:16:20,590\nShould have taken effect.\n\n286\n00:16:20,590 --> 00:16:25,700\nSo if I do passive, interface,\ndefault, that is really bizarre.\n\n287\n00:16:25,700 --> 00:16:28,390\nI might have hit a bug in this IOS or\nsomething.\n\n288\n00:16:28,390 --> 00:16:31,650\nSo, now all those other interfaces that\nI dragged in with the network command.\n\n289\n00:16:31,650 --> 00:16:33,610\nThey should be flagged\nas passive by default.\n\n290\n00:16:37,080 --> 00:16:38,615\nNope, they are not flagging as passive.\n\n291\n00:16:38,615 --> 00:16:39,781\n[CROSSTALK] What he heck is going on.\n\n292\n00:16:39,781 --> 00:16:44,340\nThat is bizarre so this is an example,\nthough, of how we kind of troubleshoot it.\n\n293\n00:16:44,340 --> 00:16:47,470\nWhen I didn't see those interfaces\nhere in the passive interface list,\n\n294\n00:16:47,470 --> 00:16:49,780\nthat was my first indication\nthere was a problem.\n\n295\n00:16:49,780 --> 00:16:52,810\nAnd then when I checked my config.\n\n296\n00:16:52,810 --> 00:16:55,520\nAnd I had that passive\ninterface default set,\n\n297\n00:16:55,520 --> 00:16:57,710\nwell that's how it's supposed to work.\n\n298\n00:16:57,710 --> 00:17:00,290\nBut the way I verified that\nultimately was with a debug.\n\n299\n00:17:00,290 --> 00:17:03,360\nWith a debug you can see whether\nyou're sending those hello packets.\n\n300\n00:17:03,360 --> 00:17:06,720\nAnd in my case,\nI was It's behaving in an odd manner.\n\n301\n00:17:06,720 --> 00:17:08,280\nSo this is definitely a problem.\n\n302\n00:17:08,280 --> 00:17:10,940\nThis is really where\nyou'd give Cisco a call.\n\n303\n00:17:10,940 --> 00:17:16,120\nActually, what I'd probably do\nis just to be on the safe side,\n\n304\n00:17:16,120 --> 00:17:20,160\nis turn off the passive interface and\nturn it all back on again.\n\n305\n00:17:20,160 --> 00:17:23,188\nWhat you can do is you\ncan basically say no.\n\n306\n00:17:23,188 --> 00:17:28,425\nPassive-interface default.\n\n307\n00:17:28,425 --> 00:17:32,877\nAnd then we can say,\nlet's just put it right back again.\n\n308\n00:17:32,877 --> 00:17:37,110\nPassive-interface default.\n\n309\n00:17:37,110 --> 00:17:41,210\nWe can get out and we can clear,\nlet's see, I think it's clear EIGRP.\n\n310\n00:17:41,210 --> 00:17:42,490\nNope.\n\n311\n00:17:42,490 --> 00:17:44,430\nClear IP EIGRP 1.\n\n312\n00:17:45,700 --> 00:17:48,800\nAnd then neighbors.\n\n313\n00:17:48,800 --> 00:17:51,540\nSo I'm just gonna drop\nmy routing table there.\n\n314\n00:17:51,540 --> 00:17:55,570\nSo I'm gonna clear that out and\nbasically get EIGRP to resync for me,\n\n315\n00:17:55,570 --> 00:17:58,090\njust in case it's cache,\nsomething crazy or whatever.\n\n316\n00:18:00,845 --> 00:18:02,680\nAnd there we go.\n\n317\n00:18:02,680 --> 00:18:03,325\n>> There we go.\n\n318\n00:18:03,325 --> 00:18:05,190\n[LAUGH]\n>> Now it's picking up.\n\n319\n00:18:05,190 --> 00:18:07,390\nSo even though I put the commands in.\n\n320\n00:18:07,390 --> 00:18:10,920\nYou guys saw, I just put the exact\nsame commands in that I already had.\n\n321\n00:18:10,920 --> 00:18:13,230\nBut I can see that I'm routing for\nall these networks.\n\n322\n00:18:13,230 --> 00:18:15,030\nMy passive interface list though,\n\n323\n00:18:15,030 --> 00:18:20,120\nis much larger now, cuz it's grabbing all\nof those other interfaces by default.\n\n324\n00:18:20,120 --> 00:18:22,110\nThey're showing up right\nthere in the list and\n\n325\n00:18:22,110 --> 00:18:24,390\nmy hellos, oh actually my E00 is passive.\n\n326\n00:18:24,390 --> 00:18:29,490\nI've gotta put that exception back in or\nthat'll be a problem.\n\n327\n00:18:29,490 --> 00:18:32,712\nSo I need to say,\nno passive interface E00.\n\n328\n00:18:32,712 --> 00:18:34,820\nAll right.\n\n329\n00:18:34,820 --> 00:18:37,370\nAnd there's my adjacency coming back up.\n\n330\n00:18:37,370 --> 00:18:40,920\nAnd if I do a debug, EIGRP packet.\n\n331\n00:18:40,920 --> 00:18:44,140\nWhat I expect to see is me sending and\nreceiving hellos on E00.\n\n332\n00:18:44,140 --> 00:18:48,820\nI shouldn't see anything\nfrom any other interfaces.\n\n333\n00:18:48,820 --> 00:18:50,420\nSo that's how we troubleshoot it.\n\n334\n00:18:50,420 --> 00:18:53,610\nThat's how we walk through the steps\nof finding out what's going wrong with\n\n335\n00:18:54,640 --> 00:18:55,350\npassive interfaces.\n\n336\n00:18:57,170 --> 00:19:00,560\nNow, what we just saw here\nwas an example using EIGRP.\n\n337\n00:19:01,580 --> 00:19:06,240\nThe commands that we used are fortunately\nthe same across all the routing protocols.\n\n338\n00:19:06,240 --> 00:19:08,180\nSo we could end the show right there.\n\n339\n00:19:08,180 --> 00:19:08,830\nHey, we just did it.\n\n340\n00:19:08,830 --> 00:19:09,500\nWe troubleshooted it.\n\n341\n00:19:09,500 --> 00:19:11,200\nWe saw it, and that's it.\n\n342\n00:19:11,200 --> 00:19:14,040\nBut I do want to make\na few other comments.\n\n343\n00:19:14,040 --> 00:19:15,930\nFirst off, we just saw an EIGRP.\n\n344\n00:19:15,930 --> 00:19:18,430\nAnd EIGRP handles these things perfectly.\n\n345\n00:19:18,430 --> 00:19:20,430\nThis is exactly how it's suppose to work.\n\n346\n00:19:20,430 --> 00:19:22,700\nWell, when it works.\n\n347\n00:19:22,700 --> 00:19:27,000\nAnd now I'm seeing the exact\nbehavior that I wanted.\n\n348\n00:19:27,000 --> 00:19:32,430\nBut the other protocols are a little bit\ndifferent, so let's talk about OSPF now.\n\n349\n00:19:32,430 --> 00:19:34,070\nAnd we'll talk about RIP\nin the next segment.\n\n350\n00:19:35,240 --> 00:19:38,130\nOSPF, same commands, right?\n\n351\n00:19:38,130 --> 00:19:39,310\nWe go into router OSPF.\n\n352\n00:19:39,310 --> 00:19:41,280\nAnd our process number.\n\n353\n00:19:41,280 --> 00:19:44,050\nAnd then we specify our passive\ninterfaces right in there.\n\n354\n00:19:44,050 --> 00:19:46,680\nYou can do passive interface\ndefault followed by no\n\n355\n00:19:46,680 --> 00:19:49,810\npassive interface in the specific\ninterfaces if you want to go that route,.\n\n356\n00:19:49,810 --> 00:19:52,180\nOr you can just do passive-interface and\n\n357\n00:19:52,180 --> 00:19:54,100\nthe particular interface you\nwant to flag as passive.\n\n358\n00:19:54,100 --> 00:19:56,800\nSo that all works just like EIGRP.\n\n359\n00:19:56,800 --> 00:20:03,580\nThe only difference is that in OSPF\nwhen you enable the passive interface.\n\n360\n00:20:03,580 --> 00:20:06,970\nIt doesn't just suppress\nthe hello messages.\n\n361\n00:20:06,970 --> 00:20:11,260\nIt also flags that network as a stub.\n\n362\n00:20:11,260 --> 00:20:12,870\nNow what does that mean for us?\n\n363\n00:20:12,870 --> 00:20:16,060\nWell, if you haven't learned about OSPF\nstubs yet, it doesn't mean anything.\n\n364\n00:20:16,060 --> 00:20:16,880\nRight?\n\n365\n00:20:16,880 --> 00:20:18,900\nJump ahead and\nwatch the OSPF episodes, and\n\n366\n00:20:18,900 --> 00:20:20,970\nyou'll get a chance to\nsee what those stubs are.\n\n367\n00:20:20,970 --> 00:20:26,580\nBut, for those of you that know, Stubs are\na behavior for a type of network in OSPF.\n\n368\n00:20:26,580 --> 00:20:31,640\nIf OSPF loses the connections to a route,\nit tries to find a new connection.\n\n369\n00:20:31,640 --> 00:20:32,940\nIt starts exploring.\n\n370\n00:20:32,940 --> 00:20:34,280\nIt goes into a discover.\n\n371\n00:20:34,280 --> 00:20:37,340\nLooking for\na new path to get to the route.\n\n372\n00:20:37,340 --> 00:20:40,820\nAnd when you hit a stub,\nit says don't bother looking this way.\n\n373\n00:20:40,820 --> 00:20:44,200\nDon't bother looking down that network\nto find alternate routes because\n\n374\n00:20:44,200 --> 00:20:45,690\nthere's nothing there.\n\n375\n00:20:45,690 --> 00:20:48,100\nAnd if it's a true stub\nthere's no router,.\n\n376\n00:20:48,100 --> 00:20:51,720\nIf you made the interface passive,\neven if there was another router there you\n\n377\n00:20:51,720 --> 00:20:53,210\nwouldn't go that route\nbecause it's passive.\n\n378\n00:20:53,210 --> 00:20:57,420\nYou wouldn't see the other router and\nso it flags it as a stub.\n\n379\n00:20:57,420 --> 00:21:02,760\nIn OSPF, the passive interface just goes\none step further because it has to adjust\n\n380\n00:21:02,760 --> 00:21:07,500\nhow the formula runs for OSPF as far\nas calculating out the destinations.\n\n381\n00:21:08,920 --> 00:21:13,610\nSo when you have a network going to\nthe discovery mode and it's searching how\n\n382\n00:21:13,610 --> 00:21:17,720\nthey're gonna find an alternate path it'll\nsee that as a stub, skip right over it.\n\n383\n00:21:17,720 --> 00:21:19,700\nWhich makes things\na little more efficient.\n\n384\n00:21:19,700 --> 00:21:22,690\nBut otherwise,\nit's the same as what we saw in EIGRP.\n\n385\n00:21:22,690 --> 00:21:24,820\nAnd we can recreate that real quick.\n\n386\n00:21:24,820 --> 00:21:27,480\nLet me just do a quick un-debug.\n\n387\n00:21:27,480 --> 00:21:31,240\nAnd I'll do a no router EIGRP 1.\n\n388\n00:21:31,240 --> 00:21:33,660\nLet's just clear that out.\n\n389\n00:21:33,660 --> 00:21:37,108\nAnd we'll do a router OSPF 1.\n\n390\n00:21:37,108 --> 00:21:38,059\nNetwork.\n\n391\n00:21:38,059 --> 00:21:42,942\nAnd I'll just throw them all into area 0.\n\n392\n00:21:42,942 --> 00:21:44,106\nAll right.\n\n393\n00:21:44,106 --> 00:21:52,485\nAnd on branch 1, I'll get rid of EIRGP\nwith a little no router EIRGP 1.\n\n394\n00:21:52,485 --> 00:21:55,510\nAnd under a router OSPF 1.\n\n395\n00:21:56,740 --> 00:21:59,618\nAnd on this one maybe I'll\ngo a little bit more narrow.\n\n396\n00:21:59,618 --> 00:22:03,280\n[LAUGH] I'm not going to\nadd everything in here.\n\n397\n00:22:03,280 --> 00:22:06,365\nAnd so I'll just [INAUDIBLE]\nI need to do wild card mask.\n\n398\n00:22:06,365 --> 00:22:10,570\n[INAUDIBLE]\nOkay.\n\n399\n00:22:10,570 --> 00:22:12,470\nNow i've got OSPF up and going.\n\n400\n00:22:12,470 --> 00:22:13,440\nI will just wait a second for\n\n401\n00:22:13,440 --> 00:22:17,780\nits adjacency to build as it\nconnects to the other one.\n\n402\n00:22:17,780 --> 00:22:21,879\nIt will happen eventually or not.\n\n403\n00:22:21,879 --> 00:22:25,100\n[LAUGH]\nThis is where my\n\n404\n00:22:25,100 --> 00:22:26,870\npatience stats to get tested.\n\n405\n00:22:26,870 --> 00:22:29,320\n>> Yeah.\n>> Let's get a little more\n\n406\n00:22:29,320 --> 00:22:33,740\naggressive here.\n\n407\n00:22:33,740 --> 00:22:36,915\nAnd I'll just manually advertise\nthat one on headquarters.\n\n408\n00:22:40,015 --> 00:22:41,165\nRonnie, did I miss a command here?\n\n409\n00:22:41,165 --> 00:22:41,705\n>> I don't think so.\n\n410\n00:22:41,705 --> 00:22:42,625\n>> Put the network in.\n\n411\n00:22:42,625 --> 00:22:43,625\n>> Area number, no.\n\n412\n00:22:43,625 --> 00:22:44,125\nLooks good.\n\n413\n00:22:45,255 --> 00:22:46,535\n>> I did have that little memory fault.\n\n414\n00:22:48,195 --> 00:22:52,165\nI'm probably just not being patient,\nbut let's do a show IP proto.\n\n415\n00:22:52,165 --> 00:22:54,605\nOops there it goes,\nI'm just not being patient.\n\n416\n00:22:54,605 --> 00:22:56,195\nSo there we go.\nSo I've got OSPF up and\n\n417\n00:22:56,195 --> 00:22:59,070\ngoing between my branch one and\nmy headquarters.\n\n418\n00:22:59,070 --> 00:23:00,740\nAnd if I do a show IP route OSPF.\n\n419\n00:23:00,740 --> 00:23:04,160\nI can see I'm learning\nOSPF routes on branch 1.\n\n420\n00:23:04,160 --> 00:23:07,720\nAnd on headquarters if\nI do a show IP route,\n\n421\n00:23:07,720 --> 00:23:10,720\nactually I'm not going to learn\nanything here because branch 1 isn't\n\n422\n00:23:10,720 --> 00:23:12,990\nteaching us any routes that\nwe don't already know.\n\n423\n00:23:12,990 --> 00:23:14,570\nSo I don't see anything there.\n\n424\n00:23:14,570 --> 00:23:19,100\nBut if I do a show IP Protocols and\nI take a look at it.\n\n425\n00:23:19,100 --> 00:23:20,450\nIt's up and running for these networks.\n\n426\n00:23:20,450 --> 00:23:23,930\nAnd it does have my little wildcard\nup in there so it's got that.\n\n427\n00:23:23,930 --> 00:23:27,010\nSo it's got those in place,\nit's up and it's running.\n\n428\n00:23:27,010 --> 00:23:29,020\nIf I were to do my debug now.\n\n429\n00:23:29,020 --> 00:23:31,830\nI would expect expect to\nsee quite a bit of stuff.\n\n430\n00:23:31,830 --> 00:23:35,300\nI'm gonna do a debug IP OSPF packet.\n\n431\n00:23:35,300 --> 00:23:37,230\nNow, an EIGRP you leave out IP,\n\n432\n00:23:37,230 --> 00:23:41,848\nyou just debug EIGRP packet,\nbecause EIGRP can rock other protocols.\n\n433\n00:23:41,848 --> 00:23:45,550\nIt can IPXPF, but OSPF just does IP.\n\n434\n00:23:45,550 --> 00:23:50,000\nSo that's why we have to add\nthat in debug IP OSPF packet.\n\n435\n00:23:50,000 --> 00:23:51,860\nAnd now I'll start to see my hellos.\n\n436\n00:23:51,860 --> 00:23:54,088\nNow, the headquarters router\nhas a lot of interfaces.\n\n437\n00:23:54,088 --> 00:23:58,767\nAnd so, I'm gonna be sending these hellos,\nthese adjacencies, these communications.\n\n438\n00:23:58,767 --> 00:23:59,788\nThey're gonna be popping up.\n\n439\n00:23:59,788 --> 00:24:02,331\nAnd we'll start to see each of\nthose on the different interfaces.\n\n440\n00:24:02,331 --> 00:24:07,129\nThere's me receiving one from e0/0.\n\n441\n00:24:07,129 --> 00:24:11,670\nAnd if I wait long enough\nI'll see my sends.\n\n442\n00:24:11,670 --> 00:24:13,100\nOSPF has a timer for\n\n443\n00:24:13,100 --> 00:24:16,270\nwhen it does sends, so I might have to\nwait a little bit before they happen.\n\n444\n00:24:16,270 --> 00:24:17,490\nBut these are receives.\n\n445\n00:24:17,490 --> 00:24:21,250\nI've got that RCV, so\nI'm receiving those in from other routers,\n\n446\n00:24:21,250 --> 00:24:23,800\nor in this case, just branch one.\n\n447\n00:24:23,800 --> 00:24:26,778\nBut I'll start to see my sends as\nI advertise out my own hellos any\n\n448\n00:24:26,778 --> 00:24:28,153\nmoment now.\n\n449\n00:24:28,153 --> 00:24:31,550\n>> [LAUGH]\n>> That's just again, patience testing,\n\n450\n00:24:31,550 --> 00:24:32,135\nI suppose.\n\n451\n00:24:32,135 --> 00:24:34,780\n[COUGH] But those will happen soon.\n\n452\n00:24:35,920 --> 00:24:37,575\nKind of assumed it would happen by now.\n\n453\n00:24:37,575 --> 00:24:40,120\n>> [LAUGH]\n>> There's a couple of interesting\n\n454\n00:24:40,120 --> 00:24:42,820\ntimers built into OSPF where it says\n\n455\n00:24:42,820 --> 00:24:46,570\nin five minutes if absolutely\nnothing changes in my router.\n\n456\n00:24:46,570 --> 00:24:50,840\nThen I'll just wait or I'll go ahead and\nsend out a message, and\n\n457\n00:24:50,840 --> 00:24:53,140\napparently I must have just missed it or\nsomething, or\n\n458\n00:24:53,140 --> 00:24:54,895\nI wonder if these routers\nare just running really slow.\n\n459\n00:24:54,895 --> 00:24:57,590\nCuz I did have to wait a while for\nthe adjacency to build up.\n\n460\n00:24:58,830 --> 00:25:01,350\nI could make something happen.\n\n461\n00:25:01,350 --> 00:25:04,080\nLike if I shut an interface down,\nlike e0/1, shutdown.\n\n462\n00:25:04,080 --> 00:25:07,740\nLet's make sure that it's\nactually participating in.\n\n463\n00:25:07,740 --> 00:25:11,530\nOSPF like I think it is.\n\n464\n00:25:11,530 --> 00:25:16,060\nAll right, so we'll bring that one up.\n\n465\n00:25:16,060 --> 00:25:19,020\nAnd what I should see is that it's\nactually sending out that interface.\n\n466\n00:25:19,020 --> 00:25:20,960\nSending out my hello\npackets to the other side.\n\n467\n00:25:20,960 --> 00:25:24,360\nWhen I flag it as passive,\nit'll just stop sending them.\n\n468\n00:25:24,360 --> 00:25:30,850\nJust like we saw with EIGRP or\nwould we see here if it ever finished.\n\n469\n00:25:30,850 --> 00:25:33,360\nYou know,\nI'm gonna give this guy the old reboot.\n\n470\n00:25:33,360 --> 00:25:37,120\nReload.\nAnd see if maybe\n\n471\n00:25:37,120 --> 00:25:39,480\nthat little memory fault I had\na minute ago might be my problem.\n\n472\n00:25:39,480 --> 00:25:40,970\nSo we'll let that reboot.\n\n473\n00:25:40,970 --> 00:25:45,085\nSo [COUGH] when that one comes back up,\nwe'll get a chance to see that and\n\n474\n00:25:45,085 --> 00:25:46,135\n[COUGH].\n\n475\n00:25:46,135 --> 00:25:53,525\nLet me make sure I've got my debug IP\nospf packet, and we should see that.\n\n476\n00:25:54,795 --> 00:25:57,625\nUnless I'm using the wrong debug command,\nI guess that's always possible too.\n\n477\n00:25:57,625 --> 00:26:01,105\nCuz you do have your other statements.\n\n478\n00:26:01,105 --> 00:26:06,085\nI can do my adjacency,\nactually let's do our hello events too.\n\n479\n00:26:06,085 --> 00:26:08,400\nAdd a little bit more\ndebugging to this one.\n\n480\n00:26:08,400 --> 00:26:10,510\nSo that I can hopefully see my transmits.\n\n481\n00:26:10,510 --> 00:26:12,520\nNow, there we go, I can see my sends.\n\n482\n00:26:12,520 --> 00:26:16,710\nSo there I'm sending out my serial,\nsending out my e0/0, my e0/3.\n\n483\n00:26:16,710 --> 00:26:18,980\nI'm sending out those interfaces too.\n\n484\n00:26:18,980 --> 00:26:22,820\nAnd if I get into my router ospf 1.\n\n485\n00:26:22,820 --> 00:26:28,530\nI can do the passive-interface default,\nright?\n\n486\n00:26:28,530 --> 00:26:31,050\nSo now they're all gonna go passive.\n\n487\n00:26:31,050 --> 00:26:36,674\nAnd I can say, no passive-interface e0/0.\n\n488\n00:26:36,674 --> 00:26:39,080\nAnd that'll bring that one back up.\n\n489\n00:26:39,080 --> 00:26:43,620\nAnd there I can see I'm sending out e0/0,\nbuilding up that adjacency.\n\n490\n00:26:43,620 --> 00:26:46,020\nI'm receiving traffic on that e0/0.\n\n491\n00:26:46,020 --> 00:26:48,760\nAnd now it's gonna go and run.\n\n492\n00:26:48,760 --> 00:26:52,280\nNow I'm gonna wait and watch here just\nto make sure I'm only seeing e0/0.\n\n493\n00:26:52,280 --> 00:26:54,870\nI saw those other interfaces a minute ago.\n\n494\n00:26:54,870 --> 00:26:56,000\nNow I should just see e0/0.\n\n495\n00:26:56,000 --> 00:26:57,700\nAnd it looks like I am.\n\n496\n00:26:57,700 --> 00:27:01,590\nAnd if I do a show ip protocols.\n\n497\n00:27:01,590 --> 00:27:05,780\nI can see all those passive interfaces\nthe default command flagged.\n\n498\n00:27:05,780 --> 00:27:08,850\nAnd I'm just communicating in e0/0.\n\n499\n00:27:08,850 --> 00:27:11,950\nSo same exact commands\nas we did with EIGRP.\n\n500\n00:27:11,950 --> 00:27:15,970\nIf I do the config here,\n\n501\n00:27:17,570 --> 00:27:20,030\nactually let's turn off the debug\ncuz that's gonna annoy me.\n\n502\n00:27:21,320 --> 00:27:24,190\nThere, you can see the commands\nthat I put in place,\n\n503\n00:27:24,190 --> 00:27:26,750\nI just said passive-interface default.\n\n504\n00:27:26,750 --> 00:27:28,856\nAnd then no passive-interface e0/0.\n\n505\n00:27:28,856 --> 00:27:31,200\nAnd off it goes, right.\n\n506\n00:27:31,200 --> 00:27:34,750\nNow do I see that that network\nwas flagged as a stub?\n\n507\n00:27:34,750 --> 00:27:35,660\nNot really.\n\n508\n00:27:35,660 --> 00:27:38,700\nIf you fire up packet sniffer and\n\n509\n00:27:38,700 --> 00:27:40,720\nyou break into the LSA as\nthe links in announcement.\n\n510\n00:27:40,720 --> 00:27:42,735\nYou'll actually see it,\nit is flagged as a stub.\n\n511\n00:27:42,735 --> 00:27:48,920\nBut I'm not aware of any command here\nfrom the CLI that will tell us that.\n\n512\n00:27:48,920 --> 00:27:53,280\nWhen you look at it, it doesn't identify\nthat network is a stub or whatever.\n\n513\n00:27:53,280 --> 00:27:57,830\nBut OSPF is treating it that way and\nit's not going to explore across that.\n\n514\n00:27:57,830 --> 00:28:03,080\nThat's probably in the OSPF database\nsomewhere that you can find a flag and\n\n515\n00:28:03,080 --> 00:28:04,930\nit will be marked as a stub.\n\n516\n00:28:04,930 --> 00:28:09,060\nBut otherwise, it's just advertising\nit out and not participating.\n\n517\n00:28:09,060 --> 00:28:11,360\nSo EIGRP and\nOSPF function pretty much the same.\n\n518\n00:28:11,360 --> 00:28:13,000\nThe commands are the same.\n\n519\n00:28:13,000 --> 00:28:14,560\nRIP is the one that gets bazaar.\n\n520\n00:28:14,560 --> 00:28:17,170\nAnd so I wanna spend a little\nbit of time showing RIP and\n\n521\n00:28:17,170 --> 00:28:19,040\nthe little caveats about how it behaves.\n\n522\n00:28:19,040 --> 00:28:23,030\nBut looking at the clock, this is a pretty\ngood spot for us to stop and take a break.\n\n523\n00:28:23,030 --> 00:28:24,190\nSo let's pause here.\n\n524\n00:28:24,190 --> 00:28:26,290\nWhen we get back, we'll tackle RIP and\n\n525\n00:28:26,290 --> 00:28:28,710\nits behavior under\nthe passive-interface command.\n\n526\n00:28:28,710 --> 00:28:29,970\nAnd then we'll wrap things up from there.\n\n527\n00:28:29,970 --> 00:28:33,715\nSo stay tuned, we'll be back in a moment.\n\n528\n00:28:33,715 --> 00:28:41,919\n[SOUND] All right welcome back everybody.\n\n529\n00:28:41,919 --> 00:28:45,120\nSo in the first segment we took\na look at passive-interfaces on OSPF.\n\n530\n00:28:45,120 --> 00:28:47,919\nAnd EIGRP and\nthings are pretty straightforward.\n\n531\n00:28:47,919 --> 00:28:50,820\nRight, we turn on a passive-interface and\nwe stopped sending and\n\n532\n00:28:50,820 --> 00:28:53,920\nreceiving updates on that interface but\nwe still advertise the network.\n\n533\n00:28:53,920 --> 00:28:54,510\nThat's what we wanted.\n\n534\n00:28:55,590 --> 00:28:58,680\nUnfortunately, RIP is a little different.\n\n535\n00:28:58,680 --> 00:29:02,780\nRIP, for whatever reason, and you know\nI've never researched it to find out why\n\n536\n00:29:02,780 --> 00:29:04,920\nit's different,\nI just know that it is different.\n\n537\n00:29:04,920 --> 00:29:08,040\nThe way RIP behaves is a little unusual.\n\n538\n00:29:08,040 --> 00:29:12,440\nWith Rip, when you enable\na passive-interface, you stop sending on\n\n539\n00:29:12,440 --> 00:29:15,720\nthe interface like we would expect,\n>> It's logical.\n\n540\n00:29:15,720 --> 00:29:19,990\n>> But you continue to receive\non your passive-interface.\n\n541\n00:29:19,990 --> 00:29:22,830\nSo if you've flag an interface group,\nyou could still\n\n542\n00:29:22,830 --> 00:29:26,810\nlearn routes on that interface,\nyou just won't advertise any yourself.\n\n543\n00:29:26,810 --> 00:29:28,650\nAnd that's a bizarre behavior.\n\n544\n00:29:28,650 --> 00:29:31,930\nBut I know I've gotten calls from\npeople before where they were\n\n545\n00:29:31,930 --> 00:29:33,350\ntroubleshooting this saying.\n\n546\n00:29:33,350 --> 00:29:35,020\nI can't figure it out,\nI've got a passive-interface but\n\n547\n00:29:35,020 --> 00:29:36,190\nI'm still learning routes on it.\n\n548\n00:29:36,190 --> 00:29:37,590\nWhat the heck is up?\n\n549\n00:29:37,590 --> 00:29:40,470\nAnd I'd say well,\nthat's just the way it is.\n\n550\n00:29:40,470 --> 00:29:43,050\nThat's how RIP functions, and so\n\n551\n00:29:43,050 --> 00:29:46,730\nwith RIP, if you want to stop\nit from receiving updates.\n\n552\n00:29:46,730 --> 00:29:49,360\nYou're gonna have to do a route map or\na prefix list or\n\n553\n00:29:49,360 --> 00:29:53,230\nsomething else to block\nthose routes from coming in.\n\n554\n00:29:53,230 --> 00:29:56,990\nAnd then that'll stop that from happening,\nbut the passive-interface doesn't behave\n\n555\n00:29:56,990 --> 00:30:00,310\nthat way, and let me show you what I\nmean so you can see this in action.\n\n556\n00:30:00,310 --> 00:30:03,060\nI've got my two routers,\nmy HQ and my branch 1,\n\n557\n00:30:03,060 --> 00:30:06,525\nand I've got RIP running between them.\n\n558\n00:30:06,525 --> 00:30:09,650\nOkay.\nSo on HQ, if I do a, show ip protocols.\n\n559\n00:30:11,690 --> 00:30:15,080\nThen I can see that my routing\nprotocol is RIP, it's up and running.\n\n560\n00:30:15,080 --> 00:30:17,920\nI went ahead and went version two,\nso we got version two going.\n\n561\n00:30:17,920 --> 00:30:21,240\nAnd see how I'm sending and\nreceiving on all of my interfaces.\n\n562\n00:30:21,240 --> 00:30:23,690\nMy ethernet, my serial interface,\nmy loopback.\n\n563\n00:30:23,690 --> 00:30:25,065\nSo it's up and going.\n\n564\n00:30:25,065 --> 00:30:28,475\nAnd I just did a giant wildcard for\nthe network, I'm advertising for\n\n565\n00:30:28,475 --> 00:30:30,355\nall of my networks that are out there.\n\n566\n00:30:30,355 --> 00:30:31,015\nRight?\nAnd\n\n567\n00:30:31,015 --> 00:30:33,715\nI know of another router out\nthere which is branch one and\n\n568\n00:30:33,715 --> 00:30:35,015\nso I am talking to branch one.\n\n569\n00:30:35,015 --> 00:30:39,135\nAnd on branch one if I do a,\nshow ip protocols.\n\n570\n00:30:39,135 --> 00:30:40,325\nI can see it's running RIP.\n\n571\n00:30:40,325 --> 00:30:46,050\nNow in this one I only advertised the\n172.16 and 192.168 networks and that's it.\n\n572\n00:30:46,050 --> 00:30:48,390\nSo I've got that one in there, all right?\n\n573\n00:30:48,390 --> 00:30:49,550\nAnd it knows about the other one.\n\n574\n00:30:49,550 --> 00:30:53,090\nSo RIP is up and\nI've got a nice stable RIP environment.\n\n575\n00:30:53,090 --> 00:30:57,340\nNow, the problem is on something like HQ,\nI'm still\n\n576\n00:30:57,340 --> 00:31:01,265\nadvertising out on all of my interfaces,\nand here on branch one I'm doing the same.\n\n577\n00:31:01,265 --> 00:31:06,470\nOn branch one, if I do a, debug ip rip.\n\n578\n00:31:07,830 --> 00:31:11,420\nLet's see I think on this one I just do,\ndebug ip rip, there's a couple of\n\n579\n00:31:11,420 --> 00:31:14,400\ndifferent debug commands for\nthis one, but we'll do, debug ip rip.\n\n580\n00:31:14,400 --> 00:31:18,200\nNow I'll start to see the updates as\nthey come across, and unfortunately RIP.\n\n581\n00:31:18,200 --> 00:31:20,640\nYou know it uses that 30\nsecond timer by default, so\n\n582\n00:31:20,640 --> 00:31:23,210\nI may have to wait up to 30\nseconds before I see anything.\n\n583\n00:31:23,210 --> 00:31:27,880\nBut there we go, I'm sending a version to\nupdate out to that multi-cast address.\n\n584\n00:31:27,880 --> 00:31:30,030\nThis is me advertising out,\n\n585\n00:31:30,030 --> 00:31:35,010\nand I'm advertising out on my e0/0 and my\ne0/1 interface on this particular router.\n\n586\n00:31:35,010 --> 00:31:38,915\nAnd there I just received\nan update on my e0/0.\n\n587\n00:31:38,915 --> 00:31:41,871\nOkay?\nNow, let's say on branch one, I go and\n\n588\n00:31:41,871 --> 00:31:43,650\nI flag e0/0 as passive.\n\n589\n00:31:44,910 --> 00:31:48,700\nWell I know I'm sending on e0/0,\nI saw that right up here.\n\n590\n00:31:48,700 --> 00:31:50,530\nAnd I'm receiving on e0/0,\nI saw that here.\n\n591\n00:31:50,530 --> 00:31:52,465\nAll right?\nSo I'm gonna get into,\n\n592\n00:31:52,465 --> 00:31:55,158\nlet me just do an un-debug real quick.\n\n593\n00:31:55,158 --> 00:32:00,475\nI'll get into router rip, and\nI'll do a passive-interface.\n\n594\n00:32:00,475 --> 00:32:03,482\nE0/0, all right.\n\n595\n00:32:03,482 --> 00:32:08,315\nSo I just flagged that as passive,\nso it's knocked out.\n\n596\n00:32:08,315 --> 00:32:08,960\nOkay?\n\n597\n00:32:08,960 --> 00:32:14,346\nWhen I do that, if I get out of my\nconfigure and I turn that debug back on.\n\n598\n00:32:14,346 --> 00:32:14,969\nRight.\n\n599\n00:32:14,969 --> 00:32:17,630\nNow I'm gonna start debugging.\n\n600\n00:32:17,630 --> 00:32:21,376\nAnd I should no longer be sending on e0/0.\n\n601\n00:32:21,376 --> 00:32:25,290\nI'm advertising e0/0 but\nI'm no longer sending on it and\n\n602\n00:32:25,290 --> 00:32:30,095\nso here I can see I'm\nsending an update on e0/1.\n\n603\n00:32:31,180 --> 00:32:32,440\nAnd notice this.\n\n604\n00:32:32,440 --> 00:32:34,700\nI received an update on e0/0.\n\n605\n00:32:34,700 --> 00:32:40,070\nIt's a passive interface,\nbut I'm still receiving.\n\n606\n00:32:40,070 --> 00:32:43,330\nThat's different than OSPF and EIGRP.\n\n607\n00:32:43,330 --> 00:32:45,970\nWith those guys, I didn't send or receive.\n\n608\n00:32:45,970 --> 00:32:47,790\nWith RIP, I'm still receiving.\n\n609\n00:32:47,790 --> 00:32:52,040\nAnd what this means, and where this gets\ntricky like on the exam or real life.\n\n610\n00:32:52,040 --> 00:32:56,010\nIs, you might still be getting routes\non that interface that's passive.\n\n611\n00:32:56,010 --> 00:33:00,010\nAnd you're like, why am I still\ngetting routes if it's passive,\n\n612\n00:33:00,010 --> 00:33:00,950\nif they're not there, right?\n\n613\n00:33:00,950 --> 00:33:04,420\nIf I do a,\nlet me just turn off the debug here.\n\n614\n00:33:04,420 --> 00:33:09,200\nAnd do a show ip route rip,\nI can see that I'm still learning routes.\n\n615\n00:33:09,200 --> 00:33:10,480\nOn that e0/0, right.\n\n616\n00:33:10,480 --> 00:33:13,670\nAll these routes right\nhere are exiting my e0/0.\n\n617\n00:33:13,670 --> 00:33:17,290\nSo, I'm still learning routes even\nthough it's a passive interface.\n\n618\n00:33:17,290 --> 00:33:19,230\nBe aware of that difference.\n\n619\n00:33:19,230 --> 00:33:22,720\nRIP, stop sending, I'm not sending\nout that interface anymore.\n\n620\n00:33:22,720 --> 00:33:24,770\nBut I am receiving, okay.\n\n621\n00:33:24,770 --> 00:33:27,180\nNow, RIP is on a timer.\n\n622\n00:33:27,180 --> 00:33:30,100\nSo it's possible that these routes\n\n623\n00:33:30,100 --> 00:33:31,960\ncould have still been\nsitting in there from before.\n\n624\n00:33:31,960 --> 00:33:34,480\nI know they aren't cuz their\nage is only 15 seconds.\n\n625\n00:33:34,480 --> 00:33:37,920\nBut it's possible they could've\nbeen sitting there from before.\n\n626\n00:33:37,920 --> 00:33:41,110\nSo you could do something\nlike a clear IP route.\n\n627\n00:33:41,110 --> 00:33:46,590\nAnd wipe out your routing table, and\nnow the routing table has to rebuild and\n\n628\n00:33:46,590 --> 00:33:49,300\nif I look at it here,\nthe route's just came right back in.\n\n629\n00:33:49,300 --> 00:33:50,610\nThey're a second old.\n\n630\n00:33:50,610 --> 00:33:51,140\nRight?\n\n631\n00:33:51,140 --> 00:33:54,990\nSo, it's not that they were cached and\nheld onto, it's that these are valid.\n\n632\n00:33:54,990 --> 00:33:56,610\nThey're coming in from the other side.\n\n633\n00:33:57,630 --> 00:34:01,426\nNow, I'm advertising the 172.16.\n\n634\n00:34:01,426 --> 00:34:04,930\nLet's see it's not zero on this one.\n\n635\n00:34:04,930 --> 00:34:07,740\nWell, actually, I've got a 192.168\nnetwork I'm advertising, don't I?\n\n636\n00:34:07,740 --> 00:34:08,470\nLet's see.\n\n637\n00:34:10,740 --> 00:34:14,520\nIf I do a show ip int brief.\n\n638\n00:34:14,520 --> 00:34:16,410\nThere we go.\n\n639\n00:34:16,410 --> 00:34:19,510\nI've got, what network am I advertising?\n\n640\n00:34:19,510 --> 00:34:20,435\nThis guy.\n\n641\n00:34:20,435 --> 00:34:25,130\n172.16.2. All right? I'm advertising\nthat network to my other RIP partners.\n\n642\n00:34:25,130 --> 00:34:27,270\nI've got e0/0 flagged as passive.\n\n643\n00:34:27,270 --> 00:34:30,970\nSo if I jump over to the other router,\nit should not be receiving this.\n\n644\n00:34:30,970 --> 00:34:33,030\nI'm not sending that update.\n\n645\n00:34:33,030 --> 00:34:35,447\nSo if I jump over to headquarters.\n\n646\n00:34:35,447 --> 00:34:37,388\nAnd do a show ip route rip.\n\n647\n00:34:37,388 --> 00:34:42,520\nI can see it's still got 172.16.2 now,\nit's still got that route.\n\n648\n00:34:42,520 --> 00:34:44,590\nWhere is it coming from?\n\n649\n00:34:44,590 --> 00:34:46,150\nWell, look at the time.\n\n650\n00:34:46,150 --> 00:34:51,130\nIt hasn't received an update\non that in 00:02:49.\n\n651\n00:34:51,130 --> 00:34:52,015\nRIP runs on a timer.\n\n652\n00:34:52,015 --> 00:34:53,010\nRight?\n\n653\n00:34:53,010 --> 00:34:56,878\nIt's got this 30 second timer, and if I\ndon't get updates for three intervals.\n\n654\n00:34:56,878 --> 00:35:01,535\nRight, so it's or, actually, I think\nit's 180 seconds by default, isn't it?\n\n655\n00:35:01,535 --> 00:35:03,245\nSo maybe it's every 60 seconds.\n\n656\n00:35:03,245 --> 00:35:05,565\nBut if I don't get updates\nin a certain amount of time,\n\n657\n00:35:05,565 --> 00:35:07,455\nit then flags the route as suspect.\n\n658\n00:35:07,455 --> 00:35:10,565\nBut then it takes even\nlonger to remove that route.\n\n659\n00:35:10,565 --> 00:35:14,805\nIt can take six minutes, ten minutes, it\ncan take quite a bit of time sometimes for\n\n660\n00:35:14,805 --> 00:35:15,545\na RIP route to come out.\n\n661\n00:35:15,545 --> 00:35:17,610\nRemember that RIP is exceptionally slow.\n\n662\n00:35:17,610 --> 00:35:21,180\nBut I notice when it's cached because\nI should be getting updates every\n\n663\n00:35:21,180 --> 00:35:21,860\n30 seconds.\n\n664\n00:35:21,860 --> 00:35:25,440\nSo this timer shouldn't be over 30\nseconds, here it's at 00:02:49.\n\n665\n00:35:25,440 --> 00:35:28,198\nAnd if I clear my routing table out.\n\n666\n00:35:28,198 --> 00:35:30,830\nAll right, so\nthere I just wiped my routing table.\n\n667\n00:35:30,830 --> 00:35:32,885\nI did a clear ip route *.\n\n668\n00:35:34,680 --> 00:35:40,470\nAnd I take a look at my routing\ntable again, there's no RIP route.\n\n669\n00:35:40,470 --> 00:35:42,190\nNow if I wait 30 seconds,\n\n670\n00:35:42,190 --> 00:35:44,515\nI should re-learn that route\nin the next 30 seconds.\n\n671\n00:35:44,515 --> 00:35:45,840\nOkay.\n\n672\n00:35:45,840 --> 00:35:49,210\nWell, I don't know if I wanna sit here and\nwait 30 seconds.\n\n673\n00:35:49,210 --> 00:35:50,280\nMaybe I will think of a story.\n\n674\n00:35:50,280 --> 00:35:52,340\nDo you have any jokes Ronnie?\n\n675\n00:35:52,340 --> 00:35:53,583\n>> Nope.\n>> No, all right, well,\n\n676\n00:35:53,583 --> 00:35:55,990\n[LAUGH] I don't have any good ones either.\n\n677\n00:35:55,990 --> 00:35:58,870\nSo but anyhow,\nif we just wait here for 30 seconds,\n\n678\n00:35:58,870 --> 00:36:01,110\neventually we'll see that\nthat route is not coming in.\n\n679\n00:36:01,110 --> 00:36:04,620\nAnd actually,\nI guess I could do a debug ip rip.\n\n680\n00:36:06,020 --> 00:36:10,265\nAnd start to debug and look for\nany receives that are coming in.\n\n681\n00:36:10,265 --> 00:36:12,440\nRight?\nAnd I should see myself doing sends.\n\n682\n00:36:12,440 --> 00:36:15,070\nI'm sending out updates every 30 seconds.\n\n683\n00:36:15,070 --> 00:36:18,595\nBut I won't be receiving because on\nthe other side, it's a passive interface.\n\n684\n00:36:18,595 --> 00:36:20,530\nRight.\n\n685\n00:36:20,530 --> 00:36:24,940\nSo for all three examples, EIGRP, OSPF,\n\n686\n00:36:24,940 --> 00:36:28,375\nRIP, all three of them is\nthe same command syntax.\n\n687\n00:36:28,375 --> 00:36:34,033\nPassive-interface followed by an interface\nname, or passive-interface default\n\n688\n00:36:34,033 --> 00:36:39,770\nfollowed by no passive-interface and\nthe interfaces that you wanna make active.\n\n689\n00:36:39,770 --> 00:36:43,190\nRight, so two different configurations,\nbut the same for all three protocols.\n\n690\n00:36:43,190 --> 00:36:45,950\nThe only difference is the behavior and\nlet's recap that.\n\n691\n00:36:45,950 --> 00:36:49,450\nWith EIGRP a passive interface\ndoes not send or receive.\n\n692\n00:36:50,470 --> 00:36:57,310\nWith OSPF, the interface doesn't send or\nreceive and is flagged as a stub.\n\n693\n00:36:57,310 --> 00:37:03,040\nAnd with RIP, it doesn't send but\nit does receive.\n\n694\n00:37:03,040 --> 00:37:04,390\nAll right, so weird behavior.\n\n695\n00:37:04,390 --> 00:37:05,940\nLittle variations between all three.\n\n696\n00:37:05,940 --> 00:37:07,880\nMake sure you've got that memorized for\nthe exam.\n\n697\n00:37:09,480 --> 00:37:11,060\nAll right, so that's basically it for RIP.\n\n698\n00:37:11,060 --> 00:37:14,190\nWe could sit here and\nbore ourselves to death watching this, but\n\n699\n00:37:14,190 --> 00:37:18,960\nbasically it's just gonna sit here and\ntalk to itself for a while.\n\n700\n00:37:18,960 --> 00:37:20,250\nI'm sending a ton of updates.\n\n701\n00:37:20,250 --> 00:37:23,020\nI haven't seen a receive come by yet.\n\n702\n00:37:23,020 --> 00:37:26,197\nLet me stop that from scrolling,\nand we'll just double check and\n\n703\n00:37:26,197 --> 00:37:30,148\nmake sure there's no receives, and sure\nenough, that is [CROSSTALK] send city.\n\n704\n00:37:30,148 --> 00:37:31,750\nYep, just all sends.\n\n705\n00:37:31,750 --> 00:37:35,140\nSo that's basically it.\n\n706\n00:37:35,140 --> 00:37:39,465\nAll right, I think that is pretty much\nall we’ve got for passive-interface,\n\n707\n00:37:39,465 --> 00:37:41,785\nlet me just scan my notes here,\nmake sure I didn’t miss anything.\n\n708\n00:37:41,785 --> 00:37:46,355\nOh, I did put something in the show\nnotes about common mistakes to look for\n\n709\n00:37:46,355 --> 00:37:48,227\nwith passive-interface.\n\n710\n00:37:48,227 --> 00:37:50,917\nAnd it's really pretty simple, right.\n\n711\n00:37:50,917 --> 00:37:52,647\nOne common mistake is RIP.\n\n712\n00:37:52,647 --> 00:37:55,197\nAnd just not knowing its\ndefault functionality, right?\n\n713\n00:37:55,197 --> 00:38:00,087\nThinking the passive interface is\nnot working when it actually is..\n\n714\n00:38:00,087 --> 00:38:01,278\nWe've also got things like.\n\n715\n00:38:01,278 --> 00:38:02,938\nMis-configurations, right?\n\n716\n00:38:02,938 --> 00:38:06,328\nIf you've got a passive-interface\ndefault and you overlook that, and\n\n717\n00:38:06,328 --> 00:38:08,988\nyou're trying to flag other interfaces or\nyou're not communicating.\n\n718\n00:38:08,988 --> 00:38:09,988\nIt's easy to miss that so\n\n719\n00:38:09,988 --> 00:38:13,178\nyou've gotta double-check for\nthat passive-interface default.\n\n720\n00:38:13,178 --> 00:38:17,418\nAnd then lastly,\nif you're using passive-interfaces.\n\n721\n00:38:17,418 --> 00:38:20,388\nWe need to watch out for\nsub-optimal routing.\n\n722\n00:38:20,388 --> 00:38:22,518\nYou are modifying the routing topology.\n\n723\n00:38:22,518 --> 00:38:25,170\nYou're saying,\nI know better than these routers.\n\n724\n00:38:25,170 --> 00:38:27,310\nAnd you need to know better.\n\n725\n00:38:27,310 --> 00:38:31,620\nIf you don't if you make a mistake,\na router can end up choosing a poor route,\n\n726\n00:38:31,620 --> 00:38:33,100\nwhen a better route is available but\n\n727\n00:38:33,100 --> 00:38:35,390\nit doesn't know it because\nof passive interfaces.\n\n728\n00:38:35,390 --> 00:38:38,770\nOr, more commonly,\na failure happens on the network and\n\n729\n00:38:38,770 --> 00:38:42,800\nyour router can't learn an alternate path\nbecause of passive interfaces, right.\n\n730\n00:38:43,840 --> 00:38:46,510\nIn those scenarios,\nif you're just trying to influence path,\n\n731\n00:38:46,510 --> 00:38:48,550\nyou don't usually use\na passive interface for that.\n\n732\n00:38:48,550 --> 00:38:50,020\nYou modify your metrics.\n\n733\n00:38:50,020 --> 00:38:50,700\nYour metrics or\n\n734\n00:38:50,700 --> 00:38:53,670\nyour administrative distance can make\none path preferred over another.\n\n735\n00:38:53,670 --> 00:38:56,450\nBut you want both paths active.\n\n736\n00:38:56,450 --> 00:38:59,810\nSo that the worst path can take\nover if the good path fails.\n\n737\n00:38:59,810 --> 00:39:01,885\nIf you use passive interfaces,\nthat doesn't happen.\n\n738\n00:39:01,885 --> 00:39:03,680\nRight?\nSo those are a couple of things to be on\n\n739\n00:39:03,680 --> 00:39:06,859\nthe lookout for as you work with passive\ninterfaces in a production environment.\n\n740\n00:39:08,680 --> 00:39:10,480\nAll right, well,\nthat's about all we've got.\n\n741\n00:39:10,480 --> 00:39:12,490\nRonnie, can you think of\nanything else to throw in?\n\n742\n00:39:12,490 --> 00:39:16,300\n>> Not really, just on the\npassive-interfaces themselves except for\n\n743\n00:39:16,300 --> 00:39:18,240\none thing that we wanna remember, right?\n\n744\n00:39:18,240 --> 00:39:21,760\nRemember the context in which you\nwill use these passive-interfaces on.\n\n745\n00:39:21,760 --> 00:39:24,970\nThere's always scenario like questions\nthat you have to kind of answer.\n\n746\n00:39:24,970 --> 00:39:25,770\nAnd so whether or\n\n747\n00:39:25,770 --> 00:39:29,140\nnot you wanna use it in that situation,\nand what's the reason behind it.\n\n748\n00:39:29,140 --> 00:39:30,720\nMake sure you pay attention to that.\n\n749\n00:39:30,720 --> 00:39:34,730\nThose are always the ones where we're\ntrying to do something really quick and\n\n750\n00:39:34,730 --> 00:39:35,890\nwe overlook something.\n\n751\n00:39:35,890 --> 00:39:38,720\nAnd remember that on the exam,\nyou click Next, you're kind of done.\n\n752\n00:39:38,720 --> 00:39:39,950\nYou don't get to go backwards.\n\n753\n00:39:39,950 --> 00:39:43,570\nSo slowdown, read,\nmake sure you understand the context.\n\n754\n00:39:45,120 --> 00:39:47,650\nDon't take my word for it, read the book.\n\n755\n00:39:47,650 --> 00:39:48,400\n>> Read the book.\n\n756\n00:39:48,400 --> 00:39:50,360\n>> Be our Reading Rainbow\nquote of the day.\n\n757\n00:39:50,360 --> 00:39:53,110\nAll right well ladies and gentlemen\nthat is about it for passive-interface.\n\n758\n00:39:53,110 --> 00:39:55,920\nWe took a relatively small subject and\nwent through it pretty thoroughly, so\n\n759\n00:39:55,920 --> 00:39:57,460\nI think we've done our job.\n\n760\n00:39:57,460 --> 00:40:00,440\nBut let me remind you guys if you have\nany questions on anything that we talked\n\n761\n00:40:00,440 --> 00:40:02,380\nabout, please feel free to post.\n\n762\n00:40:02,380 --> 00:40:04,910\nLive during the show you\ncan go to ITPro.TV/live,\n\n763\n00:40:04,910 --> 00:40:07,620\nyou can post your question\nthere in the chat room.\n\n764\n00:40:07,620 --> 00:40:09,110\nWe monitor and answer it during the show.\n\n765\n00:40:09,110 --> 00:40:12,780\nIf you have questions after the show,\nuse our Q and A forums.\n\n766\n00:40:12,780 --> 00:40:14,810\nClick on the Q and\nA link at the top of every page.\n\n767\n00:40:14,810 --> 00:40:17,120\nIt'll take you to the forums,\nyou can post your questions there.\n\n768\n00:40:17,120 --> 00:40:19,380\nWe monitor and answer after the show.\n\n769\n00:40:19,380 --> 00:40:22,660\nTake advantage of that resource,\nit is there for you.\n\n770\n00:40:22,660 --> 00:40:24,770\nAll right, well I hope you\nguys enjoyed today's episode.\n\n771\n00:40:24,770 --> 00:40:26,310\nSigning out for ITProTV, I'm Don Pezet.\n\n772\n00:40:26,310 --> 00:40:27,350\n>> And I'm Ronnie Wong.\n\n773\n00:40:27,350 --> 00:40:29,165\n>> And we'll see you next time.\n\n774\n00:40:29,165 --> 00:40:39,165\n[MUSIC]\n\n775\n00:40:42,992 --> 00:40:49,330\n[SOUND]\n\n",
          "vimeoId": "118909234"
        },
        {
          "description": "VPN Routing and Forwarding (VRF-lite) works by partitioning a routing table and is used at the ISP level to help separate traffic between customers using the same equipment. Viewers will hear about the functions of VRF-lite and see demonstrations on how to configure it.",
          "length": "3238",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/ccnproute/cisco-ccnproute-3-8-vrf_lite-020615-2.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/ccnproute/cisco-ccnproute-3-8-vrf_lite-020615-2-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/ccnproute/cisco-ccnproute-3-8-vrf_lite-020615-2-sm.jpg",
          "title": "VRF Lite",
          "transcript": "1\n00:00:00,000 --> 00:00:10,000\n[MUSIC]\n\n2\n00:00:33,097 --> 00:00:36,503\nAll right, good morning,\ngood afternoon, and good evening, and\n\n3\n00:00:36,503 --> 00:00:40,220\nwelcome back to another episode of\nIT Pro TV, I'm your host Don Pezet.\n\n4\n00:00:40,220 --> 00:00:41,565\nBack to you and Mr Ronnie Wong.\n\n5\n00:00:41,565 --> 00:00:42,630\nHow's it going Ronnie?\n\n6\n00:00:42,630 --> 00:00:45,338\n>> It is going well today, ready for\n\n7\n00:00:45,338 --> 00:00:49,217\nanother day and\nit is a nice day to get into CCNP.\n\n8\n00:00:49,217 --> 00:00:52,130\nSo ready for an exciting show.\n\n9\n00:00:52,130 --> 00:00:54,950\n>> All right, we're jumping right back\ninto CCNP routing, just like Ronnie said.\n\n10\n00:00:54,950 --> 00:00:57,900\nToday's topic is a pretty fun one,\nit's one that I like.\n\n11\n00:00:57,900 --> 00:01:00,670\nIt's one of those few topics\nthat we get to cover that really\n\n12\n00:01:00,670 --> 00:01:03,290\naren't addressed at all\nin the CCNA program.\n\n13\n00:01:03,290 --> 00:01:05,880\nAnd that is VRF-lite.\n\n14\n00:01:05,880 --> 00:01:08,461\nOur official objective, where the heck\nis the official objective around here?\n\n15\n00:01:08,461 --> 00:01:10,004\n>> [LAUGH] [CROSSTALK].\n\n16\n00:01:10,004 --> 00:01:11,306\n>> Got my notes all mixed up.\n\n17\n00:01:11,306 --> 00:01:15,010\n>> 3.8 configure and verify VRF-lite.\n\n18\n00:01:15,010 --> 00:01:18,690\nNow, for a lot of people, you've got your\nCCNA, you've been working out there in\n\n19\n00:01:18,690 --> 00:01:21,210\nthe Cisco world, and you come across\nthis [INAUDIBLE] objective and\n\n20\n00:01:21,210 --> 00:01:23,790\nyou're like, what the heck is VRF-lite?\n\n21\n00:01:23,790 --> 00:01:26,320\nAnd I'll tell you it's\na really cool technology.\n\n22\n00:01:26,320 --> 00:01:28,083\nBut it's one that most people don't need.\n\n23\n00:01:28,083 --> 00:01:30,150\nBy most people, I mean like 95% you know.\n\n24\n00:01:30,150 --> 00:01:33,850\nJust a huge percentage of people have\nabsolutely no need for this, and\n\n25\n00:01:33,850 --> 00:01:35,890\nthat's why most people\ndon't know what it is.\n\n26\n00:01:35,890 --> 00:01:40,970\nSo let's start real basic, with what VRF\nlite is, and make sure we understand that.\n\n27\n00:01:40,970 --> 00:01:43,260\nFirst of all what it stands for\nis always a good thing.\n\n28\n00:01:43,260 --> 00:01:45,220\n>> Yeah.\n>> It officially stands for,\n\n29\n00:01:45,220 --> 00:01:48,170\nI always say virtual routing and\nforwarding.\n\n30\n00:01:48,170 --> 00:01:48,670\n>> VPN, yeah.\n\n31\n00:01:49,680 --> 00:01:52,410\nIt stands for VPN routing and\nforwarding, and\n\n32\n00:01:52,410 --> 00:01:57,600\nit really is a neat technology in\nwhich when I did my CCNA studies,\n\n33\n00:01:57,600 --> 00:02:00,010\nwhen I read it,\nI was like I don't know how that works.\n\n34\n00:02:00,010 --> 00:02:04,810\nAnd so the way that it ends up working\nis that it really creates two separate\n\n35\n00:02:04,810 --> 00:02:09,820\nrouting tables on the same router and\nthey really don't see each other,\n\n36\n00:02:09,820 --> 00:02:12,110\nand so that was the first\nthing that kinda threw me.\n\n37\n00:02:12,110 --> 00:02:13,660\nBut it is neat once it works and\n\n38\n00:02:13,660 --> 00:02:17,540\nyou're kind of amazed at how well\nthey've built this technology.\n\n39\n00:02:17,540 --> 00:02:18,120\n>> Yeah.\n\n40\n00:02:18,120 --> 00:02:20,670\nFor those of you who go on\nto work with MPLS, right?\n\n41\n00:02:20,670 --> 00:02:23,030\nMPLS requires VRF.\n\n42\n00:02:23,030 --> 00:02:26,450\nIf you're gonna be doing labeling and\ntrying to keep your\n\n43\n00:02:26,450 --> 00:02:30,010\ncustomers separate on the same equipment,\nyou've gotta have a way to do that.\n\n44\n00:02:30,010 --> 00:02:33,600\nMost people don't have that problem,\nan Internet service provider does.\n\n45\n00:02:33,600 --> 00:02:37,040\nIf you're an ISP,\nthe odds are you have hundreds,\n\n46\n00:02:37,040 --> 00:02:41,220\nmaybe even thousands,\nof customers on the same equipment.\n\n47\n00:02:41,220 --> 00:02:44,105\nYou may have a massive\nlike Frame Relay Switch or\n\n48\n00:02:44,105 --> 00:02:49,790\na MPLS running through any\nkind of Metro-E type switch.\n\n49\n00:02:49,790 --> 00:02:52,580\nYou'll have tons of customers\non the same equipment and\n\n50\n00:02:52,580 --> 00:02:54,660\nyou've got to keep them separated.\n\n51\n00:02:54,660 --> 00:02:55,960\nAnd that's what MPLS is all about.\n\n52\n00:02:55,960 --> 00:02:58,240\nYou stick labels on their package,\nyou identify the package, and\n\n53\n00:02:58,240 --> 00:02:59,460\nyou separate them out.\n\n54\n00:02:59,460 --> 00:03:03,580\nBut the part that MPLS doesn't help\nwith for us, is the routing table.\n\n55\n00:03:03,580 --> 00:03:07,470\nThat you don't want your customers\nto all share the same routing table\n\n56\n00:03:07,470 --> 00:03:10,220\nbecause what's gonna happen is you will,\nsooner or\n\n57\n00:03:10,220 --> 00:03:14,780\nlater have two customers who use\nthe exact same address space.\n\n58\n00:03:14,780 --> 00:03:16,300\nAnd what happens when that occurs?\n\n59\n00:03:16,300 --> 00:03:16,840\nRight?\n\n60\n00:03:16,840 --> 00:03:18,750\nAnd notice what I'm talking about here.\n\n61\n00:03:18,750 --> 00:03:19,710\nI'm not talking about public IPs.\n\n62\n00:03:19,710 --> 00:03:21,940\nObviously you wouldn't have\npeople share public IPs.\n\n63\n00:03:21,940 --> 00:03:23,940\nI'm talking about private IPs.\n\n64\n00:03:23,940 --> 00:03:26,940\nThese would be metropolitan\narea networks or MANs.\n\n65\n00:03:26,940 --> 00:03:30,109\nIf I've got a bank and\nI have branches all across one city,\n\n66\n00:03:30,109 --> 00:03:34,005\nI might order MPLS lines to connect\nall my branches to my headquarters.\n\n67\n00:03:34,005 --> 00:03:36,474\nAnd do it entirely with private IPs.\n\n68\n00:03:36,474 --> 00:03:39,890\nMaybe I do it all in\nthe 10.0.0.0.0 Class A, right?\n\n69\n00:03:39,890 --> 00:03:42,810\nThat's in RFC 1918,\nit's a private IP range, I can use that.\n\n70\n00:03:42,810 --> 00:03:47,200\nWell, odds are there's other\ncustomers that are out there that use\n\n71\n00:03:47,200 --> 00:03:51,060\nthat same 10 dot network because\nit's one of the RFC 1918 addresses.\n\n72\n00:03:51,060 --> 00:03:55,160\nSo if there's a common routing table,\nnow those customers butt into each other,\n\n73\n00:03:55,160 --> 00:03:57,130\nright, and that's a problem.\n\n74\n00:03:57,130 --> 00:04:01,860\nSo, with VRF Lite,\nwhat we do is it's VPN routing and\n\n75\n00:04:01,860 --> 00:04:03,830\nforwarding and VPN,\nVirtual Private Network, and\n\n76\n00:04:03,830 --> 00:04:06,200\nthat's why you will hear a lot of people\nsay virtual routing and forwarding.\n\n77\n00:04:06,200 --> 00:04:07,860\nI know I'm guilty of that, too.\n\n78\n00:04:07,860 --> 00:04:11,240\nBut it' VPN routing and\nforwarding because with MPLS,\n\n79\n00:04:11,240 --> 00:04:14,730\nwhen you label those packets\nyou're really creating VPN.\n\n80\n00:04:14,730 --> 00:04:16,850\nIt doesn't do encryption, right?\n\n81\n00:04:16,850 --> 00:04:19,500\nWhich is what most people think\nof with they think of VPNs, but\n\n82\n00:04:19,500 --> 00:04:20,590\nit does partitioning.\n\n83\n00:04:20,590 --> 00:04:23,450\nIt creates a virtual private\nnetwork by partitioning that\n\n84\n00:04:23,450 --> 00:04:25,760\ntraffic based on the labels.\n\n85\n00:04:25,760 --> 00:04:29,220\nWell, VRF partitions a routing table.\n\n86\n00:04:29,220 --> 00:04:33,440\nYou can divide it up, and Ronnie, you said\ntoo, depending on the router you have,\n\n87\n00:04:33,440 --> 00:04:37,240\nit could actually be hundred,\nthousands of separate routing tables.\n\n88\n00:04:37,240 --> 00:04:39,982\nNow it's very processor intensive so\n\n89\n00:04:39,982 --> 00:04:42,870\npretty much all Cisco can do at least two,\nright.\n\n90\n00:04:42,870 --> 00:04:45,310\nSo if we want two routing tables,\nno big deal there.\n\n91\n00:04:45,310 --> 00:04:47,210\nThat's what we're gonna\ndo here on the show.\n\n92\n00:04:47,210 --> 00:04:49,610\nBut if you want 1,000\nseparate routing tables.\n\n93\n00:04:49,610 --> 00:04:54,100\nThat's a separate, a thousand separate\nrouting protocols, instances.\n\n94\n00:04:54,100 --> 00:04:56,150\nIt's really processor and\nmemory intensive.\n\n95\n00:04:56,150 --> 00:04:57,800\nYou've got to have\nthe hardware to handle it.\n\n96\n00:04:57,800 --> 00:05:01,120\nWell, ISPs do have\nthe hardware to handle it.\n\n97\n00:05:01,120 --> 00:05:03,050\nMost of us regular people don't.\n\n98\n00:05:03,050 --> 00:05:06,700\nSo you might be asking yourself,\nwell if this is an ISP technology,\n\n99\n00:05:06,700 --> 00:05:07,860\nwhy are we learning about it here?\n\n100\n00:05:07,860 --> 00:05:09,070\nShouldn't this be in the CCSP?\n\n101\n00:05:09,070 --> 00:05:11,150\nThe service provider certification.\n\n102\n00:05:11,150 --> 00:05:14,170\nIt is, believe me, it's all over\nthe service provider certification,\n\n103\n00:05:14,170 --> 00:05:15,960\nespecially with MPLS.\n\n104\n00:05:15,960 --> 00:05:21,620\nBut we learn about it here because\nwhen you buy an MPLS circuit,\n\n105\n00:05:21,620 --> 00:05:24,850\nyour ISP is gonna give you a choice.\n\n106\n00:05:24,850 --> 00:05:27,040\nYour choice will be between one,\n\n107\n00:05:27,040 --> 00:05:32,470\nwhich is transparent MPLS, or\ntwo, which is traditional MPLS.\n\n108\n00:05:32,470 --> 00:05:35,290\nWith transparent the ISP is invisible.\n\n109\n00:05:35,290 --> 00:05:36,950\nYou don't see their network.\n\n110\n00:05:36,950 --> 00:05:40,690\nWhen you have a router in one city,\nplugged into your MPLS network and\n\n111\n00:05:40,690 --> 00:05:43,330\nyou have a router in another city\nplugged into the MPLS network,\n\n112\n00:05:43,330 --> 00:05:45,120\nthe routers think they're\nplugged into each other.\n\n113\n00:05:45,120 --> 00:05:46,130\nThey just see each other directly.\n\n114\n00:05:46,130 --> 00:05:50,120\nThe telephone company is completely\ninvisible to those routers, all right.\n\n115\n00:05:50,120 --> 00:05:53,210\nWith transparent MPLS, you don't have\nto worry about this stuff at all.\n\n116\n00:05:53,210 --> 00:05:55,000\nAnd you're right,\nyou would not need to know this.\n\n117\n00:05:56,210 --> 00:05:59,730\nBut, the other option is\nthe traditional implementation.\n\n118\n00:05:59,730 --> 00:06:04,170\nAnd that's where you run OSPF,\nor EIGRP, or RIP.\n\n119\n00:06:04,170 --> 00:06:07,210\nYou run some kind of interior\ngateway protocol, and\n\n120\n00:06:07,210 --> 00:06:09,100\nyou synchronize routes with the ISP.\n\n121\n00:06:09,100 --> 00:06:11,450\nThe ISP is very visible at that point.\n\n122\n00:06:11,450 --> 00:06:15,050\nYou see the ISP,\nyou see that routing table and\n\n123\n00:06:15,050 --> 00:06:19,560\nyou built your router across the ISP to\nthe router that has the remote location.\n\n124\n00:06:19,560 --> 00:06:21,720\nSo your routers are aware that they\nare not plugged into each other and\n\n125\n00:06:21,720 --> 00:06:23,960\nthere's a whole network in between them.\n\n126\n00:06:23,960 --> 00:06:28,670\nThat is where we need VRFs and,\nat the provider edge,\n\n127\n00:06:28,670 --> 00:06:33,400\nright, so on the ISP's equipment, they're\ngoing to be setting all of that up, and\n\n128\n00:06:33,400 --> 00:06:36,930\non our end as the end user,\nwe're the customer edge, right.\n\n129\n00:06:36,930 --> 00:06:38,890\nThe CE, the PE and the CE.\n\n130\n00:06:38,890 --> 00:06:44,040\nAt the customer edge, we just need\nto be able to split up our routing\n\n131\n00:06:44,040 --> 00:06:47,150\ntable to make sure that we can handle\nthat if we have different branches or\n\n132\n00:06:47,150 --> 00:06:49,130\ndifferent customers that\nwe're dealing with, right.\n\n133\n00:06:49,130 --> 00:06:53,230\nSo for that,\nwe don't need the full VRF feature set.\n\n134\n00:06:53,230 --> 00:06:55,150\nVRF is very, very powerful.\n\n135\n00:06:55,150 --> 00:06:57,270\nWe just need VRF Lite.\n\n136\n00:06:57,270 --> 00:06:59,080\nIt's a subset of features.\n\n137\n00:06:59,080 --> 00:07:01,610\nJust the features that\na customers would need.\n\n138\n00:07:01,610 --> 00:07:04,770\nAnd so, that's what we need to know for\nthe CCNP route exam.\n\n139\n00:07:04,770 --> 00:07:06,050\nJust VRF Lite.\n\n140\n00:07:06,050 --> 00:07:07,850\nBut, for\nthose of you that jump over to like CCSP,\n\n141\n00:07:07,850 --> 00:07:11,420\nyou'll see there's a ton more\nthat you can do with VRF.\n\n142\n00:07:11,420 --> 00:07:12,580\nIt's a really impressive technology.\n\n143\n00:07:14,270 --> 00:07:17,100\nAll right now, if you're still not\nfollowing exactly how this works.\n\n144\n00:07:17,100 --> 00:07:21,470\nBasically what VRF is gonna do is\ncreate multiple instances of a router.\n\n145\n00:07:21,470 --> 00:07:25,330\nAnd that's really the equivalent of\nwhat we see with other technologies,\n\n146\n00:07:25,330 --> 00:07:27,380\nlike on a switch with VLANs.\n\n147\n00:07:27,380 --> 00:07:30,680\nYou can take VLANs on a switch, and\nyou take one physical switch and\n\n148\n00:07:30,680 --> 00:07:33,460\ndivide it up into multiple\nlogical switches, right?\n\n149\n00:07:33,460 --> 00:07:34,850\nThat's at layer two.\n\n150\n00:07:34,850 --> 00:07:37,230\nThat's effectively what we're\ndoing here at layer three.\n\n151\n00:07:37,230 --> 00:07:38,300\nWe're taking our routing table and\n\n152\n00:07:38,300 --> 00:07:40,130\ndividing it up into\nseparate routing tables,\n\n153\n00:07:40,130 --> 00:07:45,210\ncreating multiple virtual routers\ninside of one big router.\n\n154\n00:07:45,210 --> 00:07:46,680\nSo it's pretty neat stuff.\n\n155\n00:07:46,680 --> 00:07:50,122\n>> Now Don, that sounds very familiar to\na technology that we use all the time such\n\n156\n00:07:50,122 --> 00:07:52,378\nas virtualization and\nusing HyperVisor, right?\n\n157\n00:07:52,378 --> 00:07:53,155\n>> Yeah, same thing there.\n\n158\n00:07:53,155 --> 00:07:57,496\nIf you're running VM Ware or\nVirtual Box or HyperV.\n\n159\n00:07:57,496 --> 00:08:01,130\nYou're creating multiple virtual machines,\nor virtual operating systems,\n\n160\n00:08:01,130 --> 00:08:02,980\nrunning on top of one operating system.\n\n161\n00:08:02,980 --> 00:08:04,130\nIt's the same concept, right?\n\n162\n00:08:04,130 --> 00:08:05,550\nJust carried over into the routing world.\n\n163\n00:08:06,590 --> 00:08:08,810\nAll right, so pretty cool stuff.\n\n164\n00:08:08,810 --> 00:08:12,865\nIt's actually not that difficult to\nimplement but it does require changing\n\n165\n00:08:12,865 --> 00:08:15,955\nthe way you think and\nthat's probably really the hardest part.\n\n166\n00:08:15,955 --> 00:08:20,875\nSo, what I want to do in this episode is,\nI want to start out kind of showing\n\n167\n00:08:20,875 --> 00:08:25,745\nthe kind of problem that we have and\nthen how VRF solves the problem.\n\n168\n00:08:25,745 --> 00:08:27,975\nHow it kind of fixes it and\ngets us passed that.\n\n169\n00:08:27,975 --> 00:08:30,025\nSo we're going to get\na chance to see that.\n\n170\n00:08:30,025 --> 00:08:33,860\nNow one question I want to tackle\nreal quick before we even get started\n\n171\n00:08:33,860 --> 00:08:39,880\nis when we divide our router\nup into these virtual routers,\n\n172\n00:08:39,880 --> 00:08:41,570\nif we're running a protocol like OSPF,\n\n173\n00:08:41,570 --> 00:08:46,210\nthe question I always get is hey, couldn't\nI have just done separate OSPF processes?\n\n174\n00:08:46,210 --> 00:08:46,860\nRight?\n\n175\n00:08:46,860 --> 00:08:51,930\nWhen you create an OSPF instance you\nsay router, OSPF, and a process number.\n\n176\n00:08:51,930 --> 00:08:54,690\nSo if I do router OSPF 1 and\nthen router OSPF 2,\n\n177\n00:08:54,690 --> 00:08:58,030\nI now have two separate OSPF instances.\n\n178\n00:08:58,030 --> 00:09:01,650\nCouldn't I just do that instead of\nhaving to create these virtual routers?\n\n179\n00:09:01,650 --> 00:09:03,460\nWell, you could.\n\n180\n00:09:03,460 --> 00:09:07,380\nYou are creating separate OSPF instances\nso you have one for each customer,\n\n181\n00:09:07,380 --> 00:09:12,570\nright, but where do the routes\ngo that those instances learn.\n\n182\n00:09:12,570 --> 00:09:13,360\n>> Routing table.\n\n183\n00:09:13,360 --> 00:09:16,570\n>> Into your routing table and\nhow many routing tables have by default?\n\n184\n00:09:16,570 --> 00:09:17,250\n>> One.\n\n185\n00:09:17,250 --> 00:09:18,480\n>> Just one.\n\n186\n00:09:18,480 --> 00:09:23,575\nSo it'll work right up into the point\nPoint where you have two customers\n\n187\n00:09:23,575 --> 00:09:28,635\nwith the same IP range then either\none of two things is gonna happen.\n\n188\n00:09:28,635 --> 00:09:30,345\nThey're both bad.\n\n189\n00:09:30,345 --> 00:09:33,685\nOne, is that one customer ends up on the\nrouting table, the other customer doesn't.\n\n190\n00:09:33,685 --> 00:09:35,675\nAnd so you cut off one customer.\n\n191\n00:09:35,675 --> 00:09:36,940\nThat's bad.\n\n192\n00:09:36,940 --> 00:09:40,030\nEven worse, is that they both\nmake it in the routing cable, and\n\n193\n00:09:40,030 --> 00:09:41,500\nnow you start load balancing.\n\n194\n00:09:41,500 --> 00:09:44,150\nAnd you start sending one customer's\ntraffic to the other customer.\n\n195\n00:09:44,150 --> 00:09:45,600\nThat's even worse, right.\n\n196\n00:09:45,600 --> 00:09:47,920\nYou definitely don't want\nthose things to happen.\n\n197\n00:09:47,920 --> 00:09:53,085\nSo separate OSPF processes are really not\nappropriate for this type of environment.\n\n198\n00:09:53,085 --> 00:09:54,965\nIf it was all public IP's,\n\n199\n00:09:54,965 --> 00:09:58,485\nit might be different cuz you'd never\nhave an address over lapping but\n\n200\n00:09:58,485 --> 00:10:02,690\nwhen we're talking about virtual, private\nnetworks, these are private network,\n\n201\n00:10:02,690 --> 00:10:07,360\nthat's where we need to divide them up\ninto truly separate routing tables, and\n\n202\n00:10:07,360 --> 00:10:10,630\nthe separate routing tables can run\nwhatever dynamic protocol we want.\n\n203\n00:10:10,630 --> 00:10:15,950\nWe can run RIP, or EIGRP, or OSPF,\nor BGP, or any combination of those.\n\n204\n00:10:15,950 --> 00:10:16,970\nYou probably will.\n\n205\n00:10:16,970 --> 00:10:21,890\nIf you're doing MPLS, you'll probably\nrun BGP and an associated IGP.\n\n206\n00:10:21,890 --> 00:10:24,320\nSo If that's what you are going\nto be doing, you can do it.\n\n207\n00:10:24,320 --> 00:10:25,410\nYou can separate it out.\n\n208\n00:10:25,410 --> 00:10:27,060\nIt runs great.\n\n209\n00:10:27,060 --> 00:10:30,540\nRemember that RIB doesn't have\na way to separate out customers.\n\n210\n00:10:30,540 --> 00:10:33,150\nYou can't do multiple processes in RIB.\n\n211\n00:10:33,150 --> 00:10:35,652\nEIGRP, you can't do separate processes.\n\n212\n00:10:35,652 --> 00:10:39,600\nYou can do separate,\nautonomous systems, but again,\n\n213\n00:10:39,600 --> 00:10:41,650\nyou run that risk of bleed\nover between the two.\n\n214\n00:10:41,650 --> 00:10:45,410\nSo just be aware that will there\nare technologies in the dynamic\n\n215\n00:10:45,410 --> 00:10:50,000\nrouting protocols to separate things out\nit still all goes to one routing table and\n\n216\n00:10:50,000 --> 00:10:54,130\nthat's not suitable when you're trying\nto keep customers separate, right?\n\n217\n00:10:54,130 --> 00:10:58,840\nNow if there is an occasion where\nyou've got two separate customers.\n\n218\n00:10:58,840 --> 00:11:00,730\nAnd maybe they enter into\nsome kind of contract.\n\n219\n00:11:00,730 --> 00:11:04,320\nThey say hey, is there a way\nwe can do a peering agreement?\n\n220\n00:11:04,320 --> 00:11:06,680\nAnd a peering agreement is where,\nyeah they've got separate networks, but\n\n221\n00:11:06,680 --> 00:11:08,460\nthey want to connect to each other,\n\n222\n00:11:08,460 --> 00:11:12,000\nwithout having to go to the Internet\nfirst, or build a VPN tunnel, or whatever.\n\n223\n00:11:12,000 --> 00:11:14,120\nSo they might call up the ISP and\nask for that.\n\n224\n00:11:14,120 --> 00:11:19,280\nAnd the ISP can bridge\nnetworks between VRFs.\n\n225\n00:11:19,280 --> 00:11:24,560\nSo just like VLANs, if we wanna\nlet two VLANs talk to each other.\n\n226\n00:11:24,560 --> 00:11:27,950\nWhen I create a VLAN at layer two,\nthose systems are completely separate,\n\n227\n00:11:27,950 --> 00:11:29,150\nthey can't talk to each other.\n\n228\n00:11:29,150 --> 00:11:30,190\nWhat do I have to do to make them talk?\n\n229\n00:11:30,190 --> 00:11:32,530\n>> We need to be able to go through\na router if we're gonna try and\n\n230\n00:11:32,530 --> 00:11:33,710\ndo something like that.\n\n231\n00:11:33,710 --> 00:11:36,460\nSo a lot of times we may\nactually have to send it out and\n\n232\n00:11:36,460 --> 00:11:38,940\nmake it through that router or\n\n233\n00:11:38,940 --> 00:11:43,540\nit could be that we end up making\nsomething like a GRE tunnel between them.\n\n234\n00:11:43,540 --> 00:11:46,940\n>> That's exactly it and\nthe GRE tunnel is the easiest.\n\n235\n00:11:46,940 --> 00:11:50,030\nIt's kind of the equivalent, going\nback to the vlan example, it would be\n\n236\n00:11:50,030 --> 00:11:53,360\nthe equivalent of taking a cross over\ntable and sticking it in one vlan and\n\n237\n00:11:53,360 --> 00:11:56,000\nsticking into another vlan and\nnow you've got connectivity.\n\n238\n00:11:56,000 --> 00:11:57,410\nThat's what a GRE tunnel be would doing.\n\n239\n00:11:57,410 --> 00:12:00,160\nYou stick it in one vrf,\nyou stick it in the other vrf and\n\n240\n00:12:00,160 --> 00:12:02,250\nnow you've got connectivity between them.\n\n241\n00:12:02,250 --> 00:12:03,490\nSo that's one technique.\n\n242\n00:12:03,490 --> 00:12:06,640\nAnd then the other technique\nis route redistribution.\n\n243\n00:12:06,640 --> 00:12:11,850\nThe ISP can redistribute the routes\nfrom one vrf into something like vgp.\n\n244\n00:12:11,850 --> 00:12:16,350\nAnd then from vgp they can\nredistribute back into the other vrf.\n\n245\n00:12:16,350 --> 00:12:20,090\nAnd they can enable connectivity that way,\nall controlled by the ISP, and\n\n246\n00:12:20,090 --> 00:12:21,130\nthat's how we want it right?\n\n247\n00:12:21,130 --> 00:12:25,180\nWe want the ISP to dictate whether or\nnot traffic flows between customers.\n\n248\n00:12:25,180 --> 00:12:27,300\nIf we leave it up to the customers,\n\n249\n00:12:27,300 --> 00:12:29,700\nwell then we could attack any\nother customer we wanted,\n\n250\n00:12:29,700 --> 00:12:32,740\noh let's just branch over to them and see\nwhat they're doing on their network today.\n\n251\n00:12:32,740 --> 00:12:35,910\nSo that's the key thing to\nremember here is that with VRF,\n\n252\n00:12:36,930 --> 00:12:40,920\nit's really an ISP technology but\nits all about separation.\n\n253\n00:12:41,952 --> 00:12:45,620\nAll right so what I want to do is I want\nto show you guys a topology I whipped up\n\n254\n00:12:45,620 --> 00:12:49,530\nlast night and\nwhat I've got I'm going to use my routers.\n\n255\n00:12:49,530 --> 00:12:53,010\nNow my routers are labeled as headquarters\nand branch one and branch two because it\n\n256\n00:12:53,010 --> 00:12:56,370\ntis normally all within one company but\nwe're going to play pretend here.\n\n257\n00:12:56,370 --> 00:12:59,250\nRight, we're going to\npretend that we're an ISP.\n\n258\n00:12:59,250 --> 00:13:02,020\nSo I'm going to turn\nheadquarters into an ISP.\n\n259\n00:13:02,020 --> 00:13:03,440\nRight, and\n\n260\n00:13:03,440 --> 00:13:08,780\nI've got a frame relay network in place\nthat is running out to these branches.\n\n261\n00:13:08,780 --> 00:13:11,620\nAnd we're going to pretend\nbranch one is customer one and\n\n262\n00:13:11,620 --> 00:13:13,190\nbranch two is customer two.\n\n263\n00:13:13,190 --> 00:13:16,860\nSo I got two customers that are out there,\nand they're both getting\n\n264\n00:13:16,860 --> 00:13:22,150\nframe relay access to me, and then I'm\nproviding them access to other branches.\n\n265\n00:13:22,150 --> 00:13:24,120\nSo customer one might have\nfive different branches.\n\n266\n00:13:24,120 --> 00:13:26,200\nSo I'm going to provide connectivity\nto them, to the five branches,\n\n267\n00:13:26,200 --> 00:13:27,390\nvia frame relay.\n\n268\n00:13:27,390 --> 00:13:30,480\nAnd I'm also gonna provide\nthem internet access.\n\n269\n00:13:30,480 --> 00:13:35,110\nSo they'll have frame relay connectivity\nto their branches and internet access.\n\n270\n00:13:35,110 --> 00:13:38,600\nCustomer two will have frame\nrelay access to their branches,\n\n271\n00:13:38,600 --> 00:13:41,790\nseparate, different set of branches and\ninternet access also.\n\n272\n00:13:42,940 --> 00:13:45,790\nSo I wanna be able to\nprovide that functionality.\n\n273\n00:13:45,790 --> 00:13:49,113\nSo the customers call me up and\nthey say hey this is the service I need.\n\n274\n00:13:49,113 --> 00:13:54,744\nAnd here's what I want because we're going\nbranch-to-branch on the Frame Relay cloud,\n\n275\n00:13:54,744 --> 00:13:56,288\nI wanna use private IPs.\n\n276\n00:13:56,288 --> 00:13:57,574\nI don't wanna use public IPs.\n\n277\n00:13:57,574 --> 00:14:01,347\nLet's use private IPs, and\nlet's use a couple of different networks.\n\n278\n00:14:01,347 --> 00:14:05,910\nHere at branch one,\nwe've got 172.16.1.0/24, right?\n\n279\n00:14:05,910 --> 00:14:10,401\nAnd they've also got 192.168.0.0/24,\nmaybe that's like their research and\n\n280\n00:14:10,401 --> 00:14:11,730\ndevelopment.\n\n281\n00:14:11,730 --> 00:14:12,370\nAll right.\n\n282\n00:14:12,370 --> 00:14:16,190\nSo I say, okay, no problem, I can get\nthat set up, no big deal, and off you go.\n\n283\n00:14:16,190 --> 00:14:17,955\nA few minutes later I get\na call from another customer.\n\n284\n00:14:17,955 --> 00:14:20,596\n[COUGH] And they say, okay,\nwe wanna do the same type of service.\n\n285\n00:14:20,596 --> 00:14:22,477\nHere's our networks.\n\n286\n00:14:22,477 --> 00:14:25,592\nAnd they've got 172.16.2, and\nI go, [SOUND], all right,\n\n287\n00:14:25,592 --> 00:14:27,022\nthey don't overlap, right?\n\n288\n00:14:27,022 --> 00:14:29,905\nThey don't overlap,\nI'm cool but then they say,\n\n289\n00:14:29,905 --> 00:14:34,281\noh yeah by the way we got 192.168.0.0 and\nI got a Right.\n\n290\n00:14:34,281 --> 00:14:36,161\nThey overlap so now we got an overlap.\n\n291\n00:14:36,161 --> 00:14:36,985\nSo what will I do?\n\n292\n00:14:36,985 --> 00:14:38,254\nDo I tell the customer,\n\n293\n00:14:38,254 --> 00:14:42,670\nall right can you re-IP that network\ncourse I got another customer that.\n\n294\n00:14:42,670 --> 00:14:47,090\nWell, that gets frustrating real fast\ncause you slowly eat up this IP.\n\n295\n00:14:47,090 --> 00:14:49,977\nSo instead I say, okay,\nI'll create separate vrfs.\n\n296\n00:14:49,977 --> 00:14:54,365\nI'll divide my headquarters up so\nthat I've got one routing instance and\n\n297\n00:14:54,365 --> 00:14:58,626\none routing table that handles customer\none and all of their branches.\n\n298\n00:14:58,626 --> 00:15:01,860\nAnd I'll have another routing instance\nthat handles customer two and\n\n299\n00:15:01,860 --> 00:15:03,240\nall of their branches.\n\n300\n00:15:03,240 --> 00:15:06,450\nAnd as I add more and more customers, I\ncould have thousands of customers all with\n\n301\n00:15:06,450 --> 00:15:12,330\nthe exact same IP range but divide\nit up into separate virtual routers.\n\n302\n00:15:12,330 --> 00:15:15,890\nThese VPN routing and\nforwarding instances the VRF's.\n\n303\n00:15:15,890 --> 00:15:19,360\nand it really is not that hard to do\nwe just need to make sure we do it but\n\n304\n00:15:19,360 --> 00:15:23,910\nlet us say we did not know that, let us\nsay I was clueless to that situation and\n\n305\n00:15:23,910 --> 00:15:27,520\nI just brought these\nguys in what will happen.\n\n306\n00:15:27,520 --> 00:15:30,370\nIf both customers tell me,\nif one of them says I am running OSPF and\n\n307\n00:15:30,370 --> 00:15:31,920\nthe other one says they are running EIGRP,\n\n308\n00:15:31,920 --> 00:15:36,670\nI might say okay we will separate that\nway right It really won't, though,\n\n309\n00:15:36,670 --> 00:15:41,070\nbecause at the headquarters here, at my\nISP, I've only got one routing table.\n\n310\n00:15:41,070 --> 00:15:45,733\nSo some EIGRP routes will make it in,\nsome OSPF routes will make it in.\n\n311\n00:15:45,733 --> 00:15:51,398\nWell, if I learn the same network from\ntwo different protocols, what happens?\n\n312\n00:15:51,398 --> 00:15:55,683\nSo, Ronnie, if I'm getting 192.168.00\nfrom both of these guys, And\n\n313\n00:15:55,683 --> 00:15:58,992\ncustomer one is OSPF and\ncustomer two is EIGRP, what happens?\n\n314\n00:15:58,992 --> 00:16:02,212\nYeah, what'll end up happening is that it\nwill have to decide which one's getting\n\n315\n00:16:02,212 --> 00:16:03,920\nentered into the routing table.\n\n316\n00:16:03,920 --> 00:16:07,240\nAnd this is where the administrative\ndistance would take over for\n\n317\n00:16:07,240 --> 00:16:10,040\nthe routing table on the ISP router.\n\n318\n00:16:10,040 --> 00:16:10,930\nSo in this instance,\n\n319\n00:16:10,930 --> 00:16:15,020\nthe EIGRP route would make it in there,\nwhereas the OSPF route will not.\n\n320\n00:16:15,020 --> 00:16:17,450\nAnd that's just due to the nature and\n\n321\n00:16:17,450 --> 00:16:21,140\nthe way that a router decides what\ngets entered into that routing table.\n\n322\n00:16:21,140 --> 00:16:25,760\nWhat would happen is that customer\none's 192.168.0 network would\n\n323\n00:16:25,760 --> 00:16:30,765\nbecome unreachable and\ncustomer two's network would be reachable.\n\n324\n00:16:30,765 --> 00:16:34,025\nNot only to their branches, but\nto the branches from customer one.\n\n325\n00:16:34,025 --> 00:16:37,525\nCustomer one's branches would start\ngoing to customer two's network\n\n326\n00:16:37,525 --> 00:16:41,765\nbecause of the routing protocol\nconflict and the single routing table.\n\n327\n00:16:41,765 --> 00:16:43,642\nLet me show you guys that in action.\n\n328\n00:16:43,642 --> 00:16:44,982\nThese are the networks right here,\n\n329\n00:16:44,982 --> 00:16:48,192\nthe networks that I called out on\nthe back side of each customer.\n\n330\n00:16:48,192 --> 00:16:51,642\nI've got just little /30\nnetworks between the ISP, right?\n\n331\n00:16:51,642 --> 00:16:55,019\nWhen you got point-to-point frame\nrelay they'll normally do a /30 or\n\n332\n00:16:55,019 --> 00:16:58,912\nmaybe a /31 in between you and\nthe customer.\n\n333\n00:16:58,912 --> 00:17:04,142\nSo I just made some quick /30s,\nand then I've got my ISP here.\n\n334\n00:17:04,142 --> 00:17:08,660\nNow, I'll go even further and\nsay let's just do them all as OSPF.\n\n335\n00:17:09,740 --> 00:17:12,650\nSo both customers just happen to\nsay that they're gonna do OSPF.\n\n336\n00:17:12,650 --> 00:17:13,810\nAnd with OSPF,\n\n337\n00:17:13,810 --> 00:17:19,530\nyou might do multi-area, but\nwhat's the first area that people create?\n\n338\n00:17:19,530 --> 00:17:20,630\nArea zero.\nZero.\n\n339\n00:17:20,630 --> 00:17:23,690\nAnd if I have an ISP that's created\na metropolitan area network for\n\n340\n00:17:23,690 --> 00:17:25,860\nme, I want that to be a backbone network.\n\n341\n00:17:25,860 --> 00:17:27,550\nThat's gonna be area zero.\n\n342\n00:17:27,550 --> 00:17:30,220\nSo I'm gonna have both these\ncustomers running OSPF,\n\n343\n00:17:30,220 --> 00:17:33,070\nand both of them operating\ninside of area zero.\n\n344\n00:17:33,070 --> 00:17:37,150\nSo a lot of potential conflict\nis gonna pop up here, right?\n\n345\n00:17:37,150 --> 00:17:38,630\nLet's start with the customers.\n\n346\n00:17:38,630 --> 00:17:40,840\nI'm gonna jump over to a customer router.\n\n347\n00:17:42,020 --> 00:17:42,810\nAll right?\n\n348\n00:17:42,810 --> 00:17:45,480\nAnd I'll do a show IP interface brief.\n\n349\n00:17:45,480 --> 00:17:47,480\nAnd I can see on customer one.\n\n350\n00:17:47,480 --> 00:17:50,930\nIn fact, let me change my host name so\nwe can help keep this straight.\n\n351\n00:17:50,930 --> 00:17:53,220\nSo this is customer one.\n\n352\n00:17:54,370 --> 00:17:56,000\nAnd I, can I rename the tab?\n\n353\n00:17:56,000 --> 00:17:57,880\nI don't know if it'll\nlet me rename the tab.\n\n354\n00:17:57,880 --> 00:17:58,790\nEh, whatever.\n\n355\n00:17:58,790 --> 00:18:00,560\nThis is customer one.\n\n356\n00:18:00,560 --> 00:18:04,510\nAnd when I do my show IP interface brief.\n\n357\n00:18:04,510 --> 00:18:09,660\nI can see that i've got 172.16.1.1 and\nI've got that 10.1.1.2 here,\n\n358\n00:18:09,660 --> 00:18:12,260\nthat's the /30 that I've\ngot running back the ISP.\n\n359\n00:18:12,260 --> 00:18:16,136\nI don't see the 192.168.0,\nthat's cuz I did it as a secondary.\n\n360\n00:18:16,136 --> 00:18:19,269\nIf I do a show run interface e0/1,\n\n361\n00:18:19,269 --> 00:18:24,739\nthere I've got the 192.168.0\nas a secondary IP on it.\n\n362\n00:18:24,739 --> 00:18:32,868\nAnd if I do a show IP route, I can see\nthat 10.1.1/30 to connect to the ISP,\n\n363\n00:18:32,868 --> 00:18:39,274\nI've got 172.16.1 and I've got 192.168.0.\n\n364\n00:18:39,274 --> 00:18:43,410\nSo those are the routes\nthat are showing up.\n\n365\n00:18:43,410 --> 00:18:47,700\nAnd if I do a show IP protocol,\nI'll see that I'm running OSPF.\n\n366\n00:18:47,700 --> 00:18:50,450\nI picked a process ID of 1.\n\n367\n00:18:50,450 --> 00:18:55,520\nNow, remember in OSPF, the process\nID is only locally significant.\n\n368\n00:18:55,520 --> 00:18:58,620\nIt's not significant on any other router,\nit's just on this device.\n\n369\n00:18:58,620 --> 00:19:01,110\nSo it doesn't really matter\nwhat process ID I pick.\n\n370\n00:19:01,110 --> 00:19:03,820\nI pick one because I can remember that,\nall right.\n\n371\n00:19:03,820 --> 00:19:06,520\nAnd I can see that I'm routing for\nall three of those networks.\n\n372\n00:19:06,520 --> 00:19:09,950\nI'm routing on my serial interface\nas well as my ethernet interface and\n\n373\n00:19:09,950 --> 00:19:11,550\nI've got no other gateways right now.\n\n374\n00:19:11,550 --> 00:19:13,860\nI've got no neighbors, or\nat least let's make sure that we don't.\n\n375\n00:19:15,690 --> 00:19:17,030\nAnd nope, no neighbors, right.\n\n376\n00:19:17,030 --> 00:19:19,980\nSo, it is running OSPF but\nthere's nobody that it's connecting to.\n\n377\n00:19:19,980 --> 00:19:26,220\nAnd branch two, which is actually\ncustomer two, so let's change that name.\n\n378\n00:19:26,220 --> 00:19:27,812\nSo here's customer two.\nAnd on customer two,\n\n379\n00:19:27,812 --> 00:19:31,443\nwe've got that same configuration,\nthe same basic configuration.\n\n380\n00:19:31,443 --> 00:19:33,901\nIf I look at the same interface for E01,\n\n381\n00:19:33,901 --> 00:19:40,310\nI've got the 172.16.2 network which is\nseparate, and the 192.168.0 network.\n\n382\n00:19:40,310 --> 00:19:44,040\nAnd he's up and running OSPF.\n\n383\n00:19:44,040 --> 00:19:47,970\nI picked a process ID of one again.\n\n384\n00:19:47,970 --> 00:19:49,710\nStill locally significant,\nstill doesn't matter.\n\n385\n00:19:49,710 --> 00:19:51,930\nI could have picked\nwhatever process ID I want.\n\n386\n00:19:51,930 --> 00:19:55,340\nI'm advertising for all four of those\nnetworks and it's my serial and\n\n387\n00:19:55,340 --> 00:19:56,080\nethernet interface.\n\n388\n00:19:56,080 --> 00:19:57,740\nI've got no gateways.\n\n389\n00:19:57,740 --> 00:20:01,210\nSo the customers, this config,\nis very, very basic.\n\n390\n00:20:01,210 --> 00:20:04,620\nThere's nothing special\nabout this configuration.\n\n391\n00:20:04,620 --> 00:20:07,660\nIf we look at the interfaces,\nthey're configured like normal.\n\n392\n00:20:07,660 --> 00:20:10,120\nI've got them being put into OSPF area 0.\n\n393\n00:20:10,120 --> 00:20:12,800\nI think I doubled up and\ndid network commands, too.\n\n394\n00:20:12,800 --> 00:20:14,810\nYeah, if we scroll down,\nI've got network commands.\n\n395\n00:20:14,810 --> 00:20:17,740\nBut everything in here,\nstraight out of CCNA, right?\n\n396\n00:20:17,740 --> 00:20:21,780\nThere's no command that you've seen there\nthat wasn't in CCNA, nothing fancy, right?\n\n397\n00:20:21,780 --> 00:20:24,970\nSo on the customer side, very, very simple\nconfiguration and that's what we want.\n\n398\n00:20:27,080 --> 00:20:33,220\nNow on headquarters, which I'll rename so\nthis guy is gonna become the ISP.\n\n399\n00:20:33,220 --> 00:20:36,734\nSo on my ISP, here I've got the other\nend of those frame relay links,\n\n400\n00:20:36,734 --> 00:20:38,745\nthe other end of those point to points.\n\n401\n00:20:38,745 --> 00:20:40,912\nSo if I look at my interfaces,\n\n402\n00:20:40,912 --> 00:20:46,228\nthere's those point to points that\nare running out to those customers.\n\n403\n00:20:46,228 --> 00:20:50,090\nThe 10.1.1.1, 10.1.1.5 Those run\ninto customer one and customer two.\n\n404\n00:20:50,090 --> 00:20:53,070\nAnd I've got my own Internet\nuplink right there.\n\n405\n00:20:53,070 --> 00:20:57,430\nSo I've got a public IP 181.whatever.\n\n406\n00:20:57,430 --> 00:20:59,660\nSo that's the configuration here and\n\n407\n00:20:59,660 --> 00:21:04,050\non the ISP I'm not running\nany routing protocol at all.\n\n408\n00:21:05,400 --> 00:21:10,090\nSo from here,\nif I can figure OSPF on the headquarters,\n\n409\n00:21:10,090 --> 00:21:12,150\nit'll start communicating\nwith those other networks.\n\n410\n00:21:12,150 --> 00:21:14,350\nIt will start exchanging information.\n\n411\n00:21:14,350 --> 00:21:17,160\nLet's say that I decide\nto do separate processes.\n\n412\n00:21:17,160 --> 00:21:20,520\nI'm going to do separate processes\nto try to keep this clean.\n\n413\n00:21:20,520 --> 00:21:23,238\nSo what I'll do is,\nI'll say router OSPF 1,\n\n414\n00:21:23,238 --> 00:21:25,762\nthis is going to be customer ones network.\n\n415\n00:21:25,762 --> 00:21:28,877\nAnd I'm gonna ahead and\n\n416\n00:21:28,877 --> 00:21:33,864\njust say network 10.1.1.0,\n\n417\n00:21:33,864 --> 00:21:39,020\n0.0.0.3, area 0, alright.\n\n418\n00:21:39,020 --> 00:21:43,860\nSo, that's advertising into that 10.1.1.0\nand I would issue network commands for\n\n419\n00:21:43,860 --> 00:21:47,700\nevery single point to point link\nto all of customer one's branches.\n\n420\n00:21:47,700 --> 00:21:48,880\nSo, if I had five more branches,\n\n421\n00:21:48,880 --> 00:21:50,670\nI would punch in those network\ncommands for each one.\n\n422\n00:21:50,670 --> 00:21:54,000\nAll different branches just for\ncustomer one.\n\n423\n00:21:54,000 --> 00:21:58,530\nAnd then I'm gonna do a default\ninformation originates\n\n424\n00:21:59,550 --> 00:22:03,000\nalways cuz I wanna provide\nthem internet access.\n\n425\n00:22:03,000 --> 00:22:06,810\nSo I'm gonna push to them a default route\nthat says alright when you guys are going\n\n426\n00:22:06,810 --> 00:22:08,960\nto each other's networks,\nbetween the branches, just go direct.\n\n427\n00:22:08,960 --> 00:22:11,560\nBut when you wanna go to anybody else,\ncome to me.\n\n428\n00:22:11,560 --> 00:22:13,110\nI'm the ISP, I'll get you there.\n\n429\n00:22:13,110 --> 00:22:15,500\nSo I'm gonna originate the default route.\n\n430\n00:22:15,500 --> 00:22:18,772\nAnd I can see I just built up a neighbor\nrelationship with customer one.\n\n431\n00:22:21,582 --> 00:22:22,232\nAll right?\n\n432\n00:22:22,232 --> 00:22:26,554\nNow I'll do, router SWPF 2,\nso a separate process, and\n\n433\n00:22:26,554 --> 00:22:29,150\nthis is gonna be for customer two.\n\n434\n00:22:29,150 --> 00:22:34,030\nAnd I'll say, network 10.1.1.4.\n\n435\n00:22:34,030 --> 00:22:35,540\nFour.\nThank you Ronnie.\n\n436\n00:22:36,930 --> 00:22:38,130\nTry to do the math in my head.\n\n437\n00:22:38,130 --> 00:22:39,790\nOh what's the subnet ID.\n\n438\n00:22:39,790 --> 00:22:40,660\nSo there we go.\n\n439\n00:22:40,660 --> 00:22:41,390\nSo that's gonna be it.\n\n440\n00:22:41,390 --> 00:22:44,230\nAnd I'm doing area zero because that\ncustomer's using me as a backbone.\n\n441\n00:22:44,230 --> 00:22:48,222\nSo I'll just come in here and\nsay it's area zero, and\n\n442\n00:22:48,222 --> 00:22:51,520\nI'll originate a default route here also.\n\n443\n00:22:55,153 --> 00:22:57,300\nAll right and I'll get out of that.\n\n444\n00:22:57,300 --> 00:23:01,110\nSo at this point,\nI've got two OSPF processes.\n\n445\n00:23:01,110 --> 00:23:04,830\nProcess one for customer one and\nprocess two for customer two.\n\n446\n00:23:04,830 --> 00:23:10,970\nAnd if I do a show IP protocols\nhere's OSPF one, right.\n\n447\n00:23:10,970 --> 00:23:14,280\nAnd I can see it's got a gateway\nof 172.16.1.1 that's customer one.\n\n448\n00:23:15,930 --> 00:23:20,505\nAnd I can see I got OSPF\ntwo that's customer two and\n\n449\n00:23:20,505 --> 00:23:23,780\nits got a gateway of 172.16.2.1\nthat one is customer two.\n\n450\n00:23:23,780 --> 00:23:27,240\nSo the customers are linked in\ntheir own separate OSPF process.\n\n451\n00:23:28,330 --> 00:23:31,320\nBut now my router is\nlearning their routes.\n\n452\n00:23:31,320 --> 00:23:32,440\nIt's learning their networks.\n\n453\n00:23:32,440 --> 00:23:33,930\nIt's learning about\nthat 192.168.0 network.\n\n454\n00:23:33,930 --> 00:23:38,490\nAnd then it's going to learn about\nthe route, pick the best one and\n\n455\n00:23:38,490 --> 00:23:40,110\nput it in the routing table.\n\n456\n00:23:40,110 --> 00:23:42,690\nAnd I'm going to see one of two things.\n\n457\n00:23:42,690 --> 00:23:46,040\nEither only one customer\nis going to show up or\n\n458\n00:23:47,250 --> 00:23:49,990\nin my case I think they'll be equal,\nthey should have equal metric.\n\n459\n00:23:49,990 --> 00:23:52,217\nSo they'll probably both make\nit into the routing table and\n\n460\n00:23:52,217 --> 00:23:54,188\nthat means I'm going to\nload balance between them.\n\n461\n00:23:54,188 --> 00:23:57,191\nWhich now means I've got\ncross customer traffic and\n\n462\n00:23:57,191 --> 00:23:59,588\nthat's the exact thing we want to avoid.\n\n463\n00:23:59,588 --> 00:24:02,709\nSo if I do a show IP route.\n\n464\n00:24:02,709 --> 00:24:05,206\nHere on my home router.\n\n465\n00:24:05,206 --> 00:24:08,790\nActually, I'm going to filter\nthat down to just OSPF routes.\n\n466\n00:24:08,790 --> 00:24:14,180\nIf I look at just OSPF routes,\nhere we go and I can see that I've got\n\n467\n00:24:14,180 --> 00:24:18,410\none 172.16.0.0274 there's the two\nnetworks for the customers, right?\n\n468\n00:24:19,800 --> 00:24:22,740\nCustomer one and customer two.\n\n469\n00:24:22,740 --> 00:24:27,185\nAnd then 192.168.0 I did only get\none of them, I just got the one for\n\n470\n00:24:27,185 --> 00:24:28,400\n10.1.2 which is customer one.\n\n471\n00:24:29,740 --> 00:24:33,240\nSo I must have bandwidth difference or\nsomething.\n\n472\n00:24:33,240 --> 00:24:36,990\nOSPF just uses bandwidth, so I must have a\nbandwidth difference between me and them.\n\n473\n00:24:36,990 --> 00:24:40,010\nSo it picked this one as being better.\n\n474\n00:24:40,010 --> 00:24:41,940\nWhere's the other route for customer two?\n\n475\n00:24:41,940 --> 00:24:43,790\nIt's not there.\n\n476\n00:24:43,790 --> 00:24:45,530\nIt didn't make it in the routing table.\n\n477\n00:24:45,530 --> 00:24:47,560\nSo that's problem number one.\n\n478\n00:24:47,560 --> 00:24:51,740\nProblem number two, since these\nare going into my routing table,\n\n479\n00:24:51,740 --> 00:24:53,870\nI'm gonna advertise these things back out.\n\n480\n00:24:53,870 --> 00:25:00,520\nAnd so if I jump over to customer one for\nexample, and I look at its routing table,\n\n481\n00:25:00,520 --> 00:25:04,910\nwhen I look at its routing table,\nit doesn't have 172.16.2, so that's good.\n\n482\n00:25:04,910 --> 00:25:08,830\nIt doesn't see the route for\nthe other customer because of the separate\n\n483\n00:25:08,830 --> 00:25:12,740\nprocesses, but it still has its\ndirectly connected route here so\n\n484\n00:25:12,740 --> 00:25:14,390\nit's not going to go anywhere for that.\n\n485\n00:25:14,390 --> 00:25:17,190\nIt does have its default gateway though.\n\n486\n00:25:17,190 --> 00:25:20,220\nAnd if we use that default gateway\nthat gateway of last resort.\n\n487\n00:25:20,220 --> 00:25:23,530\nAnd I try and reach some network\nthat's only present at customer two.\n\n488\n00:25:23,530 --> 00:25:27,145\nI'll actually jump up to the ISP and\nit will send me over to customer two.\n\n489\n00:25:27,145 --> 00:25:30,465\nI've got intercustomer connectivity.\n\n490\n00:25:30,465 --> 00:25:32,825\nEven though it doesn't show up on\nmy routing table, it is there.\n\n491\n00:25:32,825 --> 00:25:35,935\nSo, I have to be really\ncareful about that.\n\n492\n00:25:35,935 --> 00:25:38,685\nNow, one customer could in\ntheory attack another customer.\n\n493\n00:25:38,685 --> 00:25:41,295\nThat's definitely not something\nyou wanna get involved in.\n\n494\n00:25:41,295 --> 00:25:44,175\nAll right, so that's our problem.\n\n495\n00:25:44,175 --> 00:25:48,965\nThat shows how we can split up\nOSPF processes, but it doesn't\n\n496\n00:25:50,030 --> 00:25:53,430\nkeep our customers truly separate,\nit doesn't keep our routes separate.\n\n497\n00:25:53,430 --> 00:25:57,270\nAnd that's what VRFs are gonna fix for us.\n\n498\n00:25:57,270 --> 00:25:59,540\nSo what I'm gonna do is I'm gonna\ngo back to my headquarters and\n\n499\n00:25:59,540 --> 00:26:04,970\nI'm just gonna kill OSPF, and\nwe'll just get that one outta here.\n\n500\n00:26:04,970 --> 00:26:07,710\nI'll kill both instances, so they're gone.\n\n501\n00:26:07,710 --> 00:26:14,450\nAnd once they're gone, now I'm ready\nto set up my customers the right way.\n\n502\n00:26:14,450 --> 00:26:16,540\nI won't actually have to make\nany changes on the customer,\n\n503\n00:26:16,540 --> 00:26:18,750\ncuz this is going to be\nmostly invisible to them.\n\n504\n00:26:18,750 --> 00:26:20,270\nRight, I have to make changes on my end.\n\n505\n00:26:20,270 --> 00:26:23,460\nSo I'm gonna leave ISP, or\ncustomer one and customer two alone.\n\n506\n00:26:23,460 --> 00:26:25,000\nAnd we'll redo HQ.\n\n507\n00:26:25,000 --> 00:26:29,130\nNow I do need to wait a little bit for\nmy gateways to cash out and\n\n508\n00:26:29,130 --> 00:26:31,330\nstuff, cuz you know they stay cashed for\na little while.\n\n509\n00:26:31,330 --> 00:26:34,230\nSo it's probably a good idea to stop and\ntake a break.\n\n510\n00:26:34,230 --> 00:26:35,090\nAnd during the break,\n\n511\n00:26:35,090 --> 00:26:37,270\nthey'll get caught up and\nrecognize that configuration's gone.\n\n512\n00:26:37,270 --> 00:26:40,550\nAnd then when we get back,\nwe'll come in and we'll put our VRFs in.\n\n513\n00:26:40,550 --> 00:26:43,380\nWe'll separate it out, and we'll see the\nnetwork working the way that we expect.\n\n514\n00:26:43,380 --> 00:26:46,100\nSo let's stop here and take a break.\n\n515\n00:26:46,100 --> 00:26:49,815\nWe'll be back after this.\n\n516\n00:26:49,815 --> 00:26:56,010\n[SOUND] [SOUND] All right.\n\n517\n00:26:56,010 --> 00:26:57,160\nWelcome back everybody.\n\n518\n00:26:57,160 --> 00:27:01,203\nSo, before the break we saw the problem\nthat ISPs have with separating out routing\n\n519\n00:27:01,203 --> 00:27:05,320\ntables between customers, with just doing\nthings like separate OSPF processes.\n\n520\n00:27:06,370 --> 00:27:09,800\nIn EIGRP I guess could have done\nseparate autonomous systems and\n\n521\n00:27:09,800 --> 00:27:11,670\nmaybe tried to achieve that same thing.\n\n522\n00:27:11,670 --> 00:27:13,970\nBut they're running in the same process so\n\n523\n00:27:13,970 --> 00:27:17,840\nif one customer screws up that process it\ncauses problems with the other customers.\n\n524\n00:27:17,840 --> 00:27:20,890\nWith RIP you really don't have a recourse,\nyou don't have a great way to do it.\n\n525\n00:27:20,890 --> 00:27:22,860\nSo now we're gonna implement the VRFs.\n\n526\n00:27:22,860 --> 00:27:27,010\nAnd with VRFs you can do whatever\nrouting protocol you want and\n\n527\n00:27:27,010 --> 00:27:28,740\nit's completely separate\nfrom the other customers.\n\n528\n00:27:28,740 --> 00:27:31,230\nYou actually have more\nthan one routing table.\n\n529\n00:27:31,230 --> 00:27:34,180\nSo let's see that in action.\n\n530\n00:27:34,180 --> 00:27:36,510\nSo, I'm gonna start right here oon my ISP,\nright?\n\n531\n00:27:36,510 --> 00:27:40,070\nSo this is the center,\nif I go back to my diagram here.\n\n532\n00:27:40,070 --> 00:27:43,670\nThis is my ISP right here and I've got\nthese frame relay links that go to\n\n533\n00:27:43,670 --> 00:27:46,360\nthe different customers as well as\nmy internet connection and so on.\n\n534\n00:27:46,360 --> 00:27:49,680\nSo, I'm gonna start off\nright here on the ISP and\n\n535\n00:27:49,680 --> 00:27:52,720\nstep one is I need to creat the VRFs.\n\n536\n00:27:53,930 --> 00:27:56,130\nAnd creating them really\ncouldn't be easier.\n\n537\n00:27:56,130 --> 00:28:00,010\nYou just say ip vrf and we give it a name.\n\n538\n00:28:01,100 --> 00:28:05,070\nNow in a lot of the textbooks they use\nnames that I hate like red, and blue, and\n\n539\n00:28:05,070 --> 00:28:08,660\ngreen and stuff, so I normally name\nthem based on who the customer is.\n\n540\n00:28:08,660 --> 00:28:09,180\nRight?\n\n541\n00:28:09,180 --> 00:28:11,620\nSo I'll just do IP VRF customer one.\n\n542\n00:28:13,720 --> 00:28:16,740\nAnd I'll do the same thing for\ncustomer two.\n\n543\n00:28:17,960 --> 00:28:21,230\n>> The nice thing also about naming\nthese VRFs is that you can also\n\n544\n00:28:21,230 --> 00:28:22,610\nprovide the description a lot of times.\n\n545\n00:28:22,610 --> 00:28:24,056\nNo, that's not the [CROSSTALK]\n>> No, you can.\n\n546\n00:28:24,056 --> 00:28:26,700\nNo, you can. Yeah. >> It is\na description here that you can provide.\n\n547\n00:28:26,700 --> 00:28:29,245\nAnd that way, if you're not sure,\nif you do name it something odd.\n\n548\n00:28:29,245 --> 00:28:30,210\n[LAUGH]\n>> Yeah.\n\n549\n00:28:30,210 --> 00:28:31,250\n>> Yeah.\n>> Cuz if you're an ISP and\n\n550\n00:28:31,250 --> 00:28:33,380\nyou're dealing with\nthousands of customers,\n\n551\n00:28:33,380 --> 00:28:35,990\nthen you probably don't want customer one,\ncustomer two, and so on.\n\n552\n00:28:35,990 --> 00:28:41,210\nSo what you might have is ip vrf,\nand then the customer number,\n\n553\n00:28:41,210 --> 00:28:44,770\nwhich could be, whatever,\nI'm just making something up.\n\n554\n00:28:44,770 --> 00:28:50,952\nThen you might want to do a description\nto say this is EdutainmentLIVE.LLC,\n\n555\n00:28:50,952 --> 00:28:54,633\nour official company name.\n\n556\n00:28:54,633 --> 00:28:57,890\nYou can put that description in there and\nnow you know exactly which customer that\n\n557\n00:28:57,890 --> 00:29:00,830\nis, but the vrf is just named\nafter this crazy number.\n\n558\n00:29:00,830 --> 00:29:03,850\nSo now I've got these\ndifferent VRFs created.\n\n559\n00:29:03,850 --> 00:29:10,020\nIf I do a show IP VRF,\nI can see them and there they are.\n\n560\n00:29:10,020 --> 00:29:14,190\nOkay, customer one, customer two and\nthen customer, well 0019237 192.\n\n561\n00:29:14,190 --> 00:29:17,920\nSo each of these are basically\nlike separate routers.\n\n562\n00:29:17,920 --> 00:29:19,560\nSeparate routing tables, all right.\n\n563\n00:29:19,560 --> 00:29:21,250\nAnd they're actually up and\nfunctioning right now.\n\n564\n00:29:21,250 --> 00:29:23,090\nThey're not very exciting.\n\n565\n00:29:23,090 --> 00:29:24,830\nWhen you're not running\na routing protocol,\n\n566\n00:29:24,830 --> 00:29:27,180\nwhat is gonna be in your routing table?\n\n567\n00:29:27,180 --> 00:29:29,210\nJust your directly connected interfaces.\n\n568\n00:29:29,210 --> 00:29:31,600\nAnd if you look over here\nat this interfaces column,\n\n569\n00:29:31,600 --> 00:29:33,690\nthese guys don't have any interfaces yet.\n\n570\n00:29:33,690 --> 00:29:36,700\nSo, how do I really know\nthey're even functioning?\n\n571\n00:29:36,700 --> 00:29:39,710\nWell, let's talk about our\nfirst monitoring command, here.\n\n572\n00:29:39,710 --> 00:29:44,820\nIf I want to look at my routing table,\nI normally do show IP route, right, and\n\n573\n00:29:44,820 --> 00:29:47,460\nthat gives me my routing table, but\n\n574\n00:29:47,460 --> 00:29:52,200\nthat's the routing table of\nthe ISP router not the VRF.\n\n575\n00:29:53,440 --> 00:29:54,770\nSo, I can add on to that.\n\n576\n00:29:54,770 --> 00:29:58,960\nI can say show IP route VRF customer one.\n\n577\n00:29:58,960 --> 00:30:03,010\nAnd now I'm going to see the routing\ntable just for customer one.\n\n578\n00:30:03,010 --> 00:30:06,010\nSince it has no interfaces, it is empty.\n\n579\n00:30:07,370 --> 00:30:10,430\nSame thing for customer two, it's empty.\n\n580\n00:30:10,430 --> 00:30:14,020\nI've created these virtual routers,\nbut they have no interfaces.\n\n581\n00:30:14,020 --> 00:30:17,330\nFor a router to be useful it's got to have\nat least one interface which you can then\n\n582\n00:30:17,330 --> 00:30:18,730\nbreak into sub-interfaces if you want,\n\n583\n00:30:18,730 --> 00:30:23,210\nbut I'm gonna have to assign at least one\ninterface before this even shows anything,\n\n584\n00:30:23,210 --> 00:30:26,840\ntwo interfaces before it can\ndo any real work for me.\n\n585\n00:30:26,840 --> 00:30:32,530\nSo that's really the next step,\nis putting our interfaces into the VRFs.\n\n586\n00:30:32,530 --> 00:30:37,730\nNow in my case,\nif I look at my interfaces.\n\n587\n00:30:37,730 --> 00:30:42,160\nI've got this serial 1/0,\nthat's my frame relay network.\n\n588\n00:30:42,160 --> 00:30:46,515\nAnd I've got subinterfaces .1,\nthat points to customer one, and\n\n589\n00:30:46,515 --> 00:30:48,260\n.2 that points to customer two.\n\n590\n00:30:48,260 --> 00:30:50,990\nAnd then I would have additional ones for\nall the additional branches.\n\n591\n00:30:50,990 --> 00:30:54,680\nThe branches for customer one,\nthe branches for customer two, and so on.\n\n592\n00:30:54,680 --> 00:30:58,260\nAnd what I need to do is I need\nto put each of those interfaces\n\n593\n00:30:58,260 --> 00:31:00,730\ninto the appropriate VRF, right?\n\n594\n00:31:00,730 --> 00:31:02,900\nWe're just attaching them to the VRF.\n\n595\n00:31:02,900 --> 00:31:07,850\nNow when I do that,\nit's gonna detach it from the ISP router,\n\n596\n00:31:07,850 --> 00:31:10,900\nfrom the parent router, and\nit's gonna attach it to the virtual one.\n\n597\n00:31:10,900 --> 00:31:14,750\nAnd when it does that It's gonna wipe\nout the IP address on the interface.\n\n598\n00:31:14,750 --> 00:31:16,390\nAll right?\nThat's a part of what it does.\n\n599\n00:31:16,390 --> 00:31:20,490\nWhen it detaches and attaches the\ninterface, that's like a layer two option,\n\n600\n00:31:20,490 --> 00:31:23,440\nand it flushes all the layer\nthree configuration out of there.\n\n601\n00:31:23,440 --> 00:31:26,220\nSo if you've already\nconfigured the interface,\n\n602\n00:31:26,220 --> 00:31:27,950\nexpect to have to redo some work.\n\n603\n00:31:27,950 --> 00:31:30,530\nAll right?\nIt's not bad, though, it's just IP, right?\n\n604\n00:31:30,530 --> 00:31:32,130\nSo that's what I'm gonna do next.\n\n605\n00:31:32,130 --> 00:31:36,770\nI'm gonna move these interfaces into their\nappropriate VRF now, the parent interface,\n\n606\n00:31:36,770 --> 00:31:38,910\nthis one serial1/0 I'm\ngoing to leave it alone.\n\n607\n00:31:38,910 --> 00:31:40,850\nI'm not going to put it in the VRF.\n\n608\n00:31:40,850 --> 00:31:43,600\nBut the sub interfaces I am and\nthat's kind of the nice part.\n\n609\n00:31:43,600 --> 00:31:45,400\nI'm doing it here with frame relay.\n\n610\n00:31:45,400 --> 00:31:48,130\nIf this was ethernet and\nyou had dedicated interfaces running\n\n611\n00:31:48,130 --> 00:31:51,030\nto the customer you would just go\ninto those interfaces and do it.\n\n612\n00:31:51,030 --> 00:31:56,727\nIf you had a shared interface though and\nyou were doing vlans for your customers\n\n613\n00:31:56,727 --> 00:32:01,921\nthen you would take each vlan sub\ninterface and attach those into a VRF.\n\n614\n00:32:01,921 --> 00:32:04,824\nSo different approaches for it But\nit all boils down to the same thing.\n\n615\n00:32:04,824 --> 00:32:08,570\nThe interface that powers the customer\nneeds to go into that vrf.\n\n616\n00:32:09,732 --> 00:32:12,890\nAll right, so if I want to do that I\nneed to get into that interface so\n\n617\n00:32:12,890 --> 00:32:16,640\nI'll jump over to serial 1/0.1.\n\n618\n00:32:16,640 --> 00:32:20,221\nAnd here, I'm just gonna tell it, ip vrf\n\n619\n00:32:20,221 --> 00:32:24,880\nforwarding, and\nthen what VRF it's gonna be a part of.\n\n620\n00:32:24,880 --> 00:32:26,430\nAnd this one's gonna be customer1.\n\n621\n00:32:26,430 --> 00:32:27,840\nAll right?\n\n622\n00:32:27,840 --> 00:32:32,630\nThat detaches the interface from my parent\nrouter, and attaches it to the VRF.\n\n623\n00:32:32,630 --> 00:32:34,180\nAnd I get this message.\n\n624\n00:32:34,180 --> 00:32:39,510\nIPv4 disabled, and addresses removed\ndue to disabling the VRF customer1.\n\n625\n00:32:39,510 --> 00:32:43,770\nIt's a weird comment,\ndisabling VRF custome1.\n\n626\n00:32:43,770 --> 00:32:48,140\nWell it didn't turn the VRF off it\njust moved this interface into it, and\n\n627\n00:32:48,140 --> 00:32:51,060\nthe interface was off for\na moment while it moved it.\n\n628\n00:32:51,060 --> 00:32:53,330\nSo the message is a little confusing, but\n\n629\n00:32:53,330 --> 00:32:57,770\nwhat it means is that I\nam now in the VRF but\n\n630\n00:32:57,770 --> 00:33:03,760\nIt's just got no IP now, so I just turn\nright around and add the IP address again.\n\n631\n00:33:03,760 --> 00:33:10,850\nSo I'll say IP address\n10.1.1.1 255.255.255.252.\n\n632\n00:33:10,850 --> 00:33:12,400\nThere we go.\n\n633\n00:33:12,400 --> 00:33:15,124\nNow it's got its IP address again and\nit's happy.\n\n634\n00:33:15,124 --> 00:33:16,190\nAll right?\n\n635\n00:33:16,190 --> 00:33:18,740\nI'm gonna do the same thing for\nthe other sub-interface.\n\n636\n00:33:18,740 --> 00:33:21,750\nAnd one of the things that I normally do\n\n637\n00:33:21,750 --> 00:33:26,400\nis I just do a quick show run on\nthe interface that I'm about to work with.\n\n638\n00:33:26,400 --> 00:33:27,000\nRight?\n\n639\n00:33:27,000 --> 00:33:31,490\nAnd the reason I do that is I can just\ncopy and paste the IP address command.\n\n640\n00:33:31,490 --> 00:33:35,980\nAnd that way I make sure I don't make\na typo when I put the IP back in.\n\n641\n00:33:35,980 --> 00:33:40,880\nSo now if I get into Serial1/0.2,\nand I say ip\n\n642\n00:33:40,880 --> 00:33:46,320\nvrf forwarding, this is customer2,\nit wipes my IP,\n\n643\n00:33:46,320 --> 00:33:49,680\nbut now I can just paste that right\nback in, and we have the IP again.\n\n644\n00:33:49,680 --> 00:33:51,420\nAll right, so there we go.\n\n645\n00:33:51,420 --> 00:33:53,290\nIt's got it and it's in place.\n\n646\n00:33:53,290 --> 00:33:56,500\nAnd, if you're asking yourself why\ncouldn't Cisco just copy that IP over,\n\n647\n00:33:56,500 --> 00:33:57,770\nhow annoying is that?\n\n648\n00:33:57,770 --> 00:34:01,870\nWell, remember we're trying to\ncreate separation between customers.\n\n649\n00:34:01,870 --> 00:34:04,550\nAnd, in this scenario,\nit's better safe than sorry.\n\n650\n00:34:04,550 --> 00:34:05,830\nLet's blow that IP away.\n\n651\n00:34:05,830 --> 00:34:08,590\nInstead of trying to communicate\nbetween the parent router and\n\n652\n00:34:08,590 --> 00:34:10,880\nthis VRF they're supposed to be separate.\n\n653\n00:34:10,880 --> 00:34:12,980\nAnd so\nit doesn't carry over settings like that.\n\n654\n00:34:12,980 --> 00:34:14,522\nIt's a basic security measure.\n\n655\n00:34:14,522 --> 00:34:20,160\nAll right now that that's done,\nlet me just get out of config here.\n\n656\n00:34:20,160 --> 00:34:27,560\nIf I do a show IP interface brief, I still\nsee all of my interfaces just like normal.\n\n657\n00:34:27,560 --> 00:34:28,470\nNothing too crazy there.\n\n658\n00:34:30,300 --> 00:34:34,450\nAnd if I do a show IP route,\nhere's where things get weird.\n\n659\n00:34:34,450 --> 00:34:36,080\nLook at my routing table.\n\n660\n00:34:36,080 --> 00:34:39,508\nOn the main router,\nI no longer see serial 1/0.1 and\n\n661\n00:34:39,508 --> 00:34:43,820\n.2, I don't see those /30\nnetworks that I made.\n\n662\n00:34:43,820 --> 00:34:48,230\nAnd that's because I'm looking at\nthe routing table of the ISP router.\n\n663\n00:34:48,230 --> 00:34:50,960\nThose interfaces are not in\nthis routing table anymore,\n\n664\n00:34:50,960 --> 00:34:53,220\nthey're in their own routing table.\n\n665\n00:34:53,220 --> 00:34:59,690\nIf I do a show IP route VRF customer1,\nright?\n\n666\n00:34:59,690 --> 00:35:02,090\nThere I see the /30 for customer1.\n\n667\n00:35:02,090 --> 00:35:06,985\nAnd if I do a show IP route VRF customer\n2, there's the routing table for\n\n668\n00:35:06,985 --> 00:35:09,070\ncustomer2 and I see the other interface.\n\n669\n00:35:09,070 --> 00:35:11,340\nThree separate routing tables now.\n\n670\n00:35:11,340 --> 00:35:14,250\nThe ISPs and the two customers,\nand I have a hundred customers and\n\n671\n00:35:14,250 --> 00:35:15,630\nI have a hundred routing tables.\n\n672\n00:35:15,630 --> 00:35:17,420\nSo from now on when somebody calls for\n\n673\n00:35:17,420 --> 00:35:21,110\ntech support I can't just\nshow IP route anymore.\n\n674\n00:35:21,110 --> 00:35:22,740\nI've got to show IP route VRF and\n\n675\n00:35:22,740 --> 00:35:24,860\nthen the specific VRF that\ncustomer is contained in.\n\n676\n00:35:27,890 --> 00:35:30,240\nAll right now technically VRFs are done.\n\n677\n00:35:30,240 --> 00:35:32,050\nWe can end the show right there.\n\n678\n00:35:32,050 --> 00:35:34,030\nYou guys have seen VRFs.\n\n679\n00:35:34,030 --> 00:35:37,310\nBut we got to go a step further\nto make this actually functional.\n\n680\n00:35:37,310 --> 00:35:40,440\nI've got the VRFs but\nremember my customers were running OSPF.\n\n681\n00:35:40,440 --> 00:35:46,320\nAnd if I do a show ip protocols\nI'm not running OSPF yet.\n\n682\n00:35:46,320 --> 00:35:49,140\nSo the customers are not getting\nthe communications that they want.\n\n683\n00:35:49,140 --> 00:35:52,270\nAll right, so that's my next step is\nto bring up the routing protocols and\n\n684\n00:35:52,270 --> 00:35:53,600\nstick them in the appropriate VRFs.\n\n685\n00:35:53,600 --> 00:35:59,900\nNow the configuration is kind of like\nthat routing table a moment ago.\n\n686\n00:35:59,900 --> 00:36:02,480\nIf I wanted to create a new OSPF process,\nwhat would I do?\n\n687\n00:36:02,480 --> 00:36:03,930\nI'd say router OSPF one.\n\n688\n00:36:03,930 --> 00:36:05,980\nWell now I just add on to that.\n\n689\n00:36:05,980 --> 00:36:07,740\nRouter OSPF one.\n\n690\n00:36:07,740 --> 00:36:10,600\nVRF and then the VRF name, right?\n\n691\n00:36:10,600 --> 00:36:16,910\nSo I'll say, router OSPF 1 VRF customer1.\n\n692\n00:36:16,910 --> 00:36:21,080\nThat's going to create an OSPF process for\ncustomer one.\n\n693\n00:36:21,080 --> 00:36:27,230\nAnd I'll go ahead and add a network\nwhich will be the 10.1.1.0.0.0.0.3.\n\n694\n00:36:27,230 --> 00:36:30,050\nAnd I'll stick in area 0, okay?\n\n695\n00:36:31,120 --> 00:36:32,930\nThere I saw my adjacency just came up.\n\n696\n00:36:32,930 --> 00:36:36,740\nI'm partnered up with the other customer,\nand there we go.\n\n697\n00:36:36,740 --> 00:36:38,680\nAll right?\nSo that one's up, and it's running.\n\n698\n00:36:40,020 --> 00:36:41,950\nNow here is where it gets\na little bit bizarre.\n\n699\n00:36:41,950 --> 00:36:46,590\nIf I want to add in customer2,\nwell, remember how I said that\n\n700\n00:36:46,590 --> 00:36:51,040\nthe process ID is really only\nlocally significant to the router?\n\n701\n00:36:51,040 --> 00:36:53,470\nAnd I'm creating multiple routers here so\n\n702\n00:36:53,470 --> 00:36:57,170\nit would make sense that I could\nreuse the process ID, right?\n\n703\n00:36:57,170 --> 00:36:58,530\nWell, actually you can't.\n\n704\n00:36:58,530 --> 00:37:04,430\nIf I try router OSPF 1\nVRF customer2 like that,\n\n705\n00:37:04,430 --> 00:37:06,590\nI get a problem that it doesn't\nmatch the existing router.\n\n706\n00:37:06,590 --> 00:37:10,210\nSo I do have to use a separate process for\neach VRF.\n\n707\n00:37:11,590 --> 00:37:16,732\nSo I'm gonna say router OSPF,\nand I'll just do process ID 2 VRF\n\n708\n00:37:16,732 --> 00:37:21,359\ncustomer2 and\nthen I'll advertise its network.\n\n709\n00:37:21,359 --> 00:37:26,690\nWhich is 10.1.1.4.0.0.0.3.\n\n710\n00:37:26,690 --> 00:37:27,320\nArea 0.\n\n711\n00:37:27,320 --> 00:37:30,180\nOh shoot, I forgot something.\n\n712\n00:37:30,180 --> 00:37:31,600\nI forgot to advertise the default route.\n\n713\n00:37:31,600 --> 00:37:32,230\nI'm an ISP.\n\n714\n00:37:32,230 --> 00:37:34,470\nI need to give them away\nto connect to the internet.\n\n715\n00:37:34,470 --> 00:37:38,830\nSo, I'm going to say default\ninformation originates always.\n\n716\n00:37:40,495 --> 00:37:43,375\nAnd I probably need to go back and\nfix the other customer.\n\n717\n00:37:43,375 --> 00:37:46,225\nNow, you need to be really careful here.\n\n718\n00:37:46,225 --> 00:37:49,955\nI could just use my up arrows here and\nget to where I did.\n\n719\n00:37:49,955 --> 00:37:52,342\nRouter OSPF 1 VRF customer1,\nand jump right over there.\n\n720\n00:37:52,342 --> 00:37:53,672\nBut I'm paranoid about this.\n\n721\n00:37:53,672 --> 00:37:56,092\nWhen you are dealing\nwith separate customers,\n\n722\n00:37:56,092 --> 00:37:59,742\nyou do not want to mess with settings\non the wrong customer by accident.\n\n723\n00:37:59,742 --> 00:38:02,542\nAnd when I run that command,\nsee how the prompt stays the same?\n\n724\n00:38:02,542 --> 00:38:06,852\nI don't have a visual cue to know that I\nactually switched, so I have this habit.\n\n725\n00:38:06,852 --> 00:38:10,900\nIt's just kind of built into my\nmind where I always do exit.\n\n726\n00:38:10,900 --> 00:38:12,200\nAnd then go in that way.\n\n727\n00:38:12,200 --> 00:38:15,530\nAnd that way I know for a fact that\nI got out of the first customer and\n\n728\n00:38:15,530 --> 00:38:17,110\nI got into the second customer.\n\n729\n00:38:17,110 --> 00:38:17,940\nIt's an extra step.\n\n730\n00:38:17,940 --> 00:38:20,560\nIt's not necessary, but\nbetter safe than sorry.\n\n731\n00:38:20,560 --> 00:38:21,610\nThat's the way I always take it.\n\n732\n00:38:21,610 --> 00:38:23,000\nSo, there I am.\n\n733\n00:38:23,000 --> 00:38:23,790\nI'm in the interface.\n\n734\n00:38:23,790 --> 00:38:25,780\nAnd you'll see I do that\nwith interfaces too.\n\n735\n00:38:25,780 --> 00:38:28,290\nI always want to know for a fact that\nI've moved to a different interface,\n\n736\n00:38:28,290 --> 00:38:31,120\nso you'll see me use that exit\ncommand when it's not necessary.\n\n737\n00:38:32,800 --> 00:38:33,510\nAll right.\n\n738\n00:38:33,510 --> 00:38:36,980\nSo I'm just gonna add in that\ndefault route here too, so\n\n739\n00:38:36,980 --> 00:38:40,560\nthat i'm pushing it to the other sides.\n\n740\n00:38:40,560 --> 00:38:44,380\nNow I've got my two VRFs,\nmy two instances of OSPF,\n\n741\n00:38:44,380 --> 00:38:47,240\nand my two separate routing tables.\n\n742\n00:38:47,240 --> 00:38:49,380\nI should be in business, all right?\n\n743\n00:38:49,380 --> 00:38:51,260\nLet's take a look at\nthe routing table now.\n\n744\n00:38:51,260 --> 00:38:57,270\nIf I do a show IP protocols,\nI've got no protocols, right?\n\n745\n00:38:57,270 --> 00:39:00,420\nWell, I just created two OSPFs instances,\nwhere the heck are they?\n\n746\n00:39:00,420 --> 00:39:01,710\nThey're not on the parent router.\n\n747\n00:39:01,710 --> 00:39:05,120\nMy parent router is not running\na routing protocol at all.\n\n748\n00:39:05,120 --> 00:39:08,640\nBut I can do a show IP protocols VRF.\n\n749\n00:39:08,640 --> 00:39:10,100\nCustomer1.\n\n750\n00:39:10,100 --> 00:39:11,780\nAnd now I can see, there it is.\n\n751\n00:39:11,780 --> 00:39:15,900\nI'm running OSPF instance one\nright there inside of that VRF and\n\n752\n00:39:15,900 --> 00:39:18,480\nit's got a gateway of customer1.\n\n753\n00:39:18,480 --> 00:39:19,920\nIt's connecting to that router.\n\n754\n00:39:19,920 --> 00:39:20,710\nRight.\n\n755\n00:39:20,710 --> 00:39:23,450\nAnd if I do the same thing but\nfor VRF customer2.\n\n756\n00:39:23,450 --> 00:39:24,760\nI'll see it's running ospf 2.\n\n757\n00:39:24,760 --> 00:39:25,820\nIt's up.\n\n758\n00:39:25,820 --> 00:39:27,440\nIt's happy.\nIt's got that gateway.\n\n759\n00:39:27,440 --> 00:39:28,840\nSo things are looking good there.\n\n760\n00:39:28,840 --> 00:39:32,720\n>> The other way to check this\nis also on the customer end.\n\n761\n00:39:32,720 --> 00:39:35,710\nRight?\nWe shouldn't see where customer1 should be\n\n762\n00:39:35,710 --> 00:39:40,060\nable to see that other 192.168,\nnetwork on the other side and\n\n763\n00:39:40,060 --> 00:39:43,290\nalso on our side we, something wrong.\n\n764\n00:39:43,290 --> 00:39:44,990\nOn their side they shouldn't see ours.\n\n765\n00:39:44,990 --> 00:39:47,100\nI was about to say the same thing twice.\n\n766\n00:39:47,100 --> 00:39:48,950\n>> So we can verify that a couple of ways.\n\n767\n00:39:48,950 --> 00:39:51,110\nWe can look at the routing\ntables here on the ISP, so\n\n768\n00:39:51,110 --> 00:39:53,997\nif I do show IP route VRF customer1.\n\n769\n00:39:55,150 --> 00:39:55,961\nHere's their routing table.\n\n770\n00:39:55,961 --> 00:39:59,126\nAnd notice that 192.168.0.0 is here, and\n\n771\n00:39:59,126 --> 00:40:02,441\nit's going out Serial1/0.1,\njust like I want it.\n\n772\n00:40:02,441 --> 00:40:06,794\nFor that customer,\nthat's where 192.168.0.0 is.\n\n773\n00:40:06,794 --> 00:40:09,973\nIf I pull up the routing table for\ncustomer 2,\n\n774\n00:40:09,973 --> 00:40:15,230\nthere's 192.168.0.0 but\nit's going out Serial 1/0.2.\n\n775\n00:40:15,230 --> 00:40:18,070\nThat's exactly where I want it, right.\n\n776\n00:40:18,070 --> 00:40:22,080\nThese customers are now separated out and\nthey can have overlapping IPs and\n\n777\n00:40:22,080 --> 00:40:23,370\nthey do not butt heads.\n\n778\n00:40:23,370 --> 00:40:25,070\nThat is perfect.\n\n779\n00:40:25,070 --> 00:40:28,370\nAnd when I jump over to the customer,\n\n780\n00:40:28,370 --> 00:40:32,320\nremember I didn't change a single\nthing on the customer end.\n\n781\n00:40:32,320 --> 00:40:37,950\nThe customer end still has\na very basic OSPF configuration\n\n782\n00:40:37,950 --> 00:40:42,520\nwhere they just advertise their\nnetwork into a single process ID and,\n\n783\n00:40:42,520 --> 00:40:47,220\nif I do a show ip route, I can see that\nthey're getting that default gateway\n\n784\n00:40:47,220 --> 00:40:50,410\nfrom the ISP and that they already\nknow about all of the other networks.\n\n785\n00:40:50,410 --> 00:40:53,110\nThey didn't learn anything there, but\nthey're getting that default gateway,\n\n786\n00:40:53,110 --> 00:40:56,940\nthey're up, and they're happy, all right.\n\n787\n00:40:56,940 --> 00:41:01,560\nSo now, my main router, it's like\nit's been divided into two pieces.\n\n788\n00:41:01,560 --> 00:41:04,838\nNow there's a few other commands that we\nneed to be aware of that are really come\n\n789\n00:41:04,838 --> 00:41:06,990\nin handy if you have to support this.\n\n790\n00:41:06,990 --> 00:41:09,340\nThere's show IP VRF.\n\n791\n00:41:09,340 --> 00:41:12,160\nAnd that gives you the summary of VRFs.\n\n792\n00:41:12,160 --> 00:41:14,500\nSo I can see how many\nvirtual routers I have and\n\n793\n00:41:14,500 --> 00:41:18,070\nwhat interfaces are tied\nto those virtual routers.\n\n794\n00:41:18,070 --> 00:41:20,280\nSo that's a pretty cool one.\n\n795\n00:41:20,280 --> 00:41:24,820\nThere's also a few other ones that\nare useful like show ip ospf interface.\n\n796\n00:41:26,090 --> 00:41:28,800\nShow ip ospf interface is a neat\ncommand because it'll look at\n\n797\n00:41:28,800 --> 00:41:33,250\nthe physical interface and tell you\nwhether it's attached to OSPF or not, so\n\n798\n00:41:33,250 --> 00:41:36,960\nyou can start to see that OSPF\nis running on these interfaces.\n\n799\n00:41:36,960 --> 00:41:42,160\nIf you do a show IP OSPF and you don't see\nan interface listed then maybe it's in\n\n800\n00:41:42,160 --> 00:41:47,730\na VRF and show IP OSPF interface will list\nthat, and so you'll be able to spot it and\n\n801\n00:41:47,730 --> 00:41:51,200\nsay yeah, I am running OSPF\nright here except for area 0.\n\n802\n00:41:51,200 --> 00:41:57,410\nThe only problem is show IP OSPF interface\ndoesn't really reflect the VRF itself.\n\n803\n00:41:57,410 --> 00:42:00,360\nSo I know OSPF is running\non the interface, but\n\n804\n00:42:00,360 --> 00:42:03,470\nI don't see that it's actually\nrunning in a different VRF.\n\n805\n00:42:03,470 --> 00:42:06,450\nThese interfaces just look the same to me.\n\n806\n00:42:06,450 --> 00:42:07,520\nInterface .1 and .2.\n\n807\n00:42:07,520 --> 00:42:09,010\nThere's no VRF details there.\n\n808\n00:42:11,730 --> 00:42:12,420\nAll right.\n\n809\n00:42:12,420 --> 00:42:15,450\nAnd then we already saw show IP route and\nVRF, whatever.\n\n810\n00:42:15,450 --> 00:42:19,350\nSo a couple of commands there\nto be able to look at that.\n\n811\n00:42:19,350 --> 00:42:24,280\nNow once this is set up,\nwe've got a fairly basic setup here, but\n\n812\n00:42:24,280 --> 00:42:27,550\nnow either customer can call me and\nadd more branches.\n\n813\n00:42:27,550 --> 00:42:30,370\nI can add more branches\nto their company and\n\n814\n00:42:30,370 --> 00:42:33,710\nall I have to do is attach those\nbranches to the appropriate VRF, and\n\n815\n00:42:33,710 --> 00:42:36,590\nthey're partitioned off\nfrom the other customers.\n\n816\n00:42:36,590 --> 00:42:38,410\nSo let's create a fake branch.\n\n817\n00:42:38,410 --> 00:42:40,375\nSo on my ISP, I'll just create a loopback.\n\n818\n00:42:41,420 --> 00:42:46,020\nAnd in my loopback interface,\nI'm gonna say, ip vrf forwarding,\n\n819\n00:42:46,020 --> 00:42:51,390\nand I'm gonna stick it into customer1,\nright.\n\n820\n00:42:51,390 --> 00:42:54,417\nSo I just moved this loop\nback into the customer1 vrf.\n\n821\n00:42:55,880 --> 00:42:57,378\nAnd then I'll give it an IP address.\n\n822\n00:42:57,378 --> 00:43:01,310\nLet's say 192.168.1.1.\n\n823\n00:43:01,310 --> 00:43:05,110\nBecause I have to use a valid IP.\n\n824\n00:43:08,865 --> 00:43:09,365\nThere.\n\n825\n00:43:10,415 --> 00:43:12,935\nAnd I guess I need to stick it into OSPF.\n\n826\n00:43:12,935 --> 00:43:16,175\nSo I'll say ip ospf 1 area 0.\n\n827\n00:43:16,175 --> 00:43:20,642\nSo now that'll be part of OSPF and\nadvertised out in area 0.\n\n828\n00:43:20,642 --> 00:43:26,752\nAnd, this is gonna be\nreflected as a /32 by default.\n\n829\n00:43:26,752 --> 00:43:29,422\nOSPF, when it sees a loopback,\nit always makes it a /32.\n\n830\n00:43:29,422 --> 00:43:31,342\nBut I wanna lie to it and make it a /24.\n\n831\n00:43:31,342 --> 00:43:35,891\nSo the way to trick it Is to say ip\n\n832\n00:43:35,891 --> 00:43:40,274\nospf network point-to-point.\n\n833\n00:43:40,274 --> 00:43:41,651\nIf you lie to it and\n\n834\n00:43:41,651 --> 00:43:44,551\ntell it's a point to point network,\nit'll make it the /24 that I want.\n\n835\n00:43:44,551 --> 00:43:48,323\nIt'll just make it obey\nthe subnet mask up here.\n\n836\n00:43:48,323 --> 00:43:51,241\nAll right, so I just created a fake\nbranch and I can continue on and\n\n837\n00:43:51,241 --> 00:43:52,751\ncreate other fake branches.\n\n838\n00:43:52,751 --> 00:43:57,880\nI could do LO10 and\n\n839\n00:43:57,880 --> 00:44:00,880\nbasically run through that same\nprocess moving into the VRF.\n\n840\n00:44:00,880 --> 00:44:05,810\nGive it an IP address,\nmaybe this one's 2.1,\n\n841\n00:44:05,810 --> 00:44:11,260\nstick it into OSPF, and\nmake it a point to point, right?\n\n842\n00:44:11,260 --> 00:44:14,200\nSo, just creating these additional\nbranches and throwing them in here.\n\n843\n00:44:14,200 --> 00:44:16,830\nIn real life these would be more\nframe relay lines running off\n\n844\n00:44:16,830 --> 00:44:17,470\nthe to different areas.\n\n845\n00:44:17,470 --> 00:44:19,970\nI'm just using loopbacks, right?\n\n846\n00:44:19,970 --> 00:44:24,388\nAnd I could even go to customer2,\nso I'll just make another loopback.\n\n847\n00:44:24,388 --> 00:44:28,090\nAnd for customer2 maybe I'm gonna\nadd one in that'll be a duplicate of\n\n848\n00:44:28,090 --> 00:44:28,850\nthe other one.\n\n849\n00:44:28,850 --> 00:44:31,960\nThis one,\nI'm gonna move into VRF customer2.\n\n850\n00:44:33,140 --> 00:44:35,310\nI'll give it an IP address of 192.168.1.1.\n\n851\n00:44:35,310 --> 00:44:41,079\nThat overlaps with one of\nthe other customer's branches.\n\n852\n00:44:41,079 --> 00:44:44,910\nI will stick it into OSPF 2 area 0.\n\n853\n00:44:44,910 --> 00:44:46,770\nThat's a separate process.\n\n854\n00:44:46,770 --> 00:44:50,960\nAnd I'll lie to it and tell it,\nit's a point to point.\n\n855\n00:44:53,600 --> 00:44:54,330\nOkay.\n\n856\n00:44:54,330 --> 00:44:58,400\nSo I just added two branch\noffices to customer 1, and\n\n857\n00:44:58,400 --> 00:45:04,740\none branch office to costumer 2, and\nif I do a show ip vrf interface,\n\n858\n00:45:07,630 --> 00:45:11,950\nI can get my list of interfaces and\nsee which VRFs they're attached to, and\n\n859\n00:45:11,950 --> 00:45:16,970\nso right here I can see that serial 1/0.1,\nthat's customer 1.\n\n860\n00:45:16,970 --> 00:45:20,367\nI can see loopback 9 and\nloopback 10 are customer 1 also.\n\n861\n00:45:20,367 --> 00:45:24,360\nAnd I've got serial 1/0.2 and loopback 11,\nthose are both on customer 2.\n\n862\n00:45:25,740 --> 00:45:28,220\nI don't think I showed this\ncommand earlier did I?\n\n863\n00:45:28,220 --> 00:45:31,350\nShow IP VRF Interface.\n\n864\n00:45:31,350 --> 00:45:34,700\nI could have done show ip vrf, right?\n\n865\n00:45:34,700 --> 00:45:37,220\nAnd it gives you the interfaces, too.\n\n866\n00:45:37,220 --> 00:45:38,600\nSo, there's different ways to go about it,\nbut\n\n867\n00:45:38,600 --> 00:45:41,140\nshow ip vrf interface\nshows the IP addresses.\n\n868\n00:45:41,140 --> 00:45:42,680\nSo, I kinda like that command better.\n\n869\n00:45:42,680 --> 00:45:43,540\nIt's the one I normally run.\n\n870\n00:45:44,950 --> 00:45:47,320\nI think this is the command I\nshowed earlier in the show.\n\n871\n00:45:47,320 --> 00:45:48,500\nCommands start to blend together.\n\n872\n00:45:48,500 --> 00:45:50,130\n>> Yeah.\n>> [LAUGH] All right,\n\n873\n00:45:50,130 --> 00:45:51,540\nso I can see it I've got that.\n\n874\n00:45:51,540 --> 00:45:58,242\nIf I look at my routing tables, if I do a\nshow IP routes VRF customer 1, all right,\n\n875\n00:45:58,242 --> 00:46:04,090\nit's now got 192.168.0,\nthat's coming from customer 1.\n\n876\n00:46:05,498 --> 00:46:09,710\n192.168.1.0, that's the fake\nbranch that I made.\n\n877\n00:46:09,710 --> 00:46:12,010\nAnd 192.168.2.0, and\nthat's the other fake branch that I made.\n\n878\n00:46:13,500 --> 00:46:20,850\nAnd if I jump to customer 2's routing\ntable, right, it's got 192.168.1 also.\n\n879\n00:46:20,850 --> 00:46:24,310\nBut notice how theirs is\nattached to loopback 11.\n\n880\n00:46:24,310 --> 00:46:28,590\nAnd up here, it's attached to loopback 9.\n\n881\n00:46:28,590 --> 00:46:31,250\nAnd that's actually another thing\nthat's important to remember,\n\n882\n00:46:31,250 --> 00:46:33,420\nis that I broke a rule here, didn't I?\n\n883\n00:46:33,420 --> 00:46:37,380\nOn a Cisco router, by default,\n\n884\n00:46:37,380 --> 00:46:41,790\nyou cannot have two interfaces\nin the same network.\n\n885\n00:46:41,790 --> 00:46:44,220\nIf you have two interfaces and\nyou try and put them in the same network,\n\n886\n00:46:44,220 --> 00:46:46,740\nthe router will complain\nlike crazy to you.\n\n887\n00:46:46,740 --> 00:46:47,770\nBut I did it!\n\n888\n00:46:47,770 --> 00:46:49,036\nLoopback9 is 192.168.1.1.\n\n889\n00:46:49,036 --> 00:46:50,090\nLoopback11 is 192.168.1.1.\n\n890\n00:46:50,090 --> 00:46:55,670\nI broke a fundamental rule, and\nit didn't complain a single time.\n\n891\n00:46:55,670 --> 00:47:00,020\nAnd that's because these\nare in separate VRFs.\n\n892\n00:47:00,020 --> 00:47:03,450\nSo it knows they're not the same, that\nthey're not gonna connect to each other,\n\n893\n00:47:03,450 --> 00:47:04,620\nnot going to bump heads.\n\n894\n00:47:04,620 --> 00:47:06,300\nIt allows that overlap between customers.\n\n895\n00:47:07,860 --> 00:47:11,560\nAnd where this is really cool is\nwhen we jump over to our branch.\n\n896\n00:47:11,560 --> 00:47:17,410\nMy branch here on customer1,\nif I do a show ip route, it's going\n\n897\n00:47:17,410 --> 00:47:24,180\nto learn those new branches, 192.168.1,\n192.168.2, and it's learned them via OSPF.\n\n898\n00:47:24,180 --> 00:47:27,560\nSo I've got them and I'm ready to be\nable to reach out and communicate.\n\n899\n00:47:28,690 --> 00:47:29,450\nHere's the real test right?\n\n900\n00:47:29,450 --> 00:47:32,390\nLet me try and ping these things.\n\n901\n00:47:32,390 --> 00:47:34,190\nI can ping 1.1 and I can ping 2.1.\n\n902\n00:47:34,190 --> 00:47:41,571\nIf I jump over to customer 2 and do\na show ip route, well it's got 192.168.1,\n\n903\n00:47:41,571 --> 00:47:46,989\nit does not have .2 because I\ndidn't make another .2 for it.\n\n904\n00:47:46,989 --> 00:47:50,890\nAnd if it pings to 192.168.1.1,\nit gets through.\n\n905\n00:47:50,890 --> 00:47:54,328\nIf it tries 2.1, unreachable.\n\n906\n00:47:54,328 --> 00:47:55,496\nIt didn't get the route.\n\n907\n00:47:55,496 --> 00:47:56,969\nThese routers are now separate.\n\n908\n00:47:56,969 --> 00:48:01,369\nMy ISP is now divided\nup into multiple VRFs.\n\n909\n00:48:01,369 --> 00:48:03,378\nThese customers are isolated\nfrom each other.\n\n910\n00:48:03,378 --> 00:48:06,502\nGives you a ton of flexibility and\ncontrol.\n\n911\n00:48:06,502 --> 00:48:09,504\nSo, if you've ever connected to an ISP and\nused a private range and\n\n912\n00:48:09,504 --> 00:48:13,256\nyou've wondered to yourself how is it that\nno other customer at their location uses\n\n913\n00:48:13,256 --> 00:48:15,570\nthe same range, well they probably do.\n\n914\n00:48:15,570 --> 00:48:18,850\nThey probably do, you just don't see\nit because you've been isolated.\n\n915\n00:48:18,850 --> 00:48:21,810\nAnd, the when you go out to\nthe internet you get natted,\n\n916\n00:48:21,810 --> 00:48:24,520\nso you get natted to public IP so\nyou don't bump into each other.\n\n917\n00:48:24,520 --> 00:48:26,550\nNobody knows that you're doing that.\n\n918\n00:48:26,550 --> 00:48:28,390\nI didn't do the nat\nconfiguration on top of this.\n\n919\n00:48:28,390 --> 00:48:30,640\nWe have a default route, right?\n\n920\n00:48:30,640 --> 00:48:31,360\nSo when I look at it,\n\n921\n00:48:31,360 --> 00:48:34,450\nI do have my gateway of last resort\nthat I can Jumped to the ISP,\n\n922\n00:48:34,450 --> 00:48:38,760\nbut if I'm going out to the internet\nI've got to get natted before I go.\n\n923\n00:48:38,760 --> 00:48:43,030\nSo on the ISP router I would need to go in\nand put NAT commands in there to handle\n\n924\n00:48:43,030 --> 00:48:46,340\nthat as well as put the internet\nroute on the actual ISP router.\n\n925\n00:48:46,340 --> 00:48:48,550\nBut that's ISP work,\non the exam they won't have you do that.\n\n926\n00:48:50,250 --> 00:48:53,060\nAll right, but\nright there in a nutshell, that's VRFs.\n\n927\n00:48:53,060 --> 00:48:56,000\nThey're really cool,\nif you've never used them don't feel bad.\n\n928\n00:48:56,000 --> 00:48:57,210\nIt's not a common technology.\n\n929\n00:48:57,210 --> 00:49:00,320\nIt's not something most people ever have\nto deal with, but it's neat functionality.\n\n930\n00:49:01,410 --> 00:49:05,480\nSo even for those of you that are just\nkinda learning as you get into Cisco land,\n\n931\n00:49:05,480 --> 00:49:08,680\ninstead of buying a bunch of\nseparate routers to lab up,\n\n932\n00:49:08,680 --> 00:49:10,360\nyou could actually just use VRFs.\n\n933\n00:49:10,360 --> 00:49:13,680\nIf you're trying to create a fake\ntopology, you could use VRFs and\n\n934\n00:49:13,680 --> 00:49:17,720\ndo GRE tunnels between them to simulate\nconnecting all these different cables.\n\n935\n00:49:17,720 --> 00:49:22,990\nSo when I show a lab topology, like in, in\nsome of the shows I'll bring up a topology\n\n936\n00:49:22,990 --> 00:49:29,140\nwhere we might have several\ndifferent routers in place.\n\n937\n00:49:29,140 --> 00:49:31,260\nDid I actually make changes to that?\n\n938\n00:49:32,660 --> 00:49:34,280\n>> No.\n>> I was gonna get all mad at me.\n\n939\n00:49:35,780 --> 00:49:39,130\nIf we take a look at one of those topology\nwhere I've got like five routers.\n\n940\n00:49:39,130 --> 00:49:43,180\nWell, instead of five routers, what I\ncould do is I could have one router.\n\n941\n00:49:43,180 --> 00:49:46,300\nAnd I could just do a bunch\nof different VRFs in it,\n\n942\n00:49:46,300 --> 00:49:49,070\nto simulate some of the other\nrouters that are out there.\n\n943\n00:49:49,070 --> 00:49:50,805\nThat's not even the diagram that I wanted.\n\n944\n00:49:50,805 --> 00:49:51,500\n>> [LAUGH]\n>> So\n\n945\n00:49:51,500 --> 00:49:54,240\nthere's neat little options out\nthere that you can do to help\n\n946\n00:49:54,240 --> 00:49:56,240\n>> And VRFs can kind of power it.\n\n947\n00:49:56,240 --> 00:49:58,860\nAll right, well I give up, I'm not\ngonna find the diagram that I want.\n\n948\n00:49:58,860 --> 00:50:03,600\nBut yeah those are all things to keep in\nmind as you work with each cool technology\n\n949\n00:50:03,600 --> 00:50:05,380\nand not that hard to work with.\n\n950\n00:50:05,380 --> 00:50:08,160\n>> Don, James has a question\nabout the VRFs anyways.\n\n951\n00:50:08,160 --> 00:50:11,330\nOn the routers does it actually\njust depend on memory?\n\n952\n00:50:11,330 --> 00:50:12,730\nSo do we need more memory?\n\n953\n00:50:12,730 --> 00:50:14,920\nYeah, it's memory and CPU, right?\n\n954\n00:50:14,920 --> 00:50:18,870\nSo it does boil down to the routing\nprotocol that you're running.\n\n955\n00:50:18,870 --> 00:50:22,910\nIf, each VRF just has static routes in it,\nwell,\n\n956\n00:50:22,910 --> 00:50:24,720\nit doesn't consume much memory or\nCPU at all.\n\n957\n00:50:24,720 --> 00:50:28,555\nAnd you'll be able be able to create\nthousands of VRF's without issues, right.\n\n958\n00:50:28,555 --> 00:50:32,575\nIf you're running OSPF though,\nit uses a good chunk of memory,\n\n959\n00:50:32,575 --> 00:50:35,875\nit uses a good chunk of CPU,\nand the more VRFs you create,\n\n960\n00:50:35,875 --> 00:50:39,475\nthe more bogged down your router is\ngoing to get, if it's a network that has\n\n961\n00:50:39,475 --> 00:50:42,725\nfrequent re-convergence, right,\nif it's a frequently changing network.\n\n962\n00:50:42,725 --> 00:50:44,715\nIf it's a stable network\nit might not be so bad, but\n\n963\n00:50:44,715 --> 00:50:48,435\nit does boil down to how much memory and\nhow much CPU your system has.\n\n964\n00:50:48,435 --> 00:50:49,850\nSo you gotta be careful with that.\n\n965\n00:50:49,850 --> 00:50:53,200\nYou don't wanna go too terribly\ncrazy on it, all right?\n\n966\n00:50:53,200 --> 00:50:56,790\n>> He asked the same question about\nthe bandwidth on the connection going\n\n967\n00:50:56,790 --> 00:50:57,400\ninto the ISP router.\n\n968\n00:50:57,400 --> 00:51:01,110\n>> Now bandwidth is not such a big\ndeal because remember we're taking our\n\n969\n00:51:01,110 --> 00:51:04,390\nphysical interfaces and\nmoving them into the VRFs.\n\n970\n00:51:04,390 --> 00:51:06,990\nIn my case I was doing frame relay,\nso I had a lot of subinterfaces.\n\n971\n00:51:06,990 --> 00:51:11,130\nBut when you do frame relay\nyou purchase a CIR, right?\n\n972\n00:51:11,130 --> 00:51:13,190\nThat committed information rate.\n\n973\n00:51:13,190 --> 00:51:15,720\nAnd so if you negotiate out\na contract with a vendor.\n\n974\n00:51:15,720 --> 00:51:18,270\nAnd you negotiate 768K of\nframe relay bandwidth.\n\n975\n00:51:18,270 --> 00:51:21,750\nAs they provision it out,\nthey want to make sure that they\n\n976\n00:51:21,750 --> 00:51:24,260\ndon't exceed the bandwidth\nof their physical interface.\n\n977\n00:51:24,260 --> 00:51:26,020\nAnd when they do,\nthey move over to other ones.\n\n978\n00:51:26,020 --> 00:51:29,600\nSo bandwidth is not normally\na concern when it comes to VRFs.\n\n979\n00:51:29,600 --> 00:51:33,690\nIf you're doing VLANs with no quality\nof service or anything like that,\n\n980\n00:51:33,690 --> 00:51:34,460\nyeah it could be.\n\n981\n00:51:34,460 --> 00:51:35,570\nI suppose.\n\n982\n00:51:35,570 --> 00:51:40,640\nBut, at the end of the day, the VRFs are\njust impacting the routing table lookup.\n\n983\n00:51:40,640 --> 00:51:43,050\nThe traffic moves between\nthe interfaces like normal.\n\n984\n00:51:43,050 --> 00:51:46,420\nThe traffic isn't actually\npassing through the VRF, right?\n\n985\n00:51:46,420 --> 00:51:51,440\nInside of the router, you've got\nthe control plane and the data plane; and\n\n986\n00:51:51,440 --> 00:51:53,310\nthe control plane's where\nthe decisions get made,\n\n987\n00:51:53,310 --> 00:51:55,080\nthe data plane's where the data moves.\n\n988\n00:51:55,080 --> 00:51:57,620\nWell, the VRFs,\nthey're up in the control plane.\n\n989\n00:51:57,620 --> 00:52:00,520\nSo the data plane is still just\na straight through connection.\n\n990\n00:52:00,520 --> 00:52:03,700\nSo VRFs don't affect your bandwidth.\n\n991\n00:52:03,700 --> 00:52:07,460\nIf you run out of bandwidth,\nyou would've run out without the VRFs.\n\n992\n00:52:07,460 --> 00:52:10,090\nSo it's really not the kinda\nrelated Did to them.\n\n993\n00:52:10,090 --> 00:52:11,900\nBut CPU and\nmemory's a different story, right?\n\n994\n00:52:11,900 --> 00:52:13,400\nVRFs do increase the pull on those.\n\n995\n00:52:15,430 --> 00:52:19,470\n>> Just one little last exam tip before\nyou go in there and you start seeing this.\n\n996\n00:52:19,470 --> 00:52:23,351\nA lot of times, the things that we mention\nright at the beginning of this show,\n\n997\n00:52:23,351 --> 00:52:26,045\nepisode, episode.\n\n998\n00:52:26,045 --> 00:52:30,490\n[LAUGH] The abbreviations\nthat Don talked about.\n\n999\n00:52:30,490 --> 00:52:32,060\nPE and CE.\n\n1000\n00:52:32,060 --> 00:52:34,930\nMake sure you can distinguish\nthe difference between those.\n\n1001\n00:52:34,930 --> 00:52:38,240\nOne is provider edge and\none is customer edge.\n\n1002\n00:52:38,240 --> 00:52:41,560\nRemember that most, just about\neverything that we did for the VRF\n\n1003\n00:52:41,560 --> 00:52:46,340\nconfigurations happened at the provider's\nedge and not at the customer's edge.\n\n1004\n00:52:46,340 --> 00:52:48,700\n>> Yeah, but we did do VRF light.\n\n1005\n00:52:48,700 --> 00:52:51,680\nI didn't do any of the crazy stuff\nthat comes in with the full VRF.\n\n1006\n00:52:51,680 --> 00:52:54,640\nFor those of you that go on to learn\nabout MPLS, you'll get to see all that.\n\n1007\n00:52:54,640 --> 00:52:55,890\nIt's very, very powerful.\n\n1008\n00:52:55,890 --> 00:52:58,400\nSo what we saw right\nthere is VRF light and\n\n1009\n00:52:58,400 --> 00:53:02,280\nit's a function of most of\nthe Cisco IOS speaker sets these days.\n\n1010\n00:53:02,280 --> 00:53:03,910\nSo your router can more than likely do it.\n\n1011\n00:53:05,212 --> 00:53:08,200\nAll right, well that's a good spot for\nus to wrap up this episode.\n\n1012\n00:53:08,200 --> 00:53:09,030\nLet me remind you guys,\n\n1013\n00:53:09,030 --> 00:53:11,860\nif you have questions on any of this,\nfeel free to ask.\n\n1014\n00:53:11,860 --> 00:53:14,970\nLive during the show you\ncan go to itpro.tv/live and\n\n1015\n00:53:14,970 --> 00:53:17,320\nyou'll see the chat room\nright beneath the video.\n\n1016\n00:53:17,320 --> 00:53:19,960\nPost your questions there,\nwe monitor and answer during the show.\n\n1017\n00:53:19,960 --> 00:53:23,700\nIf you have questions after\nthe show use our Q and A forums.\n\n1018\n00:53:23,700 --> 00:53:25,620\nAt the top of every page there's\na link that says Q and A.\n\n1019\n00:53:25,620 --> 00:53:28,440\nYou can jump right in there,\npost your questions, we monitor and\n\n1020\n00:53:28,440 --> 00:53:29,450\nanswer after the show.\n\n1021\n00:53:29,450 --> 00:53:32,294\nTake advantage of that resource,\nit is there for you.\n\n1022\n00:53:32,294 --> 00:53:36,493\nAll right, well signing off for\nITProTV, I'm Don Pezet.\n\n1023\n00:53:36,493 --> 00:53:38,295\n>> And I'm Ronnie Wong.\n>> And we'll see you next time.\n\n1024\n00:53:38,295 --> 00:53:48,295\n[MUSIC]\n\n1025\n00:53:52,026 --> 00:53:58,280\n[SOUND]\n\n",
          "vimeoId": "119120514"
        },
        {
          "description": "Eventually one's network grows to the point where one's needs are complex enough that just learning the routes isn't enough, but will need to manipulate routes on the routing table to filter out certain routes. Viewers will hear about methods used to filter routes while using any protocol and see and demonstrations of the use of prefix lists and distribute lists on routers using EIGRP, OSPF and BGP.",
          "length": "5551",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/ccnproute/cisco-ccnproute-3-9-route_filtering-020915.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/ccnproute/cisco-ccnproute-3-9-route_filtering-020915-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/ccnproute/cisco-ccnproute-3-9-route_filtering-020915-sm.jpg",
          "title": "Route Filtering",
          "transcript": "1\n00:00:00,000 --> 00:00:10,000\n[MUSIC]\n\n2\n00:00:33,445 --> 00:00:34,421\n>> All right.\nGood morning.\n\n3\n00:00:34,421 --> 00:00:35,121\nGood afternoon.\n\n4\n00:00:35,121 --> 00:00:35,970\nAnd good evening.\n\n5\n00:00:35,970 --> 00:00:38,590\nWelcome back to another\nepisode of ITProTV.\n\n6\n00:00:38,590 --> 00:00:40,100\nI'm your host Don Pezet.\n\n7\n00:00:40,100 --> 00:00:41,760\nBack again with Mr. Ronnie Wong.\n\n8\n00:00:41,760 --> 00:00:42,420\nHow's it going Ronnie?\n\n9\n00:00:42,420 --> 00:00:43,510\n>> It is going well.\n\n10\n00:00:43,510 --> 00:00:45,630\nI have caught up on Downtown Abby.\n\n11\n00:00:45,630 --> 00:00:50,570\nSo I am ready for another exciting\nepisode into the realm of CCNP.\n\n12\n00:00:50,570 --> 00:00:55,850\n>> That is awesome, [LAUGH] we are back\nwith another episode of CCNP route.\n\n13\n00:00:55,850 --> 00:00:59,410\nAnd I've really been looking\nforward to this episode because\n\n14\n00:00:59,410 --> 00:01:01,660\nwe've been moving through\nthe objectives as we've gone along.\n\n15\n00:01:01,660 --> 00:01:03,610\nAnd all of the objectives we've hit so\n\n16\n00:01:03,610 --> 00:01:08,550\nfar have really been kind of review for\nthings that have been covered in CCNA.\n\n17\n00:01:08,550 --> 00:01:11,900\nAnd this episode really\nmarks the first step.\n\n18\n00:01:11,900 --> 00:01:14,800\nWe move into something\nthat's truly advanced level.\n\n19\n00:01:14,800 --> 00:01:19,430\nAnd so we're gonna move into what I\nconsider to be the first real CCNP topic.\n\n20\n00:01:19,430 --> 00:01:22,010\nWhich is Route Filtering.\n\n21\n00:01:22,010 --> 00:01:26,690\nIn a small network, you generally want all\nof your routers to know all of the routes.\n\n22\n00:01:26,690 --> 00:01:27,200\nRight?\n\n23\n00:01:27,200 --> 00:01:28,140\nIt's just, it makes sense.\n\n24\n00:01:28,140 --> 00:01:30,710\nIf you've got a small network,\nwhy bother filtering that out.\n\n25\n00:01:30,710 --> 00:01:34,490\nYou're not gonna have a very large\nrouting table get as much as you can.\n\n26\n00:01:34,490 --> 00:01:38,030\nAnd when you have a fully converged\nnetwork, all the routers have that.\n\n27\n00:01:38,030 --> 00:01:41,220\nEvery router has the same exact\nroutes in the routing table.\n\n28\n00:01:41,220 --> 00:01:42,960\nAnd if you're running RIP.\n\n29\n00:01:42,960 --> 00:01:43,690\nOr OSPF.\n\n30\n00:01:43,690 --> 00:01:44,630\nOr EIGRP.\n\n31\n00:01:44,630 --> 00:01:48,920\nThese are very simple environments,\nlike single area OSPF.\n\n32\n00:01:48,920 --> 00:01:53,800\nOr very simple EIGRP probably\nwith no summarization.\n\n33\n00:01:53,800 --> 00:01:54,760\nOr anything crazy like that,\n\n34\n00:01:54,760 --> 00:01:58,220\njust straight up,\nrunning the base protocols, that's great.\n\n35\n00:01:58,220 --> 00:01:59,780\nFor small and medium businesses.\n\n36\n00:01:59,780 --> 00:02:02,330\nAnd stay that way as long as you can,\nall right.\n\n37\n00:02:02,330 --> 00:02:06,350\nBut eventually your network grows\nto a point where your needs become\n\n38\n00:02:06,350 --> 00:02:10,730\ncomplex enough that just learning\nthat routes isn't enough.\n\n39\n00:02:10,730 --> 00:02:12,990\nYou'll have to manipulate those routes.\n\n40\n00:02:12,990 --> 00:02:13,780\nOr more particularly,\n\n41\n00:02:13,780 --> 00:02:17,880\nmanipulate your routing table to\nfilter filter out certain routes.\n\n42\n00:02:17,880 --> 00:02:21,620\nThere's any number of reasons of\nwhy you might need to do this.\n\n43\n00:02:21,620 --> 00:02:26,250\nBut in this objective, which I guess\nI should mention is 3.9 configure and\n\n44\n00:02:26,250 --> 00:02:29,510\nverify filtering with any protocol.\n\n45\n00:02:29,510 --> 00:02:31,840\nThat's what this objective\nis talking about is.\n\n46\n00:02:31,840 --> 00:02:35,600\nYour routing protocol with a routing\ntable has routes in it that\n\n47\n00:02:35,600 --> 00:02:37,190\naren't to your liking.\n\n48\n00:02:37,190 --> 00:02:39,470\nYou need a way to be able\nto filter them out and\n\n49\n00:02:39,470 --> 00:02:41,820\nCisco gives us a couple of tools for that.\n\n50\n00:02:41,820 --> 00:02:42,410\n>> Yeah.\n\n51\n00:02:42,410 --> 00:02:45,690\nWe start taking a look at the ability\nto be able to filter those routes so\n\n52\n00:02:45,690 --> 00:02:48,230\nthey don't enter into a routing\ntable somewhere else.\n\n53\n00:02:48,230 --> 00:02:52,920\nWe're normally taking a look at two very\nspecific ones that primarily are used.\n\n54\n00:02:52,920 --> 00:02:57,770\nIt's what we call using distribute\nlists as well as IP prefix lists too.\n\n55\n00:02:57,770 --> 00:03:01,310\nNow that's not the end of it, there's\nactually other things that we can also use\n\n56\n00:03:01,310 --> 00:03:03,060\nincluding administrative distance.\n\n57\n00:03:03,060 --> 00:03:06,010\nA little bit later on,\nwe'll also cover route maps as well.\n\n58\n00:03:06,010 --> 00:03:10,280\nAnd we have one more, we'll start\nmodifying the actual route metric itself.\n\n59\n00:03:10,280 --> 00:03:13,350\nBut what we're gonna really take\na look at today, a bit more in-depth,\n\n60\n00:03:13,350 --> 00:03:17,300\nis gonna be the distribute list and\nthe IP prefix-lists.\n\n61\n00:03:17,300 --> 00:03:19,610\n>> And now the real challenge here, not so\n\n62\n00:03:19,610 --> 00:03:21,440\nmuch on the exam because\nthe exam's pretty straightforward.\n\n63\n00:03:21,440 --> 00:03:24,000\nBut in real-life land\n>> When you're looking at your routing\n\n64\n00:03:24,000 --> 00:03:28,250\ntable, I really wish I could change\nwhich route was preferred here.\n\n65\n00:03:28,250 --> 00:03:30,258\nOr I wish I could hide this\nroute from the routing table.\n\n66\n00:03:30,258 --> 00:03:36,100\nYou've got 5 different options\nto be able to achieve that goal.\n\n67\n00:03:36,100 --> 00:03:37,610\nHow do you pick the right one?\n\n68\n00:03:37,610 --> 00:03:41,270\nWhat makes it even harder is that\noften times more than one will work.\n\n69\n00:03:41,270 --> 00:03:43,790\nSo it's not so\nmuch a matter of picking the right one.\n\n70\n00:03:43,790 --> 00:03:49,040\nIt's picking the one that works\nthe best in your particular example.\n\n71\n00:03:49,040 --> 00:03:51,800\nThat makes this really challenging,\nbecause everybody implements or\n\n72\n00:03:51,800 --> 00:03:52,866\nhas different needs.\n\n73\n00:03:52,866 --> 00:03:55,810\nAnd you've got to pick the right\none here to fit that need.\n\n74\n00:03:55,810 --> 00:03:57,450\nSo that's a big challenge.\n\n75\n00:03:57,450 --> 00:04:00,510\nWell, we have a whole episode on route\nmaps that's gonna come down the road.\n\n76\n00:04:00,510 --> 00:04:03,340\nBecause we're gonna see route maps\nthroughout the whole rest of the series.\n\n77\n00:04:03,340 --> 00:04:04,930\nIt's a very important technology.\n\n78\n00:04:04,930 --> 00:04:07,520\nSo we'll put that one on the side for now.\n\n79\n00:04:07,520 --> 00:04:09,490\nAnd focus on distribute lists.\n\n80\n00:04:09,490 --> 00:04:10,940\nAnd prefix lists.\n\n81\n00:04:10,940 --> 00:04:14,450\nThese two are technologies\nspecifically designed for filtering.\n\n82\n00:04:14,450 --> 00:04:17,610\nIn other words,\nremoving things from your routing table or\n\n83\n00:04:17,610 --> 00:04:20,640\nremoving things from other\npeople's routing tables.\n\n84\n00:04:20,640 --> 00:04:22,510\nSome of the other technologies\nthat Ronnie mentioned,\n\n85\n00:04:22,510 --> 00:04:25,900\nlike administrative distance,\npath metrics.\n\n86\n00:04:25,900 --> 00:04:30,220\nWhen start manipulating those, we can\npull a route from the routing table.\n\n87\n00:04:30,220 --> 00:04:33,220\nOne of the easiest ways to pull\na route from the routing table is to\n\n88\n00:04:33,220 --> 00:04:35,260\nbump its admin distance to 255.\n\n89\n00:04:35,260 --> 00:04:39,780\nOr to bump its metric to whatever\nis insanely high for that protocol.\n\n90\n00:04:39,780 --> 00:04:43,180\nIf you have a RIP route\nthat has a metric of 16.\n\n91\n00:04:43,180 --> 00:04:44,080\nWhat happens Ronnie?\n\n92\n00:04:44,080 --> 00:04:46,160\n>> Yeah.\nIf you have a metric of 16 that\n\n93\n00:04:46,160 --> 00:04:47,560\ndestination is unreachable.\n\n94\n00:04:47,560 --> 00:04:50,690\nAnd so RIP says hey,\nyou wanna put that in the routing table.\n\n95\n00:04:50,690 --> 00:04:53,710\nSo that will actually bump it out\nof the actual routing table for us.\n\n96\n00:04:53,710 --> 00:04:54,640\n>> Yeah.\nSo\n\n97\n00:04:54,640 --> 00:04:56,910\nthat's an example of how you can\nuse those other technologies.\n\n98\n00:04:56,910 --> 00:04:59,150\nBut those other ones do more, too.\n\n99\n00:04:59,150 --> 00:05:02,640\nInstead of going straight to 16 to pull\nthe route out of the routing table\n\n100\n00:05:02,640 --> 00:05:03,760\nI might go to 14 or 15.\n\n101\n00:05:03,760 --> 00:05:08,750\nSo the route still exists but\nanother route gets preferred, right?\n\n102\n00:05:08,750 --> 00:05:12,280\nThat's what you want when you do\nthings like adjusting your metrics.\n\n103\n00:05:12,280 --> 00:05:14,220\nAnd adjusting your admin distances.\n\n104\n00:05:14,220 --> 00:05:17,690\nIf you were to actually remove the route.\n\n105\n00:05:17,690 --> 00:05:19,360\nThen you don't have to mess\naround with the metric.\n\n106\n00:05:19,360 --> 00:05:22,650\nYou can jump right in with\na distribute list or a prefix list and\n\n107\n00:05:22,650 --> 00:05:24,388\nknock them out, all right.\n\n108\n00:05:24,388 --> 00:05:26,170\nSo let's start with the distribute list.\n\n109\n00:05:26,170 --> 00:05:29,840\nNow, I guess, before I even dive\ninto that in case you're wondering,\n\n110\n00:05:29,840 --> 00:05:33,190\nI'll do that thing where you ruin the end\nof the movie at the very beginning.\n\n111\n00:05:33,190 --> 00:05:38,415\nAt the end of the day, the rule of thumb\nis use a prefix-list whenever possible.\n\n112\n00:05:38,415 --> 00:05:41,240\nPrefix-lists are the better solution,\nall right?\n\n113\n00:05:41,240 --> 00:05:42,890\nBut I'm gonna start with distribute lists.\n\n114\n00:05:42,890 --> 00:05:44,584\nAnd you might ask\n>> [LAUGH]\n\n115\n00:05:44,584 --> 00:05:45,560\n>> Yourself, well,\n\n116\n00:05:45,560 --> 00:05:47,320\nI wanna use prefix-lists all the time.\n\n117\n00:05:47,320 --> 00:05:48,800\nWhy would I use distribute list?\n\n118\n00:05:48,800 --> 00:05:52,830\nWell, there's sometimes where distribute\nlist will work and a prefix-list won't.\n\n119\n00:05:52,830 --> 00:05:53,910\nAnd vice versa.\n\n120\n00:05:53,910 --> 00:05:56,580\nAnd so you have to make a decision there.\n\n121\n00:05:56,580 --> 00:05:59,650\nAnd a lot of times when\nyou apply a prefix-list,\n\n122\n00:05:59,650 --> 00:06:02,600\nit's actually being applied\nas part of a distribute list.\n\n123\n00:06:02,600 --> 00:06:05,130\nThat's where it really\nstarts to get confusing.\n\n124\n00:06:05,130 --> 00:06:07,820\nI find that for students, for\npeople who are just getting\n\n125\n00:06:07,820 --> 00:06:10,550\nstarted out with Cisco equipment,\nthis is one of the more confusing\n\n126\n00:06:10,550 --> 00:06:14,320\nusing areas to work with because\nthe technologies overlap so much.\n\n127\n00:06:14,320 --> 00:06:14,920\n>> Yeah.\n\n128\n00:06:14,920 --> 00:06:18,960\nWith the technology overlapping so much,\nthe other thing about distribute lists,\n\n129\n00:06:18,960 --> 00:06:20,070\nwhich is a good way to begin.\n\n130\n00:06:20,070 --> 00:06:24,290\nBecause it's already building on something\nthat we're familiar with in CCNA,\n\n131\n00:06:24,290 --> 00:06:28,260\nwhich is really\nthe implementation of ACLs too.\n\n132\n00:06:28,260 --> 00:06:30,230\nWe're really taking some\nof that technology and\n\n133\n00:06:30,230 --> 00:06:32,550\nsome of that stuff that\nwe learned in ACLs.\n\n134\n00:06:32,550 --> 00:06:34,240\nAnd using that in our distribute list.\n\n135\n00:06:34,240 --> 00:06:38,210\nSo it's a great place for\nus to make that jump into this new topic.\n\n136\n00:06:38,210 --> 00:06:40,510\n>> All right.\nNow when we apply an ACF,\n\n137\n00:06:40,510 --> 00:06:43,910\nan Access Control Fix,\nthink about it in normal communications.\n\n138\n00:06:43,910 --> 00:06:49,460\nYou're blocking or permitting a host\nfrom getting to a destination.\n\n139\n00:06:49,460 --> 00:06:51,780\nAnd that's basically what\nan Access Control List does.\n\n140\n00:06:51,780 --> 00:06:56,580\nWell, a distribute list that\nuses an ACL does the same thing.\n\n141\n00:06:56,580 --> 00:07:00,510\nIt uses an access list but\ninstead of a host getting to another host.\n\n142\n00:07:00,510 --> 00:07:01,640\nOr a host getting to a network.\n\n143\n00:07:01,640 --> 00:07:07,270\nOr whatever, here it's controlling\na route getting into the routing table.\n\n144\n00:07:07,270 --> 00:07:09,660\nNow, let me clarify that\nstatement a little more.\n\n145\n00:07:09,660 --> 00:07:11,310\nWhen we apply a distribute list or\n\n146\n00:07:11,310 --> 00:07:14,940\na prefix-list,\nwe also have to assign a direction to it.\n\n147\n00:07:14,940 --> 00:07:15,940\nJust like in ACL.\n\n148\n00:07:15,940 --> 00:07:18,040\nIncoming or outgoing.\n\n149\n00:07:18,040 --> 00:07:21,060\nIf it's an incoming distribute list,\n\n150\n00:07:21,060 --> 00:07:26,570\nwhat we're doing is we're filtering out\nroutes from getting our routing table.\n\n151\n00:07:26,570 --> 00:07:29,280\nIf it's an outgoing distribute list,\n\n152\n00:07:29,280 --> 00:07:32,480\nwe're filtering routes that\nwe advertise to other people.\n\n153\n00:07:32,480 --> 00:07:34,150\nThe route will still be\nin our routing table.\n\n154\n00:07:34,150 --> 00:07:35,440\nIt already came in.\n\n155\n00:07:35,440 --> 00:07:38,310\nIt's what we advertise\nout to other people.\n\n156\n00:07:38,310 --> 00:07:42,890\nSo just like ACLs, direction is important\nwith distribute and prefix-list.\n\n157\n00:07:42,890 --> 00:07:45,040\nYou have in and out.\n\n158\n00:07:45,040 --> 00:07:46,700\nSo the way I always remember it.\n\n159\n00:07:46,700 --> 00:07:50,290\nIs that, in is for\nfiltering learned routes.\n\n160\n00:07:50,290 --> 00:07:51,276\nThe routes that I'm learning.\n\n161\n00:07:51,276 --> 00:07:55,095\nThen out is for\nfiltering advertised routes.\n\n162\n00:07:55,095 --> 00:07:57,394\nThe routes that I'm telling\nother people about.\n\n163\n00:07:57,394 --> 00:08:02,763\nNow, we do have to be really careful\nwith this, because there are some\n\n164\n00:08:02,763 --> 00:08:07,770\nprotocols where filtering your\noutbound routes doesn't work.\n\n165\n00:08:07,770 --> 00:08:11,001\nAnd a great example of that is OSPF.\n\n166\n00:08:11,001 --> 00:08:15,625\nAll right, with OSPF, I can send\nan inbound distribute list to filter\n\n167\n00:08:15,625 --> 00:08:18,603\nthe routes that I accept from my\nother routers throughout there.\n\n168\n00:08:18,603 --> 00:08:20,795\nSo, I could say I do not wanna\nlearn this particular network,\n\n169\n00:08:20,795 --> 00:08:23,335\ndon't put it in my routing table and\nI'll keep it out of my routing table.\n\n170\n00:08:24,355 --> 00:08:27,365\nBut, if I do an outbound access list and\n\n171\n00:08:27,365 --> 00:08:29,575\nI say I am not gonna\nadvertise this one network.\n\n172\n00:08:29,575 --> 00:08:30,619\nI'm not gonna tell anyone about it.\n\n173\n00:08:31,720 --> 00:08:34,787\nYou'll often times find that\nthe other people still learn it, and\n\n174\n00:08:34,787 --> 00:08:36,450\nhow does that happen.\n\n175\n00:08:36,450 --> 00:08:41,240\nWell remember in OSPF, you're not\nthe only router other people talk to.\n\n176\n00:08:41,240 --> 00:08:45,430\nIf you have five routers in one area,\nthey all talk to each other.\n\n177\n00:08:45,430 --> 00:08:49,445\nSo if one router hides a route, the other\nroute is just learn it from somebody else.\n\n178\n00:08:49,445 --> 00:08:54,180\n[LAUGH]\nIt’s like trying to\n\n179\n00:08:54,180 --> 00:08:57,509\nteach your kid not to swear by\nnot swearing around them, right?\n\n180\n00:08:57,509 --> 00:08:58,110\n>> [LAUGH]\n>> So yeah,\n\n181\n00:08:58,110 --> 00:08:59,540\nyou’re not saying swear\nwords around your kid,\n\n182\n00:08:59,540 --> 00:09:01,160\nbut\n>> Everybody else is.\n\n183\n00:09:01,160 --> 00:09:02,650\n>> They’ll probably\nhear it somewhere else.\n\n184\n00:09:02,650 --> 00:09:05,270\nYeah, so that’s how it is with OSPF.\n\n185\n00:09:05,270 --> 00:09:07,140\nEIGRP and RIP, those are distance vector.\n\n186\n00:09:07,140 --> 00:09:08,200\nThey’re not like that.\n\n187\n00:09:08,200 --> 00:09:10,020\nYou only talk to your neighbor.\n\n188\n00:09:10,020 --> 00:09:13,280\nAnd so if you don't advertise it out, and\nthat other router doesn't have another\n\n189\n00:09:13,280 --> 00:09:14,700\nneighbor to learn from,\nthey don't learn it.\n\n190\n00:09:14,700 --> 00:09:16,070\nAnd it's very effective.\n\n191\n00:09:16,070 --> 00:09:19,010\nSo, outbound distribute lists and\n\n192\n00:09:19,010 --> 00:09:22,310\noutbound prefix lists can be\na little flaky sometimes.\n\n193\n00:09:22,310 --> 00:09:25,290\nAnd if you don't remember that,\noh, OSPF is special, right?\n\n194\n00:09:25,290 --> 00:09:28,150\nIf you don't remember that,\nthen the behavior gets really wired.\n\n195\n00:09:28,150 --> 00:09:31,060\nThe behavior under RIP and\nEIGRP are one way, and\n\n196\n00:09:31,060 --> 00:09:33,020\nthe behavior under OSPF is another.\n\n197\n00:09:33,020 --> 00:09:34,860\nAnd then I didn't even mention BGP, right?\n\n198\n00:09:34,860 --> 00:09:36,990\nNow BGP is fully neighbor base and\n\n199\n00:09:36,990 --> 00:09:41,570\nso you have the same kind of success\nthere as you do with EIGRP and RIP.\n\n200\n00:09:41,570 --> 00:09:42,780\nSo really OSPF is the odd man out.\n\n201\n00:09:44,200 --> 00:09:46,150\nBut yeah, so just keep that in mind.\n\n202\n00:09:46,150 --> 00:09:49,510\nI know I’ve bumped into that\nkind of problem before where\n\n203\n00:09:49,510 --> 00:09:52,940\nI’m applying an outbound OSPF distribute\nlist or whatever, and I’m like,\n\n204\n00:09:52,940 --> 00:09:54,080\nwhy isn’t this working?\n\n205\n00:09:54,080 --> 00:09:54,590\nOh, that’s right.\n\n206\n00:09:54,590 --> 00:09:55,790\nI can’t do it this way.\n\n207\n00:09:55,790 --> 00:09:57,620\nAnd then you gotta choose\none of the other methods.\n\n208\n00:09:58,970 --> 00:10:03,130\nAll right, so let’s take a look at how we\nget one of these things configured, right?\n\n209\n00:10:03,130 --> 00:10:07,640\nThe configuration for a distribute\nlist is really pretty straightforward.\n\n210\n00:10:07,640 --> 00:10:10,120\nIt starts with an access list.\n\n211\n00:10:10,120 --> 00:10:12,370\nWe create an access control list and\n\n212\n00:10:12,370 --> 00:10:15,410\nwe specify the network that\nwe want to permit or deny.\n\n213\n00:10:15,410 --> 00:10:19,130\nAnd we can do more than one\nline to get that put in place.\n\n214\n00:10:19,130 --> 00:10:24,900\nSo let me show you guys an example and\nI'm using a different program today and\n\n215\n00:10:24,900 --> 00:10:28,990\nI don't know if it'll let me zoom in,\nthat might be too much to ask.\n\n216\n00:10:28,990 --> 00:10:31,800\nBut here, let me show you guys an example,\nlet's pull up my computer for\n\n217\n00:10:31,800 --> 00:10:36,140\na second, and these are my little show\nnotes that I post with the episode so\n\n218\n00:10:36,140 --> 00:10:38,090\nyou guys will have these on the website.\n\n219\n00:10:38,090 --> 00:10:41,180\nBut here I'm just showing a really\nstraightforward access list.\n\n220\n00:10:41,180 --> 00:10:42,238\nSomething like this, right?\n\n221\n00:10:42,238 --> 00:10:46,740\nAccess-list 100, and\nyou can do a name or a number.\n\n222\n00:10:46,740 --> 00:10:47,494\nIt's pretty flexible.\n\n223\n00:10:47,494 --> 00:10:55,340\nDeny IP host 96.0.2 host 205.160.0.0.\n\n224\n00:10:55,340 --> 00:11:00,250\nWhat we're specifying there is an extended\nACL, that's gonna be either blocking or\n\n225\n00:11:00,250 --> 00:11:02,185\npermitting a certain value.\n\n226\n00:11:02,185 --> 00:11:03,260\nAnd I didn't really mention that.\n\n227\n00:11:03,260 --> 00:11:06,770\nYou have standard ACLs and\nyou have extended ACLs.\n\n228\n00:11:06,770 --> 00:11:09,683\nThe standard ACLs are much simpler, right.\n\n229\n00:11:09,683 --> 00:11:16,430\nLike access-list 1 permit\n192.168.0.0.0.0.0.255, all right.\n\n230\n00:11:16,430 --> 00:11:17,081\nWhat does that mean?\n\n231\n00:11:17,081 --> 00:11:23,103\nWell that means that I'm gonna\nbe permitting the 192.168.0.0/24\n\n232\n00:11:23,103 --> 00:11:26,601\nsubnet to be able to come\ninto my routing table.\n\n233\n00:11:26,601 --> 00:11:31,769\nSo if I learn 192.168.0.0/24,\nit'll make it in the routing table.\n\n234\n00:11:31,769 --> 00:11:37,793\nBut it also allows any child\nsubnets to come in also.\n\n235\n00:11:37,793 --> 00:11:43,251\nSo if I learned 192.168.0.128/25.\n\n236\n00:11:43,251 --> 00:11:48,231\nIt's /25, so it's inside of that /24,\nthis would allow it also.\n\n237\n00:11:48,231 --> 00:11:52,130\nI'm basically just blocking\nout that last octet.\n\n238\n00:11:52,130 --> 00:11:56,596\nAnd I'm saying as long as\nthe first three octets, 192.168.0,\n\n239\n00:11:56,596 --> 00:11:59,490\nas long as those match, let the route in.\n\n240\n00:11:59,490 --> 00:12:01,800\nI don't care what the subnet mask is.\n\n241\n00:12:01,800 --> 00:12:05,280\nA standard ACL,\nwhen used with a distribute list,\n\n242\n00:12:05,280 --> 00:12:07,450\ndoesn't pay attention to the subnet mask.\n\n243\n00:12:07,450 --> 00:12:10,240\nIt's just matching on the bits.\n\n244\n00:12:10,240 --> 00:12:11,450\nAnd that's a little bit of a problem.\n\n245\n00:12:11,450 --> 00:12:16,370\nAnd this is one where we'll see we get a\nlot better behavior out of a prefix list.\n\n246\n00:12:16,370 --> 00:12:20,530\nBut with a distribute list, if we're\nusing a standard ACL to power this,\n\n247\n00:12:20,530 --> 00:12:25,600\nwe identify the route with a wildcard mask\nlike this, and it's not terribly precise.\n\n248\n00:12:27,240 --> 00:12:31,300\nIf we wanna be more precise,\nwe can use an extended ACL.\n\n249\n00:12:31,300 --> 00:12:37,200\nAnd with an extended ACL,\nthings get a little bit weird, all right?\n\n250\n00:12:37,200 --> 00:12:39,480\nSo, let's table that for right now.\n\n251\n00:12:39,480 --> 00:12:41,020\nWe'll get into the extended\nACL in a minute because\n\n252\n00:12:41,020 --> 00:12:45,340\nextended ACLs behave differently for IGPs\nand EGPs, so we'll see that in a minute.\n\n253\n00:12:45,340 --> 00:12:49,620\nBut, starting with a standard ACL, this\nguy right here, let's see it in action.\n\n254\n00:12:49,620 --> 00:12:51,670\nYou basically create the ACL.\n\n255\n00:12:51,670 --> 00:12:54,210\nAnd then you go into\nyour routing protocol and\n\n256\n00:12:54,210 --> 00:12:57,640\nyou attach that ACL to your\nrouting protocol, all right?\n\n257\n00:12:57,640 --> 00:13:01,220\nSo let’s say, for example,\nthat my routing was EIGRP.\n\n258\n00:13:01,220 --> 00:13:03,860\nLet me jump over to my lab here,\nwe’ll see.\n\n259\n00:13:03,860 --> 00:13:06,540\nHere we go.\nAnd I’m just gonna whip up EIGRP\n\n260\n00:13:06,540 --> 00:13:07,620\nbetween two routers.\n\n261\n00:13:07,620 --> 00:13:10,010\nThis is my headquarter's\nrouter right here, and\n\n262\n00:13:10,010 --> 00:13:14,180\nit’s it's got just a handful\nof interfaces configured.\n\n263\n00:13:14,180 --> 00:13:17,110\nIt's got the 192.168.0 network, right?\n\n264\n00:13:17,110 --> 00:13:22,750\nAnd then its got these other guys,\n172 out of 16, 204, 109, 181 and so on.\n\n265\n00:13:22,750 --> 00:13:30,340\nI have a branch 1, which if I look at it,\nit's got a 172.16.2, and\n\n266\n00:13:30,340 --> 00:13:36,340\nit's got a 192.168.0, and that's it, so it\nis connected to the headquarters router.\n\n267\n00:13:36,340 --> 00:13:41,048\nAnd I'm just gonna whip up\nEIGRP really quick on these,\n\n268\n00:13:41,048 --> 00:13:44,965\nso I'll do router eigrp 1 No auto-summary.\n\n269\n00:13:44,965 --> 00:13:51,481\nWe'll do a little network 0.0.0.0, so\nthat it advertises all the networks and\n\n270\n00:13:51,481 --> 00:13:55,866\nthen I'll do the same thing\non vr1 it's a little router.\n\n271\n00:13:55,866 --> 00:14:01,113\nSo, router eigrp 1 no auto and\nnetwork 0.0.0.0.\n\n272\n00:14:01,113 --> 00:14:01,787\nAll right.\n\n273\n00:14:01,787 --> 00:14:04,170\nSo let me give those guys a second\nwhile they build their adjacency.\n\n274\n00:14:04,170 --> 00:14:05,480\nThere we go.\n\n275\n00:14:05,480 --> 00:14:10,010\nAnd on branch 1,\nif I do a show ip route eigrp,\n\n276\n00:14:11,130 --> 00:14:16,910\nI can see that I’m now learning routes\nfrom my headquarters router, right?\n\n277\n00:14:16,910 --> 00:14:20,680\nSo like the 172.16.0 network,\nI’m not directly connected to that,\n\n278\n00:14:20,680 --> 00:14:24,970\nbut the headquarters is,\nI’ve filtered it out, and now here it is.\n\n279\n00:14:26,430 --> 00:14:31,330\nSo if I want to remove that\nfrom my routing table well,\n\n280\n00:14:32,450 --> 00:14:34,120\nthe other side is telling me about it.\n\n281\n00:14:35,310 --> 00:14:37,050\nSo I could just call them and\n\n282\n00:14:37,050 --> 00:14:39,970\nsay could you not advertise that to me and\nthen they'll fix the problem.\n\n283\n00:14:39,970 --> 00:14:40,560\nRight?\n\n284\n00:14:40,560 --> 00:14:42,610\nBut what if that other\nroute is like the ISP and\n\n285\n00:14:42,610 --> 00:14:44,690\nI don't have any control\nover that other router?\n\n286\n00:14:44,690 --> 00:14:46,370\nSo the headquarter's router,\nI don't have control over that.\n\n287\n00:14:46,370 --> 00:14:48,160\nI just have control over the branch.\n\n288\n00:14:48,160 --> 00:14:54,000\nThen what I need to do is stop that\nroute from coming in to my network.\n\n289\n00:14:54,000 --> 00:14:57,560\nI need to cut that thing out of there,\nso I don't get it in my network.\n\n290\n00:14:57,560 --> 00:15:00,930\nSo I can do a distribute list\nto filter the incoming route.\n\n291\n00:15:02,220 --> 00:15:04,090\nAnd I'll start by creating that ACL.\n\n292\n00:15:05,410 --> 00:15:08,360\nLet me just make this a little bit\nbigger so it will be easier to see.\n\n293\n00:15:09,950 --> 00:15:13,120\nSo I'll start off just by\nsaying access dash list.\n\n294\n00:15:13,120 --> 00:15:15,500\nAgain, you can do a named ACL if you want.\n\n295\n00:15:15,500 --> 00:15:16,870\nI'm just going real simple here.\n\n296\n00:15:16,870 --> 00:15:19,570\nSo I'll do access-list 1.\n\n297\n00:15:19,570 --> 00:15:23,280\nAnd I need to deny,\nbecause I want to block that 172.16.\n\n298\n00:15:23,280 --> 00:15:26,950\nSo I'm gonna block that one out.\n\n299\n00:15:26,950 --> 00:15:29,400\nHere's where it gets\na little tricky because\n\n300\n00:15:29,400 --> 00:15:33,110\nI need to put a wild card\nmask in the match on this.\n\n301\n00:15:33,110 --> 00:15:36,788\nAnd this one, if you look, it's actually\na /23 right here that's being blocked.\n\n302\n00:15:36,788 --> 00:15:41,800\nI could go really big and\nblock the whole /16 if I wanted,\n\n303\n00:15:41,800 --> 00:15:48,216\nbut I just wanna get that /23 and\nso I'll have to do 0.0.1.255,\n\n304\n00:15:48,216 --> 00:15:52,950\nso that's that /23 represented\nas a wildcard mask.\n\n305\n00:15:52,950 --> 00:15:54,192\nSo I'll go ahead and knock that out.\n\n306\n00:15:54,192 --> 00:15:57,616\nAnd if I stop here I'm going\nto have some problems.\n\n307\n00:15:57,616 --> 00:16:00,500\nWhat's the hidden line on an ACL?\n\n308\n00:16:00,500 --> 00:16:01,510\n>> Yeah.\n\n309\n00:16:01,510 --> 00:16:05,300\nRemember that there's an implicit deny\nany at the end of a standard ACL.\n\n310\n00:16:05,300 --> 00:16:10,150\nSo if you don't add in the ability\nto permit everything else, and\n\n311\n00:16:10,150 --> 00:16:11,360\nyou apply this now.\n\n312\n00:16:11,360 --> 00:16:13,636\nIt's going to go ahead and\njust deny everything anyway.\n\n313\n00:16:13,636 --> 00:16:15,480\nSo we want to make sure we add that in.\n\n314\n00:16:16,680 --> 00:16:21,360\n>> Yeah.\nSo I'm just going to do a access-list one\n\n315\n00:16:21,360 --> 00:16:22,804\npermit any.\n\n316\n00:16:22,804 --> 00:16:26,976\nSo deny that particular route and\nallow every other route through.\n\n317\n00:16:26,976 --> 00:16:30,790\nNext, I need to attach this\nto my routing protocol.\n\n318\n00:16:30,790 --> 00:16:32,760\nSo I get into router EIGRP one.\n\n319\n00:16:34,430 --> 00:16:39,307\nAnd then from here,\nI just say distribute list.\n\n320\n00:16:39,307 --> 00:16:43,650\nAnd if you look at the syntax,\nhere’s where I can specify a numbered\n\n321\n00:16:43,650 --> 00:16:48,420\nstandard ACL, a numbered extended ACL,\nor a word, if I want.\n\n322\n00:16:48,420 --> 00:16:52,310\nAnd later on prefix that we’ll look at,\nbut we just have a standard ACL.\n\n323\n00:16:52,310 --> 00:16:55,495\nAnd then whether it's in or out.\n\n324\n00:16:55,495 --> 00:16:58,710\nAre my filtering routes\ncoming into my router or\n\n325\n00:16:58,710 --> 00:17:01,800\nare my filtering routes going out\nthat I'm advertising to other people.\n\n326\n00:17:01,800 --> 00:17:02,770\nAnd I'll apply this in.\n\n327\n00:17:03,790 --> 00:17:06,400\nI want to start filtering\nthe routes as they come in.\n\n328\n00:17:06,400 --> 00:17:09,960\nNow, when I run that command, I'm waiting\nany moment now, I'll see a message.\n\n329\n00:17:09,960 --> 00:17:13,190\nEIGRP will see my\nconfiguration has changed and\n\n330\n00:17:13,190 --> 00:17:15,818\nrequest a reset of my adjacency.\n\n331\n00:17:15,818 --> 00:17:17,650\nThere it goes.\n\n332\n00:17:17,650 --> 00:17:19,610\nHave to be a little more\npatient than I normally am.\n\n333\n00:17:19,610 --> 00:17:22,270\nYou can see right here where it\njust tells me neighbor change,\n\n334\n00:17:22,270 --> 00:17:24,523\nit's a re-sync route configuration change.\n\n335\n00:17:26,060 --> 00:17:30,164\nWith EIGRP,\nit notifies you when networks change.\n\n336\n00:17:31,365 --> 00:17:33,635\nIf a network doesn't change,\nit doesn't notify you right away.\n\n337\n00:17:33,635 --> 00:17:35,745\nWell, my network didn't change.\n\n338\n00:17:35,745 --> 00:17:36,665\nI just changed the filter.\n\n339\n00:17:36,665 --> 00:17:38,445\nThe network itself has stayed the same.\n\n340\n00:17:38,445 --> 00:17:41,840\nSo it could take many, many minutes for\nme to actually learn that that change has\n\n341\n00:17:41,840 --> 00:17:44,127\nhappened, and\nfilter from my routing table.\n\n342\n00:17:44,127 --> 00:17:47,187\nThis re-sync makes it happen much faster.\n\n343\n00:17:47,187 --> 00:17:51,877\nThere's other protocols like BGP that\ndon't do it automatically like this, and\n\n344\n00:17:51,877 --> 00:17:52,767\nwe have to force tap them.\n\n345\n00:17:52,767 --> 00:17:55,737\nBut EIGRP, OSPF, RIP,\nthey do it automatically.\n\n346\n00:17:57,217 --> 00:17:58,967\nNow if I take a look at my routing table.\n\n347\n00:18:00,307 --> 00:18:01,217\nWhoops.\n\n348\n00:18:01,217 --> 00:18:02,920\nAll this talk about BGP.\n\n349\n00:18:02,920 --> 00:18:05,185\nI'm just going to pull up\nmy routing table for EIGRP.\n\n350\n00:18:05,185 --> 00:18:10,742\nAnd when I look in there,\nthe 172.16.0.0 network is gone.\n\n351\n00:18:10,742 --> 00:18:14,880\nIt's gone from my routing table,\nI'm not learning it.\n\n352\n00:18:14,880 --> 00:18:17,430\nWell, technically I am learning it.\n\n353\n00:18:17,430 --> 00:18:20,110\nI'm learning it from my EIGRP neighbor.\n\n354\n00:18:20,110 --> 00:18:24,100\nBut then the distribute list is\nkicking in and filtering it out.\n\n355\n00:18:24,100 --> 00:18:26,690\nAnd so it's removing it, and\nnow it's not on my routing table.\n\n356\n00:18:28,090 --> 00:18:30,130\nSo that's the basics of a distribute list.\n\n357\n00:18:30,130 --> 00:18:32,340\nThey're really not that hard to implement.\n\n358\n00:18:32,340 --> 00:18:34,860\nBut I do want to show you guys\nsome more examples of these.\n\n359\n00:18:34,860 --> 00:18:39,250\nJust so you can kinda get an idea of how\nthese things work, and how they function.\n\n360\n00:18:39,250 --> 00:18:41,630\nThis was an inbound ACL.\n\n361\n00:18:43,010 --> 00:18:46,040\nI can do an outbound one also.\n\n362\n00:18:46,040 --> 00:18:49,410\nAnd when I do an outbound, I can come\nin and specify the same basic thing.\n\n363\n00:18:49,410 --> 00:18:52,350\nYou create an ACL,\nyou designate where it's going, and\n\n364\n00:18:52,350 --> 00:18:55,380\nthen you just kind of filter it out.\n\n365\n00:18:55,380 --> 00:19:01,350\nSo well, here,\nlet me jump back over to headquarters.\n\n366\n00:19:01,350 --> 00:19:06,880\nSo headquarters is advertising\na number of different routes.\n\n367\n00:19:06,880 --> 00:19:09,000\nAnd if I look in it's routing table,\n\n368\n00:19:09,000 --> 00:19:12,140\nI'll see it's got this ISP networks\nthat we're advertising out.\n\n369\n00:19:13,500 --> 00:19:17,900\nAnd it may be that one of these\nISP's is my back up link.\n\n370\n00:19:17,900 --> 00:19:19,080\nAnd the other one is my main link.\n\n371\n00:19:19,080 --> 00:19:24,430\nAnd I don't want my branch routers\nto know about that back up link.\n\n372\n00:19:24,430 --> 00:19:27,650\nRight now they do.\nIf I go into my branch one and\n\n373\n00:19:27,650 --> 00:19:29,400\nI look at it's routing table.\n\n374\n00:19:29,400 --> 00:19:33,790\nIt's got my 204 network right there,\nand the 181 network.\n\n375\n00:19:33,790 --> 00:19:37,310\nLet's say that I don't want\nthem to get the 181 network.\n\n376\n00:19:37,310 --> 00:19:40,010\nI don't want them to know about that.\n\n377\n00:19:40,010 --> 00:19:42,220\nThat they'll just use their\ndefault gateway for that one.\n\n378\n00:19:42,220 --> 00:19:43,930\nI don't want them to\nhave a specific route for\n\n379\n00:19:43,930 --> 00:19:46,190\nit because I'm just using it for back up.\n\n380\n00:19:46,190 --> 00:19:47,274\nSo we could filter that out.\n\n381\n00:19:47,274 --> 00:19:50,570\nIf you're going to filter that\nout it's important to know\n\n382\n00:19:50,570 --> 00:19:53,820\nthe subnet mask that's being used on it.\n\n383\n00:19:53,820 --> 00:19:59,270\nAnd so I can see right here that it's\n181.7.0.0/30 that's being broken down,\n\n384\n00:19:59,270 --> 00:20:00,210\nso it's 181.7.31.0/30.\n\n385\n00:20:00,210 --> 00:20:03,800\nThat's what I need to filter out.\n\n386\n00:20:04,800 --> 00:20:06,050\nThe subnet mask is important.\n\n387\n00:20:06,050 --> 00:20:08,820\nIf I get it wrong,\nit might not filter out.\n\n388\n00:20:08,820 --> 00:20:13,105\nIt's one of the most common mistakes\nwith an access list like this.\n\n389\n00:20:13,105 --> 00:20:17,614\nSo, on this router,\nwhat I'm gonna do is I'm gonna\n\n390\n00:20:17,614 --> 00:20:22,229\ncreate an access list just\nlike I did on the other one.\n\n391\n00:20:22,229 --> 00:20:27,130\nAnd I'm going to deny 181.7.31.0.\n\n392\n00:20:27,130 --> 00:20:30,730\nAnd for the wildcard mask, it's a /30.\n\n393\n00:20:30,730 --> 00:20:34,500\nSo if I work that out, all but\nthe last two bits are ones.\n\n394\n00:20:34,500 --> 00:20:36,972\nSo this would actually be .3.\n\n395\n00:20:36,972 --> 00:20:45,750\nAnd then I'll do access-list one\npermit any to permit everything else.\n\n396\n00:20:45,750 --> 00:20:49,878\nAnd then I'll get into router EIGRP1,\nand I'll say distribute.\n\n397\n00:20:49,878 --> 00:20:51,399\nList one out.\n\n398\n00:20:51,399 --> 00:20:55,610\nThis is an outbound distribute list.\n\n399\n00:20:55,610 --> 00:20:59,230\nSo I'm going to filter what I'm\nadvertising to the other routers.\n\n400\n00:21:00,270 --> 00:21:02,920\nIf I wait just a moment\nthis will cause re-sync.\n\n401\n00:21:02,920 --> 00:21:08,490\nNow re-sync is different than actually\nclearing out your EIGRP adjacencies.\n\n402\n00:21:08,490 --> 00:21:11,070\nMy adjacencies don't actually go down.\n\n403\n00:21:11,070 --> 00:21:12,020\nI'm just reaching out to them and\n\n404\n00:21:12,020 --> 00:21:14,410\nsaying hey you guys need to synchronize\nyour routing table right now.\n\n405\n00:21:14,410 --> 00:21:17,370\nSo I don't lose any packets,\nI don't have any crazy outages like that.\n\n406\n00:21:17,370 --> 00:21:21,377\nYou just have to wait for\nthe re-sync to finish.\n\n407\n00:21:21,377 --> 00:21:24,824\nNow that it's done,\nif I look at my routing table,\n\n408\n00:21:24,824 --> 00:21:27,080\nI still have the 181 network.\n\n409\n00:21:27,080 --> 00:21:28,470\nIt's still in my routing table.\n\n410\n00:21:28,470 --> 00:21:29,250\nI haven't filtered that out.\n\n411\n00:21:30,320 --> 00:21:33,240\nBut if I look at the people\nI'm advertising to.\n\n412\n00:21:33,240 --> 00:21:37,468\nIf I jump over to branch one and\nlook at it's routing table,\n\n413\n00:21:37,468 --> 00:21:40,450\nI'll see that 181 is gone.\n\n414\n00:21:41,500 --> 00:21:43,640\nIt's not being filtered\nhere on branch one,\n\n415\n00:21:43,640 --> 00:21:46,320\nI'm filtering it before it\neven gets to branch one.\n\n416\n00:21:46,320 --> 00:21:47,550\nI'm not advertising it out.\n\n417\n00:21:48,900 --> 00:21:53,590\nThat is an inbound and\nan outbound distribute list.\n\n418\n00:21:53,590 --> 00:21:56,470\nThey're the most simple way\nto apply them using an ACL.\n\n419\n00:21:57,470 --> 00:22:00,600\nNow there's a few problems\nwe need to be aware of.\n\n420\n00:22:00,600 --> 00:22:03,619\nThe main problem with doing\nit this way is performance.\n\n421\n00:22:04,855 --> 00:22:07,920\nACL's were designed to filter packets,\nnot routes.\n\n422\n00:22:09,010 --> 00:22:11,000\nSo, when it's a packet,\n\n423\n00:22:11,000 --> 00:22:16,760\nwhen it's a actual frame that comes into\nthe router, it decodes it to layer three.\n\n424\n00:22:16,760 --> 00:22:17,995\nIt's got it as a packet.\n\n425\n00:22:17,995 --> 00:22:19,550\nIt looks at that header.\n\n426\n00:22:19,550 --> 00:22:20,960\nYour ACL is designed to filter that.\n\n427\n00:22:20,960 --> 00:22:23,382\nAnd your router has hardware in there\nthat's designed to deal with that.\n\n428\n00:22:23,382 --> 00:22:25,990\nThe ASIC's, the application\nspecific integrated circuits.\n\n429\n00:22:27,280 --> 00:22:31,330\nWhen you apply it to the routing\ntable though, it's a different story.\n\n430\n00:22:31,330 --> 00:22:33,770\nNow every time you do a look up\nit's got to take your route,\n\n431\n00:22:33,770 --> 00:22:34,938\nit's got to look up your destination.\n\n432\n00:22:34,938 --> 00:22:38,890\nIt's got to run that against this ACL and\ndetermine whether or not that should be\n\n433\n00:22:38,890 --> 00:22:42,000\nable to make it into the routing table or\nnot and filter it out.\n\n434\n00:22:42,000 --> 00:22:44,960\nIt has to do it every time\nan update comes across.\n\n435\n00:22:44,960 --> 00:22:48,170\nSo as these updates come from the other\nrouting protocols it's having to apply it.\n\n436\n00:22:48,170 --> 00:22:50,730\nAnd it's doing it entirely in software.\n\n437\n00:22:50,730 --> 00:22:54,130\nAnd performance wise, it's not ideal.\n\n438\n00:22:54,130 --> 00:22:56,300\nNow, most of your routers\nwill handle it just fine,\n\n439\n00:22:56,300 --> 00:22:58,910\nif you are in a fairly stable network.\n\n440\n00:22:58,910 --> 00:23:00,820\nOne that's not re-converging all the time.\n\n441\n00:23:00,820 --> 00:23:03,060\nIt's not that big of a deal you\ncan use this, it will work fine.\n\n442\n00:23:03,060 --> 00:23:04,920\nAnd you guys just saw that.\n\n443\n00:23:04,920 --> 00:23:07,720\nBut ideally, we'd use prefix lists.\n\n444\n00:23:07,720 --> 00:23:11,470\nPrefix lists were specifically\ndesigned to filter routes\n\n445\n00:23:11,470 --> 00:23:14,970\nversus ACL's which were specifically\ndesigned to filter packets.\n\n446\n00:23:14,970 --> 00:23:16,910\nSo, kind of different story there.\n\n447\n00:23:17,990 --> 00:23:21,750\nThe reason we have both is that\nthe distribute list with the ACL's\n\n448\n00:23:21,750 --> 00:23:22,640\ncame out first.\n\n449\n00:23:22,640 --> 00:23:24,420\nIt was years later that\nprefix lists came out.\n\n450\n00:23:24,420 --> 00:23:26,270\nSo in the beginning this was all you had.\n\n451\n00:23:26,270 --> 00:23:29,740\nAnd so it was using a technology\nintended for something else and\n\n452\n00:23:29,740 --> 00:23:31,760\nkind of forcing it to fit.\n\n453\n00:23:31,760 --> 00:23:34,510\nVersus prefix lists which were\nspecifically designed for that.\n\n454\n00:23:34,510 --> 00:23:36,290\nAnd that's why I say we normally\nwant to use prefix lists.\n\n455\n00:23:38,690 --> 00:23:41,965\nNow in my example both times,\nI used standard ACL's.\n\n456\n00:23:43,390 --> 00:23:48,392\nAnd the problem I stated was that\nwhen I filtered out that network.\n\n457\n00:23:48,392 --> 00:23:51,839\nAnd I filtered it out\nbased on a wild card mask.\n\n458\n00:23:51,839 --> 00:23:56,798\nThe wild card mask catches not only\nthe specific subnet I'm looking for.\n\n459\n00:23:56,798 --> 00:23:59,791\nBut all the child subnets underneath it,\nand\n\n460\n00:23:59,791 --> 00:24:05,224\nthat can be a problem because maybe I want\nto block a specific part of that network,\n\n461\n00:24:05,224 --> 00:24:08,340\nbut not all the children underneath it.\n\n462\n00:24:08,340 --> 00:24:12,640\nOkay, and that's something that's really\ndifficult to achieve with an access list.\n\n463\n00:24:13,820 --> 00:24:15,723\nSo what Cisco did, for\nbetter or for worse,\n\n464\n00:24:15,723 --> 00:24:18,051\nagain this is back in the day\nwhen this was all you had.\n\n465\n00:24:18,051 --> 00:24:22,578\nThey said, you know what, let's take\nextended ACLs and let's just butcher them,\n\n466\n00:24:22,578 --> 00:24:26,600\nand change their syntax to mean\nsomething completely different.\n\n467\n00:24:26,600 --> 00:24:28,270\nAnd that's exactly what they did.\n\n468\n00:24:28,270 --> 00:24:33,290\nThey modified it so that with\nan extended ACL, you normally specify\n\n469\n00:24:33,290 --> 00:24:38,270\nthe source of the traffic first and\nthe destination of the traffic second, so\n\n470\n00:24:38,270 --> 00:24:40,910\nyou can filter based on source and\ndestination.\n\n471\n00:24:40,910 --> 00:24:45,930\nWell they changed it so that the source,\nwhat was at the beginning is\n\n472\n00:24:45,930 --> 00:24:51,480\nnow the subnet and then the destination,\nwhat use to be the destination, what used\n\n473\n00:24:51,480 --> 00:24:56,360\nto be the host you were accessing, is now\nthe subnet mask and that's really bizarre.\n\n474\n00:24:56,360 --> 00:24:59,382\nThen they made it even more complex\nby making if different for BGP.\n\n475\n00:24:59,382 --> 00:25:02,332\nSo let me show you guys all\nmy notes here real quick, so\n\n476\n00:25:02,332 --> 00:25:05,260\nI can give you kind of an example of this.\n\n477\n00:25:05,260 --> 00:25:09,120\nWhen we talk about an interior\ngateway protocol, and IGP.\n\n478\n00:25:09,120 --> 00:25:13,540\nRight, so when we're talking about OSPF,\nEIGRP or RIP,\n\n479\n00:25:13,540 --> 00:25:20,520\nthe extended ACL works where you've got\nthe source followed by the network.\n\n480\n00:25:20,520 --> 00:25:26,470\nRight, the source is actually where\nyou learned the route form, all right?\n\n481\n00:25:26,470 --> 00:25:27,850\nWho taught me this route?\n\n482\n00:25:27,850 --> 00:25:29,820\nDid I learn it from headquarters?\n\n483\n00:25:29,820 --> 00:25:31,720\nOr did I learn it from branch one?\n\n484\n00:25:31,720 --> 00:25:32,660\nWho did I learn it from?\n\n485\n00:25:32,660 --> 00:25:36,395\nAnd then network is the network\nthat you wanna filter out.\n\n486\n00:25:36,395 --> 00:25:38,485\nThe network that you don't wanna\nmake in the routing table.\n\n487\n00:25:38,485 --> 00:25:43,435\nThat's how it works under an IGP, under\nan interior gateway protocol like OSPF,\n\n488\n00:25:43,435 --> 00:25:44,575\nEIGRP and RIP.\n\n489\n00:25:45,795 --> 00:25:51,115\nWith BGP, though, it goes to the example I\nwas giving a moment ago where the source\n\n490\n00:25:51,115 --> 00:25:56,120\nis actually the network, and\nthe destination is the subset mask.\n\n491\n00:25:56,120 --> 00:26:00,520\nThat's a lot different than\nwhat you have with an IGP.\n\n492\n00:26:00,520 --> 00:26:04,400\nSo now you have an extended ACL\nthat's already being bastardized, and\n\n493\n00:26:04,400 --> 00:26:06,530\nthen it's different from IGP to VGP.\n\n494\n00:26:06,530 --> 00:26:09,100\nThat makes it really confusing.\n\n495\n00:26:09,100 --> 00:26:11,640\nAnd for the exam,\nyou really need to memorize it.\n\n496\n00:26:11,640 --> 00:26:14,190\nYou need to memorize which is which so\nyou can keep it straight and\n\n497\n00:26:14,190 --> 00:26:15,070\nwhen to use which.\n\n498\n00:26:15,070 --> 00:26:16,863\nRight?\nIt's an easy trick question for\n\n499\n00:26:16,863 --> 00:26:18,182\nthem to throw on the exam.\n\n500\n00:26:18,182 --> 00:26:21,350\nAll right, but let's see these in action.\n\n501\n00:26:21,350 --> 00:26:21,980\nRight?\n\n502\n00:26:21,980 --> 00:26:26,028\nWe use an extended ACL, and\nI'll stick with EIGRP for my IGP, and\n\n503\n00:26:26,028 --> 00:26:27,287\nwe'll do BGP next.\n\n504\n00:26:27,287 --> 00:26:31,939\nSo over here looking at branch one,\nif I do a show IP route EIGRP,\n\n505\n00:26:31,939 --> 00:26:37,460\nI can see I'm still learning some\nroutes from headquarters, right?\n\n506\n00:26:37,460 --> 00:26:41,320\nSo I'm learning that 204.109 network,\nor, actually you know what,\n\n507\n00:26:41,320 --> 00:26:42,290\nlet's go crazy here.\n\n508\n00:26:42,290 --> 00:26:44,360\nLet's do a real world example.\n\n509\n00:26:44,360 --> 00:26:49,372\nI'm gonna get into my ISPs here and\nI'm just gonna bring them into EIGRP also.\n\n510\n00:26:49,372 --> 00:26:51,810\nWhy not, right?\n\n511\n00:26:51,810 --> 00:26:54,670\nEvery ISP runs EIGRP, right Ronnie?\n\n512\n00:26:54,670 --> 00:26:55,170\n>> Yes.\n\n513\n00:26:56,610 --> 00:26:59,506\n>> All right, so I'm just gonna\nfire up EIGRP on that turkey, and\n\n514\n00:26:59,506 --> 00:27:00,884\nlet me do the same thing here.\n\n515\n00:27:03,797 --> 00:27:07,180\nTurn off auto summary, and\nadvertise all my networks.\n\n516\n00:27:07,180 --> 00:27:08,130\nI'm going crazy.\n\n517\n00:27:08,130 --> 00:27:13,777\nAll right, so my headquarters is\ngonna start learning some networks.\n\n518\n00:27:13,777 --> 00:27:18,150\nMy headquarters has connections\nto two different ISPs.\n\n519\n00:27:18,150 --> 00:27:21,030\nIt's got a connection to ISP one and\nISP two.\n\n520\n00:27:21,030 --> 00:27:23,490\nWhen you have connections\nto more than one ISP,\n\n521\n00:27:23,490 --> 00:27:28,760\nthe odds are, you're gonna learn some of\nthe same routes from both sides, right?\n\n522\n00:27:28,760 --> 00:27:32,617\nSo, I'm gonna start learning duplicate\nroutes, and if they're equal,\n\n523\n00:27:32,617 --> 00:27:35,325\nif they have an equal metric,\nwe'll load balance.\n\n524\n00:27:35,325 --> 00:27:37,055\nBut that may not be what I want.\n\n525\n00:27:37,055 --> 00:27:39,722\nIf I want to have a backup line and\na primary line,\n\n526\n00:27:39,722 --> 00:27:42,973\nthere might be some subnets that\nI wanna go over one ISP, and\n\n527\n00:27:42,973 --> 00:27:47,550\nother subnets I wanna go over the other,\nand I can achieve that by doing filtering.\n\n528\n00:27:47,550 --> 00:27:52,350\nNow, it's not ideal, because if I filter\nout routes from one ISP, let's say it's\n\n529\n00:27:52,350 --> 00:27:57,900\nISP one, and I'm sending those routes to\nISP two, what happens if ISP two fails?\n\n530\n00:27:57,900 --> 00:27:59,130\nWell I'm filtering ISP one, so\n\n531\n00:27:59,130 --> 00:28:01,640\nI don't know that I've got\na backup to use for that subnet.\n\n532\n00:28:01,640 --> 00:28:05,570\nSo there's other things, like route maps,\nthat can actually be a little better for\n\n533\n00:28:05,570 --> 00:28:09,950\nthis, or really modifying the metric is\nprobably what I'd do in real life land.\n\n534\n00:28:09,950 --> 00:28:12,750\nBut let me just show you how this\nworks here as just an example,\n\n535\n00:28:12,750 --> 00:28:15,100\na proof of concept, so\nyou can see the process.\n\n536\n00:28:16,220 --> 00:28:20,843\nAll right, so here on headquarters,\nif I look at my routing table, all right,\n\n537\n00:28:20,843 --> 00:28:22,780\nI'm learning a bunch of routes.\n\n538\n00:28:22,780 --> 00:28:25,340\nRight, like here's all these 116 routes,\n\n539\n00:28:25,340 --> 00:28:27,970\nthat I'm learning from\none of the ISPs on E02.\n\n540\n00:28:27,970 --> 00:28:33,170\nHere's a bunch of 171 routes,\nthat I'm learning on E03.\n\n541\n00:28:33,170 --> 00:28:36,760\nAnd then here's a bunch of 205.160 routes.\n\n542\n00:28:36,760 --> 00:28:38,746\nAnd, look at these.\n\n543\n00:28:38,746 --> 00:28:45,420\nI'm learning some of them on E02,\nand some of them on E03.\n\n544\n00:28:45,420 --> 00:28:48,240\nAnd if I look at where\nI'm learning them from,\n\n545\n00:28:48,240 --> 00:28:50,490\nI can see it's the two different ISPs.\n\n546\n00:28:50,490 --> 00:28:54,790\nSo I'm getting a mix right there of those\nnetworks, and I might say to myself,\n\n547\n00:28:54,790 --> 00:28:55,651\nyou know what?\n\n548\n00:28:55,651 --> 00:28:56,767\nI don't want that.\n\n549\n00:28:56,767 --> 00:29:04,490\nI want all of my 205.160 traffic to go\nthrough one of the ISPs and not the other.\n\n550\n00:29:04,490 --> 00:29:11,688\nSo I might choose to use a distribute\nlist to filter out 205.160 networks,\n\n551\n00:29:11,688 --> 00:29:15,880\nthat I learned from one specific host,\nright?\n\n552\n00:29:15,880 --> 00:29:18,350\nFrom this ISP, for example, all right?\n\n553\n00:29:18,350 --> 00:29:19,900\nSo, let's say I want to do that.\n\n554\n00:29:19,900 --> 00:29:23,460\nI'm gonna filter off all the ones\ncoming from 181.7.31.1, that guy, so\n\n555\n00:29:23,460 --> 00:29:26,680\nI don't want to get his stuff.\n\n556\n00:29:27,790 --> 00:29:30,840\nSo on headquarters I'll just\njump into my configuration, and\n\n557\n00:29:30,840 --> 00:29:31,890\nwe'll create an access list.\n\n558\n00:29:31,890 --> 00:29:37,015\nNow, I need an extended access list this\ntime because I want to specify that host,\n\n559\n00:29:37,015 --> 00:29:38,743\nand so I'm gonna say deny.\n\n560\n00:29:38,743 --> 00:29:40,468\nAnd you have to say IP for\n\n561\n00:29:40,468 --> 00:29:45,110\nthe protocol cuz it's in\nthe extended access list syntax.\n\n562\n00:29:45,110 --> 00:29:46,511\nIt doesn't really have any\nbearing here though, right?\n\n563\n00:29:46,511 --> 00:29:48,960\nWe're not talking about a true protocol.\n\n564\n00:29:48,960 --> 00:29:50,420\nWe're talking about routes.\n\n565\n00:29:51,440 --> 00:29:55,600\nAnd now I'm specifying\nwho I learned it from.\n\n566\n00:29:55,600 --> 00:30:02,774\nSo I'm gonna say I'm filtering\nout routes from host 181.7.31.1,\n\n567\n00:30:02,774 --> 00:30:07,134\nright, and\nthen what it is I want to filter out.\n\n568\n00:30:07,134 --> 00:30:11,863\nAnd I'm gonna filter out 205.160.0.0 and\n\n569\n00:30:11,863 --> 00:30:16,702\nI'm gonna use a nice big\nslash 16 wildcard mask here.\n\n570\n00:30:16,702 --> 00:30:21,653\nSo any route that I learn\nfrom 181.7.31.1 that starts\n\n571\n00:30:21,653 --> 00:30:26,108\nwith 205.160, I'm gonna trim that out.\n\n572\n00:30:26,108 --> 00:30:30,660\nOkay, and then I'm going to permit\n\n573\n00:30:31,780 --> 00:30:35,900\neverything else, right,\nif I can spell this right.\n\n574\n00:30:35,900 --> 00:30:38,370\nSo I'm gonna permit everything else\n\n575\n00:30:38,370 --> 00:30:40,720\nwith the old access dash list\n101 permit IP any, right?\n\n576\n00:30:42,040 --> 00:30:47,031\nSo this extended access list, it's really\nweird, right, it's who we learn the route\n\n577\n00:30:47,031 --> 00:30:51,159\nfrom, followed by the route, or\nroutes in my case, that I wanna block.\n\n578\n00:30:51,159 --> 00:30:56,752\nRight, and so\nnow I can go into router EIGRP one,\n\n579\n00:30:56,752 --> 00:31:02,346\nand I can say distribute list 101 in,\nright,\n\n580\n00:31:02,346 --> 00:31:10,130\nand that's gonna start applying\nto those routes as they come in.\n\n581\n00:31:10,130 --> 00:31:12,700\nAnd I just did it this way, right, but\n\n582\n00:31:12,700 --> 00:31:16,990\nif you do a question mark after in, you'll\nsee where you can specify a particular\n\n583\n00:31:16,990 --> 00:31:21,460\ninterface because I might not want to\nfilter it all throughout my router.\n\n584\n00:31:21,460 --> 00:31:24,120\nI might want just want to filter\non one particular interface.\n\n585\n00:31:24,120 --> 00:31:27,440\nSo I could have extended that and\nsaid like E zero, what was it on?\n\n586\n00:31:27,440 --> 00:31:29,308\nE zero three?\nE zero three, so,\n\n587\n00:31:29,308 --> 00:31:31,974\nI could extend it there and that way,\n\n588\n00:31:31,974 --> 00:31:37,886\nthe distribute list wouldn't apply to\nroutes I was learning on E zero two.\n\n589\n00:31:37,886 --> 00:31:41,415\nWell, E zero two runs the other ISP,\nso there's really no need for\n\n590\n00:31:41,415 --> 00:31:45,071\nme to filter this, so I get better\nperformance out of it by specifying\n\n591\n00:31:45,071 --> 00:31:46,976\na particular interface like this.\n\n592\n00:31:46,976 --> 00:31:49,998\nRight, that's gonna help\nthe performance on my system and\n\n593\n00:31:49,998 --> 00:31:52,250\nmake it run a little more efficiently.\n\n594\n00:31:52,250 --> 00:31:54,292\nAny little thing like\nthat that you can do,\n\n595\n00:31:54,292 --> 00:31:56,350\nimproves the performance of your router.\n\n596\n00:31:56,350 --> 00:31:59,612\nAnd if I take a look at\nmy EIGRP configuration.\n\n597\n00:31:59,612 --> 00:32:01,377\nI've got my resyncs going\non in the background here.\n\n598\n00:32:01,377 --> 00:32:05,556\nNotice how both of those commands stayed,\nright?\n\n599\n00:32:05,556 --> 00:32:10,009\nSo when you specify an interface command\nlike that it doesn't override the base\n\n600\n00:32:10,009 --> 00:32:10,610\ncommand.\n\n601\n00:32:10,610 --> 00:32:12,910\nSo if I want it just to be on\nan interface I need to go and\n\n602\n00:32:12,910 --> 00:32:14,910\nremove the other more global type command.\n\n603\n00:32:14,910 --> 00:32:18,100\nAll right, but\nlet's see what that did for us.\n\n604\n00:32:18,100 --> 00:32:19,250\nNow I'm gonna scroll back up here.\n\n605\n00:32:19,250 --> 00:32:23,250\nRemember when I looked at\nthe routing table earlier,\n\n606\n00:32:23,250 --> 00:32:27,570\nmy 205.160s I was learning\nthem from two sources, right?\n\n607\n00:32:27,570 --> 00:32:33,340\nWhat I should see is that these\n181s on E0/3, they should be gone,\n\n608\n00:32:33,340 --> 00:32:38,980\nand they should be replaced\nwith E0/2s from 204.109, right?\n\n609\n00:32:38,980 --> 00:32:41,930\nI expect to see them from\na different location.\n\n610\n00:32:41,930 --> 00:32:42,850\nSo let's see what we get.\n\n611\n00:32:42,850 --> 00:32:48,930\nIf I do a show ip route, and\nI'm just gonna look for those 205.160s.\n\n612\n00:32:48,930 --> 00:32:53,500\nAnd sure enough,\nthey're all coming from that first ISP.\n\n613\n00:32:53,500 --> 00:32:54,050\nAll right?\n\n614\n00:32:54,050 --> 00:32:59,200\nSo I've now manipulated my routing table,\nnot by filtering out the route completely,\n\n615\n00:32:59,200 --> 00:33:03,030\nbut by filtering out the route\nfrom a particular source.\n\n616\n00:33:03,030 --> 00:33:07,320\nAnd that's what an extended\nACL lets us do for IGPs.\n\n617\n00:33:07,320 --> 00:33:11,560\nWhat we just saw, that works for\nRIP, EIGRP and OSPF.\n\n618\n00:33:11,560 --> 00:33:13,240\nIt works for all three of them.\n\n619\n00:33:13,240 --> 00:33:14,940\nAnd remember the title is subjective.\n\n620\n00:33:14,940 --> 00:33:16,980\nRight?\nFiltering with any protocol.\n\n621\n00:33:16,980 --> 00:33:20,480\nSo remember, that right there\nworks with all three of them.\n\n622\n00:33:20,480 --> 00:33:21,451\nIt doesn't work with BGP.\n\n623\n00:33:21,451 --> 00:33:21,951\nAll right?\n\n624\n00:33:23,840 --> 00:33:27,620\nThat being said, I think I've already shot\nway past our break point for this segment.\n\n625\n00:33:27,620 --> 00:33:30,660\nSo, let's stop and take a break,\nand when we get back,\n\n626\n00:33:30,660 --> 00:33:34,130\nI'll show you an example with BGP,\nwith border gateway protocol, and\n\n627\n00:33:34,130 --> 00:33:38,080\nwe can go in there and do filtering using\nextended ACLs and distribute lists, too.\n\n628\n00:33:38,080 --> 00:33:38,875\nSo, stay tuned.\n\n629\n00:33:38,875 --> 00:33:39,932\nWe'll be back after this.\n\n630\n00:33:39,932 --> 00:33:47,241\n[SOUND].\n\n631\n00:33:47,241 --> 00:33:48,518\nAll right, welcome back, everybody.\n\n632\n00:33:48,518 --> 00:33:53,072\nSo, in the last segment, we got a chance\nto see the extended ACLs used with\n\n633\n00:33:53,072 --> 00:33:56,700\nthe distribute list and\nan interior gateway protocol.\n\n634\n00:33:56,700 --> 00:34:00,615\nSo, we saw that syntax where the source\nof the ACL matches where you're\n\n635\n00:34:00,615 --> 00:34:02,246\nlearning the route from, and\n\n636\n00:34:02,246 --> 00:34:07,150\nthe destination of the ACL matches\nthe route that you're trying to filter.\n\n637\n00:34:07,150 --> 00:34:11,310\nAnd the last thing I said before break\nwas that BGP is different, right?\n\n638\n00:34:11,310 --> 00:34:17,120\nWith border gateway protocol, the source\nis not where we're learning it from.\n\n639\n00:34:17,120 --> 00:34:19,270\nThe source is the network.\n\n640\n00:34:19,270 --> 00:34:21,170\nAnd the destination is not the network.\n\n641\n00:34:21,170 --> 00:34:24,260\nThe destination is the subnet mask.\n\n642\n00:34:24,260 --> 00:34:29,170\nAnd so now we get a different way to\napply an extended ACL with the distribute\n\n643\n00:34:29,170 --> 00:34:33,110\nlist to another protocol and that makes\nthis syntax for all this very confusing.\n\n644\n00:34:33,110 --> 00:34:35,385\nSo I wanted to show you\nguys an example of that, so\n\n645\n00:34:35,385 --> 00:34:37,227\nyou can get a chance to see it in action.\n\n646\n00:34:37,227 --> 00:34:41,991\nNow I've got my two internet service\nprovider routers here, ISP1 and ISP2 and\n\n647\n00:34:41,991 --> 00:34:45,019\nthey're running BGP,\nborder gateway protocol.\n\n648\n00:34:45,019 --> 00:34:50,057\nISP 1, for me if I take a look at its IP\n\n649\n00:34:50,057 --> 00:34:56,110\naddresses here, it is 96.0.0.1.\n\n650\n00:34:56,110 --> 00:35:00,480\nThat's the IP address of ISP 1.\n\n651\n00:35:00,480 --> 00:35:07,180\nAnd if I look at ISP 2, it is 96.0.0.2.\n\n652\n00:35:07,180 --> 00:35:07,800\nAll right?\n\n653\n00:35:07,800 --> 00:35:10,500\nSo I can see that IP right there.\n\n654\n00:35:10,500 --> 00:35:15,630\nAnd if I look at the routing table here\non ISP 2, if I do a show IP route BGP,\n\n655\n00:35:15,630 --> 00:35:19,510\nI can see that it's learning quite a few\nroutes from its neighbor, 96.0.0.1, right?\n\n656\n00:35:19,510 --> 00:35:23,080\nSo here's all these routes\nthat are coming in via BGP.\n\n657\n00:35:23,080 --> 00:35:26,880\nAnd if I take a look at ISP 1,\nit's the same thing, right?\n\n658\n00:35:26,880 --> 00:35:28,950\nWe don't have to bore\nourselves too much with this,\n\n659\n00:35:28,950 --> 00:35:31,450\nbut we'll see all those\nroutes right there, okay.\n\n660\n00:35:32,480 --> 00:35:37,780\nIf I wanna filter some of those\nroutes out, so for example, ISP1.\n\n661\n00:35:37,780 --> 00:35:42,740\nMaybe ISP1 says, hey, I've got plenty\nof connections to the 205.160 networks,\n\n662\n00:35:42,740 --> 00:35:45,880\nI don't need somebody\nelse telling me about it.\n\n663\n00:35:45,880 --> 00:35:47,960\nI might choose to just filter those out.\n\n664\n00:35:47,960 --> 00:35:49,660\nI don't wanna bring those in anymore.\n\n665\n00:35:49,660 --> 00:35:52,860\nWell, we can do an extended\nACL to block those.\n\n666\n00:35:52,860 --> 00:35:57,905\nNow, if I was just knocking out all\nthe 2015.60's I could just do a regular,\n\n667\n00:35:57,905 --> 00:36:01,960\nstandard access list and filter those too,\nbut with an extended acl,\n\n668\n00:36:01,960 --> 00:36:05,890\nI can specify particular sub-net masks,\nso I can get really specific with it.\n\n669\n00:36:05,890 --> 00:36:07,690\nAnd knock out a particular route.\n\n670\n00:36:07,690 --> 00:36:09,772\nMaybe I just wanna knock\nout this very first one.\n\n671\n00:36:09,772 --> 00:36:13,215\n205.160.0.0/24.\n\n672\n00:36:13,215 --> 00:36:15,711\nI wanna get that class C specifically.\n\n673\n00:36:15,711 --> 00:36:20,281\nMaybe there's other\nnetworks behind the scene,\n\n674\n00:36:20,281 --> 00:36:24,670\nlike a 205.160.0.0/25.\n\n675\n00:36:24,670 --> 00:36:28,030\nAnd I want that, but I don't want the /24.\n\n676\n00:36:28,030 --> 00:36:30,830\nWell, let's see,\nare there any examples here?\n\n677\n00:36:30,830 --> 00:36:33,931\nThe one I usually do in real\nlife land is knock out /32s.\n\n678\n00:36:33,931 --> 00:36:36,980\n[LAUGH] You'll learn these /32s that\nare kinda pointless to learn, and so\n\n679\n00:36:36,980 --> 00:36:38,440\nyou can filter those out.\n\n680\n00:36:38,440 --> 00:36:40,180\nI don't have any here in this example.\n\n681\n00:36:40,180 --> 00:36:45,533\nBut I'll just knock out this guy\nspecifically, this 205.160.0.0/24.\n\n682\n00:36:45,533 --> 00:36:46,160\nAll right?\n\n683\n00:36:46,160 --> 00:36:49,530\nSo I'm gonna start by\nwriting an access list.\n\n684\n00:36:49,530 --> 00:36:55,188\nSo I'll say access-list and\nthis is gonna be an extended ACL,\n\n685\n00:36:55,188 --> 00:36:59,040\nso I'll do 101 and our deny ip.\n\n686\n00:36:59,040 --> 00:37:01,870\nSo, so\nfar things are pretty much the same.\n\n687\n00:37:01,870 --> 00:37:04,080\nNow I need to specify the network.\n\n688\n00:37:04,080 --> 00:37:06,938\nAnd this is the part that I know when\nI was learning had the hardest time\n\n689\n00:37:06,938 --> 00:37:09,319\ngrasping, is you actually\nhave to use the host command.\n\n690\n00:37:09,319 --> 00:37:16,969\nYou have to say,\nhost 205.160.0.0, like that.\n\n691\n00:37:16,969 --> 00:37:21,035\nOr what you're really doing,\nif we didn't use the host alias,\n\n692\n00:37:21,035 --> 00:37:25,800\nwould be saying 205.160.0.0.0.0.0.0,\nall right?\n\n693\n00:37:25,800 --> 00:37:30,860\nWith that wild card mask, what you're\nsaying is every single bit has to match.\n\n694\n00:37:30,860 --> 00:37:37,540\nI'm looking for a network that matches\nthis exactly, right, being really precise.\n\n695\n00:37:37,540 --> 00:37:42,960\nAnd we typically do that with\nthe host alias, all right?\n\n696\n00:37:42,960 --> 00:37:46,540\nAnd I'm gonna follow that\nup with the subnet mask.\n\n697\n00:37:46,540 --> 00:37:48,541\nNow the subnet mask here is a /24, and so\n\n698\n00:37:48,541 --> 00:37:50,664\n[LAUGH] here's where it\ngets really bizarre.\n\n699\n00:37:50,664 --> 00:37:57,944\nBecause it's not gonna be a wildcard mask,\nI'm gonna say host 255.255.255.0, right?\n\n700\n00:37:57,944 --> 00:38:02,410\nNow, I know what you're thinking,\ncould they have made this more confusing?\n\n701\n00:38:02,410 --> 00:38:04,570\nWhy not just let us put\nit in as a wildcard mask,\n\n702\n00:38:04,570 --> 00:38:08,000\nand then be done with it and unfortunately\nI don't have the answer to that.\n\n703\n00:38:08,000 --> 00:38:11,450\nBut they chose to go this way, so\nyou basically say the subnet mask\n\n704\n00:38:11,450 --> 00:38:14,410\non a positive side, you do write it\nlike you would normally on a computer.\n\n705\n00:38:14,410 --> 00:38:17,370\nThat's probably why they did it,\ntrying to make it more convenient.\n\n706\n00:38:17,370 --> 00:38:19,570\nBut at the end of the day,\nit just made it more confusing.\n\n707\n00:38:19,570 --> 00:38:22,260\nDoesn't matter, it all got replaced\nwith prefix list later on, but\n\n708\n00:38:22,260 --> 00:38:23,970\nthat's the way that you do it.\n\n709\n00:38:23,970 --> 00:38:27,620\nSo the first host is the network and\n\n710\n00:38:27,620 --> 00:38:31,390\nthen the second host is\nthe subnet mask of that network.\n\n711\n00:38:31,390 --> 00:38:34,419\nAnd it's gonna be that\nsubnet mask specifically.\n\n712\n00:38:34,419 --> 00:38:39,076\nSo if there is a 205.160.0:0/25,\nthis won't match it.\n\n713\n00:38:39,076 --> 00:38:43,417\nIf there's a 205.160.0:0/23,\nthis won't match it.\n\n714\n00:38:43,417 --> 00:38:48,180\nIt will only match the /24, all right,\nit's gonna hit that one specifically.\n\n715\n00:38:50,020 --> 00:38:55,130\nAnd just like before,\nI do need to do a permit ip any any.\n\n716\n00:38:55,130 --> 00:38:58,670\nBecause if I don't do that, it's gonna\nblock everything else too, right?\n\n717\n00:38:58,670 --> 00:39:00,907\nSo that.\n\n718\n00:39:00,907 --> 00:39:03,210\nAll right, so\nnow that I've got that in place,\n\n719\n00:39:03,210 --> 00:39:06,950\nthere's my ACL, I'm ready to implement it.\n\n720\n00:39:06,950 --> 00:39:09,620\nNow implementing a distribute list to BGP\n\n721\n00:39:09,620 --> 00:39:12,980\nis a little bit different than\nthe other routing protocols, all right?\n\n722\n00:39:12,980 --> 00:39:17,510\nWith EIGRP, RIP, OSPF,\nyou get into the router process.\n\n723\n00:39:17,510 --> 00:39:19,180\nSo you just jump right in there.\n\n724\n00:39:19,180 --> 00:39:23,740\nAnd you say distribute list, whatever\nthe number is, whether it's in or out, and\n\n725\n00:39:23,740 --> 00:39:25,460\nthen whether you're gonna\ntie it to an interface.\n\n726\n00:39:25,460 --> 00:39:27,420\nReally really straightforward.\n\n727\n00:39:27,420 --> 00:39:32,820\nWith BGP, the distribute lists are\nactually attached to the neighbor command.\n\n728\n00:39:32,820 --> 00:39:35,280\nLet me show you my BGP configuration here.\n\n729\n00:39:35,280 --> 00:39:37,590\nOh wait, I forgot.\n\n730\n00:39:37,590 --> 00:39:39,730\nI used the new syntax and\nthat doesn't work.\n\n731\n00:39:41,075 --> 00:39:42,295\nThere we go.\n\n732\n00:39:42,295 --> 00:39:43,935\nSo inside of my BGP configuration,\n\n733\n00:39:43,935 --> 00:39:47,170\nyou'll see where I've got my\nneighbor defined right there, right?\n\n734\n00:39:47,170 --> 00:39:51,034\nNeighbor 96.00.2, remote AS 200, right.\n\n735\n00:39:51,034 --> 00:39:55,284\nSo the other router is an autonomous\nsystem 200, and then down here I've got my\n\n736\n00:39:55,284 --> 00:39:59,114\nIPv4 configuration, and you'll see\nmy neighbor command right there.\n\n737\n00:39:59,114 --> 00:40:03,437\nSo I've got my neighbor relationship\nbuilt up With that other guy, and\n\n738\n00:40:03,437 --> 00:40:06,535\nI'll put that distribute\nlist on the neighbor, so\n\n739\n00:40:06,535 --> 00:40:10,858\nwhen I'm exchanging routes with\nthat neighbor, I'm gonna apply this\n\n740\n00:40:10,858 --> 00:40:15,410\nto routes going in or routes going\nout to that neighbor specifically.\n\n741\n00:40:15,410 --> 00:40:18,720\nThe cool part here is you could have five\ndifferent neighbors on one interface and\n\n742\n00:40:18,720 --> 00:40:23,495\neach one have their own distribute list,\nthat gives you a lot of power as far as\n\n743\n00:40:23,495 --> 00:40:26,920\nfiltering these routes, it's not terribly\nefficient but it's very, very powerful.\n\n744\n00:40:28,990 --> 00:40:32,378\nAlright, so\nI'm going to apply that to this guy, so\n\n745\n00:40:32,378 --> 00:40:35,997\nlet me get into my configuration and\nrouter bgp 100,\n\n746\n00:40:35,997 --> 00:40:40,318\nI'm in autonomous system 100 so,\nI'll do router bgp 100.\n\n747\n00:40:40,318 --> 00:40:46,380\nI'll get into the IPv4 address family and\nI'm going to say neighbor 96.0.0.2 and\n\n748\n00:40:46,380 --> 00:40:51,260\nI'm getting that neighbor really from\nmy routing table up here, right,\n\n749\n00:40:51,260 --> 00:40:56,137\nI said this is the guy I want to block so\nhere is the neighbor that I am getting\n\n750\n00:40:56,137 --> 00:40:59,940\nit from, right, so\nthat's how I know who to block it on.\n\n751\n00:41:01,200 --> 00:41:05,795\nSo I specify that neighbor, [COUGH] and\nthen I just follow that up by saying,\n\n752\n00:41:05,795 --> 00:41:09,070\ndistribute-list, and I did 101 and\n\n753\n00:41:09,070 --> 00:41:14,670\nin or out, out would be stuff I'm\nadvertising to that neighbor,\n\n754\n00:41:14,670 --> 00:41:16,820\nIn would be stuff I'm\nlearning from that neighbor.\n\n755\n00:41:16,820 --> 00:41:20,610\nSo I'll go ahead and say in, and\nthat's really all I need to specify, so\n\n756\n00:41:20,610 --> 00:41:24,880\nI'll run that and now it's going to apply,\nnow, here's the thing,\n\n757\n00:41:24,880 --> 00:41:27,387\nBTP will sort that out, eventually.\n\n758\n00:41:27,387 --> 00:41:32,890\nAll right, BTP can be fairly slow,\nit's designed to route the whole Internet,\n\n759\n00:41:32,890 --> 00:41:36,600\nso fast, rapid routing table updates are\nnot something that it really flies with,\n\n760\n00:41:36,600 --> 00:41:41,070\nso I can wait patiently until that takes\naffect which is what I do in real life.\n\n761\n00:41:41,070 --> 00:41:45,020\nI certainly wouldn't rush it, but here on\nthe show I'm going to get bored if I wait\n\n762\n00:41:45,020 --> 00:41:50,900\nto long so I'm going to force this along,\nand so what I'll do is a quick VGP reset,\n\n763\n00:41:50,900 --> 00:41:55,900\nI'm going to say clear ip gbp 200,\nand what that's gonna do is it's gonna\n\n764\n00:41:55,900 --> 00:42:01,550\ndo a graceful restart of my peer\nrelationship with Autonomous System 200.\n\n765\n00:42:01,550 --> 00:42:04,390\nUnlike EIGRP, where it was graceful and\n\n766\n00:42:04,390 --> 00:42:08,630\nI never actually lost packets, here,\nI actually dumped my neighbor and\n\n767\n00:42:08,630 --> 00:42:11,600\nthen it's building back up,\nthis is a pretty aggressive way to do it.\n\n768\n00:42:11,600 --> 00:42:14,790\nWe'll do some bgp shows later on and\nI'll show you guys how to set up graceful\n\n769\n00:42:14,790 --> 00:42:17,950\nrestarts between them that can speed that\nup, but for right now I'm just doing that\n\n770\n00:42:17,950 --> 00:42:20,790\nto make this routing table\nchange a little more rapidly.\n\n771\n00:42:21,990 --> 00:42:24,290\nAll right, my distribute list\nshould be in action at this point,\n\n772\n00:42:24,290 --> 00:42:29,640\nif I do a show ip route, I'll filter\nit down just to bgp just to make\n\n773\n00:42:29,640 --> 00:42:34,370\nit a little bit easier, when I look at my\n205.160s, notice the 205.160.0 is gone,\n\n774\n00:42:34,370 --> 00:42:39,454\nand the first one I have is 205.160.2,\nall right?\n\n775\n00:42:39,454 --> 00:42:44,800\nAnd if I do like I show ip route\n205.160.0.0, I get that I've\n\n776\n00:42:44,800 --> 00:42:51,080\ngot a route for it, but\nI've got it via eigrp, not via bgp,\n\n777\n00:42:51,080 --> 00:42:55,500\nso if I do a show ip route eigrp,\nI can look in here and\n\n778\n00:42:55,500 --> 00:42:59,080\nsure enough since I'm\nblocking the bgp route,\n\n779\n00:42:59,080 --> 00:43:04,000\nwhich has an admin distance of 20,\nonce I got it out of there that freed up\n\n780\n00:43:04,000 --> 00:43:08,080\nthe EIGRP route with an admin distance of\n90 to jump into the table in it's place.\n\n781\n00:43:08,080 --> 00:43:12,290\nSo I still have a route to get there,\njust with a different routing protocol, so\n\n782\n00:43:12,290 --> 00:43:15,320\nyou guys start to see how we can\nuse this to influence the way that\n\n783\n00:43:15,320 --> 00:43:17,620\nprotocols are selected or\npaths are picked.\n\n784\n00:43:17,620 --> 00:43:20,570\nWe can influence the routes\nthat we learn and\n\n785\n00:43:20,570 --> 00:43:24,032\nthe routes that we advertise to\nother people, it's very cool stuff.\n\n786\n00:43:24,032 --> 00:43:28,100\nAll right, all that being said,\n\n787\n00:43:29,320 --> 00:43:32,800\ndistribute lists are cool, but you don't\nwanna use them if you don't have to, or\n\n788\n00:43:32,800 --> 00:43:36,630\nat least you don't wanna use them with\nACLs like I just did, you wanna use\n\n789\n00:43:36,630 --> 00:43:40,820\ndistribute lists with prefix lists, which\nare the next thing we're gonna talk about.\n\n790\n00:43:40,820 --> 00:43:43,820\nBut before we jump into prefix lists,\nlet me just summarize some of the higher\n\n791\n00:43:43,820 --> 00:43:49,010\npoints that you wanna remember,\ndistribute lists with an ACL\n\n792\n00:43:49,010 --> 00:43:52,830\ncan filter what routes you learn and\nwhat routes you advertise.\n\n793\n00:43:53,830 --> 00:43:57,550\nFiltering routes you learn, you do\nthat with an inbound distribute list,\n\n794\n00:43:57,550 --> 00:44:02,040\nfiltering routes you advertise with\nan outbound ACL distribute list.\n\n795\n00:44:02,040 --> 00:44:06,470\nYou can do a standard ACL, in which\ncase you're specifying the network and\n\n796\n00:44:06,470 --> 00:44:10,390\na wildcard mask that identifies the bits\nof the network that have the match, and\n\n797\n00:44:10,390 --> 00:44:15,140\nthat'll get the main network and\nany child subnet created underneath it.\n\n798\n00:44:15,140 --> 00:44:20,115\nYou can do an extended ACL But\nbehavior gets a little flaky there, right,\n\n799\n00:44:20,115 --> 00:44:24,935\nwith an IGP, the extended ACL specifies\nthe host you learned the route from and\n\n800\n00:44:24,935 --> 00:44:29,805\nthe network versus with an exterior\ngateway protocol like VGP\n\n801\n00:44:29,805 --> 00:44:34,220\nit's gonna be the first part\nis going to be the network and\n\n802\n00:44:34,220 --> 00:44:37,530\nthe second part is the subnet mask, so a\ndifferent kind of format of that command.\n\n803\n00:44:38,560 --> 00:44:42,050\nSo a couple of little things to remember,\noh and the other thing that ospf\n\n804\n00:44:43,410 --> 00:44:48,350\ninbound distribute list work really\nwell in ospf, outbound distribute lists\n\n805\n00:44:48,350 --> 00:44:51,680\nwill often times not work because\nall the routers talk to each other.\n\n806\n00:44:51,680 --> 00:44:55,970\nSo if you're going to be doing outbound\ndistribute lists with the ACLs and OSPF,\n\n807\n00:44:55,970 --> 00:44:59,160\nyou will typically only do it on\nthe area border routers, the ABR.\n\n808\n00:45:00,210 --> 00:45:02,910\nInside of an area all the routers\ncan talk to each other, so\n\n809\n00:45:02,910 --> 00:45:05,410\nif you filter something,\nthey just get it from somebody else.\n\n810\n00:45:05,410 --> 00:45:09,440\nBut a border router, by definition\nif it's the only border router,\n\n811\n00:45:09,440 --> 00:45:11,390\nthey can't go around you to\nlearn it from somewhere else and\n\n812\n00:45:11,390 --> 00:45:14,130\nthose outbound distribute\nlists will actually work.\n\n813\n00:45:14,130 --> 00:45:17,753\nBut if you have more than one ABR you'd\nneed to do distribute list in each place\n\n814\n00:45:17,753 --> 00:45:21,545\nor maybe that's the whole point, maybe\nyou're trying to steer people to one ABR\n\n815\n00:45:21,545 --> 00:45:24,612\nversus another one and\nyou just don't want to mess with metrics,\n\n816\n00:45:24,612 --> 00:45:26,780\nwhich would be the better\nway to handle that.\n\n817\n00:45:26,780 --> 00:45:31,473\nBut different options available for all\nof this, keep that in mind, too,you know,\n\n818\n00:45:31,473 --> 00:45:35,254\njust because you can use a distribute\nlist doesn't mean you have to,\n\n819\n00:45:35,254 --> 00:45:37,690\nthere's plenty of other stuff you can use.\n\n820\n00:45:37,690 --> 00:45:42,855\nSo that's probably enough as far as time\nwe need to spend on distribute lists,\n\n821\n00:45:42,855 --> 00:45:47,880\nand if you're asking why do we spend time\non it at all, let me just reiterate that\n\n822\n00:45:47,880 --> 00:45:51,710\nthe main reason is it's on the exam, you\nknow, distribute lists are on the exam.\n\n823\n00:45:51,710 --> 00:45:56,500\nBut the other reason is they are still out\nthere in use, a lot of people deployed\n\n824\n00:45:56,500 --> 00:45:59,430\nrouters years ago using distribute\nlist and they've upgraded the newer\n\n825\n00:45:59,430 --> 00:46:03,380\nrouters that have prefixed lists, but they\njust haven't ported all the stuff over.\n\n826\n00:46:03,380 --> 00:46:06,400\nSo you definitely need to be familiar with\nit, it's an option that's out there, but\n\n827\n00:46:06,400 --> 00:46:10,410\nwhenever possible use\na prefix list instead.\n\n828\n00:46:10,410 --> 00:46:15,550\nWhich leads us to prefix lists, so\nlet's talk about those things, now\n\n829\n00:46:15,550 --> 00:46:21,040\nprefix lists are similar to ACLs in a way,\neven down to their syntax they're\n\n830\n00:46:21,040 --> 00:46:26,630\nkind of similar, they actually\nbehave kind of interesting though.\n\n831\n00:46:26,630 --> 00:46:31,650\nA prefix list is specifically designed for\nfiltering networks, so,\n\n832\n00:46:31,650 --> 00:46:32,940\nwhen you create a prefix list,\n\n833\n00:46:32,940 --> 00:46:36,870\nthink of it as an access list,\nthis is why they're both called lists.\n\n834\n00:46:36,870 --> 00:46:41,430\nIn an access list, you're permitting or\ndenying packets, in a prefix list,\n\n835\n00:46:41,430 --> 00:46:45,840\nyou're permitting or denying Prefixes and\nby prefixes we mean subnets,\n\n836\n00:46:45,840 --> 00:46:48,080\nthis is specifically designed for it.\n\n837\n00:46:48,080 --> 00:46:50,360\nThere's a couple of reasons\nwhy this is really cool,\n\n838\n00:46:50,360 --> 00:46:55,210\nthe main reason is performance,\nthe router hardware is tuned to\n\n839\n00:46:55,210 --> 00:47:00,160\nhandle prefix lists far more optimized\nthan it is in ACL because ACL\n\n840\n00:47:00,160 --> 00:47:04,480\nis just like retrofitting that technology\nto work, it works, doesn't work great.\n\n841\n00:47:04,480 --> 00:47:09,040\nPrefix lists work great,\nit stores the list in the same format,\n\n842\n00:47:09,040 --> 00:47:11,330\nthe same structure that your\nrouting table is built upon, and\n\n843\n00:47:11,330 --> 00:47:15,360\nthat means they apply very, very rapidly,\nthey're cached by the data plane.\n\n844\n00:47:15,360 --> 00:47:18,010\nAnd that means that half the time\nwhen you're using these prefix lists,\n\n845\n00:47:18,010 --> 00:47:21,840\nit doesn't have to go to the control plane\nto deal with it versus like an access list\n\n846\n00:47:21,840 --> 00:47:25,600\nwhere it would have to go to the control\nplane every single time, so,\n\n847\n00:47:25,600 --> 00:47:27,620\ndefinitely more efficient.\n\n848\n00:47:27,620 --> 00:47:31,430\nThe second thing, the reason I like\nprefix lists over access lists,\n\n849\n00:47:31,430 --> 00:47:34,860\nwith a prefix list, there's no\nmessing about with wildcard masks,\n\n850\n00:47:34,860 --> 00:47:37,150\nyou can actually use\nsubnet shorthand notation.\n\n851\n00:47:37,150 --> 00:47:39,910\nIf you're gonna be filtering out slash 24,\nyou write slash 24, and\n\n852\n00:47:39,910 --> 00:47:43,830\nI love that, It's just so much easier.\n\n853\n00:47:43,830 --> 00:47:46,979\nI get frustrated sometimes, there's so\nmany places in the Cisco IOS where you\n\n854\n00:47:46,979 --> 00:47:49,746\ncan't use subnet shorthand notation,\nand you buy any Cisco book and\n\n855\n00:47:49,746 --> 00:47:52,918\nyou read through it, and they use that\nshorthand notation all over the place.\n\n856\n00:47:52,918 --> 00:47:58,484\nAnd you sit down the router and\nyou're entering in the dotted decimal or\n\n857\n00:47:58,484 --> 00:48:02,749\na wild card mask or\nwhatever like just give me the / 20\n\n858\n00:48:02,749 --> 00:48:07,602\n24/20 whatever and\nhere's an example where they do.\n\n859\n00:48:07,602 --> 00:48:09,870\nAll right, so,\nlet's talk about how these things work.\n\n860\n00:48:09,870 --> 00:48:14,500\nI mentioned that the access lists\nare built of filter packets,\n\n861\n00:48:14,500 --> 00:48:17,250\nbut prefix lists are built\nwithout filter routes.\n\n862\n00:48:17,250 --> 00:48:21,030\nThe way we write them is very\nsimilar to an access list, though.\n\n863\n00:48:21,030 --> 00:48:24,560\nLet me show you some examples\nthat I wrote up before the show.\n\n864\n00:48:24,560 --> 00:48:28,720\nI'm gonna bring these up on the screen and\nso, I've got an example right here.\n\n865\n00:48:28,720 --> 00:48:32,080\nIf I wanted to permit just one network,\n\n866\n00:48:32,080 --> 00:48:38,200\nI just wanna permit the 192.168.0.0/24\nto come into my network, and that's it.\n\n867\n00:48:38,200 --> 00:48:43,811\nI would write something\nlike this ip prefix-list 1.\n\n868\n00:48:43,811 --> 00:48:49,260\nNow, this is just like axis dash list,\nyou can use a number or a name.\n\n869\n00:48:49,260 --> 00:48:51,180\nSo I could have given\nthis a name if I wanted.\n\n870\n00:48:51,180 --> 00:48:53,940\nI usually do use a name,\nI just used a number here in the example.\n\n871\n00:48:53,940 --> 00:48:56,250\nAll right, or actually here right\nbeneath it I did use a name.\n\n872\n00:48:56,250 --> 00:49:01,880\nI said IP prefix list incoming right,\nso sometimes I remember what I wrote.\n\n873\n00:49:01,880 --> 00:49:05,790\nSo I can use a name or a number and\nthen we specify what we're doing.\n\n874\n00:49:05,790 --> 00:49:09,924\nHere I'm saying permit 192.168.0.0/24.\n\n875\n00:49:09,924 --> 00:49:13,186\nThat's a lot easier than messing\naround with the other syntax, right?\n\n876\n00:49:13,186 --> 00:49:15,590\nNo wildcard mask or anything like that.\n\n877\n00:49:15,590 --> 00:49:19,290\nI'm permitting that specific network and\n\n878\n00:49:19,290 --> 00:49:22,270\nthat's exactly what that does\nit's just that one network.\n\n879\n00:49:23,980 --> 00:49:29,010\nNow, when you put that entry\nin there just like named ACLs,\n\n880\n00:49:29,010 --> 00:49:32,510\nit applies a sequence number to them, and\nthe default is it numbers them by fives.\n\n881\n00:49:32,510 --> 00:49:36,280\nSo the first entry you will create will be\nsequence number five, and then ten, and\n\n882\n00:49:36,280 --> 00:49:39,860\nthen 15, and 20, and so\non and it does that so\n\n883\n00:49:39,860 --> 00:49:42,130\nyou can go back and\nincrementally edit them later on.\n\n884\n00:49:42,130 --> 00:49:44,750\nIf you want to add something between\nsome rules or whatever, you can do that.\n\n885\n00:49:45,970 --> 00:49:49,580\nHere, I'm manually specifying that\nsequence number, and that's optional.\n\n886\n00:49:49,580 --> 00:49:53,785\nIf you don't specify [INAUDIBLE] just adds\nit to the end and keeps going up by five.\n\n887\n00:49:53,785 --> 00:49:57,197\nSo here I’m just saying\nsequence number ten,\n\n888\n00:49:57,197 --> 00:49:59,915\nso you can add a little bit more to it.\n\n889\n00:49:59,915 --> 00:50:03,981\nThese two, both of these entries do\nthe exact same thing both of these\n\n890\n00:50:03,981 --> 00:50:06,937\npermit the 192.168.0.0/24 now.\n\n891\n00:50:06,937 --> 00:50:13,367\nNow, if I just stop right there,\neverything else gets denied.\n\n892\n00:50:13,367 --> 00:50:18,057\nJust like an ACL, there's an explicit\ndeny all at the end of it, so\n\n893\n00:50:18,057 --> 00:50:20,027\nany route that's not on that\nlist is gonna get blocked.\n\n894\n00:50:21,207 --> 00:50:24,087\nAnother thing worth mentioning, I don't\nknow if this'll turn up on the exam but\n\n895\n00:50:24,087 --> 00:50:28,090\nin real life land Let's say\nthat you attach a prefix list\n\n896\n00:50:28,090 --> 00:50:33,080\nto a routing protocol, and then you delete\nthe prefix list, right, so now it's empty.\n\n897\n00:50:33,080 --> 00:50:39,450\nAn empty ACL, and an empty prefix list,\nboth of them permit all traffic, okay?\n\n898\n00:50:39,450 --> 00:50:43,390\nSo it's not like it's denying everything\nif it's empty, it permits everything but\n\n899\n00:50:43,390 --> 00:50:48,510\nif it has at least one line in it, then\nthere's that deny all that's at the end,\n\n900\n00:50:48,510 --> 00:50:54,260\nthat implicit deny all that we don't see\nbut it is there and everything else.\n\n901\n00:50:54,260 --> 00:50:58,500\nNow where the prefix lists get really cool\n\n902\n00:50:58,500 --> 00:51:02,500\nis when we want to do the child subnets,\nright?\n\n903\n00:51:02,500 --> 00:51:08,080\nIf I want to filter subnets inside of\nthis parent network in the ACL method\n\n904\n00:51:08,080 --> 00:51:12,330\nI'd have to write more than one ACL line\nto specify the different subnet masks and\n\n905\n00:51:12,330 --> 00:51:14,600\nall that,\nto be able to catch different networks.\n\n906\n00:51:14,600 --> 00:51:19,960\nBut in a prefix list,\nwe can specify ranges and the ranges use\n\n907\n00:51:19,960 --> 00:51:24,650\na syntax built around a, what is it\nlike a Boolean Comparison, or whatever.\n\n908\n00:51:24,650 --> 00:51:28,090\nYou have less than or\nequal to and greater than or\n\n909\n00:51:28,090 --> 00:51:31,872\nequal to, to specify the amount\nof bits in the subnet mask.\n\n910\n00:51:31,872 --> 00:51:35,480\nAll right, and this is probably the most\nconfusing part about prefix lists and\n\n911\n00:51:35,480 --> 00:51:38,690\nI know a lot of people don't use prefix\nlists because they find this part\n\n912\n00:51:38,690 --> 00:51:40,300\nconfusing and it's a real shame.\n\n913\n00:51:40,300 --> 00:51:42,622\nYou really should do it and\nit's not that bad once you learn it.\n\n914\n00:51:42,622 --> 00:51:48,475\nAll right, when you specify a prefix list,\nyou have to specify a network right here,\n\n915\n00:51:48,475 --> 00:51:52,680\n192.168.0.0/24 and\nif you stop right there, you're\n\n916\n00:51:54,120 --> 00:51:58,908\njust going to be permitting or\ndenying that exact network /24.\n\n917\n00:51:58,908 --> 00:52:05,170\nIf you get a /25 or a /28 inside that\nsame network, it doesn't match, right?\n\n918\n00:52:05,170 --> 00:52:10,580\nAnd so it doesn't apply but\nyou can add in an entry that says.\n\n919\n00:52:10,580 --> 00:52:15,340\nGreater than or equal to a number or\nless than or equal to a number.\n\n920\n00:52:15,340 --> 00:52:19,730\nAnd now you can start to catch ranges,\nthe children that fall underneath it.\n\n921\n00:52:19,730 --> 00:52:23,720\nThat's the example I show here\nif I wanna permit every network,\n\n922\n00:52:23,720 --> 00:52:27,820\nevery single network that's out there or\nactually, no, this is different.\n\n923\n00:52:27,820 --> 00:52:30,320\nThis is permitting just /32s.\n\n924\n00:52:30,320 --> 00:52:31,680\nThat's not what I wanted.\n\n925\n00:52:31,680 --> 00:52:34,830\nYou know I don't have an example in here\npermitting everything, I'm gonna add that.\n\n926\n00:52:34,830 --> 00:52:40,420\nSo if I want to permit every network,\njust everything that's out there.\n\n927\n00:52:40,420 --> 00:52:41,486\nI want to permit it all, okay.\n\n928\n00:52:41,486 --> 00:52:46,164\nWhat I can do is I can\nsay ip prefix-list 1\n\n929\n00:52:46,164 --> 00:52:50,588\npermit 0.0.0.0/0, right?\n\n930\n00:52:50,588 --> 00:52:57,174\nSo, /0, that means the whole\nthing is part of the host ID,\n\n931\n00:52:57,174 --> 00:53:01,825\nright I'm just going [INAUDIBLE] and then,\n\n932\n00:53:01,825 --> 00:53:05,840\nle 32, less than or equal to 32.\n\n933\n00:53:05,840 --> 00:53:11,031\nThat means look at the network and\nif the subnet mask is a /32 or\n\n934\n00:53:11,031 --> 00:53:15,100\na /31 or /30, /29,\nall the way down to slash one and\n\n935\n00:53:15,100 --> 00:53:21,870\nreally even a slash zero is technically\nwhere that starts then allow it, right?\n\n936\n00:53:21,870 --> 00:53:26,110\nThat'll permit everything, everything that\ncomes in less than or equal to 32, right?\n\n937\n00:53:27,570 --> 00:53:30,360\nNow, where I have to be careful with\nthat is if I were to add it on to one\n\n938\n00:53:30,360 --> 00:53:31,880\nof these guys up here, right?\n\n939\n00:53:31,880 --> 00:53:34,170\nIf I were to add on le 32 here, right?\n\n940\n00:53:35,860 --> 00:53:40,669\nWhat that's gonna do is it's\ngonna permit /32/31/30 all\n\n941\n00:53:40,669 --> 00:53:45,323\nthe way down to /24 and\nstop it won't allow a /23 or /22.\n\n942\n00:53:45,323 --> 00:53:51,930\nYou can't permit networks that don't fall\nwithin the network that you specify here.\n\n943\n00:53:52,930 --> 00:53:56,800\nSo that syntax, less than or\nequal to, is just less than or\n\n944\n00:53:56,800 --> 00:54:01,920\nequal to the number that\nyou specific there but\n\n945\n00:54:01,920 --> 00:54:06,430\nit has a lower floor of\nthe amount of bits in the sub-net\n\n946\n00:54:06,430 --> 00:54:08,550\nmask you specified on the parent host,\nour parent network.\n\n947\n00:54:10,220 --> 00:54:14,190\nSo that syntax is a little bit challenging\nsometimes, and what I've done here is used\n\n948\n00:54:14,190 --> 00:54:20,360\nthat greater than or equal to syntax to\nsay, I just want to permit /32s, right?\n\n949\n00:54:20,360 --> 00:54:24,750\nMaybe I've got some /32s on my network\nthat I'm using for OSPF router IDs, and\n\n950\n00:54:24,750 --> 00:54:27,110\nI just want to allow them to propagate.\n\n951\n00:54:27,110 --> 00:54:32,100\nSo I might say, ip prefix-list 1\npermit 0.0.0.0/0, oops, right here,\n\n952\n00:54:32,100 --> 00:54:36,170\ngreater than or equal to 32.\n\n953\n00:54:36,170 --> 00:54:40,922\nNow, I specified a /0 here, but this is\nnot gonna match on /0 anymore or a /five,\n\n954\n00:54:40,922 --> 00:54:44,180\na /16, a /24 it’s not gonna\nmatch on any of those.\n\n955\n00:54:44,180 --> 00:54:48,560\nIt’s gotta be greater than or equal to 32,\nthere’s nothing greater than that.\n\n956\n00:54:48,560 --> 00:54:50,800\nThis will only match /32s, okay?\n\n957\n00:54:52,970 --> 00:54:57,630\nNow you might ask yourself, well Don,\nWhy didn’t you just do a /32 right here?\n\n958\n00:54:57,630 --> 00:55:01,690\nWell, that would only match\na network if it was 0.0.0.0,\n\n959\n00:55:01,690 --> 00:55:05,250\nwhich would basically be a default route,\nright?\n\n960\n00:55:05,250 --> 00:55:09,244\nSo that’s not effective,\nthat doesn’t work, it’s gotta be a /0 and\n\n961\n00:55:09,244 --> 00:55:11,910\nthen filter it down to\njust the /32s inside.\n\n962\n00:55:11,910 --> 00:55:17,270\nAll right, so pretty interesting, where\nit gets really fun is when you use both.\n\n963\n00:55:17,270 --> 00:55:21,070\nWhen you use greater than or\nequal to and less than or equal to.\n\n964\n00:55:21,070 --> 00:55:24,430\nSo maybe inside of it, and\ndid I do an example that shows that?\n\n965\n00:55:24,430 --> 00:55:25,530\nI did, right here.\n\n966\n00:55:25,530 --> 00:55:31,630\nIf I want to permit any slash 27 through\nslash 30, then I can come in and\n\n967\n00:55:31,630 --> 00:55:36,050\nfilter by using both and where we see\nthis is when you have summary routes.\n\n968\n00:55:36,050 --> 00:55:39,590\nLike in EIGRP,\nwhen you do a summary route in EIGRP,\n\n969\n00:55:39,590 --> 00:55:44,250\nwe'll talk about this in another episode,\nyou summarize multiple networks together.\n\n970\n00:55:45,610 --> 00:55:49,450\nThe summary is advertised, but\nthe child routes are still advertised too.\n\n971\n00:55:49,450 --> 00:55:53,275\nThey're still in there, so you have to\nprune those out if you don't want them to\n\n972\n00:55:53,275 --> 00:55:56,029\nbe in the IGRP table and\nwe can use a prefix list to do that.\n\n973\n00:55:56,029 --> 00:56:01,241\nSo for example, let me move this\nup on the screen here a bit,\n\n974\n00:56:01,241 --> 00:56:04,890\nso let's say we had Networks we have, and\n\n975\n00:56:04,890 --> 00:56:10,050\nwe have something like 192.168.0.0/24.\n\n976\n00:56:10,050 --> 00:56:15,030\nAnd then inside of it, and\nRonnie, I'll I need your help.\n\n977\n00:56:15,030 --> 00:56:19,670\nI wanna divide that into four networks,\nand so I'm gonna need to go with /26.\n\n978\n00:56:19,670 --> 00:56:20,292\nYes.\n\n979\n00:56:20,292 --> 00:56:23,610\nAnd that's gonna create for me, let's see.\n\n980\n00:56:23,610 --> 00:56:26,827\n64.\n[LAUGH] Here's where we start testing\n\n981\n00:56:26,827 --> 00:56:28,680\nmy binary knowledge.\n\n982\n00:56:28,680 --> 00:56:30,740\n>> 128.\n\n983\n00:56:30,740 --> 00:56:32,790\n>> All right, 128.\n\n984\n00:56:32,790 --> 00:56:37,020\n>> And 192.\n\n985\n00:56:37,020 --> 00:56:39,870\n>> And 192.\n\n986\n00:56:39,870 --> 00:56:42,050\nAll right, actually,\nlet's go even more crazy here.\n\n987\n00:56:42,050 --> 00:56:43,130\nLet's have some real fun.\n\n988\n00:56:43,130 --> 00:56:46,390\nLet's say that ones a /25.\n\n989\n00:56:46,390 --> 00:56:53,840\nThere we go so I've got a /24 okay,\nI've divided it into three networks,\n\n990\n00:56:53,840 --> 00:56:58,755\nI divided it in half to create\na /25 that's 192.168.00.\n\n991\n00:56:58,755 --> 00:57:04,307\nAnd technically inside of that\nwould be 192.168.0.128/25.\n\n992\n00:57:04,307 --> 00:57:10,548\nRight.\nBut then I took that 128/25 and\n\n993\n00:57:10,548 --> 00:57:15,310\ndivided it in half so\nI've created two /26's inside of that.\n\n994\n00:57:15,310 --> 00:57:16,177\nAll right.\n\n995\n00:57:16,177 --> 00:57:20,980\nNow, technically,\nall of these fall with 192.168.0.0/24.\n\n996\n00:57:20,980 --> 00:57:24,760\nAnd if the way I get\nthere is all the same,\n\n997\n00:57:24,760 --> 00:57:27,060\nif they all go to the same destination.\n\n998\n00:57:27,060 --> 00:57:28,663\nIf this is like via 192.168.0.1.\n\n999\n00:57:28,663 --> 00:57:30,940\nRight.\nAnd, all right, I guess it would probably\n\n1000\n00:57:30,940 --> 00:57:37,410\nbe in some other network if I\nwant it to be semi-valid here.\n\n1001\n00:57:37,410 --> 00:57:40,910\nIf all of these guys were\nvia the same destination.\n\n1002\n00:57:40,910 --> 00:57:43,770\nDo I really need to learn\nall these guys down here?\n\n1003\n00:57:43,770 --> 00:57:46,140\nI'm getting this summary up here,\nit's good enough for me.\n\n1004\n00:57:46,140 --> 00:57:47,960\nI'm not gonna need these other guys, so\n\n1005\n00:57:47,960 --> 00:57:52,090\nI might wanna prune out\nthese other networks.\n\n1006\n00:57:52,090 --> 00:57:54,390\nAnd so if those were networks we have.\n\n1007\n00:58:01,480 --> 00:58:04,350\nAll right, just trying to get\nthis aligned a little better.\n\n1008\n00:58:04,350 --> 00:58:09,990\nAnd I need to prune out /25s and /26s.\n\n1009\n00:58:09,990 --> 00:58:13,036\nAnd I want to retain the /24.\n\n1010\n00:58:13,036 --> 00:58:14,300\nOkay.\n\n1011\n00:58:14,300 --> 00:58:19,773\nSo what I would do is I\nwould say something like\n\n1012\n00:58:19,773 --> 00:58:28,719\nip prefix-list 1 deny\n192.168.0.0/24 ge 25 le 26.\n\n1013\n00:58:28,719 --> 00:58:30,940\nAll right.\n\n1014\n00:58:30,940 --> 00:58:39,400\nWhen I do that, actually I need to\nadd a little bit more to it, don't I?\n\n1015\n00:58:39,400 --> 00:58:41,180\nOtherwise I'm gonna be in trouble.\n\n1016\n00:58:41,180 --> 00:58:45,780\nSo I need to add to that one more\nline to permit everything else.\n\n1017\n00:58:47,370 --> 00:58:49,053\nSo I need to permit any.\n\n1018\n00:58:50,949 --> 00:58:54,195\nOkay, so when I write this prefix list,\n\n1019\n00:58:54,195 --> 00:58:59,560\nit's gonna look at 192.168.0.0/24,\nall right.\n\n1020\n00:58:59,560 --> 00:59:02,910\nAnd it's not gonna match /24.\n\n1021\n00:59:02,910 --> 00:59:04,130\nBecause it's looking for\n\n1022\n00:59:04,130 --> 00:59:09,060\nthat prefix to be greater than or\nequal to 25 and less than or equal to 26.\n\n1023\n00:59:09,060 --> 00:59:11,680\nSo the range is now 25 to 26.\n\n1024\n00:59:11,680 --> 00:59:15,260\nAnd that means these guys right here.\n\n1025\n00:59:15,260 --> 00:59:16,930\nThey're all gonna get pruned out.\n\n1026\n00:59:16,930 --> 00:59:18,840\nThey're gonna come out\nof the routing table.\n\n1027\n00:59:18,840 --> 00:59:22,070\nBut the /24 will remain, okay?\n\n1028\n00:59:22,070 --> 00:59:24,230\nBy writing a prefix like this,\n\n1029\n00:59:24,230 --> 00:59:26,500\nI've effectively eliminated\nthose individual routes.\n\n1030\n00:59:26,500 --> 00:59:27,260\nI still have my summary.\n\n1031\n00:59:27,260 --> 00:59:29,918\nI still have full reachability\nto those networks.\n\n1032\n00:59:29,918 --> 00:59:32,650\nBut my routing table is now smaller,\nright?\n\n1033\n00:59:32,650 --> 00:59:35,057\nHere's an example of filtering that out.\n\n1034\n00:59:35,057 --> 00:59:39,028\nAnd using both greater than or\nequal to and less than or equal to.\n\n1035\n00:59:39,028 --> 00:59:44,068\nNow a few simple rules before we break\ncause I think I've talked too long.\n\n1036\n00:59:44,068 --> 00:59:49,192\nThe greater than or equal to has to be\nbigger than whatever your network is.\n\n1037\n00:59:49,192 --> 00:59:52,008\nOkay.\nIf you leave the network out If I wanna\n\n1038\n00:59:52,008 --> 00:59:54,330\nsay greater than or equal to 24.\n\n1039\n00:59:54,330 --> 00:59:56,470\nWell, my network is 24.\n\n1040\n00:59:56,470 --> 01:00:00,790\nSo, I can just leave that out,\nand it's assumed that I mean 24.\n\n1041\n01:00:00,790 --> 01:00:01,873\nThis would be 24 to 26.\n\n1042\n01:00:01,873 --> 01:00:02,400\nAll right.\n\n1043\n01:00:02,400 --> 01:00:04,870\nBut I don't wanna get 24,\n\n1044\n01:00:04,870 --> 01:00:09,412\nso I have to specify greater than equal\nto 25, so that it leaves the 24 alone.\n\n1045\n01:00:09,412 --> 01:00:10,880\nAll right.\n\n1046\n01:00:10,880 --> 01:00:14,680\nAnd then less than or\nequal to 32 is the biggest number.\n\n1047\n01:00:14,680 --> 01:00:17,320\nCuz you can't have a sub-net mask\nwith more than 32 bits in it,\n\n1048\n01:00:17,320 --> 01:00:19,280\nat least not in iPV4, right?\n\n1049\n01:00:19,280 --> 01:00:21,150\nSo, it's gonna be less than 32.\n\n1050\n01:00:21,150 --> 01:00:24,350\nBut that's the syntax right\nthere of a prefix list.\n\n1051\n01:00:24,350 --> 01:00:28,650\nAnd you're basically identifying sub-nets\nby the amount of bits in their mask,\n\n1052\n01:00:28,650 --> 01:00:29,670\nwhich makes sense.\n\n1053\n01:00:29,670 --> 01:00:31,470\nI mean,\nthat's how this is suppose to work.\n\n1054\n01:00:31,470 --> 01:00:36,140\nAnd the router can apply this very very\nquickly, and it's extremely efficient.\n\n1055\n01:00:36,140 --> 01:00:38,420\nAll right?\nSo they're pretty cool.\n\n1056\n01:00:38,420 --> 01:00:40,390\nAll right, well, we've talked about them.\n\n1057\n01:00:40,390 --> 01:00:44,130\nI wanna show them to you in action,\nbut I've talked too long already.\n\n1058\n01:00:44,130 --> 01:00:45,170\nSo let's stop and take a break.\n\n1059\n01:00:45,170 --> 01:00:51,388\nWhen we get back,\nprefix list in action, after this.\n\n1060\n01:00:51,388 --> 01:00:58,529\n[SOUND] All right, welcome back everybody.\n\n1061\n01:00:58,529 --> 01:01:01,230\nSo, enough talking about prefix lists.\n\n1062\n01:01:01,230 --> 01:01:02,800\nLet's see them in action.\n\n1063\n01:01:02,800 --> 01:01:05,090\nNow, I do wanna go a slightly\ndifferent route on this one.\n\n1064\n01:01:05,090 --> 01:01:08,800\nWith distribute lists, you pretty much\napply them the same for each protocol,\n\n1065\n01:01:08,800 --> 01:01:10,280\nnot anything too crazy there.\n\n1066\n01:01:10,280 --> 01:01:14,401\nFor prefix lists it's [SOUND] really\nthe same, I'm gonna knock over my coffee.\n\n1067\n01:01:14,401 --> 01:01:15,890\nSo it's pretty much the same there, too.\n\n1068\n01:01:15,890 --> 01:01:21,260\nBut I do want to show you guys applying\na prefix list with EIGRP, with OSPF, and\n\n1069\n01:01:21,260 --> 01:01:25,850\nwith BGP because remember the objective\nis filtering lists with any protocols.\n\n1070\n01:01:25,850 --> 01:01:28,110\nSo you've gotta make sure\nyou're comfortable with each.\n\n1071\n01:01:28,110 --> 01:01:31,400\nBut it's pretty much\nthe same With EIGRP and\n\n1072\n01:01:31,400 --> 01:01:35,440\nOSPF, we apply the prefix lists\nwith the distribute list.\n\n1073\n01:01:35,440 --> 01:01:37,850\nThat's actually pretty neat,\nand we do it right in protocol.\n\n1074\n01:01:37,850 --> 01:01:42,240\nWith BGP, we apply the prefix\nlist directly to a neighbor's.\n\n1075\n01:01:42,240 --> 01:01:45,540\nWe actually don't need distribute lists\nat all when we're applying it to BGP.\n\n1076\n01:01:45,540 --> 01:01:47,470\nSo pretty neat stuff there.\n\n1077\n01:01:47,470 --> 01:01:48,530\nDifferent ways of implementing,\n\n1078\n01:01:48,530 --> 01:01:52,920\nbut fortunately the prefix lists work\nthe same whether it's an IGP or an EGP.\n\n1079\n01:01:52,920 --> 01:01:57,120\nSo we don't have all that crazy stuff that\nwe had to deal with with distribute lists.\n\n1080\n01:01:57,120 --> 01:01:58,700\nAll right, so let's go ahead and\nget started here.\n\n1081\n01:01:58,700 --> 01:02:03,830\nIn my network, I've got my various\nrouters and I'm running EIGRP.\n\n1082\n01:02:03,830 --> 01:02:06,200\nAnd so my routers are learning\nall sorts of crazy stuff and\n\n1083\n01:02:06,200 --> 01:02:09,840\nthey've got it all It brought right\nin here and they just learned it and\n\n1084\n01:02:09,840 --> 01:02:11,098\nthey've got it, and it's in place.\n\n1085\n01:02:11,098 --> 01:02:14,670\nNow, I wanna verify that I don't\nhave any prefix lists already.\n\n1086\n01:02:14,670 --> 01:02:17,430\nAnd one of the easiest ways\nto do that is with a command.\n\n1087\n01:02:17,430 --> 01:02:20,445\nIt's show ip prefix-list.\n\n1088\n01:02:20,445 --> 01:02:21,668\nAll right?\n\n1089\n01:02:21,668 --> 01:02:27,330\nShow ip prefix-list will tell you\nany prefix list you've already got,\n\n1090\n01:02:27,330 --> 01:02:30,590\nand just because you have a list\ndoesn't mean it's actually active.\n\n1091\n01:02:30,590 --> 01:02:33,370\nJust like an ACL,\nyou can create the ACL and not attach it.\n\n1092\n01:02:33,370 --> 01:02:35,450\nYou can create a prefix list and\nnot attach it.\n\n1093\n01:02:35,450 --> 01:02:38,230\nBut if I had some I'd wanna\nknow they were already there.\n\n1094\n01:02:38,230 --> 01:02:39,160\nI don't have any.\n\n1095\n01:02:39,160 --> 01:02:41,260\nSo I'm ready to get started, right.\n\n1096\n01:02:41,260 --> 01:02:45,640\nSo on my system here,\nI've got good old EIGRP running.\n\n1097\n01:02:45,640 --> 01:02:48,490\nAnd I wanna filter out some stuff, right.\n\n1098\n01:02:48,490 --> 01:02:49,670\nSo, what I'm gonna do is,\n\n1099\n01:02:49,670 --> 01:02:54,040\nI wanna make sure that I don't\nlearn some of these routes and.\n\n1100\n01:02:54,040 --> 01:02:58,250\nWhen it comes to filtering, I can do these\ninbound and I can do these outbound.\n\n1101\n01:02:58,250 --> 01:03:01,700\nIt's up to me with how I wanna\nfilter them and use them.\n\n1102\n01:03:01,700 --> 01:03:06,670\nAnd if you're creative, you can actually\nuse a distribute list to filter,\n\n1103\n01:03:07,770 --> 01:03:10,350\nI mean a previous list,\nto filter inbound and outbound.\n\n1104\n01:03:10,350 --> 01:03:11,188\nYou can use the same list.\n\n1105\n01:03:11,188 --> 01:03:12,050\nAll right?\n\n1106\n01:03:12,050 --> 01:03:13,950\nLet me show you what I mean.\n\n1107\n01:03:13,950 --> 01:03:19,424\nOn headquarters if I take\na look at my routes for EIGRP.\n\n1108\n01:03:19,424 --> 01:03:20,300\nOkay.\n\n1109\n01:03:20,300 --> 01:03:22,870\nI'm learning a bunch of routes.\n\n1110\n01:03:22,870 --> 01:03:24,960\nAnd I can see all the different\nstuff that I'm learning here.\n\n1111\n01:03:24,960 --> 01:03:28,060\nAnd I'm learning the 116s and\n171s and 205s.\n\n1112\n01:03:28,060 --> 01:03:31,130\nAnd remember in\nthe distribute list example\n\n1113\n01:03:31,130 --> 01:03:35,310\nhow I was learning all these 205.160's.\n\n1114\n01:03:35,310 --> 01:03:38,780\nFrom the two different ISP's.\n\n1115\n01:03:38,780 --> 01:03:39,710\nOkay?\n\n1116\n01:03:39,710 --> 01:03:42,800\nSo, what if I wanna filter\nthose coming in, so\n\n1117\n01:03:42,800 --> 01:03:44,330\nthat I only learn them from one ISP?\n\n1118\n01:03:44,330 --> 01:03:47,760\nJust like we did in\nthe distribute list example.\n\n1119\n01:03:47,760 --> 01:03:50,940\nWell, I can come in and\nI can write a list to filter that.\n\n1120\n01:03:50,940 --> 01:03:52,500\nRight?\nSo let's do that.\n\n1121\n01:03:52,500 --> 01:03:54,510\nSo I'll get into my configuration.\n\n1122\n01:03:54,510 --> 01:03:58,344\nAnd I'll do, ip prefix-list.\n\n1123\n01:03:58,344 --> 01:04:01,070\nAnd I'm gonna go ahead and give it a name.\n\n1124\n01:04:01,070 --> 01:04:03,710\nAll right.\nNow when I give it a name if I'm gonna\n\n1125\n01:04:03,710 --> 01:04:06,254\nbe using this just for\nincoming or just for\n\n1126\n01:04:06,254 --> 01:04:09,390\noutgoing I might call it\nsomething like ERGIP-n.\n\n1127\n01:04:09,390 --> 01:04:12,922\nSo this is gonna be what\nfilters my incoming stuff, or\n\n1128\n01:04:12,922 --> 01:04:18,000\nI might call it eigrp-isp2-in,\nif I'm just gonna apply it to them.\n\n1129\n01:04:18,000 --> 01:04:22,130\nYou give it a name that's meaningful,\nsomething that's important, but I'm just\n\n1130\n01:04:22,130 --> 01:04:28,110\ngonna call it eigrp because this is one\nthat I'm gonna use for eigrp in general.\n\n1131\n01:04:28,110 --> 01:04:35,762\nWe’re basically filtering out some\nof these networks, all right.\n\n1132\n01:04:35,762 --> 01:04:40,813\nSo I’ll come in and\njust say ip prefix-list eigrp and\n\n1133\n01:04:40,813 --> 01:04:47,559\nthen I’m gonna deny 205.160.0.0/16 le 32,\nright.\n\n1134\n01:04:47,559 --> 01:04:51,692\nSo I'm looking for 205.160.0.0/16,\n\n1135\n01:04:51,692 --> 01:04:56,808\njust that whole class B and\nthen I'll block that and any network that\n\n1136\n01:04:56,808 --> 01:05:02,038\nfalls underneath it which if you\nlook these are all /24s, right?\n\n1137\n01:05:02,038 --> 01:05:04,830\nSo I'm gonna get those and knock them out.\n\n1138\n01:05:04,830 --> 01:05:08,130\nNow what I didn't wanna do is specify\na /24 here because I have to do all these\n\n1139\n01:05:08,130 --> 01:05:08,940\ndifferent lines.\n\n1140\n01:05:08,940 --> 01:05:12,931\nAnd so I'm just grabbing\nthem all under that /16 and\n\n1141\n01:05:12,931 --> 01:05:17,889\nanything between /16 and\n/32 is gonna be denied, all right.\n\n1142\n01:05:17,889 --> 01:05:22,804\nSo I better run that and\nthen I'll do an ip\n\n1143\n01:05:22,804 --> 01:05:26,859\nprefix-list eigrp permit any.\n\n1144\n01:05:26,859 --> 01:05:30,842\nWhoops, hang on a second,\nlet me get my syntax right here.\n\n1145\n01:05:30,842 --> 01:05:38,645\nAnd, oh sorry, you can't use the any\ncommand like you do on an ACL.\n\n1146\n01:05:38,645 --> 01:05:44,567\nYou have to do 0.0.0.0/0 le 32, right?\n\n1147\n01:05:44,567 --> 01:05:47,562\nIn prefix list land, that's any, right?\n\n1148\n01:05:47,562 --> 01:05:50,960\nI showed that example earlier in\nthe episode and I didn't type it myself.\n\n1149\n01:05:50,960 --> 01:05:53,590\nSo I'm gonna go ahead and\nspecify that to knock it out.\n\n1150\n01:05:53,590 --> 01:05:55,320\nNow, because I had an error in between,\n\n1151\n01:05:55,320 --> 01:05:58,570\nyou can kinda lose track of where\nyou were in the prefix list, and\n\n1152\n01:05:58,570 --> 01:06:02,340\nthis is where that show IP prefix\nlist command comes in handy.\n\n1153\n01:06:02,340 --> 01:06:05,927\nIf I do a little show ip prefix-list,\n\n1154\n01:06:05,927 --> 01:06:10,307\nI can see here's my\nprefix list called eigrp.\n\n1155\n01:06:10,307 --> 01:06:12,550\nIt's got two entries.\n\n1156\n01:06:12,550 --> 01:06:14,130\nMy first one, sequence five.\n\n1157\n01:06:14,130 --> 01:06:17,264\nI didn't specify sequence number,\nit did it for me, right.\n\n1158\n01:06:17,264 --> 01:06:22,000\nDeny 205 160.0.0/16 less than or\nequal to 32.\n\n1159\n01:06:22,000 --> 01:06:25,860\nAnd then there's my permit, so I can my\nlist was built the way that I wanted to.\n\n1160\n01:06:28,290 --> 01:06:29,210\nAll right, so I've got my list.\n\n1161\n01:06:30,650 --> 01:06:32,940\nWhat if this is the first time that\nI've sat down at this router and\n\n1162\n01:06:32,940 --> 01:06:34,720\nI see the list is there?\n\n1163\n01:06:34,720 --> 01:06:38,070\nDo I know if it is actually implemented,\nif it is in place?\n\n1164\n01:06:38,070 --> 01:06:42,870\nWell, we can pull up the statistics of the\nlist to see if it's actually being used.\n\n1165\n01:06:42,870 --> 01:06:46,070\nIt could be that its attachment is poorly\nwritten, so it's not actually working.\n\n1166\n01:06:46,070 --> 01:06:48,740\nBut, we can just look at its\nstatistics to get an idea and\n\n1167\n01:06:48,740 --> 01:06:54,322\nwe've got a nice little command for that,\nwhich is show ip prefix-list detail.\n\n1168\n01:06:54,322 --> 01:06:58,770\nThat will show all of your prefix\nlists and give you their hit count.\n\n1169\n01:06:58,770 --> 01:07:01,380\nThe hit count is awesome\ncuz that's showing\n\n1170\n01:07:01,380 --> 01:07:04,900\nhow many times this particular\nline in the list has been used.\n\n1171\n01:07:04,900 --> 01:07:09,150\nAnd so if you see all hit count zero's,\nthat means that access list is not\n\n1172\n01:07:09,150 --> 01:07:11,760\nactually or that prefix list\nis not actually being used.\n\n1173\n01:07:11,760 --> 01:07:13,800\nOr it might be attached but\n\n1174\n01:07:13,800 --> 01:07:16,010\nit's written in a way where none\nof it's lines actually match.\n\n1175\n01:07:16,010 --> 01:07:18,560\nAnd if none of it's lines\nmatch what happens?\n\n1176\n01:07:18,560 --> 01:07:19,122\nDenied right?\n\n1177\n01:07:19,122 --> 01:07:20,030\nHere's that deny all.\n\n1178\n01:07:22,710 --> 01:07:26,366\nAll right, so I've got it written and\nwhat I wanna do\n\n1179\n01:07:26,366 --> 01:07:31,364\nis I wanna stop learning those\nnetworks from ISP number 2, all right.\n\n1180\n01:07:31,364 --> 01:07:34,405\nFrom that other guy that's\non the e0/3 interface,\n\n1181\n01:07:34,405 --> 01:07:37,800\nI don't wanna get those routes\nfrom the e0/3 interface.\n\n1182\n01:07:37,800 --> 01:07:39,860\nSo from here I can jump into eigrp.\n\n1183\n01:07:41,940 --> 01:07:42,710\nAnd I can apply it.\n\n1184\n01:07:42,710 --> 01:07:44,500\nNow, this is where it gets a little weird.\n\n1185\n01:07:44,500 --> 01:07:48,100\nSo I've talked about how we wanna use\nprefix lists instead of distribute lists.\n\n1186\n01:07:48,100 --> 01:07:50,820\nWell, it's not that we\ndon't use distribute lists.\n\n1187\n01:07:50,820 --> 01:07:53,760\nIt's that we don't wanna use\ndistribute lists with ACLs.\n\n1188\n01:07:53,760 --> 01:07:56,740\nWe wanna use distribute\nlists with prefix lists.\n\n1189\n01:07:56,740 --> 01:08:01,550\nSo what I'm gonna do is I'm gonna get\nin here and say, distribute-list.\n\n1190\n01:08:01,550 --> 01:08:06,790\nAnd instead of specifying an ACL,\nI'm gonna specify a prefix list.\n\n1191\n01:08:08,660 --> 01:08:14,030\nAnd from here you can specify your prefix\nlist which I called mine eigrp and\n\n1192\n01:08:14,030 --> 01:08:17,830\nthen you can specify whether it's in or\nout, right?\n\n1193\n01:08:17,830 --> 01:08:21,761\nYou can do gateway also which would\nhandle it just with a particular gateway,\n\n1194\n01:08:21,761 --> 01:08:23,550\nthat's pretty rarely used, though.\n\n1195\n01:08:23,550 --> 01:08:27,080\nSo I'm gonna be doing it here\nwith incoming routes, right?\n\n1196\n01:08:27,080 --> 01:08:31,140\nSo I'm getting routes in and\nI wanna filter them out.\n\n1197\n01:08:31,140 --> 01:08:33,820\nAnd I can go beyond that and\nspecify the interface.\n\n1198\n01:08:33,820 --> 01:08:37,800\nAnd I just wanna filter the routes\ncoming in on e0/3, right.\n\n1199\n01:08:37,800 --> 01:08:41,207\nSo remember how my ACL was written,\nblock the 205160,\n\n1200\n01:08:41,207 --> 01:08:45,414\nanything that starts with 205160,\nand then allow everything else.\n\n1201\n01:08:45,414 --> 01:08:50,544\nAnd I'm just applying on an e0/3\nthat points to my ISP number 2,\n\n1202\n01:08:50,544 --> 01:08:52,530\nso I'm gonna block them.\n\n1203\n01:08:52,530 --> 01:08:56,720\nMy other ISP is on e0/2,\nI'm not filtering that one.\n\n1204\n01:08:56,720 --> 01:08:59,310\nSo I'll get all the routes from there and\n\n1205\n01:08:59,310 --> 01:09:01,900\nI should see this convert over and\nwe're fine.\n\n1206\n01:09:01,900 --> 01:09:03,480\nNow, I'd give that just a second.\n\n1207\n01:09:03,480 --> 01:09:06,190\nThere we go, waiting for my resync.\n\n1208\n01:09:06,190 --> 01:09:13,830\nAnd then I'll do a show ip route, and\nI'm looking for my 205160, here they are.\n\n1209\n01:09:13,830 --> 01:09:17,300\nAnd I can see that my prefix\nlist is applying, right?\n\n1210\n01:09:17,300 --> 01:09:21,460\nEverything I'm learning there\nis on the e02, like I expect.\n\n1211\n01:09:21,460 --> 01:09:26,516\nAnd if I do a show ip prefix-list,\nall right.\n\n1212\n01:09:26,516 --> 01:09:30,947\nNothing changes there, but\nif I throw detail on the end,\n\n1213\n01:09:30,947 --> 01:09:36,501\nwhich is what I meant to do, there we go,\nI can see I've got hit counts.\n\n1214\n01:09:36,501 --> 01:09:37,743\nAnd see how big those hit counts are?\n\n1215\n01:09:37,743 --> 01:09:40,564\n64, 51, right?\n\n1216\n01:09:40,564 --> 01:09:42,200\nThose are all the routes coming in.\n\n1217\n01:09:42,200 --> 01:09:44,950\nEach hit is a route, and\n\n1218\n01:09:44,950 --> 01:09:48,340\nthere were a good 25 routes that\nwere 205 to 160 that I filtered out.\n\n1219\n01:09:48,340 --> 01:09:50,530\nSo why is it way higher than that?\n\n1220\n01:09:50,530 --> 01:09:53,100\nWell each time I get an advertisement\n\n1221\n01:09:53,100 --> 01:09:55,440\nI've got to apply that prefix\nlist to filter them out.\n\n1222\n01:09:55,440 --> 01:09:57,600\nSo every time I get an advertisement\nfrom the other router,\n\n1223\n01:09:57,600 --> 01:09:59,710\nI'm running this to filter it down, but\n\n1224\n01:09:59,710 --> 01:10:03,540\nthe prefix list is looking just at\nthat subnet mask, blocking them out,\n\n1225\n01:10:03,540 --> 01:10:07,960\ndoing it very quickly, very efficiently,\nthis is a great way to do it, right?\n\n1226\n01:10:07,960 --> 01:10:10,180\nIt's still a distribute list, but\n\n1227\n01:10:10,180 --> 01:10:14,620\nwhat's powering the distribute list is\na prefix list, not an ACL, all right?\n\n1228\n01:10:14,620 --> 01:10:17,030\nSo very powerful right there.\n\n1229\n01:10:17,030 --> 01:10:23,330\nSo my routing table is now updated,\nand that was an incoming prefix list.\n\n1230\n01:10:23,330 --> 01:10:25,710\nIf I wanna do an outgoing, right?\n\n1231\n01:10:25,710 --> 01:10:29,420\nIf I look at Branch 1, Branch 1 is\ngetting all of its routes from me.\n\n1232\n01:10:29,420 --> 01:10:31,900\nIf I look at its routing table, right?\n\n1233\n01:10:31,900 --> 01:10:34,470\nIt's learning about all\nof this stuff on e0/0.\n\n1234\n01:10:34,470 --> 01:10:38,339\nIn fact, every single route in its\nrouting table should be coming from e0/0.\n\n1235\n01:10:38,339 --> 01:10:40,620\nIt's all coming from headquarters, right?\n\n1236\n01:10:40,620 --> 01:10:43,680\nBranch 1 has just connected to\nheadquarters and that's it.\n\n1237\n01:10:45,040 --> 01:10:49,861\nI might not want these 205.160 routes\nto show up at all for Branch 1.\n\n1238\n01:10:49,861 --> 01:10:52,083\nIf I don't want them to show up at all for\nBranch 1,\n\n1239\n01:10:52,083 --> 01:10:54,120\njust have it use its default gateway,\nright?\n\n1240\n01:10:54,120 --> 01:10:55,560\nIts gateway of last resort.\n\n1241\n01:10:55,560 --> 01:10:58,560\nIf I want that, I can filter these out for\nmy advertisements.\n\n1242\n01:10:58,560 --> 01:11:02,310\nWhy even advertise at the Branch 1 if it\ncan just use its gateway of last resort.\n\n1243\n01:11:02,310 --> 01:11:05,390\nWe'll make its routing table really small,\nall right?\n\n1244\n01:11:05,390 --> 01:11:10,970\nI can go back to HQ and I can apply\noutbound prefix list to stop it.\n\n1245\n01:11:10,970 --> 01:11:14,290\nNow because of the way I wrote my ACL,\nI can actually recycle it, all right?\n\n1246\n01:11:14,290 --> 01:11:15,580\nThis is environmentally friendly.\n\n1247\n01:11:16,690 --> 01:11:17,900\nIf I, actually, here.\n\n1248\n01:11:19,780 --> 01:11:24,160\nLet me pull up that\nprefix list that I wrote.\n\n1249\n01:11:25,280 --> 01:11:26,140\nThere we go.\n\n1250\n01:11:26,140 --> 01:11:30,790\nSo the way I wrote that prefix list,\nI said deny 205.160.0.0/16 through 32,\n\n1251\n01:11:30,790 --> 01:11:35,280\nand then permit everything else.\n\n1252\n01:11:35,280 --> 01:11:37,228\nI didn't specify a host, right.\n\n1253\n01:11:37,228 --> 01:11:39,588\nWhere I was learning that from or\nanything crazy like that.\n\n1254\n01:11:39,588 --> 01:11:42,073\nBecause I knew I didn't need to,\nwell I didn't want to.\n\n1255\n01:11:42,073 --> 01:11:46,250\n[LAUGH] But I didn't need to cuz I\nattached it to an interface, right?\n\n1256\n01:11:46,250 --> 01:11:50,660\nAnd, when it was incoming on\nthe interface pointing to one ISP.\n\n1257\n01:11:50,660 --> 01:11:53,890\nThat's all it filtered, and\nit left the other ISP alone.\n\n1258\n01:11:53,890 --> 01:11:57,676\nBut if I put this as\nan outbound to Branch 1, well,\n\n1259\n01:11:57,676 --> 01:12:01,120\nit's gonna filter that\nall across the board.\n\n1260\n01:12:01,120 --> 01:12:03,811\nAnd if I don't even specify\nan outbound interface at all.\n\n1261\n01:12:03,811 --> 01:12:06,610\nIf I just say that this is an outbound.\n\n1262\n01:12:06,610 --> 01:12:08,085\nThen it'll filter it all over.\n\n1263\n01:12:08,085 --> 01:12:08,967\nRight?\n\n1264\n01:12:08,967 --> 01:12:14,055\nSo I can jump into router eigrp 1,\n\n1265\n01:12:14,055 --> 01:12:19,150\ndistribute-list prefix eigrp.\n\n1266\n01:12:19,150 --> 01:12:24,580\nThat's the name of my prefix list,\nand then I can just specify out.\n\n1267\n01:12:24,580 --> 01:12:26,380\nI'm not gonna specify an interface here.\n\n1268\n01:12:26,380 --> 01:12:31,647\nI'm just gonna say when I advertise, don't\nbother advertising the 205.160 network,\n\n1269\n01:12:31,647 --> 01:12:35,482\nright, because all of the routers\nbranch 1, branch 2, branch 3,\n\n1270\n01:12:35,482 --> 01:12:37,370\nthey all come to me anyway.\n\n1271\n01:12:37,370 --> 01:12:39,620\nThey can just use the gateway\nof last resort, right?\n\n1272\n01:12:39,620 --> 01:12:42,110\nOne route to replace all\nof these other ones.\n\n1273\n01:12:43,750 --> 01:12:44,430\nAll right.\n\n1274\n01:12:44,430 --> 01:12:46,670\nThere goes my adjacencies.\n\n1275\n01:12:46,670 --> 01:12:53,676\nUpdating, and if I jump back to branch1\nand I take a look at its routing table.\n\n1276\n01:12:53,676 --> 01:12:54,605\nAll right?\n\n1277\n01:12:54,605 --> 01:12:59,980\nThere's the 116s,\nthe 171s, and no 205.160s.\n\n1278\n01:12:59,980 --> 01:13:00,810\nThey've been filtered out.\n\n1279\n01:13:01,850 --> 01:13:04,630\nNow, we got the exact same results\n\n1280\n01:13:04,630 --> 01:13:07,690\nearlier in the show when we were\nusing distribute list with ACLs.\n\n1281\n01:13:07,690 --> 01:13:10,520\nSo if they do the same thing,\nwhy not just use the ACLs?\n\n1282\n01:13:10,520 --> 01:13:12,170\nIt really boils down to performance.\n\n1283\n01:13:12,170 --> 01:13:15,670\nYou'll get better performance out of\nprefix lists, so you should use them.\n\n1284\n01:13:15,670 --> 01:13:17,115\nAnd they're easier,\nright they're the syntax.\n\n1285\n01:13:17,115 --> 01:13:19,896\nA lot more simple and\nstraight forward with a prefix list.\n\n1286\n01:13:22,595 --> 01:13:26,152\nAll right, so\nthat's an example with EIGRP,\n\n1287\n01:13:26,152 --> 01:13:29,380\nI wanna show you the same thing with OSPF.\n\n1288\n01:13:29,380 --> 01:13:30,557\nRight?\n\n1289\n01:13:30,557 --> 01:13:34,337\nNow OSPF is actually\nimplemented the same exact way.\n\n1290\n01:13:34,337 --> 01:13:37,841\nIf I wanna achieve things, then I can\nactually reuse that same prefix list,\n\n1291\n01:13:37,841 --> 01:13:40,197\nit's just a different protocol right.\n\n1292\n01:13:40,197 --> 01:13:42,587\nBut I'm all implemented here with EIGRP.\n\n1293\n01:13:43,817 --> 01:13:47,917\nSo let's do this, let's stop and\ntake a quick break and during the break,\n\n1294\n01:13:47,917 --> 01:13:51,590\nI'm just gonna wipe out eigrp and\nreplace it with ospf.\n\n1295\n01:13:51,590 --> 01:13:53,578\nAnd then we'll run through\nthat implementation again and\n\n1296\n01:13:53,578 --> 01:13:55,740\nget a chance to see it under OSPF.\n\n1297\n01:13:55,740 --> 01:13:59,165\nSo stay with us,\nwe'll be back in just a moment.\n\n1298\n01:13:59,165 --> 01:14:05,271\n[SOUND].\n\n1299\n01:14:05,271 --> 01:14:07,190\nAll right, welcome back everybody.\n\n1300\n01:14:07,190 --> 01:14:10,000\nSo the last example we\nsaw was under EIGRP, and\n\n1301\n01:14:10,000 --> 01:14:12,040\nI just wanna do the same thing under OSPF.\n\n1302\n01:14:12,040 --> 01:14:14,580\nThe process is basically identical.\n\n1303\n01:14:14,580 --> 01:14:17,000\nKeep in mind that\n\n1304\n01:14:17,000 --> 01:14:21,880\noutbound prefix lists in OSPF are rarely\nuseful unless you're on an ABR, right?\n\n1305\n01:14:21,880 --> 01:14:23,110\nJust like with the ACLs, right?\n\n1306\n01:14:23,110 --> 01:14:24,430\nReally the same thing.\n\n1307\n01:14:24,430 --> 01:14:26,230\nBut I don't think I showed that last time.\n\n1308\n01:14:26,230 --> 01:14:31,120\nI'll show it this time how I will block\na network from being advertised and\n\n1309\n01:14:31,120 --> 01:14:32,620\nanother router will still learn it.\n\n1310\n01:14:32,620 --> 01:14:33,830\nWe'll get a chance to see that.\n\n1311\n01:14:33,830 --> 01:14:36,080\nSo let's jump in and take a look at that.\n\n1312\n01:14:36,080 --> 01:14:38,440\nSo, here I am on my headquarters router.\n\n1313\n01:14:38,440 --> 01:14:39,690\nAnd just like before,\n\n1314\n01:14:39,690 --> 01:14:43,110\nif I look at my routing table I've got all\nthese routes I'm learning from the ISPs.\n\n1315\n01:14:43,110 --> 01:14:48,150\nAnd I think I've been targeting,\nwhat, the 205.160s most of the time.\n\n1316\n01:14:48,150 --> 01:14:50,890\nSo let's say I wanna get back in and\nstart to block those.\n\n1317\n01:14:50,890 --> 01:14:53,130\nBut I'm gonna be a little\nmore aggressive this time.\n\n1318\n01:14:53,130 --> 01:14:56,820\nLet's say that I wanna make sure that\nI don't learn the 205.160's at all.\n\n1319\n01:14:56,820 --> 01:15:00,010\nI don't want them in my routing\ntable here in the headquarters.\n\n1320\n01:15:00,010 --> 01:15:01,986\nRight?\nSo I'm just gonna block out the 205.160's.\n\n1321\n01:15:01,986 --> 01:15:03,605\nOkay.\n\n1322\n01:15:03,605 --> 01:15:08,069\nWell, we can whip up a quick access\nlist that does exactly that,\n\n1323\n01:15:08,069 --> 01:15:09,813\nright, or prefix list.\n\n1324\n01:15:09,813 --> 01:15:11,105\nThat's the whole point of this.\n\n1325\n01:15:11,105 --> 01:15:15,553\nSo, I'll say ip prefix -List and\nthen I'll give it a name or a number or\n\n1326\n01:15:15,553 --> 01:15:19,633\nwhatever, I'm gonna call this\none ospf-in and then if I wanna,\n\n1327\n01:15:19,633 --> 01:15:23,146\nI'll go ahead and\nspecify sequence numbers this time.\n\n1328\n01:15:23,146 --> 01:15:29,570\nSo I'll say sequence 10\ndeny 205.160.0.0 /16 and\n\n1329\n01:15:29,570 --> 01:15:33,521\nthen I'll say less than or equal to 32.\n\n1330\n01:15:33,521 --> 01:15:34,590\nAll right?\n\n1331\n01:15:34,590 --> 01:15:39,168\nSo if there's a /17, /18 anything\nunderneath that, I'll block those too.\n\n1332\n01:15:39,168 --> 01:15:40,825\nAll right?\n\n1333\n01:15:40,825 --> 01:15:46,275\nAnd then I'll do a ip prefix-list, and\nyou see I almost typed access list.\n\n1334\n01:15:46,275 --> 01:15:47,555\nIt's kinda ingrained in your mind.\n\n1335\n01:15:48,755 --> 01:15:56,065\nNow we'll do seq 20 permit, and I'll\nlet everything else come in, all right?\n\n1336\n01:15:56,065 --> 01:15:57,965\nSo, I'm gonna just block those.\n\n1337\n01:15:57,965 --> 01:16:00,015\nI don't wanna learn 205.160 at all, right?\n\n1338\n01:16:02,610 --> 01:16:07,290\nSo I can jump into my routing protocol and\nthen we can apply it.\n\n1339\n01:16:07,290 --> 01:16:11,090\nAnd just like iegrp,\nI'll apply it with a distribute list.\n\n1340\n01:16:11,090 --> 01:16:13,350\nAnd it's a prefix list.\n\n1341\n01:16:13,350 --> 01:16:18,675\nI called it ospf in and\nI need to say that it's, well, incoming.\n\n1342\n01:16:18,675 --> 01:16:19,620\nRight?\n\n1343\n01:16:19,620 --> 01:16:22,920\nAnd if I wanted to filter from\none of my ISPs specifically\n\n1344\n01:16:22,920 --> 01:16:25,290\nI would follow this up with\nthe interface they were on.\n\n1345\n01:16:25,290 --> 01:16:27,530\nAll right, but in my case,\nI wanna filter it totally.\n\n1346\n01:16:27,530 --> 01:16:29,250\nI don't wanna learn these from anybody.\n\n1347\n01:16:29,250 --> 01:16:31,980\nI don't care who's trying to tell me,\nI don't wanna learn it.\n\n1348\n01:16:31,980 --> 01:16:33,490\nAnd so I'll just press Enter.\n\n1349\n01:16:33,490 --> 01:16:37,140\nAnd now I'm not gonna learn those.\n\n1350\n01:16:37,140 --> 01:16:39,410\nOkay?\nNow OSPF sometimes will pick this up\n\n1351\n01:16:39,410 --> 01:16:42,130\nreally fast and\nremove these and off you go.\n\n1352\n01:16:42,130 --> 01:16:45,350\nOther times, you have to wait for\nits time out and depending on your system,\n\n1353\n01:16:45,350 --> 01:16:48,070\nthe time out could be as\nmuch as a minute and a half.\n\n1354\n01:16:48,070 --> 01:16:51,930\nIf you want to force this along,\nyou can reset your OSPF process.\n\n1355\n01:16:51,930 --> 01:16:53,450\nNot a good idea in\na production environment.\n\n1356\n01:16:53,450 --> 01:16:56,270\nIn a production environment just wait,\nbut here in the lab, I'll go ahead and\n\n1357\n01:16:56,270 --> 01:16:58,780\nsay clear ip ospf process.\n\n1358\n01:17:00,980 --> 01:17:03,210\nAnd that'll force that to\ntake effect right now.\n\n1359\n01:17:03,210 --> 01:17:03,720\nAll right.\n\n1360\n01:17:03,720 --> 01:17:05,510\nNotice how I dumped all my adjacencies,\n\n1361\n01:17:05,510 --> 01:17:06,950\nthat's why you don't wanna\ndo that in production.\n\n1362\n01:17:06,950 --> 01:17:09,100\nAnd it will recover really quickly, but\n\n1363\n01:17:09,100 --> 01:17:11,700\nyour end users will probably notice\nthat brief moment of network outage.\n\n1364\n01:17:11,700 --> 01:17:14,913\nSo no not necessarily something\nyou want to do in production.\n\n1365\n01:17:14,913 --> 01:17:19,200\nAll right, but if I look at my routing\ntable, here inside of my headquarters,\n\n1366\n01:17:19,200 --> 01:17:21,400\nI've still got those 116 networks.\n\n1367\n01:17:21,400 --> 01:17:25,890\nI've still got the 171 networks,\nbut the 205.160s are now gone.\n\n1368\n01:17:25,890 --> 01:17:28,450\nI'm learning them,\nthey are coming in from the other routers,\n\n1369\n01:17:28,450 --> 01:17:32,289\nthe ISPs, I'm just filtering them and not\nletting them make it in the routing table.\n\n1370\n01:17:33,370 --> 01:17:39,205\nNow, headquarters is technically\nlike a border router,\n\n1371\n01:17:39,205 --> 01:17:43,530\nright, except I have my OSPF\nextending out to the ISPs.\n\n1372\n01:17:43,530 --> 01:17:47,480\nSo actually I have the ISPs in area 0,\nheadquarters in area 0,\n\n1373\n01:17:47,480 --> 01:17:48,750\nbranch1 is in area 0.\n\n1374\n01:17:48,750 --> 01:17:52,870\nSo when I start filtering these out, they\ndon't make it into my routing table, but\n\n1375\n01:17:52,870 --> 01:17:54,950\nthey will make it over to branch1.\n\n1376\n01:17:54,950 --> 01:17:57,558\nRight?\nWell, not necessarily.\n\n1377\n01:17:57,558 --> 01:18:00,760\nBranch 1 may or may not have\nvisibility straight out to the ISPs.\n\n1378\n01:18:00,760 --> 01:18:04,550\nIf it has its own connectivity to the ISP,\nthen yeah,\n\n1379\n01:18:04,550 --> 01:18:07,940\nit will learn it just by bypassing me and\ngoing to them direct.\n\n1380\n01:18:07,940 --> 01:18:10,010\nIf it doesn’t have direct\nconnectivity to them, though,\n\n1381\n01:18:10,010 --> 01:18:11,840\nthen it won’t learn it, right?\n\n1382\n01:18:11,840 --> 01:18:14,480\nSo I block it from my routing table,\nlet’s jump over to branch 1 and\n\n1383\n01:18:14,480 --> 01:18:15,380\nsee what we’ve got there.\n\n1384\n01:18:16,790 --> 01:18:20,458\nIf I look at its routing table,\nthere’s the 116s,\n\n1385\n01:18:20,458 --> 01:18:25,022\nthere’s the 171s, and\nthere's the 205.160s, okay?\n\n1386\n01:18:25,022 --> 01:18:32,438\nNow, if I look at where it's coming from,\nI learn 205.160 from 192.168.0.01.\n\n1387\n01:18:32,438 --> 01:18:33,438\nWho is that?\n\n1388\n01:18:33,438 --> 01:18:35,285\nThat's the headquarters router.\n\n1389\n01:18:35,285 --> 01:18:37,215\nI learned it from the headquarters router.\n\n1390\n01:18:37,215 --> 01:18:41,605\nThe headquarters router is blocking\nthe routes from its routing table, but\n\n1391\n01:18:41,605 --> 01:18:43,705\nnot blocking it from its OSPF database.\n\n1392\n01:18:43,705 --> 01:18:47,325\nIt makes it to the OSPF database, it just\ndoesn't make it into the routing table.\n\n1393\n01:18:47,325 --> 01:18:50,425\nThat's a key thing to understand\nwith distribute lists like this, and\n\n1394\n01:18:50,425 --> 01:18:52,405\nprefix lists in general, right?\n\n1395\n01:18:52,405 --> 01:18:55,205\nAnd OSPF is the trickiest one, right?\n\n1396\n01:18:55,205 --> 01:18:57,380\nThat's where this becomes\nreally challenging.\n\n1397\n01:18:57,380 --> 01:19:00,440\nIf I add an outbound list, right, so\n\n1398\n01:19:00,440 --> 01:19:03,290\nif I wanna block this from\nbeing advertised out.\n\n1399\n01:19:03,290 --> 01:19:05,260\nWell, that will take care of it, right?\n\n1400\n01:19:05,260 --> 01:19:05,760\nWell, let's see.\n\n1401\n01:19:07,070 --> 01:19:12,490\nIf I do a prefix-list and\nI'll call this one OSPF-out.\n\n1402\n01:19:12,490 --> 01:19:16,022\nSo I'm gonna filter my\noutbound advertisements.\n\n1403\n01:19:16,022 --> 01:19:23,220\nAnd I'm gonna do a deny 205.160.0.0/16,\nand less than or equal to 32.\n\n1404\n01:19:23,220 --> 01:19:29,640\nAnd maybe I'll go crazy\njust to have some fun here.\n\n1405\n01:19:29,640 --> 01:19:33,010\nI'll go ahead and add some more to it.\n\n1406\n01:19:33,010 --> 01:19:34,740\nI'm gonna deny the 171 networks.\n\n1407\n01:19:34,740 --> 01:19:40,147\nAnd I don't actually remember their\nsubnet, so I'll just go all out and go /8.\n\n1408\n01:19:40,147 --> 01:19:45,773\n[LAUGH] And, or actually I can see\nright here, so I've got 172.16 or\n\n1409\n01:19:45,773 --> 01:19:50,063\n171, it looks like there\nare a bunch of slash 32s.\n\n1410\n01:19:50,063 --> 01:19:53,260\nAll right, well there are a bunch\nof slash 32s, that's not fun.\n\n1411\n01:19:53,260 --> 01:19:57,160\nSo I guess I'll do a greater than or\nequal to slash 32 to knock those out.\n\n1412\n01:19:57,160 --> 01:20:00,570\nAll right, and oops,\ngreater than or equal to 32.\n\n1413\n01:20:00,570 --> 01:20:02,405\nAll right and\nthen I'll permit everything else.\n\n1414\n01:20:02,405 --> 01:20:05,344\nSo we'll go ahead and just add that in.\n\n1415\n01:20:08,930 --> 01:20:10,508\nWith my little catchall entry.\n\n1416\n01:20:12,479 --> 01:20:12,979\nThere.\n\n1417\n01:20:14,140 --> 01:20:17,720\nSo I'm basically saying,\nI don't want to advertise out 205.160.\n\n1418\n01:20:17,720 --> 01:20:19,200\nI won't send that to anybody.\n\n1419\n01:20:19,200 --> 01:20:24,440\nAnd I'm not going to advertise 171 dot\nwhatever if it's a 32 bit subnet mask,\n\n1420\n01:20:24,440 --> 01:20:26,540\nright, it's got to be greater than or\nequal to 32, right.\n\n1421\n01:20:27,736 --> 01:20:31,480\nI'm not going to advertise those out\neither, and looking at my routing table\n\n1422\n01:20:31,480 --> 01:20:34,710\nI've got a ton of those slash 32s,\nyou know they're all in there.\n\n1423\n01:20:34,710 --> 01:20:37,180\nOkay, so I need to go and\nattach that to OSPF.\n\n1424\n01:20:37,180 --> 01:20:40,820\nAnd so I'll do my distribute dash list\n\n1425\n01:20:41,920 --> 01:20:45,780\nprefix and\nI called this one OSPF dash out.\n\n1426\n01:20:47,210 --> 01:20:51,390\nAnd I want this to be an outbound,\nand then I can specify the interface.\n\n1427\n01:20:51,390 --> 01:20:54,580\nNow, if I leave it be and\ndon't specify an interface,\n\n1428\n01:20:54,580 --> 01:20:56,080\nit's going to do this everywhere.\n\n1429\n01:20:56,080 --> 01:21:00,150\nI just want this to affect branch1, and\nbranch1 for me is on my E0/0 interface,\n\n1430\n01:21:00,150 --> 01:21:03,540\nso I am going to attach\nit just to that on and\n\n1431\n01:21:03,540 --> 01:21:09,210\nnotice what I get interface not allowed\nwithout in case of OSPF, right?\n\n1432\n01:21:09,210 --> 01:21:13,380\nOSPF these outbound distribute\nlists don't work very well.\n\n1433\n01:21:13,380 --> 01:21:17,230\nAnd so they actually block it there saying\nwhat you're trying to do is not effective,\n\n1434\n01:21:17,230 --> 01:21:18,940\nit's not going to work.\n\n1435\n01:21:18,940 --> 01:21:23,560\nAnd if you leave it off\nlike that it takes it\n\n1436\n01:21:23,560 --> 01:21:27,100\nnow it's your whole router, which is\naffecting the way that OSPF sends out.\n\n1437\n01:21:27,100 --> 01:21:29,840\nRemember you're using multicast\naddresses to send with OSPF.\n\n1438\n01:21:29,840 --> 01:21:33,000\nAnd it's going out,\nall the routers trying to learn it.\n\n1439\n01:21:33,000 --> 01:21:35,090\nThat's why it's not letting\nme specify that interface.\n\n1440\n01:21:35,090 --> 01:21:40,183\nSo here, it does go in place,\nI am no longer advertising 205160 or 171.\n\n1441\n01:21:40,183 --> 01:21:45,105\nAll right, now just to make sure we get\n\n1442\n01:21:45,105 --> 01:21:48,545\na good clean test of this,\nI'm going to clear my OSPF process.\n\n1443\n01:21:50,065 --> 01:21:52,162\nAll right, and I'm going to do\nthe same thing on branch one,\n\n1444\n01:21:52,162 --> 01:21:54,645\nbecause branch one is really the one\nthat's going to be affected here.\n\n1445\n01:21:59,398 --> 01:22:02,640\nBranch one does not have\na connection to the ISPs.\n\n1446\n01:22:02,640 --> 01:22:06,850\nSo all those ISP networks its\nlearning through headquarters, so\n\n1447\n01:22:06,850 --> 01:22:11,200\nwhen I refresh this anything I learn I\nshould be getting from headquarters right?\n\n1448\n01:22:11,200 --> 01:22:12,980\nWell, not necessarily.\n\n1449\n01:22:12,980 --> 01:22:15,940\nWith a multicast,\nI can pass right through headquarters over\n\n1450\n01:22:15,940 --> 01:22:19,430\nto the other routers on the other side,\nbecause we're all in area zero,\n\n1451\n01:22:19,430 --> 01:22:22,630\nwe're all in the same area, I need to\ncommunicate with those other routers.\n\n1452\n01:22:22,630 --> 01:22:25,550\nI can build a bigger picture\nof the network that way and\n\n1453\n01:22:25,550 --> 01:22:28,410\nthat means I may still be\nlearning some routes, but\n\n1454\n01:22:28,410 --> 01:22:31,830\nI hopefully won't be learning them\nfrom headquarters, let's see.\n\n1455\n01:22:31,830 --> 01:22:34,485\nSo if I do a show IP route and\nI'll just prune it down to OSPF.\n\n1456\n01:22:36,370 --> 01:22:39,270\nThere's the 116's,\nI expected to see those.\n\n1457\n01:22:39,270 --> 01:22:43,440\nThere's the 171's and here's the 205's.\n\n1458\n01:22:43,440 --> 01:22:44,830\nAll right.\n\n1459\n01:22:44,830 --> 01:22:48,680\nThey're still coming in and\nit goes to show you right there\n\n1460\n01:22:48,680 --> 01:22:54,090\nthat the outbound distribute, or outbound\nprefix list and distribute list with OSPF.\n\n1461\n01:22:54,090 --> 01:22:57,100\nThey rarely achieve what\nyou set out to achieve.\n\n1462\n01:22:57,100 --> 01:22:59,240\nIf I really wanted these to work,\n\n1463\n01:22:59,240 --> 01:23:03,960\nwhat I would need to do is turn the head\nquarter driver into a quarter router.\n\n1464\n01:23:03,960 --> 01:23:10,190\nHave my ISP be in one area,\nhave my branches in another area, and then\n\n1465\n01:23:10,190 --> 01:23:13,850\nmy outbound distribute list would work\nbecause now I'm going in between areas.\n\n1466\n01:23:13,850 --> 01:23:17,850\nBut as long as it stays the same, it's\nstill learning these, it's learning them\n\n1467\n01:23:17,850 --> 01:23:23,460\nvia 192.168.0.1, but it's finding them by\ncontacting the other routers in area 0.\n\n1468\n01:23:23,460 --> 01:23:26,580\nThat's how it's building its tree, and\nthat's why those don't get filtered out.\n\n1469\n01:23:28,490 --> 01:23:32,500\nSo your only option here Is to either\nconvert headquarters into a border router\n\n1470\n01:23:32,500 --> 01:23:35,440\nor use a different method for\nfiltering these out.\n\n1471\n01:23:35,440 --> 01:23:38,070\nThere are other methods like metric\nadjustments that will work in this\n\n1472\n01:23:38,070 --> 01:23:42,300\nscenario, but here it's not going to work.\n\n1473\n01:23:42,300 --> 01:23:44,040\nSo that's OSPF.\n\n1474\n01:23:44,040 --> 01:23:47,910\nThe last one is BGP, and\nBGP is pretty straightforward.\n\n1475\n01:23:47,910 --> 01:23:50,880\nIt's actually a little bit\neasier than what we saw before.\n\n1476\n01:23:50,880 --> 01:23:56,850\nIf I want to apply this on BGP, we'll just\nuse my ISPs as an example, all right?\n\n1477\n01:23:56,850 --> 01:24:01,752\nHere on ISP1,\nif I look at my routes for BGP,\n\n1478\n01:24:01,752 --> 01:24:05,632\nI've got those 205.160s.\n\n1479\n01:24:05,632 --> 01:24:06,333\nOkay?\n\n1480\n01:24:06,333 --> 01:24:12,470\nAnd ISP1 has direct connections\nto 205.160, and so does ISP2.\n\n1481\n01:24:13,770 --> 01:24:16,350\nBut, because of the way BGP works,\n\n1482\n01:24:16,350 --> 01:24:18,870\nwe're learning about\nthe routes from the other guy.\n\n1483\n01:24:18,870 --> 01:24:25,014\nSo, if I look at its routing table,\nI'll see routes for 205.160 also.\n\n1484\n01:24:25,014 --> 01:24:25,521\nOkay?\n\n1485\n01:24:25,521 --> 01:24:28,050\nSo, if I've already got the routes,\n\n1486\n01:24:28,050 --> 01:24:30,900\ndo I really need to learn\nthem from somebody else?\n\n1487\n01:24:30,900 --> 01:24:32,650\nI may want to prune that out.\n\n1488\n01:24:32,650 --> 01:24:35,710\nSo maybe here on ISP1,\nI say here's what I want to do.\n\n1489\n01:24:35,710 --> 01:24:41,870\nFirst off, I do not want to learn\nany 205.160 routes for my ISP2.\n\n1490\n01:24:41,870 --> 01:24:44,730\nI've got them direct, I don't need\nsomebody else telling me how to get there.\n\n1491\n01:24:44,730 --> 01:24:46,340\nI don't want to block\nthose from coming in.\n\n1492\n01:24:47,420 --> 01:24:51,322\nAnd then conversely I say well, it's kind\nof published for me to be telling them\n\n1493\n01:24:51,322 --> 01:24:54,570\nabout 205.160 so maybe I'll stop\nmyself from advertising out.\n\n1494\n01:24:54,570 --> 01:24:56,760\nI don't want to tell them 205160.\n\n1495\n01:24:56,760 --> 01:25:02,290\nSo we can create a prefix list that\n\n1496\n01:25:02,290 --> 01:25:05,910\nwill filter based on that and\nset up the way we want.\n\n1497\n01:25:05,910 --> 01:25:09,600\nNow because I'm filtering the same\nnetworks in both directions,\n\n1498\n01:25:09,600 --> 01:25:14,230\nI just need one prefix list and I can\nattach it both as inbound and outbound.\n\n1499\n01:25:14,230 --> 01:25:16,770\nSo I'll start by writing that prefix list,\n\n1500\n01:25:16,770 --> 01:25:21,320\nI'll say IP prefix-list and\nI'll give it a name.\n\n1501\n01:25:21,320 --> 01:25:23,280\nNow I'm in autonomous system 100,\n\n1502\n01:25:23,280 --> 01:25:27,310\nI'm going to be filtering my\nconnection to autonomous system 200.\n\n1503\n01:25:27,310 --> 01:25:31,010\nSo for my prefix list, I'm going to\ncall it AS200, all right, just so\n\n1504\n01:25:31,010 --> 01:25:33,170\nI can remember that,\nthat's what this prefix list is for.\n\n1505\n01:25:34,710 --> 01:25:37,426\nAnd then I'll come in and\nI'll say what I'm going to do, and\n\n1506\n01:25:37,426 --> 01:25:41,320\nI'm going to say deny\n205.160.0.0/16 less than or\n\n1507\n01:25:44,730 --> 01:25:48,260\nequal to 32,\nall right anything slash 16 or greater.\n\n1508\n01:25:50,090 --> 01:25:51,740\nAnd then I'm going to\npermit everything else.\n\n1509\n01:25:52,910 --> 01:25:58,060\nSo, I'll just add that in\nPermit 0.0.0.0/0 le 32.\n\n1510\n01:25:58,060 --> 01:26:06,010\nAll right, so there's my prefix list.\n\n1511\n01:26:06,010 --> 01:26:08,951\nI don't want to send 205.160\nnetworks to him, and\n\n1512\n01:26:08,951 --> 01:26:12,830\nI don't want to receive\n205.160 networks from him.\n\n1513\n01:26:12,830 --> 01:26:15,550\nACL's the same, or\nthe prefix list is the same.\n\n1514\n01:26:15,550 --> 01:26:21,280\nSo no sense in writing two\nprefix lists in this case.\n\n1515\n01:26:21,280 --> 01:26:24,800\nThen I just need to get into BGP and\nI'm in autonomous system 100.\n\n1516\n01:26:24,800 --> 01:26:29,120\nI'll get into my address-family.\n\n1517\n01:26:29,120 --> 01:26:33,360\nAnd then I'll apply the prefix\nlist to the neighbor.\n\n1518\n01:26:33,360 --> 01:26:39,490\nNow, when I did this in EIGRP and OSPF, I\ndid it with a distribute list, all right?\n\n1519\n01:26:39,490 --> 01:26:43,950\nBut BGP has native support for prefix\nlists right in the neighbor commands.\n\n1520\n01:26:43,950 --> 01:26:46,220\nWe actually don't need\na distribute list this time.\n\n1521\n01:26:46,220 --> 01:26:48,400\nWe can just come right in here and\nsay neighbor.\n\n1522\n01:26:50,270 --> 01:26:53,600\nAnd the IP address of the neighbor, right?\n\n1523\n01:26:53,600 --> 01:26:58,356\nSo 96.0.0.2, in my case, prefix-list and\n\n1524\n01:26:58,356 --> 01:27:04,610\nthe name of the list, AS200, and\nwhether it's in or out, right?\n\n1525\n01:27:04,610 --> 01:27:05,610\nI want it to be both.\n\n1526\n01:27:05,610 --> 01:27:08,280\nI want it to be in and out.\n\n1527\n01:27:08,280 --> 01:27:10,960\nSo I'm just going to run that same\ncommand and change in to out.\n\n1528\n01:27:10,960 --> 01:27:14,030\nIn my scenario, because I'm trying to stop\nthis network from coming in, as well as\n\n1529\n01:27:14,030 --> 01:27:17,810\nstop the same network from going out,\nsame ACL applied in both directions.\n\n1530\n01:27:20,573 --> 01:27:25,478\nThen I can get out of my config and if I\nwait, BGP will sort that out eventually.\n\n1531\n01:27:25,478 --> 01:27:29,540\nI'm going to usher it along, so\nI'll do a little clear IP BGP 200.\n\n1532\n01:27:29,540 --> 01:27:33,454\nSo I'm going to clear my connection\nautonomous system 200 and\n\n1533\n01:27:33,454 --> 01:27:36,880\nI'll give it just a second\nwhile it kind of relearn that.\n\n1534\n01:27:37,900 --> 01:27:40,950\nWhat should happen now\nis one of two things.\n\n1535\n01:27:40,950 --> 01:27:47,650\nOne, I should no longer be getting BGP\nroutes for those 205.160 networks.\n\n1536\n01:27:47,650 --> 01:27:52,190\nSo I should see my own, but I shouldn't\nsee the ones coming from the other ISP.\n\n1537\n01:27:53,320 --> 01:27:55,907\nBut I did just apply with filter with BGP.\n\n1538\n01:27:55,907 --> 01:27:58,287\nI could learn it from other protocols,\nright?\n\n1539\n01:27:58,287 --> 01:28:01,561\nMy IGP,\nif I'm leaning it from EIGRO or OSPF.\n\n1540\n01:28:01,561 --> 01:28:03,744\nAnd those may make it\ninto the routing table.\n\n1541\n01:28:03,744 --> 01:28:07,884\nThey've got a higher administrative\ndistance, but once I've filtered out this,\n\n1542\n01:28:07,884 --> 01:28:09,910\nthe other ones might jump in.\n\n1543\n01:28:09,910 --> 01:28:10,560\nOkay.\n\n1544\n01:28:10,560 --> 01:28:11,550\nI don't think that's gonna happen,\n\n1545\n01:28:11,550 --> 01:28:13,830\nbecause we put some distribute\nlists on headquarters,\n\n1546\n01:28:13,830 --> 01:28:17,220\nwhich is the only other thing sitting\nbetween these guys, but we’ll see.\n\n1547\n01:28:17,220 --> 01:28:21,050\nWe’ll just take a look at that\nrouting table and see what we’ve got.\n\n1548\n01:28:21,050 --> 01:28:22,360\nActually, let me filter it down to BGP so\n\n1549\n01:28:22,360 --> 01:28:24,790\nwe don’t have to worry about\nthose other protocols.\n\n1550\n01:28:24,790 --> 01:28:27,567\nSo looking at my BGP routing table here,\n\n1551\n01:28:27,567 --> 01:28:31,580\nI’ve got the 171 networks made it in,\nand that’s it.\n\n1552\n01:28:31,580 --> 01:28:34,210\nI lost my 116 networks\n>> [LAUGH]\n\n1553\n01:28:34,210 --> 01:28:34,970\n>> Which must have been coming\n\n1554\n01:28:34,970 --> 01:28:35,670\nthrough headquarters.\n\n1555\n01:28:35,670 --> 01:28:38,620\nAnd my 205.160,\nthat's what I was filtering.\n\n1556\n01:28:38,620 --> 01:28:40,040\nThose are gone now too.\n\n1557\n01:28:40,040 --> 01:28:42,586\nMight be that I'm just being impatient,\nbut\n\n1558\n01:28:42,586 --> 01:28:45,540\nI think I filtered those\nout through headquarters.\n\n1559\n01:28:45,540 --> 01:28:48,712\nBut now they're being filtered out, and\nI'm not learning those networks from\n\n1560\n01:28:48,712 --> 01:28:51,380\nthe neighbor,\nthe 205.160s aren't showing up in there.\n\n1561\n01:28:51,380 --> 01:28:55,758\nBut I bet if I do a show ip route and\nlook at my other routing protocols,\n\n1562\n01:28:55,758 --> 01:28:57,580\nthey're probably in here.\n\n1563\n01:28:57,580 --> 01:28:59,580\nThere's the 116s, the 171s.\n\n1564\n01:28:59,580 --> 01:29:01,500\nYeah.\nThere's the 205.160s.\n\n1565\n01:29:01,500 --> 01:29:04,920\nSee, they're creeping back in from OSPF.\n\n1566\n01:29:04,920 --> 01:29:06,640\nOnce the BGP routes are out of the way,\n\n1567\n01:29:06,640 --> 01:29:11,120\nit frees up the IGPs to be able to jump\nin and populate that routing table.\n\n1568\n01:29:11,120 --> 01:29:13,780\nSo they're still there but\nI know they're being filtered from BGP,\n\n1569\n01:29:13,780 --> 01:29:16,280\nbecause they don't show\nup right there anymore.\n\n1570\n01:29:16,280 --> 01:29:18,200\nAll right,\nthey're not in that show IP route BGP.\n\n1571\n01:29:19,290 --> 01:29:24,440\nI can also verify my statistics by\ndoing show IP, prefix list dash detail.\n\n1572\n01:29:25,690 --> 01:29:26,890\nI'll see it right there.\n\n1573\n01:29:26,890 --> 01:29:31,700\nI get a hit count of 32 on my deny,\na hit count of 53 on my permit, right?\n\n1574\n01:29:31,700 --> 01:29:36,130\nSo I know that it's filtering it out, and\nthose are the networks that I'm getting.\n\n1575\n01:29:36,130 --> 01:29:38,810\nAnd I should see similar activity on ISP2.\n\n1576\n01:29:38,810 --> 01:29:44,270\nISP2 was receiving information about those\nnetworks from 96.00.1, from my ISP1.\n\n1577\n01:29:45,280 --> 01:29:50,160\nAnd if I do a show IP route VGP here, I\n\n1578\n01:29:50,160 --> 01:29:55,160\ncan see that I'm no longer\nreceiving the 205.160s from ISP1.\n\n1579\n01:29:55,160 --> 01:29:56,590\nI'm still connected to ISP1.\n\n1580\n01:29:56,590 --> 01:30:01,170\nI'm learning about those 116 networks, but\nI'm not getting the 205.160s from there.\n\n1581\n01:30:01,170 --> 01:30:01,870\nRight?\n\n1582\n01:30:01,870 --> 01:30:04,870\nSo, pretty easy to implement.\n\n1583\n01:30:04,870 --> 01:30:07,920\nThe big trick with prefix lists\nis just remembering the syntax.\n\n1584\n01:30:07,920 --> 01:30:10,775\nIt's a little bit different, but it's\na lot easier to work with than the ACLs.\n\n1585\n01:30:13,170 --> 01:30:14,260\nAll right, well.\n\n1586\n01:30:14,260 --> 01:30:16,910\nFortunately, I've got\nall of these examples.\n\n1587\n01:30:16,910 --> 01:30:19,900\nAll the different things that I did here\nduring the show are written in the show\n\n1588\n01:30:19,900 --> 01:30:21,400\nnotes which we do post.\n\n1589\n01:30:21,400 --> 01:30:22,580\nIt's these things.\n\n1590\n01:30:22,580 --> 01:30:25,591\nSo when you're watching this episode\nrecorded you'll have that link up at\n\n1591\n01:30:25,591 --> 01:30:27,330\nthe top right where you\ncan view the notes.\n\n1592\n01:30:27,330 --> 01:30:30,830\nAnd you'll get a chance to see all the\ndifferent syntax that I just specified.\n\n1593\n01:30:30,830 --> 01:30:34,255\nReally, you do need to read over it,\nmemorize it,\n\n1594\n01:30:34,255 --> 01:30:39,130\nremember which one's which,\nhow you format it, how you set that data.\n\n1595\n01:30:39,130 --> 01:30:41,583\nUnderstand that, for the exam,\n\n1596\n01:30:41,583 --> 01:30:46,500\nyou need to know both distribute\nlists with ACLs and prefix lists.\n\n1597\n01:30:46,500 --> 01:30:48,250\nYou need to know both.\n\n1598\n01:30:48,250 --> 01:30:53,000\nBut in real-life land, you wanna use\nprefix lists wherever possible, right?\n\n1599\n01:30:53,000 --> 01:30:55,870\nNow this is not the last we're\ngonna see these technologies.\n\n1600\n01:30:55,870 --> 01:30:58,820\nWhen we get into route maps,\nwhen we get into path manipulation,\n\n1601\n01:30:58,820 --> 01:31:00,490\nwhen we start getting to those things.\n\n1602\n01:31:00,490 --> 01:31:02,340\nWe're gonna see prefix\nlists pop back up again,\n\n1603\n01:31:02,340 --> 01:31:04,810\nbecause they're incredibly useful, right?\n\n1604\n01:31:04,810 --> 01:31:09,121\nBut as far as filtering,\nthat's the examples right there,\n\n1605\n01:31:09,121 --> 01:31:11,750\ndistribute lists and prefix lists.\n\n1606\n01:31:11,750 --> 01:31:15,920\nAll right Ronnie, I think I have rambled\non as much as I can ramble on here.\n\n1607\n01:31:15,920 --> 01:31:17,000\nCan you think of anything\nelse to throw in?\n\n1608\n01:31:17,000 --> 01:31:17,880\n>> I cannot.\n\n1609\n01:31:17,880 --> 01:31:19,790\nThat's a lot of route filtering for\nus to do.\n\n1610\n01:31:19,790 --> 01:31:22,670\nGreat amount of practice\nthat we can put into it.\n\n1611\n01:31:22,670 --> 01:31:24,370\nYou need to know these things.\n\n1612\n01:31:24,370 --> 01:31:27,570\nBeing to see where they come\ninto the configuration.\n\n1613\n01:31:27,570 --> 01:31:31,160\nBeing able to understand where they're\ngonna be different, especially with OSPF,\n\n1614\n01:31:31,160 --> 01:31:34,070\nthat's gonna help you tremendously\nwhen you get ready for the exam, too.\n\n1615\n01:31:34,070 --> 01:31:35,260\n>> Yep.\n\n1616\n01:31:35,260 --> 01:31:37,920\nAll right, well that's a good spot for\nus to wrap this one up.\n\n1617\n01:31:37,920 --> 01:31:41,131\nLet me remind you guys if you have\nquestions on anything that we\n\n1618\n01:31:41,131 --> 01:31:44,670\ntalked about, live during the show\nyou can go to itpro.tv/live.\n\n1619\n01:31:44,670 --> 01:31:46,420\nYou'll see the chat\nroom beneath the video.\n\n1620\n01:31:46,420 --> 01:31:49,990\nPost your questions there,\nwe monitor and answer during the show.\n\n1621\n01:31:49,990 --> 01:31:53,360\nIf you have questions after the show,\nuse our Q&A forums.\n\n1622\n01:31:53,360 --> 01:31:56,010\nAt the top of every page on ITPro.TV,\nyou'll see a link that says Q&A,\n\n1623\n01:31:56,010 --> 01:31:57,730\nit'll take you to the forums.\n\n1624\n01:31:57,730 --> 01:32:00,870\nPost your questions there,\nwe monitor and answer after the show.\n\n1625\n01:32:00,870 --> 01:32:03,900\nTake advantage of that resource,\nit is there for you.\n\n1626\n01:32:03,900 --> 01:32:05,540\nWell, I hope you guys\nenjoyed today's episode.\n\n1627\n01:32:05,540 --> 01:32:08,750\nSigning off for ITProTV, I'm Don Pezet.\n\n1628\n01:32:08,750 --> 01:32:09,670\n>> And I'm Ronnie Wong.\n\n1629\n01:32:09,670 --> 01:32:11,290\n>> And we'll see you next time.\n\n1630\n01:32:11,290 --> 01:32:21,290\n[MUSIC]\n\n1631\n01:32:25,040 --> 01:32:25,540\n[SOUND]\n\n",
          "vimeoId": "119247080"
        },
        {
          "description": "Route redistribution is the exchanging of a route from one routing protocol to another. Viewers will hear about the use of route redistribution and about configuring and verifying redistribution between routing protocols.",
          "length": "5752",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/ccnproute/cisco-ccnproute-3-10-route_redistribution-021015.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/ccnproute/cisco-ccnproute-3-10-route_redistribution-021015-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/ccnproute/cisco-ccnproute-3-10-route_redistribution-021015-sm.jpg",
          "title": "Route Redistribution",
          "transcript": "1\n00:00:00,000 --> 00:00:10,000\n[MUSIC]\n\n2\n00:00:15,255 --> 00:00:20,039\n[SOUND]\n\n3\n00:00:22,500 --> 00:00:33,370\n[MUSIC]\n\n4\n00:00:33,370 --> 00:00:36,175\nGood morning, good afternoon,\nand good evening, and\n\n5\n00:00:36,175 --> 00:00:39,790\nwelcome back to another episode of\nITProTV, I'm your host Don Pezet.\n\n6\n00:00:39,790 --> 00:00:42,155\nBack again with Mr. Ronnie Wong.\n\n7\n00:00:42,155 --> 00:00:43,580\n>> How you doing?\n\n8\n00:00:43,580 --> 00:00:46,080\nHopefully, everybody is\nactually doing well today.\n\n9\n00:00:46,080 --> 00:00:49,070\nWe are getting ready to\nstart on some CCMP route.\n\n10\n00:00:49,070 --> 00:00:53,050\nI am ready with my rules of acquisition\nand today we're talking about\n\n11\n00:00:53,050 --> 00:00:56,058\nredistribution, which is something\nthat a would not agree to, Don.\n\n12\n00:00:56,058 --> 00:00:56,924\nThat’s right.\n\n13\n00:00:56,924 --> 00:01:00,220\n>> [LAUGH]\n>> A redistributed route is like latinum,\n\n14\n00:01:00,220 --> 00:01:01,365\ntreasure it.\n\n15\n00:01:01,365 --> 00:01:04,230\n>> [LAUGH]\n>> These are the odd conversations we have\n\n16\n00:01:04,230 --> 00:01:07,310\nbefore the show but\nwe’re diving back into CCMP route and\n\n17\n00:01:07,310 --> 00:01:09,610\nwe’re going to be taking a look\nat route redistribution.\n\n18\n00:01:09,610 --> 00:01:13,900\nThe official objective that we’re\nlooking at is 3.10, configure and\n\n19\n00:01:13,900 --> 00:01:19,600\nverify redistribution between any\nrouting protocol or routing source.\n\n20\n00:01:19,600 --> 00:01:23,060\nThis is another one of those exam\nobjectives that's really vague and\n\n21\n00:01:23,060 --> 00:01:28,160\nreally big, so what we're gonna do\nis we're gonna route redistribution\n\n22\n00:01:28,160 --> 00:01:31,590\nfrom the basics and\nhow we handle that functionality.\n\n23\n00:01:31,590 --> 00:01:34,530\nThere's some advanced functionality in\nroute redistribution that we're gonna\n\n24\n00:01:34,530 --> 00:01:38,040\nsave for additional segments down the road\nbecause we've got a lot more stuff\n\n25\n00:01:38,040 --> 00:01:40,110\ncoming down the pipe with CCNP route.\n\n26\n00:01:40,110 --> 00:01:44,050\nSo, if you never redistributed\na route before, have no fear,\n\n27\n00:01:44,050 --> 00:01:44,900\nthat's where we're gonna start.\n\n28\n00:01:44,900 --> 00:01:46,590\nWe're gonna start with the real basics and\n\n29\n00:01:46,590 --> 00:01:49,310\nthen we'll build up to more\nadvanced stuff as we go.\n\n30\n00:01:49,310 --> 00:01:52,415\nNow, if you've never done route\nredistribution before, you might be asking\n\n31\n00:01:52,415 --> 00:01:56,685\nyourself, Don, this episode sounds great\nbut what the heck is route redistribution?\n\n32\n00:01:56,685 --> 00:01:58,035\nWhat are you even talking about?\n\n33\n00:01:58,035 --> 00:01:59,575\nSo let's start there.\n\n34\n00:01:59,575 --> 00:02:03,675\n>> When I first started studying for\nthe CCNA exam and\n\n35\n00:02:03,675 --> 00:02:07,545\ntrying to make sure that we were ready\nto go, I started learning about this\n\n36\n00:02:07,545 --> 00:02:11,360\ntopic of route redistribution and said,\nwhy in the world would I ever do that?\n\n37\n00:02:11,360 --> 00:02:15,730\nI'm usually just running one routing\nprotocol on my router, I don't have any\n\n38\n00:02:15,730 --> 00:02:19,960\nclue why I would ever redistribute\nsomething like OSPF into EIGRP or\n\n39\n00:02:19,960 --> 00:02:22,920\nRIP into EIGRP or anything like that.\n\n40\n00:02:22,920 --> 00:02:26,910\nSo it was really kind of one of those\ntopics that seemed incredibly out there\n\n41\n00:02:26,910 --> 00:02:31,690\nand I don't even know why I would choose\nto do some, so I avoided the subject.\n\n42\n00:02:31,690 --> 00:02:35,680\nI just said, I know that it's out there,\nI know that there's got to be reasons\n\n43\n00:02:35,680 --> 00:02:38,430\nbehind why we do it but\nwhen I was just studying and\n\n44\n00:02:38,430 --> 00:02:41,130\nit wasn't really put into context,\nI didn't really understand it.\n\n45\n00:02:41,130 --> 00:02:44,860\nSo Don, what are some of the reasons\nwhy we would even do it?\n\n46\n00:02:44,860 --> 00:02:46,870\n>> It's funny you mention all\nthat because on the CCNA exam,\n\n47\n00:02:46,870 --> 00:02:50,130\nyou can choose to ignore it, there's just\na very little bit on redistributing.\n\n48\n00:02:50,130 --> 00:02:52,410\nIn the CCNP exams though, you can't.\n\n49\n00:02:52,410 --> 00:02:56,260\nYou've got to know it because we'll use\nredistribution several times throughout\n\n50\n00:02:56,260 --> 00:02:57,890\nthe remainder of the objectives.\n\n51\n00:02:57,890 --> 00:03:01,360\nEspecially, protocols like\nMPNS where they rely upon it.\n\n52\n00:03:01,360 --> 00:03:03,300\nSo let's go to the basics here.\n\n53\n00:03:03,300 --> 00:03:05,110\nWhat is redistribution?\n\n54\n00:03:05,110 --> 00:03:06,850\nRedistributing, like\nRonnie was describing,\n\n55\n00:03:06,850 --> 00:03:11,960\nis the simply exchanging a route\nfrom one routing protocol\n\n56\n00:03:11,960 --> 00:03:17,015\nto another and there's various reasons\nwhy you might wanna do this and\n\n57\n00:03:17,015 --> 00:03:20,180\none of the most common examples\nis when you're doing a migration.\n\n58\n00:03:20,180 --> 00:03:25,010\nLet's say that you've got a network and\nthe whole network is running EIGRP.\n\n59\n00:03:25,010 --> 00:03:28,550\nMaybe you were in all Cisco shop,\nso you did all Cisco equipment,\n\n60\n00:03:28,550 --> 00:03:29,909\nyou've got EIGRP and it's running great.\n\n61\n00:03:30,920 --> 00:03:35,840\nAs the years go by, you decide,\nmaybe I'll try some Juniper equipment, or\n\n62\n00:03:35,840 --> 00:03:38,390\nsomebody else,\nyou start bringing in ADTRAN, or whoever.\n\n63\n00:03:39,970 --> 00:03:43,660\nThose other vendors don't support EIGRP,\nthat's Cisco proprietary, so\n\n64\n00:03:43,660 --> 00:03:45,970\nyou say, what do I do?\n\n65\n00:03:45,970 --> 00:03:47,800\nI guess I could bring\nthem in with OSPF but\n\n66\n00:03:47,800 --> 00:03:51,040\nhow are they gonna talk\nto my other routers?\n\n67\n00:03:51,040 --> 00:03:52,600\nThe short answer is they can't.\n\n68\n00:03:52,600 --> 00:03:53,870\nSo you've got two choices.\n\n69\n00:03:53,870 --> 00:03:57,320\nChoice number one is you shut your whole\nnetwork down, convert all your equipment\n\n70\n00:03:57,320 --> 00:04:01,530\nover to OSPF and then bring it up,\nthat'll make your customers really happy.\n\n71\n00:04:01,530 --> 00:04:07,950\nChoice number two is you set up a router\nsomewhere to act as a translator\n\n72\n00:04:07,950 --> 00:04:14,600\nto translate between EIGRP to OSPF,\nthink of routing protocols as languages.\n\n73\n00:04:14,600 --> 00:04:19,180\nIf I speak French and Ronnie speaks\nEnglish, we’re gonna have a hard time\n\n74\n00:04:19,180 --> 00:04:23,360\ntalking to each other but I can bring\nsomebody else who speaks French and\n\n75\n00:04:23,360 --> 00:04:27,830\nEnglish, they can be the go-between,\nthey can translate that information.\n\n76\n00:04:27,830 --> 00:04:31,140\nThat’s effectively what you’re doing\nwhen you redistribute, you're saying,\n\n77\n00:04:31,140 --> 00:04:34,330\nI just learned this EIGRP route,\nlet me turn around and\n\n78\n00:04:34,330 --> 00:04:35,630\nadvertise it over here into OSPF.\n\n79\n00:04:35,630 --> 00:04:38,400\nLet me hand that off.\n\n80\n00:04:38,400 --> 00:04:43,850\nIn terms of doing a network migration, we\ncan use route redistribution to do that,\n\n81\n00:04:43,850 --> 00:04:46,550\nslowly moving the boundary\nof our network so\n\n82\n00:04:46,550 --> 00:04:50,380\nthat we don't have to have all of\nour routers running EIGRP and OSPF.\n\n83\n00:04:50,380 --> 00:04:55,240\nWe can just have some of them running\nboth protocols while I do my migration,\n\n84\n00:04:55,240 --> 00:04:56,710\nthat's one method.\n\n85\n00:04:56,710 --> 00:05:01,760\nThe other area where we use it is with\nBGP, we use it very heavily with BGP.\n\n86\n00:05:01,760 --> 00:05:06,090\nRemember that border gateway protocol,\nit's a path vector protocol, so\n\n87\n00:05:06,090 --> 00:05:08,370\nit's looking at a path to\nget across the network but\n\n88\n00:05:08,370 --> 00:05:12,040\nit has no idea how to get to\nthe individual networks themselves.\n\n89\n00:05:12,040 --> 00:05:16,780\nThe individual hops, that's invisible to\nBGP, it just knows the autonomous systems.\n\n90\n00:05:16,780 --> 00:05:22,800\nSo when we learn routes via BGP,\nwe don't know how to get there,\n\n91\n00:05:22,800 --> 00:05:26,870\nso we need to redistribute those\nroutes down into our IGPs so\n\n92\n00:05:26,870 --> 00:05:30,210\nthat the interior gateway protocols\ncan figure out how to get there.\n\n93\n00:05:30,210 --> 00:05:32,710\nSo route redistribution is\npart in parcel with BGP,\n\n94\n00:05:32,710 --> 00:05:37,640\nit's pretty much a given that you're gonna\nbe doing that and MPLS is the same way.\n\n95\n00:05:37,640 --> 00:05:39,550\nIf the customer is running OSPF,\n\n96\n00:05:39,550 --> 00:05:44,340\nyou don't want push their OSPF\nacross your ISP infrastructure.\n\n97\n00:05:44,340 --> 00:05:47,670\nYour ISP will normally take that and\nredistribute it into BGP and\n\n98\n00:05:47,670 --> 00:05:50,950\nmove it across their infrastructure\nthat way to whatever destination is\n\n99\n00:05:50,950 --> 00:05:53,190\nat the other end, where they\nredistribute it back into OSPF again.\n\n100\n00:05:54,880 --> 00:05:57,550\nSo there's several different uses for\n\n101\n00:05:57,550 --> 00:06:03,120\nredistribution but regardless of which way\nyou're using, it it all works the same.\n\n102\n00:06:03,120 --> 00:06:06,150\nYou're simply taking routes\nout of one protocol and\n\n103\n00:06:06,150 --> 00:06:10,420\nputting them into another protocol,\ncould even be the same protocol.\n\n104\n00:06:10,420 --> 00:06:14,890\nI could be redistributing routes\nfrom one EIGRP autonomous system\n\n105\n00:06:14,890 --> 00:06:17,640\ninto another EIGRP autonomous system or\n\n106\n00:06:17,640 --> 00:06:20,780\nredistributing routes from one OSPF\nprocess into another OSPF process.\n\n107\n00:06:20,780 --> 00:06:23,750\nSo it could be same\nprotocol to same protocol,\n\n108\n00:06:23,750 --> 00:06:28,460\nthere's not usually a whole lot of reason\nfor doing something like that but you can.\n\n109\n00:06:28,460 --> 00:06:33,350\nReally, it's for converting from RIP\nto EIGRP or vice versa, or both.\n\n110\n00:06:33,350 --> 00:06:36,550\nYou might do what is called\nmutual redistribution.\n\n111\n00:06:36,550 --> 00:06:39,710\nMutual redistribution is where\nyou tell the system to avoid.\n\n112\n00:06:39,710 --> 00:06:43,390\nLet me show you,\nI've got a diagram here on my computer,\n\n113\n00:06:45,040 --> 00:06:49,060\nit's not anything too flashy or\nfancy nut basically,\n\n114\n00:06:49,060 --> 00:06:53,996\nI've got a couple different systems in\nplace here, and the network is divided out\n\n115\n00:06:53,996 --> 00:07:01,590\nin different sides here.\n\n116\n00:07:01,590 --> 00:07:06,360\nLet's say, for example,\non the left side of my network\n\n117\n00:07:06,360 --> 00:07:10,740\nI've got OSPF,\nI've got open shortest path first,\n\n118\n00:07:10,740 --> 00:07:15,030\nOSPF is running over here on\nthe left side of my network.\n\n119\n00:07:15,030 --> 00:07:21,381\nOn the right side of my network, I'm\nrunning EIGRP, so I'm running EIGRP over\n\n120\n00:07:21,381 --> 00:07:26,980\nhere and maybe I'm doing that for\nsome particular reason.\n\n121\n00:07:26,980 --> 00:07:32,040\nThis is the migration, I actually\nneed OSPF over here on the left.\n\n122\n00:07:32,040 --> 00:07:35,640\nMaybe that's a business partner\nof mine and that's what they run,\n\n123\n00:07:35,640 --> 00:07:39,690\nthey just run OSPF and\nI can't get them to change away from it.\n\n124\n00:07:40,950 --> 00:07:45,109\nBut on the right side,\nmaybe that’s my network, I run EIGRP, and\n\n125\n00:07:45,109 --> 00:07:49,492\nI don’t wanna change to OSPF because\nthere’s a feature in EIGRP that I\n\n126\n00:07:49,492 --> 00:07:51,593\nreally like, whatever that is.\n\n127\n00:07:51,593 --> 00:07:54,732\nMaybe it’s auto summarization and\nI just love that feature and\n\n128\n00:07:54,732 --> 00:07:56,042\nI don’t wanna give it up.\n\n129\n00:07:56,042 --> 00:07:59,689\nSo I need these two networks to coexist.\n\n130\n00:07:59,689 --> 00:08:01,191\nAnd this isn't going to\nbe a temporary thing,\n\n131\n00:08:01,191 --> 00:08:02,432\nthis is going to be a permanent thing.\n\n132\n00:08:02,432 --> 00:08:06,330\nI'm going to permanently leave 1\nside of OSPF and 1 side of EIGRP.\n\n133\n00:08:06,330 --> 00:08:12,470\nSo I set up this router right here router\n2, to do mutual redistribution and\n\n134\n00:08:12,470 --> 00:08:18,310\nthat means that it's going to take the\nOSPF routes and advertise them into EIGRP\n\n135\n00:08:18,310 --> 00:08:21,540\nand take the EIGRP routes,\nand advertise them into OSPF.\n\n136\n00:08:21,540 --> 00:08:26,740\nAnd when it does that,Router\n1 can just run OSPF.\n\n137\n00:08:26,740 --> 00:08:31,330\nIt doesn't need to run EIGRP,\nbecause there's no EIGRP routes for it.\n\n138\n00:08:31,330 --> 00:08:33,630\nRouter 2 is already translating them.\n\n139\n00:08:33,630 --> 00:08:36,830\nAnd Router 3 over here can just run EIGRP.\n\n140\n00:08:36,830 --> 00:08:40,510\nIt doesn't need to run OSPF\nbecause there's no OSPF routes.\n\n141\n00:08:40,510 --> 00:08:45,930\nRouter 2 has already translated them,\nbut Router 2 has to run both protocols.\n\n142\n00:08:45,930 --> 00:08:50,070\nIt's supporting both of those structures\nto be able to do the translation.\n\n143\n00:08:50,070 --> 00:08:55,180\nThe exchange the information between them.\n\n144\n00:08:55,180 --> 00:08:56,690\nThat's one scenario right there.\n\n145\n00:08:56,690 --> 00:09:01,178\nThat would just be like mutual\nredistribution on a permanent basis.\n\n146\n00:09:01,178 --> 00:09:04,500\nNow, it might be that I'm doing\nsomething that's not so permanent.\n\n147\n00:09:05,540 --> 00:09:09,580\nAnd that would be more of a temporary,\nlike a migration, right.\n\n148\n00:09:09,580 --> 00:09:12,570\nLet's say that I was doing a migration,\nlet me,\n\n149\n00:09:12,570 --> 00:09:16,760\nso this is like mutual redistribution.\n\n150\n00:09:16,760 --> 00:09:18,680\nIf I don't label these I\nforget what I used them for\n\n151\n00:09:18,680 --> 00:09:20,980\nlater on when we post them on the website.\n\n152\n00:09:20,980 --> 00:09:23,730\nSo what I want to do is I\nwant to duplicate that tab.\n\n153\n00:09:23,730 --> 00:09:25,600\n>> Go to diagram.\n\n154\n00:09:25,600 --> 00:09:29,480\n>> Why can't I-\n>> Go to diagram.\n\n155\n00:09:29,480 --> 00:09:30,140\n>> Oh, there we go.\n\n156\n00:09:30,140 --> 00:09:31,140\nThank you, Ronnie.\n\n157\n00:09:31,140 --> 00:09:34,280\n>> Yep.\n>> So if I was doing a migration, right?\n\n158\n00:09:34,280 --> 00:09:37,740\nSo if I was migrating from\none protocol to another.\n\n159\n00:09:37,740 --> 00:09:44,160\nSo maybe my network as of right\nnow is all OSPF right, so\n\n160\n00:09:44,160 --> 00:09:49,250\nI don't have EIGRP deployed to my network\nright now, I just have OSPF end to end,\n\n161\n00:09:49,250 --> 00:09:52,755\nacross across my entire network, right?\n\n162\n00:09:52,755 --> 00:09:54,905\nSo this all OSPF.\n\n163\n00:09:54,905 --> 00:09:57,855\nAnd I decide boy, I really want to move\nmy network over to EIGRP, all right?\n\n164\n00:09:59,565 --> 00:10:03,241\nSo what I do is I start by deploying EIGRP\n\n165\n00:10:04,432 --> 00:10:09,362\non one router, just one place,\none little spot.\n\n166\n00:10:09,362 --> 00:10:11,302\nSo I might deploy it like this.\n\n167\n00:10:12,932 --> 00:10:16,692\nSo now I’ve got EIGRP and OSPF running.\n\n168\n00:10:16,692 --> 00:10:18,462\nRouter 1 and router 2 are just OSPF.\n\n169\n00:10:19,892 --> 00:10:23,352\nRouter 3 is OSPF and EIGRP.\n\n170\n00:10:25,520 --> 00:10:31,030\nOnce I've got that running,\nI need Router 3 to be able\n\n171\n00:10:31,030 --> 00:10:36,440\nto advertise some of its networks like\nthese 192.183.3 networks over into OSPF so\n\n172\n00:10:36,440 --> 00:10:38,450\nthe other routers will\nstill learn about it.\n\n173\n00:10:38,450 --> 00:10:42,770\nSo it's going to be doing redistribution\nso it pushes those routes across.\n\n174\n00:10:42,770 --> 00:10:47,052\nAnd as my migration moves on,\nwhat I do is I say okay once Router 3 is\n\n175\n00:10:47,052 --> 00:10:51,258\nredistributing I can take the boundary\nof my OSPF environment and\n\n176\n00:10:51,258 --> 00:10:53,185\nI can bring it over like this.\n\n177\n00:10:53,185 --> 00:10:59,150\nAnd I can bring EIGRP over and\nfor a little while these\n\n178\n00:10:59,150 --> 00:11:01,980\nwould overlap as I'm configuring this\nbecause we don't want a network outage.\n\n179\n00:11:03,030 --> 00:11:05,720\nSo, now I would have\nRouter 2 running both.\n\n180\n00:11:05,720 --> 00:11:07,300\nAnd doing the redistribution.\n\n181\n00:11:07,300 --> 00:11:08,350\nAnd at this point, I could go and\n\n182\n00:11:08,350 --> 00:11:12,740\nremove the redistribution here on\nRouter 3, it's just running EIGRP.\n\n183\n00:11:12,740 --> 00:11:15,120\nAnd now Router 2 is redistributing.\n\n184\n00:11:15,120 --> 00:11:20,570\nAnd then, I extend out EIGRP to come\nover here and get the next router.\n\n185\n00:11:21,990 --> 00:11:24,310\nAnd I start to shrink OSPF down.\n\n186\n00:11:25,310 --> 00:11:31,040\nAnd I'm redistributing here and\nthen when I'm done now OSPF is done.\n\n187\n00:11:31,040 --> 00:11:35,640\nI take it, I phase it out, and\nI'm in an all EIGRP environment.\n\n188\n00:11:35,640 --> 00:11:37,100\nThis is called a moving boundary.\n\n189\n00:11:37,100 --> 00:11:40,240\nWe have a boundary in our network that\nwe're moving where one protocol ends and\n\n190\n00:11:40,240 --> 00:11:41,460\nthe next protocol starts.\n\n191\n00:11:41,460 --> 00:11:44,718\nYou're moving that\nredistribution along the way.\n\n192\n00:11:44,718 --> 00:11:49,230\nSo Router 3 was the translator originally,\nthen Router 2 became the translator then\n\n193\n00:11:49,230 --> 00:11:51,910\nRouter 1 was the translator and\nthen nobody was the translator because\n\n194\n00:11:51,910 --> 00:11:54,190\neverybody spoke the same\nlanguage at that point.\n\n195\n00:11:54,190 --> 00:11:56,810\nSo that's an example of\na rolling migration.\n\n196\n00:11:57,960 --> 00:12:00,850\nAll right, these are all\ndifferent examples of how we might\n\n197\n00:12:00,850 --> 00:12:04,240\nuse route redistribution,\nthe way you implement it,\n\n198\n00:12:04,240 --> 00:12:07,900\nIs really pretty much the same for\neach protocol.\n\n199\n00:12:07,900 --> 00:12:11,670\nThe biggest concern that we\nhave when doing redistribution\n\n200\n00:12:11,670 --> 00:12:17,160\nis that each of these routing protocols\nuses a different routing metric.\n\n201\n00:12:17,160 --> 00:12:17,800\nRight?\n\n202\n00:12:17,800 --> 00:12:19,350\nLet's recap the metrics, right?\n\n203\n00:12:19,350 --> 00:12:22,010\nSo what does OSPF use?\n\n204\n00:12:22,010 --> 00:12:24,520\n>> OSPF is metric uses bandwidth.\n\n205\n00:12:24,520 --> 00:12:27,270\nIs its main metric that it ends up using,\nbut\n\n206\n00:12:27,270 --> 00:12:32,590\nthe problem is with EIGRP it ends\nup using bandwidth and the delay.\n\n207\n00:12:32,590 --> 00:12:34,000\nSo it is a composite metric and\n\n208\n00:12:34,000 --> 00:12:37,560\nin order to do RIP we'll be\ntaking a look at hop count.\n\n209\n00:12:37,560 --> 00:12:42,250\nSo if I redistribute something\nlike OSPF into well RIP\n\n210\n00:12:42,250 --> 00:12:45,090\nwell the problem is RIP\nis saying what do I do.\n\n211\n00:12:45,090 --> 00:12:49,320\nThis particular route in OSPF Is not\nreporting the same type of metric, and\n\n212\n00:12:49,320 --> 00:12:51,940\nso where do I put that in\nthe routing table, if at all?\n\n213\n00:12:53,030 --> 00:12:57,740\n>> When you redistribute, the metrics are\nrarely compatible between the protocols.\n\n214\n00:12:57,740 --> 00:12:59,930\nIf you take a look at OSPF, for example.\n\n215\n00:12:59,930 --> 00:13:06,130\nIf I have a gigabit line,\nthe way OSPF calculates the cost,\n\n216\n00:13:06,130 --> 00:13:08,950\nthat's what they call their metric\n'cause it's not straight bandwidth.\n\n217\n00:13:08,950 --> 00:13:11,180\nWhat they do is they run it\nthrough a very simple formula.\n\n218\n00:13:11,180 --> 00:13:14,800\nIt's a 100 megabyte divided by\nwhatever you're bandwidth is.\n\n219\n00:13:14,800 --> 00:13:19,270\nSo, 100 megabyte divided by\na gigabyte results in a number, and\n\n220\n00:13:19,270 --> 00:13:20,910\nthat number becomes you're cost.\n\n221\n00:13:20,910 --> 00:13:25,510\nWell if that number is over 16,\nwhich a lot of times it is.\n\n222\n00:13:25,510 --> 00:13:30,820\nIf it's over 16, that's bigger\nthan the maximum hop count of RIP.\n\n223\n00:13:30,820 --> 00:13:32,640\nSo it's a bad metric.\n\n224\n00:13:32,640 --> 00:13:36,870\nSo when we redistribute,\nwe have to kind of falsify the metric.\n\n225\n00:13:36,870 --> 00:13:39,870\nWe have to,\nnot necessarily lie to the system, but\n\n226\n00:13:39,870 --> 00:13:41,760\nwe have to tell it what that metric is.\n\n227\n00:13:41,760 --> 00:13:44,570\nThat's a very dangerous point\nwhen you're redistributing,\n\n228\n00:13:44,570 --> 00:13:48,660\nif you tell it a metric\nthat's not accurate, then\n\n229\n00:13:48,660 --> 00:13:52,550\nyou can end up in a situation where one\nrouter is preferred when it shouldn't be.\n\n230\n00:13:52,550 --> 00:13:54,710\nYou can end up with sub-optimal routing.\n\n231\n00:13:54,710 --> 00:13:55,980\nIn worst case scenario,\n\n232\n00:13:55,980 --> 00:14:00,100\nwhen you're redistributing, you could\nend up with what are called black holes.\n\n233\n00:14:00,100 --> 00:14:05,240\nA black hole is where a routing protocol\nsays yes I can get to a network\n\n234\n00:14:05,240 --> 00:14:06,650\nwhen it actually can't.\n\n235\n00:14:06,650 --> 00:14:10,630\nAnd your traffic goes over to that\nroute and then it just dies out.\n\n236\n00:14:10,630 --> 00:14:13,800\nIt ends up going to a null interface\nsomewhere, and it dies out.\n\n237\n00:14:13,800 --> 00:14:18,390\nThat happens, usually it's when you\nhave bad redistribution set up.\n\n238\n00:14:18,390 --> 00:14:21,670\nIf you think about it,\nwhen I advertise a route,\n\n239\n00:14:21,670 --> 00:14:24,550\nwe have a technology in\nthe background called split horizon.\n\n240\n00:14:24,550 --> 00:14:26,390\nAnd split horizon says,\n\n241\n00:14:26,390 --> 00:14:30,890\nnever advertise a route out the same\ninterface you learned it on.\n\n242\n00:14:30,890 --> 00:14:36,900\nSo for example, if router three were to\nteach Router 2 a route, Router 2 would\n\n243\n00:14:36,900 --> 00:14:40,190\nnever teach that same route back to router\nthree, that would be pointless, right.\n\n244\n00:14:40,190 --> 00:14:43,100\nWhy teach it back to the same\nrouter that just taught us?\n\n245\n00:14:43,100 --> 00:14:45,020\nSplit horizon fixes that.\n\n246\n00:14:45,020 --> 00:14:49,940\nBut when you redistribute a route, it's\nlike creating an all new route, right.\n\n247\n00:14:49,940 --> 00:14:53,580\nImagine, here we've got Router\n3 is connected to Router 2.\n\n248\n00:14:53,580 --> 00:14:55,790\nRouter 2 is connected to Router 1.\n\n249\n00:14:55,790 --> 00:15:03,085\nImagine if Router 1 was connected to\nroute Router 3 via some other means.\n\n250\n00:15:03,085 --> 00:15:05,885\nSome other type of connection.\n\n251\n00:15:05,885 --> 00:15:10,355\nAnd when it was connected,\nmaybe we did redistribution there too.\n\n252\n00:15:10,355 --> 00:15:15,625\nMaybe in a different direction this time,\nbut still, redirection nonetheless, right?\n\n253\n00:15:15,625 --> 00:15:20,145\nSo here's this extra connection that I\nmight have between Router 1 and Router 3.\n\n254\n00:15:20,145 --> 00:15:25,830\nWhen that happens Router 3 could advertise\na route and the route gets redistributed.\n\n255\n00:15:25,830 --> 00:15:31,860\nSo it gets sent over here to Router\n2 who's going to redistribute it.\n\n256\n00:15:31,860 --> 00:15:35,680\nAnd from there, let me switch\nto some color I haven't used.\n\n257\n00:15:35,680 --> 00:15:39,010\nThis is going to get confusing.\n\n258\n00:15:39,010 --> 00:15:39,590\nThere we go.\n\n259\n00:15:39,590 --> 00:15:41,630\nSo it advertises that route out and\n\n260\n00:15:41,630 --> 00:15:45,710\nthen Router 2 redistributes it\nback over here to Router 1.\n\n261\n00:15:45,710 --> 00:15:47,510\nAnd then Router 1 advertises that ad.\n\n262\n00:15:47,510 --> 00:15:49,345\nYou're doing it's own redistribution.\n\n263\n00:15:49,345 --> 00:15:50,875\nHowever it goes about it.\n\n264\n00:15:50,875 --> 00:15:55,257\nAnd it's going to take that same route and\nbend it right back over here, but\n\n265\n00:15:55,257 --> 00:16:00,131\nbecause it's being redistributed Router\n3 might not know that it’s learning its\n\n266\n00:16:00,131 --> 00:16:01,960\nown route back again, right?\n\n267\n00:16:01,960 --> 00:16:03,850\nBecause it sees it as an all new route.\n\n268\n00:16:03,850 --> 00:16:07,540\nSo how do we know we didn’t just\nlearn own route back again?\n\n269\n00:16:07,540 --> 00:16:11,390\nWell, there’s some advanced features\nwe’ll talk about in another episode.\n\n270\n00:16:11,390 --> 00:16:14,270\nFor example,\none of them is called route tagging.\n\n271\n00:16:14,270 --> 00:16:17,700\nWhen you redistribute a route you've\ngot to make up a new metric for it.\n\n272\n00:16:17,700 --> 00:16:21,670\nAnd at the same time you can\nattach a little tag to the route.\n\n273\n00:16:21,670 --> 00:16:23,540\nAnd the tag can mean whatever you want.\n\n274\n00:16:23,540 --> 00:16:26,360\nNormally you want it to\nidentify where it came from.\n\n275\n00:16:26,360 --> 00:16:28,620\nSo you tag it to say this is\nwhere that route came from.\n\n276\n00:16:28,620 --> 00:16:32,050\nAnd that way when we learn\nroutes we can look for that tag.\n\n277\n00:16:32,050 --> 00:16:33,517\nWe can say, all right,\nis that tag present?\n\n278\n00:16:33,517 --> 00:16:37,210\nCuz if it is, I don't want to learn my own\nroute back again and you can trim it off.\n\n279\n00:16:37,210 --> 00:16:40,600\nThese are some of the complexities that\nwe have with route redistribution.\n\n280\n00:16:40,600 --> 00:16:43,746\nAnd I don't want to dive into\na complex configuration just yet,\n\n281\n00:16:43,746 --> 00:16:45,850\nwe'll save that for the tagging episode.\n\n282\n00:16:45,850 --> 00:16:47,623\nBut I do want to mention it here just so\n\n283\n00:16:47,623 --> 00:16:50,220\nyou guys are aware you\ncan create routing loops.\n\n284\n00:16:50,220 --> 00:16:52,020\nYou can create black holes,\n\n285\n00:16:52,020 --> 00:16:54,160\nwhere you think you can get\nto a network and you can't.\n\n286\n00:16:54,160 --> 00:16:56,120\nYou can create sub optimal routing.\n\n287\n00:16:56,120 --> 00:17:00,558\nRedistribution is dangerous business,\nbecause you choose the metric.\n\n288\n00:17:00,558 --> 00:17:03,380\nAnd so be aware of that as\nyou do a redistribution.\n\n289\n00:17:05,070 --> 00:17:07,895\nAll right, well I took that nice neat\ndiagram and made it kind of messy.\n\n290\n00:17:07,895 --> 00:17:12,290\n[COUGH] So what I've got for\nour show today\n\n291\n00:17:12,290 --> 00:17:16,010\nis I've got a couple of routers that are\nset up, this exact topology right here.\n\n292\n00:17:16,010 --> 00:17:17,320\nRouter 1, 2, and 3.\n\n293\n00:17:17,320 --> 00:17:23,410\nAnd each one [COUGH] has a couple\nof networks attached to it.\n\n294\n00:17:23,410 --> 00:17:26,520\nAnd I've got several different routing\nprotocols that are out there, and\n\n295\n00:17:26,520 --> 00:17:29,180\nI wanna use this as an example\nto show you guys that\n\n296\n00:17:29,180 --> 00:17:31,580\ntranslation between one protocol and\nanother.\n\n297\n00:17:33,652 --> 00:17:35,850\nAll right, so\nlet's take a look at some of this.\n\n298\n00:17:35,850 --> 00:17:38,850\nNow before we start doing redistribution,\n\n299\n00:17:38,850 --> 00:17:42,490\nI want to make sure that we're able to\nsee that the redistribution is happening.\n\n300\n00:17:42,490 --> 00:17:44,770\nSometimes it can be a little\nchallenging to spot it.\n\n301\n00:17:44,770 --> 00:17:48,100\nAnd so there's a few monitoring\ncommands that I want to cover first.\n\n302\n00:17:48,100 --> 00:17:50,440\nSo that we know how to\nspot what's going on.\n\n303\n00:17:50,440 --> 00:17:53,250\nSo, let's talk about some of those\nbasic commands that we're gonna use for\n\n304\n00:17:53,250 --> 00:17:56,710\nmonitoring redistribution\nin our environment.\n\n305\n00:17:56,710 --> 00:18:01,690\nHere I am on router 2 and probably one\nof the most useful commands is the old,\n\n306\n00:18:01,690 --> 00:18:03,930\nshow ip route command.\n\n307\n00:18:03,930 --> 00:18:06,900\nAnd if I run show ip route\nI see my routing table.\n\n308\n00:18:06,900 --> 00:18:08,740\nAnd I expect to see networks in there.\n\n309\n00:18:08,740 --> 00:18:12,170\nI expect to see my directly connected\nstuff which is what I'm seeing here.\n\n310\n00:18:12,170 --> 00:18:17,810\nI'm not actually running any protocols,\nso I'm not learning any routes.\n\n311\n00:18:17,810 --> 00:18:20,490\nBut show IP route,\nI can see my routing table.\n\n312\n00:18:20,490 --> 00:18:24,390\nNow, you might be asking yourself,\nwhy am I covering such a basic command?\n\n313\n00:18:24,390 --> 00:18:26,540\nWhen we redistribute a route,\n\n314\n00:18:26,540 --> 00:18:32,270\nyou can only redistribute routes\nthat are in your own routing table.\n\n315\n00:18:32,270 --> 00:18:35,970\nIf the route doesn't make it into my\nrouting table I can't redistribute it.\n\n316\n00:18:35,970 --> 00:18:38,150\nIt will not let you\nredistribute failed routes.\n\n317\n00:18:38,150 --> 00:18:40,870\nSo you can only redistribute what\nwe call successor routes, right?\n\n318\n00:18:40,870 --> 00:18:44,730\nSuccessor routes are the ones that make\nit into your routing table, right?\n\n319\n00:18:44,730 --> 00:18:49,320\nSo if I'm trying to redistribute a route\nand it's not showing up at the other end\n\n320\n00:18:49,320 --> 00:18:51,790\nI need to look and see,\nis it even showing up in my routing table?\n\n321\n00:18:53,090 --> 00:18:54,988\nAnd if it is in my routing table,\n\n322\n00:18:54,988 --> 00:18:59,970\nis it showing as being from the protocol\nthat I'm actually trying to redistribute?\n\n323\n00:18:59,970 --> 00:19:02,980\nIf I'm trying to redistribute\nOSPF into EIGRP,\n\n324\n00:19:04,010 --> 00:19:07,310\nI need to see that route as\nan OSPF route in my routing table.\n\n325\n00:19:07,310 --> 00:19:10,170\nIf it's already an EIGRP route,\nI don't need to redistribute it.\n\n326\n00:19:10,170 --> 00:19:11,690\nI'm wasting my time.\n\n327\n00:19:11,690 --> 00:19:15,140\nSo we need to start with show ip route,\njust to look at the routing table.\n\n328\n00:19:16,430 --> 00:19:20,783\nThere's another command\nthat I really like,\n\n329\n00:19:20,783 --> 00:19:24,475\nwhich is debug ip routing, all right?\n\n330\n00:19:24,475 --> 00:19:27,730\nMost people's routing\ntables are really stable.\n\n331\n00:19:27,730 --> 00:19:28,540\nThey don't change.\n\n332\n00:19:28,540 --> 00:19:32,183\nIf you got a stable network,\nyour routing table is frozen in time.\n\n333\n00:19:32,183 --> 00:19:32,683\nRight?\n\n334\n00:19:32,683 --> 00:19:35,200\nAnd you'll see I ran that command,\nand what's going on in my router?\n\n335\n00:19:36,260 --> 00:19:36,950\nNothing.\n\n336\n00:19:36,950 --> 00:19:39,340\nJust sitting there, right?\n\n337\n00:19:39,340 --> 00:19:44,200\nBut when you start communicating to other\nrouters and network statuses change and\n\n338\n00:19:44,200 --> 00:19:49,270\nroutes come and routes go, well,\nhow do we know that all that happens?\n\n339\n00:19:49,270 --> 00:19:50,570\nYou can do a show IP route and\n\n340\n00:19:50,570 --> 00:19:53,810\nyou can just look at the routing table and\ntry and spot it yourself, but\n\n341\n00:19:53,810 --> 00:19:57,170\nthe bigger your routing table gets,\nthe harder that becomes.\n\n342\n00:19:57,170 --> 00:20:01,420\nIf you've got thousands of routes, are you\ngonna notice when one route disappears?\n\n343\n00:20:01,420 --> 00:20:02,830\nProbably not, right?\n\n344\n00:20:02,830 --> 00:20:05,060\nBut when you do a debug IP routing,\n\n345\n00:20:05,060 --> 00:20:08,400\nany change to the routing table will\nbe shown in your debug outputs.\n\n346\n00:20:08,400 --> 00:20:15,013\nSo, for example,\nif I were to fire up router ospf 1 area 0,\n\n347\n00:20:15,013 --> 00:20:19,183\noh wait, let me do this the right way.\n\n348\n00:20:19,183 --> 00:20:22,624\nI’m gonna do router OSPF 1,\n\n349\n00:20:22,624 --> 00:20:27,725\nI’ll throw all of my networks into area 0.\n\n350\n00:20:27,725 --> 00:20:31,464\nThere we go, and see how I got this\nmessage right here letting me know that\n\n351\n00:20:31,464 --> 00:20:33,850\nall protocols have a local database.\n\n352\n00:20:33,850 --> 00:20:36,630\nI just created an OSPF database and\nthat showed up.\n\n353\n00:20:38,110 --> 00:20:41,850\nAnd now I just got some OSPF adjacencies,\nright.\n\n354\n00:20:41,850 --> 00:20:44,617\nSo I'm talking to some other\nrouters that are out there and\n\n355\n00:20:44,617 --> 00:20:47,100\nright there I am learning routes, right.\n\n356\n00:20:47,100 --> 00:20:50,220\nI'm updating OSPF and I am adding a route.\n\n357\n00:20:50,220 --> 00:20:52,030\nUpdating OSPF, adding a route.\n\n358\n00:20:52,030 --> 00:20:54,141\nI can see that those routes got added.\n\n359\n00:20:54,141 --> 00:20:57,094\nAll right, and I can see all\nthe information that I care about,\n\n360\n00:20:57,094 --> 00:21:00,800\nwhere I got it from and what interface\nI learned it on, what metric it had.\n\n361\n00:21:00,800 --> 00:21:05,516\nRight, so I'm learning those\nroutes that exactly what I want.\n\n362\n00:21:05,516 --> 00:21:10,257\nIf a route were to change, right,\nlike if I were to take one of these\n\n363\n00:21:10,257 --> 00:21:15,100\nother networks offline,\nlet me go into one of these other routers.\n\n364\n00:21:18,558 --> 00:21:21,058\nAnd I'm just gonna take one\nof their networks down.\n\n365\n00:21:21,058 --> 00:21:23,630\nSo I just took one of\nthe networks down on router 3.\n\n366\n00:21:23,630 --> 00:21:27,130\nWhen I jump back to router 2,\nwhat I should see in here\n\n367\n00:21:27,130 --> 00:21:31,380\nis that I'll get a message right there,\ndelete subnet route blah blah blah.\n\n368\n00:21:31,380 --> 00:21:32,510\nI see the route just went away.\n\n369\n00:21:34,150 --> 00:21:35,860\nWhen you're doing route redistribution,\n\n370\n00:21:35,860 --> 00:21:40,390\nif you have a big routing table, this\nis one of the best ways to monitor it.\n\n371\n00:21:40,390 --> 00:21:44,220\nYou can do the redistribution and\non the target router, the one that should\n\n372\n00:21:44,220 --> 00:21:46,180\nbe learning this stuff,\nyou can see what routes they learned.\n\n373\n00:21:46,180 --> 00:21:47,142\nIt's a good way to spot it.\n\n374\n00:21:47,142 --> 00:21:51,100\nSo that was debug IP routing, all right.\n\n375\n00:21:54,850 --> 00:21:58,485\nAnd then if I turn off OSPF, so I'm just\ngonna remove OSPF from this router, and\n\n376\n00:21:58,485 --> 00:22:02,590\nthen I'll start getting my debug output\nhere, my adjacencies just went down.\n\n377\n00:22:02,590 --> 00:22:08,034\nAnd those routes are gonna come\nout of the routing table and\n\n378\n00:22:08,034 --> 00:22:11,933\nI'll see my output for that eventually.\n\n379\n00:22:11,933 --> 00:22:13,110\nMake sure it's already taken effect.\n\n380\n00:22:13,110 --> 00:22:16,808\nThey should have already come out.\n\n381\n00:22:16,808 --> 00:22:20,850\nApparently because I killed OSPF,\nit didn't give me my debug output for it.\n\n382\n00:22:20,850 --> 00:22:22,510\nBut, anyhow,\nyou'll see the routes come in and out.\n\n383\n00:22:22,510 --> 00:22:24,860\nThat's a really good one,\ndebug IP routing.\n\n384\n00:22:25,910 --> 00:22:29,550\nAnother one that's a lot less\ncommonly known is kind of a neat one.\n\n385\n00:22:29,550 --> 00:22:31,433\nIt's called a route profile.\n\n386\n00:22:31,433 --> 00:22:34,940\nYour system router's maintaining all\nsorts of statistics in the background.\n\n387\n00:22:34,940 --> 00:22:35,641\nRight?\nAnd you see these.\n\n388\n00:22:35,641 --> 00:22:37,780\nLike, when you do a show\ninterface command.\n\n389\n00:22:37,780 --> 00:22:40,142\nIf I do show interface E 0/0.\n\n390\n00:22:40,142 --> 00:22:42,416\nRight?\nI have all these counters down here that\n\n391\n00:22:42,416 --> 00:22:44,460\ntell me about the status\nof that interface.\n\n392\n00:22:44,460 --> 00:22:46,630\nI can see errors and other things.\n\n393\n00:22:46,630 --> 00:22:52,010\nWell it actually tracks or\nit can track routing table updates also.\n\n394\n00:22:52,010 --> 00:22:53,530\nIt doesn't by default.\n\n395\n00:22:53,530 --> 00:22:57,800\nThere's a command it's,\nshow ip route profile,\n\n396\n00:23:00,520 --> 00:23:03,590\nshow ip route profile and\nwhen you run that\n\n397\n00:23:03,590 --> 00:23:06,640\nit will give you a list of statistics\non your routing table, all right?\n\n398\n00:23:06,640 --> 00:23:08,060\nBut see the message I got?\n\n399\n00:23:08,060 --> 00:23:10,140\nIP routing profile not enabled.\n\n400\n00:23:10,140 --> 00:23:12,490\nIt's not tracking this by default.\n\n401\n00:23:12,490 --> 00:23:15,210\nSo if you want it,\nyou've got to turn it on.\n\n402\n00:23:15,210 --> 00:23:22,901\nAnd so the way you turn it on\nis by getting in your config,\n\n403\n00:23:22,901 --> 00:23:27,710\nand saying IP route profile.\n\n404\n00:23:27,710 --> 00:23:28,410\nThere we go.\n\n405\n00:23:28,410 --> 00:23:29,650\nThank you Ronnie.\n\n406\n00:23:29,650 --> 00:23:30,330\nIP route profile.\n\n407\n00:23:30,330 --> 00:23:33,345\nI guess if I looked at my show notes\nthat have it written right here,\n\n408\n00:23:33,345 --> 00:23:34,400\nthen I would know.\n\n409\n00:23:34,400 --> 00:23:36,300\nIt's IP route profile.\n\n410\n00:23:36,300 --> 00:23:40,847\nWhen you run that, now your router is\ntracking statistics on the routing table.\n\n411\n00:23:40,847 --> 00:23:44,419\nAs things start to happen,\nit'll notify us.\n\n412\n00:23:44,419 --> 00:23:45,258\nOr it won't notify us.\n\n413\n00:23:45,258 --> 00:23:46,209\nWe'll actually have to see it ourselves.\n\n414\n00:23:46,209 --> 00:23:50,543\nI'm gonna turn off all my debugs.\n\n415\n00:23:50,543 --> 00:23:52,429\nAll right, so\nI'm just gonna turn off all that.\n\n416\n00:23:52,429 --> 00:23:53,920\nI'm not debugging anymore.\n\n417\n00:23:55,390 --> 00:23:57,672\nI'm gonna turn OSPF back on.\n\n418\n00:24:00,880 --> 00:24:04,038\nAnd we'll get that fired back up or\nI guess I could do another protocol,\n\n419\n00:24:04,038 --> 00:24:05,840\nbut whatever, we'll stick with OSPF.\n\n420\n00:24:07,010 --> 00:24:10,463\nSo I'm gonna fire up OSPF,\nthere my adjacency's coming back up.\n\n421\n00:24:10,463 --> 00:24:13,126\nMy routing table is going to\npopulate with those routes, but\n\n422\n00:24:13,126 --> 00:24:15,800\nI'm not debugging anymore so\nI won't see that.\n\n423\n00:24:15,800 --> 00:24:20,320\nBut if I do a show ip route ospf,\nI can see the routes coming in.\n\n424\n00:24:22,020 --> 00:24:25,380\nAnd I'm still missing that one route,\nright there.\n\n425\n00:24:25,380 --> 00:24:28,550\nSo I've got four routes coming\nfrom router one, but I've only got\n\n426\n00:24:28,550 --> 00:24:32,310\nthree routes coming from router three\nbecause I turned off that one network.\n\n427\n00:24:32,310 --> 00:24:34,100\nI shut its interface down.\n\n428\n00:24:34,100 --> 00:24:38,330\nWell if I do a show ip route profile now.\n\n429\n00:24:38,330 --> 00:24:39,370\nI get a statistic screen.\n\n430\n00:24:40,690 --> 00:24:45,290\nAnd what it's showing me\nis my changes per interval.\n\n431\n00:24:46,300 --> 00:24:47,600\nThe intervals is five seconds.\n\n432\n00:24:47,600 --> 00:24:49,620\nSo it does this five second average.\n\n433\n00:24:49,620 --> 00:24:52,790\nSo every five seconds how\nmany changes have I had.\n\n434\n00:24:52,790 --> 00:24:57,257\nAnd I can see where I had a change\nthat introduced 11 new paths or\n\n435\n00:24:57,257 --> 00:24:59,505\n12 new hop count apparently.\n\n436\n00:24:59,505 --> 00:25:02,446\nI must have a redundant route\nin there somewhere, but so\n\n437\n00:25:02,446 --> 00:25:04,490\nit's giving me these counters.\n\n438\n00:25:04,490 --> 00:25:06,880\nSo I can see that changes are happening.\n\n439\n00:25:06,880 --> 00:25:11,290\nIn a stable network when you run\nthis you should only have this first\n\n440\n00:25:11,290 --> 00:25:12,560\nline filled up.\n\n441\n00:25:12,560 --> 00:25:16,220\nChange interval zero and these\nnumbers should be really, really big.\n\n442\n00:25:17,440 --> 00:25:21,213\nIf I see a number in there like 5,000.\n\n443\n00:25:21,213 --> 00:25:26,213\nWell that's 5,000, 5 second intervals so\nyou multiply that by 5.\n\n444\n00:25:26,213 --> 00:25:32,505\nSo now, I've got 25,000, so that's\n25,000 seconds since the last change.\n\n445\n00:25:32,505 --> 00:25:36,109\nAnd then the last change would be right\nhere, and in then the change before here,\n\n446\n00:25:36,109 --> 00:25:37,405\nand here, and so on.\n\n447\n00:25:37,405 --> 00:25:40,585\nAnd it skipped a bunch for\nme because that new protocol firing up.\n\n448\n00:25:40,585 --> 00:25:42,485\nBut you'll see these start to update and\n\n449\n00:25:42,485 --> 00:25:44,740\nyou can see how long it's been\nsince you've had changes.\n\n450\n00:25:44,740 --> 00:25:47,830\nThis is a great way to see\nhow stable your network is.\n\n451\n00:25:47,830 --> 00:25:50,100\nHave I had a bunch of changes in here?\n\n452\n00:25:50,100 --> 00:25:52,421\nAnd you can generate your own changes.\n\n453\n00:25:52,421 --> 00:25:56,850\nLet me turn the interface back on,\nwhich will bring that network back up.\n\n454\n00:25:56,850 --> 00:25:58,550\nMy router over here is gonna learn that.\n\n455\n00:25:58,550 --> 00:26:00,450\nThat'll be a change for\nthe routing table and\n\n456\n00:26:00,450 --> 00:26:02,380\nmy route profile updates\nwill reflect that.\n\n457\n00:26:02,380 --> 00:26:06,810\nSo if you ever wanna see how\nactive your routing table is,\n\n458\n00:26:06,810 --> 00:26:09,080\nis it constantly adding and moving routes?\n\n459\n00:26:09,080 --> 00:26:12,755\nIn other words, if I have a very unstable\nnetwork you'd see a lot of data here.\n\n460\n00:26:12,755 --> 00:26:14,020\nBut if you come in here and\n\n461\n00:26:14,020 --> 00:26:17,960\nyou see a bunch of zeros that means\nyou've got a pretty stable network.\n\n462\n00:26:17,960 --> 00:26:20,459\nAnd expect to see some\nbig numbers right here,\n\n463\n00:26:20,459 --> 00:26:24,963\nwhich would be meaning that it's been a\nlong time since a change that's happened.\n\n464\n00:26:24,963 --> 00:26:28,470\nAnd so here,\nI can see that I did just have a change.\n\n465\n00:26:29,520 --> 00:26:33,170\nIn that current interval,\nI went 31 intervals without a change.\n\n466\n00:26:33,170 --> 00:26:37,130\nSo 31 times 5 is, whatever,\nI'm not gonna do math today.\n\n467\n00:26:37,130 --> 00:26:39,651\nBut then here I can say I've had a change,\n\n468\n00:26:39,651 --> 00:26:43,630\none change right here in my\nsecond interval and off we go.\n\n469\n00:26:43,630 --> 00:26:45,170\nSo pretty neat stuff there.\n\n470\n00:26:45,170 --> 00:26:48,260\nThese are neat commands that most\npeople never really worry about.\n\n471\n00:26:48,260 --> 00:26:51,970\nIt's not a whole lot of point in\nmessing with them for most of us, but\n\n472\n00:26:51,970 --> 00:26:57,450\nthe information is there,\nand it's useful to see.\n\n473\n00:26:57,450 --> 00:27:00,690\nSo that I think is pretty much\nall the basics of distribution.\n\n474\n00:27:00,690 --> 00:27:03,700\nWas there anything else\nI wanted to mention?\n\n475\n00:27:03,700 --> 00:27:05,050\nNope.\nNope.\n\n476\n00:27:05,050 --> 00:27:07,555\nAll right.\nSo the only thing that's left is actually\n\n477\n00:27:07,555 --> 00:27:09,505\nseeing redistribution in action.\n\n478\n00:27:09,505 --> 00:27:12,462\nSo that's what we're gonna jump into next,\nbut this is a pretty good spot for\n\n479\n00:27:12,462 --> 00:27:13,430\nus stop and take a break.\n\n480\n00:27:13,430 --> 00:27:14,590\nSo let's pause here.\n\n481\n00:27:14,590 --> 00:27:19,005\nWhen we get back, we're gonna tackle\nredistributing into different protocols.\n\n482\n00:27:19,005 --> 00:27:19,755\nAfter this.\n\n483\n00:27:19,755 --> 00:27:23,295\n[SOUND] All right,\n\n484\n00:27:23,295 --> 00:27:29,000\nwelcome back everybody.\n\n485\n00:27:29,000 --> 00:27:30,100\nSo what we are gonna do now,\n\n486\n00:27:30,100 --> 00:27:33,300\nis we are gonna dive in to actually\nredistributing some routes.\n\n487\n00:27:33,300 --> 00:27:36,630\nNow, I just want to start with a real\nsimple example that makes it easy to\n\n488\n00:27:36,630 --> 00:27:39,020\ncomprehend exactly how this process works.\n\n489\n00:27:39,020 --> 00:27:43,942\nSo I took that topology that we saw in\nthe first segment of the show which,\n\n490\n00:27:43,942 --> 00:27:44,838\nright here.\n\n491\n00:27:44,838 --> 00:27:48,100\nAll right, so I took this topology and\nI changed it a little bit.\n\n492\n00:27:48,100 --> 00:27:53,570\nWhat I did is, I took router one and\nI configured it with RIP.\n\n493\n00:27:53,570 --> 00:27:57,000\nThe old Routing Information Protocol and\nI took router three and\n\n494\n00:27:57,000 --> 00:27:59,430\nI configured it with EIGRP.\n\n495\n00:27:59,430 --> 00:28:04,470\nAnd I took router two and\nI configured it with both, RIP and EIGRP.\n\n496\n00:28:04,470 --> 00:28:08,660\nNow, when you're dealing with\nredistribution with protocols like RIP and\n\n497\n00:28:08,660 --> 00:28:12,640\nEIGRP, there's a few things that\nwe need to be concerned about.\n\n498\n00:28:13,880 --> 00:28:18,690\nThe first thing that we need to worry\nabout, especially with RIP is by default,\n\n499\n00:28:18,690 --> 00:28:20,910\nit's RIP Version 1.\n\n500\n00:28:20,910 --> 00:28:23,338\nAnd Ronnie, what are some of\nthe red flags the RIP version 1.\n\n501\n00:28:23,338 --> 00:28:25,074\n>> When we take a look at RIP version 1,\n\n502\n00:28:25,074 --> 00:28:27,380\nthe big red flag is that\nit's classful routing.\n\n503\n00:28:27,380 --> 00:28:30,483\nAnd that means any of those subnets\nthat we think that we've created, and\n\n504\n00:28:30,483 --> 00:28:34,138\nthat would actually end up working, when\nit reports it, it's really gonna summarize\n\n505\n00:28:34,138 --> 00:28:36,815\ninto one route, it's not gonna\nactually be able to see those.\n\n506\n00:28:36,815 --> 00:28:40,695\nAnd so that is kinda one of the big\nred flags of RIP version 1.\n\n507\n00:28:40,695 --> 00:28:42,348\n>> Yup, and then the other flag,\n\n508\n00:28:42,348 --> 00:28:47,230\nwhich goes along with the classful\nrouting is the auto summerizations.\n\n509\n00:28:47,230 --> 00:28:51,380\nRIP and the EIGRP both do\nauto summaries by default and\n\n510\n00:28:51,380 --> 00:28:56,080\nthat means you might be advertising\nsmall networks and on their boundary\n\n511\n00:28:56,080 --> 00:29:00,680\nwhen they jump from one class to another\nclass it will summarize the networks down.\n\n512\n00:29:00,680 --> 00:29:03,910\nSo here I've got four\nnetworks on router one.\n\n513\n00:29:03,910 --> 00:29:10,140\nThat are all in the same slash 24,\nbut I've broken them into 4 slash 26s.\n\n514\n00:29:10,140 --> 00:29:12,790\nWell, when I advertise\nthat into another network.\n\n515\n00:29:12,790 --> 00:29:14,540\nIf auto summaries are turned on,\n\n516\n00:29:14,540 --> 00:29:17,610\nthen those are gonna get\nsummarized into one network.\n\n517\n00:29:17,610 --> 00:29:22,088\nAnd summary routes are a great way\nto get into routing loop situations.\n\n518\n00:29:22,088 --> 00:29:23,870\nSo you've always gotta\nbe careful with those.\n\n519\n00:29:23,870 --> 00:29:25,720\nIf you're gonna be\nadvertising a summary route,\n\n520\n00:29:25,720 --> 00:29:29,650\njust advertise the summary route not\nthe individual routes or vice versa.\n\n521\n00:29:29,650 --> 00:29:32,430\nSo there's a little bit of work you have\nto do there and we'll see that in later\n\n522\n00:29:32,430 --> 00:29:36,350\nepisodes as we dive deeper into EIGRP and\nthe other protocols.\n\n523\n00:29:36,350 --> 00:29:41,190\nBut for now I went ahead and did version\ntwo and turned off the automatic summary\n\n524\n00:29:41,190 --> 00:29:45,300\non the RIP side and on the EIGRP side\nI turned off the automatic summary.\n\n525\n00:29:45,300 --> 00:29:46,840\nEIGRP is classless by default so\n\n526\n00:29:46,840 --> 00:29:50,800\nwe don't have to worry about that,\nbut I did turn off the auto summary.\n\n527\n00:29:50,800 --> 00:29:54,210\nBut otherwise it's a real basic\nconfiguration so let's verify that,\n\n528\n00:29:54,210 --> 00:29:56,700\nmake sure I'm not telling any lies.\n\n529\n00:29:56,700 --> 00:30:01,290\nSo here on router one,\nif I take a look at it.\n\n530\n00:30:01,290 --> 00:30:04,290\nAnd I'll just do a show run or\n\n531\n00:30:04,290 --> 00:30:07,400\nactually, you know what,\nlet me do a show run section rip.\n\n532\n00:30:07,400 --> 00:30:08,700\nThere we go.\n\n533\n00:30:08,700 --> 00:30:11,170\nSo I'm running RIP version 2,\nno auto-summary, and\n\n534\n00:30:11,170 --> 00:30:13,930\nI'm advertising all of\nmy networks into RIP.\n\n535\n00:30:13,930 --> 00:30:18,520\nJust everything goes into RIP and\nthat's it, and it's up and it's going.\n\n536\n00:30:18,520 --> 00:30:23,077\nAnd if I take a look at router three and\n\n537\n00:30:23,077 --> 00:30:26,755\nI do a show run section eigrp.\n\n538\n00:30:26,755 --> 00:30:28,420\nWe see the same thing over here.\n\n539\n00:30:28,420 --> 00:30:32,750\nRouter EIGRP 1, network 0.0.0.0,\nand no auto-summary.\n\n540\n00:30:32,750 --> 00:30:37,838\nSo they’re participating\nsolely within those protocols.\n\n541\n00:30:37,838 --> 00:30:41,440\nNow, router two is\nsitting in between them.\n\n542\n00:30:41,440 --> 00:30:45,830\nAnd so on router two,\nI configured both RIP And EIGRP.\n\n543\n00:30:45,830 --> 00:30:50,596\nAnd so\nif I take a look at my configuration here,\n\n544\n00:30:50,596 --> 00:30:56,088\nI've got router eigrp1, network 3.0.0.0.\n\n545\n00:30:56,088 --> 00:30:57,590\nI just wanna do that one network.\n\n546\n00:30:57,590 --> 00:31:01,338\nIf I look at my diagram\nagain that 3.0 network.\n\n547\n00:31:01,338 --> 00:31:02,540\nThat's this network right here.\n\n548\n00:31:02,540 --> 00:31:05,640\nSo I'm running EIGRP\njust on this one link.\n\n549\n00:31:07,670 --> 00:31:09,440\nAnd then I've got rip beneath it.\n\n550\n00:31:09,440 --> 00:31:11,380\nNetwork 1.0.0.0.\n\n551\n00:31:11,380 --> 00:31:15,588\nThat's this link right here,\nbetween router two and router one.\n\n552\n00:31:15,588 --> 00:31:19,216\nI'm just running those individual\nprotocols right there to keep nice\n\n553\n00:31:19,216 --> 00:31:19,960\nseparation.\n\n554\n00:31:21,290 --> 00:31:24,664\nNow, on router two because\nit's running RIP and\n\n555\n00:31:24,664 --> 00:31:29,250\nthe EIGRP, it's able to learn\nboth of those sets of routes.\n\n556\n00:31:29,250 --> 00:31:34,884\nSo if I do a show ip route, I should see\na mixture of directly connected routes.\n\n557\n00:31:34,884 --> 00:31:36,384\nWe're always gonna see those.\n\n558\n00:31:36,384 --> 00:31:42,097\nAnd then RIP routes, which are coming\nfrom router one- And somewhere in here,\n\n559\n00:31:42,097 --> 00:31:47,280\nthere we go, EIGRP routes that\nare coming from router 3, right?\n\n560\n00:31:47,280 --> 00:31:49,340\nIt's learning both,\ncuz it's running both protocols.\n\n561\n00:31:50,760 --> 00:31:54,049\nBut that doesn't mean that it\nleapfrogs all the way over, right?\n\n562\n00:31:54,049 --> 00:31:57,288\nLet's take these 192.168.3 routes, right?\n\n563\n00:31:57,288 --> 00:31:59,530\nSo 192.168.3.\n\n564\n00:31:59,530 --> 00:32:03,040\nwhatever, those are coming from router 3.\n\n565\n00:32:03,040 --> 00:32:04,980\nAnd they're coming in via EIGRP.\n\n566\n00:32:04,980 --> 00:32:05,950\nThat's how I'm learning them.\n\n567\n00:32:05,950 --> 00:32:07,800\nSo they're here in my routing table.\n\n568\n00:32:07,800 --> 00:32:09,235\nIf I go back to my diagram,\n\n569\n00:32:09,235 --> 00:32:14,600\nthat these routes over here in router\n3 coming over to me via EIGRP.\n\n570\n00:32:14,600 --> 00:32:16,850\nNow, they're in my routing table.\n\n571\n00:32:16,850 --> 00:32:21,050\nThey're successor routes, all right,\nin my active routing table, and\n\n572\n00:32:21,050 --> 00:32:22,760\nI'm running RIP also.\n\n573\n00:32:22,760 --> 00:32:26,020\nSo wouldn't router 1 learn them from me?\n\n574\n00:32:26,020 --> 00:32:29,090\nNo, because I'm not\nredistributing by default, and\n\n575\n00:32:29,090 --> 00:32:33,300\nI can verify that by looking\nat router one's routing table.\n\n576\n00:32:33,300 --> 00:32:40,400\nIf I go back to router 1 and\ndo a show IP route, I just have directly\n\n577\n00:32:40,400 --> 00:32:44,900\nconnected routes and on any routes, better\nyet, the EIGRP routes from the other side.\n\n578\n00:32:44,900 --> 00:32:46,470\nAll right.\n\n579\n00:32:46,470 --> 00:32:51,888\nSo if I want those routes to make it over\nhere, I have to manually tell router 2 to\n\n580\n00:32:51,888 --> 00:32:57,260\ntake any EIGRP route that you learn and\nadvertise it into RIP,\n\n581\n00:32:57,260 --> 00:33:02,140\nand that's the most basic form of route\nredistribution right there, all right.\n\n582\n00:33:02,140 --> 00:33:07,270\nIt can actually be really, really easy to\nredistribute from one protocol to another.\n\n583\n00:33:07,270 --> 00:33:08,960\nIt can be hard,\nwe can make it has hard as we want,\n\n584\n00:33:08,960 --> 00:33:10,480\nbut it can actually be really easy.\n\n585\n00:33:10,480 --> 00:33:14,420\nIf I just wanna redistribute all\nof my EIGRP routes right into RIP,\n\n586\n00:33:14,420 --> 00:33:16,340\nit's really just one command, all right?\n\n587\n00:33:16,340 --> 00:33:17,310\nLet's see that.\n\n588\n00:33:17,310 --> 00:33:20,230\nSo I'm gonna redistribute\nmy EIGRP routes into RIP.\n\n589\n00:33:21,450 --> 00:33:24,459\nSo on router 2,\nthe guy that's running both languages,\n\n590\n00:33:25,630 --> 00:33:29,650\nI'm gonna get into\nthe destination protocol, right?\n\n591\n00:33:29,650 --> 00:33:31,790\nThis is the person I want to teach.\n\n592\n00:33:31,790 --> 00:33:35,430\nSo I wanna teach RIP\nabout the EIGRP route.\n\n593\n00:33:35,430 --> 00:33:40,560\nSo I'm gonna say router rip,\nand then I need to tell it\n\n594\n00:33:40,560 --> 00:33:44,770\na new source, where it's gonna be\ngetting these routes from, all right?\n\n595\n00:33:44,770 --> 00:33:50,320\nAnd so I'll say something\nlike redistribute EIGRP and\n\n596\n00:33:50,320 --> 00:33:53,430\nthen the additional information\nthat I need to provide, right?\n\n597\n00:33:53,430 --> 00:33:56,090\nNow, EIGRP's not the only place\nthat I can redistribute from.\n\n598\n00:33:56,090 --> 00:34:00,720\nIf I do a question mark there\nyou'll see BGP, OSPF, RIP.\n\n599\n00:34:00,720 --> 00:34:06,098\nYou'll also see things like connected and\nstatic.\n\n600\n00:34:06,098 --> 00:34:09,360\nIf I wanna redistribute a static\nroute that's on my system,\n\n601\n00:34:09,360 --> 00:34:11,390\nnow I'm not even talking\nabout a routing protocol.\n\n602\n00:34:11,390 --> 00:34:12,750\nThat's why the exam objective,\n\n603\n00:34:12,750 --> 00:34:17,090\nif you were wondering like the official\nexam objective said, configure and\n\n604\n00:34:17,090 --> 00:34:22,710\nverify redistribution between any\nrouting protocol or routing sources.\n\n605\n00:34:22,710 --> 00:34:24,770\nWhat are they talking\nabout routing source?\n\n606\n00:34:24,770 --> 00:34:26,840\nWell static routes, and\n\n607\n00:34:26,840 --> 00:34:30,880\ndirectly connected interfaces, we can\nredistribute that directly connected\n\n608\n00:34:30,880 --> 00:34:35,710\ninterface into the routing protocol as\nopposed to using the network command.\n\n609\n00:34:35,710 --> 00:34:38,880\nAnd the advantage there is that we don't\nhave to deal with passive interfaces,\n\n610\n00:34:38,880 --> 00:34:41,700\nit's not actually participating\nin the routing protocol.\n\n611\n00:34:41,700 --> 00:34:44,850\nWe imported in, and\nnow it's part of the map.\n\n612\n00:34:46,590 --> 00:34:48,460\nSo, I'm gonna start with EIGRP though.\n\n613\n00:34:48,460 --> 00:34:50,980\nSo I'm gonna say redistribute EIGRP.\n\n614\n00:34:50,980 --> 00:34:55,010\nNow, whenever you deal with EIGRP, you've\nalways got an autonomous system number, so\n\n615\n00:34:55,010 --> 00:34:55,960\nI need to provide that.\n\n616\n00:34:55,960 --> 00:34:57,205\nI used AS number 1.\n\n617\n00:34:58,890 --> 00:35:06,370\nIf I were to just press enter right now,\nit would take any EIGRP route that I have\n\n618\n00:35:06,370 --> 00:35:10,800\nand put it into RIP, so\nthe other side can learn about it.\n\n619\n00:35:10,800 --> 00:35:14,140\nBut, actually if I were to press enter\nright now, nothing's gonna happen.\n\n620\n00:35:14,140 --> 00:35:14,970\nIt's not gonna give me an error,\n\n621\n00:35:14,970 --> 00:35:17,790\nit'll take the command, but\nit's not gonna work either.\n\n622\n00:35:17,790 --> 00:35:24,220\nAnd the main reason is, the metric that\nEIGRP uses is not compatible with RIP.\n\n623\n00:35:24,220 --> 00:35:24,870\nThe metric is broken.\n\n624\n00:35:24,870 --> 00:35:25,370\nAll right?\n\n625\n00:35:26,510 --> 00:35:32,410\nSo I need to do one of two things,\none, I could specify\n\n626\n00:35:32,410 --> 00:35:37,000\na default metric, the default metric just\ndoes say whenever I bring in a route,\n\n627\n00:35:37,000 --> 00:35:39,560\nif it doesn't have a valid metric,\njust replace it with this default.\n\n628\n00:35:40,570 --> 00:35:42,130\nIf I had a default metric.\n\n629\n00:35:42,130 --> 00:35:47,230\nThen these routes would come in no problem\nor i can provide the metric right here.\n\n630\n00:35:47,230 --> 00:35:48,122\nIf i just do a question mark,\n\n631\n00:35:48,122 --> 00:35:49,950\nyou'll see that's the next\nthing that it's asking for.\n\n632\n00:35:49,950 --> 00:35:50,880\nit's that metric.\n\n633\n00:35:50,880 --> 00:35:54,960\nSo I can say metric and\nthen what I want it to be.\n\n634\n00:35:54,960 --> 00:36:01,760\nNow remember with RIP, it uses hop count\nand this is what I'm advertising out.\n\n635\n00:36:01,760 --> 00:36:04,731\nSo if I'm learning routes from router 3,\n\n636\n00:36:04,731 --> 00:36:08,950\nrouter 2 can get to those routes\nby going through router 3.\n\n637\n00:36:08,950 --> 00:36:10,810\nSo it would go one hop away,\n\n638\n00:36:10,810 --> 00:36:14,320\nrouter 3 is directly connected, it has\na distance of 0, we're one hope away.\n\n639\n00:36:14,320 --> 00:36:18,730\nSo I need to advertise this with a metric\nof 1, I can get there in one hop.\n\n640\n00:36:18,730 --> 00:36:20,900\nAnd when router 1 learns it, it'll say,\n\n641\n00:36:20,900 --> 00:36:25,290\nwell I have to go through router 2,\nso I'm gonna make that two hops.\n\n642\n00:36:25,290 --> 00:36:28,970\nSo, it's converting it into RIP's metric,\nbut I could lie to it if I wanted.\n\n643\n00:36:28,970 --> 00:36:30,740\nI could say, five hops.\n\n644\n00:36:30,740 --> 00:36:32,530\nAnd in fact I'll do that.\n\n645\n00:36:32,530 --> 00:36:33,030\nIt doesn't know.\n\n646\n00:36:33,030 --> 00:36:34,240\nWe're making this number up.\n\n647\n00:36:34,240 --> 00:36:36,030\nWe're pulling it right out of our hat.\n\n648\n00:36:36,030 --> 00:36:37,740\nAnd this is where you can break things.\n\n649\n00:36:37,740 --> 00:36:41,450\nBecause maybe it should be eight hops,\nand you advertise it as one hop.\n\n650\n00:36:41,450 --> 00:36:42,330\nRight?\n\n651\n00:36:42,330 --> 00:36:44,870\nNow, it thinks that your route is better\n\n652\n00:36:44,870 --> 00:36:47,970\nthan some of the other routes that you\nmay have that are actually better.\n\n653\n00:36:47,970 --> 00:36:50,370\nSo you can end up in suboptimal routing.\n\n654\n00:36:50,370 --> 00:36:52,130\nThis is a made up metric.\n\n655\n00:36:52,130 --> 00:36:54,600\nIf you're a good network engineer\nyou sit down, you do the math,\n\n656\n00:36:54,600 --> 00:36:57,820\nyou figure out what the metric should\nbe and you put that in there, right?\n\n657\n00:36:57,820 --> 00:36:59,360\nBut if you're just in a hurry and\n\n658\n00:36:59,360 --> 00:37:02,270\nyou throw a random number in there,\nyou can lead to suboptimal routing.\n\n659\n00:37:04,410 --> 00:37:04,990\nAll right.\n\n660\n00:37:04,990 --> 00:37:09,520\nThere is one more option I can specify\nin this command, and that's a route map.\n\n661\n00:37:09,520 --> 00:37:11,250\nWe're not gonna do route\nmaps this episode.\n\n662\n00:37:11,250 --> 00:37:13,820\nRoute maps are insanely powerful and\nthey're awesome and\n\n663\n00:37:13,820 --> 00:37:17,450\nthey're one of the most favorite things\nI get to teach in this kind of series\n\n664\n00:37:17,450 --> 00:37:19,260\nbecause you can do so much with them.\n\n665\n00:37:19,260 --> 00:37:20,770\nWe're gonna hold off on that.\n\n666\n00:37:20,770 --> 00:37:24,600\nBut if we wanted to do additional\nmanipulations like have some routes come\n\n667\n00:37:24,600 --> 00:37:27,790\nin with one metric and other routes\ncoming in with a different metric and\n\n668\n00:37:27,790 --> 00:37:29,550\nchanging of sources or destinations.\n\n669\n00:37:29,550 --> 00:37:31,550\nYou can do all sorts of\nstuff with a route map.\n\n670\n00:37:31,550 --> 00:37:33,750\nHere's where you'd attach\nit to the redistribute.\n\n671\n00:37:33,750 --> 00:37:35,914\nBut I'm gonna leave that off.\n\n672\n00:37:35,914 --> 00:37:36,660\nAll right?\n\n673\n00:37:36,660 --> 00:37:43,400\nSo now, I'm redistributing that route and\nthrowing it in there with a metric of 5.\n\n674\n00:37:43,400 --> 00:37:45,770\nIf I wanted to specify\nthat default metric,\n\n675\n00:37:45,770 --> 00:37:51,260\nI would just say default-metric,\nand then specify a value.\n\n676\n00:37:51,260 --> 00:37:51,840\nOkay.\n\n677\n00:37:51,840 --> 00:37:54,250\nNow notice how big that value can get.\n\n678\n00:37:54,250 --> 00:37:56,270\nRonnie, what's the maximum metric in RIP?\n\n679\n00:37:56,270 --> 00:37:58,880\n>> Maximum metric in RIP is gonna be 16.\n\n680\n00:37:58,880 --> 00:38:01,220\nOnce it hits 16,\nit's considered, well, gone.\n\n681\n00:38:01,220 --> 00:38:04,910\n>> So\nwhy does this command go to 4.3 billion?\n\n682\n00:38:04,910 --> 00:38:09,650\nBecause it's the same command Cisco uses\nfor the other protocols like OSPF and\n\n683\n00:38:09,650 --> 00:38:10,690\nEIGRP.\n\n684\n00:38:10,690 --> 00:38:11,910\nSo it can go massive.\n\n685\n00:38:11,910 --> 00:38:13,610\nBut remember with RIP,\nand remember this for\n\n686\n00:38:13,610 --> 00:38:18,250\nthe exam, the metric is always gonna be\na number between 0 and 16, all right?\n\n687\n00:38:18,250 --> 00:38:22,300\n16 is unreachable, so\nyou don't wanna use that one, right?\n\n688\n00:38:22,300 --> 00:38:23,960\nThat's the maximum metric.\n\n689\n00:38:23,960 --> 00:38:25,700\nThat means the route's unreachable and\nit'll throw it out.\n\n690\n00:38:25,700 --> 00:38:28,240\nSo don't use 16, all right?\n\n691\n00:38:28,240 --> 00:38:29,270\nDon't use 0, either.\n\n692\n00:38:29,270 --> 00:38:33,830\n0 means it's directly connected,\nand a redistributed route cannot\n\n693\n00:38:33,830 --> 00:38:37,600\nbe directly connected, unless you're\nredistributing from connected, right?\n\n694\n00:38:37,600 --> 00:38:38,720\nIn this case I'm not.\n\n695\n00:38:38,720 --> 00:38:41,540\nSo if I redistribute with a metric of 0,\nthe route won't work.\n\n696\n00:38:41,540 --> 00:38:43,330\nIt'll actually throw it away.\n\n697\n00:38:43,330 --> 00:38:46,540\nBecause what it'll do, it'll say well\nthis must be directly connected, and\n\n698\n00:38:46,540 --> 00:38:49,390\nit'll look to find the network direct\nconnect and it doesn't it exist, and\n\n699\n00:38:49,390 --> 00:38:51,120\nit won't make it into the routing table.\n\n700\n00:38:51,120 --> 00:38:54,600\nSo, you really have to use 1 through 15.\n\n701\n00:38:54,600 --> 00:38:56,950\nAnd be careful with 15.\n\n702\n00:38:56,950 --> 00:39:01,690\nBecause what's gonna happen with 15 is,\nif I'm advertising that route out saying,\n\n703\n00:39:01,690 --> 00:39:06,390\nyeah, I got a distance 15,\nrouter 1 would learn it and say, well,\n\n704\n00:39:06,390 --> 00:39:10,780\nI can get to it but I've got to go through\nthat guy, so my hop count would be 16.\n\n705\n00:39:10,780 --> 00:39:15,970\nAnd that means if the maximum metric, it's\nnot gonna advertise it to anybody else.\n\n706\n00:39:15,970 --> 00:39:17,400\nI've effectively cut it down,\n\n707\n00:39:17,400 --> 00:39:21,686\nso it can only go one hop in\nto that autonomous system.\n\n708\n00:39:21,686 --> 00:39:23,660\nSo you don't wanna go too high\nwith these metrics, either,\n\n709\n00:39:23,660 --> 00:39:25,440\nyou've got to be careful with that.\n\n710\n00:39:25,440 --> 00:39:26,250\nI know a lot of people,\n\n711\n00:39:26,250 --> 00:39:28,500\nthey just automatically\nredistribute as a metric of 1.\n\n712\n00:39:28,500 --> 00:39:31,070\nThey just say, screw it, I'll through\nit in with a metric of 1 and that's it.\n\n713\n00:39:31,070 --> 00:39:32,070\nIt is RIP after all.\n\n714\n00:39:32,070 --> 00:39:35,314\nYou're not gonna get the most advanced\ndecisions anyway, but I always try and\n\n715\n00:39:35,314 --> 00:39:35,967\nbe realistic.\n\n716\n00:39:35,967 --> 00:39:38,391\nI try and count the hops and get it right.\n\n717\n00:39:38,391 --> 00:39:41,882\nSo in this case,\nI'll just set a default metric of 1.\n\n718\n00:39:41,882 --> 00:39:42,803\nSo.\n\n719\n00:39:42,803 --> 00:39:47,561\nIf I'm gonna be advertising something\nout and I don't specify the metric,\n\n720\n00:39:47,561 --> 00:39:48,910\njust default to one.\n\n721\n00:39:48,910 --> 00:39:52,480\nSo let's look at that config real quick.\n\n722\n00:39:52,480 --> 00:39:54,690\nSo if I pull up my RIP configuration.\n\n723\n00:39:54,690 --> 00:39:55,790\nI'm in RIP, and\n\n724\n00:39:55,790 --> 00:40:02,420\nI told it to redistribute any EIGRP\nroutes from autonomous system one.\n\n725\n00:40:02,420 --> 00:40:07,560\nRedistribute them into RIP with\na metric of five, all right?\n\n726\n00:40:07,560 --> 00:40:10,610\nNow on my system,\nI'm not gonna see any change.\n\n727\n00:40:10,610 --> 00:40:13,558\nSo here on router two,\nI'm not really gonna see any change.\n\n728\n00:40:13,558 --> 00:40:15,853\nBut if I look over to router one,\n\n729\n00:40:15,853 --> 00:40:21,310\nit should now be learning those EIGRP\nroutes, and let's go see it if is.\n\n730\n00:40:21,310 --> 00:40:23,550\nOh, I should have turned on my debugging,\nI forgot.\n\n731\n00:40:23,550 --> 00:40:25,430\nOh, well,\nwe'll see here in the routing table.\n\n732\n00:40:25,430 --> 00:40:28,140\nSo, my routing table before\nthe redistribution only had\n\n733\n00:40:28,140 --> 00:40:29,960\ndirectly connected, right?\n\n734\n00:40:29,960 --> 00:40:35,590\nAnd the reason was if we look\nat my diagram, router two?\n\n735\n00:40:35,590 --> 00:40:40,350\nIt only has this 1.1.0/39 in RIP.\n\n736\n00:40:40,350 --> 00:40:42,230\nAnd router one's directly connected to it.\n\n737\n00:40:42,230 --> 00:40:45,450\nSo, router two is not teaching us\nanything we don't already know, so\n\n738\n00:40:45,450 --> 00:40:47,640\nwe don't have any RIP routes\nin our routing table.\n\n739\n00:40:47,640 --> 00:40:55,126\nBut if I look at it now what I can see\nis that I have learned a RIP route.\n\n740\n00:40:55,126 --> 00:41:03,810\nI learned the 3.3.3.0 network as well as\nthe 192.168.3 network from the other side.\n\n741\n00:41:03,810 --> 00:41:07,170\nAnd look at the metric that\nI learned them at, a five.\n\n742\n00:41:07,170 --> 00:41:09,070\nThere's that five that I specified.\n\n743\n00:41:09,070 --> 00:41:13,450\nThat's what it came in as, and\nif we advertise that to somebody else,\n\n744\n00:41:13,450 --> 00:41:15,910\nthat's where it becomes that six.\n\n745\n00:41:15,910 --> 00:41:18,750\nOr if I pick 15, it becomes the 16,\nit becomes unreachable.\n\n746\n00:41:18,750 --> 00:41:20,180\nSo we've gotta be careful there.\n\n747\n00:41:20,180 --> 00:41:23,810\nBut it's coming in as a RIP route,\nadmin distance of 120.\n\n748\n00:41:23,810 --> 00:41:28,232\nAnd a distance or a hop account of five.\n\n749\n00:41:28,232 --> 00:41:28,881\nRight, so\n\n750\n00:41:28,881 --> 00:41:33,825\nI've learned those routes and now I got\nthem right here and I am just running rip.\n\n751\n00:41:33,825 --> 00:41:39,210\nI'm not running EGRIP or OSPF I'm not\ncommunicating to those other guys.\n\n752\n00:41:39,210 --> 00:41:43,570\nActually I am running EGRIP just because\nI have it running in the background.\n\n753\n00:41:43,570 --> 00:41:49,130\nBut if I do a show IP EIRGP neighbor,\nI've got no neighbors.\n\n754\n00:41:49,130 --> 00:41:50,920\nI'm not learning from anybody else.\n\n755\n00:41:50,920 --> 00:41:54,950\nIt's coming in via RIP, and\nit's right here in the table.\n\n756\n00:41:54,950 --> 00:41:58,250\nNow, what I should have done to make this\na little more obvious of what happened was\n\n757\n00:41:58,250 --> 00:42:01,380\nto turn on that debug, so\nI would have seen the routes pop in.\n\n758\n00:42:01,380 --> 00:42:04,670\nBut they came in and we can always go and\nupdate this, and manipulate,\n\n759\n00:42:04,670 --> 00:42:07,200\nyou know maybe I want\nto change that metric.\n\n760\n00:42:07,200 --> 00:42:11,300\nSo I can go back here and\nsay redistribute EIGRP1 metric six, right.\n\n761\n00:42:12,370 --> 00:42:15,440\nAnd now I'm gonna start advertising\nover that higher metric.\n\n762\n00:42:15,440 --> 00:42:18,900\nMy problem here is that RIP\nruns on a time relay though.\n\n763\n00:42:18,900 --> 00:42:20,210\nSo I'll have to wait.\n\n764\n00:42:20,210 --> 00:42:23,900\nAnd sometime in the next 30 seconds,\nor so, it'll update the other router.\n\n765\n00:42:23,900 --> 00:42:24,886\nMaybe I'll get lucky and\nI'll have them fast.\n\n766\n00:42:26,649 --> 00:42:27,251\nAnd, oh, it did.\n\n767\n00:42:27,251 --> 00:42:30,960\nYep, so there you go, I've already got it\ncoming in with that metric of six now.\n\n768\n00:42:30,960 --> 00:42:35,030\nSo we can go and manipulate those values\ninside of the way that we need, right?\n\n769\n00:42:35,030 --> 00:42:39,799\nJust be careful with those metric values,\nbecause they are basically made up.\n\n770\n00:42:39,799 --> 00:42:45,820\nAll right, now in this example,\nI was going EIGRP being brought in to RIP.\n\n771\n00:42:45,820 --> 00:42:49,587\nSo let's cover the basic command,\ncuz the basic commands are the same for\n\n772\n00:42:49,587 --> 00:42:50,450\nall protocols.\n\n773\n00:42:50,450 --> 00:42:52,546\nYou go to the destination protocol,\n\n774\n00:42:52,546 --> 00:42:55,470\nthe person you're trying\nto inject routes into.\n\n775\n00:42:55,470 --> 00:42:59,080\nSo I wanted to inject routes into RIP,\nso I went into router RIP.\n\n776\n00:42:59,080 --> 00:43:03,290\nThen you say distribute,\nfollowed by the protocol and\n\n777\n00:43:03,290 --> 00:43:07,370\nthen the adjusted metric that you're\ngonna be injecting it in with.\n\n778\n00:43:07,370 --> 00:43:10,120\nSo, you distribute whatever\nthat other protocol is.\n\n779\n00:43:10,120 --> 00:43:14,110\nNow, I did EIGRP I could have\ndone some of th other ones too.\n\n780\n00:43:14,110 --> 00:43:16,360\nFor example if I look at my router,\n\n781\n00:43:18,500 --> 00:43:22,480\nI have some one 192.168.2\nnetworks sitting right here.\n\n782\n00:43:22,480 --> 00:43:27,051\nThey're directly connected, but\nI didn't advertise them into RIP or EIGRP.\n\n783\n00:43:27,051 --> 00:43:29,100\nThey're just right here on my system.\n\n784\n00:43:30,290 --> 00:43:38,210\nSo what I could do is Inside of router\nRIP I could say, redistribute connected.\n\n785\n00:43:38,210 --> 00:43:42,550\nAnd that's gonna say, take any directly\nconnected interface that I have, and\n\n786\n00:43:42,550 --> 00:43:44,700\nredistribute it into RIP.\n\n787\n00:43:46,150 --> 00:43:49,400\nNow, I can follow that up with a metric.\n\n788\n00:43:49,400 --> 00:43:51,151\nBut I'm gonna leave that metric off,\nall right.\n\n789\n00:43:51,151 --> 00:43:55,010\nI'm gonna leave it off because I\nhave a default metric of one and so\n\n790\n00:43:55,010 --> 00:43:58,939\nif I just say redistribute connected,\nthen now it's coming in and\n\n791\n00:43:58,939 --> 00:44:02,820\nit should get that metric of one and\nget advertised to other side.\n\n792\n00:44:04,370 --> 00:44:05,785\nIf I had a static route,\n\n793\n00:44:05,785 --> 00:44:09,290\nlet's say that there was a another\nnetwork that was out there.\n\n794\n00:44:09,290 --> 00:44:16,057\nHere, maybe I'll do, I don't know,\nI don't want to do a default route.\n\n795\n00:44:16,057 --> 00:44:17,555\nLet's make up a network.\n\n796\n00:44:17,555 --> 00:44:22,753\nI'll say that the 192.168.4.0\nnetwork is out there,\n\n797\n00:44:22,753 --> 00:44:26,853\nand that it is connected\nover there on router three.\n\n798\n00:44:26,853 --> 00:44:29,520\nAll right, so I'm going to point\nthat one over to router three.\n\n799\n00:44:29,520 --> 00:44:30,480\nAll right?\n\n800\n00:44:30,480 --> 00:44:37,320\nI get back into router RIP and\nI can do redistribute static.\n\n801\n00:44:38,860 --> 00:44:39,580\nAnd I'll go ahead and\n\n802\n00:44:39,580 --> 00:44:41,700\nspecify a metric this time,\nI'll give that one a metric four.\n\n803\n00:44:42,790 --> 00:44:45,799\nAll right,\nI'll punch that metric in there and\n\n804\n00:44:45,799 --> 00:44:49,952\nnow it's gonna push that along and\nget learned on the other side.\n\n805\n00:44:49,952 --> 00:44:55,200\nSo if I jump over to router one,\nit should be learning those routes.\n\n806\n00:44:55,200 --> 00:44:58,868\nAnd I'm just gonna do a show IP route\nRIP so that we can see those and\n\n807\n00:44:58,868 --> 00:45:02,674\nI can see the 192.168.2 networks\ncoming in right there and\n\n808\n00:45:02,674 --> 00:45:05,031\nI didn't specify their metric, right?\n\n809\n00:45:05,031 --> 00:45:09,430\nAnd they're coming in with that\nmetric of one because that was\n\n810\n00:45:09,430 --> 00:45:12,605\nthe default metric on the route.\n\n811\n00:45:12,605 --> 00:45:13,995\nAnd then if I look,\nI've got that 192.168.4,\n\n812\n00:45:13,995 --> 00:45:19,885\nthat has the metric of four because\nthat's what I specified in the command,\n\n813\n00:45:19,885 --> 00:45:21,380\nright so they're all being learned.\n\n814\n00:45:21,380 --> 00:45:26,720\nRouter one has no idea of\nthe source of any of these.\n\n815\n00:45:26,720 --> 00:45:31,290\nRouter one is completely unaware\nthat these came from EIGRP, or\n\n816\n00:45:31,290 --> 00:45:33,870\nthat these didn't come from a protocol\nat all, they came from a static or\n\n817\n00:45:33,870 --> 00:45:37,040\na directly connected,\ncompletely unaware, right.\n\n818\n00:45:37,040 --> 00:45:40,100\nBe cautious of that,\nwith a distance factor protocol,\n\n819\n00:45:40,100 --> 00:45:41,440\nit doesn't know the source of this stuff.\n\n820\n00:45:41,440 --> 00:45:43,490\nIt just knows the neighbor\nthat it talked to.\n\n821\n00:45:43,490 --> 00:45:45,650\nSo it views all these as equal.\n\n822\n00:45:45,650 --> 00:45:48,850\nThese are all just learned RIP\nroutes that came in, they're good,\n\n823\n00:45:48,850 --> 00:45:50,920\nwe can trust them, let's use them.\n\n824\n00:45:50,920 --> 00:45:54,049\nThat's how it functions, so keep that\nin mind as you start to redistribute.\n\n825\n00:45:56,710 --> 00:45:59,735\nAll right, now if we wanted to\nredistribute from other protocols,\n\n826\n00:45:59,735 --> 00:46:00,718\nlike say I was running OSPF.\n\n827\n00:46:00,718 --> 00:46:06,180\nIf I wanna redistribute that into RIP,\nit's really the same basic process right?\n\n828\n00:46:06,180 --> 00:46:11,889\nRedistribute OSPF followed by\nthe process number, right?\n\n829\n00:46:11,889 --> 00:46:13,292\nOSPF is the process number.\n\n830\n00:46:13,292 --> 00:46:16,337\nSo router, OSPF, shoot, let me backtrack,\n\n831\n00:46:16,337 --> 00:46:20,800\nI wanna make sure I don't get this\nconfused and we'll just type it.\n\n832\n00:46:20,800 --> 00:46:25,920\nAll right, so if I wanted to redistribute,\nhere we go OSPF,\n\n833\n00:46:25,920 --> 00:46:28,110\nI'd follow that up with\na process ID right.\n\n834\n00:46:28,110 --> 00:46:31,490\nSo I'll just say process ID one and\nif I stop right there\n\n835\n00:46:31,490 --> 00:46:36,810\nall my OSPF routes will be redistributed\ninto RIP with that default metric of one.\n\n836\n00:46:36,810 --> 00:46:39,250\nOr I can specify what I\nwant that metric to be.\n\n837\n00:46:39,250 --> 00:46:40,130\nOkay?\n\n838\n00:46:40,130 --> 00:46:43,440\nThere's this other option here to\ntransparently redistribute the metric.\n\n839\n00:46:43,440 --> 00:46:44,260\nYou don't wanna use that.\n\n840\n00:46:44,260 --> 00:46:47,410\nThat's a really old feature\nfrom back in the day.\n\n841\n00:46:47,410 --> 00:46:50,840\nAnd what it does is it just\ntakes the OSPF metric, and\n\n842\n00:46:50,840 --> 00:46:56,300\nit crams it into the RIP metric\nwhich it's gonna be a high number.\n\n843\n00:46:56,300 --> 00:46:58,780\nSo it's not something that's\nreally gonna work most times, so\n\n844\n00:46:58,780 --> 00:47:02,090\nit's not a great feature to have.\n\n845\n00:47:02,090 --> 00:47:04,570\nBut here i can assign that metric and\nit's gonna go in and\n\n846\n00:47:04,570 --> 00:47:07,670\nthat's easy enough to\ndo the redistribution.\n\n847\n00:47:07,670 --> 00:47:11,710\nAnd you can redistribute more than one\nprotocol into the same destination.\n\n848\n00:47:11,710 --> 00:47:16,170\nIf I take a look at the RIP config,\nyou'll see I've got\n\n849\n00:47:16,170 --> 00:47:20,900\nseveral redistributes now going on and\nI keep accidentally clicking that,\n\n850\n00:47:20,900 --> 00:47:24,200\nthere we go, and so I'm redistributing\nall those right in there.\n\n851\n00:47:24,200 --> 00:47:25,140\nWorks great.\n\n852\n00:47:25,140 --> 00:47:26,180\nIt's pretty straightforward.\n\n853\n00:47:28,240 --> 00:47:30,310\nAll right, well,\nthat's pretty much it for RIP.\n\n854\n00:47:30,310 --> 00:47:31,678\nRIP is not the most exciting.\n\n855\n00:47:31,678 --> 00:47:34,417\nWe're gonna take a look at EIGRP and\nOSPF next.\n\n856\n00:47:34,417 --> 00:47:37,095\nThey're a little more complex\nbecause they're metric.\n\n857\n00:47:37,095 --> 00:47:41,128\nSo we'll get a chance to see those But\nfor now, let's pause and take a break and\n\n858\n00:47:41,128 --> 00:47:44,201\nwhen we get back,\nmore redistribution action after this.\n\n859\n00:47:44,201 --> 00:47:50,993\n[MUSIC]\n\n860\n00:47:50,993 --> 00:47:52,950\nAll right, welcome back everybody.\n\n861\n00:47:52,950 --> 00:47:56,920\nSo in the first segment, we got\na chance to see taking EIGRP routes and\n\n862\n00:47:56,920 --> 00:48:01,371\ninjecting them into a RIP environment so\nthat our routers would learn them and\n\n863\n00:48:01,371 --> 00:48:05,160\nnow what I wanna do is flip it around,\nand go the other direction.\n\n864\n00:48:05,160 --> 00:48:08,808\nWe're gonna be setting up what's\ncalled mutual redistribution,\n\n865\n00:48:08,808 --> 00:48:14,060\nsending the RIP routes into EIGRP, so\nthat I can have a fully converged network.\n\n866\n00:48:14,060 --> 00:48:17,550\nAs it stands, all the redistribution\nwe did in the first segment was\n\n867\n00:48:17,550 --> 00:48:22,480\njust going into RIP, we had EIGRP as\na source but never a destination.\n\n868\n00:48:22,480 --> 00:48:24,670\nSo let's verify that before\nwe dive into this too deep.\n\n869\n00:48:25,870 --> 00:48:30,680\nRouter 3 over here is entirely in\nthe EIGRP autonomous system, and so\n\n870\n00:48:30,680 --> 00:48:36,330\nif I jump over to Router 3 and\nI take a look at its routing table,\n\n871\n00:48:36,330 --> 00:48:39,190\nI can look in here and\nI only see directly connected routes.\n\n872\n00:48:39,190 --> 00:48:44,450\nI don't see any EIGRP routes, RIP, OSPF,\nwhatever, I don't see any other routes.\n\n873\n00:48:44,450 --> 00:48:48,430\nMy routes are being sent to the other\nside but I'm not learning them back and\n\n874\n00:48:48,430 --> 00:48:51,550\nthat means I really only have unit\ndirectional connectivity right now.\n\n875\n00:48:51,550 --> 00:48:54,430\nThose other hosts actually can't\ncommunicate with my network,\n\n876\n00:48:54,430 --> 00:48:56,100\ncuz I don't know how to\nget back to them,right.\n\n877\n00:48:56,100 --> 00:48:59,690\nSo, I really have a partial\nnetwork at this point.\n\n878\n00:48:59,690 --> 00:49:03,567\nSo, what I wanna do is set\nup that redistribution,\n\n879\n00:49:03,567 --> 00:49:08,976\ngo the other way around but this time,\nI'm gonna do a debug IP routing,\n\n880\n00:49:08,976 --> 00:49:14,280\nso that we can see this in action,\nsee these new routes come in.\n\n881\n00:49:14,280 --> 00:49:18,440\nNow, I'm running the EIGRP and EIGRP,\nfor the most part, just sends out\n\n882\n00:49:18,440 --> 00:49:22,217\nannouncements when things change and then\nit has it's periodic announcements that\n\n883\n00:49:22,217 --> 00:49:25,140\nare, do remember how long it is,\nRonnie, is it every 6 minutes or 15?\n\n884\n00:49:25,140 --> 00:49:26,330\n>> Yeah.\nNo, I don't remember.\n\n885\n00:49:26,330 --> 00:49:28,840\n>> At set intervals,\nit does send little status messages, so\n\n886\n00:49:28,840 --> 00:49:32,830\nI'll probably see some routing table just\nrefresh messages every now and then but\n\n887\n00:49:32,830 --> 00:49:35,640\nfor the most part, this is stable,\nmy routing table is not changing.\n\n888\n00:49:37,410 --> 00:49:40,980\nAnd as I inject routes in,\nwe'll start to see them.\n\n889\n00:49:40,980 --> 00:49:44,950\nNow also remember that I redistributed\nthose connected routes, and\n\n890\n00:49:44,950 --> 00:49:48,310\nsome interesting things will happen there\nthat we'll get a chance to see too.\n\n891\n00:49:48,310 --> 00:49:54,420\nI redistributed those into RIP, and now\nI'm going to redistribute RIP into EIGRP.\n\n892\n00:49:54,420 --> 00:49:55,995\nSo, let's think about\nwhat's happening there.\n\n893\n00:49:55,995 --> 00:50:01,260\nWell, if my directly connected route,\nthese guys on Router 2 are being\n\n894\n00:50:01,260 --> 00:50:06,690\nredistributed into RIP and\nthen I redistribute RIP into EIGRP,\n\n895\n00:50:07,760 --> 00:50:11,720\ndoes that mean we'll get these\ndirectly connected routes into EIGRP?\n\n896\n00:50:11,720 --> 00:50:17,710\nOn a single router like this,\nthe answer is no, we won't\n\n897\n00:50:17,710 --> 00:50:23,400\nbecause what it does is on your 1 router,\nit will not allow you to take a route,\n\n898\n00:50:23,400 --> 00:50:26,950\nredistribute it into one protocol and then\nredistribute it over into the other ones.\n\n899\n00:50:26,950 --> 00:50:29,930\nThe reason is, remember something\nI said earlier in the show,\n\n900\n00:50:29,930 --> 00:50:34,710\nyou can only redistribute a route\nthat made it into your routing table.\n\n901\n00:50:34,710 --> 00:50:37,700\nMy directly connected route\nis in the routing table.\n\n902\n00:50:37,700 --> 00:50:42,110\nWhen I redistributed into RIP, that's not\nin my routing table, that's in these other\n\n903\n00:50:42,110 --> 00:50:46,250\nguys routing tables but not mine, so\nI'm not gonna redistribute it into EIGRP.\n\n904\n00:50:46,250 --> 00:50:50,080\nI'll need to redistribute it\nagain directly into EIGRP\n\n905\n00:50:50,080 --> 00:50:51,740\nif I want those routes to be visible.\n\n906\n00:50:53,580 --> 00:50:56,970\nSo let's go take a look at that,\nI'm gonna push these routes into EIGRP.\n\n907\n00:50:56,970 --> 00:51:01,394\nNow when we dealt with RIP,\nthe metric was really easy,\n\n908\n00:51:01,394 --> 00:51:06,118\nthat's why I started with it right,\na metric of hop count.\n\n909\n00:51:06,118 --> 00:51:09,452\nEIGRP's metric's a little more complex.\n\n910\n00:51:09,452 --> 00:51:17,002\nSo on Router 2,\nI'm gonna get into router EIGRP 1 and\n\n911\n00:51:17,002 --> 00:51:21,937\nI'm gonna set up a default metric.\n\n912\n00:51:21,937 --> 00:51:25,683\nNow when I do a default metric,\nit's this big number,\n\n913\n00:51:25,683 --> 00:51:29,030\nI can pick what I want that metric to be.\n\n914\n00:51:29,030 --> 00:51:30,240\nThis big number, though,\n\n915\n00:51:30,240 --> 00:51:35,350\nit's not just one number, it's\nthe result of a fairly complex equation,\n\n916\n00:51:35,350 --> 00:51:40,390\nthe diffusing update algorithm that it\nruns to be able to generate this number.\n\n917\n00:51:43,090 --> 00:51:46,585\nI think you said earlier, Ronnie,\nit's an aggregate metric, it's made up of\n\n918\n00:51:46,585 --> 00:51:49,680\nbandwidth and delay by default and\nso this number, what does it mean?\n\n919\n00:51:50,780 --> 00:51:52,540\nI don't really know, right.\n\n920\n00:51:52,540 --> 00:51:54,190\nIf I say my metric is 10,000,\n\n921\n00:51:54,190 --> 00:51:58,740\ndoes that mean I had a certain amount of\nbandwidth or a certain amount of delay?\n\n922\n00:51:58,740 --> 00:52:00,580\nThere's more than one answer to it.\n\n923\n00:52:00,580 --> 00:52:03,600\nSo default metrics aren't\nas useful with EIGRP.\n\n924\n00:52:04,620 --> 00:52:08,120\nYou can certainly specify them if you want\nto, but you don't necessarily have to.\n\n925\n00:52:08,120 --> 00:52:11,760\nI might go ahead and set one,\nI might set it to something like 10,000,\n\n926\n00:52:11,760 --> 00:52:16,580\nwhich is probably a little too low, just\nto have a value in there but oftentimes,\n\n927\n00:52:16,580 --> 00:52:19,340\nI don't even bother with\nthe default metric.\n\n928\n00:52:19,340 --> 00:52:23,050\nIf we just specify\nthe metric with each entry,\n\n929\n00:52:23,050 --> 00:52:24,710\nwe actually have a lot more control.\n\n930\n00:52:25,820 --> 00:52:31,880\nSo if I want to set my default\nmetric here, we can do that,\n\n931\n00:52:31,880 --> 00:52:37,570\nI can go through and specify it,\npiece by piece or as a single number.\n\n932\n00:52:37,570 --> 00:52:40,170\nPiece by piece makes a lot more\nsense cuz now I can say I've got\n\n933\n00:52:40,170 --> 00:52:43,030\nthis amount of bandwidth,\nI've got this amount of delay, and so\n\n934\n00:52:43,030 --> 00:52:45,840\non and it will prompt me for\nthat as I go through.\n\n935\n00:52:45,840 --> 00:52:48,666\nSo if my bandwidth is ten megabit, right.\n\n936\n00:52:48,666 --> 00:52:52,180\nWell, right here on my first metric,\nit's asking for what that bandwidth is,\n\n937\n00:52:52,180 --> 00:52:54,340\nI can put in ten megabit.\n\n938\n00:52:54,340 --> 00:52:59,274\nIt's measured in kilobits,\nso 10,000 kilobits.\n\n939\n00:52:59,274 --> 00:53:04,410\nThen, if I press,\nI guess I have to spell the command.\n\n940\n00:53:04,410 --> 00:53:06,240\nThere we go.\nDefault dash metric,\n\n941\n00:53:06,240 --> 00:53:07,790\nthen it's gonna ask me what my delay is.\n\n942\n00:53:08,920 --> 00:53:11,900\nMy delay, I don't know my delay.\n\n943\n00:53:11,900 --> 00:53:13,960\nHow long does it take\na packet to get to and\n\n944\n00:53:13,960 --> 00:53:16,520\nback again from this other destination?\n\n945\n00:53:16,520 --> 00:53:17,210\nI don't know.\n\n946\n00:53:17,210 --> 00:53:18,730\nSo I can put a value in here.\n\n947\n00:53:18,730 --> 00:53:25,140\nNow, understand that with this one, a low\nnumber is good, a high number is bad.\n\n948\n00:53:25,140 --> 00:53:27,880\nSo the bigger number I put,\nthe worse my connection is.\n\n949\n00:53:27,880 --> 00:53:31,267\nSo I'm gonna put something really low and\nthe temptation is to put zero but\n\n950\n00:53:31,267 --> 00:53:34,280\nzero can actually cause some problems,\nso I'm going to put one.\n\n951\n00:53:34,280 --> 00:53:41,120\nThen we've got the reachability,\nreachability is how stable is the line.\n\n952\n00:53:41,120 --> 00:53:44,796\nThis one's the opposite,\nthe higher the number, the better.\n\n953\n00:53:44,796 --> 00:53:49,280\nThe higher the stability or the higher the\nreliability, the more stable that line is\n\n954\n00:53:49,280 --> 00:53:53,820\nand it's a value from 0 to 255, so\n255 means it's completely stable.\n\n955\n00:53:53,820 --> 00:53:58,109\nNow, it doesn't really matter what I\nput here because in the dual formula by\n\n956\n00:53:58,109 --> 00:54:02,265\ndefault, it ignores reliability but\nif you've modified your k values,\n\n957\n00:54:02,265 --> 00:54:05,368\nif you're using it,\nthen you need to put a value here.\n\n958\n00:54:05,368 --> 00:54:12,660\nI'll say 255, then, what the load is.\n\n959\n00:54:12,660 --> 00:54:16,747\nAnd load is how busy that line is and\nI often don't know what the load is but\n\n960\n00:54:16,747 --> 00:54:20,769\nhere one would mean that it's\ncompletely empty, not doing anything,\n\n961\n00:54:20,769 --> 00:54:26,160\n255 would mean it's 100% saturated, it's\ncompletely in use, and that would be bad.\n\n962\n00:54:26,160 --> 00:54:29,143\nBut if we just have to guess,\nthe safe value to put is one, to say yeah,\n\n963\n00:54:29,143 --> 00:54:30,870\nthe whole line's available.\n\n964\n00:54:30,870 --> 00:54:35,493\nWe don't actually know what the load\nis on that line but we’ll use one.\n\n965\n00:54:35,493 --> 00:54:40,067\nAnd then lastly, we’ve got the MTU, and\nMTU is ignored by all the dual formulas,\n\n966\n00:54:40,067 --> 00:54:41,789\nso you can’t even turn it on but\n\n967\n00:54:41,789 --> 00:54:46,850\nI’ll just specify 1,500 because that’s\na pretty common one right there.\n\n968\n00:54:46,850 --> 00:54:51,678\nSo what I’m saying here is I’ve got a ten\nmegabit line with a one millisecond delay,\n\n969\n00:54:51,678 --> 00:54:56,438\nit’s completely stable, and it's\ncompletely available, bandwidth-wise and\n\n970\n00:54:56,438 --> 00:54:58,350\nits MTU, it's 1500 bytes.\n\n971\n00:54:59,540 --> 00:55:03,400\nThat's that default metric that I just\nset, so if I don't provide a metric for\n\n972\n00:55:03,400 --> 00:55:05,910\na route when I redistribute it,\nthis is the one that it'll use.\n\n973\n00:55:07,510 --> 00:55:12,073\nIt will run the dual formula on this and\ngenerate the single big number that\n\n974\n00:55:12,073 --> 00:55:14,951\nactually represents\nthe metric of that line.\n\n975\n00:55:17,743 --> 00:55:21,522\nSetting a default metric,\nthat's a lot harder in EIGRP,\n\n976\n00:55:21,522 --> 00:55:24,464\nredistributing the route\nis the same as RIP.\n\n977\n00:55:24,464 --> 00:55:27,795\nThe big difference being that when we\nredistribute we'll have to provide that\n\n978\n00:55:27,795 --> 00:55:28,711\nmetric if we want to.\n\n979\n00:55:28,711 --> 00:55:33,516\nI could just say redistribute RIP.\n\n980\n00:55:33,516 --> 00:55:35,087\nAnd press Enter.\n\n981\n00:55:35,087 --> 00:55:38,630\nNow, it's gonna take all my RIP routes and\npush them into EIGRP.\n\n982\n00:55:38,630 --> 00:55:42,440\nSo, it's gonna push them along and\nit's gonna use that default metric.\n\n983\n00:55:43,550 --> 00:55:49,575\nOr I could have said\nredistribute [SOUND] connected.\n\n984\n00:55:49,575 --> 00:55:55,690\nAnd [COUGH] then, provided the metric,\nif I wanted to provide alternate values.\n\n985\n00:55:56,860 --> 00:56:02,904\nSo, maybe my connection to\nthese guys is ten megabit,\n\n986\n00:56:02,904 --> 00:56:05,740\nbut maybe my delay is greater.\n\n987\n00:56:05,740 --> 00:56:10,610\nMaybe, my delay is like 40 milliseconds,\nit’s some kind of WAN link or something.\n\n988\n00:56:10,610 --> 00:56:12,380\nSo, I’ll put a greater delay on there.\n\n989\n00:56:12,380 --> 00:56:14,360\nAnd then, it's stable.\n\n990\n00:56:14,360 --> 00:56:16,380\nIt's completely available right now.\n\n991\n00:56:16,380 --> 00:56:18,230\nAlthough, I can specify\nwhatever I wanted there.\n\n992\n00:56:18,230 --> 00:56:19,820\nIt's just not gonna get used.\n\n993\n00:56:19,820 --> 00:56:22,990\nSo, maybe, I'll say, it's, let's go half.\n\n994\n00:56:24,050 --> 00:56:26,480\nSo, we're halfway saturated.\n\n995\n00:56:26,480 --> 00:56:28,610\nI guess half would be like 127.\n\n996\n00:56:28,610 --> 00:56:30,720\nAnd then, the MTU, I'll set at 1500.\n\n997\n00:56:30,720 --> 00:56:34,640\nSo, now, I'm redistributing those\nconnected routes into EIRGP.\n\n998\n00:56:34,640 --> 00:56:36,320\nThey're gonna get learned\non the other side.\n\n999\n00:56:36,320 --> 00:56:37,720\nAnd that metric's gonna be\na little bit different.\n\n1000\n00:56:39,060 --> 00:56:44,350\nIf I jump over to router three, look at\nall the stuff that's come up on my screen.\n\n1001\n00:56:44,350 --> 00:56:46,970\nHere's where I ran redistribute RIP.\n\n1002\n00:56:46,970 --> 00:56:49,020\nAnd so, we started learning those routes.\n\n1003\n00:56:49,020 --> 00:56:53,300\nAnd there's that default metric they got,\n281,856.\n\n1004\n00:56:53,300 --> 00:56:56,530\nThat's that big number,\nthat's the result of that formula.\n\n1005\n00:56:57,600 --> 00:56:59,050\nThen, down here,\n\n1006\n00:56:59,050 --> 00:57:02,840\nI should see where my directly\nconnected routes started to come in.\n\n1007\n00:57:02,840 --> 00:57:07,070\nAnd they've got a different metric,\n291,840, as opposed to 281,000.\n\n1008\n00:57:07,070 --> 00:57:12,280\nThat's because of the alternate\ndelay that I put in.\n\n1009\n00:57:12,280 --> 00:57:15,360\nI took the delay from one\nmillisecond to 40 milliseconds, and\n\n1010\n00:57:15,360 --> 00:57:17,240\nthat's the effect that\nit had on that metric.\n\n1011\n00:57:18,570 --> 00:57:19,740\nSo, those routes are coming in,\n\n1012\n00:57:19,740 --> 00:57:24,680\nand if I look at my routing table,\nI can see there they are.\n\n1013\n00:57:26,510 --> 00:57:27,370\nCouple of things to note.\n\n1014\n00:57:28,600 --> 00:57:31,069\nWhen I learned the RIP\nroutes in the first segment,\n\n1015\n00:57:31,069 --> 00:57:33,320\nthey just showed us RIP routes and\nthat was it.\n\n1016\n00:57:33,320 --> 00:57:37,080\nRIP doesn't have an identifier for\ninternal or external,\n\n1017\n00:57:37,080 --> 00:57:38,330\njust everything is treated the same.\n\n1018\n00:57:39,690 --> 00:57:41,830\nBut EIGRP does have a difference.\n\n1019\n00:57:42,920 --> 00:57:49,400\nIn EIGRP, you have internal EIGRP routes,\nwhich are from your autonomous system.\n\n1020\n00:57:49,400 --> 00:57:54,040\nAnd you have external routes that are\nlearned from outside sources anywhere else\n\n1021\n00:57:54,040 --> 00:57:54,610\nthat's out there.\n\n1022\n00:57:55,700 --> 00:57:59,400\nAnd so,\nnotice how these are marked as DEX.\n\n1023\n00:57:59,400 --> 00:58:02,210\nD means it's the IGRP and\nEX means it's external.\n\n1024\n00:58:02,210 --> 00:58:09,075\nIt's an external source, and\nas a result its admin distance is 170.\n\n1025\n00:58:09,075 --> 00:58:13,510\nNow, what's the problem with\nhaving an admin distance of 170?\n\n1026\n00:58:13,510 --> 00:58:19,250\nWell, if I'm running other protocols like\nRIP, RIP has an admin distance of 120.\n\n1027\n00:58:19,250 --> 00:58:25,620\nThat's better than 170, I would prefer\na RIP route over this external route.\n\n1028\n00:58:27,000 --> 00:58:28,440\nWhy would Cisco choose to do that?\n\n1029\n00:58:28,440 --> 00:58:30,530\nWhy would Cisco make these so bad?\n\n1030\n00:58:30,530 --> 00:58:33,480\nThe reason is if we imported these,\nwhere did the metric come from?\n\n1031\n00:58:34,510 --> 00:58:35,530\nWe made it up.\n\n1032\n00:58:35,530 --> 00:58:37,260\nWe made up that metric.\n\n1033\n00:58:37,260 --> 00:58:40,060\nI would rather trust a RIP\nroute that had a real metric.\n\n1034\n00:58:40,060 --> 00:58:42,700\nA real crappy one, but real nonetheless,\n\n1035\n00:58:42,700 --> 00:58:46,100\nversus an external EIGRP route\nwhere I made up that metric.\n\n1036\n00:58:47,300 --> 00:58:48,980\nSo, that can be a bit of a problem.\n\n1037\n00:58:48,980 --> 00:58:50,410\nIt can create a conflict.\n\n1038\n00:58:50,410 --> 00:58:53,840\nA conflict between sub-optimal RIP\nroutes that we might have learnt,\n\n1039\n00:58:53,840 --> 00:58:56,740\nor sub-optimal OSPF routes\nthat we might have learnt, and\n\n1040\n00:58:56,740 --> 00:58:59,900\nthe external EIGRP routes\nthat we do want to use.\n\n1041\n00:59:00,980 --> 00:59:04,790\nSo, when these came in that admin\ndistance might not be ideal for\n\n1042\n00:59:04,790 --> 00:59:07,030\nus, it might not be exactly what we want.\n\n1043\n00:59:07,030 --> 00:59:09,740\nYou can override that.\n\n1044\n00:59:09,740 --> 00:59:12,050\nPersonally, I would use\na route map at this point and\n\n1045\n00:59:12,050 --> 00:59:15,440\npick the routes that I wanted to override\nand just pump their admin distance.\n\n1046\n00:59:15,440 --> 00:59:19,050\nBut at this stage, just to keep it simple,\none easy thing that we can do is we can\n\n1047\n00:59:19,050 --> 00:59:23,590\nmodify the admin distance of all external\nroutes to be something lower, so\n\n1048\n00:59:23,590 --> 00:59:26,000\nthat we'll prefer it over OSPF or EIGRP.\n\n1049\n00:59:27,070 --> 00:59:30,483\nWe'll see administrative distances again\nin other episodes as we start to deal with\n\n1050\n00:59:30,483 --> 00:59:31,990\nroute manipulation more.\n\n1051\n00:59:31,990 --> 00:59:35,010\nBut right now,\nlet me show you an easy way to change that\n\n1052\n00:59:35,010 --> 00:59:38,020\nto insure that your external routes don't\nget overridden by the other protocols.\n\n1053\n00:59:39,200 --> 00:59:42,430\nOn router three,\nif I jump into my configuration, and\n\n1054\n00:59:42,430 --> 00:59:48,420\ninto router EIRGP 1,\nyou can use the distance command.\n\n1055\n00:59:48,420 --> 00:59:51,770\nAnd in the distance command, you can\nset the administrative distance for\n\n1056\n00:59:51,770 --> 00:59:54,800\nyour system and the default is.\n\n1057\n00:59:54,800 --> 00:59:57,270\nHere, you're like setting\na route administrative distance.\n\n1058\n00:59:57,270 --> 01:00:00,720\nThis would be for all your stuff, that's\nnot necessarily what you want to do here.\n\n1059\n01:00:00,720 --> 01:00:02,920\nSo, I'm gonna say distance EIGRP.\n\n1060\n01:00:04,000 --> 01:00:05,870\nAnd then, it lets me pick a distance for\n\n1061\n01:00:05,870 --> 01:00:09,140\nmy internal routes followed\nby my external routes.\n\n1062\n01:00:09,140 --> 01:00:09,730\nPeople overlook that.\n\n1063\n01:00:09,730 --> 01:00:11,210\nThey look at that,\nthey do a question mark, and they go,\n\n1064\n01:00:11,210 --> 01:00:13,630\nwell, I don’t wanna change my\ninternal routes, and they stop.\n\n1065\n01:00:13,630 --> 01:00:17,900\nWell, if you specify it,\nEIGRP internal routes default to 90, so\n\n1066\n01:00:17,900 --> 01:00:22,340\nI’m just gonna put 90 and then here,\nI can do the external routes.\n\n1067\n01:00:22,340 --> 01:00:28,640\nAnd I’m gonna make my external routes 100,\n93 internal, 100 for external.\n\n1068\n01:00:28,640 --> 01:00:31,630\nI'll still trust my internal routes\nmore than external, that makes sense,\n\n1069\n01:00:31,630 --> 01:00:33,730\nyou should trust your own network.\n\n1070\n01:00:33,730 --> 01:00:38,340\nBut I'll trust my externals\nmore than I trust OSPF or RIP.\n\n1071\n01:00:38,340 --> 01:00:43,770\nOSPF at 110 and RIP at 120, I'll make\nit 100 and now, I'll trust those more.\n\n1072\n01:00:46,110 --> 01:00:50,070\nIf I take a look at my routing table now,\nsee how they're still 170?\n\n1073\n01:00:50,070 --> 01:00:53,430\nIt's because I've already\nlearned them at 170.\n\n1074\n01:00:53,430 --> 01:00:54,570\nBut there we go.\n\n1075\n01:00:54,570 --> 01:00:57,420\nNotice the stuff is starting to update,\nmy routes are starting to change,\n\n1076\n01:00:57,420 --> 01:00:58,590\nI'm deleting routes.\n\n1077\n01:00:58,590 --> 01:00:59,540\nAnd now, they're coming back.\n\n1078\n01:00:59,540 --> 01:01:01,180\nI forgot, I had the debug running.\n\n1079\n01:01:01,180 --> 01:01:03,500\nSo, as date are updating,\nand there they are.\n\n1080\n01:01:03,500 --> 01:01:06,110\nNow, they're coming in with\nthat admin distance of 100.\n\n1081\n01:01:06,110 --> 01:01:11,533\nSo, these new routes [SOUND],\nhave an admin distance of 100.\n\n1082\n01:01:11,533 --> 01:01:15,220\nI will trust them over OSPF and RIP.\n\n1083\n01:01:15,220 --> 01:01:19,910\nAnd if you've ever wondered why Cisco left\nthose gaps in between the admin distances,\n\n1084\n01:01:19,910 --> 01:01:21,075\nthis is exactly why.\n\n1085\n01:01:21,075 --> 01:01:25,495\nSo, that we can manipulate which protocols\nget chosen based on our preference,\n\n1086\n01:01:25,495 --> 01:01:27,909\nnot based on somebody else's preference.\n\n1087\n01:01:33,283 --> 01:01:38,440\nSo, if we take a look at that EIGRP\nconfiguration so far, nothing too flashy.\n\n1088\n01:01:38,440 --> 01:01:39,600\nOh, I'm on the wrong router.\n\n1089\n01:01:39,600 --> 01:01:41,116\nLet me get back over\nto router two [SOUND].\n\n1090\n01:01:41,116 --> 01:01:46,190\n[LAUGH] Keep getting all\nmy routers mixed up today.\n\n1091\n01:01:46,190 --> 01:01:49,810\nSo, if I take a look at my configuration\nhere on the central router,\n\n1092\n01:01:49,810 --> 01:01:51,560\nthe one in the middle of this whole mess.\n\n1093\n01:01:51,560 --> 01:01:55,860\nYou can see that I went into router\nEIGRP 1, I set that default metric.\n\n1094\n01:01:55,860 --> 01:01:58,800\nJust like we did with RIP,\nbut a little more complex.\n\n1095\n01:01:58,800 --> 01:02:03,560\nAnd then, I redistributed the RIP routes\nin, just going with that default metric\n\n1096\n01:02:03,560 --> 01:02:07,570\nand I redistributed my connected\nroutes in, and there we go.\n\n1097\n01:02:07,570 --> 01:02:10,950\nNow, I didn't redistribute my\nstatic route and the reason is,\n\n1098\n01:02:10,950 --> 01:02:13,650\nI had to think about\nwhat damage it would do.\n\n1099\n01:02:13,650 --> 01:02:16,240\nIf you look at that static route\nthat I made, where is that guy?\n\n1100\n01:02:16,240 --> 01:02:17,170\nRight here.\n\n1101\n01:02:17,170 --> 01:02:20,835\nI was routing it right back to\nthe other router and it doesn't exist.\n\n1102\n01:02:20,835 --> 01:02:22,540\nBut it'll probably redistribute just fine.\n\n1103\n01:02:22,540 --> 01:02:26,740\nIf I bring that one in, so\nI'll just redistribute static.\n\n1104\n01:02:26,740 --> 01:02:32,860\nWhat's gonna happen is, my destination for\n192.168.4.0 is router three.\n\n1105\n01:02:32,860 --> 01:02:38,080\nAnd now, I'm gonna inject that route into\nEIGRP and advertise it to router three.\n\n1106\n01:02:38,080 --> 01:02:39,366\nWhat's router three gonna do with that?\n\n1107\n01:02:39,366 --> 01:02:42,448\nIt's gonna say,\nhere's a route that points to me, but\n\n1108\n01:02:42,448 --> 01:02:45,240\nI don't know where 192.168.4 is.\n\n1109\n01:02:45,240 --> 01:02:47,470\nAnd so, most likely,\nthat route will be invalidated.\n\n1110\n01:02:47,470 --> 01:02:50,160\nLet's see if it actually makes\nit into the routing table.\n\n1111\n01:02:50,160 --> 01:02:51,550\nActually, it did.\n\n1112\n01:02:51,550 --> 01:02:54,320\nThat's pretty.\nOh, so, I've injected a loop now, so\n\n1113\n01:02:54,320 --> 01:02:55,500\nlet's take a look at that.\n\n1114\n01:02:55,500 --> 01:02:56,820\nThis is always fun.\n\n1115\n01:02:56,820 --> 01:03:01,403\nWhoops.\n[LAUGH] It would be fun if I could get\n\n1116\n01:03:01,403 --> 01:03:03,116\nout of this.\n\n1117\n01:03:03,116 --> 01:03:06,449\nIf I take a look at my routing table and\nhunt around for that 192.168.4,\n\n1118\n01:03:06,449 --> 01:03:07,380\nit's right here.\n\n1119\n01:03:07,380 --> 01:03:08,560\nIt's external.\n\n1120\n01:03:08,560 --> 01:03:12,200\nSee how I learned that via 3.3.3.1.\n\n1121\n01:03:12,200 --> 01:03:14,050\nI learned it via router one.\n\n1122\n01:03:14,050 --> 01:03:17,713\nI mean, router two, so let me get back to\nmy diagram, make sure I get this right.\n\n1123\n01:03:17,713 --> 01:03:21,239\nSo, on router three,\nit just learned that it could\n\n1124\n01:03:21,239 --> 01:03:25,587\nget to the 192.168.4 network\nby going to router two.\n\n1125\n01:03:25,587 --> 01:03:28,431\nAnd on router two,\nit's got a static route.\n\n1126\n01:03:28,431 --> 01:03:32,610\nThis says you can get to the 192.168.4\nnetwork by going to router three.\n\n1127\n01:03:33,620 --> 01:03:34,680\nThat's a routing loop.\n\n1128\n01:03:34,680 --> 01:03:37,530\nThe two routers think that\nthey need to go to each other.\n\n1129\n01:03:37,530 --> 01:03:39,950\nNow, normally,\nsplit-horizon would have stopped this.\n\n1130\n01:03:39,950 --> 01:03:42,570\nSplit-horizon would have kicked in and\nsaid, hey,\n\n1131\n01:03:42,570 --> 01:03:46,730\nyou can't advertise the 192.168.4 network\nat the same interface you learned it on.\n\n1132\n01:03:46,730 --> 01:03:47,890\nWe'll stop it.\n\n1133\n01:03:47,890 --> 01:03:51,430\nBut when you redistribute,\nsplit-horizon doesn't apply.\n\n1134\n01:03:51,430 --> 01:03:53,372\nYou're going between protocols.\n\n1135\n01:03:53,372 --> 01:03:56,600\nSo, split-horizon has to happen\nright here, in your head.\n\n1136\n01:03:56,600 --> 01:03:58,810\nYou've got to monitor and look for that.\n\n1137\n01:03:58,810 --> 01:04:00,320\nI just created a loop.\n\n1138\n01:04:00,320 --> 01:04:02,980\nThese routers are gonna have a problem.\n\n1139\n01:04:02,980 --> 01:04:08,202\nOn router three,\nif I do a show IP route for 192.168.4.1.\n\n1140\n01:04:10,780 --> 01:04:14,938\nIt’s gonna show that we can get there,\nwe learned it via EIGRP,\n\n1141\n01:04:14,938 --> 01:04:18,360\nwe can get there by\ngoing to router 3.3.3.1.\n\n1142\n01:04:18,360 --> 01:04:21,400\nThat’s my router two,\nthe router in the middle.\n\n1143\n01:04:21,400 --> 01:04:25,240\nAnd on router two,\nif I do a show IP route for 192.168.4.1,\n\n1144\n01:04:25,240 --> 01:04:31,650\nit says I can there,\nknown by that static route.\n\n1145\n01:04:31,650 --> 01:04:34,277\nAnd it would get there\nby going to 3.3.3.2.\n\n1146\n01:04:34,277 --> 01:04:35,437\nThat's my router three.\n\n1147\n01:04:35,437 --> 01:04:37,589\nSo, that's where my confusion comes in.\n\n1148\n01:04:37,589 --> 01:04:42,020\nI've injected the loop\nby doing redistribution.\n\n1149\n01:04:43,140 --> 01:04:47,650\nAnd if we try and\nping something in that network, so\n\n1150\n01:04:47,650 --> 01:04:51,110\nif I try to actually ping it,\nnow it's looping about.\n\n1151\n01:04:51,110 --> 01:04:54,380\nIt's looping about and\nthe time to live on my packets,\n\n1152\n01:04:54,380 --> 01:04:58,380\nwhich the default on a Cisco router,\nI believe, is 128?\n\n1153\n01:04:58,380 --> 01:04:59,691\n127?\nIt's right around in there.\n\n1154\n01:04:59,691 --> 01:05:03,519\nSo, it's gonna loop around that many\ntimes before the packet times out and\n\n1155\n01:05:03,519 --> 01:05:05,140\nthen drops.\n\n1156\n01:05:05,140 --> 01:05:07,897\nSo, I've got a loop, it doesn't\ntell me destination unreachable,\n\n1157\n01:05:07,897 --> 01:05:11,141\nwhich is what I expect if I tried to get\nto a route that didn't exist, like 5.1.\n\n1158\n01:05:11,141 --> 01:05:14,200\nI don't have a route for it,\nI don't know how to get there.\n\n1159\n01:05:14,200 --> 01:05:15,470\nIt's unreachable.\n\n1160\n01:05:15,470 --> 01:05:17,983\nBut 4.1, it's got a route for it.\n\n1161\n01:05:17,983 --> 01:05:22,160\nIt goes and it looks for it, and\nit's just not getting there.\n\n1162\n01:05:22,160 --> 01:05:25,230\nSo, that's my big problem\nwith doing redistribution.\n\n1163\n01:05:25,230 --> 01:05:27,240\nYou've got to be careful and\nlook for that.\n\n1164\n01:05:27,240 --> 01:05:29,540\nAnd when you're debugging like I was,\n\n1165\n01:05:29,540 --> 01:05:33,740\nI was able to see that route jump into\nthe routing table, where was that?\n\n1166\n01:05:33,740 --> 01:05:34,630\nRight here.\n\n1167\n01:05:34,630 --> 01:05:38,660\nI was able to see it jump in, so that I\nknew, oh, I shouldn't have seen that.\n\n1168\n01:05:38,660 --> 01:05:39,950\nThat shouldn't have been there.\n\n1169\n01:05:39,950 --> 01:05:41,870\nI've now got a loop.\n\n1170\n01:05:41,870 --> 01:05:45,520\nWe will have a whole special down\nthe road that focuses on routing loops.\n\n1171\n01:05:45,520 --> 01:05:48,300\nHow to identify them, how to find them\non your network, and how to fix them.\n\n1172\n01:05:48,300 --> 01:05:49,940\nThere's a number of ways to fix it.\n\n1173\n01:05:49,940 --> 01:05:53,800\nIn this scenario, the best way to fix\nit is not to advertise that route,\n\n1174\n01:05:53,800 --> 01:05:56,820\ndon't advertise the route back in,\nwhich is exactly what I did.\n\n1175\n01:05:56,820 --> 01:06:03,770\nSo, I'm just gonna do a no redistribute\nstatic, to get Alan out of there,\n\n1176\n01:06:03,770 --> 01:06:08,300\nI'm going to stop advertising\nit over here on router three.\n\n1177\n01:06:08,300 --> 01:06:11,330\nI'll see that route gets deleted out and\nnow the loop is gone.\n\n1178\n01:06:12,440 --> 01:06:14,552\nSo, that's the type of problem\nthat you get yourself into.\n\n1179\n01:06:17,014 --> 01:06:23,000\nSo, at this point, I redistributed\nRIP into EIGRP and EIGRP into RIP.\n\n1180\n01:06:23,000 --> 01:06:27,490\nI should have a fully converged routing\ntable which means if I do a show IP route\n\n1181\n01:06:27,490 --> 01:06:32,430\nhere, I should see routers\nones routes which are there.\n\n1182\n01:06:32,430 --> 01:06:35,980\nIf I jump over to router one,\nit should see router three's routes,\n\n1183\n01:06:35,980 --> 01:06:39,900\nwhich it does, and\nI should have end to end connectivity.\n\n1184\n01:06:39,900 --> 01:06:45,330\nSo, I should be able to ping 192.168.3.1,\nwhich is way over on router three.\n\n1185\n01:06:46,800 --> 01:06:51,310\nI'll set my source as,\nwhat interface is that?\n\n1186\n01:06:51,310 --> 01:06:56,141\nE0/0, actually I have to\nwrite it out don't I?\n\n1187\n01:06:56,141 --> 01:06:58,903\nLet me get my syntax right.\n\n1188\n01:06:58,903 --> 01:07:02,375\nThey make you write it all the way\nout which is kind of annoying.\n\n1189\n01:07:02,375 --> 01:07:04,557\nThere.\n\n1190\n01:07:04,557 --> 01:07:09,015\nWill it not take subnet interfaces?\n\n1191\n01:07:09,015 --> 01:07:14,182\nWell, let me do this the long way.\n\n1192\n01:07:14,182 --> 01:07:19,000\nSo, I'm gonna ping 192.168.3.1, and\n\n1193\n01:07:19,000 --> 01:07:22,380\nwe'll do our extended commands.\n\n1194\n01:07:22,380 --> 01:07:26,680\nAnd my source address,\nI'm gonna set that to 192.168.1.1.\n\n1195\n01:07:26,680 --> 01:07:29,830\nSo, I'm going end to end,\nif I go back to my diagram, I'm\n\n1196\n01:07:29,830 --> 01:07:34,020\npinging from one of these networks all the\nway across to one of these other networks.\n\n1197\n01:07:35,570 --> 01:07:38,480\nAnd I'll just set the defaults for\neverything else and there we go.\n\n1198\n01:07:38,480 --> 01:07:42,960\nI get five successes, we have end to\nend connectivity across this network.\n\n1199\n01:07:42,960 --> 01:07:45,330\nPretty straightforward,\njust watch out for the loops.\n\n1200\n01:07:47,140 --> 01:07:49,050\nSo, we've seen the IGRP, we've seen RIP.\n\n1201\n01:07:50,170 --> 01:07:51,870\nWe've seen static, we've seen connected.\n\n1202\n01:07:51,870 --> 01:07:53,070\nWe've seen those.\n\n1203\n01:07:53,070 --> 01:07:54,580\nLet's take a look at OSPF next.\n\n1204\n01:07:54,580 --> 01:07:55,690\nWell, actually, looking at the timer,\n\n1205\n01:07:55,690 --> 01:07:58,220\nprobably don't wanna start\nwith OSPF just right now.\n\n1206\n01:07:58,220 --> 01:07:59,600\nLet's pause and take a break.\n\n1207\n01:07:59,600 --> 01:08:04,160\nAfter we get back,\nwe wanna take a look at OSPF and BGP.\n\n1208\n01:08:04,160 --> 01:08:06,840\nYou'll find BGP is really just like EIGRP.\n\n1209\n01:08:06,840 --> 01:08:10,775\nThere's not much difference there,\nbut OSPF has that different metric.\n\n1210\n01:08:10,775 --> 01:08:12,875\nSo, you guys probably picked\nup on the pattern on this.\n\n1211\n01:08:12,875 --> 01:08:15,155\nThe commands are all pretty much the same,\nbut\n\n1212\n01:08:15,155 --> 01:08:17,255\nwe'll take a look at those\ncommands after this.\n\n1213\n01:08:17,255 --> 01:08:18,195\nSo, stay tuned.\n\n1214\n01:08:18,195 --> 01:08:19,259\nWe'll be back in just a moment.\n\n1215\n01:08:19,259 --> 01:08:23,705\n[SOUND]\n\n1216\n01:08:26,364 --> 01:08:28,585\nWelcome back, everybody.\n\n1217\n01:08:28,585 --> 01:08:30,165\nSo, we've taken a look at RIP,\n\n1218\n01:08:30,165 --> 01:08:34,005\nwe've taken a look at EIGRP,\nlet's take a look at OSPF next.\n\n1219\n01:08:34,005 --> 01:08:39,210\nNow, OSPF, after RIP, probably has the\nmost simple of the metrics to mess with,\n\n1220\n01:08:39,210 --> 01:08:42,556\nso redistributing into OSPF\nrequires us to set a metric.\n\n1221\n01:08:42,556 --> 01:08:46,650\nAnd the metric that OSPF uses\nis simply bandwidth divided by,\n\n1222\n01:08:46,650 --> 01:08:49,985\noh sorry,\nI was about to go EIGRP on that one.\n\n1223\n01:08:49,985 --> 01:08:50,840\n>> [LAUGH]\n>> So, anyway,\n\n1224\n01:08:50,840 --> 01:08:54,450\nit's just the reference bandwidth\ndivided by your actual bandwidth.\n\n1225\n01:08:54,450 --> 01:08:57,270\nAnd the reference bandwidth\nis 100 megabit by default.\n\n1226\n01:08:57,270 --> 01:09:00,372\nSo, when you're calculating out what\nyou want that metric to be, you just do\n\n1227\n01:09:00,372 --> 01:09:03,497\na little math in your head and you throw\nit in there, and you're in business.\n\n1228\n01:09:03,497 --> 01:09:06,000\nBut it can't be that easy.\n\n1229\n01:09:06,000 --> 01:09:08,970\nThere is something else we\nneed to be aware of with OSPF.\n\n1230\n01:09:08,970 --> 01:09:12,560\nWhen we inject a route into OSPF,\n\n1231\n01:09:13,800 --> 01:09:18,210\nOSPF doesn't just have one type of\nexternal, it has two types of externals.\n\n1232\n01:09:18,210 --> 01:09:20,260\nLet me show you what I mean.\n\n1233\n01:09:20,260 --> 01:09:23,410\nHere, on my router two,\nif I just do a show IP route,\n\n1234\n01:09:23,410 --> 01:09:26,430\nI'm just gonna pull out my\nregular old routing table.\n\n1235\n01:09:26,430 --> 01:09:30,400\nIn the last segment, we saw EIGRP,\nand there were D routes.\n\n1236\n01:09:30,400 --> 01:09:32,490\nAnd D, that's for\nthe diffusing update algorithm.\n\n1237\n01:09:32,490 --> 01:09:33,350\nThat's why they're picked up.\n\n1238\n01:09:33,350 --> 01:09:37,600\nD for EIGRP, and then there's D EX for\nthe external ones.\n\n1239\n01:09:38,950 --> 01:09:44,860\nFor OSPF, there's O just for\ngeneral OSPF routes which are in our area.\n\n1240\n01:09:44,860 --> 01:09:48,220\nThere's O IA, which are for\ninter-area routes.\n\n1241\n01:09:48,220 --> 01:09:52,570\nThey're still in our autonomous system but\nthey're from another area in our company.\n\n1242\n01:09:52,570 --> 01:09:55,771\nBut then,\nif you look a little bit past that,\n\n1243\n01:09:55,771 --> 01:10:00,848\nyou'll start to see these other\nones like O N1, O N2, OE1 and OE2.\n\n1244\n01:10:00,848 --> 01:10:03,564\nThese are OSPF externals.\n\n1245\n01:10:03,564 --> 01:10:09,580\nAnd what it is, is two different types of\nmetric that can be used for the external.\n\n1246\n01:10:10,880 --> 01:10:11,700\nNow, what's the difference?\n\n1247\n01:10:11,700 --> 01:10:13,320\nTechnically, the metric's the same.\n\n1248\n01:10:13,320 --> 01:10:17,810\nWith the metric you put in,\nit's gonna be identical for E1 versus E2.\n\n1249\n01:10:17,810 --> 01:10:20,290\nThe difference is, whether or\n\n1250\n01:10:20,290 --> 01:10:24,530\nnot the metric will continue to\nincrement as you go through the network.\n\n1251\n01:10:24,530 --> 01:10:25,662\nAnd that's a confusing sentence.\n\n1252\n01:10:25,662 --> 01:10:29,684\nLet me fire up a different\nnetwork diagram here to try and\n\n1253\n01:10:29,684 --> 01:10:32,860\nillustrate this point a little bit better.\n\n1254\n01:10:32,860 --> 01:10:34,910\nLet me pull one of these\nother ones that I used.\n\n1255\n01:10:36,560 --> 01:10:39,500\nNot that one [LAUGH].\n\n1256\n01:10:39,500 --> 01:10:42,570\nLet me pull up one that we\nused from one of the earlier\n\n1257\n01:10:42,570 --> 01:10:45,910\nepisodes where we started\ntackling some of this stuff.\n\n1258\n01:10:45,910 --> 01:10:48,560\nBasically, when you advertise\na route into OSPF, and\n\n1259\n01:10:48,560 --> 01:10:53,060\nwhen you inject it with a redistribution,\nit has a metric at a certain point.\n\n1260\n01:10:53,060 --> 01:10:58,090\nAnd over time, as you move through\nthe network, that point gets further and\n\n1261\n01:10:58,090 --> 01:11:00,090\nfurther out.\n\n1262\n01:11:00,090 --> 01:11:02,520\nFor example, let's say,\nthat this is my network.\n\n1263\n01:11:03,760 --> 01:11:07,390\nOver here, I've got a rip network,\nand my laptop's on this rip network.\n\n1264\n01:11:07,390 --> 01:11:09,479\nSo, the rip network,\nmaybe it ends right over here.\n\n1265\n01:11:09,479 --> 01:11:13,856\nIf I draw me a nice,\nbig circle, I'll say that.\n\n1266\n01:11:13,856 --> 01:11:15,075\nMaybe, that's a little too big.\n\n1267\n01:11:15,075 --> 01:11:20,801\nBut [LAUGH] we'll say that this is\nmy RIP network right over here.\n\n1268\n01:11:20,801 --> 01:11:22,347\nIt's here.\nIt's excited.\n\n1269\n01:11:22,347 --> 01:11:26,583\nIt's doing a great job being RIP.\n\n1270\n01:11:26,583 --> 01:11:28,337\nAll right, so there's my rip route.\n\n1271\n01:11:28,337 --> 01:11:31,950\nAnd I redistribute those\nrip routes in the OSPF.\n\n1272\n01:11:31,950 --> 01:11:36,170\nNow OSPF for me is going to be\nthe whole rest of this network, right,\n\n1273\n01:11:36,170 --> 01:11:40,330\neverything else is going to be\nall OSPF all the time, right,\n\n1274\n01:11:40,330 --> 01:11:43,790\nso great big OSPF network over here.\n\n1275\n01:11:43,790 --> 01:11:46,120\nAnd so that's going to be\nthe whole rest of this thing.\n\n1276\n01:11:46,120 --> 01:11:49,870\nNow when I advertise into this,\nI have to set a metric.\n\n1277\n01:11:51,080 --> 01:11:55,120\nAnd that metric, when I set it\nis going to default to the OE2.\n\n1278\n01:11:56,400 --> 01:11:59,730\nIt's going to default to that\ntype two external metric.\n\n1279\n01:11:59,730 --> 01:12:03,370\nNow, the way the type two\nexternal metric works is\n\n1280\n01:12:03,370 --> 01:12:07,910\nright here at the boundary router I define\nthe metric of that redistributive route.\n\n1281\n01:12:07,910 --> 01:12:10,606\nI say the metric is going to be 10,000.\n\n1282\n01:12:10,606 --> 01:12:11,390\nAll right.\n\n1283\n01:12:11,390 --> 01:12:14,981\nAnd, router A advertises to\nrouter B with a metric of 10,000.\n\n1284\n01:12:14,981 --> 01:12:18,625\nAnd router A advertises to router\nD with a metric of 10,000.\n\n1285\n01:12:18,625 --> 01:12:19,175\nAll right?\n\n1286\n01:12:19,175 --> 01:12:22,725\nSo that metric as it comes in,\nlet's make this purple.\n\n1287\n01:12:24,005 --> 01:12:30,738\nSo I made up the metric and\nright here it's 10,000.\n\n1288\n01:12:30,738 --> 01:12:31,815\nAll right.\n\n1289\n01:12:31,815 --> 01:12:34,265\nAnd it's 10,000 as I\nadvertise it over to here.\n\n1290\n01:12:34,265 --> 01:12:34,985\nOkay.\n\n1291\n01:12:34,985 --> 01:12:39,400\nAnd then Router B and Router D turn around\nand advertise it to the other routers.\n\n1292\n01:12:39,400 --> 01:12:43,360\nAnd when they advertise it,\nthey advertise it with a metric of 10,000.\n\n1293\n01:12:43,360 --> 01:12:48,210\nAnd so by the time router E gets it,\n\n1294\n01:12:48,210 --> 01:12:52,490\nrouter E is going to see two different\nroutes, both with a metric of 10,000.\n\n1295\n01:12:52,490 --> 01:12:55,930\nAnd if it advertised to\nanybody else down the road,\n\n1296\n01:12:55,930 --> 01:12:58,510\nit would advertise it out there as 10,000.\n\n1297\n01:12:58,510 --> 01:13:00,960\nThe moral of the story\nis that with an OE2,\n\n1298\n01:13:00,960 --> 01:13:05,730\nwith a type 2 external route in OSPF,\nthe metric never changes.\n\n1299\n01:13:05,730 --> 01:13:08,510\nAs the metric moves through my area,\nit never changes.\n\n1300\n01:13:09,940 --> 01:13:14,080\nI might want that if there's really just\none way to get to that route anyway.\n\n1301\n01:13:14,080 --> 01:13:15,260\nThen I don't care about it.\n\n1302\n01:13:15,260 --> 01:13:21,217\nRight, but I might want to override that\nbehavior and go with the OE1 instead.\n\n1303\n01:13:22,460 --> 01:13:27,413\nWith an OE1 its different,\nan OE1 takes in account each leg along\n\n1304\n01:13:27,413 --> 01:13:31,440\nthe journey as it moves\nthrough your network.\n\n1305\n01:13:31,440 --> 01:13:35,590\nSo sure, it might be at 10,000,\nright here at the beginning.\n\n1306\n01:13:35,590 --> 01:13:39,430\nBut when we get to the next hop,\nit's going to be 10,000\n\n1307\n01:13:39,430 --> 01:13:44,480\nplus whatever the bandwidth\nof this line would be.\n\n1308\n01:13:44,480 --> 01:13:46,240\nAnd then plus the bandwidth of this line.\n\n1309\n01:13:46,240 --> 01:13:47,190\nAnd this line.\nAnd it increments.\n\n1310\n01:13:47,190 --> 01:13:51,450\nAnd it starts to go up or\ndown based on how big the numbers get.\n\n1311\n01:13:51,450 --> 01:13:56,610\nSo it might be 10,000 here, it might\nbe 20,000 by the time it gets there,\n\n1312\n01:13:56,610 --> 01:13:58,790\nand 20,000 by the time it gets here.\n\n1313\n01:13:58,790 --> 01:14:01,190\nAnd by the time it gets to\nthis link it might be 30,000.\n\n1314\n01:14:01,190 --> 01:14:05,470\nAs it's going across the top\nversus across the bottom.\n\n1315\n01:14:05,470 --> 01:14:10,696\nSo now when router E learns it, it's going\nto learn I could go up through router C\n\n1316\n01:14:10,696 --> 01:14:16,782\nwith a metric of 30,000 or I could go down\nto router D with a metric of 20,000 it's\n\n1317\n01:14:16,782 --> 01:14:22,090\ngoing to pick the quickest and best way\nto get out of the network, all right?\n\n1318\n01:14:22,090 --> 01:14:23,810\nBased on the internal routing,\n\n1319\n01:14:23,810 --> 01:14:29,480\nthey want the quickest way to that gateway\nand get out of the network, all right?\n\n1320\n01:14:29,480 --> 01:14:31,900\nNow, using a OE1 will\nensure that that happens.\n\n1321\n01:14:31,900 --> 01:14:34,930\nSo why doesn't CISCO default to an OE1?\n\n1322\n01:14:36,010 --> 01:14:38,180\nWell, the reason is,\n\n1323\n01:14:38,180 --> 01:14:42,310\nthis route that's coming in probably\ndoesn't need to come in, anyway, right?\n\n1324\n01:14:42,310 --> 01:14:45,520\nWe probably just need some\nkind of default gateway.\n\n1325\n01:14:45,520 --> 01:14:49,640\nA network or gateway of last\nresort to be able use to get out.\n\n1326\n01:14:49,640 --> 01:14:51,620\nIf we're in an OSPF area,\n\n1327\n01:14:51,620 --> 01:14:54,830\nwe have a border route that we\ngo to as our default gateway.\n\n1328\n01:14:54,830 --> 01:14:57,620\nSo we probably don't need to\ninject it in the first place.\n\n1329\n01:14:57,620 --> 01:15:01,670\nIf we do inject it,\nthe gateway for that route,\n\n1330\n01:15:01,670 --> 01:15:04,800\nthat's coming in can be fixed to router A.\n\n1331\n01:15:04,800 --> 01:15:06,600\nIt doesn't have to reflect\nthe individual hop.\n\n1332\n01:15:06,600 --> 01:15:09,160\nSo like router E can say I\nneed to get to router A,\n\n1333\n01:15:09,160 --> 01:15:10,880\nwhat's the fastest way to get to router A?\n\n1334\n01:15:10,880 --> 01:15:14,290\nAnd it can find it in that way,\ncompletely ignoring the metric.\n\n1335\n01:15:14,290 --> 01:15:16,940\nWe'll see more of that when\nwe get to the OSPF shows.\n\n1336\n01:15:16,940 --> 01:15:20,180\nSo OSPF when it's dealing\nwith redistributor routes,\n\n1337\n01:15:20,180 --> 01:15:22,250\ndoesn't really depend on the metric.\n\n1338\n01:15:22,250 --> 01:15:25,440\nSo what CISCO said was, if we're not\nreally going to use that metric,\n\n1339\n01:15:25,440 --> 01:15:28,080\nif we're going to rely on\nthe gateway's metric instead,\n\n1340\n01:15:28,080 --> 01:15:30,760\nwhy don't we just make this fixed so\nthat way we don't have to recalculate.\n\n1341\n01:15:30,760 --> 01:15:32,040\nMake it more efficient.\n\n1342\n01:15:32,040 --> 01:15:34,060\nMake your routers run faster.\n\n1343\n01:15:34,060 --> 01:15:35,210\nIt'll waste less time.\n\n1344\n01:15:35,210 --> 01:15:36,720\nAnd so that's what they did.\n\n1345\n01:15:36,720 --> 01:15:40,980\nIt defaulted to the OE2, so\njust be aware of that difference.\n\n1346\n01:15:40,980 --> 01:15:42,180\nIf we redistribute the route,\n\n1347\n01:15:42,180 --> 01:15:45,560\njust like we've been doing the whole rest\nof the show, it'll come in as an OE2 and\n\n1348\n01:15:45,560 --> 01:15:47,440\nfor most people that's perfectly fine.\n\n1349\n01:15:47,440 --> 01:15:48,350\nRight?\n\n1350\n01:15:48,350 --> 01:15:51,360\nBut if for some reason,\nyou want to guarantee that you're picking\n\n1351\n01:15:51,360 --> 01:15:55,180\nthe best path of destination if you're\nnot advertising a gateway of last resort,\n\n1352\n01:15:55,180 --> 01:15:58,890\nfor example, in those scenarios,\nyou'll want to convert it to an OE1.\n\n1353\n01:15:58,890 --> 01:16:00,150\nAll right?\n\n1354\n01:16:00,150 --> 01:16:01,670\nThat's a lot different\nthan the other protocols.\n\n1355\n01:16:01,670 --> 01:16:04,060\nFor every example we've seen so\nfar in the show,\n\n1356\n01:16:04,060 --> 01:16:08,981\nwe type redistribute followed by\nthe protocol followed by the metric.\n\n1357\n01:16:08,981 --> 01:16:10,640\nRight?\nThis one, redistribute,\n\n1358\n01:16:10,640 --> 01:16:14,880\nfollow by the protocol, follow by\nthe metric, followed by the metric type.\n\n1359\n01:16:14,880 --> 01:16:17,950\nIf we want to adjust it from OE1 to OE2 or\nvice-versa, right?\n\n1360\n01:16:17,950 --> 01:16:19,500\nSo you can specify that.\n\n1361\n01:16:19,500 --> 01:16:20,750\nWhen we do the re-distribute.\n\n1362\n01:16:20,750 --> 01:16:23,350\nSo just something to be\naware of right there.\n\n1363\n01:16:23,350 --> 01:16:27,740\nAll right, let's jump over to our\nrouters and kind of see this in action.\n\n1364\n01:16:27,740 --> 01:16:32,150\nNow in my environment, the network\nis a little bit more simple, right?\n\n1365\n01:16:32,150 --> 01:16:34,330\nSo let me switch back to my other diagram.\n\n1366\n01:16:34,330 --> 01:16:38,500\nLet me save that, there we go.\n\n1367\n01:16:38,500 --> 01:16:43,660\nAll right, so what I've got Is on\nthe left side here, router 1, is entirely\n\n1368\n01:16:43,660 --> 01:16:48,990\nin an EIGRP environment, and on the right\nside, I've got router 3 that's OSPF.\n\n1369\n01:16:48,990 --> 01:16:52,460\nIt's also running BGP, but\nBGP is an exterior gateway protocol so\n\n1370\n01:16:52,460 --> 01:16:54,160\nI'm not worried about that right now,\nright?\n\n1371\n01:16:54,160 --> 01:16:57,280\nSo it's EIGRP on the left,\nOSPF on the right.\n\n1372\n01:16:57,280 --> 01:17:02,626\nAnd in the middle, I've got good old\nrouter 2 running both EIGRP and OSPF.\n\n1373\n01:17:02,626 --> 01:17:06,950\nAnd I want to redistribute\nthese EIGRP routes into OSPF so\n\n1374\n01:17:06,950 --> 01:17:09,220\nrouter three will learn about it,\nall right?\n\n1375\n01:17:09,220 --> 01:17:11,420\nSo I just need to jump in and\nplug that in.\n\n1376\n01:17:11,420 --> 01:17:13,190\nI’m going to start over on router 3,\nthough,\n\n1377\n01:17:13,190 --> 01:17:16,000\nbecause I want to make sure it doesn’t\nalready have those routes, right?\n\n1378\n01:17:16,000 --> 01:17:17,326\nThat I’m not cheating.\n\n1379\n01:17:17,326 --> 01:17:21,240\nSo I’m going to do a show IP route, and\nI just see connected routes and that’s it.\n\n1380\n01:17:21,240 --> 01:17:24,610\nI’m going to do a quick debug.\n\n1381\n01:17:24,610 --> 01:17:27,100\nIP routing and that way\n\n1382\n01:17:27,100 --> 01:17:30,950\nany routing table updates that come in\nI'll get notified about and I'll see them.\n\n1383\n01:17:30,950 --> 01:17:33,480\nBut for right now,\nit's sitting there nice stable network and\n\n1384\n01:17:33,480 --> 01:17:38,130\nI only know about networks that I'm\ndirectly connected to, all right?\n\n1385\n01:17:38,130 --> 01:17:43,620\nOver on router 2, though,\nif I take a look at it's routing table, it\n\n1386\n01:17:43,620 --> 01:17:48,510\nhas learned the 192.168.1\nnetworks from router 1.\n\n1387\n01:17:48,510 --> 01:17:51,100\nIt's learned them via EIRGP.\n\n1388\n01:17:51,100 --> 01:17:52,600\nSo going back to my diagram,\n\n1389\n01:17:52,600 --> 01:17:57,090\nrouter two has learned about these\nnetworks over here via EIRGP.\n\n1390\n01:17:57,090 --> 01:17:58,338\nThat's what I'd expect.\n\n1391\n01:17:58,338 --> 01:17:59,832\nRight?\n\n1392\n01:17:59,832 --> 01:18:06,820\nYeah, let's see, there we go,\njust zoom that out a little bit.\n\n1393\n01:18:06,820 --> 01:18:10,680\nAll right, now it's also learned down\nhere, the 192.168.3 networks via OSPF, and\n\n1394\n01:18:10,680 --> 01:18:12,950\nso if I look,\nthat's these networks on the right side,\n\n1395\n01:18:12,950 --> 01:18:16,540\nRouter two is learning about them via\nOSPF, so it is learning about them but\n\n1396\n01:18:16,540 --> 01:18:21,120\nredistribution doesn't happen by\ndefault so it's not exchanging them.\n\n1397\n01:18:21,120 --> 01:18:25,040\nI'm just going to go in and\ninject the EGIRP routes in the OSPF.\n\n1398\n01:18:26,520 --> 01:18:30,350\nSo on router two,\nwe go into our config and\n\n1399\n01:18:30,350 --> 01:18:33,980\ninto router OSPF followed\nby our process ID.\n\n1400\n01:18:33,980 --> 01:18:37,000\nAnd then we can set that default\nmetric just like the other protocols.\n\n1401\n01:18:37,000 --> 01:18:41,220\nNow OSPF is a little\nbit different EIGRP and\n\n1402\n01:18:41,220 --> 01:18:45,230\nRIP, they will not advertise\nthe route unless the metric is set.\n\n1403\n01:18:45,230 --> 01:18:48,000\nOSPF actually will,\nit'll let you advertise it out but\n\n1404\n01:18:48,000 --> 01:18:50,320\nit's still a good idea to set a metric.\n\n1405\n01:18:50,320 --> 01:18:54,410\nSo we can set that default if we want,\nyou'll see the default metric command\n\n1406\n01:18:54,410 --> 01:18:57,270\njust like we've had with the other\nones and we set the OSPF metric.\n\n1407\n01:18:58,820 --> 01:19:01,470\nSo maybe I'll set my default to 10,000.\n\n1408\n01:19:01,470 --> 01:19:06,523\nThen when I redistribute, so\nif I say redistribute EIRGP 1,\n\n1409\n01:19:06,523 --> 01:19:09,048\nright EIRGP on the system one,\n\n1410\n01:19:09,048 --> 01:19:14,410\nI can then specify the metric if I\nwant right here and override it.\n\n1411\n01:19:14,410 --> 01:19:17,667\nMaybe I want it to go out at 20,000.\n\n1412\n01:19:17,667 --> 01:19:19,380\nAnd I could stop right here and\npress enter.\n\n1413\n01:19:19,380 --> 01:19:23,596\nI could have pressed enter without the\nmetric, right, just redistribute EIGRP 1.\n\n1414\n01:19:23,596 --> 01:19:29,766\nOr I could continue on and\nspecify the metric-type.\n\n1415\n01:19:29,766 --> 01:19:33,060\nAnd for the metric type,\nI can specify one or two.\n\n1416\n01:19:34,180 --> 01:19:38,160\nNow, I really shouldn't have to specify\ntwo because that's the default, right?\n\n1417\n01:19:38,160 --> 01:19:39,920\nBut if I want it to be\na metric-type of one,\n\n1418\n01:19:39,920 --> 01:19:41,250\nI can specify one and it will do that.\n\n1419\n01:19:41,250 --> 01:19:43,450\nI'm gonna start off with the default,\nthough.\n\n1420\n01:19:43,450 --> 01:19:46,880\nSo, I'm actually not gonna set it just so\nwe'll see it come in as those OE2s.\n\n1421\n01:19:48,290 --> 01:19:52,470\nNow, there's one other command\nin here that's really important.\n\n1422\n01:19:52,470 --> 01:19:53,492\nAnd that's this guy right here.\n\n1423\n01:19:53,492 --> 01:19:54,410\nAll right.\n\n1424\n01:19:54,410 --> 01:19:56,610\nIt's an optional command,\nI think it should be a default, but\n\n1425\n01:19:56,610 --> 01:19:58,740\nit is optional and\nthat's the subnet commands.\n\n1426\n01:19:58,740 --> 01:20:01,900\nAnd it says, consider subnets for\nredistribution into OSPF.\n\n1427\n01:20:03,010 --> 01:20:06,920\nWhen you redistribute\ninto OSPF by default,\n\n1428\n01:20:08,050 --> 01:20:10,290\nit grabs them at their\nclass full boundaries.\n\n1429\n01:20:10,290 --> 01:20:13,940\nIt's basically class full when it\nbrings in redistributed routes.\n\n1430\n01:20:13,940 --> 01:20:17,560\nAnd, that's okay if you\nfollowed all the rules and\n\n1431\n01:20:17,560 --> 01:20:19,210\nyou've got a class full network, great.\n\n1432\n01:20:19,210 --> 01:20:20,120\nBut most of us haven't.\n\n1433\n01:20:20,120 --> 01:20:22,330\nMost of us are using variable\nlength subnet masks or\n\n1434\n01:20:22,330 --> 01:20:24,390\nwe have a non-contiguous network,\nthings like that.\n\n1435\n01:20:24,390 --> 01:20:27,680\nAnd you want to make sure those\nsubnets get paid attention to.\n\n1436\n01:20:27,680 --> 01:20:32,480\nSo as a rule of thumb, I always include\nthe subnet's command, all right?\n\n1437\n01:20:32,480 --> 01:20:34,420\nSo a little bit different here for OSPF,\n\n1438\n01:20:34,420 --> 01:20:36,880\nthese are important things that\nwe need to remember, all right?\n\n1439\n01:20:36,880 --> 01:20:39,410\nI would do the same command if\nI was bringing in from RIP,\n\n1440\n01:20:39,410 --> 01:20:43,190\nI would say redistribute RIP,\nmetric 20,000 subnets, right?\n\n1441\n01:20:43,190 --> 01:20:46,650\nSo I'm gonna run that, and\n\n1442\n01:20:46,650 --> 01:20:51,460\nnow I'm grabbing all my EIGRP routes and\nthrowing them over into OSPF.\n\n1443\n01:20:51,460 --> 01:20:55,150\nAnd we can see if that's working\nover here on router three,\n\n1444\n01:20:55,150 --> 01:20:59,600\nI can see I've got some routing table\nupdates that have come in, right,\n\n1445\n01:20:59,600 --> 01:21:02,850\nas I learned those new routes,\nthe 1921681 routes.\n\n1446\n01:21:02,850 --> 01:21:08,140\nAnd if I look at my routing table,\nI'll see them right there and\n\n1447\n01:21:08,140 --> 01:21:09,100\nsee how they're OE2's?\n\n1448\n01:21:10,395 --> 01:21:14,990\nOE2's that came in with that metric of\n20 thousand, I'll continue to advertise\n\n1449\n01:21:14,990 --> 01:21:18,880\nthem as 20 thousands all the way\nthrough the rest of my areas.\n\n1450\n01:21:18,880 --> 01:21:20,310\nWe advertise them through OSBF.\n\n1451\n01:21:21,640 --> 01:21:25,440\nIf I want that metric to\nincrement each hop along the way,\n\n1452\n01:21:25,440 --> 01:21:26,900\nI just need to override that.\n\n1453\n01:21:26,900 --> 01:21:28,130\nAnd I can do that pretty easily.\n\n1454\n01:21:28,130 --> 01:21:31,815\nIf I jump back to router 2, I'm just gonna\nadd right to the end of that command,\n\n1455\n01:21:31,815 --> 01:21:36,740\nmetric-type 1, and\nthat's gonna flip it over to be OE1s,\n\n1456\n01:21:37,770 --> 01:21:40,340\nand now the metric will\nincrement with each hop.\n\n1457\n01:21:40,340 --> 01:21:41,250\nUnfortunately for me,\n\n1458\n01:21:41,250 --> 01:21:44,890\nrouter 3 is kind of the end of the line,\nso I don't have a next hop to show that.\n\n1459\n01:21:44,890 --> 01:21:49,250\nBut if I jump back over here, I can see\nthe metric information is changed and\n\n1460\n01:21:49,250 --> 01:21:50,520\nit's actually,\n\n1461\n01:21:50,520 --> 01:21:53,680\nwe do get to see that it's taking into\naccount its own ethernet interface.\n\n1462\n01:21:54,840 --> 01:21:57,759\nSo it went from 20,000 to 20,010.\n\n1463\n01:21:57,759 --> 01:22:02,050\nSo you see that little bit of a bump\nup that it got there on the metric.\n\n1464\n01:22:02,050 --> 01:22:06,962\nAnd if I do a show IP route, there they\nare as OE1s and the metric is now updated.\n\n1465\n01:22:06,962 --> 01:22:09,120\nAll right.\n\n1466\n01:22:09,120 --> 01:22:11,720\nSo, pretty neat stuff there, pretty easy.\n\n1467\n01:22:11,720 --> 01:22:14,220\nBut you've got to remember what some\nof these different options are.\n\n1468\n01:22:14,220 --> 01:22:18,700\nSo the big differences with OSPF over the\nother protocols does need the metric-type,\n\n1469\n01:22:18,700 --> 01:22:23,520\nOE1 or OE2, and\nthen the subnet's keyword that says, hey,\n\n1470\n01:22:23,520 --> 01:22:28,124\npay attention to the subnets because\nwe might be doing variable [INAUDIBLE].\n\n1471\n01:22:28,124 --> 01:22:30,080\nAll right.\n\n1472\n01:22:30,080 --> 01:22:33,410\nSo that's redistributing EIGRP into OSPF.\n\n1473\n01:22:33,410 --> 01:22:37,340\nWe've all ready seen the other way around,\nright, like OSPF into EIGRP, but\n\n1474\n01:22:37,340 --> 01:22:38,870\nthat one brings it in.\n\n1475\n01:22:38,870 --> 01:22:41,140\nIt's kind of in place and\nwe're in business.\n\n1476\n01:22:41,140 --> 01:22:44,070\nI'm trying to think, is there anything\nelse I really need to mention on OSPF.\n\n1477\n01:22:44,070 --> 01:22:48,680\nI guess I could bring in my\nconnected routes, those guys.\n\n1478\n01:22:48,680 --> 01:22:50,270\nYou know,\nI didn’t bring in any other routes.\n\n1479\n01:22:50,270 --> 01:22:53,620\nSo, if I go to router 2, I have a few\nother routes that I could bring in,\n\n1480\n01:22:53,620 --> 01:22:55,620\nlike my directly connected routes.\n\n1481\n01:22:55,620 --> 01:22:58,522\nSo on router 2,\nI could get back into router OSPF 1, and\n\n1482\n01:22:58,522 --> 01:23:01,679\nI could say, redistribute connected.\n\n1483\n01:23:01,679 --> 01:23:05,670\nAnd if I were to just press enter,\nit’s gonna bring those routes in,\n\n1484\n01:23:05,670 --> 01:23:09,770\nit’s gonna put them as OE2s, it’s gonna\nuse the default metric of 10,000,\n\n1485\n01:23:09,770 --> 01:23:13,990\nand it's gonna ignore the subnets\nwhen it imports them in and\n\n1486\n01:23:13,990 --> 01:23:17,670\nthat can be a bit of a problem,\nespecially with the way mine is.\n\n1487\n01:23:17,670 --> 01:23:21,450\nAnd see how it's saying, only classful\nnetworks will be redistributed.\n\n1488\n01:23:21,450 --> 01:23:23,150\nAre my networks classful?\n\n1489\n01:23:23,150 --> 01:23:28,230\nWell, if I do a show route,\nshow IP route connected,\n\n1490\n01:23:30,760 --> 01:23:35,967\nand I look at my connected routes,\nI've got all these /26s and /32s.\n\n1491\n01:23:35,967 --> 01:23:38,260\nThose aren't very classful, are they?\n\n1492\n01:23:38,260 --> 01:23:38,930\nRight?\n\n1493\n01:23:38,930 --> 01:23:42,200\nSo, if I take a look at\nwhat router 3 learned.\n\n1494\n01:23:42,200 --> 01:23:44,490\nRouter 3 did learn something.\n\n1495\n01:23:44,490 --> 01:23:47,100\nRight?\nIt's got some stuff goin' on here.\n\n1496\n01:23:47,100 --> 01:23:51,300\nBut when they come in, we'll see what\nmakes it into our routing table.\n\n1497\n01:23:53,030 --> 01:23:53,945\nI learned nothing.\n\n1498\n01:23:53,945 --> 01:23:57,030\n192.168.2.whatever, those are my networks.\n\n1499\n01:23:57,030 --> 01:24:01,510\nNone of them made it in here\nbecause they aren't on their proper\n\n1500\n01:24:01,510 --> 01:24:02,550\nclassical boundaries.\n\n1501\n01:24:02,550 --> 01:24:04,480\nThey didn't make it in, right?\n\n1502\n01:24:04,480 --> 01:24:07,530\nIf I go back to router two and\nI just adjust that command\n\n1503\n01:24:07,530 --> 01:24:13,150\ninstead of saying redistribute connected\nif I add subnets to the end of it, right?\n\n1504\n01:24:13,150 --> 01:24:14,840\nNow, it's gonna\nredistribute my routes that\n\n1505\n01:24:14,840 --> 01:24:16,930\ndon't follow the classical boundaries.\n\n1506\n01:24:16,930 --> 01:24:18,322\nAnd router 3 should learn them.\n\n1507\n01:24:20,565 --> 01:24:25,313\nAnd now, if I take a look at the routes\nthat came in, there they are right there.\n\n1508\n01:24:25,313 --> 01:24:29,110\nAnd they came in as OE2's because I\ndidn't override it, but there they are.\n\n1509\n01:24:29,110 --> 01:24:30,890\nAnd they're in my system, alright.\n\n1510\n01:24:30,890 --> 01:24:34,450\nSo, when you need stuff,\ncome right in and we're in business.\n\n1511\n01:24:36,210 --> 01:24:36,804\nAll right.\n\n1512\n01:24:36,804 --> 01:24:40,814\nSo, injecting an OSPF, not a big deal,\njust remember that, subnets and\n\n1513\n01:24:40,814 --> 01:24:41,730\nmetric-type.\n\n1514\n01:24:43,170 --> 01:24:44,850\nAll right.\nI am debating here looking at the clock.\n\n1515\n01:24:44,850 --> 01:24:45,950\nI think we've got enough time.\n\n1516\n01:24:45,950 --> 01:24:50,540\nThe last protocol we've need to look\nat it BGP, the Border Gateway Protocal.\n\n1517\n01:24:50,540 --> 01:24:55,320\nAnd with BGP, what we're designating is\nreally some interesting stuff, all right?\n\n1518\n01:24:55,320 --> 01:25:00,000\nBGP is probably the most confusing of the\nones that we redistribute into, all right?\n\n1519\n01:25:00,000 --> 01:25:02,670\nAnd the reason is there's so\nmany different forms of BGP.\n\n1520\n01:25:02,670 --> 01:25:06,200\nAnd we haven't, if you're\nwatching these episodes in order,\n\n1521\n01:25:06,200 --> 01:25:08,320\nwe haven't covered BGP yet, right?\n\n1522\n01:25:08,320 --> 01:25:15,140\nSo I don't wanna dive too deep into it but\nyou've got internal BGP and external BGP.\n\n1523\n01:25:15,140 --> 01:25:17,840\nYou've got different\nenvironments there where\n\n1524\n01:25:17,840 --> 01:25:19,970\nsometimes you're allowed to redistribute,\nsometimes you can't.\n\n1525\n01:25:19,970 --> 01:25:22,080\nSometimes you can create loops,\nsometimes you can't.\n\n1526\n01:25:22,080 --> 01:25:25,940\nYou've also got the matter of\nBGP doesn't work by itself.\n\n1527\n01:25:25,940 --> 01:25:28,170\nBGP always works with an IGP.\n\n1528\n01:25:28,170 --> 01:25:33,270\nSo when you're redistributing routes,\nyou'll typically redistribute into VGP but\n\n1529\n01:25:33,270 --> 01:25:36,710\nnot out of it, because your IGP\nshould already know the routes.\n\n1530\n01:25:36,710 --> 01:25:39,070\nIt really does get confusing.\n\n1531\n01:25:39,070 --> 01:25:40,650\nSo for right now, what I want to do is,\n\n1532\n01:25:40,650 --> 01:25:44,090\nI just want to show you the redistribution\ncommands in that process.\n\n1533\n01:25:44,090 --> 01:25:47,270\nLet's not spend a ton of time trying\nto figure out exactly how VGP works.\n\n1534\n01:25:47,270 --> 01:25:50,860\nWe'll save that for the VGP series and\nyou'll get a chance to see it then.\n\n1535\n01:25:50,860 --> 01:25:53,370\nI just don't want to make things\nmore confusing than I have to.\n\n1536\n01:25:54,840 --> 01:25:57,180\nOtherwise, okay all that being said,\n\n1537\n01:25:57,180 --> 01:26:01,100\nredistributing into BGP is not much\ndifferent than other protocols.\n\n1538\n01:26:01,100 --> 01:26:05,420\nThe rule of thumb is you will\ntypically redistribute into BGP,\n\n1539\n01:26:05,420 --> 01:26:08,492\nyou'll rarely redistribute out of BGP.\n\n1540\n01:26:08,492 --> 01:26:09,120\nAll right.\n\n1541\n01:26:09,120 --> 01:26:11,160\nBGP is a path vector protocol.\n\n1542\n01:26:11,160 --> 01:26:12,790\nIt doesn't know how to get to places,\n\n1543\n01:26:12,790 --> 01:26:15,020\nit knows the autonomous\nsystems to pass through.\n\n1544\n01:26:15,020 --> 01:26:16,470\nBut it doesn't know the actual hops.\n\n1545\n01:26:16,470 --> 01:26:19,280\nSo if we redistribute it out of BGP,\n\n1546\n01:26:19,280 --> 01:26:22,970\ntelling somebody else about a network,\nBGP didn't know how to get there.\n\n1547\n01:26:22,970 --> 01:26:24,500\nIt's like the blind leading the blind.\n\n1548\n01:26:24,500 --> 01:26:27,150\nRight?\nYou don't know how to get there.\n\n1549\n01:26:27,150 --> 01:26:32,360\nSo we've gotta make sure that\nwe bring that data in and\n\n1550\n01:26:32,360 --> 01:26:35,300\nteach BGP how to get there\nversus the other way around.\n\n1551\n01:26:35,300 --> 01:26:36,350\nAll right.\n\n1552\n01:26:36,350 --> 01:26:38,140\nSo like all these OSPF\nroutes that I've got,\n\n1553\n01:26:38,140 --> 01:26:41,530\nI've got a bunch of OSPF routes\nthat we've been redistributing in,\n\n1554\n01:26:41,530 --> 01:26:46,000\nand they're all in OSPF,\nthey're not necessarily in BGP.\n\n1555\n01:26:46,000 --> 01:26:50,970\nMy BGP routes aren't really making it\ninto my routing table anyway, so when I\n\n1556\n01:26:50,970 --> 01:26:56,070\nlook at my routing table right now, if I\nlook for BGP routes, I don't have any.\n\n1557\n01:26:56,070 --> 01:26:56,610\nOkay.\n\n1558\n01:26:56,610 --> 01:26:59,150\nI am running BGP.\n\n1559\n01:26:59,150 --> 01:27:01,400\nIf I look, I've got a BGP neighbor here,\n\n1560\n01:27:01,400 --> 01:27:06,610\nread up, read up, one is, oh yeah,\nthat's the router I'm connected to.\n\n1561\n01:27:06,610 --> 01:27:08,570\nBut there's no prefixes coming in, and\n\n1562\n01:27:08,570 --> 01:27:12,260\nit's just empty because not\nmuch is going on there, right?\n\n1563\n01:27:12,260 --> 01:27:15,466\nSo I need to get VGP to learn some routes.\n\n1564\n01:27:15,466 --> 01:27:20,374\nThe thing is, you're interior gateway\nprotocol is almost always trusted more\n\n1565\n01:27:20,374 --> 01:27:22,801\nthan your exterior gateway protocol.\n\n1566\n01:27:22,801 --> 01:27:25,681\nSo you're typically gonna rely\non the interior protocol,\n\n1567\n01:27:25,681 --> 01:27:28,710\nyour BGP routes will get bumped out,\nall right?\n\n1568\n01:27:28,710 --> 01:27:32,820\nSo just be aware of all those little\ncaveats when we deal with BGP.\n\n1569\n01:27:32,820 --> 01:27:37,400\nAll right, let's go ahead and see some\nstuff getting redistributed into that.\n\n1570\n01:27:37,400 --> 01:27:40,740\nOn router two I’m running BGP, and\n\n1571\n01:27:40,740 --> 01:27:44,770\nI’m also running OSPF and EIGRP,\nall these other protocols.\n\n1572\n01:27:44,770 --> 01:27:48,790\nLet’s say that I wanted to redistribute\nmy directly connected networks into BGP,\n\n1573\n01:27:48,790 --> 01:27:50,230\nall right?\n\n1574\n01:27:50,230 --> 01:27:56,960\nWell, I could do router BGP 100\nto get into my BGP service.\n\n1575\n01:27:56,960 --> 01:28:01,900\nAnd I could do address family IPv4\nbecause BGP can do IPv6 also,\n\n1576\n01:28:01,900 --> 01:28:04,560\nso I have to get into\nthe right address family.\n\n1577\n01:28:04,560 --> 01:28:08,960\nAnd then I can say redistribute and\nthen who I want to redistribute.\n\n1578\n01:28:08,960 --> 01:28:11,740\nNow, I'm gonna say redistribute connected.\n\n1579\n01:28:11,740 --> 01:28:16,230\nSo I'm gonna redistribute those\nconnected interfaces Into BGP.\n\n1580\n01:28:16,230 --> 01:28:18,810\nIf I stop right here it'll do it, right?\n\n1581\n01:28:18,810 --> 01:28:22,220\nBut if I do a little question mark\nI can see that I can also specify\n\n1582\n01:28:22,220 --> 01:28:23,980\na metric, all right?\n\n1583\n01:28:23,980 --> 01:28:28,820\nBut, as you know,\nBGP is a path vector protocol.\n\n1584\n01:28:28,820 --> 01:28:32,060\nSo its metric is normally\nthe length of a path.\n\n1585\n01:28:32,060 --> 01:28:36,910\nWell, for an IGP we don't have\na path like that, so what do I put?\n\n1586\n01:28:36,910 --> 01:28:39,610\nWell, the answer is that you really don't.\n\n1587\n01:28:39,610 --> 01:28:43,590\nThe metrics we use with IGPs\nare not compatible with BGP,\n\n1588\n01:28:43,590 --> 01:28:44,890\nnot compatible in any way.\n\n1589\n01:28:44,890 --> 01:28:46,870\nSo there's really no way to provide it.\n\n1590\n01:28:46,870 --> 01:28:52,580\nSo in BGP, when you redistribute a route,\nit'll actually show the source,\n\n1591\n01:28:52,580 --> 01:28:55,816\nthe path, as ?-incomplete.\n\n1592\n01:28:55,816 --> 01:28:59,000\nNow, I know a lot of people say,\nwhoa, incomplete.\n\n1593\n01:28:59,000 --> 01:29:00,240\nThere's a problem.\n\n1594\n01:29:00,240 --> 01:29:01,080\nIt's not a problem.\n\n1595\n01:29:01,080 --> 01:29:04,820\nIt's just saying, this came from an IGP,\nwe don't know the path, right.\n\n1596\n01:29:04,820 --> 01:29:05,840\nIt's incomplete.\n\n1597\n01:29:05,840 --> 01:29:08,750\nWe have to rely on the IGP to figure\nout what that path is, right.\n\n1598\n01:29:08,750 --> 01:29:09,970\nThat's what that incomplete means.\n\n1599\n01:29:09,970 --> 01:29:11,910\nSo it's not a big thing to worry about.\n\n1600\n01:29:11,910 --> 01:29:16,630\nYou expect to see it, right, but\nwe can still provide a metric.\n\n1601\n01:29:16,630 --> 01:29:22,000\nWhat's the point in providing\na metric if it's not going to use it.\n\n1602\n01:29:22,000 --> 01:29:23,950\nWell, when we get to the BGP series,\n\n1603\n01:29:23,950 --> 01:29:27,440\nwe'll talk about some of\nthe tiebreakers that BGP has.\n\n1604\n01:29:27,440 --> 01:29:32,270\nWhen it tries to find the best route,\nyeah path, that's the number one thing.\n\n1605\n01:29:32,270 --> 01:29:35,495\nBut after that, there's another,\nI don't know, it's like 10 or\n\n1606\n01:29:35,495 --> 01:29:37,910\n11 more things it can use as tiebreakers.\n\n1607\n01:29:37,910 --> 01:29:43,000\nAnd one of those is something called\nthe MED, or the multi exit discriminator.\n\n1608\n01:29:43,000 --> 01:29:47,520\nAnd this metric will actually get stuck\nin the med, it'll get populated in there.\n\n1609\n01:29:47,520 --> 01:29:52,710\nIt's a separate metric used as a\ntie-breaker, and it does have some value.\n\n1610\n01:29:52,710 --> 01:29:54,870\nSo I'm gonna specify it here, but\n\n1611\n01:29:54,870 --> 01:29:57,890\ndon't expect to see that in\nyour routing table, right?\n\n1612\n01:29:57,890 --> 01:29:58,860\nThat 10,000's not gonna show up,\n\n1613\n01:29:58,860 --> 01:30:00,880\nit'll show up in the MED value\nthat we'll learn about later.\n\n1614\n01:30:02,080 --> 01:30:05,450\nAll right, so I've redistributed\nthose connected routes into BGP.\n\n1615\n01:30:06,580 --> 01:30:09,100\nWell, are they gonna make\nit to the other side?\n\n1616\n01:30:10,280 --> 01:30:11,120\nIt depends.\n\n1617\n01:30:11,120 --> 01:30:14,470\nOn the other side,\nI'm still running OSPF and so\n\n1618\n01:30:14,470 --> 01:30:17,820\nOSPF will likely override\nwhat I'm learning.\n\n1619\n01:30:17,820 --> 01:30:19,480\nSo, what I'll probably need\nto do is disable that.\n\n1620\n01:30:19,480 --> 01:30:21,430\nAnd I'll probably have to cheat\nthe system a little bit, but\n\n1621\n01:30:21,430 --> 01:30:24,000\nlet's see what made it in and what didn't.\n\n1622\n01:30:24,000 --> 01:30:25,800\nIf I look at my routing table, yeah,\n\n1623\n01:30:25,800 --> 01:30:28,920\nthere's no BGP routes making\nit into my routing table.\n\n1624\n01:30:28,920 --> 01:30:32,080\nAnd what's going on the BGP routes\nare more than likely coming in.\n\n1625\n01:30:32,080 --> 01:30:34,750\nIf I were to pull up my BGP\ndatabase they're probably in there.\n\n1626\n01:30:36,110 --> 01:30:39,210\nBut the OSPF routes\nare kind of winning out.\n\n1627\n01:30:39,210 --> 01:30:44,500\nBut I kill off OSPF, so\nif I do like a no router OSPF,\n\n1628\n01:30:44,500 --> 01:30:47,580\nwhich means I'll also have to\ndisable route synchronization.\n\n1629\n01:30:47,580 --> 01:30:49,770\nLet me just do that real quick.\n\n1630\n01:30:49,770 --> 01:30:52,690\nThese are all things that I don't\nwant to dive into just yet.\n\n1631\n01:30:56,594 --> 01:30:58,600\nLet's see if I can, no synchronization.\n\n1632\n01:30:58,600 --> 01:30:59,274\nAll right.\n\n1633\n01:30:59,274 --> 01:31:03,432\nBy default, BGP will not allow a route to\ncome on the routing table unless it has\n\n1634\n01:31:03,432 --> 01:31:05,160\na matching IGP route.\n\n1635\n01:31:05,160 --> 01:31:06,410\nBut if you have a matching IGP route,\n\n1636\n01:31:06,410 --> 01:31:08,640\nthat's the one that goes in the routing\ntable, so it makes it kind of hard for\n\n1637\n01:31:08,640 --> 01:31:10,370\nme to show the route coming in.\n\n1638\n01:31:10,370 --> 01:31:12,060\nSo I'm just gonna kind of override that.\n\n1639\n01:31:14,210 --> 01:31:15,730\nSo now if I look at my\nrouting table there we go,\n\n1640\n01:31:15,730 --> 01:31:18,930\nnow I've got some nice little BGP\nroutes creeping up right there.\n\n1641\n01:31:18,930 --> 01:31:20,800\nAnd see that admin distance of 200?\n\n1642\n01:31:20,800 --> 01:31:22,250\nThat's what my problem was.\n\n1643\n01:31:22,250 --> 01:31:25,180\nWith OSPF, my admin distance was 110.\n\n1644\n01:31:25,180 --> 01:31:27,990\nThose take the place of BGP.\n\n1645\n01:31:27,990 --> 01:31:31,290\nSo, that's why they weren't showing up\nin the routing table, but here they are.\n\n1646\n01:31:31,290 --> 01:31:34,210\nSo, they came in and\nthere's that metric of 10,000 which\n\n1647\n01:31:34,210 --> 01:31:38,370\nis really being ignored by BGP except for\nuse as part of the MED, right.\n\n1648\n01:31:38,370 --> 01:31:42,290\nIf it even gets to that, but\nI can see the routes are coming in and\n\n1649\n01:31:42,290 --> 01:31:45,090\nI'm learning them via BGP,\nthat border gateway protocol.\n\n1650\n01:31:46,560 --> 01:31:52,120\nSo the commands that I enter,\nlet's boil it down to the actual commands\n\n1651\n01:31:52,120 --> 01:31:56,390\nbecause it can get confusing if we try and\ntake it as a whole.\n\n1652\n01:31:56,390 --> 01:32:01,330\nSo basically, the command was the same\nas all of the other protocols, right?\n\n1653\n01:32:01,330 --> 01:32:03,850\nRedistribute, followed by the protocol.\n\n1654\n01:32:03,850 --> 01:32:07,050\nMaybe it's EIGRP,\nmaybe it's connected like I did, or\n\n1655\n01:32:07,050 --> 01:32:09,920\nstatic or whatever, followed by a metric.\n\n1656\n01:32:09,920 --> 01:32:15,090\nIn fact, let's go a little bit more crazy\non this one, we can redistribute our EIGRP\n\n1657\n01:32:16,150 --> 01:32:20,590\nupon the system one and we can bring that\nin and we can specify our metric for it.\n\n1658\n01:32:20,590 --> 01:32:24,530\nAnd you know, maybe it's metric we just\ndo 5,000, so we can punch that in.\n\n1659\n01:32:24,530 --> 01:32:28,100\nNow those EIGRP routes come in and\nthey get advertised over.\n\n1660\n01:32:28,100 --> 01:32:31,210\nMaybe i've got one of those static\nnetworks that I wanna bring\n\n1661\n01:32:31,210 --> 01:32:32,000\nin or whatever.\n\n1662\n01:32:32,000 --> 01:32:34,440\nWe just redistribute those\nsame basic commands.\n\n1663\n01:32:34,440 --> 01:32:35,344\nJumping over to router three.\n\n1664\n01:32:37,258 --> 01:32:40,250\nIf I take a look at my routing table,\nthere's those other networks.\n\n1665\n01:32:40,250 --> 01:32:41,610\nAnd these guys originated,\n\n1666\n01:32:41,610 --> 01:32:44,280\nactually it would be these guys\nthat originated from EIGRP.\n\n1667\n01:32:44,280 --> 01:32:46,260\nBut I can't tell the difference, right.\n\n1668\n01:32:46,260 --> 01:32:50,370\nThe one's that were directly connected,\nthe one's that came in from EIGRP.\n\n1669\n01:32:50,370 --> 01:32:53,440\nThe only difference is the metric\nthat I assign to them.\n\n1670\n01:32:53,440 --> 01:32:56,840\nBut otherwise,\nthey just came right over and that's it.\n\n1671\n01:32:56,840 --> 01:33:00,400\nWe see them as external BGP routes\nwith an admin distance of 200.\n\n1672\n01:33:00,400 --> 01:33:03,330\nOr, I'm sorry,\ninternal BGP routes at this point.\n\n1673\n01:33:03,330 --> 01:33:06,300\nRemember, there are external BGP routes\nwhich have an administrative distance of\n\n1674\n01:33:06,300 --> 01:33:08,510\n20, significantly lower.\n\n1675\n01:33:08,510 --> 01:33:12,240\nThose would have won, but I just have\none BGP autonomous system here, so\n\n1676\n01:33:12,240 --> 01:33:12,920\nwe won't see that.\n\n1677\n01:33:12,920 --> 01:33:13,490\nWe'll see that later.\n\n1678\n01:33:15,000 --> 01:33:18,940\nAll right, so in the show notes,\nI have all the different examples of\n\n1679\n01:33:18,940 --> 01:33:22,530\nredistributing into BGP, but\nyou've kinda already seen it, right?\n\n1680\n01:33:22,530 --> 01:33:26,050\nIt's really the same exact set of\ncommands for each of the protocols.\n\n1681\n01:33:28,010 --> 01:33:29,658\nAll right,\nlet me see if I’m missing anything else.\n\n1682\n01:33:29,658 --> 01:33:36,171\nI think that’s pretty much it for\nBGP, let’s see.\n\n1683\n01:33:36,171 --> 01:33:38,990\nYeah, you just have to be careful.\n\n1684\n01:33:38,990 --> 01:33:42,260\nThat main caveat, the main thing that\nCisco hits on is watching out for\n\n1685\n01:33:42,260 --> 01:33:43,910\nrouting loops and black holes.\n\n1686\n01:33:43,910 --> 01:33:45,820\nAnd it's such an important\nconcept that we're actually gonna\n\n1687\n01:33:45,820 --> 01:33:48,820\nhave a show specifically on\nthat later on down the road.\n\n1688\n01:33:48,820 --> 01:33:50,320\nSo make sure you jump in and\ncheck that out.\n\n1689\n01:33:50,320 --> 01:33:53,040\nBut as far as basic redistribution,\nit's pretty cut and dried.\n\n1690\n01:33:54,500 --> 01:33:56,490\nAll right, Ronnie, can you think of\nanything else we should throw in?\n\n1691\n01:33:56,490 --> 01:33:57,280\nWords of wisdom?\n\n1692\n01:33:57,280 --> 01:33:57,900\n>> Nope.\n\n1693\n01:33:57,900 --> 01:33:59,960\nAgain, just keep practicing.\n\n1694\n01:33:59,960 --> 01:34:02,770\nThere's no doubt that\nthere's no replacement for\n\n1695\n01:34:02,770 --> 01:34:06,010\nthat, so the more that you can go ahead\nand run through these commands and\n\n1696\n01:34:06,010 --> 01:34:10,180\nwatch the routes get redistributed,\nthe easier it's going to be on exam day.\n\n1697\n01:34:10,180 --> 01:34:13,000\nKeep taking a look at the IP route table.\n\n1698\n01:34:13,000 --> 01:34:14,760\nI can't tell you how much\nthat's going to help you.\n\n1699\n01:34:16,185 --> 01:34:19,346\nYeah, but just make sure you continue\nto see these commands go in and\n\n1700\n01:34:19,346 --> 01:34:21,353\nyou continue to see the results from them.\n\n1701\n01:34:21,353 --> 01:34:24,049\nAnd that's gonna be key [LAUGH] yeah.\n\n1702\n01:34:24,049 --> 01:34:26,563\n>> Yeah, especially with these\nprotocols you don't work with a lot,\n\n1703\n01:34:26,563 --> 01:34:28,900\nthere's no substitute for practice.\n\n1704\n01:34:28,900 --> 01:34:32,250\nAll right, and if you haven't already\nI really recommend if you have\n\n1705\n01:34:32,250 --> 01:34:35,260\naccess to lab rentals,\ncompanies like Proctor Labs,\n\n1706\n01:34:35,260 --> 01:34:38,640\nyou can rent racks of routers to\nset up really complex environments.\n\n1707\n01:34:38,640 --> 01:34:39,900\nThat's a lot of fun.\n\n1708\n01:34:39,900 --> 01:34:44,550\nThere's programs like GNS3, the Cisco\npacket tracer to a lesser extent, but\n\n1709\n01:34:44,550 --> 01:34:47,430\nGNS3 where you can build up\nreally complex environments and\n\n1710\n01:34:47,430 --> 01:34:50,890\nredistribute those routes and create those\nloops, and get a chance to see that.\n\n1711\n01:34:50,890 --> 01:34:52,140\nIt's a great way to learn,\n\n1712\n01:34:52,140 --> 01:34:55,080\nyou can't do that in a production\nenvironment not without getting fired.\n\n1713\n01:34:55,080 --> 01:34:56,880\nBut in a lab environment,\nyou can have a lot of fun with it.\n\n1714\n01:34:57,910 --> 01:34:59,170\nAll right, well, let me remind you guys,\n\n1715\n01:34:59,170 --> 01:35:02,490\nif you have questions on any of this,\nlive during the show,\n\n1716\n01:35:02,490 --> 01:35:06,700\nyou can go to itpro.tv/live, and\nyou'll see the chat box beneath the video.\n\n1717\n01:35:06,700 --> 01:35:09,210\nPost your questions there,\nwe monitor and answer during the show.\n\n1718\n01:35:09,210 --> 01:35:12,960\nIf you have questions after the show,\nuse our Q and A forums.\n\n1719\n01:35:12,960 --> 01:35:14,930\nAt the top of every page on ITProTV,\n\n1720\n01:35:14,930 --> 01:35:18,550\nyou'll see a link that says Q and A, click\non it, it will take you to the forums,\n\n1721\n01:35:18,550 --> 01:35:21,970\nyou can post your questions there,\nwe monitor answer after the show.\n\n1722\n01:35:21,970 --> 01:35:24,120\nTake advantage of those resources,\nthey are there for you.\n\n1723\n01:35:24,120 --> 01:35:25,200\nAll right.\n\n1724\n01:35:25,200 --> 01:35:27,010\nWell I hope you guys\nenjoyed today's episode.\n\n1725\n01:35:27,010 --> 01:35:29,380\nSigning off for ItProTV, I'm Don Pezet.\n\n1726\n01:35:29,380 --> 01:35:30,110\n>> I'm Ronnie Wong.\n\n1727\n01:35:30,110 --> 01:35:31,594\n>> And we'll see you next time.\n\n1728\n01:35:31,594 --> 01:35:37,479\n[MUSIC]\n\n",
          "vimeoId": "119368170"
        },
        {
          "description": "Route summarization is when smaller routes are combined into one larger route to reduce the size of the routing table. Viewers will hear discussions on the importance of keeping a routing table as concise as possible, the basic theory of route summarization, the use of auto summarization and the importance of manual summarization of routes, as well as hear about configuring routers for manual summarization.",
          "length": "5859",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/ccnproute/cisco-ccnproute-3-11-route_summarization-021115-2.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/ccnproute/cisco-ccnproute-3-11-route_summarization-021115-2-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/ccnproute/cisco-ccnproute-3-11-route_summarization-021115-2-sm.jpg",
          "title": "Route Summarization",
          "transcript": "1\n00:00:00,000 --> 00:00:10,000\n[MUSIC]\n\n2\n00:00:14,371 --> 00:00:22,314\n[SOUND]\n\n3\n00:00:22,314 --> 00:00:32,314\n[MUSIC]\n\n4\n00:00:33,438 --> 00:00:36,307\nGood morning, good afternoon,\nand good evening and\n\n5\n00:00:36,307 --> 00:00:38,741\nwelcome back to another\nepisode of IT Pro TV.\n\n6\n00:00:38,741 --> 00:00:40,750\nI'm your host, Don Pezet.\n\n7\n00:00:40,750 --> 00:00:41,940\nBack to you on Mr. Ronnie Wong.\n\n8\n00:00:41,940 --> 00:00:42,670\nHow’s it going, Ronnie?\n\n9\n00:00:42,670 --> 00:00:43,850\n>> It is cold.\n\n10\n00:00:43,850 --> 00:00:47,245\nIt is a cold,\ncold morning here in sunny Florida, and\n\n11\n00:00:47,245 --> 00:00:50,722\nready to get started with\nanother CCMP route episode.\n\n12\n00:00:50,722 --> 00:00:53,266\n>> [LAUGH]\n>> Yeah, we’re diving right back into CCMP\n\n13\n00:00:53,266 --> 00:00:56,680\nroute and we’re picking up with\na new objective, this one is 3.11.\n\n14\n00:00:56,680 --> 00:00:58,308\nLet me read the official name here.\n\n15\n00:00:58,308 --> 00:01:04,940\n3.11 configure and verify manual and auto\nsummarization with any routing protocol.\n\n16\n00:01:04,940 --> 00:01:06,370\nNice big topic there.\n\n17\n00:01:06,370 --> 00:01:10,130\nSo, really, today,\nis all about summarizing routes.\n\n18\n00:01:10,130 --> 00:01:14,060\nAnd I know in a lot of the earlier\nepisodes, we've talked about this concept,\n\n19\n00:01:14,060 --> 00:01:15,060\nwe've talked about what it is.\n\n20\n00:01:15,060 --> 00:01:17,080\nBut we haven't actually done it and\n\n21\n00:01:17,080 --> 00:01:19,300\nthat's what we're going to be\nlooking at in this episode.\n\n22\n00:01:20,410 --> 00:01:22,960\nNow, before we dive into\nthe how to do it stuff,\n\n23\n00:01:22,960 --> 00:01:25,930\nlet's recap exactly what\nauto summarization, and\n\n24\n00:01:25,930 --> 00:01:29,720\nwhat route summarization in general is and\nwhat it's all about.\n\n25\n00:01:29,720 --> 00:01:33,339\nAt it's base, deep down at the very\nbrass tacks of the whole matter,\n\n26\n00:01:34,420 --> 00:01:39,540\nroute summarization is simply when\nwe combine multiple smaller routes\n\n27\n00:01:39,540 --> 00:01:41,550\ninto one larger route.\n\n28\n00:01:41,550 --> 00:01:45,310\nAnd we typically do that because we want\nto reduce the size of our routing table.\n\n29\n00:01:45,310 --> 00:01:46,990\nThat's the number one reason.\n\n30\n00:01:46,990 --> 00:01:49,530\nBut there's a few other reasons\nwhy we might do it, too.\n\n31\n00:01:49,530 --> 00:01:53,470\nBut focusing on that main reason,\nreducing the size of our routing table.\n\n32\n00:01:53,470 --> 00:01:55,490\nWhy is that important in the first place?\n\n33\n00:01:55,490 --> 00:01:56,140\nWhy do I care?\n\n34\n00:01:56,140 --> 00:01:59,860\nMy router has tons of memory, why not just\nget the biggest routing table possible so\n\n35\n00:01:59,860 --> 00:02:02,060\nI can have the most accurate results?\n\n36\n00:02:02,060 --> 00:02:02,960\nWell, that is true,\n\n37\n00:02:02,960 --> 00:02:06,880\nyou do get more accurate results if you\nhave a fully populated routing table.\n\n38\n00:02:06,880 --> 00:02:09,750\nBut the bigger your routing table is,\n\n39\n00:02:09,750 --> 00:02:14,275\nthe more time your router has to spend\nsorting out where to send each package.\n\n40\n00:02:14,275 --> 00:02:17,930\nIt's gotta look at the data, run it down\nthe list of routes to find the prefix\n\n41\n00:02:17,930 --> 00:02:23,260\nthat's most specific, and then send along\nto that destination, that takes effort.\n\n42\n00:02:23,260 --> 00:02:26,610\nThe smaller your routing table is,\nthe more efficient that is.\n\n43\n00:02:27,940 --> 00:02:30,530\nAnd with summarization, all it does is it\nlooks and says, all right, if you've got\n\n44\n00:02:30,530 --> 00:02:34,970\na couple of contiguous routes, routes that\nare right in a row, we could go ahead and\n\n45\n00:02:34,970 --> 00:02:39,340\ncombine those down into a single route and\nadvertise them out.\n\n46\n00:02:39,340 --> 00:02:43,360\nLet me give you just a simple example\nhere, I've got a little diagram.\n\n47\n00:02:43,360 --> 00:02:44,380\nLet's go to this diagram.\n\n48\n00:02:45,770 --> 00:02:48,494\nSo, I've got this little diagram here and\n\n49\n00:02:48,494 --> 00:02:52,958\nif you take a look at like the routes\nattached to router one right here,\n\n50\n00:02:52,958 --> 00:02:58,575\nI've got 192.168.1.0/26, and\nthen I've got 64 128 and 192.\n\n51\n00:02:58,575 --> 00:03:04,280\nThose four networks right there\nthat are all slash twenty sixes.\n\n52\n00:03:04,280 --> 00:03:08,820\nRouter one is gonna advertise those out\nand router two is gonna learn them.\n\n53\n00:03:08,820 --> 00:03:12,260\nRouter two only has one way\nto get to those networks.\n\n54\n00:03:12,260 --> 00:03:15,982\nIf I'm on router two and\nI wanna get to 192.168.1 whatever,\n\n55\n00:03:15,982 --> 00:03:18,200\nthere's only one way for me to get there.\n\n56\n00:03:18,200 --> 00:03:19,648\nI don't have a bunch of choices.\n\n57\n00:03:19,648 --> 00:03:22,161\nI'm just gonna go to this one link.\n\n58\n00:03:22,161 --> 00:03:26,270\nSo [COUGH], in this scenario,\ndoes it matter that I have\n\n59\n00:03:26,270 --> 00:03:31,210\nfour individual routes or just one big\nroute that groups all these together?\n\n60\n00:03:31,210 --> 00:03:33,920\nSince it's all going the same way,\nit doesn't really matter.\n\n61\n00:03:35,100 --> 00:03:37,370\nSo, that's an example of where\nwe can use route summarization.\n\n62\n00:03:37,370 --> 00:03:41,710\nWe can combine those down and\nnow we have one big route.\n\n63\n00:03:41,710 --> 00:03:45,680\nWe still have the same exact\nreachability as before.\n\n64\n00:03:45,680 --> 00:03:48,380\nBut the challenge is combining these.\n\n65\n00:03:48,380 --> 00:03:50,641\nHere, I picked nice\nones that are in order.\n\n66\n00:03:50,641 --> 00:03:53,570\nThey call it a contiguous address space.\n\n67\n00:03:53,570 --> 00:03:57,600\nThe address space is all nice and in line,\nand that'll all wrap up together.\n\n68\n00:03:57,600 --> 00:04:00,020\nIt's not always like\nthat in real life land.\n\n69\n00:04:00,020 --> 00:04:03,230\nMaybe, one of these is missing,\nmaybe like this 64 guy right here,\n\n70\n00:04:03,230 --> 00:04:06,220\nmaybe that networkr's not there.\n\n71\n00:04:06,220 --> 00:04:07,140\nSo, now I've just got these three.\n\n72\n00:04:08,310 --> 00:04:12,140\nCan I summarize these guys\ninto one big network?\n\n73\n00:04:12,140 --> 00:04:13,400\nI can.\n\n74\n00:04:13,400 --> 00:04:16,380\nBut if I do, I'm gonna get that\nnetwork that no longer exists.\n\n75\n00:04:16,380 --> 00:04:18,330\nIt's gonna be included in that summary.\n\n76\n00:04:18,330 --> 00:04:22,165\nAnd that can be a problem, because that\nnetwork might exist somewhere else in\n\n77\n00:04:22,165 --> 00:04:26,150\nthe network, and now, I'm saying\nit's over here when it really isn't.\n\n78\n00:04:26,150 --> 00:04:29,000\nThat's one of the big\nrisks with summarization.\n\n79\n00:04:29,000 --> 00:04:33,020\nThat's why we're gonna see some routing\nprotocols do this automatically,\n\n80\n00:04:33,020 --> 00:04:34,960\nwhich is auto summarization.\n\n81\n00:04:34,960 --> 00:04:37,090\nAnd other protocols do it manually.\n\n82\n00:04:37,090 --> 00:04:39,900\nBut we have to go in and\ndo the route summaries ourselves\n\n83\n00:04:39,900 --> 00:04:43,170\nbecause it doesn't wanna\ncreate a situation like this.\n\n84\n00:04:43,170 --> 00:04:47,570\nIf your network is perfectly designed, if\nall the address spaces in the hierarchical\n\n85\n00:04:47,570 --> 00:04:51,690\nmodel, everything's laid out contiguous,\nauto summarization works great.\n\n86\n00:04:51,690 --> 00:04:53,230\nThe routers optimize themselves.\n\n87\n00:04:54,320 --> 00:04:55,670\nBut not a lot of networks are like that.\n\n88\n00:04:55,670 --> 00:04:56,680\nRight, Ronnie?\n>> Yeah.\n\n89\n00:04:56,680 --> 00:04:58,490\nSometimes, what happens, of course,\n\n90\n00:04:58,490 --> 00:05:02,430\nis that network is built one piece at\na time and you start thinking, well,\n\n91\n00:05:02,430 --> 00:05:07,403\nif I just separate these out,\nnot only just making it 192.168.1 and\n\n92\n00:05:07,403 --> 00:05:12,070\nthen .2 and.3, you may now actually start\njust putting networks in at random.\n\n93\n00:05:12,070 --> 00:05:16,260\nAnd that prevents route summarization\nfrom working very effectively.\n\n94\n00:05:16,260 --> 00:05:20,120\nSo, the tighter your network scheme is,\nthe better it's gonna be.\n\n95\n00:05:20,120 --> 00:05:23,930\nAnd at the CCNA level, we've talked\nreally about breaking networks apart.\n\n96\n00:05:23,930 --> 00:05:28,070\nWe didn't really talk a lot about route\nsummarization, and so when we saw it,\n\n97\n00:05:28,070 --> 00:05:30,940\nit really was depending on that\nauto-summarization a lot of the times,\n\n98\n00:05:30,940 --> 00:05:32,420\nwhere it would do it for us.\n\n99\n00:05:32,420 --> 00:05:33,850\nAnd we didn't need to know how it was.\n\n100\n00:05:33,850 --> 00:05:36,960\nWe'd just say, okay, we're happy,\nit's now reporting one route.\n\n101\n00:05:36,960 --> 00:05:37,860\nBut remember, when we do that,\n\n102\n00:05:37,860 --> 00:05:40,630\nwe could include in some\nroutes that we don't need to.\n\n103\n00:05:40,630 --> 00:05:42,240\nSo, we do have to be careful.\n\n104\n00:05:42,240 --> 00:05:45,760\nSo, the best thing is, of course then,\nmake sure you have a very nice,\n\n105\n00:05:45,760 --> 00:05:48,460\ntight networking IP address,\nnetworking scheme.\n\n106\n00:05:48,460 --> 00:05:50,570\nIf you're gonna need to\ndo route summarization.\n\n107\n00:05:52,240 --> 00:05:56,570\n>> Now, the example I gave earlier\nwas this is a great way to reduce\n\n108\n00:05:56,570 --> 00:05:57,560\nthe routing table.\n\n109\n00:05:57,560 --> 00:06:01,370\nAnd that's true, that is one of the main\nreasons we do route summarization.\n\n110\n00:06:01,370 --> 00:06:03,760\nBut there is another reason\nwhy you might do it.\n\n111\n00:06:03,760 --> 00:06:07,330\nAnd that's to hide routing table updates.\n\n112\n00:06:07,330 --> 00:06:08,280\nWhat do I mean by that?\n\n113\n00:06:08,280 --> 00:06:12,060\nWell, let me go to a slightly more\ncomplex diagram for this one.\n\n114\n00:06:12,060 --> 00:06:15,930\nHere I've got an example of\na multi area OSPF environment.\n\n115\n00:06:16,950 --> 00:06:20,010\nSo, if you look at it,\nI've got area one over here on the left.\n\n116\n00:06:20,010 --> 00:06:22,270\nAnd I've got area 0 here\non my backbone area.\n\n117\n00:06:22,270 --> 00:06:23,800\nAnd I've got area two down here.\n\n118\n00:06:25,420 --> 00:06:28,500\nBy default, when you configure OSPF,\n\n119\n00:06:28,500 --> 00:06:33,900\nyour router will talk to every\nother router in your area.\n\n120\n00:06:33,900 --> 00:06:37,077\nSo, router one is talking to router two,\ntalking to router three,\n\n121\n00:06:37,077 --> 00:06:39,711\ntalking to router four,\nall exchanging information.\n\n122\n00:06:39,711 --> 00:06:43,014\nSo, the fact that these individual\nroutes over here exist,\n\n123\n00:06:43,014 --> 00:06:45,300\nis being exchanged by all these routers.\n\n124\n00:06:45,300 --> 00:06:46,918\nThey all know about it.\n\n125\n00:06:46,918 --> 00:06:51,271\nBut when we get to a border router, border\nrouters are a little bit different, and\n\n126\n00:06:51,271 --> 00:06:55,970\nI guess, in my diagram, maybe, I should\nhave put these guys up here like this.\n\n127\n00:06:55,970 --> 00:06:58,120\nSo, if I'm drawing border routers.\n\n128\n00:06:58,120 --> 00:07:01,610\nThese are routers that\nsit in between the areas.\n\n129\n00:07:01,610 --> 00:07:05,680\nSo, they're no necessarily in one\nparticular area, they're in two areas.\n\n130\n00:07:05,680 --> 00:07:08,840\nRouter four here is in area one and\narea zero.\n\n131\n00:07:08,840 --> 00:07:10,950\nAnd by default,\n\n132\n00:07:10,950 --> 00:07:14,980\nwhat that border router will do is\nadvertise all those individual routes.\n\n133\n00:07:14,980 --> 00:07:19,282\nSo, the fact that there's 1921681.0 and\n2.0 and 3.0,\n\n134\n00:07:19,282 --> 00:07:21,338\nit's advertised into area zero.\n\n135\n00:07:21,338 --> 00:07:26,086\nAnd then in area zero, it's gonna\nadvertise it throughout its routers, and\n\n136\n00:07:26,086 --> 00:07:29,447\nthen it will get advertised\nto the border routers, and\n\n137\n00:07:29,447 --> 00:07:34,240\nthe border routers will pass that on\nto routers that are in the other areas.\n\n138\n00:07:34,240 --> 00:07:38,980\nExchanging that information so\nthat everybody knows about those networks.\n\n139\n00:07:38,980 --> 00:07:40,720\nAnd that's really what we want.\n\n140\n00:07:40,720 --> 00:07:44,670\nAt the end of the day, we wanna make sure\nthat all of our routers know how to get to\n\n141\n00:07:44,670 --> 00:07:46,530\nall the different locations.\n\n142\n00:07:46,530 --> 00:07:49,330\nSo, it's spreading throughout the network.\n\n143\n00:07:49,330 --> 00:07:54,080\nThe problem is, oftentimes,\na route can change.\n\n144\n00:07:54,080 --> 00:07:58,364\nAnd when a route changes,\nwe have to bother the entire network.\n\n145\n00:07:58,364 --> 00:08:01,452\nThink about what happens\nif a failure were to occur.\n\n146\n00:08:01,452 --> 00:08:05,819\nSo, something happens on my network and\nAnd I get a failure,\n\n147\n00:08:05,819 --> 00:08:09,338\nwhich is somewhere I have\nmy crazy failure icon.\n\n148\n00:08:09,338 --> 00:08:12,165\n[LAUGH] Here.\n\n149\n00:08:12,165 --> 00:08:14,394\nWe'll do fire.\n\n150\n00:08:14,394 --> 00:08:18,015\nSo we've got some kind of\nnetwork fire that erupts.\n\n151\n00:08:18,015 --> 00:08:20,700\n[LAUGH] This is very realistic.\n\n152\n00:08:20,700 --> 00:08:21,480\nThere we go.\n\n153\n00:08:21,480 --> 00:08:24,110\nSo there's a fire, and\nthat network goes offline.\n\n154\n00:08:24,110 --> 00:08:24,720\nOkay.\n\n155\n00:08:24,720 --> 00:08:27,610\nWhen that network goes offline,\nwhat happens?\n\n156\n00:08:27,610 --> 00:08:31,474\nWell, it's gotta notify the other\nrouters about the failure right?\n\n157\n00:08:31,474 --> 00:08:35,332\nSo router 1 will tell router 2,\nit'll tell router 3, it'll tell router 4,\n\n158\n00:08:35,332 --> 00:08:38,079\nit'll say hey guys, 192.168.1.0 is gone.\n\n159\n00:08:38,079 --> 00:08:39,462\nI can't get to it anymore.\n\n160\n00:08:39,462 --> 00:08:41,828\nYou guys have to find\nanother way to get there.\n\n161\n00:08:41,828 --> 00:08:42,491\nAll right,\n\n162\n00:08:42,491 --> 00:08:47,230\nwell router 4 is gonna hear that and\nit's gonna pass it on to router 5.\n\n163\n00:08:47,230 --> 00:08:49,700\nRouter 5 is gonna pass on to router 6 and\n7.\n\n164\n00:08:49,700 --> 00:08:51,760\nRouter 6 and\n7 are going to pass it on to router 8.\n\n165\n00:08:51,760 --> 00:08:54,170\nAnd router 9 and\n10 they're gonna learn about it.\n\n166\n00:08:54,170 --> 00:08:59,417\nSo every router, 100% of the routers\nin my autonomous system are all\n\n167\n00:08:59,417 --> 00:09:04,418\ngoing to learn that 192.168.1.0\nis now offline, okay.\n\n168\n00:09:04,418 --> 00:09:06,498\nNow that doesn't sound like a bad thing,\nright?\n\n169\n00:09:06,498 --> 00:09:08,260\nWe want our routers to know it.\n\n170\n00:09:08,260 --> 00:09:12,918\nBut at the end of the day, does it really\nchange the behavior of router 9 and\n\n171\n00:09:12,918 --> 00:09:14,060\nrouter 10?\n\n172\n00:09:14,060 --> 00:09:17,800\nIf they've got traffic for\n192.168.2.0 or 3.0,\n\n173\n00:09:17,800 --> 00:09:20,328\nthat traffic still goes along like normal.\n\n174\n00:09:20,328 --> 00:09:26,410\nTraffic from 192.168.1.0, if it comes into\nrouter 9, router 9 just throws it away.\n\n175\n00:09:26,410 --> 00:09:29,490\nIt says, hey I can't get to it and\nit throws it way.\n\n176\n00:09:29,490 --> 00:09:32,946\nIf the route still existed,\nthe traffic would go to router 8,\n\n177\n00:09:32,946 --> 00:09:37,570\nto router 7, to router 5, to router 4,\nup to router 1 and over to that network.\n\n178\n00:09:37,570 --> 00:09:39,788\nBut it would die right there cuz\nit can't get to the destination.\n\n179\n00:09:39,788 --> 00:09:41,164\nRight.\n\n180\n00:09:41,164 --> 00:09:47,300\nSo instead,\nwhat we can do is we can do summaries.\n\n181\n00:09:47,300 --> 00:09:52,390\nAnd what a summary route will do is it'll\nsit in place on the border routers.\n\n182\n00:09:52,390 --> 00:09:56,595\nAnd the border routers will\nsummarize that information so\n\n183\n00:09:56,595 --> 00:10:00,797\nthat the other areas don't have\nto know about it instead of\n\n184\n00:10:00,797 --> 00:10:05,541\nadvertising 192.168.1.0 and 2.0, and 3.0.\n\n185\n00:10:05,541 --> 00:10:07,984\nWe could just do a summary route.\n\n186\n00:10:07,984 --> 00:10:12,012\nAnd we could put one\nroute in here that was\n\n187\n00:10:12,012 --> 00:10:17,832\n192.168.0.0/22, something like that.\n\n188\n00:10:17,832 --> 00:10:18,671\nAll right.\n\n189\n00:10:18,671 --> 00:10:24,030\nAnd if I advertise that /22 out\non the border router, right.\n\n190\n00:10:24,030 --> 00:10:26,990\nNow router 5, 6, 7, 8, 9, 10, right?\n\n191\n00:10:26,990 --> 00:10:32,596\nArea 0 and Area 2, they're gonna learn\nabout the 192.168.0.0/22 network and\n\n192\n00:10:32,596 --> 00:10:37,370\nthat if they have traffic in that\nnetwork they need to send it to Area 1.\n\n193\n00:10:37,370 --> 00:10:38,760\nAnd they'll send it along.\n\n194\n00:10:38,760 --> 00:10:44,540\nAnd if this route right here were to fail,\nwell, they don't need to hear about it.\n\n195\n00:10:44,540 --> 00:10:45,950\nThey just hear the summary route.\n\n196\n00:10:45,950 --> 00:10:47,690\nTheir routing table stays the same.\n\n197\n00:10:47,690 --> 00:10:51,430\nNow, the routing tables inside of Area 1,\nthey're all gonna update, right?\n\n198\n00:10:51,430 --> 00:10:52,850\nCuz those routers all talk to each other.\n\n199\n00:10:52,850 --> 00:10:55,210\nThere's no way to stop that,\nyou wouldn't want to.\n\n200\n00:10:55,210 --> 00:10:57,430\nBut all those routers,\nrouter 1, router 2, router 3,\n\n201\n00:10:57,430 --> 00:10:59,930\nrouter 4, they'll all get the update.\n\n202\n00:10:59,930 --> 00:11:02,706\nBut the routers in Area 0,\nthe routers in Area 2,\n\n203\n00:11:02,706 --> 00:11:08,920\nthey're not gonna hear about that\noutage because they're not seeing it.\n\n204\n00:11:08,920 --> 00:11:11,520\nThey just see the summary route and\nthat's it.\n\n205\n00:11:11,520 --> 00:11:15,600\nThey don't see that this\nindividual route failed, right?\n\n206\n00:11:15,600 --> 00:11:18,500\nSo we hide the updates\nfrom the other branches,\n\n207\n00:11:18,500 --> 00:11:22,120\nfrom the other areas,\nwhatever those areas happen to be, right?\n\n208\n00:11:22,120 --> 00:11:27,011\nSo now, not only are our routing\ntables optimized, cuz they're smaller.\n\n209\n00:11:27,011 --> 00:11:30,400\nBut we're sending less\nupdates through the networks,\n\n210\n00:11:30,400 --> 00:11:33,970\nwhich means we stay\nconverged more commonly.\n\n211\n00:11:33,970 --> 00:11:35,720\nBut it can be a little wasteful.\n\n212\n00:11:35,720 --> 00:11:41,500\nIf there's traffic for 192.168.1.0 and it\ncomes into router 9, It'll go to router 8.\n\n213\n00:11:41,500 --> 00:11:42,340\nIt'll go to router 7.\n\n214\n00:11:42,340 --> 00:11:43,070\nIt'll go to router 5.\n\n215\n00:11:43,070 --> 00:11:47,340\nThen it'll go to router 4 and\nrouter 4 will drop it.\n\n216\n00:11:47,340 --> 00:11:50,640\nThat means I wasted bandwidth\nall the across this link\n\n217\n00:11:50,640 --> 00:11:53,420\njust to drop it right here at the border.\n\n218\n00:11:53,420 --> 00:11:54,890\nSo, if I'm concerned about that.\n\n219\n00:11:54,890 --> 00:11:56,700\nIf I'm concerned about bandwidth.\n\n220\n00:11:56,700 --> 00:11:57,970\nI don't want to do this.\n\n221\n00:11:57,970 --> 00:12:02,130\nI want to go ahead and let my networks\nfully populate throughout the environment.\n\n222\n00:12:02,130 --> 00:12:07,970\nBut if bandwidth is not my concern,\nstability is, then we want to do this.\n\n223\n00:12:07,970 --> 00:12:09,692\nWe want to make sure we hide it.\n\n224\n00:12:09,692 --> 00:12:14,080\nSo summarizing like this becomes\nkind of an optional thing and\n\n225\n00:12:14,080 --> 00:12:18,440\nthat's why in protocols like OSPF,\nsummarization is not automatic.\n\n226\n00:12:18,440 --> 00:12:18,970\nAll right?\n\n227\n00:12:18,970 --> 00:12:21,670\nIt just does manual summarization.\n\n228\n00:12:21,670 --> 00:12:26,115\nBut in protocols like EIGRP and\nRIP, where they don't have areas.\n\n229\n00:12:26,115 --> 00:12:29,331\nThey do auto summarization, cuz they don't\nhave areas in the first place, right so\n\n230\n00:12:29,331 --> 00:12:31,340\nthey can go ahead and\nsummarize wherever they want.\n\n231\n00:12:31,340 --> 00:12:32,787\nAnd it makes sense for them,\n\n232\n00:12:32,787 --> 00:12:35,870\nright if you're following this\ncontiguous address space.\n\n233\n00:12:36,970 --> 00:12:40,600\nSo that's basically what summarization is,\nthat's why we do it.\n\n234\n00:12:40,600 --> 00:12:44,630\nThe big risk with summarization,\nit's kind of hard to break things with it,\n\n235\n00:12:44,630 --> 00:12:48,167\nunless you're not following\na contiguous address space, right.\n\n236\n00:12:48,167 --> 00:12:53,426\nSo like here,\nI'm advertising 192.168.0.0/22.\n\n237\n00:12:53,426 --> 00:12:58,676\nBut if you look at my networks,\nI've got 192.168.1.0, 2.0,\n\n238\n00:12:58,676 --> 00:13:05,640\n3.0, if we worked out the math on that,\nthat includes 192.168.0.0/24.\n\n239\n00:13:05,640 --> 00:13:08,380\nWhat if that network\nexisted somewhere else?\n\n240\n00:13:08,380 --> 00:13:09,585\nLike over here on router 7?\n\n241\n00:13:10,920 --> 00:13:15,410\nIf it existed on router 7 also,\nwell, now I have a real problem.\n\n242\n00:13:15,410 --> 00:13:20,140\nBecause I've got this big\nsummary route coming in that\n\n243\n00:13:20,140 --> 00:13:25,190\nsays 192.168.0.0/24 is actually\navailable somewhere else, right.\n\n244\n00:13:25,190 --> 00:13:28,930\nAnd now I've gotta get where\npeople know the difference.\n\n245\n00:13:28,930 --> 00:13:31,540\nBut fortunately,\nCisco kind of plans for that.\n\n246\n00:13:31,540 --> 00:13:34,579\nWhat's gonna happen here\nis everybody in Area 0 and\n\n247\n00:13:34,579 --> 00:13:38,805\neverybody in Area 2 will actually\nhave two routes in the routing table.\n\n248\n00:13:38,805 --> 00:13:42,730\nThey'll have 192.168.0.0/22.\n\n249\n00:13:42,730 --> 00:13:45,260\nAnd they'll have 192.168.0.0/24.\n\n250\n00:13:45,260 --> 00:13:46,870\nThey'll have both.\n\n251\n00:13:46,870 --> 00:13:51,691\nNow, when the router runs down the router\ntable to pick where you're going,\n\n252\n00:13:51,691 --> 00:13:55,250\nit always looks for\nthe most specific prefix it can find,\n\n253\n00:13:55,250 --> 00:13:58,014\nthe one with the most\nbits in the network ID.\n\n254\n00:13:58,014 --> 00:14:03,615\nSo, if I have traffic destined for\n192.168.0.55, it'll\n\n255\n00:14:03,615 --> 00:14:10,680\npick the /24 route over the /22 route\nbecause the /24 route is more specific.\n\n256\n00:14:10,680 --> 00:14:14,080\nThey call that, oh shoot,\nit's specificity.\n\n257\n00:14:14,080 --> 00:14:14,740\nIs that right?\n\n258\n00:14:14,740 --> 00:14:15,470\n>> I think so.\n\n259\n00:14:15,470 --> 00:14:18,090\n>> Or am I making up words for the show?\n\n260\n00:14:18,090 --> 00:14:18,970\n[LAUGH] Sometimes I make up words.\n\n261\n00:14:18,970 --> 00:14:21,065\nIt's specificity.\n\n262\n00:14:21,065 --> 00:14:24,180\n>> It's the one with the longest prefix\nlength that's what I know, yeah.\n\n263\n00:14:24,180 --> 00:14:29,040\nSo yeah, routers have that ability to\nbe able to rate that route when it sees\n\n264\n00:14:29,040 --> 00:14:29,970\nthose two.\n\n265\n00:14:29,970 --> 00:14:32,850\nSo when it comes down to it,\nthat's usually the primary thing that it\n\n266\n00:14:32,850 --> 00:14:35,600\nlooks for\nfirst is that longest prefix length.\n\n267\n00:14:35,600 --> 00:14:39,030\nAnd then if we are talking about actually\nroutes, next it would then look for\n\n268\n00:14:39,030 --> 00:14:40,110\nadministrative distance.\n\n269\n00:14:40,110 --> 00:14:43,770\nAnd there's a lot of those tiebreakers,\nthat's the term I was trying to look for.\n\n270\n00:14:43,770 --> 00:14:46,180\nAnd so that's what's happening\nhere with those two routes.\n\n271\n00:14:46,180 --> 00:14:49,780\nBoth of them are registering\nthe 192.168.0.0,\n\n272\n00:14:49,780 --> 00:14:52,940\nbut one is more specific the way\nthat Don described it, and\n\n273\n00:14:52,940 --> 00:14:56,150\nthe other one is actually more general,\nso it's gonna take this one first.\n\n274\n00:14:56,150 --> 00:14:59,390\n>> I got the thumbs up from Daniel\noff set here, it is specificity.\n\n275\n00:15:00,400 --> 00:15:05,809\nThe risk that we have is,\nlet's say 192.168.0.0 were to fail.\n\n276\n00:15:05,809 --> 00:15:07,643\nSo I'm just gonna move\nthat failure over here.\n\n277\n00:15:07,643 --> 00:15:10,010\n>> [LAUGH]\n>> That was different.\n\n278\n00:15:10,010 --> 00:15:11,508\n>> If you can find it.\n\n279\n00:15:11,508 --> 00:15:12,390\n>> Where's my bring to front?\n\n280\n00:15:12,390 --> 00:15:13,483\nThere we go.\n\n281\n00:15:13,483 --> 00:15:16,780\nSo 192.168.0.0 fails.\n\n282\n00:15:16,780 --> 00:15:20,145\nWell, now I gotta find an alternate route\nto get to it and what am I gonna see?\n\n283\n00:15:20,145 --> 00:15:23,680\nI'm going to see 192.168.0.0/22.\n\n284\n00:15:23,680 --> 00:15:29,345\nSo if router 9 has traffic\nthat's destined for\n\n285\n00:15:29,345 --> 00:15:32,560\n192.168.0.0, normally,\nassuming my network was stable,\n\n286\n00:15:32,560 --> 00:15:37,520\nit would send its traffic along\na path something like this.\n\n287\n00:15:37,520 --> 00:15:39,420\nLet's pick a color that'll stand out.\n\n288\n00:15:39,420 --> 00:15:40,740\nLet's go with yellow.\n\n289\n00:15:40,740 --> 00:15:41,830\nI like yellow.\n\n290\n00:15:41,830 --> 00:15:47,551\nSo normally it would pick a path\nthat runs right through router 8.\n\n291\n00:15:47,551 --> 00:15:50,776\nAnd I guess actually it would have to run\nall the way up here through router 7 to be\n\n292\n00:15:50,776 --> 00:15:52,670\nable to get over to that destination,\nright?\n\n293\n00:15:52,670 --> 00:15:54,949\nSo that's kinda where we'd\nnormally go to get there, right?\n\n294\n00:15:54,949 --> 00:15:58,995\nBut when that network fails, it says I\ngotta find another way to get there, and\n\n295\n00:15:58,995 --> 00:16:01,081\nit's gonna look at the routing table and\n\n296\n00:16:01,081 --> 00:16:05,767\nit's gonna say well, I lost the /24 I got\nthis /22 that includes the network I want.\n\n297\n00:16:05,767 --> 00:16:08,886\nAnd so it's gonna take it's traffic, and\n\n298\n00:16:08,886 --> 00:16:12,670\nit's gonna move it to\nhead that way instead.\n\n299\n00:16:12,670 --> 00:16:14,400\nWhen it gets over to that other router,\n\n300\n00:16:14,400 --> 00:16:17,230\nwhen it gets over to router 4,\nrouter 4s gonna say.\n\n301\n00:16:17,230 --> 00:16:18,080\nOh yeah.\n\n302\n00:16:18,080 --> 00:16:23,460\nI kind of advertised that /22, but\nI don't really have the whole thing.\n\n303\n00:16:23,460 --> 00:16:25,610\nWhat you want is one of\nthose that I don't have.\n\n304\n00:16:25,610 --> 00:16:27,250\nI'm just gonna throw your traffic away.\n\n305\n00:16:27,250 --> 00:16:29,140\nAnd that's exactly what it does.\n\n306\n00:16:29,140 --> 00:16:33,850\nEvery Cisco router has\na interface that you don't see.\n\n307\n00:16:33,850 --> 00:16:37,252\nThere's a hidden interface\ncalled Null Zero.\n\n308\n00:16:37,252 --> 00:16:38,310\nAll right.\n\n309\n00:16:38,310 --> 00:16:39,240\nRemember it for the exam.\n\n310\n00:16:39,240 --> 00:16:41,600\nIt's a guarantee,\nit'll turn up on the exam.\n\n311\n00:16:41,600 --> 00:16:46,690\nYou know you've got your FA0/0 or\nfast ethernet or gig ethernet, whatever.\n\n312\n00:16:46,690 --> 00:16:50,120\nYou've got those different interfaces that\nyou see, that you work with all the time.\n\n313\n00:16:50,120 --> 00:16:53,130\nBut null zero is a virtual interface.\n\n314\n00:16:53,130 --> 00:16:56,040\nIt's one that sits on\nthe control on the data plane.\n\n315\n00:16:56,040 --> 00:16:59,010\nAnd any time that the router\nwants to throw traffic away,\n\n316\n00:16:59,010 --> 00:17:00,635\nit's throws it into that\nnull zero interface.\n\n317\n00:17:00,635 --> 00:17:05,150\nAnd so when we receive traffic for\nthat /22 and\n\n318\n00:17:05,150 --> 00:17:08,710\nwe don't have a more specific\nroute to actually send it on to.\n\n319\n00:17:08,710 --> 00:17:11,400\nIt usually sends it to null zero,\nit throws it away.\n\n320\n00:17:11,400 --> 00:17:15,680\nSo that means we wasted bandwidth again,\nwe gave these other routers a false sense\n\n321\n00:17:15,680 --> 00:17:19,110\nof thinking the network was still\nonline when it wasn't, All right.\n\n322\n00:17:19,110 --> 00:17:24,450\nFortunately, the failure when it goes\naway, that /24 comes back into our routing\n\n323\n00:17:24,450 --> 00:17:29,990\ntable, it overrides, and that traffic\nends up getting routed right back over.\n\n324\n00:17:29,990 --> 00:17:30,920\nTo where we want it, right?\n\n325\n00:17:30,920 --> 00:17:34,230\nBack to the appropriate destination.\n\n326\n00:17:34,230 --> 00:17:38,831\nSo well that's a terrible color, trying to\npicks up in a little more I don't know,\n\n327\n00:17:38,831 --> 00:17:39,800\nwhatever.\n\n328\n00:17:39,800 --> 00:17:41,300\nAnyway we will play with\ncolor pallets later.\n\n329\n00:17:41,300 --> 00:17:42,071\nSo but there we go,\n\n330\n00:17:42,071 --> 00:17:45,670\nthat's some of the things we need to\nbe aware of with route summarization.\n\n331\n00:17:45,670 --> 00:17:49,230\nNow, for the objective,\nthey say they want you to understand\n\n332\n00:17:49,230 --> 00:17:52,610\nmanual summarization as well\nas automatic summarization.\n\n333\n00:17:52,610 --> 00:17:57,480\nAnd they want you to be able to do it for\nany protocol.\n\n334\n00:17:57,480 --> 00:17:59,810\nAnd by any protocol, what do they mean?\n\n335\n00:17:59,810 --> 00:18:04,980\nWell they mean EIGRP,\nOSPF and unfortunately RIP.\n\n336\n00:18:04,980 --> 00:18:07,550\nI say unfortunately,\nRIP's actually really easy to do so\n\n337\n00:18:07,550 --> 00:18:08,910\nit's not a big deal to learn it.\n\n338\n00:18:08,910 --> 00:18:10,540\nBut those are the three\nprotocols that we need to know.\n\n339\n00:18:10,540 --> 00:18:13,880\nSo that we can summarize routes in\nthe environment and get it going.\n\n340\n00:18:13,880 --> 00:18:15,160\nAnd it's a pretty simple process.\n\n341\n00:18:17,045 --> 00:18:20,440\nAll right, well I wanna start off\nwith RIP because it's the easiest and\n\n342\n00:18:20,440 --> 00:18:22,060\nif you're trying to learn this for\nthe first time,\n\n343\n00:18:22,060 --> 00:18:24,560\nit's always nice to start with\nsomething easy, so we'll pick up there.\n\n344\n00:18:24,560 --> 00:18:25,480\nBut, why don't we do this.\n\n345\n00:18:25,480 --> 00:18:26,430\nWhy don't we stop and take a break.\n\n346\n00:18:26,430 --> 00:18:30,770\nAnd when we get back from break we tackle\nRIP and then after that we'll jump into\n\n347\n00:18:30,770 --> 00:18:34,230\nEIGRP and OSPF and all those other\ngood guys to see how they work.\n\n348\n00:18:34,230 --> 00:18:36,270\nSo, let's stop here, stay tuned.\n\n349\n00:18:36,270 --> 00:18:41,435\nWe'll be back in just a moment.\n\n350\n00:18:41,435 --> 00:18:46,029\n[SOUND] All right, welcome back everybody.\n\n351\n00:18:46,029 --> 00:18:50,070\nSo, what we're gonna do, we're gonna\nstart off summarizing with RIP.\n\n352\n00:18:50,070 --> 00:18:54,000\nAnd before we dive right into RIP,\nI just wanna cover a couple of basics.\n\n353\n00:18:54,000 --> 00:18:57,800\nEach protocol has slightly\ndifferent behaviors, all right?\n\n354\n00:18:57,800 --> 00:19:01,720\nRIP, for example,\nsupports auto summarization.\n\n355\n00:19:01,720 --> 00:19:03,809\nAnd that means if we wanna do\nroute summarization in Rip,\n\n356\n00:19:03,809 --> 00:19:05,470\nwe've probably don't have to do anything.\n\n357\n00:19:05,470 --> 00:19:08,202\nIt's probably already doing it for us.\n\n358\n00:19:08,202 --> 00:19:09,456\nAll right?\n\n359\n00:19:09,456 --> 00:19:12,630\nAnd if you guys are just learning or\nsetting out into this stuff,\n\n360\n00:19:12,630 --> 00:19:15,410\nyou might bump into what I did, which\nis I would look at a network and say.\n\n361\n00:19:15,410 --> 00:19:17,240\nWait it's not summarizing at all.\n\n362\n00:19:17,240 --> 00:19:18,400\nWhat's this auto summary crap?\n\n363\n00:19:18,400 --> 00:19:19,470\nIt's not working.\n\n364\n00:19:19,470 --> 00:19:22,880\nAnd it turns out there's just some kind of\nguidelines that it follows when it does\n\n365\n00:19:22,880 --> 00:19:23,790\nsummarizing.\n\n366\n00:19:23,790 --> 00:19:30,450\nFor example, RIP will only summarize when\nyou cross a major classful boundary.\n\n367\n00:19:30,450 --> 00:19:33,010\nNow I'm saying classful right.\n\n368\n00:19:33,010 --> 00:19:35,870\nEven if RIP is in classless mode,\n\n369\n00:19:35,870 --> 00:19:39,210\nif you've done the RIP version two,\nfor example.\n\n370\n00:19:39,210 --> 00:19:41,650\nYou're not in the classful mode any more,\nbut\n\n371\n00:19:41,650 --> 00:19:43,925\nsummarization still follows\nthe classful boundaries.\n\n372\n00:19:43,925 --> 00:19:45,940\nRight?\nLet me show you an example,\n\n373\n00:19:45,940 --> 00:19:47,208\nlet me jump back to my diagram.\n\n374\n00:19:47,208 --> 00:19:51,070\n[COUGH]\nAll right.\n\n375\n00:19:51,070 --> 00:19:53,430\nSo let's run off of this\ntopology right here.\n\n376\n00:19:53,430 --> 00:19:54,650\nOn the left side, I've got 192.168.1.0.\n\n377\n00:19:54,650 --> 00:19:59,440\nAnd it's divided up into\na bunch of smaller networks.\n\n378\n00:19:59,440 --> 00:20:02,980\nIf I was running RIP across this\nwhole environment, end to end.\n\n379\n00:20:04,170 --> 00:20:05,640\nWhen would it summarize that?\n\n380\n00:20:05,640 --> 00:20:10,830\nWell, if I had 192.168.1.0\nstuff on the left.\n\n381\n00:20:12,250 --> 00:20:15,660\nAnd 192.168.1.0 stuff on the right.\n\n382\n00:20:15,660 --> 00:20:19,240\nThat's effectively class C\ntype networks on the left and\n\n383\n00:20:19,240 --> 00:20:20,660\nclass C type networks on the right.\n\n384\n00:20:20,660 --> 00:20:24,370\nIt might be sub-netted right,\nVLSM down to smaller networks but\n\n385\n00:20:24,370 --> 00:20:26,230\nthey were built out of a class C.\n\n386\n00:20:26,230 --> 00:20:29,900\nAnd so when I jump from one\nclass C network to another\n\n387\n00:20:29,900 --> 00:20:34,232\nit doesn't summarize cuz I haven't\ncrossed any major clausal boundaries.\n\n388\n00:20:34,232 --> 00:20:34,910\nAll right.\n\n389\n00:20:34,910 --> 00:20:38,065\nBut, notice what I've done in my diagram.\n\n390\n00:20:38,065 --> 00:20:41,090\nThat individual links\nin between the routers.\n\n391\n00:20:41,090 --> 00:20:43,555\nThose are /30s, but they're in a class A.\n\n392\n00:20:43,555 --> 00:20:45,580\n1.1, which I shouldn't have done that.\n\n393\n00:20:45,580 --> 00:20:46,850\nThat's a public range.\n\n394\n00:20:46,850 --> 00:20:49,610\nBut 1.1 or 3.3 over there.\n\n395\n00:20:49,610 --> 00:20:50,182\nThat's a major boundary.\n\n396\n00:20:50,182 --> 00:20:51,220\nAll right.\n\n397\n00:20:51,220 --> 00:20:57,080\nSo we've jumped from outside of this\nclass C into a different network.\n\n398\n00:20:57,080 --> 00:21:01,240\nAnd when that happens,\nRIP will auto-summarize.\n\n399\n00:21:01,240 --> 00:21:02,010\nOkay.\n\n400\n00:21:02,010 --> 00:21:07,220\nNow where that's a problem is a lot of\ncompanies will take the 10-dot network.\n\n401\n00:21:07,220 --> 00:21:09,160\nAnd they'll take that 10-dot class A, and\n\n402\n00:21:09,160 --> 00:21:11,630\nthey'll divide it up into\na hundred different networks.\n\n403\n00:21:11,630 --> 00:21:14,500\nAnd then automatic\nsummarization won't work.\n\n404\n00:21:14,500 --> 00:21:18,250\nAnd the reason is auto-summarization\nwon't work because you're inside of\n\n405\n00:21:18,250 --> 00:21:20,290\none class A the whole time.\n\n406\n00:21:20,290 --> 00:21:22,070\nYou never cross a boundary.\n\n407\n00:21:22,070 --> 00:21:22,920\nIf I'm on 10.1.0.0.\n\n408\n00:21:22,920 --> 00:21:25,610\nAnd the next router is 10.2.0.0.\n\n409\n00:21:25,610 --> 00:21:29,520\nAnd the next router is 10.3.0.0.\n\n410\n00:21:29,520 --> 00:21:32,870\nThey're all inside of\nthat ten dot class A.\n\n411\n00:21:32,870 --> 00:21:34,700\nAnd there's no point in summarizing.\n\n412\n00:21:34,700 --> 00:21:37,980\nOr at least that's the way that RIP feels\nabout it and so it doesn't summarize.\n\n413\n00:21:37,980 --> 00:21:38,960\nAll right?\n\n414\n00:21:38,960 --> 00:21:41,800\nIf you have a well-designed network,\na network where you planned for it,\n\n415\n00:21:41,800 --> 00:21:45,430\nwhere you planned for and put different\nnetworks in between the routers.\n\n416\n00:21:45,430 --> 00:21:47,180\nThen you will get automatic summarization.\n\n417\n00:21:47,180 --> 00:21:49,980\nIt works great and you won't have\nto summarize anything yourself.\n\n418\n00:21:49,980 --> 00:21:50,760\nIt will just do it.\n\n419\n00:21:52,090 --> 00:21:55,530\nIf your network was not designed with\nauto summarization in mind, though,\n\n420\n00:21:55,530 --> 00:21:59,060\nthe odds are it's gonna fail and\nyou'll have to do manual summarization.\n\n421\n00:21:59,060 --> 00:22:00,850\nYou can go in and do it by hand.\n\n422\n00:22:00,850 --> 00:22:03,880\nNow I'll tell you guys,\npersonally, I always do manual.\n\n423\n00:22:03,880 --> 00:22:06,530\nI don't like relying on\nautomatic summarization and\n\n424\n00:22:06,530 --> 00:22:07,950\nthere's a few reasons for that.\n\n425\n00:22:07,950 --> 00:22:11,004\nMostly just because I'm a little Paranoid?\n\n426\n00:22:11,004 --> 00:22:12,400\n>> Paranoid\n>> [LAUGH]\n\n427\n00:22:12,400 --> 00:22:14,300\n>> Anal retentive, whatever you wanna say.\n\n428\n00:22:14,300 --> 00:22:16,750\nI wanna know that the summaries\nare happening, and,\n\n429\n00:22:16,750 --> 00:22:18,830\nso I like to put them in myself.\n\n430\n00:22:18,830 --> 00:22:21,510\nSo I almost always disable\nauto-summarization.\n\n431\n00:22:21,510 --> 00:22:24,428\nBut RIP has it turned on by default,\nand it will do it.\n\n432\n00:22:24,428 --> 00:22:27,005\nCouple other things about RIP.\n\n433\n00:22:27,005 --> 00:22:28,935\nLet's see, what else did I put on here.\n\n434\n00:22:28,935 --> 00:22:31,285\nWe do need to pay attention to\nthose classical boundaries,\n\n435\n00:22:31,285 --> 00:22:34,005\neven when we're not operating\nclassical mode, right,\n\n436\n00:22:34,005 --> 00:22:36,720\nthat's still how it's building\nthe summarization built around it.\n\n437\n00:22:36,720 --> 00:22:37,460\nAll right.\n\n438\n00:22:37,460 --> 00:22:42,810\nAuto summarization is turned\non by default, so it's on.\n\n439\n00:22:42,810 --> 00:22:44,540\nIf I don't want it, I have to turn it off.\n\n440\n00:22:44,540 --> 00:22:45,590\nAll right.\n\n441\n00:22:45,590 --> 00:22:47,930\nSome of the other protocols support\nauto summarization also, but\n\n442\n00:22:47,930 --> 00:22:49,100\nit might not be on by default.\n\n443\n00:22:49,100 --> 00:22:50,780\nIn this case, it is.\n\n444\n00:22:50,780 --> 00:22:51,610\nAll right.\n\n445\n00:22:51,610 --> 00:22:54,390\nNow, RIP networks are not\nnormally that big.\n\n446\n00:22:54,390 --> 00:22:57,470\nRIP networks,\nyou've got a maximum metric of 15 hops.\n\n447\n00:22:57,470 --> 00:22:59,150\nAt 16, it becomes a discard.\n\n448\n00:22:59,150 --> 00:23:02,630\nSo, you're not really gonna have\na path that's incredibly long.\n\n449\n00:23:02,630 --> 00:23:05,160\nAnd so things like summarization\nisn't really a high\n\n450\n00:23:05,160 --> 00:23:06,850\npriority inside of the RIP world.\n\n451\n00:23:06,850 --> 00:23:08,740\nSo, a lot of people don't\neven bother with it.\n\n452\n00:23:08,740 --> 00:23:12,110\nBut, it can be a handy thing to do.\n\n453\n00:23:12,110 --> 00:23:14,530\nSome of the other things\nto remember with RIP.\n\n454\n00:23:14,530 --> 00:23:20,770\nWhen we start configuring the summary\nroutes and all that stuff.\n\n455\n00:23:20,770 --> 00:23:24,780\nIt's a matter of patience\nsometimes to see it kick in.\n\n456\n00:23:24,780 --> 00:23:28,110\nWhen you put in a summary route,\nthe summary gets advertised.\n\n457\n00:23:28,110 --> 00:23:31,960\nBut all the individual routes,\nthey stop being advertised.\n\n458\n00:23:31,960 --> 00:23:35,200\nBut RIP takes forever to get\nthem out on the routing table.\n\n459\n00:23:35,200 --> 00:23:36,805\nI wanna say it is ten minutes.\n\n460\n00:23:36,805 --> 00:23:40,680\nTen minutes, or 12 minutes by default to\nactually get out of the routing table.\n\n461\n00:23:40,680 --> 00:23:43,890\nSo you might have to be very patient to\nwait to see that your summary route is\n\n462\n00:23:43,890 --> 00:23:44,862\nactually working.\n\n463\n00:23:44,862 --> 00:23:45,900\nAll right.\n\n464\n00:23:45,900 --> 00:23:49,832\nIf you're ever curious about it,\nlet me show you on an actual router here.\n\n465\n00:23:49,832 --> 00:23:53,670\n[COUGH] Well here, I need to get RIP\nconfigured on these things anyway.\n\n466\n00:23:53,670 --> 00:23:55,819\nSo I'm just gonna run through quick and\ndirty here on these routers.\n\n467\n00:23:55,819 --> 00:23:58,717\nThe topology I just showed you,\nwhich was right here,\n\n468\n00:23:58,717 --> 00:24:01,310\nthis is the exact topology\nthat I'm working on.\n\n469\n00:24:01,310 --> 00:24:05,937\nRouter 1, router 2, router 3 and they've\ngot these networks associated with them,\n\n470\n00:24:05,937 --> 00:24:09,230\nright, these 192 networks\nthat are in each.\n\n471\n00:24:09,230 --> 00:24:12,670\nI'm gonna turn on RIP and I'm just gonna\nturn on RIP for all of my interfaces,\n\n472\n00:24:12,670 --> 00:24:16,580\njust fire it up and let it go right\nin between these different routers.\n\n473\n00:24:16,580 --> 00:24:18,690\nSo on each router,\nI'm just gonna say router rip.\n\n474\n00:24:19,810 --> 00:24:25,366\nI'll do version 2, because I wanna make\nsure that I'm not in classful mode.\n\n475\n00:24:25,366 --> 00:24:29,612\nAnd I'll go ahead and\njust do a quick network 0.0.0.0.\n\n476\n00:24:29,612 --> 00:24:31,197\nSo all my networks advertise them.\n\n477\n00:24:31,197 --> 00:24:32,320\nGet them thrown in there.\n\n478\n00:24:32,320 --> 00:24:33,090\nLet's do it.\n\n479\n00:24:33,090 --> 00:24:36,680\nAnd I'm gonna do those same exact\ncommands on my other two routers\n\n480\n00:24:37,700 --> 00:24:38,310\nto get them in there.\n\n481\n00:24:38,310 --> 00:24:40,900\nNow, I do have to be careful.\n\n482\n00:24:40,900 --> 00:24:44,320\nIf I forget to do that version 2, right?\n\n483\n00:24:44,320 --> 00:24:48,698\nAnd I leave one router in version 1,\nthen it's operating in a classful mode.\n\n484\n00:24:48,698 --> 00:24:51,470\nIt's not gonna advertise\nsubnet masks any more, and\n\n485\n00:24:51,470 --> 00:24:54,590\nthat's when you can really start to run\ninto problems with overlapping networks.\n\n486\n00:24:55,920 --> 00:25:01,300\nSo let me just get this done and\nall right.\n\n487\n00:25:01,300 --> 00:25:02,950\nSo there, real basic RIP configuration.\n\n488\n00:25:03,990 --> 00:25:09,250\nNow if I do a show ip protocols,\nit's gonna\n\n489\n00:25:09,250 --> 00:25:13,360\nshow me information about RIP and what\nI'm looking for is this line right here.\n\n490\n00:25:13,360 --> 00:25:20,830\nInvalid after 180 seconds, hold down\n180 seconds, flushed after 240 seconds.\n\n491\n00:25:20,830 --> 00:25:22,490\nRemember what all that means, right.\n\n492\n00:25:22,490 --> 00:25:25,420\nLet's look back to our CCNA days.\n\n493\n00:25:25,420 --> 00:25:26,520\nInvalid after 180 seconds.\n\n494\n00:25:27,540 --> 00:25:30,800\nWe send RIP advertisments\nevery 60 seconds by default.\n\n495\n00:25:30,800 --> 00:25:33,360\nIf three of those updates get missed.\n\n496\n00:25:33,360 --> 00:25:35,560\nIf I don't get an update for\nthree updates, right?\n\n497\n00:25:35,560 --> 00:25:36,460\n3 times 60 is 180.\n\n498\n00:25:36,460 --> 00:25:39,810\nThen I'll assume the route has a problem,\nokay?\n\n499\n00:25:39,810 --> 00:25:41,530\nBut I don't throw it away.\n\n500\n00:25:41,530 --> 00:25:43,020\nI hold it, right?\n\n501\n00:25:43,020 --> 00:25:44,640\nIt goes into a hold down timer.\n\n502\n00:25:44,640 --> 00:25:47,870\nI hold it for\nanother three minutes, right?\n\n503\n00:25:47,870 --> 00:25:51,910\nAnd, only once that time is done,\ndo I actually say, okay, the route is bad.\n\n504\n00:25:51,910 --> 00:25:54,150\nLet's go ahead and\nget it out of the routing table.\n\n505\n00:25:54,150 --> 00:25:56,576\nBut we don't take it right out\nof the routing table, do we?\n\n506\n00:25:56,576 --> 00:26:01,690\nWe wait 240 more seconds,\nthat'll be four minutes.\n\n507\n00:26:01,690 --> 00:26:04,270\nBefore we actually flush it\nout of the routing table.\n\n508\n00:26:04,270 --> 00:26:07,480\nAnd if we add all that together,\nthat's ten minutes.\n\n509\n00:26:07,480 --> 00:26:09,540\nRight, ten minutes before\nthat route comes out.\n\n510\n00:26:09,540 --> 00:26:11,900\nSo when you put a summary in with RIP,\n\n511\n00:26:11,900 --> 00:26:16,750\na little timer is basically\ngoing in the background that in\n\n512\n00:26:16,750 --> 00:26:20,430\nten minutes those little, those smaller\nroutes that are being summarized.\n\n513\n00:26:20,430 --> 00:26:22,002\nThose will come out, and\nyou'll just have a summary.\n\n514\n00:26:23,717 --> 00:26:27,410\nAll right, now I just turned this on,\ngot it in place.\n\n515\n00:26:27,410 --> 00:26:29,780\nI haven't done any special options or\nconfigurations or\n\n516\n00:26:29,780 --> 00:26:33,530\nanything like that, but\nauto-summary should already be kicking in.\n\n517\n00:26:33,530 --> 00:26:37,150\nIt should be summarizing these networks,\nlet's just see.\n\n518\n00:26:37,150 --> 00:26:43,060\nIf I take a look at router 1, and\nI look at its interfaces, all right?\n\n519\n00:26:43,060 --> 00:26:50,524\nRight here I've got, 192.168.1.1,\n1.65, 1.129 and 1.193.\n\n520\n00:26:50,524 --> 00:26:51,926\nI've got four networks.\n\n521\n00:26:51,926 --> 00:26:52,503\nAll right?\n\n522\n00:26:52,503 --> 00:26:57,159\nThey're all /26s and those /26s are all\n\n523\n00:26:57,159 --> 00:27:01,463\nwithin 192.168.1.0/24.\n\n524\n00:27:01,463 --> 00:27:04,390\nThat's the major classful boundary for\nthose guys.\n\n525\n00:27:04,390 --> 00:27:07,200\nThey're a perfect\ncandidate to be summarized.\n\n526\n00:27:07,200 --> 00:27:09,790\nInstead of having four routes,\nwe could wrap them up into one.\n\n527\n00:27:11,630 --> 00:27:13,375\nIf I jump over to router 2,\n\n528\n00:27:13,375 --> 00:27:16,910\nrouter 2 should be learning\nthose routes from router 1.\n\n529\n00:27:16,910 --> 00:27:21,100\nRight, if I go back to my diagram, router\n1 is advertising these out to router 2 and\n\n530\n00:27:21,100 --> 00:27:24,004\nnormally I would learn all\nfour of the individual routes.\n\n531\n00:27:24,004 --> 00:27:26,755\nBut I should be learning the summary here,\nright.\n\n532\n00:27:26,755 --> 00:27:28,700\nThat's what should be happening.\n\n533\n00:27:28,700 --> 00:27:35,100\nAnd if I look on router two and\nI do a show ip route and I look.\n\n534\n00:27:35,100 --> 00:27:40,065\nI'm looking for the 192.168.1.0\nnetwork and there it is, right.\n\n535\n00:27:40,065 --> 00:27:45,410\nI don't see any of the /26s\nI just see the /24.\n\n536\n00:27:45,410 --> 00:27:52,620\nAll right, and that's because router 1\nautomatically summarized them for me.\n\n537\n00:27:52,620 --> 00:27:54,981\nAnd haven't even talked about router 3.\n\n538\n00:27:54,981 --> 00:27:59,638\nRouter 3 has these 192.168.3 networks\nover here that are all /26s and\n\n539\n00:27:59,638 --> 00:28:03,290\nI can see right here where\nthey've been summarized also.\n\n540\n00:28:03,290 --> 00:28:06,914\nThey've all become that 1/24.\n\n541\n00:28:06,914 --> 00:28:09,790\nAnd I've got full reachability,\nor at least I should, right?\n\n542\n00:28:09,790 --> 00:28:15,584\nIf I try and ping some of these, like 1.1,\n\n543\n00:28:15,584 --> 00:28:21,236\nand let's see 1.65, and 1.129.\n\n544\n00:28:21,236 --> 00:28:23,601\nAnd 1.1-\n>> 93?\n\n545\n00:28:23,601 --> 00:28:26,223\n>> 93.\nThank you Ronnie, was about to do 165.\n\n546\n00:28:26,223 --> 00:28:27,300\nSo there we go.\n\n547\n00:28:27,300 --> 00:28:31,010\nSo I've got full reachability, I don't\nhave individual routes for these guys.\n\n548\n00:28:31,010 --> 00:28:34,625\nI have that one summary route, and so\nmy routing table is smaller, as a result.\n\n549\n00:28:36,145 --> 00:28:40,385\nIf I turn off the auto-summary,\nthe individual routes should reappear,\n\n550\n00:28:40,385 --> 00:28:41,065\nall right.\n\n551\n00:28:42,135 --> 00:28:45,308\nAnd if you're like me, if you're\nparanoid [LAUGH] and you want to do\n\n552\n00:28:45,308 --> 00:28:48,665\nthe summarizations yourself,\nyou'll turn off the auto-summary.\n\n553\n00:28:48,665 --> 00:28:50,615\nThat's gonna make all these routes appear.\n\n554\n00:28:50,615 --> 00:28:54,542\nSo let me do that, I'm gonna jump\nto each of these routers and\n\n555\n00:28:54,542 --> 00:28:56,393\nI'm just gonna do a no auto.\n\n556\n00:28:56,393 --> 00:28:57,486\nActually, before I do that,\n\n557\n00:28:57,486 --> 00:29:00,420\nlet me do something you can't\ndo in a production environment.\n\n558\n00:29:00,420 --> 00:29:04,490\nI mentioned one of our problems is, what\nif we have overlapping networks, right?\n\n559\n00:29:04,490 --> 00:29:07,300\nWhat if there's a network and\nthere's an overlap?\n\n560\n00:29:07,300 --> 00:29:09,830\nI can end up in a bit of a problem, right?\n\n561\n00:29:09,830 --> 00:29:13,710\nSo, for example, here on router 1,\n\n562\n00:29:13,710 --> 00:29:19,750\nIf I do a show ip route, I've got those\n\n563\n00:29:19,750 --> 00:29:24,270\nfour networks that are directly connected,\nthese guys right here, these 192.168.1s.\n\n564\n00:29:24,270 --> 00:29:29,040\nLet's say I didn't have all four of them,\nlet's say that I only had two of them.\n\n565\n00:29:29,040 --> 00:29:33,744\nSo if I take two of these away, so\nI'll just shut that one down, and\n\n566\n00:29:33,744 --> 00:29:34,838\nthat one down.\n\n567\n00:29:38,841 --> 00:29:44,860\nAll right, so now I've got 192.168.1.0/26,\n\n568\n00:29:44,860 --> 00:29:49,751\nand I've got 192.168.1.64/26.\n\n569\n00:29:49,751 --> 00:29:53,832\nNow I know, in my head,\nthat I could summarize that to\n\n570\n00:29:53,832 --> 00:29:59,300\n192.168.1.0/25, and\nit would get just both of those.\n\n571\n00:29:59,300 --> 00:30:01,660\nBut that's not a major boundary is it?\n\n572\n00:30:01,660 --> 00:30:06,290\nSo RIP is gonna look at that, and\nsay, hey, I can summarize those two.\n\n573\n00:30:06,290 --> 00:30:09,867\nBut it's gonna summarize them to the /24.\n\n574\n00:30:09,867 --> 00:30:15,220\nIf I do a show ip route,\nthere's 192.168.1.0 still sitting there.\n\n575\n00:30:15,220 --> 00:30:22,775\nI see it got updated 13 seconds ago, so\nthis is a new one but it is still a /24.\n\n576\n00:30:22,775 --> 00:30:26,945\nRIP summarizes on the classful boundaries.\n\n577\n00:30:26,945 --> 00:30:31,005\nAnd that's a problem because\nif I go to router 3 and\n\n578\n00:30:31,005 --> 00:30:36,115\nlet's say on router 3,\nwhat interfaces do I have on this thing?\n\n579\n00:30:36,115 --> 00:30:37,343\nI'll introduce some new, whoops.\n\n580\n00:30:37,343 --> 00:30:39,484\nSome new interfaces.\n\n581\n00:30:39,484 --> 00:30:46,433\nSo I'll create like e0/0.5.\n\n582\n00:30:46,433 --> 00:30:51,756\nAnd I'll give this one 192.168.1.\n\n583\n00:30:51,756 --> 00:30:53,360\nWhat was next, Ronnie?\n\n584\n00:30:53,360 --> 00:30:55,285\nI used 64, so this would be 129.\n\n585\n00:30:55,285 --> 00:31:00,570\n[LAUGH] This is where I can make\na mistake if I'm not careful.\n\n586\n00:31:00,570 --> 00:31:01,830\nThere we go.\n\n587\n00:31:01,830 --> 00:31:08,770\nAnd, then let me get\ninto the next interface.\n\n588\n00:31:08,770 --> 00:31:11,990\nSo I'm just whipping up some extra\nnetworks over here on this other side.\n\n589\n00:31:11,990 --> 00:31:15,400\nThis will be 193.\n\n590\n00:31:15,400 --> 00:31:19,230\nThese are the two networks that\nI shut down over on router 1.\n\n591\n00:31:19,230 --> 00:31:19,740\nRight?\nSo\n\n592\n00:31:19,740 --> 00:31:21,630\nthese two networks already\nexisted on router 1.\n\n593\n00:31:21,630 --> 00:31:25,328\nI pulled them, and\nI moved them over to router 3, okay?\n\n594\n00:31:25,328 --> 00:31:29,980\nSo router 3 is now gonna have a kind\nof interesting routing table.\n\n595\n00:31:29,980 --> 00:31:37,580\nIf I do a show ip route on router 3,\nit's got 192.168.1.0/24, right.\n\n596\n00:31:37,580 --> 00:31:43,185\nAnd it sees a RIP route for\nthe whole /24 going over to router 1,\n\n597\n00:31:43,185 --> 00:31:45,999\nor really router 2 in this case.\n\n598\n00:31:45,999 --> 00:31:47,147\nIt's gotta go to the middle router first\n\n599\n00:31:47,147 --> 00:31:49,090\nbefore it gets all the way\nto the other side.\n\n600\n00:31:49,090 --> 00:31:52,570\nBut then it's got the individual routes\nfor which directly connected on it.\n\n601\n00:31:52,570 --> 00:31:54,220\nSo, it has reachability.\n\n602\n00:31:54,220 --> 00:31:57,207\nIt's happy.\nBecause it has the more specific routes,\n\n603\n00:31:57,207 --> 00:32:00,480\nfor routes that are right on it,\nthose /30s.\n\n604\n00:32:00,480 --> 00:32:03,301\nAll right, oh, I did them /30s?\n\n605\n00:32:03,301 --> 00:32:04,183\n>> Mm-hm.\n>> Shoot.\n\n606\n00:32:04,183 --> 00:32:06,710\nI didn't want /30s, I wanted /26s.\n\n607\n00:32:06,710 --> 00:32:07,976\nLet me fix that.\n\n608\n00:32:07,976 --> 00:32:11,960\nSo now I gotta get my right,\nI typed the wrong subnet mask.\n\n609\n00:32:11,960 --> 00:32:14,800\nSo, oh, I guess I should've\ndone a 192 subnet mask,\n\n610\n00:32:14,800 --> 00:32:18,545\nis what I should've done, not what I did.\n\n611\n00:32:18,545 --> 00:32:19,760\nSee this is why we double check our work.\n\n612\n00:32:20,850 --> 00:32:23,192\nSo this one should've been 192.\n\n613\n00:32:24,780 --> 00:32:26,690\nI wanna make sure we're\ndoing apples to apples.\n\n614\n00:32:26,690 --> 00:32:30,734\nI want the exact same network\nas what was on the other side.\n\n615\n00:32:30,734 --> 00:32:34,472\nSo we'll put those back, there we go.\n\n616\n00:32:34,472 --> 00:32:35,870\nAnd we'll verify our routing table.\n\n617\n00:32:37,770 --> 00:32:39,129\nAll right, now I've got those /26s.\n\n618\n00:32:39,129 --> 00:32:41,200\nThose are the /26s that I\npulled from the other side.\n\n619\n00:32:42,410 --> 00:32:45,691\nNow, I've got reachability here\non Router 3 because it's fine.\n\n620\n00:32:45,691 --> 00:32:48,638\nYeah, there's this /24 that\nincludes my networks, but\n\n621\n00:32:48,638 --> 00:32:52,780\nsince I have directly connected ones,\nI don't care about that.\n\n622\n00:32:52,780 --> 00:32:56,590\nAnd if I jump all the way over\nto Router 1, what does it see?\n\n623\n00:32:56,590 --> 00:33:01,061\nWell, it's got 192.168.1.0/24 and\n\n624\n00:33:01,061 --> 00:33:04,543\nits got its directly connected /26s.\n\n625\n00:33:04,543 --> 00:33:12,158\nBut notice it doesn't have a summary for\n192.168.1.0/24 that points the other way.\n\n626\n00:33:12,158 --> 00:33:13,460\nWhy not?\n\n627\n00:33:13,460 --> 00:33:18,860\nWell, what's happening is Router 1,\nso going back to my diagram,\n\n628\n00:33:18,860 --> 00:33:24,580\nRouter 1 is generating a summary for\n192.168.0.0/24.\n\n629\n00:33:24,580 --> 00:33:29,470\nRouter 3 is also generating that summary.\n\n630\n00:33:29,470 --> 00:33:35,450\nAnd that means that Router 2 is learning\nthe same summary from both sides.\n\n631\n00:33:35,450 --> 00:33:38,511\nAnd it doesn't know the networks\nthat are inside of the summary.\n\n632\n00:33:38,511 --> 00:33:42,088\nSo it doesn't know that Router\n1 has some networks and\n\n633\n00:33:42,088 --> 00:33:44,360\nRouter 3 has the others, right.\n\n634\n00:33:44,360 --> 00:33:48,100\nLet me update this diagram\nto reflect what we have now.\n\n635\n00:33:48,100 --> 00:33:53,560\nSo, what I did, is I pulled these\ntwo networks off of Router 1,\n\n636\n00:33:53,560 --> 00:33:57,010\nand I put them on Router 3.\n\n637\n00:33:57,010 --> 00:33:59,460\nSo this is what I’ve got right here.\n\n638\n00:33:59,460 --> 00:34:01,476\nLet me just move this\naround on the screen so\n\n639\n00:34:01,476 --> 00:34:04,447\nwe get a little bit better\nvisibility of what’s going on here.\n\n640\n00:34:04,447 --> 00:34:07,874\nAll right, so 192.168.1.0,\n\n641\n00:34:07,874 --> 00:34:12,261\n192.168.1.64, those are on Router 1.\n\n642\n00:34:12,261 --> 00:34:17,182\n192.168.1.128 and 192,\nthose are on Router 3.\n\n643\n00:34:17,182 --> 00:34:22,605\nThey're both being summarized to their\nclassful boundary, 192.168.0.0/24.\n\n644\n00:34:22,605 --> 00:34:25,159\nRouter 2 is learning both summaries.\n\n645\n00:34:25,159 --> 00:34:29,300\nWell, when I learn two summaries like\nthat, what goes in the routing table?\n\n646\n00:34:30,380 --> 00:34:31,880\nI'm usually gonna pick one.\n\n647\n00:34:31,880 --> 00:34:35,220\nCuz sometimes you can have a tie and\nso you go ahead and do load balancing.\n\n648\n00:34:35,220 --> 00:34:40,730\nWell, then we have the whole problem of\nthings like split-horizon kicking in.\n\n649\n00:34:40,730 --> 00:34:43,770\nAm I gonna advertise a summary route\nat an interface that I learned the same\n\n650\n00:34:43,770 --> 00:34:44,720\nsummary route on?\n\n651\n00:34:44,720 --> 00:34:48,820\nThings like that really start to\nconflict and I can end up with problems.\n\n652\n00:34:48,820 --> 00:34:51,260\nProblems like Router 1 not\ngetting the summary route.\n\n653\n00:34:51,260 --> 00:34:54,414\nIn fact, let's look at Router 2's routing\ntable and see what it ended up with.\n\n654\n00:34:55,819 --> 00:34:57,050\n>> You're on Router 1.\n\n655\n00:34:57,050 --> 00:34:58,240\n>> Whoop, wrong router.\n\n656\n00:34:58,240 --> 00:34:59,420\nRouter 2, that's the one in the middle.\n\n657\n00:34:59,420 --> 00:35:00,340\nThat's the one we care about.\n\n658\n00:35:01,720 --> 00:35:02,870\nThere we go.\n\n659\n00:35:02,870 --> 00:35:07,910\nAnd it did, in fact, learn both routes,\nand it's load balancing on them.\n\n660\n00:35:07,910 --> 00:35:10,510\nWell, load balancing is\nnormally a good thing.\n\n661\n00:35:10,510 --> 00:35:14,975\nBut in this scenario it means 50% of the\ntime I'll probably get to the network I\n\n662\n00:35:14,975 --> 00:35:19,062\nwant, and 50% of the time I'll get\nsent to the wrong network, right?\n\n663\n00:35:19,062 --> 00:35:20,804\nI'll get sent to the wrong network and\nmy traffic won't get through.\n\n664\n00:35:20,804 --> 00:35:23,224\nI'll get intermittent\nnetwork connectivity, and\n\n665\n00:35:23,224 --> 00:35:26,720\nit's a frustrating thing to have\nto troubleshoot and deal with.\n\n666\n00:35:26,720 --> 00:35:31,124\nThis is what happens when our\naddress base is not contiguous\n\n667\n00:35:31,124 --> 00:35:34,130\nbecause of the way that RIP summarizes.\n\n668\n00:35:34,130 --> 00:35:37,743\nSo if your network is not\nproperly designed to handle this,\n\n669\n00:35:37,743 --> 00:35:39,632\nyou bump into these problems.\n\n670\n00:35:39,632 --> 00:35:43,010\nAnd the solution is to\ndo manual summarization.\n\n671\n00:35:43,010 --> 00:35:44,870\nWhen you manually summarize,\n\n672\n00:35:44,870 --> 00:35:47,530\nyou can specify the subnet\nmask that you summarized to.\n\n673\n00:35:47,530 --> 00:35:50,550\nAnd now you can make it much more accurate\nand you can solve these problems.\n\n674\n00:35:50,550 --> 00:35:53,140\nYou can not advertize\nnetworks you don't have.\n\n675\n00:35:53,140 --> 00:35:55,870\nBut as long as it's doing\nthis I'm gonna have failures,\n\n676\n00:35:55,870 --> 00:35:58,530\nI'm gonna have problems on my network.\n\n677\n00:36:00,440 --> 00:36:03,245\nAll right, and it's been a little while,\nlet's take a look at this guy's routing\n\n678\n00:36:03,245 --> 00:36:05,400\ntable, see if it every\npicked up that summary.\n\n679\n00:36:05,400 --> 00:36:09,400\nYeah, never did pick up that summary, it's\njust not gonna have that connectivity.\n\n680\n00:36:09,400 --> 00:36:11,988\nAnd on Router 2,\nwe could probably test this out with\n\n681\n00:36:11,988 --> 00:36:15,051\nsome pings if we started pinging\nsome of those other networks.\n\n682\n00:36:17,014 --> 00:36:19,466\nAll right, so I got through to that guy.\n\n683\n00:36:19,466 --> 00:36:20,091\nWho'd be next?\n\n684\n00:36:20,091 --> 00:36:21,590\n65.\n\n685\n00:36:21,590 --> 00:36:27,206\nIf I do 129 and oh,\nI probably have cached values for\n\n686\n00:36:27,206 --> 00:36:31,380\nthis since I did the pings earlier.\n\n687\n00:36:31,380 --> 00:36:35,130\nBut what'll happen is over time we'll\nstart to see half the traffic getting\n\n688\n00:36:35,130 --> 00:36:38,620\nrouted to the wrong destination and\nnot being able to connect through.\n\n689\n00:36:38,620 --> 00:36:40,955\nAt a minimum,\nI've got a problem with Router 1,\n\n690\n00:36:40,955 --> 00:36:44,696\nwhere it's not gonna be able to reach the\nnetworks all the way on the other side.\n\n691\n00:36:44,696 --> 00:36:48,660\nIf I try and ping the 129, or the 193,\nthose definitely aren't gonna get through,\n\n692\n00:36:48,660 --> 00:36:50,240\nso I've got a problem, all right?\n\n693\n00:36:51,470 --> 00:36:52,970\nBe aware of that.\n\n694\n00:36:52,970 --> 00:36:54,460\nWhen you do summaries,\n\n695\n00:36:54,460 --> 00:36:58,540\nespecially auto summaries,\nyou can include routes you don't have.\n\n696\n00:36:58,540 --> 00:37:02,407\nAnd anytime you do that,\nif those routes exist somewhere else,\n\n697\n00:37:02,407 --> 00:37:05,785\nyou're breaking your network,\nthat's how it works.\n\n698\n00:37:05,785 --> 00:37:09,320\nSo the fix here is gonna\nbe manual summarization.\n\n699\n00:37:09,320 --> 00:37:11,020\nAnd if I want to do manual summarization,\n\n700\n00:37:11,020 --> 00:37:13,500\nstep one I gotta disable\nauto summarization.\n\n701\n00:37:14,570 --> 00:37:20,180\nSo on each router, I need to go through\nand get into my RIP process and\n\n702\n00:37:20,180 --> 00:37:24,590\ndo a little no auto-summary.\n\n703\n00:37:24,590 --> 00:37:26,600\nAnd Ronnie,\nyou said it best before the show.\n\n704\n00:37:26,600 --> 00:37:31,300\nYou and I both, this is almost like\na default command for us, right?\n\n705\n00:37:31,300 --> 00:37:31,800\nWhoops.\n\n706\n00:37:33,070 --> 00:37:36,780\nYeah, when I turn on RIP, one of\nthe first things I type is version 2.\n\n707\n00:37:36,780 --> 00:37:39,530\nAnd then the second thing I type,\nno auto-summary.\n\n708\n00:37:39,530 --> 00:37:41,080\nIt's just like in my habit.\n\n709\n00:37:41,080 --> 00:37:44,682\nThose are things that I always do\nbecause I do like to do it manual.\n\n710\n00:37:47,376 --> 00:37:48,780\nAll right.\n\n711\n00:37:48,780 --> 00:37:53,960\nNow when I disable those summary routes,\nthey may come out quickly,\n\n712\n00:37:53,960 --> 00:37:56,060\ndepending on where we're\nat in our RIP timers.\n\n713\n00:37:56,060 --> 00:37:57,730\nThey may take a long time to come out.\n\n714\n00:37:57,730 --> 00:38:03,090\nSo you may have to be patient to\nsee those summaries disappear.\n\n715\n00:38:03,090 --> 00:38:07,920\nSo I still see both of them right here,\nbut they're not getting updates anymore.\n\n716\n00:38:07,920 --> 00:38:10,370\nNormally I would get\nupdates every 30 seconds.\n\n717\n00:38:10,370 --> 00:38:12,730\nBut notice here my update timers on these.\n\n718\n00:38:12,730 --> 00:38:16,980\nThis one's already at 37 seconds,\nthis one's at 1 minute and 1 second.\n\n719\n00:38:16,980 --> 00:38:19,900\nThey're starting to go up,\nthey're not getting updates anymore.\n\n720\n00:38:19,900 --> 00:38:22,682\nSo now what I'd really have to do\nis wait for the timers to expire,\n\n721\n00:38:22,682 --> 00:38:25,274\nI'd have to wait ten minutes for\nthese things to disappear.\n\n722\n00:38:25,274 --> 00:38:28,186\nAnd I'm pretty impatient when\nit comes to stuff like that, so\n\n723\n00:38:28,186 --> 00:38:30,780\nI'm probably not gonna wait ten minutes.\n\n724\n00:38:30,780 --> 00:38:34,760\nInstead what I'm gonna do is I'm\ngonna purge my routing table.\n\n725\n00:38:34,760 --> 00:38:38,450\nRIP doesn't give us a great way to purge\nthe RIP database because there isn't a RIP\n\n726\n00:38:38,450 --> 00:38:38,996\ndatabase.\n\n727\n00:38:38,996 --> 00:38:41,515\nIt throws stuff on the routing table,\nit throws everything else in the garbage.\n\n728\n00:38:41,515 --> 00:38:47,890\nSo I'm just gonna do a clear ip\nroute * to purge my routing table.\n\n729\n00:38:47,890 --> 00:38:50,760\nIn a production environment\nthis will create an outage.\n\n730\n00:38:50,760 --> 00:38:52,530\nA brief outage.\n\n731\n00:38:52,530 --> 00:38:56,290\nIt flushes my routing table, and\nthen my router relearns the routes.\n\n732\n00:38:56,290 --> 00:38:58,037\nAnd that usually happens pretty quickly,\nbut\n\n733\n00:38:58,037 --> 00:39:00,940\nit's still an outage, so\ndon't do that on a production network.\n\n734\n00:39:00,940 --> 00:39:02,750\nIn a production network,\nyou wait the ten minutes.\n\n735\n00:39:02,750 --> 00:39:04,050\nThat's what you do, that's your solution.\n\n736\n00:39:05,420 --> 00:39:08,820\nAll right, so I'm just going to flush\nthe routing table on each router so\n\n737\n00:39:08,820 --> 00:39:10,672\nthat I don't have to wait ten minutes.\n\n738\n00:39:12,691 --> 00:39:14,948\nAll right, now, on Router 2,\n\n739\n00:39:14,948 --> 00:39:20,440\nif I take a look at its routing table\nall the summary routes are gone.\n\n740\n00:39:20,440 --> 00:39:24,680\nAnd now I've got all those individual\nroutes are making it back in.\n\n741\n00:39:24,680 --> 00:39:27,525\nSo I can see them right there,\nthat's what I expected.\n\n742\n00:39:29,752 --> 00:39:34,432\nAll right, so\nRouter 3 has these 192.168.3 networks.\n\n743\n00:39:34,432 --> 00:39:38,893\nAnd they're being advertised to Router 2,\nand Router 1 should be learning them also,\n\n744\n00:39:38,893 --> 00:39:40,740\nif I take a look at its routing table.\n\n745\n00:39:42,580 --> 00:39:45,570\nSo there's those 192.168.3 networks.\n\n746\n00:39:45,570 --> 00:39:46,800\nLet's summarize those.\n\n747\n00:39:46,800 --> 00:39:49,740\nSo I wanna do a manual summarization.\n\n748\n00:39:49,740 --> 00:39:53,060\nWell, you have to pick where in your\nnetwork you want to summarize it.\n\n749\n00:39:53,060 --> 00:39:54,947\nIf I want to summarize those networks,\n\n750\n00:39:54,947 --> 00:39:58,502\nthe logical place is to summarize them\nway back here in Router 3, right?\n\n751\n00:39:58,502 --> 00:40:00,441\nI can summarize them right here.\n\n752\n00:40:00,441 --> 00:40:03,726\nAnd then router two and\nrouter one won't see that.\n\n753\n00:40:03,726 --> 00:40:05,252\nThat will be the logical place but\n\n754\n00:40:05,252 --> 00:40:08,805\nthere's nothing stopping me from doing\nthe summary right here on Router 2.\n\n755\n00:40:09,910 --> 00:40:12,790\nMaybe I want router two to have\nall the individual routes and\n\n756\n00:40:12,790 --> 00:40:15,220\nI just want router one to not have them.\n\n757\n00:40:15,220 --> 00:40:17,920\nSo I can do the summary\nreally wherever you want.\n\n758\n00:40:17,920 --> 00:40:21,940\nRIP lets you do manual summarization\nat any point in the network.\n\n759\n00:40:21,940 --> 00:40:22,950\nYou've got that flexibility.\n\n760\n00:40:24,570 --> 00:40:25,505\nI'll go ahead and do it on Router 3.\n\n761\n00:40:28,130 --> 00:40:29,460\nAll right.\nThe syntax of the command is\n\n762\n00:40:29,460 --> 00:40:30,840\npretty straightforward.\n\n763\n00:40:30,840 --> 00:40:33,830\nOn the router,\nyou're going to get into the interface.\n\n764\n00:40:33,830 --> 00:40:35,920\nNow that's something that's\na little bit strange.\n\n765\n00:40:35,920 --> 00:40:38,470\nWhen, when we talk about commands like\nthese, you think about it in terms of\n\n766\n00:40:38,470 --> 00:40:42,990\nthe routing protocol, but we actually\nneed to summarize it from the interface.\n\n767\n00:40:42,990 --> 00:40:46,920\nSo looking at my diagram, Router 3.\n\n768\n00:40:46,920 --> 00:40:49,430\nI need to summarize it on E0/1.\n\n769\n00:40:49,430 --> 00:40:53,700\nWhen I advertise out E0/1 I\nneed that to be summarized.\n\n770\n00:40:54,760 --> 00:40:58,398\nSo I'm going to get\ninto interface E0/1 and\n\n771\n00:40:58,398 --> 00:41:03,410\nlet me just make sure that\nthat is the right interface.\n\n772\n00:41:03,410 --> 00:41:05,990\nYeah, that's my 3.3.32 interface.\n\n773\n00:41:05,990 --> 00:41:08,620\nAnd on the interface I'll\nput my summary statement in.\n\n774\n00:41:08,620 --> 00:41:14,129\nAnd the summary statement works like this,\nyou say IP summary-address and\n\n775\n00:41:14,129 --> 00:41:16,450\nthen you tell it what\nprotocol you're using.\n\n776\n00:41:16,450 --> 00:41:19,720\nIt's actually the same command for\nEIGRP we'll see in the next segment, but\n\n777\n00:41:19,720 --> 00:41:22,650\nI'll say summary-address RIP\n\n778\n00:41:24,330 --> 00:41:29,800\nfollowed by the network and\nsubnet that I want to advertise.\n\n779\n00:41:29,800 --> 00:41:32,930\nThis doesn't have to match the subnet\non the interface or anything like that.\n\n780\n00:41:32,930 --> 00:41:36,310\nThis is what I want to advertise.\n\n781\n00:41:36,310 --> 00:41:42,750\nNow, those 192.168.3 networks can all\nnice and easily wrap up into 1/ 24.\n\n782\n00:41:42,750 --> 00:41:49,630\nSo I can say,\n192.168.3.0 With class C subnet\n\n783\n00:41:49,630 --> 00:41:54,640\nmask just like that, that’s the summary\nroute that I want to advertise out.\n\n784\n00:41:54,640 --> 00:41:57,780\nSo on E0/1, instead of advertising\nthose individual routes,\n\n785\n00:41:57,780 --> 00:42:02,080\nI’ll wrap them all up into one big\nroute and send them out that way.\n\n786\n00:42:02,080 --> 00:42:06,460\nI’ll just hit enter, and\nnow that summary route’s being advertised.\n\n787\n00:42:06,460 --> 00:42:09,280\nNow the summary route will\nbe advertised immediately.\n\n788\n00:42:09,280 --> 00:42:13,200\nSo if I jump over to router two\nin the middle of my network, and\n\n789\n00:42:13,200 --> 00:42:18,830\ndo a show IP route, I should already\nsee that summary route in there.\n\n790\n00:42:18,830 --> 00:42:20,040\nThere it is, 192.168.3.0/24.\n\n791\n00:42:20,040 --> 00:42:23,260\nBut notice my little routes.\n\n792\n00:42:24,590 --> 00:42:26,760\nMy little routes,\nthe /26's their still there.\n\n793\n00:42:28,200 --> 00:42:31,250\nThose are now going into\nthat ten minute timer.\n\n794\n00:42:31,250 --> 00:42:35,380\nAnd you can kind of watch it happen,\nif you keep doing a show IP route, let me\n\n795\n00:42:35,380 --> 00:42:42,630\njust filter down to rip, notice that\nthis timer isn't going over 30 seconds.\n\n796\n00:42:42,630 --> 00:42:45,140\nBecause I'm getting a new\nupdate every thirty seconds.\n\n797\n00:42:45,140 --> 00:42:48,130\nBut these guys are already\nat 42 seconds and\n\n798\n00:42:48,130 --> 00:42:50,560\nthey're going to keep going up and\nup and up.\n\n799\n00:42:50,560 --> 00:42:54,280\nAs they pass each threshold and eventually\nget pulled out of the routing table.\n\n800\n00:42:54,280 --> 00:42:56,742\nAnd the summary will be all that's left.\n\n801\n00:42:56,742 --> 00:43:00,260\nAll right, and I can force that\nalong by flushing my routing table.\n\n802\n00:43:01,900 --> 00:43:02,750\nWhich I'll go ahead and do.\n\n803\n00:43:04,850 --> 00:43:07,250\nAnd then it'll take up to 30 seconds for\nme to relearn that.\n\n804\n00:43:07,250 --> 00:43:10,670\nThat's the outage that I'm creating\nby flushing my routing table.\n\n805\n00:43:10,670 --> 00:43:12,660\nSo see,\nI haven't learned any RIP routes yet?\n\n806\n00:43:12,660 --> 00:43:13,780\nBut within the next 30 seconds,\n\n807\n00:43:13,780 --> 00:43:18,980\nthe other routers will advertise to me and\nwe'll get it anytime now.\n\n808\n00:43:18,980 --> 00:43:21,032\nThere it is, actually,\nthere's my summary right there.\n\n809\n00:43:21,032 --> 00:43:26,480\nAll right, so\nI got that information, it's in.\n\n810\n00:43:26,480 --> 00:43:27,580\nI'm getting my summary.\n\n811\n00:43:27,580 --> 00:43:28,130\nThat worked great.\n\n812\n00:43:29,300 --> 00:43:30,800\nWhat about those other networks.\n\n813\n00:43:30,800 --> 00:43:32,010\nThe loop that I create.\n\n814\n00:43:32,010 --> 00:43:33,700\nOr not loop, but the bad routes.\n\n815\n00:43:33,700 --> 00:43:34,230\nRight?\n\n816\n00:43:34,230 --> 00:43:36,680\nRemember how I divided this one up.\n\n817\n00:43:36,680 --> 00:43:41,180\nSo, I've got 192.168.1.0 and\n.64 over there on the left on router one.\n\n818\n00:43:41,180 --> 00:43:46,670\nAnd 192.168.1.128 and\n192 way over here on router three.\n\n819\n00:43:46,670 --> 00:43:51,000\nWell I can summarize those too, but\ninstead of summarizing to a class full\n\n820\n00:43:51,000 --> 00:43:54,810\nboundary I can summarize them\nto a VSLM range if I want.\n\n821\n00:43:54,810 --> 00:43:57,725\nLooking at router two's routing table.\n\n822\n00:43:57,725 --> 00:43:59,891\nI'm seeing 192.168.1.1.28 and\n\n823\n00:43:59,891 --> 00:44:04,790\n192.168.1.192 as two separate routes,\nall right?\n\n824\n00:44:04,790 --> 00:44:11,410\nThey're both /26s and they're right there.\n\n825\n00:44:11,410 --> 00:44:15,760\nMaybe I want to summarize them into 1/25.\n\n826\n00:44:15,760 --> 00:44:18,440\nAuto summary won't do that,\nmanual summary can.\n\n827\n00:44:19,530 --> 00:44:23,440\nOn router three,\nwe just go back to that interface and\n\n828\n00:44:23,440 --> 00:44:28,930\nwe punch in what we want to summarize.\n\n829\n00:44:28,930 --> 00:44:34,772\nI want to summarize 192.168.1.128 and\n\n830\n00:44:34,772 --> 00:44:37,639\nI want that to be a /25.\n\n831\n00:44:37,639 --> 00:44:43,820\nSo that'll be 255.255.255.128.\n\n832\n00:44:43,820 --> 00:44:46,910\nAnd on Router 2, I'll just flush\nthe routing table right away\n\n833\n00:44:48,110 --> 00:44:50,860\ninstead of waiting, cause I'm impatient.\n\n834\n00:44:50,860 --> 00:44:57,370\nAnd when we look in that routing table I\nshould see those come in any moment now.\n\n835\n00:44:57,370 --> 00:44:58,710\nJust got to wait and be patient.\n\n836\n00:44:58,710 --> 00:45:04,180\nI haven't learned any RIP routes yet\n\n837\n00:45:04,180 --> 00:45:07,160\nso this whole patience thing\nis not one of my finer points.\n\n838\n00:45:09,610 --> 00:45:10,850\nThere we go.\n\n839\n00:45:10,850 --> 00:45:15,900\nAnd what you'll see is that I'm still\ngetting the 192 168 3 0/24 summary route.\n\n840\n00:45:15,900 --> 00:45:18,330\nI'm also getting\nthe 192.168.1.128/25 summary route.\n\n841\n00:45:18,330 --> 00:45:24,810\nIt went right along with those /26s.\n\n842\n00:45:24,810 --> 00:45:28,570\nSo, you can summarize to\na non-classful boundary if you want,\n\n843\n00:45:28,570 --> 00:45:30,930\nif you do it manually.\n\n844\n00:45:30,930 --> 00:45:33,080\nAnd I got to tell you guys,\nthat's the way I like to do it.\n\n845\n00:45:33,080 --> 00:45:33,970\nI like to do it manually.\n\n846\n00:45:35,210 --> 00:45:39,580\nAll right, so key take aways here for RIP,\nbecause that's really about it for RIP.\n\n847\n00:45:39,580 --> 00:45:42,830\nIt does do auto-summarization\non major classful boundaries.\n\n848\n00:45:42,830 --> 00:45:46,000\nAnd it auto-summarizes\nto the classful network.\n\n849\n00:45:46,000 --> 00:45:47,580\nSo be careful there.\n\n850\n00:45:47,580 --> 00:45:49,770\nAnd then you can do manual summarization.\n\n851\n00:45:49,770 --> 00:45:51,770\nYou just have to turn\noff the auto-summary.\n\n852\n00:45:51,770 --> 00:45:55,290\nAnd from there you can manually do\nit by going into the interface.\n\n853\n00:45:55,290 --> 00:45:59,500\nAnd using the IP summary-address\ncommand on the interface.\n\n854\n00:45:59,500 --> 00:46:02,580\nAnd you can do that at any point\nthroughout your entire RIP network.\n\n855\n00:46:02,580 --> 00:46:05,220\nWherever you want,\nyou can go to an interface, and\n\n856\n00:46:05,220 --> 00:46:07,340\nyou can summarize, all right?\n\n857\n00:46:07,340 --> 00:46:08,880\nOther than that,\nprocess is pretty straightforward.\n\n858\n00:46:11,210 --> 00:46:13,720\nAll right, so Ronnie,\nI think that's all I've got for RIP.\n\n859\n00:46:13,720 --> 00:46:15,480\nCan you think of anything else on RIP?\n\n860\n00:46:15,480 --> 00:46:16,050\n>> Nope.\n\n861\n00:46:16,050 --> 00:46:16,630\n>> Yeah.\n\n862\n00:46:16,630 --> 00:46:17,440\n>> That's good.\n\n863\n00:46:17,440 --> 00:46:18,070\n>> Okay.\n\n864\n00:46:18,070 --> 00:46:20,970\nI know we have some good questions\nin the chatroom I'll jump into those\n\n865\n00:46:20,970 --> 00:46:21,820\nmaybe here during the break.\n\n866\n00:46:21,820 --> 00:46:23,830\nBut let's pause here and take a break.\n\n867\n00:46:23,830 --> 00:46:26,190\nAnd when we get back\n\n868\n00:46:26,190 --> 00:46:28,440\nwe may cover some of the questions\nfrom the chatroom after the break.\n\n869\n00:46:28,440 --> 00:46:31,320\nOr if not we'll jump into.\n\n870\n00:46:31,320 --> 00:46:32,180\nWhat do we do next?\n\n871\n00:46:32,180 --> 00:46:34,300\nEIGRP.\nWe’ll tackle that one.\n\n872\n00:46:34,300 --> 00:46:37,008\nSo stay tuned,\nwe’ll be back in a just minute.\n\n873\n00:46:37,008 --> 00:46:40,175\n[SOUND] All right,\n\n874\n00:46:40,175 --> 00:46:44,823\nwelcome back everybody.\n\n875\n00:46:44,823 --> 00:46:48,208\nSo we had some great questions in the chat\nroom during the break and I just want to\n\n876\n00:46:48,208 --> 00:46:52,200\nrecap some of them for those of you\nthat watching this video recorded.\n\n877\n00:46:52,200 --> 00:46:57,560\nSo we had mentioned with RIP that it will\nauto summarize on the classfull boundaries\n\n878\n00:46:57,560 --> 00:47:00,470\nand so we had some questions\nabout those classfull boundaries.\n\n879\n00:47:00,470 --> 00:47:05,690\nBasically anywhere in your\nnetwork where it can create a /8,\n\n880\n00:47:05,690 --> 00:47:10,390\na /16, or a /24, that's what auto\nsummerization will do all right?\n\n881\n00:47:10,390 --> 00:47:14,860\nAuto summary will never create a /25 or\na /20.\n\n882\n00:47:14,860 --> 00:47:17,190\nIt's always on those boundaries.\n\n883\n00:47:17,190 --> 00:47:19,790\nAnd that's where we get that problem\nwhere if we have networks that are not\n\n884\n00:47:19,790 --> 00:47:22,190\ncontiguous, if our networks\nare not lined up and\n\n885\n00:47:22,190 --> 00:47:26,840\ndesigned hierarchically,\nit's going to cause a problem.\n\n886\n00:47:26,840 --> 00:47:29,190\nSo, /8, /16, /24,\nthat's what auto-summary will try and\n\n887\n00:47:29,190 --> 00:47:33,630\ncreate wherever it can in the network\nwhen it crosses between boundaries.\n\n888\n00:47:33,630 --> 00:47:35,090\nAnd that's what lead to the next question,\n\n889\n00:47:35,090 --> 00:47:40,217\nis I mentioned in the segment that if\nmy networks were 10.1.00, and 10.2.00,\n\n890\n00:47:40,217 --> 00:47:45,470\nand 10.3.00, that if those\nare the networks I'm using for\n\n891\n00:47:45,470 --> 00:47:49,200\nall of my networks,\nauto-summary will never summarize.\n\n892\n00:47:49,200 --> 00:47:51,040\nAll right, and why is that?\n\n893\n00:47:51,040 --> 00:47:56,270\nWell, it would summarize it to 10.0.0.0/8,\nright?\n\n894\n00:47:56,270 --> 00:47:58,628\nSo it's a class A, so\nthat's what it would summarize it to.\n\n895\n00:47:58,628 --> 00:48:00,426\nBut if it sees that I'm on a 10.\n\n896\n00:48:00,426 --> 00:48:04,092\nnetwork And\nmy neighbor is on a 10.network also,\n\n897\n00:48:04,092 --> 00:48:08,940\nthey're both in that Class A, so\nthere's no point in summarizing.\n\n898\n00:48:08,940 --> 00:48:13,530\nWe're both within the same network,\nthere's no boundary between us.\n\n899\n00:48:13,530 --> 00:48:16,450\nSo, if it doesn't see a boundary,\nif it doesn't see us jumping from\n\n900\n00:48:16,450 --> 00:48:20,340\none network to another,\nthere's no point in summarizing.\n\n901\n00:48:20,340 --> 00:48:22,970\nAnd it's paying attention to\nthose classful boundaries again.\n\n902\n00:48:22,970 --> 00:48:23,905\nThat's hard to separate.\n\n903\n00:48:23,905 --> 00:48:27,777\nBecause for us,\n10.1.0.0 might be a completely\n\n904\n00:48:27,777 --> 00:48:32,065\ndifferent network from 10.2.0.0,\nand we know that.\n\n905\n00:48:32,065 --> 00:48:36,254\nBut looked at from a classful perspective,\nthey're both in the same Class A,\n\n906\n00:48:36,254 --> 00:48:38,580\nand auto-summary doesn't work.\n\n907\n00:48:38,580 --> 00:48:41,610\nSo in those scenarios,\nyou just disable auto-summary, and\n\n908\n00:48:41,610 --> 00:48:42,820\nyou do the manual summarization.\n\n909\n00:48:42,820 --> 00:48:44,630\nYou can summarize it just fine,\nand off you go.\n\n910\n00:48:44,630 --> 00:48:46,470\nThat's kind of that process\nthat we go through.\n\n911\n00:48:48,230 --> 00:48:50,212\nAll right, so\nthose were some of the cooler questions,\n\n912\n00:48:50,212 --> 00:48:54,470\nI mean, there were some other questions\ntoo, I think I got most of it.\n\n913\n00:48:54,470 --> 00:48:58,950\nBut just be aware of the different kinda\nquirks that happen with auto-summary,\n\n914\n00:48:58,950 --> 00:49:00,535\nand feel free to disable it.\n\n915\n00:49:00,535 --> 00:49:06,030\n[LAUGH] All right, now those are great\nquestions because the next protocol we're\n\n916\n00:49:06,030 --> 00:49:10,180\ngonna talk about is EIGRP, the Enhanced\nInterior Gateway Routing Protocol.\n\n917\n00:49:10,180 --> 00:49:13,500\nWhich is a distance vector just like RIP,\nand\n\n918\n00:49:13,500 --> 00:49:17,870\nthat means it's summarization\nfunctions the same way.\n\n919\n00:49:17,870 --> 00:49:20,750\nThe summarization technologies\nthat we talked about in RIP\n\n920\n00:49:20,750 --> 00:49:23,920\nwork the same in EIGRP,\ndown to the commands.\n\n921\n00:49:23,920 --> 00:49:27,760\nThe commands are basically identical\nbetween the two for doing the summary.\n\n922\n00:49:27,760 --> 00:49:29,110\nOne little difference.\n\n923\n00:49:29,110 --> 00:49:31,487\nStarting with IOS 15.0,\n\n924\n00:49:31,487 --> 00:49:38,220\nCisco started making it where auto-summary\nis not on by default in EIGRP.\n\n925\n00:49:38,220 --> 00:49:42,780\nIn RiP it's still on by default, and\nin EIGRP it used to be on by default for\n\n926\n00:49:42,780 --> 00:49:44,450\nthe longest time.\n\n927\n00:49:44,450 --> 00:49:46,755\nAnd then just a few years\nback they switched it and\n\n928\n00:49:46,755 --> 00:49:48,040\nit's no longer on by default.\n\n929\n00:49:48,040 --> 00:49:51,750\nSo EIGRP supports auto-summary, and\n\n930\n00:49:51,750 --> 00:49:57,440\nif you're running an older IOS like 12.4\nand earlier, it may even be on by default.\n\n931\n00:49:57,440 --> 00:50:01,900\nBut in the newer IOSs and on the exam,\nexpect it to be disabled by default.\n\n932\n00:50:01,900 --> 00:50:05,060\nAnd that will mean all your individual\nroutes will propagate out and\n\n933\n00:50:05,060 --> 00:50:06,530\nyou can manually summarize.\n\n934\n00:50:06,530 --> 00:50:07,720\nBasically Cisco looked at it and\n\n935\n00:50:07,720 --> 00:50:10,620\nsaid, this auto-summary stuff is\nnot what it's cracked up to be.\n\n936\n00:50:10,620 --> 00:50:14,410\nEverybody does VLSM,\neverybody's using this variable networks,\n\n937\n00:50:14,410 --> 00:50:18,840\nand most people are turning off\nthe summary, the auto-summary anyway, so\n\n938\n00:50:18,840 --> 00:50:20,290\nlet's just turn it off by default.\n\n939\n00:50:20,290 --> 00:50:24,160\nAnd if you happen to have that perfectly\ndesigned network, great, right?\n\n940\n00:50:24,160 --> 00:50:28,370\nIn that scenario you can go ahead and-\n>> Auto-summarize.\n\n941\n00:50:28,370 --> 00:50:29,980\n>> Yeah, and get that turned on.\n\n942\n00:50:29,980 --> 00:50:32,282\nBut for most people they don't do that.\n\n943\n00:50:32,282 --> 00:50:32,992\nAll right,\n\n944\n00:50:32,992 --> 00:50:37,790\na couple other things that we need to\nremember about EIGRP before we kick it in.\n\n945\n00:50:37,790 --> 00:50:41,070\nIt is done on a per interface basis,\njust like with RIP.\n\n946\n00:50:41,070 --> 00:50:43,400\nRight, we can do auto-summary,\nwe've got that.\n\n947\n00:50:43,400 --> 00:50:48,039\nSomething I didn't mention, or I don't\nthink I mentioned in the first segment, is\n\n948\n00:50:48,039 --> 00:50:53,210\nif you're gonna do manual summarization,\nyou have to turn off auto-summarization.\n\n949\n00:50:53,210 --> 00:50:55,080\nIt's not an option, you have to do it,\n\n950\n00:50:55,080 --> 00:50:57,810\notherwise it breaks it,\nit doesn't work right.\n\n951\n00:50:57,810 --> 00:51:02,940\nSo, turn off auto-summaries, and\nthen put in your manual summarization.\n\n952\n00:51:02,940 --> 00:51:06,045\nAnd another thing I didn't mention in\nthe first segment is, when you turn off\n\n953\n00:51:06,045 --> 00:51:09,810\nauto-summarization, you don't have to turn\nit off throughout your whole network.\n\n954\n00:51:09,810 --> 00:51:12,370\nYou might just choose to turn\nit off on certain routers.\n\n955\n00:51:12,370 --> 00:51:15,250\nSo some routers might do auto-summary,\nsome routers might not, right?\n\n956\n00:51:15,250 --> 00:51:19,070\nSo there's a bit of a difference.\n\n957\n00:51:19,070 --> 00:51:22,354\nOh, and the chat room mentioned,\nno, I am talking about EIGRP,\n\n958\n00:51:22,354 --> 00:51:24,526\nI haven't mentioned OSPF on this one yet.\n\n959\n00:51:24,526 --> 00:51:27,776\nSo, OSPF doesn't do auto-summary at all,\nright?\n\n960\n00:51:27,776 --> 00:51:32,106\nBut the EIGRP, it's off by default and\nwe can turn it on.\n\n961\n00:51:32,106 --> 00:51:36,450\nAll right, a couple other things just\nto think about with good old EIGRP.\n\n962\n00:51:36,450 --> 00:51:41,460\nWe didn't see it with RIP, but EIGRP\nwill be the first time where we see when\n\n963\n00:51:41,460 --> 00:51:46,800\nwe create a default route, we'll see that\nNull0 interface creep up, all right?\n\n964\n00:51:46,800 --> 00:51:49,510\nI said how it was hidden by default.\n\n965\n00:51:49,510 --> 00:51:52,460\nIn EIGRP when we start\nto create summary routes\n\n966\n00:51:52,460 --> 00:51:55,250\nit'll show the summary\nroute as pointing to Null0.\n\n967\n00:51:55,250 --> 00:51:58,300\nAnd that's because no traffic should\nactually be destined to the summary,\n\n968\n00:51:58,300 --> 00:52:00,690\nit should be destined to\nthe smaller networks inside of it.\n\n969\n00:52:00,690 --> 00:52:04,660\nAnd so it's just showing us that\nroute that'll throw the traffic away.\n\n970\n00:52:04,660 --> 00:52:05,730\nRIP was doing it also.\n\n971\n00:52:05,730 --> 00:52:08,125\nIt was just hidden from us,\nwe didn't see it.\n\n972\n00:52:08,125 --> 00:52:09,620\nEIGRP'll let us see it.\n\n973\n00:52:09,620 --> 00:52:13,340\nSo our routing tables are gonna look just\na little bit different from what we saw\n\n974\n00:52:13,340 --> 00:52:14,930\nwith RIP.\n\n975\n00:52:14,930 --> 00:52:18,340\nAnother difference is that with\nEIGRP we might have more than one\n\n976\n00:52:18,340 --> 00:52:19,680\nautonomous system.\n\n977\n00:52:19,680 --> 00:52:23,830\nYou typically won't have one interface\nin more than one autonomous system.\n\n978\n00:52:23,830 --> 00:52:27,680\nYou'll have your router as a whole\nmaybe in more than one AS, but\n\n979\n00:52:27,680 --> 00:52:32,320\nwhen we configure our manual summary,\nwe'll have to specify the AS number for\n\n980\n00:52:32,320 --> 00:52:33,900\nEIGRP, not just the protocol name.\n\n981\n00:52:35,062 --> 00:52:37,250\nAll right, but other than that,\nthat's pretty much it.\n\n982\n00:52:37,250 --> 00:52:39,700\nThe rest of it's configured\nbasically the same way.\n\n983\n00:52:39,700 --> 00:52:43,250\nSo let's take a look at our\nsame topology from before,\n\n984\n00:52:43,250 --> 00:52:46,720\nright so, actually I did put these\nnetworks back to the way they were.\n\n985\n00:52:46,720 --> 00:52:48,562\nLet me put those back.\n\n986\n00:52:48,562 --> 00:52:52,020\nAll right, so\nhere's the topology that I've got.\n\n987\n00:52:52,020 --> 00:52:55,990\nOn Router 1 I've got\nthe 192.168.1.0 networks.\n\n988\n00:52:55,990 --> 00:52:59,900\nOn Router 3 I've got\nthose 192.168.3 networks.\n\n989\n00:52:59,900 --> 00:53:04,292\nAnd I'm just gonna turn on EIGRP,\nI'll just turn it on on all the routers,\n\n990\n00:53:04,292 --> 00:53:05,490\nreal basic config.\n\n991\n00:53:05,490 --> 00:53:10,440\nAnd we'll see what happens, and then we'll\ngo and take a look if we manipulate that.\n\n992\n00:53:10,440 --> 00:53:15,460\nSo on each of my routers,\nI'm just gonna do a router eigrp 1,\n\n993\n00:53:15,460 --> 00:53:18,520\nI'll put them all on\nautonomous system one.\n\n994\n00:53:18,520 --> 00:53:21,190\nAnd I'll advertise all of their networks.\n\n995\n00:53:22,440 --> 00:53:28,290\nSo, just running through real quick\nbasic configuration, nothing special.\n\n996\n00:53:28,290 --> 00:53:30,065\nGoing with all defaults on this one.\n\n997\n00:53:31,775 --> 00:53:32,905\nAll right.\n\n998\n00:53:32,905 --> 00:53:36,939\nThe first thing that I should see is\nthat auto-summarization isn't happening,\n\n999\n00:53:36,939 --> 00:53:37,890\nall right.\n\n1000\n00:53:37,890 --> 00:53:40,972\nAnd I can see that probably\nthe most clearly on Router 2.\n\n1001\n00:53:40,972 --> 00:53:46,200\nRouter 2's in the middle of the network,\nand if I do a show ip route eigrp,\n\n1002\n00:53:46,200 --> 00:53:52,025\nI can see that I'm learning all of those\nindividual networks just like I expect.\n\n1003\n00:53:52,025 --> 00:53:54,905\nSo they’re all coming in,\nno auto-summarization.\n\n1004\n00:53:56,055 --> 00:53:58,180\nThat’s a big difference if you’ve\nbeen working with Cisco equipment\n\n1005\n00:53:58,180 --> 00:53:58,691\nfor a long time.\n\n1006\n00:53:58,691 --> 00:54:05,611\nLike for me, right, I took my first Cisco\nclass back in 1999 so, 16 years ago.\n\n1007\n00:54:05,611 --> 00:54:09,320\nAnd back then,\nauto-summary was on by default and\n\n1008\n00:54:09,320 --> 00:54:14,000\nit was like that all the way\nup until about 2010, 2011?\n\n1009\n00:54:14,000 --> 00:54:17,790\nSo for over ten years that's what I\nwas used to, and now it's different.\n\n1010\n00:54:17,790 --> 00:54:19,700\nSo be aware of that if you're old school.\n\n1011\n00:54:21,700 --> 00:54:25,660\nIf we want auto-summary turned on, though,\nall we have to do is type auto-summary.\n\n1012\n00:54:25,660 --> 00:54:31,240\nIt's done right here in the routing\nprotocol, so inside of Router EIGRP 1.\n\n1013\n00:54:31,240 --> 00:54:34,745\nAnd when you run it all of your\nadjacencies will reset because this is\n\n1014\n00:54:34,745 --> 00:54:36,140\na pretty big change.\n\n1015\n00:54:36,140 --> 00:54:37,700\nSo it's doing a resync.\n\n1016\n00:54:37,700 --> 00:54:41,010\nIt doesn't dump your routing table,\nso it won't create an outage, but\n\n1017\n00:54:41,010 --> 00:54:41,820\nit will resync.\n\n1018\n00:54:41,820 --> 00:54:45,950\nAnd that means I'm not gonna have\nto wait like I had to with RIP.\n\n1019\n00:54:46,980 --> 00:54:48,540\nSo I'm just gonna go and\n\n1020\n00:54:48,540 --> 00:54:52,059\ndo that auto-summary command\non each of my routers.\n\n1021\n00:54:53,090 --> 00:54:55,420\nAnd now that auto-summarization\nis gonna kick in.\n\n1022\n00:54:56,690 --> 00:55:01,565\nAnd on Router 2,\nif I do a show ip route eigrp,\n\n1023\n00:55:01,565 --> 00:55:04,318\nI see a lot less stuff now.\n\n1024\n00:55:04,318 --> 00:55:08,108\nI've got 192.16, oh, I have a problem\nstill, I forgot about that.\n\n1025\n00:55:08,108 --> 00:55:11,478\nSo I've got 192.168.2.0,\nthat's my local stuff, right.\n\n1026\n00:55:11,478 --> 00:55:17,108\nBut 192.168.3.0 is being\nwrapped up into a single /24.\n\n1027\n00:55:17,108 --> 00:55:22,948\n192.168.1.0 is still being wrapped\nup into two different /24s.\n\n1028\n00:55:22,948 --> 00:55:24,358\nWhy is that?\n\n1029\n00:55:24,358 --> 00:55:30,320\nWell, I put my diagram back, but I kinda\nforgot to put my actual routers back.\n\n1030\n00:55:30,320 --> 00:55:36,070\nSo Router 3 still has some networks\nthat technically belong to Router 1.\n\n1031\n00:55:36,070 --> 00:55:38,430\nAnd they’re summarizing to\ntheir classful boundaries.\n\n1032\n00:55:38,430 --> 00:55:41,820\nI didn’t intend to do that, but honestly,\nit kind of serves the episode well.\n\n1033\n00:55:41,820 --> 00:55:44,971\nWe can see it auto-summarizing\nto the classful boundary and\n\n1034\n00:55:44,971 --> 00:55:46,650\ncreating a problem here for me.\n\n1035\n00:55:46,650 --> 00:55:50,800\nBecause that /24 is not actually\navailable at both networks.\n\n1036\n00:55:50,800 --> 00:55:54,840\nIt's more realistically\nsupposed to be a /25.\n\n1037\n00:55:54,840 --> 00:55:59,777\nSo if I want to fix that, I’m gonna need\nto go in and adjust my routing tables, or\n\n1038\n00:55:59,777 --> 00:56:01,942\nmy summarization, a little bit.\n\n1039\n00:56:01,942 --> 00:56:06,327\n>> Don, with the auto-summary,\nwe can also see in the router table there,\n\n1040\n00:56:06,327 --> 00:56:10,020\nwhere that Null0 actually appears\nright next to the routes.\n\n1041\n00:56:10,020 --> 00:56:12,840\n>> Yeah, so\nif we look at one of these guys,\n\n1042\n00:56:12,840 --> 00:56:15,660\nlike here, 192.168.2.0,\n>> I see that route 2 Null0,\n\n1043\n00:56:15,660 --> 00:56:18,800\nnow notice 192.168.3.0.\n\n1044\n00:56:18,800 --> 00:56:20,710\nThat’s coming from router 3,\n\n1045\n00:56:20,710 --> 00:56:23,760\nit’s summarized to a/24, and\nit’s pointing to router 3.\n\n1046\n00:56:23,760 --> 00:56:25,780\nI don’t see the Null0 here,\n\n1047\n00:56:25,780 --> 00:56:30,520\nyou see the Null0 on the router\nthat’s advertising the summary.\n\n1048\n00:56:30,520 --> 00:56:33,380\nWhen we did the route\nsummarization in RIP,\n\n1049\n00:56:33,380 --> 00:56:36,960\non the router that’s actually doing the\nsummarization, you don’t see the summary\n\n1050\n00:56:36,960 --> 00:56:40,280\nin its routing table it doesn’t show up,\nyou see it on the neighbors.\n\n1051\n00:56:40,280 --> 00:56:44,720\nBut in EIGRP, the Null0 makes\nit show up on the local router.\n\n1052\n00:56:44,720 --> 00:56:50,103\nIf I jump over to router 3 and\nI look at my routing table,\n\n1053\n00:56:50,103 --> 00:56:56,540\nfor those 192.168.3 networks,\nthere's the summary.\n\n1054\n00:56:56,540 --> 00:57:01,530\nIt even identifies it, it calls it out\nit says it right here 192.168.3/24\n\n1055\n00:57:01,530 --> 00:57:06,580\nis a summary and here's the actual\nroutes that are inside of it.\n\n1056\n00:57:06,580 --> 00:57:11,105\nBut this one, which would cover any routes\nwhich weren't actually present would go to\n\n1057\n00:57:11,105 --> 00:57:18,990\nNull0 and that's important because my 1.0\nhas that 1.0/24 is pointing to Null0,\n\n1058\n00:57:18,990 --> 00:57:24,638\nand then I’ve got the 128/26 and 192/26,\n\n1059\n00:57:24,638 --> 00:57:29,285\nbut I don’t have 192.168.1.0/26.\n\n1060\n00:57:29,285 --> 00:57:33,536\nI don’t have 192.168.64.\n\n1061\n00:57:33,536 --> 00:57:38,040\n192.168.1.64/26, I don't\nhave that one either.\n\n1062\n00:57:38,040 --> 00:57:40,740\nSo those would be sent to Null0,\nthey'd be thrown away.\n\n1063\n00:57:42,360 --> 00:57:43,910\nI need to fix that summary.\n\n1064\n00:57:43,910 --> 00:57:45,520\nI need to make that a /25 and\n\n1065\n00:57:45,520 --> 00:57:49,630\nnot a /24 so I'm gonna have\nto override the auto summary.\n\n1066\n00:57:49,630 --> 00:57:53,700\nNow, I don't have to override the auto\nsummary throughout my whole network.\n\n1067\n00:57:53,700 --> 00:57:57,130\nI can leave it on router one and router\ntwo cause they're working just fine,\n\n1068\n00:57:57,130 --> 00:57:59,410\nit's really router three\nthat's causing the problem.\n\n1069\n00:57:59,410 --> 00:58:02,695\nSo maybe just here on router 3 I do a no\n\n1070\n00:58:02,695 --> 00:58:06,330\nauto-summary to turn\nthe auto summarization off.\n\n1071\n00:58:07,880 --> 00:58:12,705\nThen I get into my interface that\nI'm advertising out of which is\n\n1072\n00:58:12,705 --> 00:58:17,777\ne0/1 and I say ip summary-address.\n\n1073\n00:58:17,777 --> 00:58:24,140\nI have to specify my protocol, eigrp,\nfollowed by my autonomous system and\n\n1074\n00:58:24,140 --> 00:58:28,170\nthen the actual summary\nthat I want to put out And\n\n1075\n00:58:28,170 --> 00:58:35,770\nI want to put out\n192.168.1.128 255.255.255.128.\n\n1076\n00:58:35,770 --> 00:58:42,620\nI'm showing that I have the second half of\n192.168.1.0, but not the first half so,\n\n1077\n00:58:42,620 --> 00:58:48,220\nI've got a slash 25,\nnot the whole slash 24.\n\n1078\n00:58:48,220 --> 00:58:52,250\nAnd I can do that because I'm\nmanually summarizing, all right?\n\n1079\n00:58:52,250 --> 00:58:57,580\nAuto summary only summarizes to\nslash eight,, slash 16,, slash 24.\n\n1080\n00:58:57,580 --> 00:59:00,540\nIf you do a slash 25 you've\ngot to do it manually.\n\n1081\n00:59:00,540 --> 00:59:02,410\nAll right,\nlet's see how that works on router two.\n\n1082\n00:59:02,410 --> 00:59:10,205\nNow on router two if I look\nat its routing table, right?\n\n1083\n00:59:10,205 --> 00:59:14,502\n192.168.3.0 is no longer being summarized\nI kind of forgot about that one.\n\n1084\n00:59:14,502 --> 00:59:19,902\n[LAUGH] So it's no longer being summarized\nbecause I turned off auto-summary, right?\n\n1085\n00:59:19,902 --> 00:59:25,494\n192.168.1.0 has been broken up and\nI've got a /24,\n\n1086\n00:59:25,494 --> 00:59:30,563\nthat's the auto-summary\ncoming from router one,\n\n1087\n00:59:30,563 --> 00:59:36,170\nand I've got a /25 Which the manual\nsummary coming from router three.\n\n1088\n00:59:36,170 --> 00:59:38,730\nNow technically router one is wrong.\n\n1089\n00:59:38,730 --> 00:59:42,210\nRouter one's advertising the whole slash\n24 even though it doesn't actually have\n\n1090\n00:59:42,210 --> 00:59:43,820\nit, it's only got the first half.\n\n1091\n00:59:43,820 --> 00:59:46,695\nBut that's not a big\ndeal because if I try and\n\n1092\n00:59:46,695 --> 00:59:51,130\naccess anything that's 192.168.1.128 or\nhigher,\n\n1093\n00:59:51,130 --> 00:59:54,876\nthe /25 is more specific,\nI'm going to use that one.\n\n1094\n00:59:54,876 --> 00:59:59,894\nThen if I'm trying to access\nanything that's 192.168.127 or\n\n1095\n00:59:59,894 --> 01:00:06,230\nlower I'm going to use this /24 because\nit's not included in the /25, all right.\n\n1096\n01:00:06,230 --> 01:00:11,520\nSo I'll use the right route when it's\nappropriate, because of the specificity\n\n1097\n01:00:11,520 --> 01:00:16,950\nof those routes, the prefix link,\nthat's a real important thing.\n\n1098\n01:00:16,950 --> 01:00:18,980\nRealistically, I'd go and\nfix router one [LAUGH] also,\n\n1099\n01:00:18,980 --> 01:00:21,400\ncuz I don't like to have\ninaccuracies in the table, but\n\n1100\n01:00:21,400 --> 01:00:25,420\nthe risk being, what happens if\nthe routes fail over on router three.\n\n1101\n01:00:25,420 --> 01:00:29,508\nThey fail and come out of the routing\ntable, and now when people try and access\n\n1102\n01:00:29,508 --> 01:00:33,450\n192.168.128 and higher, It'll go to router\none that doesn't actually have them, so\n\n1103\n01:00:33,450 --> 01:00:35,790\nI'm wasting traffic by\nsending it over there.\n\n1104\n01:00:35,790 --> 01:00:39,780\nSo I'd really go and fix the summary,\nis what I'd normally do, right?\n\n1105\n01:00:39,780 --> 01:00:42,942\nAnd I guess I need to fix the summary\nI left out on router three.\n\n1106\n01:00:42,942 --> 01:00:48,210\nIf I I wanna summarize that one,\nthat was the 192.168.3.0\n\n1107\n01:00:48,210 --> 01:00:53,220\nnetwork, which is on a classful boundary,\nright?\n\n1108\n01:00:53,220 --> 01:00:55,860\nI just turned off auto-summary,\nso I just gotta re-add that in,\n\n1109\n01:00:55,860 --> 01:00:58,810\nand then I'll advertise\nout to the neighbors.\n\n1110\n01:01:02,517 --> 01:01:07,365\nAnd now, the 192.168.3.0 is one\nnice little entry instead of four.\n\n1111\n01:01:07,365 --> 01:01:12,980\n192.168.1.0 is just two\nentries instead of four.\n\n1112\n01:01:12,980 --> 01:01:13,540\nRight.\n\n1113\n01:01:13,540 --> 01:01:18,068\nSo smaller routing table, more efficient\nand still maintaining accuracy.\n\n1114\n01:01:18,068 --> 01:01:23,370\nAll right, so\nthat's basically it for EIGRP.\n\n1115\n01:01:23,370 --> 01:01:28,340\nThere are some special circumstances\nwhere summaries get created,\n\n1116\n01:01:28,340 --> 01:01:32,010\nlike when we have an EIGRP stub zones.\n\n1117\n01:01:32,010 --> 01:01:36,290\nWe'll talk about those is a separate\nepisode when we focus just on EIGRP But\n\n1118\n01:01:36,290 --> 01:01:39,250\nas far as summary routes go,\nconfiguring and\n\n1119\n01:01:39,250 --> 01:01:43,230\nEIGRP summary route is almost\nidentical to RIP, right.\n\n1120\n01:01:43,230 --> 01:01:47,770\nOur big difference, we actually see that\nNull0 interface, it's not hidden from us\n\n1121\n01:01:47,770 --> 01:01:49,860\nlike with RIP, we actually actually\nsee it in the routing table.\n\n1122\n01:01:50,860 --> 01:01:54,890\nAlso, auto summary is not on\nby default anymore, otherwise,\n\n1123\n01:01:54,890 --> 01:01:57,932\nbasically the same as RIP.\n\n1124\n01:01:57,932 --> 01:02:02,780\nAll right, I will mention one thing,\njust in case, EIGRP\n\n1125\n01:02:02,780 --> 01:02:07,830\nhas a special feature called a Leak Map\nand most people never have to use this.\n\n1126\n01:02:07,830 --> 01:02:12,930\nBut there are times where you might\nwant to summarize a bunch of subnets\n\n1127\n01:02:13,980 --> 01:02:18,750\nbut still advertise one of those\nsmaller subnets by itself.\n\n1128\n01:02:18,750 --> 01:02:21,480\nThere's not a lot of need for this, it's\ntypically if you've got something like\n\n1129\n01:02:21,480 --> 01:02:25,510\na redundant data center and just that\nsmaller subnet might be present in another\n\n1130\n01:02:25,510 --> 01:02:29,790\nnetwork ,or maybe I have a redundant\npath just to that smaller network but\n\n1131\n01:02:29,790 --> 01:02:32,000\nnot the rest of the ones that\nare in the bigger network.\n\n1132\n01:02:32,000 --> 01:02:35,220\nIn those kinds of scenarios,\neven though you've got a summary in place,\n\n1133\n01:02:35,220 --> 01:02:38,750\nyou might still want to advertise\nthe specific, smaller route and\n\n1134\n01:02:38,750 --> 01:02:40,310\nyou can create a Leak Map.\n\n1135\n01:02:40,310 --> 01:02:45,188\nLeak maps are just a route map,\nthat defines which routes get leaked out.\n\n1136\n01:02:45,188 --> 01:02:49,220\nAnd so [COUGH] when you do a summary\nroute, like when I put in the command,\n\n1137\n01:02:49,220 --> 01:02:51,780\nif I had carried that command\nout a little bit further and\n\n1138\n01:02:51,780 --> 01:02:55,920\ndid a question mark, you'll see where I\ncan specify things like an admin distance.\n\n1139\n01:02:55,920 --> 01:02:59,120\nOh you know, actually it won't let\nme do a Leak Map here will it?\n\n1140\n01:02:59,120 --> 01:03:03,200\nI have to do a Leak Map over\nin the other protocol but\n\n1141\n01:03:03,200 --> 01:03:05,590\nyou can specify that map to call.\n\n1142\n01:03:05,590 --> 01:03:08,510\nIt'll know what to look for to reach\nout and say this network, this network,\n\n1143\n01:03:08,510 --> 01:03:09,970\nthis network, I'm gonna leak these out.\n\n1144\n01:03:09,970 --> 01:03:13,270\nSo I'll advertise the summary as\nwell as the individual routes.\n\n1145\n01:03:13,270 --> 01:03:16,430\nIt's a pretty rare scenario that you\nneed it, most people never will.\n\n1146\n01:03:16,430 --> 01:03:18,210\nI just wanted you guys to\nbe aware of that option.\n\n1147\n01:03:18,210 --> 01:03:20,780\nI seriously doubt it'll\nshow up on the exam, but\n\n1148\n01:03:20,780 --> 01:03:23,080\nit is a function that is capable.\n\n1149\n01:03:23,080 --> 01:03:27,360\nYou'll see it mentioned In a few places\nwhen you go to configure this stuff,\n\n1150\n01:03:29,190 --> 01:03:31,360\nthat those options creep up.\n\n1151\n01:03:31,360 --> 01:03:33,460\nSo, it's just called a Leak Map.\n\n1152\n01:03:33,460 --> 01:03:34,880\nDid I put an example in the show notes?\n\n1153\n01:03:34,880 --> 01:03:35,580\nI don't think I did.\n\n1154\n01:03:35,580 --> 01:03:37,210\nI think I just mentioned it in there.\n\n1155\n01:03:37,210 --> 01:03:39,400\nLet me just double-check here and see.\n\n1156\n01:03:39,400 --> 01:03:40,490\nYeah, I didn't put it in there.\n\n1157\n01:03:40,490 --> 01:03:43,485\nSo just be aware of that.\n\n1158\n01:03:43,485 --> 01:03:45,257\nAll right, so that's about it for\n\n1159\n01:03:45,257 --> 01:03:49,183\nEIGRP functionalities like RIPs and\nnothing too crazy and shocking there.\n\n1160\n01:03:49,183 --> 01:03:53,432\nThe one that's really different,\nthough, is OSPF, all right?\n\n1161\n01:03:53,432 --> 01:04:00,220\nOSPF, the Open Shortest Path First,\nit differs a lot from EIGRP and RIP.\n\n1162\n01:04:00,220 --> 01:04:04,010\nAnd the main reason is the difference\nin how it communicates.\n\n1163\n01:04:04,010 --> 01:04:07,940\nWith RIP and EIGRP, they're distance\nvector, so who do the routers talk to?\n\n1164\n01:04:07,940 --> 01:04:10,477\nIf I'm an EIGRP router,\nwho do I talk to on the network?\n\n1165\n01:04:10,477 --> 01:04:12,490\n>> Neighbors\n>> Neighbors, right?\n\n1166\n01:04:12,490 --> 01:04:14,810\nJust my neighbors,\nthe people that are right next to me.\n\n1167\n01:04:14,810 --> 01:04:17,030\nThere can be 1000 routers out there, but\n\n1168\n01:04:17,030 --> 01:04:21,580\nif I'm only connected to two other\nrouters, those are the two I talk to.\n\n1169\n01:04:21,580 --> 01:04:24,050\nThe other 998 routers that are out there,\nI know they're there,\n\n1170\n01:04:24,050 --> 01:04:27,460\nI see my hot counts, but\nI don't know anything about them.\n\n1171\n01:04:27,460 --> 01:04:30,140\nSo I'm only getting\ninformation from my neighbors.\n\n1172\n01:04:30,140 --> 01:04:33,480\nAnd that's why in RIP and EIGRP.\n\n1173\n01:04:33,480 --> 01:04:35,770\nWe can summarize wherever we want.\n\n1174\n01:04:35,770 --> 01:04:37,890\nYou can go to any router\nin your RIP environment,\n\n1175\n01:04:37,890 --> 01:04:39,730\nany router in your EIGRP environment.\n\n1176\n01:04:39,730 --> 01:04:41,440\nAnd you can summarize on an interface,\nwherever you want.\n\n1177\n01:04:42,610 --> 01:04:44,440\nOSPF's a lot trickier.\n\n1178\n01:04:44,440 --> 01:04:49,340\nWith OSPF one router talks to all\nthe other routers that are in the area.\n\n1179\n01:04:49,340 --> 01:04:52,420\nSo if I have 1000 routers in area one.\n\n1180\n01:04:52,420 --> 01:04:56,460\nAnd I'm in area one,\nI know about all the other routers.\n\n1181\n01:04:56,460 --> 01:04:59,580\nI don't just know they're there,\nI actually know their name,\n\n1182\n01:04:59,580 --> 01:05:02,410\nI know the links that they have and\nthe links that they're advertising.\n\n1183\n01:05:02,410 --> 01:05:03,240\nI know all about them.\n\n1184\n01:05:04,280 --> 01:05:07,190\nAnd if I were to summarize on one router.\n\n1185\n01:05:07,190 --> 01:05:10,530\nI would just learn the specific routes\nfrom another router that was out there.\n\n1186\n01:05:10,530 --> 01:05:12,020\nFrom somebody else, right?\n\n1187\n01:05:12,020 --> 01:05:16,162\nSo with OSPF, the rules of how we\nsummarize are a lot different.\n\n1188\n01:05:16,162 --> 01:05:17,140\nAll right.\n\n1189\n01:05:17,140 --> 01:05:19,925\nSo I wanna spend some time on OSPF,\nshow it's functionality and\n\n1190\n01:05:19,925 --> 01:05:20,930\nkinda get into that.\n\n1191\n01:05:20,930 --> 01:05:24,790\nBut my lab here is now kinda\ncovered in RIP and EIGRP.\n\n1192\n01:05:24,790 --> 01:05:26,120\nSo let's stop and take a break.\n\n1193\n01:05:26,120 --> 01:05:28,870\nI'm gonna flush out those routing\nprotocols and switch us over to OSPF.\n\n1194\n01:05:28,870 --> 01:05:36,565\nAnd then we'll jump into\nsummarizing with OSPF after this.\n\n1195\n01:05:36,565 --> 01:05:42,795\n[SOUND All right, welcome back everybody.\n\n1196\n01:05:42,795 --> 01:05:45,365\nSo for our final segment,\nwe wanna take a look at OSPF.\n\n1197\n01:05:45,365 --> 01:05:47,635\nI kinda led us out on the last segment,\n\n1198\n01:05:47,635 --> 01:05:51,655\nsaying how OSPF is a different\nbeast altogether, and boy is it.\n\n1199\n01:05:51,655 --> 01:05:52,875\nFor the first two,\n\n1200\n01:05:52,875 --> 01:05:56,530\nEIGRP, RIP, summarization\nreally not that big of a deal.\n\n1201\n01:05:56,530 --> 01:06:01,172\nBut for OSPF we've gotta a few things\nthat make it really different.\n\n1202\n01:06:01,172 --> 01:06:01,930\nAll right.\n\n1203\n01:06:01,930 --> 01:06:04,570\nThe big difference comes\nin with our areas.\n\n1204\n01:06:04,570 --> 01:06:08,120\nIn OSPF you can divide your\nnetwork up into areas.\n\n1205\n01:06:08,120 --> 01:06:12,250\nAnd your routers will talk to all\nthe other routers in your area.\n\n1206\n01:06:12,250 --> 01:06:16,040\nAnd they won't talk at all to\nthe routers in the other areas.\n\n1207\n01:06:16,040 --> 01:06:18,875\nThat means that we have\nto have border routers.\n\n1208\n01:06:18,875 --> 01:06:20,880\nBorder routers that sit\nin between the areas and\n\n1209\n01:06:20,880 --> 01:06:22,450\ncontrol updates that pass between them.\n\n1210\n01:06:22,450 --> 01:06:23,820\nI mentioned that in\nthe beginning of the show.\n\n1211\n01:06:23,820 --> 01:06:27,000\nIn fact, let me pull that diagram back\nup from the beginning of the show here.\n\n1212\n01:06:27,000 --> 01:06:29,690\nThis guy right here.\n\n1213\n01:06:29,690 --> 01:06:32,650\nSo in this diagram,\nI showed you like more than one area, and\n\n1214\n01:06:32,650 --> 01:06:35,760\nhow the decisions kinda flow across it,\nand so on.\n\n1215\n01:06:35,760 --> 01:06:38,738\nWell, because all of these\nrouters talk to each other,\n\n1216\n01:06:38,738 --> 01:06:42,830\nthe only way that I can\ntruly summarize my network.\n\n1217\n01:06:42,830 --> 01:06:44,970\nIs on the border routers, right?\n\n1218\n01:06:44,970 --> 01:06:47,500\nSo that's the first thing\nthat I need to keep in mind\n\n1219\n01:06:47,500 --> 01:06:49,740\nif I'm gonna be doing\nsummarization in OSPF.\n\n1220\n01:06:49,740 --> 01:06:53,810\nI can only summarize on a border router.\n\n1221\n01:06:53,810 --> 01:06:57,450\nAnd because most of our\nrouters are in a single area.\n\n1222\n01:06:57,450 --> 01:06:58,960\nThat means they can't summarize.\n\n1223\n01:06:58,960 --> 01:07:02,310\nAnd that's why we don't have\nauto-summarization in OSPF,\n\n1224\n01:07:02,310 --> 01:07:03,560\nit's not even an option.\n\n1225\n01:07:03,560 --> 01:07:08,409\nYou can't turn it on, it's just not there,\nthere's no auto-summaries in OSPF.\n\n1226\n01:07:08,409 --> 01:07:12,770\nInstead, we can go to the border routers,\nand we can summarize there.\n\n1227\n01:07:12,770 --> 01:07:15,750\nNow in OSPF,\nthere's two types of border routers.\n\n1228\n01:07:15,750 --> 01:07:20,730\nThere's ABR's, Area Border Routers, like\nthe ones I've drawn here, router 4 and\n\n1229\n01:07:20,730 --> 01:07:23,510\nrouter 8 would be my border routers,\nall right?\n\n1230\n01:07:23,510 --> 01:07:27,930\nThere's also ASBR's,\nAutonomous System Border Routers.\n\n1231\n01:07:27,930 --> 01:07:32,070\nAnd these are routers that connect\nto some non-OSPF environment.\n\n1232\n01:07:32,070 --> 01:07:35,040\nSo if I was redistributing EIGRP routes,\nor\n\n1233\n01:07:35,040 --> 01:07:38,890\nredistributing static routes\ninto my OSPF environment.\n\n1234\n01:07:38,890 --> 01:07:41,300\nThose are the ASBR's.\n\n1235\n01:07:41,300 --> 01:07:45,020\nUnfortunately, the way we summarize\nroutes is done differently\n\n1236\n01:07:45,020 --> 01:07:48,096\non border routers than it is on ASBR's.\n\n1237\n01:07:48,096 --> 01:07:51,970\nSo ABR's and ASBR's, they have different\nbehaviors as far as how they summarize\n\n1238\n01:07:51,970 --> 01:07:57,420\nthem, and if you have a router\nthat's both an ASBR and an ABR.\n\n1239\n01:07:57,420 --> 01:08:01,790\nThen you have two different types of\nsummarization right on the same unit, and\n\n1240\n01:08:01,790 --> 01:08:03,545\nthat’s where things really\nstart to get confusing.\n\n1241\n01:08:03,545 --> 01:08:04,670\nOkay?\n\n1242\n01:08:04,670 --> 01:08:09,950\nSo OSPF is a little bit more,\nI wanna say it’s little more challenging,\n\n1243\n01:08:09,950 --> 01:08:12,430\nbut at the end of the day,\nit means you’ve really got more control.\n\n1244\n01:08:12,430 --> 01:08:15,320\nYou’ve got more control over\nsummarization under OSPF than you do with\n\n1245\n01:08:15,320 --> 01:08:16,000\nthe other protocols.\n\n1246\n01:08:17,120 --> 01:08:21,080\nAll right, so let's take a look at this,\nand actually, before I even jump into\n\n1247\n01:08:21,080 --> 01:08:24,730\nthis, there's one other thing\nwith OSPF we need to be aware of.\n\n1248\n01:08:24,730 --> 01:08:27,470\nAnd if you haven't watched our, well,\nwe haven't really filmed them yet, but\n\n1249\n01:08:27,470 --> 01:08:30,320\nour OSPF shows where we\ndeep-dive into OSPF.\n\n1250\n01:08:30,320 --> 01:08:33,050\nWe're gonna talk about\nsomething called a Stub Areas.\n\n1251\n01:08:33,050 --> 01:08:35,860\nAnd when you create stub areas in OSPF.\n\n1252\n01:08:35,860 --> 01:08:40,330\nThey actually create their own\nsummary routes for the stub.\n\n1253\n01:08:40,330 --> 01:08:44,490\nAnd so that's a special type of summary\nroute that's created by the system.\n\n1254\n01:08:44,490 --> 01:08:46,340\nWe'll see that when we get\ninto the stub episode.\n\n1255\n01:08:46,340 --> 01:08:47,980\nI don't wanna tackle those right here.\n\n1256\n01:08:47,980 --> 01:08:52,860\nBecause this objective is talking\nabout the routes that you control.\n\n1257\n01:08:52,860 --> 01:08:55,750\nAnd the summary routes that a stub creates\nare ones that you don't really control.\n\n1258\n01:08:55,750 --> 01:08:57,380\nThey're created by the system.\n\n1259\n01:08:57,380 --> 01:09:00,060\nSo we will save those for another episode.\n\n1260\n01:09:00,060 --> 01:09:04,190\nBut the summarization that we do control\nis really fairly straightforward\n\n1261\n01:09:04,190 --> 01:09:07,100\nalthough we do have these different\ncommands to worry about, all right.\n\n1262\n01:09:07,100 --> 01:09:10,602\nLet us just start with taking a look\nat a OSPF environment, all right.\n\n1263\n01:09:10,602 --> 01:09:15,090\nI'm gonna take my network,\nthis network right here.\n\n1264\n01:09:15,090 --> 01:09:18,510\nAnd what I'm gonna do is I'm\ngonna take router one, and\n\n1265\n01:09:18,510 --> 01:09:20,890\nI'm gonna put it into area zero.\n\n1266\n01:09:20,890 --> 01:09:23,150\nSo I'll just make router one in area zero.\n\n1267\n01:09:23,150 --> 01:09:26,710\nAnd I'll take router three and\nI'll make it in area one.\n\n1268\n01:09:26,710 --> 01:09:29,375\nSo I'll have area zero and area one.\n\n1269\n01:09:29,375 --> 01:09:32,315\nAnd I'll have router\ntwo be a border router,\n\n1270\n01:09:32,315 --> 01:09:36,595\nwhere it connects to area zero and\nit connects to area one.\n\n1271\n01:09:36,595 --> 01:09:37,805\nSo it'll have that connectivity.\n\n1272\n01:09:38,845 --> 01:09:43,095\nAnd then I'm gonna leave these\n192.168.2 networks as external and\n\n1273\n01:09:43,095 --> 01:09:44,485\nI'm gonna redistribute those in.\n\n1274\n01:09:44,485 --> 01:09:46,495\nSo I'm gonna draw those\nin as external routes so\n\n1275\n01:09:46,495 --> 01:09:48,765\nwe'll have some different\ncoverage there to bring these in.\n\n1276\n01:09:48,765 --> 01:09:52,100\nSo let's do that quick\nconfiguration right there.\n\n1277\n01:09:52,100 --> 01:09:55,410\nRouter one is going to be\nentirely in area zero.\n\n1278\n01:09:55,410 --> 01:09:56,450\nThis one's easy.\n\n1279\n01:09:56,450 --> 01:10:00,180\nI can just say router OS,\nwhoops get into config that'll help.\n\n1280\n01:10:00,180 --> 01:10:01,503\nI'll do router ospf 1.\n\n1281\n01:10:01,503 --> 01:10:08,865\nNetwork is 0.0.0.0 255.255.255.255 area 0.\n\n1282\n01:10:08,865 --> 01:10:10,190\nAll right.\n\n1283\n01:10:10,190 --> 01:10:12,700\nThat guy is now entirely in area zero.\n\n1284\n01:10:14,750 --> 01:10:18,088\nI'll take router three, and\n\n1285\n01:10:18,088 --> 01:10:23,037\non router three I'll say, router ospf 1.\n\n1286\n01:10:23,037 --> 01:10:27,790\nBetwork 0.0.0.0 255.255.255.255 area 1.\n\n1287\n01:10:27,790 --> 01:10:30,590\nIt's now entirely in area one.\n\n1288\n01:10:32,190 --> 01:10:34,210\nAnd then I can go to router two.\n\n1289\n01:10:34,210 --> 01:10:35,986\nAnd router two's gonna be in the middle.\n\n1290\n01:10:35,986 --> 01:10:36,840\nAll right.\n\n1291\n01:10:36,840 --> 01:10:41,142\nSo on this guy,\nI'm gonna say, router ospf 1.\n\n1292\n01:10:41,142 --> 01:10:43,730\nAnd remember that one,\nthat's just the process id.\n\n1293\n01:10:43,730 --> 01:10:47,180\nSo it's really just identifying\nthe program that's running.\n\n1294\n01:10:47,180 --> 01:10:50,060\nAnd I'm gonna say, network 1.1.1.0.\n\n1295\n01:10:50,060 --> 01:10:52,230\nThis is my connection to router one.\n\n1296\n01:10:52,230 --> 01:10:55,500\n255, 255, 255, oh, wait.\n\n1297\n01:10:55,500 --> 01:10:59,509\nI need [INAUDIBLE] so\nit's 0.0.0.255 area one.\n\n1298\n01:10:59,509 --> 01:11:03,920\nSo that interface is gonna be in area,\noh, shoot.\n\n1299\n01:11:03,920 --> 01:11:05,015\nI'm gonna have a conflict.\n\n1300\n01:11:05,015 --> 01:11:05,825\n>> [CROSSTALK]\n>> Let me switch that.\n\n1301\n01:11:05,825 --> 01:11:06,750\nThat needs to be area zero.\n\n1302\n01:11:08,300 --> 01:11:10,990\nWhich is why the adjacency didn't pop\nup right there, and there it did.\n\n1303\n01:11:12,060 --> 01:11:16,630\nAnd then I'll switch for router three,\nmy connection with that network.\n\n1304\n01:11:20,418 --> 01:11:21,190\nIt's gonna be in area one.\n\n1305\n01:11:21,190 --> 01:11:22,650\nAll right.\n\n1306\n01:11:22,650 --> 01:11:27,250\nSo now I've got this side over here,\nis all in area one.\n\n1307\n01:11:27,250 --> 01:11:29,930\nIn fact, let me just throw some\nbasic shapes in there so I can.\n\n1308\n01:11:31,370 --> 01:11:34,730\nRemember how exactly\nI've got this pencil app.\n\n1309\n01:11:34,730 --> 01:11:39,950\nSo, this side over here, that's area one.\n\n1310\n01:11:42,040 --> 01:11:46,140\nAnd the other side is going to be area,\noh wait, this is area zero.\n\n1311\n01:11:46,140 --> 01:11:48,190\nSo, zero,\nthis is why we make notes, right?\n\n1312\n01:11:48,190 --> 01:11:50,956\nThis is otherwise I'm gonna\nscrew all of this up.\n\n1313\n01:11:50,956 --> 01:11:54,078\nSo I'll just throw in a little\nnote here so I can remember,\n\n1314\n01:11:54,078 --> 01:11:56,267\nsince I'm apparently incapable of it.\n\n1315\n01:11:56,267 --> 01:11:58,252\nThat this is area 0.\n\n1316\n01:11:58,252 --> 01:12:01,910\nThere we go.\n\n1317\n01:12:01,910 --> 01:12:04,996\nSo I've got Area 0\nsitting right over here.\n\n1318\n01:12:04,996 --> 01:12:05,996\nAnd then.\n\n1319\n01:12:09,996 --> 01:12:12,621\nI've got over here.\n\n1320\n01:12:12,621 --> 01:12:15,288\nWhat is now Area 1.\n\n1321\n01:12:15,288 --> 01:12:17,700\nSo this is gonna be Area 1.\n\n1322\n01:12:17,700 --> 01:12:19,121\nAnd we'll make it, whoops.\n\n1323\n01:12:19,121 --> 01:12:20,371\nWell, that didn't work out, did it?\n\n1324\n01:12:22,996 --> 01:12:23,996\nThere we go.\n\n1325\n01:12:23,996 --> 01:12:25,497\nAnd let's just make it a different color.\n\n1326\n01:12:25,497 --> 01:12:26,520\nSo we can tell the difference.\n\n1327\n01:12:26,520 --> 01:12:27,570\nWe'll make it purple.\n\n1328\n01:12:27,570 --> 01:12:28,750\nIt'll be purple day.\n\n1329\n01:12:28,750 --> 01:12:29,372\nAll right.\nThere we go.\n\n1330\n01:12:29,372 --> 01:12:31,292\nSo I've got my two areas in place.\n\n1331\n01:12:31,292 --> 01:12:33,496\nRouter 2 is a border router.\n\n1332\n01:12:33,496 --> 01:12:38,420\nNow I still have these 192.168.2 networks\nwhich are kinda just sitting out there.\n\n1333\n01:12:38,420 --> 01:12:41,890\nI’m gonna redistribute those in so\nthat I can bring them into my router.\n\n1334\n01:12:41,890 --> 01:12:44,780\nAnd have them as external routes.\n\n1335\n01:12:44,780 --> 01:12:46,290\nI guess I could do like\na default route also,\n\n1336\n01:12:46,290 --> 01:12:48,670\nbut you don’t normally\nsummarize a default route.\n\n1337\n01:12:48,670 --> 01:12:50,830\nBut you would summarize routes like these.\n\n1338\n01:12:50,830 --> 01:12:53,180\nSo I’m gonna go and grab those.\n\n1339\n01:12:53,180 --> 01:12:59,270\nSo on router 2, I'm just going\nto do a redistribute connected.\n\n1340\n01:13:00,390 --> 01:13:02,860\nAnd I guess, I could get really\nspecific and filter this down but\n\n1341\n01:13:02,860 --> 01:13:04,020\nI'll just go crazy.\n\n1342\n01:13:04,020 --> 01:13:06,070\nAnd do redistribute connected.\n\n1343\n01:13:06,070 --> 01:13:08,121\nLet me fill in subnets, or\nwe'll have a big problem there.\n\n1344\n01:13:08,121 --> 01:13:10,220\nActually, that's kind of worth mentioning.\n\n1345\n01:13:10,220 --> 01:13:14,011\nIf I don't do the subnets keyword when I\nredistribute, it's only gonna look for\n\n1346\n01:13:14,011 --> 01:13:15,080\nclass full networks.\n\n1347\n01:13:15,080 --> 01:13:16,650\nAnd I'm not following class full networks.\n\n1348\n01:13:16,650 --> 01:13:18,410\nI'm doing variable length subnet asking.\n\n1349\n01:13:18,410 --> 01:13:21,580\nSo it wouldn't redistribute my\nnetworks if I left that out.\n\n1350\n01:13:21,580 --> 01:13:24,180\nWe covered that in our\nredistribution show.\n\n1351\n01:13:24,180 --> 01:13:26,350\nBut anyhow, so now those are coming in.\n\n1352\n01:13:26,350 --> 01:13:28,970\nSo I've got some external routes.\n\n1353\n01:13:28,970 --> 01:13:31,350\nLet's take a look at how this\naffects our routing table.\n\n1354\n01:13:31,350 --> 01:13:34,750\nHere on router 2,\nif I do a show IP route OSPF.\n\n1355\n01:13:35,990 --> 01:13:41,060\nI can see I'm learning the 192.168.1\nnetworks from my other routers.\n\n1356\n01:13:41,060 --> 01:13:45,370\nAnd I'm learning the 192.168.3\nnetworks from my other routers.\n\n1357\n01:13:45,370 --> 01:13:50,043\nAnd they're right there,\nregular OSPF entries.\n\n1358\n01:13:50,043 --> 01:13:55,119\nNow, I'm showing these as regular OSPF\nentries because I'm in area with 0 and\n\n1359\n01:13:55,119 --> 01:13:55,740\narea 1.\n\n1360\n01:13:55,740 --> 01:13:58,781\nFor my other routers,\nlike if I jumped to router 1.\n\n1361\n01:13:58,781 --> 01:14:02,880\nRouter 1 is just in area 0.\n\n1362\n01:14:02,880 --> 01:14:07,350\nSo it's gonna show the routes coming\nin from area 1 as inter-area routes.\n\n1363\n01:14:07,350 --> 01:14:10,696\nSo when I look at its routing table I\nexpect to see something a little bit\n\n1364\n01:14:10,696 --> 01:14:11,330\ndifferent.\n\n1365\n01:14:12,477 --> 01:14:13,496\nAll right.\n\n1366\n01:14:13,496 --> 01:14:16,706\nI see 192.168.3.\n\n1367\n01:14:16,706 --> 01:14:18,955\nThose networks are OIA.\n\n1368\n01:14:18,955 --> 01:14:20,090\nThey're inter-area.\n\n1369\n01:14:20,090 --> 01:14:21,100\nRight?\nBut they're all coming in,\n\n1370\n01:14:21,100 --> 01:14:24,380\nthe individual routes,\neven though they're from a different area.\n\n1371\n01:14:24,380 --> 01:14:28,310\nAnd these OE2s, those are those\nexternals that I brought in.\n\n1372\n01:14:28,310 --> 01:14:29,500\nAlright?\nAnd I'm seeing those in the four\n\n1373\n01:14:29,500 --> 01:14:30,610\nindividual routes.\n\n1374\n01:14:30,610 --> 01:14:33,800\nWe can see here with\nthis basic configuration.\n\n1375\n01:14:33,800 --> 01:14:35,540\nNo summarization has happened.\n\n1376\n01:14:35,540 --> 01:14:39,230\nThis has all been just individual routes.\n\n1377\n01:14:39,230 --> 01:14:40,110\nAll out there.\n\n1378\n01:14:40,110 --> 01:14:40,970\nThat's how OSPF functions.\n\n1379\n01:14:42,540 --> 01:14:44,880\nSo what I want to do is,\nI want to go and clean this up.\n\n1380\n01:14:44,880 --> 01:14:46,960\nI want to summarize these guys down.\n\n1381\n01:14:46,960 --> 01:14:50,300\nThe first thing I need to remember,\nis where it summarized.\n\n1382\n01:14:50,300 --> 01:14:56,210\nGoing to my diagram, I can't do any\nsummarization whatsoever on router 1.\n\n1383\n01:14:56,210 --> 01:14:58,670\nRouter 1 is entirely in one area.\n\n1384\n01:14:58,670 --> 01:15:00,380\nSo it's not a candidate\nto do summarization.\n\n1385\n01:15:01,410 --> 01:15:06,913\nRouter 3, is entirely in area 1.\n\n1386\n01:15:06,913 --> 01:15:08,996\nRouter 1 is in area 0.\n\n1387\n01:15:08,996 --> 01:15:10,621\nRouter 3 is in area 1.\n\n1388\n01:15:10,621 --> 01:15:12,538\nAnd Router 3 is entirely in area 1.\n\n1389\n01:15:12,538 --> 01:15:14,340\nSo it's not a candidate\nto do summarization.\n\n1390\n01:15:14,340 --> 01:15:17,496\nYou cannot do summarization\nwithin the area.\n\n1391\n01:15:17,496 --> 01:15:19,000\nI have to do it at the border.\n\n1392\n01:15:19,000 --> 01:15:23,580\nAnd so, Router 2 is really the only place\nI can do any summarization on my network.\n\n1393\n01:15:23,580 --> 01:15:28,040\nThe more areas you have, the more places\nyou'll have where you can summarize.\n\n1394\n01:15:28,040 --> 01:15:33,246\nIf you just have single area OSPF,\nyou can't summarize.\n\n1395\n01:15:33,246 --> 01:15:35,510\nYou could summarize your external\nroutes as you bring them in,.\n\n1396\n01:15:35,510 --> 01:15:37,660\nBut you can't summarize\nany of your OSPF routes.\n\n1397\n01:15:37,660 --> 01:15:38,470\nAll right.\nThat is\n\n1398\n01:15:38,470 --> 01:15:40,890\na limitation of OSPF if\nyou have a single area.\n\n1399\n01:15:40,890 --> 01:15:43,110\nIf you want to summarize,\nyou have to go multi-area.\n\n1400\n01:15:43,110 --> 01:15:44,100\nYou've got to have border routers.\n\n1401\n01:15:45,190 --> 01:15:46,080\nWell in my case I do.\n\n1402\n01:15:46,080 --> 01:15:47,871\nI've got Router 2 as a border router.\n\n1403\n01:15:47,871 --> 01:15:49,848\nAnd so what it can do is it can say,\n\n1404\n01:15:49,848 --> 01:15:53,538\nI'm going to get all of\nthese 192.168.3 networks.\n\n1405\n01:15:53,538 --> 01:15:54,820\nThese guys over here.\n\n1406\n01:15:54,820 --> 01:15:56,580\nThey are all going to come into Router 2.\n\n1407\n01:15:56,580 --> 01:15:59,288\nAnd Router 2 can summarize them.\n\n1408\n01:15:59,288 --> 01:16:01,913\nAnd then advertise them to Router 1.\n\n1409\n01:16:01,913 --> 01:16:03,163\nAnd vice versa.\n\n1410\n01:16:03,163 --> 01:16:05,700\nRouter 2 is going to get all\nthese routes from Router 1.\n\n1411\n01:16:05,700 --> 01:16:07,163\nIt can then summarize them.\n\n1412\n01:16:07,163 --> 01:16:09,180\nAnd advertise them to Router 3.\n\n1413\n01:16:09,180 --> 01:16:15,663\nSo it can put those summaries in place as\nthe data moves from one area to the next.\n\n1414\n01:16:15,663 --> 01:16:17,390\nLet's see that in action.\n\n1415\n01:16:17,390 --> 01:16:19,010\nThe way I do this in real life.\n\n1416\n01:16:19,010 --> 01:16:20,870\nI'll show you the real\nlife way that I do it.\n\n1417\n01:16:20,870 --> 01:16:22,710\nI jump to my border router.\n\n1418\n01:16:22,710 --> 01:16:24,640\nAnd I look at its routing table.\n\n1419\n01:16:24,640 --> 01:16:27,690\nI do this exact command right here,\ndo show IP route OSPF.\n\n1420\n01:16:27,690 --> 01:16:30,380\nI might not use the do-command\nif I'm not config.\n\n1421\n01:16:30,380 --> 01:16:31,790\nBut the rest of it I do.\n\n1422\n01:16:31,790 --> 01:16:35,380\nAnd I look at the routing table and\nI say okay, here's all my OSPF routes.\n\n1423\n01:16:35,380 --> 01:16:36,140\nWhat can I summarize?\n\n1424\n01:16:37,200 --> 01:16:41,070\nAnd what I'm looking for is I'm looking\nfor routes that are contiguous.\n\n1425\n01:16:41,070 --> 01:16:44,700\nThat are right next to each\nother in the address space and\n\n1426\n01:16:44,700 --> 01:16:46,871\nthat have the same destination.\n\n1427\n01:16:46,871 --> 01:16:53,621\nThese 4 networks here, 192,\n168, 1.0, 1.64, 1.68, 1.92.\n\n1428\n01:16:53,621 --> 01:16:57,369\nI know,\nI can summarize those into 1/24 but\n\n1429\n01:16:57,369 --> 01:17:02,060\nthe first two are on\nRouter 1 in one direction.\n\n1430\n01:17:02,060 --> 01:17:05,720\nAnd then the second two are on\nRouter 3 in the other direction.\n\n1431\n01:17:05,720 --> 01:17:09,070\nIf I summarize these into one route,\nit's gonna be a bad route.\n\n1432\n01:17:09,070 --> 01:17:12,080\nI'll need to summarize these\ninto two different routes.\n\n1433\n01:17:12,080 --> 01:17:14,830\nSo that I can specify\nthe different destination.\n\n1434\n01:17:15,830 --> 01:17:19,260\nBut if I look at 192.168.3,\nhere's four of them.\n\n1435\n01:17:19,260 --> 01:17:20,740\nThey're all in order.\n\n1436\n01:17:20,740 --> 01:17:22,920\nThey all have the same destination.\n\n1437\n01:17:22,920 --> 01:17:26,950\nThose I can wrap up into one big route,\nno problem and it'll work out great.\n\n1438\n01:17:28,300 --> 01:17:31,940\nThe only information I\ndon't get from this screen\n\n1439\n01:17:31,940 --> 01:17:34,940\nis what area these networks exist in.\n\n1440\n01:17:34,940 --> 01:17:37,580\nSo I need to be able to figure\nout what area they're in and\n\n1441\n01:17:37,580 --> 01:17:39,130\nyou can look at your link state database.\n\n1442\n01:17:39,130 --> 01:17:39,950\nAnd you can dig that up.\n\n1443\n01:17:39,950 --> 01:17:43,150\nWe'll cover the link state\ndatabase in the OSPF shows, but\n\n1444\n01:17:43,150 --> 01:17:44,510\nyou can also just look at the routers.\n\n1445\n01:17:44,510 --> 01:17:47,830\nIf you're creating good documentation,\nyou'll know which areas these are in.\n\n1446\n01:17:47,830 --> 01:17:52,050\nI know that these first\ntwo are in my area 0.\n\n1447\n01:17:52,050 --> 01:17:55,070\nAnd these next two are in area 1.\n\n1448\n01:17:55,070 --> 01:17:57,246\nAnd I know the 192.168.3s.\n\n1449\n01:17:57,246 --> 01:17:59,020\nThose are all in area 1.\n\n1450\n01:17:59,020 --> 01:18:02,850\nI need to know the area because\nwhen you create a summary route.\n\n1451\n01:18:02,850 --> 01:18:04,590\nYou have to attach it to an area.\n\n1452\n01:18:04,590 --> 01:18:08,788\nAnd you attach it to the area\nthat the routes came from.\n\n1453\n01:18:08,788 --> 01:18:10,511\nThat's a little counter-intuitive,\nI know for\n\n1454\n01:18:10,511 --> 01:18:12,940\nme it's hard to remember because I'm like,\nif I'm doing a summary.\n\n1455\n01:18:12,940 --> 01:18:15,500\nI'm thinking of advertising\nit to other people.\n\n1456\n01:18:15,500 --> 01:18:17,880\nI want to put it on their area,\nbut you don't.\n\n1457\n01:18:17,880 --> 01:18:21,705\nThe summary attaches to the area\nwhere the routes are sourced from.\n\n1458\n01:18:21,705 --> 01:18:23,163\nWhere they come from.\n\n1459\n01:18:23,163 --> 01:18:26,496\nSo if these 192.168.3 routes.\n\n1460\n01:18:26,496 --> 01:18:32,530\nIf those are all coming from area one then\nI need to attach the summary to area 1.\n\n1461\n01:18:32,530 --> 01:18:36,420\nSo going back to my diagram\nRouter 2 is connected to area 1.\n\n1462\n01:18:36,420 --> 01:18:38,330\nThose routes are coming from area 1.\n\n1463\n01:18:38,330 --> 01:18:40,700\nI'm gonna attach the summary right here.\n\n1464\n01:18:40,700 --> 01:18:43,288\nSummarize it and\nthrow it into the network.\n\n1465\n01:18:43,288 --> 01:18:45,705\nAll right.\nLet's see that in action.\n\n1466\n01:18:45,705 --> 01:18:50,430\nNow, the way we do this is we jump to our\nrouter and we need to get it attached.\n\n1467\n01:18:50,430 --> 01:18:52,570\nAnd it attaches to our OSPF process.\n\n1468\n01:18:52,570 --> 01:18:55,890\nRemember with RIP and EIGRP,\nwhere do we put the summary routes?\n\n1469\n01:18:55,890 --> 01:18:57,390\nDo it on the interface.\n\n1470\n01:18:57,390 --> 01:18:59,960\nBecause the routers only\ntalk to their neighbors.\n\n1471\n01:18:59,960 --> 01:19:01,730\nOSPF doesn't do that,\nit does the multicast.\n\n1472\n01:19:01,730 --> 01:19:03,710\nWho knows what interface it's gonna be on?\n\n1473\n01:19:03,710 --> 01:19:05,330\nSo we attach to the routing\nprocess instead.\n\n1474\n01:19:06,480 --> 01:19:09,880\nSo, I'm just gonna jump into router\nOSPF 1 which I think I was already in.\n\n1475\n01:19:09,880 --> 01:19:12,310\nBut whatever, better safe than sorry.\n\n1476\n01:19:12,310 --> 01:19:14,560\nAnd then we punch in our summary.\n\n1477\n01:19:14,560 --> 01:19:17,250\nAnd the summary command\nit's kind of a long one coz\n\n1478\n01:19:17,250 --> 01:19:19,140\nyou have a lot of information to provide.\n\n1479\n01:19:19,140 --> 01:19:20,010\nWe start with the area.\n\n1480\n01:19:21,380 --> 01:19:23,870\nI need to attach the summary to an area.\n\n1481\n01:19:23,870 --> 01:19:28,540\nSo for Area 1,\nI'm going to attach a summary.\n\n1482\n01:19:28,540 --> 01:19:30,980\nAnd so, if we take a look at\nthat command we say Area 1.\n\n1483\n01:19:30,980 --> 01:19:34,720\nAnd if you look at the commands, there's\nno command in here that says summary.\n\n1484\n01:19:34,720 --> 01:19:37,650\nWell that's because in in the OSPF\nstandard they use a different term for it.\n\n1485\n01:19:37,650 --> 01:19:39,540\nThey use Arrange.\n\n1486\n01:19:39,540 --> 01:19:41,371\nThat's the command that I'm looking for\nright there.\n\n1487\n01:19:41,371 --> 01:19:46,621\nSo i'm gonna say Area 1 arrange and\nspecify the network that I'm summarizing.\n\n1488\n01:19:46,621 --> 01:19:50,357\nSo I'm gonna summarize 192.168.3.0.\n\n1489\n01:19:50,357 --> 01:19:54,617\nAnd I'm gonna make it 255.255.255.0.\n\n1490\n01:19:54,617 --> 01:19:59,121\nI'm gonna roll up those 4/.6 into 1/24.\n\n1491\n01:19:59,121 --> 01:19:59,795\nRight?\n\n1492\n01:19:59,795 --> 01:20:00,421\nRoll em off.\n\n1493\n01:20:00,421 --> 01:20:01,153\nRight?\n\n1494\n01:20:01,153 --> 01:20:05,130\nNow, I can stop right here and\npress Enter.\n\n1495\n01:20:05,130 --> 01:20:08,370\nBut I might also want\nto manipulate the cost.\n\n1496\n01:20:08,370 --> 01:20:10,530\nAnd there's a reason for that.\n\n1497\n01:20:10,530 --> 01:20:15,393\nWhen you do a roll-up like this,\nit's gonna look at the individual routes.\n\n1498\n01:20:15,393 --> 01:20:19,440\nAnd it's gonna find the one\nwith the lowest cost.\n\n1499\n01:20:19,440 --> 01:20:22,416\nAnd the one with the lowest cost,\nthat's the cost that's gonna use.\n\n1500\n01:20:22,416 --> 01:20:23,130\nAll right.\n\n1501\n01:20:23,130 --> 01:20:23,912\nLet me show you what I mean.\n\n1502\n01:20:23,912 --> 01:20:25,710\nI'm gonna go to router three.\n\n1503\n01:20:25,710 --> 01:20:28,600\nAnd these guys are all on like ne0,\n\n1504\n01:20:28,600 --> 01:20:31,270\nactually let me figure out\nwhat interface they're on.\n\n1505\n01:20:33,470 --> 01:20:34,970\nE0/0.\n\n1506\n01:20:34,970 --> 01:20:37,400\nSo e0/0.1.\n\n1507\n01:20:37,400 --> 01:20:42,051\nSo I'm gonna go through each of these\ninterfaces and give them a different cost.\n\n1508\n01:20:42,051 --> 01:20:47,080\nRight?\nSo I'll say, ip ospf cost 1000 on this\n\n1509\n01:20:47,080 --> 01:20:52,150\none, and we'll do 2000 on this one.\n\n1510\n01:20:52,150 --> 01:20:55,910\nSo I'm sending different costs for\neach of these interfaces.\n\n1511\n01:20:55,910 --> 01:21:00,050\nAnd what it's gonna do is it's gonna look\nat them, and when it builds the summary.\n\n1512\n01:21:01,150 --> 01:21:05,160\nIt's gonna pick the lowest cost\nof all four of these interfaces.\n\n1513\n01:21:05,160 --> 01:21:08,970\nAnd so it'll say all right, if they have\na cost of 1,000, 2,000, 3,000 and 4,000.\n\n1514\n01:21:08,970 --> 01:21:14,160\nWhen I create the summary I'll\ngive the summary a cost of 1,000.\n\n1515\n01:21:14,160 --> 01:21:15,660\nI might not like that.\n\n1516\n01:21:15,660 --> 01:21:19,670\nI might want it to have a cost\nof something different, right?\n\n1517\n01:21:19,670 --> 01:21:20,970\nSo I can override that.\n\n1518\n01:21:20,970 --> 01:21:23,240\nAnd, for right now I'm actually\nnot gonna override it.\n\n1519\n01:21:23,240 --> 01:21:24,390\nI'll just leave it be like this.\n\n1520\n01:21:24,390 --> 01:21:26,550\nAnd then we'll come back and\noverride it here in a second.\n\n1521\n01:21:27,550 --> 01:21:30,790\nWhen I run that,\nit just created the summary, right?\n\n1522\n01:21:30,790 --> 01:21:34,970\nFor area one, I have a range of networks.\n\n1523\n01:21:34,970 --> 01:21:38,932\nThat are all gonna be\nrolled up into 192.168.3.0.\n\n1524\n01:21:38,932 --> 01:21:41,770\nWhen I advertise it to other areas.\n\n1525\n01:21:41,770 --> 01:21:45,400\nBe at area zero, area five,\narea 500, doesn't matter.\n\n1526\n01:21:45,400 --> 01:21:46,740\nWhen I advertise to any other area.\n\n1527\n01:21:46,740 --> 01:21:49,840\nI'm gonna advertise this\nsummary right here.\n\n1528\n01:21:49,840 --> 01:21:50,920\nAnd it should take effect right away.\n\n1529\n01:21:50,920 --> 01:21:53,973\nIf I jump over to router one.\n\n1530\n01:21:53,973 --> 01:21:57,304\nAnd do a show ip route ospf.\n\n1531\n01:21:57,304 --> 01:22:01,317\nI can see 192.168.3.0 right there.\n\n1532\n01:22:01,317 --> 01:22:03,820\nRolled up into a /24.\n\n1533\n01:22:03,820 --> 01:22:08,219\nI don't see the individual /26s anymore.\n\n1534\n01:22:08,219 --> 01:22:09,606\nJust the /24.\n\n1535\n01:22:09,606 --> 01:22:10,460\nAll right.\n\n1536\n01:22:10,460 --> 01:22:13,256\nAnd look at that cost, 1,020.\n\n1537\n01:22:13,256 --> 01:22:13,980\nRight.\n\n1538\n01:22:13,980 --> 01:22:17,700\nIt took the lowest cost of those\nfour networks, which was 1000.\n\n1539\n01:22:17,700 --> 01:22:22,400\nAnd then it added ten, for the ten\nmegabit connection between router two and\n\n1540\n01:22:22,400 --> 01:22:25,760\nthree, and then ten more, for\nthe connection between router one and\n\n1541\n01:22:25,760 --> 01:22:27,450\nrouter two, and I ended up with 1,020.\n\n1542\n01:22:27,450 --> 01:22:28,660\nRight?\n\n1543\n01:22:28,660 --> 01:22:32,200\nIt picked that lowest one,\nI might not like that.\n\n1544\n01:22:32,200 --> 01:22:36,260\nSo when I did that summary\nback here on router two,\n\n1545\n01:22:36,260 --> 01:22:38,420\nI could have added\na little bit more to it.\n\n1546\n01:22:38,420 --> 01:22:42,260\nAnd said cost and\nspecified a different cost value.\n\n1547\n01:22:42,260 --> 01:22:45,260\nAnd now the summary will have\na fixed cost that I assign.\n\n1548\n01:22:45,260 --> 01:22:48,170\n>> Now Don, Terry asked a good\nquestion in our chatroom.\n\n1549\n01:22:48,170 --> 01:22:51,705\nHe asked if the cost is really different,\nshould we actually try to summarize?\n\n1550\n01:22:51,705 --> 01:22:52,345\n>> It depends.\n\n1551\n01:22:53,565 --> 01:22:57,405\nIf there's more than one way to\nget to that network, then no.\n\n1552\n01:22:57,405 --> 01:23:01,105\nYou should let them stay out there and\nhave the different costs,\n\n1553\n01:23:01,105 --> 01:23:04,455\nthat way you can pick the most optimal\nway to get to the network, right?\n\n1554\n01:23:04,455 --> 01:23:08,365\nBut, if there's only one way to get to\nthe network, like in my diagram, right?\n\n1555\n01:23:08,365 --> 01:23:10,825\nIn my diagram,\nthe cost doesn't really matter,\n\n1556\n01:23:10,825 --> 01:23:13,285\ncuz there's only one way\nto get to that network.\n\n1557\n01:23:13,285 --> 01:23:14,980\nAnd in that scenario,\nyou should summarize.\n\n1558\n01:23:14,980 --> 01:23:15,920\nRight?\n\n1559\n01:23:15,920 --> 01:23:19,450\nIf there's only one way,\ncost really isn't a factor.\n\n1560\n01:23:19,450 --> 01:23:22,690\nYou're gonna go that way and summarize,\nyou'll get better performance.\n\n1561\n01:23:22,690 --> 01:23:23,500\nBut you're exactly right.\n\n1562\n01:23:23,500 --> 01:23:27,964\nIf we had different costs to\none single network, Right?\n\n1563\n01:23:27,964 --> 01:23:29,672\nSo like 192.168.3.64.\n\n1564\n01:23:29,672 --> 01:23:32,235\nLet's say I had a different cost to that.\n\n1565\n01:23:32,235 --> 01:23:35,620\nAnd I had two different ways to get there.\n\n1566\n01:23:35,620 --> 01:23:41,568\nNow I want that cost to be out there and\nI wouldn't wanna summarize that up.\n\n1567\n01:23:41,568 --> 01:23:43,050\nAll right.\n\n1568\n01:23:43,050 --> 01:23:47,040\nSo, in my scenario I've\nassigned my own cost now and\n\n1569\n01:23:47,040 --> 01:23:48,810\nthat allows me to influence\nthe different ways.\n\n1570\n01:23:48,810 --> 01:23:51,590\nMaybe I do have another summery that's out\nthere that goes to the same destination.\n\n1571\n01:23:51,590 --> 01:23:52,700\nI give it a different cost.\n\n1572\n01:23:52,700 --> 01:23:53,715\nI'm now influencing the path.\n\n1573\n01:23:53,715 --> 01:23:54,330\nRight.\n\n1574\n01:23:54,330 --> 01:23:55,640\nBut it's pretty easy to do that.\n\n1575\n01:23:57,180 --> 01:23:59,384\nNow the example I just did was classful.\n\n1576\n01:23:59,384 --> 01:23:59,892\nRight?\n\n1577\n01:23:59,892 --> 01:24:02,030\nI sub-netted to a /24.\n\n1578\n01:24:02,030 --> 01:24:05,030\nBut you can do VOSM too, just the same.\n\n1579\n01:24:05,030 --> 01:24:06,878\nIf I go back to my router two,\n\n1580\n01:24:06,878 --> 01:24:11,970\nmaybe I'll wanna summarize some\nof those 192.168 networks, right?\n\n1581\n01:24:11,970 --> 01:24:16,188\nSo if I take a look at\nmy routing table again,\n\n1582\n01:24:16,188 --> 01:24:20,980\nI might wanna summarize these first\ntwo networks coming out of area zero.\n\n1583\n01:24:20,980 --> 01:24:23,930\nAnd I might wanna summarize these next\ntwo networks going out of area one.\n\n1584\n01:24:23,930 --> 01:24:24,970\nThose are my /26s.\n\n1585\n01:24:24,970 --> 01:24:28,000\nI might wanna summarize them to /25.\n\n1586\n01:24:28,000 --> 01:24:34,950\nSo I can enter in a few more commands.\n\n1587\n01:24:34,950 --> 01:24:40,586\nI can say area 0 range 192.162.1.0\nwith a 255.255.255.128.\n\n1588\n01:24:40,586 --> 01:24:41,169\nRight.\n\n1589\n01:24:41,169 --> 01:24:46,069\nAnd I’ll go ahead and\ngive it a cost of 5,000, why not.\n\n1590\n01:24:46,069 --> 01:24:47,700\nAll right.\n\n1591\n01:24:47,700 --> 01:24:50,790\nAnd then I can do the same thing for\nthe upper half.\n\n1592\n01:24:50,790 --> 01:24:57,790\nThe upper half,\nis actually coming out of area one.\n\n1593\n01:24:57,790 --> 01:25:01,580\nIt's coming out of the other area, so\nI've got to change my area number for\n\n1594\n01:25:01,580 --> 01:25:03,170\nwhere I'm summarizing that.\n\n1595\n01:25:03,170 --> 01:25:03,780\nRight?\n\n1596\n01:25:03,780 --> 01:25:05,660\nSo that they'll advertise\nit the other direction.\n\n1597\n01:25:08,040 --> 01:25:12,120\nSo, what I'm doing is if I\nupdate my diagram, right.\n\n1598\n01:25:12,120 --> 01:25:17,470\nThese, whoops,\nsome of that can go back, there we go.\n\n1599\n01:25:17,470 --> 01:25:18,810\nThese last two networks right here,\n\n1600\n01:25:18,810 --> 01:25:22,280\nthese actually aren't in\narea zero anymore, right?\n\n1601\n01:25:22,280 --> 01:25:24,849\nWe moved those over here\nearlier in the show.\n\n1602\n01:25:26,933 --> 01:25:29,600\nAnd so they're really here on this\nguy's list, let's just add them in.\n\n1603\n01:25:29,600 --> 01:25:33,990\nWe have to make our cloud a little bigger,\nwe're running out of cloud space.\n\n1604\n01:25:35,410 --> 01:25:36,970\nWe gotta upgrade our cloud, Ronnie.\n\n1605\n01:25:36,970 --> 01:25:37,470\n>> Yes.\n\n1606\n01:25:40,400 --> 01:25:41,800\n>> Well, you know it does not want to-\n>> No [LAUGH].\n\n1607\n01:25:41,800 --> 01:25:45,010\n>> It's absolutely saying wait a minute,\nthose networks aren't contiguous,\n\n1608\n01:25:45,010 --> 01:25:46,240\ndon't do that.\n\n1609\n01:25:46,240 --> 01:25:47,380\nThere we go.\nAll right.\n\n1610\n01:25:47,380 --> 01:25:48,720\nSo that's really what I've got.\n\n1611\n01:25:48,720 --> 01:25:50,260\nAnd so these last two, these 192.168.1s.\n\n1612\n01:25:50,260 --> 01:25:54,090\nThose guys are in area one,\nthat's why I had to change that.\n\n1613\n01:25:54,090 --> 01:25:56,790\nI had to manipulate it a little bit and\nget that set.\n\n1614\n01:25:56,790 --> 01:25:58,790\nSo that's in place,\nthose networks are there.\n\n1615\n01:25:58,790 --> 01:26:00,588\nOh, I guess I moved that when\nmy head was covering it.\n\n1616\n01:26:00,588 --> 01:26:03,480\nThere we go.\nSo those are in place and\n\n1617\n01:26:03,480 --> 01:26:05,020\nnow I'm summarizing there too.\n\n1618\n01:26:05,020 --> 01:26:08,440\nAnd if I look at my routers,\nlet's go see how that all looks.\n\n1619\n01:26:08,440 --> 01:26:09,955\nNot much changes here on router two.\n\n1620\n01:26:09,955 --> 01:26:11,110\nRight?\n\n1621\n01:26:11,110 --> 01:26:16,380\nIf I look at my routing table,\nright, not too much is different.\n\n1622\n01:26:16,380 --> 01:26:18,190\nI do see my summaries.\n\n1623\n01:26:18,190 --> 01:26:22,170\nThere's my summary for 192.168.3.0 and\nit is pointing to null zero,\n\n1624\n01:26:22,170 --> 01:26:24,300\nwe expect to see that right?\n\n1625\n01:26:24,300 --> 01:26:28,650\nAnd we've got our individual\nroutes still turning up because\n\n1626\n01:26:28,650 --> 01:26:30,440\nI'm in that area, right.\n\n1627\n01:26:30,440 --> 01:26:33,000\nThis is a border router so\nit's in that area,\n\n1628\n01:26:33,000 --> 01:26:35,880\nit's gonna see the individual\nroutes as well as the summary.\n\n1629\n01:26:35,880 --> 01:26:40,230\nBut when I go outside the area,\nwe'll just see that summary.\n\n1630\n01:26:40,230 --> 01:26:42,823\nIf I look on router one.\n\n1631\n01:26:42,823 --> 01:26:49,786\nAnd pull up my routes,\n192.168.3.0 is just wrapped up into 1/24.\n\n1632\n01:26:49,786 --> 01:26:51,527\nAnd 192.168.1.0.\n\n1633\n01:26:51,527 --> 01:26:58,490\nI've got it right here, and\ndid I type in the wrong sub-net mask?\n\n1634\n01:26:58,490 --> 01:27:00,650\nI've got an inner area route for\n192.168.1.0, and it's a /24, so\n\n1635\n01:27:00,650 --> 01:27:04,450\nit actually grabbed a little more\nthan I wanted there, didn't it?\n\n1636\n01:27:04,450 --> 01:27:06,370\nLet me go double check my work.\n\n1637\n01:27:12,213 --> 01:27:13,861\nWhoops.\nLet's go verify here that I put\n\n1638\n01:27:13,861 --> 01:27:15,900\nit in with the right mask.\n\n1639\n01:27:15,900 --> 01:27:17,680\nI did not.\nLook at my mistake.\n\n1640\n01:27:17,680 --> 01:27:21,250\nOh no, no that is right.\n\n1641\n01:27:21,250 --> 01:27:27,058\nI've got area 1 range\n192.168.1.128 255.255.255.128.\n\n1642\n01:27:27,058 --> 01:27:30,520\nAnd the cost, so that is right.\n\n1643\n01:27:30,520 --> 01:27:33,090\nI might have a timing issue going on.\n\n1644\n01:27:33,090 --> 01:27:34,560\nLet me see.\n\n1645\n01:27:34,560 --> 01:27:36,410\nPretty sure I didn't leave anything out.\n\n1646\n01:27:36,410 --> 01:27:39,850\nSo, we just need to wait for\nthat to sort itself out.\n\n1647\n01:27:39,850 --> 01:27:42,170\nSo It's still picking it\nup as a /24 from earlier.\n\n1648\n01:27:42,170 --> 01:27:43,260\nSo, it might need to sort that out.\n\n1649\n01:27:43,260 --> 01:27:46,930\nOSPF is pretty good about that about\nworking things out on its own.\n\n1650\n01:27:46,930 --> 01:27:50,420\nBecause of the network that it gets, so\nit’ll have to kinda figure that out.\n\n1651\n01:27:50,420 --> 01:27:52,864\nBut basically it’s doing my summaries,\nputting them in place,\n\n1652\n01:27:52,864 --> 01:27:53,850\nthings are working well.\n\n1653\n01:27:53,850 --> 01:27:59,159\nRight?\nAnd that was all using area range command.\n\n1654\n01:27:59,159 --> 01:28:02,434\n>> Now Don, another question came\nup from Terry in our chat room.\n\n1655\n01:28:02,434 --> 01:28:06,252\nYes, is there really any detriment\nto just leaving that default\n\n1656\n01:28:06,252 --> 01:28:09,350\ncost regardless as you\nstart typing them in?\n\n1657\n01:28:09,350 --> 01:28:10,550\n>> No, you can leave it at the default.\n\n1658\n01:28:10,550 --> 01:28:12,030\nIf you leave it at the default,\n\n1659\n01:28:12,030 --> 01:28:15,750\nit will just grab the lowest cost of the\nsummarized routes and it'll run with that.\n\n1660\n01:28:15,750 --> 01:28:18,405\nAnd there's only one way in and\nout, that's fine, right?\n\n1661\n01:28:18,405 --> 01:28:21,880\nIt's not really gonna influence things,\nthere's just one destination.\n\n1662\n01:28:21,880 --> 01:28:24,898\nBut if there's more than one way to get\nthere, there might be a better option out\n\n1663\n01:28:24,898 --> 01:28:28,072\nthere on the network, and we don't see\nthat because we're using this lower cost.\n\n1664\n01:28:28,072 --> 01:28:29,831\nAnd, so that's the side effect you get.\n\n1665\n01:28:29,831 --> 01:28:33,750\nAll right, now what I've summarized\nright there, those were internal routes.\n\n1666\n01:28:33,750 --> 01:28:38,540\nThose were routes that were inside\nof my OSPF environment, right?\n\n1667\n01:28:38,540 --> 01:28:43,330\nThat doesn't work with routes that are\ncoming from an external autonomous system.\n\n1668\n01:28:43,330 --> 01:28:47,660\nRoutes that are being\nredistributed from EIGRP or RIP,\n\n1669\n01:28:47,660 --> 01:28:50,738\nother OSPF processes, maybe-\n>> Connected.\n\n1670\n01:28:50,738 --> 01:28:52,110\n[LAUGH]\n>> Connected, right?\n\n1671\n01:28:52,110 --> 01:28:56,154\nSo I brought those in, and looking at my\nother routers, if I look like here on\n\n1672\n01:28:56,154 --> 01:29:02,614\nrouter three, It's got those external\nroutes, those O E2s right there.\n\n1673\n01:29:02,614 --> 01:29:06,200\nThey've all got the same cost,\nthey've all got the same destination.\n\n1674\n01:29:06,200 --> 01:29:09,177\nThere really is no point for\nme to have all four of those in there,\n\n1675\n01:29:09,177 --> 01:29:11,290\nI should probably wrap those up,\nall right?\n\n1676\n01:29:11,290 --> 01:29:15,212\nIn reality I might choose to\nprune those off all together and\n\n1677\n01:29:15,212 --> 01:29:18,363\nthat way I can put in a default gateway,\nright?\n\n1678\n01:29:18,363 --> 01:29:19,572\nA gateway of last resort.\n\n1679\n01:29:19,572 --> 01:29:22,784\nBecause it's an external route, they don't\nnecessarily need to know the individual\n\n1680\n01:29:22,784 --> 01:29:24,720\nthings that are out there\non this external network,\n\n1681\n01:29:24,720 --> 01:29:27,730\nthey could just use me as the gateway and\nI'll get them there, right?\n\n1682\n01:29:27,730 --> 01:29:31,170\nSo I could choose to\nsuppress those altogether.\n\n1683\n01:29:31,170 --> 01:29:33,780\nWhy even redistribute them in,\nif that's the case?\n\n1684\n01:29:33,780 --> 01:29:35,960\nBut if I've got more than\none way to get there,\n\n1685\n01:29:35,960 --> 01:29:38,610\nand I want those advertised\nin I can go ahead and\n\n1686\n01:29:38,610 --> 01:29:42,450\nsummarize these, advertise them in,\nmake that network table a little smaller.\n\n1687\n01:29:42,450 --> 01:29:48,010\nBut the area command doesn't work,\nbecause what area are those in?\n\n1688\n01:29:48,010 --> 01:29:48,740\n>> None.\n\n1689\n01:29:48,740 --> 01:29:49,690\n>> Yeah, they're not in an area.\n\n1690\n01:29:49,690 --> 01:29:54,340\nIf we look at router two's config, when I\nlook at my OSPF configuration right here,\n\n1691\n01:29:54,340 --> 01:29:58,280\nnormally I use network blah, blah,\nblah, area 0, area 1, right?\n\n1692\n01:29:58,280 --> 01:29:59,700\nWe specify an area.\n\n1693\n01:29:59,700 --> 01:30:02,650\nBut when I redistribute,\nyou don't pick an area.\n\n1694\n01:30:02,650 --> 01:30:05,050\nSo the area range command won't work.\n\n1695\n01:30:05,050 --> 01:30:08,560\nSo instead, we have to use\nthe summary address command.\n\n1696\n01:30:08,560 --> 01:30:11,890\nAnd it works a little more like RIP and\nEIGRP did.\n\n1697\n01:30:11,890 --> 01:30:16,890\nSo it's done right here on my system.\n\n1698\n01:30:16,890 --> 01:30:22,042\nWhen I go in to put in that summary\ncommand, I just go into router OSPF 1,\n\n1699\n01:30:22,042 --> 01:30:26,686\nlike I've got right here, and\nI punch in summary-address, and\n\n1700\n01:30:26,686 --> 01:30:29,738\nthen the network that I want to summarize.\n\n1701\n01:30:29,738 --> 01:30:31,206\nAnd, so this is-\n>> 2.\n\n1702\n01:30:31,206 --> 01:30:33,740\n>> 2.0, thank you.\n\n1703\n01:30:33,740 --> 01:30:35,600\nAnd, so I'll punch that in.\n\n1704\n01:30:35,600 --> 01:30:39,892\nSo I'm just saying, for this external\nnetwork, I wanna go ahead and\n\n1705\n01:30:39,892 --> 01:30:43,965\nsummarize it to 192.168.2.0,\nsummary-address,\n\n1706\n01:30:43,965 --> 01:30:47,530\nfollowed by the network and\nits subnet mask, all right?\n\n1707\n01:30:47,530 --> 01:30:49,758\nAnd, again,\nthis is being done on the border route or\n\n1708\n01:30:49,758 --> 01:30:52,110\nthe one that's actually\nbringing in this data.\n\n1709\n01:30:52,110 --> 01:30:54,710\nThis is what you'd run on an ASBR.\n\n1710\n01:30:54,710 --> 01:30:58,740\nI'm an autonomous system border router,\nbecause not only am I an ABR, or\n\n1711\n01:30:58,740 --> 01:31:01,440\na border router between two areas,\nbut I'm also\n\n1712\n01:31:01,440 --> 01:31:04,650\nredistributing in these routes from\nan external source, that makes me an ASBR.\n\n1713\n01:31:05,750 --> 01:31:08,840\nSo, that's the command for\nit, summary-address.\n\n1714\n01:31:08,840 --> 01:31:14,082\nAnd if I take a look at router 3,\njust a moment ago I had four O E2s,\n\n1715\n01:31:14,082 --> 01:31:19,606\nright, those external routes, and\nnow if I look at my routing table,\n\n1716\n01:31:19,606 --> 01:31:24,405\nI just have one, 192.168.2.0/24, right?\n\n1717\n01:31:24,405 --> 01:31:29,210\nThat means in OSPF, we have two\ndifferent commands for summarizing.\n\n1718\n01:31:29,210 --> 01:31:32,734\nThe area of range command,\nfor internal routes, and\n\n1719\n01:31:32,734 --> 01:31:37,270\nthe summary-address command,\nfor external routes.\n\n1720\n01:31:37,270 --> 01:31:41,940\nAnd let me tell you, guys, Cisco loves\nto put these questions on the exam.\n\n1721\n01:31:41,940 --> 01:31:43,763\nBecause if you don't\nknow what you're doing,\n\n1722\n01:31:43,763 --> 01:31:46,189\nif you're one of those people\nthat just use the question mark.\n\n1723\n01:31:46,189 --> 01:31:49,437\nYou hit a simulator question, it tells you\nyou need to summarize the OSPF route and\n\n1724\n01:31:49,437 --> 01:31:50,390\nyou do a question mark.\n\n1725\n01:31:50,390 --> 01:31:52,738\nAre you gonna look for the area command?\n\n1726\n01:31:52,738 --> 01:31:55,920\nYou're gonna see summary-address,\nthat's the one I want.\n\n1727\n01:31:55,920 --> 01:31:59,220\nWell, if you use summary-address for\nan internal route, it doesn't work.\n\n1728\n01:31:59,220 --> 01:32:00,550\nIt won't summarize.\n\n1729\n01:32:00,550 --> 01:32:02,670\nAnd you'll be banging your head against\nthe table trying to figure out why,\n\n1730\n01:32:02,670 --> 01:32:04,150\nand it won't work.\n\n1731\n01:32:04,150 --> 01:32:08,470\nAnd if you use the area range command for\nan external network, it won't work.\n\n1732\n01:32:08,470 --> 01:32:11,880\nBecause there's no area, so\nyou say area and a number, and then range.\n\n1733\n01:32:11,880 --> 01:32:13,270\nWhatever number you put is wrong.\n\n1734\n01:32:13,270 --> 01:32:15,040\nIt's not gonna work, all right?\n\n1735\n01:32:15,040 --> 01:32:17,908\nSo those are the two most\ncommon problems right there.\n\n1736\n01:32:17,908 --> 01:32:25,070\nSummary-addresses for external, area range\nis for internal, keep those straight.\n\n1737\n01:32:25,070 --> 01:32:27,020\nThe other common mistake that people make,\n\n1738\n01:32:27,020 --> 01:32:31,200\nis when you use the area range command,\narea followed by an area number,\n\n1739\n01:32:31,200 --> 01:32:35,065\nthat number needs to be the area that\ncontains the routes you're summarizing,\n\n1740\n01:32:35,065 --> 01:32:38,450\nthe source of the routes,\nnot the destination, real common mistake.\n\n1741\n01:32:38,450 --> 01:32:43,072\nIt will not give you a warning if you\npick the wrong area, it just won't work.\n\n1742\n01:32:43,072 --> 01:32:46,960\nSo you put the command in there and you're\nlike, why are my summaries not showing up.\n\n1743\n01:32:46,960 --> 01:32:48,340\nYou picked the wrong area number,\nall right?\n\n1744\n01:32:48,340 --> 01:32:51,680\nIt's gotta be the area\nwhere the routes came from.\n\n1745\n01:32:51,680 --> 01:32:55,070\nSo little caveats there that\nchange what OSPF is doing.\n\n1746\n01:32:55,070 --> 01:32:57,070\nThe end result is that you\nsummarize the routes, right?\n\n1747\n01:32:57,070 --> 01:33:00,460\nJust like the EIGRP and RIP, that's our\ngoal, we wanna summarize this stuff.\n\n1748\n01:33:00,460 --> 01:33:04,180\nBut how we do it is very\ndifferent under OSPF.\n\n1749\n01:33:04,180 --> 01:33:07,290\n>> Yeah, and don't forget to make\nsure that you remember where you also\n\n1750\n01:33:07,290 --> 01:33:09,230\ncan summarize an OSPF.\n\n1751\n01:33:09,230 --> 01:33:11,039\nCuz if you try and\nsummarize on every single router,\n\n1752\n01:33:11,039 --> 01:33:13,480\nit's not gonna work in the way\nyou think it's gonna be.\n\n1753\n01:33:13,480 --> 01:33:17,760\nSo knowing that you do it on the ABR,\nand the ASBR is also critical, too.\n\n1754\n01:33:17,760 --> 01:33:18,260\n>> Yep.\n\n1755\n01:33:19,320 --> 01:33:22,030\nAll right, well,\nI know that's a lot to take in, right?\n\n1756\n01:33:22,030 --> 01:33:25,830\nAnd we are gonna see more about summary\nroutes, especially when we get into OSPF\n\n1757\n01:33:25,830 --> 01:33:29,765\nstub areas, not so stubby areas, and\nall that other good stuff, the NSSAs.\n\n1758\n01:33:29,765 --> 01:33:31,740\nThere's really, really cool stuff in OSPF.\n\n1759\n01:33:31,740 --> 01:33:36,690\nSo we'll revisit this again as we go into\nsome of those more fancified details.\n\n1760\n01:33:36,690 --> 01:33:40,460\nBut, for now, route summarization,\nwe kinda covered it.\n\n1761\n01:33:40,460 --> 01:33:41,760\nYou got a chance to see it.\n\n1762\n01:33:41,760 --> 01:33:45,910\nRemember, EIGRP and RIP,\nthey have auto-summarization.\n\n1763\n01:33:45,910 --> 01:33:49,060\nIt's on by default in RIP,\nit's off by default in EIGRP,\n\n1764\n01:33:49,060 --> 01:33:50,900\nyou can turn them on and off.\n\n1765\n01:33:50,900 --> 01:33:56,260\nIf you do manual summarization in EIGRP\nand RIP, it's done on the interface.\n\n1766\n01:33:56,260 --> 01:33:59,810\nWith OSPF, it's always manual,\nthere's no automatic, and\n\n1767\n01:33:59,810 --> 01:34:03,190\nit's done on the routing protocol,\nnot the interface,\n\n1768\n01:34:03,190 --> 01:34:05,610\nbecause of the different ways\nthat the protocols function.\n\n1769\n01:34:05,610 --> 01:34:08,220\nSo bear that in mind,\nwork with it, practice.\n\n1770\n01:34:08,220 --> 01:34:11,820\nLab it up, throw up some GNS3 routers or\nwhatever and experiment with it and\n\n1771\n01:34:11,820 --> 01:34:13,450\nget a chance to see how that functions.\n\n1772\n01:34:13,450 --> 01:34:16,362\nIt’s pretty neat stuff and,\nin a massive network,\n\n1773\n01:34:16,362 --> 01:34:20,993\nif you can take a routing table with 900\nroutes and shrink it down to 80 routes,\n\n1774\n01:34:20,993 --> 01:34:23,196\nit’s a big performance improvement.\n\n1775\n01:34:23,196 --> 01:34:25,309\nYou really do improve the performance\nof your equipment, and\n\n1776\n01:34:25,309 --> 01:34:27,460\nthat’s what summary routes are all about.\n\n1777\n01:34:27,460 --> 01:34:29,220\nSo definitely take advantage of that.\n\n1778\n01:34:30,470 --> 01:34:32,030\nAll right, well Ronnie,\nthat’s probably a pretty good spot for\n\n1779\n01:34:32,030 --> 01:34:32,840\nus to wrap this one up.\n\n1780\n01:34:32,840 --> 01:34:34,280\nCan you think of anything\nelse to throw in?\n\n1781\n01:34:34,280 --> 01:34:37,400\n>> Nope, just again, more practice is\nthe key here, the more that you do it,\n\n1782\n01:34:37,400 --> 01:34:39,590\nthe more that it becomes muscle memory,\nthe better it’s gonna be for\n\n1783\n01:34:39,590 --> 01:34:40,110\nyou on the exam.\n\n1784\n01:34:41,210 --> 01:34:41,980\n>> All right, well, actually,\n\n1785\n01:34:41,980 --> 01:34:44,800\ngot another question here in\nthe chat room before we wrap up.\n\n1786\n01:34:44,800 --> 01:34:48,159\nSo we’ve got the cost is not relevant\nfrom the point of view of how the address\n\n1787\n01:34:48,159 --> 01:34:49,697\nare advertised to other routers.\n\n1788\n01:34:49,697 --> 01:34:53,813\nBut once the traffic gets to\nthe network that is attached,\n\n1789\n01:34:53,813 --> 01:34:59,475\nthen the cost is not the default cost but\nthe real cost and all is well, correct?\n\n1790\n01:34:59,475 --> 01:35:04,970\nYes, yes, that's technically true,\nbut what happens is in OSPF,\n\n1791\n01:35:04,970 --> 01:35:09,180\nwhen you summarize, you attach that cost,\nif you choose to, right.\n\n1792\n01:35:09,180 --> 01:35:12,500\nAnd that cost is kind of made up and\nso it could be bad, it could be good.\n\n1793\n01:35:12,500 --> 01:35:13,830\nBut let's just assume it's good, right.\n\n1794\n01:35:13,830 --> 01:35:15,840\nThat you picked a valid value.\n\n1795\n01:35:15,840 --> 01:35:21,113\nAs it gets advertised out, at each link\nalong the journey, that cost goes up.\n\n1796\n01:35:21,113 --> 01:35:24,620\nAnd that's why when I set mine\nto 1000 it showed as 1020.\n\n1797\n01:35:24,620 --> 01:35:27,890\nAnd, so\nit is tracking that to find the best\n\n1798\n01:35:27,890 --> 01:35:31,420\npossible way to get there based on\nthe information that it's got and, for\n\n1799\n01:35:31,420 --> 01:35:34,590\nthe most part, yeah, it works out well and\nyou have no problem.\n\n1800\n01:35:34,590 --> 01:35:39,030\nBut if in monitoring your network you see\nsuboptimal routing where you're going\n\n1801\n01:35:39,030 --> 01:35:43,070\na poor choice to get to that destination,\nit might be that cost is not being\n\n1802\n01:35:43,070 --> 01:35:45,570\nreflected properly, and that's where\nyou have to go in and override it.\n\n1803\n01:35:45,570 --> 01:35:48,480\nBut, yes, for\nthe most part what you said is true.\n\n1804\n01:35:48,480 --> 01:35:51,210\nOnce you assign that cost and\nadvertise it out, OSPF is\n\n1805\n01:35:51,210 --> 01:35:55,020\nstill tracking the links beyond that and\nit will make the accurate decision.\n\n1806\n01:35:55,020 --> 01:35:57,321\nIt will do a good job, for the most part.\n\n1807\n01:35:57,321 --> 01:35:59,930\nSo, yep.\n\n1808\n01:35:59,930 --> 01:36:01,770\nBut, yeah, that's basically it.\n\n1809\n01:36:01,770 --> 01:36:05,950\nAnd Terry asked about our write-up\non that, I'll post my show notes.\n\n1810\n01:36:05,950 --> 01:36:08,420\nWe write up all this stuff,\nI break it down by protocol so\n\n1811\n01:36:08,420 --> 01:36:10,585\nyou'll get examples of the commands and\nthe other information.\n\n1812\n01:36:10,585 --> 01:36:14,005\nIt's all tucked away right in there,\nnice and easy to use.\n\n1813\n01:36:14,005 --> 01:36:15,261\nWe just updated in our website so\n\n1814\n01:36:15,261 --> 01:36:17,780\nyou actually get PDFs of these\nthings attached to the episodes.\n\n1815\n01:36:17,780 --> 01:36:19,247\nWhich is pretty cool, I think, well,\n\n1816\n01:36:19,247 --> 01:36:21,255\nI guess it's cool if you're\ninto that kind of thing.\n\n1817\n01:36:22,657 --> 01:36:24,867\nAll right,\nwell let me do a quick thank you to Terry.\n\n1818\n01:36:24,867 --> 01:36:26,627\nThose are some great\nquestions this episode, and\n\n1819\n01:36:26,627 --> 01:36:29,097\nI wanna remind the rest of you\nguys to take advantage of that.\n\n1820\n01:36:29,097 --> 01:36:32,647\nLive during the show,\nyou can go to itpro.tv/live, and\n\n1821\n01:36:32,647 --> 01:36:34,717\nyou'll see the chat box beneath the video.\n\n1822\n01:36:34,717 --> 01:36:37,457\nAsk us questions, we love it, right?\n\n1823\n01:36:37,457 --> 01:36:40,897\nIt's a great thing for us,\nit helps us have things to talk about, but\n\n1824\n01:36:40,897 --> 01:36:41,777\nit also helps you guys.\n\n1825\n01:36:41,777 --> 01:36:44,027\nWe don't want you stumbling\nthrough with questions and\n\n1826\n01:36:44,027 --> 01:36:45,497\nnot having anybody to ask for help.\n\n1827\n01:36:45,497 --> 01:36:47,970\nSo ask us, it's what we're here for.\n\n1828\n01:36:47,970 --> 01:36:50,420\nIf you're watching this recorded that\nis a little more challenging, right?\n\n1829\n01:36:50,420 --> 01:36:52,250\nYou don't necessarily\nhave the chatroom there.\n\n1830\n01:36:52,250 --> 01:36:55,200\nSo take advantage of our Q and A forums.\n\n1831\n01:36:55,200 --> 01:36:58,940\nYou can hit the Q and A link at the top of\nevery page, it'll take you to the forums.\n\n1832\n01:36:58,940 --> 01:37:01,640\nPost your questions there and\nwe can monitor and answer after the show.\n\n1833\n01:37:01,640 --> 01:37:04,308\nWe wanna make sure you guys get\nthe answers to your questions so\n\n1834\n01:37:04,308 --> 01:37:07,613\nthat you go into that testing booth\nwith solutions, not problems, right?\n\n1835\n01:37:07,613 --> 01:37:08,446\nThat's our goal.\n\n1836\n01:37:08,446 --> 01:37:12,489\nSo take advantage of that resource,\nit is there for you.\n\n1837\n01:37:12,489 --> 01:37:14,571\nAll right, well I hope you\nguys enjoyed today's episode.\n\n1838\n01:37:14,571 --> 01:37:16,988\nSigning off for ITProTV, I'm Don Pezet.\n\n1839\n01:37:16,988 --> 01:37:17,821\n>> And I'm Ronnie Wong.\n\n1840\n01:37:17,821 --> 01:37:19,071\n>> And we'll see you next time.\n\n1841\n01:37:19,071 --> 01:37:29,071\n[MUSIC]\n\n",
          "vimeoId": "119441395"
        },
        {
          "description": "Normal routing will only do destination routing, but policy based routing uses customized policies to take certain actions based on if traffic meets a specified criteria. Viewers will hear about policy based routing and the types of things it can be influenced by like source addresses, inbound interfaces, and protocols.",
          "length": "3273",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/ccnproute/cisco-ccnproute-3-12-policy_based_routing-021215.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/ccnproute/cisco-ccnproute-3-12-policy_based_routing-021215-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/ccnproute/cisco-ccnproute-3-12-policy_based_routing-021215-sm.jpg",
          "title": "Policy Based Routing",
          "transcript": "1\n00:00:00,250 --> 00:00:10,250\n[MUSIC]\n\n2\n00:00:15,260 --> 00:00:22,470\n[SOUND]\n\n3\n00:00:22,470 --> 00:00:32,470\n[MUSIC]\n\n4\n00:00:33,750 --> 00:00:36,789\nAll right, good morning,\ngood afternoon and good evening and\n\n5\n00:00:36,789 --> 00:00:38,980\nwelcome back to another\nepisode of ITProTV.\n\n6\n00:00:38,980 --> 00:00:41,890\nI'm your host, Don Pezet,\nback again with Mr. Ronnie Wong.\n\n7\n00:00:41,890 --> 00:00:42,520\nHow's it going, Ronnie?\n\n8\n00:00:42,520 --> 00:00:47,700\n>> It is going well, learning a little bit\nof Ferengi acquisition rules this morning,\n\n9\n00:00:47,700 --> 00:00:48,380\nnumber 500.\n\n10\n00:00:48,380 --> 00:00:50,290\nAnd still on my way way to 501.\n\n11\n00:00:50,290 --> 00:00:54,420\n>> You know nobody is gonna believe\nthat you have Star Trek nerd credit.\n\n12\n00:00:54,420 --> 00:00:56,280\n>> I do not.\n>> You got the amount of rules wrong.\n\n13\n00:00:56,280 --> 00:00:58,122\n>> That is true.\n\n14\n00:00:58,122 --> 00:01:02,340\n>> All right, well we are diving\nright back into CCNP route and\n\n15\n00:01:02,340 --> 00:01:05,498\nwe're gonna pick up with\none of my favorite things.\n\n16\n00:01:05,498 --> 00:01:08,403\nThere's this technology that,\n\n17\n00:01:08,403 --> 00:01:14,220\njust numerous reasons to love this,\nIt's policy based routing.\n\n18\n00:01:14,220 --> 00:01:18,378\nAnd policy based routing is the full\nobjective is 3.12 confiugre and\n\n19\n00:01:18,378 --> 00:01:20,380\nverify policy based routing.\n\n20\n00:01:20,380 --> 00:01:24,120\nFirst off, policy based routing is not\nsomething that a lot of people know about.\n\n21\n00:01:24,120 --> 00:01:27,800\nSo right there it kind of makes it a\nfringe topic which makes me like it more,\n\n22\n00:01:27,800 --> 00:01:29,370\nand I kind of like the fringe stuff.\n\n23\n00:01:29,370 --> 00:01:32,040\nSecondly if we abbreviated PBR which is\n\n24\n00:01:32,040 --> 00:01:34,790\nwhat most people will refer to\nPabst Blue Ribbon the beer as.\n\n25\n00:01:34,790 --> 00:01:37,650\nSo, it's a routing technology\nnamed after a beer.\n\n26\n00:01:37,650 --> 00:01:38,940\nHow awesome is that?\n\n27\n00:01:38,940 --> 00:01:43,369\n>> Yeah, that is how do you combine\nhobbies together right there.\n\n28\n00:01:43,369 --> 00:01:45,115\n[LAUGH].\n\n29\n00:01:45,115 --> 00:01:50,190\n>> I can honestly say that I have\ndeployed PBR while drinking PBR.\n\n30\n00:01:50,190 --> 00:01:54,920\nSo, I've gone the full route, but\nwe'll put the beer part aside for now.\n\n31\n00:01:54,920 --> 00:01:58,320\nPolicy based routing though is really,\nreally slick stuff.\n\n32\n00:01:59,630 --> 00:02:03,230\nBasically we've been learning in all the\nvarious segments that we've done here for\n\n33\n00:02:03,230 --> 00:02:06,700\nCCNP route that a Cisco router,\ncan route things.\n\n34\n00:02:06,700 --> 00:02:07,760\nThat's what it does.\n\n35\n00:02:07,760 --> 00:02:10,340\nIt's core functionality\nis to route things.\n\n36\n00:02:10,340 --> 00:02:16,175\nBut in every example up until this point,\nrouting has always worked one way.\n\n37\n00:02:16,175 --> 00:02:18,255\nYou look at a packet.\n\n38\n00:02:18,255 --> 00:02:20,675\nYou look at the destination of the packet.\n\n39\n00:02:20,675 --> 00:02:22,385\nWhere's it going to?\n\n40\n00:02:22,385 --> 00:02:25,280\nYou run that destination\ndown your routing table.\n\n41\n00:02:25,280 --> 00:02:28,720\nAnd you look for\nthe prefix in the routing table that most\n\n42\n00:02:28,720 --> 00:02:31,700\nclosely matches the destination of\nthe packet that we're sending, right?\n\n43\n00:02:31,700 --> 00:02:34,810\nYou're looking for the most\nspecific prefix that you can find.\n\n44\n00:02:34,810 --> 00:02:39,000\nAnd when you find a match,\nyou look at what the next hop should be.\n\n45\n00:02:39,000 --> 00:02:40,840\nThe next hop is defined\nin your routing table.\n\n46\n00:02:40,840 --> 00:02:43,540\nThe next hop would be the IP\naddress of another router, or\n\n47\n00:02:43,540 --> 00:02:45,140\nan interface to go out of.\n\n48\n00:02:45,140 --> 00:02:48,896\nAnd if there's no match, then you go\nto that gateway of last resort and\n\n49\n00:02:48,896 --> 00:02:52,220\nthat defines the next hop and\nwe forward it along, all right?\n\n50\n00:02:52,220 --> 00:02:57,114\nIf you're doing static routing EIGRP,\nOSPF, RIP,\n\n51\n00:02:57,114 --> 00:03:01,190\nBGP all of them work that same exact way.\n\n52\n00:03:01,190 --> 00:03:05,520\nThe destination of the packet,\nthe layer three headers destination.\n\n53\n00:03:05,520 --> 00:03:08,880\nRun down the routing table, find\nthe destination, find the next hop, and\n\n54\n00:03:08,880 --> 00:03:09,940\nsend the packet to the next hop.\n\n55\n00:03:10,940 --> 00:03:12,090\nAnd that works great.\n\n56\n00:03:12,090 --> 00:03:16,500\nObviously, because tons of tons of traffic\nis routed every single day following that\n\n57\n00:03:16,500 --> 00:03:17,710\nexact methodology.\n\n58\n00:03:17,710 --> 00:03:18,500\nThat is routing.\n\n59\n00:03:18,500 --> 00:03:21,660\nBut sometimes that's not good enough.\n\n60\n00:03:22,710 --> 00:03:27,630\nSometimes I might have needs that go\nbeyond what standard routing provides.\n\n61\n00:03:27,630 --> 00:03:31,780\nI might have needs that go beyond\nwhat OSPF, EIGRP can provide.\n\n62\n00:03:31,780 --> 00:03:35,430\nNow, I know that's shocking, because As\nwe move more and more into the advanced\n\n63\n00:03:35,430 --> 00:03:38,010\ntechnologies in OSPF, and\nthe advanced technologies in EIGRP.\n\n64\n00:03:38,010 --> 00:03:43,550\nYou'll see there's tons of ways that we\ncan manipulate the path the traffic takes,\n\n65\n00:03:43,550 --> 00:03:46,080\nand influence the decisions\nthe routers make.\n\n66\n00:03:46,080 --> 00:03:48,420\nLike with EIGRP,\nyou can tweak those K values, and\n\n67\n00:03:48,420 --> 00:03:52,100\nchange the formula that it's using,\nthere's all sorts of stuff you can tweak.\n\n68\n00:03:52,100 --> 00:03:57,260\nBut even still after doing all of that,\nIt still boils down to comparing\n\n69\n00:03:57,260 --> 00:04:00,740\nthe destination of the packet to the\nrouting table and finding the next hop.\n\n70\n00:04:00,740 --> 00:04:04,252\nBut what if I want something crazy?\n\n71\n00:04:04,252 --> 00:04:08,270\nLike, I wanna route traffic based\non the source of the traffic,\n\n72\n00:04:08,270 --> 00:04:09,940\nnot the destination.\n\n73\n00:04:09,940 --> 00:04:13,600\nOr I wanna route the traffic based\non the source and destination.\n\n74\n00:04:13,600 --> 00:04:18,910\nWhen it's my laptop going to the internet,\nI want to go out one route.\n\n75\n00:04:18,910 --> 00:04:24,920\nBut when it is my laptop going out\nto the internet on a certain port,\n\n76\n00:04:24,920 --> 00:04:27,820\nlike port 80,\nI want to go out a different destination.\n\n77\n00:04:28,970 --> 00:04:31,790\nNow I am basing it on\nthe source of the traffic,\n\n78\n00:04:31,790 --> 00:04:35,420\nthe destination of the traffic and\nthe protocol that I'm using.\n\n79\n00:04:35,420 --> 00:04:37,750\nAnd I wanna influence\nwhere that traffic goes.\n\n80\n00:04:37,750 --> 00:04:42,720\nWell standard routing protocols and\nnormal IP routing can't do any of that.\n\n81\n00:04:42,720 --> 00:04:47,340\nNormal routing will only do\ndestination based routing.\n\n82\n00:04:47,340 --> 00:04:49,270\nDestination's running\nas the routing table.\n\n83\n00:04:49,270 --> 00:04:51,680\nFind the next hop, send it along.\n\n84\n00:04:51,680 --> 00:04:53,660\nWith policy based routing though,\n\n85\n00:04:53,660 --> 00:04:58,490\nwe break the chains off of our\nlayered three masters and we jump in.\n\n86\n00:04:58,490 --> 00:05:00,720\nNow I'm making it more\ndramatic than it is.\n\n87\n00:05:00,720 --> 00:05:06,480\nSo, we go in and we make it it when we\ncan, really influence what a router does.\n\n88\n00:05:06,480 --> 00:05:10,520\nAnd it's insanely powerful and the best\npart of all, it's not very hard to do.\n\n89\n00:05:10,520 --> 00:05:12,140\nIt's actually pretty easy.\n\n90\n00:05:12,140 --> 00:05:14,010\nThe hardest part is\nfiguring out what you want.\n\n91\n00:05:14,010 --> 00:05:15,510\nAnd then once you know what you want,\n\n92\n00:05:15,510 --> 00:05:17,380\nwriting the policy to\ndo it is pretty easy.\n\n93\n00:05:17,380 --> 00:05:19,220\nWe create a policy that states,\n\n94\n00:05:19,220 --> 00:05:22,980\nif the traffic meets these criteria,\ntake this action.\n\n95\n00:05:22,980 --> 00:05:25,840\nIf the packets match this other criteria,\ntake this other action.\n\n96\n00:05:25,840 --> 00:05:29,770\nAnd if it doesn't match any criteria,\njust go ahead and run it like normal.\n\n97\n00:05:29,770 --> 00:05:31,620\nSo we can start to influence that.\n\n98\n00:05:31,620 --> 00:05:34,460\nIt's really one of the neater\nthings that we learn about.\n\n99\n00:05:34,460 --> 00:05:37,560\nNow a couple of words of caution\nbefore we dive into this.\n\n100\n00:05:37,560 --> 00:05:39,560\nHere I am talking about how powerful and\nawesome this stuff is.\n\n101\n00:05:39,560 --> 00:05:42,180\nSo you're probably wondering\nwhy don't we do this normally?\n\n102\n00:05:42,180 --> 00:05:45,390\nWhy isn't this the default if it's so\npowerful?\n\n103\n00:05:45,390 --> 00:05:48,300\nIt's the Spiderman quote that I throw out.\n\n104\n00:05:48,300 --> 00:05:51,500\nWith great power comes\ngreat responsibility.\n\n105\n00:05:51,500 --> 00:05:54,160\nThere's two things to remember with PBR.\n\n106\n00:05:54,160 --> 00:05:56,080\nBut first of all, drink responsibly.\n\n107\n00:05:56,080 --> 00:05:57,403\nSo that's three things right?\n\n108\n00:05:57,403 --> 00:05:59,484\n[LAUGH] So first off though,\n\n109\n00:05:59,484 --> 00:06:05,010\nwe've got when you influence routes\nlike this, it's very easy to break them.\n\n110\n00:06:05,010 --> 00:06:07,690\nSo anytime you do policy based\nrouting you've got to watch for\n\n111\n00:06:07,690 --> 00:06:11,050\nsuboptimal routing, you've got to\nwatch for bad, like black holes.\n\n112\n00:06:11,050 --> 00:06:13,470\nYou can introduce black holes,\nyou can introduce routing loops.\n\n113\n00:06:13,470 --> 00:06:16,090\nBecause you're overriding\nthe behavior of the router itself.\n\n114\n00:06:17,290 --> 00:06:18,450\nAnd the second thing is performance.\n\n115\n00:06:19,450 --> 00:06:24,560\nYour router has hardware that's built\ninto it, that's specifically designed to\n\n116\n00:06:24,560 --> 00:06:26,870\nroute based on the destination\nof layer three packets.\n\n117\n00:06:26,870 --> 00:06:29,250\nIt's doing it in hardware,\ndoing it very, very fast.\n\n118\n00:06:30,390 --> 00:06:34,280\nWhen you introduce a policy Cisco can't\nbuild hardware around your policy.\n\n119\n00:06:34,280 --> 00:06:36,410\nThey don't know what\nyour policy's gonna be.\n\n120\n00:06:36,410 --> 00:06:38,000\nSo, it's done in software.\n\n121\n00:06:38,000 --> 00:06:42,130\nSo, now we're injecting a software\ndecision into our routing process.\n\n122\n00:06:42,130 --> 00:06:44,990\nOur traffic comes along\nthe data plane gets sent\n\n123\n00:06:44,990 --> 00:06:48,630\nup to the control plane where we figure\nout the policy where we want it to go.\n\n124\n00:06:48,630 --> 00:06:51,060\nAnd send it back to the data plane and\non through the router.\n\n125\n00:06:51,060 --> 00:06:53,820\nAnd that creates a bit\nof a performance hit.\n\n126\n00:06:53,820 --> 00:06:56,180\nEven on the really expensive routers,\n\n127\n00:06:56,180 --> 00:06:59,600\nthe processors in them are not very fancy,\nright?\n\n128\n00:06:59,600 --> 00:07:03,050\nIt's not uncommon to still find a 486\nprocessor in a lot of the Cisco routers.\n\n129\n00:07:03,050 --> 00:07:05,550\nAnd I know you guys are like,\nwhy the heck would they do that?\n\n130\n00:07:05,550 --> 00:07:06,980\nA 486, are you kidding me?\n\n131\n00:07:06,980 --> 00:07:08,840\nAnd the reason is, it's all they need.\n\n132\n00:07:08,840 --> 00:07:11,090\nAnd it'll run without a fan and\nwithout a heat sink, right?\n\n133\n00:07:11,090 --> 00:07:12,760\nYou can't say that about new processors.\n\n134\n00:07:12,760 --> 00:07:14,832\nIt's all they need, because the hardware,\n\n135\n00:07:14,832 --> 00:07:17,410\nthe ASICs that are on board\nare doing all the real work.\n\n136\n00:07:17,410 --> 00:07:18,200\nWith PBR, they don't.\n\n137\n00:07:19,270 --> 00:07:20,170\nSo we've got to be careful.\n\n138\n00:07:20,170 --> 00:07:23,190\nThen there are some tweaks to account for\n\n139\n00:07:23,190 --> 00:07:26,720\nthat performance hit to get things\ngoing back a little more smoothly.\n\n140\n00:07:26,720 --> 00:07:29,880\nBut that's why PBR is not on my default.\n\n141\n00:07:29,880 --> 00:07:32,950\nAnd in fact PBR is not\nsupportive on all routers.\n\n142\n00:07:32,950 --> 00:07:35,090\nIf you get a router with\na three digit model number,\n\n143\n00:07:35,090 --> 00:07:37,930\nit's pretty much a guarantee\nit won't do PBR.\n\n144\n00:07:37,930 --> 00:07:39,380\nYou like the 800 series routers,\n\n145\n00:07:39,380 --> 00:07:43,470\nthe really small designed for homes where\nthey have one way in and one way out.\n\n146\n00:07:43,470 --> 00:07:44,560\nIf there's only one way in and\n\n147\n00:07:44,560 --> 00:07:47,260\none way out of your network do\nyou need a policy based route?\n\n148\n00:07:47,260 --> 00:07:49,140\nDo you need to influence it?\n\n149\n00:07:49,140 --> 00:07:51,960\nThere's only one route so\nthere's really no need.\n\n150\n00:07:51,960 --> 00:07:57,154\nBut if you've got a 2800 a 2900 router,\nthe 3000s,\n\n151\n00:07:57,154 --> 00:08:03,964\nthe 7200 series routers, they all support\nPBR and they do a really good job of it.\n\n152\n00:08:03,964 --> 00:08:07,560\nSo you can jump this, it will decrease\nyour router throughput a little bit, but\n\n153\n00:08:07,560 --> 00:08:10,888\nthere's ways we can accommodate for\nthat too to improve it and it's not so\n\n154\n00:08:10,888 --> 00:08:12,000\nbad an offset.\n\n155\n00:08:12,000 --> 00:08:14,230\nBut if you have a particular need and\n\n156\n00:08:14,230 --> 00:08:18,450\nyou've got to provide whatever\nthat need is, you'll take the hit\n\n157\n00:08:18,450 --> 00:08:22,130\nin performance to be able to\nprovide the functionality you want.\n\n158\n00:08:22,130 --> 00:08:25,950\nI've been a little cryptic here as\nfar as what that need might be.\n\n159\n00:08:25,950 --> 00:08:28,010\nLet me give you guys an example.\n\n160\n00:08:28,010 --> 00:08:31,720\nHere, I've got a little diagram of my\nlab that I'm gonna use in this show.\n\n161\n00:08:31,720 --> 00:08:34,130\nAnd you'll see that I've got\na headquarters office for\n\n162\n00:08:34,130 --> 00:08:37,930\nmy company and I've got these branches\nover here, branch one, two and three.\n\n163\n00:08:37,930 --> 00:08:38,740\nAll right?\n\n164\n00:08:38,740 --> 00:08:42,350\nAnd the branches, they all have point\nto point metro ethernet lines or\n\n165\n00:08:42,350 --> 00:08:44,000\nwhatever that run my headquarters.\n\n166\n00:08:44,000 --> 00:08:47,730\nSo that's a private network cuz a metro E,\nit's all closed off.\n\n167\n00:08:47,730 --> 00:08:50,200\nAnd if any of the branches want to\nget out to the internet, they're\n\n168\n00:08:50,200 --> 00:08:55,050\ngoing to go through my headquarters\nrouter, and go out to the internet, okay?\n\n169\n00:08:55,050 --> 00:08:57,420\nSo what I want to do is,\n\n170\n00:08:57,420 --> 00:09:00,930\nI want to influence that traffic\nin a way that's not normal.\n\n171\n00:09:00,930 --> 00:09:04,020\nThe normal way would be,\nI've got two ISPs, so\n\n172\n00:09:04,020 --> 00:09:09,200\nI'm going to configure one with\na preference of a certain level.\n\n173\n00:09:09,200 --> 00:09:11,090\nAnd the other one with a preference\nof a different level, so\n\n174\n00:09:11,090 --> 00:09:13,040\nthat I'd prefer one ISP over the other.\n\n175\n00:09:13,040 --> 00:09:15,820\nRight.\nSo maybe ISP1 is my primary and\n\n176\n00:09:15,820 --> 00:09:17,460\nISP2 is my secondary.\n\n177\n00:09:17,460 --> 00:09:21,120\nSo then I'll route all these\nguys out ISP1 by default.\n\n178\n00:09:21,120 --> 00:09:23,790\nThat'll be my gateway of last resort.\n\n179\n00:09:23,790 --> 00:09:27,170\nAnd if ISP one fails,\nthen I'll route out to ISP two.\n\n180\n00:09:28,300 --> 00:09:30,950\nAll based on destination, right,\ntraffic coming from these branches,\n\n181\n00:09:30,950 --> 00:09:35,060\nif it's destined for a network on\nthe Internet, we'll send it out, ISP one.\n\n182\n00:09:37,340 --> 00:09:41,230\nI could load balance, where I send\nsome of my traffic over ISP one and\n\n183\n00:09:41,230 --> 00:09:43,210\nsome of my traffic over ISP two.\n\n184\n00:09:43,210 --> 00:09:43,990\nRight, we could do that.\n\n185\n00:09:45,360 --> 00:09:49,060\nThe router will try and load balance\non its own if it's an equal cost path.\n\n186\n00:09:49,060 --> 00:09:51,880\nIf it's not equal, then we've gotta do all\nsorts of stuff to kind of cheat the system\n\n187\n00:09:51,880 --> 00:09:53,120\nand get it to load balance.\n\n188\n00:09:53,120 --> 00:09:54,640\nBut we could do that, too.\n\n189\n00:09:54,640 --> 00:09:57,540\nBut what if I wanted to be\na little more particular?\n\n190\n00:09:57,540 --> 00:10:02,290\nWhat if I wanted, for example, the servers\n\n191\n00:10:02,290 --> 00:10:06,450\nthat are in each of these branches\nI want them, when they go out,\n\n192\n00:10:06,450 --> 00:10:10,920\nto go out a particular ISP because I\nmight have a static NAT mapping for them.\n\n193\n00:10:10,920 --> 00:10:11,510\nAll right?\n\n194\n00:10:11,510 --> 00:10:14,990\nSo I've got this static NAT\nmapping on ISP1 and not ISP2.\n\n195\n00:10:14,990 --> 00:10:19,480\nSo I need to ensure that\nthe servers in branch 1 and\n\n196\n00:10:19,480 --> 00:10:24,480\nbranch 2 and\nbranch 3 always go out ISP1, all right?\n\n197\n00:10:24,480 --> 00:10:27,360\nWell, that's a little bit tough because\nif I'm load balancing I don't really know\n\n198\n00:10:27,360 --> 00:10:28,610\nwhich one they're gonna go out.\n\n199\n00:10:29,890 --> 00:10:32,000\nAnd if ISP1 fails and\n\n200\n00:10:32,000 --> 00:10:35,510\neverybody goes over to ISP2,\nthe static NAT mapping's not over there.\n\n201\n00:10:35,510 --> 00:10:37,710\nSo, it doesn't make sense for\nthe servers to go out that one.\n\n202\n00:10:37,710 --> 00:10:39,700\nThe servers are just down at that point.\n\n203\n00:10:39,700 --> 00:10:41,900\nSo, what I can do is put a policy based.\n\n204\n00:10:41,900 --> 00:10:46,260\nRoute on my headquarters router to\nsay look at the source of the packet.\n\n205\n00:10:46,260 --> 00:10:49,790\nIf the source is one of these servers,\nonly go out ISP one.\n\n206\n00:10:49,790 --> 00:10:53,270\nSet ISP one is the next hop and\nsent it along.\n\n207\n00:10:53,270 --> 00:10:58,480\nOverride the routing table, and then for\neverybody else just route like normal.\n\n208\n00:10:58,480 --> 00:11:01,240\nOr maybe another example\nmight be I'm a school.\n\n209\n00:11:02,330 --> 00:11:06,460\nAnd normal traffic, yeah I just want to go\nright out to the internet, no big deal.\n\n210\n00:11:06,460 --> 00:11:08,780\nBut if it's web traffic,\nif it's traffic on port 80,\n\n211\n00:11:08,780 --> 00:11:12,420\nI want to send that over to\na web filter on my network.\n\n212\n00:11:12,420 --> 00:11:15,040\nI've got one of those Websense boxes, or\n\n213\n00:11:15,040 --> 00:11:17,550\nthere's a couple of companies\nthat make these web filters, and\n\n214\n00:11:17,550 --> 00:11:22,820\nI want to redirect all outgoing\ntraffic on port 80 to this web filter.\n\n215\n00:11:22,820 --> 00:11:25,430\nNow I'm not even looking at source and\ndestination so much anymore.\n\n216\n00:11:25,430 --> 00:11:28,170\nNow I'm looking at this port number,\nand when I see that traffic on port 80,\n\n217\n00:11:28,170 --> 00:11:30,620\nI redirect the next hop\nto be the web filter.\n\n218\n00:11:30,620 --> 00:11:32,930\nAnd then the web filter sends\nthem out to the Internet.\n\n219\n00:11:33,980 --> 00:11:36,420\nThat's the kind of stuff we can\ndo with policy based routing and\n\n220\n00:11:36,420 --> 00:11:39,150\nit's really powerful.\n\n221\n00:11:40,570 --> 00:11:42,140\nWhen we do policy based routing.\n\n222\n00:11:42,140 --> 00:11:44,250\nLet me bring up my little show notes.\n\n223\n00:11:44,250 --> 00:11:46,120\nI don't normally bring my show\nnotes up on the screen, but\n\n224\n00:11:46,120 --> 00:11:48,670\nlet me do it in this case, here we go.\n\n225\n00:11:48,670 --> 00:11:51,190\nThese are some of the characteristics\nthat we can use and\n\n226\n00:11:51,190 --> 00:11:52,520\nI've kinda mentioned them already.\n\n227\n00:11:52,520 --> 00:11:55,790\nThe source of the traffic,\nthe destination of the traffic,\n\n228\n00:11:55,790 --> 00:11:59,650\nthe protocol and the incoming interface.\n\n229\n00:11:59,650 --> 00:12:00,320\nThat's another one.\n\n230\n00:12:00,320 --> 00:12:04,940\nI could say,\nif the traffic came in this interface,\n\n231\n00:12:04,940 --> 00:12:07,530\nuse these characteristics for\nthe rest of the path.\n\n232\n00:12:07,530 --> 00:12:10,030\nIf it came in that other interface,\nuse these other characteristics.\n\n233\n00:12:10,030 --> 00:12:14,700\nYou can apply all sorts of different\nvariations to routing based on that.\n\n234\n00:12:14,700 --> 00:12:16,270\nAll right.\nAnd I've got a neat little link that I'll\n\n235\n00:12:16,270 --> 00:12:19,100\npost in the show notes here to\nsome case studies that Cisco has,\n\n236\n00:12:19,100 --> 00:12:21,770\nsome examples that they've\nproduced of how you can use PBR.\n\n237\n00:12:21,770 --> 00:12:27,630\nBut it is a really flexible technology,\nand\n\n238\n00:12:27,630 --> 00:12:29,975\nyou can use it for\na lot of different things.\n\n239\n00:12:29,975 --> 00:12:32,150\nIf you have more than one ISP, more\nthan one connection out of your network,\n\n240\n00:12:32,150 --> 00:12:36,020\nyou'll often times use PBR because\nof things like static NAT mapping,\n\n241\n00:12:36,020 --> 00:12:39,530\nfirewall rules and stuff to make sure that\npeople are the appropriate connections.\n\n242\n00:12:41,710 --> 00:12:44,460\nYou can also use VPN tunnels.\n\n243\n00:12:44,460 --> 00:12:47,680\nVPN's have their own little policies but\nyou might need to steer certain\n\n244\n00:12:47,680 --> 00:12:51,240\ntraffic to once concentrator or another\nto get the VPN traffic going properly.\n\n245\n00:12:51,240 --> 00:12:54,350\nThere's all sorts of reasons why we\nmight need to influence that traffic.\n\n246\n00:12:55,930 --> 00:12:58,210\nAll right, now I mentioned performance.\n\n247\n00:12:59,720 --> 00:13:02,290\nWhen we put a policy based route in place,\n\n248\n00:13:02,290 --> 00:13:06,940\nevery time our traffic passes through\nthe router, so as I, where's my diagram?\n\n249\n00:13:06,940 --> 00:13:07,560\nHere.\n\n250\n00:13:07,560 --> 00:13:10,040\nAs all that traffic moves\nthrough headquarters,\n\n251\n00:13:10,040 --> 00:13:12,760\ninstead of headquarters just running\nagainst the routing table which is cached\n\n252\n00:13:12,760 --> 00:13:16,920\nin RAM,\nit's having to run it against this policy.\n\n253\n00:13:16,920 --> 00:13:18,940\nAnd so this policy, it's software,\nit's running down that line.\n\n254\n00:13:18,940 --> 00:13:20,462\nIt's a little bit more intensive.\n\n255\n00:13:20,462 --> 00:13:22,660\nAnd that makes our router\nhave to work harder.\n\n256\n00:13:22,660 --> 00:13:26,095\nSo we won't be able to get as great\namount of throughput through our routers.\n\n257\n00:13:26,095 --> 00:13:28,085\nAs possible, and\nI know some of you are out there saying,\n\n258\n00:13:28,085 --> 00:13:29,705\nwell Don, what's the actual number?\n\n259\n00:13:29,705 --> 00:13:30,935\nWhat's the kind of hit?\n\n260\n00:13:30,935 --> 00:13:33,065\nAnd it depends on the policy.\n\n261\n00:13:33,065 --> 00:13:36,595\nThe more complex your policy,\nthe bigger the hit will be.\n\n262\n00:13:36,595 --> 00:13:39,715\nThe more simple your policy,\nthe smaller the hit will be.\n\n263\n00:13:39,715 --> 00:13:44,675\nBut either way, we can actually tell\nthe router to go ahead and cache that\n\n264\n00:13:44,675 --> 00:13:48,550\npolicy to say, you're already caching\nthe routing tables for making decisions.\n\n265\n00:13:48,550 --> 00:13:50,620\nCan you just cache my policy also?\n\n266\n00:13:50,620 --> 00:13:53,720\nAnd that way the data comes in\nthe router on the data plane,\n\n267\n00:13:53,720 --> 00:13:57,560\nhits the cache policy on the data plane,\nand exits on the data plane, and\n\n268\n00:13:57,560 --> 00:14:01,060\ndoesn't have to jump up\nto the control plane.\n\n269\n00:14:01,060 --> 00:14:03,870\nThere's pros and\ncons with caching the policy.\n\n270\n00:14:03,870 --> 00:14:05,410\nIt is disabled by default.\n\n271\n00:14:05,410 --> 00:14:07,180\nBy default, it is not cached or anything.\n\n272\n00:14:07,180 --> 00:14:09,080\nAnd you might ask yourself, why is that?\n\n273\n00:14:09,080 --> 00:14:10,340\nWhy wouldn't we want that?\n\n274\n00:14:10,340 --> 00:14:13,665\nWell, when you cache the policy,\nthere's a risk.\n\n275\n00:14:13,665 --> 00:14:17,070\nThere's a risk you could\nchange the policy, and\n\n276\n00:14:17,070 --> 00:14:18,910\nit takes a moment to take effect.\n\n277\n00:14:18,910 --> 00:14:23,320\nAnd so for a brief period of time,\ntraffic is not obeying your policy.\n\n278\n00:14:23,320 --> 00:14:25,610\nSo in a high security environment, for\n\n279\n00:14:25,610 --> 00:14:29,230\nour mission critical environment where you\nneed changes to the policy to take effect\n\n280\n00:14:29,230 --> 00:14:32,100\nright away,\nyou don't wanna cash the policy.\n\n281\n00:14:32,100 --> 00:14:32,890\nRight?\n\n282\n00:14:32,890 --> 00:14:37,300\nBut for most users, for most people,\nprobably 99% of the people that\n\n283\n00:14:37,300 --> 00:14:40,350\nare out there, how often are we\ngonna change these policies?\n\n284\n00:14:41,610 --> 00:14:42,290\nNot very often at all.\n\n285\n00:14:42,290 --> 00:14:44,304\nI know I've set them up for\nsome companies,\n\n286\n00:14:44,304 --> 00:14:47,462\nactually I know one security company\nhere in town where I set this up,\n\n287\n00:14:47,462 --> 00:14:50,470\nprobably three years ago and\nit has not been touched since.\n\n288\n00:14:50,470 --> 00:14:53,430\nThat's because once the policy's\nare place they just do their job.\n\n289\n00:14:53,430 --> 00:14:56,640\nAnd so for the rest of us we go ahead and\nturn on caching.\n\n290\n00:14:56,640 --> 00:14:59,550\nAnd we just remember, if I go ahead and\nmodify this down the road,\n\n291\n00:14:59,550 --> 00:15:02,210\nit could take up to five minutes for\nthe policy to take effect.\n\n292\n00:15:02,210 --> 00:15:05,430\nI'm okay with that because\nit's such an infrequent thing.\n\n293\n00:15:05,430 --> 00:15:08,670\nBut in a high security environment\nwhere you need those policy changes to\n\n294\n00:15:08,670 --> 00:15:11,160\ntake effect right away,\nyou don't want to cache.\n\n295\n00:15:11,160 --> 00:15:14,690\nAnd you could always temporarily\nturn the cache off, make the change,\n\n296\n00:15:14,690 --> 00:15:16,400\nand then turn the cache back on again.\n\n297\n00:15:16,400 --> 00:15:20,070\nYou know, there's way that you can\nkind of manipulate the system.\n\n298\n00:15:20,070 --> 00:15:21,680\nThe caching is really easy.\n\n299\n00:15:21,680 --> 00:15:25,070\nThe command for it, well this is another\none I've got like here in the show notes.\n\n300\n00:15:25,070 --> 00:15:27,410\nI'll show it in the lab\na little bit later.\n\n301\n00:15:27,410 --> 00:15:32,470\nBut it's this command right here,\nip route-cache policy.\n\n302\n00:15:32,470 --> 00:15:34,590\nSome of you might have even\nseen this on routers before and\n\n303\n00:15:34,590 --> 00:15:35,640\nnot known what it meant.\n\n304\n00:15:35,640 --> 00:15:38,670\nThe route cache is the routing table,\nright?\n\n305\n00:15:38,670 --> 00:15:40,820\nSo we're caching the routing table.\n\n306\n00:15:40,820 --> 00:15:44,400\nAnd here,\nwe're just adding to it the policy also.\n\n307\n00:15:44,400 --> 00:15:47,200\nWhatever policy we write that\ndefines where that traffic is going,\n\n308\n00:15:47,200 --> 00:15:49,440\nthat's gonna be cached right\nalongside the routing table.\n\n309\n00:15:49,440 --> 00:15:51,960\nAnd now decisions will\nhappen much more quickly.\n\n310\n00:15:51,960 --> 00:15:54,784\nYou're still not gonna get the same\nthroughput as if you didn't do\n\n311\n00:15:54,784 --> 00:15:55,800\npolicy based routing.\n\n312\n00:15:55,800 --> 00:15:57,283\nYou always do take a hit but\n\n313\n00:15:57,283 --> 00:16:00,130\nthis minimizes the impact\nof that hit quite a bit.\n\n314\n00:16:00,130 --> 00:16:03,800\nSo, definitely,\nsomething you'll want to look into.\n\n315\n00:16:03,800 --> 00:16:04,960\nAll right.\n\n316\n00:16:04,960 --> 00:16:08,671\nNow, when it comes to configuring\npolicy based routing,\n\n317\n00:16:08,671 --> 00:16:11,830\npolicy based routing uses a route map.\n\n318\n00:16:11,830 --> 00:16:13,960\nAnd we technically\nhaven't covered that yet.\n\n319\n00:16:13,960 --> 00:16:16,219\nIt's objective 3.14\nthat covers route maps.\n\n320\n00:16:16,219 --> 00:16:18,995\nSo, we're gonna use a simple\nroute map here, but\n\n321\n00:16:18,995 --> 00:16:22,167\njust to give us kind of the quick and\ndirty introduction,\n\n322\n00:16:22,167 --> 00:16:26,023\nroute maps are really awesome and\nthey can be used for a ton of things.\n\n323\n00:16:26,023 --> 00:16:29,730\nOne of them being PBR,\nPolicy-based Routing.\n\n324\n00:16:29,730 --> 00:16:33,390\nAnd, when we use a route map,\nwhat you basically do\n\n325\n00:16:33,390 --> 00:16:36,780\nis you define a series of statements,\ntheir policy entries.\n\n326\n00:16:36,780 --> 00:16:38,770\nIt kind of work acts like\nan access control list.\n\n327\n00:16:38,770 --> 00:16:40,280\nIt's a policy list and\n\n328\n00:16:40,280 --> 00:16:44,430\neach entry in that list is defining\nsome kind of different policy.\n\n329\n00:16:44,430 --> 00:16:46,930\nAnd your policy is normally\nmade up of two things.\n\n330\n00:16:46,930 --> 00:16:49,170\nIt's usually made up of a match statement,\n\n331\n00:16:49,170 --> 00:16:52,814\nwhich is how we identify the traffic\nthat matches that policy, right?\n\n332\n00:16:52,814 --> 00:16:55,765\nSo, if I have policy entry one,\ntwo and three.\n\n333\n00:16:55,765 --> 00:16:59,920\nPolicy entry one is going\nto match certain traffic.\n\n334\n00:16:59,920 --> 00:17:03,370\nPolicy entry two will match other traffic,\nand policy entry three will match yet\n\n335\n00:17:03,370 --> 00:17:04,920\nagain, other traffic, right?\n\n336\n00:17:04,920 --> 00:17:07,470\nSo, that match statement is\nhow we identify the traffic.\n\n337\n00:17:08,510 --> 00:17:13,170\nAnd then there will be a set statement\nwhich is the action we're going to take.\n\n338\n00:17:13,170 --> 00:17:14,360\nAll right, we just matched this traffic.\n\n339\n00:17:14,360 --> 00:17:15,690\nWhat are we gonna do to it?\n\n340\n00:17:15,690 --> 00:17:17,400\nWe're gonna set something to it.\n\n341\n00:17:17,400 --> 00:17:18,470\nAll right.\n\n342\n00:17:18,470 --> 00:17:20,870\nAnd we'll set it and\npush it into place and off it goes.\n\n343\n00:17:20,870 --> 00:17:21,410\nAll right.\n\n344\n00:17:21,410 --> 00:17:26,314\nSo, when you write a policy, a policy or\na route map really, you've got a match and\n\n345\n00:17:26,314 --> 00:17:30,322\na set for each entry along in there and\nwhat you're gonna do with it.\n\n346\n00:17:30,322 --> 00:17:33,051\nAll right, now, there are times\nwhen you might leave the match out.\n\n347\n00:17:33,051 --> 00:17:35,651\nIf you don't specify a match,\nthen it matches everything.\n\n348\n00:17:35,651 --> 00:17:39,218\nAnd there might be times where you don't\nspecify a set, where you match certain\n\n349\n00:17:39,218 --> 00:17:43,315\ntraffic and you don't do a set, and that\nmeans don't change it, just leave it be.\n\n350\n00:17:43,315 --> 00:17:44,505\nRight?\nLet it go like normal.\n\n351\n00:17:44,505 --> 00:17:46,305\nLet it reroute it like normal, right?\n\n352\n00:17:46,305 --> 00:17:48,186\nSo, there's some variations\nthat you can see there.\n\n353\n00:17:48,186 --> 00:17:51,518\nBut that set command,\nthat's the real power.\n\n354\n00:17:51,518 --> 00:17:52,169\nAll right?\n\n355\n00:17:52,169 --> 00:17:56,453\nThe match, for Policy-based Routing\nwe can match on source.\n\n356\n00:17:56,453 --> 00:17:58,068\nWe can match on destination.\n\n357\n00:17:58,068 --> 00:17:58,962\nWe can match on protocol.\n\n358\n00:17:58,962 --> 00:18:00,077\nWe can match on interface.\n\n359\n00:18:00,077 --> 00:18:02,750\nAnd it's all done using\naccess control lists.\n\n360\n00:18:04,020 --> 00:18:06,900\nYou define an ACL and\nthen you write a match statement.\n\n361\n00:18:06,900 --> 00:18:11,960\nSays, match the traffic against ACL 1,\nor ACL 101, or ACL routes in,\n\n362\n00:18:11,960 --> 00:18:14,500\nor whatever it is that you want to\ncall it, you match against that sum.\n\n363\n00:18:15,740 --> 00:18:19,570\nThe set command though is\nwhat we do to the traffic.\n\n364\n00:18:19,570 --> 00:18:22,580\nAnd with PBR,\nit's always changing the next-hop, right?\n\n365\n00:18:22,580 --> 00:18:23,740\nWe're influencing the routing table and\n\n366\n00:18:23,740 --> 00:18:26,730\nthe routing table gives us\nthe next-hop for our traffic.\n\n367\n00:18:26,730 --> 00:18:30,149\nSo, we use that set that command to\ndefine what the next-hop is gonna be.\n\n368\n00:18:30,149 --> 00:18:35,935\nWhere it gets a little complex is there's\nseveral different types of next-hops and\n\n369\n00:18:35,935 --> 00:18:37,819\nlet me show you what I mean.\n\n370\n00:18:37,819 --> 00:18:43,231\nAll right so, in the show notes that\nwe'll post along with this episode,\n\n371\n00:18:43,231 --> 00:18:46,477\nI've got some of those actions right here.\n\n372\n00:18:46,477 --> 00:18:49,285\nNow, I've only got five of them because\nthese are the five that pertain to PBR.\n\n373\n00:18:49,285 --> 00:18:52,245\nIn reality,\nthere's probably a good 12 of them.\n\n374\n00:18:52,245 --> 00:18:55,105\n12 different things that we can\ndo to the traffic, but for PBR,\n\n375\n00:18:55,105 --> 00:18:57,239\nwe're just concerned with these five,\nright?\n\n376\n00:18:57,239 --> 00:19:01,792\nMost of the time,\nwe're going to want to set next-hop.\n\n377\n00:19:01,792 --> 00:19:06,220\nThe traffic is coming in, it matches some\ncriteria that we've set, and for that,\n\n378\n00:19:06,220 --> 00:19:10,905\ninstead of going to the routing table,\nwe're gonna manually define it's next-hop,\n\n379\n00:19:10,905 --> 00:19:13,395\nwe're gonna say where it needs to go,\nright?\n\n380\n00:19:13,395 --> 00:19:14,893\nThat's what we're gonna\ndo most of the time.\n\n381\n00:19:14,893 --> 00:19:20,022\nThat's typically our go-to guy for\nPBR, all right?\n\n382\n00:19:20,022 --> 00:19:23,213\nThere are other options we\nmight wanna jump into though.\n\n383\n00:19:23,213 --> 00:19:26,438\nFor example,\nnext-hop recursive, all right?\n\n384\n00:19:26,438 --> 00:19:29,611\nNext-hop recursive is really just\na modification of the first command.\n\n385\n00:19:29,611 --> 00:19:35,070\nThis says the next-hop is a router\nthat I'm not directly connected to.\n\n386\n00:19:36,080 --> 00:19:39,290\nSo, we're going to look at the routing\ntable to figure out how to get to that\n\n387\n00:19:39,290 --> 00:19:43,970\nrouter, and then set that as the next-hop\nfor this traffic to forward it along.\n\n388\n00:19:43,970 --> 00:19:46,675\nSo, if we're pointing to a router\nthat we're not adjacent to,\n\n389\n00:19:46,675 --> 00:19:49,794\nfurther along in our network,\nwe would have to say next-hop recursive.\n\n390\n00:19:49,794 --> 00:19:53,557\nIf you don't do that, and you specify an\nIP address and it's not something you're\n\n391\n00:19:53,557 --> 00:19:57,373\ndirectly connected to, it's gonna look in\nthe routing table for how to get to that,\n\n392\n00:19:57,373 --> 00:20:00,532\nit's not gonna find it, and\nthe policy won't take effect, right?\n\n393\n00:20:00,532 --> 00:20:05,184\nSo, you've got to remember that recursive\nkeyword if the next-hop is not adjacent to\n\n394\n00:20:05,184 --> 00:20:05,960\nyour router.\n\n395\n00:20:08,130 --> 00:20:10,519\nInstead of going to a next-hop,\nwe could go to a particular interface.\n\n396\n00:20:10,519 --> 00:20:15,154\nSo, if I've got two point-to-point\nserial lines, like in this one here.\n\n397\n00:20:15,154 --> 00:20:19,011\nAnd I want branch one to go to ISP1 and\nbranches two and\n\n398\n00:20:19,011 --> 00:20:24,155\nthree to go to ISP2, my policy could\nset the next-hop of branch two and\n\n399\n00:20:24,155 --> 00:20:27,410\nthree to just be this serial interface.\n\n400\n00:20:27,410 --> 00:20:32,158\nJust throw it right out that interface\ninstead of pointing to an IP.\n\n401\n00:20:32,158 --> 00:20:36,351\nThen we've got default next-hop and\ndefault interface.\n\n402\n00:20:36,351 --> 00:20:37,094\nAll right?\n\n403\n00:20:37,094 --> 00:20:40,730\nThese are variations of next-hop and\ninterface, right?\n\n404\n00:20:40,730 --> 00:20:42,730\nSo, just variations of\nthose same commands.\n\n405\n00:20:42,730 --> 00:20:47,310\nThe default keyword says,\nthis is going to be the next-hop for\n\n406\n00:20:47,310 --> 00:20:52,000\ntraffic that doesn't have\na route in the routing table.\n\n407\n00:20:52,000 --> 00:20:55,420\nIf it doesn't match any of\nthe routes in the routing table,\n\n408\n00:20:55,420 --> 00:20:58,380\nthis is the gateway of last\nresort that they're gonna use.\n\n409\n00:20:58,380 --> 00:21:02,990\nThis is what lets us specify a different\ndefault gateway for different hosts.\n\n410\n00:21:02,990 --> 00:21:06,428\nSo, you can have student machines\ngoing out one gateway and\n\n411\n00:21:06,428 --> 00:21:08,989\nstaff machines going out another gateway.\n\n412\n00:21:08,989 --> 00:21:12,960\nOr, you could have secure military\npersonnel going out one gateway.\n\n413\n00:21:12,960 --> 00:21:16,404\nAnd, you could have civilian personnel\ngoing out a different gateway\n\n414\n00:21:16,404 --> 00:21:18,096\nbased on this default interface or\n\n415\n00:21:18,096 --> 00:21:21,500\ndefault next-hop saying,\nit doesn't match in the routing table.\n\n416\n00:21:22,690 --> 00:21:25,670\nNow, like I said, there's a good 12\nof these things that are in there.\n\n417\n00:21:25,670 --> 00:21:26,800\nHere's just five.\n\n418\n00:21:26,800 --> 00:21:28,718\nThese are really the only\nones that we use with PBR.\n\n419\n00:21:28,718 --> 00:21:30,853\nBut you can mix in some of\nthe others if you get crazy.\n\n420\n00:21:30,853 --> 00:21:35,381\nIf you want to see the others,\nstay tuned for episode, Objective 3.14.\n\n421\n00:21:35,381 --> 00:21:37,796\nWe'll see all of them in 3.14.\n\n422\n00:21:37,796 --> 00:21:39,731\nAll right, but looking right here,\n\n423\n00:21:39,731 --> 00:21:42,800\nyou'll notice the basic ones\nthat we need to worry about.\n\n424\n00:21:42,800 --> 00:21:48,838\nSo, we need to create a route map\nthat takes these actions, all right?.\n\n425\n00:21:48,838 --> 00:21:50,877\nAnd I've got an example right here.\n\n426\n00:21:50,877 --> 00:21:52,260\nJust kind of like a sample problem, right?\n\n427\n00:21:52,260 --> 00:21:55,605\nIf I wanted to create one of\nthese route maps, and actually,\n\n428\n00:21:55,605 --> 00:21:59,221\nI don't know if I want to show this,\nbut let's do it in the lab,.\n\n429\n00:21:59,221 --> 00:22:01,437\nThat'll be a little more exciting\nthan just kind of looking at it here.\n\n430\n00:22:01,437 --> 00:22:04,398\nBut I've got a great example in the step\nby step that will be in the show, and\n\n431\n00:22:04,398 --> 00:22:06,910\nwe'll see it in the actual\nequipment here in a minute.\n\n432\n00:22:06,910 --> 00:22:10,860\nThat you might have needs\nthat create a variation and\n\n433\n00:22:10,860 --> 00:22:12,270\nwe look at this example here.\n\n434\n00:22:12,270 --> 00:22:13,762\nWe've got two ISPs, right?\n\n435\n00:22:13,762 --> 00:22:16,610\nWe have a Websense content filter.\n\n436\n00:22:16,610 --> 00:22:19,319\nWe want all web traffic to go\nthrough this other ISP, all right?\n\n437\n00:22:19,319 --> 00:22:22,845\nWe want traffic coming from one\nnetwork to go out one ISP, and\n\n438\n00:22:22,845 --> 00:22:26,512\ntraffic coming from another\nnetwork to go out another ISP, and\n\n439\n00:22:26,512 --> 00:22:30,756\nthen any other traffic to be routed\nthrough the routing table as normal.\n\n440\n00:22:30,756 --> 00:22:31,488\nAll right?\n\n441\n00:22:31,488 --> 00:22:35,270\nThese are requirements that we can't\nmeet with a normal routing protocol.\n\n442\n00:22:35,270 --> 00:22:39,620\nEIGRP, OSPF,\nit would be extremely difficult to try and\n\n443\n00:22:39,620 --> 00:22:41,750\nbuild that kind of topology using those.\n\n444\n00:22:42,950 --> 00:22:45,370\nBut with PBR, it's super easy.\n\n445\n00:22:45,370 --> 00:22:47,378\nWe just have to create some basic things,\nright?\n\n446\n00:22:47,378 --> 00:22:48,354\nThere's a few basic steps.\n\n447\n00:22:48,354 --> 00:22:52,800\nYou can create access control lists\nto support your match statements.\n\n448\n00:22:52,800 --> 00:22:55,551\nYou can create your route policy that\nhas all your match statements and\n\n449\n00:22:55,551 --> 00:22:56,257\nset statements.\n\n450\n00:22:56,257 --> 00:22:58,672\nAnd then, you attach it to an interface.\n\n451\n00:22:58,672 --> 00:23:00,890\nThis is all driven off of an interface.\n\n452\n00:23:00,890 --> 00:23:05,255\nAs traffic comes in an interface,\nwe apply the route policy.\n\n453\n00:23:05,255 --> 00:23:07,166\nWe can't do it to outgoing traffics.\n\n454\n00:23:07,166 --> 00:23:07,850\nIt's too late at that point.\n\n455\n00:23:07,850 --> 00:23:09,222\nIt's already been routed to an interface.\n\n456\n00:23:09,222 --> 00:23:11,630\nYou have to catch\nthe traffic as it comes in.\n\n457\n00:23:11,630 --> 00:23:12,330\nAlright, so,\n\n458\n00:23:12,330 --> 00:23:15,840\nwe'll get a chance to see that on the\nactual equipment here in just a moment.\n\n459\n00:23:15,840 --> 00:23:18,930\nBut looking at the time, we're\nrunning a little low on this segment.\n\n460\n00:23:18,930 --> 00:23:20,044\nSo, let's stop here and take a pause.\n\n461\n00:23:20,044 --> 00:23:24,538\nAnd when we get back,\nwe'll see Policy-based Routing in action.\n\n462\n00:23:24,538 --> 00:23:32,096\n[MUSIC]\n\n463\n00:23:32,096 --> 00:23:33,756\nAll right, welcome back everybody.\n\n464\n00:23:33,756 --> 00:23:37,262\nSo, let's take a look at PBR in action.\n\n465\n00:23:37,262 --> 00:23:40,506\nBefore we jump into the machines, let's\njump back to my topology here real quick\n\n466\n00:23:40,506 --> 00:23:42,475\nand let me walk you through\nwhat we're gonna do.\n\n467\n00:23:42,475 --> 00:23:46,961\nRight now, I've got my headquarters set up\nas kind of the heart of my company, and\n\n468\n00:23:46,961 --> 00:23:49,638\nI've got two ISPs,\nISP one and ISP two, right?\n\n469\n00:23:49,638 --> 00:23:52,588\nISP one is my primary ISP.\n\n470\n00:23:52,588 --> 00:23:56,928\nI've got great bandwidth with them,\nthat's the one that I use normally, and\n\n471\n00:23:56,928 --> 00:23:58,126\nISP two is my backup.\n\n472\n00:23:58,126 --> 00:24:02,434\nI don't have as much bandwidth with\nthem I just kind of set them aside, and\n\n473\n00:24:02,434 --> 00:24:05,300\nif one fails,\nthe other one kicks in, alright.\n\n474\n00:24:05,300 --> 00:24:09,310\nAnd I achieve that,\nwith just some simple static routes.\n\n475\n00:24:09,310 --> 00:24:13,380\nOn HQ, I've got a static default\nroute that points to ISP one,\n\n476\n00:24:13,380 --> 00:24:16,080\nwith an administrative distance of ten.\n\n477\n00:24:16,080 --> 00:24:19,680\nAnd I've got a static default\nroute that points to ISP two.\n\n478\n00:24:19,680 --> 00:24:22,140\nThat has the administrative\ndistance of 20.\n\n479\n00:24:22,140 --> 00:24:25,820\nSo, if ISP1 fails, we flip right\nover to ISP2, and we're in business.\n\n480\n00:24:27,000 --> 00:24:32,300\nNow as it stands, I'm running OSPF between\nheadquarters and all of the branches.\n\n481\n00:24:32,300 --> 00:24:35,360\nAnd the branches are learning\nthat default route from me.\n\n482\n00:24:35,360 --> 00:24:37,740\nThey're coming through headquarters.\n\n483\n00:24:37,740 --> 00:24:39,200\nAnd as they pass through headquarters,\n\n484\n00:24:39,200 --> 00:24:41,870\nmy static route will\nsend them out to ISP one.\n\n485\n00:24:41,870 --> 00:24:42,950\nSo as it stands,\n\n486\n00:24:42,950 --> 00:24:46,990\neverybody should be going through\nISP one to get out to the internet.\n\n487\n00:24:46,990 --> 00:24:50,880\nAnd that's all standard destination\nbased routing, all right?\n\n488\n00:24:50,880 --> 00:24:53,920\nSo, let's walk through that to\nmake sure we know my topology,\n\n489\n00:24:53,920 --> 00:24:55,270\nbefore we start to bend it.\n\n490\n00:24:55,270 --> 00:24:58,110\nYou never want to bend the technology,\nyou never want to start overwriting\n\n491\n00:24:58,110 --> 00:25:01,130\nthe routing tables, when you don't\nfully understand the topology.\n\n492\n00:25:01,130 --> 00:25:03,905\nSo, you always start with just the So\nit's something like this.\n\n493\n00:25:03,905 --> 00:25:07,495\nBasic diagram figure out where traffic\nis going normally.,d then modify it.\n\n494\n00:25:07,495 --> 00:25:09,185\nAll right.\n\n495\n00:25:09,185 --> 00:25:11,435\nSo let me start over on headquarters and\n\n496\n00:25:11,435 --> 00:25:13,675\nwe'll verify the topology\nI just told you about.\n\n497\n00:25:14,925 --> 00:25:21,680\nSo on headquarters,\nif I do a show IP route, all right.\n\n498\n00:25:21,680 --> 00:25:23,990\nI can see, well,\nI've got a bunch of routes.\n\n499\n00:25:23,990 --> 00:25:28,910\nI can see that I've got a gateway of\nlast resort, and it's 204.109.63.1.\n\n500\n00:25:28,910 --> 00:25:30,840\nThat's ISP number one.\n\n501\n00:25:30,840 --> 00:25:33,050\nSo, I've got that gateway of\nlast resort right there, and\n\n502\n00:25:33,050 --> 00:25:35,485\nhere's the was the static\nthat I told you guys about.\n\n503\n00:25:35,485 --> 00:25:38,325\nAnd it's got that\nadministrative distance of ten.\n\n504\n00:25:38,325 --> 00:25:40,615\nSo I've got this default route in place.\n\n505\n00:25:40,615 --> 00:25:43,365\nI'm learning all these other routes\ninternally and externally, so I've got\n\n506\n00:25:43,365 --> 00:25:47,085\nsome OSPF and EIGRP routes that are in\nthere, but I'm not too worried about that.\n\n507\n00:25:47,085 --> 00:25:51,005\nThese are just what's in my routing table,\nand that's how I'm going to go, all right?\n\n508\n00:25:51,005 --> 00:25:52,545\nNow notice this route right here.\n\n509\n00:25:53,720 --> 00:25:56,170\nFor my test IP, I'm gonna use Google.\n\n510\n00:25:56,170 --> 00:25:59,910\nGoogle has a DNS server\nat 8.8.8 all right.\n\n511\n00:25:59,910 --> 00:26:04,840\nAnd you can see that I have two ISPs,\none of them is 204.109.63.1,\n\n512\n00:26:04,840 --> 00:26:08,123\nand the other one 181.7.31.\n\n513\n00:26:08,123 --> 00:26:10,910\nThat's ISP one and ISP two.\n\n514\n00:26:10,910 --> 00:26:12,679\nAnd I've learned the route, so\n\n515\n00:26:12,679 --> 00:26:19,070\nthat 8.0.0.0/8 that whole class\na from both of those IPS's.\n\n516\n00:26:19,070 --> 00:26:24,470\nSo I know I can get to Google\nvia either of those IP's, and\n\n517\n00:26:24,470 --> 00:26:26,940\nit's looked at the cost and\nit ended up being the same.\n\n518\n00:26:26,940 --> 00:26:30,550\nI know I said my bandwidth was different,\nwell it evaluated it, and\n\n519\n00:26:30,550 --> 00:26:32,960\nfound that the bandwidth was the same,\nand it determined it.\n\n520\n00:26:32,960 --> 00:26:34,890\nNow if that's not true\nI'm gonna have to go and\n\n521\n00:26:34,890 --> 00:26:38,970\nmodify, and that happens all the time\nwith things like metro ethernet lines.\n\n522\n00:26:38,970 --> 00:26:42,850\nWhere they run it into your building, it's\na gig connection when you plug it in, but\n\n523\n00:26:42,850 --> 00:26:47,610\nthey've artificially throttled you down\nto ten megabit, or 40 megabits, or\n\n524\n00:26:47,610 --> 00:26:49,670\nwhatever you actually pay for, right?\n\n525\n00:26:49,670 --> 00:26:51,920\nSo it's not uncommon for\nsomething like this to happen.\n\n526\n00:26:51,920 --> 00:26:55,060\nI've done it often, and we can fix\nthat by going into the interfaces and\n\n527\n00:26:55,060 --> 00:26:56,340\nusing the bandwidth commands.\n\n528\n00:26:56,340 --> 00:26:57,905\nBut I'm not worried about it,\n\n529\n00:26:57,905 --> 00:26:59,890\ncuz I'm gonna be overriding\nthis in a minute anyway, so\n\n530\n00:26:59,890 --> 00:27:03,835\nI don't really care what's in the routing\ntable, if I'm going to override it.\n\n531\n00:27:03,835 --> 00:27:08,300\nOKay, so looking at the routing table\nright now, my router has a way to get to\n\n532\n00:27:08,300 --> 00:27:12,030\nthese networks, and it's kind of viewing\nthem as these two different ones.\n\n533\n00:27:12,030 --> 00:27:13,660\nWell you know let's straighten that out.\n\n534\n00:27:13,660 --> 00:27:17,410\nLet's fix that, before we go too much\nfurther, just to be on the safe side.\n\n535\n00:27:17,410 --> 00:27:21,520\nWhat I'm gonna do, is I'm gonna take\nmy interface that points to ISP 1, and\n\n536\n00:27:21,520 --> 00:27:25,620\nI'm gonna use the bandwidth\ncommand to set the bandwidth.\n\n537\n00:27:25,620 --> 00:27:30,030\nAnd let's say that's a 20 megabit line,\nso I just defined it as 20 megabit.\n\n538\n00:27:30,030 --> 00:27:32,670\nRemember the bandwidth command has\nabsolutely nothing to do with your\n\n539\n00:27:32,670 --> 00:27:33,600\nreal bandwidth.\n\n540\n00:27:33,600 --> 00:27:35,540\nThe router doesn't fact check that at all.\n\n541\n00:27:35,540 --> 00:27:39,960\nIt simply tells the routing protocols\nwhat your actual bandwidth is, so\n\n542\n00:27:39,960 --> 00:27:40,850\nthen that's what I want.\n\n543\n00:27:42,140 --> 00:27:45,470\nAnd then I'll get into E0/3,\nwhich is my other ISP.\n\n544\n00:27:45,470 --> 00:27:47,330\nAnd then I'll it bandwidth 10,000.\n\n545\n00:27:47,330 --> 00:27:50,150\nAll right, so ten megabits.\n\n546\n00:27:50,150 --> 00:27:54,840\nSo I've got 20 megabits to ISP one and\nten megabits to ISP two.\n\n547\n00:27:54,840 --> 00:28:01,210\nAnd what should happen, is if I pull up\na route like to Google's DNS servers.\n\n548\n00:28:01,210 --> 00:28:01,780\nRight.\n\n549\n00:28:01,780 --> 00:28:06,340\nWhen I run it, I should see it\ndrop down to only have one route,\n\n550\n00:28:06,340 --> 00:28:08,750\ninstead of the two routes\nit had a moment ago.\n\n551\n00:28:08,750 --> 00:28:12,300\nIf we look at that in the routing table,\nthere it is right there.\n\n552\n00:28:12,300 --> 00:28:15,747\nNow, I just have that one route\nto get there through ISP1, okay.\n\n553\n00:28:17,280 --> 00:28:20,290\nSo, ISP1 is my gateway of last resort.\n\n554\n00:28:20,290 --> 00:28:23,530\nISP1 is also now the best route for\nme to get to Google.\n\n555\n00:28:23,530 --> 00:28:27,340\nEverything should be sending me\nout to that interface on isp1,\n\n556\n00:28:27,340 --> 00:28:28,322\nthat's what I expect to see, all right.\n\n557\n00:28:30,050 --> 00:28:32,440\nIf I jump over to my branches,\nhere's branch one.\n\n558\n00:28:32,440 --> 00:28:36,640\nIf I do a show route ip here,\n\n559\n00:28:36,640 --> 00:28:42,540\nI can see it has a gateway of last resort\nof 192.160.0.1,, that's headquarters.\n\n560\n00:28:42,540 --> 00:28:44,882\nSo headquarters is its\ngateway of last resort, and\n\n561\n00:28:44,882 --> 00:28:48,476\nas I look in this routing table,\nit doesn't have a route for 8.8.8.8 or\n\n562\n00:28:48,476 --> 00:28:50,940\n0.0.0/8, it doesn't have a route for that.\n\n563\n00:28:50,940 --> 00:28:54,230\nSo it's going to use its\ngateway of last resort.\n\n564\n00:28:54,230 --> 00:28:56,110\nIt's going to go through headquarters.\n\n565\n00:28:57,290 --> 00:29:00,670\nAnd if I test it, if I ping to 8.8.8.8,\nI get there, right?\n\n566\n00:29:01,780 --> 00:29:02,800\nGreat.\n\n567\n00:29:02,800 --> 00:29:07,522\nAnd if I use a trace route, to 8.8.8.8,\n\n568\n00:29:07,522 --> 00:29:11,550\nI can see it going, right there,\nit's moving along, going to headquarters,\n\n569\n00:29:11,550 --> 00:29:16,410\nwhich is 192.168.0.1, and then going\nto ISP 1, which is 204.109.63.1, right?\n\n570\n00:29:16,410 --> 00:29:18,990\nThat's what I expected to see.\n\n571\n00:29:20,390 --> 00:29:24,560\nI should see that same behavior\non each of my branches.\n\n572\n00:29:24,560 --> 00:29:28,940\nSo as I go to my other branches and\ndo a \"show IP route,\" they should have\n\n573\n00:29:28,940 --> 00:29:33,570\na gateway of last resort to headquarters,\nand they should be able to get to Google,\n\n574\n00:29:34,940 --> 00:29:39,110\nand if I do a trace route,\nthey should be going through ISP 1.\n\n575\n00:29:39,110 --> 00:29:43,340\nThat's the behavior I'm\nseeing on branch 2.\n\n576\n00:29:43,340 --> 00:29:47,200\nAnd if I look on this guy,\nit's got the gateway of last resort.\n\n577\n00:29:49,500 --> 00:29:56,510\nIt can ping 8.8.8.8 and it goes out ISP1.\n\n578\n00:29:56,510 --> 00:30:00,010\nLet me tell you,\nif you skip over these steps right here,\n\n579\n00:30:00,010 --> 00:30:01,780\nverifying existing traffic.\n\n580\n00:30:01,780 --> 00:30:03,680\nConfiguring your PBR\ncan become a nightmare.\n\n581\n00:30:03,680 --> 00:30:05,420\nCuz you look at it and\nsomething's not working.\n\n582\n00:30:05,420 --> 00:30:08,250\nAnd you think it's PBR that's the problem,\nbut it turns out that it wasn't working in\n\n583\n00:30:08,250 --> 00:30:10,820\nthe first place, and now you've\nmade things even more difficult.\n\n584\n00:30:10,820 --> 00:30:14,570\nSo, that's really where things\nget to be challenging and tough.\n\n585\n00:30:14,570 --> 00:30:20,070\nSo, always verify your topology first,\nbefore you get too far.\n\n586\n00:30:20,070 --> 00:30:24,760\nSo, we should be good there, got my\nroutes in place, things are looking okay.\n\n587\n00:30:24,760 --> 00:30:29,450\nAll right, now what I wanna do,\nis I wanna manipulate this.\n\n588\n00:30:29,450 --> 00:30:34,770\nI wanna manipulate it, so\nthat branch one doesn't go out isp one.\n\n589\n00:30:34,770 --> 00:30:37,460\nI want branch one to go out ISP2.\n\n590\n00:30:37,460 --> 00:30:39,120\nNow, this is where it starts\nto get really challenging.\n\n591\n00:30:39,120 --> 00:30:43,470\nRemember how I said it'd be pretty hard\nfor me to do that with EIGRP or OSPF?\n\n592\n00:30:43,470 --> 00:30:45,920\nAnd the main reason is.\n\n593\n00:30:45,920 --> 00:30:48,340\nThese guys don't have a route for\nthose networks.\n\n594\n00:30:48,340 --> 00:30:50,540\nEven if they did,\nthe route would go to headquarters, right,\n\n595\n00:30:50,540 --> 00:30:52,460\nthey're going through headquarters.\n\n596\n00:30:52,460 --> 00:30:56,606\nAnd at headquarters,\nit only has one route for\n\n597\n00:30:56,606 --> 00:31:01,300\n8.8.8.8, or really 8.000,\n\n598\n00:31:01,300 --> 00:31:06,150\nthat guy right there,\nit's only got one route.\n\n599\n00:31:06,150 --> 00:31:10,460\nSo when it receives traffic, it can't say,\nyeah, these people go this way, and\n\n600\n00:31:10,460 --> 00:31:13,180\nthese other people go this other way,\ncuz it's only got one route.\n\n601\n00:31:13,180 --> 00:31:16,160\nThe only way I can influence that\nis if I brought the other route in.\n\n602\n00:31:16,160 --> 00:31:18,940\nI could do like unequal\ncost to load balancing, and\n\n603\n00:31:18,940 --> 00:31:23,180\nthen half the traffic would go one way and\nhalf the traffic would go the other way.\n\n604\n00:31:23,180 --> 00:31:26,030\nThat's not a known entity, right?\n\n605\n00:31:26,030 --> 00:31:28,970\nI don't know everybody's going to go\nover to one link versus the other.\n\n606\n00:31:28,970 --> 00:31:30,670\nI can't pick and choose.\n\n607\n00:31:30,670 --> 00:31:31,560\nI don't have that capability.\n\n608\n00:31:32,570 --> 00:31:35,600\nBut I can override the routing table,\nand I can create that capability.\n\n609\n00:31:35,600 --> 00:31:37,040\nI can put that in place, and\n\n610\n00:31:37,040 --> 00:31:39,800\nthat's where this stuff starts\nto get really slick, right?\n\n611\n00:31:39,800 --> 00:31:40,420\nSo let's see that.\n\n612\n00:31:41,750 --> 00:31:43,530\nAll right, the first thing I need to do,\n\n613\n00:31:43,530 --> 00:31:46,420\nis I need to create some ACLs\nthat identify my traffic.\n\n614\n00:31:46,420 --> 00:31:47,100\nAll right?\n\n615\n00:31:47,100 --> 00:31:48,860\nI need to look at branch one.\n\n616\n00:31:48,860 --> 00:31:54,840\nand say, all right if want branch one to\ngo out ISP2, I need to look at it and\n\n617\n00:31:54,840 --> 00:31:59,790\nfigure out the criteria of traffic\nthat is gonna be influenced by this.\n\n618\n00:31:59,790 --> 00:32:01,083\nRight?\nSo, on branch one,\n\n619\n00:32:01,083 --> 00:32:03,170\nI need to start thinking\nabout the sources.\n\n620\n00:32:03,170 --> 00:32:04,920\nAnd so, if I look at branch one.\n\n621\n00:32:04,920 --> 00:32:07,130\nI look at its Interfaces.\n\n622\n00:32:07,130 --> 00:32:09,500\nI can see that it's got\nthree different IPs, right?\n\n623\n00:32:09,500 --> 00:32:12,220\nIt's got the 192.168.0 network.\n\n624\n00:32:12,220 --> 00:32:14,500\nThat's the network that my\nheadquarter's router's on.\n\n625\n00:32:14,500 --> 00:32:17,170\nThat's the Metro-E link.\n\n626\n00:32:17,170 --> 00:32:20,450\nI've got the 172.16.2 network,\nwhich actually a /23.\n\n627\n00:32:20,450 --> 00:32:23,260\nSo it's two Class C's bonded together.\n\n628\n00:32:23,260 --> 00:32:26,080\nAnd then I've got this loopback\ndown here that's used for\n\n629\n00:32:26,080 --> 00:32:28,239\nthe OSPF router ID of 2.2.2.2.\n\n630\n00:32:29,478 --> 00:32:33,960\nTechnically, I only care about the clients\nand so that's this network, here.\n\n631\n00:32:33,960 --> 00:32:35,370\nBut if I want to be thorough,\n\n632\n00:32:35,370 --> 00:32:39,920\nif I want to ensure that branch one also\ngoes through this other ISP, I probably\n\n633\n00:32:39,920 --> 00:32:44,136\nneed to make I get all of these different\nIP's that are present in branch one.\n\n634\n00:32:44,136 --> 00:32:45,311\nAll right.\n\n635\n00:32:45,311 --> 00:32:48,360\nSo I need to write an access control list\n\n636\n00:32:48,360 --> 00:32:51,610\nthat identifies the traffic that\nI'm trying to catch, all right?\n\n637\n00:32:51,610 --> 00:32:54,340\nSo I'll jump over to headquarters and\nI'll write that access control list.\n\n638\n00:32:54,340 --> 00:32:57,110\nNow, your ACL can be a standard ACL\n\n639\n00:32:57,110 --> 00:32:59,820\nif you're just basing it on\nsource addresses like I need.\n\n640\n00:32:59,820 --> 00:33:03,050\nIt can be an extended ACL,\nif you wanna base it on source and\n\n641\n00:33:03,050 --> 00:33:05,690\ndestination, or just destination.\n\n642\n00:33:05,690 --> 00:33:08,850\nOr protocol or all the above,\nsource, destination, and\n\n643\n00:33:08,850 --> 00:33:10,930\nprotocol you can use an extended ACL for\nthat.\n\n644\n00:33:12,150 --> 00:33:16,910\nJust remember the more complex the ACL\nthe more formative the system takes.\n\n645\n00:33:16,910 --> 00:33:21,350\nSo, if you can achieve it with\na standard ACL you should but\n\n646\n00:33:21,350 --> 00:33:23,120\nif you need to do\nan extended don't hesitate.\n\n647\n00:33:23,120 --> 00:33:24,110\nYou gotta do it right?\n\n648\n00:33:24,110 --> 00:33:25,560\nSo you use the extended input in place.\n\n649\n00:33:27,110 --> 00:33:30,750\nAlright so in headquarters I'll\ngo ahead and create my first ACL.\n\n650\n00:33:30,750 --> 00:33:33,820\nI'm gonna say access-list 1,\n\n651\n00:33:33,820 --> 00:33:37,360\nI'll just do a numbered ACL you\ncould do a name it would be fine.\n\n652\n00:33:38,470 --> 00:33:42,820\nAnd I'm going to permit\nthe traffic that matches.\n\n653\n00:33:42,820 --> 00:33:44,410\nAnd then everything else I deny, right?\n\n654\n00:33:44,410 --> 00:33:46,690\nI'm just permitting what I want to match.\n\n655\n00:33:46,690 --> 00:33:51,750\nAnd it might be something simple\nlike host 2.2.2.2, right?\n\n656\n00:33:51,750 --> 00:33:52,970\nThat was that router ID for\n\n657\n00:33:52,970 --> 00:33:54,960\nthe router that loop back so\nI'm gonna match just that.\n\n658\n00:33:56,010 --> 00:34:03,440\nOr I want to do the host for\nthe Metro-E link, 192.168.0.2, right.\n\n659\n00:34:03,440 --> 00:34:08,050\nI don't wanna get 192.168.0.1 or\n.3 or .4, cuz that's headquarters,\n\n660\n00:34:08,050 --> 00:34:11,100\nbranch 2, branch 3, right,\nso those other branches.\n\n661\n00:34:11,100 --> 00:34:12,670\nI just wanna get branch 1.\n\n662\n00:34:12,670 --> 00:34:17,290\nBut then there was that network\nwhere all my clients are.\n\n663\n00:34:17,290 --> 00:34:22,448\nAnd so I need to get that\none it was 172.16.2.0 and\n\n664\n00:34:22,448 --> 00:34:27,414\nit was a slash 23 so\nI've got to do that guy right there.\n\n665\n00:34:27,414 --> 00:34:31,640\nAll right to make sure\nthat I get that network.\n\n666\n00:34:31,640 --> 00:34:39,360\nAll right so now that access list matches\nall of the networks that are in branch 1.\n\n667\n00:34:39,360 --> 00:34:43,560\nIt can use this access list to then go and\ninfluence the other systems.\n\n668\n00:34:43,560 --> 00:34:45,890\nIf I wanted to influence the other\nbranches I could do access list 2,\n\n669\n00:34:45,890 --> 00:34:48,870\nI could do access list 3 or\nI could continue on with that, but here,\n\n670\n00:34:48,870 --> 00:34:49,888\nI'm just doing access list 1.\n\n671\n00:34:52,370 --> 00:34:54,770\nAll right, that's step one.\n\n672\n00:34:54,770 --> 00:34:58,530\nStep one, create whatever ACLs\nyou need to match your traffic.\n\n673\n00:34:58,530 --> 00:35:00,930\nStep two, create your policy.\n\n674\n00:35:00,930 --> 00:35:02,870\nMy policy's gonna be pretty simple.\n\n675\n00:35:02,870 --> 00:35:07,210\nIf you're coming from branch 1, go out\nISP2 when you're trying to get to Google.\n\n676\n00:35:07,210 --> 00:35:08,450\nOh, I forgot that part, shoot.\n\n677\n00:35:09,530 --> 00:35:12,760\nI did a standard ACL, that doesn't\ninclude a destination, does it?\n\n678\n00:35:12,760 --> 00:35:14,920\n>> Nope.\n>> Right, so now I've got a choice.\n\n679\n00:35:16,570 --> 00:35:19,180\nI can either one,\ncontinue on with this ACL and\n\n680\n00:35:19,180 --> 00:35:23,740\njust route all traffic\nfrom branch 1 out ISP2,\n\n681\n00:35:23,740 --> 00:35:27,840\nor I can go back and\nchange it to an extended ACL and\n\n682\n00:35:27,840 --> 00:35:33,150\nsay, just route branch 1's traffic\nout ISP2 when it's going to Google.\n\n683\n00:35:33,150 --> 00:35:36,610\nAnd that's really what I intended to do so\nI'm going to exchange this out for\n\n684\n00:35:36,610 --> 00:35:38,300\nan extended ACL.\n\n685\n00:35:38,300 --> 00:35:40,930\nSee it's good to walk\nthrough these things.\n\n686\n00:35:40,930 --> 00:35:43,076\n>> Yeah.\n>> You catch your mistakes, sometimes.\n\n687\n00:35:43,076 --> 00:35:46,303\nSo I'll go in here and redo it.\n\n688\n00:35:46,303 --> 00:35:48,693\nNow I'm going to say permit IP because\nI'm just going to do all traffic\n\n689\n00:35:48,693 --> 00:35:49,650\nthrough Google.\n\n690\n00:35:49,650 --> 00:35:54,820\nIf I just wanted to get web traffic I'd\nsay TCP source destination and protocol.\n\n691\n00:35:54,820 --> 00:36:00,635\nHere I'll just say permit IP and\nI'm gonna do host 2.2.2.2 going to,\n\n692\n00:36:00,635 --> 00:36:06,545\nand I guess I can do the specific host at\nGoogle or I'll do their whole network.\n\n693\n00:36:06,545 --> 00:36:11,980\nI'll just do that 8.0.0.0 and\nthat's a class A.\n\n694\n00:36:11,980 --> 00:36:13,150\nSo I'm gonna send that class A,\n\n695\n00:36:13,150 --> 00:36:18,500\nand I'm not gonna specify a protocol so\nthat'll match that.\n\n696\n00:36:18,500 --> 00:36:21,060\nAnd then I'll add that other host.\n\n697\n00:36:22,230 --> 00:36:25,670\nSo now I'm doing source and\ndestination getting nice and complex.\n\n698\n00:36:26,820 --> 00:36:29,418\nAnd then the last one was\nthat 172.16 network, so\n\n699\n00:36:29,418 --> 00:36:31,140\nlet me just get that plugged in here.\n\n700\n00:36:33,207 --> 00:36:35,990\nWhoops, my typing skills\nare lacking today.\n\n701\n00:36:39,920 --> 00:36:43,448\nAnd I need to get rid of my host tag and\nchange that so\n\n702\n00:36:43,448 --> 00:36:46,819\nI have a wildcard mask of 0.0.1.255.\n\n703\n00:36:46,819 --> 00:36:48,295\nLet's me move that up on\nthe screen a little bit so\n\n704\n00:36:48,295 --> 00:36:49,816\nmy head's not covering it and\nyou guys can see it.\n\n705\n00:36:49,816 --> 00:36:54,148\nThat last line is\naccess-list 101 permit IP\n\n706\n00:36:54,148 --> 00:36:58,712\n172.16.2.0.0.0.1.255.\n\n707\n00:36:58,712 --> 00:37:05,940\nRight so that 172.16.2 /23 network when\nit's going to the 8.0.0.0/8, that class A.\n\n708\n00:37:06,980 --> 00:37:11,130\nSo now I'm matching just\nwhen they go to Google,\n\n709\n00:37:11,130 --> 00:37:16,190\nnot necessarily all of their traffic.\n\n710\n00:37:16,190 --> 00:37:18,390\nSo now that I've got that,\nI can create my route map and\n\n711\n00:37:18,390 --> 00:37:21,640\nI can start to put this stuff in here,\nso let's get it in place.\n\n712\n00:37:21,640 --> 00:37:25,340\nI'm gonna start by creating a route map,\nand route maps are a little weird.\n\n713\n00:37:25,340 --> 00:37:27,910\nThey're a lot like ACL,\nthey're like named ACLs.\n\n714\n00:37:29,190 --> 00:37:32,830\nWhen you create a route map each\nentry has a sequence number, and so\n\n715\n00:37:32,830 --> 00:37:35,020\nyou give the sequence numbers,\nI normally go up by tens.\n\n716\n00:37:35,020 --> 00:37:37,710\nSo I'll do entry for ten, 20, 30, 40 so\n\n717\n00:37:37,710 --> 00:37:39,790\nyou can put things in\nbetween them later on.\n\n718\n00:37:41,110 --> 00:37:45,100\nAnd then,\neach entry has a permit and a deny.\n\n719\n00:37:45,100 --> 00:37:45,790\nOkay?\n\n720\n00:37:45,790 --> 00:37:48,560\nNow, the deny,\nwe use that for other things.\n\n721\n00:37:48,560 --> 00:37:53,950\nWe'll see that in 3.14, but for\nPBR, you really don't use denies.\n\n722\n00:37:53,950 --> 00:37:55,150\nYou use permits.\n\n723\n00:37:55,150 --> 00:38:00,430\nYou permit traffic to match an entry\nto then be policy-base routed.\n\n724\n00:38:00,430 --> 00:38:02,830\nOr you permit traffic\nto be routed as normal.\n\n725\n00:38:02,830 --> 00:38:05,070\nSo, you don't really use denies in PBR.\n\n726\n00:38:06,160 --> 00:38:08,590\nSo, I'm gonna say route map and\nI need to give it a name.\n\n727\n00:38:08,590 --> 00:38:10,710\nAnd I'll just call mine PBR-Map.\n\n728\n00:38:10,710 --> 00:38:11,960\nAnd it is case sensitive.\n\n729\n00:38:11,960 --> 00:38:15,400\nSo, I did some capital letters there\nI'll have to remember that later on.\n\n730\n00:38:15,400 --> 00:38:17,770\nSo, I'm just punching in a name.\n\n731\n00:38:17,770 --> 00:38:20,090\nAnd then I'll say permit 10.\n\n732\n00:38:20,090 --> 00:38:24,310\nSo I'm creating sequence number ten, and\nthis is going to be permitting traffic.\n\n733\n00:38:24,310 --> 00:38:27,030\nBut like I said,\nin PBR you pretty much always do permit.\n\n734\n00:38:27,030 --> 00:38:30,070\nAll right.\n\n735\n00:38:30,070 --> 00:38:32,910\nSo now my prompt changes and\nI'm in the route map.\n\n736\n00:38:32,910 --> 00:38:36,700\nAnd here's where I put in my match and\nset statements.\n\n737\n00:38:36,700 --> 00:38:41,530\nI want to match traffic from ACL 101.\n\n738\n00:38:41,530 --> 00:38:44,420\nSo, I'm gonna say match address 101.\n\n739\n00:38:44,420 --> 00:38:47,940\nAny traffic that matches access\nlist 101 is the one I want.\n\n740\n00:38:47,940 --> 00:38:51,080\nNow, there's some different syntax\nin different iOSes for this, so\n\n741\n00:38:51,080 --> 00:38:55,020\nyou might actually see\nmatch IP address 101, or\n\n742\n00:38:55,020 --> 00:38:59,040\nmatch IPv4 or v6, sorry, IPv6 address 101.\n\n743\n00:38:59,040 --> 00:39:01,190\nThat syntax is good, too.\n\n744\n00:39:01,190 --> 00:39:03,530\nThe original syntax was match address.\n\n745\n00:39:03,530 --> 00:39:05,860\nThey all still work,\nnone of them have been deprecated, so\n\n746\n00:39:05,860 --> 00:39:07,230\nwhichever syntax you prefer.\n\n747\n00:39:07,230 --> 00:39:08,190\nBut there is more than one.\n\n748\n00:39:09,700 --> 00:39:11,480\nSo I'm gonna match that access list.\n\n749\n00:39:12,880 --> 00:39:15,410\nThen I need to say what\nI want to do to it.\n\n750\n00:39:15,410 --> 00:39:19,930\nAnd so I'm gonna say set, and\nthen the action that I wanna perform.\n\n751\n00:39:19,930 --> 00:39:24,190\nAnd what I'm trying to do is when I\nhave traffic that matches this ACL,\n\n752\n00:39:24,190 --> 00:39:27,120\nI wanted to use a next hop of ISP2.\n\n753\n00:39:27,120 --> 00:39:30,640\nI wanted to use that\nother ISP that I've got.\n\n754\n00:39:30,640 --> 00:39:35,800\nAnd I don't remember it's IP so\nwhat I'm gonna do is, let me look\n\n755\n00:39:35,800 --> 00:39:40,960\nin my config for that.\n\n756\n00:39:40,960 --> 00:39:41,750\nThere we go.\n\n757\n00:39:41,750 --> 00:39:45,270\nHere's my two static routes for\nmy gateway of last resort and\n\n758\n00:39:45,270 --> 00:39:46,860\nso this is ISP2 right here.\n\n759\n00:39:46,860 --> 00:39:49,410\nI'm just gonna copy that IP address.\n\n760\n00:39:49,410 --> 00:39:56,800\nAnd that way, I can do a set next-hop,\nand then the IP of that next hop.\n\n761\n00:39:56,800 --> 00:39:58,750\nAll right, now I am adjacent to that hop.\n\n762\n00:39:58,750 --> 00:40:01,750\nI'm plugged into ISP2, so\nI'm just gonna use next hop.\n\n763\n00:40:01,750 --> 00:40:02,630\nAll right.\n\n764\n00:40:02,630 --> 00:40:06,757\nI could use next hop recursive\nif I wasn't adjacent or\n\n765\n00:40:06,757 --> 00:40:09,979\nif I wasn't doing destinations up here.\n\n766\n00:40:09,979 --> 00:40:14,556\nIf this was just based on source and\nthe destination wasn't in\n\n767\n00:40:14,556 --> 00:40:19,330\nthe routing table then I would\ndo that default next-hop right?\n\n768\n00:40:19,330 --> 00:40:22,240\nThat's the variation to each of those so\nyou've got to pick the right one.\n\n769\n00:40:22,240 --> 00:40:25,100\nIn my case,\nnext hop is exactly what I need.\n\n770\n00:40:25,100 --> 00:40:27,730\nTraffic matching that ACL\nis gonna be sent to ISP2.\n\n771\n00:40:27,730 --> 00:40:29,600\nAll right?\n\n772\n00:40:29,600 --> 00:40:30,353\nAnd it did not like that.\n\n773\n00:40:30,353 --> 00:40:31,247\nWhat did I leave out?\n\n774\n00:40:31,247 --> 00:40:31,828\nSet.\n\n775\n00:40:31,828 --> 00:40:35,450\nOh, [LAUGH] Set IP next hop,\nyou gotta tell it what protocol.\n\n776\n00:40:35,450 --> 00:40:36,552\nThere we go.\n\n777\n00:40:36,552 --> 00:40:39,830\nSet IP next-hop.\n\n778\n00:40:39,830 --> 00:40:42,380\nAll right, so\nnow it knows where to send the traffic.\n\n779\n00:40:42,380 --> 00:40:44,609\nAnd I'm done.\nWell, not quite.\n\n780\n00:40:44,609 --> 00:40:48,602\nThis matches the traffic that I specified,\nright?\n\n781\n00:40:48,602 --> 00:40:51,210\nSo, it matches it and great.\n\n782\n00:40:51,210 --> 00:40:54,640\nWhat about everything that\ndoesn't match this route map?\n\n783\n00:40:54,640 --> 00:40:59,450\nWell, technically I am done, if it doesn't\nmatch this route map, what happens?\n\n784\n00:40:59,450 --> 00:41:00,378\nIs it goes against\nthe regular routing table.\n\n785\n00:41:00,378 --> 00:41:02,554\nIt says, all right well you're not\ngoing to be policy based routed,\n\n786\n00:41:02,554 --> 00:41:04,139\nI'll just send you to\nthe regular routing table.\n\n787\n00:41:04,139 --> 00:41:07,745\nIf you wanted that traffic to\nbe policy based routed also,\n\n788\n00:41:07,745 --> 00:41:09,820\nyou would have to add more lines.\n\n789\n00:41:09,820 --> 00:41:13,340\nI would say route map, pbr map,\npermit 20, permit 30, and\n\n790\n00:41:13,340 --> 00:41:16,690\nstart adding more and\nmore in there as we go through and\n\n791\n00:41:16,690 --> 00:41:20,610\npunch in what that traffic's gonna be and\nwhere it's gonna go.\n\n792\n00:41:20,610 --> 00:41:25,190\nSo for example I mentioned,\nlike if they had a web filter.\n\n793\n00:41:25,190 --> 00:41:26,970\nSo I might want to filter web traffic.\n\n794\n00:41:26,970 --> 00:41:28,520\nI might create an access list.\n\n795\n00:41:30,030 --> 00:41:33,810\nAnd I'll do another extended one here,\nthis'll be like 102.\n\n796\n00:41:33,810 --> 00:41:40,280\nAnd I will say permit tcp any any eq 80,\nright, really big list there.\n\n797\n00:41:40,280 --> 00:41:43,605\nI am gonna match any\ntraffic on tcp port 80.\n\n798\n00:41:44,810 --> 00:41:48,420\nAnd then I can say route map PBR dash map\n\n799\n00:41:49,790 --> 00:41:52,840\npermit 20 so\nI'm creating sequence number 20.\n\n800\n00:41:52,840 --> 00:41:58,124\nI'm going to match address list 102 and\n\n801\n00:41:58,124 --> 00:42:05,040\nI'm going to set next-hub,\noops, set ip next-hub.\n\n802\n00:42:06,790 --> 00:42:08,400\nAnd I'll set that to my web filter.\n\n803\n00:42:08,400 --> 00:42:13,570\nAnd maybe my web filter is 192.168.0.99 So\n\n804\n00:42:13,570 --> 00:42:15,300\nI'll point it to wherever\nmy web filter is.\n\n805\n00:42:15,300 --> 00:42:17,260\nSo now I've got an extra line in there.\n\n806\n00:42:19,020 --> 00:42:22,660\nAnd if I do a, well here, let me\njust get out of config for a second.\n\n807\n00:42:22,660 --> 00:42:27,650\nIf I do a show IP route-map.\n\n808\n00:42:27,650 --> 00:42:29,450\nOh wait, we don't need IP for this one.\n\n809\n00:42:29,450 --> 00:42:31,180\nShow route map, there we go.\n\n810\n00:42:31,180 --> 00:42:32,580\nI can see my route map.\n\n811\n00:42:32,580 --> 00:42:34,670\nWe've got sequence number 10.\n\n812\n00:42:34,670 --> 00:42:38,880\nIt's matching access list 101 and\nit's setting that next hop.\n\n813\n00:42:38,880 --> 00:42:41,490\nAnd then I can see sequence number 20.\n\n814\n00:42:41,490 --> 00:42:42,970\nIt's matching access list 102.\n\n815\n00:42:42,970 --> 00:42:44,390\nAnd it's setting that next hop.\n\n816\n00:42:45,610 --> 00:42:47,770\nWhat about everybody else?\n\n817\n00:42:47,770 --> 00:42:50,160\nEverybody else will not get policy routed.\n\n818\n00:42:50,160 --> 00:42:52,900\nThey'll just get routed off the regular\nrouting table and off they go.\n\n819\n00:42:52,900 --> 00:42:57,915\nNow you do have some policy\nrouting matches right here.\n\n820\n00:42:57,915 --> 00:43:00,202\nSo you can see how many\npackets have matched.\n\n821\n00:43:00,202 --> 00:43:04,120\nAnd that's a good indicator as to\nwhether or not your policy is working.\n\n822\n00:43:05,160 --> 00:43:07,200\nI don't like to rely on that one, though.\n\n823\n00:43:07,200 --> 00:43:08,830\nIt does work, you can use it.\n\n824\n00:43:08,830 --> 00:43:12,280\nBut I found, especially if it's\na router has been online awhile,\n\n825\n00:43:12,280 --> 00:43:14,670\nthose numbers can be a little\nmisleading sometimes.\n\n826\n00:43:14,670 --> 00:43:17,430\nSo you do have that,\nbut there are plenty of\n\n827\n00:43:17,430 --> 00:43:21,170\ndifferent ways to monitor to see\nwhether or not this work is working.\n\n828\n00:43:21,170 --> 00:43:24,550\nThe best way is to go to the client\nto do some trace routes and\n\n829\n00:43:24,550 --> 00:43:25,540\nsee where you end up, right?\n\n830\n00:43:25,540 --> 00:43:26,950\nThat's probably the best way.\n\n831\n00:43:26,950 --> 00:43:33,700\nBut, another way is that on your router,\nyou can run debug ip policy,\n\n832\n00:43:34,990 --> 00:43:40,040\nand what that'll do is every time\na policy is put into effect.\n\n833\n00:43:40,040 --> 00:43:42,340\nIt'll give you a little screen output\nto let you know that it happens.\n\n834\n00:43:42,340 --> 00:43:45,410\nNow, if you're on a very,\nvery busy network,\n\n835\n00:43:45,410 --> 00:43:49,090\nthis command can generate a ton of output,\nso be really careful.\n\n836\n00:43:49,090 --> 00:43:51,980\nDon't run it from a telnet or SSH session.\n\n837\n00:43:51,980 --> 00:43:55,790\nRun it from the console, but\neven if you do that, don't run it for\n\n838\n00:43:55,790 --> 00:43:56,780\ntoo terribly long.\n\n839\n00:43:56,780 --> 00:43:58,660\nRunt it to verify things are working and\nthen turn it off.\n\n840\n00:44:00,370 --> 00:44:02,540\nNow, I'm missing an important step here.\n\n841\n00:44:02,540 --> 00:44:07,970\nI created my ACLs, I created my policy but\nthe policy's not going to work.\n\n842\n00:44:07,970 --> 00:44:11,570\nAnd that's because I haven't\nattached it to an interface.\n\n843\n00:44:11,570 --> 00:44:13,390\nWhen I look at my diagram,\n\n844\n00:44:13,390 --> 00:44:17,150\nthe branches are all coming into\nheadquarters on one interface.\n\n845\n00:44:17,150 --> 00:44:20,160\nI need this policy to\napply to that interface.\n\n846\n00:44:20,160 --> 00:44:23,040\nSo the traffic comes in,\nthe routing table gets skipped.\n\n847\n00:44:23,040 --> 00:44:24,640\nMy policy takes effect.\n\n848\n00:44:24,640 --> 00:44:27,950\nAnd then I route them out to\nthe appropriate destination.\n\n849\n00:44:27,950 --> 00:44:31,600\nSo, I need to do that before I'm done.\n\n850\n00:44:31,600 --> 00:44:36,670\nAnd on headquarters if I look e0/0 that's\nthe interface that points to my branches.\n\n851\n00:44:36,670 --> 00:44:38,680\nAnd so that's where I need to attach it.\n\n852\n00:44:38,680 --> 00:44:43,859\nAnd, so I'm gonna get into e0/0 and\nI'll just say ip.\n\n853\n00:44:45,260 --> 00:44:50,200\nNow, let's see,\nit's ip policy route-map and\n\n854\n00:44:50,200 --> 00:44:54,730\nthen what policy I want it to be,\nwhich is going to be pdr-map.\n\n855\n00:44:54,730 --> 00:44:57,830\nNow, notice I don't have an in and an out.\n\n856\n00:44:57,830 --> 00:45:00,340\nIt only applies to incoming traffic.\n\n857\n00:45:00,340 --> 00:45:02,090\nYou can't have outbound policies.\n\n858\n00:45:02,090 --> 00:45:05,530\nYou can't influence traffic\nas it's leaving your router.\n\n859\n00:45:05,530 --> 00:45:07,890\nYour chance to influence is already gone.\n\n860\n00:45:07,890 --> 00:45:12,470\nSo you got to get it on the way in and\nnow that policy's in place.\n\n861\n00:45:12,470 --> 00:45:15,815\nAnd I got a debug message that just\ncame up letting me know that a policy\n\n862\n00:45:15,815 --> 00:45:16,945\nwas just set.\n\n863\n00:45:16,945 --> 00:45:18,855\nRight?\nSo I know that policy is active.\n\n864\n00:45:20,025 --> 00:45:21,395\nHas it done anything yet?\n\n865\n00:45:21,395 --> 00:45:23,275\nNo but it is active.\n\n866\n00:45:23,275 --> 00:45:24,205\nRight?\n\n867\n00:45:24,205 --> 00:45:26,571\nAnd there's gonna be some traffic\nthat doesn't trip the policy.\n\n868\n00:45:26,571 --> 00:45:31,076\nSo for example,\nlet me find something out here on ISP1.\n\n869\n00:45:31,076 --> 00:45:33,584\nLet's find an IP that I can ping here.\n\n870\n00:45:33,584 --> 00:45:35,175\nI'll test this 116 address.\n\n871\n00:45:37,844 --> 00:45:38,880\nAll right.\n\n872\n00:45:38,880 --> 00:45:43,047\nSo if i'm out at a branch and I try and\nget to a network like this one.\n\n873\n00:45:43,047 --> 00:45:46,553\nRight, this 116.17.91.1, right.\n\n874\n00:45:46,553 --> 00:45:50,870\nThat's not gonna match\nthe ACL's that I wrote.\n\n875\n00:45:50,870 --> 00:45:54,240\nThe ACL's that are in place to\ncatch traffic, this is a ping.\n\n876\n00:45:54,240 --> 00:45:55,080\nSo it's not on port 80.\n\n877\n00:45:55,080 --> 00:45:56,840\nIt's not gonna match that entry.\n\n878\n00:45:56,840 --> 00:45:59,660\nAnd it's not going to Google's network so\nit's not gonna match that entry either.\n\n879\n00:45:59,660 --> 00:46:02,980\nThis does not match my route map,\nall right?\n\n880\n00:46:02,980 --> 00:46:04,406\nAnd if I trace route to it.\n\n881\n00:46:04,406 --> 00:46:07,727\nRight, so I'm just gonna just\ntrace right out to that.\n\n882\n00:46:07,727 --> 00:46:10,791\nI can see I'm going out ISP1, right?\n\n883\n00:46:10,791 --> 00:46:14,855\nThat 204.109, that's ISP1 that's the way\nthat I'm going out to the internet.\n\n884\n00:46:14,855 --> 00:46:19,706\nAnd if I look on headquarters, look at\nmy debug app, but just for those pings,\n\n885\n00:46:19,706 --> 00:46:23,840\nand what you can see is, whoops,\nif I don't go scroll crazy here.\n\n886\n00:46:23,840 --> 00:46:28,379\nHere's the very first one,\nit came from 192.168.0.2,\n\n887\n00:46:28,379 --> 00:46:31,980\nit's destination was 116.17.91.1,\nit's got it's link.\n\n888\n00:46:33,020 --> 00:46:36,629\nIt can say here FIB policy rejected.\n\n889\n00:46:36,629 --> 00:46:39,323\nIt didn't match the policy.\n\n890\n00:46:39,323 --> 00:46:42,770\nThere was no match, and\nso normal forwarding.\n\n891\n00:46:42,770 --> 00:46:46,830\nIt didn't match the policy, so it just\nthrew it right over the routing table.\n\n892\n00:46:46,830 --> 00:46:49,208\nAnd it went out using whatever\nthe routing table set.\n\n893\n00:46:49,208 --> 00:46:53,610\nNormal behavior but,\n\n894\n00:46:53,610 --> 00:46:58,030\nif I jump over to branch one,\nand I do a ping to 8.8.8.8.\n\n895\n00:46:58,030 --> 00:46:58,570\nRight?\n\n896\n00:47:00,740 --> 00:47:02,330\nNow i'm pinging Google, and I get there.\n\n897\n00:47:03,650 --> 00:47:05,830\nAnd if I jump back to HQ, I can look.\n\n898\n00:47:05,830 --> 00:47:06,642\nAnd here it's going.\n\n899\n00:47:06,642 --> 00:47:11,970\nAnd I see that traffic destined for\n8.8.8.8, and I see FIB\n\n900\n00:47:11,970 --> 00:47:17,178\npolicy match, right, it matched the policy\nand that means that it got PBR routed.\n\n901\n00:47:17,178 --> 00:47:18,590\nSo you got PBR counted,\n\n902\n00:47:18,590 --> 00:47:21,400\nthat means it increased the counter\non the route map entries.\n\n903\n00:47:21,400 --> 00:47:24,580\nAnd then you see that\nstatement policy routed,\n\n904\n00:47:24,580 --> 00:47:27,290\nit routed me according to the policy.\n\n905\n00:47:27,290 --> 00:47:32,810\nAnd if I jump back over to my branch and\nI do a traceroute.\n\n906\n00:47:32,810 --> 00:47:36,082\nI should see that when I went out to\nthat host, I didn't go out ISP 1.\n\n907\n00:47:36,082 --> 00:47:38,880\nI went out 181.7.31.1.\n\n908\n00:47:38,880 --> 00:47:40,634\nThat's ISP 2, right?\n\n909\n00:47:40,634 --> 00:47:44,430\nI went out a different gateway\nbecause of the policy.\n\n910\n00:47:44,430 --> 00:47:46,670\nThat's the power of PBR.\n\n911\n00:47:46,670 --> 00:47:51,080\nI'm now filtering based on source,\nthe source of the traffic,\n\n912\n00:47:51,080 --> 00:47:53,020\nwell the source and\ndestination in this scenario.\n\n913\n00:47:53,020 --> 00:47:56,340\nThat's a lot more powerful\nthan what we normally have.\n\n914\n00:47:56,340 --> 00:48:00,511\nNow my only problem is all of my\npolicy-based routing right now is being\n\n915\n00:48:00,511 --> 00:48:01,630\ndone in software.\n\n916\n00:48:01,630 --> 00:48:05,393\nSo I probably want to cache that\npolicy Down to the data planes,\n\n917\n00:48:05,393 --> 00:48:10,150\nso that I don't have to do these lookups\nagainst the control plane all the time.\n\n918\n00:48:10,150 --> 00:48:13,170\nSo on HQ here, I'm just gonna go ahead and\ndo one more command.\n\n919\n00:48:13,170 --> 00:48:17,920\nI'm gonna say IP route-cache policy.\n\n920\n00:48:19,660 --> 00:48:20,160\nI'm gonna try.\n\n921\n00:48:20,160 --> 00:48:22,224\nIs it not route-cache?\n\n922\n00:48:22,224 --> 00:48:24,800\nOh, I wonder if this OS doesn't\nsupport it, that would be fun.\n\n923\n00:48:29,579 --> 00:48:31,875\nThis one might not support it, shoot.\n\n924\n00:48:31,875 --> 00:48:35,315\nNot every router has that route cache.\n\n925\n00:48:35,315 --> 00:48:39,865\nI kind of thought this one did,\nbut apparently it doesn't, but,\n\n926\n00:48:39,865 --> 00:48:42,325\nyeah so it's apparently not gonna take it.\n\n927\n00:48:42,325 --> 00:48:46,265\nBut if you're on, like, I know for\na fact I've done this on 7200s,\n\n928\n00:48:46,265 --> 00:48:48,260\nlike the 7200 series routers.\n\n929\n00:48:48,260 --> 00:48:48,950\nAdd that route cache.\n\n930\n00:48:48,950 --> 00:48:49,600\nThere's no big deal.\n\n931\n00:48:49,600 --> 00:48:53,520\nYou just run IP route//\npolicy cache it down.\n\n932\n00:48:53,520 --> 00:48:56,500\nMakes that processing that much easier.\n\n933\n00:48:56,500 --> 00:48:57,420\nYeah, that is strange.\n\n934\n00:48:57,420 --> 00:48:59,370\nI could of swore this one had it.\n\n935\n00:48:59,370 --> 00:49:04,470\nLet me see if it shifted\noff to aninterface.\n\n936\n00:49:04,470 --> 00:49:07,690\nOh it is, look at that,\nthere it is, it's on the interface.\n\n937\n00:49:07,690 --> 00:49:09,810\nSo on this router I gotta go into\nthe interface, not globally.\n\n938\n00:49:09,810 --> 00:49:13,842\nSo inside of E0/0, which is where\nthat policy is being applied anyway,\n\n939\n00:49:13,842 --> 00:49:15,320\nI can cache it right there.\n\n940\n00:49:15,320 --> 00:49:18,670\nThere we go, I could have swore\nthis router supported it.\n\n941\n00:49:18,670 --> 00:49:21,850\nSo IP route dash cache policy,\nthat puts into effect and\n\n942\n00:49:21,850 --> 00:49:24,460\nnow when data comes in on that interface,\n\n943\n00:49:24,460 --> 00:49:26,820\nit doesn't have to go up to the control\nplane to look up that policy.\n\n944\n00:49:26,820 --> 00:49:28,430\nIt's already cached right there.\n\n945\n00:49:28,430 --> 00:49:31,060\nIt takes effect, and I'll get some\nbetter performance out of it there.\n\n946\n00:49:31,060 --> 00:49:32,100\nDefinitely a step we want to take.\n\n947\n00:49:34,347 --> 00:49:35,190\nAll right.\n\n948\n00:49:35,190 --> 00:49:37,160\nNow I don't have any work\nstations on this network,\n\n949\n00:49:37,160 --> 00:49:40,560\nto be able to throw like some web traffic\nat it, and see that one take effect.\n\n950\n00:49:40,560 --> 00:49:43,420\nWell I guess I don't a web filter either,\nso the traffic would get black holed.\n\n951\n00:49:43,420 --> 00:49:48,280\nBut anyhow, at this point,\nwe can see PBR in action,\n\n952\n00:49:48,280 --> 00:49:50,690\nrouting our traffic based\non that destination.\n\n953\n00:49:50,690 --> 00:49:51,832\nIt's really neat stuff.\n\n954\n00:49:51,832 --> 00:49:56,100\nAnd you can override every aspect\nof your routing table through PBR.\n\n955\n00:49:56,100 --> 00:49:57,150\nIt's very powerful.\n\n956\n00:49:57,150 --> 00:49:58,060\n>> Yeah.\n\n957\n00:49:58,060 --> 00:50:01,080\nThe thing to also remember about this PBR,\n\n958\n00:50:01,080 --> 00:50:05,150\nis that it's always based on traffic\nmoving through the router itself.\n\n959\n00:50:05,150 --> 00:50:06,840\nSo whenever you do that IP.\n\n960\n00:50:06,840 --> 00:50:08,470\n>> Route mash?\n\n961\n00:50:08,470 --> 00:50:11,330\n>> Why can't I remember which one it was?\n\n962\n00:50:11,330 --> 00:50:13,320\nWhen we apply it to the interface,\n\n963\n00:50:13,320 --> 00:50:17,690\nthe policy, there's also another\ncommand called IP local policy,\n\n964\n00:50:17,690 --> 00:50:21,080\nif the traffic is actually originating\nfrom the router itself too.\n\n965\n00:50:21,080 --> 00:50:25,200\nSo if you think that, hey, I'm gonna test\nthis out by using it, on the router and\n\n966\n00:50:25,200 --> 00:50:27,830\ngenerating traffic from that router,\nit may not apply.\n\n967\n00:50:27,830 --> 00:50:30,230\nYou may have to add in that local\ncommand right in front of it.\n\n968\n00:50:30,230 --> 00:50:31,380\n>> Yeah, that's a good point.\n\n969\n00:50:31,380 --> 00:50:36,110\nIf I was testing from headquarters,\nheadquarter's the one applying the policy,\n\n970\n00:50:36,110 --> 00:50:38,290\nits traffic doesn't\ncome from an interface.\n\n971\n00:50:38,290 --> 00:50:40,840\nAnd so\nthat traffic doesn't get policy routed.\n\n972\n00:50:40,840 --> 00:50:42,920\nYeah, you'd have to do that one.\n\n973\n00:50:42,920 --> 00:50:45,130\nIt's certainly useful.\n\n974\n00:50:45,130 --> 00:50:46,650\nDo you remember the actual command?\n\n975\n00:50:46,650 --> 00:50:47,850\nIt's a local command, right?\n\n976\n00:50:47,850 --> 00:50:48,610\n>> IP local.\n\n977\n00:50:48,610 --> 00:50:51,300\nYup, it's from the global.\n\n978\n00:50:51,300 --> 00:50:51,950\nYup, policy.\n\n979\n00:50:51,950 --> 00:50:53,760\n>> IP local policy, there we go.\n\n980\n00:50:53,760 --> 00:50:55,970\nAnd you can apply the route map to it.\n\n981\n00:50:55,970 --> 00:50:57,450\nAlthough, I'm not gonna\nmatch my route map,\n\n982\n00:50:57,450 --> 00:51:01,030\nI'd have to add an extra entry in there,\nbut we could apply that.\n\n983\n00:51:01,030 --> 00:51:01,690\nThere we go.\n\n984\n00:51:01,690 --> 00:51:03,450\nAnd now our local traffic\nis being filtered.\n\n985\n00:51:03,450 --> 00:51:04,640\nSo pretty cool stuff.\n\n986\n00:51:04,640 --> 00:51:05,710\nAll right.\n\n987\n00:51:05,710 --> 00:51:08,340\nSo that's pretty much it for PBR.\n\n988\n00:51:08,340 --> 00:51:09,960\nLike I said, it's not that hard.\n\n989\n00:51:09,960 --> 00:51:12,200\nYou write ACLs to match your traffic.\n\n990\n00:51:12,200 --> 00:51:14,854\nYou create a route map\nthat defines the traffic,\n\n991\n00:51:14,854 --> 00:51:16,530\nand what's gonna happen to the traffic.\n\n992\n00:51:16,530 --> 00:51:17,870\nAnd then you just attach\nit to an interface.\n\n993\n00:51:17,870 --> 00:51:19,250\nSo the steps aren't that hard.\n\n994\n00:51:19,250 --> 00:51:22,200\nThe route maps aren't that\nhard to write either.\n\n995\n00:51:22,200 --> 00:51:25,060\nAnd after that it's done.\n\n996\n00:51:25,060 --> 00:51:26,895\nNow I'm getting a lot of debugging output.\n\n997\n00:51:26,895 --> 00:51:29,690\n[LAUGH] I'll turn that off,\n\n998\n00:51:29,690 --> 00:51:32,800\nalways remember to turn off your debug\noutput when you're done debugging,\n\n999\n00:51:32,800 --> 00:51:36,380\notherwise it continues to annoy you for\nthe rest of your existence.\n\n1000\n00:51:36,380 --> 00:51:38,345\nWhich is always a good time, so.\n\n1001\n00:51:38,345 --> 00:51:42,760\n[LAUGH] Just to recap right here at the\nend, let me pull up the running config, so\n\n1002\n00:51:42,760 --> 00:51:46,750\nyou guys can see what all that looks like,\nyou know.\n\n1003\n00:51:46,750 --> 00:51:49,070\nHere's my interface, it's on e0/0.\n\n1004\n00:51:49,070 --> 00:51:53,510\nI've got that ip policy\nroute-map in my route map right?\n\n1005\n00:51:53,510 --> 00:51:55,690\nThat was what attached\nthe policy to the interface.\n\n1006\n00:51:55,690 --> 00:51:58,240\nAnd I've got the route cache\nturned on right there, right?\n\n1007\n00:51:58,240 --> 00:51:59,890\nSo we've got those in place.\n\n1008\n00:51:59,890 --> 00:52:04,120\nIf I jump down a little bit further,\nwe'lll find\n\n1009\n00:52:04,120 --> 00:52:07,900\nmy access list right here, here is\nthe access list that I used 101 and\n\n1010\n00:52:07,900 --> 00:52:11,140\n102 to define the traffic\nthat I was matching.\n\n1011\n00:52:11,140 --> 00:52:15,100\nAnd here is the route map where we\ndefine it, and you'll see each one One.\n\n1012\n00:52:15,100 --> 00:52:16,590\nReally not that big of a deal.\n\n1013\n00:52:16,590 --> 00:52:21,730\nWe do a permit line and then we say match\n,and how we're going to match the traffic,\n\n1014\n00:52:21,730 --> 00:52:24,770\nfollowed by set, and\nwhat we're going to do to the traffic.\n\n1015\n00:52:24,770 --> 00:52:27,230\nAnd then we do the next line,\nand the next one, and so on.\n\n1016\n00:52:27,230 --> 00:52:30,870\nIf I wanted to inject an ACL to take\ncare of my headquarters router here,\n\n1017\n00:52:30,870 --> 00:52:31,590\nI could do that.\n\n1018\n00:52:31,590 --> 00:52:35,800\nI could add it in, and make it line 11,\nor line 20 or whatever.\n\n1019\n00:52:35,800 --> 00:52:40,030\nI could actually just add my headquarters\nrouter to access list 101, because\n\n1020\n00:52:40,030 --> 00:52:45,130\nit's gonna have that same so I can use\nthat same entry for my existing systems.\n\n1021\n00:52:45,130 --> 00:52:49,260\nSo, you know one thing I didn't show was,\nif I jumped to the other branches,\n\n1022\n00:52:49,260 --> 00:52:55,934\nthe other branches,\nif they do a trace route to Google,\n\n1023\n00:52:55,934 --> 00:53:00,930\nI can see they're still going out ISP one.\n\n1024\n00:53:00,930 --> 00:53:04,590\nSo, branch two, branch three,\nthey still go out ISP1, and\n\n1025\n00:53:04,590 --> 00:53:06,140\nthey're still uneffected by the policy.\n\n1026\n00:53:06,140 --> 00:53:08,460\nThey don't match the policy, but\n\n1027\n00:53:08,460 --> 00:53:12,320\nbranch one, when it goes out to Google,\ngoes out ISP2, right?\n\n1028\n00:53:12,320 --> 00:53:14,710\nThe differences are based\non that source IP.\n\n1029\n00:53:16,360 --> 00:53:19,580\nAll right, well, that's about it for\npolicy-based routing,\n\n1030\n00:53:19,580 --> 00:53:22,230\nand I know that was, if you're\nwatching all these episodes in order,\n\n1031\n00:53:22,230 --> 00:53:24,790\nthat was the first exposure\nwe've really had to route maps.\n\n1032\n00:53:24,790 --> 00:53:27,920\nWe're gonna see more on route\nmaps on the episode for\n\n1033\n00:53:27,920 --> 00:53:33,020\nobjective 3.14, so stay tuned for\nthat one, it's coming down the road.\n\n1034\n00:53:33,020 --> 00:53:34,490\nBut otherwise, that's PBR.\n\n1035\n00:53:34,490 --> 00:53:37,150\nPretty cut and dry and a lot of fun.\n\n1036\n00:53:37,150 --> 00:53:41,080\nAll right, well let me remind you guys\nif you have questions on any of this,\n\n1037\n00:53:41,080 --> 00:53:42,760\nplease feel free to ask.\n\n1038\n00:53:42,760 --> 00:53:45,560\nLive during the show,\nyou can go to itpro.tv/live,\n\n1039\n00:53:45,560 --> 00:53:48,190\nand you'll see the chatroom\nbeneath the video.\n\n1040\n00:53:48,190 --> 00:53:49,230\nPost your questions there.\n\n1041\n00:53:49,230 --> 00:53:51,640\nWe monitor and answer during the show.\n\n1042\n00:53:51,640 --> 00:53:55,260\nIf you have questions after the show,\nuse our Q and A forms.\n\n1043\n00:53:55,260 --> 00:53:58,540\nYou'll see a link at the top of every\npage, labeled Q and A, click on it,\n\n1044\n00:53:58,540 --> 00:53:59,560\nit'll take you to the forms.\n\n1045\n00:53:59,560 --> 00:54:03,140\nYou can post your questions there,\nwe monitor and answer after the show.\n\n1046\n00:54:03,140 --> 00:54:05,760\nGreat way to get help,\neven when we're not live.\n\n1047\n00:54:05,760 --> 00:54:08,010\nAll right, well I hope you\nguys enjoyed today's episode.\n\n1048\n00:54:08,010 --> 00:54:10,300\nSigning off for ITProTV, I'm Don Pezet.\n\n1049\n00:54:10,300 --> 00:54:11,090\n>> And I'm Ronnie Wong.\n\n1050\n00:54:11,090 --> 00:54:12,590\n>> And we'll see you next time!\n\n1051\n00:54:12,590 --> 00:54:22,590\n[MUSIC]\n\n1052\n00:54:26,790 --> 00:54:32,900\n[SOUND]\n\n",
          "vimeoId": "119752963"
        },
        {
          "description": "Route maps are a powerful tool inside a Cisco router, which can be used for a lot of things including filtering BGP traffic and allows one to affect certain routes without influencing others. Viewers will hear about one of the most powerful ways to control and influence routing through the use of route maps.",
          "length": "2721",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/ccnproute/cisco-ccnproute-3-14-route_maps-021215.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/ccnproute/cisco-ccnproute-3-14-route_maps-021215-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/ccnproute/cisco-ccnproute-3-14-route_maps-021215-sm.jpg",
          "title": "Route Maps",
          "transcript": "1\n00:00:00,130 --> 00:00:10,130\n[MUSIC]\n\n2\n00:00:15,260 --> 00:00:22,470\n[SOUND]\n\n3\n00:00:22,470 --> 00:00:32,470\n[MUSIC]\n\n4\n00:00:33,580 --> 00:00:36,130\nAll right, good morning,\ngood afternoon, and good evening.\n\n5\n00:00:36,130 --> 00:00:38,760\nWelcome back to another\nepisode of ITProTV.\n\n6\n00:00:38,760 --> 00:00:41,680\nI'm your host, Don Pezet,\nback again with Mr. Ronnie Wong.\n\n7\n00:00:41,680 --> 00:00:42,420\nHow's it going Ronnie?\n\n8\n00:00:42,420 --> 00:00:43,330\n>> It is going well.\n\n9\n00:00:43,330 --> 00:00:45,611\nMy Downton Abbey fan club is doing well.\n\n10\n00:00:45,611 --> 00:00:47,145\n>> [LAUGH]\n>> So I am ready for\n\n11\n00:00:47,145 --> 00:00:50,100\nanother exciting episode\nhere on CCNP Route.\n\n12\n00:00:50,100 --> 00:00:53,600\n>> All right, well we are diving right\nback in to the wonderful world of routing\n\n13\n00:00:53,600 --> 00:00:54,480\nwith object 3.14.\n\n14\n00:00:54,480 --> 00:00:58,710\nThe official name is Explain Route Maps,\nor\n\n15\n00:00:58,710 --> 00:01:01,080\nwe were making fun of\nCisco's capitalization.\n\n16\n00:01:01,080 --> 00:01:03,255\nIt's Explain Route Maps!\n\n17\n00:01:03,255 --> 00:01:04,560\n>> [LAUGH]\n>> So, anyhow.\n\n18\n00:01:04,560 --> 00:01:06,090\nWe're gonna be taking\na look at route maps, and\n\n19\n00:01:06,090 --> 00:01:10,330\nI know that we've mentioned route\nmaps in some of the other episodes.\n\n20\n00:01:10,330 --> 00:01:12,220\nWe didn't really tackle them.\n\n21\n00:01:12,220 --> 00:01:14,610\nIf you've already watched\nthe policy based routing episode,\n\n22\n00:01:14,610 --> 00:01:17,440\nyou got a chance to see\na route map in action there.\n\n23\n00:01:17,440 --> 00:01:21,250\nBut here, we're talking about\nroute maps in general, right.\n\n24\n00:01:21,250 --> 00:01:25,590\nRoute maps are a very powerful tool inside\nof a Cisco router that we can use for\n\n25\n00:01:25,590 --> 00:01:27,890\nall sorts of things.\n\n26\n00:01:27,890 --> 00:01:32,020\nIf you've never worked with\nthem before think of them as\n\n27\n00:01:32,020 --> 00:01:35,650\na like an access control list for routes.\n\n28\n00:01:35,650 --> 00:01:39,920\nInstead of filtering source IPs,\nand destination IPs.\n\n29\n00:01:39,920 --> 00:01:43,180\nRoute maps are used to filter\nbased on a network in and\n\n30\n00:01:43,180 --> 00:01:45,720\nin a route in the routing table.\n\n31\n00:01:45,720 --> 00:01:51,040\nAnd once you identify that route you\ncan do all sorts of things to it.\n\n32\n00:01:51,040 --> 00:01:54,230\nYou don't necessarily just permit or\ndeny, like an ACL would,\n\n33\n00:01:54,230 --> 00:01:55,960\nalthough you certainly can.\n\n34\n00:01:55,960 --> 00:01:59,730\nYou can take even more\nactions against that route\n\n35\n00:01:59,730 --> 00:02:02,280\nto do all sorts of amazing things.\n\n36\n00:02:02,280 --> 00:02:04,135\nThe PBR episode, or Policy-Based Routing.\n\n37\n00:02:04,135 --> 00:02:05,965\n>> [LAUGH]\n>> We're not talking about beer this time.\n\n38\n00:02:05,965 --> 00:02:09,880\nPolicy-Based Routing episode covered\na great example of how to use that.\n\n39\n00:02:09,880 --> 00:02:13,050\nBut we can use route maps for\na lot of different stuff, right?\n\n40\n00:02:13,050 --> 00:02:15,310\nSo what were some of\nthe places we might use one?\n\n41\n00:02:15,310 --> 00:02:18,200\n>> We might end up taking\nroute redistribution and\n\n42\n00:02:18,200 --> 00:02:20,400\nusing route maps to help us there too.\n\n43\n00:02:20,400 --> 00:02:24,380\nTo be able to limit the routes that\nare coming into our routing table\n\n44\n00:02:24,380 --> 00:02:27,060\nif we wanted to and\nset different conditions with that.\n\n45\n00:02:27,060 --> 00:02:28,430\nWe may also, of course,\n\n46\n00:02:28,430 --> 00:02:33,040\nthe main place where we tend to see it,\nis when filtering BGP traffic as well.\n\n47\n00:02:33,040 --> 00:02:36,510\nAnd so that's one in which when\nwe get in that episode you'll see\n\n48\n00:02:36,510 --> 00:02:41,270\nit's everywhere because we pretty much\nprimarily depend on that to help us MBGB.\n\n49\n00:02:41,270 --> 00:02:44,240\nAnd finally the one that we were\ntalking about, not the beer, but\n\n50\n00:02:44,240 --> 00:02:45,970\nthe policy-based router.\n\n51\n00:02:45,970 --> 00:02:47,040\n>> Yeah.\n\n52\n00:02:47,040 --> 00:02:49,030\nLet's use route redistribution\nas a great example.\n\n53\n00:02:49,030 --> 00:02:52,520\nWe've already shot our show on router\nredistribution, you probably already\n\n54\n00:02:52,520 --> 00:02:56,640\nwatched it And in there we used some\ncommands like, redistribute connected.\n\n55\n00:02:56,640 --> 00:03:00,600\nAnd that just said, take all of my\ndirectly connected interfaces and\n\n56\n00:03:00,600 --> 00:03:03,870\nimport them into whatever routing\nprotocol it is I'm working with.\n\n57\n00:03:03,870 --> 00:03:08,090\nWell, sometimes you don't want to get all\nof your directly connected interfaces.\n\n58\n00:03:08,090 --> 00:03:12,722\nMaybe you want to leave one out, well\nyou could go through and do these like\n\n59\n00:03:12,722 --> 00:03:17,590\nmanual network statements and advertise\nthose in or you could do a route map.\n\n60\n00:03:17,590 --> 00:03:21,415\nAnd the route map can say when you bring\nthe connected interfaces in if one of them\n\n61\n00:03:21,415 --> 00:03:23,200\nmatches this criteria leave it out.\n\n62\n00:03:24,420 --> 00:03:27,820\nSo you can start to be a little more\nspecific, you can influence that.\n\n63\n00:03:27,820 --> 00:03:30,820\nRedistribute commands by\ndefault will redistribute\n\n64\n00:03:30,820 --> 00:03:32,990\nall of the routes that\nmatch that criteria.\n\n65\n00:03:32,990 --> 00:03:37,265\nIf you say redistribute OSPF one,\nredistribute EIGRP one.\n\n66\n00:03:37,265 --> 00:03:40,785\nRedistribute RIP, redistribute connected,\nredistribute static.\n\n67\n00:03:40,785 --> 00:03:44,655\nIt gets all of the networks\nthat match that protocol type.\n\n68\n00:03:44,655 --> 00:03:48,105\nBut when you attach a route\nmap you can pick and choose.\n\n69\n00:03:48,105 --> 00:03:51,070\nThat's where you start to get\nthe real power of the redistribute.\n\n70\n00:03:51,070 --> 00:03:52,580\nSame thing with BGP.\n\n71\n00:03:52,580 --> 00:03:57,170\nWhen you connect to a BGP neighbor,\nby default you get all of their routes.\n\n72\n00:03:57,170 --> 00:03:58,920\nBut you can feed it\nthrough a route map and\n\n73\n00:03:58,920 --> 00:04:00,810\nfilter it down to just\nthe routes you want.\n\n74\n00:04:00,810 --> 00:04:02,710\nOr you can exclude certain routes and\nget the rest.\n\n75\n00:04:02,710 --> 00:04:03,815\nYou have a lot more power.\n\n76\n00:04:03,815 --> 00:04:06,125\nAnd with policy based routing.\n\n77\n00:04:06,125 --> 00:04:09,925\nInstead of routing all the traffic\na certain way, you match the traffic.\n\n78\n00:04:09,925 --> 00:04:13,975\nYou say traffic that matches these\ncriteria, go to this next hop.\n\n79\n00:04:13,975 --> 00:04:17,205\nAnd traffic that matches this other\ncriteria, goes to this other next hop.\n\n80\n00:04:17,205 --> 00:04:19,475\nRoute maps are the power behind that.\n\n81\n00:04:19,475 --> 00:04:19,995\nRight?\n\n82\n00:04:19,995 --> 00:04:21,805\nSo they're different than ACLs.\n\n83\n00:04:21,805 --> 00:04:24,040\nAccess Control Lists just permit.\n\n84\n00:04:24,040 --> 00:04:27,270\nAnd deny.\nRoute maps can do that, too.\n\n85\n00:04:27,270 --> 00:04:30,480\nBut route maps can also do a lot more.\n\n86\n00:04:30,480 --> 00:04:33,510\nSo let's talk about that more part.\n\n87\n00:04:33,510 --> 00:04:36,300\nI know I don't normally like to\nshow my show notes during the show.\n\n88\n00:04:36,300 --> 00:04:38,150\nThat's a lot to show there.\n\n89\n00:04:38,150 --> 00:04:40,000\nBut I'm going to do it here because.\n\n90\n00:04:40,000 --> 00:04:44,260\nWhen you define a route map,\nthere's two main pieces to the route map.\n\n91\n00:04:44,260 --> 00:04:47,160\nThere's a match statement and\na set statement.\n\n92\n00:04:47,160 --> 00:04:53,310\nThe match statement defines what traffic\nthe route map is going to apply to.\n\n93\n00:04:53,310 --> 00:04:58,730\nWhen an axis control list, you match\nbased on IP addresses, or maybe protocol.\n\n94\n00:04:58,730 --> 00:05:03,210\nSo source IP, destination IP, protocol,\nthat's the stuff you match with an ACL.\n\n95\n00:05:03,210 --> 00:05:06,980\nBut with a route map,\nyou can match on all sorts of things.\n\n96\n00:05:06,980 --> 00:05:10,460\nNow, the actual list is really big.\n\n97\n00:05:10,460 --> 00:05:12,430\nThere's a lot of things you can match on.\n\n98\n00:05:12,430 --> 00:05:13,940\nBut I pick the most common ones.\n\n99\n00:05:13,940 --> 00:05:17,150\nThese are the ones you're gonna\nuse out there in real life land.\n\n100\n00:05:17,150 --> 00:05:20,120\nAnd you'll see, even of those,\nthere's still quite a few of them.\n\n101\n00:05:20,120 --> 00:05:23,550\nWe can match based on as-path.\n\n102\n00:05:23,550 --> 00:05:26,610\nAs the autonomous system path used in BGP.\n\n103\n00:05:26,610 --> 00:05:29,920\nI might want to bring in some\nroutes from a certain path and\n\n104\n00:05:29,920 --> 00:05:32,260\nblock other routes from another path.\n\n105\n00:05:32,260 --> 00:05:34,400\nI can influence that by\nmatching on the AS path.\n\n106\n00:05:35,620 --> 00:05:37,160\nI can match on community.\n\n107\n00:05:37,160 --> 00:05:40,350\nIn BGP,\nyou can define these communities of\n\n108\n00:05:40,350 --> 00:05:44,560\nBGP routers within the same autonomous\nsystem and you might want to modify\n\n109\n00:05:44,560 --> 00:05:48,000\ncertain route's metrics based on which\ncommunity the route is coming from.\n\n110\n00:05:49,180 --> 00:05:51,690\nWe can do extended communities.\n\n111\n00:05:51,690 --> 00:05:54,800\nThere's the old style communities and\nthe new style communities, so\n\n112\n00:05:54,800 --> 00:05:57,160\nthe extended is just\nthe new version of those.\n\n113\n00:05:57,160 --> 00:06:00,360\nWe can match on the interface,\nthe first hop interface of the route,\n\n114\n00:06:00,360 --> 00:06:02,130\nwhere we kind of learned this thing from.\n\n115\n00:06:02,130 --> 00:06:04,010\nSo figuring out where\nthis thing came from and\n\n116\n00:06:04,010 --> 00:06:06,480\nthen determining where\nwe wanna go from that.\n\n117\n00:06:06,480 --> 00:06:08,570\nThere's the address.\n\n118\n00:06:08,570 --> 00:06:10,060\nAnd that goes right back to ACLs.\n\n119\n00:06:10,060 --> 00:06:10,710\nRight, Ronnie?\n\n120\n00:06:10,710 --> 00:06:13,140\n>> Yeah.\nWhen we take a look at using the address,\n\n121\n00:06:13,140 --> 00:06:15,210\nthis is one that most of us\nare gonna be familiar with.\n\n122\n00:06:15,210 --> 00:06:19,510\nEspecially if we've come up from the CCNA.\n\n123\n00:06:19,510 --> 00:06:21,780\nIf we've just been doing that and\n\n124\n00:06:21,780 --> 00:06:25,510\nyou just earned your CCNA, this will\nprobably feel the most comfortable.\n\n125\n00:06:25,510 --> 00:06:28,550\nWhereas the other ones, still a little\nbit vague out there especially if you\n\n126\n00:06:28,550 --> 00:06:30,240\nhaven't hit the BGP studies.\n\n127\n00:06:30,240 --> 00:06:31,900\nBut as you go on to that you actually see,\n\n128\n00:06:31,900 --> 00:06:36,790\nhey, we're just replacing this match with\nthe address of some of these other things.\n\n129\n00:06:36,790 --> 00:06:39,530\nSo, this is probably where\nwe'll end up concentrating\n\n130\n00:06:39,530 --> 00:06:41,110\nwhen we take a look at it right here.\n\n131\n00:06:41,110 --> 00:06:43,940\n>> Right, we can also match\non the length of the packet.\n\n132\n00:06:43,940 --> 00:06:44,590\nNow this is one.\n\n133\n00:06:44,590 --> 00:06:45,170\n>> Yeah.\n>> I see\n\n134\n00:06:45,170 --> 00:06:46,510\nexamples of it all over the Internet.\n\n135\n00:06:46,510 --> 00:06:49,710\nI've never had need to\nuse that in production.\n\n136\n00:06:49,710 --> 00:06:52,520\nI guess if you wanted to trim\noff packets of a certain size so\n\n137\n00:06:52,520 --> 00:06:55,860\nyou didn't have to worry about\nfragmentation, you could do that.\n\n138\n00:06:55,860 --> 00:06:59,130\nReally fragmentation would probably be the\nbest example of where you would use that\n\n139\n00:06:59,130 --> 00:07:01,640\none, but you can match on\nthe length of that packet.\n\n140\n00:07:01,640 --> 00:07:03,620\nYou can match on local preference.\n\n141\n00:07:03,620 --> 00:07:05,902\nNow local preference is a BGP attribute,\nand\n\n142\n00:07:05,902 --> 00:07:09,880\nit's one of the tie breakers that's\nused when you've got competing routes.\n\n143\n00:07:09,880 --> 00:07:14,454\nBut we can influence routes based on\nwhat their local preference is set to,\n\n144\n00:07:14,454 --> 00:07:17,220\nto influence that path\nwe follow in our IBGP.\n\n145\n00:07:17,220 --> 00:07:18,630\nWe've got metric.\n\n146\n00:07:18,630 --> 00:07:21,450\nThis depends on the routing\nprotocol right?\n\n147\n00:07:21,450 --> 00:07:25,500\nIf we're pulling routes from OSPF or EIGRP\nor RIP, the metrics are different things.\n\n148\n00:07:25,500 --> 00:07:29,160\nBut we can use that metric to\ndetermine whether we match a route.\n\n149\n00:07:29,160 --> 00:07:32,100\nSo I can look for routes with\na metric of a certain value and\n\n150\n00:07:32,100 --> 00:07:33,430\nthen take actions based on it.\n\n151\n00:07:34,830 --> 00:07:38,290\nWe have MPLS labels,\nif you're dealing with MPLS, if you're\n\n152\n00:07:38,290 --> 00:07:41,930\na service provider and you're dealing with\nthe provider edge, you want to handle\n\n153\n00:07:41,930 --> 00:07:44,980\ntraffic based on what labels area\nattached to it you can key off of that.\n\n154\n00:07:46,060 --> 00:07:47,050\nWe've got route type.\n\n155\n00:07:47,050 --> 00:07:51,791\nNow route type Is one that's kind of\nall over the place because in OSPF\n\n156\n00:07:51,791 --> 00:07:56,300\nwe're talking about whether these\nare OE1 or OE2 type routes.\n\n157\n00:07:56,300 --> 00:08:00,210\nIn EIGRP, we're talking about whether\nthey're internal or external, all right?\n\n158\n00:08:00,210 --> 00:08:01,630\nThose are the differences of the routes.\n\n159\n00:08:01,630 --> 00:08:04,674\nBGP, you've got IGP routes and\nEGP routes, so\n\n160\n00:08:04,674 --> 00:08:07,660\nthe route type varies\nbased on protocol also.\n\n161\n00:08:09,490 --> 00:08:10,740\nSource protocol.\n\n162\n00:08:10,740 --> 00:08:13,290\nThis would be where we\nlearned the route from.\n\n163\n00:08:13,290 --> 00:08:14,510\nWhen you're redistributing, right?\n\n164\n00:08:14,510 --> 00:08:15,310\nThis would be the source.\n\n165\n00:08:15,310 --> 00:08:16,120\nWhere it's coming from.\n\n166\n00:08:16,120 --> 00:08:19,460\nI wanna apply this route map to\nroutes I learned from EIGRP.\n\n167\n00:08:19,460 --> 00:08:20,030\nRight?\n\n168\n00:08:20,030 --> 00:08:25,280\nOr I wanna apply this to routes that I\nlearned from a particular OSPF area.\n\n169\n00:08:25,280 --> 00:08:27,440\nThat's what we can do with\nthe source protocol to catch those.\n\n170\n00:08:29,230 --> 00:08:30,500\nAnd then, lastly, tag.\n\n171\n00:08:30,500 --> 00:08:33,130\nNow tag is one of the most important ones.\n\n172\n00:08:33,130 --> 00:08:35,475\nSo important, we're going to\nhave an episode dedicated to it.\n\n173\n00:08:35,475 --> 00:08:37,290\n>> [LAUGH]\n>> With tags,\n\n174\n00:08:37,290 --> 00:08:39,200\nwhenever you're redistributing a route, or\n\n175\n00:08:39,200 --> 00:08:42,130\neven just advertising a route,\nyou can attach a tag to it.\n\n176\n00:08:42,130 --> 00:08:43,810\nAnd the tag can do whatever you want.\n\n177\n00:08:43,810 --> 00:08:48,620\nYou can use that in your own network to\ntrace that route as it's redistributed\n\n178\n00:08:48,620 --> 00:08:51,780\nthrough different systems, and still be\nable to identify it on the other end.\n\n179\n00:08:51,780 --> 00:08:55,790\nAnd if you want to filter those\nroutes out to prevent a loop,\n\n180\n00:08:55,790 --> 00:08:57,440\nyou'd filter based on that tag.\n\n181\n00:08:57,440 --> 00:09:00,940\nAnd so we can search for\nthat tag as part of that match statement.\n\n182\n00:09:00,940 --> 00:09:01,489\nAll right?\n\n183\n00:09:01,489 --> 00:09:03,350\nThere are others.\n\n184\n00:09:03,350 --> 00:09:04,700\nOnes that I've left out here.\n\n185\n00:09:04,700 --> 00:09:06,450\nAnd I left them out because\nthey were fringe things.\n\n186\n00:09:06,450 --> 00:09:09,380\nThings that tied back to mainframe days\nand other protocols that are really,\n\n187\n00:09:09,380 --> 00:09:10,580\nreally specific.\n\n188\n00:09:10,580 --> 00:09:13,010\nBut these guys right here\nin the list on my screen,\n\n189\n00:09:13,010 --> 00:09:15,060\nthose are the main ones that\nyou need to be familiar with.\n\n190\n00:09:15,060 --> 00:09:18,630\nThese are all the different\nthings that we can match on and\n\n191\n00:09:18,630 --> 00:09:20,072\nthen take some kind of action, all right?\n\n192\n00:09:21,410 --> 00:09:22,830\nSo, a lot of power there.\n\n193\n00:09:23,870 --> 00:09:26,045\nNow what action are we going to take?\n\n194\n00:09:26,045 --> 00:09:30,380\nWell, when we define a route map,\neach entry in the route map\n\n195\n00:09:30,380 --> 00:09:34,600\nhas a permit or\na deny clause to it, all right?\n\n196\n00:09:34,600 --> 00:09:38,830\nIf you permit the route, you're permitting\nthe route to come into your routing table.\n\n197\n00:09:38,830 --> 00:09:42,440\nSo, if a route matches one\nof these criteria, one or\n\n198\n00:09:42,440 --> 00:09:44,780\nmore, you can define more than\none criteria if you want.\n\n199\n00:09:44,780 --> 00:09:49,670\nIf it matches more than one of these\ncriteria, then would permit it and\n\n200\n00:09:49,670 --> 00:09:51,450\nit goes in the routing table.\n\n201\n00:09:51,450 --> 00:09:55,050\nIf we deny it,\na route matches one of these criteria and\n\n202\n00:09:55,050 --> 00:09:56,660\nwe deny it from going\ninto the routing table.\n\n203\n00:09:56,660 --> 00:09:59,720\nSo you can go a straight up ACL\nstyle if you want, permit and deny.\n\n204\n00:10:01,300 --> 00:10:05,750\nBut if you permit it, you can actually\ndo something else pretty neat.\n\n205\n00:10:05,750 --> 00:10:09,390\nIf you permit the route, and\nthe route matches one of these criteria,\n\n206\n00:10:09,390 --> 00:10:12,900\nyou can follow that up\nwith a set statement.\n\n207\n00:10:12,900 --> 00:10:17,090\nAnd the set statement Is\nwhere you modify the route.\n\n208\n00:10:17,090 --> 00:10:17,750\nYou don't have to.\n\n209\n00:10:17,750 --> 00:10:20,410\nIf you're just doing filtering,\nyou don't have set statements,\n\n210\n00:10:20,410 --> 00:10:23,450\nyou just filter, you use your permits and\ndenies and that's it.\n\n211\n00:10:23,450 --> 00:10:27,790\nBut, if you permit, you can modify the\nroute and do all sorts of crazy things,\n\n212\n00:10:27,790 --> 00:10:28,810\nI've got the list here.\n\n213\n00:10:28,810 --> 00:10:31,500\nThis one I did go complete, I put all\nthe different set statements on this one.\n\n214\n00:10:31,500 --> 00:10:32,000\nThis one.\n\n215\n00:10:33,580 --> 00:10:36,160\nAll right, the first thing that we\ncan do is we can set precedents.\n\n216\n00:10:37,180 --> 00:10:40,030\nPrecedence has a basic quality of\nservice function where we give\n\n217\n00:10:40,030 --> 00:10:42,650\npeople a precedence when they\ngo to access an interface.\n\n218\n00:10:42,650 --> 00:10:45,470\nYou can set some traffic at higher\nprecedence than other traffic,\n\n219\n00:10:45,470 --> 00:10:47,200\nand that means it will be more important.\n\n220\n00:10:47,200 --> 00:10:51,160\nIt'll get access to the queues faster,\nit can skip in line to get ahead,\n\n221\n00:10:51,160 --> 00:10:54,120\nto get sent out of an interface\non the outbound side.\n\n222\n00:10:54,120 --> 00:10:56,590\nSo we can prioritize\nthat traffic if we want.\n\n223\n00:10:58,790 --> 00:11:02,980\nWe can set the DF bit,\nthe DF bit is the don't fragment bit.\n\n224\n00:11:02,980 --> 00:11:07,720\nNormally, if data is of a certain size if\nit's to large the router will fragment it\n\n225\n00:11:07,720 --> 00:11:11,700\ninto pieces and we can say don't do that,\ndon't fragment it, leave it large.\n\n226\n00:11:11,700 --> 00:11:14,470\nNow, that can cause some\nproblems down the road.\n\n227\n00:11:14,470 --> 00:11:17,710\nThat traffic is too large and\nanother router might drop it or try and\n\n228\n00:11:17,710 --> 00:11:18,910\nfragment it anyway.\n\n229\n00:11:18,910 --> 00:11:22,070\nBut we can set it right here, and as\nlong as we plan for that in our network,\n\n230\n00:11:22,070 --> 00:11:27,670\nwe can have fragment-free traffic\nspread across the network.\n\n231\n00:11:27,670 --> 00:11:28,440\nVRF.\n\n232\n00:11:28,440 --> 00:11:32,420\nWe can say, if I get this route,\nattach it to this VRF.\n\n233\n00:11:32,420 --> 00:11:35,680\nRight, we can move it into one of those\nVPN routing and forwarding instances,\n\n234\n00:11:35,680 --> 00:11:39,050\nthose virtual routers that we create and\nnow it's attached in there.\n\n235\n00:11:39,050 --> 00:11:40,100\nThat should be happening already,\n\n236\n00:11:40,100 --> 00:11:42,810\nbecause you're routing protocols\nare running inside of the VRF.\n\n237\n00:11:42,810 --> 00:11:45,430\nBut if you're doing VRFs\nwith all static routes,\n\n238\n00:11:45,430 --> 00:11:47,540\nthen you might need to import\nsome that were learned.\n\n239\n00:11:47,540 --> 00:11:50,300\nAnd you can do that right here\nwith the VRF Set statement.\n\n240\n00:11:53,110 --> 00:11:55,626\nIf you already watched the PBR episode,\nyou saw these next ones.\n\n241\n00:11:55,626 --> 00:11:58,200\nNext-hop, next-hop recursive,\n\n242\n00:11:58,200 --> 00:12:01,780\nthose are how I can set where\nthe traffic is going to.\n\n243\n00:12:01,780 --> 00:12:05,060\nNormally when you learn a route,\nwhat's the destination for that route?\n\n244\n00:12:05,060 --> 00:12:06,480\nWhat's the next hop?\n\n245\n00:12:06,480 --> 00:12:07,890\nWhoever you learned it from, right?\n\n246\n00:12:07,890 --> 00:12:11,170\nThat's what you want the next hop to be,\nbut you can override that and\n\n247\n00:12:11,170 --> 00:12:15,830\nspecify somebody else as the next hop, and\nthere's various reasons you might do that.\n\n248\n00:12:15,830 --> 00:12:18,990\nIf you want a great example, jump over\nto our Policy Based Routing episode.\n\n249\n00:12:18,990 --> 00:12:20,740\nIt's got some good coverage of that.\n\n250\n00:12:20,740 --> 00:12:22,580\n>> We also saw the one for\nthe interface too,\n\n251\n00:12:22,580 --> 00:12:27,040\nin that Policy Based Routing episode,\nwhere we're having point to point links.\n\n252\n00:12:27,040 --> 00:12:31,440\nIt may be actually easier for us just\nto set the exiting interface as one of\n\n253\n00:12:31,440 --> 00:12:36,650\nthose set conditions, too, instead of\nhaving to remember what the IP address is.\n\n254\n00:12:36,650 --> 00:12:39,390\nSay okay, I'm just gonna send it out this\ninterface with a point to point link.\n\n255\n00:12:39,390 --> 00:12:42,300\nThere's no other destination\nat the other end, so why not?\n\n256\n00:12:42,300 --> 00:12:46,700\n>> And then the sister commands for\nthose are the default next-hop and\n\n257\n00:12:46,700 --> 00:12:48,680\ndefault interface, right?\n\n258\n00:12:48,680 --> 00:12:49,900\nWith next-hop and\n\n259\n00:12:49,900 --> 00:12:54,210\ninterface you're putting a specific\nroute to that destination, right?\n\n260\n00:12:54,210 --> 00:12:57,250\nWith default,\nthis is like a gateway of last resort.\n\n261\n00:12:57,250 --> 00:13:00,400\nYou're saying if they're trying to get to\na network that's not in the routing table,\n\n262\n00:13:00,400 --> 00:13:02,400\nthey've gotta go to a gateway\nof last resort, and\n\n263\n00:13:02,400 --> 00:13:06,680\nwe're overriding their gateway of last\nresort and specifying where to go there.\n\n264\n00:13:06,680 --> 00:13:07,930\nMaybe it's a different ISP or\n\n265\n00:13:07,930 --> 00:13:11,620\njust a different path out of your network,\nyou specify that with those two options.\n\n266\n00:13:11,620 --> 00:13:13,090\nAll right?\n\n267\n00:13:13,090 --> 00:13:17,010\nSo those are all examples of some of\nthe things that we can do to traffic,\n\n268\n00:13:17,010 --> 00:13:18,920\nusing a route map, all right.\n\n269\n00:13:18,920 --> 00:13:21,960\nNow, we mentioned at the beginning of\nthe episode that there's three main places\n\n270\n00:13:21,960 --> 00:13:24,240\nwhere you can use this\nto show up on the exam.\n\n271\n00:13:24,240 --> 00:13:24,950\nAll right.\n\n272\n00:13:24,950 --> 00:13:26,940\nThere is policy based routing.\n\n273\n00:13:26,940 --> 00:13:29,710\nWhich for that one, if you jump over\nto our Policy Based Routing show,\n\n274\n00:13:29,710 --> 00:13:32,360\nyou'll see a great example of how\nto implement that and how it works.\n\n275\n00:13:32,360 --> 00:13:34,730\nAnd get a chance to see a route map there.\n\n276\n00:13:34,730 --> 00:13:37,020\nThere's BGP route filtering.\n\n277\n00:13:37,020 --> 00:13:38,910\nAnd for that one,\nyou can jump over to the BGP show and\n\n278\n00:13:38,910 --> 00:13:42,100\nyou'll get a chance to see those\nroute maps in place there.\n\n279\n00:13:42,100 --> 00:13:45,130\nBut the third one we mentioned\nwas route redistribution, and\n\n280\n00:13:45,130 --> 00:13:49,340\nin our route redistribution show,\nwe focused on the redistribution and\n\n281\n00:13:49,340 --> 00:13:50,390\nnot the route maps there.\n\n282\n00:13:50,390 --> 00:13:51,650\nSo we didn't do them.\n\n283\n00:13:51,650 --> 00:13:53,580\nSo what we're gonna do is in this show,\n\n284\n00:13:53,580 --> 00:13:56,220\nwe're gonna focus on the route\nredistribution piece of things.\n\n285\n00:13:56,220 --> 00:14:00,197\nSo we're gonna show you guys how to create\na route map and how to apply it when\n\n286\n00:14:00,197 --> 00:14:04,806\nyou redistribute routes, to filter out and\nto modify the routes as they come through,\n\n287\n00:14:04,806 --> 00:14:07,734\nto change their behavior and\nchange the way they work.\n\n288\n00:14:07,734 --> 00:14:10,220\nIt's pretty neat stuff, all right.\n\n289\n00:14:10,220 --> 00:14:13,590\nSo, let's get an example here,\nkind of what we can do.\n\n290\n00:14:14,640 --> 00:14:17,510\nRight now,\nlet me show you guys my topology.\n\n291\n00:14:17,510 --> 00:14:19,500\nHere's my topology that I have.\n\n292\n00:14:19,500 --> 00:14:23,370\nI've got a headquarters office that\nis connected to three branches and\n\n293\n00:14:23,370 --> 00:14:25,320\nthey're connected via metro ethernet link.\n\n294\n00:14:25,320 --> 00:14:28,430\nThis is a 10 megabit links\nbetween all these branches.\n\n295\n00:14:28,430 --> 00:14:33,640\nAnd they're in one big OSPF area,\nOSPF Area 0.\n\n296\n00:14:33,640 --> 00:14:37,367\nEach branch has a /23 network for\ntheir workstations.\n\n297\n00:14:37,367 --> 00:14:44,294\nSo I've got 172.16.2.0/23 and\n172.16.4.0/23 and so on.\n\n298\n00:14:44,294 --> 00:14:48,057\nAnd they're all being advertised into\nOSPF, so they all know each other,\n\n299\n00:14:48,057 --> 00:14:50,880\nthey know how to get to those routes,\nand that's that.\n\n300\n00:14:52,480 --> 00:14:56,040\nI also have two ISPs out here, and\nthey're connected to headquarters, and\n\n301\n00:14:56,040 --> 00:15:00,840\nheadquarters advertises a default\nroute into all the branches so\n\n302\n00:15:00,840 --> 00:15:03,250\nthey know they can get to the internet\nby going through headquarters.\n\n303\n00:15:03,250 --> 00:15:05,542\nThat's all in place.\n\n304\n00:15:05,542 --> 00:15:09,710\nAll right,\nnow let's say that I wanted to have\n\n305\n00:15:10,720 --> 00:15:12,810\nthis network here, this 172.16.2 network.\n\n306\n00:15:12,810 --> 00:15:18,080\nRight now it's one big network and\nit's being advertised out into\n\n307\n00:15:18,080 --> 00:15:23,260\nmy environment as one big OSPF route and\nit's got a single cost, all right?\n\n308\n00:15:23,260 --> 00:15:27,140\nWell, lets say that I didn't actually\nwant those interfaces in OSPF.\n\n309\n00:15:27,140 --> 00:15:30,780\nInstead, I wanted them to just be\ndirectly connected interfaces and\n\n310\n00:15:30,780 --> 00:15:34,760\nI wanted to redistribute those into OSPF,\nalright?\n\n311\n00:15:34,760 --> 00:15:39,170\nWell, that process isn't really that\nbig of a deal, we redistribute in and\n\n312\n00:15:39,170 --> 00:15:40,310\nthe routes come in.\n\n313\n00:15:40,310 --> 00:15:42,800\nAll right, but\nwhere things start to get a little bit\n\n314\n00:15:42,800 --> 00:15:45,750\ntricky is how the cost gets\nhandled on those interfaces.\n\n315\n00:15:45,750 --> 00:15:47,230\nLet me show you what I mean.\n\n316\n00:15:47,230 --> 00:15:49,090\nI'm gonna jump over to\nbranch one real quick.\n\n317\n00:15:49,090 --> 00:15:51,120\nAnd that's not branch one.\n\n318\n00:15:51,120 --> 00:15:53,130\nHere we go, branch one.\n\n319\n00:15:53,130 --> 00:15:59,800\nAll right, as it stands right now\n172.16.2 is just on one interface.\n\n320\n00:15:59,800 --> 00:16:05,650\nIt's a /23, the whole network is\nright there and that's it, okay?\n\n321\n00:16:05,650 --> 00:16:11,800\nI'm gonna pull that out of OSPF cuz right\nnow on another branch, if I do a show ip\n\n322\n00:16:11,800 --> 00:16:17,780\nroute and I look for 172.16.2,\nI can see there's just one big route.\n\n323\n00:16:17,780 --> 00:16:19,850\nTo get to 172.16.2.0/23,\nthat's where it is,\n\n324\n00:16:19,850 --> 00:16:22,700\nthat's the only route that I've got, okay?\n\n325\n00:16:24,520 --> 00:16:29,330\nI'm gonna break that up into\nsmaller routes, all right?\n\n326\n00:16:29,330 --> 00:16:35,840\nSo if I go into int e0/1,\nI'll do a no ip add just to remove that.\n\n327\n00:16:35,840 --> 00:16:38,992\nAnd I'm gonna create\nsome sub-interfaces here.\n\n328\n00:16:38,992 --> 00:16:43,270\nI'm gonna break this one big network\nup into four smaller networks.\n\n329\n00:16:43,270 --> 00:16:47,260\nWhich I'll have to do\na little fake VLANing here.\n\n330\n00:16:47,260 --> 00:16:51,949\nBut I'll make a 172.16.2.0, or\n\n331\n00:16:51,949 --> 00:16:55,370\n2.1, which will be a class,\n\n332\n00:16:55,370 --> 00:17:01,840\nlets break this one up into\nhalf of a class c, all right?\n\n333\n00:17:01,840 --> 00:17:10,405\nAnd then I'll take the next half,\nWhich would be 2.129.\n\n334\n00:17:10,405 --> 00:17:13,285\nAnd then I'll take the next part.\n\n335\n00:17:13,285 --> 00:17:15,735\nI almost said the next half,\nyou can't have three halves.\n\n336\n00:17:15,735 --> 00:17:19,485\nWell I guess you could if\nyou didn't care about math.\n\n337\n00:17:19,485 --> 00:17:24,075\nAll right,\nwhich would actually be 172.16.3.1.\n\n338\n00:17:24,075 --> 00:17:26,615\nAnd why did I get a conflict on that?\n\n339\n00:17:26,615 --> 00:17:28,195\n>> You did not do your VLAN.\n\n340\n00:17:28,195 --> 00:17:29,365\n>> Oh, [LAUGH].\n\n341\n00:17:29,365 --> 00:17:32,035\nAll right, so let me assign that.\n\n342\n00:17:32,035 --> 00:17:36,001\nWhen you create a sub-interface on\na router, by default it doesn't let you do\n\n343\n00:17:36,001 --> 00:17:40,026\nIP addresses unless you set the\nencapsulation per frame relay or 802.1Q or\n\n344\n00:17:40,026 --> 00:17:40,699\nsomething.\n\n345\n00:17:40,699 --> 00:17:43,119\nSo that's what it's mad at me about.\n\n346\n00:17:43,119 --> 00:17:45,369\nThank you, Ronnie.\n\n347\n00:17:45,369 --> 00:17:46,819\nAnd then we'll do the last one.\n\n348\n00:17:48,989 --> 00:17:51,489\nWhich will be 3.129.\n\n349\n00:17:53,449 --> 00:17:55,909\nOkay, so let's take a look at that now.\n\n350\n00:17:55,909 --> 00:17:59,031\nIf I If I look at my interfaces now,\n\n351\n00:17:59,031 --> 00:18:04,207\nI've taken the 172.16.2.0/23 network,\n\n352\n00:18:04,207 --> 00:18:07,995\nand I've broken it up into four /25s.\n\n353\n00:18:07,995 --> 00:18:10,655\nAll right, so I've got four /25s now.\n\n354\n00:18:10,655 --> 00:18:13,945\nAnd if I look over at another branch,\nthey should have already learned this.\n\n355\n00:18:16,565 --> 00:18:17,575\nThey've learned two of them.\n\n356\n00:18:17,575 --> 00:18:19,660\nIt might take a minute before\nI learn the other ones.\n\n357\n00:18:19,660 --> 00:18:25,950\nOh, you know what, actually I need to\nfilter based on 172.16.3 is the other one.\n\n358\n00:18:25,950 --> 00:18:26,820\nThere we go.\n\n359\n00:18:26,820 --> 00:18:30,371\nSo I've learned those four networks now,\nright, so I'm getting them,\n\n360\n00:18:30,371 --> 00:18:31,700\nthey're coming right in.\n\n361\n00:18:31,700 --> 00:18:33,030\nAnd they've all got the same cost.\n\n362\n00:18:33,030 --> 00:18:35,030\nSee how they all have a cost of 20?\n\n363\n00:18:35,030 --> 00:18:37,990\nAnd that cost of 20 is fine, right?\n\n364\n00:18:37,990 --> 00:18:44,380\nIt's a 10MB link on branch 1, and then\na 10MB link between branch 1 and branch 2.\n\n365\n00:18:44,380 --> 00:18:47,440\nAnd that's how we end up with our 20 for\nour cost.\n\n366\n00:18:47,440 --> 00:18:50,620\nBut let's say I wanna\nmanipulate that cost, okay?\n\n367\n00:18:50,620 --> 00:18:54,740\nSo on branch 1, I go and\nchange the cost of those interfaces.\n\n368\n00:18:54,740 --> 00:19:02,240\nSo I get into e0/1.1 and\nI say, ip ospf cost 1000.\n\n369\n00:19:02,240 --> 00:19:06,430\nAnd then I get into 1.2,\nand I set the cost to 2000.\n\n370\n00:19:06,430 --> 00:19:10,630\nAnd I get into .3 and\nI set that cost to 3000.\n\n371\n00:19:10,630 --> 00:19:15,950\nAnd I get into 4 and\nI set the cost to 4000, all right?\n\n372\n00:19:15,950 --> 00:19:20,650\nSo now I have a different cost\non each one of those, all right?\n\n373\n00:19:20,650 --> 00:19:23,321\nAnd the other routers will\nlearn that pretty quickly too,\n\n374\n00:19:23,321 --> 00:19:25,075\nOSPF is really fast about this stuff.\n\n375\n00:19:25,075 --> 00:19:26,105\nAnd I can see it already has.\n\n376\n00:19:26,105 --> 00:19:30,820\nNow I've got instead of 20,\n20, 20, 20, now I have 1010,\n\n377\n00:19:30,820 --> 00:19:33,885\n2010, 3010, 4010, all right?\n\n378\n00:19:33,885 --> 00:19:35,473\nMy costs are properly reflected.\n\n379\n00:19:35,473 --> 00:19:42,440\nAll right, now, if I were to do\nsomething like summarize this route.\n\n380\n00:19:42,440 --> 00:19:46,340\nWhen I apply a summary to it,\nit's gonna roll it up and\n\n381\n00:19:46,340 --> 00:19:50,770\nthe lowest cost is what's actually\ngoing to be reflected on that summary.\n\n382\n00:19:50,770 --> 00:19:52,820\nAnd that might not be what I want.\n\n383\n00:19:52,820 --> 00:19:56,070\nI might not want the summary\nreflected as 1010.\n\n384\n00:19:56,070 --> 00:20:00,110\nI might want it to reflect as 4010 or\nsomething more accurate.\n\n385\n00:20:00,110 --> 00:20:03,310\nWell, if I wanna override that cost,\n\n386\n00:20:03,310 --> 00:20:05,390\nI start to bump into\nproblems there with OSPF.\n\n387\n00:20:05,390 --> 00:20:07,240\nNow I can override it when\nI do my summary, right?\n\n388\n00:20:07,240 --> 00:20:09,760\nWe covered that in\nthe summary routing episode.\n\n389\n00:20:09,760 --> 00:20:12,460\nBut if I take these out of OSPF, and\n\n390\n00:20:12,460 --> 00:20:18,320\nI redistribute them in, the redistribute\ncommand only lets me set one metric.\n\n391\n00:20:18,320 --> 00:20:22,810\nAnd I lose those individual costs\nlike I was just able to set in OSPF.\n\n392\n00:20:22,810 --> 00:20:24,160\nLet me show you what I mean.\n\n393\n00:20:24,160 --> 00:20:28,690\nIf I go back to branch 1,\nI'm gonna go into ospf, and\n\n394\n00:20:28,690 --> 00:20:34,260\nI think I did just a blanket advertise\nall the networks into area 0.\n\n395\n00:20:34,260 --> 00:20:35,460\nSo let me just get that out of there.\n\n396\n00:20:37,760 --> 00:20:42,712\nAll right, and I'll do the 192.168.0.0,\n\n397\n00:20:42,712 --> 00:20:49,360\nput that in area 0, and I have a loop\nback address which I think is this guy.\n\n398\n00:20:52,820 --> 00:20:55,450\nWe'll put that in area 0.\n\n399\n00:20:55,450 --> 00:20:59,820\nAnd let me fix my router\nID cuz it would have reset.\n\n400\n00:20:59,820 --> 00:21:00,910\nTo put that back.\n\n401\n00:21:00,910 --> 00:21:03,160\nThere, okay.\n\n402\n00:21:03,160 --> 00:21:11,250\nSo now, if I look at my OSPF I'm not\npushing out those 172.16 networks anymore.\n\n403\n00:21:11,250 --> 00:21:13,030\nI've pulled those out of OSPF.\n\n404\n00:21:13,030 --> 00:21:19,070\nAnd if I look on branch 2, those routes\nshould all be gone, and they are.\n\n405\n00:21:19,070 --> 00:21:23,161\nAnd instead of bringing those\ninterfaces directly into OSPF,\n\n406\n00:21:23,161 --> 00:21:26,760\nI'm gonna redistribute them into OSPF.\n\n407\n00:21:26,760 --> 00:21:29,285\nSo I'm gonna get into router ospf 1.\n\n408\n00:21:29,285 --> 00:21:32,617\nAnd I'll say redistribute static, and\n\n409\n00:21:32,617 --> 00:21:39,910\nthen I do have the option to assign\na metric right here, a metric of whatever.\n\n410\n00:21:39,910 --> 00:21:44,220\nBut it's gonna be one metric\nshared by all of those routes.\n\n411\n00:21:44,220 --> 00:21:48,029\nSo if I set the metric to 1000,\nthey're all gonna get 1000.\n\n412\n00:21:48,029 --> 00:21:50,819\nIf I set it to 4000 they're\nall gonna get 4000.\n\n413\n00:21:50,819 --> 00:21:53,779\nOops, I need to throw in that subnets\ntag or that's not gonna work.\n\n414\n00:21:53,779 --> 00:21:54,529\nThere we go.\n\n415\n00:21:54,529 --> 00:21:57,500\nSo, it doesn't give me\na lot of flexibility.\n\n416\n00:21:57,500 --> 00:21:59,770\nBut that's what we did in\nthe route distribution episode.\n\n417\n00:21:59,770 --> 00:22:01,280\nWe just did one metric and that was that.\n\n418\n00:22:01,280 --> 00:22:03,100\nAnd you just picked\nwhichever one you wanted, or\n\n419\n00:22:03,100 --> 00:22:05,330\nyou left it out and\nit went with the lowest one.\n\n420\n00:22:05,330 --> 00:22:07,160\nBut what if I wanna\noverride that behavior?\n\n421\n00:22:07,160 --> 00:22:09,060\nI want it when they come in,\n\n422\n00:22:09,060 --> 00:22:11,680\nwhere each of these routes\nstill gets their original cost.\n\n423\n00:22:11,680 --> 00:22:13,660\nIt's not coming from ospf, so\n\n424\n00:22:13,660 --> 00:22:16,630\nthat ospf cost command I did\nearlier doesn't take effect.\n\n425\n00:22:16,630 --> 00:22:18,290\nI need a way to override that.\n\n426\n00:22:18,290 --> 00:22:20,080\nAnd I can do that with a route map.\n\n427\n00:22:20,080 --> 00:22:23,125\nA route map can look for these routes, and\n\n428\n00:22:23,125 --> 00:22:27,740\nmodify their cost as they're\nbeing redistributed into OSPF.\n\n429\n00:22:27,740 --> 00:22:30,946\nIf I had done a question mark\nat the end of this command,\n\n430\n00:22:30,946 --> 00:22:34,923\nI would've seen that there's a route\nmap option right there where I\n\n431\n00:22:34,923 --> 00:22:37,740\ncan specify a route map\nto modify these values.\n\n432\n00:22:37,740 --> 00:22:40,988\nAnd that's really important because\notherwise when these come in,\n\n433\n00:22:40,988 --> 00:22:42,780\nlike if I look at my other router here.\n\n434\n00:22:42,780 --> 00:22:47,764\nWhen they come in to the process,\nthey're going to all have\n\n435\n00:22:47,764 --> 00:22:52,663\nthe same criteria that they did before,\nor the same cost.\n\n436\n00:22:52,663 --> 00:22:54,180\nAnd, have I not learned them?\n\n437\n00:22:55,890 --> 00:22:56,960\nI have not learned them yet.\n\n438\n00:22:56,960 --> 00:23:01,393\nDid I-\n>> You did not make static entries,\n\n439\n00:23:01,393 --> 00:23:02,320\ndid you?\n\n440\n00:23:02,320 --> 00:23:05,410\n>> Oh you know what, I did static,\nI should have done connected.\n\n441\n00:23:05,410 --> 00:23:06,700\nThey're connected, shoot.\n\n442\n00:23:06,700 --> 00:23:09,110\nIt does help if you pick\nthe right protocol, right?\n\n443\n00:23:09,110 --> 00:23:11,210\nSo I need it redistribute connected,\nnot static.\n\n444\n00:23:11,210 --> 00:23:13,420\nSo I'll redistribute connected this time.\n\n445\n00:23:13,420 --> 00:23:17,570\nI'll set a metric of 4000, and\nI'll use my subnets keyword.\n\n446\n00:23:17,570 --> 00:23:19,973\nAnd let me just get rid of\nthat redistribute static,\n\n447\n00:23:19,973 --> 00:23:21,236\nI don't have any statics.\n\n448\n00:23:23,356 --> 00:23:24,026\nThere we go.\n\n449\n00:23:24,026 --> 00:23:24,946\nSo we'll just get rid of that.\n\n450\n00:23:24,946 --> 00:23:28,866\nSo now if I look over on branch 2 and\nI do that show ip route, whoops.\n\n451\n00:23:28,866 --> 00:23:31,076\nWhich I will promptly spell wrong.\n\n452\n00:23:31,076 --> 00:23:32,116\nThere they are.\n\n453\n00:23:32,116 --> 00:23:35,120\nThey're coming in as O E2s,\nwhich I expected, and\n\n454\n00:23:35,120 --> 00:23:37,660\nsee how they all have that cost of 4000?\n\n455\n00:23:37,660 --> 00:23:42,070\nWhat if I wanted to modify the cost\non each of those to be unique?\n\n456\n00:23:42,070 --> 00:23:44,250\nWhat if I wanted to block one of them?\n\n457\n00:23:44,250 --> 00:23:50,800\nWhat if, yeah, I wanted 2.0, 2.128 and\n3.0, but I didn't want 3.128?\n\n458\n00:23:50,800 --> 00:23:53,590\nWell when you redistribute connected,\nit gets all the connected.\n\n459\n00:23:53,590 --> 00:23:55,670\nHow do we filter some of them out?\n\n460\n00:23:55,670 --> 00:23:57,390\nThat's how the route map comes in.\n\n461\n00:23:57,390 --> 00:24:01,050\nWe create a route map, and it lets us\npick and choose what we want in and\n\n462\n00:24:01,050 --> 00:24:02,510\nwhat we don't want in.\n\n463\n00:24:02,510 --> 00:24:05,310\nAnd it let's us modify\nthe ones that do come in.\n\n464\n00:24:05,310 --> 00:24:08,310\nSo you can change them and\ndo all sorts of crazy stuff with it.\n\n465\n00:24:08,310 --> 00:24:11,250\nSo pretty neat stuff, definitely\nsomething we want to see in action.\n\n466\n00:24:12,350 --> 00:24:14,630\nAll right well at this\npoint we see my problem.\n\n467\n00:24:14,630 --> 00:24:18,250\nMy problem here is I'm getting\nthis equal cost on these link,\n\n468\n00:24:18,250 --> 00:24:19,980\nI want different costs.\n\n469\n00:24:19,980 --> 00:24:22,610\nAnd let's just say I want\nto filter that 3.128.\n\n470\n00:24:22,610 --> 00:24:25,130\nNow I need to see how I can\nbuild a route map to fix that.\n\n471\n00:24:25,130 --> 00:24:29,205\nHow we can build a route map and\nassign it to this and use it.\n\n472\n00:24:29,205 --> 00:24:33,158\nBut we're a little low on time on this\nsegment, so let's stop and take a break,\n\n473\n00:24:33,158 --> 00:24:36,698\nand when we get back, we'll build\na route map, we'll put it in place,\n\n474\n00:24:36,698 --> 00:24:38,830\nand we'll get to see this magic in action.\n\n475\n00:24:38,830 --> 00:24:40,539\nSo stay tuned,\nwe'll be back in just a moment.\n\n476\n00:24:40,539 --> 00:24:44,118\n[SOUND] All right,\n\n477\n00:24:44,118 --> 00:24:49,372\nwelcome back everybody.\n\n478\n00:24:49,372 --> 00:24:52,481\nSo, we left off with a cliff hanger,\nwe had foreign routes out there,\n\n479\n00:24:52,481 --> 00:24:55,063\nthe costs weren't accurate,\nand we want to fix that, and\n\n480\n00:24:55,063 --> 00:24:57,060\nwe're going to use a route map to do that.\n\n481\n00:24:57,060 --> 00:24:58,910\nSo, I'm going to use a route map.\n\n482\n00:24:58,910 --> 00:25:01,460\nTo define criteria to match some routes.\n\n483\n00:25:01,460 --> 00:25:04,100\nAnd some of them I'm\ngonna modify their cost.\n\n484\n00:25:04,100 --> 00:25:06,190\nOther ones I'm gonna block outright,\nright?\n\n485\n00:25:06,190 --> 00:25:10,290\nWe wanna take various actions with our\nroute map and knock this stuff out.\n\n486\n00:25:10,290 --> 00:25:11,850\nSo let's get a chance to see that.\n\n487\n00:25:11,850 --> 00:25:13,020\nI'm gonna jump over to Branch 1.\n\n488\n00:25:13,020 --> 00:25:14,380\nThat's where these routes are coming from,\nright?\n\n489\n00:25:14,380 --> 00:25:16,350\nThat's where my redistribute was.\n\n490\n00:25:16,350 --> 00:25:20,140\nI'm going to start by creating\nsome ACLs to support this.\n\n491\n00:25:20,140 --> 00:25:23,420\nI need some access control\nlists to match the routes, so\n\n492\n00:25:23,420 --> 00:25:25,140\nI can then take action on them.\n\n493\n00:25:25,140 --> 00:25:26,810\nNow, when you create the ACLs,\n\n494\n00:25:26,810 --> 00:25:31,810\na route map can use an extended ACL,\nor it can use a standard ACL.\n\n495\n00:25:31,810 --> 00:25:32,930\nIt's up to you.\n\n496\n00:25:32,930 --> 00:25:36,640\nIf you can get by with a standard ACL, you\nshould use it because it's more efficient.\n\n497\n00:25:37,650 --> 00:25:41,750\nIf they're an extended ACL, they'll work\ntoo and you have a lot more power because\n\n498\n00:25:41,750 --> 00:25:44,910\nyou have destinations, but\nthey're a little less efficient.\n\n499\n00:25:44,910 --> 00:25:47,820\nAnother thing worth mentioning here,\nI'm gonna use numbered ACLs, and\n\n500\n00:25:47,820 --> 00:25:51,510\nI know some of you are out there going,\nwhy is Don using numbered ACLs?\n\n501\n00:25:51,510 --> 00:25:53,400\nNamed ACLs are the way to go.\n\n502\n00:25:53,400 --> 00:25:57,190\nWell route maps can be used\na number of different places, and\n\n503\n00:25:57,190 --> 00:26:01,710\nin some places they can use numbered or\nnamed ACLs.\n\n504\n00:26:01,710 --> 00:26:04,500\nAnd then there's a few places where\nthey can only use numbered ACLs where\n\n505\n00:26:04,500 --> 00:26:06,820\nCisco hasn't quite updated everything yet\nfor that.\n\n506\n00:26:06,820 --> 00:26:09,570\nThey've gotten it knocked out in\nmost places, but every now and\n\n507\n00:26:09,570 --> 00:26:14,210\nthen you bump into a problem and so out of\nhabit, I stick with numbered ACLs on this.\n\n508\n00:26:14,210 --> 00:26:17,590\nIn this example I'm about to do,\nyou can do named ACLs just fine.\n\n509\n00:26:17,590 --> 00:26:18,940\nSo if you're doing this on your own and\n\n510\n00:26:18,940 --> 00:26:21,220\nyou want to use a named ACL,\nhelp yourself.\n\n511\n00:26:21,220 --> 00:26:24,400\nBut I'm still in the habit of doing\nnumbered ACLs because I know that numbered\n\n512\n00:26:24,400 --> 00:26:26,020\nACLs work everywhere.\n\n513\n00:26:26,020 --> 00:26:28,420\nA great example is on the control plane,\nif you're doing, like,\n\n514\n00:26:28,420 --> 00:26:30,360\ncontrol plane policing and stuff.\n\n515\n00:26:30,360 --> 00:26:33,000\nThere's a lot of places in there\nwhere it does not like named ACLs.\n\n516\n00:26:33,000 --> 00:26:34,350\nIt needs numbered.\n\n517\n00:26:34,350 --> 00:26:36,760\nSo that's why I'm of that habit.\n\n518\n00:26:36,760 --> 00:26:42,020\nSo what I want to do is I wanna modify\nthe metrics of three of my routes,\n\n519\n00:26:42,020 --> 00:26:46,210\nand I want to block one of my routes.\n\n520\n00:26:46,210 --> 00:26:48,600\nSo I'm gonna need to create four ACL's.\n\n521\n00:26:48,600 --> 00:26:52,620\nOne to identify each of\nthe four individual routes and\n\n522\n00:26:52,620 --> 00:26:55,440\nI can do standard ACL's for\nthis because just single routes, right?\n\n523\n00:26:55,440 --> 00:27:00,000\nSo I'm going to say access-list 1 permit.\n\n524\n00:27:00,000 --> 00:27:02,450\nAnd you're always going\nto do a permit on this.\n\n525\n00:27:02,450 --> 00:27:03,990\nThe route map might be denying or\n\n526\n00:27:03,990 --> 00:27:06,750\nblocking something, but for\nthe match you need permit ACL.\n\n527\n00:27:06,750 --> 00:27:08,860\nSo I'm going to do a permit.\n\n528\n00:27:08,860 --> 00:27:12,120\nAnd I'm looking for\n172.16.2.0 2.0 0.0.0.128.\n\n529\n00:27:12,120 --> 00:27:17,313\nI'm trying to get that\nfirst half that one,\n\n530\n00:27:17,313 --> 00:27:23,660\noh wait, no it wouldn't.\n\n531\n00:27:23,660 --> 00:27:29,580\nIt would be 127.\n\n532\n00:27:29,580 --> 00:27:31,310\nThere we go like that.\n\n533\n00:27:31,310 --> 00:27:32,246\nThat's gonna be half for a sec [LAUGH].\n\n534\n00:27:32,246 --> 00:27:33,788\nYou gotta work out your ACL.\n\n535\n00:27:33,788 --> 00:27:38,496\nThe network is 172.16.2.0./25.\n\n536\n00:27:38,496 --> 00:27:40,455\nSo i'm trying to get\nthe first half of that range.\n\n537\n00:27:40,455 --> 00:27:45,048\nAnd so for that last octet, the first\nfour bits are part of the network ID, and\n\n538\n00:27:45,048 --> 00:27:47,390\nthe last four bits are part-- Sorry.\n\n539\n00:27:47,390 --> 00:27:50,160\nThe first two bits are part\nof the network ID, and\n\n540\n00:27:50,160 --> 00:27:52,220\nthe last six bits\nare part of the first ID.\n\n541\n00:27:52,220 --> 00:27:54,163\nSo that's where I\"m\ngetting that number from.\n\n542\n00:27:54,163 --> 00:27:59,555\nAll right, and then I'll do access list\n\n543\n00:27:59,555 --> 00:28:07,807\n2 permit 172.16.2.128 0.0.0.127,\n\n544\n00:28:07,807 --> 00:28:13,200\nand then I'll do access-list 3 permit\n\n545\n00:28:13,200 --> 00:28:19,390\n172.16.3.0.0.0.127 And\n\n546\n00:28:19,390 --> 00:28:26,705\naccess-list 4 permit 172.16.3.128.\n\n547\n00:28:26,705 --> 00:28:27,664\nNothing [LAUGH].\n\n548\n00:28:27,664 --> 00:28:28,950\n0.0.0.17, I'm adding a fifth octet for\nextra power.\n\n549\n00:28:31,750 --> 00:28:35,190\nAll right, now this last one is\nthe network that I wanna block.\n\n550\n00:28:35,190 --> 00:28:39,020\nI wanna block this one outright, but\nI'm still using a permit here because\n\n551\n00:28:39,020 --> 00:28:42,930\nI need to match on it, and when you do\na permit you're saying yes it matches.\n\n552\n00:28:42,930 --> 00:28:45,660\nIf you do a deny you're\nsaying no it doesn't match.\n\n553\n00:28:45,660 --> 00:28:48,630\nI need it to match so\nI can then block the route.\n\n554\n00:28:48,630 --> 00:28:52,170\nSo it's a little counterintuitive but\nI've gotta do that block right there.\n\n555\n00:28:52,170 --> 00:28:54,160\nI've gotta do that permit right here\nto make sure that goes through.\n\n556\n00:28:54,160 --> 00:28:57,090\nSo there's my ACLs that\nare gonna support my route map.\n\n557\n00:28:57,090 --> 00:28:59,130\nNow it's time to build the route map.\n\n558\n00:28:59,130 --> 00:29:01,330\nRoute maps are like ACLs.\n\n559\n00:29:01,330 --> 00:29:03,928\nEach entry in the route map\nhas a sequence number, and\n\n560\n00:29:03,928 --> 00:29:07,972\nthe first one you create is usually gonna\nbe something like, sequence number ten,\n\n561\n00:29:07,972 --> 00:29:11,580\nI usually go in tens, so\nit's sequence number ten, 20, 30, 40.\n\n562\n00:29:11,580 --> 00:29:15,121\nIt leaves plenty of room in between each\nentry to put additional values later on\n\n563\n00:29:15,121 --> 00:29:18,090\ndown the road, so\nyou can go in and modify things.\n\n564\n00:29:18,090 --> 00:29:21,069\nSo I'm going to start\nwith this first network,\n\n565\n00:29:21,069 --> 00:29:24,205\nwhose metric I want to set to 1,000,\nright?\n\n566\n00:29:24,205 --> 00:29:28,190\nI wanna set that metric to 1,000\nbecause that's what I want it do.\n\n567\n00:29:28,190 --> 00:29:30,830\nThe next one I want to be 2,000 and\nthen 3,000, right?\n\n568\n00:29:30,830 --> 00:29:32,880\nSo each one's going to\nget the different metric.\n\n569\n00:29:32,880 --> 00:29:35,394\nSo I'm going to say route-map.\n\n570\n00:29:36,910 --> 00:29:39,570\nAnd then I need to give it a name.\n\n571\n00:29:39,570 --> 00:29:40,900\nSo, I need to identify it.\n\n572\n00:29:40,900 --> 00:29:46,030\nAnd, oh, you know actually I need\nto do ip route-map, don't I.\n\n573\n00:29:46,030 --> 00:29:47,670\nOh, nope am I right?\n\n574\n00:29:47,670 --> 00:29:51,930\nI always forget whether I need to\nhave that ip statement or not.\n\n575\n00:29:51,930 --> 00:29:53,980\nThere we go, all right, so\nroute-map I need to give it a name.\n\n576\n00:29:53,980 --> 00:29:57,363\nAnd I'm gonna call this\none connected-to-ospf.\n\n577\n00:29:57,363 --> 00:30:00,720\nAnd that's just so\nI can remember what this route-map is for.\n\n578\n00:30:00,720 --> 00:30:03,530\nThis one's gonna be applied to routes\nthat I'm bringing in from my connected\n\n579\n00:30:03,530 --> 00:30:06,560\ninterfaces, redistributed into OSPF.\n\n580\n00:30:06,560 --> 00:30:08,880\nIf this was my BGP filter for a neighbor,\n\n581\n00:30:08,880 --> 00:30:11,750\nI might put the neighbor's name in\nthere and that I'm filtering them.\n\n582\n00:30:11,750 --> 00:30:15,020\nIf this was for policy-based routing,\nI might put that this is my PBR map.\n\n583\n00:30:15,020 --> 00:30:18,100\nOr whatever name it is that you\ncan remember what that map is for.\n\n584\n00:30:19,630 --> 00:30:20,590\nThen.\n\n585\n00:30:20,590 --> 00:30:24,310\nI have to say whether I'm allowing these\nroutes in the routing table or not.\n\n586\n00:30:24,310 --> 00:30:26,590\nWell for this first one I am,\nso I'm gonna do a permit.\n\n587\n00:30:28,230 --> 00:30:32,750\nAnd then I'll give it a sequence number,\nthis will be sequence number ten.\n\n588\n00:30:32,750 --> 00:30:34,260\nNow I'm in the route map.\n\n589\n00:30:34,260 --> 00:30:38,550\nAnd from here,\nI'm gonna do my matches and my sets.\n\n590\n00:30:38,550 --> 00:30:43,040\nMatches are what routes match this entry,\nand set is what I'm gonna do to them.\n\n591\n00:30:43,040 --> 00:30:46,493\nSo I'm gonna match address one.\n\n592\n00:30:46,493 --> 00:30:51,670\nAny route that matches access list one,\nis gonna match this entry.\n\n593\n00:30:53,030 --> 00:30:58,810\nAnd then, I'm gonna set the metric\nto be a certain value, right?\n\n594\n00:30:58,810 --> 00:31:02,480\nAnd so I'm gonna set that\nmetric to be 1000, all right?\n\n595\n00:31:02,480 --> 00:31:05,240\nSo, any route that comes in\nthat matches access list one,\n\n596\n00:31:05,240 --> 00:31:08,660\nwill get a metric set of 1000.\n\n597\n00:31:08,660 --> 00:31:12,900\nThen, I'll do the same thing for\naccess list two.\n\n598\n00:31:12,900 --> 00:31:14,740\nSo I'm going to create\nanother route map entry here.\n\n599\n00:31:14,740 --> 00:31:19,080\nI'll say route-map,\nconnected to OSPF, permit 20,\n\n600\n00:31:19,080 --> 00:31:21,430\nleaving a nice amount of room there.\n\n601\n00:31:21,430 --> 00:31:23,830\nYou don't have to leave room in\nbetween them, but I like to.\n\n602\n00:31:25,030 --> 00:31:29,410\nAnd this time, I'll say match address 2,\nso it's matching access list 2.\n\n603\n00:31:29,410 --> 00:31:32,270\nI'll set it's metric to 2,000.\n\n604\n00:31:32,270 --> 00:31:39,200\n>> Now Don, if I wanted to add in,\nlets say an additional set attribute.\n\n605\n00:31:39,200 --> 00:31:40,090\nCould I do that too?\n\n606\n00:31:40,090 --> 00:31:40,890\n>> Yeah, absolutely.\n\n607\n00:31:40,890 --> 00:31:43,678\nSo for example,\nnow I sound like one those, but\n\n608\n00:31:43,678 --> 00:31:46,340\ncan the juice tiger also\njuice a watermelon?\n\n609\n00:31:46,340 --> 00:31:48,340\nWell absolutely Ronnie, let me show you.\n\n610\n00:31:48,340 --> 00:31:50,420\nSo here I'm just doing one set statement.\n\n611\n00:31:50,420 --> 00:31:52,590\nI'm doing set metric 2000.\n\n612\n00:31:52,590 --> 00:31:54,460\nI could also add more to that, right.\n\n613\n00:31:54,460 --> 00:31:56,750\nIf you just set question mark,\nyou'll see other things.\n\n614\n00:31:56,750 --> 00:32:00,100\nSo maybe I want to do,\nlet's do metric-type, right.\n\n615\n00:32:00,100 --> 00:32:04,140\nIn OSPF, these are gonna come\nin as type-2 routes by default.\n\n616\n00:32:04,140 --> 00:32:06,340\nMaybe I want this one\nto come in as type-1.\n\n617\n00:32:06,340 --> 00:32:08,590\nAnd so I can add that right there.\n\n618\n00:32:08,590 --> 00:32:13,698\nNow I've got two set statements,\nI've got set metric 2000, and set metric\n\n619\n00:32:13,698 --> 00:32:18,679\n-type type-1, so it's gonna come in\nas an OE1 instead of an OE2, right.\n\n620\n00:32:18,679 --> 00:32:20,670\nAnd you could add more set commands.\n\n621\n00:32:20,670 --> 00:32:22,508\nYou can also do match commands, right.\n\n622\n00:32:22,508 --> 00:32:25,747\nWhen we do match, so\nlike I did match address 1,\n\n623\n00:32:25,747 --> 00:32:30,092\nright, if you do a question mark\nafter that, you'll, oh wait,\n\n624\n00:32:30,092 --> 00:32:33,743\noh that's right,\nit's angry because of the syntax.\n\n625\n00:32:33,743 --> 00:32:34,726\n>> [LAUGH]\n>> So\n\n626\n00:32:34,726 --> 00:32:38,090\nif we do match address one like that,\nright.\n\n627\n00:32:38,090 --> 00:32:40,810\nAnd you do a question mark,\nit you provide your access list, and\n\n628\n00:32:40,810 --> 00:32:44,150\nnotice I can provide more than\none access list like that.\n\n629\n00:32:44,150 --> 00:32:47,830\nAll right, these are different\naccess lists that I can provide.\n\n630\n00:32:47,830 --> 00:32:50,433\nAnd these are the equivalent of or\nstatements, all right.\n\n631\n00:32:50,433 --> 00:32:54,104\nIf it matches access-list 1,\nor access-list 2, or\n\n632\n00:32:54,104 --> 00:32:58,879\naccess-list 3, or access-list 4,\nthen do something, all right.\n\n633\n00:32:58,879 --> 00:33:02,300\nSo when they're all in line like that,\nthat's an or.\n\n634\n00:33:03,320 --> 00:33:08,260\nI could also do separate by itself,\nright, and\n\n635\n00:33:08,260 --> 00:33:13,830\nthen it becomes an and, it's gotta match\naddress list one that I already put in and\n\n636\n00:33:13,830 --> 00:33:16,068\nit has got to match access-list 2 right.\n\n637\n00:33:16,068 --> 00:33:18,290\nSo when they're on separate\nlines it's an and,\n\n638\n00:33:18,290 --> 00:33:21,810\nwhen they are on the same\nline it is an or, right.\n\n639\n00:33:21,810 --> 00:33:24,550\nSo a neat functionality there if\nyou want to do more than one thing.\n\n640\n00:33:24,550 --> 00:33:26,578\nThe set commands are always\non separate lines though and\n\n641\n00:33:26,578 --> 00:33:28,610\nit's just gonna set each of those options.\n\n642\n00:33:28,610 --> 00:33:34,580\nSo if I look at what I've done so\nfar in my route map,\n\n643\n00:33:34,580 --> 00:33:36,800\nhere's the first entry I did, right.\n\n644\n00:33:36,800 --> 00:33:41,030\nIt matches access-list 1 and\nthen sets the metric to 1000.\n\n645\n00:33:41,030 --> 00:33:46,020\nAnd then my next entry\nmatches access-list 2, and\n\n646\n00:33:46,020 --> 00:33:49,743\nit sets the metric to 2000 and\nthe metric-type to type-1, right.\n\n647\n00:33:49,743 --> 00:33:52,032\nSo there we get that extra\ninformation in there.\n\n648\n00:33:52,032 --> 00:33:56,471\nAll right, and then I need to\ntake care of that next route, so\n\n649\n00:33:56,471 --> 00:34:02,758\nI'm gonna do another route map entry, and\nthis will just be that last access-list.\n\n650\n00:34:02,758 --> 00:34:08,019\nSo I'm gonna do route-map\nconnected-to-ospf\n\n651\n00:34:08,019 --> 00:34:13,038\npermit 30, and I'm gonna match address 3.\n\n652\n00:34:13,038 --> 00:34:18,158\nI'm gonna set it's metric to 3000,\nand that's how I'm gonna do on it.\n\n653\n00:34:18,158 --> 00:34:20,505\nNow here's where things\nare gonna get different.\n\n654\n00:34:20,505 --> 00:34:27,155\nFor the last route, I don't want to modify\nit's metric, I want to block it outright.\n\n655\n00:34:27,155 --> 00:34:28,660\nI don't want it to come into\nthe routing team, right.\n\n656\n00:34:28,660 --> 00:34:30,865\nI wanna leave this last one out.\n\n657\n00:34:30,865 --> 00:34:35,604\nSo, for this one, I'm gonna say route-map\n\n658\n00:34:35,604 --> 00:34:40,478\nconnected-to-ospf deny 40, all right.\n\n659\n00:34:40,478 --> 00:34:42,189\nI'm changing my permit to a deny,\n\n660\n00:34:42,189 --> 00:34:46,147\nwhen you do deny that means don't allow\nthis route to come in the routing table.\n\n661\n00:34:46,147 --> 00:34:51,274\nAnd then I'll just say match address 4, so\nit's gonna match that access-list 4 and\n\n662\n00:34:51,274 --> 00:34:55,010\nit's gonna block that one from\ncoming into the routing table.\n\n663\n00:34:55,010 --> 00:34:59,560\nAll right, there is no point doing any set\ncommands on a deny, cuz you're blocking.\n\n664\n00:34:59,560 --> 00:35:00,850\nRight, you can, it'll take it.\n\n665\n00:35:00,850 --> 00:35:03,310\nYou can put the set commands in there,\nbut they'll never actually do anything.\n\n666\n00:35:04,990 --> 00:35:06,920\nAll right, now If I stop here,\n\n667\n00:35:08,020 --> 00:35:12,290\nwhat happens to any route that\ndoesn't match the route-map?\n\n668\n00:35:12,290 --> 00:35:15,570\nWell, there's an implicit deny at the end.\n\n669\n00:35:15,570 --> 00:35:19,660\nSo anything that doesn't match\nthe route-map is gonna get thrown out.\n\n670\n00:35:19,660 --> 00:35:23,130\nWell, I might not want that, and so\nI'm gonna do one more entry on here.\n\n671\n00:35:23,130 --> 00:35:28,651\nI'm, if I can spell exit,\nI'm gonna say route-map and\n\n672\n00:35:28,651 --> 00:35:33,490\nit's called connected-to-ospf permit 50.\n\n673\n00:35:33,490 --> 00:35:38,224\nAnd on this one, I'm just gonna\nleave it empty like that, all right.\n\n674\n00:35:38,224 --> 00:35:42,782\nWhen you leave an empty entry with no\nmatch statement, no match statement,\n\n675\n00:35:42,782 --> 00:35:44,644\nmeans it matches everything.\n\n676\n00:35:44,644 --> 00:35:49,765\nAnd if you do no set statement,\nthat means it doesn't modify them.\n\n677\n00:35:49,765 --> 00:35:52,229\nSo every other route\nwill be unmodified and\n\n678\n00:35:52,229 --> 00:35:54,904\nallowed come into the routing table,\nright.\n\n679\n00:35:54,904 --> 00:35:59,755\nThat's like an access-list,\nyou do a permit any any.\n\n680\n00:35:59,755 --> 00:36:01,265\nThat's effectively what this is.\n\n681\n00:36:01,265 --> 00:36:03,875\nJust an empty entry\nright there at the end.\n\n682\n00:36:03,875 --> 00:36:05,625\nJust permit, that's the important part.\n\n683\n00:36:07,465 --> 00:36:11,027\nLet's take a look at that\nroute map as a whole, okay.\n\n684\n00:36:13,180 --> 00:36:16,710\nSo, if we look at the whole\nroute-map here, right.\n\n685\n00:36:16,710 --> 00:36:18,300\nHere's my first entry.\n\n686\n00:36:18,300 --> 00:36:23,010\nSo I did a permit 10, and then permit 20,\npermit 30, deny 40, permit 50, right.\n\n687\n00:36:23,010 --> 00:36:25,780\nThere's my five entries in this route map.\n\n688\n00:36:27,040 --> 00:36:29,270\nThey each match off of access-lists.\n\n689\n00:36:29,270 --> 00:36:31,620\nSo match address 1, 2, 3, and 4.\n\n690\n00:36:31,620 --> 00:36:36,065\nAnd see how it changed the syntax for the\nnew syntax there, match ip address 1, 2,\n\n691\n00:36:36,065 --> 00:36:36,760\n3, and 4.\n\n692\n00:36:36,760 --> 00:36:40,940\nThe last one has no match date,\nright, that's that catch all.\n\n693\n00:36:40,940 --> 00:36:44,809\nAnd then they set, set a metric of 1000,\nset a metric of 2000,\n\n694\n00:36:44,809 --> 00:36:47,340\nset a metric-type of type-1, right.\n\n695\n00:36:47,340 --> 00:36:51,060\nIt's all the modifications\nthat I'm making.\n\n696\n00:36:51,060 --> 00:36:53,760\nAnd then that's the route-map.\n\n697\n00:36:53,760 --> 00:36:56,820\nNow I take the route-map and\nI attach it somewhere.\n\n698\n00:36:56,820 --> 00:36:58,820\nThe route map doesn't\ndo anything by itself.\n\n699\n00:36:58,820 --> 00:37:00,420\nJust sits there, right.\n\n700\n00:37:00,420 --> 00:37:02,710\nI need to go and\nattach it to see it in action.\n\n701\n00:37:02,710 --> 00:37:05,530\nNow, if you watch the PBR episode,\n\n702\n00:37:05,530 --> 00:37:08,860\nI mentioned how once it's attached you\ncan see it working by doing things like,\n\n703\n00:37:08,860 --> 00:37:13,130\nshow route-map, right, and\nit shows that it's got some counters.\n\n704\n00:37:13,130 --> 00:37:17,440\nWell, most of those counters don't\nactually work for redistribution, so\n\n705\n00:37:17,440 --> 00:37:18,410\nyou can't trust those.\n\n706\n00:37:18,410 --> 00:37:21,020\nThe way you know it's working with\nredistribution is you look at your\n\n707\n00:37:21,020 --> 00:37:22,220\nrouting protocol.\n\n708\n00:37:22,220 --> 00:37:23,603\nSo I need to get this attached, and\n\n709\n00:37:23,603 --> 00:37:26,393\nthen we can look at the routing\nprotocol to see what happens, right.\n\n710\n00:37:26,393 --> 00:37:31,444\nSo we attach it by going into our routing\nprotocols, I'll do router ospf 1,\n\n711\n00:37:31,444 --> 00:37:36,125\nand remember that redistribution\ncommand that I did earlier, right.\n\n712\n00:37:36,125 --> 00:37:42,606\nWe did redistribute connected, and\nthen I went on to specify a metric.\n\n713\n00:37:42,606 --> 00:37:44,434\nAnd do you remember what metric I used?\n\n714\n00:37:44,434 --> 00:37:45,165\nWas it 1000?\n\n715\n00:37:45,165 --> 00:37:46,567\n>> 4000 is the one you want.\n\n716\n00:37:46,567 --> 00:37:47,116\n>> 4000, all right.\n\n717\n00:37:47,116 --> 00:37:48,883\nSo I did 4000.\n\n718\n00:37:48,883 --> 00:37:52,183\nSo I'm saying I want to redistribute\nroutes from my directly connected\n\n719\n00:37:52,183 --> 00:37:53,310\ninterfaces into OSPF.\n\n720\n00:37:53,310 --> 00:37:59,480\nI want to set their metric to 4000,\nand then I did the subnet stack.\n\n721\n00:37:59,480 --> 00:38:01,050\nLike that, right.\n\n722\n00:38:01,050 --> 00:38:03,250\nWell, I'm going to go ahead and\nremove that metric 4000.\n\n723\n00:38:03,250 --> 00:38:06,000\nIf I want to set a default metric,\n\n724\n00:38:06,000 --> 00:38:08,270\nI can put it in the catchall at\nthe end of my route-map now.\n\n725\n00:38:08,270 --> 00:38:10,250\nThat would be a better place to put it.\n\n726\n00:38:10,250 --> 00:38:12,588\nBut my metrics are gonna\nbe set by the route-map.\n\n727\n00:38:12,588 --> 00:38:16,800\nSo, I'm gonna remove that part,\nand I'm just gonna\n\n728\n00:38:16,800 --> 00:38:21,480\nadd to the end of this\nroute-map connected-to-ospf.\n\n729\n00:38:21,480 --> 00:38:25,860\nNow, when it goes to redistribute my\nconnected routes, it's gonna feed them\n\n730\n00:38:25,860 --> 00:38:30,900\nthrough the route-map, and\nthen apply that into the routing table.\n\n731\n00:38:30,900 --> 00:38:35,800\nAnd all the modifications that we put\nin are gonna take effect as a part of\n\n732\n00:38:35,800 --> 00:38:36,370\nthat process.\n\n733\n00:38:36,370 --> 00:38:38,240\nSo let's recap the basic steps we did.\n\n734\n00:38:38,240 --> 00:38:41,090\nWe created the access-lists\nto support our traffic.\n\n735\n00:38:42,100 --> 00:38:46,680\nThen we created the route-map tying in\neach of those ACLs to specify what we\n\n736\n00:38:46,680 --> 00:38:48,880\nwanted to do to that traffic.\n\n737\n00:38:48,880 --> 00:38:53,460\nAnd lastly, we tied the route-map\nto the redistribute command.\n\n738\n00:38:53,460 --> 00:38:57,685\nIf we were doing PBR, the steps are the\nsame, the last step is what's different.\n\n739\n00:38:57,685 --> 00:39:01,035\nOn PBR, you then tie\nthe route-map to the interface.\n\n740\n00:39:01,035 --> 00:39:05,775\nIn BGP, you would then tie the route-map\nto the BGP neighbor statement.\n\n741\n00:39:05,775 --> 00:39:09,326\nBut the first two steps, create your ACLs\nto support the traffic, and then create\n\n742\n00:39:09,326 --> 00:39:13,047\nthe route-map, those are the same for all\nthree of the different implementations.\n\n743\n00:39:15,404 --> 00:39:18,040\nAll right, now how do I know it's working?\n\n744\n00:39:18,040 --> 00:39:23,770\nWell, if I do a show route-map,\nI can see the route-map.\n\n745\n00:39:23,770 --> 00:39:27,010\nAnd as I look at it, my policy routing\nmatches, that's what it shows me.\n\n746\n00:39:27,010 --> 00:39:30,900\nAnd if you're doing PBR,\nthose work great, you see the matches.\n\n747\n00:39:30,900 --> 00:39:33,320\nBut if you're doing BGP filtering,\nif you're doing\n\n748\n00:39:34,930 --> 00:39:39,160\nredistribution like I am doing, those\ncounters don't really help you at all, so\n\n749\n00:39:39,160 --> 00:39:41,186\nI really need to go look\nin my routing protocol.\n\n750\n00:39:41,186 --> 00:39:43,980\nNow, I'm not gonna see\nit here on this router,\n\n751\n00:39:43,980 --> 00:39:47,810\nbecause on my router, it's the connected\ninterfaces that I'm going to see, right.\n\n752\n00:39:47,810 --> 00:39:49,730\nSo here's all these connected interfaces.\n\n753\n00:39:49,730 --> 00:39:50,710\nSo again, I don't see it.\n\n754\n00:39:50,710 --> 00:39:54,300\nI really need to jump to a neighbor and\nsee what they're getting.\n\n755\n00:39:54,300 --> 00:39:57,170\nSo if I jump over to one of my neighbors.\n\n756\n00:39:57,170 --> 00:40:00,148\nBefore, he was getting these OE2s for\neach of them and\n\n757\n00:40:00,148 --> 00:40:02,690\nthey all had that cost of 4,000, right?\n\n758\n00:40:02,690 --> 00:40:05,310\nThat's what we were getting\nbefore the route map.\n\n759\n00:40:05,310 --> 00:40:07,590\nLet's see what we have now.\n\n760\n00:40:07,590 --> 00:40:08,430\nAll right?\n\n761\n00:40:08,430 --> 00:40:13,390\nNow when I look at it,\nI've got only three of the routes,\n\n762\n00:40:13,390 --> 00:40:15,800\nthe fourth one is missing, right?\n\n763\n00:40:15,800 --> 00:40:17,930\nThat's cuz my route map filtered it out.\n\n764\n00:40:17,930 --> 00:40:20,593\nAnd then I see the first one's in OE2,\n\n765\n00:40:20,593 --> 00:40:24,325\nthe second one's in OE1 and\nthe third one's in OE2.\n\n766\n00:40:24,325 --> 00:40:28,749\nThey've been modified and\nthe cost; 1,000, 2,010,\n\n767\n00:40:28,749 --> 00:40:33,260\n3,000, all right,\nthose costs that I modified are in there.\n\n768\n00:40:33,260 --> 00:40:36,602\nNow why is this one\n2,010 instead of 2,000?\n\n769\n00:40:36,602 --> 00:40:37,540\nWell, remember with an OE2,\n\n770\n00:40:38,690 --> 00:40:41,850\nthe metric doesn't change as it\ngoes deeper into your environment.\n\n771\n00:40:41,850 --> 00:40:44,700\nSo those stayed at 1,000 and 3,000.\n\n772\n00:40:44,700 --> 00:40:47,300\nWhen OE1 the metric\nchanges with each hop and\n\n773\n00:40:47,300 --> 00:40:48,750\nthat's why it incremented\nfrom 2,000 to 2,010.\n\n774\n00:40:48,750 --> 00:40:52,770\nThat's because it's an OE1\nthat's why it's different.\n\n775\n00:40:52,770 --> 00:40:54,910\nBut I can see that my\nroute map is working.\n\n776\n00:40:54,910 --> 00:40:59,340\nI'm now redistributing those routes and\ngetting the custom costs that I wanted.\n\n777\n00:40:59,340 --> 00:41:01,630\nIt's the best of both worlds, right?\n\n778\n00:41:01,630 --> 00:41:05,370\nI've got full control of how those routes\nlook once they're redistributed in.\n\n779\n00:41:06,560 --> 00:41:08,900\nThat's an example of\nthe power of a route map.\n\n780\n00:41:08,900 --> 00:41:13,385\nRoute maps give you a lot of fine grain\ncontrol over commands that are normally\n\n781\n00:41:13,385 --> 00:41:14,770\ncatch-alls, right?\n\n782\n00:41:14,770 --> 00:41:17,130\nRedistribute commands\nnormally redistribute\n\n783\n00:41:17,130 --> 00:41:21,542\nall of that particular protocol,\nhere we can filter it.\n\n784\n00:41:21,542 --> 00:41:25,460\nAll right, BGP neighbor commands typically\nget all the networks from the neighbor.\n\n785\n00:41:25,460 --> 00:41:27,490\nYou can use a route map to filter it.\n\n786\n00:41:27,490 --> 00:41:28,920\nAnd policy based routing,\n\n787\n00:41:28,920 --> 00:41:32,430\nnormally when you route, it's routing all\nthe traffic through the routing table,\n\n788\n00:41:32,430 --> 00:41:36,470\nPBR lets you filter out parts of\nthat to be routed differently.\n\n789\n00:41:36,470 --> 00:41:38,830\nRight, that's what route\nmaps are all about.\n\n790\n00:41:38,830 --> 00:41:41,640\nIs allowing you to override\nthe default behavior of the router.\n\n791\n00:41:41,640 --> 00:41:45,710\nRight, now, with great power\ncomes great responsibility.\n\n792\n00:41:45,710 --> 00:41:46,810\nI think I say that in every episode.\n\n793\n00:41:46,810 --> 00:41:47,970\nIt's turning kinda cliche.\n\n794\n00:41:47,970 --> 00:41:50,060\nI'll come up with something new later on.\n\n795\n00:41:50,060 --> 00:41:55,020\nBut basically when you do this you're\nsaying you know better than the router.\n\n796\n00:41:55,020 --> 00:41:56,450\nI know better than you.\n\n797\n00:41:56,450 --> 00:41:57,880\nYou don't know me.\n\n798\n00:41:57,880 --> 00:41:59,590\nIt sounds like I'm on Ricky Lake.\n\n799\n00:41:59,590 --> 00:42:01,298\nYou don't know me I'll\nroute however I want.\n\n800\n00:42:01,298 --> 00:42:05,870\n[LAUGH] You say that it\ndoesn't know how to get\n\n801\n00:42:05,870 --> 00:42:07,510\nto a destination the way\nthat I want it to.\n\n802\n00:42:07,510 --> 00:42:11,960\nI've got some special need that it's\nunaware of, and so I'm overriding it.\n\n803\n00:42:11,960 --> 00:42:13,930\nAnd the router is gonna let you do that,\nand it's gonna say,\n\n804\n00:42:13,930 --> 00:42:16,350\nokay, you know better than me.\n\n805\n00:42:16,350 --> 00:42:18,370\nAnd that means if that you make a mistake,\n\n806\n00:42:18,370 --> 00:42:21,010\nthe route will be perfectly\nhappy to let you do that.\n\n807\n00:42:21,010 --> 00:42:25,180\nAnd so, you put that mistake in and things\ndon't work, and now you've got a problem.\n\n808\n00:42:25,180 --> 00:42:26,935\nSo, always double check your work.\n\n809\n00:42:26,935 --> 00:42:28,765\nWhat was the first thing I did?\n\n810\n00:42:28,765 --> 00:42:32,015\nI jumped over to the another router and\nI looked at the routes that I was getting.\n\n811\n00:42:32,015 --> 00:42:34,705\nThe most common mistake, for\nme, is messing up my ACLs.\n\n812\n00:42:34,705 --> 00:42:36,655\nRight?\nIf you put the wrong wildcard\n\n813\n00:42:36,655 --> 00:42:40,055\nmask on there and it doesn't catch\nthe routes, that's a big problem.\n\n814\n00:42:40,055 --> 00:42:43,405\nAnd it's tough,\nbecause if I jump back to branch one and\n\n815\n00:42:43,405 --> 00:42:47,520\nI do a show access-list, right?\n\n816\n00:42:47,520 --> 00:42:51,980\nWhen we look,\nI actually do see the matches right there.\n\n817\n00:42:51,980 --> 00:42:54,980\nSo you can look at that to get\nan idea of whether you match that or\n\n818\n00:42:54,980 --> 00:42:58,170\nwhether it's active, so\nyou can kind of see that happening.\n\n819\n00:42:58,170 --> 00:43:00,295\nBut other commands that would\nnormally give you an output,\n\n820\n00:43:00,295 --> 00:43:02,565\nlike show route map really doesn't.\n\n821\n00:43:02,565 --> 00:43:05,705\nI don't see the matches in\nhere that are happening.\n\n822\n00:43:05,705 --> 00:43:08,645\nSo I don't know that it's\ntaking effect right away.\n\n823\n00:43:08,645 --> 00:43:11,095\nThere's certain debugs that you\ncan do to really dig in there but\n\n824\n00:43:11,095 --> 00:43:12,947\nthey're extremely difficult to read.\n\n825\n00:43:12,947 --> 00:43:14,037\nEasier to just jump to a neighbor.\n\n826\n00:43:14,037 --> 00:43:15,587\nJump to a neighbor and see what they get.\n\n827\n00:43:15,587 --> 00:43:17,927\nThat's the best way to\nsee what you end up with.\n\n828\n00:43:17,927 --> 00:43:18,507\n>> Yeah.\n\n829\n00:43:18,507 --> 00:43:21,797\nWhere I tend to have the issue is where\nwe mentioned earlier with multiple match\n\n830\n00:43:21,797 --> 00:43:25,058\nstatements or even the set statements too.\n\n831\n00:43:25,058 --> 00:43:25,923\nWith the multiple, remember,\n\n832\n00:43:25,923 --> 00:43:29,453\nthat if you actually have them all on\none line, it is equivalent to an or.\n\n833\n00:43:29,453 --> 00:43:32,123\nEach one of those is one or the other.\n\n834\n00:43:32,123 --> 00:43:35,843\nIf you do put them on separate lines,\nit means that all of them have to match.\n\n835\n00:43:35,843 --> 00:43:37,503\nBefore it will actually end up working.\n\n836\n00:43:37,503 --> 00:43:39,603\n>> Yeah, pretty cool stuff.\n\n837\n00:43:39,603 --> 00:43:42,253\nI've seen some examples on the internet,\nthat will like blow your mind they're so\n\n838\n00:43:42,253 --> 00:43:47,352\ncomplex, but the fundamentals of it\nreally isn't that big of a deal.\n\n839\n00:43:47,352 --> 00:43:49,930\nAll right, so we covered it here\nin terms of redistribution.\n\n840\n00:43:49,930 --> 00:43:52,630\nRemember that if you haven't\nwatched the PBR episode,\n\n841\n00:43:52,630 --> 00:43:56,040\nthe policy based routing, check that one\nout because we use route maps there too.\n\n842\n00:43:56,040 --> 00:44:00,760\nAnd in the BGP episodes where we start\nto set up our BGP peer relationships.\n\n843\n00:44:00,760 --> 00:44:04,350\nWe use route maps there,\ntoo, to not only filter, but\n\n844\n00:44:04,350 --> 00:44:06,280\nalso to modify the routes\nthat are coming in.\n\n845\n00:44:06,280 --> 00:44:11,360\nGreat ways to influence path selection in\nBGP, so that one's definitely out there.\n\n846\n00:44:11,360 --> 00:44:12,920\nRoute maps, really, really cool stuff.\n\n847\n00:44:14,260 --> 00:44:16,460\nAll right, well, Ronnie,\nI think that's about it for route maps.\n\n848\n00:44:16,460 --> 00:44:17,600\nCan you think of anything else?\n\n849\n00:44:17,600 --> 00:44:18,680\n>> Nope.\nAs always,\n\n850\n00:44:18,680 --> 00:44:22,530\nkeep practicing, keep using GNS3 or\nactual real world equipment.\n\n851\n00:44:22,530 --> 00:44:24,520\nWhatever you do, practice is the key.\n\n852\n00:44:25,692 --> 00:44:27,520\n>> All right, well ladies and\ngentlemen, that's a good point for\n\n853\n00:44:27,520 --> 00:44:28,820\nus to wrap this episode up.\n\n854\n00:44:28,820 --> 00:44:33,140\nLet me remind you, if you have questions\non any of this, please let us know.\n\n855\n00:44:33,140 --> 00:44:35,530\nLive during the show you can\ngot to ITPro.TV/live and\n\n856\n00:44:35,530 --> 00:44:37,930\nyou'll see the chat box\nunderneath the video.\n\n857\n00:44:37,930 --> 00:44:40,950\nPost your questions there,\nwe monitor and answer during the show.\n\n858\n00:44:40,950 --> 00:44:44,320\nIf you have questions after the show,\nuse the Q and A forums.\n\n859\n00:44:44,320 --> 00:44:47,630\nAt the top of every page you'll see\na link that says Q and A, click on it.\n\n860\n00:44:47,630 --> 00:44:48,380\nYou can jump in there,\n\n861\n00:44:48,380 --> 00:44:51,370\npost your questions, and\nmonitor and answer after the show.\n\n862\n00:44:51,370 --> 00:44:54,380\nTake advantage of that resource,\nit is there for you.\n\n863\n00:44:54,380 --> 00:44:56,440\nI hope you guys enjoyed today's episode.\n\n864\n00:44:56,440 --> 00:44:58,746\nSigning off for ITProTv I'm Don Pezet.\n\n865\n00:44:58,746 --> 00:44:59,298\n>> And I'm Ronnie Wong.\n\n866\n00:44:59,298 --> 00:45:01,048\n>> And we'll see you next time.\n\n867\n00:45:01,048 --> 00:45:11,048\n[MUSIC]\n\n868\n00:45:14,788 --> 00:45:15,288\n[SOUND]\n\n",
          "vimeoId": "119752964"
        },
        {
          "description": "Routing loops are something that’s really important to be aware of, which EIGRP and RIP are especially susceptible to, so it is important that one implements loop prevention techniques to protect one’s network from those problems. Viewers will hear about implementing loop prevention techniques and the three technologies behind it: split horizon, poison reverse and route tags.",
          "length": "4646",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/ccnproute/cisco-ccnproute-3-15-loop-_prevention-021315.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/ccnproute/cisco-ccnproute-3-15-loop-_prevention-021315-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/ccnproute/cisco-ccnproute-3-15-loop-_prevention-021315-sm.jpg",
          "title": "Loop Prevention",
          "transcript": "1\n00:00:00,000 --> 00:00:10,000\n[MUSIC]\n\n2\n00:00:15,290 --> 00:00:22,510\n[SOUND]\n\n3\n00:00:22,510 --> 00:00:33,380\n[MUSIC]\n\n4\n00:00:33,380 --> 00:00:36,250\nAll right, good morning,\ngood afternoon and good evening.\n\n5\n00:00:36,250 --> 00:00:39,208\nAnd welcome back to another\nepisode of ITProTV.\n\n6\n00:00:39,208 --> 00:00:41,200\nI'm your host, Don Pezet.\n\n7\n00:00:41,200 --> 00:00:44,040\nBack again with, well nobody this time.\n\n8\n00:00:44,040 --> 00:00:45,170\nI'm by myself actually.\n\n9\n00:00:45,170 --> 00:00:47,880\nI had to [LAUGH] get Ronnie\nto help some people today.\n\n10\n00:00:47,880 --> 00:00:52,500\nSo it is me all by myself,\ntalking about routing loops.\n\n11\n00:00:52,500 --> 00:00:55,345\nAnd routing loops are a really\nimportant thing to be aware of,\n\n12\n00:00:55,345 --> 00:00:57,070\ncuz they can happen in your network and\n\n13\n00:00:57,070 --> 00:01:00,910\nthere's things that we can do to help\nprevent them and stop them from happening.\n\n14\n00:01:00,910 --> 00:01:03,070\nSo, that's what we're going\nto take a look at here.\n\n15\n00:01:03,070 --> 00:01:06,130\nAnd the official objective, we're want\nto get all official for a moment,\n\n16\n00:01:06,130 --> 00:01:11,340\nis 3.15 configure and\nverify loop prevention mechanisms.\n\n17\n00:01:11,340 --> 00:01:15,130\nAnd then they specifically list\nthree things in the objectives,\n\n18\n00:01:15,130 --> 00:01:17,630\na little unlike Cisco,\nthey normally don't do this.\n\n19\n00:01:17,630 --> 00:01:21,986\nBut, on this objective they list,\nsplit horizon,\n\n20\n00:01:21,986 --> 00:01:26,050\npoison reverse and\nthey list tags, route tags.\n\n21\n00:01:26,050 --> 00:01:27,230\nI guess I got the order backwards there.\n\n22\n00:01:27,230 --> 00:01:30,510\nIt actually lists route tags first and\nthen split horizon, poison reverse.\n\n23\n00:01:30,510 --> 00:01:33,200\nBut I want to talk about them\nin a slightly different order,\n\n24\n00:01:33,200 --> 00:01:34,740\nan order that makes it\na little more logical sense.\n\n25\n00:01:35,840 --> 00:01:40,500\nLoop prevention is really a function\nof our routing protocols.\n\n26\n00:01:40,500 --> 00:01:44,570\nAnd I know we've talked about this before\nin some of the other shows where you have\n\n27\n00:01:44,570 --> 00:01:49,850\nOSPF, where it sees the whole topology\nend to end and if a loop happens,\n\n28\n00:01:49,850 --> 00:01:53,830\nit knows that it can spot that loop,\nand prevent it from happening.\n\n29\n00:01:53,830 --> 00:01:57,420\nSo having a loop in an OSPF environment,\nis really, really difficult.\n\n30\n00:01:57,420 --> 00:01:59,830\nI mean you have to try to\ncreate a loop if you want one.\n\n31\n00:01:59,830 --> 00:02:00,980\nIt's hard to do one by accident.\n\n32\n00:02:02,100 --> 00:02:07,920\nEIFRP and RIP, on the other hand,\nhave a much smaller view of the network.\n\n33\n00:02:07,920 --> 00:02:10,210\nThey only see what their\nneighbors tell them and\n\n34\n00:02:10,210 --> 00:02:12,810\nthey don't know what's\nbeyond those boundaries.\n\n35\n00:02:12,810 --> 00:02:16,610\nAnd so EIGRP and RIP are really\nsusceptible to routing loops.\n\n36\n00:02:16,610 --> 00:02:20,060\nRouting loops can happen very easily\nin those types of environments.\n\n37\n00:02:20,060 --> 00:02:24,850\nSo we need some way to prevent that,\nto protect our network from that problem.\n\n38\n00:02:26,560 --> 00:02:28,345\nFortunately, Cisco's\nalready thought about this.\n\n39\n00:02:28,345 --> 00:02:32,030\nCisco's already put some mechanisms\nin place on the router that help\n\n40\n00:02:32,030 --> 00:02:33,350\nto prevent the loops.\n\n41\n00:02:33,350 --> 00:02:34,882\nAnd the mechanisms I'm talking about are,\n\n42\n00:02:34,882 --> 00:02:39,650\nsplit horizon and\npoison reverse, those two.\n\n43\n00:02:39,650 --> 00:02:43,892\nNow the exam objective says that we need\nto know how to configure and verify.\n\n44\n00:02:45,060 --> 00:02:48,460\nWell, for these two technologies\nconfiguration is easy, you don't.\n\n45\n00:02:48,460 --> 00:02:49,430\nIt's on by default.\n\n46\n00:02:49,430 --> 00:02:50,510\nIt's a function of your router.\n\n47\n00:02:50,510 --> 00:02:54,490\nYou router is already dong split horizon,\nit's already doing poison reverse.\n\n48\n00:02:54,490 --> 00:02:56,570\nYou don't have to mess with it.\n\n49\n00:02:56,570 --> 00:02:59,690\nThere's really one little command\nwe can see which is to disable it.\n\n50\n00:02:59,690 --> 00:03:02,550\nBut as far as enabling it,\nthese guys are already running.\n\n51\n00:03:02,550 --> 00:03:05,510\nAnd then, verify,\nhow do you know they're working?\n\n52\n00:03:05,510 --> 00:03:06,260\nWell it's easy.\n\n53\n00:03:06,260 --> 00:03:07,730\nYou don't have a loop.\n\n54\n00:03:07,730 --> 00:03:10,810\nIf you don't have a loop,\nyou know that it's working.\n\n55\n00:03:10,810 --> 00:03:13,430\nSo there's not a whole lot to\nconfigure and verify in these two.\n\n56\n00:03:13,430 --> 00:03:16,330\nAnd what they're really referring to\nis configuring and verifying the tags.\n\n57\n00:03:16,330 --> 00:03:18,390\nThe tags, there's a lot to do there.\n\n58\n00:03:18,390 --> 00:03:20,620\nSo I'm gonna hold off on tags,\nwe'll get to those in a moment.\n\n59\n00:03:21,760 --> 00:03:23,330\nBut split horizon and poison reverse,\n\n60\n00:03:23,330 --> 00:03:26,250\nthese two you guys should have\nlearned about in the CCNA material.\n\n61\n00:03:26,250 --> 00:03:28,040\nBut I know you might have studied for\nthat a while back, so\n\n62\n00:03:28,040 --> 00:03:30,830\nlet's do a little recap on what these are,\nall right?\n\n63\n00:03:30,830 --> 00:03:34,250\nSplit horizon is a very simple idea.\n\n64\n00:03:34,250 --> 00:03:35,660\nIt basically is a rule.\n\n65\n00:03:35,660 --> 00:03:39,440\nIt's not a protocol,\nit's not a mathematical algorithm.\n\n66\n00:03:39,440 --> 00:03:41,510\nIt's just like a guideline, it's a rule.\n\n67\n00:03:41,510 --> 00:03:46,830\nThat tells the router, hey if you\nlearn about a route on one interface,\n\n68\n00:03:46,830 --> 00:03:50,110\nyou should never advertise that\nsame route out the same interface.\n\n69\n00:03:50,110 --> 00:03:50,770\nRight?\n\n70\n00:03:50,770 --> 00:03:53,030\nIt never makes sense to do that.\n\n71\n00:03:53,030 --> 00:03:56,220\nIn fact the only thing that would come out\nof you doing that type of an advertising,\n\n72\n00:03:56,220 --> 00:03:57,930\nit would be to create a loop.\n\n73\n00:03:57,930 --> 00:04:00,260\nIt would create a loop in the network and\nthat would be bad.\n\n74\n00:04:00,260 --> 00:04:05,530\nSo never advertise a route you learned,\nout the same interface you learned it.\n\n75\n00:04:05,530 --> 00:04:06,920\nThat's basically what split-horizon says.\n\n76\n00:04:07,950 --> 00:04:11,390\nThe way I always put this in other\nterms it's kind of like telling a joke.\n\n77\n00:04:11,390 --> 00:04:15,530\nIf I know a joke and I go up to our\ndirector Jason, and I tell him the joke.\n\n78\n00:04:15,530 --> 00:04:16,740\nAnd it's funny, we laugh, right?\n\n79\n00:04:16,740 --> 00:04:17,930\nIt's great.\n\n80\n00:04:17,930 --> 00:04:20,730\nJason can then go and\ntell other people that joke.\n\n81\n00:04:20,730 --> 00:04:21,830\nAnd they would laugh, too, right?\n\n82\n00:04:21,830 --> 00:04:23,310\nWell, assuming it was funny.\n\n83\n00:04:23,310 --> 00:04:26,450\nMost of my jokes aren't, but\nmaybe this one just happened to be.\n\n84\n00:04:26,450 --> 00:04:28,090\nBut what if Jason came and\ntold me the joke?\n\n85\n00:04:29,100 --> 00:04:31,790\nI'm not going to laugh,\nI'm the one who told him the joke.\n\n86\n00:04:31,790 --> 00:04:32,890\nI already know it.\n\n87\n00:04:32,890 --> 00:04:35,210\nIt doesn't make sense to tell me the joke.\n\n88\n00:04:35,210 --> 00:04:36,840\nI already know it.\n\n89\n00:04:36,840 --> 00:04:39,500\nSo split horizon is like the joke police.\n\n90\n00:04:39,500 --> 00:04:43,150\nIt sits there and it says, hey,\nyou just heard this joke from Don.\n\n91\n00:04:43,150 --> 00:04:46,090\nDon't tell Don the joke again, he already\nknows it, that's where it came from.\n\n92\n00:04:47,140 --> 00:04:48,490\nHere's the risk.\n\n93\n00:04:48,490 --> 00:04:53,280\nThe risk is, let's say I advertise\na route, so I'm router one, and\n\n94\n00:04:53,280 --> 00:04:54,980\nI advertise a route to router two.\n\n95\n00:04:54,980 --> 00:04:57,140\nOkay, so\nrouter two just learned this route.\n\n96\n00:04:57,140 --> 00:05:00,420\nAnd then I have some kind of\na failure where I lose the route.\n\n97\n00:05:00,420 --> 00:05:02,460\nAnd I start looking across the network and\nsaying,\n\n98\n00:05:02,460 --> 00:05:05,770\nhey, can somebody out there tell\nme how to get to this network?\n\n99\n00:05:06,780 --> 00:05:11,520\nAnd, that other router, router two, says,\noh yeah Don, here I know how to get to it,\n\n100\n00:05:11,520 --> 00:05:12,820\nI learned it from you.\n\n101\n00:05:12,820 --> 00:05:14,510\nI get it and I say, oh sweet!\n\n102\n00:05:14,510 --> 00:05:17,650\nYou have a way to get there,\nI'll send the traffic to you.\n\n103\n00:05:17,650 --> 00:05:20,630\nBut the other guy can't really get there\nbecause he learned the route from me and\n\n104\n00:05:20,630 --> 00:05:21,940\nI've lost my route.\n\n105\n00:05:21,940 --> 00:05:23,880\nIt's a bad route at that point.\n\n106\n00:05:23,880 --> 00:05:26,530\nAnd that's really the only\nthing that ever comes out\n\n107\n00:05:26,530 --> 00:05:29,630\nof advertising route out the same\ninterface you learned it is a bad route,\n\n108\n00:05:29,630 --> 00:05:35,030\nright, there's no point in doing it so\nCisco routers don't do, right?\n\n109\n00:05:35,030 --> 00:05:38,590\nThey have a rule called split horizon and\nit's turned on by default and\n\n110\n00:05:38,590 --> 00:05:40,266\nit prevents your router from doing that.\n\n111\n00:05:40,266 --> 00:05:46,190\nThere is one scenario where\nyou might want to turn it off.\n\n112\n00:05:46,190 --> 00:05:49,590\nThere's one scenario that I can think\nof where might want to advertise\n\n113\n00:05:49,590 --> 00:05:53,230\na route you learned on an interface\nout the same interface you learned it.\n\n114\n00:05:53,230 --> 00:05:57,840\nAnd that's when you have a point\nto multi-point frame relay link.\n\n115\n00:05:59,060 --> 00:06:00,500\nLet me give you an example.\n\n116\n00:06:00,500 --> 00:06:02,850\nLet me pull up one of my topologies here.\n\n117\n00:06:02,850 --> 00:06:06,140\nI've got a typology sitting\naround here somewhere.\n\n118\n00:06:06,140 --> 00:06:08,870\nIt's actually the typology\nI'm using in this show, so.\n\n119\n00:06:09,930 --> 00:06:12,230\nLet's take this guy for example.\n\n120\n00:06:13,790 --> 00:06:15,850\nAnd actually I need to get on page two.\n\n121\n00:06:15,850 --> 00:06:17,540\nHere, all right.\n\n122\n00:06:17,540 --> 00:06:20,080\nSo I've got a frame relay\nnetwork set up here.\n\n123\n00:06:20,080 --> 00:06:22,323\nI've got a headquarters office, and\n\n124\n00:06:22,323 --> 00:06:27,380\nthe headquarters has links that run to\nBranch 1, Branch 2, and Branch 3, right?\n\n125\n00:06:27,380 --> 00:06:28,670\nIt's these DLCI numbers here.\n\n126\n00:06:28,670 --> 00:06:31,700\nDLCI 102, 103, 104.\n\n127\n00:06:31,700 --> 00:06:35,990\nThese are the guys that are running\nout to the branch offices.\n\n128\n00:06:35,990 --> 00:06:38,840\nWell, a DLCI, that's a virtual circuit.\n\n129\n00:06:38,840 --> 00:06:41,950\nIn frame relay we call them PVC's,\npermanent virtual circuit.\n\n130\n00:06:41,950 --> 00:06:47,580\nSo it's like a fake interface, or a fake\nlink, between me and that destination.\n\n131\n00:06:47,580 --> 00:06:52,530\nSo I've got a PVC across DLCI number\n102 that's running to branch 1.\n\n132\n00:06:52,530 --> 00:06:57,250\nAnd I've got a PVC that's running\nover DLCI 103 to get me to branch 2.\n\n133\n00:06:57,250 --> 00:07:01,590\nAnd I've got a third PVC that's\nrunning over DLCI 104 to get me\n\n134\n00:07:01,590 --> 00:07:03,240\nall the way to branch 3.\n\n135\n00:07:03,240 --> 00:07:06,950\nBut at the end of the day what\nare those DLCIs connected to?\n\n136\n00:07:06,950 --> 00:07:08,300\nOne physical interface.\n\n137\n00:07:08,300 --> 00:07:09,200\nSerial 1/0.\n\n138\n00:07:09,200 --> 00:07:15,284\nIf I have that configured\nas a point to multi-point\n\n139\n00:07:15,284 --> 00:07:19,860\ninterface, then I might learn\na route from branch one.\n\n140\n00:07:19,860 --> 00:07:24,390\nBranch one tells me a route and\nit comes in DLCI 102.\n\n141\n00:07:24,390 --> 00:07:28,620\nAnd then I need to turn around and\nadvertise it out 103 and\n\n142\n00:07:28,620 --> 00:07:32,870\n104 to these other routers,\nthe router for the branch 2 and branch 3.\n\n143\n00:07:32,870 --> 00:07:34,780\nI need to send them the same route.\n\n144\n00:07:34,780 --> 00:07:37,552\nI learned the route on serial 1/0 and\n\n145\n00:07:37,552 --> 00:07:41,333\nI'm advertising it back\nout again on serial 1/0.\n\n146\n00:07:41,333 --> 00:07:46,170\nThat's the exact type of thing\nthat split horizon would stop.\n\n147\n00:07:46,170 --> 00:07:50,594\nNormally it would stop that from working,\nand the route that I learned from branch 1\n\n148\n00:07:50,594 --> 00:07:53,042\nwould never make it to branch 2 and\nbranch 3.\n\n149\n00:07:53,042 --> 00:07:54,650\nNow that might not be a big deal.\n\n150\n00:07:54,650 --> 00:07:58,208\nNormally when we have branches\nyou just do like a default route.\n\n151\n00:07:58,208 --> 00:08:00,296\nAnd that's it, but\nif I need visibility for\n\n152\n00:08:00,296 --> 00:08:04,480\nindividual routes I'm going to need to\noverride the split horizon behavior.\n\n153\n00:08:04,480 --> 00:08:09,420\nAnd, you can turn it off,\nit is on by default on all Cisco routers,\n\n154\n00:08:09,420 --> 00:08:11,880\nwhen you buy a Cisco router,\nSplit Horizon is on by default.\n\n155\n00:08:13,040 --> 00:08:16,270\nIf you're running\nOSPF Split Horizon doesn't matter,\n\n156\n00:08:16,270 --> 00:08:20,270\nOSPF ignores that because with OSPF,\nyou see the whole network so\n\n157\n00:08:20,270 --> 00:08:22,870\nyou don't need Split Horizon\nto help you prevent a loop.\n\n158\n00:08:22,870 --> 00:08:26,632\nSo Split Horizon is really just for\nRIP and EIGRP,\n\n159\n00:08:26,632 --> 00:08:33,440\nmainly EIGRP, so\nif I wanna turn off Split Horizon,\n\n160\n00:08:33,440 --> 00:08:37,260\nI just go to this interface, and\nI can enter a command to turn it off.\n\n161\n00:08:38,520 --> 00:08:41,500\nLet me show you the command, you'll\nprobably never have to use this, but\n\n162\n00:08:41,500 --> 00:08:44,590\njust in case it turns up on\nthe exam I want you to be ready.\n\n163\n00:08:44,590 --> 00:08:48,654\nSo all you do is you go\ninto a serial interface and\n\n164\n00:08:48,654 --> 00:08:53,632\nhere I'll just pretend like\nmy Serial 1/1 is connected\n\n165\n00:08:53,632 --> 00:08:57,796\nto a point to multipoint\nframe relay network, so\n\n166\n00:08:57,796 --> 00:09:04,218\nI get into Serial 1/1 and I'll set it for\nencapsulation frame-relay.\n\n167\n00:09:04,218 --> 00:09:07,444\nSo it's set up for\nframe relay, now I would go and\n\n168\n00:09:07,444 --> 00:09:11,458\nstart to set up my various maps,\nmy frame-relay map ip, and\n\n169\n00:09:11,458 --> 00:09:15,260\nwhoever it is that I was\nconnecting to that was out there.\n\n170\n00:09:16,330 --> 00:09:21,930\nSo maybe I've got like Branch\n2 is out on dlci 103 or\n\n171\n00:09:21,930 --> 00:09:26,160\nwhatever and you start putting in\nthese different maps that you've got\n\n172\n00:09:26,160 --> 00:09:27,960\nto specify how you can get to those guys.\n\n173\n00:09:27,960 --> 00:09:32,320\nSo there's a basic frame relay\nmultipoint configuration, and\n\n174\n00:09:32,320 --> 00:09:35,645\nthen I would just issue this command,\n\n175\n00:09:35,645 --> 00:09:41,440\nno ip split -horizon.\n\n176\n00:09:41,440 --> 00:09:46,269\nIf I was dealing with RIP, the routing\ninformation protocol, or if I only had one\n\n177\n00:09:46,269 --> 00:09:51,097\nEIGRP autonomous system on this router,\nthen that's all I would need to do right\n\n178\n00:09:51,097 --> 00:09:55,090\nthere, no ip split horizon,\nthat turns it off on that interface.\n\n179\n00:09:55,090 --> 00:09:59,876\nIt's still on for all my other interfaces,\nbut it turns off for this one, and\n\n180\n00:09:59,876 --> 00:10:04,590\nnow routes I learn on the interface on\none dlci I'll be able to turn around and\n\n181\n00:10:04,590 --> 00:10:06,700\nadvertise out to the other dlci.\n\n182\n00:10:06,700 --> 00:10:12,220\nif I have more than one EIGRP autonomous\nsystem though, I can expand this command\n\n183\n00:10:12,220 --> 00:10:18,460\nout a little more and\nI can add EIGRP followed by the AS number.\n\n184\n00:10:18,460 --> 00:10:23,350\nSo now I'm turning off Split Horizon just\nfor one of the ASs and not all of them,\n\n185\n00:10:23,350 --> 00:10:25,400\nthe first mail would\nactually get all of them.\n\n186\n00:10:25,400 --> 00:10:29,560\nNow if you're running RIP, RIP doesn't\nhave multiple autonomous systems,\n\n187\n00:10:29,560 --> 00:10:32,750\nI guess you sort of can do that but\nit doesn't really separate it like EIGRP\n\n188\n00:10:32,750 --> 00:10:36,580\nby having an AS number, so\nwe don't need that with RIP.\n\n189\n00:10:36,580 --> 00:10:39,980\nWe would just use this first command,\nbut both of those do the same thing,\n\n190\n00:10:39,980 --> 00:10:42,200\nthey turn off Split Horizon,\n\n191\n00:10:42,200 --> 00:10:44,800\nallowing you to do something that\nwould normally cause routing loops.\n\n192\n00:10:46,040 --> 00:10:50,890\nBut in this scenario, we want that and\nwe make it available, in every other\n\n193\n00:10:50,890 --> 00:10:55,860\nscenario, in Ethernet networks,\nMetro, Metro E, fiber optic, whatever\n\n194\n00:10:55,860 --> 00:10:59,770\nother types of connections, point to point\nlinks, you want Split Horizon turned on,\n\n195\n00:10:59,770 --> 00:11:03,810\nyou never wanna advertise a route back out\nthe same interface that you learned it on.\n\n196\n00:11:03,810 --> 00:11:08,840\nAll right, so that's one loop prevention\nmechanism that's out there, but\n\n197\n00:11:08,840 --> 00:11:13,880\nit's not fool proof, there are some\nproblems that can happen that\n\n198\n00:11:13,880 --> 00:11:18,330\nmake it where we learn our own\nroute back via other methods.\n\n199\n00:11:18,330 --> 00:11:24,091\nSo, for example let me bring up a diagram\nhere, if I've got a real simple network\n\n200\n00:11:24,091 --> 00:11:29,516\nlike this one, router one is connected\nto 4 different networks over here,\n\n201\n00:11:29,516 --> 00:11:33,505\n192.168.1.whatever slash 26 networks,\n\n202\n00:11:33,505 --> 00:11:38,633\nright there's 4 of them,\nrouter 1 advertises that after router 2.\n\n203\n00:11:38,633 --> 00:11:42,483\nAll right, on router 2,\nSplit Horizon kicks in and says,\n\n204\n00:11:42,483 --> 00:11:47,180\nokay when I advertise out these\n192.168.1 networks that I just\n\n205\n00:11:47,180 --> 00:11:51,723\nlearned I'm gonna advertise them\nout E0/1 out to these networks,\n\n206\n00:11:51,723 --> 00:11:56,050\nI'm gonna advertise it out\nE0/2 over to router three.\n\n207\n00:11:56,050 --> 00:12:00,600\nBut I'm not gonna advertise it out e0/0\nbecause that would be going right back to\n\n208\n00:12:00,600 --> 00:12:04,760\nthe guy that just taught me about those\nroutes, I just got them that way,\n\n209\n00:12:04,760 --> 00:12:09,550\ndon't advertise back out that way, Split\nhorizon stops that and I don't get a loop.\n\n210\n00:12:10,860 --> 00:12:11,700\nIf that happened,\n\n211\n00:12:11,700 --> 00:12:15,640\nif the route came out here, router 1\nwould just throw it away, router 1 is\n\n212\n00:12:15,640 --> 00:12:18,710\ngonna throw it away because it's got\na directly connected route, right there.\n\n213\n00:12:18,710 --> 00:12:21,830\nSo, it doesn't really hurt there, does it,\nso you might be thinking to yourself,\n\n214\n00:12:21,830 --> 00:12:26,420\nwell why bother, it doesn't hurt anything,\nwell, what if these networks fail?\n\n215\n00:12:26,420 --> 00:12:32,670\nIf these networks fail, router 2 is still\nadvertising the 192.168.1 networks,\n\n216\n00:12:32,670 --> 00:12:37,060\nrouter 1 might say I can't get to that\nnetwork anymore, but router 2 still\n\n217\n00:12:37,060 --> 00:12:42,460\ncan and it will grab router 2's routes and\npop them into it's routing table.\n\n218\n00:12:42,460 --> 00:12:47,380\nWell router 1 is advertising back to\nrouter 2, so router 2 see's those routes\n\n219\n00:12:47,380 --> 00:12:50,960\nagain, but with a slightly higher\nmetric because the extra hop or\n\n220\n00:12:50,960 --> 00:12:55,390\nthe extra bandwidth and delay, it's\nsees that and it increases its metric.\n\n221\n00:12:55,390 --> 00:12:58,210\nAnd router 1 sees that and\nincreases its metric, and\n\n222\n00:12:58,210 --> 00:13:01,880\nit goes through this cycle, it just keeps\ngetting worse and worse and worse, so\n\n223\n00:13:01,880 --> 00:13:06,780\nthey raise that metric up and up and up,\nand so that loop becomes a real problem.\n\n224\n00:13:07,960 --> 00:13:10,975\nThat scenario is It's called count\nto infinity, Count to infinity,\n\n225\n00:13:10,975 --> 00:13:14,185\nbecause the metric keeps going up, and\nup, and up, and up like that, over and\n\n226\n00:13:14,185 --> 00:13:19,135\nover again until the metric hits the\nmaximum metric of the routing protocol.\n\n227\n00:13:19,135 --> 00:13:21,675\nEvery routing protocol\nhas a maximum metric, and\n\n228\n00:13:21,675 --> 00:13:25,875\nwith RIP the maximum metric is 16,\nIf you have a route that\n\n229\n00:13:25,875 --> 00:13:31,170\nhas more than 16 ops It's considered\nunreachable and RIP throws it out, right?\n\n230\n00:13:31,170 --> 00:13:36,430\nEIGRP has a maximum metric which I can't\nrecall offhand, it's like two trillion and\n\n231\n00:13:36,430 --> 00:13:40,000\nsomething, it's a really high number\nbecause remember that RIP uses the results\n\n232\n00:13:40,000 --> 00:13:44,600\nof the dual formula to create its metric\nand that can be a pretty big number.\n\n233\n00:13:44,600 --> 00:13:48,160\nSo it has a maximum metric though,\ntoo, so eventually it reaches that and\n\n234\n00:13:48,160 --> 00:13:52,230\nit throws the route out, that doesn't\nreally count as loop prevention though,\n\n235\n00:13:52,230 --> 00:13:56,380\nit does ultimately prevent the loop, but\nit's not truly loop prevention because\n\n236\n00:13:56,380 --> 00:14:00,860\nthe loop exists all the way\nup until you hit that metric.\n\n237\n00:14:00,860 --> 00:14:04,210\nSo it's really just stopping from\nthe loop from staying around,\n\n238\n00:14:04,210 --> 00:14:06,790\nit's not preventing it from\nhappening in the first place,\n\n239\n00:14:06,790 --> 00:14:10,530\nSplit horizon prevents it from\nhappening in the first place.\n\n240\n00:14:10,530 --> 00:14:14,590\nThat whole scenario of counter infinity\nthat never occurs if you've got split\n\n241\n00:14:14,590 --> 00:14:20,880\nhorizon, now just in case you\ndon't have split horizon or\n\n242\n00:14:20,880 --> 00:14:24,820\nyou've disabled it or whatever,\nthere's actually another safety mechanism\n\n243\n00:14:24,820 --> 00:14:27,530\nthat kicks in that prevents the whole\ncount to infinity mess also.\n\n244\n00:14:28,650 --> 00:14:32,550\nThe other safety mechanism is\nwhat's called route poisoning or\n\n245\n00:14:32,550 --> 00:14:35,510\na poison reverse,\nyou'll hear different names for\n\n246\n00:14:35,510 --> 00:14:37,400\nit, poison reverse is\nthe official name of the process.\n\n247\n00:14:38,490 --> 00:14:43,100\nPoison reverse is a neat little system,\nif you were watching some of our earlier\n\n248\n00:14:43,100 --> 00:14:48,810\nshows, we were using RIP, and in RIP, if\na network fails, if a network goes offline\n\n249\n00:14:48,810 --> 00:14:52,680\nfor some reason, RIP uses various timers,\nit's got all of these timers in replace.\n\n250\n00:14:52,680 --> 00:14:53,930\nLet me show you the default timers,\n\n251\n00:14:53,930 --> 00:14:58,410\nI've got a router running RIP here in\nthe background, so here's a router\n\n252\n00:14:58,410 --> 00:15:01,660\nthat's running RIP, and I haven't\nchanged any of the defaults on this one,\n\n253\n00:15:01,660 --> 00:15:04,540\nit's just running standard RIP\nwith all of it's defaults.\n\n254\n00:15:05,540 --> 00:15:09,690\nAnd you'll see this line right here,\nit says that if a route fails,\n\n255\n00:15:09,690 --> 00:15:15,830\nit will be considered invalid after 180\nseconds, that means it's going to wait\n\n256\n00:15:15,830 --> 00:15:20,740\nthree minutes on a failed route before\nit decides that it's actually failed, so\n\n257\n00:15:20,740 --> 00:15:23,080\nafter three minutes it'll say hey\nthis route's not valid anymore.\n\n258\n00:15:24,410 --> 00:15:26,050\nAnd then what does it do?\n\n259\n00:15:26,050 --> 00:15:30,447\nIt holds it down for 180 seconds,\nit holds it down for three more minutes,\n\n260\n00:15:30,447 --> 00:15:33,424\nit says okay, it's invalid,\nbut I'm gonna wait,\n\n261\n00:15:33,424 --> 00:15:37,500\njust in case it comes back up,\nI'm gonna wait another 180 seconds.\n\n262\n00:15:37,500 --> 00:15:42,219\nSo, three minutes for invalid, three more\nminutes for hold down, that's six minutes,\n\n263\n00:15:42,219 --> 00:15:45,942\nand then, it says, okay, now it's\ndefinitely bad, I held it down for\n\n264\n00:15:45,942 --> 00:15:50,600\nsix minutes, it's definitely bad,\nlet's get it out of the routing table.\n\n265\n00:15:50,600 --> 00:15:53,924\nAnd then it says, okay I'm gonna wait 240\n\n266\n00:15:53,924 --> 00:15:58,917\nseconds before I actually remove\nit from the routing table, okay.\n\n267\n00:15:58,917 --> 00:16:00,833\nAnd then it pulls it\nfrom the routing table.\n\n268\n00:16:00,833 --> 00:16:05,010\nWell if we add all of that up,\nthat's a lot of time, isn't it?\n\n269\n00:16:05,010 --> 00:16:08,070\nRight, that's, oh gee,\nwhat does that add up to?\n\n270\n00:16:08,070 --> 00:16:08,980\nTen minutes, right?\n\n271\n00:16:08,980 --> 00:16:13,690\nSo ten minutes before it actually yanks\nthat route out of the routing table.\n\n272\n00:16:13,690 --> 00:16:19,320\nDuring that time, if we still have\nthe route, and the router that\n\n273\n00:16:19,320 --> 00:16:24,520\noriginally generated the route loses\nits route, right, it's lost the route.\n\n274\n00:16:24,520 --> 00:16:26,820\nWe still have it cuz we're\nwaiting ten minutes.\n\n275\n00:16:26,820 --> 00:16:29,600\nWe can potentially teach\nthem about their own route,\n\n276\n00:16:29,600 --> 00:16:31,675\ncuz they don't have the route anymore,\nwe do.\n\n277\n00:16:31,675 --> 00:16:32,715\nAll right?\n\n278\n00:16:32,715 --> 00:16:35,065\nWell, split-horizon will fix that.\n\n279\n00:16:35,065 --> 00:16:37,615\nBut if I've disabled split-horizon,\n\n280\n00:16:37,615 --> 00:16:40,345\nthen I might teach them\ntheir own route back again.\n\n281\n00:16:40,345 --> 00:16:41,965\nFortunately, when we're in hold down,\n\n282\n00:16:41,965 --> 00:16:45,595\nif we're holding it down we'll know about\nthe route but we won't advertise it.\n\n283\n00:16:45,595 --> 00:16:47,025\nBut let's pretend that we did.\n\n284\n00:16:47,025 --> 00:16:49,050\nLet's say that we were advertising it.\n\n285\n00:16:49,050 --> 00:16:55,040\nWhat poison reverse says is,\nwhen a router loses its access to a route,\n\n286\n00:16:55,040 --> 00:16:59,210\nso if I go back to my diagram,\nwherever my diagram is, here.\n\n287\n00:16:59,210 --> 00:17:04,320\nIf Router 1 loses its connection to\nthese 192.168.1 networks, right?\n\n288\n00:17:04,320 --> 00:17:05,360\nSo it loses it, for\n\n289\n00:17:05,360 --> 00:17:09,410\nwhatever reason those networks drop off,\nand that's the end of that.\n\n290\n00:17:09,410 --> 00:17:14,470\nWell, when that happens,\nit will then take that route, and\n\n291\n00:17:14,470 --> 00:17:16,940\ninstead of just removing the route\nfrom its own routing table,\n\n292\n00:17:16,940 --> 00:17:19,740\ninstead of just yanking it out,\nit'll take the route and\n\n293\n00:17:19,740 --> 00:17:24,360\nit'll bump the metric up to\nthe highest possible value, all right?\n\n294\n00:17:24,360 --> 00:17:28,420\nSo, if it's running RIP, and\nit loses the 192.168.1 networks,\n\n295\n00:17:28,420 --> 00:17:33,620\ntheir metric might have only been a 1,\nright, one hop away.\n\n296\n00:17:33,620 --> 00:17:36,620\nIt'll then take it and\nsay I'm gonna make that metric 16,\n\n297\n00:17:36,620 --> 00:17:39,450\nand advertise it to the neighbors.\n\n298\n00:17:39,450 --> 00:17:43,060\nNow when the neighbors get it, they get it\nwith this maximum metric, and they say,\n\n299\n00:17:43,060 --> 00:17:44,220\noh, that's unreachable.\n\n300\n00:17:44,220 --> 00:17:46,690\nLet me take it out of my\nrouting table right now.\n\n301\n00:17:47,910 --> 00:17:49,500\nI'm not gonna wait ten minutes.\n\n302\n00:17:49,500 --> 00:17:51,140\nI'm not gonna wait 180 seconds.\n\n303\n00:17:51,140 --> 00:17:53,680\nI'm gonna take it out right\nnow cuz that metric is so\n\n304\n00:17:53,680 --> 00:17:56,580\nbad we wanna get it out of there.\n\n305\n00:17:56,580 --> 00:17:58,590\nThat's called poison reverse.\n\n306\n00:17:58,590 --> 00:17:59,650\nWe're poisoning the route.\n\n307\n00:17:59,650 --> 00:18:01,050\nWe're sending that message out and\n\n308\n00:18:01,050 --> 00:18:04,720\nsaying, here it's got a maximum metric,\nyank it out of your table.\n\n309\n00:18:04,720 --> 00:18:07,450\nAnd the opposite happens, too.\n\n310\n00:18:07,450 --> 00:18:10,110\nIs that when Router 2 gets\nthat poisoned route and\n\n311\n00:18:10,110 --> 00:18:15,320\nyanks it out of the routing table,\nit turns around and poisons the route too.\n\n312\n00:18:15,320 --> 00:18:19,420\nAnd it poisons it forward to Router 3,\nand it poisons it reverse,\n\n313\n00:18:19,420 --> 00:18:24,030\nback to Router 1, just to make sure\nRouter 1's not counting on us.\n\n314\n00:18:24,030 --> 00:18:27,540\nAnd we can reach back to Router 1 and\nsay, this is a bad route that I've got.\n\n315\n00:18:27,540 --> 00:18:30,940\nJust in case you learned it from me\nsomehow, I'm gonna poison it in reverse.\n\n316\n00:18:32,080 --> 00:18:36,142\nSo now everybody knows that route is bad,\nit comes out of routing table.\n\n317\n00:18:36,142 --> 00:18:40,367\nAnd if there is another route out there,\nit'll propagate and we'll learn it.\n\n318\n00:18:40,367 --> 00:18:43,584\nBut if there's no other route,\nthe route just comes out of the table,\n\n319\n00:18:43,584 --> 00:18:45,580\nand that's the end of it, okay.\n\n320\n00:18:45,580 --> 00:18:47,090\nThat's called poison reverse, and\n\n321\n00:18:47,090 --> 00:18:50,290\nit's another mechanism that's\nautomatically running.\n\n322\n00:18:50,290 --> 00:18:53,240\nIt's configured,\nCisco's got it running in the background.\n\n323\n00:18:53,240 --> 00:18:56,650\nWe don't have to mess with it,\nit does its thing and that's it.\n\n324\n00:18:57,770 --> 00:19:01,790\nNow, poison reverse,\nas far as I'm aware, cannot be disabled.\n\n325\n00:19:01,790 --> 00:19:03,630\nThere is no configuration for it.\n\n326\n00:19:03,630 --> 00:19:05,360\nIt's a function of Cisco routers.\n\n327\n00:19:05,360 --> 00:19:09,690\nThey've built it in there, and\nit works for all of the routing protocols.\n\n328\n00:19:09,690 --> 00:19:12,888\nOSPF doesn't need it, but\nit actually has that functionality.\n\n329\n00:19:12,888 --> 00:19:15,790\nRIP and EIGRP do need it,\nand they've got it too.\n\n330\n00:19:17,030 --> 00:19:21,480\nSo if you think about it there's really\na lot of loop prevention mechanisms that\n\n331\n00:19:21,480 --> 00:19:25,215\nare built into Cisco routers that\nwe don't even have to configure.\n\n332\n00:19:25,215 --> 00:19:29,730\nSplit-horizon is just a rule of behavior,\n\n333\n00:19:29,730 --> 00:19:32,080\ndo not advertize a route out\nthe same interface you learned it.\n\n334\n00:19:33,150 --> 00:19:37,010\nPoison reverse is an action\nthat's taken when a route fails.\n\n335\n00:19:37,010 --> 00:19:40,850\nWhen a route fails, we immediately spike\nits metric up to the highest value and\n\n336\n00:19:40,850 --> 00:19:45,080\npropagate that to the neighbors so\nthat they know it failed too, all right.\n\n337\n00:19:45,080 --> 00:19:47,710\nAnd then lastly, the maximum metric.\n\n338\n00:19:47,710 --> 00:19:50,660\nIf count to infinity does happen,\nif the metric starts going up and up and\n\n339\n00:19:50,660 --> 00:19:52,810\nup, we have a maximum, a ceiling.\n\n340\n00:19:52,810 --> 00:19:55,580\nAnd when we hit that maximum,\nthat's the end of it, and\n\n341\n00:19:55,580 --> 00:19:57,140\nthe route comes out of the routing table,\nright?\n\n342\n00:19:57,140 --> 00:19:59,170\nSo three really cool things.\n\n343\n00:19:59,170 --> 00:20:03,350\nOh, one thing I do wanna mention on\npoison reverse that I forgot to mention.\n\n344\n00:20:03,350 --> 00:20:06,900\nPoison reverse does require\na graceful failure.\n\n345\n00:20:06,900 --> 00:20:09,350\nSo that would be something\nlike an interface failure.\n\n346\n00:20:09,350 --> 00:20:14,588\nIf we look at my diagram here, on Router\n1, when I said it loses the 192.168.1\n\n347\n00:20:14,588 --> 00:20:19,390\nnetworks, well let's say that e0/1,\nthat interface is what failed.\n\n348\n00:20:19,390 --> 00:20:22,330\nIf that interface fails,\nRouter 1 is still up.\n\n349\n00:20:22,330 --> 00:20:25,670\nIt's still up and functional,\nit's just one of its interfaces is dead.\n\n350\n00:20:25,670 --> 00:20:29,740\nAnd so it can communicate out\ne0/0 to these other routers, and\n\n351\n00:20:29,740 --> 00:20:31,110\npoison the route, it works great.\n\n352\n00:20:32,190 --> 00:20:34,220\nBut, what if Router 1 lost power?\n\n353\n00:20:35,360 --> 00:20:39,180\nSomebody tripped over the power cable or\nthat building had a power outage.\n\n354\n00:20:39,180 --> 00:20:41,090\nWell, Router 1 powers off.\n\n355\n00:20:41,090 --> 00:20:43,690\nDid it have time to poison the route?\n\n356\n00:20:43,690 --> 00:20:48,260\nNo, it didn't, it went down,\nit doesn't have time to poison the route.\n\n357\n00:20:48,260 --> 00:20:53,878\nIf this was a true point-to-point link,\nand the link to Router 2 went down also,\n\n358\n00:20:53,878 --> 00:20:58,170\nthen Router 2 would know, oh I need to\npoison these routes, and it would do it.\n\n359\n00:20:58,170 --> 00:21:02,540\nBut usually there's a switch or\nsomething in between these routers, right.\n\n360\n00:21:02,540 --> 00:21:07,750\nAnd that means when Router 1 powers off,\nRouter 2's interfaces are still up.\n\n361\n00:21:07,750 --> 00:21:10,150\nIt doesn't actually know\nRouter 1 went down.\n\n362\n00:21:10,150 --> 00:21:14,150\nIt's just sitting there saying, boy,\nI haven't gotten any updates from Router 1\n\n363\n00:21:14,150 --> 00:21:16,460\nin a little while,\nI wonder what's up over there.\n\n364\n00:21:16,460 --> 00:21:17,690\nBut, I guess I'll wait.\n\n365\n00:21:17,690 --> 00:21:20,430\nI'll wait for this 180 seconds,\nand then I'll say all right,\n\n366\n00:21:20,430 --> 00:21:22,370\nwell the routes are probably invalid.\n\n367\n00:21:22,370 --> 00:21:25,060\nLet me wait another 180 seconds\nto see if they come up.\n\n368\n00:21:25,060 --> 00:21:26,951\nAnd then it says, all right, they're bad,\nwe'll go ahead and flush them.\n\n369\n00:21:26,951 --> 00:21:29,170\nThat whole process happens.\n\n370\n00:21:29,170 --> 00:21:33,270\nSo, in order for poison reverse\nto do its job, we do have to have\n\n371\n00:21:33,270 --> 00:21:37,270\na graceful failure, one that doesn't\nactually take the router offline.\n\n372\n00:21:37,270 --> 00:21:40,070\nOne where we can still communicate\nto the other routers to let the know\n\n373\n00:21:40,070 --> 00:21:41,390\nabout the failure.\n\n374\n00:21:41,390 --> 00:21:42,190\nKey thing to remember there.\n\n375\n00:21:43,360 --> 00:21:48,050\nAll right, so those are the primary loop\nprevention mechanisms that are built into\n\n376\n00:21:48,050 --> 00:21:48,989\nCisco routers.\n\n377\n00:21:48,989 --> 00:21:52,602\nAnd for the majority of customers\nthat are out there, for\n\n378\n00:21:52,602 --> 00:21:57,290\nthe majority of technicians like you guys,\nthose tools are all you need.\n\n379\n00:21:57,290 --> 00:22:02,940\nOSPF draws a full network map so it spots\nloops and prevents them on its own.\n\n380\n00:22:02,940 --> 00:22:05,290\nIt just doesn't happen, all right?\n\n381\n00:22:05,290 --> 00:22:07,600\nMetrics are another way\nthat we prevent loops.\n\n382\n00:22:07,600 --> 00:22:09,510\nIf we learn our own route back,\n\n383\n00:22:09,510 --> 00:22:11,900\nwe'll usually have a higher\nmetric on it than what we had.\n\n384\n00:22:11,900 --> 00:22:13,410\nAnd so, we know not to use it.\n\n385\n00:22:13,410 --> 00:22:16,030\nSo, loops like that really fix themselves.\n\n386\n00:22:16,030 --> 00:22:20,190\nPoison reverse, split-horizon,\nmaximum metrics, those all help too.\n\n387\n00:22:20,190 --> 00:22:23,380\nAll these are different components\nthat go into loop prevention.\n\n388\n00:22:23,380 --> 00:22:26,770\nAnd the main thing they all have in common\nis that we don't have to configure them.\n\n389\n00:22:26,770 --> 00:22:28,835\nCisco has already put those in place for\nus.\n\n390\n00:22:28,835 --> 00:22:33,167\nBut there's one scenario\nthat none of those rules,\n\n391\n00:22:33,167 --> 00:22:37,350\nor guidelines or whatever, can help with.\n\n392\n00:22:37,350 --> 00:22:42,780\nAnd that's routing loops caused\nby route redistribution.\n\n393\n00:22:42,780 --> 00:22:47,450\nRoute redistribution destroys a lot\nof information about a route.\n\n394\n00:22:47,450 --> 00:22:52,060\nYou lose where it came from,\nyou lose what it's original metric was.\n\n395\n00:22:52,060 --> 00:22:56,100\nYou lose so\nmuch information about that route that\n\n396\n00:22:56,100 --> 00:23:00,970\nit's very difficult to tell the difference\nbetween the route that you advertised and\n\n397\n00:23:00,970 --> 00:23:03,430\nyour own route coming back to you again.\n\n398\n00:23:03,430 --> 00:23:06,840\nThe route coming back to you again\nmight even be better than the route you\n\n399\n00:23:06,840 --> 00:23:08,420\nadvertised in the first place.\n\n400\n00:23:08,420 --> 00:23:11,400\nThat's a real problem with\nroute redistribution.\n\n401\n00:23:11,400 --> 00:23:15,460\nAnd so whenever you're redistributing\nroutes from one protocol to another\n\n402\n00:23:15,460 --> 00:23:20,560\nprotocol, you've gotta take some\nextra steps to be safe about that,\n\n403\n00:23:20,560 --> 00:23:22,738\nand make sure you don't cause problems.\n\n404\n00:23:22,738 --> 00:23:26,240\nWell, if you've managed\nyour metrics properly,\n\n405\n00:23:26,240 --> 00:23:28,210\nyou probably don't have\nto worry about this.\n\n406\n00:23:28,210 --> 00:23:32,610\nBut it's so easy to make a mistake\nthat Cisco introduced a really neat\n\n407\n00:23:32,610 --> 00:23:36,310\ntechnology to assist with this, to ensure\nthat no matter what your metrics are,\n\n408\n00:23:36,310 --> 00:23:39,780\nyou can prevent introducing a loop\nwhen you do redistribution, all right?\n\n409\n00:23:39,780 --> 00:23:42,860\nAnd that technology is\ncalled route tagging.\n\n410\n00:23:42,860 --> 00:23:47,030\nRoute tagging is sticking a little bit of\nadditional information onto those routes\n\n411\n00:23:47,030 --> 00:23:51,160\nso that even after it's redistributed, we\ncan still tell where that route came from.\n\n412\n00:23:51,160 --> 00:23:53,250\nOr we can tell what that\nroute is all about.\n\n413\n00:23:53,250 --> 00:23:54,246\nAll right, so it's easy for\n\n414\n00:23:54,246 --> 00:23:56,333\nus to kind of jump in there and\nfigure that information out.\n\n415\n00:23:56,333 --> 00:23:57,667\nIt's really neat.\n\n416\n00:23:57,667 --> 00:23:59,375\nIt's very, very misunderstood.\n\n417\n00:23:59,375 --> 00:24:02,500\nA lot of people have problems with tags,\nand they don't use them properly.\n\n418\n00:24:02,500 --> 00:24:07,320\nSo I wanna take some time, and show you\nguys a scenario where I inject a loop.\n\n419\n00:24:07,320 --> 00:24:10,580\nAnd then we'll use route tags to go in and\nfix the problem,\n\n420\n00:24:10,580 --> 00:24:14,360\nto prevent that loop from happening\nin the first place, all right.\n\n421\n00:24:14,360 --> 00:24:17,420\nBut, looking at the clock,\nI'm a little low on time on this segment.\n\n422\n00:24:17,420 --> 00:24:18,610\nSo let's stop here and take a break.\n\n423\n00:24:18,610 --> 00:24:21,455\nAnd when we get back,\nwe'll take a look at route tagging, and\n\n424\n00:24:21,455 --> 00:24:24,823\nget things kinda thrown into place,\nand have some good times with that.\n\n425\n00:24:24,823 --> 00:24:26,957\nSo stay tuned,\nwe'll be back in just a moment.\n\n426\n00:24:26,957 --> 00:24:33,827\n[MUSIC]\n\n427\n00:24:33,827 --> 00:24:35,785\nAll right, welcome back everybody.\n\n428\n00:24:35,785 --> 00:24:38,335\nSo let's talk about route tags.\n\n429\n00:24:38,335 --> 00:24:42,725\nFirst off, I wanna start by showing you\nguys an example of how things can go bad.\n\n430\n00:24:42,725 --> 00:24:45,945\nAnd I wanna show you on a diagram first\nand then I'll show you on actual routers,\n\n431\n00:24:45,945 --> 00:24:47,165\nhow things can go bad.\n\n432\n00:24:47,165 --> 00:24:52,395\nAnd then we'll get a chance to see how\nto fix it using route tags, all right.\n\n433\n00:24:52,395 --> 00:24:53,785\nNow let's say that I had a network.\n\n434\n00:24:53,785 --> 00:24:56,520\nAnd just I'm gonna show you\nthis topology right here.\n\n435\n00:24:56,520 --> 00:24:58,460\nIt looks a little complex,\nit's really not that bad,\n\n436\n00:24:58,460 --> 00:24:59,880\nlet me kind of lay out what we've got.\n\n437\n00:24:59,880 --> 00:25:03,710\nI've got five routers,\nR1, R2, R3, R4 and R5.\n\n438\n00:25:04,920 --> 00:25:08,390\nEach router has a class C\nnetwork attached to it right?\n\n439\n00:25:08,390 --> 00:25:11,970\nSo you'll see 192.168 dot, and\nthen it's just the router number.\n\n440\n00:25:11,970 --> 00:25:17,170\nSo Router 1 is connected\nto 192.168.1.0/24.\n\n441\n00:25:17,170 --> 00:25:22,463\nAnd Router 5 is connected\nto 192.160.5.0/24.\n\n442\n00:25:22,463 --> 00:25:25,620\nSo those are the five networks\nwhere all of my work stations are.\n\n443\n00:25:25,620 --> 00:25:27,730\nSo whatever this company is,\n\n444\n00:25:27,730 --> 00:25:30,850\nthey've got work stations spread\nacross these five different networks.\n\n445\n00:25:30,850 --> 00:25:35,010\nNow, I'm in the process\nof doing a migration.\n\n446\n00:25:35,010 --> 00:25:40,520\nI'm trying to migrate my network\naway from OSPF and into EIGRP.\n\n447\n00:25:40,520 --> 00:25:42,650\nSo EIGRP is gonna be my new protocol.\n\n448\n00:25:42,650 --> 00:25:45,390\nThat's what I want to run across\nall my routers, all right.\n\n449\n00:25:45,390 --> 00:25:48,290\nSo I've already converted\nsome of my routers over.\n\n450\n00:25:48,290 --> 00:25:53,115\nRouter 1 is 100% in EIGRP\nautonomous system one and\n\n451\n00:25:53,115 --> 00:25:57,070\nRouter 2 is in autonomous system one.\n\n452\n00:25:57,070 --> 00:26:00,582\nAnd Router 3 and Router 4 each have\ninterfaces in autonomous system one,\n\n453\n00:26:00,582 --> 00:26:01,150\nall right.\n\n454\n00:26:02,200 --> 00:26:04,820\nBut Router 3 and\nRouter 4 are border routers.\n\n455\n00:26:04,820 --> 00:26:09,520\nThey're actually sitting on\nthe border between EIGRP and OSPF.\n\n456\n00:26:09,520 --> 00:26:13,480\nSo Router 3 and Router r also have\ninterfaces in OSPF area zero.\n\n457\n00:26:13,480 --> 00:26:17,080\nAnd then on the right, Router 5,\nI haven't gotten to that guy yet, and\n\n458\n00:26:17,080 --> 00:26:19,170\nso he's still running OSPF.\n\n459\n00:26:19,170 --> 00:26:20,590\nAll right, he's 100% OSPF.\n\n460\n00:26:21,840 --> 00:26:24,490\nNow, I need to ensure\n\n461\n00:26:24,490 --> 00:26:29,060\nthat all of my workstations can still get\nto all the other workstations while I'm in\n\n462\n00:26:29,060 --> 00:26:30,460\nthe process of doing this migration,\nall right.\n\n463\n00:26:31,620 --> 00:26:35,130\nAnd so, what are the ways that I can\nguarantee that's going to happen?\n\n464\n00:26:35,130 --> 00:26:37,460\nWell, method one would be to\nkill one of these protocols and\n\n465\n00:26:37,460 --> 00:26:39,390\njust go all in on the other.\n\n466\n00:26:39,390 --> 00:26:43,511\nBut if there's something that's slowing me\ndown or stopping me from being able to do\n\n467\n00:26:43,511 --> 00:26:46,832\nthat, I can use route redistribution\nto solve my problem, right.\n\n468\n00:26:46,832 --> 00:26:50,291\nI can redistribute EIGRP into OSPF and\n\n469\n00:26:50,291 --> 00:26:55,180\nI can redistribute OSPF back into EIGRP,\nall right.\n\n470\n00:26:55,180 --> 00:26:57,190\nWe saw that in the redistribution episode.\n\n471\n00:26:57,190 --> 00:26:58,670\nIf you guys have watched\nthat one you'll remember.\n\n472\n00:26:58,670 --> 00:27:02,550\nActually, in that one\nwe used this topology.\n\n473\n00:27:02,550 --> 00:27:06,100\nAnd in this topology, redistribution\nreally can't create any loops.\n\n474\n00:27:06,100 --> 00:27:10,720\nThe reason being, there's really just one\nway in and out between the two protocols.\n\n475\n00:27:10,720 --> 00:27:13,880\nSee, I've got OSPF on the left and\nEIGRP on the right.\n\n476\n00:27:13,880 --> 00:27:15,810\nThere's no real way to make a loop here.\n\n477\n00:27:15,810 --> 00:27:20,730\nIf I redistribute OSPF into EIGRP,\nand I turn around and\n\n478\n00:27:20,730 --> 00:27:22,570\nredistribute EIGRP into OSPF,\n\n479\n00:27:24,050 --> 00:27:29,010\none router is not allowed to\nredistribute the same route twice.\n\n480\n00:27:29,010 --> 00:27:33,100\nI can't take a route from OSPF,\nstick it in EIGRP and then turn around and\n\n481\n00:27:33,100 --> 00:27:35,060\nstick it from EIGRP into something else,\nright.\n\n482\n00:27:35,060 --> 00:27:36,580\nIt won't let me do that.\n\n483\n00:27:36,580 --> 00:27:37,660\nAnd the reason is,\n\n484\n00:27:37,660 --> 00:27:42,530\nyou can only redistribute routes\nthat are in your routing table.\n\n485\n00:27:42,530 --> 00:27:45,190\nThey've got to be the active route.\n\n486\n00:27:45,190 --> 00:27:50,280\nAnd so if Router 2 knows the route from\nOSPF and it knows the route from EIGRP,\n\n487\n00:27:50,280 --> 00:27:51,770\nwhat's it gonna do?\n\n488\n00:27:51,770 --> 00:27:57,430\nWell, EIGRP has the lower administrative\ndistance, at an admin distance of 90.\n\n489\n00:27:57,430 --> 00:28:00,100\nOSPF has a higher admin distance of 110.\n\n490\n00:28:00,100 --> 00:28:02,520\nSo it'll pick the EIGRP route.\n\n491\n00:28:02,520 --> 00:28:04,960\nThat's the one that will make\nit into the routing table.\n\n492\n00:28:04,960 --> 00:28:11,560\nBut, if I redistribute from OSPF to EIGRP,\nthe admin distance isn't 90.\n\n493\n00:28:11,560 --> 00:28:15,130\nIt'll be an EIGRP external route.\n\n494\n00:28:15,130 --> 00:28:19,560\nAnd EIGRP external routes\nhave admin distance of 170.\n\n495\n00:28:19,560 --> 00:28:23,950\nThat 170, that's higher than OSPF's 110,\nso I'll redistribute.\n\n496\n00:28:23,950 --> 00:28:27,770\nBut the OSPF route will\nstay in my routing table.\n\n497\n00:28:27,770 --> 00:28:31,720\nAnd so, even though I'm redistributing\nfrom EIGRP back to OSPF.\n\n498\n00:28:31,720 --> 00:28:35,580\nThe EIGRP version of my route is\nnot active in the routing table\n\n499\n00:28:35,580 --> 00:28:40,640\nbecause of the higher administrative\ndistance, and it gets thrown out.\n\n500\n00:28:40,640 --> 00:28:43,300\nIt doesn't get redistributed,\nI don't have a loop.\n\n501\n00:28:43,300 --> 00:28:47,200\nSo when we did the route redistribution\nepisode, this is the topology we used, and\n\n502\n00:28:47,200 --> 00:28:51,990\nI didn't mention loops because they don't\nhappen in that type of environment.\n\n503\n00:28:51,990 --> 00:28:55,620\nBut, look at the topology I've got now.\n\n504\n00:28:55,620 --> 00:29:00,240\nOn this one, I have two ways in\nbetween the networks, right.\n\n505\n00:29:00,240 --> 00:29:05,470\nThere's two different ways I can\npass between OSPF and EIGRP.\n\n506\n00:29:05,470 --> 00:29:09,160\nI can pass through Router\n3 to get over to OSPF.\n\n507\n00:29:09,160 --> 00:29:12,710\nAnd I can come back through\nRouter 4 back into EIGRP.\n\n508\n00:29:12,710 --> 00:29:14,390\nThere's two different ways.\n\n509\n00:29:14,390 --> 00:29:17,060\nAnd that opens up some\ninteresting problems.\n\n510\n00:29:17,060 --> 00:29:22,410\nThe other thing that I've got is EIGRP\non the left and OSPF on the right.\n\n511\n00:29:22,410 --> 00:29:24,870\nSo it's kind of like flipped around\nfrom the model the other day,\n\n512\n00:29:24,870 --> 00:29:27,780\nwhere I had OSPF on one side,\nnow it's on the other, all right.\n\n513\n00:29:28,880 --> 00:29:35,200\nIn this scenario, it is possible\nthat I could advertise a route out,\n\n514\n00:29:35,200 --> 00:29:39,670\nthe route could pass over to\nthe other side, over to OSPF, and\n\n515\n00:29:39,670 --> 00:29:43,880\npotentially come back to me like this,\nright.\n\n516\n00:29:43,880 --> 00:29:48,820\nComing back along, and here see how\nI'm redistributing RIP to OSPF here?\n\n517\n00:29:48,820 --> 00:29:51,150\nAnd redistributing OSPF back to RIP.\n\n518\n00:29:51,150 --> 00:29:54,230\nOr, you know, actually, well,\nthe example's the same right?\n\n519\n00:29:54,230 --> 00:29:56,430\nSo I've got RIP and OSPF in this example.\n\n520\n00:29:56,430 --> 00:30:01,840\nWhen we redistribute, the route comes\nout our router, goes across Router 2,\n\n521\n00:30:01,840 --> 00:30:03,680\nup to Router 3, and over into OSPF.\n\n522\n00:30:04,790 --> 00:30:07,460\nOver here in OSPF,\nit comes back to Router 4.\n\n523\n00:30:07,460 --> 00:30:11,830\nAnd if Router 4 doesn't have it's own way\nto get to that other network, if it's not\n\n524\n00:30:11,830 --> 00:30:16,080\nin the routing table, then we might bring\nit and advertise it right back into this\n\n525\n00:30:16,080 --> 00:30:20,260\nRIP environment, or back into this EIGRP\nenvironment, or whatever it is, right.\n\n526\n00:30:20,260 --> 00:30:22,660\nI'm allowing the route to come back in,\nand\n\n527\n00:30:22,660 --> 00:30:26,370\nit's not something that split\nhorizon can protect from, right.\n\n528\n00:30:26,370 --> 00:30:29,370\nSplit horizon says, here on Router 3,\n\n529\n00:30:29,370 --> 00:30:33,920\nif I learn a route via one interface don't\nadvertise it back out the same interface.\n\n530\n00:30:33,920 --> 00:30:36,380\nThat's how Router 3 doesn't make a loop.\n\n531\n00:30:36,380 --> 00:30:41,060\nBut here, Router 4 learns\nthe route on one interface, and\n\n532\n00:30:41,060 --> 00:30:44,550\nis redistributing it to send\nit out a different interface.\n\n533\n00:30:44,550 --> 00:30:48,570\nThat's perfectly fine in\nsplit horizon's eyes.\n\n534\n00:30:48,570 --> 00:30:49,210\nAll right.\n\n535\n00:30:49,210 --> 00:30:55,190\nNow, in my first example here I had\nEIGRP on the left and OSPF on the right.\n\n536\n00:30:55,190 --> 00:30:57,960\nIn this example, I wouldn't get a loop.\n\n537\n00:30:57,960 --> 00:31:00,280\nI wouldn't get a loop\nbecause the OSPF route,\n\n538\n00:31:00,280 --> 00:31:03,920\nthat Router 4 is learning,\nwould get advertised in the EIGRP.\n\n539\n00:31:03,920 --> 00:31:06,860\nAnd what's OSPF's admin distance?\n\n540\n00:31:06,860 --> 00:31:07,800\n110.\n\n541\n00:31:07,800 --> 00:31:09,920\nWhat's EIGRP's admin distance?\n\n542\n00:31:09,920 --> 00:31:10,610\n90.\n\n543\n00:31:10,610 --> 00:31:14,800\nSo the EIGRP route has\na lower admin distance.\n\n544\n00:31:14,800 --> 00:31:16,020\nIt's going to win.\n\n545\n00:31:16,020 --> 00:31:19,150\nAnd so the OSPF route,\nit does want to create a loop.\n\n546\n00:31:19,150 --> 00:31:20,160\nIt's there.\n\n547\n00:31:20,160 --> 00:31:23,610\nBut the administrative distance\nstops it from happening, all right.\n\n548\n00:31:23,610 --> 00:31:29,550\nBut in my second example, I've got RIP on\nthe left, with an admin distance of 120.\n\n549\n00:31:29,550 --> 00:31:33,060\nAnd OSPF on the right with\nan admin distance of 110.\n\n550\n00:31:33,060 --> 00:31:35,690\nOSPF is the better protocol.\n\n551\n00:31:35,690 --> 00:31:42,087\nSo when Router 4 learns that network via\nRIP, here, with an admin distance of 120.\n\n552\n00:31:42,087 --> 00:31:48,167\nAnd it learns the same route this way,\nvia OSPF, with an admin distance of 110.\n\n553\n00:31:48,167 --> 00:31:53,833\nThe OSPF route wins, and\nnow we redistribute that into RIP.\n\n554\n00:31:53,833 --> 00:31:59,250\nAnd router two is gonna learn two\nroutes to get to that network.\n\n555\n00:31:59,250 --> 00:32:03,810\nIt's gonna learn one route that's\nback here, through router one.\n\n556\n00:32:03,810 --> 00:32:06,350\nAnd another route that's\nover here to router four.\n\n557\n00:32:07,500 --> 00:32:10,630\nAnd if it sends that traffic\nover to router four.\n\n558\n00:32:10,630 --> 00:32:12,820\nRouter four is gonna\nsend it to router five.\n\n559\n00:32:12,820 --> 00:32:14,960\nRouter five's gonna send\nit to router three.\n\n560\n00:32:14,960 --> 00:32:17,190\nRouter three's gonna\nsend it to router two.\n\n561\n00:32:17,190 --> 00:32:20,870\nRouter two's gonna send it back to\nrouter four, and there's my loop.\n\n562\n00:32:20,870 --> 00:32:24,330\nMy traffic's gonna rattle around these\nrouters over, and over, and over again.\n\n563\n00:32:24,330 --> 00:32:27,170\nUntil the time to live\non the data expires.\n\n564\n00:32:27,170 --> 00:32:31,540\nThe time to live is usually set\nsomewhere between 128 and 225.\n\n565\n00:32:31,540 --> 00:32:35,100\nAnd so it's going to rattle\naround that many times.\n\n566\n00:32:35,100 --> 00:32:38,530\nAnd when the time to live reaches zero,\nthen it'll get removed.\n\n567\n00:32:38,530 --> 00:32:41,940\nEvery time you pass through a router,\nyour time to live is decremented by one.\n\n568\n00:32:41,940 --> 00:32:46,880\nSo if it's 128, I can pass through 128\nrouters before it discards my data.\n\n569\n00:32:46,880 --> 00:32:48,665\nThat means this loop, since there's four.\n\n570\n00:32:48,665 --> 00:32:52,280\nYou take 128 divided by 4, and\nthat's how many times we'd loop around.\n\n571\n00:32:54,000 --> 00:32:57,630\nSo that's basically how loops get created.\n\n572\n00:32:57,630 --> 00:33:01,720\nWhen you've got more than one\nroute redistribution happening,\n\n573\n00:33:01,720 --> 00:33:03,280\nyou're in a lot of danger.\n\n574\n00:33:04,820 --> 00:33:06,350\nLet's see this in practice.\n\n575\n00:33:06,350 --> 00:33:08,760\nSo right here, this is what I've got.\n\n576\n00:33:08,760 --> 00:33:10,890\nThis is the topology\nI've got on my routers.\n\n577\n00:33:10,890 --> 00:33:13,200\nI've got RIP on the left,\nOSPF on the right.\n\n578\n00:33:13,200 --> 00:33:15,680\nI wanna see that loop happen.\n\n579\n00:33:15,680 --> 00:33:20,780\nLet's follow this through on our routers\nbefore the loop gets created, all right?\n\n580\n00:33:20,780 --> 00:33:22,920\nSo, right now,\nI've got this guy, router one.\n\n581\n00:33:22,920 --> 00:33:29,790\nAnd I'm gonna jump over to my lab\nequipment here, and on router one.\n\n582\n00:33:29,790 --> 00:33:35,950\nI can see where I've got this 192.168.1.0\nnetwork right here directly connected.\n\n583\n00:33:35,950 --> 00:33:37,940\nAnd I'm advertising it into RIP.\n\n584\n00:33:37,940 --> 00:33:40,340\nSo it's being advertised into Rip.\n\n585\n00:33:40,340 --> 00:33:43,380\nAnd router two is learning it.\n\n586\n00:33:43,380 --> 00:33:47,661\nOn router two, if I take a look at my\nrouting table, I can see it right here.\n\n587\n00:33:47,661 --> 00:33:49,210\n192.\n192.138.1.0 it's coming in,\n\n588\n00:33:49,210 --> 00:33:51,920\nI'm learning it and I'm getting it.\n\n589\n00:33:53,470 --> 00:33:59,410\nNow once it's learned, it's then going to\nget advertised out to the other routers.\n\n590\n00:33:59,410 --> 00:34:02,240\nSo router two, whoops,\nlet me get to my diagram.\n\n591\n00:34:02,240 --> 00:34:04,550\nRouter two isn't going to\nadvertise to router three, and\n\n592\n00:34:04,550 --> 00:34:06,400\nfour cause they're both running RIP.\n\n593\n00:34:06,400 --> 00:34:08,180\nSo we'll advertise those out.\n\n594\n00:34:08,180 --> 00:34:10,270\nAnd they'll learn it via RIP.\n\n595\n00:34:10,270 --> 00:34:13,740\nSo on router three,\nif I look at it's routing table.\n\n596\n00:34:13,740 --> 00:34:16,768\nI can see 192.168.1.0.\n\n597\n00:34:16,768 --> 00:34:18,860\nRight there learned via RIP.\n\n598\n00:34:18,860 --> 00:34:20,750\nAnd oh shoot you know what I forgot?\n\n599\n00:34:20,750 --> 00:34:23,480\nNotice my metric count is\na little bit high there.\n\n600\n00:34:23,480 --> 00:34:26,210\nThe metric count is high for a reason.\n\n601\n00:34:26,210 --> 00:34:27,450\nI've artificially inflated it.\n\n602\n00:34:27,450 --> 00:34:29,850\nLet me undo that real quick.\n\n603\n00:34:29,850 --> 00:34:34,240\nI want to put that back to normal.\n\n604\n00:34:34,240 --> 00:34:36,880\nSo I need to, actually,\nI inflated that way back here.\n\n605\n00:34:36,880 --> 00:34:39,550\nI'm just going to fix this real quick.\n\n606\n00:34:39,550 --> 00:34:42,320\nSo that we don't have crazy metrics and\nwonder why.\n\n607\n00:34:44,640 --> 00:34:45,760\nWhy that's happening.\n\n608\n00:34:45,760 --> 00:34:47,320\nSo I bump that up.\n\n609\n00:34:49,490 --> 00:34:50,000\nThere we go.\n\n610\n00:34:50,000 --> 00:34:56,870\nAnd we clear this guy's routing table and\nthat should fix that.\n\n611\n00:34:56,870 --> 00:35:00,020\nWe'll give it just a second\nto relearn those routes.\n\n612\n00:35:00,020 --> 00:35:03,890\nThere's two levels of bad loops, okay?\n\n613\n00:35:03,890 --> 00:35:08,260\nThere's a bad loop where you\nlearn an equal cost path.\n\n614\n00:35:08,260 --> 00:35:11,720\nAnd there's a bad loop when\nyou learn a better path.\n\n615\n00:35:11,720 --> 00:35:13,980\nWhen you get an equal cost path.\n\n616\n00:35:13,980 --> 00:35:17,780\nIn that loop, half your traffic\nis sent out a good route, and\n\n617\n00:35:17,780 --> 00:35:20,500\nhalf your traffic is sent out a bad route.\n\n618\n00:35:20,500 --> 00:35:23,100\nSo you end up with really\nintermittent connectivity.\n\n619\n00:35:23,100 --> 00:35:26,320\nIt's really flaky it's hard\nto troubleshoot and isolate.\n\n620\n00:35:26,320 --> 00:35:28,810\nIt's what happens when you\nhave two different routes,\n\n621\n00:35:28,810 --> 00:35:29,830\nwhere one's good and one's bad.\n\n622\n00:35:31,170 --> 00:35:35,250\nIf you're learning a better route though\nthat's bad the better route comes in and\n\n623\n00:35:35,250 --> 00:35:37,700\nit wins and now the traffic stops.\n\n624\n00:35:37,700 --> 00:35:39,380\nThat's a lot easier to troubleshoot,\n\n625\n00:35:39,380 --> 00:35:42,270\na lot easier to figure out\nwhere your failure happens.\n\n626\n00:35:42,270 --> 00:35:45,100\nBecause the traffic actually\nstops at one point.\n\n627\n00:35:45,100 --> 00:35:46,600\nAnd it's not intermittent.\n\n628\n00:35:46,600 --> 00:35:48,300\nSo two different levels of problems.\n\n629\n00:35:48,300 --> 00:35:51,070\nI'm going to artificially\ninflate my metric\n\n630\n00:35:51,070 --> 00:35:52,980\nlater to create the different\nkinds of problems.\n\n631\n00:35:52,980 --> 00:35:57,930\nBut for right now I don't need that.\n\n632\n00:35:57,930 --> 00:36:01,140\nAll right, so\nnow if I take a look at my routing table,\n\n633\n00:36:01,140 --> 00:36:03,770\nI've got 192.168.1.0 right there\ncoming in with a metric of 1.\n\n634\n00:36:03,770 --> 00:36:07,040\nThat's what I expected, I'm on router two.\n\n635\n00:36:07,040 --> 00:36:09,940\nIf it has to go through router one to\nget there, it's only one hop away.\n\n636\n00:36:09,940 --> 00:36:12,500\nI expect a metric of one.\n\n637\n00:36:12,500 --> 00:36:15,410\nNow, router two is gonna advertize\nthat to router three and router four.\n\n638\n00:36:15,410 --> 00:36:18,200\nThey're gonna learn it, and\nthey should have a metric of two.\n\n639\n00:36:18,200 --> 00:36:19,970\nThey're two hops away.\n\n640\n00:36:19,970 --> 00:36:24,100\nSo if I look on router three,\nand do a show IP route.\n\n641\n00:36:24,100 --> 00:36:26,020\nI can find 192.168.1.0.\n\n642\n00:36:26,020 --> 00:36:30,020\nAnd it is indeed two hops away.\n\n643\n00:36:30,020 --> 00:36:35,000\nIf I look on router four,\nit did the same thing.\n\n644\n00:36:35,000 --> 00:36:36,960\nSo it's got 192.168.1.0.\n\n645\n00:36:36,960 --> 00:36:39,290\nAnd also two hops away.\n\n646\n00:36:39,290 --> 00:36:43,530\nSo RIP is now properly reflecting\nhow to get to that network.\n\n647\n00:36:43,530 --> 00:36:46,560\nEach of these routers knows\nhow to get to 192.168.1.0.\n\n648\n00:36:46,560 --> 00:36:50,750\nBut router five doesn't.\n\n649\n00:36:50,750 --> 00:36:54,165\nRouter five doesn't know how to get there.\n\n650\n00:36:54,165 --> 00:36:57,100\nBecause router five is 100% in OSPF.\n\n651\n00:36:57,100 --> 00:37:01,190\nIf I look at its routing table,\nit doesn't have 192.168.1.0.\n\n652\n00:37:01,190 --> 00:37:03,400\nIt's not even in the list.\n\n653\n00:37:04,420 --> 00:37:08,570\nBecause we're 100% in OSPF, We don't have\na connection to the RIP environment.\n\n654\n00:37:09,610 --> 00:37:14,350\nSo, if I want router five to\nknow how to get to that network.\n\n655\n00:37:14,350 --> 00:37:15,890\nI'm gonna need to do some redistribution.\n\n656\n00:37:17,300 --> 00:37:19,300\nAnd so, I can go up here to router three.\n\n657\n00:37:19,300 --> 00:37:21,410\nAnd I can put in my\nredistribution statements.\n\n658\n00:37:21,410 --> 00:37:23,920\nAnd I might wanna do\nmutual redistribution.\n\n659\n00:37:23,920 --> 00:37:26,500\nSo, I advertise RIP into OSPF.\n\n660\n00:37:26,500 --> 00:37:27,650\nAnd then do the same thing in reverse.\n\n661\n00:37:27,650 --> 00:37:30,070\nAdvertising OSPF back into RIP.\n\n662\n00:37:30,070 --> 00:37:32,650\nAlright, mutual redistribution\nis pretty common.\n\n663\n00:37:32,650 --> 00:37:35,810\nThat way both sides\nlearn about each other.\n\n664\n00:37:35,810 --> 00:37:37,840\nRouter five is connected to 192.168.5.0.\n\n665\n00:37:37,840 --> 00:37:41,790\nAnd if I look at router one,\nit's not gonna know about that network.\n\n666\n00:37:41,790 --> 00:37:44,830\nIf I go to router one and\ndo a shop IP route.\n\n667\n00:37:47,110 --> 00:37:48,558\nHere, I can see 192.168.5 not in my list.\n\n668\n00:37:48,558 --> 00:37:53,270\nIt's entirely in OSPF.\n\n669\n00:37:53,270 --> 00:37:54,810\nI'm entirely in RIP.\n\n670\n00:37:54,810 --> 00:37:55,310\nI don't see it.\n\n671\n00:37:56,430 --> 00:37:59,300\nSo, let's set up some mutual\nredistribution on router three.\n\n672\n00:37:59,300 --> 00:38:04,284\nSo, on router three,\nI'm gonna redistribute RIP into OSPF.\n\n673\n00:38:04,284 --> 00:38:07,070\nSo I'm gonna redistribute that over here.\n\n674\n00:38:08,690 --> 00:38:12,110\nI'm gonna get into my OSPF process.\n\n675\n00:38:12,110 --> 00:38:12,980\nSo router ospf 1.\n\n676\n00:38:12,980 --> 00:38:19,528\nAnd I'm gonna say\nredistribute rip subnets.\n\n677\n00:38:19,528 --> 00:38:21,630\nI need the subnet masks.\n\n678\n00:38:21,630 --> 00:38:23,450\nSo redistribute rip subnets.\n\n679\n00:38:23,450 --> 00:38:27,810\nAnd then I need to provide a metric for\nthat.\n\n680\n00:38:27,810 --> 00:38:29,390\nAre these RIP routes gonna have.\n\n681\n00:38:29,390 --> 00:38:31,770\nRIP uses a metric of hop count.\n\n682\n00:38:31,770 --> 00:38:34,490\nAnd OSPF uses a metric of cost.\n\n683\n00:38:34,490 --> 00:38:37,540\nAnd so\nI need some kind of a cost assigned.\n\n684\n00:38:37,540 --> 00:38:40,790\nIf I've set a default metric, I could\njust press Enter here, but I haven't.\n\n685\n00:38:40,790 --> 00:38:42,890\nSo I'll just give it a metric of,\nlet's say, 10000.\n\n686\n00:38:45,070 --> 00:38:46,930\nSo it's got a metric of 10000.\n\n687\n00:38:46,930 --> 00:38:49,650\nOr if I had done a default metric, 10000.\n\n688\n00:38:49,650 --> 00:38:52,040\nThat would have worked too.\n\n689\n00:38:52,040 --> 00:38:55,270\nAnd then I could have left the metric\noff of the individual one.\n\n690\n00:38:55,270 --> 00:38:59,170\nNow I'm taking my RIP routes and\nI'm advertising them into OSPF.\n\n691\n00:39:01,240 --> 00:39:04,700\nAnd in short order, router five\nshould learn those other routes.\n\n692\n00:39:04,700 --> 00:39:06,830\nThe routes that it's missing.\n\n693\n00:39:06,830 --> 00:39:10,320\nSo it's missing 192.168.2, 192.168.1.\n\n694\n00:39:10,320 --> 00:39:11,600\nThose networks are not showing up here.\n\n695\n00:39:11,600 --> 00:39:13,460\nAnd if I do a show IP route.\n\n696\n00:39:13,460 --> 00:39:14,710\nNow they are.\n\n697\n00:39:14,710 --> 00:39:15,909\nAnd there they are.\n\n698\n00:39:15,909 --> 00:39:17,740\nThere they are showing up as OE2.\n\n699\n00:39:17,740 --> 00:39:19,160\nRight, they're external OSPF routes.\n\n700\n00:39:19,160 --> 00:39:22,032\nThey have an admin distance of 110.\n\n701\n00:39:22,032 --> 00:39:24,370\nYou've always got to watch out for that.\n\n702\n00:39:24,370 --> 00:39:28,080\nExternal routes in OSPF have the same\nadmin distance as internal ones.\n\n703\n00:39:29,080 --> 00:39:30,520\nBut their metric is 10000.\n\n704\n00:39:30,520 --> 00:39:32,720\nThat came across just fine.\n\n705\n00:39:32,720 --> 00:39:34,040\nAnd now I've learned those routes.\n\n706\n00:39:35,190 --> 00:39:36,360\nBut the opposite is not true.\n\n707\n00:39:36,360 --> 00:39:37,790\nThey haven't learned my RIP routes yet.\n\n708\n00:39:37,790 --> 00:39:40,290\nSo I need to go and\nadvertise those back in.\n\n709\n00:39:40,290 --> 00:39:44,920\nSo on router three, I'll just switch\nfrom OSPF over to router RIP.\n\n710\n00:39:44,920 --> 00:39:48,542\nAnd I like to get out of the protocol\nfirst just to make sure.\n\n711\n00:39:48,542 --> 00:39:54,583\nSo I'll do router RIP, and\nhere I'm gonna redistribute OSPF 1.\n\n712\n00:39:54,583 --> 00:39:57,042\nAnd I don't have to worry\nabout the subnets command.\n\n713\n00:39:57,042 --> 00:40:00,320\nSee how I don't even have the subnets\ncommand because OSPF doesn't need that.\n\n714\n00:40:00,320 --> 00:40:03,620\nBut I do need to worry about a metric and\nI will set the metric.\n\n715\n00:40:03,620 --> 00:40:06,160\nNow, the metric is going\nto equal a hop count and\n\n716\n00:40:06,160 --> 00:40:08,945\nI can specify what that\nhop count is going to be.\n\n717\n00:40:08,945 --> 00:40:14,610\nNow, for somebody over here in RIP\nland they're gonna have to go through\n\n718\n00:40:14,610 --> 00:40:18,760\nmy router, router three and router\nfive to then get to their destination.\n\n719\n00:40:18,760 --> 00:40:20,622\nSo that's at least two hops away.\n\n720\n00:40:20,622 --> 00:40:24,350\nSo I probably want to go ahead and\ndo something like give it a metric of two.\n\n721\n00:40:24,350 --> 00:40:27,830\nBut you can put whatever you want,\nany number from 1 to 15.\n\n722\n00:40:27,830 --> 00:40:31,160\nZero gets ignored, 16 is unreachable.\n\n723\n00:40:31,160 --> 00:40:34,172\nSo it really needs to be 1 to 15.\n\n724\n00:40:34,172 --> 00:40:37,002\nAnd again, I could have done\nthe default metric instead,\n\n725\n00:40:37,002 --> 00:40:39,280\nand maybe I'll set\nthe default metric to one.\n\n726\n00:40:39,280 --> 00:40:43,577\nAnd then it would've advertised without\nproviding a metric on the redistribute.\n\n727\n00:40:43,577 --> 00:40:44,706\nAll right.\n\n728\n00:40:44,706 --> 00:40:50,321\nNow, in theory if I had a route,\nlike 192.168.1.0,\n\n729\n00:40:50,321 --> 00:40:54,913\nit comes over here to router 2,\ngoes up to router 3,\n\n730\n00:40:54,913 --> 00:40:59,012\nrouter 3 redistributes\nit from RIP into OSPF.\n\n731\n00:40:59,012 --> 00:41:00,840\nSo it makes it into OSPF.\n\n732\n00:41:00,840 --> 00:41:04,950\nAnd then router three is redistributing\nfrom OSPF back into RIP.\n\n733\n00:41:04,950 --> 00:41:08,170\nSo couldn't it redistribute\nthe same route back out again?\n\n734\n00:41:08,170 --> 00:41:09,550\nWell, no.\n\n735\n00:41:09,550 --> 00:41:14,450\nBecause you could only redistribute\nroutes that are in your routing table.\n\n736\n00:41:14,450 --> 00:41:18,280\nSo when I run redistribute\nRIP on the OSPF process,\n\n737\n00:41:18,280 --> 00:41:21,680\nit looks at the routing table for\nRIP routes that are in there.\n\n738\n00:41:21,680 --> 00:41:24,900\nAnd then it redistributes those into OSPF,\nand then the opposite is true for\n\n739\n00:41:24,900 --> 00:41:26,020\nthe other direction.\n\n740\n00:41:26,020 --> 00:41:31,380\nIf I look at the routing table\non router 3, I'll see that it\n\n741\n00:41:31,380 --> 00:41:36,861\nknows 192.168.5 through OSPF,\nnot through RIP.\n\n742\n00:41:36,861 --> 00:41:39,111\nSo I don't have to worry about\nit coming back that way.\n\n743\n00:41:39,111 --> 00:41:44,652\nAnd it knows about 192.168.1.0\nfrom RIP not from OSPF.\n\n744\n00:41:44,652 --> 00:41:47,230\nSo I don't have to worry about\nit coming back that way either.\n\n745\n00:41:47,230 --> 00:41:49,972\nThat's basic loop prevention right there.\n\n746\n00:41:49,972 --> 00:41:54,600\nIt's stopping it from coming right\nback in again and keeping us safe.\n\n747\n00:41:54,600 --> 00:41:56,390\nThat's what we want to happen.\n\n748\n00:41:56,390 --> 00:42:00,232\nThat's why we don't worry about loops when\nyou're only redistributing on one router.\n\n749\n00:42:00,232 --> 00:42:01,310\nYou don't have a problem there.\n\n750\n00:42:02,630 --> 00:42:05,690\nThe problem creeps in when we\nintroduce that second router,\n\n751\n00:42:05,690 --> 00:42:09,210\nthat second path in between\nthe autonomous systems.\n\n752\n00:42:09,210 --> 00:42:11,140\nThat's where we can\nstart to have the loops.\n\n753\n00:42:11,140 --> 00:42:14,740\nBut at this point I have a fully\nconverged network or at least I should.\n\n754\n00:42:14,740 --> 00:42:19,400\nOn router one, it should know\nabout all five of my class c's.\n\n755\n00:42:19,400 --> 00:42:23,170\nSo it knows about 192.168.1.0\ncuz it's directly connected.\n\n756\n00:42:23,170 --> 00:42:27,471\nBut then right here via RIP its learned\nall the other guys so it's got those.\n\n757\n00:42:27,471 --> 00:42:32,610\nAnd if I jump all the way over to\nrouter five it's got all of them also.\n\n758\n00:42:32,610 --> 00:42:34,820\nSo I have a fully converged network now,\n\n759\n00:42:34,820 --> 00:42:36,760\neverybody knows about\neverybody else's network.\n\n760\n00:42:36,760 --> 00:42:39,070\nThings are running great.\n\n761\n00:42:39,070 --> 00:42:40,270\nAll right.\n\n762\n00:42:40,270 --> 00:42:46,370\nWell, the problem creeps in when I start\nredistributing on the other route, okay?\n\n763\n00:42:46,370 --> 00:42:48,637\nSo right now I guess,\nlet me just change this a little bit,\n\n764\n00:42:48,637 --> 00:42:51,993\nI didn't do a metric of 100, I did\na metric of 10,000, I think is what I did.\n\n765\n00:42:51,993 --> 00:42:54,710\nSo I'll just update my diagram\nto reflect the new metric.\n\n766\n00:42:54,710 --> 00:42:56,170\nAll right.\n\n767\n00:42:56,170 --> 00:42:58,910\nDown here on router four.\n\n768\n00:42:58,910 --> 00:43:02,080\nLet's say that I wanna give\nmyself an alternate path.\n\n769\n00:43:02,080 --> 00:43:05,510\nI want to fail over; I want another\nway to get into that network.\n\n770\n00:43:06,960 --> 00:43:09,960\nWell, I have to redistribute\nfrom OSPF into RIP.\n\n771\n00:43:11,340 --> 00:43:14,490\nWhen I do that, I have to pick a metric.\n\n772\n00:43:14,490 --> 00:43:17,130\nAnd the metric is pulled out of my hat.\n\n773\n00:43:17,130 --> 00:43:18,290\nI just make it up.\n\n774\n00:43:18,290 --> 00:43:20,550\nI pick whatever metric I want.\n\n775\n00:43:20,550 --> 00:43:25,380\nAnd if I pick a metric that is equal to or\n\n776\n00:43:25,380 --> 00:43:30,400\nbetter than the riff route that's already\nin riff, then I'm gonna introduce a loop.\n\n777\n00:43:31,400 --> 00:43:35,870\nSo I need to introduce a metric that's\nworse than the route that's already in\n\n778\n00:43:35,870 --> 00:43:41,040\nthere or if I don't wanna be so\ndependent on worrying about the metric,\n\n779\n00:43:41,040 --> 00:43:43,860\nI can use something like\nroute tagging to fix it.\n\n780\n00:43:43,860 --> 00:43:45,180\nBut let's see the problem first.\n\n781\n00:43:45,180 --> 00:43:47,680\nI wanna break things and\nthen we'll fix it.\n\n782\n00:43:47,680 --> 00:43:51,461\nSo I'm gonna redistribute and I'll\nredistribute with like a metric of one.\n\n783\n00:43:51,461 --> 00:43:53,240\nThat's what I'm showing\nhere in the diagram.\n\n784\n00:43:54,550 --> 00:43:56,020\nSo I'm gonna jump over to router four.\n\n785\n00:43:57,790 --> 00:44:01,590\nAnd actually, before I do that\nlet me just jump to router two.\n\n786\n00:44:01,590 --> 00:44:03,610\nRouter two is this guy right here.\n\n787\n00:44:03,610 --> 00:44:05,978\nRouter two is entirely in RIP and\n\n788\n00:44:05,978 --> 00:44:10,988\nif it wants to get to\n192.168.1.0 where's it gonna go?\n\n789\n00:44:10,988 --> 00:44:15,440\nIt's gonna go straight across\nthis way to get to this network.\n\n790\n00:44:15,440 --> 00:44:19,210\nThat's the path that it's gonna follow\nto get across and that's what we want.\n\n791\n00:44:19,210 --> 00:44:23,650\nAnd if I look in my other diagram here,\nlet me just change this to say RIP.\n\n792\n00:44:23,650 --> 00:44:27,410\nSo if router two, wants to get\n\n793\n00:44:27,410 --> 00:44:31,820\nto 192.168.1.0 it's gonna go right\nout E00 right over to this router.\n\n794\n00:44:31,820 --> 00:44:34,400\nThat's the best way to get\nto where it wants to go.\n\n795\n00:44:36,090 --> 00:44:38,421\nWell, let's make sure that's\nactually what happens.\n\n796\n00:44:38,421 --> 00:44:42,583\nIf I look on router 2, and\nI go into show ip route\n\n797\n00:44:42,583 --> 00:44:48,140\n192.168.1.0, a little do command there.\n\n798\n00:44:48,140 --> 00:44:50,670\nIt's gonna give me the detailed\ninformation about that route.\n\n799\n00:44:50,670 --> 00:44:51,550\nAnd I can see right here,\n\n800\n00:44:51,550 --> 00:44:56,860\nit's known via rip, it's admin distance\nis 120 the metric is 1, one hop away.\n\n801\n00:44:56,860 --> 00:44:59,839\nAnd it can get there on E 0/0.\n\n802\n00:44:59,839 --> 00:45:02,360\nThat's exactly what I want,\nthis guy knows where to go.\n\n803\n00:45:02,360 --> 00:45:04,050\nIt's gonna go over to router one.\n\n804\n00:45:04,050 --> 00:45:04,830\nAnd access that network.\n\n805\n00:45:06,860 --> 00:45:13,870\nWatch what happens when I tell router four\nto advertise its OSPF routes into RIP.\n\n806\n00:45:14,880 --> 00:45:18,980\nRouter four is gonna look\nat its routing table and\n\n807\n00:45:18,980 --> 00:45:23,191\nit's going to say,\nwhat routes do I have in OSPF?\n\n808\n00:45:23,191 --> 00:45:24,452\nAnd it's gonna look at them.\n\n809\n00:45:24,452 --> 00:45:28,230\nAnd notice it's got 192.168.1.0.\n\n810\n00:45:28,230 --> 00:45:30,840\nIt's an external route, but it's got it.\n\n811\n00:45:30,840 --> 00:45:35,620\nAnd when I tell it to redistribute that\ninto RIP, it's just gonna look for\n\n812\n00:45:35,620 --> 00:45:39,360\nany OSPF route in the routing table and\nredistribute that into RIP.\n\n813\n00:45:39,360 --> 00:45:41,440\nIt's gonna duplicate that route.\n\n814\n00:45:41,440 --> 00:45:44,610\nAnd then it's gonna come down\nto what metric I provide?\n\n815\n00:45:44,610 --> 00:45:48,080\nWell, router two is learning\nthat route with a metric of one,\n\n816\n00:45:48,080 --> 00:45:49,561\npretty hard to beat that.\n\n817\n00:45:49,561 --> 00:45:53,070\nYou can't, you can't beat a metric\nof one with RIP, but I can tie it.\n\n818\n00:45:54,370 --> 00:45:57,820\nI'll do that, I'm gonna jump into my\nconfig, and I'll get into router rip.\n\n819\n00:45:58,980 --> 00:46:05,421\nAnd I'm gonna say,\nredistribute ospf 1 metric 1.\n\n820\n00:46:05,421 --> 00:46:10,511\nI'm gonna take all of OSPF routes and\nI'm gonna redistribute them into RIP,\n\n821\n00:46:10,511 --> 00:46:13,191\nand I'm gonna give them a metric of one.\n\n822\n00:46:13,191 --> 00:46:17,646\nSo I'll just run that, and again if I had\na default metric, I wouldn't have had to\n\n823\n00:46:17,646 --> 00:46:21,340\nspecify that but oops, hyphen then\nthat would have taken that out.\n\n824\n00:46:23,230 --> 00:46:24,750\nSo I've got that in place.\n\n825\n00:46:24,750 --> 00:46:25,669\nNow, it's redistributing.\n\n826\n00:46:27,110 --> 00:46:30,130\nNow, I've got a second way\nto get between the networks.\n\n827\n00:46:30,130 --> 00:46:31,839\nThe route we just\n[INAUDIBLE] is doing that.\n\n828\n00:46:31,839 --> 00:46:33,350\nWell let's look at what\nrouter two has now.\n\n829\n00:46:34,920 --> 00:46:38,896\nOn router two if I do a show ip route,\n\n830\n00:46:38,896 --> 00:46:44,871\n192.160.1.0 has two destinations now.\n\n831\n00:46:44,871 --> 00:46:48,280\nLet me pull the detail data on that.\n\n832\n00:46:48,280 --> 00:46:52,900\nI can see that I've got one,\nthat's a route metric of one and\n\n833\n00:46:52,900 --> 00:46:55,081\nit's via Ethernet 0/3.\n\n834\n00:46:55,081 --> 00:46:58,720\nI've got another one with\na metric of one via Ethernet 0/0.\n\n835\n00:46:58,720 --> 00:47:00,220\nI've got a tie.\n\n836\n00:47:00,220 --> 00:47:03,960\nWhen you have a tie you put both routes in\nthe routing table and you load balance and\n\n837\n00:47:03,960 --> 00:47:06,635\nthat's exactly what I'm gonna start doing.\n\n838\n00:47:06,635 --> 00:47:11,332\n50% of my traffic, see the traffic share,\ntraffic share count as one that's\n\n839\n00:47:11,332 --> 00:47:15,198\nequal that means 50% of my traffic's\ngonna go out one line, and\n\n840\n00:47:15,198 --> 00:47:17,498\n50%'s gonna go out the other line.\n\n841\n00:47:17,498 --> 00:47:21,740\nThat means 50% of the data that router\ntwo tries to send to one of those\n\n842\n00:47:21,740 --> 00:47:23,808\nnetworks is gonna get in to a loop.\n\n843\n00:47:23,808 --> 00:47:26,670\nThe other 50% is gonna\nget to the destination.\n\n844\n00:47:26,670 --> 00:47:29,320\nAnd it will look random.\n\n845\n00:47:29,320 --> 00:47:32,290\nWhen you're on your network you\nget calls from people saying,\n\n846\n00:47:32,290 --> 00:47:34,520\nsometimes I can get over there and\nsometimes I can't.\n\n847\n00:47:34,520 --> 00:47:37,170\nOr I can't reach that machine but\n\n848\n00:47:37,170 --> 00:47:39,330\nthe person on the computer\nright next to me can.\n\n849\n00:47:39,330 --> 00:47:40,251\nAnd I don't know why?\n\n850\n00:47:40,251 --> 00:47:43,625\nOr I noticed like around 3 PM\neach day I can't get through.\n\n851\n00:47:43,625 --> 00:47:46,690\nThe 3 PM part is just a random occurrence.\n\n852\n00:47:46,690 --> 00:47:49,958\nBut the fact is that sometime it can\nget through and sometimes they can't.\n\n853\n00:47:49,958 --> 00:47:52,375\nThat's what happens when\nthe metric is equal.\n\n854\n00:47:52,375 --> 00:47:56,390\nWhere it's bad though is when\nthe metric isn't equal, right.\n\n855\n00:47:56,390 --> 00:48:01,910\nLet's say, that router 2 wasn't\none hop away from that network.\n\n856\n00:48:01,910 --> 00:48:06,830\nLet's say that router 2 was a few more\nhops like three hops away, all right.\n\n857\n00:48:06,830 --> 00:48:08,230\nWell then,\n\n858\n00:48:08,230 --> 00:48:12,780\nthe route that's being redistributed will\nlook even better then what I already knew.\n\n859\n00:48:12,780 --> 00:48:13,400\nAll right.\n\n860\n00:48:13,400 --> 00:48:17,670\nLet me artificially inflate that\nmetric and I'll show you what I mean.\n\n861\n00:48:17,670 --> 00:48:18,330\nAll right?\n\n862\n00:48:18,330 --> 00:48:22,155\nSo over here on router 1, so\nrouter 1 is the guy originating this.\n\n863\n00:48:22,155 --> 00:48:24,941\n192.168.1.0 network.\n\n864\n00:48:24,941 --> 00:48:27,620\nI'm going to take that\ninterface out of RIP.\n\n865\n00:48:27,620 --> 00:48:33,060\nSo Let me just,\nI was doing a wildcard for RIP.\n\n866\n00:48:33,060 --> 00:48:34,770\nI'll be a little more specific this time.\n\n867\n00:48:36,520 --> 00:48:38,860\nSo I'm gonna advertise all\nmy 10 networks into RIP.\n\n868\n00:48:38,860 --> 00:48:40,680\nThat's what I'm using for\nall my point to point links.\n\n869\n00:48:41,870 --> 00:48:48,025\nBut then, instead of directly\nadvertising 192.168.1.0 like that.\n\n870\n00:48:48,025 --> 00:48:51,316\nWhat I'm gonna do is I'm gonna\nbring it in as a redistribution.\n\n871\n00:48:51,316 --> 00:48:56,139\nI'm gonna say, redistribute connected\nbecause that network is on a directly\n\n872\n00:48:56,139 --> 00:48:57,608\nconnected interface.\n\n873\n00:48:57,608 --> 00:49:01,400\nSo I'll say redistribute\nconnected metric 3.\n\n874\n00:49:01,400 --> 00:49:06,930\nSo now I'm gonna bring the 192.168.1.0\nnetwork into router 1's RIP environment\n\n875\n00:49:08,140 --> 00:49:11,560\nwith a metric of three, which will\nbasically create a pretend environment.\n\n876\n00:49:11,560 --> 00:49:15,390\nI'm pretending there's three more routers\non the other side of router 1, all right.\n\n877\n00:49:15,390 --> 00:49:18,450\nSo now my metric starts to go up.\n\n878\n00:49:18,450 --> 00:49:21,820\nRouter 2 had a tie before.\n\n879\n00:49:21,820 --> 00:49:26,750\nThere was a tie where it could go\nthrough router 1 with the metric of 1.\n\n880\n00:49:26,750 --> 00:49:29,370\nOr it could go through router\n4 with a metric of 1, and\n\n881\n00:49:29,370 --> 00:49:31,700\nthat metric through 4 was total BS, right.\n\n882\n00:49:31,700 --> 00:49:34,180\nIt completely made up when\nI did the redistribution.\n\n883\n00:49:34,180 --> 00:49:38,200\nIt's actually way more, because I had\nto go to route 5, router 3, router 2,\n\n884\n00:49:38,200 --> 00:49:39,010\nto router 1.\n\n885\n00:49:39,010 --> 00:49:41,990\nIt really needs to be a like a metric 5 or\nsomething.\n\n886\n00:49:41,990 --> 00:49:44,640\nThat's why it's so important to try and\nset an accurate metric when you\n\n887\n00:49:44,640 --> 00:49:48,340\nredistribute, there's so\nmany people on the internet.\n\n888\n00:49:48,340 --> 00:49:50,850\nWhen they redistribute like EIGRP,\nand they say, oh,\n\n889\n00:49:50,850 --> 00:49:53,770\nyeah, just for\nthe metric use 11111, right?\n\n890\n00:49:53,770 --> 00:49:54,650\nJust use that.\n\n891\n00:49:54,650 --> 00:49:56,110\nYou see it all the time.\n\n892\n00:49:56,110 --> 00:50:00,390\nAnd that's a bad thing, because you can\nbe saying your network is way better or\n\n893\n00:50:00,390 --> 00:50:02,640\nway worse than it actually is.\n\n894\n00:50:02,640 --> 00:50:04,400\nTake the time.\nCalculate an accurate metric.\n\n895\n00:50:04,400 --> 00:50:05,770\nFigure out what it should be and\nput that in there.\n\n896\n00:50:07,270 --> 00:50:08,160\nAll right.\n\n897\n00:50:08,160 --> 00:50:09,060\nThe reason I am talking so\n\n898\n00:50:09,060 --> 00:50:12,880\nlong here is I am stalling to give\nrouter 2 to update it's routing table.\n\n899\n00:50:12,880 --> 00:50:13,990\nIt should be updated now though.\n\n900\n00:50:13,990 --> 00:50:16,870\nLet's see what it looks like now.\n\n901\n00:50:16,870 --> 00:50:20,650\nSo if I look at its routing table now,\n\n902\n00:50:20,650 --> 00:50:24,670\nI can see where 192.168.1.0\nonly has one entry.\n\n903\n00:50:24,670 --> 00:50:26,560\nIt doesn't have two entries anymore.\n\n904\n00:50:26,560 --> 00:50:27,370\nOkay.\n\n905\n00:50:27,370 --> 00:50:31,960\nAnd if I do a show IP route 192.168.1.0,\n\n906\n00:50:31,960 --> 00:50:36,440\nI can see it is a metric of 1 and\n\n907\n00:50:36,440 --> 00:50:41,600\nit's being learned through\nrouter four on Ethernet 0/3.\n\n908\n00:50:41,600 --> 00:50:48,650\nIf router 2 receives some traffic\ndestined for the 192.168.1.0 network.\n\n909\n00:50:48,650 --> 00:50:53,820\nInstead of going this way with\na hop count of 3, a higher metric,\n\n910\n00:50:53,820 --> 00:50:58,230\nit's going to go this way to router 4\nbecause router 4 has a better metric.\n\n911\n00:50:58,230 --> 00:50:58,970\nA metric of 1.\n\n912\n00:50:58,970 --> 00:51:03,570\nAnd then it's going to go into OSPF and\njump over here and then jump over here and\n\n913\n00:51:03,570 --> 00:51:07,770\nthen come back in Well we're just\ngoing to perpetuate that loop.\n\n914\n00:51:07,770 --> 00:51:12,430\nSo router 2 now has a loop for\ngetting into that network, all right.\n\n915\n00:51:12,430 --> 00:51:16,410\nAnd if I start to test by doing pings or\nsomething like that.\n\n916\n00:51:16,410 --> 00:51:20,120\nThe odds are that I'm not going to\nbe able to get to that network.\n\n917\n00:51:20,120 --> 00:51:23,110\nWhen I go to ping it,\nI'm hitting that loop.\n\n918\n00:51:23,110 --> 00:51:26,420\nI'm going to router four and\nI'm cycling around in that circle and\n\n919\n00:51:26,420 --> 00:51:27,780\nI'm not getting to the destination.\n\n920\n00:51:27,780 --> 00:51:28,890\nAll right?\n\n921\n00:51:28,890 --> 00:51:32,390\nThe primary cause here was a bad metric.\n\n922\n00:51:32,390 --> 00:51:35,680\nIf I had properly specified my metrics,\nthis wouldn't happen.\n\n923\n00:51:35,680 --> 00:51:39,400\nBut you know what, it is all too\neasy to make a mistake on a metric,\n\n924\n00:51:39,400 --> 00:51:41,750\nespecially with EIGRP and OSPF.\n\n925\n00:51:41,750 --> 00:51:44,880\nRIP the metric is easy,\nit's hop count, you just count, right?\n\n926\n00:51:44,880 --> 00:51:48,010\nBut with EIGRP, and OSPF,\nit's far more complex,\n\n927\n00:51:48,010 --> 00:51:50,120\nand it's way easy to make a mistake on it.\n\n928\n00:51:50,120 --> 00:51:53,160\nSo although I could fix\nthis with the metric\n\n929\n00:51:54,170 --> 00:51:57,280\nI instead am gonna fix\nthis with route tags.\n\n930\n00:51:57,280 --> 00:52:02,360\nRoute tags are a foolproof method\nto ensure that you don't introduce\n\n931\n00:52:02,360 --> 00:52:05,740\nloops with redistribution regardless\nof what metric you can use.\n\n932\n00:52:05,740 --> 00:52:07,980\nYou can use the best\nmetrics in the world and\n\n933\n00:52:07,980 --> 00:52:10,020\nwe can still filter them\nout with route tags.\n\n934\n00:52:10,020 --> 00:52:11,660\nSo that's the best way to solve this and\n\n935\n00:52:11,660 --> 00:52:13,360\nthat's what Cisco wants you to know for\nthe exam.\n\n936\n00:52:14,570 --> 00:52:17,420\nAll right, so that took a lot longer\nto explain than I thought, but\n\n937\n00:52:17,420 --> 00:52:20,620\nin this segment we got\na chance to see the problem.\n\n938\n00:52:20,620 --> 00:52:23,260\nI showed you the loop,\nhow it gets created, and\n\n939\n00:52:23,260 --> 00:52:27,570\nwhat it’s like once it’s in the routing\ntable, and we saw what caused that loop.\n\n940\n00:52:27,570 --> 00:52:31,100\nNext I wanna show you how to fix it,\nbut let’s stop here and take a break.\n\n941\n00:52:31,100 --> 00:52:35,330\nAnd when we get back, we're going to put\nin some special route maps that's going\n\n942\n00:52:35,330 --> 00:52:38,250\nto fix this problem and\nget our network on the up-and-up.\n\n943\n00:52:38,250 --> 00:52:39,233\nSo stay tuned.\n\n944\n00:52:39,233 --> 00:52:40,566\nWe'll be back after this.\n\n945\n00:52:40,566 --> 00:52:44,366\n[SOUND] All right,\n\n946\n00:52:44,366 --> 00:52:49,942\nwelcome back everybody.\n\n947\n00:52:49,942 --> 00:52:52,553\nNow, in the environment that\nwe've built up so far this show,\n\n948\n00:52:52,553 --> 00:52:54,170\nwe've got a routing loop.\n\n949\n00:52:54,170 --> 00:52:55,880\nAnd because I'm the one who made the loop,\n\n950\n00:52:55,880 --> 00:52:58,550\nI know I can go in and\nfix it based on that metric.\n\n951\n00:52:58,550 --> 00:53:01,690\nBut the majority of the time,\nwe don't know how the loop got created, or\n\n952\n00:53:01,690 --> 00:53:03,710\nwe don't necessarily wanna go and\ntrack that down.\n\n953\n00:53:03,710 --> 00:53:06,930\nWe might have far more\nrouters involved in the loop.\n\n954\n00:53:06,930 --> 00:53:10,920\nSo it's better instead to put\na safety mechanism in place.\n\n955\n00:53:12,150 --> 00:53:13,461\nIt stops the route loop so\n\n956\n00:53:13,461 --> 00:53:17,650\nthat we don't have to worry about things\nlike metrics and all that, all right?\n\n957\n00:53:17,650 --> 00:53:22,267\nAny time that you're redistributing,\nand you have more than one way in and\n\n958\n00:53:22,267 --> 00:53:26,608\nmore than one way out right,\nwhen you're doing the redistribution.\n\n959\n00:53:26,608 --> 00:53:31,834\nYou should put a little safety net in\nthere that says, look at the route and\n\n960\n00:53:31,834 --> 00:53:36,483\nif it originated from OSPF,\ndon't advertise it back into OSPF.\n\n961\n00:53:36,483 --> 00:53:41,110\nAnd if it originated in from RIP,\ndon't put it back into RIP, right?\n\n962\n00:53:41,110 --> 00:53:42,630\nPretty common sense.\n\n963\n00:53:42,630 --> 00:53:47,460\nThe problem is when you redistribute,\nOSPF and RIP are not compatible.\n\n964\n00:53:47,460 --> 00:53:49,750\nAnd OSPF and EIGRP are not compatible.\n\n965\n00:53:49,750 --> 00:53:51,270\nAnd EIGRP and RIP are not compatible.\n\n966\n00:53:51,270 --> 00:53:53,610\nAll three of them have different metrics.\n\n967\n00:53:53,610 --> 00:53:55,400\nSo the route is effectively destroyed.\n\n968\n00:53:55,400 --> 00:53:58,373\nIt gets mangled and then it gets\nchanged into this new protocol and\n\n969\n00:53:58,373 --> 00:53:59,790\ngets sent along.\n\n970\n00:53:59,790 --> 00:54:03,300\nHow do we know where the route came from?\n\n971\n00:54:03,300 --> 00:54:05,880\nAnd that's where route tagging comes in.\n\n972\n00:54:05,880 --> 00:54:10,230\nWhen you redistribute a route,\nyou can add a tag to the route.\n\n973\n00:54:10,230 --> 00:54:12,720\nIt's a little extra bit of information.\n\n974\n00:54:12,720 --> 00:54:15,590\nAnd you can use that\nextra bit of information\n\n975\n00:54:15,590 --> 00:54:19,390\nto learn about where that route came from,\nor really anything.\n\n976\n00:54:19,390 --> 00:54:21,620\nYou can use the tag for whatever you want.\n\n977\n00:54:21,620 --> 00:54:24,030\nThe way I'm gonna use it right here is for\nloop prevention, though.\n\n978\n00:54:24,030 --> 00:54:26,440\nI'm gonna tag the routes so\nI know where they came from.\n\n979\n00:54:27,690 --> 00:54:29,390\nI'm gonna do this with a route map.\n\n980\n00:54:29,390 --> 00:54:33,660\nWhen you redistribute, you can attach\na route map to your redistribution, and\n\n981\n00:54:33,660 --> 00:54:37,540\nI'm gonna take it, and as I redistribute\nroutes out to the other side,\n\n982\n00:54:37,540 --> 00:54:41,500\nI'm gonna add a little tag to them,\na tag that tells me where they came from.\n\n983\n00:54:41,500 --> 00:54:43,300\nNow the tag is just a number, right?\n\n984\n00:54:43,300 --> 00:54:45,220\nSo it's a numerical value.\n\n985\n00:54:45,220 --> 00:54:49,600\nAnd the way I normally do it, is I use\nthe admin distance of the protocol.\n\n986\n00:54:49,600 --> 00:54:54,400\nSo if I have a route that originated\nin RIP, I set the tag to 120.\n\n987\n00:54:54,400 --> 00:54:57,691\nIf the route originated in EIGRP,\nI set the tag to 90.\n\n988\n00:54:57,691 --> 00:55:00,608\nIf it originated in OSPF,\nI set the tag to 110.\n\n989\n00:55:00,608 --> 00:55:03,910\nBecause those are the default admin\ndistances for those protocols.\n\n990\n00:55:03,910 --> 00:55:08,775\nAnd if I look at a route in OSPF and\nI see it has a tag of 120.\n\n991\n00:55:08,775 --> 00:55:11,090\nI can say, oh,\nthat one came from RIP, right?\n\n992\n00:55:11,090 --> 00:55:13,500\nIt helps me to keep track\nof where it came from.\n\n993\n00:55:13,500 --> 00:55:15,400\nIf you've got multiple OSPF areas,\n\n994\n00:55:15,400 --> 00:55:18,300\nyou might wanna tag them with the OSPF\narea number or whatever you want.\n\n995\n00:55:18,300 --> 00:55:20,630\nYou can tag them with whatever you want.\n\n996\n00:55:20,630 --> 00:55:21,380\nAs long as it's a number.\n\n997\n00:55:21,380 --> 00:55:23,580\nAll right,\nI can see sort of that one in, right.\n\n998\n00:55:23,580 --> 00:55:25,520\nSo come up with a numerical\nscheme that works for\n\n999\n00:55:25,520 --> 00:55:28,110\nyou as far as being able to recognize\nwhere that route came from.\n\n1000\n00:55:28,110 --> 00:55:29,330\nAll right.\n\n1001\n00:55:29,330 --> 00:55:31,570\nSo that's what I'm gonna do\nis I'm gonna start taking it.\n\n1002\n00:55:31,570 --> 00:55:33,900\nAnd we'll go RIP to OSPF first.\n\n1003\n00:55:33,900 --> 00:55:36,600\nI'm gonna take my RIP routes and\n\n1004\n00:55:36,600 --> 00:55:41,708\nsay when I redistribute them\ninto OSPF tag on a tag of 120.\n\n1005\n00:55:41,708 --> 00:55:42,458\nAll right.\n\n1006\n00:55:42,458 --> 00:55:44,740\nSo let me jump over to router 3.\n\n1007\n00:55:45,750 --> 00:55:47,333\nAnd we'll start building this up.\n\n1008\n00:55:47,333 --> 00:55:49,844\nNow I don't need any access lists for\n\n1009\n00:55:49,844 --> 00:55:53,250\nthis one because I don't\ncare what network it is.\n\n1010\n00:55:53,250 --> 00:55:55,270\nI care about the routing protocol.\n\n1011\n00:55:55,270 --> 00:55:58,720\nAnd the routing protocol's already\ndetermined by the redistribute command.\n\n1012\n00:55:58,720 --> 00:56:02,725\nSo I really just need a route map\nthat has tag stuff in it, right, and\n\n1013\n00:56:02,725 --> 00:56:04,310\nthat's about it.\n\n1014\n00:56:04,310 --> 00:56:07,380\nSo I'm gonna write\na really simple route map.\n\n1015\n00:56:07,380 --> 00:56:13,590\nI'm gonna do a route map, and I'll call\nthis one, rip-into-ospf, so this is\n\n1016\n00:56:13,590 --> 00:56:18,940\nwhen I'm taking RIP routes and advertising\nthem into OSPF, and I'll do a permit 10.\n\n1017\n00:56:18,940 --> 00:56:22,580\nSo, this is my first line,\nI'm permitting traffic in, and\n\n1018\n00:56:22,580 --> 00:56:27,420\nI'm gonna say, set, so no match statement,\nand when you have no match statement,\n\n1019\n00:56:27,420 --> 00:56:29,300\nit means it matches everything.\n\n1020\n00:56:29,300 --> 00:56:33,310\nSo, I'm matching everything\ncoming from RIP to OSPF.\n\n1021\n00:56:33,310 --> 00:56:37,520\nAnd I'll set the tag to 120, all right?\n\n1022\n00:56:37,520 --> 00:56:43,190\nSo that's gonna set that tag to 120\nwhen I advertise it across, all right?\n\n1023\n00:56:43,190 --> 00:56:49,230\nAnd now if I get into router ospf 1,\nI have that redistribute command.\n\n1024\n00:56:49,230 --> 00:56:56,020\nI did redistribute, rip, metric 10,000,\nthat's what I did earlier.\n\n1025\n00:56:56,020 --> 00:56:57,840\nRight.\nThat's the redistribution command.\n\n1026\n00:56:57,840 --> 00:57:03,210\nOr just to make sure, I get it exactly\naccurate, let me pull it out of my config.\n\n1027\n00:57:03,210 --> 00:57:05,410\nI wanna make sure I'm\ndoing apples to applies.\n\n1028\n00:57:05,410 --> 00:57:05,910\nRight.\n\n1029\n00:57:09,060 --> 00:57:11,090\nSo if I look at it here's\nthe command I did.\n\n1030\n00:57:11,090 --> 00:57:14,850\nActually I did it with a metric of,\nno, here it is, yeah.\n\n1031\n00:57:14,850 --> 00:57:18,133\nRedistribute rip metric 10,000.\n\n1032\n00:57:21,172 --> 00:57:22,040\nAll right.\n\n1033\n00:57:22,040 --> 00:57:23,580\nSo, that's the command that I ran earlier.\n\n1034\n00:57:23,580 --> 00:57:26,630\nSo, I redistributed it in\nwith a pretty large metric.\n\n1035\n00:57:26,630 --> 00:57:28,170\nAll right.\nAnd I used that subnets tag.\n\n1036\n00:57:28,170 --> 00:57:29,900\nSo, I'd bring the subnets over with it.\n\n1037\n00:57:29,900 --> 00:57:31,980\nAnd I'm just gonna add\na little bit more to it.\n\n1038\n00:57:31,980 --> 00:57:34,560\nYou'll see where I can\ntack that route map on.\n\n1039\n00:57:34,560 --> 00:57:38,899\nAnd I'll say, route map, rip into ospf.\n\n1040\n00:57:38,899 --> 00:57:41,100\nAll right?\n\n1041\n00:57:41,100 --> 00:57:46,050\nSo now,\nas the routes move from rip into ospf,\n\n1042\n00:57:46,050 --> 00:57:50,020\nthey'll pass that route map, and\nall the route map does is, it says,\n\n1043\n00:57:50,020 --> 00:57:53,150\nmap all the routes and\nstick on a little tag to them.\n\n1044\n00:57:53,150 --> 00:57:56,220\nStick a tag on that says\nthat it came from rip.\n\n1045\n00:57:59,090 --> 00:58:02,050\nNow, that's happening on router three.\n\n1046\n00:58:02,050 --> 00:58:06,470\nSo as the routes pass through router\nthree, over into this other network,\n\n1047\n00:58:06,470 --> 00:58:11,960\nthey get converted to OSPF, and\nthey should have that tag on them.\n\n1048\n00:58:11,960 --> 00:58:13,220\nSo I'm gonna jump over to router five.\n\n1049\n00:58:14,220 --> 00:58:19,200\nNow router five already had a route to\n192.168.1.0, it already had it right.\n\n1050\n00:58:19,200 --> 00:58:23,060\nAnd there they are as those OE2 routes.\n\n1051\n00:58:23,060 --> 00:58:25,500\nOkay, so nothing changes there.\n\n1052\n00:58:25,500 --> 00:58:27,470\nIf I do a show IP route\nthey should still be there.\n\n1053\n00:58:27,470 --> 00:58:30,140\nThere they are, nothing new.\n\n1054\n00:58:30,140 --> 00:58:32,880\nRight, you don't actually see\nthe tag here on this screen,\n\n1055\n00:58:32,880 --> 00:58:34,490\nyou have to run the more detailed screen.\n\n1056\n00:58:34,490 --> 00:58:38,060\nYou have to say, show IP route 192.168.1.0\npull up that specific network.\n\n1057\n00:58:39,098 --> 00:58:42,250\nAll right, and when I look at it,\n\n1058\n00:58:42,250 --> 00:58:46,240\nsee how I've got this new line here,\nroute tag 120.\n\n1059\n00:58:46,240 --> 00:58:50,110\nI see it as an OE 2, I know it's external.\n\n1060\n00:58:50,110 --> 00:58:52,680\nBut I don't know where it came from,\nI don't have any clue.\n\n1061\n00:58:52,680 --> 00:58:58,060\nBut now I look at it and I see this tag\n120 and I go, yeah, that came from rip.\n\n1062\n00:58:58,060 --> 00:59:01,790\nRight, that came from rip so\nnow I know where it originated and\n\n1063\n00:59:01,790 --> 00:59:03,065\nit's in OSPF, that's great.\n\n1064\n00:59:04,160 --> 00:59:08,670\nWell now what I can do,\nis I can jump down to Router 4.\n\n1065\n00:59:08,670 --> 00:59:11,630\nRouter 4 is this guy, and that's' the one\nthat's causing our problem, right?\n\n1066\n00:59:11,630 --> 00:59:16,060\nRouter 4, when it redistributes OSPF into\nRIP, that's when it's breaking things.\n\n1067\n00:59:16,060 --> 00:59:21,520\nI can take Router 4, and put a route map\nthere that said when you redistribute,\n\n1068\n00:59:21,520 --> 00:59:25,620\nif the route has a tag of 120,\ndon't redistribute it.\n\n1069\n00:59:25,620 --> 00:59:27,000\nBut if it has any other tag.\n\n1070\n00:59:27,000 --> 00:59:29,260\nGo ahead and send it along,\nor not tag at all, right?\n\n1071\n00:59:29,260 --> 00:59:30,230\nSend it along.\n\n1072\n00:59:30,230 --> 00:59:33,140\nSo I can jump in there, and I can fix it.\n\n1073\n00:59:33,140 --> 00:59:35,590\nAll right, and so\nthat's what I'm gonna do next.\n\n1074\n00:59:35,590 --> 00:59:41,130\nAs I'll jump over to router 4, and\nhere I'm gonna create a route map also.\n\n1075\n00:59:41,130 --> 00:59:44,475\nNow this route map is going the other\ndirection, I'm gonna call this one\n\n1076\n00:59:44,475 --> 00:59:50,800\nospf-into-rip, and\nI'm gonna start this one with a deny line.\n\n1077\n00:59:51,960 --> 00:59:56,570\nI'm gonna deny something in my route map,\nI'm gonna match, tag 120.\n\n1078\n00:59:56,570 --> 01:00:01,780\nIf I've got a route that's\ntagged as 120 I'm gonna deny it.\n\n1079\n01:00:01,780 --> 01:00:04,520\nAnd I'm not gonna do a set command,\n\n1080\n01:00:04,520 --> 01:00:07,090\nI don't wanna change the route,\nI wanna throw it away.\n\n1081\n01:00:07,090 --> 01:00:09,728\nAnd it's gonna be thrown away because\nof this deny right here, okay.\n\n1082\n01:00:10,820 --> 01:00:14,980\nSo I'm gonna deny anything that\ncame from Rip going back into RIP.\n\n1083\n01:00:16,240 --> 01:00:18,810\nAnd then I'll add another line.\n\n1084\n01:00:18,810 --> 01:00:23,450\nThat says permit 20, and\nI'm just gonna leave it empty.\n\n1085\n01:00:23,450 --> 01:00:26,710\nIf you leave it empty,\nwith no match statement, and\n\n1086\n01:00:26,710 --> 01:00:30,530\nno set statements, that just says,\nallow it through and don't mess with it.\n\n1087\n01:00:30,530 --> 01:00:31,980\nRight?\nDon't modify it.\n\n1088\n01:00:31,980 --> 01:00:32,720\nSo now,\n\n1089\n01:00:32,720 --> 01:00:37,760\nI'll be properly advertising my OSPF\nroutes, and trimming out the RIP ones.\n\n1090\n01:00:39,120 --> 01:00:41,790\nAnd now, all I need to do is get into.\n\n1091\n01:00:41,790 --> 01:00:46,130\nRouter rip, and pull up my\nredistribution command, right here,\n\n1092\n01:00:46,130 --> 01:00:48,230\nthat's where I redistribute it.\n\n1093\n01:00:48,230 --> 01:00:55,280\nAnd I'm just gonna add to that\nroute-map ospf-into- rip.\n\n1094\n01:00:56,390 --> 01:01:00,470\nAnd now as it redistributed the routes\nthrough, it's going to apply this.\n\n1095\n01:01:00,470 --> 01:01:04,120\nNow before I press enter on that,\nI'm gonna jump back to router 2, and\n\n1096\n01:01:04,120 --> 01:01:06,030\njust make sure my loop is still there.\n\n1097\n01:01:06,030 --> 01:01:09,510\nRight, we took a break,\nmaybe the loop went away, you never know.\n\n1098\n01:01:09,510 --> 01:01:10,020\nSo here we go.\n\n1099\n01:01:10,020 --> 01:01:16,280\nSo I've got it and on router 2,\nit's pointing to E0/3 for that network.\n\n1100\n01:01:16,280 --> 01:01:23,220\nAnd if I look at my diagram, router\ntwo e0/3 points back to router four.\n\n1101\n01:01:23,220 --> 01:01:24,740\nYep, so my loop is still there.\n\n1102\n01:01:24,740 --> 01:01:27,370\nIt should be pointing to e00, it's not.\n\n1103\n01:01:27,370 --> 01:01:28,380\nSo I know I've still got my loop.\n\n1104\n01:01:29,550 --> 01:01:34,380\nSo I'll jump back over here, and on router\nfour I'm just gonna press Enter, so\n\n1105\n01:01:34,380 --> 01:01:36,830\nthat route map takes effect.\n\n1106\n01:01:37,960 --> 01:01:42,370\nNow that's gonna stop me\nfrom advertising the route.\n\n1107\n01:01:42,370 --> 01:01:46,130\nBut unfortunately rip is gonna do\nit's crazy thing where it has to\n\n1108\n01:01:46,130 --> 01:01:49,420\nrun it's timers and\nall that stuff before it ages out.\n\n1109\n01:01:49,420 --> 01:01:52,552\nSo I don't expect the route to go away,\nright away.\n\n1110\n01:01:52,552 --> 01:01:54,360\nAll right, poison reverse,\n\n1111\n01:01:54,360 --> 01:01:56,940\nis really looking for failures,\nthis isn't a failure,\n\n1112\n01:01:56,940 --> 01:02:00,760\nthis is me stripping out the route, so\nI had to kind of stop advertising it.\n\n1113\n01:02:00,760 --> 01:02:05,390\nI have seen some of like the really\nhigh end routers will actually pull it.\n\n1114\n01:02:05,390 --> 01:02:08,610\nI'm pretty sure these routers\nwon't though, let's see.\n\n1115\n01:02:08,610 --> 01:02:11,970\nSo if I do show IP route,\nI expect to see the old route still.\n\n1116\n01:02:11,970 --> 01:02:15,780\nAnd, no, it's actually already fixed it,\nso there we go.\n\n1117\n01:02:15,780 --> 01:02:23,220\nSo I can see that now on router two\n192.168.1.0/24 is pointing to E0/0.\n\n1118\n01:02:23,220 --> 01:02:25,970\nThe loop is gone.\n\n1119\n01:02:25,970 --> 01:02:30,450\nI'm not allowing that bad route\nto come in like it was before.\n\n1120\n01:02:30,450 --> 01:02:31,820\nI'm trimming that off.\n\n1121\n01:02:31,820 --> 01:02:32,640\nAnd it's not coming in.\n\n1122\n01:02:32,640 --> 01:02:33,420\nAll right.\n\n1123\n01:02:33,420 --> 01:02:35,670\nBut I am still getting\nroutes from router 4.\n\n1124\n01:02:35,670 --> 01:02:38,440\nI see a lot of routes that\nare coming in on E0/3.\n\n1125\n01:02:38,440 --> 01:02:42,330\nThose are ones that\nare coming from router four.\n\n1126\n01:02:42,330 --> 01:02:45,140\nI'm just not getting\nthe loop ones anymore.\n\n1127\n01:02:45,140 --> 01:02:46,200\nAll right.\n\n1128\n01:02:46,200 --> 01:02:48,940\nThat fixes the problem.\n\n1129\n01:02:48,940 --> 01:02:53,800\nSo we can use route tags to\nreally make this work for us.\n\n1130\n01:02:53,800 --> 01:02:54,590\nOkay?\n\n1131\n01:02:54,590 --> 01:02:58,000\nNow in my environment,\nwhat I've got built here in this lab,\n\n1132\n01:02:59,975 --> 01:03:05,813\nI'm redistributing RIP to OSPF up here,\nand OSPF back to RIP down here.\n\n1133\n01:03:05,813 --> 01:03:11,945\nIn real-life land, you're normally\ngonna do both in both places.\n\n1134\n01:03:11,945 --> 01:03:17,190\nIn other words, I would be\nredistributing both ways down here,\n\n1135\n01:03:17,190 --> 01:03:20,160\nas well as both ways up top, right?\n\n1136\n01:03:20,160 --> 01:03:23,370\nSo it would be a little more like that.\n\n1137\n01:03:23,370 --> 01:03:28,130\nBecause you want full availability,\nboth ways to these two different paths.\n\n1138\n01:03:28,130 --> 01:03:31,130\nAnd so our route maps start\nto get a little more complex.\n\n1139\n01:03:31,130 --> 01:03:36,080\nBut I wanted to show you guys the simple\nway first, and then we'll come in and\n\n1140\n01:03:36,080 --> 01:03:37,470\ndo the full way here in just a moment.\n\n1141\n01:03:38,650 --> 01:03:43,458\nSo first thing's first,\nlet's take a look at what I did.\n\n1142\n01:03:43,458 --> 01:03:48,129\nIf I look at my running config\non router 3, this guy up top.\n\n1143\n01:03:48,129 --> 01:03:50,417\nSo on router 3.\n\n1144\n01:03:50,417 --> 01:03:53,209\nIf I do a show run here and\njust kind of pull up what we've got.\n\n1145\n01:03:55,788 --> 01:03:56,792\nHere we go.\n\n1146\n01:03:56,792 --> 01:04:04,090\nSo when I redistributed from rip,\nI attached that route map that I made.\n\n1147\n01:04:04,090 --> 01:04:05,980\nAnd the route map just stated\n\n1148\n01:04:07,360 --> 01:04:11,480\nright here that everything that gets\nredistributed gets a tag of 120.\n\n1149\n01:04:11,480 --> 01:04:12,400\nAll right?\n\n1150\n01:04:13,710 --> 01:04:15,240\nWhy would I need to do anything else?\n\n1151\n01:04:15,240 --> 01:04:16,750\nWhy wouldn't that be enough?\n\n1152\n01:04:16,750 --> 01:04:18,710\nWell, here's the problem\nI have to watch out for.\n\n1153\n01:04:20,520 --> 01:04:23,550\nRouter two is advertising\nroutes into router three.\n\n1154\n01:04:23,550 --> 01:04:28,660\nRouter three is taking those routes,\ntagging them with 120 and\n\n1155\n01:04:28,660 --> 01:04:31,140\nsending them over to router five.\n\n1156\n01:04:31,140 --> 01:04:34,040\nWell what about routes that\ncame in from router 4?\n\n1157\n01:04:34,040 --> 01:04:39,015\nRoutes from router 4 come in to router\n2 and get advertised back to router 3.\n\n1158\n01:04:39,015 --> 01:04:41,796\nRouter 3 might tag those 120 also.\n\n1159\n01:04:41,796 --> 01:04:45,400\nEven though they didn't come from RIP,\nthey actually came from OSPF.\n\n1160\n01:04:45,400 --> 01:04:48,090\nI can be tagging them in properly.\n\n1161\n01:04:48,090 --> 01:04:52,120\nSo we actually have to protect\nour network both ways.\n\n1162\n01:04:52,120 --> 01:04:55,700\nWe have to protect our RIP\nroutes from coming back to RIP.\n\n1163\n01:04:55,700 --> 01:05:00,250\nAnd we've got to protect our OSPF\nroutes coming back to OSPF, right?\n\n1164\n01:05:00,250 --> 01:05:03,660\nSo there's a few different things that\nwe've gotta do to protect our network.\n\n1165\n01:05:03,660 --> 01:05:06,520\nAnd that's when these route maps\nstart to get a lot more complex,\n\n1166\n01:05:06,520 --> 01:05:08,400\na lot more challenging, all right?\n\n1167\n01:05:08,400 --> 01:05:13,150\nSo the route maps that we would actually\nwrite are a little more involved, okay?\n\n1168\n01:05:13,150 --> 01:05:15,070\nLet me get in here and we'll fix that.\n\n1169\n01:05:15,070 --> 01:05:19,100\nSo first off I would start\nwith my existing route map,\n\n1170\n01:05:21,170 --> 01:05:26,070\nwhich was just the one that said rip\ninto ospf tag everything one twenty.\n\n1171\n01:05:27,320 --> 01:05:29,810\nI need to add another line before that.\n\n1172\n01:05:29,810 --> 01:05:32,820\nThat says,\ndeny anything that's tagged 110.\n\n1173\n01:05:32,820 --> 01:05:34,550\nThat would be my OSPF,\n\n1174\n01:05:34,550 --> 01:05:39,120\ndeny that first, than anything\nthat's left, go ahead and tag 120.\n\n1175\n01:05:39,120 --> 01:05:43,620\nSo I'm gonna add an extra line to that,\nI'm gonna say route dash map.\n\n1176\n01:05:44,900 --> 01:05:50,796\nRip into ospf deny 5.\n\n1177\n01:05:50,796 --> 01:05:54,720\nI'm doing deny 5 because I want\nthis to be before line 10, right?\n\n1178\n01:05:54,720 --> 01:05:58,910\nSo I'm doing deny five and\nI'll just say match tag one ten.\n\n1179\n01:06:00,340 --> 01:06:05,000\nAll right, so\nif I look at my route map now It says,\n\n1180\n01:06:05,000 --> 01:06:10,410\nif something is a tag 110, deny it and\nthen everything else tag as 120.\n\n1181\n01:06:10,410 --> 01:06:14,870\nThat way I'll know that my OSPF\nroutes aren't going back into OSPF.\n\n1182\n01:06:16,460 --> 01:06:21,060\nThen I'll create another route map,\nwhich will be.\n\n1183\n01:06:21,060 --> 01:06:25,390\nSo that was rip into ospf,\nthis will be ospf into rip.\n\n1184\n01:06:27,080 --> 01:06:29,750\nAnd I'll do a deny 10.\n\n1185\n01:06:29,750 --> 01:06:35,324\nAnd I'm gonna deny any RIP\nroutes coming back into RIP,\n\n1186\n01:06:35,324 --> 01:06:38,527\nso I'll say match tag 120 and\n\n1187\n01:06:38,527 --> 01:06:43,634\nthat's gonna deny and\nthen I'll do a permit 20.\n\n1188\n01:06:47,280 --> 01:06:50,820\nAnd for\nall the OSPF routes going into RIP.\n\n1189\n01:06:50,820 --> 01:06:53,926\nI'll tag them 110.\n\n1190\n01:06:53,926 --> 01:06:54,460\nAll right.\n\n1191\n01:06:54,460 --> 01:06:58,123\nSo the two route maps are kind\nof the opposite of each other.\n\n1192\n01:07:01,928 --> 01:07:04,320\nLet me show you what that\nlooks like in the config.\n\n1193\n01:07:04,320 --> 01:07:05,430\nAll right?\n\n1194\n01:07:05,430 --> 01:07:10,780\nSo if I hunt that down in my config,\nhere's my two route maps.\n\n1195\n01:07:10,780 --> 01:07:14,930\nThe first one is for\nRIP traffic going to OSPF.\n\n1196\n01:07:14,930 --> 01:07:18,120\nThe first thing I do is\nI block any OSPF routes.\n\n1197\n01:07:18,120 --> 01:07:21,160\nBecause I don't want OSPF\nroutes going back into OSPF.\n\n1198\n01:07:21,160 --> 01:07:23,330\nThey may look like RIP now but\n\n1199\n01:07:23,330 --> 01:07:26,360\nthey have a tag that tells me\nthey came from OSPF initially.\n\n1200\n01:07:27,610 --> 01:07:31,220\nAnd then everything else I tag\nas having come from rip and\n\n1201\n01:07:31,220 --> 01:07:35,050\nthen I send it into OSPF and on the OSPF\nside we'll know where it came from.\n\n1202\n01:07:36,640 --> 01:07:37,770\nAnd then I just do the opposite.\n\n1203\n01:07:37,770 --> 01:07:39,670\nThis route map here is the exact opposite.\n\n1204\n01:07:39,670 --> 01:07:42,858\nI deny anything tagged\nas coming from RIP and\n\n1205\n01:07:42,858 --> 01:07:48,468\nthen everything that is left I tag as\ncoming from OSPF and I permit it through.\n\n1206\n01:07:48,468 --> 01:07:50,536\nThe nice thing about this is,\n\n1207\n01:07:50,536 --> 01:07:55,347\nI can use the same exact set of route\nmaps on the other router, right?\n\n1208\n01:07:55,347 --> 01:07:59,480\nOn the other router because really, these\ntwo routers are doing the same thing.\n\n1209\n01:07:59,480 --> 01:08:04,100\nSo I can just copy and paste these two\nroute maps between them to reuse them.\n\n1210\n01:08:04,100 --> 01:08:06,870\nSo that's exactly what I'm going\nto do because I am a lazy typer.\n\n1211\n01:08:06,870 --> 01:08:09,320\nSo I'm going to jump over to,\nwhat's the other guy?\n\n1212\n01:08:09,320 --> 01:08:09,980\nRouter 4.\n\n1213\n01:08:11,170 --> 01:08:16,330\nAnd on router 4 I'm just gonna paste\nthat right in and there we go.\n\n1214\n01:08:16,330 --> 01:08:20,520\nAnd I'm just gonna do a show route map\nto make sure I didn't get any kind of\n\n1215\n01:08:20,520 --> 01:08:22,400\nduplicates or messy stuff.\n\n1216\n01:08:22,400 --> 01:08:22,900\nWhoops.\n\n1217\n01:08:24,710 --> 01:08:26,570\nJust to make sure it works\nthe way that I want.\n\n1218\n01:08:26,570 --> 01:08:29,270\nSo here's my first one, ospf into rip.\n\n1219\n01:08:29,270 --> 01:08:31,220\nIt's blocking RIP and allowing OSPF.\n\n1220\n01:08:31,220 --> 01:08:33,750\nAnd then I've got rip into ospf.\n\n1221\n01:08:33,750 --> 01:08:38,030\nIt's blocking OSPF and then permitting\neverything else tagged as RIP.\n\n1222\n01:08:38,030 --> 01:08:40,280\nSo my maps are the way\nthat I want them to be.\n\n1223\n01:08:40,280 --> 01:08:42,360\nAll right?\n\n1224\n01:08:42,360 --> 01:08:44,569\nAnd then lastly I just want to\nadd my redistribute commands.\n\n1225\n01:08:44,569 --> 01:08:49,303\nAnd now because I've got route maps that\nare protecting me from loops I can freely\n\n1226\n01:08:49,303 --> 01:08:53,064\nadd in all the redistribution I\nwant between these routers, and\n\n1227\n01:08:53,064 --> 01:08:55,470\nI know that a loop won't be possible.\n\n1228\n01:08:55,470 --> 01:08:59,330\nBecause I'm not allowing\nmy own routes to come back\n\n1229\n01:08:59,330 --> 01:09:01,700\nbecause the tags are helping me spot that.\n\n1230\n01:09:01,700 --> 01:09:02,370\nAll right.\n\n1231\n01:09:02,370 --> 01:09:03,130\nSo, let me show that.\n\n1232\n01:09:03,130 --> 01:09:05,010\nWe'll jump over router 3.\n\n1233\n01:09:05,010 --> 01:09:10,010\nRouter 3 is already redistributing in\nboth directions, if I recall correctly,\n\n1234\n01:09:10,010 --> 01:09:14,540\nLet me just double check that.\n\n1235\n01:09:14,540 --> 01:09:16,900\nSo OSPF, oh, nope,\nI'm not redirecting in that direction.\n\n1236\n01:09:16,900 --> 01:09:19,558\nBut here I've already got this one for\nRIP.\n\n1237\n01:09:19,558 --> 01:09:24,580\nI'm redistributing oapf into rip and\napplying my route map, so that's good.\n\n1238\n01:09:24,580 --> 01:09:28,660\nBut I'm not doing it for OSPF,\nso I need to get into OSPF and\n\n1239\n01:09:28,660 --> 01:09:32,340\nI need to say redistribute rip\n\n1240\n01:09:34,170 --> 01:09:39,850\nwith the subnets and\na sub metric of one if I want.\n\n1241\n01:09:39,850 --> 01:09:45,401\nAnd I'll say route map rip into ospf.\n\n1242\n01:09:45,401 --> 01:09:47,890\nSo now I'm redirecting both ways.\n\n1243\n01:09:50,180 --> 01:09:53,720\nAnd I just need to jump over to, oh you\nknow I was in router four when I did that.\n\n1244\n01:09:53,720 --> 01:09:55,950\nShoot, oh well,\nI needed to do both ways here too.\n\n1245\n01:09:55,950 --> 01:09:59,720\nSo it's done on router 4,\nnow I need to do the same on router 3.\n\n1246\n01:09:59,720 --> 01:10:03,960\nSo on router 3 I'm just going to\nsee if I'm already doing that.\n\n1247\n01:10:03,960 --> 01:10:08,425\nSo I can see that I'm doing ospf and I've\nalready got the route map in place, but\n\n1248\n01:10:08,425 --> 01:10:12,243\nrip doesn't have the route map so\nI do need to get that squared away.\n\n1249\n01:10:14,425 --> 01:10:16,445\nSo I'll go ahead and\nget in there and do that.\n\n1250\n01:10:16,445 --> 01:10:19,951\nSo I'm going to get into router rip and\nI'm just going to run that same\n\n1251\n01:10:19,951 --> 01:10:24,195\nredistribute command, I'm just going to\nadd on to it that it'll have a route map.\n\n1252\n01:10:24,195 --> 01:10:31,973\nAnd that route map will be ospf into rip.\n\n1253\n01:10:31,973 --> 01:10:33,180\nAll right?\n\n1254\n01:10:33,180 --> 01:10:35,090\nSo now that I've got that applied,\n\n1255\n01:10:35,090 --> 01:10:39,450\nnow they're checking the tags before\nthey do the redistribute, right?\n\n1256\n01:10:39,450 --> 01:10:43,510\nThose tags are really handy because really\nwhen you redistribute a route from one\n\n1257\n01:10:43,510 --> 01:10:47,320\nprotocol to another It has to\ncompletely rebuild that route, and\n\n1258\n01:10:47,320 --> 01:10:48,280\nyou lose it's origin.\n\n1259\n01:10:48,280 --> 01:10:49,980\nYou don't know where it came from.\n\n1260\n01:10:49,980 --> 01:10:52,860\nIn OSPF, at least it marks it external,\nso at least you can tell that.\n\n1261\n01:10:52,860 --> 01:10:56,730\nI can do a route map that said\ndon't redistribute external routes.\n\n1262\n01:10:56,730 --> 01:10:59,910\nThat would solve this problem,\ntoo, on the OSPF side.\n\n1263\n01:10:59,910 --> 01:11:02,190\nBut on the RIP side,\nyou don't have that functionality.\n\n1264\n01:11:02,190 --> 01:11:04,860\nThere's no such thing as\nan external RIP route.\n\n1265\n01:11:04,860 --> 01:11:07,070\nI can't use that as a method, so\n\n1266\n01:11:07,070 --> 01:11:10,670\ninstead, the only option I\nreally have is to use a tag.\n\n1267\n01:11:10,670 --> 01:11:15,340\nI can do a tag that says, oh yeah,\nthis came from some other protocol.\n\n1268\n01:11:15,340 --> 01:11:18,720\nAnd I can filter out and block it,\nand that should be happening.\n\n1269\n01:11:18,720 --> 01:11:23,229\nSo now, if I jump over to router 2,\nand I look at its routing table.\n\n1270\n01:11:23,229 --> 01:11:28,201\nWhat I expect to see is,\nI've got one route, so 192.168.1.0,\n\n1271\n01:11:28,201 --> 01:11:30,387\nand it's the proper direction.\n\n1272\n01:11:30,387 --> 01:11:32,180\nI can get there one way.\n\n1273\n01:11:33,420 --> 01:11:37,370\nNotice I do have like two\nroutes to 192.168.3.0, right?\n\n1274\n01:11:38,640 --> 01:11:43,320\nWell, that's because I've got two\ndifferent paths that have an equal metric.\n\n1275\n01:11:43,320 --> 01:11:46,311\nRIP uses hop count, and\nthese guys both have a metric of one,\n\n1276\n01:11:46,311 --> 01:11:49,375\nI've got two ways to get to\nthe same destination, all right?\n\n1277\n01:11:49,375 --> 01:11:52,251\nI actually have a little bit of\nsub-optimal routing on that one.\n\n1278\n01:11:52,251 --> 01:11:54,679\nWhen I redistributed, I told it,\n\n1279\n01:11:54,679 --> 01:11:59,890\nwhen you redistribute an OSPF route\ninto RIP, just give it a metric of 1.\n\n1280\n01:11:59,890 --> 01:12:05,730\nWell, in this scenario it's showing that\nRouter 2 can get to this one network\n\n1281\n01:12:05,730 --> 01:12:09,620\nand both the paths have a metric of 1 But\nif I look at my diagram,\n\n1282\n01:12:10,670 --> 01:12:15,220\nif Router 2, which is this guy here,\n\n1283\n01:12:15,220 --> 01:12:22,270\nwere to go to 192.168.3.0 ti could go\nright to Router 3 and it's one hop away.\n\n1284\n01:12:22,270 --> 01:12:25,530\nOr it could go to Router 4,\nwhich would then go to Router 5 and\n\n1285\n01:12:25,530 --> 01:12:29,130\nthen go to Router 3 and then get there,\nthat's three hops away.\n\n1286\n01:12:29,130 --> 01:12:32,660\nSo why does it show them both as one hop\nwhen one way is actually three hops?\n\n1287\n01:12:33,710 --> 01:12:35,580\nBecause of those redistributed commands.\n\n1288\n01:12:35,580 --> 01:12:40,670\nWhen I redistributed that route,\nthe metric, I had it set to one.\n\n1289\n01:12:40,670 --> 01:12:43,380\nAnd so they'd both come in\nwith a metric of one, and\n\n1290\n01:12:43,380 --> 01:12:46,610\nRouter two will load balance,\nthat's sub-optimal routing.\n\n1291\n01:12:46,610 --> 01:12:51,740\nIn that scenario, what I should do to\nreally fix it is to go in to my route map\n\n1292\n01:12:51,740 --> 01:12:54,888\nand add a route map entry that\nmatches that specific network,\n\n1293\n01:12:54,888 --> 01:12:56,430\nthat matches 192.168.3.0 and\n\n1294\n01:12:56,430 --> 01:13:01,070\ninstead of assigning it a metric of one,\nassign it a metric of three.\n\n1295\n01:13:01,070 --> 01:13:04,950\nThen that way, Router 2 would know\nI could go three hops this way or\n\n1296\n01:13:04,950 --> 01:13:07,670\none hop this way and\nget to the same place.\n\n1297\n01:13:07,670 --> 01:13:10,500\nBut one hop is better than three,\nI wanna go that way, right.\n\n1298\n01:13:10,500 --> 01:13:14,670\nRedistribution is rarely a matter of just\nsetting a default metric and being done.\n\n1299\n01:13:14,670 --> 01:13:17,440\nYou normally need to be specific\nabout your metrics, and\n\n1300\n01:13:17,440 --> 01:13:20,120\nroute maps are how you do that, right.\n\n1301\n01:13:20,120 --> 01:13:23,950\nBut this section isn't on suboptimal\nrouting, this one's on loop prevention.\n\n1302\n01:13:23,950 --> 01:13:27,520\nAnd while I do have a suboptimal route,\nit's not a loop, right?\n\n1303\n01:13:27,520 --> 01:13:29,520\nSo I am still able to get there, and\n\n1304\n01:13:29,520 --> 01:13:33,490\nI should have full connectivity between\nmy entire network with no loops.\n\n1305\n01:13:35,380 --> 01:13:40,230\nNow the best way to test for that is\nto do pings and trace routes, right?\n\n1306\n01:13:40,230 --> 01:13:42,820\nTrace routes will show you right away\nwhether you've gotta loop pings.\n\n1307\n01:13:42,820 --> 01:13:46,560\nIf you don't get to your destination,\nwe'll show you also but you should be able\n\n1308\n01:13:46,560 --> 01:13:51,058\nto reach from end to end across your\nnetwork on a fully converged network.\n\n1309\n01:13:51,058 --> 01:13:55,330\nSo Router 1 should be able to\n\n1310\n01:13:55,330 --> 01:14:00,440\nping 192.168.5.1 way on the other side\nof the network even if we source it\n\n1311\n01:14:00,440 --> 01:14:04,880\nfrom an internal interface, like that.\n\n1312\n01:14:04,880 --> 01:14:07,768\nPinging from one side of the network\nall the way over to the other.\n\n1313\n01:14:07,768 --> 01:14:09,893\n>> Actually I picked the wrong interface,\ndidn't I?\n\n1314\n01:14:09,893 --> 01:14:12,493\nI wanted e0/1.\n\n1315\n01:14:12,493 --> 01:14:14,535\nI want to go truly end to end, so\n\n1316\n01:14:14,535 --> 01:14:20,603\nthe 192.168.1.1 network all the way\nto the 192.168.5.1 network.\n\n1317\n01:14:20,603 --> 01:14:21,682\nThere we go.\n\n1318\n01:14:21,682 --> 01:14:24,150\nGot it.\nReaching all the way across.\n\n1319\n01:14:24,150 --> 01:14:25,840\nAll right, that's what we expect to see.\n\n1320\n01:14:25,840 --> 01:14:29,860\nNow those route maps can be\na little bit confusing, I know.\n\n1321\n01:14:29,860 --> 01:14:32,140\nI showed you guys here on actual routers.\n\n1322\n01:14:32,140 --> 01:14:34,080\nI'll post the show notes for\nthis episode and\n\n1323\n01:14:34,080 --> 01:14:37,340\nI've got those same route maps printed\nright here in the show notes for\n\n1324\n01:14:37,340 --> 01:14:40,360\nyou guys so you can see them and\nsee how that configuration works.\n\n1325\n01:14:40,360 --> 01:14:42,480\nDefinitely useful stuff to have there.\n\n1326\n01:14:42,480 --> 01:14:46,210\nBut route tagging, it's intimidating,\nbut it's really not that bad.\n\n1327\n01:14:46,210 --> 01:14:50,580\nIt's a neat technology,\nvery effective, it does its job and\n\n1328\n01:14:50,580 --> 01:14:54,330\nyou can make a very safe network this way.\n\n1329\n01:14:54,330 --> 01:14:57,720\nNow, a junior network admin could\ncome in and do some bad metrics and\n\n1330\n01:14:57,720 --> 01:15:00,140\nredistribution and\nyou don't have to worry about a loop.\n\n1331\n01:15:00,140 --> 01:15:03,100\nYou might get suboptimal routing,\nright, but you won't get a loop,\n\n1332\n01:15:03,100 --> 01:15:06,000\nand that's the key thing, all right.\n\n1333\n01:15:06,000 --> 01:15:10,960\nSo, as far as loop prevention goes,\nthose are our three technologies, right?\n\n1334\n01:15:10,960 --> 01:15:14,514\nSo in this show we talked about,\nwe started with split horizon, right.\n\n1335\n01:15:14,514 --> 01:15:19,570\nDon't advertise a route you learned on\nan interface back out that same interface.\n\n1336\n01:15:19,570 --> 01:15:21,560\nWe learned about poison reverse.\n\n1337\n01:15:21,560 --> 01:15:25,340\nWhen you lose a network Immediately\nadvertise that network out with\n\n1338\n01:15:25,340 --> 01:15:28,660\nthe highest possible metric, so\nother people know your route is bad.\n\n1339\n01:15:28,660 --> 01:15:31,460\nAnd don't try and teach you your\nown route back again, right?\n\n1340\n01:15:31,460 --> 01:15:33,160\nThose two were automatic.\n\n1341\n01:15:33,160 --> 01:15:34,400\nWe didn't have to configure them.\n\n1342\n01:15:34,400 --> 01:15:37,295\nThey're already on the system,\nthey're already doing their job.\n\n1343\n01:15:37,295 --> 01:15:39,847\nAnd then lastly we looked at route tags.\n\n1344\n01:15:39,847 --> 01:15:41,155\nWhere we attach a tag,\n\n1345\n01:15:41,155 --> 01:15:46,075\nattach a number to each route, so\nthat we can identify that route later on.\n\n1346\n01:15:46,075 --> 01:15:49,382\nAnd in route maps we can use match\ncommands to match the tag and\n\n1347\n01:15:49,382 --> 01:15:51,112\nhandle different routes different ways.\n\n1348\n01:15:51,112 --> 01:15:55,182\nIn our environment, we were making sure\nthat we didn't redistribute a RIP route\n\n1349\n01:15:55,182 --> 01:15:59,472\nback into RIP even though it's\nalready been redistributed into OSPF.\n\n1350\n01:15:59,472 --> 01:16:01,902\nSo, we use those for loop prevention.\n\n1351\n01:16:03,032 --> 01:16:04,822\nAll right, it's a pretty complex topic.\n\n1352\n01:16:04,822 --> 01:16:07,622\nI anticipate most of you will\nprobably watch this episode twice\n\n1353\n01:16:07,622 --> 01:16:10,600\nbecause it is a pretty challenging\nthing to get through but\n\n1354\n01:16:10,600 --> 01:16:14,110\nit's an important one to learn and in real\nlife land this is a skill you'll want.\n\n1355\n01:16:14,110 --> 01:16:16,580\nYou'll want to make sure you prevent\nthese types of loops in your network.\n\n1356\n01:16:18,008 --> 01:16:20,880\nAll right, well, this is a pretty\ngood spot to wrap up this show but\n\n1357\n01:16:20,880 --> 01:16:26,170\nlet me remind you guys if you have any\nquestions on this, feel free to ask.\n\n1358\n01:16:26,170 --> 01:16:30,290\nLive during the show you\ncan go to ITProRV/live and\n\n1359\n01:16:30,290 --> 01:16:32,110\nyou'll see the chatbox\nright beneath video.\n\n1360\n01:16:32,110 --> 01:16:33,220\nPost your questions there.\n\n1361\n01:16:33,220 --> 01:16:34,710\nWe monitor and answer during the show.\n\n1362\n01:16:34,710 --> 01:16:38,420\nIf you have questions after the show,\nuse our Q&A forums.\n\n1363\n01:16:38,420 --> 01:16:41,170\nAt the top of every page you'll\nsee a link that says Q&A.\n\n1364\n01:16:41,170 --> 01:16:42,850\nClick on it, it'll take you to the forums.\n\n1365\n01:16:42,850 --> 01:16:44,450\nYou can post your questions there.\n\n1366\n01:16:44,450 --> 01:16:46,040\nWe monitor and answer after the show.\n\n1367\n01:16:46,040 --> 01:16:50,062\nTake advantage of those resources,\nthey are there for you.\n\n1368\n01:16:50,062 --> 01:16:51,650\nAll right,\nwell I hope you guys enjoyed the show.\n\n1369\n01:16:51,650 --> 01:16:54,580\nI know it's sometimes a little\nboring when I don't have a co-host\n\n1370\n01:16:54,580 --> 01:16:56,800\nhere to stop me from rambling on.\n\n1371\n01:16:56,800 --> 01:16:59,205\nBut, hopefully it wasn't too painful for\nyou guys.\n\n1372\n01:16:59,205 --> 01:17:01,760\n[LAUGH] So, hope you guys enjoyed it.\n\n1373\n01:17:01,760 --> 01:17:05,893\nSigning off for ITProTV,\nI'm Don Pezet and I'll see you next time.\n\n1374\n01:17:05,893 --> 01:17:15,893\n[MUSIC]\n\n1375\n01:17:19,919 --> 01:17:26,310\n[SOUND]\n\n",
          "vimeoId": "119752960"
        },
        {
          "description": "RIPv2 is a classless routing protocol, which can be easily configured and deployed. Viewers will hear about some of the fundamental concepts and configuration of using RIPv2, how to verify its functionality, how to better manage rip by using passive-interfaces and how to configure rip to distribute a default route.",
          "length": "1608",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/ccnproute/cisco-ccnproute300101-3-16-configure_verify_ripv2-082415-1.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/ccnproute/cisco-ccnproute300101-3-16-configure_verify_ripv2-082415-1-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/ccnproute/cisco-ccnproute300101-3-16-configure_verify_ripv2-082415-1-sm.jpg",
          "title": "Configure and Verify RIPv2",
          "transcript": "WEBVTT\n\n1\n00:00:00.000 --> 00:00:10.752\n[MUSIC]\n\n2\n00:00:10.752 --> 00:00:13.281\nWelcome to another exciting\nepisode here on ITProTV.\n\n3\n00:00:13.281 --> 00:00:16.280\nToday we're taking a look at CCNP Route.\n\n4\n00:00:16.280 --> 00:00:17.860\nI'll be your host, Ronnie Wong.\n\n5\n00:00:17.860 --> 00:00:22.770\nAnd to help us out in our continuing\nstudies, it's gonna be Don Pezet.\n\n6\n00:00:22.770 --> 00:00:23.342\nHow's it going?\n\n7\n00:00:23.342 --> 00:00:24.460\n>> It is going great, Ronnie.\n\n8\n00:00:24.460 --> 00:00:26.710\nYou know I'm excited about this\nepisode because we're gonna be talking\n\n9\n00:00:26.710 --> 00:00:30.940\nabout the phenomenally robust, powerful,\nand amazing routing protocol, RIP.\n\n10\n00:00:30.940 --> 00:00:32.290\nI know it's one of your favorites, right?\n\n11\n00:00:32.290 --> 00:00:33.300\n>> It is one of my favorites,\n\n12\n00:00:33.300 --> 00:00:36.699\nit's actually my favorite because\nit's old and I'm old too.\n\n13\n00:00:36.699 --> 00:00:41.350\n[LAUGH] So the nice thing about it is we\nget to take a look at some old technology,\n\n14\n00:00:41.350 --> 00:00:43.480\nbut we're actually still\nseeing this around and\n\n15\n00:00:43.480 --> 00:00:46.410\nsomething that we actually have\nto get used to still configuring.\n\n16\n00:00:46.410 --> 00:00:48.260\n>> Yeah, now one of the questions\nthat I normally hear is,\n\n17\n00:00:48.260 --> 00:00:49.450\nwhy do we still have to learn about RIP?\n\n18\n00:00:49.450 --> 00:00:51.010\nAnd there's really two reasons.\n\n19\n00:00:51.010 --> 00:00:54.090\nThe main reason is one,\nit is still used out there, right?\n\n20\n00:00:54.090 --> 00:00:56.410\nRIP is very simple to configure,\n\n21\n00:00:56.410 --> 00:00:59.590\nyou can really get a RIP environment\nbuilt up very, very quickly.\n\n22\n00:00:59.590 --> 00:01:00.670\nAnd people like that.\n\n23\n00:01:00.670 --> 00:01:04.090\nPeople like quick and easy,\nand RIP definitely has that.\n\n24\n00:01:04.090 --> 00:01:06.540\nIt's also supported by\na ton of different vendors.\n\n25\n00:01:06.540 --> 00:01:08.390\nSo those are some reasons there.\n\n26\n00:01:08.390 --> 00:01:11.970\nBut the other reason, and the really\nbig one, is that RIP, believe it or\n\n27\n00:01:11.970 --> 00:01:14.840\nnot, has been updated to support IPV6.\n\n28\n00:01:14.840 --> 00:01:16.000\nAnd, that's what's more important.\n\n29\n00:01:16.000 --> 00:01:18.850\nMore importantly is that\nwe need to know RIP and G.\n\n30\n00:01:18.850 --> 00:01:22.480\nWell, in this segment we're gonna\ntake a look at just RIP itself, and\n\n31\n00:01:22.480 --> 00:01:27.030\nthen in the next episode we'll take a look\nat how it's kind of evolved into IPv6.\n\n32\n00:01:27.030 --> 00:01:30.280\nLet's talk about just\nthe basic protocol itself.\n\n33\n00:01:30.280 --> 00:01:32.020\nRight?\nSo I mentioned that it's quick and\n\n34\n00:01:32.020 --> 00:01:33.340\neasy, and it certainly is.\n\n35\n00:01:33.340 --> 00:01:35.300\nRonnie, you can get RIP\nconfigured in what?\n\n36\n00:01:35.300 --> 00:01:36.360\nLike, two commands.\n\n37\n00:01:36.360 --> 00:01:37.850\n>> Just basic two commands.\n\n38\n00:01:37.850 --> 00:01:40.190\nIt doesn't really take\na lot to get configured.\n\n39\n00:01:40.190 --> 00:01:43.200\nOnce you actually get it configured,\nit really works in the background.\n\n40\n00:01:43.200 --> 00:01:45.400\nWhen you start actually configuring it,\n\n41\n00:01:45.400 --> 00:01:48.890\nyou're actually kind of surprised at how\neasy it is to get two routers to begin to\n\n42\n00:01:48.890 --> 00:01:51.320\ncommunicate their routing\nprotocols with each other.\n\n43\n00:01:51.320 --> 00:01:53.520\nAnd when it does work, it works great.\n\n44\n00:01:53.520 --> 00:01:56.080\nBut it's not actually working\ngreat in every single situation,\n\n45\n00:01:56.080 --> 00:02:00.330\nespecially at the beginning, since this\nis what we called a classful protocol.\n\n46\n00:02:00.330 --> 00:02:04.350\nYeah, so RIP version 1 is a classful\nprotocol, it obeys class boundaries and\n\n47\n00:02:04.350 --> 00:02:05.950\nthat can cause some problems.\n\n48\n00:02:05.950 --> 00:02:09.010\nRIP version 2,\non the other hand, is classless.\n\n49\n00:02:09.010 --> 00:02:12.500\nAnd that means that it\nrecognizes sub-net masks and\n\n50\n00:02:12.500 --> 00:02:16.540\nrecognizes that not everything is\na class A, class B, or class C.\n\n51\n00:02:16.540 --> 00:02:19.130\nSo, it's gonna be able to\nhandle that a lot better.\n\n52\n00:02:19.130 --> 00:02:20.080\nNow, on your exam,\n\n53\n00:02:20.080 --> 00:02:23.000\nyou might see an environment where you\nget some routers that are configured for\n\n54\n00:02:23.000 --> 00:02:25.660\nRIP version 1, and you gotta\nrecognize what's going on, right?\n\n55\n00:02:25.660 --> 00:02:27.880\nNow, how can we kinda deal with that?\n\n56\n00:02:27.880 --> 00:02:29.610\nWell, actually, you know what,\nlet's do this, Ronnie.\n\n57\n00:02:29.610 --> 00:02:32.460\nTalking about this stuff is one thing,\nbut seeing it in action is another.\n\n58\n00:02:32.460 --> 00:02:34.980\nLet me show you guys an example\nof what happens with RIP and\n\n59\n00:02:34.980 --> 00:02:36.680\nhow quickly we can deploy it.\n\n60\n00:02:36.680 --> 00:02:40.660\nAnd while we're doing that, another thing\nwe need to mention is that while RIP is\n\n61\n00:02:40.660 --> 00:02:45.310\nquick and easy to deploy, the protocol\nitself is not particularly fast.\n\n62\n00:02:45.310 --> 00:02:48.730\nIt takes it a while to recognize when\nthere have been network failures and\n\n63\n00:02:48.730 --> 00:02:50.190\nwhen there are problems on the network.\n\n64\n00:02:50.190 --> 00:02:52.150\nAnd so it's not the most responsive.\n\n65\n00:02:52.150 --> 00:02:55.750\nAnd that's a problem for a lot of people\nwho need networks that rapidly fail over.\n\n66\n00:02:55.750 --> 00:02:57.550\nIt also doesn't scale very well, right?\n\n67\n00:02:57.550 --> 00:03:02.280\nRemember that RIP is a distance vector\nprotocol, deep down under the hood it's\n\n68\n00:03:02.280 --> 00:03:07.180\nmonitoring hop count across your network\nand it's got a maximum hop count of 15.\n\n69\n00:03:07.180 --> 00:03:10.640\nSo if you've got a path and your network\ngoes through more than 15 routers,\n\n70\n00:03:10.640 --> 00:03:12.230\nwhat's gonna happen?\n\n71\n00:03:12.230 --> 00:03:13.460\nIt's not gonna work.\n\n72\n00:03:13.460 --> 00:03:15.400\nAnd so RIP has some big limitations.\n\n73\n00:03:15.400 --> 00:03:18.050\nBut let's think positive for a minute.\n\n74\n00:03:18.050 --> 00:03:20.640\nLet me show you guys\nconfiguring RIP real quick,\n\n75\n00:03:20.640 --> 00:03:22.960\njust between two routers\nthat I've got fired up here.\n\n76\n00:03:22.960 --> 00:03:25.630\nI just want them to be able to\ncommunicate between each other and\n\n77\n00:03:25.630 --> 00:03:27.630\nshare some information.\n\n78\n00:03:27.630 --> 00:03:30.900\nSo if I wanna get RIP configured,\nI can look at my router and\n\n79\n00:03:30.900 --> 00:03:34.620\nin just a few simple commands,\nI can jump into my configuration,\n\n80\n00:03:34.620 --> 00:03:39.010\nI can say router RIP which is going\nto turn on the RIP protocol, and\n\n81\n00:03:39.010 --> 00:03:43.050\nthen I can say Network and\nthe network that I want it to advertise.\n\n82\n00:03:43.050 --> 00:03:43.630\nOkay?\n\n83\n00:03:43.630 --> 00:03:46.990\nAnd you can actually wild card this one\nand say like, Network 0 to 0 to 0 to 0,\n\n84\n00:03:46.990 --> 00:03:50.450\nand it's gonna advertise every network,\nright?\n\n85\n00:03:50.450 --> 00:03:55.630\nNow when you specify these networks like\nthis, you're not specifying a subnet mass.\n\n86\n00:03:55.630 --> 00:03:58.300\nAnd that's because RIP is classful.\n\n87\n00:03:58.300 --> 00:04:02.100\nSo if I wanna really get this configured\nup I could do a quick show ip\n\n88\n00:04:03.500 --> 00:04:06.760\ninterface brief to figure out my networks,\nand then I can come in here and\n\n89\n00:04:06.760 --> 00:04:08.770\nspecify the networks\nthat I want to advertise.\n\n90\n00:04:08.770 --> 00:04:12.862\nSo I might have my internal LAN,\nwhich is this guy right here, right?\n\n91\n00:04:12.862 --> 00:04:16.250\nSo I'll punch in 172.16.0.0.\n\n92\n00:04:16.250 --> 00:04:22.740\nAnd then I can specify my Metro E\nconnection which is this 192.168.1.1.\n\n93\n00:04:22.740 --> 00:04:26.930\nOr I can specify one of my serial\nlinks to this other router.\n\n94\n00:04:26.930 --> 00:04:28.370\nThere's a couple of\ndifferent things I can do.\n\n95\n00:04:28.370 --> 00:04:29.610\nLet's do these serial links here.\n\n96\n00:04:29.610 --> 00:04:30.847\nSo that'll work for me.\n\n97\n00:04:30.847 --> 00:04:38.090\nAnd so I'll say 192.168.2., well here\nI have a little problem, don't I?\n\n98\n00:04:38.090 --> 00:04:42.850\nI've got two networks,\n192.168.2.1 and 193.168.2.129.\n\n99\n00:04:42.850 --> 00:04:46.910\nIt's actually a /24 network\nthat's been divided in half,\n\n100\n00:04:46.910 --> 00:04:51.020\nso it's a /25, but\nI can't specify that in RIP.\n\n101\n00:04:51.020 --> 00:04:53.520\nSo when I run this,\nit's gonna turn RIP on for\n\n102\n00:04:53.520 --> 00:04:54.990\nboth of those adapters at the same time.\n\n103\n00:04:54.990 --> 00:04:58.270\nAnd, in fact, it's gonna view those\nas being the same network, right?\n\n104\n00:04:58.270 --> 00:05:00.200\nIt doesn't have a way\nto differentiate that.\n\n105\n00:05:00.200 --> 00:05:01.410\nThat's my first problem.\n\n106\n00:05:01.410 --> 00:05:02.030\nOkay?\n\n107\n00:05:02.030 --> 00:05:03.360\nBut I'm now up and\n\n108\n00:05:03.360 --> 00:05:06.450\nrunning RIP and I'm advertising\nthose networks, just two commands.\n\n109\n00:05:06.450 --> 00:05:08.010\nThe router RIP to turn it on, and\n\n110\n00:05:08.010 --> 00:05:10.990\nthen Network,\nfollowed by a subnet to get that going.\n\n111\n00:05:10.990 --> 00:05:14.220\nAnd I can jump to the other side of that\nlink and do the same thing on this router,\n\n112\n00:05:14.220 --> 00:05:19.230\nwhere I can say router RIP and\nthen advertise the networks over here.\n\n113\n00:05:19.230 --> 00:05:23.420\nNow, this one is connected to\nthat same 192.168.2 network, but\n\n114\n00:05:23.420 --> 00:05:28.399\nthen its internal network is 172.16.2.\n\n115\n00:05:28.399 --> 00:05:32.816\nAnd so I'll add that in and\nadvertise that out.\n\n116\n00:05:32.816 --> 00:05:35.515\nNow, actually I forgot about this,\nthere's another little problem.\n\n117\n00:05:35.515 --> 00:05:38.882\nThe network here, 172.16.2, well,\n\n118\n00:05:38.882 --> 00:05:43.604\nif we look at that from a classful\nperspective, that's a class B.\n\n119\n00:05:43.604 --> 00:05:47.020\nThis is 172.16 dot whatever, dot whatever.\n\n120\n00:05:47.020 --> 00:05:50.010\nThose last two octets\nare part of the host id.\n\n121\n00:05:50.010 --> 00:05:55.080\nBut in my network,\nif I take a look at that interface,\n\n122\n00:05:55.080 --> 00:05:59.200\nI've actually got that\nconfigured as a /23.\n\n123\n00:05:59.200 --> 00:06:03.910\nIt should be 172.16.2,\nall the way through 172.16.3,\n\n124\n00:06:03.910 --> 00:06:08.350\nbut RIP doesn't have a way of knowing that\nbecause it's not seeing that subnet mask,\n\n125\n00:06:08.350 --> 00:06:10.800\nnot in its default configuration.\n\n126\n00:06:10.800 --> 00:06:16.060\nSo if I go out here and take a look at my\nrouting table now, I'm running RIP and\n\n127\n00:06:16.060 --> 00:06:19.080\nI should be communicating with that\nneighbor on the other side, and\n\n128\n00:06:19.080 --> 00:06:20.960\nwhen I learn the routes on\nthe other side I'm gonna try and\n\n129\n00:06:20.960 --> 00:06:24.980\nadd them here into my routing table,\nand I should get them.\n\n130\n00:06:24.980 --> 00:06:25.760\nRight?\n\n131\n00:06:25.760 --> 00:06:31.490\nExcept, when I do a show ip route,\nI'm not seeing any RIP routes.\n\n132\n00:06:31.490 --> 00:06:33.060\nRemember, how we can quickly filter this?\n\n133\n00:06:33.060 --> 00:06:36.230\nI can say show ip route RIP,\nand just see RIP routes.\n\n134\n00:06:36.230 --> 00:06:38.590\nI'm not learning any RIP routes.\n\n135\n00:06:38.590 --> 00:06:40.310\nI know that neighbor's over there.\n\n136\n00:06:40.310 --> 00:06:41.110\nI'm not learning the routes.\n\n137\n00:06:41.110 --> 00:06:43.130\nWhat the heck is up with that?\n\n138\n00:06:43.130 --> 00:06:45.490\nWell, I am learning routes, but\n\n139\n00:06:45.490 --> 00:06:48.950\nthe problem is I'm bumping into\nsome issues with version 1.\n\n140\n00:06:48.950 --> 00:06:50.750\nI'm actually bumping into two issues here.\n\n141\n00:06:50.750 --> 00:06:54.010\nFirst off,\nthe 192.168.2 network that I advertised,\n\n142\n00:06:54.010 --> 00:06:56.200\nwell I'm directly connected to that.\n\n143\n00:06:56.200 --> 00:06:59.070\nNo RIP route is going to beat\na directly connected route.\n\n144\n00:06:59.070 --> 00:07:04.090\nThe administrative distance of RIP is,\nwhat is it, 120?\n\n145\n00:07:04.090 --> 00:07:04.710\n>> 120.\n>> It's 120, and\n\n146\n00:07:04.710 --> 00:07:08.100\nthe administrative distance of\na directly connected route is.\n\n147\n00:07:08.100 --> 00:07:08.870\n>> Zero.\n\n148\n00:07:08.870 --> 00:07:11.670\n>> Yeah, so I'm not gonna beat that.\n\n149\n00:07:11.670 --> 00:07:15.410\nSo, I'm not gonna see\nthe 192.168.2 routes.\n\n150\n00:07:15.410 --> 00:07:20.390\nBut the 172.16 on this side,\nit's 172.16.2, on the other side,\n\n151\n00:07:20.390 --> 00:07:22.062\nit's 172.16.0.\n\n152\n00:07:22.062 --> 00:07:25.950\nWell, why don't I see the 172.16.0 routes?\n\n153\n00:07:25.950 --> 00:07:29.998\nAnd the reason is,\nbecause of the classful boundary, right?\n\n154\n00:07:29.998 --> 00:07:37.595\nMy 172.16.2 is being viewed as the same\nas 172.16.0, and so it's the same route.\n\n155\n00:07:37.595 --> 00:07:41.085\nI'm not gonna add a learned route over\na route I'm directly connected to.\n\n156\n00:07:41.085 --> 00:07:43.075\nSo none of the RIP routes are showing up.\n\n157\n00:07:43.075 --> 00:07:45.475\nIf I put in some other kind of network,\nright?\n\n158\n00:07:45.475 --> 00:07:48.340\nLike I think I have a loop back\ninterface on this, don't I?\n\n159\n00:07:48.340 --> 00:07:51.170\nWhoops, let me do a little\nbrief on this one.\n\n160\n00:07:51.170 --> 00:07:52.378\nLet's see, yeah I gotta loopback.\n\n161\n00:07:52.378 --> 00:07:55.040\nNow my loopback is a crazy,\nclass A type mutant.\n\n162\n00:07:55.040 --> 00:07:58.920\nSo I'll go and put that into RIP.\n\n163\n00:07:58.920 --> 00:08:01.570\nSo I'll just put the 2.0 network.\n\n164\n00:08:01.570 --> 00:08:04.320\nAll right, and I'll jump over to my\nheadquarters and kinda do that same thing.\n\n165\n00:08:04.320 --> 00:08:10.290\nSo if I look at it,\nit's got a loop back here in the 1.range.\n\n166\n00:08:10.290 --> 00:08:12.816\nAnd so I'll just add that in.\n\n167\n00:08:12.816 --> 00:08:16.172\nNow these are networks that are completely\nunknown to the other side, so\n\n168\n00:08:16.172 --> 00:08:17.280\nwe should learn these.\n\n169\n00:08:17.280 --> 00:08:22.828\nIf I jump back to my branch and\nI do a show ip route rip, there it is.\n\n170\n00:08:22.828 --> 00:08:26.363\nI'm learning that network,\nbut the others I'm not.\n\n171\n00:08:26.363 --> 00:08:30.636\nThe 192.168s I expect it to not learn\nthose because I'm directly connected.\n\n172\n00:08:30.636 --> 00:08:34.270\nThe 172.16s I'm not learning because\nof the classful boundary right.\n\n173\n00:08:34.270 --> 00:08:35.480\nIt's summarizing those,\n\n174\n00:08:35.480 --> 00:08:39.590\nit's doing an automatic summarization\nmoving them to the classful boundary.\n\n175\n00:08:39.590 --> 00:08:43.730\nAnd it's doing that because RIP version\n1 does not transmit subnet masks.\n\n176\n00:08:43.730 --> 00:08:44.630\nIt just doesn't send them.\n\n177\n00:08:44.630 --> 00:08:46.940\nIt never asks for them,\nit's not gonna send them.\n\n178\n00:08:46.940 --> 00:08:49.760\nSo to fix that we need to go to version 2.\n\n179\n00:08:49.760 --> 00:08:52.350\nIn RIP version 2 we become classless.\n\n180\n00:08:52.350 --> 00:08:56.830\nRIP version 2 does transmit subnet masks,\nso that solves our problem.\n\n181\n00:08:56.830 --> 00:08:59.009\nWell, it's not always perfect,\nand I'll show you right here.\n\n182\n00:09:00.230 --> 00:09:04.773\nIf I take my branch router and\nI go into router RIP and I type version 2,\n\n183\n00:09:04.773 --> 00:09:07.471\nthat's gonna bump that up to version 2.\n\n184\n00:09:07.471 --> 00:09:10.016\nAnd if I go over to my\nheadquarters router, and\n\n185\n00:09:10.016 --> 00:09:13.450\nI'm already in router RIP here,\nso I can just say version 2.\n\n186\n00:09:13.450 --> 00:09:14.990\nThat's gonna bump that up.\n\n187\n00:09:14.990 --> 00:09:16.360\nNow I have to wait a moment because,\n\n188\n00:09:16.360 --> 00:09:19.220\nremember, RIP is transmitting\nevery 30 seconds.\n\n189\n00:09:19.220 --> 00:09:21.080\nIt's on a timer, every 30 seconds.\n\n190\n00:09:21.080 --> 00:09:24.340\nSo it could take up to 30 seconds for\nme to see that the other side is version 2\n\n191\n00:09:24.340 --> 00:09:26.445\nand in the meantime,\nI'm waiting for version 1 stuff.\n\n192\n00:09:26.445 --> 00:09:28.650\nAnd the Version 1 stuff has to time out.\n\n193\n00:09:28.650 --> 00:09:31.690\nAnd depending on which timer you're\nhitting, it could take three minutes,\n\n194\n00:09:31.690 --> 00:09:34.050\nit could take five minutes for\nsome things to time out on that.\n\n195\n00:09:34.050 --> 00:09:37.560\nSo this is where we start to\nbump into RIP being slow.\n\n196\n00:09:37.560 --> 00:09:40.270\nIt's just not fast at doing updates.\n\n197\n00:09:40.270 --> 00:09:42.385\nAnd we have to be patient,\nwhich I hate being patient.\n\n198\n00:09:42.385 --> 00:09:44.380\n>> [LAUGH]\n>> So in this case,\n\n199\n00:09:44.380 --> 00:09:45.710\nI think I've probably stalled long enough.\n\n200\n00:09:45.710 --> 00:09:47.130\nLet's just see what I've got here.\n\n201\n00:09:48.280 --> 00:09:49.180\nThere we go.\n\n202\n00:09:49.180 --> 00:09:51.410\nSo now when I look at my routing table,\n\n203\n00:09:51.410 --> 00:09:56.293\nI can see that I've got the 2.0 network\nthat I'm learning from the other side and\n\n204\n00:09:56.293 --> 00:10:00.920\nI'm learning the 172.16.0.0/16\nnetwork from the other side.\n\n205\n00:10:00.920 --> 00:10:02.876\nWell, wait a minute.\n\n206\n00:10:02.876 --> 00:10:04.260\nI'm learning that from the other side.\n\n207\n00:10:04.260 --> 00:10:07.175\nThe other side is running 172.16.2,\n\n208\n00:10:07.175 --> 00:10:12.116\nnot 172.16.0 and here it says /16,\nbut if I look at the other side.\n\n209\n00:10:15.179 --> 00:10:17.414\nLet's see, that was my e0/1, I believe.\n\n210\n00:10:17.414 --> 00:10:18.118\nThere we go.\n\n211\n00:10:18.118 --> 00:10:22.118\nI've got 172.16.2.1, 255.255.254.0.\n\n212\n00:10:22.118 --> 00:10:25.370\nThat's a /23, not a /16.\n\n213\n00:10:25.370 --> 00:10:27.720\nSo I went into version 2 mode.\n\n214\n00:10:27.720 --> 00:10:33.010\nI'm learning the routes now, but\nit's got the subnet mask messed up.\n\n215\n00:10:33.010 --> 00:10:35.678\nAnd the reason is even in version 2,\n\n216\n00:10:35.678 --> 00:10:40.130\nwhere you're basically classless,\nyou're still auto-summarizing.\n\n217\n00:10:40.130 --> 00:10:43.320\nIt's automatically summarizing\nat classful boundaries.\n\n218\n00:10:43.320 --> 00:10:46.790\nLet me bring up my network topology so\nyou guys can see the full diagram here.\n\n219\n00:10:46.790 --> 00:10:51.150\nSo what I'm doing is configuring RIP\nbetween headquarters and Branch 1.\n\n220\n00:10:51.150 --> 00:10:55.500\nAnd headquarters and Branch 1 have these\ntwo serial links that go in between them.\n\n221\n00:10:55.500 --> 00:10:58.715\nAnd they've also got these Metro e\nethernet links that go between them, so\n\n222\n00:10:58.715 --> 00:11:00.872\nthose are kind of\nthe connectivity between them.\n\n223\n00:11:00.872 --> 00:11:04.672\nThose networks are 192.168.0.something,\n\n224\n00:11:04.672 --> 00:11:09.690\n192.168.1.something or\n192.168.2.something.\n\n225\n00:11:09.690 --> 00:11:14.388\nThey're all in the 192.168\nprivate class C ranges.\n\n226\n00:11:14.388 --> 00:11:20.140\nBut the private networks, the LANs that\nI'm sharing, are 172.16.something.\n\n227\n00:11:20.140 --> 00:11:26.640\nSo when you go from one major classful\nnetwork to another major classful network.\n\n228\n00:11:26.640 --> 00:11:29.650\nSo we're going from the 172.16\nover to the 192.168,\n\n229\n00:11:29.650 --> 00:11:34.030\nthat's where automatic summarization\nkicks in, and it's summarizing.\n\n230\n00:11:34.030 --> 00:11:36.990\nThat wouldn't have happened if\nI had 172.16 networks here in\n\n231\n00:11:36.990 --> 00:11:38.830\nthe clouds, but I don't.\n\n232\n00:11:38.830 --> 00:11:41.930\nI have a different network and\nso auto-summary kicked in.\n\n233\n00:11:41.930 --> 00:11:44.510\nSo if I really want this to work properly,\nI've gotta go and\n\n234\n00:11:44.510 --> 00:11:46.630\nturn off auto-summarization.\n\n235\n00:11:46.630 --> 00:11:51.100\nSo I'll just jump right back\nto my routers here, and\n\n236\n00:11:51.100 --> 00:11:55.880\ninside of RIP's configuration,\nI can just say no auto-summary.\n\n237\n00:11:55.880 --> 00:11:58.124\nAnd we can turn that off and I'll do\nthe same thing on the headquarters.\n\n238\n00:11:58.124 --> 00:12:04.800\nNow normally it would cause a reset,\nbut RIP doesn't really do resets.\n\n239\n00:12:04.800 --> 00:12:08.020\nWhat's gonna happen is the new\nnetworks are gonna start advertising.\n\n240\n00:12:08.020 --> 00:12:11.980\nThe old networks will still be there,\nand they'll have to age out.\n\n241\n00:12:11.980 --> 00:12:17.600\nAnd it can take a while for them to age\nout, so if I do a show ip route rip,\n\n242\n00:12:17.600 --> 00:12:21.770\nI expect to see the new ones and\nthe old ones, and\n\n243\n00:12:21.770 --> 00:12:22.950\nthose old ones are gonna stay there.\n\n244\n00:12:22.950 --> 00:12:26.720\nSee how their timer,\nI said RIP was on a 30-second timer, so\n\n245\n00:12:26.720 --> 00:12:29.940\nno route should ever have an age or\nlifetime of more than 30 seconds.\n\n246\n00:12:29.940 --> 00:12:33.040\nBut I can see that this guy's at 31\nseconds and this one's at 34 seconds.\n\n247\n00:12:33.040 --> 00:12:34.730\nThey're already over that limit.\n\n248\n00:12:34.730 --> 00:12:37.220\nAnd what's happening is they're\nin the process of aging out.\n\n249\n00:12:37.220 --> 00:12:41.910\nSee my new routes, the ones that are /23s,\nthey got a lifetime here of 20 seconds,\n\n250\n00:12:41.910 --> 00:12:42.740\n25 seconds.\n\n251\n00:12:42.740 --> 00:12:44.840\nBut here I'm up to 49 and\n52 and if I just,\n\n252\n00:12:44.840 --> 00:12:47.300\nthis would get boring eventually,\nbut if I just sit here and\n\n253\n00:12:47.300 --> 00:12:51.960\nkeep refreshing this, you'll see that\nthe new routes never go over 30 seconds.\n\n254\n00:12:51.960 --> 00:12:56.220\nThe old routes are continuing to\nget older and older and older.\n\n255\n00:12:56.220 --> 00:12:59.300\nAnd they'll keep doing that until\nthey finally hit the upper limit.\n\n256\n00:12:59.300 --> 00:13:02.290\nAnd I'm wracking my brain here\nto remember the upper limit.\n\n257\n00:13:02.290 --> 00:13:04.200\nIs it 180 seconds?\n\n258\n00:13:04.200 --> 00:13:06.500\n>> I think so, but I can't really\nbe sure on that one now [LAUGH].\n\n259\n00:13:06.500 --> 00:13:09.110\n>> It's either 180 seconds or 300 seconds.\n\n260\n00:13:09.110 --> 00:13:10.150\nI can't remember which.\n\n261\n00:13:10.150 --> 00:13:11.090\nActually, can we find that?\n\n262\n00:13:11.090 --> 00:13:13.700\nI think if we do a show ip protocols,\n\n263\n00:13:13.700 --> 00:13:17.970\nthat in our RIP output here it should\ntell us what our intervals are.\n\n264\n00:13:17.970 --> 00:13:21.780\nHere we go, so are invalid after\n180 seconds, hold down for\n\n265\n00:13:21.780 --> 00:13:25.120\n180 seconds, flushed after 240 seconds.\n\n266\n00:13:25.120 --> 00:13:28.150\nThat means we're not actually\ngoing to flush this route for\n\n267\n00:13:28.150 --> 00:13:29.700\n240 seconds, four minutes.\n\n268\n00:13:29.700 --> 00:13:32.491\nSo that's gonna take a while and\nI don't want to sit here and\n\n269\n00:13:32.491 --> 00:13:33.460\njust refresh over and over again.\n\n270\n00:13:33.460 --> 00:13:37.910\nBut be aware that that's one of the big\nlimitations of RIP, is it's not fast.\n\n271\n00:13:37.910 --> 00:13:40.460\nNetwork convergence doesn't\nhappen fast on RIP.\n\n272\n00:13:40.460 --> 00:13:45.800\nSo RIP is suitable for small networks or\nnetworks that are inherently stable.\n\n273\n00:13:45.800 --> 00:13:48.710\nVery stable networks,\nthat's what RIP is for.\n\n274\n00:13:48.710 --> 00:13:52.680\nOSPF, EIGRP,\nthey're great in very large networks,\n\n275\n00:13:52.680 --> 00:13:55.220\nvery unstable networks,\nwhich hopefully you don't have.\n\n276\n00:13:55.220 --> 00:13:56.960\nThey can handle that really well.\n\n277\n00:13:56.960 --> 00:13:57.460\nRIP can't.\n\n278\n00:13:59.170 --> 00:14:03.045\nSo as far as some of the key concepts\nhere that we need to remember for RIP,\n\n279\n00:14:03.045 --> 00:14:07.730\nauto-summarization, as well\nas the classful nature of it,\n\n280\n00:14:07.730 --> 00:14:09.550\nare two really key ones.\n\n281\n00:14:09.550 --> 00:14:10.740\nSo remember those commands for the exam.\n\n282\n00:14:10.740 --> 00:14:13.270\nVersion 2 to get out of classful mode, and\n\n283\n00:14:13.270 --> 00:14:17.100\nthen no auto-summary to stop\nthat automatic summarization.\n\n284\n00:14:17.100 --> 00:14:19.770\nUnless you have a perfectly designed\nnetwork where the auto-summarization works\n\n285\n00:14:19.770 --> 00:14:22.350\nat well,\nwhere you don't have overlapping networks.\n\n286\n00:14:22.350 --> 00:14:23.270\nThen you can leave it on.\n\n287\n00:14:23.270 --> 00:14:24.811\nIt's kinda handy.\n\n288\n00:14:24.811 --> 00:14:25.519\n>> All right, Don,\n\n289\n00:14:25.519 --> 00:14:28.520\nis there anything else we need to\ntake a look at in RIP version 2?\n\n290\n00:14:28.520 --> 00:14:32.410\n>> Yeah, so at first you regular\nRIP deployment, that's kinda it.\n\n291\n00:14:32.410 --> 00:14:36.614\nBut for the exam they expect you to be a\nhigher level that what you might have like\n\n292\n00:14:36.614 --> 00:14:37.490\nat CCNA level.\n\n293\n00:14:37.490 --> 00:14:40.710\nSo there's a few more things I\nwant to point out inside of RIP.\n\n294\n00:14:40.710 --> 00:14:43.150\nI know there's some we mentioned in\nother episodes like where we talk about\n\n295\n00:14:43.150 --> 00:14:45.320\ndistribute lists and route redistribution.\n\n296\n00:14:45.320 --> 00:14:47.020\nSo we've already seen that with RIP.\n\n297\n00:14:47.020 --> 00:14:48.940\nDefinitely something we need to remember.\n\n298\n00:14:48.940 --> 00:14:52.220\nBut another thing I want to point\nout are passive interfaces.\n\n299\n00:14:52.220 --> 00:14:56.246\nWith RIP we can use that network command\nto specify what networks we're gonna\n\n300\n00:14:56.246 --> 00:14:57.270\nadvertise.\n\n301\n00:14:57.270 --> 00:14:58.390\nAnd if we want,\n\n302\n00:14:58.390 --> 00:15:01.320\nwe can use one network command to\ngrab all of our interfaces at once.\n\n303\n00:15:01.320 --> 00:15:06.620\nYou can say network 0.0.0.0, and it'll\njust advertise out every network you have.\n\n304\n00:15:06.620 --> 00:15:11.465\nThe problem with RIP though, is it's not\nencrypting data, it's not authenticating.\n\n305\n00:15:11.465 --> 00:15:13.295\nIt's just throwing that data out there, so\n\n306\n00:15:13.295 --> 00:15:17.035\nthere's a lot of very easy attacks that\ncan be pulled off against a RIP router.\n\n307\n00:15:17.035 --> 00:15:22.155\nAnd so we might want to suppress RIP\ninformation on a particular interface,\n\n308\n00:15:22.155 --> 00:15:24.745\nand there's different ways\nyou can manipulate that.\n\n309\n00:15:24.745 --> 00:15:28.285\nFor example, you can manipulate what\nversion of RIP you're sending in or\n\n310\n00:15:28.285 --> 00:15:29.115\nout of an interface.\n\n311\n00:15:29.115 --> 00:15:30.000\nLet me show you.\n\n312\n00:15:30.000 --> 00:15:34.098\nIf I get into one of my interfaces here,\nlet me just switch right over to this guy.\n\n313\n00:15:34.098 --> 00:15:41.710\nIf you go in here and do ip rip, see how\nyou've got a advertise, receive and send?\n\n314\n00:15:41.710 --> 00:15:46.100\nAnd so you're specifying the advertised\ninterval, how often you're sending out.\n\n315\n00:15:46.100 --> 00:15:50.180\nYou can specify what version you're\nreceiving and what version you're sending.\n\n316\n00:15:50.180 --> 00:15:55.156\nSo I could say ip rip receive version and\nthen specify 1 or 2, or\n\n317\n00:15:55.156 --> 00:15:57.750\nif I just press Enter it's both.\n\n318\n00:15:57.750 --> 00:16:01.390\nSo now I can kind of tell it exactly\nwhat I'm allowing it to receive.\n\n319\n00:16:01.390 --> 00:16:03.256\nI don't want to allow it\nto receive RIP version 1.\n\n320\n00:16:03.256 --> 00:16:05.200\nOnly allow version 2.\n\n321\n00:16:05.200 --> 00:16:06.570\nAnd, you can do the same thing with send.\n\n322\n00:16:06.570 --> 00:16:12.390\nWe can say ip rip send and then\nthe version, and specify it there, too.\n\n323\n00:16:12.390 --> 00:16:16.030\nSo, remember, this is on\nthe interface itself you can tell it.\n\n324\n00:16:16.030 --> 00:16:19.040\nSo, just because RIP itself\nhas set diversion two.\n\n325\n00:16:19.040 --> 00:16:22.720\nI can set an individual interface to\nbe a version one, or whatever, and\n\n326\n00:16:22.720 --> 00:16:27.420\nit'll still bring those in,\nwe just now run the risk of having\n\n327\n00:16:27.420 --> 00:16:31.960\nthe summary type problems, having the\nnon-continuous network problems all right.\n\n328\n00:16:31.960 --> 00:16:34.310\nAnother thing to remember\nare passive interfaces.\n\n329\n00:16:35.340 --> 00:16:39.120\nI might want to advertise that I'm\nconnected to a particular network, but\n\n330\n00:16:39.120 --> 00:16:42.310\nI don't want to actually participate and\nRIP on that network and the best example\n\n331\n00:16:42.310 --> 00:16:45.430\nof that would be things like ISPs,\nright internet service provider.\n\n332\n00:16:45.430 --> 00:16:49.120\nI might want to advertise the fact that\nyes, I'm connected to that ISP network.\n\n333\n00:16:49.120 --> 00:16:52.520\nBut I don't wanna build up RIP\nneighbor relationships with the ISP,\n\n334\n00:16:52.520 --> 00:16:55.640\nI don't want them to be able to\ninject routes into my LAN right?\n\n335\n00:16:55.640 --> 00:16:58.130\nSo we want to do passive interfaces for\nthat.\n\n336\n00:16:58.130 --> 00:17:02.730\nAnd so, what I normally do when\nconfiguring RIP is something like this.\n\n337\n00:17:02.730 --> 00:17:05.780\nIs you get into your router and\nyou say router RIP, right, and\n\n338\n00:17:05.780 --> 00:17:10.230\nthen you can say network 0.0.0.0 to\nadvertise all of your networks, right.\n\n339\n00:17:10.230 --> 00:17:17.670\nBut before I even do that what I like\nto do is a passive interface default.\n\n340\n00:17:17.670 --> 00:17:20.900\nAnd that's gonna set all of\nmy interfaces to passive.\n\n341\n00:17:20.900 --> 00:17:26.393\nPassive means if I receive a rip\nadvertisement I'm gonna ignore it, right\n\n342\n00:17:26.393 --> 00:17:32.450\nbut I'm going to advertise that network\nmyself into the RIP environment all right?\n\n343\n00:17:32.450 --> 00:17:36.620\nAnd then from here you can\nsay no passive interface, and\n\n344\n00:17:36.620 --> 00:17:40.400\nyou can specify the individual interfaces\nyou actually wanna run RiIP on.\n\n345\n00:17:40.400 --> 00:17:47.340\nSo, for example, for me I just wanna run\nit on my E0/0 Metro Ethernet connection.\n\n346\n00:17:47.340 --> 00:17:50.850\nAnd maybe I want to run it on\nthose serial links that I've got\n\n347\n00:17:50.850 --> 00:17:54.720\nthat are connecting me to\nthe other branch, right?\n\n348\n00:17:54.720 --> 00:17:58.500\nSo I'm specifying yes, go ahead and\nparticipate in RIP on those interfaces.\n\n349\n00:17:58.500 --> 00:18:02.150\nGo ahead and send advertisements\nout on those interfaces, but\n\n350\n00:18:02.150 --> 00:18:06.650\nnot any of the other ones, so that when I\ndo network 0.0.0.0 like that, now I'm not\n\n351\n00:18:06.650 --> 00:18:10.940\nputting myself in a position where I can\nparticipate in RIP with the With the ISP.\n\n352\n00:18:10.940 --> 00:18:11.830\nAll right?\n\n353\n00:18:11.830 --> 00:18:15.370\nNow, there are some weird little quirks\nwith RIP about how, yeah, I'm not\n\n354\n00:18:15.370 --> 00:18:18.900\nadvertising RIP out those interfaces\nanymore, but I might still learn routes.\n\n355\n00:18:18.900 --> 00:18:22.620\nSo you can do distribute lists or\nother types of filters or\n\n356\n00:18:22.620 --> 00:18:25.990\nfiltered out apps to be able to\nfilter that if you really need to.\n\n357\n00:18:25.990 --> 00:18:29.680\nBut honestly at that point if\nyou need to really prevent it\n\n358\n00:18:29.680 --> 00:18:32.560\nyou should probably do one of two things.\n\n359\n00:18:32.560 --> 00:18:36.810\nEither one use it for protocol,\nuse OSPF or EIGRP, or\n\n360\n00:18:36.810 --> 00:18:41.980\ntwo, if I absolutely wanna make sure\nthat RIP is not active on an interface,\n\n361\n00:18:41.980 --> 00:18:44.860\nthe best thing to do is not\nadvertise it in RIP at all, and\n\n362\n00:18:44.860 --> 00:18:49.090\ninstead redistribute it in\nas a connected route, right?\n\n363\n00:18:49.090 --> 00:18:54.300\nSo you could do a no network 0.0.0.0\nto remove that blanket statement,\n\n364\n00:18:54.300 --> 00:18:55.940\nadvertise your individual network.\n\n365\n00:18:55.940 --> 00:19:00.760\nAnd then just do a redistribute\nconnected and specify the interface and\n\n366\n00:19:00.760 --> 00:19:01.520\nbring it in that way.\n\n367\n00:19:01.520 --> 00:19:04.070\nAnd that way it's being\nadvertised in the RIP, but\n\n368\n00:19:04.070 --> 00:19:07.090\nyou're not actually sending RIP\ndata out that interface at all.\n\n369\n00:19:07.090 --> 00:19:10.090\nThat interface is not truly\na part of RIP all right.\n\n370\n00:19:10.090 --> 00:19:14.230\nSo that's certainly another option that\nwe might wanna configure as we go through\n\n371\n00:19:14.230 --> 00:19:17.090\nkind of getting things set up and\ngetting them put in place.\n\n372\n00:19:17.090 --> 00:19:19.430\nBut at this point, you know,\nI got my passive interfaces set up.\n\n373\n00:19:19.430 --> 00:19:20.580\nI'm advertising RIP.\n\n374\n00:19:20.580 --> 00:19:22.580\nThe other sites just start\nto learn a lot more.\n\n375\n00:19:22.580 --> 00:19:26.450\nThe only other thing worth mentioning here\nis if you need a default route, right?\n\n376\n00:19:26.450 --> 00:19:31.140\nWhen I take a look at like branch one\nhere and I look at its routing table.\n\n377\n00:19:31.140 --> 00:19:33.980\nIt's learning all sorts\nof RIP routes now because\n\n378\n00:19:33.980 --> 00:19:37.010\nof that network 0000 statement\nI did on the other router.\n\n379\n00:19:37.010 --> 00:19:40.630\nSo I'm learning all these ISPs or other\nthings where I'm getting all that data.\n\n380\n00:19:40.630 --> 00:19:44.560\nBut one thing that I'm not getting\nis a default gateway right.\n\n381\n00:19:44.560 --> 00:19:48.370\nAnd I can always manually go and\nstatically set that on the router.\n\n382\n00:19:48.370 --> 00:19:52.620\nOr on headquarters if I\nhave a static route here,\n\n383\n00:19:52.620 --> 00:19:58.120\nthen I can actually redistribute\nthat into RIP, right.\n\n384\n00:19:58.120 --> 00:20:04.260\nSo if I have,\nlet's find a good interface to use here.\n\n385\n00:20:04.260 --> 00:20:09.060\nSo let's say I have\na default route that is\n\n386\n00:20:09.060 --> 00:20:14.510\npointing to 204.109.63.1 okay,\n\n387\n00:20:14.510 --> 00:20:17.670\nso I've got a default route now\nif I look at my routing table.\n\n388\n00:20:17.670 --> 00:20:20.740\nSo that I know, hey I can get out to\nall those networks on the internet.\n\n389\n00:20:20.740 --> 00:20:25.023\nWell, inside a RIP we\ncan say default oops.\n\n390\n00:20:25.023 --> 00:20:30.602\nDefault-information originate.\n\n391\n00:20:30.602 --> 00:20:33.480\nThat command right there,\ndefault-Information originate,\n\n392\n00:20:33.480 --> 00:20:37.260\nsays if I have a default route go and\nadvertise it into RIP.\n\n393\n00:20:37.260 --> 00:20:39.390\nAnd that way other people\nknow they can come to me and\n\n394\n00:20:39.390 --> 00:20:41.760\nI can get them out to the Internet or\nto these unknown networks.\n\n395\n00:20:41.760 --> 00:20:45.120\nAnybody that's not in their routing\ntable I can get them there.\n\n396\n00:20:45.120 --> 00:20:48.180\nSo this is something that we do\nmake use of in EIGRP and OSPF.\n\n397\n00:20:48.180 --> 00:20:50.290\nA lot of people either don't realize or\n\n398\n00:20:50.290 --> 00:20:54.120\njust forget that RIP can do it also so\nnow we start distributing that out.\n\n399\n00:20:54.120 --> 00:20:56.910\nAnd I'm not gonna see anything different\non this router, but if I jump over to my\n\n400\n00:20:56.910 --> 00:21:00.250\nbranch router this guy who didn't\nhave a gateway of last resort,\n\n401\n00:21:00.250 --> 00:21:05.170\nnow If I take a look at the routing table,\nit's gotta be a last resort.\n\n402\n00:21:05.170 --> 00:21:07.730\nAnd, that IP,\nthat's the headquarters router.\n\n403\n00:21:07.730 --> 00:21:09.230\nIt's saying, hey,\nif I can't get to a network,\n\n404\n00:21:09.230 --> 00:21:10.620\nif there's a network not\non my routing table,\n\n405\n00:21:10.620 --> 00:21:12.090\nI'll just send it over to headquarters.\n\n406\n00:21:12.090 --> 00:21:13.575\nThey know how to get there I hope.\n\n407\n00:21:13.575 --> 00:21:15.380\n[LAUGH] We'll just send it to them.\n\n408\n00:21:15.380 --> 00:21:18.740\nSo, that was\ndefault-Information originate.\n\n409\n00:21:18.740 --> 00:21:22.900\n>> Now, Don, with that default-Information\noriginate, I know that I've had problems\n\n410\n00:21:22.900 --> 00:21:25.040\nwith it when I first started\nlearning about it, as well.\n\n411\n00:21:25.040 --> 00:21:28.930\nBut is there an always command on\nthis with RIP as well at the end?\n\n412\n00:21:29.990 --> 00:21:33.120\n>> I'm not sure, the always command\nthat Ronnie is mentioning, you know\n\n413\n00:21:33.120 --> 00:21:36.120\nif your default gateway goes down or\nif it becomes unavailable, what happens?\n\n414\n00:21:36.120 --> 00:21:37.490\nDo you pull it out of the routing table?\n\n415\n00:21:37.490 --> 00:21:38.580\nWell, that's what you want.\n\n416\n00:21:38.580 --> 00:21:40.630\nYou want it to come out of\nthe routing table normally.\n\n417\n00:21:40.630 --> 00:21:41.550\nBut not always.\n\n418\n00:21:41.550 --> 00:21:44.680\nSometimes we might wanna advertise\nthat out in the event that\n\n419\n00:21:44.680 --> 00:21:47.600\nwhatever that network is is just not part\nof our routing table for some reason.\n\n420\n00:21:47.600 --> 00:21:50.130\nYou see this with like layer\nthree switches or whatever.\n\n421\n00:21:50.130 --> 00:21:52.890\nSo in the other routing protocols,\nwe have that always operator.\n\n422\n00:21:52.890 --> 00:21:55.660\nWe'll see if, it's easy enough to\nfind out if we have it, right?\n\n423\n00:21:55.660 --> 00:21:59.400\nSo if we take that, oh easy enough\nif we're on the right router.\n\n424\n00:21:59.400 --> 00:22:00.830\nThat's gonna make a difference.\n\n425\n00:22:00.830 --> 00:22:04.200\nLet me just do a question here,\nno we don't have that one\n\n426\n00:22:04.200 --> 00:22:08.200\nin this case that default route is\ngoing to valid in my routing table, or\n\n427\n00:22:08.200 --> 00:22:10.620\nI'm not gonna advertise it out.\n\n428\n00:22:10.620 --> 00:22:13.390\nWe probably could cheat that\ntoo by creating a static route,\n\n429\n00:22:13.390 --> 00:22:14.730\nredistributing that.\n\n430\n00:22:14.730 --> 00:22:17.920\nWe could probably work around that.\n\n431\n00:22:17.920 --> 00:22:21.820\nAnd just what you see in other protocols\nlike OSPF is that you'd have that always\n\n432\n00:22:21.820 --> 00:22:24.390\ntag that you could add in there but\nnot in this case.\n\n433\n00:22:25.840 --> 00:22:30.150\nSo, well Ronnie I think that's probably\na pretty good rundown of version one and\n\n434\n00:22:30.150 --> 00:22:30.660\nversion two.\n\n435\n00:22:30.660 --> 00:22:34.660\nFor most of you guys this is probably\nreview, but be aware that it is important.\n\n436\n00:22:34.660 --> 00:22:36.450\nYou gotta know it for the exam, but\n\n437\n00:22:36.450 --> 00:22:39.000\nit's also important that we\nunderstand the fundamentals of RIP.\n\n438\n00:22:39.000 --> 00:22:43.050\nSo that when we move over into RIPNG that,\nthat all kind of makes sense and\n\n439\n00:22:43.050 --> 00:22:44.580\nfalls into place, too.\n\n440\n00:22:44.580 --> 00:22:47.420\n>> And as always, about the fundamentals,\nthe better that you have the fundamentals\n\n441\n00:22:47.420 --> 00:22:50.260\nin place the more that these advanced\nconcepts, that we've been going\n\n442\n00:22:50.260 --> 00:22:53.710\nover just a little bit, will actually\nkinda be able to flash through and\n\n443\n00:22:53.710 --> 00:22:57.350\nyou won't have to worry if you actually\nhave those basic things set up.\n\n444\n00:22:57.350 --> 00:22:59.230\nSo in this particular episode,\n\n445\n00:22:59.230 --> 00:23:02.820\nwe took a look at some of the limitations\nas well as the setup of RIP.\n\n446\n00:23:02.820 --> 00:23:04.760\nWe also took a look at some\nof the advanced commands,\n\n447\n00:23:04.760 --> 00:23:08.780\nlike the passive interface and\nthe default information originate as well.\n\n448\n00:23:08.780 --> 00:23:11.390\nAnd Don,\nI think that wraps our show, right?\n\n449\n00:23:11.390 --> 00:23:13.680\n>> You know, Ronnie I did think\nof one thing I want to throw in,\n\n450\n00:23:13.680 --> 00:23:14.640\nI hate it when I do this.\n\n451\n00:23:14.640 --> 00:23:15.220\n>> No, that's fine.\n\n452\n00:23:15.220 --> 00:23:17.380\n>> But, it's not in my notes but\nI do wanna mention, again,\n\n453\n00:23:17.380 --> 00:23:18.900\nin preparation for the exam.\n\n454\n00:23:18.900 --> 00:23:23.290\nI know we kind of flippantly threw out\nearlier that the administrative distance\n\n455\n00:23:23.290 --> 00:23:25.690\nfor RIP is 120 by default, right?\n\n456\n00:23:25.690 --> 00:23:26.870\nRemember that for the exam.\n\n457\n00:23:26.870 --> 00:23:29.320\n>> Yeah.\n>> Remember all your administrative\n\n458\n00:23:29.320 --> 00:23:33.880\ndistances that EIGRP with an AD of 90 and\nOSPF with an AD of 110,\n\n459\n00:23:33.880 --> 00:23:37.000\nthey're always gonna\nbe preferred over RIP.\n\n460\n00:23:37.000 --> 00:23:40.073\nStatic route, so the AD of one, or\nconnected routes so the AD of zero,\n\n461\n00:23:40.073 --> 00:23:42.120\nthey're always gonna\nbe preferred over RIP.\n\n462\n00:23:42.120 --> 00:23:45.850\nSo RIP is really going to\nlose out in most scenarios.\n\n463\n00:23:45.850 --> 00:23:48.290\nBut not all scenarios, right?\n\n464\n00:23:48.290 --> 00:23:50.880\nThere's internal BGP routes or IGBP.\n\n465\n00:23:50.880 --> 00:23:55.365\nThere's external EIGBP routes, those\nguys are going to come in with a higher\n\n466\n00:23:55.365 --> 00:23:59.160\nadmin distance to RIP can actually\nbeat them so be aware of that and\n\n467\n00:23:59.160 --> 00:24:03.380\nbe aware of the fact that we can override\nthe admin distance if we want to.\n\n468\n00:24:03.380 --> 00:24:05.520\nThat's pretty easy,\nlet me show you guys while I'm in here.\n\n469\n00:24:05.520 --> 00:24:10.176\nSo for example on my headquarters router,\nif I want to change that admin distance\n\n470\n00:24:10.176 --> 00:24:13.255\nfor rip on it, all I have to\ndo is get into router rip and\n\n471\n00:24:13.255 --> 00:24:16.280\njust say distance followed\nby what I want that to be.\n\n472\n00:24:16.280 --> 00:24:18.600\nWe're at a value one to 255 so\nI can overwrite it.\n\n473\n00:24:18.600 --> 00:24:21.455\nJust be careful because\nwhen you over ride it,\n\n474\n00:24:21.455 --> 00:24:24.244\nit's only overriding\nit on this one router.\n\n475\n00:24:24.244 --> 00:24:26.694\nSo, if you can be manipulating that AB,\n\n476\n00:24:26.694 --> 00:24:29.805\nyou probably want to do that\non all of your routers.\n\n477\n00:24:29.805 --> 00:24:33.362\nGo to each one and set ripped out\nan administrative distance is higher or\n\n478\n00:24:33.362 --> 00:24:34.204\nlower, right.\n\n479\n00:24:34.204 --> 00:24:36.468\nAnd then the other thing\nis that hop count, right.\n\n480\n00:24:36.468 --> 00:24:39.782\nThe hop count, I mentioned earlier\nthat RIP can work in networks up to\n\n481\n00:24:39.782 --> 00:24:43.841\n15 hops aways and that's because the hop\ncount, you know, the way it's stored,\n\n482\n00:24:43.841 --> 00:24:46.499\nthat's it's gonna have\na value of zero through 15.\n\n483\n00:24:46.499 --> 00:24:50.700\nAnd when you get to 15, that's\nactually considered infinite for RIP.\n\n484\n00:24:50.700 --> 00:24:53.530\nRIP looks at that and says, whoa, that's\nso far away I can't even get there, and\n\n485\n00:24:53.530 --> 00:24:54.610\nit gives up.\n\n486\n00:24:54.610 --> 00:24:57.722\nSo, really you wanna see admin\ndistances that are 14, and lower,\n\n487\n00:24:57.722 --> 00:25:00.995\notherwise if you learn a 15,\nyou're gonna try and bump it to 16, and\n\n488\n00:25:00.995 --> 00:25:04.616\nthat's not gonna work, and then that's\nthe end of that route for you, right.\n\n489\n00:25:04.616 --> 00:25:06.670\nSo, pay attention to that hop count.\n\n490\n00:25:06.670 --> 00:25:11.200\nNow, when you look at your routing table,\nyou're probably gonna see like what I do\n\n491\n00:25:11.200 --> 00:25:13.100\nwhere you have a lot of\nones that are really low.\n\n492\n00:25:13.100 --> 00:25:17.102\nThere's that admin distance of\n120 followed by the metric,\n\n493\n00:25:17.102 --> 00:25:21.188\nwhich is half count, so\nmetric here one or two or three whatever.\n\n494\n00:25:21.188 --> 00:25:24.075\nWhen you redistribute routes\nlike I was doing a moment ago or\n\n495\n00:25:24.075 --> 00:25:27.712\nthat I mentioned a moment ago, there\ngonna come in with admin distance of 0\n\n496\n00:25:27.712 --> 00:25:30.450\nregardless of where they're\nbeing distributed from.\n\n497\n00:25:30.450 --> 00:25:32.490\nSo if you, or actually they come\nup with admin distance of 1.\n\n498\n00:25:32.490 --> 00:25:36.754\nSo if we're redistributing from OSPF or\nEIGRP or whatever, those can be very far\n\n499\n00:25:36.754 --> 00:25:39.967\naway and now they come in with\na really great looking metric.\n\n500\n00:25:39.967 --> 00:25:42.716\nSo when you redistribute\nyou can assign that or\n\n501\n00:25:42.716 --> 00:25:47.439\nyou can assign a default metric right here\nin rip too using the default command is\n\n502\n00:25:47.439 --> 00:25:49.920\nwhat made me think of it earlier.\n\n503\n00:25:49.920 --> 00:25:53.527\nBut if you do default/metric you\ncan specify an alternate metric,\n\n504\n00:25:53.527 --> 00:25:57.703\nand this will become the default value\nthat's used when you redistribute in so\n\n505\n00:25:57.703 --> 00:25:59.106\nthat's kind of helpful.\n\n506\n00:25:59.106 --> 00:26:02.212\nIn fact, if you redistribute a route and\ndon't specify a metric and\n\n507\n00:26:02.212 --> 00:26:06.440\nyou haven't specified a default metric,\nit won't make it into the routing table.\n\n508\n00:26:06.440 --> 00:26:07.380\nSo you've gotta do one or the other,\n\n509\n00:26:07.380 --> 00:26:10.980\nspecify it while you're redistributing or\nspecify here as a default.\n\n510\n00:26:10.980 --> 00:26:15.026\nBe aware that the help context shows\nthat massive number from the metric.\n\n511\n00:26:15.026 --> 00:26:17.298\nFor RIP it's gotta be one to 15 and\nif you put 15,\n\n512\n00:26:17.298 --> 00:26:19.530\nthat's basically a death sentence for\nthe route.\n\n513\n00:26:19.530 --> 00:26:21.228\nIt's not gonna go anywhere beyond you.\n\n514\n00:26:21.228 --> 00:26:24.846\nBut you can use that to manipulate how far\ninto your network you want something to\n\n515\n00:26:24.846 --> 00:26:27.280\nadvertise, so\nyou can kinda have some fun with that.\n\n516\n00:26:27.280 --> 00:26:30.710\nBut those are just a couple of additional\nparameters that you might wanna configure\n\n517\n00:26:30.710 --> 00:26:33.990\ninside of RIP and then, Ronnie,\nI promise, that's all I got.\n\n518\n00:26:33.990 --> 00:26:37.216\n>> All right, so\nthat makes it the end of our show today.\n\n519\n00:26:37.216 --> 00:26:40.558\nThank you for watching, signing off for\nITProTV, I'm Ronnie Wong.\n\n520\n00:26:40.558 --> 00:26:41.534\n>> And I'm Don Pezet.\n\n521\n00:26:41.534 --> 00:26:42.474\n>> And we'll see you next time.\n\n522\n00:26:42.474 --> 00:26:48.050\n[MUSIC]\n\n",
          "vimeoId": "137178877"
        },
        {
          "description": "RIPng is a newer version of RIP that works with IPv6. Viewers will hear about configuring RIPng on routers and some of its similarities and differences with RIPv2.",
          "length": "1329",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/ccnproute/cisco-ccnproute300101-3-17-describe_ripng-082415-1.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/ccnproute/cisco-ccnproute300101-3-17-describe_ripng-082415-1-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/ccnproute/cisco-ccnproute300101-3-17-describe_ripng-082415-1-sm.jpg",
          "title": "Describe RIPng",
          "transcript": "WEBVTT\n\n1\n00:00:00.213 --> 00:00:10.263\n[MUSIC]\n\n2\n00:00:10.263 --> 00:00:12.553\nWelcome to another exciting\nepisode here on ITProTV.\n\n3\n00:00:12.553 --> 00:00:15.200\nToday we'll be taking\na look at CCNP route.\n\n4\n00:00:15.200 --> 00:00:16.650\nI'll be your host, Ronnie Wong.\n\n5\n00:00:16.650 --> 00:00:18.880\nHere with me today, Mr. Don Pezet.\n\n6\n00:00:18.880 --> 00:00:19.580\n>> Hi, Ronnie.\n\n7\n00:00:19.580 --> 00:00:22.330\nI'm ready to jump into another\nepisode of CCNP routing.\n\n8\n00:00:22.330 --> 00:00:25.351\nIn this one we're gonna be kind of\ncontinuing on from our last episode\n\n9\n00:00:25.351 --> 00:00:27.430\nwhere we started talking about RIP.\n\n10\n00:00:27.430 --> 00:00:31.380\nAnd I know your favorite comment\nabout RIP is, it's old, right?\n\n11\n00:00:31.380 --> 00:00:31.880\n>> It is old.\n\n12\n00:00:31.880 --> 00:00:34.029\n>> All the routing protocols are old, but\n\n13\n00:00:34.029 --> 00:00:37.028\nsome of them are seeing more\nmaintenance than others,\n\n14\n00:00:37.028 --> 00:00:41.220\nand RIP was one of the last routing\nprotocols to be updated to support IPv6.\n\n15\n00:00:41.220 --> 00:00:44.490\nAnd so that's what we're gonna\nbe taking a look at today,\n\n16\n00:00:44.490 --> 00:00:49.330\nis RIPng, the RIP next generation,\nlike apparently they were Star Trek fans.\n\n17\n00:00:49.330 --> 00:00:53.248\nAnd see that new version of RIP that works\nwith IPv6 and how to implement that and\n\n18\n00:00:53.248 --> 00:00:56.524\nhow to get it applied in a,\nI'm gonna say in a modern environment,\n\n19\n00:00:56.524 --> 00:01:00.580\nbut really you're probably gonna move\naway from RIP in this day and age.\n\n20\n00:01:00.580 --> 00:01:02.040\nI know we've talked in other episodes,\n\n21\n00:01:02.040 --> 00:01:06.260\nthere are still some times where we might\nchoose to go with RIP, right, Ronnie?\n\n22\n00:01:06.260 --> 00:01:10.057\n>> Yep, there may be actually times\nwhen you do choose in RIP, especially in\n\n23\n00:01:10.057 --> 00:01:14.408\na small environment where you don't need\none of those gigantic protocols that tends\n\n24\n00:01:14.408 --> 00:01:18.170\nto actually be incredibly overwhelming\non the processor and on the CPU.\n\n25\n00:01:18.170 --> 00:01:21.210\nBut it is something that you're\nstarting to see people move away from.\n\n26\n00:01:21.210 --> 00:01:25.760\nBut to prevent that you actually\nstarted seeing the introduction of\n\n27\n00:01:25.760 --> 00:01:30.120\nupdating in the IPv6 because some people\nstill want you to actually use it.\n\n28\n00:01:30.120 --> 00:01:33.190\nAt this point I don't know if I would,\nbut it is actually an environment and\n\n29\n00:01:33.190 --> 00:01:35.090\nyou'll actually see it on the exam.\n\n30\n00:01:35.090 --> 00:01:38.380\n>> So the neat thing about RIPng is that\nwe don't really have to relearn a lot.\n\n31\n00:01:38.380 --> 00:01:41.750\nRIPng works exactly the same as RIP.\n\n32\n00:01:41.750 --> 00:01:42.970\nIt's still distance vector.\n\n33\n00:01:42.970 --> 00:01:45.130\nYou still have a maximum hop count of 15.\n\n34\n00:01:45.130 --> 00:01:49.212\nYou still have your split horizon,\npoison reverse, hold-down timers,\n\n35\n00:01:49.212 --> 00:01:52.170\nall that other stuff, all that's the same.\n\n36\n00:01:52.170 --> 00:01:54.360\nAll that's really different in RIPng,\nwell,\n\n37\n00:01:54.360 --> 00:01:55.700\nI guess there's two main differences.\n\n38\n00:01:55.700 --> 00:01:58.130\nOne are the addresses, right,\nwe have IPv6 addresses.\n\n39\n00:01:58.130 --> 00:01:59.580\nThat's a little bit different.\n\n40\n00:01:59.580 --> 00:02:02.380\nAnd then two, the way we configure it.\n\n41\n00:02:02.380 --> 00:02:05.230\nThe way you configure it has actually\nbeen kind of moved around a little bit\n\n42\n00:02:05.230 --> 00:02:06.470\nfrom what we're used to.\n\n43\n00:02:06.470 --> 00:02:07.770\nBut as far as the fundamentals and\n\n44\n00:02:07.770 --> 00:02:12.560\ntheories, everything that you know and\nlove from RIP is still true in RIPng.\n\n45\n00:02:12.560 --> 00:02:13.710\nIt's just the commands have changed.\n\n46\n00:02:13.710 --> 00:02:16.099\n>> Now Don, if it's true about\nall of those fundamentals and\n\n47\n00:02:16.099 --> 00:02:19.440\nall of those different things that we\nhave to know, what about the limitations?\n\n48\n00:02:19.440 --> 00:02:23.180\nAre they still there or\ndid IPv6 really help with that?\n\n49\n00:02:23.180 --> 00:02:25.200\n>> Most of the limitations\nare still there.\n\n50\n00:02:25.200 --> 00:02:27.850\nLet's just say the same\nlimitations that were there\n\n51\n00:02:27.850 --> 00:02:30.210\nin RIP version 2 are still there in RIPng.\n\n52\n00:02:30.210 --> 00:02:33.980\nRIPng is classless by default,\ncuz we don't have classes in IPv6, so\n\n53\n00:02:33.980 --> 00:02:35.715\nwe don't have to worry about that.\n\n54\n00:02:35.715 --> 00:02:41.110\nAuto-summarization is not an issue in\nIPv6, and so we don't have that either.\n\n55\n00:02:41.110 --> 00:02:44.550\nSo those kind of things are gone, but\nyou still have that maximum hop count.\n\n56\n00:02:44.550 --> 00:02:45.950\nIt's still slow.\n\n57\n00:02:45.950 --> 00:02:49.300\nIt's still not suitable for\nlarge or unstable networks, so\n\n58\n00:02:49.300 --> 00:02:50.750\nthat's really the same.\n\n59\n00:02:50.750 --> 00:02:53.460\nBut other than that,\nI say other than that,\n\n60\n00:02:53.460 --> 00:02:54.950\nI make it sound really terrible, right?\n\n61\n00:02:54.950 --> 00:02:55.960\nRIP does still have its place.\n\n62\n00:02:55.960 --> 00:02:57.400\nIt's still quick and\neasy to configure, and\n\n63\n00:02:57.400 --> 00:03:01.930\nyou'll see here in IPv6, it's quick and\neasy to get RIPng up and going.\n\n64\n00:03:01.930 --> 00:03:04.550\nSo let's take a look at that.\n\n65\n00:03:04.550 --> 00:03:07.300\nSo I've got a picture here that\nshows my network topology, and\n\n66\n00:03:07.300 --> 00:03:08.880\nwhat I have is a headquarters router.\n\n67\n00:03:08.880 --> 00:03:12.700\nAnd it's got this Metro Ethernet\nlink here that connects to Branch 1,\n\n68\n00:03:12.700 --> 00:03:17.340\nBranch 2, Branch 3, so I've got these\ndifferent connections around here.\n\n69\n00:03:17.340 --> 00:03:21.355\nAnd what I want to do is I want to set\nup IPv6 routing across my network.\n\n70\n00:03:21.355 --> 00:03:24.360\nMaybe this is my company's\nfirst foray into IPv6.\n\n71\n00:03:24.360 --> 00:03:28.210\nSo I know I need to\ncreate some IPv6 LANs and\n\n72\n00:03:28.210 --> 00:03:31.600\nI need to get a routing protocol\nbetween them up and going.\n\n73\n00:03:31.600 --> 00:03:33.490\nSo how do we do that?\n\n74\n00:03:33.490 --> 00:03:34.660\nIt's really not that hard.\n\n75\n00:03:34.660 --> 00:03:35.960\nI'll start here on my headquarters router.\n\n76\n00:03:35.960 --> 00:03:38.760\nI'm going to set up this network\nto have an IPv6 address and\n\n77\n00:03:38.760 --> 00:03:41.630\nI'll set up the Metro e connection\nto have an IPv6 address.\n\n78\n00:03:41.630 --> 00:03:44.538\nI can set the other routers\nto connect to that, and\n\n79\n00:03:44.538 --> 00:03:48.470\nthen we can use RIPng to\nsynchronize the routes between it.\n\n80\n00:03:48.470 --> 00:03:50.790\nSo let's see that in action.\n\n81\n00:03:50.790 --> 00:03:52.960\nSo here I am in my headquarters router,\nand\n\n82\n00:03:52.960 --> 00:03:56.270\nwhen we get something like this set up,\nthere's a few things that we need to do.\n\n83\n00:03:56.270 --> 00:04:00.040\nFirst off, every Cisco router on\nthe market today supports dual stack\n\n84\n00:04:00.040 --> 00:04:01.900\noperations, IPv4 and IPv6.\n\n85\n00:04:02.960 --> 00:04:05.970\nBut most of them are set up for\nIPv4 by default.\n\n86\n00:04:05.970 --> 00:04:07.710\nThey're not really set up for IPv6.\n\n87\n00:04:07.710 --> 00:04:10.925\nSo we gotta do a few little things just\nto kind of do some housekeeping and\n\n88\n00:04:10.925 --> 00:04:12.400\nget our system set up.\n\n89\n00:04:12.400 --> 00:04:18.520\nSo the first thing I need to do is I need\nto issue the IPv6 unicast-routing command.\n\n90\n00:04:18.520 --> 00:04:21.830\nYour router is set up as an IPv4 router.\n\n91\n00:04:21.830 --> 00:04:23.610\nIt's not set up as an IPv6 router.\n\n92\n00:04:23.610 --> 00:04:27.630\nSo if I don't run this, I could turn on\nRIP all I wanted, it's not gonna work.\n\n93\n00:04:27.630 --> 00:04:32.110\nOr OSPF or EIGRP or any of the IPv6\nrouting protocols, I can turn them on and\n\n94\n00:04:32.110 --> 00:04:35.580\nthey're not gonna work for\nme until I enable the routing sublayer.\n\n95\n00:04:35.580 --> 00:04:37.010\nSo that's my first step.\n\n96\n00:04:37.010 --> 00:04:41.770\nSecond, if I'm gonna be routing IPv6, I\nprobably need to get some IPv6 addresses.\n\n97\n00:04:41.770 --> 00:04:44.070\nSo I'm gonna jump into\nsome of my interfaces.\n\n98\n00:04:44.070 --> 00:04:46.060\nHere, I'll jump into my LAN first,\n\n99\n00:04:46.060 --> 00:04:50.230\nwhere I'll say ipv6 address and\nI'll create a LAN.\n\n100\n00:04:50.230 --> 00:04:54.000\nSo I'll just do something like that.\n\n101\n00:04:54.000 --> 00:04:55.470\nI'm not going too crazy here.\n\n102\n00:04:55.470 --> 00:04:58.010\nSo just setting an IPv6\naddress of 2001:1::1/64,\n\n103\n00:04:58.010 --> 00:05:01.550\nso just a nice big fat\nnetwork right there.\n\n104\n00:05:01.550 --> 00:05:06.395\nThat's what I'm gonna use for\nmy internal network.\n\n105\n00:05:06.395 --> 00:05:11.115\nThen I've got my Metro e network where\nI can assign an IPv6 address also,\n\n106\n00:05:11.115 --> 00:05:14.970\nand we'll just do all zeroes on that one.\n\n107\n00:05:17.090 --> 00:05:19.580\nAnd so we'll set that guy up,\nso now I've got two networks.\n\n108\n00:05:19.580 --> 00:05:22.950\nAnd if I do a show IPv6 route,\n\n109\n00:05:22.950 --> 00:05:26.580\nI can see I've got some IPv6 networks\nright here in my routing table.\n\n110\n00:05:26.580 --> 00:05:28.590\nYou'll see the multicast network shows up,\nbut\n\n111\n00:05:28.590 --> 00:05:31.560\nthe ones I care about\nare these connected ones.\n\n112\n00:05:31.560 --> 00:05:35.730\nSo we could even filter that a little bit\nthere, just to see the connected ones.\n\n113\n00:05:35.730 --> 00:05:37.399\nSo there's the two networks\nthat I just created.\n\n114\n00:05:38.520 --> 00:05:41.620\nI can jump to my other routers and\nstart to do the same thing.\n\n115\n00:05:41.620 --> 00:05:48.996\nSo if I jump over to Branch 1,\nwe can jump into ints e0/1, was the LAN.\n\n116\n00:05:48.996 --> 00:05:52.920\nAnd we'll say ipv6 address 2001:2,\n\n117\n00:05:52.920 --> 00:05:55.670\nso we'll just make this\none the next network up.\n\n118\n00:05:56.740 --> 00:06:02.620\nAnd then I'll get into that e0/0, and that\nwas the one where I was doing all zeroes,\n\n119\n00:06:02.620 --> 00:06:06.585\nbut in this case, I need to make it\na different IP so I don't get duplicates.\n\n120\n00:06:06.585 --> 00:06:07.475\n[LAUGH] We'll go ahead and\n\n121\n00:06:07.475 --> 00:06:11.960\nassign that, and then I probably need to\ndo my ipv6 unicast-routing after telling\n\n122\n00:06:11.960 --> 00:06:14.900\nyou guys how important that command was,\nI probably need to do it.\n\n123\n00:06:14.900 --> 00:06:20.380\nSo now if I take a look at this guy,\nhe's got his two routes,\n\n124\n00:06:20.380 --> 00:06:26.210\nthe other side has its two routes, but\nthis one knows about the 2001:2 network.\n\n125\n00:06:26.210 --> 00:06:29.080\nIt doesn't know about the 2001:1 network.\n\n126\n00:06:29.080 --> 00:06:30.760\nAnd the headquarters router\nis the other way around.\n\n127\n00:06:30.760 --> 00:06:33.170\nIt knows about the 2001:1.\n\n128\n00:06:33.170 --> 00:06:38.758\nIt doesn't know about the 2001:2, but they\nboth are connected to the 2001:0 network,\n\n129\n00:06:38.758 --> 00:06:42.340\nor just ::, so\nthey both are connected to that one.\n\n130\n00:06:42.340 --> 00:06:45.610\nI should be able to fire up RIP,\nhave these two guys talk, and\n\n131\n00:06:45.610 --> 00:06:47.410\nthey'll learn each other's route.\n\n132\n00:06:47.410 --> 00:06:51.070\nWell, in the olden days,\nwe would type router rip and\n\n133\n00:06:51.070 --> 00:06:53.650\nthen we'd specify the networks\nwe wanted to advertise.\n\n134\n00:06:53.650 --> 00:06:55.920\nWell, in IPv6 it's kinda similar.\n\n135\n00:06:55.920 --> 00:07:02.830\nWe have the ipv6 router rip command.\n\n136\n00:07:02.830 --> 00:07:06.110\nBut we actually have to\nfollow it with another entry.\n\n137\n00:07:06.110 --> 00:07:08.200\nWhen you enable RIP on an IPv6 router,\n\n138\n00:07:08.200 --> 00:07:12.530\nyou have to assign what's called a tag,\nand a tag is just a name.\n\n139\n00:07:12.530 --> 00:07:15.640\nYou know how in OSPF you\nhave area numbers and\n\n140\n00:07:15.640 --> 00:07:19.670\nin EIGRP you have\nautonomous system numbers.\n\n141\n00:07:19.670 --> 00:07:22.910\nAnd if you want two routers to talk and\nexchange information, they have to match.\n\n142\n00:07:22.910 --> 00:07:25.120\nBut in RIP you don't have that.\n\n143\n00:07:25.120 --> 00:07:27.430\nSo in the olden days,\n\n144\n00:07:27.430 --> 00:07:30.580\nyou could really only have one RIP\nautonomous system and that was it.\n\n145\n00:07:30.580 --> 00:07:31.550\nYou couldn't have other ones.\n\n146\n00:07:31.550 --> 00:07:34.490\nIf you had five routers that run in RIP,\nthey all talked and that was it.\n\n147\n00:07:34.490 --> 00:07:36.710\nBut now we can use tags to\nkind of manipulate that.\n\n148\n00:07:36.710 --> 00:07:39.900\nSo now you can actually run more than\none RIP process if you want, and\n\n149\n00:07:39.900 --> 00:07:43.320\ntimed at different interfaces, and\ndo all kinds of crazy, kooky stuff.\n\n150\n00:07:43.320 --> 00:07:45.470\nNobody does that,\ncuz if you're gonna do stuff like that,\n\n151\n00:07:45.470 --> 00:07:46.790\nyou go to better protocol.\n\n152\n00:07:46.790 --> 00:07:49.200\nBut we can do it and\nwe just have to give it a name.\n\n153\n00:07:49.200 --> 00:07:53.220\nAnd so I'll call mine, oh,\nI don't know, I'll just call it RIPng.\n\n154\n00:07:53.220 --> 00:07:55.250\nYou can call it whatever you want,\ncall it Bob.\n\n155\n00:07:55.250 --> 00:07:58.442\nIt just needs to be a name that you\ncan remember and a tag you can set,\n\n156\n00:07:58.442 --> 00:08:00.038\nbecause we're gonna need this,\n\n157\n00:08:00.038 --> 00:08:03.692\nbecause the old network commands that\nwe used We don't need those anymore.\n\n158\n00:08:03.692 --> 00:08:08.615\nWith RIPng, you go to each interface and\nyou enable RIP there.\n\n159\n00:08:08.615 --> 00:08:11.265\nAnd the reason is,\nthat's where the IPv6 address and\n\n160\n00:08:11.265 --> 00:08:14.836\nsubnet mask are tied, and so it can\nread it right off of the interface, and\n\n161\n00:08:14.836 --> 00:08:18.020\nnow we don't have to worry about\nall those crazy other commands.\n\n162\n00:08:18.020 --> 00:08:20.000\nYou don't have to worry\nabout passive interface.\n\n163\n00:08:20.000 --> 00:08:25.870\nWe don't even have the passive command\nanymore, so no passive interfaces.\n\n164\n00:08:25.870 --> 00:08:28.180\nYou just go to the individual\ninterfaces and turn them on and\n\n165\n00:08:28.180 --> 00:08:31.620\noff there, and\nthen it's up and it's running.\n\n166\n00:08:31.620 --> 00:08:35.740\nThat's my next step is to jump\ninto each of my interfaces.\n\n167\n00:08:35.740 --> 00:08:38.300\nAnd on the interface I can come in and\nI can say ipv6\n\n168\n00:08:39.610 --> 00:08:44.730\nrip followed by the tag name,\nso I did RIPng and then enable.\n\n169\n00:08:44.730 --> 00:08:46.690\nAnd that's gonna turn it on so\nthat I'm sending and\n\n170\n00:08:46.690 --> 00:08:49.190\nreceiving RIP communications\non that interface.\n\n171\n00:08:49.190 --> 00:08:52.940\nAnd I'll just do it for\neach interface where I wanna turn that on.\n\n172\n00:08:52.940 --> 00:08:55.600\nI'll do the same thing\non my branch router.\n\n173\n00:08:55.600 --> 00:09:01.740\nSo here I'll just say ipv6 router rip and\nthen I'll give it the tag name.\n\n174\n00:09:01.740 --> 00:09:06.381\nAnd then I'll get into my interface, and\n\n175\n00:09:06.381 --> 00:09:09.833\nI will come in and turn this on.\n\n176\n00:09:09.833 --> 00:09:11.934\nAnd I'll do it for my other interface.\n\n177\n00:09:11.934 --> 00:09:12.689\nAnd there we go.\n\n178\n00:09:12.689 --> 00:09:17.420\nSo now I'm up and I'm running RIPng and\nthese guys should start communicating.\n\n179\n00:09:17.420 --> 00:09:20.240\nNow I say they should start,\nit can take a little while.\n\n180\n00:09:20.240 --> 00:09:23.406\nSometimes RIP is not fast,\nit's communicating every 30 seconds.\n\n181\n00:09:23.406 --> 00:09:25.152\nBut they should be sending\nout hello packets,\n\n182\n00:09:25.152 --> 00:09:28.340\nthey should be finding each other,\nand it should happen fairly quickly.\n\n183\n00:09:28.340 --> 00:09:31.290\nIf I jump back to my headquarters,\nwe can start to verify it.\n\n184\n00:09:31.290 --> 00:09:34.764\nAnd verifying RIPng, we've actually got\nseveral different commands we can use to\n\n185\n00:09:34.764 --> 00:09:38.180\ntry and figure out what's going on and\nmake sure that it's working.\n\n186\n00:09:38.180 --> 00:09:40.902\nBut usually where I start is the routing\ntable cuz if it's in the routing table,\n\n187\n00:09:40.902 --> 00:09:41.605\nthen you're done.\n\n188\n00:09:41.605 --> 00:09:42.940\nYou don't have to worry about\nany of the other commands.\n\n189\n00:09:42.940 --> 00:09:49.110\nSo I'm gonna do a quick show ipv6\nroute and look at that routing table.\n\n190\n00:09:49.110 --> 00:09:54.620\nAnd sure enough, there I'm learning that\n2001::2, I'm picking that network up.\n\n191\n00:09:54.620 --> 00:09:58.810\nAnd if I take a look at Branch 1,\n\n192\n00:09:58.810 --> 00:10:02.220\nif I pull up that routing table,\nI'll filter down to just RIP this time.\n\n193\n00:10:02.220 --> 00:10:06.008\nThere we go,\nI can see I'm learning 2001:1.\n\n194\n00:10:06.008 --> 00:10:10.596\nSo that wasn't very hard to do,\nipv6 router rip and a tag, and\n\n195\n00:10:10.596 --> 00:10:14.330\nthen go into each interface and\nenabling that tag.\n\n196\n00:10:14.330 --> 00:10:16.600\nIt's pretty cut and dried.\n\n197\n00:10:16.600 --> 00:10:19.520\nBut you guys see where I could\ncreate more than one RIP tag.\n\n198\n00:10:19.520 --> 00:10:22.650\nAnd I can go to different interfaces and\nenable different tags, and\n\n199\n00:10:22.650 --> 00:10:23.940\nnow I can get some real flexibility.\n\n200\n00:10:23.940 --> 00:10:27.174\nI could even take one interface it,\ndivide it into virtual sub-interfaces and\n\n201\n00:10:27.174 --> 00:10:29.330\ndo different tags on\nthe virtual sub-interfaces.\n\n202\n00:10:29.330 --> 00:10:31.760\nYou can really get some power here.\n\n203\n00:10:31.760 --> 00:10:33.070\nFor RIP that's saying a lot.\n\n204\n00:10:33.070 --> 00:10:35.235\nWe were able to do all\nthe stuff in OSPF and\n\n205\n00:10:35.235 --> 00:10:38.990\nEIGRP before, but\nthis is looking to kind of bridge the gap.\n\n206\n00:10:38.990 --> 00:10:41.850\nWe still have the hop count limits, it's\nstill slow, it's not a great protocol.\n\n207\n00:10:41.850 --> 00:10:43.890\nBut if you want something simple and\n\n208\n00:10:43.890 --> 00:10:47.270\nquick, it got a lot more\npowerful than it used to be.\n\n209\n00:10:47.270 --> 00:10:49.240\n>> Now Don, is there anything else\nwe really need to worry about?\n\n210\n00:10:49.240 --> 00:10:52.190\nSome debugs or\nanything that we need to take a look at?\n\n211\n00:10:52.190 --> 00:10:52.778\n>> Let's do that.\n\n212\n00:10:52.778 --> 00:10:56.180\nSo this worked, it worked right out\nof the box, really not a big deal.\n\n213\n00:10:56.180 --> 00:11:00.260\nAnd that's how it's going to be for most\nof us, but not necessarily on the exam.\n\n214\n00:11:00.260 --> 00:11:02.530\nSo for those of you who are going to\nbe sitting the CCNP Route exam and\n\n215\n00:11:02.530 --> 00:11:05.400\nyou're worried about getting a RIPng\nquestion that's really hard,\n\n216\n00:11:05.400 --> 00:11:07.490\nconfiguring it's super simple, right?\n\n217\n00:11:07.490 --> 00:11:10.530\nIPv6 unicast-routing,\nthat was the first command.\n\n218\n00:11:10.530 --> 00:11:15.534\nYou remember that one, you gotta have it,\nand then we did ipv6 router rip and a tag.\n\n219\n00:11:15.534 --> 00:11:21.860\nAnd then we went to each interface and\nwe did ipv6 rip, the tag name, enabled.\n\n220\n00:11:21.860 --> 00:11:23.080\nSo those three command,\n\n221\n00:11:23.080 --> 00:11:27.580\nthat's all you have to remember to\nget IPv6 and RIPng up and going.\n\n222\n00:11:27.580 --> 00:11:31.140\nSo the first step of troubleshooting for\nme is normally just to look at the config.\n\n223\n00:11:31.140 --> 00:11:34.580\nSo if I take my branch here and\nI do a show run,\n\n224\n00:11:34.580 --> 00:11:38.750\nand I start looking in the running config,\nI'm looking for a couple of things.\n\n225\n00:11:38.750 --> 00:11:41.520\nThe first thing I'm looking for\nis that IPv6 Unicast Routing.\n\n226\n00:11:41.520 --> 00:11:45.770\nNow be careful on this one,\nbecause on some routers it's the default,\n\n227\n00:11:45.770 --> 00:11:47.430\nit may actually be turned on.\n\n228\n00:11:47.430 --> 00:11:49.350\nBut like on mine, it's not the default.\n\n229\n00:11:49.350 --> 00:11:51.090\nSo I can clearly see it right there.\n\n230\n00:11:51.090 --> 00:11:53.650\nIPv6 unicast-routing I expect to see it.\n\n231\n00:11:53.650 --> 00:11:57.110\nIf I don't see it, I go ahead and run\nit again, because if it is the default,\n\n232\n00:11:57.110 --> 00:11:58.780\nit's not gonna hurt to run it again.\n\n233\n00:11:58.780 --> 00:12:01.400\nAnd if it's not the default,\nthat makes sure it gets turned on, so\n\n234\n00:12:01.400 --> 00:12:02.120\nI always look for that.\n\n235\n00:12:02.120 --> 00:12:03.570\nThat's step one.\n\n236\n00:12:03.570 --> 00:12:06.420\nAnd then after that I can jump down and\nlook at my interfaces.\n\n237\n00:12:06.420 --> 00:12:10.270\nAm I seeing that the tag is enabled and\nis the tag name right?\n\n238\n00:12:10.270 --> 00:12:12.920\nIf we have a typo in the tag name,\nthat's gonna cause a problem.\n\n239\n00:12:12.920 --> 00:12:15.832\nSo I need to verify that and\nlook for it on each interface.\n\n240\n00:12:15.832 --> 00:12:17.875\nIt's done on a per-interface basis.\n\n241\n00:12:17.875 --> 00:12:21.218\nAnd then lastly you can jump\ndown to the section for RIP,\n\n242\n00:12:21.218 --> 00:12:23.580\nwhich I probably could've filtered.\n\n243\n00:12:23.580 --> 00:12:26.840\nBut for most of us it's gonna\nbe a simple entry like that,\n\n244\n00:12:26.840 --> 00:12:29.460\njust ipv6 router rip and then the tag.\n\n245\n00:12:29.460 --> 00:12:31.015\nYou can put other options in there.\n\n246\n00:12:31.015 --> 00:12:36.725\nIf I were to jump into that, let me\njust get back into that entry there.\n\n247\n00:12:36.725 --> 00:12:40.255\nYou'll see you can set things like\ndistribute list, default metrics,\n\n248\n00:12:40.255 --> 00:12:41.055\ndistance.\n\n249\n00:12:41.055 --> 00:12:44.025\nYou could start to override a lot of\nsettings that we could in RIP like normal.\n\n250\n00:12:44.025 --> 00:12:46.125\nAnd then that section\nwill start to fill out.\n\n251\n00:12:46.125 --> 00:12:51.385\nBut normally in IPv4 you'd see\nversion two, or no auto summary.\n\n252\n00:12:51.385 --> 00:12:54.165\nYou'd see network commands and so\nyou always expect to see things there.\n\n253\n00:12:54.165 --> 00:12:56.970\nIn IPv6 I really do just\nexpect to see that.\n\n254\n00:12:56.970 --> 00:12:59.340\nThat means that it started up.\n\n255\n00:12:59.340 --> 00:13:03.330\nSo as far as examining the configuration,\nthat's the first thing, just look for\n\n256\n00:13:03.330 --> 00:13:06.060\nthose three commands and\nmake sure they're there.\n\n257\n00:13:06.060 --> 00:13:09.720\nOutside of that, for example, if you\ndon't have access to the configuration,\n\n258\n00:13:09.720 --> 00:13:12.180\nmaybe you're on\na permissions-limited account,\n\n259\n00:13:12.180 --> 00:13:15.319\nyou can do something\nlike show ipv6 protocols.\n\n260\n00:13:16.690 --> 00:13:20.740\nAnd what you should expect to\nsee is that RIP is turned on and\n\n261\n00:13:20.740 --> 00:13:22.368\nyou should see the tag name there too.\n\n262\n00:13:22.368 --> 00:13:24.112\nSee how it's not just RIP that's on,\nit's RIPng.\n\n263\n00:13:24.112 --> 00:13:26.746\nAnd you can see the interfaces\nthat it's active from and\n\n264\n00:13:26.746 --> 00:13:28.870\nwhether we're doing any redistribution.\n\n265\n00:13:28.870 --> 00:13:31.220\nSo that's another quick way just to\nverify that it's up and running.\n\n266\n00:13:31.220 --> 00:13:33.520\nIt doesn't verify that it's working.\n\n267\n00:13:33.520 --> 00:13:36.280\nIt just says that it's turned on,\nso a quick way to verify that.\n\n268\n00:13:37.740 --> 00:13:38.820\nAll right, some of the other commands.\n\n269\n00:13:38.820 --> 00:13:41.770\nThere are some new commands that have\nbeen introduced because of the tags.\n\n270\n00:13:41.770 --> 00:13:48.510\nSo for example, if we do show ipv6 rip,\nwhen you run that, that gives\n\n271\n00:13:48.510 --> 00:13:52.450\nus a little more detailed information\nthan the old show IP protocols.\n\n272\n00:13:52.450 --> 00:13:55.700\nAnd so here's where I can start to\nsee things like, what are my updates,\n\n273\n00:13:55.700 --> 00:13:58.420\nwhat's my expire, my hold downs,\nand all that information.\n\n274\n00:13:58.420 --> 00:14:02.240\nAnd you'll see by and\nlarge it's the same as RIP for IPv4.\n\n275\n00:14:02.240 --> 00:14:03.490\nMost of this hasn't changed.\n\n276\n00:14:03.490 --> 00:14:08.422\nWe're still doing updates every 30\nseconds, we're still expiring after 180,\n\n277\n00:14:08.422 --> 00:14:10.933\nso we still have that\nkind of stuff in place.\n\n278\n00:14:10.933 --> 00:14:13.190\nSplit horizon is on.\n\n279\n00:14:13.190 --> 00:14:16.570\nSplit horizon, poison reverse,\nthose are still problems in IPv6\n\n280\n00:14:17.690 --> 00:14:22.680\nbecause it's not the layer three\naddressing protocol that causes the loop.\n\n281\n00:14:22.680 --> 00:14:24.370\nIt's the routing protocol\nthat causes the loop.\n\n282\n00:14:24.370 --> 00:14:26.997\nSo we still have those problems and\nyou'll see those entries in there.\n\n283\n00:14:26.997 --> 00:14:29.435\nSo that was show ipv6 rip.\n\n284\n00:14:29.435 --> 00:14:33.616\nAnd there's actually an extension\nto that that's kind of neat,\n\n285\n00:14:33.616 --> 00:14:38.340\nwhich is show ipv6 rip database, and\nthat lets you see the RIP database.\n\n286\n00:14:38.340 --> 00:14:39.600\nNow why is that important?\n\n287\n00:14:40.820 --> 00:14:44.350\nIt's important because there might\nbe routes that you're learning\n\n288\n00:14:44.350 --> 00:14:48.340\nthat are going into the RIP database but\nthen aren't going into the routing table,\n\n289\n00:14:48.340 --> 00:14:51.650\nbecause another routing protocol has\na better administrative distance.\n\n290\n00:14:52.980 --> 00:14:54.850\nIf OSPF has a better admin distance,\n\n291\n00:14:54.850 --> 00:14:58.830\nwhich it does, then those routes making\nthe routing table, these will get bumped.\n\n292\n00:14:58.830 --> 00:14:59.510\nIs RIP working?\n\n293\n00:14:59.510 --> 00:15:01.756\nI don't know,\nI can't see it in the routing table.\n\n294\n00:15:01.756 --> 00:15:06.240\nI could disable OSPF and test, but\nthat might make the users mad, or\n\n295\n00:15:06.240 --> 00:15:07.600\nI could go and just look at the database.\n\n296\n00:15:07.600 --> 00:15:08.920\nAnd so I can see the database right here.\n\n297\n00:15:08.920 --> 00:15:12.540\nEven if I didn't care about it, it's\nstill nice to be able to look in here and\n\n298\n00:15:12.540 --> 00:15:15.730\nsee information like when it expires and\nother things.\n\n299\n00:15:15.730 --> 00:15:19.368\nAnd notice how this particular route here,\n\n300\n00:15:19.368 --> 00:15:23.850\n2001:1::/64, shows as installed.\n\n301\n00:15:23.850 --> 00:15:25.198\nInstalled means it's in the routing table.\n\n302\n00:15:25.198 --> 00:15:33.680\nBut this guy up here, 2001::/64\nwith a metric of 2, not installed.\n\n303\n00:15:33.680 --> 00:15:35.230\nWhat's that all about?\n\n304\n00:15:35.230 --> 00:15:39.560\nWell, it's not installed because I have\nthat as a directly connected route.\n\n305\n00:15:39.560 --> 00:15:42.190\nAnd a directly connected\nroute has a metric of 0,\n\n306\n00:15:42.190 --> 00:15:44.720\nthat's gonna beat this one\nout with a metric of 2.\n\n307\n00:15:44.720 --> 00:15:48.510\nSo in this scenario I don't need to\nput this in the routing table, so\n\n308\n00:15:48.510 --> 00:15:50.500\nI can see a route that's\nnot present in the table.\n\n309\n00:15:50.500 --> 00:15:54.308\nAnd so that databases command is kinda\nhandy because it gives you an idea of, oh,\n\n310\n00:15:54.308 --> 00:15:58.004\nthere must be some other protocol that's\nstopping this, or some kind of route\n\n311\n00:15:58.004 --> 00:16:01.369\nmap that's removing it from the routing\ntable or something like that.\n\n312\n00:16:01.369 --> 00:16:02.213\nBut RIP is working.\n\n313\n00:16:02.213 --> 00:16:05.098\nI am learning it via RIP.\n\n314\n00:16:05.098 --> 00:16:06.172\nAll right, what else do we have?\n\n315\n00:16:06.172 --> 00:16:07.042\nOh.\n\n316\n00:16:07.042 --> 00:16:11.760\nYou know, when I ran show IPv6 RIP\ndatabase, this command works.\n\n317\n00:16:11.760 --> 00:16:14.680\nAnd if you've only got one tag it's fine,\nbut\n\n318\n00:16:14.680 --> 00:16:19.000\nif you've got more than one tag,\nyou can actually add the tag name to that.\n\n319\n00:16:19.000 --> 00:16:22.950\nSo if I say, show IPv6 RIP RIPng,\ncuz that was my tag,\n\n320\n00:16:22.950 --> 00:16:25.270\ndatabase, now it's gonna\ngive me just that database.\n\n321\n00:16:25.270 --> 00:16:29.460\nSo if I've got five different tags, I can\nlook at individual databases, and same\n\n322\n00:16:29.460 --> 00:16:33.390\nthing with the detail screen back there is\nI could've limited it to just that tag.\n\n323\n00:16:33.390 --> 00:16:36.116\nI'm not in the habit of doing that\ncuz it's really rare [LAUGH] that you\n\n324\n00:16:36.116 --> 00:16:38.860\nwork with more than one tag, but\nif you're in that scenario you can.\n\n325\n00:16:40.350 --> 00:16:42.000\nLet's see, what else do we have.\n\n326\n00:16:42.000 --> 00:16:44.970\nOh, here's a fun one, next hops.\n\n327\n00:16:44.970 --> 00:16:49.520\nWhen we look at something like the RIPng\ninformation here, you can end and\n\n328\n00:16:49.520 --> 00:16:52.300\nthe end of that next-hops.\n\n329\n00:16:52.300 --> 00:16:56.120\nAnd what it's gonna show you is the other\nrouters that you're aware of, right.\n\n330\n00:16:56.120 --> 00:16:58.310\nHere's some other routers\nthat are out there.\n\n331\n00:16:58.310 --> 00:17:01.490\nAnd it's gonna show the link\nlocal address for that router.\n\n332\n00:17:01.490 --> 00:17:05.390\nSo on my E00 there's another router\nout there that I can communicate to,\n\n333\n00:17:05.390 --> 00:17:08.190\nand it's out there, and\nit says it's two paths away, right.\n\n334\n00:17:08.190 --> 00:17:11.550\nIt's just that connection\nacross the Metro E Cloud.\n\n335\n00:17:11.550 --> 00:17:12.800\nBut that's the other router.\n\n336\n00:17:12.800 --> 00:17:15.140\nAnd as I start to learn more routers,\nthey'll make it in here.\n\n337\n00:17:15.140 --> 00:17:18.030\nSo, like, if I go to branch two,\nand get it configured.\n\n338\n00:17:19.500 --> 00:17:23.470\nLet's just do a,\nwe'll just kind of whip this one up here.\n\n339\n00:17:23.470 --> 00:17:25.764\nTurn on that unicast routing and.\n\n340\n00:17:28.739 --> 00:17:30.165\nWe'll assign its tag.\n\n341\n00:17:34.901 --> 00:17:38.917\nAnd, get that turned on.\n\n342\n00:17:38.917 --> 00:17:40.715\nAll right, so\nI'm just going to bring this guy up.\n\n343\n00:17:40.715 --> 00:17:45.210\nSo, oh, [LAUGH] iIt's not gonna work\ncuz I don't have any IPv6 addresses on\n\n344\n00:17:45.210 --> 00:17:45.730\nthis thing.\n\n345\n00:17:45.730 --> 00:17:48.050\nSo let me assign that real quick.\n\n346\n00:17:49.280 --> 00:17:50.990\nLet's see, what router is this?\n\n347\n00:17:50.990 --> 00:17:51.490\nWe'll do that one.\n\n348\n00:17:54.903 --> 00:18:00.410\nAnd we'll get into the other interface,\nwhich will make this the three network.\n\n349\n00:18:02.100 --> 00:18:03.810\nOops, what did I leave out there?\n\n350\n00:18:03.810 --> 00:18:06.500\nIPv6 address, oh, not enough colons.\n\n351\n00:18:06.500 --> 00:18:07.650\nYou gotta watch your colon.\n\n352\n00:18:07.650 --> 00:18:10.710\nI think that was, like,\na public health announcement, wasn't it?\n\n353\n00:18:10.710 --> 00:18:11.460\nIt's important.\n\n354\n00:18:11.460 --> 00:18:12.450\n>> I think it is important.\n\n355\n00:18:12.450 --> 00:18:14.061\n>> Colon, colon health, all right.\n\n356\n00:18:14.061 --> 00:18:16.995\n[LAUGH] Anyhow, all right,\nthis episode's breaking down.\n\n357\n00:18:16.995 --> 00:18:18.360\nAll right, so there we go.\n\n358\n00:18:18.360 --> 00:18:19.870\nSo now I've brought up this new router.\n\n359\n00:18:19.870 --> 00:18:22.450\nAnd this new router's gonna be\nadvertising routes into my system.\n\n360\n00:18:22.450 --> 00:18:28.350\nAnd I should see that when I take a look\nat show ipv6 rip RIPng next-hops.\n\n361\n00:18:28.350 --> 00:18:29.570\nI'm learning routes\nfrom that other router.\n\n362\n00:18:29.570 --> 00:18:32.200\nThat's a next hop for\nme to get to those other networks.\n\n363\n00:18:32.200 --> 00:18:33.100\nAnd there it shows up.\n\n364\n00:18:33.100 --> 00:18:35.780\nSo this is a quick way to\nsee who your neighbors are.\n\n365\n00:18:35.780 --> 00:18:38.620\nAnd these are neighbors that actually\nhave routes that you care about.\n\n366\n00:18:38.620 --> 00:18:42.160\nIf they're advertising to you and\nnone of the routes matter to you,\n\n367\n00:18:42.160 --> 00:18:45.590\nthen they're not really a next hop for\nanything, and so it's not gonna show up.\n\n368\n00:18:45.590 --> 00:18:47.740\nBut that's pretty rare too,\nthat normally indicates a problem.\n\n369\n00:18:47.740 --> 00:18:50.810\nThat you've got some router out there\nthat's somehow become isolated, and so\n\n370\n00:18:50.810 --> 00:18:51.910\nyou've got other issues.\n\n371\n00:18:51.910 --> 00:18:55.310\nBut these will show ones that actually\nare advertising at least one valid route.\n\n372\n00:18:56.380 --> 00:18:57.600\nAnd I feel like I'm leaving one.\n\n373\n00:18:57.600 --> 00:18:58.690\nOh, debuggers.\n\n374\n00:18:58.690 --> 00:18:59.540\nDebugs.\n\n375\n00:18:59.540 --> 00:19:04.880\nSo, when all else fails, when RIP is just\nnot working and you just can't figure out,\n\n376\n00:19:04.880 --> 00:19:06.670\nyou're puling your hair out,\nyou're like, it's three commands.\n\n377\n00:19:06.670 --> 00:19:07.985\nHow can this not be working?\n\n378\n00:19:07.985 --> 00:19:10.990\n>> [LAUGH]\n>> Well, debugs become pretty handy.\n\n379\n00:19:10.990 --> 00:19:15.218\nAnd in IPv4 you know you've got the debug\nIP RIP command that you can run.\n\n380\n00:19:15.218 --> 00:19:21.680\nIn IPv6 it's not any different,\nit's debug IPv6 RIP, all right.\n\n381\n00:19:21.680 --> 00:19:25.370\nAnd when we run that we're going to start\nseeing the RIP information as it happened,\n\n382\n00:19:25.370 --> 00:19:28.870\nnow it doesn't happen right away\nbecause RIP is a timer-based protocol.\n\n383\n00:19:28.870 --> 00:19:30.970\nBut in the next 30 seconds,\nsomething's gonna happen and\n\n384\n00:19:30.970 --> 00:19:32.320\nwe'll start to see some input.\n\n385\n00:19:32.320 --> 00:19:33.200\nThere we go.\n\n386\n00:19:33.200 --> 00:19:35.200\nSo I've got some RIP NG communications.\n\n387\n00:19:35.200 --> 00:19:38.040\nHere's a response being\nreceived from another node and\n\n388\n00:19:38.040 --> 00:19:41.950\nI can see that information and\nit gives me kind of details about it.\n\n389\n00:19:41.950 --> 00:19:44.999\nYou know what's being communicated\nhere and there it goes,\n\n390\n00:19:44.999 --> 00:19:48.901\nmy next RIB walk is gonna be in however\nmany microseconds or whatever that is.\n\n391\n00:19:48.901 --> 00:19:50.510\nI think it's milliseconds.\n\n392\n00:19:50.510 --> 00:19:53.020\nAnd so now it's just kinda reaching out\nthere and picking up those networks.\n\n393\n00:19:53.020 --> 00:19:55.550\nAnd you'll see, like there's all\nthe prefixes that I'm learning\n\n394\n00:19:55.550 --> 00:19:57.160\nfrom that router, right.\n\n395\n00:19:57.160 --> 00:19:59.100\nAnd some of these will get thrown out,\nright.\n\n396\n00:19:59.100 --> 00:20:01.770\nSome of these have a hop count of\n2 instead of a hop count of 1 so\n\n397\n00:20:01.770 --> 00:20:02.730\nthey get thrown away.\n\n398\n00:20:02.730 --> 00:20:05.210\nBut you can see that routing table\nright there, and the metrics.\n\n399\n00:20:05.210 --> 00:20:09.880\nIt's all kinda listed in there if I\nscroll back up to that one a minute ago.\n\n400\n00:20:09.880 --> 00:20:11.690\nRight here.\nSee how the first routes have\n\n401\n00:20:11.690 --> 00:20:14.080\na metric of 1, and\nthe next routes have metrics of 2.\n\n402\n00:20:14.080 --> 00:20:17.100\nSo, those ones that are metrics of 2,\ni'll probably throw those away cuz I'm\n\n403\n00:20:17.100 --> 00:20:18.930\nlearning better routes\nfrom another router.\n\n404\n00:20:18.930 --> 00:20:22.240\nBut you can see that information\nhere even though it doesn't make it\n\n405\n00:20:22.240 --> 00:20:23.280\ninto the data base.\n\n406\n00:20:23.280 --> 00:20:27.180\nAnd that's a really big help because\nyou might see routes coming in with\n\n407\n00:20:27.180 --> 00:20:27.900\na metric of 15.\n\n408\n00:20:27.900 --> 00:20:29.810\nThey're not gonna make\nit to your data base.\n\n409\n00:20:29.810 --> 00:20:31.350\nYour routers just gonna throw those away.\n\n410\n00:20:31.350 --> 00:20:32.430\nThey're infinite routes.\n\n411\n00:20:32.430 --> 00:20:34.830\nWhy bother putting them in the data base,\nright.\n\n412\n00:20:34.830 --> 00:20:36.470\nSo, you can see them here.\n\n413\n00:20:36.470 --> 00:20:37.972\nYou wouldn't see them in the data base.\n\n414\n00:20:37.972 --> 00:20:41.680\nDebugs are really the best\nplace to see that.\n\n415\n00:20:41.680 --> 00:20:44.130\nSo it's also useful because\nyou can see the tags, right?\n\n416\n00:20:44.130 --> 00:20:44.850\nSo there's the tags.\n\n417\n00:20:44.850 --> 00:20:48.960\nSo if I have a tag mismatches or whatever,\nthen we'll be able to spot that and\n\n418\n00:20:48.960 --> 00:20:52.350\nsee kind of issues there,\nthat things don't match up quite right.\n\n419\n00:20:53.610 --> 00:20:55.020\nAnd then when you're done,\njust like before,\n\n420\n00:20:55.020 --> 00:20:57.010\nwe can do an undebug all to turn that off.\n\n421\n00:20:57.010 --> 00:20:58.172\nAnd that'll knock that out, right?\n\n422\n00:20:58.172 --> 00:21:01.390\nSo, RIPng, for\nthe most part just like regular RIP.\n\n423\n00:21:01.390 --> 00:21:03.530\nJust slightly different commands\nthat we need to remember.\n\n424\n00:21:03.530 --> 00:21:05.940\nAnd for the exam,\nyou absolutely need to remember it,\n\n425\n00:21:05.940 --> 00:21:11.205\nbecause while IPv6 is not the widely\npopular protocol that it should be today,\n\n426\n00:21:11.205 --> 00:21:14.075\nit will be soon and Cisco knows that and\n\n427\n00:21:14.075 --> 00:21:16.805\nthey want to make sure that everybody's\ngot their skills up to snuff for that.\n\n428\n00:21:16.805 --> 00:21:19.705\nSo definitely work on that,\ndefinitely get comfortable with it and\n\n429\n00:21:19.705 --> 00:21:22.215\nyou know just work through a few labs, the\nmore you use it the more you'll remember\n\n430\n00:21:22.215 --> 00:21:24.655\nit and then it becomes second nature.\n\n431\n00:21:24.655 --> 00:21:28.845\n>> Yeah it seems like the hardest\npart about enabling RIPng is\n\n432\n00:21:28.845 --> 00:21:34.000\nreally remembering to put the IP address,\nright, actually on the interface itself.\n\n433\n00:21:34.000 --> 00:21:35.020\nAnd learning how to type them, so\n\n434\n00:21:35.020 --> 00:21:37.840\nmake sure you're familiar with\nthe formatting of IPv6, as well.\n\n435\n00:21:37.840 --> 00:21:42.150\nCheck out that episode, make sure you go\nover that before you take the exam, too.\n\n436\n00:21:42.150 --> 00:21:45.360\nWell, Don, any other last issues that\nwe may actually have to add in here?\n\n437\n00:21:45.360 --> 00:21:46.940\n>> I think that's about it on this one,\nRonnie.\n\n438\n00:21:46.940 --> 00:21:47.740\n>> That's great.\n\n439\n00:21:47.740 --> 00:21:49.020\nSo that really is.\n\n440\n00:21:49.020 --> 00:21:51.840\nThis is a great opportunity for\nus to go ahead and stop for\n\n441\n00:21:51.840 --> 00:21:53.020\nthis particular episode.\n\n442\n00:21:53.020 --> 00:21:56.620\nWe learned a lot of RIPng, and\nwe're actually gonna go ahead and\n\n443\n00:21:56.620 --> 00:21:57.990\nimplement that on our own.\n\n444\n00:21:57.990 --> 00:21:59.670\nSo, than you for watching today.\n\n445\n00:21:59.670 --> 00:22:00.900\nI've been your host, Ronnie Wong.\n\n446\n00:22:00.900 --> 00:22:02.210\n>> And I'm Don Pezet.\n\n447\n00:22:02.210 --> 00:22:02.815\n>> See you next time.\n\n448\n00:22:02.815 --> 00:22:08.850\n[SOUND]\n\n",
          "vimeoId": "137177793"
        },
        {
          "description": "There's about ten different packet types that get sent back and forth between EIGRP routers under certain conditions and it’s good to have an understanding all of the communication happening in the background and the different packet types for troubleshooting purposes. Viewers will hear about the main packet types that EIGRP routers use to establish neighboring adjacencies and to keep the routes up to date between them.",
          "length": "1292",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/ccnproute/cisco-ccnproute300101-3-18-eigrp_packet_types-082415-1.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/ccnproute/cisco-ccnproute300101-3-18-eigrp_packet_types-082415-1-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/ccnproute/cisco-ccnproute300101-3-18-eigrp_packet_types-082415-1-sm.jpg",
          "title": "EIGRP Packet Types",
          "transcript": "WEBVTT\n\n1\n00:00:00.000 --> 00:00:10.260\n[MUSIC]\n\n2\n00:00:10.260 --> 00:00:13.580\nWelcome to another exciting\nepisode here on ITProTV.\n\n3\n00:00:13.580 --> 00:00:15.850\nToday we're taking a look at CCNP route.\n\n4\n00:00:15.850 --> 00:00:19.030\nI'll be your host Ronnie Wong, and\nhere with me today is Mr. Don Pazet.\n\n5\n00:00:19.030 --> 00:00:19.542\nHow's it going?\n\n6\n00:00:19.542 --> 00:00:20.685\n>> It is going great Ronnie.\n\n7\n00:00:20.685 --> 00:00:25.291\nIn this episode we're gonna be diving into\nthe wonderful world of EIGRP packet types.\n\n8\n00:00:25.291 --> 00:00:28.774\nNow, I know some of you are thinking, well\nthat doesn't sound too terribly wonderful.\n\n9\n00:00:28.774 --> 00:00:29.880\n>> [LAUGH]\n>> You know,\n\n10\n00:00:29.880 --> 00:00:34.810\nEIGRP does a lot of stuff in\nthe background and to us, what do we see?\n\n11\n00:00:34.810 --> 00:00:37.160\nWe see just quickly enabling\nit in the command prompt and\n\n12\n00:00:37.160 --> 00:00:39.660\nthen the routers start talking and\nlearning routes.\n\n13\n00:00:39.660 --> 00:00:41.360\nWhat do we care about these packet types?\n\n14\n00:00:41.360 --> 00:00:43.560\nWell, if you want to pass\nthe exam you care a lot.\n\n15\n00:00:43.560 --> 00:00:46.740\nBut even in real life,\nit's still a good idea to understand\n\n16\n00:00:46.740 --> 00:00:49.330\nwhat the communication is that's\nhappening in the background.\n\n17\n00:00:49.330 --> 00:00:53.468\nAnd there's, I don't know, there's like\nten different packet types that get sent\n\n18\n00:00:53.468 --> 00:00:56.940\nback and forth between EIGRP\nrouters under certain conditions.\n\n19\n00:00:56.940 --> 00:00:59.770\nAnd the reason we need to have\na good understanding is for\n\n20\n00:00:59.770 --> 00:01:02.530\ntroubleshooting purposes.\n\n21\n00:01:02.530 --> 00:01:05.260\nBecause when you do a debug,\nwhat's the debug showing you?\n\n22\n00:01:05.260 --> 00:01:07.090\nIt's showing you EIGRP packets.\n\n23\n00:01:07.090 --> 00:01:09.120\nAnd each packet serves a purpose, and\n\n24\n00:01:09.120 --> 00:01:11.790\nif you understand the packet types,\nthen you understand the purpose and\n\n25\n00:01:11.790 --> 00:01:14.900\nyou can start to identify where your\nissues are actually coming from.\n\n26\n00:01:14.900 --> 00:01:18.240\nSo from a network analysis standpoint,\n\n27\n00:01:18.240 --> 00:01:20.880\nunderstanding the EIGRP packet\ntypes is really important.\n\n28\n00:01:20.880 --> 00:01:24.480\nFrom a passing the exam standpoint,\nit's really important too, right?\n\n29\n00:01:24.480 --> 00:01:27.260\nSo hopefully we kill two\nbirds with one stone here.\n\n30\n00:01:27.260 --> 00:01:28.660\nSo, let's talk about these packets.\n\n31\n00:01:28.660 --> 00:01:30.930\nNow, I said that there's like\nten different types, right?\n\n32\n00:01:30.930 --> 00:01:33.021\nIf you ever wanna see\nthe ten different types,\n\n33\n00:01:33.021 --> 00:01:34.961\nall you have to do is a quick debug,\nright?\n\n34\n00:01:34.961 --> 00:01:35.801\nWhen you go to do a debug,\n\n35\n00:01:35.801 --> 00:01:38.161\nit's actually gonna show you\nthe different types that are out there.\n\n36\n00:01:38.161 --> 00:01:42.157\nSo if I take my headquarters\nrouter here and\n\n37\n00:01:42.157 --> 00:01:45.830\nI do a debug EIGRP packets, like that.\n\n38\n00:01:45.830 --> 00:01:47.420\nFollowed by a question mark.\n\n39\n00:01:47.420 --> 00:01:50.180\nIt'll show all the different\npacket types that are available.\n\n40\n00:01:50.180 --> 00:01:51.500\nAnd I think I said there were ten.\n\n41\n00:01:51.500 --> 00:01:53.290\nHow many do we have in this list?\n\n42\n00:01:53.290 --> 00:01:54.210\nI'm not gonna count.\n\n43\n00:01:54.210 --> 00:01:55.600\nSo, there's probably maybe 12.\n\n44\n00:01:55.600 --> 00:01:58.680\nSome of these you can actually get\ncombined into one packet type, but\n\n45\n00:01:58.680 --> 00:02:00.398\nyou'll see some of the different\nthings that happen.\n\n46\n00:02:00.398 --> 00:02:02.740\nSo, l et's talk about each of these and\nwhat they are.\n\n47\n00:02:03.930 --> 00:02:09.160\nThe most important packet type that we\nhave is this guy right here, the hello.\n\n48\n00:02:09.160 --> 00:02:12.640\nThe hello packet does a lot.\n\n49\n00:02:12.640 --> 00:02:14.820\nThe hello is how we\ndiscover other routers and\n\n50\n00:02:14.820 --> 00:02:17.250\nhow we allow other routers to discover us.\n\n51\n00:02:17.250 --> 00:02:21.760\nSo when you have a newly installed EIGRP\nrouter or an old router that you just\n\n52\n00:02:21.760 --> 00:02:25.720\nturned EIGRP on with, hello packets are\nthe first things that it's sending out.\n\n53\n00:02:25.720 --> 00:02:27.420\nIt's sending all these messages\nsaying hello, I'm here.\n\n54\n00:02:27.420 --> 00:02:28.610\nIs anybody out there?\n\n55\n00:02:28.610 --> 00:02:30.690\nAnd other people are saying,\nhello, I'm here.\n\n56\n00:02:30.690 --> 00:02:32.330\nHow about you?\nAnd then, you start to communicate.\n\n57\n00:02:32.330 --> 00:02:34.020\nAnd you exchange information.\n\n58\n00:02:34.020 --> 00:02:36.510\nSo that hello packet is really important.\n\n59\n00:02:36.510 --> 00:02:37.290\nIt's discovery.\n\n60\n00:02:37.290 --> 00:02:37.960\nAll right.\n\n61\n00:02:37.960 --> 00:02:41.928\nAnd when you send a hello out,\nthose hellos, they're multi-cast messages.\n\n62\n00:02:41.928 --> 00:02:45.820\nThey're being multi-casted out, sent\nacross the network, and we're waiting for\n\n63\n00:02:45.820 --> 00:02:48.180\nother people to reply back and be happy.\n\n64\n00:02:48.180 --> 00:02:51.010\nIn the older version, in IGRP,\nthey were broadcast, but\n\n65\n00:02:51.010 --> 00:02:55.070\nit EIGRP they're multi-cast, and they get\nsent across so other routers can hear it.\n\n66\n00:02:55.070 --> 00:02:57.780\nThat's an important piece, because\notherwise the routers can't find each\n\n67\n00:02:57.780 --> 00:03:00.470\nother and our network doesn't\ngrow very fast at all, does it?\n\n68\n00:03:00.470 --> 00:03:02.070\n>> No, and also with the hellos,\n\n69\n00:03:02.070 --> 00:03:05.060\ndon't forget that these happen\nrelatively often, right?\n\n70\n00:03:05.060 --> 00:03:08.630\nSo when we do see hellos, they're\ngenerally every five seconds, I believe.\n\n71\n00:03:08.630 --> 00:03:10.120\nIs what they're sent out as and\n\n72\n00:03:10.120 --> 00:03:14.150\nthey can actually even be up to three\nminutes of very slow links as they're\n\n73\n00:03:14.150 --> 00:03:18.520\nactually all sent out to help prevent\nthe idea of overflooding that link.\n\n74\n00:03:18.520 --> 00:03:19.930\n>> Yeah, and that's a good point, Ronnie,\n\n75\n00:03:19.930 --> 00:03:22.565\nis that different links\nbehave different ways.\n\n76\n00:03:22.565 --> 00:03:26.405\nWe'll see that in another episode where\nyou'd have problems with frame relay\n\n77\n00:03:26.405 --> 00:03:28.515\nversus serial versus ethernet.\n\n78\n00:03:28.515 --> 00:03:31.571\nAnd your hello packets are designed\nto exchange that information so\n\n79\n00:03:31.571 --> 00:03:35.767\nthe routers can talk and kind of overcome\nthose different network media types.\n\n80\n00:03:35.767 --> 00:03:38.917\nNow, a hello packet actually\nhas two different forms.\n\n81\n00:03:38.917 --> 00:03:44.517\nThere's the hello form and there's\nthe acknowledgement form, or an ACK.\n\n82\n00:03:44.517 --> 00:03:46.587\nAnd ACK is just short for acknowledgement.\n\n83\n00:03:46.587 --> 00:03:50.677\nAnd what that does is it\nbasically is a response.\n\n84\n00:03:50.677 --> 00:03:52.800\nI'm acknowledging that I got your hello.\n\n85\n00:03:52.800 --> 00:03:56.530\nNow the interesting part here is that the\nhello that goes out, that's a multicast.\n\n86\n00:03:56.530 --> 00:03:58.470\nBut the acknowledgement that comes back,\nthat's a unicast.\n\n87\n00:03:58.470 --> 00:04:00.300\nAnd it's a unicast being sent back.\n\n88\n00:04:00.300 --> 00:04:03.690\nNow hellos and acknowledgements\nare actually the same packet type.\n\n89\n00:04:03.690 --> 00:04:06.960\nAll right, you'll see a lot of\nplaces that list it differently.\n\n90\n00:04:06.960 --> 00:04:10.500\nLike, even here in my debug command,\nright?\n\n91\n00:04:10.500 --> 00:04:14.060\nWhen I did debug EIGRP packets and\nthen a question mark.\n\n92\n00:04:14.060 --> 00:04:16.950\nSee how acknowledgements\nare listed separately from hellos?\n\n93\n00:04:16.950 --> 00:04:18.950\nAll right, but\nthey're not actually separate.\n\n94\n00:04:18.950 --> 00:04:23.160\nAll an acknowledgement is,\nis a hello packet with no data in it.\n\n95\n00:04:23.160 --> 00:04:27.780\nLike the data volume is empty, but the\nsequence number, the TCP sequence number,\n\n96\n00:04:27.780 --> 00:04:29.230\nis set to something that's non-zero,\nright.\n\n97\n00:04:29.230 --> 00:04:30.030\nSo it's gonna be one or higher.\n\n98\n00:04:30.030 --> 00:04:33.600\nAnd that's the acknowledgement that comes\nback that will match the sequence number\n\n99\n00:04:33.600 --> 00:04:35.640\nfor the hello that was sent out.\n\n100\n00:04:35.640 --> 00:04:39.420\nSo, it's just a hello packet that's had\nthe data deleted out of the body of it.\n\n101\n00:04:39.420 --> 00:04:41.935\nSo, they're technically\nthe same packet type.\n\n102\n00:04:41.935 --> 00:04:43.510\nBut your router will know the difference.\n\n103\n00:04:43.510 --> 00:04:45.670\nIf your router receives a hello\nwhen the data is empty,\n\n104\n00:04:45.670 --> 00:04:47.190\nit knows that's an acknowledgment.\n\n105\n00:04:47.190 --> 00:04:50.670\nAnd its a unicast, not a multicast, so it\nknows it's an acknowledgement there too.\n\n106\n00:04:50.670 --> 00:04:53.907\nAnd it knows where it came from\nbecause of the IP header and\n\n107\n00:04:53.907 --> 00:04:57.894\nit looks at the TCP sequence number\nto know what it's acknowledging.\n\n108\n00:04:57.894 --> 00:05:01.329\nSo it's able to piece all that together\nwithout any body, and that's cool\n\n109\n00:05:01.329 --> 00:05:04.710\nbecause it makes it more efficient,\nnot consuming network resources for\n\n110\n00:05:04.710 --> 00:05:07.910\ncommunicating something as\nsimple as an acknowledgement.\n\n111\n00:05:07.910 --> 00:05:10.520\nSo hellos and\nacknowledgements work together.\n\n112\n00:05:10.520 --> 00:05:11.870\nWe send out hellos.\n\n113\n00:05:11.870 --> 00:05:14.390\nWe receive acknowledgements.\n\n114\n00:05:14.390 --> 00:05:18.150\nSo those are two packet types\nthat are really one packet type.\n\n115\n00:05:18.150 --> 00:05:19.199\nSo we'll just kinda combine those.\n\n116\n00:05:20.330 --> 00:05:23.080\nAll right, the next type of packet\nthat I want to talk about and\n\n117\n00:05:23.080 --> 00:05:24.550\nI'm not going in the order\nof the screen here,\n\n118\n00:05:24.550 --> 00:05:28.380\nI'm going kind of in the order of\nimportance, how important these are.\n\n119\n00:05:28.380 --> 00:05:30.560\nSo that the number two\nimportant packet site,\n\n120\n00:05:30.560 --> 00:05:33.680\nthis is like a Dave Letterman list or\nsomething, is an update.\n\n121\n00:05:34.990 --> 00:05:37.520\nWhat happens when your network changes?\n\n122\n00:05:37.520 --> 00:05:38.810\nSo a new router powers up and\n\n123\n00:05:38.810 --> 00:05:41.705\nit's got all these routes it\nwants to tell everybody about.\n\n124\n00:05:41.705 --> 00:05:46.020\nOr an old routers running and network goes\ndown and it needs to everybody oh, guys,\n\n125\n00:05:46.020 --> 00:05:50.820\nthe networks down, or maybe a network\njust gets better, or worse, right?\n\n126\n00:05:50.820 --> 00:05:52.060\nAnd so its metric changes.\n\n127\n00:05:52.060 --> 00:05:54.120\nMaybe the bandwidth get increased or\ndecreased and so\n\n128\n00:05:54.120 --> 00:05:56.420\nthe metric, that EIGRP uses changes.\n\n129\n00:05:56.420 --> 00:05:58.590\nWell, we need to communicate\nthat out to people.\n\n130\n00:05:58.590 --> 00:06:01.770\nAnd we do that through updates.\n\n131\n00:06:01.770 --> 00:06:05.490\nNow updates are generally\nsent out as multicast also.\n\n132\n00:06:05.490 --> 00:06:07.160\nWe're multicasting.\n\n133\n00:06:07.160 --> 00:06:10.210\nThere's a few little scenarios where\nan update might go out as a unicast, but\n\n134\n00:06:10.210 --> 00:06:13.470\nby default they usually go out as\na multicast to let other routers know,\n\n135\n00:06:13.470 --> 00:06:15.370\nhey, this is a new network,\ndo you guys know about it?\n\n136\n00:06:15.370 --> 00:06:17.820\nAnd then the other routers can say,\noh I didn't know that.\n\n137\n00:06:17.820 --> 00:06:18.790\nLet me add it to my routing table.\n\n138\n00:06:18.790 --> 00:06:21.110\nOr I knew that,\nyour route stinks, mine's better.\n\n139\n00:06:21.110 --> 00:06:22.710\nAnd they make that decision.\n\n140\n00:06:22.710 --> 00:06:24.450\nBut the important part is that they know.\n\n141\n00:06:24.450 --> 00:06:26.710\nSo an update, that's pretty important.\n\n142\n00:06:26.710 --> 00:06:29.790\nBecause that's how we tell those\nother routers what's going on,\n\n143\n00:06:29.790 --> 00:06:30.870\nwhat networks are on the network.\n\n144\n00:06:32.320 --> 00:06:35.890\nAll right,\nnow the next one is what's called a query.\n\n145\n00:06:35.890 --> 00:06:38.130\nAnd a query is kind of an interesting one.\n\n146\n00:06:38.130 --> 00:06:41.090\nHopefully, you never see\nqueries on your network.\n\n147\n00:06:41.090 --> 00:06:46.160\nWhat a query is,\nis when your router loses a route.\n\n148\n00:06:46.160 --> 00:06:48.340\nIt has to find a new way to get there.\n\n149\n00:06:48.340 --> 00:06:49.480\nAnd so it sends out a query.\n\n150\n00:06:49.480 --> 00:06:53.130\nAnd it says hey, anybody have\na better way to get to this network?\n\n151\n00:06:53.130 --> 00:06:55.560\nThen we query out to send that right?\n\n152\n00:06:55.560 --> 00:06:59.450\nSo if another router knows the way,\nit's gonna respond back and\n\n153\n00:06:59.450 --> 00:07:01.170\nsay, yeah, here's a better way.\n\n154\n00:07:01.170 --> 00:07:03.460\nBut if nobody responds back,\nwe're querying.\n\n155\n00:07:03.460 --> 00:07:05.553\nWe're kinda waiting just\nto see what happens, right?\n\n156\n00:07:05.553 --> 00:07:08.808\nSo queries, hopefully we don't see them,\ncuz if you see queries on your network,\n\n157\n00:07:08.808 --> 00:07:10.634\nit usually means that\nyou've gotta problem.\n\n158\n00:07:10.634 --> 00:07:14.143\nIt means that a router\nsomewhere lost a network, and\n\n159\n00:07:14.143 --> 00:07:16.970\nnow it's trying to find its way back.\n\n160\n00:07:16.970 --> 00:07:20.710\nFind a new way to get to that network.\n\n161\n00:07:20.710 --> 00:07:21.520\nReplies.\n\n162\n00:07:21.520 --> 00:07:24.270\nNow replies are linked to queries.\n\n163\n00:07:24.270 --> 00:07:25.790\nWhen I send out that query to everybody.\n\n164\n00:07:25.790 --> 00:07:27.960\nHey, can somebody tell\nme how to get there?\n\n165\n00:07:27.960 --> 00:07:31.310\nI get a reply from somebody saying,\nyeah, I know how to get there.\n\n166\n00:07:31.310 --> 00:07:31.890\nRight?\n\n167\n00:07:31.890 --> 00:07:36.228\nAnd when they reply back, it's tied\nto it but it's not like hellos and\n\n168\n00:07:36.228 --> 00:07:39.660\nacknowledgements, where an acknowledgement\nis a hello packet with no message body.\n\n169\n00:07:39.660 --> 00:07:42.500\nWhen we get a reply,\nit has to have the new route, and so\n\n170\n00:07:42.500 --> 00:07:44.130\nit is a separate packet type.\n\n171\n00:07:44.130 --> 00:07:46.740\nSo when I send out a query,\nthat's one packet type.\n\n172\n00:07:46.740 --> 00:07:50.170\nMe asking how to get to a route and\nthen the reply comes back\n\n173\n00:07:50.170 --> 00:07:53.270\nwith a message body that says,\nhere's how you get to the network.\n\n174\n00:07:53.270 --> 00:07:54.830\nSo that's the reply that comes back.\n\n175\n00:07:54.830 --> 00:07:58.145\nNow, there's some really weird and\ninteresting stuff that can happen right\n\n176\n00:07:58.145 --> 00:08:01.511\nhere that I wanna talk about a little bit\nlater, where if a router doesn't know\n\n177\n00:08:01.511 --> 00:08:04.267\nthe answer, it's gotta do something,\nand so we'll see that.\n\n178\n00:08:04.267 --> 00:08:07.464\nBut, assuming the router knows the answer,\nknows how to get there,\n\n179\n00:08:07.464 --> 00:08:08.637\nwe'll get a reply back.\n\n180\n00:08:08.637 --> 00:08:12.420\nSo queries and replies are pretty\nwell linked together, right?\n\n181\n00:08:12.420 --> 00:08:14.270\nAnd then,\nthe last one that I want to mention,\n\n182\n00:08:14.270 --> 00:08:17.830\nas far as what's really important,\nis this guy here, request, right?\n\n183\n00:08:18.970 --> 00:08:21.640\nWhen I send out a query,\nthat means I lost a network.\n\n184\n00:08:21.640 --> 00:08:26.710\nI lost the network, I don't have access\nto it and I need to find a new way.\n\n185\n00:08:26.710 --> 00:08:29.240\nBut what if I have the network,\n\n186\n00:08:29.240 --> 00:08:31.540\nI just need some more\ninformation about it, right?\n\n187\n00:08:31.540 --> 00:08:32.730\nI need to update my own data.\n\n188\n00:08:32.730 --> 00:08:36.060\nMaybe I haven't received an update for\nthis route in a while or\n\n189\n00:08:36.060 --> 00:08:37.970\nI've enabled some extra kmetrics.\n\n190\n00:08:37.970 --> 00:08:40.067\nAnd so\nI need to know more about the load or\n\n191\n00:08:40.067 --> 00:08:42.246\nwhat's the other one that we can turn on?\n\n192\n00:08:42.246 --> 00:08:44.871\nLoad and, oh shoot-\n>> Delay?\n\n193\n00:08:44.871 --> 00:08:45.906\n>> That's not it.\n\n194\n00:08:45.906 --> 00:08:48.230\nSo, bandwidth and\ndelay are used by default.\n\n195\n00:08:48.230 --> 00:08:51.590\nThen we have load and\navailability or reliability.\n\n196\n00:08:52.705 --> 00:08:55.115\nSo if I want load and reliability,\nthose are constantly changing.\n\n197\n00:08:55.115 --> 00:08:58.085\nSo I might need it to reach out and\nget updated for that.\n\n198\n00:08:58.085 --> 00:08:59.785\nWell we don't do a query for that.\n\n199\n00:08:59.785 --> 00:09:02.239\nQuery is when you're trying\nto find a new route, right?\n\n200\n00:09:02.239 --> 00:09:07.238\nBut a request is what we send when we're\njust looking to get more information about\n\n201\n00:09:07.238 --> 00:09:08.764\na route we already know.\n\n202\n00:09:08.764 --> 00:09:11.101\nAll right, now if you haven't\nmessed with your K metrics,\n\n203\n00:09:11.101 --> 00:09:12.657\nyou'll probably never see requests.\n\n204\n00:09:12.657 --> 00:09:15.684\nThey're very very uncommon,\nbecause normally you're getting your\n\n205\n00:09:15.684 --> 00:09:18.104\nadvertisements, if things\nchange you learn about it.\n\n206\n00:09:18.104 --> 00:09:20.590\nThere's not really a need\nto pull information.\n\n207\n00:09:20.590 --> 00:09:23.100\nBut if it's been a long time\nsince you've gotten an update,\n\n208\n00:09:23.100 --> 00:09:27.752\nyour system may do a request to be\nable to get updated information.\n\n209\n00:09:27.752 --> 00:09:30.938\nAll right, so of the super important ones,\nlet's just recap that real quick.\n\n210\n00:09:30.938 --> 00:09:34.159\nWe had hellos and acknowledgements\nwhich are technically one packet type,\n\n211\n00:09:34.159 --> 00:09:36.440\njust two different forms of it, all right?\n\n212\n00:09:36.440 --> 00:09:40.610\nWe saw a query, whoops [LAUGH] we\nsaw queries and replies, right?\n\n213\n00:09:40.610 --> 00:09:44.970\nWhich were how we kind of find those\nmissing routes and then we saw requests.\n\n214\n00:09:44.970 --> 00:09:45.937\nAnd did I leave somebody out?\n\n215\n00:09:45.937 --> 00:09:47.370\n>> Update\n>> Update, oh, yeah,\n\n216\n00:09:47.370 --> 00:09:48.970\nthat was kind of important, right?\n\n217\n00:09:48.970 --> 00:09:51.300\nHow we find the routes in the first place,\nright?\n\n218\n00:09:51.300 --> 00:09:54.390\nSo those are the ones that\nare really important, all right?\n\n219\n00:09:54.390 --> 00:09:56.810\nAnd these are happening in\nthe background all the time.\n\n220\n00:09:56.810 --> 00:09:59.120\nAnd let me show you right\nhere on this router, right?\n\n221\n00:09:59.120 --> 00:10:02.990\nSo here's my headquarters router and\nI'm gonna take another router out here,\n\n222\n00:10:02.990 --> 00:10:04.610\nlet me just take this guy.\n\n223\n00:10:04.610 --> 00:10:07.160\nAnd I'm gonna shut it\noff from the network, so\n\n224\n00:10:07.160 --> 00:10:11.690\nI'm gonna isolate this router, so\nthat it's not connected to anybody.\n\n225\n00:10:11.690 --> 00:10:14.070\nSee how I just dropped all\nmy adjacencies and stuff.\n\n226\n00:10:14.070 --> 00:10:18.770\nSo I'm just gonna isolate it and\nI'm gonna go back to my headquarters and\n\n227\n00:10:18.770 --> 00:10:20.200\nI'm gonna turn on debugging.\n\n228\n00:10:20.200 --> 00:10:23.330\nOkay, now notice when I turn on debugging,\nsee how it's debugging for\n\n229\n00:10:23.330 --> 00:10:26.610\nall the packet types because I\ndidn't specify a packet type.\n\n230\n00:10:26.610 --> 00:10:29.380\nAnd so it's gonna start running and\nwhen I look,\n\n231\n00:10:29.380 --> 00:10:33.330\nI'm seeing a lot of information here,\nacknowledgements, hellos, right?\n\n232\n00:10:33.330 --> 00:10:36.640\nThese are those packets that are\ncommunicating, that are being sent out.\n\n233\n00:10:36.640 --> 00:10:39.090\nAnd then if I jump over\nto that other router and\n\n234\n00:10:39.090 --> 00:10:41.100\nI bring it back up online, right?\n\n235\n00:10:41.100 --> 00:10:44.440\nSo, if I do a no shutdown on\nthe interface, that router's\n\n236\n00:10:44.440 --> 00:10:46.710\ngonna start communicating, and\nmy headquarters router is gonna see them.\n\n237\n00:10:46.710 --> 00:10:50.140\nSo I'm gonna start getting more\ninformation there as part of that process.\n\n238\n00:10:50.140 --> 00:10:53.980\nAnd when it's troubleshooting it's\nactually identifying what type\n\n239\n00:10:53.980 --> 00:10:55.640\nof packet those are.\n\n240\n00:10:55.640 --> 00:10:57.280\nAnd so,\nlet me just turn off my debugging here and\n\n241\n00:10:57.280 --> 00:10:58.850\nwe'll take a look at some of these.\n\n242\n00:10:58.850 --> 00:11:00.790\nFor example,\nyou'll notice that I'm getting hellos.\n\n243\n00:11:00.790 --> 00:11:01.583\nI'm getting a lot of hellos.\n\n244\n00:11:01.583 --> 00:11:07.349\nSo, I can see here EIGRP received\na hello from 192.168.0.2.\n\n245\n00:11:07.349 --> 00:11:13.230\nThat's my branch one, and here's\n192.168.0.4, that's my branch three.\n\n246\n00:11:13.230 --> 00:11:16.635\nAnd so somewhere in here I'll see\nbranch two, which would be I guess\n\n247\n00:11:16.635 --> 00:11:20.777\nit would be .3, so if I kinda skim through\nall this we should find one somewhere.\n\n248\n00:11:20.777 --> 00:11:22.382\nBut I'm also seeing other things, so\n\n249\n00:11:22.382 --> 00:11:24.400\nbranch three is the one\nthat just came up right.\n\n250\n00:11:24.400 --> 00:11:28.989\nSo I should be able to find a hello from\nbranch three if I scroll back far enough.\n\n251\n00:11:30.170 --> 00:11:33.060\nIt will turn up somewhere I'm seeing\nall those updates coming through.\n\n252\n00:11:33.060 --> 00:11:34.780\nHere we go.\n\n253\n00:11:34.780 --> 00:11:39.170\nReceived a hello from 192.168.0.3,\nthat was the branch that I just turned on.\n\n254\n00:11:39.170 --> 00:11:41.910\nSo I got a hello from them saying,\nhey, I'm a new router, right.\n\n255\n00:11:41.910 --> 00:11:45.540\nI'm in this autonomous system,\ncan we exchange routes?\n\n256\n00:11:45.540 --> 00:11:47.330\nAnd I say, hey,\nI'm in that autonomous system too.\n\n257\n00:11:47.330 --> 00:11:49.610\nLet's go ahead and\nstart exchanging routes.\n\n258\n00:11:49.610 --> 00:11:52.690\nI'm receiving some information\nfrom the other side, and\n\n259\n00:11:52.690 --> 00:11:54.370\nI'm receiving an update, all right?\n\n260\n00:11:54.370 --> 00:11:55.480\nWhat is that update?\n\n261\n00:11:55.480 --> 00:11:59.390\nWell, that's the other router telling\nme about the networks it knows.\n\n262\n00:11:59.390 --> 00:12:02.370\nI'm getting that update from them right.\n\n263\n00:12:02.370 --> 00:12:05.650\nAnd then I'm queuing an acknowledgment,\nright?\n\n264\n00:12:05.650 --> 00:12:06.800\nI got an update from them.\n\n265\n00:12:06.800 --> 00:12:09.050\nI need to send an acknowledgement,\nor I get the hello from them.\n\n266\n00:12:09.050 --> 00:12:09.760\nI need to acknowledge.\n\n267\n00:12:09.760 --> 00:12:11.760\nI'm not sure which one this\nis acknowledging exactly.\n\n268\n00:12:11.760 --> 00:12:13.230\nBut you'll see several acknowledgements.\n\n269\n00:12:13.230 --> 00:12:15.940\nWe could kinda trace back these\nsequence numbers to figure out which\n\n270\n00:12:15.940 --> 00:12:17.100\none it was acknowledging.\n\n271\n00:12:17.100 --> 00:12:19.150\nBut we'll see multiple\nacknowledgements for that.\n\n272\n00:12:19.150 --> 00:12:21.700\nAnd we'll continue to receive updates for\nnetworks and\n\n273\n00:12:21.700 --> 00:12:23.930\nwe'll continue to acknowledge\nthat we got those.\n\n274\n00:12:23.930 --> 00:12:25.590\nAnd so we're getting all that information.\n\n275\n00:12:25.590 --> 00:12:28.190\nWe're basically downloading\nthat router's database.\n\n276\n00:12:28.190 --> 00:12:31.310\nAnd then we're gonna pick through it, and\nwe're gonna throw out some routes that we\n\n277\n00:12:31.310 --> 00:12:33.080\ndon't want, and\nwe're gonna keep the ones that we do want.\n\n278\n00:12:33.080 --> 00:12:35.760\nThis is all part of being\na distance vector protocol.\n\n279\n00:12:35.760 --> 00:12:38.120\nDeep down under the hood,\nEIGRP is disinfectors, so\n\n280\n00:12:38.120 --> 00:12:41.330\nwe have to learn about all\nthe routes on the other side.\n\n281\n00:12:41.330 --> 00:12:42.820\nWe get all that information.\n\n282\n00:12:42.820 --> 00:12:46.420\nIn all of this I am seeing hellos,\nacknowledgements, and\n\n283\n00:12:46.420 --> 00:12:48.470\nupdates, and replies.\n\n284\n00:12:48.470 --> 00:12:51.010\nI haven't seen any requests.\n\n285\n00:12:51.010 --> 00:12:54.660\nBut I'm not requesting any new routes or\nany new information.\n\n286\n00:12:54.660 --> 00:12:58.540\nAnd I haven't seen any queries because\nI haven't lost any networks, I'm happy.\n\n287\n00:12:59.660 --> 00:13:02.810\nBut if I go and shut that other\nrouter down, so if I go and\n\n288\n00:13:02.810 --> 00:13:05.810\ndo a debug eigrp packets.\n\n289\n00:13:07.470 --> 00:13:09.690\nLet's do, we'll just do query.\n\n290\n00:13:09.690 --> 00:13:11.630\nI don't wanna get too much going on here.\n\n291\n00:13:11.630 --> 00:13:13.060\nSo I'm just gonna debug those queries.\n\n292\n00:13:13.060 --> 00:13:15.010\nWhen I take that other router and\n\n293\n00:13:15.010 --> 00:13:20.820\nI shut that interface down,\nI'm gonna lose access to its routes.\n\n294\n00:13:20.820 --> 00:13:22.650\nIts routes are gonna come out\nof my routing table, and so\n\n295\n00:13:22.650 --> 00:13:23.540\nwhat's my router gonna do?\n\n296\n00:13:23.540 --> 00:13:25.200\nMy router's gonna do a query.\n\n297\n00:13:25.200 --> 00:13:27.980\nIt's gonna send out a message\nto everybody else saying hey,\n\n298\n00:13:27.980 --> 00:13:29.210\ndoes anybody know how\nto get to this network?\n\n299\n00:13:29.210 --> 00:13:30.620\nI just lost that router.\n\n300\n00:13:30.620 --> 00:13:34.110\nAll right, and then it's gonna have to\nkind of figure out what to do from there.\n\n301\n00:13:34.110 --> 00:13:38.650\nAnd, did I not lose the routes?\n\n302\n00:13:38.650 --> 00:13:39.810\nLet's do this a different,\noh you know what?\n\n303\n00:13:39.810 --> 00:13:41.350\nI think I have more than\none path to that router,\n\n304\n00:13:41.350 --> 00:13:43.170\nI think it's coming in\nover its frame relay.\n\n305\n00:13:43.170 --> 00:13:48.350\nSo [LAUGH] I haven't actually\nlost the route, have I?\n\n306\n00:13:48.350 --> 00:13:49.210\nYep, yep I still have it.\n\n307\n00:13:49.210 --> 00:13:54.010\nSo let's go a different route here and\nnope, wrong router and\n\n308\n00:13:54.010 --> 00:13:59.462\nwe'll shut it down on the actual back\nend to take that out, there we go.\n\n309\n00:13:59.462 --> 00:14:01.840\nAll right,\nnow we're starting to see a query.\n\n310\n00:14:01.840 --> 00:14:04.410\nSo I lost that route, so what did I do?\n\n311\n00:14:04.410 --> 00:14:06.980\nI generated a query well, actually I\nhaven't generated my own query yet,\n\n312\n00:14:06.980 --> 00:14:08.582\nI'm receiving queries from the other guys.\n\n313\n00:14:08.582 --> 00:14:12.440\nRouter three just lost that\nroute when it went down, and\n\n314\n00:14:12.440 --> 00:14:15.360\nI've received queries from it.\n\n315\n00:14:15.360 --> 00:14:18.770\nAnd so here's a query from them saying,\nhey, do you know how to get here?\n\n316\n00:14:18.770 --> 00:14:21.480\nCuz if you do, I just lost mine,\nI need to be able to get there.\n\n317\n00:14:21.480 --> 00:14:23.700\nAnd the other routers are trying\nto sort this stuff out too.\n\n318\n00:14:23.700 --> 00:14:26.500\nThey're trying to say, hey, can we find\nsome alternate method to get there?\n\n319\n00:14:26.500 --> 00:14:29.260\nCuz if we can, we can keep the route and\nthe routing table and\n\n320\n00:14:29.260 --> 00:14:30.690\nour network stays converged.\n\n321\n00:14:30.690 --> 00:14:32.730\nBut if we can't find another way there,\n\n322\n00:14:32.730 --> 00:14:36.030\nwe need to dump the route from\nthe routing table and that's the end.\n\n323\n00:14:36.030 --> 00:14:39.250\nSo that's a query, and\nnow we're looking for that.\n\n324\n00:14:39.250 --> 00:14:43.070\nNow when this happens,\nwe're in what's called active mode.\n\n325\n00:14:43.070 --> 00:14:44.990\nThat route is now active.\n\n326\n00:14:44.990 --> 00:14:47.820\nWe're actively searching for\na new way to get to it, and\n\n327\n00:14:47.820 --> 00:14:49.830\nthat's when our queries go out.\n\n328\n00:14:49.830 --> 00:14:52.370\nI mentioned earlier, there's something\nweird that can happen, all right?\n\n329\n00:14:52.370 --> 00:14:56.070\nIf you've ever heard of SIA,\nor stuck inactive.\n\n330\n00:14:56.070 --> 00:15:00.310\nWhen I did the debug,,\nwhen I did debug eigrp packets and then ?,\n\n331\n00:15:00.310 --> 00:15:05.390\nthere were a couple here,\nSIAquery, SIAreply, okay.\n\n332\n00:15:05.390 --> 00:15:08.260\nThat's stuck inactive, all right.\n\n333\n00:15:08.260 --> 00:15:10.580\nWhen a route goes active that\nmeans we've lost connectivity and\n\n334\n00:15:10.580 --> 00:15:12.590\nwe're trying to find\na new way to get there.\n\n335\n00:15:12.590 --> 00:15:15.400\nAnd so we send a query out on\nthe network and we ask other routers.\n\n336\n00:15:15.400 --> 00:15:18.100\nWell the other routers,\nthey either know or they don't.\n\n337\n00:15:18.100 --> 00:15:20.000\nIf they know the route, they'll tell us.\n\n338\n00:15:20.000 --> 00:15:21.390\nIf they don't know the route,\nthey'll tell us.\n\n339\n00:15:21.390 --> 00:15:22.480\nAnd if they don't know the route,\nthat's it.\n\n340\n00:15:22.480 --> 00:15:23.090\nI can't get there.\n\n341\n00:15:24.100 --> 00:15:27.410\nAnd we'll wait a certain period of time.\n\n342\n00:15:27.410 --> 00:15:29.150\nIf I recall correctly it's three minutes.\n\n343\n00:15:29.150 --> 00:15:31.110\nSo, that's right.\n\n344\n00:15:31.110 --> 00:15:31.710\nRonnie's verifying.\n\n345\n00:15:31.710 --> 00:15:33.200\n180 seconds so, 3 minutes.\n\n346\n00:15:33.200 --> 00:15:36.940\nWe wait three minutes, and if we don't get\na reply back in three minutes then that\n\n347\n00:15:36.940 --> 00:15:39.080\nroute's gone, we toast it out of\nthe table and that's the end of it.\n\n348\n00:15:40.550 --> 00:15:43.340\nBut, sometimes we reach out\nto a router and we say,\n\n349\n00:15:43.340 --> 00:15:45.470\nhey, I don't know how to get there.\n\n350\n00:15:45.470 --> 00:15:47.200\nAnd because it's distance vector,\n\n351\n00:15:47.200 --> 00:15:50.530\nwe can't see beyond the router\nwe're immediately neighbored with.\n\n352\n00:15:50.530 --> 00:15:52.310\nSo our neighbor might say, you know what?\n\n353\n00:15:52.310 --> 00:15:53.370\nGive me just a minute.\n\n354\n00:15:53.370 --> 00:15:55.050\nI wanna reach out to this other router.\n\n355\n00:15:55.050 --> 00:15:57.099\nAnd it can reach out on our behalf.\n\n356\n00:15:57.099 --> 00:16:00.959\nWell, now that router has\nits own three minute timer.\n\n357\n00:16:00.959 --> 00:16:02.681\nAnd the next router it talks to\nmight do the same thing and say,\n\n358\n00:16:02.681 --> 00:16:03.287\nhey, you know what?\n\n359\n00:16:03.287 --> 00:16:04.781\nGive me a minute,\nI'm gonna go talk to somebody else.\n\n360\n00:16:04.781 --> 00:16:06.560\nAnd it has it's own three minute timer.\n\n361\n00:16:06.560 --> 00:16:09.670\nAnd so each of these guys\nreaching out doing queries.\n\n362\n00:16:09.670 --> 00:16:13.340\nWell, meanwhile my query, the original\nquery reaches it's three minute limit.\n\n363\n00:16:13.340 --> 00:16:14.500\nWhat do I do?\n\n364\n00:16:14.500 --> 00:16:17.030\nWell they told me to hold on.\n\n365\n00:16:17.030 --> 00:16:18.310\nWell, okay.\n\n366\n00:16:18.310 --> 00:16:19.730\nI guess I'll hold on.\n\n367\n00:16:19.730 --> 00:16:23.220\nAnd so we transition from being\nactive to being stuck in active.\n\n368\n00:16:23.220 --> 00:16:24.060\nSIA.\n\n369\n00:16:24.060 --> 00:16:27.140\nAll right, and when you're stuck in\nactive, you'll start sending out\n\n370\n00:16:27.140 --> 00:16:32.470\nSIA queries, saying, I'm still waiting,\nI'm still waiting, right, stuck in active.\n\n371\n00:16:32.470 --> 00:16:36.511\nAnd you'll stay that way until each router\ngets their own response and then finally\n\n372\n00:16:36.511 --> 00:16:40.508\nwe'll get an SIA reply, right, a stuck\nin active reply, saying, okay gotcha.\n\n373\n00:16:40.508 --> 00:16:41.630\nI'm sorry.\n\n374\n00:16:41.630 --> 00:16:42.352\nHere's the answer you need.\n\n375\n00:16:42.352 --> 00:16:43.823\nYou can go ahead and come out of active.\n\n376\n00:16:43.823 --> 00:16:47.430\nAnd that's really what an update is,\nor a reply in general,\n\n377\n00:16:47.430 --> 00:16:51.978\nis basically a message coming in saying\nif you're active get out of active.\n\n378\n00:16:51.978 --> 00:16:53.300\nYou don't need to be active any more.\n\n379\n00:16:53.300 --> 00:16:56.380\nHere is a feasible successor,\nanother way to get to that route.\n\n380\n00:16:56.380 --> 00:17:00.090\nPut it in your routing table, and\nthat takes them out of active.\n\n381\n00:17:00.090 --> 00:17:02.500\nAnd now if I hear an update from\nsomebody else with a better route,\n\n382\n00:17:02.500 --> 00:17:05.080\nI'll learn it, but\nI'm not gonna actively seek that route.\n\n383\n00:17:05.080 --> 00:17:06.750\nI'm gonna wait for them to tell me.\n\n384\n00:17:06.750 --> 00:17:10.080\nWhich is efficient operation, right,\ncuz EIGRP, it's not like OSPF.\n\n385\n00:17:10.080 --> 00:17:12.190\nWe don't have a full tree.\n\n386\n00:17:12.190 --> 00:17:15.450\nWe don't see that big\nnetwork that's out there.\n\n387\n00:17:15.450 --> 00:17:17.090\nWe just see our neighbors.\n\n388\n00:17:17.090 --> 00:17:19.840\nAnd so for us to explore the network\nis not really effective.\n\n389\n00:17:19.840 --> 00:17:20.470\nIt is with OSPF.\n\n390\n00:17:20.470 --> 00:17:23.460\nOSPF, you can multi-cast,\nreaching out all over the place.\n\n391\n00:17:23.460 --> 00:17:24.920\nEIGRP, not so much.\n\n392\n00:17:24.920 --> 00:17:27.390\nSo going stuck in active\nis not really a good thing.\n\n393\n00:17:27.390 --> 00:17:29.210\nIt's normally indicative of a problem.\n\n394\n00:17:29.210 --> 00:17:33.550\nWhen we send a request out,\nwe should get a reply within nanoseconds,\n\n395\n00:17:33.550 --> 00:17:35.020\nreally, milliseconds probably.\n\n396\n00:17:35.020 --> 00:17:37.890\nIt's really pretty fast, right?\n\n397\n00:17:37.890 --> 00:17:41.990\nSo for something to go stuck in active,\nto be three minutes out there,\n\n398\n00:17:41.990 --> 00:17:45.910\nthat's a long time, and that usually\nindicates bigger problems on the network.\n\n399\n00:17:45.910 --> 00:17:49.720\nA router shouldn't falsely say,\ngive me just a minute I'm gonna check with\n\n400\n00:17:49.720 --> 00:17:51.490\nsomebody else,\nwhen there's nobody else to check with.\n\n401\n00:17:51.490 --> 00:17:53.490\nSo normally they'll just reply back and\nsay, nope I don't have a route.\n\n402\n00:17:53.490 --> 00:17:56.460\nSorry, good luck, and that's that.\n\n403\n00:17:56.460 --> 00:18:00.900\nSo that's what these two SIA query and\nSIA replies are.\n\n404\n00:18:00.900 --> 00:18:02.920\nI don't identify them as important.\n\n405\n00:18:02.920 --> 00:18:04.360\nVersus a regular query.\n\n406\n00:18:04.360 --> 00:18:06.430\nBecause they shouldn't happen.\n\n407\n00:18:06.430 --> 00:18:07.350\nYou should never see these.\n\n408\n00:18:07.350 --> 00:18:09.010\nYou should never be stuck in active.\n\n409\n00:18:09.010 --> 00:18:10.240\nIf that happens, you got bigger problems.\n\n410\n00:18:10.240 --> 00:18:11.770\nMaybe more than one network failure,\nright?\n\n411\n00:18:11.770 --> 00:18:14.410\nYou could have a cascading failure.\n\n412\n00:18:14.410 --> 00:18:15.288\nThose are fun.\n\n413\n00:18:15.288 --> 00:18:18.410\n[LAUGH] All right, so.\n\n414\n00:18:18.410 --> 00:18:21.300\nFor the exam,\nthe five that we need to remember, right?\n\n415\n00:18:21.300 --> 00:18:23.340\nThe five that we really need to remember,\nacknowledgement and\n\n416\n00:18:23.340 --> 00:18:25.000\nhello, which I combined into one.\n\n417\n00:18:25.000 --> 00:18:27.786\nThen, we've got queries and replies.\n\n418\n00:18:27.786 --> 00:18:32.146\nWe've got requests and updates.\n\n419\n00:18:32.146 --> 00:18:33.865\nThose are the five big ones.\n\n420\n00:18:33.865 --> 00:18:36.719\nThen the SIA query and reply, it's a good\nidea to just to remember those for\n\n421\n00:18:36.719 --> 00:18:38.485\nyour own personal benefit.\n\n422\n00:18:38.485 --> 00:18:40.475\nThe rest of these, what are they?\n\n423\n00:18:40.475 --> 00:18:42.765\nWell the rest of these are ones\nthat you probably won't see.\n\n424\n00:18:42.765 --> 00:18:44.205\nFor example, IPXSAP.\n\n425\n00:18:45.350 --> 00:18:49.790\nIf you're running an IPXSPX network,\nor if you're using SAP protocols,\n\n426\n00:18:49.790 --> 00:18:51.640\nthen it'll actually pick those up.\n\n427\n00:18:51.640 --> 00:18:54.890\nLike, mainframe or Novell NetWare,\nthat kinda information.\n\n428\n00:18:54.890 --> 00:18:56.760\nIt uses different packets for those.\n\n429\n00:18:56.760 --> 00:18:58.760\nAll right?\nSo that's what that is.\n\n430\n00:18:58.760 --> 00:19:02.300\nProbe is for doing, where it does kind\nof like some basic network exploration,\n\n431\n00:19:02.300 --> 00:19:05.800\nit's used on some network types\nwhere multicast aren't allowed.\n\n432\n00:19:05.800 --> 00:19:07.860\nYou don't normally see it.\n\n433\n00:19:07.860 --> 00:19:09.120\nLet's see, what else do we have in here?\n\n434\n00:19:09.120 --> 00:19:10.360\nRetries.\n\n435\n00:19:10.360 --> 00:19:11.630\nRetry is kind of self-explanatory.\n\n436\n00:19:11.630 --> 00:19:13.920\nWe tried to send something,\nit didn't work, we retried.\n\n437\n00:19:13.920 --> 00:19:18.350\nNow EIGRP doesn't really do that very\nmuch because If an update doesn't work,\n\n438\n00:19:18.350 --> 00:19:19.610\nit just sends another update.\n\n439\n00:19:19.610 --> 00:19:22.340\nSo you don't normally\nsee retries very often.\n\n440\n00:19:22.340 --> 00:19:26.100\nStubs, if you've got a stub\nnetwork in EIGRP, if you've\n\n441\n00:19:26.100 --> 00:19:30.320\nflagged a part of your autonomous system\nas a stub, how does it know that?\n\n442\n00:19:30.320 --> 00:19:33.750\nWell, it sends stub messages to\nthe routers inside of that stub,\n\n443\n00:19:33.750 --> 00:19:36.570\nreminding them that you\nare now part of a stub.\n\n444\n00:19:36.570 --> 00:19:38.190\nSo the routers are aware of that.\n\n445\n00:19:38.190 --> 00:19:39.930\nIf you're not using stubs,\nyou won't see those.\n\n446\n00:19:39.930 --> 00:19:40.900\nIf you are using stubs, you will.\n\n447\n00:19:43.200 --> 00:19:46.360\nTerse is another one that\nyou really shouldn't see.\n\n448\n00:19:46.360 --> 00:19:48.010\nThis is not a packet type itself.\n\n449\n00:19:48.010 --> 00:19:49.450\nIt's just a debug.\n\n450\n00:19:49.450 --> 00:19:51.570\nI'm saying display all\nof them except hellos.\n\n451\n00:19:51.570 --> 00:19:52.770\nWe just want to cut the hellos out and\n\n452\n00:19:52.770 --> 00:19:57.010\nshow us the rest, and that's, verbose is\nanother one that's not a packet type.\n\n453\n00:19:57.010 --> 00:19:58.400\nIt's just a modifier.\n\n454\n00:19:58.400 --> 00:20:01.000\nSo that's kind of a rundown of the\ndifferent packet types that are out there.\n\n455\n00:20:01.000 --> 00:20:03.510\nJust remember, some are really important,\nsome not so much.\n\n456\n00:20:03.510 --> 00:20:06.830\nBut you can see them all,\njust fire up a debug and\n\n457\n00:20:06.830 --> 00:20:08.730\nyou'll see them as your system goes.\n\n458\n00:20:08.730 --> 00:20:11.960\nThe more routers you have involved,\nthe more kind of convoluted it gets.\n\n459\n00:20:11.960 --> 00:20:17.230\nSo you might want to limit the amount of\nrouters that are actually up and running.\n\n460\n00:20:18.670 --> 00:20:20.016\nWhoops.\nI guess it would help\n\n461\n00:20:20.016 --> 00:20:21.500\nif I got a new configuration.\n\n462\n00:20:21.500 --> 00:20:24.852\nLimit the amount of routers that\nare actively running EIGRP, so\n\n463\n00:20:24.852 --> 00:20:27.560\nthat you're only seeing\na smaller amount of debugs.\n\n464\n00:20:27.560 --> 00:20:30.280\nBut you can see a bunch of good\ninformation in there as it runs the debug,\n\n465\n00:20:30.280 --> 00:20:31.890\nas it gathers that data.\n\n466\n00:20:31.890 --> 00:20:33.955\nAnd you'll see those\npacket types right there.\n\n467\n00:20:33.955 --> 00:20:36.490\n>> Don there's a lot of information there.\n\n468\n00:20:36.490 --> 00:20:37.700\nThat's really good information.\n\n469\n00:20:37.700 --> 00:20:39.170\nAny other thing that we\nneed to look out for,\n\n470\n00:20:39.170 --> 00:20:42.020\nany special commands that\nwe might have just missed?\n\n471\n00:20:42.020 --> 00:20:45.290\n>> I think those are the basic ones, you\nknow, the point of this exam objective is\n\n472\n00:20:45.290 --> 00:20:47.360\nto make sure you're\nfamiliar with the packets.\n\n473\n00:20:47.360 --> 00:20:48.950\nWe don't really manipulate those packets.\n\n474\n00:20:48.950 --> 00:20:51.510\nI mean obviously we cause them to\nhappen but we don't go in there and\n\n475\n00:20:51.510 --> 00:20:53.640\nchange them or configure them or\nanything like that.\n\n476\n00:20:53.640 --> 00:20:57.860\nThe debug command is the only important\none, debug EIGRP packets, and\n\n477\n00:20:57.860 --> 00:21:00.950\nthen you can run it there or you can\nadd the packet types afterwards and\n\n478\n00:21:00.950 --> 00:21:02.060\nget a little more specific.\n\n479\n00:21:02.060 --> 00:21:04.000\nSo that's basically it.\n\n480\n00:21:04.000 --> 00:21:05.930\n>> All right.\nSo in this episode we've seen all of the\n\n481\n00:21:05.930 --> 00:21:10.100\ndifferent packet types that you can find\non a router, and Don helped us by placing\n\n482\n00:21:10.100 --> 00:21:13.040\nthem in the order of importance that we\nalso need to know about them as well.\n\n483\n00:21:13.040 --> 00:21:14.300\nMake sure you take a look at those.\n\n484\n00:21:14.300 --> 00:21:17.840\nGet those ingrained into your mind as\nyou actually get ready for the exam.\n\n485\n00:21:17.840 --> 00:21:20.930\nBut that's a great place for\nus to go ahead and stop this episode.\n\n486\n00:21:20.930 --> 00:21:21.980\nThank you for watching.\n\n487\n00:21:21.980 --> 00:21:24.210\nSigning off for ITProTV, I'm Ronnie Wong.\n\n488\n00:21:24.210 --> 00:21:25.007\n>> And I'm Don Pezet.\n\n489\n00:21:25.007 --> 00:21:26.083\n>> And we'll see you next time.\n\n490\n00:21:26.083 --> 00:21:32.210\n[MUSIC]\n\n",
          "vimeoId": "137177792"
        },
        {
          "description": "Anytime one can see more neighbors, the better accurate representation of one’s network they are going to have. Viewers will hear about setting up EIGRP neighbor relationships and simply getting EIGRP to work, as well as how to get past some of the issues when working with frame relay or MPLS using the neighbor command.",
          "length": "1209",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/ccnproute/cisco-ccnproute300101-3-19-eigrp_neighbors-082515-1.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/ccnproute/cisco-ccnproute300101-3-19-eigrp_neighbors-082515-1-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/ccnproute/cisco-ccnproute300101-3-19-eigrp_neighbors-082515-1-sm.jpg",
          "title": "EIGRP Neighbors",
          "transcript": "WEBVTT\n\n1\n00:00:00.012 --> 00:00:03.064\n[SOUND]\n\n2\n00:00:03.064 --> 00:00:10.634\n[MUSIC]\n\n3\n00:00:10.634 --> 00:00:14.720\nAll right, welcome to another\nexciting episode here on ITProTV.\n\n4\n00:00:14.720 --> 00:00:17.560\nToday we're taking a look\nat CCMP route studies,\n\n5\n00:00:17.560 --> 00:00:19.880\nmaking sure that you're getting ready for\nthe exam.\n\n6\n00:00:19.880 --> 00:00:21.720\nI'll be you host today,\nand I'm Ronnie Wong.\n\n7\n00:00:21.720 --> 00:00:24.440\nAnd here with me is Mr. Don Pezet.\n\n8\n00:00:24.440 --> 00:00:25.270\nHow's it going, Don?\n\n9\n00:00:25.270 --> 00:00:26.210\n>> It is going great, Ronnie.\n\n10\n00:00:26.210 --> 00:00:27.360\nI'm excited about today's episode.\n\n11\n00:00:27.360 --> 00:00:32.360\nWe're gonna be taking a deeper look\ninto EIGRP neighbor relationships.\n\n12\n00:00:32.360 --> 00:00:35.800\nAnd I know this is one of those things we\ndon't normally worry about all that much.\n\n13\n00:00:35.800 --> 00:00:39.586\nIf you have two routers running EIGRP,\nyou put them in the same AS,\n\n14\n00:00:39.586 --> 00:00:43.390\nthe same autonomous system, they're going\nto peer up and share routes right Ronnie.\n\n15\n00:00:43.390 --> 00:00:44.420\n>> That's exactly right.\n\n16\n00:00:44.420 --> 00:00:47.720\nA lot of times on the configuration,\nit doesn't take much at all.\n\n17\n00:00:47.720 --> 00:00:48.980\nIt actually just allows you,\n\n18\n00:00:48.980 --> 00:00:52.030\nonce you actually figure out there's\na few things that have to match up.\n\n19\n00:00:52.030 --> 00:00:55.010\nAnd once those things match up, normally\nyou just go ahead and configure it,\n\n20\n00:00:55.010 --> 00:00:58.020\nyou set it, and all of a sudden you watch\nthe magic happen and you're ready to go.\n\n21\n00:00:58.020 --> 00:00:59.505\n>> And watch the magic happen.\n\n22\n00:00:59.505 --> 00:01:00.739\n>> That's right.\n\n23\n00:01:00.739 --> 00:01:03.270\n>> Now, unfortunately there is\na little bit more we have to remember\n\n24\n00:01:03.270 --> 00:01:03.920\nwith the EIGRP.\n\n25\n00:01:05.080 --> 00:01:09.340\nIt does work really well out of the box,\nbut deep down inside.\n\n26\n00:01:09.340 --> 00:01:12.830\nThe deep dark secret that EIGRP\ndoesn't like to talk about,\n\n27\n00:01:12.830 --> 00:01:16.390\nis the fact that it is\na distance vector protocol.\n\n28\n00:01:16.390 --> 00:01:19.510\nAnd when we think about distance factor\nprotocols you think about rip and\n\n29\n00:01:19.510 --> 00:01:24.680\nrip, boy it just uses hop count and\nit's slow and it's crummy.\n\n30\n00:01:24.680 --> 00:01:27.850\nBut EIGRP is fast and\nit doesn't just use hop count.\n\n31\n00:01:27.850 --> 00:01:30.780\nIt uses bandwidth and delay by default.\n\n32\n00:01:30.780 --> 00:01:32.930\nIt can use load and reliability.\n\n33\n00:01:32.930 --> 00:01:35.100\nIt's such a powerful protocol.\n\n34\n00:01:35.100 --> 00:01:37.396\nBut deep down underneath,\nit's still distance vector.\n\n35\n00:01:37.396 --> 00:01:40.050\nAnd it's distance vector from\nthe perspective that when\n\n36\n00:01:40.050 --> 00:01:43.480\nan EIGRP router fires up,\nwho is it going to neighbor with?\n\n37\n00:01:43.480 --> 00:01:44.970\nWho is it gonna see?\n\n38\n00:01:44.970 --> 00:01:48.460\nIt's only gonna see routers\nit's directly connected to.\n\n39\n00:01:48.460 --> 00:01:50.910\nIt's not gonna see the next\nrouter in line, or\n\n40\n00:01:50.910 --> 00:01:53.630\nthe one down the line or\nfurther on down the list.\n\n41\n00:01:53.630 --> 00:01:56.650\nIt's only seeing the people it's\ndirectly connected to and so\n\n42\n00:01:56.650 --> 00:02:00.460\nthe whole rest of the network\nis invisible to EIGRP.\n\n43\n00:02:00.460 --> 00:02:04.900\nAnd EIGRP has to trust that its neighbors\nare making the right decisions, and\n\n44\n00:02:04.900 --> 00:02:07.640\nit has to interpret the information it's\nreceiving to make sure that it's making\n\n45\n00:02:07.640 --> 00:02:08.570\nthe right decision.\n\n46\n00:02:08.570 --> 00:02:12.100\nSo there's a lot that goes on behind\nthe scenes to help prevent that.\n\n47\n00:02:12.100 --> 00:02:13.870\nAnd in this episode,\nwe're gonna take a look at that, and\n\n48\n00:02:13.870 --> 00:02:16.570\nwe'll actually it in see a follow up\nepisode when we talk about load balancing,\n\n49\n00:02:16.570 --> 00:02:18.140\nsome other concerns we have.\n\n50\n00:02:18.140 --> 00:02:22.280\nBut here,\nlet's just focus on the neighbor side.\n\n51\n00:02:22.280 --> 00:02:25.566\nAny time we can see more neighbors,\nwe're gonna get a better,\n\n52\n00:02:25.566 --> 00:02:27.805\naccurate representation of our network.\n\n53\n00:02:27.805 --> 00:02:31.704\nSo with EIGRP, all you really need is one\nneighbor to be able to exchange routes and\n\n54\n00:02:31.704 --> 00:02:33.470\nlearn about the rest of the network.\n\n55\n00:02:33.470 --> 00:02:36.830\nBut if you can have more than one network,\nmore than one neighbor,\n\n56\n00:02:36.830 --> 00:02:40.970\nnow you're getting more than one path\nthrough your network which is always good.\n\n57\n00:02:40.970 --> 00:02:44.348\nAnd you're getting more than\none perspective of the network.\n\n58\n00:02:44.348 --> 00:02:46.956\nOtherwise if you just have one neighbor,\nyou just have that one view and\n\n59\n00:02:46.956 --> 00:02:48.748\nyou have to just assume\nthat it's always right.\n\n60\n00:02:48.748 --> 00:02:51.082\nThat's not always the case.\n\n61\n00:02:51.082 --> 00:02:53.858\nSo what I want to show you guys here\nin this episode is a few examples of\n\n62\n00:02:53.858 --> 00:02:56.370\nwhere we might have problems\nwith neighbor relationships.\n\n63\n00:02:56.370 --> 00:02:57.720\nAnd how we can get over that, right,\n\n64\n00:02:57.720 --> 00:03:00.852\nhow we kind of [LAUGH] almost\nsounds like a psychiatry session.\n\n65\n00:03:00.852 --> 00:03:03.190\n>> [LAUGH]\n>> How we can get past our neighbor issues\n\n66\n00:03:03.190 --> 00:03:07.080\nright, and get to a point where\nEIGRP is working nice and smooth.\n\n67\n00:03:07.080 --> 00:03:12.540\nNow, one of the biggest problem\nchildren for EIGRP is frame relay.\n\n68\n00:03:12.540 --> 00:03:15.420\nAnd MPLS networks too it's kinda the same.\n\n69\n00:03:15.420 --> 00:03:19.280\nWith frame relay and MPLS a lot of times\nyou're connecting to a network that\n\n70\n00:03:19.280 --> 00:03:23.960\nto the router appears to be point to\npoint but may actually be multi-point.\n\n71\n00:03:23.960 --> 00:03:26.130\nThere may be other nodes\nthat are out there and\n\n72\n00:03:26.130 --> 00:03:28.640\ntheir might be some services\nthat aren't supported.\n\n73\n00:03:28.640 --> 00:03:31.728\nSo for example on a lot of frame\nrelay networks, broadcast and\n\n74\n00:03:31.728 --> 00:03:33.390\nmulti-cast are blocked.\n\n75\n00:03:33.390 --> 00:03:35.972\nWell, what does the EIGRP use for\nneighbor discovery?\n\n76\n00:03:35.972 --> 00:03:36.760\n>> Multi-cast.\n\n77\n00:03:36.760 --> 00:03:37.642\n>> Multi-cast, yeah.\n\n78\n00:03:37.642 --> 00:03:40.243\nThose hello packets that are being sent\nout there are sent out as multi-cast.\n\n79\n00:03:40.243 --> 00:03:44.610\nAnd if they're being blocked by the ISP,\nthey might not make it through.\n\n80\n00:03:44.610 --> 00:03:48.880\nOr, if it's a multi-point network,\nyou might not have the DLCI\n\n81\n00:03:48.880 --> 00:03:52.510\nnumbers discover or whatever for\nthat frame relay network.\n\n82\n00:03:52.510 --> 00:03:55.200\nSo you might only see one neighbor and\nnot another one.\n\n83\n00:03:55.200 --> 00:03:58.280\nAnd so while that automatic neighbor\ndiscovery works really well, there's\n\n84\n00:03:58.280 --> 00:04:02.630\ntimes we might have to get involved and\nstatically assign our neighbors.\n\n85\n00:04:02.630 --> 00:04:05.620\nSo hopefully you don't have to do that,\nbut it does come up and\n\n86\n00:04:05.620 --> 00:04:07.450\nI just wanna show you\nguys an example here.\n\n87\n00:04:07.450 --> 00:04:11.120\nI'll bring up one of my networks, actually\nlet me start with my network diagram.\n\n88\n00:04:11.120 --> 00:04:12.710\nSo I've got a network set up,\n\n89\n00:04:12.710 --> 00:04:16.910\nit's actually a fairly complex network\nwhere I've got a headquarters router, and\n\n90\n00:04:16.910 --> 00:04:19.690\nI've got all these branch\nrouters sitting out and about.\n\n91\n00:04:19.690 --> 00:04:22.280\nAnd it's a full mesh, frame-relay network.\n\n92\n00:04:22.280 --> 00:04:25.320\nAnd remember with frame-relay,\nwhether it's full mesh, or\n\n93\n00:04:25.320 --> 00:04:27.430\npoint to point,\nreally doesn't cost anything different.\n\n94\n00:04:27.430 --> 00:04:31.760\nYou just call the ISP and say, add some\nvirtual links in, same thing for MPLS.\n\n95\n00:04:31.760 --> 00:04:35.340\nWith MPLS, you just call the ISP and\nsay, put these labels in, and\n\n96\n00:04:35.340 --> 00:04:36.940\nnow you can have a full mesh environment,\n\n97\n00:04:36.940 --> 00:04:40.460\neven though you've actually only got\none connection in each location.\n\n98\n00:04:40.460 --> 00:04:44.390\nWhere this gets challenging is that\nin frame-relay networks multicast and\n\n99\n00:04:44.390 --> 00:04:46.180\nbroadcast are often blocked.\n\n100\n00:04:46.180 --> 00:04:48.660\nAnd so these neighbors,\nthese guys can't get out there and\n\n101\n00:04:48.660 --> 00:04:50.480\ndiscover the neighbors that are out there.\n\n102\n00:04:50.480 --> 00:04:53.480\nOr if they do they might only see one.\n\n103\n00:04:53.480 --> 00:04:56.890\nNow when you configure your frame-relay\nnetwork it might be full mesh on\n\n104\n00:04:56.890 --> 00:05:01.230\nthe backend but you could configure it\nas point to point on these remote ends.\n\n105\n00:05:01.230 --> 00:05:03.620\nAnd then they're gonna see\nthe person on the other side.\n\n106\n00:05:03.620 --> 00:05:06.780\nSo, for example, my branch routers\nmight see the headquarters, but\n\n107\n00:05:06.780 --> 00:05:09.920\nthey won't necessarily see each other.\n\n108\n00:05:09.920 --> 00:05:11.990\nAnd so there's some little\nquirks that get involved there.\n\n109\n00:05:11.990 --> 00:05:14.790\nSo, let's walk through this\nas an actual example and\n\n110\n00:05:14.790 --> 00:05:17.370\nget kind of a chance to\nsee what that's like.\n\n111\n00:05:17.370 --> 00:05:22.450\nSo, here I am on my router, and\non my headquarters router if we just\n\n112\n00:05:22.450 --> 00:05:26.220\ntake a look at my EIGRP configuration,\nI haven't done all that much.\n\n113\n00:05:26.220 --> 00:05:31.840\nRight, so I've enabled the EIGRP with\nan autonomous system number of 1.\n\n114\n00:05:31.840 --> 00:05:34.200\nI'm advertising my 172.16 network.\n\n115\n00:05:34.200 --> 00:05:35.120\nNow, what is that?\n\n116\n00:05:35.120 --> 00:05:38.870\nWell, if I go back to my diagram and\ngo back to my logical topology.\n\n117\n00:05:38.870 --> 00:05:42.545\nSee how my headquarters has this\n172.16 network attached, and\n\n118\n00:05:42.545 --> 00:05:46.600\neach branch has a 172.16 network also,\ndifferent networks, right?\n\n119\n00:05:46.600 --> 00:05:48.520\nSo, we've got 172.16.0 up here,\n172.16.2 down here, .4, .6, right?\n\n120\n00:05:48.520 --> 00:05:54.640\nSo each one has their own network,\nand they're\n\n121\n00:05:56.160 --> 00:06:00.890\nconnected via this frame relay cloud,\nwhich is the 192.168.1 network.\n\n122\n00:06:01.890 --> 00:06:05.500\nAnd so when I enabled EIGRP,\nI limited it just to that,\n\n123\n00:06:05.500 --> 00:06:07.240\nto the frame relay into the LAN.\n\n124\n00:06:07.240 --> 00:06:09.900\nI'm kinda cutting out all the other\nnetworks to keep this nice and\n\n125\n00:06:09.900 --> 00:06:13.320\nsimple so that we can get out there and\nfind our other routers.\n\n126\n00:06:13.320 --> 00:06:17.960\nAnd I did a passive interface default so\nthat I'm not participating on EIGRP in\n\n127\n00:06:17.960 --> 00:06:20.840\nanything other than my\nframe relay network.\n\n128\n00:06:20.840 --> 00:06:25.330\nAnd again, I've only done that just\nto keep my example nice and small.\n\n129\n00:06:25.330 --> 00:06:29.994\nSo on my headquarters router,\nif I do a show ip eigrp neighbor,\n\n130\n00:06:29.994 --> 00:06:33.514\nI can see that I'm peered\nup with my neighbors.\n\n131\n00:06:33.514 --> 00:06:39.561\n192.168.1.2, .3, and .4, those\nare branch 1, branch 2, and branch 3.\n\n132\n00:06:39.561 --> 00:06:44.570\nThe headquarters is the hub of a hub and\nspoke environment.\n\n133\n00:06:44.570 --> 00:06:51.690\nAnd if I take a look at my configuration,\nI've got that serial interface right here.\n\n134\n00:06:51.690 --> 00:06:55.190\nAnd I've got it configured\nas a point to multi-point.\n\n135\n00:06:55.190 --> 00:06:58.420\nThe headquarters of the hub, but\nthis is a multi-point connection.\n\n136\n00:06:58.420 --> 00:07:01.410\nAnd here's my nodes that are out\nthere on that frame relay network.\n\n137\n00:07:01.410 --> 00:07:03.440\nSo that's how it knows about\nthe guys that are out there.\n\n138\n00:07:03.440 --> 00:07:07.370\nAnd when I send out that multicast it's\ngetting converted to a unicast and\n\n139\n00:07:07.370 --> 00:07:09.310\nsent to these guys right here.\n\n140\n00:07:09.310 --> 00:07:10.580\nSo I'm discovering them just fine.\n\n141\n00:07:10.580 --> 00:07:15.580\nSo it looks like frame relay is working\njust fine and I don't have to do anything.\n\n142\n00:07:15.580 --> 00:07:18.780\nBut let's look at this from\nthe perspective of a branch router.\n\n143\n00:07:18.780 --> 00:07:23.558\nIf I jump out to one of my branch routers,\nlike branch 1, and\n\n144\n00:07:23.558 --> 00:07:29.483\nI do a show ip eigrp neighbor, take\na look at its neighbor list, all right?\n\n145\n00:07:29.483 --> 00:07:31.085\nIt only sees one neighbor.\n\n146\n00:07:31.085 --> 00:07:33.320\nIt only sees the headquarters.\n\n147\n00:07:33.320 --> 00:07:35.740\nIt doesn't see the other branches\nthat are out there, okay?\n\n148\n00:07:35.740 --> 00:07:38.652\nIt doesn't see branch 2 or branch 3,\nit just sees headquarters.\n\n149\n00:07:38.652 --> 00:07:41.901\nWell I might want that, if I have\na true hub and spoke environment,\n\n150\n00:07:41.901 --> 00:07:44.060\nI might not want to see\nthe other neighbors.\n\n151\n00:07:44.060 --> 00:07:46.250\nI might just want to see headquarters and\nthat's it.\n\n152\n00:07:46.250 --> 00:07:48.440\nBut what happens if\nheadquarters goes down?\n\n153\n00:07:48.440 --> 00:07:51.800\nWell, headquarters fails,\nbut I'm still up.\n\n154\n00:07:51.800 --> 00:07:52.650\nThe branches are still up.\n\n155\n00:07:52.650 --> 00:07:55.008\nI should still be able\nto talk to the branches.\n\n156\n00:07:55.008 --> 00:07:58.247\nThat's not gonna happen here cuz\nI'm only seeing headquarters.\n\n157\n00:07:58.247 --> 00:08:00.218\nI have another problem here too.\n\n158\n00:08:00.218 --> 00:08:04.534\nIf I do I show ip route and\nI'll just limit that to eigrp routes,\n\n159\n00:08:04.534 --> 00:08:10.500\nI see the 172.16.0.0 network,\nwhich is the one at headquarters.\n\n160\n00:08:10.500 --> 00:08:13.765\nI'm not seeing the ones from branch 2 and\nbranch 3, all right.\n\n161\n00:08:13.765 --> 00:08:19.500\nNot only am I not neighboring with them,\nI'm not seeing their networks, all right.\n\n162\n00:08:19.500 --> 00:08:20.820\nNow why is that?\n\n163\n00:08:20.820 --> 00:08:24.425\nWell, there's actually two different\nproblems that I need to work with here,\n\n164\n00:08:24.425 --> 00:08:27.040\nand I can solve this problem either way.\n\n165\n00:08:27.040 --> 00:08:29.750\nIf I fix one of the problems,\nit gets my network working.\n\n166\n00:08:29.750 --> 00:08:34.210\nSo the first problem is I'm\nnot seeing my other neighbors.\n\n167\n00:08:34.210 --> 00:08:37.800\nAnd if I'm not seeing the neighbors,\nI'm not gonna learn their routes, am I?\n\n168\n00:08:37.800 --> 00:08:39.800\nWell, I should at least learn\nthem through headquarters,\n\n169\n00:08:39.800 --> 00:08:41.200\nI am talking through headquarters.\n\n170\n00:08:41.200 --> 00:08:44.110\nSo, if I'm not learning them\nfrom headquarters, why not?\n\n171\n00:08:44.110 --> 00:08:47.815\nIf I go back to headquarters and\nI take a look at its routing table,\n\n172\n00:08:47.815 --> 00:08:51.980\nright, it's learning all\nthree of those networks.\n\n173\n00:08:51.980 --> 00:08:55.320\nSo, it should be telling me\nif I go back to my topology,\n\n174\n00:08:55.320 --> 00:09:00.554\nif branch 3 tells headquarters about a\nnetwork, headquarters should then tell me,\n\n175\n00:09:00.554 --> 00:09:03.923\ntell branch 1, branch 2,\nabout that same network.\n\n176\n00:09:03.923 --> 00:09:04.730\nWe should learn it.\n\n177\n00:09:04.730 --> 00:09:07.118\nBut that's not working, okay?\n\n178\n00:09:07.118 --> 00:09:09.960\nProblem number one,\nI'm not seeing all my neighbors, so\n\n179\n00:09:09.960 --> 00:09:11.680\nI'm not getting routes directly from them.\n\n180\n00:09:11.680 --> 00:09:15.500\nProblem number two, headquarters is not\nrelaying their routes to me either, and\n\n181\n00:09:15.500 --> 00:09:18.470\nso I need to figure out\nhow I wanna solve this.\n\n182\n00:09:18.470 --> 00:09:20.135\nEither one, I can fix it so\n\n183\n00:09:20.135 --> 00:09:22.480\nthat headquarters tells me\nabout the neighbor routes.\n\n184\n00:09:22.480 --> 00:09:25.270\nIf that happens,\nI'll learn about the other guys' routes.\n\n185\n00:09:25.270 --> 00:09:29.100\nBut, I'm gonna be flowing my\ntraffic through headquarters.\n\n186\n00:09:29.100 --> 00:09:32.970\nSo if headquarters were to fail,\nI'm not gonna see my neighbors anymore.\n\n187\n00:09:32.970 --> 00:09:34.500\nRight, I'm gonna lose those networks.\n\n188\n00:09:34.500 --> 00:09:37.209\nSo if I want traffic to\nflow through headquarters,\n\n189\n00:09:37.209 --> 00:09:41.184\nthen I need to get headquarters relaying\nthe neighbor routes, all right.\n\n190\n00:09:41.184 --> 00:09:44.993\nOr two, if I wanna be able to cut\ndirectly to these other guys, right,\n\n191\n00:09:44.993 --> 00:09:49.300\nthere's no reason if I'm going into\nthe frame relay cloud here, right?\n\n192\n00:09:49.300 --> 00:09:51.460\nThere's no reason I couldn't just\njump right over to branch 2 or\n\n193\n00:09:51.460 --> 00:09:55.600\njump right over to branch 3 and\nskip headquarters all together, right?\n\n194\n00:09:55.600 --> 00:09:59.230\nWell, I could do that if I wanted to\nbypass headquarters for that traffic.\n\n195\n00:09:59.230 --> 00:10:00.540\nSo this is where we have\nto make a decision.\n\n196\n00:10:00.540 --> 00:10:03.543\nAnd the reason I say it's a decision,\nnormally you'd say, well, forget it.\n\n197\n00:10:03.543 --> 00:10:05.130\nI don't want to cut through\nheadquarters if I don't need to.\n\n198\n00:10:05.130 --> 00:10:07.670\nLet's save some bandwidth,\nright, and that's a great idea.\n\n199\n00:10:07.670 --> 00:10:10.340\nBut you might have web\nfiltering hardware or\n\n200\n00:10:10.340 --> 00:10:12.790\nsecurity hardware up here logging,\nmonitoring.\n\n201\n00:10:12.790 --> 00:10:14.360\nYou might wanna force that traffic.\n\n202\n00:10:14.360 --> 00:10:17.420\nYou might not want a virus infection to\nhappen in branch 1 and then be able to\n\n203\n00:10:17.420 --> 00:10:20.840\njump to branch 2 and branch 3, and\nheadquarters not even know about it.\n\n204\n00:10:20.840 --> 00:10:23.560\nSo you might want that traffic\nto flow through headquarters.\n\n205\n00:10:24.860 --> 00:10:27.690\nWell, if we want the traffic\nto flow through headquarters,\n\n206\n00:10:27.690 --> 00:10:32.140\nthe reason we're not seeing those\nnetworks, is because of split horizon.\n\n207\n00:10:32.140 --> 00:10:35.610\nEIGRP is a distance vector protocol.\n\n208\n00:10:35.610 --> 00:10:39.370\nYou only see the neighbors\nyou directly connect to.\n\n209\n00:10:39.370 --> 00:10:42.780\nAnd as a result, it's actually pretty\neasy to cause loops inside a EIGRP.\n\n210\n00:10:42.780 --> 00:10:44.731\nWe got a couple of loop\nprevention mechanisms, right.\n\n211\n00:10:44.731 --> 00:10:47.981\nThere's poison reverse,\nsplit horizon, hold down timers,\n\n212\n00:10:47.981 --> 00:10:50.260\nall sorts of stuff\ntrying to prevent loops.\n\n213\n00:10:50.260 --> 00:10:52.080\nSplit horizon is one of them.\n\n214\n00:10:52.080 --> 00:10:56.530\nAnd split horizon,\nwhat's the basic tenet of split horizon?\n\n215\n00:10:56.530 --> 00:10:58.530\nIf we learn a route on an interface,\n\n216\n00:10:58.530 --> 00:11:02.270\nwe won't advertise the route\nout the same interface.\n\n217\n00:11:02.270 --> 00:11:04.790\nWell, frame relay's one of\nthose weird exceptions.\n\n218\n00:11:04.790 --> 00:11:07.660\nRight, if I look at my\nheadquarters router, and\n\n219\n00:11:07.660 --> 00:11:11.940\nI take a look at its\nmain serial interface,\n\n220\n00:11:11.940 --> 00:11:16.030\nit's connected to all three neighbors\non one multi-point interface.\n\n221\n00:11:16.030 --> 00:11:21.450\nSo if it learns a route from router three,\nit's learning it on this interface.\n\n222\n00:11:21.450 --> 00:11:23.860\nIs it gonna then turn around and\nadvertise the same route,\n\n223\n00:11:23.860 --> 00:11:26.170\nout the same interface to\nthese other neighbors?\n\n224\n00:11:26.170 --> 00:11:28.115\nNo, and\nthat's why I'm not seeing those routes.\n\n225\n00:11:28.115 --> 00:11:29.560\nThat's why they're not showing up.\n\n226\n00:11:29.560 --> 00:11:33.845\nSo if I want my traffic to\nflow through headquarters,\n\n227\n00:11:33.845 --> 00:11:37.666\nall I have to do is go to\nmy headquarters router.\n\n228\n00:11:37.666 --> 00:11:44.620\nGo into serial 1/0.1 and\nsay no ip, split-horizon eigrp and\n\n229\n00:11:44.620 --> 00:11:49.725\nthen the autonomous system number,\nall right.\n\n230\n00:11:49.725 --> 00:11:52.290\nI'm gonna disable split-horizon\non this interface,\n\n231\n00:11:52.290 --> 00:11:54.097\nand that's normally a bad idea right?\n\n232\n00:11:54.097 --> 00:11:56.933\nYou could create loops on the network,\nbut in this case I need it so\n\n233\n00:11:56.933 --> 00:11:59.735\nthat I can start to learn\nabout those other networks.\n\n234\n00:11:59.735 --> 00:12:02.227\nAnd now it's gonna reset\nthose connections.\n\n235\n00:12:02.227 --> 00:12:05.285\nAnd once they're reset,\nI can go back to branch 1,\n\n236\n00:12:05.285 --> 00:12:07.521\nit's gonna relearn those networks.\n\n237\n00:12:07.521 --> 00:12:10.720\nAnd see it was a graceful restart, so\nit's not like I dumped my routing table.\n\n238\n00:12:10.720 --> 00:12:13.364\nAnd if I do a show ip route eipgrp,\n\n239\n00:12:13.364 --> 00:12:17.430\nbefore I only got one network,\nnow I get all three.\n\n240\n00:12:17.430 --> 00:12:21.880\nRight, I get all three, so my problem's\nsolved, and I can rest easy right?\n\n241\n00:12:21.880 --> 00:12:22.740\nWell, not exactly.\n\n242\n00:12:22.740 --> 00:12:28.200\nIf I do a show ip eigrp neighbor,\nI still only see headquarters, right?\n\n243\n00:12:28.200 --> 00:12:31.830\nThose routes are being relayed\nto me through headquarters.\n\n244\n00:12:31.830 --> 00:12:34.390\nWhat happens if\nheadquarters goes off-line?\n\n245\n00:12:34.390 --> 00:12:35.670\nI can't talk to the branches.\n\n246\n00:12:35.670 --> 00:12:39.000\nSo I do have that true hub and\nspoke, and that might be what I want.\n\n247\n00:12:39.000 --> 00:12:43.071\nBut I might want more autonomy so that my\nnetwork can survive losing headquarters.\n\n248\n00:12:43.071 --> 00:12:46.050\nAnd in that case,\nthis is still not a perfect solution.\n\n249\n00:12:46.050 --> 00:12:50.000\nI'm still not neighbored with the other\nrouters that are out there, right?\n\n250\n00:12:50.000 --> 00:12:54.690\nWell, sometimes there comes\na point in EIGRP's life\n\n251\n00:12:54.690 --> 00:12:57.280\nwhere you recognize that automatic\ndiscovery is just not going to work.\n\n252\n00:12:57.280 --> 00:13:00.030\nIt's just not going to fly, it's not\ngoing to happen here in this network.\n\n253\n00:13:00.030 --> 00:13:01.600\nSo I got to work around it.\n\n254\n00:13:01.600 --> 00:13:02.590\nAnd fortunately you can.\n\n255\n00:13:02.590 --> 00:13:06.121\nYou can force you neighbor\ndiscovery to use a unicast,\n\n256\n00:13:06.121 --> 00:13:08.840\nand the way you do that is by\nstatically assigning your neighbors.\n\n257\n00:13:08.840 --> 00:13:12.380\nYou can go in and physically tell this\nrouter who the neighbors are that are out\n\n258\n00:13:12.380 --> 00:13:13.320\nthere, all right.\n\n259\n00:13:13.320 --> 00:13:18.046\nSo for example, if I know that I want\nto connect a branch 2 and branch 3,\n\n260\n00:13:18.046 --> 00:13:20.200\nI can jump into my config.\n\n261\n00:13:20.200 --> 00:13:22.220\nAnd I'm on branch 1 here.\n\n262\n00:13:22.220 --> 00:13:25.149\nAnd I could say router eigrp 1.\n\n263\n00:13:25.149 --> 00:13:27.266\nAnd then I could say neighbor,\n\n264\n00:13:27.266 --> 00:13:32.000\nI could specify exactly who that\nneighbor is, give it an IP address.\n\n265\n00:13:32.000 --> 00:13:34.049\nSo now it's not a multicast,\nit's not a broadcast.\n\n266\n00:13:34.049 --> 00:13:37.020\nIt's just a unicast\nright to that neighbor.\n\n267\n00:13:37.020 --> 00:13:43.339\nAnd so I can specify, we'll do branch 3,\nwhich is actually, let's see.\n\n268\n00:13:43.339 --> 00:13:48.050\nWell, I need branch 2 and branch 3,\nso that'll be 192.160.1.3 and .4.\n\n269\n00:13:48.050 --> 00:13:51.590\nSo, I'm gonna specify the IP\naddress of that neighbor.\n\n270\n00:13:51.590 --> 00:13:54.980\nAnd then I need to specify the interface\nI'm gonna use to get there.\n\n271\n00:13:54.980 --> 00:13:58.725\nSo in this case,\nit's gonna be Serial 1/0.1,\n\n272\n00:13:58.725 --> 00:14:02.224\nis my interface here,\nthat's connected to it.\n\n273\n00:14:02.224 --> 00:14:05.500\nSee how I've got Serial 1/0.1\nto get to headquarters?\n\n274\n00:14:05.500 --> 00:14:08.410\nAnd headquarters is 192.168.1.1.\n\n275\n00:14:08.410 --> 00:14:09.423\nThis branch is .2.\n\n276\n00:14:09.423 --> 00:14:13.350\nI'm adding .3, and\nthen I've got .4 out there also.\n\n277\n00:14:13.350 --> 00:14:18.690\nSo I'm gonna come in here, and\nI'm gonna add those other neighbors, okay.\n\n278\n00:14:18.690 --> 00:14:22.494\nNow when I run it, look what happened\nto my connection to headquarters.\n\n279\n00:14:22.494 --> 00:14:28.730\nMy neighbor 192.168.1.1 is now down,\nstatic peer configured okay.\n\n280\n00:14:28.730 --> 00:14:31.298\nYou can't do both,\nyou can't have it both ways.\n\n281\n00:14:31.298 --> 00:14:35.900\nYou can't have automatic discovery and\nstatic assignment at the same time.\n\n282\n00:14:35.900 --> 00:14:40.200\nSo as soon as you define that first\nneighbor, you dump all the automatic ones.\n\n283\n00:14:40.200 --> 00:14:44.770\nSo, you have to go all static or\nall dynamic, no middle ground.\n\n284\n00:14:44.770 --> 00:14:49.120\nSo now that I've statically defined some,\nI need to statically define all of them.\n\n285\n00:14:49.120 --> 00:14:51.762\nSo I even need to add\nheadquarters to that list so\n\n286\n00:14:51.762 --> 00:14:54.088\nthat I'll still have them as a neighbor.\n\n287\n00:14:54.088 --> 00:14:57.360\nOtherwise they're not gonna show up,\nand I'll lose that route, right?\n\n288\n00:14:57.360 --> 00:15:01.420\nBut now that's done,\nit'll actually probably take it a moment\n\n289\n00:15:01.420 --> 00:15:03.110\nto reach out there and\nstart to find the other ones.\n\n290\n00:15:03.110 --> 00:15:06.170\nNow where I'm gonna run into a problem is\nI haven't done this on the other sides\n\n291\n00:15:06.170 --> 00:15:07.140\neither, right?\n\n292\n00:15:07.140 --> 00:15:12.035\nSo I need to go to each of my nodes and\nstatically define these neighbors, right,\n\n293\n00:15:12.035 --> 00:15:15.433\nand that way I've kind of\novercome that limitation.\n\n294\n00:15:15.433 --> 00:15:17.215\nAnd headquarters is gonna\nbe a bit of a problem here,\n\n295\n00:15:17.215 --> 00:15:18.985\nsee how headquarters is\nkind of freaking out.\n\n296\n00:15:18.985 --> 00:15:21.745\nI've got some peer termination going\non and neighbor relationships aren't\n\n297\n00:15:21.745 --> 00:15:25.395\ncoming back up, so I need to get\nthese guys switched back over.\n\n298\n00:15:25.395 --> 00:15:28.405\nAnd one of the easy ways to do it if\nyou're gonna be communicating with a lot\n\n299\n00:15:28.405 --> 00:15:31.680\nof these is to write\na quick little script.\n\n300\n00:15:31.680 --> 00:15:36.219\nAnd just something like this,\nwhere you say en, conf t,\n\n301\n00:15:36.219 --> 00:15:40.205\nrouter eigrp 1, and\nthen specify the neighbor.\n\n302\n00:15:40.205 --> 00:15:43.172\nAnd if they're all using\nthe same interface,\n\n303\n00:15:43.172 --> 00:15:47.508\nif it's kind of standard through\nyour network, you can just cut and\n\n304\n00:15:47.508 --> 00:15:51.179\npaste this to quickly configure\nit across your network.\n\n305\n00:15:51.179 --> 00:15:55.117\nAnd so it's kind of a nice\nway to save us a little time.\n\n306\n00:15:55.117 --> 00:15:58.360\nIf you statically assign yourself as\na neighbor, it doesn't hurt anything.\n\n307\n00:15:58.360 --> 00:15:59.170\nIt doesn't work.\n\n308\n00:15:59.170 --> 00:16:00.590\nBut, it doesn't hurt anything.\n\n309\n00:16:00.590 --> 00:16:03.480\nSo, I can add all four\nrouters into this real quick.\n\n310\n00:16:04.600 --> 00:16:05.650\nLike this.\n\n311\n00:16:05.650 --> 00:16:11.280\nAnd this little script will jump in, make\nthe changes that I want, exit, and save.\n\n312\n00:16:11.280 --> 00:16:15.000\nAnd so now I can just parse right\nthrough these routers and do that.\n\n313\n00:16:15.000 --> 00:16:18.540\nSo we'll just lump that in on\nheadquarters, branch one, branch two,\n\n314\n00:16:18.540 --> 00:16:22.770\nbranch three, and now they're all going\nto basically dump their database, right?\n\n315\n00:16:22.770 --> 00:16:24.540\nSo we've got all these\nadjacencies changing and\n\n316\n00:16:24.540 --> 00:16:28.100\nthen new adjacencies come up, and\nwe'll start to see those relationships.\n\n317\n00:16:29.230 --> 00:16:33.370\nNow I'll know it works if I\ndo a show ip eigrp neighbor,\n\n318\n00:16:35.380 --> 00:16:37.680\nand now I see the neighbors out there.\n\n319\n00:16:37.680 --> 00:16:42.520\nBranch 1, originally, if I scroll back in\nbranch 1's history, when I looked at my\n\n320\n00:16:42.520 --> 00:16:45.900\nneighbor list, I was only seeing\none neighbor, just headquarters.\n\n321\n00:16:45.900 --> 00:16:51.020\nBut now when I do show ip eigrp neighbor,\nI see all three.\n\n322\n00:16:51.020 --> 00:16:53.120\nSo, branch one sees headquarters,\nsees branch two,\n\n323\n00:16:53.120 --> 00:16:55.780\nsees branch three, and everything's good.\n\n324\n00:16:55.780 --> 00:16:57.880\nNow, pros and cons to this.\n\n325\n00:16:57.880 --> 00:17:01.100\nOn the pro side,\nI'm now independent of headquarters.\n\n326\n00:17:01.100 --> 00:17:03.700\nIf headquarters fails,\nI can still talk to the other guys, right?\n\n327\n00:17:03.700 --> 00:17:06.250\nThey're out there,\nI can reach out and communicate.\n\n328\n00:17:06.250 --> 00:17:10.680\nBut, on the negative side, what do I have\nto do every time I add a new branch?\n\n329\n00:17:10.680 --> 00:17:11.680\n>> Reconfigure.\n\n330\n00:17:11.680 --> 00:17:15.030\n>> I gotta go and redefine these neighbor\nrelationships, and that's annoying, right?\n\n331\n00:17:15.030 --> 00:17:17.965\nBecause here I got four routers,\nnot a big deal, what if you had 400?\n\n332\n00:17:17.965 --> 00:17:19.820\n>> [LAUGHS]\n>> You don't wanna be\n\n333\n00:17:19.820 --> 00:17:22.470\nconstantly having to go and statically\ndefining these neighbors, and so\n\n334\n00:17:22.470 --> 00:17:23.690\n>> That's where you have to start making\n\n335\n00:17:23.690 --> 00:17:25.010\nsome real decisions.\n\n336\n00:17:25.010 --> 00:17:27.970\nWhat a lot of places will do is,\nthey'll have a headquarters sure, but\n\n337\n00:17:27.970 --> 00:17:30.690\nthey'll usually have\na disaster recovery site, so\n\n338\n00:17:30.690 --> 00:17:32.910\nwe statically define those\ntwo as the neighbors.\n\n339\n00:17:32.910 --> 00:17:35.140\nI always map to headquarters and to DR.\n\n340\n00:17:35.140 --> 00:17:39.480\nThat way if headquarters fails, I'm still\nconnected to DR, disaster recovery.\n\n341\n00:17:39.480 --> 00:17:42.220\nEvery time I add a new branch, I'm not\nhaving to go and edit every other branch,\n\n342\n00:17:42.220 --> 00:17:43.750\nI'm just connecting those\nto headquarters and DR.\n\n343\n00:17:43.750 --> 00:17:49.050\nIt creates a multiple hub,\nlike a dual hub in spoke environment.\n\n344\n00:17:49.050 --> 00:17:49.650\nAll right?\n\n345\n00:17:49.650 --> 00:17:50.520\nBut now that we're connected,\n\n346\n00:17:50.520 --> 00:17:52.710\nwe start to see some neat things\nin our routing table too.\n\n347\n00:17:52.710 --> 00:17:54.910\nIf I do a show ip route eigrpg.\n\n348\n00:17:54.910 --> 00:17:57.240\nI'm starting to learn those routes.\n\n349\n00:17:57.240 --> 00:18:00.030\nAnd see how they're all still\ngoing through headquarters?\n\n350\n00:18:00.030 --> 00:18:03.190\nThey're going through headquarters here\nbecause I have that DEL-C to headquarters\n\n351\n00:18:03.190 --> 00:18:06.080\nand I haven't necessarily mapped\nDEL-Cs to the other branches.\n\n352\n00:18:06.080 --> 00:18:08.570\nIf I start mapping DEL-Cs\nto the other branches,\n\n353\n00:18:08.570 --> 00:18:12.460\nthen I'm going to see those come up as\nthat direct next hop and move from there.\n\n354\n00:18:12.460 --> 00:18:14.810\nSo, it's interesting the way\nthat we do this, but\n\n355\n00:18:14.810 --> 00:18:19.110\nstatically assigning a neighbor is\nnot something we normally have to do.\n\n356\n00:18:19.110 --> 00:18:23.720\nSo, if I pull up my EIGRP configuration,\nnot a hard thing to do, right?\n\n357\n00:18:23.720 --> 00:18:25.300\nWe just specify the neighbor, and\n\n358\n00:18:25.300 --> 00:18:27.460\nwhat interface we're going\nto connect to them on.\n\n359\n00:18:27.460 --> 00:18:28.010\nAnd that's it.\n\n360\n00:18:28.010 --> 00:18:30.350\nNow we use Unicast to get to them.\n\n361\n00:18:30.350 --> 00:18:31.540\nNot something we always wanna do, but\n\n362\n00:18:31.540 --> 00:18:35.730\nsomething that we might have to do\nin some situations where multi-cache\n\n363\n00:18:35.730 --> 00:18:37.810\nis just not getting through,\nwe're not finding those neighbors.\n\n364\n00:18:39.470 --> 00:18:41.490\nAll right, key things to remember here.\n\n365\n00:18:41.490 --> 00:18:44.130\nYou do need to make sure your autonomous\nsystem number matches, right?\n\n366\n00:18:44.130 --> 00:18:45.660\nJust defining a neighbor is not enough.\n\n367\n00:18:45.660 --> 00:18:48.460\nOn the other side they need to have\nthe autonomous system number that\n\n368\n00:18:48.460 --> 00:18:50.860\nmatches yours,\notherwise EIGRP's not gonna appear up.\n\n369\n00:18:52.820 --> 00:18:56.600\nAll right, you know, I needed to\ntalk about one more thing Ronnie,\n\n370\n00:18:56.600 --> 00:19:00.110\nbut I don't think we have enough time for\nme to cover it all here.\n\n371\n00:19:00.110 --> 00:19:02.480\nThe other thing about\nneighbor relationships is,\n\n372\n00:19:02.480 --> 00:19:04.550\nby default they're unauthenticated, right?\n\n373\n00:19:04.550 --> 00:19:06.000\nyou can peer up with anybody and\n\n374\n00:19:06.000 --> 00:19:08.290\nanybody can peer up with\nyou if you're not careful.\n\n375\n00:19:08.290 --> 00:19:10.930\nYou can use passive interfaces\nto kinda limit that a bit\n\n376\n00:19:10.930 --> 00:19:15.900\nlike you saw on my example, but\nit's not the perfect end-all solution so\n\n377\n00:19:15.900 --> 00:19:19.190\nwith a neighbor relationship we'll also\ntimes want to configure encryption too.\n\n378\n00:19:19.190 --> 00:19:22.490\nLike an encrypted or at least\nan authenticated connection between us and\n\n379\n00:19:22.490 --> 00:19:27.490\nthe other side and EIGRP does\nsupport that, but I don't quite have\n\n380\n00:19:27.490 --> 00:19:30.550\ntime here to show it so why don't we\nwrap this one up kind of early and\n\n381\n00:19:30.550 --> 00:19:33.410\nwe'll just do a part two and\nkind of tackle it there.\n\n382\n00:19:33.410 --> 00:19:34.010\nSound good?\n\n383\n00:19:34.010 --> 00:19:35.100\n>> Sounds great.\n\n384\n00:19:35.100 --> 00:19:39.090\nSo don't forget, in this episode we really\ndid take a look at the basic configuration\n\n385\n00:19:39.090 --> 00:19:42.910\nof making sure that your neighbor\nrelationships and EIGRP are working, and\n\n386\n00:19:42.910 --> 00:19:45.460\nthey aren't, we also talked about\nhow you can actually configure that\n\n387\n00:19:45.460 --> 00:19:47.790\nto make it working with\na neighbor statement as well.\n\n388\n00:19:47.790 --> 00:19:50.960\nWe also were able to verify that\neverything was working correctly\n\n389\n00:19:50.960 --> 00:19:52.270\nafter doing that.\n\n390\n00:19:52.270 --> 00:19:55.800\nMake sure you go over that as\nyou get ready for the exam too.\n\n391\n00:19:55.800 --> 00:19:58.006\nSo that actually wraps up our show for\ntoday.\n\n392\n00:19:58.006 --> 00:19:58.580\nThank you for watching.\n\n393\n00:19:58.580 --> 00:20:00.680\nI'm your host Ronnie Wan.\n\n394\n00:20:00.680 --> 00:20:02.100\nAnd I'm Don Pizette.\n\n395\n00:20:02.100 --> 00:20:04.490\n>> And we'll see you next time.\n\n",
          "vimeoId": "137284154"
        },
        {
          "description": "It's a good idea to configure authentication between EIGRP routers to verify that the EIGRP neighbors are who they say they are and prevent the possibility of internal attacks. Viewers will hear about configuring basic authentication and even authentication by using multiple keys.",
          "length": "1422",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/ccnproute/cisco-ccnproute300101-3-19-eigrp_neighbors_pt2-082515-1.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/ccnproute/cisco-ccnproute300101-3-19-eigrp_neighbors_pt2-082515-1-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/ccnproute/cisco-ccnproute300101-3-19-eigrp_neighbors_pt2-082515-1-sm.jpg",
          "title": "EIGRP Neighbors Part 2",
          "transcript": "WEBVTT\n\n1\n00:00:00.423 --> 00:00:10.713\n[MUSIC]\n\n2\n00:00:10.713 --> 00:00:13.680\nWelcome to another great\nepisode here on ITProTV.\n\n3\n00:00:13.680 --> 00:00:16.010\nToday we're taking a look at CCMP route.\n\n4\n00:00:16.010 --> 00:00:19.660\nI'm your host, Ronnie Wong,\nhere with Mr. Don Pezet.\n\n5\n00:00:19.660 --> 00:00:20.410\nHow's it going, Don?\n\n6\n00:00:20.410 --> 00:00:21.620\n>> I am doing great, Ronnie.\n\n7\n00:00:21.620 --> 00:00:24.940\nWe're excited to jump into\nanother episode talking EIGRP.\n\n8\n00:00:24.940 --> 00:00:28.040\nThis is actually kind of part\ntwo to our last episode.\n\n9\n00:00:28.040 --> 00:00:31.890\nWe talked a bit about EIGRP neighbor\nrelationships and one of the last thoughts\n\n10\n00:00:31.890 --> 00:00:35.240\nthat I kind of laid out there right at the\nend of the episode was that it's a good\n\n11\n00:00:35.240 --> 00:00:40.350\nidea to configure authentication between\nour EIGRP routers, so that not just any\n\n12\n00:00:40.350 --> 00:00:44.730\nold person can whip up an EIGRP router and\nstart injecting routes into our network.\n\n13\n00:00:44.730 --> 00:00:48.506\nFortunately EIGRP has MD five\nauthentication baked into it.\n\n14\n00:00:48.506 --> 00:00:52.421\nAnd what we're actually starting to see,\nsome of the newer routers with the beta\n\n15\n00:00:52.421 --> 00:00:55.982\nsupport of SHA 256, which is kinda nice,\ncuz MD5's getting a bit dated.\n\n16\n00:00:55.982 --> 00:00:59.690\nBut for now, at least we have MD5 for\nauthentications, it's better than nothing.\n\n17\n00:00:59.690 --> 00:01:01.930\nSo we're gonna take a look\nat getting that set up,\n\n18\n00:01:01.930 --> 00:01:05.760\nso that we can verify that our\nneighbors are who they say they are.\n\n19\n00:01:05.760 --> 00:01:09.390\nThat we're actually getting connectivity\nfrom our own nodes and not an attacker.\n\n20\n00:01:09.390 --> 00:01:12.010\n>> Now, Don, if I own all those routers,\n\n21\n00:01:12.010 --> 00:01:13.850\nwhy does it really matter\nif they're my routers?\n\n22\n00:01:13.850 --> 00:01:18.520\n>> If you own the network, if you own\nthe routers, in theory you could say,\n\n23\n00:01:18.520 --> 00:01:22.460\nhey, if somebody was going to break into\nthat network it would have to be me.\n\n24\n00:01:22.460 --> 00:01:23.285\nWel, maybe it is you.\n\n25\n00:01:23.285 --> 00:01:25.910\n>> [LAUGH]\n>> In a large company you have a lot of\n\n26\n00:01:25.910 --> 00:01:30.550\nwork administrators, and honestly\nmost of the big time of tax, the big\n\n27\n00:01:30.550 --> 00:01:34.540\ncompromises that you read about on the\ninternet, were originated from the inside.\n\n28\n00:01:34.540 --> 00:01:36.060\nThe people had an insider.\n\n29\n00:01:36.060 --> 00:01:41.880\nAnd really it's trivial to go on eBay,\nbut a $50 Cisco router,\n\n30\n00:01:41.880 --> 00:01:46.020\nconfigure it for EIGRP, or you could even\nhave a PC spoof it, configure it for\n\n31\n00:01:46.020 --> 00:01:49.980\nEIGRP and inject it in the network, and\nstart redirecting people's traffic.\n\n32\n00:01:49.980 --> 00:01:50.880\nWhen you do that,\n\n33\n00:01:50.880 --> 00:01:54.150\nman in the middle attacks become\nreally really easy to pull off.\n\n34\n00:01:54.150 --> 00:01:55.940\nAnd so\nthis is something we want to prevent.\n\n35\n00:01:55.940 --> 00:02:00.200\nAnd by doing an MD5 authentication string,\nwhat we can do is we can say,\n\n36\n00:02:00.200 --> 00:02:04.050\nif we connect to a neighbor the neighbor\nhas to provide us with the same\n\n37\n00:02:04.050 --> 00:02:06.830\nauthentication string, otherwise we're\nnot gonna allow them to connect,\n\n38\n00:02:06.830 --> 00:02:08.740\nwe're not gonna exchange routes with them.\n\n39\n00:02:08.740 --> 00:02:10.440\nAnd that prevents that injection.\n\n40\n00:02:10.440 --> 00:02:12.860\nSo, it's really to protect\nus from internal attackers.\n\n41\n00:02:12.860 --> 00:02:17.200\nIt is a difficult one to exploit for\nexternal, unless somebody externally\n\n42\n00:02:17.200 --> 00:02:20.470\ncompromises an internal machine and\nthen uses it to spoof EIGRP, right?\n\n43\n00:02:20.470 --> 00:02:22.020\nThat's the risk you have.\n\n44\n00:02:22.020 --> 00:02:24.790\nSo getting this setup,\nit doesn't take much time.\n\n45\n00:02:24.790 --> 00:02:26.710\nIt doesn't take much in\nthe way of resources.\n\n46\n00:02:26.710 --> 00:02:29.990\nThere's really not a good\nexcuse to not do it, really.\n\n47\n00:02:29.990 --> 00:02:32.645\nThat's a lot of negatives\nin that sentence there.\n\n48\n00:02:32.645 --> 00:02:34.010\n>> [LAUGH]\n>> But there's no reason not to\n\n49\n00:02:34.010 --> 00:02:34.560\ndo it, right?\n\n50\n00:02:34.560 --> 00:02:37.270\nWe should get that configured and\nyou'll see it's pretty easy.\n\n51\n00:02:37.270 --> 00:02:40.900\nAll right, well I'm gonna start here with\nmy kind of lab environment I've been\n\n52\n00:02:40.900 --> 00:02:41.460\nusing in this show.\n\n53\n00:02:41.460 --> 00:02:44.830\nI've got a headquarters router and\na couple of branch routers out there.\n\n54\n00:02:44.830 --> 00:02:46.330\nAnd if I look at my headquarters router,\n\n55\n00:02:46.330 --> 00:02:50.780\nif I just do a quick show IP add your\nIP neighbor, I can see I've got those\n\n56\n00:02:50.780 --> 00:02:55.020\nthree neighbors that are out there and I'm\ndoing this all on authenticated right now.\n\n57\n00:02:55.020 --> 00:02:59.040\nIf I take a look at my EIGRP\nconfiguration, I've got those neighbors\n\n58\n00:02:59.040 --> 00:03:03.850\nand I've statically defined my neighbors\nfrom the last show, but they're there,\n\n59\n00:03:03.850 --> 00:03:06.000\nand not really authenticated or anything.\n\n60\n00:03:06.000 --> 00:03:09.570\nSo I'm just reaching out\nover this telco network and\n\n61\n00:03:09.570 --> 00:03:12.370\ntrusting that telco is actually\nconnecting me to a branch and\n\n62\n00:03:12.370 --> 00:03:14.760\ntrusting that the router on\nthe other end is my router.\n\n63\n00:03:14.760 --> 00:03:16.630\nBut wouldn't it be nice to be sure?\n\n64\n00:03:16.630 --> 00:03:18.630\nWell, to be sure,\nwe can turn on authentication.\n\n65\n00:03:18.630 --> 00:03:21.400\nNow I'm going to show you two\nexamples of authentication today.\n\n66\n00:03:21.400 --> 00:03:22.470\nOne is very easy.\n\n67\n00:03:22.470 --> 00:03:23.750\nOne is a little more complex.\n\n68\n00:03:23.750 --> 00:03:25.220\nWe have pros and cons for both.\n\n69\n00:03:25.220 --> 00:03:26.020\nBut let's just start easy.\n\n70\n00:03:27.100 --> 00:03:27.930\nTo start easy,\n\n71\n00:03:27.930 --> 00:03:33.730\nwhat we need to do is provide EIGRP with\nan MD5 hash to use for authentication.\n\n72\n00:03:33.730 --> 00:03:37.680\nWell, provided with a hash, we need\nto create what's called a key chain.\n\n73\n00:03:37.680 --> 00:03:42.140\nA key chain is just a little system that\nCisco routers use to store passwords,\n\n74\n00:03:42.140 --> 00:03:43.090\nstore hashes.\n\n75\n00:03:43.090 --> 00:03:46.695\nSo we're going to create a key chain, and\non that key chain, you can have one or\n\n76\n00:03:46.695 --> 00:03:47.825\nmore keys.\n\n77\n00:03:47.825 --> 00:03:49.285\nAnd those keys\nare the passwords that we use.\n\n78\n00:03:49.285 --> 00:03:53.155\nAnd so I'm gonna create a key that'll\nmatch up with a router on the other side.\n\n79\n00:03:53.155 --> 00:03:57.495\nSo the quick and easy way to do\nthat is to get into our config and\n\n80\n00:03:57.495 --> 00:04:01.142\nthen you basically just say key chain, and\n\n81\n00:04:01.142 --> 00:04:07.012\ngive the key chain a name, right, and\nso I'll call these my eigrp keys.\n\n82\n00:04:07.012 --> 00:04:09.562\nAll right, and\nthat's just a name I made up, eigrp keys,\n\n83\n00:04:09.562 --> 00:04:11.992\nyou can call it Bob if you wanted to,\nit doesn't matter.\n\n84\n00:04:11.992 --> 00:04:13.972\nSo, I'll just call it key chain,\neigrp keys.\n\n85\n00:04:13.972 --> 00:04:17.452\nNow, the key chain name is case sensitive,\nso if you do capital letters here,\n\n86\n00:04:17.452 --> 00:04:19.352\nyou use capital letters later.\n\n87\n00:04:19.352 --> 00:04:21.442\nI'm just using all lower\ncase because that's\n\n88\n00:04:21.442 --> 00:04:23.570\nsomething I'm capable of remembering.\n\n89\n00:04:23.570 --> 00:04:25.200\nSo all right.\nNow I've got a keychain.\n\n90\n00:04:25.200 --> 00:04:28.260\nKeychain is completely useless,\nunless we add a key and\n\n91\n00:04:28.260 --> 00:04:30.210\nthe keys are identified by a number.\n\n92\n00:04:30.210 --> 00:04:32.170\nSo we'll say a key followed by a number.\n\n93\n00:04:32.170 --> 00:04:34.530\nNow, usually we're going to say key one,\nkey two.\n\n94\n00:04:34.530 --> 00:04:37.680\nRonnie asked before the show,\ndid I know of a limitation?\n\n95\n00:04:37.680 --> 00:04:41.340\nWell, the key number It's\nactually a pretty big number.\n\n96\n00:04:41.340 --> 00:04:43.070\nWhat is that like 2 billion?\n\n97\n00:04:43.070 --> 00:04:43.990\nLet's see what we got.\n\n98\n00:04:43.990 --> 00:04:47.140\nHundreds, thousands, millions.\n\n99\n00:04:47.140 --> 00:04:47.830\nIt's actually 2 billion.\n\n100\n00:04:47.830 --> 00:04:52.940\nSo you can have it up to 2.1 billion keys\nI guess if you want to go crazy like that.\n\n101\n00:04:52.940 --> 00:04:56.060\nYou do have a limited to how big your\nconfig can get, so you'll hit that\n\n102\n00:04:56.060 --> 00:04:59.810\nlimit first, but you can whip up many,\nmany different keys if you want.\n\n103\n00:04:59.810 --> 00:05:01.270\nBut I just need key one.\n\n104\n00:05:01.270 --> 00:05:03.060\nIt does need to be a number, all right.\n\n105\n00:05:03.060 --> 00:05:04.780\nSo I'm gonna create key 1, and\n\n106\n00:05:04.780 --> 00:05:09.500\nthen in the key, here's what we put what\nour password is going to be, all right.\n\n107\n00:05:09.500 --> 00:05:14.480\nNow the password is not actually MD5# at\nthis stage, this is just the plain texting\n\n108\n00:05:14.480 --> 00:05:18.320\nthat we're gonna use as the password, what\nwe'll look at hash afterwards, all right.\n\n109\n00:05:18.320 --> 00:05:19.240\nAnd so I'll just come in here and\n\n110\n00:05:19.240 --> 00:05:23.140\nI'll say Key-string,\nfollowed by what I want that string to be.\n\n111\n00:05:23.140 --> 00:05:24.150\nAll right?\n\n112\n00:05:24.150 --> 00:05:27.870\nNow, if I put it in right here next\nit's just gonna be plain text, but\n\n113\n00:05:27.870 --> 00:05:31.490\nif I've already secured it,\nif this is a hidden password\n\n114\n00:05:31.490 --> 00:05:33.950\nthat's already been encrypted by\nthe system then I could put that in.\n\n115\n00:05:33.950 --> 00:05:38.130\nI would just need to say seven,\nfollowed by whatever that password was.\n\n116\n00:05:38.130 --> 00:05:40.610\nIf it's unencrypted you would say\nzero followed by the password, but\n\n117\n00:05:40.610 --> 00:05:41.240\nthat's the default.\n\n118\n00:05:41.240 --> 00:05:44.220\nIf you actually leave that off and\nit'll be the unencrypted password too,\n\n119\n00:05:44.220 --> 00:05:45.310\nall right.\n\n120\n00:05:45.310 --> 00:05:46.660\nSo I'll put it in here and\n\n121\n00:05:46.660 --> 00:05:51.560\nI'm just gonna say that this is my\nsuper secure password, all right.\n\n122\n00:05:51.560 --> 00:05:54.130\nSo that's gonna be my password for\nthis one.\n\n123\n00:05:54.130 --> 00:05:58.520\nSo now I've created a key and\nI've set a password, all right?\n\n124\n00:05:58.520 --> 00:06:01.710\nNow all I have to do is tell EIGRP,\nhey, use this password.\n\n125\n00:06:01.710 --> 00:06:05.280\nBut don't send the password across\nthe network, we wanna send a hash.\n\n126\n00:06:05.280 --> 00:06:06.850\nWe're expecting you to\nhash from the other side.\n\n127\n00:06:06.850 --> 00:06:07.800\nWe're sending a hash.\n\n128\n00:06:07.800 --> 00:06:10.760\nSo that's how we do the cross\nauthentication on these things, and\n\n129\n00:06:10.760 --> 00:06:12.210\nwe just needed to tie this to EIGRP.\n\n130\n00:06:13.240 --> 00:06:16.440\nNow the configuration is done\nin a per interface basis,\n\n131\n00:06:16.440 --> 00:06:17.900\nnot on a per neighbor basis.\n\n132\n00:06:17.900 --> 00:06:20.140\nWell if you have point to\npoint links to your neighbors,\n\n133\n00:06:20.140 --> 00:06:24.250\nthen it's kind of like\non a per-neighbor basis.\n\n134\n00:06:24.250 --> 00:06:30.940\nBut in my example, I've got frame relay,\nand if I do a show IP EIGRP neighbors,\n\n135\n00:06:30.940 --> 00:06:34.250\nI've got three neighbors\nall on one interface.\n\n136\n00:06:34.250 --> 00:06:38.090\nSo when I turn on authentication,\nI'm turning it on for this interface,\n\n137\n00:06:38.090 --> 00:06:40.440\nI'm gonna turn it on for\nall three of these neighbors.\n\n138\n00:06:40.440 --> 00:06:43.140\nAnd as soon as I turn it on,\nwhat's gonna happen to my neighbors?\n\n139\n00:06:43.140 --> 00:06:46.990\nWell they don't have the password yet,\nI'm not gonna drop my sessions.\n\n140\n00:06:46.990 --> 00:06:48.560\nAnd that can be bad, right?\n\n141\n00:06:48.560 --> 00:06:51.340\nSo the first time you implement this,\nyou probably need to plan for\n\n142\n00:06:51.340 --> 00:06:55.810\na little bit of downtime,\nunless somehow miraculously you\n\n143\n00:06:55.810 --> 00:06:59.430\nget somebody on the other side\nimplementing this at the same time.\n\n144\n00:06:59.430 --> 00:07:03.000\nBecause what's gonna happen\nis EIGRP's gonna drop.\n\n145\n00:07:03.000 --> 00:07:04.700\nIt's going to drop\nthe neighbor relationship,\n\n146\n00:07:04.700 --> 00:07:06.940\nthe routes are going to come\nout of the routing table.\n\n147\n00:07:06.940 --> 00:07:08.470\nAs soon as you put the password\non the other side,\n\n148\n00:07:08.470 --> 00:07:11.340\nit comes back up and the routes make\nit back into the routing table, so for\n\n149\n00:07:11.340 --> 00:07:15.240\nthat brief moment, you do have downtime.\n\n150\n00:07:15.240 --> 00:07:19.740\nI'm going to get into my interface and\nI'm going to enable that authentication.\n\n151\n00:07:19.740 --> 00:07:21.630\nAnd the way we do that is by saying,\n\n152\n00:07:22.880 --> 00:07:25.610\nbasically we need to configure\neach IGRP to use it, right?\n\n153\n00:07:25.610 --> 00:07:27.920\nNot regular communication,\njust IGRP and so\n\n154\n00:07:27.920 --> 00:07:31.770\nwe're going to say Say IP authentication\nand if you look at the options in there,\n\n155\n00:07:31.770 --> 00:07:34.250\nyou'll see where you can\nspecify that key chain.\n\n156\n00:07:34.250 --> 00:07:39.330\nAnd so I'm gonna say key-chain,\nand then it's EIGRP\n\n157\n00:07:39.330 --> 00:07:44.220\nautonomous system one that's gonna use it,\nand then which key chain we're gonna use.\n\n158\n00:07:44.220 --> 00:07:47.220\nAnd I called my key chain,\nactually I've kind of forgotten now,\n\n159\n00:07:47.220 --> 00:07:48.800\nI think I called it EIGRP-keys.\n\n160\n00:07:48.800 --> 00:07:51.630\nLet's just go back up and verify.\n\n161\n00:07:51.630 --> 00:07:54.132\nThe things that we actually\nneed to get right.\n\n162\n00:07:54.132 --> 00:07:57.848\nLet's see, I called it EIGRP-keys and\nit is case sensitive so\n\n163\n00:07:57.848 --> 00:08:02.740\nyou gotta make sure you type it correctly\nbut I'm telling it what keys to use.\n\n164\n00:08:02.740 --> 00:08:04.582\nAll right, but that's not enough.\n\n165\n00:08:04.582 --> 00:08:08.428\nI've told it what keys to use, but I\nhaven't actually told it to use them yet.\n\n166\n00:08:08.428 --> 00:08:13.204\nAnd so I need to add one\nmore line in here which is\n\n167\n00:08:13.204 --> 00:08:17.505\nIP authentication and then I need to say.\n\n168\n00:08:17.505 --> 00:08:19.037\n>> Mode?\n\n169\n00:08:19.037 --> 00:08:21.568\n>> Yes.\n[LAUGH] Mode.\n\n170\n00:08:21.568 --> 00:08:25.582\nAnd then you'll see the mode we can\nspecify here for EIGRP the AS number and\n\n171\n00:08:25.582 --> 00:08:29.624\nthen there's only one mode but\nyou still have to specify it which is md5.\n\n172\n00:08:29.624 --> 00:08:30.135\nAll right?\n\n173\n00:08:30.135 --> 00:08:33.953\nOn your newest routers, the ones that are,\nit's still some early release versions\n\n174\n00:08:33.953 --> 00:08:37.661\nthat are coming out of Cisco, you actually\nhave SHA 256 that you can pick now and\n\n175\n00:08:37.661 --> 00:08:40.376\nif you have a choice,\nyou definitely want to go SHA 256.\n\n176\n00:08:40.376 --> 00:08:44.820\nAll right, md5, it's not fully\ncompromised, but it's been shown\n\n177\n00:08:44.820 --> 00:08:49.700\nthat there are collision attacks that\ncan be kind of created against it.\n\n178\n00:08:49.700 --> 00:08:55.090\nWhich means that, when I type my key\nup here, I typed super secure password.\n\n179\n00:08:55.090 --> 00:08:58.340\nAnd that's gonna get hashed and\nthat's gonna create one hash value.\n\n180\n00:08:58.340 --> 00:09:02.690\nWell, there's other words that might\ngenerate the same hash value, and\n\n181\n00:09:02.690 --> 00:09:04.030\nthat's called the Collision.\n\n182\n00:09:04.030 --> 00:09:06.570\nAnd if you have a big enough\nspace that shouldn't happen,\n\n183\n00:09:06.570 --> 00:09:11.360\nthe md5 space isn't big enough, and that's\nwhy SHA 256 is kind of the replacement and\n\n184\n00:09:11.360 --> 00:09:12.780\nwe're using people move too.\n\n185\n00:09:12.780 --> 00:09:16.071\nBut on this router I only support md5,\nthat's very common,\n\n186\n00:09:16.071 --> 00:09:18.113\nmost physical routers only use md5.\n\n187\n00:09:18.113 --> 00:09:22.030\nAnd so I'm gonna choose that and\nnow it knows to use it.\n\n188\n00:09:22.030 --> 00:09:23.450\nAnd see what happened right there?\n\n189\n00:09:23.450 --> 00:09:25.780\nI immediately dumped my neighbors.\n\n190\n00:09:25.780 --> 00:09:27.790\nAnd now I don't have any\nneighbor relationships.\n\n191\n00:09:27.790 --> 00:09:32.215\nIf I do a show ip eigrp neighbor,\nI don't have any.\n\n192\n00:09:32.215 --> 00:09:33.300\n>> [LAUGH]\n>> Right?\n\n193\n00:09:33.300 --> 00:09:38.010\nBecause I'm expecting authentication,\nand they don't have the key.\n\n194\n00:09:38.010 --> 00:09:39.190\nAnd since they don't have the key,\n\n195\n00:09:39.190 --> 00:09:43.010\nI'm just throwing away everything they\ntell me, which includes their routes.\n\n196\n00:09:43.010 --> 00:09:47.840\nSo if I take a look at my routing table,\nI don't have any EIGRPG routes anymore.\n\n197\n00:09:47.840 --> 00:09:50.530\nI'm not learning from anybody,\ncuz we dumped it all out and\n\n198\n00:09:50.530 --> 00:09:51.900\nthat's the end of that.\n\n199\n00:09:51.900 --> 00:09:54.170\nRight?\nSo, now, I've created a down time.\n\n200\n00:09:54.170 --> 00:09:57.080\nAnd if somebody's on the other\nend doing this change at the same\n\n201\n00:09:57.080 --> 00:09:58.390\ntime then I'm okay.\n\n202\n00:09:58.390 --> 00:10:02.530\nBut if they're not, I'm gonna have to get\nin the car and drive over there cause\n\n203\n00:10:02.530 --> 00:10:06.760\nI just lost my route or put a static route\nin to get me by temporarily or something.\n\n204\n00:10:06.760 --> 00:10:09.685\nAnd your static routes are a good\nway to get around the down time.\n\n205\n00:10:09.685 --> 00:10:13.524\nBut we'll need to be able to\nimplement that quickly and\n\n206\n00:10:13.524 --> 00:10:15.614\nget it in place and up to date.\n\n207\n00:10:15.614 --> 00:10:21.906\nAll right, now if I were to do\na debug of my EIGRP packets.\n\n208\n00:10:21.906 --> 00:10:22.557\nRight?\n\n209\n00:10:22.557 --> 00:10:27.150\nWhat I'm gonna see is that the EIGRP\ncommunications are coming in.\n\n210\n00:10:27.150 --> 00:10:32.130\nBut, whoops let me just stop this\nit's gonna fill up my screen, but\n\n211\n00:10:32.130 --> 00:10:34.260\nyou're gonna see a lot of this right here.\n\n212\n00:10:34.260 --> 00:10:35.990\nIgnored packet.\n\n213\n00:10:35.990 --> 00:10:37.950\nSo I received the comunication, but\n\n214\n00:10:37.950 --> 00:10:40.615\nI'm ignoring it because it's\nmissing authentication.\n\n215\n00:10:40.615 --> 00:10:42.200\nRight?\nSo right there it's not getting\n\n216\n00:10:42.200 --> 00:10:44.020\nauthentication I know there's a problem.\n\n217\n00:10:44.020 --> 00:10:45.931\nI need to fix that.\nSo we can spot that if you're not\n\n218\n00:10:45.931 --> 00:10:49.277\nbuilding enable relationship up,\nand it's due to authentication,\n\n219\n00:10:49.277 --> 00:10:53.094\nit's super easy to spot here in the\ndebugs, cuz you're gonna see tons of that.\n\n220\n00:10:53.094 --> 00:10:54.745\nRight?\nIt's just gonna keep happening over and\n\n221\n00:10:54.745 --> 00:10:55.470\nover and over again.\n\n222\n00:10:55.470 --> 00:11:00.730\nAll right, now on the other routers,\nto get them up and going, is just\n\n223\n00:11:00.730 --> 00:11:05.600\na simple matter of giving them the same\nkey and enabling authentication for them.\n\n224\n00:11:05.600 --> 00:11:10.160\nAnd I can whip through that kind of\nquickly if I write like a little script.\n\n225\n00:11:10.160 --> 00:11:13.073\nWe can do one of these\nthings where we jump in and\n\n226\n00:11:13.073 --> 00:11:15.180\ncreate the keychain real quick.\n\n227\n00:11:15.180 --> 00:11:19.070\nAnd the keychain name doesn't have\nto match between the routers.\n\n228\n00:11:19.070 --> 00:11:22.456\nSo you can call the keychain whatever\nyou want, but I always try and\n\n229\n00:11:22.456 --> 00:11:25.984\nkeep it consistent so I can remember\nwhat it is that I'm using it for.\n\n230\n00:11:25.984 --> 00:11:26.656\nRight?\n\n231\n00:11:26.656 --> 00:11:29.583\nAnd then we can define a key, and\n\n232\n00:11:29.583 --> 00:11:34.801\nthe key string which I set\nto super-secure-password.\n\n233\n00:11:34.801 --> 00:11:35.473\nRight?\n\n234\n00:11:35.473 --> 00:11:39.178\nAnd then we went into interface s1/0.1,\n\n235\n00:11:39.178 --> 00:11:43.643\nwhere we issued two quick\ncommands which I'm just gonna\n\n236\n00:11:43.643 --> 00:11:48.211\ncopy out of the other router\nhere to save me a little time.\n\n237\n00:11:50.673 --> 00:11:52.420\nThere we go.\n\n238\n00:11:52.420 --> 00:11:52.928\nAnd we got out.\n\n239\n00:11:52.928 --> 00:11:55.412\nAll right, so that's gonna go in and\ncreate the keychain.\n\n240\n00:11:55.412 --> 00:11:58.180\n[COUGH] Set key one to have that password.\n\n241\n00:11:58.180 --> 00:12:01.640\nAnd from there go ahead and\nturn on that authentication.\n\n242\n00:12:01.640 --> 00:12:05.600\nSo I just need to apply that\nto each of my other nodes\n\n243\n00:12:05.600 --> 00:12:07.740\nto be able to bring that\ncommunication back up.\n\n244\n00:12:08.790 --> 00:12:09.660\nSo there we go.\n\n245\n00:12:09.660 --> 00:12:13.020\nStill in there, and I should start to\nsee my relationships coming back up.\n\n246\n00:12:13.020 --> 00:12:16.580\nAnd now when I go into headquarters,\nif I take a look at my neighbors,\n\n247\n00:12:16.580 --> 00:12:17.970\nI've got neighbors again.\n\n248\n00:12:17.970 --> 00:12:19.470\nRight?\nIt's all happy.\n\n249\n00:12:19.470 --> 00:12:24.840\nAnd if I do a debug, and\nI start watching those packets,\n\n250\n00:12:24.840 --> 00:12:27.150\nI shouldn't see any more of\nthose missing authentication.\n\n251\n00:12:27.150 --> 00:12:30.490\nNow I'm actually seeing hellos and\nacknowledgements and\n\n252\n00:12:30.490 --> 00:12:34.380\nother things like that because I'm able to\ncommunicate, we're passing that md5 check.\n\n253\n00:12:35.400 --> 00:12:36.100\nAll right.\n\n254\n00:12:36.100 --> 00:12:39.970\nAnd you will actually notice\na little bit of a difference,\n\n255\n00:12:39.970 --> 00:12:42.630\nbecause as you look in here, here we go.\n\n256\n00:12:42.630 --> 00:12:46.959\nEIGRP received packet with md5\nauthentication, key id = 1.\n\n257\n00:12:46.959 --> 00:12:47.660\nAll right.\n\n258\n00:12:47.660 --> 00:12:50.940\nIt's letting me know that somebody\ntried to connect to me and\n\n259\n00:12:50.940 --> 00:12:53.680\nthey had a key that matched my key id = 1.\n\n260\n00:12:53.680 --> 00:12:54.450\nAll right.\n\n261\n00:12:54.450 --> 00:12:57.000\nYou don't actually transmit\nyour key id number.\n\n262\n00:12:57.000 --> 00:13:00.160\nIt just knows that that hash\nmatched the hash of my key id = 1.\n\n263\n00:13:00.160 --> 00:13:01.290\nAnd so that's who connected.\n\n264\n00:13:01.290 --> 00:13:02.320\nYou can have more than one key.\n\n265\n00:13:02.320 --> 00:13:07.250\nI could've defined three keys and\nused a different key on each neighbor.\n\n266\n00:13:07.250 --> 00:13:07.830\nRight?\nAnd\n\n267\n00:13:07.830 --> 00:13:11.260\nnow I can identify the packets\nbased on that key or if I'm\n\n268\n00:13:11.260 --> 00:13:15.570\nworried that one router got compromised,\nI can invalidate that one router's key.\n\n269\n00:13:15.570 --> 00:13:18.080\nAnd now that router's off but\nthe other routers are still on.\n\n270\n00:13:18.080 --> 00:13:18.617\nRight?\nSo\n\n271\n00:13:18.617 --> 00:13:22.508\nyou can get a little more granular if\nyou want by creating multiple keys.\n\n272\n00:13:22.508 --> 00:13:25.142\nAnother really fancy thing we can do in\nthis instance and this is super fancy.\n\n273\n00:13:25.142 --> 00:13:25.978\nRight?\n\n274\n00:13:25.978 --> 00:13:28.185\nIs md5, it can be attacked.\n\n275\n00:13:28.185 --> 00:13:30.918\nRight?\nIf somebody intercepts some md5 traffic,\n\n276\n00:13:30.918 --> 00:13:35.272\nand the md5 hashes, they can start to try\nand brute force it, running it's rainbow\n\n277\n00:13:35.272 --> 00:13:38.910\ntables, things like that to try and\nfigure out what that password is.\n\n278\n00:13:38.910 --> 00:13:43.260\nWell maybe you want to change\npasswords on a regular intervals.\n\n279\n00:13:43.260 --> 00:13:44.160\nIt's a good idea.\n\n280\n00:13:44.160 --> 00:13:45.699\nMaybe I want to change\npasswords every two months.\n\n281\n00:13:45.699 --> 00:13:46.327\n60 days.\n\n282\n00:13:46.327 --> 00:13:47.756\nRight?\nI don't want to use a password for\n\n283\n00:13:47.756 --> 00:13:48.920\nmore than 60 days.\n\n284\n00:13:48.920 --> 00:13:50.320\nWell I don't want to\nhave to come in here and\n\n285\n00:13:50.320 --> 00:13:52.110\nchange the password myself every 60 days.\n\n286\n00:13:52.110 --> 00:13:54.281\nAnd I definitely don't want any down time.\n\n287\n00:13:54.281 --> 00:13:56.000\nRight?\nThe down time is the really crappy\n\n288\n00:13:56.000 --> 00:13:56.600\npart here.\n\n289\n00:13:56.600 --> 00:13:59.650\nBecause if I lose connectivity\nthese remote branches.\n\n290\n00:13:59.650 --> 00:14:01.730\nHow do I know they're gonna fix that?\n\n291\n00:14:01.730 --> 00:14:07.070\nSo, I could define more than one key and\nyou could set a key lifetime\n\n292\n00:14:07.070 --> 00:14:10.500\nthat says this key is good for this period\nof time and then it's not good anymore.\n\n293\n00:14:10.500 --> 00:14:13.850\nAnd you can set up staggered\nkeys that go on for years.\n\n294\n00:14:13.850 --> 00:14:18.250\nAnd now you're changing your keys every\n60 days, or however you wanna do it,\n\n295\n00:14:18.250 --> 00:14:20.140\nand making sure that you\nmaintain that security.\n\n296\n00:14:20.140 --> 00:14:24.210\nSo if somebody brute forces a password,\nwell it's different after 60 days,\n\n297\n00:14:24.210 --> 00:14:26.680\nso they'd only have 60\ndays to brute force it.\n\n298\n00:14:26.680 --> 00:14:29.570\nWell, how long's it take\nto brute force an md5 hash?\n\n299\n00:14:29.570 --> 00:14:30.680\nWhat, I don't know, actually, do you?\n\n300\n00:14:30.680 --> 00:14:32.860\n>> I don't have a clue. [LAUGH] >>\nYou can probably look it up though.\n\n301\n00:14:32.860 --> 00:14:36.140\nAnd if you looked it up and it was,\nwell, let's say it was 15 days.\n\n302\n00:14:36.140 --> 00:14:39.210\nWell, all right, you could set\nyour keys to rotate every 14 days.\n\n303\n00:14:39.210 --> 00:14:39.730\nAnd then that way,\n\n304\n00:14:39.730 --> 00:14:43.990\nby the time somebody brute forced your md5\nhash, you've already changed to a new one.\n\n305\n00:14:43.990 --> 00:14:45.330\nSo it doesn't matter that they have it.\n\n306\n00:14:45.330 --> 00:14:45.910\nRight?\n\n307\n00:14:45.910 --> 00:14:48.990\nOr you can pick something stronger\nlike SHA-256 and then you're fine.\n\n308\n00:14:48.990 --> 00:14:50.900\nRight?\nBut just bear that in mind.\n\n309\n00:14:50.900 --> 00:14:54.850\nYour key rotation needs to be built around\nnot your own personal preferences but\n\n310\n00:14:54.850 --> 00:14:59.112\nbuilt around how long it would take\nsomebody to brute force an md5 hash.\n\n311\n00:14:59.112 --> 00:15:00.040\nAll right?\n\n312\n00:15:00.040 --> 00:15:04.740\nSo if I want to set up key lifetimes,\nlet me show you guys an example of that.\n\n313\n00:15:04.740 --> 00:15:06.730\nSo I created key one and\n\n314\n00:15:06.730 --> 00:15:12.310\nwhen I created key one, if we take\na look at my running configuration.\n\n315\n00:15:12.310 --> 00:15:13.540\nWhen I created key one.\n\n316\n00:15:13.540 --> 00:15:14.810\nHere it is.\n\n317\n00:15:14.810 --> 00:15:17.700\nI didn't specify any kind of lifetime,\nI just gave it a key string.\n\n318\n00:15:17.700 --> 00:15:20.290\nThis key is always going to be good.\n\n319\n00:15:20.290 --> 00:15:24.530\nI'm always gonna be sending this key and\nI'm always gonna be receiving this key,\n\n320\n00:15:24.530 --> 00:15:26.940\nso it's always gonna be there.\n\n321\n00:15:26.940 --> 00:15:30.380\nWell if I wanna set a lifetime,\nit's easy to do that.\n\n322\n00:15:30.380 --> 00:15:33.677\nThis is just consider let's call\nthem Infinite Key or Unlimited Key.\n\n323\n00:15:33.677 --> 00:15:35.194\nBut let's say I wanna add another key.\n\n324\n00:15:35.194 --> 00:15:37.771\nSo I'm gonna get in to my key chain.\n\n325\n00:15:37.771 --> 00:15:42.170\nSo I'll just get right back in to that\nsame key chain, and I'm gonna add key two.\n\n326\n00:15:42.170 --> 00:15:43.850\nAll right?\n\n327\n00:15:43.850 --> 00:15:49.213\nAnd when you go to set up that key,\nyou set your key string and\n\n328\n00:15:49.213 --> 00:15:53.731\nso I'll say another super-secure-password.\n\n329\n00:15:53.731 --> 00:15:54.760\nRight?\n\n330\n00:15:54.760 --> 00:15:57.217\nAnd if I just stop right here,\nit's another infinite key but\n\n331\n00:15:57.217 --> 00:15:59.542\nif you do a question mark,\nyou'll see where you can set.\n\n332\n00:15:59.542 --> 00:16:02.659\nAn accept-lifetime and a send-lifetime.\n\n333\n00:16:02.659 --> 00:16:05.930\nSo you can specify when this\nkey is gonna be valid for.\n\n334\n00:16:05.930 --> 00:16:07.800\nIf I want it to be valid right now, right?\n\n335\n00:16:07.800 --> 00:16:10.360\nSo we're in the month of August, so\n\n336\n00:16:10.360 --> 00:16:14.320\nmaybe I want this key to be good for\nAugust and September.\n\n337\n00:16:14.320 --> 00:16:19.647\nRight, so I could come in here and\nI could set a accept-lifetime,\n\n338\n00:16:19.647 --> 00:16:23.320\nand then I could define when\nI wanted to accept this one.\n\n339\n00:16:23.320 --> 00:16:31.453\nAnd so I might say let's start at\nmidnight on Aug 1 2015, right?\n\n340\n00:16:31.453 --> 00:16:36.110\nSo just starting right there, the very\nbeginning of the day on August 1st, 2015.\n\n341\n00:16:36.110 --> 00:16:40.230\nAnd I want it to end at midnight.\n\n342\n00:16:41.880 --> 00:16:44.140\nAnd I want this to be August and\nSeptember.\n\n343\n00:16:44.140 --> 00:16:47.530\nSo I'll say, I want it through Oct 1 2015.\n\n344\n00:16:47.530 --> 00:16:52.930\nSo, at midnight, October 1st,\nthis key is gonna stop being accepted.\n\n345\n00:16:52.930 --> 00:16:58.350\nIf somebody sends me this key,\nI'm not gonna accept it after midnight,\n\n346\n00:16:59.390 --> 00:17:01.980\nwould be the very beginning of\nthe morning of October 1st.\n\n347\n00:17:01.980 --> 00:17:05.140\nSo really,\nhow many days are in September, 31?\n\n348\n00:17:05.140 --> 00:17:07.653\n>> I think 30 [LAUGH]\n>> I always plan around the first of\n\n349\n00:17:07.653 --> 00:17:10.450\nthe month, cuz every month has a 1st,\nnot every month has a 31st.\n\n350\n00:17:10.450 --> 00:17:12.022\nSo, let's say there's 30 days, right?\n\n351\n00:17:12.022 --> 00:17:14.830\nSo, this would run through September 30th.\n\n352\n00:17:14.830 --> 00:17:19.320\nAnd by the time we got over into October,\nthis key is no longer valid, for\n\n353\n00:17:19.320 --> 00:17:21.210\nme accepting it.\n\n354\n00:17:21.210 --> 00:17:22.800\nBut I'm still sending it,\n\n355\n00:17:22.800 --> 00:17:26.720\nI'll send this infinitely,\nunless I set a send-lifetime also.\n\n356\n00:17:26.720 --> 00:17:27.770\nAnd you might have a difference there.\n\n357\n00:17:27.770 --> 00:17:31.422\nI might want to keep sending\nthe password only for 30 days.\n\n358\n00:17:31.422 --> 00:17:35.142\nBut I'll still receive it for 35 days to\ngive people time to transition over or\n\n359\n00:17:35.142 --> 00:17:36.030\nsomething.\n\n360\n00:17:36.030 --> 00:17:39.320\nThat's how you avoid downtime,\nby overlapping your windows,\n\n361\n00:17:39.320 --> 00:17:40.360\nyou can avoid that downtime.\n\n362\n00:17:42.150 --> 00:17:48.400\nNow, I just set that accept-lifetime,\nnow I need to set the send-lifetime.\n\n363\n00:17:48.400 --> 00:17:50.670\nAnd usually we set them to be the same,\nright?\n\n364\n00:17:50.670 --> 00:17:53.148\nSo I want the send-lifetime\nto be identical.\n\n365\n00:17:53.148 --> 00:17:57.350\nNow, key 2 is only gonna be\nable to sent through August and\n\n366\n00:17:57.350 --> 00:18:01.060\nSeptember, and\ncome October it's dead, right?\n\n367\n00:18:01.060 --> 00:18:07.200\nSo now, I could add key 3 and\nget key 3 set up for October and beyond.\n\n368\n00:18:07.200 --> 00:18:10.010\nBut what I normally do is overlap.\n\n369\n00:18:10.010 --> 00:18:13.520\nI might want my key to change\nevery 60 days, but I go ahead and\n\n370\n00:18:13.520 --> 00:18:14.910\nchange it every 30 days.\n\n371\n00:18:14.910 --> 00:18:17.060\nIt doesn't hurt to change it faster,\nright?\n\n372\n00:18:17.060 --> 00:18:20.230\nSo this one I've got setup for\nAugust and September.\n\n373\n00:18:20.230 --> 00:18:25.230\nI might setup key 3, and key 3 might be,\n\n374\n00:18:26.490 --> 00:18:31.110\nlet's just say, we'll go, yet\nanother super secure password.\n\n375\n00:18:31.110 --> 00:18:35.940\nAnd on this one,\nI might set its accept-lifetime from,\n\n376\n00:18:35.940 --> 00:18:38.440\nlet's just say instead of\nAugust we'll do September.\n\n377\n00:18:38.440 --> 00:18:41.460\nSo I'll start it September 1st,\njust 30 days later, right?\n\n378\n00:18:41.460 --> 00:18:45.260\nAnd then this one's gonna go\nthrough all of October, and so\n\n379\n00:18:45.260 --> 00:18:47.070\nI'll bump that one up\nto November like that.\n\n380\n00:18:48.320 --> 00:18:52.470\nAnd then I'll do the same thing for\nmy send-lifetime.\n\n381\n00:18:52.470 --> 00:18:57.470\nSo what I'm doing is I'm creating\ntime-expiring keys that overlap.\n\n382\n00:18:57.470 --> 00:19:01.440\nDuring an overlap period I will send and\naccept both of these keys.\n\n383\n00:19:02.490 --> 00:19:05.200\nSo the other side,\nif it's set up for both, great.\n\n384\n00:19:05.200 --> 00:19:08.840\nBut when one of them finally dies,\nI've already got another key active,\n\n385\n00:19:08.840 --> 00:19:09.650\nthey overlap.\n\n386\n00:19:09.650 --> 00:19:12.680\nNow, I'm overlapping by like, 30 days,\nyou might not want to do that.\n\n387\n00:19:12.680 --> 00:19:15.430\nWe could overlap by one\nhour if you wanted, right?\n\n388\n00:19:15.430 --> 00:19:17.150\nWhat you have to think about here is,\n\n389\n00:19:17.150 --> 00:19:21.020\nhow closely synchronized\nare the clocks on your routers?\n\n390\n00:19:21.020 --> 00:19:23.237\nIf they're perfectly synchronized,\nif you got NTP servers and\n\n391\n00:19:23.237 --> 00:19:26.500\nyou know all your routers are set\nthe same, you don't have to overlap.\n\n392\n00:19:26.500 --> 00:19:31.330\nBecause you could set these guys to both\nend and activate on the exact same moment,\n\n393\n00:19:31.330 --> 00:19:33.715\nright, like midnight on October 1st.\n\n394\n00:19:33.715 --> 00:19:35.255\nAnd if all your routers are synchronized,\n\n395\n00:19:35.255 --> 00:19:37.064\nthey'll be fine,\nyou won't have any downtime.\n\n396\n00:19:37.064 --> 00:19:40.370\nBut if one router's clock\nis off by a minute, right?\n\n397\n00:19:40.370 --> 00:19:44.370\nEven if it's off by 30 seconds, right,\ncuz your hello interval is 10 seconds, so\n\n398\n00:19:44.370 --> 00:19:47.680\nevery 10 seconds,\nEIGRP is sending that little hello.\n\n399\n00:19:47.680 --> 00:19:51.210\nIf you're off, it's gonna fail\nit's gonna dump the neighbors.\n\n400\n00:19:51.210 --> 00:19:55.070\nSo if your time is within ten seconds,\nyou can be precise.\n\n401\n00:19:55.070 --> 00:19:57.700\nAnd if you're using NTP servers you'll\nbe within one second so that's fine.\n\n402\n00:19:58.910 --> 00:20:02.356\nBut if your time might be off by more,\nincorrect time zones are set,\n\n403\n00:20:02.356 --> 00:20:04.773\nsome are set to UTC,\nsome are set to local time,\n\n404\n00:20:04.773 --> 00:20:08.783\nyou just don't have the clocks right,\nyou're using different NTP servers.\n\n405\n00:20:08.783 --> 00:20:11.050\nThen you got a problem,\nand then you want overlap.\n\n406\n00:20:11.050 --> 00:20:14.950\nAnd your overlap should at least\nbe as big as your time disparity.\n\n407\n00:20:14.950 --> 00:20:17.490\nSo if you're worried about a router\nbeing in the wrong time zone and\n\n408\n00:20:17.490 --> 00:20:19.870\nthey can be off by three hours, right?\n\n409\n00:20:19.870 --> 00:20:24.052\nMaybe you're like us, in the Eastern\ntimezone, we're UTC minus five, right?\n\n410\n00:20:24.052 --> 00:20:26.390\nSo we're five hours behind UTC.\n\n411\n00:20:26.390 --> 00:20:30.360\nWell, somebody might have a machine,\nand they leave the router in UTC, and\n\n412\n00:20:30.360 --> 00:20:32.550\nthey just set the clock back five hours.\n\n413\n00:20:32.550 --> 00:20:36.280\nSo it think that it's in UTC but\nit's five hours wrong.\n\n414\n00:20:36.280 --> 00:20:41.168\nAnd my router might know that it's in\nEastern, and be minus five from UTC,\n\n415\n00:20:41.168 --> 00:20:42.266\nso it's right.\n\n416\n00:20:42.266 --> 00:20:44.860\nBut now they're five hours apart,\nthese two routers.\n\n417\n00:20:44.860 --> 00:20:47.910\nAnd that will cause this to break,\nthat'll cause this not to work.\n\n418\n00:20:47.910 --> 00:20:51.510\nSo you need your accept- and send-lifetime\nto be bigger than that window.\n\n419\n00:20:51.510 --> 00:20:52.990\nYou really need to get your clocks right,\n\n420\n00:20:52.990 --> 00:20:55.220\nI guess would be the real\nway to solve this.\n\n421\n00:20:55.220 --> 00:20:57.520\nBut if they overlap, that kinda solves it.\n\n422\n00:20:57.520 --> 00:21:00.544\nSo let's take a look at what this\nconfiguration looks like now.\n\n423\n00:21:00.544 --> 00:21:01.516\nNow when I go in here,\n\n424\n00:21:01.516 --> 00:21:05.040\nI've got this infinite key that I\nprobably want to get rid of, right?\n\n425\n00:21:05.040 --> 00:21:09.970\nAnd you can get rid of it by either\ndeleting it, just doing a no key 1,\n\n426\n00:21:09.970 --> 00:21:14.136\nor going back and adding a send- and\naccept-lifetime and\n\n427\n00:21:14.136 --> 00:21:16.866\nadding a end date that's in the past.\n\n428\n00:21:16.866 --> 00:21:19.194\nIf you add an end date that's in the past,\nthen the key's dead.\n\n429\n00:21:19.194 --> 00:21:21.540\nRight, so that's the way to get rid of\nit if you want to keep it historically.\n\n430\n00:21:21.540 --> 00:21:23.230\nOr you can just delete it, right?\n\n431\n00:21:23.230 --> 00:21:27.590\nBut these other guys, I've got this one\ngoing from August through September, and\n\n432\n00:21:27.590 --> 00:21:29.950\ndying right at the beginning of October.\n\n433\n00:21:29.950 --> 00:21:33.150\nI've got this one going through\nSeptember and October, and\n\n434\n00:21:33.150 --> 00:21:34.680\ndying right at the beginning of November.\n\n435\n00:21:34.680 --> 00:21:38.410\nAnd I can continue adding keys,\nand here's my rotation.\n\n436\n00:21:38.410 --> 00:21:42.285\nNow I probably don't want to\nadd a bunch of keys here.\n\n437\n00:21:42.285 --> 00:21:46.686\nCuz if somebody compromises my router,\nthey're gonna get the future keys too and\n\n438\n00:21:46.686 --> 00:21:48.041\nthat's worse, right.\n\n439\n00:21:48.041 --> 00:21:51.280\nBecause now they can stage their attack\nwhenever they want, they know all my keys.\n\n440\n00:21:51.280 --> 00:21:55.430\nBut what's more important is, I can look\nat this and I can say well, here we are,\n\n441\n00:21:55.430 --> 00:21:59.520\nit's in October, it's probably time for\nme to go and add a new key.\n\n442\n00:21:59.520 --> 00:22:01.870\nAnd you can add a key at your leisure,\nin the middle of the day.\n\n443\n00:22:01.870 --> 00:22:04.640\nIt doesn't create any kind of downtime,\nthe users don't even notice.\n\n444\n00:22:04.640 --> 00:22:07.600\nNow you can do it and not have to worry\nabout being there at midnight when\n\n445\n00:22:07.600 --> 00:22:09.430\nthe keys change, or\nworried about downtime.\n\n446\n00:22:09.430 --> 00:22:11.180\nYou can just add it as you need.\n\n447\n00:22:11.180 --> 00:22:12.620\nYou just have to remember to do it.\n\n448\n00:22:12.620 --> 00:22:13.805\nCreate a calendar item, right,\n\n449\n00:22:13.805 --> 00:22:15.890\ncuz if you don't,\nthat'll be a support call right there.\n\n450\n00:22:17.330 --> 00:22:19.920\nBut yeah, so I mean that's basically it.\n\n451\n00:22:19.920 --> 00:22:21.879\nJust be aware,\non some of the latest routers,\n\n452\n00:22:21.879 --> 00:22:24.912\nI don't think any of them are actually\nshipping with SHA-256 yet.\n\n453\n00:22:24.912 --> 00:22:28.173\nBut you can download the early\ndeployment IOS releases from Cisco.\n\n454\n00:22:28.173 --> 00:22:31.530\nAnd some of them do have SHA-256\nnow that you can add in.\n\n455\n00:22:31.530 --> 00:22:35.790\nBut otherwise, they all support MD5 and\nso that one's there.\n\n456\n00:22:35.790 --> 00:22:39.200\nAnd whole MD5 is considered weaker now,\nit's better than nothing,\n\n457\n00:22:39.200 --> 00:22:40.630\nat least you get something there.\n\n458\n00:22:40.630 --> 00:22:44.720\nThere's other things we could do, like\nusing firewalls to control where EIGRP\n\n459\n00:22:44.720 --> 00:22:47.550\ntraffic can come from and\nstuff to help secure that even more.\n\n460\n00:22:47.550 --> 00:22:49.437\nBut, at a minimum, we've got this.\n\n461\n00:22:49.437 --> 00:22:53.576\nAnd now we get basic authentication\nright there in the protocol.\n\n462\n00:22:53.576 --> 00:22:56.690\nAll right, well, Ronnie, I think\nthat's about it for authenticating.\n\n463\n00:22:56.690 --> 00:22:58.000\nCan you think of anything I left out?\n\n464\n00:22:58.000 --> 00:22:58.880\n>> I really can't.\n\n465\n00:22:58.880 --> 00:23:02.832\nAuthentication seems to be one of\nthe most important things that we can do,\n\n466\n00:23:02.832 --> 00:23:06.172\nat least providing for\ndue diligence more than anything else.\n\n467\n00:23:06.172 --> 00:23:10.028\nAnd we do have routers that were not\ndirectly inside of the building we can't\n\n468\n00:23:10.028 --> 00:23:14.004\nmonitor, this is one of the ways we can\nensure that we are sending our updates to\n\n469\n00:23:14.004 --> 00:23:16.600\nwhoever we want them to send to as well.\n\n470\n00:23:16.600 --> 00:23:20.470\nSo in this particular episode, what we did\nis we took a look at configuring basic\n\n471\n00:23:20.470 --> 00:23:24.990\nauthentication, and even authentication\nby using multiple keys as well.\n\n472\n00:23:24.990 --> 00:23:26.060\nAnd it really does help out.\n\n473\n00:23:26.060 --> 00:23:28.510\nMake sure you practice this\nbefore you go into the exam.\n\n474\n00:23:28.510 --> 00:23:30.400\nIt's really gonna help you out as well.\n\n475\n00:23:30.400 --> 00:23:31.790\nSo that ends our show for today.\n\n476\n00:23:31.790 --> 00:23:33.050\nThank you for watching.\n\n477\n00:23:33.050 --> 00:23:33.990\nI'm Ronnie Wong.\n\n478\n00:23:33.990 --> 00:23:34.730\n>> And I'm Don Pezet.\n\n479\n00:23:34.730 --> 00:23:35.995\n>> And we'll see you next time.\n\n480\n00:23:35.995 --> 00:23:42.340\n[SOUND]\n\n",
          "vimeoId": "137284152"
        },
        {
          "description": "Properly using EIGRP stubs can help to optimize performance on a network. Viewers will hear about configuring EIGRP stubs and the types of stubs one can set up to make things more efficient.",
          "length": "1690",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/ccnproute/cisco-ccnproute300101-3-20-eigrp_stubs-082615-1.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/ccnproute/cisco-ccnproute300101-3-20-eigrp_stubs-082615-1-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/ccnproute/cisco-ccnproute300101-3-20-eigrp_stubs-082615-1-sm.jpg",
          "title": "Configure EIGRP Stubs",
          "transcript": "WEBVTT\n\n1\n00:00:00.463 --> 00:00:10.753\n[MUSIC]\n\n2\n00:00:10.753 --> 00:00:14.020\nWelcome to another great\nepisode here on ITProTV.\n\n3\n00:00:14.020 --> 00:00:17.320\nToday we're covering CCNP route,\nmaking sure that we're getting ready for\n\n4\n00:00:17.320 --> 00:00:18.240\nthe exam.\n\n5\n00:00:18.240 --> 00:00:22.110\nI'll be your host today, Ronnie Wong,\nand here with me is Mr. Don Pezet.\n\n6\n00:00:22.110 --> 00:00:22.950\nHow's it going, Don?\n\n7\n00:00:22.950 --> 00:00:24.200\n>> It is going great, Ronnie.\n\n8\n00:00:24.200 --> 00:00:27.140\nReady to jump right back into\nthe wonderful world of EIGRP.\n\n9\n00:00:27.140 --> 00:00:31.500\nAnd in this episode, we're gonna be\ntalking a bit about EIGRP stubs.\n\n10\n00:00:31.500 --> 00:00:35.910\nNow, stubs are something that most of us\nhave already learned about in OSPF, and\n\n11\n00:00:35.910 --> 00:00:37.690\neven the EIGRP to an extent.\n\n12\n00:00:37.690 --> 00:00:42.590\nAnd OSPF, we know that stubs are kinda\noptional, you don't have to use them.\n\n13\n00:00:42.590 --> 00:00:46.180\nIn EIGRP,\nstubs can actually be pretty important.\n\n14\n00:00:46.180 --> 00:00:47.440\nWhen you configure EIGRP,\n\n15\n00:00:47.440 --> 00:00:50.739\nyour getting your routers to sort\nof exchanging information, right.\n\n16\n00:00:50.739 --> 00:00:53.710\nAnd your routers are all\nin one autonomous system.\n\n17\n00:00:53.710 --> 00:00:55.160\nWell, that works great right?\n\n18\n00:00:55.160 --> 00:00:57.840\nYour routers find each other and\nit's distance vector.\n\n19\n00:00:57.840 --> 00:01:00.750\nSo it's not like one router has to talk\nto every other router that's out there,\n\n20\n00:01:00.750 --> 00:01:02.260\nyou just talk to your direct neighbor, so\n\n21\n00:01:02.260 --> 00:01:03.970\nchatter's not really that\nheavy on the network.\n\n22\n00:01:03.970 --> 00:01:07.330\nBut as your network gets bigger,\nand bigger, and bigger.\n\n23\n00:01:07.330 --> 00:01:10.290\nWhen you have tens of routers,\nand then hundreds of routers,\n\n24\n00:01:10.290 --> 00:01:12.310\nand then thousands of routers.\n\n25\n00:01:12.310 --> 00:01:13.760\nIt really starts to get pretty big.\n\n26\n00:01:13.760 --> 00:01:17.245\nAnd you start ending up with routers\nthat are operating not very efficiently,\n\n27\n00:01:17.245 --> 00:01:19.930\ncuz they're dealing with so\nmuch information.\n\n28\n00:01:19.930 --> 00:01:20.500\nAnd a lot of times,\n\n29\n00:01:20.500 --> 00:01:23.580\nthey're dealing with information\nthat they really shouldn't have to.\n\n30\n00:01:23.580 --> 00:01:26.830\nIn OSPF we solved that, by using areas.\n\n31\n00:01:26.830 --> 00:01:28.840\nBut in EIJRP we don't have areas.\n\n32\n00:01:28.840 --> 00:01:31.754\nSo, instead we're left with\na different technology which is just,\n\n33\n00:01:31.754 --> 00:01:33.100\nwhat are called stubs.\n\n34\n00:01:33.100 --> 00:01:34.760\nAnd if we properly use stubs,\n\n35\n00:01:34.760 --> 00:01:37.020\nyou can really optimize\nperformance on your network.\n\n36\n00:01:37.020 --> 00:01:41.110\nSo key thing to remember here before we\neven dive in to how to use this stuff,\n\n37\n00:01:41.110 --> 00:01:44.855\nthe only real reason to use stubs,\nis for performance.\n\n38\n00:01:44.855 --> 00:01:47.115\nIf your network is big, right.\n\n39\n00:01:47.115 --> 00:01:49.255\nAnd you're trying to keep\nthings running smoothly and\n\n40\n00:01:49.255 --> 00:01:53.465\nefficiently, like maybe you're seeing some\nroutes go stuck in active, or whatever.\n\n41\n00:01:53.465 --> 00:01:55.165\nAnd you're trying to\ntroubleshoot that down.\n\n42\n00:01:55.165 --> 00:01:56.955\nStubs can help with that, all right?\n\n43\n00:01:56.955 --> 00:01:59.775\nBut if you've got a small network,\neven if you have\n\n44\n00:01:59.775 --> 00:02:02.625\nsomebody who'd be a perfect candidate for\na stub, we don't normally bother with it.\n\n45\n00:02:02.625 --> 00:02:04.965\nCuz it's a small network and\nit's not impacting things, so\n\n46\n00:02:04.965 --> 00:02:06.220\nyou don't worry about it, right?\n\n47\n00:02:06.220 --> 00:02:09.230\nBut for large networks,\nstubs are very handy.\n\n48\n00:02:09.230 --> 00:02:11.750\nLet me show you kind of a use\ncase scenario for a stub.\n\n49\n00:02:11.750 --> 00:02:13.720\nI've got my network topology\npulled up here, and\n\n50\n00:02:13.720 --> 00:02:15.750\nthis is kind of what I've been\nusing throughout the show.\n\n51\n00:02:15.750 --> 00:02:17.520\nI've got a headquarters router.\n\n52\n00:02:17.520 --> 00:02:19.510\nAnd it's connected to\na frame relay network.\n\n53\n00:02:19.510 --> 00:02:22.325\nAnd on that frame relay I have\nbasically point to point links,\n\n54\n00:02:22.325 --> 00:02:26.345\nthat run from headquarters to branch one,\nand headquarters to branch two,\n\n55\n00:02:26.345 --> 00:02:27.665\nheadquarters to branch three.\n\n56\n00:02:27.665 --> 00:02:30.415\nSo each branch connects\nback to headquarters.\n\n57\n00:02:30.415 --> 00:02:33.243\nHeadquarters has a connection out\nto ISP one, and ISP two right,\n\n58\n00:02:33.243 --> 00:02:34.570\ngot redundant ISPs.\n\n59\n00:02:34.570 --> 00:02:39.195\nBut in the event that headquarters fails,\nbranch one has a connection to the ISP,\n\n60\n00:02:39.195 --> 00:02:40.000\nright.\n\n61\n00:02:40.000 --> 00:02:43.960\nSo if I'm at branch two, and I'm trying to\nget out to the internet, if headquarters\n\n62\n00:02:43.960 --> 00:02:47.230\nloses it's connections, I could always\njump over to branch one and get out there.\n\n63\n00:02:47.230 --> 00:02:51.020\nSo that means that branch two\nneeds to be aware of those routes.\n\n64\n00:02:51.020 --> 00:02:54.730\nIt needs to know about these different\nways to go through the network.\n\n65\n00:02:54.730 --> 00:02:55.240\nRight?\n\n66\n00:02:55.240 --> 00:02:56.270\nAnd so does branch three.\n\n67\n00:02:56.270 --> 00:02:59.610\nIt needs to know about these different\nways to get through the network.\n\n68\n00:02:59.610 --> 00:03:01.539\nBut at the end of the day,\nif you look at branch two or\n\n69\n00:03:01.539 --> 00:03:07.230\nif If you look at branch three they've\nonly got one way in, and one way out.\n\n70\n00:03:07.230 --> 00:03:09.540\nSo no matter what the route is,\nwhat way are they gonna go?\n\n71\n00:03:09.540 --> 00:03:11.520\nThey're gonna go across that one link.\n\n72\n00:03:11.520 --> 00:03:12.850\nRight, there is only one way to go.\n\n73\n00:03:12.850 --> 00:03:15.070\nIt's a dead end on the network.\n\n74\n00:03:15.070 --> 00:03:16.660\nAnd so for those routers,\n\n75\n00:03:16.660 --> 00:03:19.380\nthey're probably learning a lot\nmore information than they need.\n\n76\n00:03:19.380 --> 00:03:23.540\nThey're probably learning some\nnice big EIGRP routing tables.\n\n77\n00:03:23.540 --> 00:03:25.390\nWhen in reality they just need one route.\n\n78\n00:03:25.390 --> 00:03:26.870\nAnd that's what a stub is all about.\n\n79\n00:03:26.870 --> 00:03:29.420\nA stub, one way in,\none way out, that's it, so\n\n80\n00:03:29.420 --> 00:03:31.680\nwe don't need a lot of decision making,\nokay.\n\n81\n00:03:31.680 --> 00:03:33.160\nNow normally we don't worry about it.\n\n82\n00:03:33.160 --> 00:03:36.030\nWe just get that nice big routing\ntable right there on branch two,\n\n83\n00:03:36.030 --> 00:03:38.350\na nice big routing table on branch three,\nand you're fine.\n\n84\n00:03:38.350 --> 00:03:41.980\nBut if you're using really low end\nrouters at those branches, and you've got\n\n85\n00:03:41.980 --> 00:03:46.860\ntens of thousands of routes, that can be\na burden, right a big burden on those.\n\n86\n00:03:46.860 --> 00:03:49.910\nSo, there's two steps we can take,\nalright.\n\n87\n00:03:49.910 --> 00:03:52.690\nThe first step is to\ncreate a summary route.\n\n88\n00:03:52.690 --> 00:03:55.910\nA summary route is where we kind\nof wrap all of our routes up into\n\n89\n00:03:55.910 --> 00:03:58.290\none statement to send down to\nbranch two or branch three.\n\n90\n00:03:58.290 --> 00:04:01.280\nBasically telling them, hey, you've\nonly got one way in and one way out.\n\n91\n00:04:01.280 --> 00:04:02.750\nDon't worry about all\nthese other networks.\n\n92\n00:04:02.750 --> 00:04:04.915\nJust send your stuff across the one link.\n\n93\n00:04:04.915 --> 00:04:06.150\nthat's it, you got one route.\n\n94\n00:04:06.150 --> 00:04:07.130\nThat's all you need.\n\n95\n00:04:07.130 --> 00:04:10.000\nWe can hide the whole rest\nof the routing table, okay.\n\n96\n00:04:10.000 --> 00:04:13.860\nBut even if we do that,\nthere's still another problem.\n\n97\n00:04:13.860 --> 00:04:18.280\nAnd that problem is when an EIGRP\nrouter loses a route, right.\n\n98\n00:04:18.280 --> 00:04:22.740\nSo let's say headquarters, the ISP 2\nconnection dies on headquarters, okay.\n\n99\n00:04:22.740 --> 00:04:24.580\nWhat's headquarters going to do?\n\n100\n00:04:24.580 --> 00:04:27.300\nIt's gonna generate an EIRGP query, right.\n\n101\n00:04:27.300 --> 00:04:30.520\nIt's gonna send a query\nout it's other networks.\n\n102\n00:04:30.520 --> 00:04:32.400\nAnd ask everybody else\nthat it's connected to.\n\n103\n00:04:32.400 --> 00:04:34.750\nSo headquarters will ask, branch one,\nbranch two and branch three.\n\n104\n00:04:34.750 --> 00:04:38.035\nIt's gonna ask them, hey, do you guys\nknow another way to get to ISP 2,\n\n105\n00:04:38.035 --> 00:04:38.945\nI just lost mine.\n\n106\n00:04:38.945 --> 00:04:41.125\nAnd that's a query.\n\n107\n00:04:41.125 --> 00:04:42.925\nSo these guys are gonna\nreceive that query, and\n\n108\n00:04:42.925 --> 00:04:44.735\nthen they're gonna reply back, okay.\n\n109\n00:04:44.735 --> 00:04:47.315\nIf they know another way to get there,\nthey'll tell them.\n\n110\n00:04:47.315 --> 00:04:49.755\nIf they don't know a way to get there,\n\n111\n00:04:49.755 --> 00:04:52.045\nit'll look to see if they\nhave any other neighbors.\n\n112\n00:04:52.045 --> 00:04:55.035\nSo maybe branch three has a neighbor\nthat headquarters doesn't.\n\n113\n00:04:55.035 --> 00:04:57.115\nAnd so branch three will say give me\njust a minute, I'm gonna turn around and\n\n114\n00:04:57.115 --> 00:04:58.520\nask these other guys, right.\n\n115\n00:04:58.520 --> 00:05:00.220\nAnd that starts to happen.\n\n116\n00:05:00.220 --> 00:05:04.600\nAnd if it cascades long enough and\nit exceeds, I think it's a minute and\n\n117\n00:05:04.600 --> 00:05:08.800\na half, if it exceeds that period of time,\nthen we get stuck in active, right.\n\n118\n00:05:08.800 --> 00:05:10.020\nThat's where that happens.\n\n119\n00:05:10.020 --> 00:05:14.410\nWell, if you're a stub, is there any\npoint in me asking router three,\n\n120\n00:05:14.410 --> 00:05:16.760\nor branch three,\nif it knows a way to get to a route?\n\n121\n00:05:16.760 --> 00:05:17.790\n>> No.\n\n122\n00:05:17.790 --> 00:05:18.790\n>> Yeah, it's a dead end.\n\n123\n00:05:18.790 --> 00:05:22.710\nIt doesn't know another way, so\nI'm wasting my time by asking it,\n\n124\n00:05:22.710 --> 00:05:24.500\nby sending queries there.\n\n125\n00:05:24.500 --> 00:05:28.360\nSo we can flag an area like this,\na dead end, as a stub.\n\n126\n00:05:28.360 --> 00:05:32.350\nAnd when you flag it as a stub,\nit still behaves fairly normal.\n\n127\n00:05:32.350 --> 00:05:35.670\nBut we won't send it queries anymore.\n\n128\n00:05:35.670 --> 00:05:38.420\nInstead of sending queries to it,\nthe hub router,\n\n129\n00:05:38.420 --> 00:05:41.290\nwhoever's kind of serving as that hub for\nthe stub.\n\n130\n00:05:41.290 --> 00:05:45.050\nWhoever the stub connects to,\nthat router will answer on its behalf.\n\n131\n00:05:45.050 --> 00:05:49.550\nSo if headquarters loses a route,\nit looks at branch three and it says,\n\n132\n00:05:49.550 --> 00:05:51.980\noh branch three is a stub, it doesn't\nknow the way, and that's that, right.\n\n133\n00:05:53.190 --> 00:05:59.190\nOr if branch one loses its route to ISP 1,\nand it goes to send a query.\n\n134\n00:05:59.190 --> 00:06:00.490\nIf it sees that branch two and\n\n135\n00:06:00.490 --> 00:06:04.000\nbranch three are stubs,\nthen it doesn't send a query there, right?\n\n136\n00:06:04.000 --> 00:06:06.550\nBut it will send that\nquery up to headquarters.\n\n137\n00:06:06.550 --> 00:06:09.540\nNow, if branch one is point\nto point to headquarters,\n\n138\n00:06:09.540 --> 00:06:11.670\nit doesn't connect\na branch to branch three.\n\n139\n00:06:11.670 --> 00:06:13.480\nIt sends the query to headquarters.\n\n140\n00:06:13.480 --> 00:06:16.310\nHeadquarters could turn around and\nquery everybody else.\n\n141\n00:06:16.310 --> 00:06:19.040\nBut headquarters is gonna see that\nbranch two, and branch three are stubs.\n\n142\n00:06:19.040 --> 00:06:20.190\nIt's not gonna ask them.\n\n143\n00:06:20.190 --> 00:06:22.582\nAnd instead,\nit's doing a reply on their behalf.\n\n144\n00:06:22.582 --> 00:06:24.710\nAnd it'll send that reply\nback to branch one and\n\n145\n00:06:24.710 --> 00:06:27.940\nsay, nope, we don't know another way,\nyou're on your own.\n\n146\n00:06:27.940 --> 00:06:31.820\nWell, if branch one lost its connection\nto ISP 1, the query would make it to\n\n147\n00:06:31.820 --> 00:06:34.300\nheadquarters and headquarters would\nsay yeah, I know how to get there.\n\n148\n00:06:34.300 --> 00:06:34.980\nI can get you there.\n\n149\n00:06:34.980 --> 00:06:35.920\nI got you covered.\n\n150\n00:06:35.920 --> 00:06:37.290\nAnd then it would get its route.\n\n151\n00:06:37.290 --> 00:06:39.480\nAnd branch two and\nbranch three wouldn't be involved.\n\n152\n00:06:39.480 --> 00:06:44.560\nSo by getting them out of the equation,\nour queries get resolved faster.\n\n153\n00:06:44.560 --> 00:06:47.160\nWe're not wasting time querying\ndead ends on the network, and\n\n154\n00:06:47.160 --> 00:06:50.110\nwe're not wasting resources on those\nrouters by making them handle queries\n\n155\n00:06:50.110 --> 00:06:51.720\nthat they can't even answer.\n\n156\n00:06:51.720 --> 00:06:53.240\nSo that's what a stub does.\n\n157\n00:06:53.240 --> 00:06:56.170\nAnd if we combine that\nwith a summary route,\n\n158\n00:06:56.170 --> 00:06:59.790\nnow we can have it where they're\nnot involved in queries, and\n\n159\n00:06:59.790 --> 00:07:03.410\nthey've only got one EIGRP\nroute in their routing table.\n\n160\n00:07:03.410 --> 00:07:06.150\nThey're not trying to maintain\na full table and do updates, right.\n\n161\n00:07:06.150 --> 00:07:08.660\nEvery time a route changes downstream,\nthey have to update.\n\n162\n00:07:08.660 --> 00:07:09.590\nWell, what do they have to update?\n\n163\n00:07:09.590 --> 00:07:12.620\nThey've only got one path, there's nothing\nto update, they're wasting time, right.\n\n164\n00:07:12.620 --> 00:07:16.475\nSo these are ways that we can optimize\nthose dead ends on the network.\n\n165\n00:07:16.475 --> 00:07:18.660\nAlright, well let me show\nyou guys this in action so\n\n166\n00:07:18.660 --> 00:07:19.990\nyou kinda get an idea how this works.\n\n167\n00:07:19.990 --> 00:07:21.720\nThere's two parts to it, right.\n\n168\n00:07:21.720 --> 00:07:23.120\nFirst off we need to turn on the stub.\n\n169\n00:07:23.120 --> 00:07:26.830\nAnd then secondly we need to\nturn on the summary route, okay.\n\n170\n00:07:26.830 --> 00:07:29.110\nSo I'm gonna jump over to my Branch three.\n\n171\n00:07:29.110 --> 00:07:32.610\nAnd if I take a look at that router.\n\n172\n00:07:32.610 --> 00:07:34.090\nSo here I am on the router.\n\n173\n00:07:34.090 --> 00:07:36.590\nAnd if I look at\nthe interfaces on this router,\n\n174\n00:07:36.590 --> 00:07:41.870\nyou can see where I've got E00 is turned\noff right, so that one I'm not even using.\n\n175\n00:07:41.870 --> 00:07:44.233\nE01 that's my private\nnetwork on branch three.\n\n176\n00:07:44.233 --> 00:07:49.100\n172.16.6 I need to advertise\nthat out to everybody else.\n\n177\n00:07:49.100 --> 00:07:50.370\nSure, I'm a dead end.\n\n178\n00:07:50.370 --> 00:07:53.580\nBut I'm a dead end, that has a network,\nthis network right here.\n\n179\n00:07:53.580 --> 00:07:55.390\nSo people need to be able to find that,\nright.\n\n180\n00:07:55.390 --> 00:07:57.757\nSo I'm gonna be advertising\nthat out in the EIGRP.\n\n181\n00:07:57.757 --> 00:08:00.880\nStubs still advertise their own networks,\nright.\n\n182\n00:08:00.880 --> 00:08:02.981\nThey just learn differently, right.\n\n183\n00:08:02.981 --> 00:08:05.234\nThey don't necessarily advertise.\n\n184\n00:08:05.234 --> 00:08:06.093\nDifferently.\n\n185\n00:08:06.093 --> 00:08:08.298\nNow the other networks that I have,\nmy serial link, right?\n\n186\n00:08:08.298 --> 00:08:11.360\nThat's the frame relay link that\nconnects me to headquarters, right?\n\n187\n00:08:11.360 --> 00:08:14.690\nAnd that's the link that I'm gonna be\ncommunicating out that I'm a stub on.\n\n188\n00:08:14.690 --> 00:08:16.350\nAnd then lastly I've got loop back.\n\n189\n00:08:16.350 --> 00:08:18.820\nSo I've really only got one way in and\none way out.\n\n190\n00:08:18.820 --> 00:08:22.060\nThis frame relay link is the only\nway in and out of branch three.\n\n191\n00:08:22.060 --> 00:08:25.935\nOtherwise I've got this private network\nwhich is my dead end, all right?\n\n192\n00:08:25.935 --> 00:08:32.479\nAnd so on this system when I configured\neigrp, I just did a network 0.0.0.0.\n\n193\n00:08:32.479 --> 00:08:35.150\nI wanna advertise everything\nthat's on this router.\n\n194\n00:08:35.150 --> 00:08:36.720\nBut I made them passive interfaces and\n\n195\n00:08:36.720 --> 00:08:39.840\nthe only interface that isn't passive\nis my frame relay link right?\n\n196\n00:08:39.840 --> 00:08:43.375\nAnd that's because as a data end I'm\nnot gonna have neighbors on my loopback\n\n197\n00:08:43.375 --> 00:08:44.305\nthat's for sure.\n\n198\n00:08:44.305 --> 00:08:46.905\nAnd I'm definitely not gonna\nhave neighbors on this 172.16.6\n\n199\n00:08:46.905 --> 00:08:48.805\nbecause that's where my PCs are.\n\n200\n00:08:48.805 --> 00:08:50.715\nSo the only place I even need to try and\n\n201\n00:08:50.715 --> 00:08:53.325\nbuild adjacencies is on\nthat frame relay link.\n\n202\n00:08:53.325 --> 00:08:55.625\nAnd this could be Metro E,\nit could be fiber, it could be whatever.\n\n203\n00:08:55.625 --> 00:08:58.855\nIt's all kinda treated the same.\n\n204\n00:08:58.855 --> 00:09:01.885\nBut at the end of the day there is\njust one way in and one way out and\n\n205\n00:09:01.885 --> 00:09:05.320\nwhere that becomes really\nobvious is in our routing table.\n\n206\n00:09:05.320 --> 00:09:08.960\nWhen I look at my routing table and\nI see all the routes that I know.\n\n207\n00:09:08.960 --> 00:09:10.240\nHere's my routing table.\n\n208\n00:09:10.240 --> 00:09:14.870\nLet me filter this down\nto just eigrp routes.\n\n209\n00:09:14.870 --> 00:09:16.950\nJust give me the eigrp routes.\n\n210\n00:09:16.950 --> 00:09:21.310\nWhen we look at the eigrp routes,\nyou'll notice a really common element.\n\n211\n00:09:21.310 --> 00:09:22.850\nHere's a network that I know,\nhere's another network,\n\n212\n00:09:22.850 --> 00:09:27.570\nhere's another network look at\nthe destination via Serial1/0.1.\n\n213\n00:09:27.570 --> 00:09:32.210\nEvery single one of these is\nvia the same interface right?\n\n214\n00:09:32.210 --> 00:09:35.650\nSo if a metric changes,\nam I gonna make a different decision?\n\n215\n00:09:35.650 --> 00:09:39.390\nNo, there's only one path and they're\nall going to that same destination.\n\n216\n00:09:39.390 --> 00:09:41.410\nSo it's kinda pointless\nto maintain all of these.\n\n217\n00:09:41.410 --> 00:09:44.310\nAnd this is my routing table\nwith only three branches\n\n218\n00:09:44.310 --> 00:09:46.170\nImagine if I had 100 branches.\n\n219\n00:09:46.170 --> 00:09:48.780\nThis routing table would be a lot bigger.\n\n220\n00:09:48.780 --> 00:09:52.290\nIf I can simplify that,\nit's gonna make life easy.\n\n221\n00:09:52.290 --> 00:09:57.210\nI'm gonna go to my headquarters and\nI'm gonna install a summary route.\n\n222\n00:09:57.210 --> 00:10:00.470\nSummary routes are installed\non an interface basis.\n\n223\n00:10:00.470 --> 00:10:04.870\nOn my headquarters,\nI need to do a show ip int brief and\n\n224\n00:10:04.870 --> 00:10:08.050\nfigure out what interface I'm\nconnected to that router on.\n\n225\n00:10:08.050 --> 00:10:11.510\nSo you'll see my little frame\nrelay sub-interfaces here\n\n226\n00:10:11.510 --> 00:10:13.240\nthat connect me to the branches.\n\n227\n00:10:13.240 --> 00:10:16.270\nI've got my connection to branch one,\nmy connection to branch two and\n\n228\n00:10:16.270 --> 00:10:19.475\nthis is my connection to branch\nthree right here Serial/0.3.\n\n229\n00:10:19.475 --> 00:10:22.220\nSo I'm gonna get into\ninterface Serial/0.3 and\n\n230\n00:10:22.220 --> 00:10:27.690\non that interface I'm gonna\ninstall a summary route.\n\n231\n00:10:27.690 --> 00:10:30.630\nAnd the summary route is\ngonna be a default route.\n\n232\n00:10:30.630 --> 00:10:33.810\nI don't need to try and summarize\nindividual networks, that branch only has\n\n233\n00:10:33.810 --> 00:10:37.460\none way in and one way out so I can\njust tell it to send everything to me.\n\n234\n00:10:37.460 --> 00:10:40.280\nSo I'll say ip summary-address, and\n\n235\n00:10:40.280 --> 00:10:44.980\nI'm gonna tell it I'm doing it for\neigrp autonomous system 1.\n\n236\n00:10:44.980 --> 00:10:47.620\nYou would use whatever\nAS number you had and\n\n237\n00:10:47.620 --> 00:10:51.430\nthen normally we would tell\nthe network that we want to de-create.\n\n238\n00:10:51.430 --> 00:10:54.850\nBut I wanna go to a default route so\nI'm just gonna do all zeros right.\n\n239\n00:10:54.850 --> 00:10:57.690\nA lot of people don't know that you can do\nthis, that you can create a summary route\n\n240\n00:10:57.690 --> 00:10:59.930\nthat is a default and\nthat's exactly what I'm doing.\n\n241\n00:10:59.930 --> 00:11:03.360\nSo now I'm saying, while I\nadvertise routes at this interface,\n\n242\n00:11:03.360 --> 00:11:05.970\njust advertise it as a default okay.\n\n243\n00:11:05.970 --> 00:11:07.730\nAnd that should happen pretty quick.\n\n244\n00:11:07.730 --> 00:11:10.330\nI see that resync just\nhappened on the line.\n\n245\n00:11:10.330 --> 00:11:14.970\nAnd if I jump over to branch three and\ntake a look at its routing table now,\n\n246\n00:11:14.970 --> 00:11:17.860\nit's a little bit smaller, isn't it?\n\n247\n00:11:17.860 --> 00:11:19.790\n>> It is.\n>> Well, I filled it just eigrp.\n\n248\n00:11:19.790 --> 00:11:24.120\nBut you can see I'm just learning one\nroute right now, and it's a default.\n\n249\n00:11:24.120 --> 00:11:26.680\nI can send everything out Serial1/0.1.\n\n250\n00:11:26.680 --> 00:11:29.340\nAnd before,\nhere's my routing table before.\n\n251\n00:11:29.340 --> 00:11:31.610\nSee how I didn't have\na gateway of last resort?\n\n252\n00:11:31.610 --> 00:11:36.510\nSo if there was traffic from my network\nthat had no destination, that didn't match\n\n253\n00:11:36.510 --> 00:11:39.480\nthe routing table, I didn't have anywhere\nto send it and it'd throw it out.\n\n254\n00:11:39.480 --> 00:11:42.450\nNow, not only do I have the default route,\nbut it's installed itself.\n\n255\n00:11:42.450 --> 00:11:44.610\nIt's installed as\nthe gateway of last resort.\n\n256\n00:11:44.610 --> 00:11:48.400\nSo when I do a full show IP route,\nI see my connecteds,\n\n257\n00:11:48.400 --> 00:11:53.330\nmy local I see that one eigrp route and\nI've got that default okay.\n\n258\n00:11:53.330 --> 00:11:54.950\nSo, that's step one.\n\n259\n00:11:54.950 --> 00:11:56.882\nI just optimized the routing\ntable on that stub.\n\n260\n00:11:56.882 --> 00:11:59.870\nThat's gonna perform a lot better now\nthat it's got a smaller routing table.\n\n261\n00:11:59.870 --> 00:12:02.450\nYou know,\nI could have a massive network and\n\n262\n00:12:02.450 --> 00:12:06.500\neven an 800 series router is gonna do fine\nnow because it's just one route, right.\n\n263\n00:12:06.500 --> 00:12:08.660\nIt's so much easier okay?\n\n264\n00:12:08.660 --> 00:12:12.010\nHowever, I'm still\nparticipating in queries.\n\n265\n00:12:12.010 --> 00:12:14.940\nIf a network goes down,\na query is gonna get generated,\n\n266\n00:12:14.940 --> 00:12:17.620\nit's gonna propagate it across\nthe network and I'm gonna see it right?\n\n267\n00:12:17.620 --> 00:12:18.830\nIt is gonna turn up here.\n\n268\n00:12:18.830 --> 00:12:21.280\nAnd you could actually turn that on,\nright?\n\n269\n00:12:21.280 --> 00:12:24.990\nIf I do like a debug eigrp packet.\n\n270\n00:12:24.990 --> 00:12:26.490\nAnd then specify my packet type.\n\n271\n00:12:26.490 --> 00:12:28.890\nI could say I'm gonna debug for queries.\n\n272\n00:12:30.330 --> 00:12:34.880\nSo now I'm watching for anybody\nsending out queries on the network.\n\n273\n00:12:34.880 --> 00:12:36.780\nOn a stable network you\nwont see any queries right.\n\n274\n00:12:36.780 --> 00:12:38.250\nSo I wont get anything here.\n\n275\n00:12:38.250 --> 00:12:39.700\nBut if I generate some instability.\n\n276\n00:12:39.700 --> 00:12:41.560\nLike if I jump over to headquarters and\n\n277\n00:12:41.560 --> 00:12:44.830\nI shut off one of it's networks\nthat's a part of eigrp.\n\n278\n00:12:44.830 --> 00:12:46.905\nWhich actually would what did I?\n\n279\n00:12:46.905 --> 00:12:50.766\nLet's see what all I advertised\nin eirgp oh I did everything.\n\n280\n00:12:50.766 --> 00:12:52.501\nI did a network 0000.\n\n281\n00:12:52.501 --> 00:12:56.575\nSo if I were to take one of\nmy interfaces that is up,\n\n282\n00:12:56.575 --> 00:13:00.850\nsomebody like we'll take\nthis 172 F16 right?\n\n283\n00:13:00.850 --> 00:13:05.860\nI might use 0/1 so if I get into E0/1 and\nI shut it down right?\n\n284\n00:13:05.860 --> 00:13:07.600\nI'm gonna lose that route.\n\n285\n00:13:07.600 --> 00:13:08.940\nAnd I'm gonna send a query out.\n\n286\n00:13:08.940 --> 00:13:11.780\nAnd the queries gonna go out to everybody\nsaying hey does anybody know another way\n\n287\n00:13:11.780 --> 00:13:12.490\nto get to this network?\n\n288\n00:13:12.490 --> 00:13:14.360\nI just lost it okay.\n\n289\n00:13:14.360 --> 00:13:17.880\nAnd so if I look over at branch\nthree there's that query right.\n\n290\n00:13:17.880 --> 00:13:19.140\nI received the query.\n\n291\n00:13:19.140 --> 00:13:21.800\nThey're asking me do I know\nhow to get to that network.\n\n292\n00:13:21.800 --> 00:13:22.520\nOf course I don't.\n\n293\n00:13:22.520 --> 00:13:23.660\nI'm a dead end.\n\n294\n00:13:23.660 --> 00:13:27.900\nSo I'm gonna go back to headquarters and\nI'll turn that interface back on so\n\n295\n00:13:27.900 --> 00:13:28.570\nI can get it back.\n\n296\n00:13:29.650 --> 00:13:34.470\nNow I'm gonna set up\nbranch three as a stub.\n\n297\n00:13:34.470 --> 00:13:36.660\nNow when you say you'\nset yourself up as stub,\n\n298\n00:13:36.660 --> 00:13:38.470\nthe EIGRP doesn't work all that different.\n\n299\n00:13:38.470 --> 00:13:41.780\nYou just start sending out all these\nlittle packets that are stub packets.\n\n300\n00:13:41.780 --> 00:13:43.620\nThat let the other routers\nknow that you're a stub.\n\n301\n00:13:43.620 --> 00:13:46.310\nIn other words, don't ask me questions,\nI'm a stub, right?\n\n302\n00:13:46.310 --> 00:13:47.330\nLeave me be, I don't know.\n\n303\n00:13:47.330 --> 00:13:50.110\nAnd so\nit kind of sends these messages out.\n\n304\n00:13:50.110 --> 00:13:55.510\nOn headquarters we'll be able to see that\nif we do like a debug eigrp packet stub.\n\n305\n00:13:57.000 --> 00:13:58.642\nSo now it's listening for stubs and\n\n306\n00:13:58.642 --> 00:14:01.006\nif I have any stubs it will\nreceive those messages.\n\n307\n00:14:01.006 --> 00:14:06.093\nSo I'll jump over to branch three,\nand I'll get into router eigrp 1.\n\n308\n00:14:06.093 --> 00:14:08.580\nAnd I'll just say, eigrp stub.\n\n309\n00:14:10.150 --> 00:14:12.200\nNow my router knows that it's a stub.\n\n310\n00:14:12.200 --> 00:14:16.550\nAnd it's gonna start telling\nother people that it's a stub.\n\n311\n00:14:16.550 --> 00:14:18.550\nWell, its only neighbor,\nI think is headquarters.\n\n312\n00:14:18.550 --> 00:14:20.880\nLet's see who my neighbors are.\n\n313\n00:14:20.880 --> 00:14:22.620\nOh yeah, headquarters is my only neighbor.\n\n314\n00:14:22.620 --> 00:14:25.970\nSo I'm telling my neighbor at\nheadquarters, hey, I'm a stub.\n\n315\n00:14:25.970 --> 00:14:28.990\nAnd that way headquarters knows,\nit adds it to its routing table and\n\n316\n00:14:28.990 --> 00:14:29.990\nto its database and\n\n317\n00:14:29.990 --> 00:14:34.470\nknows that this node is a stub and\nwill stop asking it questions, right?\n\n318\n00:14:34.470 --> 00:14:37.483\nSo now if I go back to headquarters,\nyou can see my debug here,\n\n319\n00:14:37.483 --> 00:14:41.340\nEIGRP: Adding stub (1 Peers, 1 Stubs).\n\n320\n00:14:41.340 --> 00:14:43.790\nOkay, so that means I've got\nan adjacency on this link,\n\n321\n00:14:43.790 --> 00:14:46.650\nmy neighbor and there it stops.\n\n322\n00:14:46.650 --> 00:14:50.080\nSo it's aware that I've received\nthat packet and it know, all right.\n\n323\n00:14:50.080 --> 00:14:53.460\nNow, where it gets really cool is,\nlet's repeat what I did a minute ago.\n\n324\n00:14:53.460 --> 00:14:58.370\nif I get into e0/1 and\nI shut that interface down,\n\n325\n00:14:58.370 --> 00:15:00.930\nI'm gonna send out a query all right?\n\n326\n00:15:00.930 --> 00:15:02.440\nAnd the queries gonna go to branch one.\n\n327\n00:15:02.440 --> 00:15:04.170\nIt's gonna go to branch two.\n\n328\n00:15:04.170 --> 00:15:06.650\nBut branch three is a stub.\n\n329\n00:15:06.650 --> 00:15:11.520\nAnd I received the query before,\nbut this time nothing.\n\n330\n00:15:11.520 --> 00:15:12.770\nMy debug's still on.\n\n331\n00:15:12.770 --> 00:15:14.050\nI'm not getting it right?\n\n332\n00:15:14.050 --> 00:15:15.400\nDon't bother this guy with queries.\n\n333\n00:15:15.400 --> 00:15:16.240\nHe doesn't know how to get there.\n\n334\n00:15:16.240 --> 00:15:18.070\nHe's a dead end all right?\n\n335\n00:15:18.070 --> 00:15:23.180\nSo when we configure somebody as a stub,\nit's kinda a two step process right?\n\n336\n00:15:23.180 --> 00:15:25.720\nSetting it as a stub right there,\nthat's the important part, but\n\n337\n00:15:25.720 --> 00:15:27.470\nthat doesn't optimize the routing table.\n\n338\n00:15:27.470 --> 00:15:30.740\nSo if we want to optimize the routing\ntable also, we have to do a summary route.\n\n339\n00:15:30.740 --> 00:15:35.530\nA summary route also on the hub and\na stub setting on the spoke,\n\n340\n00:15:35.530 --> 00:15:36.950\non the end of that point.\n\n341\n00:15:36.950 --> 00:15:43.070\nAnd those two things combined create a\nreally optimized branch or remote router.\n\n342\n00:15:43.070 --> 00:15:45.130\nNow where things get tricky is,\n\n343\n00:15:46.320 --> 00:15:50.670\nmaybe that branch router does have more\nthan one way in, and one way out right?\n\n344\n00:15:50.670 --> 00:15:52.780\nWell let's take a look\nat my topology again.\n\n345\n00:15:54.570 --> 00:15:55.070\nBranch one.\n\n346\n00:15:56.260 --> 00:16:00.612\nAs far as internal networks are concerned,\nbranch one sort of is a stub.\n\n347\n00:16:00.612 --> 00:16:02.852\nActually I got these two links here.\n\n348\n00:16:02.852 --> 00:16:04.384\nLet's just pretend we\ndon't have those right?\n\n349\n00:16:04.384 --> 00:16:06.207\nWe'll get rid of those.\n\n350\n00:16:06.207 --> 00:16:09.923\nSo looking at branch two and\nbranch three, they're true stubs.\n\n351\n00:16:09.923 --> 00:16:12.250\nI mean, there's only one way in and\none way out of those things.\n\n352\n00:16:12.250 --> 00:16:13.160\nThat's it.\n\n353\n00:16:13.160 --> 00:16:15.940\nBut branch one is not a true stub.\n\n354\n00:16:15.940 --> 00:16:21.570\nIt has one way in and one way out as far\nas my internal network is concerned, but\n\n355\n00:16:21.570 --> 00:16:26.030\nit does have another way out\nas far as default route,\n\n356\n00:16:26.030 --> 00:16:27.970\nas far as Internet traffic is concerned.\n\n357\n00:16:27.970 --> 00:16:32.218\nNow if a router on the inside loses\nits internal connection, like it loses\n\n358\n00:16:32.218 --> 00:16:37.970\nthe connection to 172.16.0, branch one's\nnot gonna have another way to get there.\n\n359\n00:16:37.970 --> 00:16:42.770\nIt only knows one way in and one way\nout as far as the LAN is concerned.\n\n360\n00:16:42.770 --> 00:16:45.200\nSo branch one,\nI wanna treat it like a stub.\n\n361\n00:16:45.200 --> 00:16:48.280\nDon't send it queries for\nthe internal network, it doesn't know.\n\n362\n00:16:48.280 --> 00:16:51.888\nBut it does know another\nway to get to the outside.\n\n363\n00:16:51.888 --> 00:16:55.410\nSo I want other people to know that,\nI wanna advertise that in.\n\n364\n00:16:55.410 --> 00:16:56.830\nWell, you can do that.\n\n365\n00:16:56.830 --> 00:17:02.720\nWhen you configure a stub,\nby default you will still advertise\n\n366\n00:17:02.720 --> 00:17:07.340\ndirectly connected networks as well as\nany summary networks that you know.\n\n367\n00:17:07.340 --> 00:17:09.510\nSo if you know any networks,\nyou're gonna advertise them out.\n\n368\n00:17:09.510 --> 00:17:13.040\nSo if I take branch one and\nflag it as a stub, this ISP,\n\n369\n00:17:13.040 --> 00:17:18.870\nthat's still gonna get advertised into the\nnetwork even though I'm flagged as a stub.\n\n370\n00:17:18.870 --> 00:17:21.300\nAnd let me just kind of show\nyou that on the router.\n\n371\n00:17:21.300 --> 00:17:26.750\nIf I take a look at branch one and\nI do a show ip interface brief,\n\n372\n00:17:26.750 --> 00:17:29.420\nI can see this public\nip right here on e0/2.\n\n373\n00:17:29.420 --> 00:17:31.485\nThat's my connection to my ISP.\n\n374\n00:17:31.485 --> 00:17:38.130\nAnd when I configured EIGRP,\nI did a network 0.0.0.\n\n375\n00:17:38.130 --> 00:17:42.633\nSo I'm advertising all of my networks\nwhich includes that ISP link.\n\n376\n00:17:42.633 --> 00:17:47.452\nWell, if I get into my config and\nI get in to EIGRP, and\n\n377\n00:17:47.452 --> 00:17:52.500\nI say eigrp stub, router one or\nbranch one is now a stub.\n\n378\n00:17:53.610 --> 00:17:55.390\nSo I'm a dead end.\n\n379\n00:17:56.490 --> 00:17:57.450\nBut not a true dead end.\n\n380\n00:17:57.450 --> 00:18:00.110\nI'm still gonna advertise\nthese other networks.\n\n381\n00:18:00.110 --> 00:18:05.740\nSo if I jump over to headquarters and\nI take a look at my routing table,\n\n382\n00:18:05.740 --> 00:18:09.152\nand I'll just filter that down to EIGRP.\n\n383\n00:18:09.152 --> 00:18:14.450\nI can look in here at the networks that\nI'm learning and right here I can see I'm\n\n384\n00:18:14.450 --> 00:18:19.697\nstill learning that connection\nto the 204.109.63.4 network.\n\n385\n00:18:19.697 --> 00:18:25.560\nAnd if I look at branch one, that's\nthe network that I was on, the .4 network.\n\n386\n00:18:25.560 --> 00:18:28.624\nThe usable IPs will be .5 and .6,\nso I can see that .6 right there.\n\n387\n00:18:28.624 --> 00:18:29.570\nSo that's the network I'm learning.\n\n388\n00:18:29.570 --> 00:18:31.380\nI still learn those networks.\n\n389\n00:18:31.380 --> 00:18:35.860\nSo when you're a stub, you still learn\nnetworks, which we can use a summary route\n\n390\n00:18:35.860 --> 00:18:39.630\nto control, but\nwe still advertise networks also.\n\n391\n00:18:39.630 --> 00:18:44.040\nAnd the default is that we advertise\nconnected and summary routes.\n\n392\n00:18:44.040 --> 00:18:45.360\nAnd so those are always gonna go, and\n\n393\n00:18:45.360 --> 00:18:48.550\nconnected, that's just any route that\nyou use the network command to add.\n\n394\n00:18:48.550 --> 00:18:52.420\nSo if I did network 0.0.0.0, it would\nbe all of the interfaces on my router,\n\n395\n00:18:52.420 --> 00:18:53.378\nwhich is what I did.\n\n396\n00:18:53.378 --> 00:18:57.318\nOr if I did network 192.168.0.0, that\nwould be the route that I advertise out,\n\n397\n00:18:57.318 --> 00:18:59.290\nso that would be my connected.\n\n398\n00:18:59.290 --> 00:19:02.980\nBut then any summary routes that\nI manually set on my interfaces,\n\n399\n00:19:02.980 --> 00:19:04.369\nthose would propagate out also.\n\n400\n00:19:06.050 --> 00:19:07.620\nBut you can manipulate that.\n\n401\n00:19:07.620 --> 00:19:10.670\nWhen I configured myself as a stub here,\nI just said eigrp stub.\n\n402\n00:19:11.870 --> 00:19:13.350\nThere's actually more to that command.\n\n403\n00:19:13.350 --> 00:19:17.250\nIf we look at how it went into config,\nif I take a look at\n\n404\n00:19:17.250 --> 00:19:23.540\nthe section for EIGRP,\nsee how it wrote it?\n\n405\n00:19:23.540 --> 00:19:25.930\nAll I typed was eigrp stub.\n\n406\n00:19:25.930 --> 00:19:30.040\nIt changed it into eigrp\nstub connected summary.\n\n407\n00:19:30.040 --> 00:19:32.040\nI said those were the default,\nconnected and summary.\n\n408\n00:19:32.040 --> 00:19:33.710\nWell, that's what it's doing.\n\n409\n00:19:33.710 --> 00:19:36.520\nYou can change that if you want and\nyou can add other things to it.\n\n410\n00:19:36.520 --> 00:19:39.200\nSo when you say eigrp stub,\n\n411\n00:19:39.200 --> 00:19:42.180\nif you do a question mark you'll see\nthe other things we can add to it.\n\n412\n00:19:44.210 --> 00:19:45.810\nLet's make that a little bigger.\n\n413\n00:19:45.810 --> 00:19:48.870\nI can add, well, connected,\nwe've seen that one.\n\n414\n00:19:48.870 --> 00:19:50.510\nSummary, we've seen that one.\n\n415\n00:19:50.510 --> 00:19:51.967\nRedistributed routes,\n\n416\n00:19:51.967 --> 00:19:56.417\nany routes that I've got on my system\nthat I've redistributed into EIGRP.\n\n417\n00:19:56.417 --> 00:19:59.410\nThat's really useful if I've\ngot a router that's dual-homed.\n\n418\n00:19:59.410 --> 00:20:02.250\nSo maybe it's connected to EIGRP\non my internal network, and\n\n419\n00:20:02.250 --> 00:20:06.520\nit's connected to OSPF to some kind\nof MPLS network, something like that.\n\n420\n00:20:06.520 --> 00:20:11.300\nI might be redistributing OSPF into EIGRP,\nand that might just be from me,\n\n421\n00:20:11.300 --> 00:20:13.460\nin which case I don't wanna advertise\nthat to the rest of the network.\n\n422\n00:20:14.760 --> 00:20:17.100\nOr I might want to advertise that\nto the rest of the network and\n\n423\n00:20:17.100 --> 00:20:17.810\nI'll send it along.\n\n424\n00:20:19.730 --> 00:20:21.320\nSame thing with static routes.\n\n425\n00:20:21.320 --> 00:20:23.670\nNow my static routes might\nbe redistributed, so\n\n426\n00:20:23.670 --> 00:20:25.800\nI could probably kill two birds\nwith one stone right there.\n\n427\n00:20:25.800 --> 00:20:28.430\nBut even if my static routes\naren't redistributed,\n\n428\n00:20:28.430 --> 00:20:29.570\nI can bring them in like this.\n\n429\n00:20:29.570 --> 00:20:31.940\nAnd we can do that with\nlike a default route.\n\n430\n00:20:31.940 --> 00:20:37.100\nSo if I came in here and\nsaid, what was my IP address?\n\n431\n00:20:37.100 --> 00:20:43.402\nSo if I added a route for a default,\nand I pointed that to my ISP.\n\n432\n00:20:47.651 --> 00:20:51.357\nWhich I'm guessing to be .5,\ngotta remember my subnetting.\n\n433\n00:20:51.357 --> 00:20:52.780\nAll right, so I've added a default route.\n\n434\n00:20:52.780 --> 00:20:55.848\nSo now I've got a static\nroute in my system, and\n\n435\n00:20:55.848 --> 00:20:59.690\nthat static route is gonna be\nmy gateway of last resort.\n\n436\n00:20:59.690 --> 00:21:01.320\nThat's what's being kind\nof tacked in there.\n\n437\n00:21:01.320 --> 00:21:06.095\nIf I wanna advertise that out throughout\nmy environment I can redistribute\n\n438\n00:21:06.095 --> 00:21:08.911\nthat into EIGRP, or\nI could say eigrp stub.\n\n439\n00:21:11.982 --> 00:21:19.700\nEigrp stub connected summary and\nthen static.\n\n440\n00:21:19.700 --> 00:21:24.610\nSo that I'm advertising my static routes\nout into some of the other systems.\n\n441\n00:21:24.610 --> 00:21:26.470\nYou'll see my network\nrelationship changing there.\n\n442\n00:21:26.470 --> 00:21:27.450\nSo now I'm advertising more.\n\n443\n00:21:27.450 --> 00:21:29.570\nSo you can kind of tailor that.\n\n444\n00:21:29.570 --> 00:21:32.200\nThere's four different\noptions that you can add.\n\n445\n00:21:34.190 --> 00:21:36.420\nSo we saw connected and summary,\n\n446\n00:21:36.420 --> 00:21:40.600\nwhich are the default, redistributing and\nstatic, which we can also add.\n\n447\n00:21:40.600 --> 00:21:44.280\nThere's a fifth one,\nwhich is receive only.\n\n448\n00:21:44.280 --> 00:21:45.490\nReceive only we don't do very often.\n\n449\n00:21:46.500 --> 00:21:49.580\nReceive only is where you have\none way in and one way out.\n\n450\n00:21:49.580 --> 00:21:51.490\nYou've got a single connection in and\n\n451\n00:21:51.490 --> 00:21:54.920\nno network behind you, and\nthat's a pretty rare environment.\n\n452\n00:21:54.920 --> 00:21:57.800\nSo what you're saying is,\nI don't want to advertise anything out.\n\n453\n00:21:57.800 --> 00:22:00.670\nI just want to receive routes\nfrom another location.\n\n454\n00:22:00.670 --> 00:22:02.350\nNow that doesn't make a lot of sense.\n\n455\n00:22:02.350 --> 00:22:03.680\nWhen will we have that?\n\n456\n00:22:03.680 --> 00:22:07.890\nWell, one scenario where we\nmight wanna be receive only is,\n\n457\n00:22:07.890 --> 00:22:09.770\nlet me jump back to my topology.\n\n458\n00:22:09.770 --> 00:22:11.440\nLet's say, for example,\n\n459\n00:22:11.440 --> 00:22:15.320\nthat on branch three I've got this network\nhere that's connected to headquarters.\n\n460\n00:22:15.320 --> 00:22:17.430\nSo headquarters knows about\nthe frame relay network already.\n\n461\n00:22:17.430 --> 00:22:18.640\nI don't have to teach it that.\n\n462\n00:22:18.640 --> 00:22:19.830\nIt knows how to get to me and get back.\n\n463\n00:22:20.960 --> 00:22:23.160\nAnd I've got a network back here.\n\n464\n00:22:23.160 --> 00:22:26.120\nMaybe this is some business\nthat we acquired, and\n\n465\n00:22:26.120 --> 00:22:30.705\nthey're overlapping with a subnet that\nI'm already using somewhere else.\n\n466\n00:22:30.705 --> 00:22:37.905\nWe'll play pretend, so\nmaybe I've got 192.168.0.0 over here.\n\n467\n00:22:37.905 --> 00:22:40.440\nAnd boy,\nthat is kind of on the microscopic side.\n\n468\n00:22:40.440 --> 00:22:41.913\nLet's see if we can't make\nthat a little bigger.\n\n469\n00:22:44.570 --> 00:22:46.480\nHere, let's just zoom in a bit.\n\n470\n00:22:46.480 --> 00:22:48.410\nThere we go, now we can actually read it.\n\n471\n00:22:48.410 --> 00:22:50.840\nSo let's say I've got\n192.168.0.0 over here, and\n\n472\n00:22:50.840 --> 00:22:55.080\nthen I acquire another,\nlet's say these are hotel chains.\n\n473\n00:22:55.080 --> 00:23:00.400\nSo I acquire another hotel and\nI connect it to my network,\n\n474\n00:23:00.400 --> 00:23:03.280\nand they've got 192.168.0.0/24 also.\n\n475\n00:23:03.280 --> 00:23:04.490\nAnd I'm in a hurry.\n\n476\n00:23:04.490 --> 00:23:06.900\nI don't want to go and\nrenumber their network, but\n\n477\n00:23:06.900 --> 00:23:09.810\nI want them to be able to know\nabout the networks on my side.\n\n478\n00:23:09.810 --> 00:23:11.990\nI just don't want them\nadvertising that into my network,\n\n479\n00:23:11.990 --> 00:23:15.130\nbecause then my network is\ngonna think that it has\n\n480\n00:23:15.130 --> 00:23:18.340\ntwo routes to get to that network when in\nreality they're two separate networks.\n\n481\n00:23:18.340 --> 00:23:21.210\nSo I might set this branch\nto be receive only.\n\n482\n00:23:21.210 --> 00:23:23.960\nIt can receive my routes, and\n\n483\n00:23:23.960 --> 00:23:26.740\nI might use a route map there to filter\nout this network so they don't get it.\n\n484\n00:23:26.740 --> 00:23:29.010\nIn the end it's not gonna matter cuz\nit'll always pick its local routes, so\n\n485\n00:23:29.010 --> 00:23:30.510\nI can probably leave that alone.\n\n486\n00:23:30.510 --> 00:23:35.340\nBut on the branch, I set it to receive\nonly, and now I won't learn this network.\n\n487\n00:23:35.340 --> 00:23:38.820\nBut that means I won't be able\nto get to this network either.\n\n488\n00:23:38.820 --> 00:23:41.760\nWell, we could use NAT,\nnetwork address translation.\n\n489\n00:23:41.760 --> 00:23:47.180\nIf you're NATting these IPs to\nthe frame relay IP on the way in,\n\n490\n00:23:47.180 --> 00:23:47.960\nI know that network.\n\n491\n00:23:47.960 --> 00:23:51.260\nI can get to that network and\nNAT can take care of that for me.\n\n492\n00:23:51.260 --> 00:23:54.290\nAnd so now I could have a duplicate\nsubnet behind the scenes.\n\n493\n00:23:54.290 --> 00:23:54.939\nIt's not ideal.\n\n494\n00:23:54.939 --> 00:23:58.073\nThis would be a temporary thing until\nwe could go and renumber that network.\n\n495\n00:23:58.073 --> 00:24:01.161\nBut for short term you could\nget that fired up real quick.\n\n496\n00:24:01.161 --> 00:24:05.073\nKey thing to take away here Is\nif we configure receive only,\n\n497\n00:24:05.073 --> 00:24:07.278\nit's the only option you can do.\n\n498\n00:24:07.278 --> 00:24:08.870\nYou can't mix and match.\n\n499\n00:24:08.870 --> 00:24:12.060\nLike if I go to branch two and\nI go into router EIGRP 1.\n\n500\n00:24:12.060 --> 00:24:15.600\nAnd then I configure it as a stub.\n\n501\n00:24:15.600 --> 00:24:17.850\nAnd then I say receive only.\n\n502\n00:24:17.850 --> 00:24:18.610\nAll right.\n\n503\n00:24:18.610 --> 00:24:25.240\nWhat's going to happen is my routing\ntable will still be pulling EIGRP routes.\n\n504\n00:24:25.240 --> 00:24:27.840\nI just have to wait for\nthe adjacency to rebuild, there we go.\n\n505\n00:24:27.840 --> 00:24:29.790\nAnd I'm still pulling all of those.\n\n506\n00:24:29.790 --> 00:24:33.410\nBut Router 2 here, Branch 2,\nis no longer advertising its routes.\n\n507\n00:24:33.410 --> 00:24:38.480\nSo if I look,\nit's connected to this 172.16.4 network.\n\n508\n00:24:38.480 --> 00:24:42.570\nAnd if I go to headquarters it no\nlonger knows about that route.\n\n509\n00:24:42.570 --> 00:24:44.970\nSo if I look in here 172.16.4,\nno longer on my list, right?\n\n510\n00:24:44.970 --> 00:24:48.180\nSo we can't mix and match that one.\n\n511\n00:24:48.180 --> 00:24:52.770\nYou can mix and match the other four, but\nreceive only has to be used by itself.\n\n512\n00:24:54.512 --> 00:24:56.810\nAll right, but once that's done,\nwe're kinda in business.\n\n513\n00:24:56.810 --> 00:24:59.770\nThere is one other thing worth mentioning.\n\n514\n00:24:59.770 --> 00:25:03.210\nLet's say that I wasn't so concerned\nabout shrinking my routing table and\n\n515\n00:25:03.210 --> 00:25:05.640\nall that, but\nI was concerned about something different.\n\n516\n00:25:06.720 --> 00:25:10.130\nRemember when I originally\npulled my topology up,\n\n517\n00:25:10.130 --> 00:25:12.320\nI'm gonna get motion sickness now,\n\n518\n00:25:12.320 --> 00:25:16.860\nwhen I originally pulled this topology up\nI had some extra links on here, right?\n\n519\n00:25:16.860 --> 00:25:21.410\nI had a link that went between\nHeadquarters and Branch 1.\n\n520\n00:25:21.410 --> 00:25:22.440\nOkay?\n\n521\n00:25:22.440 --> 00:25:25.730\nAnd that link was there to\nserve a purpose, right?\n\n522\n00:25:25.730 --> 00:25:28.980\nIt was kind of served as a backup or\nsomething like that.\n\n523\n00:25:28.980 --> 00:25:31.100\nAnd sometimes I really, really want that.\n\n524\n00:25:31.100 --> 00:25:32.999\nI really want that backup\nlink between the system.\n\n525\n00:25:34.220 --> 00:25:35.950\nSometimes I don't, though.\n\n526\n00:25:35.950 --> 00:25:39.900\nFor example, let's say that headquarters'\nlink to the frame relay dies.\n\n527\n00:25:39.900 --> 00:25:43.460\nSo for some reason, something happens,\nand this link just dies.\n\n528\n00:25:43.460 --> 00:25:44.310\nOkay?\n\n529\n00:25:44.310 --> 00:25:48.150\nWhat's going to happen is Branch 2 and\nBranch 3, they're going to learn, hey,\n\n530\n00:25:48.150 --> 00:25:51.220\nwe can get to headquarters if\nwe just go through Branch 1.\n\n531\n00:25:51.220 --> 00:25:53.830\nBranch 1 becomes what's\ncalled a transit network.\n\n532\n00:25:55.270 --> 00:25:56.640\nI may not want that.\n\n533\n00:25:56.640 --> 00:25:58.760\nI may not want Branch 1\nto be a transit network.\n\n534\n00:25:58.760 --> 00:26:03.760\nThis link might be here specifically for\nBranch 1, or for some other purpose,\n\n535\n00:26:03.760 --> 00:26:07.600\nand I don't want anybody else\nusing it to transit the system.\n\n536\n00:26:07.600 --> 00:26:08.330\nAll right?\n\n537\n00:26:08.330 --> 00:26:12.670\nSo, in that scenario,\nwhat I can do is I can say,\n\n538\n00:26:12.670 --> 00:26:15.130\nI'm not gonna do summary routes or\nanything crazy like that.\n\n539\n00:26:15.130 --> 00:26:16.430\nI'm just gonna flag Branch 1 as a stub.\n\n540\n00:26:16.430 --> 00:26:19.710\nAnd when you flag Branch 1 as a stub,\n\n541\n00:26:19.710 --> 00:26:24.820\nnot only does it stop getting queries,\nit also stops being a transit network.\n\n542\n00:26:24.820 --> 00:26:28.430\nSince people can't query it,\nthey can't find the alternate path and\n\n543\n00:26:28.430 --> 00:26:30.980\nthey won't use it as a transit.\n\n544\n00:26:30.980 --> 00:26:35.800\nSo now if this link goes down\n[INAUDIBLE] reverse right?\n\n545\n00:26:35.800 --> 00:26:38.470\nIf headquarters loses its link to\nthe [INAUDIBLE] relay, headquarters\n\n546\n00:26:38.470 --> 00:26:41.940\ndoesn't try to send traffic to Branch\n1 over to all the other branches.\n\n547\n00:26:41.940 --> 00:26:44.890\nWe're not going to route all of our\nheadquarters traffic through Branch 1.\n\n548\n00:26:44.890 --> 00:26:49.880\nInstead headquarters says, Branch 1 is\na stub, all right well then I can go there\n\n549\n00:26:49.880 --> 00:26:52.800\nto get to this network, but I'm not going\nto go to it to get to these other guys.\n\n550\n00:26:52.800 --> 00:26:54.390\nThat's it, I just lost my connection.\n\n551\n00:26:54.390 --> 00:26:58.870\nSo we can use stubs to kinda influence the\ndirection of traffic on the network, so\n\n552\n00:26:58.870 --> 00:27:01.360\nthat's kind of a third\nlittle purpose there.\n\n553\n00:27:01.360 --> 00:27:07.740\nSo it's kinda a neat technology, and it's\nthe answer that we have to OSPF's areas.\n\n554\n00:27:07.740 --> 00:27:09.380\nYou have areas in OSPF.\n\n555\n00:27:09.380 --> 00:27:10.999\nIn EIGRP, you have stubs.\n\n556\n00:27:12.090 --> 00:27:12.640\nAll right, Don.\n\n557\n00:27:12.640 --> 00:27:14.080\nIs there anything else\nwe need to add to this.\n\n558\n00:27:14.080 --> 00:27:14.739\nIt sounds like a great\n\n559\n00:27:14.739 --> 00:27:16.985\nsummary of everything that we've\nactually looked over for [CROSSTALK].\n\n560\n00:27:16.985 --> 00:27:19.740\n>> I think I've probably hit on,\nlet me scan the notes.\n\n561\n00:27:19.740 --> 00:27:20.880\nIt looks like I got it.\n\n562\n00:27:20.880 --> 00:27:23.660\nI wanted to be kind of\nthorough on this because stubs\n\n563\n00:27:23.660 --> 00:27:26.310\nare not something people\nwork with every day.\n\n564\n00:27:26.310 --> 00:27:29.540\nOdds are some of you out there have\nnever used them in production or\n\n565\n00:27:29.540 --> 00:27:31.050\nnever really used them in a lab.\n\n566\n00:27:31.050 --> 00:27:33.760\nSo it's a good idea to have that\nunderstanding and kinda know what they do.\n\n567\n00:27:33.760 --> 00:27:35.570\n>> All right, so\n\n568\n00:27:35.570 --> 00:27:40.380\nin this episode we took a look at making\nsure that we could configure EIGRP stubs,\n\n569\n00:27:40.380 --> 00:27:44.840\nwe did it for the purpose of efficiency\nas well as a nice performance too.\n\n570\n00:27:44.840 --> 00:27:47.970\nWe also took a look at some of\nthe different types of stubs that we can\n\n571\n00:27:47.970 --> 00:27:49.730\nalso set as well.\n\n572\n00:27:49.730 --> 00:27:53.690\nAnd that will help us to make everything\nmuch more efficient, allow us o actually\n\n573\n00:27:53.690 --> 00:27:58.450\nbe able to configure them and hopefully\nthis is been a great episode for you too.\n\n574\n00:27:58.450 --> 00:28:02.070\nSo signing off for\nITProTV, I'm Ronnie Wong.\n\n575\n00:28:02.070 --> 00:28:04.144\n>> And I'm Don Pezet.\n\n576\n00:28:04.144 --> 00:28:06.285\n>> We'll see you next time.\n\n577\n00:28:06.285 --> 00:28:06.910\n[SOUND]\n\n",
          "vimeoId": "137401122"
        },
        {
          "description": "If a routing protocol finds more than one way to get to the same destination then load balancing could be an option, where computing resources are balanced between multiple paths to get to the same destination. Viewers will hear about load balancing especially with EIGRP, key metrics EIGRP looks at by default, and making sure it does equal cost load balancing.",
          "length": "1806",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/ccnproute/cisco-ccnproute300101-3-21-eigrp_load_balancing-082615-1.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/ccnproute/cisco-ccnproute300101-3-21-eigrp_load_balancing-082615-1-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/ccnproute/cisco-ccnproute300101-3-21-eigrp_load_balancing-082615-1-sm.jpg",
          "title": "EIGRP Load Balancing",
          "transcript": "WEBVTT\n\n1\n00:00:00.000 --> 00:00:10.576\n[MUSIC]\n\n2\n00:00:10.576 --> 00:00:13.930\nWelcome to another great\nepisode here on ITProTV.\n\n3\n00:00:13.930 --> 00:00:16.520\nToday we're diving into CCNP ROUTE.\n\n4\n00:00:16.520 --> 00:00:17.780\nI'm your host Ronnie Wong.\n\n5\n00:00:17.780 --> 00:00:19.950\nAnd here with me, Mr. Don Pezet.\n\n6\n00:00:19.950 --> 00:00:20.840\nHow's it going, Don?\n\n7\n00:00:20.840 --> 00:00:22.090\n>> It is going great, Ronnie.\n\n8\n00:00:22.090 --> 00:00:23.900\nExciting to be back for\nanother Cisco show.\n\n9\n00:00:23.900 --> 00:00:27.680\nAnd today we're gonna be diving once\nagain, back in the world of EIGRPS,\n\n10\n00:00:27.680 --> 00:00:31.930\nwe take a look at load\nbalancing inside of the EIGRP.\n\n11\n00:00:31.930 --> 00:00:35.320\nNow, the nice thing about running\na dynamic routing protocol, is that\n\n12\n00:00:35.320 --> 00:00:39.170\noften times it'll discover more than\none way to get to the same destination.\n\n13\n00:00:39.170 --> 00:00:40.620\nAnd that's cool,\nbecause if one link fails,\n\n14\n00:00:40.620 --> 00:00:43.090\nthat means it's already got\nanother way to get there, and\n\n15\n00:00:43.090 --> 00:00:46.670\nour end users might not even notice\nthat there was a problem at all.\n\n16\n00:00:46.670 --> 00:00:49.070\nBut there's another cool thing, which is,\n\n17\n00:00:49.070 --> 00:00:52.520\nif a dynamic routing protocol finds\nmore than one way to get to a path,\n\n18\n00:00:52.520 --> 00:00:58.230\nthere's certain scenarios where it might\ndo load balancing, and that's really neat.\n\n19\n00:00:58.230 --> 00:01:01.186\nBecause if I have,\nlet's say I have two T-1 lines.\n\n20\n00:01:01.186 --> 00:01:04.920\nT-1, here in the United States,\nis 1.544 megabits per second.\n\n21\n00:01:04.920 --> 00:01:09.320\nSo if I have a 1.54 megabit T-1 line,\nand I have a second 1.5 metre T line,\n\n22\n00:01:09.320 --> 00:01:13.950\nT 1 line, I don't want to just pick one\nof them and use it until it fails and\n\n23\n00:01:13.950 --> 00:01:14.730\nit goes to the other right?\n\n24\n00:01:14.730 --> 00:01:16.630\nBecause then I have one\nsitting there doing nothing.\n\n25\n00:01:16.630 --> 00:01:19.280\nWouldn't it be nice if I\ncould balance across them and\n\n26\n00:01:19.280 --> 00:01:21.360\neffectively get three\nmegabyte of bandwidth.\n\n27\n00:01:21.360 --> 00:01:22.940\nThat would be pretty sweet.\n\n28\n00:01:22.940 --> 00:01:25.550\nWell, I say sweet five or\n\n29\n00:01:25.550 --> 00:01:28.283\nten years ago, now I want 100 megabyte or\na gigabyte of bandwidth.\n\n30\n00:01:28.283 --> 00:01:31.910\n>> [LAUGH]\n>> But, if we can find more than one path,\n\n31\n00:01:31.910 --> 00:01:33.570\nwe can potentially load balance.\n\n32\n00:01:33.570 --> 00:01:38.270\nNow, all the dynamic routing protocols\non CISCO routers, RIB, OSPF, EIGRP,\n\n33\n00:01:38.270 --> 00:01:42.900\nthey all do what are called\nequal cost load balancing.\n\n34\n00:01:42.900 --> 00:01:45.450\nAnd that means,\nif they can find more than one path, and\n\n35\n00:01:45.450 --> 00:01:48.860\nthe cost is the same,\nit'll load balance on it.\n\n36\n00:01:48.860 --> 00:01:51.270\nAnd there's not a single thing\nyou have to do to configure that.\n\n37\n00:01:51.270 --> 00:01:53.110\nThat just happens on its own.\n\n38\n00:01:53.110 --> 00:01:54.610\nIt's part of the normal protocol.\n\n39\n00:01:54.610 --> 00:01:57.000\nI'll show you here in my topology.\n\n40\n00:01:57.000 --> 00:01:58.790\nSo this is my topology that I've got.\n\n41\n00:01:58.790 --> 00:02:01.560\nI've got a headquarters router\nthat's connected via frame relay to\n\n42\n00:02:01.560 --> 00:02:03.130\na couple of branches.\n\n43\n00:02:03.130 --> 00:02:08.230\nBranch one actually has two backup serial\nlines that run directly to headquarters.\n\n44\n00:02:08.230 --> 00:02:11.780\nSo when we look at a network\nlike branch one here.\n\n45\n00:02:11.780 --> 00:02:16.130\nIf branch one is gonna go to branch two,\nit could go to the frame relay cloud and\n\n46\n00:02:16.130 --> 00:02:17.850\nover to branch two.\n\n47\n00:02:17.850 --> 00:02:22.100\nOr it could go up to headquarters\nacross the frame relay cloud to branch\n\n48\n00:02:22.100 --> 00:02:23.050\ntwo, right?\n\n49\n00:02:23.050 --> 00:02:24.180\nTwo different paths and really,\n\n50\n00:02:24.180 --> 00:02:25.930\nthree different paths if\nyou count this other line.\n\n51\n00:02:25.930 --> 00:02:28.390\nThree different ways to get across.\n\n52\n00:02:28.390 --> 00:02:31.410\nWell if they all have an equal cost,\n\n53\n00:02:31.410 --> 00:02:36.320\nif their metric is identical,\nthen we'll load balance across all three.\n\n54\n00:02:36.320 --> 00:02:38.280\nNow when I say load balance,\nbe careful with this.\n\n55\n00:02:38.280 --> 00:02:41.800\nI've heard a lot of people say\nlike EIGRP does load balancing.\n\n56\n00:02:41.800 --> 00:02:43.590\nWell actually it doesn't.\n\n57\n00:02:43.590 --> 00:02:48.180\nAll EIGRP does, is it determines what\nroute makes it into the routing table and\n\n58\n00:02:48.180 --> 00:02:50.470\nwhat route doesn't make it\ninto the routing table.\n\n59\n00:02:50.470 --> 00:02:54.410\nAnd so when we have two or three paths\nthat are the same It just says, hey,\n\n60\n00:02:54.410 --> 00:02:56.950\nthey're the same, I'm gonna put\nthem all in the routing table.\n\n61\n00:02:56.950 --> 00:02:59.740\nAnd it's up to your router\nto do the load balancing.\n\n62\n00:02:59.740 --> 00:03:02.980\nAnd on almost Cisco router today,\nthey run CEF,\n\n63\n00:03:02.980 --> 00:03:07.130\nwhich is Cisco express forwarding, and\nit's CEF that does the load balancing.\n\n64\n00:03:07.130 --> 00:03:11.240\nSo it's not EIGRP that does it,\nit's just EIGRP that makes it possible.\n\n65\n00:03:11.240 --> 00:03:14.750\nAnd then software or hardware kicks\nin to do the true load balancing.\n\n66\n00:03:14.750 --> 00:03:17.610\nSo in my scenario,\nI may well already have that.\n\n67\n00:03:17.610 --> 00:03:21.530\nActually, I don't remember what bandwidth\nI've got assigned to these lines, but\n\n68\n00:03:21.530 --> 00:03:26.519\nremember, what are the key metrics\nthat theEIGRP looks at by default?\n\n69\n00:03:26.519 --> 00:03:31.990\n>> Bandwidth, delay, and\nreliability load, and MTU.\n\n70\n00:03:31.990 --> 00:03:34.600\n>> But even there,\nmost of those are ignored, right?\n\n71\n00:03:34.600 --> 00:03:36.430\nSo it's really just bandwidth and delay.\n\n72\n00:03:36.430 --> 00:03:38.200\nThose are the two that it's looking at.\n\n73\n00:03:38.200 --> 00:03:41.010\nAnd if the bandwidth and\ndelay are the same for\n\n74\n00:03:41.010 --> 00:03:44.020\nthese three lines,\nI might be load balancing already.\n\n75\n00:03:44.020 --> 00:03:46.990\nIf the bandwidth and delay are different,\nthen it's a different story, right.\n\n76\n00:03:46.990 --> 00:03:49.870\nThen I might be relying on just one and\nnot the others.\n\n77\n00:03:49.870 --> 00:03:52.020\nSo let's just take a look\nat my environment and see.\n\n78\n00:03:52.020 --> 00:03:54.362\nI'm going to jump over to branch one.\n\n79\n00:03:54.362 --> 00:03:55.380\nI'll try to jump to branch one.\n\n80\n00:03:55.380 --> 00:03:56.370\nThere we go.\nAnd I'm just\n\n81\n00:03:56.370 --> 00:04:00.970\ngoing to take a look at some of my\ninterfaces and kind of see what's what.\n\n82\n00:04:00.970 --> 00:04:05.480\nSo my frame relay link between me and\nthe home office is this guy right here.\n\n83\n00:04:05.480 --> 00:04:09.670\nSo I've got interface serial 1/0.1,\nit is a sub interface.\n\n84\n00:04:09.670 --> 00:04:13.620\nBut I haven't assigned any kind of\nsettings on this interface to dictate what\n\n85\n00:04:13.620 --> 00:04:15.090\nit's bandwidth is.\n\n86\n00:04:15.090 --> 00:04:19.220\nSo it's running at it's default and most\nCisco routers default to either 10 megabit\n\n87\n00:04:19.220 --> 00:04:23.040\nor 1.544, like a T1,\nwe'll have to see which one this one does.\n\n88\n00:04:23.040 --> 00:04:26.740\nAnd then here's my two backup links to the\nhome office, these other serial links, and\n\n89\n00:04:26.740 --> 00:04:30.510\nthey also don't have any kind of\nbandwidth configuration on them.\n\n90\n00:04:30.510 --> 00:04:32.970\nSo, more than likely,\nthese three are all equal, and\n\n91\n00:04:32.970 --> 00:04:35.930\nI can found that out with\na little show interface.\n\n92\n00:04:35.930 --> 00:04:38.969\nIf I take a look at show\ninterface Serial 1/0,\n\n93\n00:04:38.969 --> 00:04:42.820\nI can find the bandwidth right there,\nand my bandwidth is 1544.\n\n94\n00:04:44.020 --> 00:04:47.770\nAnd if I take a look at, oh, and\nmy delay right there, right.\n\n95\n00:04:47.770 --> 00:04:50.480\nA 20,000 micro seconds is that what is.\n\n96\n00:04:50.480 --> 00:04:53.060\nSo, that's the delay that's on that line.\n\n97\n00:04:53.060 --> 00:04:57.830\nIf I take a look at serial 1/1,\nsame bandwidth, same delay.\n\n98\n00:04:57.830 --> 00:05:02.690\nAnd if I take a look at 1/2,\nsame bandwidth, same delay.\n\n99\n00:05:02.690 --> 00:05:07.600\nSo on my side, going back to the topology,\nthis link, this link and\n\n100\n00:05:07.600 --> 00:05:10.060\nthis link,\nall have the same bandwidth and delay.\n\n101\n00:05:11.380 --> 00:05:14.410\nBut be careful about where your\nbandwidth delay comes from.\n\n102\n00:05:14.410 --> 00:05:21.850\nWhen EIGRP makes a decision, bandwidth is\nconsidered the slowest link on a path.\n\n103\n00:05:21.850 --> 00:05:26.680\nSo if I'm talking about branch\none trying to get to branch two,\n\n104\n00:05:26.680 --> 00:05:30.660\nso I'm at 172.16.2.0, and\nI wanna get to 172.16.4.0.\n\n105\n00:05:30.660 --> 00:05:32.580\nAnd I've got three paths.\n\n106\n00:05:32.580 --> 00:05:36.170\nI could cross this line,\nwhich actually goes to home office and\n\n107\n00:05:36.170 --> 00:05:37.860\nthen back, it's point to point.\n\n108\n00:05:37.860 --> 00:05:40.190\nOr I could cross this line that\ngoes to the home office and\n\n109\n00:05:40.190 --> 00:05:41.200\nacross frame related there.\n\n110\n00:05:41.200 --> 00:05:44.150\nOr I could go across this other line and\nacross three paths.\n\n111\n00:05:44.150 --> 00:05:47.150\nWell, I just looked at my bandwidth.\n\n112\n00:05:47.150 --> 00:05:50.380\nI don't know headquarters bandwidth and\nI don't know branch two's bandwidth.\n\n113\n00:05:50.380 --> 00:05:52.510\nIt's the lowest bandwidth in the line.\n\n114\n00:05:52.510 --> 00:05:54.580\nWell I'm not so\nworried about branch two's,\n\n115\n00:05:54.580 --> 00:05:57.680\nbecause I'm always gonna go through branch\ntwo it doesn't matter which branch I take.\n\n116\n00:05:57.680 --> 00:06:01.890\nBut whether I use my line or\nheadquarters line is a different story.\n\n117\n00:06:02.990 --> 00:06:04.790\nThat's gonna influence things.\n\n118\n00:06:04.790 --> 00:06:08.000\nAnd so if I take a look at headquarters,\nlet's go see what they've go.\n\n119\n00:06:08.000 --> 00:06:15.440\nIf I look at my headquarters and\nI do serial 1/0, it's set the same way.\n\n120\n00:06:15.440 --> 00:06:18.270\nSame bandwidth same delay, so in theory,\n\n121\n00:06:18.270 --> 00:06:21.829\nthese three paths should all be identical\nand I should be doing low downs.\n\n122\n00:06:22.990 --> 00:06:25.840\nAnother way I can see this is,\nif you turn on the EIGRP,\n\n123\n00:06:25.840 --> 00:06:28.790\nyou can look at your EIGRP topology.\n\n124\n00:06:28.790 --> 00:06:32.380\nIf you just look at your routing table, if\nI do a show IP route, I'll see my routes,\n\n125\n00:06:32.380 --> 00:06:35.420\nand I'll see their metric, and if it's\nan equal metric, I'll see it there.\n\n126\n00:06:35.420 --> 00:06:39.860\nIf it's an unequal metric though,\nI'll only see the successor route.\n\n127\n00:06:39.860 --> 00:06:41.380\nI don't see the feasible successors.\n\n128\n00:06:41.380 --> 00:06:42.830\nI don't see the guys who lost.\n\n129\n00:06:42.830 --> 00:06:44.140\nThe second placers.\n\n130\n00:06:44.140 --> 00:06:51.570\nIf I wanna see the second placers,\nI need to do a show IP EIRGP topology.\n\n131\n00:06:51.570 --> 00:06:52.975\nThis is not my day for typing.\n\n132\n00:06:52.975 --> 00:06:53.480\n>> [LAUGH]\n>> There we go.\n\n133\n00:06:53.480 --> 00:06:56.580\nAnd when you look at your EIGRP topology,\n\n134\n00:06:56.580 --> 00:07:01.200\nyou can see the successor as well as\nany feasible successors, any backups.\n\n135\n00:07:02.720 --> 00:07:07.232\nAnd when I look for that 172.16.4,\nwhich is tucked away,\n\n136\n00:07:07.232 --> 00:07:11.900\nlet's see there's 172.16.6, did I miss it?\n\n137\n00:07:11.900 --> 00:07:15.575\nI must have missed it.\n\n138\n00:07:15.575 --> 00:07:18.920\n172.16.2 is it,\ndo I have my numbers wrong?\n\n139\n00:07:18.920 --> 00:07:22.090\nIt's not four,\nwhat have I done to that other router?\n\n140\n00:07:22.090 --> 00:07:24.890\nSo apparently I've broken router two,\nwell [INAUDIBLE] Oh.\n\n141\n00:07:24.890 --> 00:07:28.610\n[LAUGH] If you're watching\nour episodes in order,\n\n142\n00:07:28.610 --> 00:07:34.240\nyou might remember that I set up branch\ntwo as a stub that's doing receive only.\n\n143\n00:07:34.240 --> 00:07:38.580\nAnd so I've got some weird stuff going\non on branch two, is what my problem is.\n\n144\n00:07:38.580 --> 00:07:43.300\nSo what I can do here, just to really\nquickly fix that, is just kill EIGRP on\n\n145\n00:07:43.300 --> 00:07:48.450\nit, and then reconfigure it\nwith a nice big fat network and\n\n146\n00:07:48.450 --> 00:07:52.100\nno auto summary and\nthat should take care of that.\n\n147\n00:07:52.100 --> 00:07:54.920\nAnd I should learn those routes,\nthat should just take a second.\n\n148\n00:07:54.920 --> 00:07:55.862\nThere we go, all right.\n\n149\n00:07:55.862 --> 00:07:58.382\nSo now if I go back in\nto look at my topology,\n\n150\n00:07:58.382 --> 00:08:03.494\nI should be able to spot that 172.16.4\nnetwork this time around, there it is.\n\n151\n00:08:03.494 --> 00:08:05.181\nAnd I can see all\nthe routes that go to it.\n\n152\n00:08:05.181 --> 00:08:08.880\nNow I'm gonna see all the routes\nwhether they're equal or not, okay?\n\n153\n00:08:08.880 --> 00:08:12.943\nI'm gonna see the successor,\nthat's the person with the lowest metric.\n\n154\n00:08:12.943 --> 00:08:14.813\nAnd then I'm gonna see\nthe feasible successors,\n\n155\n00:08:14.813 --> 00:08:17.010\nwhich are anybody with a higher metric,\nright?\n\n156\n00:08:17.010 --> 00:08:20.540\nBut when I look at mine,\nall three of them have the same metric.\n\n157\n00:08:20.540 --> 00:08:22.050\nNow there's two metrics listed here,\nright?\n\n158\n00:08:22.050 --> 00:08:24.510\nThere's the advertised distance,\n\n159\n00:08:24.510 --> 00:08:29.060\nwhich is what other people are telling me\nand then there's my feasible distance, and\n\n160\n00:08:29.060 --> 00:08:31.360\nso that's why I'm seeing these two values,\nright?\n\n161\n00:08:31.360 --> 00:08:34.260\nOne is what the other people are telling\nme, the other one is where I've\n\n162\n00:08:34.260 --> 00:08:37.540\nadded my own bandwidth and\nmy own delay to it so it's more accurate.\n\n163\n00:08:37.540 --> 00:08:40.383\nThe number on the left, is the one\nthat's the more accurate number.\n\n164\n00:08:40.383 --> 00:08:42.610\nThe one on the right is\nwhat I'm being told.\n\n165\n00:08:42.610 --> 00:08:44.050\nSo when I look at this,\n\n166\n00:08:44.050 --> 00:08:47.860\nwhat I've calculated is identical\nacross all three of these, right?\n\n167\n00:08:47.860 --> 00:08:51.610\nSince it's identical,\nthey're all three successors.\n\n168\n00:08:51.610 --> 00:08:55.500\nThat means all three of them are going in\nmy routing table and if I do a show ip\n\n169\n00:08:55.500 --> 00:08:59.890\nroute, I can look in here and sure enough\nlook at all these redundant routes.\n\n170\n00:08:59.890 --> 00:09:02.757\nSo I've got, whoops [LAUGH],\nthis section right here,\n\n171\n00:09:02.757 --> 00:09:05.480\nthree different ways to\nget to that network.\n\n172\n00:09:05.480 --> 00:09:09.348\nThis is equal cost load-balancing, and I\ndidn't have to configure anything for it.\n\n173\n00:09:09.348 --> 00:09:12.680\nYou just turn on the IGRP,\nand there it is, right?\n\n174\n00:09:12.680 --> 00:09:14.010\nSo, no big deal there.\n\n175\n00:09:14.010 --> 00:09:15.625\nIt's just up and running.\n\n176\n00:09:15.625 --> 00:09:19.690\nWhere it gets a little trickier, is when\nyou're dealing with different bandwidths,\n\n177\n00:09:19.690 --> 00:09:21.610\nwhen things are different.\n\n178\n00:09:21.610 --> 00:09:26.590\nFor example, looking at my topology,\nmy connection to the frame relay\n\n179\n00:09:26.590 --> 00:09:30.320\nis the same bandwidth as headquarters'\nconnection to the frame relay, right?\n\n180\n00:09:30.320 --> 00:09:32.720\nWhat if headquarters had\na better connection though?\n\n181\n00:09:32.720 --> 00:09:34.170\nWhat if theirs was faster?\n\n182\n00:09:34.170 --> 00:09:36.460\nWhat if my link to\nheadquarters was faster?\n\n183\n00:09:36.460 --> 00:09:38.040\nOr what if it wasn't my\nlink to headquarters,\n\n184\n00:09:38.040 --> 00:09:41.185\nwhat if it was just this over here, my\nlink to the frame relay was better, right?\n\n185\n00:09:41.185 --> 00:09:44.030\nCuz remember it's\nthe slowest link on a line.\n\n186\n00:09:44.030 --> 00:09:48.630\nSo if headquarters has ten megabits,\nthat's great, I still have 1.5 megabit to\n\n187\n00:09:48.630 --> 00:09:52.650\nget to them and that's the number that's\ngonna be used, not the ten megabit, right?\n\n188\n00:09:52.650 --> 00:09:54.480\nSo adjusting at headquarters won't help.\n\n189\n00:09:54.480 --> 00:09:57.870\nBut if mine is ten megabit,\nthen I'll know that one's better,\n\n190\n00:09:57.870 --> 00:09:59.030\nthe metrics will be different.\n\n191\n00:09:59.030 --> 00:10:00.250\nLet's go and do that.\n\n192\n00:10:00.250 --> 00:10:04.026\nNow with frame relay, the way you adjust\nyour bandwidth, is you call your ISP.\n\n193\n00:10:04.026 --> 00:10:07.140\nYou call them up and say, hey guys,\ncan you tune up the bandwidth, right?\n\n194\n00:10:07.140 --> 00:10:10.000\nBut at the end of the day, your router\ndoesn't necessarily realize that it's\n\n195\n00:10:10.000 --> 00:10:12.150\ngot more bandwidth or less bandwidth.\n\n196\n00:10:12.150 --> 00:10:14.530\nTo inform the routing\nprotocol of the difference,\n\n197\n00:10:14.530 --> 00:10:16.090\nwe need to use the bandwidth command.\n\n198\n00:10:16.090 --> 00:10:19.518\nAnd the bandwidth command just tells the\nrouting protocol what the bandwidth is.\n\n199\n00:10:19.518 --> 00:10:22.310\nIt actually has no bearing\non the actual bandwidth.\n\n200\n00:10:22.310 --> 00:10:24.750\nSo if we want to tell it,\nthat I can go to headquarters.\n\n201\n00:10:26.180 --> 00:10:29.600\nI can get into my serial 1/0 interface,\nand I can say, bandwidth and\n\n202\n00:10:29.600 --> 00:10:31.730\nI can give it the bandwidth, right?\n\n203\n00:10:31.730 --> 00:10:33.160\nSpecified in kilobits.\n\n204\n00:10:33.160 --> 00:10:35.730\nSo I'm gonna say that it's\ngot a ten megabit connection.\n\n205\n00:10:35.730 --> 00:10:37.691\nAll right, so bandwidth 10000.\n\n206\n00:10:37.691 --> 00:10:40.758\nAnd then I'll do the same\nthing over on branch one.\n\n207\n00:10:40.758 --> 00:10:45.542\nOn branch one, I'm gonna say\nthat its connection to the frame\n\n208\n00:10:45.542 --> 00:10:50.698\nrelay is ten megabit, all right,\nso we'll just say 10000.\n\n209\n00:10:50.698 --> 00:10:54.760\nOkay, so now they know that they've got\na better connection to the network.\n\n210\n00:10:54.760 --> 00:10:57.782\nSo, that's this link here,\nis now ten megabit, and\n\n211\n00:10:57.782 --> 00:11:02.231\nthis link here is ten megabit, but\nthese links are still 1.544, right?\n\n212\n00:11:02.231 --> 00:11:04.020\nSo they're not as fast.\n\n213\n00:11:04.020 --> 00:11:08.170\nThey're slower links, and the IGRP's\ngonna take that into consideration.\n\n214\n00:11:08.170 --> 00:11:11.720\nAnd so I should see my routing\ntable update pretty quickly.\n\n215\n00:11:13.290 --> 00:11:14.190\nWell, not quick enough.\n\n216\n00:11:14.190 --> 00:11:17.260\nWe might have to wait for our JSON C's\nto dump before it actually goes in and\n\n217\n00:11:17.260 --> 00:11:18.230\nrecalculates.\n\n218\n00:11:18.230 --> 00:11:20.980\nBut it'll recalculate eventually\nto pick up these new numbers.\n\n219\n00:11:20.980 --> 00:11:24.710\nRemember EIGRP, if a route is stable,\nit doesn't like to mess with it.\n\n220\n00:11:24.710 --> 00:11:28.140\nSo sometimes you kinda have to\ngenerate a failure, or a reload, or\n\n221\n00:11:28.140 --> 00:11:30.530\nflush out EIGRP to make that take effect.\n\n222\n00:11:30.530 --> 00:11:32.760\nBut what's gonna happen is,\nit's gonna learn that new metric.\n\n223\n00:11:32.760 --> 00:11:37.320\nAnd right now it's working\noff of my topology, and\n\n224\n00:11:37.320 --> 00:11:41.010\nin the topology you'll see these\nnumbers haven't really changed, right?\n\n225\n00:11:41.010 --> 00:11:45.750\nWhen I start to look at some of\nthese numbers, where is dot four?\n\n226\n00:11:45.750 --> 00:11:46.590\nThere it is.\n\n227\n00:11:46.590 --> 00:11:47.850\nSo here's dot four and\n\n228\n00:11:47.850 --> 00:11:50.760\nyou can see the numbers haven't really\nchanged from what they were before.\n\n229\n00:11:50.760 --> 00:11:55.320\nSo they're there, it's still all\nequal across the line, even though\n\n230\n00:11:55.320 --> 00:11:59.360\nI've got some links that are now adjusted,\nso I have to wait for that to happen.\n\n231\n00:11:59.360 --> 00:12:02.700\nNow, when it happens, I'll have\na nice big difference there, right?\n\n232\n00:12:02.700 --> 00:12:03.783\nAnd I can even influence that,\n\n233\n00:12:03.783 --> 00:12:05.958\nI could switch from frame relay\nto my Ethernet links, right?\n\n234\n00:12:05.958 --> 00:12:08.390\nThere would be a nice, big change, right?\n\n235\n00:12:08.390 --> 00:12:16.052\nSo for example, if I go into int e0/0,\nand turn that on.\n\n236\n00:12:17.380 --> 00:12:20.320\nI don't show it here on the network but\nI've actually got a Metro-E network over\n\n237\n00:12:20.320 --> 00:12:23.670\nhere, the headquarters is connected to,\nbranch one, branch two, branch three, and\n\n238\n00:12:23.670 --> 00:12:26.530\nit's ten megabit because it's Ethernet,\nnot frame relay.\n\n239\n00:12:26.530 --> 00:12:29.420\nAnd so\nas I start to activate that network, well,\n\n240\n00:12:29.420 --> 00:12:32.380\npeople are gonna see it and\nthey're gonna see that it's faster.\n\n241\n00:12:32.380 --> 00:12:36.100\nThat it's a better network for\nthem to be able to use.\n\n242\n00:12:36.100 --> 00:12:39.540\nAnd when they do that,\nthey'll switch over to it.\n\n243\n00:12:39.540 --> 00:12:43.680\nNow I need to make sure that\nEIGRP is advertising that.\n\n244\n00:12:43.680 --> 00:12:46.980\nSo let me just make, oh, I guess it\nis cuz I got adjacencies coming up.\n\n245\n00:12:46.980 --> 00:12:50.456\nI had some passive interfaces configured,\nso you never know if that's gonna block\n\n246\n00:12:50.456 --> 00:12:52.852\nit, but I got adjacencies here so\nI should be good there.\n\n247\n00:12:52.852 --> 00:12:56.382\nAll right, now let's take a look at branch\none's topology now that I have this new\n\n248\n00:12:56.382 --> 00:12:57.910\nMetro-E link up, right?\n\n249\n00:12:57.910 --> 00:13:02.940\nSo if I take a look at my topology now,\nnow\n\n250\n00:13:02.940 --> 00:13:04.830\nI'm starting to get a ton of routes,\nright?\n\n251\n00:13:04.830 --> 00:13:11.709\nAnd if I find old 172.16.4 in my list,\ndid I miss it?\n\n252\n00:13:11.709 --> 00:13:13.481\nOh, it was right there at the bottom,\nright here.\n\n253\n00:13:13.481 --> 00:13:14.833\nOkay, whoops.\n\n254\n00:13:14.833 --> 00:13:18.039\nNotice what I've got,\nnotice how I only have one entry and\n\n255\n00:13:18.039 --> 00:13:21.400\nit's over that 192.168.0.3 Ethernet 0/0.\n\n256\n00:13:21.400 --> 00:13:23.220\nIt's going over the Ethernet interface,\nand\n\n257\n00:13:23.220 --> 00:13:27.460\nit's picking that one as\nopposed to my other one.\n\n258\n00:13:27.460 --> 00:13:30.050\nAnd in fact, the other one's,\nwhere are they?\n\n259\n00:13:30.050 --> 00:13:30.880\nThey disappeared.\n\n260\n00:13:31.920 --> 00:13:36.670\nThey disappeared because of a loop\nprevention mechanism in EIGRP.\n\n261\n00:13:36.670 --> 00:13:40.373\nThere's loop prevention that says if I\nlearn a route and its feasible distance,\n\n262\n00:13:40.373 --> 00:13:44.523\nis bigger than, I'm sorry it's advertised\ndistance because it's [INAUDIBLE], right?\n\n263\n00:13:44.523 --> 00:13:49.031\nIf our advertised distance is bigger than\nthe feasible distance I already know,\n\n264\n00:13:49.031 --> 00:13:50.630\nthen it's probably a loop.\n\n265\n00:13:50.630 --> 00:13:53.230\nIt's probably me learning my own route,\nagain.\n\n266\n00:13:53.230 --> 00:13:54.840\nAnd that might sound a little confusing,\n\n267\n00:13:54.840 --> 00:13:56.990\nI'll show you a diagram\nhere in a few minutes, and\n\n268\n00:13:56.990 --> 00:13:59.300\nkind of show you how it actually works,\nit's important to understand.\n\n269\n00:13:59.300 --> 00:14:02.160\nBut that's why those routes aren't showing\nup, is they're just being thrown away.\n\n270\n00:14:02.160 --> 00:14:06.690\nThose routes have a metric that's so\nbad that I assume there's a loop,\n\n271\n00:14:06.690 --> 00:14:09.870\nthat I assume I'm learning one of my own\nroutes again and I'm throwing it away.\n\n272\n00:14:09.870 --> 00:14:10.940\nBut that's not happening for all my links,\n\n273\n00:14:10.940 --> 00:14:13.480\nyou'll see that there's still plenty of\nlinks that I have here that have multiple\n\n274\n00:14:13.480 --> 00:14:15.080\npaths where that isn't happening.\n\n275\n00:14:16.370 --> 00:14:20.880\nLet's take a look at for example,\nwell I guess it would happen for\n\n276\n00:14:20.880 --> 00:14:22.854\nmost of the 172.16s.\n\n277\n00:14:22.854 --> 00:14:26.124\nLet's see, where's 172.16.0 in my list?\n\n278\n00:14:26.124 --> 00:14:29.245\nIt is maybe not being advertised?\n\n279\n00:14:29.245 --> 00:14:32.340\n[LAUGH]\nWell, we can take headquarters and\n\n280\n00:14:32.340 --> 00:14:32.940\nloop back, right?\n\n281\n00:14:32.940 --> 00:14:37.674\nSo on my headquarters router\nI've got a loop back interface,\n\n282\n00:14:37.674 --> 00:14:42.054\nand that loop back interface is 1.1.1.1,\nokay?\n\n283\n00:14:42.054 --> 00:14:45.013\nSo if I wanna go to headquarters\nloop back interface,\n\n284\n00:14:45.013 --> 00:14:48.694\nI can jump across these serial lines or\nI can go across frame relay or\n\n285\n00:14:48.694 --> 00:14:51.975\nnow I can go across the ether\nnet link to get there, right?\n\n286\n00:14:51.975 --> 00:14:53.730\nI got four different ways to get to that.\n\n287\n00:14:53.730 --> 00:14:57.774\nAnd so if I take a look at my topology,\n\n288\n00:14:57.774 --> 00:15:02.735\nwe should be able to\nfind that entry in there.\n\n289\n00:15:02.735 --> 00:15:06.580\nAnd I'm just gonna hunt for\n1.1.1, save me some time.\n\n290\n00:15:06.580 --> 00:15:08.070\nOh that didn't work.\n\n291\n00:15:08.070 --> 00:15:09.870\nIt must not have found the number.\n\n292\n00:15:09.870 --> 00:15:12.280\nThere it is, well,\nsee that one, oh [LAUGH],\n\n293\n00:15:12.280 --> 00:15:13.810\nI'm looking at it from my headquarters.\n\n294\n00:15:13.810 --> 00:15:15.070\nThat's not gonna help us.\n\n295\n00:15:15.070 --> 00:15:18.910\nThat would explain why that\none wasn't showing up right.\n\n296\n00:15:18.910 --> 00:15:21.760\nBut yeah, so if we look in here we'll\nstart to see those multiple paths.\n\n297\n00:15:21.760 --> 00:15:23.880\nHere they are, and\nwe got four of them, right?\n\n298\n00:15:23.880 --> 00:15:28.280\nWe've got four, the frame relay ones,\nthey haven't learned their bandwidth yet\n\n299\n00:15:28.280 --> 00:15:30.560\nbecause there hasn't been a change\non the frame relay network.\n\n300\n00:15:30.560 --> 00:15:34.380\nThe Ethernet one is showing up\nwith its better metrics, right?\n\n301\n00:15:34.380 --> 00:15:38.090\nSo there it is with the better metrics and\nit's up, it's happy.\n\n302\n00:15:38.090 --> 00:15:38.860\nThat's the one I'm using.\n\n303\n00:15:38.860 --> 00:15:41.920\nThat's my successor route and\nall of the others are backups.\n\n304\n00:15:41.920 --> 00:15:45.660\nBut that means that I've kinda got some\nwasted stuff going on here, right?\n\n305\n00:15:45.660 --> 00:15:48.208\nThat means that if I'm using the Ethernet\nlink to get to headquarters,\n\n306\n00:15:48.208 --> 00:15:50.415\nI'm not using this frame relay,\nI'm not using this serial,\n\n307\n00:15:50.415 --> 00:15:52.715\nI'm not using the serial,\nthey're being wasted, all right?\n\n308\n00:15:52.715 --> 00:15:58.829\nWell the IGRP supports what's called\nunequal load cost balancing And\n\n309\n00:15:58.829 --> 00:16:02.765\nunequal load cost is where we can say,\nyeah,\n\n310\n00:16:02.765 --> 00:16:08.380\nthe cost might not be the same on\nthese guys, but we can trick it.\n\n311\n00:16:08.380 --> 00:16:10.190\nNot trick it, but, you know,\ntell the router, hey,\n\n312\n00:16:10.190 --> 00:16:11.610\neven though they're not equal,\ngo ahead and\n\n313\n00:16:11.610 --> 00:16:15.070\nput those routes in the routing table so\nwe can still load balance across it.\n\n314\n00:16:15.070 --> 00:16:17.050\nRemember that EIGRP doesn't\ndo the load balancing.\n\n315\n00:16:17.050 --> 00:16:18.750\nSomething else does.\n\n316\n00:16:18.750 --> 00:16:22.340\nAnd Cisco Express Forwarding, CEF,\nis smart enough to look and say,\n\n317\n00:16:22.340 --> 00:16:26.840\nall right, I've got a 10 megabit line here\nand I've got a 1.5 megabit line here.\n\n318\n00:16:26.840 --> 00:16:31.480\nSo I'm gonna send 85% of my traffic\nover the 10 megabit line and\n\n319\n00:16:31.480 --> 00:16:34.580\nI'm gonna send 15% of the traffic\nover the 1.5 megabit line.\n\n320\n00:16:34.580 --> 00:16:36.190\nIt's smart enough to do that.\n\n321\n00:16:36.190 --> 00:16:38.630\nWe just have to tell it to\nput the routes in there.\n\n322\n00:16:38.630 --> 00:16:41.570\nWhen we do unequal cost load balancing,\n\n323\n00:16:41.570 --> 00:16:44.310\nthat's when we're telling the system,\nmake use of these other lines.\n\n324\n00:16:44.310 --> 00:16:45.410\nDon't just let them sit idle.\n\n325\n00:16:45.410 --> 00:16:47.250\nUse them.\n\n326\n00:16:47.250 --> 00:16:51.170\nThe way you do it is by turning\non what's called variance.\n\n327\n00:16:51.170 --> 00:16:53.200\nVariance is just a multiplier.\n\n328\n00:16:53.200 --> 00:16:56.690\nIt says, normally you're looking at\nthese metrics to make your decision.\n\n329\n00:16:56.690 --> 00:16:59.640\nSo here,\nthis is a real easy decision to make.\n\n330\n00:16:59.640 --> 00:17:04.220\nIf we look at the metric on the left,\nour feasible distance, 409,000 is\n\n331\n00:17:04.220 --> 00:17:09.659\na lot lower than 2.2 million, and\nall these other ones are 2.2 million.\n\n332\n00:17:09.659 --> 00:17:13.275\nSo 409,000 way better,\nwe're gonna go with that, right?\n\n333\n00:17:13.275 --> 00:17:15.750\n2.2 million, that sits on the sideline.\n\n334\n00:17:15.750 --> 00:17:20.250\nBut I can tell it to multiply my\nfeasible distance by a number, and\n\n335\n00:17:20.250 --> 00:17:24.080\nthen anything that falls in\nthat range will be allowed in.\n\n336\n00:17:24.080 --> 00:17:30.420\nWell, 400,000, if I multiply that by 6,\nthat would be 2.4 million.\n\n337\n00:17:30.420 --> 00:17:35.210\nSo, if I say I have a variance of 6, then\nit's gonna take that feasible distance,\n\n338\n00:17:35.210 --> 00:17:38.400\nmultiply it by 6,\nget that 2.4 million, and\n\n339\n00:17:38.400 --> 00:17:43.160\nthen anybody with a metric under 2.4\nmillion, will be allowed to load balance.\n\n340\n00:17:43.160 --> 00:17:46.300\nSo right now,\nif I do a show IP route, to 1.1.1.1,\n\n341\n00:17:46.300 --> 00:17:51.140\nI've got one path, one way to get there,\nvia that ethernet interface.\n\n342\n00:17:52.190 --> 00:17:56.683\nBut if I go into my configuration,\nand I go into EIGRP.\n\n343\n00:17:56.683 --> 00:17:59.690\nI can say variance 6.\n\n344\n00:17:59.690 --> 00:18:03.602\nIt's a global EIGRP command, so\nit's gonna apply to all of my routes,\n\n345\n00:18:03.602 --> 00:18:04.660\nnot just this one.\n\n346\n00:18:04.660 --> 00:18:06.710\nYou can't limit to just one.\n\n347\n00:18:06.710 --> 00:18:08.670\nIf you want to do that,\nyou have to do policy based routing,\n\n348\n00:18:08.670 --> 00:18:12.140\nwhich we've either already covered in\nan episode, or we're going to cover in\n\n349\n00:18:12.140 --> 00:18:15.420\nthe future, I'm not sure where\nwe're at right now on that one.\n\n350\n00:18:15.420 --> 00:18:18.850\nBut basically variance is going to say,\njust take your feasible distance and\n\n351\n00:18:18.850 --> 00:18:19.540\nmultiply it by six.\n\n352\n00:18:19.540 --> 00:18:21.960\nUse that to determine\nhow you load balance.\n\n353\n00:18:21.960 --> 00:18:25.250\nWhen I put that in place,\nEIGRP is going to update.\n\n354\n00:18:25.250 --> 00:18:29.500\nSo now I just said variance 6,\nand now, if I take a look,\n\n355\n00:18:29.500 --> 00:18:32.640\nmy topology is not really\nnot any different.\n\n356\n00:18:32.640 --> 00:18:35.398\nSo when I go down here and\nfind that 1.1.1.1,\n\n357\n00:18:35.398 --> 00:18:38.980\nit's still showing that one successor,\nit's got one good route.\n\n358\n00:18:38.980 --> 00:18:43.818\nBut since my variance is higher, it's\ngonna take all of these routes and say,\n\n359\n00:18:43.818 --> 00:18:47.918\nthey're all kind of suitable, and\nso, when we go to pull that up,\n\n360\n00:18:47.918 --> 00:18:50.580\nI just did a show IP route 1.1.1.1.\n\n361\n00:18:50.580 --> 00:18:55.050\nAnd now, instead of getting the one entry,\njust the ethernet, now I get four.\n\n362\n00:18:55.050 --> 00:18:57.490\nAnd see how the ethernet\none has an asterisk?\n\n363\n00:18:57.490 --> 00:19:00.950\nThat's the one that's the true successor.\n\n364\n00:19:00.950 --> 00:19:04.060\nBut the other ones are in\nthe routing table now too.\n\n365\n00:19:04.060 --> 00:19:06.770\nThey're in the routing table so\nthat we can balance them.\n\n366\n00:19:06.770 --> 00:19:08.330\nSo we can send traffic to them.\n\n367\n00:19:08.330 --> 00:19:11.880\nThat EIGRP has installed them,\nand they're in place.\n\n368\n00:19:11.880 --> 00:19:16.340\nOkay, now once they're there,\nwell now CEF can jump in and\n\n369\n00:19:16.340 --> 00:19:19.080\nstart to take over and\nhandle the load balancing on that side.\n\n370\n00:19:19.080 --> 00:19:20.429\nAnd if I look at my routing table.\n\n371\n00:19:23.844 --> 00:19:26.090\nWe can see them all right there, all four.\n\n372\n00:19:26.090 --> 00:19:30.370\nEven though the one had an asterisk on it,\nthe others are still there and I can see\n\n373\n00:19:30.370 --> 00:19:34.760\ntheir metric is different, but EIGRP\nstill installed it in the routing table.\n\n374\n00:19:34.760 --> 00:19:39.200\nThat's what unequal\ncost load balancing is.\n\n375\n00:19:39.200 --> 00:19:40.618\nYou just manipulate the variance.\n\n376\n00:19:40.618 --> 00:19:43.100\nThe variance doesn't need to\nbe a whole number, it can be,\n\n377\n00:19:43.100 --> 00:19:45.040\nI think it's one to two hundred and\nfifty-five, is that the max?\n\n378\n00:19:45.040 --> 00:19:47.280\nLet's just see what the max is.\n\n379\n00:19:47.280 --> 00:19:49.600\nIt's easy enough to find out.\n\n380\n00:19:49.600 --> 00:19:52.620\nAnd so you just pick what whole\nnumber it is that meets your need,\n\n381\n00:19:52.620 --> 00:19:54.030\nunfortunately you can't do a fraction.\n\n382\n00:19:54.030 --> 00:19:55.270\nOh, it's 1 through 128.\n\n383\n00:19:55.270 --> 00:19:58.327\nSo you can't do like 1.5, I know there's\nbeen plenty of times where I wanted that,\n\n384\n00:19:58.327 --> 00:19:59.047\nand I couldn't do it.\n\n385\n00:19:59.047 --> 00:20:01.630\nSo it does have to be a whole number.\n\n386\n00:20:01.630 --> 00:20:03.830\nNow, I want to circle back to\nsomething I mentioned earlier.\n\n387\n00:20:03.830 --> 00:20:07.361\nRemember how some of the routes\nweren't showing up in my topology?\n\n388\n00:20:07.361 --> 00:20:10.031\nWhen I ran a show IP, EIGRP topology,\n\n389\n00:20:10.031 --> 00:20:15.467\nthere were several things that were still\ncoming in as only having one route.\n\n390\n00:20:15.467 --> 00:20:17.650\nLike 172.16.4.\n\n391\n00:20:17.650 --> 00:20:18.810\nWhy did that happen?\n\n392\n00:20:19.950 --> 00:20:23.290\nWhy did I only get the one route?\n\n393\n00:20:23.290 --> 00:20:23.860\nOkay.\n\n394\n00:20:23.860 --> 00:20:26.530\nWell, the reason is because\nof loop prevention.\n\n395\n00:20:26.530 --> 00:20:29.040\nAnd I want to explain that so\nyou guys have an understanding,\n\n396\n00:20:29.040 --> 00:20:32.210\nbecause on the exam they do this all the\ntime, where they'll give you a diagram and\n\n397\n00:20:32.210 --> 00:20:34.550\nask you which routes should show up or\nsomething like that, and so\n\n398\n00:20:34.550 --> 00:20:38.070\nyou need to understand how\nthis loop prevention works.\n\n399\n00:20:38.070 --> 00:20:42.800\nRemember that EIGRP is\na distance vector protocol.\n\n400\n00:20:42.800 --> 00:20:46.010\nSo, we only see the people that\nwe're directly connected to,\n\n401\n00:20:46.010 --> 00:20:48.140\nour direct neighbors, and that's it.\n\n402\n00:20:48.140 --> 00:20:50.110\nWe don't see anybody else.\n\n403\n00:20:50.110 --> 00:20:52.120\nAnd so, when we talk to a neighbor,\n\n404\n00:20:52.120 --> 00:20:53.980\nthey're telling us about\nall sorts of routes.\n\n405\n00:20:53.980 --> 00:20:56.689\nAnd we have no idea who's on\nthe other side of those routes.\n\n406\n00:20:56.689 --> 00:21:00.448\nWe don't know if there's 1 router,\n5 routers, 100 routers, we don't know.\n\n407\n00:21:00.448 --> 00:21:04.227\nSo, our own route could\ngo to one neighbor.\n\n408\n00:21:04.227 --> 00:21:06.470\nThat neighbor tells it\nto another neighbor.\n\n409\n00:21:06.470 --> 00:21:09.060\nAnd then,\nwe learn our own route back from them, and\n\n410\n00:21:09.060 --> 00:21:14.620\nwe have no idea that it was our route,\nbecause, we can't see beyond it, right?\n\n411\n00:21:14.620 --> 00:21:16.440\nWe can't see beyond what's out there.\n\n412\n00:21:16.440 --> 00:21:21.370\nSo, we have to try and decipher that,\nfigure out what's going on and do that.\n\n413\n00:21:21.370 --> 00:21:23.960\nSo the routers can be\na little bit overly cautious.\n\n414\n00:21:23.960 --> 00:21:26.702\nAnd they do it just\nbasically to protect us.\n\n415\n00:21:26.702 --> 00:21:28.640\nTo make sure that things work right.\n\n416\n00:21:28.640 --> 00:21:32.320\nSo let me show you guys an example\nof a more simplified topology.\n\n417\n00:21:32.320 --> 00:21:35.106\nI've got a diagram pulled up here\nwhere I got a really simple topology.\n\n418\n00:21:35.106 --> 00:21:39.100\nI got router 1 on the left,\nrouter 5 on the right.\n\n419\n00:21:39.100 --> 00:21:41.497\nRouter 1 is connected 192.168.0.\n\n420\n00:21:41.497 --> 00:21:44.343\nRouter 5 is connected to 192.168.1.\n\n421\n00:21:44.343 --> 00:21:46.000\nTwo different networks.\n\n422\n00:21:46.000 --> 00:21:50.330\nAnd I've got a PC over here that\nneeds to get all the way over here.\n\n423\n00:21:50.330 --> 00:21:53.100\nSo, router 1's gotta make some decisions.\n\n424\n00:21:53.100 --> 00:21:56.230\nNow, router 1 has three paths.\n\n425\n00:21:56.230 --> 00:21:59.840\nIt can go up here to router 2,\ndown to router 5, and over.\n\n426\n00:21:59.840 --> 00:22:02.618\nIt can go over router 3,\nover to router 5 and over.\n\n427\n00:22:02.618 --> 00:22:06.590\nRouter 1 can go down to router 4,\nover to router 5, and over.\n\n428\n00:22:06.590 --> 00:22:11.810\nSo router 1's next hop could be router 2,\ncould be router 3, could be router 4.\n\n429\n00:22:11.810 --> 00:22:16.080\nAnd those guys' next hop is over to router\n5, and it all gets to the destination.\n\n430\n00:22:16.080 --> 00:22:18.100\nSo this is kind of my topology.\n\n431\n00:22:18.100 --> 00:22:21.950\nNow, router 1 never talks to router 5.\n\n432\n00:22:21.950 --> 00:22:23.160\nThey're not connected.\n\n433\n00:22:23.160 --> 00:22:25.800\nAnd in a distance vector protocol,\nyou don't talk to every router.\n\n434\n00:22:25.800 --> 00:22:27.990\nRouter 1 only talks to router 2, 3, and 4.\n\n435\n00:22:27.990 --> 00:22:34.180\nSo if router 1 learns a route,\nlet's do an example here.\n\n436\n00:22:34.180 --> 00:22:40.840\nSo if I'm gonna learn a route,\nthe route comes from somewhere.\n\n437\n00:22:40.840 --> 00:22:45.970\nMaybe it comes from router 5, goes up to\nrouter 2, and comes back to router 1.\n\n438\n00:22:45.970 --> 00:22:49.790\nSo that's kind of how\nI might learn a route.\n\n439\n00:22:49.790 --> 00:22:53.600\nAnd when I learn that route, that's great,\nI learned it, wonderful, right?\n\n440\n00:22:53.600 --> 00:22:56.210\nWell I'm going to advertise that out to\nthe other people that I'm connected to.\n\n441\n00:22:56.210 --> 00:22:59.030\nYou know,\nI'm going to tell that to other people.\n\n442\n00:22:59.030 --> 00:23:01.580\nSo when I do that,\nI'm going to say all right,\n\n443\n00:23:01.580 --> 00:23:05.600\nwell router 1, I'm gonna advertise out,\nmaybe I advertise out to router 4.\n\n444\n00:23:05.600 --> 00:23:07.758\nOkay, so I'm gonna tell router\n4 about that same route.\n\n445\n00:23:07.758 --> 00:23:11.370\nWell, router 4 is gonna learn about it,\nand it's gonna tell it to other people.\n\n446\n00:23:11.370 --> 00:23:16.430\nAnd maybe router 4 has a direct\nconnection to router 3.\n\n447\n00:23:16.430 --> 00:23:18.448\nOr a direct connection\nto some other router.\n\n448\n00:23:18.448 --> 00:23:20.830\nWell, router 3 could learn it, and\n\n449\n00:23:20.830 --> 00:23:22.820\nthen it could advertise it\nright back to me, couldn't it?\n\n450\n00:23:22.820 --> 00:23:24.440\nIt could advertise it right back to me,\n\n451\n00:23:24.440 --> 00:23:27.170\nand I wouldn't know that it\nwas my route coming back.\n\n452\n00:23:27.170 --> 00:23:29.660\nI would assume that it\nwas an all new route.\n\n453\n00:23:29.660 --> 00:23:31.560\nAnd maybe it's better or maybe it's worse.\n\n454\n00:23:31.560 --> 00:23:34.900\nI'll usually know it's worse though\nbecause, think about the path here.\n\n455\n00:23:34.900 --> 00:23:37.830\nThis one,\nI kinda made some fake metrics, right?\n\n456\n00:23:37.830 --> 00:23:39.560\nSo we got 5, 10, 15.\n\n457\n00:23:39.560 --> 00:23:44.600\nWhen I learn this,\nI'm gonna have a feasible distance of 15.\n\n458\n00:23:44.600 --> 00:23:47.020\nRouter 2 has a distance of 10.\n\n459\n00:23:47.020 --> 00:23:48.370\nSo, it advertises to me 10.\n\n460\n00:23:48.370 --> 00:23:49.680\nI add this 5, and I get 15.\n\n461\n00:23:49.680 --> 00:23:51.530\nMy feasible distance is 15.\n\n462\n00:23:51.530 --> 00:23:54.367\nWell, when I advertise it out here,\nit becomes 20.\n\n463\n00:23:54.367 --> 00:23:57.790\nAnd then, let's just say it becomes 25,\nand then it crosses this line and\n\n464\n00:23:57.790 --> 00:23:58.499\nbecomes 35.\n\n465\n00:23:58.499 --> 00:24:00.226\nI learn it with a 35.\n\n466\n00:24:00.226 --> 00:24:03.050\nWell, my feasible distance was 15.\n\n467\n00:24:03.050 --> 00:24:07.310\nI'm learning it with,\nwell, I learn it with a 25.\n\n468\n00:24:07.310 --> 00:24:11.790\nThat 25 is higher than my current feasible\ndistance because it looped around, right?\n\n469\n00:24:11.790 --> 00:24:13.350\nIt's a loop.\nI'll throw it out.\n\n470\n00:24:13.350 --> 00:24:15.620\nAnd so\nthat's that protection that's happening.\n\n471\n00:24:15.620 --> 00:24:18.620\nLet me give it to you with a little\nbit less mess on the screen, right?\n\n472\n00:24:18.620 --> 00:24:25.630\nSo if I were to take this and\nlay out my paths.\n\n473\n00:24:25.630 --> 00:24:26.610\nRight?\n\n474\n00:24:26.610 --> 00:24:28.750\nYou're advertised distance\nis what you're being told.\n\n475\n00:24:28.750 --> 00:24:31.580\nSo router one is being told three things.\n\n476\n00:24:31.580 --> 00:24:36.100\nRouter two says hey I can get\nto 192.68.1 and my cost is 10.\n\n477\n00:24:36.100 --> 00:24:39.478\nR3 says I can get there and\nmy cost is 10, right, 5 and 5.\n\n478\n00:24:39.478 --> 00:24:44.122\nR4 says, well, my network kind of\nstinks and so it's 15 and 5, right?\n\n479\n00:24:44.122 --> 00:24:45.940\nThat's what it's going\nto take to get there.\n\n480\n00:24:45.940 --> 00:24:47.400\nSo I'm learning 10, 10, and 20.\n\n481\n00:24:47.400 --> 00:24:52.500\nWhen I add that to my topology,\nI add in my own bandwidth.\n\n482\n00:24:52.500 --> 00:24:54.650\nThe bandwidth of my three links, right.\n\n483\n00:24:54.650 --> 00:24:57.170\nAnd that's what's going to\nbecome my feasible distance.\n\n484\n00:24:57.170 --> 00:25:01.840\nSo, router two is telling me 10, but\nmy link to router two has to cost a 5.\n\n485\n00:25:01.840 --> 00:25:02.810\nSo it becomes 15.\n\n486\n00:25:02.810 --> 00:25:05.230\nRight, my feasible distance is 15.\n\n487\n00:25:05.230 --> 00:25:06.890\nSame thing happens to my\nlink from router three.\n\n488\n00:25:06.890 --> 00:25:08.530\nRouter three is telling me 10.\n\n489\n00:25:08.530 --> 00:25:11.850\nBut my connection to router 3 has\na cost of 10, so it becomes 20.\n\n490\n00:25:11.850 --> 00:25:14.410\nThe feasible distance there is 20.\n\n491\n00:25:14.410 --> 00:25:16.970\nMy connection to router 4 is\nactually pretty good, it's a 5.\n\n492\n00:25:16.970 --> 00:25:21.750\nBut router 4 is telling me their cost\nis a 20, so I add it in as now 25.\n\n493\n00:25:21.750 --> 00:25:23.230\nThat's my feasible distance.\n\n494\n00:25:24.290 --> 00:25:31.240\nIf I receive an advertised distance that\nis higher than my best feasible distance,\n\n495\n00:25:31.240 --> 00:25:35.510\nI could potentially be learning that\nsame route from a different place.\n\n496\n00:25:35.510 --> 00:25:38.240\nAnd there's no point in learning the same\nroute from two different places.\n\n497\n00:25:38.240 --> 00:25:40.800\nThat just means there's a loop,\nand I don't want that.\n\n498\n00:25:40.800 --> 00:25:44.110\nSo when that situation happens,\nwe throw that route out.\n\n499\n00:25:44.110 --> 00:25:46.320\nThis bottom route here, the router 4,\n\n500\n00:25:46.320 --> 00:25:49.120\nbecause it's feasible distance,\neven it's advertised distance.\n\n501\n00:25:49.120 --> 00:25:53.380\nBecause it's advertised distance is so\nhigh, I'm not going to trust it.\n\n502\n00:25:53.380 --> 00:25:55.110\nThat doesn't mean I won't use it.\n\n503\n00:25:55.110 --> 00:25:56.940\nIf this other route dies.\n\n504\n00:25:56.940 --> 00:26:00.710\nIf the route through router 2 dies,\nit comes out of the routing table and\n\n505\n00:26:00.710 --> 00:26:02.080\nmy best feasible distance is then 20.\n\n506\n00:26:02.080 --> 00:26:05.050\nThe advertised distance is 20, they tie.\n\n507\n00:26:05.050 --> 00:26:06.910\nI'll learn it, I'll let that one in.\n\n508\n00:26:06.910 --> 00:26:09.500\nBecause there can't be a loop if\nthe distance is the same, right?\n\n509\n00:26:09.500 --> 00:26:11.580\nIt would have to be at least\none more link to have a loop.\n\n510\n00:26:12.920 --> 00:26:19.280\nSo when we look at these path costs, yeah\nI've got 15, I've got 20, and I've got 25.\n\n511\n00:26:19.280 --> 00:26:21.600\nSo the green path,\nthat seems to be the best path.\n\n512\n00:26:21.600 --> 00:26:23.250\nThat's the one I want to take.\n\n513\n00:26:23.250 --> 00:26:27.953\nAnd if I turn on variance, and I set\nthe variance to 2,15 times 2 becomes 30.\n\n514\n00:26:27.953 --> 00:26:32.500\nAnd so now, this one is 20, this one is\n25, I should load mounts across all three.\n\n515\n00:26:32.500 --> 00:26:36.310\nExcept I won't, because that third\none gets left out of the table.\n\n516\n00:26:36.310 --> 00:26:38.360\nIt's potentially a loop, we leave it out.\n\n517\n00:26:38.360 --> 00:26:39.790\nAnd to a load balance across the top too.\n\n518\n00:26:39.790 --> 00:26:42.530\nAnd there's not much you\ncan do to fix that, right?\n\n519\n00:26:42.530 --> 00:26:45.030\nExcept you could maybe go\nmanipulate your metrics.\n\n520\n00:26:45.030 --> 00:26:47.960\nYou can go manipulate your bandwidth and\ndelay on your various interfaces and\n\n521\n00:26:47.960 --> 00:26:49.720\nyou can try to tweak that and\nyou can change it.\n\n522\n00:26:49.720 --> 00:26:51.990\nBut otherwise there's not much you can do.\n\n523\n00:26:51.990 --> 00:26:56.270\nYou're gonna load balance across these\ntwo and if one of them fails, not one,\n\n524\n00:26:56.270 --> 00:26:58.620\nif the green one failed it\nwould have to be that one.\n\n525\n00:26:58.620 --> 00:27:00.810\nIt's feasible distance\ncomes out of your table and\n\n526\n00:27:00.810 --> 00:27:03.080\nthen you'll load balance\nacross the other two.\n\n527\n00:27:03.080 --> 00:27:03.590\nSo it is available.\n\n528\n00:27:03.590 --> 00:27:04.990\nSo just be aware of that.\n\n529\n00:27:04.990 --> 00:27:06.590\nIt's not a problem in OSPF.\n\n530\n00:27:06.590 --> 00:27:08.860\nIn OSPF your router\nsees the whole network.\n\n531\n00:27:08.860 --> 00:27:11.340\nAnd so it can load balance\nacross all these, no big deal.\n\n532\n00:27:11.340 --> 00:27:13.490\nBut in EIGRP it's distance vector.\n\n533\n00:27:13.490 --> 00:27:15.740\nIt can't see beyond its neighbors.\n\n534\n00:27:15.740 --> 00:27:17.670\nAnd so it has to do that loop protection.\n\n535\n00:27:17.670 --> 00:27:20.080\nSo you end up in a situation like this.\n\n536\n00:27:20.080 --> 00:27:22.190\nWe basically have a line drawn right here.\n\n537\n00:27:22.190 --> 00:27:23.970\nRouter one can't see beyond the line.\n\n538\n00:27:23.970 --> 00:27:26.420\nSo it doesn't know what's happening\nto the right side of that line.\n\n539\n00:27:26.420 --> 00:27:30.970\nSo it just see that AD as bigger than\nthe feasible distance of our best route.\n\n540\n00:27:30.970 --> 00:27:34.680\nAssumes there's a loop and\nto be on the safe side, it cuts it out.\n\n541\n00:27:34.680 --> 00:27:37.340\nSo, be aware of that,\nthat when you turn on your variance,\n\n542\n00:27:37.340 --> 00:27:38.900\nno matter how high you crank that number.\n\n543\n00:27:38.900 --> 00:27:39.650\nYou go variance 128.\n\n544\n00:27:39.650 --> 00:27:42.330\nSometimes, there's routes\nthat won't show up.\n\n545\n00:27:42.330 --> 00:27:44.780\nAnd it's the loop prevention\ninside the EIGRP that's doing it.\n\n546\n00:27:44.780 --> 00:27:46.310\nAll right.\nSo, important to understand,\n\n547\n00:27:46.310 --> 00:27:48.750\nimportant kinda concept there to grasp.\n\n548\n00:27:48.750 --> 00:27:51.943\nAnd for the exam, you want to be able to\nlook at a diagram, look at the costs, and\n\n549\n00:27:51.943 --> 00:27:54.725\nfigure out which routes would be\na part of that and which ones won't.\n\n550\n00:27:54.725 --> 00:27:57.326\nSo, understand that distance\nbetween feasible distance.\n\n551\n00:27:57.326 --> 00:28:01.308\nRight, the distance between feasible\ndistance and administrative distance and\n\n552\n00:28:01.308 --> 00:28:03.160\nhow to total those up.\n\n553\n00:28:03.160 --> 00:28:04.960\n>> Now Don there's always a question,\nright?\n\n554\n00:28:04.960 --> 00:28:08.130\nThe very fact is, why don't I\njust set the variance to 15 and\n\n555\n00:28:08.130 --> 00:28:11.590\njust let them load bounce across\nevery link that I possibly have?\n\n556\n00:28:11.590 --> 00:28:13.030\nIs there a reason why I\nwouldn't want to do that?\n\n557\n00:28:13.030 --> 00:28:13.618\n>> There's times.\n\n558\n00:28:13.618 --> 00:28:15.820\nI mean sometimes you have\nreally crummy backup lines and\n\n559\n00:28:15.820 --> 00:28:17.350\nyou don't want to rely on those.\n\n560\n00:28:17.350 --> 00:28:20.520\nIt might be something like an ISDN\nline that's not even up all the time.\n\n561\n00:28:20.520 --> 00:28:22.760\nOr you know you might even have\nhourly rates that you pay.\n\n562\n00:28:22.760 --> 00:28:24.030\nThat does happen.\n\n563\n00:28:24.030 --> 00:28:26.440\nIf you're in a really rural, remote area,\n\n564\n00:28:26.440 --> 00:28:29.580\nyou might be paying per\nminute on those ISDN lines.\n\n565\n00:28:29.580 --> 00:28:30.410\nSo in those theories,\n\n566\n00:28:30.410 --> 00:28:33.640\nyou don't them up all the time, you don't\nwant to balance across them, right?\n\n567\n00:28:33.640 --> 00:28:37.670\nThere's other times where you might have\nthings like security filtering devices,\n\n568\n00:28:37.670 --> 00:28:40.730\nand so you want your traffic to go\none path, so it's easier to filter.\n\n569\n00:28:40.730 --> 00:28:43.150\nYou get the send and\nthe receive all on that same line.\n\n570\n00:28:43.150 --> 00:28:45.760\nThere's a couple of scenarios\nwhere you might not want that.\n\n571\n00:28:45.760 --> 00:28:47.700\nYou might wanna go and\nrely on that single line.\n\n572\n00:28:47.700 --> 00:28:49.170\nUsually people's primary line and\n\n573\n00:28:49.170 --> 00:28:52.310\nbackup line are so different in\nbandwidth that it doesn't matter.\n\n574\n00:28:52.310 --> 00:28:55.970\nBut if you've got equal bandwidth,\nyou might as well load balance and\n\n575\n00:28:55.970 --> 00:28:59.400\ntake advantage of that and you can crank\nthat variance up as high as you need it.\n\n576\n00:28:59.400 --> 00:29:02.770\n>> All right, so Don,\nany last words of advice for\n\n577\n00:29:02.770 --> 00:29:04.890\nus as we take a look at load balancing?\n\n578\n00:29:04.890 --> 00:29:07.420\nOne word of advice that I'd\ngive you guys is if you do\n\n579\n00:29:07.420 --> 00:29:09.060\nstart manipulating your variance.\n\n580\n00:29:09.060 --> 00:29:11.350\nMake sure you do it on\nboth ends of the link.\n\n581\n00:29:11.350 --> 00:29:14.070\nBecause you don't want to be load\nbalancing on one end of the link and\n\n582\n00:29:14.070 --> 00:29:15.860\nnot load balancing on\nthe other end of the link.\n\n583\n00:29:15.860 --> 00:29:17.990\nIt's going to create especially\nif you do voice over I.P.\n\n584\n00:29:17.990 --> 00:29:19.890\nIt will create really bad\njitter on your phone calls.\n\n585\n00:29:19.890 --> 00:29:21.190\nSo you definitely don't want that so\n\n586\n00:29:21.190 --> 00:29:24.440\nif you're going to do variance make sure\nthat it is on both ends of that link.\n\n587\n00:29:24.440 --> 00:29:25.130\nAnd if there are four or\n\n588\n00:29:25.130 --> 00:29:27.940\nfive routers involved you'll need\nto do variance on all five of them.\n\n589\n00:29:27.940 --> 00:29:30.100\nSo that they're all making\nthose same kinds of decisions,\n\n590\n00:29:30.100 --> 00:29:30.970\nit's kind of important.\n\n591\n00:29:32.280 --> 00:29:35.460\n>> So in this episode we took a look at\nload balancing especially with EIGRP.\n\n592\n00:29:35.460 --> 00:29:37.300\nWe talked about its default and\n\n593\n00:29:37.300 --> 00:29:39.920\nmaking sure that it does equal\ncost load balancing, but\n\n594\n00:29:39.920 --> 00:29:44.060\nwe also showed you that EIGRP supports\nunequal cost load balancing as well.\n\n595\n00:29:44.060 --> 00:29:46.570\nAnd remember that even though you\nchoose the idea of using variance,\n\n596\n00:29:46.570 --> 00:29:49.990\nnot every single route will actually\nget into that routing table, and\n\n597\n00:29:49.990 --> 00:29:52.800\ntherefore you won't be able to\nload balance across them too.\n\n598\n00:29:52.800 --> 00:29:54.820\nSo that will end our episode for today.\n\n599\n00:29:54.820 --> 00:29:55.860\nThank you for watching.\n\n600\n00:29:55.860 --> 00:29:57.160\nI've been your host Ronnie Wong.\n\n601\n00:29:57.160 --> 00:29:57.880\n>> And I'm Don Pizet.\n\n602\n00:29:57.880 --> 00:29:59.169\n>> And we'll see you next time.\n\n603\n00:29:59.169 --> 00:30:05.700\n[MUSIC]\n\n",
          "vimeoId": "137401124"
        },
        {
          "description": "When EIGRP makes a decision, it by default looks at two things, which are bandwidth and delay. Viewers will hear about the way EIGRP makes routing decisions based on the composite metric calculated by DUAL-FSM, the five metrics that EIGRP uses, and how to manipulate the K values to get different results.",
          "length": "1387",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/ccnproute/cisco-ccnproute300101-3-22-eigrp_metrics-082615-1.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/ccnproute/cisco-ccnproute300101-3-22-eigrp_metrics-082615-1-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/ccnproute/cisco-ccnproute300101-3-22-eigrp_metrics-082615-1-sm.jpg",
          "title": "EIGRP Metrics",
          "transcript": "WEBVTT\n\n1\n00:00:00.000 --> 00:00:10.572\n[MUSIC]\n\n2\n00:00:10.572 --> 00:00:13.440\nWelcome to another great\nepisode here on ITProTV.\n\n3\n00:00:13.440 --> 00:00:17.446\nToday, we're jumping into the world\nof CCNP route, getting ready for\n\n4\n00:00:17.446 --> 00:00:19.133\nthe exam as it comes up for us.\n\n5\n00:00:19.133 --> 00:00:22.630\nAnd I'll be your host today,\nRonnie Wong, here with Mr. Don Pezet.\n\n6\n00:00:22.630 --> 00:00:23.560\nHow's it going?\n\n7\n00:00:23.560 --> 00:00:26.742\n>> Going great, Ronnie, excited to be\nback for another episode of EIGRP.\n\n8\n00:00:26.742 --> 00:00:28.750\nI think we're actually\nstarting to wind EIGRP down.\n\n9\n00:00:28.750 --> 00:00:30.550\nWe've covered a lot of stuff, but\n\n10\n00:00:30.550 --> 00:00:34.490\nin this episode we wanna take\na look at the EIGRP metric.\n\n11\n00:00:34.490 --> 00:00:36.550\nI know we've been talking about\nthis metric in other episodes.\n\n12\n00:00:36.550 --> 00:00:39.880\nWhen you look at your routing table,\nwhen you look at the EIGRP topology,\n\n13\n00:00:39.880 --> 00:00:43.652\nyou see these advertised distance,\nfeasible distance, these massive numbers!\n\n14\n00:00:43.652 --> 00:00:47.420\n2.3 million, and 170,000,\nand stuff like that,\n\n15\n00:00:47.420 --> 00:00:49.820\nhow does it come up with those metrics?\n\n16\n00:00:49.820 --> 00:00:51.418\nHow does it get that number?\n\n17\n00:00:51.418 --> 00:00:53.920\nAnd is there anything we can\ndo to mess around with it?\n\n18\n00:00:53.920 --> 00:00:55.460\nWell, the answer is, yes,\n\n19\n00:00:55.460 --> 00:00:58.220\nand we certainly need to understand\nhow that metric is assembled.\n\n20\n00:00:58.220 --> 00:01:01.490\nAnd that's what we're gonna\ntake a look at in this episode.\n\n21\n00:01:01.490 --> 00:01:04.910\nNow, a lot of us have heard the really\nsimplified version of this,\n\n22\n00:01:04.910 --> 00:01:08.340\nthat when EIGRP makes the decision,\nit looks at two things.\n\n23\n00:01:08.340 --> 00:01:11.190\nIt looks at bandwidth and delay, right?\n\n24\n00:01:11.190 --> 00:01:15.090\nThe bandwidth of the line,\nthat's important and then the delay.\n\n25\n00:01:15.090 --> 00:01:19.350\nDelay is how long does it take traffic to\ncross that line to get to the destination.\n\n26\n00:01:19.350 --> 00:01:23.050\nNow those two metrics are literally\nthe only thing that EIGRP looks at.\n\n27\n00:01:23.050 --> 00:01:26.310\nI know we say it's distance vector, and a\nlot of people immediately think hop count.\n\n28\n00:01:26.310 --> 00:01:27.980\nEIGRP completely ignores hop count.\n\n29\n00:01:27.980 --> 00:01:29.390\nIt does not care about hop count at all.\n\n30\n00:01:29.390 --> 00:01:30.520\nIt doesn't even track it.\n\n31\n00:01:30.520 --> 00:01:31.830\nIt doesn't maintain it in the packets.\n\n32\n00:01:31.830 --> 00:01:36.520\nIt doesn't know the hop count, but it does\nknow the bandwidth and it knows the delay.\n\n33\n00:01:36.520 --> 00:01:39.080\nWhen I say bandwidth,\nit looks at your topology.\n\n34\n00:01:39.080 --> 00:01:41.364\nIt looks at a series of links, and\n\n35\n00:01:41.364 --> 00:01:47.820\nit's whatever the lowest bandwidth on that\npath is, that's what is your bandwidth.\n\n36\n00:01:47.820 --> 00:01:50.150\nAll right, and\nthen delay is a little different.\n\n37\n00:01:50.150 --> 00:01:52.850\nDelay is not the lowest\non any particular link.\n\n38\n00:01:52.850 --> 00:01:56.180\nDelay is what the delay\nis across the whole path.\n\n39\n00:01:56.180 --> 00:01:58.470\nSo bandwidth looks at\none link specifically.\n\n40\n00:01:58.470 --> 00:02:00.930\nDelay looks at the whole path.\n\n41\n00:02:00.930 --> 00:02:06.410\nIf I have A T1, that's 1.5 megabit, that\nruns to a router that then has gigabit\n\n42\n00:02:06.410 --> 00:02:11.518\nfiber, and then runs to another router\nthat has another 1.5 megabit T1.\n\n43\n00:02:11.518 --> 00:02:14.124\nIt looks at it and it says,\n1.5 megabit is the lowest bandwidth.\n\n44\n00:02:14.124 --> 00:02:16.400\nThat's the bandwidth I'll use for\nthis calculation, right.\n\n45\n00:02:16.400 --> 00:02:18.610\nSo it's the lowest\nbandwidth of that length.\n\n46\n00:02:18.610 --> 00:02:20.090\nBut delay, it says,\n\n47\n00:02:20.090 --> 00:02:23.180\nall right, that whole path,\nhow long's it take to get from end to end?\n\n48\n00:02:23.180 --> 00:02:25.500\nSo that one is what's called a cumulative,\nor\n\n49\n00:02:25.500 --> 00:02:28.210\nI hear some people call it an aggregate,\nit's not truly aggregate.\n\n50\n00:02:28.210 --> 00:02:31.840\nSo it's a cumulative metric cuz it's\nadding up that delay all the way across\n\n51\n00:02:31.840 --> 00:02:32.690\nthose links.\n\n52\n00:02:32.690 --> 00:02:34.620\nBandwidth is not like that, all right?\n\n53\n00:02:34.620 --> 00:02:38.780\nBut those aren't the only two\nthings that EIGRP can look at.\n\n54\n00:02:38.780 --> 00:02:44.111\nIf you were to take a network sniffer and\ncrack open an EIGRP network statement,\n\n55\n00:02:44.111 --> 00:02:47.305\nit actually includes\nfive different metrics.\n\n56\n00:02:47.305 --> 00:02:49.750\nWell, technically it includes four.\n\n57\n00:02:49.750 --> 00:02:52.170\nIt's got bandwidth and delay,\nthose are really important.\n\n58\n00:02:52.170 --> 00:02:55.890\nIt also has load and\nreliability, all right.\n\n59\n00:02:55.890 --> 00:02:58.160\nLoad and\nreliability are kind of neat ones.\n\n60\n00:02:58.160 --> 00:03:00.970\nLoad is how busy the line is.\n\n61\n00:03:00.970 --> 00:03:04.954\nI might have a gigabit fiber link, but\nit might be running at 99% utilization,\n\n62\n00:03:04.954 --> 00:03:08.436\nwhich means it's only got 1 megabit\nof available bandwidth, right.\n\n63\n00:03:08.436 --> 00:03:10.050\nThe rest of it's all full.\n\n64\n00:03:10.050 --> 00:03:14.290\nSo I might have a 5 meg line sitting\nthere that's empty at 0% load, and\n\n65\n00:03:14.290 --> 00:03:16.970\nit's better than the gigabit link.\n\n66\n00:03:16.970 --> 00:03:19.750\nBecause it's got 5 megs\nof available traffic,\n\n67\n00:03:19.750 --> 00:03:22.590\nthe gig link only has 1\nmeg of available traffic.\n\n68\n00:03:22.590 --> 00:03:23.990\nI wanna go that 5 meg link, right?\n\n69\n00:03:23.990 --> 00:03:25.680\nThe load is pretty cool, right?\n\n70\n00:03:25.680 --> 00:03:30.740\nYou can see how busy the line is, and\nreliability, it's kind of similar.\n\n71\n00:03:30.740 --> 00:03:34.562\nWith reliability,\nthere might be a line that has been up and\n\n72\n00:03:34.562 --> 00:03:36.708\nrunning stable for seven weeks.\n\n73\n00:03:36.708 --> 00:03:39.040\nThere might be another line that's\nonly been up and running for\n\n74\n00:03:39.040 --> 00:03:40.240\nseven minutes, right?\n\n75\n00:03:40.240 --> 00:03:42.540\nCan I trust that seven minute line?\n\n76\n00:03:42.540 --> 00:03:44.120\nIt's only been up for\nseven minutes, right?\n\n77\n00:03:44.120 --> 00:03:46.850\nIt might be coming up and going down,\ncoming up and going down.\n\n78\n00:03:46.850 --> 00:03:50.070\nI don't want to move traffic over\nthat if it's not a reliable line.\n\n79\n00:03:50.070 --> 00:03:55.471\nAnd so we set that in and use that\nmetric to gauge which lines we prefer.\n\n80\n00:03:55.471 --> 00:03:58.970\nRight, now there's a little\nproblem with load and reliability.\n\n81\n00:03:58.970 --> 00:04:02.430\nLoad and\nreliability constantly change, right.\n\n82\n00:04:02.430 --> 00:04:06.020\nI might look at the line right now and\nyes, at 99% utilization.\n\n83\n00:04:06.020 --> 00:04:08.270\nAnd then I'll look at it\na moment from now, and it's 40%.\n\n84\n00:04:08.270 --> 00:04:10.410\nAnd then I look at it again,\nand it's 75%, right?\n\n85\n00:04:10.410 --> 00:04:14.280\nConstantly changing, and I've gotta\nconstantly learn that information.\n\n86\n00:04:14.280 --> 00:04:18.480\nSame thing with reliability, if I look\nright now, it's been up for seven minutes.\n\n87\n00:04:18.480 --> 00:04:20.450\nIf I look now, it's been up for\nseven minutes and two seconds.\n\n88\n00:04:21.680 --> 00:04:22.800\nNow it's seven minutes and four seconds.\n\n89\n00:04:22.800 --> 00:04:23.409\nWe could run this whole episode\nas long as you want to me.\n\n90\n00:04:23.409 --> 00:04:27.677\n>> [LAUGH]\n>> We could lose viewers left and right.\n\n91\n00:04:27.677 --> 00:04:29.440\nSo it keeps changing.\n\n92\n00:04:29.440 --> 00:04:32.190\nLoad and reliability keep changing.\n\n93\n00:04:32.190 --> 00:04:34.160\nDoes your bandwidth keep changing?\n\n94\n00:04:34.160 --> 00:04:35.590\nNo, it's a stable metric.\n\n95\n00:04:35.590 --> 00:04:37.410\nAnd does your delay keep changing?\n\n96\n00:04:37.410 --> 00:04:38.830\nNot under normal conditions, right?\n\n97\n00:04:38.830 --> 00:04:41.520\nUnder normal conditions,\nyour delay is a fixed value.\n\n98\n00:04:41.520 --> 00:04:43.150\nAnd so, those don't change.\n\n99\n00:04:43.150 --> 00:04:44.330\nThey're stable.\n\n100\n00:04:44.330 --> 00:04:48.800\nSo your routing table is nice and\nstable, you have network convergence.\n\n101\n00:04:48.800 --> 00:04:52.090\nIf you start tracking load and\nreliability with one or the other or\n\n102\n00:04:52.090 --> 00:04:55.570\neven both, your network is\nconstantly changing, right?\n\n103\n00:04:55.570 --> 00:04:58.070\nYour network is going to\nhave a hard time converging.\n\n104\n00:04:58.070 --> 00:05:00.340\nAnd it's going to consume\na lot of CPU power and\n\n105\n00:05:00.340 --> 00:05:03.300\nresources on your routers,\nif they're tough to work with.\n\n106\n00:05:03.300 --> 00:05:07.800\nSo EIGRP transmits those metrics,\nbut it doesn't use them by default.\n\n107\n00:05:07.800 --> 00:05:10.940\nBy default, load and reliability\nare turned off, and bandwidth and\n\n108\n00:05:10.940 --> 00:05:12.580\ndelay are the ones that are being used.\n\n109\n00:05:12.580 --> 00:05:14.170\nNow there's one more.\n\n110\n00:05:14.170 --> 00:05:18.025\nThere's one more that's out there that's\nbeing transmitted with your EIGRP packet.\n\n111\n00:05:18.025 --> 00:05:20.663\nIf you crack it open,\nthere's this fifth metric called MTU,\n\n112\n00:05:20.663 --> 00:05:22.850\nMaximum Transmission Unit.\n\n113\n00:05:22.850 --> 00:05:27.480\nBack in the day, right, let's roll our\nminds back 30 years back when dial-up\n\n114\n00:05:27.480 --> 00:05:31.430\nwas prevalent and Cisco's bright,\nshiny routing protocol was called IGRP.\n\n115\n00:05:32.510 --> 00:05:35.720\nBack then, you had people who\nwere using dial-up a lot.\n\n116\n00:05:35.720 --> 00:05:39.766\nAnd there would be Ethernet\nnetworks that had a 1,500 byte MTU.\n\n117\n00:05:39.766 --> 00:05:43.060\nThere were token ring networks where\nyou might have a smaller or bigger.\n\n118\n00:05:43.060 --> 00:05:47.990\nThere were ATM cell based networks\nwhere you might have 64 kilobyte MTUs.\n\n119\n00:05:47.990 --> 00:05:51.396\nYou could jump onto dialup networks\nwhere you might only have 800 bytes.\n\n120\n00:05:51.396 --> 00:05:55.267\nSo you had all sorts of different MTU\nsizes, maximum transmission unit sizes,\n\n121\n00:05:55.267 --> 00:05:57.015\nacross these different networks.\n\n122\n00:05:57.015 --> 00:06:02.480\nAnd so IGRP would exchange those values so\nthat you can make a decision on that.\n\n123\n00:06:02.480 --> 00:06:06.510\nI might prefer a line with a bigger\nMTU to one with a smaller MTU.\n\n124\n00:06:06.510 --> 00:06:11.460\nKnowing that the one with a smaller MTU is\ngonna require more TCP sync messages and\n\n125\n00:06:11.460 --> 00:06:12.320\nall that stuff.\n\n126\n00:06:12.320 --> 00:06:15.360\nSo, I can go with the higher MTU and\nget better performance.\n\n127\n00:06:16.410 --> 00:06:21.820\nOn modern networks, though, very few\npeople use dial up anymore, and ISDN,\n\n128\n00:06:21.820 --> 00:06:26.300\nframe relay, ethernet, almost all\nof them use the same MTU sizes now.\n\n129\n00:06:26.300 --> 00:06:28.590\nThey've all kinda settled\non that 1,500 bytes.\n\n130\n00:06:28.590 --> 00:06:31.720\nI guess there's some networks that\nhave like jumbo frames turned on,\n\n131\n00:06:31.720 --> 00:06:32.690\nyou might have bigger.\n\n132\n00:06:32.690 --> 00:06:36.480\nBut MTU really isn't\na deciding factor anymore.\n\n133\n00:06:36.480 --> 00:06:41.318\nCalculating CRCs on a frame isn't anything\nthat's really hard to do anymore.\n\n134\n00:06:41.318 --> 00:06:43.680\nIt's all done in hardware,\nit's done at wire speed.\n\n135\n00:06:43.680 --> 00:06:46.030\nAnd so nobody cares about MTU.\n\n136\n00:06:46.030 --> 00:06:50.230\nSo EIGRP transmits that information,\nbut it never uses it.\n\n137\n00:06:50.230 --> 00:06:53.520\nThe formula that it runs to calculate\nthe metric doesn't include MTU.\n\n138\n00:06:53.520 --> 00:06:55.400\nYou can't even turn it on if you want to.\n\n139\n00:06:55.400 --> 00:06:58.700\nSo while it is transmitted in the packet,\nyou can't use it.\n\n140\n00:06:58.700 --> 00:07:00.920\nSo that's the fifth metric, it does exist.\n\n141\n00:07:00.920 --> 00:07:04.610\nKnow it for the exam, but\nit can never be used, right?\n\n142\n00:07:04.610 --> 00:07:06.313\nAnd it's just because it's\nnot important anymore.\n\n143\n00:07:06.313 --> 00:07:08.223\nThere's no real reason to use that,\nall right.\n\n144\n00:07:08.223 --> 00:07:11.830\nIt's also kinda hard to track, especially\nwith different equipment out there.\n\n145\n00:07:11.830 --> 00:07:15.270\nSo those are the five metrics\nthat the EIGRP uses, and\n\n146\n00:07:15.270 --> 00:07:19.370\nit runs them through a formula to\ncome up with the actual metric.\n\n147\n00:07:19.370 --> 00:07:25.220\nSo if I look at my router here, if I'm on\nbranch 1 and I take a look at my eigrp.\n\n148\n00:07:25.220 --> 00:07:26.665\nWell, I'll take a look\nat my routing table.\n\n149\n00:07:26.665 --> 00:07:30.074\nIf I do a show ip route eigrp,\nhere's my eigrp routes, and\n\n150\n00:07:30.074 --> 00:07:32.942\nhere's the metrics that I'm getting,\nright?\n\n151\n00:07:32.942 --> 00:07:37.855\n2,297,856, 409,600, right?\n\n152\n00:07:37.855 --> 00:07:45.390\n2,809,856, right,\nwhere are these numbers coming from?\n\n153\n00:07:45.390 --> 00:07:47.150\nThat's the result of a formula.\n\n154\n00:07:47.150 --> 00:07:52.735\nIt's taking your bandwidth, your delay,\nyour load, your reliability.\n\n155\n00:07:52.735 --> 00:07:54.440\nIt's taking MTU and\nthrowing it away, right.\n\n156\n00:07:54.440 --> 00:07:57.410\nBut it takes the other four, and\nit feeds them into a formula.\n\n157\n00:07:57.410 --> 00:08:01.939\nAnd that formula is called\nthe diffusing update algorithm,\n\n158\n00:08:01.939 --> 00:08:06.710\nor dual, D-U-A-L,\nis what Cisco normally refers to it.\n\n159\n00:08:06.710 --> 00:08:08.310\nNow I was talking to\nRonnie before the show.\n\n160\n00:08:08.310 --> 00:08:11.870\nOn the exam, pretty much everywhere\nyou're gonna see it called DUEL.\n\n161\n00:08:11.870 --> 00:08:15.749\nThe actual name for is it DUEL fsm.\n\n162\n00:08:15.749 --> 00:08:21.670\nIt's the diffusing update\nalgorithm finite state machine.\n\n163\n00:08:21.670 --> 00:08:25.650\nIt's kind of a long name, so they\nusually just cut off the fsm part of it,\n\n164\n00:08:25.650 --> 00:08:27.080\nand it becomes DUEL.\n\n165\n00:08:27.080 --> 00:08:30.156\nBut, what it's doing is it's basically\nlooking at all these different paths,\n\n166\n00:08:30.156 --> 00:08:32.770\nrunning it through a formula and\ncoming up with a number.\n\n167\n00:08:32.770 --> 00:08:34.670\nAnd it's a finite state.\n\n168\n00:08:34.670 --> 00:08:38.340\nThere's only so many different values\nthat it can come up with, and then it can\n\n169\n00:08:38.340 --> 00:08:41.440\ncompare the different routes and determine\nwho's better and who's not, right.\n\n170\n00:08:41.440 --> 00:08:43.890\nThat's what the DUEL fsm does.\n\n171\n00:08:43.890 --> 00:08:48.790\nNow if you've ever wondered what the\nformula is, this is it right here, right.\n\n172\n00:08:48.790 --> 00:08:53.260\nThis is the DUEL algorithm in\nall of its glory written out.\n\n173\n00:08:53.260 --> 00:08:57.320\nNow Cisco does have this copyrighted.\n\n174\n00:08:57.320 --> 00:09:01.910\nAnd so if you want to create your\nown routing protocol and use this,\n\n175\n00:09:01.910 --> 00:09:03.430\nyou have to license it from Cisco.\n\n176\n00:09:03.430 --> 00:09:06.180\nSo Cisco doesn't mind telling people the\nalgorithm, they'll tell it to you left and\n\n177\n00:09:06.180 --> 00:09:07.610\nright, they don't care.\n\n178\n00:09:07.610 --> 00:09:11.245\nBut if you wanna create a third\nparty routing protocol that uses it,\n\n179\n00:09:11.245 --> 00:09:12.840\nyou've gotta license it from them.\n\n180\n00:09:12.840 --> 00:09:16.360\nSo as of it right now EIGRP is the only\nprotocol that uses this algorithm.\n\n181\n00:09:16.360 --> 00:09:20.840\nSo a lot of people just refer to\nthis as the EIGRP algorithm, right?\n\n182\n00:09:20.840 --> 00:09:22.580\nDid I spell diffusing wrong Randy.\n\n183\n00:09:22.580 --> 00:09:23.500\n>> I think there's two fs.\n\n184\n00:09:23.500 --> 00:09:24.110\n>> Two fs in that one.\n\n185\n00:09:24.110 --> 00:09:26.200\nBoy that's the focus to detail.\n\n186\n00:09:26.200 --> 00:09:27.100\n>> [LAUGH]\n>> All right.\n\n187\n00:09:27.100 --> 00:09:28.164\nThere we go.\n\n188\n00:09:28.164 --> 00:09:31.960\n[LAUGH] So there's the diffusing\nupdate algorithm spelled correctly.\n\n189\n00:09:32.970 --> 00:09:36.260\nAs you look across it,\nyou can see bandwidth.\n\n190\n00:09:36.260 --> 00:09:37.180\nThere's bandwidth.\n\n191\n00:09:37.180 --> 00:09:38.240\nYou can see load.\n\n192\n00:09:38.240 --> 00:09:39.030\nYou can see delay.\n\n193\n00:09:39.030 --> 00:09:40.680\nYou can see reliability.\n\n194\n00:09:40.680 --> 00:09:41.240\nWhere's MTU?\n\n195\n00:09:42.260 --> 00:09:43.230\nIt's not there.\n\n196\n00:09:43.230 --> 00:09:46.680\nIt's not in the algorithm at all, okay.\n\n197\n00:09:46.680 --> 00:09:48.680\nSo these are the four\nmetrics that are used,\n\n198\n00:09:48.680 --> 00:09:52.340\nand even these four metrics\naren't always used, alright.\n\n199\n00:09:52.340 --> 00:09:53.650\nLet me tell you why.\n\n200\n00:09:53.650 --> 00:09:57.310\nSpread throughout the algorithm\nare these K values, okay?\n\n201\n00:09:57.310 --> 00:09:59.550\nThe K values are actually called weights.\n\n202\n00:09:59.550 --> 00:10:03.112\nAnd a weight, weight as in heaviness,\na measurement of mass?\n\n203\n00:10:03.112 --> 00:10:03.811\n>> Yes.\n>> Or\n\n204\n00:10:03.811 --> 00:10:05.040\nwhatever\n>> Yes.\n\n205\n00:10:05.040 --> 00:10:06.640\n>> I don't know.\nIs that, it's weight.\n\n206\n00:10:06.640 --> 00:10:09.820\nWhich ones are more important than others,\nright.\n\n207\n00:10:09.820 --> 00:10:13.990\nAnd these manipulate which ones we\nactually pay attention to, okay.\n\n208\n00:10:13.990 --> 00:10:19.800\nBy default, K1 Has a value of 1,\nand K3, has a value of one.\n\n209\n00:10:19.800 --> 00:10:26.590\nK2, K4 and K5, all have a value of zero,\nby default, okay.\n\n210\n00:10:26.590 --> 00:10:28.620\nThat means that K1 and K3 are important.\n\n211\n00:10:28.620 --> 00:10:29.870\nThey have a weight of one.\n\n212\n00:10:29.870 --> 00:10:33.100\nBut K2, K4, K5, they got a weight of zero,\nthat means they're not important.\n\n213\n00:10:33.100 --> 00:10:35.750\nAnd it's not that they're\njust not important,\n\n214\n00:10:35.750 --> 00:10:37.410\nit's that actually get eliminated.\n\n215\n00:10:37.410 --> 00:10:41.972\nIf you look at something like\nK2 times bandwidth, right.\n\n216\n00:10:41.972 --> 00:10:45.320\nIf K2 is a zero,\nwhat's a zero times bandwidth?\n\n217\n00:10:45.320 --> 00:10:46.000\n>> Zero.\n\n218\n00:10:46.000 --> 00:10:47.260\n>> Zero, right, Yeah.\n\n219\n00:10:47.260 --> 00:10:49.500\nAnd what's zero divided by another number.\n\n220\n00:10:49.500 --> 00:10:51.390\nHere we got 256 minus load.\n\n221\n00:10:51.390 --> 00:10:54.000\nSo what's zero divided by\nwhatever number that is?\n\n222\n00:10:54.000 --> 00:10:54.630\n>> Zero.\n\n223\n00:10:54.630 --> 00:10:56.940\n>> Zero, yeah.\nZero divided by another number is zero.\n\n224\n00:10:56.940 --> 00:11:00.520\nSo load completely gets ignored.\n\n225\n00:11:00.520 --> 00:11:03.367\nIf K2 is zero,\nzero times bandwith is zero.\n\n226\n00:11:03.367 --> 00:11:07.847\nThen zero divided by 256 minus any number,\nwhatever the load is,\n\n227\n00:11:07.847 --> 00:11:11.180\nis gonna result in zero and\nload gets disregarded.\n\n228\n00:11:12.370 --> 00:11:14.500\nIf I want to pay attention to load.\n\n229\n00:11:14.500 --> 00:11:17.380\nI need to change K2 to a one or\nhigher, okay.\n\n230\n00:11:17.380 --> 00:11:20.920\nIf I make it a one, one times\nthe bandwidth is just the bandwidth.\n\n231\n00:11:20.920 --> 00:11:26.064\nAnd so then I get the bandwidth divided\nby 256 minus my current load, right.\n\n232\n00:11:26.064 --> 00:11:30.640\nAnd load is measured on\na scale of one to 255, okay?\n\n233\n00:11:30.640 --> 00:11:34.310\nOne means the line is empty, right.\n\n234\n00:11:34.310 --> 00:11:37.695\nCompletely unavailable,\nor completely unused.\n\n235\n00:11:37.695 --> 00:11:40.140\n255 means it's decked out, it's 100%.\n\n236\n00:11:40.140 --> 00:11:42.203\nThere is no available bandwidth.\n\n237\n00:11:42.203 --> 00:11:47.360\nSo if I get 256 minus 255,\nI end up with one.\n\n238\n00:11:47.360 --> 00:11:49.750\nAnd so I get up here, one times bandwidth.\n\n239\n00:11:49.750 --> 00:11:53.265\nI get my bandwidth, divided by one,\nIt's just bandwidth, right.\n\n240\n00:11:53.265 --> 00:11:55.985\nAnd that's saying that\nI'm at full saturation.\n\n241\n00:11:55.985 --> 00:12:00.635\nBut if this were lower, if my load was\nat say, 100, it'd be 256 minus 100,\n\n242\n00:12:00.635 --> 00:12:04.073\nthat'd be 156 and\nI'd get my bandwidth divided by 156.\n\n243\n00:12:04.073 --> 00:12:06.095\nAnd then that would be\nadded into everything.\n\n244\n00:12:06.095 --> 00:12:08.535\nAnd that starts to influence my metrics,\nright.\n\n245\n00:12:08.535 --> 00:12:12.595\nSo adjusting these K values is\nhow we can turn on load, or\n\n246\n00:12:12.595 --> 00:12:13.745\nhow we can turn on reliability.\n\n247\n00:12:13.745 --> 00:12:16.930\nLook at reliability over here\nIt's got a double whammy, right.\n\n248\n00:12:16.930 --> 00:12:18.410\nK5 and K4.\n\n249\n00:12:18.410 --> 00:12:20.970\nK5 and K4 are both zero by default.\n\n250\n00:12:20.970 --> 00:12:22.551\nWell if K5 is a zero.\n\n251\n00:12:22.551 --> 00:12:24.710\nZero divided by another number?\n\n252\n00:12:24.710 --> 00:12:25.290\nIs zero.\n\n253\n00:12:25.290 --> 00:12:27.060\nAnd so this gets negated.\n\n254\n00:12:27.060 --> 00:12:28.616\nBut if I make it a one.\n\n255\n00:12:28.616 --> 00:12:31.040\nOne divided by another number,\nI could have it be reliability.\n\n256\n00:12:31.040 --> 00:12:34.710\nAnd if I leave K4 as zero,\nthen it's just one divided by reliability.\n\n257\n00:12:34.710 --> 00:12:36.890\nBut I can make the K5 a huge number.\n\n258\n00:12:36.890 --> 00:12:37.800\nI could make it 10,000.\n\n259\n00:12:37.800 --> 00:12:41.240\nAnd now it'll be, well,\nI wouldn't do 10,000, right?\n\n260\n00:12:41.240 --> 00:12:44.530\nReliability is measured on,\none to two, well wait, one to 128.\n\n261\n00:12:44.530 --> 00:12:45.936\nWait, am I around that?\n\n262\n00:12:45.936 --> 00:12:48.570\nI wanna make sure I'm saying this right.\n\n263\n00:12:48.570 --> 00:12:51.450\nReliability, I've got it in my notes,\noh it is 255, alright.\n\n264\n00:12:51.450 --> 00:12:57.090\nWhere one is that the line is\nactually really unreliable.\n\n265\n00:12:57.090 --> 00:13:00.670\nAnd then 255 is where the line is\nvery reliable, very stable, right.\n\n266\n00:13:00.670 --> 00:13:03.390\nYou can trust the 255,\nyou don't want to trust a one.\n\n267\n00:13:03.390 --> 00:13:07.360\nSo if I take a one, or\nmaybe I'll set this at 255.\n\n268\n00:13:07.360 --> 00:13:08.860\nI set the K5 to 255.\n\n269\n00:13:08.860 --> 00:13:13.060\n255 divided by 255 minus zero,\n\n270\n00:13:13.060 --> 00:13:15.760\nwould just be one, and so\nall of this we multiply by one.\n\n271\n00:13:15.760 --> 00:13:17.520\nBut if we start to\nchange those numbers up,\n\n272\n00:13:17.520 --> 00:13:19.930\nbefore liability changes,\nthe results of the formula are different.\n\n273\n00:13:19.930 --> 00:13:23.130\nYou guys see how we can kinda\ninteract with this, right.\n\n274\n00:13:23.130 --> 00:13:26.785\nNow Cisco, recommends that\nyou don't interact with it.\n\n275\n00:13:26.785 --> 00:13:29.060\n>> [LAUGH]\n>> That the default works out really,\n\n276\n00:13:29.060 --> 00:13:32.250\nreally simple and\nit's usually the best for everybody.\n\n277\n00:13:32.250 --> 00:13:34.430\nRight?\nAnd who would know better than Cisco?\n\n278\n00:13:34.430 --> 00:13:38.720\nIf we look at this formula,\nif K1 is a one by default,\n\n279\n00:13:38.720 --> 00:13:40.960\none times bandwidth is just bandwidth.\n\n280\n00:13:40.960 --> 00:13:41.590\nRight?\n\n281\n00:13:41.590 --> 00:13:45.520\nIf K2 is a zero, zero times bandwidth\nis zero divided by whatever,\n\n282\n00:13:45.520 --> 00:13:49.020\nends up being zero,\nthis whole section just negates itself.\n\n283\n00:13:49.020 --> 00:13:50.000\nAlright.\n\n284\n00:13:50.000 --> 00:13:51.400\nK3 is a one times delay.\n\n285\n00:13:51.400 --> 00:13:53.130\nThat stays as delay.\n\n286\n00:13:53.130 --> 00:13:56.370\nSo over here we really\nget bandwidth plus delay.\n\n287\n00:13:56.370 --> 00:13:58.170\nThat's what this whole\nleft side boils down to.\n\n288\n00:13:58.170 --> 00:14:00.410\nNow the right side's\nwhere things get tricky,\n\n289\n00:14:00.410 --> 00:14:04.230\nbecause if K5 is a zero by default,\nzero divided by anything is zero.\n\n290\n00:14:04.230 --> 00:14:07.910\nIf I take all of this and\nmultiply it by zero what do I get?\n\n291\n00:14:07.910 --> 00:14:08.560\n>> Zero.\n\n292\n00:14:08.560 --> 00:14:10.260\n>> Yeah my metric would always be zero.\n\n293\n00:14:10.260 --> 00:14:14.010\nSo what Cisco says if K5 is zero,\nwe'll just ignore this whole section.\n\n294\n00:14:14.010 --> 00:14:15.380\nWe'll lop it off.\n\n295\n00:14:15.380 --> 00:14:18.130\nSo with the default K values, right.\n\n296\n00:14:18.130 --> 00:14:20.340\nIf we factor those in,\nhere's the default K values, right.\n\n297\n00:14:20.340 --> 00:14:25.060\nOnes for K1 and K3, and\nzero for K2, K4 and K5.\n\n298\n00:14:25.060 --> 00:14:29.450\nIf I go with the default, it boils down\nto bandwidth plus zero plus delay or\n\n299\n00:14:29.450 --> 00:14:30.160\nbandwidth plus delay.\n\n300\n00:14:30.160 --> 00:14:31.060\nAnd that's it.\n\n301\n00:14:31.060 --> 00:14:32.440\nThat's the default metric.\n\n302\n00:14:32.440 --> 00:14:33.890\nBut if we change the K values,\n\n303\n00:14:33.890 --> 00:14:36.410\nwe start to take some of these\nother factors into account.\n\n304\n00:14:36.410 --> 00:14:38.620\nNow, be really careful with this.\n\n305\n00:14:38.620 --> 00:14:42.320\nIf you If you start changing\nthe K values on one router,\n\n306\n00:14:42.320 --> 00:14:45.630\nit's now gonna make different\ndecisions than other routers.\n\n307\n00:14:45.630 --> 00:14:48.160\nAnd you can end up with\na network that never converges,\n\n308\n00:14:48.160 --> 00:14:50.850\na network where the routers never\nknow what each other's thinking.\n\n309\n00:14:50.850 --> 00:14:52.350\nIt can be really problematic.\n\n310\n00:14:52.350 --> 00:14:55.590\nSo if you're gonna start changing your K\nvalues, the best thing to do is to change\n\n311\n00:14:55.590 --> 00:14:57.810\nit throughout your entire\nautonomous system, right.\n\n312\n00:14:57.810 --> 00:15:01.800\nTo go through all of your routers and\nset those K values to be the same.\n\n313\n00:15:01.800 --> 00:15:04.010\nCisco's advice is not to do it.\n\n314\n00:15:04.010 --> 00:15:04.560\nJust don't do it.\n\n315\n00:15:04.560 --> 00:15:05.610\nDon't change it.\n\n316\n00:15:05.610 --> 00:15:09.500\nBandwidth and load, they're great ways,\nI mean, bandwith and delay.\n\n317\n00:15:09.500 --> 00:15:13.160\nThey're a great way to measure that,\nstick with it.\n\n318\n00:15:13.160 --> 00:15:13.870\nLook at OSPF.\n\n319\n00:15:13.870 --> 00:15:16.470\nOSPF does a great job,\nit just uses bandwidth and that's it.\n\n320\n00:15:16.470 --> 00:15:18.280\nRight, it doesn't even use delay.\n\n321\n00:15:18.280 --> 00:15:20.960\nSo EIGRP's already doing better than OSPF.\n\n322\n00:15:20.960 --> 00:15:23.420\nWhy make it worse by bringing in load and\nreliability.\n\n323\n00:15:23.420 --> 00:15:24.510\nBut you certainly can.\n\n324\n00:15:24.510 --> 00:15:26.380\nYou can bring those in by\nadjusting those K values.\n\n325\n00:15:26.380 --> 00:15:27.840\nAnd it's not even hard, right?\n\n326\n00:15:27.840 --> 00:15:31.960\nIf we wanna adjust the K values,\nwe can jump over to our router.\n\n327\n00:15:31.960 --> 00:15:35.800\nAnd you just get into your EIGRP process.\n\n328\n00:15:35.800 --> 00:15:37.390\nAnd in here if you type metric.\n\n329\n00:15:38.420 --> 00:15:40.860\nYou can start to adjust your weights.\n\n330\n00:15:40.860 --> 00:15:43.380\nRight remember I said the K values,\nthey're weights.\n\n331\n00:15:43.380 --> 00:15:46.550\nAnd so if I want to adjust my weights,\nI can then come through and specify.\n\n332\n00:15:46.550 --> 00:15:49.090\nAnd you actually have\nto specify six things.\n\n333\n00:15:49.090 --> 00:15:52.110\nThe first thing is the TOS or\ntype of service.\n\n334\n00:15:52.110 --> 00:15:55.040\nAnd this one's kind of weird because\nit tells me I can set it to zero\n\n335\n00:15:55.040 --> 00:15:56.495\nthrough eight but look at that.\n\n336\n00:15:56.495 --> 00:15:59.350\nOnly zero is supported, right.\n\n337\n00:15:59.350 --> 00:16:02.780\nIn EIGRP packets,\nthe type of service is always set to 0.\n\n338\n00:16:02.780 --> 00:16:04.969\nIf you set it to anything else here,\nyou break EIGRP, so\n\n339\n00:16:04.969 --> 00:16:07.150\nI don't even know why\nthey give you the choice.\n\n340\n00:16:07.150 --> 00:16:08.640\nBut, the first one's gonna be 0.\n\n341\n00:16:08.640 --> 00:16:11.080\nThat's not a K value,\nthat's type of service.\n\n342\n00:16:11.080 --> 00:16:13.520\nAnd then it's gonna start asking for\nthe K values.\n\n343\n00:16:13.520 --> 00:16:16.230\nWhat do you want K1 to be, all right?\n\n344\n00:16:16.230 --> 00:16:17.570\nK1 by default is a 1.\n\n345\n00:16:17.570 --> 00:16:21.070\nSo, I might choose to keep it a 1.\n\n346\n00:16:21.070 --> 00:16:21.790\nThen it's K2.\n\n347\n00:16:21.790 --> 00:16:23.660\nK2 by default is a 0.\n\n348\n00:16:23.660 --> 00:16:25.300\nMaybe I want to bump that up to a 1.\n\n349\n00:16:25.300 --> 00:16:25.860\nRight.\n\n350\n00:16:25.860 --> 00:16:30.280\nI want to bump that up to a 1\nbecause I care about load.\n\n351\n00:16:30.280 --> 00:16:33.010\nSo I want load to start getting\nfactored in so I'll make K2 a 1.\n\n352\n00:16:33.010 --> 00:16:37.300\nAnd then K3, well K3 is being\nmultiplied by delay over here and\n\n353\n00:16:37.300 --> 00:16:38.460\nby default it's a 1.\n\n354\n00:16:38.460 --> 00:16:41.760\nMaybe I don't want delay anymore,\nif I make that a 0,\n\n355\n00:16:41.760 --> 00:16:43.280\nI don't pay attention to delay anymore.\n\n356\n00:16:43.280 --> 00:16:45.160\nSo I'll set that one to a 0.\n\n357\n00:16:45.160 --> 00:16:47.140\nAnd then we start getting at K4 and K5.\n\n358\n00:16:47.140 --> 00:16:51.640\nNow K4, that's what's going to\nbe manipulating reliability.\n\n359\n00:16:51.640 --> 00:16:55.000\nAnd I might want to leave that just\nthe way that it is, and not mess with it,\n\n360\n00:16:55.000 --> 00:16:56.610\njust have it be reliability.\n\n361\n00:16:56.610 --> 00:17:00.730\nBut I need K5 to get factored in, and so\nI'm going to need to change that to a 1.\n\n362\n00:17:00.730 --> 00:17:04.410\nSo I might leave K4 a 0,\nand change K5 to a 1.\n\n363\n00:17:04.410 --> 00:17:10.150\nSo now, load and reliability are being\nfactored in, and I'm excluding delay.\n\n364\n00:17:10.150 --> 00:17:13.080\nRight?\nI'm manipulating those K-Mac values.\n\n365\n00:17:13.080 --> 00:17:17.540\nAnd when I press Enter, now this\nrouter is making different decisions.\n\n366\n00:17:17.540 --> 00:17:22.320\nAnd look what just happened,\nI just dumped all of my adjacencies,\n\n367\n00:17:22.320 --> 00:17:24.400\nall my neighbor adjacencies\nwith other routers.\n\n368\n00:17:24.400 --> 00:17:27.480\nAnd, they're trying to come back up,\nand they're failing.\n\n369\n00:17:27.480 --> 00:17:28.285\nAnd, why are they failing?\n\n370\n00:17:28.285 --> 00:17:30.780\nK-value mismatch, all right?\n\n371\n00:17:30.780 --> 00:17:32.540\nThe routers are protecting themselves.\n\n372\n00:17:32.540 --> 00:17:35.210\nThey're saying, look, the other guys,\nthey're making different decisions.\n\n373\n00:17:35.210 --> 00:17:36.520\nWe can't trust this.\n\n374\n00:17:36.520 --> 00:17:37.760\nLet's just not pair up.\n\n375\n00:17:37.760 --> 00:17:38.350\nOkay?\n\n376\n00:17:38.350 --> 00:17:42.210\nSo, I'm gonna start losing that,\nuntil I jump to my other routers and\n\n377\n00:17:42.210 --> 00:17:44.090\nI set those same K-values.\n\n378\n00:17:44.090 --> 00:17:47.760\nSo, I need to get that set\non each of my routers, or\n\n379\n00:17:47.760 --> 00:17:51.230\nI'm just going to keep getting\nthese bad messages in here, right.\n\n380\n00:17:51.230 --> 00:17:56.420\nSo I probably want to\nwrite a quick script and\n\n381\n00:17:56.420 --> 00:18:00.540\nset those K values to be the same, right.\n\n382\n00:18:01.700 --> 00:18:03.910\nAnd then just kind of run\nthrough my routers and fix that.\n\n383\n00:18:03.910 --> 00:18:08.590\nSo, I can throw that into my headquarters,\nbranch one's already set, branch two,\n\n384\n00:18:08.590 --> 00:18:11.810\nbranch three, right, so I get that set and\n\n385\n00:18:11.810 --> 00:18:15.280\nnow my connections are gonna\nstart coming back up okay.\n\n386\n00:18:15.280 --> 00:18:16.240\nI'll give them a second.\n\n387\n00:18:16.240 --> 00:18:17.710\nThere we go.\nI started seeing my adjacency is coming\n\n388\n00:18:17.710 --> 00:18:20.340\nback up and they're happy because\nnow K values match, right?\n\n389\n00:18:20.340 --> 00:18:24.650\nSo as long as K values match, we're happy,\nthings are going well, right?\n\n390\n00:18:24.650 --> 00:18:30.390\nSo if I do a show IP EIGRP neighbor,\nI can see my neighbors are up.\n\n391\n00:18:30.390 --> 00:18:34.930\nIf we run a, show IP proto,\nI can look at my protocols and\n\n392\n00:18:34.930 --> 00:18:37.200\nhere I can see my metrics that\nhave been adjusted, right?\n\n393\n00:18:37.200 --> 00:18:41.120\nSo show IP protocols gives me that\nmetric weight, my K1, K2, K3, K4, K5,\n\n394\n00:18:41.120 --> 00:18:44.170\nI can see them right there,\nthat I've manipulated.\n\n395\n00:18:44.170 --> 00:18:47.110\nAnd now my decisions are going to\nstart being made a lot differently.\n\n396\n00:18:47.110 --> 00:18:50.600\nIf we take a look at our topology,\n\n397\n00:18:50.600 --> 00:18:54.330\nour metrics are gonna start jumping\naround to some different things.\n\n398\n00:18:54.330 --> 00:18:56.130\nAnd now my metric numbers\nare a lot different.\n\n399\n00:18:56.130 --> 00:18:59.240\nI don't have those gigantic\nnumbers that I had before.\n\n400\n00:18:59.240 --> 00:19:00.720\nBecause I took delay out.\n\n401\n00:19:00.720 --> 00:19:02.940\nDelay is usually one of\nthe biggest numbers,\n\n402\n00:19:02.940 --> 00:19:07.540\ncuz it's measured in these\n10 microsecond units.\n\n403\n00:19:07.540 --> 00:19:08.410\n>> 10s of microseconds.\n\n404\n00:19:08.410 --> 00:19:09.830\n>> Yeah.\nI don't know why they do that.\n\n405\n00:19:09.830 --> 00:19:12.690\nIs it?\nOh wait, it's 10s of microseconds?\n\n406\n00:19:12.690 --> 00:19:13.790\n>> Tens of microseconds.\n\n407\n00:19:13.790 --> 00:19:17.150\n>> So, it's a weird unit of measurement,\nresults in really big numbers.\n\n408\n00:19:17.150 --> 00:19:19.840\nSince I cut that out,\nnow my metrics are almost readable.\n\n409\n00:19:19.840 --> 00:19:22.520\nIt's really quite simplified.\n\n410\n00:19:22.520 --> 00:19:24.470\nSo, you can really do some\nneat stuff with this.\n\n411\n00:19:24.470 --> 00:19:26.920\nLike, I could,\nmaybe we just care about bandwidth,\n\n412\n00:19:26.920 --> 00:19:29.700\nwe want EIGRP to work more like OSPF,\nright.\n\n413\n00:19:29.700 --> 00:19:34.670\nSo if I look at my formula here,\nif I just care about bandwidth,\n\n414\n00:19:34.670 --> 00:19:38.650\nI could set K1 to a 1, so\n1 times bandwidth is just bandwidth.\n\n415\n00:19:38.650 --> 00:19:40.510\nAnd I could set everything else to a 0.\n\n416\n00:19:40.510 --> 00:19:44.490\nAnd now bandwidth will be literally\nthe only value that I use.\n\n417\n00:19:44.490 --> 00:19:47.330\nSo if I come in here and\nI leave K1 as a 1 and\n\n418\n00:19:47.330 --> 00:19:51.040\nchange all of my others to zeros, right?\n\n419\n00:19:51.040 --> 00:19:52.740\nAnd then just rocket\nthrough my routers and\n\n420\n00:19:52.740 --> 00:19:57.170\nset that, that's really going\nto impact some math there.\n\n421\n00:19:57.170 --> 00:19:58.710\nNow bandwidth is another interesting one,\n\n422\n00:19:58.710 --> 00:20:00.480\nbecause bandwidth is not\njust a straight number.\n\n423\n00:20:00.480 --> 00:20:01.270\nCisco says that,\n\n424\n00:20:01.270 --> 00:20:04.410\nthey say like, oh, your bandwidth is\njust represented here in kilobits.\n\n425\n00:20:04.410 --> 00:20:07.900\nBut it's actually represented\nwith like a reference bandwidth\n\n426\n00:20:07.900 --> 00:20:12.530\ndivided by what your actual\nbandwidth is multiplied by 256.\n\n427\n00:20:12.530 --> 00:20:15.540\nSo you end with a number that\nisn't truly your bandwidth,\n\n428\n00:20:15.540 --> 00:20:17.470\nand you might ask yourself,\nwhy multiply it by 256?\n\n429\n00:20:17.470 --> 00:20:22.200\nAnd the reason is, sometimes you can have\nbandwidths that are really close to each\n\n430\n00:20:22.200 --> 00:20:26.440\nother and it comes down to the decimals,\nand EIGRP doesn't track decimals.\n\n431\n00:20:26.440 --> 00:20:30.340\nSo by multiplying it by 256 it turns it\ninto a bigger number that allows those\n\n432\n00:20:30.340 --> 00:20:33.880\ndecimals to be represented as a whole\nnumber, and it kinda solves that problem,\n\n433\n00:20:33.880 --> 00:20:35.100\nso that's why it does it.\n\n434\n00:20:35.100 --> 00:20:37.810\nBut now my metrics are going\nto be a good bit different\n\n435\n00:20:37.810 --> 00:20:39.990\nbecause I'm just paying\nattention to bandwidth.\n\n436\n00:20:39.990 --> 00:20:40.930\nSo when I come in here and\n\n437\n00:20:40.930 --> 00:20:46.400\ntake a look at my topology database,\nnow my metrics are kind of cleaner.\n\n438\n00:20:46.400 --> 00:20:47.160\nAnd here's a 10 megabit line.\n\n439\n00:20:47.160 --> 00:20:52.360\nYou can see where it's being multiplied\nby 256 and so I end up with this 256000.\n\n440\n00:20:52.360 --> 00:20:54.750\nAnd some of these other ones\nare 1.544 megabit lines.\n\n441\n00:20:54.750 --> 00:20:56.860\nAnd they're being multiplied by 256, and\n\n442\n00:20:56.860 --> 00:21:01.140\nso I end up with these\nslightly more bizarre numbers.\n\n443\n00:21:01.140 --> 00:21:02.960\nSo this is all kind of coming back and\n\n444\n00:21:02.960 --> 00:21:05.780\nwe're just changing how\nthose metrics work.\n\n445\n00:21:05.780 --> 00:21:09.330\nNow, I'll tell you guys from a real world\nperspective, you're never gonna do this.\n\n446\n00:21:09.330 --> 00:21:13.040\nYou're never gonna change your K metrics\nbecause bandwidth and delay are good\n\n447\n00:21:13.040 --> 00:21:16.590\nenough, and EIGRP makes the best decisions\nof any routing protocol out there.\n\n448\n00:21:16.590 --> 00:21:17.630\nI'll say that hands down.\n\n449\n00:21:17.630 --> 00:21:21.090\nI don't normally choose EIGRP as\nmy routing protocol of choice.\n\n450\n00:21:21.090 --> 00:21:25.300\nI usually choose OSPF, but\nEIGRP does make better decisions.\n\n451\n00:21:25.300 --> 00:21:27.000\nIt's a smarter protocol, right?\n\n452\n00:21:27.000 --> 00:21:29.740\nSo leave it the way it is, right?\n\n453\n00:21:29.740 --> 00:21:32.450\nDon't put yourself in that user area\nwhere you can run into problems.\n\n454\n00:21:32.450 --> 00:21:34.190\nBut if you really do need\nto manipulate networks,\n\n455\n00:21:34.190 --> 00:21:37.950\nif reliability is truly key to you,\nor load is truly key to you,\n\n456\n00:21:37.950 --> 00:21:41.110\nand you want to factor that in,\nit supports it, you can turn it on.\n\n457\n00:21:41.110 --> 00:21:43.140\nYou just modify the weights.\n\n458\n00:21:43.140 --> 00:21:44.770\n>> All right.\nAny other best practices, Don,\n\n459\n00:21:44.770 --> 00:21:47.000\nespecially when dealing with\nthe metrics that we had to worry about?\n\n460\n00:21:47.000 --> 00:21:50.340\nWe already talked about the idea of making\nsure it's on every single router, but\n\n461\n00:21:50.340 --> 00:21:52.780\nanything else that we need\nto concern ourselves with?\n\n462\n00:21:52.780 --> 00:21:55.320\n>> Really just documentation and\nyou know it, document this stuff,\n\n463\n00:21:55.320 --> 00:21:58.970\nbecause every time you add a new router,\nyou gotta adjust those K metrics.\n\n464\n00:21:58.970 --> 00:21:59.930\nAnd it'll let you know right away.\n\n465\n00:21:59.930 --> 00:22:01.490\nYou'll start getting\nthose mismatch values or\n\n466\n00:22:01.490 --> 00:22:04.290\nthe warnings, but\nyou need to make sure you document it.\n\n467\n00:22:04.290 --> 00:22:06.360\nAnd make sure that the other network\nadmins in your environment know\n\n468\n00:22:06.360 --> 00:22:07.110\nabout it too.\n\n469\n00:22:07.110 --> 00:22:08.570\nCuz it's not a common thing.\n\n470\n00:22:08.570 --> 00:22:11.810\nWhen I go to work on an EIGRP network,\nI don't think, oh,\n\n471\n00:22:11.810 --> 00:22:13.050\nI wonder if they modify the K values.\n\n472\n00:22:13.050 --> 00:22:15.470\nI just assume that they're\nat the defaults, right?\n\n473\n00:22:15.470 --> 00:22:18.775\nAnd I do this stuff a lot,\nand I assume that.\n\n474\n00:22:18.775 --> 00:22:21.320\n>> [LAUGH]\n>> You know what happens when you\n\n475\n00:22:21.320 --> 00:22:22.250\nassume, right Ronnie?\n\n476\n00:22:22.250 --> 00:22:23.330\nThere's a saying about that.\n\n477\n00:22:23.330 --> 00:22:25.320\nBut just make sure that people are aware.\n\n478\n00:22:25.320 --> 00:22:26.950\nHey, we've manipulated those K values.\n\n479\n00:22:26.950 --> 00:22:28.590\nWe've changed the way these\ndecisions are being made.\n\n480\n00:22:28.590 --> 00:22:30.060\n>> All right,\n\n481\n00:22:30.060 --> 00:22:34.870\nso in this episode we've taken a look\nat EIGRP metrics or the K weights.\n\n482\n00:22:34.870 --> 00:22:36.770\nNot K weights, K values.\n\n483\n00:22:36.770 --> 00:22:39.470\nAnd we've actually taken a look\nat how we can manipulate them and\n\n484\n00:22:39.470 --> 00:22:43.440\nalso we saw the formula behind them as\nwell so that we can get different results.\n\n485\n00:22:43.440 --> 00:22:46.700\nRemember that the key here is to ensure\nthat they're actually the same across all\n\n486\n00:22:46.700 --> 00:22:48.670\nthe routers that we're running\ninside of our autonomous system,\n\n487\n00:22:48.670 --> 00:22:53.020\nor we're gonna actually get mismatches and\nthat's not gonna help us at all as well.\n\n488\n00:22:53.020 --> 00:22:56.020\nSo, that actually wraps it for\nour episode today.\n\n489\n00:22:56.020 --> 00:22:57.340\nThank you for watching.\n\n490\n00:22:57.340 --> 00:22:58.630\nI'm your host, Ronnie Wong.\n\n491\n00:22:58.630 --> 00:22:59.360\n>> And I'm Don Pezet.\n\n492\n00:22:59.360 --> 00:23:00.455\n>> And we'll see you next time.\n\n493\n00:23:00.455 --> 00:23:06.770\n[SOUND]\n\n",
          "vimeoId": "137401124"
        },
        {
          "description": "EIGRP for IPv6 is a configuration that shouldn't be ignored when preparing for the ROUTE exam. When Cisco created EIGRP they didn’t create it to handle only a single protocol, but created it as a framework capable of routing any protocol. Viewers will hear how to configure EIGRP running on top of IPv6 and also how it compares to what is normally seen with EIGRP.",
          "length": "1317",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/ccnproute/cisco-ccnproute300101-3-23-eigrp_for_ipv6-082715-1.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/ccnproute/cisco-ccnproute300101-3-23-eigrp_for_ipv6-082715-1-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/ccnproute/cisco-ccnproute300101-3-23-eigrp_for_ipv6-082715-1-sm.jpg",
          "title": "EIGRP for IPv6",
          "transcript": "WEBVTT\n\n1\n00:00:00.000 --> 00:00:10.492\n[MUSIC]\n\n2\n00:00:10.492 --> 00:00:14.440\n>> All right, welcome to another\ngreat episode here on ITProTV.\n\n3\n00:00:14.440 --> 00:00:18.300\nToday we're getting ready for\nour CCNP ROUTE exam, making sure that\n\n4\n00:00:18.300 --> 00:00:22.330\nwe actually have the knowledge that we\nneed before we sit down for that exam.\n\n5\n00:00:22.330 --> 00:00:26.090\nI'm your host, Ronnie Wong and\ntoday here with me to help us, Mr.\n\n6\n00:00:26.090 --> 00:00:27.310\nDon Pezet, how's it going?\n\n7\n00:00:27.310 --> 00:00:28.420\n>> It is going great, Ronnie.\n\n8\n00:00:28.420 --> 00:00:32.540\nExcited to be back on the show, and\nwe're gonna be diving into EIGRP,\n\n9\n00:00:32.540 --> 00:00:35.020\nwhich we've been covering\nthe last several episodes.\n\n10\n00:00:35.020 --> 00:00:39.100\nBut in this one we're gonna take\na look at EIGRP with IPv6, right,\n\n11\n00:00:39.100 --> 00:00:40.810\nInternet Protocol version 6.\n\n12\n00:00:40.810 --> 00:00:43.921\nThe bulk of the exam is still based\non IP version 4 because, well,\n\n13\n00:00:43.921 --> 00:00:46.045\nthat's what most people are running today.\n\n14\n00:00:46.045 --> 00:00:51.810\nBut if you haven't already you should have\nstarted deploying IPv6 in your network.\n\n15\n00:00:51.810 --> 00:00:53.860\nAnd that means eventually your routers and\n\n16\n00:00:53.860 --> 00:00:56.660\nyour dynamic routing protocols\nare gonna have to support that too.\n\n17\n00:00:56.660 --> 00:00:58.870\nSo we'll take a look at how EIGRP does it.\n\n18\n00:00:58.870 --> 00:01:03.670\nNow, Ronnie, I don't know if you remember,\nyou were in IT, but\n\n19\n00:01:03.670 --> 00:01:08.400\nIPv6, it came out really,\nit was proposed 15 or 16 years ago.\n\n20\n00:01:08.400 --> 00:01:12.750\nIt was a while back and\nit's only recently started to catch steam.\n\n21\n00:01:12.750 --> 00:01:15.230\nBut back then when it was coming out,\nI remember the panic.\n\n22\n00:01:15.230 --> 00:01:19.100\nPeople were like wow, none of my\nrouting protocols support IPv6 and\n\n23\n00:01:19.100 --> 00:01:21.950\nhow am I gonna roll this out if my\nrouting protocols don't support it?\n\n24\n00:01:21.950 --> 00:01:24.350\nAnd there were some exceptional protocols,\n\n25\n00:01:24.350 --> 00:01:28.120\nlike IS-IS,\nthat did support IPv6 from the beginning.\n\n26\n00:01:28.120 --> 00:01:34.560\nBut other protocols like OSPF and RIP,\nthey had to be rewritten from the ground\n\n27\n00:01:34.560 --> 00:01:40.390\nup to create for IPv6 cuz they were\nbuilt for IPv4, that's what they did.\n\n28\n00:01:40.390 --> 00:01:42.510\nBut EIGRP is special.\n\n29\n00:01:42.510 --> 00:01:46.370\nIt's a little different than the other\nones because when Cisco created EIGRP,\n\n30\n00:01:46.370 --> 00:01:48.660\nthey didn't create is as\na routing protocol for\n\n31\n00:01:48.660 --> 00:01:52.620\none Layer 3 protocol,\nthey created it as a framework.\n\n32\n00:01:52.620 --> 00:01:56.985\nA framework that was capable of\nrouting any protocol, IPv4, IPv6,\n\n33\n00:01:56.985 --> 00:01:59.690\nIPX/SPX, what are some of the other ones?\n\n34\n00:01:59.690 --> 00:02:01.340\nThere's a bunch.\n>> AppleTalk and everything.\n\n35\n00:02:01.340 --> 00:02:03.480\n>> Yeah, there's a ton that it can do.\n\n36\n00:02:03.480 --> 00:02:05.700\nAnd that makes it really, really powerful.\n\n37\n00:02:05.700 --> 00:02:09.820\nSo when IPv6 came out it wasn't a matter\nof saying, oh we've gotta rewrite EIGRP.\n\n38\n00:02:09.820 --> 00:02:13.570\nIt was just a matter of saying hey,\nwe need to write a module for\n\n39\n00:02:13.570 --> 00:02:16.980\nEIGRP that we can stick on and\nnow it'll do it.\n\n40\n00:02:16.980 --> 00:02:18.440\nAnd that's exactly what they did.\n\n41\n00:02:18.440 --> 00:02:24.568\nSo EIGRP, it's not a new version, it just\nhas a module that allows it to route IPv6.\n\n42\n00:02:24.568 --> 00:02:28.300\nThe positive side of that is that\nit's pretty easy to implement.\n\n43\n00:02:28.300 --> 00:02:31.220\nAll the commands are pretty much\nthe same as what we're used to.\n\n44\n00:02:32.420 --> 00:02:35.060\nThe negative side of it is that some of\nthe commands are a little bit different,\n\n45\n00:02:35.060 --> 00:02:36.470\nwe do have to get used to that.\n\n46\n00:02:36.470 --> 00:02:39.660\nBut it did make it one of the earlier\nprotocols to support IPv6, and it's not so\n\n47\n00:02:39.660 --> 00:02:42.130\npainful to get deployed.\n\n48\n00:02:42.130 --> 00:02:45.000\nSo let me show you guys\nan example of how this works and\n\n49\n00:02:45.000 --> 00:02:46.880\nwe'll kinda get it set\nup in our environment.\n\n50\n00:02:46.880 --> 00:02:47.890\nI've got my routers here,\n\n51\n00:02:47.890 --> 00:02:50.500\nthe same topology that we've\nbeen working with in this show.\n\n52\n00:02:50.500 --> 00:02:54.094\nAnd if I take a look at\nmy headquarters router,\n\n53\n00:02:54.094 --> 00:02:57.331\nwe've been working with IPv4, right?\n\n54\n00:02:57.331 --> 00:03:01.830\nSo I usually do a show ip interface brief\nand we take a look at all those addresses.\n\n55\n00:03:01.830 --> 00:03:03.620\nBut the world of IPv6 is different.\n\n56\n00:03:04.730 --> 00:03:11.097\nUsually the commands are the same, except\nanywhere you'd say ip, you just say ipv6.\n\n57\n00:03:11.097 --> 00:03:15.959\nSo if I do like a show ipv6 interface\nbrief, I get this summary there and\n\n58\n00:03:15.959 --> 00:03:18.850\nit's IPv6 addresses instead.\n\n59\n00:03:18.850 --> 00:03:21.450\nAnd as I look down my interfaces,\n\n60\n00:03:21.450 --> 00:03:24.240\nI'll see where I've got some\nIPv6 addresses assigned.\n\n61\n00:03:24.240 --> 00:03:26.747\nI used nice short ones so\nI wouldn't have to type a ton, but\n\n62\n00:03:26.747 --> 00:03:27.986\nyou might have longer ones.\n\n63\n00:03:27.986 --> 00:03:32.987\nAnd you'll see how I've got my\nunicast address, my unique address,\n\n64\n00:03:32.987 --> 00:03:36.900\nbut I've also got my\nlink-local address right here.\n\n65\n00:03:36.900 --> 00:03:38.630\nThat's being automatically generated.\n\n66\n00:03:38.630 --> 00:03:42.237\nSo you pretty much expect to always\nsee two addresses on your interfaces.\n\n67\n00:03:42.237 --> 00:03:48.590\nAnd that's important because, remember,\nEIGRP is a distance vector protocol.\n\n68\n00:03:48.590 --> 00:03:53.150\nSo, when you're firing up EIGRP on\na router, what other routers does it see?\n\n69\n00:03:53.150 --> 00:03:54.060\n>> Only it's neighbor.\n\n70\n00:03:54.060 --> 00:03:56.820\n>> Only it's neighbors,\nthe people it's directly connected to.\n\n71\n00:03:56.820 --> 00:04:00.280\nIn other words, people it can talk\nto with a link-local address.\n\n72\n00:04:00.280 --> 00:04:02.580\nIt doesn't see anybody beyond that.\n\n73\n00:04:02.580 --> 00:04:06.190\nSo when we start looking at EIGRP\nrelationships, a lot of times those\n\n74\n00:04:06.190 --> 00:04:08.750\nneighbor relationships are built\naround that link-local address.\n\n75\n00:04:08.750 --> 00:04:10.680\nSo we need to be aware of those,\neven though we don't set them,\n\n76\n00:04:10.680 --> 00:04:12.400\neven though we don't\nnecessarily care about them,\n\n77\n00:04:12.400 --> 00:04:14.000\nthey are being used in the background.\n\n78\n00:04:15.120 --> 00:04:18.060\nNow, when Cisco updated\nthe EIGRP to support IPv6,\n\n79\n00:04:18.060 --> 00:04:20.820\nthey did change a few little things.\n\n80\n00:04:20.820 --> 00:04:24.640\nThere were some things that just never\nquite worked all that well in EIGRP.\n\n81\n00:04:24.640 --> 00:04:27.400\nFor example,\nwhen I enable the EIGRP process,\n\n82\n00:04:27.400 --> 00:04:28.720\nwe set an autonomous system number.\n\n83\n00:04:28.720 --> 00:04:32.180\nAnd then we would use the network commands\nto specify which networks we wanted\n\n84\n00:04:32.180 --> 00:04:33.210\nto advertise.\n\n85\n00:04:33.210 --> 00:04:35.850\nWell, what was that network\ncommand built around?\n\n86\n00:04:35.850 --> 00:04:40.160\nIt was originally built around IGRP and\nclassful networks.\n\n87\n00:04:40.160 --> 00:04:42.835\nAnd so, it really wasn't\ndesigned to handle subnets,\n\n88\n00:04:42.835 --> 00:04:44.870\nvariable-length subnet mask,\nand all that stuff.\n\n89\n00:04:44.870 --> 00:04:49.710\nAnd so when IGRP was updated to EIGRP,\nthey added support for\n\n90\n00:04:49.710 --> 00:04:54.290\nthat wildcard mask or subnet mask after\na network to be able to get a little more\n\n91\n00:04:54.290 --> 00:04:59.160\ngranular, to be able to be non-classful,\nor classless.\n\n92\n00:04:59.160 --> 00:05:03.468\nSo that was all kinda added on and\nit was kludgy and not really convenient.\n\n93\n00:05:03.468 --> 00:05:07.021\nSo in IPv6, Cisco said let's just\ndo away with that network command,\n\n94\n00:05:07.021 --> 00:05:08.275\nlet's just ditch that.\n\n95\n00:05:08.275 --> 00:05:15.240\nAnd instead, we'll have people enable\nEIGRP on the individual interfaces.\n\n96\n00:05:15.240 --> 00:05:18.260\nAnd then we can just read the subnet mask\nright there off the interface itself and\n\n97\n00:05:18.260 --> 00:05:21.660\nbe done with it, no clunky network\ncommands or anything like that.\n\n98\n00:05:21.660 --> 00:05:23.920\nSo that was one thing they did.\n\n99\n00:05:23.920 --> 00:05:26.478\nThere is another thing they\nchanged that's kinda nice.\n\n100\n00:05:26.478 --> 00:05:31.950\nIf you've worked with OSPF, you know in\nOSPF that every router has a router ID.\n\n101\n00:05:31.950 --> 00:05:37.350\nAnd that's important because I might learn\nmore than one path to the same router.\n\n102\n00:05:37.350 --> 00:05:40.900\nAnd because it has a router ID,\nI'll know it's the same router.\n\n103\n00:05:40.900 --> 00:05:42.620\nBut that doesn't happen in EIGRP.\n\n104\n00:05:42.620 --> 00:05:44.570\nIn EIGRP,\n\n105\n00:05:44.570 --> 00:05:49.330\nif I have two connections to a neighbor,\nI view that as two different neighbors.\n\n106\n00:05:49.330 --> 00:05:51.940\nI don't realize that's the same neighbor.\n\n107\n00:05:51.940 --> 00:05:55.198\nEIGRP uses a different\nID on every single link.\n\n108\n00:05:55.198 --> 00:06:00.720\nSo with IPv6, Cisco introduced the ability\nto set a router ID, and you have to do it.\n\n109\n00:06:00.720 --> 00:06:04.006\nIf you don't set a router ID,\nEIGRP actually doesn't work, in IPv6.\n\n110\n00:06:04.006 --> 00:06:08.358\nSo we've gotta set that router ID, and\nnow your router will be able to know,\n\n111\n00:06:08.358 --> 00:06:11.418\nhey, I see the same router\nID on two different links,\n\n112\n00:06:11.418 --> 00:06:13.804\nthat's a connection to the same router.\n\n113\n00:06:13.804 --> 00:06:15.530\nAnd that's pretty important.\n\n114\n00:06:15.530 --> 00:06:19.234\nWe need to be able to know that because\nit can help with loop detection and\n\n115\n00:06:19.234 --> 00:06:20.234\nthings like that.\n\n116\n00:06:20.234 --> 00:06:23.055\nCuz you might learning your own route\nright back from the router that's on\n\n117\n00:06:23.055 --> 00:06:24.110\nthe other side of the link.\n\n118\n00:06:24.110 --> 00:06:27.540\nLet me show you what I'm talking about cuz\nI guess it does get a little confusing.\n\n119\n00:06:27.540 --> 00:06:30.730\nLet's take my headquarters and\nmy Branch 1 routers right here.\n\n120\n00:06:30.730 --> 00:06:35.330\nThose two guys have two serial\nlinks between them for redundancy.\n\n121\n00:06:35.330 --> 00:06:37.300\nSo I've got these two serial links.\n\n122\n00:06:37.300 --> 00:06:40.430\nWell, remember some rules,\nthings like split-horizon.\n\n123\n00:06:40.430 --> 00:06:44.230\nSplit horizon says if I learn\na route on an interface,\n\n124\n00:06:44.230 --> 00:06:47.000\nI'm not gonna advertise it back out\nthe same interface, it doesn't make sense.\n\n125\n00:06:47.000 --> 00:06:51.510\nWhy would I tell somebody about\na network that they told me.\n\n126\n00:06:51.510 --> 00:06:53.080\nThe example I always give is a joke.\n\n127\n00:06:53.080 --> 00:06:55.450\nIf I tell Ronnie a joke,\ndoes it make sense for\n\n128\n00:06:55.450 --> 00:06:57.890\nRonnie to tell me that same joke?\n\n129\n00:06:57.890 --> 00:07:00.300\nI'm the one that told him, right,\nso it doesn't make any sense.\n\n130\n00:07:00.300 --> 00:07:02.270\nThat's what split-horizon prevents.\n\n131\n00:07:02.270 --> 00:07:07.110\nWell, if I have two links,\nsplit-horizon starts to break, right.\n\n132\n00:07:07.110 --> 00:07:12.230\nBranch 1 could be telling headquarters\nabout a network on this link here.\n\n133\n00:07:12.230 --> 00:07:15.697\nAnd then headquarters advertises\nout its other links which includes\n\n134\n00:07:15.697 --> 00:07:19.834\nthe second link back to Branch 1, and\nBranch 1 learns the same route back again.\n\n135\n00:07:19.834 --> 00:07:24.288\nNow, that's not normally a problem\nbecause it's gonna have a worst metric.\n\n136\n00:07:24.288 --> 00:07:27.150\nThe metric's gonna be taking into\naccount that second line, so\n\n137\n00:07:27.150 --> 00:07:29.300\nit's gonna have a higher delay.\n\n138\n00:07:29.300 --> 00:07:31.828\nBandwidth will probably be the same\nif these two lines are identical.\n\n139\n00:07:31.828 --> 00:07:35.757\nBut delay, at least, will be different so\nI'll prefer one link over the other.\n\n140\n00:07:35.757 --> 00:07:39.360\nBut, what happens if the first link fails?\n\n141\n00:07:39.360 --> 00:07:42.960\nI might actually see that network coming\nback here, not the link necessarily,\n\n142\n00:07:42.960 --> 00:07:45.850\nif this link down here fails for\nthis network.\n\n143\n00:07:45.850 --> 00:07:49.240\nThat network was being advertised out\nto headquarters and coming back to me.\n\n144\n00:07:49.240 --> 00:07:51.891\nI might think that headquarters has\na valid link to get to this network when\n\n145\n00:07:51.891 --> 00:07:52.416\nthey don't.\n\n146\n00:07:52.416 --> 00:07:55.949\nAnd I might start relaying traffic to\nheadquarters that shouldn't be, and\n\n147\n00:07:55.949 --> 00:07:56.897\nthat's a problem.\n\n148\n00:07:56.897 --> 00:08:00.184\nAnd That was a problem EIGRP\njust had in the past and\n\n149\n00:08:00.184 --> 00:08:02.540\nit really didn't do much about it.\n\n150\n00:08:02.540 --> 00:08:07.960\nBasically, when that route came back,\nif the metric was higher, great.\n\n151\n00:08:07.960 --> 00:08:09.080\nYou know, we just wouldn't pick it.\n\n152\n00:08:09.080 --> 00:08:12.961\nAnd if a failure happened that route might\nbecome a feasible successor for a brief\n\n153\n00:08:12.961 --> 00:08:17.201\nmoment until it gets removed, right poison\nreverse normally takes care of it, right.\n\n154\n00:08:17.201 --> 00:08:21.025\nOr sometimes, if the metrics work out, the\nadvertised distance coming in here might\n\n155\n00:08:21.025 --> 00:08:23.997\nbe higher than the the feasible\ndistance we've got back here, and\n\n156\n00:08:23.997 --> 00:08:25.880\nwe'll throw it out for that too, right.\n\n157\n00:08:25.880 --> 00:08:29.597\nThough that's another loop prevention\nmechanism, so there's things that fix it.\n\n158\n00:08:29.597 --> 00:08:33.576\nBut in IPv6 we don't have to worry about\nthat because headquarters can look at\n\n159\n00:08:33.576 --> 00:08:36.907\nthese two interfaces and\nsee the same router ID on the other side.\n\n160\n00:08:36.907 --> 00:08:40.547\nAnd it says, I just learned\nthis route on this interface,\n\n161\n00:08:40.547 --> 00:08:43.090\nthis first interface from router ID 1.\n\n162\n00:08:43.090 --> 00:08:47.270\nOn this second interface,\nmy neighbor's router ID 1.\n\n163\n00:08:47.270 --> 00:08:51.130\nSo don't advertise it back out, and\nwe stop the loop before it happens.\n\n164\n00:08:51.130 --> 00:08:53.250\nWe don't need to worry about\npoison reverse, splitter rise,\n\n165\n00:08:53.250 --> 00:08:53.890\nand all that stuff.\n\n166\n00:08:53.890 --> 00:08:56.620\nIt takes care of it just right\nthere thanks to the router ID.\n\n167\n00:08:56.620 --> 00:09:00.000\nSo it's a good addition,\nit's something they improved upon\n\n168\n00:09:00.000 --> 00:09:04.210\nnot something they were just\ntrying to fix for IPv6.\n\n169\n00:09:04.210 --> 00:09:07.720\nAll right, so if I wanna fire up IPv6,\nwell it's really not that hard.\n\n170\n00:09:07.720 --> 00:09:09.900\nI'm gonna simplify my\nnetwork a little bit here.\n\n171\n00:09:09.900 --> 00:09:13.110\nLet me turn some of these layers off and\n\n172\n00:09:13.110 --> 00:09:18.450\nbasically I'm gonna turn it on for\nmy Metro E connection, right?\n\n173\n00:09:18.450 --> 00:09:20.890\nSo I've got my headquarters over here.\n\n174\n00:09:20.890 --> 00:09:24.130\nAnd headquarters has a connection\nto a Metro Ethernet network.\n\n175\n00:09:24.130 --> 00:09:27.480\nAnd that Metro E network then has\nconnections out to each branch.\n\n176\n00:09:27.480 --> 00:09:28.760\nAnd every branch and\n\n177\n00:09:28.760 --> 00:09:32.310\nthe headquarters all have their own LAN,\nright, their own Local Area Network.\n\n178\n00:09:32.310 --> 00:09:34.400\nAnd I wanna use IPv6\nto route between them.\n\n179\n00:09:34.400 --> 00:09:38.240\nNow, I've got IPv4 addresses\nassigned here in my topology.\n\n180\n00:09:38.240 --> 00:09:40.570\nI need to assign IPv6 addresses first.\n\n181\n00:09:40.570 --> 00:09:42.710\nWell, to save some time,\nI did that before the show.\n\n182\n00:09:42.710 --> 00:09:45.067\nSo let me just update this diagram\nto reflect our new networks.\n\n183\n00:09:45.067 --> 00:09:50.206\nBasically, I took this Ethernet\nnetwork other here the Metro E and\n\n184\n00:09:50.206 --> 00:09:55.370\nI just turned that into\nthe 2001::0/64 network right?\n\n185\n00:09:55.370 --> 00:10:00.245\nSo I created a nice big network out there\nfor IPv6 and basically that's going to\n\n186\n00:10:00.245 --> 00:10:04.274\ncarry me through enough IPs to\nhandle what's out there, right.\n\n187\n00:10:04.274 --> 00:10:07.410\nSo I shouldn't need too\nmuch more than that.\n\n188\n00:10:07.410 --> 00:10:08.090\nNow, for\n\n189\n00:10:08.090 --> 00:10:12.490\nthe other networks, I kind of divided\nit a little bit differently, right.\n\n190\n00:10:12.490 --> 00:10:14.840\nSo if we take like this network here,\n\n191\n00:10:14.840 --> 00:10:19.430\nI basically made it 2001:1:0 like that,\nright?\n\n192\n00:10:19.430 --> 00:10:21.830\nSo, just kind of expanding\nthat network out and\n\n193\n00:10:21.830 --> 00:10:25.860\ntaking each of these other ones,\nI did 2001:2::0,\n\n194\n00:10:25.860 --> 00:10:29.386\nwhich I actually I guess left a colon\nout up here if I want to be accurate.\n\n195\n00:10:29.386 --> 00:10:32.910\nAnd then so on for\neach of these different branch networks,\n\n196\n00:10:32.910 --> 00:10:36.280\njust trying to get everything nice and\neasy to remember.\n\n197\n00:10:36.280 --> 00:10:39.097\nSo these are the networks\nI've created on my system and\n\n198\n00:10:39.097 --> 00:10:40.820\nI've got them in place already.\n\n199\n00:10:41.990 --> 00:10:44.040\nAnd the only problem is,\n\n200\n00:10:44.040 --> 00:10:49.160\nevery Cisco router that's out there\nsupports IPv6 and IPv4 right?\n\n201\n00:10:49.160 --> 00:10:50.300\nThey're dual stack.\n\n202\n00:10:50.300 --> 00:10:53.040\nAll the ones that are currently supported,\nif you're running H1 maybe not, but\n\n203\n00:10:53.040 --> 00:10:55.010\nall the ones that\nare currently supported do.\n\n204\n00:10:55.010 --> 00:10:59.300\nWhen I assign these IPs,right,\nif I jump over to my system.\n\n205\n00:10:59.300 --> 00:11:02.510\nAnd I do like a show IP interface brief,\nright,\n\n206\n00:11:02.510 --> 00:11:06.190\nthat's my IPv4 IPs and\nthey're all still there.\n\n207\n00:11:06.190 --> 00:11:09.590\nBut if I go into a show IPv6\ninterface brief, right,\n\n208\n00:11:09.590 --> 00:11:11.720\nthat'll give me my IPv6 information.\n\n209\n00:11:11.720 --> 00:11:14.730\nAnd I can see those two\nnetworks assigned right there.\n\n210\n00:11:14.730 --> 00:11:16.410\nAnd all I had to do was\ngo into the interface and\n\n211\n00:11:16.410 --> 00:11:17.400\nassign the address and that's it.\n\n212\n00:11:17.400 --> 00:11:18.540\nThe router already supports it.\n\n213\n00:11:18.540 --> 00:11:19.810\nIt's up and it's running IPv6.\n\n214\n00:11:19.810 --> 00:11:23.400\nIn fact, I should be able to ping the\nneighbors on the Metro E network, right?\n\n215\n00:11:23.400 --> 00:11:26.230\nSo I try and ping 2001::2 or 3 or 4,\n\n216\n00:11:26.230 --> 00:11:32.060\nthose are the branches and\nI can ping them just fine, all right.\n\n217\n00:11:32.060 --> 00:11:34.730\nAnd the reason is well\nI'm directly connected.\n\n218\n00:11:34.730 --> 00:11:37.890\nHeadquarters is plugged right\ninto the Ethernet Metro E and\n\n219\n00:11:37.890 --> 00:11:40.150\nit's able to hit those branches.\n\n220\n00:11:40.150 --> 00:11:45.560\nBut, even though IPv6 is enabled by\ndefault, a routing protocol isn't.\n\n221\n00:11:45.560 --> 00:11:47.340\nSo, I'm not learning their networks.\n\n222\n00:11:47.340 --> 00:11:50.380\nThey each have these private networks\nover here, and I don't know about those.\n\n223\n00:11:50.380 --> 00:11:53.760\nI can't see them on my system,\nbecause they're, well,\n\n224\n00:11:53.760 --> 00:11:55.210\nthey're not available to me, right?\n\n225\n00:11:55.210 --> 00:12:00.130\nIf I jump over here, and I do a show\nIP route, that's my IPv4 routes.\n\n226\n00:12:00.130 --> 00:12:04.080\nIf I do a show IPv6 route,\nI'll see my IPv6 routes,\n\n227\n00:12:04.080 --> 00:12:09.360\nand I only have connected and\nlocals, and that's it, right.\n\n228\n00:12:09.360 --> 00:12:10.930\nI'm not running a routing protocol.\n\n229\n00:12:10.930 --> 00:12:15.330\nIn IPv4, you would do show ip protocols,\nto see if you were running any protocols.\n\n230\n00:12:15.330 --> 00:12:18.220\nI can do a show IPv6 to do the same thing.\n\n231\n00:12:18.220 --> 00:12:21.170\nAnd when I run that I can see\nI'm doing neighbor discovery and\n\n232\n00:12:21.170 --> 00:12:23.240\ndirectly connected and that's it.\n\n233\n00:12:23.240 --> 00:12:25.180\nI'm not learning routes any other way.\n\n234\n00:12:25.180 --> 00:12:29.140\nI'm not able to pull in via EIGRP or\nwhatever.\n\n235\n00:12:29.140 --> 00:12:31.351\nSo, my next step is to put in the EIGRP so\n\n236\n00:12:31.351 --> 00:12:36.210\nI can learn the routes on the other\nside and get a nice, converged network.\n\n237\n00:12:36.210 --> 00:12:39.450\nNow configuring IPv6 is\na three step process.\n\n238\n00:12:39.450 --> 00:12:42.110\nThe first step is the most important,\nit's the easiest to forget.\n\n239\n00:12:42.110 --> 00:12:43.330\nWe're running dual stack.\n\n240\n00:12:43.330 --> 00:12:44.360\nOur router supports IPv6.\n\n241\n00:12:44.360 --> 00:12:45.530\nIt's working right now.\n\n242\n00:12:45.530 --> 00:12:47.060\nI was able to ping.\n\n243\n00:12:47.060 --> 00:12:50.840\nBut IPv6 routing is disabled by default.\n\n244\n00:12:50.840 --> 00:12:51.750\nSo I need to turn that on.\n\n245\n00:12:51.750 --> 00:12:58.100\nI'm gonna jump into my config,\nand I'll do IPv6 unicast-routing.\n\n246\n00:12:58.100 --> 00:12:59.290\nAll right, unicast routing.\n\n247\n00:12:59.290 --> 00:13:01.610\nThat's going to turn on\nthe routing sub layer, but\n\n248\n00:13:01.610 --> 00:13:03.710\nit doesn't actually turn\non a routing protocol.\n\n249\n00:13:03.710 --> 00:13:07.460\nIf I do a, show IPv6 route,\nnothing's different there.\n\n250\n00:13:07.460 --> 00:13:12.910\nIf I do a show IPv6 protocols,\nthen nothing is different there, either.\n\n251\n00:13:12.910 --> 00:13:15.760\nStill neighbors discovery in\ndirectly connected and that's it.\n\n252\n00:13:15.760 --> 00:13:18.450\nSo, nothing crazy.\n\n253\n00:13:18.450 --> 00:13:20.230\nNext, we need to enable EIGRP.\n\n254\n00:13:20.230 --> 00:13:22.920\nNow, the next step is kind of up to me.\n\n255\n00:13:22.920 --> 00:13:27.860\nYou can configure the protocol first and\nthen assign interfaces to it.\n\n256\n00:13:27.860 --> 00:13:30.870\nOr you can assign the interfaces first and\nthen do the protocol.\n\n257\n00:13:30.870 --> 00:13:31.510\nIt's up to you.\n\n258\n00:13:31.510 --> 00:13:33.570\nThe order doesn't necessarily matter.\n\n259\n00:13:33.570 --> 00:13:36.780\nI'm just kind of in the habit of enabling\nit on the interfaces first and so\n\n260\n00:13:36.780 --> 00:13:37.990\nthat's what I'm gonna do.\n\n261\n00:13:37.990 --> 00:13:43.070\nI'm gonna go into my Metro E interface and\nI'm gonna turn on EIGRP.\n\n262\n00:13:43.070 --> 00:13:46.530\nAnd the way we do it is by saying,\nipv6 eigrp and\n\n263\n00:13:46.530 --> 00:13:49.560\nthen the autonomous system number.\n\n264\n00:13:49.560 --> 00:13:51.470\nAnd I'll go ahead and do AS number one.\n\n265\n00:13:51.470 --> 00:13:54.130\nNow when I do that,\n\n266\n00:13:54.130 --> 00:13:59.240\nit enables EIGRP on this interface and\nit enables the protocol.\n\n267\n00:13:59.240 --> 00:14:02.000\nSo like if I do a show ipv6 protocols,\n\n268\n00:14:03.250 --> 00:14:06.090\nI can see that I haven't\nexited the interface yet.\n\n269\n00:14:06.090 --> 00:14:09.060\nBut it'll actually enable that\nrouting protocol and get it going.\n\n270\n00:14:09.060 --> 00:14:12.840\nBut the routing protocol is not going\nto work until I assign a router ID so\n\n271\n00:14:12.840 --> 00:14:14.479\nI'm gonna have to do that too.\n\n272\n00:14:14.479 --> 00:14:16.527\nBut let me finish assigning\nmy interfaces first and\n\n273\n00:14:16.527 --> 00:14:17.960\nthen we'll get that taken care of.\n\n274\n00:14:17.960 --> 00:14:22.140\nSo I'll jump over to E0/1 and\nI'm gonna do the same thing.\n\n275\n00:14:22.140 --> 00:14:24.290\nPutting it in autonomous\nsystem number one.\n\n276\n00:14:24.290 --> 00:14:25.970\nYou can have more than one AS number.\n\n277\n00:14:25.970 --> 00:14:28.840\nAnd you can even duplicate\nthe IPv4 AS number.\n\n278\n00:14:28.840 --> 00:14:30.730\nThey're separate autonomous\nsystems though, so\n\n279\n00:14:30.730 --> 00:14:34.770\nif you have an IPv4 AS1,\nthat's separate from your IPv6 AS1.\n\n280\n00:14:34.770 --> 00:14:39.280\nAll right, then I need to\nconfigure the actual protocol.\n\n281\n00:14:39.280 --> 00:14:45.415\nAnd to do that we say IPv6 router EIGRP 1.\n\n282\n00:14:45.415 --> 00:14:48.195\nAnd that's gonna take us\ninto that configuration and\n\n283\n00:14:48.195 --> 00:14:51.275\nnow we're pretty much ready to go,\nall right.\n\n284\n00:14:51.275 --> 00:14:53.985\nThere's really one thing that\nwe need to do in here and\n\n285\n00:14:53.985 --> 00:14:56.175\nthat is to configure the router ID.\n\n286\n00:14:56.175 --> 00:14:59.675\nIf I don't configure a router ID,\nit's gonna go ahead and grab one for\n\n287\n00:14:59.675 --> 00:15:01.315\nme in fact it's probably already\ndone it in the background.\n\n288\n00:15:01.315 --> 00:15:04.650\nWhere it will just grab the highest IP\naddress that you have on your system.\n\n289\n00:15:04.650 --> 00:15:06.430\nBut that's not normally what we want.\n\n290\n00:15:06.430 --> 00:15:10.150\nYou know, when you look at that,\nwhen you say show IPv6 protocols.\n\n291\n00:15:11.400 --> 00:15:13.890\nAnd you see how I'm running EIGRP now?\n\n292\n00:15:13.890 --> 00:15:16.690\nAnd sure enough,\nit grabbed an IP address, all right.\n\n293\n00:15:16.690 --> 00:15:18.790\nNow, it's gonna grab an IP address, and\n\n294\n00:15:18.790 --> 00:15:21.590\nthe problem here is it's an IPv4 address,\nright?\n\n295\n00:15:21.590 --> 00:15:24.070\nWell, this is one of the things\nthat we have to remember.\n\n296\n00:15:24.070 --> 00:15:28.070\nThe router ID used in EIGRP,\nit's not an IP address.\n\n297\n00:15:28.070 --> 00:15:29.860\nIt's just a 32 bit number.\n\n298\n00:15:29.860 --> 00:15:33.280\nIt needs a unique 32 bit number\nto identify this system.\n\n299\n00:15:33.280 --> 00:15:36.880\nAnd it figures, hey, what better thing to\nuse than the highest IP address we have?\n\n300\n00:15:36.880 --> 00:15:39.060\nAnd we'll use that, right.\n\n301\n00:15:39.060 --> 00:15:41.630\nBut I may not be running IPv4 at all.\n\n302\n00:15:41.630 --> 00:15:45.660\nI might be running strictly IPv6,\nin which case it's not gonna be able to\n\n303\n00:15:45.660 --> 00:15:48.440\ngenerate a router ID and\nthe Azure IP's not gonna work.\n\n304\n00:15:48.440 --> 00:15:50.792\nSo you might create a loop back and\nassign it to that or\n\n305\n00:15:50.792 --> 00:15:52.777\nyou might just assign an arbitrary number.\n\n306\n00:15:52.777 --> 00:15:55.936\nIt's a 32 bit number not an IP so\nyou can assign whatever you want.\n\n307\n00:15:55.936 --> 00:16:00.995\nWhen you're in here you can\nsay the EIGRP Router-ID and\n\n308\n00:16:00.995 --> 00:16:06.600\nthen any 32 bit number,\nI could say 0.0.0.1 right?\n\n309\n00:16:06.600 --> 00:16:08.350\nIs that a valid IP?\n\n310\n00:16:08.350 --> 00:16:09.110\nNo, you can't assign an IP to anybody.\n\n311\n00:16:09.110 --> 00:16:12.710\nYou can't have an IP address\nthat starts with zero, right?\n\n312\n00:16:12.710 --> 00:16:15.110\nI can't think of any\nsystem that supports that.\n\n313\n00:16:15.110 --> 00:16:19.040\nBut this isn't an IP, it's just a 32\nbit number so it takes it just fine.\n\n314\n00:16:19.040 --> 00:16:22.440\nAnd if I do a show IPv6 protocols and\n\n315\n00:16:22.440 --> 00:16:26.680\ntake a look at it,\nI can see my router ID is now just one.\n\n316\n00:16:26.680 --> 00:16:29.060\nSo this might be router number one and\n\n317\n00:16:29.060 --> 00:16:31.450\nnow I can see that it's got a router\nID of one and that makes sense.\n\n318\n00:16:31.450 --> 00:16:33.990\nJust think of a numbering\nscheme that makes sense\n\n319\n00:16:33.990 --> 00:16:36.210\nin your environment, all right?\n\n320\n00:16:36.210 --> 00:16:40.570\nSo I've got that router ID and\nfrom here I'm pretty good to go.\n\n321\n00:16:40.570 --> 00:16:43.300\nThere's not really much else I\nhave to configure on this router.\n\n322\n00:16:43.300 --> 00:16:47.500\nI do need to jump to my other routers and\ndo the same basic steps right?\n\n323\n00:16:47.500 --> 00:16:51.070\nI need to get them assigned and\nmaybe assign the router ID on those.\n\n324\n00:16:51.070 --> 00:16:51.930\nMaybe I don't worry about it.\n\n325\n00:16:51.930 --> 00:16:54.490\nI don't know.\nIt's up to me how I want to handle that,\n\n326\n00:16:54.490 --> 00:16:56.500\nso if I want to go in and,\n\n327\n00:16:56.500 --> 00:16:58.959\nwe'll just write a quick little\nscript to enable the other ones.\n\n328\n00:17:00.290 --> 00:17:03.450\nSo basically I'll go\ninto each of these and\n\n329\n00:17:03.450 --> 00:17:08.440\nI'll say IPv6 eigrp 1 and\nthen IPv6 eigrp 1.\n\n330\n00:17:08.440 --> 00:17:12.360\nSo I'm taking each interface,\nand assigning them to eigrp 1.\n\n331\n00:17:12.360 --> 00:17:17.780\nAnd then we'll do IPv6 router eigrp 1.\n\n332\n00:17:17.780 --> 00:17:21.240\nAnd then the router ID is\ngonna be a little tricky.\n\n333\n00:17:21.240 --> 00:17:22.990\nActually I should probably mention this.\n\n334\n00:17:22.990 --> 00:17:25.600\nSee how I left off the eigrp\nkeyword at the beginning there,\n\n335\n00:17:27.000 --> 00:17:31.740\nin every Cisco router, you can do\nit exactly like I did right here,\n\n336\n00:17:31.740 --> 00:17:38.350\nwhere I went into config and\nI went into IPv6 router eigrp 1.\n\n337\n00:17:38.350 --> 00:17:44.540\nAnd I said eigrp router-id and\nthen that number.\n\n338\n00:17:44.540 --> 00:17:46.660\nThat'll work on every Cisco router.\n\n339\n00:17:46.660 --> 00:17:49.130\nSome of the newest ones that\nare coming out right now,\n\n340\n00:17:49.130 --> 00:17:52.840\nsome of the ones that are running the 15.1\niOS, they've actually enabled it where you\n\n341\n00:17:52.840 --> 00:17:56.870\ncan leave the eigrp keyword off and\njust say router id.\n\n342\n00:17:56.870 --> 00:17:59.720\nThat's because you're already\nin the eigrp protocol, so\n\n343\n00:17:59.720 --> 00:18:01.830\nit kind of knows what\nyou're talking about.\n\n344\n00:18:01.830 --> 00:18:04.830\nThe reason they left that off originally\nwas, they didn't want it to be\n\n345\n00:18:04.830 --> 00:18:08.290\nconfused with ospf's router ID, but\nthey haven't really stuck to that.\n\n346\n00:18:08.290 --> 00:18:10.160\nSo on some newer routers\nyou can leave that off.\n\n347\n00:18:10.160 --> 00:18:14.210\nBut on every one you can leave\nthe eigrp keyword in there.\n\n348\n00:18:14.210 --> 00:18:16.950\nSo, to be on the safe side in\nmy script I'm gonna add that in.\n\n349\n00:18:16.950 --> 00:18:21.360\nBut I don't know the router ID, so I'm\nactually gonna stop my script right there.\n\n350\n00:18:21.360 --> 00:18:23.880\nAnd then I can take this and\npaste it into each of my routers so\n\n351\n00:18:23.880 --> 00:18:26.630\nI can assign a different\nrouter ID to each one.\n\n352\n00:18:26.630 --> 00:18:31.907\nSo, I can jump over here to branch one and\nI can paste that in and\n\n353\n00:18:31.907 --> 00:18:34.348\nI'll make it 0.0.0.2.\n\n354\n00:18:34.348 --> 00:18:37.760\nAnd oh, [LAUGH] what did I say was\nthe important one that's easy to\n\n355\n00:18:37.760 --> 00:18:39.090\nforget, right?\n\n356\n00:18:39.090 --> 00:18:41.230\nWhich is,\n>> Unicast?\n\n357\n00:18:41.230 --> 00:18:44.020\n>> Yeah, I probably need to add\nthat right here at the beginning.\n\n358\n00:18:44.020 --> 00:18:46.265\nSo I should watch my own videos.\n\n359\n00:18:46.265 --> 00:18:50.040\n[LAUGH] All right, so we'll do take two.\n\n360\n00:18:50.040 --> 00:18:53.180\nSo this guys is gonna be 0.0.0.2.\n\n361\n00:18:53.180 --> 00:18:54.970\nAnd I should have played that off better.\n\n362\n00:18:54.970 --> 00:18:58.228\nI actually intended to do\nthat to prove a point.\n\n363\n00:18:58.228 --> 00:19:01.080\n>> [LAUGH]\n>> But so yeah, it does show it.\n\n364\n00:19:01.080 --> 00:19:04.590\nThe routing protocol does not work\nunless you've got that assigned.\n\n365\n00:19:06.030 --> 00:19:07.500\nSo there we go, all right.\n\n366\n00:19:07.500 --> 00:19:08.570\nSo now I've got my routers set.\n\n367\n00:19:08.570 --> 00:19:10.710\nI've got nice little router\nIDs assigned to them.\n\n368\n00:19:10.710 --> 00:19:13.080\nI should be learning that information and\ngetting it back.\n\n369\n00:19:13.080 --> 00:19:14.510\nThings should be coming up and\nbeing happy.\n\n370\n00:19:14.510 --> 00:19:17.410\nLooks like I got a termination\ncuz I changed my router ID but\n\n371\n00:19:17.410 --> 00:19:19.290\nthe adjacencies\nare building right back up.\n\n372\n00:19:19.290 --> 00:19:23.159\nWhen you change your router ID, it does\ndump all your neighbor adjacencies cuz you\n\n373\n00:19:23.159 --> 00:19:25.640\nhave to rebuild them with a new ID so\nbe aware of that.\n\n374\n00:19:25.640 --> 00:19:30.272\nBut if I go back up here to\nmy headquarters router and\n\n375\n00:19:30.272 --> 00:19:37.490\nI do a show IPv6 route I can see that I am\nlearning those are the IGRP routes now.\n\n376\n00:19:37.490 --> 00:19:38.530\nSo there's 2001:2, 2001:3,\n\n377\n00:19:38.530 --> 00:19:42.320\nthose are routes that I didn't\nhave before that now I'm learning.\n\n378\n00:19:42.320 --> 00:19:43.900\nMy network is converging.\n\n379\n00:19:43.900 --> 00:19:49.130\nAnd if I do a show IPv6 eigrp neighbor,\nI can see my neighbors that are out there.\n\n380\n00:19:49.130 --> 00:19:52.230\nThere's the neighbors,\nI can see their link local address.\n\n381\n00:19:52.230 --> 00:19:55.330\nWe're on that same Metro E network.\n\n382\n00:19:55.330 --> 00:19:57.810\nWe all have 2001::0 network addresses.\n\n383\n00:19:57.810 --> 00:20:00.720\nBut I use link locals to talk to them,\nright?\n\n384\n00:20:00.720 --> 00:20:03.910\nSo I'm reaching out and talking to those\nrouters and starting to communicate,\n\n385\n00:20:03.910 --> 00:20:05.110\nstarting to exchange those routes.\n\n386\n00:20:05.110 --> 00:20:09.730\nSo as far as the configuration\ngoes it's almost identical,\n\n387\n00:20:09.730 --> 00:20:12.950\nas far as the functionality goes,\nit's almost identical to EIGRP and\n\n388\n00:20:12.950 --> 00:20:14.740\nIPV4 it's pretty simple.\n\n389\n00:20:14.740 --> 00:20:19.240\nThe key differences, you have to enable\nit on the interfaces individually and\n\n390\n00:20:19.240 --> 00:20:20.630\nyou can set a router ID.\n\n391\n00:20:20.630 --> 00:20:22.420\nBut after that, it's pretty much the same.\n\n392\n00:20:22.420 --> 00:20:24.830\nYou use the same show commands,\nthe troubleshooting steps are the same,\n\n393\n00:20:24.830 --> 00:20:26.850\nyour debug steps are the same.\n\n394\n00:20:26.850 --> 00:20:30.470\nIt's really just,\nanywhere you used IP now you use IPv6.\n\n395\n00:20:30.470 --> 00:20:31.510\nAnd that's that.\n\n396\n00:20:31.510 --> 00:20:33.760\nSo pretty straightforward.\n\n397\n00:20:33.760 --> 00:20:36.980\n>> Now Don, it looks like the hardest\npart is really remembering\n\n398\n00:20:36.980 --> 00:20:40.650\nto make sure you put that IPv6\non here instead of just IP.\n\n399\n00:20:40.650 --> 00:20:43.780\nSo it doesn't really seem\nthat super difficult.\n\n400\n00:20:43.780 --> 00:20:48.470\nNow when we start taking\na look at EIGRP for IPv6,\n\n401\n00:20:48.470 --> 00:20:51.990\nremember that we showed you the basic\nconfiguration on each of the routers.\n\n402\n00:20:51.990 --> 00:20:53.700\nAnd what you have to have\nto make sure that it works,\n\n403\n00:20:53.700 --> 00:20:56.600\nremember that IPv6 unicast-routing?\n\n404\n00:20:56.600 --> 00:21:00.140\nIf you don't have that, it doesn't matter\nif you actually try and run EIGRP or\n\n405\n00:21:00.140 --> 00:21:02.030\nnot, it should actually kinda yell at you.\n\n406\n00:21:02.030 --> 00:21:03.240\nYou don't have to worry about it.\n\n407\n00:21:03.240 --> 00:21:06.420\nWe also talked about the very fact that\nit's really not that different from\n\n408\n00:21:06.420 --> 00:21:08.820\nwhat we normally see in EIGRP.\n\n409\n00:21:08.820 --> 00:21:11.320\nSo Don,\nany other things that we need to remember?\n\n410\n00:21:11.320 --> 00:21:12.480\n>> I think that's basically it.\n\n411\n00:21:12.480 --> 00:21:15.709\nObviously you can go crazy with this\nstuff, you can do summary addresses,\n\n412\n00:21:15.709 --> 00:21:18.885\nyou can do stubs, you can do all those\nthings that you used to in IPv4, but\n\n413\n00:21:18.885 --> 00:21:20.985\nIt is really a duplicate\nof what you saw there, so\n\n414\n00:21:20.985 --> 00:21:24.470\nwe don't necessarily need to\nrehash through all of that.\n\n415\n00:21:24.470 --> 00:21:26.900\nThe key take away for\nthis is don't be intimidated by IPv6.\n\n416\n00:21:26.900 --> 00:21:30.040\nIt's really not that, yeah,\nthe addresses are bigger.\n\n417\n00:21:30.040 --> 00:21:31.600\nBut, I mean,\nyou could make them shorter like I did.\n\n418\n00:21:31.600 --> 00:21:32.820\nThat makes life really convenient.\n\n419\n00:21:32.820 --> 00:21:35.630\nRight?\nBut there's no reason to shy away from it.\n\n420\n00:21:35.630 --> 00:21:37.620\nGet ready for\nit cuz if you haven't deployed IPv6 yet.\n\n421\n00:21:37.620 --> 00:21:38.530\n>> It's coming.\n\n422\n00:21:38.530 --> 00:21:39.860\n>> You will be soon.\n\n423\n00:21:39.860 --> 00:21:41.380\nAnd it's definitely on the exams.\n\n424\n00:21:41.380 --> 00:21:42.952\nSo be aware.\n\n425\n00:21:42.952 --> 00:21:45.120\n>> All right, so\nthat wraps up our show for today.\n\n426\n00:21:45.120 --> 00:21:46.640\nThank you for watching.\n\n427\n00:21:46.640 --> 00:21:48.220\nI'm your host Ronnie Wong.\n\n428\n00:21:48.220 --> 00:21:48.810\n>> And I'm Don Pezet.\n\n429\n00:21:48.810 --> 00:21:50.350\n>> And we'll see you next time.\n\n430\n00:21:50.350 --> 00:21:56.520\n[MUSIC]\n\n",
          "vimeoId": "137513494"
        },
        {
          "description": "Packets are what are exchanged for OSPF adjacencies to be established in OSPF networks and understanding the different OSPF packet types is useful to know for understanding how OSPF works and also for the purposes of troubleshooting. Viewers will hear about the five primary OSPF packet types and see demonstrations on how to see the packets during the neighboring process.",
          "length": "1354",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/ccnproute/cisco-ccnproute300101-3-24-ospf_packet_types-082715-1.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/ccnproute/cisco-ccnproute300101-3-24-ospf_packet_types-082715-1-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/ccnproute/cisco-ccnproute300101-3-24-ospf_packet_types-082715-1-sm.jpg",
          "title": "OSPF Packet Types",
          "transcript": "WEBVTT\n\n1\n00:00:00.053 --> 00:00:10.383\n[MUSIC]\n\n2\n00:00:10.383 --> 00:00:14.130\nAll right, welcome to another\ngreat episode here on ITProTV.\n\n3\n00:00:14.130 --> 00:00:18.223\nToday we're taking a look at CCMP route\nand if you're getting ready for the exam,\n\n4\n00:00:18.223 --> 00:00:19.480\nthis is the show for you.\n\n5\n00:00:19.480 --> 00:00:22.580\nWe're gonna actually show you\na bunch of different stuff today.\n\n6\n00:00:22.580 --> 00:00:25.940\nI'm your host Ronnie Wong, and\nhere, Mr. CCMP, Don Pezet.\n\n7\n00:00:25.940 --> 00:00:27.310\nHow's it going?\n\n8\n00:00:27.310 --> 00:00:28.090\n>> It is going great, Ronnie.\n\n9\n00:00:28.090 --> 00:00:31.657\nExcited to be back on the show and excited\nto be jumping into a new topic, because\n\n10\n00:00:31.657 --> 00:00:36.505\nif you've been watching all these episodes\nin order, we spent a lot of time on EIGRP.\n\n11\n00:00:36.505 --> 00:00:39.005\nNow it's time to take a look at OSPF,\nright?\n\n12\n00:00:39.005 --> 00:00:42.665\nOSPF, the Open Shortest Path First\nprotocol.\n\n13\n00:00:42.665 --> 00:00:44.646\nI almost said algorithm.\n\n14\n00:00:44.646 --> 00:00:46.805\n[LAUGH] Cuz the algorithm there\nruns the Dijkstra algorithm,\n\n15\n00:00:46.805 --> 00:00:47.950\nthat's a kind of cool name too.\n\n16\n00:00:47.950 --> 00:00:50.950\nBut the OSPF protocol is\n\n17\n00:00:50.950 --> 00:00:55.110\nprobably the most popular routing\nprotocol in the entire world.\n\n18\n00:00:55.110 --> 00:00:57.540\nAnd that's because it's an open standard.\n\n19\n00:00:57.540 --> 00:01:00.374\nAnybody's equipment can be\ndeveloped to support it and run it,\n\n20\n00:01:00.374 --> 00:01:01.490\nand they certainly do.\n\n21\n00:01:01.490 --> 00:01:05.040\nSo if you're trying to interoperate\nbetween Cisco equipment and\n\n22\n00:01:05.040 --> 00:01:07.470\nother vendors, well, you can with OSPF.\n\n23\n00:01:07.470 --> 00:01:09.230\nYou can't with EIRGP.\n\n24\n00:01:09.230 --> 00:01:10.580\nThat's why OSPF's so popular.\n\n25\n00:01:10.580 --> 00:01:15.590\n>> Now Don, I've heard you call this\nthe 800-pound monkey in the room as far as\n\n26\n00:01:15.590 --> 00:01:16.730\nprotocols go.\n\n27\n00:01:16.730 --> 00:01:17.620\nWhy is that?\n\n28\n00:01:17.620 --> 00:01:20.880\n>> Well, it really does come\ndown to just how powerful it is.\n\n29\n00:01:20.880 --> 00:01:25.482\nOSPF can do a great job synchronizing\nroutes between five routers.\n\n30\n00:01:25.482 --> 00:01:27.070\nRight, it can do a great job for that.\n\n31\n00:01:27.070 --> 00:01:29.345\nBut it can also do a great job\nsynchronizing routes between\n\n32\n00:01:29.345 --> 00:01:30.290\n5,000 routers.\n\n33\n00:01:30.290 --> 00:01:34.530\nIn fact, OSPF is robust enough that it\ncould be used to route the entire Internet\n\n34\n00:01:34.530 --> 00:01:35.510\nin place of BGP.\n\n35\n00:01:35.510 --> 00:01:37.270\nRight?\nWe don't have to have BGP.\n\n36\n00:01:37.270 --> 00:01:39.850\nSo that's an example of\nhow powerful it can be.\n\n37\n00:01:39.850 --> 00:01:40.580\nRight?\n\n38\n00:01:40.580 --> 00:01:41.690\nMost of us don't need that, right?\n\n39\n00:01:41.690 --> 00:01:42.870\nMost of us need a much smaller set.\n\n40\n00:01:42.870 --> 00:01:46.460\nAnd in fact, for these shows, we should\nprobably start out a little bit small and\n\n41\n00:01:46.460 --> 00:01:48.180\nwork our way up to those\nbigger environments.\n\n42\n00:01:48.180 --> 00:01:50.670\nSo we can see exactly\nhow powerful this is.\n\n43\n00:01:50.670 --> 00:01:52.565\nWell, I wanna start off\nwith a really simple topic,\n\n44\n00:01:52.565 --> 00:01:56.720\nwhich is how our OSPF\nrouters talk to each other.\n\n45\n00:01:56.720 --> 00:01:59.000\nWhen you have two routers\nthat are running OSPF,\n\n46\n00:01:59.000 --> 00:02:01.270\nthey need to exchange some information.\n\n47\n00:02:01.270 --> 00:02:06.750\nAnd when they do that, they do it with\none of five different OSPF packet types.\n\n48\n00:02:06.750 --> 00:02:09.670\nAnd so we need to understand\nthe different packet types to kind of see\n\n49\n00:02:09.670 --> 00:02:11.760\nwhat it is that our routers\nare sending back and forth.\n\n50\n00:02:11.760 --> 00:02:15.360\nAnd this is useful to know, first off,\njust to understand how OSPF works.\n\n51\n00:02:15.360 --> 00:02:18.150\nBut it's also useful to know\nbecause we can use it for\n\n52\n00:02:18.150 --> 00:02:20.910\ntroubleshooting and kind of getting\nsome information out of it there.\n\n53\n00:02:20.910 --> 00:02:22.460\nSo, let's take a look at that.\n\n54\n00:02:22.460 --> 00:02:26.160\nNow, if I take two routers and\nI configure them for OSPF,\n\n55\n00:02:26.160 --> 00:02:28.870\nthey're gonna start\nexchanging information, and\n\n56\n00:02:28.870 --> 00:02:31.360\nthat information's all gonna be\nhappening kinda in the background.\n\n57\n00:02:31.360 --> 00:02:33.280\nI don't really see that, right?\n\n58\n00:02:33.280 --> 00:02:35.730\nBut if we do some debugging,\nwe can see what's going on and\n\n59\n00:02:35.730 --> 00:02:39.130\nwe can get our first glimpse at\nthe packets that are occurring, right?\n\n60\n00:02:39.130 --> 00:02:40.670\nLet me show you what I mean.\n\n61\n00:02:40.670 --> 00:02:44.110\nSo, I'm gonna take my\nheadquarters router here, and\n\n62\n00:02:44.110 --> 00:02:45.890\nI'm gonna get into my configuration.\n\n63\n00:02:45.890 --> 00:02:49.690\nAnd I'll just configure some quick and\neasy OSPF for\n\n64\n00:02:49.690 --> 00:02:54.330\nmaybe two interfaces,\nnothing too crazy or drastic here.\n\n65\n00:02:54.330 --> 00:02:57.440\nSo, if I do a, let's see,\nhow do I wanna go about this?\n\n66\n00:02:57.440 --> 00:03:00.860\nWe'll go ahead and do router OSPF 1 and\n\n67\n00:03:00.860 --> 00:03:05.390\nthen I can do my network statement to tell\nit what networks I want to have going on,\n\n68\n00:03:05.390 --> 00:03:08.170\nbut for\nright now I'm just gonna set a router ID.\n\n69\n00:03:08.170 --> 00:03:12.030\nAnd I always like to turn on OSPF\non the individual interfaces.\n\n70\n00:03:12.030 --> 00:03:14.960\nYou can jump into an interface and\nturn it on there, and so\n\n71\n00:03:14.960 --> 00:03:17.306\nI can take an interface and\nstick it into area 0.\n\n72\n00:03:17.306 --> 00:03:20.342\nActually, I think I need to say area 0.\n\n73\n00:03:20.342 --> 00:03:24.750\n[LAUGH] I need to say the process and\nthen tell it area 0.\n\n74\n00:03:24.750 --> 00:03:26.140\nEventually I'll get my command right.\n\n75\n00:03:26.140 --> 00:03:28.880\nSo I can take that interface and\nstick it into area 0.\n\n76\n00:03:28.880 --> 00:03:32.524\nI can jump into my next interface and\nI can do the same thing, and so\n\n77\n00:03:32.524 --> 00:03:34.790\nI'm just popping those right in there.\n\n78\n00:03:34.790 --> 00:03:39.650\nSo in three quick commands, we've got OSPF\nconfigured and since I had some errors in\n\n79\n00:03:39.650 --> 00:03:42.800\nthere, let me pull that config backup so\nyou guys can see it clean.\n\n80\n00:03:42.800 --> 00:03:45.210\nOn each interface,\nI wanted to participate in OSPF,\n\n81\n00:03:45.210 --> 00:03:50.840\nI did ip ospf followed by that\nprocess number, area 0, right?\n\n82\n00:03:50.840 --> 00:03:55.680\nAnd then I went beyond that, and\nI turned on OSPF itself, and\n\n83\n00:03:55.680 --> 00:03:58.450\nI didn't really specify anything\nthere beyond a router ID, right?\n\n84\n00:03:58.450 --> 00:04:02.790\nI just said router ospf 1, and then what\nI wanted that router ID to be, okay?\n\n85\n00:04:02.790 --> 00:04:05.090\nNow, on this router, I'm gonna do a debug.\n\n86\n00:04:05.090 --> 00:04:07.290\nAnd when you go to debug OSPF,\n\n87\n00:04:07.290 --> 00:04:10.210\nyou'll see there's a number of\ndifferent things that we can debug.\n\n88\n00:04:10.210 --> 00:04:12.020\nI'm talking about\nthe packets in this episode.\n\n89\n00:04:12.020 --> 00:04:14.150\nSo I'm gonna do a debug ip ospf packet.\n\n90\n00:04:15.152 --> 00:04:19.150\nNow, my router, even though it's\nthe only one on my network running OSPF,\n\n91\n00:04:19.150 --> 00:04:22.442\nit is going to start\ntransmitting some packets.\n\n92\n00:04:22.442 --> 00:04:24.385\nAnd that's because it's trying\nto do neighbor discovery,\n\n93\n00:04:24.385 --> 00:04:27.665\ntrying to find other OSPF\nrouters that are out there.\n\n94\n00:04:27.665 --> 00:04:28.365\nOkay?\n\n95\n00:04:28.365 --> 00:04:29.675\nBut there's nobody out there.\n\n96\n00:04:29.675 --> 00:04:31.285\nSo I'm not gonna be getting anything back.\n\n97\n00:04:31.285 --> 00:04:33.465\nSo I'm not gonna see a whole\nheck of a lot action on this,\n\n98\n00:04:33.465 --> 00:04:35.475\nuntil I start to configure\nsome other routers.\n\n99\n00:04:35.475 --> 00:04:36.192\nAll right.\n\n100\n00:04:36.192 --> 00:04:39.272\nI'm gonna take,\nwe'll do branch 1, this guy,\n\n101\n00:04:39.272 --> 00:04:43.222\nand I'm gonna configure OSPF on this one.\n\n102\n00:04:43.222 --> 00:04:45.832\nNow if I do a show ip protocols,\n\n103\n00:04:45.832 --> 00:04:48.352\nI can see that branch 1 is\nnot running any protocols.\n\n104\n00:04:48.352 --> 00:04:51.052\nAnd if I do a show ip route,\nit's only got local and\n\n105\n00:04:51.052 --> 00:04:54.822\ndirectly connected routes and\nthat's it, right?\n\n106\n00:04:54.822 --> 00:04:58.690\nIf I jump into config,\nI can do some router ospf 1,\n\n107\n00:04:58.690 --> 00:05:02.180\nI'll give it a router-id of 2.2.2.2.\n\n108\n00:05:02.180 --> 00:05:05.828\nAnd I'll get into its interfaces and\n\n109\n00:05:05.828 --> 00:05:11.235\nadd those into area 0,\njust like on the other one.\n\n110\n00:05:11.235 --> 00:05:13.965\nOkay, now I can see some stuff\nhappening in the background.\n\n111\n00:05:13.965 --> 00:05:17.335\nSee how I just built up a neighbor\nrelationship with 1.1.1.1.\n\n112\n00:05:17.335 --> 00:05:18.815\nThat was headquarters, right?\n\n113\n00:05:18.815 --> 00:05:20.245\nAnd it's gone from loading to full.\n\n114\n00:05:20.245 --> 00:05:22.915\nThat means I got a full communication\nbetween me and headquarters.\n\n115\n00:05:22.915 --> 00:05:25.525\nWe should be exchanging\nroutes at this point.\n\n116\n00:05:25.525 --> 00:05:26.355\nOkay.\n\n117\n00:05:26.355 --> 00:05:31.770\nWell, what led to that was actually\nthe exchange of several packets.\n\n118\n00:05:31.770 --> 00:05:34.870\nAnd if I go back to headquarters,\nwhere I was debugging packets, and\n\n119\n00:05:34.870 --> 00:05:36.090\nhere I can see them.\n\n120\n00:05:36.090 --> 00:05:40.135\nOkay, so, right about here is\nwhere I started receiving.\n\n121\n00:05:40.135 --> 00:05:41.465\nSee, I've got that rcv, right?\n\n122\n00:05:41.465 --> 00:05:46.550\nI'm receiving packets from my neighbor and\ndifferent things are happening, all right?\n\n123\n00:05:46.550 --> 00:05:50.420\nIf you look at the next field over,\nt:1, all right,\n\n124\n00:05:50.420 --> 00:05:54.240\nthat's the type of packet I received,\nand there's 5 types.\n\n125\n00:05:54.240 --> 00:05:58.388\nAnd so this was type 1, here's a type 2,\nhere's a type 3, here's a type 4,\n\n126\n00:05:58.388 --> 00:05:59.580\nand here's a type 5.\n\n127\n00:05:59.580 --> 00:06:02.860\nI've received all 5 types of\npacket from that neighbor.\n\n128\n00:06:02.860 --> 00:06:04.860\nAnd several of them I\nreceive more than one, right?\n\n129\n00:06:04.860 --> 00:06:07.290\nLike here's another type four,\nso I got two of those.\n\n130\n00:06:07.290 --> 00:06:11.560\nHere's another type 1, and\nas it runs I'll continue to receive.\n\n131\n00:06:11.560 --> 00:06:15.760\nSee how now I'm just receiving these\ntype 1s over and over and over again.\n\n132\n00:06:15.760 --> 00:06:16.600\nRight?\n\n133\n00:06:16.600 --> 00:06:20.420\nEach of these are packets that have\na meaning, that have a purpose.\n\n134\n00:06:20.420 --> 00:06:25.072\nAnd it's not terribly clear here, if you\nremember from like EIGRP when we debugged\n\n135\n00:06:25.072 --> 00:06:28.793\nit, it was kinda nice because it said,\nthis is a hello, right, or\n\n136\n00:06:28.793 --> 00:06:30.670\nthis is an update, this a query.\n\n137\n00:06:30.670 --> 00:06:32.380\nIt actually had it written in there.\n\n138\n00:06:32.380 --> 00:06:36.120\nWell, in OSPF all we get is a t, right?\n\n139\n00:06:36.120 --> 00:06:38.510\nT:1 through 5.\n\n140\n00:06:38.510 --> 00:06:42.700\nAnd so we kinda have to know what\neach of those are, all right?\n\n141\n00:06:42.700 --> 00:06:48.360\nSo what I did is, to kinda help with this,\nis I took this standard debug output and\n\n142\n00:06:48.360 --> 00:06:50.690\nI made a little table,\nwhere did I put that thing?\n\n143\n00:06:50.690 --> 00:06:51.780\nHere.\n\n144\n00:06:51.780 --> 00:06:54.800\nWhere I took the standard debug output and\nI kinda broke it down\n\n145\n00:06:54.800 --> 00:06:59.510\ncomponent by component to explain what\nit is we're seeing in this debug output.\n\n146\n00:06:59.510 --> 00:07:02.810\nThe t part is what I care about,\nbut let's explain the rest of it.\n\n147\n00:07:02.810 --> 00:07:04.000\nWe start with a date.\n\n148\n00:07:04.000 --> 00:07:06.800\nSo this is the date and\ntime that we received it.\n\n149\n00:07:06.800 --> 00:07:11.312\nSo I received this on August 23rd\nat 8:34 A.M. and 44 seconds and\n\n150\n00:07:11.312 --> 00:07:16.645\n0.043 microseconds, so really detailed\nthere, or not micro, milliseconds.\n\n151\n00:07:17.745 --> 00:07:21.235\nThen I can see that OSPF is the protocol,\ngood to know.\n\n152\n00:07:21.235 --> 00:07:21.735\nAnd then [LAUGH]\n>> [LAUGH]\n\n153\n00:07:21.735 --> 00:07:22.575\n>> We received it.\n\n154\n00:07:22.575 --> 00:07:24.045\nThis is something that I got back.\n\n155\n00:07:24.045 --> 00:07:26.295\nThen we got v:2.\n\n156\n00:07:26.295 --> 00:07:28.875\nThat means version 2.\n\n157\n00:07:28.875 --> 00:07:32.183\nOSPF version 2 routes IPv4.\n\n158\n00:07:32.183 --> 00:07:36.170\nOSPF version 3 routes IPv6.\n\n159\n00:07:36.170 --> 00:07:37.700\nSo you'll see v2 or v3.\n\n160\n00:07:37.700 --> 00:07:40.350\nWe're doing IPv4 here, so I see v2.\n\n161\n00:07:41.350 --> 00:07:44.070\nThen we get the type field, and\nthe type field's what I care about.\n\n162\n00:07:44.070 --> 00:07:45.470\nYou're going to have\ntype 1 through type 5.\n\n163\n00:07:45.470 --> 00:07:46.920\nThose are the five different packet types.\n\n164\n00:07:47.920 --> 00:07:48.860\nAfter that we have L.\n\n165\n00:07:48.860 --> 00:07:50.950\nAnd that's just the length,\nthe length of this packet.\n\n166\n00:07:52.040 --> 00:07:53.615\nAnd that's how we can\ntell if it's incomplete,\n\n167\n00:07:53.615 --> 00:07:55.430\nif we didn't get\neverything that we needed.\n\n168\n00:07:55.430 --> 00:07:56.674\nThat just gives us the length.\n\n169\n00:07:56.674 --> 00:08:00.923\nAnd after that we have the router ID\nof the router that was talking to us.\n\n170\n00:08:00.923 --> 00:08:04.499\nWe receive a packet, in this case,\nfrom router ID 2.2.2.2.\n\n171\n00:08:04.499 --> 00:08:06.845\nAll right?\nSo that's what I got back from it.\n\n172\n00:08:06.845 --> 00:08:08.724\nThen we see the area ID.\n\n173\n00:08:08.724 --> 00:08:11.020\nI'm in Area 0, so these are all 0s.\n\n174\n00:08:11.020 --> 00:08:13.540\nIf I was in Area 5, this would be 0.0.0.5.\n\n175\n00:08:13.540 --> 00:08:17.848\nIf you were in Area 255,\nit'd be 0.0.0.255.\n\n176\n00:08:17.848 --> 00:08:23.090\nIt's just the area number represented\nas a 32-bit dotted decimal notation,\n\n177\n00:08:23.090 --> 00:08:23.850\nkinda like an IP address.\n\n178\n00:08:25.090 --> 00:08:26.270\nThen we have the checksum.\n\n179\n00:08:26.270 --> 00:08:28.760\nThe checksum is also used to see\nif the packet was damaged, right?\n\n180\n00:08:28.760 --> 00:08:31.460\nWe can run a checksum against the packet,\nwe should get the same number.\n\n181\n00:08:32.750 --> 00:08:35.010\nNext you have the authentication field.\n\n182\n00:08:35.010 --> 00:08:38.790\nOSPF doesn't use authentication by\ndefault, so I expect to see a 0 there.\n\n183\n00:08:38.790 --> 00:08:40.512\n0 means no authentication, right?\n\n184\n00:08:40.512 --> 00:08:43.305\nBut if you're worried about an attacker\nbringing in their own router and\n\n185\n00:08:43.305 --> 00:08:47.080\nstarting to inject fake routes in your\nnetwork, you might wanna turn that on.\n\n186\n00:08:47.080 --> 00:08:48.830\nAnd we'll cover this in another episode,\nbut\n\n187\n00:08:48.830 --> 00:08:51.600\nOSPF supports two types of authentication.\n\n188\n00:08:51.600 --> 00:08:53.630\nPlain text, which is useless.\n\n189\n00:08:53.630 --> 00:08:55.910\nAnd then MD5 hash, right?\n\n190\n00:08:55.910 --> 00:08:57.550\nSo we usually want to do MD5.\n\n191\n00:08:57.550 --> 00:09:00.325\nBut you'll see here either a 0,\na 1 or a 2.\n\n192\n00:09:00.325 --> 00:09:05.310\n0 is no authentication,\n1 is plain text and 2 is MD5.\n\n193\n00:09:05.310 --> 00:09:07.000\nSo that's how we can tell\nthere's authentication.\n\n194\n00:09:08.280 --> 00:09:12.220\nIf authentication is turned on,\nthen you'll have an AUK value,\n\n195\n00:09:12.220 --> 00:09:14.550\nwhich is your authentication key.\n\n196\n00:09:14.550 --> 00:09:17.620\nYou can define tons of\nauthentication keys,\n\n197\n00:09:17.620 --> 00:09:20.640\nthousands, hundreds of thousands of them,\nI think, if you really want to.\n\n198\n00:09:20.640 --> 00:09:25.310\nAnd if you do have authentication,\nyou'll say auk:1.\n\n199\n00:09:25.310 --> 00:09:26.510\nOr 57, or 212.\n\n200\n00:09:26.510 --> 00:09:28.810\nAnd it's just identifying\nwhich key it used.\n\n201\n00:09:28.810 --> 00:09:32.790\nAnd then from, and\nthe interface that we heard this on.\n\n202\n00:09:32.790 --> 00:09:35.260\nSo I heard this on my\nEthernet0/0 interface.\n\n203\n00:09:35.260 --> 00:09:36.510\nThat's where I received this from.\n\n204\n00:09:36.510 --> 00:09:41.230\nCuz I might be receiving updates from\nrouter 2.2.2.2 on more than one interface.\n\n205\n00:09:41.230 --> 00:09:43.600\nSo this is how I can disseminate\nwhich interface it came in on.\n\n206\n00:09:43.600 --> 00:09:48.412\nSo that's all the information that's being\nkind of tucked away inside of this debug\n\n207\n00:09:48.412 --> 00:09:52.020\nand the one that I really\ncare about is this t field.\n\n208\n00:09:52.020 --> 00:09:54.600\nAnd inside of the Type you're\ngonna have 1 through 5.\n\n209\n00:09:54.600 --> 00:09:57.060\nAnd these are the five different\ntypes of acknowledgements.\n\n210\n00:09:57.060 --> 00:09:59.310\nAnd if you're trying to write this\ndown right now, don't worry about it.\n\n211\n00:09:59.310 --> 00:10:02.620\nWe'll include this with the show notes, so\nyou guys will have a copy of this table.\n\n212\n00:10:02.620 --> 00:10:07.138\nBut the five packet types,\nwhen a router is Is running OSPF,\n\n213\n00:10:07.138 --> 00:10:11.050\nthe most common packet they\nsend out is that Type 1.\n\n214\n00:10:11.050 --> 00:10:13.760\nAnd we can see that pretty\nclear here in my debug.\n\n215\n00:10:13.760 --> 00:10:17.580\nSee how just while I was talking,\nmore of those Type 1s keep going up.\n\n216\n00:10:17.580 --> 00:10:22.930\nEventually I'll have screens and\nscreens and screens of all these Type 1s.\n\n217\n00:10:22.930 --> 00:10:24.145\nThose Type 1s are hellos.\n\n218\n00:10:25.500 --> 00:10:29.772\nOSPF uses hello packets for discovery, for\nfinding other neighbors and then once it\n\n219\n00:10:29.772 --> 00:10:34.060\nfinds a neighbor and it talks to them, it\nuses hellos to make sure they're still up.\n\n220\n00:10:35.330 --> 00:10:39.563\nAnd so, at a minimum, on a perfectly\nstable network where nothing is changing,\n\n221\n00:10:39.563 --> 00:10:42.366\nyou're gonna send hellos\nat a certain interval, and\n\n222\n00:10:42.366 --> 00:10:44.690\nthe default interval is every ten seconds.\n\n223\n00:10:44.690 --> 00:10:46.650\nSo every ten seconds you're\nsending out a hello.\n\n224\n00:10:46.650 --> 00:10:50.720\nYou can see that if you do a show ip\nprotocols, and just spell it right.\n\n225\n00:10:50.720 --> 00:10:51.990\nThere.\n\n226\n00:10:51.990 --> 00:10:55.100\nInside a show ip protocols,\nit gives you information about OSPF.\n\n227\n00:10:55.100 --> 00:10:56.690\nAnd in here we can find the timer.\n\n228\n00:10:56.690 --> 00:10:58.840\nActually, I thought the timer was in here.\n\n229\n00:10:58.840 --> 00:11:00.250\nIs the timer not in here?\n\n230\n00:11:00.250 --> 00:11:02.090\nIt certainly isn't.\n\n231\n00:11:02.090 --> 00:11:06.620\nWell, with OSPF the timer can\nactually vary per interface.\n\n232\n00:11:06.620 --> 00:11:07.970\nSo let me just change this\ncommand a little bit.\n\n233\n00:11:07.970 --> 00:11:10.239\nI'm gonna do show ip ospf interface and\n\n234\n00:11:10.239 --> 00:11:13.690\nit's gonna show how OSPF is\nconfigured on each interface.\n\n235\n00:11:13.690 --> 00:11:16.780\nActually, let me stop my debug here,\nthat's gonna keep running.\n\n236\n00:11:16.780 --> 00:11:18.470\nThere we go, and we'll pull that back up.\n\n237\n00:11:18.470 --> 00:11:21.555\nSo it's going to show me the actual\nconfiguration on each interface, and\n\n238\n00:11:21.555 --> 00:11:23.810\nin here I'll definitely\nfind that timer right here.\n\n239\n00:11:23.810 --> 00:11:28.140\nSo on E01, my timer is right here.\n\n240\n00:11:28.140 --> 00:11:30.610\nHello 10, Dead 40.\n\n241\n00:11:30.610 --> 00:11:31.940\nWhat does that mean?\n\n242\n00:11:31.940 --> 00:11:36.320\nIt means I'm gonna send a Type 1 packet,\na hello, every ten seconds.\n\n243\n00:11:36.320 --> 00:11:41.440\nAnd I expect my neighbor to be sending\nme a hello every ten seconds also.\n\n244\n00:11:41.440 --> 00:11:43.310\nSo, I should be getting\none every ten seconds.\n\n245\n00:11:43.310 --> 00:11:46.117\nAnd if I scroll back here and\nlook at all these Type 1s I was getting,\n\n246\n00:11:46.117 --> 00:11:47.310\nlet's look at those times.\n\n247\n00:11:47.310 --> 00:11:51.360\nSo, here's 8:34 and 8 seconds.\n\n248\n00:11:51.360 --> 00:11:53.980\n8:34 and 18 seconds.\n\n249\n00:11:53.980 --> 00:11:55.860\n8:34 and 27.\n\n250\n00:11:55.860 --> 00:11:57.416\nOh that's a little bit off right, but\n\n251\n00:11:57.416 --> 00:11:59.760\nthat's gonna happen just\nbecause the time just varies.\n\n252\n00:11:59.760 --> 00:12:04.110\nBut, it's incrementing in ten second\nintervals, or pretty darn close.\n\n253\n00:12:04.110 --> 00:12:06.980\nSo those are the hellos that\nI'm getting every ten seconds.\n\n254\n00:12:06.980 --> 00:12:09.546\nAnd that dead interval, just means,\n\n255\n00:12:09.546 --> 00:12:15.010\nif I don't hear back from them in 40\nseconds, four times the data, the hello.\n\n256\n00:12:15.010 --> 00:12:19.998\nIf I miss four hellos in a row, then\nI'm going to assume they're not up and\n\n257\n00:12:19.998 --> 00:12:20.730\nrunning.\n\n258\n00:12:20.730 --> 00:12:23.760\nAnd so we need to go ahead and\ntake that adjacency down.\n\n259\n00:12:23.760 --> 00:12:26.960\nAnd it actually works out to three,\nmissing three in a row,\n\n260\n00:12:26.960 --> 00:12:30.096\nbecause you're never, well,\nit would be really rare for\n\n261\n00:12:30.096 --> 00:12:32.400\nyou to be exactly on the interval for\nfour.\n\n262\n00:12:32.400 --> 00:12:35.320\nIt's normally going to be like three and\nthen some change.\n\n263\n00:12:35.320 --> 00:12:38.120\nBut anyhow, so\nthat's what those timers are and\n\n264\n00:12:38.120 --> 00:12:40.700\nthey can vary based on interface, right?\n\n265\n00:12:40.700 --> 00:12:45.390\nOn a normal interface, I expect it to\nbe a hello interval of ten seconds, but\n\n266\n00:12:45.390 --> 00:12:47.830\nwhen you start to get to\nlike frame relay interfaces,\n\n267\n00:12:47.830 --> 00:12:50.420\nthose guys,\nit usually bumps up to 30 seconds.\n\n268\n00:12:50.420 --> 00:12:52.940\nAnd so\nit gets a little bit bigger on those.\n\n269\n00:12:52.940 --> 00:12:56.879\nSo, that's why when I show ip protocols\nit didn't give me the timers there,\n\n270\n00:12:56.879 --> 00:12:59.560\nbecause it was different\non different interfaces.\n\n271\n00:12:59.560 --> 00:13:00.360\nAnd so we can scroll through each.\n\n272\n00:13:00.360 --> 00:13:05.674\nIf you watch, we're actually gonna do\nanother episode on neighbor relationships,\n\n273\n00:13:05.674 --> 00:13:08.640\nand we'll cover that more\nin depth on that one.\n\n274\n00:13:08.640 --> 00:13:12.310\nAll right, but\nthat's my Type 1 packet, those hellos.\n\n275\n00:13:12.310 --> 00:13:14.310\nSo hellos, they do discovery.\n\n276\n00:13:14.310 --> 00:13:16.998\nI find the other routers\nthat are out there and\n\n277\n00:13:16.998 --> 00:13:20.760\nthen I use those hellos to make\nsure that we stay up and running.\n\n278\n00:13:20.760 --> 00:13:21.920\nThat was Type 1.\n\n279\n00:13:21.920 --> 00:13:24.110\nType 2 is a DBD.\n\n280\n00:13:24.110 --> 00:13:27.100\nThat is your database descriptor.\n\n281\n00:13:27.100 --> 00:13:29.860\nAnd that's where you found a neighbor.\n\n282\n00:13:29.860 --> 00:13:34.820\nNow you need to know if they\nhave routes that you don't.\n\n283\n00:13:34.820 --> 00:13:36.840\nAnd they need to know if you\nhave routes that they don't.\n\n284\n00:13:36.840 --> 00:13:38.330\nWe need to exchange routes.\n\n285\n00:13:38.330 --> 00:13:40.430\nBut you don't want to just give\nthem your whole routing table.\n\n286\n00:13:40.430 --> 00:13:42.350\nRemember, OSPF can get big.\n\n287\n00:13:42.350 --> 00:13:44.880\nI said that OSPF can route\nthe entire Internet if we wanted.\n\n288\n00:13:44.880 --> 00:13:47.360\nIf we did that it could\nhave millions of routes.\n\n289\n00:13:47.360 --> 00:13:50.050\nYou don't want to just give\nsomebody this huge table.\n\n290\n00:13:50.050 --> 00:13:54.210\nSo what you do is give them like\na summary of your routing table.\n\n291\n00:13:54.210 --> 00:13:57.180\nReally, just a list of prefixes.\n\n292\n00:13:57.180 --> 00:14:01.570\nAnd you give that to them, and you say,\nhere's all the prefixes I know about.\n\n293\n00:14:01.570 --> 00:14:02.230\nAnd then they do the same.\n\n294\n00:14:02.230 --> 00:14:04.440\nThey give you a list of all\nthe prefixes they know about.\n\n295\n00:14:04.440 --> 00:14:07.400\nAnd you can look through that,\nthat database script, that DBD.\n\n296\n00:14:07.400 --> 00:14:11.970\nSo you look through the DBD and you see if\nthere's anything you're missing, right?\n\n297\n00:14:11.970 --> 00:14:15.310\nAnd as you look through it, you might\nfind some stuff that you're missing.\n\n298\n00:14:15.310 --> 00:14:17.650\nAnd if that's the case,\nwe need to get it copy of it.\n\n299\n00:14:17.650 --> 00:14:20.658\nBut if you don't see anything you're\nmissing, then that's it, great,\n\n300\n00:14:20.658 --> 00:14:22.340\nit's a new router, that's wonderful.\n\n301\n00:14:22.340 --> 00:14:24.260\nBut I don't need anything that they had.\n\n302\n00:14:24.260 --> 00:14:25.440\nSo that's the Type 2 and\n\n303\n00:14:25.440 --> 00:14:30.450\nif I go back to my debugs here I'll go all\nthe way back to where the debugs started.\n\n304\n00:14:30.450 --> 00:14:32.900\nI had that Type 1 Hello.\n\n305\n00:14:32.900 --> 00:14:34.520\nAnd then right after it, the Type 2.\n\n306\n00:14:34.520 --> 00:14:38.460\nI received the DBD from them.\n\n307\n00:14:38.460 --> 00:14:40.120\nAnd for whatever reason,\nI received it twice.\n\n308\n00:14:40.120 --> 00:14:41.940\nSo apparently it doubled up for me.\n\n309\n00:14:41.940 --> 00:14:43.600\nBut it sent me their routing table.\n\n310\n00:14:43.600 --> 00:14:44.540\nOkay.\n\n311\n00:14:44.540 --> 00:14:48.000\nOr the summary of that topology.\n\n312\n00:14:48.000 --> 00:14:50.790\nRemember with OSPF you don't\njust know about your neighbors,\n\n313\n00:14:50.790 --> 00:14:52.980\nyou know about the whole topology.\n\n314\n00:14:52.980 --> 00:14:55.120\nSo this could be a lot of routes.\n\n315\n00:14:55.120 --> 00:14:56.170\nThen we pick through it.\n\n316\n00:14:56.170 --> 00:14:57.160\nAnd we say okay.\n\n317\n00:14:57.160 --> 00:14:59.960\nDo you know any networks\nthat I don't know.\n\n318\n00:14:59.960 --> 00:15:03.860\nAnd if you do,\nthen we can do the Type 3 packet.\n\n319\n00:15:03.860 --> 00:15:08.270\nThe Type 3 packet type\nis a link state request.\n\n320\n00:15:08.270 --> 00:15:11.400\nI can say, boy, that looks like\na cool route, I don't know that one.\n\n321\n00:15:11.400 --> 00:15:12.730\nCan you give me the details?\n\n322\n00:15:12.730 --> 00:15:15.930\nThe DBD has a summary,\nnow I need to know the details.\n\n323\n00:15:15.930 --> 00:15:20.640\nI need to know the cause, the router\nID it's tied to, how long it's been up.\n\n324\n00:15:20.640 --> 00:15:23.750\nI need to know all this other\ninformation about that route.\n\n325\n00:15:23.750 --> 00:15:25.650\nCan you please turn it over?\n\n326\n00:15:25.650 --> 00:15:28.160\nThat's a link state request or\nthat Type 3.\n\n327\n00:15:28.160 --> 00:15:31.590\nSo looking at this debug,\nright here, I've got a Type 3.\n\n328\n00:15:31.590 --> 00:15:36.361\nI received a request,\nI knew a route that they didn't and so\n\n329\n00:15:36.361 --> 00:15:41.050\nthey sent me an LSR to say can\nyou give me the detailed info?\n\n330\n00:15:41.050 --> 00:15:45.047\nWell I received it and I said okay,\nwell I'll give you that detailed info and\n\n331\n00:15:45.047 --> 00:15:48.060\nif we look back here,\nthat's our next one, the Type 4.\n\n332\n00:15:48.060 --> 00:15:50.520\nWhich is a link state update or an LSU.\n\n333\n00:15:50.520 --> 00:15:54.810\nThe link state update,\nthat's us sending information about this.\n\n334\n00:15:54.810 --> 00:15:57.559\nThat's the answer to the request.\n\n335\n00:15:57.559 --> 00:15:59.356\nWe're sending them and saying,\n\n336\n00:15:59.356 --> 00:16:02.702\nhere you go this is the detailed\ninformation of that network.\n\n337\n00:16:02.702 --> 00:16:04.442\nAnd the other side's gonna receive that.\n\n338\n00:16:04.442 --> 00:16:06.067\nAnd when they receive it.\n\n339\n00:16:06.067 --> 00:16:09.174\nOSPF is trying to build\na reliable network.\n\n340\n00:16:09.174 --> 00:16:11.712\nAnd so, if I send it and\nI don't hear anything back,\n\n341\n00:16:11.712 --> 00:16:14.910\nI assume they didn't get it,\nand so I send it again, right.\n\n342\n00:16:14.910 --> 00:16:17.640\nOSPF wants as fast of\nconversion as possible, so\n\n343\n00:16:17.640 --> 00:16:20.430\nit's gonna continue to try and\nsend it reliably.\n\n344\n00:16:20.430 --> 00:16:24.650\nWell, on the other side,\nit may or may not get it, right.\n\n345\n00:16:24.650 --> 00:16:27.640\nAnd if it doesn't get it, well,\nwe just wait and we retransmit.\n\n346\n00:16:27.640 --> 00:16:31.220\nBut if it does get it,\nit's gonna respond back with a type 5,\n\n347\n00:16:31.220 --> 00:16:36.520\nwhich is an LSAck, right,\na link state acknowledgement, okay.\n\n348\n00:16:36.520 --> 00:16:38.360\nThe link state acknowledgement is\nwhere we just send a message back\n\n349\n00:16:38.360 --> 00:16:39.450\nsaying, yup, I got it.\n\n350\n00:16:39.450 --> 00:16:40.110\nI got that route.\n\n351\n00:16:40.110 --> 00:16:40.690\nIt's awesome.\n\n352\n00:16:40.690 --> 00:16:41.900\nI got it in my routing table now.\n\n353\n00:16:41.900 --> 00:16:43.590\nIt's great, okay.\n\n354\n00:16:43.590 --> 00:16:46.521\nAnd eventually, the router should get to\nthe point where when they exchange DBDs\n\n355\n00:16:46.521 --> 00:16:48.346\nthat they're identical, they've converged.\n\n356\n00:16:48.346 --> 00:16:49.810\nThey've got the same routes in there, and\n\n357\n00:16:49.810 --> 00:16:52.130\nneither of them know about\na route the others don't.\n\n358\n00:16:52.130 --> 00:16:55.480\nAnd so if I double back to my debug,\nwhich I've lost.\n\n359\n00:16:55.480 --> 00:16:56.840\nHere, there we go.\n\n360\n00:16:56.840 --> 00:17:00.777\nThat I had that type 3, right,\nthat link state request, and\n\n361\n00:17:00.777 --> 00:17:03.069\nthen there was a link state update.\n\n362\n00:17:03.069 --> 00:17:04.590\nI guess they're out of order.\n\n363\n00:17:04.590 --> 00:17:06.090\nSometimes you have to look\nat the time over here.\n\n364\n00:17:06.090 --> 00:17:08.800\nSee how it shows them\noccurring at the same time?\n\n365\n00:17:08.800 --> 00:17:11.078\nI doubt it actually occurred that fast.\n\n366\n00:17:11.078 --> 00:17:12.380\nActually, these are receives.\n\n367\n00:17:12.380 --> 00:17:16.140\nSo I'm receiving a link\nstate update from them,\n\n368\n00:17:16.140 --> 00:17:19.600\nwhich means I asked them to tell me\nabout a network I didn't know, right?\n\n369\n00:17:19.600 --> 00:17:22.710\nSo there was a transmit in there,\nI'm just getting the receives here.\n\n370\n00:17:22.710 --> 00:17:27.560\nSo there was that type 4 where we sent\nthat update, or they sent an update to us.\n\n371\n00:17:27.560 --> 00:17:29.950\nAnd then that type 5,\nthe acknowledgement, right.\n\n372\n00:17:29.950 --> 00:17:32.100\nWe acknowledge that we got it.\n\n373\n00:17:32.100 --> 00:17:34.760\nAnd that's gonna continue on for\nthe life of these routers.\n\n374\n00:17:34.760 --> 00:17:38.900\nWhen things change,\nthese packets will start to update, right.\n\n375\n00:17:38.900 --> 00:17:42.200\nSo if I do a debug again and\n\n376\n00:17:42.200 --> 00:17:47.120\nturn that packet debugging on, every\nten seconds, I'm going to see a hello.\n\n377\n00:17:47.120 --> 00:17:51.610\nAnd on a healthy network where nothing is\nchanging, that's what I should expect.\n\n378\n00:17:51.610 --> 00:17:55.900\nI should expect to just see a hello pop\nup every ten seconds, right, a type 1.\n\n379\n00:17:55.900 --> 00:18:00.724\nBut when a network change occurs,\nif I jump over to branch 1, and\n\n380\n00:18:00.724 --> 00:18:03.809\nI shut off one of its interfaces, right?\n\n381\n00:18:03.809 --> 00:18:06.137\nSo I'm gonna shut off e0/1.\n\n382\n00:18:06.137 --> 00:18:13.070\nSo it's gonna lose a network, and when it\nloses that network, stuffs gonna happen.\n\n383\n00:18:13.070 --> 00:18:16.310\nSo I'm getting my type 1\nhellos every ten seconds, and\n\n384\n00:18:16.310 --> 00:18:18.460\nthen here comes a type 4, right?\n\n385\n00:18:18.460 --> 00:18:20.220\nThat type 4, that's an update.\n\n386\n00:18:20.220 --> 00:18:23.387\nThat's that router, that branch saying,\noop I just lost that network.\n\n387\n00:18:23.387 --> 00:18:25.360\nTake it out of your routing table, right?\n\n388\n00:18:25.360 --> 00:18:27.560\nSo, I didn't send a request.\n\n389\n00:18:27.560 --> 00:18:29.704\nI didn't send a type 3 LSR.\n\n390\n00:18:29.704 --> 00:18:33.710\nThey're just automatically sending me\na type 4, saying here's an update.\n\n391\n00:18:33.710 --> 00:18:37.252\nThat route is gone, get it out of there,\nand so we pull it out, right.\n\n392\n00:18:37.252 --> 00:18:40.939\nAnd so once it's gone, we can then\nsend LSRs to other people to try and\n\n393\n00:18:40.939 --> 00:18:43.270\nfind that network again or whatever.\n\n394\n00:18:43.270 --> 00:18:45.640\nBut with OSPF, we know the whole topology.\n\n395\n00:18:45.640 --> 00:18:47.770\nSo if there's a backup route,\nwe already know it.\n\n396\n00:18:47.770 --> 00:18:50.283\nSo it's not like EIGRP,\nwhere we have to send out a query, right?\n\n397\n00:18:50.283 --> 00:18:51.600\nWe're gonna go query other routers.\n\n398\n00:18:51.600 --> 00:18:55.010\nBecause we already know there either\nis a backup or there isn't, right?\n\n399\n00:18:55.010 --> 00:18:56.830\nOSPF knows the whole topology.\n\n400\n00:18:56.830 --> 00:19:01.080\nSo, in my scenario,\nI got that type 4, I updated.\n\n401\n00:19:01.080 --> 00:19:02.990\nAnd then we just go back to type 1s,\nright?\n\n402\n00:19:02.990 --> 00:19:06.659\nWe're just doing type 1s,\nrunning along, and that's it.\n\n403\n00:19:07.820 --> 00:19:11.002\nOn branch 1 if we bring\nthat route back up, right,\n\n404\n00:19:11.002 --> 00:19:13.830\nso that route's going to come back up.\n\n405\n00:19:13.830 --> 00:19:16.659\nAnd what we'll see is we'll\nget that information back, and\n\n406\n00:19:16.659 --> 00:19:18.060\nwe'll take the update.\n\n407\n00:19:18.060 --> 00:19:21.469\nNow it's going to take it just a second\nbecause we have hold down timers in OSPF.\n\n408\n00:19:21.469 --> 00:19:25.573\nIn OSPF it says just because a route came\nup, doesn't mean it's ready to rock.\n\n409\n00:19:25.573 --> 00:19:27.910\nIt's just kind of waiting for\nthat to pass.\n\n410\n00:19:27.910 --> 00:19:29.880\nBut it will make it back\ninto my routing table.\n\n411\n00:19:29.880 --> 00:19:30.670\nThere we go.\n\n412\n00:19:30.670 --> 00:19:34.417\nSee I've got that type 4, and\nnow I'm back to just type 1s again.\n\n413\n00:19:34.417 --> 00:19:36.424\nAnd if I do a show ip route ospf,\n\n414\n00:19:36.424 --> 00:19:40.970\nI've got that network coming back\nin from the other guy, right?\n\n415\n00:19:40.970 --> 00:19:45.380\nSo that's all kind of occurring\nall the time in the background.\n\n416\n00:19:45.380 --> 00:19:48.560\nNow in real life land, we don't\nnormally care about any of this, right?\n\n417\n00:19:48.560 --> 00:19:49.358\nIt all happens in the background.\n\n418\n00:19:49.358 --> 00:19:50.640\nWho cares?\n\n419\n00:19:50.640 --> 00:19:53.891\nBut if you're monitoring your network,\nyou're troubleshooting,\n\n420\n00:19:53.891 --> 00:19:57.812\nyou start doing debug ip ospf packet, that\nt field is kind of the most important one.\n\n421\n00:19:57.812 --> 00:20:01.430\nSo we can understand that language of\nwhat's going on in the background.\n\n422\n00:20:01.430 --> 00:20:05.450\nAnd so if I jump back to my table here,\nfor the exam especially,\n\n423\n00:20:05.450 --> 00:20:08.140\nit's a good idea to have these memorized,\nright?\n\n424\n00:20:08.140 --> 00:20:09.440\nThat a type 1 is the hello.\n\n425\n00:20:09.440 --> 00:20:11.190\nAnd we're going to see those all the time,\n\n426\n00:20:11.190 --> 00:20:15.510\nevery ten seconds by default, every 30\nseconds on a frame relay link, all right.\n\n427\n00:20:15.510 --> 00:20:18.592\nThen the type 2, the DBD,\nthe database descriptor,\n\n428\n00:20:18.592 --> 00:20:22.747\nthat's where that summary of our\nrouting table, our routing topology.\n\n429\n00:20:22.747 --> 00:20:25.951\nI shouldn't say routing table because it\ndoes include routes that aren't in our\n\n430\n00:20:25.951 --> 00:20:26.950\nrouting table, right?\n\n431\n00:20:26.950 --> 00:20:33.140\nRemember in OSPF, only the best\nroutes make into the routing table.\n\n432\n00:20:33.140 --> 00:20:36.950\nYou might have other routes\nin your OSPF topology\n\n433\n00:20:36.950 --> 00:20:39.310\nthat didn't make it\ninto the routing table.\n\n434\n00:20:39.310 --> 00:20:42.630\nAnd if you do like\na show ip ospf database,\n\n435\n00:20:42.630 --> 00:20:45.730\nyou'll see other things that might not\nhave made it into the routing table.\n\n436\n00:20:45.730 --> 00:20:47.290\nSo just be aware of that.\n\n437\n00:20:47.290 --> 00:20:49.060\nAnd the DBD will contain that.\n\n438\n00:20:50.660 --> 00:20:52.590\nAnd then if everything's the same,\nthat's all we see.\n\n439\n00:20:52.590 --> 00:20:55.910\nBut, if there's something\nthat we see that's new,\n\n440\n00:20:55.910 --> 00:20:58.410\nwe can do an LSR to request it.\n\n441\n00:20:58.410 --> 00:21:02.844\nAnd then we can do an LSU to reply,\nright, that's the answer back to an LSR.\n\n442\n00:21:02.844 --> 00:21:05.080\nAnd then lastly, the LS acknowledgment.\n\n443\n00:21:05.080 --> 00:21:08.446\nAnd they don't write that as an LSA\nbecause we're gonna learn later about link\n\n444\n00:21:08.446 --> 00:21:11.217\nstate advertisements that\nare a really important part of OSPF.\n\n445\n00:21:11.217 --> 00:21:13.586\nBut these are LS acknowledgments,\nwhich are different.\n\n446\n00:21:13.586 --> 00:21:17.260\nSo they always write it this way, LSAck,\nthat's how you'll see it on the exam.\n\n447\n00:21:17.260 --> 00:21:20.626\nAnd that's just when we get an LSU,\nwhen we get an update,\n\n448\n00:21:20.626 --> 00:21:23.530\nwe acknowledge that we got\nit by sending an LSAck.\n\n449\n00:21:23.530 --> 00:21:24.975\nThat's when you see a type 5.\n\n450\n00:21:26.200 --> 00:21:27.940\nSo, those are the five OSPF packet types.\n\n451\n00:21:27.940 --> 00:21:29.120\nDefinitely be familiar with them.\n\n452\n00:21:29.120 --> 00:21:31.330\nIt's a good idea to memorize those five.\n\n453\n00:21:31.330 --> 00:21:33.850\n>> All right, Don, is there anything\nelse we need to think about as far as\n\n454\n00:21:33.850 --> 00:21:34.630\npacket types go?\n\n455\n00:21:34.630 --> 00:21:36.090\nI think we covered it pretty well.\n\n456\n00:21:36.090 --> 00:21:37.760\n>> Yeah, those are the five primary ones.\n\n457\n00:21:37.760 --> 00:21:40.510\nRemember those, but\nwe are gonna learn a lot more about LSAs.\n\n458\n00:21:40.510 --> 00:21:44.590\nAnd LSAs are super important, but\nthey're not a true packet type.\n\n459\n00:21:44.590 --> 00:21:46.778\nLSAs are actually carried\nin hello packages.\n\n460\n00:21:46.778 --> 00:21:48.456\nThey're actually carried in type 1s.\n\n461\n00:21:48.456 --> 00:21:50.440\nAnd they can be in other ones.\n\n462\n00:21:50.440 --> 00:21:52.570\nBut so we'll see those a little bit later.\n\n463\n00:21:52.570 --> 00:21:55.886\nThose are just kinda normal data that\nmoves along that fall within these five\n\n464\n00:21:55.886 --> 00:21:56.607\npacket types.\n\n465\n00:21:56.607 --> 00:22:00.526\n>> So remember, as you're actually\npreparing for your CCNP, it's not enough\n\n466\n00:22:00.526 --> 00:22:04.461\njust at the CCNA level in which we\nnormally just turned on the configuration.\n\n467\n00:22:04.461 --> 00:22:06.689\nAnd we're actually able to see\nthat neighbor discovery happen.\n\n468\n00:22:06.689 --> 00:22:07.392\nWe're going oh, look fine.\n\n469\n00:22:07.392 --> 00:22:10.880\nIt goes from loading to full,\nand then we're done.\n\n470\n00:22:10.880 --> 00:22:13.689\nHere are this level we want to make\nsure that we can look inside of\n\n471\n00:22:13.689 --> 00:22:17.153\nthose packets and see what we are getting\nand what we aren't getting as well.\n\n472\n00:22:17.153 --> 00:22:20.630\nAnd we took a look at that by\nusing the debug command today too.\n\n473\n00:22:20.630 --> 00:22:23.400\nWell that about wraps it up for\nthis show today.\n\n474\n00:22:23.400 --> 00:22:24.740\nThank you for watching.\n\n475\n00:22:24.740 --> 00:22:26.140\nI'm Ronnie Wong, your host.\n\n476\n00:22:26.140 --> 00:22:26.918\n>> And I'm Don Pezet.\n\n477\n00:22:26.918 --> 00:22:28.270\n>> And we'll see you next time.\n\n478\n00:22:28.270 --> 00:22:34.300\n[SOUND]\n\n",
          "vimeoId": "137513495"
        },
        {
          "description": "When two routers decide to exchange routes, neighbor relationships get built up. Viewers will hear about the forming of adjacencies and the eight OSPF neighbor states as the process happens, as well as how debugging the states can help in troubleshooting OSPF.",
          "length": "1872",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/ccnproute/cisco-ccnproute300101-3-25-ospf_neighbors-082715-1.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/ccnproute/cisco-ccnproute300101-3-25-ospf_neighbors-082715-1-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/ccnproute/cisco-ccnproute300101-3-25-ospf_neighbors-082715-1-sm.jpg",
          "title": "OSPF Neighbors",
          "transcript": "WEBVTT\n\n1\n00:00:00.140 --> 00:00:10.600\n[MUSIC]\n\n2\n00:00:10.600 --> 00:00:14.090\nAll right, welcome to another\ngreat episode here on ITProTV.\n\n3\n00:00:14.090 --> 00:00:17.160\nToday we're getting ready for\nour CCNP route exam.\n\n4\n00:00:17.160 --> 00:00:20.690\nMaking sure that we are ready when we\nactually go and sit for that exam and\n\n5\n00:00:20.690 --> 00:00:21.890\nready to pass.\n\n6\n00:00:21.890 --> 00:00:23.570\nI'll be your host today, Ronnie Wong.\n\n7\n00:00:23.570 --> 00:00:25.680\nAnd here with me is Mr. Don Pezet.\n\n8\n00:00:25.680 --> 00:00:26.374\nHow's it going?\n\n9\n00:00:26.374 --> 00:00:27.790\n>> It is going great, Ronnie.\n\n10\n00:00:27.790 --> 00:00:28.970\nI'm excited to be back on the show and\n\n11\n00:00:28.970 --> 00:00:33.090\nwe're going to be taking a deeper look\ninto the wonderful world of OSPF.\n\n12\n00:00:33.090 --> 00:00:34.380\nNow, in a previous episode,\n\n13\n00:00:34.380 --> 00:00:37.710\nwe talked about some of the OSPF packet\ntypes that exchange between routers.\n\n14\n00:00:37.710 --> 00:00:42.290\nBut, in this episode, I wanna focus more\non the neighbor relationships that get\n\n15\n00:00:42.290 --> 00:00:44.777\nbuilt up when two routers\ndecide to exchange routes.\n\n16\n00:00:44.777 --> 00:00:47.865\nThere's actually a ton of things\nthat happen in the background.\n\n17\n00:00:47.865 --> 00:00:50.265\nAnd when you're looking\nat those packet types,\n\n18\n00:00:50.265 --> 00:00:54.335\nit actually looks pretty simple,\nbut there's actually a lot to it.\n\n19\n00:00:54.335 --> 00:00:57.972\nThere's this whole big process that\nhappens when two routers decide to\n\n20\n00:00:57.972 --> 00:00:59.502\nneighbor up, okay.\n\n21\n00:00:59.502 --> 00:01:02.384\nSo I wanna show you guys an example that,\nshow you guys how it works and\n\n22\n00:01:02.384 --> 00:01:04.223\nsome of the stuff that\nwe can expect to see and\n\n23\n00:01:04.223 --> 00:01:06.652\nsome of the differences\nthat are out there.\n\n24\n00:01:06.652 --> 00:01:08.432\nLet's start just by taking\na look at my topology.\n\n25\n00:01:08.432 --> 00:01:10.602\nSo here's my network\ntopology that I've got,\n\n26\n00:01:10.602 --> 00:01:15.632\nand I've got a headquarters router that\nhas a Metro E connection, just basically\n\n27\n00:01:15.632 --> 00:01:19.212\nan ethernet cloud that runs out to\nthe other branches that are out there.\n\n28\n00:01:19.212 --> 00:01:22.000\nThat's our primary connection\nbetween these branches.\n\n29\n00:01:22.000 --> 00:01:25.210\nI also have some point to point serial\nlinks that go between headquarters and\n\n30\n00:01:25.210 --> 00:01:27.080\nbranch 1 that are out there.\n\n31\n00:01:27.080 --> 00:01:30.760\nAnd each branch has its own private\nLAN that it is connected to,\n\n32\n00:01:30.760 --> 00:01:33.410\nthese networks that are kinda\nfloating out here to the side.\n\n33\n00:01:33.410 --> 00:01:35.560\nNow, they don't know about\neach other's private LANs, so\n\n34\n00:01:35.560 --> 00:01:40.290\nI'm relying on OSPF to exchange\nthat information and let us see it.\n\n35\n00:01:40.290 --> 00:01:43.790\nNow, we've seen how to enable OSPF,\nand we turn it on and\n\n36\n00:01:43.790 --> 00:01:46.630\nit works pretty well, doesn't it, right,\nwhere you start exchanging routes.\n\n37\n00:01:46.630 --> 00:01:47.691\nWell, let's take a look at this.\n\n38\n00:01:47.691 --> 00:01:50.581\nI've got a fairly stable configuration.\n\n39\n00:01:50.581 --> 00:01:54.240\nIf I take a look at my headquarters\nrouter, if I do a show IP protocols,\n\n40\n00:01:54.240 --> 00:01:56.170\nI can see I'm running OSPF, right?\n\n41\n00:01:56.170 --> 00:01:58.300\nMy process ID is 1.\n\n42\n00:01:58.300 --> 00:02:01.730\nMy router ID is 1.1.1.1, so that's cool.\n\n43\n00:02:01.730 --> 00:02:04.430\nAnd then,\nI'm routing on multiple interfaces or\n\n44\n00:02:04.430 --> 00:02:06.540\nI'm advertising on multiple interfaces.\n\n45\n00:02:06.540 --> 00:02:10.220\nAnd I've got a neighbor, 2.2.2.2,\nthat I'm reaching out and talking to, and\n\n46\n00:02:10.220 --> 00:02:11.760\nexchanging information with them.\n\n47\n00:02:11.760 --> 00:02:15.340\nOkay, so all of that's kind of already\nin place, it's already happening.\n\n48\n00:02:15.340 --> 00:02:18.909\nJust when you turn OSPF on,\nthey start to exchange information and\n\n49\n00:02:18.909 --> 00:02:20.130\nyou see that, right?\n\n50\n00:02:20.130 --> 00:02:24.482\nIf I jump over to another branch, somebody\nwho's not running OSPF yet, right,\n\n51\n00:02:24.482 --> 00:02:27.630\nI could take this guy and\nI'll get OSPF turned on, right?\n\n52\n00:02:27.630 --> 00:02:31.677\nSo I could say like router ospf 1,\n\n53\n00:02:31.677 --> 00:02:36.010\nrouter-id, and I can give it an ID.\n\n54\n00:02:36.010 --> 00:02:41.701\nAll right, and then I could jump into my\ninterfaces where I can say ip ospf 1,\n\n55\n00:02:41.701 --> 00:02:44.700\nwhich will be my process ID, area is 0.\n\n56\n00:02:44.700 --> 00:02:50.150\nAnd so I'm just going to put it into that\narea, and, oops, that's not what I wanted.\n\n57\n00:02:50.150 --> 00:02:50.660\nThere we go.\n\n58\n00:02:50.660 --> 00:02:52.580\nI can put it into the right area,\nthat'll make a difference.\n\n59\n00:02:52.580 --> 00:02:54.850\nAnd then we start to get that\nneighbor relationship built up.\n\n60\n00:02:54.850 --> 00:02:56.070\nRight?\nWell, right there,\n\n61\n00:02:56.070 --> 00:02:59.220\nmy mistake kind of accents\na point right there.\n\n62\n00:02:59.220 --> 00:03:02.060\nWhen you turn on OSPF,\nit's not just enough to turn it on,\n\n63\n00:03:02.060 --> 00:03:05.880\nthere's certain things that have to match\nup and certain processes that have to\n\n64\n00:03:05.880 --> 00:03:09.300\nhappen in the background before\nwe can start exchanging routes.\n\n65\n00:03:09.300 --> 00:03:10.940\nFor example, that area number.\n\n66\n00:03:10.940 --> 00:03:14.570\nIf I'm in the wrong area, I'm not\ngoing to build an adjacency, right?\n\n67\n00:03:14.570 --> 00:03:16.900\nWhen I ran that area one nothing happened.\n\n68\n00:03:16.900 --> 00:03:18.118\nBut when I ran area zero,\n\n69\n00:03:18.118 --> 00:03:21.380\nI immediately started to see some\nadjacencies popping up, okay.\n\n70\n00:03:21.380 --> 00:03:24.050\nAnd when they popped up,\nnotice what I got here.\n\n71\n00:03:24.050 --> 00:03:27.140\nIt says, OSPF-5-ADJCHG, right, adjacency,\n\n72\n00:03:27.140 --> 00:03:32.140\nthat's in OSPF when you have a neighbor\nrelationship, it's called an adjacency.\n\n73\n00:03:32.140 --> 00:03:34.070\nIt's a router that you're connected to.\n\n74\n00:03:34.070 --> 00:03:38.780\nSo I had an adjacency change in Process 1,\ncuz you can run more than one\n\n75\n00:03:38.780 --> 00:03:43.270\nOSPF process if you want, Nbr, and here's\nthe two neighbors that I connected to.\n\n76\n00:03:43.270 --> 00:03:45.340\nIt's Branch 1 and Headquarters.\n\n77\n00:03:45.340 --> 00:03:46.710\nI can see the interface it happened on,\nand\n\n78\n00:03:46.710 --> 00:03:51.030\nthen see how says it's going,\nfrom LOADING to FULL.\n\n79\n00:03:51.030 --> 00:03:53.410\nThat means I transitioned from states.\n\n80\n00:03:53.410 --> 00:03:57.080\nOSPF, that adjacency,\nwas in the loading state, and\n\n81\n00:03:57.080 --> 00:03:59.115\nthen it moved to the full state.\n\n82\n00:03:59.115 --> 00:04:00.885\nOkay, what does that mean?\n\n83\n00:04:00.885 --> 00:04:05.025\nWell, that means there's more than\none state an adjacency can be in.\n\n84\n00:04:05.025 --> 00:04:06.670\nWe don't normally see that, right.\n\n85\n00:04:06.670 --> 00:04:10.615\nWe normally just see the full adjacency,\nand that's it.\n\n86\n00:04:10.615 --> 00:04:11.885\nBut there's actually a bunch.\n\n87\n00:04:11.885 --> 00:04:14.523\nAnd if I do a show ip ospf nei,\nand I look,\n\n88\n00:04:14.523 --> 00:04:17.245\nhere's my connection to headquarters,\n\n89\n00:04:17.245 --> 00:04:22.480\nhere's my connection to branch 1 and\ntheir states are both set to full.\n\n90\n00:04:22.480 --> 00:04:25.420\nSo full is the only state that I see and\nin a good network,\n\n91\n00:04:25.420 --> 00:04:27.800\nin a network that's reliable and\nstable, that's what you expect.\n\n92\n00:04:27.800 --> 00:04:32.620\nYou just expect to see full but\nif there's a problem on your network,\n\n93\n00:04:32.620 --> 00:04:34.428\nthere's actually like seven\nother states that we can see.\n\n94\n00:04:34.428 --> 00:04:36.080\nThere's a bunch of other\nstates that you can see.\n\n95\n00:04:36.080 --> 00:04:38.530\nAnd it's important to\nunderstand what each one is and\n\n96\n00:04:38.530 --> 00:04:41.960\nwhat they do so that we can use it for\ntroubleshooting purposes.\n\n97\n00:04:41.960 --> 00:04:45.620\nIf an adjacency is not going full,\nthen there's a problem and\n\n98\n00:04:45.620 --> 00:04:47.110\nI need to sort that out, right.\n\n99\n00:04:47.110 --> 00:04:50.040\nThere's actually one other state that's\nconsidered normal and not a problem, but\n\n100\n00:04:50.040 --> 00:04:51.750\nwe'll see that in a minute, okay.\n\n101\n00:04:51.750 --> 00:04:54.060\nSo, I whipped up a quick list here.\n\n102\n00:04:54.060 --> 00:04:59.340\nThese are all the different states that\nan OSPF adjacency can be in, all right?\n\n103\n00:04:59.340 --> 00:05:01.120\nFull is the one we want.\n\n104\n00:05:01.120 --> 00:05:02.140\nThat's good.\n\n105\n00:05:02.140 --> 00:05:04.610\nWhen you have a full adjacency\nwith another router,\n\n106\n00:05:04.610 --> 00:05:08.160\nthat means you're connected to it and\nyou're exchanging routes.\n\n107\n00:05:08.160 --> 00:05:11.760\nYou're happily sharing information\nbetween you and the other router.\n\n108\n00:05:11.760 --> 00:05:14.330\nOkay, so we want to see full.\n\n109\n00:05:14.330 --> 00:05:17.320\nBut we could see one of these other\nguys that are up here, right,\n\n110\n00:05:17.320 --> 00:05:20.280\nthese other seven, starting with down.\n\n111\n00:05:20.280 --> 00:05:26.920\nDown is what you expect to see when you've\ngot OSPF configured and no neighbors.\n\n112\n00:05:26.920 --> 00:05:31.140\nIf you have no neighbors on a link,\nthen OSPF is down, right.\n\n113\n00:05:31.140 --> 00:05:33.480\nSo that just usually indicates\nyou've got no neighbor.\n\n114\n00:05:33.480 --> 00:05:36.146\nSo if you see your link is stuck in\nthat down state there's nobody out there\n\n115\n00:05:36.146 --> 00:05:36.880\nlistening for you.\n\n116\n00:05:36.880 --> 00:05:40.955\nAll right, now on most IOSs when you're\ndown it doesn't show up on the show\n\n117\n00:05:40.955 --> 00:05:44.187\nIPOSF Neighbor Command, and so\nwhile this is a real state,\n\n118\n00:05:44.187 --> 00:05:46.010\nit's not one we ever really see.\n\n119\n00:05:46.010 --> 00:05:47.360\nIt's kind of hidden from us in the UI.\n\n120\n00:05:48.840 --> 00:05:51.260\nThe next one is Attempt.\n\n121\n00:05:51.260 --> 00:05:54.940\nAnd Attempt is a weird one, because\nyou're not normally gonna see it, right?\n\n122\n00:05:54.940 --> 00:05:57.090\nIt's pretty rare.\n\n123\n00:05:57.090 --> 00:06:01.740\nOSPF, when I turn on OSPF,\nit uses multicast to go out and\n\n124\n00:06:01.740 --> 00:06:04.270\ndiscover your neighbors, right,\nit reaches out to find them and it says,\n\n125\n00:06:04.270 --> 00:06:05.490\nhey, is anybody out there?\n\n126\n00:06:05.490 --> 00:06:06.710\nI'm running OSPF.\n\n127\n00:06:06.710 --> 00:06:09.120\nAnd then the other routers respond\nback and say, hey, we're running OSPF,\n\n128\n00:06:09.120 --> 00:06:12.620\nand I learn it,\nwe move through the rest of these phases.\n\n129\n00:06:12.620 --> 00:06:16.730\nBut on some networks you\ncan't have multicast, right?\n\n130\n00:06:16.730 --> 00:06:20.310\nYou see these on NBMA networks,\nNon Broadcast Multi-access Networks,\n\n131\n00:06:20.310 --> 00:06:21.420\nlike frame relay.\n\n132\n00:06:21.420 --> 00:06:24.470\nA lot of frame relay networks\ndon't allow broadcast.\n\n133\n00:06:24.470 --> 00:06:27.780\nSo if I can't broadcast to find\nother people how do I find them?\n\n134\n00:06:27.780 --> 00:06:30.980\nWell, we find them by\nstatically defining them.\n\n135\n00:06:30.980 --> 00:06:34.770\nYou can use the neighbor command and\nstatically put an IP in there and say,\n\n136\n00:06:34.770 --> 00:06:36.940\nI'm going to connect to this IP address.\n\n137\n00:06:36.940 --> 00:06:39.650\nAnd then, we'll start to build\nthat relationship, all right.\n\n138\n00:06:39.650 --> 00:06:42.380\nYou see that really with just frame relay,\nnot with ethernet or MPLS or\n\n139\n00:06:42.380 --> 00:06:44.880\nthe other guys, really, just frame relay.\n\n140\n00:06:44.880 --> 00:06:48.644\nAnd in that scenario, you might have\nsomebody statically defined and\n\n141\n00:06:48.644 --> 00:06:51.080\nyou're attempting to reach them.\n\n142\n00:06:51.080 --> 00:06:51.880\nYou haven't reached them.\n\n143\n00:06:51.880 --> 00:06:54.670\nYou haven't actually talked to them yet,\nyou're just attempting.\n\n144\n00:06:54.670 --> 00:06:57.080\nYou're trying to get out there and\ncontact them.\n\n145\n00:06:57.080 --> 00:06:58.660\nAnd you haven't heard anything back yet.\n\n146\n00:06:58.660 --> 00:07:00.470\nSo that's when you'd see an attempt.\n\n147\n00:07:00.470 --> 00:07:02.170\nOn a normal, like an ethernet network,\n\n148\n00:07:02.170 --> 00:07:05.520\nyou'll never see attempt cuz you're not\nstatically defining your neighbors, right?\n\n149\n00:07:05.520 --> 00:07:06.310\nYou're using multicast.\n\n150\n00:07:08.420 --> 00:07:13.240\nNow when you reach out to somebody, right,\nI've reached out to this other router and\n\n151\n00:07:13.240 --> 00:07:16.050\nI hit them, right, or\nI got a message back from them,\n\n152\n00:07:16.050 --> 00:07:20.100\nso I know they're out there,\nthen we transition into the init state.\n\n153\n00:07:20.100 --> 00:07:24.320\nOkay, init is short for initializing, and\n\n154\n00:07:24.320 --> 00:07:28.000\nit means we have one-way communication,\nright?\n\n155\n00:07:28.000 --> 00:07:29.300\nI can see them.\n\n156\n00:07:29.300 --> 00:07:30.550\nI know that they're out there.\n\n157\n00:07:30.550 --> 00:07:31.350\nI can see them.\n\n158\n00:07:31.350 --> 00:07:33.320\nI hear their hellos, all right?\n\n159\n00:07:33.320 --> 00:07:36.250\nAnd now I need to talk to them,\nand get things moving.\n\n160\n00:07:36.250 --> 00:07:40.310\nOkay, if you see yourself\nstuck in the init state,\n\n161\n00:07:40.310 --> 00:07:43.460\nit usually means you got\none-way communication, right?\n\n162\n00:07:43.460 --> 00:07:46.120\nYou should only be in init for\na really brief moment, right,\n\n163\n00:07:46.120 --> 00:07:47.660\nless than a second in most cases.\n\n164\n00:07:47.660 --> 00:07:49.930\nSo it comes and goes really,\nreally quickly.\n\n165\n00:07:49.930 --> 00:07:54.273\nThat's what makes some of this stuff\nreally kind of hard to see, right?\n\n166\n00:07:54.273 --> 00:07:59.112\nIf I go, let me go back to one\nof my routers here, all right.\n\n167\n00:07:59.112 --> 00:08:03.656\nSo here I'm on branch two,\nif I do a show ip ospf Neighbor, right,\n\n168\n00:08:03.656 --> 00:08:05.373\neverything's in FULL.\n\n169\n00:08:05.373 --> 00:08:09.242\nIf I do a clear ip ospf 1 process,\n\n170\n00:08:09.242 --> 00:08:13.610\nI'm gonna clear my OSPF processor.\n\n171\n00:08:13.610 --> 00:08:15.730\nIt's gonna dump all my adjacencies.\n\n172\n00:08:15.730 --> 00:08:17.535\nAnd let's see how fast I can do this.\n\n173\n00:08:17.535 --> 00:08:22.325\nSo if I sit here, whoops, well, shoot,\nthat didn't work at all, did it.\n\n174\n00:08:22.325 --> 00:08:25.616\nCuz I've got a typo on my stupid screen.\n\n175\n00:08:25.616 --> 00:08:30.670\nLet me [LAUGH] try that, it's just\nnot gonna work for me here, is it?\n\n176\n00:08:30.670 --> 00:08:32.080\nYou have to be pretty\nfast to get in there.\n\n177\n00:08:32.080 --> 00:08:36.415\nAnd see how fast I transitioned from\nhaving nothing, from being down, right,\n\n178\n00:08:36.415 --> 00:08:39.602\ntransitioned all the way\nthrough the states to FULL.\n\n179\n00:08:39.602 --> 00:08:44.940\nIt's gonna happen faster than I can\nclear out that process and pull it up.\n\n180\n00:08:44.940 --> 00:08:49.768\nSo, if I, see here, yeah, see, I mean\nit's just such a fast thing that you're\n\n181\n00:08:49.768 --> 00:08:52.050\nnot normally gonna see those states.\n\n182\n00:08:52.050 --> 00:08:56.760\nSo, usually when you see the state,\nit's because you're stuck in it.\n\n183\n00:08:56.760 --> 00:09:00.320\nSo if I see Init, I probably have\nunidirectional communication.\n\n184\n00:09:00.320 --> 00:09:02.810\nNow, what can cause\nunidirectional communication?\n\n185\n00:09:02.810 --> 00:09:04.850\nThere's a few things that can cause it,\nright.\n\n186\n00:09:04.850 --> 00:09:06.430\nAnd I'll show these a little bit later.\n\n187\n00:09:06.430 --> 00:09:09.040\nI want to show you guys some\nexamples of what that looks like.\n\n188\n00:09:09.040 --> 00:09:11.700\nLet me skip over 2-Way for a second,\n\n189\n00:09:11.700 --> 00:09:14.300\nand I'm gonna jump to the next\none which is Exstart, okay.\n\n190\n00:09:14.300 --> 00:09:19.680\nWhen I'm in Init, that means I can\nsee them, I need to talk to them.\n\n191\n00:09:19.680 --> 00:09:22.580\nRight, we need to get to actually\nbeing able to exchange data.\n\n192\n00:09:22.580 --> 00:09:26.540\nAnd so we reach out to them,\nand now we both see each other.\n\n193\n00:09:26.540 --> 00:09:27.980\nAnd that's what 2-Way truly is,\n\n194\n00:09:27.980 --> 00:09:31.090\nright, you actually have\ntwo-way communication, right.\n\n195\n00:09:31.090 --> 00:09:34.589\nBut on a normal network you'll skip right\nover 2-Way and go right into Exstart.\n\n196\n00:09:35.890 --> 00:09:40.110\nExstart is exchange start,\nwe need to exchange routes.\n\n197\n00:09:40.110 --> 00:09:43.760\nSo I say to that router, here's the routes\nthat I know about, what do you have?\n\n198\n00:09:43.760 --> 00:09:45.090\nAnd they say here's\nthe routes that I know about.\n\n199\n00:09:45.090 --> 00:09:48.010\nIf you remember your packet type episode,\nthis is where you're exchanging your DBD,\n\n200\n00:09:48.010 --> 00:09:49.460\nyour database descriptor.\n\n201\n00:09:49.460 --> 00:09:52.040\nWe're exchanging that information\nto say what routes we have, okay?\n\n202\n00:09:52.040 --> 00:09:55.613\nSo now, I'm starting that process and\n\n203\n00:09:55.613 --> 00:10:01.160\nwe move into Exchange where\nwe actually do the exchange.\n\n204\n00:10:01.160 --> 00:10:06.110\nIn Exstart, what we're really doing is\nwe're agreeing just on a sequence number.\n\n205\n00:10:06.110 --> 00:10:08.900\nTo say, we're gonna exchange this\ninformation, we need to do it reliably.\n\n206\n00:10:08.900 --> 00:10:13.520\nA neat little fact about OSPF,\nOSPF is a reliable protocol.\n\n207\n00:10:13.520 --> 00:10:17.950\nIt exchanges information between systems,\nand it's using your IP network.\n\n208\n00:10:17.950 --> 00:10:20.940\nNow normally if I want a reliable\ncommunication what am I gonna use?\n\n209\n00:10:20.940 --> 00:10:21.710\n>> TCP.\n\n210\n00:10:21.710 --> 00:10:24.130\n>> TCP right,\nTransmission Control Protocol.\n\n211\n00:10:24.130 --> 00:10:27.030\nGives a secure communications,\nI mean reliable communications.\n\n212\n00:10:27.030 --> 00:10:29.900\nUDP is best effort but TCP is reliable.\n\n213\n00:10:29.900 --> 00:10:31.840\nBut OSPF doesn't use those.\n\n214\n00:10:31.840 --> 00:10:36.160\nOSPF doesn't use TCP,\nit doesn't use UDP, OSPF uses OSPF.\n\n215\n00:10:36.160 --> 00:10:37.740\nIt is its own protocol.\n\n216\n00:10:37.740 --> 00:10:41.760\nAnd so it has to have its own\nway to guarantee communications.\n\n217\n00:10:41.760 --> 00:10:45.200\nSo when we're in Exstart,\nwe're agreeing on a sequence number.\n\n218\n00:10:45.200 --> 00:10:49.290\nJust like TCP would have a sequence\nnumber, OSPF has a sequence number.\n\n219\n00:10:49.290 --> 00:10:53.900\nAnd then as we communicate, the other side\nwill be able to acknowledge those LS acts\n\n220\n00:10:53.900 --> 00:10:55.570\nright, the acknowledge packet type.\n\n221\n00:10:55.570 --> 00:11:00.020\nWe'll get acknowledgements back based on\nthe sequence number that they received.\n\n222\n00:11:00.020 --> 00:11:03.280\nAnd so\nExstart is picking the sequence number,\n\n223\n00:11:03.280 --> 00:11:06.520\nExchange is actually doing the exchange.\n\n224\n00:11:06.520 --> 00:11:10.040\nNow I can send my DBD and\nget an acknowledgement.\n\n225\n00:11:10.040 --> 00:11:12.857\nNow I can send my LSUs and\nget acknowledgements or\n\n226\n00:11:12.857 --> 00:11:14.790\nLSRs and get acknowledgements.\n\n227\n00:11:14.790 --> 00:11:16.750\nBecause there's a sequence\nnumber attached, right, so\n\n228\n00:11:16.750 --> 00:11:18.480\nall of that's happening\nright there in Exchange.\n\n229\n00:11:19.710 --> 00:11:24.680\nNow, once we do the exchange, we get the\nrouting data from the other router, right?\n\n230\n00:11:24.680 --> 00:11:27.220\nWe got their DBD, we got their routes.\n\n231\n00:11:27.220 --> 00:11:31.750\nNow I need to look at my topology,\nload those routes into my topology, and\n\n232\n00:11:31.750 --> 00:11:34.250\nrerun the Dijkstra algorithm, right?\n\n233\n00:11:34.250 --> 00:11:37.009\nI need to rerun the OSPF\nalgorithm to figure out,\n\n234\n00:11:37.009 --> 00:11:40.890\nare any of these new routes\nbetter than what I already had?\n\n235\n00:11:40.890 --> 00:11:43.920\nSome of them might be better, some of\nthem might be worse, but I need to know.\n\n236\n00:11:43.920 --> 00:11:46.190\nAnd once I know, I can take those routes,\n\n237\n00:11:46.190 --> 00:11:48.440\nput them in my routing table and\nall of that.\n\n238\n00:11:48.440 --> 00:11:52.380\nBut once my routing topology is updated,\nwhen my routing database\n\n239\n00:11:52.380 --> 00:11:57.870\nis the same as my neighbor's routing\ndatabase, then we transition to Full.\n\n240\n00:11:57.870 --> 00:11:59.690\nAnd that's what we normally see.\n\n241\n00:11:59.690 --> 00:12:04.730\nIt normally happens so\nfast that we only think of Down and Full.\n\n242\n00:12:04.730 --> 00:12:07.500\nWe don't realize all this other\nstuff happens in the middle.\n\n243\n00:12:07.500 --> 00:12:09.200\nAnd hopefully you never\nhave to care about that.\n\n244\n00:12:09.200 --> 00:12:11.560\nI don't care about the stuff in\nthe middle, because I'm full,\n\n245\n00:12:11.560 --> 00:12:12.950\nI'm up, I'm running.\n\n246\n00:12:12.950 --> 00:12:15.430\nBut when a problem happens on the network,\n\n247\n00:12:15.430 --> 00:12:17.130\nthat's when you care\nabout these other states.\n\n248\n00:12:17.130 --> 00:12:20.110\nThat's when these other become\nkind of important, all right.\n\n249\n00:12:20.110 --> 00:12:22.840\nSo let's run through a couple of them and\n\n250\n00:12:22.840 --> 00:12:25.410\nhighlight when we care about them,\nall right.\n\n251\n00:12:25.410 --> 00:12:28.420\nIf you see Down, that just means you\ncompletely don't see a neighbor.\n\n252\n00:12:28.420 --> 00:12:30.160\nYou're not getting any\nhellos on the network,\n\n253\n00:12:30.160 --> 00:12:32.275\nthe neighbor's just not out there, okay.\n\n254\n00:12:32.275 --> 00:12:35.515\nAnd you're not normally gonna see that cuz\nit's hidden from the UI, and that's it.\n\n255\n00:12:35.515 --> 00:12:37.895\nOccasionally you'll see it in\na debug like I did, right?\n\n256\n00:12:37.895 --> 00:12:40.405\nSo there, we went from FULL to DOWN.\n\n257\n00:12:40.405 --> 00:12:43.635\nBut when I do a show ip ospf neighbor,\nif it's down,\n\n258\n00:12:43.635 --> 00:12:46.585\nit just doesn't list it in the neighbor,\nso I never see it, right?\n\n259\n00:12:48.235 --> 00:12:52.260\nAttempt, Attempt means I've\nstatically defined a neighbor, but\n\n260\n00:12:52.260 --> 00:12:54.530\nI can't reach out to them,\nI can't contact them, right?\n\n261\n00:12:54.530 --> 00:12:58.780\nIf you go into your configuration,\nand go into ospf,\n\n262\n00:12:58.780 --> 00:13:01.420\nyou can actually define\nneighbors right here.\n\n263\n00:13:02.450 --> 00:13:09.870\nAnd so I can say, well there's a neighbor\nout there at 192.168.0.5, right?\n\n264\n00:13:09.870 --> 00:13:12.570\nI've got neighbors at .1, .2,\nand let's see, I'm branch 2, so\n\n265\n00:13:12.570 --> 00:13:15.780\nthere's another one at .4,\nbut there's nobody at .5.\n\n266\n00:13:15.780 --> 00:13:19.000\nAnd so I can come in and\ndefine this neighbor, and\n\n267\n00:13:19.000 --> 00:13:21.920\nspecify information about them,\nstatically assigning it.\n\n268\n00:13:21.920 --> 00:13:24.980\nBut, the neighbor's not\nactually out there, right?\n\n269\n00:13:24.980 --> 00:13:27.420\nAnd, well it's gonna complain,\n\n270\n00:13:27.420 --> 00:13:31.630\nlet me do it on one of my serial\ninterfaces that'll let me do it.\n\n271\n00:13:31.630 --> 00:13:34.030\nIt's telling me that's not\nan NBMA network, right,\n\n272\n00:13:34.030 --> 00:13:36.850\ncuz NBMA networks are where you\nwould statically assign this.\n\n273\n00:13:36.850 --> 00:13:41.632\nSo if I jump into one of my serial\ninterfaces and I'll pop this one into\n\n274\n00:13:41.632 --> 00:13:47.550\nospf, and\n\n275\n00:13:47.550 --> 00:13:52.870\nwe'll set the network type to\nnon-broadcast, there we go.\n\n276\n00:13:52.870 --> 00:13:54.570\nDon't worry about these commands yet.\n\n277\n00:13:54.570 --> 00:13:57.970\nWe'll do a whole separate show on\nthe network types a little bit later.\n\n278\n00:13:57.970 --> 00:14:01.264\nBut if I come in here and\nI define that neighbor now, pointing out\n\n279\n00:14:01.264 --> 00:14:05.050\nthis network which I don't even remember\nthe IP address to this network.\n\n280\n00:14:05.050 --> 00:14:08.080\nSo let's figure that out real quick.\n\n281\n00:14:08.080 --> 00:14:11.596\nAll right, so\nthat's the 192.168.1.3 network, right, and\n\n282\n00:14:11.596 --> 00:14:14.460\nI wanna statically define some\nneighbor that's out there.\n\n283\n00:14:14.460 --> 00:14:16.760\nAnd it looks like it's a class C, so\n\n284\n00:14:16.760 --> 00:14:20.540\nI'll just make up a system\nthat doesn't actually exist.\n\n285\n00:14:20.540 --> 00:14:25.450\nSo I'm gonna point to\nneighbor 192.168.1.5, okay?\n\n286\n00:14:25.450 --> 00:14:27.690\nSo I'm gonna define that neighbor.\n\n287\n00:14:27.690 --> 00:14:34.290\nWell, if I do a show ip ospf neighbor,\nsee this N/A that appeared?\n\n288\n00:14:34.290 --> 00:14:36.010\nAll right, it's showing N/A.\n\n289\n00:14:36.010 --> 00:14:40.950\nI know the IP address, but this isn't\nthe IP address, this is the router ID.\n\n290\n00:14:40.950 --> 00:14:46.150\nAnd since I can't talk to the neighbor,\nI can't get their router ID.\n\n291\n00:14:46.150 --> 00:14:48.340\nSo, I don't have a router ID to display.\n\n292\n00:14:48.340 --> 00:14:51.950\nAnd then I've got that its\nstate right now is down.\n\n293\n00:14:51.950 --> 00:14:56.270\nAnd if you sit here and\ndo your up arrow enough like this,\n\n294\n00:14:56.270 --> 00:14:59.820\nit flashes so\nfast you'll probably never catch it.\n\n295\n00:14:59.820 --> 00:15:02.605\nEvery now and then I get lucky and\nactually see, oops.\n\n296\n00:15:02.605 --> 00:15:06.840\n[LAUGH] Every now and then I get lucky and\nkinda get it to display.\n\n297\n00:15:06.840 --> 00:15:10.149\nBut what'll happen is, every now and then\nit's gonna reach out to that neighbor and\n\n298\n00:15:10.149 --> 00:15:11.670\nyou'll see it go attempt.\n\n299\n00:15:11.670 --> 00:15:14.520\nAll right, it's attempting to reach\nthat neighbor and then it fails and\n\n300\n00:15:14.520 --> 00:15:16.170\nthen it just goes right\nback to DOWN again.\n\n301\n00:15:16.170 --> 00:15:18.940\nBut it happens really fast cuz\nit's just a broadcast going out.\n\n302\n00:15:18.940 --> 00:15:22.870\nSo that's the example of when you'd see\nthat, is on one of the networks where\n\n303\n00:15:22.870 --> 00:15:26.630\nyou've statically defined a neighbor,\nand you can't contact them.\n\n304\n00:15:26.630 --> 00:15:28.500\nSo look for connectivity problems.\n\n305\n00:15:28.500 --> 00:15:31.940\nIt's almost always just a Layer 2 or\nLayer 3 issue.\n\n306\n00:15:31.940 --> 00:15:35.300\nLayer 2, you got a bad physical network.\n\n307\n00:15:35.300 --> 00:15:38.720\nOr Layer 3, you got some kind\nof IP addressing mismatch.\n\n308\n00:15:38.720 --> 00:15:40.490\nYou've specified an IP address for\na neighbor and\n\n309\n00:15:40.490 --> 00:15:41.890\nyou have no way to reach it, right?\n\n310\n00:15:41.890 --> 00:15:43.200\nThat would be kind of it.\n\n311\n00:15:43.200 --> 00:15:45.340\nSo test your connectivity.\n\n312\n00:15:45.340 --> 00:15:47.936\nCould be as simple as\na firewall in-between you, or\n\n313\n00:15:47.936 --> 00:15:51.535\nan access control list that's filtering\nOSPF traffic on that link, and\n\n314\n00:15:51.535 --> 00:15:53.485\nnot being able to get to the other side.\n\n315\n00:15:53.485 --> 00:15:57.694\nThese are all little things that could\ncause you to stay in that attempt,\n\n316\n00:15:57.694 --> 00:15:58.391\nall right.\n\n317\n00:15:58.391 --> 00:16:00.593\nThe same thing kinda goes for Init, right.\n\n318\n00:16:00.593 --> 00:16:04.139\nInit we see somebody else is out there.\n\n319\n00:16:04.139 --> 00:16:06.903\nWe know they're out there and\nnow we're gonna try and\n\n320\n00:16:06.903 --> 00:16:09.300\ntalk to them to move us out of an Init.\n\n321\n00:16:09.300 --> 00:16:13.740\nBut if we stay in Init, then that\nmeans we're sending data to them but\n\n322\n00:16:13.740 --> 00:16:15.330\nwe're not getting anything back, right?\n\n323\n00:16:15.330 --> 00:16:18.840\nOr maybe we are getting things back and\nit's malformed, right.\n\n324\n00:16:18.840 --> 00:16:20.870\nAnd let me show you an example there.\n\n325\n00:16:20.870 --> 00:16:24.380\nSo if take a, let's take\na router I'm communicating with.\n\n326\n00:16:24.380 --> 00:16:28.310\nSo I'm communicating with Branch2,\nthis guy right here, right.\n\n327\n00:16:28.310 --> 00:16:31.740\nSo I've got a connection to 2.2.2.2.,\nall right.\n\n328\n00:16:31.740 --> 00:16:33.860\nAnd when I communicate with it,\nwell, you know,\n\n329\n00:16:33.860 --> 00:16:35.430\nlet me switch to a different\nenvironment here.\n\n330\n00:16:35.430 --> 00:16:37.080\nI'm gonna go a little bit more simple.\n\n331\n00:16:37.080 --> 00:16:41.160\nI want to manipulate the MTU, right,\nthe Maximum Transmission Unit.\n\n332\n00:16:41.160 --> 00:16:45.510\nIn OSPF, when you have two nodes connect,\ntheir MTU has to match.\n\n333\n00:16:45.510 --> 00:16:49.790\nIf it doesn't match,\nyou end up throwing those packets out, and\n\n334\n00:16:49.790 --> 00:16:51.740\nwhat happens is you get\nunidirectional traffic.\n\n335\n00:16:51.740 --> 00:16:54.460\nThis is a great way to kind of force\nits way of unidirectional traffic.\n\n336\n00:16:54.460 --> 00:16:57.420\nUnidirectional traffic can also\nbe caused by like bad fiber,\n\n337\n00:16:57.420 --> 00:17:00.490\nwhere you have a transmit and a receive\nstrand and maybe one of them has died.\n\n338\n00:17:00.490 --> 00:17:02.780\nIt can also be caused by things\nlike ACLs and firewalls,\n\n339\n00:17:02.780 --> 00:17:05.310\nwhere traffic's allowed to go one way and\nnot the other way.\n\n340\n00:17:05.310 --> 00:17:07.315\nThose are all things that can\ncause unidirectional traffic.\n\n341\n00:17:07.315 --> 00:17:08.535\nBut the one that's easiest for\n\n342\n00:17:08.535 --> 00:17:11.305\nme to create here in the lab\nis to change an MTU size.\n\n343\n00:17:11.305 --> 00:17:15.545\nSo for example, if I go up to\nmy headquarters, all right, and\n\n344\n00:17:15.545 --> 00:17:20.665\nI, let me turn this on for\none of my serial interfaces.\n\n345\n00:17:20.665 --> 00:17:23.445\nSo I'm gonna go in here and\nsay, IP ospf 1 area 0.\n\n346\n00:17:23.445 --> 00:17:27.605\nSo I'm turning on OSPF on my serial1/1 and\n\n347\n00:17:27.605 --> 00:17:30.725\nbranch one is connected\nto that same thing.\n\n348\n00:17:30.725 --> 00:17:34.070\nSo I'll say put that in the area.\n\n349\n00:17:34.070 --> 00:17:35.830\nOkay, I should see an adjacency build up.\n\n350\n00:17:35.830 --> 00:17:36.850\nThere it goes.\n\n351\n00:17:36.850 --> 00:17:40.840\nSo now I've got a good adjacency\nbuilt up over my serial interface.\n\n352\n00:17:42.030 --> 00:17:46.600\nAll right, and I can see it right here,\nand it's a full adjacency.\n\n353\n00:17:46.600 --> 00:17:48.690\nOkay, so that's good, right?\n\n354\n00:17:48.690 --> 00:17:51.920\nWell, if I make that unidirectional.\n\n355\n00:17:51.920 --> 00:17:54.770\nIf I take one of my routers,\nand you know let me do this.\n\n356\n00:17:54.770 --> 00:17:58.980\nOn headquarters,\nI'm gonna do a debug ip ospf packet.\n\n357\n00:18:00.310 --> 00:18:02.350\nSo I can start to see\nsome information there.\n\n358\n00:18:02.350 --> 00:18:05.284\nBut I'm also going to a,\nwell actually let me not do packet.\n\n359\n00:18:05.284 --> 00:18:07.240\nPacket is going to give me\nmore information than I want.\n\n360\n00:18:07.240 --> 00:18:09.260\nIt's always a good idea to\ndebug just what you need.\n\n361\n00:18:09.260 --> 00:18:11.850\nAnd so what I really want is\njust adjacency information.\n\n362\n00:18:11.850 --> 00:18:14.430\nOkay, so I'm gonna set it so\nI'm just debugging that.\n\n363\n00:18:14.430 --> 00:18:19.878\nSo debug ip ospf adj, right, so\nhere's my adjacency information.\n\n364\n00:18:19.878 --> 00:18:24.659\nAnd you know maybe to clean this up even\nmore, let me shut off my metro link.\n\n365\n00:18:25.930 --> 00:18:28.565\nSo I'm not seeing all those other\nneighbors that are out there, okay.\n\n366\n00:18:28.565 --> 00:18:35.047\nSo now, the only interface that I'm up and\nactive on is my serial interface, right.\n\n367\n00:18:35.047 --> 00:18:38.167\nSo any adjacency information that I\nsee here is just going to be from that\n\n368\n00:18:38.167 --> 00:18:39.110\nneighbor.\n\n369\n00:18:39.110 --> 00:18:44.470\nAnd looks like I left\nmy one debug turned on.\n\n370\n00:18:44.470 --> 00:18:47.750\nSo let me get back to just\ndoing my adjacency debugs.\n\n371\n00:18:47.750 --> 00:18:48.310\nThere.\n\n372\n00:18:48.310 --> 00:18:49.450\nOkay.\n\n373\n00:18:49.450 --> 00:18:51.490\nNow I'm gonna jump over to branch one.\n\n374\n00:18:51.490 --> 00:18:55.760\nAnd on branch one, on that serial\ninterface, I'm gonna adjust my MTU.\n\n375\n00:18:55.760 --> 00:18:56.940\nDefault MTU is 1500.\n\n376\n00:18:56.940 --> 00:19:00.370\nI'm gonna set mine to, oh,\nI don't know, let's go 800, okay.\n\n377\n00:19:02.010 --> 00:19:05.910\nNow when I adjust that MTU,\nI'm gonna start having some problems.\n\n378\n00:19:05.910 --> 00:19:06.720\nRight?\n\n379\n00:19:06.720 --> 00:19:08.100\nNot problems here.\n\n380\n00:19:08.100 --> 00:19:08.980\nMy MTU is 800.\n\n381\n00:19:08.980 --> 00:19:13.820\nBut the other side might start sending me\nMTUs that are 1500 and they're too big.\n\n382\n00:19:13.820 --> 00:19:15.320\nNow we got a mismatch, right.\n\n383\n00:19:15.320 --> 00:19:16.800\nNow I'm gonna fill that out and so\n\n384\n00:19:16.800 --> 00:19:20.900\nthat I can send them data,\nbut they can't send me data.\n\n385\n00:19:20.900 --> 00:19:22.655\nNow I've got unidirectional\ncommunications.\n\n386\n00:19:23.660 --> 00:19:27.400\nAnd on the headquarters side,\nI'm gonna see that start to drop, right.\n\n387\n00:19:27.400 --> 00:19:32.720\nAnd if I turn my debugging on,\non this side, also and\n\n388\n00:19:32.720 --> 00:19:35.480\nI do a debug ip ospf adj.\n\n389\n00:19:36.650 --> 00:19:37.190\nAll right.\n\n390\n00:19:37.190 --> 00:19:38.910\nNow, we should start to\nsee adjacency information.\n\n391\n00:19:38.910 --> 00:19:41.280\nAnd it's actually gonna\ntell us about the MTU size.\n\n392\n00:19:41.280 --> 00:19:42.850\nMTU is one it can detect.\n\n393\n00:19:42.850 --> 00:19:48.110\nIf it was a bad receive strand on\na fiber link, it can't tell that, right?\n\n394\n00:19:48.110 --> 00:19:51.380\nI guess we could configure UDLD,\nand it could find it.\n\n395\n00:19:51.380 --> 00:19:53.400\nBut OSPF, by itself, couldn't find that.\n\n396\n00:19:53.400 --> 00:19:56.540\nBut OSPF will see the MTU mismatch,\nand it'll warn me about that.\n\n397\n00:19:56.540 --> 00:20:00.340\nWell it should eventually it isn't yet\nis it?\n\n398\n00:20:00.340 --> 00:20:04.440\nIf I take a look at my neighbors,\nI can see I still got a,\n\n399\n00:20:04.440 --> 00:20:07.640\nit still thinks that it's full though let\nme clear out that process and we'll see.\n\n400\n00:20:08.720 --> 00:20:11.070\nIt's probably ticking down its dead timer,\n\n401\n00:20:11.070 --> 00:20:14.380\nsee my dead timer is up\nhere to 32 already, right.\n\n402\n00:20:14.380 --> 00:20:16.280\nI'm sending hello's every 10 seconds so\n\n403\n00:20:16.280 --> 00:20:19.720\nI know there is a problem\nmy dead timer is too high.\n\n404\n00:20:19.720 --> 00:20:22.860\nBut it just hasn't quite detected yet.\n\n405\n00:20:22.860 --> 00:20:24.350\nSo let me just clear that process.\n\n406\n00:20:24.350 --> 00:20:26.260\nSo that's gonna dump my neighbors, and\n\n407\n00:20:26.260 --> 00:20:30.120\nthen it's going to start to kind\nof readjust for that, right.\n\n408\n00:20:30.120 --> 00:20:32.310\nSo if we take a look at our neighbors now.\n\n409\n00:20:32.310 --> 00:20:34.490\n>> I think you need to type in yes and\nreset.\n\n410\n00:20:34.490 --> 00:20:35.110\n>> Oh shoot.\n\n411\n00:20:35.110 --> 00:20:37.940\nYeah, that'll probably make a difference,\nwon't it Ronnie?\n\n412\n00:20:37.940 --> 00:20:39.310\nI got a little ahead of myself.\n\n413\n00:20:39.310 --> 00:20:41.490\nThere we go.\nAll right, so we're gonna dump it, and\n\n414\n00:20:41.490 --> 00:20:43.430\nthen it's gonna go and\ntry to rebuild this up and\n\n415\n00:20:43.430 --> 00:20:46.390\nstart to kind of rebuild\nthat neighbor relationship.\n\n416\n00:20:46.390 --> 00:20:47.320\nAnd notice what I've got here.\n\n417\n00:20:47.320 --> 00:20:49.590\nI'm receiving a DBD from the other router.\n\n418\n00:20:49.590 --> 00:20:51.480\nI'm receiving data from them.\n\n419\n00:20:51.480 --> 00:20:55.019\nBut here the neighbor has\na smaller interface MTU, right.\n\n420\n00:20:55.019 --> 00:20:58.000\nI'm getting that warning\nthat lets me know that.\n\n421\n00:20:58.000 --> 00:21:02.740\nAnd if I take a look at show ip ospf\nneighbor, see I'm in the exchange state.\n\n422\n00:21:02.740 --> 00:21:06.100\nNormally I wouldn't see exchange,\nit comes by so fast, right.\n\n423\n00:21:06.100 --> 00:21:10.110\nBut here it moved through a Init,\nit's moving into an exstart, it moved into\n\n424\n00:21:10.110 --> 00:21:13.130\nexchange and it's trying to exchange and\nit's gonna have some problems.\n\n425\n00:21:13.130 --> 00:21:16.310\nAnd it may be able to get through it but\na lot of times it's not gonna be able to.\n\n426\n00:21:16.310 --> 00:21:20.470\nAnd that's because the initial packets\nmight have been under 800 bytes and\n\n427\n00:21:20.470 --> 00:21:24.510\nit was fine, but now I start trying\nto send things over 800 bytes.\n\n428\n00:21:24.510 --> 00:21:26.780\nAnd I'm crossing the MTU level and\nI can't do it, and so\n\n429\n00:21:26.780 --> 00:21:28.350\nnow I'm stuck in that exchange.\n\n430\n00:21:28.350 --> 00:21:32.900\nLet me turn off the debug here,\nthis is gonna keep routing by.\n\n431\n00:21:32.900 --> 00:21:35.900\nAnd so now when I do that show\nIPO SPF neighbor I can see it.\n\n432\n00:21:35.900 --> 00:21:36.670\nI'm stuck in Exchange.\n\n433\n00:21:37.890 --> 00:21:42.150\nSo, if you see yourself stuck, a lot\nof times it is unidirectional traffic.\n\n434\n00:21:42.150 --> 00:21:43.570\nWe can go one way and not the other.\n\n435\n00:21:43.570 --> 00:21:46.630\nMaybe I'm receiving but not sending or\nI'm sending but not receiving.\n\n436\n00:21:46.630 --> 00:21:49.410\nAnd it could be layer two,\nit could be a firewall,\n\n437\n00:21:49.410 --> 00:21:51.070\nit could be all sorts of things like that.\n\n438\n00:21:51.070 --> 00:21:53.260\nOr it could be something as\nsimple as MTU mismatch and\n\n439\n00:21:53.260 --> 00:21:54.300\nyou'll see that in your debug.\n\n440\n00:21:56.070 --> 00:21:57.400\nAll right, some of the other things.\n\n441\n00:21:57.400 --> 00:22:00.212\nOh, let's talk about two-way.\n\n442\n00:22:00.212 --> 00:22:04.875\nTwo-way is the one I skipped over when I\nwas talking about the different states,\n\n443\n00:22:04.875 --> 00:22:06.300\ntwo-way I skipped over.\n\n444\n00:22:06.300 --> 00:22:10.280\nTwo way, means that I've got\na connection with another router.\n\n445\n00:22:10.280 --> 00:22:15.150\nI see them, they see me, but\nwe're not exchanging, okay.\n\n446\n00:22:15.150 --> 00:22:17.430\nNow, normally that would be bad, but\n\n447\n00:22:17.430 --> 00:22:21.590\nthere are times where that's a good thing,\nwhere we expect to see it, all right.\n\n448\n00:22:21.590 --> 00:22:25.580\nOn a point to point link,\ninside of OSPF, right,\n\n449\n00:22:25.580 --> 00:22:28.700\nso my headquarters\nconnection to branch one.\n\n450\n00:22:28.700 --> 00:22:31.450\nInside of that connection,\nactually, let me fix it.\n\n451\n00:22:31.450 --> 00:22:36.100\nI need to put that MTU back to 1500,\nthere we go.\n\n452\n00:22:36.100 --> 00:22:38.180\nSo I wanna make this thing happy again.\n\n453\n00:22:39.200 --> 00:22:40.755\nI wanna have happy OSPF.\n\n454\n00:22:40.755 --> 00:22:42.780\n>> [LAUGH]\n>> And\n\n455\n00:22:42.780 --> 00:22:45.200\nwe'll just make sure\nthat gets healthy again.\n\n456\n00:22:45.200 --> 00:22:48.180\nSo it's gonna show as down for\na moment, but it should retransmit.\n\n457\n00:22:48.180 --> 00:22:52.150\nSee how I've got here too many\nretransmits and so it finally gave up?\n\n458\n00:22:52.150 --> 00:22:53.800\nNow if I wait, it'll eventually clear it.\n\n459\n00:22:53.800 --> 00:22:58.220\nBut I can clear the process myself,\nso I'll do that.\n\n460\n00:23:00.670 --> 00:23:03.030\nAnd then we should get that adjacency\nto build back up, there we go, and\n\n461\n00:23:03.030 --> 00:23:05.130\nwe went straight back to full so\nwe're in business.\n\n462\n00:23:05.130 --> 00:23:06.790\nSo things are up and going and\n\n463\n00:23:06.790 --> 00:23:11.280\non a point to point link like this,\nheadquarters is on one end of the link.\n\n464\n00:23:11.280 --> 00:23:12.610\nRight, headquarters is here.\n\n465\n00:23:12.610 --> 00:23:15.914\nOn the other end of that link is branch\none, these are the two routers, right.\n\n466\n00:23:15.914 --> 00:23:19.830\nAnd so they should connect up and start\nexchanging routes, that's what we expect.\n\n467\n00:23:19.830 --> 00:23:22.988\nAnd so when I take a look\nat my OSPF neighbors now,\n\n468\n00:23:22.988 --> 00:23:25.600\nI'm in that full state, okay.\n\n469\n00:23:25.600 --> 00:23:27.190\nSo on point to point links,\n\n470\n00:23:27.190 --> 00:23:30.410\nyou expect to go full,\nbecause there's only two routers, right?\n\n471\n00:23:30.410 --> 00:23:32.980\nThere's just two people you're gonna talk.\n\n472\n00:23:32.980 --> 00:23:35.200\nBut what if it's a multi-access network?\n\n473\n00:23:35.200 --> 00:23:37.130\nWhat if it's like an Ethernet network?\n\n474\n00:23:37.130 --> 00:23:39.250\nOn an Ethernet network,\nyou can have more, right?\n\n475\n00:23:39.250 --> 00:23:39.930\nLook at mine here.\n\n476\n00:23:39.930 --> 00:23:42.590\nI've got this Metro E network,\nI've got four routers on it.\n\n477\n00:23:42.590 --> 00:23:47.920\nIn OSPF, every router is aware of every\nother router that's out there, okay.\n\n478\n00:23:47.920 --> 00:23:50.838\nSo in theory these routers could\nall be talking to each other.\n\n479\n00:23:50.838 --> 00:23:53.270\nBut as my network grows and\ngrows and grows,\n\n480\n00:23:53.270 --> 00:23:55.451\nthat becomes a lot of chatter, right?\n\n481\n00:23:55.451 --> 00:23:57.375\nI'm sending hellos every ten seconds.\n\n482\n00:23:57.375 --> 00:24:00.361\nIf I have 200 routers on this one subnet,\n\n483\n00:24:00.361 --> 00:24:04.410\nthat's a lot of hello\nchatter on the network.\n\n484\n00:24:04.410 --> 00:24:09.409\nWhat happens is, when you have\na multi access network, it plans for\n\n485\n00:24:09.409 --> 00:24:13.633\nthat, and it elects what is\ncalled a designated router.\n\n486\n00:24:13.633 --> 00:24:16.891\nThe designated router serves as\nthe central point for that, and\n\n487\n00:24:16.891 --> 00:24:20.148\nyou guys should have already\nlearned about this in the CCNA, but\n\n488\n00:24:20.148 --> 00:24:23.948\nto make sure we recap, the designated\nrouter is the person responsible for\n\n489\n00:24:23.948 --> 00:24:25.790\nthat area, for that link at least.\n\n490\n00:24:25.790 --> 00:24:29.223\nHere, the Metro E, not necessarily\nthe whole area, but this link.\n\n491\n00:24:29.223 --> 00:24:32.804\nAnd all the other routers that are out\nthere, when they have a new route,\n\n492\n00:24:32.804 --> 00:24:34.280\nthey don't tell everybody.\n\n493\n00:24:34.280 --> 00:24:36.750\nThey don't shout at the world,\nhey everybody, I got this new route!\n\n494\n00:24:36.750 --> 00:24:41.350\nThey just tell the DR, and\nthen the DR tells everybody else.\n\n495\n00:24:41.350 --> 00:24:43.302\nThe DR,\nthe designated router is responsible for\n\n496\n00:24:43.302 --> 00:24:44.935\nall the communications on that network.\n\n497\n00:24:44.935 --> 00:24:48.890\nEverybody talks to the DR,\nthey relay through it, all right.\n\n498\n00:24:48.890 --> 00:24:51.810\nAnd then you have a BDR,\nthe backup designated router.\n\n499\n00:24:51.810 --> 00:24:56.380\nIf the designated router fails,\nthe backup designated router kicks in.\n\n500\n00:24:56.380 --> 00:25:02.560\nAnd so if I learn about a new route\nI tell it to the DR and the BDR.\n\n501\n00:25:02.560 --> 00:25:07.460\nSo, I expect to have a full\nadjacency with the DR and the BDR.\n\n502\n00:25:07.460 --> 00:25:10.060\nBut what about all the other routers,\nright?\n\n503\n00:25:10.060 --> 00:25:10.839\nI know about them.\n\n504\n00:25:10.839 --> 00:25:11.760\nI see them.\n\n505\n00:25:11.760 --> 00:25:14.340\nAs OSPF I see the other routers.\n\n506\n00:25:14.340 --> 00:25:18.017\nWell I don't exchange routes with them,\ncuz I only talk to the DR and BDR.\n\n507\n00:25:18.017 --> 00:25:22.890\nSo on those guys, they'll go two way and\nthey'll stay two way, okay?\n\n508\n00:25:22.890 --> 00:25:24.840\nSo let me show you that.\n\n509\n00:25:24.840 --> 00:25:27.945\nI shut off my metro e\nconnection on headquarters, but\n\n510\n00:25:27.945 --> 00:25:29.604\nlet me get it turned back on.\n\n511\n00:25:29.604 --> 00:25:30.620\nAll right.\n\n512\n00:25:30.620 --> 00:25:33.577\nAnd so I should see some adjacencies\ncome up here in just a moment.\n\n513\n00:25:33.577 --> 00:25:37.359\nAnd when they do, we're reaching\nout on this multi axis network.\n\n514\n00:25:37.359 --> 00:25:41.812\nNow if your multi axis network only has\ntwo nodes, one's going to be the DR,\n\n515\n00:25:41.812 --> 00:25:46.650\none's gonna be the BDR and\nyou expect everything to be full, right.\n\n516\n00:25:46.650 --> 00:25:50.760\nBut if you have, oh, I'm out of config.\n\n517\n00:25:50.760 --> 00:25:51.850\nThere we go.\n\n518\n00:25:51.850 --> 00:25:55.790\nIf you have more than one, then things\nmight go a little bit different.\n\n519\n00:25:55.790 --> 00:25:58.180\nNow here's my ethernet networks, right?\n\n520\n00:25:58.180 --> 00:26:05.148\nAnd I can see that my headquarters has a\nconnection to branch one and In Branch 2.\n\n521\n00:26:05.148 --> 00:26:08.514\nOne's FULL/DR, one's FULL/BDR, right?\n\n522\n00:26:08.514 --> 00:26:10.515\nSo I've got two full adjacencies.\n\n523\n00:26:10.515 --> 00:26:11.375\nWell what does that make me?\n\n524\n00:26:12.595 --> 00:26:16.191\nIf I see DR and BDR like that, that means\nthat I'm just a regular old router.\n\n525\n00:26:16.191 --> 00:26:19.405\nI'm not the DR or the BDR, okay.\n\n526\n00:26:19.405 --> 00:26:22.383\nIf I bring up a fourth router, right,\nlet me go bring up another guy.\n\n527\n00:26:22.383 --> 00:26:23.785\nWe'll bring this guy up.\n\n528\n00:26:23.785 --> 00:26:28.375\nSo, If we do a little router ospf 1,\n\n529\n00:26:28.375 --> 00:26:34.460\nrouter-id, we'll make him 4.4.4.4.\n\n530\n00:26:34.460 --> 00:26:37.530\nI'll pop him into area 0 real quick.\n\n531\n00:26:38.530 --> 00:26:39.430\nThere we go.\n\n532\n00:26:39.430 --> 00:26:43.551\nThis guy's going to come up and it's going\nto build a full adjacency to the DR, and\n\n533\n00:26:43.551 --> 00:26:48.430\nit's gonna build a full adjacency to\nthe BDR, which were branch 1 and branch 2.\n\n534\n00:26:48.430 --> 00:26:49.933\nBut what about headquarters?\n\n535\n00:26:49.933 --> 00:26:52.070\nIt's going to know about headquarters.\n\n536\n00:26:52.070 --> 00:26:54.420\nIt's going to build an adjacency\nwith headquarters, but\n\n537\n00:26:54.420 --> 00:26:56.060\nit's not going to build it all the way.\n\n538\n00:26:56.060 --> 00:26:58.495\nSee how these two guys just went full?\n\n539\n00:26:58.495 --> 00:27:00.060\nI didn't get a message from headquarters.\n\n540\n00:27:00.060 --> 00:27:01.360\nOne to one to one didn't show up.\n\n541\n00:27:01.360 --> 00:27:05.550\nAnd that's because headquarters\nisn't a DR, and they aren't a BDR.\n\n542\n00:27:05.550 --> 00:27:08.008\nInstead they are other.\n\n543\n00:27:08.008 --> 00:27:09.110\nThey're DROTHER, right?\n\n544\n00:27:09.110 --> 00:27:10.583\nDesignated router other.\n\n545\n00:27:10.583 --> 00:27:15.100\nSomething's that not a DR or a BDR, and\nso if I do a show ip ospf neighbor,\n\n546\n00:27:15.100 --> 00:27:17.480\nI see headquarters right there.\n\n547\n00:27:17.480 --> 00:27:20.670\nThey show up as DROTHER,\nlike Ronnie said, but they're two way.\n\n548\n00:27:20.670 --> 00:27:21.900\nAnd they're stuck.\n\n549\n00:27:21.900 --> 00:27:23.609\nThey're stuck in two way, and\n\n550\n00:27:23.609 --> 00:27:27.369\nthey'll be stuck in two way forever\nunless one of these guys fails.\n\n551\n00:27:27.369 --> 00:27:30.067\nIf a DR or a BDR fails,\nan election will occur, and\n\n552\n00:27:30.067 --> 00:27:33.560\nsomebody new becomes it,\nwell the BDR will normally become it.\n\n553\n00:27:33.560 --> 00:27:35.880\nSomebody would be elected to\nbecome the new BDR, right.\n\n554\n00:27:35.880 --> 00:27:37.188\nSo that's gonna happen.\n\n555\n00:27:37.188 --> 00:27:38.587\nAnd you can influence this.\n\n556\n00:27:38.587 --> 00:27:42.500\nI can influence who's gonna be\nthe DR by setting a priority.\n\n557\n00:27:42.500 --> 00:27:47.484\nAnd you set that priority on an interface\nlike on headquarters If I were to get into\n\n558\n00:27:47.484 --> 00:27:51.294\ne0/0, I might want to be the DR for\none link and not the DR for\n\n559\n00:27:51.294 --> 00:27:54.548\nanother link,\nthat's why we do it on an interface.\n\n560\n00:27:54.548 --> 00:27:59.557\nIn here you'll see where you\ncan specify your ospf priority,\n\n561\n00:27:59.557 --> 00:28:03.313\nand that's going to\ninfluence who is the DR and\n\n562\n00:28:03.313 --> 00:28:06.796\nwho is the BDR, or\nwho is just the DROTHER.\n\n563\n00:28:06.796 --> 00:28:10.503\nYou can set that value, and by default,\nall the routers are tied and\n\n564\n00:28:10.503 --> 00:28:12.203\nit comes down to the router ID.\n\n565\n00:28:12.203 --> 00:28:14.753\nIt just uses the router ID to pick\nwho's going to be the winner, right.\n\n566\n00:28:14.753 --> 00:28:17.800\nOr whoever comes up first, right,\nbecause it's not preemptive.\n\n567\n00:28:17.800 --> 00:28:19.620\nSomebody's not going to\nbump somebody else out.\n\n568\n00:28:19.620 --> 00:28:23.476\nSo even if I adjust my priority right now,\nnothing's going to happen.\n\n569\n00:28:23.476 --> 00:28:26.600\nThe priority only gets taken into\naccount when an election occurs.\n\n570\n00:28:26.600 --> 00:28:29.739\nSo if I set my priority really low here,\nlike priority 1,\n\n571\n00:28:29.739 --> 00:28:33.261\nWell, then, if the other routers fail and\nthey start looking for\n\n572\n00:28:33.261 --> 00:28:37.124\na new DR, I'll have a great priority,\nand I'll become that, right.\n\n573\n00:28:37.124 --> 00:28:40.080\nBut otherwise it's just\ngonna stay the way it is.\n\n574\n00:28:40.080 --> 00:28:41.300\nIt's not gonna change.\n\n575\n00:28:41.300 --> 00:28:43.525\nBut that's an example where\nyou'll see that two way, right.\n\n576\n00:28:43.525 --> 00:28:46.742\nSo over here on the branch,\nI see that two way DROTHER.\n\n577\n00:28:46.742 --> 00:28:50.160\nYou expect to see that in\nmulti access networks.\n\n578\n00:28:50.160 --> 00:28:52.660\nSo in networks like this where\nyou got more than two routers,\n\n579\n00:28:52.660 --> 00:28:55.110\nit's not point to point,\nthen you expect to see that.\n\n580\n00:28:55.110 --> 00:28:59.401\nIn a point to point network, you pretty\nmuch always expect to see full, slash and\n\n581\n00:28:59.401 --> 00:29:00.420\na hyphen, right.\n\n582\n00:29:00.420 --> 00:29:03.226\nThe hyphen just means there is no DR or\nBDR, cuz there's only two nodes,\n\n583\n00:29:03.226 --> 00:29:04.335\nyou don't need it, right.\n\n584\n00:29:04.335 --> 00:29:07.900\nAnd there's no DR other because\nthere's no DR in the first place.\n\n585\n00:29:07.900 --> 00:29:09.030\nSo it's just full.\n\n586\n00:29:09.030 --> 00:29:10.389\nThat's what we wanna see.\n\n587\n00:29:10.389 --> 00:29:14.910\nAll right, so let's quick recap these,\ncuz it's kind of a lot to take in, right.\n\n588\n00:29:14.910 --> 00:29:17.143\nThese are the eight states of OSPF.\n\n589\n00:29:17.143 --> 00:29:19.840\nDown, just meant that OSPF's not running.\n\n590\n00:29:19.840 --> 00:29:21.830\nWe're not seeing any neighbors, right.\n\n591\n00:29:21.830 --> 00:29:25.420\nAttempt, we've got a statically defined\nneighbor, but we can't see them.\n\n592\n00:29:25.420 --> 00:29:27.800\nAnd that would be on NBMA network.\n\n593\n00:29:27.800 --> 00:29:31.540\nInit, we see somebody,\nnow we're trying to talk to them.\n\n594\n00:29:32.760 --> 00:29:36.640\nTwo way, we see them, they see us,\nbut we're not exchanging routes.\n\n595\n00:29:37.720 --> 00:29:41.296\nExstart, we see each other and\nwe're ready to start,\n\n596\n00:29:41.296 --> 00:29:44.112\nwe just need to agree\non a sequence number.\n\n597\n00:29:44.112 --> 00:29:47.593\nExchange, we see them, they see us,\nwe got a sequence number,\n\n598\n00:29:47.593 --> 00:29:50.180\nnow we're actually\nexchanging routing data.\n\n599\n00:29:50.180 --> 00:29:54.053\nWe're sending DVD's and\nLSR's back and forth, right.\n\n600\n00:29:54.053 --> 00:29:58.549\nLoading, I got their data now I'm\nloading it into my topology and\n\n601\n00:29:58.549 --> 00:30:00.780\nre running the OSPF algorithm.\n\n602\n00:30:00.780 --> 00:30:05.300\nAnd then full, we've got everything we're\nprocessed we're now converged with them,\n\n603\n00:30:05.300 --> 00:30:07.070\nand everything's happy.\n\n604\n00:30:07.070 --> 00:30:11.035\nAnd from now on, we're just gonna\nsend hellos back and forth, and\n\n605\n00:30:11.035 --> 00:30:13.375\nLSUs when we learn something new, right.\n\n606\n00:30:13.375 --> 00:30:16.805\nOtherwise, we're nice and\nstable, the adjacency is full.\n\n607\n00:30:16.805 --> 00:30:19.845\nSo those are the eight states,\nthat's kinda the process they go through\n\n608\n00:30:19.845 --> 00:30:22.365\nevery time a new adjacency\ncomes up in the background.\n\n609\n00:30:22.365 --> 00:30:25.875\nIt's not readily apparent, cuz all\nthis stuff happens in the background.\n\n610\n00:30:25.875 --> 00:30:29.125\nIt doesn't become really apparent until\nyou have a true failure right, and\n\n611\n00:30:29.125 --> 00:30:32.423\nthen you start seeing it in your debugs or\nyour stuck in a particular state, so\n\n612\n00:30:32.423 --> 00:30:34.436\nthat's where the troubleshooting comes in.\n\n613\n00:30:34.436 --> 00:30:38.120\n>> All right Don well that sounds like\na great place to wrap this show up.\n\n614\n00:30:38.120 --> 00:30:40.271\nRemember that when we start taking\na look at neighbors states,\n\n615\n00:30:40.271 --> 00:30:42.950\nthese are the eight that you really have\nto know about because it really is gonna\n\n616\n00:30:42.950 --> 00:30:44.142\nhelp you out in troubleshooting.\n\n617\n00:30:44.142 --> 00:30:48.619\nEspecially those OSPF neighbors and if you\ndon't understand and you go into the exam,\n\n618\n00:30:48.619 --> 00:30:51.869\nyou're gonna actually be in for\na rude awakening at times, and\n\n619\n00:30:51.869 --> 00:30:54.670\nwhen you start seeing\nthose types of questions.\n\n620\n00:30:54.670 --> 00:30:57.330\nBut overall though,\nmake sure you take a little bit of time,\n\n621\n00:30:57.330 --> 00:30:59.450\nmake sure you do learn about\nthese neighbor states as well.\n\n622\n00:30:59.450 --> 00:31:01.950\nWell that wraps up our show for today.\n\n623\n00:31:01.950 --> 00:31:03.989\nThank you for watching,\nI'm you're host Ronnie Wong.\n\n624\n00:31:03.989 --> 00:31:05.016\n>> And I'm Don Pezet.\n\n625\n00:31:05.016 --> 00:31:06.138\n>> And we'll see you next time.\n\n626\n00:31:06.138 --> 00:31:11.830\n[SOUND]\n\n",
          "vimeoId": "137513493"
        },
        {
          "description": "By default OSPF doesn't do any authentication, which one should try to implement especially if one is on a multi-access network to prevent building up OSPF adjacencies with rogue routers. Viewers will hear about using the authentication mechanism between neighboring OSPF routers, the two possible modes of OSPF authentication, and also see demonstrations of how to configure authentication on the interface.",
          "length": "1093",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/ccnproute/cisco-ccnproute300101-3-25-ospf_neighbors_pt.2-082715-1.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/ccnproute/cisco-ccnproute300101-3-25-ospf_neighbors_pt.2-082715-1-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/ccnproute/cisco-ccnproute300101-3-25-ospf_neighbors_pt.2-082715-1-sm.jpg",
          "title": "OSPF Neighbors Part 2",
          "transcript": "WEBVTT\n\n1\n00:00:00.000 --> 00:00:10.241\n[MUSIC]\n\n2\n00:00:10.241 --> 00:00:13.555\nAll right, welcome to another\ngreat episode here on ITProTV.\n\n3\n00:00:13.555 --> 00:00:17.277\nToday we're taking away a CCNP route, so\nif you are getting ready for that exam,\n\n4\n00:00:17.277 --> 00:00:20.758\nmake sure you watch, there's a lot of\ngreat information coming your way.\n\n5\n00:00:20.758 --> 00:00:23.765\nI'm your host, Ronnie Wong, and\nhere with me Mr. Don Pezet.\n\n6\n00:00:23.765 --> 00:00:24.515\nHow's it going?\n\n7\n00:00:24.515 --> 00:00:26.462\n>> It's going great, Ronnie,\nI'm excited to be back.\n\n8\n00:00:26.462 --> 00:00:28.414\nWe're gonna continue on\nwith our last episode,\n\n9\n00:00:28.414 --> 00:00:30.375\nwe were talking about\nneighbor relationships.\n\n10\n00:00:30.375 --> 00:00:34.095\nAnd so we got to see all the different\nstates that we go through when\n\n11\n00:00:34.095 --> 00:00:38.980\na OSPF adjacency is built up, but\nthere's one thing that we left out, and\n\n12\n00:00:38.980 --> 00:00:41.360\nthat is authentication.\n\n13\n00:00:41.360 --> 00:00:45.245\nThat by default, when we fire up OSPF,\nit doesn't do any authentication.\n\n14\n00:00:45.245 --> 00:00:48.340\nIt'll build up adjacencies with\nanybody else out there running OSPF.\n\n15\n00:00:48.340 --> 00:00:49.569\nIt will run through those eight states.\n\n16\n00:00:50.700 --> 00:00:55.740\nBut if you're on a multi-access network,\nthe odds are you'll probably want to\n\n17\n00:00:55.740 --> 00:00:59.540\nrun some kind of authentication to\nprevent rogue routers from coming in.\n\n18\n00:00:59.540 --> 00:01:01.090\nLet me show you what I mean.\n\n19\n00:01:01.090 --> 00:01:03.980\nI've got a network diagram\nstuck around here somewhere.\n\n20\n00:01:03.980 --> 00:01:05.510\nLet me pull up my network diagram.\n\n21\n00:01:05.510 --> 00:01:07.770\nHere we go.\nAnd you'll see my topology that I've kind\n\n22\n00:01:07.770 --> 00:01:10.520\nof been working with, and\nin between headquarters and\n\n23\n00:01:10.520 --> 00:01:12.897\nbranch 1 I have some point to point links,\nall right.\n\n24\n00:01:12.897 --> 00:01:16.330\nNow, on a point to point link\ndo we need authentication?\n\n25\n00:01:16.330 --> 00:01:20.350\nNo, because in order for someone to\ninject themselves in between the routers,\n\n26\n00:01:20.350 --> 00:01:21.660\nwell, how do they do that?\n\n27\n00:01:21.660 --> 00:01:24.400\nOn a point to point link\nthere's only two devices and\n\n28\n00:01:24.400 --> 00:01:26.810\nso authentication,\nyou can certainly do it.\n\n29\n00:01:26.810 --> 00:01:29.210\nBut it's not really required\non a point to point link.\n\n30\n00:01:29.210 --> 00:01:34.370\nSo when we're talking about your typical\nT 1's or ISDN lines your NPLS lines.\n\n31\n00:01:34.370 --> 00:01:37.660\nWhen they're point to point a lot\nof times we don't worry about it.\n\n32\n00:01:37.660 --> 00:01:40.600\nBut when you've got\na multi-access network.\n\n33\n00:01:40.600 --> 00:01:42.300\nSomething like my cloud over\nhere on the right side,\n\n34\n00:01:42.300 --> 00:01:45.250\nthis Metro Ethernet connection,\nright, MetroE.\n\n35\n00:01:45.250 --> 00:01:49.770\nIn an area like that,\nnow we start to have some risk, right?\n\n36\n00:01:49.770 --> 00:01:53.790\nWe have the risk of an internet service\nprovider injecting a row router into\n\n37\n00:01:53.790 --> 00:01:54.790\nOSPF, right?\n\n38\n00:01:54.790 --> 00:01:58.010\nOr even another customer, maybe one of\ntheir other customers accidentally gets\n\n39\n00:01:58.010 --> 00:02:00.560\npatched into our labels for MPLS.\n\n40\n00:02:00.560 --> 00:02:02.620\nAnd now they can start\nsending information in.\n\n41\n00:02:02.620 --> 00:02:07.660\nThey could start injecting OSPF traffic,\nor routes, and directing traffic\n\n42\n00:02:07.660 --> 00:02:10.850\nover to them, and they can pull off\nthe perfect man-in-the-middle attacks.\n\n43\n00:02:10.850 --> 00:02:12.270\nIt can happen inside your network too.\n\n44\n00:02:12.270 --> 00:02:17.739\nMaybe an employee, up here,\nbrings their DD-WRT router from home.\n\n45\n00:02:17.739 --> 00:02:19.584\n>> [LAUGH]\n>> And then it'll want OSPF.\n\n46\n00:02:19.584 --> 00:02:24.080\nAnd so, they start publishing routes for\nbanks and other things that are online.\n\n47\n00:02:24.080 --> 00:02:26.400\nAnd your own employees start\nto go to these sites and\n\n48\n00:02:26.400 --> 00:02:29.460\nthey're being redirected to some kind\nof server that records everything.\n\n49\n00:02:29.460 --> 00:02:31.390\nThese would be bad attacks.\n\n50\n00:02:31.390 --> 00:02:34.530\nSo, on a multi-access\nnetwork it is very common for\n\n51\n00:02:34.530 --> 00:02:36.300\nus to implement authentication with OSPF.\n\n52\n00:02:37.320 --> 00:02:40.348\nNow, OSPF has two modes of authentication.\n\n53\n00:02:40.348 --> 00:02:45.520\nOne is a plain text password,\nand it's kinda useless.\n\n54\n00:02:45.520 --> 00:02:48.480\nBecause [LAUGH] anybody running\na sniffer on the network can listen for\n\n55\n00:02:48.480 --> 00:02:50.970\nthe multicast traffic\nthat OSPF sends out and\n\n56\n00:02:50.970 --> 00:02:52.630\nsee the password right\nthere in the packet.\n\n57\n00:02:52.630 --> 00:02:53.710\nIt's plain text.\n\n58\n00:02:53.710 --> 00:02:56.100\nSo there's really not a whole\nlot of need to use it, but\n\n59\n00:02:56.100 --> 00:02:58.760\nwe need to see the commands just for\nthe exam.\n\n60\n00:02:58.760 --> 00:03:01.430\nBut the other mode is to do an MD5 hash.\n\n61\n00:03:01.430 --> 00:03:04.260\nWe can do MD5, or\nmessage digest authentication,\n\n62\n00:03:04.260 --> 00:03:07.510\nto be able to send a hashed value\ninstead of the actual password.\n\n63\n00:03:07.510 --> 00:03:10.340\nSomebody intercepting it would just see\nthe hash, which isn't going to help\n\n64\n00:03:10.340 --> 00:03:13.190\nthem much, because they won't be\nable to send the right data back.\n\n65\n00:03:13.190 --> 00:03:16.720\nSo that's going to give us the security we\nneed to prevent people from bringing rogue\n\n66\n00:03:16.720 --> 00:03:18.320\nrouters into the system.\n\n67\n00:03:18.320 --> 00:03:21.050\nSo we want to take a look\nat how to set that up.\n\n68\n00:03:21.050 --> 00:03:23.200\nLet's start with just basic connectivity.\n\n69\n00:03:23.200 --> 00:03:29.430\nI wanna get headquarters connecting up to,\nsay, branch 1 via this MetroE link.\n\n70\n00:03:29.430 --> 00:03:32.120\nSo I'm gonna jump over to my routers.\n\n71\n00:03:32.120 --> 00:03:38.662\nAnd, on headquarters, I can jump right\nin here and I can say router ospf 1.\n\n72\n00:03:38.662 --> 00:03:40.741\nI can give it a router ID.\n\n73\n00:03:40.741 --> 00:03:42.901\nI'll just give it all ones.\n\n74\n00:03:42.901 --> 00:03:48.082\nI can jump into my interfaces\nthat I wanna participate in OSPF,\n\n75\n00:03:48.082 --> 00:03:50.639\nand I can say ip ospf 1 area 0.\n\n76\n00:03:50.639 --> 00:03:53.340\nAnd I'll do that for\nmy other interface here too.\n\n77\n00:03:53.340 --> 00:03:55.430\nSo now I'm up and I'm running OSPF,\n\n78\n00:03:55.430 --> 00:03:58.470\nand I'm advertising out\ninto that MetroE network.\n\n79\n00:03:58.470 --> 00:04:00.325\nI can do the same thing on branch 1.\n\n80\n00:04:01.660 --> 00:04:04.077\nSo if I just do a quick router OSPF1.\n\n81\n00:04:04.077 --> 00:04:05.633\nI'll give it a router ID.\n\n82\n00:04:05.633 --> 00:04:07.780\nI'll make it all twos.\n\n83\n00:04:07.780 --> 00:04:11.434\nAnd then I'll turn on OSPF for\nthose interfaces.\n\n84\n00:04:13.656 --> 00:04:18.170\nAll right, and because OSPF doesn't\ndo authentication by default,\n\n85\n00:04:18.170 --> 00:04:21.790\nI should see that other neighbor out\nthere, and build up an adjacency, and\n\n86\n00:04:21.790 --> 00:04:23.230\nstart communicating, all right?\n\n87\n00:04:23.230 --> 00:04:25.290\nAnd it will usually happen pretty quickly,\n\n88\n00:04:25.290 --> 00:04:26.930\nthis seems to be taking its time,\ndoesn't it?\n\n89\n00:04:28.080 --> 00:04:31.690\nLet's just verify I've got\nsome basic connectivity here.\n\n90\n00:04:31.690 --> 00:04:33.723\nAnd we should be able to\nsee across the other side.\n\n91\n00:04:33.723 --> 00:04:37.375\nSo my E00 is that 192 network so\nif I ping across it,\n\n92\n00:04:37.375 --> 00:04:41.830\nthere we go I'm getting across it and\nmaybe I just miss the message.\n\n93\n00:04:43.751 --> 00:04:46.473\nThere we go, so I see my neighbor,\nI'm in Exchange Star,\n\n94\n00:04:46.473 --> 00:04:48.260\nI'm building up that relationship.\n\n95\n00:04:48.260 --> 00:04:51.480\nNow, when you build up\nan adjacency to a neighbor,\n\n96\n00:04:51.480 --> 00:04:53.580\nit runs through a couple of stages, right?\n\n97\n00:04:53.580 --> 00:04:57.130\nWe go through our discovery,\nwhere we find somebody, our nit, right?\n\n98\n00:04:57.130 --> 00:05:00.780\nAnd then we go into Ex Star, and\nthen we go into actual exchange.\n\n99\n00:05:00.780 --> 00:05:02.610\nAnd then once the exchange is\ndone we go into loading, and\n\n100\n00:05:02.610 --> 00:05:04.060\nthen from loading we go into full.\n\n101\n00:05:04.060 --> 00:05:06.220\nAnd so all that was happening\nin the background, and\n\n102\n00:05:06.220 --> 00:05:07.980\nthere I just went to full, right?\n\n103\n00:05:07.980 --> 00:05:12.730\nAnd all of that was done without\nany kind of authentication, right?\n\n104\n00:05:12.730 --> 00:05:15.120\nSo I want to apply a password to that.\n\n105\n00:05:15.120 --> 00:05:17.420\nAnd the way we do it is kind of two steps.\n\n106\n00:05:17.420 --> 00:05:20.410\nFirst off, the password is set\non a per-interface basis, so\n\n107\n00:05:20.410 --> 00:05:22.840\nyou can have different\npasswords on each interface, or\n\n108\n00:05:22.840 --> 00:05:24.720\nsome interfaces can have a password and\nsome don't.\n\n109\n00:05:24.720 --> 00:05:26.120\nYou can kind of mix and match.\n\n110\n00:05:26.120 --> 00:05:29.100\nBut I need to go and\nset the password on the interface.\n\n111\n00:05:29.100 --> 00:05:34.960\nAnd then I need to go into OSPF and\nturn on the authentication for that area.\n\n112\n00:05:34.960 --> 00:05:36.930\nIt's turned on and off based on the area.\n\n113\n00:05:36.930 --> 00:05:40.410\nSo if you're connected to three areas, you\ncan have authentication in one area and\n\n114\n00:05:40.410 --> 00:05:41.160\nnot on the other.\n\n115\n00:05:41.160 --> 00:05:43.784\nYou know, you kind of mix things up\nhow you need it for your environment.\n\n116\n00:05:43.784 --> 00:05:44.444\nAll right.\n\n117\n00:05:44.444 --> 00:05:49.871\nSo if I want to get this set up, I'm\ngoing to jump into one of my Interfaces.\n\n118\n00:05:49.871 --> 00:05:56.022\nSo if I get into my MetroE Network\nwhich is interface e0/0,\n\n119\n00:05:56.022 --> 00:05:58.990\nI can set up my key right here.\n\n120\n00:05:58.990 --> 00:06:04.930\nAnd when I define the key is when I define\nwhether this is going to be plain text or\n\n121\n00:06:04.930 --> 00:06:06.460\nMD5 or whatever.\n\n122\n00:06:06.460 --> 00:06:11.350\nSo on the interface I need to\ncome in here and say IP OSPF.\n\n123\n00:06:11.350 --> 00:06:16.510\nAnd then from here I can say,\nauthentication-key and\n\n124\n00:06:16.510 --> 00:06:18.620\nwhat I want that password to be, okay?\n\n125\n00:06:18.620 --> 00:06:19.490\nAnd so I'm gonna set mine.\n\n126\n00:06:19.490 --> 00:06:24.310\nI'm gonna just call mine,\nwe'll do super-secure-password, right?\n\n127\n00:06:24.310 --> 00:06:26.200\nThat's gonna be my password, okay?\n\n128\n00:06:26.200 --> 00:06:27.937\nAnd I'm getting a warning there.\n\n129\n00:06:27.937 --> 00:06:31.630\nPassword/key will be truncated\nto eight characters, right?\n\n130\n00:06:31.630 --> 00:06:32.300\nI went too long.\n\n131\n00:06:32.300 --> 00:06:34.440\nNow why would it limit\nme to eight characters?\n\n132\n00:06:34.440 --> 00:06:36.630\nIf it's just going to hash\nthem anyway why limit me?\n\n133\n00:06:36.630 --> 00:06:41.372\nWell, the reason is when I do the key this\nway it's assuming that it's just a plain\n\n134\n00:06:41.372 --> 00:06:42.300\ntext key.\n\n135\n00:06:42.300 --> 00:06:45.500\nAnd so it's going to cut that down and\nnow I'm down to just eight characters.\n\n136\n00:06:45.500 --> 00:06:52.120\nSo when I typed that out, it was really\njust super-se that got put into play.\n\n137\n00:06:52.120 --> 00:06:54.780\nSo I'm gonna change that to something\nthat is just eight characters that'll be\n\n138\n00:06:54.780 --> 00:06:55.790\na little easier on me.\n\n139\n00:06:55.790 --> 00:06:57.810\nAnd I'll just do password, there we go.\n\n140\n00:06:57.810 --> 00:06:58.380\nAll right.\n\n141\n00:06:58.380 --> 00:07:00.090\nSo now I gotta pass through\nsome of the interface.\n\n142\n00:07:00.090 --> 00:07:02.150\nBut nothing really changed, right?\n\n143\n00:07:02.150 --> 00:07:05.180\nEverything's still running like normal\nbecause the password isn't actually\n\n144\n00:07:05.180 --> 00:07:06.190\nactive yet.\n\n145\n00:07:06.190 --> 00:07:08.600\nSo my next step is to\ntruly make it active.\n\n146\n00:07:08.600 --> 00:07:11.370\nI need to get into router OSPF 1.\n\n147\n00:07:11.370 --> 00:07:14.350\nAnd on the routing process,\n\n148\n00:07:14.350 --> 00:07:20.000\nI need to say Area 0 authentication, okay.\n\n149\n00:07:20.000 --> 00:07:22.330\nThat's gonna turn on authentication for\narea 0.\n\n150\n00:07:22.330 --> 00:07:26.756\nAnd any interface that I have in area 0 is\nnow going to be looking to authenticate\n\n151\n00:07:26.756 --> 00:07:31.399\nwhich includes the interface that I just\nconfigured that password on, all right.\n\n152\n00:07:31.399 --> 00:07:33.954\nSo now e0/0 any router\nthat connects to me,\n\n153\n00:07:33.954 --> 00:07:37.350\nI'm gonna expect them\nto have that password.\n\n154\n00:07:37.350 --> 00:07:40.811\nAnd if I'm getting data that doesn't\nhave the password I'm gonna fail it.\n\n155\n00:07:40.811 --> 00:07:42.173\nI'm gonna reject it.\n\n156\n00:07:42.173 --> 00:07:44.176\nSo, is that happening right now?\n\n157\n00:07:44.176 --> 00:07:45.538\nIt probably is, right?\n\n158\n00:07:45.538 --> 00:07:50.507\nIf we do some debugs, like if I debug my\nOSPF packets and I debug my adjacencies\n\n159\n00:07:50.507 --> 00:07:55.475\nI can start watching for what's happening,\nand actually even before I debug\n\n160\n00:07:55.475 --> 00:07:59.160\nthat dead state happened,\nthe other router died right?\n\n161\n00:07:59.160 --> 00:08:01.360\nIt's gone, did it go offline?\n\n162\n00:08:01.360 --> 00:08:04.510\nNo it didn't go offline it's just that\nwe were expecting authentication and\n\n163\n00:08:04.510 --> 00:08:07.910\nif we look in here we'll be able\nto start spotting that right here.\n\n164\n00:08:07.910 --> 00:08:11.940\nThis is from the packet debug and\nI can see that message, it's\n\n165\n00:08:11.940 --> 00:08:16.920\nkinda slowly crawling up my screen there,\nmiss match authentication type, all right.\n\n166\n00:08:16.920 --> 00:08:20.780\nIf we kinda decipher what\nwe're looking at here It,\n\n167\n00:08:20.780 --> 00:08:23.015\nwe'll actually see it in\nthe packet types here eventually.\n\n168\n00:08:23.015 --> 00:08:27.780\nThat we're expecting type 1 and\nwe're getting type zero.\n\n169\n00:08:27.780 --> 00:08:28.710\nNow what does that mean?\n\n170\n00:08:28.710 --> 00:08:29.770\nWell, there's three types.\n\n171\n00:08:29.770 --> 00:08:31.640\nType zero, type 1, type 2.\n\n172\n00:08:31.640 --> 00:08:33.810\nType zero is no authentication.\n\n173\n00:08:33.810 --> 00:08:35.790\nType 1 is plain text.\n\n174\n00:08:35.790 --> 00:08:37.680\nType 2 is MD5.\n\n175\n00:08:37.680 --> 00:08:41.473\nWe're expecting plain text right now,\nand we're getting zero.\n\n176\n00:08:41.473 --> 00:08:44.352\nSo, yeah, it's not authenticating,\nand we're not receiving it.\n\n177\n00:08:44.352 --> 00:08:48.961\nOkay, so I need to jump over\nto Branch 1 and fix that.\n\n178\n00:08:48.961 --> 00:08:52.322\nAll right, so on Branch 1,\nI just need to go into the interface and\n\n179\n00:08:52.322 --> 00:08:53.710\nassign the same password.\n\n180\n00:08:53.710 --> 00:08:59.057\nI need to say is\nIP OSPF Authentication key and\n\n181\n00:08:59.057 --> 00:09:02.010\nthen tell it what that password is.\n\n182\n00:09:02.010 --> 00:09:04.535\nWe'll just use the word password and\n\n183\n00:09:04.535 --> 00:09:09.590\nthen I've got to go into router OSPF 1 and\nsay area zero authentication.\n\n184\n00:09:11.150 --> 00:09:15.080\nNow when I try and talk to another router\nin area zero, I'm gonna authenticate and\n\n185\n00:09:15.080 --> 00:09:16.470\nthere we go I just went full, right?\n\n186\n00:09:16.470 --> 00:09:20.617\nThat communication happened and\nnow I'm connected, loading, done.\n\n187\n00:09:20.617 --> 00:09:25.018\nAnd if I jump back here to headquarters\nI'll see it in the debugs that I stopped\n\n188\n00:09:25.018 --> 00:09:28.809\ngetting those warning messages,\nand now I did a DRBDR election and\n\n189\n00:09:28.809 --> 00:09:30.250\nwe're getting things.\n\n190\n00:09:30.250 --> 00:09:33.648\nAnd if I look at the packets,\nwhoops, if I can try and\n\n191\n00:09:33.648 --> 00:09:38.841\nhighlight the packet there, see that v:2,\nt:5, and all of that, right?\n\n192\n00:09:38.841 --> 00:09:42.997\nAs we look in here a little bit further,\nI can find aut:1,\n\n193\n00:09:42.997 --> 00:09:48.235\nthat's Authentication type 1 plain\ntext and then auk would be my key now,\n\n194\n00:09:48.235 --> 00:09:52.210\nwhen you do plain text you\ncan only have one password.\n\n195\n00:09:52.210 --> 00:09:53.165\nSo there is no key id for it.\n\n196\n00:09:53.165 --> 00:09:56.223\nThere's just a password that I assigned\nto the interface and that's it.\n\n197\n00:09:56.223 --> 00:10:01.520\nSo auk is still empty but aut is 1,\nI know I'm getting a plain text password.\n\n198\n00:10:01.520 --> 00:10:05.160\nNow somebody running a sniffer can capture\none of these packets, they're multicast,\n\n199\n00:10:05.160 --> 00:10:07.660\nthey can get it, and\nthe password's right in there.\n\n200\n00:10:07.660 --> 00:10:11.560\nSo this doesn't really help unless you're\npreventing people from even being able\n\n201\n00:10:11.560 --> 00:10:13.030\nto run a sniffer.\n\n202\n00:10:13.030 --> 00:10:17.270\nSo if I really want protection I\nneed to make this an MD5 hash and\n\n203\n00:10:17.270 --> 00:10:22.280\nnot just a plain text like this.\n\n204\n00:10:23.410 --> 00:10:26.040\nSo to make an MD5 we have to do\na few extra commands, right?\n\n205\n00:10:26.040 --> 00:10:29.060\nNow let me jump over to branch 1\nsince branch 1s not debugging,\n\n206\n00:10:29.060 --> 00:10:30.200\nthis will be cleaner.\n\n207\n00:10:30.200 --> 00:10:33.030\nAnd I just need to tell it not to do\nplain text but actually do MD5, so\n\n208\n00:10:33.030 --> 00:10:35.300\nI'm gonna start on my interface.\n\n209\n00:10:36.920 --> 00:10:44.190\nAnd on my interface, I'm gonna say ip\nospf and then instead of Authentication.\n\n210\n00:10:44.190 --> 00:10:46.620\nYou know, specifying that key and\ndoing it that way.\n\n211\n00:10:46.620 --> 00:10:52.390\nI'm gonna say ip ospf and\nthen I'll say message digest key.\n\n212\n00:10:52.390 --> 00:10:55.350\nAuthentication-key, that\nwould be plain text.\n\n213\n00:10:55.350 --> 00:10:59.560\nMessage dash digest key now\nis gonna be an MD5 hash.\n\n214\n00:10:59.560 --> 00:11:04.181\nThe big difference here is that we\ncan have more than one MD5 key.\n\n215\n00:11:04.181 --> 00:11:06.370\nThat's why we have that AUK value.\n\n216\n00:11:06.370 --> 00:11:09.710\nAnd so I can specify, I can have up\nto 255 different keys, right, and\n\n217\n00:11:09.710 --> 00:11:14.060\nthat's because we might wanna rotate\nthrough keys, enable some, disable some.\n\n218\n00:11:14.060 --> 00:11:16.410\nYou might wanna have different\nkeys on different neighbors, so\n\n219\n00:11:16.410 --> 00:11:18.110\nyou can really get granular with that.\n\n220\n00:11:18.110 --> 00:11:19.980\nBut I'm just gonna create one.\n\n221\n00:11:19.980 --> 00:11:23.248\nAnd now I can specify\nthat it's gonna be MD5.\n\n222\n00:11:23.248 --> 00:11:26.220\nAnd, what it's gonna be, all right?\n\n223\n00:11:26.220 --> 00:11:30.010\nIf it's already been encrypted by Cisco\nsystem, then I can specify five or seven\n\n224\n00:11:30.010 --> 00:11:33.180\nor whatever and provide that encrypted\npassword, or I can just type it in.\n\n225\n00:11:33.180 --> 00:11:37.510\nAnd here I can type super-secure-password.\n\n226\n00:11:37.510 --> 00:11:39.280\nAnd when I run that, well,\n\n227\n00:11:39.280 --> 00:11:42.060\nit's telling me here the password\nwill be truncated to 16 characters.\n\n228\n00:11:42.060 --> 00:11:43.060\nNow, why is it doing that?\n\n229\n00:11:44.290 --> 00:11:45.415\nI wish I could answer that one, right?\n\n230\n00:11:45.415 --> 00:11:47.230\n[LAUGH] When you hash it doesn't\nreally matter what the length is,\n\n231\n00:11:47.230 --> 00:11:49.650\nbut more than likely,\njust on the back end,\n\n232\n00:11:49.650 --> 00:11:52.910\nthey didn't want to hash anything\nbigger and so they truncated it to 16.\n\n233\n00:11:52.910 --> 00:11:55.840\nThere's plenty of sites and\nsystems that do that.\n\n234\n00:11:55.840 --> 00:11:58.650\nSo in here they just happened\nto pick 16 and that's that.\n\n235\n00:11:58.650 --> 00:12:02.780\nSo it will be truncated to 16 characters,\nand that's it.\n\n236\n00:12:02.780 --> 00:12:04.690\nSo I could probably pick\nsomething a little shorter\n\n237\n00:12:05.980 --> 00:12:08.570\nthat fits in that like passwordpassword.\n\n238\n00:12:08.570 --> 00:12:09.270\nThat's a fun one.\n\n239\n00:12:09.270 --> 00:12:11.695\nThere we go.\nIt's telling me key 1 already exists so\n\n240\n00:12:11.695 --> 00:12:15.330\nI have to get rid of key 1 first,\nor I could create key 2, right?\n\n241\n00:12:15.330 --> 00:12:17.590\nWe could always do that,\nbut I'll replace key 1.\n\n242\n00:12:17.590 --> 00:12:21.560\nAll right, so now I've got a key,\nbut I'm not using it.\n\n243\n00:12:21.560 --> 00:12:23.080\nI'm still using the other key.\n\n244\n00:12:23.080 --> 00:12:24.760\nI'm still using the plain text one.\n\n245\n00:12:24.760 --> 00:12:26.970\nI need to tell OSPF to switch modes.\n\n246\n00:12:26.970 --> 00:12:29.409\nSo I'm gonna say router ospf 1, and\n\n247\n00:12:29.409 --> 00:12:33.660\nthen in here I'm just gonna tell\nit area 0 authentication, and\n\n248\n00:12:33.660 --> 00:12:38.002\nlast time I stopped right there,\nstop right there as plain text.\n\n249\n00:12:38.002 --> 00:12:39.639\nBut if I do a quick question mark,\n\n250\n00:12:39.639 --> 00:12:42.622\nyou'll see that message digest\nis my next option and now I'm\n\n251\n00:12:42.622 --> 00:12:46.620\nsaying I still wanna do authentication but\nuse the message digest key instead.\n\n252\n00:12:46.620 --> 00:12:48.255\nDon't use the plain text anymore.\n\n253\n00:12:48.255 --> 00:12:49.183\nAll right.\n\n254\n00:12:49.183 --> 00:12:52.789\nNow that I've configured that here, I'm\ngonna have failures on the other side and\n\n255\n00:12:52.789 --> 00:12:56.600\nif I go to headquarters, I can start\nto see those mismatches happen, right?\n\n256\n00:12:56.600 --> 00:12:59.841\nAnd I was running along nice and\nhappy, right,\n\n257\n00:12:59.841 --> 00:13:02.688\nwith authentications set to a type of 1.\n\n258\n00:13:02.688 --> 00:13:04.673\nAnd then all of a sudden it's failing,\nright?\n\n259\n00:13:04.673 --> 00:13:07.590\nAuthentication type, specified type is 2.\n\n260\n00:13:07.590 --> 00:13:09.119\nWe use type one, right?\n\n261\n00:13:09.119 --> 00:13:12.100\nWe got an MD5 hash, but\nwe're not using MD5.\n\n262\n00:13:12.100 --> 00:13:13.790\nWe're using plain text.\n\n263\n00:13:13.790 --> 00:13:16.110\nSo I need to update this side\nbefore it'll become happy.\n\n264\n00:13:16.110 --> 00:13:17.890\nSo, I'll get into interface E00.\n\n265\n00:13:19.420 --> 00:13:25.611\nAnd we'll do a ip ospf message-digest-key,\n\n266\n00:13:25.611 --> 00:13:31.196\nand I'll set it to the same value, right?\n\n267\n00:13:31.196 --> 00:13:31.951\nWoops.\n\n268\n00:13:31.951 --> 00:13:34.237\nOh, I need to say MD5 first.\n\n269\n00:13:34.237 --> 00:13:35.770\nAnd then password/password.\n\n270\n00:13:35.770 --> 00:13:38.145\nI always thought it was a little weird\nthat you had to do it kind of like,\n\n271\n00:13:38.145 --> 00:13:40.290\nspecifying MD5 twice,\nbut anyhow, there we go.\n\n272\n00:13:40.290 --> 00:13:41.220\nSo I've created a password but\n\n273\n00:13:41.220 --> 00:13:46.270\nI'm still failing because I'm not actually\nusing it until I do that router ospf 1 and\n\n274\n00:13:46.270 --> 00:13:52.290\nhere I can say area 0 authentication\nmessage-digest, right?\n\n275\n00:13:52.290 --> 00:13:53.960\nAnd once you state that.\n\n276\n00:13:53.960 --> 00:13:56.050\nThere we go.\nNow I'm building up that adjacency again,\n\n277\n00:13:56.050 --> 00:13:57.060\nthings are happy.\n\n278\n00:13:57.060 --> 00:14:02.292\nAnd when I look at my debug,\nI can see that aut:2, right?\n\n279\n00:14:02.292 --> 00:14:05.787\nSo my authentication type is type two,\nor MD5.\n\n280\n00:14:05.787 --> 00:14:08.740\nAnd then I can see keyid:1.\n\n281\n00:14:08.740 --> 00:14:13.510\nIf I have more than one key,\nwhoever the neighbor is gave me key 1.\n\n282\n00:14:13.510 --> 00:14:14.850\nAnd maybe it says a 5.\n\n283\n00:14:14.850 --> 00:14:18.200\nThat means on my keys they gave me key 5,\nso I can know which neighbor it is or\n\n284\n00:14:18.200 --> 00:14:20.610\nwhich password it is they're\nusing to send to me, right?\n\n285\n00:14:20.610 --> 00:14:23.280\nAnd you can have more than\none key if you need it.\n\n286\n00:14:23.280 --> 00:14:27.490\nBut now I've got authentication in\nplace and the cool part about that is,\n\n287\n00:14:27.490 --> 00:14:32.250\nmy two routers are up and happy, right.\n\n288\n00:14:32.250 --> 00:14:37.780\nIf I do a Show IP OSPS adjacencies,\nor neighbors, there we go.\n\n289\n00:14:37.780 --> 00:14:40.320\nI can see I got full\nslashed DR with that one.\n\n290\n00:14:40.320 --> 00:14:44.230\nIf someone brings in a rogue router,\nlike I'll bring in router two here, right?\n\n291\n00:14:44.230 --> 00:14:46.880\nSo if they bring in this router and\nthey jump into their config and\n\n292\n00:14:46.880 --> 00:14:54.270\nthey start configuring OSPF, right,\nand so they kinda try and jump in.\n\n293\n00:14:54.270 --> 00:15:00.170\nThey go into router ospf 1, and\ngive themselves a router-id, right.\n\n294\n00:15:00.170 --> 00:15:01.470\nSo now they're up and running OSPF.\n\n295\n00:15:01.470 --> 00:15:02.910\nThey're trying to join.\n\n296\n00:15:02.910 --> 00:15:05.740\nThey're sending out their multi-caches\nsaying, hey guys, I'm an OSPF router.\n\n297\n00:15:05.740 --> 00:15:07.320\nCan I get your routing table?\n\n298\n00:15:07.320 --> 00:15:08.910\nThis is what an attacker would do.\n\n299\n00:15:08.910 --> 00:15:12.650\nAnd then they could start redistributing\nbad routes in with really low metrics, so\n\n300\n00:15:12.650 --> 00:15:13.820\nthey win, right?\n\n301\n00:15:13.820 --> 00:15:15.860\nAnd they start tailoring the way\nyour traffic is steered,\n\n302\n00:15:15.860 --> 00:15:17.580\nand they intercept your traffic.\n\n303\n00:15:17.580 --> 00:15:18.858\nWell, this one's trying to join.\n\n304\n00:15:21.158 --> 00:15:23.650\nBut it's not gonna work, right?\n\n305\n00:15:23.650 --> 00:15:26.640\nIf I start debugging those adjacency\nevents, it's reaching out.\n\n306\n00:15:26.640 --> 00:15:32.257\nIt's trying to build and\nadjacency, And it's failing.\n\n307\n00:15:32.257 --> 00:15:34.920\nI keep doing that, [LAUGH] keep forgetting\nthat I've gotten out of config.\n\n308\n00:15:34.920 --> 00:15:35.860\nThere we go.\n\n309\n00:15:35.860 --> 00:15:39.620\nSo if I look, I've got no neighbors, and\nI see these failures that are happening.\n\n310\n00:15:39.620 --> 00:15:40.830\nI can see stuff happening.\n\n311\n00:15:40.830 --> 00:15:42.110\nI can see elections happening.\n\n312\n00:15:42.110 --> 00:15:44.600\nI can see the DR and BDR trying to elect.\n\n313\n00:15:44.600 --> 00:15:48.310\nWell, actually in this case, I failed\nto connect to any other routers, so\n\n314\n00:15:48.310 --> 00:15:50.240\nI elected myself the DR.\n\n315\n00:15:50.240 --> 00:15:51.835\nRight?\nIf you look here, elect DR.\n\n316\n00:15:51.835 --> 00:15:52.996\n3.3.3.3.\n\n317\n00:15:52.996 --> 00:15:54.797\nI made myself the DR.\n\n318\n00:15:54.797 --> 00:15:55.899\nAnd the BDR is empty.\n\n319\n00:15:55.899 --> 00:15:57.258\nNobody's the BDR.\n\n320\n00:15:57.258 --> 00:16:00.540\nI'm assuming there's no other routers\nout there cuz I can't talk to them.\n\n321\n00:16:00.540 --> 00:16:02.980\nAnd does it matter that\nthis guy became the DR?\n\n322\n00:16:02.980 --> 00:16:04.067\nNo, because nobody's talking to him.\n\n323\n00:16:04.067 --> 00:16:08.550\nIf I go back to my routers,\nmy routers aren't talking to them, right?\n\n324\n00:16:08.550 --> 00:16:14.313\nAnd so If I undebug,\nI do a show IP OSPF neighbor.\n\n325\n00:16:14.313 --> 00:16:16.030\nI still have my relationship.\n\n326\n00:16:16.030 --> 00:16:18.130\nThere, looks like branch 1 is the DR.\n\n327\n00:16:18.130 --> 00:16:19.340\nI'm the BDR.\n\n328\n00:16:19.340 --> 00:16:21.170\nWe're up, we're happy,\nwe're exchanging routes.\n\n329\n00:16:21.170 --> 00:16:22.680\nThe attacker is isolated.\n\n330\n00:16:22.680 --> 00:16:26.460\nSo, simply turning on authentication\nreally eliminates that threat to\n\n331\n00:16:26.460 --> 00:16:28.440\nthe network, and\nit didn't take much to do it, right?\n\n332\n00:16:29.960 --> 00:16:32.320\nLet's rerun over those commands.\n\n333\n00:16:32.320 --> 00:16:35.285\nOn the interface,\nit was one of two commands.\n\n334\n00:16:35.285 --> 00:16:39.941\nIf I'm doing md5,\nit's ip ospf message-digest-key,\n\n335\n00:16:39.941 --> 00:16:44.940\nthe number of the key, md5,\nand then the password.\n\n336\n00:16:44.940 --> 00:16:50.158\nIf it's plain text, then it's just ip ospf\nauthentication-key, and the password.\n\n337\n00:16:50.158 --> 00:16:54.280\nAnd then after that you go and get OSPF,\nand you tell it area zero authentication,\n\n338\n00:16:54.280 --> 00:16:58.680\nor area and whatever the number is,\nauthentication if you want plain text.\n\n339\n00:16:58.680 --> 00:17:01.160\nOr add message digest if you want MD5,\nall right?\n\n340\n00:17:01.160 --> 00:17:04.840\nA couple of simple commands and\nauthentication is up and going.\n\n341\n00:17:04.840 --> 00:17:06.272\nDefinitely no reason not to use it.\n\n342\n00:17:06.272 --> 00:17:09.120\nIt [LAUGH] doesn't create a CPU burden or\nanything like that.\n\n343\n00:17:09.120 --> 00:17:11.400\nYou really do wanna get this turned off.\n\n344\n00:17:11.400 --> 00:17:14.700\n>> Now Don, I noticed in that\ninterface that you had earlier\n\n345\n00:17:14.700 --> 00:17:17.660\nwhere it actually did show both of them,\nthat's okay to leave there?\n\n346\n00:17:17.660 --> 00:17:18.310\n>> Oh yeah, yeah.\n\n347\n00:17:18.310 --> 00:17:22.071\nYou know, so up here on the interface\nI left both keys, right?\n\n348\n00:17:22.071 --> 00:17:24.880\nSo there's my plain text key and\nmy MD5 key.\n\n349\n00:17:24.880 --> 00:17:26.650\nOnly one of them is gonna get used.\n\n350\n00:17:26.650 --> 00:17:29.940\nWhen I have MD5 turned on,\nit's ignoring this other line.\n\n351\n00:17:29.940 --> 00:17:31.050\nIt's never using that.\n\n352\n00:17:31.050 --> 00:17:33.770\nYou might want to remove it\njust to keep things clean, but\n\n353\n00:17:33.770 --> 00:17:35.620\nit's not really a big deal.\n\n354\n00:17:37.500 --> 00:17:40.585\n>> All right, so taking a look at\nauthentication between routers is\n\n355\n00:17:40.585 --> 00:17:42.333\nsomething we definitely want to do.\n\n356\n00:17:42.333 --> 00:17:44.245\nAnd even though we can do it in EIGRP,\n\n357\n00:17:44.245 --> 00:17:48.650\nremember that you can also setup\nauthentication for OSPF routers as well.\n\n358\n00:17:48.650 --> 00:17:49.600\nPlain text.\n\n359\n00:17:49.600 --> 00:17:52.490\nAnd that's probably not something you'd\nreally want to do in a production network.\n\n360\n00:17:52.490 --> 00:17:53.940\nIn a testing environment maybe.\n\n361\n00:17:53.940 --> 00:17:57.701\nBut in a production network, you're always\ngonna always use that MD5 instead for\n\n362\n00:17:57.701 --> 00:17:59.090\nauthentication.\n\n363\n00:17:59.090 --> 00:18:01.491\nAnd that about wraps it up for\nour show today.\n\n364\n00:18:01.491 --> 00:18:04.230\nThank you for watching,\nI've been your host Ronnie Wong.\n\n365\n00:18:04.230 --> 00:18:05.253\n>> And I'm Don Pezet.\n\n366\n00:18:05.253 --> 00:18:07.122\n>> And we'll see you next time.\n\n367\n00:18:07.122 --> 00:18:12.589\n[MUSIC]\n\n",
          "vimeoId": "137513492"
        },
        {
          "description": "Areas are a special way to sub-divide an OSPF autonomous system and improve its performance, but inside an area, not every network is treated equally, so it's important to understand network types and see how they respond differently. Viewers will hear about the five different network types inside of OSPF and the situations in which each of them are used.",
          "length": "1894",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/ccnproute/cisco-ccnproute300101-3-26a-ospf_network_types-082815-1.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/ccnproute/cisco-ccnproute300101-3-26a-ospf_network_types-082815-1-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/ccnproute/cisco-ccnproute300101-3-26a-ospf_network_types-082815-1-sm.jpg",
          "title": "OSPF Network Types",
          "transcript": "WEBVTT\n\n1\n00:00:00.000 --> 00:00:10.459\n[MUSIC]\n\n2\n00:00:10.459 --> 00:00:12.601\nWelcome to another great\nepisode here on ITProTV.\n\n3\n00:00:12.601 --> 00:00:14.280\nToday we'll take a look at CCMP route.\n\n4\n00:00:14.280 --> 00:00:19.210\nSo remember if you're actually getting\nready for that exam, make sure you watch\n\n5\n00:00:19.210 --> 00:00:22.460\nthis episode, there's a lot of information\nthat's gonna be jam packed for you.\n\n6\n00:00:22.460 --> 00:00:24.770\nI'm your host Ronnie Wong,\nand here with us today,\n\n7\n00:00:24.770 --> 00:00:27.700\nto help us along in our path,\nis gonna be Mr. Don Pezet.\n\n8\n00:00:27.700 --> 00:00:28.430\nHow's it going?\n\n9\n00:00:28.430 --> 00:00:29.490\n>> It is going great, Ronnie.\n\n10\n00:00:29.490 --> 00:00:34.010\nReady to jump back into what's\nprobably gonna be one of our larger\n\n11\n00:00:34.010 --> 00:00:36.130\nobjectives that we have\nto hit on this exam.\n\n12\n00:00:36.130 --> 00:00:38.250\nYou know, we've talked a lot about OSPF,\n\n13\n00:00:38.250 --> 00:00:39.910\nwe got a chance to see\nhow to implement it.\n\n14\n00:00:39.910 --> 00:00:43.520\nWe saw some basic things as\nfar as authentication and\n\n15\n00:00:43.520 --> 00:00:48.050\nneighbor relationships, but\nnow we're gonna start talking about areas.\n\n16\n00:00:48.050 --> 00:00:50.620\nAnd there is a lot to know about areas.\n\n17\n00:00:50.620 --> 00:00:53.210\nAnd this is something that's different\nthan any of the other routing\n\n18\n00:00:53.210 --> 00:00:54.680\nprotocols, right.\n\n19\n00:00:54.680 --> 00:00:55.480\nRIP.\n\n20\n00:00:55.480 --> 00:01:00.400\nRIP Doesn't have areas or\nautonomous systems or anything like that.\n\n21\n00:01:00.400 --> 00:01:01.570\nRIP, it just exists.\n\n22\n00:01:01.570 --> 00:01:03.430\nThere's no way to subdivide out RIP.\n\n23\n00:01:04.500 --> 00:01:07.660\nEIGRP you have autonomous systems right,\n\n24\n00:01:07.660 --> 00:01:09.960\nwhich are completely separate and\nisolated but\n\n25\n00:01:09.960 --> 00:01:14.570\ninside EIGRP, the only way to divide up\nyour autonomous system that's with stubs.\n\n26\n00:01:14.570 --> 00:01:19.920\nBut in OSPF, we have stubs also in OSPF,\nbut we also have areas.\n\n27\n00:01:19.920 --> 00:01:24.630\nAnd areas are a special way to sub-divide\nup our OSPF autonomous system, and\n\n28\n00:01:24.630 --> 00:01:26.540\nreally improve its performance.\n\n29\n00:01:26.540 --> 00:01:29.170\nThis is one of the reasons that OSPF is so\nscalable.\n\n30\n00:01:29.170 --> 00:01:32.090\nI know I've mentioned this in other\nepisodes that OSPF could actually\n\n31\n00:01:32.090 --> 00:01:35.560\nscale large enough to route the entire\ninternet if we wanted it to, and\n\n32\n00:01:35.560 --> 00:01:38.160\nit can do that thanks to areas.\n\n33\n00:01:38.160 --> 00:01:41.990\nWhat are some of the concepts we need\nto understand inside our OSPF area?\n\n34\n00:01:41.990 --> 00:01:45.660\nOne of the big things we need to\nunderstand is that inside of an area,\n\n35\n00:01:45.660 --> 00:01:48.740\nnot every network is treated equally.\n\n36\n00:01:48.740 --> 00:01:51.900\nThere's different network\ntypes we have to be aware of.\n\n37\n00:01:51.900 --> 00:01:53.040\nWe're going to start with that.\n\n38\n00:01:53.040 --> 00:01:58.760\nOver the next several episodes we're\ngoing to accent other parts of areas,\n\n39\n00:01:58.760 --> 00:02:03.090\nI guess, other features of areas, that\nare important that we need to understand.\n\n40\n00:02:03.090 --> 00:02:05.760\nBut in this one we're gonna\ntake a look at network types.\n\n41\n00:02:05.760 --> 00:02:07.970\nNow, when I say network types,\nwhat the heck am I talking about?\n\n42\n00:02:07.970 --> 00:02:11.710\nWell, in your OSPF environment,\nbecause it can scale large,\n\n43\n00:02:11.710 --> 00:02:15.600\nyou might have LAN technologies\nas well as WAN technologies.\n\n44\n00:02:15.600 --> 00:02:17.840\nAnd if routers are involved\nthat's usually the case, right?\n\n45\n00:02:17.840 --> 00:02:19.860\nSo you might have Ethernet networks.\n\n46\n00:02:19.860 --> 00:02:22.980\nMaybe regular Ethernet, fast Ethernet,\n\n47\n00:02:22.980 --> 00:02:25.930\ngig Ethernet, 10 gig Ethernet,\nwhatever it is that you have.\n\n48\n00:02:25.930 --> 00:02:29.620\nYou might have fiber-optics, you might\nhave copper, you might have frame relay,\n\n49\n00:02:29.620 --> 00:02:32.400\nyou might have ISDN, MPLS, right?\n\n50\n00:02:32.400 --> 00:02:36.410\nCable DSL, all the various\nnetwork types that are out there,\n\n51\n00:02:36.410 --> 00:02:38.560\nyou may have that in\nyour OSPF environment.\n\n52\n00:02:38.560 --> 00:02:44.350\nAnd so when two OSPF routers come up and\ntry to establish a relationship, they need\n\n53\n00:02:44.350 --> 00:02:48.130\nto have a little bit of an understanding\nof the network that they're running over.\n\n54\n00:02:48.130 --> 00:02:52.530\nAnd some networks are super fast and\nultra stable.\n\n55\n00:02:52.530 --> 00:02:55.930\nOther networks are slower and\nnot as stable, and so\n\n56\n00:02:55.930 --> 00:02:57.690\nthey need to be treated differently.\n\n57\n00:02:57.690 --> 00:03:01.530\nAnd OSPF tries, it tries really hard,\nto figure that out for\n\n58\n00:03:01.530 --> 00:03:03.490\nus so we don't have to worry about it.\n\n59\n00:03:03.490 --> 00:03:07.090\nBut sometimes it just doesn't work out and\nyou start to encounter some problems.\n\n60\n00:03:07.090 --> 00:03:10.760\nSo as a good network admin, you need to\nunderstand what those different network\n\n61\n00:03:10.760 --> 00:03:13.710\ntypes are because sometimes we\nmight need to influence that and\n\n62\n00:03:13.710 --> 00:03:15.730\nlet OSPF know, right.\n\n63\n00:03:15.730 --> 00:03:20.510\nNow, inside of OSPF is actually different\nnetwork types that we need to be aware of\n\n64\n00:03:20.510 --> 00:03:23.230\nand each one kind of falls\ninto a different situation.\n\n65\n00:03:23.230 --> 00:03:26.240\nSo what I want to do is in this episode\nrun through each of those different\n\n66\n00:03:26.240 --> 00:03:28.160\nsituations so\nyou can see where these are used.\n\n67\n00:03:28.160 --> 00:03:30.960\nAnd I want to start off\nwith the most popular one.\n\n68\n00:03:30.960 --> 00:03:34.220\nThe most popular one is what's\ncalled the Broadcast network type.\n\n69\n00:03:34.220 --> 00:03:35.850\nLet me bring out my topology here,\n\n70\n00:03:35.850 --> 00:03:37.730\nI want to show you guys\nthe routers that I've got.\n\n71\n00:03:37.730 --> 00:03:39.710\nSo here's my little lab topology.\n\n72\n00:03:39.710 --> 00:03:44.210\nAnd I've got a headquarters router, and\nit's connected out to a couple of ISPs.\n\n73\n00:03:44.210 --> 00:03:46.530\nAnd I've got branch one which\nalso has an ISP connection, but\n\n74\n00:03:46.530 --> 00:03:48.590\nwe can just kind of forget that right now.\n\n75\n00:03:48.590 --> 00:03:50.600\nAnd inside of my network,\n\n76\n00:03:50.600 --> 00:03:54.840\nI've got MetroE as the primary link\nbetween all of my different branches.\n\n77\n00:03:54.840 --> 00:03:57.320\nAnd then I've got Frame Relay\nas like a back up\n\n78\n00:03:57.320 --> 00:03:59.340\ngoing out to my different branches.\n\n79\n00:03:59.340 --> 00:04:03.030\nSo, I've got ethernet connectivity and\nI've got serial-based\n\n80\n00:04:03.030 --> 00:04:06.482\nFrame Relay connectivity over here,\ntwo different types of connectivity.\n\n81\n00:04:06.482 --> 00:04:09.490\nNow, ethernet, can be LAN,\nthat can be WAN, these days.\n\n82\n00:04:09.490 --> 00:04:11.900\nBack in the old days, it was always LAN.\n\n83\n00:04:11.900 --> 00:04:15.480\nFrame relay, though, nobody's running\nframe relay on their LAN, right?\n\n84\n00:04:15.480 --> 00:04:16.256\nNobody's saying.\n\n85\n00:04:16.256 --> 00:04:18.710\n>> [LAUGH]\n>> It's a WAN technology so\n\n86\n00:04:18.710 --> 00:04:21.860\nyou may have mixtures like that\ninside of your environment.\n\n87\n00:04:21.860 --> 00:04:23.650\nThe first network type that\nI want to talk about is\n\n88\n00:04:23.650 --> 00:04:26.560\nwhat's called the broadcast network type.\n\n89\n00:04:26.560 --> 00:04:31.438\nThe broadcast network type is intended for\nmulti-access networks where broadcasts\n\n90\n00:04:31.438 --> 00:04:34.280\nare allowed, and\nthe best example of that, is Ethernet.\n\n91\n00:04:34.280 --> 00:04:36.100\nAn Ethernet network is\na broadcast network.\n\n92\n00:04:36.100 --> 00:04:39.130\nIf I plug into an Ethernet connection,\nand I send out a broadcast,\n\n93\n00:04:39.130 --> 00:04:40.690\nwho's gonna see it?\n\n94\n00:04:40.690 --> 00:04:42.150\nAnybody on that segment, right?\n\n95\n00:04:42.150 --> 00:04:45.090\nAnybody on that same segment's gonna see\nthat broadcast, and I can communicate.\n\n96\n00:04:45.090 --> 00:04:50.222\nSo as far as neighbor discovery,\nOSPF loves to send those multicast out and\n\n97\n00:04:50.222 --> 00:04:54.070\non an Ethernet network, those multicast\nwill spread out right across there,\n\n98\n00:04:54.070 --> 00:04:57.050\nthe other routers will see it and\nwill start to communicate, right?\n\n99\n00:04:57.050 --> 00:05:01.310\nThat's the most common form of OSPF,\nthat's what we normally see and\n\n100\n00:05:01.310 --> 00:05:04.910\nyou really never have to manipulate this\none, this is really not a big deal, right?\n\n101\n00:05:04.910 --> 00:05:07.960\nLet me jump over to my router config,\nand I'll show you.\n\n102\n00:05:07.960 --> 00:05:14.580\nSo like here on my headquarters,\nthat MetroE connection is actually my e0/0\n\n103\n00:05:14.580 --> 00:05:17.390\ninterface, which I think I have shut down\nright now so let me turn that back on.\n\n104\n00:05:17.390 --> 00:05:21.360\nSo I'm going to bring that interface\nback up, and if I get in here and\n\n105\n00:05:21.360 --> 00:05:25.280\nturn on OSPF for this interface,\nwell it's going to wake up.\n\n106\n00:05:25.280 --> 00:05:28.710\nIt's going to start communicating and\nit's going to use that network type.\n\n107\n00:05:28.710 --> 00:05:33.000\nSo if say, IP OSPF 1 area 0, right?\n\n108\n00:05:33.000 --> 00:05:36.610\nSo I'm configuring OSPF process one and\n\n109\n00:05:36.610 --> 00:05:40.790\nI'm putting this interface in area zero,\nall right?\n\n110\n00:05:40.790 --> 00:05:43.710\nOSPF is now up and\nrunning for this interface.\n\n111\n00:05:43.710 --> 00:05:45.550\nNow I don't have any neighbors yet, right?\n\n112\n00:05:45.550 --> 00:05:49.260\nSo if I do like a show ip ospf neighbor,\n\n113\n00:05:49.260 --> 00:05:54.330\nI don't know anybody, all right.\n\n114\n00:05:54.330 --> 00:05:58.580\nBut if I do a show ip ospf interface and\nthen specify the interface name,\n\n115\n00:05:58.580 --> 00:06:01.210\nright, if you leave that off it shows you\nall of them, I just want to see this one.\n\n116\n00:06:01.210 --> 00:06:05.230\nIt'll show you information about\nthe interface from OSPF's perspective.\n\n117\n00:06:05.230 --> 00:06:07.870\nAnd OSPF will show you some neat things,\nlike here's the IP address on\n\n118\n00:06:07.870 --> 00:06:10.980\nthe interface and\nhere's the area that I'm in, right?\n\n119\n00:06:10.980 --> 00:06:13.270\nIf I do just a show interface,\nyou don't see the area but\n\n120\n00:06:13.270 --> 00:06:16.480\nif you do a show IP OSPF interface,\nyou see it.\n\n121\n00:06:16.480 --> 00:06:19.200\nWhat I'm concerned about\nis this guy right here.\n\n122\n00:06:19.200 --> 00:06:20.690\nNetwork type, broadcast.\n\n123\n00:06:20.690 --> 00:06:21.670\nSo, I'm set to a broadcast.\n\n124\n00:06:21.670 --> 00:06:23.400\nSo, I'm set to a broadcast network.\n\n125\n00:06:23.400 --> 00:06:27.870\nI fully expect to be able to send\nmulti-cast out and get responses back.\n\n126\n00:06:27.870 --> 00:06:29.060\nRight?\nAnd it should work, right?\n\n127\n00:06:29.060 --> 00:06:30.871\nIf I jump over, I'll say should.\n\n128\n00:06:30.871 --> 00:06:33.520\n>> [LAUGH]\n>> That's gonna be my back up plan.\n\n129\n00:06:33.520 --> 00:06:37.810\nI'll jump over to branch one here and I'm\ngonna kinda run through that same process.\n\n130\n00:06:37.810 --> 00:06:43.250\nI'll get into interface e0/0, I'll do\na node shutdown because I think it is off.\n\n131\n00:06:43.250 --> 00:06:47.750\nAnd then I'll create an OSPF process,\nand remember your OSPF process numbers,\n\n132\n00:06:47.750 --> 00:06:50.170\nthey don't have to match,\nyou can pick whatever you want.\n\n133\n00:06:50.170 --> 00:06:52.510\nI always do one,\njust because I can remember it.\n\n134\n00:06:52.510 --> 00:06:54.770\nYou know as you get older that\nbecomes more challenging.\n\n135\n00:06:54.770 --> 00:06:58.680\nBut I'm gonna throw this turkey\ninto area zero, there we go.\n\n136\n00:06:58.680 --> 00:07:00.560\nAnd on this one,\n\n137\n00:07:00.560 --> 00:07:05.510\nit's gonna see that OSPF is being\nenabled on that Ethernet interface and\n\n138\n00:07:05.510 --> 00:07:11.990\nif I look at it, I should see that\nits Network Type is also a BROADCAST.\n\n139\n00:07:11.990 --> 00:07:14.730\nOkay, so I'm BROADCAST on headquarters.\n\n140\n00:07:14.730 --> 00:07:16.340\nI'm BROADCAST on branch 1.\n\n141\n00:07:16.340 --> 00:07:18.840\nThey're going over that Ethernet network.\n\n142\n00:07:18.840 --> 00:07:23.370\nThey see each other, and\nthat adjacency comes up just fine.\n\n143\n00:07:23.370 --> 00:07:25.570\nAnd so now,\nif I jump back to headquarters,\n\n144\n00:07:25.570 --> 00:07:27.510\nI can see I've got a neighbor, right?\n\n145\n00:07:27.510 --> 00:07:29.280\nAnd everything's working.\n\n146\n00:07:29.280 --> 00:07:31.610\nNow, I haven't actually changed anything.\n\n147\n00:07:31.610 --> 00:07:33.130\nThis is kind of the default functionality.\n\n148\n00:07:33.130 --> 00:07:35.360\nThis is what I expect.\n\n149\n00:07:35.360 --> 00:07:38.600\nBut, there are other network types.\n\n150\n00:07:38.600 --> 00:07:40.550\nFor example, point to point.\n\n151\n00:07:40.550 --> 00:07:43.250\nIf I go back to my topology, Branch 1 and\n\n152\n00:07:43.250 --> 00:07:46.940\nheadquarters are now talking\nvia the metro elink.\n\n153\n00:07:46.940 --> 00:07:48.550\nRight?\nThey're going out that way.\n\n154\n00:07:48.550 --> 00:07:49.430\nOkay.\n\n155\n00:07:49.430 --> 00:07:53.227\nBut I've got these serial lines sitting\nover here I could communicate on also.\n\n156\n00:07:53.227 --> 00:07:55.920\nRight?\nI could build up an OSPF adjacency on\n\n157\n00:07:55.920 --> 00:07:56.489\nthose.\n\n158\n00:07:56.489 --> 00:07:58.306\nNow these serial lines.\n\n159\n00:07:58.306 --> 00:08:02.114\nThese are basically T1s,\nthey're point to point connections.\n\n160\n00:08:02.114 --> 00:08:04.920\nOn a point to point connection,\nhow many nodes can I have?\n\n161\n00:08:04.920 --> 00:08:05.500\nTwo?\n\n162\n00:08:05.500 --> 00:08:06.840\nJust two, right?\n\n163\n00:08:06.840 --> 00:08:10.140\nSo do I need broadcast on\na point to point link?\n\n164\n00:08:10.140 --> 00:08:10.960\nI don't need them.\n\n165\n00:08:10.960 --> 00:08:11.510\nI have them.\n\n166\n00:08:11.510 --> 00:08:13.560\nThey can work, right,\nbut I don't need them,\n\n167\n00:08:13.560 --> 00:08:15.620\nbecause there's only one other\nperson on the other side.\n\n168\n00:08:15.620 --> 00:08:16.300\nWhy broadcast?\n\n169\n00:08:16.300 --> 00:08:17.930\nI can just send traffic\nout with no address and\n\n170\n00:08:17.930 --> 00:08:19.780\nit's gonna get to the other side, right.\n\n171\n00:08:19.780 --> 00:08:22.670\nSo it's not so\nimportant that I have broadcast.\n\n172\n00:08:22.670 --> 00:08:26.030\nSo point to point networks work\na little bit differently, right.\n\n173\n00:08:26.030 --> 00:08:29.480\nNow even if networks aren't point to\npoint they're multi access you can have\n\n174\n00:08:29.480 --> 00:08:30.100\nmany nodes on them.\n\n175\n00:08:30.100 --> 00:08:32.020\nBut on a point to point\nnetwork you don't have that.\n\n176\n00:08:32.020 --> 00:08:35.760\nSo you don't do things like DRs and\nBDRs you don't do that stuff\n\n177\n00:08:35.760 --> 00:08:39.190\nbecause you're just,\nthere's only one other node, right?\n\n178\n00:08:39.190 --> 00:08:41.360\nSo OSPF recognizes that, and\n\n179\n00:08:41.360 --> 00:08:44.700\nwe have a different network type,\na network type called point-to-point.\n\n180\n00:08:44.700 --> 00:08:47.570\nAnd it should automatically detect that.\n\n181\n00:08:47.570 --> 00:08:51.530\nSo if I go back to my headquarters, and\nI get into interface serial 1/1, right?\n\n182\n00:08:51.530 --> 00:08:54.790\nThat's one of the links\nbetween those two routers.\n\n183\n00:08:54.790 --> 00:08:56.160\nI'll do a no shutdown.\n\n184\n00:08:56.160 --> 00:08:57.210\nI think it is up.\n\n185\n00:08:57.210 --> 00:09:01.350\nAnd I'm gonna put this\none in process 1 area 0.\n\n186\n00:09:01.350 --> 00:09:05.590\nAnd then I'll do the same\nthing over on branch 1.\n\n187\n00:09:05.590 --> 00:09:13.675\nI'll get into serial 1/1 and I'll do an ip\nospf 1 area 0 and bring that up, okay?\n\n188\n00:09:13.675 --> 00:09:16.735\nIf the line is functioning, I should see\nan adjacency appear and I do, right?\n\n189\n00:09:16.735 --> 00:09:18.355\nSo I just got my adjacency up, so\n\n190\n00:09:18.355 --> 00:09:21.445\nI'm seeing the headquarters router and\nOSPF is running fine.\n\n191\n00:09:22.595 --> 00:09:26.725\nBut if I do a show ip ospf int s1/1,\nnotice that network type.\n\n192\n00:09:26.725 --> 00:09:31.100\nAll right, the network type.\n\n193\n00:09:31.100 --> 00:09:32.190\nIs now point to point.\n\n194\n00:09:32.190 --> 00:09:32.700\nAll right.\n\n195\n00:09:32.700 --> 00:09:35.950\nIt's point to point on\nthe serial interface, but\n\n196\n00:09:35.950 --> 00:09:38.500\nit was broadcast on\nthe ethernet interface.\n\n197\n00:09:38.500 --> 00:09:40.460\nAll right.\nNow why does that matter to us?\n\n198\n00:09:40.460 --> 00:09:41.620\nI didn't have to configure anything.\n\n199\n00:09:41.620 --> 00:09:43.090\nRight?\nSo what do I care about this?\n\n200\n00:09:43.090 --> 00:09:44.310\nI can just ignore it.\n\n201\n00:09:44.310 --> 00:09:48.410\nWell the reason I care about it is that\nit's actually changing the behavior of\n\n202\n00:09:48.410 --> 00:09:48.950\nthat line.\n\n203\n00:09:48.950 --> 00:09:54.018\nThe line works differently whether\nit's broadcast or point to point.\n\n204\n00:09:54.018 --> 00:09:57.000\nOn a point-to-point line I know\nthere's only one other node out there.\n\n205\n00:09:57.000 --> 00:10:00.490\nSo I know not to do a DR and a BDR, and\n\n206\n00:10:00.490 --> 00:10:03.950\nif this were broadcast I know\nI would need a DR and a BDR.\n\n207\n00:10:03.950 --> 00:10:08.230\nSo while I don't care, I don't have to\ndo anything, OSPF does care, right?\n\n208\n00:10:08.230 --> 00:10:11.440\nThat's what's telling OSPF\nnot to do a DR or BDR.\n\n209\n00:10:11.440 --> 00:10:15.920\nIf I look at my neighbor relationships,\nI'll see that, right?\n\n210\n00:10:15.920 --> 00:10:19.990\nSee how on the ethernet link\nright here I've got FULL/BDR.\n\n211\n00:10:19.990 --> 00:10:22.280\nSo a BDR and a DR were elected.\n\n212\n00:10:22.280 --> 00:10:25.560\nEven though there are only two routers,\nit still elected them,\n\n213\n00:10:25.560 --> 00:10:29.070\nbecause of its multi-access number\na third router could come along.\n\n214\n00:10:29.070 --> 00:10:31.470\nBut on that serial link right here.\n\n215\n00:10:31.470 --> 00:10:34.820\nWell there's no way a third router can\ncome along, it's poin- to-point and\n\n216\n00:10:34.820 --> 00:10:37.140\nso that gets left off, right?\n\n217\n00:10:37.140 --> 00:10:39.790\nNow if I'm going to compare those two,\nright?\n\n218\n00:10:39.790 --> 00:10:45.310\nLike, let me, I'll pull up my\nserial interface on this router and\n\n219\n00:10:45.310 --> 00:10:47.820\nI'll pull up the ethernet\ninterface on this one.\n\n220\n00:10:47.820 --> 00:10:53.010\nLet me just get a little extra room\nhere and we'll pull it up here.\n\n221\n00:10:53.010 --> 00:10:53.640\nOkay.\n\n222\n00:10:53.640 --> 00:10:55.600\nSo if I start comparing these two.\n\n223\n00:10:55.600 --> 00:10:56.230\nRight?\n\n224\n00:10:56.230 --> 00:10:59.480\nWell there's actually a little bit of\na difference, cuz one give you more\n\n225\n00:10:59.480 --> 00:11:02.260\ninformation, here, now I can just\nkinda quickly flip between the two.\n\n226\n00:11:02.260 --> 00:11:02.940\nRight?\n\n227\n00:11:02.940 --> 00:11:04.310\nLook at what's different.\n\n228\n00:11:04.310 --> 00:11:06.060\nSo here's the broadcast.\n\n229\n00:11:06.060 --> 00:11:06.590\nRight?\n\n230\n00:11:06.590 --> 00:11:09.080\nAnd if I flip back here,\nhere's the point-to-point.\n\n231\n00:11:09.080 --> 00:11:10.970\nIf we start to look at\nthe lines themselves,\n\n232\n00:11:10.970 --> 00:11:13.580\nthere's not really a whole heck\nof a lot that's different.\n\n233\n00:11:13.580 --> 00:11:16.190\nBut you'll notice when I\ngot to the broadcast one,\n\n234\n00:11:16.190 --> 00:11:19.585\nwe get the extra entries here for\nwhose the designated router.\n\n235\n00:11:19.585 --> 00:11:21.260\nWho's the backup designed router,\nright, so\n\n236\n00:11:21.260 --> 00:11:23.070\nthere's some extra lines that's appearing.\n\n237\n00:11:23.070 --> 00:11:24.320\nBut otherwise everything's the same.\n\n238\n00:11:24.320 --> 00:11:25.320\nAnd if we look for\n\n239\n00:11:25.320 --> 00:11:28.380\nsomething that is really important like\nthis our timer's those are the same.\n\n240\n00:11:28.380 --> 00:11:29.920\nSee my hello timer is 10.\n\n241\n00:11:29.920 --> 00:11:31.740\nMy dead interval is 40.\n\n242\n00:11:31.740 --> 00:11:33.320\nIf I jump back to broadcast.\n\n243\n00:11:33.320 --> 00:11:34.490\nI mean, to point-to-point.\n\n244\n00:11:34.490 --> 00:11:36.210\nMy hello is ten, my data is 40, right?\n\n245\n00:11:36.210 --> 00:11:38.850\nThose are what we're used to.\n\n246\n00:11:38.850 --> 00:11:43.690\nBut there's three other network\ntypes that we can fall into,\n\n247\n00:11:43.690 --> 00:11:46.510\nwhere those don't match,\nwhere those are different, okay.\n\n248\n00:11:46.510 --> 00:11:48.990\nBut these two right here,\nbroadcast and point-to-point.\n\n249\n00:11:48.990 --> 00:11:51.210\nThose are the two standard modes for OSPF.\n\n250\n00:11:51.210 --> 00:11:53.860\nThat's what we expect to see,\nthose two modes.\n\n251\n00:11:55.010 --> 00:11:58.230\nBut there's some networks\nthat cause some problems.\n\n252\n00:11:58.230 --> 00:11:59.000\nAll right?\n\n253\n00:11:59.000 --> 00:12:02.930\nBoth point-to-point and\nbroadcast assume that broadcast will work.\n\n254\n00:12:02.930 --> 00:12:05.710\nThey assume that the regular OSPF\nmulticast will be able to cross the line\n\n255\n00:12:05.710 --> 00:12:06.940\nand get to the other side.\n\n256\n00:12:06.940 --> 00:12:07.560\nAll right?\n\n257\n00:12:07.560 --> 00:12:11.090\nI always think of the,\nwhy did the broadcast cross the road?\n\n258\n00:12:11.090 --> 00:12:11.888\nTo get to the other side.\n\n259\n00:12:11.888 --> 00:12:13.992\n>> [LAUGH]\n>> Anyhow,\n\n260\n00:12:13.992 --> 00:12:16.590\nso it's gonna work\n>> But\n\n261\n00:12:16.590 --> 00:12:19.889\nwhat if I'm on a network where\nmultitask doesn't work, right?\n\n262\n00:12:19.889 --> 00:12:23.920\nA lot of frame relay networks,a\nlot of MPLS networks\n\n263\n00:12:23.920 --> 00:12:26.140\ndon't allow broadcasts, right?\n\n264\n00:12:26.140 --> 00:12:28.400\nBroadcasts are blocked and\nif broadcasts are blocked.\n\n265\n00:12:28.400 --> 00:12:30.560\nSo are multicast,\nthey kinda go hand-in-hand.\n\n266\n00:12:30.560 --> 00:12:32.360\nSo that means OSPF is not gonna work.\n\n267\n00:12:32.360 --> 00:12:34.330\nI'm not gonna be able\nto find my neighbors.\n\n268\n00:12:34.330 --> 00:12:37.120\nSo there's a couple of other\nmodes that jump in to help us.\n\n269\n00:12:37.120 --> 00:12:40.140\nAnd to help remember these,\nI made a little table.\n\n270\n00:12:40.140 --> 00:12:42.040\nLet me bring up my table, here we go.\n\n271\n00:12:42.040 --> 00:12:43.960\nSo here's my table where I\nshow the five different types.\n\n272\n00:12:43.960 --> 00:12:47.640\nNow Broadcast, I showed you guys first,\nthat's this guy right here.\n\n273\n00:12:47.640 --> 00:12:50.010\nAnd then we've got point-to-point,\nthat's this guy right here.\n\n274\n00:12:50.010 --> 00:12:50.650\nOkay.\n\n275\n00:12:50.650 --> 00:12:54.990\nNow, the only real functional difference\nbetween those two, is whether a DR and\n\n276\n00:12:54.990 --> 00:12:58.880\nBDR are elected, right, because a\npoint-to-point doesn't need a DR, BDR but\n\n277\n00:12:58.880 --> 00:13:00.300\na broadcast does.\n\n278\n00:13:00.300 --> 00:13:02.272\nThe other difference is\nour subnet arrangement.\n\n279\n00:13:02.272 --> 00:13:04.750\nAll right, If I've got five routers And\n\n280\n00:13:04.750 --> 00:13:08.570\nI'm doing a broadcast network,\nall five can be on the same subnet, right?\n\n281\n00:13:08.570 --> 00:13:10.070\nYou can have many computers.\n\n282\n00:13:10.070 --> 00:13:11.080\nBut on a point-to-point link,\n\n283\n00:13:11.080 --> 00:13:13.120\nyou can only have two nodes\nin that point-to-point link.\n\n284\n00:13:13.120 --> 00:13:14.240\nSo if we're doing point-to-point and\n\n285\n00:13:14.240 --> 00:13:18.330\nI've got five routers, I\"m gonna have\nto create four, well at least four,\n\n286\n00:13:18.330 --> 00:13:21.290\ndifferent subnets to be able to\ninterconnect those and get them set up.\n\n287\n00:13:21.290 --> 00:13:23.430\nSo we can't have that shared subnet.\n\n288\n00:13:23.430 --> 00:13:26.050\nEverywhere else you could have a shared\nsubnet, but on a point-to-point you can't.\n\n289\n00:13:26.050 --> 00:13:27.330\nAll right?\n\n290\n00:13:27.330 --> 00:13:31.303\nNow the other three modes,\nthese guys right here, non-broadcast,\n\n291\n00:13:31.303 --> 00:13:35.230\npoint-to-multipoint point to\nmulti-point broadcast right?\n\n292\n00:13:35.230 --> 00:13:37.350\nWhich is really just\na combination of the first two.\n\n293\n00:13:37.350 --> 00:13:40.470\nWell, these are designed as fixes.\n\n294\n00:13:40.470 --> 00:13:43.610\nFixes to make OSPF work\nwhen you're on a network or\n\n295\n00:13:43.610 --> 00:13:45.395\nbroadcast isn't supported, okay?\n\n296\n00:13:45.395 --> 00:13:50.280\nNon-broadcast, that's used for\nNBMA network, non-broadcast multi-access\n\n297\n00:13:50.280 --> 00:13:53.750\nnetworks, frame relay and MPLS\nare really the two big examples of that.\n\n298\n00:13:53.750 --> 00:13:57.910\nAnd on those networks I might\nhave multiple machines, but\n\n299\n00:13:57.910 --> 00:13:59.580\nnot be allowed to broadcast.\n\n300\n00:13:59.580 --> 00:14:03.910\nSo for those, I'm gonna statically\ndefine who my neighbors are.\n\n301\n00:14:03.910 --> 00:14:07.770\nI'm gonna tell the system who those\nneighbors are, and then once it knows that\n\n302\n00:14:07.770 --> 00:14:11.210\nit can reach out and talked them,\nbut broadcast won't work all right?\n\n303\n00:14:11.210 --> 00:14:12.380\nSo we can turn that on,\n\n304\n00:14:12.380 --> 00:14:15.535\nwe can go to non-broadcast mode and then\nwe can statically define our neighbors.\n\n305\n00:14:15.535 --> 00:14:18.630\nPoint-to-multipoint.\n\n306\n00:14:18.630 --> 00:14:20.910\nThis is what we would use in a hub and\nspoke model.\n\n307\n00:14:20.910 --> 00:14:24.930\nIf you've got a frame relay hub, you know\nsome location like my headquarters, right.\n\n308\n00:14:24.930 --> 00:14:26.200\nIf I go back to my diagram,\n\n309\n00:14:26.200 --> 00:14:29.525\nmy headquarters is acting like a hub for\nthis.\n\n310\n00:14:29.525 --> 00:14:34.765\nIf I take a look at my actual frame\nlayout, this is what it looks like.\n\n311\n00:14:34.765 --> 00:14:39.735\nI've got my headquarters, and it's got\nvirtual private circuits, or VPCs,\n\n312\n00:14:39.735 --> 00:14:41.305\nthat connect out to these branches.\n\n313\n00:14:41.305 --> 00:14:43.235\nThe headquarters is like the hub.\n\n314\n00:14:43.235 --> 00:14:45.025\nThese guys out here branch one.\n\n315\n00:14:45.025 --> 00:14:46.825\nThat might be point-to-point.\n\n316\n00:14:46.825 --> 00:14:50.135\nBut at the headquarters,\nit's actually point to multipoint.\n\n317\n00:14:50.135 --> 00:14:52.680\nIt knows there's more than\nperson that's out there.\n\n318\n00:14:52.680 --> 00:14:55.920\nSo, the systems are getting\na different view of the network.\n\n319\n00:14:55.920 --> 00:14:57.290\nMaybe you've got a full mesh, right?\n\n320\n00:14:57.290 --> 00:14:59.640\nMaye you have something like this, and\n\n321\n00:14:59.640 --> 00:15:04.100\nthen everybody is point to multi-point,\nbut more commonly, we're doing hub and\n\n322\n00:15:04.100 --> 00:15:07.860\nspoke, and in hub and spoke,\nthe headquarters is multi-point.\n\n323\n00:15:07.860 --> 00:15:09.350\nBut the branches are all point-to-point.\n\n324\n00:15:09.350 --> 00:15:11.210\nThe branches just see headquarters,\n\n325\n00:15:11.210 --> 00:15:13.390\nthey don't see the other branches\nthat are out there, right.\n\n326\n00:15:13.390 --> 00:15:15.400\nThat's a difference in behavior.\n\n327\n00:15:15.400 --> 00:15:18.010\nAnd so\nwhen we define that OSPF network type.\n\n328\n00:15:18.010 --> 00:15:22.080\nWell, we have to tell it,\nis it point to multi-point, or\n\n329\n00:15:22.080 --> 00:15:25.330\nis it actually point-to-point\nis it just non-broadcast, right?\n\n330\n00:15:25.330 --> 00:15:26.800\nSo which is it?\n\n331\n00:15:26.800 --> 00:15:30.870\nAnd then when we go multi-point,\nIf I'm multipoint on a network that\n\n332\n00:15:30.870 --> 00:15:34.940\nsupports broadcast or if I'm multipoint on\na network that doesn't support broadcast.\n\n333\n00:15:34.940 --> 00:15:36.700\nThat's these other two modes,\n\n334\n00:15:36.700 --> 00:15:40.040\npoint to multipoint actually means\nthat broadcasts are allowed.\n\n335\n00:15:40.040 --> 00:15:42.310\nAnd then point to\nmultipoint non-broadcast,\n\n336\n00:15:42.310 --> 00:15:43.520\nthat means that they aren't.\n\n337\n00:15:43.520 --> 00:15:45.580\nSo we're kind of picking and choosing.\n\n338\n00:15:45.580 --> 00:15:50.865\nYou've got point-to-point, and\nthen Non-broadcast which is kind of really\n\n339\n00:15:50.865 --> 00:15:54.081\nlike broadcast but without the broadcast,\n>> [LAUGH]\n\n340\n00:15:54.081 --> 00:15:54.778\n>> Doesn't make a whole heck of\n\n341\n00:15:54.778 --> 00:15:55.480\na lot of sense there does it.\n\n342\n00:15:55.480 --> 00:15:57.564\nBut where we statically\ndefine those neighbors And\n\n343\n00:15:57.564 --> 00:15:59.705\nthen we've got the multi-point ones,\nall right.\n\n344\n00:15:59.705 --> 00:16:03.116\nSo, what I've done is I've actually\nkind of created an environment that's\n\n345\n00:16:03.116 --> 00:16:04.120\na bit mixed.\n\n346\n00:16:04.120 --> 00:16:05.710\nIf I take a look at my headquarters,\n\n347\n00:16:05.710 --> 00:16:09.860\nI'm just going to pull up my config\nreal quick, and show you what I've got.\n\n348\n00:16:09.860 --> 00:16:14.160\nI took the Serial1/0 interface, that's\nthe interface that my frame relays on, and\n\n349\n00:16:14.160 --> 00:16:16.200\nI configured it two different ways.\n\n350\n00:16:16.200 --> 00:16:22.060\nI created a frame relay point to point\nlink that connects to branch one.\n\n351\n00:16:22.060 --> 00:16:25.510\nSo, branch 1 actually has a frame\nrelay point to point link.\n\n352\n00:16:25.510 --> 00:16:27.947\nBut then, I took branches 2 and 3, and\n\n353\n00:16:27.947 --> 00:16:32.370\nput them on another sub interface and\nconfigured them as multi-point.\n\n354\n00:16:32.370 --> 00:16:35.250\nSo, I've got kind of a mixture\nof the different networks.\n\n355\n00:16:35.250 --> 00:16:36.090\nAnd the reason I did that,\n\n356\n00:16:36.090 --> 00:16:39.940\nis I want to show you guys what happens\nwith OSPF when we go to set this up.\n\n357\n00:16:39.940 --> 00:16:44.290\nOkay, so let me jump through and\nkind of give you guys an example of this.\n\n358\n00:16:44.290 --> 00:16:46.072\nSo I'm going to take branch 1,\n\n359\n00:16:46.072 --> 00:16:49.043\nand I'm going to get into\nits frame relay interface.\n\n360\n00:16:49.043 --> 00:16:54.240\nAnd I'm just going to add that\nto OSPF area 0, all right?\n\n361\n00:16:54.240 --> 00:16:58.737\nAnd I'll do the same exact thing\non branch 2 and branch 3, right?\n\n362\n00:16:58.737 --> 00:17:03.406\nSo, I'm just going to get into\nthat serial interface and\n\n363\n00:17:03.406 --> 00:17:08.392\nadd it to OSPF area 0, and\nlastly I'll do that on branch 3.\n\n364\n00:17:08.392 --> 00:17:11.490\nAll right, so\nthese guys are all kind of the same.\n\n365\n00:17:11.490 --> 00:17:15.280\nThe branches, they just see that\none connection in the frame relay,\n\n366\n00:17:15.280 --> 00:17:17.760\nnothing too special there, right?\n\n367\n00:17:17.760 --> 00:17:22.500\nAnd if I do a show ip ospf interface for\nserial 1/0.1,\n\n368\n00:17:22.500 --> 00:17:27.650\nand I look at it, see how they're\nshowing as point to point, right?\n\n369\n00:17:27.650 --> 00:17:29.611\nIt's point to point,\nthat's all that branch sees.\n\n370\n00:17:29.611 --> 00:17:35.050\nAnd that goes for\nbranch 1 which is truly point to point.\n\n371\n00:17:35.050 --> 00:17:36.193\nAnd branch 2 and branch 3,\n\n372\n00:17:36.193 --> 00:17:39.190\nwhich are actually connecting\nto multi-point on the other end.\n\n373\n00:17:39.190 --> 00:17:41.850\nBut as far as they're concerned,\nit's point to point,\n\n374\n00:17:41.850 --> 00:17:43.310\nthere's only one other node, right?\n\n375\n00:17:43.310 --> 00:17:49.715\nLooking at branch 3's config,\nif I look at the configuration there,\n\n376\n00:17:49.715 --> 00:17:53.034\nI've got my IP, I've got one dlci.\n\n377\n00:17:53.034 --> 00:17:55.056\nIt's going to assume that\nthat's point to point, right?\n\n378\n00:17:55.056 --> 00:17:56.850\nThat there's nobody else out there.\n\n379\n00:17:56.850 --> 00:17:58.370\nAnd that's it,\nthat's exactly what it's done.\n\n380\n00:17:59.410 --> 00:18:04.990\nWell, on headquarters, let's jump over\nhere, and I'll get into its interfaces.\n\n381\n00:18:04.990 --> 00:18:07.161\nNow it's gonna have two\ndifferent interfaces.\n\n382\n00:18:07.161 --> 00:18:11.810\nThis one, serial 1/0.1,\nthat's the point to point to branch 1.\n\n383\n00:18:11.810 --> 00:18:16.531\nAnd so if I bring that up into OSPF,\nit's gonna go and bring it up.\n\n384\n00:18:16.531 --> 00:18:18.180\nAnd it's going to try and\nconnect to the other side.\n\n385\n00:18:18.180 --> 00:18:21.010\nAnd I see,\nI just went from loading to full.\n\n386\n00:18:21.010 --> 00:18:22.300\nThings must have worked.\n\n387\n00:18:23.300 --> 00:18:28.574\nThen, I'll get into serial 1/0.2, and\nthis is my multi-point interface.\n\n388\n00:18:28.574 --> 00:18:35.176\nIf I look at my config for 0.1,\nthat one's just, I've got a single dlci.\n\n389\n00:18:35.176 --> 00:18:38.030\nI've got an IP assigned to it,\nit's point to point.\n\n390\n00:18:38.030 --> 00:18:42.352\nBut, if I look at 0.2, I've got this one\nset right here as multi-point, right?\n\n391\n00:18:42.352 --> 00:18:45.259\nIt's on the interface that we define\nwhether it's point to point or\n\n392\n00:18:45.259 --> 00:18:46.586\nwhether it's multi-point.\n\n393\n00:18:46.586 --> 00:18:48.467\nAnd this one's multi-point and\n\n394\n00:18:48.467 --> 00:18:52.530\nit's got more than one neighbor\nmapped into it, right?\n\n395\n00:18:52.530 --> 00:18:58.814\nAnd so if I get into that interface,\nand I assign it to OSPF area 0,\n\n396\n00:18:58.814 --> 00:19:02.649\nall right, it's going to enable OSPF.\n\n397\n00:19:02.649 --> 00:19:03.854\nAnd it's going to reach out and\n\n398\n00:19:03.854 --> 00:19:06.740\nstart trying to build some\nneighbor relationships, right?\n\n399\n00:19:06.740 --> 00:19:11.448\nAnd, any moment now,\nI expect to see that loading to full.\n\n400\n00:19:11.448 --> 00:19:12.933\n>> [LAUGH]\n>> Any moment now, right?\n\n401\n00:19:12.933 --> 00:19:14.180\nAny moment now.\n\n402\n00:19:14.180 --> 00:19:15.114\nWell, I could wait forever.\n\n403\n00:19:15.114 --> 00:19:17.220\nIt's never going to happen, right.\n\n404\n00:19:17.220 --> 00:19:18.128\nWhy the heck isn't it happening?\n\n405\n00:19:18.128 --> 00:19:21.978\nEverything else was so easy,\nand now I get to this problem.\n\n406\n00:19:21.978 --> 00:19:28.799\nAnd the problem is I'm multi-point on one\nside, and I'm point to point on the other,\n\n407\n00:19:28.799 --> 00:19:33.230\nand OSPF is great at detecting\nyour local network type.\n\n408\n00:19:33.230 --> 00:19:35.560\nIt can't detect the remote network type.\n\n409\n00:19:35.560 --> 00:19:36.865\nIt doesn't see that, right?\n\n410\n00:19:36.865 --> 00:19:38.670\nSo it has no idea what's\non the other side.\n\n411\n00:19:38.670 --> 00:19:43.834\nAnd so what's happened is if I\ntake a look at my interface, or\n\n412\n00:19:43.834 --> 00:19:48.817\nserial 1/0.1,\nit looked at that config right here.\n\n413\n00:19:48.817 --> 00:19:52.458\nAnd it saw that it was point to point,\nand so when it enabled OSPF,\n\n414\n00:19:52.458 --> 00:19:54.260\nit enabled it as point to point.\n\n415\n00:19:54.260 --> 00:19:57.861\nAnd then when it did the same thing for\nthe other interface,\n\n416\n00:19:57.861 --> 00:20:01.189\nit saw that it was multi-point,\nand look what it did.\n\n417\n00:20:01.189 --> 00:20:03.090\nIt went non-broadcast.\n\n418\n00:20:03.090 --> 00:20:07.358\nOkay, it went non-broadcast because it\nsaid, hey, it's a multi-point link.\n\n419\n00:20:07.358 --> 00:20:10.260\nAnd there could be more\nthan one person out there.\n\n420\n00:20:10.260 --> 00:20:12.119\nI need to communicate with them somehow.\n\n421\n00:20:12.119 --> 00:20:14.487\nAnd oh look,\nyou've statically defined your dlcis.\n\n422\n00:20:14.487 --> 00:20:17.668\nYou've mapped, you've got a frame\nrelay map that maps IPs to dlcis.\n\n423\n00:20:17.668 --> 00:20:22.100\nSo I must be non-broadcast, and\nthat's the mode that it picked, all right?\n\n424\n00:20:22.100 --> 00:20:23.710\nBut there's a problem here.\n\n425\n00:20:23.710 --> 00:20:25.270\nOn one end, I'm point-to-point.\n\n426\n00:20:25.270 --> 00:20:27.810\nOn the other end, I'm non-broadcast.\n\n427\n00:20:27.810 --> 00:20:30.900\nLet's go back to my table that I've made,\nthis table right here, okay?\n\n428\n00:20:30.900 --> 00:20:35.110\nOn one end, I'm point-to-point,\nright, at the branches.\n\n429\n00:20:35.110 --> 00:20:39.680\nBut at headquarters,\nI'm non-broadcast, all right?\n\n430\n00:20:39.680 --> 00:20:43.500\nNow if we look at this, there's some\ndifferences, right, nothing too crazy.\n\n431\n00:20:43.500 --> 00:20:45.320\nOne allows one subnet, one doesn't.\n\n432\n00:20:45.320 --> 00:20:47.735\nOne's manual defining, one isn't.\n\n433\n00:20:47.735 --> 00:20:49.205\nAnd then I've got some other things.\n\n434\n00:20:49.205 --> 00:20:52.683\nBut the key thing I want to\npoint out are the timers.\n\n435\n00:20:52.683 --> 00:20:57.215\nOn that non-broadcast link,\nI'm at a 30 second hello interval and\n\n436\n00:20:57.215 --> 00:20:59.195\n120 second dead interval.\n\n437\n00:20:59.195 --> 00:21:01.227\nOn the point to point, it's 10 and 40.\n\n438\n00:21:01.227 --> 00:21:03.237\nThey don't match, right.\n\n439\n00:21:03.237 --> 00:21:06.063\nIn order for an OSPF adjacency to join,\n\n440\n00:21:06.063 --> 00:21:10.217\nthere's several things that have to match,\nright?\n\n441\n00:21:10.217 --> 00:21:12.068\nYou've got to have the same area number.\n\n442\n00:21:12.068 --> 00:21:14.115\nIf you don't have the same area number,\nit's not gonna come up.\n\n443\n00:21:14.115 --> 00:21:15.914\nYou've gotta have the same MTU size.\n\n444\n00:21:15.914 --> 00:21:18.683\nIf your MTU is different,\nit won't join up, all right.\n\n445\n00:21:18.683 --> 00:21:21.200\nYou've gotta have the same hello and\ndead intervals.\n\n446\n00:21:21.200 --> 00:21:23.001\nAnd dead interval is\njust four times hello, so\n\n447\n00:21:23.001 --> 00:21:24.623\nit's not like you set those separately.\n\n448\n00:21:24.623 --> 00:21:28.493\nSo you've gotta have those be the same,\nor it's not gonna come up, right.\n\n449\n00:21:28.493 --> 00:21:32.397\nSo on these connections\nit's not gonna come up.\n\n450\n00:21:32.397 --> 00:21:34.803\nBecause these are separate,\nthese numbers don't match.\n\n451\n00:21:34.803 --> 00:21:36.800\nAnd if I debug OSPF, I'll see that, right.\n\n452\n00:21:36.800 --> 00:21:41.000\nIt'll actually tell me, I mean,\nI'll see a lot of other stuff too.\n\n453\n00:21:41.000 --> 00:21:46.640\nBut if I do a debug ip ospf adj,\nit's trying to build these adjacencies,\n\n454\n00:21:46.640 --> 00:21:48.670\nbut the hello intervals\njust aren't going to match.\n\n455\n00:21:48.670 --> 00:21:49.800\nAnd that's what going to fail.\n\n456\n00:21:49.800 --> 00:21:52.763\nAnd I guess if I wait patiently,\neventually it will come up.\n\n457\n00:21:52.763 --> 00:21:54.934\nBut it's going show me,\nwell actually, you know what,\n\n458\n00:21:54.934 --> 00:21:57.510\nthe packets themselves\nare probably being rejected.\n\n459\n00:21:57.510 --> 00:22:00.878\nSo if I turn that on,\nwe should see it come through, but\n\n460\n00:22:00.878 --> 00:22:05.040\nhere I'm getting connections\non Serial1/0.2, right.\n\n461\n00:22:05.040 --> 00:22:09.141\nI'm receiving connections on it,\nand I know that's happening.\n\n462\n00:22:09.141 --> 00:22:11.498\nBut then it's not actually moving\nup to the adjacency stage.\n\n463\n00:22:11.498 --> 00:22:13.160\nIt's never even getting started.\n\n464\n00:22:13.160 --> 00:22:15.290\nThat's why my adjacency\ndebugging is empty.\n\n465\n00:22:15.290 --> 00:22:18.790\nBut eventually we'll see something,\nand it'll turn up in here.\n\n466\n00:22:18.790 --> 00:22:20.230\nAnd we'll be able to spot that.\n\n467\n00:22:20.230 --> 00:22:23.700\nBut if I look at my neighbors,\nsee how it doesn't have any neighbors,\n\n468\n00:22:23.700 --> 00:22:26.190\nnot even in the init state.\n\n469\n00:22:26.190 --> 00:22:28.970\nSo you remember our different states\nwhen we build up an adjacency.\n\n470\n00:22:28.970 --> 00:22:30.770\nThe init state is one\nof the earliest ones.\n\n471\n00:22:30.770 --> 00:22:31.878\nI don't even see that.\n\n472\n00:22:31.878 --> 00:22:34.450\nAnd it's because these intervals,\nit's just so different.\n\n473\n00:22:35.480 --> 00:22:36.874\nWell, the other problem,\n\n474\n00:22:36.874 --> 00:22:41.008\nthe other reason why I'm not seeing\nanything here is that I'm non-broadcast.\n\n475\n00:22:41.008 --> 00:22:44.367\nAnd if I go back to my table,\nin a non-broadcast network,\n\n476\n00:22:44.367 --> 00:22:48.218\nI have to manually define my neighbors,\nand I haven't done that.\n\n477\n00:22:48.218 --> 00:22:50.990\nSo I'm not broadcasting out\nto try to find the neighbors.\n\n478\n00:22:50.990 --> 00:22:55.330\nI'm receiving stuff from the neighbors,\nbut I'm not actually sending anything out.\n\n479\n00:22:55.330 --> 00:22:57.374\nSo, let me go and define those,\nright, I'll statically define them.\n\n480\n00:22:57.374 --> 00:23:02.057\nI'll say router ospf 1, and\nthen I'll just say neighbor.\n\n481\n00:23:02.057 --> 00:23:03.643\nAnd then you specify who that neighbor is,\n\n482\n00:23:03.643 --> 00:23:05.987\nwhich I guess would help if I\nactually knew their IP addresses.\n\n483\n00:23:05.987 --> 00:23:09.725\nLet's see, branch 2.\n\n484\n00:23:09.725 --> 00:23:14.020\nBranch 2 is 192.168.1.10.\n\n485\n00:23:14.020 --> 00:23:17.684\nSo, back on my headquarters,\nI can say neighbor,\n\n486\n00:23:17.684 --> 00:23:21.702\nand then with the neighbor\nyou specify that IP address.\n\n487\n00:23:21.702 --> 00:23:25.739\nSo that's the IP address of branch 2, and\nthen you specify anything you want to\n\n488\n00:23:25.739 --> 00:23:29.720\nmanipulate, right, cost, or\npoll interval, priority, whatever.\n\n489\n00:23:29.720 --> 00:23:31.240\nI'm not going to manipulate any of that.\n\n490\n00:23:31.240 --> 00:23:33.010\nI'm just going to go ahead and define it.\n\n491\n00:23:33.010 --> 00:23:35.420\nAnd then I'll add the other branch too,\nall right?\n\n492\n00:23:35.420 --> 00:23:38.210\nNow I know about those branches, and\nI'm gonna try and reach out to them.\n\n493\n00:23:38.210 --> 00:23:42.150\nAnd so I'm gonna reach out to them, but\nwe're gonna start to see that mismatch.\n\n494\n00:23:42.150 --> 00:23:48.109\nAnd if we take a look at our neighbors,\nwell, I've got two in the ATTEMPT state.\n\n495\n00:23:48.109 --> 00:23:50.070\nAnd if you watched that episode\nwhere we talked about the states,\n\n496\n00:23:50.070 --> 00:23:50.757\nI mentioned ATTEMPT.\n\n497\n00:23:50.757 --> 00:23:53.910\nAnd now this is really the only\ntime you see the ATTEMPT state.\n\n498\n00:23:53.910 --> 00:23:54.893\nI know about the neighbor.\n\n499\n00:23:54.893 --> 00:23:57.355\nI'm trying to reach out and get to them.\n\n500\n00:23:57.355 --> 00:24:00.101\nAnd if I debug that,\n\n501\n00:24:02.701 --> 00:24:07.335\nWe'll start to see me reaching out trying\nto contact those guys and failing.\n\n502\n00:24:07.335 --> 00:24:10.450\nAnd so that's going to be kind\nof going on in the background.\n\n503\n00:24:10.450 --> 00:24:12.760\nAs long as I've got this network type\nmismatch that's going to keep happening.\n\n504\n00:24:12.760 --> 00:24:17.080\nI'm never going to build up that\nrelationship with the other side.\n\n505\n00:24:17.080 --> 00:24:20.270\nSo this is why it's important to\nunderstand the different network types.\n\n506\n00:24:20.270 --> 00:24:23.830\nBecause there's gonna be times when\nwe have to go in and correct it.\n\n507\n00:24:23.830 --> 00:24:27.210\nOkay, now how can we correct this issue?\n\n508\n00:24:27.210 --> 00:24:28.590\nWell there's a few different ways.\n\n509\n00:24:28.590 --> 00:24:31.760\nI know if you go on the internet, you'll\nfind there's a lot of people that say,\n\n510\n00:24:31.760 --> 00:24:35.920\nwell you can just go in an adjust the dead\ntimer or adjust the hello timer and\n\n511\n00:24:35.920 --> 00:24:36.450\nget that set in.\n\n512\n00:24:36.450 --> 00:24:37.800\nAnd you certainly can do that.\n\n513\n00:24:37.800 --> 00:24:38.810\nThat does work.\n\n514\n00:24:38.810 --> 00:24:40.465\nBut it's not the right way to do it.\n\n515\n00:24:40.465 --> 00:24:41.940\n>> [LAUGH]\n>> The right way to do it\n\n516\n00:24:41.940 --> 00:24:43.950\nis just get the network types to match,\nright.\n\n517\n00:24:43.950 --> 00:24:46.820\nSo I can go to the headquarters and\nchange its network type.\n\n518\n00:24:46.820 --> 00:24:48.910\nOr I can go to the branches and\nchange theirs.\n\n519\n00:24:48.910 --> 00:24:52.560\nAnd in this scenario,\nthe headquarters is set to non-broadcast.\n\n520\n00:24:52.560 --> 00:24:57.490\nIt should actually be like a multi-point,\nright, one of these point-to-multipoints.\n\n521\n00:24:57.490 --> 00:25:01.460\nBut even if I get a point-to-multipoint,\nnotice that those hello and\n\n522\n00:25:01.460 --> 00:25:02.930\ndead intervals are still different.\n\n523\n00:25:02.930 --> 00:25:05.440\nSo I've really got two\nchoices to solve this one.\n\n524\n00:25:05.440 --> 00:25:08.440\nChoice number one,\nI could go to each of my branches and\n\n525\n00:25:08.440 --> 00:25:10.870\nI could set them to non-broadcast also.\n\n526\n00:25:10.870 --> 00:25:12.940\nAnd if I set them to non-broadcast,\n\n527\n00:25:12.940 --> 00:25:16.610\nI can then statically define headquarters\nas a neighbor and I'm in business.\n\n528\n00:25:16.610 --> 00:25:18.710\nOkay?\nThat's one solution.\n\n529\n00:25:18.710 --> 00:25:21.000\nIf broadcasts are allowed\non the network though,\n\n530\n00:25:21.000 --> 00:25:23.300\nI could just set them\nto point-to-multipoint.\n\n531\n00:25:23.300 --> 00:25:26.880\nIf I set headquarters and\nall the branches to point-to-multpoint,\n\n532\n00:25:26.880 --> 00:25:29.690\nthen they'll multicast and I don't\nhave to statically define my neighbor.\n\n533\n00:25:29.690 --> 00:25:32.460\nBut usually it's broadcasts being\nblocked that kinda got us in\n\n534\n00:25:32.460 --> 00:25:34.040\nthe situation in the first place.\n\n535\n00:25:34.040 --> 00:25:36.510\nI don't think I've ever been able\nto use that in production, but\n\n536\n00:25:36.510 --> 00:25:37.600\nin labs it worked great.\n\n537\n00:25:37.600 --> 00:25:38.990\nSo you can go that route.\n\n538\n00:25:38.990 --> 00:25:42.740\nBut the easiest solution really would\nbe move everyone non-broadcast, and\n\n539\n00:25:42.740 --> 00:25:43.726\nstatically define it there.\n\n540\n00:25:43.726 --> 00:25:45.880\nAll right, and\nthen we could even go further and\n\n541\n00:25:45.880 --> 00:25:49.420\nsay point-to-multipoint non-broadcast,\nbut here we're just right back in\n\n542\n00:25:49.420 --> 00:25:52.350\nthe situation of having to manually,\nstatically define things.\n\n543\n00:25:52.350 --> 00:25:54.890\nSo there's not really a whole\nheck of a lot of difference here\n\n544\n00:25:54.890 --> 00:25:59.040\nbetween going non-broadcast and\npoint-to-multipoint non-broadcast.\n\n545\n00:25:59.040 --> 00:26:02.660\nI might choose to leave headquarters at\npoint-to-multipoint non-broadcast, and\n\n546\n00:26:02.660 --> 00:26:05.400\nmove the branches over to non-broadcast,\nor whatever.\n\n547\n00:26:05.400 --> 00:26:08.950\nBut as long as I can get them to match,\nthe adjacency should come up, right?\n\n548\n00:26:08.950 --> 00:26:09.730\nSo what I'm gonna do,\n\n549\n00:26:09.730 --> 00:26:14.740\nis I'm gonna take my, well my headquarters\nis already in non-broadcast mode, right?\n\n550\n00:26:14.740 --> 00:26:16.440\nAnd I've manually defined my neighbor.\n\n551\n00:26:16.440 --> 00:26:19.340\nSo I'll just move the branches\nin non-broadcast mode and\n\n552\n00:26:19.340 --> 00:26:20.660\nmanually define the neighbors there too.\n\n553\n00:26:20.660 --> 00:26:24.030\nThat will probably be the easiest\nsolution for me, all right?\n\n554\n00:26:24.030 --> 00:26:28.330\nSo if I come over here and jump,\nwell let me undo all my debug.\n\n555\n00:26:28.330 --> 00:26:30.610\nThere we go.\n\n556\n00:26:30.610 --> 00:26:31.535\nSo I'll turn the debugging off.\n\n557\n00:26:31.535 --> 00:26:32.740\nAnd I'm gonna jump over to branch two.\n\n558\n00:26:32.740 --> 00:26:36.170\nNow branch two,\nif I take a look at its OSPF neighbors,\n\n559\n00:26:36.170 --> 00:26:37.900\nit doesn't have anybody, right?\n\n560\n00:26:37.900 --> 00:26:43.650\nAnd what I'm gonna do is I'm\ngonna get into its interface,\n\n561\n00:26:43.650 --> 00:26:46.540\nand I'm gonna tell it\nwhat network mode to use.\n\n562\n00:26:46.540 --> 00:26:50.810\nSo on a per-interface basis we can\noverride what network it's gonna use, and\n\n563\n00:26:50.810 --> 00:26:52.040\nwe do that with a real simple command.\n\n564\n00:26:52.040 --> 00:26:56.842\nWe just say ip ospf, and then network,\nand then, actually I thought it was\n\n565\n00:26:56.842 --> 00:27:00.742\nnetwork dash type,\nI guess it was just network, all right.\n\n566\n00:27:00.742 --> 00:27:05.330\nSo ip ospf network, and\nthen which type we want.\n\n567\n00:27:05.330 --> 00:27:08.348\nAnd right there I've got broadcast,\nnon-broadcast, point-to-multipoint,\n\n568\n00:27:08.348 --> 00:27:09.540\npoint-to-point.\n\n569\n00:27:09.540 --> 00:27:10.780\nAnd we can define that.\n\n570\n00:27:10.780 --> 00:27:14.275\nAnd if I choose point-to-multipoint\nthen there's another option I can add\n\n571\n00:27:14.275 --> 00:27:15.790\nafter that for non-broadcast.\n\n572\n00:27:15.790 --> 00:27:20.386\nBut, in my case,\nI'm gonna make this a non-broadcast.\n\n573\n00:27:20.386 --> 00:27:21.025\nWhoops.\n\n574\n00:27:21.025 --> 00:27:22.850\nWhich I'm gonna try and spell right.\n\n575\n00:27:22.850 --> 00:27:28.270\nAnd then I'm gonna jump into ospf\n1 where I'll define my neighbor.\n\n576\n00:27:28.270 --> 00:27:31.310\nAnd my neighbor is headquarters,\nwhich I think is .10.\n\n577\n00:27:31.310 --> 00:27:32.670\nLet me go verify that real quick.\n\n578\n00:27:34.470 --> 00:27:35.450\nAnd it, oh, it's .9.\n\n579\n00:27:35.450 --> 00:27:38.690\nI'm about to map to myself,\nis what I'm about to do.\n\n580\n00:27:38.690 --> 00:27:39.797\nSo, I'm going to point that to .9.\n\n581\n00:27:39.797 --> 00:27:43.023\nAnd so now, I should be in\nthe same mode as headquarters, and\n\n582\n00:27:43.023 --> 00:27:45.970\nI've statically defined my neighbor.\n\n583\n00:27:45.970 --> 00:27:48.070\nBut the network's gotten kind\nof messed up at this point, so\n\n584\n00:27:48.070 --> 00:27:50.310\nit'll take a moment to\nkind of flush that out.\n\n585\n00:27:50.310 --> 00:27:51.070\nSo while I'm waiting on that,\n\n586\n00:27:51.070 --> 00:27:54.820\nI'm going to jump on over to branch\ntwo where I'll do the same thing, and\n\n587\n00:27:54.820 --> 00:27:56.500\nget that set the same way.\n\n588\n00:27:56.500 --> 00:27:59.120\nSo, oops, well, that was right.\n\n589\n00:27:59.120 --> 00:28:02.200\nGot to get in the right interface,\nthat's going to make a difference, too.\n\n590\n00:28:02.200 --> 00:28:05.100\nSo I'm just gonna come in here and\ndefine that network type, and\n\n591\n00:28:05.100 --> 00:28:09.530\nset that one to non-broadcast,\nand then we'll get into ospf 1.\n\n592\n00:28:09.530 --> 00:28:12.420\nNow here's where there can be\na little bit of guesswork involved.\n\n593\n00:28:12.420 --> 00:28:15.650\nSometimes you don't know what your\nframe relay network supports.\n\n594\n00:28:15.650 --> 00:28:19.930\nYou don't know if it supports reverse\nARP or broadcast or whatever.\n\n595\n00:28:19.930 --> 00:28:22.800\nAnd so you might have to cycle through\na few different modes before you kinda\n\n596\n00:28:22.800 --> 00:28:25.660\nhit that sweet spot and\nactually get it configured properly.\n\n597\n00:28:25.660 --> 00:28:29.120\nBut in my case,\nit should just be as simple as this.\n\n598\n00:28:29.120 --> 00:28:32.250\nAnd we'll get that put in place.\n\n599\n00:28:32.250 --> 00:28:35.320\nAnd I'm just gonna make sure I can ping\nthat IP to make sure I'm getting that\n\n600\n00:28:35.320 --> 00:28:36.200\nright, and I do.\n\n601\n00:28:36.200 --> 00:28:36.870\nOkay.\n\n602\n00:28:36.870 --> 00:28:39.430\nAnd in headquarters, I'll make sure\nI've got my neighbor still defined.\n\n603\n00:28:41.270 --> 00:28:43.870\nAnd make sure that is there.\n\n604\n00:28:45.360 --> 00:28:46.180\nThere we go.\n\n605\n00:28:46.180 --> 00:28:50.040\nSo it's pointing to .10 and .11,\nso we should be good on that one.\n\n606\n00:28:50.040 --> 00:28:51.690\nAnd we'll make sure we've\ngot our connectivity.\n\n607\n00:28:52.990 --> 00:28:54.620\nConnectivity is always the big challenge,\nright.\n\n608\n00:28:54.620 --> 00:28:56.600\nCan you actually even\nget to the other ones?\n\n609\n00:28:56.600 --> 00:29:01.330\nNow at this point,\nwe should be seeing those come up.\n\n610\n00:29:01.330 --> 00:29:06.590\nMy problem is actually there,\nI saw those old checks that were going on.\n\n611\n00:29:06.590 --> 00:29:08.430\nYou kinda have to wait for\nthose to time out.\n\n612\n00:29:08.430 --> 00:29:09.580\nSo if you look at this,\n\n613\n00:29:09.580 --> 00:29:13.100\nsee how I've got this first one\nas an ATTEMPT/DROTHER still.\n\n614\n00:29:13.100 --> 00:29:16.340\nBut the next one is in EXSTART/BDR, right?\n\n615\n00:29:16.340 --> 00:29:19.520\nSo it's already done an election and\nit's starting to do the exchange.\n\n616\n00:29:19.520 --> 00:29:21.640\nSo it's actually moving forward\nwith that relationship,\n\n617\n00:29:21.640 --> 00:29:24.230\nso we just kind of have to wait and\nit'll sort itself out.\n\n618\n00:29:24.230 --> 00:29:29.080\nOr you can flush your OSPF process, but\nthere we go, I see that one just finished.\n\n619\n00:29:29.080 --> 00:29:31.790\nAnd the first one's still\nkinda churning along there.\n\n620\n00:29:31.790 --> 00:29:33.690\nBut given enough time\nit'll clear itself out.\n\n621\n00:29:33.690 --> 00:29:38.330\nI see I do have that neighbor which is,\nwho joined up first, branch two.\n\n622\n00:29:38.330 --> 00:29:42.240\nSo branch two was the first one I did, so\nit makes sense that it would finish first.\n\n623\n00:29:42.240 --> 00:29:44.790\nAnd if I take a look at its neighbors,\nI've now got a neighbor.\n\n624\n00:29:44.790 --> 00:29:46.440\nI'm fully up, I'm communicating.\n\n625\n00:29:46.440 --> 00:29:50.310\nIt was just a matter of making those\nnetwork types match, all right.\n\n626\n00:29:50.310 --> 00:29:53.440\nSo on an Ethernet network\non a point-to-point\n\n627\n00:29:53.440 --> 00:29:55.828\nserial network we don't normally\nhave to worry about this, right.\n\n628\n00:29:55.828 --> 00:29:58.928\nThey detect properly,\nthey join up and that's it.\n\n629\n00:29:58.928 --> 00:30:02.700\nBut on Frame Relay, on MPLS, well, MPLS,\nit might be an Ethernet network and\n\n630\n00:30:02.700 --> 00:30:04.220\nthen you don't have to worry about it.\n\n631\n00:30:04.220 --> 00:30:05.910\nBut if it's MPLS over Frame Relay or\n\n632\n00:30:05.910 --> 00:30:08.530\nsomething like that then you\nare gonna have to worry about this.\n\n633\n00:30:08.530 --> 00:30:11.310\nYou just need to look at the two ends,\nand figure out what\n\n634\n00:30:11.310 --> 00:30:15.020\nnetwork type is gonna match for you to\nget that right, and get it put in place.\n\n635\n00:30:15.020 --> 00:30:17.010\nAnd you've really just got five choices,\nright?\n\n636\n00:30:17.010 --> 00:30:19.660\nEach one meeting the needs of kind\nof a slightly different scenario.\n\n637\n00:30:21.860 --> 00:30:22.420\n>> All right, Don.\n\n638\n00:30:22.420 --> 00:30:27.290\nSo that's OSPF network type that\nwe actually have to think about.\n\n639\n00:30:27.290 --> 00:30:30.699\nAnything else that we need to add in\njust for a bonus for our viewers?\n\n640\n00:30:30.699 --> 00:30:31.930\n>> [LAUGH]\n>> Well,\n\n641\n00:30:31.930 --> 00:30:35.260\nI guess it's worth mentioning that not all\nof these are industry standard, right.\n\n642\n00:30:35.260 --> 00:30:39.208\nSo some of these are Cisco proprietary,\nthe ones that are non-broadcast,\n\n643\n00:30:39.208 --> 00:30:42.150\nthose are the kind of like Cisco\nones that they created, but\n\n644\n00:30:42.150 --> 00:30:45.130\na lot of third-party\nvendors do support them.\n\n645\n00:30:45.130 --> 00:30:47.630\nSo just be aware that some\nmodes might not work there too,\n\n646\n00:30:47.630 --> 00:30:49.410\nand it doesn't hurt to just\nkind of go through and\n\n647\n00:30:49.410 --> 00:30:51.980\ntry each mode until you find the one\nthat works in your situation.\n\n648\n00:30:51.980 --> 00:30:55.650\nBut honestly if you can get on the phone\nwith your ISP you can ask them\n\n649\n00:30:55.650 --> 00:30:57.730\nhey do you guys support inverse ARP,\ndo you support broadcast?\n\n650\n00:30:57.730 --> 00:31:01.320\nThey can give you the answers and then you\nknow exactly which mode you need to pick.\n\n651\n00:31:01.320 --> 00:31:03.930\nSo definitely be aware of these for\nthe exam.\n\n652\n00:31:03.930 --> 00:31:06.850\nIn real life land, it's not so\nterribly critical but for the exam it is.\n\n653\n00:31:08.010 --> 00:31:11.470\n>> So in this episode,\nwe took a look at the configuration of\n\n654\n00:31:11.470 --> 00:31:15.470\nhow OSPF naturally can help us\nto find those network types.\n\n655\n00:31:15.470 --> 00:31:18.310\nBut we also showed you a way that\nyou can manually change that\n\n656\n00:31:18.310 --> 00:31:22.160\nto make sure that you can get your OSPF\nneighborships up and running as well.\n\n657\n00:31:22.160 --> 00:31:24.360\nSo, that's our show for today.\n\n658\n00:31:24.360 --> 00:31:25.700\nI've been your host, Ronnie Wong.\n\n659\n00:31:25.700 --> 00:31:26.210\n>> And I'm Don Pezet.\n\n660\n00:31:26.210 --> 00:31:27.718\n>> And we'll see you next time.\n\n661\n00:31:27.718 --> 00:31:34.010\n[MUSIC]\n\n",
          "vimeoId": "137632158"
        },
        {
          "description": "In OSPF, Link State Advertisements (LSAs) are the way in which routers exchange information between each other. Viewers will hear about routing information that is exchanged in OSPF and the 11 different types of LSAs one might see inside of OSPF.",
          "length": "1697",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/ccnproute/cisco-ccnproute300101-3-26b-ospf_lsa_types-082815-1.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/ccnproute/cisco-ccnproute300101-3-26b-ospf_lsa_types-082815-1-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/ccnproute/cisco-ccnproute300101-3-26b-ospf_lsa_types-082815-1-sm.jpg",
          "title": "OSPF LSA Types",
          "transcript": "WEBVTT\n\n1\n00:00:00.000 --> 00:00:10.429\n[MUSIC]\n\n2\n00:00:10.429 --> 00:00:14.700\nAll right, welcome to another\nawesome episode here on ITProTV.\n\n3\n00:00:14.700 --> 00:00:15.680\nI'm your host, Ronnie Wong.\n\n4\n00:00:15.680 --> 00:00:19.780\nToday we're gonna be taking\na look at CCNP route.\n\n5\n00:00:19.780 --> 00:00:23.280\nAnd to help us in our studies\nis gonna be Mr. Don Pezet.\n\n6\n00:00:23.280 --> 00:00:24.030\nHow's it going?\n\n7\n00:00:24.030 --> 00:00:25.280\n>> It is going great Ronnie.\n\n8\n00:00:25.280 --> 00:00:26.650\nGreat to be back on the show.\n\n9\n00:00:26.650 --> 00:00:29.150\nJumping back in to the world of OSPF.\n\n10\n00:00:29.150 --> 00:00:32.179\nI know we've started talking about some\nof the different characteristics of\n\n11\n00:00:32.179 --> 00:00:32.790\nareas in OSPF.\n\n12\n00:00:32.790 --> 00:00:35.220\nWe're going to continue\nthat on in this episode\n\n13\n00:00:35.220 --> 00:00:37.330\nas we start to talk about LSA types.\n\n14\n00:00:37.330 --> 00:00:43.480\nThis episode is going to focus right on\nthose Link State Advertisements or LSAs.\n\n15\n00:00:43.480 --> 00:00:45.060\nIf you've studied OSPF,\n\n16\n00:00:45.060 --> 00:00:49.830\nwhich you should have at this point,\nthen you've definitely heard of LSAs,\n\n17\n00:00:49.830 --> 00:00:52.610\nand if you've studied for this before,\nyou probably cringe a little bit cuz,\n\n18\n00:00:52.610 --> 00:00:57.235\nyou know, there's actually 11 different\ntypes of LSAs that are out there.\n\n19\n00:00:57.235 --> 00:00:58.680\nIt's quite the list.\n\n20\n00:00:58.680 --> 00:01:01.529\nAnd on the exam, you need to know them.\n\n21\n00:01:01.529 --> 00:01:03.305\nIt'd be great to know all 11.\n\n22\n00:01:03.305 --> 00:01:06.505\nRealistically, there's only four,\nmaybe five, that you're actually gonna see\n\n23\n00:01:06.505 --> 00:01:09.185\non the exams, so I'll show you\nguys which ones are important.\n\n24\n00:01:09.185 --> 00:01:11.655\nBut I wanna give you a run\ndown of all the different\n\n25\n00:01:11.655 --> 00:01:14.255\nLSA types that we're\ngonna see inside of OSPF.\n\n26\n00:01:14.255 --> 00:01:17.155\nNow, let's start a little\nmore basic than that though,\n\n27\n00:01:17.155 --> 00:01:18.845\nlet's start with, what the heck is an LSA?\n\n28\n00:01:18.845 --> 00:01:22.357\nIf this is the first time you've\nheard somebody mention an LSA, well,\n\n29\n00:01:22.357 --> 00:01:23.068\nshame on you.\n\n30\n00:01:23.068 --> 00:01:23.848\n[LAUGH] You should of heard of it by now.\n\n31\n00:01:23.848 --> 00:01:26.466\nBut if you haven't, basically with OSPF,\n\n32\n00:01:26.466 --> 00:01:30.130\nour routers are running a dynamic\nrouter protocol, right?\n\n33\n00:01:30.130 --> 00:01:33.290\nThey talk to each other and\nthey exchange information.\n\n34\n00:01:33.290 --> 00:01:38.430\nOkay, well, the way they exchange\nthat information are with LSAs,\n\n35\n00:01:38.430 --> 00:01:40.590\nlink state advertisements.\n\n36\n00:01:40.590 --> 00:01:44.300\nOSPF is a link state protocol, and so\nit's exchanging that information, and\n\n37\n00:01:44.300 --> 00:01:46.210\nit's really important in OSPF.\n\n38\n00:01:46.210 --> 00:01:48.070\nRemember in EIGRP and RIP?\n\n39\n00:01:48.070 --> 00:01:49.560\nThose guys are distance vector.\n\n40\n00:01:49.560 --> 00:01:53.230\nA router only talks directly to\nit's neighbor and that's it.\n\n41\n00:01:53.230 --> 00:01:56.860\nBut in OSPF, a router doesn't\njust talk to its neighbor,\n\n42\n00:01:56.860 --> 00:02:01.150\na router talks to its neighbors,\nas well as everyone else in its area, and\n\n43\n00:02:01.150 --> 00:02:04.910\nthen the border routers flood that out to\nother areas throughout the environment.\n\n44\n00:02:04.910 --> 00:02:07.740\nLet me show you an example here,\nI've got a little diagram fired up.\n\n45\n00:02:07.740 --> 00:02:11.400\nAnd here I've got a simple network\ndrawn with multiple areas.\n\n46\n00:02:11.400 --> 00:02:16.220\nSo I've got Area 1, Area 0, Area 2,\nright, so it's kinda just divided up.\n\n47\n00:02:16.220 --> 00:02:17.772\nWell, this router here, router 7,\n\n48\n00:02:17.772 --> 00:02:20.940\nlet's say that it's connected to\na network over here somewhere.\n\n49\n00:02:20.940 --> 00:02:23.750\nAnd it wants to advertise\nthat network out.\n\n50\n00:02:23.750 --> 00:02:25.930\nWell, it's gonna multicast it out, and\n\n51\n00:02:25.930 --> 00:02:28.270\nit's gonna multicast it out\neach of its interfaces.\n\n52\n00:02:28.270 --> 00:02:31.530\nWell, that's gonna carry it\nto router 6 and router 5.\n\n53\n00:02:31.530 --> 00:02:34.690\nAnd, router 6 and router 5, they know\nabout some other networks down here.\n\n54\n00:02:34.690 --> 00:02:39.920\nAnd so, router 7 is gonna send it\nas an LSA over to router 4, right?\n\n55\n00:02:39.920 --> 00:02:42.130\nRouter 4 is a border router.\n\n56\n00:02:42.130 --> 00:02:45.070\nSo it's gonna receive that and\non router 7's behalf,\n\n57\n00:02:45.070 --> 00:02:47.050\nit's gonna forward that\nalong to the rest of them.\n\n58\n00:02:47.050 --> 00:02:49.520\nAnd that communication's gonna hit\nArea 0 which will jump to Area 1,\n\n59\n00:02:49.520 --> 00:02:51.560\nwhich will jump all\nthe way to the other end.\n\n60\n00:02:51.560 --> 00:02:54.030\nBut the important thing here is\nit's not like distance vector,\n\n61\n00:02:54.030 --> 00:02:56.030\nwhere they hide where it came from.\n\n62\n00:02:56.030 --> 00:02:57.960\nHere, we're forwarding it along.\n\n63\n00:02:57.960 --> 00:03:02.420\nSo the original LSA that was generated,\nin a lot of situations,\n\n64\n00:03:02.420 --> 00:03:04.360\ndoesn't really get modified,\nit gets sent along.\n\n65\n00:03:04.360 --> 00:03:07.490\nNow there are times where it gets\nmodified, we'll talk about those later.\n\n66\n00:03:07.490 --> 00:03:10.530\nBut it's gonna get passed along, and\nthat's pretty important to understand\n\n67\n00:03:10.530 --> 00:03:13.240\nwhat's going on in each stage of that\njourney as it moves along the way.\n\n68\n00:03:13.240 --> 00:03:16.260\nBut those link-state\nadvertisements are what do that.\n\n69\n00:03:16.260 --> 00:03:21.022\nWhen you initially find a router and start\nto exchange routes, you're sending LSA's.\n\n70\n00:03:21.022 --> 00:03:22.990\nYou're telling people about\nthe networks you have.\n\n71\n00:03:22.990 --> 00:03:25.310\nSo, they're really important.\n\n72\n00:03:25.310 --> 00:03:27.650\nThe challenge is how many\nof the things there are.\n\n73\n00:03:27.650 --> 00:03:28.630\nThere's a bunch.\n\n74\n00:03:28.630 --> 00:03:30.800\nTo help,\nI made a little table before the show.\n\n75\n00:03:30.800 --> 00:03:34.564\nHere's a table where I listed out\nthe 11 LSA's that are out there.\n\n76\n00:03:34.564 --> 00:03:36.967\nAnd if we run down the list here,\n\n77\n00:03:36.967 --> 00:03:41.890\nThe type 1 LSA is probably\nthe most important, all right?\n\n78\n00:03:41.890 --> 00:03:46.130\nWithin an area, a router is gonna\nadvertise its routes, right?\n\n79\n00:03:46.130 --> 00:03:48.980\nThe border router will handle\ngoing into other areas.\n\n80\n00:03:48.980 --> 00:03:51.250\nBut within an area,\neach router is responsible for\n\n81\n00:03:51.250 --> 00:03:52.710\nadvertising its own routes.\n\n82\n00:03:52.710 --> 00:03:56.160\nAnd it does that with Type 1 LSAs.\n\n83\n00:03:56.160 --> 00:03:59.686\nType 1 LSAs pass from that router\nto everyone else in the area.\n\n84\n00:03:59.686 --> 00:04:01.128\nSo if I go back to my diagram here,\n\n85\n00:04:01.128 --> 00:04:03.456\nI kind of highlighted what\na Type 1 LSA would be like.\n\n86\n00:04:03.456 --> 00:04:07.031\nHere, Router 1 is advertising\nsome network that it has, and\n\n87\n00:04:07.031 --> 00:04:10.710\nit's sending it as a Type 1 LSA\nover to Router 2 and Router 3.\n\n88\n00:04:10.710 --> 00:04:11.930\nAnd they receive it.\n\n89\n00:04:11.930 --> 00:04:14.740\nIf they didn't know about router 1, they\njust learned about router 1, didn't they?\n\n90\n00:04:14.740 --> 00:04:17.918\nSo now they know, hey, let's go and\nbuild an adjacency, if it's a direct link.\n\n91\n00:04:17.918 --> 00:04:21.030\nNow, router 3 is not going to build\nan adjacency with router 1 because\n\n92\n00:04:21.030 --> 00:04:22.095\nthey don't have a common link.\n\n93\n00:04:22.095 --> 00:04:25.980\nLike a distance vector protocol\nwhere you only see your neighbors.\n\n94\n00:04:25.980 --> 00:04:29.290\nIn OSPF you only build\nan adjacency to your neighbors.\n\n95\n00:04:29.290 --> 00:04:34.350\nBut when you send the type 1 LSA out,\nrouter 1 is aware of router 3.\n\n96\n00:04:34.350 --> 00:04:36.420\nThat's what different in distance vector.\n\n97\n00:04:36.420 --> 00:04:38.350\nSo when it sends the LSA out,\nit sends it to both.\n\n98\n00:04:38.350 --> 00:04:42.740\nEven though it's not directly connected to\nrouter 3, it sends the LSA to router 3.\n\n99\n00:04:42.740 --> 00:04:46.115\nSo that's a big departure from\nwhat we saw on distance vector.\n\n100\n00:04:46.115 --> 00:04:47.660\nSo, that's an example of a type 1,\n\n101\n00:04:47.660 --> 00:04:51.818\nbut notice how the type 1 stops\nright there at the area border.\n\n102\n00:04:51.818 --> 00:04:54.540\nType 1 LSAs stay within a particular area,\n\n103\n00:04:54.540 --> 00:04:58.220\nand they're designed to advertise\nthe existence of the router,\n\n104\n00:04:58.220 --> 00:05:02.760\nas well as the links that the router has,\nthe routes that it's aware of.\n\n105\n00:05:02.760 --> 00:05:05.267\nIt's advertising those out, and\nI shouldn't say the routes,\n\n106\n00:05:05.267 --> 00:05:06.920\nit's really is just the links.\n\n107\n00:05:06.920 --> 00:05:08.720\nLike, if router 1 is connected to,\n\n108\n00:05:08.720 --> 00:05:11.010\nwell, we'll say router 1 is\nconnected to three networks.\n\n109\n00:05:11.010 --> 00:05:13.150\nLet me add an extra one in here.\n\n110\n00:05:14.470 --> 00:05:18.830\nSo, let's say it's got some kind\nof internal network, you know,\n\n111\n00:05:18.830 --> 00:05:23.070\nmaybe like a 192.168.0.0/24,\nsomething like that, and\n\n112\n00:05:23.070 --> 00:05:28.200\nit's connected to that, and it wants to\nadvertise it into the environment, right?\n\n113\n00:05:28.200 --> 00:05:32.170\nWell, when it goes to do that,\nthere we go.\n\n114\n00:05:32.170 --> 00:05:34.390\nSo, it's got this nice\nnew internal network.\n\n115\n00:05:34.390 --> 00:05:37.770\nIt's directly plugged into that network,\nso that's a link that it has.\n\n116\n00:05:37.770 --> 00:05:39.630\nIt's gonna generate an LSA for that.\n\n117\n00:05:39.630 --> 00:05:44.120\nThis external network, if the external\nnetwork is being redistributed into OSPF,\n\n118\n00:05:44.120 --> 00:05:47.660\nor if it's actually being, participating\nin OSPF, which is not common, but\n\n119\n00:05:47.660 --> 00:05:50.350\nif it is, we're gonna generate\na link announcement for that.\n\n120\n00:05:50.350 --> 00:05:53.230\nAnd then this link between router one and\nrouter two, it's got a direct link for\n\n121\n00:05:53.230 --> 00:05:54.680\nthat, it's gonna announce that too.\n\n122\n00:05:54.680 --> 00:05:58.750\nSo we're gonna be generating three type\none LSAs for these three networks.\n\n123\n00:05:58.750 --> 00:06:00.570\nAnd we're gonna send them out.\n\n124\n00:06:00.570 --> 00:06:03.470\nNow, router 1 knows how\nto get to router 3.\n\n125\n00:06:03.470 --> 00:06:07.100\nIt's not gonna advertise that, because\nit just has this link, in other words,\n\n126\n00:06:07.100 --> 00:06:08.500\none step along the journey.\n\n127\n00:06:08.500 --> 00:06:12.040\nSo each router is gonna receive\nthese LSAs and then what does it do?\n\n128\n00:06:12.040 --> 00:06:15.460\nIt reassembles them into\nthe OSPF database, right?\n\n129\n00:06:15.460 --> 00:06:17.190\nIt builds a tree.\n\n130\n00:06:17.190 --> 00:06:20.360\nOpen Shortest Path First,\nOSPF, is all about\n\n131\n00:06:20.360 --> 00:06:23.340\nbuilding a picture of the network where\nyou're the center of the universe.\n\n132\n00:06:23.340 --> 00:06:27.210\nSo, Router 1 has a view of the network\nwhere it's the center of the universe.\n\n133\n00:06:27.210 --> 00:06:30.190\nAnd Router 3 has a view of the network\nwhere it's the center of the universe.\n\n134\n00:06:30.190 --> 00:06:31.510\nEverybody's database is a little bit\n\n135\n00:06:31.510 --> 00:06:33.240\ndifferent from the perspective\nthey look at it.\n\n136\n00:06:33.240 --> 00:06:36.250\nSo they just need to know,\nwhat are the routers out there?\n\n137\n00:06:36.250 --> 00:06:38.050\nAnd what links do each router have?\n\n138\n00:06:38.050 --> 00:06:40.870\nAnd we'll assemble that\ninto our own picture.\n\n139\n00:06:40.870 --> 00:06:45.850\nIf it knows the whole path, that starts\nto take away our decision making ability.\n\n140\n00:06:45.850 --> 00:06:49.660\nAnd OSPF's power is in its decision\nmaking, so we don't want that.\n\n141\n00:06:49.660 --> 00:06:50.980\nIt's just the direct link.\n\n142\n00:06:50.980 --> 00:06:55.340\nSo router 1 is gonna send out three type 1\nLSAs that advertise those different links.\n\n143\n00:06:55.340 --> 00:06:59.555\nAnd the other routers are gonna receive\nit, and that's gonna stay in this area.\n\n144\n00:06:59.555 --> 00:07:01.044\nAnd the reason that is,\n\n145\n00:07:01.044 --> 00:07:06.125\nis that traffic going between areas has\nto pass through a border router, right?\n\n146\n00:07:06.125 --> 00:07:09.280\nWe don't want people to try and\nconnect directly to router 1.\n\n147\n00:07:09.280 --> 00:07:10.440\nWe don't want that.\n\n148\n00:07:10.440 --> 00:07:12.320\nWe want them to go through\nthe border router.\n\n149\n00:07:12.320 --> 00:07:16.930\nSo the border router gathers all these\nadvertisements, and then turns them into\n\n150\n00:07:16.930 --> 00:07:20.460\na different type of LSA that it sends\nalong, which we'll see here in a moment.\n\n151\n00:07:20.460 --> 00:07:24.250\nSo type 1 LSA is really important cuz\nthat's where our networks come from.\n\n152\n00:07:24.250 --> 00:07:27.700\nIf you don't have type 1 LSAs, OSPF breaks\ndown, the whole thing's dead, right?\n\n153\n00:07:27.700 --> 00:07:29.920\nBut if we just had type 1 LSAs, and\n\n154\n00:07:29.920 --> 00:07:33.929\nthat was it, at least our individual area\nwould work, right, it would still work.\n\n155\n00:07:35.610 --> 00:07:37.650\nAll right,\nthe next type is the type 2 LSA.\n\n156\n00:07:37.650 --> 00:07:39.670\nAnd the type 2 LSA is the network LSA.\n\n157\n00:07:39.670 --> 00:07:42.190\nNow this one gets a little confusing cuz\nbased on the name you hear network and\n\n158\n00:07:42.190 --> 00:07:44.870\nyou're like,\noh this must be how we advertise networks.\n\n159\n00:07:44.870 --> 00:07:47.450\nNo, the type 1 LSAs carry that.\n\n160\n00:07:47.450 --> 00:07:51.326\nThe type 1 LSAs carry the router\nadvertisement and its links.\n\n161\n00:07:51.326 --> 00:07:56.446\nThe type 2 is an advertisement sent\nby your DR, your designated router.\n\n162\n00:07:56.446 --> 00:08:01.320\nOn a multi-access link where you've\ngot more than two OSPF routers.\n\n163\n00:08:01.320 --> 00:08:04.650\nOr I guess if it's multi-access,\neven if you had two, you'd have it, right?\n\n164\n00:08:04.650 --> 00:08:07.290\nSo on any multi-access\nnetwork like ethernet,\n\n165\n00:08:07.290 --> 00:08:08.630\nyou have to elect a DR and a BDR.\n\n166\n00:08:08.630 --> 00:08:12.890\nAnd when a new router comes up, it says,\nokay, what routers are out there?\n\n167\n00:08:12.890 --> 00:08:13.550\nWho's the DR?\n\n168\n00:08:13.550 --> 00:08:14.710\nWho's the BDR?\n\n169\n00:08:14.710 --> 00:08:18.560\nWell, what it does is it sits there and\nit listens for a Type 2 LSA.\n\n170\n00:08:19.860 --> 00:08:21.150\nIt's gonna listen to that Type 2 LSA.\n\n171\n00:08:21.150 --> 00:08:25.310\nIf it sees it, in that LSA it'll say,\nthis is the DR,\n\n172\n00:08:25.310 --> 00:08:28.760\nthis is the BDR, here's the other routers\nthat are out there that you can do\n\n173\n00:08:28.760 --> 00:08:32.260\na two-way state with, but\ndon't actually sync routes with them.\n\n174\n00:08:32.260 --> 00:08:34.240\nAnd this is the network, right?\n\n175\n00:08:34.240 --> 00:08:37.510\nAnd if we don't hear a Type 2 LSA,\nif we wait a period of time and\n\n176\n00:08:37.510 --> 00:08:42.100\ndon't hear it, then we need to initiate\nan election and maybe we become the DR.\n\n177\n00:08:42.100 --> 00:08:44.090\nMaybe we're the first\nrouter up on this link.\n\n178\n00:08:44.090 --> 00:08:46.290\nIt's gotta happen to somebody,\nright, somebody has to be first.\n\n179\n00:08:46.290 --> 00:08:48.740\nAnd so that's gonna happen and\nthat'll get elected.\n\n180\n00:08:48.740 --> 00:08:52.010\nSo, a Type 2 LSA is a little\nbit different right?\n\n181\n00:08:52.010 --> 00:08:55.110\nIf Router 1 is the DR.\n\n182\n00:08:55.110 --> 00:08:57.950\nThen it's gonna send that Type 2 LSA and\n\n183\n00:08:57.950 --> 00:09:02.420\nanybody's who's listening in that link or\nin that area will pick it up and hear it.\n\n184\n00:09:02.420 --> 00:09:08.180\nOkay, but if Router 1 is not the DR,\nlet's say Router 2 is the DR, right?\n\n185\n00:09:08.180 --> 00:09:12.210\nThen it's the one that's going to initiate\nthat and not the other one, right?\n\n186\n00:09:12.210 --> 00:09:19.570\nSo, what's gonna happen here is basically\nmy arrow here would turn around like that.\n\n187\n00:09:19.570 --> 00:09:21.130\nAnd this arrow would turn around.\n\n188\n00:09:21.130 --> 00:09:23.588\nAnd the Router 2 would generate the LSA.\n\n189\n00:09:23.588 --> 00:09:25.380\nAnd then it would be going up\nto Router 1 and Router 3 and\n\n190\n00:09:25.380 --> 00:09:26.910\nthey'd get that information.\n\n191\n00:09:26.910 --> 00:09:28.580\nThey'd be getting that Type 2 LSA.\n\n192\n00:09:28.580 --> 00:09:31.810\nSo these are used for\nannouncing who the DR, the BDR,\n\n193\n00:09:31.810 --> 00:09:34.690\nand the other routers on the network so\nit's all identification.\n\n194\n00:09:34.690 --> 00:09:40.070\nOkay, those two LSAs,\nremember that they stay within an area.\n\n195\n00:09:40.070 --> 00:09:43.930\nType 1 and\nType 2 LSAs do not cross area boundaries.\n\n196\n00:09:43.930 --> 00:09:49.380\nType 3 LSAs are the first ones\nthat actually cross boundaries.\n\n197\n00:09:49.380 --> 00:09:53.020\nAll right, Type 3 LSAs are summary LSAs,\nand this can be a little misleading.\n\n198\n00:09:53.020 --> 00:09:55.220\nCuz I know we talked about route\nsummarization in some episodes,\n\n199\n00:09:55.220 --> 00:09:57.030\nhow you can take more than one route and\n\n200\n00:09:57.030 --> 00:09:59.710\ncollapse them down into a single route,\nright.\n\n201\n00:09:59.710 --> 00:10:02.460\nAnd we know that OSPF doesn't\ndo that automatically.\n\n202\n00:10:02.460 --> 00:10:05.140\nWe have to manually do summarization.\n\n203\n00:10:05.140 --> 00:10:06.720\nSo if I'm on a network, and\n\n204\n00:10:06.720 --> 00:10:11.674\nI haven't manually summarized anywhere,\nam I gonna have Type 3 LSAs?\n\n205\n00:10:11.674 --> 00:10:15.020\nWell, yes, you are, absolutely.\n\n206\n00:10:15.020 --> 00:10:16.480\nNot within your area, right,\n\n207\n00:10:16.480 --> 00:10:20.292\ncuz you're not manually summarizing,\nbut where do you summarize in OSPF?\n\n208\n00:10:20.292 --> 00:10:24.390\nYeah, you summarize on the borders,\nright, in between.\n\n209\n00:10:24.390 --> 00:10:27.770\nYou can't summarize on Router 2.\n\n210\n00:10:27.770 --> 00:10:29.730\nYou can't summarize on Router 1.\n\n211\n00:10:29.730 --> 00:10:30.858\nThey're not borders, right.\n\n212\n00:10:30.858 --> 00:10:33.930\nWell, Router 1 is kind of an autonomous\nsystem border router, right?\n\n213\n00:10:33.930 --> 00:10:37.690\nBut if we looked over here in Area 2,\nRouter 5, Router 6, Router 7.\n\n214\n00:10:37.690 --> 00:10:40.000\nThey're entirely in Area 2.\n\n215\n00:10:40.000 --> 00:10:42.540\nSo I can't do summarization there,\nall right?\n\n216\n00:10:42.540 --> 00:10:44.090\nRouter 4 is a border router, though.\n\n217\n00:10:44.090 --> 00:10:45.540\nIt can summarize.\n\n218\n00:10:45.540 --> 00:10:48.000\nAnd while OSPF doesn't\ndo automatic summaries,\n\n219\n00:10:49.150 --> 00:10:54.960\nwhen a border router advertises a route,\nit always advertises it as a summary.\n\n220\n00:10:54.960 --> 00:10:56.280\nEven if it's the original route,\n\n221\n00:10:56.280 --> 00:10:58.830\nit's still advertised as that,\nwhich is kinda weird, right?\n\n222\n00:10:58.830 --> 00:11:04.550\nSo let's say that, let's jump\nback to my original example here.\n\n223\n00:11:04.550 --> 00:11:08.750\nLet's take this network,\nand I'm gonna jump over to,\n\n224\n00:11:08.750 --> 00:11:11.920\nactually I kind of have it right here,\nso we'll just use this example.\n\n225\n00:11:11.920 --> 00:11:14.173\nSo Router 2 generates a route, and\n\n226\n00:11:14.173 --> 00:11:18.989\nlet's say that that route is\nthe 192.168.0.0 network, okay.\n\n227\n00:11:18.989 --> 00:11:21.870\nIt advertises it as a Type 1 LSA.\n\n228\n00:11:21.870 --> 00:11:24.110\nThe Type 1 LSA hits the border and\n\n229\n00:11:24.110 --> 00:11:27.170\nthe border says, okay,\ndo I have a summary command for this?\n\n230\n00:11:27.170 --> 00:11:28.790\nIf I have a summary command,\nI need to apply it and\n\n231\n00:11:28.790 --> 00:11:32.420\nI need to advertise the summary and\ndon't advertise the original network.\n\n232\n00:11:32.420 --> 00:11:36.160\nBut if it looks and it says, okay, I don't\nhave a summary for it, it says well,\n\n233\n00:11:36.160 --> 00:11:37.170\nthat's no big deal.\n\n234\n00:11:37.170 --> 00:11:41.140\nI'll just take the original network and\nadvertise it as if it was a summary.\n\n235\n00:11:41.140 --> 00:11:44.716\nSo the original network\nmight be 192.168.00/24.\n\n236\n00:11:44.716 --> 00:11:49.530\nAnd now I'll advertise\na summary of 192.168.00/24.\n\n237\n00:11:49.530 --> 00:11:51.191\nAll right now, why do that?\n\n238\n00:11:51.191 --> 00:11:53.651\nWhy treat it as a summary if\nit's not a summary, right?\n\n239\n00:11:53.651 --> 00:11:55.560\nIt's counterintuitive.\n\n240\n00:11:55.560 --> 00:11:58.690\nWell, the reason it does it, is so\nthat when the network travels to the other\n\n241\n00:11:58.690 --> 00:12:03.400\nside, this other area will know\nthat it's not an internal route.\n\n242\n00:12:03.400 --> 00:12:05.680\nIt's not a route from inside that area.\n\n243\n00:12:05.680 --> 00:12:07.540\nIf it left it alone, right?\n\n244\n00:12:07.540 --> 00:12:10.790\nWhen you advertise a route in OSPF,\nwe have different route types, right?\n\n245\n00:12:10.790 --> 00:12:14.350\nYou have the O route which is just\na regular OSPF route that's from\n\n246\n00:12:14.350 --> 00:12:15.890\ninside your area.\n\n247\n00:12:15.890 --> 00:12:18.079\nAnd then you have OIA routes, right.\n\n248\n00:12:18.079 --> 00:12:21.310\nOIA, that means OSPF Inter Area.\n\n249\n00:12:21.310 --> 00:12:22.780\nIt came from another area.\n\n250\n00:12:22.780 --> 00:12:28.960\nWell, if I'm getting Type 1 LSAs, how do\nI know if they're from my area or not?\n\n251\n00:12:28.960 --> 00:12:31.540\nWell, if they're Type 1,\nI know they're from my area.\n\n252\n00:12:31.540 --> 00:12:34.200\nIf they're Type 3,\nI know they're from another area.\n\n253\n00:12:34.200 --> 00:12:37.360\nBecause you can only generate\nsummaries on a border.\n\n254\n00:12:37.360 --> 00:12:40.040\nSo, if I get a Type 3,\nI know it came from a border.\n\n255\n00:12:40.040 --> 00:12:42.590\nI might not have gotten it\ndirectly from the border.\n\n256\n00:12:42.590 --> 00:12:44.660\nI might've gotten it through\none of my neighbors, right?\n\n257\n00:12:44.660 --> 00:12:47.870\nRouter 7 is gonna get everything\nthrough Router 5 and Router 6.\n\n258\n00:12:47.870 --> 00:12:51.630\nBut if it sees a Type 1,\nit knows it's from inside Area 2.\n\n259\n00:12:51.630 --> 00:12:55.300\nIf it sees a Type 3,\nit knows it's from another area, and so\n\n260\n00:12:55.300 --> 00:12:56.300\nit flags it and says oh, hey.\n\n261\n00:12:56.300 --> 00:12:58.030\nThat's how it knows the difference, right?\n\n262\n00:12:58.030 --> 00:12:59.760\nThat's why it changes it.\n\n263\n00:12:59.760 --> 00:13:05.390\nSo those Type 1s,\nwhen Router 2 originates this network,\n\n264\n00:13:05.390 --> 00:13:09.160\nthe network gets advertised,\nit goes to the border router.\n\n265\n00:13:09.160 --> 00:13:12.080\nIf the border router doesn't\nhave a summary command,\n\n266\n00:13:12.080 --> 00:13:14.570\nit just says I'm gonna change\nthat from a Type 1 to a Type 3 so\n\n267\n00:13:14.570 --> 00:13:17.250\nit looks like a summary, and\nI'm gonna send it along.\n\n268\n00:13:17.250 --> 00:13:21.170\nAnd now it passes along as a Type\n3 all the way over, and so\n\n269\n00:13:21.170 --> 00:13:26.630\nby the time it gets all the way over\nhere to Router 7, it's a Type 3 LSA.\n\n270\n00:13:26.630 --> 00:13:30.731\nAnd it learns that route from Router 2,\nit learns that route, and\n\n271\n00:13:30.731 --> 00:13:33.676\nit knows that it's\ninterarea because of that.\n\n272\n00:13:33.676 --> 00:13:35.175\nSo, kind of weird, right?\n\n273\n00:13:35.175 --> 00:13:39.180\nRouters don't originate Type 3 LSAs.\n\n274\n00:13:39.180 --> 00:13:42.920\nBorder routers do, okay,\nABRs, Area Border Routers.\n\n275\n00:13:42.920 --> 00:13:45.635\nThey're the ones who\noriginate Type 3 LSAs.\n\n276\n00:13:45.635 --> 00:13:49.480\nAnd if they have a summary command\nentered in then they're actually\n\n277\n00:13:49.480 --> 00:13:51.220\noriginating as they're building, right.\n\n278\n00:13:51.220 --> 00:13:54.730\nBut if they don't have a summary command,\nif they're not doing route summarization,\n\n279\n00:13:54.730 --> 00:13:58.050\nthen they're just taking a Type\n1 originated by someone else and\n\n280\n00:13:58.050 --> 00:13:59.570\nflagging it as a Type 3.\n\n281\n00:13:59.570 --> 00:14:03.744\nSo they didn't truly originate it even\nthough it's gonna show as coming back to\n\n282\n00:14:03.744 --> 00:14:04.565\nthem, right?\n\n283\n00:14:04.565 --> 00:14:06.273\nThat's what a Type 3 LSA is.\n\n284\n00:14:06.273 --> 00:14:09.174\nSo don't be confused by that name,\ncuz it's confusing, right?\n\n285\n00:14:09.174 --> 00:14:13.310\n[LAUGH] Don't be confused, this is\na stupid thing to tell somebody as advice.\n\n286\n00:14:13.310 --> 00:14:16.600\nYou could be confused, but\nin this situation you don't want to be.\n\n287\n00:14:16.600 --> 00:14:20.370\nIt's just called a summary, right,\nbut understand that even your\n\n288\n00:14:20.370 --> 00:14:24.340\nregular networks will appear as summaries\nwhen they pass through a border router,\n\n289\n00:14:24.340 --> 00:14:27.490\nwhether they were actually\nmanually summarized or not, right?\n\n290\n00:14:27.490 --> 00:14:28.500\nBut they're called a summary.\n\n291\n00:14:28.500 --> 00:14:31.180\nSo that's a Type 3 LSA, all right.\n\n292\n00:14:31.180 --> 00:14:36.170\nNow, those three network types, or\nLSA types, if you have a single area,\n\n293\n00:14:36.170 --> 00:14:40.846\nif I just have one area,\nam I ever gonna see a Type 3 LSA?\n\n294\n00:14:40.846 --> 00:14:44.910\nNo, and that's because I only get\nthose LSAs from a border router.\n\n295\n00:14:44.910 --> 00:14:47.830\nIf I only have one area,\nwhat passes through the border router?\n\n296\n00:14:47.830 --> 00:14:50.130\nNothing, right?\nThere's no other areas to get to.\n\n297\n00:14:50.130 --> 00:14:52.347\nSo I'm not gonna see Type 3 LSAs.\n\n298\n00:14:52.347 --> 00:14:57.060\nBut I might have, not an ABR, but an ASBR.\n\n299\n00:14:57.060 --> 00:15:00.527\nNot an Area Border Router, but\nan Autonomous System Border Router,\n\n300\n00:15:00.527 --> 00:15:03.940\nsomebody sitting in between me and\nsome external network.\n\n301\n00:15:03.940 --> 00:15:05.570\nThat's a different story, right?\n\n302\n00:15:05.570 --> 00:15:07.580\nThose routes are gonna come in.\n\n303\n00:15:07.580 --> 00:15:11.250\nAnd now I am getting those, and those\nget treated like summaries too, right,\n\n304\n00:15:11.250 --> 00:15:14.040\nthat's how I know they're not\nfrom inside of my area, right?\n\n305\n00:15:14.040 --> 00:15:18.470\nBut we need to identify them as external\nand not coming from another area.\n\n306\n00:15:18.470 --> 00:15:24.330\nAnd so the way it handles that is ASBRs\nwill flag theirs as Type 4, right?\n\n307\n00:15:24.330 --> 00:15:28.120\nSo when I take a look at my example here,\n\n308\n00:15:28.120 --> 00:15:31.310\nRouter 1 is connected to\nan external network, all right.\n\n309\n00:15:31.310 --> 00:15:33.917\nIt can receive that network and\nadvertise it in, and\n\n310\n00:15:33.917 --> 00:15:37.351\nsee how it's a Type 1 kind of being\nadvertised in, it's a network,\n\n311\n00:15:37.351 --> 00:15:41.226\nit's a link right here being advertised\nin, but it's coming from outside.\n\n312\n00:15:41.226 --> 00:15:43.283\nIt's being redistributed and so\n\n313\n00:15:43.283 --> 00:15:47.624\nyour border router is going to\nadvertise that out as a Type 4, right?\n\n314\n00:15:47.624 --> 00:15:50.266\nThis area knows that it\nis actually internal.\n\n315\n00:15:50.266 --> 00:15:53.764\nIt's connected directly to this area,\nbut the other areas don't know that,\n\n316\n00:15:53.764 --> 00:15:56.096\nand they don't wanna see\nit as just a regular route,\n\n317\n00:15:56.096 --> 00:15:58.323\nthey need to be able to flag\nit as an OE1 or an OE2.\n\n318\n00:15:58.323 --> 00:16:00.529\nAnd so what happens, and\nI've actually got this mislabeled.\n\n319\n00:16:00.529 --> 00:16:06.380\nIs that way back here, it is actually\na type 4 from the very beginning.\n\n320\n00:16:06.380 --> 00:16:07.210\nThere we go.\n\n321\n00:16:07.210 --> 00:16:09.270\nSo Router 1 advertises as a type 4.\n\n322\n00:16:09.270 --> 00:16:12.240\nEverybody knows that that\nis an external route.\n\n323\n00:16:12.240 --> 00:16:12.750\nOkay?\n\n324\n00:16:12.750 --> 00:16:18.833\nAnd this is where we see those OE1 and\nOE2 routes that are OSPF external.\n\n325\n00:16:18.833 --> 00:16:21.220\nOSPF External 1, and OSPF External 1.\n\n326\n00:16:21.220 --> 00:16:23.280\nAnd we will talk about those\nmore in another episode.\n\n327\n00:16:23.280 --> 00:16:25.800\nThe one and the two is just\nhow we measure the metric, but\n\n328\n00:16:25.800 --> 00:16:26.826\notherwise the routes are the same.\n\n329\n00:16:26.826 --> 00:16:28.167\nThey're both type four LSAs.\n\n330\n00:16:28.167 --> 00:16:33.163\nSo, those OIA inner area,\nthose are type three LSAs and\n\n331\n00:16:33.163 --> 00:16:37.537\nOE, OE1, OE2, those are type 4 LSAs right?\n\n332\n00:16:37.537 --> 00:16:39.634\nThis is how your routers know\nhow to flag those routes,\n\n333\n00:16:39.634 --> 00:16:41.743\ncuz otherwise a route is just\na route it doesn't know.\n\n334\n00:16:41.743 --> 00:16:44.114\nThis is how it knows,\nby what LSA type it's.\n\n335\n00:16:44.114 --> 00:16:45.111\nThat's why these are important.\n\n336\n00:16:48.063 --> 00:16:50.440\nAll right, the type 5 LSAs, right?\n\n337\n00:16:50.440 --> 00:16:53.550\nContain routes originating\nfrom outside the AS.\n\n338\n00:16:53.550 --> 00:16:54.980\nSo, if I jump over here to a type 5,\n\n339\n00:16:54.980 --> 00:16:58.250\nnotice a route's coming in from\noutside and being brought in.\n\n340\n00:16:58.250 --> 00:17:02.050\nNow I just mentioned type 4s, right?\n\n341\n00:17:02.050 --> 00:17:05.810\nAnd how type 4s were containing\nroutes that ASBRs in the area.\n\n342\n00:17:05.810 --> 00:17:09.380\nAnd the type 5s are the external\nroutes themselves.\n\n343\n00:17:09.380 --> 00:17:11.043\nSo, that gets confusing, right?\n\n344\n00:17:11.043 --> 00:17:12.460\nWell what's the difference there?\n\n345\n00:17:12.460 --> 00:17:15.281\nWell, when we advertise out a type 4,\n\n346\n00:17:15.281 --> 00:17:21.420\nwhat you're actually doing is advertising\nout a route to the ASBR itself.\n\n347\n00:17:21.420 --> 00:17:24.408\nSo I'm saying, here's how you get to me.\n\n348\n00:17:24.408 --> 00:17:27.140\nIf you wanna get to this other network,\nyou gotta get to me first.\n\n349\n00:17:27.140 --> 00:17:28.150\nHere's how you get to me.\n\n350\n00:17:28.150 --> 00:17:30.330\nHere's the type four LSA, right?\n\n351\n00:17:30.330 --> 00:17:32.970\nThe type 5 is the route itself.\n\n352\n00:17:34.100 --> 00:17:38.000\nHere's an external network that you\ncan get to if you come through me.\n\n353\n00:17:38.000 --> 00:17:42.100\nSo that OE1 and OE2, by the time we\nreceive it is actually that type 5.\n\n354\n00:17:42.100 --> 00:17:45.350\nThe way we get there is through the ASBR,\nwhich is the Type 4.\n\n355\n00:17:45.350 --> 00:17:46.870\nSo the two work together.\n\n356\n00:17:46.870 --> 00:17:49.310\nYou kind of have to have\nboth of them in place.\n\n357\n00:17:49.310 --> 00:17:51.300\nSo they're working\ntogether to create that.\n\n358\n00:17:51.300 --> 00:17:55.400\nBut that Type 5, see the Type 5 kind\nof spreading across the network there,\n\n359\n00:17:55.400 --> 00:17:57.030\nspreading out to the other side.\n\n360\n00:17:57.030 --> 00:18:02.130\nNow, to get to the ASBR, well,\nwe follow that Type 4 to get back.\n\n361\n00:18:02.130 --> 00:18:03.680\nRight, these guys, out here, need that.\n\n362\n00:18:03.680 --> 00:18:07.690\nThe guys that are internally, this is why\nI had that slide mislabeled a moment ago.\n\n363\n00:18:07.690 --> 00:18:10.230\nBut internally,\nif we want to get to that router,\n\n364\n00:18:10.230 --> 00:18:11.750\nwe don't need the Type 4 or Type 5.\n\n365\n00:18:11.750 --> 00:18:14.230\nThe router's in our area,\nso we can use the Type 1.\n\n366\n00:18:14.230 --> 00:18:16.730\nThis guy is sending Type 1s also, right?\n\n367\n00:18:16.730 --> 00:18:18.730\nSo like, back here, I guess it\nwould be more accurate if I put,\n\n368\n00:18:18.730 --> 00:18:22.320\nit was sending Type 4s and Type 1s,\ncuz it is, it's sending them both.\n\n369\n00:18:22.320 --> 00:18:23.790\nBut the Type 1s just hit this area.\n\n370\n00:18:23.790 --> 00:18:26.070\nSo, that's part of what's going on there.\n\n371\n00:18:26.070 --> 00:18:27.033\nAnd those Type 4 and\n\n372\n00:18:27.033 --> 00:18:30.880\nType 5s, they work together to\ngive us that connectivity, right?\n\n373\n00:18:30.880 --> 00:18:34.800\nSo, the Type 4 gets us to the ASBR\nthat helps us reach that network.\n\n374\n00:18:34.800 --> 00:18:36.650\nThe Type 5 tells us about the network.\n\n375\n00:18:38.150 --> 00:18:42.050\nAll right, those five right there,\nyou need to have memorized for the exam.\n\n376\n00:18:42.050 --> 00:18:45.330\nWe need to know those for the exam to\nbe able to answer questions right.\n\n377\n00:18:45.330 --> 00:18:47.630\nThose are ones that you're\ngonna see in real life land.\n\n378\n00:18:47.630 --> 00:18:49.380\nAll right, the rest of them,\n\n379\n00:18:49.380 --> 00:18:54.250\nthe other six, a really special case or\nones that can be ignored.\n\n380\n00:18:54.250 --> 00:18:59.750\nSome of them, like 6 and\n8, are just not supported.\n\n381\n00:18:59.750 --> 00:19:02.050\nI don't remember which is which,\n\n382\n00:19:02.050 --> 00:19:05.310\nbut one of these has like BGP\noptions that can be passed through.\n\n383\n00:19:05.310 --> 00:19:08.370\nAnd Cisco doesn't support that,\nso you don't have them.\n\n384\n00:19:08.370 --> 00:19:12.600\nThe other one, let's see if I can remember\nwhat that one is, they're not supported,\n\n385\n00:19:12.600 --> 00:19:13.680\nso nobody ever really cares.\n\n386\n00:19:13.680 --> 00:19:16.640\nSo, you have to go and\nread the standard to look them up.\n\n387\n00:19:16.640 --> 00:19:20.690\nI think it's 8 that's the BGP options and\n6 is something else crazy.\n\n388\n00:19:20.690 --> 00:19:24.020\nBut they're not supported, so\nwe don't have to worry about those.\n\n389\n00:19:24.020 --> 00:19:29.470\nOther ones, like 9, 10 and 11, they're\ncalled opaque link state advertisements.\n\n390\n00:19:29.470 --> 00:19:31.640\nSo, what's an opaque LSA?\n\n391\n00:19:31.640 --> 00:19:33.190\nWell, an opaque LSA is nothing.\n\n392\n00:19:33.190 --> 00:19:35.030\nThey're not used, right?\n\n393\n00:19:35.030 --> 00:19:37.300\nThey're reserved for future use.\n\n394\n00:19:37.300 --> 00:19:41.090\nSo companies can use these however they\nwant, and Cisco actually does use them.\n\n395\n00:19:41.090 --> 00:19:44.130\nCisco has them assigned\nto what's called a scope.\n\n396\n00:19:44.130 --> 00:19:46.470\nIf I want to send out a custom LSA and\n\n397\n00:19:46.470 --> 00:19:50.950\nI want it to just hit a single subnet,\nI can flag it as an LSA type 9.\n\n398\n00:19:50.950 --> 00:19:54.470\nIf I want it to hit a single area,\nI can make it an LSA type 10.\n\n399\n00:19:54.470 --> 00:19:58.330\nIf I want it to hit the whole autonomous\nsystem I can make it an LSA type 11.\n\n400\n00:19:58.330 --> 00:20:04.030\nSo, if I have some custom protocol and I\nwanna advertise something crazy into OSPF,\n\n401\n00:20:04.030 --> 00:20:06.830\nI can use these custom types and\nI can do it.\n\n402\n00:20:06.830 --> 00:20:08.450\nSo that's how Cisco handles these.\n\n403\n00:20:08.450 --> 00:20:10.640\nBut, there's nothing set to use them.\n\n404\n00:20:10.640 --> 00:20:14.080\nSo, while they've assigned these scopes,\nthey're not actually in use.\n\n405\n00:20:14.080 --> 00:20:18.500\nSo, it's very, very doubtful that you\nwould see 9, 10, and 11 on Cisco network.\n\n406\n00:20:18.500 --> 00:20:21.082\nAnd even 6 and 8,\nif you're seeing type 6 and 8,\n\n407\n00:20:21.082 --> 00:20:24.840\nit's being originated by third party\nequipment, not Cisco equipment.\n\n408\n00:20:24.840 --> 00:20:28.730\nAll right, so the only one in the 6\nthrough 11 range that's actually used\n\n409\n00:20:28.730 --> 00:20:29.660\nare the NSSAs.\n\n410\n00:20:30.810 --> 00:20:37.160\nCisco has a type of area that we can\ndefine that's called a not so stubby area.\n\n411\n00:20:37.160 --> 00:20:39.835\nIt's actually part of the OSPF standard,\nso I shouldn't say that it's just Cisco.\n\n412\n00:20:39.835 --> 00:20:44.580\nBut the not so stubby areas are NSSAs\nare a special type of area, and\n\n413\n00:20:44.580 --> 00:20:47.080\nwe're gonna talk about those\nin the area types episode.\n\n414\n00:20:47.080 --> 00:20:49.690\nIt filters certain LSAs.\n\n415\n00:20:49.690 --> 00:20:52.230\nIt doesn't allow certain LSAs to come in.\n\n416\n00:20:52.230 --> 00:20:54.100\nWe need a way to identify that.\n\n417\n00:20:54.100 --> 00:20:57.600\nThe way to identify it\nis using type 7 LSA.\n\n418\n00:20:57.600 --> 00:21:00.580\nIf I'm learning a route that\noriginated from NSSA network,\n\n419\n00:21:00.580 --> 00:21:02.730\nit will be flagged as a Type 7.\n\n420\n00:21:02.730 --> 00:21:03.570\nNot common.\n\n421\n00:21:03.570 --> 00:21:06.490\nIf you don't have any NSSA's configured,\nthen you won't see that at all, and\n\n422\n00:21:06.490 --> 00:21:09.820\nwe'll cover that in the episode\nthat covers OSPF area types.\n\n423\n00:21:11.000 --> 00:21:16.330\nAlright, so those are the 11 types of\nLSAs, 1 through 5 are really important.\n\n424\n00:21:16.330 --> 00:21:17.940\nMemorize those, right?\n\n425\n00:21:17.940 --> 00:21:23.340\nBut then 6 through 11,\nit's good to know at least to Type 7.\n\n426\n00:21:23.340 --> 00:21:26.810\nSo for the exam, I'd recommend\nmemorizing 1 through 5 and 7, and\n\n427\n00:21:26.810 --> 00:21:29.600\njust remember the other\nfive just don't get used.\n\n428\n00:21:29.600 --> 00:21:31.260\nBut, in real life land,\n\n429\n00:21:31.260 --> 00:21:36.130\nyou're usually only gonna see 1 through 5\nanyway unless you're making use of NSSAs.\n\n430\n00:21:36.130 --> 00:21:38.160\nSo, it's kind of helpful\nto understand this.\n\n431\n00:21:38.160 --> 00:21:41.840\nJust the other thing to remember\nis in a single area environment,\n\n432\n00:21:41.840 --> 00:21:43.430\nit's a much different world, right?\n\n433\n00:21:43.430 --> 00:21:47.570\nIf you have a single area, all this stuff\ndealing with border routers and so on,\n\n434\n00:21:47.570 --> 00:21:49.440\nyou're not really gonna see, right?\n\n435\n00:21:49.440 --> 00:21:51.570\nWell, I guess in a single\narea environment,\n\n436\n00:21:51.570 --> 00:21:54.580\nyou still have an ASBR, if you're\nconnected to the internet or whatever.\n\n437\n00:21:54.580 --> 00:21:55.920\nSo you may get some things there.\n\n438\n00:21:55.920 --> 00:21:57.880\nBut most people just\noriginate a default route.\n\n439\n00:21:57.880 --> 00:22:01.080\nSo you don't even really look\nlike an ASBR at that point.\n\n440\n00:22:01.080 --> 00:22:05.010\nBut there's other ways to go about\nthat too, where it does come in and\n\n441\n00:22:05.010 --> 00:22:05.860\nyou get to create that.\n\n442\n00:22:05.860 --> 00:22:08.980\nBut, you'll have different LSAs and\ndifferent scenarios.\n\n443\n00:22:08.980 --> 00:22:10.480\nSo just be aware of that.\n\n444\n00:22:10.480 --> 00:22:13.490\nReally kind of important just\nto understand what those are.\n\n445\n00:22:13.490 --> 00:22:17.100\nBut the key thing,\nthe key take away from this whole episode,\n\n446\n00:22:17.100 --> 00:22:21.500\nis that at the end of the day,\neach router has to know, is it an O route,\n\n447\n00:22:21.500 --> 00:22:27.010\nan OIA, an OE1, an OE2, you know, what\nkind of route is it that I'm learning?\n\n448\n00:22:27.010 --> 00:22:29.040\nAnd it's the LSA type\nthat it tells it that.\n\n449\n00:22:29.040 --> 00:22:32.820\nThat's how it figures that out and it's\nable to populate the table accurately.\n\n450\n00:22:32.820 --> 00:22:33.825\nSo.\n>> All right, Don,\n\n451\n00:22:33.825 --> 00:22:37.620\nso is there anything we want to see, like\nmaybe the database on the OSPF database?\n\n452\n00:22:37.620 --> 00:22:38.700\n>> Yeah, that's a good idea.\n\n453\n00:22:38.700 --> 00:22:40.950\nI've done all diagrams this episode and\nno hands on.\n\n454\n00:22:40.950 --> 00:22:42.810\nThat's pretty unusual for us, right?\n\n455\n00:22:42.810 --> 00:22:45.120\nSo, how do we see this on a router?\n\n456\n00:22:45.120 --> 00:22:46.850\nLet me show you guys an example here.\n\n457\n00:22:46.850 --> 00:22:50.160\nSo, I know I've been using this\none network topology throughout\n\n458\n00:22:50.160 --> 00:22:51.160\nthe whole series.\n\n459\n00:22:51.160 --> 00:22:55.630\nwhere I've got point to point links and\nframe relay and metro E and all that junk.\n\n460\n00:22:55.630 --> 00:23:01.580\nSo before the show, I just whipped up\nsome quick things where I redistributed\n\n461\n00:23:01.580 --> 00:23:04.680\nsome external routes into headquarters so\nheadquarters is now an ASBR.\n\n462\n00:23:04.680 --> 00:23:07.720\nSo anytime you redistribute\nyou become an ASBR.\n\n463\n00:23:07.720 --> 00:23:10.750\nI also moved branch two and\nbranch three into the area two.\n\n464\n00:23:10.750 --> 00:23:13.790\nAnd I left branch one and\nheadquarters in area zero.\n\n465\n00:23:13.790 --> 00:23:17.730\nHeadquarters is actually an ABR for\narea zero and area two.\n\n466\n00:23:17.730 --> 00:23:19.910\nYou can be an ABR and\nan ASBR at the same time,\n\n467\n00:23:19.910 --> 00:23:21.360\nand that's what headquarters is doing for\nme.\n\n468\n00:23:21.360 --> 00:23:23.400\nSo, I've actually kinda mixed and\n\n469\n00:23:23.400 --> 00:23:26.170\nmatched my network a bit to generate\nseveral of these different routes.\n\n470\n00:23:26.170 --> 00:23:30.680\nAll right, so if I take a look at\na router like really any of them.\n\n471\n00:23:30.680 --> 00:23:33.050\nThey all should have the same database.\n\n472\n00:23:33.050 --> 00:23:37.570\nIf I take one of these routers and\nI pull up its database, if I do a show ip\n\n473\n00:23:37.570 --> 00:23:42.500\nospf database, well, you'll see\nthe different LSA types divided up and\n\n474\n00:23:42.500 --> 00:23:44.860\nit's gonna look differently\ndepending on which router you're on.\n\n475\n00:23:44.860 --> 00:23:48.570\nSo, looking here at branch one, right?\n\n476\n00:23:48.570 --> 00:23:51.740\nI can see right here my\nrouter link states, right?\n\n477\n00:23:51.740 --> 00:23:52.785\nWhat are router link states?\n\n478\n00:23:52.785 --> 00:23:54.520\nType 1 LSAs.\n\n479\n00:23:54.520 --> 00:23:56.766\nHere's my Type 1 LSAs that I've received.\n\n480\n00:23:56.766 --> 00:24:00.973\nNetwork Link States, these are my\nType 2 LSAs, something that I've\n\n481\n00:24:00.973 --> 00:24:04.985\nreceived from a DR or a BDR Now I've\ngot my Summary Net Link States.\n\n482\n00:24:04.985 --> 00:24:09.270\nThose are my Type-3 LSA's\nthat I've learned all right?\n\n483\n00:24:09.270 --> 00:24:12.230\nAnd as we continue down you'll\nstart to see our Type-5, and\n\n484\n00:24:12.230 --> 00:24:16.000\njust outright calls them\nType-5 AS External Link States right.\n\n485\n00:24:16.000 --> 00:24:18.440\nAnd see how I'm not seeing\nany of the Type-4s?\n\n486\n00:24:18.440 --> 00:24:21.990\nAnd that's because I must already know\nthe routes to get to that router and\n\n487\n00:24:21.990 --> 00:24:23.310\nnot need a Type-4 to get there.\n\n488\n00:24:23.310 --> 00:24:25.740\nSo I've got the Type-5s for\nthe actual network.\n\n489\n00:24:25.740 --> 00:24:29.620\nAnd it makes sense because\nthere's only two areas and\n\n490\n00:24:29.620 --> 00:24:33.640\nthe headquarters route of these\nredistributing these routes is in Area 2,\n\n491\n00:24:33.640 --> 00:24:37.400\nI'm in Area 2 or Area 0,\nwhichever area I'm in.\n\n492\n00:24:37.400 --> 00:24:41.290\nSo I don't need a Type-4 to get there,\nI'm using the Type-1 to find it.\n\n493\n00:24:41.290 --> 00:24:42.900\nSo that happens in the topology.\n\n494\n00:24:42.900 --> 00:24:44.430\nAnd you know, that,\nI guess that got a little confusing.\n\n495\n00:24:44.430 --> 00:24:46.830\nLet me go back to the diagram and\nillustrate what I mean.\n\n496\n00:24:46.830 --> 00:24:49.500\nHeadquarters is who's\nredistributing those routes, right?\n\n497\n00:24:49.500 --> 00:24:51.860\nSo that's where those external\nroutes are coming from.\n\n498\n00:24:51.860 --> 00:24:56.190\nHeadquarters is a border router for\narea 0.\n\n499\n00:24:56.190 --> 00:24:57.580\nBranch 1 is in area 0.\n\n500\n00:24:57.580 --> 00:25:00.950\nSo Branch 1 already knows how\nto get to headquarters so\n\n501\n00:25:00.950 --> 00:25:02.790\nit doesn't need a Type-4 LSA for that.\n\n502\n00:25:02.790 --> 00:25:04.030\nSo it's not learning it.\n\n503\n00:25:04.030 --> 00:25:04.650\nRight.\n\n504\n00:25:04.650 --> 00:25:07.600\nWell Branch 2 and Branch 3 are in Area 2.\n\n505\n00:25:07.600 --> 00:25:11.890\nHeadquarters is in Area 2, so they don't\nneed a Type-4 to find headquarters,\n\n506\n00:25:11.890 --> 00:25:13.880\nthey're not gonna see it either.\n\n507\n00:25:13.880 --> 00:25:16.930\nEven though I've got external routes,\neven though I've got Type-5 LSAs,\n\n508\n00:25:16.930 --> 00:25:20.070\nI don't need the Type-4 because I already\nknow how to get to that router so\n\n509\n00:25:20.070 --> 00:25:21.430\nI'm not gonna see those.\n\n510\n00:25:21.430 --> 00:25:25.900\nBut in my example in\nthe diagram earlier here,\n\n511\n00:25:25.900 --> 00:25:30.950\nif I have Router-7, and\nthe ASBR is way over here in Area 1,\n\n512\n00:25:30.950 --> 00:25:35.060\nI'm not gonna have a Type-1 LSA that\ntells me how to get there, right?\n\n513\n00:25:35.060 --> 00:25:37.370\nSo I'm gonna need a Type-4\nin that scenario,\n\n514\n00:25:37.370 --> 00:25:40.830\nwhere we're remote from where\nit's actually being originated.\n\n515\n00:25:40.830 --> 00:25:44.060\nSo in my lab example,\nI'll never see a Type-4, but\n\n516\n00:25:44.060 --> 00:25:46.220\nin this example here in the diagram,\nwe We would.\n\n517\n00:25:46.220 --> 00:25:49.780\nBut looking at that database, we can see\nthose LSAs laid out right there, and\n\n518\n00:25:49.780 --> 00:25:53.900\nthen I don't have any NSSAs,\nso I don't see anything there.\n\n519\n00:25:53.900 --> 00:25:57.720\nI mean, I could go and take,\nlet's take headquarters,\n\n520\n00:25:57.720 --> 00:26:00.640\nand get it into router ospf 1.\n\n521\n00:26:00.640 --> 00:26:08.050\nAnd we could take Area 2, and\nyou can make Area 2 an NSSA, right.\n\n522\n00:26:08.050 --> 00:26:09.780\nSo I could go in and flag that.\n\n523\n00:26:09.780 --> 00:26:11.020\nAnd set it.\n\n524\n00:26:11.020 --> 00:26:12.740\nI'd need to go and\nset that on my routers too.\n\n525\n00:26:12.740 --> 00:26:14.600\nI'm going to dump all my adjacencies.\n\n526\n00:26:14.600 --> 00:26:19.611\nNow that I've set it, Branch 1 is\nnot connected to Area 2, so its\n\n527\n00:26:19.611 --> 00:26:25.801\ndatabase is going to update, and I should\nstart to see those Type-7's come in.\n\n528\n00:26:25.801 --> 00:26:29.179\nAnd so I'll see those eventually\nafter everything gets happy again.\n\n529\n00:26:29.179 --> 00:26:33.301\nReally to do this right\nactually did it come back up?\n\n530\n00:26:33.301 --> 00:26:34.821\nIt looks like it came back up on its own.\n\n531\n00:26:34.821 --> 00:26:35.995\nSo we might be good.\n\n532\n00:26:35.995 --> 00:26:38.780\nNope, it didn't come back up so we gotta\ngo through and kind of reset that.\n\n533\n00:26:38.780 --> 00:26:42.310\nI don't want to spend a ton\nof time on these NSSA areas.\n\n534\n00:26:42.310 --> 00:26:47.153\nBut what you're gonna see is that\nbasically, these will come up, and\n\n535\n00:26:47.153 --> 00:26:51.100\nthat's gonna start generating\nthose type sevens.\n\n536\n00:26:51.100 --> 00:26:53.520\nOh, I guess I'm not originating any\nroutes either, I have to do that.\n\n537\n00:26:53.520 --> 00:26:55.570\nSo there's a couple of steps that I\nhave to go through to actually get\n\n538\n00:26:55.570 --> 00:26:56.400\nthose to show up.\n\n539\n00:26:56.400 --> 00:26:59.160\nBut eventually I'll start seeing those,\nand\n\n540\n00:26:59.160 --> 00:27:03.170\nthat's gonna let me know that those are\nactually originating from an NSSA area.\n\n541\n00:27:03.170 --> 00:27:06.110\nSo those might turn up in\nmy environment eventually.\n\n542\n00:27:06.110 --> 00:27:08.110\nBut you can spot those, and\nthe way it's listed here,\n\n543\n00:27:08.110 --> 00:27:11.530\nsome of them it comes right out and\nsays, hey, this is a Type-5 LSA.\n\n544\n00:27:11.530 --> 00:27:15.750\nOther ones we just have to know, this is\nType-1, this is Type-2, this is Type-3.\n\n545\n00:27:15.750 --> 00:27:17.270\nThey're right here in our database.\n\n546\n00:27:17.270 --> 00:27:18.540\nThat's how it's dividing it up.\n\n547\n00:27:18.540 --> 00:27:21.750\nAnd then when it renders that\nrouting table, right, and\n\n548\n00:27:21.750 --> 00:27:26.530\nwe start to see those OSPF routes Let\nme just filter that done a bit, there.\n\n549\n00:27:26.530 --> 00:27:29.460\nIt knows to make it OIA or an OE2 or\n\n550\n00:27:29.460 --> 00:27:33.040\nwhatever, based on the type\nof LSA that it received, yep.\n\n551\n00:27:33.040 --> 00:27:35.750\nSo that's what it looks\nlike on the actual router.\n\n552\n00:27:35.750 --> 00:27:36.390\n>> All right, Don.\n\n553\n00:27:36.390 --> 00:27:39.540\nSo, that sounds like a good\nrundown of all the LSA types.\n\n554\n00:27:39.540 --> 00:27:40.850\nWhen we take a look at the LSA types,\n\n555\n00:27:40.850 --> 00:27:42.940\nremember that OSPF works,\nbased off of this.\n\n556\n00:27:42.940 --> 00:27:44.570\nThis is how the routing table is built.\n\n557\n00:27:44.570 --> 00:27:46.620\nThat's how the OSPF database is built so\n\n558\n00:27:46.620 --> 00:27:49.930\nthat OSPF works effectively\nin the way that needs to.\n\n559\n00:27:49.930 --> 00:27:55.470\nFor us as we travel towards getting our\nCCNP route, exam under our belt, we\n\n560\n00:27:55.470 --> 00:27:58.940\nwant to make sure that we understand all\nover these or we're going to have a hard\n\n561\n00:27:58.940 --> 00:28:02.270\ntime making sure that we can actually\ngo through the entire exam as well.\n\n562\n00:28:02.270 --> 00:28:04.580\nSo, let's make sure that we know them.\n\n563\n00:28:04.580 --> 00:28:07.030\nThat actually brings us to\nan end to our show today.\n\n564\n00:28:07.030 --> 00:28:08.160\nThank you for watching.\n\n565\n00:28:08.160 --> 00:28:09.350\nI've been your host Ronny Wong.\n\n566\n00:28:09.350 --> 00:28:10.010\n>> And I'm John Pezzet.\n\n567\n00:28:10.010 --> 00:28:10.995\n>> And we'll see you next time.\n\n568\n00:28:10.995 --> 00:28:17.220\n[MUSIC]\n\n",
          "vimeoId": "137632157"
        },
        {
          "description": "There are four route types found in OSPF, but in a standard deployment one really just sees one regular OSPF route. Viewers will hear about the results of the LSA exchanges that occur between OSPF routers, the four different route types found in OSPF and how one can identify them and actually see how they are working.",
          "length": "1596",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/ccnproute/cisco-ccnproute300101-3-26c-ospf_route_types-082815-1.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/ccnproute/cisco-ccnproute300101-3-26c-ospf_route_types-082815-1-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/ccnproute/cisco-ccnproute300101-3-26c-ospf_route_types-082815-1-sm.jpg",
          "title": "OSPF Route Types",
          "transcript": "WEBVTT\n\n1\n00:00:00.000 --> 00:00:10.638\n[MUSIC]\n\n2\n00:00:10.638 --> 00:00:12.681\nAll right, welcome to another\ngreat episode here on ITProTV.\n\n3\n00:00:12.681 --> 00:00:14.530\nToday we're taking a look at CCMP route.\n\n4\n00:00:14.530 --> 00:00:16.980\nSo if you're getting ready for their exam,\n\n5\n00:00:16.980 --> 00:00:21.010\nyou wanna make sure you stay tuned right\nhere and don't go anywhere else as well.\n\n6\n00:00:21.010 --> 00:00:24.780\nSo I'm your host Ronnie Wong, and\nhere with us today is mister Don Pezet.\n\n7\n00:00:24.780 --> 00:00:25.590\nHow's it goin?\n\n8\n00:00:25.590 --> 00:00:26.640\n>> It is going great Ronnie.\n\n9\n00:00:26.640 --> 00:00:28.920\nReady to jump right back\ninto the world of OSPF.\n\n10\n00:00:28.920 --> 00:00:31.880\nIn our previous episodes we were\ntalking about OSPF areas and\n\n11\n00:00:31.880 --> 00:00:34.520\nsome of the different features and\nfunctions inside of them.\n\n12\n00:00:34.520 --> 00:00:36.130\nAnd throughout the course\nof those episodes,\n\n13\n00:00:36.130 --> 00:00:39.760\nthere were times where we\nmentioned things like O, OIA,\n\n14\n00:00:39.760 --> 00:00:42.710\nOU1 routes, right,\nthese special routes inside of OSPF.\n\n15\n00:00:42.710 --> 00:00:46.920\nAnd so, in this episode we're gonna\nkinda remove the veil, right?\n\n16\n00:00:46.920 --> 00:00:50.650\nTake away the mysteriousness of\nthe four different network types found\n\n17\n00:00:50.650 --> 00:00:51.220\ninside of OSPF.\n\n18\n00:00:51.220 --> 00:00:55.100\nSo a lot of people don't even realize that\nthere are four different network types\n\n19\n00:00:55.100 --> 00:01:00.640\nbecause in a standard OSPF deployment,\nyou really don't see but one network type.\n\n20\n00:01:00.640 --> 00:01:02.980\nYou just see a regular OSPF route.\n\n21\n00:01:02.980 --> 00:01:04.600\nLet me show what I mean.\n\n22\n00:01:04.600 --> 00:01:08.680\nI've got a sort of complex but\nsort of simple topology here.\n\n23\n00:01:08.680 --> 00:01:09.722\nI've got a headquarters router.\n\n24\n00:01:09.722 --> 00:01:12.100\nI've got branch 1, branch 2, and branch 3.\n\n25\n00:01:12.100 --> 00:01:15.130\nBut, I've got a metro ethernet\nlink in between all the locations.\n\n26\n00:01:15.130 --> 00:01:17.330\nSo that's a multi-access network.\n\n27\n00:01:17.330 --> 00:01:20.280\nAnd then I've got a frame relay point\nto point network between all of them.\n\n28\n00:01:20.280 --> 00:01:23.890\nAnd I've even got some backup lines\nbetween branch one and headquarters.\n\n29\n00:01:23.890 --> 00:01:26.860\nSo several different media\ntypes involved here.\n\n30\n00:01:26.860 --> 00:01:28.920\nBut if I want to do a quick and\n\n31\n00:01:28.920 --> 00:01:32.950\neasy deployment of OSPF I can\ndo single area deployment.\n\n32\n00:01:32.950 --> 00:01:36.740\nAnd in a single area deployment,\nit's easy, it's fast, it's stable,\n\n33\n00:01:36.740 --> 00:01:40.130\nit's really one of the most\ncommon implementations of OSPF.\n\n34\n00:01:40.130 --> 00:01:43.580\nIt's great, and it's suitable for\nreally large environments.\n\n35\n00:01:43.580 --> 00:01:46.870\nSo we can dump this in here real quick and\nhave OSPF configured in no time.\n\n36\n00:01:46.870 --> 00:01:49.540\nSo I might choose to write a quick\nlittle script, something like this,\n\n37\n00:01:49.540 --> 00:01:50.810\nwhere I enable.\n\n38\n00:01:50.810 --> 00:01:52.050\nI jump into my configuration.\n\n39\n00:01:52.050 --> 00:01:56.780\nI just say router OSPF and give it\na process ID and then a wild card for\n\n40\n00:01:56.780 --> 00:01:59.370\nthe network that is wide open.\n\n41\n00:01:59.370 --> 00:02:01.500\nI'm gonna put everybody in area zero.\n\n42\n00:02:01.500 --> 00:02:05.760\nSo this is just gonna quickly enable\nOSPF on all of my routers and\n\n43\n00:02:05.760 --> 00:02:07.490\nget them up and churning through.\n\n44\n00:02:07.490 --> 00:02:11.710\nSo let me just run through each of my four\nrouters, and I'll dump that in there.\n\n45\n00:02:11.710 --> 00:02:14.120\nWhoops, that's not gonna be happy.\n\n46\n00:02:14.120 --> 00:02:15.020\nThere we go.\n\n47\n00:02:15.020 --> 00:02:16.470\nAnd I'll get those set up.\n\n48\n00:02:16.470 --> 00:02:18.460\nI was still at my console prompt there.\n\n49\n00:02:18.460 --> 00:02:19.930\nSo there we go.\n\n50\n00:02:19.930 --> 00:02:24.170\nAll right, so now all four of my\nrouters are up and exchanging routes.\n\n51\n00:02:24.170 --> 00:02:27.770\nSo a moment ago, I would have only\nhad connected and local routes.\n\n52\n00:02:27.770 --> 00:02:29.810\nNow I'm going to have OSPF routes also.\n\n53\n00:02:29.810 --> 00:02:33.630\nAnd because I only have one area, I'm\ngonna to learn those other networks, and\n\n54\n00:02:33.630 --> 00:02:36.310\nI'm gonna learn them as\nstandard OSPF routes.\n\n55\n00:02:36.310 --> 00:02:41.935\nSo when I look at my routing table,\nI'm gonna have my local and\n\n56\n00:02:41.935 --> 00:02:46.970\nconnected routes, these C and L routes,\nbut I'm also gonna see these O routes.\n\n57\n00:02:46.970 --> 00:02:50.280\nAnd those O routes,\nthose are standard OSPF routes.\n\n58\n00:02:50.280 --> 00:02:52.340\nRight?\nJust run of the mill, regular,\n\n59\n00:02:52.340 --> 00:02:53.890\nold OSPF routes.\n\n60\n00:02:53.890 --> 00:02:57.230\nAnd in a single area OSPF environment,\nthat's what you're gonna see.\n\n61\n00:02:57.230 --> 00:02:59.560\nAnd so\nthat's what most people are used to.\n\n62\n00:02:59.560 --> 00:03:03.060\nBut there's actually three other\ntypes of routes that we can see.\n\n63\n00:03:03.060 --> 00:03:05.840\nIf you look at the legend at\nthe top of the routing table,\n\n64\n00:03:05.840 --> 00:03:09.110\nhere's where it has L is local,\nC is connected, very exciting.\n\n65\n00:03:09.110 --> 00:03:12.320\nAnd then in here we've got O is OSPF.\n\n66\n00:03:12.320 --> 00:03:13.450\nThat's the standard OSPF route.\n\n67\n00:03:13.450 --> 00:03:16.915\nBut then you'll see IA is OSPF also.\n\n68\n00:03:16.915 --> 00:03:21.190\nIt's OSPF for inter-area routes.\n\n69\n00:03:21.190 --> 00:03:24.840\nIf I'm learning routes from\na router in a different area,\n\n70\n00:03:25.840 --> 00:03:28.030\nif they're crossing from\none area into another,\n\n71\n00:03:28.030 --> 00:03:31.540\nin other words if they switch from\na type one LSA to a type three LSA, when\n\n72\n00:03:31.540 --> 00:03:35.820\nI learn that type three LSA, I know it's\nfrom another area, and I flag it as OIA.\n\n73\n00:03:37.040 --> 00:03:41.100\nYou're only gonna see OIAs if\nyou have more than one area.\n\n74\n00:03:41.100 --> 00:03:44.390\nWell, in my topology,\nI just went real quick and\n\n75\n00:03:44.390 --> 00:03:47.530\nthrew all of my routers in the same area.\n\n76\n00:03:47.530 --> 00:03:49.560\nBut what if I take somebody\nlike branch three over here?\n\n77\n00:03:49.560 --> 00:03:53.490\nI'm gonna take branch three and\nmove them into a different area.\n\n78\n00:03:53.490 --> 00:03:56.110\nI don't want them in the same\narea as everybody else.\n\n79\n00:03:56.110 --> 00:03:57.020\nWell, I can do that.\n\n80\n00:03:57.020 --> 00:03:58.520\nI can add it into another area.\n\n81\n00:03:58.520 --> 00:04:01.620\nMaybe I'll shut off its metro E\nconnection cuz that's multi-access.\n\n82\n00:04:01.620 --> 00:04:02.980\nThat would be harder for me to switch.\n\n83\n00:04:02.980 --> 00:04:06.827\nAnd then I'll take this frame relay line\nto branch three and switch that over to,\n\n84\n00:04:06.827 --> 00:04:10.234\nwhich actually shouldn't be down\nthere should it, should be up here.\n\n85\n00:04:10.234 --> 00:04:15.687\nI could switch that over so that it is\nnow in area one or area 2 or area 255,\n\n86\n00:04:15.687 --> 00:04:21.445\nare whatever it is that I wanna put it in,\ncuz it's just a 32-bit number.\n\n87\n00:04:21.445 --> 00:04:22.825\nYou can put it in any area.\n\n88\n00:04:22.825 --> 00:04:25.905\nSo, if I wanna do that,\nit's pretty straight-forward.\n\n89\n00:04:25.905 --> 00:04:29.255\nSo I'll jump over to my routers,\nand I'm gonna take branch three.\n\n90\n00:04:29.255 --> 00:04:32.660\nAnd the first thing I'm gonna do is\nI'm gonna shut off that metro e link.\n\n91\n00:04:32.660 --> 00:04:33.600\nSo let me just shut that down.\n\n92\n00:04:34.830 --> 00:04:39.120\nAnd then I'm gonna get into its frame\nrelay link, that point to point frame\n\n93\n00:04:39.120 --> 00:04:42.960\nrelay link that its got, and I'm just\ngonna move that over into another area.\n\n94\n00:04:42.960 --> 00:04:48.480\nSo I'll say ip ospf 1 area,\nlet's go to area 9.\n\n95\n00:04:48.480 --> 00:04:50.760\nI'm gonna move that to area nine, and\n\n96\n00:04:50.760 --> 00:04:53.920\nas soon as that happens I'm gonna\nget where my connection drops.\n\n97\n00:04:53.920 --> 00:04:55.440\nSo it drops, and that's it,\n\n98\n00:04:55.440 --> 00:04:58.860\nand I'm starting to get warnings about\nmismatches and virtual links and all that.\n\n99\n00:04:58.860 --> 00:05:00.620\nSo I just need to correct the other side.\n\n100\n00:05:00.620 --> 00:05:04.290\nSo on the other side you can\nsee I just lost that link and\n\n101\n00:05:04.290 --> 00:05:09.010\nI can see the interface that it's on, so I\ncan cheat just a little bit and get that.\n\n102\n00:05:09.010 --> 00:05:13.700\nSo now I can get into that interface,\nand I can do the same thing over here.\n\n103\n00:05:13.700 --> 00:05:18.170\nAnd I can put that into area 9,\nand now I've got a new area.\n\n104\n00:05:18.170 --> 00:05:20.850\nBranch 1 and branch 2 are still in area 0.\n\n105\n00:05:20.850 --> 00:05:22.020\nHeadquarters is now an ABR.\n\n106\n00:05:22.020 --> 00:05:23.750\nIt's a border router.\n\n107\n00:05:23.750 --> 00:05:26.570\nIt's in area 0 and area 9.\n\n108\n00:05:26.570 --> 00:05:30.130\nAnd branch three is entirely in area nine.\n\n109\n00:05:30.130 --> 00:05:34.927\nNow what's gonna happen is,\nthe routes, originated on branch one,\n\n110\n00:05:34.927 --> 00:05:39.418\nand the routes originated,\nif I can get to my window, here we go.\n\n111\n00:05:39.418 --> 00:05:44.520\nThe routes originated here on branch one\nare gonna advertise out to headquarters.\n\n112\n00:05:44.520 --> 00:05:48.710\nAnd headquarters is gonna send them over\nto branch three, which is in area nine.\n\n113\n00:05:48.710 --> 00:05:51.400\nThey're crossing area boundaries.\n\n114\n00:05:51.400 --> 00:05:56.130\nAnd when that happens, branch three\nwill see those as not Os, but as OIAs.\n\n115\n00:05:56.130 --> 00:05:58.980\nRight?\nIt'll be inter-area.\n\n116\n00:05:58.980 --> 00:06:04.210\nAnd so if I jump back over to\nrouter three, or branch 3, this\n\n117\n00:06:04.210 --> 00:06:08.230\nguy in area 9, I can do a show ip route\nand I'll just filter down to show ospf.\n\n118\n00:06:08.230 --> 00:06:13.089\nAnd when I look,\nsee all these OIA's that I've got?\n\n119\n00:06:13.089 --> 00:06:18.830\nAnd as I look, I don't see any O's do I,\neverything is an OIA.\n\n120\n00:06:18.830 --> 00:06:21.320\nAnd the reason is I'm in area 9.\n\n121\n00:06:21.320 --> 00:06:23.150\nHeadquarters is a border router though,\nright?\n\n122\n00:06:23.150 --> 00:06:27.080\nSo shouldn't I at least be learning\nsomething from it in area 9?\n\n123\n00:06:27.080 --> 00:06:31.010\nWell, no, there's no other interfaces\nthere that are in area nine.\n\n124\n00:06:31.010 --> 00:06:34.430\nI only put the one direct\nlink to me in area nine.\n\n125\n00:06:34.430 --> 00:06:39.100\nOn headquarters it was just that one\ninterface, that one virtual interface.\n\n126\n00:06:39.100 --> 00:06:41.430\nAnd I already know about that network.\n\n127\n00:06:41.430 --> 00:06:44.990\nI've got to directly connect it for it so\nit overrides it so I don't learn that one.\n\n128\n00:06:44.990 --> 00:06:48.260\nBut I could spawn another interface\njust to generate one in C.\n\n129\n00:06:48.260 --> 00:06:49.260\nLet's do that.\n\n130\n00:06:49.260 --> 00:06:53.180\nI'll jump over to headquarters, and\nmaybe I'll create a loop back or\n\n131\n00:06:53.180 --> 00:06:56.620\nI probably have an extra ethernet\ninterface or something I could use.\n\n132\n00:06:56.620 --> 00:06:58.900\nLet's see what I've got\nlaying around on this thing.\n\n133\n00:06:58.900 --> 00:07:02.500\nYeah, I can take, well I don't know,\nsome of these other guys.\n\n134\n00:07:02.500 --> 00:07:06.940\nI could take 0/3 and move it into area 9.\n\n135\n00:07:06.940 --> 00:07:09.880\nIt's an external link, so I wouldn't\nnormally put that into OSPF, but\n\n136\n00:07:09.880 --> 00:07:12.330\nI'll do it here just for an example.\n\n137\n00:07:12.330 --> 00:07:14.540\nAnd so I can take that one and\nmove it to area 9.\n\n138\n00:07:14.540 --> 00:07:21.870\nNow, when I move it into area 9, that type\none LSA for ID is advertising to area 9.\n\n139\n00:07:21.870 --> 00:07:23.160\nBranch 3 is in area 9.\n\n140\n00:07:23.160 --> 00:07:26.170\nIt's going to receive it, and\nit's not going to be an OIA anymore.\n\n141\n00:07:26.170 --> 00:07:27.290\nNow it's going to be a regular O.\n\n142\n00:07:27.290 --> 00:07:29.060\nIt's in the same area as us.\n\n143\n00:07:29.060 --> 00:07:32.294\nSo if I jump back over to branch 3,\nthat network,\n\n144\n00:07:32.294 --> 00:07:37.100\nactually before I jump,\nthat network is 181.7.31.whatever.\n\n145\n00:07:37.100 --> 00:07:39.070\nSo, it's a 181 network.\n\n146\n00:07:39.070 --> 00:07:42.750\nI don't think I have\nany other 181 networks.\n\n147\n00:07:42.750 --> 00:07:45.980\nSo, if I jump over to branch three,\nI can find that in my list here.\n\n148\n00:07:45.980 --> 00:07:50.930\nHere's where I was learning it before,\nand I was learning it as an O IA, right?\n\n149\n00:07:50.930 --> 00:07:56.360\nNow, if I look at the routing table and\nI find it, there it is.\n\n150\n00:07:56.360 --> 00:07:57.270\nAnd now it's in O.\n\n151\n00:07:57.270 --> 00:07:59.319\nIt's in the same area.\n\n152\n00:07:59.319 --> 00:08:02.676\nSo that's the only difference\nbetween O and OIA.\n\n153\n00:08:02.676 --> 00:08:07.710\nOI is inter area,\nI learned it from another area.\n\n154\n00:08:07.710 --> 00:08:12.000\nIf it's just an O, it's an intra area,\nI learned it from within my own area.\n\n155\n00:08:12.000 --> 00:08:15.810\nAnd if we want to get to the real\nnitty-gritty of it, an O is something we\n\n156\n00:08:15.810 --> 00:08:20.080\nlearn from a type 1 LSA, and OIA is\nsomething we learn from a type 3 LSA,\n\n157\n00:08:20.080 --> 00:08:22.910\nso we just kind of got those\nfrom those different places, and\n\n158\n00:08:22.910 --> 00:08:25.070\nthat's how we know where\nthey originated from.\n\n159\n00:08:25.070 --> 00:08:29.330\nIf it's an OIA, I know that in\norder to get to that network,\n\n160\n00:08:29.330 --> 00:08:30.372\nI can't go straight to it.\n\n161\n00:08:30.372 --> 00:08:32.940\nI'm gonna have to go through\na border router, right?\n\n162\n00:08:32.940 --> 00:08:34.990\nI'll have to pass through\na border router to find it, and\n\n163\n00:08:34.990 --> 00:08:36.814\nI'm gonna have to pass through area 0,\nright?\n\n164\n00:08:36.814 --> 00:08:38.890\nArea 0 is our backbone area, and\n\n165\n00:08:38.890 --> 00:08:42.050\nthe only way you can move between\nareas is to pass through area 0.\n\n166\n00:08:42.050 --> 00:08:45.950\nWell, I've only got area 0 and\narea 9, so that's no big deal for me.\n\n167\n00:08:45.950 --> 00:08:47.280\nBut in a more complex network,\n\n168\n00:08:47.280 --> 00:08:50.000\nthat does kind of start to\nchange things structurally.\n\n169\n00:08:50.000 --> 00:08:52.680\nAnd we have another episode coming up\nwhere we're gonna talk about when to\n\n170\n00:08:52.680 --> 00:08:55.140\ndivide up areas, and\nsome of the special area types there too.\n\n171\n00:08:55.140 --> 00:08:58.400\nAll right, so that's an OIA, right?\n\n172\n00:08:58.400 --> 00:09:01.320\nThat's the second type of route,\nand those are very common.\n\n173\n00:09:01.320 --> 00:09:04.220\nThe next two, though,\nare a little more odd.\n\n174\n00:09:04.220 --> 00:09:06.620\nAnd that's the OE1 and OE2, right?\n\n175\n00:09:06.620 --> 00:09:10.100\nWhen I pull up my routing table,\nyou saw OE1 and\n\n176\n00:09:10.100 --> 00:09:14.040\nOE2, and it just says,\nOSPF external type 1, external type 2.\n\n177\n00:09:14.040 --> 00:09:16.730\nAll right, what are these?\n\n178\n00:09:16.730 --> 00:09:21.430\nWell these are where I learn routes\nfrom outside of OSPF, in other words,\n\n179\n00:09:21.430 --> 00:09:22.028\nI redistribute.\n\n180\n00:09:22.028 --> 00:09:25.190\nWhen you're redistributing routes\ninto OSPF, they're external,\n\n181\n00:09:25.190 --> 00:09:27.360\nthey're coming from outside.\n\n182\n00:09:27.360 --> 00:09:29.339\nAnd we don't trust them as\nmuch as our regular routes,\n\n183\n00:09:29.339 --> 00:09:32.340\ncuz we don't know where they came from,\nright, they're external.\n\n184\n00:09:32.340 --> 00:09:36.970\nBut when they come in, they can come\nin as a type 1 or type 2 external,\n\n185\n00:09:36.970 --> 00:09:38.860\nnow what does that mean?\n\n186\n00:09:38.860 --> 00:09:43.690\nWell, they're actually identical as far\nas what they are, they're both external.\n\n187\n00:09:43.690 --> 00:09:45.790\nBut what's different about\nthem is their metric.\n\n188\n00:09:45.790 --> 00:09:50.420\nThe metric is calculated differently\nfrom an OE1 versus an OE2, all right.\n\n189\n00:09:50.420 --> 00:09:52.620\nLet me show you what I mean.\n\n190\n00:09:52.620 --> 00:09:55.030\nIf I take a,\nlet me take a different topology here,\n\n191\n00:09:55.030 --> 00:09:57.310\nI think I got a diagram\nlaying around here.\n\n192\n00:09:57.310 --> 00:10:00.670\nBoy, I am just not having good luck\nbringing up my diagrams today.\n\n193\n00:10:00.670 --> 00:10:02.490\nWhere is that, here we go.\n\n194\n00:10:02.490 --> 00:10:05.025\nAll right, so here's a complex network and\n\n195\n00:10:05.025 --> 00:10:07.843\nI've got an external network over here,\nokay?\n\n196\n00:10:07.843 --> 00:10:12.420\nIf I advertise it, when I redistribute\ninto OSPF, the default is an OE2.\n\n197\n00:10:12.420 --> 00:10:14.970\nI know you'd think that OE1\nwas the default, but it isn't.\n\n198\n00:10:14.970 --> 00:10:16.210\nOE2 is the default.\n\n199\n00:10:16.210 --> 00:10:19.750\nSo if I redistribute it into\nOSPF right here in router 1,\n\n200\n00:10:19.750 --> 00:10:21.940\nit becomes an OE2 route, right?\n\n201\n00:10:21.940 --> 00:10:25.140\nAnd I advertise it all the way\nthrough the network, okay?\n\n202\n00:10:25.140 --> 00:10:28.860\nWell, when you redistribute,\nif you're redistributing from another OSPF\n\n203\n00:10:28.860 --> 00:10:31.845\nautonomous system,\nthen the metric is pretty good, right?\n\n204\n00:10:31.845 --> 00:10:35.650\nIt's gonna have an accurate\nmetric of the cost to get there.\n\n205\n00:10:35.650 --> 00:10:40.720\nBut what if I'm redistributing from EIRGP\nor RIP or redistributing from statics?\n\n206\n00:10:40.720 --> 00:10:43.880\nWell, OSPF's metric is based on bandwidth.\n\n207\n00:10:43.880 --> 00:10:45.430\nAre any of those other\nguys based on bandwidth?\n\n208\n00:10:45.430 --> 00:10:46.260\n>> No.\n\n209\n00:10:46.260 --> 00:10:51.022\n>> No, right, EIRGP is bandwidth and\ndelay, so now that's different, right?\n\n210\n00:10:51.022 --> 00:10:54.142\nIf you crossed that and treat it as\nbandwidth it's gonna look like it has\n\n211\n00:10:54.142 --> 00:10:57.310\na much lower bandwidth than\nthe line actually does.\n\n212\n00:10:57.310 --> 00:11:00.280\nIf you do static, well,\nyou make up a metric for a static.\n\n213\n00:11:00.280 --> 00:11:03.050\nYou just pick it right out of your head,\nand so you can't trust that.\n\n214\n00:11:03.050 --> 00:11:05.050\nAnd then RIP, RIP uses hop count.\n\n215\n00:11:05.050 --> 00:11:06.640\nAnd so hop count,\nyou absolutely can't trust it.\n\n216\n00:11:06.640 --> 00:11:09.310\nIt's not compatible with\nthe metric in OSPF.\n\n217\n00:11:09.310 --> 00:11:12.790\nSo, the key thing about\nan external route is,\n\n218\n00:11:12.790 --> 00:11:15.700\nOSPF wants you to be aware that\nyou can't trust the metric.\n\n219\n00:11:15.700 --> 00:11:20.620\nAnd so, since we can't trust the metric,\nthe route comes in and then OE2 just says,\n\n220\n00:11:20.620 --> 00:11:23.490\nlook, we're gonna assign a metric to it,\nand then as it\n\n221\n00:11:23.490 --> 00:11:28.020\npasses inside of the network, that metric\nis always gonna stay the same, right?\n\n222\n00:11:28.020 --> 00:11:30.150\nNormally when we learn a route,\nwhat do we do?\n\n223\n00:11:30.150 --> 00:11:33.490\nWe adjust it for\nthe length that it passed across, right?\n\n224\n00:11:33.490 --> 00:11:37.120\nSo if router 7 is learning\nthis external route,\n\n225\n00:11:37.120 --> 00:11:40.410\nit's taking into account the bandwidth of\nthis line, the bandwidth of this line,\n\n226\n00:11:40.410 --> 00:11:42.370\nthe bandwidth here, the bandwidth here,\nthe bandwidth here, right?\n\n227\n00:11:42.370 --> 00:11:47.030\nBandwidth is an aggregate metric\nacross the entire link in OSPF.\n\n228\n00:11:47.030 --> 00:11:50.360\nWell, with an OE2 route\nit doesn't do that.\n\n229\n00:11:50.360 --> 00:11:54.165\nif we bring it in with a metric of 7,000,\nthe metric will be 7,000 here,\n\n230\n00:11:54.165 --> 00:11:59.110\n7,000 here, 7,000 here, 7,000 here,\n7,000 here, 7,000 here, right?\n\n231\n00:11:59.110 --> 00:12:03.590\nAll the way back to router 7, who still\nshows having a metric of 7,000, so\n\n232\n00:12:03.590 --> 00:12:06.130\nOE2 is what's called a fixed metric.\n\n233\n00:12:06.130 --> 00:12:08.010\nThe metric doesn't get updated.\n\n234\n00:12:08.010 --> 00:12:12.228\nThe metric is the cost to get\nthere from the ASBR, right?\n\n235\n00:12:12.228 --> 00:12:15.500\nFrom the autonomous system border router.\nIt doesn't take into account\n\n236\n00:12:15.500 --> 00:12:16.700\nthe internal network.\n\n237\n00:12:16.700 --> 00:12:20.980\nNow, if you've only got one way to get\nto that network, that's fine, right?\n\n238\n00:12:21.980 --> 00:12:25.370\nBut what if, what if there was\nanother way to get there, right?\n\n239\n00:12:25.370 --> 00:12:29.720\nWhat if we had that external\nnetwork sitting here and\n\n240\n00:12:29.720 --> 00:12:33.020\nthere was another router that\nhad a link to it, right?\n\n241\n00:12:33.020 --> 00:12:39.120\nAnd that other router, maybe it was, maybe\nit was router 2 here like this, okay?\n\n242\n00:12:39.120 --> 00:12:40.820\nSo router 2 and\nrouter 1 can both get there.\n\n243\n00:12:41.900 --> 00:12:45.590\nAnd if we redistribute in on\nboth of these routers, well,\n\n244\n00:12:45.590 --> 00:12:47.960\nI might redistribute into router\n1 with a metric of 7,000 and\n\n245\n00:12:47.960 --> 00:12:52.230\nI redistribute it into router 2\nwith a metric of 7,000, all right?\n\n246\n00:12:52.230 --> 00:12:56.640\nWell, if I'm router 7 and\nI'm passing across all these links and\n\n247\n00:12:56.640 --> 00:13:01.810\nI get to router 2, well, doesn't it make\nsense to just go straight out of router 2?\n\n248\n00:13:01.810 --> 00:13:04.820\nIt does, but\nwe're gonna see what that metric of 7,000,\n\n249\n00:13:04.820 --> 00:13:07.230\nwe're not gonna know the difference\nbetween going between these two,\n\n250\n00:13:07.230 --> 00:13:10.440\nrouters and so\nwe might choose a suboptimal path.\n\n251\n00:13:10.440 --> 00:13:12.835\nSo if you have more than\none way to get out,\n\n252\n00:13:12.835 --> 00:13:16.333\nit's a good idea to take into\naccount other things, right?\n\n253\n00:13:16.333 --> 00:13:21.210\nAnd my router here,\nlet's say we add in a extra router.\n\n254\n00:13:22.520 --> 00:13:24.936\nSo if we take, oh that's different.\n\n255\n00:13:24.936 --> 00:13:29.890\n[LAUGH] Apparently I'm just gonna\nreally mess this up, but let's\n\n256\n00:13:29.890 --> 00:13:34.220\nadd in like another border router here,\nright, and say that this guy is router 8.\n\n257\n00:13:34.220 --> 00:13:35.950\nAll right.\n\n258\n00:13:39.170 --> 00:13:40.860\nAnd we take our router 1.\n\n259\n00:13:40.860 --> 00:13:45.150\nI'm just gonna reconfigure my\nnetwork here, there we go.\n\n260\n00:13:45.150 --> 00:13:46.635\nOkay, like this, all right.\n\n261\n00:13:46.635 --> 00:13:52.078\nSo now, if I'm on router 7,\nI could pass across these links,\n\n262\n00:13:52.078 --> 00:13:55.210\ngo to router 2, and move on.\n\n263\n00:13:55.210 --> 00:13:58.180\nOr, I've got this nice new\nborder router down here.\n\n264\n00:13:58.180 --> 00:14:02.590\nAnd this new border router is like\nanother way to get there, right?\n\n265\n00:14:02.590 --> 00:14:07.380\nAnd it might be better,\nit might be faster from me to jump from\n\n266\n00:14:08.400 --> 00:14:13.000\nrouter 7 over to router 6, to router 4,\nto router 8, to router 1 and out.\n\n267\n00:14:13.000 --> 00:14:14.560\nOr it might be faster to\nrouter 7 to router 5,\n\n268\n00:14:14.560 --> 00:14:17.900\nto router 4 to router 3,\nrouter 2, and so on, right?\n\n269\n00:14:17.900 --> 00:14:19.920\nTwo different paths to get there.\n\n270\n00:14:19.920 --> 00:14:22.720\nWell, which one do I wanna take?\n\n271\n00:14:22.720 --> 00:14:26.330\nIf that metric is static, I'm not gonna\nknow, and I'm gonna treat them equally in\n\n272\n00:14:26.330 --> 00:14:29.290\nthe load balancer, we'll just\nsend traffic out to both, right?\n\n273\n00:14:29.290 --> 00:14:32.070\nBut if there's a true difference\non our internal network,\n\n274\n00:14:32.070 --> 00:14:34.630\nthen we can switch it to an OE1.\n\n275\n00:14:34.630 --> 00:14:40.140\nIn an OE1, we redistribute it with\na metric, and then the metric increases\n\n276\n00:14:40.140 --> 00:14:45.730\nwith each hop along your internal network,\nand so it's more accurate.\n\n277\n00:14:45.730 --> 00:14:47.920\nBut if you've only got one way to it,\n\n278\n00:14:47.920 --> 00:14:50.230\nyou're wasting time\ncalculating that metric.\n\n279\n00:14:50.230 --> 00:14:55.060\nSo in 8, OE2 is more efficient if\nyou've only got one way to get there.\n\n280\n00:14:55.060 --> 00:14:59.520\nBut if you've got more than one way to\nget there, an OE1 is more accurate.\n\n281\n00:14:59.520 --> 00:15:03.040\nSo you're basically choosing\nbetween accuracy and performance.\n\n282\n00:15:03.040 --> 00:15:06.110\nAnd the default is OE2 for\nperformance, right?\n\n283\n00:15:06.110 --> 00:15:07.895\nBut you might want to\nchange it to the other one.\n\n284\n00:15:07.895 --> 00:15:10.795\nSo let me show you how these kinda\nwork when we implement them.\n\n285\n00:15:10.795 --> 00:15:13.885\nAnd I'm not quite sure what I did\nto end up with these extra circles,\n\n286\n00:15:13.885 --> 00:15:14.605\nbut that didn't work.\n\n287\n00:15:14.605 --> 00:15:16.926\nAll right, well,\nwe'll just stick with those circles.\n\n288\n00:15:16.926 --> 00:15:17.615\n[LAUGH].\n\n289\n00:15:17.615 --> 00:15:19.820\nSo let me jump back over to my routers,\nand\n\n290\n00:15:19.820 --> 00:15:22.785\nwe'll get a chance to kinda\nsee this in action, right?\n\n291\n00:15:22.785 --> 00:15:26.325\nSo on my routers, if I jump up to\nheadquarters, and let's say I create\n\n292\n00:15:26.325 --> 00:15:29.811\na couple of external routes here\non my headquarters router, right?\n\n293\n00:15:29.811 --> 00:15:33.972\nGoing back to my Visio topology here,\nheadquarters has some connections to some\n\n294\n00:15:33.972 --> 00:15:36.846\nISPs, and so maybe I redistribute\na couple of routes and\n\n295\n00:15:36.846 --> 00:15:40.530\nadvertise them out to my branches,\nbranch 1, branch 2, branch 3.\n\n296\n00:15:40.530 --> 00:15:43.250\nI want them to know about how\nto get to these routes, okay?\n\n297\n00:15:43.250 --> 00:15:47.291\nWell, I can just jump into that router and\nonce I'm in here,\n\n298\n00:15:47.291 --> 00:15:51.968\nI can configure the routes, so\nI'll add a route for, like, 201,\n\n299\n00:15:51.968 --> 00:15:56.910\nI'm just gonna make up some networks,\nthese don't necessarily exist.\n\n300\n00:15:56.910 --> 00:15:59.702\nAnd I can point these at my ISP, right?\n\n301\n00:15:59.702 --> 00:16:06.023\nSo I would need to think of whatever\nthe IP address of the ISP was, right?\n\n302\n00:16:06.023 --> 00:16:09.643\nAnd so I can put that route in place,\nthen I\"ll put another route in for 202.\n\n303\n00:16:09.643 --> 00:16:14.085\nSo these are some static\nroutes that I'm creating, and\n\n304\n00:16:14.085 --> 00:16:20.010\nfrom here I can then go into OSPF and\nI can say redistribute static.\n\n305\n00:16:20.010 --> 00:16:23.900\nSo I'm redistributing static routes in and\nthen I can specify,\n\n306\n00:16:23.900 --> 00:16:27.360\nI can override the metric if I want,\nand I can specify the metric type.\n\n307\n00:16:28.450 --> 00:16:31.080\nNow I'm not going to do that,\ncuzI want to leave it at the default.\n\n308\n00:16:31.080 --> 00:16:34.220\nBut I am going to add in one more command\nhere, I'm going to add in subnets.\n\n309\n00:16:34.220 --> 00:16:36.710\nSo I'm going to redistribute\nstatic subnets.\n\n310\n00:16:36.710 --> 00:16:40.590\nAnd when I do that, it's going\nto take those two static routes,\n\n311\n00:16:40.590 --> 00:16:44.310\nit's gonna bring them into OSPF,\nit's gonna observe their subnet mask.\n\n312\n00:16:44.310 --> 00:16:46.720\nThat's kind of important if you're\nnot following classical boundaries.\n\n313\n00:16:46.720 --> 00:16:51.730\nAnd then it's gonna redistribute them\nin OSPF and they'll be OE2 routes.\n\n314\n00:16:51.730 --> 00:16:54.460\nIf you don't specify a metric,\nit defaults to OE2.\n\n315\n00:16:54.460 --> 00:16:57.630\nAnd OE2 is the fixed metric.\n\n316\n00:16:57.630 --> 00:17:00.238\nSo, here on headquarters it's not\ngonna look any different, right?\n\n317\n00:17:00.238 --> 00:17:03.100\nCuz the static route is\nwhat's gonna make it in here.\n\n318\n00:17:03.100 --> 00:17:07.750\nSo when I look at my routing table,\nI should see those static routes and, or\n\n319\n00:17:07.750 --> 00:17:09.800\nwait did I pick a gateway,\nI don't have access to?\n\n320\n00:17:09.800 --> 00:17:10.690\nShoot, I did.\n\n321\n00:17:10.690 --> 00:17:12.570\nLet me fix that.\n\n322\n00:17:15.230 --> 00:17:21.419\nI pointed to a gateway that I can't get\nto, so let me point to this guy instead.\n\n323\n00:17:22.670 --> 00:17:29.374\nLet me just fix those routes real quick\nand point them to a real gateway.\n\n324\n00:17:29.374 --> 00:17:30.494\nThere we go.\n\n325\n00:17:30.494 --> 00:17:31.900\nAnd now these will make\nit into my routing table.\n\n326\n00:17:31.900 --> 00:17:33.705\nRemember if a route doesn't\nmake it in your routing table,\n\n327\n00:17:33.705 --> 00:17:35.158\nyou're not going to redistribute it,\nright?\n\n328\n00:17:35.158 --> 00:17:36.234\nIt's gotta make it into the routing table.\n\n329\n00:17:36.234 --> 00:17:37.880\nSo always a good idea to check that.\n\n330\n00:17:39.040 --> 00:17:39.850\nSo if I look, there we go.\n\n331\n00:17:39.850 --> 00:17:42.550\nNow they're in my routing table, so\nI'm gonna be redistributing them.\n\n332\n00:17:42.550 --> 00:17:46.777\nIf I jump over to my other routers,\nthey should have already received it.\n\n333\n00:17:46.777 --> 00:17:49.895\nAnd so if I take a look at\nmy routing table here, and\n\n334\n00:17:49.895 --> 00:17:53.477\nI'll it filter down to just OSPF,\nI should find in here.\n\n335\n00:17:53.477 --> 00:17:56.009\nThere they are, OE2s.\n\n336\n00:17:56.009 --> 00:17:59.408\nAnd notice the metric, the metric is 20.\n\n337\n00:17:59.408 --> 00:18:04.280\nWell OE2 is the default network type,\n20 is the default metric.\n\n338\n00:18:04.280 --> 00:18:07.000\nSo when I redistributed them,\nit redistributed them as a 20.\n\n339\n00:18:07.000 --> 00:18:09.800\nI could've over ridden that\nin the redistribute command,\n\n340\n00:18:09.800 --> 00:18:11.750\nyou had the ability to\nspecify the metric there.\n\n341\n00:18:11.750 --> 00:18:13.370\nOr I can change the default metric.\n\n342\n00:18:13.370 --> 00:18:17.200\nIf I jump back to headquarters I\ncan go under router ospf 1 and\n\n343\n00:18:17.200 --> 00:18:22.510\nI can say default-metric and\nspecify a value, I'll specify ten, right.\n\n344\n00:18:22.510 --> 00:18:25.230\nNow, those redistributed routes\nwill have a new metric of ten,\n\n345\n00:18:25.230 --> 00:18:29.760\nand if I jump back out to my branch\nrouter here, it may take it a moment but\n\n346\n00:18:29.760 --> 00:18:31.330\nit should pick it up pretty quick.\n\n347\n00:18:31.330 --> 00:18:33.620\nAlready done, so it's got a metric of ten.\n\n348\n00:18:33.620 --> 00:18:35.998\nSo that's where it's getting\nthat default metric.\n\n349\n00:18:35.998 --> 00:18:40.200\nAnd then it's not changing, taking\ninto account each hop along the way.\n\n350\n00:18:40.200 --> 00:18:43.030\nIf I go back to headquarters and\n\n351\n00:18:43.030 --> 00:18:47.950\ntake that redistribute command that I did,\nI can actually go in here and\n\n352\n00:18:47.950 --> 00:18:53.250\nsay metric-type,\nwhoops I can't spell it but I can type it.\n\n353\n00:18:53.250 --> 00:18:54.110\nAnd you can override it.\n\n354\n00:18:54.110 --> 00:18:57.678\nNow metric type two is kinda pointless to\ntype that one because that's the default.\n\n355\n00:18:57.678 --> 00:19:01.970\nBut metric-type 1,\nthat's gonna override it and\n\n356\n00:19:01.970 --> 00:19:05.030\nnow they're gonna become OE1s and\nthey're gonna take into account\n\n357\n00:19:05.030 --> 00:19:09.030\nthe bandwidth of the links in between us\njust trying to get to the border router.\n\n358\n00:19:09.030 --> 00:19:11.020\nAnd so\nnow when I jump out to branch three and\n\n359\n00:19:11.020 --> 00:19:13.020\nI take a look at that same routing table.\n\n360\n00:19:14.160 --> 00:19:15.310\nThere they are.\n\n361\n00:19:15.310 --> 00:19:16.090\nThey're OE1s.\n\n362\n00:19:16.090 --> 00:19:18.650\nAnd it's not a metric of 10 anymore.\n\n363\n00:19:18.650 --> 00:19:19.590\nNow it's a metric of 84.\n\n364\n00:19:20.680 --> 00:19:24.940\nAnd that metric of 84, it was 10 when it\nwas it was redistributed and then the link\n\n365\n00:19:24.940 --> 00:19:29.850\nfor me just to get to the border router\ngot that value of an additional, 74 or\n\n366\n00:19:29.850 --> 00:19:31.550\nwhatever, got us up to that 84.\n\n367\n00:19:31.550 --> 00:19:32.650\nAnd that's our new metric.\n\n368\n00:19:32.650 --> 00:19:34.907\nSo OE1 is more accurate, but\nwe have to calculate it.\n\n369\n00:19:36.180 --> 00:19:39.720\nNow, that's pretty straight forward\nright there getting it set up.\n\n370\n00:19:39.720 --> 00:19:45.850\nWhere it gets tricky is what if you want\nsome routes to be OE1 and some to be OE2?\n\n371\n00:19:46.850 --> 00:19:50.200\nWell, when you redistribute,\nyou don't have that option, do you?\n\n372\n00:19:50.200 --> 00:19:53.650\nWhen I redistribute it, I can just\npick the metric type and that was it.\n\n373\n00:19:53.650 --> 00:19:57.830\nSo, let's say that I really did want\none of them to be metric type 1 and\n\n374\n00:19:57.830 --> 00:19:59.330\nthe other to be metric type 2.\n\n375\n00:19:59.330 --> 00:20:03.060\nWell, you can use a route\nmap to assign that.\n\n376\n00:20:03.060 --> 00:20:06.630\nSo, using a route map, I know we've\ncovered route maps in other episodes, but\n\n377\n00:20:06.630 --> 00:20:09.000\nif you haven't seen it, I'm gonna\nshow you right here how to make them.\n\n378\n00:20:09.000 --> 00:20:11.020\nRoute maps can be a little complex.\n\n379\n00:20:11.020 --> 00:20:12.630\nIn this scenario, it's not so bad.\n\n380\n00:20:12.630 --> 00:20:15.230\nWhat I need to do,\nis I need to create some access lists,\n\n381\n00:20:15.230 --> 00:20:19.340\nthat identify what networks I want to be\nOE1, and what networks I want to be OE2s.\n\n382\n00:20:19.340 --> 00:20:23.480\nAll right, and then I can make a route\nmap that says any route that matches\n\n383\n00:20:23.480 --> 00:20:26.220\nthe first ACL, make it an OE1.\n\n384\n00:20:26.220 --> 00:20:28.800\nAnd any route that matches the second ACL,\nmake it an OE2.\n\n385\n00:20:29.920 --> 00:20:32.360\nSo I'm gonna wrap up a quick\nroute map that does that but\n\n386\n00:20:32.360 --> 00:20:33.670\nI'm gonna create my ACLs first.\n\n387\n00:20:33.670 --> 00:20:35.080\nAlways a good idea to start there.\n\n388\n00:20:35.080 --> 00:20:39.200\nNow ACLs, when it comes to\ndealing with networks, are weird.\n\n389\n00:20:39.200 --> 00:20:44.430\nBecause ACLs normally are talking about\nsource traffic or destination traffic.\n\n390\n00:20:44.430 --> 00:20:46.063\nWell when I talk about a route,\nwhat the heck it that?\n\n391\n00:20:46.063 --> 00:20:47.000\nSource or destination?\n\n392\n00:20:47.000 --> 00:20:49.500\n>> Don't know.\n>> You don't really know, right?\n\n393\n00:20:49.500 --> 00:20:53.860\nSo what happens is Cisco just kinda fakes\nit, and says we'll treat it as a source.\n\n394\n00:20:53.860 --> 00:20:58.460\nSo I can do an old-school, standard ACL\ninstead of having to do something really,\n\n395\n00:20:58.460 --> 00:20:59.430\nreally crazy.\n\n396\n00:20:59.430 --> 00:21:02.080\nAnd so I can just come in here and\ncreate a simple access list.\n\n397\n00:21:02.080 --> 00:21:06.220\nI'll say access-list 1, and\nI'm gonna use ACL 1 for\n\n398\n00:21:06.220 --> 00:21:10.760\nthe ones that I want to\nhave a type 1 metric type.\n\n399\n00:21:10.760 --> 00:21:14.090\nSo I'll say access-list 1 Permit.\n\n400\n00:21:14.090 --> 00:21:15.450\nAnd I'll specify the network.\n\n401\n00:21:15.450 --> 00:21:17.750\nAnd so I'm gonna do the 201 network.\n\n402\n00:21:17.750 --> 00:21:19.100\nAnd then for the wild card mask,\n\n403\n00:21:19.100 --> 00:21:21.409\nyou're just gonna do\nthe opposite of the subnet mask.\n\n404\n00:21:21.409 --> 00:21:26.012\nSo if this is a class C,\nthen I would do 0.0.0.25.\n\n405\n00:21:26.012 --> 00:21:29.260\nAnd then I would then add\nin any other networks.\n\n406\n00:21:29.260 --> 00:21:32.037\nI might have other networks that\nI want to add to that list and\n\n407\n00:21:32.037 --> 00:21:35.320\nnow we just continue to\nadd them to access-list 1.\n\n408\n00:21:35.320 --> 00:21:40.160\nAnd then I'll take access-list 2,\nI'll specify that other network, right.\n\n409\n00:21:40.160 --> 00:21:43.270\nAnd these are the ones that I'm gonna\nmake a metric type two and, again,\n\n410\n00:21:43.270 --> 00:21:44.620\nI can just continue to add more and\n\n411\n00:21:44.620 --> 00:21:49.010\nmore and more to that ACL all the ones\nthat I want to have a metric type two.\n\n412\n00:21:49.010 --> 00:21:50.850\nNow I can create my route map.\n\n413\n00:21:50.850 --> 00:21:52.530\nAnd so\nmy route map I need to give it a name.\n\n414\n00:21:52.530 --> 00:21:56.888\nI like to give it a name of\nsomething like into-ospf,\n\n415\n00:21:56.888 --> 00:21:58.840\nso that I can remember\nwhere I'm using this.\n\n416\n00:21:58.840 --> 00:22:01.870\nI'm using this for\nwhen I redistribute into OSPF.\n\n417\n00:22:01.870 --> 00:22:04.610\nCuz I might have route maps when\nI redistribute out of it, or\n\n418\n00:22:04.610 --> 00:22:06.920\nredistribute into EIGRP,\nthe other way around.\n\n419\n00:22:06.920 --> 00:22:10.340\nAnd it's a good way to name them\na way that we can kinda remember.\n\n420\n00:22:10.340 --> 00:22:13.480\nAnd I'm gonna do a permit line, and\nI'm gonna use sequence numbers here,\n\n421\n00:22:13.480 --> 00:22:15.370\ncuz you know,\nthe order is important for this stuff.\n\n422\n00:22:15.370 --> 00:22:16.930\nSo I'm gonna start with line ten.\n\n423\n00:22:16.930 --> 00:22:19.560\nAnd the first thing I'm\ngonna do is I'm gonna say,\n\n424\n00:22:21.490 --> 00:22:24.060\nmatch ip address 1, there we go.\n\n425\n00:22:24.060 --> 00:22:26.040\nI wanna match that ACL.\n\n426\n00:22:26.040 --> 00:22:30.470\nSo any route that I learn that matches ACL\n1, this is the line that's gonna hit it.\n\n427\n00:22:30.470 --> 00:22:32.000\nI'm gonna permit it, but\n\n428\n00:22:32.000 --> 00:22:36.200\nin addition to permitting it,\nI wanna set the metric type.\n\n429\n00:22:36.200 --> 00:22:40.980\nAnd you'll see where I can set the metric\ntype and I'll set it to a type 1.\n\n430\n00:22:40.980 --> 00:22:46.330\nSo anything that matches ACL 1,\nI'll set it to metric type 1.\n\n431\n00:22:46.330 --> 00:22:50.400\nThen I can do the same thing and\nso I'll do another permit line.\n\n432\n00:22:50.400 --> 00:22:52.380\nThis will be permit 20.\n\n433\n00:22:52.380 --> 00:22:57.890\nAnd this time, I'll match ip address 2,\nmatching the other ACL.\n\n434\n00:22:57.890 --> 00:23:03.030\nAnd I'll set the metric type to type 2.\n\n435\n00:23:03.030 --> 00:23:06.340\nNow, I could stop here but\nthere's a problem.\n\n436\n00:23:06.340 --> 00:23:10.280\nAnything that doesn't match those ACLs\nisn't gonna match these lines and\n\n437\n00:23:10.280 --> 00:23:11.480\nit's gonna get denied.\n\n438\n00:23:11.480 --> 00:23:15.830\nSo I need to add one more line which\nis just going to be a permit 30 and\n\n439\n00:23:15.830 --> 00:23:18.340\nI'm not gonna set anything.\n\n440\n00:23:18.340 --> 00:23:21.875\nIf you don't set any match statements it\nmatches everything, so every other route.\n\n441\n00:23:21.875 --> 00:23:24.930\nAnd then if you don't set any set commands\nthen it doesn't do anything to them.\n\n442\n00:23:24.930 --> 00:23:27.631\nIt says leave them alone, just bring\nthem in however you normally would,\n\n443\n00:23:27.631 --> 00:23:29.255\nin this case you would\nbe the default right?\n\n444\n00:23:29.255 --> 00:23:33.580\nThey become OE2s and\nthey would be sent along all happy.\n\n445\n00:23:33.580 --> 00:23:40.910\nSo my route map if I pull up that route\nmap, I've got the route map here,\n\n446\n00:23:40.910 --> 00:23:45.570\npermitting line 10, matching ACL 1,\nsetting the metric type to 1.\n\n447\n00:23:45.570 --> 00:23:50.980\nAnd then my permit 20 matches ACL 2,\nsets the metric type to 2 and\n\n448\n00:23:50.980 --> 00:23:54.280\nthe third one just matches\neverything else and let's it run.\n\n449\n00:23:54.280 --> 00:24:00.230\nIf we wanna look at that in the config,\nwe can pull it up and it looks like this.\n\n450\n00:24:00.230 --> 00:24:02.540\nIt's a little easier to read this way.\n\n451\n00:24:02.540 --> 00:24:04.040\nSo right here's where we,\n\n452\n00:24:04.040 --> 00:24:06.910\nwhoops, as I start to click on\nrandom things, there we go.\n\n453\n00:24:06.910 --> 00:24:09.740\nSo we do the permit,\nwe create that first one,\n\n454\n00:24:09.740 --> 00:24:11.770\nset it to type-1,\ndo the second one to type-2.\n\n455\n00:24:11.770 --> 00:24:13.480\nRight, so that's the route map.\n\n456\n00:24:13.480 --> 00:24:16.400\nNow I can use that route\nmap when I redistribute.\n\n457\n00:24:16.400 --> 00:24:20.550\nSo if I go back into OSPF,\nwhen I redistributed statics, right,\n\n458\n00:24:20.550 --> 00:24:23.360\nI said I wanted to pay attention\nto subnets, that's important.\n\n459\n00:24:23.360 --> 00:24:27.943\nBut then,\ninstead of setting the metric type,\n\n460\n00:24:27.943 --> 00:24:34.599\nI could've said route map and\npointed it to my route map, into OSPF.\n\n461\n00:24:34.599 --> 00:24:36.028\nSo I'm going to do that right there.\n\n462\n00:24:36.028 --> 00:24:38.281\nAnd that way, the routes come in and\n\n463\n00:24:38.281 --> 00:24:42.805\nI feed them through the route map\nfirst before I actually process them.\n\n464\n00:24:42.805 --> 00:24:45.285\nAnd that's gonna let me set the metric and\n\n465\n00:24:45.285 --> 00:24:47.745\nnow I can end up with the routes\nhaving different metrics.\n\n466\n00:24:48.815 --> 00:24:50.245\nNow I'm gonna give it just a second.\n\n467\n00:24:50.245 --> 00:24:51.825\nThat should happen pretty quickly though.\n\n468\n00:24:51.825 --> 00:24:53.795\nThese route maps apply very fast.\n\n469\n00:24:53.795 --> 00:24:55.115\nAnd so that should start updating that.\n\n470\n00:24:55.115 --> 00:24:56.505\nAnd I can just jump over\nto a branch router and\n\n471\n00:24:56.505 --> 00:24:58.395\nsee if it actually worked, right?\n\n472\n00:24:58.395 --> 00:25:05.190\nSo, if I do a show ip.ospf and I look for\nthose 201 and 202 networks, sure enough.\n\n473\n00:25:05.190 --> 00:25:08.620\nSee how that first one is in OE1 and\nthe second one is in OE2.\n\n474\n00:25:08.620 --> 00:25:13.530\nSo by using a route map, we can pick and\nchoose which routes become OE1.\n\n475\n00:25:13.530 --> 00:25:18.100\nWhich ones have that dynamic cost and\nthen which ones have the fixed.\n\n476\n00:25:18.100 --> 00:25:22.100\nSee how the OE2 still has\nthat default metric, but\n\n477\n00:25:22.100 --> 00:25:25.320\nthe OE1 now has the calculated metric.\n\n478\n00:25:25.320 --> 00:25:27.340\nSo you don't have to give\nup all your efficiency.\n\n479\n00:25:27.340 --> 00:25:31.026\nYou can say, I've only got one way to this\nroute, so let me just do it as an OE2, but\n\n480\n00:25:31.026 --> 00:25:33.926\nI've got multiple ways to this\nother route, let me get an OE1 and\n\n481\n00:25:33.926 --> 00:25:36.186\nnow my routers can make\nan intelligent decision.\n\n482\n00:25:36.186 --> 00:25:40.470\nIs it better to go out through ASBR number\none r go out through ASBR number 2?\n\n483\n00:25:40.470 --> 00:25:43.922\nThey'll know which one to go to\nbecause the metrics will be different.\n\n484\n00:25:43.922 --> 00:25:47.040\nThey'll pick the optimal path\nthat exits the autonomous system.\n\n485\n00:25:47.040 --> 00:25:48.560\nThat's what these networks are all about,\n\n486\n00:25:48.560 --> 00:25:50.930\nand that's why it's important to\nunderstand what their purpose is.\n\n487\n00:25:52.910 --> 00:25:54.690\nWell, Ronnie, did I leave anything out?\n\n488\n00:25:54.690 --> 00:25:56.060\nIt's the four routes, right?\n\n489\n00:25:56.060 --> 00:25:58.889\nSo unless we want to invent a fifth\none I think that's about all I've got.\n\n490\n00:25:58.889 --> 00:26:00.261\n>> [LAUGH] Yeah, let's not try to invent\nOSPF complexity than we need to, Don.\n\n491\n00:26:00.261 --> 00:26:03.946\n>> [LAUGH]\n>> But overall, though,\n\n492\n00:26:03.946 --> 00:26:07.754\nremember that in this episode, what we're\nreally trying to do is try to make sure\n\n493\n00:26:07.754 --> 00:26:10.450\nthat we understand there\nare multiple OSPF route types.\n\n494\n00:26:10.450 --> 00:26:13.232\nAnd yes, as CCMP candidates,\nyou need to know that and\n\n495\n00:26:13.232 --> 00:26:17.485\nwe need to be able to identify them and\nactually see how they're actually working.\n\n496\n00:26:17.485 --> 00:26:20.620\nAnd so Don showed us that and\nthat's a great place for us to begin.\n\n497\n00:26:20.620 --> 00:26:22.630\nPractice this stuff before\nyou go into the exam.\n\n498\n00:26:22.630 --> 00:26:24.860\nAnd so that wraps it up for\nour show today.\n\n499\n00:26:24.860 --> 00:26:26.190\nWe do thank you for watching.\n\n500\n00:26:26.190 --> 00:26:27.520\nI've been your host Ronnie Wong.\n\n501\n00:26:27.520 --> 00:26:28.503\n>> And I'm Don Pezet.\n\n502\n00:26:28.503 --> 00:26:29.997\n>> And we'll see you next time.\n\n503\n00:26:29.997 --> 00:26:35.610\n[MUSIC]\n\n",
          "vimeoId": "137632159"
        },
        {
          "description": "At the point where one's network gets bigger and has more traffic and communication on it, one will need to start dividing up their network into areas. Having deployment set up for just one area is easier from an administrative standpoint, but Cisco recommends splitting up into multiple areas when one’s network gets up to 50 routers. Viewers will hear about connecting to a multi and standard area OSPF and hear about the backbone area that acts as a transit network.",
          "length": "1279",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/ccnproute/cisco-ccnproute300101-3-26d-ospf_area_types-083115-1.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/ccnproute/cisco-ccnproute300101-3-26d-ospf_area_types-083115-1-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/ccnproute/cisco-ccnproute300101-3-26d-ospf_area_types-083115-1-sm.jpg",
          "title": "OSPF Area Types",
          "transcript": "WEBVTT\n\n1\n00:00:00.008 --> 00:00:05.199\nWelcome to another exciting\nepisode here on ITProTV.\n\n2\n00:00:05.199 --> 00:00:10.436\nToday we're taking a look at CCNP Route,\n\n3\n00:00:10.436 --> 00:00:15.376\nso if you're preparing for this exam,\n\n4\n00:00:15.376 --> 00:00:19.130\nthis is the right place to be.\n\n5\n00:00:19.130 --> 00:00:21.790\nCuz we're gonna be covering\na lot of good information.\n\n6\n00:00:21.790 --> 00:00:23.098\nI'm your host Ronnie Wong.\n\n7\n00:00:23.098 --> 00:00:25.060\nAnd here with me today is Mr. Don Pezet.\n\n8\n00:00:25.060 --> 00:00:25.800\nHow's it going?\n\n9\n00:00:25.800 --> 00:00:28.040\n>> It is going great, Ronnie,\nexcited to be back on this show.\n\n10\n00:00:28.040 --> 00:00:30.720\nAnd we're gonna be taking a look\nat a pretty important topic today.\n\n11\n00:00:30.720 --> 00:00:33.310\nWhich is OSPF area types.\n\n12\n00:00:33.310 --> 00:00:37.540\nNow most people are familiar with\nOSPF in a single area environment.\n\n13\n00:00:37.540 --> 00:00:38.530\nRight?\nSo you deploy OSPF,\n\n14\n00:00:38.530 --> 00:00:41.620\nyou put all your routers in the same area,\neverybody converges.\n\n15\n00:00:41.620 --> 00:00:43.200\nYou have one big, happy, shiny network.\n\n16\n00:00:43.200 --> 00:00:45.585\n>> [LAUGH]\n>> But, as your network grows,\n\n17\n00:00:45.585 --> 00:00:47.515\nit gets bigger, it gets bigger,\nbigger, bigger.\n\n18\n00:00:47.515 --> 00:00:49.265\nAnd you start getting a lot of traffic.\n\n19\n00:00:49.265 --> 00:00:50.725\nA lot of communication on the network.\n\n20\n00:00:50.725 --> 00:00:53.355\nIt takes longer for\nthe network to converge.\n\n21\n00:00:53.355 --> 00:00:57.880\nAnd so, at some point, you need to start\ndividing your network up into areas.\n\n22\n00:00:57.880 --> 00:01:01.060\nAnd when you do that,\nthere's more than one type of area, so\n\n23\n00:01:01.060 --> 00:01:01.930\nwe need to be aware of that.\n\n24\n00:01:01.930 --> 00:01:04.165\nNow, first off,\nlet me just throw out a little factoid.\n\n25\n00:01:04.165 --> 00:01:06.420\nCuz here's something that I've\nalways racked my brains over.\n\n26\n00:01:06.420 --> 00:01:08.360\nAnd always had a hard time\nfinding the answer for.\n\n27\n00:01:09.600 --> 00:01:10.730\nWhen do we make the decision?\n\n28\n00:01:10.730 --> 00:01:14.025\nWhich is, when do you decide it's\ntime to go to more than one area?\n\n29\n00:01:14.025 --> 00:01:18.000\nBecause I'll tell you, if you can do\nthe deployment in one area, you should.\n\n30\n00:01:18.000 --> 00:01:20.198\nRight, it's easier,\njust from an administrative standpoint.\n\n31\n00:01:20.198 --> 00:01:23.010\nIt's easier to administer\nwhen you're all in one area.\n\n32\n00:01:23.010 --> 00:01:25.960\nBut Cisco's recommendation,\nnow it's not a hard-set thing, right.\n\n33\n00:01:25.960 --> 00:01:27.540\nYou can do this however you want.\n\n34\n00:01:27.540 --> 00:01:30.450\nBut Cisco's recommendation, is 50 routers.\n\n35\n00:01:30.450 --> 00:01:34.342\nWhen you hit 50 routers, that's the time\nto consider more than one area.\n\n36\n00:01:34.342 --> 00:01:36.520\nAll right.\nSo if you got less than 50 routers,\n\n37\n00:01:36.520 --> 00:01:39.370\na single-area OSPF deployment is fine for\nyou, that's what you want.\n\n38\n00:01:40.450 --> 00:01:43.370\nThe other thing is,\nas you start deploying areas,\n\n39\n00:01:43.370 --> 00:01:46.020\nyou're gonna have what are called\nborder routers, right?\n\n40\n00:01:46.020 --> 00:01:48.220\nOr ABRs, area border routers.\n\n41\n00:01:48.220 --> 00:01:53.620\nAn area border router is any router,\nthat connects two areas together.\n\n42\n00:01:53.620 --> 00:01:55.850\nAnd Cisco's recommendation there is that,\n\n43\n00:01:55.850 --> 00:01:59.200\nno router should connect\nmore than three areas.\n\n44\n00:01:59.200 --> 00:02:04.160\nSo if you have three areas, you could have\na single ABR and you'll be just fine.\n\n45\n00:02:04.160 --> 00:02:07.740\nBut if you have 10 areas,\nyou don't wanna have just one ABR.\n\n46\n00:02:07.740 --> 00:02:10.960\nYou wanna have more than one\nto kinda spread that load out.\n\n47\n00:02:10.960 --> 00:02:11.460\nRight?\n\n48\n00:02:11.460 --> 00:02:13.890\nAnd these are just recommendations,\nnot hard set.\n\n49\n00:02:13.890 --> 00:02:15.640\nIf you've got a Cisco 7200.\n\n50\n00:02:15.640 --> 00:02:20.300\nI myself have personally configured\n7200 to border on over 60 areas, and\n\n51\n00:02:20.300 --> 00:02:21.202\nit did it just fine.\n\n52\n00:02:21.202 --> 00:02:21.710\nRight?\n>> [LAUGH].\n\n53\n00:02:21.710 --> 00:02:23.460\n>> So you can do that.\n\n54\n00:02:23.460 --> 00:02:25.760\nBut the problem is that border router,\n\n55\n00:02:25.760 --> 00:02:29.710\nis now handling a lot of link\nstate announcements, for\n\n56\n00:02:29.710 --> 00:02:32.490\nindividual areas that it is a part of,\nand it can overwhelm the device.\n\n57\n00:02:32.490 --> 00:02:33.970\nIt just has to be beefy\nenough to handle it.\n\n58\n00:02:33.970 --> 00:02:35.047\nRight?\n\n59\n00:02:35.047 --> 00:02:37.780\nIf it's a 2800 series router,\nit probably can't do it.\n\n60\n00:02:37.780 --> 00:02:39.590\nA 2900 series maybe.\n\n61\n00:02:39.590 --> 00:02:40.740\nA 7200 definitely, right?\n\n62\n00:02:40.740 --> 00:02:42.810\nIt's all about the power of the router.\n\n63\n00:02:42.810 --> 00:02:46.870\nBut as a general rule of thumb,\n50 routers to an area.\n\n64\n00:02:46.870 --> 00:02:49.050\nAnd then no more than\nthree areas on an ABR.\n\n65\n00:02:49.050 --> 00:02:50.690\nThat's kinda the rule of thumb.\n\n66\n00:02:50.690 --> 00:02:53.240\nSo if you have less than 50 routers,\nsingle area.\n\n67\n00:02:53.240 --> 00:02:54.614\nJust do single area, you'll be fine, and\n\n68\n00:02:54.614 --> 00:02:56.420\nthat way you don't have to\nmess around with this stuff.\n\n69\n00:02:56.420 --> 00:03:00.810\nBut, if you have more than 50 routers,\nthen we need to start doing this.\n\n70\n00:03:00.810 --> 00:03:03.030\nNow there is one other time where\nwe might choose to do an area.\n\n71\n00:03:03.030 --> 00:03:05.380\nAnd that's if we want to\ndo route summarization.\n\n72\n00:03:05.380 --> 00:03:07.010\nIf you've got 10 routers.\n\n73\n00:03:07.010 --> 00:03:09.640\nBut your routing table is massive.\n\n74\n00:03:09.640 --> 00:03:12.584\nYou might wanna hide that massive routing\ntable from some of your individual\n\n75\n00:03:12.584 --> 00:03:15.770\nrouters, and the easiest way to\ndo that is with summarization.\n\n76\n00:03:15.770 --> 00:03:19.250\nIn in OSPF,\nyou can only summarize on your borders.\n\n77\n00:03:19.250 --> 00:03:22.060\nYou can only summarize when you're\ncrossing from one area to another.\n\n78\n00:03:22.060 --> 00:03:25.232\nIn other words, you can only\nsummarize on a border router, right.\n\n79\n00:03:25.232 --> 00:03:25.840\nOn an ABR.\nSo\n\n80\n00:03:25.840 --> 00:03:28.580\nif you have a single area,\nyou can't summarize anywhere.\n\n81\n00:03:28.580 --> 00:03:30.080\nThere's just no way to do it, right?\n\n82\n00:03:30.080 --> 00:03:31.620\nSo you might have a very small network,\n\n83\n00:03:31.620 --> 00:03:35.570\nbut choose to do areas anyway just to\nget benefits from summarization, right?\n\n84\n00:03:35.570 --> 00:03:39.800\nThe example I gave of the 7200 that\nI configured with over 60 areas,\n\n85\n00:03:39.800 --> 00:03:41.460\nit was specifically for summarization.\n\n86\n00:03:41.460 --> 00:03:42.260\nThat was why we did that.\n\n87\n00:03:42.260 --> 00:03:46.342\nSo, there's different times where you\nmight have to do something like that.\n\n88\n00:03:46.342 --> 00:03:47.770\nAll right.\nWell, what I'm gonna do is,\n\n89\n00:03:47.770 --> 00:03:48.900\nI'm gonna take my environment.\n\n90\n00:03:48.900 --> 00:03:51.600\nThe environment we've been kinda\nworking with this whole show.\n\n91\n00:03:51.600 --> 00:03:53.970\nAnd it's been single area up until now.\n\n92\n00:03:53.970 --> 00:03:57.171\nI'm gonna break it up into multiple areas,\nso you guys can see what happens and\n\n93\n00:03:57.171 --> 00:03:59.560\nsee the different behaviors\nof the different area types.\n\n94\n00:03:59.560 --> 00:04:01.130\nSo this is basically my topology.\n\n95\n00:04:01.130 --> 00:04:06.770\nI've got the headquarters, right which has\nthe 172.16.0.0 network attached to it.\n\n96\n00:04:06.770 --> 00:04:09.990\nAnd then it's got point to point frame\nrelay lines that are running out\n\n97\n00:04:09.990 --> 00:04:10.630\nto the branches.\n\n98\n00:04:10.630 --> 00:04:12.550\nBranch 1, branch 2, branch 3.\n\n99\n00:04:12.550 --> 00:04:14.590\nAnd in real life,\nthere might be 100 branches, right?\n\n100\n00:04:14.590 --> 00:04:16.300\nBut, in my environment I just have three.\n\n101\n00:04:16.300 --> 00:04:17.800\nAnd then each of them\nhave their own networks.\n\n102\n00:04:17.800 --> 00:04:21.970\n172.16.2, 172.16.4, and 16.6.\n\n103\n00:04:21.970 --> 00:04:24.250\nAnd notice that they're slash 23s, right?\n\n104\n00:04:24.250 --> 00:04:27.570\nSo I combined two class Cs out\nthere to create those networks.\n\n105\n00:04:27.570 --> 00:04:29.160\nSo this is the network that I have.\n\n106\n00:04:29.160 --> 00:04:31.580\nNow in real lifeland,\nif this is my whole network.\n\n107\n00:04:31.580 --> 00:04:34.060\nI got four routers just\na couple of networks.\n\n108\n00:04:34.060 --> 00:04:36.150\nWe just do one OSPF area and\nwe are done with it.\n\n109\n00:04:36.150 --> 00:04:36.920\nRight?\n\n110\n00:04:36.920 --> 00:04:39.620\nBut as our network grows,\nmaybe there's some need to summarize,\n\n111\n00:04:39.620 --> 00:04:42.420\nmaybe some need to control\nother routing entries.\n\n112\n00:04:42.420 --> 00:04:44.640\nAnd so I decided to go multi area.\n\n113\n00:04:44.640 --> 00:04:46.172\nSo I'm gonna start with branch 3 here.\n\n114\n00:04:46.172 --> 00:04:49.250\nI'm gonna take branch 3, and\nI'm gonna move it into its own area.\n\n115\n00:04:50.300 --> 00:04:53.820\nNow when you set up OSPF,\nyou can assign an area number, right?\n\n116\n00:04:53.820 --> 00:04:54.740\nAnd, I've kinda done that.\n\n117\n00:04:54.740 --> 00:04:59.350\nIf I go into my router,\nso here I am on branch 3.\n\n118\n00:04:59.350 --> 00:05:06.970\nAnd when I'm in branch 3, if I take\na look at my OSPF configuration, right?\n\n119\n00:05:06.970 --> 00:05:11.360\nWhat I've done is I've assigned\nthe interfaces to be in area 0.\n\n120\n00:05:11.360 --> 00:05:13.920\nAnd, I turned on OSPF and\nthat's it, right.\n\n121\n00:05:13.920 --> 00:05:16.160\nI haven't really done\nanything too crazy here.\n\n122\n00:05:16.160 --> 00:05:18.210\nI've just done a basic configuration.\n\n123\n00:05:18.210 --> 00:05:21.970\nWell, with this plate in place,\nwe're in area 0.\n\n124\n00:05:21.970 --> 00:05:24.660\nI could move it to another\narea very easily, right?\n\n125\n00:05:24.660 --> 00:05:29.470\nWe just go into any of our interfaces, and\nlike I will go into my loop back here.\n\n126\n00:05:29.470 --> 00:05:31.460\nAnd I can say, ip ospf 1,\n\n127\n00:05:31.460 --> 00:05:36.800\nwhich is the process number, area,\nand then an area number, okay?\n\n128\n00:05:36.800 --> 00:05:39.460\nNow, couple little facts\nabout the area numbers.\n\n129\n00:05:39.460 --> 00:05:42.380\nThe area number can be\nfrom 0 to 4.3 billion.\n\n130\n00:05:42.380 --> 00:05:42.910\nRight?\n\n131\n00:05:42.910 --> 00:05:45.450\nAny number in between, you can choose.\n\n132\n00:05:45.450 --> 00:05:49.750\nBut, it always represented,\nat least in the true OSPF standard.\n\n133\n00:05:49.750 --> 00:05:54.150\nAs a 32 bit dotted decimal notation,\njust like an IP address.\n\n134\n00:05:54.150 --> 00:05:57.903\nAnd so see how the areas listed here\nas A.B.C.D? Most people don't write it\n\n135\n00:05:57.903 --> 00:05:58.770\nthat way.\n\n136\n00:05:58.770 --> 00:06:04.670\nBut if I were to say ip ospf 1 area 1,\nthat would put me in area 1.\n\n137\n00:06:04.670 --> 00:06:09.560\nOr if I said 0.0.0.1 that\nwould put me in area 1 also.\n\n138\n00:06:09.560 --> 00:06:12.270\nIt's two different ways of\nwriting the same number.\n\n139\n00:06:12.270 --> 00:06:13.020\nAll right.\n\n140\n00:06:13.020 --> 00:06:16.192\nSo in the true OSPF standard,\nthis is the way that it's written,\n\n141\n00:06:16.192 --> 00:06:18.220\nas a dotted decimal notation, alright.\n\n142\n00:06:18.220 --> 00:06:23.600\nThe other thing is, the area numbers\nthemselves 0 through 4.3 billion.\n\n143\n00:06:23.600 --> 00:06:27.950\nWell, 1 through 4.3 billion\nare all treated equally.\n\n144\n00:06:27.950 --> 00:06:30.300\nBut 0 is special, okay.\n\n145\n00:06:30.300 --> 00:06:32.680\nZero is what is called the backbone area,\nall right?\n\n146\n00:06:32.680 --> 00:06:34.810\nIt's the only backbone area.\n\n147\n00:06:34.810 --> 00:06:37.250\nNo other area acts as a backbone.\n\n148\n00:06:37.250 --> 00:06:40.630\nAnd by backbone what I mean is,\nit's a transit network, all right.\n\n149\n00:06:40.630 --> 00:06:41.981\nIf I'm in Area 1.\n\n150\n00:06:41.981 --> 00:06:47.240\nAnd I have a border router that's\nbordering, Area 1 and Area 2.\n\n151\n00:06:47.240 --> 00:06:49.030\nThat border router will never get used.\n\n152\n00:06:49.030 --> 00:06:51.560\nTraffic is not allowed to\ngo from Area 1 to Area 2.\n\n153\n00:06:51.560 --> 00:06:53.340\nIt's not allowed.\n\n154\n00:06:53.340 --> 00:06:58.270\nTraffic is only allowed to transit to or\nfrom the backbone.\n\n155\n00:06:58.270 --> 00:07:01.430\nSo, Area 1 might transit to Area 0.\n\n156\n00:07:01.430 --> 00:07:04.680\nAnd Area 0 transits to Area 2, right?\n\n157\n00:07:04.680 --> 00:07:05.420\nThat works.\n\n158\n00:07:05.420 --> 00:07:08.320\nLet me go back to my diagram here,\nand I'll show you an example,\n\n159\n00:07:08.320 --> 00:07:10.960\nlike if we go and dice this up.\n\n160\n00:07:10.960 --> 00:07:14.540\nLet's say I dice each branch\nup into their own area, okay?\n\n161\n00:07:14.540 --> 00:07:18.400\nWell I've got Area 1 over here, Area 2,\n\n162\n00:07:18.400 --> 00:07:21.940\nArea 3 and\nheadquarters is up here in Area 0.\n\n163\n00:07:21.940 --> 00:07:24.620\nRemember areas are assigned\nper interface so\n\n164\n00:07:24.620 --> 00:07:26.590\na border router just has\ninterfaces in more than one area,\n\n165\n00:07:26.590 --> 00:07:30.640\nheadquarters here has interfaces in\nfour different areas, all right.\n\n166\n00:07:30.640 --> 00:07:31.923\nIf I'm in Area 1 and\n\n167\n00:07:31.923 --> 00:07:36.840\nI wanna contact a computer in Area 3,\nI can't just jump straight to Area 3.\n\n168\n00:07:36.840 --> 00:07:41.300\nThe traffic actually goes to Area 0 firs,\nand then goes to Area 3.\n\n169\n00:07:41.300 --> 00:07:42.350\nAll right.\n\n170\n00:07:42.350 --> 00:07:44.790\nArea 0 is the transit network.\n\n171\n00:07:44.790 --> 00:07:47.810\nIf you have ten areas, and\nnone of them are Area 0.\n\n172\n00:07:47.810 --> 00:07:49.642\nIf you just do like Area 1 through 10.\n\n173\n00:07:49.642 --> 00:07:51.373\nYou have no inter area traffic.\n\n174\n00:07:51.373 --> 00:07:52.220\nIt doesn't work.\n\n175\n00:07:52.220 --> 00:07:52.742\nRight.\n\n176\n00:07:52.742 --> 00:07:55.332\nYou have to border on to Area 0.\n\n177\n00:07:55.332 --> 00:07:57.822\nAn ABR, an area border router,\n\n178\n00:07:57.822 --> 00:08:02.440\nis a router that borders any area and\narea zero, right?\n\n179\n00:08:02.440 --> 00:08:06.470\nThere is no points in bordering between\narea one and area two, or area two and\n\n180\n00:08:06.470 --> 00:08:08.270\narea three, all right?\n\n181\n00:08:08.270 --> 00:08:11.210\nWe'll see an example in another episode\nwhere we talk about virtual links,\n\n182\n00:08:11.210 --> 00:08:14.060\na way that we can kind of make\nthat work in an emergency.\n\n183\n00:08:14.060 --> 00:08:18.105\nBut by default, no communications pass\nbetween areas other than to area zero,\n\n184\n00:08:18.105 --> 00:08:18.940\nall right?\n\n185\n00:08:18.940 --> 00:08:22.020\nSo if you're doing a single\narea OSPF deployment,\n\n186\n00:08:22.020 --> 00:08:23.470\nyou'll normally pick area zero, right?\n\n187\n00:08:23.470 --> 00:08:28.490\nThat's what you normally do, and\nthat's what I did here on my router,\n\n188\n00:08:28.490 --> 00:08:30.350\nis you'll see where I just\nput everything in area zero.\n\n189\n00:08:30.350 --> 00:08:31.990\nCuz I just did single area, right?\n\n190\n00:08:31.990 --> 00:08:34.500\nWhat do I care,\njust throw it all in the same, right?\n\n191\n00:08:34.500 --> 00:08:37.960\nBut in real life land,\nwe're gonna pick other area numbers and so\n\n192\n00:08:37.960 --> 00:08:38.980\nthings are gonna change a little bit.\n\n193\n00:08:38.980 --> 00:08:41.350\nRight?\nSo, as we start to divide this up,\n\n194\n00:08:41.350 --> 00:08:44.580\nI might want to move branch\nthree into area three.\n\n195\n00:08:44.580 --> 00:08:45.270\nOkay.\n\n196\n00:08:45.270 --> 00:08:48.710\nSo to do that I just go into each of the\ninterfaces that I want to participate in\n\n197\n00:08:48.710 --> 00:08:51.580\nOSPF, and I just move it into that area.\n\n198\n00:08:51.580 --> 00:08:57.730\nSo I'll go into serial 1/0.1 and\nI'll say ip opsf 1 area 3.\n\n199\n00:08:58.730 --> 00:09:05.120\nAnd I'll go into my e0/1,\nthat's my 172 out of 16 network.\n\n200\n00:09:05.120 --> 00:09:06.880\nAnd I'll put that into area three.\n\n201\n00:09:06.880 --> 00:09:10.330\nAnd just for good measure,\nI'll do my loop back also.\n\n202\n00:09:10.330 --> 00:09:11.610\nAnd I'll put that in area three.\n\n203\n00:09:11.610 --> 00:09:14.160\nOkay, now there's a lot of stuff\nhappening in the background here.\n\n204\n00:09:14.160 --> 00:09:18.790\nSee I've got like neighbors going down and\ninvalid packets, mismatched area IDs and\n\n205\n00:09:18.790 --> 00:09:21.050\nthat's because I configured\nthis end of the link, right.\n\n206\n00:09:21.050 --> 00:09:23.960\nGoing back to my diagram which is here.\n\n207\n00:09:23.960 --> 00:09:27.260\nI configured this end of the link but\nnot this end up here.\n\n208\n00:09:27.260 --> 00:09:29.310\nRight.\nSo the headquarters is still expecting me\n\n209\n00:09:29.310 --> 00:09:32.420\nto be in area zero and\nit's not matching so it's failing.\n\n210\n00:09:32.420 --> 00:09:33.010\nOkay.\n\n211\n00:09:33.010 --> 00:09:34.750\nSo that's whats gonna happen right now.\n\n212\n00:09:34.750 --> 00:09:35.790\nNow personally,\n\n213\n00:09:35.790 --> 00:09:39.540\nI've had some kind of quirky experiences\nhappen when changing OSPF areas.\n\n214\n00:09:39.540 --> 00:09:43.910\nSo whenever I change an OSPF area\nlike this, I always like to go and\n\n215\n00:09:43.910 --> 00:09:46.570\nclear the IP OSPF process, right?\n\n216\n00:09:46.570 --> 00:09:49.970\nAnd that just resets OSPF\ncompletely on this router.\n\n217\n00:09:49.970 --> 00:09:51.860\nIt will cause it to dump\nall of it's neighbors.\n\n218\n00:09:51.860 --> 00:09:53.270\nDump it's routing table.\n\n219\n00:09:53.270 --> 00:09:55.560\nAnd then rebuild all that stuff and\nget it in place.\n\n220\n00:09:55.560 --> 00:09:59.018\nI just like to do that, to get\neverything nice and clear, all right.\n\n221\n00:09:59.018 --> 00:10:03.360\nAnd then I'm gonna jump over to\nheadquarters and I'm gonna fix area three.\n\n222\n00:10:03.360 --> 00:10:06.870\nSo, see how I'm getting warnings here for\nthat neighborship going down?\n\n223\n00:10:06.870 --> 00:10:10.200\nThe adjacency is down, and\nit didn't come back up, did it?\n\n224\n00:10:10.200 --> 00:10:13.400\nBut this is nice cuz I can see exactly\nwhat interface I need to work with.\n\n225\n00:10:13.400 --> 00:10:18.840\nI can jump into that interface, oops,\n\n226\n00:10:18.840 --> 00:10:20.610\nI can get into interface,\nthat's where I need to be.\n\n227\n00:10:21.680 --> 00:10:25.630\nAnd I can just say,\nip ospf 1 area 3, right.\n\n228\n00:10:25.630 --> 00:10:28.820\nThe process id is one, I don't really care\nabout that, I just need to remember what\n\n229\n00:10:28.820 --> 00:10:32.280\nit is, and then area three, I'm moving\nthat interface into area three and\n\n230\n00:10:32.280 --> 00:10:35.900\nI should build a relationship up with\nthat other router and now I'm connected.\n\n231\n00:10:35.900 --> 00:10:37.992\nAll right.\nI'm gonna change my router ids to\n\n232\n00:10:37.992 --> 00:10:39.928\nkinda get this a little bit more clear.\n\n233\n00:10:39.928 --> 00:10:45.596\nSo, I'm gonna set my headquarters to\nhave a router-id of 0.0.0.1, right?\n\n234\n00:10:45.596 --> 00:10:50.510\nIt's actually telling me to clear the IP\nprocess now, so I'll wipe that real quick.\n\n235\n00:10:50.510 --> 00:10:53.090\nAnd I'm gonna do the same thing\nover here on branch three.\n\n236\n00:10:53.090 --> 00:10:59.884\nI'm gonna make it something that\nwill be easier for me to spot.\n\n237\n00:10:59.884 --> 00:11:04.570\nSo I'll make it, let's see it's branch\nthree, so I'll make it 3.3.3.3.\n\n238\n00:11:04.570 --> 00:11:08.308\nAnd we'll clear that out.\n\n239\n00:11:08.308 --> 00:11:09.470\nAll right, whoops.\n\n240\n00:11:09.470 --> 00:11:12.730\nIt's always a good idea to\nhave some clear process.\n\n241\n00:11:12.730 --> 00:11:16.150\nI mean a router id set so\nit's easy to tell your routers apart.\n\n242\n00:11:16.150 --> 00:11:19.280\nMy other two routers,\nthey're still in area zero, right?\n\n243\n00:11:19.280 --> 00:11:24.290\nSo I'm not too worried about them, but\nI'll go ahead set their router id's also,\n\n244\n00:11:24.290 --> 00:11:26.480\njust to make sure I\ndon't mix up my routers.\n\n245\n00:11:27.740 --> 00:11:29.350\nAnd that'll be all nice and\nclear when we're done.\n\n246\n00:11:31.460 --> 00:11:32.782\nAll right, one more to go.\n\n247\n00:11:32.782 --> 00:11:33.520\nAll right, but this point,\n\n248\n00:11:33.520 --> 00:11:37.770\nwhat's happening is router three is now\nin a different area, and so when it's in\n\n249\n00:11:37.770 --> 00:11:41.130\na different area, it's now gonna be\nseeing things a little bit differently.\n\n250\n00:11:41.130 --> 00:11:46.110\nNow, all I did was issue\nthe area three command.\n\n251\n00:11:46.110 --> 00:11:49.810\nAnd so what I did is I put branch three\ninto what's called a standard area.\n\n252\n00:11:49.810 --> 00:11:55.670\nA standard area is just the default\narea type that we expect in OSPF, right?\n\n253\n00:11:55.670 --> 00:11:58.430\nSo nothing too crazy going on there.\n\n254\n00:11:58.430 --> 00:12:00.010\nIt's gonna behave like normal.\n\n255\n00:12:00.010 --> 00:12:04.050\nNow a normal area, really,\nit's not too crazy different.\n\n256\n00:12:04.050 --> 00:12:06.850\nYou're still gonna receive all the routes\nfor your entire environment, but\n\n257\n00:12:06.850 --> 00:12:10.750\nwhat's different is when you receive\nthose routes from the other areas,\n\n258\n00:12:10.750 --> 00:12:13.250\nyou're only receiving them\nfrom the border router.\n\n259\n00:12:13.250 --> 00:12:16.550\nI'm no longer talking to all the other\nneighbors that are out there.\n\n260\n00:12:16.550 --> 00:12:21.410\nIn a normal router, if you're in just\none area, everybody's in area zero.\n\n261\n00:12:21.410 --> 00:12:24.940\nWe can look at our link state database and\nyou'll see link states for\n\n262\n00:12:24.940 --> 00:12:27.440\nthe routers all the way\nacross your environment.\n\n263\n00:12:27.440 --> 00:12:28.470\nEverybody in area zero.\n\n264\n00:12:28.470 --> 00:12:32.910\nBut when we put ourselves into an area\nwe're only going to see link states for\n\n265\n00:12:32.910 --> 00:12:35.000\nthe other people in our area.\n\n266\n00:12:35.000 --> 00:12:37.920\nAnd any other link states\ncan be from other areas\n\n267\n00:12:37.920 --> 00:12:40.860\nare going to come in as summaries\nthrough the border router.\n\n268\n00:12:40.860 --> 00:12:45.010\nSo our link state database becomes much,\nmuch smaller.\n\n269\n00:12:45.010 --> 00:12:46.780\nGoing back to my diagram.\n\n270\n00:12:46.780 --> 00:12:50.260\nBefore branch three was aware\nof every router out there and\n\n271\n00:12:50.260 --> 00:12:52.040\nall the links that were on them.\n\n272\n00:12:52.040 --> 00:12:56.240\nNow branch three is aware of headquarters,\nwhere we're bordered.\n\n273\n00:12:56.240 --> 00:12:57.930\nAnd it knows about all\nthose links out there, but\n\n274\n00:12:57.930 --> 00:12:59.870\nit sees them through headquarters.\n\n275\n00:12:59.870 --> 00:13:03.840\nSo its link state database shrinks,\nbut it still has all those routes.\n\n276\n00:13:03.840 --> 00:13:05.740\nThe routes just look\na little bit different.\n\n277\n00:13:05.740 --> 00:13:10.510\nIf I take a look at the router three\nhere and do a show ip route ospf, I\n\n278\n00:13:10.510 --> 00:13:14.640\nstill have the routes to everybody else's\nnetworks, but see how they're O IA's now?\n\n279\n00:13:15.755 --> 00:13:18.495\nPrior to that they were just O, right?\n\n280\n00:13:18.495 --> 00:13:21.475\nO meant they were OSPF routes,\nthey were in the same area as me,\n\n281\n00:13:21.475 --> 00:13:24.635\nI just learned them,\nthey're intra area routes.\n\n282\n00:13:24.635 --> 00:13:26.915\nWell, now they're inter area.\n\n283\n00:13:26.915 --> 00:13:28.680\nI'm learning them from another area.\n\n284\n00:13:28.680 --> 00:13:30.070\nBut they're still here, right.\n\n285\n00:13:30.070 --> 00:13:33.620\nThe difference is that I just learned\nthem via headquarters, right.\n\n286\n00:13:33.620 --> 00:13:35.770\nThat IP right there is where\nI'm pulling that from.\n\n287\n00:13:35.770 --> 00:13:38.080\nI'm getting it from headquarters and\nthat's where they are.\n\n288\n00:13:38.080 --> 00:13:40.220\nSo if I leave it just like this.\n\n289\n00:13:41.260 --> 00:13:43.630\nI've made my link state database smaller,\nbut\n\n290\n00:13:43.630 --> 00:13:46.270\nmy routing table is the exact same size.\n\n291\n00:13:46.270 --> 00:13:48.350\nMy routing table hasn't gotten bigger or\nsmaller.\n\n292\n00:13:48.350 --> 00:13:51.120\nAll that's different now is these\ninter-area routes are flagged as OIA.\n\n293\n00:13:51.120 --> 00:13:51.780\nRight?\n\n294\n00:13:51.780 --> 00:13:54.020\nSo as far as performance is concerned,\n\n295\n00:13:54.020 --> 00:13:58.760\nrouting performance is really unaffected,\nbut OSPF calculations are much faster now.\n\n296\n00:13:58.760 --> 00:14:00.221\nWhen we run that algorithm, right?\n\n297\n00:14:00.221 --> 00:14:03.775\nWhen we look at that link state database\nand do our calculations, that's gonna\n\n298\n00:14:03.775 --> 00:14:07.255\nhappen much faster now because this\nlink state database is smaller.\n\n299\n00:14:07.255 --> 00:14:10.375\nAnd, if we do a show IP OSPF database.\n\n300\n00:14:11.475 --> 00:14:14.465\nWe can look in here, and I'll see\nI've got these router link states.\n\n301\n00:14:14.465 --> 00:14:16.595\nThose are LSA type one's, right?\n\n302\n00:14:16.595 --> 00:14:20.825\nThen we've got our summaries,\nthose type two's, and that's it right?\n\n303\n00:14:20.825 --> 00:14:22.925\nI don't see anything\nelse crazy beyond that,\n\n304\n00:14:22.925 --> 00:14:27.800\nbecause I don't have any exits to\nmy network yet, and all of that.\n\n305\n00:14:27.800 --> 00:14:30.310\nBut I'm in a normal area, and\nI'm pulling in information.\n\n306\n00:14:30.310 --> 00:14:32.230\nLet's create some more\nadvanced networks here and\n\n307\n00:14:32.230 --> 00:14:33.970\nsee how they show up in a standard area.\n\n308\n00:14:33.970 --> 00:14:38.890\nIf I go back to headquarters, I'm going\nto create some external routes, right, so\n\n309\n00:14:38.890 --> 00:14:43.020\non headquarters, I'm going to say,\nip route, we'll create two networks,\n\n310\n00:14:43.020 --> 00:14:45.900\nthe 201 network and the 202 network.\n\n311\n00:14:45.900 --> 00:14:48.887\nSo these are just some fake\nnetworks I'm going to make up and\n\n312\n00:14:48.887 --> 00:14:52.788\nI'm going to route them out to one of my\nISPs, so we'll send that to this guy.\n\n313\n00:14:54.794 --> 00:14:56.160\nThere.\nThen I'll create another one\n\n314\n00:14:56.160 --> 00:14:57.540\njust to have them.\n\n315\n00:14:57.540 --> 00:15:01.100\nAnd, I'm going to\nredistribute these into OSPF.\n\n316\n00:15:01.100 --> 00:15:04.810\nAll right, so I'm going to say,\nredistribute static and\n\n317\n00:15:04.810 --> 00:15:07.400\nI'll redistribute that into OSPF.\n\n318\n00:15:07.400 --> 00:15:12.140\nI'm gonna obey the subnets, and\nlet me set the metric type to one.\n\n319\n00:15:14.020 --> 00:15:14.940\nThere.\nAll right.\n\n320\n00:15:14.940 --> 00:15:17.440\nSo, I'm now bringing\nthose routes into OSPF.\n\n321\n00:15:17.440 --> 00:15:21.200\nAnd headquarters is a part of\nall these different areas.\n\n322\n00:15:21.200 --> 00:15:22.970\nAnd so now that's getting redistributed.\n\n323\n00:15:22.970 --> 00:15:25.360\nAnd all the different areas\nshould see that right?\n\n324\n00:15:25.360 --> 00:15:29.680\nIf I take a look at branch one,\nbranch one is entirely in area zero.\n\n325\n00:15:29.680 --> 00:15:32.170\nAnd if I look at it's routing table right,\nright,\n\n326\n00:15:32.170 --> 00:15:33.610\nhere's the routes that are in place.\n\n327\n00:15:33.610 --> 00:15:35.490\nAnd actually I'm not\nseeing those statics yet.\n\n328\n00:15:35.490 --> 00:15:36.170\nDid they not go active?\n\n329\n00:15:36.170 --> 00:15:37.170\nI want to make sure.\n\n330\n00:15:37.170 --> 00:15:40.163\nIf they don't make it into my routing\ntable then they're definitely not going to\n\n331\n00:15:40.163 --> 00:15:41.273\nmake it into somebody elses.\n\n332\n00:15:41.273 --> 00:15:44.848\nSo if I look at my routing\ntable they did not make it in.\n\n333\n00:15:44.848 --> 00:15:45.987\nDid I point it to a bad IP?\n\n334\n00:15:45.987 --> 00:15:46.648\n>> I think you did.\n\n335\n00:15:46.648 --> 00:15:47.867\nI think yours is 209.\n\n336\n00:15:47.867 --> 00:15:49.329\nI barely can see it.\n\n337\n00:15:49.329 --> 00:15:49.991\nI think.\n\n338\n00:15:49.991 --> 00:15:51.222\nI say 204.\n\n339\n00:15:51.222 --> 00:15:52.023\n>> [LAUGH] It is,\nI pointed the wrong one, yeah.\n\n340\n00:15:52.023 --> 00:15:55.586\nIf you don't point it to a valid IP,\nthe route's not gonna come up and\n\n341\n00:15:55.586 --> 00:15:57.320\nit's not gonna get advertised.\n\n342\n00:15:57.320 --> 00:15:58.320\nSo, let me fix that.\n\n343\n00:15:58.320 --> 00:15:59.800\nI think I did that in another episode too.\n\n344\n00:15:59.800 --> 00:16:02.120\nThis is going to be my consistent error.\n\n345\n00:16:02.120 --> 00:16:03.340\nThere we go.\n\n346\n00:16:03.340 --> 00:16:09.780\nAll right, so\nLet me just make sure that showed up.\n\n347\n00:16:11.310 --> 00:16:13.490\nAnd there we are.\n\n348\n00:16:13.490 --> 00:16:14.710\nAt least the 201's in there.\n\n349\n00:16:14.710 --> 00:16:16.590\nSo now that route's made\nit into my routing table.\n\n350\n00:16:16.590 --> 00:16:19.280\nIf I jump over to branch one, and\nI take a look at its OSPF routes,\n\n351\n00:16:19.280 --> 00:16:19.900\nthere they are, right.\n\n352\n00:16:19.900 --> 00:16:22.948\nThere's those two O E1 routes\nthat are coming in, right.\n\n353\n00:16:22.948 --> 00:16:25.690\nThey're O E1 because they're\noriginating from outside\n\n354\n00:16:25.690 --> 00:16:28.710\nof my OSPF autonomous system, right.\n\n355\n00:16:28.710 --> 00:16:30.620\nI get that because I'm in area zero,\nright.\n\n356\n00:16:30.620 --> 00:16:32.955\nBranch one's in area zero,\nit learns it that way.\n\n357\n00:16:32.955 --> 00:16:34.640\nLet's see how branch three learns it.\n\n358\n00:16:34.640 --> 00:16:38.040\nBranch three is entirely in area three,\nit's in a different area.\n\n359\n00:16:38.040 --> 00:16:43.800\nAnd so if I do a show IP route OSPF,\nwell, there they are, right?\n\n360\n00:16:43.800 --> 00:16:46.630\nA standard area learns internal and\n\n361\n00:16:46.630 --> 00:16:48.680\nexternal routes just like any other route,\nright?\n\n362\n00:16:48.680 --> 00:16:50.140\nI mean it identifies them, right?\n\n363\n00:16:50.140 --> 00:16:51.730\nWe've got these inter area routes,\n\n364\n00:16:51.730 --> 00:16:55.840\nwe've got the E1s, but at the end of\nthe day they're treated the same.\n\n365\n00:16:55.840 --> 00:16:57.810\nNotice their admin distance is the same,\nright.\n\n366\n00:16:57.810 --> 00:16:59.500\nThat's a little bit different than EIGRP,\n\n367\n00:16:59.500 --> 00:17:03.330\nwhich has different admin distances for\nexternal versus internal.\n\n368\n00:17:03.330 --> 00:17:06.020\nIn OSPF, external,\ninternal are all treated the same.\n\n369\n00:17:06.020 --> 00:17:08.670\nNow that does create\na little bit of a problem.\n\n370\n00:17:08.670 --> 00:17:11.990\nBecause in EIGRP we have a difference\nbetween external and internal routes.\n\n371\n00:17:11.990 --> 00:17:14.250\nAnd so EIGRP can tell the difference and\n\n372\n00:17:14.250 --> 00:17:18.740\nit can apply more preference to\ninternal versus external and so on.\n\n373\n00:17:18.740 --> 00:17:20.220\nOSPF doesn't do that.\n\n374\n00:17:20.220 --> 00:17:23.660\nSo in OSPF, what we have are four\n\n375\n00:17:23.660 --> 00:17:27.970\nspecial area types that we can implement\nthat manipulate this behavior.\n\n376\n00:17:27.970 --> 00:17:30.230\nThat changes the way that it works,\nall right?\n\n377\n00:17:30.230 --> 00:17:33.630\nAnd it effects how these\nroutes are being learned and\n\n378\n00:17:33.630 --> 00:17:35.720\nit makes a big difference, okay.\n\n379\n00:17:35.720 --> 00:17:39.810\nSo be aware of that and we're gonna see\nthose different area types in another\n\n380\n00:17:39.810 --> 00:17:44.370\nepisode, but they do kinda manipulate\nthat behavior and change what we see.\n\n381\n00:17:44.370 --> 00:17:48.020\nA standard area serves\na particular purpose.\n\n382\n00:17:48.020 --> 00:17:51.080\nAnd that particular purpose isn't\nnecessarily to apply route preference.\n\n383\n00:17:51.080 --> 00:17:55.750\nIt's to provide order but\nalso to shrink your link-state database.\n\n384\n00:17:55.750 --> 00:17:57.646\nThat's the real reason why we do this.\n\n385\n00:17:57.646 --> 00:18:02.350\nTwo main reasons, on the exam and in real\nlife, two main reasons we do areas, right.\n\n386\n00:18:02.350 --> 00:18:04.210\nOne is to shrink the link state database.\n\n387\n00:18:04.210 --> 00:18:07.460\nYou get over 50 routers, the link state\ndatabase starts getting really big.\n\n388\n00:18:07.460 --> 00:18:09.990\nAreas will fix that,\nshrinks the link state database.\n\n389\n00:18:09.990 --> 00:18:12.430\nAnd then the other one,\nroute summarization.\n\n390\n00:18:12.430 --> 00:18:16.030\nIf I want to summarize routes,\nI can do it on an area border.\n\n391\n00:18:16.030 --> 00:18:17.840\nI can't do it anywhere\nelse in the network.\n\n392\n00:18:17.840 --> 00:18:19.990\nAnd we've seen summarization\nother episodes but\n\n393\n00:18:19.990 --> 00:18:23.710\nbasically we just summarize on the area,\nthe interface going into that area,\n\n394\n00:18:23.710 --> 00:18:25.650\nso that we get those smaller networks.\n\n395\n00:18:25.650 --> 00:18:28.720\nIt really makes life kind of easy.\n\n396\n00:18:28.720 --> 00:18:31.740\nBut that's basically a standard\narea right there, and\n\n397\n00:18:31.740 --> 00:18:35.350\nI can continue on to move my other\nbranches into their own areas.\n\n398\n00:18:35.350 --> 00:18:37.640\nAnd now they'll all start to\nsee things as inter-area.\n\n399\n00:18:37.640 --> 00:18:41.240\nYou know, right now branch one and\nbranch two are still in the same area.\n\n400\n00:18:41.240 --> 00:18:43.900\nSo, they're seeing\nthe headquarters network, and\n\n401\n00:18:43.900 --> 00:18:46.530\nthemselves, as just regular O routes.\n\n402\n00:18:46.530 --> 00:18:51.042\nAnd they're seeing branch three as OIA,\nright, that inter-area link state.\n\n403\n00:18:51.042 --> 00:18:54.565\nThat's is coming in as a summary, so\nit's coming in as a, in this case,\n\n404\n00:18:54.565 --> 00:18:57.985\na type three, or a, well,\nwe'll see type fives later.\n\n405\n00:18:57.985 --> 00:19:00.276\nBut, yeah, so\nthat's basically how an area works, and\n\n406\n00:19:00.276 --> 00:19:02.265\nit's pretty straight forward right?\n\n407\n00:19:02.265 --> 00:19:04.855\nThe other key thing that we wanna\ntakeaway on this is that you've\n\n408\n00:19:04.855 --> 00:19:09.045\ngot to have an area zero,\nbecause otherwise two areas can't connect.\n\n409\n00:19:09.045 --> 00:19:14.390\nNow technically, if you have\na single-area OSPF environment,\n\n410\n00:19:14.390 --> 00:19:16.900\ncould I pick area five for my single area?\n\n411\n00:19:16.900 --> 00:19:18.400\nYeah, and it would work fine.\n\n412\n00:19:18.400 --> 00:19:20.860\nIf you just have one area it doesn't\nreally matter what number you pick,\n\n413\n00:19:20.860 --> 00:19:22.210\nyou could pick anything.\n\n414\n00:19:22.210 --> 00:19:23.920\nBut then down the road when you say ooh,\n\n415\n00:19:23.920 --> 00:19:26.990\nnetwork's gotten kind of big\nI need to add a second area.\n\n416\n00:19:26.990 --> 00:19:27.988\nWell you gotta have an area zero.\n\n417\n00:19:27.988 --> 00:19:31.260\nIf you're gonna have more than one area,\nyou have to have at least one area zero or\n\n418\n00:19:31.260 --> 00:19:33.970\nyou're not gonna have any\ntransit traffic whatsoever.\n\n419\n00:19:33.970 --> 00:19:37.450\nAnd in that case, is this new stuff that\nyou're adding going to be area zero?\n\n420\n00:19:37.450 --> 00:19:38.460\nArea zero's your backbone.\n\n421\n00:19:38.460 --> 00:19:41.160\nYou normally want that to be your good,\nyour core equipment, right?\n\n422\n00:19:41.160 --> 00:19:45.240\nAnd so we end up having to redo\nour area numbers, and it's a mess.\n\n423\n00:19:45.240 --> 00:19:47.650\nSo if you're doing a single area,\nit's always a good idea to do area zero.\n\n424\n00:19:47.650 --> 00:19:52.880\nThe other thing to remember\nis in a perfect world\n\n425\n00:19:52.880 --> 00:19:56.310\narea zero will not contain\nany end user's right?\n\n426\n00:19:56.310 --> 00:19:59.238\nNo PCs, no laptops,\narea zero's a backbone,\n\n427\n00:19:59.238 --> 00:20:04.670\narea zero should contain things like your\nwide area network infrastructure right?\n\n428\n00:20:04.670 --> 00:20:07.670\nYour fiberoptics that are connecting\nbuildings together, stuff like that,\n\n429\n00:20:07.670 --> 00:20:09.120\nthat's what area zero should be.\n\n430\n00:20:09.120 --> 00:20:11.330\nStuff should move through area zero.\n\n431\n00:20:11.330 --> 00:20:14.150\nStuff shouldn't be destined for\narea zero, right.\n\n432\n00:20:14.150 --> 00:20:15.520\nThat's kinda the idea there.\n\n433\n00:20:15.520 --> 00:20:19.230\nAnd then your other areas,\nthat's where your PCs, your laptops,\n\n434\n00:20:19.230 --> 00:20:20.280\nyour regular machines,\n\n435\n00:20:20.280 --> 00:20:24.370\nthat's where their subnets reside and\nnow they operate and they function.\n\n436\n00:20:24.370 --> 00:20:28.110\nBut as you grow, if you're doing\neverything in area zero, you'll have PCs,\n\n437\n00:20:28.110 --> 00:20:29.725\nlaptops, you'll have all\nthat stuff in area zero.\n\n438\n00:20:29.725 --> 00:20:32.620\nBut when it comes time to break it apart,\n\n439\n00:20:32.620 --> 00:20:35.420\nit's the networks that have your clients\nthat you want to break off first.\n\n440\n00:20:35.420 --> 00:20:38.020\nMove them off into their own area and\nget them kind of separate so\n\n441\n00:20:38.020 --> 00:20:40.732\nthat the backbone becomes\njust the infrastructure.\n\n442\n00:20:40.732 --> 00:20:43.380\n>> All right Don, that sounds like\na lot of good information for\n\n443\n00:20:43.380 --> 00:20:45.000\njust basic area types.\n\n444\n00:20:45.000 --> 00:20:48.960\nWhen we take a look at using\nOSPF areas we've taken a look\n\n445\n00:20:48.960 --> 00:20:50.290\nat two different ones, right?\n\n446\n00:20:50.290 --> 00:20:52.915\nWe've talked about the backbone and\nhow important that is,\n\n447\n00:20:52.915 --> 00:20:55.758\nespecially if we're gonna be\nimplementing multiple area OSPF.\n\n448\n00:20:55.758 --> 00:20:58.841\nAnd then we also showed you\njust a standard area as well.\n\n449\n00:20:58.841 --> 00:21:02.391\nRemember, that even with standard areas\nyou do have to connect to a backbone\n\n450\n00:21:02.391 --> 00:21:02.920\narea too.\n\n451\n00:21:02.920 --> 00:21:04.840\nSo these are concepts that\nwe have to get ready for\n\n452\n00:21:04.840 --> 00:21:07.710\nwhen we are getting ready for\nour CCNP route exempt.\n\n453\n00:21:07.710 --> 00:21:09.920\nAll right, so\nthat about wraps up our show for today.\n\n454\n00:21:09.920 --> 00:21:11.290\nI've been your host, Ronnie Wong.\n\n455\n00:21:11.290 --> 00:21:11.950\n>> And I'm Don Pezet.\n\n456\n00:21:11.950 --> 00:21:13.274\n>> And we'll see you next time.\n\n457\n00:21:13.274 --> 00:21:18.890\n[NOISE]\n\n",
          "vimeoId": "137949896"
        },
        {
          "description": "When one wants to start shrinking their routing table down, the best way to do that is by configuring an area called a stub, which is considered a dead end in OSPF. Viewers will hear discussions about the different area types, the areas used to optimize a multi-area OSPF network, as well as see the configuration and results of implementing different area types.",
          "length": "1471",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/ccnproute/cisco-ccnproute300101-3-26d-ospf_area_types_pt2-083115-1.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/ccnproute/cisco-ccnproute300101-3-26d-ospf_area_types_pt2-083115-1-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/ccnproute/cisco-ccnproute300101-3-26d-ospf_area_types_pt2-083115-1-sm.jpg",
          "title": "OSPF Area Types Part 2",
          "transcript": "WEBVTT\n\n1\n00:00:00.000 --> 00:00:10.587\n[MUSIC]\n\n2\n00:00:10.587 --> 00:00:13.111\nWelcome to another great\nepisode here on ITProTV.\n\n3\n00:00:13.111 --> 00:00:16.550\nToday we're taking a look at CCNP route,\ngetting ready for\n\n4\n00:00:16.550 --> 00:00:21.200\nthat exam and there's some complexities\nto it that we need to understand as well.\n\n5\n00:00:21.200 --> 00:00:24.005\nI'm your host Ronnie Wong and here with\nus today to help us understand that.\n\n6\n00:00:24.005 --> 00:00:26.310\nMr. Don Pezet, how's it going?\n\n7\n00:00:26.310 --> 00:00:27.300\n>> It's going great, Ronnie.\n\n8\n00:00:27.300 --> 00:00:30.800\nReady to jump right back in to\nthe wonderful world of OSPF areas.\n\n9\n00:00:30.800 --> 00:00:33.180\nIn part one,\nwe talked about areas in OSPF,\n\n10\n00:00:33.180 --> 00:00:37.248\nwe talked about the backbone and the\nstandard areas and how they worked, right?\n\n11\n00:00:37.248 --> 00:00:39.490\nNow we're gonna look at some\nspecial case scenarios where we can\n\n12\n00:00:39.490 --> 00:00:41.020\nreally start to tweak things.\n\n13\n00:00:41.020 --> 00:00:43.890\nNow if you'll remember back from part one,\nwe took an area, or\n\n14\n00:00:43.890 --> 00:00:46.830\nwe took a router and\nkinda shifted it into its own area.\n\n15\n00:00:46.830 --> 00:00:49.570\nAnd we saw how in a standard OSPF area\n\n16\n00:00:49.570 --> 00:00:52.670\nall we really do is reduce the size\nof our linkstate database.\n\n17\n00:00:52.670 --> 00:00:55.090\nIt doesn't change our running table size.\n\n18\n00:00:55.090 --> 00:00:57.030\nIt doesn't hide any routes from us.\n\n19\n00:00:57.030 --> 00:00:59.330\nWe still see all the routes\nthat are out there.\n\n20\n00:00:59.330 --> 00:01:01.260\nIt's just we perform a little bit better.\n\n21\n00:01:01.260 --> 00:01:04.110\nAnd so that's really what\nthat kinda centered around.\n\n22\n00:01:04.110 --> 00:01:06.645\nBut there's even more we can do.\n\n23\n00:01:06.645 --> 00:01:09.265\nLet's say your routing table is huge.\n\n24\n00:01:09.265 --> 00:01:13.065\nThousands upon thousands of routes inside\nof it, just a massive routing table.\n\n25\n00:01:13.065 --> 00:01:16.205\nAnd we actually do wanna start\nshrinking that routing table down.\n\n26\n00:01:16.205 --> 00:01:18.945\nWell one of the best ways we can do that\n\n27\n00:01:18.945 --> 00:01:22.135\nis by configuring an area\nas what's called a stub.\n\n28\n00:01:22.135 --> 00:01:25.051\nA stub is considered a dead end in OSPF,\nright?\n\n29\n00:01:25.051 --> 00:01:28.938\nIn OSPF we have to map out our whole tree\nof how we can get to various places in\n\n30\n00:01:28.938 --> 00:01:33.190\nthe network and if we lose a network,\nwe try and find another way.\n\n31\n00:01:33.190 --> 00:01:35.570\nWell, if we see a stub,\nwe know it's a dead end.\n\n32\n00:01:35.570 --> 00:01:38.360\nThere's no sense in kind of\nprobing through that one.\n\n33\n00:01:38.360 --> 00:01:40.510\nSo it kind of blocks\nthings off a little bit.\n\n34\n00:01:40.510 --> 00:01:44.660\nBut also on a stub, you typically\nonly have one way in and one way out.\n\n35\n00:01:44.660 --> 00:01:47.704\nSo it's not like you need a ton of\ndifferent routes in your routing table\n\n36\n00:01:47.704 --> 00:01:49.830\nanyway and most of them are redundant.\n\n37\n00:01:49.830 --> 00:01:53.270\nSo we can configure a network\nas a stub to help improve that.\n\n38\n00:01:53.270 --> 00:01:55.440\nLet me show you what I mean.\n\n39\n00:01:55.440 --> 00:01:58.490\nNow in our last episode,\nlet me bring up my diagram here.\n\n40\n00:01:58.490 --> 00:02:01.730\nWe configured branch three\nto be in its own area.\n\n41\n00:02:01.730 --> 00:02:03.440\nAnd in between the episodes\nI went ahead and\n\n42\n00:02:03.440 --> 00:02:06.000\nmoved my other routers\ninto their own areas too.\n\n43\n00:02:06.000 --> 00:02:09.770\nSo I've got headquarters which\ncontains area zero, the backbone.\n\n44\n00:02:09.770 --> 00:02:11.320\nThen we have branch one, branch two,\n\n45\n00:02:11.320 --> 00:02:15.070\nbranch three they are all\nentirely in their own areas.\n\n46\n00:02:15.070 --> 00:02:18.740\nSo headquarters is acting as an area\nborder router and the other routers\n\n47\n00:02:18.740 --> 00:02:22.150\nare just standard routers, right,\nthe routers within their area.\n\n48\n00:02:22.150 --> 00:02:26.730\nNow headquarters is actually an ASBR for\nme, and ASBR is an autonomous\n\n49\n00:02:26.730 --> 00:02:30.480\nsystem border router, and that means\nthat it's connected to other routes.\n\n50\n00:02:30.480 --> 00:02:32.450\nIt's connected to my Internet\nservice providers, and\n\n51\n00:02:32.450 --> 00:02:33.680\nit has some external routes.\n\n52\n00:02:33.680 --> 00:02:35.680\nThat's what an ASBR has.\n\n53\n00:02:35.680 --> 00:02:39.270\nSo when it's advertising those routes,\nit's putting them into OSPF, and\n\n54\n00:02:39.270 --> 00:02:42.660\nwe're seeing them appear on our other\nrouters or at least we should, right?\n\n55\n00:02:42.660 --> 00:02:45.170\nSo, if I take a look at any of these guys,\nlike I'll take a look at,\n\n56\n00:02:45.170 --> 00:02:47.380\nwell we'll do branch one.\n\n57\n00:02:47.380 --> 00:02:52.120\nSo, if I take a look at branch one,\nand I jump into it's routing table,\n\n58\n00:02:52.120 --> 00:02:55.870\nI'm just going to do a show IP route OSPF,\nokay,\n\n59\n00:02:55.870 --> 00:03:00.130\nI can see where it's learned the other\nnetworks that are out there, right?\n\n60\n00:03:00.130 --> 00:03:04.240\nThis 172.16.0, that's headquarters,\nthis 172.16.4 is at branch 2,\n\n61\n00:03:04.240 --> 00:03:08.470\nthis one's at branch 3, so\nit's seeing the other networks.\n\n62\n00:03:08.470 --> 00:03:12.270\nAnd I've got all these OE1 routes that I\nbrought in, and they're all showing up\n\n63\n00:03:12.270 --> 00:03:15.590\nright here, so I see those external\nroutes that are coming in.\n\n64\n00:03:15.590 --> 00:03:17.290\nI've got it all, right?\n\n65\n00:03:17.290 --> 00:03:18.780\nBut I'm in an area.\n\n66\n00:03:18.780 --> 00:03:21.460\nWell remember areas don't actually\nchange the routes that you see.\n\n67\n00:03:21.460 --> 00:03:22.980\nSure it flags them as IAs,\n\n68\n00:03:22.980 --> 00:03:26.330\nright, inter-areas, but\nit's not actually hiding anything.\n\n69\n00:03:26.330 --> 00:03:29.300\nWell let's say I took area one and\nmade it a stub.\n\n70\n00:03:29.300 --> 00:03:32.510\nWell let's do that and\nsee how this changes.\n\n71\n00:03:32.510 --> 00:03:35.760\nNow the way we make\nan area a stub is we go to\n\n72\n00:03:35.760 --> 00:03:40.270\nevery single router that's connected to\nthat area and we tell it that it's stub.\n\n73\n00:03:40.270 --> 00:03:41.630\nYou don't just do it on the border, right?\n\n74\n00:03:41.630 --> 00:03:44.580\nThe temptation is to just configure\nit right here on the border.\n\n75\n00:03:44.580 --> 00:03:47.410\nBut for OSPF adjacencies to build up,\n\n76\n00:03:47.410 --> 00:03:49.060\nthere's a number of things\nthat have to match.\n\n77\n00:03:49.060 --> 00:03:53.000\nYour hello timers, your authentication,\nthat stuff has to match.\n\n78\n00:03:53.000 --> 00:03:55.620\nWell, whether you're\na stub has to match also.\n\n79\n00:03:55.620 --> 00:03:59.420\nSo if I just set one side as a stub, all\nthe routers in that area will then drop\n\n80\n00:03:59.420 --> 00:04:00.740\noff and they'll lose their border routers.\n\n81\n00:04:00.740 --> 00:04:02.890\nSo you have to go through and\ndo it to each one.\n\n82\n00:04:02.890 --> 00:04:07.724\nI'll start at headquarters, and I'll\njust jump into my configuration and say,\n\n83\n00:04:07.724 --> 00:04:08.715\nrouter ospf 1.\n\n84\n00:04:08.715 --> 00:04:14.150\nAnd on that router, I'm just gonna say,\narea 1 stub, right.\n\n85\n00:04:14.150 --> 00:04:18.000\nThat's what's gonna tell us that area 1\nis a stub, and when I do that, if I wait,\n\n86\n00:04:18.000 --> 00:04:20.560\nthere we go, see how my adjacency drops.\n\n87\n00:04:20.560 --> 00:04:23.800\nAnd it's gonna stay dropped, it's never\ngonna come back up until I go and\n\n88\n00:04:23.800 --> 00:04:26.200\ntell branch 1 that it's a stub, right.\n\n89\n00:04:26.200 --> 00:04:31.010\nSo on branch 1, I'm just gonna jump in\nmy configuration, and go into ospf 1.\n\n90\n00:04:31.010 --> 00:04:33.341\nAnd I'll say area 1 stub.\n\n91\n00:04:33.341 --> 00:04:34.250\nAll right.\n\n92\n00:04:34.250 --> 00:04:37.750\nNow that I've done that, there it goes,\nit's forcing a reset on that adjacency,\n\n93\n00:04:37.750 --> 00:04:39.750\nand it should come back up her shortly.\n\n94\n00:04:39.750 --> 00:04:41.480\nThere we go, that didn't take long at all.\n\n95\n00:04:41.480 --> 00:04:46.430\nAnd when that's done,\nnow area 1 knows that it's a stub.\n\n96\n00:04:46.430 --> 00:04:50.230\nAnd it says look, people shouldn't have\nto pass through me to get anywhere,\n\n97\n00:04:50.230 --> 00:04:52.740\nI've only got one way to get\nto these networks, right?\n\n98\n00:04:52.740 --> 00:04:55.060\nIf we look at the routing\ntable from a second ago,\n\n99\n00:04:55.060 --> 00:04:58.140\nlook at the destination on every\none of those routes, right?\n\n100\n00:04:58.140 --> 00:04:59.540\nThe destination's identical.\n\n101\n00:04:59.540 --> 00:05:01.140\nIf it's got one way in and one way out,\n\n102\n00:05:01.140 --> 00:05:05.620\neverything goes to the home office so why\nbother maintaining all of these routes?\n\n103\n00:05:05.620 --> 00:05:10.205\nWell, flagging this as a stub\ntakes care of that, sort of.\n\n104\n00:05:10.205 --> 00:05:13.120\n[LAUGH] So this is where things start\nto get a little complex, right.\n\n105\n00:05:13.120 --> 00:05:17.230\nLet's take a look at what branch\n1's routing table looks like now.\n\n106\n00:05:17.230 --> 00:05:21.040\nIf I pull up the new routing table,\nall our routes are still there.\n\n107\n00:05:21.040 --> 00:05:22.570\nIt didn't do anything.\n\n108\n00:05:22.570 --> 00:05:23.430\nWell it actually did.\n\n109\n00:05:23.430 --> 00:05:26.930\nIf we look closely,\nwhere are my OE1 routes?\n\n110\n00:05:26.930 --> 00:05:27.602\n>> Gone.\n\n111\n00:05:27.602 --> 00:05:30.200\n>> They're gone, the external routes.\n\n112\n00:05:30.200 --> 00:05:34.120\nAny route from outside of our\nautonomous system is gone.\n\n113\n00:05:34.120 --> 00:05:37.500\nWhen you become a stub,\nyou say don't bother giving me those.\n\n114\n00:05:37.500 --> 00:05:38.670\nThere's only one way in and one way out,\n\n115\n00:05:38.670 --> 00:05:41.530\nI don't need to know about those networks,\nI'm just gonna go one way.\n\n116\n00:05:41.530 --> 00:05:44.670\nSo instead give me a default route.\n\n117\n00:05:44.670 --> 00:05:46.730\nAnd you'll see that right here.\n\n118\n00:05:46.730 --> 00:05:49.880\nI've got this new route, this O*IA,\nit's got this an asterisk in it,\n\n119\n00:05:49.880 --> 00:05:52.170\nthat let's me know it's a candidate for\na default route.\n\n120\n00:05:52.170 --> 00:05:54.340\nAnd there it is, and\nthat's coming from headquarters.\n\n121\n00:05:54.340 --> 00:05:56.810\nNow that wasn't there before.\n\n122\n00:05:56.810 --> 00:06:00.860\nSo when you get flagged as a stub,\nyou throw away all your external routes.\n\n123\n00:06:00.860 --> 00:06:02.280\nYou say, I don't need those anymore,\n\n124\n00:06:02.280 --> 00:06:05.700\njust give me a default route instead,\nall right?\n\n125\n00:06:05.700 --> 00:06:08.640\nNow we actually see\nthe routing table improve.\n\n126\n00:06:08.640 --> 00:06:12.490\nWhen we were just a regular area, the\nrouting table really wasn't any different.\n\n127\n00:06:12.490 --> 00:06:14.500\nWhen you're a stub, it is.\n\n128\n00:06:14.500 --> 00:06:16.990\nSo if you're trying to\nreduce your routing table,\n\n129\n00:06:16.990 --> 00:06:20.660\nbecoming a stub will do it,\nto an extent, right?\n\n130\n00:06:20.660 --> 00:06:21.580\nExternal routes.\n\n131\n00:06:21.580 --> 00:06:22.460\nWhat about these internal routes?\n\n132\n00:06:22.460 --> 00:06:23.940\nWhat about these inter area routes?\n\n133\n00:06:26.350 --> 00:06:28.514\nIf I want to get to any other area,\nif I want to get to area one,\n\n134\n00:06:28.514 --> 00:06:29.638\nwell I'm in area one, shoot.\n\n135\n00:06:29.638 --> 00:06:34.500\nIf I wanna get to area two or area three,\nremember the rule about OSPF.\n\n136\n00:06:34.500 --> 00:06:37.280\nI can't go directly to area two,\nI can't go directly to area three.\n\n137\n00:06:37.280 --> 00:06:39.610\nI've got to pass through area zero.\n\n138\n00:06:39.610 --> 00:06:42.420\nAnd if there is only one border\nrouter between me and area zero,\n\n139\n00:06:42.420 --> 00:06:45.510\nthen I've only got one way to go and\nthat's exactly what I've got here, right?\n\n140\n00:06:45.510 --> 00:06:50.150\nIn this topology branch one, it only\nhas one border router on area zero, and\n\n141\n00:06:50.150 --> 00:06:51.130\nthat's headquarters.\n\n142\n00:06:51.130 --> 00:06:53.090\nSo everything has to go to headquarters.\n\n143\n00:06:53.090 --> 00:06:57.130\nSo is there really any point in\nmaintaining all these routes?\n\n144\n00:06:57.130 --> 00:06:59.890\nWell, according to the I\ntriple E standard of OSPF,\n\n145\n00:06:59.890 --> 00:07:03.150\nyes, we might as well keep them, right?\n\n146\n00:07:03.150 --> 00:07:05.210\nBut according to Cisco,\n>> [LAUGH]\n\n147\n00:07:05.210 --> 00:07:06.100\n>> It sure would be nice if\n\n148\n00:07:06.100 --> 00:07:07.380\nwe could hold those.\n\n149\n00:07:07.380 --> 00:07:09.390\nAnd just kinda hide them.\n\n150\n00:07:09.390 --> 00:07:12.820\nAnd so\nwhat Cisco did is they took the standard,\n\n151\n00:07:12.820 --> 00:07:16.780\nthe OSPF standard where stubs are defined,\nand they tweaked it a little bit.\n\n152\n00:07:16.780 --> 00:07:20.045\nAnd they added what was\ncalled a totally stubby area.\n\n153\n00:07:20.045 --> 00:07:21.130\n>> [LAUGH]\n>> Okay,\n\n154\n00:07:21.130 --> 00:07:24.850\nif you have an area that's like mine,\nthat only has one way in and\n\n155\n00:07:24.850 --> 00:07:28.390\none way out Then external routes\naren't your only problem.\n\n156\n00:07:28.390 --> 00:07:30.440\nYour internal routes are redundant too.\n\n157\n00:07:30.440 --> 00:07:33.480\nAnd so we might want to obscure\nthe internal routes too.\n\n158\n00:07:33.480 --> 00:07:37.700\nAnd so on a Cisco router,\nyou can become totally stubby.\n\n159\n00:07:37.700 --> 00:07:41.230\nAnd totally stubby will hide\nthose internal routes also.\n\n160\n00:07:41.230 --> 00:07:45.600\nOkay, that's the difference between\na stub and totally stubby, all right.\n\n161\n00:07:45.600 --> 00:07:48.450\nAnd the way we do it is by taking these,\nthese are summary routes, right?\n\n162\n00:07:48.450 --> 00:07:52.087\nThese will be type 3\nLSAs that are coming in.\n\n163\n00:07:52.087 --> 00:07:56.654\nAnd I need to just hide those so that I'm\nnot learning them from the gateway, and\n\n164\n00:07:56.654 --> 00:08:00.483\nthen learn a default route,\nwhich I kind of already have, right?\n\n165\n00:08:00.483 --> 00:08:01.064\nFrom being a stub.\n\n166\n00:08:01.064 --> 00:08:05.144\nI've got the default route already,\nI can just hide these and use that.\n\n167\n00:08:05.144 --> 00:08:10.050\nRight now, if one of these routes goes\ndown I'm gonna receive an update to remove\n\n168\n00:08:10.050 --> 00:08:12.280\nthe route from my routing table.\n\n169\n00:08:12.280 --> 00:08:15.470\nSo I might still be seeing a lot\nof routing table activity for\n\n170\n00:08:15.470 --> 00:08:17.700\nnetworks that I'm not even\ndirectly connected to.\n\n171\n00:08:17.700 --> 00:08:21.160\nSo by hiding those behind a default route\nnow when one of those networks goes down\n\n172\n00:08:21.160 --> 00:08:22.360\non the other side I don't even see it.\n\n173\n00:08:22.360 --> 00:08:23.720\nI don't update my table.\n\n174\n00:08:23.720 --> 00:08:27.430\nThat means less Dijkstra\ncalculations on my system and\n\n175\n00:08:27.430 --> 00:08:28.870\nI'm gonna get better performance.\n\n176\n00:08:28.870 --> 00:08:30.950\nSmaller routing table, better performance.\n\n177\n00:08:30.950 --> 00:08:33.960\nSo totally stubby areas\nare pretty efficient.\n\n178\n00:08:33.960 --> 00:08:37.850\nAnd the way you set these\nup is unlike the stub,\n\n179\n00:08:37.850 --> 00:08:42.610\nwell first off, totally stubby is\njust a modification of a stub.\n\n180\n00:08:42.610 --> 00:08:44.620\nSo step one is to configure it as a stub.\n\n181\n00:08:44.620 --> 00:08:46.800\nTo do exactly what I've\ndone here branch one.\n\n182\n00:08:46.800 --> 00:08:50.060\nFlag branch one as a stub,\nflag the border as a stub, and\n\n183\n00:08:50.060 --> 00:08:53.040\nnow at any other router in area\none would need to be a stub also.\n\n184\n00:08:53.040 --> 00:08:53.750\nSo that's step one.\n\n185\n00:08:54.880 --> 00:08:59.100\nBut to make it totally stubby we just\nhave to modify the border router.\n\n186\n00:08:59.100 --> 00:09:03.770\nOn the border router, we tell it hey\ndon't send those type 3 LSAs in anymore.\n\n187\n00:09:03.770 --> 00:09:05.660\nDon't send the summary routes in anymore.\n\n188\n00:09:05.660 --> 00:09:06.270\nAll right?\n\n189\n00:09:06.270 --> 00:09:07.880\nJust send that default route.\n\n190\n00:09:07.880 --> 00:09:10.820\nSo, to be totally stub, you're just\nmodifying the border router, and\n\n191\n00:09:10.820 --> 00:09:13.130\nthis is where it gets\nconfusing on the exam.\n\n192\n00:09:13.130 --> 00:09:18.100\nTo be a stub, you set it on every router\nin the area, including the border.\n\n193\n00:09:18.100 --> 00:09:23.120\nTo be totally stubby, you set every\nrouter in the area is a stub and\n\n194\n00:09:23.120 --> 00:09:26.270\nyou just flag the area\nthe border as totally stubby.\n\n195\n00:09:26.270 --> 00:09:26.980\nAll right?\n\n196\n00:09:26.980 --> 00:09:31.310\nAnd the way we do that, so\nif I jump over here to headquarters and\n\n197\n00:09:31.310 --> 00:09:36.280\nI get into router OSPF 1 which I'm\nalready in, I can say area 1 stub.\n\n198\n00:09:36.280 --> 00:09:36.920\nAll right?\n\n199\n00:09:36.920 --> 00:09:39.032\nThe same command I used a moment ago, but\n\n200\n00:09:39.032 --> 00:09:42.070\nif you do a question mark\nyou'll see no summary.\n\n201\n00:09:42.070 --> 00:09:42.630\nRight?\n\n202\n00:09:42.630 --> 00:09:47.315\nNo dash summary, that's what's gonna\nmake up totally stubby, all right?\n\n203\n00:09:47.315 --> 00:09:51.960\nSo, now I'm telling headquarters, hey,\ndon't send any summary routes into area 1.\n\n204\n00:09:51.960 --> 00:09:54.830\nAll those inter-area routes,\ndon't bother sending those over.\n\n205\n00:09:54.830 --> 00:09:59.661\nWe're already hiding the externals, the\nOE1s, OE2s, we're not sending those over,\n\n206\n00:09:59.661 --> 00:10:00.740\nso, what's left?\n\n207\n00:10:00.740 --> 00:10:02.310\nJust the default route.\n\n208\n00:10:02.310 --> 00:10:04.990\nAnd now, when I take a look at branch 1.\n\n209\n00:10:04.990 --> 00:10:07.780\nSo here's the routing table\nI had a moment ago, right?\n\n210\n00:10:07.780 --> 00:10:10.565\nAnd now when I run it,\nlook at that routing table.\n\n211\n00:10:10.565 --> 00:10:12.353\nRight, and I'm hiding my connected, right?\n\n212\n00:10:12.353 --> 00:10:17.240\nI'm just doing show ip route ospf.\n\n213\n00:10:17.240 --> 00:10:20.020\nBut now, I've only got one OSPF route.\n\n214\n00:10:20.020 --> 00:10:24.240\nSo if my network has thousands of routes,\nI just collapsed it to one route.\n\n215\n00:10:24.240 --> 00:10:25.970\nIs that gonna get me better performance?\n\n216\n00:10:25.970 --> 00:10:27.810\n>> No.\n>> Absolutely.\n\n217\n00:10:27.810 --> 00:10:30.790\nThis could be low end,\none of those 800 series Cisco routers, and\n\n218\n00:10:30.790 --> 00:10:32.990\nit'll perform just fine,\ncuz it's only got one route.\n\n219\n00:10:32.990 --> 00:10:33.620\nRight?\n\n220\n00:10:33.620 --> 00:10:36.370\nBut it's still participating in OSPF.\n\n221\n00:10:36.370 --> 00:10:39.870\nRight?\nIt is still participating in being happy,\n\n222\n00:10:39.870 --> 00:10:42.130\nbut there's limitations\nto what it's doing.\n\n223\n00:10:42.130 --> 00:10:46.940\nSo, for example, here on branch 1,\nif I take a look at my networks,\n\n224\n00:10:46.940 --> 00:10:51.810\nbranch 1 is connected to\nthe 172.16.2.1 network, right, or 2.0.\n\n225\n00:10:51.810 --> 00:10:53.360\nIt's a slash 23.\n\n226\n00:10:53.360 --> 00:10:54.580\nIt's connected to that network.\n\n227\n00:10:54.580 --> 00:10:57.300\nIt's totally stubby, but it's gonna\n\n228\n00:10:57.300 --> 00:11:00.290\nadvertise this network cause other\npeople need to know how to get to me.\n\n229\n00:11:00.290 --> 00:11:05.660\nSo if I take a look at branch two,\nfor example, and I do a show IP route.\n\n230\n00:11:05.660 --> 00:11:10.260\nAnd I look at all the routes here in\nbranch two, we still see that, right?\n\n231\n00:11:10.260 --> 00:11:14.680\nSo being totally stubby doesn't change the\nway that you advertise to other people.\n\n232\n00:11:14.680 --> 00:11:17.310\nIt just changes the way\nthat you receive routes.\n\n233\n00:11:17.310 --> 00:11:18.810\nAnd so now we've kind of manipulated that.\n\n234\n00:11:18.810 --> 00:11:20.920\nBut other people still know\nabout how to get to branch one,\n\n235\n00:11:20.920 --> 00:11:24.890\nthey can get there It's\njust far more optimized.\n\n236\n00:11:24.890 --> 00:11:29.710\nSo, stub will suppress\nthe external routes,\n\n237\n00:11:29.710 --> 00:11:35.770\ntotally stubby suppresses the external and\ninter-area routes, the summary routes.\n\n238\n00:11:35.770 --> 00:11:38.250\nSo it's kind of doing double the work.\n\n239\n00:11:38.250 --> 00:11:41.090\nBut just remember that being totally\nstubby is a function of Cisco routers,\n\n240\n00:11:41.090 --> 00:11:41.770\nCisco proprietary.\n\n241\n00:11:41.770 --> 00:11:43.290\nThey're the ones who created that.\n\n242\n00:11:43.290 --> 00:11:46.140\nOther vendors have kind of\nexperimented with supporting it.\n\n243\n00:11:46.140 --> 00:11:48.040\nBut I haven't seen anybody\nthat was really official yet.\n\n244\n00:11:48.040 --> 00:11:51.230\nBut that's kinda the purpose of that one,\nall right.\n\n245\n00:11:51.230 --> 00:11:55.220\nNow there is one thing we give\nup when we become a stub.\n\n246\n00:11:55.220 --> 00:11:56.730\nRemember what I said earlier.\n\n247\n00:11:56.730 --> 00:11:58.030\nWhen you have a stub.\n\n248\n00:11:58.030 --> 00:12:00.580\nThere's only one way in and\none way out, right?\n\n249\n00:12:00.580 --> 00:12:01.850\nThat's the definition of a stub.\n\n250\n00:12:02.860 --> 00:12:06.780\nBut what if there is more than\none way in and one way out.\n\n251\n00:12:06.780 --> 00:12:10.470\nBut it's not part of our\nautonomous system, right?\n\n252\n00:12:10.470 --> 00:12:13.520\nWhat it really means is you can only\nhave one way in and one way out.\n\n253\n00:12:13.520 --> 00:12:16.170\nAs far as an ABR, an Area Border Router.\n\n254\n00:12:16.170 --> 00:12:20.690\nWhen I go to my diagram here, I've got\none Area Border Router, a headquarters.\n\n255\n00:12:20.690 --> 00:12:23.680\nBut what if branch 1 has\na connection out to the Internet?\n\n256\n00:12:23.680 --> 00:12:26.320\nRight, it has an ISP connection\nhere that I'm using as a backup.\n\n257\n00:12:26.320 --> 00:12:28.460\nYou guys remember from my topology,\nI actually do have that, right?\n\n258\n00:12:28.460 --> 00:12:31.950\nBranch 1 has a connection out to an ISP,\n\n259\n00:12:31.950 --> 00:12:34.770\nif I take a look at\nthe IPs that are on it.\n\n260\n00:12:34.770 --> 00:12:36.730\nIt's got this guy right here, right?\n\n261\n00:12:36.730 --> 00:12:39.360\nThat connects it to\nInternet service provider.\n\n262\n00:12:39.360 --> 00:12:42.800\nThat means that branch one\nis technically an ASBR,\n\n263\n00:12:42.800 --> 00:12:45.728\nan autonomous system border router, right?\n\n264\n00:12:45.728 --> 00:12:50.610\nWell, when you're a stub, or a totally\nstubby area, you cannot have any ASBRs\n\n265\n00:12:50.610 --> 00:12:54.540\nin the area, so even if I start to\nadvertise this route, even if I\n\n266\n00:12:54.540 --> 00:12:59.090\nredistribute that into my area other\npeople aren't going to learn it, right?\n\n267\n00:12:59.090 --> 00:13:00.600\nLet me show you.\n\n268\n00:13:00.600 --> 00:13:02.726\nWeird stuff starts to happen\nif we tweak this too much,\n\n269\n00:13:02.726 --> 00:13:04.031\nI'll try not to break my system.\n\n270\n00:13:04.031 --> 00:13:08.027\nBut if I punch in a route.\n\n271\n00:13:08.027 --> 00:13:09.820\nSo I'm just gonna punch\nin a default router.\n\n272\n00:13:09.820 --> 00:13:12.450\nYou know, here,\nI'll do a specific network.\n\n273\n00:13:12.450 --> 00:13:13.878\nSo I'm gonna route.\n\n274\n00:13:13.878 --> 00:13:18.860\nWe'll do 101.000 and\n\n275\n00:13:18.860 --> 00:13:26.620\nI'm gonna send this out to my ISP,\nand I'll 102 in there just for kicks.\n\n276\n00:13:26.620 --> 00:13:27.120\nAll right?\n\n277\n00:13:29.300 --> 00:13:34.650\nAnd then I'll redistribute those into\nOSPF, so I'm gonna redistribute static.\n\n278\n00:13:34.650 --> 00:13:37.980\nI'll pay attention to the subnets and\nI'll set the metric type.\n\n279\n00:13:37.980 --> 00:13:41.150\nI like type better than type two\npersonally, so I'm gonna go ahead and\n\n280\n00:13:41.150 --> 00:13:42.540\nset that metric type.\n\n281\n00:13:42.540 --> 00:13:45.950\nSo now I'm originating these two routes\nthat are coming from outside, right?\n\n282\n00:13:45.950 --> 00:13:49.900\nOutside of my autonomous\nsystem I'm a stub area.\n\n283\n00:13:49.900 --> 00:13:52.750\nBut now I'm saying I've got some\nexternal routes, so I'm a dead end.\n\n284\n00:13:52.750 --> 00:13:55.410\nBut if you come to me,\nyou can get to this other network.\n\n285\n00:13:55.410 --> 00:13:56.610\nWell that means I'm not a dead end right?\n\n286\n00:13:56.610 --> 00:13:57.960\nIt breaks the rules.\n\n287\n00:13:57.960 --> 00:14:02.510\nSo a stub can't really do that,\nand if I jump over to branch,\n\n288\n00:14:02.510 --> 00:14:04.980\nwell if I jump over to headquarters,\nheadquarters are gonna get those routes.\n\n289\n00:14:06.260 --> 00:14:10.965\nSo if I pull up, you know,\na show IP route OSPF, and I look.\n\n290\n00:14:10.965 --> 00:14:12.190\nOh it's actually not\ngonna get those routes.\n\n291\n00:14:12.190 --> 00:14:13.107\nShoot I forgot.\n\n292\n00:14:13.107 --> 00:14:16.480\nSo it all depends on what area you're in.\n\n293\n00:14:16.480 --> 00:14:20.740\nIf you're entirely within the area\nyou'll actually get those routes.\n\n294\n00:14:20.740 --> 00:14:21.990\nBut I'm not within the area.\n\n295\n00:14:21.990 --> 00:14:24.220\nRight?\nHeadquarters is a border router,\n\n296\n00:14:24.220 --> 00:14:25.280\nit's in several different areas.\n\n297\n00:14:25.280 --> 00:14:26.720\nAnd so it's not gonna get those routes.\n\n298\n00:14:26.720 --> 00:14:28.930\nAnd the other routers aren't\ngonna get them either.\n\n299\n00:14:28.930 --> 00:14:32.848\nSo it's not gonna make it to the other\nsite cuz a stub is not allowed to\n\n300\n00:14:32.848 --> 00:14:36.850\noriginate externalized, it's not\nallowed to have an ASBR, all right?\n\n301\n00:14:36.850 --> 00:14:39.750\nBut if you want that,\nif you want that, right?\n\n302\n00:14:39.750 --> 00:14:43.340\nIf I've got a backup Internet connection\non the end of this stub, yeah I want\n\n303\n00:14:43.340 --> 00:14:46.750\nbranch one to have a small routing table\nI want branch one to be efficient, but\n\n304\n00:14:46.750 --> 00:14:50.730\nit's got this backup line, and\nI want other people to know about it.\n\n305\n00:14:50.730 --> 00:14:52.740\nThat's where our next area type comes in.\n\n306\n00:14:52.740 --> 00:14:56.640\nAnd that's what's called a not so\nstubby area, or an NSSA.\n\n307\n00:14:56.640 --> 00:14:59.320\nWhen you say NSSA it sounds official.\n\n308\n00:14:59.320 --> 00:15:02.280\nBut when you say what it stands for\nit sounds ridiculous.\n\n309\n00:15:02.280 --> 00:15:04.540\nThe not so stubby area.\n\n310\n00:15:04.540 --> 00:15:07.362\nIt's a stubby area, but\nit's kinda got a back door.\n\n311\n00:15:07.362 --> 00:15:08.400\nIt's kinda got a way to get in and\n\n312\n00:15:08.400 --> 00:15:12.290\nout through some other autonomous system,\nand that breaks the rules.\n\n313\n00:15:12.290 --> 00:15:15.460\nAll right, now I know I've talked about\nsometimes how Cisco breaks the rules.\n\n314\n00:15:15.460 --> 00:15:20.520\nAnd it's Cisco proprietary, but this time\nthe IEEE acknowledged the utility of this,\n\n315\n00:15:20.520 --> 00:15:21.790\nand so this is part of the standard.\n\n316\n00:15:21.790 --> 00:15:24.400\nNSSA is an addendum to the OSPF standard.\n\n317\n00:15:24.400 --> 00:15:26.100\nMost third parties support it.\n\n318\n00:15:26.100 --> 00:15:29.960\nSo any type of equipment out\nthere can support NSSAs.\n\n319\n00:15:29.960 --> 00:15:31.050\nBut they're special.\n\n320\n00:15:31.050 --> 00:15:32.130\nThey're special.\n\n321\n00:15:32.130 --> 00:15:36.920\nAn NSSA router will distribute\nthat external route,\n\n322\n00:15:36.920 --> 00:15:39.020\nit'll allow the autonomous system\nborder router to function.\n\n323\n00:15:39.020 --> 00:15:42.090\nSo that the routers in that\narea will receive that route.\n\n324\n00:15:42.090 --> 00:15:44.730\nAnd then the route will\ncross the area boundaries.\n\n325\n00:15:44.730 --> 00:15:46.440\nAnd the other areas\nwill be able to see it.\n\n326\n00:15:46.440 --> 00:15:47.460\nWhereas that wouldn't normally happen.\n\n327\n00:15:47.460 --> 00:15:50.460\nNow you guys saw that here on mine where\nthe other routers weren't getting it.\n\n328\n00:15:50.460 --> 00:15:51.220\nAnd if I double check.\n\n329\n00:15:51.220 --> 00:15:53.299\nLet me just double check on branch 1 and\n\n330\n00:15:53.299 --> 00:15:56.146\nmake sure those routes made\nit into my routing table.\n\n331\n00:15:56.146 --> 00:15:59.118\nAnd they're right there, okay.\n\n332\n00:15:59.118 --> 00:16:01.580\nSo those routes did make\nit into my routing table.\n\n333\n00:16:01.580 --> 00:16:04.528\nAnd I redistributed them but\nnobody else saw them.\n\n334\n00:16:04.528 --> 00:16:06.525\nAnd it's because I'm breaking the rules.\n\n335\n00:16:06.525 --> 00:16:10.740\nIf I switched to an NSSA, now it works.\n\n336\n00:16:10.740 --> 00:16:15.040\nSo, and NSSA is a stub,\nit's just like a stub,\n\n337\n00:16:15.040 --> 00:16:18.230\nexcept it allows me to\noriginate external routes.\n\n338\n00:16:18.230 --> 00:16:20.300\nIt allows me to have an ASBR.\n\n339\n00:16:20.300 --> 00:16:23.280\nSo, if you don't have that,\nif going back to my diagram,\n\n340\n00:16:23.280 --> 00:16:26.480\nif this is my topology that I have,\nNSSA's are pointless.\n\n341\n00:16:26.480 --> 00:16:28.950\nNone of my areas originate\nin external routes.\n\n342\n00:16:28.950 --> 00:16:32.200\nBut if branch one has an external,\nor branch two or branch three,\n\n343\n00:16:32.200 --> 00:16:34.970\nI can flag them as an NSSA and\nthat'll work.\n\n344\n00:16:34.970 --> 00:16:40.710\nJust like a stub, you have to flag\nan NSSA on every router in that area.\n\n345\n00:16:40.710 --> 00:16:44.210\nSo I need to go to each router\nin area one and flag it as NSSA.\n\n346\n00:16:44.210 --> 00:16:46.170\nSo let me do that.\n\n347\n00:16:46.170 --> 00:16:50.250\nI'm gonna jump to headquarters, and\nI'll get into OSPF's configuration, so\n\n348\n00:16:50.250 --> 00:16:51.920\njust router, OSPF1.\n\n349\n00:16:51.920 --> 00:16:55.360\nAnd then I'm going to say area 1 nssa.\n\n350\n00:16:55.360 --> 00:16:58.090\nOkay, and see how it's warning\nme that it's already a stub?\n\n351\n00:16:58.090 --> 00:16:58.820\nI kind of forgot about that.\n\n352\n00:16:58.820 --> 00:17:01.510\nI got to turn off the regular stub,\nbecause you can't be a stub and\n\n353\n00:17:01.510 --> 00:17:05.130\nan NSSA,\nbecause one's a modification of the other.\n\n354\n00:17:05.130 --> 00:17:09.660\nSo I'm going to say no area 1 stub,\nand then I'll say area 1 nssa.\n\n355\n00:17:10.830 --> 00:17:14.100\nAnd then I'll do the same thing on branch\none because it's going to go down here, so\n\n356\n00:17:14.100 --> 00:17:18.950\nI'll get into it's router configuration\nand say, no area 1 stub, and\n\n357\n00:17:18.950 --> 00:17:20.360\nthen area 1 nssa.\n\n358\n00:17:21.770 --> 00:17:26.015\nNow when I turn that on, area one\nstarts functioning like a stub again.\n\n359\n00:17:26.015 --> 00:17:29.755\nRemember when I was a stub,\nI learned all the inner area routes but\n\n360\n00:17:29.755 --> 00:17:31.805\nI didn't learn the external routes.\n\n361\n00:17:31.805 --> 00:17:34.695\nNow that I'm in NSSA,\nthat's going to happen again.\n\n362\n00:17:34.695 --> 00:17:40.325\nAnd if I pull up my routing table, all\nthose inner area routes are back, okay?\n\n363\n00:17:40.325 --> 00:17:42.155\nBut I lose my external routes.\n\n364\n00:17:42.155 --> 00:17:44.670\nI didn't actually lose my external routes,\ndid I?\n\n365\n00:17:44.670 --> 00:17:46.640\nLook at those external routes,\nthey became ON1's.\n\n366\n00:17:46.640 --> 00:17:48.950\nNow why is that?\n\n367\n00:17:48.950 --> 00:17:52.640\nThe reason that happened is,\nif I can highlight it there, there we go.\n\n368\n00:17:52.640 --> 00:17:55.760\nThe reason that happened is because\nof how my headquarters is configured.\n\n369\n00:17:56.770 --> 00:18:02.960\nWhen you redistribute routes into OSPF,\ndoes it let you pick an area?\n\n370\n00:18:02.960 --> 00:18:05.360\nYou don't pick what area\nyou're redistributing into.\n\n371\n00:18:05.360 --> 00:18:06.200\nSo on headquarters,\n\n372\n00:18:06.200 --> 00:18:11.900\nif I look at my OSPF configuration,\nhere's that redistribution command.\n\n373\n00:18:11.900 --> 00:18:14.130\nAnd see how it makes no note of an area.\n\n374\n00:18:14.130 --> 00:18:15.000\nOkay, so,\n\n375\n00:18:15.000 --> 00:18:18.970\nwhen I redistribute, technically I'm\nredistributing into all the areas, right?\n\n376\n00:18:18.970 --> 00:18:22.590\nAnd so, I'm redistributing\ninto area one as an NSSA, and\n\n377\n00:18:22.590 --> 00:18:24.990\nthat's why those are showing up and\nnot being suppressed.\n\n378\n00:18:24.990 --> 00:18:28.130\nIf I had more routers between me and\nheadquarters, that wouldn't happen and\n\n379\n00:18:28.130 --> 00:18:29.110\nI wouldn't see those.\n\n380\n00:18:29.110 --> 00:18:33.570\nBut because headquarters is a part of that\narea I'm seeing them as ON1's, all right.\n\n381\n00:18:33.570 --> 00:18:35.940\nAnd when I look at my other routers.\n\n382\n00:18:35.940 --> 00:18:38.260\nIf I go to like branch two here.\n\n383\n00:18:38.260 --> 00:18:42.180\nAnd I do a show ip route ospf, and\nI take a look at what its got.\n\n384\n00:18:42.180 --> 00:18:46.000\nWell, I can look down the list,\nand here's the 101 and\n\n385\n00:18:46.000 --> 00:18:50.570\n102 networks that are coming\nin from the NSSA.\n\n386\n00:18:50.570 --> 00:18:53.100\nRemember those didn't show up a minute\nago, when it was a stub they didn't show\n\n387\n00:18:53.100 --> 00:18:57.610\nup cuz a stub's not allowed to have\nan ASBR, now the ASBR is allowed.\n\n388\n00:18:57.610 --> 00:18:59.890\nAnd I get it, and\nI just see them as OE1's.\n\n389\n00:18:59.890 --> 00:19:02.540\nI don't actually know that\nit came from an NSSA or not,\n\n390\n00:19:02.540 --> 00:19:04.500\nI just see it as an external round and\nthere it is.\n\n391\n00:19:04.500 --> 00:19:10.618\nAll right, so it comes in, so now,\nthat area's allowed to contain an ASBR.\n\n392\n00:19:10.618 --> 00:19:15.740\nAll right, but, just like a stub,\nwhen I go back here to\n\n393\n00:19:15.740 --> 00:19:20.590\nbranch one, I get those inner area routes\nand they really serve no purpose here.\n\n394\n00:19:20.590 --> 00:19:23.083\nAnd so I might wanna suppress\nthose routes, right?\n\n395\n00:19:23.083 --> 00:19:24.411\nHide those summary routes,\n\n396\n00:19:24.411 --> 00:19:28.260\njust like we did with the stub when\nwe became a totally stubby area.\n\n397\n00:19:28.260 --> 00:19:32.104\nSo here we can become\na totally stubby NSSA, right?\n\n398\n00:19:32.104 --> 00:19:35.715\nIf we say it all out, we're gonna have\na totally stubby, not so stubby area.\n\n399\n00:19:35.715 --> 00:19:37.270\n>> [LAUGH]\n>> And that just blows your mind, right?\n\n400\n00:19:37.270 --> 00:19:38.790\n>> It does.\n>> What's that all about?\n\n401\n00:19:38.790 --> 00:19:42.370\nWell, we're allowed to originate in ASBR,\nright?\n\n402\n00:19:42.370 --> 00:19:48.030\nOriginate external routes, but we're\nsuppressing external routes coming to us.\n\n403\n00:19:48.030 --> 00:19:50.510\nAnd we're suppressing\nsummary routes coming to us.\n\n404\n00:19:50.510 --> 00:19:52.240\nSo we get a nice small rounding table, but\n\n405\n00:19:52.240 --> 00:19:54.490\nwe can still originate\nthose external rounds.\n\n406\n00:19:54.490 --> 00:19:59.560\nThat's what a totally NSSA or\na totally stubby NSSA can do, all right?\n\n407\n00:19:59.560 --> 00:20:03.560\nAnd just like configuring\na totally stubby area,\n\n408\n00:20:03.560 --> 00:20:05.570\nwe just configure it on the border, right?\n\n409\n00:20:05.570 --> 00:20:11.280\nSo I go right back to headquarters,\nright here where I said area 1 nssa,\n\n410\n00:20:11.280 --> 00:20:14.745\nand this time I just add right\nto the end of it, no-summary.\n\n411\n00:20:16.470 --> 00:20:17.980\nAll right, no summary.\n\n412\n00:20:17.980 --> 00:20:21.300\nNow, when I do that,\nI'm gonna to do a summary route.\n\n413\n00:20:21.300 --> 00:20:25.190\nI'm going to take my summaries out, my\ntype three LSA's and I'm not going to send\n\n414\n00:20:25.190 --> 00:20:28.100\nthose into that area, and they're\ngoing to lose those inner area routes.\n\n415\n00:20:28.100 --> 00:20:30.340\nAnd that'll be okay because they\nstill have the default route,\n\n416\n00:20:30.340 --> 00:20:31.720\nwhich sends them right to me anyway.\n\n417\n00:20:31.720 --> 00:20:35.350\nSo they'll still be able to reach\nthe whole OSPF autonomous system.\n\n418\n00:20:35.350 --> 00:20:38.310\nJust passing through headquarters,\nwhich is what I want, right?\n\n419\n00:20:38.310 --> 00:20:40.024\nSo now if I go back to branch one and\n\n420\n00:20:40.024 --> 00:20:45.780\ntake a look At that routing table,\nit's nice and small.\n\n421\n00:20:45.780 --> 00:20:46.660\nAnd there we go.\n\n422\n00:20:46.660 --> 00:20:48.420\nAnd I can see I got that OIA.\n\n423\n00:20:48.420 --> 00:20:50.930\nRight, there's that default\nroute that's coming in.\n\n424\n00:20:50.930 --> 00:20:52.880\nAnd all the other ones\nhave been suppressed.\n\n425\n00:20:52.880 --> 00:20:54.790\nI still have those ON1s though, right?\n\n426\n00:20:54.790 --> 00:20:56.620\nAnd I may or may not care about that.\n\n427\n00:20:56.620 --> 00:21:00.180\nIf I really do care about that,\nif I don't want that to happen,\n\n428\n00:21:00.180 --> 00:21:02.100\nthere's actually a little\nsomething extra you can do.\n\n429\n00:21:02.100 --> 00:21:03.010\nBack here in headquarters,\n\n430\n00:21:03.010 --> 00:21:07.250\nnotice when I set no-summary, there was\nanother option here, no-redistribution.\n\n431\n00:21:07.250 --> 00:21:11.090\nRight, so I'm redistributing routes,\nand they're ending up in the NSSA.\n\n432\n00:21:11.090 --> 00:21:14.990\nSo if I want to get rid of that too,\nI could just add that right to the end.\n\n433\n00:21:14.990 --> 00:21:18.270\nNo redistribution, and that'll take\ncare of that too, it'll knock those out.\n\n434\n00:21:18.270 --> 00:21:22.640\nSo, I'll still get those routes\nbeing sent into my other areas, but\n\n435\n00:21:22.640 --> 00:21:24.400\nI won't send them into the NSSA.\n\n436\n00:21:24.400 --> 00:21:27.620\nAnd so, now it goes back to the true\nbehavior that I really want, and\n\n437\n00:21:27.620 --> 00:21:29.190\nthis one actually takes\na moment to take effect.\n\n438\n00:21:29.190 --> 00:21:32.044\nLet's see, oop, already did, good,\nI thought I was going to have to stall for\n\n439\n00:21:32.044 --> 00:21:33.060\na second there.\n\n440\n00:21:33.060 --> 00:21:37.790\nSo, I just have my default route,\nthat's all that I'm learning here.\n\n441\n00:21:37.790 --> 00:21:42.410\nI'm originating that 101 and\n102.0.0.0 slash 24 network.\n\n442\n00:21:42.410 --> 00:21:47.034\nAnd if I jump on over to another branch,\nI should still see those.\n\n443\n00:21:47.034 --> 00:21:49.738\nLet's see, yep, there they are.\n\n444\n00:21:49.738 --> 00:21:51.615\nRight there, so I'm still originating,\n\n445\n00:21:51.615 --> 00:21:53.917\nnow I'm getting that behavior that I want,\nright?\n\n446\n00:21:53.917 --> 00:21:56.990\nSo you guys kind of get an idea\nof how we can tweak this stuff.\n\n447\n00:21:56.990 --> 00:21:58.380\nThe hard part is just remembering it, and\n\n448\n00:21:58.380 --> 00:22:01.050\nif this is the first time you're\nexposed to it, it's pretty hard, right?\n\n449\n00:22:01.050 --> 00:22:03.650\nSo just remember, when I make an area,\n\n450\n00:22:03.650 --> 00:22:07.970\njust a standard area, it doesn't\nchange the routing table at all.\n\n451\n00:22:07.970 --> 00:22:11.190\nThe O routes that are not in\nmy area just become OIA's, but\n\n452\n00:22:11.190 --> 00:22:13.060\notherwise the metrics and\nall that stuff are the same.\n\n453\n00:22:13.060 --> 00:22:14.470\nIt really doesn't change things.\n\n454\n00:22:14.470 --> 00:22:17.877\nSo when you become an area, you're just\nshrinking your link state database.\n\n455\n00:22:17.877 --> 00:22:19.815\nYou're shrinking the routers\nyou have to talk to, all right?\n\n456\n00:22:19.815 --> 00:22:23.670\nThen if we go to a stub.\n\n457\n00:22:23.670 --> 00:22:28.129\nA stub suppresses, well,\nreally just suppresses external routes,\n\n458\n00:22:28.129 --> 00:22:29.497\nthat's it, right?\n\n459\n00:22:29.497 --> 00:22:33.430\nThe OE1's and OE2's that are coming in,\nwe replace those with the default route.\n\n460\n00:22:33.430 --> 00:22:37.696\nA totally stubby area replaces\nthe inter-area routes also.\n\n461\n00:22:37.696 --> 00:22:39.752\nAnd so we just end up with\nthat default route, and\n\n462\n00:22:39.752 --> 00:22:42.072\nwhatever routes are internal to our area,\nall right?\n\n463\n00:22:42.072 --> 00:22:46.860\nIn a stub and a totally stubby\narea you cannot have a ASBR.\n\n464\n00:22:46.860 --> 00:22:48.459\nRight, you can't originate\nexternal routes.\n\n465\n00:22:49.840 --> 00:22:55.190\nThen, if we want to originate external\nroutes, we can an NSSA or a totally NSSA.\n\n466\n00:22:55.190 --> 00:22:59.290\nNSSA, not so stubby area, that means we\ncan filter out external routes coming\n\n467\n00:22:59.290 --> 00:23:02.050\ninto us, but\nadvertise our own external routes, right?\n\n468\n00:23:02.050 --> 00:23:04.840\nWe can originate external\nroutes like an ASBR would.\n\n469\n00:23:04.840 --> 00:23:09.160\nAnd then a totally NSSA will suppress\nnot just external routes coming in, but\n\n470\n00:23:09.160 --> 00:23:12.600\nit will also suppress\nthe inter-area routes coming in.\n\n471\n00:23:12.600 --> 00:23:14.850\nBut we still are able to\noriginate external routes.\n\n472\n00:23:14.850 --> 00:23:16.820\nSo, it's all about\nlooking at your scenario,\n\n473\n00:23:16.820 --> 00:23:18.760\nand what you're trying to achieve, right?\n\n474\n00:23:18.760 --> 00:23:20.620\nWhat do I need, do I have external routes?\n\n475\n00:23:20.620 --> 00:23:24.913\nIf I do, then I'm gonna need NSSA's or\nI'm gonna need totally NSSA.\n\n476\n00:23:24.913 --> 00:23:29.154\nIf I don't have that external route, if I\ndon't have an ASBR, then I need a stub or\n\n477\n00:23:29.154 --> 00:23:30.510\na totally stub.\n\n478\n00:23:30.510 --> 00:23:31.760\nAnd then it just comes down to preference,\n\n479\n00:23:31.760 --> 00:23:33.230\nwhether I want to hide the summaries or\nnot.\n\n480\n00:23:33.230 --> 00:23:35.630\nWhether I go totally or\ngo normally, all right?\n\n481\n00:23:35.630 --> 00:23:37.570\nIt's confusing,\nit's something you'll have to memorize.\n\n482\n00:23:37.570 --> 00:23:40.000\nThe more you work with it,\nthe more you get used to it.\n\n483\n00:23:40.000 --> 00:23:42.830\nI'll put a little table in the notes so\nyou guys kinda see a comparison of them.\n\n484\n00:23:42.830 --> 00:23:45.010\nIt's really helpful for\nkinda memorizing that stuff.\n\n485\n00:23:45.010 --> 00:23:48.680\nBut, those are the area types and\nit's just important to remember.\n\n486\n00:23:48.680 --> 00:23:52.320\n>> Don, I am totally not as\nconfused as I was before.\n\n487\n00:23:52.320 --> 00:23:55.500\nSo, I don't know which particular\narea type I actually am now.\n\n488\n00:23:55.500 --> 00:23:57.045\nBut sounds all good.\n\n489\n00:23:57.045 --> 00:23:58.870\nIt's a lot of material for\nus to go through.\n\n490\n00:23:58.870 --> 00:24:02.660\nIf this is your first time seeing it,\nremember go back through practices so\n\n491\n00:24:02.660 --> 00:24:04.450\nthat you do see the result of them.\n\n492\n00:24:04.450 --> 00:24:07.460\nThat's what's going to really sink this\ninto your head as you get ready for\n\n493\n00:24:07.460 --> 00:24:08.700\nthe exam.\n\n494\n00:24:08.700 --> 00:24:11.880\nBy doing it over and over again, and you\nstart seeing those routes coming in and\n\n495\n00:24:11.880 --> 00:24:16.850\nout, it really does help to sink\nall that stuff in and to be ready.\n\n496\n00:24:16.850 --> 00:24:19.685\nAll right, so\nthat about wraps up our show for today.\n\n497\n00:24:19.685 --> 00:24:22.005\nThank you for watching,\nI've been your host Ronny Wong.\n\n498\n00:24:22.005 --> 00:24:22.669\n>> And I'm Don Pezet.\n\n499\n00:24:22.669 --> 00:24:23.887\n>> And we'll see you next time.\n\n500\n00:24:23.887 --> 00:24:30.680\n[MUSIC]\n\n",
          "vimeoId": "137949898"
        },
        {
          "description": "Virtual links are a temporary solution used to get past network failure, which go against the rules of OSPF and work to get the user at least some connectivity. Viewers will hear about how virtual links work and the key to getting it configured.",
          "length": "1358",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/ccnproute/cisco-ccnproute300101-3-26e-ospf_virtual_links-083115-1.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/ccnproute/cisco-ccnproute300101-3-26e-ospf_virtual_links-083115-1-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/ccnproute/cisco-ccnproute300101-3-26e-ospf_virtual_links-083115-1-sm.jpg",
          "title": "OSPF Virtual Links",
          "transcript": "WEBVTT\n\n1\n00:00:00.000 --> 00:00:10.418\n[MUSIC]\n\n2\n00:00:10.418 --> 00:00:12.888\nWelcome to another great\nshow here on ITProV.\n\n3\n00:00:12.888 --> 00:00:16.560\nToday we're taking a look at CCMP route,\nmaking sure that we are ready for\n\n4\n00:00:16.560 --> 00:00:17.540\nthe exam.\n\n5\n00:00:17.540 --> 00:00:18.590\nI'm your host Ronnie Wong.\n\n6\n00:00:18.590 --> 00:00:21.040\nAnd here to help us out today,\nMr. Don Pezet.\n\n7\n00:00:21.040 --> 00:00:21.830\nHow's it going?\n\n8\n00:00:21.830 --> 00:00:22.840\n>> It is going great Ronnie.\n\n9\n00:00:22.840 --> 00:00:24.840\nReady to dive right back\ninto the world of OSPF.\n\n10\n00:00:24.840 --> 00:00:28.370\nAnd in this episode we're gonna\ntake a look at some voodoo magic,\n\n11\n00:00:28.370 --> 00:00:29.175\nthat's built into OSPF.\n\n12\n00:00:29.175 --> 00:00:31.690\n>> [LAUGH]\n>> It's called a virtual link,\n\n13\n00:00:31.690 --> 00:00:33.225\nand,\n>> Voodoo.\n\n14\n00:00:33.225 --> 00:00:35.480\n[LAUGH]\n>> Before we jump into this one,\n\n15\n00:00:35.480 --> 00:00:38.400\nwe need to revisit the statement I\nmade in an earlier episode, right?\n\n16\n00:00:38.400 --> 00:00:40.586\nWhich it was absolutely true,\nso I'm not like redacting,\n\n17\n00:00:40.586 --> 00:00:41.789\n>> [LAUGH]\n\n18\n00:00:41.789 --> 00:00:45.720\n>> I'm saying that, or I said in the past,\n\n19\n00:00:45.720 --> 00:00:52.520\nthat traffic and OSPF can only pass\nfrom one area, to the backbone area.\n\n20\n00:00:52.520 --> 00:00:54.290\nRight.\nRemember that Area Zero is special,\n\n21\n00:00:54.290 --> 00:00:56.550\nArea Zero is your backbone.\n\n22\n00:00:56.550 --> 00:00:57.830\nAnd if I have other areas,\n\n23\n00:00:57.830 --> 00:01:02.000\narea one, area two, area three, they\ncan't pass directly between each other.\n\n24\n00:01:02.000 --> 00:01:04.380\nArea one cannot directly talk to area two,\n\n25\n00:01:04.380 --> 00:01:06.500\nand area two cannot\ndirectly talk to area one.\n\n26\n00:01:06.500 --> 00:01:08.945\nThey have to go through area zero.\n\n27\n00:01:08.945 --> 00:01:10.790\nThat's the requirement, alright.\n\n28\n00:01:10.790 --> 00:01:13.270\nAnd that's what I said in the other\nepisode, and I'm standing by that.\n\n29\n00:01:14.360 --> 00:01:15.580\nBut,\n>> [LAUGH]\n\n30\n00:01:15.580 --> 00:01:17.010\n>> there are times where\n\n31\n00:01:17.010 --> 00:01:18.480\nsomething happens right.\n\n32\n00:01:18.480 --> 00:01:19.840\nA network link fails.\n\n33\n00:01:19.840 --> 00:01:23.260\nSomething happens where your\nnetwork becomes isolated.\n\n34\n00:01:23.260 --> 00:01:25.300\nI might have an area like area two,\n\n35\n00:01:25.300 --> 00:01:29.110\nsomehow becomes isolated from area zero,\nalright.\n\n36\n00:01:29.110 --> 00:01:31.160\nAnd when that happens,\n\n37\n00:01:31.160 --> 00:01:35.390\nI'm willing to do whatever it takes to\nget that network back online, okay.\n\n38\n00:01:35.390 --> 00:01:38.350\nThe problem is it has to\nconnect to area zero.\n\n39\n00:01:38.350 --> 00:01:41.450\nAnd if for some reason I can't\nget it to connect to area zero,\n\n40\n00:01:41.450 --> 00:01:43.980\nthere is actually a trick we can use.\n\n41\n00:01:43.980 --> 00:01:46.840\nWhere you can take an area,\nlike area two, and\n\n42\n00:01:46.840 --> 00:01:49.050\nif it can get connected to any other area,\nright?\n\n43\n00:01:49.050 --> 00:01:50.800\nI can get it to area one,\narea 50, whatever.\n\n44\n00:01:50.800 --> 00:01:53.080\nIf I can connect it to any other area.\n\n45\n00:01:53.080 --> 00:01:55.800\nI can create what's called a virtual link.\n\n46\n00:01:55.800 --> 00:02:00.300\nNow, area two is not allowed to exchange\nroutes with area one, or area 50, right?\n\n47\n00:02:01.620 --> 00:02:06.400\nBut, if we build a virtual link,\nwhat will happen is that transit area,\n\n48\n00:02:06.400 --> 00:02:09.120\nthe person who's kind of sitting in the\nmiddle, area one in this scenario, right?\n\n49\n00:02:09.120 --> 00:02:11.310\nArea one kinda turns a blind eye and\nsays, okay.\n\n50\n00:02:11.310 --> 00:02:13.240\nI'm gonna pretend like\nI'm not seeing this, and\n\n51\n00:02:13.240 --> 00:02:14.635\nlet me just send it up to area zero.\n\n52\n00:02:14.635 --> 00:02:17.380\nCuz I'm not supposed to do this, but\nbecause we're friends, I'll go ahead and\n\n53\n00:02:17.380 --> 00:02:19.080\npass on, don't tell your buddies.\n\n54\n00:02:19.080 --> 00:02:22.490\nAnd it'll send it along to area zero,\nand area zero will receive it, and\n\n55\n00:02:22.490 --> 00:02:23.437\nwe restore connectivity, alright.\n\n56\n00:02:24.845 --> 00:02:26.915\nFirst off, it's against the rules of OSPF.\n\n57\n00:02:26.915 --> 00:02:28.775\nSo, you shouldn't do it, right.\n\n58\n00:02:28.775 --> 00:02:30.990\nSecond off, the odds are your\nperformance is gonna suck.\n\n59\n00:02:30.990 --> 00:02:33.205\n[LAUGH] Right, that you had\na connection back to area zero.\n\n60\n00:02:33.205 --> 00:02:35.555\nAnd now you're going through some\nother area on your way there and\n\n61\n00:02:35.555 --> 00:02:36.575\nyou're doing this virtually.\n\n62\n00:02:36.575 --> 00:02:39.305\nThere's a lot of bad things\nthat can happen here.\n\n63\n00:02:39.305 --> 00:02:41.165\nIt's not something we want to do.\n\n64\n00:02:41.165 --> 00:02:44.465\nBut boy, if you're in a pinch,\nif the network is down.\n\n65\n00:02:44.465 --> 00:02:47.160\nIf you've got entire buildings\nthat are disconnected.\n\n66\n00:02:47.160 --> 00:02:48.920\nThis'll get you back up.\n\n67\n00:02:48.920 --> 00:02:50.150\nWhat's called a virtual link.\n\n68\n00:02:50.150 --> 00:02:53.640\nVirtual links break the rules for OSPF.\n\n69\n00:02:53.640 --> 00:02:55.800\nThey're never intended\nto be used permanently.\n\n70\n00:02:55.800 --> 00:02:59.090\nIt's just a temporary solution to get\npast the network failure, alright.\n\n71\n00:02:59.090 --> 00:03:01.380\nSo let me paint a picture for us here.\n\n72\n00:03:01.380 --> 00:03:03.230\nSo we're gonna do a little story, alright.\n\n73\n00:03:03.230 --> 00:03:05.580\nSo I've got a diagram here of my topology.\n\n74\n00:03:05.580 --> 00:03:06.380\nI've headquarters.\n\n75\n00:03:06.380 --> 00:03:09.850\nAnd I've got these branch networks out\nhere, Branch 1, Branch 2, and Branch 3.\n\n76\n00:03:09.850 --> 00:03:13.220\nAnd for whatever reason, maybe optimizing\nthe routing table or whatever.\n\n77\n00:03:13.220 --> 00:03:16.610\nI decide that I want to\ndivide it up into areas.\n\n78\n00:03:16.610 --> 00:03:18.870\nSo branch 1 is entirely in area one.\n\n79\n00:03:18.870 --> 00:03:20.090\nBranch 2 is in area two.\n\n80\n00:03:20.090 --> 00:03:21.630\nBranch 3 is in area three, right.\n\n81\n00:03:23.020 --> 00:03:25.460\nAnd for some reason something happens.\n\n82\n00:03:25.460 --> 00:03:27.004\nRight a squirrel chews\nthrough a fiber line.\n\n83\n00:03:27.004 --> 00:03:28.553\n>> [LAUGH]\n>> We've actually had that happen in this\n\n84\n00:03:28.553 --> 00:03:29.300\nvery building.\n\n85\n00:03:29.300 --> 00:03:34.100\nSo something happens and branch 2 loses\nit's connectivity to headquarters.\n\n86\n00:03:34.100 --> 00:03:36.330\nWell headquarters is area zero.\n\n87\n00:03:36.330 --> 00:03:40.910\nBranch 2, the router is still up and\nrunning, area two is still healthy,\n\n88\n00:03:40.910 --> 00:03:43.200\nit just doesn't have\na connection to area zero.\n\n89\n00:03:43.200 --> 00:03:47.098\nAnd because of that,\nit can't function anymore, right.\n\n90\n00:03:47.098 --> 00:03:50.580\nSo I started thinking, well what can I do,\nhow can I get this to work?\n\n91\n00:03:51.790 --> 00:03:54.900\nMaybe I have an extra fiber strand\nthat runs between that branch and\n\n92\n00:03:54.900 --> 00:03:55.840\nanother branch.\n\n93\n00:03:55.840 --> 00:04:00.270\nMaybe I, call up my MPLS provider, frame\nrelay provider, and say hey can you guys\n\n94\n00:04:00.270 --> 00:04:03.320\nquick build me a virtual circuit and\nconnect branch 2 to some other branch?\n\n95\n00:04:03.320 --> 00:04:05.710\nJust do something to get me going,\nalright.\n\n96\n00:04:05.710 --> 00:04:07.630\nAnd they say oh yeah we can do that,\n\n97\n00:04:07.630 --> 00:04:10.120\nwe can connect branch 2 to\nyour branch 1 if you want.\n\n98\n00:04:10.120 --> 00:04:12.460\nAnd we say that's great,\nthat'll work great.\n\n99\n00:04:12.460 --> 00:04:14.550\nOnly there's a little bit of a problem.\n\n100\n00:04:14.550 --> 00:04:19.490\nWhen we build up that back up link to\nanother area it's a different area.\n\n101\n00:04:19.490 --> 00:04:23.410\nArea two, is now connecting to area one.\n\n102\n00:04:23.410 --> 00:04:25.100\nAnd so when we look at it\nfrom that perspective we have\n\n103\n00:04:25.100 --> 00:04:27.000\na topology that's something like this.\n\n104\n00:04:27.000 --> 00:04:29.610\nRight.\nWhere area one,\n\n105\n00:04:29.610 --> 00:04:33.210\nthis branch router here\nbecomes a border router.\n\n106\n00:04:33.210 --> 00:04:37.660\nBut it's not a true border router, because\nit's bordering area one and area two.\n\n107\n00:04:37.660 --> 00:04:41.470\nA true border router,\nalways borders area zero.\n\n108\n00:04:41.470 --> 00:04:43.760\nThis one, what good is it gonna do?\n\n109\n00:04:43.760 --> 00:04:44.560\nNothing.\n\n110\n00:04:44.560 --> 00:04:48.930\nIf I configure it this way, my area\ntwo routes will not propagate, right.\n\n111\n00:04:48.930 --> 00:04:51.550\nThey won't make it to headquarters,\nthey won't make it to area three.\n\n112\n00:04:51.550 --> 00:04:55.270\nBecause these routes have\nto propagate to area zero.\n\n113\n00:04:55.270 --> 00:04:57.980\nSo, on one hand my ISP saved my butt.\n\n114\n00:04:57.980 --> 00:04:59.070\nThey got this link up.\n\n115\n00:04:59.070 --> 00:05:00.890\nI'm able to get connectivity.\n\n116\n00:05:00.890 --> 00:05:03.490\nBut, on the other hand, OSPF is broken.\n\n117\n00:05:03.490 --> 00:05:06.120\nAnd I might be able to overcome\nthat with some static route magic,\n\n118\n00:05:06.120 --> 00:05:07.779\ngo in there and\nthrow routes all over the place.\n\n119\n00:05:08.970 --> 00:05:11.450\nOr I could use a virtual link.\n\n120\n00:05:11.450 --> 00:05:13.950\nAnd the way a virtual link works is,\n\n121\n00:05:13.950 --> 00:05:20.290\nwe build a link between\nthe area here in area one.\n\n122\n00:05:20.290 --> 00:05:24.430\nAnd headquarters, the other one, we're\nbuilding a link between border routers.\n\n123\n00:05:24.430 --> 00:05:28.400\nAnd it creates a virtual connection\nbetween area two and area zero.\n\n124\n00:05:28.400 --> 00:05:31.740\nTo make area two think,\nthat it's connected to area zero.\n\n125\n00:05:31.740 --> 00:05:34.221\nAnd instead of advertising\nroutes into area one,\n\n126\n00:05:34.221 --> 00:05:36.330\nit's advertising routes to headquarters.\n\n127\n00:05:36.330 --> 00:05:38.228\nWhich then advertises\nthem down to area one and\n\n128\n00:05:38.228 --> 00:05:41.220\narea three, and\nthat's where the bad performance comes in.\n\n129\n00:05:41.220 --> 00:05:43.870\nCuz area one has direct connectivity here.\n\n130\n00:05:43.870 --> 00:05:46.250\nBut it's gonna send traffic to\nheadquarters, it's gonna come back,\n\n131\n00:05:46.250 --> 00:05:48.870\nit's gonna go this way, it's like bad\nrouting, it's suboptimal routing.\n\n132\n00:05:48.870 --> 00:05:50.530\nBut it's gonna so optimal anyway.\n\n133\n00:05:50.530 --> 00:05:52.050\nYour network's broken, right?\n\n134\n00:05:52.050 --> 00:05:56.220\nOur primary goal needs to be to fix this\nlink between branch 2 and headquarters.\n\n135\n00:05:56.220 --> 00:05:58.830\nBut in the mean time,\nat least we got some connectivity.\n\n136\n00:05:58.830 --> 00:06:00.090\nAnd that's what virtual\nlinks are all about,\n\n137\n00:06:00.090 --> 00:06:02.780\njust getting some connectivity, alright.\n\n138\n00:06:02.780 --> 00:06:05.840\nSo, let's see this in action all right.\n\n139\n00:06:05.840 --> 00:06:09.730\nRight now, I've got my routers here,\nand I've got that exact environment up.\n\n140\n00:06:09.730 --> 00:06:13.510\nEach branches in it's own area,\nand the network is healthy.\n\n141\n00:06:13.510 --> 00:06:14.010\nRight.\n\n142\n00:06:14.010 --> 00:06:16.480\nSo, here on headquarters.\n\n143\n00:06:16.480 --> 00:06:19.850\nIf I enable and\ndo like a show ip ospf neighbor.\n\n144\n00:06:19.850 --> 00:06:21.060\nI can see my neighbors, right?\n\n145\n00:06:21.060 --> 00:06:22.970\nThis is branch 1, branch 2, branch 3.\n\n146\n00:06:22.970 --> 00:06:24.120\nThey're all sitting out there.\n\n147\n00:06:24.120 --> 00:06:24.670\nThey're all up.\n\n148\n00:06:24.670 --> 00:06:25.820\nThey're all healthy.\n\n149\n00:06:25.820 --> 00:06:27.419\nAnd if I look at my routing table.\n\n150\n00:06:28.800 --> 00:06:33.963\nI can get to their 172.16 networks\nby each of those, these are point to\n\n151\n00:06:33.963 --> 00:06:38.310\npoint frame relay links, so I can get to\nthose via the frame relay links, alright?\n\n152\n00:06:38.310 --> 00:06:41.590\nIf branch 2's connection were to fail,\nthough, right.\n\n153\n00:06:41.590 --> 00:06:44.080\nAnd I can fail it right\nhere on headquarters, so\n\n154\n00:06:44.080 --> 00:06:48.440\nif I get into serial 1/0.2 and\nshut it down, right?\n\n155\n00:06:48.440 --> 00:06:50.090\nI just cut off area two.\n\n156\n00:06:50.090 --> 00:06:52.140\nArea two just went down, alright?\n\n157\n00:06:52.140 --> 00:06:54.960\nSo now when I do a show ip ospf neighbor.\n\n158\n00:06:56.300 --> 00:06:58.930\nI no longer have a connection to branch 2.\n\n159\n00:06:58.930 --> 00:07:03.190\nAnd if I do a show ip route ospf,\nI'll have lost the routes to it.\n\n160\n00:07:03.190 --> 00:07:06.082\nRight?\nSo I no longer have a route to 172.16.4.\n\n161\n00:07:06.082 --> 00:07:08.465\nAll right?\nSo branch 2 is off the grid.\n\n162\n00:07:08.465 --> 00:07:11.280\nAnd branch 2's just sitting over there,\nand it's very sad.\n\n163\n00:07:11.280 --> 00:07:15.460\nAnd if I go over here to branch 2,\nI can do that show ipos neighbor.\n\n164\n00:07:15.460 --> 00:07:18.170\nAnd I still show headquarters.\n\n165\n00:07:18.170 --> 00:07:18.715\nNow, why is that?\n\n166\n00:07:18.715 --> 00:07:20.520\nWell, it's because of the dead time.\n\n167\n00:07:20.520 --> 00:07:21.670\nSee how I have a dead time on it?\n\n168\n00:07:21.670 --> 00:07:23.440\nAnd I have to wait for it to age out.\n\n169\n00:07:23.440 --> 00:07:25.100\nBut, it's gonna age out here soon.\n\n170\n00:07:25.100 --> 00:07:28.280\nThe default should be 40 seconds,\nwhich apparently, I just crossed.\n\n171\n00:07:28.280 --> 00:07:30.070\nAnd now it goes down, right?\n\n172\n00:07:30.070 --> 00:07:31.480\nAnd so, it' knows it's down.\n\n173\n00:07:31.480 --> 00:07:32.960\nNow I don't have any neighbors.\n\n174\n00:07:32.960 --> 00:07:34.420\nI'm dead in the water, right?\n\n175\n00:07:34.420 --> 00:07:35.620\nThis router's still up.\n\n176\n00:07:35.620 --> 00:07:37.960\nThere might be ten routers behind\nit that are all still up and\n\n177\n00:07:37.960 --> 00:07:42.120\nwe're all in area two and we all happy,\nexcept we can't get to area zero.\n\n178\n00:07:42.120 --> 00:07:44.260\nSo this is where I call up\nthe internet service provider.\n\n179\n00:07:44.260 --> 00:07:45.990\nRight?\nSo this is going back to my,\n\n180\n00:07:45.990 --> 00:07:47.790\nmy kind of drawings here right.\n\n181\n00:07:47.790 --> 00:07:49.440\nThis is where I'm at right now.\n\n182\n00:07:49.440 --> 00:07:50.991\nAnd I'm going to call up my internet\nservice provider and say, hey,\n\n183\n00:07:50.991 --> 00:07:51.512\ngive me a backup link.\n\n184\n00:07:51.512 --> 00:07:53.150\nOkay, and they're going to do that for\nme, right, they're going to get me setup.\n\n185\n00:07:53.150 --> 00:07:57.729\nAnd they'll usually just give you some\ndifferent delsy numbers to point to,\n\n186\n00:07:57.729 --> 00:08:01.251\nand so you can kind of remap your\ndelsies and go like that, so\n\n187\n00:08:01.251 --> 00:08:03.516\nThis is the advantage of frame relay.\n\n188\n00:08:03.516 --> 00:08:05.303\nWell, or MPLS for that matter.\n\n189\n00:08:05.303 --> 00:08:08.910\nIf I do a quick interface lookup here.\n\n190\n00:08:08.910 --> 00:08:13.380\nSee how I've got this IP address assigned\nto my interface on serial 1/0.1, and\n\n191\n00:08:13.380 --> 00:08:16.190\nit's tied to a particular dlci number,\nright?\n\n192\n00:08:16.190 --> 00:08:19.820\nI can bring up a new dlci, and\nget it connected and kinda point across.\n\n193\n00:08:19.820 --> 00:08:23.763\nRight, so, if I get into say,\nserial 1/0.2.\n\n194\n00:08:23.763 --> 00:08:28.488\nRight, which is going to be\na point-to-point connection.\n\n195\n00:08:28.488 --> 00:08:31.640\nAnd I'm gonna be connecting\nthis over to branch 1.\n\n196\n00:08:31.640 --> 00:08:33.979\nSo I'll give it an IP address, and\nI'll just make up a network here.\n\n197\n00:08:33.979 --> 00:08:36.417\nMaybe I'll use 192.160.254.\n\n198\n00:08:36.417 --> 00:08:43.720\nWe'll go crazy, and we'll just do a very\nsmall, like slash 30 network on it, right?\n\n199\n00:08:43.720 --> 00:08:48.940\nAnd I'll say, #frame-relay interface-dlci,\nand this is where they'll tell me,\n\n200\n00:08:48.940 --> 00:08:52.200\nokay, we're connecting this virtual\ncircuit over to the other branch.\n\n201\n00:08:52.200 --> 00:08:56.304\nAnd so, I'm in branch 2 and I'm connecting\nto branch 1, which I think my dlci's 302?\n\n202\n00:08:56.304 --> 00:08:57.209\n>> 302.\n\n203\n00:08:57.209 --> 00:08:57.890\n>> 302, okay, all right.\n\n204\n00:08:58.910 --> 00:09:02.720\nSo, hopefully we have a ISP on the phone\nand they're telling us the dlci to use, so\n\n205\n00:09:02.720 --> 00:09:03.893\nI'm using dlci 302.\n\n206\n00:09:03.893 --> 00:09:07.074\nAnd then I just need to tell it\nthat it's gonna be an ospf, right?\n\n207\n00:09:07.074 --> 00:09:08.804\nAnd so this is Area 2, right?\n\n208\n00:09:08.804 --> 00:09:11.405\nI'm an Area 2 router, this is Area 2.\n\n209\n00:09:11.405 --> 00:09:12.589\nI need to get this connected.\n\n210\n00:09:12.589 --> 00:09:18.800\nNow, I can jump over to branch 1 and\nset up the other side.\n\n211\n00:09:18.800 --> 00:09:23.550\nBranch 1 already has a healthy\nconnection to headquarters, right?\n\n212\n00:09:23.550 --> 00:09:25.140\nIf I do a show IP interface brief,\n\n213\n00:09:25.140 --> 00:09:28.490\nI can see it's got this serial interface\nthat connects it up to headquarters.\n\n214\n00:09:28.490 --> 00:09:33.610\nIt's up, it's healthy, if I do a show\nip ospf nei, it's got that connection\n\n215\n00:09:33.610 --> 00:09:38.053\nto headquarters, and a show IP route ospf,\nI've got ospf routes.\n\n216\n00:09:38.053 --> 00:09:39.480\nSo branch 1's happy.\n\n217\n00:09:39.480 --> 00:09:43.648\nBut I'm gonna add the second\nconnection to branch 2, and so\n\n218\n00:09:43.648 --> 00:09:48.223\nI need to get into my configuration,\nand I'll add that one in, and\n\n219\n00:09:48.223 --> 00:09:53.150\nI'll put this in that same little fake\nnetwork that I made a minute ago.\n\n220\n00:09:54.490 --> 00:09:58.780\nAnd so just kind of throwing it in one\nof those slash 30 type networks, and\n\n221\n00:09:58.780 --> 00:10:03.380\nI'll pump it into a dlci,\nwhich is gonna be 203.\n\n222\n00:10:03.380 --> 00:10:07.170\nAnd then I just need to tell it,\nthat is gonna be in Area 2.\n\n223\n00:10:08.380 --> 00:10:13.750\nSo now, if I go back to my diagram,\nI've extended it to look like this.\n\n224\n00:10:13.750 --> 00:10:18.250\nI just brought this link up between branch\n1 and branch 2, and it's in Area 2.\n\n225\n00:10:18.250 --> 00:10:25.490\nSo branch 1 is now a border router, but\na border router between Area 1 and Area 2.\n\n226\n00:10:25.490 --> 00:10:26.796\nWhich doesn't make a whole lot of sense,\n\n227\n00:10:26.796 --> 00:10:28.632\ncuz you're not allowed to\nroute directly between those.\n\n228\n00:10:28.632 --> 00:10:32.845\nBut if I drop out of my config here,\nand do a show IP ospf, right?\n\n229\n00:10:32.845 --> 00:10:35.367\nI can look,\nhere's my router information, and\n\n230\n00:10:35.367 --> 00:10:39.460\nas I kinda scroll down on the data,\nhere's Area 1, so I'm connected to it.\n\n231\n00:10:39.460 --> 00:10:42.770\nAnd then here's Area 2,\nI'm connected to it.\n\n232\n00:10:42.770 --> 00:10:44.340\nI don't have Area 0.\n\n233\n00:10:44.340 --> 00:10:47.350\nSo you're not a true border router\nunless you connect to Area 0, right?\n\n234\n00:10:47.350 --> 00:10:48.810\nThe exception would be an ASBR.\n\n235\n00:10:48.810 --> 00:10:50.930\nIf I was an autonomous\nsystem board router.\n\n236\n00:10:50.930 --> 00:10:53.630\nBut this isn't an ASBR,\nI'm not connecting to an external network.\n\n237\n00:10:53.630 --> 00:10:55.080\nI'm connecting to one of ours, right?\n\n238\n00:10:55.080 --> 00:10:56.243\nJust a different area.\n\n239\n00:10:56.243 --> 00:11:00.697\nAnd so when I take a look at branch 2,\ntechnically branch 2 is now connected to\n\n240\n00:11:00.697 --> 00:11:03.811\nbranch 1,\nbranch 1's connected to headquarters.\n\n241\n00:11:03.811 --> 00:11:04.450\nI should be good.\n\n242\n00:11:04.450 --> 00:11:07.862\nExcept if I take a look at\nmy routing table, well,\n\n243\n00:11:07.862 --> 00:11:10.720\nI'm gonna look at my neighbor's first.\n\n244\n00:11:10.720 --> 00:11:13.435\nSo I do have a full\nadjacency with branch 1.\n\n245\n00:11:14.640 --> 00:11:18.150\nAnd if I take a look at my routing table,\nnothing.\n\n246\n00:11:18.150 --> 00:11:20.141\nI'm connected to branch 1,\nI got a full adjacency,\n\n247\n00:11:20.141 --> 00:11:21.523\nthat means I'm exchanging routes.\n\n248\n00:11:21.523 --> 00:11:23.855\nWhy am I not learning\nanything from branch 1?\n\n249\n00:11:23.855 --> 00:11:26.740\nAnd that's because it's in Area 1,\nI'm in Area 2,\n\n250\n00:11:26.740 --> 00:11:29.325\nwe're not allowed to exchange routes,\nright?\n\n251\n00:11:29.325 --> 00:11:32.355\nThe rules are in place, I'm not allowed\nto exchange routes with it, all right?\n\n252\n00:11:32.355 --> 00:11:33.770\nSo that's my problem.\n\n253\n00:11:33.770 --> 00:11:35.750\nAnd so far,\neverything's on the up and up, right?\n\n254\n00:11:35.750 --> 00:11:36.840\nThis is the standard.\n\n255\n00:11:36.840 --> 00:11:38.950\nEverything 's working\nthe way it's suppose to.\n\n256\n00:11:38.950 --> 00:11:41.860\nWhat I'm gonna do now,\nis I'm gonna cheat the system.\n\n257\n00:11:41.860 --> 00:11:45.820\nI'm gonna say,\nlet's allow branch 1 on the side\n\n258\n00:11:45.820 --> 00:11:49.390\nto pass this connection over to Area 0,\nright?\n\n259\n00:11:49.390 --> 00:11:51.580\nBranch 1 can get to Area\n0 through headquarters.\n\n260\n00:11:51.580 --> 00:11:55.640\nSo let's pass that connection over there,\ncreating a virtual link.\n\n261\n00:11:55.640 --> 00:11:58.390\nVirtually linking Area 2 to the backbone,\nall right?\n\n262\n00:11:58.390 --> 00:11:59.580\nIt's bad for performance.\n\n263\n00:11:59.580 --> 00:12:00.550\nIt's suboptimal routing.\n\n264\n00:12:00.550 --> 00:12:04.040\nBut at least this will get them online,\nand be able to function.\n\n265\n00:12:04.040 --> 00:12:06.270\nOkay, so let's get that set.\n\n266\n00:12:06.270 --> 00:12:08.408\nNow, this is the hard part.\n\n267\n00:12:08.408 --> 00:12:10.376\nSo far that the concept's not\nthat hard to understand and\n\n268\n00:12:10.376 --> 00:12:12.720\nthe commands you'll see\nare actually really short.\n\n269\n00:12:12.720 --> 00:12:15.210\nWhere it gets confusing is where\nwe build the virtual link.\n\n270\n00:12:15.210 --> 00:12:16.576\nBecause at the end of the day,\n\n271\n00:12:16.576 --> 00:12:20.630\nbranch 2 is gonna be completely unaware\nthe virtual link exists, all right?\n\n272\n00:12:20.630 --> 00:12:25.330\nThe virtual link is completely\nconfigured inside the transit area.\n\n273\n00:12:25.330 --> 00:12:27.880\nArea 1 is gonna be my transit area.\n\n274\n00:12:27.880 --> 00:12:32.392\nArea 2 is gonna be connecting to Area\n0 and in the middle of it, is Area 1,\n\n275\n00:12:32.392 --> 00:12:33.460\nall right?\n\n276\n00:12:33.460 --> 00:12:36.160\nSo, I'm gonna configure\nthis on routers in Area 1.\n\n277\n00:12:36.160 --> 00:12:37.350\nRemember this for the exam, right?\n\n278\n00:12:37.350 --> 00:12:40.640\nWhatever area you're passing through,\nthat's where you're gonna configure it.\n\n279\n00:12:40.640 --> 00:12:44.136\nAnd then,\nyou need to pick your border routers.\n\n280\n00:12:44.136 --> 00:12:44.673\nOkay, so\n\n281\n00:12:44.673 --> 00:12:49.450\nI'm gonna configure the link on the border\nrouter that connects to the broken area,\n\n282\n00:12:49.450 --> 00:12:54.400\nand I'm gonna configure the link on\nthe border router that's bordering Area 0.\n\n283\n00:12:54.400 --> 00:12:57.290\nNow if those are the same router,\nI'd actually already be done.\n\n284\n00:12:57.290 --> 00:12:59.130\nI wouldn't have to create a virtual link.\n\n285\n00:12:59.130 --> 00:13:01.390\nIf branch 1 had an interface on Area 0,\n\n286\n00:13:01.390 --> 00:13:04.850\nthen Area 2 would then be\nconnected to Area 0, I'd be done.\n\n287\n00:13:05.930 --> 00:13:08.580\nOr I could renumber\nbranch 2 to be in Area 1.\n\n288\n00:13:08.580 --> 00:13:10.000\nThat could work too, right?\n\n289\n00:13:10.000 --> 00:13:13.270\nAnd then branch 2 is in Area 1,\nit connects through, and that solves it.\n\n290\n00:13:13.270 --> 00:13:15.370\nSo there's a few other\nways we could solve this.\n\n291\n00:13:15.370 --> 00:13:19.860\nBut if I'm trying to preserve Area 2,\nif Area 2 is really large and\n\n292\n00:13:19.860 --> 00:13:21.010\nArea 1 is really large, and\n\n293\n00:13:21.010 --> 00:13:24.430\nI can't merge them together cuz of\nthe routing tables, we'll get too big.\n\n294\n00:13:24.430 --> 00:13:26.950\nRight, in that scenario,\nI need to keep them separate.\n\n295\n00:13:26.950 --> 00:13:30.452\nAnd I can create the virtual link, and\nit's gonna be between this border router,\n\n296\n00:13:30.452 --> 00:13:32.598\nand the border router that\ngets us over to Area 0.\n\n297\n00:13:32.598 --> 00:13:35.221\nSo, that's where we're gonna\nbuild that virtual link.\n\n298\n00:13:35.221 --> 00:13:39.997\nAnd the syntax is odd, because you'll\nnotice when we configure this,\n\n299\n00:13:39.997 --> 00:13:42.420\nwe never actually mention Area 0.\n\n300\n00:13:42.420 --> 00:13:45.050\nWe never mention Area 2 in the commands.\n\n301\n00:13:45.050 --> 00:13:47.380\nWe only mention the transit area.\n\n302\n00:13:47.380 --> 00:13:49.340\nWe're establishing this virtual link.\n\n303\n00:13:49.340 --> 00:13:51.620\nAnd you're establishing it\nbetween border routers.\n\n304\n00:13:51.620 --> 00:13:56.400\nSo, we're establishing it between\nthe router ID for this border router, and\n\n305\n00:13:56.400 --> 00:13:58.270\nthe router ID for this one up here.\n\n306\n00:13:58.270 --> 00:14:02.660\nSo, not only do we never mention the area\nnumbers, we never mention the subnets or\n\n307\n00:14:02.660 --> 00:14:03.820\nIP addresses either.\n\n308\n00:14:03.820 --> 00:14:05.470\nSo it's kind of a bizarre command.\n\n309\n00:14:05.470 --> 00:14:07.850\nAnd that's what's hard to\nremember about this one.\n\n310\n00:14:07.850 --> 00:14:09.890\nBut I'm gonna start on branch 1.\n\n311\n00:14:09.890 --> 00:14:16.880\nAnd on branch 1, if I do a show ip ospf\nnei, I can see who I'm connected to.\n\n312\n00:14:16.880 --> 00:14:20.770\nAnd the reason I'm pulling this up is I\nneed the neighbor ID of headquarters.\n\n313\n00:14:20.770 --> 00:14:23.380\nAnd the neighbor ID for me for\nheadquarters for me for\n\n314\n00:14:23.380 --> 00:14:24.440\nme is 0.0.0.1, right?\n\n315\n00:14:24.440 --> 00:14:25.990\nThat's the neighbor ID for headquarters.\n\n316\n00:14:25.990 --> 00:14:28.210\nThey're the ones that can\nget us to Area 0, all right?\n\n317\n00:14:28.210 --> 00:14:32.910\nSo I need to build a virtual link\nfrom me to the router ID 0.0.0.1.\n\n318\n00:14:32.910 --> 00:14:35.487\nNow, why use a router ID\ninstead of an IP address?\n\n319\n00:14:35.487 --> 00:14:38.835\nBecause I might have more than one way\nto get to that border router, right, and\n\n320\n00:14:38.835 --> 00:14:41.146\nI want to be able to take\nadvantage of all those paths.\n\n321\n00:14:41.146 --> 00:14:44.980\nIf I put a specific IP,\nI might be limiting myself.\n\n322\n00:14:44.980 --> 00:14:47.890\nSo by doing a router ID,\nit gives us more flexibility.\n\n323\n00:14:47.890 --> 00:14:51.950\nSo from here,\nwe get into our configuration, and\n\n324\n00:14:51.950 --> 00:14:53.750\nthis is where we're gonna\nconfigure that virtual link.\n\n325\n00:14:53.750 --> 00:14:56.930\nAnd we basically just jump in, and\nthe command is really not that hard.\n\n326\n00:14:56.930 --> 00:15:00.110\nWe say area, and\nwe specify the transit area.\n\n327\n00:15:00.110 --> 00:15:03.420\nArea 1 is my transit area, okay?\n\n328\n00:15:03.420 --> 00:15:06.430\nAnd then we say virtual link, and\n\n329\n00:15:06.430 --> 00:15:09.790\nwe specify the router ID of the person\nthat we want to connect to.\n\n330\n00:15:09.790 --> 00:15:11.230\nNow the, notice what it says here,\n\n331\n00:15:11.230 --> 00:15:14.325\nthe IP address associated\nwith a virtual link neighbor.\n\n332\n00:15:14.325 --> 00:15:18.690\nThat's a little bit of a misnomer cuz\nit is actually the ID, the router ID.\n\n333\n00:15:18.690 --> 00:15:20.450\nAnd it might look like an IP or\nit might not.\n\n334\n00:15:20.450 --> 00:15:23.960\nSee how mine is 0.0.0.1,\nthat's not an IP address.\n\n335\n00:15:23.960 --> 00:15:28.365\nSo be careful with that,\nthe help content is a little inaccurate.\n\n336\n00:15:28.365 --> 00:15:32.225\nI'm gonna put in that ID and there we go.\n\n337\n00:15:32.225 --> 00:15:37.060\nI now have where my router's trying to\nbuild a virtual link to that router ID.\n\n338\n00:15:38.085 --> 00:15:40.415\nNow at this point, I'm gonna start\ngetting some errors, actually,\n\n339\n00:15:40.415 --> 00:15:42.405\nI was getting the errors before,\nI just didn't see them.\n\n340\n00:15:42.405 --> 00:15:43.865\nIf I jump over to headquarters,\n\n341\n00:15:43.865 --> 00:15:46.485\nsee how headquarters has\nbeen receiving some errors?\n\n342\n00:15:46.485 --> 00:15:51.470\nAs soon as I joined Area 2 to Area 1,\nI started seeing bad LSAs on the network,\n\n343\n00:15:51.470 --> 00:15:54.220\nand so we're getting these warnings\nhere about mismatched area IDs.\n\n344\n00:15:54.220 --> 00:15:56.188\nBut now the virtual link is up,\nI'm definitely seeing it, right?\n\n345\n00:15:56.188 --> 00:15:59.384\nHere are these warnings, and it's telling\nme a virtual link needs to be present,\n\n346\n00:15:59.384 --> 00:16:01.161\nso I just have to create it on this side,\ntoo.\n\n347\n00:16:01.161 --> 00:16:03.240\nSo I'll get into ospf.\n\n348\n00:16:03.240 --> 00:16:07.535\nAnd I'll say area 1,\nagain, the transit area.\n\n349\n00:16:07.535 --> 00:16:12.515\nI'm creating a virtual link, and I need to\npoint to the router ID of the other side,\n\n350\n00:16:12.515 --> 00:16:16.023\nokay and the router ID for\nthat router is 1.1.1.1.\n\n351\n00:16:16.023 --> 00:16:18.518\nAll right.\nNow the virtual link is gonna come up and\n\n352\n00:16:18.518 --> 00:16:20.490\nI should see a new adjacency build up.\n\n353\n00:16:20.490 --> 00:16:25.400\nNow I already had an adjacency to branch\none, this is a special adjacency.\n\n354\n00:16:25.400 --> 00:16:27.880\nThis is the adjacency for\nthe virtual link.\n\n355\n00:16:27.880 --> 00:16:30.040\nIt creates a virtual interface for it.\n\n356\n00:16:30.040 --> 00:16:31.530\nNotice here in the syntax.\n\n357\n00:16:31.530 --> 00:16:35.026\nI've got a neighbor 1.1.1.1 on.\n\n358\n00:16:35.026 --> 00:16:38.520\nAnd normally it would say\nsomething here like serial1/0.1.\n\n359\n00:16:38.520 --> 00:16:41.744\nRight?\nBut in mine it says OSPF_VL0,\n\n360\n00:16:41.744 --> 00:16:45.460\nit built a virtual link,\na virtual interface,\n\n361\n00:16:45.460 --> 00:16:50.320\na whole fake interface dedicated\njust to connecting broken areas.\n\n362\n00:16:50.320 --> 00:16:51.050\nAll right.\n\n363\n00:16:51.050 --> 00:16:57.870\nAnd so now I have got this,\na virtual link between these two routers.\n\n364\n00:16:57.870 --> 00:17:01.115\nAnd it's gonna be connecting\nArea 2 to Area 0.\n\n365\n00:17:01.115 --> 00:17:03.470\nIt'll be able to pass\nover that virtual link.\n\n366\n00:17:03.470 --> 00:17:07.540\nIn fact, if I go to branch two,\nnot too much looks different, right?\n\n367\n00:17:07.540 --> 00:17:13.635\nIf I do a show ip ospf nei, I still\njust have the one neighbor, branch one.\n\n368\n00:17:13.635 --> 00:17:18.435\nBut if I do a show ip route,\nI'm learning routes, right?\n\n369\n00:17:18.435 --> 00:17:22.355\nI'm learning routes cuz now I\nthink I'm connected to Area 0.\n\n370\n00:17:22.355 --> 00:17:24.635\nI'm not connected to Area 0,\nbut I think I am.\n\n371\n00:17:24.635 --> 00:17:26.155\nAnd so I'm exchanging the routes,\n\n372\n00:17:26.155 --> 00:17:28.155\nand I'm exchanging the routes\nwith people downstream.\n\n373\n00:17:28.155 --> 00:17:30.495\nSo now I've got that functionality, and\n\n374\n00:17:30.495 --> 00:17:33.855\nArea 2 is connected again,\npassing through Area 1.\n\n375\n00:17:33.855 --> 00:17:38.820\nWhich, granted, is not great long term,\nbut at least it gets us up and online.\n\n376\n00:17:38.820 --> 00:17:41.730\nAnd now we can tell people,\nokay at least you're up and functioning,\n\n377\n00:17:41.730 --> 00:17:44.690\nnetwork shouldn't be a little slow,\nlet me go fix the real problem.\n\n378\n00:17:44.690 --> 00:17:47.720\nAnd now we can go and try to find out why\nour connection to headquarters is dead,\n\n379\n00:17:47.720 --> 00:17:49.590\nin branch two or whatever.\n\n380\n00:17:49.590 --> 00:17:51.090\nBut this gets up by.\n\n381\n00:17:51.090 --> 00:17:51.840\nOkay?\n\n382\n00:17:51.840 --> 00:17:54.520\nNow we can verify this\na few different ways.\n\n383\n00:17:54.520 --> 00:18:00.010\nIf I go back to branch one,\nthe easiest way is just show ip\n\n384\n00:18:00.010 --> 00:18:02.920\nospf nei,\nto make sure you've got neighbors.\n\n385\n00:18:02.920 --> 00:18:05.590\nAnd see how I'm connected\nto headquarters twice now.\n\n386\n00:18:05.590 --> 00:18:08.990\nSo I'm connected to\nheadquarters via Serial1/0.1.\n\n387\n00:18:08.990 --> 00:18:11.060\nThat's my normal connection to it.\n\n388\n00:18:11.060 --> 00:18:14.800\nBut I'm also peered with headquarters\non that virtual link interface.\n\n389\n00:18:14.800 --> 00:18:15.320\nRight?\nSo\n\n390\n00:18:15.320 --> 00:18:17.319\nthat's one way we can\nverify the virtual link.\n\n391\n00:18:17.319 --> 00:18:18.023\nRight?\n\n392\n00:18:18.023 --> 00:18:19.667\nAnother way that we can verify it,\n\n393\n00:18:19.667 --> 00:18:22.570\ncuz we've got a few different\ncommands that are available.\n\n394\n00:18:22.570 --> 00:18:26.935\nWe can do show ip ospf virtual-links.\n\n395\n00:18:26.935 --> 00:18:29.660\nRight?\nYou could have more than one virtual link.\n\n396\n00:18:29.660 --> 00:18:32.090\nIf you're connected to more than one area,\nin theory you could have it.\n\n397\n00:18:32.090 --> 00:18:35.230\nSo, if you pull this up, it'll show\nyou the virtual links that you have.\n\n398\n00:18:35.230 --> 00:18:39.210\nAnd I can see the virtual link right here,\nand I can see that it's up.\n\n399\n00:18:39.210 --> 00:18:42.505\nIt might be down if I've configured\none side and not the other side.\n\n400\n00:18:42.505 --> 00:18:43.950\nRight?\nThat's when you'd usually see it down.\n\n401\n00:18:43.950 --> 00:18:46.340\nOtherwise, there's not a lot of\noptions to screw up here, so\n\n402\n00:18:46.340 --> 00:18:47.950\nit's kinda hard to misconfigure it.\n\n403\n00:18:47.950 --> 00:18:49.990\nSo, this lets me know that it's up.\n\n404\n00:18:49.990 --> 00:18:53.090\nOr, if I can't find that router ID,\nthen it might show as down,\n\n405\n00:18:53.090 --> 00:18:55.272\nthose are kinda some\nof the problems there.\n\n406\n00:18:55.272 --> 00:18:56.070\nAll right.\n\n407\n00:18:56.070 --> 00:18:59.070\nNow I can look at it, I can see it's up,\nI can see how long it's been up,\n\n408\n00:18:59.070 --> 00:19:00.290\nwhether it's getting hello's and stuff.\n\n409\n00:19:00.290 --> 00:19:03.200\nSo you can get some basic information\nthere and you can see that.\n\n410\n00:19:03.200 --> 00:19:07.335\nIn the virtual interface, it does have\na network type, it does have hello timers,\n\n411\n00:19:07.335 --> 00:19:09.654\njust like any real\ninterface would with OSPF.\n\n412\n00:19:09.654 --> 00:19:10.510\nRight?\n\n413\n00:19:10.510 --> 00:19:15.022\nAnother cool thing you can notice,\nis if I do show IP OSPF database.\n\n414\n00:19:15.022 --> 00:19:16.480\nAll right.\n\n415\n00:19:16.480 --> 00:19:18.990\nIf I do show ip ospf\ndatabase on branch two.\n\n416\n00:19:20.710 --> 00:19:22.662\nThis one is entirely in Area 2.\n\n417\n00:19:22.662 --> 00:19:23.670\nRight?\n\n418\n00:19:23.670 --> 00:19:27.470\nAnd so if I take a look at that database,\neverything just looks kinda normal.\n\n419\n00:19:27.470 --> 00:19:30.800\nBut on a router with a virtual link,\nso like if i look at branch one or\n\n420\n00:19:30.800 --> 00:19:33.190\nheadquarters, the routes look different.\n\n421\n00:19:33.190 --> 00:19:35.150\nAnd they stand out, right?\n\n422\n00:19:35.150 --> 00:19:36.650\nSee this DNA flag?\n\n423\n00:19:36.650 --> 00:19:39.370\nRight?\nThat's a do not age flag.\n\n424\n00:19:39.370 --> 00:19:43.190\nNormally every time a route passes\nthrough a router we age it, right?\n\n425\n00:19:43.190 --> 00:19:46.230\nYou add your metrics to it,\nyou do things like that.\n\n426\n00:19:46.230 --> 00:19:48.010\nBut in a virtual link you don't.\n\n427\n00:19:48.010 --> 00:19:48.980\nYou don't age the route.\n\n428\n00:19:48.980 --> 00:19:51.320\nYou just keep it there and you let\nthe routers deal with it themselves.\n\n429\n00:19:51.320 --> 00:19:52.230\nBecause you're invisible.\n\n430\n00:19:52.230 --> 00:19:53.261\nYou're supposed to be transparent.\n\n431\n00:19:53.261 --> 00:19:53.980\nRight?\nYou're doing this,\n\n432\n00:19:53.980 --> 00:19:57.095\nyou're saying I'm gonna look the other\nway, and pass that stuff along.\n\n433\n00:19:57.095 --> 00:19:57.820\nRight?\n\n434\n00:19:57.820 --> 00:20:00.150\nThis do not age that's you\nlooking the other way.\n\n435\n00:20:00.150 --> 00:20:04.970\nSo I can spot those link states and\nas I look down the list I can see that\n\n436\n00:20:04.970 --> 00:20:08.170\nthose are baron, the reason it's important\nis cuz you'll have ones like these.\n\n437\n00:20:08.170 --> 00:20:08.710\nRight?\n\n438\n00:20:08.710 --> 00:20:11.772\nSee how I've got two link IDs for 2.2.2.2?\n\n439\n00:20:11.772 --> 00:20:13.660\nRight?\nOne of them doesn't have do not age,\n\n440\n00:20:13.660 --> 00:20:15.250\nthat's a real connection.\n\n441\n00:20:15.250 --> 00:20:18.450\nThe other one has do not age,\nthat's the one via the virtual link.\n\n442\n00:20:18.450 --> 00:20:19.410\nThat's a fake one.\n\n443\n00:20:19.410 --> 00:20:21.305\nRight?\nIn other words I know about it but\n\n444\n00:20:21.305 --> 00:20:22.980\nI don't wanna use it myself.\n\n445\n00:20:22.980 --> 00:20:23.930\nI'll let somebody else use it.\n\n446\n00:20:23.930 --> 00:20:26.960\nNo, I'm not gonna mess with it\nunless I absolutely have to.\n\n447\n00:20:26.960 --> 00:20:27.530\nAll right.\nSo\n\n448\n00:20:27.530 --> 00:20:30.870\nthat's another way we can verify that and\nyou know if you look here at my summaries\n\n449\n00:20:30.870 --> 00:20:33.120\nI don't have any because these\nare all valid summaries for me.\n\n450\n00:20:34.840 --> 00:20:35.465\nAll right.\n\n451\n00:20:35.465 --> 00:20:39.444\nSo at the end of the day,\nwe're now set up like this, and\n\n452\n00:20:39.444 --> 00:20:42.790\nour network is functional, for now, right?\n\n453\n00:20:42.790 --> 00:20:45.940\nWhen we have time, we have to get\nthat connection between Branch 2 and\n\n454\n00:20:45.940 --> 00:20:47.130\nHeadquarters working again.\n\n455\n00:20:47.130 --> 00:20:50.810\nWhen we do, now it's got a connection\nto Headquarters that's real, and\n\n456\n00:20:50.810 --> 00:20:53.490\nit'll start using that, and we can go and\ntear down the virtual link.\n\n457\n00:20:53.490 --> 00:20:55.760\nIt is important to tear\ndown the virtual link.\n\n458\n00:20:55.760 --> 00:20:59.310\nIf you leave it there, it's viewed\nas an alternate path to that branch,\n\n459\n00:20:59.310 --> 00:21:02.320\nand you'll continue to send routing\nupdates over it and it's bad for\n\n460\n00:21:02.320 --> 00:21:04.540\nperformance and\nyou're bothering the routers over here.\n\n461\n00:21:04.540 --> 00:21:07.330\nThe whole point of doing\nareas is that bad stuff in\n\n462\n00:21:07.330 --> 00:21:09.210\none area doesn't affect another area.\n\n463\n00:21:09.210 --> 00:21:11.150\nBut if we leave that virtual link up,\n\n464\n00:21:11.150 --> 00:21:13.560\nanything bad over here is\ngoing to affect Area 1.\n\n465\n00:21:13.560 --> 00:21:15.210\nWe don't necessarily want that, right?\n\n466\n00:21:15.210 --> 00:21:18.070\nIt's a temporary solution designed\nto get around the failure.\n\n467\n00:21:19.782 --> 00:21:22.940\nAll right, well,\nthat's pretty much it for virtual links.\n\n468\n00:21:22.940 --> 00:21:25.950\nThe configuration was pretty\nstraight forward, right?\n\n469\n00:21:25.950 --> 00:21:27.650\nLet me just kind of pull\nthat back up real quick.\n\n470\n00:21:29.100 --> 00:21:32.150\nThe key thing to remember is\nthat you configure on the border\n\n471\n00:21:32.150 --> 00:21:33.920\nrouters of the transit area.\n\n472\n00:21:33.920 --> 00:21:35.360\nSo not on the actual failed router or\n\n473\n00:21:35.360 --> 00:21:38.060\nwhatever just on the border\nrouters of the transit area.\n\n474\n00:21:38.060 --> 00:21:41.370\nAnd you say area,\nfollowed by the transit areas number,\n\n475\n00:21:41.370 --> 00:21:45.760\nnot the failed area not the backbone,\njust the transit and then virtual link\n\n476\n00:21:45.760 --> 00:21:49.040\nfollowed by the router ID of the border\nrouter you're trying to connect to.\n\n477\n00:21:49.040 --> 00:21:49.560\nRight.\nSo\n\n478\n00:21:49.560 --> 00:21:51.970\nthat's kind of the key to\ngetting that configured.\n\n479\n00:21:51.970 --> 00:21:54.170\nOtherwise, once it's in place,\nyou'll be the hero of the day and\n\n480\n00:21:54.170 --> 00:21:58.180\nyour network is running, although\nsuboptimally, at least it's running.\n\n481\n00:21:58.180 --> 00:22:01.100\n>> You know Don, a lot of times\nwhen I've set this up before,\n\n482\n00:22:01.100 --> 00:22:03.730\nI ended up trying to do it with\nthe IP address of the interface, and\n\n483\n00:22:03.730 --> 00:22:05.470\nthat's where I normally ended up failing.\n\n484\n00:22:05.470 --> 00:22:09.040\nAnd you do, if you don't remember\nwhat the router ID is gonna be,\n\n485\n00:22:09.040 --> 00:22:09.890\nit's gonna fail on you.\n\n486\n00:22:09.890 --> 00:22:11.780\nSo make sure you do check that out.\n\n487\n00:22:11.780 --> 00:22:14.040\nSo there's a lot of good information\nhere for the virtual links.\n\n488\n00:22:14.040 --> 00:22:18.080\nRemember it is a temporary solution\nnot design to be a permanent backup\n\n489\n00:22:18.080 --> 00:22:19.200\ntype of solution.\n\n490\n00:22:19.200 --> 00:22:21.760\nSo something that we can use and something\nthat we do need to learned how to\n\n491\n00:22:21.760 --> 00:22:23.920\nconfigure when we're getting ready for\nthe exam.\n\n492\n00:22:23.920 --> 00:22:28.310\nSo that's about wraps it up for our show\ntoday, we do thank you for watching.\n\n493\n00:22:28.310 --> 00:22:29.700\nI've been your host, Ronnie Wong.\n\n494\n00:22:29.700 --> 00:22:30.390\n>> And I'm Don Pezet.\n\n495\n00:22:30.390 --> 00:22:32.045\n>> And we'll see you next time.\n\n496\n00:22:32.045 --> 00:22:38.460\n[MUSIC]\n\n",
          "vimeoId": "137949895"
        },
        {
          "description": "OSPF path preference looks for the best line when multiple ways to get to a destination exist and chooses the one with the lowest cost. Viewers will hear about the way that OSPF chooses a path among multiple paths to a destination and hear about the ability to manipulate routes and the cost so that one can be preferred over another.",
          "length": "1072",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/ccnproute/cisco-ccnproute300101-3-27-ospf_path_preference-083115-1.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/ccnproute/cisco-ccnproute300101-3-27-ospf_path_preference-083115-1-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/ccnproute/cisco-ccnproute300101-3-27-ospf_path_preference-083115-1-sm.jpg",
          "title": "OSPF Path Preference",
          "transcript": "WEBVTT\n\n1\n00:00:00.000 --> 00:00:10.263\n[MUSIC]\n\n2\n00:00:10.263 --> 00:00:13.061\nWelcome to another great\nepisode here on ITProTV.\n\n3\n00:00:13.061 --> 00:00:16.940\nToday we're taking a look at CCNP Route,\nand getting ready for that exam.\n\n4\n00:00:16.940 --> 00:00:20.580\nI'm your host Ronnie Wong and here to help\nus out, Mr. Don Pezet, how's it going?\n\n5\n00:00:20.580 --> 00:00:21.610\n>> It is going great Ronnie.\n\n6\n00:00:21.610 --> 00:00:24.230\nToday we're gonna be diving\nback into the world of OSPF and\n\n7\n00:00:24.230 --> 00:00:27.620\nwe're going to take a look\nat the OSPF cost metric.\n\n8\n00:00:27.620 --> 00:00:32.070\nHow OSPF picks one path Over another and I\nknow we've talked about it LLL already in\n\n9\n00:00:32.070 --> 00:00:36.300\nsome previous episodes about how OSPF\nreally just has one metric called cost.\n\n10\n00:00:36.300 --> 00:00:39.370\nAnd that cost is really\njust a kind of simple\n\n11\n00:00:39.370 --> 00:00:42.170\nformula that's run against band width,\nto determine it.\n\n12\n00:00:42.170 --> 00:00:45.840\nThat if I have a link between\nthree different networks, right?\n\n13\n00:00:45.840 --> 00:00:49.930\nIf I have to hop through three different\nrouters, OSPF just takes a look at\n\n14\n00:00:49.930 --> 00:00:54.280\nthat link and calculates out a simple\nformula for each one and kind of roles it\n\n15\n00:00:54.280 --> 00:00:59.110\nall up to get a band width number for that\nlength, and the formula's pretty simple.\n\n16\n00:00:59.110 --> 00:01:01.320\nOSPF has what is called\na reference band width.\n\n17\n00:01:01.320 --> 00:01:03.220\nAnd so\nit takes the reference band width, and\n\n18\n00:01:03.220 --> 00:01:06.330\nit divides it by whatever your\nband width is to create a cost.\n\n19\n00:01:06.330 --> 00:01:07.310\nAll right?\n\n20\n00:01:07.310 --> 00:01:09.390\nThe reference band width is 100 megabit.\n\n21\n00:01:09.390 --> 00:01:13.360\nSo if I have a 100 megabit line, it takes\nthe reference bandwidth of a hundred\n\n22\n00:01:13.360 --> 00:01:17.620\nmegabit divided by a hundred megabit,\nand you get one, right?\n\n23\n00:01:17.620 --> 00:01:21.020\nA hundred megabit line has a cost of one.\n\n24\n00:01:21.020 --> 00:01:25.840\nIf I have something slower, like a ten\nmegabit line, right, then I would do\n\n25\n00:01:25.840 --> 00:01:30.600\na hundred megabit divided by ten\nmegabit and I would get a cost of ten.\n\n26\n00:01:30.600 --> 00:01:32.190\nSo that's how the formula works out and\n\n27\n00:01:32.190 --> 00:01:35.680\nwhen you're talking about ethernet links,\nit's pretty straightforward.\n\n28\n00:01:35.680 --> 00:01:40.670\nBut when you start getting into like\nT1 lines, MPOS, frame relay, serial\n\n29\n00:01:40.670 --> 00:01:44.980\nconnectivity, those are environments where\nyou might have varying band width, and so\n\n30\n00:01:44.980 --> 00:01:47.930\nyou can start to end up with all sorts\nof wacky numbers when you look at OSPF.\n\n31\n00:01:47.930 --> 00:01:51.660\nAnd the other thing is is keeping\ntrack of the whole link, and so\n\n32\n00:01:51.660 --> 00:01:54.940\nas you have more and more hops involved,\nyour numbers can get even more strange.\n\n33\n00:01:54.940 --> 00:01:57.800\nBut just be aware that behind\nthe scenes is a fairly simple\n\n34\n00:01:57.800 --> 00:01:59.360\nformula to create that cost.\n\n35\n00:01:59.360 --> 00:02:01.670\nSo you can see here some of\nthe default costs kind of laid out.\n\n36\n00:02:01.670 --> 00:02:03.590\nAnd, you know,\nif I've got a 100 megabit network,\n\n37\n00:02:03.590 --> 00:02:08.235\n100 megabit divided by 100 megabit is 1,\nor 10 megabit becomes 10.\n\n38\n00:02:08.235 --> 00:02:12.970\nBut you'll see where when a t-line\nbecomes 64, a 128 k line becomes 781,\n\n39\n00:02:12.970 --> 00:02:16.260\na 64 k line becomes 1562,\n\n40\n00:02:16.260 --> 00:02:20.710\nthe smaller the bandwidth\nthe bigger the cost is.\n\n41\n00:02:20.710 --> 00:02:22.570\nSee how it's getting bigger and\nbigger with each one?\n\n42\n00:02:22.570 --> 00:02:24.490\nAnd that's how the metric works.\n\n43\n00:02:24.490 --> 00:02:28.160\nWhen OSPF looks at two links\nthat go to the same destination.\n\n44\n00:02:28.160 --> 00:02:32.180\nThe one with the lowest cost is the one\nwith the most bandwidth, right?\n\n45\n00:02:32.180 --> 00:02:34.450\nIt's just a way to kinda\nconvert that around.\n\n46\n00:02:34.450 --> 00:02:37.290\nAnd you might ask yourself, why run\nthrough a formula like this at all?\n\n47\n00:02:37.290 --> 00:02:38.830\nWhy not just list the bandwidth?\n\n48\n00:02:38.830 --> 00:02:41.510\nAnd the reason is OSPF doesn't\nlike to deal in decimals.\n\n49\n00:02:41.510 --> 00:02:44.050\nIt kinda rounds these things off.\n\n50\n00:02:44.050 --> 00:02:47.110\nSo if you have something like a 1.544\nMb line, that becomes just 64.\n\n51\n00:02:47.110 --> 00:02:48.975\nIt's an easier number to deal with.\n\n52\n00:02:48.975 --> 00:02:52.190\nAlthough the smaller the line the bigger\nthat number starts to become.\n\n53\n00:02:52.190 --> 00:02:53.900\nRight?\nSo that's kinda why they did it\n\n54\n00:02:53.900 --> 00:02:54.760\nbackwards on this one.\n\n55\n00:02:54.760 --> 00:02:57.580\nBut it does cause a little bit of\na problem because like a one gig line and\n\n56\n00:02:57.580 --> 00:02:59.932\na 10 gig line are actually\nviewed as identical.\n\n57\n00:02:59.932 --> 00:03:03.710\nSo OSPF can't tell the difference between\na 1 gigabit and a 10 gigabit line.\n\n58\n00:03:03.710 --> 00:03:06.390\nAnd that's a little bit of a problem for\nsome people.\n\n59\n00:03:06.390 --> 00:03:11.800\nAnd in scenarios like that you might\nhave to get involved in modifying costs,\n\n60\n00:03:11.800 --> 00:03:14.220\nand that's kind of what this\nepisode is all about, right?\n\n61\n00:03:14.220 --> 00:03:17.020\nThe OSPF path preference.\n\n62\n00:03:17.020 --> 00:03:19.470\nBy default the path\npreference is really simple.\n\n63\n00:03:19.470 --> 00:03:20.700\nIt just looks for the best line.\n\n64\n00:03:20.700 --> 00:03:23.290\nWhen you've got more than one way to\nget to a destination it looks for\n\n65\n00:03:23.290 --> 00:03:26.015\nthe one that has the lowest cost and\nthat's the one that's going to go,\n\n66\n00:03:26.015 --> 00:03:28.390\nthat's the way it's going to go, right?\n\n67\n00:03:28.390 --> 00:03:32.290\nBut if you have a tie, what does it do?\n\n68\n00:03:32.290 --> 00:03:33.510\nIt load balances.\n\n69\n00:03:33.510 --> 00:03:34.820\nBut that might not be what you want.\n\n70\n00:03:34.820 --> 00:03:36.230\nYou might not want load balancing.\n\n71\n00:03:36.230 --> 00:03:38.570\nYou might want to influence\nsomething different, right?\n\n72\n00:03:38.570 --> 00:03:39.700\nLet me show you guys an example.\n\n73\n00:03:39.700 --> 00:03:41.410\nSo, let's take my topology.\n\n74\n00:03:41.410 --> 00:03:42.200\nThis is my topology.\n\n75\n00:03:42.200 --> 00:03:44.240\nI've got headquarters,\nwhich is connected to a network.\n\n76\n00:03:44.240 --> 00:03:46.840\nAnd then I've got all my branches and\nthey have their own networks.\n\n77\n00:03:48.130 --> 00:03:51.740\nLet's say, let's just pretend\nhere that branch 1 and branch 2,\n\n78\n00:03:51.740 --> 00:03:53.110\nI put a backup link between them.\n\n79\n00:03:53.110 --> 00:03:54.990\nThose are my two biggest branches.\n\n80\n00:03:54.990 --> 00:03:57.005\nSo I've got the most employees\nof those two branches.\n\n81\n00:03:57.005 --> 00:03:58.920\nAnd I've decided to put up a backup link.\n\n82\n00:03:58.920 --> 00:04:01.460\nThat way if my link to\nheadquarters ever fails,\n\n83\n00:04:01.460 --> 00:04:03.780\nthey can just jump over to the other\nbranch and still get to headquarters.\n\n84\n00:04:03.780 --> 00:04:05.020\nIt's kind of redundancy.\n\n85\n00:04:05.020 --> 00:04:05.700\nRight.\n\n86\n00:04:05.700 --> 00:04:11.860\nSo branch 2 will have a path to get to\nbranch 1's network, this 172.16.2 network.\n\n87\n00:04:11.860 --> 00:04:14.350\nHeadquarters could go through\nbranch 1 to get there or\n\n88\n00:04:14.350 --> 00:04:16.420\nheadquarters could go through\nbranch 2 to get there.\n\n89\n00:04:16.420 --> 00:04:17.110\nRight.\n\n90\n00:04:17.110 --> 00:04:19.540\nWell, if these work out so\n\n91\n00:04:19.540 --> 00:04:23.560\nthat the costs are identical,\nheadquarters is going to load balance.\n\n92\n00:04:23.560 --> 00:04:24.770\nBut I don't want that.\n\n93\n00:04:24.770 --> 00:04:27.030\nI want headquarters to always\nuse the connection to branch 1,\n\n94\n00:04:27.030 --> 00:04:30.630\nand only use the connection to\nbranch 2 if there's a failure.\n\n95\n00:04:30.630 --> 00:04:33.760\nAlright, and that's where we\nhave to start getting involved.\n\n96\n00:04:33.760 --> 00:04:37.300\nRight, so, for example, if.\n\n97\n00:04:37.300 --> 00:04:38.930\nWell here,\nlet's just see it here on a real router.\n\n98\n00:04:38.930 --> 00:04:42.040\nI don't need an example for this,\nwe can see it on actual equipment.\n\n99\n00:04:42.040 --> 00:04:47.780\nSo here I am on headquarters,\nright, and if I do a Show IP route,\n\n100\n00:04:47.780 --> 00:04:52.140\nand I find that 172.16.2 network,\nit'll be buried in here somewhere.\n\n101\n00:04:52.140 --> 00:04:53.860\nAnd actually you know what,\nI'm not seeing it.\n\n102\n00:04:53.860 --> 00:04:58.420\nSo let's make sure we're actually\nconnected to that other router.\n\n103\n00:04:58.420 --> 00:05:01.530\nSo if I do a show IPOSPF neighbor, oh,\n\n104\n00:05:01.530 --> 00:05:06.252\napparently I am not even running OSPF so\nwe'll have to get started there, right?\n\n105\n00:05:06.252 --> 00:05:07.090\nSo [LAUGH] let's go ahead and\n\n106\n00:05:07.090 --> 00:05:11.840\nwhip up a basic OSPF implementation on\nthis one so we'll just come in here and\n\n107\n00:05:11.840 --> 00:05:16.120\nsay like network 000 well, here I'll\nset my router id first, that'll help.\n\n108\n00:05:17.820 --> 00:05:20.350\nSo I'm gonna set my router id and\nthen I'll just advertise out everything.\n\n109\n00:05:20.350 --> 00:05:23.550\nSo this is gonna be a completely\nclean OSPF install.\n\n110\n00:05:23.550 --> 00:05:26.140\nAnd that's actually good cuz that'll help\nyou guys to see that I haven't manipulated\n\n111\n00:05:26.140 --> 00:05:27.230\nroutes in any way.\n\n112\n00:05:27.230 --> 00:05:30.640\nAnd I'm gonna do that same\nthing on branch 1 and branch 2.\n\n113\n00:05:30.640 --> 00:05:35.680\nSo I'm just gonna jump into these guys and\nget them thrown into the same thing.\n\n114\n00:05:35.680 --> 00:05:38.860\nSo I'll set my router ID to that,\n\n115\n00:05:38.860 --> 00:05:43.412\nand advertise out all my\nnetworks into area 0.\n\n116\n00:05:43.412 --> 00:05:45.050\nI keep wanting to do that area 9.\n\n117\n00:05:45.050 --> 00:05:47.570\n[LAUGH] Apparently area\n9 is calling me today.\n\n118\n00:05:47.570 --> 00:05:49.320\nSo, almost done.\n\n119\n00:05:49.320 --> 00:05:50.640\nAll right.\nNow once this is done,\n\n120\n00:05:50.640 --> 00:05:52.290\nit's gonna start advertising networks.\n\n121\n00:05:52.290 --> 00:05:53.750\nThey're all gonna be popped out there.\n\n122\n00:05:53.750 --> 00:05:55.560\nAnd things are gonna be running great,\nright?\n\n123\n00:05:55.560 --> 00:05:58.580\nThe way that we, well,\nkind of expected them to already be.\n\n124\n00:05:58.580 --> 00:06:00.870\nSo that will be in place.\n\n125\n00:06:02.420 --> 00:06:03.490\nAnd here's the last one.\n\n126\n00:06:05.200 --> 00:06:05.790\nArea 0.\n\n127\n00:06:05.790 --> 00:06:06.860\nThere we go.\n\n128\n00:06:06.860 --> 00:06:08.999\nAlright, so\nnow if I take a look at headquarters.\n\n129\n00:06:11.150 --> 00:06:12.780\nAnd I look at my OSPF routes,\n\n130\n00:06:12.780 --> 00:06:16.500\nI should be able to find that\n172.16.2 network right there.\n\n131\n00:06:16.500 --> 00:06:19.550\nOkay, and I got a couple other interfaces\nthat are kind of jumping into this, so\n\n132\n00:06:19.550 --> 00:06:21.330\nlet me go take care of those real quick.\n\n133\n00:06:22.670 --> 00:06:28.030\nLet's get rid of those,\nthat would be this one and this one.\n\n134\n00:06:28.030 --> 00:06:29.600\nI want it all to be nice and even.\n\n135\n00:06:29.600 --> 00:06:31.962\nI need my metrics to match identically, so\n\n136\n00:06:31.962 --> 00:06:34.727\nI don't want anything too\ncrazy messing this up.\n\n137\n00:06:34.727 --> 00:06:35.424\nThere we go.\n\n138\n00:06:35.424 --> 00:06:39.404\nAll right, so\nI've got one route to 172.16.2.0, right,\n\n139\n00:06:39.404 --> 00:06:44.630\none route that goes from headquarters over\nto branch 1 and gets me to that network.\n\n140\n00:06:44.630 --> 00:06:47.270\nAnd notice that cost of 74.\n\n141\n00:06:47.270 --> 00:06:51.620\nOkay, I've got a serial, like a frame\nrelay link between me and branch 1.\n\n142\n00:06:51.620 --> 00:06:54.180\nAnd so I'm calculating the cost and\ncoming up with 74.\n\n143\n00:06:54.180 --> 00:06:56.950\nNow, there's actually a little\nbit on the other side.\n\n144\n00:06:56.950 --> 00:06:58.260\nI'm coming up with 64.\n\n145\n00:06:58.260 --> 00:07:03.800\nBut on the other side, branch one\nhas an ethernet connection, right.\n\n146\n00:07:03.800 --> 00:07:08.980\nSo if I go back to my diagram, this is\napparently a 128 k line cuz I got 64,\n\n147\n00:07:08.980 --> 00:07:13.730\nright, if we look back at my table,\n64 was, oh no, 1.544 megabits.\n\n148\n00:07:13.730 --> 00:07:14.410\nSo model t1.\nRight.\n\n149\n00:07:14.410 --> 00:07:16.494\nSo I got that 64 for this link but\n\n150\n00:07:16.494 --> 00:07:20.599\nthen branch is a 10 mg ethernet\nconnection here which is a 10.\n\n151\n00:07:20.599 --> 00:07:22.640\n10 plus 64 is 74.\n\n152\n00:07:22.640 --> 00:07:25.660\nAnd so\nwhen I look at that metric here it is.\n\n153\n00:07:25.660 --> 00:07:26.694\nIt's 74, right.\n\n154\n00:07:26.694 --> 00:07:30.410\nSo it's an aggregate metric\nacross all of those links.\n\n155\n00:07:30.410 --> 00:07:32.700\nAnd that's my connection right\nover to that other guy and\n\n156\n00:07:32.700 --> 00:07:34.430\nI've got one way to get there.\n\n157\n00:07:34.430 --> 00:07:37.922\nWell let me introduce another route\nthat will have the same cost.\n\n158\n00:07:37.922 --> 00:07:43.231\nAll right, if I go to branch 2, and\nI'll just make a fake interface\n\n159\n00:07:43.231 --> 00:07:48.931\nhere like a loopback one, and\nI'm going to add 172.16.2.2.\n\n160\n00:07:48.931 --> 00:07:51.059\nWe'll just create a fake IP on this one.\n\n161\n00:07:53.010 --> 00:07:56.100\nAnd so I'm gong to bring that up and I'm\ngoing to start advertising that into OSPF.\n\n162\n00:07:56.100 --> 00:08:00.530\nSo I'm now saying that I'm connected\nto that same network that branch 1 is.\n\n163\n00:08:00.530 --> 00:08:05.380\nSo going to my diagram, I'm basically\ninsinuating that I've got a link\n\n164\n00:08:06.460 --> 00:08:12.810\nthat runs from branch 2, right down to\nthis network just like we already had.\n\n165\n00:08:12.810 --> 00:08:13.710\nFor branch 1.\n\n166\n00:08:13.710 --> 00:08:14.370\nRight?\n\n167\n00:08:14.370 --> 00:08:16.880\nAnd if this is a 10MB ethernet connection,\n\n168\n00:08:16.880 --> 00:08:20.410\nthen it's going to have the same\ncost as this other one.\n\n169\n00:08:20.410 --> 00:08:22.150\nRight?\nSo they're going to have the same cost\n\n170\n00:08:22.150 --> 00:08:24.010\nby the time it makes it to headquarters.\n\n171\n00:08:24.010 --> 00:08:26.440\nAnd if I jump and\ntake a look at headquarters,\n\n172\n00:08:26.440 --> 00:08:31.380\nI should be able to do a show ip route and\nfind that 172.16 .2 and\n\n173\n00:08:31.380 --> 00:08:34.390\nit should show up in there\nas having two routers.\n\n174\n00:08:34.390 --> 00:08:36.820\nNow in my case it looks\nlike I have lost them.\n\n175\n00:08:36.820 --> 00:08:38.837\nOh, I'm on the wrong router.\n\n176\n00:08:38.837 --> 00:08:39.950\n>> [LAUGH]\n>> That would probably make a big\n\n177\n00:08:39.950 --> 00:08:40.790\ndifference there.\n\n178\n00:08:40.790 --> 00:08:42.045\nIf I jump over to headquarters.\n\n179\n00:08:42.045 --> 00:08:49.125\n[LAUGH] And take a look at that network,\n172.16.2, there we go.\n\n180\n00:08:49.125 --> 00:08:50.191\nAnd oh.\n\n181\n00:08:50.191 --> 00:08:51.930\nYou know what?\nI pointed it to a loop back.\n\n182\n00:08:51.930 --> 00:08:54.900\nNow this is a neat little aspect of OSPF.\n\n183\n00:08:54.900 --> 00:08:58.010\nOSPF is smart enough to know when you\npoint to something that's a loopback, and\n\n184\n00:08:58.010 --> 00:08:58.940\nit kinda flags it that way.\n\n185\n00:08:58.940 --> 00:09:00.440\nSo let me, let me change that real quick.\n\n186\n00:09:00.440 --> 00:09:04.490\nI'm gonna jump over to branch 2 and\nI'll remove that IP address from here.\n\n187\n00:09:04.490 --> 00:09:07.415\nAnd I'll just take like an extra\ninterface I have that I'm not using and\n\n188\n00:09:07.415 --> 00:09:08.485\nI'll assign it there.\n\n189\n00:09:08.485 --> 00:09:12.417\nSo it's important that these metrics match\nor the whole thing starts to break down.\n\n190\n00:09:12.417 --> 00:09:17.925\nSo we'll get that set and\nnow that'll participate.\n\n191\n00:09:17.925 --> 00:09:20.695\nSo now I've got a 10 Megabit ethernet\nconnection that's going to be tied to this\n\n192\n00:09:20.695 --> 00:09:23.857\nnetwork and\non headquarters that should be showing up.\n\n193\n00:09:23.857 --> 00:09:24.847\nAll right, so\n\n194\n00:09:24.847 --> 00:09:28.877\nI've only got one, it'll come in\nhere in just a moment, there we go.\n\n195\n00:09:29.937 --> 00:09:34.360\nNow I've got two routes equal cost,\nokay they have the same cost.\n\n196\n00:09:34.360 --> 00:09:41.354\nNow I can see I can get to one of them on\nserial1/0/1 and the other on serial1/0.2.\n\n197\n00:09:41.354 --> 00:09:43.769\nThat means I get to one through branch\none and one through branch two,\n\n198\n00:09:43.769 --> 00:09:45.150\nthey just happen to have the same cost.\n\n199\n00:09:46.560 --> 00:09:48.690\nSo right now I load balance.\n\n200\n00:09:48.690 --> 00:09:53.730\nAnd that's not great because if I go back\nto my diagram 100% of the traffic for\n\n201\n00:09:53.730 --> 00:09:55.969\nbranch 2 is gonna cross this link.\n\n202\n00:09:55.969 --> 00:09:57.188\nRight?\n\n203\n00:09:57.188 --> 00:10:00.012\n50% of the traffic for\nbranch 1 is gonna cross this link and\n\n204\n00:10:00.012 --> 00:10:02.880\n50% of the traffic from branch\n1 is gonna cross this link.\n\n205\n00:10:02.880 --> 00:10:06.970\nSo this link will have 100% of branch\n2's traffic and 50% of branch 1's.\n\n206\n00:10:06.970 --> 00:10:09.140\nAnd that's not really fair to this link.\n\n207\n00:10:09.140 --> 00:10:09.970\nI want it to be a backup.\n\n208\n00:10:09.970 --> 00:10:12.520\nI don't want it to be used all the time.\n\n209\n00:10:12.520 --> 00:10:14.220\nSo how do I fix that?\n\n210\n00:10:14.220 --> 00:10:18.340\nAnd the easiest way to fix it is\nto manually override the cost.\n\n211\n00:10:18.340 --> 00:10:19.730\nAnd it could be a very, very simple thing.\n\n212\n00:10:19.730 --> 00:10:22.490\nA very small tweak that we make\nto change that preference.\n\n213\n00:10:22.490 --> 00:10:23.764\nThe way to get in and out of the network.\n\n214\n00:10:23.764 --> 00:10:28.310\nAll right,\nif we jump back to Headquarters, so\n\n215\n00:10:28.310 --> 00:10:32.060\nif I go back to my Headquarters router,\n\n216\n00:10:32.060 --> 00:10:36.393\nand I do a show ip ospf interface,\nall right.\n\n217\n00:10:36.393 --> 00:10:39.752\nThis command will show me each\nof my physical interfaces and\n\n218\n00:10:39.752 --> 00:10:42.640\nhow they are being viewed in OSPF,\nall right.\n\n219\n00:10:42.640 --> 00:10:46.193\nNow it shows a lot of data,\nI'm gonna add to that serial 1/0.1.\n\n220\n00:10:46.193 --> 00:10:46.736\nOkay.\n\n221\n00:10:46.736 --> 00:10:49.530\nThis is my connection to branch 1.\n\n222\n00:10:49.530 --> 00:10:53.210\nAnd in here, you're gonna see some various\ninformation of what I'm looking for,\n\n223\n00:10:53.210 --> 00:10:54.720\nis the cost, right.\n\n224\n00:10:54.720 --> 00:10:56.660\nI can see that line has a cost of 64.\n\n225\n00:10:56.660 --> 00:10:58.970\nAnd if I run the same command and\n\n226\n00:10:58.970 --> 00:11:02.444\nI point it to my other link,\nI can see it has a cost of 64.\n\n227\n00:11:03.980 --> 00:11:08.240\nIf I want to prefer one over the other,\nthere's two ways I can do it.\n\n228\n00:11:08.240 --> 00:11:10.530\nOne way, I can manipulate the bandwidth.\n\n229\n00:11:10.530 --> 00:11:13.680\nI can go and change the bandwidth of line,\nnot the actual bandwidth, we can use\n\n230\n00:11:13.680 --> 00:11:16.510\nthe bandwidth command and that just\ntells our routing protocol what it is.\n\n231\n00:11:16.510 --> 00:11:17.890\nSo, I can lie to it.\n\n232\n00:11:17.890 --> 00:11:20.460\nI can tell it that one has\na different bandwidth than the other.\n\n233\n00:11:20.460 --> 00:11:22.230\nBut, that's not really true, is it?\n\n234\n00:11:22.230 --> 00:11:25.420\nAnd that's going to impact a lot more\nthan just this one route because now\n\n235\n00:11:25.420 --> 00:11:28.100\nwe're going to be advertising out this\ndifferent bandwidth to other routers and\n\n236\n00:11:28.100 --> 00:11:29.090\nit kind of starts to mess things up.\n\n237\n00:11:29.090 --> 00:11:30.470\nAll right.\n\n238\n00:11:30.470 --> 00:11:35.260\nSo instead of messing with the bandwidth\nI might choose to just override the cost.\n\n239\n00:11:35.260 --> 00:11:37.030\nAll right.\nThis is especially important if you have\n\n240\n00:11:37.030 --> 00:11:40.090\nmore than one routing protocol,\nbecause if you use the bandwidth command\n\n241\n00:11:40.090 --> 00:11:41.958\nit adjusts if for\nall the routing protocols.\n\n242\n00:11:41.958 --> 00:11:45.600\nBut if we override the cost, it just\noverrides it for OSPF, and if you have\n\n243\n00:11:45.600 --> 00:11:49.270\nmore than one OSPF process, you can\nactually adjust it on a per process basis.\n\n244\n00:11:49.270 --> 00:11:51.860\nSo here, all I have to do is tell it that,\n\n245\n00:11:51.860 --> 00:11:55.470\nthat second network is not as\npreferred as the first one.\n\n246\n00:11:55.470 --> 00:12:00.550\nSo I can either make the cost of\nbranch 2's connection higher, or\n\n247\n00:12:00.550 --> 00:12:03.540\nI can make the cost of\nbranch 1's connection lower.\n\n248\n00:12:03.540 --> 00:12:04.990\nAnd I usually like to make them lower,\n\n249\n00:12:04.990 --> 00:12:08.280\nthat usually works out a little better in\nmy opinion, but it really doesn't matter.\n\n250\n00:12:08.280 --> 00:12:09.940\nEither one will work.\n\n251\n00:12:09.940 --> 00:12:13.714\nSo on headquarters,\nI'm gonna jump into serial 1/0.1.\n\n252\n00:12:13.714 --> 00:12:16.250\nI know it has a cost of 64.\n\n253\n00:12:16.250 --> 00:12:18.730\nI know the other router,\nthe other link has a cost of 64.\n\n254\n00:12:18.730 --> 00:12:21.714\nI'm gonna make this one have a cost of 63.\n\n255\n00:12:21.714 --> 00:12:24.704\nSo all we have to do is say ip ospf, and\n\n256\n00:12:24.704 --> 00:12:29.300\nyou'll see right here,\nyou can adjust the cost.\n\n257\n00:12:29.300 --> 00:12:32.730\nIf I do it this way,\nit'll adjust for every process, or\n\n258\n00:12:32.730 --> 00:12:34.660\nI can specify the process number first.\n\n259\n00:12:34.660 --> 00:12:38.650\nSo if I have more than one OSPF\nprocess I could say ip ospf 1 and\n\n260\n00:12:38.650 --> 00:12:40.270\nthen start to manipulate from there.\n\n261\n00:12:40.270 --> 00:12:42.210\nBut I just want to manipulate the cost so\n\n262\n00:12:42.210 --> 00:12:46.020\nI'm gonna say ip ospf cost and\nthen we specify that cost value.\n\n263\n00:12:46.020 --> 00:12:48.709\nAnd I wanna set this to 63.\n\n264\n00:12:48.709 --> 00:12:50.795\nSo I'm reducing this cost just by one.\n\n265\n00:12:50.795 --> 00:12:54.525\nNot a major change, just a minor little\ntweak to make it a little bit better\n\n266\n00:12:54.525 --> 00:12:56.155\nthan the other one, right?\n\n267\n00:12:56.155 --> 00:13:03.540\nSo if I do show ip ospf interface for\nserial1/0.1 I can see that cost of 63.\n\n268\n00:13:03.540 --> 00:13:08.150\nIf I do that same thing for\nserial1/0.2 it's a cost of 64.\n\n269\n00:13:08.150 --> 00:13:12.942\nIt's a small change, but\nit's enough to make the router prefer one\n\n270\n00:13:12.942 --> 00:13:16.569\nlink over the other and so\nnow if I do a show IP route.\n\n271\n00:13:18.230 --> 00:13:21.400\nAnd I look for that 172.16.2,\nI've only got one entry.\n\n272\n00:13:21.400 --> 00:13:25.460\nAnd instead of a cost of 74,\nit's got a cost of 73, right?\n\n273\n00:13:25.460 --> 00:13:27.910\nIt's reduced by one and\nit's going out the interface that I want.\n\n274\n00:13:27.910 --> 00:13:32.600\nAll right, and\nif that interface were to fail, right?\n\n275\n00:13:32.600 --> 00:13:35.210\nIf I were to go in there and\nshut it down, right?\n\n276\n00:13:35.210 --> 00:13:37.580\nThat link's gonna go down,\nthe other link's still there.\n\n277\n00:13:37.580 --> 00:13:39.590\nI already know about it,\nit's in my database.\n\n278\n00:13:39.590 --> 00:13:41.360\nAnd so I can rerun the Dykstra algorithm,\n\n279\n00:13:41.360 --> 00:13:44.700\nI see that one's there with the cost of 74\nand I can bring it into the routing table.\n\n280\n00:13:44.700 --> 00:13:46.260\nShould have already happened.\n\n281\n00:13:46.260 --> 00:13:49.831\nSo if I take a look at the the route.\n\n282\n00:13:49.831 --> 00:13:52.055\nWould have been faster to type\nit than to use that shortcut.\n\n283\n00:13:52.055 --> 00:13:56.890\n[LAUGH] I can see it's already got\none back in with the cost of 74.\n\n284\n00:13:56.890 --> 00:13:57.540\nRight?\n\n285\n00:13:57.540 --> 00:13:59.480\nSo now, traffic for\n\n286\n00:13:59.480 --> 00:14:03.490\nbranch 1 will prefer the link to\nbranch 1 unless that link fails.\n\n287\n00:14:03.490 --> 00:14:05.060\nAnd then it'll use the link to branch 2.\n\n288\n00:14:05.060 --> 00:14:07.060\nAnd that's exactly what I\nwant in the first place.\n\n289\n00:14:07.060 --> 00:14:07.840\nAll right.\nI want it to\n\n290\n00:14:07.840 --> 00:14:10.220\nprefer that route only during failure.\n\n291\n00:14:10.220 --> 00:14:10.870\nOkay?\n\n292\n00:14:10.870 --> 00:14:11.960\nAnd that takes care of it, right?\n\n293\n00:14:11.960 --> 00:14:14.910\nSo we can manipulate\nthose cost to do that.\n\n294\n00:14:14.910 --> 00:14:16.200\nThere's other ways to do this, right?\n\n295\n00:14:16.200 --> 00:14:19.200\nYou could use route maps,\nyou could use policy based router,\n\n296\n00:14:19.200 --> 00:14:20.980\nyou could use distribute lists.\n\n297\n00:14:20.980 --> 00:14:24.070\nThere's all sorts of other ways\nyou could achieve this, but\n\n298\n00:14:24.070 --> 00:14:26.900\nmanipulating the cost metric is\nprobably one of the easiest, right?\n\n299\n00:14:26.900 --> 00:14:28.150\nYou just go ahead and change it, and\n\n300\n00:14:28.150 --> 00:14:30.150\nnow that router's gonna\nmake different decisions.\n\n301\n00:14:30.150 --> 00:14:33.620\nJust be aware that you're only\nchanging it on that one router.\n\n302\n00:14:33.620 --> 00:14:37.450\nSo for example,\nI set this link to have that cost of 63,\n\n303\n00:14:37.450 --> 00:14:40.850\nor no, I set this link to have\na cost of 63 instead of 64.\n\n304\n00:14:40.850 --> 00:14:43.865\nOn the other side, it still sees it as 64.\n\n305\n00:14:43.865 --> 00:14:45.700\nIt doesn't see it as 63.\n\n306\n00:14:45.700 --> 00:14:48.320\nSo the other routers are still seeing\nit from their own perspective, so I'm\n\n307\n00:14:48.320 --> 00:14:53.030\nreally just only influencing this router\nright here and setting its preference.\n\n308\n00:14:53.030 --> 00:14:53.610\nIn a variety in there.\n\n309\n00:14:53.610 --> 00:14:56.105\nSo that's definitely\none way to go about it.\n\n310\n00:14:56.105 --> 00:14:58.975\nI've use route maps before\nPVR policy based routing.\n\n311\n00:14:58.975 --> 00:15:00.820\nThere's all sorts of other solutions.\n\n312\n00:15:00.820 --> 00:15:02.760\nThis really is one of\nthe more simple ones.\n\n313\n00:15:02.760 --> 00:15:05.120\nBut it all comes down to bandwidth.\n\n314\n00:15:05.120 --> 00:15:07.830\nAnd you can adjust bandwidth with\na bandwidth command too, right?\n\n315\n00:15:07.830 --> 00:15:09.540\nSo instead of doing it this way.\n\n316\n00:15:09.540 --> 00:15:16.013\nI know by doing a show ip\nospf interface s1/0.1.\n\n317\n00:15:16.013 --> 00:15:16.757\nOops.\n\n318\n00:15:16.757 --> 00:15:17.680\nI mean configs.\n\n319\n00:15:17.680 --> 00:15:18.570\nSo let me how to do.\n\n320\n00:15:18.570 --> 00:15:20.120\nThere we go.\nI know that when I look at that,\n\n321\n00:15:20.120 --> 00:15:21.380\nit's got a cost of 63.\n\n322\n00:15:21.380 --> 00:15:24.390\nRight, and it got that from its bandwidth.\n\n323\n00:15:24.390 --> 00:15:27.500\nAnd if I do a show interface s1/0.1,\n\n324\n00:15:27.500 --> 00:15:31.610\nI can find its bandwidth in here and\nit'll list what it, oh,\n\n325\n00:15:31.610 --> 00:15:35.692\nactually it's a subinterface but, oh,\neither way, right here, bandwidth 1544.\n\n326\n00:15:35.692 --> 00:15:37.290\nI could have manipulated that.\n\n327\n00:15:37.290 --> 00:15:41.170\nI could have told it it had a higher\nbandwidth than it did before.\n\n328\n00:15:41.170 --> 00:15:45.426\nSo for example, where did I set that,\n\n329\n00:15:45.426 --> 00:15:49.290\nwell, I could say no ip ospf cost?\n\n330\n00:15:49.290 --> 00:15:49.950\n63, all right.\n\n331\n00:15:49.950 --> 00:15:53.300\nSo I'm going to put it back\nto what it was, all right?\n\n332\n00:15:53.300 --> 00:15:55.600\nAnd so now that cost is back to 64.\n\n333\n00:15:55.600 --> 00:16:00.594\nBut if I issue the band width command,\nwhich is apparently really hard to spell,\n\n334\n00:16:00.594 --> 00:16:03.470\n[LAUGH] it had a band width of 1544,\nright?\n\n335\n00:16:03.470 --> 00:16:04.447\nThis is written in kilobits.\n\n336\n00:16:04.447 --> 00:16:07.604\n1544, I could've said they had\nmore bandwidth than it did.\n\n337\n00:16:07.604 --> 00:16:10.118\nI could've said that it\nhad a bandwidth of 1600.\n\n338\n00:16:10.118 --> 00:16:10.844\nAll right.\n\n339\n00:16:10.844 --> 00:16:14.670\nAnd when I do that, did I actually\nchange the bandwidth of my line?\n\n340\n00:16:14.670 --> 00:16:15.570\nNo.\n\n341\n00:16:15.570 --> 00:16:18.650\nBut as far my routing\nprotocols are concerned I did.\n\n342\n00:16:18.650 --> 00:16:21.780\nAnd so now they're gonna see\nthat as a different bandwidth.\n\n343\n00:16:21.780 --> 00:16:25.430\nAnd so, instead of a cost of 64,\nI now have a cost of 62.\n\n344\n00:16:25.430 --> 00:16:27.600\nSame result.\n\n345\n00:16:27.600 --> 00:16:29.600\nThe difference is,\nwhen you do the bandwidth command,\n\n346\n00:16:29.600 --> 00:16:31.870\nit'll affect other routing protocols too.\n\n347\n00:16:31.870 --> 00:16:33.850\nIf you do the cost command,\nit only affects OSPF.\n\n348\n00:16:33.850 --> 00:16:36.650\nIf you just have OSPF,\ndoesn't really matter which one you run.\n\n349\n00:16:36.650 --> 00:16:37.380\nYou can run either one.\n\n350\n00:16:37.380 --> 00:16:38.950\nThey achieve the same goal.\n\n351\n00:16:38.950 --> 00:16:41.810\nIt's just, it's a little bit harder\nto be fine tuned on this one.\n\n352\n00:16:41.810 --> 00:16:45.040\nIf I want to pick a particular cost,\nI gotta figure out the bandwidth and\n\n353\n00:16:45.040 --> 00:16:45.660\ncalculate that out.\n\n354\n00:16:45.660 --> 00:16:49.640\nSo, it really just kind of boils down to\nthat, but both achieve the same goal.\n\n355\n00:16:49.640 --> 00:16:50.680\n>> All right Don.\n\n356\n00:16:50.680 --> 00:16:52.670\nWhat we've actually taken a look at is,\nof course,\n\n357\n00:16:52.670 --> 00:16:55.500\nthe ability to manipulate\nthe routes a little bit.\n\n358\n00:16:55.500 --> 00:16:56.950\nSo that we can prefer one path or\n\n359\n00:16:56.950 --> 00:17:00.280\nthe other even though we actually have\nmultiple routes to a destination.\n\n360\n00:17:00.280 --> 00:17:02.830\nIs there any other hints\nthat we need to think about?\n\n361\n00:17:02.830 --> 00:17:05.540\n>> No, as far as this is concerned,\nthat's pretty much it for virtual links.\n\n362\n00:17:05.540 --> 00:17:08.330\nI mean, not virtual links, [LAUGH] for\noverriding the cost there.\n\n363\n00:17:08.330 --> 00:17:10.080\nSo pretty straight forward process.\n\n364\n00:17:10.080 --> 00:17:12.700\nJust be aware on the exam, you need\nto know that you can do this, right?\n\n365\n00:17:12.700 --> 00:17:16.160\nThe bandwidth command and overriding\nthe cost on a per interface basis.\n\n366\n00:17:16.160 --> 00:17:18.060\nBut remember there\nare other ways to do it.\n\n367\n00:17:18.060 --> 00:17:19.950\nAnd we've covered those other\nways in other episodes.\n\n368\n00:17:19.950 --> 00:17:22.480\nIf you haven't watched those yet,\ndefinitely jump over and check them out.\n\n369\n00:17:22.480 --> 00:17:24.100\nSo you've got a lot of choices.\n\n370\n00:17:24.100 --> 00:17:26.980\nAnd that's really what Sysco's all about\nis giving you all the different choices.\n\n371\n00:17:26.980 --> 00:17:29.130\nYou can find the one that works\nbest in your environment.\n\n372\n00:17:29.130 --> 00:17:31.520\nIf you're already doing route maps,\nthen stick with the route maps.\n\n373\n00:17:31.520 --> 00:17:32.420\nYou don't have to do this.\n\n374\n00:17:32.420 --> 00:17:36.290\nBut if you don't want the complexity of\nroute maps, this was super easy, right?\n\n375\n00:17:36.290 --> 00:17:39.320\nSo just choose the solution\nthat's right for your situation.\n\n376\n00:17:39.320 --> 00:17:41.770\n>> All right,\nthat about wraps it up for this show.\n\n377\n00:17:41.770 --> 00:17:42.740\nThank you for watching.\n\n378\n00:17:42.740 --> 00:17:44.080\nI've been your host, Ronny Wong.\n\n379\n00:17:44.080 --> 00:17:44.700\n>> And I'm Don Pezet.\n\n380\n00:17:44.700 --> 00:17:46.127\n>> And we'll see you next time.\n\n381\n00:17:46.127 --> 00:17:52.339\n[MUSIC]\n\n",
          "vimeoId": "137949897"
        },
        {
          "description": "OSPF version 3 was made to support IPv6, unlike version 2 which was made only to support IPv4. Since they are built for different protocols they are completely incompatible, but their configuration is nearly identical. Viewers will hear about configuring IPv6 for OSPFv3 and also how to verify that it is operational.",
          "length": "1778",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/ccnproute/cisco-ccnproute300101-3-29-ospf_for_ipv6-090115-1.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/ccnproute/cisco-ccnproute300101-3-29-ospf_for_ipv6-090115-1-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/ccnproute/cisco-ccnproute300101-3-29-ospf_for_ipv6-090115-1-sm.jpg",
          "title": "OSPF for IPv6",
          "transcript": "WEBVTT\n\n1\n00:00:00.000 --> 00:00:10.482\n[MUSIC]\n\n2\n00:00:10.482 --> 00:00:13.805\nAll right, welcome to another\ngreat episode here on ITProTV.\n\n3\n00:00:13.805 --> 00:00:16.130\nToday we're taking a look at CCNP Route.\n\n4\n00:00:16.130 --> 00:00:17.770\nGetting ready for that exam.\n\n5\n00:00:17.770 --> 00:00:21.220\nI'm your host Ronnie Wong, and\nhere with me today, Mr. Don Pezet.\n\n6\n00:00:21.220 --> 00:00:22.100\nHow's it going, Don?\n\n7\n00:00:22.100 --> 00:00:23.410\n>> It is going great, Ronnie.\n\n8\n00:00:23.410 --> 00:00:24.630\nExcited to be back on the show.\n\n9\n00:00:24.630 --> 00:00:27.675\nAnd we're continuing on\nwith our OSPF adventure.\n\n10\n00:00:27.675 --> 00:00:30.463\nAnd, if you've been watching\nall of our shows in order,\n\n11\n00:00:30.463 --> 00:00:34.427\nyou've seen where we've covered quite\na bit of what's called OSPF Version 2.\n\n12\n00:00:34.427 --> 00:00:38.495\nNow, I don't think I ever said Version\n2 in any of those episodes because,\n\n13\n00:00:38.495 --> 00:00:42.500\nwhen we talk about OSPF just generally,\nwe're talking about Version 2,\n\n14\n00:00:42.500 --> 00:00:44.260\nwhich is OSPF for IP Version 4.\n\n15\n00:00:44.260 --> 00:00:45.210\nIt gets confusing, right?\n\n16\n00:00:45.210 --> 00:00:47.350\nVersion 2, Version 4, but\nthat's just how it is.\n\n17\n00:00:47.350 --> 00:00:51.070\nSo, that's what OSPF is really\nmost commonly known for.\n\n18\n00:00:51.070 --> 00:00:55.000\nBut in today's world IPV6\nis rapidly taking over.\n\n19\n00:00:55.000 --> 00:00:59.175\nAnd over the next, I don't know, three to\nfive years, we'll see this shift where\n\n20\n00:00:59.175 --> 00:01:02.414\nthe majority of traffic begins\nbeing sent over IPV6 networks.\n\n21\n00:01:02.414 --> 00:01:07.038\nSo it's important that we understand how\nto deploy dynamic routing protocols on\n\n22\n00:01:07.038 --> 00:01:09.623\nIPv6 and\nOSPF is a great candidate for that.\n\n23\n00:01:09.623 --> 00:01:15.240\nNow, unfortunately when OSPF was written,\nit was written specifically for IPv4.\n\n24\n00:01:15.240 --> 00:01:17.600\nThat was what it was designed for.\n\n25\n00:01:17.600 --> 00:01:20.040\nOSPF won't route IPX SPX.\n\n26\n00:01:20.040 --> 00:01:21.640\nIt won't route Apple Talk.\n\n27\n00:01:21.640 --> 00:01:22.810\nIt won't route.\n\n28\n00:01:22.810 --> 00:01:26.092\nOther protocols, just IPV4,\nso when IPV6 came out.\n\n29\n00:01:26.092 --> 00:01:28.680\n>> [LAUGH]\n>> It was back to the drawing boards.\n\n30\n00:01:28.680 --> 00:01:31.164\nNow, fortunately,\nIPV6 is taking a long time to roll out.\n\n31\n00:01:31.164 --> 00:01:33.753\nRonnie, when was the first\ntime you heard about IPV6?\n\n32\n00:01:33.753 --> 00:01:38.760\n>> 2005, but when we talked about it then,\nit was really just theoretical, right?\n\n33\n00:01:38.760 --> 00:01:42.163\nWe know it's in the future, but,\nnobody really emphasized it.\n\n34\n00:01:42.163 --> 00:01:44.543\nIt was just, here's what\nthe numbers are gonna look like.\n\n35\n00:01:44.543 --> 00:01:46.700\nAnd when you looked at them,\nyou were kind of a little bit frightened.\n\n36\n00:01:46.700 --> 00:01:50.500\n>> Yeah, and way back then,\nthere was this imminent threat, like,\n\n37\n00:01:50.500 --> 00:01:52.710\nooh, we could go to IPv6 any day now.\n\n38\n00:01:52.710 --> 00:01:54.270\nBut it ended up being a long time.\n\n39\n00:01:54.270 --> 00:01:57.740\nAnd that gave the teams\nresponsible OSPF enough time to\n\n40\n00:01:57.740 --> 00:02:01.490\ncompletely rewrite it from scratch,\nand that's exactly what they did.\n\n41\n00:02:01.490 --> 00:02:03.504\nCreating OSPF Version 3.\n\n42\n00:02:03.504 --> 00:02:09.888\nOSPF Version 3 is a total rewrite on the\nback end of OSPF to make it support IPv6.\n\n43\n00:02:09.888 --> 00:02:14.196\nNow, as a result,\nOSPF Version 2 for IPv4 and\n\n44\n00:02:14.196 --> 00:02:19.590\nOSPF Version 3 for\nIPv6 are completely incompatible.\n\n45\n00:02:19.590 --> 00:02:23.180\nThey do not talk or\nexchange information whatsoever.\n\n46\n00:02:23.180 --> 00:02:27.010\nSo, you can have a router that's\nrunning both OSPF Version 2 and\n\n47\n00:02:27.010 --> 00:02:29.450\nVersion 3, and\nthey don't even see each other.\n\n48\n00:02:29.450 --> 00:02:29.950\nRight?\n\n49\n00:02:29.950 --> 00:02:32.600\nNow, there's pros and cons to that,\nand on a positive side,\n\n50\n00:02:32.600 --> 00:02:35.700\nit gives you that autonomy,\nthat separation between those protocols.\n\n51\n00:02:35.700 --> 00:02:38.570\nOn a negative side, it means we\nhave to configure things twice, but\n\n52\n00:02:38.570 --> 00:02:42.000\nthat's okay because while\nit is a complete rewrite,\n\n53\n00:02:42.000 --> 00:02:45.870\nyou're gonna see today that\nthe configuration for OSPF Version 3?\n\n54\n00:02:45.870 --> 00:02:48.780\nIt's practically identical\nto what it was in Version 2.\n\n55\n00:02:48.780 --> 00:02:50.767\nSure, they had to rewrite\nthe engine behind it.\n\n56\n00:02:50.767 --> 00:02:52.623\nBut that doesn't mean they\nhad to rewrite the commands.\n\n57\n00:02:52.623 --> 00:02:54.480\nThey didn't have to rewrite the interface,\nright?\n\n58\n00:02:54.480 --> 00:02:56.130\nThat all stayed the same.\n\n59\n00:02:56.130 --> 00:03:00.460\nSo, if you know how to configure it for\nIPV four you're probably good for\n\n60\n00:03:00.460 --> 00:03:03.380\nIPV six,\nit's really not that much different.\n\n61\n00:03:03.380 --> 00:03:06.100\nNow, the big thing, the big difference\nwe have to remember is that\n\n62\n00:03:06.100 --> 00:03:08.630\nthe addresses are gonna be larger,\nthe networks are gonna be larger.\n\n63\n00:03:08.630 --> 00:03:11.040\nSo, OSPF actually has to\nwork a little bit harder.\n\n64\n00:03:11.040 --> 00:03:13.866\nBut modern routers have the hardware for\nthat, so it's no big deal.\n\n65\n00:03:13.866 --> 00:03:17.069\nAnd we can get it deployed and\nget it in place.\n\n66\n00:03:17.069 --> 00:03:20.040\nA couple key things that I want to\npoint out before we dive into that.\n\n67\n00:03:20.040 --> 00:03:24.380\nA little, little differences that we have\nbetween the original OSPF and the new one.\n\n68\n00:03:24.380 --> 00:03:26.120\nSo in the Cisco world on the command side,\n\n69\n00:03:26.120 --> 00:03:30.700\npretty much just anywhere where you\nwould say IP, now you have to say IPv6.\n\n70\n00:03:30.700 --> 00:03:35.067\nso before where I used to say something\nlike show IP OSPF neighbor, right?\n\n71\n00:03:35.067 --> 00:03:37.273\nIt's one of my favorite commands,\nrun it all the time.\n\n72\n00:03:37.273 --> 00:03:41.380\nNow it would be show IPV6 OSPF neighbor.\n\n73\n00:03:41.380 --> 00:03:44.777\nBut on a positive side it's the same basic\ncommand, just IP becomes IPV6, all right?\n\n74\n00:03:46.330 --> 00:03:46.950\nSome other things,\n\n75\n00:03:46.950 --> 00:03:49.350\nactually there's some things that\naren't different that should be, right?\n\n76\n00:03:49.350 --> 00:03:51.640\nTo kind of throw you for\nexample router IDs, right?\n\n77\n00:03:51.640 --> 00:03:54.140\nRouter IDs are one that\nalways throws me and\n\n78\n00:03:54.140 --> 00:03:58.722\nIPV4 every OSPF router has a router ID and\nthe router ID's a 32 bit number and\n\n79\n00:03:58.722 --> 00:04:02.982\nso normally it'll use the IP address\nof one of your interfaces, right.\n\n80\n00:04:02.982 --> 00:04:05.974\nIf you've got a loop back it'll use that,\notherwise it'll use the,\n\n81\n00:04:05.974 --> 00:04:07.813\nis it the highest or\nthe lowest IP address.\n\n82\n00:04:07.813 --> 00:04:11.210\n>> The highest IP address that's\non when OSPF is turned on, yeah.\n\n83\n00:04:11.210 --> 00:04:13.740\n>> Okay, so it'll just take the IP\nright off the highest interface and\n\n84\n00:04:13.740 --> 00:04:15.070\nthat's what it's gonna use, right.\n\n85\n00:04:15.070 --> 00:04:17.450\nOr you can statically assign\nit to whatever you want.\n\n86\n00:04:17.450 --> 00:04:21.270\nIt doesn't have to be an IP, but\nit does have to be a 32 bit number, and\n\n87\n00:04:21.270 --> 00:04:22.130\npeople lose sight of that.\n\n88\n00:04:22.130 --> 00:04:24.600\nPeople think it's gotta\nbe an IPV4 address.\n\n89\n00:04:24.600 --> 00:04:30.950\nWell, in IPV6 we need router id's also,\nbut they just with a 32 bit router ID.\n\n90\n00:04:30.950 --> 00:04:33.580\nThey said, why go to a 128-bit router ID?\n\n91\n00:04:33.580 --> 00:04:37.330\nNobody has 4.3 billion routers, right?\n\n92\n00:04:37.330 --> 00:04:40.870\nWhich is what the maximum would be\nunder IPV4, under a 32-bit number.\n\n93\n00:04:40.870 --> 00:04:42.270\nNobody has that many routers.\n\n94\n00:04:42.270 --> 00:04:44.140\nSo, why bother going to a bigger space?\n\n95\n00:04:44.140 --> 00:04:44.710\nSo they didn't.\n\n96\n00:04:44.710 --> 00:04:45.820\nThey just left it be.\n\n97\n00:04:45.820 --> 00:04:48.190\nSo, even though we're in IPV6.\n\n98\n00:04:48.190 --> 00:04:50.850\nThe router IDs are still 32-bit numbers.\n\n99\n00:04:50.850 --> 00:04:55.490\nAnd it will still grab an IPV4\naddress off an interface,\n\n100\n00:04:55.490 --> 00:04:57.570\nunless you don't have an IPV4 address.\n\n101\n00:04:57.570 --> 00:05:00.480\nIf you don't have an IPV4 address anywhere\non your router, what's it gonna use for\n\n102\n00:05:00.480 --> 00:05:01.100\nthe router ID?\n\n103\n00:05:02.100 --> 00:05:03.580\nNothing, it kinda gets stuck.\n\n104\n00:05:03.580 --> 00:05:06.410\nSo, whereas under IPv4\nit was kinda optional,\n\n105\n00:05:06.410 --> 00:05:09.590\nin IPv6 we really need to\nassign that router ID, right?\n\n106\n00:05:09.590 --> 00:05:11.920\nYou need to statically assign\nthe router ID so you know it.\n\n107\n00:05:11.920 --> 00:05:15.490\nAnd it can be an IP address if you want,\nan IPV4 address.\n\n108\n00:05:15.490 --> 00:05:17.710\nOr it can just be a 32-bit\nnumber that you generate.\n\n109\n00:05:17.710 --> 00:05:18.811\nAnd that's what I usually do.\n\n110\n00:05:18.811 --> 00:05:23.166\nSo if I got router one,\nI'll make that 0.0.0.1.\n\n111\n00:05:23.166 --> 00:05:25.511\nAnd whenever I see that router ID,\nI know that's router one.\n\n112\n00:05:25.511 --> 00:05:29.167\nOr 0.0.0.73, I know that's router 73.\n\n113\n00:05:29.167 --> 00:05:32.235\nBut you can come up with whatever\nconvention you want to name your routers\n\n114\n00:05:32.235 --> 00:05:33.150\nto give them that ID.\n\n115\n00:05:33.150 --> 00:05:35.490\nBut that is another thing that we need\nto pay attention to that's different.\n\n116\n00:05:36.680 --> 00:05:38.350\nThere's a lot of stuff\nthat's still the same.\n\n117\n00:05:38.350 --> 00:05:38.930\nRight?\n\n118\n00:05:38.930 --> 00:05:41.120\nIf you've watched all the iIPV4 episodes,\n\n119\n00:05:41.120 --> 00:05:44.590\nyou'll remember that we learned about\nstubs, and totally stubby areas.\n\n120\n00:05:44.590 --> 00:05:48.744\nWe learned about NSSAs, not so\nstubby areas, and totally stubby not so\n\n121\n00:05:48.744 --> 00:05:52.206\nstubby areas, let's see if we\ncan remember all these, and\n\n122\n00:05:52.206 --> 00:05:54.782\nall that crazy configuration under IPV4.\n\n123\n00:05:54.782 --> 00:05:56.058\nIt's still there in IPV6.\n\n124\n00:05:56.058 --> 00:05:59.988\nYou still have stubs, you still have\nNSSAs, you still have internal and\n\n125\n00:05:59.988 --> 00:06:01.027\nexternal routes.\n\n126\n00:06:01.027 --> 00:06:04.063\nIn your routing table you have OE-ones and\nOE-twos,\n\n127\n00:06:04.063 --> 00:06:06.720\nOIAs, right, you still have your areas.\n\n128\n00:06:06.720 --> 00:06:09.490\nAnd the area numbers are still\njust 32-bit numbers also.\n\n129\n00:06:09.490 --> 00:06:11.563\nSo, none of that's really changed.\n\n130\n00:06:11.563 --> 00:06:13.684\nIt's just the addressing that's changed,\nand\n\n131\n00:06:13.684 --> 00:06:15.917\nthat's the part that had\nto be rewritten for OSPF.\n\n132\n00:06:15.917 --> 00:06:16.880\nAll right.\n\n133\n00:06:16.880 --> 00:06:20.484\nWell, let's see, oh, a couple other things\nI want to make sure before I dive, I\n\n134\n00:06:20.484 --> 00:06:23.831\nalways want to dive into the configuration\nbecause that's the fun stuff.\n\n135\n00:06:23.831 --> 00:06:28.378\nBut a couple of other little things\nunder IPV4 we used multicast for\n\n136\n00:06:28.378 --> 00:06:33.167\nOSPF right so OSPF would send out\nvarious multicast communications and\n\n137\n00:06:33.167 --> 00:06:37.588\nthose went based on their 32-bit\nmulticast addresses right?\n\n138\n00:06:37.588 --> 00:06:42.574\nSo, if I wanted to send a multicast\nout just for discovery, right,\n\n139\n00:06:42.574 --> 00:06:47.747\nlike hellos or whatever,\nthose would go out as 224.0.0.5.\n\n140\n00:06:47.747 --> 00:06:48.630\n>> Correct.\n>> Right?\n\n141\n00:06:48.630 --> 00:06:52.483\nIf I wanted to reach out to other\npeople out there, it was 224.0.0.5.\n\n142\n00:06:52.483 --> 00:06:58.378\nIf I wanted to reach out to a DR,\nto a designated router, it was 224.0.0.6.\n\n143\n00:06:58.378 --> 00:07:01.721\nRight, so those were the two\nmulticast addresses for IPV4.\n\n144\n00:07:01.721 --> 00:07:05.870\nUnder IPV6 they kind of kept that\ndot five and that dot six but,\n\n145\n00:07:05.870 --> 00:07:08.154\nthe 224 part, that was IPV4.\n\n146\n00:07:08.154 --> 00:07:13.257\nSo, in IPV6 a multicast\nstarts with FF0 and so\n\n147\n00:07:13.257 --> 00:07:18.359\nwith OSPF it uses FF02;;5\nto be able to talk\n\n148\n00:07:18.359 --> 00:07:23.733\nto other routers and\nFF02;;6 to talk to DRs.\n\n149\n00:07:23.733 --> 00:07:24.314\nRight?\nSo\n\n150\n00:07:24.314 --> 00:07:27.470\nit's kinda nice that you can remember\nthat last octate, the five and the six.\n\n151\n00:07:27.470 --> 00:07:30.120\nStill the same, but the beginning\npart is little bit different,\n\n152\n00:07:30.120 --> 00:07:32.460\nso FS02, different multi-cast addresses.\n\n153\n00:07:32.460 --> 00:07:34.140\nBut they function the same otherwise,\nright?\n\n154\n00:07:34.140 --> 00:07:37.260\nIt's not like RIP,\nwhere they used to use broadcast.\n\n155\n00:07:37.260 --> 00:07:40.660\nAnd now broadcast is gone and\nIPV6, and they gotta rewrite it.\n\n156\n00:07:40.660 --> 00:07:43.330\nOSPF already used multicast,\nthey just keep using multicast,\n\n157\n00:07:43.330 --> 00:07:44.399\njust a different address.\n\n158\n00:07:45.762 --> 00:07:49.160\nAll right, so those are some of\nthe things that we just need to be aware.\n\n159\n00:07:49.160 --> 00:07:52.650\nI can't think of, oh last thing,\nI keep doing this.\n\n160\n00:07:52.650 --> 00:07:53.701\nLast thing.\n\n161\n00:07:53.701 --> 00:07:55.301\nIf you watched our episodes,\n\n162\n00:07:55.301 --> 00:07:59.082\nwe showed how to set up authentication\nunder OSPF Version 2, right?\n\n163\n00:07:59.082 --> 00:08:03.187\nAnd so we've set up like a MD5 digest,\nor a digest, to be able to authenticate\n\n164\n00:08:03.187 --> 00:08:07.203\nbetween two routers And make sure that\nsomebody wasn't falsely injecting routes.\n\n165\n00:08:07.203 --> 00:08:12.290\nIn OSPF version three\nauthentication is gone, all right?\n\n166\n00:08:12.290 --> 00:08:13.610\nNow this is a hard one for me to learn.\n\n167\n00:08:13.610 --> 00:08:15.550\nBack when I,\nwhen I first reading the standards, so\n\n168\n00:08:15.550 --> 00:08:20.850\nthis was years ago now, and\nI was reading it and you'd see where in\n\n169\n00:08:20.850 --> 00:08:26.030\none spot they would say OSPF version\nthree has enhanced authentication.\n\n170\n00:08:26.030 --> 00:08:27.100\nAnd then in another spot,\n\n171\n00:08:27.100 --> 00:08:29.960\nthey'd say OSPF version three\ndoesn't support authentication.\n\n172\n00:08:29.960 --> 00:08:33.290\nAnd I'm like, well now that's an odd way\nto enhance things, to eliminate it, right?\n\n173\n00:08:33.290 --> 00:08:37.635\nI'm gonna enhance the security on my house\nby taking all the locks off the doors,\n\n174\n00:08:37.635 --> 00:08:38.490\nright?\n\n175\n00:08:38.490 --> 00:08:40.340\nWell, what the heck's that all about?\n\n176\n00:08:40.340 --> 00:08:42.810\nAnd if you dig a little deeper,\nyou start to see.\n\n177\n00:08:42.810 --> 00:08:47.260\nIPv6 has native support for\nIPsec encryption.\n\n178\n00:08:47.260 --> 00:08:49.410\nSo you can do IPsec, right?\n\n179\n00:08:49.410 --> 00:08:53.960\nYou can do really strong\nencryption between two routers.\n\n180\n00:08:53.960 --> 00:08:57.470\nAnd it's part of the native addressing\nprotocol, it's just part of IPv6.\n\n181\n00:08:57.470 --> 00:09:01.130\nSo, we don't need OSPF to\ndo authentication anymore.\n\n182\n00:09:01.130 --> 00:09:05.690\nWe can let IPv6 do the authentication,\nand just run OSPF on top of it, right?\n\n183\n00:09:05.690 --> 00:09:06.570\nAnd then we'd benefit from that.\n\n184\n00:09:06.570 --> 00:09:11.510\nThat's one of the really best features in\nIPv6 is that all these other protocols\n\n185\n00:09:11.510 --> 00:09:14.230\nthat were having to come up with\ndifferent types of authentication\n\n186\n00:09:14.230 --> 00:09:15.860\ndon't have to do that anymore.\n\n187\n00:09:15.860 --> 00:09:21.680\nYou might remember EIGRP supported all\nthese key chains with multiple keys and\n\n188\n00:09:21.680 --> 00:09:23.640\ndifferent expiration dates.\n\n189\n00:09:23.640 --> 00:09:26.310\nAnd then in OSPF,\nyou could do multiple keys, but\n\n190\n00:09:26.310 --> 00:09:27.590\nthey didn't have expiration dates and\nstuff.\n\n191\n00:09:27.590 --> 00:09:28.670\nIt was a lot more simplified,\n\n192\n00:09:28.670 --> 00:09:32.680\nand it was because authentication was\nhandled differently for each protocol.\n\n193\n00:09:32.680 --> 00:09:33.690\nIPv6 solves that.\n\n194\n00:09:33.690 --> 00:09:36.790\nKinda puts it all into\nthe protocol underneath.\n\n195\n00:09:36.790 --> 00:09:39.240\nSo we let the protocol\ndo what it's good at.\n\n196\n00:09:39.240 --> 00:09:41.250\nAnd meanwhile,\nOSPF can do what it's good at.\n\n197\n00:09:41.250 --> 00:09:44.240\nOSPF is great at making routing decisions.\n\n198\n00:09:44.240 --> 00:09:45.300\nIt's not great at authentication.\n\n199\n00:09:45.300 --> 00:09:46.840\nThat's not what its purpose is.\n\n200\n00:09:46.840 --> 00:09:48.410\nSo that kinda stuff has shifted aside.\n\n201\n00:09:49.440 --> 00:09:51.680\nAll right.\nWell, let's take a look at a network and\n\n202\n00:09:51.680 --> 00:09:53.430\nget a chance to kinda see.\n\n203\n00:09:53.430 --> 00:09:55.100\nWell, we'll do a full deployment, right?\n\n204\n00:09:55.100 --> 00:09:57.193\nSo let's say that we're kinda planning for\nIPv6.\n\n205\n00:09:57.193 --> 00:09:59.240\nWe wanna get it deployed on my network.\n\n206\n00:09:59.240 --> 00:10:02.770\nSo, if I take a look,\nlet's use our topology that we have here.\n\n207\n00:10:02.770 --> 00:10:06.088\nSo here's the IPv4 topology I've\nbeen using on this show, and\n\n208\n00:10:06.088 --> 00:10:10.030\nhere we've got like this frame relay line,\nand some metro E, and all that.\n\n209\n00:10:10.030 --> 00:10:13.760\nAnd maybe I'll just get rid of the metro\nE, we'll pretend that that doesn't exist.\n\n210\n00:10:13.760 --> 00:10:15.350\nAll right,\nwe'll get rid of the frame relay.\n\n211\n00:10:15.350 --> 00:10:15.852\nLet's go fast, right.\n\n212\n00:10:15.852 --> 00:10:19.721\nModern networks, modern networks are gonna\nuse things like metro ethernet to get good\n\n213\n00:10:19.721 --> 00:10:21.000\nfast connections, right.\n\n214\n00:10:21.000 --> 00:10:22.390\nSo I've got my headquarters,\n\n215\n00:10:22.390 --> 00:10:25.710\nI've got my branch offices,\nI call up my ISP and I say,\n\n216\n00:10:25.710 --> 00:10:29.780\nhey guys, we're thinking about going IPv6,\ncan you give me some public addresses?\n\n217\n00:10:29.780 --> 00:10:33.700\nWell, hopefully, your ISP says, sure,\nhere, I got some public addresses.\n\n218\n00:10:33.700 --> 00:10:35.680\nWe'll give them to you,\nhere's your network.\n\n219\n00:10:35.680 --> 00:10:40.150\nYou can assign these out to your\nrouters and all that good stuff.\n\n220\n00:10:40.150 --> 00:10:41.630\nRight?\nBut if you're like us,\n\n221\n00:10:41.630 --> 00:10:44.300\ntrue story with ITProTV, you call your\nISP and say you're ready to go IPv6, and\n\n222\n00:10:44.300 --> 00:10:48.330\nthey say, well, we're alpha-testing\nit right now, we're not ready for it.\n\n223\n00:10:48.330 --> 00:10:49.180\nWell, great, right?\n\n224\n00:10:49.180 --> 00:10:51.140\nSo what does that mean for us?\n\n225\n00:10:51.140 --> 00:10:52.870\nIt doesn't mean we can't deploy.\n\n226\n00:10:52.870 --> 00:10:56.200\nYou can deploy IPv6 on your network\neven if your ISP's not ready.\n\n227\n00:10:56.200 --> 00:10:57.830\nYou just can't use it to\nget out to the internet.\n\n228\n00:10:57.830 --> 00:10:59.590\nRight?\nYou need your ISP to support that, or\n\n229\n00:10:59.590 --> 00:11:02.780\nyou can beat your head against the wall\nand do some of the tunneling protocols out\n\n230\n00:11:02.780 --> 00:11:06.210\nthere which are all a nightmare,\nevery single one of them.\n\n231\n00:11:06.210 --> 00:11:08.530\nSo instead you might say, you know what?\n\n232\n00:11:08.530 --> 00:11:12.000\nI'm gonna deploy IPv6 privately\nhere inside of my network.\n\n233\n00:11:12.000 --> 00:11:14.250\nAnd that way I can use IPv6 inside.\n\n234\n00:11:14.250 --> 00:11:17.810\nI can take advantage of all the new stuff\nand get ready, and then, when the day\n\n235\n00:11:17.810 --> 00:11:21.660\ncomes that I am assigned public IPs,\nI can just renumber, and we'll have it.\n\n236\n00:11:21.660 --> 00:11:23.820\nBut at least we moved over\nto IPv6 ahead of time.\n\n237\n00:11:23.820 --> 00:11:24.910\nSo, that's what I'm going to do.\n\n238\n00:11:24.910 --> 00:11:28.140\nI'm going to stick a IPv6\nnetwork on top of these.\n\n239\n00:11:28.140 --> 00:11:32.718\nAnd, you'll see the networks that I've\nalready got, like 172.16.0.0 up here,\n\n240\n00:11:32.718 --> 00:11:36.325\n/23, 172.16.2.0 on branch one,\n\n241\n00:11:36.325 --> 00:11:40.950\n172.4.0 on branch two, and\n172.16.6.0/23 on branch three.\n\n242\n00:11:40.950 --> 00:11:41.570\nAll right.\n\n243\n00:11:41.570 --> 00:11:45.470\nThose are my four networks.\n\n244\n00:11:45.470 --> 00:11:49.500\nI wanna create some IPv6\nequivalents of those networks so\n\n245\n00:11:49.500 --> 00:11:51.820\nthat I can deploy them and\nget them rolling out, right?\n\n246\n00:11:51.820 --> 00:11:53.210\nAnd there's some neat ways we can do it.\n\n247\n00:11:53.210 --> 00:11:55.510\nLet me show you the way\nthat I like to do it.\n\n248\n00:11:55.510 --> 00:11:57.590\nI like to take these IPv4 numbers.\n\n249\n00:11:57.590 --> 00:12:01.590\nAnd kind of represent them in an IPv6\naddress, and you can do it in some kind of\n\n250\n00:12:01.590 --> 00:12:05.135\ncreative ways, so that you don't have\nto relearn a whole ton of numbers,\n\n251\n00:12:05.135 --> 00:12:08.990\nthat you don't have to kind of sort\nthrough things too terribly differently.\n\n252\n00:12:08.990 --> 00:12:11.130\nSo let me get started on\nmy headquarters router, so\n\n253\n00:12:11.130 --> 00:12:14.348\nI'm gonna jump over to headquarters,\nall right?\n\n254\n00:12:14.348 --> 00:12:18.930\nAnd here on headquarters,\nif I get into my config and\n\n255\n00:12:18.930 --> 00:12:23.210\nI do a show ip int brief,\nI can see all the addresses that I've got.\n\n256\n00:12:23.210 --> 00:12:24.990\nAnd there's that private\nnetwork that I've got.\n\n257\n00:12:24.990 --> 00:12:27.080\nAnd my metro-E connection.\n\n258\n00:12:27.080 --> 00:12:30.205\nThat's this guy right here,\nthis 192.168.0.1.\n\n259\n00:12:30.205 --> 00:12:35.069\nNow I've got a Loopback, and under IPv4,\nI might use that as my router ID.\n\n260\n00:12:35.069 --> 00:12:36.360\nI'm not gonna do that on IPv6.\n\n261\n00:12:36.360 --> 00:12:38.930\nI gotta statically assign\na router ID anyway.\n\n262\n00:12:38.930 --> 00:12:42.040\nSo we'll see that kinda deploy\ngoing a little different.\n\n263\n00:12:42.040 --> 00:12:43.610\nAll right, so the first thing\nI'm gonna do is I'm gonna go and\n\n264\n00:12:43.610 --> 00:12:46.140\nassign some IP addresses to these things,\nright?\n\n265\n00:12:46.140 --> 00:12:49.470\nAnd I'm gonna kinda cheat and\nreuse these same networks so\n\n266\n00:12:49.470 --> 00:12:52.280\nthat it's easier on me mentally\nto remember what network is what.\n\n267\n00:12:52.280 --> 00:12:54.820\nAnd this is something I recommend for\nyou guys, too, if you're deploying this in\n\n268\n00:12:54.820 --> 00:12:58.738\nhouse, is to reuse the networks you have\nbecause it's certainly a lot easier.\n\n269\n00:12:58.738 --> 00:13:04.322\nAnd in IPv4, if you wanna set up a private\nnetwork, you get private ranges, right?\n\n270\n00:13:04.322 --> 00:13:08.270\n192.168, that's an RFC 19 address.\n\n271\n00:13:08.270 --> 00:13:09.314\nYou can use that internally.\n\n272\n00:13:09.314 --> 00:13:09.907\nYou don't have to register it.\n\n273\n00:13:09.907 --> 00:13:14.829\n172.16, that's a class B,\nthat's an RFC 1918.\n\n274\n00:13:14.829 --> 00:13:15.631\nOr 10.\n\n275\n00:13:15.631 --> 00:13:18.289\nIs an RFC 1918 class A.\n\n276\n00:13:18.289 --> 00:13:20.112\nThose are the private networks.\n\n277\n00:13:20.112 --> 00:13:22.677\nIn IPv6, we have the same thing.\n\n278\n00:13:22.677 --> 00:13:25.231\nThey start with FC00.\n\n279\n00:13:25.231 --> 00:13:28.903\nThe FC00 range, anything that starts with\nthat is considered a private address, and\n\n280\n00:13:28.903 --> 00:13:31.696\nso you can use that internally\nwithout registering with anybody.\n\n281\n00:13:31.696 --> 00:13:35.307\nNow it's not routeable on the internet,\nbut you can still use it, right?\n\n282\n00:13:35.307 --> 00:13:36.166\nJust like these, right?\n\n283\n00:13:36.166 --> 00:13:40.375\nNow technically when you use FC, that's\nthe very beginning of that range, and so\n\n284\n00:13:40.375 --> 00:13:43.730\nyou're not supposed to use that one,\nso we have to go one more up,\n\n285\n00:13:43.730 --> 00:13:45.023\nwhich is the FD, right?\n\n286\n00:13:45.023 --> 00:13:48.506\nSo FD00 is kind of the beginning\nof that private range, and so\n\n287\n00:13:48.506 --> 00:13:51.989\nwhat I'm going to do is I'm going\nto take my headquarters, and\n\n288\n00:13:51.989 --> 00:13:56.550\nI'm gonna get into E00 where I've\ngot this 192.168.0.1 address.\n\n289\n00:13:56.550 --> 00:14:01.432\nAnd on this one I'll just come in and\nsay IPv6 address, FD00, so\n\n290\n00:14:01.432 --> 00:14:04.601\nI know this one of those private ranges,\nand\n\n291\n00:14:04.601 --> 00:14:10.530\nthen I'm going to take these first three\noctets and I'm just going to reuse them.\n\n292\n00:14:10.530 --> 00:14:14.670\nI'm going to say, :192, :168,\n\n293\n00:14:14.670 --> 00:14:18.260\n:0, and then we can say, ::1.\n\n294\n00:14:18.260 --> 00:14:22.426\nI want this one to be .1, and\nI'll make this a 64 bit subnet mask.\n\n295\n00:14:22.426 --> 00:14:26.270\nNow, the 64 bit subnet mask is a lot\nbigger than my old subnet mask, and\n\n296\n00:14:26.270 --> 00:14:27.380\nyou might think that it's wasteful.\n\n297\n00:14:27.380 --> 00:14:31.130\nBut this address space is so big that\nI can afford to be wasteful, right?\n\n298\n00:14:31.130 --> 00:14:32.450\nAnd so I'm assigning that network.\n\n299\n00:14:32.450 --> 00:14:36.610\nAnd the cool part about this address is\nthat when I look at it, I can remember,\n\n300\n00:14:36.610 --> 00:14:37.775\nhey this was the 192.168.0 network.\n\n301\n00:14:37.775 --> 00:14:40.290\nCuz it's right there in the address.\n\n302\n00:14:40.290 --> 00:14:43.220\nThese are little tricks we can use\nto make IPv6 a lot less painful.\n\n303\n00:14:44.390 --> 00:14:45.230\nThat's important.\n\n304\n00:14:45.230 --> 00:14:47.600\n>> Good idea.\n>> All right, so I'm gonna get into e0/1,\n\n305\n00:14:47.600 --> 00:14:51.322\nthat's where my private network was,\nthat 172.16.0 network.\n\n306\n00:14:51.322 --> 00:14:57.511\nAnd I'll basically do the same thing,\nexcept this time I'm gonna say,\n\n307\n00:14:57.511 --> 00:15:02.100\nthat this is the 172:16:0 network, right?\n\n308\n00:15:02.100 --> 00:15:05.632\nAnd so now I've assigned that and I've\ngot some IPv6 addresses on this system.\n\n309\n00:15:05.632 --> 00:15:08.257\nAll right?\nAnd I'm just gonna continue with that\n\n310\n00:15:08.257 --> 00:15:13.099\npattern across my other routers as I jump\nover to these guys where I do a show\n\n311\n00:15:13.099 --> 00:15:17.280\nip interface brief to find\nthe IPs on each of the systems.\n\n312\n00:15:17.280 --> 00:15:20.310\nAnd then I can go in and\nI can assign those addresses.\n\n313\n00:15:20.310 --> 00:15:23.660\nAnd, just again,\nby keeping it simple like this,\n\n314\n00:15:23.660 --> 00:15:27.270\nit really does make life easier on us, and\n\n315\n00:15:28.650 --> 00:15:32.850\na easier environment is easier to maintain\nand easier to troubleshoot, right?\n\n316\n00:15:32.850 --> 00:15:35.030\nThe troubleshooting is a really\nimportant part for me.\n\n317\n00:15:35.030 --> 00:15:41.366\nSo, all right, this guy is 172.16.2,\nso we'll put that in here.\n\n318\n00:15:41.366 --> 00:15:42.607\nThere we go.\nAnd then there's a few\n\n319\n00:15:42.607 --> 00:15:45.247\nother protocols that make\nuse of this technique.\n\n320\n00:15:45.247 --> 00:15:48.046\nLike you'll see, is it Turrito Tunnels,\n\n321\n00:15:48.046 --> 00:15:51.249\nwhere they stick the IPv4\naddress on to the end?\n\n322\n00:15:51.249 --> 00:15:53.687\nBut, when they do it,\nthey don't use colons.\n\n323\n00:15:53.687 --> 00:15:54.437\nThey actually use decimals there.\n\n324\n00:15:54.437 --> 00:15:56.178\nSo, it's a really weird address.\n\n325\n00:15:56.178 --> 00:16:01.018\nHere, I'm just using colons, so these kind\nof fit right in with that normal A normal\n\n326\n00:16:01.018 --> 00:16:05.950\nkind of scheme and that's, again,\njust kinda making life easier on us.\n\n327\n00:16:05.950 --> 00:16:10.550\nNow remember as I assign these addresses,\nevery Cisco router on sale today\n\n328\n00:16:10.550 --> 00:16:14.270\nhas IPv6 enabled by default and\nit's dual-stack, right.\n\n329\n00:16:14.270 --> 00:16:19.060\nSo we can run IPv6 side by side with IPv4,\nwhich is exactly what I'm doing here.\n\n330\n00:16:19.060 --> 00:16:24.100\nNow, the key thing to remember though,\nis that they, whoops, wrong ID.\n\n331\n00:16:24.100 --> 00:16:31.570\nSo, is that while IPv6 is enabled by\ndefault, IPv6 routing is not, right.\n\n332\n00:16:31.570 --> 00:16:35.170\nSo I'm assigning these interfaces and\ngiving them their IPs, but\n\n333\n00:16:35.170 --> 00:16:37.300\nthe routing is not actually enabled yet.\n\n334\n00:16:37.300 --> 00:16:38.460\nSo I'm gonna have to go in and\n\n335\n00:16:38.460 --> 00:16:40.840\nkind of change things\na little bit to get that set.\n\n336\n00:16:40.840 --> 00:16:44.070\nAnd let's see here there.\n\n337\n00:16:44.070 --> 00:16:45.470\n>> That's going to be a four.\n\n338\n00:16:45.470 --> 00:16:47.130\n>> Geez, all right Ronnie.\n\n339\n00:16:47.130 --> 00:16:48.850\nRonnie's here to keep me honest on these.\n\n340\n00:16:48.850 --> 00:16:49.670\nAll right last router.\n\n341\n00:16:49.670 --> 00:16:52.224\nThis is what happens when I try and\ntalk and work at the same time.\n\n342\n00:16:52.224 --> 00:16:54.552\n>> [LAUGH].\n\n343\n00:16:54.552 --> 00:16:56.020\n>> Then you get into mistakes like these.\n\n344\n00:16:56.020 --> 00:16:58.340\nAnd you don't want to make\nsimple mistakes on the exam.\n\n345\n00:16:58.340 --> 00:17:00.120\nYou do have practical\nquestions you got to throw in.\n\n346\n00:17:00.120 --> 00:17:03.700\nIt's easy to make mistakes like this so\nwe just gotta be careful with that.\n\n347\n00:17:03.700 --> 00:17:07.720\nSo I'll add in this last\naddress which I've got to\n\n348\n00:17:07.720 --> 00:17:11.700\nstart adding slashes in because this is,\nI don't know, the Internet or something.\n\n349\n00:17:11.700 --> 00:17:14.306\nAnd I'm doing it wrong again, aren't I.\n\n350\n00:17:14.306 --> 00:17:20.014\nThis needs to be 192.168.0::4 and\n\n351\n00:17:20.014 --> 00:17:24.863\nthe last interface, which is going to be\n\n352\n00:17:24.863 --> 00:17:31.866\n172.16.6::1/64 there we go, all right.\n\n353\n00:17:31.866 --> 00:17:39.410\nSo now I've kind of converted my old IPv4\nnetworks into new, shiny IPv6 networks.\n\n354\n00:17:39.410 --> 00:17:42.720\nAnd I did it in a way that\nmaintain those addresses so\n\n355\n00:17:42.720 --> 00:17:43.820\nthat I can kinda remember them.\n\n356\n00:17:43.820 --> 00:17:46.950\nI can spot them and see them,\nand it's a lot easier, all right.\n\n357\n00:17:46.950 --> 00:17:49.100\nSo the next step is to\nturn on the routing side.\n\n358\n00:17:49.100 --> 00:17:54.510\nI'm not routing, if I go back to head\nquarters, and I do a show ip route,\n\n359\n00:17:54.510 --> 00:17:58.300\nright, I'm gonna see\nmy IPv4 routing table.\n\n360\n00:17:58.300 --> 00:18:01.390\nAnd I can see all these networks that\nI'm learning from the other branches.\n\n361\n00:18:01.390 --> 00:18:05.690\nI'm learning them via OSPF version two,\nfor IPv4.\n\n362\n00:18:06.760 --> 00:18:14.220\nBut if I do a show IPv6 route, I only get\nconnected and local, right, a link local.\n\n363\n00:18:14.220 --> 00:18:15.720\nSo that's all I'm seeing.\n\n364\n00:18:15.720 --> 00:18:17.770\nI'm not seeing anything\nelse outside of that.\n\n365\n00:18:17.770 --> 00:18:19.340\nJust these.\n\n366\n00:18:19.340 --> 00:18:21.620\nAnd that's because I haven't\nturned my routing protocol on.\n\n367\n00:18:21.620 --> 00:18:24.440\nEven if I turn my routing protocol on\nhere, it's not gonna make a difference.\n\n368\n00:18:24.440 --> 00:18:26.346\nI need to enable routing first.\n\n369\n00:18:26.346 --> 00:18:31.058\nSo, I'm gonna say IPv6, Unicast-routing.\n\n370\n00:18:31.058 --> 00:18:31.740\nOkay, and\n\n371\n00:18:31.740 --> 00:18:37.340\nthat command right there is gonna turn on\nUnicast routing, now I can do something.\n\n372\n00:18:37.340 --> 00:18:41.030\nSo now if I take a look at,\nlike do show IPv6 protocol,\n\n373\n00:18:41.030 --> 00:18:45.480\nI can see that I'm running two protocols,\nall right.\n\n374\n00:18:45.480 --> 00:18:48.440\nNow, what are these two protocols?\n\n375\n00:18:48.440 --> 00:18:52.320\nNeighbor Discovery, ND, right,\nIPv6's native Neighbor Discovery.\n\n376\n00:18:52.320 --> 00:18:55.000\nIf there's a router out there\nadvertising a default route,\n\n377\n00:18:55.000 --> 00:18:56.280\nI'll actually learn it and use it.\n\n378\n00:18:56.280 --> 00:18:58.490\nSo I could be learning something\nfrom Neighbor Discovery.\n\n379\n00:18:58.490 --> 00:18:59.400\nAnd then we've got connected.\n\n380\n00:18:59.400 --> 00:19:02.550\nAnybody I'm connected to,\nI want that to be in my routing table.\n\n381\n00:19:02.550 --> 00:19:05.130\nWell those are already there,\nright, that's nothing special.\n\n382\n00:19:05.130 --> 00:19:06.890\nI need to get OSPF enabled.\n\n383\n00:19:06.890 --> 00:19:11.760\nWell, think about how we enable OSPF for\nversion 2, right, for IPv4.\n\n384\n00:19:11.760 --> 00:19:14.730\nWe can go right into our config.\n\n385\n00:19:14.730 --> 00:19:19.630\nWe can say router OSPF1, right, so\nrouter OSPF and then a process number.\n\n386\n00:19:19.630 --> 00:19:24.580\nAnd once you're in the process, you can\nsay network, followed by a network and\n\n387\n00:19:24.580 --> 00:19:27.232\na subnet mask, or a wild card mask.\n\n388\n00:19:27.232 --> 00:19:28.096\nWait, subnet mask.\n\n389\n00:19:28.096 --> 00:19:30.360\n>> Wild card.\n>> It's a wild card mask.\n\n390\n00:19:30.360 --> 00:19:34.151\nAll right, so a sub mask and then a wild\ncard mask followed by area and a number,\n\n391\n00:19:34.151 --> 00:19:36.545\nright, that's how you do\nit on IP version four.\n\n392\n00:19:36.545 --> 00:19:39.659\nAnd that's one way to do it, or\nyou can go to the interface, right.\n\n393\n00:19:39.659 --> 00:19:44.156\nAnd on the interface, you can say IPOSPF,\nand a process number, area, and\n\n394\n00:19:44.156 --> 00:19:45.720\nan area number.\n\n395\n00:19:45.720 --> 00:19:48.660\nWell in IPv6, it's the exact same way.\n\n396\n00:19:48.660 --> 00:19:52.470\nI can go right into IPv6, router OSPF1,\n\n397\n00:19:52.470 --> 00:19:55.690\nand then specify\nthe network commands there.\n\n398\n00:19:55.690 --> 00:19:58.440\nOr commonly,\nwe go to the interfaces, right.\n\n399\n00:19:58.440 --> 00:20:03.702\nSo here on headquarters I can go\nto interface e0/0, and I can say,\n\n400\n00:20:03.702 --> 00:20:08.628\nIPv6, OSPF1, area, and\ngive it an area number, all right.\n\n401\n00:20:08.628 --> 00:20:09.610\nI'm gonna put this in area zero.\n\n402\n00:20:10.660 --> 00:20:13.900\nNow that just created OSPF process one,\nright there.\n\n403\n00:20:13.900 --> 00:20:17.480\nSo I am running OSPF and\nI'm in area 1, and so\n\n404\n00:20:17.480 --> 00:20:23.140\nif I do a show IPv6 protocols, I can\nsee that I'm running OSPF, there it is.\n\n405\n00:20:23.140 --> 00:20:27.210\nBut it's actually not working right now,\nwell it may be working in mine, but\n\n406\n00:20:27.210 --> 00:20:29.930\nin your environment it may not be\nworking if it's not able to determine\n\n407\n00:20:29.930 --> 00:20:31.170\na proper routing ID.\n\n408\n00:20:31.170 --> 00:20:33.970\nOkay, so if it doesn't have a proper\nrouter ID, it's gonna be broken so\n\n409\n00:20:33.970 --> 00:20:35.110\nwe need to go and get that set.\n\n410\n00:20:35.110 --> 00:20:37.940\nWell, let me go and\nassign my other interface real quick.\n\n411\n00:20:37.940 --> 00:20:40.350\nI got one more interface I\nwant to stick in area zero.\n\n412\n00:20:40.350 --> 00:20:41.450\nSo I'll do that.\n\n413\n00:20:41.450 --> 00:20:45.090\nAnd then I'm gonna do IPv6 router OSPF1.\n\n414\n00:20:45.090 --> 00:20:50.954\nUnder IPv4, I would just say router OSPF1,\nso now I just say IPv6 router OSPF1.\n\n415\n00:20:50.954 --> 00:20:55.270\nAnd I'm gonna say router-id,\nand this is my headquarters so\n\n416\n00:20:55.270 --> 00:20:58.014\nI'll make it 0.0.0.1, okay.\n\n417\n00:20:58.014 --> 00:21:00.874\nIf I didn't have any IPv4 addresses,\nthis would solve that problem,\n\n418\n00:21:00.874 --> 00:21:03.175\nI now have a router ID and\nI'm ready to function, right.\n\n419\n00:21:03.175 --> 00:21:09.805\nIn theory, I should be up and running\nOSPF in IPv6, right, or OSPF version 3.\n\n420\n00:21:09.805 --> 00:21:12.365\nSo I should be good there\nif I do a show IPv6 route,\n\n421\n00:21:12.365 --> 00:21:17.985\nwell nothing crazy there yet\nbecause I don't have any neighbors, right.\n\n422\n00:21:17.985 --> 00:21:22.555\nAnd if I do a show IPv6 protocols,\nI can see that I'm still running OSPF,\n\n423\n00:21:22.555 --> 00:21:25.535\nit's enabled for my interfaces,\nit's up and it's happy.\n\n424\n00:21:25.535 --> 00:21:30.350\nIf I do a show IPv6 OSPF, right.\n\n425\n00:21:30.350 --> 00:21:34.700\nI can see, there is my router ID,\nit's OSPF version three, so\n\n426\n00:21:34.700 --> 00:21:35.790\nI can spot that right there.\n\n427\n00:21:35.790 --> 00:21:39.970\nI can my hold down timers, my LSA\ninformation, all the things we were used\n\n428\n00:21:39.970 --> 00:21:42.760\nto before, it's all still here,\nall kind of the same, right.\n\n429\n00:21:42.760 --> 00:21:43.790\nThe hold down timers,\n\n430\n00:21:43.790 --> 00:21:48.540\nall that stuff, it's pretty much just\nthe way that it was before, okay.\n\n431\n00:21:48.540 --> 00:21:49.668\nI just don't have any neighbors, right.\n\n432\n00:21:49.668 --> 00:21:53.380\nIf I do a show IPv6 OSPF neighbor, nobody.\n\n433\n00:21:53.380 --> 00:21:55.590\nSo, I need to get a neighbor, right.\n\n434\n00:21:55.590 --> 00:21:57.100\nLet's go get a neighbor.\n\n435\n00:21:57.100 --> 00:21:58.380\nIf I jump over to branch one,\n\n436\n00:21:58.380 --> 00:22:00.060\nmaybe I'll do branch one\na little bit different, right.\n\n437\n00:22:00.060 --> 00:22:04.710\nSo on branch one,\nif I do a show IPv6 interface brief.\n\n438\n00:22:04.710 --> 00:22:06.100\nWhoops.\n\n439\n00:22:06.100 --> 00:22:06.930\nThere we go.\n\n440\n00:22:06.930 --> 00:22:11.450\nI can see the networks that I've got and\nthere's those FD00 networks that I made,\n\n441\n00:22:11.450 --> 00:22:14.450\nand there's the FE80 link locals\nthat are automatically generated.\n\n442\n00:22:14.450 --> 00:22:18.548\nSo I've got those networks, I can\nadvertise those in here by saying IPv6,\n\n443\n00:22:18.548 --> 00:22:22.910\nrouter OSPF1, right.\n\n444\n00:22:22.910 --> 00:22:24.500\nI kind of forgot to enable routing there,\ndidn't I.\n\n445\n00:22:24.500 --> 00:22:28.660\nSee how it's giving me that warning,\nI forgot to do my IPv6 Unicast routing,\n\n446\n00:22:28.660 --> 00:22:31.730\nkind of important on that one,\nso we'll get that one in there.\n\n447\n00:22:31.730 --> 00:22:33.090\nAnd now I can advertise out my networks.\n\n448\n00:22:33.090 --> 00:22:35.130\nNow I might want to set a router ID first.\n\n449\n00:22:35.130 --> 00:22:37.380\nThis is branch one, so\nI'll make it all ones.\n\n450\n00:22:37.380 --> 00:22:38.630\nAll right, there we go.\n\n451\n00:22:38.630 --> 00:22:42.450\nAnd then, I can say network, follow by\nthe network that I wanna advertise, right.\n\n452\n00:22:43.460 --> 00:22:45.560\nWell, see how it's not letting me?\n\n453\n00:22:45.560 --> 00:22:48.780\nThe reason it's not letting me is\nwe normally use wild card masks\n\n454\n00:22:48.780 --> 00:22:50.420\nwith IPv6 addresses.\n\n455\n00:22:50.420 --> 00:22:53.610\nWhere with IPv4 addresses,\nwe use the network commands.\n\n456\n00:22:53.610 --> 00:22:56.810\nWild card masks with IPv6\nare pretty ungamely, all right.\n\n457\n00:22:56.810 --> 00:23:01.120\nAnd the other problem is not only do\nwe have the individual network, but\n\n458\n00:23:01.120 --> 00:23:02.750\nwe also have the link local addresses.\n\n459\n00:23:02.750 --> 00:23:05.050\nAnd we use the link local addresses a lot,\n\n460\n00:23:05.050 --> 00:23:08.200\nwe use them more than we use\nthe actual overall addresses.\n\n461\n00:23:08.200 --> 00:23:09.740\nAnd so we really have to have both.\n\n462\n00:23:09.740 --> 00:23:12.695\nSo if you use the network command,\nyou can do one and not the other and\n\n463\n00:23:12.695 --> 00:23:13.865\nthings break down.\n\n464\n00:23:13.865 --> 00:23:17.595\nAnd so Cisco is basically stopping me\nfrom doing that network command and\n\n465\n00:23:17.595 --> 00:23:19.495\nsaying let's go and\ndo it on the interface.\n\n466\n00:23:19.495 --> 00:23:21.325\nAnd the interface is always easier anyway.\n\n467\n00:23:21.325 --> 00:23:24.155\nUnder IPv4, I always did it under the\ninterface cuz it was easier unless I had\n\n468\n00:23:24.155 --> 00:23:28.115\nsome very specific reason where I wanted\nto go and do it with a network command.\n\n469\n00:23:28.115 --> 00:23:30.765\nSo we'll just go and\nknock that out, right.\n\n470\n00:23:30.765 --> 00:23:33.425\nSo I can switch over to that interface and\n\n471\n00:23:33.425 --> 00:23:39.620\nsay IPv6 OSPF1 area 0, and then I'll do\nthe same thing for my other interface,\n\n472\n00:23:39.620 --> 00:23:42.340\nand look at that, I just got\na neighborhood relationship that came up.\n\n473\n00:23:42.340 --> 00:23:44.820\nAnd the status messages are the same\nas what we're used to so\n\n474\n00:23:44.820 --> 00:23:46.180\nnothing too crazy there.\n\n475\n00:23:46.180 --> 00:23:48.224\nI'm gonna jump and knock out my\nother two branches real quick.\n\n476\n00:23:48.224 --> 00:23:52.275\nI'll just say IPv6 OSPF1 area 0.\n\n477\n00:23:52.275 --> 00:23:53.935\nOh gosh.\n\n478\n00:23:53.935 --> 00:24:00.810\n>> [LAUGH] ipv6 unicast, you know I'm\ngonna just forget this all day, aren't I?\n\n479\n00:24:00.810 --> 00:24:05.520\nI'll turn it on, and then we'll get\nthis guy thrown right into that area.\n\n480\n00:24:07.510 --> 00:24:10.410\nOh, I did forget to set my router ID,\ndidn't I?\n\n481\n00:24:11.430 --> 00:24:13.270\nI like to set the router ID first.\n\n482\n00:24:13.270 --> 00:24:15.780\nBecause what happens is see I just\nbuilt up those neighbor relationships.\n\n483\n00:24:15.780 --> 00:24:17.530\nAnd I built them up with one router ID.\n\n484\n00:24:17.530 --> 00:24:18.100\nOkay.\n\n485\n00:24:18.100 --> 00:24:21.920\nNow if I go in and\nI change my router ID, what happens?\n\n486\n00:24:21.920 --> 00:24:26.380\nWell, what happens is, they're gonna start\nreceiving updates with the new router ID,\n\n487\n00:24:26.380 --> 00:24:28.630\nand they're gonna see me as two routers.\n\n488\n00:24:28.630 --> 00:24:31.770\nThey'll see the old ones that are aging\nout, and the new ones that are fresh.\n\n489\n00:24:31.770 --> 00:24:32.760\nAnd that's a mess.\n\n490\n00:24:32.760 --> 00:24:36.120\nAnd so that's why it's saying I\nshould really clear that process out.\n\n491\n00:24:36.120 --> 00:24:38.510\nAnd what that's gonna do is\nremove the old and the new.\n\n492\n00:24:38.510 --> 00:24:39.681\nIt's gonna kill it all.\n\n493\n00:24:39.681 --> 00:24:42.430\nAnd make sure they arm\nme with a new router ID.\n\n494\n00:24:42.430 --> 00:24:46.020\nSo that's why I like to set the router ID\nfirst, which I should have done over here.\n\n495\n00:24:46.020 --> 00:24:48.160\nSo I'll do it right on branch 3.\n\n496\n00:24:48.160 --> 00:24:50.560\nSo I'm gonna turn on\nunicast routing first.\n\n497\n00:24:50.560 --> 00:24:54.980\nAnd then I'll say IPv6 router ospf 1.\n\n498\n00:24:54.980 --> 00:24:56.620\nI'll set my router ID.\n\n499\n00:24:56.620 --> 00:25:02.560\nAnd then I'll get into my interfaces,\nand I'll set them into area zero.\n\n500\n00:25:02.560 --> 00:25:04.790\nLet's just get that set.\n\n501\n00:25:06.500 --> 00:25:07.170\nDone.\n\n502\n00:25:07.170 --> 00:25:10.590\nNow my neighbor relationships are building\nup, I should have my adjacencies and\n\n503\n00:25:10.590 --> 00:25:11.890\nall that good stuff in place.\n\n504\n00:25:11.890 --> 00:25:14.420\nOSPF is really fast, so\nit should already be done.\n\n505\n00:25:14.420 --> 00:25:15.890\nNow I just need to verify.\n\n506\n00:25:15.890 --> 00:25:17.580\nOkay, how do I verify?\n\n507\n00:25:17.580 --> 00:25:19.070\nWell, the easiest way is show Ipv6 route.\n\n508\n00:25:19.070 --> 00:25:21.910\nLet's go look at that routing table.\n\n509\n00:25:21.910 --> 00:25:23.970\nMy routing table before\nonly had connected and\n\n510\n00:25:23.970 --> 00:25:27.680\nlinked local,\nnow I can see some OSPF routes, right.\n\n511\n00:25:27.680 --> 00:25:31.220\nAnd we can filter that down if we want,\njust add OSPF to the end of it.\n\n512\n00:25:31.220 --> 00:25:32.612\nAnd now I just see the OSPF routes.\n\n513\n00:25:32.612 --> 00:25:34.240\nAnd there they are FD00:172:16:2.\n\n514\n00:25:34.240 --> 00:25:41.630\nThat corresponds to the old\n172.16.2 network under IPv4.\n\n515\n00:25:41.630 --> 00:25:46.030\nVery easy to visually see that,\nand kind of keep things the same.\n\n516\n00:25:46.030 --> 00:25:49.060\nAnd so I can spot those three networks,\nthey're all out there.\n\n517\n00:25:49.060 --> 00:25:52.920\nI should have full reachability\nif I try and ping any of those.\n\n518\n00:25:52.920 --> 00:25:58.470\nIf I try and ping to,\nlet's say, that one, right?\n\n519\n00:25:58.470 --> 00:25:59.670\nWe should be able to ping across.\n\n520\n00:25:59.670 --> 00:26:00.860\n>> Ping 16 there, yeah.\n\n521\n00:26:00.860 --> 00:26:04.970\n>> Oops, yeah well, there's still no\ncorrection for bad typing in IPv6, but\n\n522\n00:26:04.970 --> 00:26:06.790\notherwise, there we go.\n\n523\n00:26:06.790 --> 00:26:10.060\nSo I got reachability, I can ping\nright across that other network.\n\n524\n00:26:10.060 --> 00:26:11.760\nI'm up and going, right?\n\n525\n00:26:11.760 --> 00:26:14.977\nIf I do a show IPv6 protocols,\nI can see I'm up and running,\n\n526\n00:26:14.977 --> 00:26:16.440\nthere's the interfaces.\n\n527\n00:26:16.440 --> 00:26:18.930\nI might only do a single area.\n\n528\n00:26:18.930 --> 00:26:21.370\nI could've done more than one area,\nit wouldn't be hard.\n\n529\n00:26:21.370 --> 00:26:24.590\nActually, it'd be kinda hard with me cuz\nI've only got that one Ethernet interface.\n\n530\n00:26:24.590 --> 00:26:28.330\nBut if I were to spawn other areas and\nbring them up, they'd come right in and\n\n531\n00:26:28.330 --> 00:26:30.560\nwe'd see inter-area communications.\n\n532\n00:26:30.560 --> 00:26:35.610\nSo if I create like a I'll make\na loop back interface, right.\n\n533\n00:26:35.610 --> 00:26:39.150\nAnd I'll give it a IP\naddress of iPv6 address,\n\n534\n00:26:42.390 --> 00:26:45.168\nlet's make up some new network here.\n\n535\n00:26:45.168 --> 00:26:47.600\nWe'll do 172:16:5,\n\n536\n00:26:47.600 --> 00:26:53.170\nthat will be an exciting network for\nus, so we'll just throw that in there.\n\n537\n00:26:53.170 --> 00:26:56.000\nAnd I'll put that into area one.\n\n538\n00:26:56.000 --> 00:26:59.886\nOkay, well, when I put it in area\none this router just became an ABR,\n\n539\n00:26:59.886 --> 00:27:01.150\nan area border router.\n\n540\n00:27:01.150 --> 00:27:03.490\nI'm bordering area zero and one.\n\n541\n00:27:03.490 --> 00:27:09.010\nAnd so,\nif I do a show IPv6 protocol's, right?\n\n542\n00:27:09.010 --> 00:27:12.770\nI'll see that there I am and\nI've got area zero, in Area one.\n\n543\n00:27:12.770 --> 00:27:17.500\nAnd if I start to take\na look at ospf's database.\n\n544\n00:27:18.800 --> 00:27:22.100\nNow I can look at the database, and\nI'll see my Area zero database.\n\n545\n00:27:22.100 --> 00:27:24.980\nAnd as I move forward,\nI'll see the Area one database, right.\n\n546\n00:27:24.980 --> 00:27:26.430\nSo it's functioning just like normal.\n\n547\n00:27:26.430 --> 00:27:29.600\nAnd things like stubs and NSSAs and\nall those other good guys?\n\n548\n00:27:29.600 --> 00:27:31.190\nWell, we can do those right here too.\n\n549\n00:27:31.190 --> 00:27:37.510\nSo we just say IPv6 Router ospf 1, and\nthen it's the same commands as before.\n\n550\n00:27:37.510 --> 00:27:42.570\nI could say area one,\nstub no-summary, right?\n\n551\n00:27:42.570 --> 00:27:45.420\nSo, now I just set Area one\nto be a totally stubby area.\n\n552\n00:27:45.420 --> 00:27:50.490\nOr I could say area one NSSA,\nright, and now it's an NSSA.\n\n553\n00:27:50.490 --> 00:27:51.600\nThat stuff hasn't changed.\n\n554\n00:27:51.600 --> 00:27:54.950\nThe commands are the same, the concept\nis the same, the function's the same.\n\n555\n00:27:54.950 --> 00:27:58.260\nThe only difference here is, we're\nusing IPv6 addresses, instead of IPv4,\n\n556\n00:27:58.260 --> 00:27:59.610\nand that's it.\n\n557\n00:27:59.610 --> 00:28:02.220\nThat makes that configuration\na heck of a lot easier\n\n558\n00:28:02.220 --> 00:28:03.220\nthan trying to learn something new.\n\n559\n00:28:03.220 --> 00:28:09.080\nAnd I think the only other command I\ndidn't do was the show IPv6 OSPF neighbor.\n\n560\n00:28:09.080 --> 00:28:09.840\nAnd there we go.\n\n561\n00:28:09.840 --> 00:28:11.670\nI've got this one common network, right?\n\n562\n00:28:11.670 --> 00:28:14.620\nAnd so I'm seeing these connections with\nthe other routers that are out there.\n\n563\n00:28:14.620 --> 00:28:17.250\nAnd I'm connected to branch 1,\nbranch 2 and branch 3.\n\n564\n00:28:18.320 --> 00:28:22.570\nApparently I didn't set this branch's\nrouter ID, so I'll have to go and\n\n565\n00:28:22.570 --> 00:28:23.590\nupdate it's router ID.\n\n566\n00:28:23.590 --> 00:28:25.190\nBut I've got those guys\nconnected out there.\n\n567\n00:28:25.190 --> 00:28:27.510\nWe got, notice how I don't have a DR.\n\n568\n00:28:27.510 --> 00:28:30.270\nRight?\nI have a DR other, BDR, DR other.\n\n569\n00:28:30.270 --> 00:28:31.830\nThat means that I'm the designated router,\n\n570\n00:28:31.830 --> 00:28:35.300\nright, and branch 2 here is\nthe backup designated router.\n\n571\n00:28:35.300 --> 00:28:38.440\nSo we still have DRs and\nBDRs just like under OSPF version 2.\n\n572\n00:28:38.440 --> 00:28:40.570\nNothing new there, right?\n\n573\n00:28:40.570 --> 00:28:43.130\nSo the key takeaway from this,\n\n574\n00:28:43.130 --> 00:28:47.720\nshould just be that IPv6 under\nOSPF version 3, is really easy.\n\n575\n00:28:47.720 --> 00:28:48.950\nIt's all the same commands.\n\n576\n00:28:48.950 --> 00:28:53.190\nJust wherever you had IP make it IPV6,\nand now you've got it and\n\n577\n00:28:53.190 --> 00:28:54.390\ntype the different addresses.\n\n578\n00:28:54.390 --> 00:28:55.210\nThere is that whole part.\n\n579\n00:28:55.210 --> 00:28:56.670\nRight?\n\n580\n00:28:56.670 --> 00:28:57.380\n>> Now Don.\n\n581\n00:28:57.380 --> 00:29:00.250\nIt sounds like again,\nfairly simple to configure,\n\n582\n00:29:00.250 --> 00:29:03.720\nsomething in our future that we need to\nmake sure that we feel comfortable with.\n\n583\n00:29:03.720 --> 00:29:05.940\nEspecially when working\nwith router protocols,\n\n584\n00:29:05.940 --> 00:29:08.870\nbecause that's probably what I'm going\nto be configuring in the future anyways.\n\n585\n00:29:08.870 --> 00:29:10.590\nSo, with a simple configuration,\nremember that,\n\n586\n00:29:10.590 --> 00:29:13.550\nthat we can actually run this under\nevery other protocol that we have.\n\n587\n00:29:13.550 --> 00:29:16.540\nBut here specifically for OSPF version 3.\n\n588\n00:29:16.540 --> 00:29:18.490\nThat's what we're focusing in on today.\n\n589\n00:29:18.490 --> 00:29:21.540\nWe showed you the configuration and\nwe're glad that we actually did.\n\n590\n00:29:21.540 --> 00:29:23.820\nBecause that means you,\nare now gonna be ready for\n\n591\n00:29:23.820 --> 00:29:26.000\nthe exam when it comes\ndown to these questions.\n\n592\n00:29:26.000 --> 00:29:27.540\nSo, that's our show for today.\n\n593\n00:29:27.540 --> 00:29:29.990\nSigning off for ITProTV, I'm Ronnie Wong.\n\n594\n00:29:29.990 --> 00:29:30.680\n>> And I'm Don Pezet.\n\n595\n00:29:30.680 --> 00:29:32.457\n>> And we'll see you next time.\n\n596\n00:29:32.457 --> 00:29:35.500\n[MUSIC]\n\n",
          "vimeoId": "138001718"
        },
        {
          "description": "The Border Gateway Protocol (BGP) is an exterior protocol, which was intended and configured to route the internet, and not necessarily an enterprise or home environment, which tries to provide a loop-free topology on a global level. Viewers will hear about why one would choose to use BGP and the basic BGP characteristics, theory and terminology necessary for understanding how it works.",
          "length": "1778",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/ccnproute/cisco-ccnproute300101-3-30-border_gateway_protocol-090115-1.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/ccnproute/cisco-ccnproute300101-3-30-border_gateway_protocol-090115-1-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/ccnproute/cisco-ccnproute300101-3-30-border_gateway_protocol-090115-1-sm.jpg",
          "title": "Border Gateway Protocol",
          "transcript": "WEBVTT\n\n1\n00:00:00.000 --> 00:00:10.797\n[MUSIC]\n\n2\n00:00:10.797 --> 00:00:13.101\nAll right, welcome to another\ngreat episode here on ITProTV.\n\n3\n00:00:13.101 --> 00:00:15.470\nToday we're talking about CCNP routes.\n\n4\n00:00:15.470 --> 00:00:18.770\nSo if you're getting ready for\nthat exam, this is the place to be.\n\n5\n00:00:18.770 --> 00:00:20.500\nI'm your host Ronny Wong, and\n\n6\n00:00:20.500 --> 00:00:25.020\nhere with us again to help us\nout on some CCNP, Mr. Don Pezet.\n\n7\n00:00:25.020 --> 00:00:25.614\nHow's it goin?\n\n8\n00:00:25.614 --> 00:00:26.590\n>> It's going great Ronny.\n\n9\n00:00:26.590 --> 00:00:30.683\nNow, at the beginning of every episode I\nsay I'm excited to be back on the show.\n\n10\n00:00:30.683 --> 00:00:31.446\n>> Right.\n>> Right, and\n\n11\n00:00:31.446 --> 00:00:34.220\nI say that we're gonna cover\nsome exciting new technology.\n\n12\n00:00:34.220 --> 00:00:36.380\nAnd what we've been doing\nreally up to this point,\n\n13\n00:00:36.380 --> 00:00:37.930\nwe've covered a lot of stuff, right?\n\n14\n00:00:37.930 --> 00:00:41.380\nBut the majority of it is stuff that\nwe learned back in the CCNA day.\n\n15\n00:00:41.380 --> 00:00:41.890\n>> Right.\n\n16\n00:00:41.890 --> 00:00:45.560\n>> We just learned more advanced\nstuff about it here for CCNP.\n\n17\n00:00:45.560 --> 00:00:46.710\nBut today is different.\n\n18\n00:00:46.710 --> 00:00:47.830\nRight.\nMark my words.\n\n19\n00:00:47.830 --> 00:00:48.690\nToday is different.\n\n20\n00:00:48.690 --> 00:00:52.370\nWe're gonna be learning about\nthe Border Gateway Protocol, or BGP.\n\n21\n00:00:52.370 --> 00:00:55.370\nAnd BGP is not something we\nlearned about for CCNA, right?\n\n22\n00:00:55.370 --> 00:00:56.760\nIt's not on the exam objective list.\n\n23\n00:00:56.760 --> 00:00:57.810\nIt sort of is, right?\n\n24\n00:00:57.810 --> 00:01:00.230\nYou need to know that BGP exists.\n\n25\n00:01:00.230 --> 00:01:02.950\nAnd you need to know that it's\nan exterior gateway protocol not\n\n26\n00:01:02.950 --> 00:01:04.690\nan interior gateway protocol.\n\n27\n00:01:04.690 --> 00:01:05.720\nAnd then you proceed to learn all\n\n28\n00:01:05.720 --> 00:01:07.870\nabout the interior gateway protocols,\n[LAUGH] right?\n\n29\n00:01:07.870 --> 00:01:09.550\nSo you know that BGP exists.\n\n30\n00:01:09.550 --> 00:01:10.390\nYou know it's different.\n\n31\n00:01:10.390 --> 00:01:11.870\nBut you don't know anything else about it.\n\n32\n00:01:11.870 --> 00:01:15.110\nSo this is the first time that we're\nreally going to see something truly new,\n\n33\n00:01:15.110 --> 00:01:18.720\ncompletely new to us, and\nthat's really exciting.\n\n34\n00:01:18.720 --> 00:01:19.420\n>> It is.\n>> So, Ronnie,\n\n35\n00:01:19.420 --> 00:01:23.180\nI'm excited to be back on this show and\nexcited to jump into BGP.\n\n36\n00:01:23.180 --> 00:01:26.710\nAll right, now, BGP,\nthe border gateway protocol,\n\n37\n00:01:26.710 --> 00:01:28.757\nlet's review the two things\nthat I mentioned already.\n\n38\n00:01:28.757 --> 00:01:29.680\n>> [LAUGH]\n>> Well, you know,\n\n39\n00:01:29.680 --> 00:01:33.890\nit is different, right, so we got that,\nbut it's an exterior gateway protocol, and\n\n40\n00:01:33.890 --> 00:01:35.040\nwhat the heck does that mean?\n\n41\n00:01:35.040 --> 00:01:38.550\nWell Routing protocols can be\ndivided up into two camps.\n\n42\n00:01:38.550 --> 00:01:42.360\nIGPs, interior gated protocols,\nthose are designed for companies and\n\n43\n00:01:42.360 --> 00:01:47.420\nenterprises, to handle dynamic routing\non a network that they completely own.\n\n44\n00:01:47.420 --> 00:01:48.370\nRight?\n\n45\n00:01:48.370 --> 00:01:51.170\nWhen you're running an IGP,\nthe idea is that\n\n46\n00:01:51.170 --> 00:01:55.950\nevery router that's a part of your\ninterior protocol, you own and control.\n\n47\n00:01:55.950 --> 00:01:59.460\nIf you're running OSPF on 500 routers,\nthose are your routers, you own them.\n\n48\n00:01:59.460 --> 00:02:00.940\nYou can do whatever you want with them.\n\n49\n00:02:00.940 --> 00:02:04.530\nIf you're running EIGRP on 200 routers,\nthose are your routers.\n\n50\n00:02:04.530 --> 00:02:06.488\nYou can do whatever you want with them.\n\n51\n00:02:06.488 --> 00:02:09.400\nWith BGP, it's different.\n\n52\n00:02:09.400 --> 00:02:14.320\nWith an exterior gateway protocol,\nthe idea with an exterior gateway protocol\n\n53\n00:02:14.320 --> 00:02:17.840\nis that your router is\njust one among many.\n\n54\n00:02:17.840 --> 00:02:19.690\nAnd that the other ones that\nare out there are great,\n\n55\n00:02:19.690 --> 00:02:23.450\nyou rely on them to get to destinations\nbut you don't control them.\n\n56\n00:02:23.450 --> 00:02:27.254\nSo unlike an IGP where you have\nfull control over everything and\n\n57\n00:02:27.254 --> 00:02:30.858\nroute manipulation is just power\nin the palm of your hands.\n\n58\n00:02:30.858 --> 00:02:35.690\nYou can do whatever you want, you're like\na pseudo network god over your empire.\n\n59\n00:02:35.690 --> 00:02:38.070\nIn BGP, you're just a surf, right?\n\n60\n00:02:38.070 --> 00:02:41.580\nYou're just a minion or\na part of this giant being and\n\n61\n00:02:41.580 --> 00:02:44.280\nyou can only influence\nyour little corner of it.\n\n62\n00:02:44.280 --> 00:02:45.620\nAnd that's a different world.\n\n63\n00:02:45.620 --> 00:02:47.470\nThat is really different.\n\n64\n00:02:47.470 --> 00:02:50.620\nAnd we just have to remember\nwhat BGP is intended for.\n\n65\n00:02:50.620 --> 00:02:54.860\nBGP, the Border Gateway Protocol,\nis intended, it was written from day one\n\n66\n00:02:54.860 --> 00:02:57.880\nto route the internet, right,\nnot to route your enterprise,\n\n67\n00:02:57.880 --> 00:03:01.850\nnot to route your home, that's for\nsure, but to route the internet.\n\n68\n00:03:01.850 --> 00:03:04.012\nOne particular network,\nthis routing protocol was created for\n\n69\n00:03:04.012 --> 00:03:04.900\none particular network.\n\n70\n00:03:04.900 --> 00:03:06.290\nNow you can use it where ever you want.\n\n71\n00:03:06.290 --> 00:03:09.070\nYou can route your business\nusing BGP if you want.\n\n72\n00:03:09.070 --> 00:03:11.075\nYou're crazy if you do, you can.\n\n73\n00:03:11.075 --> 00:03:13.250\n>> [LAUGH]\n>> It's designed to route the internet.\n\n74\n00:03:13.250 --> 00:03:16.770\nAnd the key thing that makes\nthe internet different from your network\n\n75\n00:03:16.770 --> 00:03:19.490\nis that it's big, it's really, really big.\n\n76\n00:03:19.490 --> 00:03:21.850\nIt's hard to get a network\nbigger than the internet, right?\n\n77\n00:03:21.850 --> 00:03:25.850\nI mean that is the biggest network that\nwe're aware of in the world, right?\n\n78\n00:03:25.850 --> 00:03:28.590\nThere may be secret networks around there,\nSkynet or something, I don't know.\n\n79\n00:03:28.590 --> 00:03:34.600\nSo [LAUGH] it's the biggest non-sentient\nnetwork [LAUGH] out there So\n\n80\n00:03:34.600 --> 00:03:35.900\nthat's the big difference number one.\n\n81\n00:03:35.900 --> 00:03:38.900\nAnd big difference number two is that\nyou don't own the equipment, right?\n\n82\n00:03:38.900 --> 00:03:42.460\nYou're watching this show right now,\nso you're watching it and\n\n83\n00:03:42.460 --> 00:03:44.770\nmaybe you went to ITPRO.TV, the website.\n\n84\n00:03:44.770 --> 00:03:47.130\nAnd those are servers that we control.\n\n85\n00:03:47.130 --> 00:03:48.130\nThose are our servers.\n\n86\n00:03:48.130 --> 00:03:49.500\nThat's great.\nThat part of the network that's\n\n87\n00:03:49.500 --> 00:03:51.200\non the internet, we control that.\n\n88\n00:03:51.200 --> 00:03:52.860\nBut how did you get to us?\n\n89\n00:03:52.860 --> 00:03:57.270\nYou pass through five, 10, 15 routers, and\n\n90\n00:03:57.270 --> 00:03:59.400\nthose are all other\nInternet service routers,\n\n91\n00:03:59.400 --> 00:04:02.550\npeople that you've probably never paid a\ndime to, right, or at least not directly.\n\n92\n00:04:02.550 --> 00:04:04.960\nAnd, you relied on their\nnetworks to get here.\n\n93\n00:04:04.960 --> 00:04:07.682\nWell, BGP is what allowed that to happen,\nright?\n\n94\n00:04:07.682 --> 00:04:09.790\nBGP makes the Internet work.\n\n95\n00:04:09.790 --> 00:04:10.490\nOkay.\n\n96\n00:04:10.490 --> 00:04:14.450\nNow because it's designed to handle\nreally, really, really, really, really,\n\n97\n00:04:14.450 --> 00:04:17.670\nreally big networks,\nit has to be really simple.\n\n98\n00:04:17.670 --> 00:04:18.520\nRight?\n\n99\n00:04:18.520 --> 00:04:21.420\nIf it tries to do complex things,\nit's just not gonna happen.\n\n100\n00:04:21.420 --> 00:04:23.470\nThink about OSPF, right?\n\n101\n00:04:23.470 --> 00:04:28.180\nOSPF has, it's a link state protocol,\nyour router\n\n102\n00:04:28.180 --> 00:04:33.590\nhas a complete picture of your\nentire network, every single link.\n\n103\n00:04:33.590 --> 00:04:38.600\nIf you have one area,\neach router knows your entire environment.\n\n104\n00:04:38.600 --> 00:04:41.060\nWell, when you have 50 routers,\nthat's not a big deal.\n\n105\n00:04:41.060 --> 00:04:44.810\nWhen you have 500000 routers,\nit's a big deal.\n\n106\n00:04:44.810 --> 00:04:46.480\nIt's a lot.\nYou can't handle it.\n\n107\n00:04:46.480 --> 00:04:48.390\nNo router has enough memory\nto be able to handle that.\n\n108\n00:04:48.390 --> 00:04:52.040\nAnd it just gets bogged down, because in\naddition to just knowing the networks,\n\n109\n00:04:52.040 --> 00:04:54.560\nit also has to do with the Dijkstra\nalgorithm calculation, right?\n\n110\n00:04:54.560 --> 00:04:55.400\nYou got your IP, the same way.\n\n111\n00:04:55.400 --> 00:04:57.640\nIt's gonna do the dual calculations and\n\n112\n00:04:57.640 --> 00:05:00.790\nthose are burdensome,\nespecially on a really big network.\n\n113\n00:05:00.790 --> 00:05:05.380\nSo what BGP is designed for\nis to simplify that, to make it so\n\n114\n00:05:05.380 --> 00:05:08.890\nmuch easier that it doesn't\noverpower a router, so\n\n115\n00:05:08.890 --> 00:05:13.460\nthat a router can have 500,000 routes and\nstill run fast right?\n\n116\n00:05:13.460 --> 00:05:17.120\nNow when I say 500,000 routes,\nI'm not joking right?\n\n117\n00:05:17.120 --> 00:05:20.740\nA lot of times you just throw out random\nnumbers like that and you're like,\n\n118\n00:05:20.740 --> 00:05:21.880\noh how's that true?\n\n119\n00:05:21.880 --> 00:05:25.900\nWell let's take a look,\nlet me see here, where do I have that?\n\n120\n00:05:25.900 --> 00:05:30.530\nI can pull up the,\nthere's a website called potaroo and\n\n121\n00:05:30.530 --> 00:05:32.960\nthey basically publish BGP statistics.\n\n122\n00:05:32.960 --> 00:05:34.570\nI'm just going to pull it up right here.\n\n123\n00:05:34.570 --> 00:05:35.460\nHere we go.\n\n124\n00:05:35.460 --> 00:05:38.820\nAnd I love what they do, because\nthey publish the BGP statistics from\n\n125\n00:05:38.820 --> 00:05:44.150\nwhen they started tracking back in 1994,\nall the way to present, right?\n\n126\n00:05:44.150 --> 00:05:46.991\nAnd so if we look at this table and\n\n127\n00:05:46.991 --> 00:05:51.730\nkind of look at these\nnumbers that they've created,\n\n128\n00:05:51.730 --> 00:05:56.256\nright, way over here is 1994,\nand back then,\n\n129\n00:05:56.256 --> 00:06:01.230\nthere were about 20,000\nroutes in the BGP table.\n\n130\n00:06:01.230 --> 00:06:07.285\nSo, if you brought up a BGP router,\nin 1994, had 20,000 routes.\n\n131\n00:06:07.285 --> 00:06:10.818\nNow 20,000 routes, compared to all\nthe routes we've managed in this show,\n\n132\n00:06:10.818 --> 00:06:14.440\nwhat's our record so far, like a router\nhad maybe 15 routes in it, right?\n\n133\n00:06:14.440 --> 00:06:15.920\nAnd that doesn't take\nmuch memory at all and\n\n134\n00:06:15.920 --> 00:06:19.570\nthe router is great, what if you had\n20,000 routes in your routing table?\n\n135\n00:06:19.570 --> 00:06:20.680\nThat's a lot.\n\n136\n00:06:20.680 --> 00:06:23.510\nWell, it's only grown more and\nmore and more, and\n\n137\n00:06:23.510 --> 00:06:26.500\nyou can see the dot com boom right here,\nthat's where that happened.\n\n138\n00:06:26.500 --> 00:06:30.380\nAnd it's just continued to grow, even\nafter the boom, until you get to today,\n\n139\n00:06:30.380 --> 00:06:36.240\nright, in 2015 right here,\nwhere we're at 560,000 or so routes.\n\n140\n00:06:37.390 --> 00:06:43.266\nSo if you were to bring up a BGP router\ntoday, and pull the full BGP table,\n\n141\n00:06:43.266 --> 00:06:47.900\nits 560,000 routes, fortunately\nmost of us don't have to do that.\n\n142\n00:06:47.900 --> 00:06:50.430\nBut if you work for\nan internet service provider, you do.\n\n143\n00:06:50.430 --> 00:06:53.840\nYou have routers there that\nare pulling that full set,\n\n144\n00:06:53.840 --> 00:06:56.580\nand those are where you get\nthose high-end routers.\n\n145\n00:06:56.580 --> 00:06:59.690\nWhen you go to Cisco's website,\nand you go to shop or routers.\n\n146\n00:06:59.690 --> 00:07:00.380\nRight?\n\n147\n00:07:00.380 --> 00:07:05.170\nThe CCNA exam, CCNP exam,\nthey're really focused on the 26,\n\n148\n00:07:05.170 --> 00:07:09.340\nnot 2600s, those are old,\nthe 2900 series routers.\n\n149\n00:07:09.340 --> 00:07:10.140\nRight?\n\n150\n00:07:10.140 --> 00:07:12.150\nThe 2900 is what you see on the exam, but\n\n151\n00:07:12.150 --> 00:07:15.760\nit even covers like the 1900 series\nrouters, which are basically the same.\n\n152\n00:07:15.760 --> 00:07:17.250\nAnd those are enterprise routers.\n\n153\n00:07:17.250 --> 00:07:18.630\nRight?\nRouters that can be used for\n\n154\n00:07:18.630 --> 00:07:21.580\nsmall business, medium business, large\nbusiness, but they're really designed for\n\n155\n00:07:21.580 --> 00:07:26.740\nmedium and large businesses, but they're\nnot designed to handle 560, 000 routes.\n\n156\n00:07:26.740 --> 00:07:29.030\nRight?\nWhen you go to these branch and\n\n157\n00:07:29.030 --> 00:07:31.640\nnetwork edge routers,\nthey're designed to handle.\n\n158\n00:07:31.640 --> 00:07:34.500\nWell, a branch they're designed\nto handle a few thousand routes,\n\n159\n00:07:34.500 --> 00:07:37.230\nmaybe, before it they really\nstart getting bogged down.\n\n160\n00:07:37.230 --> 00:07:40.970\nAnd that's where we need OSPF areas,\nor EIGRP summaries, or\n\n161\n00:07:40.970 --> 00:07:44.680\nwhatever to shrink the routing tables\nwhen you're in the thousands of routes.\n\n162\n00:07:44.680 --> 00:07:46.780\nIf you're just in the hundreds of routes,\ndon't worry about it.\n\n163\n00:07:46.780 --> 00:07:48.450\nYour router can handle it, right,\n\n164\n00:07:48.450 --> 00:07:51.690\nunless it's one of those crappy 800\nseries routers or something like that.\n\n165\n00:07:51.690 --> 00:07:55.331\nThey just don't have a ton of memory, so\nyou've gotta kinda pare that table down.\n\n166\n00:07:55.331 --> 00:07:57.373\nBut when you're an internet\nservice provider,\n\n167\n00:07:57.373 --> 00:07:58.879\nsee how they have special routers.\n\n168\n00:07:58.879 --> 00:08:00.814\nSpecial routers for that, and if we go and\n\n169\n00:08:00.814 --> 00:08:04.960\nlook at them, let's go shopping here Some\nof these, like the 6000 series routers,\n\n170\n00:08:04.960 --> 00:08:08.810\nthose things cost hundreds of thousands\nof dollars when they're fully spec out.\n\n171\n00:08:08.810 --> 00:08:12.266\nRight, like,\njust the chassis alone is a good $50,000.\n\n172\n00:08:12.266 --> 00:08:15.962\nThey got the carrier routing,\nall these other different types.\n\n173\n00:08:15.962 --> 00:08:20.230\nThese are high-end routers that are\ndesigned to handle massive routing tables.\n\n174\n00:08:20.230 --> 00:08:23.780\nThey have a ton of RAM inside of them and\nthey're designed to handle that.\n\n175\n00:08:23.780 --> 00:08:28.940\nMost of us, as end-users and as system\nadmins, network admins for small,\n\n176\n00:08:28.940 --> 00:08:32.480\nmedium and even enterprise businesses\nwill never have to mess with this.\n\n177\n00:08:32.480 --> 00:08:34.650\nIf you work with an Internet\nservice provider, you do.\n\n178\n00:08:34.650 --> 00:08:36.170\nAnd Cisco has a separate track for that.\n\n179\n00:08:36.170 --> 00:08:37.580\nWe're doing the CCNP routing and\n\n180\n00:08:37.580 --> 00:08:40.540\nswitching, there's also\nthe CCNP service provider.\n\n181\n00:08:40.540 --> 00:08:44.040\nAnd that's where they kinda dive into\nthat, spend a ton more time on BGP.\n\n182\n00:08:44.040 --> 00:08:47.850\nFor us, for CCNP routing and\nswitching, what we need to know\n\n183\n00:08:47.850 --> 00:08:52.850\nis not how to pull the full routing table\nor how to set up this Internet routing.\n\n184\n00:08:52.850 --> 00:08:56.930\nIt's really just how to connect our\nenvironment up to a service provider.\n\n185\n00:08:56.930 --> 00:09:00.420\nHook us up to a service provider so\nwe can exchange information.\n\n186\n00:09:00.420 --> 00:09:03.600\nNow before we understand why\nwe would want to do that,\n\n187\n00:09:03.600 --> 00:09:07.210\nwe kind of need to understand\na little more about how BGP works.\n\n188\n00:09:07.210 --> 00:09:09.209\nSo I wanna to show you guys\na diagram that I made.\n\n189\n00:09:09.209 --> 00:09:11.519\nRight here, okay.\n\n190\n00:09:11.519 --> 00:09:12.935\nBGP.\n\n191\n00:09:12.935 --> 00:09:17.905\nBGP is what's called a path\nvector protocol, all right.\n\n192\n00:09:17.905 --> 00:09:20.888\nRIP and IGRP, they're distance vector.\n\n193\n00:09:20.888 --> 00:09:23.361\nThat means they just talk to\ntheir neighbors, and that's it.\n\n194\n00:09:23.361 --> 00:09:27.106\nAnd RIP really cares about hop count, IGRP\nreally cares about bandwidth and delay.\n\n195\n00:09:27.106 --> 00:09:29.533\nThey make their decisions\nthrough the distance factor.\n\n196\n00:09:29.533 --> 00:09:32.320\nOSPF is link state.\n\n197\n00:09:32.320 --> 00:09:34.930\nIt looks at all the routers out there,\nnot just its neighbors.\n\n198\n00:09:34.930 --> 00:09:36.620\nAnd it pays attention to bandwidth.\n\n199\n00:09:36.620 --> 00:09:38.770\nIts cost is a direct\nreflection of bandwidth.\n\n200\n00:09:40.160 --> 00:09:43.390\nBGP, on the other hand,\nthe network is so big.\n\n201\n00:09:43.390 --> 00:09:47.340\nIt's so big that you can't have\nmore than a couple of neighbors.\n\n202\n00:09:47.340 --> 00:09:47.910\nRight.\n\n203\n00:09:47.910 --> 00:09:50.850\nAnd you can't have a vision whole world\nthere's just too much equipment out there,\n\n204\n00:09:50.850 --> 00:09:53.440\ntoo many routes, too much change right?\n\n205\n00:09:53.440 --> 00:09:57.310\nYou don't want your routing table\nto constantly be updating because\n\n206\n00:09:57.310 --> 00:10:00.010\nI can guarantee you there's a thousand\nrouters on the Internet rebooting right\n\n207\n00:10:00.010 --> 00:10:00.630\nnow this moment.\n\n208\n00:10:00.630 --> 00:10:03.250\nI mean this is how it is right,\ntoo much change.\n\n209\n00:10:03.250 --> 00:10:06.570\nSo with BGP,\nyou lose all the advance stuff.\n\n210\n00:10:06.570 --> 00:10:13.150\nAll the advance that we have in OSPF and\nEIGRP, all that is kinda gone, right?\n\n211\n00:10:13.150 --> 00:10:15.780\nBGP is slow, it's not fast.\n\n212\n00:10:15.780 --> 00:10:18.200\nBGP does not do load balancing, right?\n\n213\n00:10:18.200 --> 00:10:20.730\nAt least not by default,\nyou can force it to, but it doesn't.\n\n214\n00:10:20.730 --> 00:10:23.160\nSo it doesn't do that by default.\n\n215\n00:10:23.160 --> 00:10:27.200\nIt doesn't evaluate\nthe bandwidth of a line.\n\n216\n00:10:27.200 --> 00:10:31.300\nTo BGP, a 1 gig line and\na 1 meg line are the same.\n\n217\n00:10:31.300 --> 00:10:33.100\nIt doesn't look at that stuff.\n\n218\n00:10:33.100 --> 00:10:39.490\nAll BGP does is tries to\nguarantee a loop-free topology.\n\n219\n00:10:39.490 --> 00:10:45.290\nAnd it tries to do it on a global level,\na level with tens of thousands of routers.\n\n220\n00:10:45.290 --> 00:10:46.980\nThat's a lot, all right?\n\n221\n00:10:46.980 --> 00:10:49.560\nSo the way BGP works\n\n222\n00:10:49.560 --> 00:10:54.440\nis it divides the Internet up\ninto autonomous systems, right?\n\n223\n00:10:54.440 --> 00:10:58.490\nEach autonomous system represents usually\nan Internet service provider, okay?\n\n224\n00:10:58.490 --> 00:11:06.040\nSo I might have level three\ncommunications here I might have shoot,\n\n225\n00:11:06.040 --> 00:11:09.620\nwho are some of the bigger\nones that are out there?\n\n226\n00:11:09.620 --> 00:11:10.385\nI'm drawing a blank now.\n\n227\n00:11:10.385 --> 00:11:11.300\n>> [LAUGH]\n>> Like Verizon,\n\n228\n00:11:11.300 --> 00:11:11.800\n>> Yeah.\n\n229\n00:11:11.800 --> 00:11:12.655\n>> Is another big one.\n\n230\n00:11:12.655 --> 00:11:14.220\nAT&T is another big one, right?\n\n231\n00:11:14.220 --> 00:11:16.055\nSo I'm gonna have each of those different\n\n232\n00:11:16.055 --> 00:11:20.605\nnetworks that are out there, and they're\neach their own autonomous system, okay?\n\n233\n00:11:20.605 --> 00:11:23.795\nAnd, when I connect to my\nInternet service provider,\n\n234\n00:11:23.795 --> 00:11:24.895\nthey're an autonomous system, right?\n\n235\n00:11:24.895 --> 00:11:26.749\nEach AS represents a service provider.\n\n236\n00:11:27.800 --> 00:11:33.060\nAnd when I connect to my service provider\nand I'm saying I need to get to google's\n\n237\n00:11:33.060 --> 00:11:36.890\nwebsite and Google's website is attached\nsomehow to this other service provider.\n\n238\n00:11:36.890 --> 00:11:40.680\nMy service provider can look at\nthe autonomous systems and say all right.\n\n239\n00:11:40.680 --> 00:11:43.080\nI don't know anything about\nthe little links in between here and\n\n240\n00:11:43.080 --> 00:11:46.240\nthere but I know that I could jump\n\n241\n00:11:46.240 --> 00:11:50.970\nfrom one AS to another to get all the way\nto where I need to be, all right.\n\n242\n00:11:50.970 --> 00:11:55.250\nAnd so we're tracking these autonomous\nsystem numbers, now, inside of an AS there\n\n243\n00:11:55.250 --> 00:11:58.500\ncould be one router, they're could be 100\nrouters, they're could 1,000 routers.\n\n244\n00:11:58.500 --> 00:12:01.163\nI don't care about that.\nI just want to know the AS, right, so\n\n245\n00:12:01.163 --> 00:12:04.869\nthink about it is like,\nyou are in the United States, right,\n\n246\n00:12:04.869 --> 00:12:09.718\nactually United States is one country and\nthere are 50 states inside of it, and\n\n247\n00:12:09.718 --> 00:12:12.785\nif I wanna drive from\nFlorida to Washington State,\n\n248\n00:12:12.785 --> 00:12:17.563\nI want to drive across the whole country,\nwhere is the tunnel, little roads and\n\n249\n00:12:17.563 --> 00:12:21.473\nthings I need to know, right,\nam I started on Interstate 75.\n\n250\n00:12:21.473 --> 00:12:24.800\nAnd if I want to make a jump to US 41 or\nsomething like that right?\n\n251\n00:12:24.800 --> 00:12:26.480\nAll these different highways.\n\n252\n00:12:26.480 --> 00:12:29.140\nBut what if I looked at\nthat from a bigger picture?\n\n253\n00:12:29.140 --> 00:12:32.400\nAnd I said okay,\nI need to go from Florida to Georgia.\n\n254\n00:12:32.400 --> 00:12:34.350\nI need to go from Georgia to Tennessee.\n\n255\n00:12:34.350 --> 00:12:36.550\nI need to go from there and\njust go state by state.\n\n256\n00:12:36.550 --> 00:12:39.440\nI don't know the little details,\nI just know the states.\n\n257\n00:12:39.440 --> 00:12:43.950\nWell there's only what,15 states\nin between here and Washington?\n\n258\n00:12:43.950 --> 00:12:47.930\nSo, It's much easier to deal with that\nthan knowing all the little roads, and\n\n259\n00:12:47.930 --> 00:12:49.870\nwhere you need to turn, and\nmile markers, and all that.\n\n260\n00:12:49.870 --> 00:12:51.260\nThat's what your routers are doing.\n\n261\n00:12:51.260 --> 00:12:53.710\nThey're saying,\nI don't need to know all the little links,\n\n262\n00:12:53.710 --> 00:12:55.820\nall the little band widths,\nall the little routers.\n\n263\n00:12:55.820 --> 00:12:57.080\nI'll let other people worry about that.\n\n264\n00:12:57.080 --> 00:12:59.250\nI just need to know that big picture.\n\n265\n00:12:59.250 --> 00:13:02.700\nAnd so it's building a path vector.\n\n266\n00:13:02.700 --> 00:13:07.840\nSo when I have that traffic coming from my\nnetwork, going to a network way over here.\n\n267\n00:13:07.840 --> 00:13:13.350\nIt says okay I need to go from\nAS2020 over to AS119 over AS37131.\n\n268\n00:13:13.350 --> 00:13:14.700\nAll right?\n\n269\n00:13:14.700 --> 00:13:17.980\nThat's the path I want to follow as I jump\nacross this network to the other side.\n\n270\n00:13:19.220 --> 00:13:22.070\nAnd then it does something\nreally interesting.\n\n271\n00:13:22.070 --> 00:13:23.300\nIt turns it over to an IGP.\n\n272\n00:13:24.300 --> 00:13:26.300\nBGP doesn't know how to get there.\n\n273\n00:13:26.300 --> 00:13:30.070\nBGP knows the path, but\nit doesn't know how to get there.\n\n274\n00:13:30.070 --> 00:13:35.100\nIt says okay, I'm here in AS 2020,\nand I need to get to AS 119.\n\n275\n00:13:35.100 --> 00:13:38.490\nI have a neighbor that's in AS 119.\n\n276\n00:13:38.490 --> 00:13:41.270\nSo, I'm gonna send that\ntraffic to that neighbor, but\n\n277\n00:13:41.270 --> 00:13:44.180\nI don't know anything else about the rest\nof this journey, I have no clue.\n\n278\n00:13:44.180 --> 00:13:46.390\nAll I know is I've got this\none connection to AS119 and\n\n279\n00:13:46.390 --> 00:13:48.910\nthat's what I wanna take, and that's it.\n\n280\n00:13:48.910 --> 00:13:54.200\nBGP only knows the next hop, it only\nknows that next step on the journey,\n\n281\n00:13:54.200 --> 00:13:57.760\nit doesn't know anything about the journey\nbeyond it other than the fact that the AS\n\n282\n00:13:57.760 --> 00:13:59.770\nit wants to get to is\ndown there somewhere.\n\n283\n00:13:59.770 --> 00:14:00.460\nOkay?\n\n284\n00:14:00.460 --> 00:14:03.910\nSo, BGP is not terribly smart and\nthat's not a bad thing, right?\n\n285\n00:14:03.910 --> 00:14:04.860\nIt sounds insulting, right?\n\n286\n00:14:04.860 --> 00:14:06.280\nBut it's not a bad thing.\n\n287\n00:14:06.280 --> 00:14:07.060\nIt just can't be,\n\n288\n00:14:07.060 --> 00:14:09.880\nit can't afford to be smart because\nthe network is too big, right?\n\n289\n00:14:09.880 --> 00:14:13.400\nA network that big,\nwe just don't have the resources for it.\n\n290\n00:14:13.400 --> 00:14:17.510\nSo, BGP just says look I want to\nmake sure there's no loop, right?\n\n291\n00:14:17.510 --> 00:14:19.190\nAnd how's it know if there's a loop?\n\n292\n00:14:19.190 --> 00:14:20.610\nIt's super simple.\n\n293\n00:14:20.610 --> 00:14:24.268\nIf it sees the same AS\nnumber twice in the path.\n\n294\n00:14:24.268 --> 00:14:27.140\nThere's a loop.I mean it's that simple.\n\n295\n00:14:27.140 --> 00:14:28.836\nIf I have this path right.\n\n296\n00:14:28.836 --> 00:14:35.116\nIt's 20 20 to 119 to 37131, okay.\n\n297\n00:14:35.116 --> 00:14:39.099\nWhat if I loop back like this and\ncame down and over.\n\n298\n00:14:39.099 --> 00:14:41.095\nRight?\nThen it would be 20 20.\n\n299\n00:14:41.095 --> 00:14:46.261\nTo 119 to 37131, to 74,\n\n300\n00:14:46.261 --> 00:14:50.402\nto 199, to 37131.\n\n301\n00:14:50.402 --> 00:14:51.818\nWell, I saw 119 twice.\n\n302\n00:14:51.818 --> 00:14:54.314\nIf I see a number twice, that's a loop.\n\n303\n00:14:54.314 --> 00:14:55.068\nThrow that out.\n\n304\n00:14:55.068 --> 00:14:57.440\nThat simple, right?\n\n305\n00:14:57.440 --> 00:15:02.180\nThat kinda logic doesn't require crazy\nmathematics, doesn't require an algorithm,\n\n306\n00:15:02.180 --> 00:15:05.470\ndoesn't require me building a tree with\nme being the center of the universe.\n\n307\n00:15:05.470 --> 00:15:07.830\nIt doesn't require any of\nthat stuff that IGP has.\n\n308\n00:15:07.830 --> 00:15:13.560\nIt's simply looking for\nthe same AS twice in the same vector.\n\n309\n00:15:13.560 --> 00:15:17.880\nWe'll see in one of the other episodes\nwhere you might have the same as listed\n\n310\n00:15:17.880 --> 00:15:18.900\ntwice in a row.\n\n311\n00:15:18.900 --> 00:15:21.730\nThat's okay,\nif it's twice in a row it's not a loop.\n\n312\n00:15:21.730 --> 00:15:25.280\nBut if it's twice separated, that's\nwhere we start to have a problem, right?\n\n313\n00:15:25.280 --> 00:15:29.738\nSo my example, if I were to take this and\nflesh it out a little bit,\n\n314\n00:15:29.738 --> 00:15:34.297\nwould be, if I had a new path that\nwas something like this, right?\n\n315\n00:15:34.297 --> 00:15:39.360\n2020 to 119 to, and\nlet's just say there was some\n\n316\n00:15:39.360 --> 00:15:44.214\nother network in there,\nlike 1900 and then 74,\n\n317\n00:15:44.214 --> 00:15:48.977\nand then 119, and then that 37131, right?\n\n318\n00:15:48.977 --> 00:15:53.339\nSo if I had a path like that,\nthat's where I can look at it and\n\n319\n00:15:53.339 --> 00:15:56.150\nI can see that duplicate right there.\n\n320\n00:15:56.150 --> 00:15:57.478\nI've got 119 listed here.\n\n321\n00:15:57.478 --> 00:15:59.090\nI've got 119 listed here.\n\n322\n00:15:59.090 --> 00:16:00.134\nI know I've got a loop.\n\n323\n00:16:00.134 --> 00:16:01.331\nI know I shouldn't go that way.\n\n324\n00:16:01.331 --> 00:16:03.130\nThat's what BGP is doing.\n\n325\n00:16:03.130 --> 00:16:04.024\nAt the end of the day.\n\n326\n00:16:04.024 --> 00:16:06.126\nBGP gives us a loop for your routing.\n\n327\n00:16:06.126 --> 00:16:07.821\nNot necessarily optimal.\n\n328\n00:16:07.821 --> 00:16:10.940\nBGP will often times do\nset optimal routing.\n\n329\n00:16:10.940 --> 00:16:15.560\nI might have all ten gig links up across\nthis side here but I don't know it.\n\n330\n00:16:15.560 --> 00:16:19.010\nI might have just gig links down here and\nI pick that route for some other reason.\n\n331\n00:16:19.010 --> 00:16:21.456\nAnd we'll see it in another episode\nall the different reasons that uses\n\n332\n00:16:21.456 --> 00:16:21.994\nto pick a path.\n\n333\n00:16:21.994 --> 00:16:23.132\nAnd it's not one of them.\n\n334\n00:16:23.132 --> 00:16:26.205\nRight.\nThere's 11 different criteria that OSP\n\n335\n00:16:26.205 --> 00:16:28.850\nthat BGP uses when it picks a path.\n\n336\n00:16:28.850 --> 00:16:31.850\nBandwidth is not one, delay is not one.\n\n337\n00:16:31.850 --> 00:16:34.445\nLoad reliability,\nactually reliability is one.\n\n338\n00:16:34.445 --> 00:16:39.240\n[LAUGH] But the other ones here,\nthose are not ones that it picks.\n\n339\n00:16:39.240 --> 00:16:40.380\nIt's looking for loop free.\n\n340\n00:16:40.380 --> 00:16:42.460\nThat's all it cares about, loop free.\n\n341\n00:16:42.460 --> 00:16:43.620\nThat's what it wants to guarantee.\n\n342\n00:16:43.620 --> 00:16:46.520\nSo that's one of the hard\nthings to wrap our minds around\n\n343\n00:16:46.520 --> 00:16:48.600\nbecause we've been dealing with IGPs so\nlong.\n\n344\n00:16:48.600 --> 00:16:51.074\nAnd IGPs are all about\npicking the best path.\n\n345\n00:16:51.074 --> 00:16:54.915\nSo what happens is BGP finds\nthe big path and it says okay,\n\n346\n00:16:54.915 --> 00:16:59.333\nI need to get from AS2020 to AS119,\nthat's my next step.\n\n347\n00:16:59.333 --> 00:17:01.887\nI'm gonna turn this over to an IGP and\nlet them figure it out.\n\n348\n00:17:01.887 --> 00:17:06.247\nAnd in the IGP says, okay,\nwhat's the best way for me to get to 119?\n\n349\n00:17:06.247 --> 00:17:08.980\nAnd it finds the best way because\nthere might be 10 different routes.\n\n350\n00:17:08.980 --> 00:17:11.050\nAnd it'll find the best\none to get there right?\n\n351\n00:17:11.050 --> 00:17:12.510\nThat's what your IGP does for us.\n\n352\n00:17:13.702 --> 00:17:18.394\nAll right so when it comes down to\npath selection a path vector protocol\n\n353\n00:17:18.394 --> 00:17:22.302\nit's really gonna look for\ntypically the shortest path.\n\n354\n00:17:22.302 --> 00:17:25.110\nNot bandwidth, not reliability,\nthat kinda stuff, it's looking for\n\n355\n00:17:25.110 --> 00:17:25.945\nthat shortest path.\n\n356\n00:17:25.945 --> 00:17:30.150\nSo when I come from AS 2020,\nwhat if I have my environment like this?\n\n357\n00:17:30.150 --> 00:17:32.700\nSee I've got one extra AS down here?\n\n358\n00:17:32.700 --> 00:17:39.070\nAcross the top,\nmy path is 2020 to 74 to 37131.\n\n359\n00:17:39.070 --> 00:17:43.428\nAll right?\nAcross the bottom it's 20 20 to 119 to\n\n360\n00:17:43.428 --> 00:17:46.506\n11859 over to 37131.\n\n361\n00:17:46.506 --> 00:17:49.940\nThe top path is just\nthree autonomous systems.\n\n362\n00:17:49.940 --> 00:17:52.520\nThe bottom path is four\nautonomous systems.\n\n363\n00:17:52.520 --> 00:17:54.010\nWhich one's better?\n\n364\n00:17:54.010 --> 00:17:54.810\nThree.\n\n365\n00:17:54.810 --> 00:17:55.560\nIt's kinda like RIP.\n\n366\n00:17:55.560 --> 00:17:57.040\nIt's kinda like hop-count, right?\n\n367\n00:17:57.040 --> 00:17:58.300\nBut these aren't hops.\n\n368\n00:17:58.300 --> 00:18:00.240\nEach autonomous system could have,\n\n369\n00:18:00.240 --> 00:18:01.960\nthere could be 100 routers\nin this autonomous system.\n\n370\n00:18:01.960 --> 00:18:04.890\nThis could be ten hops,\nright here in this one AS.\n\n371\n00:18:04.890 --> 00:18:05.470\nThat doesn't matter.\n\n372\n00:18:05.470 --> 00:18:06.730\nBGP doesn't care.\n\n373\n00:18:06.730 --> 00:18:09.470\nBGP just cares about how\nmany autonomous systems.\n\n374\n00:18:09.470 --> 00:18:12.340\nHow many different companies\ndo I have to get involved,\n\n375\n00:18:12.340 --> 00:18:14.270\nin me getting to my destination?\n\n376\n00:18:14.270 --> 00:18:16.380\nUp here,\nI can get three companies involved.\n\n377\n00:18:16.380 --> 00:18:18.140\nDown here I have to get\nfour companies involved.\n\n378\n00:18:18.140 --> 00:18:19.430\nLet's go with three.\n\n379\n00:18:19.430 --> 00:18:20.940\nLess points of failure, right?\n\n380\n00:18:20.940 --> 00:18:22.190\nLess chance of a loop.\n\n381\n00:18:22.190 --> 00:18:23.520\nIt's shorter, right?\n\n382\n00:18:23.520 --> 00:18:25.510\nIt's shorter so it's got to be faster.\n\n383\n00:18:25.510 --> 00:18:26.760\nNot necessarily, right?\n\n384\n00:18:26.760 --> 00:18:28.720\nSometimes the Internet doesn't\npick something optimal.\n\n385\n00:18:28.720 --> 00:18:30.248\nJust ask anybody in Australia.\n\n386\n00:18:30.248 --> 00:18:31.981\n>> [LAUGH]\n>> If you're in Australia,\n\n387\n00:18:31.981 --> 00:18:33.700\nyou know what I'm talking about, right?\n\n388\n00:18:33.700 --> 00:18:37.050\nThe BGP routes coming out of there\nwill often times pick sub-optimal\n\n389\n00:18:37.050 --> 00:18:39.720\nroutes to get to another country, and\nit's because of the limited lives and\n\n390\n00:18:39.720 --> 00:18:42.910\nthe different ways that you pass,\nthat's just how it is.\n\n391\n00:18:42.910 --> 00:18:45.930\nOne day, maybe things will be different,\nwhen we don't necessarily have cables or\n\n392\n00:18:45.930 --> 00:18:48.540\nwhatever anymore, but for\nnow, that's just how it is.\n\n393\n00:18:48.540 --> 00:18:52.880\nThis is the way the BGP is functioning,\nso different concept, right?\n\n394\n00:18:52.880 --> 00:18:54.350\nI wanted to make sure I\nspent some time on that.\n\n395\n00:18:54.350 --> 00:18:55.700\nI don't wanna sound like\nI'm harping on it, but\n\n396\n00:18:55.700 --> 00:18:58.720\nit is just something that we have to\nkind of get in our heads, all right?\n\n397\n00:18:58.720 --> 00:19:01.580\nNow these autonomous system numbers,\nI made them up, right?\n\n398\n00:19:01.580 --> 00:19:02.670\nThese are just made up by me.\n\n399\n00:19:02.670 --> 00:19:03.380\nIn fact, if we want,\n\n400\n00:19:03.380 --> 00:19:05.860\nthere's a registry on the Internet\nwhere you can look these numbers up.\n\n401\n00:19:05.860 --> 00:19:09.850\nAnd I'm sure some of these, at least,\nbelong to some company out there, right?\n\n402\n00:19:09.850 --> 00:19:13.120\nThese autonomous system\nnumbers they're not fake.\n\n403\n00:19:13.120 --> 00:19:14.140\nThey're real.\n\n404\n00:19:14.140 --> 00:19:16.820\nAnd they have to be registered,\njust like IP addresses, right.\n\n405\n00:19:16.820 --> 00:19:19.290\nIf I want a public IP address,\nwhere do I get it?\n\n406\n00:19:19.290 --> 00:19:21.240\nI have to go and register it.\n\n407\n00:19:21.240 --> 00:19:23.610\nSo here in the United States,\nwe have the ARIN, right.\n\n408\n00:19:23.610 --> 00:19:26.580\nCanada, Mexico,\nall of North America uses ARIN.\n\n409\n00:19:26.580 --> 00:19:29.820\nIn other continents, other countries,\nyou have different registrars.\n\n410\n00:19:29.820 --> 00:19:33.490\nBut you have to go to your number\nregistrar and get an IP address.\n\n411\n00:19:33.490 --> 00:19:37.200\nThat same registrar can issue\nautonomous system numbers.\n\n412\n00:19:37.200 --> 00:19:41.820\nAnd so if you've got a connection that you\nneed to be public IPs to be available for\n\n413\n00:19:41.820 --> 00:19:45.620\nBGP routing, step one is to give\nan autonomous system number.\n\n414\n00:19:45.620 --> 00:19:49.460\nNow, I'll tell you nine times out of ten\nif you think you need an autonomous system\n\n415\n00:19:49.460 --> 00:19:51.120\nnumber you're probably wrong, right?\n\n416\n00:19:51.120 --> 00:19:52.490\nMost of the time you don't.\n\n417\n00:19:52.490 --> 00:19:53.610\nIf you call your ISP.\n\n418\n00:19:54.640 --> 00:19:57.020\nA lot of times, you can just piggy\nback off of theirs and believe me,\n\n419\n00:19:57.020 --> 00:20:00.510\nthat's far easier because they're already\ntaking care of the infrastructure\n\n420\n00:20:00.510 --> 00:20:03.320\nconnecting you to the backbones and\nstuff like that and that's better off.\n\n421\n00:20:03.320 --> 00:20:05.770\nIf you're a small or medium business,\n\n422\n00:20:05.770 --> 00:20:09.230\nit's extremely rare that you'd need\nyour own autonomous system number.\n\n423\n00:20:09.230 --> 00:20:13.030\nIf you're an enterprise, it's extremely\nrare that you'd need an autonomous system\n\n424\n00:20:13.030 --> 00:20:16.230\nnumber but there's a few\nscenarios that pop up, right.\n\n425\n00:20:16.230 --> 00:20:19.760\nIf you only have one connection\nto the Internet, one way in and\n\n426\n00:20:19.760 --> 00:20:22.490\none way out, you never need your\nown autonomous system number.\n\n427\n00:20:22.490 --> 00:20:25.740\nYou can get one if you want to go through\nthe headache, but it's a waste, right.\n\n428\n00:20:25.740 --> 00:20:27.440\nThere's only one way in and one way out.\n\n429\n00:20:27.440 --> 00:20:28.490\nYou're connected to your ISP,\n\n430\n00:20:28.490 --> 00:20:32.310\nthey have an autonomous system number,\nyou just use theirs.\n\n431\n00:20:32.310 --> 00:20:33.020\nRight?\n\n432\n00:20:33.020 --> 00:20:35.320\nYour IP range is probably owned by them.\n\n433\n00:20:35.320 --> 00:20:39.100\nYour public IPs are probably owned by\nyour Internet service provider, and\n\n434\n00:20:39.100 --> 00:20:39.860\nyou're just leasing them.\n\n435\n00:20:40.980 --> 00:20:44.940\nBut if you've actually purchased\nyour own public IP block.\n\n436\n00:20:44.940 --> 00:20:47.380\nMost people don't do this, but you can.\n\n437\n00:20:47.380 --> 00:20:50.790\nIf I purchase my own public IP blocks,\nand I'm not leasing it from an ISP.\n\n438\n00:20:50.790 --> 00:20:52.820\nI have it myself.\n\n439\n00:20:52.820 --> 00:20:55.750\nI might need an autonomous system number.\n\n440\n00:20:55.750 --> 00:20:58.220\nEven then though, most of the time\nI'll just piggyback off of an ISP.\n\n441\n00:20:58.220 --> 00:21:01.320\nHere's when you'll need more, okay?\n\n442\n00:21:01.320 --> 00:21:05.990\nWhat if I have a public IP block and\nI want it to be redundant?\n\n443\n00:21:05.990 --> 00:21:10.540\nSo I go out and I get an Internet\nconnection from AT&T and then I go out and\n\n444\n00:21:10.540 --> 00:21:13.240\nI get another Internet\nconnection from level three.\n\n445\n00:21:13.240 --> 00:21:17.150\ntwo different companies and\nI want the Internet, the world at large,\n\n446\n00:21:17.150 --> 00:21:21.660\nto be able to get to my public IP\nblock via AT&T or via Level 3,\n\n447\n00:21:21.660 --> 00:21:25.280\nvia two different service providers,\nall right?\n\n448\n00:21:25.280 --> 00:21:26.480\nHow do I do that?\n\n449\n00:21:26.480 --> 00:21:28.730\nThe service providers have\ntheir own AS numbers.\n\n450\n00:21:28.730 --> 00:21:32.250\nBut what if two ASs\nadvertise the same network?\n\n451\n00:21:32.250 --> 00:21:33.400\nWell they don't, right?\n\n452\n00:21:33.400 --> 00:21:35.180\nSome traffic will go to one\nsome traffic go to the other,\n\n453\n00:21:35.180 --> 00:21:38.130\nI kind of lose control and\nstuff just doesn't work out right.\n\n454\n00:21:38.130 --> 00:21:42.360\nSo in that scenario,\nI need my own AS number.\n\n455\n00:21:42.360 --> 00:21:46.620\nI need my own AS number so\nthat I can put my IP block in that AS and\n\n456\n00:21:46.620 --> 00:21:49.870\nanybody out on the Internet can look\nit up and see my autonomous system and\n\n457\n00:21:49.870 --> 00:21:53.080\nknow that AT&T is connected to it and\nVerizon is connected.\n\n458\n00:21:53.080 --> 00:21:54.850\nThen I can add other ISPs as we need to.\n\n459\n00:21:54.850 --> 00:21:57.070\nBut, they know that they can get\nto my autonomous system number.\n\n460\n00:21:57.070 --> 00:21:59.330\nThat's when you need an AS number.\n\n461\n00:21:59.330 --> 00:22:02.810\nAnd that's when you go to the ARIN or\nwhoever it is for your country and\n\n462\n00:22:02.810 --> 00:22:04.880\nyou register to get one.\n\n463\n00:22:04.880 --> 00:22:08.032\nNow, under the original standard,\n\n464\n00:22:08.032 --> 00:22:13.023\nthe autonomous system number\nwas just a 16-bit value.\n\n465\n00:22:13.023 --> 00:22:15.485\nSo it was 1 through 65,535.\n\n466\n00:22:15.485 --> 00:22:16.019\nRight.\n\n467\n00:22:16.019 --> 00:22:18.433\nSo that's what you're going\nto see usually on the exam.\n\n468\n00:22:18.433 --> 00:22:21.220\n1 through 65,535.\n\n469\n00:22:21.220 --> 00:22:22.357\nBut they run out.\n\n470\n00:22:22.357 --> 00:22:23.425\nOkay, that's already happened.\n\n471\n00:22:23.425 --> 00:22:25.780\nIt's kind of like the IPv4 addresses,\nright?\n\n472\n00:22:25.780 --> 00:22:29.570\nThere's more than 65,000 ASs out there,\nand so they've run out.\n\n473\n00:22:29.570 --> 00:22:30.370\nWell.\n\n474\n00:22:30.370 --> 00:22:31.480\nIt's not even 65,000.\n\n475\n00:22:31.480 --> 00:22:35.249\nIt's actually one through 64,511.\n\n476\n00:22:35.249 --> 00:22:36.874\nThis is where it starts\nto get a little weird.\n\n477\n00:22:36.874 --> 00:22:40.929\nAt 64,512, they reserve the last\n\n478\n00:22:40.929 --> 00:22:44.990\n10,000 to be-\n>> Private AS's.\n\n479\n00:22:44.990 --> 00:22:48.060\n>> Yeah, oh, I said 10,000,\nI think it's the last 1,000, right?\n\n480\n00:22:48.060 --> 00:22:48.580\n>> Yeah.\n\n481\n00:22:48.580 --> 00:22:50.111\n>> The last 1,000 to be private AS's.\n\n482\n00:22:50.111 --> 00:22:53.246\nSo if you're crazy and you do want\nto do a private BGP install which\n\n483\n00:22:53.246 --> 00:22:55.362\nis pointless except maybe in a lab, right?\n\n484\n00:22:55.362 --> 00:22:56.523\nYou want to learn.\n\n485\n00:22:56.523 --> 00:23:00.994\nYou can use those 64,512 through 65,535.\n\n486\n00:23:00.994 --> 00:23:02.225\nThat last little chunk there.\n\n487\n00:23:02.225 --> 00:23:03.950\nThat's the private ones.\n\n488\n00:23:03.950 --> 00:23:10.360\nBut otherwise, 1 through 64,511 those\nare as far as I know, all registered out.\n\n489\n00:23:11.440 --> 00:23:16.442\nSo they did an RFC and\nthey expanded from a 16-bit to\n\n490\n00:23:16.442 --> 00:23:21.568\na 32-bit number, and\nnow they can have AS numbers.\n\n491\n00:23:21.568 --> 00:23:23.695\nThey go all the way up to 4.3 billion.\n\n492\n00:23:23.695 --> 00:23:25.570\nReally, really big numbers.\n\n493\n00:23:25.570 --> 00:23:26.985\nSo be aware of that.\n\n494\n00:23:26.985 --> 00:23:30.251\nOn the exam, you'll probably\nonly see numbers under 65,000.\n\n495\n00:23:30.251 --> 00:23:32.099\nCisco normally sticks with that,\nand in real life,\n\n496\n00:23:32.099 --> 00:23:34.770\nthat's usually what you're\ndealing with through your ISPs.\n\n497\n00:23:34.770 --> 00:23:38.320\nBut if you go and register an AS number,\nyou'll probably get a big one.\n\n498\n00:23:38.320 --> 00:23:39.890\nSo don't be surprised if\nyou get a big number,\n\n499\n00:23:39.890 --> 00:23:42.280\nsomething higher than what's used to,\nthat's just the new standard.\n\n500\n00:23:42.280 --> 00:23:44.510\nSo be aware of that.\n\n501\n00:23:44.510 --> 00:23:47.580\nLet's see,\nwhat else do I want to mention on this.\n\n502\n00:23:47.580 --> 00:23:49.500\nWhen you see an AS number,\n\n503\n00:23:49.500 --> 00:23:52.560\nit's usually written like what I've\ndone here on this slide, okay.\n\n504\n00:23:52.560 --> 00:23:57.280\nSo where I've got like AS 74,\nAS 37131, and so on.\n\n505\n00:23:57.280 --> 00:24:02.465\nIf it's a 16-bit number the biggest number\nthat you're gonna have is 65,535 so\n\n506\n00:24:02.465 --> 00:24:04.272\nthat's not such a big number.\n\n507\n00:24:04.272 --> 00:24:07.571\nBut when you start going\nto those 32-bit numbers,\n\n508\n00:24:07.571 --> 00:24:12.640\nif you have something that's like 4.3\nbillion, well, that's a big number.\n\n509\n00:24:12.640 --> 00:24:14.390\nThat's a long AS number.\n\n510\n00:24:14.390 --> 00:24:16.880\nAnd so a lot of times they\ndon't write it that way.\n\n511\n00:24:16.880 --> 00:24:19.850\nThey've started writing it\na slightly different way.\n\n512\n00:24:19.850 --> 00:24:21.910\nLet me show you an example here.\n\n513\n00:24:23.030 --> 00:24:26.957\nSo for example, if I had 65,535 right?\n\n514\n00:24:26.957 --> 00:24:28.490\nThat would be my AS number right there.\n\n515\n00:24:28.490 --> 00:24:31.550\nYou know,\nnothing too crazy about that, right?\n\n516\n00:24:31.550 --> 00:24:35.370\nBut as we start going higher than that,\nwe add another bit on,\n\n517\n00:24:35.370 --> 00:24:37.900\nand the number just starts getting\nbigger and bigger and bigger.\n\n518\n00:24:37.900 --> 00:24:41.220\nSo what a lot of people started\ndoing was doing a dot notation.\n\n519\n00:24:41.220 --> 00:24:44.960\nNow when you write an IP address you\nhave four eight-bit octets, right?\n\n520\n00:24:44.960 --> 00:24:49.630\nSo you have like 8bits.8bits.8bits,\nand so on.\n\n521\n00:24:49.630 --> 00:24:51.160\nThis is a terrible way to write it.\n\n522\n00:24:51.160 --> 00:24:54.770\nSo with autonomous system numbers,\nsome people,\n\n523\n00:24:54.770 --> 00:24:58.370\ninstead of writing it as,\nit's called ASPLAIN, right?\n\n524\n00:24:58.370 --> 00:25:01.442\nSo this is, Asplain is how they write it.\n\n525\n00:25:01.442 --> 00:25:03.210\nJust 65535.\n\n526\n00:25:03.210 --> 00:25:06.080\nOr if we started to go even higher\nthan that, to bigger numbers.\n\n527\n00:25:06.080 --> 00:25:10.290\nIt would just get bigger and\nbigger that's Asplain.\n\n528\n00:25:10.290 --> 00:25:12.730\nAnd then there is Asdot.\n\n529\n00:25:12.730 --> 00:25:16.590\nIn Asdot, that same number\nwould be 0.65535 like that.\n\n530\n00:25:16.590 --> 00:25:22.070\nAnd what that is,\nis actually 16 bits.16bits.\n\n531\n00:25:22.070 --> 00:25:27.150\nSo they've divided it up, so\nthat it would actually run\n\n532\n00:25:27.150 --> 00:25:32.782\nfrom 0.1 all the way\nthrough to 65535.65535.\n\n533\n00:25:32.782 --> 00:25:34.570\nThat makes the number\na little more manageable.\n\n534\n00:25:34.570 --> 00:25:37.687\nInstead of writing 4.3 billion,\nand all those commas and\n\n535\n00:25:37.687 --> 00:25:40.328\nother stuff It's just 65535.65535.\n\n536\n00:25:40.328 --> 00:25:43.038\nSo if you register an AS right now,\n\n537\n00:25:43.038 --> 00:25:47.440\nthey've doubled the address\nspace just by going to 1.\n\n538\n00:25:47.440 --> 00:25:52.420\nSo you might get 1.1 -> 1.65535 and\nthey've doubled the address space\n\n539\n00:25:52.420 --> 00:25:57.250\nby that and it becomes easier to write\nwithout going to a gigantic number.\n\n540\n00:25:57.250 --> 00:25:58.890\nSo you might see that notation also.\n\n541\n00:25:58.890 --> 00:26:00.380\nIt's called Asdot.\n\n542\n00:26:00.380 --> 00:26:01.510\nVersus Asplain, right.\n\n543\n00:26:01.510 --> 00:26:04.670\nSo it's not something a lot of\nus will have to worry about, but\n\n544\n00:26:04.670 --> 00:26:07.090\nit is something that's out there.\n\n545\n00:26:07.090 --> 00:26:10.200\nSo those are how the AS numbers\nare kinda created, how they're assigned,\n\n546\n00:26:10.200 --> 00:26:11.820\nwhere you go out and register them.\n\n547\n00:26:11.820 --> 00:26:13.430\nJust be aware of that.\n\n548\n00:26:13.430 --> 00:26:17.450\nThe other thing to be aware of\nis that when we run BGP there's\n\n549\n00:26:17.450 --> 00:26:18.670\nactually two versions of it.\n\n550\n00:26:18.670 --> 00:26:20.719\nThis is where it starts\nto get a little screwy.\n\n551\n00:26:20.719 --> 00:26:26.020\nThere's IBGP and EBGP.\n\n552\n00:26:26.020 --> 00:26:29.770\nEBGP is\nExterior Border Gateway Protocol and\n\n553\n00:26:29.770 --> 00:26:31.180\nit's the one that's running the internet.\n\n554\n00:26:31.180 --> 00:26:34.577\nSo all those autonomous systems out\nthere that are on the internet,\n\n555\n00:26:34.577 --> 00:26:38.342\nthey're all running EBGP to connect\nto each other and share information.\n\n556\n00:26:38.342 --> 00:26:43.200\nIBGP, on the other hand,\nis Interior Border Gateway Protocol.\n\n557\n00:26:43.200 --> 00:26:47.720\nNow, wait a minute right, I got a re,\ninternal border gateway protocol.\n\n558\n00:26:47.720 --> 00:26:50.520\nI said earlier that BGP is\nan Exterior Gateway Protocol,\n\n559\n00:26:50.520 --> 00:26:51.800\nit's not an Interior Gateway Protocol.\n\n560\n00:26:51.800 --> 00:26:54.280\nSo why do we have\nan interior version of BGP?\n\n561\n00:26:54.280 --> 00:26:56.560\nOkay, remember what I\nsaid about these ASs.\n\n562\n00:26:57.730 --> 00:26:59.500\nIn an AS, in an autonomous system,\n\n563\n00:26:59.500 --> 00:27:03.430\nthere might be hundreds of routers and\nthey need to talk to each other.\n\n564\n00:27:03.430 --> 00:27:07.210\nThey need to exchange information right\nthere inside of that autonomous system.\n\n565\n00:27:07.210 --> 00:27:09.060\nSo, what we have is,\n\n566\n00:27:09.060 --> 00:27:13.520\nEBGP runs on routers crossing\nbetween autonomous systems, right?\n\n567\n00:27:13.520 --> 00:27:15.700\nLike ASBRs in OSPF, right?\n\n568\n00:27:15.700 --> 00:27:18.513\nLet's see how many acronyms I can\nthrow into one sentence here.\n\n569\n00:27:18.513 --> 00:27:20.303\nI'll order a BLT after this.\n\n570\n00:27:20.303 --> 00:27:23.224\nSo router one connected router two, those\nare two different autonomous systems.\n\n571\n00:27:23.224 --> 00:27:26.030\nThey're running EBGP, right?\n\n572\n00:27:26.030 --> 00:27:27.750\nBut on the inside,\n\n573\n00:27:27.750 --> 00:27:32.400\nif I had more than one router in here,\nI'd be running IBGP between them.\n\n574\n00:27:32.400 --> 00:27:34.730\nNow, why the differentiation?\n\n575\n00:27:34.730 --> 00:27:39.020\nWell, when I'm running IBGP,\nthat's between routers I own, and\n\n576\n00:27:39.020 --> 00:27:40.530\nI have a lot of control.\n\n577\n00:27:40.530 --> 00:27:43.000\nI can do all sorts of\nstuff to manipulate that.\n\n578\n00:27:43.000 --> 00:27:47.490\nBut when I'm running EBGP,\ncan you control what somebody else does?\n\n579\n00:27:47.490 --> 00:27:49.190\n>> No.\n>> No, it's not your equipment, right?\n\n580\n00:27:49.190 --> 00:27:50.580\nIt's a safety feature.\n\n581\n00:27:50.580 --> 00:27:53.330\nAnd so we can't force that\nother router to do anything.\n\n582\n00:27:53.330 --> 00:27:55.890\nWe can only manipulate our own choices.\n\n583\n00:27:55.890 --> 00:27:59.460\nSo, IBGP, we can manipulate quite a bit.\n\n584\n00:27:59.460 --> 00:28:01.030\nEBGP, not so much.\n\n585\n00:28:01.030 --> 00:28:05.180\nAnd we'll learn there's ways we can\ncreate recommendations in EBGP,\n\n586\n00:28:05.180 --> 00:28:07.810\nwe can recommend an action\nto the other side, but\n\n587\n00:28:07.810 --> 00:28:10.080\nit's up to them at the end of\nthe day to make a decision.\n\n588\n00:28:10.080 --> 00:28:12.500\nAnd they may make a decision\ndifferent than what we want and\n\n589\n00:28:12.500 --> 00:28:14.300\nthere's nothing we can do about it.\n\n590\n00:28:14.300 --> 00:28:18.300\nBecause BGP is all about picking\nthe next hub and that's it.\n\n591\n00:28:18.300 --> 00:28:21.350\nAfter we send the traffic to the next hop,\nit's up to them, they take over,\n\n592\n00:28:21.350 --> 00:28:22.260\nwe're out of the picture.\n\n593\n00:28:22.260 --> 00:28:26.470\nSo it's kind of a weird world\nto get our minds wrapped around.\n\n594\n00:28:26.470 --> 00:28:28.932\nBut that's basically\nthe way that BGP works.\n\n595\n00:28:28.932 --> 00:28:33.440\nAll right, so I know I was little\nlecture heavy on this one, and\n\n596\n00:28:33.440 --> 00:28:36.970\nshowed some diagrams, but we didn't really\ndo any hands on, but it was important\n\n597\n00:28:36.970 --> 00:28:40.530\nbecause I know most of you have not\nbeen exposed to BGP before now.\n\n598\n00:28:40.530 --> 00:28:43.140\nAnd so I wanted to make sure you guys had\na good foundational knowledge of what\n\n599\n00:28:43.140 --> 00:28:46.580\nBGP was, how it functions,\nhow it does what it does.\n\n600\n00:28:46.580 --> 00:28:49.320\nBut in part two,\nI'm going to show you how to set it up.\n\n601\n00:28:49.320 --> 00:28:52.680\nAnd you'll see that setting up\nBGP is really not that hard.\n\n602\n00:28:52.680 --> 00:28:55.880\nWhere it gets hard is when we want to\nmanipulate BGP, that's really hard.\n\n603\n00:28:55.880 --> 00:28:58.240\nBut just getting BGP set up is\nactually pretty straightforward, so\n\n604\n00:28:58.240 --> 00:28:59.259\nwe'll get a chance to see\nthat in the next part.\n\n605\n00:29:00.500 --> 00:29:01.190\n>> All right, Don.\n\n606\n00:29:01.190 --> 00:29:04.350\nIn this particular episode what we\ndid is we took a look at the overall\n\n607\n00:29:04.350 --> 00:29:06.110\ntheory behind BGP.\n\n608\n00:29:06.110 --> 00:29:08.210\nWe talked about why we\nwould choose to use it and\n\n609\n00:29:08.210 --> 00:29:10.540\nwhy we probably don't\nneed to use it as well.\n\n610\n00:29:10.540 --> 00:29:14.365\nAnd then we talked about some the basic\nterminology that we need to be fairly\n\n611\n00:29:14.365 --> 00:29:14.940\nfamiliar with.\n\n612\n00:29:14.940 --> 00:29:18.100\nIf you're like me and you only really\nwork with internal gateway protocols,\n\n613\n00:29:18.100 --> 00:29:21.080\nthis is brand new information for you.\n\n614\n00:29:21.080 --> 00:29:24.950\nAnd that means hey, there's a lot for us\nto also learn as well as we get ready for\n\n615\n00:29:24.950 --> 00:29:26.660\nthe CCNP exam.\n\n616\n00:29:26.660 --> 00:29:28.560\nSo that wraps up our show for now.\n\n617\n00:29:28.560 --> 00:29:29.880\nI've been your host Ronnie Wong.\n\n618\n00:29:29.880 --> 00:29:30.530\n>> And I'm Don Pezet.\n\n619\n00:29:30.530 --> 00:29:33.205\n>> And we'll see you next time.\n\n620\n00:29:33.205 --> 00:29:38.160\n[SOUND]\n\n",
          "vimeoId": "138001720"
        },
        {
          "description": "Interior and exterior BGP have different functions, whereas IGPs are designed for companies and enterprises to handle dynamic routing on a network and have control over things like routers and route manipulation, external BGP relies on other routers to get to a destination, but it can't control them. Viewers will see how to setup a connection to a BGP network, basic BGP configurations, the differences in configuring internal BGP as opposed to external BGP and hear about some of the things one needs to be aware of when it comes to BGP and verifying if it is operating.",
          "length": "1920",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/ccnproute/cisco-ccnproute300101-3-30-border_gateway_protocol_pt.2-090115-1.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/ccnproute/cisco-ccnproute300101-3-30-border_gateway_protocol_pt.2-090115-1-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/ccnproute/cisco-ccnproute300101-3-30-border_gateway_protocol_pt.2-090115-1-sm.jpg",
          "title": "Border Gateway Protocol Part 2",
          "transcript": "WEBVTT\n\n1\n00:00:00.000 --> 00:00:10.550\n[MUSIC].\n\n2\n00:00:10.550 --> 00:00:12.771\nWelcome to another exciting\nepisode here on ITProTV.\n\n3\n00:00:12.771 --> 00:00:17.650\nToday, we're taking a look at CCNP route,\nwe wanna make sure that you\n\n4\n00:00:17.650 --> 00:00:20.510\nunderstand what you're actually gonna\nbe facing as you go into the exam.\n\n5\n00:00:20.510 --> 00:00:23.340\nI'm your host, Ronnie Wong, and\nhere with me today, Mr. Don Pezet.\n\n6\n00:00:23.340 --> 00:00:24.070\nHow's it going?\n\n7\n00:00:24.070 --> 00:00:25.100\n>> It is going great, Ronnie.\n\n8\n00:00:25.100 --> 00:00:26.600\nExcited to be back on the show.\n\n9\n00:00:26.600 --> 00:00:29.100\nWe're diving back into the world of BGP,\n\n10\n00:00:29.100 --> 00:00:33.790\nand in our last episode we got to learn a\nlot about what BGP does and how it works.\n\n11\n00:00:33.790 --> 00:00:37.430\nBut we never actually got to see it\ndo the work that it's supposed to do.\n\n12\n00:00:37.430 --> 00:00:39.400\nSo in this episode,\nwe're gonna take a stab at that.\n\n13\n00:00:39.400 --> 00:00:42.038\nRight, we're gonna see how to\nconfigure BGP and get it up and\n\n14\n00:00:42.038 --> 00:00:44.720\nrunning in a pretty typical environment,\nright.\n\n15\n00:00:44.720 --> 00:00:47.860\nThere can be some really advanced\nBGP configurations out there.\n\n16\n00:00:47.860 --> 00:00:49.510\nWe'll save those for the next episode.\n\n17\n00:00:49.510 --> 00:00:50.350\nBut for right now,\n\n18\n00:00:50.350 --> 00:00:54.640\nwe're gonna tackle what's a pretty\ntypical implementation of BGP.\n\n19\n00:00:54.640 --> 00:00:57.570\nNow I've got a fairly simple topology\nbuilt up, and I want to show you guys\n\n20\n00:00:57.570 --> 00:01:00.130\nmy topology diagram so\nyou can see what we're working with.\n\n21\n00:01:00.130 --> 00:01:02.780\nThis is the topology we've kind of\nbeen using the whole series, right?\n\n22\n00:01:02.780 --> 00:01:04.110\nI've got a headquarters.\n\n23\n00:01:04.110 --> 00:01:06.700\nI've got it linked to branch 1,\nbranch 2, and branch 3.\n\n24\n00:01:06.700 --> 00:01:09.010\nIt's actually linked via\na metro E connection.\n\n25\n00:01:09.010 --> 00:01:10.360\nAnd a frame relay connection.\n\n26\n00:01:10.360 --> 00:01:12.320\nI got a set of frame relay lines\nthat are floating out there.\n\n27\n00:01:12.320 --> 00:01:13.670\nI've just kinda hidden\nthem from this diagram,\n\n28\n00:01:13.670 --> 00:01:15.710\ncuz I'm not gonna use them for right now.\n\n29\n00:01:15.710 --> 00:01:18.240\nAnd then I got a couple of backup\nlines running between headquarters and\n\n30\n00:01:18.240 --> 00:01:19.780\nbranch 1 sitting out there.\n\n31\n00:01:19.780 --> 00:01:24.300\nSo couple of different systems that\nare in place on my local network.\n\n32\n00:01:24.300 --> 00:01:26.140\nRight?\nSo all this stuff over here.\n\n33\n00:01:26.140 --> 00:01:28.440\nThe headquarters routers,\nthe branches, the metro E.\n\n34\n00:01:28.440 --> 00:01:29.960\nThat's all my network.\n\n35\n00:01:29.960 --> 00:01:32.520\nI'm an enterprise,\nI own that, I control it.\n\n36\n00:01:32.520 --> 00:01:35.970\nI might be leasing the metro E, but\nthe routers are all under my control.\n\n37\n00:01:35.970 --> 00:01:37.670\nI can do whatever I want with them.\n\n38\n00:01:37.670 --> 00:01:39.220\nThose are my systems, right?\n\n39\n00:01:39.220 --> 00:01:41.450\nSo, we could call that\nour autonomous system.\n\n40\n00:01:41.450 --> 00:01:46.420\nIf I'm running EIGRP or OSPF,\nthis is my autonomous system, all right?\n\n41\n00:01:46.420 --> 00:01:49.620\nBut I need to set up a data center.\n\n42\n00:01:49.620 --> 00:01:52.360\nAnd my data center's gonna have\nsome public IPs in it, and\n\n43\n00:01:52.360 --> 00:01:57.870\nI want those public IPs to be available to\nthe Internet via more than one path, okay.\n\n44\n00:01:57.870 --> 00:02:00.100\nAnd not just more than one path but\nmore than one ISP.\n\n45\n00:02:00.100 --> 00:02:03.470\nIf I just needed redundancy with one ISP,\nI wouldn't be bothering with BGP.\n\n46\n00:02:03.470 --> 00:02:06.040\nI would just call up my service\nprovider and say, hey, guys.\n\n47\n00:02:06.040 --> 00:02:08.250\nI need two links,\nI aim to be different, right?\n\n48\n00:02:08.250 --> 00:02:10.110\nI need them to be switch neutral.\n\n49\n00:02:10.110 --> 00:02:13.780\nSo, give me one fiber link\nthat runs to one switch and\n\n50\n00:02:13.780 --> 00:02:15.670\ngive me one serial link that\nruns to a different switch.\n\n51\n00:02:15.670 --> 00:02:17.060\nOr something like that, right?\n\n52\n00:02:17.060 --> 00:02:19.420\nAnd they can run those two lines,\nit's all through the same ISP.\n\n53\n00:02:19.420 --> 00:02:21.420\nI don't have to mess with BGP at all.\n\n54\n00:02:21.420 --> 00:02:22.630\nThat's it.\nIt's done, right?\n\n55\n00:02:22.630 --> 00:02:24.220\nThat's the easy way.\n\n56\n00:02:24.220 --> 00:02:28.550\nBut if I want it to be two completely\ndifferent ISPs, how do I tell the world?\n\n57\n00:02:28.550 --> 00:02:31.280\nThe world at large there is two\ndifferent ways to get to my network.\n\n58\n00:02:31.280 --> 00:02:33.180\nAnd we have to do BGP there, right?\n\n59\n00:02:33.180 --> 00:02:34.330\nAnd that's what I've got on my topology.\n\n60\n00:02:34.330 --> 00:02:37.520\nI've got two different ISPs, right,\ninternet service provider 1 and internet\n\n61\n00:02:37.520 --> 00:02:41.390\nservice provider 2, and my head quarters\nrouter is connected to both of them.\n\n62\n00:02:41.390 --> 00:02:45.100\nSo if I have a public network range, and\n\n63\n00:02:45.100 --> 00:02:48.150\nI want it to be available\nout there on the Internet,\n\n64\n00:02:48.150 --> 00:02:52.040\nI need to create an autonomous system and\nconnect it with those guys.\n\n65\n00:02:52.040 --> 00:02:55.700\nSo usually dealing with one ISP, I call\nthem up and tell them what I wanna do.\n\n66\n00:02:55.700 --> 00:02:57.520\nAnd they’ll usually help you\nwith the registration process.\n\n67\n00:02:57.520 --> 00:02:58.940\nOr maybe you’ve just done it on your own.\n\n68\n00:02:58.940 --> 00:03:01.489\nYou’ve reached right up to your registrar,\nan you got assigned an AS number.\n\n69\n00:03:01.489 --> 00:03:03.760\nI’m gonna use AS 65000.\n\n70\n00:03:03.760 --> 00:03:07.050\nOkay, so I got AS number 65000.\n\n71\n00:03:07.050 --> 00:03:09.100\nThen, I call up my service providers,\nand I say,\n\n72\n00:03:09.100 --> 00:03:12.290\nhey, I need to get my AS\nconnected to you guys, right.\n\n73\n00:03:12.290 --> 00:03:14.740\nCan you connect my\nautonomous system to yours?\n\n74\n00:03:14.740 --> 00:03:17.200\nAnd they'll put you in connection\nwith the team that handles that,\n\n75\n00:03:17.200 --> 00:03:19.940\nand they'll walk you through\nthe process of getting it connected.\n\n76\n00:03:19.940 --> 00:03:23.630\nThe key thing to take away here, is you're\nnot gonna do this on your own, right.\n\n77\n00:03:23.630 --> 00:03:27.990\nBGP requires involvement on both ends of\nthe connection, changes on both sides,\n\n78\n00:03:27.990 --> 00:03:29.510\nso you've gotta get them involved,\nalright.\n\n79\n00:03:29.510 --> 00:03:34.390\nIt's not a single person effort,\nnow when you call the ISP,\n\n80\n00:03:34.390 --> 00:03:38.070\nthey're going to tell\nyou who your peers is.\n\n81\n00:03:38.070 --> 00:03:39.420\nBGP is all about peers.\n\n82\n00:03:39.420 --> 00:03:40.180\nYou have neighbors.\n\n83\n00:03:40.180 --> 00:03:41.900\nAnd the neighbors peers\nkind of the same thing.\n\n84\n00:03:41.900 --> 00:03:44.740\nYour peers are the people that\nyou talk to exchange routes with.\n\n85\n00:03:44.740 --> 00:03:46.770\nAnd they'll have a peer on their side.\n\n86\n00:03:46.770 --> 00:03:48.260\nAnd you have a peer on your side.\n\n87\n00:03:48.260 --> 00:03:49.550\nSo I've got my headquarters router.\n\n88\n00:03:49.550 --> 00:03:51.390\nAnd ISP 2 has some router on their side.\n\n89\n00:03:51.390 --> 00:03:54.340\nAnd they'll say,\nhere's the peer you connect to.\n\n90\n00:03:54.340 --> 00:03:57.790\nAnd here's the AS number that\nyou're gonna be connecting to.\n\n91\n00:03:57.790 --> 00:03:59.860\nAnd so we can then go into BGP and\nget it configured.\n\n92\n00:03:59.860 --> 00:04:02.180\nNow if they haven't configured their end,\nit's not gonna work.\n\n93\n00:04:02.180 --> 00:04:05.420\nIt's gotta be configured on both ends,\nand then the routers start talking and\n\n94\n00:04:05.420 --> 00:04:07.210\nexchanging prefixes.\n\n95\n00:04:07.210 --> 00:04:09.055\nAnd prefixes, those are just subnets.\n\n96\n00:04:09.055 --> 00:04:12.463\nRight?\nIf I have 192.168.0.0-24,\n\n97\n00:04:12.463 --> 00:04:15.220\nthe prefix is 192.168 and a zero.\n\n98\n00:04:15.220 --> 00:04:17.200\nAnd that's what we're exchanging, right?\n\n99\n00:04:17.200 --> 00:04:19.910\nSubnets are exchanged too, but\nthe prefix is the key piece.\n\n100\n00:04:19.910 --> 00:04:22.270\nSo in BGP,\nthat's the terminology you'll see.\n\n101\n00:04:22.270 --> 00:04:24.820\nSo exchanging prefixes is kinda important,\nbut\n\n102\n00:04:24.820 --> 00:04:26.750\nwe got to be set up on\nboth sides to do that.\n\n103\n00:04:26.750 --> 00:04:27.380\nRight?\n\n104\n00:04:27.380 --> 00:04:29.580\nAnd at its most simple,\n\n105\n00:04:29.580 --> 00:04:32.470\nit’s really just a matter of\nstatically defining your neighbor.\n\n106\n00:04:32.470 --> 00:04:33.590\nNow, that’s important.\n\n107\n00:04:33.590 --> 00:04:36.500\nThere is no automatic neighbor\ndetection in BGP, all right?\n\n108\n00:04:36.500 --> 00:04:38.990\nBGP does not do discovery.\n\n109\n00:04:38.990 --> 00:04:41.140\nYou always have to statically define,\nright?\n\n110\n00:04:41.140 --> 00:04:44.230\nRemember OSPF,\nwe saw where it’s automatic, but\n\n111\n00:04:44.230 --> 00:04:46.750\nsometimes you can statically\ndefine if you need to.\n\n112\n00:04:46.750 --> 00:04:50.450\nOr EIGRP, it's automatic, but\nsometimes you can statically define.\n\n113\n00:04:50.450 --> 00:04:53.470\nWell, in BGP, you always\nstatically define, no exception,\n\n114\n00:04:53.470 --> 00:04:54.890\nyou always statically define it.\n\n115\n00:04:54.890 --> 00:04:57.330\nAnd so\nthat's gonna be kind of our first step.\n\n116\n00:04:57.330 --> 00:05:00.170\nRight?\nWhat I used to say was the first\n\n117\n00:05:00.170 --> 00:05:02.640\nrule of BGP is nobody talks about BGP.\n\n118\n00:05:02.640 --> 00:05:03.260\nRight?\n>> [LAUGH].\n\n119\n00:05:03.260 --> 00:05:05.100\n>> BGP routers don't advertise themselves.\n\n120\n00:05:05.100 --> 00:05:06.060\nYou've got to connect.\n\n121\n00:05:06.060 --> 00:05:08.610\nAll right, so I'm gonna go to\nmy headquarters router, and\n\n122\n00:05:08.610 --> 00:05:09.390\nI'm gonna get it connected.\n\n123\n00:05:09.390 --> 00:05:10.420\nI'll start with ISP 1.\n\n124\n00:05:10.420 --> 00:05:12.860\nI'm gonna get connected to that guy first.\n\n125\n00:05:12.860 --> 00:05:14.910\nAnd that ISP is sitting there in AS 100.\n\n126\n00:05:14.910 --> 00:05:17.540\nThat's the one that I want to connect to.\n\n127\n00:05:17.540 --> 00:05:18.170\nOkay?\n\n128\n00:05:18.170 --> 00:05:20.600\nSo if I jump over to my\nheadquarters router, actually,\n\n129\n00:05:20.600 --> 00:05:23.400\nlet me start on ISP one cuz I\nneed to find its IP address so,\n\n130\n00:05:23.400 --> 00:05:27.000\nI'm just gonna do a quick show IP\ninterface brief and there we go.\n\n131\n00:05:27.000 --> 00:05:29.230\nThat's the IP I want to connect to,\n204.109.63.1.\n\n132\n00:05:29.230 --> 00:05:34.090\nIn fact, I'm gonna save myself some\nheadache and just copy that, all right?\n\n133\n00:05:34.090 --> 00:05:36.360\nNow, when you call the ISP,\nthey'll tell you the AS number,\n\n134\n00:05:36.360 --> 00:05:39.010\nthey'll tell you the IP address\nthat you need to peer to.\n\n135\n00:05:39.010 --> 00:05:41.610\nAnd now we just need to\nadd it to our router.\n\n136\n00:05:41.610 --> 00:05:43.740\nNow, if I jump over to\nmy headquarter's router.\n\n137\n00:05:43.740 --> 00:05:44.780\nLet me switch over to that guy.\n\n138\n00:05:44.780 --> 00:05:49.440\nAnd I'm just gonna do a show ip protocols,\nall right?\n\n139\n00:05:49.440 --> 00:05:50.490\nI'm not running any.\n\n140\n00:05:50.490 --> 00:05:53.630\nSo I'm not running an IGP, an EGP,\nI'm not running anything, right?\n\n141\n00:05:53.630 --> 00:05:55.700\nIt's just sitting here doing nothing.\n\n142\n00:05:55.700 --> 00:05:58.510\nI'm gonna jump into my configuration and\nI'm gonna turn on BPG.\n\n143\n00:05:59.540 --> 00:06:03.200\nNow when you turn on BGP, you have to\ntell it your autonomous system number.\n\n144\n00:06:03.200 --> 00:06:07.340\nAnd most Cisco routers can only\nbe in one autonomous system.\n\n145\n00:06:07.340 --> 00:06:08.310\nRight, I say most.\n\n146\n00:06:08.310 --> 00:06:11.310\nIf you're running VRF-lite, you can\nstart doing all sorts of crazy stuff.\n\n147\n00:06:11.310 --> 00:06:13.690\nOr full VRF,\nyou can do all sorts of crazy stuff.\n\n148\n00:06:13.690 --> 00:06:16.640\nBut in a normal router,\nyou can only be in one AS.\n\n149\n00:06:16.640 --> 00:06:17.260\nRight?\nSo\n\n150\n00:06:17.260 --> 00:06:21.890\nwe say router bgp followed by\nan autonomous system number.\n\n151\n00:06:21.890 --> 00:06:23.720\nAnd I said, I was gonna do 65000.\n\n152\n00:06:23.720 --> 00:06:24.640\nOkay?\n\n153\n00:06:24.640 --> 00:06:27.770\nWhen I run that,\nit's gonna drop me into my router config.\n\n154\n00:06:27.770 --> 00:06:33.180\nIf I get out and try and run router\nbgp 65001, see how I get that error?\n\n155\n00:06:33.180 --> 00:06:36.400\nIt's only letting me be in\none autonomous system, but\n\n156\n00:06:36.400 --> 00:06:38.440\nif I were put a question mark after it.\n\n157\n00:06:38.440 --> 00:06:42.170\nWell I just get carriage return on this\none cause I don't have any VRF set up, but\n\n158\n00:06:42.170 --> 00:06:45.260\nif I have vrfs you can actually go in\nthere start to define your VRFs and\n\n159\n00:06:45.260 --> 00:06:49.810\nrun more than one instance but,\nin our scenario I'm just doing 65,000.\n\n160\n00:06:49.810 --> 00:06:52.480\nNow I'm running BGP at this point.\n\n161\n00:06:52.480 --> 00:06:55.770\nEven though I havent' configured anything,\nI am running it.\n\n162\n00:06:55.770 --> 00:06:57.990\nIt's not very useful once we\nhave at least one neighbor.\n\n163\n00:06:57.990 --> 00:06:59.420\nSo I'm gonna define a neighbor.\n\n164\n00:06:59.420 --> 00:07:04.280\nThe way we do it is by saying neighbor,\nand then the IP address of that neighbor.\n\n165\n00:07:04.280 --> 00:07:05.750\nSo I'll just punch that in,\n\n166\n00:07:05.750 --> 00:07:10.990\nfollowed by remote dash AS ,and then the\nautonomous system number of the neighbor.\n\n167\n00:07:10.990 --> 00:07:14.710\nRemember in BGP you're peering up\ntypically with somebody in a different\n\n168\n00:07:14.710 --> 00:07:16.020\nAS, right?\n\n169\n00:07:16.020 --> 00:07:16.640\nThis is E-BGP.\n\n170\n00:07:16.640 --> 00:07:17.510\nExterior.\n\n171\n00:07:17.510 --> 00:07:20.250\nSo I'm gonna put in the AS\nnumber of the other side.\n\n172\n00:07:21.290 --> 00:07:24.340\nIf this was I-BGP or interior.\n\n173\n00:07:24.340 --> 00:07:26.180\nThe only difference is I put the same AS.\n\n174\n00:07:26.180 --> 00:07:29.820\nThat's the only difference between\nI-BGP and E-BGP, when you configure it.\n\n175\n00:07:29.820 --> 00:07:30.980\nI'm in BGP 65000.\n\n176\n00:07:30.980 --> 00:07:37.210\nIf I put a neighbor and they were 65000\nalso, it would automatically do iBGP.\n\n177\n00:07:37.210 --> 00:07:41.810\nBut by putting a different AS number,\nit knows that I need E-BGP.\n\n178\n00:07:41.810 --> 00:07:42.500\nOkay?\n\n179\n00:07:42.500 --> 00:07:47.120\nNow assuming that they\nconfigured it on their end also,\n\n180\n00:07:47.120 --> 00:07:49.010\nthen this should go active.\n\n181\n00:07:49.010 --> 00:07:49.789\nOkay, there we go.\nI was starting\n\n182\n00:07:49.789 --> 00:07:52.110\nget a little worried there cuz\nit's normally pretty quick.\n\n183\n00:07:52.110 --> 00:07:52.730\nThen we should see it come up.\n\n184\n00:07:52.730 --> 00:07:57.159\nOn some older IOSs, they don't come up\nautomatically, and what you actually have\n\n185\n00:07:57.159 --> 00:08:01.034\nto do is run neighbor followed by\nthe IP address and then say, activate.\n\n186\n00:08:01.034 --> 00:08:01.893\nAll right?\n\n187\n00:08:01.893 --> 00:08:05.445\nOn some of the older,\nlike, 12.0s and earlier.\n\n188\n00:08:05.445 --> 00:08:07.965\nThose guys,\nyou have to activate it to turn it on.\n\n189\n00:08:07.965 --> 00:08:11.120\nBut in your newer IOSs like the 15s,\nthey automatically run.\n\n190\n00:08:11.120 --> 00:08:12.640\nYou can see mine came up on its own.\n\n191\n00:08:12.640 --> 00:08:14.360\nI'm not gonna do the activate.\n\n192\n00:08:14.360 --> 00:08:16.620\nAll right, so I now have a neighbor.\n\n193\n00:08:16.620 --> 00:08:19.488\nWhat does that look like\nin my configuration?\n\n194\n00:08:19.488 --> 00:08:22.467\nWell, if I take a look\nat my configuration,\n\n195\n00:08:22.467 --> 00:08:24.990\nIt is gonna look a little weird.\n\n196\n00:08:24.990 --> 00:08:29.677\nSo here's what it did, it did router\nBGP 65000, no synchronization,\n\n197\n00:08:29.677 --> 00:08:34.970\nBGP log neighbor changes and here's my\nneighbor statement and no auto-summary.\n\n198\n00:08:34.970 --> 00:08:38.620\nSo it did a couple of commands there,\nthat I didn't put in.\n\n199\n00:08:38.620 --> 00:08:39.925\nWhat do these mean?\n\n200\n00:08:39.925 --> 00:08:43.840\nWell Let me kinda run through some of\nthem, they're pretty straightforward.\n\n201\n00:08:43.840 --> 00:08:45.050\nThe first one, no synchronization.\n\n202\n00:08:46.090 --> 00:08:49.100\nRemember those older routers I was\ntalking about where you had to do like,\n\n203\n00:08:49.100 --> 00:08:50.330\nactivate the neighbor?\n\n204\n00:08:50.330 --> 00:08:53.194\nWell, there was also something they\ndid called BGP synchronization.\n\n205\n00:08:53.194 --> 00:08:56.655\nAnd it It was one of those weird\nfeatures that was, it was a good idea,\n\n206\n00:08:56.655 --> 00:08:59.485\nkinda back in the day, but it outlived\nits purpose and almost everybody\n\n207\n00:08:59.485 --> 00:09:03.425\ndisabled it and so I'm kinda in the habit\nof disabling that when I configure it.\n\n208\n00:09:03.425 --> 00:09:06.902\nBut you don't have to anymore because\nCisco disables it by default.\n\n209\n00:09:06.902 --> 00:09:12.822\nThe way it worked was, there used to be a\nrule that said for iBGP, for interior, you\n\n210\n00:09:12.822 --> 00:09:19.212\nwould not advertise a route to a neighbor\nunless you knew about it in your IGP also.\n\n211\n00:09:19.212 --> 00:09:20.212\nIn other words,\n\n212\n00:09:20.212 --> 00:09:25.470\na BGP route was only valid if there\nwas a corresponding IGP route for it.\n\n213\n00:09:25.470 --> 00:09:29.710\nAnd I mentioned it in another episode,\nBGP figures out the path to take,\n\n214\n00:09:29.710 --> 00:09:32.340\nand then it turns it over\nto an IGP to handle it.\n\n215\n00:09:32.340 --> 00:09:35.840\nWell if the IGP doesn't have a route to\nget to the gateway, what's it going to do?\n\n216\n00:09:35.840 --> 00:09:38.210\nThe route's dead, right, so\nthere's no point in handing it off.\n\n217\n00:09:38.210 --> 00:09:41.790\nSo, synchronization would basically say,\ndon't let that in unless there's\n\n218\n00:09:41.790 --> 00:09:45.250\na synchronized route with it, and\nthat was the default for a long time.\n\n219\n00:09:45.250 --> 00:09:47.210\nIt’s off now, and\n\n220\n00:09:47.210 --> 00:09:52.200\nthe reason is, we typically have full\nmesh BGP, we’ll see this later on.\n\n221\n00:09:52.200 --> 00:09:55.570\nBut with full mesh BGP,\nall the routers know about each other, and\n\n222\n00:09:55.570 --> 00:09:57.160\nthey know the way to get in and\nout of the network.\n\n223\n00:09:57.160 --> 00:09:59.650\nSo it doesn’t really matter\nif we’re synchronized or not.\n\n224\n00:09:59.650 --> 00:10:03.680\nAnd in the old days, you would do\npartial meshes, or point-to-point links,\n\n225\n00:10:03.680 --> 00:10:05.630\ncuz networks were a lot more\nexpensive back then, right?\n\n226\n00:10:05.630 --> 00:10:08.920\nWe were talking about like T1 lines,\ndedicated point-to-point lines,\n\n227\n00:10:08.920 --> 00:10:10.020\nthey were expensive.\n\n228\n00:10:10.020 --> 00:10:14.650\nBut now most people have MPLS,\nwhere a full mesh\n\n229\n00:10:14.650 --> 00:10:18.060\nversus point to point is the same exact\ncost, cuz they're just virtual circuits.\n\n230\n00:10:18.060 --> 00:10:21.320\nAnd so in these full mesh environments,\nyou don't need synchronization, and so\n\n231\n00:10:21.320 --> 00:10:22.180\nit is off by default.\n\n232\n00:10:22.180 --> 00:10:23.160\nThat's what that line is.\n\n233\n00:10:23.160 --> 00:10:24.510\nAnd you can turn it back\non if you want it, but\n\n234\n00:10:24.510 --> 00:10:26.620\nthere's really not a lot of need for that.\n\n235\n00:10:26.620 --> 00:10:31.030\nBGP log neighbor changes,whoops\n[LAUGH] sorry, screw up things here.\n\n236\n00:10:31.030 --> 00:10:35.830\nBGP log neighbor changes, that's just\nbasically stating if a neighbor goes down,\n\n237\n00:10:35.830 --> 00:10:39.360\nor goes up, I'll create a log message for\nit, we want to see that.\n\n238\n00:10:39.360 --> 00:10:41.780\nThe neighbor statement, I typed that one,\nyou guys know that one.\n\n239\n00:10:41.780 --> 00:10:44.050\nAnd the no auto-summary,\nthat's kind of a neat one.\n\n240\n00:10:44.050 --> 00:10:45.980\nBGP does route summarization.\n\n241\n00:10:45.980 --> 00:10:47.320\nAnd it does it automatically.\n\n242\n00:10:47.320 --> 00:10:51.560\nSo it's turned off by default, but\nyou can turn it on if you want.\n\n243\n00:10:51.560 --> 00:10:53.250\nSo those are some of the default commands.\n\n244\n00:10:53.250 --> 00:10:54.670\nBut at this point, I'm running BGP.\n\n245\n00:10:54.670 --> 00:10:56.650\nNow, how do I know?\n\n246\n00:10:56.650 --> 00:10:58.560\nWhat looks different on my system?\n\n247\n00:10:58.560 --> 00:11:02.730\nIf I do a show IP protocols,\nI can see it right here.\n\n248\n00:11:02.730 --> 00:11:06.330\nI'm running BGP for\nautonomous system 65000.\n\n249\n00:11:06.330 --> 00:11:10.528\nAnd I can see I don't have any filters,\nIGP synchronization is disabled.\n\n250\n00:11:10.528 --> 00:11:15.220\nHere's my neighbors, I got this one\nneighbor right now, and that's my gateway.\n\n251\n00:11:15.220 --> 00:11:17.730\nIt's got an administrative distance of 20,\nright?\n\n252\n00:11:17.730 --> 00:11:21.750\nBGP routes, EBGP have\nan administrative distance of 20.\n\n253\n00:11:21.750 --> 00:11:26.359\nIBGP routes have an administrative\ndistance of 170.\n\n254\n00:11:26.359 --> 00:11:27.394\nHuge, right?\n\n255\n00:11:27.394 --> 00:11:28.830\nHigh administrative distance.\n\n256\n00:11:28.830 --> 00:11:31.080\nWe do not trust IBGP routes.\n\n257\n00:11:31.080 --> 00:11:32.530\nNow, why is that?\n\n258\n00:11:32.530 --> 00:11:33.990\nWhy wouldn't we trust those?\n\n259\n00:11:33.990 --> 00:11:36.390\nWell, we should be learning\nthose routes from our IGP, and\n\n260\n00:11:36.390 --> 00:11:39.260\nthe IGP is going to have\na much lower admin distance.\n\n261\n00:11:39.260 --> 00:11:41.220\nWe'll trust those over IBGP.\n\n262\n00:11:41.220 --> 00:11:43.390\nBecause IBGP, remember, it's path vector.\n\n263\n00:11:43.390 --> 00:11:48.200\nIt's just making a guess based on path,\nbut your IGP, if you're running OSPF or\n\n264\n00:11:48.200 --> 00:11:50.420\nEIGRP, they're looking at bandwidth,\ndelay,\n\n265\n00:11:50.420 --> 00:11:52.810\ncost, it's a much more accurate number.\n\n266\n00:11:52.810 --> 00:11:56.520\nSo we would rather have those,\nthan our own IBGP stuff.\n\n267\n00:11:56.520 --> 00:12:00.610\nBut with EBGP, we don't have\nan IGP connecting to our partner.\n\n268\n00:12:00.610 --> 00:12:03.610\nYou don't run OSPF to connect to your ISP.\n\n269\n00:12:03.610 --> 00:12:05.790\nOr to connect to networks around\nthe world you don't do it.\n\n270\n00:12:05.790 --> 00:12:10.560\nSo all we have is BGP, so\nwe'll prefer that over our internal stuff.\n\n271\n00:12:10.560 --> 00:12:13.400\nSo that's why it has\nan ambient distance of 20.\n\n272\n00:12:13.400 --> 00:12:15.680\nSo I can see that,\nI've got the information.\n\n273\n00:12:15.680 --> 00:12:20.720\nAnd if I do a show IP route,\nassuming I'm connected to the ISP right,\n\n274\n00:12:20.720 --> 00:12:22.760\nI should be learning some routes,\nand there we go.\n\n275\n00:12:22.760 --> 00:12:25.290\nI can see some BGP routes,\nwhoops, making it in.\n\n276\n00:12:25.290 --> 00:12:27.295\nSorry, I keep pulling up my\nlittle connection window.\n\n277\n00:12:27.295 --> 00:12:28.170\n>> [LAUGH]\n>> So\n\n278\n00:12:28.170 --> 00:12:32.170\nhere's all these routes that\nI'm learning from my provider.\n\n279\n00:12:32.170 --> 00:12:34.860\nNow are those a lot of routes, sure.\n\n280\n00:12:34.860 --> 00:12:37.360\nIf you're pulling a full routing table,\nyou're gonna see a ton of stuff.\n\n281\n00:12:37.360 --> 00:12:39.910\nI have purposefully not summarized these.\n\n282\n00:12:39.910 --> 00:12:41.790\nIn real life land,\nthese would get summarized and\n\n283\n00:12:41.790 --> 00:12:43.230\nthe table would be much smaller.\n\n284\n00:12:43.230 --> 00:12:46.420\nWhen you have 560,000 routes, it's\npretty inclusive of the whole world, but\n\n285\n00:12:46.420 --> 00:12:48.010\nit's got to be summarized down.\n\n286\n00:12:48.010 --> 00:12:50.450\nThis I left it so\nI would have a nice big table.\n\n287\n00:12:50.450 --> 00:12:52.820\nSo I can see all these\nBGP routes coming in.\n\n288\n00:12:52.820 --> 00:12:58.596\nThey've all got that admin distance of\n20 and look at that, all symmetric zero.\n\n289\n00:12:58.596 --> 00:13:03.440\nI am going to say something, and it gets\nconfusing, but BGP does not have a metric.\n\n290\n00:13:03.440 --> 00:13:07.780\nNow, I say that because you'll see this\nvalue as zero, that's just how it is.\n\n291\n00:13:07.780 --> 00:13:11.070\nBut we're going to learn later on about\na BGP metric that we can configure.\n\n292\n00:13:12.070 --> 00:13:14.410\nI just said it doesn't have a metric,\nso what the heck is that all about?\n\n293\n00:13:14.410 --> 00:13:18.290\nThere's a special metric, called a MED,\nright, a multi-exit discriminator,\n\n294\n00:13:18.290 --> 00:13:22.890\nthat we can use, and the MED is used for\ninternal decisions only.\n\n295\n00:13:22.890 --> 00:13:28.042\nWhen external BGP exchanges routes,\nthere is no metric, there's just the path.\n\n296\n00:13:28.042 --> 00:13:32.140\nWe're a path vector, the path is the\nmetric, so this value is going to be zero,\n\n297\n00:13:32.140 --> 00:13:32.920\nis going to be empty.\n\n298\n00:13:32.920 --> 00:13:35.870\nAnd if we want to manipulate our\npreferences, we really manipulate\n\n299\n00:13:35.870 --> 00:13:39.620\nthe path, not some arbitrary value like\nthis cuz anything like that that we\n\n300\n00:13:39.620 --> 00:13:42.430\nmodify, any arbitrary value,\nwe can't hand that off to a neighbor.\n\n301\n00:13:42.430 --> 00:13:44.330\nBut a modified path, we can.\n\n302\n00:13:44.330 --> 00:13:45.830\nSo that's the one that we target.\n\n303\n00:13:45.830 --> 00:13:47.760\nYou don't see the path here though.\n\n304\n00:13:47.760 --> 00:13:51.590\nSo show IP route is not\nterribly useful with BGP.\n\n305\n00:13:51.590 --> 00:13:53.100\nIn fact, I don't even normally run it.\n\n306\n00:13:53.100 --> 00:13:55.990\nIt's kind of here to show a point,\nbut in real life land,\n\n307\n00:13:55.990 --> 00:13:59.730\nif I want to see that BGP is running\nthat's not my go to command.\n\n308\n00:13:59.730 --> 00:14:02.620\nInstead, there's show,\nwell there's a couple\n\n309\n00:14:02.620 --> 00:14:05.580\nof different commands that we can run,\nthey're all kinda have their purposes.\n\n310\n00:14:05.580 --> 00:14:12.870\nSo for example show IP BGP summary,\nthis one shows me my neighbors.\n\n311\n00:14:12.870 --> 00:14:17.540\nShow IP BGP summary it's kind of like\nlooking at your show IP OSPF neighbor, or\n\n312\n00:14:17.540 --> 00:14:19.580\nshow IP EIRGP neighbor.\n\n313\n00:14:19.580 --> 00:14:22.660\nI can see that I've got a neighbor and\nI'm connected.\n\n314\n00:14:22.660 --> 00:14:26.050\nAnd more importantly,\nI can see right here, prefixes received.\n\n315\n00:14:26.050 --> 00:14:29.310\nI've received 84 networks\nfrom my neighbor.\n\n316\n00:14:29.310 --> 00:14:32.110\nThat's a lot, so\nI know that I'm getting stuff.\n\n317\n00:14:32.110 --> 00:14:35.370\nAnd I've sent 10 messages and received 12,\n\n318\n00:14:35.370 --> 00:14:38.360\nso I know I'm talking both\nways with that neighbor.\n\n319\n00:14:38.360 --> 00:14:39.850\nI can see that right from here.\n\n320\n00:14:39.850 --> 00:14:44.630\nSo show IP BGP summary, great way\nto quickly verify that you see your\n\n321\n00:14:44.630 --> 00:14:46.580\nneighbors, that they're up and\nthat they're healthy.\n\n322\n00:14:46.580 --> 00:14:49.980\nOkay, so that's one good way to do that.\n\n323\n00:14:49.980 --> 00:14:53.650\nAnother command, though,\nis just straight up show IP BGP.\n\n324\n00:14:54.900 --> 00:14:57.260\nAnd this is more useful\nthan show IP route.\n\n325\n00:14:57.260 --> 00:15:00.520\nAll right Show IP route,\nyeah it shows you some BGP routes,\n\n326\n00:15:00.520 --> 00:15:02.820\nthat's great, but\nit doesn't show you the path.\n\n327\n00:15:02.820 --> 00:15:07.470\nIf you do show IP BGP,\nyou just see BGP routes.\n\n328\n00:15:07.470 --> 00:15:10.340\nYou see the routes that made\nit into the routing table, and\n\n329\n00:15:10.340 --> 00:15:12.730\nyou see the routes that didn't\nmake it into the routing table.\n\n330\n00:15:12.730 --> 00:15:15.420\nSo now you can get an idea of whether\nthe routes are making it, and\n\n331\n00:15:15.420 --> 00:15:17.430\nyou can see a lot more.\n\n332\n00:15:18.470 --> 00:15:23.180\nI can see things like the network\nthat I'm learning, the next hop,\n\n333\n00:15:23.180 --> 00:15:24.210\nwho it is I'm gonna reach out to.\n\n334\n00:15:24.210 --> 00:15:25.570\nSee how these are all going to my ISP.\n\n335\n00:15:25.570 --> 00:15:29.700\nI can see the metric, which is that\nMED value I mentioned earlier.\n\n336\n00:15:29.700 --> 00:15:32.250\nWe'll learn about it in the next episode.\n\n337\n00:15:32.250 --> 00:15:34.510\nThen there is local preference and weight.\n\n338\n00:15:34.510 --> 00:15:38.050\nLocal preference and weight are two\nways that we can influence path decision\n\n339\n00:15:38.050 --> 00:15:40.040\ninside our own autonomous system.\n\n340\n00:15:40.040 --> 00:15:42.580\nThese have no bearing once we're\noutside of our autonomous system,\n\n341\n00:15:42.580 --> 00:15:46.730\nbut in our AS,\nwe can use those to manipulate things.\n\n342\n00:15:46.730 --> 00:15:49.520\nAnd then the path,\nnotice how the 5.5.5.5 network here,\n\n343\n00:15:49.520 --> 00:15:51.255\nI can get to it just by going to AS100.\n\n344\n00:15:51.255 --> 00:15:58.095\nBut the 6.6.6.6 I have to go to AS 100 and\nthen to AS 200.\n\n345\n00:15:58.095 --> 00:16:00.695\nIt's two autonomous systems away.\n\n346\n00:16:00.695 --> 00:16:05.154\nGoing back to my diagram,\nHeadquarters would have to go to AS 100.\n\n347\n00:16:05.154 --> 00:16:09.570\nAnd then it is somehow connected to\nAS 200, to get up to the other side.\n\n348\n00:16:09.570 --> 00:16:12.400\nAnd so that's the path I would\nhave to follow to get there.\n\n349\n00:16:12.400 --> 00:16:16.060\nI'm not connected to ISP 2 yet, so\nthat's why I'm not seeing a direct route.\n\n350\n00:16:16.060 --> 00:16:18.030\nSo I'm seeing that I have to pass there.\n\n351\n00:16:18.030 --> 00:16:20.580\nNow notice how there's a question\nmark at the end of every one?\n\n352\n00:16:20.580 --> 00:16:21.900\nWhat's that all about?\n\n353\n00:16:21.900 --> 00:16:24.480\nWell, it means that the routing\ninformation's incomplete, alright.\n\n354\n00:16:24.480 --> 00:16:28.500\nIt means that I don't actually\nknow where this route came from.\n\n355\n00:16:28.500 --> 00:16:31.060\nIf I wanna get to the route,\nI know I can go to AS100.\n\n356\n00:16:32.090 --> 00:16:33.470\nAnd it can connect us to AS200.\n\n357\n00:16:33.470 --> 00:16:36.550\nBut then it gets a little fuzzy, right?\n\n358\n00:16:36.550 --> 00:16:38.890\nHow does AS200 know how to get there?\n\n359\n00:16:38.890 --> 00:16:40.190\nI don't know.\n\n360\n00:16:40.190 --> 00:16:44.810\nThe odds are that in AS200 that\ncertifier has a router that's connected\n\n361\n00:16:44.810 --> 00:16:49.510\ndirectly to the network I'm trying to get\nto, and they've redistributed it into BGP.\n\n362\n00:16:49.510 --> 00:16:53.450\nIf they redistributed it into BGP,\nI don't know where it came from.\n\n363\n00:16:53.450 --> 00:16:56.200\nDid it come from OSPF, EIGRP, RIP?\n\n364\n00:16:56.200 --> 00:16:57.680\nI don't know, this could be a good route.\n\n365\n00:16:57.680 --> 00:17:00.160\nIt could be a garbage route, I don't know.\n\n366\n00:17:00.160 --> 00:17:01.890\nSo that's why it gets a question mark.\n\n367\n00:17:01.890 --> 00:17:03.760\nI can also see an I there.\n\n368\n00:17:03.760 --> 00:17:07.660\nAn I would mean that it came from IBGP,\nlike it was directly advertising IBGP.\n\n369\n00:17:07.660 --> 00:17:09.340\nThat's a little more trustworthy.\n\n370\n00:17:09.340 --> 00:17:11.200\nNow I know how it got there, right.\n\n371\n00:17:11.200 --> 00:17:15.710\nSo that's just basically telling me, some\nkind of interior protocol happened here,\n\n372\n00:17:15.710 --> 00:17:16.720\nand I don't know what it is.\n\n373\n00:17:16.720 --> 00:17:18.130\nDon't worry about that.\n\n374\n00:17:18.130 --> 00:17:20.890\nExpect to see it, you're gonna see\nthat a lot when you deal with BGP.\n\n375\n00:17:20.890 --> 00:17:22.660\nYou'll see those question marks a ton.\n\n376\n00:17:22.660 --> 00:17:25.370\nIt's just letting you know that things\nget a little fuzzy past that point.\n\n377\n00:17:25.370 --> 00:17:27.468\nBut this is definitely the right\nautonomous system for us, okay.\n\n378\n00:17:28.690 --> 00:17:30.360\nSo those paths are listed here.\n\n379\n00:17:30.360 --> 00:17:33.860\nNow on the left side notice the star and\nthe greater than symbol, okay.\n\n380\n00:17:33.860 --> 00:17:35.690\nThe star.\n\n381\n00:17:35.690 --> 00:17:36.870\nThe stars just mean, a valid route.\n\n382\n00:17:36.870 --> 00:17:38.548\nNow, what is a valid route?\n\n383\n00:17:38.548 --> 00:17:43.563\nWell, I learned that I can get\nto the 116.17.91.0 network.\n\n384\n00:17:43.563 --> 00:17:44.174\nOkay?\n\n385\n00:17:44.174 --> 00:17:46.180\nThat's a valid network.\n\n386\n00:17:46.180 --> 00:17:47.690\nBut can I get to it?\n\n387\n00:17:47.690 --> 00:17:50.550\nWho's the next hop?\n\n388\n00:17:50.550 --> 00:17:52.070\nThe next hop is 204.109.63.1.\n\n389\n00:17:52.070 --> 00:17:55.606\nCan I get to 204.109.63.1?\n\n390\n00:17:55.606 --> 00:17:58.950\nMaybe.\nIf I can, it's a valid route, right?\n\n391\n00:17:58.950 --> 00:18:01.340\nDo I have a route to get to this network?\n\n392\n00:18:01.340 --> 00:18:03.550\nWell, my router is directly\nplugged into that network.\n\n393\n00:18:03.550 --> 00:18:05.030\nSo yes, it's gonna get it.\n\n394\n00:18:05.030 --> 00:18:07.820\nBut what if I didn't have\na route to get there?\n\n395\n00:18:07.820 --> 00:18:12.190\nIf I can't get to the next hop, I can't\nget to this route, the route is invalid.\n\n396\n00:18:12.190 --> 00:18:15.560\nAnd so instead of seeing that star there,\nI'll just see a blank.\n\n397\n00:18:15.560 --> 00:18:18.130\nAnd that'll let me know great, I learned\nthe route but it's worthless to me.\n\n398\n00:18:18.130 --> 00:18:20.080\nI can't use it, alright.\n\n399\n00:18:20.080 --> 00:18:23.460\nThe greater than symbol\nmeans it's the best.\n\n400\n00:18:23.460 --> 00:18:27.160\nIf I learn more than one route\nto the same destination.\n\n401\n00:18:27.160 --> 00:18:28.290\nOne's better than the other.\n\n402\n00:18:28.290 --> 00:18:31.350\nThe best one will have that bracket,\nand that's the one that I'm gonna pick.\n\n403\n00:18:31.350 --> 00:18:32.340\nOkay.\n\n404\n00:18:32.340 --> 00:18:35.460\nAnd it's that one with the bracket\nthat's normally gonna get installed\n\n405\n00:18:35.460 --> 00:18:36.570\ninto the routing table.\n\n406\n00:18:36.570 --> 00:18:38.630\nMost of these are installed\nin my routing table.\n\n407\n00:18:38.630 --> 00:18:44.134\nBut if I keep scrolling, I'll find\na couple like these two right here.\n\n408\n00:18:45.265 --> 00:18:48.805\nWhere instead of an asterisk,\nthey have an R.\n\n409\n00:18:48.805 --> 00:18:52.555\nAn R means this route was not\ninstalled in the routing table.\n\n410\n00:18:52.555 --> 00:18:54.905\nThis is what's called a rib failure.\n\n411\n00:18:54.905 --> 00:18:57.575\nYou have a routing information based,\nthe rib, and\n\n412\n00:18:57.575 --> 00:19:01.655\nit's like the database on the back-end,\nwhat actually builds the routing table.\n\n413\n00:19:01.655 --> 00:19:03.050\nAnd there was a failure.\n\n414\n00:19:03.050 --> 00:19:06.590\nThere was a failure injecting this\nroute in to the routing table.\n\n415\n00:19:06.590 --> 00:19:10.480\nNow that tells me it's not in the routeing\ntable, that's great, but why?\n\n416\n00:19:10.480 --> 00:19:12.100\nI don't know why.\n\n417\n00:19:12.100 --> 00:19:12.860\nI just know it failed.\n\n418\n00:19:12.860 --> 00:19:14.270\nRight.\nThere is an R.\n\n419\n00:19:14.270 --> 00:19:17.890\nWell we've got a neat little command, we\ncan run that will tell us why it failed.\n\n420\n00:19:17.890 --> 00:19:18.520\nAll right.\n\n421\n00:19:18.520 --> 00:19:22.671\nAnd that's show ip bgp rib-failure.\n\n422\n00:19:22.671 --> 00:19:27.480\nRib-failure will list all the routes that\nfailed to make it into the routing table\n\n423\n00:19:27.480 --> 00:19:30.150\ndue to rib failure, and\nit'll tell you why.\n\n424\n00:19:30.150 --> 00:19:33.920\nSo here's the routes, here's the next hop,\nand here's why they failed.\n\n425\n00:19:33.920 --> 00:19:35.520\nHigher admin distance.\n\n426\n00:19:35.520 --> 00:19:38.440\nThat means there's already a route\nin the routing table that has\n\n427\n00:19:38.440 --> 00:19:39.880\na better admin distance.\n\n428\n00:19:39.880 --> 00:19:44.240\nWell I learned these though EBGP, that\nmeans they have an admin distance of 20.\n\n429\n00:19:44.240 --> 00:19:46.640\nWhat could beat 20 that's\na really low number?\n\n430\n00:19:46.640 --> 00:19:48.320\nDirectly connected right.\n\n431\n00:19:48.320 --> 00:19:51.497\nIf I do a show IP route, and\n\n432\n00:19:51.497 --> 00:19:59.190\nI filter that down to the 181.7.31, right?\n\n433\n00:19:59.190 --> 00:20:00.730\nThere it is, directly connected.\n\n434\n00:20:00.730 --> 00:20:03.730\nWhat's the admin distance on\na directly connected route?\n\n435\n00:20:03.730 --> 00:20:05.130\nZero.\n\n436\n00:20:05.130 --> 00:20:07.590\nZero is better than 20, so\nthat's the one that's preferred.\n\n437\n00:20:07.590 --> 00:20:09.940\nSo, while this was the best route, right.\n\n438\n00:20:09.940 --> 00:20:12.270\nIf I scroll back up to where it was,\n\n439\n00:20:12.270 --> 00:20:16.000\nhere, see how it does have\nthe greater than symbol on it?\n\n440\n00:20:16.000 --> 00:20:19.300\nRight?\nIt's the best route as far as BGP knows.\n\n441\n00:20:19.300 --> 00:20:21.660\nBut my routing table knows something\nbetter so it failed to make it in.\n\n442\n00:20:21.660 --> 00:20:26.250\nSo show ip bgp rib-failure,\nreally useful command.\n\n443\n00:20:26.250 --> 00:20:28.300\nYou'll spot these kind\nof failures like that.\n\n444\n00:20:28.300 --> 00:20:29.890\nPretty easy, okay?\n\n445\n00:20:29.890 --> 00:20:33.060\nSo right here I can verify that I'm up,\nI'm running.\n\n446\n00:20:33.060 --> 00:20:35.160\nThings seem to be going pretty well.\n\n447\n00:20:35.160 --> 00:20:36.790\nThat's cool, right?\n\n448\n00:20:36.790 --> 00:20:39.470\nWell we can get a little more advanced\nwith this, we can do some other things.\n\n449\n00:20:39.470 --> 00:20:43.110\nLet me bring some more\ncomplexity into this, right?\n\n450\n00:20:43.110 --> 00:20:46.510\nI'm only connected to one other\nautonomous system right now.\n\n451\n00:20:46.510 --> 00:20:47.990\nWhat if I connect to another one, right?\n\n452\n00:20:47.990 --> 00:20:52.910\nSo if I jump back and do router bgp 65000.\n\n453\n00:20:52.910 --> 00:20:54.530\nSo I did one neighbor, right?\n\n454\n00:20:54.530 --> 00:20:57.170\nRight here, this is my neighbor\nthat connected me to AS100.\n\n455\n00:20:57.170 --> 00:21:00.060\nI can now connect to AS200 also, right?\n\n456\n00:21:00.060 --> 00:21:03.480\nI do need to know the IP address\nof that router to connect to.\n\n457\n00:21:03.480 --> 00:21:08.750\nWhich, let me jump over to ISP2,\nand check out its IP's.\n\n458\n00:21:08.750 --> 00:21:12.110\nIt's going to be this IP right here,\nso I'm going to take that one.\n\n459\n00:21:13.250 --> 00:21:14.980\nAnd jump back to my headquarters.\n\n460\n00:21:14.980 --> 00:21:18.620\nAnd so\nI'm going to connect to AS200 this time.\n\n461\n00:21:18.620 --> 00:21:22.410\nNow we saw some paths earlier\nwhere it said to get to a network,\n\n462\n00:21:22.410 --> 00:21:24.780\nI had to go to AS100 first then AS200.\n\n463\n00:21:24.780 --> 00:21:26.520\nWhen I connect to AS200,\n\n464\n00:21:26.520 --> 00:21:32.730\nI should start getting those same networks\nand know that now I can skip AS100.\n\n465\n00:21:32.730 --> 00:21:36.130\nI just go straight to AS200 and\nbe done with it, all right?\n\n466\n00:21:36.130 --> 00:21:37.870\nAnd so that just came up.\n\n467\n00:21:37.870 --> 00:21:45.260\nAnd if I do a show IP BGP, now, see I'm\nstarting to learn duplicate routes.\n\n468\n00:21:45.260 --> 00:21:48.480\nI'm learning that I can get to these\nnetworks via ISP one and via ISP two.\n\n469\n00:21:48.480 --> 00:21:50.110\nAnd this is what you would\nexpect in real life.\n\n470\n00:21:50.110 --> 00:21:53.880\nIn real life land, when you connect to two\nISPs, you're gonna learn a lot of the same\n\n471\n00:21:53.880 --> 00:21:56.540\nroutes because they're both connecting\nthrough the internet backbone.\n\n472\n00:21:56.540 --> 00:22:00.860\nBut I'm going to pick one over the other\n,based on which networks are local, right?\n\n473\n00:22:00.860 --> 00:22:05.270\nSome of these networks,\n\n474\n00:22:05.270 --> 00:22:08.680\nlike the 116.117 network,\nis directly connected to ISP1.\n\n475\n00:22:08.680 --> 00:22:11.640\nSo I can see I can go\nstraight there via AS100.\n\n476\n00:22:11.640 --> 00:22:16.000\nBut I can also get there through ISP2,\nbut see what I'm doing?\n\n477\n00:22:16.000 --> 00:22:18.800\nI'm going through AS200,\nand then jumping to AS100.\n\n478\n00:22:18.800 --> 00:22:20.510\nSo, why not just go straight to AS100?\n\n479\n00:22:20.510 --> 00:22:21.460\nAnd so\n\n480\n00:22:21.460 --> 00:22:24.270\nthat's the one that it picked, that's the\none that made it into the routing table.\n\n481\n00:22:24.270 --> 00:22:26.070\nThey all have asterisks,\nso they're all valid.\n\n482\n00:22:26.070 --> 00:22:28.200\nI can get to the next hop for\neach one of these.\n\n483\n00:22:28.200 --> 00:22:34.500\nBut I can't necessarily just go faster\nthrough two AS's than one AS, right?\n\n484\n00:22:34.500 --> 00:22:36.680\nSo it's gonna pick one as\nbetter than the other.\n\n485\n00:22:36.680 --> 00:22:38.830\nAnd you'll see that it'll reverse\ndown here to some of the other ones,\n\n486\n00:22:38.830 --> 00:22:40.620\nwhere we go from AS100 to 200.\n\n487\n00:22:40.620 --> 00:22:45.610\nOr we could go straight to 200 and\nit'll pick that route instead, so\n\n488\n00:22:45.610 --> 00:22:50.200\nnow I'm picking the ISBs based\nupon that path, alright?\n\n489\n00:22:50.200 --> 00:22:52.970\nLet's bring another router into this mix,\nokay?\n\n490\n00:22:52.970 --> 00:22:56.340\nI'm gonna jump over to,\nwe'll take branch one.\n\n491\n00:22:56.340 --> 00:23:00.250\nNow, Branch 1, if I look at my diagram\nhere, Branch 1 is down here, and\n\n492\n00:23:00.250 --> 00:23:02.430\nBranch 1 has a connection to ISP 1.\n\n493\n00:23:02.430 --> 00:23:03.300\nOkay?\n\n494\n00:23:03.300 --> 00:23:06.180\nIt's got that connection, but\nI haven't configured it yet.\n\n495\n00:23:06.180 --> 00:23:11.330\nSo Branch 1 doesn't really know about\na way to connect to that system.\n\n496\n00:23:11.330 --> 00:23:12.060\nOkay?\n\n497\n00:23:12.060 --> 00:23:16.300\nBut I'm going to set up IBGP,\nbetween headquarters and branch one.\n\n498\n00:23:16.300 --> 00:23:19.790\nWe're gonna connect these two guys\ntogether on the interior side.\n\n499\n00:23:19.790 --> 00:23:23.350\nNow when I connect those guys,\nsome interesting stuff is gonna happen.\n\n500\n00:23:23.350 --> 00:23:25.933\nSo I'm gonna start here on headquarters,\n\n501\n00:23:25.933 --> 00:23:30.750\nand I'll say neighbor 192.168.0.2,\nthat's branch 1, right?\n\n502\n00:23:31.860 --> 00:23:36.509\nAnd I'll say remote AS65000.\n\n503\n00:23:36.509 --> 00:23:39.350\nIt's in the same AS as me, so\nI'll go ahead and specify that.\n\n504\n00:23:39.350 --> 00:23:41.169\nNow, that IP that I picked.\n\n505\n00:23:41.169 --> 00:23:43.218\n192.168.0.2.\n\n506\n00:23:43.218 --> 00:23:45.790\nThat's the IP here on\nthis metro E connection.\n\n507\n00:23:45.790 --> 00:23:49.500\nSo on the other side I need to\npeer up against that same IP.\n\n508\n00:23:49.500 --> 00:23:51.321\nI might have more than\none route to get to that.\n\n509\n00:23:51.321 --> 00:23:54.514\nSo I might need to tie this to\nwhat's called an update source.\n\n510\n00:23:54.514 --> 00:23:57.266\nLike what interface I'm using\nwhen I reach out to that router.\n\n511\n00:23:57.266 --> 00:23:59.251\nSo I'm gonna add one more line here.\n\n512\n00:23:59.251 --> 00:24:02.821\nAnd I'm just gonna say\nupdate-source e0/0 so\n\n513\n00:24:02.821 --> 00:24:07.160\nit knows that I'm using the metro\ne connection to get there.\n\n514\n00:24:07.160 --> 00:24:09.321\nJust in case I have more\nthan one route to get there,\n\n515\n00:24:09.321 --> 00:24:11.801\nthis will make sure that I\nalways use that same interface.\n\n516\n00:24:11.801 --> 00:24:15.065\nAnd on branch one,\nI'm basically going to do the same thing.\n\n517\n00:24:15.065 --> 00:24:22.654\nSo I'm gonna say router bgp 65000 and\nthen I'm gonna say neighbor [SOUND].\n\n518\n00:24:22.654 --> 00:24:26.090\n192.168.0.1, that's headquarters.\n\n519\n00:24:26.090 --> 00:24:27.481\nAnd i'll say remote as,\n\n520\n00:24:27.481 --> 00:24:31.853\nactually let me do that update source\nfirst that way it starts off, oh, well,\n\n521\n00:24:31.853 --> 00:24:36.180\nit's gonna make me set the, all right,\nwe'll go ahead and set the IP first.\n\n522\n00:24:36.180 --> 00:24:39.974\nSo, I'll go ahead and\nsay remote as 65,000 and\n\n523\n00:24:39.974 --> 00:24:43.018\nthen I'll set that update source, okay?\n\n524\n00:24:43.018 --> 00:24:45.060\nI've configured it on both sides.\n\n525\n00:24:45.060 --> 00:24:47.850\nSo my neighbor relationship\nshould come up.\n\n526\n00:24:47.850 --> 00:24:54.060\nIt's gonna see that we're both in\nAS65000,so it'll know that this is I-BGP.\n\n527\n00:24:54.060 --> 00:25:00.670\nAnd so on headquarters if I\nrun a show ip bgp summary.\n\n528\n00:25:00.670 --> 00:25:02.830\nOops, that's gonna be ambiguous.\n\n529\n00:25:02.830 --> 00:25:04.360\nLet me do ip.\nThere we go.\n\n530\n00:25:04.360 --> 00:25:07.810\nIt's gonna look at those neighbors, and so\nit's got them, I'm paired up with them.\n\n531\n00:25:07.810 --> 00:25:10.750\nAnd see how they all look the same,\nwhether they're interior or exterior?\n\n532\n00:25:10.750 --> 00:25:13.090\nBut it knows that this guy's interior,\n\n533\n00:25:13.090 --> 00:25:15.880\ncuz we're both in the same\nautonomous system, all right?\n\n534\n00:25:15.880 --> 00:25:17.650\nSo I'm gonna start\nexchanging routes that way,\n\n535\n00:25:17.650 --> 00:25:19.060\nand things will be\na little different there.\n\n536\n00:25:19.060 --> 00:25:21.090\nNow if I go to branch one.\n\n537\n00:25:21.090 --> 00:25:22.130\nI'm now up.\n\n538\n00:25:22.130 --> 00:25:25.450\nSo if I take a look at my routing table,\nI'll have a ton of BGP routes, right?\n\n539\n00:25:26.760 --> 00:25:28.070\nI don't.\n\n540\n00:25:28.070 --> 00:25:29.630\nWhere the heck are the routes, right?\n\n541\n00:25:29.630 --> 00:25:30.720\nI don't have any other routes!\n\n542\n00:25:30.720 --> 00:25:32.420\nThis system sucks, right?\n\n543\n00:25:32.420 --> 00:25:33.625\nWhy would I run this protocol?\n\n544\n00:25:33.625 --> 00:25:34.690\n>> [LAUGH]\n>> Well,\n\n545\n00:25:34.690 --> 00:25:36.980\nwe have to remember\na few things about BGP.\n\n546\n00:25:36.980 --> 00:25:39.970\nFirst off, show IP route is not\nthe greatest place to go and troubleshoot.\n\n547\n00:25:39.970 --> 00:25:42.830\nI mean here I can see I've got a problem,\nI'm not learning routes, right?\n\n548\n00:25:42.830 --> 00:25:45.380\nBut it gives me no hints as to why.\n\n549\n00:25:45.380 --> 00:25:50.420\nIf I do a show ip bgp on the other hand,\nthere's all my routes.\n\n550\n00:25:50.420 --> 00:25:52.310\nOkay, there's all my routes right there.\n\n551\n00:25:52.310 --> 00:25:53.690\nThat's awesome.\n\n552\n00:25:53.690 --> 00:25:54.710\nWhy isn't it working?\n\n553\n00:25:54.710 --> 00:25:55.300\nOkay.\nAnd\n\n554\n00:25:55.300 --> 00:25:58.120\nif I look down the side I got\nasterisks down the side, not Rs.\n\n555\n00:25:58.120 --> 00:25:59.880\nI don't have RIB failures.\n\n556\n00:25:59.880 --> 00:26:01.800\nSo I don't have a RIB failure,\nwhat's the problem?\n\n557\n00:26:01.800 --> 00:26:03.300\nWell, look what I do have.\n\n558\n00:26:03.300 --> 00:26:04.330\nI have an I.\n\n559\n00:26:04.330 --> 00:26:07.580\nRight before every route there's a letter\nI and if I look up here they say internal.\n\n560\n00:26:07.580 --> 00:26:11.420\nThey're internal routes but,\nthey're not working.\n\n561\n00:26:12.450 --> 00:26:13.270\nWell, here's the problem.\n\n562\n00:26:13.270 --> 00:26:14.945\nLook at these next hops, right.\n\n563\n00:26:14.945 --> 00:26:18.128\nThe next hop is not headquarters, right.\n\n564\n00:26:18.128 --> 00:26:22.143\nThe next hop is the ISP and\nthis is BPGs way of saying, you know what,\n\n565\n00:26:22.143 --> 00:26:24.575\nI'm not gonna tell you how to get there.\n\n566\n00:26:24.575 --> 00:26:26.000\nI' just gonna tell you the route.\n\n567\n00:26:26.000 --> 00:26:26.940\nThat's what BPG does.\n\n568\n00:26:26.940 --> 00:26:28.030\nBPG says, here's the route.\n\n569\n00:26:28.030 --> 00:26:31.138\nIt's up to your IGP, up to your\ninterior protocol to figure that out.\n\n570\n00:26:31.138 --> 00:26:36.857\nWell, if the next hop is 204.109.63.1,\n\n571\n00:26:36.857 --> 00:26:40.101\nand I look at my routing table.\n\n572\n00:26:40.101 --> 00:26:41.169\nHow can I get there?\n\n573\n00:26:41.169 --> 00:26:44.682\nRight.\nWell, I have my connection that I ISP, but\n\n574\n00:26:44.682 --> 00:26:47.553\nit's not 204.109.63.1.\n\n575\n00:26:47.553 --> 00:26:50.990\nMy connection is 204.109.63.4.\n\n576\n00:26:50.990 --> 00:26:51.849\nIt's a different network.\n\n577\n00:26:51.849 --> 00:26:52.824\nIt's a different slash 30.\n\n578\n00:26:52.824 --> 00:26:54.891\nSo I don't have a way to get there.\n\n579\n00:26:54.891 --> 00:26:57.340\nI can't get to the next hop and\nso it's invalid.\n\n580\n00:26:58.670 --> 00:27:01.150\nNow I've got two choices\non how to fix this.\n\n581\n00:27:01.150 --> 00:27:04.120\nChoice number one, I can implement\na interior gateway protocol.\n\n582\n00:27:04.120 --> 00:27:09.176\nAnd then when I do that, now the IGP\nwill get me that route to get there and\n\n583\n00:27:09.176 --> 00:27:14.171\nthese will become valid routes, or\ntwo, I can change headquarters.\n\n584\n00:27:14.171 --> 00:27:17.323\nI can tell headquarters, hey,\nwhen you tell the interior people,\n\n585\n00:27:17.323 --> 00:27:20.881\nwhen you tell them about these routes,\ntell them that you're the next top.\n\n586\n00:27:20.881 --> 00:27:23.755\nSo don't, what we're doing right now,\n\n587\n00:27:23.755 --> 00:27:29.021\nis we're telling branch one is to pass\nthrough us and get to ISP one, right?\n\n588\n00:27:29.021 --> 00:27:31.871\nBut we're not really telling them to pass\nthrough us, we're just telling them hey,\n\n589\n00:27:31.871 --> 00:27:34.021\nhowever you can just get to ISP one\njust figure it out on your own.\n\n590\n00:27:34.021 --> 00:27:37.260\nRight, so instead what we can\ndo is say pass through us.\n\n591\n00:27:37.260 --> 00:27:38.030\nPass through headquarters.\n\n592\n00:27:38.030 --> 00:27:40.290\nWe'll take care of getting you to ISP one.\n\n593\n00:27:40.290 --> 00:27:43.230\nAnd that's called the next hop self,\n\n594\n00:27:43.230 --> 00:27:46.880\nwhere we tell our interior network\nyeah go ahead and use this route.\n\n595\n00:27:46.880 --> 00:27:50.830\nIt's not always a good thing to do because\nI might know that BR one has a better way\n\n596\n00:27:50.830 --> 00:27:55.810\nto get there and so I want BR one to use\nits own better way to get there, but\n\n597\n00:27:55.810 --> 00:27:58.090\nif they don't have it,\nwe can kind of manipulate the system and\n\n598\n00:27:58.090 --> 00:27:58.790\nthat's what I'm gonna do.\n\n599\n00:27:58.790 --> 00:28:00.860\nI'm gonna go headquarters and\n\n600\n00:28:00.860 --> 00:28:04.530\non headquarters, I'm gonna pull\nup where I define that neighbor.\n\n601\n00:28:04.530 --> 00:28:09.710\nAnd I'm saying, neighbor 192.168.0.2 and\nI'm gonna say, next-hop-self.\n\n602\n00:28:11.140 --> 00:28:14.810\nAnd now, instead of telling them\n\n603\n00:28:14.810 --> 00:28:18.440\nthat all these routes are via this public\nIP that it doesn't know how to get to,\n\n604\n00:28:18.440 --> 00:28:21.470\nnow I'm gonna tell them they didn't\ncome through me to get there.\n\n605\n00:28:21.470 --> 00:28:22.090\nAll right.\n\n606\n00:28:22.090 --> 00:28:24.780\nNow when you have big changes like this,\nsometimes they happen quickly,\n\n607\n00:28:24.780 --> 00:28:25.470\nsometimes they don't.\n\n608\n00:28:25.470 --> 00:28:27.300\nSo I might have to reset this connection.\n\n609\n00:28:27.300 --> 00:28:29.470\nLet's go see if BR-1 has picked it up or\nnot.\n\n610\n00:28:29.470 --> 00:28:33.810\nIf I do a show ip bgp,\nwell it hasn't picked it up, right?\n\n611\n00:28:33.810 --> 00:28:35.970\nSo it's still got all these\ngoing through the other one.\n\n612\n00:28:35.970 --> 00:28:39.670\nSo I'm gonna need to do a quick little\nreset to get this guy kinda flushed and\n\n613\n00:28:39.670 --> 00:28:40.650\nin place.\n\n614\n00:28:40.650 --> 00:28:42.850\nAnd when we do a reset on these things,\n\n615\n00:28:42.850 --> 00:28:45.010\nthere's a few different\nways to go about it.\n\n616\n00:28:45.010 --> 00:28:46.590\nBut I need to clear this out,\n\n617\n00:28:46.590 --> 00:28:50.330\nand, actually I could probably\nkinda stall long enough.\n\n618\n00:28:50.330 --> 00:28:56.070\nBut basically, you can reset a BGP\nconnection a few different ways.\n\n619\n00:28:56.070 --> 00:28:59.130\nAnd so, you'll see like I\nmade this clear BGP star but\n\n620\n00:28:59.130 --> 00:29:02.580\nyou can also go in and wipe an individual\nneighbor to get them cleared.\n\n621\n00:29:02.580 --> 00:29:04.550\nSo a few different ways to go about it.\n\n622\n00:29:04.550 --> 00:29:06.400\nSo you can see the options here\nwhere I can clear everything.\n\n623\n00:29:06.400 --> 00:29:08.300\nI just want to clear\nan individual neighbor.\n\n624\n00:29:08.300 --> 00:29:13.400\nAnd so what I'm gonna do is I'm gonna back\nthis up and I'm gonna say clear IP bgp and\n\n625\n00:29:13.400 --> 00:29:16.820\nfrom here, I can specify a particular\nneighbor or all my peers.\n\n626\n00:29:16.820 --> 00:29:18.251\nI can go crazy with it, right.\n\n627\n00:29:18.251 --> 00:29:19.730\nI'm gonna do that one neighbor.\n\n628\n00:29:20.990 --> 00:29:23.720\nAnd then, I don't wanna do a hard reset.\n\n629\n00:29:23.720 --> 00:29:26.460\nA hard reset will actually dump all\nthe routes out of the routing table and\n\n630\n00:29:26.460 --> 00:29:27.490\nyou're gonna have down time.\n\n631\n00:29:27.490 --> 00:29:28.980\nSo, instead, I'm gonna do a soft one.\n\n632\n00:29:28.980 --> 00:29:31.720\nA soft reset says,\ndon't dump your routing table.\n\n633\n00:29:31.720 --> 00:29:34.720\nBut dump what's in your database,\nleave the routing table alone.\n\n634\n00:29:34.720 --> 00:29:37.410\nDump your database,\nget the new routes from me and\n\n635\n00:29:37.410 --> 00:29:38.990\nthen repopulate your routing table.\n\n636\n00:29:38.990 --> 00:29:41.670\nThis avoids a down time, well we've\nalready got a down time here so I guess I\n\n637\n00:29:41.670 --> 00:29:46.000\ndon't really care, but in real life,\nyou generally always want to do a soft.\n\n638\n00:29:46.000 --> 00:29:48.960\nAnd so then I can say out,\nI need to do a soft reset of all\n\n639\n00:29:48.960 --> 00:29:51.800\nof the routes that I'm\nsending out to that network.\n\n640\n00:29:51.800 --> 00:29:54.850\nAnd, well that should really\nbe all I have to specify.\n\n641\n00:29:54.850 --> 00:29:59.200\nUnknown neigh-,\n[LAUGH] I am on the wrong router.\n\n642\n00:29:59.200 --> 00:30:01.030\nSo let me just do the other direction.\n\n643\n00:30:01.030 --> 00:30:03.500\nOh I am doing it to myself.\n\n644\n00:30:03.500 --> 00:30:07.380\nI am on branch one, branch one is .2 so\nI need to do it that way.\n\n645\n00:30:07.380 --> 00:30:10.300\nIf I were on the head quarters like\n\n646\n00:30:10.300 --> 00:30:12.990\nI was supposed to be then this\nwould be the command I would run.\n\n647\n00:30:12.990 --> 00:30:14.450\nLet me just jump over to head quarters.\n\n648\n00:30:14.450 --> 00:30:16.300\nAnd we can do it from there.\n\n649\n00:30:16.300 --> 00:30:17.110\nThere we go.\n\n650\n00:30:17.110 --> 00:30:18.630\nSo that's gonna do that soft reset.\n\n651\n00:30:18.630 --> 00:30:21.290\nAnd say flush out the BGP database.\n\n652\n00:30:21.290 --> 00:30:22.310\nRepopulate it.\n\n653\n00:30:22.310 --> 00:30:24.130\nRepopulate your routing table from that.\n\n654\n00:30:24.130 --> 00:30:30.075\nAnd so now on branch one,\nif I take a look at my BGP data, oh.\n\n655\n00:30:30.075 --> 00:30:32.560\n[LAUGH] There we go.\n\n656\n00:30:32.560 --> 00:30:37.310\nNow there's those next hops and\nthey're all set to 192.560.0.1.\n\n657\n00:30:37.310 --> 00:30:40.470\nAnd look, I got that star and\nthen a greater than symbol.\n\n658\n00:30:40.470 --> 00:30:42.870\nThese are now valid,\nI've got a best route,\n\n659\n00:30:42.870 --> 00:30:44.540\nthey're making it into my routing table.\n\n660\n00:30:44.540 --> 00:30:47.130\nI still have that I over there,\nthat lets me know they're internal.\n\n661\n00:30:47.130 --> 00:30:51.480\nRight, I'm learning it via IBGP I expect\nthat, but now they're good routes.\n\n662\n00:30:51.480 --> 00:30:54.210\nAnd if I take a look at my routing table.\n\n663\n00:30:54.210 --> 00:30:55.780\nThere they are, right?\n\n664\n00:30:55.780 --> 00:30:57.000\nThey've all made it in.\n\n665\n00:30:57.000 --> 00:30:59.970\nSo that's a little difference that\nwe might have if we're configuring\n\n666\n00:30:59.970 --> 00:31:02.900\ninterior BGPs as opposed to exterior,\nright?\n\n667\n00:31:02.900 --> 00:31:04.060\nThat next-hop-self.\n\n668\n00:31:05.862 --> 00:31:07.390\nAll right well, what you've seen so\n\n669\n00:31:07.390 --> 00:31:11.260\nfar is really the most basic\nof the BGP configurations.\n\n670\n00:31:11.260 --> 00:31:13.980\nJust really simple, peering up to\na neighbor, getting some routes.\n\n671\n00:31:13.980 --> 00:31:16.190\nGetting some internal neighbors and\ngetting some routes and\n\n672\n00:31:16.190 --> 00:31:19.730\nsome of the different things we have to\nbe aware of there's a lot more to it.\n\n673\n00:31:19.730 --> 00:31:22.720\nSo stay tuned, cuz we're gonna have\nto have a part three on this one,\n\n674\n00:31:22.720 --> 00:31:25.830\nas we jump through some of the other\nways that we configure our systems and\n\n675\n00:31:25.830 --> 00:31:27.820\nmake things a little easier for us.\n\n676\n00:31:27.820 --> 00:31:30.440\nBut for now, this is probably a pretty\ngood spot to wrap this one up, Ronnie.\n\n677\n00:31:30.440 --> 00:31:32.120\n>> Sound like a great idea.\n\n678\n00:31:32.120 --> 00:31:35.880\nSo remember that with BGP we showed\nyou that simple configuration,\n\n679\n00:31:35.880 --> 00:31:37.930\nhow to at least get it up and\noperating, and\n\n680\n00:31:37.930 --> 00:31:42.720\neven showed you how you verify that it's\nup and operating and then that soft reset.\n\n681\n00:31:42.720 --> 00:31:46.010\nAll important concepts and\nlearning about BGP right away.\n\n682\n00:31:46.010 --> 00:31:51.260\nWe've got some more coming at you again\nwith more BGP, signing off from ITProTV,\n\n683\n00:31:51.260 --> 00:31:52.210\nI'm Ronnie Wong.\n\n684\n00:31:52.210 --> 00:31:52.900\n>> And I'm Don Pezet.\n\n685\n00:31:52.900 --> 00:31:54.469\n>> And we'll see you next time.\n\n686\n00:31:54.469 --> 00:32:00.220\n[MUSIC]\n\n",
          "vimeoId": "138001719"
        },
        {
          "description": "For BGP there is a lot of configuration to do, which security isn't a great concern in BGP, but one should employ at least a little bit of security. Viewers will hear about some more advanced features one can configure like security and authentication and see demonstrations on how to configure authentication between BGP peers and how to use BGP Peer Groups to quickly configure large quantities of BGP peers with similar configurations.",
          "length": "1573",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/ccnproute/cisco-ccnproute300101-3-30-border_gateway_protocol_pt3-090215-1.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/ccnproute/cisco-ccnproute300101-3-30-border_gateway_protocol_pt3-090215-1-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/ccnproute/cisco-ccnproute300101-3-30-border_gateway_protocol_pt3-090215-1-sm.jpg",
          "title": "Border Gateway Protocol Part 3",
          "transcript": "WEBVTT\n\n1\n00:00:00.000 --> 00:00:10.252\n[MUSIC]\n\n2\n00:00:10.252 --> 00:00:13.360\nAll right, welcome to another\ngreat episode here on ITProTV.\n\n3\n00:00:13.360 --> 00:00:15.540\nToday we're talking, that CCNP route.\n\n4\n00:00:15.540 --> 00:00:16.970\nWe're getting ready for that exam, so\n\n5\n00:00:16.970 --> 00:00:20.210\nif you are preparing for that,\nthis is the place for you to be.\n\n6\n00:00:20.210 --> 00:00:23.730\nI'm your host Ronnie Wong and\nhere with us today Mr. Don Pezet.\n\n7\n00:00:23.730 --> 00:00:24.720\nDon, how's it going?\n\n8\n00:00:24.720 --> 00:00:25.750\n>> It is going great, Ronnie.\n\n9\n00:00:25.750 --> 00:00:28.290\nReady to jump right back\ninto the world of BGP.\n\n10\n00:00:28.290 --> 00:00:31.746\nAnd today we're going to be looking at\nsome of the more advanced features that\n\n11\n00:00:31.746 --> 00:00:34.777\nwe can configure, kind of focusing\non some things like security and\n\n12\n00:00:34.777 --> 00:00:37.382\nauthentication and\nsome time saving techniques we can use\n\n13\n00:00:37.382 --> 00:00:39.635\nwhen configuring things\nlike full mesh IBGP's.\n\n14\n00:00:39.635 --> 00:00:41.448\nSo, definitely some goof stuff.\n\n15\n00:00:41.448 --> 00:00:44.090\nThings that we'll use in the real world\nthat we need to make sure we understand.\n\n16\n00:00:44.090 --> 00:00:46.580\nNow, one of the things you\nguys might have noticed,\n\n17\n00:00:46.580 --> 00:00:49.340\nis that, in our first two episodes,\nwe talked about BGP.\n\n18\n00:00:49.340 --> 00:00:52.250\nWe saw it do a basic configuration,\nget things set up.\n\n19\n00:00:52.250 --> 00:00:55.065\nAnd at no point do we really\nimplement any security.\n\n20\n00:00:55.065 --> 00:01:00.330\nAnd that's because with BPG, security's\nnot such a great concern because\n\n21\n00:01:00.330 --> 00:01:03.140\nwe're normally doing it over\nwide area network links.\n\n22\n00:01:03.140 --> 00:01:05.600\nAnd those WAN links are typically\npoint to point, right?\n\n23\n00:01:05.600 --> 00:01:07.800\nSo if you're connections over.\n\n24\n00:01:07.800 --> 00:01:10.340\nT1 lines, or something of that nature.\n\n25\n00:01:10.340 --> 00:01:13.750\nLike, not frame relay,\nwell frame relay maybe.\n\n26\n00:01:13.750 --> 00:01:15.540\n>> ISP maybe.\n>> Like a cell based, ATM network,\n\n27\n00:01:15.540 --> 00:01:16.250\nstuff like that.\n\n28\n00:01:16.250 --> 00:01:19.460\nBut point-to-point, we don't necessarily\nhave to worry about somebody else\n\n29\n00:01:19.460 --> 00:01:21.360\ngetting in there and\ntrying to inject routes to us.\n\n30\n00:01:21.360 --> 00:01:25.490\nWe have a neighbor relationship built up\ndirectly with the person on the other\n\n31\n00:01:25.490 --> 00:01:29.340\nend of that line, we don't necessarily\nworry about security, right.\n\n32\n00:01:29.340 --> 00:01:33.700\nBut, it is becoming more and more common\nto get things like Metro Ethernet links.\n\n33\n00:01:33.700 --> 00:01:38.290\nOr MPLS links where, hey MPLS,\nit might be point to point right?\n\n34\n00:01:38.290 --> 00:01:41.830\nBut you're trusting that the labels\nare configured properly to the ISP, and\n\n35\n00:01:41.830 --> 00:01:45.210\nif they aren't, potentially other\npeople could be on that line, and\n\n36\n00:01:45.210 --> 00:01:46.260\nit might not be point to point.\n\n37\n00:01:46.260 --> 00:01:49.550\nSo in those environments we have to\nbe a little more careful, right?\n\n38\n00:01:49.550 --> 00:01:52.820\nWe want to employ a little\nbit of security, and I know.\n\n39\n00:01:52.820 --> 00:01:54.620\nWhen we did our OSPF episodes and\n\n40\n00:01:54.620 --> 00:01:58.980\nwe did our EIGRP episodes you got a chance\nto see there like building up key chains,\n\n41\n00:01:58.980 --> 00:02:03.080\nand setting up key expirations, and tying\nit in and all these different options.\n\n42\n00:02:03.080 --> 00:02:04.722\nBGP is actually a lot easier.\n\n43\n00:02:04.722 --> 00:02:07.939\nWith BGP,\nit has MD5 authentication, so just,\n\n44\n00:02:07.939 --> 00:02:13.071\na hash based check some authentication\nbuilt right into the protocol, and so,\n\n45\n00:02:13.071 --> 00:02:18.456\ngetting configured is as easy as attaching\na password to a neighbor and that's it.\n\n46\n00:02:18.456 --> 00:02:21.358\nSo, it's really simple and\nbecause it's so simple.\n\n47\n00:02:21.358 --> 00:02:23.793\nEven on a point to point line\na lot of times I'll go ahead and\n\n48\n00:02:23.793 --> 00:02:26.000\ndeploy it anyway just to\nbe on the safe side, right?\n\n49\n00:02:26.000 --> 00:02:27.600\nYou just never know.\n\n50\n00:02:27.600 --> 00:02:29.910\nOn point to point T1s.\n\n51\n00:02:29.910 --> 00:02:31.410\nOn ISDN if you still have it.\n\n52\n00:02:31.410 --> 00:02:32.850\nOn frame relay that's point to point.\n\n53\n00:02:32.850 --> 00:02:34.250\nOn those type of connections.\n\n54\n00:02:34.250 --> 00:02:36.950\nYou don't necessarily need it, but\nit doesn't hurt to have it, right?\n\n55\n00:02:36.950 --> 00:02:39.015\nSo you might as well go ahead and\nemploy it.\n\n56\n00:02:39.015 --> 00:02:43.800\nSo start this episode with just a quick\nexample of how we could do that kind of\n\n57\n00:02:43.800 --> 00:02:44.600\nauthentication.\n\n58\n00:02:44.600 --> 00:02:45.510\nAll right.\n\n59\n00:02:45.510 --> 00:02:46.880\nSo I'm going to bring up my topology.\n\n60\n00:02:46.880 --> 00:02:49.470\nI've got a slightly,\noops, different version.\n\n61\n00:02:49.470 --> 00:02:51.110\nHere we go.\nOf my topology.\n\n62\n00:02:51.110 --> 00:02:54.050\nSo this is the topology we've been working\nwith all throughout this show, right?\n\n63\n00:02:54.050 --> 00:02:56.980\nWe've got headquarters which is connected\nat branch 1, branch 2, and branch 3,\n\n64\n00:02:56.980 --> 00:02:59.400\nand they've each got their\nlittle networks, right?\n\n65\n00:02:59.400 --> 00:03:01.250\nThat's what we've been working with.\n\n66\n00:03:01.250 --> 00:03:05.110\nHeadquarters has a connection to\nan Internet service provider, all right.\n\n67\n00:03:05.110 --> 00:03:09.900\nAnd that connection is bridging\nthe gap between our autonomous system,\n\n68\n00:03:09.900 --> 00:03:12.750\nAS 65000, and\ntheir autonomous system, AS 100.\n\n69\n00:03:12.750 --> 00:03:15.420\nAll right, when I connect\nthat's a point to point line.\n\n70\n00:03:15.420 --> 00:03:18.900\nI've actually got it set up as I think\nit's a ten megabit ethernet connection.\n\n71\n00:03:18.900 --> 00:03:19.830\nBut it's just point to point.\n\n72\n00:03:19.830 --> 00:03:21.312\nThere's nobody else on that link.\n\n73\n00:03:21.312 --> 00:03:25.502\nBut because it is an ethernet connection\nan employee of the ISP could in theory\n\n74\n00:03:25.502 --> 00:03:28.853\nstick a switch in here,\nthere probably already is a switch and\n\n75\n00:03:28.853 --> 00:03:32.849\nthey could add themselves to that\nnetwork and they can potentially try and\n\n76\n00:03:32.849 --> 00:03:36.940\nspoof some routes into my environment and\nredirect some traffic, right?\n\n77\n00:03:36.940 --> 00:03:39.460\nIf I trust my ISP then I\ndon't worry about that.\n\n78\n00:03:39.460 --> 00:03:42.410\nBut who trusts your ISP, right?\n\n79\n00:03:42.410 --> 00:03:43.600\nI shouldn't say it that way.\n\n80\n00:03:43.600 --> 00:03:46.020\nWe'll use our ISP as an example, okay?\n\n81\n00:03:46.020 --> 00:03:49.970\nSo the ISP that we use we're really happy\nwith them, they provide us great service,\n\n82\n00:03:49.970 --> 00:03:51.390\nI trust them.\n\n83\n00:03:51.390 --> 00:03:54.730\nBut, they have hundreds of employees.\n\n84\n00:03:54.730 --> 00:03:57.150\nI know two,\nI know two employees over there.\n\n85\n00:03:57.150 --> 00:03:59.450\nTwo employees by name that I\ncan call out and reach out to.\n\n86\n00:03:59.450 --> 00:04:01.790\nI don't know anybody in\nthe rest of the company and\n\n87\n00:04:01.790 --> 00:04:04.010\nso who's to say they're trustworthy or\nnot.\n\n88\n00:04:04.010 --> 00:04:07.520\nSo we want to go ahead and set up that\npeer relationship between headquarters and\n\n89\n00:04:07.520 --> 00:04:10.190\nthis ISP but we want to do it securely.\n\n90\n00:04:10.190 --> 00:04:13.970\nSo what we do is we come to our system and\nwe configure the neighbor\n\n91\n00:04:13.970 --> 00:04:17.250\non the headquarters and\nwe tell it, here's your neighbor.\n\n92\n00:04:17.250 --> 00:04:21.070\nBut make sure you use a password\nwhen you connect to them.\n\n93\n00:04:21.070 --> 00:04:24.830\nAnd I'll show you that process\non my headquarters router.\n\n94\n00:04:24.830 --> 00:04:26.591\nSo here I am on headquarters.\n\n95\n00:04:26.591 --> 00:04:29.745\nAnd, if we jump into our config,\nwell here,\n\n96\n00:04:29.745 --> 00:04:34.311\nlet me start by making this a little\nbigger that's kind of small.\n\n97\n00:04:34.311 --> 00:04:38.955\nLet's start by looking at my IP is right,\nso I've got this connection right here.\n\n98\n00:04:38.955 --> 00:04:41.575\nThis is my connection to my ISP, okay.\n\n99\n00:04:41.575 --> 00:04:45.771\nAnd it's 204.109.63.2,\non the other end, they're .1.\n\n100\n00:04:45.771 --> 00:04:49.077\nRight, and I have it set up as a /30,\nso a network with only two hosts,\n\n101\n00:04:49.077 --> 00:04:51.860\nthis kinda goes back to that\npoint-to-point type nature.\n\n102\n00:04:51.860 --> 00:04:55.262\nSo I don't necessarily need to\nworry about security here, but\n\n103\n00:04:55.262 --> 00:04:57.395\nit's not a bad idea, right?\n\n104\n00:04:57.395 --> 00:05:01.839\nSo I'm gonna jump into my config and\nI'm gonna say router BGP 65000.\n\n105\n00:05:03.570 --> 00:05:06.040\nBecause I'm in autonomous system 65,000.\n\n106\n00:05:06.040 --> 00:05:07.143\nAll right?\n\n107\n00:05:07.143 --> 00:05:12.387\nAnd then,\nI'm going to specify my neighbor,\n\n108\n00:05:12.387 --> 00:05:18.308\nwhich is that 204.109.63.1, right?\n\n109\n00:05:18.308 --> 00:05:22.797\nAnd I'm going to say remote dash AS 100,\nnow I know about the neighbor, and\n\n110\n00:05:22.797 --> 00:05:25.325\nI'm going to try to connect to him, right.\n\n111\n00:05:25.325 --> 00:05:26.881\nIf I connect right now.\n\n112\n00:05:26.881 --> 00:05:29.830\nI'm connecting without a password, right?\n\n113\n00:05:29.830 --> 00:05:32.680\nAnd on their end,\nthe ISP can go and do that.\n\n114\n00:05:32.680 --> 00:05:34.190\nYou'll see they just came up also.\n\n115\n00:05:34.190 --> 00:05:35.940\nThey've already got it\nconfigured on their end.\n\n116\n00:05:35.940 --> 00:05:37.330\nThe link just came up.\n\n117\n00:05:37.330 --> 00:05:40.470\nBut how do I really know\nthat's them on the other end?\n\n118\n00:05:40.470 --> 00:05:41.032\nI don't.\n\n119\n00:05:41.032 --> 00:05:43.410\nI don't really know that\nthat's them on the other end.\n\n120\n00:05:43.410 --> 00:05:46.200\nSo I want to attach a password.\n\n121\n00:05:46.200 --> 00:05:47.650\nI'm gonna add one more command here.\n\n122\n00:05:47.650 --> 00:05:49.816\nI'm gonna say neighbor.\n\n123\n00:05:49.816 --> 00:05:52.415\n204.109.63.1.\n\n124\n00:05:52.415 --> 00:05:56.410\nAnd if you look at the help, you'll see,\nright there, we've got, password, right?\n\n125\n00:05:56.410 --> 00:05:58.386\nNow, not a whole lot of\noptions to password.\n\n126\n00:05:58.386 --> 00:06:01.090\nIf I say, password and then,\nquestion mark, it just asks for\n\n127\n00:06:01.090 --> 00:06:02.132\nthe password, right?\n\n128\n00:06:02.132 --> 00:06:06.498\nIt's not asking me if I want\nit to be MD5 or plain text.\n\n129\n00:06:06.498 --> 00:06:08.761\nOr all that other stuff that we\nsaw with the other protocols.\n\n130\n00:06:08.761 --> 00:06:10.165\nIt's just asking for a password.\n\n131\n00:06:10.165 --> 00:06:13.556\nSo I'll set mine to cisco123, okay?\n\n132\n00:06:13.556 --> 00:06:17.365\nNow I'm saying there's a neighbor\nout there I wanna connect with and\n\n133\n00:06:17.365 --> 00:06:20.780\nI'll only connect with them if\nthey can provide me a hash value\n\n134\n00:06:20.780 --> 00:06:23.489\nthat matches the hash value I generate for\nthis.\n\n135\n00:06:23.489 --> 00:06:24.209\nOkay?\n\n136\n00:06:24.209 --> 00:06:26.314\nAnd immediately, well I say immediate,\nit took a second.\n\n137\n00:06:26.314 --> 00:06:26.860\nRight?\n\n138\n00:06:26.860 --> 00:06:32.410\nYour timers have to expire, but now I'm\ngetting no MD5 digest from the neighbor.\n\n139\n00:06:32.410 --> 00:06:34.260\nAll right?\nSo it automatically does MD5.\n\n140\n00:06:34.260 --> 00:06:35.600\nThat's the only one that's supported.\n\n141\n00:06:35.600 --> 00:06:37.060\nIt doesn't support plain text.\n\n142\n00:06:37.060 --> 00:06:38.620\nIt doesn't support anything else.\n\n143\n00:06:38.620 --> 00:06:39.643\nJust MD5.\n\n144\n00:06:39.643 --> 00:06:41.568\nAnd now I'm getting that failure.\n\n145\n00:06:41.568 --> 00:06:44.148\nOkay, so now I need to pick up\nmy phone and call the ISP, and\n\n146\n00:06:44.148 --> 00:06:45.660\nI need to say, hey guys.\n\n147\n00:06:45.660 --> 00:06:47.755\nWe probably should have done\nthis before hand, right.\n\n148\n00:06:47.755 --> 00:06:51.750\n[LAUGH] We call up the ISP,\ncuz we got downtime right now, right?\n\n149\n00:06:51.750 --> 00:06:54.880\nI'm not getting any routes from them,\ncuz it's down.\n\n150\n00:06:54.880 --> 00:06:56.510\nSo you need to kind of coordinate this, so\n\n151\n00:06:56.510 --> 00:07:00.510\nyou both configure it at the same time\nto minimize the impact of that downtime.\n\n152\n00:07:00.510 --> 00:07:03.155\nSo if I'm on the phone with them and\nI say, okay guys, I just turned on\n\n153\n00:07:03.155 --> 00:07:07.780\nauthentication on my end, can you\nset the password on your end, okay?\n\n154\n00:07:07.780 --> 00:07:09.120\nAnd they'll do that, right?\n\n155\n00:07:09.120 --> 00:07:11.390\nSo let's pretend we're the ISP.\n\n156\n00:07:11.390 --> 00:07:13.200\nI'm gonna break into the ISP router.\n\n157\n00:07:14.710 --> 00:07:22.550\nAnd on their side, they're gonna jump into\nrouter bgp 100, because they're in AS 100.\n\n158\n00:07:22.550 --> 00:07:24.839\nAnd they're gonna modify the neighbor.\n\n159\n00:07:24.839 --> 00:07:26.186\nWhich is me, right.\n\n160\n00:07:26.186 --> 00:07:33.006\nAnd it was 204.109.63.2 is me.\n\n161\n00:07:33.006 --> 00:07:36.221\nAnd they're just gonna\nadd the same password.\n\n162\n00:07:36.221 --> 00:07:38.391\nSo they're gonna add that password, and\n\n163\n00:07:38.391 --> 00:07:42.614\nif I jump back to my headquarters router,\nI've been receiving these failures.\n\n164\n00:07:42.614 --> 00:07:46.664\nIf we look at the time on them at 9:30 and\n47 seconds and\n\n165\n00:07:46.664 --> 00:07:51.605\nthen we've got 9:30 and\n48 seconds, 9:31 and 12 seconds.\n\n166\n00:07:51.605 --> 00:07:53.313\nSo it's happening approximately\nevery 30 seconds.\n\n167\n00:07:53.313 --> 00:07:55.731\nWell I guess those are happening\nright after each other but\n\n168\n00:07:55.731 --> 00:07:59.240\ndown here you'll see there jumping\nto about every 30 seconds or so.\n\n169\n00:07:59.240 --> 00:08:01.540\nYeah, it's kinda all\nover the place isn't it.\n\n170\n00:08:01.540 --> 00:08:05.980\nNow, we just picked one up right\nthere with no message digest.\n\n171\n00:08:05.980 --> 00:08:10.170\nSo, if they stop,\nthen I know that things are good or\n\n172\n00:08:10.170 --> 00:08:11.680\nI don't have to wait for them to stop.\n\n173\n00:08:11.680 --> 00:08:16.400\nI can actually go in here and\ndo a show ip bgp summary, and\n\n174\n00:08:16.400 --> 00:08:19.500\nyou'll see if you have a healthy\nrelationship with that neighbor.\n\n175\n00:08:19.500 --> 00:08:21.590\nIf that link came up.\n\n176\n00:08:21.590 --> 00:08:22.730\nThen you should see it right here.\n\n177\n00:08:22.730 --> 00:08:26.150\nYou should see that we got that neighbor,\nthat we got messages sent and\n\n178\n00:08:26.150 --> 00:08:29.280\nreceived, and more importantly\nto really know that it worked\n\n179\n00:08:29.280 --> 00:08:33.170\nis right over here where\nyou got this state prefix.\n\n180\n00:08:33.170 --> 00:08:38.710\nI've received 84 networks from the other\nside so it looks like we're good.\n\n181\n00:08:38.710 --> 00:08:41.540\nWhen it's actually done you'll see\nthis message right here that it comes\n\n182\n00:08:41.540 --> 00:08:42.180\nup, right?\n\n183\n00:08:42.180 --> 00:08:45.550\nMy neighbor relationship was down so\nit was still sorting through that.\n\n184\n00:08:45.550 --> 00:08:48.840\nI saw it first here before\nthat little pop-up came up.\n\n185\n00:08:48.840 --> 00:08:52.350\nNow I'm still getting some bad\nmessages coming through, right?\n\n186\n00:08:52.350 --> 00:08:55.580\nThis can happen because we can\nfigure the password on one end,\n\n187\n00:08:55.580 --> 00:08:59.070\nwe can figure the password on this end and\nthere were already packets in transit\n\n188\n00:08:59.070 --> 00:09:04.190\nbecause bgp does some retransmits and\nstuff So sometimes it's a good idea\n\n189\n00:09:04.190 --> 00:09:09.520\nto clear out BGP just to give it a flush\nand make sure everything's nice and clean.\n\n190\n00:09:09.520 --> 00:09:14.430\nI'm just gonna verify real quick\nthat my configurations stayed,\n\n191\n00:09:14.430 --> 00:09:18.170\nthat the password is set, and so\nsure enough I've got that neighbor and\n\n192\n00:09:18.170 --> 00:09:22.500\nthe password is set to cisco 123 and\nthe ISP, I'll do the same thing.\n\n193\n00:09:22.500 --> 00:09:27.390\nI'm just gonna do a show run begin bgp,\n\n194\n00:09:27.390 --> 00:09:31.860\nand I'm just gonna verify that neighbor\nstatement still has the password.\n\n195\n00:09:31.860 --> 00:09:32.510\nLet's see.\n\n196\n00:09:32.510 --> 00:09:33.850\nThere it is right there.\n\n197\n00:09:33.850 --> 00:09:35.970\nIt's that neighbor statement,\nand so it is correct.\n\n198\n00:09:35.970 --> 00:09:37.790\nAll right.\nSo I'm just gonna do a quick flush.\n\n199\n00:09:37.790 --> 00:09:42.070\nNow when you flush BGP,\nthere's a few decisions you need to make.\n\n200\n00:09:42.070 --> 00:09:45.380\nThere's a few different ways to flush\nit that we need to be aware of.\n\n201\n00:09:45.380 --> 00:09:49.290\nThere's a soft hard reset and\na hard reset.\n\n202\n00:09:49.290 --> 00:09:53.630\nA hard reset is like yanking\nthe power plug on a computer.\n\n203\n00:09:53.630 --> 00:09:58.160\nIt just says, we're gonna cut off BGP\nright now, dump all the routes, and\n\n204\n00:09:58.160 --> 00:10:00.820\nthen we're going to bring it back up and\nwe'll rebuild all the routes.\n\n205\n00:10:00.820 --> 00:10:05.230\nBut in between, your routing table is\nmissing routes, you have downtime.\n\n206\n00:10:05.230 --> 00:10:08.230\nA hard reset causes downtime.\n\n207\n00:10:08.230 --> 00:10:11.740\nif you can still talk to the other side,\nyou can do a soft reset.\n\n208\n00:10:11.740 --> 00:10:14.100\nWith a soft reset,\nwhat you do is say, okay.\n\n209\n00:10:14.100 --> 00:10:18.050\nwe're gonna yank the BGP routes, but\nleave them in your routing table.\n\n210\n00:10:18.050 --> 00:10:19.450\nRight?\nDon't take them out of your routing table.\n\n211\n00:10:19.450 --> 00:10:22.200\nAnd then we're gonna send\nyou all the routes again.\n\n212\n00:10:22.200 --> 00:10:23.350\nThe whole database again.\n\n213\n00:10:23.350 --> 00:10:27.660\nAnd then you can repopulate and\nthen update your routing table as needed.\n\n214\n00:10:27.660 --> 00:10:29.810\nWith a soft reset, you don't get downtime.\n\n215\n00:10:29.810 --> 00:10:33.020\nSo it's always preferable to\ndo a soft reset if we can.\n\n216\n00:10:33.020 --> 00:10:34.880\nAll right, but\nyou can do a hard reset too.\n\n217\n00:10:34.880 --> 00:10:39.080\nAnd the other thing is when you do\na reset you can limit the scope.\n\n218\n00:10:39.080 --> 00:10:43.295\nYou can reset your entire BGP process\nif you want, just the whole Full thing.\n\n219\n00:10:44.345 --> 00:10:49.115\nOr you could reset just connections\nto one particular AS, or\n\n220\n00:10:49.115 --> 00:10:52.775\nyou can reset connections to\njust one particular neighbor.\n\n221\n00:10:52.775 --> 00:10:54.385\nAnd ideally in a production environment,\n\n222\n00:10:54.385 --> 00:10:56.615\nyou try to minimize this\nas much as possible.\n\n223\n00:10:56.615 --> 00:11:02.540\nSo, for example here on ISP1, ISP1 might\nhave connections to several different ASs.\n\n224\n00:11:02.540 --> 00:11:08.270\nSo they decide they're going to clear\nthe connection just to AS 65,000.\n\n225\n00:11:08.270 --> 00:11:10.930\nAnd so they can come in here and\nspecify it.\n\n226\n00:11:10.930 --> 00:11:13.571\nWhen we do a clear we\ncan say clear ip gbp *.\n\n227\n00:11:13.571 --> 00:11:16.260\nThat's gonna wipe all my peers.\n\n228\n00:11:16.260 --> 00:11:18.880\nClear ip gbp and AS number.\n\n229\n00:11:18.880 --> 00:11:21.520\nThat'll wipe just peers in that AS.\n\n230\n00:11:21.520 --> 00:11:26.160\nOr \"clear ip bgp\" and\nIP address right here and\n\n231\n00:11:26.160 --> 00:11:29.880\nthat will wipe just that\nparticular neighbor.\n\n232\n00:11:29.880 --> 00:11:32.870\nSo, since they only have one connection\nto 65000, they can come in and\n\n233\n00:11:32.870 --> 00:11:34.420\nspecify it like this.\n\n234\n00:11:34.420 --> 00:11:35.050\nAlright?\n\n235\n00:11:35.050 --> 00:11:37.710\nNow if I just press \"enter\",\nit's going to do a hard reset.\n\n236\n00:11:37.710 --> 00:11:42.310\nBut if I do a question mark, you'll see\nthat I can do a soft reset, if I want.\n\n237\n00:11:42.310 --> 00:11:43.020\nAlright?\n\n238\n00:11:43.020 --> 00:11:45.290\nAnd then I can specify if I'm flushing...\n\n239\n00:11:45.290 --> 00:11:48.940\nThe routes coming in or\nthe routes going out.\n\n240\n00:11:48.940 --> 00:11:50.940\nOr if I just press enter, we'll do both.\n\n241\n00:11:50.940 --> 00:11:53.370\nAll right, and I'll go ahead and\ndo both on this one, so\n\n242\n00:11:53.370 --> 00:11:56.010\nit's gonna do a soft reset of that peer.\n\n243\n00:11:56.010 --> 00:11:59.080\nNow on my headquarters router maybe I want\nto go a little more hard core, right.\n\n244\n00:11:59.080 --> 00:12:02.890\nI may choose to do a clear ip bgp and\n\n245\n00:12:02.890 --> 00:12:08.280\nthen to do that neighbor\nspecifically Right, so I'm\n\n246\n00:12:08.280 --> 00:12:12.430\ngonna put just that neighbor specifically,\nand then I'm not gonna say soft.\n\n247\n00:12:12.430 --> 00:12:15.040\nI'm just gonna leave it like it is,\nso it's gonna do a hard one.\n\n248\n00:12:15.040 --> 00:12:19.140\nAnd if I don't specify anything else on\ntop of that, it's gonna reset that all,\n\n249\n00:12:19.140 --> 00:12:20.230\nand I'm gonna get some downtime.\n\n250\n00:12:20.230 --> 00:12:22.410\nSo there goes that user reset.\n\n251\n00:12:22.410 --> 00:12:24.460\nAnd it's basically gonna\nprocess through that and\n\n252\n00:12:24.460 --> 00:12:27.090\nmake sure I've got a good,\nfresh, clean relationship.\n\n253\n00:12:27.090 --> 00:12:28.440\nAnd I do see that it just came up.\n\n254\n00:12:29.610 --> 00:12:34.120\nAnd if I do a show ip bgp summary,\nthere we go.\n\n255\n00:12:34.120 --> 00:12:34.870\nI've got my neighbor.\n\n256\n00:12:34.870 --> 00:12:38.090\nI see 84 prefixes received, so\nit looks like we're healthy.\n\n257\n00:12:38.090 --> 00:12:39.800\nI can do a show ip bgp, whoops.\n\n258\n00:12:39.800 --> 00:12:42.385\nNot in config.\n\n259\n00:12:42.385 --> 00:12:43.845\nSo I can get rid of that do.\n\n260\n00:12:43.845 --> 00:12:44.585\nAnd there we go.\n\n261\n00:12:44.585 --> 00:12:48.495\nAnd I can see I am actually\nlearning prefixes from my neighbor.\n\n262\n00:12:48.495 --> 00:12:50.965\nAnd it's doing it with authentication.\n\n263\n00:12:50.965 --> 00:12:53.685\nSo at this stage we've seen\nconfiguring a password.\n\n264\n00:12:53.685 --> 00:12:56.545\nWe've seen doing a hard or a soft reset.\n\n265\n00:12:56.545 --> 00:12:57.525\nLet's talk about something else.\n\n266\n00:12:57.525 --> 00:13:00.170\nLet's talk about lazy typers like me,\nokay.\n\n267\n00:13:00.170 --> 00:13:01.745\n>> [LAUGH]\n>> I hate typing.\n\n268\n00:13:01.745 --> 00:13:04.525\nThe more I have to type, the more chance\nthere is that I'm gonna make a typo.\n\n269\n00:13:04.525 --> 00:13:05.675\nYou guys have watched my shows.\n\n270\n00:13:05.675 --> 00:13:07.060\nYou know what happens.\n\n271\n00:13:07.060 --> 00:13:10.450\nSo if I'm gonna be doing\nsomething very repetitive in BGP,\n\n272\n00:13:10.450 --> 00:13:13.230\nthere's actually some shortcuts\nwe can use that can really help.\n\n273\n00:13:13.230 --> 00:13:15.970\nLet's take this as an example over\nhere where I have headquarters, and\n\n274\n00:13:15.970 --> 00:13:18.150\nit's got connections to\nthese different branches.\n\n275\n00:13:18.150 --> 00:13:23.540\nAnd I decide that I want to do a full\nmesh BGP configuration, where I want\n\n276\n00:13:23.540 --> 00:13:28.010\nevery branch connected to headquarters and\nI want everybody connected to everybody.\n\n277\n00:13:28.010 --> 00:13:30.530\nSo I'm gonna setup three\nneighbors on headquarters\n\n278\n00:13:30.530 --> 00:13:32.580\nthat are connecting to branch one,\nbranch two and branch three.\n\n279\n00:13:32.580 --> 00:13:35.460\nAnd three neighbors on branch\ntwo to connect to headquarters,\n\n280\n00:13:35.460 --> 00:13:37.040\nbranch one and branch three.\n\n281\n00:13:37.040 --> 00:13:39.350\nAnd going to each one and\nkinda doing it over and over again.\n\n282\n00:13:39.350 --> 00:13:43.320\nBut when I setup those neighbors, I might\nMight be setting the same password,\n\n283\n00:13:43.320 --> 00:13:47.590\nthe same autonomous system number,\nthe same settings, and\n\n284\n00:13:47.590 --> 00:13:51.130\nI don't wanna do it over and\nover and over again.\n\n285\n00:13:51.130 --> 00:13:54.750\nI'm just saying three here, imagine if\nthere's 100 and I have to do it that way.\n\n286\n00:13:54.750 --> 00:13:57.920\nSo it'd be really nice if there was\na way we could simplify the commands.\n\n287\n00:13:57.920 --> 00:13:59.050\nAnd in BGP, there is.\n\n288\n00:13:59.050 --> 00:14:01.980\nThere's a technique called\nusing a peer group.\n\n289\n00:14:01.980 --> 00:14:04.950\nA peer group is where you\ncreate kind of like a template.\n\n290\n00:14:04.950 --> 00:14:09.410\nYou create a template of settings and then\nwhen you define a neighbor, you just apply\n\n291\n00:14:09.410 --> 00:14:12.860\nthe template to that neighbor and then\nget all the settings from that template.\n\n292\n00:14:12.860 --> 00:14:14.960\nThere's two benefits to that, right?\n\n293\n00:14:14.960 --> 00:14:17.750\nOne, you can sit up a large\namount of connections rapidly.\n\n294\n00:14:17.750 --> 00:14:19.790\nYou can do it all kind of at once, and\n\n295\n00:14:19.790 --> 00:14:23.220\ntwo, you can update a large\namount of connections at once.\n\n296\n00:14:23.220 --> 00:14:26.500\nIf you wanna update the template it\nIntern updates all the peers that\n\n297\n00:14:26.500 --> 00:14:27.450\nare attached to it.\n\n298\n00:14:27.450 --> 00:14:30.590\nSo it makes things a lot easier to manage\nwhen you have a bunch of connections with\n\n299\n00:14:30.590 --> 00:14:31.610\nthe same settings.\n\n300\n00:14:31.610 --> 00:14:33.840\nNow, if you've got connections\nto five different ISPs, and\n\n301\n00:14:33.840 --> 00:14:36.780\nfive different sets of settings,\nthis isn't gonna help you at all, right?\n\n302\n00:14:36.780 --> 00:14:38.060\nBut for internal.\n\n303\n00:14:38.060 --> 00:14:40.290\nOr, like, interior BGP or iBGP.\n\n304\n00:14:40.290 --> 00:14:43.730\nWith that one, a lot of times, we do have\nthe exact same settings used over and\n\n305\n00:14:43.730 --> 00:14:45.200\nover and over again,\nespecially is full mesh.\n\n306\n00:14:45.200 --> 00:14:47.500\nAnd it gets to be really helpful, right?\n\n307\n00:14:47.500 --> 00:14:50.630\nLet me show you guys how a peer group\nworks, because they're pretty useful and\n\n308\n00:14:50.630 --> 00:14:52.030\nthey're pretty neat, alright.\n\n309\n00:14:52.030 --> 00:14:55.500\nSo what I'm going to do is jump\nover to my headquarters router.\n\n310\n00:14:56.640 --> 00:15:02.373\nAnd on my headquarters router I'm going to\njump into config, and get into BGP 65,000.\n\n311\n00:15:02.373 --> 00:15:02.952\nOkay.\n\n312\n00:15:02.952 --> 00:15:05.160\nNow if I wanted to set up my neighbors,\n\n313\n00:15:05.160 --> 00:15:07.605\nI could start saying things like neighbor,\nIP.\n\n314\n00:15:07.605 --> 00:15:14.790\nRemote-as and so on, neighbor IP\npassword whatever and so on right?\n\n315\n00:15:14.790 --> 00:15:17.800\nBut when I do that it's tying\nit to just that neighbor.\n\n316\n00:15:17.800 --> 00:15:22.050\nSo instead I'm going to create\na peer group I'm gonna say neighbor,\n\n317\n00:15:23.070 --> 00:15:26.460\nand instead of an IP address,\nI'm gonna type in a name.\n\n318\n00:15:26.460 --> 00:15:30.394\nAnd so for my name,\nI might call mine branch-office.\n\n319\n00:15:30.394 --> 00:15:32.760\nSo that's gonna be the name.\n\n320\n00:15:32.760 --> 00:15:36.650\nNow normally, it expects an IP address\nhere so I need to make sure it understands\n\n321\n00:15:36.650 --> 00:15:40.080\nwhat I'm doing, and\nthen we would do that is by saying peer-.\n\n322\n00:15:40.080 --> 00:15:41.020\nGroup.\n\n323\n00:15:41.020 --> 00:15:41.620\nOkay.\n\n324\n00:15:41.620 --> 00:15:46.350\nSo it knows that I'm going to create\na peer group called branch dash office.\n\n325\n00:15:46.350 --> 00:15:48.430\nThis name can be whatever you want.\n\n326\n00:15:48.430 --> 00:15:52.200\nBut peer group, that's the key identifier\nthat let's it know that this is not\n\n327\n00:15:52.200 --> 00:15:54.560\na neighbor itself but more of a template.\n\n328\n00:15:54.560 --> 00:15:55.573\nAll right.\nAnd from here,\n\n329\n00:15:55.573 --> 00:15:56.960\nI can start to go through and\n\n330\n00:15:56.960 --> 00:16:01.440\ndefine all the other different settings\nthat I want to be tied to those neighbors.\n\n331\n00:16:01.440 --> 00:16:08.981\nSo I can say.\nneighbor branch-office remote-as 65000.\n\n332\n00:16:08.981 --> 00:16:10.250\nAll right.\n\n333\n00:16:10.250 --> 00:16:13.300\nIf I'm doing IBGP it's interior,\neverybody I'm connected to,\n\n334\n00:16:13.300 --> 00:16:17.520\nis going to be in my as so\nI can set that and\n\n335\n00:16:17.520 --> 00:16:24.540\nmaybe I want to do\na Update-source Ethernet0/0.\n\n336\n00:16:24.540 --> 00:16:26.390\nRight?\nWhen I send them updates I want it to\n\n337\n00:16:26.390 --> 00:16:27.720\nshow as being that IP.\n\n338\n00:16:27.720 --> 00:16:30.680\nMaybe I wanna do some next hop self.\n\n339\n00:16:30.680 --> 00:16:31.420\nRight?\n\n340\n00:16:31.420 --> 00:16:34.540\nSo that they don't have\nto see the external IP.\n\n341\n00:16:34.540 --> 00:16:38.150\nThey can see my IP for\nthe way to get out of the network.\n\n342\n00:16:38.150 --> 00:16:39.530\nSo I can attach that here.\n\n343\n00:16:39.530 --> 00:16:40.930\nMaybe I want to do a password, right.\n\n344\n00:16:40.930 --> 00:16:44.780\nI'm going to be doing password based\nauthentication, and so I set a password.\n\n345\n00:16:44.780 --> 00:16:49.230\nThese are all things that I would normally\nbe setting on the individual neighbor.\n\n346\n00:16:49.230 --> 00:16:51.700\nBut by attaching them\nhere to this peer group,\n\n347\n00:16:51.700 --> 00:16:54.200\nit makes where I can do\nsomething really neat.\n\n348\n00:16:54.200 --> 00:16:57.490\nNow when I go to define my neighbors,\nI can just do something like this,\n\n349\n00:16:57.490 --> 00:17:02.440\nI can say, neighbor and then the IP\naddress of the neighbor I wanna connect\n\n350\n00:17:02.440 --> 00:17:04.940\nto, like this is branch one,\n192.168.0.2 is branch one, and\n\n351\n00:17:04.940 --> 00:17:09.806\ninstead of having to provide all those\ndifferent options, I can just say,\n\n352\n00:17:09.806 --> 00:17:14.840\npeer-group and then branch-office.\n\n353\n00:17:14.840 --> 00:17:15.510\nAll right.\n\n354\n00:17:15.510 --> 00:17:18.140\nSo it knows,\ndon't inspect the individual settings.\n\n355\n00:17:18.140 --> 00:17:21.450\nAlthough you could still do it, you could\noverride your peer group if you want by\n\n356\n00:17:21.450 --> 00:17:23.500\nassigning stuff right here\non the individual user.\n\n357\n00:17:23.500 --> 00:17:25.730\nBut I'm saying use that peer group and\n\n358\n00:17:25.730 --> 00:17:28.290\nnow it's gonna get all those\nsettings from up there.\n\n359\n00:17:28.290 --> 00:17:31.090\nAnd I can go and\ndefine my other two branches.\n\n360\n00:17:31.090 --> 00:17:32.980\nJust by changing that IP address.\n\n361\n00:17:32.980 --> 00:17:36.340\nThey're all on the same AS they're\nall using the same password.\n\n362\n00:17:36.340 --> 00:17:40.210\nIf they were using different passwords,\nlet's say that yeah the AS is the same,\n\n363\n00:17:40.210 --> 00:17:43.210\nthe update source is the same,\nnext top self that's the same.\n\n364\n00:17:43.210 --> 00:17:45.170\nWe could You can leave those there and\n\n365\n00:17:45.170 --> 00:17:51.120\nthen we can take somebody like just branch\n4 and I can say password, whatever.\n\n366\n00:17:51.120 --> 00:17:54.170\nYou can still do settings on\nthe individual neighbor if you want but\n\n367\n00:17:54.170 --> 00:17:56.370\nit's going to load the peer\ngroup settings first and\n\n368\n00:17:56.370 --> 00:17:58.970\nthen the individual settings\ncan override it if need be.\n\n369\n00:17:58.970 --> 00:18:04.300\nBut by doing it this way we quickly and\neasily get that configuration in place,\n\n370\n00:18:04.300 --> 00:18:08.430\nit's that having to do it over and over\nand over which does get really tiresome.\n\n371\n00:18:08.430 --> 00:18:09.020\nAll right.\n\n372\n00:18:09.020 --> 00:18:12.280\nAnd so now that that's set,\nlet me go, I shut that interface off\n\n373\n00:18:12.280 --> 00:18:15.480\nbecause [LAUGH] if you've got the other\nbranches configured and asking for\n\n374\n00:18:15.480 --> 00:18:18.690\na password, you start getting spammed with\nall these password error messages, so\n\n375\n00:18:18.690 --> 00:18:20.480\nI shut the interface off\nthat connects to them.\n\n376\n00:18:20.480 --> 00:18:24.960\nBut basically I've got all these settings\nin place and now I can do a no shutdown\n\n377\n00:18:24.960 --> 00:18:28.630\nand assuming I got it all right\n[LAUGH] it should come up.\n\n378\n00:18:28.630 --> 00:18:30.910\nWe'll see here if I got like\na password wrong or something.\n\n379\n00:18:30.910 --> 00:18:34.390\nBut, oh, I see OSPF starting to come up,\nbut we'll give it a moment here and\n\n380\n00:18:34.390 --> 00:18:35.060\nwe'll start to see.\n\n381\n00:18:35.060 --> 00:18:37.800\nOh, actually right here,\nbgp neighbor up, right?\n\n382\n00:18:37.800 --> 00:18:40.210\nSo those neighbor adjacencies\nare starting to come up and\n\n383\n00:18:40.210 --> 00:18:43.860\nthey're pulling those settings from\nwhat I defined in the peer group.\n\n384\n00:18:43.860 --> 00:18:49.110\nSo if I do a show ip bgp summary,\nthere's those neighbors all in AS 65,000,\n\n385\n00:18:49.110 --> 00:18:52.690\nall up and happy, all pushing that data.\n\n386\n00:18:52.690 --> 00:18:55.620\nAll done in just a very\nsimple series of commands.\n\n387\n00:18:55.620 --> 00:18:59.290\nLet's pull that config back up so\nwe can see what that looks like.\n\n388\n00:18:59.290 --> 00:19:04.100\nWhen we look at the config,\nwe went into router BGP 65000 and\n\n389\n00:19:04.100 --> 00:19:09.200\nthen we defined all the peer-group\nsettings, Right here,\n\n390\n00:19:09.200 --> 00:19:12.640\nall in one big batch, and the cool thing\nhere is that I want to go and update that.\n\n391\n00:19:12.640 --> 00:19:15.270\nLet's say I decide to change\nthe password on all my routers.\n\n392\n00:19:15.270 --> 00:19:19.130\nI can just come here and\nchange the password on the peer group, and\n\n393\n00:19:19.130 --> 00:19:21.330\nnow it's automatically changed for\nall these guys.\n\n394\n00:19:21.330 --> 00:19:23.890\nI don't have to go to each\nindividual neighbor and set those.\n\n395\n00:19:23.890 --> 00:19:27.420\nWell, I do still have to go to the other\nneighbors to set it on their side, too.\n\n396\n00:19:27.420 --> 00:19:29.300\nBut if I've got a peer group to find for\nthem and\n\n397\n00:19:29.300 --> 00:19:32.680\nI'm doing full mesh,\nanytime I add a new router I just go and\n\n398\n00:19:32.680 --> 00:19:36.570\nadd that that neighbor is tied to\nthat peer group and it's done.\n\n399\n00:19:36.570 --> 00:19:39.965\nSo it makes administering multiple\nsystems much, much more simple.\n\n400\n00:19:39.965 --> 00:19:41.835\nNow Don,\nwe had a question in our chat room.\n\n401\n00:19:41.835 --> 00:19:44.735\nThat asks about is there a way with BGP\nto be able to actually be able to set\n\n402\n00:19:44.735 --> 00:19:46.055\nmultiple passwords?\n\n403\n00:19:46.055 --> 00:19:48.905\nLike where one can actually be accepted or\nthe other one can be accepted?\n\n404\n00:19:48.905 --> 00:19:50.565\n>> Unfortunately there really isn't.\n\n405\n00:19:50.565 --> 00:19:53.005\nThere's a couple of ways\nto work around that but\n\n406\n00:19:53.005 --> 00:19:57.635\nthere's not a key chain functionality\nlike what you might be used to.\n\n407\n00:19:58.940 --> 00:20:00.490\nThere is a few ways to work around it.\n\n408\n00:20:00.490 --> 00:20:01.040\nAll right.\n\n409\n00:20:01.040 --> 00:20:02.840\nThere is brief period of time,\n\n410\n00:20:02.840 --> 00:20:06.720\nbased on timers where you can change the\npassword and not have the links go down.\n\n411\n00:20:06.720 --> 00:20:10.000\nSo if you can get your ISP on the phone,\nor whoever is on the other side, and\n\n412\n00:20:10.000 --> 00:20:14.860\nchange them within like 10 seconds it'll\nusually survive that and you'll be okay.\n\n413\n00:20:14.860 --> 00:20:18.870\nbut another option is, I've seen this\ndone several different ways, but\n\n414\n00:20:18.870 --> 00:20:24.770\ninstead of peering, From my external\nIP to the external IP of my neighbor,\n\n415\n00:20:24.770 --> 00:20:27.160\nyou can create loopbacks on your neighbor.\n\n416\n00:20:27.160 --> 00:20:29.270\nAnd you can peer between the loopbacks.\n\n417\n00:20:29.270 --> 00:20:30.080\nAll right?\n\n418\n00:20:30.080 --> 00:20:33.250\nAnd then what you can do is,\nyou can create two loopbacks.\n\n419\n00:20:33.250 --> 00:20:34.610\nOne loopback that's Active and\n\n420\n00:20:34.610 --> 00:20:37.080\none loop back that's got\nyour next set of passwords.\n\n421\n00:20:37.080 --> 00:20:40.340\nAnd so you can apply a different password\nto one loop back knowing the other loop\n\n422\n00:20:40.340 --> 00:20:41.570\nback is still active.\n\n423\n00:20:41.570 --> 00:20:43.750\nAnd then that way, you know,\nyou kinda go through that change and\n\n424\n00:20:43.750 --> 00:20:46.740\nyou've always got at least one link that's\nup and you still learn your routes and\n\n425\n00:20:46.740 --> 00:20:47.650\nyou don't get any down time.\n\n426\n00:20:47.650 --> 00:20:48.700\nAll right.\n\n427\n00:20:48.700 --> 00:20:52.220\nIf you go that route,\nlet me just give you one word of caution.\n\n428\n00:20:52.220 --> 00:20:54.319\nWhen you pier between loop back addresses.\n\n429\n00:20:55.400 --> 00:20:57.280\nEBGP, like IBGP doesn't care.\n\n430\n00:20:57.280 --> 00:20:58.650\nIBGP'll do whatever, right.\n\n431\n00:20:58.650 --> 00:21:00.130\nLet's pull up my diagram for a second.\n\n432\n00:21:00.130 --> 00:21:02.650\nIBGP is the Wild West,\nyou can do whatever you want there.\n\n433\n00:21:02.650 --> 00:21:04.720\nPeer from loop backs,\nit doesn't care right.\n\n434\n00:21:04.720 --> 00:21:09.770\nBut EBGP has a very strict rule,\nwhich says EBGP\n\n435\n00:21:09.770 --> 00:21:14.340\nhas to be done between two peers\nthat are directly connected.\n\n436\n00:21:14.340 --> 00:21:17.740\nSo it wants me to connect from\nthe IP address on this interface,\n\n437\n00:21:17.740 --> 00:21:19.510\nto the IP address on this interface.\n\n438\n00:21:19.510 --> 00:21:20.110\nRight.\n\n439\n00:21:20.110 --> 00:21:22.220\nIf you peer to the loopbacks,\n\n440\n00:21:22.220 --> 00:21:24.770\nyou're not peering between the IPs\non these interfaces here, are you?\n\n441\n00:21:24.770 --> 00:21:28.420\nYou're peering between an IP that's\nfloating on the back plane here and\n\n442\n00:21:28.420 --> 00:21:30.390\nan IP that's floating\non the back plane here.\n\n443\n00:21:30.390 --> 00:21:36.310\nSo if you do that, it's considered\nto be 2 hops away, not 1 hop away.\n\n444\n00:21:36.310 --> 00:21:38.320\nNot 1 just jump right across the line.\n\n445\n00:21:38.320 --> 00:21:41.660\nYou're going to jump across the line and\njump to the loopback...\n\n446\n00:21:41.660 --> 00:21:42.780\nTwo hops.\n\n447\n00:21:42.780 --> 00:21:43.320\nRight.\n\n448\n00:21:43.320 --> 00:21:46.840\nSo it breaks the rules and\nit'll break EBPG.\n\n449\n00:21:46.840 --> 00:21:48.600\nSo it'll stop that peer from working.\n\n450\n00:21:48.600 --> 00:21:52.370\nSo if you're going to do that, if you're\ngoing peer two of the loop backs,\n\n451\n00:21:52.370 --> 00:21:54.710\nthen there's an extra\ncommand you need to add.\n\n452\n00:21:54.710 --> 00:21:57.850\nAnd we don't need it with IBPG, in fact,\nit probably won't even let me do it.\n\n453\n00:21:57.850 --> 00:21:59.160\nSo let me create a fake neighbor.\n\n454\n00:22:01.000 --> 00:22:03.000\nSo let's say I had a neighbor.\n\n455\n00:22:03.000 --> 00:22:07.400\nThat was, I don't know, 172.16.0.12.\n\n456\n00:22:07.400 --> 00:22:11.460\nBecause it's a loopback, right?\n\n457\n00:22:11.460 --> 00:22:13.760\nI'd have to have a route\nto be able to get to it but\n\n458\n00:22:13.760 --> 00:22:16.500\nit'll usually be some fake\nIP that's assigned to it.\n\n459\n00:22:16.500 --> 00:22:18.600\nAnd I say remote-as 300, right?\n\n460\n00:22:18.600 --> 00:22:20.720\nThat's who I'm connecting to.\n\n461\n00:22:20.720 --> 00:22:24.440\nBut this is a loopback and I know I've\ngotta go through one hop to get to it.\n\n462\n00:22:24.440 --> 00:22:31.070\nSo then what I need to do is I need\nto add ebgp-multihop to the end.\n\n463\n00:22:31.070 --> 00:22:31.980\nOkay?\n\n464\n00:22:31.980 --> 00:22:34.690\nAnd if you do that,\nit turns off the rule and\n\n465\n00:22:34.690 --> 00:22:36.970\nit lets you jump that\nextra hop to peer up.\n\n466\n00:22:36.970 --> 00:22:40.760\nNow if you run it like this If I remember\nright, the default is something like 15 or\n\n467\n00:22:40.760 --> 00:22:42.790\n16 hops, which is a little dangerous,\n\n468\n00:22:42.790 --> 00:22:45.140\nbecause it leaves you up\nto potential spoofing.\n\n469\n00:22:45.140 --> 00:22:49.150\n>> Two. [LAUGH] >> Oh,\nthe maximum is 255, I did not know that.\n\n470\n00:22:49.150 --> 00:22:50.360\nThat's huge.\n\n471\n00:22:50.360 --> 00:22:52.440\nI usually set it to two,\nright, because I know,\n\n472\n00:22:52.440 --> 00:22:54.890\nI'm going to a loop back\nthat's two hops away, right?\n\n473\n00:22:54.890 --> 00:22:55.950\nSo by setting it to two,\n\n474\n00:22:55.950 --> 00:22:58.930\nif somebody tries to spoof even\nthree hops away it's not gonna work.\n\n475\n00:22:58.930 --> 00:23:00.960\nThat gives us a little bit\nof a boundary to that.\n\n476\n00:23:00.960 --> 00:23:02.720\nSo EBGP multi-hop,\n\n477\n00:23:02.720 --> 00:23:07.180\nyou don't need it to IBGP cuz it knows the\ninterior protocols to help you get there.\n\n478\n00:23:07.180 --> 00:23:10.110\nBut with EBGP it assumes you\ndon't have interior protocols.\n\n479\n00:23:10.110 --> 00:23:12.000\nIt's E-BGP.\n\n480\n00:23:12.000 --> 00:23:13.420\nSo you gotta do this to make it happen.\n\n481\n00:23:13.420 --> 00:23:16.790\nNow, That's one reason you\nmight peer to a loopback\n\n482\n00:23:16.790 --> 00:23:19.900\nbecause you can create multiple loopbacks\nand change passwords on one and\n\n483\n00:23:19.900 --> 00:23:23.680\nthe other is still reliable, so you go to\nremove the other and have the ability.\n\n484\n00:23:23.680 --> 00:23:25.610\nThere is one other reason.\n\n485\n00:23:25.610 --> 00:23:31.200\nIf I have more than one connection to\nthe ISP and I am doing direct peers\n\n486\n00:23:31.200 --> 00:23:35.730\non the interface and\nthe interface goes down, what happens?\n\n487\n00:23:35.730 --> 00:23:37.800\nI lose the peer right?\n\n488\n00:23:37.800 --> 00:23:39.840\nAnd if I have two links and\n\n489\n00:23:39.840 --> 00:23:43.950\nI peer to that neighbor BGP doesn't do\nload balance its gonna pick one of them.\n\n490\n00:23:43.950 --> 00:23:45.300\nSo I don't get the advantage.\n\n491\n00:23:45.300 --> 00:23:50.210\nSo instead of peering based on the link\nI could peer based on loopbacks and\n\n492\n00:23:50.210 --> 00:23:53.600\nthe loopbacks I would basically say\nwhatever way I could get to the loopback.\n\n493\n00:23:53.600 --> 00:23:57.200\nAnd so under the hood I might have Cisco\nExpress porting load balancing across\n\n494\n00:23:57.200 --> 00:24:02.340\nthe two lines or OSPF or EIGRP or\nwhatever balancing across those lines.\n\n495\n00:24:02.340 --> 00:24:04.060\nAnd now I'm just peering\nto a loop back address.\n\n496\n00:24:04.060 --> 00:24:06.890\nAnd if one line fails,\nBGP doesn't even notice.\n\n497\n00:24:06.890 --> 00:24:09.680\nIt's just going over the other line,\nwe don't even see it happen.\n\n498\n00:24:09.680 --> 00:24:13.090\nSo that's another reason why you might\nchoose to peer to a loop back address,\n\n499\n00:24:13.090 --> 00:24:15.170\ninstead of peering to\na physical interface.\n\n500\n00:24:15.170 --> 00:24:15.910\nOn IBGP,\n\n501\n00:24:15.910 --> 00:24:20.070\nthat's fine, on EGBP, we just have to\nremember to extend the hop distance.\n\n502\n00:24:20.070 --> 00:24:21.200\nRight?\nBecause the hop distance\n\n503\n00:24:21.200 --> 00:24:23.160\nby default is one,\nit's got to be your direct neighbor.\n\n504\n00:24:25.130 --> 00:24:25.680\nAll right.\n\n505\n00:24:25.680 --> 00:24:31.190\nAnd if you're peering to their loop back\nand they're peering to your loop back.\n\n506\n00:24:31.190 --> 00:24:32.220\nAll right.\n\n507\n00:24:32.220 --> 00:24:35.160\nNow things start to get a little bit weird\nbecause then you have to do the update\n\n508\n00:24:35.160 --> 00:24:38.150\nsource which I think you guys have seen me\nset the update source command every time.\n\n509\n00:24:38.150 --> 00:24:39.990\nI just kinda got in\nthe habit of doing that.\n\n510\n00:24:39.990 --> 00:24:41.810\nIf your update source is a loop back and\n\n511\n00:24:41.810 --> 00:24:45.660\nyou're connecting to somebody else's loop\nback, then it's actually Three hops.\n\n512\n00:24:45.660 --> 00:24:46.170\nRight?\n\n513\n00:24:46.170 --> 00:24:47.690\nYour loopback to your interface.\n\n514\n00:24:47.690 --> 00:24:49.120\nYour interface to their interface.\n\n515\n00:24:49.120 --> 00:24:50.340\nTheir interface to their loopback.\n\n516\n00:24:50.340 --> 00:24:53.500\nSo, you'd need to set that multiopt\nto be three, in that scenario.\n\n517\n00:24:53.500 --> 00:24:55.480\nSo you might have to kinda\nfidget around with it a bit.\n\n518\n00:24:57.160 --> 00:25:00.050\nAll right, so\nif you Good question, though.\n\n519\n00:25:00.050 --> 00:25:00.700\nYep.\nAll right.\n\n520\n00:25:00.700 --> 00:25:02.580\nOh, shoot.\n[LAUGH] This is what I get for\n\n521\n00:25:02.580 --> 00:25:03.860\nnot looking at the clock.\n\n522\n00:25:03.860 --> 00:25:05.760\nSo, I've got some more stuff\nthat I wanted to talk about.\n\n523\n00:25:05.760 --> 00:25:07.870\nWe haven't even touched IPv6 yet.\n\n524\n00:25:07.870 --> 00:25:11.430\nWe've been doing everything in IPv4 so\nI definitely wanna tackle that.\n\n525\n00:25:11.430 --> 00:25:13.400\nBut Ronnie,\nwhat all did I get through today?\n\n526\n00:25:13.400 --> 00:25:15.050\nWe did passwords, right?\n\n527\n00:25:15.050 --> 00:25:15.650\n>> We did, all that stuff.\n\n528\n00:25:15.650 --> 00:25:17.290\n>> Which is communication.\n\n529\n00:25:17.290 --> 00:25:18.390\nWe did pure roots, right?\n\n530\n00:25:18.390 --> 00:25:20.280\nBulk configurations done simple.\n\n531\n00:25:20.280 --> 00:25:24.350\nAnd then lastly we did a little bit extra\nthere on like puring the loop backs and\n\n532\n00:25:24.350 --> 00:25:26.410\nEGBT multi hop, good stuff to know.\n\n533\n00:25:26.410 --> 00:25:31.340\nSo be aware of those things, and\nstay tuned for now the eminent part four.\n\n534\n00:25:31.340 --> 00:25:33.640\nThat's gonna happen,\ncuz I gotta get to IPv6 for this one.\n\n535\n00:25:33.640 --> 00:25:35.750\nSo we'll pick that up next time.\n\n536\n00:25:35.750 --> 00:25:36.620\n>> All right, so for\n\n537\n00:25:36.620 --> 00:25:39.810\nBGP remember that there's a lot\nof configuration for us to do.\n\n538\n00:25:39.810 --> 00:25:43.430\nAnd if you have only been working\nwith internal gateway protocols\n\n539\n00:25:43.430 --> 00:25:47.270\nThis is where it becomes much different so\nmake sure you pay attention.\n\n540\n00:25:47.270 --> 00:25:50.200\nRemember that they do give you\na lot of information, right,\n\n541\n00:25:50.200 --> 00:25:53.650\nwhen you start working with multiple\nrouters and Don showed us how would you\n\n542\n00:25:53.650 --> 00:25:57.610\nuse peer groups to configure one and all\nof that should just pop the gates out to\n\n543\n00:25:57.610 --> 00:26:00.980\nthe other one as well and then we took\na look at basic configuration here.\n\n544\n00:26:00.980 --> 00:26:03.430\nAnd that about wraps it up for\nour show today.\n\n545\n00:26:03.430 --> 00:26:04.420\nI've been your host, Ronnie Wong.\n\n546\n00:26:04.420 --> 00:26:05.510\n>> And I'm Don Pezet.\n\n547\n00:26:05.510 --> 00:26:06.570\n>> And we'll see you next time.\n\n548\n00:26:06.570 --> 00:26:12.590\n[MUSIC]\n\n",
          "vimeoId": "138123194"
        },
        {
          "description": "BGP was written to route the internet, which as a whole is expansive and with IPv4 networks is also expansive, but BGP is also flexible enough to work with other protocols like IPv6. Viewers will hear discussions on how BGP Address Families can be used to allow BGP to route for protocols beyond the default of IPv4 and see demonstrations for various \"show\" commands that can be used to monitor and troubleshoot BGP.",
          "length": "1355",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/ccnproute/cisco-ccnproute300101-3-30-border_gateway_protocol_pt4-090215-1.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/ccnproute/cisco-ccnproute300101-3-30-border_gateway_protocol_pt4-090215-1-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/ccnproute/cisco-ccnproute300101-3-30-border_gateway_protocol_pt4-090215-1-sm.jpg",
          "title": "Border Gateway Protocol Part 4",
          "transcript": "WEBVTT\n\n1\n00:00:10.560 --> 00:00:13.630\nAlright, welcome to another\ngreat day here on ITProTV.\n\n2\n00:00:13.630 --> 00:00:16.940\nWe are taking a look at CCNP route today.\n\n3\n00:00:16.940 --> 00:00:20.340\nRemember, if you're getting ready for the\nexam, this is the place you want to be.\n\n4\n00:00:20.340 --> 00:00:21.640\nI'm your host Ronnie Wong, and\n\n5\n00:00:21.640 --> 00:00:25.350\nhere with us to continue onto\nI think part 4 is Mr....\n\n6\n00:00:25.350 --> 00:00:26.610\nDon Pezet, how's it going?\n\n7\n00:00:26.610 --> 00:00:27.400\n>> It's going great Ron.\n\n8\n00:00:27.400 --> 00:00:30.370\nAre you ready for\nthe never-ending BGP flow of knowledge?\n\n9\n00:00:30.370 --> 00:00:33.030\nWe are going to be wrapping it up in this\nepisode though, because the last thing\n\n10\n00:00:33.030 --> 00:00:38.150\nthat I've gotta talk about is using\nBGP with protocols other than IPv4.\n\n11\n00:00:38.150 --> 00:00:41.080\nNow, this is kind of a strange\none because when BGP was written,\n\n12\n00:00:41.080 --> 00:00:44.000\nit was written for\na very specific purpose, the internet.\n\n13\n00:00:44.000 --> 00:00:46.590\nAnd the internet is big, it's massive.\n\n14\n00:00:46.590 --> 00:00:52.060\nAnd it's massive with IPv4 networks and\nso BGP was written for IPv4.\n\n15\n00:00:52.060 --> 00:00:55.020\nWell, BGP is fortunately\nactually flexible enough that\n\n16\n00:00:55.020 --> 00:00:57.470\nit can be made to work\nwith other protocols.\n\n17\n00:00:57.470 --> 00:01:01.420\nAnd so it just like the other ones\nhas been extended as for IPv6.\n\n18\n00:01:01.420 --> 00:01:03.820\nBut it's definitely\na different line of thinking.\n\n19\n00:01:03.820 --> 00:01:08.180\nAnd when we look at things like EIGRP or\n\n20\n00:01:08.180 --> 00:01:11.320\nOSPF where there's two completely\ndifferent sets of commands,\n\n21\n00:01:11.320 --> 00:01:15.270\ntwo completely different processes\nthat we run, BGP is not like that.\n\n22\n00:01:15.270 --> 00:01:20.480\nYou still have your regular, run of\nthe mill BGP process that you're used to.\n\n23\n00:01:20.480 --> 00:01:23.620\nBut now it supports them at\ndifferent addresses, alright?\n\n24\n00:01:23.620 --> 00:01:26.880\nNow, when you get in and configure BGP,\nlike we've been doing here\n\n25\n00:01:26.880 --> 00:01:30.000\nin my environment, let's take\na look at my headquarters router.\n\n26\n00:01:30.000 --> 00:01:32.520\nThis is the router I've been\nworking with in part one, part two,\n\n27\n00:01:32.520 --> 00:01:34.500\npart three of this episode,\nor this series.\n\n28\n00:01:34.500 --> 00:01:39.660\nAnd if I take a look at the configuration\nand jump down to the BGP section, right?\n\n29\n00:01:39.660 --> 00:01:41.700\nI went in and I said router BGP 65000.\n\n30\n00:01:41.700 --> 00:01:47.640\nAnd everything I've been typing, appears\nright there underneath router BGP 65000.\n\n31\n00:01:47.640 --> 00:01:49.430\nAnd it's all IPv4 stuff, right.\n\n32\n00:01:49.430 --> 00:01:54.020\nSo this is all Internet protocol version\n4, I see regular IP addresses, all right.\n\n33\n00:01:54.020 --> 00:01:58.080\nBut if I wanna add IPv6, there's some\ninteresting things that have to happen.\n\n34\n00:01:58.080 --> 00:02:04.620\nAnd some of this configuration has to get\nshifted off, Into an IPv4 kind of area.\n\n35\n00:02:04.620 --> 00:02:06.380\nAnd then a different area\nhas to be created for IPv6.\n\n36\n00:02:06.380 --> 00:02:11.580\nWe basically create like partitions inside\nof autonomous system 65,000, right?\n\n37\n00:02:11.580 --> 00:02:14.630\nOne partition for IPv4 and\none partition IPv6.\n\n38\n00:02:14.630 --> 00:02:17.390\nAnd they're treated kind of separately but\n\n39\n00:02:17.390 --> 00:02:20.570\nit is the same BGP process\nthat's powering the whole thing.\n\n40\n00:02:20.570 --> 00:02:24.370\nAnd the way we achieve this is\nthrough what we call address families.\n\n41\n00:02:24.370 --> 00:02:26.360\nThose partitions they're address families.\n\n42\n00:02:26.360 --> 00:02:29.630\nSo we create an address family for\nIPv4 and address family for\n\n43\n00:02:29.630 --> 00:02:34.410\nIPv6, and we put their configuration\ninto the particular address family.\n\n44\n00:02:34.410 --> 00:02:37.130\nNow as I flip between\nrouters during the show,\n\n45\n00:02:37.130 --> 00:02:39.930\nyou might have noticed address\nfamilies on some of the routers.\n\n46\n00:02:39.930 --> 00:02:44.030\nSome routers have them turn on by default,\nand some don't this one doesn't right?\n\n47\n00:02:44.030 --> 00:02:47.440\nSo on this one I've adjust on\na straight IPv configuration, and\n\n48\n00:02:47.440 --> 00:02:49.460\nit never mess with address family.\n\n49\n00:02:49.460 --> 00:02:54.050\nBut if I go in and tell it that\nI'm going to be supporting other\n\n50\n00:02:54.050 --> 00:02:57.300\nprotocols then it will create\nthe address families for me.\n\n51\n00:02:57.300 --> 00:02:57.800\nAll right.\n\n52\n00:02:57.800 --> 00:02:59.230\nLet me show you what I mean.\n\n53\n00:02:59.230 --> 00:03:03.460\nSo on this router if I do\na show IP interface brief\n\n54\n00:03:03.460 --> 00:03:06.360\nI can see I've got all these IPV4 address,\nright.\n\n55\n00:03:06.360 --> 00:03:10.290\nAnd if I do a show IPV6 interface brief.\n\n56\n00:03:10.290 --> 00:03:13.088\nI can see where I've got some\nIPv6 networks also, right?\n\n57\n00:03:13.088 --> 00:03:14.170\nfd00:192:168::1 and fd00:172:16::1.\n\n58\n00:03:14.170 --> 00:03:15.200\nAll right?\n\n59\n00:03:15.200 --> 00:03:22.320\nThose are my two networks that are there.\n\n60\n00:03:22.320 --> 00:03:24.170\nAnd I'm actually running OSPF.\n\n61\n00:03:24.170 --> 00:03:27.840\nIf I do like show ip protocols.\n\n62\n00:03:27.840 --> 00:03:28.390\nRight.\n\n63\n00:03:28.390 --> 00:03:30.640\nI can see where I'm running\nospf right here, ospf 1.\n\n64\n00:03:30.640 --> 00:03:33.050\nAnd I'm connecting to those gateways and\n\n65\n00:03:33.050 --> 00:03:36.560\nrunning bgp 65000 to connect out to\nall my neighbors and all that, right?\n\n66\n00:03:36.560 --> 00:03:38.220\nSo those are my two protocols.\n\n67\n00:03:38.220 --> 00:03:40.359\nIf I'm gonna show my IPv6 protocols...\n\n68\n00:03:41.390 --> 00:03:44.640\nI can see I'm running OSPF for IPV6 also.\n\n69\n00:03:44.640 --> 00:03:48.840\nIf I do show IPV6 route,I'm\nlearning some OSPF routes.\n\n70\n00:03:48.840 --> 00:03:52.210\nSo I've gotta an IGP configure for it.\n\n71\n00:03:52.210 --> 00:03:57.450\nBut you'll also notice when I did\nshow IPV6 protocols BGP showed up.\n\n72\n00:03:57.450 --> 00:03:59.580\nIt showed up not once,it showed up twice.\n\n73\n00:03:59.580 --> 00:04:03.600\nThis is Unicast BGP and\nthen this is multicast BGP.\n\n74\n00:04:04.630 --> 00:04:05.520\nTwo different things.\n\n75\n00:04:05.520 --> 00:04:09.730\nAnd that's because, if we're using,\nlike VRFs and using MPLS,\n\n76\n00:04:09.730 --> 00:04:13.520\nthose multicasts have to be handled a\nlittle specially to pass over those links.\n\n77\n00:04:13.520 --> 00:04:14.620\nBut it's showing up here.\n\n78\n00:04:14.620 --> 00:04:18.140\nNow, why is it showing up here if\nI haven't configured anything for\n\n79\n00:04:18.140 --> 00:04:19.650\nit for IPV6?\n\n80\n00:04:19.650 --> 00:04:24.980\nAnd the answer is that BGP supports IPv6,\nand it's the same process between the two.\n\n81\n00:04:24.980 --> 00:04:27.850\nSo it is gonna show up here,\neven if it's unconfigured like mine is.\n\n82\n00:04:28.910 --> 00:04:32.170\nSo to let the router know we're gonna\nuse that, what we need to do is we\n\n83\n00:04:32.170 --> 00:04:36.690\nneed to get into our configuration and\nget into regular old router bpg 65000.\n\n84\n00:04:36.690 --> 00:04:43.710\nAnd we need to tell it That in\nthe past ipv4 was the default.\n\n85\n00:04:43.710 --> 00:04:44.620\nBut no longer.\n\n86\n00:04:44.620 --> 00:04:47.300\nWe're not gonna use ipv4\nas our default anymore.\n\n87\n00:04:47.300 --> 00:04:50.530\nAnd so we can say, no bgp\n\n88\n00:04:52.183 --> 00:04:56.330\nDefault ipv4-unicast.\n\n89\n00:04:56.330 --> 00:04:57.715\nAlright?\n\n90\n00:04:57.715 --> 00:05:02.005\nThat's gonna say, we still support\nIPv4 but it's not the default anymore.\n\n91\n00:05:02.005 --> 00:05:04.065\nDon't just assume that we're doing IPv4.\n\n92\n00:05:04.065 --> 00:05:06.715\nAssume that we're gonna have\nmore than one protocol.\n\n93\n00:05:07.785 --> 00:05:11.165\nNow, when that happens, notice that\nnone of my neighbors went down.\n\n94\n00:05:11.165 --> 00:05:12.865\nNothing crazy like that happened, right?\n\n95\n00:05:12.865 --> 00:05:14.155\nIt's not a significant change.\n\n96\n00:05:14.155 --> 00:05:16.250\nIt's really just a change in my config.\n\n97\n00:05:16.250 --> 00:05:22.070\nIf I do a show run and I jump down to my\nBGP section things look different now\n\n98\n00:05:22.070 --> 00:05:27.460\nokay I've got router BGP 65,000\nfollowed by global commands right\n\n99\n00:05:27.460 --> 00:05:32.620\nthese are things that were created at\nthe global level and then right after that\n\n100\n00:05:32.620 --> 00:05:37.670\nI've got an IPv4 address family okay and\nit took commands that were\n\n101\n00:05:37.670 --> 00:05:42.850\nspecific to IPv4 And it's stuck down\nhere in this address family, all right.\n\n102\n00:05:42.850 --> 00:05:43.550\nAnd it did it for me.\n\n103\n00:05:43.550 --> 00:05:44.960\nI didn't have to go and\nsort through this and\n\n104\n00:05:44.960 --> 00:05:48.240\nyou'll see actually most of my stuff\nstayed up here cuz I have that peer group.\n\n105\n00:05:48.240 --> 00:05:49.240\nIf I didn't have the peer group,\n\n106\n00:05:49.240 --> 00:05:51.730\na lot of those settings would\nhave shifted over IPv4.\n\n107\n00:05:51.730 --> 00:05:54.090\nBut you'll see no synchronization,\n\n108\n00:05:54.090 --> 00:05:58.060\nnot auto summary,\nwe've got this next hop self setting.\n\n109\n00:05:58.060 --> 00:06:02.110\nThat one jumped down to\nthe IPv4 Side of things.\n\n110\n00:06:02.110 --> 00:06:05.960\nAnd so that IPv4 address family\nwas created, and that's it.\n\n111\n00:06:05.960 --> 00:06:08.940\nNow it didn't create\nan IPv6 address family.\n\n112\n00:06:08.940 --> 00:06:11.220\nIt just created the IPv4 one\nbecause that's all I'm using.\n\n113\n00:06:11.220 --> 00:06:15.290\nSo just because I told it IPv4 isn't\nthe default anymore doesn't mean\n\n114\n00:06:15.290 --> 00:06:17.290\nthat I'm ready for the other protocols.\n\n115\n00:06:17.290 --> 00:06:19.680\nIt's me having to go in and do that.\n\n116\n00:06:19.680 --> 00:06:21.170\nBut that's an address family.\n\n117\n00:06:21.170 --> 00:06:24.515\nAnd the idea here is that\nany command specific to that\n\n118\n00:06:24.515 --> 00:06:26.240\naddress-family can do that.\n\n119\n00:06:26.240 --> 00:06:29.860\nNow one of the challenges you have in\nreal life land, is remembering all right,\n\n120\n00:06:29.860 --> 00:06:32.620\nwhat commands are global and what\ncommands are in the address-family, and\n\n121\n00:06:32.620 --> 00:06:34.540\nI will be honest with you guys\nI have a hard time remembering.\n\n122\n00:06:34.540 --> 00:06:35.100\nRight?\n\n123\n00:06:35.100 --> 00:06:38.940\nSo, my technique, As I always enter\neverything in the address family.\n\n124\n00:06:38.940 --> 00:06:41.410\nAnd if you enter a global\ncommand in the address family\n\n125\n00:06:41.410 --> 00:06:43.280\nit'll put it back in\nthe global section for you.\n\n126\n00:06:43.280 --> 00:06:45.760\nIt takes care of that for you,\nyou don't have to memorize it.\n\n127\n00:06:45.760 --> 00:06:48.470\nEven on the exam when you're doing\nthe simulations you can do it that way and\n\n128\n00:06:48.470 --> 00:06:49.900\nit'll put them back into the right spot.\n\n129\n00:06:49.900 --> 00:06:52.970\nSo you don't really have to worry about\nwhere they go as long as you always put\n\n130\n00:06:52.970 --> 00:06:54.250\nthem in the address family.\n\n131\n00:06:54.250 --> 00:06:57.220\nBut if you put a command in the global\nside it doesn't necessarily\n\n132\n00:06:57.220 --> 00:07:01.230\nknow if it needs to go to IPv6 or\nto IPv4 and that can cause a problem.\n\n133\n00:07:01.230 --> 00:07:04.380\nAnd so we want to make sure that we\njust kind of default putting things in\n\n134\n00:07:04.380 --> 00:07:06.050\nthe address family where we can.\n\n135\n00:07:06.050 --> 00:07:09.180\nAll right so right now we've got\nthe address family for IPv4.\n\n136\n00:07:09.180 --> 00:07:12.000\nI want to add IPv6 support to this router.\n\n137\n00:07:12.000 --> 00:07:15.200\nAll right so I'm going to need\nto create a new address family.\n\n138\n00:07:15.200 --> 00:07:17.230\nNow, things get a little bit tricky.\n\n139\n00:07:17.230 --> 00:07:20.140\nYou see the syntax right here,\nyou just do address-family and\n\n140\n00:07:20.140 --> 00:07:22.350\nthen the protocol you want, all right?\n\n141\n00:07:22.350 --> 00:07:26.550\nSo if I jump into my configuration,\nand I get into router bgp 65000.\n\n142\n00:07:26.550 --> 00:07:31.700\nSo here I am into bgp,\nmy regular old bgp, and I\n\n143\n00:07:31.700 --> 00:07:37.060\ncan say address-family And then a question\nmark, and you'll see what we support.\n\n144\n00:07:37.060 --> 00:07:39.150\nWe've got IPV4, right?\n\n145\n00:07:39.150 --> 00:07:41.400\nThat's the one that we've already got.\n\n146\n00:07:41.400 --> 00:07:41.970\nAnd we've got IPV6.\n\n147\n00:07:41.970 --> 00:07:45.320\nNow, you'll see some other ones,\nlike layer two VPNs, NSAV, VPN v4, VPN v6.\n\n148\n00:07:45.320 --> 00:07:49.850\nThese are all for tunneling protocols,\nand are usually used with VRFs and MPLS.\n\n149\n00:07:49.850 --> 00:07:50.430\nRight?\nSo\n\n150\n00:07:50.430 --> 00:07:54.130\nbuilding up those connections across\nan ISP network to hide the ISP network.\n\n151\n00:07:54.130 --> 00:07:55.826\nSo I'm not gonna worry\nabout those right now.\n\n152\n00:07:55.826 --> 00:07:58.061\nI'm worried about these two,\nipv4 and ipv6.\n\n153\n00:07:58.061 --> 00:07:58.861\nAlright?\n\n154\n00:07:58.861 --> 00:08:04.524\nWell if you do ipv4 And press Enter,\nit assumes you're talking about unicast.\n\n155\n00:08:04.524 --> 00:08:08.055\nBut, if you do a question mark,\nyou'll see where there's multicast also.\n\n156\n00:08:08.055 --> 00:08:13.164\nRight, or if we do IPv6 and press Enter,\nwell it assumes it's unicast.\n\n157\n00:08:13.164 --> 00:08:18.220\nBut you can do multicast there too, right,\nso depending on which one we're handling.\n\n158\n00:08:18.220 --> 00:08:22.480\nWell because BGP is a stateful protocol,\nright, it uses a TCP connection to\n\n159\n00:08:22.480 --> 00:08:24.950\nthe other side, we're normally\nconcerned about unicast, right?\n\n160\n00:08:24.950 --> 00:08:26.460\nThat's the one that we worry about.\n\n161\n00:08:26.460 --> 00:08:28.790\nBut if we're handling multicast routes,\n\n162\n00:08:28.790 --> 00:08:32.020\nthen we'll want to make sure\nthat we do multicast also.\n\n163\n00:08:32.020 --> 00:08:34.360\nSo in my scenario,\nI just want to do IPv6 unicast.\n\n164\n00:08:36.320 --> 00:08:40.230\nOn some of the older IOSs,\nit's required that you type this.\n\n165\n00:08:40.230 --> 00:08:43.320\nOn a lot of the newer ones you can leave\nthat off and it'll default to unicast.\n\n166\n00:08:43.320 --> 00:08:44.610\nI've just gotten in\nthe habit of typing it.\n\n167\n00:08:44.610 --> 00:08:46.070\nIt doesn't hurt to type it.\n\n168\n00:08:46.070 --> 00:08:49.390\nAnd if it is the default, it'll just\nleave that little part out of the config.\n\n169\n00:08:49.390 --> 00:08:50.867\nBut now I'm in the new address family.\n\n170\n00:08:50.867 --> 00:08:53.211\nAnd you'll see config-router-af.\n\n171\n00:08:53.211 --> 00:08:57.000\nI'm in the address family, and\nI can start to type commands, all right?\n\n172\n00:08:57.000 --> 00:09:00.400\nSome commands like neighbor commands,\nif you do neighbor and\n\n173\n00:09:00.400 --> 00:09:03.060\nIP remote-as and an AS number.\n\n174\n00:09:03.060 --> 00:09:04.850\nThat's a global command, all right?\n\n175\n00:09:04.850 --> 00:09:08.130\nBut I'm gonna enter it right\nhere in my address family,\n\n176\n00:09:08.130 --> 00:09:09.940\nand you'll see it's not\ngonna complain about that.\n\n177\n00:09:09.940 --> 00:09:11.300\nIt's not even gonna take me\nout of the address family.\n\n178\n00:09:11.300 --> 00:09:13.420\nIt'll leave me here, but\nit'll put the entry into the right place.\n\n179\n00:09:13.420 --> 00:09:16.380\nAnd that's because there's actually\ntwo commands that go along with that.\n\n180\n00:09:16.380 --> 00:09:21.740\nif I scroll back here, one command\nis actually defining the neighbor.\n\n181\n00:09:21.740 --> 00:09:24.030\nRight, so like here I define the neighbor.\n\n182\n00:09:24.030 --> 00:09:27.540\nBut the other command is\nwhere you activate it.\n\n183\n00:09:27.540 --> 00:09:29.550\nAnd the activate goes\nin the address family.\n\n184\n00:09:29.550 --> 00:09:33.149\nCuz I might want to activate it for\nIPv4 and not activate it for IPv6.\n\n185\n00:09:33.149 --> 00:09:36.430\nNow, wait a minute,\nyou might be saying hang on a second, Don.\n\n186\n00:09:36.430 --> 00:09:39.540\nIf the neighbor is an IPv4 address,\nwhy would I activate that for IPv6?\n\n187\n00:09:40.770 --> 00:09:45.740\nAnd the answer is, this neighbor,\nthat's your TCP connection for BGP.\n\n188\n00:09:46.880 --> 00:09:49.360\nIt doesn't have anything\nto do with the routes.\n\n189\n00:09:49.360 --> 00:09:53.647\nSo, I could have a IPv4 connection to\nthe router and be learning IPv6 routes.\n\n190\n00:09:53.647 --> 00:09:55.888\nYou can do that, right,\nthat's one way to go about it.\n\n191\n00:09:55.888 --> 00:09:58.880\nAll right, and you would activate\nthose neighbors inside of there.\n\n192\n00:09:58.880 --> 00:10:01.300\nOr you can build separate neighbor\nrelationships under IPv6,\n\n193\n00:10:01.300 --> 00:10:04.550\nand that's how I normally do it so\nI can clear them out individually, right?\n\n194\n00:10:04.550 --> 00:10:05.920\nIf you're troubleshooting one and\n\n195\n00:10:05.920 --> 00:10:08.840\nyou don't want to mess with the other,\nthat's why I like to keep it separate.\n\n196\n00:10:08.840 --> 00:10:11.230\nIt doesn't cost you any money\nto add more neighbors, right?\n\n197\n00:10:11.230 --> 00:10:14.020\nThat's just typing, so\nI usually go that route.\n\n198\n00:10:14.020 --> 00:10:17.612\nSo if I want to add a neighbor,\nI can come in here and\n\n199\n00:10:17.612 --> 00:10:22.844\nsay something like neighbor and\nthen fd00:192:168::2.\n\n200\n00:10:22.844 --> 00:10:24.329\nThat's the neighbor I wanna connect to.\n\n201\n00:10:24.329 --> 00:10:28.451\nAnd then remote-as 65,000, right?\n\n202\n00:10:28.451 --> 00:10:30.275\nThat's the neighbor I wanna connect to.\n\n203\n00:10:30.275 --> 00:10:34.320\nAnd I can start to add more neighbors, and\nsee how it kept me in the address family.\n\n204\n00:10:34.320 --> 00:10:36.640\nIt put that command in the global side,\nand\n\n205\n00:10:36.640 --> 00:10:39.260\nin the address family it left it in there,\nbut with activate at the end.\n\n206\n00:10:39.260 --> 00:10:41.700\nSo I'm activating that neighbor,\nand I see it just came up.\n\n207\n00:10:41.700 --> 00:10:45.160\nAnd I can add my other neighbors,\nlet me go and add in 3 and 4.\n\n208\n00:10:45.160 --> 00:10:46.890\nAnd so I can start to connect these guys.\n\n209\n00:10:46.890 --> 00:10:49.848\nThese are IBGP neighbors,\nthis would be the same with EBGP, right,\n\n210\n00:10:49.848 --> 00:10:52.160\nif I was connecting to external ones.\n\n211\n00:10:52.160 --> 00:10:55.760\nSo we're just kind of setting those up and\ngetting connected, all right?\n\n212\n00:10:55.760 --> 00:10:58.840\nSo now they're connected,\nthey're up and happy, I'm done.\n\n213\n00:10:58.840 --> 00:11:00.490\nWell there's a few other\nthings you might need to do.\n\n214\n00:11:00.490 --> 00:11:02.030\nYou might wanna redistribute, right?\n\n215\n00:11:02.030 --> 00:11:06.070\nSo you can redistribute into BGP\nfrom right here, or we can go in and\n\n216\n00:11:06.070 --> 00:11:07.810\nstart to bring in some other things.\n\n217\n00:11:07.810 --> 00:11:11.680\nI'm starting to get some no supported AFI,\nSAFI messages.\n\n218\n00:11:11.680 --> 00:11:17.600\nThese are letting me know that there's\nsome kind of synchronization or\n\n219\n00:11:17.600 --> 00:11:21.300\ndiscongruity between my router and\nthe other routers as far as\n\n220\n00:11:21.300 --> 00:11:23.610\nactually knowing how to get\nto these other networks.\n\n221\n00:11:23.610 --> 00:11:29.226\nWhat happens a lot of times is if\nyou have a router that has no,\n\n222\n00:11:29.226 --> 00:11:33.312\nwe did that, no BGB default IPv4, right.\n\n223\n00:11:33.312 --> 00:11:38.036\nSo I know that don't default to IPv4,\nuse IPv4 and IPv6, right.\n\n224\n00:11:38.036 --> 00:11:39.998\nSo when I peer up like this,\nI'm sending IPv6.\n\n225\n00:11:39.998 --> 00:11:42.158\nThe other side might not\nhave that default command.\n\n226\n00:11:42.158 --> 00:11:45.643\nAnd if it doesn't have the default\ncommand, it might still be sending\n\n227\n00:11:45.643 --> 00:11:49.670\nits IPv4 address as the next top, and\nthat can cause this kind of error message.\n\n228\n00:11:49.670 --> 00:11:52.520\nSo I'm starting to get that from two of my\nrouters out there, I probably just need to\n\n229\n00:11:52.520 --> 00:11:55.030\ngo and set that default, but\nI'm going to ignore it for right now.\n\n230\n00:11:55.030 --> 00:11:56.990\nSo, I've got those neighbors in there,\n\n231\n00:11:56.990 --> 00:11:58.780\nnow I can start to set\nsome other values in here.\n\n232\n00:11:58.780 --> 00:12:00.386\nI can say things like network.\n\n233\n00:12:00.386 --> 00:12:04.415\nI'm going to advertise a network\ninto EIGRP, so into [LAUGH]\n\n234\n00:12:04.415 --> 00:12:04.973\n>> BGP.\n\n235\n00:12:04.973 --> 00:12:06.134\n>> BGP for IPv6.\n\n236\n00:12:06.134 --> 00:12:07.411\nToo many acronyms in this show.\n\n237\n00:12:07.411 --> 00:12:09.911\nSo I'm going to advertise this network in,\nand\n\n238\n00:12:09.911 --> 00:12:14.170\nit's just like advertising a network\ninto any other routing protocol, right?\n\n239\n00:12:14.170 --> 00:12:17.360\nWe just use network and\nwe kind of punch it in here, and\n\n240\n00:12:17.360 --> 00:12:19.940\nwe specify what the subnet is on that one.\n\n241\n00:12:19.940 --> 00:12:21.720\nSo I'm going to advertise that network.\n\n242\n00:12:21.720 --> 00:12:28.104\nAnd then I've got, let's see,\n172:16::/64 is my other network.\n\n243\n00:12:28.104 --> 00:12:29.334\nSo I'm gonna advertise those in.\n\n244\n00:12:29.334 --> 00:12:33.213\nAnd so I'm gonna start advertising them\nout into BGP and sending them out to my\n\n245\n00:12:33.213 --> 00:12:36.530\nneighbors and kinda pushing that along and\ngetting it in place.\n\n246\n00:12:36.530 --> 00:12:39.680\nI could activate the neighbors if I\nwanted to also, but they should already.\n\n247\n00:12:39.680 --> 00:12:42.550\nI'll double check just to make\nsure that it's in there, right?\n\n248\n00:12:42.550 --> 00:12:45.650\nAnd when I'm done, I can type exit\nto get out of the address family and\n\n249\n00:12:45.650 --> 00:12:47.090\nnow I'm back into the parent, right?\n\n250\n00:12:47.090 --> 00:12:49.940\nNow I'm back into that\nmain BGP configuration.\n\n251\n00:12:49.940 --> 00:12:54.061\nAnd if I do a show run and\ntake a look at that bgp config, whoops.\n\n252\n00:12:54.061 --> 00:12:56.418\nIf I begin with bgp, there we go.\n\n253\n00:12:56.418 --> 00:12:59.169\nWe can see where we've got\nour global commands here,\n\n254\n00:12:59.169 --> 00:13:02.380\nand see how it moved those neighbor\ncommands to global for me?\n\n255\n00:13:02.380 --> 00:13:04.990\nSo I didn't have to remember those\nwere global, it did it for me.\n\n256\n00:13:04.990 --> 00:13:07.979\nAnd then here's my address family for\nIPv4.\n\n257\n00:13:07.979 --> 00:13:09.664\nAnd then here's my address family for\nIPv6.\n\n258\n00:13:09.664 --> 00:13:11.571\nAnd there's all those\nactivate commands and\n\n259\n00:13:11.571 --> 00:13:14.840\nthe network commands that I\nadvertised all laid right in there.\n\n260\n00:13:14.840 --> 00:13:16.730\nNow I'm pushing that data out.\n\n261\n00:13:16.730 --> 00:13:18.020\nSo we're sending that information along.\n\n262\n00:13:18.020 --> 00:13:21.780\nAnd we've got these nice, neat,\nseparate address families.\n\n263\n00:13:21.780 --> 00:13:27.610\nNow on this router I did that\nno bgp default ipv4-unicast.\n\n264\n00:13:27.610 --> 00:13:29.910\nI probably need to go and\ncheck some of my other routers.\n\n265\n00:13:29.910 --> 00:13:32.020\nI did peer up with branch 1 also.\n\n266\n00:13:32.020 --> 00:13:33.630\nAnd I didn't see the error\nmessage from branch 1, so\n\n267\n00:13:33.630 --> 00:13:34.630\nI imagine it's set up correctly.\n\n268\n00:13:34.630 --> 00:13:38.241\nSo I'm gonna go verify this configuration\nover on a router that I know is working.\n\n269\n00:13:38.241 --> 00:13:40.481\nSo [LAUGH] I'll jump over to branch 1.\n\n270\n00:13:40.481 --> 00:13:44.420\nAnd just take a look and\nmake sure this is working.\n\n271\n00:13:44.420 --> 00:13:49.920\nIf I do a show ip, or\nwait a minute, this is important.\n\n272\n00:13:49.920 --> 00:13:51.910\nI was about to make a mistake.\n\n273\n00:13:51.910 --> 00:13:54.397\nAll right, under IPv4 if I want to\nsee my neighbor list, what do I type?\n\n274\n00:13:54.397 --> 00:13:59.630\nI type show ip bgp summary, right?\n\n275\n00:13:59.630 --> 00:14:01.450\nAnd when I run that command,\nI can see my neighbors.\n\n276\n00:14:01.450 --> 00:14:04.000\nSo this router is paired\nup with headquarters.\n\n277\n00:14:04.000 --> 00:14:05.414\nGreat, I see it.\nIt's exciting, right?\n\n278\n00:14:05.414 --> 00:14:09.147\nIf I want to see my IPv6 neighbors,\n\n279\n00:14:09.147 --> 00:14:14.877\nnormally we would say show\nipv6 bgp summary, right?\n\n280\n00:14:14.877 --> 00:14:17.873\nThat's what you'd normally do for\nEIGRP and for OSPF.\n\n281\n00:14:17.873 --> 00:14:20.470\nAll right, but not for BGP.\n\n282\n00:14:20.470 --> 00:14:23.650\nAnd you might say well, good God, Cisco,\ncan't you keep anything consistent?\n\n283\n00:14:23.650 --> 00:14:26.100\nThere's a reason this time, okay.\n\n284\n00:14:26.100 --> 00:14:31.370\nIn OSPF and in EIGRP,\nwhen they created those,\n\n285\n00:14:31.370 --> 00:14:34.920\nyour process for OSPF version two and\nversion three right,\n\n286\n00:14:34.920 --> 00:14:39.000\nOSPF version two is IPv4,\nOSPF version three is IPv6.\n\n287\n00:14:39.000 --> 00:14:42.290\nOSPF version two and OSPF version three,\ncompletely separate.\n\n288\n00:14:42.290 --> 00:14:46.100\nTwo completely separate protocols running\nin two completely separate processes.\n\n289\n00:14:46.100 --> 00:14:48.010\nEven if you give them\nthe same process number,\n\n290\n00:14:48.010 --> 00:14:49.620\nyou give them both process number one.\n\n291\n00:14:49.620 --> 00:14:51.680\nThey're still two separate processes.\n\n292\n00:14:51.680 --> 00:14:53.570\nThey don't share anything in common.\n\n293\n00:14:53.570 --> 00:14:57.860\nSo we do show ip ospf neighbor or\nshow ipv6 ospf neighbor.\n\n294\n00:14:57.860 --> 00:14:58.719\nIt's two separate commands.\n\n295\n00:15:00.260 --> 00:15:02.110\nEIGRP, same thing.\n\n296\n00:15:02.110 --> 00:15:05.350\nWith EIGRP, it's modular, so\nthey wrote an IPv6 module.\n\n297\n00:15:05.350 --> 00:15:08.630\nBut the IPv6 module is completely\nseparate from the IPv4 module.\n\n298\n00:15:08.630 --> 00:15:13.677\nSo you got one EIGRP process, but\nIPv4 is running in one autonomous system,\n\n299\n00:15:13.677 --> 00:15:17.107\nand IPv6 is running in\na second autonomous system.\n\n300\n00:15:17.107 --> 00:15:18.709\nThey're two completely separate things.\n\n301\n00:15:18.709 --> 00:15:20.358\nBGP's not like that.\n\n302\n00:15:20.358 --> 00:15:22.951\nWith BGP, it's still the same process.\n\n303\n00:15:22.951 --> 00:15:26.353\nIt's still the same BGP 65,000 for\nme, right.\n\n304\n00:15:26.353 --> 00:15:28.141\nI didn't create another autonomous system.\n\n305\n00:15:28.141 --> 00:15:31.960\nI just created different addresses\ninside the existing autonomous system.\n\n306\n00:15:31.960 --> 00:15:35.768\nSo the old command is kind of broken,\nright.\n\n307\n00:15:35.768 --> 00:15:40.060\nThe old command when I\nrun show ip bgp summary,\n\n308\n00:15:40.060 --> 00:15:44.035\nit's used to only showing me IPv4 stuff.\n\n309\n00:15:44.035 --> 00:15:45.867\nAnd so Cisco had to make a decision.\n\n310\n00:15:45.867 --> 00:15:48.373\nThey said, well,\ndo we change the old command,\n\n311\n00:15:48.373 --> 00:15:51.321\nthis command that's worked\nthe same way for 20 years?\n\n312\n00:15:51.321 --> 00:15:57.530\nDo we change that, or\ndo we come up with some kind of new thing?\n\n313\n00:15:57.530 --> 00:15:59.116\nThey chose to come up with\nsome kind of new thing.\n\n314\n00:15:59.116 --> 00:16:02.080\nSo that's frustrating in a way,\nbut it makes sense.\n\n315\n00:16:02.080 --> 00:16:04.768\nThey had to do this because\nthe protocol works differently now.\n\n316\n00:16:04.768 --> 00:16:10.021\nSo, if I wanna verify this,\ninstead of doing a show ipv6 bgp summary,\n\n317\n00:16:10.021 --> 00:16:12.310\nI actually have to do show bgp.\n\n318\n00:16:13.810 --> 00:16:19.210\nAnd then from there,\nyou can say ipv6 unicast,\n\n319\n00:16:19.210 --> 00:16:22.420\nand then we can do things like summary and\nso on.\n\n320\n00:16:22.420 --> 00:16:28.230\nSo instead of show ip, we do show\nbgp ipv6, we flip it around, right?\n\n321\n00:16:28.230 --> 00:16:31.660\nAnd so this is basically a modified\nversion of that command.\n\n322\n00:16:31.660 --> 00:16:33.510\nAnd with this one, show bgp,\n\n323\n00:16:33.510 --> 00:16:38.270\nit can actually show BGP information about\nall the different address families, right?\n\n324\n00:16:38.270 --> 00:16:42.640\nBecause it's not just IPv4 and IPv6,\nthere's also those multicast, right?\n\n325\n00:16:42.640 --> 00:16:43.670\nThose come into play.\n\n326\n00:16:43.670 --> 00:16:45.453\nAnd EIGRP and OSPF,\nthey don't deal with that so\n\n327\n00:16:45.453 --> 00:16:48.020\nit's easy for them to just have\na simple flip over command.\n\n328\n00:16:48.020 --> 00:16:49.210\nBut BGP it isn't.\n\n329\n00:16:49.210 --> 00:16:55.840\nSo here can do show bgp * and\nI'll see IPv4 and IPv6 and multicast.\n\n330\n00:16:55.840 --> 00:16:57.420\nI'll see them all, right?\n\n331\n00:16:57.420 --> 00:17:02.610\nAll right in here, and then you\ncan specify like that, all, right?\n\n332\n00:17:02.610 --> 00:17:05.360\nAnd now we're gonna see all\nthe address families, and\n\n333\n00:17:05.360 --> 00:17:07.530\nwe're gonna get all that\ninformation back out.\n\n334\n00:17:07.530 --> 00:17:11.910\nAnd then if I add on summary to the end of\nthat, now I'm gonna see those neighbors.\n\n335\n00:17:11.910 --> 00:17:15.080\nAnd so notice right up here\nat the top I've got, whoops.\n\n336\n00:17:15.080 --> 00:17:19.510\nIf I can not pull my pop up connector\nwindow, there I can see an IPv4 neighbor.\n\n337\n00:17:19.510 --> 00:17:21.890\nAnd right after I've got\nthat IPv6 neighbor, right.\n\n338\n00:17:21.890 --> 00:17:24.621\nSo you can actually abandon the old\ncommand altogether, and say you know what,\n\n339\n00:17:24.621 --> 00:17:26.270\nfrom now on I'm just gonna\nuse the new command.\n\n340\n00:17:26.270 --> 00:17:29.064\nAll right, this is the new way to do it\nwhen we support multiple address families,\n\n341\n00:17:29.064 --> 00:17:31.070\nbut the old command is still there.\n\n342\n00:17:31.070 --> 00:17:36.650\nSo normally what I would run is\nshow bgp ipv6 unicast summary,\n\n343\n00:17:36.650 --> 00:17:38.650\nand that will show me my neighbors.\n\n344\n00:17:38.650 --> 00:17:41.630\nAnd I can see I've got that neighbor\nright there peered up with neighbor 1.\n\n345\n00:17:41.630 --> 00:17:43.004\nI'm not peering up with branch 2 and\n\n346\n00:17:43.004 --> 00:17:48.500\nbranch 3 cuz I must've forgotten to\ndo the IPv4 default on those guys.\n\n347\n00:17:48.500 --> 00:17:49.770\nBut I am peered up here.\n\n348\n00:17:49.770 --> 00:17:51.430\nOr actually, no, I'm on branch 1.\n\n349\n00:17:51.430 --> 00:17:53.970\nBranch 1 only peers up with headquarters\nso I expect to only see one.\n\n350\n00:17:53.970 --> 00:17:56.870\nI've got that one, and\nI am receiving some prefixes, right?\n\n351\n00:17:56.870 --> 00:17:59.180\nI put in two network commands\non headquarters, and so\n\n352\n00:17:59.180 --> 00:18:01.640\nI can see I'm receiving\nthose prefixes right here.\n\n353\n00:18:01.640 --> 00:18:05.060\nThey might not be making it into my\nrouting table, but I am receiving them.\n\n354\n00:18:05.060 --> 00:18:06.700\nWell, let's verify that.\n\n355\n00:18:06.700 --> 00:18:11.188\nIf we leave off that summary, now I'm\ngonna show my BGP database, right, but\n\n356\n00:18:11.188 --> 00:18:15.010\njust the IPv6 unicast data in\nthe database, not the whole thing.\n\n357\n00:18:15.010 --> 00:18:17.650\nI don't wanna see all the IPv4 data, too.\n\n358\n00:18:17.650 --> 00:18:21.520\nSo when I run this,\nhere's the prefixes that are coming in.\n\n359\n00:18:21.520 --> 00:18:23.890\nThis one, this is local right here.\n\n360\n00:18:23.890 --> 00:18:27.670\nBut if I look at these other two,\nsee how they've got that i before them?\n\n361\n00:18:27.670 --> 00:18:29.060\nThose are being learned from iBGP.\n\n362\n00:18:29.060 --> 00:18:31.921\nThose are the two that I'm learning from\nheadquarters, which if I didn't know,\n\n363\n00:18:31.921 --> 00:18:33.800\nI could verify right here by\nlooking at that next hop.\n\n364\n00:18:33.800 --> 00:18:37.180\nSo I'm learning those from headquarters,\nand they're coming in.\n\n365\n00:18:37.180 --> 00:18:41.320\nOne of them has a nice little asterisk\nby it that lets me know that it's good.\n\n366\n00:18:41.320 --> 00:18:43.980\nAnd it's got a greater than sign\nthat lets me know it's the best.\n\n367\n00:18:43.980 --> 00:18:46.180\nIt's making into the routing table.\n\n368\n00:18:46.180 --> 00:18:48.764\nBut this guy down here,\nI'm learning it, and\n\n369\n00:18:48.764 --> 00:18:51.920\nit's not making it into the routing table,\nokay?\n\n370\n00:18:51.920 --> 00:18:53.720\nWell, that's because I already know it,\nright?\n\n371\n00:18:53.720 --> 00:18:55.500\nI'm directly connected to this network.\n\n372\n00:18:55.500 --> 00:18:58.080\nSo I'm not gonna learn some route and\nbring it into the routing table,\n\n373\n00:18:58.080 --> 00:19:01.220\nif I've got a directly connected\nconnection that's better, right?\n\n374\n00:19:01.220 --> 00:19:07.720\nBut I could verify that by saying\nshow bgp ipv6 unicast rib-failure.\n\n375\n00:19:07.720 --> 00:19:11.090\nRight, the rib-failure's what we\nmonitored way back in, I think the.\n\n376\n00:19:11.090 --> 00:19:13.700\n>> First.\n>> First or second episode of this series.\n\n377\n00:19:13.700 --> 00:19:17.220\nBut you can go in here and actually\nsee why we're having a rib failure.\n\n378\n00:19:17.220 --> 00:19:21.020\nAnd that one's actually not even show,\noh, it's not a true rib failure, right?\n\n379\n00:19:21.020 --> 00:19:23.820\nI don't have the R beside it,\nletting me know it's a true rib failure.\n\n380\n00:19:23.820 --> 00:19:26.610\nHere in this case I just happen to\nbe directly connected to it, and so\n\n381\n00:19:26.610 --> 00:19:27.240\nit's overwriting.\n\n382\n00:19:27.240 --> 00:19:29.880\nIt's not a true failure, all right?\n\n383\n00:19:29.880 --> 00:19:32.560\nLet's see, what are some other\ncommands that we might wanna do?\n\n384\n00:19:32.560 --> 00:19:34.890\nWe saw the database, we saw the neighbors.\n\n385\n00:19:34.890 --> 00:19:36.130\nWe see the RIB-failures.\n\n386\n00:19:36.130 --> 00:19:39.420\nI mean, basically any command that you'd\nrun on under IPv4 you can run here.\n\n387\n00:19:39.420 --> 00:19:42.624\nSame thing with resetting the process,\nif you need to reset a neighbor,\n\n388\n00:19:42.624 --> 00:19:43.630\nyou do it the same way.\n\n389\n00:19:43.630 --> 00:19:45.590\nSo it can all be done from right here.\n\n390\n00:19:45.590 --> 00:19:47.220\nBut now I'm learning information.\n\n391\n00:19:47.220 --> 00:19:51.045\nAnd if I do a show ipv6 route and\nI look at my routing table, well,\n\n392\n00:19:51.045 --> 00:19:55.450\nactually I'm not going to have\nanything exciting here either.\n\n393\n00:19:55.450 --> 00:19:58.090\nThe reason I don't have anything\nexciting here is I'm running OSPF,\n\n394\n00:19:58.090 --> 00:20:00.520\nand OSPF is learning\na lot of these routes.\n\n395\n00:20:00.520 --> 00:20:02.880\nThey are coming in that way,\nand they're better.\n\n396\n00:20:02.880 --> 00:20:07.260\nSo I'm getting those, and there's not\nmuch to see on the IPv6 front, right?\n\n397\n00:20:07.260 --> 00:20:09.550\nBut I could see them there in my database.\n\n398\n00:20:09.550 --> 00:20:14.532\nThey are coming in, and they're either\njust being trumped by some better protocol\n\n399\n00:20:14.532 --> 00:20:18.100\nor they're just not making it\nin due to a conflict, right?\n\n400\n00:20:18.100 --> 00:20:21.880\nSo getting IPv6 set up with\nBGP is really not that hard\n\n401\n00:20:21.880 --> 00:20:23.120\nwhen it's a direct connection like this.\n\n402\n00:20:23.120 --> 00:20:26.290\nNow if you read on the Internet,\nyou'll see a lot of people talk about how\n\n403\n00:20:26.290 --> 00:20:29.760\nreally insanely difficult it is\nto get BGP going in IPv6, right?\n\n404\n00:20:31.000 --> 00:20:36.670\nAnd in almost all of those scenarios,\nthey're using it in conjunction with MPLS.\n\n405\n00:20:36.670 --> 00:20:39.890\nAnd if you do it with MPLS,\nyou have to use those VRFs, right,\n\n406\n00:20:39.890 --> 00:20:41.410\nthe virtual routing and forwarding.\n\n407\n00:20:41.410 --> 00:20:44.620\nAnd when you set up VRFs,\nyou're creating virtual routers.\n\n408\n00:20:44.620 --> 00:20:47.530\nAnd you've gotta redistribute\nyour BGP routes into that.\n\n409\n00:20:47.530 --> 00:20:50.780\nOr the other way around, you have internal\nroutes being redistributed into BGP,\n\n410\n00:20:50.780 --> 00:20:51.770\nrunning in the VRF.\n\n411\n00:20:51.770 --> 00:20:54.697\nGoing over this virtual tunnel,\nand applying labels,\n\n412\n00:20:54.697 --> 00:20:57.510\nin the process of removing\nlabels at certain stages.\n\n413\n00:20:57.510 --> 00:20:59.570\nAnd if that sounds hard,\nwell, it's because it is.\n\n414\n00:20:59.570 --> 00:21:00.980\nIt's hard, it's complex.\n\n415\n00:21:00.980 --> 00:21:02.890\nAnd, in those scenarios,\nyes, it is very difficult.\n\n416\n00:21:02.890 --> 00:21:07.728\nBut just configuring straight BGP\nwithout the MPLS piece on top of it,\n\n417\n00:21:07.728 --> 00:21:10.220\nit's really quite simple.\n\n418\n00:21:10.220 --> 00:21:14.387\nAnd, if you're not working for\na service provider, if you're an end user,\n\n419\n00:21:14.387 --> 00:21:16.390\nMPLS is almost always transparent.\n\n420\n00:21:16.390 --> 00:21:20.080\nThe ISP drops you a network\njack in your D mark.\n\n421\n00:21:20.080 --> 00:21:21.370\nAnd you plug it in and\nyou've got an IP, and\n\n422\n00:21:21.370 --> 00:21:24.110\nyou're not even aware of\nthe MPLS on the backside of it.\n\n423\n00:21:24.110 --> 00:21:25.310\nAnd so for most of us,\n\n424\n00:21:25.310 --> 00:21:28.420\nthe BGP configuration is\njust like we saw right here.\n\n425\n00:21:28.420 --> 00:21:30.980\nFor IPv6,\nit's really not a difficult thing, right?\n\n426\n00:21:30.980 --> 00:21:32.930\nWe just add the address family and\nget it configured.\n\n427\n00:21:34.252 --> 00:21:38.295\n>> All right, Don, so\nanything else on the IPv6 for BPG?\n\n428\n00:21:38.295 --> 00:21:40.135\n[LAUGH]\n>> It does get a little tongue tied.\n\n429\n00:21:40.135 --> 00:21:41.515\n>> It does.\n\n430\n00:21:41.515 --> 00:21:43.410\n>> Just don't get intimidated by it.\n\n431\n00:21:43.410 --> 00:21:45.550\nYou guys saw I didn't have to\nmake the address family myself.\n\n432\n00:21:45.550 --> 00:21:50.050\nAs soon as I turned off that default for\nIPv4, it made the address families for me.\n\n433\n00:21:50.050 --> 00:21:53.350\nAnd after that you fill in your config,\nif you put it all in the address family,\n\n434\n00:21:53.350 --> 00:21:55.120\nit will sort out where the commands go.\n\n435\n00:21:55.120 --> 00:21:57.100\nThe only hard part\nare the longer addresses, right?\n\n436\n00:21:57.100 --> 00:21:58.550\nAnd the commands\nare a little bit different.\n\n437\n00:21:58.550 --> 00:22:01.470\nOther than that, it really,\nit all functions the same way.\n\n438\n00:22:01.470 --> 00:22:03.590\nSo it's not like you're having\nto reinvent the wheel here.\n\n439\n00:22:03.590 --> 00:22:06.560\nYou're just reusing your previous\nknowledge with new addresses.\n\n440\n00:22:06.560 --> 00:22:09.520\n>> So remember that with BGP, right,\nwe can actually configure it not only for\n\n441\n00:22:09.520 --> 00:22:12.840\nIP version 4, but for\nIP version 6 as well.\n\n442\n00:22:12.840 --> 00:22:15.100\nAnd that is something that\nwe do need to get ready for,\n\n443\n00:22:15.100 --> 00:22:17.230\nespecially when we're\nfacing the CCNP route exam.\n\n444\n00:22:17.230 --> 00:22:19.624\nSo it's a good bunch of information for\nus,\n\n445\n00:22:19.624 --> 00:22:23.590\nsomething we should always practice\nas well before we go in for the exam.\n\n446\n00:22:23.590 --> 00:22:25.440\nAll right, so that raps it up for\nour show today.\n\n447\n00:22:25.440 --> 00:22:26.790\nI've been your host, Ronnie Wong.\n\n448\n00:22:26.790 --> 00:22:27.500\n>> And I'm Don Pezet.\n\n449\n00:22:27.500 --> 00:22:28.550\n>> And we'll see you next time.\n\n450\n00:22:28.550 --> 00:22:33.890\n[MUSIC]\n\n",
          "vimeoId": "138123197"
        },
        {
          "description": "BGP is a path vector protocol, which looks for the fewest number of autonomous systems it can pass through and uses several attributes to determine which route is preferred. Viewers will hear how BGP makes decisions, the different things that can influence the path BGP chooses and attributes that are a part of the BGP standard.",
          "length": "1441",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/ccnproute/cisco-ccnproute300101-3-32-bgp_attributes-090215-1.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/ccnproute/cisco-ccnproute300101-3-32-bgp_attributes-090215-1-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/ccnproute/cisco-ccnproute300101-3-32-bgp_attributes-090215-1-sm.jpg",
          "title": "BGP Attributes",
          "transcript": "WEBVTT\n\n1\n00:00:00.000 --> 00:00:10.095\n[MUSIC]\n\n2\n00:00:10.095 --> 00:00:13.112\nAll right, welcome to another\ngreat episode here on ITProTV.\n\n3\n00:00:13.112 --> 00:00:17.016\nToday we're taking that CCNP route,\nso if you are preparing for\n\n4\n00:00:17.016 --> 00:00:19.810\nthat exam, we are here to help you.\n\n5\n00:00:19.810 --> 00:00:23.490\nMy name is Ronnie Wong, I'm your\nhost today, and here with us is Mr.\n\n6\n00:00:23.490 --> 00:00:25.500\nDon Pazette, ready to help us out.\n\n7\n00:00:25.500 --> 00:00:28.863\n>> All right, Ronnie, well let's jump\nright back into the world of BGP.\n\n8\n00:00:28.863 --> 00:00:32.560\nAnd I know what you're saying, good gosh,\nhow much content is there on BGP?\n\n9\n00:00:32.560 --> 00:00:36.220\nWell, we've talked a lot about how to\nget it set up, how to troubleshoot it,\n\n10\n00:00:36.220 --> 00:00:38.840\nhow to do some basic verification.\n\n11\n00:00:38.840 --> 00:00:43.360\nBut one thing we haven't really talked\nabout is how BGP makes decisions.\n\n12\n00:00:43.360 --> 00:00:44.820\nHow it picks the best path.\n\n13\n00:00:44.820 --> 00:00:49.180\nI know way back in the beginning of BGP, I\nmentioned how it's a path vector protocol,\n\n14\n00:00:49.180 --> 00:00:51.870\nso it's really looking at\nwhat's the fewest amount of\n\n15\n00:00:51.870 --> 00:00:54.470\nautonomous systems it can pass through\non it's way from point A to point B.\n\n16\n00:00:54.470 --> 00:00:57.510\nAnd for the most part that's true, right?\n\n17\n00:00:57.510 --> 00:01:00.690\nBut if you really dig deep down into it\n\n18\n00:01:00.690 --> 00:01:05.610\nThere's 11 different things that can\ninfluence the path that BGP chooses.\n\n19\n00:01:05.610 --> 00:01:06.780\nIt's actually really complex.\n\n20\n00:01:06.780 --> 00:01:07.960\nAll right.\n\n21\n00:01:07.960 --> 00:01:09.390\nRemember, from what I said earlier,\n\n22\n00:01:09.390 --> 00:01:13.180\nthat BGP is not an incredibly\nintelligent protocol.\n\n23\n00:01:13.180 --> 00:01:16.610\nIt doesn't run some fancy algorithm or\nanything like.\n\n24\n00:01:16.610 --> 00:01:20.010\nIt really just has a couple of basic\nrules it uses in making decision and\n\n25\n00:01:20.010 --> 00:01:22.520\noftentimes it can result\nin sub optimal routing.\n\n26\n00:01:22.520 --> 00:01:24.339\nBut at least it's loop free, right.\n\n27\n00:01:24.339 --> 00:01:26.970\nBGP gaurantees loop free routing.\n\n28\n00:01:26.970 --> 00:01:29.850\nBut when it gets two\npaths presented to it and\n\n29\n00:01:29.850 --> 00:01:32.590\nthe two paths are of equal lengths,\nwhat happens?\n\n30\n00:01:32.590 --> 00:01:33.490\nWe have to have tie breakers.\n\n31\n00:01:33.490 --> 00:01:34.380\nWe have to have other things.\n\n32\n00:01:34.380 --> 00:01:36.390\nSo there's a lot of stuff\nthat gets involved.\n\n33\n00:01:36.390 --> 00:01:38.870\nAnd so BGP tracks what are called BGP\n\n34\n00:01:38.870 --> 00:01:41.690\nattributes to help with those decisions,\nright.\n\n35\n00:01:41.690 --> 00:01:43.160\nNow, there's a lot of BGP attributes,\n\n36\n00:01:43.160 --> 00:01:45.550\nnot every one of them is used\nin the decision process.\n\n37\n00:01:45.550 --> 00:01:49.960\nBut for thoroughness, I want to show you\nguys all the BGP attributes, explain what\n\n38\n00:01:49.960 --> 00:01:53.460\nthey do, and then we'll see how they\ninfluence the decision making process.\n\n39\n00:01:53.460 --> 00:01:55.820\nSo I've got a little slide\nthat I kind of worked up here.\n\n40\n00:01:55.820 --> 00:02:00.170\nI hate to show slides like this, but\nsometimes there's just no substitute.\n\n41\n00:02:00.170 --> 00:02:03.270\nBasically, we have eight\nattributes in BGP and\n\n42\n00:02:03.270 --> 00:02:06.750\nthey're divided up into\nkind of four categories.\n\n43\n00:02:06.750 --> 00:02:09.110\nThe first category is called\nwell known mandatory.\n\n44\n00:02:09.110 --> 00:02:13.650\nA mandatory attribute is one that\nevery BGP route has to have.\n\n45\n00:02:13.650 --> 00:02:17.040\nYou have to have this stuff or\nthe route is considered invalid and\n\n46\n00:02:17.040 --> 00:02:18.230\ngets thrown away, right?\n\n47\n00:02:18.230 --> 00:02:22.760\nRemember when you see a a route in\nthe BGP database how it might have\n\n48\n00:02:22.760 --> 00:02:24.720\na asterisk beside it.\n\n49\n00:02:24.720 --> 00:02:27.450\nThat means it's valid or\nno asterisk means it's not valid.\n\n50\n00:02:27.450 --> 00:02:28.810\nWell whether it is valid or\n\n51\n00:02:28.810 --> 00:02:30.990\nnot, comes down to the well-known\nmandatory attributes.\n\n52\n00:02:30.990 --> 00:02:32.760\nRight, we have got to have these things.\n\n53\n00:02:32.760 --> 00:02:33.830\nThe first is the AS Path.\n\n54\n00:02:33.830 --> 00:02:35.860\nI am telling you about a network.\n\n55\n00:02:35.860 --> 00:02:37.140\nHow do I get to that network?\n\n56\n00:02:37.140 --> 00:02:38.940\nIt should be a list of autonomous systems.\n\n57\n00:02:38.940 --> 00:02:40.980\nAt a minimum there should one AS in there.\n\n58\n00:02:40.980 --> 00:02:43.090\nRight, because it has to\noriginate form somewhere and\n\n59\n00:02:43.090 --> 00:02:45.700\nif I am learning it from IGBP it might\nbe the AS that I am going to org in.\n\n60\n00:02:45.700 --> 00:02:47.774\nBut it is going to at least have one AS.\n\n61\n00:02:47.774 --> 00:02:51.227\nAnd then after that,\nif it's several ASs away a lot more.\n\n62\n00:02:51.227 --> 00:02:55.712\nSo you might see 100, 119, 3175, whatever.\n\n63\n00:02:55.712 --> 00:02:56.990\nIt lists each AS.\n\n64\n00:02:56.990 --> 00:02:58.010\nThat's the AS path.\n\n65\n00:02:58.010 --> 00:03:00.033\nNext hop.\n\n66\n00:03:00.033 --> 00:03:03.640\nWell, I'm in one particular\nautonomous system.\n\n67\n00:03:03.640 --> 00:03:07.130\nThe next autonomous system in the list,\nI need to know how to get there.\n\n68\n00:03:07.130 --> 00:03:10.860\nAnd the next hop is the IP address of the\nrouter that I'm gonna take to get there.\n\n69\n00:03:10.860 --> 00:03:14.900\nNow be aware that next hop is not\nnecessarily your neighbor, right?\n\n70\n00:03:14.900 --> 00:03:16.510\nWe've seen that in other episodes,\n\n71\n00:03:16.510 --> 00:03:18.790\nwhere we had to manipulate\nwho that next top was.\n\n72\n00:03:18.790 --> 00:03:22.020\nIt's gonna be the exit from\nyour autonomous system.\n\n73\n00:03:22.020 --> 00:03:24.420\nAnd you might not be directly connected\nto the exit, you might be one or\n\n74\n00:03:24.420 --> 00:03:27.160\ntwo routers back and so you've got\nto hop a little bit to get there.\n\n75\n00:03:27.160 --> 00:03:31.730\nBut this is the router that will get you\nTo the first AS in this path on the way\n\n76\n00:03:31.730 --> 00:03:32.490\nto the destination.\n\n77\n00:03:33.520 --> 00:03:35.220\nAnd then lastly, we've got the origin.\n\n78\n00:03:35.220 --> 00:03:37.610\nThe origin is where do we get this from?\n\n79\n00:03:37.610 --> 00:03:39.380\nDid we get it from an IGP?\n\n80\n00:03:39.380 --> 00:03:41.040\nLike an interior data protocol?\n\n81\n00:03:41.040 --> 00:03:42.650\nDid we get it from BGP?\n\n82\n00:03:42.650 --> 00:03:44.140\nOr do we not know?\n\n83\n00:03:44.140 --> 00:03:45.320\nIs it incomplete?\n\n84\n00:03:45.320 --> 00:03:48.200\nIs it just unknown to me\nwhere this thing came from?\n\n85\n00:03:48.200 --> 00:03:49.490\nI need to know that origin.\n\n86\n00:03:49.490 --> 00:03:53.600\nOkay, these three things are present\non every single BGP route we get.\n\n87\n00:03:53.600 --> 00:03:57.670\nEverything else here on this slide, maybe\nwe don't have, but we gotta have those.\n\n88\n00:03:57.670 --> 00:04:00.240\nAnd, we can use that information\nright there to make some decisions,\n\n89\n00:04:00.240 --> 00:04:01.630\nthat AS Path being the most important one,\nright?\n\n90\n00:04:02.650 --> 00:04:06.360\nSo, those are what are called\nthe well known mandatory.\n\n91\n00:04:06.360 --> 00:04:07.930\nYou also have well known discretionary.\n\n92\n00:04:07.930 --> 00:04:09.630\nThese are optional ones, right?\n\n93\n00:04:09.630 --> 00:04:12.070\nOnes that you may have or\nyou may not, right?\n\n94\n00:04:12.070 --> 00:04:13.820\nLike local preference.\n\n95\n00:04:13.820 --> 00:04:15.430\nWhat is local preference?\n\n96\n00:04:15.430 --> 00:04:19.940\nWell, if I start learning more than\none route and I've got more than\n\n97\n00:04:19.940 --> 00:04:23.730\none way to get to a destination, well it\nmight be that something like their path\n\n98\n00:04:23.730 --> 00:04:27.020\nmakes them different and so\nI choose one way over another.\n\n99\n00:04:27.020 --> 00:04:29.130\nBut if I get two that are equal,\n\n100\n00:04:29.130 --> 00:04:31.680\nI can use that local preference\nto help me make a decision.\n\n101\n00:04:31.680 --> 00:04:35.330\nAnd that's important, this is one of\nthe ways that we influence the decisions\n\n102\n00:04:35.330 --> 00:04:37.910\nthat OSPF makes, I mean, BGP.\n\n103\n00:04:37.910 --> 00:04:40.417\nWhatever this protocol is, BGP makes.\n\n104\n00:04:40.417 --> 00:04:44.423\nWhen you have an autonomous system,\nand you learn two external routes,\n\n105\n00:04:44.423 --> 00:04:46.930\nfrom two different border routers, right?\n\n106\n00:04:46.930 --> 00:04:48.010\nTwo routers that are in between you and\n\n107\n00:04:48.010 --> 00:04:50.700\nthe other AS,\nhow do you pick which one you go to?\n\n108\n00:04:50.700 --> 00:04:54.550\nWell, if the AS Path is equal,\nlocal preference is your next bet, right.\n\n109\n00:04:54.550 --> 00:04:59.530\nLocal preference will just prefer a\nparticular exit to our autonomous system.\n\n110\n00:04:59.530 --> 00:05:02.870\nNow remember that this is an exit,\na way to get out, right.\n\n111\n00:05:02.870 --> 00:05:05.900\nSo, I might learn the same route\nfrom two different routers,\n\n112\n00:05:05.900 --> 00:05:08.700\none has a local preference\nthat's better than the other.\n\n113\n00:05:08.700 --> 00:05:10.520\nAnd so I choose the one with\nthe better local preference.\n\n114\n00:05:10.520 --> 00:05:12.520\nThat's the exit that I'm gonna take.\n\n115\n00:05:12.520 --> 00:05:15.770\nSo local preference is used for\noutbound traffic.\n\n116\n00:05:15.770 --> 00:05:16.700\nAnd it's just a number.\n\n117\n00:05:16.700 --> 00:05:19.580\nIt's a number that we assign and\nthe higher the better.\n\n118\n00:05:19.580 --> 00:05:20.290\nThe default is 100.\n\n119\n00:05:20.290 --> 00:05:22.120\nSo on a Cisco router,\n\n120\n00:05:22.120 --> 00:05:24.900\nevery route that we learn has\na default local preference of 100.\n\n121\n00:05:24.900 --> 00:05:27.570\nAnd then we can go and manipulate that.\n\n122\n00:05:27.570 --> 00:05:29.650\nAnd if I really want to prefer\none route over another,\n\n123\n00:05:29.650 --> 00:05:32.820\nI can bump that local preference\nup to 200, and now I'll prefer it.\n\n124\n00:05:32.820 --> 00:05:34.540\nHigher is better, all right?\n\n125\n00:05:34.540 --> 00:05:35.450\nSo those are discretionary.\n\n126\n00:05:35.450 --> 00:05:37.320\nWe don't have to have those,\nbut we can put them in there.\n\n127\n00:05:37.320 --> 00:05:38.200\nOh, I'm leaving one off.\n\n128\n00:05:38.200 --> 00:05:40.200\nAtomic aggregate, okay.\n\n129\n00:05:40.200 --> 00:05:43.410\nBGP supports automatic\nroute summarization.\n\n130\n00:05:43.410 --> 00:05:46.330\nIt supports manual too, right, so\nlet's just say it supports summarization.\n\n131\n00:05:47.490 --> 00:05:49.890\nAutomatic summarization is\nturned off by default, and\n\n132\n00:05:49.890 --> 00:05:52.380\nif you don't do manual summarization,\nthen you're not doing it.\n\n133\n00:05:52.380 --> 00:05:55.070\nAnd this atomic aggregate doesn't\nmatter anymore, all right?\n\n134\n00:05:55.070 --> 00:06:00.320\nBut if you do summarize, well, the atomic\naggregate is that summary, right?\n\n135\n00:06:00.320 --> 00:06:03.950\nIt's the aggregate of all those smaller\nnetworks into one bigger network.\n\n136\n00:06:03.950 --> 00:06:06.060\nAnd so\nit'll be noted right here that, hey,\n\n137\n00:06:06.060 --> 00:06:09.410\nthe route you're learning is a summary,\nall right?\n\n138\n00:06:09.410 --> 00:06:11.420\nAnd so we'll know that,\nwe'll see it right there, but\n\n139\n00:06:11.420 --> 00:06:12.570\nif it's not a summary this is left out.\n\n140\n00:06:12.570 --> 00:06:13.740\nThat's why this is discretionary.\n\n141\n00:06:13.740 --> 00:06:15.510\nIt may or may not be there, okay?\n\n142\n00:06:16.510 --> 00:06:18.960\nAfter that,\nwe get into these optional values.\n\n143\n00:06:18.960 --> 00:06:21.310\nThese optional values are not well known,\nright?\n\n144\n00:06:21.310 --> 00:06:25.720\nWell known means anybody who has\na BGP router whether it's Cisco,\n\n145\n00:06:25.720 --> 00:06:27.695\nJuniper, whoever, right?\n\n146\n00:06:27.695 --> 00:06:30.625\nIt's gonna recognize these,\nthese are well known it's gonna use them.\n\n147\n00:06:30.625 --> 00:06:33.575\nThese optional ones, though,\nare a little bit up in the air.\n\n148\n00:06:33.575 --> 00:06:35.835\nNow, I'll tell you,\nalmost everybody supports them, but\n\n149\n00:06:35.835 --> 00:06:37.285\nit's not required of the standard.\n\n150\n00:06:38.535 --> 00:06:41.235\nOptional transitive and\noptional non transitive.\n\n151\n00:06:41.235 --> 00:06:43.335\nWhat that means,\ntransitive and non transitive,\n\n152\n00:06:43.335 --> 00:06:48.030\nis are these attributes allowed to\npass between autonomous systems?\n\n153\n00:06:48.030 --> 00:06:48.640\nOkay?\n\n154\n00:06:48.640 --> 00:06:52.670\nIf it's transitive I can set\nthe attribute in my AS and\n\n155\n00:06:52.670 --> 00:06:56.600\nwhen I hand the route off to somebody\nelse's AS, they'll see that attribute.\n\n156\n00:06:56.600 --> 00:06:59.500\nSo I can share information\nwith other ASes.\n\n157\n00:06:59.500 --> 00:07:03.620\nOptional non-transitive,\nmeans I can set it when\n\n158\n00:07:03.620 --> 00:07:08.000\nI'm not gonna share it with other people,\nI'm not gonna tell them about that, right?\n\n159\n00:07:08.000 --> 00:07:11.480\nOr I'm going to hand it off to them and\nthey're not going to pass it on.\n\n160\n00:07:11.480 --> 00:07:15.660\nThey'll receive it, they might use it like\nMED they might use, they might ignore.\n\n161\n00:07:15.660 --> 00:07:19.190\nBut if they do use it they're not going to\nshare with anybody else they just use it\n\n162\n00:07:19.190 --> 00:07:20.490\nthemselves, all right?\n\n163\n00:07:20.490 --> 00:07:23.260\nSo whether we pass it along or\nwhether we don't pass it along, all right,\n\n164\n00:07:23.260 --> 00:07:24.870\nthat's the difference here.\n\n165\n00:07:24.870 --> 00:07:26.140\nAggregator.\n\n166\n00:07:26.140 --> 00:07:29.656\nIf I'm doing a summary, this is the router\nthat performed the summary, right?\n\n167\n00:07:29.656 --> 00:07:31.630\nWho was it that did that summarization?\n\n168\n00:07:31.630 --> 00:07:34.090\nThey are the aggregator and\nit'll be in there, okay?\n\n169\n00:07:34.090 --> 00:07:38.110\nNow, that's one that we can freely hand\non other people down the line if we want,\n\n170\n00:07:38.110 --> 00:07:41.160\nit's no big deal, right, and so,\nthat's under optional transitive.\n\n171\n00:07:42.180 --> 00:07:43.100\nCommunity.\n\n172\n00:07:43.100 --> 00:07:45.090\nCommunity is empty by default, right?\n\n173\n00:07:45.090 --> 00:07:49.170\nWhat community is, a BGP community,\nthink of it as like a tag, right?\n\n174\n00:07:49.170 --> 00:07:52.460\nI can tag routes as being\nin a particular community.\n\n175\n00:07:52.460 --> 00:07:54.380\nAnd then I can make\ndecisions based on that.\n\n176\n00:07:54.380 --> 00:07:58.090\nI can say, hey, if I tagged this as\na redistributed route from OSPF.\n\n177\n00:07:58.090 --> 00:08:00.720\nI can look at it, now I know my OSPF\nroutes based on that community, right?\n\n178\n00:08:00.720 --> 00:08:05.550\nWe can only set a scope, you can limit\nroutes or filter routes based on that.\n\n179\n00:08:05.550 --> 00:08:09.780\nWell I can share that community with\nother AS's and they can use it too.\n\n180\n00:08:09.780 --> 00:08:13.910\nSo if my ISP says, hey I really need\nyou to tag all of your routes with this\n\n181\n00:08:13.910 --> 00:08:16.500\ncommunity so I know where they came from,\nwe can do that and\n\n182\n00:08:16.500 --> 00:08:18.770\nnow they'll have it, they'll know\nwhich customer it came from, right?\n\n183\n00:08:18.770 --> 00:08:21.390\nThat's a bad way to do it because we could\nspoof other customers if we wanted, but\n\n184\n00:08:21.390 --> 00:08:23.380\nit is kind of an scenario, right?\n\n185\n00:08:23.380 --> 00:08:25.010\nNow, they could also choose to ignore it.\n\n186\n00:08:25.010 --> 00:08:25.750\nThese are optional, right?\n\n187\n00:08:25.750 --> 00:08:27.280\nThey could ignore it if they want.\n\n188\n00:08:27.280 --> 00:08:30.860\nIn BGP you can't tell somebody\nelse to do something.\n\n189\n00:08:30.860 --> 00:08:32.170\nYou can suggest it.\n\n190\n00:08:32.170 --> 00:08:34.480\nSo you're suggesting that community.\n\n191\n00:08:34.480 --> 00:08:35.680\nThey can run with it or\nthey can ignore it.\n\n192\n00:08:35.680 --> 00:08:39.710\nAnd then the Multi-Exit Discriminator,\nMED.\n\n193\n00:08:39.710 --> 00:08:42.100\nThe MED, it's got two identities, right?\n\n194\n00:08:42.100 --> 00:08:44.010\nPeople call it the MED,\nthat's what I call it.\n\n195\n00:08:44.010 --> 00:08:46.400\nBut some people call it the metric.\n\n196\n00:08:46.400 --> 00:08:50.120\nBut metric gets a little confusing\nbecause what's our true metric in BGP?\n\n197\n00:08:50.120 --> 00:08:51.030\nPath, right?\n\n198\n00:08:51.030 --> 00:08:54.070\nThe longer the path the worse it is\nthe longer the path the better it is.\n\n199\n00:08:54.070 --> 00:08:55.840\nThat's usually what we\nthink of as the metric.\n\n200\n00:08:55.840 --> 00:09:01.911\nBut MED, Multi-Exit Discriminator, is also\ncalled a metric and what it does is it\n\n201\n00:09:01.911 --> 00:09:07.530\nallows us to suggest to other AS's\nthe best ways to get into our network.\n\n202\n00:09:07.530 --> 00:09:09.060\nRemember local preference?\n\n203\n00:09:09.060 --> 00:09:10.670\nThat was how to get out of our network.\n\n204\n00:09:10.670 --> 00:09:12.280\nHow to exit the network.\n\n205\n00:09:12.280 --> 00:09:12.850\nRight?\n\n206\n00:09:12.850 --> 00:09:16.110\nSo, we can specify that local preference\nto say that this is the way we want\n\n207\n00:09:16.110 --> 00:09:17.040\nour routers to go out.\n\n208\n00:09:17.040 --> 00:09:19.389\nAnd we control our routers, so\nlocal preference gets enforced.\n\n209\n00:09:20.420 --> 00:09:24.740\nBut MED, I can't tell other people\nhow to get into my network.\n\n210\n00:09:24.740 --> 00:09:30.440\nI can only suggest, I can recommend, I can\nsay, here's what I think you should do.\n\n211\n00:09:30.440 --> 00:09:34.400\nSo if I have a topology like this,\nsee how I've got ISP1 out here?\n\n212\n00:09:34.400 --> 00:09:37.650\nAnd ISP1 can connect to headquarters\nto get into my environment.\n\n213\n00:09:37.650 --> 00:09:40.580\nThey could also connect to BR1 to\nget into my environment, right?\n\n214\n00:09:40.580 --> 00:09:42.240\nI'm sending routes out to them.\n\n215\n00:09:42.240 --> 00:09:44.820\nAt the end of the day,\nit's up to ISP1 to pick.\n\n216\n00:09:44.820 --> 00:09:45.570\nIt's their decision.\n\n217\n00:09:45.570 --> 00:09:48.230\nThey're in a different AS,\nthey control their AS.\n\n218\n00:09:48.230 --> 00:09:51.334\nThey can set a local preference that\nsays when exiting their network,\n\n219\n00:09:51.334 --> 00:09:54.820\nthey wanna go to branch one, and there's\nnothing I can do about that, right?\n\n220\n00:09:54.820 --> 00:09:56.910\nThey chose to set a local preference.\n\n221\n00:09:56.910 --> 00:10:00.728\nBut, if they're nice, which most of\nthem are, you can use the MED to make\n\n222\n00:10:00.728 --> 00:10:04.913\na suggestion, to say, hey, I'd like to\nsuggest to you guys up at ISP1 that when\n\n223\n00:10:04.913 --> 00:10:08.870\nyou come to our networks,\ncould you please come in headquarters?\n\n224\n00:10:08.870 --> 00:10:10.370\nBranch one,\nthat's supposed to be a backup.\n\n225\n00:10:10.370 --> 00:10:11.710\nDon't come into that one, right?\n\n226\n00:10:11.710 --> 00:10:13.040\nCome into headquarters.\n\n227\n00:10:13.040 --> 00:10:17.450\nAnd if they honor the MED, they'll use\nthat as the route to come in, okay?\n\n228\n00:10:17.450 --> 00:10:23.210\nSo MED is a way that we can influence how\npeople come into our autonomous system.\n\n229\n00:10:23.210 --> 00:10:26.240\nLocal preference is how we can modify or\n\n230\n00:10:26.240 --> 00:10:29.060\nchange, how people exit\nour autonomous system.\n\n231\n00:10:29.060 --> 00:10:30.990\nSo those two kinda go hand in hand.\n\n232\n00:10:30.990 --> 00:10:33.690\nBut MED is able to be ignored.\n\n233\n00:10:33.690 --> 00:10:35.520\nYou can ignore MED if you want.\n\n234\n00:10:35.520 --> 00:10:38.790\nBecause that's somebody else telling you\nwhat to do and nobody can do that, right?\n\n235\n00:10:38.790 --> 00:10:40.860\nThey can suggest, but they can't tell you.\n\n236\n00:10:40.860 --> 00:10:45.290\nSo, these are the eight attributes\nthat are a pat of the standard,\n\n237\n00:10:45.290 --> 00:10:46.840\npart of the BGP standard.\n\n238\n00:10:46.840 --> 00:10:49.340\nNow I did put one little note\nat the bottom of the screen,\n\n239\n00:10:49.340 --> 00:10:50.360\nhonorable mention weight.\n\n240\n00:10:50.360 --> 00:10:52.210\nWhat is weight?\n\n241\n00:10:52.210 --> 00:10:54.650\nWell, it's Cisco proprietary.\n\n242\n00:10:54.650 --> 00:10:59.550\nCisco came up with a final be all,\nend all override that we can put in.\n\n243\n00:11:00.680 --> 00:11:03.180\nWeight is a little different than\nall these guys up here, right.\n\n244\n00:11:03.180 --> 00:11:06.620\nThese guys, well-known, mandatory,\ndiscretionary, optional transitive,\n\n245\n00:11:06.620 --> 00:11:08.310\noptional non-transitive.\n\n246\n00:11:08.310 --> 00:11:12.240\nIf I set any of those, they spread\nacross my entire autonomous system.\n\n247\n00:11:12.240 --> 00:11:15.340\nAnd then some of them,\nlike the well-known mandatory and\n\n248\n00:11:15.340 --> 00:11:18.810\nthe optional transitive will spread\nto other autonomous systems.\n\n249\n00:11:18.810 --> 00:11:19.680\nOkay.\n\n250\n00:11:19.680 --> 00:11:20.980\nWell.\n\n251\n00:11:20.980 --> 00:11:26.170\nWhat if I want to make a change but\njust on one router specifically?\n\n252\n00:11:26.170 --> 00:11:28.810\nWell BGP doesn't really give you\na way to do that in the standard.\n\n253\n00:11:28.810 --> 00:11:32.460\nSo, Cisco said let's create something new,\nand they did, they created weight.\n\n254\n00:11:32.460 --> 00:11:34.620\nWeight is Cisco proprietary,\nit's not part of the standard.\n\n255\n00:11:34.620 --> 00:11:37.530\nThat's why I didn't put it in the matrix,\nright, I just stuck it down at the bottom.\n\n256\n00:11:37.530 --> 00:11:41.280\nOn any Cisco router,\nyou can assign a weight to a route.\n\n257\n00:11:41.280 --> 00:11:45.210\nAnd the weight will influence what\nroute you choose over another one.\n\n258\n00:11:45.210 --> 00:11:47.620\nBut it only affects that one router.\n\n259\n00:11:47.620 --> 00:11:49.790\nSo if we wanna do a surgical precision,\nright,\n\n260\n00:11:49.790 --> 00:11:53.850\na laser beam focus on one router,\nweight is available for us.\n\n261\n00:11:53.850 --> 00:11:56.000\nOkay, and we can go in and\nwe can set that and\n\n262\n00:11:56.000 --> 00:11:57.870\nit's gonna make us choose\none over the other.\n\n263\n00:11:57.870 --> 00:11:59.450\nNow, weight is a number.\n\n264\n00:11:59.450 --> 00:12:03.610\nThe default weight for a route is zero,\nand then a higher number is better.\n\n265\n00:12:03.610 --> 00:12:05.820\nSo if I give a route a weight of one,\nit's gonna be better.\n\n266\n00:12:05.820 --> 00:12:07.420\nNow normally we pick bigger numbers,\nright,\n\n267\n00:12:07.420 --> 00:12:09.580\nlike 100 to leave plenty\nof room in between.\n\n268\n00:12:09.580 --> 00:12:12.550\nBut you assign that weight and now\nyou'll pick that route over another one.\n\n269\n00:12:12.550 --> 00:12:15.118\nSo weight's another attribute,\nit's just not part of the standard.\n\n270\n00:12:15.118 --> 00:12:20.180\nAll right, so, you guys get an idea\nnow of what the attributes are,\n\n271\n00:12:20.180 --> 00:12:23.440\nwhat is contained in a BGP\nroute when we learned about it.\n\n272\n00:12:23.440 --> 00:12:26.320\nAnd then I've mentioned each one how\nthey can kinda influence the decision\n\n273\n00:12:26.320 --> 00:12:27.240\nthat we make.\n\n274\n00:12:27.240 --> 00:12:29.150\nWays to come into the network like MED,\n\n275\n00:12:29.150 --> 00:12:31.340\nways to get out of the network\nlike local preference.\n\n276\n00:12:31.340 --> 00:12:35.210\nWays to get in or out with weight,\nyou can manipulate that like crazy and\n\n277\n00:12:35.210 --> 00:12:36.020\neach of these other ones.\n\n278\n00:12:36.020 --> 00:12:39.460\nAS path, they all influence\nthe decision that we make.\n\n279\n00:12:39.460 --> 00:12:42.790\nSo it's important to understand\nhow that process works out,\n\n280\n00:12:42.790 --> 00:12:44.460\ncuz what if there's a conflict?\n\n281\n00:12:44.460 --> 00:12:48.370\nWhat if local preference says\nI should exit one way, but\n\n282\n00:12:48.370 --> 00:12:50.060\nweight says I should exit another way?\n\n283\n00:12:50.060 --> 00:12:51.490\nWhat happens then?\n\n284\n00:12:51.490 --> 00:12:55.940\nWell, BGP's primary concern is\ncreating a loop-free network.\n\n285\n00:12:55.940 --> 00:13:00.290\nAnd so on Cisco routers,\nwe have an order of operations or\n\n286\n00:13:00.290 --> 00:13:01.810\njust an order of preference.\n\n287\n00:13:01.810 --> 00:13:04.950\nI hate to say preference,\ncuz we have local preference.\n\n288\n00:13:04.950 --> 00:13:09.390\nBut which attributes we prefer over other\nones to make a decision and form that.\n\n289\n00:13:09.390 --> 00:13:11.280\nAnd there's always a chance for a tie.\n\n290\n00:13:11.280 --> 00:13:15.870\nThere might be two routes that\nare tied for AS path length.\n\n291\n00:13:15.870 --> 00:13:17.330\nAnd a tie for local preference.\n\n292\n00:13:17.330 --> 00:13:19.560\nAnd a tie for weight.\n\n293\n00:13:19.560 --> 00:13:20.810\nAnd when that happens, what do we do?\n\n294\n00:13:20.810 --> 00:13:23.640\nAnd so we got 11 different\nfactors that can decide that.\n\n295\n00:13:23.640 --> 00:13:26.460\nNow in real life land, you don't\nnormally worry about these, right?\n\n296\n00:13:26.460 --> 00:13:29.960\nIt kinda works out on its own, but\non the exam you're expected to know them.\n\n297\n00:13:29.960 --> 00:13:31.440\nSo this is one of those\nthings you have to memorize.\n\n298\n00:13:31.440 --> 00:13:32.691\nAnd again I hate doing slides but\n\n299\n00:13:32.691 --> 00:13:35.570\nthis is one of those scenarios where I\njust kind of have to show it, right.\n\n300\n00:13:35.570 --> 00:13:39.410\n>> [LAUGH]\n>> Here's the 11 deciding factors that BGP\n\n301\n00:13:39.410 --> 00:13:41.620\nuses when it makes a decision, all right.\n\n302\n00:13:41.620 --> 00:13:44.000\nNow it normally boils down to number four.\n\n303\n00:13:44.000 --> 00:13:47.700\nNumber four is the route with\nthe shortest AS path, okay.\n\n304\n00:13:47.700 --> 00:13:50.740\nAlmost always,\nthat's the deciding factor, right?\n\n305\n00:13:50.740 --> 00:13:54.630\nWe learn some routes, whoever's got the\nshortest AS path, that's what we go with.\n\n306\n00:13:54.630 --> 00:13:55.946\nBut notice it's not the first one.\n\n307\n00:13:55.946 --> 00:13:57.010\nWhat's the first one?\n\n308\n00:13:57.010 --> 00:13:59.550\nThe first one is weight.\n\n309\n00:13:59.550 --> 00:14:00.300\nI mentioned weight.\n\n310\n00:14:00.300 --> 00:14:02.840\nDo we use surgical precision, you go to\na single router, you set that weight,\n\n311\n00:14:02.840 --> 00:14:03.870\nthat's what it's gonna do.\n\n312\n00:14:03.870 --> 00:14:05.980\nSo weight is actually\nthe number one thing.\n\n313\n00:14:05.980 --> 00:14:08.850\nOkay, weight overrides everything else.\n\n314\n00:14:08.850 --> 00:14:10.690\nIt'll override everything.\n\n315\n00:14:10.690 --> 00:14:13.330\nBut it's Cisco proprietary, so\nif you've got mixed equipment,\n\n316\n00:14:13.330 --> 00:14:14.480\nit only works on your Cisco equipment.\n\n317\n00:14:15.850 --> 00:14:18.470\nAfter that, we have local preference.\n\n318\n00:14:18.470 --> 00:14:21.090\nSo when we're talking\nabout exiting the network,\n\n319\n00:14:21.090 --> 00:14:25.080\nif we're exiting our autonomous system,\nwe're gonna rely on local preference next.\n\n320\n00:14:26.530 --> 00:14:29.460\nIf there's a tie, which there is by\ndefault, the local preference for\n\n321\n00:14:29.460 --> 00:14:30.880\nall these routes is set by default.\n\n322\n00:14:30.880 --> 00:14:35.320\nIf I take a look at a router, let me\njust take any old random router here and\n\n323\n00:14:35.320 --> 00:14:38.790\ndo a show IP BGP and\nstart to look at it right.\n\n324\n00:14:38.790 --> 00:14:42.700\nI haven't manipulated local preference,\nweight, med,\n\n325\n00:14:42.700 --> 00:14:45.010\nI haven't changed any\nof that on this router.\n\n326\n00:14:45.010 --> 00:14:47.100\nSo you can see right here in show IP BGP,\n\n327\n00:14:47.100 --> 00:14:51.840\nthat I've got a med of zero,\nthat's the default, right.\n\n328\n00:14:51.840 --> 00:14:54.380\nA local preference of 100,\nthat's the default.\n\n329\n00:14:54.380 --> 00:14:56.680\nA weight of zero, that's the default.\n\n330\n00:14:56.680 --> 00:14:58.920\nRight.\nSo those are the default values.\n\n331\n00:14:58.920 --> 00:15:02.310\nSo if weight is zero and I haven't\nchanged, and I learn a 100 routes,\n\n332\n00:15:02.310 --> 00:15:03.320\nthey're all gonna have a way to zero.\n\n333\n00:15:03.320 --> 00:15:04.770\nIt's all a tie.\n\n334\n00:15:04.770 --> 00:15:07.880\nAnd in local preference, they're all gonna\nhave that local preference of a 100.\n\n335\n00:15:07.880 --> 00:15:09.400\nIt's a big tie.\n\n336\n00:15:09.400 --> 00:15:12.440\nSo number one is a tie,\nnumber two is a tie.\n\n337\n00:15:12.440 --> 00:15:13.940\nNumber three.\n\n338\n00:15:13.940 --> 00:15:16.220\nThe route originated by the local router.\n\n339\n00:15:16.220 --> 00:15:19.150\nIf I originated it,\nI'm gonna prefer that one, right?\n\n340\n00:15:19.150 --> 00:15:21.000\nThat just makes sense, okay?\n\n341\n00:15:21.000 --> 00:15:23.770\nBut if I'm learning routes,\nI didn't originate that.\n\n342\n00:15:23.770 --> 00:15:27.040\nAnd if I'm learning something that I\noriginated as kind of a loop, isn't it?\n\n343\n00:15:27.040 --> 00:15:29.200\nSo that's not normally going to happen.\n\n344\n00:15:29.200 --> 00:15:32.280\nIt would just be if I did a network\ncommand on my actual router and\n\n345\n00:15:32.280 --> 00:15:33.450\nI definitely wanna prefer that one.\n\n346\n00:15:33.450 --> 00:15:35.460\nSo that is number three, all right?\n\n347\n00:15:35.460 --> 00:15:38.150\nBut for most routes, one,\ntwo, and three don't apply.\n\n348\n00:15:38.150 --> 00:15:40.750\nAnd that's why number four\nis kind of a default.\n\n349\n00:15:40.750 --> 00:15:44.950\nSo most of us think of number four as\nbeing the one that takes effect, but\n\n350\n00:15:44.950 --> 00:15:48.460\nyou can override it easily\nwith these other values, okay.\n\n351\n00:15:48.460 --> 00:15:52.720\nSo weight and\nlocal preference can override that path.\n\n352\n00:15:52.720 --> 00:15:55.380\nAlright, but\nwhat if there is a tie there too?\n\n353\n00:15:55.380 --> 00:15:57.820\nAnd what if I just keep\ngetting ties down the line?\n\n354\n00:15:57.820 --> 00:15:59.350\nTie, tie, tie.\n\n355\n00:15:59.350 --> 00:16:03.110\nWell, now I've got to start making\nsome decisions based on other values.\n\n356\n00:16:03.110 --> 00:16:06.910\nAnd so everything after number\nfour is really a tie breaker.\n\n357\n00:16:06.910 --> 00:16:09.550\nOkay, if there is a tie\non one through four,\n\n358\n00:16:09.550 --> 00:16:13.380\neverything else helps to decide which\nway we're going to rule on that tie.\n\n359\n00:16:13.380 --> 00:16:14.270\nAnd number five.\n\n360\n00:16:14.270 --> 00:16:16.980\nIs the route with\nthe most reliable origin.\n\n361\n00:16:16.980 --> 00:16:17.540\nOkay?\n\n362\n00:16:17.540 --> 00:16:19.460\nNow what does that mean?\n\n363\n00:16:19.460 --> 00:16:21.300\nEvery route comes from somewhere.\n\n364\n00:16:21.300 --> 00:16:21.880\nAll right?\n\n365\n00:16:21.880 --> 00:16:26.200\nIt either comes from BGP or it comes from\nan IGP, an interior gateway protocol,\n\n366\n00:16:26.200 --> 00:16:30.110\nit might have come from OSPF or\nEIGRP or somewhere like that.\n\n367\n00:16:30.110 --> 00:16:31.270\nRight?\n\n368\n00:16:31.270 --> 00:16:35.770\nThose are considered really reliable\nbecause they're actual interior protocols.\n\n369\n00:16:35.770 --> 00:16:37.840\nThey're good detailed information.\n\n370\n00:16:37.840 --> 00:16:39.740\nBGP, on the other hand, just has path.\n\n371\n00:16:39.740 --> 00:16:40.726\nIt's not as reliable.\n\n372\n00:16:40.726 --> 00:16:45.140\nThen you've got unknown,\nunknown or incomplete.\n\n373\n00:16:45.140 --> 00:16:46.530\nWe don't know where it originated.\n\n374\n00:16:46.530 --> 00:16:48.710\nUsually that's what happens\nwhen you redistribute.\n\n375\n00:16:48.710 --> 00:16:52.720\nWhen you redistribute a route into BGP,\nBGP doesn't track where it came from.\n\n376\n00:16:52.720 --> 00:16:54.270\nAnd so now it becomes incomplete.\n\n377\n00:16:54.270 --> 00:16:55.740\nThat's the least reliable.\n\n378\n00:16:55.740 --> 00:16:59.220\nSo if it can pick a route from IGP it will\nand if it can't then it will use BGP and\n\n379\n00:16:59.220 --> 00:17:03.210\nif it can't there then it\nwill use an incomplete.\n\n380\n00:17:03.210 --> 00:17:06.070\nSo that's the next tie\nbreaker is that origin.\n\n381\n00:17:06.070 --> 00:17:08.260\nAnd origin is just another attribute\nthat comes along with the route.\n\n382\n00:17:09.670 --> 00:17:10.760\nThen we have MED.\n\n383\n00:17:10.760 --> 00:17:14.610\nNow MED doesn't apply to outgoing stuff.\n\n384\n00:17:14.610 --> 00:17:15.800\nRight?\nIt applies to incoming.\n\n385\n00:17:15.800 --> 00:17:19.350\nSo this would be the MED as\ntold to me by somebody else.\n\n386\n00:17:19.350 --> 00:17:20.980\nI can then use it to decide.\n\n387\n00:17:20.980 --> 00:17:23.200\nSo, going back to my topology here,\n\n388\n00:17:23.200 --> 00:17:28.740\nif ISP1 is learning two equal paths\nhere to headquarters of branch 1, right?\n\n389\n00:17:28.740 --> 00:17:30.230\nInto my AS.\n\n390\n00:17:30.230 --> 00:17:33.780\nAnd it's a tie,\nsame path length, same origin,\n\n391\n00:17:33.780 --> 00:17:37.210\nsame all of that,\nthen it's gonna boil down to med.\n\n392\n00:17:37.210 --> 00:17:40.280\nAnd if I've set a med it can use\nthat to make as the tiebreaker.\n\n393\n00:17:40.280 --> 00:17:42.610\nBut if I haven't set a med,\nthey both default to zero.\n\n394\n00:17:42.610 --> 00:17:46.340\nAnd if they default to zero, we see that\nright here, that metric defaulting to\n\n395\n00:17:46.340 --> 00:17:50.840\nzero, then it's just gonna continue\non down the tiebreaker list.\n\n396\n00:17:50.840 --> 00:17:54.620\nAnd right after that we get if\nwe learned it from eBGP or iBGP.\n\n397\n00:17:54.620 --> 00:17:55.310\nAll right?\n\n398\n00:17:55.310 --> 00:17:57.320\neBGP is preferred.\n\n399\n00:17:57.320 --> 00:18:01.450\nBecause, when I learn an eBGP route,\nit hasn't been manipulated, right?\n\n400\n00:18:01.450 --> 00:18:03.950\nI'm being shared that route,\nand it hasn't ben changed yet.\n\n401\n00:18:03.950 --> 00:18:07.020\nWhen I learn an iBGP route,\nit could have been manipulated.\n\n402\n00:18:07.020 --> 00:18:08.950\nIt's coming through other\nrouters in my system.\n\n403\n00:18:08.950 --> 00:18:11.190\nAnd I just assume that means more hops,\nalso.\n\n404\n00:18:11.190 --> 00:18:14.240\nSo if I've got a better eBGP route, I'm\ngonna take that one over iBGP, all right?\n\n405\n00:18:15.710 --> 00:18:18.390\nIt that's a tie then we get down to this.\n\n406\n00:18:18.390 --> 00:18:20.700\nA route to the closest IGP neighbor.\n\n407\n00:18:20.700 --> 00:18:24.270\nif I got more than one exit,\nmore than one way to get to that network,\n\n408\n00:18:24.270 --> 00:18:27.700\nI just need to look at my IGP and say,\nwhat's the best one there, right?\n\n409\n00:18:27.700 --> 00:18:29.730\nOSPF or EIGRP or RIF.\n\n410\n00:18:29.730 --> 00:18:34.050\nThey're going out of better review of my\nlocal network and so, I will trust them.\n\n411\n00:18:34.050 --> 00:18:35.720\nBGP is not the smartest protocol.\n\n412\n00:18:35.720 --> 00:18:37.280\nIt definitely doesn't understand networks.\n\n413\n00:18:37.280 --> 00:18:41.270\nIt doesn't understand bandwidth,\ndelay, Any of that so\n\n414\n00:18:41.270 --> 00:18:45.670\nthere it's going to basically\nboil down to relying on the IGP.\n\n415\n00:18:45.670 --> 00:18:48.350\nBut if the IGP can't help me,\nthen we just look at the oldest route.\n\n416\n00:18:48.350 --> 00:18:49.840\nWhich one do we learn first?\n\n417\n00:18:49.840 --> 00:18:54.390\nWhoever we learn first is the oldest, and\nby nature being the oldest it's also been\n\n418\n00:18:54.390 --> 00:18:56.980\nup the longest so\nit's the most reliable, right?\n\n419\n00:18:56.980 --> 00:18:59.680\nIf I have a route that's only been up for\n20 seconds, And\n\n420\n00:18:59.680 --> 00:19:02.530\nI've got another route that's been up for\nseven days.\n\n421\n00:19:02.530 --> 00:19:04.520\nSeven days is pretty reliable,\nright, I'm gonna go with that.\n\n422\n00:19:04.520 --> 00:19:08.320\nIt's just older, it was there first,\nright, first come first serve.\n\n423\n00:19:08.320 --> 00:19:11.830\nNow almost every tie is\nresolved by that point.\n\n424\n00:19:11.830 --> 00:19:15.350\nRight, really at that point pretty\nmuch everything is resolved.\n\n425\n00:19:15.350 --> 00:19:17.750\nBut if you just rebooted the router,\n\n426\n00:19:17.750 --> 00:19:19.920\nyou might be learning a lot\nof routes at the same time.\n\n427\n00:19:19.920 --> 00:19:21.690\nOr if you just clear the BGP process.\n\n428\n00:19:21.690 --> 00:19:23.480\nAnd so\nthat's where these last two come in.\n\n429\n00:19:23.480 --> 00:19:29.480\nIt's saying okay, if it's just crazy talk,\nand we've got a nine-way tie\n\n430\n00:19:29.480 --> 00:19:33.690\nat this point, then we start just saying\nokay, let's go to something we know.\n\n431\n00:19:33.690 --> 00:19:34.250\nKnow is unique.\n\n432\n00:19:34.250 --> 00:19:36.360\nLet's go to stuff that we\nknow can't be a tie, right?\n\n433\n00:19:36.360 --> 00:19:38.490\nLike the neighbor with\nthe lowest router ID.\n\n434\n00:19:38.490 --> 00:19:42.650\nAll right, now usually you're not gonna\nhave two routers with the same router ID\n\n435\n00:19:42.650 --> 00:19:44.960\nbecause they use their\nIP address as a router.\n\n436\n00:19:44.960 --> 00:19:48.210\nBut it is possible, if you're not\nstatically setting your router IDs,\n\n437\n00:19:48.210 --> 00:19:52.040\nit's possible that you could have more\nthan one router that has the same IP\n\n438\n00:19:52.040 --> 00:19:55.680\naddress on it because of NATD networks or\nsomething like that.\n\n439\n00:19:55.680 --> 00:19:58.780\nAnd so it is possible you could\nhave a tie on router ID also.\n\n440\n00:19:58.780 --> 00:20:00.580\nSo then it just boils down to IP address.\n\n441\n00:20:00.580 --> 00:20:02.220\nWho's got the lowest IP address?\n\n442\n00:20:02.220 --> 00:20:04.740\nYou shouldn't have two routers at the same\nIP address when you're building neighbor\n\n443\n00:20:04.740 --> 00:20:05.660\nrelationships.\n\n444\n00:20:05.660 --> 00:20:08.040\nAnd so because it would be\nthe same neighbor, right?\n\n445\n00:20:08.040 --> 00:20:10.190\nSo everybody's got a different IP and\n\n446\n00:20:10.190 --> 00:20:13.030\nthat's going to be\nthe final deciding factor.\n\n447\n00:20:13.030 --> 00:20:15.340\nIt's really rare that it makes it\nall the way down to number 11.\n\n448\n00:20:15.340 --> 00:20:16.990\nBut number 11 is the deciding one.\n\n449\n00:20:16.990 --> 00:20:20.520\nRight, that's the one that's going\nto be our final tie breaker.\n\n450\n00:20:20.520 --> 00:20:24.360\nSo 11 things all go into\nthe decision making process.\n\n451\n00:20:24.360 --> 00:20:25.840\nWhy is this important to us?\n\n452\n00:20:25.840 --> 00:20:27.600\nOkay, well first off,\nbecause we want to pass the exam.\n\n453\n00:20:27.600 --> 00:20:29.180\nSo there's that.\n\n454\n00:20:29.180 --> 00:20:31.970\nBut in real life land,\nwhy is this important to us?\n\n455\n00:20:31.970 --> 00:20:36.580\nWell, it's important because one, when BGP\npicks a route, we kinda want to know why.\n\n456\n00:20:36.580 --> 00:20:38.330\nWhy did it pick this\nroute over that route?\n\n457\n00:20:38.330 --> 00:20:39.410\nIt's a good idea to understand it.\n\n458\n00:20:39.410 --> 00:20:42.680\nIf you're troubleshooting a network If\nyou're seeing traffic going one way, and\n\n459\n00:20:42.680 --> 00:20:45.410\nyou expect it to go another, you should\nbe able to look at these values and\n\n460\n00:20:45.410 --> 00:20:47.430\nfind out why it's happening, right?\n\n461\n00:20:47.430 --> 00:20:48.700\nBut, the more important reason,\n\n462\n00:20:48.700 --> 00:20:53.540\nthe number two reason,\nis you might wanna manipulate the routes.\n\n463\n00:20:53.540 --> 00:20:55.210\nIf we look at how OSPF is working.\n\n464\n00:20:55.210 --> 00:20:56.850\nI keep saying OSPF.\n\n465\n00:20:56.850 --> 00:21:01.460\nBGP, whatever this protocol is, if we look\nat how BGP is working, and I say boy,\n\n466\n00:21:01.460 --> 00:21:05.090\nthat ISP I know they're sending\ntraffic to headquarters, but\n\n467\n00:21:05.090 --> 00:21:07.640\nI want to ensure that they\nsent traffic to headquarters.\n\n468\n00:21:07.640 --> 00:21:11.000\nI don't want traffic to go through\nBranch1 unless it's an actual failure.\n\n469\n00:21:12.010 --> 00:21:13.470\nSo how can I influence that?\n\n470\n00:21:13.470 --> 00:21:16.650\nI can't tell the ISP what to do,\nwell you pay them money so maybe you can.\n\n471\n00:21:16.650 --> 00:21:20.300\nBut But\nI can't through BGP tell them what to do.\n\n472\n00:21:20.300 --> 00:21:21.630\nBut I can use med to do it.\n\n473\n00:21:21.630 --> 00:21:24.420\nOkay if I use the Med I can\ninfluence that on the outside.\n\n474\n00:21:24.420 --> 00:21:27.880\nOr on my own network if I'm trying\nto influence whether people go out\n\n475\n00:21:27.880 --> 00:21:31.090\nthrough headquarters or out through\nBRI I can use local preference.\n\n476\n00:21:31.090 --> 00:21:35.290\nAll right, or if I wanna prefer\nheadquarters for every network,\n\n477\n00:21:35.290 --> 00:21:37.630\nexcept for one remote network\nI wanna send to branch one.\n\n478\n00:21:37.630 --> 00:21:42.650\nI can modify the path, and I can add some\nautonomous system numbers to the path,\n\n479\n00:21:42.650 --> 00:21:44.280\nto make the path longer right?\n\n480\n00:21:44.280 --> 00:21:49.140\nThe trick there is if you have\nan AS Path like a Let's just kind of add\n\n481\n00:21:49.140 --> 00:21:50.700\nsomething fake here.\n\n482\n00:21:50.700 --> 00:21:56.640\nSo, if I have the smallest, tiniest,\nmost impossible to see font ever,\n\n483\n00:21:56.640 --> 00:22:01.510\nif I have a path that\nis something like 119,\n\n484\n00:22:01.510 --> 00:22:06.600\nor I'm in AS 65,000, right, so\nsay it's 65,000 and then 100 and\n\n485\n00:22:06.600 --> 00:22:11.400\nthen maybe 200, right, so\nthat's my path to get to some network.\n\n486\n00:22:11.400 --> 00:22:14.050\nI could modify that path, and\n\n487\n00:22:14.050 --> 00:22:17.750\nI could list my autonomous\nsystem more that once, right?\n\n488\n00:22:17.750 --> 00:22:18.970\nNow, what's that gonna do?\n\n489\n00:22:18.970 --> 00:22:24.250\nIf I list an autonomous system more than\nonce, does that mean there's a loop?\n\n490\n00:22:24.250 --> 00:22:25.070\nNo.\n\n491\n00:22:25.070 --> 00:22:25.640\nAll right?\n\n492\n00:22:25.640 --> 00:22:28.680\nIt doesn't mean there's a loop,\nit's just making the path longer.\n\n493\n00:22:28.680 --> 00:22:31.920\nIt's a way we can artificially make\nthe path longer, and now I'll prefer this\n\n494\n00:22:31.920 --> 00:22:34.710\nfirst one over the second one,\njust because the second one is longer.\n\n495\n00:22:34.710 --> 00:22:37.800\nSo that's another technique we\ncan use to modify that AS path.\n\n496\n00:22:37.800 --> 00:22:41.770\nAnd it all comes down to\nthis list right here, right?\n\n497\n00:22:41.770 --> 00:22:45.850\nStarting at the top, if I just want\none router to change its decisions,\n\n498\n00:22:45.850 --> 00:22:47.220\nI should use weight.\n\n499\n00:22:47.220 --> 00:22:50.180\nBut if I want my entire autonomous\nsystem to change decisions,\n\n500\n00:22:50.180 --> 00:22:52.350\nI should be using local preference, okay.\n\n501\n00:22:52.350 --> 00:22:54.250\nLocal preferences\nare a great way to do that.\n\n502\n00:22:54.250 --> 00:22:57.540\nIf I want other people to\nstart making decisions,\n\n503\n00:22:57.540 --> 00:23:00.360\nI can modify the AS path and\nthen that will start to change, right?\n\n504\n00:23:00.360 --> 00:23:03.860\nSo different techniques we can use for\neach manipulation and\n\n505\n00:23:03.860 --> 00:23:07.220\nwe need to understand this list to\nfigure out which one's the best.\n\n506\n00:23:07.220 --> 00:23:07.840\nAll right.\n\n507\n00:23:07.840 --> 00:23:11.060\nSo I wanna show you guys kind\na manipulating those decisions show you\n\n508\n00:23:11.060 --> 00:23:13.530\nsome kind a real world examples and\nhows it done but\n\n509\n00:23:13.530 --> 00:23:15.500\nI kind a talked a little ling for\nthis one.\n\n510\n00:23:15.500 --> 00:23:18.310\nSo maybe a, what do you think Ronnie,\nwe do a part two on this one?\n\n511\n00:23:18.310 --> 00:23:20.750\n>> I think we'll have to\ndo a part two on this one.\n\n512\n00:23:20.750 --> 00:23:23.450\nSo when we take a look\nat BGP path selection\n\n513\n00:23:23.450 --> 00:23:25.330\nremember what we took\nat look at today right.\n\n514\n00:23:25.330 --> 00:23:27.150\nWe went ahead and\n\n515\n00:23:27.150 --> 00:23:32.120\nviewed the eight or nine different\nBGP attributes That we have to know.\n\n516\n00:23:32.120 --> 00:23:35.330\nWe also then took a look at\nthe past selection process.\n\n517\n00:23:35.330 --> 00:23:38.470\nAnd remember that they are about tie\nbreakers so when it comes down to what I\n\n518\n00:23:38.470 --> 00:23:41.060\nshould get sent to your routing\ntable you need to know that.\n\n519\n00:23:41.060 --> 00:23:43.480\nAnd you need to know that not only to\nfigure out what routes are actually in\n\n520\n00:23:43.480 --> 00:23:44.190\nthere but so\n\n521\n00:23:44.190 --> 00:23:47.960\nthat you can actually have a choice\nin manipulating those paths as well.\n\n522\n00:23:47.960 --> 00:23:50.950\nSo that about wraps it up for\nthis part of our show today.\n\n523\n00:23:50.950 --> 00:23:53.240\nSigning off for ITProTV, i'm Ronnie Wong.\n\n524\n00:23:53.240 --> 00:23:53.930\n>> And I'm Don Pezet.\n\n525\n00:23:53.930 --> 00:23:56.315\n>> And we'll see you next time.\n\n526\n00:23:56.315 --> 00:24:01.080\n[SOUND]\n\n",
          "vimeoId": "138123196"
        },
        {
          "description": "BGP doesn't see a lot of the underlying infrastructure unlike EIGRP and OSPF, which have a really good view of the network, so one often might have a better understanding of the network to influence a route preference than the protocol itself. Viewers will see demonstrations of manipulating attributes to have some control over what route BGP picks and have influence over BGP performance, traffic coming into and out of an autonomous system.",
          "length": "1868",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/ccnproute/cisco-ccnproute300101-3-32-bgp_attributes_pt2-090315-1.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/ccnproute/cisco-ccnproute300101-3-32-bgp_attributes_pt2-090315-1-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/ccnproute/cisco-ccnproute300101-3-32-bgp_attributes_pt2-090315-1-sm.jpg",
          "title": "BGP Attributes Part 2",
          "transcript": "WEBVTT\n\n1\n00:00:00.000 --> 00:00:10.673\n[MUSIC]\n\n2\n00:00:10.673 --> 00:00:13.841\nAll right, good morning,\ngood afternoon, and good evening, and\n\n3\n00:00:13.841 --> 00:00:15.964\nwelcome back to another\nepisode of ITProTV.\n\n4\n00:00:15.964 --> 00:00:20.635\nI'm your host Don Pezet back again with\nanother episode of CCNP Route and in this\n\n5\n00:00:20.635 --> 00:00:25.698\nepisode we're gonna be continuing on\nwith our BGP attribute adventure, right.\n\n6\n00:00:25.698 --> 00:00:28.330\nIn part one we got a chance to\nsee what the all the different\n\n7\n00:00:28.330 --> 00:00:33.010\nattributes were in the 11 step decision\nmaking process that BGP goes through\n\n8\n00:00:33.010 --> 00:00:35.890\nwhen it picks the best way\nto get to a destination.\n\n9\n00:00:35.890 --> 00:00:39.420\nBut one thing we didn't do in that episode\nwas actually manipulate those values.\n\n10\n00:00:39.420 --> 00:00:40.550\nAnd that's what we're going to do today.\n\n11\n00:00:40.550 --> 00:00:43.345\nWe're gonna go in and\nmanipulate the attributes so\n\n12\n00:00:43.345 --> 00:00:46.730\nthat we can kinda have some\ncontrol over what route BGP picks.\n\n13\n00:00:46.730 --> 00:00:49.620\nAnd while you might say well I'm just\ngoing to leave it up to the protocol.\n\n14\n00:00:49.620 --> 00:00:52.460\nWhich is what we normally\ndo with EIGRP and OSPF.\n\n15\n00:00:52.460 --> 00:00:55.670\nWith BGP there's plenty of times\nwhere you want to get up there and\n\n16\n00:00:55.670 --> 00:00:59.110\ninfluence it because BGP is not\nthe most intelligent of protocols.\n\n17\n00:00:59.110 --> 00:01:02.230\nIt doesn't see a lot of\nthe underlying infrastructure.\n\n18\n00:01:02.230 --> 00:01:07.230\nSo unlike EIGRP and OSPF where they\nhave a really good view of the network.\n\n19\n00:01:07.230 --> 00:01:10.900\nIn BGP, there's plenty of times where you\nhave a better understanding of the network\n\n20\n00:01:10.900 --> 00:01:13.850\nthan it does, and so\nwe've got to get in and influence that.\n\n21\n00:01:13.850 --> 00:01:15.450\nSo I just want to show you\nguys some examples and\n\n22\n00:01:15.450 --> 00:01:16.920\nsome ways that we can do that.\n\n23\n00:01:16.920 --> 00:01:19.900\nSo, let's take a look at my topology and\nwhat we've got here, and\n\n24\n00:01:19.900 --> 00:01:23.480\nwe'll just kind of make this\nlike a real world type example.\n\n25\n00:01:23.480 --> 00:01:24.930\nHere we've got an autonomous system.\n\n26\n00:01:24.930 --> 00:01:26.720\nRight, and I'm using private IPs.\n\n27\n00:01:26.720 --> 00:01:29.820\nIn real life land,\nthese would be public IPs that we'd use.\n\n28\n00:01:29.820 --> 00:01:32.850\nYou never advertise a private\nIP out to the Internet.\n\n29\n00:01:32.850 --> 00:01:34.940\nBut I've got autonomous system 65000,\n\n30\n00:01:34.940 --> 00:01:38.160\nand I've got two different\nconnections to an ISP.\n\n31\n00:01:38.160 --> 00:01:43.460\nAn ISP is autonomous system 100, right,\nso that ISP sees these connections and\n\n32\n00:01:43.460 --> 00:01:47.380\nsays, all right, well,\nI can get to AS 65000 two different ways.\n\n33\n00:01:47.380 --> 00:01:48.830\nI can get there by going\nthrough headquarters or\n\n34\n00:01:48.830 --> 00:01:50.510\nI can get there going through branch one.\n\n35\n00:01:50.510 --> 00:01:52.720\nNow, BGP, what does it care about?\n\n36\n00:01:52.720 --> 00:01:55.160\nWell, normally we think of it in\nterms of path vector, right, so\n\n37\n00:01:55.160 --> 00:01:56.350\nit cares about path.\n\n38\n00:01:56.350 --> 00:02:02.580\nWell, AS 100 to AS 65000 this way and\nAS100 to AS65000, that way.\n\n39\n00:02:02.580 --> 00:02:04.200\nThey're kind of equal, aren't they?\n\n40\n00:02:04.200 --> 00:02:07.710\nSo, assuming that all things\nare equal along the lines,\n\n41\n00:02:07.710 --> 00:02:09.490\nwe've got a significant tie.\n\n42\n00:02:09.490 --> 00:02:13.370\nAnd if we look at our past\nselection criteria, right?\n\n43\n00:02:13.370 --> 00:02:15.870\nYou've got weight and\nlocal preference, and\n\n44\n00:02:15.870 --> 00:02:17.320\nwhether it's originated by a router,\nright?\n\n45\n00:02:17.320 --> 00:02:18.570\nLet's go down the line, here.\n\n46\n00:02:18.570 --> 00:02:20.790\nWell, if I left everything at the default.\n\n47\n00:02:20.790 --> 00:02:22.030\nThen the weight is gonna be a tie.\n\n48\n00:02:22.030 --> 00:02:24.850\nThe local preference is gonna be a tie.\n\n49\n00:02:24.850 --> 00:02:26.570\nThe route originated by the local router?\n\n50\n00:02:26.570 --> 00:02:27.690\nIt didn't right?\n\n51\n00:02:27.690 --> 00:02:32.090\nThe route is actually originating\nfrom a different AS and\n\n52\n00:02:32.090 --> 00:02:35.070\ncoming into the ISP so it's not even\nlocal to the autonomous system.\n\n53\n00:02:35.070 --> 00:02:36.470\nSo that doesn't apply.\n\n54\n00:02:36.470 --> 00:02:38.240\nThe AS path is equal.\n\n55\n00:02:38.240 --> 00:02:39.230\nThe origin.\n\n56\n00:02:39.230 --> 00:02:44.500\nThey're both coming from BGP, right from\nan external AS, so the origin's the same.\n\n57\n00:02:44.500 --> 00:02:46.430\nThe MED's not set, so it's the same.\n\n58\n00:02:46.430 --> 00:02:49.500\nWe just start going down, down,\ndown, down, down this list, right?\n\n59\n00:02:49.500 --> 00:02:52.470\nThe route from eBGP over routes from iBGP.\n\n60\n00:02:52.470 --> 00:02:54.470\nWell, we're learning this through eBGP,\nright?\n\n61\n00:02:54.470 --> 00:02:58.130\nIt's coming between autonomous systems.\n\n62\n00:02:58.130 --> 00:02:59.850\nSo we just kinda keep\ngoing down that line.\n\n63\n00:02:59.850 --> 00:03:02.520\nThe route from the closest IGP neighbor.\n\n64\n00:03:02.520 --> 00:03:06.380\nWell, we don't normally run an IGP\nbetween an ISP and a customer.\n\n65\n00:03:06.380 --> 00:03:08.050\nSo there is no IGP here.\n\n66\n00:03:08.050 --> 00:03:10.460\nThe oldest eBGP route.\n\n67\n00:03:10.460 --> 00:03:12.260\nThat's the first one we come across.\n\n68\n00:03:12.260 --> 00:03:13.140\nNumber nine, right?\n\n69\n00:03:13.140 --> 00:03:16.240\nThat's the first one that we come across\nthat would conceivably be different.\n\n70\n00:03:16.240 --> 00:03:20.650\nThe odds of both of these links coming up\nat exactly the same time are pretty low.\n\n71\n00:03:20.650 --> 00:03:22.720\nSo one of them is going to\nbe older than the other.\n\n72\n00:03:22.720 --> 00:03:24.460\nWhich one?\nI don't know.\n\n73\n00:03:24.460 --> 00:03:26.390\nIt depends on which router came out first.\n\n74\n00:03:26.390 --> 00:03:30.570\nAnd maybe, one router's been up for a\nyear, the other router's only been up for\n\n75\n00:03:30.570 --> 00:03:33.800\na month, but I reboot the router\nthat's been up for a year.\n\n76\n00:03:33.800 --> 00:03:36.620\nOnce it's rebooted, now it's the new one,\nthe other one becomes the oldest.\n\n77\n00:03:36.620 --> 00:03:38.270\nAnd it becomes preferred.\n\n78\n00:03:38.270 --> 00:03:42.360\nSo as it stands ISP one can be\nsending my traffic to branch one.\n\n79\n00:03:42.360 --> 00:03:45.200\nIt can be going through my backup\nlink instead of my primary, so\n\n80\n00:03:45.200 --> 00:03:46.820\nwe need to influence that.\n\n81\n00:03:46.820 --> 00:03:49.210\nThere's two ways we can influence it.\n\n82\n00:03:49.210 --> 00:03:54.650\nOne, is we can call the ISP and say hey,\ncan you set the local preference on your\n\n83\n00:03:54.650 --> 00:03:59.730\nsystems so that you prefer to send traffic\nto us through HQ instead of branch one.\n\n84\n00:04:00.910 --> 00:04:04.310\nRemember local preference\nis how we influence how we\n\n85\n00:04:04.310 --> 00:04:05.910\nexit an autonomous system.\n\n86\n00:04:05.910 --> 00:04:06.980\nAnd that's exactly what I want.\n\n87\n00:04:06.980 --> 00:04:11.180\nI wanna influence ISP1 exiting\ntheir AS and coming to mine.\n\n88\n00:04:11.180 --> 00:04:13.470\nSo if I call them, they can do it.\n\n89\n00:04:13.470 --> 00:04:17.260\nI can't change their AS, but let's say\nI just can't get them on the phone, and\n\n90\n00:04:17.260 --> 00:04:18.560\nI'm in a hurry.\n\n91\n00:04:18.560 --> 00:04:22.130\nOr I just wanna try and do this on\nmy own and not get them involved.\n\n92\n00:04:22.130 --> 00:04:26.850\nWell, we can't tell them\nhow to exit their AS, but\n\n93\n00:04:26.850 --> 00:04:31.000\nwe can suggest to them how to enter ours.\n\n94\n00:04:31.000 --> 00:04:35.060\nWe can say, for our autonomous system,\nwe have a preference for\n\n95\n00:04:35.060 --> 00:04:36.590\nhow we'd like you to enter it.\n\n96\n00:04:36.590 --> 00:04:40.340\nRight, and the way we influence\nincoming connections is with the MED,\n\n97\n00:04:40.340 --> 00:04:43.690\nright, the Multi-Exit Descriminator or\nthe metric, right.\n\n98\n00:04:43.690 --> 00:04:47.180\nIt's the same thing metric or\nMulti-Exit Descriminator, but\n\n99\n00:04:47.180 --> 00:04:49.130\nit's normally just called the MED.\n\n100\n00:04:49.130 --> 00:04:52.730\nThe MED is a suggestion,\nI can suggest to the ISP.\n\n101\n00:04:52.730 --> 00:04:56.800\nHey, why don't you prefer\nheadquarters over branch one, and\n\n102\n00:04:56.800 --> 00:05:00.030\nthey can choose to ignore it if they want,\nwe can't force them to do a thing, but\n\n103\n00:05:00.030 --> 00:05:03.170\nthat's what were going to do, we're gonna\nsuggest that they use headquarters.\n\n104\n00:05:03.170 --> 00:05:05.380\nRight, now they might already\nbe using headquarters,\n\n105\n00:05:05.380 --> 00:05:10.260\nif I take a look at ISP1, and we'll do\nthat thing we can't do in real life\n\n106\n00:05:10.260 --> 00:05:12.290\nwhich is look at the ISP's config, right.\n\n107\n00:05:13.780 --> 00:05:17.730\nBut if I take a look at ISP1,\nand I do a show ip bgp.\n\n108\n00:05:17.730 --> 00:05:25.970\nAnd let me just jump right down to\nthe 172.16 networks, there they are.\n\n109\n00:05:25.970 --> 00:05:28.123\nI can see that it's learned\nthese networks, and\n\n110\n00:05:28.123 --> 00:05:30.180\nit's learned two routes to each one,\nright?\n\n111\n00:05:30.180 --> 00:05:37.090\n204.109.63.6, that's branch one, and\n204.109.63.2, that's headquarters.\n\n112\n00:05:37.090 --> 00:05:41.440\nAnd so it's learned the two routes\nto each one and they're all valid.\n\n113\n00:05:41.440 --> 00:05:45.780\nThey've all got the little asterisk there,\nbut it's only installed one of them.\n\n114\n00:05:45.780 --> 00:05:47.550\nIt's installed the ones\nthrough headquarters.\n\n115\n00:05:47.550 --> 00:05:48.579\nNow, why did it pick headquarters?\n\n116\n00:05:49.760 --> 00:05:51.670\nIt must have been the one\nthat was up first, right.\n\n117\n00:05:51.670 --> 00:05:55.064\nIf we lose that connection to headquarters\nthen it's going to flip over to the other\n\n118\n00:05:55.064 --> 00:05:55.800\nbranch, right?\n\n119\n00:05:55.800 --> 00:05:57.640\nAnd we could simulate that if we want.\n\n120\n00:05:58.690 --> 00:06:03.720\nIf I take the connection to headquarters\nand just shut it down, right.\n\n121\n00:06:03.720 --> 00:06:06.260\nSo now I've lost that\nconnection to headquarters.\n\n122\n00:06:06.260 --> 00:06:09.320\nGoing back to my diagram that's this link\nright here that I've just shut down.\n\n123\n00:06:09.320 --> 00:06:11.310\nSo I'm going to lose that neighbor, right.\n\n124\n00:06:11.310 --> 00:06:13.550\nSo we'll see that neighbor going down.\n\n125\n00:06:13.550 --> 00:06:17.199\nAnd if I take a look at my\nBGP database and I look for\n\n126\n00:06:17.199 --> 00:06:21.204\nthose same networks,\nwell they're still in here but\n\n127\n00:06:21.204 --> 00:06:25.930\nnow I've got only one route to\nget there right from branch one.\n\n128\n00:06:25.930 --> 00:06:31.991\nAnd then if I bring this interface back\nup If there wasn't a tie, if there was\n\n129\n00:06:31.991 --> 00:06:36.180\nsome reason why I was picking that network\nthen it will become the primary again.\n\n130\n00:06:36.180 --> 00:06:40.420\nBut if it was a true tie and it got\nall the way down to who's the oldest,\n\n131\n00:06:40.420 --> 00:06:42.460\nwell headquarters isn't\nthe oldest anymore.\n\n132\n00:06:43.700 --> 00:06:45.180\nAnd so we go to look at that route,\n\n133\n00:06:45.180 --> 00:06:47.090\nwe might see something\na little bit different.\n\n134\n00:06:47.090 --> 00:06:50.050\nNow I'm gonna have to wait just a second\nwhile it kinda cleans itself up.\n\n135\n00:06:50.050 --> 00:06:52.870\nIt shouldn't take too long but you'll\nsee like I've got some neighbor states\n\n136\n00:06:52.870 --> 00:06:54.600\nchanging here, unknown path error, right?\n\n137\n00:06:54.600 --> 00:06:58.670\nIt's trying to clean up what it's got in\nthe system, and if I got back in here and\n\n138\n00:06:58.670 --> 00:07:00.730\nlook, it still hasn't\nlearned those routes, but\n\n139\n00:07:00.730 --> 00:07:02.680\nit'll pick them up here in just a moment.\n\n140\n00:07:02.680 --> 00:07:06.770\nNow when it does, it's going to leave the\nconnection to branch one as the primary.\n\n141\n00:07:06.770 --> 00:07:09.340\nSo I need to influence it to say,\ngo the other route.\n\n142\n00:07:09.340 --> 00:07:13.203\nSo what I'm going to do is I'm going\nto jump over to headquarters, and\n\n143\n00:07:13.203 --> 00:07:15.760\nwe're going to use the MED\nto influence this.\n\n144\n00:07:15.760 --> 00:07:18.760\nAnd the way MEd works,\nwith MED you set a number, right.\n\n145\n00:07:18.760 --> 00:07:22.600\nAnd the default med is just zero, so\nI want to make sure I change that.\n\n146\n00:07:22.600 --> 00:07:25.370\nAnd change it to something a little\nmore useful for me, right.\n\n147\n00:07:25.370 --> 00:07:29.740\nSo if I do a show ip bpg and\nlook at everything, here's the metric and\n\n148\n00:07:29.740 --> 00:07:31.100\nsee how they're all set to zero.\n\n149\n00:07:31.100 --> 00:07:34.000\nAll these routes have a metric of zero,\nall right.\n\n150\n00:07:34.000 --> 00:07:36.830\nSo I want to make sure that\nwhen I advertise those 172\n\n151\n00:07:36.830 --> 00:07:41.670\nout of 16 networks out to the ISP\nthat they prefer headquarters.\n\n152\n00:07:41.670 --> 00:07:45.080\nSo with MED, it's one of those\nvalues that's a little weird.\n\n153\n00:07:45.080 --> 00:07:47.040\nCuz the lower number is better.\n\n154\n00:07:47.040 --> 00:07:49.680\nA lower MED is better than a higher MED.\n\n155\n00:07:49.680 --> 00:07:53.615\nAnd everything's got a MED of zero which\nis like the best MED you can have by\n\n156\n00:07:53.615 --> 00:07:54.198\ndefault.\n\n157\n00:07:54.198 --> 00:07:57.046\nSo I'm gonna have to change Not\njust the routes that I prefer but\n\n158\n00:07:57.046 --> 00:07:59.573\nI'm also gonna change the routes\nthat I don't prefer so\n\n159\n00:07:59.573 --> 00:08:02.600\nwe're gonna have to do a little\nbit of kind of magic here.\n\n160\n00:08:02.600 --> 00:08:05.960\nAnd the best way to do it is with\na route map because a route map we can\n\n161\n00:08:05.960 --> 00:08:08.015\nreally dial in like a laser beam and\npick exactly.\n\n162\n00:08:08.015 --> 00:08:10.345\nExactly what we wanna filter, all right?\n\n163\n00:08:10.345 --> 00:08:12.845\nSo, I just wanna mess\nwith the 172.16 networks.\n\n164\n00:08:13.915 --> 00:08:17.135\nSo the first thing I'm gonna do is\nI'm gonna create an access list.\n\n165\n00:08:17.135 --> 00:08:21.485\nSo I'm just gonna say\naccess-list 1 permit and\n\n166\n00:08:21.485 --> 00:08:24.949\nI wanna catch all the 172.16 networks.\n\n167\n00:08:24.949 --> 00:08:29.235\nAnd so I'm gonna put this in here,\nand I'm gonna specify it like this.\n\n168\n00:08:29.235 --> 00:08:33.750\nNow normally this would refer to Hosts,\nright, or a network as a whole.\n\n169\n00:08:33.750 --> 00:08:37.010\nBut here, it's gonna be\na network in my routing table.\n\n170\n00:08:37.010 --> 00:08:39.630\nRight, so I'm kind of using this as\nsomething a little different than what I'd\n\n171\n00:08:39.630 --> 00:08:40.200\nnormally use it for.\n\n172\n00:08:41.270 --> 00:08:44.910\nSo this access list is just gonna match\nany network that starts with 172.16.\n\n173\n00:08:44.910 --> 00:08:47.990\nRight, that's all it's gonna match.\n\n174\n00:08:47.990 --> 00:08:49.190\nAnd then I can create a route map.\n\n175\n00:08:50.400 --> 00:08:52.320\nAnd I'll give the route\nmap some kind of a name so\n\n176\n00:08:52.320 --> 00:08:53.490\nI can remember what it does, right?\n\n177\n00:08:53.490 --> 00:08:58.030\nSo I might call it out-to-isp1 right?\n\n178\n00:08:58.030 --> 00:09:00.250\nSo I can remember that these\nare routes that I'm setting or\n\n179\n00:09:00.250 --> 00:09:03.470\nmaybe that's longer than I want to be,\nmaybe I'll just call it to-isp1 right?\n\n180\n00:09:03.470 --> 00:09:06.880\nSo this is stuff that I'm sending to and\nI might have another route map\n\n181\n00:09:06.880 --> 00:09:10.250\ncalled from-isp1 that I use to\nmanipulate incoming routes but\n\n182\n00:09:10.250 --> 00:09:13.570\nthis is going to manipulate\noutgoing routes All right.\n\n183\n00:09:13.570 --> 00:09:16.130\nWell, actually let me add\na little more to that.\n\n184\n00:09:16.130 --> 00:09:20.480\nThen, I'm going to be permitting some\nroutes to pass through and I'm going to\n\n185\n00:09:20.480 --> 00:09:23.530\nuse sequence numbers because the order is\ngoing to be kind of important on this.\n\n186\n00:09:23.530 --> 00:09:25.750\nWhen you just press enter it actually\ndoes that in the background but\n\n187\n00:09:25.750 --> 00:09:27.870\nI wanted to type it so\nyou guys could see what's happening.\n\n188\n00:09:27.870 --> 00:09:32.460\nI'm just saying route map To ISP one and\nthen permit ten,\n\n189\n00:09:32.460 --> 00:09:36.970\nthis is the tenth line and I'll just go\nin increments of ten as I create these.\n\n190\n00:09:36.970 --> 00:09:42.770\nAnd now I tell it what I wanna do, and\nI'm gonna say match IP address one.\n\n191\n00:09:42.770 --> 00:09:46.500\nSo look for any routes that match that\naccess list that I wrote a minute ago.\n\n192\n00:09:46.500 --> 00:09:49.610\nIn other words, look for\nany route that starts with 170 to 16.\n\n193\n00:09:49.610 --> 00:09:53.310\nAnd when you find it, set the metric.\n\n194\n00:09:53.310 --> 00:09:54.960\nOkay, I'm going to set that med.\n\n195\n00:09:54.960 --> 00:09:57.670\nI'm going to set the metric to 100.\n\n196\n00:09:57.670 --> 00:09:59.670\nAll right.\n\n197\n00:09:59.670 --> 00:10:03.420\nNow, if the default med is 0,\nand I just set these to 100,\n\n198\n00:10:03.420 --> 00:10:05.790\neverything else is going to\nhave a better med, right?\n\n199\n00:10:05.790 --> 00:10:10.510\nWell, I need to change them, too, so\nI'm going to add another line And\n\n200\n00:10:10.510 --> 00:10:16.570\nthis time I'll say,\nroute map to ISP1 permit 20, all right.\n\n201\n00:10:16.570 --> 00:10:18.600\nAnd I'm not gonna do a match statement.\n\n202\n00:10:18.600 --> 00:10:21.500\nWhen you don't do a match statement,\nit matches everything, so\n\n203\n00:10:21.500 --> 00:10:23.100\nthis is gonna be every other route.\n\n204\n00:10:23.100 --> 00:10:27.144\nI'm gonna match everything else and\nI'll set their metric to 200.\n\n205\n00:10:28.210 --> 00:10:32.450\nOkay, so now,\nthe 172.16's are gonna have that med\n\n206\n00:10:32.450 --> 00:10:37.870\nof 100 every other route that I send\nout is gonna have a med of 200, okay.\n\n207\n00:10:37.870 --> 00:10:42.110\nSo, that's how we're gonna push that along\nand the ISP is gonna start seeing that.\n\n208\n00:10:42.110 --> 00:10:43.240\nWell, they're not gonna see it yet.\n\n209\n00:10:43.240 --> 00:10:44.370\nI made the route map.\n\n210\n00:10:44.370 --> 00:10:47.370\nBut the route map doesn't actually work\nuntil I attach it to the neighbor.\n\n211\n00:10:47.370 --> 00:10:49.680\nSo my next step is to get into BGP, right?\n\n212\n00:10:51.150 --> 00:10:57.790\nAnd if we take a look at the config,\nand we find that router BGP 65000,\n\n213\n00:10:57.790 --> 00:11:02.330\nI can find the neighbor statement\nfrom my ISP right there.\n\n214\n00:11:02.330 --> 00:11:02.880\nRight?\n\n215\n00:11:02.880 --> 00:11:06.860\nAnd the only option I've specified here\nis that the remote AS is one hundred.\n\n216\n00:11:06.860 --> 00:11:11.230\nSo I'm going to add another line, where\nI'm going to say, \"Here's the neighbor,\"\n\n217\n00:11:11.230 --> 00:11:16.680\nand I'm going to attach that\nroute map to ISP 1, okay?\n\n218\n00:11:16.680 --> 00:11:20.990\nNow, you can have one incoming and\none outgoing route map.\n\n219\n00:11:20.990 --> 00:11:24.040\nI want to do outgoing, because I'm\nmodifying the med on the way out to\n\n220\n00:11:24.040 --> 00:11:27.900\nthe ISP, but I could do incoming to modify\nvalues for stuff that I'm learning, too.\n\n221\n00:11:27.900 --> 00:11:31.810\nSo it's real important here at the end\nto specify in or out and mines an out.\n\n222\n00:11:31.810 --> 00:11:35.530\nAlright, so\nI am going to go ahead an specify that.\n\n223\n00:11:35.530 --> 00:11:38.080\nSo when I send routes to the ISP,\n\n224\n00:11:38.080 --> 00:11:41.860\nthe routes are going to go\nthrough that route map first.\n\n225\n00:11:41.860 --> 00:11:50.720\nIf they match access list one, they\nare going to get their metics set to 100.\n\n226\n00:11:50.720 --> 00:11:54.140\nAnd then if they match anything else,\nthey'll get that metric of 200.\n\n227\n00:11:54.140 --> 00:11:54.910\nOkay.\n\n228\n00:11:54.910 --> 00:11:57.270\nSo now I'm going to be sending\nthose up to the ISP and\n\n229\n00:11:57.270 --> 00:11:59.020\nthey're gonna have those med values.\n\n230\n00:11:59.020 --> 00:12:00.050\nAll right?\n\n231\n00:12:00.050 --> 00:12:01.450\nNow here's my problem.\n\n232\n00:12:01.450 --> 00:12:06.870\nI just set that so that I'm applying\na certain preference to those 172 S16s.\n\n233\n00:12:06.870 --> 00:12:09.910\nWell, if I don't do anything else.\n\n234\n00:12:09.910 --> 00:12:12.630\nBranch one is still advertising\nroutes with a MET of 0.\n\n235\n00:12:12.630 --> 00:12:15.710\nAnd with MET, a lower number is preferred.\n\n236\n00:12:15.710 --> 00:12:18.640\nSo now branch one is absolutely preferred.\n\n237\n00:12:18.640 --> 00:12:22.420\nSo I need to go and update branch one and\nI need to set branch one so\n\n238\n00:12:22.420 --> 00:12:27.450\nthat when it sends its routes out, that\nevery route it sends has a MET of 200.\n\n239\n00:12:27.450 --> 00:12:31.320\nIf it does that,\nall it's routes have a map of 200.\n\n240\n00:12:31.320 --> 00:12:33.690\nHeadquarters is sending out\nthe 172.16 routes with a map of 100,\n\n241\n00:12:33.690 --> 00:12:35.720\nthose will be preferred, all right?\n\n242\n00:12:35.720 --> 00:12:40.640\nSo I'm gonna jump over the branch one and\ndo a very similar thing over there.\n\n243\n00:12:40.640 --> 00:12:46.150\nOn branch one I'll just\njump into my config and\n\n244\n00:12:46.150 --> 00:12:49.810\nI'll say access dash list, or actually,\nI don't even need an access here,\n\n245\n00:12:49.810 --> 00:12:52.030\nbecause I want every route\nto have a MED of 200, right?\n\n246\n00:12:52.030 --> 00:12:57.220\nSo I'm just going to create a route\nmap which I'll call \"to-isp1\", right?\n\n247\n00:12:57.220 --> 00:13:00.050\nAnd, really, I'm doing a \"permit 10\",\neven though I left it off.\n\n248\n00:13:00.050 --> 00:13:02.830\nAnd here I'll just leave\nthe match statement out,\n\n249\n00:13:02.830 --> 00:13:07.360\nI'm going to match everything and\nI'm just going to say \"set metric 200\".\n\n250\n00:13:07.360 --> 00:13:08.900\nAll right?\nAnd that's the only line for\n\n251\n00:13:08.900 --> 00:13:09.890\nthis route map.\n\n252\n00:13:09.890 --> 00:13:12.420\nSo pretty straightforward on that one.\n\n253\n00:13:12.420 --> 00:13:15.050\nIf I do a show route-map,\n\n254\n00:13:15.050 --> 00:13:19.040\nwe can see that it matches everything and\nsets the metric to 200.\n\n255\n00:13:19.040 --> 00:13:25.721\nAnd so now all I have to do is\nget into router bgp65000 and\n\n256\n00:13:25.721 --> 00:13:31.117\nthen Take that neighbor statement and\n\n257\n00:13:31.117 --> 00:13:35.493\nattach the route map to it so\nI'll say route map to ISP1 and\n\n258\n00:13:35.493 --> 00:13:41.540\nthen I'm just gonna say that this\nis an outbound route map all right.\n\n259\n00:13:41.540 --> 00:13:46.780\nNow once that's done you got two choices\nright one we can be patient we can sit and\n\n260\n00:13:46.780 --> 00:13:50.510\nwait and eventually this will propagate\nout the other side will get it and\n\n261\n00:13:50.510 --> 00:13:53.490\nit'll start influencing things Or\ntwo, we could hurry things along.\n\n262\n00:13:53.490 --> 00:13:58.120\nAnd if you want to hurry it along,\nthe easiest way to do that is if you do\n\n263\n00:13:58.120 --> 00:14:03.020\na clear IP BGP,\nyou can specify a particular neighbor.\n\n264\n00:14:03.020 --> 00:14:06.350\nAnd the neighbor is\nthe one that's on AS100.\n\n265\n00:14:06.350 --> 00:14:08.570\nIf you know it's IP,\nthat's the best way to do it.\n\n266\n00:14:08.570 --> 00:14:11.480\nIf you don't know is IP, like I've\nalready forgotten, I'll just say 100.\n\n267\n00:14:11.480 --> 00:14:13.660\nI'm gonna clear all my\nconnections to AS 100.\n\n268\n00:14:13.660 --> 00:14:15.280\nI've only got one, right?\n\n269\n00:14:15.280 --> 00:14:19.640\nAnd then you can specify whether\nit's soft or if you don't,\n\n270\n00:14:19.640 --> 00:14:21.470\nit's a hard reset which\nwill cause downtime.\n\n271\n00:14:21.470 --> 00:14:22.800\nI'm wanna do soft.\n\n272\n00:14:22.800 --> 00:14:25.520\nAnd then you can say whether you want to\ndo it for incoming or outgoing routes.\n\n273\n00:14:25.520 --> 00:14:26.430\nI'm gonna do it for both.\n\n274\n00:14:26.430 --> 00:14:29.360\nReally I just need to do it for\nmy outgoing but I'll do it for both.\n\n275\n00:14:29.360 --> 00:14:29.980\nAll right.\n\n276\n00:14:29.980 --> 00:14:32.720\nAnd I'm gonna jump over to headquarters\nand do the exact same thing.\n\n277\n00:14:34.760 --> 00:14:38.450\nSo I'm going to clear the connections\nto AS100, and I'll do it as a soft one.\n\n278\n00:14:38.450 --> 00:14:43.290\nSo that's basically telling the other AS,\nhey, don't dump your routing table.\n\n279\n00:14:43.290 --> 00:14:46.760\nBut do refresh all the routes\nin your BGP database.\n\n280\n00:14:46.760 --> 00:14:49.420\nSo that way you get the latest stuff,\nand you should have the proper metrics.\n\n281\n00:14:50.830 --> 00:14:54.130\nSo let's take a look at ISP1 and see\nwhat it looks like from their side now.\n\n282\n00:14:54.130 --> 00:14:59.030\nOn ISP1 I should be seeing these\nroutes coming in from headquarters and\n\n283\n00:14:59.030 --> 00:15:00.470\nfrom branch one.\n\n284\n00:15:00.470 --> 00:15:05.020\nFrom headquarters I should be seeing\nthem come in with a med of 100.\n\n285\n00:15:05.020 --> 00:15:07.240\nFrom branch one,\nthey should have a med of 200.\n\n286\n00:15:07.240 --> 00:15:12.140\nSo if I jump in here and look for\nthose 172.\\.16 routes, I should find\n\n287\n00:15:14.010 --> 00:15:16.380\nthose or I should find nothing.\n\n288\n00:15:16.380 --> 00:15:19.610\nLet's just double check\nmy BGP database here.\n\n289\n00:15:19.610 --> 00:15:22.330\nAnd there we go, all right,\nI did a bad regular expression.\n\n290\n00:15:22.330 --> 00:15:23.050\nSo here we go.\n\n291\n00:15:23.050 --> 00:15:27.170\nWe've got 172.16, there's those\nnetworks that are coming in, all right?\n\n292\n00:15:27.170 --> 00:15:30.350\nJust like before where I saw them coming\nin from headquarters and branch one.\n\n293\n00:15:30.350 --> 00:15:33.040\nHere I see them coming in from both,\nright?\n\n294\n00:15:33.040 --> 00:15:37.250\nThe difference is, while it is preferring\nheadquarters, now I can see why.\n\n295\n00:15:37.250 --> 00:15:40.650\nSee how the routes coming from\nbranch one have a map of 200 And\n\n296\n00:15:40.650 --> 00:15:43.490\nthe routes coming from headquarters\nhave a met of 100, all right.\n\n297\n00:15:43.490 --> 00:15:46.027\nSo I'm making a suggestion to ISP 1.\n\n298\n00:15:46.027 --> 00:15:49.698\nHey ISP 1, when you pick, could you\nplease pick the connections through our\n\n299\n00:15:49.698 --> 00:15:52.482\nheadquarters instead of\npicking them through branch 1?\n\n300\n00:15:52.482 --> 00:15:55.099\nAnd if they're honoring the med,\nwhich most people do,\n\n301\n00:15:55.099 --> 00:15:57.870\nthen that's what they're gonna pick,\nall right?\n\n302\n00:15:57.870 --> 00:15:59.050\nBut, it's up to them.\n\n303\n00:15:59.050 --> 00:16:01.650\nAnd a key thing to remember here\nis that it's not transitive.\n\n304\n00:16:01.650 --> 00:16:03.150\nSo, I'm telling ISP1.\n\n305\n00:16:03.150 --> 00:16:05.830\nISP1 has a connection on\nthe back end to ISP2.\n\n306\n00:16:05.830 --> 00:16:08.220\nThe med does not pass on to ISP2.\n\n307\n00:16:08.220 --> 00:16:09.980\nISP2 is not gonna get that.\n\n308\n00:16:09.980 --> 00:16:13.580\nAnd so, ISP2 may choose to go\na completely different way to get there.\n\n309\n00:16:13.580 --> 00:16:17.400\nBut as far as my direct neighbor,\nautonomous system one hundred here,\n\n310\n00:16:17.400 --> 00:16:18.840\nI'm giving them a suggestion.\n\n311\n00:16:18.840 --> 00:16:19.900\nAnd they can follow it, and\n\n312\n00:16:19.900 --> 00:16:22.500\nthat's how we influence the way\nthey get into the network.\n\n313\n00:16:22.500 --> 00:16:26.180\nNow, influencing stuff coming into your\nnetwork, you're kind of at the whim of\n\n314\n00:16:26.180 --> 00:16:28.720\nthe neighbor right, because at\nthe end of the day it's their control.\n\n315\n00:16:28.720 --> 00:16:33.020\nInfluencing stuff on the way out of your\nnetwork though, that's a different story.\n\n316\n00:16:33.020 --> 00:16:35.490\nYou control stuff going\nout of your network.\n\n317\n00:16:35.490 --> 00:16:38.240\nMed is how you control incoming traffic.\n\n318\n00:16:38.240 --> 00:16:41.900\nLocal preference is how we\ncontrol outgoing traffic.\n\n319\n00:16:41.900 --> 00:16:44.310\nIf I take a look at one of\nmy interior routers, right?\n\n320\n00:16:44.310 --> 00:16:46.730\nLet me go back to my topology here.\n\n321\n00:16:46.730 --> 00:16:48.600\nA router like branch 2 or branch 3.\n\n322\n00:16:48.600 --> 00:16:50.410\nIf these guys wanna get\nout to the internet,\n\n323\n00:16:50.410 --> 00:16:54.230\nthey have to pass through headquarters or\nbranch 1 to get out to it, all right?\n\n324\n00:16:54.230 --> 00:16:57.300\nSo when it comes to a network\nlike this guy right here.\n\n325\n00:16:57.300 --> 00:17:00.970\nThere's 116.17.91 network If\nthey wanna get to that network\n\n326\n00:17:00.970 --> 00:17:03.800\nthey're gonna use BGP and\nfigure out the way to get there or\n\n327\n00:17:03.800 --> 00:17:06.340\nmaybe I've redistributed\ninto an interior protocol.\n\n328\n00:17:06.340 --> 00:17:09.620\nBut in my environment I've got\na full mesh BGP Network right now.\n\n329\n00:17:09.620 --> 00:17:12.650\nSo they're gonna look to that to\nfigure out which way they wanna go and\n\n330\n00:17:12.650 --> 00:17:14.690\nwhich router are they gonna pick?\n\n331\n00:17:14.690 --> 00:17:15.690\nWell, I don't know, right?\n\n332\n00:17:15.690 --> 00:17:17.580\nIn my network everything's actually equal.\n\n333\n00:17:17.580 --> 00:17:20.660\nThese links all have equal bandwidth,\nnot that BGP cares about that, but\n\n334\n00:17:20.660 --> 00:17:22.520\nlike interior protocols do.\n\n335\n00:17:22.520 --> 00:17:27.045\nAnd my AS path, well, we're all interior,\nright, so it's all one AS.\n\n336\n00:17:27.045 --> 00:17:30.505\nSo they're reeling into tree\nheadquarters and branch one equally.\n\n337\n00:17:30.505 --> 00:17:31.765\nI might not want that.\n\n338\n00:17:31.765 --> 00:17:36.265\nI might want them to prefer\nheadquarters over using branch one.\n\n339\n00:17:36.265 --> 00:17:40.485\nSo I can jump in and create a local\npreference to influence that.\n\n340\n00:17:40.485 --> 00:17:42.585\nNow this is kinda the opposite\nof what we just did.\n\n341\n00:17:42.585 --> 00:17:46.710\nIn the last example what\nwe ended up doing there\n\n342\n00:17:46.710 --> 00:17:51.080\nWas setting a med on our\noutgoing routes to another AS.\n\n343\n00:17:51.080 --> 00:17:53.650\nHere, I wanna set the local preference\n\n344\n00:17:53.650 --> 00:17:56.490\nto routes that are going to\nneighbors inside of my network.\n\n345\n00:17:56.490 --> 00:17:57.920\nSo, a little bit different, there.\n\n346\n00:17:57.920 --> 00:17:59.710\nAnd I've got two ways I can do that.\n\n347\n00:17:59.710 --> 00:18:03.330\nI can set the local preference as I\nsend it to a particular neighbor.\n\n348\n00:18:03.330 --> 00:18:04.230\nThat's one way.\n\n349\n00:18:04.230 --> 00:18:06.750\nSo that would be setting\na local preference\n\n350\n00:18:06.750 --> 00:18:10.400\nas I send the route from this\ninterface into my metro e network.\n\n351\n00:18:11.700 --> 00:18:14.350\nThat way works, but\nyou have to define it for each and\n\n352\n00:18:14.350 --> 00:18:16.900\nevery person you're sending it to,\nand that gets hold fast.\n\n353\n00:18:16.900 --> 00:18:17.990\nRight?\n\n354\n00:18:17.990 --> 00:18:21.160\nSo another option is we can set\nthe local preference as the route comes\n\n355\n00:18:21.160 --> 00:18:22.840\ninto our headquarters.\n\n356\n00:18:22.840 --> 00:18:25.540\nAnd local preference will propagate\nthrough your autonomous system, so\n\n357\n00:18:25.540 --> 00:18:26.330\nwe can set up once and\n\n358\n00:18:26.330 --> 00:18:30.310\nit will apply to any number of neighbors\nI have inside of my autonomous system.\n\n359\n00:18:30.310 --> 00:18:31.760\nThat's the easier way to do it.\n\n360\n00:18:31.760 --> 00:18:34.430\nSo I'm gonna create another route map.\n\n361\n00:18:34.430 --> 00:18:38.410\nBut this one's going to apply to routes\ncoming from ISP1 instead of routes going\n\n362\n00:18:38.410 --> 00:18:41.660\nto ISP1, and then I'll manipulate\nthose routes based on my needs.\n\n363\n00:18:41.660 --> 00:18:42.690\nAll right?\n\n364\n00:18:42.690 --> 00:18:47.130\nSo let's jump over here and\ntake a look at my routers.\n\n365\n00:18:47.130 --> 00:18:49.500\nI'm gonna have to create a new route, now.\n\n366\n00:18:49.500 --> 00:18:53.580\nWe'll catch those 116.17 networks,\nwhich there's a ton of them.\n\n367\n00:18:53.580 --> 00:18:58.470\nIf I look at my routing table Those\n116.17 networks, there's a bunch right?\n\n368\n00:18:58.470 --> 00:19:01.730\nAnd so I'm getting them all\ncoming in from ISP one.\n\n369\n00:19:01.730 --> 00:19:06.710\nBranch one is also getting those\nsame routes from ISP one also,\n\n370\n00:19:06.710 --> 00:19:09.820\nright, because it's connected to ISP one,\njust like headquarters is.\n\n371\n00:19:09.820 --> 00:19:13.240\nSo I want to change it, and\nI want to make people prefer headquarters.\n\n372\n00:19:13.240 --> 00:19:16.110\nNow, local preference\nis the opposite of med.\n\n373\n00:19:16.110 --> 00:19:19.160\nA higher number is better\nin local preference.\n\n374\n00:19:19.160 --> 00:19:20.730\nA lower number is better in a med,\n\n375\n00:19:20.730 --> 00:19:22.470\nsomething you have to memorize for\nthe exam.\n\n376\n00:19:22.470 --> 00:19:26.570\nSo, I want to assign a higher\nlocal preference to these routes.\n\n377\n00:19:26.570 --> 00:19:30.250\nNow, if I look at my BGP database and\nfind the routes in there,\n\n378\n00:19:30.250 --> 00:19:35.050\nnotice that unlike med there is\nlocal preference and it's 100.\n\n379\n00:19:35.050 --> 00:19:39.760\nSo all these routes are coming in\nwith a local preference of 100.\n\n380\n00:19:39.760 --> 00:19:44.670\nI can leave branch one alone, and let it\nget those with local preference of 100.\n\n381\n00:19:44.670 --> 00:19:46.980\nAll I need to do is take them\nhere on headquarters and\n\n382\n00:19:46.980 --> 00:19:49.340\ngive them a better local preference.\n\n383\n00:19:49.340 --> 00:19:52.080\nAnd when I do that, the other routers\nin my environment will prefer that.\n\n384\n00:19:52.080 --> 00:19:55.180\nSo I start by creating an access list.\n\n385\n00:19:55.180 --> 00:20:01.020\nNow I have access list one from earlier so\nI'll create access list two this time.\n\n386\n00:20:01.020 --> 00:20:02.740\nAnd I'm gonna look for 116.17.0.0.\n\n387\n00:20:02.740 --> 00:20:05.110\nSo any network that starts with 116.117,\nall right.\n\n388\n00:20:05.110 --> 00:20:09.860\nAnd I guess I need to make sure\nit knows that I'm permitting.\n\n389\n00:20:11.210 --> 00:20:11.780\nThere.\n\n390\n00:20:11.780 --> 00:20:12.340\nAll right.\n\n391\n00:20:12.340 --> 00:20:16.030\nSo now I've got an access list that\ncan pick up on that individual route.\n\n392\n00:20:16.030 --> 00:20:18.740\nAnd from here I can create a new\nroute map which I'll call.\n\n393\n00:20:18.740 --> 00:20:24.470\nFrom ISP1 and on it's first match\ncondition here, I'm just gonna\n\n394\n00:20:24.470 --> 00:20:29.670\nsay match IP address 2, so I'm gonna look\nfor any route that starts with 116.17.\n\n395\n00:20:29.670 --> 00:20:33.900\nAnd then I'm gonna set\nthe local preference.\n\n396\n00:20:33.900 --> 00:20:34.700\nThe default is 100.\n\n397\n00:20:34.700 --> 00:20:36.880\nI'm gonna pop these guys up to 200.\n\n398\n00:20:36.880 --> 00:20:37.590\nRight.\n\n399\n00:20:37.590 --> 00:20:39.180\nHigher is better.\n\n400\n00:20:39.180 --> 00:20:44.150\nSo, when I learn a route from ISP1 I'm\ngonna set it's local preference to 200.\n\n401\n00:20:44.150 --> 00:20:48.520\nWhen branch 1 learns it from ISP1 it's\ngonna leave it at the default of 100..\n\n402\n00:20:48.520 --> 00:20:51.300\nMine's 200 theirs is 100,\nmine will be preferred.\n\n403\n00:20:53.150 --> 00:20:55.770\nThen, it's important\nthat I add one more line.\n\n404\n00:20:55.770 --> 00:21:00.030\nSo I'm going to add a route bash\nmap from ISP one permit 20,\n\n405\n00:21:00.030 --> 00:21:03.400\nand I'm not going to set anything on that,\nright?\n\n406\n00:21:03.400 --> 00:21:06.130\nThe match condition will match anything.\n\n407\n00:21:06.130 --> 00:21:09.750\nI'm not doing any set condition, so\nit's not going to change any values.\n\n408\n00:21:09.750 --> 00:21:11.150\nBut it is going to permit them.\n\n409\n00:21:11.150 --> 00:21:13.280\nIf I don't that it's gonna\nblock the other routes.\n\n410\n00:21:13.280 --> 00:21:16.770\nI don't wanna just get 116 routes,\nI wanna get all the other routes too.\n\n411\n00:21:16.770 --> 00:21:19.850\nI just don't wanna mess with their\nlocal preference, all right?\n\n412\n00:21:19.850 --> 00:21:24.960\nNow I can jump into my BGP configuration,\nand I can go in and\n\n413\n00:21:24.960 --> 00:21:27.700\nI can assign that to my neighbor.\n\n414\n00:21:29.020 --> 00:21:31.570\nSo I'm gonna say neighbor 204.109.63.1,\n\n415\n00:21:31.570 --> 00:21:34.430\nthat's the IP address of\nISP 1 that I connect to.\n\n416\n00:21:34.430 --> 00:21:36.760\nAnd I'll say route-map from-isp1.\n\n417\n00:21:36.760 --> 00:21:37.440\nRight?\n\n418\n00:21:37.440 --> 00:21:40.820\nThat's what I called it up here.\n\n419\n00:21:40.820 --> 00:21:43.780\nAnd this time instead of\noutgoing these are incoming.\n\n420\n00:21:43.780 --> 00:21:47.830\nSo as the routes come in from isp1\nfilter them through this list.\n\n421\n00:21:47.830 --> 00:21:50.830\nAnd as part of this list,\nwe're going to set that local preference.\n\n422\n00:21:50.830 --> 00:21:52.428\nRight?\nWe'll prompt the local preference up for\n\n423\n00:21:52.428 --> 00:21:55.300\nthose 116.17 routes.\n\n424\n00:21:55.300 --> 00:21:55.890\nRight?\n\n425\n00:21:55.890 --> 00:21:59.900\nAnd when that's done I should be able to\ntake a look at my database, now it might\n\n426\n00:21:59.900 --> 00:22:05.320\ntake a minute, but what I should see is\non these routes, well, here I can see\n\n427\n00:22:05.320 --> 00:22:10.350\nthem with a local preference of 100, and\nnotice how my local preference is not set.\n\n428\n00:22:10.350 --> 00:22:11.220\nAlright, it's empty.\n\n429\n00:22:11.220 --> 00:22:13.370\nWell, that's because my access\nlist is still taking effect, but\n\n430\n00:22:13.370 --> 00:22:15.910\nif we give it a minute, or\nthe route map is still taking effect, but\n\n431\n00:22:15.910 --> 00:22:19.620\nwithin a minute and a half, usually within\nninety seconds That update will happen and\n\n432\n00:22:19.620 --> 00:22:21.150\nwe'll start to see it on our neighbors.\n\n433\n00:22:21.150 --> 00:22:24.710\nLet me go look at a branch and we'll see\nif maybe it's been picked up there, so.\n\n434\n00:22:24.710 --> 00:22:29.450\nHere is branch three, and\nif I do a show IP BGP here,\n\n435\n00:22:29.450 --> 00:22:32.240\nwe can take a look and, yep,\nnot seeing that change just yet, so\n\n436\n00:22:32.240 --> 00:22:35.580\nI might need to do a soft reset or\na hard reset on that connection.\n\n437\n00:22:35.580 --> 00:22:37.159\nSo, I can jump up to headquarters.\n\n438\n00:22:38.410 --> 00:22:41.430\nAnd I can go ahead and\ndo like, a clear IP BGP, and\n\n439\n00:22:41.430 --> 00:22:43.650\nI specify who it is that I want to resent.\n\n440\n00:22:43.650 --> 00:22:46.650\nI'll reset just that\nneighbor specifically, and\n\n441\n00:22:46.650 --> 00:22:50.260\nthen I can specify if I want it to be\nhard or soft or incoming or outbound.\n\n442\n00:22:50.260 --> 00:22:55.970\nI want it to be a inbound, right, so\nthat I reprocess all those routes.\n\n443\n00:22:55.970 --> 00:22:56.920\nThe routes haven't changed,\n\n444\n00:22:56.920 --> 00:22:59.760\nso they're sitting there in my\ndatabase and they're happy.\n\n445\n00:22:59.760 --> 00:23:02.920\nI've applied a route map, but unless the\nroutes change, not much happens there so\n\n446\n00:23:02.920 --> 00:23:05.330\nthis will cause that to\nhappen a little bit faster.\n\n447\n00:23:05.330 --> 00:23:07.190\nAnd we should start to see that come in.\n\n448\n00:23:07.190 --> 00:23:10.830\nAnd sure enough, now when I do\na show ip bgp on headquarters,\n\n449\n00:23:10.830 --> 00:23:12.570\nI see that local preference is 200, right?\n\n450\n00:23:12.570 --> 00:23:15.150\nThe default's 100, now I'm showing 200.\n\n451\n00:23:15.150 --> 00:23:19.790\nAnd if I jump over to branch three,\nwhere I looked just a moment ago, and\n\n452\n00:23:19.790 --> 00:23:22.360\nsee how headquarters and\nbranch one are tied?\n\n453\n00:23:22.360 --> 00:23:26.990\nWell, now, if I look at it,\nbranch two, branch one is gone.\n\n454\n00:23:26.990 --> 00:23:27.550\nRight?\n\n455\n00:23:27.550 --> 00:23:30.680\nAnd, branch, well I keep saying branch or\nheadquarters.\n\n456\n00:23:30.680 --> 00:23:34.460\nHeadquarters, has that local\nprofit of two hundred.\n\n457\n00:23:34.460 --> 00:23:34.960\nOkay?\n\n458\n00:23:34.960 --> 00:23:36.910\nWhy did branch one disappear.\n\n459\n00:23:36.910 --> 00:23:40.120\nWhy is it branch one here\nis just a secondary option?\n\n460\n00:23:40.120 --> 00:23:44.470\nWell, branch one learned the same thing.\n\n461\n00:23:44.470 --> 00:23:47.242\nBranch one, if I jump over to it,\nand I take a look at,\n\n462\n00:23:47.242 --> 00:23:48.920\noops that's not what I wanted.\n\n463\n00:23:48.920 --> 00:23:51.504\nIf I take a look at it's\nbgp database right.\n\n464\n00:23:51.504 --> 00:23:56.880\nWhen I look at it, it's got 116.17.91\nwith a local preference of 200.\n\n465\n00:23:56.880 --> 00:23:58.570\nThat's coming from Headquarters.\n\n466\n00:23:58.570 --> 00:24:00.940\nAnd then its own doesn't\nhave a local preference set,\n\n467\n00:24:00.940 --> 00:24:02.170\nwhich means it's set to default of 100.\n\n468\n00:24:02.170 --> 00:24:05.040\nThat means that it prefers Headquarters.\n\n469\n00:24:05.040 --> 00:24:08.520\nBranch One prefers Headquarters also.\n\n470\n00:24:08.520 --> 00:24:10.350\nNow, that might be a bit of a problem for\nme, right.\n\n471\n00:24:10.350 --> 00:24:14.410\nI might not want that to happen,\nright, this is a problem.\n\n472\n00:24:14.410 --> 00:24:18.720\nSo, my problem here is that branch one\nsees that better local preference and\n\n473\n00:24:18.720 --> 00:24:21.790\nit is gonna start preferring\nto go to headquarters.\n\n474\n00:24:21.790 --> 00:24:24.480\nSo now, branch one wants to get to one\nof those networks instead of using it's\n\n475\n00:24:24.480 --> 00:24:25.870\nown direct connection.\n\n476\n00:24:25.870 --> 00:24:28.420\nIt's going to go to headquarters and\nover, right.\n\n477\n00:24:28.420 --> 00:24:33.070\nThat's the negative of using these local\npreferences on incoming routes like that.\n\n478\n00:24:33.070 --> 00:24:36.050\nIf I'd said it outbound, yeah,\nI'd have to define each neighbor but\n\n479\n00:24:36.050 --> 00:24:38.170\nI could have excluded branch one.\n\n480\n00:24:38.170 --> 00:24:40.780\nSo do I need to go and redo all my work?\n\n481\n00:24:40.780 --> 00:24:43.450\nNo, there's actually a way\nto get around this, alright.\n\n482\n00:24:43.450 --> 00:24:47.840\nRemember that when we look at\nour top eleven list of things.\n\n483\n00:24:47.840 --> 00:24:50.118\nWhat's the number one\ncriteria it looks at?\n\n484\n00:24:50.118 --> 00:24:51.353\nWeight.\n\n485\n00:24:51.353 --> 00:24:56.330\nAnd weight only affects a single router,\nright.\n\n486\n00:24:56.330 --> 00:24:57.740\nIt's a single preference.\n\n487\n00:24:57.740 --> 00:25:01.350\nSo when I set that weight I can do\nit on one particular router and\n\n488\n00:25:01.350 --> 00:25:02.740\nchange its behavior.\n\n489\n00:25:02.740 --> 00:25:07.650\nSo when I look at branch one Is there\never a time where I'd want branch one to\n\n490\n00:25:07.650 --> 00:25:11.240\ngo to headquarters as opposed\nto going straight out to ISP1?\n\n491\n00:25:11.240 --> 00:25:15.000\nWell if branch one can't get there,\nthen yeah that makes sense.\n\n492\n00:25:15.000 --> 00:25:19.420\nBut otherwise if the networks are up,\nit should go straight out to ISP1.\n\n493\n00:25:19.420 --> 00:25:22.680\nSo I could use the weight\nto override that and\n\n494\n00:25:22.680 --> 00:25:25.570\nsay branch one,\nyou can go to ISP1 directly.\n\n495\n00:25:25.570 --> 00:25:27.820\nEverybody else needs to go\nthrough headquarters, right?\n\n496\n00:25:27.820 --> 00:25:28.930\nThat's how we can influence that.\n\n497\n00:25:28.930 --> 00:25:31.900\nSo we've gotta make use of all\nthe different metrics at our disposal.\n\n498\n00:25:31.900 --> 00:25:34.070\nAnd wait is one of the easier ones to set.\n\n499\n00:25:34.070 --> 00:25:36.540\nYou can set weight a number\nof different ways.\n\n500\n00:25:36.540 --> 00:25:38.650\nYou can apply it to a particular neighbor.\n\n501\n00:25:38.650 --> 00:25:40.950\nYou can apply it kind of\nglobally if you want or\n\n502\n00:25:40.950 --> 00:25:43.760\nwe can apply it with a route\nmap like I've been doing and\n\n503\n00:25:43.760 --> 00:25:46.318\nwe can kind of dial in on that and\nspecify where we want it to go.\n\n504\n00:25:46.318 --> 00:25:51.890\nSo, for example,\nLet's use weight a different way.\n\n505\n00:25:51.890 --> 00:25:54.890\nIf I take branch,\nwell no let's stick with branch one.\n\n506\n00:25:54.890 --> 00:25:55.530\nWhy not?\n\n507\n00:25:55.530 --> 00:25:59.260\nWe're going to make branch one apply\na weight to prefer going directly to ISP1\n\n508\n00:25:59.260 --> 00:26:00.960\ninstead of going to headquarters.\n\n509\n00:26:00.960 --> 00:26:02.840\nSo first off,\nlet's verify what we've got, right?\n\n510\n00:26:02.840 --> 00:26:08.450\nIf I do a show ip bgp and I take a look\nat those 116.17 networks, there they are.\n\n511\n00:26:08.450 --> 00:26:10.460\nThey've got that local\npreference of 200 so\n\n512\n00:26:10.460 --> 00:26:13.750\nwe're preferring to go\nthrough headquarters,\n\n513\n00:26:13.750 --> 00:26:18.220\nas opposed to going directly through\nour own connection right over to ISP 1.\n\n514\n00:26:18.220 --> 00:26:20.900\nSo, I'm gonna go in and\nmanipulate this weight.\n\n515\n00:26:20.900 --> 00:26:22.390\nSo instead of a weight of zero,\n\n516\n00:26:22.390 --> 00:26:26.420\nI'm gonna apply Well,\nany number that's higher than that, right?\n\n517\n00:26:26.420 --> 00:26:29.210\nWeight in local preference,\nhigher number is better.\n\n518\n00:26:29.210 --> 00:26:31.060\nMed, lower number is better, right?\n\n519\n00:26:31.060 --> 00:26:32.270\nSo it's a little bit different.\n\n520\n00:26:32.270 --> 00:26:33.940\nBut here I'm just gonna\nassign any number higher.\n\n521\n00:26:33.940 --> 00:26:37.660\nIt could be one, for all that matters, but\nI just need to assign a higher number.\n\n522\n00:26:37.660 --> 00:26:39.380\nSo I'm gonna whip up another route map.\n\n523\n00:26:39.380 --> 00:26:40.880\nI'm gonna route map you guys to death.\n\n524\n00:26:40.880 --> 00:26:43.340\nActually, I need to create\nan ACL first to catch these.\n\n525\n00:26:43.340 --> 00:26:45.820\nSo I'm gonna do an access list.\n\n526\n00:26:45.820 --> 00:26:50.610\nand I'm gonna catch\nthe 116.17.0.0 networks, right?\n\n527\n00:26:50.610 --> 00:26:52.020\nAnything that starts with 116.17.\n\n528\n00:26:52.020 --> 00:26:57.980\nAnd then I'm gonna create a route map,\nand I'll apply this to any route coming\n\n529\n00:26:57.980 --> 00:27:03.100\nfrom isp1, so\nI'm gonna set this to from-isp1 Permit 10.\n\n530\n00:27:03.100 --> 00:27:08.510\nAll right, and I'm gonna match that IP\naddress list just like I did a moment ago.\n\n531\n00:27:08.510 --> 00:27:10.650\nBut this time I'm gonna\nbe setting the weight.\n\n532\n00:27:10.650 --> 00:27:12.110\nAnd here we can set that weight value.\n\n533\n00:27:12.110 --> 00:27:15.180\nAll right, and\nany number above a zero will do here.\n\n534\n00:27:15.180 --> 00:27:17.800\nI'm gonna set it 100 because I\nlike nice round big numbers.\n\n535\n00:27:17.800 --> 00:27:19.800\nRight, so set weight 100.\n\n536\n00:27:19.800 --> 00:27:21.620\nThere we go.\n\n537\n00:27:21.620 --> 00:27:22.550\nBut I don't need to stop there.\n\n538\n00:27:22.550 --> 00:27:26.510\nI need to add one more line for all the\nother routes that I'm not messing with.\n\n539\n00:27:26.510 --> 00:27:27.850\nRight?\nSo I'm just gonna do another one that\n\n540\n00:27:27.850 --> 00:27:30.790\nmatches and permits but\ndoesn't actually have a match statement so\n\n541\n00:27:30.790 --> 00:27:31.710\nit'll match everything.\n\n542\n00:27:32.930 --> 00:27:33.780\nAll right.\n\n543\n00:27:33.780 --> 00:27:38.410\nThen I just need to go and\nattach that to my neighbor And so\n\n544\n00:27:38.410 --> 00:27:44.750\nI'll come in here and\nsay neighbor 204 dot 109 dot 63 dot 5.\n\n545\n00:27:44.750 --> 00:27:46.520\nThat is my neighbor.\n\n546\n00:27:46.520 --> 00:27:51.760\nAnd I'll attach route map\nfrom ISP one as a inbound,\n\n547\n00:27:51.760 --> 00:27:55.170\nright I'm modifying routes\nas they come into my system.\n\n548\n00:27:55.170 --> 00:27:55.860\nAll right.\n\n549\n00:27:55.860 --> 00:27:56.820\nSo, that's set and\n\n550\n00:27:56.820 --> 00:28:01.680\nall I need to do now is a quick,\nclear of that neighbor relationship.\n\n551\n00:28:01.680 --> 00:28:06.020\nSo that I make sure that I've\ngot the latest and greatest.\n\n552\n00:28:06.020 --> 00:28:07.630\nAll right, so we'll let that soak in.\n\n553\n00:28:07.630 --> 00:28:12.330\nSo, what should happen is, the weight\nshould get modified for those routes.\n\n554\n00:28:12.330 --> 00:28:14.210\nJust for those 116.17 routes.\n\n555\n00:28:14.210 --> 00:28:17.550\nAnd now they should have a higher wait and\nI should prefer my own connection.\n\n556\n00:28:17.550 --> 00:28:19.590\nBut I'm only overwriting it here.\n\n557\n00:28:19.590 --> 00:28:21.670\nJust overwriting it on branch one.\n\n558\n00:28:21.670 --> 00:28:24.360\nI'm not overwriting it anywhere else.\n\n559\n00:28:24.360 --> 00:28:26.630\nWait is local to a router.\n\n560\n00:28:26.630 --> 00:28:29.660\nWait does not propagate\noutside of the system.\n\n561\n00:28:29.660 --> 00:28:32.250\nAll right.\nLet's take a look at how things are now.\n\n562\n00:28:32.250 --> 00:28:34.710\nAnd sure enough, here's 116.17.92.0.\n\n563\n00:28:34.710 --> 00:28:40.540\nAnd I can see the local preference\nsays I should go to headquarters.\n\n564\n00:28:40.540 --> 00:28:43.430\nBut I picked this next route.\n\n565\n00:28:43.430 --> 00:28:45.830\nAnd the reason is,\nthe weight is 100, right?\n\n566\n00:28:45.830 --> 00:28:48.500\nWeight takes precedence.\n\n567\n00:28:48.500 --> 00:28:50.350\nAnd it's the one that's more important.\n\n568\n00:28:50.350 --> 00:28:51.170\nSo.\n\n569\n00:28:51.170 --> 00:28:52.360\nLooking at these attributes.\n\n570\n00:28:52.360 --> 00:28:54.720\nThose are some of the different\nways that we can manipulate and\n\n571\n00:28:54.720 --> 00:28:57.450\nchange that to influence what\ndecision we're gonna make.\n\n572\n00:28:57.450 --> 00:29:00.960\nAnd kind of override\nthe default behavior of BGP.\n\n573\n00:29:00.960 --> 00:29:02.980\nJust remember,\nas you get ready for the exam.\n\n574\n00:29:02.980 --> 00:29:06.020\nThey got quite a few different\nones to factor into.\n\n575\n00:29:06.020 --> 00:29:07.620\nSo you need to have a good handle on it.\n\n576\n00:29:07.620 --> 00:29:08.420\nThis.\nRight.\n\n577\n00:29:08.420 --> 00:29:10.500\nYou may not need to memorize all 11, but\n\n578\n00:29:10.500 --> 00:29:12.880\nat least memorize the first seven or\neight.\n\n579\n00:29:12.880 --> 00:29:13.700\nRight.\nCuz these are the ones\n\n580\n00:29:13.700 --> 00:29:14.600\nthat happen all the time.\n\n581\n00:29:14.600 --> 00:29:17.340\nThe last three are ones\nthat are really uncommon.\n\n582\n00:29:17.340 --> 00:29:17.960\nRight.\n\n583\n00:29:17.960 --> 00:29:19.780\nIt shouldn't boil down to that.\n\n584\n00:29:19.780 --> 00:29:22.450\nBut weight is number one.\n\n585\n00:29:22.450 --> 00:29:24.250\nLocal preference is number two.\n\n586\n00:29:24.250 --> 00:29:26.380\nMED is way down here at number three.\n\n587\n00:29:26.380 --> 00:29:26.950\nOkay.\n\n588\n00:29:26.950 --> 00:29:30.220\nSo of the three attributes that\nshow up in your BGP database,\n\n589\n00:29:30.220 --> 00:29:32.450\nMED has the lowest priority.\n\n590\n00:29:32.450 --> 00:29:36.050\nAnd then local preferences after that and\nthen weight trumps everything, right?\n\n591\n00:29:36.050 --> 00:29:38.140\nWeight is the big overriding factor.\n\n592\n00:29:38.140 --> 00:29:40.120\nAnd it lets us make those changes.\n\n593\n00:29:40.120 --> 00:29:45.200\nI just made the change here on branch one\nbut if I jump over to branch three, well,\n\n594\n00:29:45.200 --> 00:29:48.150\nbranch three didn't get affected by that,\nright?\n\n595\n00:29:48.150 --> 00:29:51.870\nBranch three is still choosing\nheadquarters right here\n\n596\n00:29:51.870 --> 00:29:54.640\nas the way to go because the local\npreference Because the wait is\n\n597\n00:29:54.640 --> 00:29:57.920\nzero on the routes coming from branch one.\n\n598\n00:29:57.920 --> 00:29:59.570\nWait, stay right there on that router.\n\n599\n00:30:00.730 --> 00:30:04.530\nAlright, well in this episode we got a\nchance to see each of the different metric\n\n600\n00:30:04.530 --> 00:30:08.550\ntypes that we can kind of manipulate\neasily to influence BGP's performance.\n\n601\n00:30:08.550 --> 00:30:09.740\nRight, we saw MED,\n\n602\n00:30:09.740 --> 00:30:13.110\nwhich is how we can influence traffic\ncoming into autonomous system.\n\n603\n00:30:13.110 --> 00:30:14.690\nWe saw local preference,\n\n604\n00:30:14.690 --> 00:30:19.050\nhow we can influence traffic going\nout of our autonomous system.\n\n605\n00:30:19.050 --> 00:30:23.660\nAnd we saw wait, which is how we can\ninfluence traffic going either direction,\n\n606\n00:30:23.660 --> 00:30:25.770\non an individual router.\n\n607\n00:30:25.770 --> 00:30:27.620\nHow we can kind of make\nthose changes as we need.\n\n608\n00:30:27.620 --> 00:30:29.370\nAnd there's plenty of\nothers that you can modify.\n\n609\n00:30:29.370 --> 00:30:30.300\nI used route maps for\n\n610\n00:30:30.300 --> 00:30:33.910\nmost of this cuz that's really\nthe one way that works for everything.\n\n611\n00:30:33.910 --> 00:30:35.040\nYou don't have to use route maps.\n\n612\n00:30:35.040 --> 00:30:37.750\nThere's ways you can set\nglobal local preferences and\n\n613\n00:30:37.750 --> 00:30:41.230\nother things, but route maps really do\ngive you the most power and versatility.\n\n614\n00:30:41.230 --> 00:30:42.390\nAnd you can even mix and match.\n\n615\n00:30:42.390 --> 00:30:47.610\nI got one route map that's set local\npreference and MED and if I needed to.\n\n616\n00:30:47.610 --> 00:30:49.210\nYou can really go crazy with it.\n\n617\n00:30:49.210 --> 00:30:52.175\nIt just comes dow to what\nyou need in your situation.\n\n618\n00:30:52.175 --> 00:30:54.860\nAlright, but that's about all I've got for\nBGP attributes,\n\n619\n00:30:54.860 --> 00:30:56.880\nso I hope you guys enjoyed the show.\n\n620\n00:30:56.880 --> 00:30:57.610\nThanks for watching.\n\n621\n00:30:57.610 --> 00:31:02.650\nSigning off for ITProTV, I'm Don Pezet,\nand I'll see you next time.\n\n",
          "vimeoId": "138326562"
        }
      ],
      "title": "Layer 3 Technologies"
    },
    {
      "episodes": [
        {
          "description": "VPN technology can actually be useful for routing protocols in the case of building VPN tunnels between one router to another to create connectivity and reestablish a connection even over an untrusted network to avoid problems brought on by network failure or mask other complexities on the network. Viewers will hear about three different VPN tunnels one needs to be aware of, some of the uses of Generic Routing Encapsulation (GRE) on Cisco IOS routers and see demonstrations of how to configure a tunnel between two Cisco IOS routers.",
          "length": "1386",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/ccnproute/cisco-ccnproute300101-4-0-vpn_technologies-090315-1.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/ccnproute/cisco-ccnproute300101-4-0-vpn_technologies-090315-1-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/ccnproute/cisco-ccnproute300101-4-0-vpn_technologies-090315-1-sm.jpg",
          "title": "VPN Technologies",
          "transcript": "WEBVTT\n\n1\n00:00:00.000 --> 00:00:10.711\n[MUSIC]\n\n2\n00:00:10.711 --> 00:00:13.815\nAll right, good morning,\ngood afternoon, and good evening and\n\n3\n00:00:13.815 --> 00:00:17.316\nwelcome back to another episode of\nITProTV, I'm your host Don Pizette,\n\n4\n00:00:17.316 --> 00:00:19.950\nback again with another\nepisode of CCNP Rally.\n\n5\n00:00:19.950 --> 00:00:23.578\nAnd in this episode we're going to be\njumping into VPN technologies, and\n\n6\n00:00:23.578 --> 00:00:25.110\nI know what you're thinking.\n\n7\n00:00:25.110 --> 00:00:27.120\nVPN, virtual private networks,\nthat's security stuff,\n\n8\n00:00:27.120 --> 00:00:29.110\nshouldn't this be in\nthe CC&P security track?\n\n9\n00:00:29.110 --> 00:00:32.870\nWell, you're right, it should be but there\nis a little bit that we need to be aware\n\n10\n00:00:32.870 --> 00:00:36.420\nof on the routing side because it actually\ncan be useful for our routing protocols.\n\n11\n00:00:36.420 --> 00:00:37.110\nAll right.\n\n12\n00:00:37.110 --> 00:00:38.440\nLet me give you an example.\n\n13\n00:00:38.440 --> 00:00:41.620\nIf you watched our OSPF\nepisodes I talked about how\n\n14\n00:00:41.620 --> 00:00:46.200\nan OSPF area has to be connected to\narea zero and there is times where,\n\n15\n00:00:46.200 --> 00:00:49.410\ndue to a network failure you might\nhave an area get segmented or\n\n16\n00:00:49.410 --> 00:00:52.740\nyou know segregated from the rest\nof the OSPF autonomous system.\n\n17\n00:00:52.740 --> 00:00:55.570\nAnd we learned about things\nlike virtual links that we can\n\n18\n00:00:55.570 --> 00:00:59.330\nuse to kind of fake the system or\nwhatever but there is another option.\n\n19\n00:00:59.330 --> 00:01:03.015\nYou actually could build a VPN tunnel\nbetween one router and another,\n\n20\n00:01:03.015 --> 00:01:04.825\nto create that connectivity and\n\n21\n00:01:04.825 --> 00:01:08.925\nreestablish a connection, even over\nan untrusted network like the internet.\n\n22\n00:01:08.925 --> 00:01:12.085\nSo there's great ways that are out there\nwe can do that without having to do crazy\n\n23\n00:01:12.085 --> 00:01:15.475\nthings like virtual links to get\nstuff connected and in place, right?\n\n24\n00:01:15.475 --> 00:01:17.095\nSo on our Cisco routers,\n\n25\n00:01:17.095 --> 00:01:21.005\nthere's actually three different types of\nVPN tunnel that we need to be aware of,\n\n26\n00:01:21.005 --> 00:01:23.850\nespecially for the exam, but\nthat you may even use in real life.\n\n27\n00:01:23.850 --> 00:01:27.010\nAnd the first one I want to talk\nabout is what's called a GRE tunnel.\n\n28\n00:01:27.010 --> 00:01:30.920\nor Generic Routing Encapsulation, GRE.\n\n29\n00:01:30.920 --> 00:01:34.520\nGRE is an interesting kind of tunnel\nbecause when we think of VPN's, I know for\n\n30\n00:01:34.520 --> 00:01:37.810\nme the first thing I think of when\nI hear VPN is encryption, right?\n\n31\n00:01:37.810 --> 00:01:39.400\nYou're going to encrypt traffic.\n\n32\n00:01:39.400 --> 00:01:42.960\nBut a lot of people don't realize that\nVPN's don't have to have encryption,\n\n33\n00:01:42.960 --> 00:01:44.560\nencryption is an option.\n\n34\n00:01:44.560 --> 00:01:47.480\nAnd with GRE it's unencrypted.\n\n35\n00:01:47.480 --> 00:01:50.180\nGRE builds a tunnel between two routers,\nbut\n\n36\n00:01:50.180 --> 00:01:51.660\nit doesn't encrypt your traffic at all.\n\n37\n00:01:51.660 --> 00:01:52.670\nIt just tunnels it.\n\n38\n00:01:52.670 --> 00:01:54.070\nNow, why would we want that, right?\n\n39\n00:01:54.070 --> 00:01:56.340\nIsn't the purpose of\na VPN tunnel security?\n\n40\n00:01:56.340 --> 00:01:58.580\nWell, for a normal VPN tunnel, yes.\n\n41\n00:01:58.580 --> 00:02:01.290\nFor a GRE tunnel, it's not security.\n\n42\n00:02:01.290 --> 00:02:03.930\nIt's private purpose, obviously,\ncuz everything is clear.\n\n43\n00:02:03.930 --> 00:02:06.160\nSo, why would I need a GRE tunnel?\n\n44\n00:02:06.160 --> 00:02:10.990\nWell, GRE tunnels are really useful when\nit comes to masking the complexity of your\n\n45\n00:02:10.990 --> 00:02:12.410\nnetwork, right?\n\n46\n00:02:12.410 --> 00:02:16.360\nFor example, I know I set this up for\na company in Atlanta a few months back,\n\n47\n00:02:16.360 --> 00:02:20.770\nwhere they had basically redundant\nconnections between two cities.\n\n48\n00:02:20.770 --> 00:02:23.620\nThey had offices in Atlanta, and\noffices in Orlando, Florida.\n\n49\n00:02:23.620 --> 00:02:25.880\nSo, two different states\nhere in the United States.\n\n50\n00:02:25.880 --> 00:02:28.490\nAnd one was an MPLS link.\n\n51\n00:02:28.490 --> 00:02:31.110\nAnd on the MPLS link between Atlanta and\n\n52\n00:02:31.110 --> 00:02:34.650\nOrlando, we could actually see\nthe routers in the path, right?\n\n53\n00:02:34.650 --> 00:02:35.990\nIt was one of those MPLS VPNs,\n\n54\n00:02:35.990 --> 00:02:38.460\nwhere you actually saw what\nwas on that infrastructure.\n\n55\n00:02:38.460 --> 00:02:40.320\nAnd then they had a point to point t1,\n\n56\n00:02:40.320 --> 00:02:43.060\nwhere you didn't see any of that\ninfrastructure between the two.\n\n57\n00:02:43.060 --> 00:02:46.340\nWell, the two lines had the same\nbandwidth, but have those extra hops in\n\n58\n00:02:46.340 --> 00:02:49.020\nthere, and so it was causing some\nproblems with routing protocols.\n\n59\n00:02:49.020 --> 00:02:51.730\nRouting protocols weren't\npicking things correctly.\n\n60\n00:02:51.730 --> 00:02:55.290\nSo instead of going through and\ntrying to manipulate metrics and\n\n61\n00:02:55.290 --> 00:02:58.280\nother things to try and\nget that to work, the easier solution?\n\n62\n00:02:58.280 --> 00:03:01.930\nWas to just build a GRE\ntunnel over MPLS and\n\n63\n00:03:01.930 --> 00:03:06.090\nthat hid all the complexity of\nMPLS in an unencrypted tunnel.\n\n64\n00:03:06.090 --> 00:03:09.520\nNow unencrypted tunnels really don't hurt\nperformance cuz you're not encrypting and\n\n65\n00:03:09.520 --> 00:03:11.250\ndecrypting, you're just sending it along.\n\n66\n00:03:11.250 --> 00:03:14.180\nBut now the routing protocol can\nsee that as a single connection.\n\n67\n00:03:14.180 --> 00:03:17.150\nThat's one example where we\nmight use a GRE tunnel, right.\n\n68\n00:03:17.150 --> 00:03:21.620\nThere's other examples,\nredundancy, hiding complexity,\n\n69\n00:03:21.620 --> 00:03:24.890\nvarious things like that that are great\nexamples where we might use GRE tunnels.\n\n70\n00:03:24.890 --> 00:03:26.590\nKey thing to remember is\nthat it'll provide security.\n\n71\n00:03:27.670 --> 00:03:29.920\nSo let me walk you through\nan environment here,\n\n72\n00:03:29.920 --> 00:03:32.440\nand we'll go through each of\nthe different VPN types cuz once you\n\n73\n00:03:32.440 --> 00:03:35.500\nhave GRE you can apply encryption\nto it if you really want to.\n\n74\n00:03:35.500 --> 00:03:37.390\nBut let's just kinda start simple.\n\n75\n00:03:37.390 --> 00:03:41.170\nHere I've got my network and\nI've got headquarters\n\n76\n00:03:41.170 --> 00:03:44.660\nwhich is connected to a Metro E connection\nand all of my routers are connected to\n\n77\n00:03:44.660 --> 00:03:47.480\nthis Metro E connection that's\nhow they get their access.\n\n78\n00:03:47.480 --> 00:03:53.020\nBut branch one also has a connection\nto headquarters through ISP1, right?\n\n79\n00:03:53.020 --> 00:03:54.212\nSo they're both connected to ISP1.\n\n80\n00:03:54.212 --> 00:03:56.460\nIt could get there that\nway if it needed to.\n\n81\n00:03:56.460 --> 00:04:01.070\nNow I wouldn't normally trust the Internet\nwith unencrypted traffic, but\n\n82\n00:04:01.070 --> 00:04:04.470\nbecause branch one and\nheadquarters both connect to my ISP,\n\n83\n00:04:04.470 --> 00:04:08.460\nI know the traffic would go to the ISP and\ncome right back down to me again, right?\n\n84\n00:04:08.460 --> 00:04:09.940\nIt's not going out to the internet.\n\n85\n00:04:09.940 --> 00:04:13.510\nSo it would be somewhat\ntrustworthy if we trusted out ISP.\n\n86\n00:04:13.510 --> 00:04:16.740\nTo route unencrypted traffic\nthrough them to get over here.\n\n87\n00:04:16.740 --> 00:04:20.210\nSo that in the event that branch one\nhad some kind of network failure.\n\n88\n00:04:20.210 --> 00:04:23.130\nThat it could still get there\nthrough this internet connection.\n\n89\n00:04:23.130 --> 00:04:28.070\nAll right, now the problem is I'm running\nOSPF here internally and OSPF is going\n\n90\n00:04:28.070 --> 00:04:32.110\nto pick me some great pads but,\nI'm not running OSPF from my, to my ISP.\n\n91\n00:04:32.110 --> 00:04:35.580\nRight, you don't use internal\nprotocols to talk to your ISP.\n\n92\n00:04:35.580 --> 00:04:40.320\nSo, how can I get this link\nto become visible in OSPF?\n\n93\n00:04:40.320 --> 00:04:41.280\nI can do static routes.\n\n94\n00:04:41.280 --> 00:04:42.370\nRight?\nPut a static route here,\n\n95\n00:04:42.370 --> 00:04:45.940\nput a static route here, and\nthen you know configure preferences and\n\n96\n00:04:45.940 --> 00:04:47.120\nredistribute it into OSPF.\n\n97\n00:04:47.120 --> 00:04:48.580\nRight?\n\n98\n00:04:48.580 --> 00:04:50.580\nOr, I could build a tunnel.\n\n99\n00:04:50.580 --> 00:04:54.400\nA tunnel between headquarters and\nbranch one and put that tunnel in OSPF.\n\n100\n00:04:54.400 --> 00:04:59.250\nNow, I'm not running OSPF with the ISP,\nI'm running OSPF with my neighbor right?\n\n101\n00:04:59.250 --> 00:05:00.740\nRight through that tunnel and\n\n102\n00:05:00.740 --> 00:05:03.470\nthe ISP is completely hidden\non that connection, right?\n\n103\n00:05:03.470 --> 00:05:05.450\nIt's a great example of how\nwe can use a GRE tunnel.\n\n104\n00:05:05.450 --> 00:05:06.600\nLet me show you how it works.\n\n105\n00:05:06.600 --> 00:05:07.850\nIt's actually really pretty easy.\n\n106\n00:05:07.850 --> 00:05:12.580\nI'm gonna start on headquarters and\nif I jump over to my headquarters router,\n\n107\n00:05:13.980 --> 00:05:16.250\nwhat we need to do is we\nneed to create a tunnel.\n\n108\n00:05:16.250 --> 00:05:17.860\nAnd a tunnel is just a virtual interface.\n\n109\n00:05:17.860 --> 00:05:20.000\nSo I can type interface tunnel0.\n\n110\n00:05:20.000 --> 00:05:22.190\nAnd you can create as\nmany tunnels as you need.\n\n111\n00:05:22.190 --> 00:05:24.700\nTunnel1, tunnel2, tunnel200, right.\n\n112\n00:05:24.700 --> 00:05:25.670\nYou create those.\n\n113\n00:05:25.670 --> 00:05:26.360\nAnd as soon as you do,\n\n114\n00:05:26.360 --> 00:05:30.140\nit's a virtual interface like a loop back\nso you'll see it gets created, right.\n\n115\n00:05:30.140 --> 00:05:31.260\nBut it's down.\n\n116\n00:05:31.260 --> 00:05:33.120\nIt needs some information, right.\n\n117\n00:05:33.120 --> 00:05:34.830\nSo for this tunnel,\nI'm going to give it some basic data.\n\n118\n00:05:34.830 --> 00:05:37.040\nI'm gonna give it an IP address, right.\n\n119\n00:05:37.040 --> 00:05:40.180\nAnd you can pick a private network\nhere because even though I'm going\n\n120\n00:05:40.180 --> 00:05:41.400\nthrough my ISP.\n\n121\n00:05:41.400 --> 00:05:45.350\nThe ISP is never going to see that,\nIt's encapsulated inside of this tunnel.\n\n122\n00:05:45.350 --> 00:05:50.600\nSo I'm gonna give it a private IP address\nI'll use the 192.168.254 network.\n\n123\n00:05:50.600 --> 00:05:51.750\nI'm just picking that out of my hat.\n\n124\n00:05:53.290 --> 00:05:54.290\nAll right.\n\n125\n00:05:54.290 --> 00:05:57.070\nSo that's the IP address that's\ngoing to be assigned to it.\n\n126\n00:05:57.070 --> 00:05:59.780\nNow I mentioned that it's encapsulating,\nright?\n\n127\n00:05:59.780 --> 00:06:03.830\nGRE encapsulates and as a result it\nhas to add a little bit of data to\n\n128\n00:06:03.830 --> 00:06:06.020\nevery frame that I send on the network.\n\n129\n00:06:06.020 --> 00:06:09.130\nNormally a frame has\nan MTU size of 1500 bytes.\n\n130\n00:06:09.130 --> 00:06:12.580\nWell, I need to leave room for\nthe GRE header.\n\n131\n00:06:13.860 --> 00:06:19.160\nIf I have a frame come in that\nactually has a size of 1500 bytes,\n\n132\n00:06:19.160 --> 00:06:21.780\nthere's no room for\nme to stick my GRE header on there.\n\n133\n00:06:21.780 --> 00:06:22.340\nRight?\nSo\n\n134\n00:06:22.340 --> 00:06:25.970\nit's a good idea to shrink the MTU\nof your tunnel just a little bit.\n\n135\n00:06:25.970 --> 00:06:28.300\nYou don't have to go anything crazy.\n\n136\n00:06:28.300 --> 00:06:31.330\nYou'll see 1492 is recommended\nby a lot of people.\n\n137\n00:06:31.330 --> 00:06:34.370\nBut most of the time in Cisco\ndocumentation you'll see 1400.\n\n138\n00:06:34.370 --> 00:06:38.190\nAll right, lowering that MTU,\nthat leaves a hundred bytes of room for\n\n139\n00:06:38.190 --> 00:06:39.290\nthe GRE header.\n\n140\n00:06:39.290 --> 00:06:42.580\nThe GRE header can be as big as 64 bytes,\nthat's really plenty.\n\n141\n00:06:42.580 --> 00:06:44.100\nAnd that'll take care of us there, so\n\n142\n00:06:44.100 --> 00:06:45.548\nI'm going to shrink that\ndown just a little bit.\n\n143\n00:06:45.548 --> 00:06:46.892\nAll right.\n\n144\n00:06:46.892 --> 00:06:51.850\nNow this is a private IP, that's not\ngoing to work going through my ISP is it?\n\n145\n00:06:51.850 --> 00:06:55.050\nSo when I define a tunnel I\nhave to say the source and\n\n146\n00:06:55.050 --> 00:06:57.610\nthe destination of the tunnel and\nthat's where I use my real IPs.\n\n147\n00:06:57.610 --> 00:06:58.850\nSo I'm going to come in here and\n\n148\n00:06:58.850 --> 00:07:03.960\nI'm going to say my tunnel source\nis gonna be my public interface.\n\n149\n00:07:03.960 --> 00:07:06.301\nWhich for me is interface e0/2.\n\n150\n00:07:06.301 --> 00:07:10.120\nRight, actually it makes me type that out,\ndoesn't it?\n\n151\n00:07:10.120 --> 00:07:11.860\nSo I come in and I basically say.\n\n152\n00:07:11.860 --> 00:07:14.990\nOh, I don't need the interface\nkeyword at all so I'll just say e0/2.\n\n153\n00:07:14.990 --> 00:07:16.280\nThere we go.\n\n154\n00:07:16.280 --> 00:07:19.030\nSo I'm saying use whatever\nIP is attached to e0/2.\n\n155\n00:07:19.030 --> 00:07:22.970\nThat's my public interface,\nthe one that connects to ISP2.\n\n156\n00:07:22.970 --> 00:07:26.510\nAnd then I can say tunnel destination and\n\n157\n00:07:26.510 --> 00:07:32.560\nI'm going to point it to\nthe public IP of branch one.\n\n158\n00:07:32.560 --> 00:07:37.085\nAll right and over there that guy is,\nwhat are they?\n\n159\n00:07:37.085 --> 00:07:39.810\n204.109.63.6 if I remember right is\nthe public IP for the other router.\n\n160\n00:07:39.810 --> 00:07:40.440\nAll right?\n\n161\n00:07:40.440 --> 00:07:43.990\nSo the tunnel is gonna build\nbetween those two public IPs.\n\n162\n00:07:43.990 --> 00:07:47.890\nBut once it's built up inside the tunnel,\nit'll use that private IP.\n\n163\n00:07:47.890 --> 00:07:50.160\nAnd I don't have to worry about NAT or\nanything like that.\n\n164\n00:07:50.160 --> 00:07:54.586\nBecause the private IP is getting\nencapsulated inside of GRE, all right?\n\n165\n00:07:54.586 --> 00:07:58.370\nAnd then, lastly,\nI want the tunnel to participate in OSPF.\n\n166\n00:07:58.370 --> 00:08:01.871\nSo, I'm just gonna come in here and\nstick that into area zero.\n\n167\n00:08:01.871 --> 00:08:04.526\nNow I got a message that said\nTunnel0 changed state to\n\n168\n00:08:04.526 --> 00:08:07.130\nup things are good we're done right?\n\n169\n00:08:07.130 --> 00:08:08.210\nWell not really.\n\n170\n00:08:08.210 --> 00:08:10.880\nThe tunnel is a virtual interface and\nso it always comes up.\n\n171\n00:08:10.880 --> 00:08:12.780\nIt comes up and\nit just thinks that its up.\n\n172\n00:08:12.780 --> 00:08:14.260\nI haven't even configured\nthe other side so\n\n173\n00:08:14.260 --> 00:08:17.670\nthe tunnel is not actually\nvalid it's not working.\n\n174\n00:08:17.670 --> 00:08:20.290\nIt just means that\nthe virtual interface is up.\n\n175\n00:08:20.290 --> 00:08:25.810\nIf I do a show IP interface brief and\nI look at that tunnel, yeah\n\n176\n00:08:25.810 --> 00:08:29.250\nit looks like it's up and it's healthy but\nI can't communicate over it just yet.\n\n177\n00:08:29.250 --> 00:08:33.710\nSo you can't trust that little interface\nmessage that pops up all right?\n\n178\n00:08:33.710 --> 00:08:36.500\nSo my next step is gonna be to go and\nconfigure that other side right?\n\n179\n00:08:36.500 --> 00:08:39.450\nSo I'm gonna jump over to branch one and\nI'm basically gonna\n\n180\n00:08:39.450 --> 00:08:44.130\nrepeat that same process over here I'm\njust gonna flip the IPs around, right?\n\n181\n00:08:44.130 --> 00:08:48.895\nSo I'm gonna create a tunnel interface,\nI'll give it an IP address in that same\n\n182\n00:08:48.895 --> 00:08:54.190\n192.168.254 network, but\na different IP obviously.\n\n183\n00:08:54.190 --> 00:09:02.260\nI'll set the NTU down to 1400 and\nfrom there I'll say the tunnel source And\n\n184\n00:09:02.260 --> 00:09:06.970\non this router, E0/2 is also it's internet\ninterface so I will stick with that.\n\n185\n00:09:06.970 --> 00:09:11.770\nBut the tunnel destination, I need to put\nthe IP address of headquarters and so\n\n186\n00:09:11.770 --> 00:09:12.730\nI will punch that in.\n\n187\n00:09:14.380 --> 00:09:16.260\nWhich is that IP, alright.\n\n188\n00:09:16.260 --> 00:09:18.920\nThen I am going to bring it into OSPF.\n\n189\n00:09:20.000 --> 00:09:22.750\nAlright, now it said\nthe tunnel state went to up.\n\n190\n00:09:22.750 --> 00:09:25.180\nI don't really know if it's up,\nbut when I turn on OSPF,\n\n191\n00:09:25.180 --> 00:09:27.750\nI can see I just got an adjacency.\n\n192\n00:09:27.750 --> 00:09:29.760\nRight.\nIt reached out, it saw the neighbor, and\n\n193\n00:09:29.760 --> 00:09:30.490\nit built the adjacency.\n\n194\n00:09:30.490 --> 00:09:32.535\nThat means I'm communicating\nover this tunnel.\n\n195\n00:09:32.535 --> 00:09:35.795\nAnd if I do a show ip ospf neighbor,\n\n196\n00:09:35.795 --> 00:09:40.635\nI've got a nice shiny new neighbor\nright here on tunnel interface zero.\n\n197\n00:09:40.635 --> 00:09:41.465\nRight?\nAnd\n\n198\n00:09:41.465 --> 00:09:43.345\nthe router ID tells me\nthat's headquarters.\n\n199\n00:09:43.345 --> 00:09:48.475\nSo I'm seeing headquarters via my\nethernet link as well as via my\n\n200\n00:09:48.475 --> 00:09:50.485\nnew tunnel that I created\nover the internet.\n\n201\n00:09:50.485 --> 00:09:51.065\nAll right.\n\n202\n00:09:51.065 --> 00:09:56.110\nNow ospf sees that and just sees it\nlike any other kind of interface, right?\n\n203\n00:09:56.110 --> 00:10:01.900\nIf I do a show ip ospf interface e0/0,\nthat's my metro e connection.\n\n204\n00:10:01.900 --> 00:10:02.520\nIt comes up here.\n\n205\n00:10:02.520 --> 00:10:06.380\nIt's got a cost of 10, and it should\nshow that it's a broadcast network type\n\n206\n00:10:06.380 --> 00:10:08.610\nright there, and\nit's up and running, right?\n\n207\n00:10:08.610 --> 00:10:12.370\nIf I do the same thing for\ntunnel zero There it is.\n\n208\n00:10:12.370 --> 00:10:14.960\nIt's up.\nIt shows it as point to point so\n\n209\n00:10:14.960 --> 00:10:17.010\nit knows it is a different\ntype of network.\n\n210\n00:10:17.010 --> 00:10:20.340\nAnd here's that cost calculated based\non the bandwidth of the tunnel and\n\n211\n00:10:20.340 --> 00:10:22.390\nit's got that information right there.\n\n212\n00:10:22.390 --> 00:10:23.460\nBut it's up and running.\n\n213\n00:10:23.460 --> 00:10:30.230\nI could go in and right now if I do\na show IP route ospf There's OSPF\n\n214\n00:10:30.230 --> 00:10:34.490\nroutes that I'm learning, I'm learning\nthem all over my metro E connection.\n\n215\n00:10:34.490 --> 00:10:37.310\nIf I go and\nshut off that metro E connection, I'm just\n\n216\n00:10:37.310 --> 00:10:40.470\ngoing to shut that one down, right,\nI'm going to lose all those neighbors and\n\n217\n00:10:40.470 --> 00:10:44.510\nall those communications over my metro E,\nbut the tunnel is still up.\n\n218\n00:10:44.510 --> 00:10:49.920\nAnd so if I do a show IP route\nOSPF I'm still learning OSPF routes,\n\n219\n00:10:49.920 --> 00:10:52.330\nand I'm learning them via tunnel zero,\nokay?\n\n220\n00:10:52.330 --> 00:10:55.270\nSo I'm getting those, and it will take a\nmoment for me to learn the other ones, but\n\n221\n00:10:55.270 --> 00:10:56.260\nthey'll start to propagate.\n\n222\n00:10:56.260 --> 00:10:59.510\nI got the head quarter ones really fast,\nbut the other branches aren't in yet.\n\n223\n00:10:59.510 --> 00:11:02.630\nSo I'm still going to be learning those,\nbut via the tunnel.\n\n224\n00:11:02.630 --> 00:11:06.140\nAnd so I'll still be able to\nping right across these tunnels\n\n225\n00:11:06.140 --> 00:11:07.920\nto access the different\nnetworks that are over there.\n\n226\n00:11:07.920 --> 00:11:09.440\nWell, if I do the command right.\n\n227\n00:11:09.440 --> 00:11:10.200\nThere we go.\n\n228\n00:11:10.200 --> 00:11:12.540\nso I can communicate and I can function.\n\n229\n00:11:12.540 --> 00:11:17.540\nIn this scenario, what the GRE tunnel\ndoes for me is it allows me to run\n\n230\n00:11:17.540 --> 00:11:22.440\nmy interior protocol without\ninvolving routers in the path.\n\n231\n00:11:22.440 --> 00:11:27.480\nI'm crossing over to this headquarters and\nhiding all the complexity.\n\n232\n00:11:27.480 --> 00:11:30.240\nSo the GRE tunnel is pretty\nstraightforward, right?\n\n233\n00:11:30.240 --> 00:11:31.650\nBut it has two glaring problems.\n\n234\n00:11:31.650 --> 00:11:32.830\nOne problem I've already pointed out.\n\n235\n00:11:32.830 --> 00:11:34.270\nIt doesn't do encryption.\n\n236\n00:11:34.270 --> 00:11:37.900\nSo if we want encryption, we're gonna\nneed to apply IP sect to that tunnel, and\n\n237\n00:11:37.900 --> 00:11:39.360\nwe'll see that a little bit later.\n\n238\n00:11:39.360 --> 00:11:41.970\nBut it has another problem I\nhaven't pointed out, which is here,\n\n239\n00:11:41.970 --> 00:11:44.640\nI just connected one router to another,\nand it was pretty quick and easy.\n\n240\n00:11:44.640 --> 00:11:46.330\nI defined those tunnels and that was it.\n\n241\n00:11:46.330 --> 00:11:48.670\nBut what if I have 100\nrouters I want to connect?\n\n242\n00:11:48.670 --> 00:11:52.120\nWhat if I'm doing a hub and spoke, and\nI've got a ton of branches out there and\n\n243\n00:11:52.120 --> 00:11:54.060\nI want to build tunnels to all of them?\n\n244\n00:11:54.060 --> 00:11:56.990\nWell I would have to go to my headquarters\nrouter and create 100 tunnels.\n\n245\n00:11:56.990 --> 00:11:59.160\nI would have to create all\nthose tunnels over and\n\n246\n00:11:59.160 --> 00:12:02.370\nover again because in the tunnel\nI put a destination right.\n\n247\n00:12:02.370 --> 00:12:03.820\nTunnel destination was a particular IP.\n\n248\n00:12:03.820 --> 00:12:06.110\nA tunnel can only have one destination,\nright?\n\n249\n00:12:06.110 --> 00:12:08.720\nWell, by default that's true,\nit can only have one destination.\n\n250\n00:12:08.720 --> 00:12:12.500\nSo every time I add a branch I gotta\ngo and reconfigure headquarters.\n\n251\n00:12:12.500 --> 00:12:16.620\nWouldn't it be nice if I could\njust make that Dynamic, right?\n\n252\n00:12:16.620 --> 00:12:20.600\nHave a GRE end point at the headquarters\nthat accepted connections from any router.\n\n253\n00:12:20.600 --> 00:12:24.040\nAnd that way when I added new branches\nI would have to configure the branch.\n\n254\n00:12:24.040 --> 00:12:25.460\nYou're gonna have to do that anyway.\n\n255\n00:12:25.460 --> 00:12:26.860\nBut I don't have to\nconfigure headquarters.\n\n256\n00:12:26.860 --> 00:12:29.100\nIt's just Ready to\nreceive that connection.\n\n257\n00:12:29.100 --> 00:12:32.790\nSo we might choose to take this tunnel and\nreconfigure it that way.\n\n258\n00:12:32.790 --> 00:12:34.100\nLet me show you how that works.\n\n259\n00:12:34.100 --> 00:12:36.860\nIt's a little bit different, we have\nto employ some different techniques and\n\n260\n00:12:36.860 --> 00:12:38.780\ndifferent protocols to get this working.\n\n261\n00:12:38.780 --> 00:12:42.160\nThe main difference is good old NHRP.\n\n262\n00:12:42.160 --> 00:12:46.100\nNHRP is the next hop resolution protocol.\n\n263\n00:12:46.100 --> 00:12:51.090\nWhen you define a normal GRE tunnel, you\nput your IP address and you put the tunnel\n\n264\n00:12:51.090 --> 00:12:54.970\ndestination And it knows the person on the\nother side because it's point to point.\n\n265\n00:12:54.970 --> 00:12:57.150\nIt assumes there's only one\nother person out there.\n\n266\n00:12:57.150 --> 00:12:59.470\nBut if we start going where it's dynamic,\n\n267\n00:12:59.470 --> 00:13:02.300\nthere's gonna be more than one person out\nthere and we need a way to find them.\n\n268\n00:13:02.300 --> 00:13:03.810\nAnd if you remember frame relay.\n\n269\n00:13:03.810 --> 00:13:05.250\nWe use frame relay maps.\n\n270\n00:13:05.250 --> 00:13:07.510\nWell, NHRP can take care of that for us.\n\n271\n00:13:07.510 --> 00:13:11.610\nNHRP, the Next Hop Resolution Protocol,\nwill find those routers on the other end\n\n272\n00:13:11.610 --> 00:13:15.100\nof the tunnel and map them for us so\nthat we know that they're there.\n\n273\n00:13:15.100 --> 00:13:18.110\nSo I need to reconfigure\nmy GRE tunnel to use that.\n\n274\n00:13:18.110 --> 00:13:21.920\nNow the best way to do that is just delete\nyour current tunnel and rebuild it.\n\n275\n00:13:21.920 --> 00:13:24.720\nIt's easier than going through and\ntrying to undo commands.\n\n276\n00:13:24.720 --> 00:13:26.560\nSo I'm gonna go to my headquarters, and\n\n277\n00:13:26.560 --> 00:13:29.800\nthe first thing I'm gonna do is I'm\njust gonna do a no interface tunnel 0.\n\n278\n00:13:29.800 --> 00:13:31.270\nAnd that's gonna delete it out.\n\n279\n00:13:31.270 --> 00:13:33.070\nNow you get a little warning, and\n\n280\n00:13:33.070 --> 00:13:37.910\nit'll say like some settings may reappear\nif you go in and start messing with it.\n\n281\n00:13:37.910 --> 00:13:39.730\nAnd they recommend doing a reboot.\n\n282\n00:13:39.730 --> 00:13:43.770\nIn my case, I never created any\nsubinterfaces so nothing is staying in my\n\n283\n00:13:43.770 --> 00:13:47.050\nconfig so I don't actually need the reboot\nbut always double check that, right.\n\n284\n00:13:47.050 --> 00:13:50.660\nAnd you can just do a quick show\nrun interface tunnel zero and\n\n285\n00:13:50.660 --> 00:13:54.320\nif you don't see anything then it's gone.\n\n286\n00:13:54.320 --> 00:13:55.630\nIt's clear.\n\n287\n00:13:55.630 --> 00:14:00.140\nAll right so\nI'm gonna recreate that tunnel.\n\n288\n00:14:00.140 --> 00:14:02.460\nAnd this time I'm gonna set it\nup a little different, okay.\n\n289\n00:14:02.460 --> 00:14:04.390\nI am still gonna set an IP address, right.\n\n290\n00:14:04.390 --> 00:14:06.110\nBecause that's kind of necessary.\n\n291\n00:14:06.110 --> 00:14:07.780\nAnd I'll just use the same address again.\n\n292\n00:14:08.920 --> 00:14:10.010\nAll right, so I've got an IP address.\n\n293\n00:14:10.010 --> 00:14:14.400\nI can adjust the MTU size if I want,\nto set that just try and\n\n294\n00:14:14.400 --> 00:14:16.130\nbe consistent, all right.\n\n295\n00:14:16.130 --> 00:14:17.980\nThen I wanna do something\na little different,\n\n296\n00:14:17.980 --> 00:14:21.860\nthat tunnel I set up a moment ago,\nWhat security do we do on it?\n\n297\n00:14:21.860 --> 00:14:24.940\nWell there's no encryption, and there\nwasn't even a user name and password.\n\n298\n00:14:24.940 --> 00:14:26.940\nI wasn't worried about it there\nbecause it was point to point.\n\n299\n00:14:26.940 --> 00:14:29.230\nI was building that tunnel\nspecifically up with a neighbor, but\n\n300\n00:14:29.230 --> 00:14:30.690\nthis one I'm gonna leave wide open.\n\n301\n00:14:30.690 --> 00:14:31.980\nAnybody can connect to it.\n\n302\n00:14:31.980 --> 00:14:34.440\nSo at a minimum,\nI probably need to stick a password on it.\n\n303\n00:14:34.440 --> 00:14:38.730\nSo I'm gonna come in here and\nsay ip nhrp, right?\n\n304\n00:14:38.730 --> 00:14:40.600\nThere's that next hop resolution protocol.\n\n305\n00:14:42.210 --> 00:14:43.870\nAuthentication.\n\n306\n00:14:43.870 --> 00:14:46.740\nSo basically I'm saying if somebody's\ngonna connect, they gotta have a password,\n\n307\n00:14:46.740 --> 00:14:49.064\nand I'll just call it my vpn_password.\n\n308\n00:14:49.064 --> 00:14:52.090\nYou can put in whatever string\nyou want and oh, mine's too long.\n\n309\n00:14:52.090 --> 00:14:53.780\nSo we'll just do, how about cisco123.\n\n310\n00:14:53.780 --> 00:14:55.900\nThere we go.\n\n311\n00:14:55.900 --> 00:14:58.250\nSo I've got a password\nassigned to this tunnel now.\n\n312\n00:14:58.250 --> 00:15:01.010\nSo if anybody connects,\nanybody can connect But\n\n313\n00:15:01.010 --> 00:15:02.810\nthey're going to have to provide\nthis password to connect.\n\n314\n00:15:02.810 --> 00:15:05.950\nAnd that's important, because we're\nleaving this wide open, all right?\n\n315\n00:15:05.950 --> 00:15:09.210\nThen, I need to tell NHRP to run,\nto do its job.\n\n316\n00:15:09.210 --> 00:15:13.070\nAnd to map any IPs that it learns out\nthere, so I'll be able to reach them.\n\n317\n00:15:13.070 --> 00:15:16.010\nSo I'm gonna say, map.\n\n318\n00:15:16.010 --> 00:15:19.330\nMulticast dynamic, right?\n\n319\n00:15:19.330 --> 00:15:23.940\nSo when somebody connects,\nI need to map those multicast networks and\n\n320\n00:15:23.940 --> 00:15:30.940\nthen I also need to say ip\nnhrp network id 1 All right.\n\n321\n00:15:30.940 --> 00:15:33.880\nOn a tunnel,\nyou can have more than one network ID.\n\n322\n00:15:33.880 --> 00:15:37.220\nAnd when somebody can max,\ntheir network ID needs to match.\n\n323\n00:15:37.220 --> 00:15:40.770\nWell, it's just a number you assign to it,\nI'm going to be assigning this number one.\n\n324\n00:15:40.770 --> 00:15:41.530\nThink of it as VLANs,\n\n325\n00:15:41.530 --> 00:15:44.855\nyou can have more than one network\nID inside of the same tunnel.\n\n326\n00:15:44.855 --> 00:15:46.465\nDivide this traffic up.\n\n327\n00:15:46.465 --> 00:15:49.835\nYou can tell somebody connecting\nto connect on ID3 or ID 7.\n\n328\n00:15:49.835 --> 00:15:55.005\nAnd here I'm doing ID1, so this will\nall be kind of separated, all right?\n\n329\n00:15:55.005 --> 00:15:58.045\nThen I do a tunnel source,\njust like I did before.\n\n330\n00:15:58.045 --> 00:15:59.192\nThat's no different.\n\n331\n00:15:59.192 --> 00:16:01.746\nRight, but\ntunnel destination is different.\n\n332\n00:16:01.746 --> 00:16:04.961\nTunnel destination would normally be\na specific person on the other end, but\n\n333\n00:16:04.961 --> 00:16:06.520\nhere I need it to be dynamic.\n\n334\n00:16:06.520 --> 00:16:12.550\nAnd so\nI'm gonna say tunnel mode gre multipoint.\n\n335\n00:16:12.550 --> 00:16:13.140\nAll right.\n\n336\n00:16:13.140 --> 00:16:16.060\nInstead of a destination,\nI'm saying it could be anybody.\n\n337\n00:16:16.060 --> 00:16:19.360\nAnybody's IP out there,\nthey're gonna connect to me.\n\n338\n00:16:19.360 --> 00:16:21.770\nNow that's an important\ndifferentiator right there.\n\n339\n00:16:21.770 --> 00:16:23.220\nI cannot connect to them.\n\n340\n00:16:23.220 --> 00:16:26.180\nIf the tunnel goes down,\nI don't know their IP, I can't connect.\n\n341\n00:16:26.180 --> 00:16:28.960\nIt's up to them to initiate\nthe connection to me.\n\n342\n00:16:28.960 --> 00:16:31.300\nWhen you define the tunnel\nwith an actual destination IP,\n\n343\n00:16:31.300 --> 00:16:33.830\neither side could initiate the tunnel.\n\n344\n00:16:33.830 --> 00:16:35.860\nSo, just be aware that's\na slight difference when we go\n\n345\n00:16:35.860 --> 00:16:36.840\nmulti point like this.\n\n346\n00:16:37.940 --> 00:16:41.370\nAnd then lastly, I'm gonna go in and\nthrow this one into OSPF.\n\n347\n00:16:43.190 --> 00:16:46.410\nSo now anybody connecting that has\nthe right password will connect and\n\n348\n00:16:46.410 --> 00:16:48.290\nbecome a part of my OSPF environment.\n\n349\n00:16:48.290 --> 00:16:48.960\nAll right.\n\n350\n00:16:48.960 --> 00:16:52.700\nSo we should be pretty good\nthere on the headquarters.\n\n351\n00:16:52.700 --> 00:16:54.720\nNot a whole lot of hard\nset details on there.\n\n352\n00:16:54.720 --> 00:16:56.040\nRight?\nLet me pull up that config so\n\n353\n00:16:56.040 --> 00:16:58.880\nyou can see what it looks\nlike now that it's all done.\n\n354\n00:16:58.880 --> 00:16:59.660\nThere.\n\n355\n00:16:59.660 --> 00:17:04.605\nWe set an IP address,\nwe set the mtu limitation, we turned on\n\n356\n00:17:04.605 --> 00:17:10.060\nnrhp and set it to authentication,\nwe turned on nhrp for multicast.\n\n357\n00:17:10.060 --> 00:17:12.930\nWe turned on a network ID,\nwhich you have to have at least one.\n\n358\n00:17:12.930 --> 00:17:13.490\nI just did one.\n\n359\n00:17:13.490 --> 00:17:14.790\nAnd we put in OSPF.\n\n360\n00:17:14.790 --> 00:17:18.390\nAnd then lastly, the tunnel\nsource was our public interface.\n\n361\n00:17:18.390 --> 00:17:24.380\nAnd our tunnel destination is left\nopen for dynamic connections.\n\n362\n00:17:24.380 --> 00:17:28.073\nNow I can jump out to a client, and\nthe client's a little bit harder to set.\n\n363\n00:17:28.073 --> 00:17:30.690\nBut that's the last time I have\nto configure headquarters.\n\n364\n00:17:30.690 --> 00:17:33.860\nIf I had five more branches, 10, 100 more\nbranches, I don't configure headquarters.\n\n365\n00:17:33.860 --> 00:17:35.950\nHeadquarters is done.\n\n366\n00:17:35.950 --> 00:17:37.650\nNow I just go to the branch.\n\n367\n00:17:37.650 --> 00:17:41.290\nAnd on the branch I'm just\ngonna get rid of that tunnel.\n\n368\n00:17:41.290 --> 00:17:42.815\nAll right.\n\n369\n00:17:42.815 --> 00:17:44.990\nThen we'll recreate the tunnel.\n\n370\n00:17:44.990 --> 00:17:46.580\nAnd now I'm setting up a new branch.\n\n371\n00:17:46.580 --> 00:17:50.507\nAnd all I have to do here is tell the\nserver to connect to and to run an NHRP.\n\n372\n00:17:50.507 --> 00:17:53.626\nIt's gotta register with a NHRP or\nit won't be able to find headquarters.\n\n373\n00:17:53.626 --> 00:18:00.990\nSo, I'm gonna tell it an IP address,\nthis one'll be 192.168.254.2.\n\n374\n00:18:00.990 --> 00:18:02.760\nAll right, there we go, so it's got that.\n\n375\n00:18:02.760 --> 00:18:05.440\nThen I'm gonna give it the password,\nright.\n\n376\n00:18:05.440 --> 00:18:09.240\nIt's gonna run in NHRP and\nthe password is cisco123.\n\n377\n00:18:10.630 --> 00:18:12.440\nSo now it's got that, it's gonna run NHRP.\n\n378\n00:18:12.440 --> 00:18:18.300\nI need to tell it to run NHRP for\nmulticast also, so I'll add that.\n\n379\n00:18:20.260 --> 00:18:22.070\nWhoops I'll try and add that.\n\n380\n00:18:22.070 --> 00:18:24.810\nOh I'm leaving out my map keyword,\nthere we go.\n\n381\n00:18:26.930 --> 00:18:27.490\nAll right.\n\n382\n00:18:27.490 --> 00:18:30.450\nSo its gonna built up that map and\nfind the multi cast addresses for\n\n383\n00:18:30.450 --> 00:18:32.070\ncommunications on the other side.\n\n384\n00:18:32.070 --> 00:18:35.340\nAnd then I actually do need\nto do a static map, okay.\n\n385\n00:18:35.340 --> 00:18:37.240\nI need to know\nthe headquarters is out there,\n\n386\n00:18:37.240 --> 00:18:38.910\nsomebody's gotta initiate this detection.\n\n387\n00:18:38.910 --> 00:18:40.480\nAnd I'm gonna make it the branch.\n\n388\n00:18:40.480 --> 00:18:43.730\nAnd I'm doing it on the branch because if\nI did it on the headquarters every time\n\n389\n00:18:43.730 --> 00:18:45.770\nI added a new branch,\nI'd have to go and edit headquarters.\n\n390\n00:18:45.770 --> 00:18:47.780\nI don't want that I want\nheadquarters to stay alone.\n\n391\n00:18:47.780 --> 00:18:52.580\nSo on the branches whenever I configure\nnew and I will map the IP for\n\n392\n00:18:52.580 --> 00:18:53.210\nheadquarters.\n\n393\n00:18:56.160 --> 00:18:56.850\nAll right.\n\n394\n00:18:56.850 --> 00:19:00.733\nAnd I need to map it to the public IP for\nheadquarters.\n\n395\n00:19:00.733 --> 00:19:04.797\nYou know who it is that I'm gonna be\nconnecting to on that other side so\n\n396\n00:19:04.797 --> 00:19:09.161\nthat public IP for\nheadquarters is 204.109.63.2, right?\n\n397\n00:19:09.161 --> 00:19:12.290\nThat's the IP that I'm going to be\nconnecting to on the other side.\n\n398\n00:19:12.290 --> 00:19:13.485\nIf I ever need to get to this IP,\n\n399\n00:19:13.485 --> 00:19:17.140\n192.168.254.1 that's the neighbor\nI need to go to, all right?\n\n400\n00:19:17.140 --> 00:19:20.500\nAnd they'll be waiting with the tunnel.\n\n401\n00:19:20.500 --> 00:19:23.550\nAnd I also need to map multicast.\n\n402\n00:19:25.010 --> 00:19:28.660\nSo I'll map multicast and\nI'm basically doing the same thing.\n\n403\n00:19:29.780 --> 00:19:32.610\nRight.\nMulticast is any traffic that starts at\n\n404\n00:19:32.610 --> 00:19:36.630\n224 through 239, so\nthat's what it's looking for and\n\n405\n00:19:36.630 --> 00:19:38.400\nwe'll send that along to the other side.\n\n406\n00:19:38.400 --> 00:19:40.410\nNow multicast is important\ncuz if I'm running OSPF,\n\n407\n00:19:40.410 --> 00:19:42.670\nwhat does OSPF use for discovery?\n\n408\n00:19:42.670 --> 00:19:43.960\nMulticast, gotta have it.\n\n409\n00:19:43.960 --> 00:19:45.220\nRight.\n\n410\n00:19:45.220 --> 00:19:47.810\nOkay, then I need to add that network-id.\n\n411\n00:19:47.810 --> 00:19:50.400\nIf I don't add network-id,\nthis whole thing is not gonna work.\n\n412\n00:19:50.400 --> 00:19:52.240\nSo I need to get that in place.\n\n413\n00:19:52.240 --> 00:19:53.580\nAnd after that we're\npretty straightforward.\n\n414\n00:19:53.580 --> 00:19:55.550\nI do need to tell it, my system.\n\n415\n00:19:55.550 --> 00:20:02.520\nSo I need to go in here and\ntell it the next hop server.\n\n416\n00:20:02.520 --> 00:20:04.190\nThe next hop server in NHRP,\n\n417\n00:20:04.190 --> 00:20:08.150\nthat's the server that's keeping track\nof all the hosts that are connected.\n\n418\n00:20:08.150 --> 00:20:11.690\nAnd as you'd expect, that's gonna\nbe headquarters, so I'll go and\n\n419\n00:20:11.690 --> 00:20:15.420\nset that headquarters automatically became\na next top server when we configured it.\n\n420\n00:20:17.670 --> 00:20:18.990\nAll right and that should be about it.\n\n421\n00:20:18.990 --> 00:20:22.920\nI do need to set my tunnel source and\nmy tunnel destination.\n\n422\n00:20:22.920 --> 00:20:26.830\nNow, the tunnel destination\nis gonna be gre multi-point.\n\n423\n00:20:26.830 --> 00:20:29.669\nAnd you'll remember what I said at\nheadquarters I didn't put a destination\n\n424\n00:20:29.669 --> 00:20:30.922\ncuz we don't know what the IP is.\n\n425\n00:20:30.922 --> 00:20:32.710\nBut our branch does\nknow the IP doesn't it?\n\n426\n00:20:32.710 --> 00:20:34.365\nSo why am I saying multi point?\n\n427\n00:20:34.365 --> 00:20:37.110\nWell its because right up\nhere I've got the map, right.\n\n428\n00:20:37.110 --> 00:20:40.086\nThere's the map that I need, that's how it\nknows where that destination is gonna be.\n\n429\n00:20:40.086 --> 00:20:43.887\nI didn't do a map on headquarters, cuz I'm\ngonna let headquarters learn it, right.\n\n430\n00:20:43.887 --> 00:20:46.600\nAnd that way I don't have to\nreconfigure headquarters.\n\n431\n00:20:46.600 --> 00:20:48.900\nAnd then lastly I'll throw\nthis turkey into OSPF.\n\n432\n00:20:50.170 --> 00:20:50.860\nThere we go.\n\n433\n00:20:50.860 --> 00:20:54.860\nAnd if the tunnel's actually up,\nI should see OSPF come up.\n\n434\n00:20:54.860 --> 00:20:58.475\nIf it doesn't come up right away,\nyou might wanna ping across the tunnel and\n\n435\n00:20:58.475 --> 00:21:02.020\npinging across it can sometimes\ntrigger that tunnel to come up.\n\n436\n00:21:02.020 --> 00:21:08.830\nYou gotta remember that the tunnel doesn't\nnecessarily come up automatically.\n\n437\n00:21:08.830 --> 00:21:10.610\nIt waits for\nwhat's called interesting traffic,\n\n438\n00:21:10.610 --> 00:21:12.560\ntraffic that will cause that to happen.\n\n439\n00:21:12.560 --> 00:21:13.270\nSo, all right.\n\n440\n00:21:13.270 --> 00:21:14.910\nSo that should be reaching our there.\n\n441\n00:21:14.910 --> 00:21:17.400\nI know the tunnels up cuz I\nwas able to ping across it,\n\n442\n00:21:17.400 --> 00:21:19.650\nand I still have that interface shut down.\n\n443\n00:21:19.650 --> 00:21:23.480\nLet me make sure I actually do\nMy E 0/0 interface is shut down.\n\n444\n00:21:23.480 --> 00:21:26.690\nSo I've got no way to get to headquarters,\nother than through my tunnel.\n\n445\n00:21:26.690 --> 00:21:28.870\nAnd I was able to ping across it,\nand I got there.\n\n446\n00:21:28.870 --> 00:21:29.520\nAll right.\n\n447\n00:21:29.520 --> 00:21:32.170\nSo this was a harder configuration, right.\n\n448\n00:21:32.170 --> 00:21:35.240\nIf I take a look at what that looked like,\n\n449\n00:21:35.240 --> 00:21:37.170\nthe configuration was\nharder on the client.\n\n450\n00:21:37.170 --> 00:21:40.540\nBut once I've done one, you just kinda\ncopy and paste it to the other ones.\n\n451\n00:21:40.540 --> 00:21:44.060\nBut the nice part here is that I can\nadd 5, 10, 100 more branches, and\n\n452\n00:21:44.060 --> 00:21:46.280\nI never have to go\nreconfigure headquarters.\n\n453\n00:21:46.280 --> 00:21:49.760\nHeadquarters just picks these up and\njoins them, throws them right in, and\n\n454\n00:21:49.760 --> 00:21:50.800\nwe're in business.\n\n455\n00:21:50.800 --> 00:21:52.840\nOther than that, that's it.\n\n456\n00:21:52.840 --> 00:21:58.650\nSo, this is a multipoint GRE tunnel,\na GRE tunnel that's dynamic.\n\n457\n00:21:58.650 --> 00:22:00.570\nSo just a more advanced version of GRE.\n\n458\n00:22:00.570 --> 00:22:05.520\nAll right now both versions that I\nshowed you, point to point GRE and\n\n459\n00:22:05.520 --> 00:22:07.360\nnow the multipoint GRE.\n\n460\n00:22:07.360 --> 00:22:08.860\nBoth of them are very flexible.\n\n461\n00:22:08.860 --> 00:22:11.170\nThey both allow us to mask\ncomplexity on the network.\n\n462\n00:22:11.170 --> 00:22:12.990\nThey both allow us to\nbuild up connections for\n\n463\n00:22:12.990 --> 00:22:15.880\nthings like our routing protocols,\nall right.\n\n464\n00:22:15.880 --> 00:22:20.240\nBut neither of them are applying\nencryption, and so that's the next step is\n\n465\n00:22:20.240 --> 00:22:22.800\nI want to get encryption applied to this\ntoo if it's going over the Internet.\n\n466\n00:22:22.800 --> 00:22:25.010\nIf it's not,\nif it's like a private MPLS network,\n\n467\n00:22:25.010 --> 00:22:26.590\nyou might not care about it, right?\n\n468\n00:22:26.590 --> 00:22:29.360\nBut most of us are gonna apply at least\nsome degree of encryption to it and\n\n469\n00:22:29.360 --> 00:22:30.900\nthat's the next step.\n\n470\n00:22:30.900 --> 00:22:34.270\nI don't really have enough time left in\nthis episode, so why don't we do this,\n\n471\n00:22:34.270 --> 00:22:35.640\nwhy don't we stop here.\n\n472\n00:22:35.640 --> 00:22:37.010\nAnd we'll do a part two.\n\n473\n00:22:37.010 --> 00:22:39.900\nSo we'll do VPN Technologies part two and\n\n474\n00:22:39.900 --> 00:22:43.570\nwe'll take these tunnels that we just made\nand we'll just apply encryption to it.\n\n475\n00:22:43.570 --> 00:22:46.260\nGet them encrypting and\nmoving that data securely, so\n\n476\n00:22:46.260 --> 00:22:50.100\nthat we can have a nice secure\ncommunication between these two systems.\n\n477\n00:22:50.100 --> 00:22:50.900\nAll right.\nWell that's it for\n\n478\n00:22:50.900 --> 00:22:52.590\nthis show, I hope you guys enjoyed it.\n\n479\n00:22:52.590 --> 00:22:55.011\nSigning of for ITProTV, I'm Don Pezet.\n\n480\n00:22:55.011 --> 00:22:56.735\nAnd I'll see you next time.\n\n481\n00:22:56.735 --> 00:23:01.195\n[SOUND]\n\n",
          "vimeoId": "138326559"
        },
        {
          "description": "Using a GRE tunnel over a private network is okay to do, but not the best idea if being sent through an ISP because of the lack of encryption. Viewers will hear about how IPSec, DM-VPNs and EasyVPN can be used to create encrypted tunnels between Cisco IOS routers and see a demonstration of applying IPSec to a GRE tunnel to create a secure connection between two routers.",
          "length": "1104",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/ccnproute/cisco-ccnproute300101-4-0-vpn_technologies_pt2-090315-1.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/ccnproute/cisco-ccnproute300101-4-0-vpn_technologies_pt2-090315-1-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/ccnproute/cisco-ccnproute300101-4-0-vpn_technologies_pt2-090315-1-sm.jpg",
          "title": "VPN Technologies Part 2",
          "transcript": "WEBVTT\n\n1\n00:00:00.000 --> 00:00:10.710\n[MUSIC]\n\n2\n00:00:10.710 --> 00:00:11.620\nAll right.\n\n3\n00:00:11.620 --> 00:00:13.330\nGood morning, good afternoon,\nand good evening.\n\n4\n00:00:13.330 --> 00:00:15.450\nWelcome back to another\nepisode of IT Pro TV.\n\n5\n00:00:15.450 --> 00:00:20.598\nI'm your host Don Pezet, back again\nwith another episode of CCNP Route, and\n\n6\n00:00:20.598 --> 00:00:25.760\nthis is actually part two to our extremely\nexciting VPN technology section.\n\n7\n00:00:25.760 --> 00:00:29.340\nIn the last episode, if you guys remember,\nwe covered GRE tunnels and\n\n8\n00:00:29.340 --> 00:00:32.494\nwe saw how to just do a quick\npoint-to-point GRE tunnel, and\n\n9\n00:00:32.494 --> 00:00:36.460\nwe saw how to do a multi-point, like\na dynamic GRE tunnel, which was great.\n\n10\n00:00:36.460 --> 00:00:38.861\nBoth technologies let us mask\ncomplexity on the network and\n\n11\n00:00:38.861 --> 00:00:40.580\nbuild up neighbor relationships.\n\n12\n00:00:40.580 --> 00:00:42.520\nI used OSPF in that example.\n\n13\n00:00:42.520 --> 00:00:44.050\nAnd it worked well.\n\n14\n00:00:44.050 --> 00:00:45.160\nBut, I have one little problem.\n\n15\n00:00:45.160 --> 00:00:48.120\nIt's one little problem was that\nit didn't encrypt any of my data.\n\n16\n00:00:48.120 --> 00:00:50.500\nSo if that's going over to private\nnetwork, I'm okay with that.\n\n17\n00:00:50.500 --> 00:00:53.050\nGRE tunnels on your private\nnetwork you don't need encryption.\n\n18\n00:00:53.050 --> 00:00:53.870\nThey just hurt performance.\n\n19\n00:00:53.870 --> 00:00:56.770\nSo you get the best performance\nout of doing unencrypted GRE\n\n20\n00:00:56.770 --> 00:00:58.050\ntunnels that work great.\n\n21\n00:00:58.050 --> 00:01:02.837\nBut if you're going through an ISP like I\nwas It's not necessarily the greatest idea\n\n22\n00:01:02.837 --> 00:01:07.790\nto be throwing your LAN traffic across\nan ISP, even if it is encapsulated, right?\n\n23\n00:01:07.790 --> 00:01:10.730\nBecause it's just still in\nclear plain text, whatever,\n\n24\n00:01:10.730 --> 00:01:12.840\nso it can be intercepted and viewed.\n\n25\n00:01:12.840 --> 00:01:15.720\nSo let's take a look at\nways that we can fix that.\n\n26\n00:01:15.720 --> 00:01:18.636\nBefore we dive into the router though,\nlet's start with my typology so\n\n27\n00:01:18.636 --> 00:01:20.100\nwe can kinda refresh where we were.\n\n28\n00:01:20.100 --> 00:01:22.460\nBasically we had an OSPF area, right?\n\n29\n00:01:22.460 --> 00:01:23.290\nArea zero here.\n\n30\n00:01:23.290 --> 00:01:27.090\nHeadquarters, branch one, branch two,\nbranch three, all connected in area zero.\n\n31\n00:01:27.090 --> 00:01:29.340\nAnd they all have a metro e connection.\n\n32\n00:01:29.340 --> 00:01:33.450\nJust a ten megabit ethernet connection\nthat links them all together.\n\n33\n00:01:33.450 --> 00:01:35.370\nBut branch one lost it's connection,\nright?\n\n34\n00:01:35.370 --> 00:01:37.590\nThat connection failed\nthe metro e is down.\n\n35\n00:01:37.590 --> 00:01:40.900\nBut it also had an internet\nconnection out to isp1.\n\n36\n00:01:40.900 --> 00:01:44.381\nHeadquarters had an isp connection\nto isp1 also so I went ahead and\n\n37\n00:01:44.381 --> 00:01:48.250\nwhipped up a GRE tunnel between the two\nto get them connected up and happy.\n\n38\n00:01:48.250 --> 00:01:50.110\nAll right?\nAnd it worked.\n\n39\n00:01:50.110 --> 00:01:52.750\nIf I trust isp1, I can leave it be, right?\n\n40\n00:01:52.750 --> 00:01:56.090\nThat private traffic is going across\nthe tunnel but they don't see that.\n\n41\n00:01:56.090 --> 00:02:01.210\nThey see it being encapsulated traffic so\nthey don't see the internal IPs.\n\n42\n00:02:01.210 --> 00:02:05.720\nBut a malicious employer or whatever could\nintercept that data and get it, all right?\n\n43\n00:02:05.720 --> 00:02:09.910\nSo I wanna take that same tunnel, the\ntunnel the we've already got in place and\n\n44\n00:02:09.910 --> 00:02:12.340\nI want to apply encryption to it,\nall right?\n\n45\n00:02:12.340 --> 00:02:14.390\nNow before I do that.\n\n46\n00:02:14.390 --> 00:02:17.145\nLet's just make sure the tunnel\nis actually there and working.\n\n47\n00:02:17.145 --> 00:02:18.625\nThat's always a helpful thing, right?\n\n48\n00:02:18.625 --> 00:02:23.115\nSo if I take a look at my branch,\nright, so here I am on branch 1.\n\n49\n00:02:23.115 --> 00:02:27.830\nIf I do a show ip interface brief\nI'll see tunnel 0 right there.\n\n50\n00:02:27.830 --> 00:02:29.220\nAnd it shows as up, up.\n\n51\n00:02:29.220 --> 00:02:32.370\nBut as I pointed out in the last episode,\nyou can not trust that.\n\n52\n00:02:32.370 --> 00:02:35.080\nWhen it says up up,\nthat just means our end is up.\n\n53\n00:02:35.080 --> 00:02:37.590\nThe other end could be down,\nthe other end may not even exist,\n\n54\n00:02:37.590 --> 00:02:38.800\nit will still say up up here.\n\n55\n00:02:38.800 --> 00:02:40.520\nSo, you can't trust that, right?\n\n56\n00:02:40.520 --> 00:02:42.790\nThat just means you know how\nto type in an IP address.\n\n57\n00:02:42.790 --> 00:02:44.420\nSo if I really want to verify the tunnel,\n\n58\n00:02:44.420 --> 00:02:46.250\nthe best way is to like send\ntraffic over it, right?\n\n59\n00:02:46.250 --> 00:02:49.330\nThere's a few other commands you can use,\nbut sending traffic's the easiest.\n\n60\n00:02:49.330 --> 00:02:53.290\nI've got OSPF set up, so I should\nbe seeing an OSPF neighbor on that.\n\n61\n00:02:53.290 --> 00:02:56.560\nIf I take a look at my neighbors,\nsure enough,\n\n62\n00:02:56.560 --> 00:02:59.150\nI've got a connection to\nheadquarters on tunnel zero.\n\n63\n00:02:59.150 --> 00:03:01.430\nSo that's a pretty good\nindicator the tunnel is up.\n\n64\n00:03:01.430 --> 00:03:04.640\nAnd if I look at my routing table,\nI am learning OSPF routes for\n\n65\n00:03:04.640 --> 00:03:06.160\nthose other networks.\n\n66\n00:03:06.160 --> 00:03:08.550\nAnd I should be able to\nping across to them, right?\n\n67\n00:03:08.550 --> 00:03:12.263\nIf I try and ping somebody,\nlike we'll try branch 3,\n\n68\n00:03:12.263 --> 00:03:16.560\nwhich is this 3.3.3.3 IP,\nsure enough I can ping to it.\n\n69\n00:03:16.560 --> 00:03:20.880\nSo my GRE tunnel is up, it's healthy,\nand it's running, all right?\n\n70\n00:03:20.880 --> 00:03:22.908\nBut if I take a look at my config for\n\n71\n00:03:22.908 --> 00:03:28.580\nit It's just a straight up point to point\nGRE tunnel, nothing flashy about it.\n\n72\n00:03:28.580 --> 00:03:30.920\nI wanna apply encryption to it.\n\n73\n00:03:30.920 --> 00:03:36.430\nWell, do that, we can leverage\nthe VPN subsystem inside of Cisco IOS.\n\n74\n00:03:36.430 --> 00:03:39.320\nEvery Cisco router is\ncapable of building a VPN.\n\n75\n00:03:39.320 --> 00:03:40.180\nIt's not ideal.\n\n76\n00:03:40.180 --> 00:03:43.350\nCisco says if you wanna build a VPN,\nyou really need to use ASAs,\n\n77\n00:03:43.350 --> 00:03:44.670\nget some Cisco firewalls.\n\n78\n00:03:44.670 --> 00:03:46.040\nThat's the better way to do it.\n\n79\n00:03:46.040 --> 00:03:48.770\nBut in a pinch,\nyou can use your router to do it too.\n\n80\n00:03:48.770 --> 00:03:52.370\nThe big difference is an ASA actually\nhas hardware acceleration for\n\n81\n00:03:52.370 --> 00:03:53.490\nthose VPN tunnels.\n\n82\n00:03:53.490 --> 00:03:56.610\nSo it can do encryption and\ndecryption at near-wire speed.\n\n83\n00:03:56.610 --> 00:03:58.742\nRouters don't, routers do it in software.\n\n84\n00:03:58.742 --> 00:04:02.280\nAll right, they do it in software,\nand the CPU in most routers stinks.\n\n85\n00:04:02.280 --> 00:04:05.020\nSo that means you're not going to get\nhuge amounts of throughput when you're\n\n86\n00:04:05.020 --> 00:04:06.320\nbuilding VPN tunnels off a router.\n\n87\n00:04:06.320 --> 00:04:08.940\nSo while you can do it\nIt's not a great idea.\n\n88\n00:04:08.940 --> 00:04:10.970\nIt's really just designed to be temporary.\n\n89\n00:04:10.970 --> 00:04:14.120\nSomething you have in place until\nyou can get an ASA in there right?\n\n90\n00:04:14.120 --> 00:04:16.340\nSo for us, I'm dealing with temporary.\n\n91\n00:04:16.340 --> 00:04:18.420\nI've got this topology that's not healthy.\n\n92\n00:04:18.420 --> 00:04:19.430\nI've lost my connection.\n\n93\n00:04:19.430 --> 00:04:22.564\nNow that metro E connection will come back\neventually and I'll switch back to it but\n\n94\n00:04:22.564 --> 00:04:24.420\nI've got this tunnel just\nas a temporary thing.\n\n95\n00:04:24.420 --> 00:04:28.742\nAnd so using the routers to apply\nencryption may be perfectly fine for\n\n96\n00:04:28.742 --> 00:04:33.460\nme just to get me by until this\nconnection is repaired, all right.\n\n97\n00:04:33.460 --> 00:04:34.610\nSo that's a great scenario.\n\n98\n00:04:34.610 --> 00:04:36.440\nWe might choose to use\nsomething like this.\n\n99\n00:04:36.440 --> 00:04:39.300\nSo, I just need to take that tunnel and\napply encryption.\n\n100\n00:04:39.300 --> 00:04:42.670\nNow In the official exam objectives\nit says you need to know how to\n\n101\n00:04:42.670 --> 00:04:47.110\ndescribe DM VPNs and describe easy VPNs.\n\n102\n00:04:47.110 --> 00:04:49.270\nIt doesn't say you need to\nknow how to configure them.\n\n103\n00:04:49.270 --> 00:04:50.390\nBut it's really not that hard.\n\n104\n00:04:50.390 --> 00:04:52.830\nI want to show you guys how to\nconfigure to get it in place.\n\n105\n00:04:52.830 --> 00:04:56.250\nBut before I do that let me explain\nthe difference between a DM VPN and\n\n106\n00:04:56.250 --> 00:04:58.140\nan easy VPN, all right?\n\n107\n00:04:58.140 --> 00:05:01.340\nDM VPNs, I kind of already\nhave one in place, right?\n\n108\n00:05:01.340 --> 00:05:03.140\nWell, actually not now.\n\n109\n00:05:03.140 --> 00:05:04.670\nI did in the last episode.\n\n110\n00:05:04.670 --> 00:05:08.920\nWhen I created that dynamic multi-point\nGRE tunnel on headquarters where it could\n\n111\n00:05:08.920 --> 00:05:11.980\nconnect on more than one node,\nthat's a DM VPN.\n\n112\n00:05:11.980 --> 00:05:13.790\nBut I didn't apply encryption to it.\n\n113\n00:05:13.790 --> 00:05:17.420\nWhen you apply encryption to it,\ndoing a regular DMVPN you\n\n114\n00:05:17.420 --> 00:05:20.870\nactually have to put all\nthe encryption settings on both sides.\n\n115\n00:05:20.870 --> 00:05:25.470\nOn the headquarters and on the client and\nso on the headquarters at the Put in what\n\n116\n00:05:25.470 --> 00:05:29.010\nencryption to use, what hashing algorithm\nto use, how to do a key exchange, right?\n\n117\n00:05:29.010 --> 00:05:30.780\nAll that data.\n\n118\n00:05:30.780 --> 00:05:32.850\nBut on my client,\nI gotta do the same thing,\n\n119\n00:05:32.850 --> 00:05:34.210\nI have to put all that\ninformation in there.\n\n120\n00:05:34.210 --> 00:05:35.240\nIt's a lot of work.\n\n121\n00:05:35.240 --> 00:05:35.820\nRight?\n\n122\n00:05:35.820 --> 00:05:38.250\nSo Cisco created something\ncalled Easy VPN.\n\n123\n00:05:38.250 --> 00:05:41.560\nAnd Easy VPN really wasn't designed for\nsite-to-site communications.\n\n124\n00:05:41.560 --> 00:05:43.700\nEasy VPN was designed for end users.\n\n125\n00:05:43.700 --> 00:05:47.200\nTo let people get their laptops\nconnected or their desktop, whatever.\n\n126\n00:05:47.200 --> 00:05:49.230\nWell, The way easy VPN works is,\n\n127\n00:05:49.230 --> 00:05:52.260\non the server you have to\nput in all the settings.\n\n128\n00:05:52.260 --> 00:05:55.370\nBut then on the client, it just connects\nup and then downloads the settings.\n\n129\n00:05:55.370 --> 00:05:57.900\nSays hey, can you tell me,\ntell me what encryption used.\n\n130\n00:05:57.900 --> 00:05:59.070\nTell me what hash out room.\n\n131\n00:05:59.070 --> 00:06:00.660\nTell me how to do the key exchange.\n\n132\n00:06:00.660 --> 00:06:02.120\nYou get what's called a profile, right.\n\n133\n00:06:02.120 --> 00:06:04.340\nAnd it tells you how to do all that stuff.\n\n134\n00:06:04.340 --> 00:06:07.608\nSo on the client, all the client needs\nto know is the IP address for the sever,\n\n135\n00:06:07.608 --> 00:06:08.880\na username, and a password.\n\n136\n00:06:08.880 --> 00:06:09.550\nAnd that's it.\n\n137\n00:06:09.550 --> 00:06:11.710\nIt's easy for the client.\n\n138\n00:06:11.710 --> 00:06:14.180\nFor us as assist admin,\nnot so easy, right?\n\n139\n00:06:14.180 --> 00:06:18.090\nConfiguring EZVPN is just as difficult\nas configuring a regular VPN, so\n\n140\n00:06:18.090 --> 00:06:20.716\nwhen I do a point one like\nthis that's temporary I\n\n141\n00:06:20.716 --> 00:06:24.390\nusually don't care about easy VPN and\nI don't use it, right?\n\n142\n00:06:24.390 --> 00:06:27.490\nI just use a regular VPN and\napply that encryption, right?\n\n143\n00:06:27.490 --> 00:06:30.890\nI don't might because the configuration on\nboth ends really is a cut and paste job.\n\n144\n00:06:30.890 --> 00:06:33.520\nYou copy it from one side and paste\nit on the other side and you're done.\n\n145\n00:06:33.520 --> 00:06:34.690\nSo I don't care if I type it in.\n\n146\n00:06:34.690 --> 00:06:37.270\nSo there's different ways\nto go about it On the exam\n\n147\n00:06:37.270 --> 00:06:39.040\nthey don't expect you to\nknow how to configure it.\n\n148\n00:06:39.040 --> 00:06:44.000\nThey just expect you to understand the\ndifference between EZVPN and DMVPN, right?\n\n149\n00:06:44.000 --> 00:06:47.190\nBut for me, I do want to show you\nguys like a practical skill here so\n\n150\n00:06:47.190 --> 00:06:49.380\nwe're gonna apply\nencryption to this tunnel.\n\n151\n00:06:49.380 --> 00:06:50.940\nIt is a lot of commands, right?\n\n152\n00:06:50.940 --> 00:06:51.500\nDon't freak out.\n\n153\n00:06:51.500 --> 00:06:54.140\nYou don't have to memorize these for\nthe exam.\n\n154\n00:06:54.140 --> 00:06:58.170\nBut to get encryption applied to\nthe tunnel here's the basic steps.\n\n155\n00:06:58.170 --> 00:07:01.510\nFirst off,\nyou have to create a VPN policy.\n\n156\n00:07:01.510 --> 00:07:03.875\nWhat we're gonna be using is IPsec.\n\n157\n00:07:03.875 --> 00:07:08.020\nIPsec when it connects it actually\nhas two phases, phase one, phase two.\n\n158\n00:07:08.020 --> 00:07:09.580\nI guess that goes without saying.\n\n159\n00:07:09.580 --> 00:07:12.730\nPhase one is just your initial\nconnection to the other side.\n\n160\n00:07:12.730 --> 00:07:15.300\nSo you connect to your tunnel endpoint and\nsay, hey,\n\n161\n00:07:15.300 --> 00:07:17.300\nI wanna build an encrypted\nsession with you.\n\n162\n00:07:17.300 --> 00:07:20.330\nAnd then you start negotiating, and\nthat's when you go into phase two.\n\n163\n00:07:20.330 --> 00:07:24.540\nAnd phase two is now you say, okay,\nwe've got our encryption standards picked,\n\n164\n00:07:24.540 --> 00:07:26.090\nlet's go ahead and start the tunnel.\n\n165\n00:07:26.090 --> 00:07:28.740\nAnd then there's like this unofficial\nphase three which is where you're moving\n\n166\n00:07:28.740 --> 00:07:29.920\ntraffic, right?\n\n167\n00:07:29.920 --> 00:07:33.900\nSo when I define ipsec I have to\ndefine phase one and phase two.\n\n168\n00:07:33.900 --> 00:07:39.630\nSo for phase one right here, crypto isakmp\nPolicy one, we're creating that policy.\n\n169\n00:07:39.630 --> 00:07:41.400\nAnd you tell it what encryption to use.\n\n170\n00:07:41.400 --> 00:07:44.330\nNow, I'm gonna use triple DES cuz\nmy lab routers kinda stink, but\n\n171\n00:07:44.330 --> 00:07:48.730\nin real life land,\nI'd probably say encryption AES 256.\n\n172\n00:07:48.730 --> 00:07:51.600\nBump up to a stronger level of encryption.\n\n173\n00:07:51.600 --> 00:07:55.700\nAnd then for the hash,\nyou can say hash MD5 or has SHA, S-H-A.\n\n174\n00:07:55.700 --> 00:07:56.970\nI'm gonna go ahead and use SHA.\n\n175\n00:07:58.010 --> 00:08:01.250\nI'm gonna say that I'm using\nan authentication of pre-shared keys.\n\n176\n00:08:01.250 --> 00:08:04.280\nYou could use certificates if you wanted,\nif you had a PKI set up, but\n\n177\n00:08:04.280 --> 00:08:05.710\nI'm gonna use a pre-shared key.\n\n178\n00:08:05.710 --> 00:08:08.450\nAnd I'm gonna do a Diffie Hellman\ngroup 2 key exchange, right?\n\n179\n00:08:08.450 --> 00:08:09.780\nSo that's the key\nexchange we'll use there.\n\n180\n00:08:09.780 --> 00:08:13.100\nAnd then the tunnel lifetime,\n86,400 seconds.\n\n181\n00:08:13.100 --> 00:08:16.390\nSo Every 24 hours,\nit's gonna have to rebuild the tunnel.\n\n182\n00:08:16.390 --> 00:08:18.350\nAll right?\nSo that's all phase one.\n\n183\n00:08:18.350 --> 00:08:19.720\nJust that initial connection.\n\n184\n00:08:19.720 --> 00:08:22.000\nThese are the settings\nthat we need to use.\n\n185\n00:08:22.000 --> 00:08:24.574\nThen we define the phase two side, and\n\n186\n00:08:24.574 --> 00:08:29.890\nthe phase two side is really done way\ndown here with this crypto ipsec profile.\n\n187\n00:08:29.890 --> 00:08:34.300\nSo you've got isakmp for phase one and\nthen you've got what's called ike.\n\n188\n00:08:34.300 --> 00:08:35.250\nI-K-E.\n\n189\n00:08:35.250 --> 00:08:37.610\nWhich is going to be kicking in for\nphase two.\n\n190\n00:08:37.610 --> 00:08:40.570\nAnd down here we tell it, all right,\nwhen you build that session.\n\n191\n00:08:40.570 --> 00:08:42.650\nHere's that security association.\n\n192\n00:08:42.650 --> 00:08:45.370\nThis is the transform to use,\nthis is what encryption we want.\n\n193\n00:08:45.370 --> 00:08:47.980\nAnd we define the transform\nset here to say what we want.\n\n194\n00:08:47.980 --> 00:08:50.840\nAnd I'm just saying use\ntriple des with sha, right?\n\n195\n00:08:50.840 --> 00:08:54.160\nSo I'm encryption and\ndigital signatures, I'm doing ESP.\n\n196\n00:08:54.160 --> 00:08:58.640\nThe encapsulated security payload and\nI'm using encryption.\n\n197\n00:08:58.640 --> 00:09:01.530\nThese are the settings that have to\nmatch on both ends of the tunnel.\n\n198\n00:09:01.530 --> 00:09:04.730\nIf I was using Easy VPN, I'd setup one\nside and the other side would learn it but\n\n199\n00:09:04.730 --> 00:09:07.100\nhere I'm gonna have to set\nit on both sides, all right.\n\n200\n00:09:07.100 --> 00:09:11.332\nSo, all of these commands right here are\nreally just building up the phase one and\n\n201\n00:09:11.332 --> 00:09:12.960\nphase two kind pieces of this.\n\n202\n00:09:12.960 --> 00:09:15.380\nAll right the only thing I\nleft out was this right here.\n\n203\n00:09:15.380 --> 00:09:17.850\nThe crypto isakmp key.\n\n204\n00:09:17.850 --> 00:09:19.706\nI said I was going to use a preshared key,\n\n205\n00:09:19.706 --> 00:09:22.659\nhere I'm specifying what I want\nthat password to be all right and\n\n206\n00:09:22.659 --> 00:09:25.993\nthe password can be whatever you want\nright maybe I want it to be instead of\n\n207\n00:09:25.993 --> 00:09:29.130\nVPN password I want it to be cisco123\nright you can punch that in.\n\n208\n00:09:29.130 --> 00:09:33.253\nAnd then you specify The IP address\nthat you allow this password to be used,\n\n209\n00:09:33.253 --> 00:09:37.710\nbecause you have a different password for\ndifferent IP addresses, right?\n\n210\n00:09:37.710 --> 00:09:41.530\nIf you do all zeros like I did,\nthat just says use that key for everybody.\n\n211\n00:09:41.530 --> 00:09:44.600\nIn fact I could probably just leave\nthis off, and not have it at all, and\n\n212\n00:09:44.600 --> 00:09:47.240\njust say the key is Cisco123,\nand be done with it right.\n\n213\n00:09:47.240 --> 00:09:49.150\nBut if you want to be specific, you know,\n\n214\n00:09:49.150 --> 00:09:51.620\ndifferent nodes might have\ndifferent configuration profiles.\n\n215\n00:09:51.620 --> 00:09:52.870\nSo you can put in an IP right there.\n\n216\n00:09:52.870 --> 00:09:54.600\nAll right?\n\n217\n00:09:54.600 --> 00:09:58.173\nThe last part is probably the easiest\npart as we go into our tunnel and\n\n218\n00:09:58.173 --> 00:10:00.100\nwe apply the VPN to it, right?\n\n219\n00:10:00.100 --> 00:10:02.940\nI called my VPN, the VPN profile.\n\n220\n00:10:02.940 --> 00:10:07.883\nAnd so down here I just say tunnel\nprotection ipsec profile vpn-profile,\n\n221\n00:10:07.883 --> 00:10:13.540\nand that's gonna tell the tunnel to\nuse encryption and kick it on, okay?\n\n222\n00:10:13.540 --> 00:10:17.080\nSo I'm just gonna take this config, and\n\n223\n00:10:17.080 --> 00:10:20.360\nif you look, I don't reference\nany IP addresses in here.\n\n224\n00:10:20.360 --> 00:10:23.850\nI don't reference any subnets or\nanything like that, a host name.\n\n225\n00:10:23.850 --> 00:10:25.940\nThis is a generic configuration.\n\n226\n00:10:25.940 --> 00:10:28.320\nI can use this on both ends of the tunnel.\n\n227\n00:10:28.320 --> 00:10:30.460\nThat's why I don't worry about\neasy VPN is you can just copy and\n\n228\n00:10:30.460 --> 00:10:31.520\npaste this and you're done.\n\n229\n00:10:31.520 --> 00:10:34.530\nSo it's not a big deal to go ahead and\nget it set up this way.\n\n230\n00:10:34.530 --> 00:10:37.880\nAnd it's gonna attach to the tunnel and\napply that encryption.\n\n231\n00:10:37.880 --> 00:10:43.240\nAll right, so\nI'm gonna jump over to my headquarters and\n\n232\n00:10:43.240 --> 00:10:45.900\nI'm gonna start on headquarters,\nI'll just get into my configuration and\n\n233\n00:10:45.900 --> 00:10:48.150\nI'm gonna paste all of that in, right.\n\n234\n00:10:48.150 --> 00:10:52.060\nSo there it goes, it creates the phase\none settings, it sets the password,\n\n235\n00:10:52.060 --> 00:10:55.460\nit creates the phase two settings and\nthen it applies it to the tunnel.\n\n236\n00:10:55.460 --> 00:10:58.750\nOkay and\nthen I start getting error messages.\n\n237\n00:10:58.750 --> 00:11:00.330\nWhat are these error messages?\n\n238\n00:11:00.330 --> 00:11:03.730\nWell, I've turned on encryption for\nmy tunnel and\n\n239\n00:11:03.730 --> 00:11:07.840\nhere we can see received\npacket not an IPSEC packet.\n\n240\n00:11:07.840 --> 00:11:12.030\nI'm getting unencrypted traffic from\nthe branch and I'm rejecting it.\n\n241\n00:11:12.030 --> 00:11:15.600\nSo I'm gonna keep seeing that\nuntil I configure the other side.\n\n242\n00:11:15.600 --> 00:11:17.800\nSo now I can just over to the other side,\nand\n\n243\n00:11:17.800 --> 00:11:19.760\nI can basically do the same exact thing.\n\n244\n00:11:19.760 --> 00:11:24.290\nI'm just going to paste in, oops, I copied\nthe error message, that's not helpful.\n\n245\n00:11:24.290 --> 00:11:26.280\nI can get the error message on my own.\n\n246\n00:11:26.280 --> 00:11:27.655\nSo I'm going to basically take this.\n\n247\n00:11:27.655 --> 00:11:30.825\nSame config and\nI'm just gonna paste it right in here.\n\n248\n00:11:30.825 --> 00:11:31.815\nAll right.\n\n249\n00:11:31.815 --> 00:11:34.825\nApplying the same settings\nto the tunnel on this side.\n\n250\n00:11:34.825 --> 00:11:36.465\nAnd now it's going to look\nout to headquarters and\n\n251\n00:11:36.465 --> 00:11:38.075\nsay hey I wanna build up an IPX session.\n\n252\n00:11:38.075 --> 00:11:40.615\nAnd headquarters is gonna say sure,\nlet's do it.\n\n253\n00:11:40.615 --> 00:11:44.885\nAnd now er took that regular GRE\ntunnel and its encrypting data.\n\n254\n00:11:44.885 --> 00:11:45.635\nAll right?\n\n255\n00:11:45.635 --> 00:11:48.875\nAnd I can see my OSPF\nadjacency just came back up.\n\n256\n00:11:48.875 --> 00:11:50.665\nSo that's a good sign.\n\n257\n00:11:50.665 --> 00:11:52.515\nAnd we can go and verify that.\n\n258\n00:11:52.515 --> 00:11:54.643\nI can do a show ip ospf neighbor and\n\n259\n00:11:54.643 --> 00:11:57.835\nI can see I do have a valid\nneighbor on tunnel zero.\n\n260\n00:11:57.835 --> 00:12:00.840\nI should be able to ping my neighbor,\nright, if I ping over to it.\n\n261\n00:12:02.270 --> 00:12:04.010\nAnd sure enough I am.\n\n262\n00:12:04.010 --> 00:12:05.480\nSo the tunnel is up.\n\n263\n00:12:05.480 --> 00:12:07.240\nBut do I really know it's encrypting?\n\n264\n00:12:07.240 --> 00:12:09.650\nMaybe I'm still sending data unencrypted.\n\n265\n00:12:09.650 --> 00:12:10.950\nI could fire up a sniffer.\n\n266\n00:12:10.950 --> 00:12:13.500\nGrab another laptop or something,\nput it in between and try and\n\n267\n00:12:13.500 --> 00:12:14.710\ncapture some traffic.\n\n268\n00:12:14.710 --> 00:12:17.780\nBut I can also just look at my\nsecurity associations and find out.\n\n269\n00:12:17.780 --> 00:12:21.220\nThere's a few different commands that we\ncan use to see the health of this tunnel.\n\n270\n00:12:21.220 --> 00:12:25.690\nSo, for example,\nI can do show crypto session.\n\n271\n00:12:25.690 --> 00:12:27.440\nThat's probably one of the easiest ones.\n\n272\n00:12:27.440 --> 00:12:30.260\nAnd that's going to show whether you\nhave an encrypted session in place.\n\n273\n00:12:30.260 --> 00:12:33.400\nIf nothing comes back,\nyou're not encrypting, all right?\n\n274\n00:12:33.400 --> 00:12:36.940\nBut if it comes back like this UP-ACTIVE.\n\n275\n00:12:36.940 --> 00:12:39.320\nThat lets me know that\nI am encrypting data.\n\n276\n00:12:39.320 --> 00:12:43.190\nAnd you can see that we've permitted\nsome traffic in-between these hosts.\n\n277\n00:12:43.190 --> 00:12:46.210\nAnd we've got an active\nsecurity association.\n\n278\n00:12:46.210 --> 00:12:47.690\nSo, I can see the session.\n\n279\n00:12:47.690 --> 00:12:49.580\nI can see more data if I wanted.\n\n280\n00:12:49.580 --> 00:12:50.980\nIf we really wanna dig into it.\n\n281\n00:12:50.980 --> 00:12:56.050\nIf I wanna see phase one stuff I\ncan say show crypto isokmp sa.\n\n282\n00:12:57.090 --> 00:12:59.450\nNow I'm looking at that phase\none security association.\n\n283\n00:13:00.580 --> 00:13:02.700\nThe output here is a little weird,\nlike for\n\n284\n00:13:02.700 --> 00:13:07.390\nstate you might see QM IDLE and freak\nout like why isn't this thing running?\n\n285\n00:13:07.390 --> 00:13:08.190\nIt's idle.\n\n286\n00:13:08.190 --> 00:13:10.560\nWell phase one kicks off,\n\n287\n00:13:10.560 --> 00:13:13.880\nand then when you transition to phase two,\nphase one goes idle.\n\n288\n00:13:13.880 --> 00:13:15.290\nSo idle is a good thing.\n\n289\n00:13:15.290 --> 00:13:17.140\nI expect to see idle.\n\n290\n00:13:17.140 --> 00:13:19.330\nWhat I expect to also see\nis this guy right here.\n\n291\n00:13:19.330 --> 00:13:20.400\nStatus active.\n\n292\n00:13:20.400 --> 00:13:20.900\nOkay?\n\n293\n00:13:20.900 --> 00:13:24.150\nThat means that phase one was successful\nand we moved on to phase two.\n\n294\n00:13:24.150 --> 00:13:29.820\nAnd we wanna see phase two,\nwe can say show crypto ipsec SA and\n\n295\n00:13:29.820 --> 00:13:31.970\nwe'll see the full security association.\n\n296\n00:13:31.970 --> 00:13:32.550\nAll right?\n\n297\n00:13:32.550 --> 00:13:34.450\nAnd in here, I can see that it is up.\n\n298\n00:13:34.450 --> 00:13:36.150\nI've got my local ID, my remote ID.\n\n299\n00:13:36.150 --> 00:13:40.070\nI can see the public IP's that\nare connected together Right?\n\n300\n00:13:40.070 --> 00:13:44.140\nVia this tunnel and then we can see\nadditional information about it\n\n301\n00:13:44.140 --> 00:13:45.910\nespecially the fact that it's active.\n\n302\n00:13:45.910 --> 00:13:49.430\nThere's a ton of good information in here\nbut that's a double edged sword, right?\n\n303\n00:13:49.430 --> 00:13:50.900\nCuz it's a ton of information.\n\n304\n00:13:50.900 --> 00:13:52.060\nThere's a lot.\n\n305\n00:13:52.060 --> 00:13:55.088\nBut I can see right through here that I\ndo actually have that connection up and\n\n306\n00:13:55.088 --> 00:13:57.170\nthat it is healthy and working, right?\n\n307\n00:13:57.170 --> 00:14:01.520\nSo now if I go back to my topology here\n\n308\n00:14:01.520 --> 00:14:05.000\nI've got the gre tunnel\nthat's also encrypting.\n\n309\n00:14:05.000 --> 00:14:07.040\nRight, and\neven if I didn't care about gre,\n\n310\n00:14:07.040 --> 00:14:09.110\nthis is how I've know the IP signal too.\n\n311\n00:14:09.110 --> 00:14:13.970\nSo, I've got that secure communication\nbetween these guys and its gonna run fine.\n\n312\n00:14:13.970 --> 00:14:14.880\nBut it's not really optimum.\n\n313\n00:14:14.880 --> 00:14:17.520\nThe router is encrypting and\ndecrypting in software.\n\n314\n00:14:17.520 --> 00:14:19.990\nIt's using its general\npurpose cpu to do it and\n\n315\n00:14:19.990 --> 00:14:23.770\nyou'd be surprised how crappy the general\npurpose cpu is in a lot of routers.\n\n316\n00:14:23.770 --> 00:14:25.960\nIt's not uncommon to crack\nopen a Cisco router and\n\n317\n00:14:25.960 --> 00:14:28.540\nsee an Intel 486 processor in there.\n\n318\n00:14:28.540 --> 00:14:29.730\nI'm not joking, right?\n\n319\n00:14:29.730 --> 00:14:32.470\nBecause routers do most of\ntheir work in hardware, so\n\n320\n00:14:32.470 --> 00:14:34.660\nwhat do they need a crazy fast CPU for?\n\n321\n00:14:34.660 --> 00:14:35.230\nThey don't.\n\n322\n00:14:35.230 --> 00:14:38.060\nSo a lot of times they don't have it and\ntheir encryption suffers.\n\n323\n00:14:38.060 --> 00:14:41.230\nSome routers you can buy a VPN accelerator\nboard to stick in and that'll add\n\n324\n00:14:41.230 --> 00:14:44.810\nthe additional feature sets for it, but\nother routers don't have that and so\n\n325\n00:14:44.810 --> 00:14:48.800\nyou're always better off doing it on an\nASA on a firewall that has the hardware.\n\n326\n00:14:48.800 --> 00:14:49.910\nThen a router that doesn't.\n\n327\n00:14:49.910 --> 00:14:53.280\nBut in a pinch,\nwe've now got a VPN tunnel up, right?\n\n328\n00:14:53.280 --> 00:14:56.730\nWe did GRE and\nwe applied encryption to it and\n\n329\n00:14:56.730 --> 00:14:59.750\nwhile it was kind of a lot of commands,\nit wasn't really that hard.\n\n330\n00:14:59.750 --> 00:15:01.885\nAnd once you've got it done you\njust save that as a template and\n\n331\n00:15:01.885 --> 00:15:02.825\nyou can use it anywhere you need it.\n\n332\n00:15:02.825 --> 00:15:06.685\nYou can whip up these tunnels really fast\nand now you've got that connectivity.\n\n333\n00:15:06.685 --> 00:15:10.265\nNow OSPF is running, I'm sharing routes,\nI'm reaching out to my network and\n\n334\n00:15:10.265 --> 00:15:11.655\nit's all secure.\n\n335\n00:15:11.655 --> 00:15:14.577\nAnd whenever that Metro E connection\ncomes back up, what do I need to do?\n\n336\n00:15:14.577 --> 00:15:15.787\nWell, let me show you.\n\n337\n00:15:15.787 --> 00:15:20.547\nIf I jump back into my system and\nI take branch one.\n\n338\n00:15:20.547 --> 00:15:23.357\nTo simulate a failure I just\nshut that interface off, right.\n\n339\n00:15:23.357 --> 00:15:28.547\nSo I could do a, well,\nif I do a show ip route ospf.\n\n340\n00:15:28.547 --> 00:15:32.157\nI can see I've learned all these\nroutes via tunnel zero, right.\n\n341\n00:15:32.157 --> 00:15:33.518\nBut look at the cost on that tunnel.\n\n342\n00:15:33.518 --> 00:15:36.180\n1001 all right?\n\n343\n00:15:36.180 --> 00:15:40.050\nIf I do a no shutdown to bring\nmy metro e network back up,\n\n344\n00:15:40.050 --> 00:15:43.530\nI'm gonna give that just a second so\nI can rebuild my adjacencies there.\n\n345\n00:15:43.530 --> 00:15:46.110\nI'm starting to see my\nadjacencies come back up and\n\n346\n00:15:46.110 --> 00:15:48.590\nI should get adjacencies with\na couple of different routers.\n\n347\n00:15:48.590 --> 00:15:51.510\nThere we go.\nThere goes branch two and branch three.\n\n348\n00:15:51.510 --> 00:15:55.550\nAnd what's gonna happen is I'm gonna\nstart relearning those routes and\n\n349\n00:15:55.550 --> 00:15:59.970\nit flipped over to ethernet\n0/0 With a cost of 11.\n\n350\n00:15:59.970 --> 00:16:03.490\nOkay, now, when I built that tunnel,\n\n351\n00:16:03.490 --> 00:16:07.650\nthe tunnel that I built was over this\nISP connection, which is ten megabit.\n\n352\n00:16:07.650 --> 00:16:10.050\nMy metro-e connection is ten megabit.\n\n353\n00:16:10.050 --> 00:16:14.140\nA ten megabit line,\nI expect to have a cost of, ten.\n\n354\n00:16:14.140 --> 00:16:15.340\nActually a cost of 100.\n\n355\n00:16:15.340 --> 00:16:16.840\nSo I expect it to have a cost of 100.\n\n356\n00:16:16.840 --> 00:16:19.910\nIf I have two 10 megabit links,\nI should have a cost of 200.\n\n357\n00:16:19.910 --> 00:16:20.690\nWhy is it 1001?\n\n358\n00:16:20.690 --> 00:16:25.340\nAnd that's because GRE tunnels have\na special cost assigned to them\n\n359\n00:16:25.340 --> 00:16:27.210\nto make them less preferable.\n\n360\n00:16:27.210 --> 00:16:29.890\nIf I have a direct connection like this,\nI'm gonna prefer that.\n\n361\n00:16:29.890 --> 00:16:33.560\nI'm gonna want to go that route\nversus bouncing around some tunnel\n\n362\n00:16:33.560 --> 00:16:37.250\nbecause ospf knows the tunnel\nis probably hiding complexity.\n\n363\n00:16:37.250 --> 00:16:40.300\nIt's probably hiding all sorts of stuff\nalong the way that it can't see so\n\n364\n00:16:40.300 --> 00:16:41.560\nit doesn't trust them.\n\n365\n00:16:41.560 --> 00:16:45.170\nSo your GRE tunnels will generally\nget a fairly high cost and\n\n366\n00:16:45.170 --> 00:16:46.890\nOSPF will route around\nthem whenever possible.\n\n367\n00:16:46.890 --> 00:16:50.260\nSo when I restore that metro E connection\nI really don't have to do anything.\n\n368\n00:16:50.260 --> 00:16:51.630\nI can leave the tunnel up.\n\n369\n00:16:51.630 --> 00:16:53.650\nTraffic's not gonna go\nover the tunnel right?\n\n370\n00:16:53.650 --> 00:16:57.780\nIf you look at my OSPF routes\nnone of them go over the tunnel.\n\n371\n00:16:57.780 --> 00:16:59.560\nSo I can leave it there and\njust forget about it.\n\n372\n00:16:59.560 --> 00:17:01.040\nKeep it as a back up.\n\n373\n00:17:01.040 --> 00:17:03.160\nPut it on all your routers if you want.\n\n374\n00:17:03.160 --> 00:17:07.120\nOr if I'm actually done with it,\nI can either delete the tunnel or\n\n375\n00:17:07.120 --> 00:17:08.320\njust shut it down.\n\n376\n00:17:08.320 --> 00:17:09.800\nShutting it down is a little bit easier,\nright?\n\n377\n00:17:09.800 --> 00:17:12.880\nWe can just go into that tunnel\ninterface and shut it down.\n\n378\n00:17:12.880 --> 00:17:13.955\nAnd now, oops.\n\n379\n00:17:13.955 --> 00:17:16.560\n[LAUGH] As I kick myself\nout of my own router.\n\n380\n00:17:16.560 --> 00:17:20.320\nBut now that it's shut down,\nthe tunnel is still there, but\n\n381\n00:17:20.320 --> 00:17:24.960\nwe're not gonna send traffic out that\ntunnel because It shut down right?\n\n382\n00:17:24.960 --> 00:17:27.050\nAnd if I ever need it again\nI can just turn it back on.\n\n383\n00:17:27.050 --> 00:17:31.190\nIf I leave it on, you're still sending\nOSPF hello's over it every ten seconds.\n\n384\n00:17:31.190 --> 00:17:33.090\nYou still maintain that adjacency.\n\n385\n00:17:33.090 --> 00:17:35.730\nSo there is still some activity\nthat is happening there right?\n\n386\n00:17:35.730 --> 00:17:37.210\nSo we don't want to go too crazy and\n\n387\n00:17:37.210 --> 00:17:38.720\nleave these tunnels laying\naround if we don't need them.\n\n388\n00:17:39.930 --> 00:17:42.080\nAll right, but\nthat's basically it right there.\n\n389\n00:17:42.080 --> 00:17:45.120\nThat's how we apply\nencryption to our router,\n\n390\n00:17:45.120 --> 00:17:48.040\nand get that GRE tunnel nice and secure.\n\n391\n00:17:48.040 --> 00:17:50.540\nSo, that's about all\nI've got on VPN tunnel.\n\n392\n00:17:50.540 --> 00:17:54.540\nSo, in our last episode, we saw how\nto build up those GRE tunnels and\n\n393\n00:17:54.540 --> 00:17:58.630\ndo a dynamic multi point GRE tunnel if we\nreally wanted to, and in this episode,\n\n394\n00:17:58.630 --> 00:18:02.990\nwe got that chance to see how to apply\nencryption to the same tunnel and\n\n395\n00:18:02.990 --> 00:18:04.710\nget the security we need.\n\n396\n00:18:04.710 --> 00:18:08.100\nBut that's about all we got for\nGRE Tunnels and VPNS in general.\n\n397\n00:18:08.100 --> 00:18:09.850\nSo that's gonna wrap up this objective.\n\n398\n00:18:09.850 --> 00:18:10.740\nI hope you guys enjoyed it.\n\n399\n00:18:10.740 --> 00:18:13.428\nStay tuned.\nWe've got more CCNP route coming down the\n\n400\n00:18:13.428 --> 00:18:18.350\nroad but for now, signing off for ITProTV\nI'm Don Pezet and I'll see you next time.\n\n401\n00:18:18.350 --> 00:18:24.179\n[MUSIC]\n\n",
          "vimeoId": "138326561"
        }
      ],
      "title": "VPN Technologies"
    },
    {
      "episodes": [
        {
          "description": "Authentication, Authorization, and Accounting (AAA) are all facets that can be utilized in RADIUS and TACACS+ servers and can be used to improve login security on a Cisco IOS router, where RADIUS is great with accounting and authentication and TACACS+ is good with authentication and authorization. When it comes to the particular server utilization, one is usually running Cisco ACS, which runs both RADIUS and TACACS+. Viewers will see demonstrations on how to configure the IOS to use RADIUS, TACACS+ servers to authenticate users and see how to use AAA groups to provide redundancy for the login process.",
          "length": "1865",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/ccnproute/cisco-ccnproute300101-5-1-aaa-090415-1.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/ccnproute/cisco-ccnproute300101-5-1-aaa-090415-1-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/ccnproute/cisco-ccnproute300101-5-1-aaa-090415-1-sm.jpg",
          "title": "AAA",
          "transcript": "WEBVTT\n\n1\n00:00:00.000 --> 00:00:10.743\n[MUSIC]\n\n2\n00:00:10.743 --> 00:00:13.605\nAll right good morning,\ngood afternoon, and good evening and\n\n3\n00:00:13.605 --> 00:00:15.661\nwelcome back to another\nepisode of ITProTV.\n\n4\n00:00:15.661 --> 00:00:19.382\nI'm your host Don Pezet,\nback again with another of CCNP Route.\n\n5\n00:00:19.382 --> 00:00:23.522\nAnd today we're gonna be diving into\na couple of different things, but\n\n6\n00:00:23.522 --> 00:00:25.390\nmostly authentication.\n\n7\n00:00:25.390 --> 00:00:26.550\nAll right.\n\n8\n00:00:26.550 --> 00:00:28.285\nI say a couple of different things,\n\n9\n00:00:28.285 --> 00:00:30.990\ncuz we don't ever really\njust tackle authentication.\n\n10\n00:00:30.990 --> 00:00:32.880\nWe really tackle triple A.\n\n11\n00:00:32.880 --> 00:00:36.220\nAuthentication, authorization and\naccounting.\n\n12\n00:00:36.220 --> 00:00:36.800\nRight?\n\n13\n00:00:36.800 --> 00:00:40.580\nAnd in your studies for the CCNA,\nyou learned about how to connect a Cisco\n\n14\n00:00:40.580 --> 00:00:45.410\nrouter to a radius server to authenticate,\nor to a Tacx plus server to authenticate.\n\n15\n00:00:45.410 --> 00:00:48.190\nWell in this episode,\nI wanna take that same content and\n\n16\n00:00:48.190 --> 00:00:49.910\njust kinda add to it a little bit,\n\n17\n00:00:49.910 --> 00:00:53.810\nwith some extra features that we need\nto be aware of for the CCNP Route exam.\n\n18\n00:00:53.810 --> 00:00:54.430\nAll right?\n\n19\n00:00:54.430 --> 00:00:57.680\nNow the first thing we need to be aware\nof is that there is Tacx Plus and\n\n20\n00:00:57.680 --> 00:00:58.490\nthere's Radius, right?\n\n21\n00:00:58.490 --> 00:01:03.320\nAnd they each kind of have their purposes\nand sometimes we use both, right?\n\n22\n00:01:03.320 --> 00:01:08.880\nRadius is great at accounting and\nit's great at authentication.\n\n23\n00:01:08.880 --> 00:01:12.540\nIt's not so good at authorization, right?\n\n24\n00:01:12.540 --> 00:01:15.750\nLet's back that up, right, make sure,\nthis is a quick refresher,\n\n25\n00:01:15.750 --> 00:01:17.190\nwe understand the difference, right?\n\n26\n00:01:17.190 --> 00:01:20.950\nAuthentication, that's proving\nyou are who you say you are.\n\n27\n00:01:20.950 --> 00:01:23.870\nSo when I say I'm Don Pezet,\nhow do you guys know I'm Don Pezet?\n\n28\n00:01:23.870 --> 00:01:25.690\nThat could be my stage name, right?\n\n29\n00:01:25.690 --> 00:01:27.020\nWho knows who I really am?\n\n30\n00:01:27.020 --> 00:01:28.920\nWell, I need a way to prove that.\n\n31\n00:01:28.920 --> 00:01:30.860\nAnd on a router it might be\na user name and password.\n\n32\n00:01:30.860 --> 00:01:31.960\nIt might be an MD5 hash.\n\n33\n00:01:31.960 --> 00:01:34.240\nIt something that we use\nto authenticate with.\n\n34\n00:01:34.240 --> 00:01:35.390\nAnd then,\n\n35\n00:01:35.390 --> 00:01:39.660\nauthorization, once you know I am who\nI say I am, what am I allowed to do?\n\n36\n00:01:39.660 --> 00:01:42.080\nWhat am I authorized to do in the system?\n\n37\n00:01:42.080 --> 00:01:44.530\nSo something needs to give me\na list of commands or privileges or\n\n38\n00:01:44.530 --> 00:01:47.670\nwhatever that I can use\nto execute on the system.\n\n39\n00:01:47.670 --> 00:01:51.570\nAnd then accounting, we need to keep\na record of what those people did.\n\n40\n00:01:51.570 --> 00:01:53.810\nSo the fact that I logged\nin at a certain time,\n\n41\n00:01:53.810 --> 00:01:57.330\nthe fact that I saved the configuration or\nexited, we need a record of that.\n\n42\n00:01:57.330 --> 00:02:00.430\nSo Radius does great with\nauthentication and accounting.\n\n43\n00:02:00.430 --> 00:02:01.960\nBut authorization, not so much.\n\n44\n00:02:01.960 --> 00:02:04.810\nIn fact, with the Radius, there's really\nonly one thing that we normally hand off\n\n45\n00:02:04.810 --> 00:02:06.420\nwith it, and that's a privilege level.\n\n46\n00:02:06.420 --> 00:02:08.050\nSo I could say, yeah,\nyou're privilege level fifteen.\n\n47\n00:02:08.050 --> 00:02:09.690\nOr you're privilege level twelve.\n\n48\n00:02:09.690 --> 00:02:11.520\nBut then it's up to\nthe router to interpret that,\n\n49\n00:02:11.520 --> 00:02:13.810\nto say,\nPrivilege level twelve gets to do this.\n\n50\n00:02:13.810 --> 00:02:16.290\nPrivilege level twelve gets to do that,\nright?\n\n51\n00:02:16.290 --> 00:02:19.263\nBut that's it.\nTacx plus, on the other hand,\n\n52\n00:02:19.263 --> 00:02:24.265\nis good at authentication,\nit's great at authorization,\n\n53\n00:02:24.265 --> 00:02:28.397\nand it's [SOUND] you know\nmediocre on accounting.\n\n54\n00:02:28.397 --> 00:02:30.500\nSo Tacx plus doesn't do great logging.\n\n55\n00:02:30.500 --> 00:02:31.070\nRight.\n\n56\n00:02:31.070 --> 00:02:33.725\nBut as far as authorization\nit could be very specific.\n\n57\n00:02:33.725 --> 00:02:37.550\nTacx Plus doesn't say, oh yeah,\nyou're privilege level 12th.\n\n58\n00:02:37.550 --> 00:02:40.520\nIt says, here's a list of commands\nyou're allowed to execute\".\n\n59\n00:02:40.520 --> 00:02:42.420\nAnd so you can be very, very granular.\n\n60\n00:02:42.420 --> 00:02:44.650\nYou can run this command,\nbut not that command.\n\n61\n00:02:44.650 --> 00:02:48.230\nYou can run,\nshow interface f a 0 slash 12, but\n\n62\n00:02:48.230 --> 00:02:51.650\nyou can't run show\ninterface f a 0 slash 13.\n\n63\n00:02:51.650 --> 00:02:53.730\nYou can be that granular with Tacx Plus.\n\n64\n00:02:53.730 --> 00:02:54.830\nIt's really powerful.\n\n65\n00:02:54.830 --> 00:02:55.518\nAll right.\n\n66\n00:02:55.518 --> 00:02:59.160\nNow nobody runs a dedicated\nTacx plus server.\n\n67\n00:02:59.160 --> 00:03:01.980\nWhat you're normally running is Cisco ACS.\n\n68\n00:03:01.980 --> 00:03:04.250\nCisco ACSs are access and Control Server.\n\n69\n00:03:04.250 --> 00:03:08.670\nAnd Cisco ACS runs both Radius and Tacx.\n\n70\n00:03:08.670 --> 00:03:11.750\nIt runs Radius for\nauthentication and accounting, and\n\n71\n00:03:11.750 --> 00:03:13.240\nit runs Tacx for authorization.\n\n72\n00:03:13.240 --> 00:03:16.030\nAnd so you're actually using a mixture\nof them, and you can mix and\n\n73\n00:03:16.030 --> 00:03:18.130\nmatch to your heart's\ncontent inside of Cisco.\n\n74\n00:03:18.130 --> 00:03:20.910\nBecause it lets you define\nthose from the command line.\n\n75\n00:03:20.910 --> 00:03:22.170\nYou can set what you use for what.\n\n76\n00:03:22.170 --> 00:03:24.570\nAnd that's what Cisco ACS does.\n\n77\n00:03:24.570 --> 00:03:27.610\nIf your not using Cisco ACS,\nyou likely just use Radius, right?\n\n78\n00:03:27.610 --> 00:03:29.740\nThat's what most people do\nis they just use Radius, and\n\n79\n00:03:29.740 --> 00:03:32.860\nthey use privilege levels to control\nyour access from there, okay?\n\n80\n00:03:32.860 --> 00:03:34.980\nSo different solutions for\ndifferent environments.\n\n81\n00:03:34.980 --> 00:03:37.460\nJust be aware of that difference,\nall right?\n\n82\n00:03:37.460 --> 00:03:40.630\nNow as far as the configuration,\nwhether your doing Tacx or Radius,\n\n83\n00:03:40.630 --> 00:03:42.170\nthey are actually configured the same way.\n\n84\n00:03:42.170 --> 00:03:44.240\nSo we have to just learn\none configuration,\n\n85\n00:03:44.240 --> 00:03:45.942\nthat makes life a little bit easier for\nus.\n\n86\n00:03:45.942 --> 00:03:48.510\nBut there's a few features\nwe want to point out.\n\n87\n00:03:48.510 --> 00:03:53.040\nSo in CCNA you learn how to connect\na router to a radius server.\n\n88\n00:03:53.040 --> 00:03:56.420\nBut it's rare that you have\njust one radius server.\n\n89\n00:03:56.420 --> 00:03:58.110\nYou normally have more than one.\n\n90\n00:03:58.110 --> 00:04:00.950\nAnd so we need to actually get our\nsystem configured to be redundant so\n\n91\n00:04:00.950 --> 00:04:03.190\nif one radius server fails,\nwe jump over to another one and\n\n92\n00:04:03.190 --> 00:04:04.650\neverything's fine, all right.\n\n93\n00:04:04.650 --> 00:04:05.500\nAnd that's a little different.\n\n94\n00:04:05.500 --> 00:04:07.270\nA lot of people don't think about that.\n\n95\n00:04:07.270 --> 00:04:10.770\nIf your radius server fails, if we get\ndisconnected from that radius server,\n\n96\n00:04:10.770 --> 00:04:12.730\nhow do you log into your router?\n\n97\n00:04:12.730 --> 00:04:13.960\nMaybe you can't.\n\n98\n00:04:13.960 --> 00:04:16.350\nSo there's two things we can\nconfigure to protect for that.\n\n99\n00:04:16.350 --> 00:04:17.700\nRight?\n\n100\n00:04:17.700 --> 00:04:19.600\nOne is we can configure\nmultiple radius servers.\n\n101\n00:04:19.600 --> 00:04:21.320\nThat's one way to protect.\n\n102\n00:04:21.320 --> 00:04:26.100\nAnd then two, we can configure what's\ncalled local database failback.\n\n103\n00:04:26.100 --> 00:04:28.400\nLocal database failback\nbasically just says,\n\n104\n00:04:28.400 --> 00:04:31.210\nif I can't connect to a radius server,\nhere's some local\n\n105\n00:04:31.210 --> 00:04:35.450\nusers in my local database that I'll\ndefine that we can use as a just in case.\n\n106\n00:04:35.450 --> 00:04:37.610\nIf the radius servers\nare up we'll use them.\n\n107\n00:04:37.610 --> 00:04:41.020\nBut if the radius servers are down,\nthen we'll use the local database.\n\n108\n00:04:41.020 --> 00:04:43.230\nAnd that's what I wanna\nshow you guys today.\n\n109\n00:04:43.230 --> 00:04:44.536\nIs how to get that set up.\n\n110\n00:04:44.536 --> 00:04:47.929\nHow to have redundant radius servers or\nTacx for that matter, and\n\n111\n00:04:47.929 --> 00:04:50.630\nhow to have that local database failback.\n\n112\n00:04:50.630 --> 00:04:53.810\nSo let's start off here on my headquarters\nrouter, and I want to get my headquarters\n\n113\n00:04:53.810 --> 00:04:57.180\nrouter configured to use, I'll just\nuse radius authentication here, right.\n\n114\n00:04:57.180 --> 00:05:00.100\nIf you want to set it up for tacx,\njust any where I use the word radius,\n\n115\n00:05:00.100 --> 00:05:02.790\nchange it out for tacx, right and\nthat's it, the configurations the same.\n\n116\n00:05:03.950 --> 00:05:07.550\nSo, the first thing I need to do is,\nI need to get in and\n\n117\n00:05:07.550 --> 00:05:09.310\nbasically define some\nof my radius servers.\n\n118\n00:05:09.310 --> 00:05:11.900\nI need to let the router know\nabout the radius servers.\n\n119\n00:05:11.900 --> 00:05:13.530\nNow, when you connect to a radius server,\n\n120\n00:05:13.530 --> 00:05:15.890\nyou need to give it the IP\naddress of the radius server.\n\n121\n00:05:15.890 --> 00:05:18.460\nYou need to give it a secret key, right.\n\n122\n00:05:18.460 --> 00:05:21.600\nTo talk to a radio server you have to have\na password and it's called your key, and\n\n123\n00:05:21.600 --> 00:05:22.480\nso, we need to define that.\n\n124\n00:05:23.480 --> 00:05:26.878\nOptionally, we might need to\ndefine our port numbers, right.\n\n125\n00:05:26.878 --> 00:05:30.790\nRadius and tacx both have some predefined\nport numbers that most people use, but\n\n126\n00:05:30.790 --> 00:05:33.600\nif you change them you can\nmanipulate that too, all right.\n\n127\n00:05:33.600 --> 00:05:36.100\nSo, I'm gonna start off by\ntelling it about my server.\n\n128\n00:05:36.100 --> 00:05:40.420\nSo in my config,\nI'm gonna say radius-server and\n\n129\n00:05:40.420 --> 00:05:41.990\nI'm gonna start to tell it.\n\n130\n00:05:41.990 --> 00:05:44.120\nLet's see on mine, it's not too heavy.\n\n131\n00:05:45.330 --> 00:05:47.210\nOh [LAUGH] So,my radius server is failing.\n\n132\n00:05:47.210 --> 00:05:48.710\nWhy is this command not here?\n\n133\n00:05:48.710 --> 00:05:50.200\nI know this command is here.\n\n134\n00:05:50.200 --> 00:05:52.470\nAnd I'm getting unrecognized\ncommand all right, why is that?\n\n135\n00:05:52.470 --> 00:05:56.420\nWell more than likely I'm in\nthe old model of Triple A.\n\n136\n00:05:56.420 --> 00:05:59.600\nAll right,\nTriple A on the original Cisco routers,\n\n137\n00:05:59.600 --> 00:06:01.020\nyou didn't really have Triple A, right?\n\n138\n00:06:01.020 --> 00:06:04.535\nYou had just local authentication and\nit didn't ask for a username.\n\n139\n00:06:04.535 --> 00:06:06.675\nWhen you went to log in, it just asked for\na password and that was it.\n\n140\n00:06:06.675 --> 00:06:09.745\nRight, that was the original way security\nwas configured on Cisco routers,\n\n141\n00:06:09.745 --> 00:06:10.915\nway back, right?\n\n142\n00:06:12.065 --> 00:06:16.285\nWe're talking way back,\nmid 80s, mid 1980s maybe.\n\n143\n00:06:16.285 --> 00:06:17.835\nInto the early 1990s.\n\n144\n00:06:17.835 --> 00:06:23.020\nEven in the early 1990s we had Triple A,\nthough, so this is really a long time ago.\n\n145\n00:06:23.020 --> 00:06:26.530\nWell, if we're gonna use a radio server,\nwe need a username and a password.\n\n146\n00:06:26.530 --> 00:06:29.870\nAnd that's the new model of Triple A,\nand apparently I'm not in the new model.\n\n147\n00:06:29.870 --> 00:06:34.540\nSo I'm gonna issue a quick command here,\njust Triple A new-model, okay?\n\n148\n00:06:34.540 --> 00:06:39.210\nSo now the system knows that, don't just\nask for a password, we need a username and\n\n149\n00:06:39.210 --> 00:06:40.120\na password.\n\n150\n00:06:40.120 --> 00:06:42.630\nAnd we might be doing\nthe authentication locally, or\n\n151\n00:06:42.630 --> 00:06:45.520\nwe might doing the authentication\nagainst an external system.\n\n152\n00:06:45.520 --> 00:06:48.480\nAnd now I've got my radius server command.\n\n153\n00:06:48.480 --> 00:06:49.340\nRight.\nSo that command\n\n154\n00:06:49.340 --> 00:06:53.310\nthat wasn't there a moment ago, now it is,\nbecause I'm in Triple A new model.\n\n155\n00:06:53.310 --> 00:06:55.560\nRight, that command right there,\nwant to make sure we run that.\n\n156\n00:06:55.560 --> 00:06:58.160\nIf you want to go back to the old model,\nyou just say no triple A new model and\n\n157\n00:06:58.160 --> 00:07:00.010\nit puts you back to the old model.\n\n158\n00:07:00.010 --> 00:07:00.660\nAll right.\n\n159\n00:07:00.660 --> 00:07:03.450\nSo now I can tell about my radius server,\nand as you guys just saw,\n\n160\n00:07:03.450 --> 00:07:06.310\nthere's one or two options when\nconfiguring a radius server.\n\n161\n00:07:06.310 --> 00:07:07.740\nThere's a lot of different stuff.\n\n162\n00:07:07.740 --> 00:07:10.040\n>> But there's really only a couple\nthat we actually need to set,\n\n163\n00:07:10.040 --> 00:07:11.680\nthat we need to get put in place.\n\n164\n00:07:11.680 --> 00:07:15.320\nSo the first kinda key\nthing is to specify a host.\n\n165\n00:07:16.390 --> 00:07:18.910\nAnd so the host, this is the server\nthat I'm gonna connect to,\n\n166\n00:07:18.910 --> 00:07:24.100\nis gonna have an IP and so\nI'll put in, this one 172.16.16.0.200.\n\n167\n00:07:24.100 --> 00:07:29.090\nNow I need to provide a key to connect\nto that host, and I got two choices.\n\n168\n00:07:29.090 --> 00:07:32.532\nI can set the key right here\non this server itself, right.\n\n169\n00:07:32.532 --> 00:07:35.130\nSo we've got the key value right there.\n\n170\n00:07:35.130 --> 00:07:37.320\nOr I could set a global key.\n\n171\n00:07:37.320 --> 00:07:39.880\nIf I'm connecting to five\ndifferent radio servers, and\n\n172\n00:07:39.880 --> 00:07:42.500\nI'm using the same key\non all five of them.\n\n173\n00:07:42.500 --> 00:07:44.870\nI can specify it globally,\nand that'll work.\n\n174\n00:07:44.870 --> 00:07:46.030\nOr I can specify it right here.\n\n175\n00:07:46.030 --> 00:07:47.780\nThis would override a global value.\n\n176\n00:07:47.780 --> 00:07:49.460\nI don't have a global\nvalue to override here, so\n\n177\n00:07:49.460 --> 00:07:50.420\nit's just gonna apply to this one.\n\n178\n00:07:50.420 --> 00:07:51.868\nSo I am going to set that key.\n\n179\n00:07:51.868 --> 00:07:52.536\nAll right.\n\n180\n00:07:52.536 --> 00:07:54.260\nNow you might be saying to yourself,\n\n181\n00:07:54.260 --> 00:07:57.480\nDon isn't it a bad security practice\nto use the same key everywhere.\n\n182\n00:07:57.480 --> 00:07:58.482\nWell, yes and no.\n\n183\n00:07:58.482 --> 00:07:59.032\nAll right.\n\n184\n00:07:59.032 --> 00:08:02.271\nYes if I was using all of my routers,\nall with the same key,\n\n185\n00:08:02.271 --> 00:08:03.740\nto all my radius servers.\n\n186\n00:08:04.980 --> 00:08:08.282\nBut know if each router had it's own key.\n\n187\n00:08:08.282 --> 00:08:12.031\nIf I have twenty routers and each\nrouter has it's own key so this router,\n\n188\n00:08:12.031 --> 00:08:16.087\nHQ, has it's own key, and then, yes,\nit connects to three different radius\n\n189\n00:08:16.087 --> 00:08:20.030\nservers with that same key but\nthe key is tied to just this router.\n\n190\n00:08:20.030 --> 00:08:21.860\nSo now if this router gets compromised,\nI can go in and\n\n191\n00:08:21.860 --> 00:08:25.210\nvalidate that one key on the three\nRADIUS servers, or however many I have.\n\n192\n00:08:25.210 --> 00:08:26.540\nAnd it'll turn that off and stop it.\n\n193\n00:08:26.540 --> 00:08:28.940\nBut all of my other routers\nwill continue to function.\n\n194\n00:08:28.940 --> 00:08:31.940\nSo, you don't wanna share\na key between routers.\n\n195\n00:08:31.940 --> 00:08:35.730\nBut it's okay to share a key here, between\nmultiple RADIUS servers to connect.\n\n196\n00:08:35.730 --> 00:08:39.640\nBut if you want really tight security, you\nuse different keys for every router and\n\n197\n00:08:39.640 --> 00:08:41.410\ndifferent keys for each radius server.\n\n198\n00:08:41.410 --> 00:08:45.970\nJust becomes an administrative\nhassle though so just beware that.\n\n199\n00:08:45.970 --> 00:08:48.520\nOnce I do that, there's my password,\nand I've got a set.\n\n200\n00:08:48.520 --> 00:08:50.340\nNow I've defined a radius server.\n\n201\n00:08:50.340 --> 00:08:53.985\nIf I wanna do that global key that I\nwas mentioning, you would just say,\n\n202\n00:08:53.985 --> 00:08:55.760\nradius-server.\n\n203\n00:08:55.760 --> 00:09:02.290\nKey and then specify a key value there and\nmaybe I say cisco321 or whatever.\n\n204\n00:09:02.290 --> 00:09:06.500\nThat's my new global key and any other\nserver I define without a key will just\n\n205\n00:09:06.500 --> 00:09:09.700\nuse this global key, so if I have\nanother radius server at 172.16.0.201 or\n\n206\n00:09:09.700 --> 00:09:12.430\nwherever we can specify that in.\n\n207\n00:09:12.430 --> 00:09:15.870\nIf we're gonna have\nredundant radius servers,\n\n208\n00:09:15.870 --> 00:09:19.470\nwe probably want one on\na different network somewhere.\n\n209\n00:09:19.470 --> 00:09:22.940\nAnd so I might have one out there.\n\n210\n00:09:22.940 --> 00:09:26.770\nSo I can specify each one with\nindividual keys or a group key.\n\n211\n00:09:28.830 --> 00:09:32.950\nSo if I look at me config,\nthere they are defined.\n\n212\n00:09:32.950 --> 00:09:35.430\nNow Look how they're\nentered in the config.\n\n213\n00:09:35.430 --> 00:09:37.840\nIt's a little bit different\nthan I'd type it, isn't it?\n\n214\n00:09:37.840 --> 00:09:40.090\nI didn't bother with typing a port number.\n\n215\n00:09:40.090 --> 00:09:42.450\nAnd so it went with the default ports.\n\n216\n00:09:42.450 --> 00:09:46.000\nAuthentication on port 1645 and\naccounting on port 1646.\n\n217\n00:09:46.000 --> 00:09:48.415\nThose Radius defaults.\n\n218\n00:09:48.415 --> 00:09:52.295\nIf you change those port numbers then\nyou can go in here and edit those.\n\n219\n00:09:52.295 --> 00:09:55.885\nYou just run the command just like they're\nshowing it where you do off dash port and\n\n220\n00:09:55.885 --> 00:09:56.985\naccounting dash port.\n\n221\n00:09:56.985 --> 00:09:59.037\nNow when I did a question mark\nup here it didn't show up.\n\n222\n00:09:59.037 --> 00:10:03.277\nGo up, and that's because these have to be\nentered in before the password otherwise\n\n223\n00:10:03.277 --> 00:10:05.657\nit assumes the command is\npart of the password right.\n\n224\n00:10:05.657 --> 00:10:09.317\nSo that's why I didn't see it when I did a\nquestion mark up there, but if I had done\n\n225\n00:10:09.317 --> 00:10:12.937\nthe question mark before typing pass\nthe key then we would have seen it, right?\n\n226\n00:10:12.937 --> 00:10:14.817\nSo we can define those ports as we need.\n\n227\n00:10:14.817 --> 00:10:18.710\nRight, so what's important here is\nI've defined three radius servers.\n\n228\n00:10:18.710 --> 00:10:23.460\nSo I've got three servers, and when I set\nmy system up, I want it to be redundant.\n\n229\n00:10:23.460 --> 00:10:26.050\nI want it to use these three servers.\n\n230\n00:10:26.050 --> 00:10:26.740\nOkay?\n\n231\n00:10:26.740 --> 00:10:29.620\nI probably have one I prefer,\none that I want to hit first, and\n\n232\n00:10:29.620 --> 00:10:32.740\nthe others as backups, but I want to\nmake it where if one of these fails,\n\n233\n00:10:32.740 --> 00:10:34.550\nI jump to the other ones.\n\n234\n00:10:34.550 --> 00:10:37.910\nThis is where we get a little different\nthan what we saw at the CCNA level.\n\n235\n00:10:37.910 --> 00:10:41.250\nAt the CCNA level we just go and turn on\nauthentication and tell it to use radius.\n\n236\n00:10:41.250 --> 00:10:45.160\nIt's going to reach out an use that first\nserver and it's going to go like that.\n\n237\n00:10:45.160 --> 00:10:47.940\nIf we want to get more advanced,\nwe can create radius groups.\n\n238\n00:10:47.940 --> 00:10:52.260\nWe can group the servers together and\nwe can specify which servers to use.\n\n239\n00:10:52.260 --> 00:10:54.200\nI might have two that\nare in headquarters and\n\n240\n00:10:54.200 --> 00:10:56.940\none that is in a disaster recovery site so\nI want to split it off.\n\n241\n00:10:56.940 --> 00:11:01.290\nOr I can group them all together and\nwe can put them in the order that we want.\n\n242\n00:11:01.290 --> 00:11:06.270\nSo to create a group, what I need\nto do is say triple A group and\n\n243\n00:11:06.270 --> 00:11:08.390\nthen tell it what kind of\ngroup I'm creating, right?\n\n244\n00:11:08.390 --> 00:11:11.950\nAnd I'm creating a server group so\nnothing too special there.\n\n245\n00:11:11.950 --> 00:11:14.520\nAnd then I can create a radius or\na tackaxe group.\n\n246\n00:11:14.520 --> 00:11:18.560\nI'm gonna create a radius group and\nI just need to give it a name, right?\n\n247\n00:11:18.560 --> 00:11:22.110\nAnd so I'll call these the itprotv-radius.\n\n248\n00:11:22.110 --> 00:11:22.850\nRight?\n\n249\n00:11:22.850 --> 00:11:25.210\nSo these are gonna be the radius\nservers that are part of ITProTV.\n\n250\n00:11:26.500 --> 00:11:31.110\nNow, I need to tell it which of my servers\nup here I want to be in the group.\n\n251\n00:11:31.110 --> 00:11:33.920\nSo I have to have already\ndefined my servers.\n\n252\n00:11:33.920 --> 00:11:35.900\nAnd then I'm gonna add the servers,\nhere, into the group.\n\n253\n00:11:35.900 --> 00:11:37.270\nAnd so I'll just add each one.\n\n254\n00:11:37.270 --> 00:11:38.900\nI'll just say, server.\n\n255\n00:11:38.900 --> 00:11:41.590\nand then specify the IP address\nof the server that I'm adding.\n\n256\n00:11:41.590 --> 00:11:45.260\nI don't have to specify a key, I don't\nhave to specify anything else like that,\n\n257\n00:11:45.260 --> 00:11:48.060\nI just have to come in and specify the IP.\n\n258\n00:11:48.060 --> 00:11:50.610\nIt'll get the rest from\nthe commands menu up above, right?\n\n259\n00:11:50.610 --> 00:11:53.070\nWe're adding these servers to that group.\n\n260\n00:11:53.070 --> 00:11:56.320\nAnd now when I authenticate,\nI can authenticate against that group and\n\n261\n00:11:56.320 --> 00:11:57.300\nit will use each of those servers.\n\n262\n00:11:57.300 --> 00:11:59.610\nIt will use them in the order\nthat I put them in.\n\n263\n00:11:59.610 --> 00:12:01.770\nRight, but you can actually\nadd a little bit more to it,\n\n264\n00:12:01.770 --> 00:12:04.080\nlike I can modify those ports numbers and\nstuff here if we want.\n\n265\n00:12:04.080 --> 00:12:07.870\nSo technically, we could have skipped\nthat other step and gone right here but\n\n266\n00:12:07.870 --> 00:12:10.560\nusually we already entering the servers\nand just punch it in right here.\n\n267\n00:12:10.560 --> 00:12:12.050\nIn fact,\nif you do it the other way around,\n\n268\n00:12:12.050 --> 00:12:15.360\nit will actually complain a little\nbit saying the server is not defined.\n\n269\n00:12:15.360 --> 00:12:17.490\nAnd then you can go and\nadd it in after the fact.\n\n270\n00:12:17.490 --> 00:12:20.370\nSo entering it in the order that\nI did kind of avoids that error.\n\n271\n00:12:21.940 --> 00:12:22.580\nAlright.\n\n272\n00:12:22.580 --> 00:12:26.200\nSo I define my servers, and\nnow I define the group.\n\n273\n00:12:26.200 --> 00:12:28.930\nNow all I have to do is tell my system,\n\n274\n00:12:28.930 --> 00:12:32.110\nhey when somebody goes to log in,\nthese are the servers I want you to hit,\n\n275\n00:12:32.110 --> 00:12:35.300\nand I want you to use this group\nto authenticate them, alright.\n\n276\n00:12:35.300 --> 00:12:37.810\nSo we need to tile this to our system.\n\n277\n00:12:37.810 --> 00:12:39.870\nNow I'm gonna have a little\nbit of a problem here.\n\n278\n00:12:39.870 --> 00:12:42.140\nMy problem is these aren't real servers.\n\n279\n00:12:42.140 --> 00:12:43.830\nI just put in fake IP's, right?\n\n280\n00:12:43.830 --> 00:12:46.220\nSo if my system reaches out to\nthese servers what's gonna happen?\n\n281\n00:12:46.220 --> 00:12:47.950\nIt's gonna happen time out, okay.\n\n282\n00:12:47.950 --> 00:12:51.910\nWell the default intervals\nare a little bit on the long side.\n\n283\n00:12:51.910 --> 00:12:55.910\nIt's going to try three times over 30\nseconds to contact the first server.\n\n284\n00:12:55.910 --> 00:12:59.120\nAll right, if it fails, then it'll go to\nthe second one and try three times for\n\n285\n00:12:59.120 --> 00:13:03.140\n30 seconds, and if that fails it'll go to\nthe third one and retry for 30 seconds.\n\n286\n00:13:03.140 --> 00:13:07.160\nSo, in other words, it's gonna try for\na minute and a half to authenticate me.\n\n287\n00:13:07.160 --> 00:13:09.040\nSo if I try and authenticate and\nit fails, fails,\n\n288\n00:13:09.040 --> 00:13:13.020\nfails, I'm gonna have to wait a minute and\na half, and I'm an impatient kinda guy, so\n\n289\n00:13:13.020 --> 00:13:14.080\nI don't wanna wait like that.\n\n290\n00:13:14.080 --> 00:13:15.420\nSo I'm gonna adjust those intervals.\n\n291\n00:13:15.420 --> 00:13:16.810\nAnd you might wanna do this in real life,\n\n292\n00:13:16.810 --> 00:13:20.070\ncuz you don't want and end-user waiting\na minute and a half to login, right?\n\n293\n00:13:20.070 --> 00:13:22.100\nSo you might wanna adjust\nthese on your system too.\n\n294\n00:13:22.100 --> 00:13:23.380\nAnd we tweak that a little bit.\n\n295\n00:13:23.380 --> 00:13:24.280\nI'm gonna do it right here.\n\n296\n00:13:25.330 --> 00:13:30.020\nIf I get out of the group I\ncan do radius-server, and\n\n297\n00:13:30.020 --> 00:13:35.320\nthen in here we can define\nthe dead Criteria, okay.\n\n298\n00:13:35.320 --> 00:13:39.520\nThe dead criteria is how\nlong do we have to wait\n\n299\n00:13:39.520 --> 00:13:42.940\nbefore we decide that a server\nis unreachable, right.\n\n300\n00:13:42.940 --> 00:13:45.580\nAnd that default of 30 seconds\nto me is just too long.\n\n301\n00:13:45.580 --> 00:13:47.300\nI'm gonna make that shorter.\n\n302\n00:13:47.300 --> 00:13:49.280\nSo I want to make it\nsomething really small.\n\n303\n00:13:49.280 --> 00:13:53.350\nIt's actually not 30 seconds,\nit's ten seconds but it tries three times.\n\n304\n00:13:53.350 --> 00:13:55.040\nWhich is what makes it thirty seconds.\n\n305\n00:13:55.040 --> 00:14:00.010\nRight so I might set my dead criteria to\nsomething really small like two seconds.\n\n306\n00:14:00.010 --> 00:14:03.870\nI should get a response back from that\nradius server in two seconds shouldn't I?\n\n307\n00:14:03.870 --> 00:14:04.940\nOr maybe five seconds.\n\n308\n00:14:04.940 --> 00:14:07.650\nRight, it should be fairly quick.\n\n309\n00:14:07.650 --> 00:14:11.400\nAnd then you can come in and\ntell it how many times to retry.\n\n310\n00:14:11.400 --> 00:14:16.630\nAnd oh, sorry, I need to say dead-criteria\ntime and then I'll say 5 seconds.\n\n311\n00:14:16.630 --> 00:14:19.810\nAnd then I can say tires and\nhow many times to retry.\n\n312\n00:14:19.810 --> 00:14:23.050\nnow in real life You probably want\nto retry at least twice, right?\n\n313\n00:14:23.050 --> 00:14:25.960\nBecause maybe that first packet just\nhappened to get lost, and so go ahead and\n\n314\n00:14:25.960 --> 00:14:27.010\nretry again.\n\n315\n00:14:27.010 --> 00:14:28.760\nBut you probably don't\nwant to try three times.\n\n316\n00:14:28.760 --> 00:14:31.690\nIt gets a little excessive, especially\nif you have other radio servers.\n\n317\n00:14:31.690 --> 00:14:34.770\nSo you might lower the number to say,\nhey, if the first server fails,\n\n318\n00:14:34.770 --> 00:14:36.350\nafter one try just jump to the second one.\n\n319\n00:14:36.350 --> 00:14:38.060\nAnd then jump to the third one.\n\n320\n00:14:38.060 --> 00:14:40.830\nSo the way mine's set Five seconds for\nthe first server,\n\n321\n00:14:40.830 --> 00:14:42.810\nif I don't get a response back,\nI go to the second one.\n\n322\n00:14:42.810 --> 00:14:44.900\nFive seconds for the second server,\nif I don't get a response back,\n\n323\n00:14:44.900 --> 00:14:47.190\nI go to the third one,\nfive seconds for it.\n\n324\n00:14:47.190 --> 00:14:50.440\nAfter fifteen seconds, I'm gonna know\nwhether I'm going to get in or not.\n\n325\n00:14:50.440 --> 00:14:52.780\nAnd that's a much more\nreasonable time in my opinion.\n\n326\n00:14:52.780 --> 00:14:54.620\nSo, I'm going to set that.\n\n327\n00:14:54.620 --> 00:14:57.280\nNow, you might have noticed when\nI was doing that configuration,\n\n328\n00:14:57.280 --> 00:15:00.030\nthat there was one other option in there,\n\n329\n00:15:00.030 --> 00:15:03.920\nand I doubt it will show up on the exam\nbut it can create some confusion.\n\n330\n00:15:03.920 --> 00:15:06.200\nWhat I was setting was dead criteria.\n\n331\n00:15:06.200 --> 00:15:08.990\nRight, but there's also dead time.\n\n332\n00:15:08.990 --> 00:15:10.700\nAnd dead time is a little bit different.\n\n333\n00:15:10.700 --> 00:15:16.190\nWhen we detect that a server is dead what\nhappens the next time somebody logs in?\n\n334\n00:15:16.190 --> 00:15:17.840\nDo we go threw that same process?\n\n335\n00:15:17.840 --> 00:15:18.600\nWell you can.\n\n336\n00:15:18.600 --> 00:15:21.170\nYou can have it where it goes through tha\nsame process where every single user.\n\n337\n00:15:21.170 --> 00:15:25.430\nBut if you're processing thousands of\nlogins per minute or per hour or whatever.\n\n338\n00:15:25.430 --> 00:15:27.640\nThat's a lot of retry's\nthat are kind of waisted.\n\n339\n00:15:27.640 --> 00:15:30.820\nSo what you can do is you can\nsay if a server goes down,\n\n340\n00:15:30.820 --> 00:15:33.660\njust stop trying it for a while.\n\n341\n00:15:33.660 --> 00:15:36.030\nAnd then skip past it and\nmove on to the other servers.\n\n342\n00:15:36.030 --> 00:15:39.740\nAnd so here we can set a dead time,\nhow long we kind of skip that server.\n\n343\n00:15:39.740 --> 00:15:42.750\nAnd so I might say hey, if a server\ngoes down, I got three of the things so\n\n344\n00:15:42.750 --> 00:15:47.100\nI'll just go to one of the other ones and\nI'll hold this one down for ten minutes.\n\n345\n00:15:47.100 --> 00:15:50.620\nand so now every 10 minutes,\nI'll retry that server.\n\n346\n00:15:52.190 --> 00:15:54.190\nIf it's not back up I'll\nwait another 10 minutes.\n\n347\n00:15:54.190 --> 00:15:56.580\nSo for 10 minutes,\ni'll just use my backup servers.\n\n348\n00:15:56.580 --> 00:15:59.472\nThis kind of reduces that load\nof constantly waiting and\n\n349\n00:15:59.472 --> 00:16:01.756\nit shrinks the time outs for\nyour end users.\n\n350\n00:16:01.756 --> 00:16:05.475\nSo not every user is having to\nwait that five second interval for\n\n351\n00:16:05.475 --> 00:16:07.101\nthat first server to fail.\n\n352\n00:16:07.101 --> 00:16:09.402\nThey might skip the first server and\ngo to the second one, and\n\n353\n00:16:09.402 --> 00:16:10.540\nit helps them minimize that.\n\n354\n00:16:10.540 --> 00:16:13.100\nSo, that's called dead time, and\nit's not a bad idea to set that.\n\n355\n00:16:13.100 --> 00:16:16.650\nSo now I'll hold that server down for\nten minutes.\n\n356\n00:16:16.650 --> 00:16:19.730\nNow I just need to tell my system\nto actually use this stuff, right?\n\n357\n00:16:19.730 --> 00:16:24.180\nSo to do that, I can come in and\nI can say, Aaa authentication,\n\n358\n00:16:24.180 --> 00:16:26.520\nand then I can tell it\nwhat I'm authenticating.\n\n359\n00:16:26.520 --> 00:16:29.220\nI might be authenticating logins Right,\nand\n\n360\n00:16:29.220 --> 00:16:34.710\nonce I tell it I'm authenticating\nlogins now I need to tell it a list.\n\n361\n00:16:34.710 --> 00:16:37.450\nNow, this is a list for how I'm gonna\nbe using this authentication and\n\n362\n00:16:37.450 --> 00:16:40.940\nif i just want to do logins for\nthe router it's the default list, okay.\n\n363\n00:16:40.940 --> 00:16:45.810\nSo by default, when I authenticate a user\nconnecting to this what am I gonna use?\n\n364\n00:16:45.810 --> 00:16:48.190\nAnd I can say group And\n\n365\n00:16:48.190 --> 00:16:51.020\nthen I can specify whatever group\nname it is that I specified.\n\n366\n00:16:51.020 --> 00:16:55.380\nIf I say radius, it's gonna use any\nradius server to find my system.\n\n367\n00:16:55.380 --> 00:16:58.060\nI wanna do the group so\nit's just the ones that I wanted.\n\n368\n00:16:58.060 --> 00:17:01.485\nI called mine itprotv-radius.\n\n369\n00:17:01.485 --> 00:17:02.930\nAll right.\n\n370\n00:17:02.930 --> 00:17:06.680\nNow if I stop here,\nwhen somebody goes to log in,\n\n371\n00:17:06.680 --> 00:17:08.520\nthe default is to log into\nthese radius servers.\n\n372\n00:17:08.520 --> 00:17:09.910\nThat's what it's gonna try.\n\n373\n00:17:09.910 --> 00:17:11.290\nOkay?\n\n374\n00:17:11.290 --> 00:17:12.900\nIf they fail, what happens?\n\n375\n00:17:14.010 --> 00:17:14.850\nThey can't log in.\n\n376\n00:17:14.850 --> 00:17:15.910\nThat's it.\n\n377\n00:17:15.910 --> 00:17:17.440\nSo if I put it in like this and\n\n378\n00:17:17.440 --> 00:17:22.290\nI press enter and\nI get disconnected from my radio servers.\n\n379\n00:17:22.290 --> 00:17:24.130\nI've just locked myself out of the router.\n\n380\n00:17:24.130 --> 00:17:26.190\nI might not notice it right away\nbecause I'm already logged in, right.\n\n381\n00:17:26.190 --> 00:17:27.050\nIt's not gonna kick me out.\n\n382\n00:17:27.050 --> 00:17:31.100\nBut if I disconnect and\nreconnect I may not be able to log in.\n\n383\n00:17:31.100 --> 00:17:34.610\nAnd so this is where the local\ndatabase fail back comes in.\n\n384\n00:17:34.610 --> 00:17:38.270\nAfter defining that group, you'll see\nwhere you can add some other key words.\n\n385\n00:17:38.270 --> 00:17:40.170\nThese are alternate\nforms of authentication.\n\n386\n00:17:40.170 --> 00:17:42.080\nSo I can list more than one way.\n\n387\n00:17:42.080 --> 00:17:44.150\nMy primary is group radius.\n\n388\n00:17:44.150 --> 00:17:46.780\nAnd if I can contact\neven one radius server,\n\n389\n00:17:46.780 --> 00:17:48.470\nthat's what I'm going to use, right?\n\n390\n00:17:48.470 --> 00:17:50.410\nAnd all the others will get ignored.\n\n391\n00:17:50.410 --> 00:17:53.560\nBut if all of my radius servers are down.\n\n392\n00:17:53.560 --> 00:17:54.680\nLet's set a backup.\n\n393\n00:17:54.680 --> 00:17:58.860\nSome backup so we don't get locked out\nof the servers if it gets disconnected.\n\n394\n00:17:58.860 --> 00:18:03.050\nSo I can come in and I can say that I\nwanna do it with the enable password.\n\n395\n00:18:03.050 --> 00:18:04.280\nMaybe I can't get to radius so\n\n396\n00:18:04.280 --> 00:18:06.540\nI'll ask somebody to get in if\nthey have the enable password.\n\n397\n00:18:06.540 --> 00:18:08.730\nBut more commonly we use\nthe local database and\n\n398\n00:18:08.730 --> 00:18:12.150\nthere's two different ways to\nuse it local and local case.\n\n399\n00:18:12.150 --> 00:18:15.910\nLocal means we have a username and\npassword that we provide and\n\n400\n00:18:15.910 --> 00:18:17.859\nthe username is not case\nsensitive the password is.\n\n401\n00:18:18.970 --> 00:18:21.620\nAll right.\nLocal case means the username and\n\n402\n00:18:21.620 --> 00:18:24.030\nthe password are both case sensitive,\nall right?\n\n403\n00:18:24.030 --> 00:18:27.840\nThat's if we wanna be like truly,\nyou know, UNIX compatible or whatever.\n\n404\n00:18:27.840 --> 00:18:30.710\nMost people don't care about though,\nso they just use local.\n\n405\n00:18:30.710 --> 00:18:33.430\nSo the username can be capital or\nlowercase, doesn't matter.\n\n406\n00:18:33.430 --> 00:18:36.180\nBut the password is still case sensitive,\nokay?\n\n407\n00:18:36.180 --> 00:18:38.660\nNow I've got local database failback.\n\n408\n00:18:40.000 --> 00:18:42.890\nNow local database failback is only\neffective if you have at least one user\n\n409\n00:18:42.890 --> 00:18:46.400\naccount, so maybe I'll create\na username called \"Admin,\" and\n\n410\n00:18:46.400 --> 00:18:50.260\nI'll give it a privilege level and\nI'll set it secret to cisco123.\n\n411\n00:18:50.260 --> 00:18:52.640\nSo that I've got that set up.\n\n412\n00:18:52.640 --> 00:18:56.410\nNow, if somebody tries to connect into my\nsystem, they can provide a user name and\n\n413\n00:18:56.410 --> 00:18:59.090\na password,\nit's gonna run through group radius, and\n\n414\n00:18:59.090 --> 00:19:02.380\nif it contact even one server,\nthat's what it's gonna use.\n\n415\n00:19:02.380 --> 00:19:05.220\nIf they try and log in as Admin Cisco\none two three, it's gonna look to\n\n416\n00:19:05.220 --> 00:19:08.350\nthe radius service for that, and\nif it doesn't exist it's gonna block them.\n\n417\n00:19:08.350 --> 00:19:09.840\nThey won't be able to get it.\n\n418\n00:19:09.840 --> 00:19:13.700\nBut if all three radio servers are dead,\nthen it'll go to local and\n\n419\n00:19:13.700 --> 00:19:14.950\nthat admin account will work.\n\n420\n00:19:14.950 --> 00:19:17.610\nBut otherwise the admin account\nis not gonna work, right?\n\n421\n00:19:17.610 --> 00:19:20.670\nBecause I tied it to the default for\nlogin.\n\n422\n00:19:20.670 --> 00:19:21.170\nRight?\n\n423\n00:19:21.170 --> 00:19:22.340\nSo I could test that, right?\n\n424\n00:19:22.340 --> 00:19:26.000\nI could jump over to another branch and\nI've got telnet turned on on this thing,\n\n425\n00:19:26.000 --> 00:19:27.700\nso I'll use that.\n\n426\n00:19:27.700 --> 00:19:31.800\nTelnet to my headquarters router and\n\n427\n00:19:31.800 --> 00:19:34.210\nwhen I go to connect it's asking for\nthat username and password.\n\n428\n00:19:34.210 --> 00:19:34.900\nBefore I log in,\n\n429\n00:19:34.900 --> 00:19:40.080\nactually let's change this up a little\nbit, let me go back to that branch.\n\n430\n00:19:40.080 --> 00:19:41.790\nI'm just gonna fail it out.\n\n431\n00:19:41.790 --> 00:19:43.780\nI wanna turn on debugging, so\n\n432\n00:19:43.780 --> 00:19:47.020\nthat we can actually see the process\nthat's gonna happen in the background.\n\n433\n00:19:47.020 --> 00:19:51.240\nSo, on headquarters,\nif I do a debug radius,\n\n434\n00:19:51.240 --> 00:19:55.250\nit's gonna turn on radius debugging and\nthen I'll see this activity happening.\n\n435\n00:19:55.250 --> 00:19:58.130\nSo, if I jump over to branch three and\nI try and Telnet in, Right,\n\n436\n00:19:58.130 --> 00:20:00.370\nI'm getting a user name and password.\n\n437\n00:20:00.370 --> 00:20:03.760\nAnd if I look at headquarters,\nI actually see it's asking for\n\n438\n00:20:03.760 --> 00:20:07.070\na radius user name because\nthat is what we provided.\n\n439\n00:20:07.070 --> 00:20:11.025\nAnd so if I try to log in as admin and\nwhatever password.\n\n440\n00:20:11.025 --> 00:20:13.835\nPassword it is that I try to provide it.\n\n441\n00:20:13.835 --> 00:20:15.215\nWe're gonna send it.\n\n442\n00:20:15.215 --> 00:20:16.685\nAnd see how it's pausing?\n\n443\n00:20:16.685 --> 00:20:19.605\nNow, as an end user I don't really know\nwhat's happening here, it's just pausing.\n\n444\n00:20:19.605 --> 00:20:21.795\nBut on the back end it's\ntrying those radio servers.\n\n445\n00:20:21.795 --> 00:20:26.005\nIt's trying server one, server two, server\nthree, and as it moves through each one,\n\n446\n00:20:26.005 --> 00:20:26.995\nthey're failing.\n\n447\n00:20:26.995 --> 00:20:32.400\nAnd finally, it's gonna fail And\nthen go over to the local database.\n\n448\n00:20:32.400 --> 00:20:34.440\nNow I put in the wrong\npassword on purpose, so\n\n449\n00:20:34.440 --> 00:20:37.120\nwe actually see that back\nhere on headquarters.\n\n450\n00:20:37.120 --> 00:20:41.630\nOn headquarters I can see it\nreaching through each one right?\n\n451\n00:20:41.630 --> 00:20:44.530\nSo here it starts by reaching\nout to 172.16.0.200 alright?\n\n452\n00:20:44.530 --> 00:20:46.410\nAnd that one failed.\n\n453\n00:20:46.410 --> 00:20:50.230\nSo then it reached out to 172.16.0.201 And\n\n454\n00:20:50.230 --> 00:20:54.580\nthat one failed, and then it reached out\nto 172.17.0.200, there's my redundancy,\n\n455\n00:20:54.580 --> 00:20:57.380\nit moves through each one and\ntheir failing.\n\n456\n00:20:57.380 --> 00:21:02.930\nAnd then, we get that the group had no\nactive radius servers available and\n\n457\n00:21:02.930 --> 00:21:05.510\nso radius failed altogether, all right.\n\n458\n00:21:05.510 --> 00:21:08.590\nNow, I don't see the fail back\nhere because radius is technically\n\n459\n00:21:08.590 --> 00:21:09.950\ndone at that point.\n\n460\n00:21:09.950 --> 00:21:13.200\nAfter that, it goes back to AAA, right?\n\n461\n00:21:13.200 --> 00:21:16.390\nAnd so if I want to see all of it,\nI need to turn on debugging for AAA.\n\n462\n00:21:16.390 --> 00:21:22.220\nAnd so I can get that turned on, and\nAAA is a part of this process too, right?\n\n463\n00:21:22.220 --> 00:21:25.830\nAAA is using radius,\nI was just debugging the radius side.\n\n464\n00:21:25.830 --> 00:21:29.060\nSo now if I go back to the branch, and\nI try and tell it again, and this time,\n\n465\n00:21:29.060 --> 00:21:30.250\nI'll use the right password.\n\n466\n00:21:32.290 --> 00:21:34.010\nAlright, I got in.\n\n467\n00:21:34.010 --> 00:21:35.110\nRight, I logged in.\n\n468\n00:21:35.110 --> 00:21:37.100\nNow it happened really fast.\n\n469\n00:21:37.100 --> 00:21:40.800\nAnd the reason is those three\nradius servers all failed.\n\n470\n00:21:40.800 --> 00:21:42.960\nSo they all got a dead time\nof ten minutes set to them so\n\n471\n00:21:42.960 --> 00:21:44.840\nit didn't even bother trying them again.\n\n472\n00:21:44.840 --> 00:21:48.930\nRadius failed,\nit switched over to local fail back and\n\n473\n00:21:48.930 --> 00:21:50.910\nnow i'm able to get in with that account.\n\n474\n00:21:50.910 --> 00:21:54.570\nSo if I take a look at my headquarters\nrouter, the debugging, right.\n\n475\n00:21:54.570 --> 00:21:58.800\nWe hit radius, you see radius kicking in\nfor asking for that username and password.\n\n476\n00:21:58.800 --> 00:22:01.950\nBut at the end of the day,\nthere were no radius servers available.\n\n477\n00:22:01.950 --> 00:22:04.200\nThey all have their dead\ntime set right now.\n\n478\n00:22:04.200 --> 00:22:06.460\nAnd if I wait ten minutes\nthey'll wake back up.\n\n479\n00:22:06.460 --> 00:22:10.620\nBut when that failed, that's when\nradius sent us back to using local.\n\n480\n00:22:10.620 --> 00:22:13.170\nSee up here, pick method list default.\n\n481\n00:22:13.170 --> 00:22:15.890\nAnd default said to use radius first and\nthen to use local, so\n\n482\n00:22:15.890 --> 00:22:17.840\nthat's kinda the process\nthat it went through.\n\n483\n00:22:17.840 --> 00:22:21.900\nBut at this point, we've got it up,\nand we've got redundant law again.\n\n484\n00:22:21.900 --> 00:22:26.850\nNow, I did it here with the default list,\nwe don't have to do it that way.\n\n485\n00:22:26.850 --> 00:22:30.780\nYou can create login policies for\nall sorts of different things.\n\n486\n00:22:30.780 --> 00:22:34.670\nMaybe I just want to use radius\nwhen people access the web server\n\n487\n00:22:34.670 --> 00:22:35.720\non the router.\n\n488\n00:22:35.720 --> 00:22:39.790\nBut if they're Telnetting or SSHing in, I\nwant them to just use the local database.\n\n489\n00:22:39.790 --> 00:22:41.500\nYou can get really specific like that.\n\n490\n00:22:41.500 --> 00:22:44.710\nYou just need to create\ncustom authentication lists.\n\n491\n00:22:44.710 --> 00:22:46.310\nAnd that's not a hard thing to do.\n\n492\n00:22:46.310 --> 00:22:50.700\nI did the default there, but\nlet's run with this HTTP example.\n\n493\n00:22:50.700 --> 00:22:54.290\nFor HTTP What I might want\nto do is create a new list.\n\n494\n00:22:54.290 --> 00:22:55.310\nAnd so I can say aaa, whoop.\n\n495\n00:22:55.310 --> 00:22:57.156\nLet me get into config first.\n\n496\n00:22:57.156 --> 00:23:01.256\naaa, authentication, login.\n\n497\n00:23:01.256 --> 00:23:03.720\nAnd then last time I said default.\n\n498\n00:23:03.720 --> 00:23:04.920\nThis time I'm gonna create a list.\n\n499\n00:23:04.920 --> 00:23:08.350\nI'm gonna call it http- Auth.\n\n500\n00:23:08.350 --> 00:23:13.170\nSo I'm creating a group,\nI mean a list, called http-auth.\n\n501\n00:23:13.170 --> 00:23:17.470\nAnd I'm gonna say when somebody\nauthenticates this way their gonna use\n\n502\n00:23:17.470 --> 00:23:22.260\ngroup itprotv-radius,\nthat's what I called it.\n\n503\n00:23:24.490 --> 00:23:27.490\nAnd I'm not gonna do local\nfailback on this one.\n\n504\n00:23:28.580 --> 00:23:31.800\nIf all the radius servers are down,\nI can't get to the webpage of this router.\n\n505\n00:23:31.800 --> 00:23:32.800\nAm I locked out?\n\n506\n00:23:32.800 --> 00:23:34.240\nNo.\nI just can't get to the webpage.\n\n507\n00:23:34.240 --> 00:23:36.200\nI can still SSH in, right?\n\n508\n00:23:36.200 --> 00:23:37.980\nCause I'm just gonna use this for\nthe website.\n\n509\n00:23:37.980 --> 00:23:39.740\nSo I'm not gonna do fail back on this one.\n\n510\n00:23:39.740 --> 00:23:41.900\nEither you authenticate with radius or\nyou don't get in.\n\n511\n00:23:41.900 --> 00:23:43.110\nAll right?\n\n512\n00:23:43.110 --> 00:23:46.270\nYou know you might be doing this for\nVPN connections, that kind of stuff and\n\n513\n00:23:46.270 --> 00:23:48.270\nso you want to kind of tailor that and\nsay,\n\n514\n00:23:48.270 --> 00:23:54.020\nthere is no fall back, All right,\nthen I need to attach it to http, right?\n\n515\n00:23:54.020 --> 00:23:56.855\nSo the way we do that is up to\nthe service, so you've gotta go and\n\n516\n00:23:56.855 --> 00:23:59.382\nfigure out how your service\ntaps into authentication.\n\n517\n00:23:59.382 --> 00:24:00.654\nWith http, it's done like this.\n\n518\n00:24:00.654 --> 00:24:06.416\nWe say, Ip http authentication And then\nyou can tell it to use triple A because,\n\n519\n00:24:06.416 --> 00:24:10.160\nby default,\nit does use the local database.\n\n520\n00:24:10.160 --> 00:24:14.710\nAnd then I can say login-authentication\nand I can specify the group.\n\n521\n00:24:14.710 --> 00:24:15.970\nI'm gonna point it to http-auth,\n\n522\n00:24:15.970 --> 00:24:20.670\nthat's this list that I made right here,\nthat tells it to use group radius.\n\n523\n00:24:20.670 --> 00:24:25.170\nAnd once I run that, now when somebody\naccess the web page to this router.\n\n524\n00:24:25.170 --> 00:24:27.490\nIt's gonna use the radio\nservers to authenticate them.\n\n525\n00:24:27.490 --> 00:24:30.030\nNow this is far easier\nto configure in the SDM.\n\n526\n00:24:30.030 --> 00:24:33.330\nSo if you've got the GUI for\nyour router pulled up you can jump in and\n\n527\n00:24:33.330 --> 00:24:34.450\nset it really easy there.\n\n528\n00:24:34.450 --> 00:24:36.570\nBut from the command line it's\nnot that bad either, right.\n\n529\n00:24:36.570 --> 00:24:40.430\nWe can just kind of set it and now it's\nin place and it's not doing fail back.\n\n530\n00:24:40.430 --> 00:24:41.790\nI can always go and add it, too.\n\n531\n00:24:41.790 --> 00:24:44.500\nBut that just shows you how you\ncan create custom authentication\n\n532\n00:24:44.500 --> 00:24:46.540\nlists to really achieve whatever\nit is you're trying to do.\n\n533\n00:24:48.030 --> 00:24:48.740\nAll right.\n\n534\n00:24:48.740 --> 00:24:50.870\nNow if you're configuring\nthis in the real world.\n\n535\n00:24:50.870 --> 00:24:52.530\nIt can be a little challenging.\n\n536\n00:24:52.530 --> 00:24:54.820\nEspecially if you're dealing\nwith Active Directory servers.\n\n537\n00:24:54.820 --> 00:24:56.530\nThat are serving as your radius boxes.\n\n538\n00:24:56.530 --> 00:24:57.680\nIf you're doing Cisco ACS.\n\n539\n00:24:57.680 --> 00:24:59.320\nThis stuff works out of the box.\n\n540\n00:24:59.320 --> 00:25:00.170\nReally no big deal.\n\n541\n00:25:00.170 --> 00:25:00.780\nRight.\n\n542\n00:25:00.780 --> 00:25:03.690\nBut if you're using third party radio\nservers it can really be a challenging.\n\n543\n00:25:03.690 --> 00:25:06.550\nSo, remember a couple of troubleshooting\ncommands that'll help you out.\n\n544\n00:25:06.550 --> 00:25:09.340\nDebug radius, that's a big one, right?\n\n545\n00:25:09.340 --> 00:25:12.190\nDebug triple A login,\nthat's another one that's helpful.\n\n546\n00:25:12.190 --> 00:25:15.430\nDebug triple A, I think there's a debug\ntriple A packets is another one that can\n\n547\n00:25:15.430 --> 00:25:16.800\nshow you some really good data.\n\n548\n00:25:16.800 --> 00:25:18.550\nSo those are some really good ones.\n\n549\n00:25:18.550 --> 00:25:21.440\nBut there's also a test\ncommand that's really handy.\n\n550\n00:25:21.440 --> 00:25:24.810\nIf you're trying to test that\nauthentication, how did I test it?\n\n551\n00:25:24.810 --> 00:25:28.420\nWell I jumped over to another router,\nand I did SSH or Telnet or whatever.\n\n552\n00:25:28.420 --> 00:25:31.160\nBut what if you're working on a router\nthat's on a network you're not\n\n553\n00:25:31.160 --> 00:25:32.850\nconnected to?\n\n554\n00:25:32.850 --> 00:25:37.190\nYou're somehow maybe dialed in via an\nauxiliary modem into the router to work on\n\n555\n00:25:37.190 --> 00:25:39.030\nit, and you're not on the same network.\n\n556\n00:25:39.030 --> 00:25:40.710\nHow can you test that authentication?\n\n557\n00:25:40.710 --> 00:25:42.720\nWell there's actually a command for that.\n\n558\n00:25:42.720 --> 00:25:46.580\nIf you jump to the command line for\nyour router, get out of config,\n\n559\n00:25:46.580 --> 00:25:50.350\nthis is just in the regular exect prompt,\nthere's a test command.\n\n560\n00:25:50.350 --> 00:25:53.500\nAnd test can test all\nsorts of crazy things.\n\n561\n00:25:53.500 --> 00:25:57.130\nBut what I care about is testing AAA\nright there at the very beginning.\n\n562\n00:25:57.130 --> 00:25:58.410\nSo you can test it out.\n\n563\n00:25:58.410 --> 00:26:02.420\nAnd you can jump in and\nsee whether this stuff is working or not.\n\n564\n00:26:02.420 --> 00:26:08.300\nSo I can say test triple a and\nthen you can specify your group.\n\n565\n00:26:08.300 --> 00:26:11.350\nAnd so I can say test triple a group and\n\n566\n00:26:11.350 --> 00:26:15.440\nI can say radius is I just wanna\ntest any of my radius servers.\n\n567\n00:26:15.440 --> 00:26:18.710\nOr I can get really specific and\nsay test group itprotv.\n\n568\n00:26:19.820 --> 00:26:21.690\nRadius, the group that I made for HTTP.\n\n569\n00:26:21.690 --> 00:26:22.800\nAll right?\n\n570\n00:26:22.800 --> 00:26:27.440\nAnd from here you can tell it a particular\nserver if you want or you can test a user.\n\n571\n00:26:27.440 --> 00:26:31.920\nSo I could say, I wanna test dpezet and\nthen you can specify what the password is\n\n572\n00:26:31.920 --> 00:26:34.200\nand so maybe my password's cisco123,\nall right?\n\n573\n00:26:34.200 --> 00:26:35.620\nSo I'm saying test that authentication.\n\n574\n00:26:35.620 --> 00:26:38.460\nDon't make me have to go get\nan external client and try this out.\n\n575\n00:26:38.460 --> 00:26:40.950\nJust you do it yourself,\ntest it for me, alright?\n\n576\n00:26:40.950 --> 00:26:43.720\nAnd it's gonna test, and\nit's gonna run an In, all right?\n\n577\n00:26:43.720 --> 00:26:44.830\nNow, incomplete, what did I?\n\n578\n00:26:44.830 --> 00:26:48.320\nOh, I left something important off,\nalright?\n\n579\n00:26:48.320 --> 00:26:53.025\nStarting with Cisco IOS 15, I think\nit was 15.0, it might have been 15.1,\n\n580\n00:26:53.025 --> 00:26:55.085\nthere's actually a new code base for\nauthentication.\n\n581\n00:26:56.405 --> 00:26:58.385\nThe authentication,\nit looks a little bit different.\n\n582\n00:26:58.385 --> 00:27:00.615\nOn my system here,\nI'm doing the legacy code base.\n\n583\n00:27:00.615 --> 00:27:02.155\nSo, on the new one,\n\n584\n00:27:02.155 --> 00:27:05.805\nthe only real difference is the servers\nare kinda listed a little differently.\n\n585\n00:27:05.805 --> 00:27:09.505\nWay back here,\nwhen I configured my radius servers,\n\n586\n00:27:09.505 --> 00:27:11.535\ngoodness it is way back here isn't it?\n\n587\n00:27:11.535 --> 00:27:15.420\nWay back when I defined the radius\nservers, I defined them and\n\n588\n00:27:15.420 --> 00:27:17.490\nset their key and set their ports.\n\n589\n00:27:17.490 --> 00:27:20.590\nAnd I did it all in one line.\n\n590\n00:27:20.590 --> 00:27:21.110\nRight?\n\n591\n00:27:21.110 --> 00:27:22.440\nThat's the legacy way of doing it.\n\n592\n00:27:22.440 --> 00:27:24.240\nDefining it all in one line.\n\n593\n00:27:24.240 --> 00:27:24.970\nAlright?\n\n594\n00:27:24.970 --> 00:27:29.430\nOn some of the really latest and\ngreatest stuff, on the 15.1 iOS and\n\n595\n00:27:29.430 --> 00:27:33.150\nnewer, you'll actually type\nradio stash server at a host.\n\n596\n00:27:33.150 --> 00:27:35.570\nAnd you'll press enter and\nit'll take you to a new prompt.\n\n597\n00:27:35.570 --> 00:27:38.840\nAnd then you say,\nkey this or host that, and\n\n598\n00:27:38.840 --> 00:27:42.110\nyou define each one in like a sub-prompt.\n\n599\n00:27:42.110 --> 00:27:43.440\nThat's the new code base.\n\n600\n00:27:43.440 --> 00:27:47.190\nSo when you go to test this is asking me\nwhether I wanna do this to the easy way or\n\n601\n00:27:47.190 --> 00:27:50.470\nthe new code base way, and so I needed\nto specify that right here when I do\n\n602\n00:27:50.470 --> 00:27:53.620\nthe task, and it's based on how\nyou can figure your router.\n\n603\n00:27:53.620 --> 00:27:56.600\nAnd even on the new ones, you can\nstill configure them the legacy ways,\n\n604\n00:27:56.600 --> 00:27:59.000\nyou can go either way and\nthat's why it gives you the choice.\n\n605\n00:27:59.000 --> 00:28:02.270\nSo I can say test it with legacy and\ngive it a shot.\n\n606\n00:28:02.270 --> 00:28:04.510\nAnd here I see it's going in and\ntesting that log in and\n\n607\n00:28:04.510 --> 00:28:06.710\nseeing if we can get in or not.\n\n608\n00:28:06.710 --> 00:28:07.450\nOkay.\n\n609\n00:28:07.450 --> 00:28:11.160\nAnd then we can test it doing\nthe new code base, if we want it.\n\n610\n00:28:11.160 --> 00:28:12.390\nAnd it'll try it that way.\n\n611\n00:28:12.390 --> 00:28:14.440\nAnd we can see whether it goes through or\nnot.\n\n612\n00:28:14.440 --> 00:28:15.090\nOkay?\n\n613\n00:28:15.090 --> 00:28:19.540\nAnd from mine, you'll see the legacy\ndidn't really a whole heck of a lot here.\n\n614\n00:28:19.540 --> 00:28:22.180\nBut the new code base gave me\nvery good detailed information.\n\n615\n00:28:22.180 --> 00:28:23.580\nActually, I still have\ndebugging turned on,\n\n616\n00:28:23.580 --> 00:28:25.720\nwhich is where a lot of this\ninformation's coming from.\n\n617\n00:28:25.720 --> 00:28:27.550\nAnd I'm kind of stuck in\na time out right now.\n\n618\n00:28:27.550 --> 00:28:30.530\nSo, it's going through and\nit's trying each of these servers again.\n\n619\n00:28:30.530 --> 00:28:33.520\nAnd it's doing those five\nsecond time outs, right?\n\n620\n00:28:33.520 --> 00:28:35.700\nAs it moves through each one,\nto try and get connected.\n\n621\n00:28:35.700 --> 00:28:38.500\nSo Part of that is coming from my debug.\n\n622\n00:28:38.500 --> 00:28:40.890\nAnd then other parts of it\nare coming from the test command.\n\n623\n00:28:40.890 --> 00:28:43.600\nThe test command will normally just\nrespond back with a, you know,\n\n624\n00:28:43.600 --> 00:28:44.860\na connected or not connected, right?\n\n625\n00:28:44.860 --> 00:28:45.740\nAn allowed or denied.\n\n626\n00:28:45.740 --> 00:28:48.450\nIf you have debugging turned on, though,\nyou can see the whole process, and\n\n627\n00:28:48.450 --> 00:28:49.760\nit's great for troubleshooting.\n\n628\n00:28:49.760 --> 00:28:52.710\nAnd so it's going through, and\nit's trying all those servers again.\n\n629\n00:28:52.710 --> 00:28:55.390\nAnd apparently, it's gonna keep\nretrying past my retry interval.\n\n630\n00:28:55.390 --> 00:28:56.050\nSo.\n\n631\n00:28:56.050 --> 00:28:58.630\nI guess the new code is ignoring\nit because I didn't put in\n\n632\n00:28:58.630 --> 00:29:00.250\nthe interval that way.\n\n633\n00:29:00.250 --> 00:29:02.220\nThese are just two different\nways we can go in and\n\n634\n00:29:02.220 --> 00:29:05.010\ntest that information and\nsee what happens.\n\n635\n00:29:05.010 --> 00:29:07.320\nUnfortunately, there is not\na good way to stop this.\n\n636\n00:29:07.320 --> 00:29:09.450\nOnce the test runs,\nit has to run to completion.\n\n637\n00:29:09.450 --> 00:29:10.510\nThere we go.\n\n638\n00:29:10.510 --> 00:29:13.770\nAnd I see that response\nthat came back of fail.\n\n639\n00:29:13.770 --> 00:29:18.000\nIf I turn off my debug and\nrun those same tests again,\n\n640\n00:29:18.000 --> 00:29:21.660\nthe legacy test is the right one for me\nbecause that's how I configured my system.\n\n641\n00:29:21.660 --> 00:29:24.530\nAnd so I just get real quick,\nno authoritative response from any server.\n\n642\n00:29:24.530 --> 00:29:26.050\nAnd that's that.\n\n643\n00:29:26.050 --> 00:29:30.140\nBut if I do the new code,\nI didn't set mine up the new code way, and\n\n644\n00:29:30.140 --> 00:29:32.360\nso that's why that test took so\nmuch longer.\n\n645\n00:29:32.360 --> 00:29:33.980\nAnd we just wait.\n\n646\n00:29:33.980 --> 00:29:36.800\nAnd the final response was just\nthat little message, fail.\n\n647\n00:29:36.800 --> 00:29:37.920\nThat's all that's gonna come back.\n\n648\n00:29:37.920 --> 00:29:39.130\nI miss all the details.\n\n649\n00:29:39.130 --> 00:29:41.730\nSo coupling this with\ndebugging is really important.\n\n650\n00:29:41.730 --> 00:29:42.250\nAll right?\n\n651\n00:29:42.250 --> 00:29:46.740\nSo remember debugging triple\nA log in debug radius and\n\n652\n00:29:46.740 --> 00:29:49.590\nthen the test command that we\ncan use to test the groups and\n\n653\n00:29:49.590 --> 00:29:52.130\nsee whether or not they work all right\nfrom the router and not have to rely\n\n654\n00:29:52.130 --> 00:29:56.750\non a third party system All right, well,\nthat's about all I've got on this.\n\n655\n00:29:56.750 --> 00:30:00.330\nIf you haven't actually set Radius up\nbefore, I definitely encourage you to jump\n\n656\n00:30:00.330 --> 00:30:03.270\nover and check out the episode on\nthe CCNA side where we configure it.\n\n657\n00:30:03.270 --> 00:30:06.580\nI think we authenticated on there against\na Microsoft active directory server,\n\n658\n00:30:06.580 --> 00:30:08.890\nactually in the show, so\nit's a great way to see it.\n\n659\n00:30:08.890 --> 00:30:11.820\nYeah, there's a number of different\nthings you can authenticate against.\n\n660\n00:30:11.820 --> 00:30:14.130\nCisco ACS is obviously\nwhat they recommend.\n\n661\n00:30:14.130 --> 00:30:15.460\nThat's their authentication server.\n\n662\n00:30:15.460 --> 00:30:18.270\nAnd I'll tell you guys, if you haven't\nworked with an ACS, it works really well.\n\n663\n00:30:18.270 --> 00:30:21.490\nIt's a great product and you can get a\ndemo from Cisco to actually try it out for\n\n664\n00:30:21.490 --> 00:30:22.500\nyour own studies.\n\n665\n00:30:22.500 --> 00:30:24.080\nYou know, it's worth exploring.\n\n666\n00:30:24.080 --> 00:30:27.290\nIf you're gonna do the security\ntrack like CCNA security.\n\n667\n00:30:27.290 --> 00:30:28.130\nYou probably need to do that.\n\n668\n00:30:28.130 --> 00:30:29.640\nGet a little more exposure to it.\n\n669\n00:30:29.640 --> 00:30:32.740\nBut on the router side, we just need\nto know how to define the group,\n\n670\n00:30:32.740 --> 00:30:34.600\npoint it to servers and be done.\n\n671\n00:30:34.600 --> 00:30:35.340\nThat's basically it.\n\n672\n00:30:35.340 --> 00:30:36.200\nThat's the whole process.\n\n673\n00:30:37.300 --> 00:30:40.390\nAll right, well in this episode we got\na chance to see how to create redundant\n\n674\n00:30:40.390 --> 00:30:43.720\nradius servers and\nwe saw how to set up fail back\n\n675\n00:30:43.720 --> 00:30:46.460\nto the local database to make sure we\ndon't lock ourselves out of the router.\n\n676\n00:30:46.460 --> 00:30:49.420\nAnd then lastly we saw some of\nthe troubleshooting commands we can use to\n\n677\n00:30:49.420 --> 00:30:50.660\nlook at radius.\n\n678\n00:30:50.660 --> 00:30:52.830\nBut that's about all we\nneed to know on it so\n\n679\n00:30:52.830 --> 00:30:54.060\nI'm gonna wrap this show up right there.\n\n680\n00:30:54.060 --> 00:30:55.880\nI hope you guys enjoyed it.\n\n681\n00:30:55.880 --> 00:30:59.268\nSigning off for ITProTV I'm Don Bizet and\nI'll see you next time.\n\n682\n00:30:59.268 --> 00:31:05.100\n[MUSIC]\n\n",
          "vimeoId": "138776563"
        },
        {
          "description": "A router is typically a border device, which makes it a target for attacks and for hackers to take control of, but one can utilize device access control and implement security tactics to secure a router and regulate who has access to the computing resources. Viewers will hear about some of the basic security best practices to protect a router, the AutoSecure script to help harden an IOS router, and see different settings and what each service does to increase/decrease the router's overall attack surface.",
          "length": "1610",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/ccnproute/cisco-ccnproute300101-5-3-device_access_control-090415-1.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/ccnproute/cisco-ccnproute300101-5-3-device_access_control-090415-1-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/ccnproute/cisco-ccnproute300101-5-3-device_access_control-090415-1-sm.jpg",
          "title": "Device Access Control",
          "transcript": "WEBVTT\n\n1\n00:00:00.000 --> 00:00:10.695\n[MUSIC]\n\n2\n00:00:10.695 --> 00:00:12.691\nAll right, good morning,\ngood afternoon, and good evening.\n\n3\n00:00:12.691 --> 00:00:14.870\nAnd welcome back to another\nepisode of ITProTV.\n\n4\n00:00:14.870 --> 00:00:19.050\nI'm your host Don Pezet back again\nwith another episode of CCNP Route.\n\n5\n00:00:19.050 --> 00:00:23.200\nNow in this episode we're gonna be\ntaking a look at device access control.\n\n6\n00:00:23.200 --> 00:00:24.410\nWhat does that mean?\n\n7\n00:00:24.410 --> 00:00:29.170\nWell your router is typically\non the border of your network.\n\n8\n00:00:29.170 --> 00:00:32.060\nIn other words, in between you and\nthe Internet, or in between you and\n\n9\n00:00:32.060 --> 00:00:33.470\na third party network.\n\n10\n00:00:33.470 --> 00:00:35.070\nIt's typically a border device, right?\n\n11\n00:00:35.070 --> 00:00:37.240\nThat's kinda the whole point of a router.\n\n12\n00:00:37.240 --> 00:00:40.980\nIt also means that it's a great target for\nattacks.\n\n13\n00:00:40.980 --> 00:00:45.210\nThat if a hacker can gain control of your\nrouter, they can manipulate the routes\n\n14\n00:00:45.210 --> 00:00:48.500\nthat follow and they can pull off man\nin the middle attacks pretty easily.\n\n15\n00:00:48.500 --> 00:00:51.100\nSo there's some basic\nsteps we need to take on\n\n16\n00:00:51.100 --> 00:00:53.150\nevery Cisco router to get it secured.\n\n17\n00:00:53.150 --> 00:00:56.560\nNow in your CCNA studies you probably\nalready learned about most of these and\n\n18\n00:00:56.560 --> 00:00:59.360\nif you've done CCNA security\nyou've absolutely already learned\n\n19\n00:00:59.360 --> 00:01:01.440\nabout all these, so\nit might be a bit of a refresher.\n\n20\n00:01:01.440 --> 00:01:03.660\nBut for\nthose of you who didn't do those things,\n\n21\n00:01:03.660 --> 00:01:06.150\nI'm gonna take some time in this\nepisode to just run over some of\n\n22\n00:01:06.150 --> 00:01:10.580\nthe basic security best practices to\ntighten up a router and get it protected.\n\n23\n00:01:10.580 --> 00:01:11.350\nAll right.\n\n24\n00:01:11.350 --> 00:01:14.520\nThe first thing we need to remember is\nthat when you get a Cisco router, and\n\n25\n00:01:14.520 --> 00:01:20.220\nyou take it out of the box, and you power\nit on, it's not hardened for security yet.\n\n26\n00:01:20.220 --> 00:01:22.330\nThere's a lot of stuff that it's\nrunning that it's running for\n\n27\n00:01:22.330 --> 00:01:26.680\ncompatibility, and we may not want\nthat exposed to the Internet.\n\n28\n00:01:26.680 --> 00:01:30.010\nNow if it's gonna be an internal router,\nsomething we're using on our own LAN and\n\n29\n00:01:30.010 --> 00:01:32.370\nit's secured,\nthen we might not worry about that, but.\n\n30\n00:01:32.370 --> 00:01:35.130\nEven on the internal network, attackers\ncan take advantage of this stuff,\n\n31\n00:01:35.130 --> 00:01:35.750\nyou know?\n\n32\n00:01:35.750 --> 00:01:38.630\nAttacks from within are just as\ncommon as attacks from without.\n\n33\n00:01:38.630 --> 00:01:40.660\nSo we have to be careful with that.\n\n34\n00:01:40.660 --> 00:01:43.920\nNow, fortunately, Cisco has made\nit a little bit easy for us.\n\n35\n00:01:43.920 --> 00:01:47.760\nThere's a script that you can run\non any Cisco router that can help\n\n36\n00:01:47.760 --> 00:01:48.925\nyou to secure it.\n\n37\n00:01:48.925 --> 00:01:51.710\nAnd it's called the auto secure script.\n\n38\n00:01:51.710 --> 00:01:52.920\nSo I wanna show you guys that.\n\n39\n00:01:52.920 --> 00:01:56.810\nI'm gonna take one of my routers here, so\nthis is my branch one router, all right?\n\n40\n00:01:56.810 --> 00:01:59.590\nIt's a branch router,\nit's got a connection to the Internet and\n\n41\n00:01:59.590 --> 00:02:02.140\nit's got connections to\nmy internal network.\n\n42\n00:02:02.140 --> 00:02:04.710\nAnd I've just got a basic\nconfiguration on it, right?\n\n43\n00:02:04.710 --> 00:02:06.580\nNothing too fancy on here.\n\n44\n00:02:06.580 --> 00:02:09.340\nMost of this stuff is set at the defaults.\n\n45\n00:02:09.340 --> 00:02:11.610\nAnd I haven't manipulated it at all.\n\n46\n00:02:11.610 --> 00:02:15.130\nLooking at these interfaces,\nthere's very little configuration on here.\n\n47\n00:02:15.130 --> 00:02:18.140\nIt's just a fairly plain router, okay?\n\n48\n00:02:18.140 --> 00:02:21.260\nBut, there's still some\nthings that we're at risk for\n\n49\n00:02:21.260 --> 00:02:24.700\nthat are just defaults that don't\nshow up here in the config.\n\n50\n00:02:24.700 --> 00:02:28.410\nAnd so the auto secure script\ncan help us with that.\n\n51\n00:02:28.410 --> 00:02:31.870\nAnd if you look, auto-secure is really\nthe only script that's built in here, so\n\n52\n00:02:31.870 --> 00:02:33.570\nI don't have a whole lot of options there.\n\n53\n00:02:33.570 --> 00:02:37.040\nBut when you run auto-secure,\nyou can pick different modes for it.\n\n54\n00:02:37.040 --> 00:02:40.320\nIf you just press enter right here,\nit's going to run the full auto-secure\n\n55\n00:02:40.320 --> 00:02:42.820\nscript and it'd just take\ncare of securing the router.\n\n56\n00:02:42.820 --> 00:02:47.140\nBut you can choose to do autosecure\njust for the firewall functions.\n\n57\n00:02:47.140 --> 00:02:49.860\nAnd it can set up a zone based\nfirewall for you on the router.\n\n58\n00:02:49.860 --> 00:02:55.010\nYou can set it to just secure SSH\nof NTP to do some basic things.\n\n59\n00:02:55.010 --> 00:02:58.730\nOr you can just run it by itself and\nit's gonna do the whole suite.\n\n60\n00:02:58.730 --> 00:03:01.620\nNow if you just want to go with\nall of Cisco's defaults and\n\n61\n00:03:01.620 --> 00:03:06.720\nnot manipulate anything,\nthen you can run auto secure, no-interact.\n\n62\n00:03:06.720 --> 00:03:10.210\nAnd then it's gonna apply what Cisco\nconsiders their best practices to it.\n\n63\n00:03:10.210 --> 00:03:13.460\nBut there's some things it can't set for\nus, like a password.\n\n64\n00:03:13.460 --> 00:03:17.160\nSo for those things, we really do have\nto get involved and get those set.\n\n65\n00:03:17.160 --> 00:03:20.000\nSo I typically just run\nauto secure like this.\n\n66\n00:03:20.000 --> 00:03:22.280\nAnd it's gonna ask us for\nsome questions, and\n\n67\n00:03:22.280 --> 00:03:25.780\nwe'll have to provide it with answers so\nthat they'll know what we want.\n\n68\n00:03:25.780 --> 00:03:26.320\nAll right.\n\n69\n00:03:26.320 --> 00:03:26.930\nWhen we run through it,\n\n70\n00:03:26.930 --> 00:03:29.550\nthe first thing it's going to ask us,\nis this router connected to the Internet?\n\n71\n00:03:29.550 --> 00:03:32.060\nBecause that does change the type\nof risks that we're exposed to.\n\n72\n00:03:32.060 --> 00:03:35.210\nAnd this particular router is so\nI'll just say yes to that.\n\n73\n00:03:35.210 --> 00:03:37.350\nAnd the number of interfaces\nthat are facing the Internet.\n\n74\n00:03:37.350 --> 00:03:38.150\nWell, I just have one.\n\n75\n00:03:39.370 --> 00:03:41.550\nNow it's gonna ask me\nwhich interface it is and\n\n76\n00:03:41.550 --> 00:03:44.750\nthe only interface I have facing\nthe internet is this guy right here.\n\n77\n00:03:44.750 --> 00:03:49.160\nEthernet zero slash two, now, the script\ndoes require you to type the name out.\n\n78\n00:03:49.160 --> 00:03:51.690\nSo I'm gonna type that as\nethernet zero slash two.\n\n79\n00:03:51.690 --> 00:03:55.170\nI know we're used to using little short\ncuts but this one's gonna make me do it.\n\n80\n00:03:55.170 --> 00:03:58.460\nOnce that's done, now it's getting\nsome services set up, right.\n\n81\n00:03:58.460 --> 00:03:59.650\nHere's what it's doing.\n\n82\n00:03:59.650 --> 00:04:03.310\nIt wants to disable the finger service and\nthe pad service,\n\n83\n00:04:03.310 --> 00:04:07.600\nTCP small servers, UDP small servers\nIt wants to disable all these things.\n\n84\n00:04:07.600 --> 00:04:09.180\nNow, what are these things?\n\n85\n00:04:09.180 --> 00:04:11.490\nI didn't turn,\nI didn't turn on the Finger service.\n\n86\n00:04:11.490 --> 00:04:15.640\nWell, back in the 80s, the network,\nthe internet, was a much safer place.\n\n87\n00:04:15.640 --> 00:04:18.700\nAnd there was a protocol called Finger,\nand I'll tell you it was awesome.\n\n88\n00:04:18.700 --> 00:04:21.330\nIf you sent somebody an email, you ever\nsend somebody an email and you're like,\n\n89\n00:04:21.330 --> 00:04:23.370\nman, I wonder if they read my email.\n\n90\n00:04:23.370 --> 00:04:24.860\nBut you don't know, right?\n\n91\n00:04:24.860 --> 00:04:28.040\nWell, you could run Finger,\nfollowed by a person's email address, and\n\n92\n00:04:28.040 --> 00:04:30.367\nit would reach out to the server\nthat had the mailbox.\n\n93\n00:04:30.367 --> 00:04:35.010\nAnd then it would respond to you with the\nlast time they logged in and whether they\n\n94\n00:04:35.010 --> 00:04:39.140\nhad any unread mail and so it would say\ndeep as that log in three days ago and\n\n95\n00:04:39.140 --> 00:04:41.610\nit has 20 unread messages and\nso I can look at that and\n\n96\n00:04:41.610 --> 00:04:44.900\nsay well he probably has not read my\nemail then, or I can look and it and\n\n97\n00:04:44.900 --> 00:04:47.800\nsay they have logged in today and\nit says they have zero unread messages, so\n\n98\n00:04:47.800 --> 00:04:50.365\nI know they read my email though\nthey just haven't answered me.\n\n99\n00:04:50.365 --> 00:04:52.350\nRight.\nSo, some people liked that,\n\n100\n00:04:52.350 --> 00:04:53.410\nsome people hated that.\n\n101\n00:04:53.410 --> 00:04:56.370\nThere was a very well-known exploit\nthat came out for finger though,\n\n102\n00:04:56.370 --> 00:04:58.340\nand it's a very dangerous\nprotocol to run now,\n\n103\n00:04:58.340 --> 00:05:00.870\nbecause basically you gain\naccess to people's mailboxes.\n\n104\n00:05:00.870 --> 00:05:03.050\nSo it needs to be disabled.\n\n105\n00:05:03.050 --> 00:05:05.940\nNow, very few mail servers\nsupport it anymore, but\n\n106\n00:05:05.940 --> 00:05:10.050\nwe can stop it right here at the router\nif we want by disabling that.\n\n107\n00:05:10.050 --> 00:05:11.810\nAnd so\nthat's the kind of stuff that it's doing.\n\n108\n00:05:11.810 --> 00:05:15.760\nA lot of these functions in here\nare things that we don't need.\n\n109\n00:05:15.760 --> 00:05:18.010\nThey're things that we don't\neven use anymore, like fingers.\n\n110\n00:05:18.010 --> 00:05:21.310\nSo why even allow them to\npass through the router?\n\n111\n00:05:21.310 --> 00:05:24.660\nThere's other things that we do use,\nlike CDP, Cisco Discovery Protocol.\n\n112\n00:05:24.660 --> 00:05:27.880\nAll right.\nNow why does it wanna disable CDP?\n\n113\n00:05:27.880 --> 00:05:31.760\nWell, an attacker can use\nCDP to attack your network.\n\n114\n00:05:31.760 --> 00:05:33.350\nIf I'm on your network.\n\n115\n00:05:33.350 --> 00:05:34.970\nAnd I'm plugged into a switch, right.\n\n116\n00:05:34.970 --> 00:05:36.370\nA Cisco switch.\n\n117\n00:05:36.370 --> 00:05:38.220\nI could forge a CDP packet, right.\n\n118\n00:05:38.220 --> 00:05:41.330\nYou know, the CDP devices will send\nout those CDP announcements on\n\n119\n00:05:41.330 --> 00:05:43.020\nevery interface by default.\n\n120\n00:05:43.020 --> 00:05:45.220\nSo I can run a sniffer and\njust listen for it.\n\n121\n00:05:45.220 --> 00:05:47.190\nOr I can forge a CDP packet and\nsend it but\n\n122\n00:05:47.190 --> 00:05:51.130\nnormally I really just need to listen and\nhear and when I receive a CDP packet,\n\n123\n00:05:51.130 --> 00:05:55.250\nit has, what model of hardware it is,\nwhat version of iOS it's running.\n\n124\n00:05:55.250 --> 00:05:56.560\nRight?\nAmongst other things.\n\n125\n00:05:56.560 --> 00:06:00.020\nThe version of iOS is what I care about,\nthough, because I can take that version\n\n126\n00:06:00.020 --> 00:06:03.180\nof the iOS and,\nlet's say it's running 15.1 release 24.\n\n127\n00:06:03.180 --> 00:06:07.570\nI can go to Cisco's website and\nI can say, all right,\n\n128\n00:06:07.570 --> 00:06:10.980\nis there a 15.1 release 25 or release 26?\n\n129\n00:06:10.980 --> 00:06:14.530\nLet me go find that and\nsee the changelog, what did they fix?\n\n130\n00:06:14.530 --> 00:06:16.910\nOh, here's an exploit they fixed.\n\n131\n00:06:16.910 --> 00:06:19.940\nThat means over here on this one,\nit released 24 and still has the exploit.\n\n132\n00:06:19.940 --> 00:06:21.440\nNow I know how to attack it, right.\n\n133\n00:06:21.440 --> 00:06:25.670\nSo CDP is kind of dangerous, you help\npeople to attack you by running CDP.\n\n134\n00:06:25.670 --> 00:06:27.400\nSo you should only turn\nit on when you need it.\n\n135\n00:06:27.400 --> 00:06:29.530\nAnd then turn it off, right.\n\n136\n00:06:29.530 --> 00:06:32.680\nAnd so that's what it's doing here,\nit's turning it off.\n\n137\n00:06:32.680 --> 00:06:35.660\nOther things like BOOTP,\nif you're doing boot from network, right?\n\n138\n00:06:35.660 --> 00:06:37.660\nA system boots up, get a DHCP address and\n\n139\n00:06:37.660 --> 00:06:39.080\nthen finds its operating\nsystem on the network.\n\n140\n00:06:39.080 --> 00:06:39.980\nThat's great.\n\n141\n00:06:39.980 --> 00:06:42.340\nIf you're not using it,\nturn it off, right?\n\n142\n00:06:42.340 --> 00:06:44.000\nIt's also turning off the HTTP server.\n\n143\n00:06:44.000 --> 00:06:49.220\nNow, it's not turning off the HTTPS\nserver, the secure server.\n\n144\n00:06:49.220 --> 00:06:53.360\nWe need the secure server if we're\ngonna use things like the ASDM Or\n\n145\n00:06:53.360 --> 00:06:56.450\nthe SDM to connect up to this router and\nmanage it.\n\n146\n00:06:56.450 --> 00:06:59.630\nBut if we're not gonna use that,\nwe can disable that too.\n\n147\n00:06:59.630 --> 00:07:01.040\nThere's finger getting disabled.\n\n148\n00:07:01.040 --> 00:07:02.480\nSource routing, gratuitous arp.\n\n149\n00:07:02.480 --> 00:07:05.200\nThese are all features\nthat have their purpose.\n\n150\n00:07:05.200 --> 00:07:09.270\nRight?\nThey can work but it's not really\n\n151\n00:07:09.270 --> 00:07:13.040\nsomething that's required, something that\nwe need here in our system, all right?\n\n152\n00:07:13.040 --> 00:07:15.070\nIt's also gonna set a security banner but\n\n153\n00:07:15.070 --> 00:07:18.060\nthey don't know the message that we\nwanna put in so we have to tell it.\n\n154\n00:07:18.060 --> 00:07:21.450\nSo I'll just do a dollar sign to\nshow the start of my banner and\n\n155\n00:07:21.450 --> 00:07:22.580\nI'm just gonna copy their banner.\n\n156\n00:07:22.580 --> 00:07:26.920\nTheir banner's good enough for\nme and so I'll put that it in and\n\n157\n00:07:26.920 --> 00:07:29.290\nthat will become my security banner.\n\n158\n00:07:29.290 --> 00:07:32.150\nNow I need a password and\nenable secret on my system.\n\n159\n00:07:32.150 --> 00:07:33.630\nSo I can punch that in here.\n\n160\n00:07:33.630 --> 00:07:35.580\nI'll just do Cisco one two three.\n\n161\n00:07:36.750 --> 00:07:38.490\nAnd I have to confirm it.\n\n162\n00:07:38.490 --> 00:07:42.160\nIt also asks me to set an enable password.\n\n163\n00:07:42.160 --> 00:07:44.780\nNow remember back to the CCNA days.\n\n164\n00:07:44.780 --> 00:07:47.950\nEnable secret,\nthat's the one that going to be encrypted.\n\n165\n00:07:47.950 --> 00:07:50.970\nEnable password,\nthat's the one that's not encrypted.\n\n166\n00:07:50.970 --> 00:07:54.219\nSo why do I want to set\na not encrypted password?\n\n167\n00:07:54.219 --> 00:07:58.318\nWell it's better to have one that's set\nthen just have nothing at all in case\n\n168\n00:07:58.318 --> 00:08:02.243\nthere's some kind of service that\ngets configured that relies on that.\n\n169\n00:08:02.243 --> 00:08:03.566\nSo it does ask us to set one but for\n\n170\n00:08:03.566 --> 00:08:06.673\nthe most part it's not really needed\nThey're just kinda playing it safe.\n\n171\n00:08:06.673 --> 00:08:07.869\nSo I'll set a different password.\n\n172\n00:08:07.869 --> 00:08:10.772\nIt does need to be different though\nbecause you don't want people to look at\n\n173\n00:08:10.772 --> 00:08:13.480\nthe unencrypted password and\nknow what the encrypted one is.\n\n174\n00:08:13.480 --> 00:08:18.790\nSo I'll set this one as\nnot Cisco 123 Three.\n\n175\n00:08:18.790 --> 00:08:21.495\n[LAUGH] And there we go.\n\n176\n00:08:21.495 --> 00:08:22.445\nAll right?\n\n177\n00:08:22.445 --> 00:08:24.265\nNow it's gonna ask me\nto create a username.\n\n178\n00:08:24.265 --> 00:08:28.855\nIf I'm gonna turn on triple a new model,\nthe new model of user authentication,\n\n179\n00:08:28.855 --> 00:08:31.775\nit's not just a password,\nit's a username and a password to get in.\n\n180\n00:08:31.775 --> 00:08:33.095\nSo I need to create a name.\n\n181\n00:08:33.095 --> 00:08:37.125\nI'll just do admin and\nI'll do a password for that account.\n\n182\n00:08:37.125 --> 00:08:37.995\nAll right?\n\n183\n00:08:37.995 --> 00:08:39.720\nSo we'll get that one set up.\n\n184\n00:08:39.720 --> 00:08:41.320\nAnd then we've got the blocking period.\n\n185\n00:08:41.320 --> 00:08:42.260\nSo what is this?\n\n186\n00:08:42.260 --> 00:08:42.950\nThe blocking period.\n\n187\n00:08:44.280 --> 00:08:47.540\nBy default,\na Cisco router can be brute forced.\n\n188\n00:08:47.540 --> 00:08:51.280\nSomebody can just sit there and try and\nlog in over and over and over again.\n\n189\n00:08:51.280 --> 00:08:55.240\nAnd what's gonna happen is over time,\nthey'll get your password.\n\n190\n00:08:55.240 --> 00:08:56.630\nThey'll guess it.\n\n191\n00:08:56.630 --> 00:08:58.380\nWell, we can set a limit to that.\n\n192\n00:08:58.380 --> 00:09:01.980\nHow many failed attempts before\nwe stop somebody from logging in?\n\n193\n00:09:01.980 --> 00:09:03.770\nAnd so\nhere it's asking the blocking period.\n\n194\n00:09:03.770 --> 00:09:06.270\nIf I detect somebody\ntrying to brute force,\n\n195\n00:09:06.270 --> 00:09:07.870\nhow long do I want to block them for?\n\n196\n00:09:07.870 --> 00:09:09.530\nSo maybe I want to do 30 minutes.\n\n197\n00:09:09.530 --> 00:09:10.350\nSo I punch in 30 here.\n\n198\n00:09:10.350 --> 00:09:12.460\nI am gonna block them for 30 minutes.\n\n199\n00:09:12.460 --> 00:09:16.350\nAnd then how many login\nfailures before I do the block?\n\n200\n00:09:16.350 --> 00:09:17.742\nMaybe I say five.\n\n201\n00:09:17.742 --> 00:09:18.270\nAll right, so\n\n202\n00:09:18.270 --> 00:09:22.530\nif somebody fails to login five times,\nI'll block them for 30 minutes.\n\n203\n00:09:22.530 --> 00:09:27.500\nAll right, and then five times\nwithin what span of time, all right?\n\n204\n00:09:27.500 --> 00:09:32.930\nI might say if they fail to log\nin five times within one hour,\n\n205\n00:09:32.930 --> 00:09:34.230\nright, or 60 minutes,\n\n206\n00:09:34.230 --> 00:09:37.280\nI'm pretty sure this one's in minutes,\nlet me check my notes here and see.\n\n207\n00:09:37.280 --> 00:09:38.390\nYeah, this one's in minutes.\n\n208\n00:09:38.390 --> 00:09:39.640\nSo I'll say 60.\n\n209\n00:09:39.640 --> 00:09:41.150\nAnd that way it's within an hour.\n\n210\n00:09:41.150 --> 00:09:46.000\nSo if I get five failed attempts within\none hour, Then I'm gonna go ahead and\n\n211\n00:09:46.000 --> 00:09:48.800\nblock them for 30 minutes, all right?\n\n212\n00:09:48.800 --> 00:09:53.100\nSo that's kinda setting that\nlittle incorrect password limit.\n\n213\n00:09:54.700 --> 00:09:55.850\nThen do we wanna configure SSH?\n\n214\n00:09:55.850 --> 00:09:59.410\nAbsolutely, we don't wanna\nuse telnet to connect and\n\n215\n00:09:59.410 --> 00:10:02.590\nmanage to our routers because that's\nplain text traffic over the network.\n\n216\n00:10:02.590 --> 00:10:04.070\nSo I'll go ahead and say yes to that.\n\n217\n00:10:04.070 --> 00:10:05.590\nAnd then we got a domain name.\n\n218\n00:10:05.590 --> 00:10:08.040\nNow why is it asking for a domain name?\n\n219\n00:10:08.040 --> 00:10:12.060\nWell if we're going to use SSH it uses\na certificate for authentication and\n\n220\n00:10:12.060 --> 00:10:13.990\nto generate the certificate we've\ngotta have a domain name so\n\n221\n00:10:13.990 --> 00:10:15.920\nit kind of stacks on top of itself there.\n\n222\n00:10:15.920 --> 00:10:17.388\nSo I'm just gonna give it a domain name.\n\n223\n00:10:17.388 --> 00:10:20.980\nI'll do lab.itpro.tv.\n\n224\n00:10:20.980 --> 00:10:24.110\nThen it's going to give me\nsome other options here.\n\n225\n00:10:24.110 --> 00:10:27.650\nDo I want to configure this\nCBAC firewall feature, right?\n\n226\n00:10:27.650 --> 00:10:30.100\nDo I want to do content-based filtering?\n\n227\n00:10:30.100 --> 00:10:34.090\nAnd this is where it's going to look\ninside of content as it goes across and\n\n228\n00:10:34.090 --> 00:10:35.180\nlook for well-know attacks.\n\n229\n00:10:35.180 --> 00:10:39.150\nNow if you have a intrusion\nprevention subscription with Cisco,\n\n230\n00:10:39.150 --> 00:10:42.250\nyou can actually get some really\nadvanced stuff going on here but\n\n231\n00:10:42.250 --> 00:10:44.000\nit will even do basic CBAC if you want.\n\n232\n00:10:44.000 --> 00:10:45.430\nI'm gonna say no on that one.\n\n233\n00:10:47.140 --> 00:10:49.830\nThen the TCP intercept feature.\n\n234\n00:10:49.830 --> 00:10:53.500\nWhen connections come in they're\nbuilding up TCP sessions.\n\n235\n00:10:53.500 --> 00:10:56.260\nAnd they normally connect to\nan endpoint inside of your network.\n\n236\n00:10:56.260 --> 00:10:59.160\nBut you can actually have that\nintercepted, and that's useful a lot of\n\n237\n00:10:59.160 --> 00:11:01.930\ntimes with intrusion prevention or\nintrusion detection.\n\n238\n00:11:01.930 --> 00:11:03.540\nSo if I'm gonna use those\nfeatures I can turn that on.\n\n239\n00:11:03.540 --> 00:11:04.510\nI'm gonna say no to that.\n\n240\n00:11:05.520 --> 00:11:06.680\nAll right.\n\n241\n00:11:06.680 --> 00:11:10.910\nNow it gives me the summary of all\nthe commands that it's gonna run.\n\n242\n00:11:10.910 --> 00:11:11.460\nOkay?\n\n243\n00:11:11.460 --> 00:11:15.040\nHere's exactly what it's gonna run as\nit turns these various services off,\n\n244\n00:11:15.040 --> 00:11:19.320\nas it turns other services on, as it\nconfigures things and gets them set up for\n\n245\n00:11:19.320 --> 00:11:21.360\nCisco's best practices.\n\n246\n00:11:21.360 --> 00:11:23.960\nNow, if I knew all these commands,\nI could have just typed them myself.\n\n247\n00:11:23.960 --> 00:11:25.510\nI didn't need a wizard for that.\n\n248\n00:11:25.510 --> 00:11:28.120\nBut it's kind of nice to have\nauto-secure cuz it's gonna kind of\n\n249\n00:11:28.120 --> 00:11:32.100\nrefresh our memories here, make sure that\nwe get all of this stuff setup properly.\n\n250\n00:11:32.100 --> 00:11:34.560\nAnd so it's gonna go through and\ndefine all those settings.\n\n251\n00:11:34.560 --> 00:11:36.430\nThere's also a few things\nthat it didn't show.\n\n252\n00:11:36.430 --> 00:11:39.810\nIt didn't show earlier,\nlike going through the wizard,\n\n253\n00:11:39.810 --> 00:11:43.350\nthat it was gonna turn on password\nencryption, which is in here somewhere.\n\n254\n00:11:43.350 --> 00:11:44.040\nLet's see if we can find it.\n\n255\n00:11:44.040 --> 00:11:46.190\nHere, service password encryption.\n\n256\n00:11:46.190 --> 00:11:49.620\nThis way in the few cases where\nwe do have a plain text password\n\n257\n00:11:49.620 --> 00:11:50.970\nit'll make sure that it gets encrypted.\n\n258\n00:11:50.970 --> 00:11:53.710\nAnd the encryption that it does is\ngarbage, you don't wanna trust it, but\n\n259\n00:11:53.710 --> 00:11:56.390\nat least it's better than nothing,\nit'll stop somebody from shoulder surfing,\n\n260\n00:11:56.390 --> 00:11:58.250\nsomebody looking over your shoulder and\nseeing that password.\n\n261\n00:11:59.250 --> 00:12:03.530\nThen after that, we can see some of\nthe other things that it sets like,\n\n262\n00:12:03.530 --> 00:12:05.180\ntimeouts on the console.\n\n263\n00:12:05.180 --> 00:12:08.990\nIf you log in on the console,\nand then you unplug and\n\n264\n00:12:08.990 --> 00:12:13.160\nwalk away if there's no timeout, you stay\nlogged in on that console and anybody else\n\n265\n00:12:13.160 --> 00:12:15.530\ncould come behind and plug into\nthe console and they're already logged in.\n\n266\n00:12:15.530 --> 00:12:16.720\nThat would be bad.\n\n267\n00:12:16.720 --> 00:12:18.760\nRight?\nSo it sets a timeout of five minutes.\n\n268\n00:12:18.760 --> 00:12:22.350\nIt sets it ten minutes on the auxiliaries,\nwhich most people don't use the auxiliary\n\n269\n00:12:22.350 --> 00:12:25.740\nbut you might have a modem attached to\nit so you can dial into your router.\n\n270\n00:12:25.740 --> 00:12:27.770\nYou don't want to leave that logged in,\neither.\n\n271\n00:12:27.770 --> 00:12:29.450\nAnd then our VTYs.\n\n272\n00:12:29.450 --> 00:12:32.870\nNow, on the VTYs it didn't\nset a time out here, and\n\n273\n00:12:32.870 --> 00:12:36.870\nthat's because most people don't leave\nthemselves logged in with a VTY, right?\n\n274\n00:12:36.870 --> 00:12:40.210\nIt's a network connection, so\nyou disconnect when you close the window.\n\n275\n00:12:40.210 --> 00:12:41.290\nBut you might want to go behind it and\n\n276\n00:12:41.290 --> 00:12:44.570\nset a timeout on that too,\nit's not necessarily a bad idea.\n\n277\n00:12:44.570 --> 00:12:45.290\nAll right.\n\n278\n00:12:45.290 --> 00:12:48.800\nBut then here's some of the other\nones like login block for 30 minutes.\n\n279\n00:12:48.800 --> 00:12:50.830\n5 attempts with 60 minutes right there.\n\n280\n00:12:50.830 --> 00:12:52.720\nThere's that command\nthat was put in place,.\n\n281\n00:12:54.180 --> 00:12:58.700\nSo basically, if I'm happy with everything\nthat is defined, then I can run with that.\n\n282\n00:12:58.700 --> 00:13:01.990\nAnd see it's even modifying configuration\non the individual interfaces\n\n283\n00:13:01.990 --> 00:13:05.380\nlike turning off ip redirects,\nproxy arp and so on.\n\n284\n00:13:05.380 --> 00:13:09.680\nThese are features that some networks do\nmake use of, but most networks don't, and\n\n285\n00:13:09.680 --> 00:13:11.410\nattackers can take advantage of them.\n\n286\n00:13:11.410 --> 00:13:13.310\nSome of them like mop, right?\n\n287\n00:13:13.310 --> 00:13:15.630\nMop, that's actually part of decknet.\n\n288\n00:13:15.630 --> 00:13:19.100\nMost people have never even heard\nof decknet, better yet run it.\n\n289\n00:13:19.100 --> 00:13:22.490\nAnd so we don't need that, and so\nit's going to turn that off too, right?\n\n290\n00:13:22.490 --> 00:13:27.850\nJust really improving the general\nsecurity of our router, okay.\n\n291\n00:13:27.850 --> 00:13:29.870\nSo, those are some of the basic\nthings that it's doing.\n\n292\n00:13:29.870 --> 00:13:33.950\nIt's also turning on one other\nfeature that we're gonna talk about\n\n293\n00:13:33.950 --> 00:13:35.120\nin another episode.\n\n294\n00:13:35.120 --> 00:13:39.470\nActually am I, yeah we're gonna talk about\nit in another episode which is called\n\n295\n00:13:39.470 --> 00:13:42.040\nreverse path verification,\nso it's turning that on.\n\n296\n00:13:42.040 --> 00:13:44.410\nWe'll talk about that in another episode,\ncuz it's kind of neat.\n\n297\n00:13:44.410 --> 00:13:46.450\nBut it's turning on these features and\n\n298\n00:13:46.450 --> 00:13:49.470\ngetting our router to be\na little more secure.\n\n299\n00:13:49.470 --> 00:13:50.120\nOkay.\n\n300\n00:13:50.120 --> 00:13:53.190\nNow this isn't the end of security for\nour router.\n\n301\n00:13:53.190 --> 00:13:54.630\nWe don't just stop here.\n\n302\n00:13:54.630 --> 00:13:57.410\nThere's usually some more things\nthat we need to do to get in and\n\n303\n00:13:57.410 --> 00:13:58.580\nto protect our system.\n\n304\n00:13:58.580 --> 00:14:00.410\nRight.\nThis is a great start.\n\n305\n00:14:00.410 --> 00:14:02.940\nThese are standard items\nthat everybody should do.\n\n306\n00:14:02.940 --> 00:14:06.750\nBut now you need to go through and\ntweak it yourself to customize and\n\n307\n00:14:06.750 --> 00:14:08.900\nchange the way that your router functions.\n\n308\n00:14:08.900 --> 00:14:11.320\nYou might want to go and\nset exact timeouts on your VTY lines.\n\n309\n00:14:11.320 --> 00:14:15.360\nYou might want to set it up to use a radio\nserver, an Attack X Plus server for\n\n310\n00:14:15.360 --> 00:14:16.390\nauthentication.\n\n311\n00:14:16.390 --> 00:14:17.980\nYou might want to set other things.\n\n312\n00:14:17.980 --> 00:14:19.800\nSo auto secure is not enough.\n\n313\n00:14:19.800 --> 00:14:22.050\nYou don't just run auto secure and\nbe done with it.\n\n314\n00:14:22.050 --> 00:14:26.750\nYou do need to take some extra steps there\nto make sure that you get your system\n\n315\n00:14:26.750 --> 00:14:28.250\nprotected, right?\n\n316\n00:14:28.250 --> 00:14:32.770\nOne example would be a IP\nspoofing access control list.\n\n317\n00:14:32.770 --> 00:14:35.890\nIf you're connected to the Internet\nthere's a lot of networks out there on\n\n318\n00:14:35.890 --> 00:14:39.400\nthe Internet that should not\nbe coming in to your system.\n\n319\n00:14:39.400 --> 00:14:43.780\nThat if somebody has a source address\nof a certain range that it's not valid.\n\n320\n00:14:43.780 --> 00:14:44.700\nAnd we should block those.\n\n321\n00:14:44.700 --> 00:14:46.940\nWe should create an IP spoofing ACL and\n\n322\n00:14:46.940 --> 00:14:49.360\napply it to all incoming\ntraffic on the internet, right.\n\n323\n00:14:49.360 --> 00:14:51.780\nThat helps to improve security also.\n\n324\n00:14:51.780 --> 00:14:55.140\nSo there's definitely other\nsteps that we want to take.\n\n325\n00:14:55.140 --> 00:14:58.350\nLet me show you an IP spoofing ACL real\nquick so you know what I am talking about.\n\n326\n00:14:59.470 --> 00:15:02.560\nFirst off, when we talk about traffic\ncoming in from the Internet, the only\n\n327\n00:15:02.560 --> 00:15:05.840\ntraffic we receive form the Internet\nshould be coming from a public IP.\n\n328\n00:15:05.840 --> 00:15:09.390\nRight, private IPs like\nRFC 1918 addresses,\n\n329\n00:15:09.390 --> 00:15:11.330\nthey are not routable on the Internet.\n\n330\n00:15:11.330 --> 00:15:14.790\nSo, I can create a standard\nACL that looks for\n\n331\n00:15:14.790 --> 00:15:17.820\ntraffic with a source that\nis in these private ranges.\n\n332\n00:15:17.820 --> 00:15:20.910\nSo I might choose to\ncreate an access list.\n\n333\n00:15:20.910 --> 00:15:22.960\nI'll just do Access-list 50.\n\n334\n00:15:22.960 --> 00:15:27.700\nAnd I can start denying traffic based\non things like the RFC1918 addresses.\n\n335\n00:15:27.700 --> 00:15:32.200\nSo I know I shouldn't get any traffic\nthat starts with 192.168, right?\n\n336\n00:15:33.210 --> 00:15:34.610\nI shouldn't get that.\n\n337\n00:15:34.610 --> 00:15:38.640\nSo I can create an ACL\nthat denies that traffic.\n\n338\n00:15:38.640 --> 00:15:43.668\nAnd I know the same thing about\ntraffic that begins with 10.\n\n339\n00:15:43.668 --> 00:15:47.470\nThe 10-dot class-A,\n\n340\n00:15:47.470 --> 00:15:51.969\nthat's part of RFC 1918.\n\n341\n00:15:51.969 --> 00:15:54.407\nSo, I can come in here and block that.\n\n342\n00:15:54.407 --> 00:15:56.330\nAnd then, the class-B one.\n\n343\n00:15:56.330 --> 00:15:59.439\nThe class-B one is the one\nI always forget, so\n\n344\n00:15:59.439 --> 00:16:04.064\nif I want to add that one in we\nneed to deny 172.16.0.0, but\n\n345\n00:16:04.064 --> 00:16:09.282\nthis one's a little bit weird cuz it\nactually runs from 16 To 31, right?\n\n346\n00:16:09.282 --> 00:16:14.175\nSo when I come in and create this wild\ncard mask, I need to basically allow for\n\n347\n00:16:14.175 --> 00:16:15.100\n16 to 31.\n\n348\n00:16:15.100 --> 00:16:21.190\nAnd if you think about the bit range\nthere of what we need to represent that,\n\n349\n00:16:21.190 --> 00:16:25.330\nwe need the last, what is it,\nlike the last 15 bits for that one?\n\n350\n00:16:25.330 --> 00:16:29.840\nSo, it'll be something like Like that,\nI think that's right.\n\n351\n00:16:29.840 --> 00:16:31.460\nWell it accepted it so that's probably it.\n\n352\n00:16:31.460 --> 00:16:34.040\nSo we want to make sure that we get\nyou could list each one individually.\n\n353\n00:16:34.040 --> 00:16:37.860\nBut once we get those put in,\nnow I'm blocking those and\n\n354\n00:16:37.860 --> 00:16:43.870\nI can say access-list 50 permit Any, and\nallow everything else through, right.\n\n355\n00:16:43.870 --> 00:16:45.550\nBut I might not want to stop there,\n\n356\n00:16:45.550 --> 00:16:48.830\nI might want to look at things\nlike my own public networks.\n\n357\n00:16:48.830 --> 00:16:52.200\nIf I'm doing NAT, and I've got some\npublic IP ranges, or whatever.\n\n358\n00:16:52.200 --> 00:16:55.410\nThen I need to go ahead and\nput those in the same list.\n\n359\n00:16:55.410 --> 00:16:57.790\nI shouldn't be receiving\ntraffic from my own network.\n\n360\n00:16:57.790 --> 00:16:58.480\nFrom the Internet.\n\n361\n00:16:58.480 --> 00:17:00.640\nThat's definitely someone spoofing things.\n\n362\n00:17:00.640 --> 00:17:03.160\nSo I wanna go ahead and key those in, too.\n\n363\n00:17:03.160 --> 00:17:06.940\nBut you basically put these in,\nand you can go really thorough.\n\n364\n00:17:06.940 --> 00:17:10.730\nI don't know if you guys are familiar,\nwith this point, with bogon networks.\n\n365\n00:17:10.730 --> 00:17:15.490\nBogon networks are networks\nthat normally would be public.\n\n366\n00:17:15.490 --> 00:17:20.250\nBut for one reason or another\nthe IANA has chosen to withdraw them.\n\n367\n00:17:20.250 --> 00:17:23.920\nAnd that might be that they've been\nassigned to some research project,\n\n368\n00:17:23.920 --> 00:17:27.230\nit might be that they a from\na compromised system.\n\n369\n00:17:27.230 --> 00:17:29.920\nThere's a number of different reason\nwhy they might throw something into\n\n370\n00:17:29.920 --> 00:17:31.000\na blown out network.\n\n371\n00:17:31.000 --> 00:17:34.550\nAnd so, those bogon IP's are ones\nthat we should never receive either.\n\n372\n00:17:34.550 --> 00:17:36.900\nAnd so, you can go out on the Internet and\ndo a search for bogon IP's and\n\n373\n00:17:36.900 --> 00:17:38.790\npull up a list of them and throw them in.\n\n374\n00:17:38.790 --> 00:17:41.660\nThe only problem is,\nthat list kind of changes and so\n\n375\n00:17:41.660 --> 00:17:44.470\nit's pretty difficult to\nprotect from those on a router.\n\n376\n00:17:44.470 --> 00:17:48.110\nOn a Cisco ASA, you can actually configure\nit to download the bogon list, so\n\n377\n00:17:48.110 --> 00:17:49.320\nthat's a lot easier.\n\n378\n00:17:49.320 --> 00:17:54.000\nBut on a router, I'm not aware of a way to\ndo that, so I might not choose to do that.\n\n379\n00:17:54.000 --> 00:17:55.740\nThis list, on the other hand,\nis really simple.\n\n380\n00:17:55.740 --> 00:18:00.420\nStandard ACL is gonna protect me from\na lot of stuff, so we can take this and\n\n381\n00:18:00.420 --> 00:18:02.770\nattach that to our Internet interface.\n\n382\n00:18:02.770 --> 00:18:08.520\nSo my Internet interface is e0/2.\n\n383\n00:18:08.520 --> 00:18:12.305\nAnd so I can jump into e0/2,\nand I can say,\n\n384\n00:18:12.305 --> 00:18:16.401\nIP access-group 50 in.\n\n385\n00:18:16.401 --> 00:18:20.570\nAnd now any traffic coming in that port,\nif it's from one of those ROC1918\n\n386\n00:18:20.570 --> 00:18:25.090\naddresses, we're gonna block it out,\nright?\n\n387\n00:18:25.090 --> 00:18:26.570\nAll right.\nRick made a comment in the chatroom\n\n388\n00:18:26.570 --> 00:18:28.030\nthere about SSH.\n\n389\n00:18:28.030 --> 00:18:30.150\nNow, I didn't notice that,\nso let's verify.\n\n390\n00:18:30.150 --> 00:18:32.850\nIn the wizard it asked if we\nwanted to setup SSH, right?\n\n391\n00:18:32.850 --> 00:18:37.190\nAnd, and I said yeah, I wanna setup SSH,\nwe don't want telnet, right?\n\n392\n00:18:37.190 --> 00:18:40.380\nBut, Rick mentioned that in the config\nit still left telnet enabled.\n\n393\n00:18:40.380 --> 00:18:42.940\nLet's verify that,\ncuz if it did that's a bad thing, right?\n\n394\n00:18:42.940 --> 00:18:45.510\nWe don't wanna use telnet on our systems.\n\n395\n00:18:45.510 --> 00:18:48.170\nSo if I jump down here to my VTYs let's\n\n396\n00:18:48.170 --> 00:18:50.680\nsee what we actually ended up with,\nall right?\n\n397\n00:18:50.680 --> 00:18:52.190\nSo here's my VTY.\n\n398\n00:18:52.190 --> 00:18:55.180\nand looking at mine actually\nit looks like did set mine up.\n\n399\n00:18:55.180 --> 00:18:56.920\nOh no it did do it wrong didn't it.\n\n400\n00:18:56.920 --> 00:18:59.090\nI've got line V two I zero four.\n\n401\n00:18:59.090 --> 00:19:00.950\nLogin authentication.\n\n402\n00:19:00.950 --> 00:19:01.710\nLocal off.\n\n403\n00:19:01.710 --> 00:19:05.270\nIt created a triple A group for\nlocal authentication and\n\n404\n00:19:05.270 --> 00:19:09.410\nthat means just use the local database But\nthen it's got transport input telnet ssh.\n\n405\n00:19:09.410 --> 00:19:10.670\nSo what does that mean?\n\n406\n00:19:10.670 --> 00:19:12.770\nIt means telnet's still turned on.\n\n407\n00:19:12.770 --> 00:19:15.260\nSo autosecure did a great job here,\ndidn't it?\n\n408\n00:19:15.260 --> 00:19:18.970\nSo we definitely wanna check this and\nfollow it up.\n\n409\n00:19:18.970 --> 00:19:20.550\nI'm gonna jump in and fix that, right.\n\n410\n00:19:20.550 --> 00:19:22.280\nWe don't want telnet enabled on ours.\n\n411\n00:19:22.280 --> 00:19:26.620\nSo the way we get rid of that\nis we get int line vty 0 4.\n\n412\n00:19:26.620 --> 00:19:31.330\nRemember on a router, you have\nfive vtys by default, 0 through 4.\n\n413\n00:19:31.330 --> 00:19:33.350\nOn a switch you have 16,\nit's zero through 15.\n\n414\n00:19:33.350 --> 00:19:35.850\nOn a router you can add more, though.\n\n415\n00:19:36.880 --> 00:19:40.040\nSo it's a good idea to look at your config\nto make sure somebody hasn't done that.\n\n416\n00:19:40.040 --> 00:19:44.240\nCuz if they add more, you might be\ndisabling telnet on the first four and\n\n417\n00:19:44.240 --> 00:19:47.500\nthen you've got the five through ten or\nwhatever that still have telnet turned on.\n\n418\n00:19:47.500 --> 00:19:48.930\nSo you gotta make sure you get them all.\n\n419\n00:19:48.930 --> 00:19:51.980\nBut once you're in there,\nyou can say transport input and\n\n420\n00:19:51.980 --> 00:19:55.900\nthen list the protocols you want,\nand typically it's just SSH.\n\n421\n00:19:55.900 --> 00:19:59.670\nThat's usually the only one that we\nwant enable there, and that's it.\n\n422\n00:19:59.670 --> 00:20:03.050\nSo not a difficult thing\nto get configured.\n\n423\n00:20:03.050 --> 00:20:07.350\nThere's other settings like that too that\nare spread out throughout the system,\n\n424\n00:20:07.350 --> 00:20:10.250\nlike ip ssh version.\n\n425\n00:20:11.630 --> 00:20:16.520\nBy default, and you might have noticed\nthis, when you ssh to a router.\n\n426\n00:20:16.520 --> 00:20:18.520\nWhat version does it show up as?\n\n427\n00:20:18.520 --> 00:20:23.130\nSo like here I am on branch one,\nif I jump over to headquarters and\n\n428\n00:20:23.130 --> 00:20:26.950\nI do SSH and I'll log in as admin\nat 192.168.0.2 and let's see,\n\n429\n00:20:26.950 --> 00:20:30.910\nno user specified nor\navailable for SSH client.\n\n430\n00:20:30.910 --> 00:20:32.790\nWell that's not good.\n\n431\n00:20:32.790 --> 00:20:36.530\nI thought we created a user account\nlet's see what happened here\n\n432\n00:20:37.730 --> 00:20:39.590\nWell you know what I'll just\ncreate a new user account.\n\n433\n00:20:39.590 --> 00:20:44.390\nSo I'm gonna make sure I've got a user\naccount set up here real quick.\n\n434\n00:20:44.390 --> 00:20:46.900\nSo I'll create a user account for me.\n\n435\n00:20:46.900 --> 00:20:51.330\nI'll give myself privilege level 15,\nand I'll set my password to cicso123.\n\n436\n00:20:52.400 --> 00:20:53.040\nOkay?\n\n437\n00:20:53.040 --> 00:20:54.950\nSo I got a user name, very exciting.\n\n438\n00:20:54.950 --> 00:20:58.780\nSo now, I'm gonna jump over here,\nand try and connect to that router.\n\n439\n00:20:58.780 --> 00:21:01.040\nOh, all right, I see what my problem is.\n\n440\n00:21:01.040 --> 00:21:02.460\nI'm doing this the Unix way.\n\n441\n00:21:02.460 --> 00:21:04.610\nSo, in Unix, you say, username@ an IP.\n\n442\n00:21:04.610 --> 00:21:08.240\nBut in a Cisco router, when you're\nactually ssh-ing from a Cisco router,\n\n443\n00:21:08.240 --> 00:21:11.600\nyou have to do ssh-l to\nspecify your login name.\n\n444\n00:21:11.600 --> 00:21:12.990\nSo I'm just giving it the name wrong.\n\n445\n00:21:12.990 --> 00:21:14.740\nSo let me try it that way.\n\n446\n00:21:14.740 --> 00:21:15.620\nThere we go.\n\n447\n00:21:15.620 --> 00:21:17.350\nAnd now I can get logged in.\n\n448\n00:21:17.350 --> 00:21:18.330\nAnd I'm connected.\n\n449\n00:21:18.330 --> 00:21:21.010\nNow when you get logged in and\nget connected, you're up and\n\n450\n00:21:21.010 --> 00:21:22.500\nyou're running and you're using SSH.\n\n451\n00:21:22.500 --> 00:21:23.000\nAll right?\n\n452\n00:21:23.000 --> 00:21:26.600\nWell it didn't show me here,\nbut when I connected,\n\n453\n00:21:26.600 --> 00:21:31.100\nit's connecting with what is called SSH\nversion one point nine nine, right?\n\n454\n00:21:31.100 --> 00:21:34.000\nWhat is SSH version one point nine nine?\n\n455\n00:21:34.000 --> 00:21:36.440\nWhen I go to branch one and\n\n456\n00:21:36.440 --> 00:21:41.680\nI do an \"ip ssh version\" I've\ngot two choices, 1 and 2.\n\n457\n00:21:41.680 --> 00:21:43.220\nSo what the heck is this 1.99?\n\n458\n00:21:43.220 --> 00:21:49.070\nWell, in the standard for SSH, there's\nonly two versions, version 1, version 2.\n\n459\n00:21:49.070 --> 00:21:53.160\nBut, if a server supports both 1 and\n\n460\n00:21:53.160 --> 00:21:58.180\n2, then it sets its version as 1.99\nto reflect that it supports both.\n\n461\n00:21:58.180 --> 00:22:00.820\nAnd that's how Cisco\nrouters are by default.\n\n462\n00:22:00.820 --> 00:22:04.820\nWell the problem here is that version\none is weaker than version two.\n\n463\n00:22:04.820 --> 00:22:07.670\nRight, they don't use\nthe same level of security.\n\n464\n00:22:07.670 --> 00:22:11.470\nAnd as a result, we normally want\nto connect with version two.\n\n465\n00:22:11.470 --> 00:22:14.490\nBut because version one is still\nsupported, we could in theory,\n\n466\n00:22:14.490 --> 00:22:16.010\nfall back to version one.\n\n467\n00:22:16.010 --> 00:22:20.660\nSo if I fire up a client like PUTTY or\nsome other S Save client that's out there\n\n468\n00:22:20.660 --> 00:22:23.270\nDo I really know if it's connecting\nversion two or version one?\n\n469\n00:22:23.270 --> 00:22:26.230\nIn theory, I could try and\nconnect version two but it could fail back\n\n470\n00:22:26.230 --> 00:22:29.360\nto version one and now I've got a weaker\nsession than I thought, all right?\n\n471\n00:22:29.360 --> 00:22:30.630\nAnd that's a problem that we have,\n\n472\n00:22:30.630 --> 00:22:33.180\nespecially since we don't\nnecessarily see it, right?\n\n473\n00:22:33.180 --> 00:22:37.150\nWhen I ssh N, it didn't tell me what\nversion I connected with, right?\n\n474\n00:22:37.150 --> 00:22:40.020\nIt just showed that login field\nright there for my password,\n\n475\n00:22:40.020 --> 00:22:42.340\nand then I got in and I'm in business.\n\n476\n00:22:42.340 --> 00:22:47.480\nOkay, so That's a bit of a risk so\nwe might choose to disable version one and\n\n477\n00:22:47.480 --> 00:22:49.860\nthat's what this command\nis all about right here.\n\n478\n00:22:49.860 --> 00:22:54.480\nIf you say IPSH's version,\nyou can hard set it to one or\n\n479\n00:22:54.480 --> 00:22:59.420\nyou can hard set it to two and if you\nremove the command, it goes back to both.\n\n480\n00:22:59.420 --> 00:23:04.060\nOr you can specify them in order,\nso I can say, like, two.\n\n481\n00:23:04.060 --> 00:23:05.630\nAnd it's just gonna go to two.\n\n482\n00:23:05.630 --> 00:23:08.730\nIf I go to one, oh,\nactually this router does not support it.\n\n483\n00:23:08.730 --> 00:23:12.550\nSome routers support we can provide it,\nin order, in which I have to try first.\n\n484\n00:23:12.550 --> 00:23:15.410\nSo, I guess, I try version one first and\nthen try version two.\n\n485\n00:23:15.410 --> 00:23:17.050\nOr, try version two first and\nthen version one.\n\n486\n00:23:17.050 --> 00:23:20.010\nAnd this router I have to hard set\none way or another otherwise it just\n\n487\n00:23:20.010 --> 00:23:24.270\nfalls back to the old method So\nI'll just say ip ssh version 2.\n\n488\n00:23:24.270 --> 00:23:28.010\nAnd now I'm no longer going to accept\nconnections on version one, so\n\n489\n00:23:28.010 --> 00:23:31.460\nthat's another way to tighten\nup that security on SSH.\n\n490\n00:23:31.460 --> 00:23:35.840\nSo again, auto secure is nice,\nit does all the basic things that\n\n491\n00:23:35.840 --> 00:23:39.450\nCisco considers the best practice,\nbut there's more, right?\n\n492\n00:23:39.450 --> 00:23:42.940\nThere's more that you may want to put in\nthere to tighten it up And you might have\n\n493\n00:23:42.940 --> 00:23:46.740\ndifferent needs in your network that go\nbeyond what's a standard best practice, so\n\n494\n00:23:46.740 --> 00:23:48.630\nyou may need and go and\nconfigure those too.\n\n495\n00:23:48.630 --> 00:23:53.860\nThere's a lot of different\nthings that you can do in there.\n\n496\n00:23:53.860 --> 00:24:00.944\nThere's actually a couple little\ncommands that might turn up on the exam.\n\n497\n00:24:00.944 --> 00:24:02.917\nI've got them all in the show notes but\n\n498\n00:24:02.917 --> 00:24:06.195\nI want to highlight just one more\nbefore I wrap this episode up.\n\n499\n00:24:06.195 --> 00:24:09.337\nBy default, there's no real password\npolicy on a Cisco router, and\n\n500\n00:24:09.337 --> 00:24:12.804\nthe reason is Cisco said, Look,\nif you want strong password enforcement,\n\n501\n00:24:12.804 --> 00:24:14.265\nyou really need to use a RADIUS or\n\n502\n00:24:14.265 --> 00:24:17.760\na TACACS server, and then you can do\nall the password enforcement you want.\n\n503\n00:24:17.760 --> 00:24:19.980\nYou can have time-expiring passwords and\nall that.\n\n504\n00:24:19.980 --> 00:24:22.481\nBut even if you don't\nhave a RADIUS server,\n\n505\n00:24:22.481 --> 00:24:25.860\nyou can still implement some\npassword policies here.\n\n506\n00:24:25.860 --> 00:24:27.840\nLike you can set a minimum\npassword length.\n\n507\n00:24:27.840 --> 00:24:32.510\nSo on the router if I get into my config,\nI can say security\n\n508\n00:24:33.640 --> 00:24:38.790\npasswords and then you will see\nI've got that minimum length field.\n\n509\n00:24:38.790 --> 00:24:41.495\nI can specify what the minimum length\nis and so I'll I'll say, like, 8.\n\n510\n00:24:41.495 --> 00:24:44.925\nI don't wanna create user accounts\nwith a password under 8 characters.\n\n511\n00:24:44.925 --> 00:24:46.815\nSo now, I've enforced that limit.\n\n512\n00:24:46.815 --> 00:24:49.205\nNow, end users can't change their\nown password on a Cisco router, so\n\n513\n00:24:49.205 --> 00:24:50.845\nthis is really just us as admins.\n\n514\n00:24:50.845 --> 00:24:53.725\nSo now, if I try and set a password too\nshort, it's gonna give me a warning.\n\n515\n00:24:53.725 --> 00:24:56.195\nNow, if I'm an admin, I could just\nturn this off, couldn't I, right?\n\n516\n00:24:56.195 --> 00:24:57.765\nSo it's really just a reminder for you.\n\n517\n00:24:57.765 --> 00:24:59.475\nIt's not such a great enforcement.\n\n518\n00:24:59.475 --> 00:25:02.595\nBut this is a way that we can apply that,\nand improve security.\n\n519\n00:25:02.595 --> 00:25:05.200\nSo just be aware, there is a bunch\nof different things like that.\n\n520\n00:25:05.200 --> 00:25:06.610\nBut are kind of back behind the scenes.\n\n521\n00:25:08.260 --> 00:25:10.900\nAll right,\nnow every thing that we've just done\n\n522\n00:25:10.900 --> 00:25:15.450\nis what falls under the realm of what's\ncalled Management Plane Security.\n\n523\n00:25:15.450 --> 00:25:18.870\nOn your router you've got\na couple of different planes.\n\n524\n00:25:18.870 --> 00:25:21.880\nYou've got the management plane,\nthe control plane, and the data plane.\n\n525\n00:25:21.880 --> 00:25:25.340\nThe data plane is data moving\nthrough router as fast as possible.\n\n526\n00:25:25.340 --> 00:25:27.960\nThe control plane is where\nyour routing table resides.\n\n527\n00:25:27.960 --> 00:25:30.505\nAnd your router makes decision\non where to send the traffic.\n\n528\n00:25:30.505 --> 00:25:32.750\nThat's where most data goes by default.\n\n529\n00:25:32.750 --> 00:25:37.060\nThe management plane though,\nthat's traffic destined for your router.\n\n530\n00:25:37.060 --> 00:25:38.600\nIt is usually management traffic and\n\n531\n00:25:38.600 --> 00:25:43.210\nall the things we were doing right there\nwas really securing that management plane.\n\n532\n00:25:43.210 --> 00:25:46.860\nSome of it, like the IP spoofing ACL,\n\n533\n00:25:46.860 --> 00:25:49.140\nthat would be securing more\nof our data plane, right?\n\n534\n00:25:49.140 --> 00:25:51.410\nBad data coming into the network and\nwe filter it out.\n\n535\n00:25:51.410 --> 00:25:54.220\nBut securing SSH, setting passwords,\n\n536\n00:25:54.220 --> 00:25:57.280\nthings like that, that falls under\nthat Management Plane Security.\n\n537\n00:25:57.280 --> 00:26:00.520\nSo on the exam if you see them talking\nabout management plane, control plane,\n\n538\n00:26:00.520 --> 00:26:04.320\ndata plane, it's different\ntypes of security for each one.\n\n539\n00:26:04.320 --> 00:26:07.080\nTechnically when we did OSPF passwords or\n\n540\n00:26:07.080 --> 00:26:09.490\nBGP passwords,\nthat's control plane, right?\n\n541\n00:26:09.490 --> 00:26:10.860\nAnd so we're starting to protect there.\n\n542\n00:26:10.860 --> 00:26:12.160\nSo just different levels.\n\n543\n00:26:12.160 --> 00:26:15.360\nIt's really all important, no one level\nis more important than the other.\n\n544\n00:26:15.360 --> 00:26:19.260\nAll right, well that's about all\nI've got for device access control.\n\n545\n00:26:19.260 --> 00:26:22.520\nWe are gonna see more security in\nanother episode as we tackle ACLs,\n\n546\n00:26:22.520 --> 00:26:26.040\nwe'll get to revisit those and see some\nhighlights there, so stay tuned for that.\n\n547\n00:26:26.040 --> 00:26:29.923\nBut otherwise, in this episode we got\na chance to see the auto secure script,\n\n548\n00:26:29.923 --> 00:26:33.808\nsome of the basic security best practices\nand a few other options and bells and\n\n549\n00:26:33.808 --> 00:26:36.110\nwhistles we can turn on\nto secure our router.\n\n550\n00:26:36.110 --> 00:26:38.092\nAll right, well,\nI hope you guys enjoyed the episode,\n\n551\n00:26:38.092 --> 00:26:39.620\nstay tuned cuz we've got more coming up.\n\n552\n00:26:39.620 --> 00:26:43.900\nBut for now, signing off for ITProTV,\nI'm Don Pezet, and I'll see you next time.\n\n553\n00:26:43.900 --> 00:26:49.980\n[SOUND]\n\n",
          "vimeoId": "138776539"
        },
        {
          "description": "Understanding how the different security features inside a router function, can help to properly and effectively implement them to protect a system. Viewers will hear about some of the security features inside a router including different access control lists that filter traffic passing through a router, reverse path verification and also Unicast Reverse Path Forwarding (URPF).",
          "length": "1705",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/ccnproute/cisco-ccnproute300101-5-4-router_security_features-090415-1.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/ccnproute/cisco-ccnproute300101-5-4-router_security_features-090415-1-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/ccnproute/cisco-ccnproute300101-5-4-router_security_features-090415-1-sm.jpg",
          "title": "Router Security Features",
          "transcript": "WEBVTT\n\n1\n00:00:00.000 --> 00:00:10.588\n[MUSIC]\n\n2\n00:00:10.588 --> 00:00:13.258\nAlright, good morning,\ngood afternoon and good evening and\n\n3\n00:00:13.258 --> 00:00:15.221\nwelcome back to another\nepisode of ITProTV.\n\n4\n00:00:15.221 --> 00:00:19.860\nI'm your host Don Pezet Back here with\nanother episode of CCNP Route, and\n\n5\n00:00:19.860 --> 00:00:22.880\nin this episode we're going to be diving\ninto some of the security features\n\n6\n00:00:22.880 --> 00:00:23.690\ninside of our router.\n\n7\n00:00:23.690 --> 00:00:26.270\nNow it sounds like we're going to be\nhitting a bunch of security features, but\n\n8\n00:00:26.270 --> 00:00:28.720\nreally we're focusing in on two things.\n\n9\n00:00:28.720 --> 00:00:30.370\nRIght.\nWe're going to be taking a look at access\n\n10\n00:00:30.370 --> 00:00:34.100\ncontrol lists, and basically filtering\ntraffic as it passes through our router.\n\n11\n00:00:34.100 --> 00:00:37.320\nAnd we're gonna take a look at some\nreverse path verification we can do on\n\n12\n00:00:37.320 --> 00:00:38.250\nthe routers that is pretty neat.\n\n13\n00:00:38.250 --> 00:00:42.260\nLet's start with the access control list,\nas far as ACL's go,\n\n14\n00:00:42.260 --> 00:00:46.260\nyou should have already completed your\nCCNA at this point and you got a pretty\n\n15\n00:00:46.260 --> 00:00:50.850\ngood exposure to ACL's so you've pretty\nmuch already learned how they work, right?\n\n16\n00:00:50.850 --> 00:00:52.380\nWell, that is true For\n\n17\n00:00:52.380 --> 00:00:56.190\nthis exam you need to be able to write\nACL's without thinking about it.\n\n18\n00:00:56.190 --> 00:01:00.070\nJust be able to churn them out and punch\nthem in and be able to look at ACL's and\n\n19\n00:01:00.070 --> 00:01:01.190\nunderstand how they function.\n\n20\n00:01:01.190 --> 00:01:05.040\nSo if you're not fully comfortable with\nACL's definitely jump back to the CCNA\n\n21\n00:01:05.040 --> 00:01:08.250\nshow to get a quick review of those and\nget your basics.\n\n22\n00:01:08.250 --> 00:01:11.630\nBut what I want to do is,\nI want to take a look at the ACLs, and\n\n23\n00:01:11.630 --> 00:01:13.900\nsome of the more advanced features\nthat we can tack on to them,\n\n24\n00:01:13.900 --> 00:01:18.810\nthings that didn't get covered in the CCNA\nthat might turn up on the CCNP exam, okay?\n\n25\n00:01:18.810 --> 00:01:20.420\nSo just as a quick refresher,\n\n26\n00:01:20.420 --> 00:01:24.190\nif I want to create an axis control list,\nI've really got two choices.\n\n27\n00:01:24.190 --> 00:01:28.080\nI can create standard ACLs,\nand extended ACLs, right?\n\n28\n00:01:28.080 --> 00:01:33.640\nStandard ACLs filter only\nbased on source address and\n\n29\n00:01:33.640 --> 00:01:38.740\nextended ACLs can filter on source or\ndestination and protocol.\n\n30\n00:01:38.740 --> 00:01:39.310\nRight?\nSo\n\n31\n00:01:39.310 --> 00:01:42.660\na lot more functionality\non an extended ACL.\n\n32\n00:01:42.660 --> 00:01:46.550\nNow, if the extended is better,\nwhy don't we use them all the time?\n\n33\n00:01:46.550 --> 00:01:52.030\nWell, remember from the exam,\nStandard ACLs give you better performance.\n\n34\n00:01:52.030 --> 00:01:55.060\nExtended ACLs give you better flexibility.\n\n35\n00:01:55.060 --> 00:01:57.770\nSo an extended ACL I can\ndo all sorts of stuff.\n\n36\n00:01:57.770 --> 00:02:02.060\nBut the router has to decode more\nof the packet to use them, right?\n\n37\n00:02:02.060 --> 00:02:03.460\nThink about a standard ACL.\n\n38\n00:02:03.460 --> 00:02:06.730\nA standard ACL, all I have to do\nis look at the source IP address.\n\n39\n00:02:06.730 --> 00:02:09.810\nThe source IP address is stored in\nthe layer three header of a packet.\n\n40\n00:02:09.810 --> 00:02:13.070\nAnd your router already has to\nlook at the layer three header of\n\n41\n00:02:13.070 --> 00:02:14.170\nthe packet, doesn't it?\n\n42\n00:02:14.170 --> 00:02:15.670\nIt's gotta look at it to\nfind the destination.\n\n43\n00:02:15.670 --> 00:02:17.000\nTo figure out where we're going.\n\n44\n00:02:17.000 --> 00:02:21.050\nSo a standard ACL is looking at\ndata that your router already has.\n\n45\n00:02:21.050 --> 00:02:23.780\nYour router doesn't have to do\nany extra work to find that.\n\n46\n00:02:23.780 --> 00:02:26.810\nThe only extra work it has to do\nis running it against the ACL.\n\n47\n00:02:26.810 --> 00:02:29.730\nAn extended ACL is different though.\n\n48\n00:02:29.730 --> 00:02:33.240\nWe have to look at the source and\ndestination IP, which we're already doing.\n\n49\n00:02:33.240 --> 00:02:34.680\nBut now we're looking at protocol.\n\n50\n00:02:34.680 --> 00:02:36.650\nAnd where are we going to find protocol?\n\n51\n00:02:36.650 --> 00:02:39.670\nWell if it's TCP or\nUDP that's going to be at layer four.\n\n52\n00:02:39.670 --> 00:02:42.390\nAnd then the session layer\nprotocol up at layer five.\n\n53\n00:02:42.390 --> 00:02:45.290\nIf I'm to filter web traffic or\nFTp or whatever.\n\n54\n00:02:45.290 --> 00:02:47.970\nSo it's gotta go all the way up\nto layer five in the OSI model.\n\n55\n00:02:47.970 --> 00:02:51.230\nThat's two layers higher than your\nrouter's normally gonna bother with.\n\n56\n00:02:51.230 --> 00:02:53.870\nSo now your router has to do extra work\n\n57\n00:02:53.870 --> 00:02:57.860\njust to get the data to throw against\nthe extended ACL to verify it.\n\n58\n00:02:57.860 --> 00:03:00.140\nAnd that creates a performance hit.\n\n59\n00:03:00.140 --> 00:03:02.930\nNow on a branch router or\neven on a headquarters router for\n\n60\n00:03:02.930 --> 00:03:05.180\na small medium business,\nit's probably negligible.\n\n61\n00:03:05.180 --> 00:03:08.970\nBut if you're an ISP and you're moving\nmillions of packets per second,\n\n62\n00:03:08.970 --> 00:03:12.720\nEvery little moment of time counts,\nand that can start to add up.\n\n63\n00:03:12.720 --> 00:03:15.890\nSo if you ever have the opportunity\nto use a standard ACL, you should.\n\n64\n00:03:15.890 --> 00:03:17.860\nYou'll get better performance.\n\n65\n00:03:17.860 --> 00:03:21.130\nBut there's times where you need\nthe extended, you need to filter on\n\n66\n00:03:21.130 --> 00:03:24.570\ndestination IP or protocol, and\nyou gotta go extended for that.\n\n67\n00:03:24.570 --> 00:03:25.550\nAll right?\n\n68\n00:03:25.550 --> 00:03:29.040\nSo if I wanna just bang out Got\na couple of quick examples here, right?\n\n69\n00:03:29.040 --> 00:03:32.540\nAnd I don't want to spend a ton of time on\nthis because most of you guys already know\n\n70\n00:03:32.540 --> 00:03:37.800\nthis, but as a review, if I want to create\na standard ACL that blocks a network or\n\n71\n00:03:37.800 --> 00:03:42.310\na host or something, maybe I want\nto block the 192.168.0.0 network.\n\n72\n00:03:42.310 --> 00:03:47.270\nI can come in and\nI can say \"access-list\" And a number.\n\n73\n00:03:47.270 --> 00:03:50.876\nAnd standard ACLs are 1-99 and,\n\n74\n00:03:50.876 --> 00:03:54.840\nthen we jump up to the higher range,\nwe have these expanded ranges, 1300-1999.\n\n75\n00:03:54.840 --> 00:03:59.790\nSo, I've got to pick a number in those\nranges, so I might to access-list 1.\n\n76\n00:03:59.790 --> 00:04:02.800\nAnd then I can say permit or\ndeny, I want to deny,\n\n77\n00:04:02.800 --> 00:04:07.700\nand then the network, so\nI want the 192.168.0.0 network.\n\n78\n00:04:08.890 --> 00:04:12.700\nAnd then, I want to apply a wildcard\nmask to say that I'm getting the whole\n\n79\n00:04:12.700 --> 00:04:13.900\nnetwork, right?\n\n80\n00:04:13.900 --> 00:04:18.140\nI want to say 0.0.0, which means\nif it starts with 192.168.0, and\n\n81\n00:04:18.140 --> 00:04:23.550\nthen 255 which means that last octet\ncan be whatever it wants, right?\n\n82\n00:04:23.550 --> 00:04:27.240\nThat whole network,\nI want to block that network.\n\n83\n00:04:27.240 --> 00:04:31.160\nIf I wanted to block an individual host,\nit's a little bit different.\n\n84\n00:04:31.160 --> 00:04:34.418\nI could say deny an IP of that host.\n\n85\n00:04:34.418 --> 00:04:38.382\nMaybe 172.16.0.200.\n\n86\n00:04:38.382 --> 00:04:41.360\nAnd then I need every bit to match.\n\n87\n00:04:41.360 --> 00:04:42.650\nThat would be 0.0.0.0.\n\n88\n00:04:42.650 --> 00:04:45.550\nThat's one way to write it.\n\n89\n00:04:45.550 --> 00:04:46.809\nAnother way to write it.\n\n90\n00:04:48.310 --> 00:04:50.960\nWould be to say host 172.16.0.201.\n\n91\n00:04:50.960 --> 00:04:55.010\nThos two lines are effectively the same,\n\n92\n00:04:55.010 --> 00:04:59.690\none uses a wildcard mask,\none uses the host keyword.\n\n93\n00:04:59.690 --> 00:05:05.030\nAnd then if I want to permit everybody\nelse, we can use the any keyword.\n\n94\n00:05:05.030 --> 00:05:07.810\nAnd that's all stuff you\nlearn on the CCNA side,\n\n95\n00:05:07.810 --> 00:05:10.530\nnothing new and exciting there, right?\n\n96\n00:05:10.530 --> 00:05:12.480\nExtended ACLs are basically the same.\n\n97\n00:05:13.650 --> 00:05:15.170\nExcept we use a higher number.\n\n98\n00:05:15.170 --> 00:05:16.840\nRight.\nSo maybe I'll do 101.\n\n99\n00:05:16.840 --> 00:05:19.930\nAnd on these we permit or deny.\n\n100\n00:05:19.930 --> 00:05:24.250\nBut then we have to specify\nwhether it's TCP, UDP, IP.\n\n101\n00:05:24.250 --> 00:05:27.440\nRight.\nYou gotta specify the different\n\n102\n00:05:27.440 --> 00:05:28.200\nmain protocol.\n\n103\n00:05:28.200 --> 00:05:30.220\nRight.\nThe different layer for protocol.\n\n104\n00:05:30.220 --> 00:05:35.710\nAnd so I'm gonna say,\nI want to deny unencrypted Web traffic.\n\n105\n00:05:35.710 --> 00:05:40.700\nSo I'll say TCP from any source\n\n106\n00:05:40.700 --> 00:05:45.370\nto any destination where\nthe protocol equals 80.\n\n107\n00:05:45.370 --> 00:05:46.570\nRight.\n\n108\n00:05:46.570 --> 00:05:48.005\nSo it's going to be.\n\n109\n00:05:48.005 --> 00:05:50.425\nTCP port 80, right.\n\n110\n00:05:50.425 --> 00:05:52.875\nThat's what I'm filtering on that line.\n\n111\n00:05:52.875 --> 00:05:57.325\nAnd you can get really specific on this\nstuff with source ports and destination\n\n112\n00:05:57.325 --> 00:06:04.730\nports so if I were to write this all\nthe way out I could say access 101 deny.\n\n113\n00:06:04.730 --> 00:06:07.170\nTCP or UDP, right?\n\n114\n00:06:07.170 --> 00:06:09.880\nSo maybe this is a UDP type thing, right?\n\n115\n00:06:09.880 --> 00:06:12.500\nUDP would be like our voiceover for\nIP traffic.\n\n116\n00:06:12.500 --> 00:06:16.030\nSo I'm might wanna block a particular\nclient getting to a particular server.\n\n117\n00:06:16.030 --> 00:06:20.330\nAnd so for the client,\nI might say host 192.168.0.1.\n\n118\n00:06:20.330 --> 00:06:26.760\nAnd for the protocol,\nwe use EQ a lot, right, equals.\n\n119\n00:06:26.760 --> 00:06:29.960\nBut you've got less than, you've got\ngreater than and you've got range.\n\n120\n00:06:29.960 --> 00:06:35.170\nAnd so if this is going to be some UDP\ncommunications I might have a range and\n\n121\n00:06:35.170 --> 00:06:39.226\nnow I can come in and I can start to\nspecify what that range is and so\n\n122\n00:06:39.226 --> 00:06:43.310\nmaybe it's 10,000 to\n20000 that's the range.\n\n123\n00:06:43.310 --> 00:06:46.040\nAnd then I can specify the server\nthat they're pointing to\n\n124\n00:06:46.040 --> 00:06:49.550\nwhich might be another host or\na network or whatever.\n\n125\n00:06:49.550 --> 00:06:55.550\nSo you know, maybe it's 172.16.0.200,\nwhere his port equals 5060, right?\n\n126\n00:06:56.830 --> 00:07:00.410\nSo now,\nthat ends up being a nice long, line.\n\n127\n00:07:00.410 --> 00:07:02.130\nLet's, let's take a look\nat that in the config.\n\n128\n00:07:05.630 --> 00:07:07.680\nSo we can see kinda\nthe whole thing right here.\n\n129\n00:07:07.680 --> 00:07:13.680\nSo we get that access list 101, and\nif my auto-connect window would go away.\n\n130\n00:07:13.680 --> 00:07:14.410\nThere we go.\n\n131\n00:07:14.410 --> 00:07:19.850\nAccess list 101, I'm denying from\na host with a source of a range\n\n132\n00:07:19.850 --> 00:07:25.160\nof ports going to a destination where the\nport equals One port in specific, right.\n\n133\n00:07:25.160 --> 00:07:28.070\nThat's a lot more powerful than what\nwe can do with standard ACL right.\n\n134\n00:07:28.070 --> 00:07:30.680\nVery detailed,\nvery in depth view there all right.\n\n135\n00:07:32.340 --> 00:07:34.210\nCouple extra things that we can do.\n\n136\n00:07:34.210 --> 00:07:35.990\nWhen we write one of these lines.\n\n137\n00:07:37.000 --> 00:07:38.910\nWhen I come in and say something,\n\n138\n00:07:38.910 --> 00:07:43.230\nwhoops, as simple as this,\naccess-list permit ip any any.\n\n139\n00:07:44.510 --> 00:07:46.240\nI can run that, and\nit's going to set it up,\n\n140\n00:07:46.240 --> 00:07:48.650\nit's going to allow everybody through,\nbut if you do a question mark,\n\n141\n00:07:48.650 --> 00:07:50.750\nyou'll see there are some other\nthings we can tack on to the end.\n\n142\n00:07:50.750 --> 00:07:53.800\nOh, if we actually give\nit an access-list number.\n\n143\n00:07:53.800 --> 00:07:55.370\nSo, what number was I working with?\n\n144\n00:07:55.370 --> 00:07:56.455\n101, there we go.\n\n145\n00:07:56.455 --> 00:08:00.791\nSo, if I do a question mark, you'll see\nthere's actually some other things that we\n\n146\n00:08:00.791 --> 00:08:03.735\ncan tack on to it, like DSP,\nour diff serve code points.\n\n147\n00:08:03.735 --> 00:08:07.383\nIf you're doing quality of service,\nYou might be tagging the frames on your\n\n148\n00:08:07.383 --> 00:08:10.746\nnetwork to identify them as being\na certain TOS level and we can look for\n\n149\n00:08:10.746 --> 00:08:15.090\nthe dscp on those, or the type of service\nthat TOS, if you're using TOS values.\n\n150\n00:08:15.090 --> 00:08:20.000\nWe can do other things like setting\ntime ranges or logging the traffic.\n\n151\n00:08:20.000 --> 00:08:22.770\nNow logging,\nI think we cover that in CCNA pretty well.\n\n152\n00:08:22.770 --> 00:08:24.940\nBut, time ranges we probably didn't.\n\n153\n00:08:24.940 --> 00:08:29.590\nSometimes we wanna create an ACL that only\napplies during a certain window of time.\n\n154\n00:08:29.590 --> 00:08:30.640\nAt a certain period.\n\n155\n00:08:30.640 --> 00:08:35.520\nSo, for example,\nmaybe in my company I don't allow\n\n156\n00:08:35.520 --> 00:08:39.770\npeople to get to the internet, to browse\nthe web, except during their lunch break.\n\n157\n00:08:39.770 --> 00:08:45.730\nSo I wanna create an ACL that blocks web\ntraffic all the time, Except during lunch.\n\n158\n00:08:45.730 --> 00:08:46.830\nDuring lunch I want to allow them in.\n\n159\n00:08:46.830 --> 00:08:47.990\nAll right.\n\n160\n00:08:47.990 --> 00:08:49.560\nSo how do we do that?\n\n161\n00:08:49.560 --> 00:08:52.710\nWell, first off we need to\ncreate what's called a schedule.\n\n162\n00:08:52.710 --> 00:08:56.300\nThe schedule is how we define when\nthey're allowed to do something.\n\n163\n00:08:56.300 --> 00:08:57.400\nSo I've got to create a schedule.\n\n164\n00:08:57.400 --> 00:08:59.110\nAnd the neat part is once you\ncreate a schedule you can\n\n165\n00:08:59.110 --> 00:09:00.410\nreuse it all over the place.\n\n166\n00:09:00.410 --> 00:09:03.660\nSo if I create a lunch time schedule I\ncan use that for any number of rules.\n\n167\n00:09:03.660 --> 00:09:05.570\nSo if I want to see something like that.\n\n168\n00:09:05.570 --> 00:09:10.100\nI can come in here and I can say\ntime-range, and I can define my range.\n\n169\n00:09:10.100 --> 00:09:14.510\nI'm gonna create a range\ncalled lunch-time, all right?\n\n170\n00:09:14.510 --> 00:09:16.120\nSo I'm creating a time\nrange called lunch-time,\n\n171\n00:09:16.120 --> 00:09:19.190\nand then I'm gonna say that it's periodic.\n\n172\n00:09:19.190 --> 00:09:20.770\nLet's look at the options in here.\n\n173\n00:09:20.770 --> 00:09:23.280\nPeriodic means that it's over and\nover and over again, right?\n\n174\n00:09:23.280 --> 00:09:27.730\nBut you can do an absolute if I'm\nsaying this time on a particular day,\n\n175\n00:09:27.730 --> 00:09:29.930\nmaybe I wanna really dial this in.\n\n176\n00:09:29.930 --> 00:09:34.480\nSo I have a rule that just\nblocks VPN access on Christmas.\n\n177\n00:09:34.480 --> 00:09:36.150\nRight?\nSo I can come in and set that up just for\n\n178\n00:09:36.150 --> 00:09:38.120\nDecember 25th or\nhowever you wanted to go on that.\n\n179\n00:09:38.120 --> 00:09:38.870\nRight?\n\n180\n00:09:38.870 --> 00:09:44.040\nSo but I'm gonna do periodic, cuz this is\ngonna be one that happens every day And\n\n181\n00:09:44.040 --> 00:09:45.790\nyou can specify exactly what days.\n\n182\n00:09:45.790 --> 00:09:49.830\nAnd they have a nice little alias here for\nme, which is weekdays, right?\n\n183\n00:09:49.830 --> 00:09:54.370\nAnd then I can set the start time,\nwhich I'll go noon.\n\n184\n00:09:54.370 --> 00:09:58.990\nAnd then to then end time,\nwhich I'll do as 1 pm.\n\n185\n00:10:00.300 --> 00:10:04.990\nSo now I've created a time range called\nlunch time that runs from noon until 1 pm.\n\n186\n00:10:06.010 --> 00:10:09.320\nAnd so now I can create an access list.\n\n187\n00:10:09.320 --> 00:10:17.060\nSo I might say like access-list 102 permit\ntcp and I'm gonna permit that web traffic.\n\n188\n00:10:17.060 --> 00:10:21.250\nSo from any source to any destination\nwhere the destination port equals 80 but\n\n189\n00:10:21.250 --> 00:10:24.620\nthen I'm gonna stick a time range on it.\n\n190\n00:10:24.620 --> 00:10:30.020\nAnd you'll see I've got that option right\nthere so I can say time- range Lunch-time.\n\n191\n00:10:30.020 --> 00:10:30.630\nOkay.\n\n192\n00:10:30.630 --> 00:10:34.060\nSo now this rule will only\napply between noon and 1.\n\n193\n00:10:34.060 --> 00:10:35.810\nI need to make sure\nthe clock's right on my router.\n\n194\n00:10:35.810 --> 00:10:40.830\nBut from noon until 1,\nI'll be allowing that traffic.\n\n195\n00:10:40.830 --> 00:10:46.880\nAnd then right after that I can put\nanother rule That denies it, right?\n\n196\n00:10:46.880 --> 00:10:49.710\nDenies that same traffic, okay?\n\n197\n00:10:49.710 --> 00:10:53.400\nWhat's gonna happen is between noon and\none, web traffic will match this rule.\n\n198\n00:10:53.400 --> 00:10:54.330\nThis is the first rule.\n\n199\n00:10:54.330 --> 00:10:56.080\nIt takes effect first.\n\n200\n00:10:56.080 --> 00:10:59.550\nBut outside of noon and one,\nthis rule no longer applies.\n\n201\n00:10:59.550 --> 00:11:00.800\nPeople go to the second rule.\n\n202\n00:11:00.800 --> 00:11:03.290\nRules are applied top down and\nthey hit this one and\n\n203\n00:11:03.290 --> 00:11:05.030\nnow they can't get to the web.\n\n204\n00:11:05.030 --> 00:11:09.470\nSo I'm able to filter that traffic\nout by creating some creative rules.\n\n205\n00:11:09.470 --> 00:11:11.780\nSo this is a time range\nbeing applied to a rule and\n\n206\n00:11:11.780 --> 00:11:13.650\nit's a function that a lot\nof people aren't aware of.\n\n207\n00:11:13.650 --> 00:11:14.540\nIt's pretty easy to setup.\n\n208\n00:11:16.190 --> 00:11:20.160\nI probably want to continue\non with this access list and\n\n209\n00:11:20.160 --> 00:11:22.710\nconfigure anything else\nthat I need to configure.\n\n210\n00:11:22.710 --> 00:11:27.450\nBut there we go,\nI got a basic ACL in place.\n\n211\n00:11:27.450 --> 00:11:30.400\nI've been using numbered\nACL's on the exam.\n\n212\n00:11:30.400 --> 00:11:33.720\nIt's far more likely that you're\ngoing to see named ACL's.\n\n213\n00:11:33.720 --> 00:11:34.960\nSo definitely be comfortable with that.\n\n214\n00:11:34.960 --> 00:11:37.540\nThere's a reason you're\nseeing named ACL's more.\n\n215\n00:11:37.540 --> 00:11:40.080\nAnd that's because of IPV6.\n\n216\n00:11:40.080 --> 00:11:43.220\nWith IPV6,\nwhen you create IPV6 traffic filters,\n\n217\n00:11:43.220 --> 00:11:46.050\nyou almost always use named ACL's for\nthem, and so\n\n218\n00:11:46.050 --> 00:11:49.630\nthat's kinda the new format for that, and\nthat's what really needs to get use to.\n\n219\n00:11:49.630 --> 00:11:52.490\nSo let me show you guys a named ACL.\n\n220\n00:11:52.490 --> 00:11:56.240\nIf I wanted to make this same ACL here,\nthis lunchtime one, but\n\n221\n00:11:56.240 --> 00:11:59.560\nmake it as a named ACL,\nthe syntax is a little bit different.\n\n222\n00:11:59.560 --> 00:12:02.830\nWhat we do is, we say ip access-list And\n\n223\n00:12:02.830 --> 00:12:05.830\nthen we have to tell it if\nit's extended or standard.\n\n224\n00:12:05.830 --> 00:12:08.410\nAnd the reason is with a numbered ACL\nyou can look at the number and know.\n\n225\n00:12:08.410 --> 00:12:11.900\nBut if I give it a name it has no\nidea if it's standard or extended, so\n\n226\n00:12:11.900 --> 00:12:12.970\nI'm gonna tell it that it's extended.\n\n227\n00:12:12.970 --> 00:12:15.230\nAnd then I'll give it a name.\n\n228\n00:12:15.230 --> 00:12:17.110\nI'll call this one outbound-internet,\nright?\n\n229\n00:12:17.110 --> 00:12:20.670\nI'm gonna apply this to my Internet\nconnection for outbound traffic.\n\n230\n00:12:20.670 --> 00:12:22.240\nAnd now I'm in my named ACL.\n\n231\n00:12:22.240 --> 00:12:25.470\nMy prompt changes and\nI can start to apply my lines.\n\n232\n00:12:25.470 --> 00:12:27.540\nAnd when I apply the lines I\ncan give them sequence numbers,\n\n233\n00:12:27.540 --> 00:12:30.780\nwhich lets me move them around and\nhave a little bit more flexibility there.\n\n234\n00:12:30.780 --> 00:12:35.770\nSo I can say something like ten permit,\nand I'll do TCP any\n\n235\n00:12:35.770 --> 00:12:41.330\nany EQ 80 time range lunch-time, right?\n\n236\n00:12:41.330 --> 00:12:46.090\nAnd then 20 deny tcp any any eq 80,\n\n237\n00:12:46.090 --> 00:12:50.850\nthat's gonna block it the rest of the\ntime, and then I can say 30 permit ip any\n\n238\n00:12:50.850 --> 00:12:56.300\nany, and now I've recreated that\nsame list as a named ACL, all right?\n\n239\n00:12:56.300 --> 00:13:01.410\nIf I take a look at these\nin the config All right?\n\n240\n00:13:01.410 --> 00:13:04.410\nSo if I take a look at how these\nmade it into the config, well,\n\n241\n00:13:04.410 --> 00:13:07.250\nhere's my extended ACL as\nI wrote it right here.\n\n242\n00:13:07.250 --> 00:13:12.190\nAnd well, here's my extended one if\nI can highlight it, there we go.\n\n243\n00:13:12.190 --> 00:13:14.630\nSo there's the extended ACL\nthat I wrote originally,\n\n244\n00:13:14.630 --> 00:13:17.330\nand that 102 is how it\nknows that it's extended.\n\n245\n00:13:17.330 --> 00:13:21.820\nBut if I scroll up here,\nhere's the Named ACL and it's defined.\n\n246\n00:13:21.820 --> 00:13:24.100\nAnd notice how I don't see\nthe line numbers, right.\n\n247\n00:13:24.100 --> 00:13:27.410\nI assigned line numbers when I put them\nin, but they get hidden from the config.\n\n248\n00:13:27.410 --> 00:13:30.600\nAnd that's because if I reboot,\nit's just gonna renumber them for me.\n\n249\n00:13:30.600 --> 00:13:32.410\nIt'll keep them in the right order, but\n\n250\n00:13:32.410 --> 00:13:36.000\nif you put your numbers too close together\nit'll kind of introduce a gap on it's own.\n\n251\n00:13:36.000 --> 00:13:39.710\nYou can see the line numbers when\nyou do show access dash list And\n\n252\n00:13:39.710 --> 00:13:40.600\nyou start to look at them there.\n\n253\n00:13:40.600 --> 00:13:42.580\nIt puts the line numbers back in, right?\n\n254\n00:13:42.580 --> 00:13:45.690\nAnd that's important because\nsometimes you end up with these\n\n255\n00:13:45.690 --> 00:13:47.670\nwhere they're in a different order, right?\n\n256\n00:13:47.670 --> 00:13:48.750\nSo we gotta pay attention to that.\n\n257\n00:13:48.750 --> 00:13:50.050\nThis one, you guys will remember.\n\n258\n00:13:50.050 --> 00:13:52.620\nWhen I created that ACL,\nI put that one in first.\n\n259\n00:13:52.620 --> 00:13:53.820\nAnd so it's showing it as line 10.\n\n260\n00:13:53.820 --> 00:13:56.510\nIt knows that it's first, but\nit's being reorganized here.\n\n261\n00:13:56.510 --> 00:13:59.270\nNow, why is it being reorganized?\n\n262\n00:13:59.270 --> 00:14:02.190\nThe reason is your router is\ngonna take the ACL you wrote and\n\n263\n00:14:02.190 --> 00:14:03.990\nit's going to compile it.\n\n264\n00:14:03.990 --> 00:14:06.450\nRight?\nCompile it means it's gonna rearrange it\n\n265\n00:14:06.450 --> 00:14:08.940\ninto an order that doesn't\nchange the behavior of the list.\n\n266\n00:14:08.940 --> 00:14:11.170\nThe list still works the way you want it.\n\n267\n00:14:11.170 --> 00:14:11.850\nBut it's gonna opt.\n\n268\n00:14:11.850 --> 00:14:14.110\nOptimize it to make it run faster.\n\n269\n00:14:14.110 --> 00:14:16.700\nOk?\nWhat it's doing is that saying are these\n\n270\n00:14:16.700 --> 00:14:17.850\nthree are denies.\n\n271\n00:14:17.850 --> 00:14:20.880\nSince they're all denies,\ndoesn't matter which happens first?\n\n272\n00:14:20.880 --> 00:14:22.030\nNot really, right?\n\n273\n00:14:22.030 --> 00:14:23.060\nThey're all denies.\n\n274\n00:14:23.060 --> 00:14:24.720\nThe one that matches most\ndown hits moment deny.\n\n275\n00:14:24.720 --> 00:14:26.480\nRight?\nSo, the order for\n\n276\n00:14:26.480 --> 00:14:28.650\nthese doesn't necessarily matter.\n\n277\n00:14:28.650 --> 00:14:31.660\nAnd so, then it looks at the prefixes And\n\n278\n00:14:31.660 --> 00:14:34.220\nit organizes them from\nlowest prefix to highest.\n\n279\n00:14:34.220 --> 00:14:37.050\n172 is a lower number than 192.\n\n280\n00:14:37.050 --> 00:14:40.740\nSo that way, when it starts to look\nat packets that are coming in from\n\n281\n00:14:40.740 --> 00:14:43.110\nthe network, it can run them down\nthe list and they're in order.\n\n282\n00:14:43.110 --> 00:14:45.920\nIt can quickly find the prefix\nthat it's looking for.\n\n283\n00:14:45.920 --> 00:14:48.120\nSo it's compiling it.\n\n284\n00:14:48.120 --> 00:14:50.010\nAnd so, even though we put\nthose line numbers in, or\n\n285\n00:14:50.010 --> 00:14:52.030\neven if you don't,\nit might reorganize those.\n\n286\n00:14:52.030 --> 00:14:54.050\nAnd that's why you might\nsee things mixed up.\n\n287\n00:14:54.050 --> 00:14:57.380\nOn a lot of my other ACLs, they're too\nsmall to have any great reorganization, so\n\n288\n00:14:57.380 --> 00:14:58.400\nyou don't see that.\n\n289\n00:14:58.400 --> 00:15:01.535\nBut here we can see the line numbers that\nI used when I put that one in, 10, 20,\n\n290\n00:15:01.535 --> 00:15:02.820\n30 all showing up right there.\n\n291\n00:15:06.080 --> 00:15:10.760\nAll right, and then, just kinda last thing\nto remember is how we apply these ACLs.\n\n292\n00:15:10.760 --> 00:15:13.010\nIf you wanna attach\nan ACL to an interface,\n\n293\n00:15:13.010 --> 00:15:14.940\nyou just jump in your configuration.\n\n294\n00:15:14.940 --> 00:15:20.040\nYou get into the desired interface and\nin here you can just say IP,\n\n295\n00:15:20.040 --> 00:15:23.495\noops sorry it's not IP it's just\naccess dash, what is it doing,\n\n296\n00:15:23.495 --> 00:15:26.900\n[LAUGH] we'll see if I can\njust screw this up here.\n\n297\n00:15:26.900 --> 00:15:31.090\nYou just jump right into the interface and\nyou say IP access-group.\n\n298\n00:15:31.090 --> 00:15:31.680\nThere we go.\n\n299\n00:15:33.330 --> 00:15:36.880\nAnd then you specify the number or\nthe name of the ACL.\n\n300\n00:15:36.880 --> 00:15:39.330\nSo I might call mine outbound-internet.\n\n301\n00:15:39.330 --> 00:15:43.220\nAnd then you specify whether it's\nan incoming or outgoing ACL.\n\n302\n00:15:43.220 --> 00:15:45.170\nRight?\nIt's gotta have a direction.\n\n303\n00:15:45.170 --> 00:15:46.870\nSo mine's designed for outgoing traffic.\n\n304\n00:15:46.870 --> 00:15:49.720\nAs people are browsing out to the web,\nI'm gonna filter them.\n\n305\n00:15:49.720 --> 00:15:52.100\nAnd so I apply it, and there we go, okay?\n\n306\n00:15:52.100 --> 00:15:58.300\nYou can have one incoming and one outgoing\nACL for every interface for each protocol.\n\n307\n00:15:58.300 --> 00:16:00.346\nNow, what does that mean?\n\n308\n00:16:00.346 --> 00:16:05.073\nWell, what I just created right there,\nthose are all IP version 4 ACLs, and so\n\n309\n00:16:05.073 --> 00:16:08.390\nI've got an inbound or\nan outbound, and that's it, so\n\n310\n00:16:08.390 --> 00:16:10.666\nI can have two ACLs on this interface.\n\n311\n00:16:10.666 --> 00:16:11.339\nRight?\n\n312\n00:16:11.339 --> 00:16:12.605\nFor IPv4.\n\n313\n00:16:12.605 --> 00:16:16.080\nIf I start running IPv6,\nI can have two more ACLs.\n\n314\n00:16:16.080 --> 00:16:17.490\nAn inbound and an outbound for IPv6.\n\n315\n00:16:17.490 --> 00:16:19.120\nThey're separate.\n\n316\n00:16:19.120 --> 00:16:20.810\nSeparate ACLs for separate protocols.\n\n317\n00:16:20.810 --> 00:16:23.340\nIf you're running IPX/SPX or\nAppletalk, right?\n\n318\n00:16:23.340 --> 00:16:26.180\nBecause there are OS versions that support\nthose, you might have ACLs for them,\n\n319\n00:16:26.180 --> 00:16:27.130\ntoo, right?\n\n320\n00:16:27.130 --> 00:16:31.660\nSo, one inbound and one outbound for\neach protocol in the interface.\n\n321\n00:16:31.660 --> 00:16:35.480\nNow IPv6, a lot of people had\na written IPv6 access list before,\n\n322\n00:16:35.480 --> 00:16:38.180\nso I wanna show you how those work.\n\n323\n00:16:38.180 --> 00:16:42.360\nIPv6 access lists are just a little\nbit different than IPv4 version ones.\n\n324\n00:16:42.360 --> 00:16:43.650\nFor the most part they're the same but\n\n325\n00:16:43.650 --> 00:16:45.910\nthere's a couple little\ndifferences that are important.\n\n326\n00:16:45.910 --> 00:16:47.920\nFor example,\njust the syntax to create one.\n\n327\n00:16:47.920 --> 00:16:48.850\nAlright?\n\n328\n00:16:48.850 --> 00:16:51.270\nIPv6 access lists are always extended.\n\n329\n00:16:51.270 --> 00:16:53.350\nThere are no standard ACL's for IPv6.\n\n330\n00:16:53.350 --> 00:16:55.480\nSo I've always got to do an extended on so\n\n331\n00:16:55.480 --> 00:16:57.320\nthat's nice because I don't\nhave to tell it extended.\n\n332\n00:16:57.320 --> 00:16:58.590\nIt just automatically knows.\n\n333\n00:16:58.590 --> 00:16:59.180\nAll right.\n\n334\n00:16:59.180 --> 00:17:01.080\nAnd that's one syntax change.\n\n335\n00:17:01.080 --> 00:17:03.200\nThe other syntax change are the names,\nright.\n\n336\n00:17:03.200 --> 00:17:04.300\nJust the addresses.\n\n337\n00:17:04.300 --> 00:17:09.850\nThe addresses are much, much larger and\nthey always use the slash notation.\n\n338\n00:17:09.850 --> 00:17:12.710\nThe subnet shorthand notation\nto reference subnets.\n\n339\n00:17:12.710 --> 00:17:15.360\nSo we don't usually have to\ndeal with wildcard masks.\n\n340\n00:17:15.360 --> 00:17:18.020\nYou can still do wildcard masks, but\na lot of times, you won't need to.\n\n341\n00:17:19.180 --> 00:17:23.510\nSo let me show you guys an example\nhere of maybe denying some traffic and\n\n342\n00:17:23.510 --> 00:17:24.640\nallowing some traffic with IPv6.\n\n343\n00:17:24.640 --> 00:17:27.950\nSo if I ge into a interface, and\n\n344\n00:17:27.950 --> 00:17:33.750\nI give it an IPv6 address, and\nwhatever that address happens to be.\n\n345\n00:17:33.750 --> 00:17:35.150\nMaybe it's a public one.\n\n346\n00:17:37.370 --> 00:17:39.600\nI'm just gonna mae up an address and\nassign it, and\n\n347\n00:17:39.600 --> 00:17:41.980\nI'll make sure that ipv6\nis enabled on interface.\n\n348\n00:17:41.980 --> 00:17:43.830\nThere we go.\n\n349\n00:17:43.830 --> 00:17:48.100\nSo I've got an ipv6 address here and\nI want to apply an ACL to this interface.\n\n350\n00:17:48.100 --> 00:17:53.490\nSo to create one,\nwe start by saying ipv6 access-list,\n\n351\n00:17:53.490 --> 00:17:55.090\nso things aren't too different.\n\n352\n00:17:55.090 --> 00:17:59.665\nFor an extended ACL we say ip access-list,\nhere I say ipv6.\n\n353\n00:17:59.665 --> 00:18:01.410\naccess-list.\n\n354\n00:18:01.410 --> 00:18:03.190\nAnd then I give it a name, right?\n\n355\n00:18:03.190 --> 00:18:05.680\nSo I'll call this inbound-internet,\nall right?\n\n356\n00:18:05.680 --> 00:18:10.700\nAnd now, very similar to a named acl,\n\n357\n00:18:10.700 --> 00:18:14.010\nit drops me in here and\nI can start to apply my values, all right?\n\n358\n00:18:14.010 --> 00:18:16.630\nNow normally, I would start saying like,\n10 blah blah blah,\n\n359\n00:18:16.630 --> 00:18:18.370\n20 blah blah blah, right?\n\n360\n00:18:18.370 --> 00:18:20.910\nBut for whatever reason,\nthe syntax is a little different here.\n\n361\n00:18:20.910 --> 00:18:24.610\nAnd I can't do a number, I actually\nhave to type the word sequence ten,\n\n362\n00:18:24.610 --> 00:18:26.010\nand then what I want to do.\n\n363\n00:18:26.010 --> 00:18:28.250\nAll right so there's a little,\nlittle difference there.\n\n364\n00:18:28.250 --> 00:18:30.250\nA kind of annoying, but not a big deal.\n\n365\n00:18:30.250 --> 00:18:33.710\nSo we say sequence ten, and\nthen what it is we want to perform.\n\n366\n00:18:33.710 --> 00:18:36.830\nSo I might want to deny Ipv6.\n\n367\n00:18:36.830 --> 00:18:44.200\nSo deny any kind of Ipv6 traffic\nFrom a particular host, right so,\n\n368\n00:18:44.200 --> 00:18:49.580\nyou know, somebody like this, alright.\n\n369\n00:18:49.580 --> 00:18:54.900\nThat's not a particular host,\nthat's a network.\n\n370\n00:18:54.900 --> 00:18:58.810\nSo I'm saying any IP6 traffic\nfrom the FD00:172:16:6 network.\n\n371\n00:18:58.810 --> 00:19:00.810\nI'm gonna block them, all right.\n\n372\n00:19:00.810 --> 00:19:02.430\nSo I'm denying their traffic.\n\n373\n00:19:02.430 --> 00:19:06.160\nBut because it's an extended ACL,\nI need to specify a destination also.\n\n374\n00:19:06.160 --> 00:19:08.660\nAnd so I'll just set\nthe destination to any, right.\n\n375\n00:19:08.660 --> 00:19:13.120\nSo, I'm denying this network going to any\ndestination, and I'm just using the subnet\n\n376\n00:19:13.120 --> 00:19:16.670\nshorthand instead of a wildcard mask,\nand it'll honor that.\n\n377\n00:19:16.670 --> 00:19:17.800\nIt'll accept it.\n\n378\n00:19:17.800 --> 00:19:18.490\nOkay.\n\n379\n00:19:18.490 --> 00:19:20.410\nNow that's just blocking that network.\n\n380\n00:19:20.410 --> 00:19:25.450\nIf I wanna block a host,\nI could say sequence 20 deny ipv6,\n\n381\n00:19:25.450 --> 00:19:28.080\nor I don't have to do ipv6.\n\n382\n00:19:28.080 --> 00:19:31.280\nYou could do tcp or udp over ipv6.\n\n383\n00:19:31.280 --> 00:19:38.330\nBut I wanna do ipv6 and I'll say host and\nthen I can specify a particular host.\n\n384\n00:19:38.330 --> 00:19:42.350\nRight?\nSo maybe somebody like that\n\n385\n00:19:44.160 --> 00:19:45.620\ngoing to any destination.\n\n386\n00:19:45.620 --> 00:19:48.070\nAnd then after that you can add in,\nI did IPv6.\n\n387\n00:19:48.070 --> 00:19:50.790\nBut if I did TCP or\nUDP, I could say EQ and\n\n388\n00:19:50.790 --> 00:19:52.900\na port number all just\nlike the regular ACLs.\n\n389\n00:19:54.450 --> 00:19:58.270\nAnd then you've got your\nother kinda standard entries.\n\n390\n00:19:58.270 --> 00:20:00.470\nLike sequence thirty, permit.\n\n391\n00:20:00.470 --> 00:20:00.970\nIPv6, any, any.\n\n392\n00:20:02.400 --> 00:20:04.410\nAnd I'll just allow everything else.\n\n393\n00:20:04.410 --> 00:20:04.920\nAlright.\n\n394\n00:20:06.020 --> 00:20:09.910\nSo the syntax is just a little\nbit different, but for\n\n395\n00:20:09.910 --> 00:20:10.960\nthe most part it's the same.\n\n396\n00:20:10.960 --> 00:20:13.400\nAnd really it's just the sequence\ncommand that's different, right,\n\n397\n00:20:13.400 --> 00:20:16.090\neverything else is kind of written\nthe same way as we did before.\n\n398\n00:20:16.090 --> 00:20:17.440\nWe just get rid of wild card mask.\n\n399\n00:20:17.440 --> 00:20:19.320\nBut you still can use a wild card mask.\n\n400\n00:20:19.320 --> 00:20:22.750\n'Cuz there might be times where you wanna\nkey off of a value in the middle, and\n\n401\n00:20:22.750 --> 00:20:23.970\nnot an actual network, as whole.\n\n402\n00:20:23.970 --> 00:20:26.110\nIt's not terribly common, but it is there.\n\n403\n00:20:26.110 --> 00:20:27.600\nAnd so you can still do wild card masks.\n\n404\n00:20:27.600 --> 00:20:29.370\nThey're just considerably\nlonger than they used to be.\n\n405\n00:20:29.370 --> 00:20:31.810\nAll right?\n\n406\n00:20:31.810 --> 00:20:33.140\nAnd then, as far as applying this.\n\n407\n00:20:33.140 --> 00:20:34.690\nNow, this is different, all right?\n\n408\n00:20:34.690 --> 00:20:38.050\nI want to attach this\nIPV6 ACL to an interface.\n\n409\n00:20:38.050 --> 00:20:41.600\nSo I get into that interface and\nnow I say IPv6,\n\n410\n00:20:41.600 --> 00:20:47.560\nif I can spell it, traffic filter.\n\n411\n00:20:47.560 --> 00:20:51.290\nNot access-group, traffic-filter.\n\n412\n00:20:51.290 --> 00:20:53.910\nSo I'm applying a traffic filter, and\n\n413\n00:20:53.910 --> 00:20:57.680\nI called mine, what name did I give\nthat thing, was it inbound internet.\n\n414\n00:20:57.680 --> 00:21:00.850\nYes, so we called it inbound internet.\n\n415\n00:21:00.850 --> 00:21:03.890\nand then I specify a direction in or\nout and I call it in.\n\n416\n00:21:03.890 --> 00:21:07.680\nNow that's going to be\napplying to that traffic.\n\n417\n00:21:07.680 --> 00:21:09.500\nSo three big syntax changes.\n\n418\n00:21:09.500 --> 00:21:14.390\nNumber one, you have to use the sequence\ncommand to specify a line number.\n\n419\n00:21:14.390 --> 00:21:18.060\nNumber two, we don't necessarily\nhave to use wild card masks anymore.\n\n420\n00:21:18.060 --> 00:21:20.950\nYou can use subnet shorthand if\nyour doing an actual network.\n\n421\n00:21:20.950 --> 00:21:24.930\nAnd then number three instead of\naccess-group we're using traffic-filter\n\n422\n00:21:24.930 --> 00:21:26.550\nto apply it to an interface.\n\n423\n00:21:26.550 --> 00:21:28.550\nThey're IPv6 traffic filters.\n\n424\n00:21:28.550 --> 00:21:31.730\nAnd the reason Cisco changed that up is\nthey're trying to match the terminology\n\n425\n00:21:31.730 --> 00:21:32.950\nused in the standards.\n\n426\n00:21:32.950 --> 00:21:35.040\nSo if you go and read the standards\nthey call them traffic filters and\n\n427\n00:21:35.040 --> 00:21:39.640\nthat's what they're matching\nup with here All right so\n\n428\n00:21:39.640 --> 00:21:41.850\nthat's our refresher on\naccess control list but\n\n429\n00:21:41.850 --> 00:21:46.810\nI've got one more thing I wanna talk about\nwhich is not covered CCA but is important.\n\n430\n00:21:46.810 --> 00:21:51.190\nMost Cisco routers have a technology\nthat's kind of a neat one.\n\n431\n00:21:51.190 --> 00:21:57.490\nIt's called URPF or\nUnicast Reverse Path Forwarding and\n\n432\n00:21:57.490 --> 00:22:02.960\nwhat URPF does is it says If\nsomebody's spoofing traffic,\n\n433\n00:22:02.960 --> 00:22:05.210\ntheir source IP is going to be fake,\nright?\n\n434\n00:22:05.210 --> 00:22:08.350\nOr it's going to be an IP that's\nnot actually theirs, and so\n\n435\n00:22:08.350 --> 00:22:11.640\nwhen they send the traffic to us,\nwe should be able to look at that and\n\n436\n00:22:11.640 --> 00:22:12.850\ntell that it's fake, right?\n\n437\n00:22:12.850 --> 00:22:16.820\nWe should be able to see that the traffic\nis coming from the wrong spot.\n\n438\n00:22:16.820 --> 00:22:20.040\nAnd u-uRPF does that for us, right?\n\n439\n00:22:20.040 --> 00:22:23.120\nUnicast Reverse Path Forwarding.\n\n440\n00:22:23.120 --> 00:22:26.200\nIt says look at any unicast traffic\nthat's coming in, all right,\n\n441\n00:22:26.200 --> 00:22:27.660\ncuz broadcast isn't very helpful.\n\n442\n00:22:27.660 --> 00:22:31.830\nLook at the unicast traffic,\nlook at the source IP, and\n\n443\n00:22:31.830 --> 00:22:34.510\nlook at the reverse path to get to it.\n\n444\n00:22:34.510 --> 00:22:39.640\nSo if I have an internal network\non my E0-1 interface And\n\n445\n00:22:39.640 --> 00:22:43.050\nI get traffic on my E0/0\ninterface that faces the internet.\n\n446\n00:22:43.050 --> 00:22:47.280\nAnd I get that traffic from the internet\nwith a source IP of my internal network.\n\n447\n00:22:47.280 --> 00:22:48.300\nI should be able to look at that and\n\n448\n00:22:48.300 --> 00:22:52.400\nsay \"Hm, if I go out that external\ninterface, can I get to that network?\n\n449\n00:22:52.400 --> 00:22:53.270\nNo, it's on the inside.\n\n450\n00:22:53.270 --> 00:22:55.290\nI shouldn't be able to get\nto that.\" This is bad.\n\n451\n00:22:55.290 --> 00:22:56.880\nI don't have a reverse path.\n\n452\n00:22:56.880 --> 00:22:58.600\nSo I'm gonna throw it out.\n\n453\n00:22:58.600 --> 00:23:02.150\nThat URPF is a great to protect\nyour network from spoofing.\n\n454\n00:23:02.150 --> 00:23:03.940\nIt's not full-proof, right?\n\n455\n00:23:03.940 --> 00:23:06.530\nIf they're spoofing\nsomebody else's public IP,\n\n456\n00:23:06.530 --> 00:23:09.380\nthen I'm gonna see that on the interface\nand I'm just gonna trust it.\n\n457\n00:23:09.380 --> 00:23:10.360\nThat's how it is.\n\n458\n00:23:10.360 --> 00:23:12.310\nBut if they're trying to\nspoof an internal IP or\n\n459\n00:23:12.310 --> 00:23:14.910\nspoof one of your own IPs,\nit'll block that.\n\n460\n00:23:14.910 --> 00:23:19.260\nIt'll stop that from functioning It's\nmore affective against internal networks.\n\n461\n00:23:19.260 --> 00:23:22.180\nSo, if somebody on the inside of your\nnetwork is trying to spoof something,\n\n462\n00:23:22.180 --> 00:23:24.360\nyour router has a better vision\nof where that should be,\n\n463\n00:23:24.360 --> 00:23:25.860\nand it will protect you there, Steve.\n\n464\n00:23:25.860 --> 00:23:28.410\nSo, URPF is actually\na little more affective for\n\n465\n00:23:28.410 --> 00:23:31.220\ninternal traffic than it is for external.\n\n466\n00:23:31.220 --> 00:23:34.870\nBut, either way, it's a great feature\nthat is not turned on by default.\n\n467\n00:23:34.870 --> 00:23:39.970\nWe need to go in and turn it on, and\nyou turn it on On a per interface basis.\n\n468\n00:23:39.970 --> 00:23:41.440\nIt's not global.\n\n469\n00:23:41.440 --> 00:23:43.390\nYou'll have some interfaces\nthat are point to point.\n\n470\n00:23:43.390 --> 00:23:47.010\nAnd there's not a whole heck of a lot\nof reason to do things like URPF.\n\n471\n00:23:47.010 --> 00:23:49.700\nOr you might have access lists on\nsome interfaces versus others,\n\n472\n00:23:49.700 --> 00:23:52.820\nbut otherwise you can go in on\nan interface by interface basis.\n\n473\n00:23:52.820 --> 00:23:53.420\nYou can turn this on.\n\n474\n00:23:53.420 --> 00:23:54.780\nLet me show you how it works.\n\n475\n00:23:54.780 --> 00:23:57.690\nI'm gonna turn it on on\nmy Internet connection.\n\n476\n00:23:57.690 --> 00:23:58.479\nSo I'll get an e0/2.\n\n477\n00:23:59.670 --> 00:24:00.706\nAnd we'll get it enabled.\n\n478\n00:24:00.706 --> 00:24:05.361\nNow, when I enable it, there's two\ndifferent modes that I can put it through.\n\n479\n00:24:05.361 --> 00:24:08.844\nThere's what's called loose mode and\nstrict mode.\n\n480\n00:24:08.844 --> 00:24:13.704\nIn strict mode I look at my routing table\nand I say, if I got traffic on E0/2,\n\n481\n00:24:13.704 --> 00:24:15.660\ncan I get back to it on E0/2?\n\n482\n00:24:15.660 --> 00:24:16.710\nVery strict.\n\n483\n00:24:16.710 --> 00:24:17.430\nYes or no.\n\n484\n00:24:18.750 --> 00:24:22.330\nIf I can, then I allow it,\nif I can't, I block it.\n\n485\n00:24:22.330 --> 00:24:24.640\nIn loose mode we say, all right,\n\n486\n00:24:24.640 --> 00:24:28.700\nI've got traffic on E0/2 Can I\nget to it on any interface?\n\n487\n00:24:28.700 --> 00:24:31.090\nRight, can I get to it any\nway across my network,\n\n488\n00:24:31.090 --> 00:24:33.460\nnot necessarily the interface\nthat it came on.\n\n489\n00:24:33.460 --> 00:24:36.940\nNow, that might sound bad,\nbut sometimes we need that.\n\n490\n00:24:36.940 --> 00:24:39.190\nSometimes you have asymmetric routing.\n\n491\n00:24:39.190 --> 00:24:42.230\nTraffic that comes in one interface and\ngoes out on another.\n\n492\n00:24:42.230 --> 00:24:46.790\nAnd if you have asymmetric routing strict\nmode for URPF will break that right.\n\n493\n00:24:46.790 --> 00:24:50.160\nSo, we might need loose mode,\nbut normally we want it strict.\n\n494\n00:24:50.160 --> 00:24:52.390\nAnd we see it right\nhere when we define it.\n\n495\n00:24:52.390 --> 00:24:57.710\nWhen I turn it on an interface,\nwhat we do is we say ip verify.\n\n496\n00:24:57.710 --> 00:25:02.485\nAnd then we basically\ntell it unicast source\n\n497\n00:25:02.485 --> 00:25:09.610\nreachable-via And here's where we\nchoose between strict and loose.\n\n498\n00:25:09.610 --> 00:25:10.330\nOkay?\n\n499\n00:25:10.330 --> 00:25:13.680\nIn strict mode, we want to set it to rx.\n\n500\n00:25:13.680 --> 00:25:17.850\nCan I reach that network on\nthe interface I received the traffic on?\n\n501\n00:25:17.850 --> 00:25:19.610\nRight?\nThat's strict mode.\n\n502\n00:25:19.610 --> 00:25:20.970\nLoose mode is any.\n\n503\n00:25:20.970 --> 00:25:23.310\nCan I reach that network\nvia any of my interfaces.\n\n504\n00:25:23.310 --> 00:25:24.720\nMaybe I have some other way to get to it.\n\n505\n00:25:24.720 --> 00:25:25.320\nRight?\nBut\n\n506\n00:25:25.320 --> 00:25:28.560\nif somebody's spoofing\nmy internal addresses\n\n507\n00:25:28.560 --> 00:25:29.870\nThen the any's gonna work, right?\n\n508\n00:25:29.870 --> 00:25:31.390\nI'm gonna find it on another interface,\n\n509\n00:25:31.390 --> 00:25:33.260\nand I might as well not even turn on URPF,\nright?\n\n510\n00:25:34.290 --> 00:25:39.050\nBut if I do RX, if I receive\ntraffic on my Internet interface,\n\n511\n00:25:40.080 --> 00:25:43.180\ncan I get back to the source\non my Internet interface, or\n\n512\n00:25:43.180 --> 00:25:44.920\nam I gonna have to get\nback to it on my inside?\n\n513\n00:25:44.920 --> 00:25:48.230\nCuz if that's the case, then this is spoof\ntraffic, I shouldn't have received it.\n\n514\n00:25:48.230 --> 00:25:49.370\nAnd I need to block it.\n\n515\n00:25:49.370 --> 00:25:50.020\nAll right.\n\n516\n00:25:50.020 --> 00:25:53.650\nSo unicast reverse path forwarding.\n\n517\n00:25:53.650 --> 00:25:56.360\nIt's a really simple thing to turn on.\n\n518\n00:25:56.360 --> 00:25:58.020\nAnd now your router\nstarts to enforce that.\n\n519\n00:25:58.020 --> 00:26:02.460\nNow if it's so simple to turn and it's so\neffective, why not turn it on by default?\n\n520\n00:26:02.460 --> 00:26:04.480\nAnd there's two reasons for that, right.\n\n521\n00:26:04.480 --> 00:26:09.900\nFirst off, CISCO doesn't know if\nyou're doing asymmetric routing.\n\n522\n00:26:09.900 --> 00:26:12.010\nSo if you are this would break it.\n\n523\n00:26:12.010 --> 00:26:15.110\nSo the only default they could turn on\nthat wouldn't generate support tickets\n\n524\n00:26:15.110 --> 00:26:16.220\nwould be to turn on loose mode.\n\n525\n00:26:16.220 --> 00:26:18.540\nAnd loose mode's not terribly effective,\nso they leave it off.\n\n526\n00:26:18.540 --> 00:26:19.720\nThat's reason one.\n\n527\n00:26:19.720 --> 00:26:24.390\nReason two is it creates a bit of\na performance hit on your router, okay?\n\n528\n00:26:24.390 --> 00:26:27.330\nNormally when your router receives\na packet it doesn't care much about\n\n529\n00:26:27.330 --> 00:26:28.380\nthe source address.\n\n530\n00:26:28.380 --> 00:26:29.860\nIt cares about the destination.\n\n531\n00:26:29.860 --> 00:26:32.470\nIt looks at the destination and\nit says, can I get to the destination?\n\n532\n00:26:32.470 --> 00:26:35.000\nLet me run that through the routing\ntable and send it along.\n\n533\n00:26:35.000 --> 00:26:38.220\nWell, now we're telling it, hey, don't\njust run the destination through your\n\n534\n00:26:38.220 --> 00:26:40.500\nrouting table,\nrun the source through the routing table.\n\n535\n00:26:40.500 --> 00:26:43.870\nRun the source through the routing table\nand verify you can get back to it.\n\n536\n00:26:43.870 --> 00:26:44.770\nRight?\nVerify you can\n\n537\n00:26:44.770 --> 00:26:46.470\nget back to it on the same interface.\n\n538\n00:26:46.470 --> 00:26:49.560\nSo, now it's got to run two\naddresses against the routing table,\n\n539\n00:26:49.560 --> 00:26:53.970\nor two routing table lookups, so it's\ngoing to double the amount of workload for\n\n540\n00:26:53.970 --> 00:26:55.370\npackets that are coming into your system.\n\n541\n00:26:55.370 --> 00:26:57.460\nNow, it gets cached, it gets optimized,\n\n542\n00:26:57.460 --> 00:26:59.500\nthere's hardware in the router\nthat's designed to handle this.\n\n543\n00:26:59.500 --> 00:27:02.080\nYou're probably not going\nto see a giant CPU spike.\n\n544\n00:27:02.080 --> 00:27:05.940\nBut if you're an ISP handling millions\nof packets per second, you'll notice it.\n\n545\n00:27:05.940 --> 00:27:07.400\nIt'll increase your CPU.\n\n546\n00:27:07.400 --> 00:27:09.490\nSo it's a bit of a performance hit, and so\n\n547\n00:27:09.490 --> 00:27:11.680\nthat's another reason\nwhy Cisco leaves it off.\n\n548\n00:27:11.680 --> 00:27:13.770\nIt's up to you to enable\nit if you want it.\n\n549\n00:27:13.770 --> 00:27:14.300\nAll right?\nBut\n\n550\n00:27:14.300 --> 00:27:16.720\nit's really simple,\nwe can turn it on in the interfaces, and\n\n551\n00:27:16.720 --> 00:27:19.480\nit's a great supplement\nto access control lists.\n\n552\n00:27:19.480 --> 00:27:22.890\nRight?\nI could write anti-spoofing ACLs.\n\n553\n00:27:22.890 --> 00:27:24.450\nBut there's a bit of an art to that.\n\n554\n00:27:24.450 --> 00:27:25.900\nIt can be a bit tricky.\n\n555\n00:27:25.900 --> 00:27:29.050\nURPF can take care of it for\nme, and it's more dynamic.\n\n556\n00:27:29.050 --> 00:27:31.510\nIt can react to changes\nin your routing table and\n\n557\n00:27:31.510 --> 00:27:35.260\nmake different decisions versus those\nanti-spoofing ACLs that are hard set.\n\n558\n00:27:35.260 --> 00:27:38.390\nWe define them and they're locked in.\n\n559\n00:27:38.390 --> 00:27:41.970\nSo, all right, so that is URPF, and\nthat's basically all there is on that one.\n\n560\n00:27:43.040 --> 00:27:45.220\nAll right, well I think that's\nabout it for this show.\n\n561\n00:27:45.220 --> 00:27:48.680\nWe got a chance to see IPV4 ACLs, right?\n\n562\n00:27:48.680 --> 00:27:51.070\nWe got to see standard and\nextended and names, right?\n\n563\n00:27:51.070 --> 00:27:52.170\nThe different versions there.\n\n564\n00:27:52.170 --> 00:27:55.030\nI showed you guys time ranges\non an ACL which is kinda neat.\n\n565\n00:27:55.030 --> 00:27:59.890\nWe took a look at extended ACLs, and\nmore importantly, we looked at IPV6 ACLs.\n\n566\n00:27:59.890 --> 00:28:01.800\nThat's the one you really\nneed to bone up on for\n\n567\n00:28:01.800 --> 00:28:04.760\nthe CCMP route exam,\nbecause you will see them there.\n\n568\n00:28:04.760 --> 00:28:08.130\nSo definitely pay attention to those,\nand then lastly we got to see URPF,\n\n569\n00:28:08.130 --> 00:28:11.120\nanother neat security\nfeature found in Cisco iOS.\n\n570\n00:28:11.120 --> 00:28:13.990\nAll right, well that's a good spot for\nus to wrap this one up.\n\n571\n00:28:13.990 --> 00:28:15.400\nI hope you guys enjoyed it.\n\n572\n00:28:15.400 --> 00:28:17.665\nSigning off for ITProTV, I'm Dom Pizzette.\n\n573\n00:28:17.665 --> 00:28:18.895\nAnd I'll see you next time.\n\n574\n00:28:18.895 --> 00:28:24.740\n[MUSIC]\n\n",
          "vimeoId": "138776553"
        }
      ],
      "title": "Infrastructure Security"
    },
    {
      "episodes": [
        {
          "description": "The device management objective of the CCNP exam includes a long list of services that run on a Cisco router that one should be aware of as a network professional. Viewers will hear information on various small services available to manage Cisco equipment, which covers configuring and securing a Console, Telnet, SSH, and web access (HTTP and HTTPS) as well as some of the lesser known features for each.",
          "length": "1777",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/ccnproute/cisco-ccnproute300101-6-1-device_management-092215-1.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/ccnproute/cisco-ccnproute300101-6-1-device_management-092215-1-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/ccnproute/cisco-ccnproute300101-6-1-device_management-092215-1-sm.jpg",
          "title": "Device Management",
          "transcript": "WEBVTT\n\n1\n00:00:00.359 --> 00:00:10.298\n[MUSIC]\n\n2\n00:00:10.298 --> 00:00:13.077\nAll right, good morning,\ngood afternoon, and good evening, and\n\n3\n00:00:13.077 --> 00:00:14.950\nwelcome back to another\nepisode of ITProTV.\n\n4\n00:00:14.950 --> 00:00:20.050\nI'm your host Don Pezet, back again\nwith another episode of CCNP Route.\n\n5\n00:00:20.050 --> 00:00:24.370\nIn this episode we're gonna be starting\nwhat I like to call the lightning round.\n\n6\n00:00:24.370 --> 00:00:27.750\nWhen you look at the exam objectives for\nthe CCMP route exam,\n\n7\n00:00:27.750 --> 00:00:34.070\nmost of them focus on a particular topic\nlike EIGRP, or BGB, routing principles.\n\n8\n00:00:34.070 --> 00:00:38.880\nBut, there's one section on device\nmanagement right, and just infrastructure\n\n9\n00:00:38.880 --> 00:00:44.190\nservices and boy it is a laundry list\nof services that run on a Cisco router.\n\n10\n00:00:44.190 --> 00:00:47.940\nThe majority of which are optional and\nmost people don't even use,\n\n11\n00:00:47.940 --> 00:00:52.310\nbut as a network professional, it's\nsomething that you need to be aware of.\n\n12\n00:00:52.310 --> 00:00:55.810\nSo what we're gonna do is, we're gonna\nrun through all these little services and\n\n13\n00:00:55.810 --> 00:00:58.130\njust kind of make sure we understand\nthe configuration in them.\n\n14\n00:00:58.130 --> 00:01:02.210\nNow, most of these services you've\nalready learned about in the CCNA and\n\n15\n00:01:02.210 --> 00:01:05.700\nI know a lot of you guys have probably\npassed your CCNA, but it's been a while,\n\n16\n00:01:05.700 --> 00:01:06.960\nbeen a couple of years and\n\n17\n00:01:06.960 --> 00:01:11.620\nsince these are services we don't use very\noften you might not remember some of them.\n\n18\n00:01:11.620 --> 00:01:13.770\nSo some of this will be a refresher.\n\n19\n00:01:13.770 --> 00:01:17.315\nSome of it we're gonna take a little\nbit further than we go in the CCNA, and\n\n20\n00:01:17.315 --> 00:01:20.025\nshow some kind of advanced\noptions that are all important,\n\n21\n00:01:20.025 --> 00:01:22.855\nbecause the things that\ncan turn up on the exam.\n\n22\n00:01:22.855 --> 00:01:25.625\nSo, get ready, cuz we're gonna\nopen up the fire hose here.\n\n23\n00:01:25.625 --> 00:01:29.065\nIt's just gonna be a ton of information\non different small services\n\n24\n00:01:29.065 --> 00:01:31.545\navailable in a Cisco IOS router.\n\n25\n00:01:31.545 --> 00:01:33.710\nAnd you know, I say router.\n\n26\n00:01:33.710 --> 00:01:36.190\nThe majority of this stuff\nworks on a switch as well.\n\n27\n00:01:36.190 --> 00:01:40.120\nEven a lot of it works on a Cisco ASA,\nso these are good things to be aware of.\n\n28\n00:01:40.120 --> 00:01:43.670\nBut we're really focusing on that\nkind of router side, all right?\n\n29\n00:01:43.670 --> 00:01:44.900\nSo, let's kick this thing off.\n\n30\n00:01:44.900 --> 00:01:49.360\nI want to start off talking\na little bit about console access.\n\n31\n00:01:49.360 --> 00:01:51.120\nNow what is console access?\n\n32\n00:01:51.120 --> 00:01:55.470\nWell you know when you get a brand new\nCisco router you take your serial console\n\n33\n00:01:55.470 --> 00:01:59.630\ncable the router comes with, you plug\ninto its console port and you access it.\n\n34\n00:01:59.630 --> 00:02:01.420\nAnd you do your initial\nconfiguration on it and\n\n35\n00:02:01.420 --> 00:02:04.020\nfrom then on you use VTY access, right?\n\n36\n00:02:04.020 --> 00:02:06.510\nYou telnet or SSH into the device.\n\n37\n00:02:06.510 --> 00:02:11.170\nSo when I get my device configured\nthere's a few basic little steps I need\n\n38\n00:02:11.170 --> 00:02:15.810\nto take to get the VTY and\nthe console ports configured securely, or\n\n39\n00:02:15.810 --> 00:02:18.940\nin a manner that they can act secure,\nat a minimum, right?\n\n40\n00:02:18.940 --> 00:02:22.210\nSo, let's run through that process of how\nwe can secure that, and then we'll talk\n\n41\n00:02:22.210 --> 00:02:25.920\na little bit about some of the other\nways that we can access the router.\n\n42\n00:02:25.920 --> 00:02:27.700\nNow, when I get a brand new router.\n\n43\n00:02:27.700 --> 00:02:30.300\nI've got this router right\nhere kinda behind me,\n\n44\n00:02:30.300 --> 00:02:32.810\nyou might even hear the hum\nof it running back there.\n\n45\n00:02:32.810 --> 00:02:35.410\nIt's just a Cisco 2800 series router.\n\n46\n00:02:35.410 --> 00:02:38.217\nI'm running, let's see, I think 15.1.\n\n47\n00:02:38.217 --> 00:02:41.792\nYeah, I'm running the 15.1\niOS on this thing, and\n\n48\n00:02:41.792 --> 00:02:44.650\nit's got a mostly stocked configuration.\n\n49\n00:02:44.650 --> 00:02:46.330\nNow, what do I mean by mostly?\n\n50\n00:02:46.330 --> 00:02:51.080\nWell, I launched it, I assigned\nan IP address to one interface, and\n\n51\n00:02:51.080 --> 00:02:51.940\nthat's about it.\n\n52\n00:02:51.940 --> 00:02:55.750\nAll the rest of this router is\nbasically at its default configuration.\n\n53\n00:02:55.750 --> 00:02:57.030\nSo if I do a show run and\n\n54\n00:02:57.030 --> 00:03:01.260\nstart to look down the line,\nwhat we're seeing here are just defaults.\n\n55\n00:03:01.260 --> 00:03:02.720\nStuff that we expect to see.\n\n56\n00:03:02.720 --> 00:03:07.950\nThe host name is set to router, we've\ngot time stamps for the logs turned on.\n\n57\n00:03:07.950 --> 00:03:10.020\nAs you kinda start scrolling down.\n\n58\n00:03:10.020 --> 00:03:11.860\nI guess I did assign a name server to it.\n\n59\n00:03:11.860 --> 00:03:14.220\nSo I've got a Google name server assigned,\nI put that there.\n\n60\n00:03:14.220 --> 00:03:17.070\nBut the rest of the stuff is\ndefaults with the exception of this\n\n61\n00:03:17.070 --> 00:03:18.890\nIP address right here that I assigned.\n\n62\n00:03:18.890 --> 00:03:21.410\nSo nothing really special configured here.\n\n63\n00:03:21.410 --> 00:03:26.230\nAnd when I get down to the console and\nvty lines, these are the defaults.\n\n64\n00:03:26.230 --> 00:03:27.480\nAll right.\nNow I've got to be careful with these\n\n65\n00:03:27.480 --> 00:03:31.590\ndefaults because first off the console\nhas nothing configured, right.\n\n66\n00:03:31.590 --> 00:03:34.470\nAnd that means that if I login on\nthe console port, my session opens up,\n\n67\n00:03:34.470 --> 00:03:37.660\nI'm in the router, and\nit never closes on me.\n\n68\n00:03:37.660 --> 00:03:41.890\nSo anybody can come behind and\nplug in and gain access to the router.\n\n69\n00:03:41.890 --> 00:03:45.690\nThe vty's, you'll notice,\nhave transport.input.all turned on.\n\n70\n00:03:45.690 --> 00:03:49.185\nThat means they'll all out\ntelnet as well as SSH.\n\n71\n00:03:49.185 --> 00:03:51.150\nI don't want telnet on my router, right?\n\n72\n00:03:51.150 --> 00:03:51.970\nThat's nonsecure.\n\n73\n00:03:51.970 --> 00:03:53.630\nIt's going to send something plaintext.\n\n74\n00:03:53.630 --> 00:03:57.970\nSo, some quick configuration items that\nwe normally do on a brand new router.\n\n75\n00:03:57.970 --> 00:04:00.950\nThe first thing I like to do\nis to make sure that I set\n\n76\n00:04:00.950 --> 00:04:04.010\na timeout on the console port.\n\n77\n00:04:04.010 --> 00:04:08.700\nNow if I get into line con0, well whoops.\n\n78\n00:04:10.160 --> 00:04:12.080\nOh, sorry it's, no, there we go.\n\n79\n00:04:12.080 --> 00:04:13.110\nIt needs my space.\n\n80\n00:04:13.110 --> 00:04:18.460\nSo I'll do line con0, and now we can jump\nin and we can set an execute timeout.\n\n81\n00:04:18.460 --> 00:04:21.190\nWhen you open up a connection\nto the console port\n\n82\n00:04:21.190 --> 00:04:23.910\nit has an unlimited timer by default,\nwe need to set a limit to that so\n\n83\n00:04:23.910 --> 00:04:28.070\nthat if I walk away and forget to log out,\nit'll log me out automatically.\n\n84\n00:04:28.070 --> 00:04:31.910\nAnd so we do that with exec-timeout and\nthen you can specify the interval,\n\n85\n00:04:31.910 --> 00:04:35.160\nyou can specify minutes and\nthen seconds if you want it.\n\n86\n00:04:35.160 --> 00:04:38.260\nIf I wanna set it to 15 minutes,\nI can do that and\n\n87\n00:04:38.260 --> 00:04:40.020\nyou would just do 15 and press Enter.\n\n88\n00:04:40.020 --> 00:04:41.070\nThat's 15 minutes.\n\n89\n00:04:41.070 --> 00:04:44.340\nOr you could say 15 space 0,\n0 for the seconds.\n\n90\n00:04:44.340 --> 00:04:47.140\nIf I want it just to be 4.5 minutes,\nright?\n\n91\n00:04:47.140 --> 00:04:50.450\nOr if I didn't wanna calculate\nthe minutes or something.\n\n92\n00:04:50.450 --> 00:04:53.810\nIf I knew I wanted 300\nseconds I could say 0 300.\n\n93\n00:04:53.810 --> 00:04:56.641\nAnd then it would calculate\nthat out to be, what is that?\n\n94\n00:04:56.641 --> 00:04:57.540\n5 minutes.\n\n95\n00:04:57.540 --> 00:05:02.130\nSo, it'll figure that out for you, but\nyou basically just need to set a time app.\n\n96\n00:05:02.130 --> 00:05:04.600\nNow for me, I'm in a lab environment and\n\n97\n00:05:04.600 --> 00:05:08.170\nI don't want this router to time out on\nme during the show and so I might set\n\n98\n00:05:08.170 --> 00:05:13.560\nsomething like no exec-timeout,\nwhich would set us to the defaults.\n\n99\n00:05:13.560 --> 00:05:18.810\nOr exec timeout 0 0,\nwhich would say there's no exec-timeout.\n\n100\n00:05:18.810 --> 00:05:20.420\nNow it's gonna stay open all the time.\n\n101\n00:05:20.420 --> 00:05:22.570\nIf I walk away, somebody can get in.\n\n102\n00:05:22.570 --> 00:05:25.870\nSo on a lab machine, you'll frequently\nsee where people set that exec-timeout\n\n103\n00:05:25.870 --> 00:05:28.560\nto 0 0 cuz it's a lab, right.\n\n104\n00:05:28.560 --> 00:05:29.870\nBut in production, that's a no-no.\n\n105\n00:05:29.870 --> 00:05:32.630\nIn production, it should really\nbe something nice and low.\n\n106\n00:05:32.630 --> 00:05:34.550\nNot low enough to annoy\nthe heck out of you, right.\n\n107\n00:05:34.550 --> 00:05:37.960\nMaybe you're watching debug logs go\nacross the screen and all of a sudden,\n\n108\n00:05:37.960 --> 00:05:38.840\nit disconnects you, right.\n\n109\n00:05:38.840 --> 00:05:40.160\nYou don't want that, right.\n\n110\n00:05:40.160 --> 00:05:42.210\nBut you do need it to be something safe,\nso\n\n111\n00:05:42.210 --> 00:05:44.830\nif you walk away, somebody else\ncan't jump in right behind you.\n\n112\n00:05:44.830 --> 00:05:48.170\nSo, you might set this to 15 0, like that.\n\n113\n00:05:48.170 --> 00:05:54.610\nAnd now, if I'm idle for more than\n15 minutes, it's gonna log me out.\n\n114\n00:05:54.610 --> 00:05:57.030\nI wanna do the same\nthing on the VTY ports,\n\n115\n00:05:57.030 --> 00:05:59.550\nalso, which is where we tell neter ssh in.\n\n116\n00:05:59.550 --> 00:06:02.020\nIf I open up an ssh session and\nI idle out,\n\n117\n00:06:02.020 --> 00:06:04.190\nthat might mean I've walked\naway from my computer.\n\n118\n00:06:04.190 --> 00:06:06.850\nAnd I definitely don't want somebody\njumping in behind me there and\n\n119\n00:06:06.850 --> 00:06:10.970\nusing the computer so\nwe can set a timeout on those too.\n\n120\n00:06:10.970 --> 00:06:12.035\nOn the console ports,\n\n121\n00:06:12.035 --> 00:06:15.690\nthere's not a whole heck of a lot else\nthat we want to set on a console port.\n\n122\n00:06:15.690 --> 00:06:20.000\nThere are some advanced options you can go\nthrough like you can set up authentication\n\n123\n00:06:20.000 --> 00:06:23.660\non the console ports so that people\nautomatically connect privileged.\n\n124\n00:06:23.660 --> 00:06:26.840\nIt's not necessarily a great idea,\nbut you can do things like that.\n\n125\n00:06:26.840 --> 00:06:31.120\nAnd so you'll see a ton of different\noptions in here for tweaking how that\n\n126\n00:06:31.120 --> 00:06:35.930\naccess works, but for the most part\nsetting an exact time out is what we need.\n\n127\n00:06:35.930 --> 00:06:40.270\nNow, notice there's this log-in command\nright here, and it says enable password\n\n128\n00:06:40.270 --> 00:06:43.780\nchecking, the console port doesn't\nhave a password by default.\n\n129\n00:06:43.780 --> 00:06:46.690\nWhen I connected- here,\nlet me kind of get back.\n\n130\n00:06:46.690 --> 00:06:48.920\nSo you plug into the console port and\nyou see this message right here.\n\n131\n00:06:48.920 --> 00:06:51.390\nYou press return to get started and\nyou're in.\n\n132\n00:06:51.390 --> 00:06:52.800\nRight?\nNo password.\n\n133\n00:06:52.800 --> 00:06:57.170\nSo you could use that logging command to\nassign a password to the console port and\n\n134\n00:06:57.170 --> 00:07:00.850\nnow somebody's got to provide a password\nwhenever they connect to the console port.\n\n135\n00:07:00.850 --> 00:07:04.220\nAnd that just gives you one extra\nkind of step of security there.\n\n136\n00:07:04.220 --> 00:07:04.890\nRight?\n\n137\n00:07:04.890 --> 00:07:08.890\nNow, on the console port I don't normally\nassign a password because I know my\n\n138\n00:07:08.890 --> 00:07:11.420\nrouters are in a secure data center, so\n\n139\n00:07:11.420 --> 00:07:13.700\nonly people in the data\ncenter have access.\n\n140\n00:07:13.700 --> 00:07:15.550\nAnd even without a password\nwhat do you get?\n\n141\n00:07:15.550 --> 00:07:17.620\nYou get the unprivileged prompt.\n\n142\n00:07:17.620 --> 00:07:21.710\nSo when you enable you still have to\nprovide credentials in order to get to\n\n143\n00:07:21.710 --> 00:07:23.270\nthat privilege level, right?\n\n144\n00:07:23.270 --> 00:07:25.020\nNow, on a brand new router,\nyou don't have that.\n\n145\n00:07:25.020 --> 00:07:26.940\nSo we might need to\nconfigure some user name and\n\n146\n00:07:26.940 --> 00:07:28.720\npassword authentication first, right?\n\n147\n00:07:28.720 --> 00:07:31.210\nSo we might for example,\ncreate us a user name.\n\n148\n00:07:31.210 --> 00:07:33.280\nI'll create a user name called admin.\n\n149\n00:07:33.280 --> 00:07:34.913\nAnd I'll set the privilege to 15.\n\n150\n00:07:34.913 --> 00:07:37.080\nI want to be a full administrator, right?\n\n151\n00:07:37.080 --> 00:07:38.990\nFull access to this router.\n\n152\n00:07:38.990 --> 00:07:41.590\nAnd I'll set my password to cisco123.\n\n153\n00:07:42.680 --> 00:07:43.310\nAll right.\n\n154\n00:07:43.310 --> 00:07:46.740\nSo now I've got a user account and\na password I can use on this router.\n\n155\n00:07:46.740 --> 00:07:48.050\nBut the routers not going to ask for\n\n156\n00:07:48.050 --> 00:07:52.010\nit until I say (aaa) new dash model,\nall right?\n\n157\n00:07:52.010 --> 00:07:54.106\nSo, now I've got that authentication.\n\n158\n00:07:54.106 --> 00:07:57.822\nNow, as long as my triple a system\nis working it's gonna ask for\n\n159\n00:07:57.822 --> 00:08:02.469\na username and password when I come in and\naccess the system via SSH or a telnet.\n\n160\n00:08:02.469 --> 00:08:05.162\nBut via the console, it's not.\n\n161\n00:08:05.162 --> 00:08:08.880\nVia the console, it's not gonna ask for\nthat, because we're on the console.\n\n162\n00:08:08.880 --> 00:08:09.940\nIt's different.\n\n163\n00:08:09.940 --> 00:08:14.590\nSo, on the console, it's important that\nat a minimum, we set an enable password.\n\n164\n00:08:14.590 --> 00:08:18.180\nSo I'm gonna do enable secret, and\nI'll just make it cisco123 also.\n\n165\n00:08:19.710 --> 00:08:22.100\nSo now,\nif somebody walks up to this system and\n\n166\n00:08:22.100 --> 00:08:26.770\nthey plug into the console port, they\nsee this message, they press enter, yes,\n\n167\n00:08:26.770 --> 00:08:28.770\nit gives them an unprivileged prompt.\n\n168\n00:08:28.770 --> 00:08:32.170\nBut then when they enable,\nit prompts them for a password.\n\n169\n00:08:32.170 --> 00:08:35.060\nNot a username and a password,\nwe're past that point.\n\n170\n00:08:35.060 --> 00:08:36.950\nBut now, it's just asking for\nthat password, and\n\n171\n00:08:36.950 --> 00:08:40.420\nthey would put in whatever\nthe enable password was to get in.\n\n172\n00:08:40.420 --> 00:08:43.820\nSo we definitely just secured\nphysical access to this system, but\n\n173\n00:08:43.820 --> 00:08:47.330\nif people are SSHing or Telnetting in,\nwe can use usernames and passwords,\n\n174\n00:08:47.330 --> 00:08:48.192\nwe get that extra privilege.\n\n175\n00:08:48.192 --> 00:08:55.580\nTelnet, Telnet's enabled by default, and\nby default, Telnet only needs a password.\n\n176\n00:08:55.580 --> 00:08:57.095\nIt doesn't use a username.\n\n177\n00:08:57.095 --> 00:08:59.985\nAnd so,\nit can rely on these passwords also.\n\n178\n00:08:59.985 --> 00:09:04.135\nOn my VTYs, if I get into line vty 0 4,\n\n179\n00:09:04.135 --> 00:09:07.835\nright, I'm configuring\nall five of my VTY lines.\n\n180\n00:09:07.835 --> 00:09:12.285\nIf I jump in there, you've got\na login command that you can issue.\n\n181\n00:09:13.365 --> 00:09:16.055\nAnd what the login command is\nbasically saying, require a password.\n\n182\n00:09:16.055 --> 00:09:21.210\nIf somebody's gonna Telnet in or connect\ninto this VTY, It's gonna need a password.\n\n183\n00:09:22.560 --> 00:09:27.420\nAnd you could go a step further and\nsay login authentication.\n\n184\n00:09:27.420 --> 00:09:30.771\nAnd then right here, you can specify\nan authentication list to specify a radius\n\n185\n00:09:30.771 --> 00:09:32.984\nserver or\nsomething else to authenticate against.\n\n186\n00:09:32.984 --> 00:09:36.656\nNow, once you do AAA new model,\nwhen you're in that model,\n\n187\n00:09:36.656 --> 00:09:40.130\nthis login command is no longer necessary.\n\n188\n00:09:40.130 --> 00:09:41.230\nIn fact, if you run it,\n\n189\n00:09:41.230 --> 00:09:44.810\nmost routers, oh, actually this one\nwon't even let me run login by itself.\n\n190\n00:09:44.810 --> 00:09:48.020\nOn a lot of routers that do accept it, if\nyou run it, they'll just give you an error\n\n191\n00:09:48.020 --> 00:09:51.050\nand tell you that AAA is configured,\nthat you need to go and do it over there.\n\n192\n00:09:51.050 --> 00:09:53.500\nAnd so you would do your AAA\nauthentication commands,\n\n193\n00:09:53.500 --> 00:09:57.910\nlike we saw in the radius syntax episodes.\n\n194\n00:09:57.910 --> 00:10:01.470\nSo here, I don't really need\nto configure much on this VTY,\n\n195\n00:10:01.470 --> 00:10:04.150\nit's gonna ask for\na password with Telnet and a username and\n\n196\n00:10:04.150 --> 00:10:07.770\npassword with SSH, but\nwe wanna disable Telnet.\n\n197\n00:10:07.770 --> 00:10:13.750\nSo I'm gonna come in here and\nadd transport input SSH.\n\n198\n00:10:13.750 --> 00:10:16.390\nIf you did transport input by itself, you\nwill see there's all sorts of different\n\n199\n00:10:16.390 --> 00:10:18.590\nprotocols that we can approve or deny.\n\n200\n00:10:18.590 --> 00:10:20.140\nSSH is the only one I want.\n\n201\n00:10:20.140 --> 00:10:21.970\nI don't want any of these other protocols.\n\n202\n00:10:21.970 --> 00:10:23.760\nI know SSH is encrypted.\n\n203\n00:10:23.760 --> 00:10:25.910\nI know it uses a username and\na password, and so\n\n204\n00:10:25.910 --> 00:10:28.730\nit's going to give me the best level\nof security for this particular system.\n\n205\n00:10:29.750 --> 00:10:31.850\nSo, that's the one that I want.\n\n206\n00:10:31.850 --> 00:10:35.750\nOn my VTYs, I also wanna make\nsure that I set an exec timeout.\n\n207\n00:10:35.750 --> 00:10:40.050\nSo if somebody SSHs or Telnets in, I don't\nwant them to let that session idle and\n\n208\n00:10:40.050 --> 00:10:41.820\nsomebody else be able to jump in there.\n\n209\n00:10:41.820 --> 00:10:45.100\nSo I might set a timeout here of,\nsay, 10 minutes or,\n\n210\n00:10:45.100 --> 00:10:47.260\nI do 15 minutes on the console,\nI'll do fifteen minutes here, too.\n\n211\n00:10:48.400 --> 00:10:50.640\nSo now, I've got that in place.\n\n212\n00:10:50.640 --> 00:10:56.701\nSo as far as our basic security,\nif we take a look at what we've done so\n\n213\n00:10:56.701 --> 00:11:02.240\nfar, on my console,\nI set an exec time out of 15 minutes.\n\n214\n00:11:02.240 --> 00:11:07.081\nOn my VTYs, I set a time out of 15\nminutes in a transport input SSH\n\n215\n00:11:07.081 --> 00:11:09.520\nto limit it just to SSH.\n\n216\n00:11:09.520 --> 00:11:12.160\nA few other little things you\nmight wanna be aware of on these.\n\n217\n00:11:12.160 --> 00:11:14.740\nFirst off, on a router,\nyou only have five VTYs.\n\n218\n00:11:14.740 --> 00:11:16.040\n0 through 4.\n\n219\n00:11:16.040 --> 00:11:17.970\nOn a switch, you have 16.\n\n220\n00:11:17.970 --> 00:11:20.270\nYou have 0 through 15.\n\n221\n00:11:20.270 --> 00:11:21.590\nSo you have more VTYs on a switch.\n\n222\n00:11:21.590 --> 00:11:23.870\nYou wanna make sure you get them all.\n\n223\n00:11:23.870 --> 00:11:27.510\nOtherwise, some of your\nVTYs will only be SSH and\n\n224\n00:11:27.510 --> 00:11:31.520\nother VTYs will still allow Telnet,\nso that can be a problem.\n\n225\n00:11:31.520 --> 00:11:35.330\nOn a router, we only have five by default,\nbut you can create more.\n\n226\n00:11:35.330 --> 00:11:37.180\nIf you wanna create more, you can.\n\n227\n00:11:37.180 --> 00:11:41.140\nBut then you have to be doubly\ncareful to make sure that you\n\n228\n00:11:41.140 --> 00:11:42.700\nput your protections in place for\nthose other ones.\n\n229\n00:11:42.700 --> 00:11:45.770\nLet me show you what I mean.\n\n230\n00:11:45.770 --> 00:11:49.750\nOne setting that I really like,\nI like the logging synchronous command.\n\n231\n00:11:49.750 --> 00:11:52.950\nLogging synchronous says,\nwhenever you display a log message,\n\n232\n00:11:52.950 --> 00:11:55.980\nredraw the line that was typing, and\nthat way, I don't get interrupted.\n\n233\n00:11:55.980 --> 00:11:59.740\nI hate it when I am typing commands,\nand a status message interrupts me.\n\n234\n00:11:59.740 --> 00:12:02.840\nSo I almost always issue\nthe logging synchronous command.\n\n235\n00:12:02.840 --> 00:12:05.410\nSo maybe I decide to jump in here and\n\n236\n00:12:05.410 --> 00:12:09.680\nmodify my VTYs to add some more and\nturn on logging synchronous.\n\n237\n00:12:09.680 --> 00:12:16.570\nSo I say, line vty 0,\nlet's go crazy here, we'll go 15.\n\n238\n00:12:16.570 --> 00:12:20.510\nSo I'm gonna do like a switch, and\nwhen you run line vty 0 15, see,\n\n239\n00:12:20.510 --> 00:12:21.920\nit didn't complain.\n\n240\n00:12:21.920 --> 00:12:24.350\nIt created ten more VTYs,\nso, it's right there.\n\n241\n00:12:24.350 --> 00:12:28.774\nIt just creates them dynamically, and\nnow I can issue my logging synchronous\n\n242\n00:12:28.774 --> 00:12:34.400\ncommand, and now, whenever I'm connected\nto a VTY, if a status message comes up,\n\n243\n00:12:34.400 --> 00:12:37.940\nit's gonna basically redraw my line so\nit doesn't interfere.\n\n244\n00:12:37.940 --> 00:12:42.030\nAnd if I jump over to my console,\nI might wanna do the same thing.\n\n245\n00:12:42.030 --> 00:12:44.268\nSo, everything's good.\n\n246\n00:12:44.268 --> 00:12:45.233\nWell, it's not.\n\n247\n00:12:45.233 --> 00:12:50.327\nIf I look at my config,\nand I hunt down what I\n\n248\n00:12:50.327 --> 00:12:55.460\njust did, here's line vty 0 through 4.\n\n249\n00:12:55.460 --> 00:13:01.440\nAnd then here's line vty 5 through 15,\nand notice the transport input all on 15.\n\n250\n00:13:03.170 --> 00:13:05.060\nAttackers know this behavior.\n\n251\n00:13:05.060 --> 00:13:08.240\nAnd so what they can do is they\ncan fire up an ssh client, and\n\n252\n00:13:08.240 --> 00:13:11.520\nthey can establish five connections\nto your server, to your router.\n\n253\n00:13:13.030 --> 00:13:17.640\nNot providing a password, just opening\nthe session, sending a username, and\n\n254\n00:13:17.640 --> 00:13:20.430\nthen the host,\nthey can open up five of those, and\n\n255\n00:13:20.430 --> 00:13:24.450\nonce those five are open,\nit's holding those five VTYs.\n\n256\n00:13:24.450 --> 00:13:26.670\nAnd so then,\nthey can fire up a Telnet session, and\n\n257\n00:13:26.670 --> 00:13:30.820\nit'll connect on the sixth VTY, and\nthat one's got transport input all.\n\n258\n00:13:30.820 --> 00:13:33.360\nAnd now, they can brute force a password.\n\n259\n00:13:33.360 --> 00:13:34.710\nAnd then when an SSH session dies,\n\n260\n00:13:34.710 --> 00:13:37.970\nthey just reopen it again,\nit's a scriptable attack.\n\n261\n00:13:37.970 --> 00:13:41.620\nAnd it's a great way to get in\nwhen administrators don't realize\n\n262\n00:13:41.620 --> 00:13:45.170\nthat the VTY is above four,\nso if VTY is five and\n\n263\n00:13:45.170 --> 00:13:47.710\nhigher, or\nsplit off into their own config.\n\n264\n00:13:47.710 --> 00:13:50.740\nSo we gotta be really careful with\nthat config whenever you do that\n\n265\n00:13:50.740 --> 00:13:54.540\nto make sure that you always\nconfigure your VTYs together.\n\n266\n00:13:54.540 --> 00:13:57.905\nAnd so that you can go in and\nset things like that time out so\n\n267\n00:13:57.905 --> 00:14:01.343\nthat it's common across them and\ntransport input ssh, so\n\n268\n00:14:01.343 --> 00:14:05.363\nthat that's common across them,\nand you get a consistent config.\n\n269\n00:14:05.363 --> 00:14:08.209\nAlways be aware of that.\n\n270\n00:14:08.209 --> 00:14:12.130\nAll right, let's see what else do\nwe wanna do on these consoles.\n\n271\n00:14:12.130 --> 00:14:15.820\nOn the console port, that's where\nyou plug directly into the system.\n\n272\n00:14:15.820 --> 00:14:19.550\nSo there's not really a great way\nto filter who plugs into the system\n\n273\n00:14:19.550 --> 00:14:20.430\non the router.\n\n274\n00:14:20.430 --> 00:14:24.840\nBecause of the physical port, the way you\nfilter who has access is to lock the door.\n\n275\n00:14:24.840 --> 00:14:28.535\nAnd whoever can unlock the door has\naccess to the router's console port.\n\n276\n00:14:28.535 --> 00:14:32.295\nBut on a VTY,\nwe can use an access control list, and\n\n277\n00:14:32.295 --> 00:14:35.631\nACL can be used to filter\nwho has that access.\n\n278\n00:14:35.631 --> 00:14:39.876\nSo for example, on this router right now,\nit's going to accept connections from\n\n279\n00:14:39.876 --> 00:14:44.000\nanybody, anybody could SSH to this\nrouter and attempt to log in.\n\n280\n00:14:44.000 --> 00:14:45.510\nBut I might wanna filter that.\n\n281\n00:14:45.510 --> 00:14:48.300\nAnd so I can create an access list.\n\n282\n00:14:48.300 --> 00:14:50.310\nAnd you can just use\na standard access list.\n\n283\n00:14:50.310 --> 00:14:52.680\nYou don't need to go extended on this one.\n\n284\n00:14:52.680 --> 00:14:53.890\nCuz I just wanna look at source IPs.\n\n285\n00:14:53.890 --> 00:14:58.290\nAnd I'm gonna say, here's a list of source\nIPs that are allowed to connect in.\n\n286\n00:14:58.290 --> 00:15:01.830\nAnd so I might say, my laptop.\n\n287\n00:15:01.830 --> 00:15:04.515\nAnd my laptop actually has\na couple of different IPs, so\n\n288\n00:15:04.515 --> 00:15:07.780\nI might wanna add each of\nthe different IPs that my laptop has.\n\n289\n00:15:07.780 --> 00:15:10.370\nAll right, so, these are the IPs\nthat are allowed to SSH in.\n\n290\n00:15:11.520 --> 00:15:15.310\nAnd from here,\nI can attach that access list to the VTYs.\n\n291\n00:15:15.310 --> 00:15:19.763\nSo, if I go to line vty 0 15,\nI can come here and\n\n292\n00:15:19.763 --> 00:15:26.130\nattach it by saying,\naccess-class 1 in, and there we go.\n\n293\n00:15:26.130 --> 00:15:28.365\nNow, I like to add one extra line.\n\n294\n00:15:28.365 --> 00:15:34.854\nI like to do access-list 1 deny any.\n\n295\n00:15:34.854 --> 00:15:36.829\nNow I'm doing a deny, and\nyou might be saying, wait a minute,\n\n296\n00:15:36.829 --> 00:15:38.960\nthere's an implicit deny,\nwhy bother with that?\n\n297\n00:15:38.960 --> 00:15:40.030\nI like to add log.\n\n298\n00:15:41.040 --> 00:15:43.260\nThere is an implicit deny, it's there.\n\n299\n00:15:43.260 --> 00:15:46.220\nSo it would be blocking everybody else,\nbut it's not logging it.\n\n300\n00:15:46.220 --> 00:15:47.340\nI like to get a log message.\n\n301\n00:15:47.340 --> 00:15:50.470\nI like to have that in cis log,\nso I've got a record of it.\n\n302\n00:15:50.470 --> 00:15:53.700\nAnd so now, whenever somebody tries\nto access the system via SSH,\n\n303\n00:15:53.700 --> 00:15:57.910\nand they're not one of the valid IPs,\nI'll get a log message.\n\n304\n00:15:57.910 --> 00:16:01.445\nI'm not gonna bother logging mine, because\nwe'll see when an administrator logs in,\n\n305\n00:16:01.445 --> 00:16:03.513\ncuz it'll show they made\nconfiguration changes.\n\n306\n00:16:03.513 --> 00:16:05.080\nThat makes it in the logs already.\n\n307\n00:16:05.080 --> 00:16:07.676\nBut, for people who are attempting\nto get in, I like to add that.\n\n308\n00:16:07.676 --> 00:16:11.473\nSo, if we take a look at the access\nlist as it's written now,\n\n309\n00:16:11.473 --> 00:16:14.610\nwe've got the permit lines\nfollowed by the deny.\n\n310\n00:16:14.610 --> 00:16:19.130\nAll right, so right here we've got\n\n311\n00:16:19.130 --> 00:16:23.440\nour access control set up, kind of on\nthe VTYs, and we're in good shape.\n\n312\n00:16:23.440 --> 00:16:27.540\nNow, I talked about telnet and\nhow we don't wanna use it, right?\n\n313\n00:16:27.540 --> 00:16:30.590\nIt's not really secure so\nI turn that off on the VTYs.\n\n314\n00:16:30.590 --> 00:16:33.682\nI don't really need to turn that off\nanywhere else because it's really just\n\n315\n00:16:33.682 --> 00:16:35.240\nused for those VTYs, and that's it.\n\n316\n00:16:35.240 --> 00:16:37.686\nSo, telnet is effectively\ndead on this system.\n\n317\n00:16:37.686 --> 00:16:38.718\nBut SSH is on and\n\n318\n00:16:38.718 --> 00:16:43.820\nthere is some configuration that we\nmight wanna do with that, right?\n\n319\n00:16:43.820 --> 00:16:47.546\nFirst off, SSH is on on this system,\nbut it's probably not working, right.\n\n320\n00:16:47.546 --> 00:16:49.368\nSSH requires a certificate.\n\n321\n00:16:49.368 --> 00:16:53.780\nAnd if I take a look at my running config\nand I kinda look down the line here,\n\n322\n00:16:53.780 --> 00:16:58.030\nI'll notice that there's no\ncertificate in my configuration.\n\n323\n00:16:58.030 --> 00:17:01.560\nSo as it stands, I'm kinda stuck right?\n\n324\n00:17:01.560 --> 00:17:03.613\nSo SSH isn't gonna work.\n\n325\n00:17:03.613 --> 00:17:05.120\nI mean, I guess we could test that, right?\n\n326\n00:17:05.120 --> 00:17:08.260\nIf I jump over to a, I thought I\nhad a terminal sitting around here.\n\n327\n00:17:09.750 --> 00:17:15.573\nIf I try and log in to the router,\nright, so I'm gonna SSH.\n\n328\n00:17:15.573 --> 00:17:18.754\nAnd I'm using admin as my user account,\nthat's what we created.\n\n329\n00:17:18.754 --> 00:17:21.261\nAnd I'm connecting to 10.1.230.11.\n\n330\n00:17:21.261 --> 00:17:24.140\nAnd when I go to connect,\nI get connection refused.\n\n331\n00:17:24.140 --> 00:17:25.731\nAnd why is that?\n\n332\n00:17:25.731 --> 00:17:26.892\nWell, there's no certificate.\n\n333\n00:17:26.892 --> 00:17:29.630\nSSH doesn't work without a certificate.\n\n334\n00:17:29.630 --> 00:17:33.690\nThere's two ways to quickly and\neasily get a certificate on the router.\n\n335\n00:17:33.690 --> 00:17:36.280\nWhen I have to do this,\nI always kind of make a decision.\n\n336\n00:17:37.330 --> 00:17:41.010\nWe can administer the router using HTTP,\nusing the web page.\n\n337\n00:17:41.010 --> 00:17:44.190\nThere's actually a built-in web\nserver on your Cisco routers and\n\n338\n00:17:44.190 --> 00:17:45.550\nswitches that you can use.\n\n339\n00:17:45.550 --> 00:17:49.240\nIf you're gonna use that,\nwhen you turn on the secure version,\n\n340\n00:17:49.240 --> 00:17:51.000\nthe router will create a certificate for\nyou.\n\n341\n00:17:51.000 --> 00:17:53.620\nThat's one of the easiest\nways to get a certificate, or\n\n342\n00:17:53.620 --> 00:17:54.830\nyou can create it yourself.\n\n343\n00:17:54.830 --> 00:17:58.870\nIf you're not gonna use that web server,\nyou can create a certificate yourself.\n\n344\n00:17:58.870 --> 00:18:02.020\nTo do it, the first thing we\nneed is we need a host name.\n\n345\n00:18:02.020 --> 00:18:03.359\nNow, I've already got\na host name of Router.\n\n346\n00:18:04.380 --> 00:18:06.160\nYou can stick with that or\nyou can change it.\n\n347\n00:18:06.160 --> 00:18:07.550\nBut you also need a domain name.\n\n348\n00:18:07.550 --> 00:18:10.450\nCertificates require\na fully qualified domain.\n\n349\n00:18:10.450 --> 00:18:15.190\nSo I need to say ip domain-name,\nand then provide it a name, right.\n\n350\n00:18:15.190 --> 00:18:17.371\nSo I'll say lab.itpro.tv.\n\n351\n00:18:17.371 --> 00:18:19.080\nAnd so I'll chunk that in.\n\n352\n00:18:19.080 --> 00:18:21.080\nNow I've got a domain name.\n\n353\n00:18:21.080 --> 00:18:25.090\nSo my system is router.lab.itpro.tv.\n\n354\n00:18:25.090 --> 00:18:31.002\nAnd from here I can say\ncrypto key gen rsa.\n\n355\n00:18:31.002 --> 00:18:32.580\nI'm gonna create an rsa certificate.\n\n356\n00:18:32.580 --> 00:18:35.980\nThis is the same certificate that\nthe secure web server would use.\n\n357\n00:18:35.980 --> 00:18:37.930\nSSH is gonna use it, also.\n\n358\n00:18:37.930 --> 00:18:40.739\nBut, when I run it, it's gonna ask me.\n\n359\n00:18:40.739 --> 00:18:43.310\nOh, actually, it's not gonna let\nme use that router name, is it?\n\n360\n00:18:43.310 --> 00:18:49.270\nSo let me just change my name\nto lab-router, all right.\n\n361\n00:18:49.270 --> 00:18:51.630\nAnd now I'll run that.\n\n362\n00:18:51.630 --> 00:18:54.030\nAnd it's gonna ask me\nwhat my key modulus is.\n\n363\n00:18:54.030 --> 00:18:57.750\nNow, if you accept the default, you're\ngonna have a little bit of a problem.\n\n364\n00:18:57.750 --> 00:18:59.340\nSSH is still not going to work.\n\n365\n00:19:00.370 --> 00:19:05.556\nSSH version one requires at\nleast a 768 bit key modulus.\n\n366\n00:19:05.556 --> 00:19:13.370\nSSH version two requires a 2,048,\nif I remember right, bit modulus.\n\n367\n00:19:13.370 --> 00:19:16.571\nSo we need a stronger modulus for\nSSH version two.\n\n368\n00:19:16.571 --> 00:19:19.700\nAnd SSH version tow is\nreally what you want to run.\n\n369\n00:19:19.700 --> 00:19:20.910\nSo don't accept the default.\n\n370\n00:19:20.910 --> 00:19:22.230\nInstead, punch in a higher number.\n\n371\n00:19:22.230 --> 00:19:25.880\nI'll punch in 2048,\nall right, a nice, big key.\n\n372\n00:19:25.880 --> 00:19:29.684\nIf you turn on the secure server,\nit's going to do a 2048 anyways.\n\n373\n00:19:29.684 --> 00:19:32.690\nSo this is basically doing the same thing\nas turning on the secure web server.\n\n374\n00:19:32.690 --> 00:19:33.960\nBut here, we're doing it manually.\n\n375\n00:19:33.960 --> 00:19:35.190\nSo, I'm going to do 2048.\n\n376\n00:19:35.190 --> 00:19:38.840\nNow, when you're running on a physical\nrouter, depending on how new your router\n\n377\n00:19:38.840 --> 00:19:41.490\nis, this can happen pretty quick,\nor it can be slow.\n\n378\n00:19:41.490 --> 00:19:44.510\nIf you're on like an 800 series router,\nthis can take a few moments.\n\n379\n00:19:44.510 --> 00:19:45.403\nIm on a 2800.\n\n380\n00:19:45.403 --> 00:19:46.990\nThey're pretty fast, so there we go.\n\n381\n00:19:46.990 --> 00:19:52.551\nI've got my certificate, and\nsee how it says SSH 1.99 has been enabled.\n\n382\n00:19:52.551 --> 00:19:57.032\nNow I mentioned SSH version one,\nand I mentioned SSH version two.\n\n383\n00:19:57.032 --> 00:20:00.316\nI never mentioned 1.99, what is that?\n\n384\n00:20:00.316 --> 00:20:04.060\nOkay, SSH version 1.99 doesn't exist.\n\n385\n00:20:04.060 --> 00:20:06.120\nWhat it is, is a fake version number.\n\n386\n00:20:06.120 --> 00:20:08.132\nAnd it's part of the standard for SSH.\n\n387\n00:20:08.132 --> 00:20:11.532\nThey say if your device\nsupports version 1 and\n\n388\n00:20:11.532 --> 00:20:15.902\nversion 2,\nthen you advertise your version as 1.99.\n\n389\n00:20:15.902 --> 00:20:16.810\nAnd so that's what I'm doing.\n\n390\n00:20:16.810 --> 00:20:19.713\nMy router supports both version one and\nversion two.\n\n391\n00:20:19.713 --> 00:20:21.804\nSo I'm advertising 1.99.\n\n392\n00:20:21.804 --> 00:20:23.558\nAnd when a client connects,\nthey'll see that.\n\n393\n00:20:23.558 --> 00:20:27.526\nOr, hey, somebody might have hardset\nthemselves to version one, and\n\n394\n00:20:27.526 --> 00:20:28.830\nI don't want that.\n\n395\n00:20:28.830 --> 00:20:30.500\nI want to make sure they use version two.\n\n396\n00:20:30.500 --> 00:20:34.081\nSo I need to disable version one.\n\n397\n00:20:34.081 --> 00:20:36.410\nAnd this is a step a lot of people forget.\n\n398\n00:20:36.410 --> 00:20:38.640\nThe command is actually\npretty straightforward.\n\n399\n00:20:38.640 --> 00:20:42.220\nIf you do ip ssh and then a question mark,\n\n400\n00:20:42.220 --> 00:20:45.140\nyou'll see you've got a number of\ndifferent settings in here we can tweak.\n\n401\n00:20:45.140 --> 00:20:45.955\nMost people never do, right.\n\n402\n00:20:45.955 --> 00:20:47.570\nThey just leave SSH at the default.\n\n403\n00:20:47.570 --> 00:20:54.360\nI'm gonna say ip ssh version, and then\nright here you can hard set the version.\n\n404\n00:20:54.360 --> 00:20:56.130\nI'm gonna hard set it to 2.\n\n405\n00:20:56.130 --> 00:21:01.290\nOkay, so now I don't support version\n1 anymore, I only support version 2.\n\n406\n00:21:01.290 --> 00:21:06.450\nPeople can SSH in and get connected, and\nI'll know that they're using version 2.\n\n407\n00:21:06.450 --> 00:21:09.290\nAll right, so\nthat's kind of an important thing.\n\n408\n00:21:09.290 --> 00:21:14.910\nAnd if you do a show ip ssh, right, that's\ngonna show you information about it.\n\n409\n00:21:14.910 --> 00:21:20.197\nAnd see how mine says,\nSSH Enabled, version 2.0, right?\n\n410\n00:21:20.197 --> 00:21:23.472\nIt's not 1.99 anymore, now it's 2.0.\n\n411\n00:21:23.472 --> 00:21:28.160\nAnd here's my certificate and\nmy basic other settings that are in place.\n\n412\n00:21:28.160 --> 00:21:31.920\nAnd so now I can go to a client,\nI can copy this key.\n\n413\n00:21:31.920 --> 00:21:36.608\nThis key's already in the right format,\nI can copy that to my Linux machine and\n\n414\n00:21:36.608 --> 00:21:38.181\nthrow it in as a known key.\n\n415\n00:21:38.181 --> 00:21:41.031\nAnd then SSH in and\nauthenticate with that key, and\n\n416\n00:21:41.031 --> 00:21:46.050\nit'll know that that device is the right\ndevice because the keys match, right?\n\n417\n00:21:46.050 --> 00:21:49.960\nI can also just download the key\nwhen I connect the first time if I\n\n418\n00:21:49.960 --> 00:21:52.580\nknow that I've got a reliable\nconnection to that system.\n\n419\n00:21:52.580 --> 00:21:56.540\nSo if I try and SSH in now,\nI don't get my connection rejected.\n\n420\n00:21:56.540 --> 00:21:59.760\nIt's offering to download that\ncertificate, so I'll let it download.\n\n421\n00:21:59.760 --> 00:22:02.720\nAnd then once it's in, now I can log in.\n\n422\n00:22:02.720 --> 00:22:06.750\nAnd I'm providing my password\nvia the secure connection.\n\n423\n00:22:06.750 --> 00:22:08.670\nAnd now I'm in, and I'm in the router.\n\n424\n00:22:08.670 --> 00:22:12.149\nAnd so right here I'm in lab-router,\nand I can enable and\n\n425\n00:22:12.149 --> 00:22:14.495\nstart to work with the router, right.\n\n426\n00:22:14.495 --> 00:22:15.191\nThere we go.\n\n427\n00:22:15.191 --> 00:22:18.732\nSo getting SSH configured,\nit is a few steps.\n\n428\n00:22:18.732 --> 00:22:22.192\nThere's a few little security concerns\nwe need to make sure we accommodate for.\n\n429\n00:22:22.192 --> 00:22:25.849\nBut otherwise we're pretty much golden,\nright.\n\n430\n00:22:25.849 --> 00:22:27.010\nSo there we go.\n\n431\n00:22:27.010 --> 00:22:28.473\nSSH is up and running.\n\n432\n00:22:28.473 --> 00:22:33.511\nOur VTYs are now that much more secure,\nSSH version two.\n\n433\n00:22:33.511 --> 00:22:35.775\nWe can go crazy with this.\n\n434\n00:22:35.775 --> 00:22:39.870\nWe can actually do a few more things\nto it than what I've done here.\n\n435\n00:22:39.870 --> 00:22:43.820\nBut for the most part, these are the key\nones that we need to know for the exam.\n\n436\n00:22:43.820 --> 00:22:46.410\nNow I mentioned HTTP.\n\n437\n00:22:46.410 --> 00:22:47.070\nWith HTTP,\n\n438\n00:22:47.070 --> 00:22:51.170\nyou actually do have a web server that's\na part of most Cisco devices these days.\n\n439\n00:22:51.170 --> 00:22:56.030\nDepending on your router, it may or\nmay not be disabled by default, all right?\n\n440\n00:22:56.030 --> 00:22:59.400\nIf we look at this config,\nactually let me get out of that terminal.\n\n441\n00:22:59.400 --> 00:22:59.964\nHere we go.\n\n442\n00:22:59.964 --> 00:23:04.108\nAnd if I take a look at my running config,\nand I'm just gonna look for\n\n443\n00:23:04.108 --> 00:23:05.362\nany line with http.\n\n444\n00:23:05.362 --> 00:23:10.640\nI can see that I've got no ip http\nserver and no ip http secure-server.\n\n445\n00:23:10.640 --> 00:23:13.990\nSo the web server on\nthis router is disabled.\n\n446\n00:23:13.990 --> 00:23:14.980\nBut I know it's got one.\n\n447\n00:23:14.980 --> 00:23:18.273\nFor example,\nif you look at the file system,\n\n448\n00:23:18.273 --> 00:23:23.486\nsee how I've got this home.html and\nI've got HOME.TAR, SDM.TAR.\n\n449\n00:23:23.486 --> 00:23:28.195\nThese are all archives that are consisting\nof the web page that's designed for\n\n450\n00:23:28.195 --> 00:23:29.390\nthis router.\n\n451\n00:23:29.390 --> 00:23:30.730\nI just can't access it right now.\n\n452\n00:23:30.730 --> 00:23:35.631\nIf I were to fire up a web browser here\nand try and browse to 10.1.230.11,\n\n453\n00:23:35.631 --> 00:23:38.469\nwhich is my router,\nI get that I can't connect.\n\n454\n00:23:38.469 --> 00:23:43.452\nOkay, but I can turn that on by saying,\n\n455\n00:23:43.452 --> 00:23:49.045\nip http server and ip http secure-server.\n\n456\n00:23:49.045 --> 00:23:50.529\nNow see what it's doing?\n\n457\n00:23:50.529 --> 00:23:52.307\nIt's generating a key and\noh, actually I was wrong.\n\n458\n00:23:52.307 --> 00:23:57.920\nI said it would generate a 2048 bit key,\nbut it's actually doing a 1024 bit key.\n\n459\n00:23:57.920 --> 00:23:59.971\nIt's a good thing we\ngenerated our own key.\n\n460\n00:23:59.971 --> 00:24:04.995\nSo [LAUGH] here we can see it's generated\na certificate for the web server to use.\n\n461\n00:24:04.995 --> 00:24:07.133\nAnd now it's up and running, right?\n\n462\n00:24:07.133 --> 00:24:10.677\nWell what that means is that I\ncan go to my web browser and\n\n463\n00:24:10.677 --> 00:24:13.230\nI can browse to this router.\n\n464\n00:24:13.230 --> 00:24:15.210\nAnd here it is asking for\na user name and a password and\n\n465\n00:24:15.210 --> 00:24:18.580\nit's warning me,\nyour password will be sent unencrypted.\n\n466\n00:24:18.580 --> 00:24:23.310\nSo if I come in here and log in, somebody\ncan be sniffing my traffic on the network,\n\n467\n00:24:23.310 --> 00:24:28.350\nand now I get intercepted and\nthey have my username and password, right?\n\n468\n00:24:28.350 --> 00:24:33.580\nSo it's important that we turn\non the secure web server,\n\n469\n00:24:33.580 --> 00:24:38.490\nwhich I did, so I could browse to,\ninstead of browsing to this,\n\n470\n00:24:38.490 --> 00:24:43.670\nI could browse to HTTPS\nslash slash 10.1.230 dot 11.\n\n471\n00:24:43.670 --> 00:24:45.420\nAnd now I'm gonna connect securely.\n\n472\n00:24:45.420 --> 00:24:48.400\nNow, we're using a self-signed certificate\nso my browser isn't trusting it, but\n\n473\n00:24:48.400 --> 00:24:49.850\nI can continue on.\n\n474\n00:24:49.850 --> 00:24:52.370\nAnd now it's gonna ask for\nmy user name and password, but\n\n475\n00:24:52.370 --> 00:24:55.360\nit's doing it securely this time.\n\n476\n00:24:55.360 --> 00:24:56.970\nOkay, and I'm getting a 404 not found.\n\n477\n00:24:56.970 --> 00:25:01.970\nAnd that's because on the routers\nwhere the web access is disabled.\n\n478\n00:25:01.970 --> 00:25:04.670\nYou actually have to install the webpage,\n\n479\n00:25:04.670 --> 00:25:07.970\nand it's expecting it to be in a subfolder\ncalled Archive, and my aren't,\n\n480\n00:25:07.970 --> 00:25:12.210\nmy files are just sitting there in roots,\nthat's why I'm getting that 404.\n\n481\n00:25:12.210 --> 00:25:17.990\nBut basically the web server is up, and if\nI enable things like the SDM and the web\n\n482\n00:25:17.990 --> 00:25:23.290\nbased GUI on this system, we'd hit that\npage and we'd start to see that content.\n\n483\n00:25:23.290 --> 00:25:25.960\nIf you're going to use\nthe web server piece,\n\n484\n00:25:25.960 --> 00:25:28.310\nmake sure you turn off the non secure one.\n\n485\n00:25:28.310 --> 00:25:29.180\nYou don't need it.\n\n486\n00:25:29.180 --> 00:25:30.610\nThe secure one is perfectly fine.\n\n487\n00:25:30.610 --> 00:25:35.030\nEvery browser supports it, so\nyou can do a no IP HTTP server,\n\n488\n00:25:36.600 --> 00:25:39.230\nand it's still running the secure one.\n\n489\n00:25:39.230 --> 00:25:46.250\nIf I try and browse to just plain old HTTP\n10.1.230.11, I get that I can't connect.\n\n490\n00:25:46.250 --> 00:25:51.740\nBut if I change that to\nHTTPS I can connect.\n\n491\n00:25:51.740 --> 00:25:53.490\nSo it's able to connect and\nget to that system, so\n\n492\n00:25:53.490 --> 00:25:59.040\nyou don't need to have just the HTTP\nserver turned on, you can leave it off.\n\n493\n00:25:59.040 --> 00:26:03.280\nAnd leave these secure server on,\ndefinitely something to look at there too.\n\n494\n00:26:03.280 --> 00:26:08.200\nAnd just like VTYs, we can restrict\nthese web servers to an ACL and\n\n495\n00:26:08.200 --> 00:26:09.410\nthat's another great idea.\n\n496\n00:26:09.410 --> 00:26:12.580\nYou don't want just anybody on your\nnetwork being able to browse this webpage\n\n497\n00:26:12.580 --> 00:26:14.240\nand try brute force a login.\n\n498\n00:26:14.240 --> 00:26:14.830\nRight?\n\n499\n00:26:14.830 --> 00:26:17.320\nSo we'll normally attach an ACL to this.\n\n500\n00:26:17.320 --> 00:26:23.170\nI already made an ACL for my VTYs, you\ncan just reuse that same ACL is you want.\n\n501\n00:26:23.170 --> 00:26:26.860\nThe command's not hard, it's IP HTTP\n\n502\n00:26:26.860 --> 00:26:31.150\naccess dash class and\nthen whatever access list you made.\n\n503\n00:26:31.150 --> 00:26:33.170\nAnd see how it only\nsupports a standard ACL?\n\n504\n00:26:33.170 --> 00:26:35.360\nAnd that's because you're\nfiltering based on the source IP.\n\n505\n00:26:35.360 --> 00:26:41.980\nAnd so when I run that, now my laptop\nis the only device in this list.\n\n506\n00:26:41.980 --> 00:26:43.650\nRight?\nThose are the three IPs on my laptop.\n\n507\n00:26:43.650 --> 00:26:45.250\nYou can see the one I am using right now.\n\n508\n00:26:45.250 --> 00:26:49.720\nAnd it is going to limit that\naccess just to my laptop.\n\n509\n00:26:49.720 --> 00:26:52.460\nAnd anybody else is going to get denied,\nand I will have a log of it.\n\n510\n00:26:52.460 --> 00:26:54.560\nRight?\nSo now we have protected that.\n\n511\n00:26:54.560 --> 00:26:56.530\nNow if you want to go extra secure,\n\n512\n00:26:56.530 --> 00:26:59.650\nyou can actually change the default\nport of the web server.\n\n513\n00:26:59.650 --> 00:27:03.740\nSo the unencrypted\nconnection port is TCP 80.\n\n514\n00:27:03.740 --> 00:27:06.930\nThe encrypted one is TCP port 443.\n\n515\n00:27:06.930 --> 00:27:08.300\nYou can change it.\n\n516\n00:27:08.300 --> 00:27:10.760\nThere's another option here on the system.\n\n517\n00:27:10.760 --> 00:27:15.190\nIf you say IP HTTP,\nyou'll see that you've got\n\n518\n00:27:15.190 --> 00:27:20.910\na secure-port right here\nwhere we can modify the port.\n\n519\n00:27:20.910 --> 00:27:22.540\nAnd then you got regular port right there.\n\n520\n00:27:22.540 --> 00:27:25.520\nIf you are gonna use this regular HTTP,\nyou can turn that one on.\n\n521\n00:27:25.520 --> 00:27:30.850\nSo I can say port and\nspecify like 5080 and\n\n522\n00:27:30.850 --> 00:27:37.750\nsecured dash port and give may be 50 443.\n\n523\n00:27:37.750 --> 00:27:43.960\nThis is not a great form of security.\n\n524\n00:27:43.960 --> 00:27:46.210\nThis is what's called\nsecurity through obscurity.\n\n525\n00:27:46.210 --> 00:27:48.270\nWe're trying to hide the ports, but\n\n526\n00:27:48.270 --> 00:27:50.030\nan attacker could\npotentially still find them.\n\n527\n00:27:50.030 --> 00:27:53.430\nSo that's why the ACL is still important,\nthat's why your firewall rules,\n\n528\n00:27:53.430 --> 00:27:55.510\nthose are important,\nthese are all things...\n\n529\n00:27:55.510 --> 00:27:57.160\nThat we've got to be aware of, right?\n\n530\n00:27:57.160 --> 00:28:00.630\nSo just a couple little extra things\nthat we kind of tweak and add,\n\n531\n00:28:00.630 --> 00:28:04.980\nand put in there,\nto improve the security on these services.\n\n532\n00:28:04.980 --> 00:28:07.520\nNow for me,\nI never use the web server, right.\n\n533\n00:28:07.520 --> 00:28:09.540\nThat's why this router is\nnot quite configured for it.\n\n534\n00:28:09.540 --> 00:28:12.350\nSo I always turn it off,\nit's not something I turn on.\n\n535\n00:28:12.350 --> 00:28:15.720\nUse the CLI to configure it or use\nremote management tools to configure it.\n\n536\n00:28:15.720 --> 00:28:17.020\nYou don't necessarily\nneed to web server here.\n\n537\n00:28:17.020 --> 00:28:17.910\nEven if you're using the SDM,\n\n538\n00:28:17.910 --> 00:28:21.690\nyou can still kinda get around not\nhaving that web server feature here.\n\n539\n00:28:21.690 --> 00:28:24.640\nBut ideally, if you wanna use the SDM,\n\n540\n00:28:24.640 --> 00:28:27.820\nif you wanna use the web interface on it,\nyou should turn those on,\n\n541\n00:28:27.820 --> 00:28:31.220\nget them configured, and configure\nthem securely to protect your system.\n\n542\n00:28:31.220 --> 00:28:33.790\nSo definitely things we\nwanna keep in mind on that.\n\n543\n00:28:35.080 --> 00:28:39.390\nAll right, well this is just the tip of\nthe iceberg for some of these services.\n\n544\n00:28:39.390 --> 00:28:42.930\nI probably didn't hit anything too new and\nexciting for you on this one.\n\n545\n00:28:42.930 --> 00:28:46.140\nBut if you haven't done them in a while\nthese are important they are on the exam\n\n546\n00:28:46.140 --> 00:28:48.590\nso definitely something\nyou want to be aware of.\n\n547\n00:28:48.590 --> 00:28:52.560\nBut in this episode we got a chance to see\nhow to secure our console how to secure\n\n548\n00:28:52.560 --> 00:28:56.940\nour vty and how to secure the web\nserver inside of our routers.\n\n549\n00:28:56.940 --> 00:28:58.190\nAnd how to get them nice and configured.\n\n550\n00:28:58.190 --> 00:29:02.140\nThe only thing I didn't show was alternate\nauthentication for the web server, and\n\n551\n00:29:02.140 --> 00:29:04.980\nif you jump back to the RADIUS and\nTACACS show, we covered it back there.\n\n552\n00:29:04.980 --> 00:29:07.050\nSo that's why I didn't want\nto double up on it here.\n\n553\n00:29:07.050 --> 00:29:09.710\nBut just another piece that\nyou wanna stack on there.\n\n554\n00:29:11.050 --> 00:29:12.570\nAll right.\nWell, that's it for this episode,\n\n555\n00:29:12.570 --> 00:29:14.390\nstay tuned, though,\ncuz we got a part two coming up.\n\n556\n00:29:14.390 --> 00:29:17.810\nWe're gonna tackle some more things, like\nsome of the different services available\n\n557\n00:29:17.810 --> 00:29:21.800\nfor copying files from and to our router,\nand a few other guys like that.\n\n558\n00:29:21.800 --> 00:29:25.980\nGot a lot more services, so definitely\nstay tuned for that but for this episode,\n\n559\n00:29:25.980 --> 00:29:26.990\nwe'll sign off here.\n\n560\n00:29:26.990 --> 00:29:31.453\nSo signing off for ITProTV I'm Don Pazett,\nand I'll see you next time.\n\n561\n00:29:31.453 --> 00:29:35.512\n[SOUND]\n\n",
          "vimeoId": "140174557"
        },
        {
          "description": "One thing one will have to handle sooner or later with a Cisco router is getting files like iOS or configuration files copied to or from the router and being able to transmit data back and forth. Viewers will hear about ways to securely move files back and forth between systems, using a Cisco router as an FTP, TFTP and SCP client to upload and download files from the IOS CLI and see demonstrations on how to configure a Cisco router as a TFTP or SCP server to allow users to upload and download files to a router from their own workstations.",
          "length": "1202",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/ccnproute/cisco-ccnproute300101-6-1-device_management_pt2-092215-1.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/ccnproute/cisco-ccnproute300101-6-1-device_management_pt2-092215-1-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/ccnproute/cisco-ccnproute300101-6-1-device_management_pt2-092215-1-sm.jpg",
          "title": "Device Management Part 2",
          "transcript": "WEBVTT\n\n1\n00:00:00.000 --> 00:00:10.000\n[MUSIC]\n\n2\n00:00:11.016 --> 00:00:13.724\nAll right, good morning,\ngood afternoon, and good evening, and\n\n3\n00:00:13.724 --> 00:00:15.541\nwelcome back to another\nepisode of ITProTV.\n\n4\n00:00:15.541 --> 00:00:17.380\nI'm your host, Don Pezet.\n\n5\n00:00:17.380 --> 00:00:20.090\nBack again with another\nepisode of CCNP Route.\n\n6\n00:00:20.090 --> 00:00:23.000\nAnd this is actually\npart two to an episode\n\n7\n00:00:23.000 --> 00:00:25.000\nthat we already started\non device management.\n\n8\n00:00:25.000 --> 00:00:28.610\nAnd all the crazy infrastructure\nservices we find in the background\n\n9\n00:00:28.610 --> 00:00:30.140\nof a Cisco router.\n\n10\n00:00:30.140 --> 00:00:34.290\nIn our last episode we talked about kind\nof securing access to the router itself.\n\n11\n00:00:34.290 --> 00:00:37.410\nAnd now we're gonna take a look\nat a few other things we can\n\n12\n00:00:37.410 --> 00:00:41.040\nconfigure on the system that help\nus as far as managing the device.\n\n13\n00:00:41.040 --> 00:00:42.730\nItself, all right?\n\n14\n00:00:42.730 --> 00:00:44.600\nOne thing that you're\ngonna bump into sooner or\n\n15\n00:00:44.600 --> 00:00:48.440\nlater with a Cisco router is that you're\ngonna need to either get files copied\n\n16\n00:00:48.440 --> 00:00:51.680\nto the router or\nfiles copied off of the router.\n\n17\n00:00:51.680 --> 00:00:53.610\nYou gotta be able to transmit\nthings back and forth.\n\n18\n00:00:53.610 --> 00:00:55.680\nAnd by files I usually mean iOS files.\n\n19\n00:00:55.680 --> 00:00:58.190\nRight?\nWe're upgrading or downgrading our iOS.\n\n20\n00:00:58.190 --> 00:01:01.690\nit might be config files,\nI want to backup my configuration or\n\n21\n00:01:01.690 --> 00:01:05.110\nrestore my configuration, we need to\nbe able to copy these back and forth.\n\n22\n00:01:05.110 --> 00:01:06.960\nAnd for years, and years, and\n\n23\n00:01:06.960 --> 00:01:11.820\nyears, TFTP was the standard protocol\nthat was used for that, right?\n\n24\n00:01:11.820 --> 00:01:15.490\nYou'll see it in a lot of textbooks, it's\nall over the Internet, people use TFTP.\n\n25\n00:01:15.490 --> 00:01:17.480\nThat's the Trivial File Transfer Protocol,\nand\n\n26\n00:01:17.480 --> 00:01:20.500\nyou guys remember TFTP's biggest weakness?\n\n27\n00:01:20.500 --> 00:01:23.340\nNo username and password,\neverything in clear text.\n\n28\n00:01:23.340 --> 00:01:27.210\nSo if you're transmitting configs this\nway, it's a little bit dangerous.\n\n29\n00:01:27.210 --> 00:01:29.540\nThere are other things\nthat you can use too.\n\n30\n00:01:29.540 --> 00:01:32.935\nOne of my big complaints about\nTFTP was how slow it was.\n\n31\n00:01:32.935 --> 00:01:38.105\nIf I wanna copy something like an iOS\nimage to a TFTP server, it takes forever.\n\n32\n00:01:38.105 --> 00:01:41.655\nAnd that's because TFTP uses UDP and\nit just kind of\n\n33\n00:01:41.655 --> 00:01:45.135\nthrows the packets out there and\nit doesn't do a great job and it's slow.\n\n34\n00:01:45.135 --> 00:01:47.795\nIt was designed for\ntrivial things, small things.\n\n35\n00:01:47.795 --> 00:01:49.375\nWhen moving an iOS image,\n\n36\n00:01:49.375 --> 00:01:53.660\nit's a lot faster to use FTP FTP\nis the file transfer protocol.\n\n37\n00:01:53.660 --> 00:01:55.120\nIt does support a username and\n\n38\n00:01:55.120 --> 00:01:59.500\npassword and it moves things a lot more\nreliably, but it's still clear tech.\n\n39\n00:01:59.500 --> 00:02:03.800\nSo it's not the perfect replacement for\nTFTP.\n\n40\n00:02:03.800 --> 00:02:05.400\nWe do have a third option though.\n\n41\n00:02:05.400 --> 00:02:08.520\nAnd this is what a lot of people don't\nmake use of, and it's called SCP,\n\n42\n00:02:08.520 --> 00:02:11.290\nthe secure copy protocol.\n\n43\n00:02:11.290 --> 00:02:16.360\nSCP allows us to copy files to and\nfrom the router, and do it encrypted.\n\n44\n00:02:16.360 --> 00:02:18.910\nWhat its doing is its taking\nthe Unix copy command and\n\n45\n00:02:18.910 --> 00:02:20.940\nit's running it over an SSH tunnel.\n\n46\n00:02:20.940 --> 00:02:24.550\nSo it's using the same encryption we use\nfor our SSH shells to be able to access\n\n47\n00:02:24.550 --> 00:02:26.790\nthe router, but\nto encrypt the files we transit.\n\n48\n00:02:26.790 --> 00:02:29.350\nAnd that's a lot more secure.\n\n49\n00:02:29.350 --> 00:02:29.850\nAll right.\n\n50\n00:02:29.850 --> 00:02:32.460\nSo let's run through a couple of quick\nexamples here of how we can kinda move\n\n51\n00:02:32.460 --> 00:02:33.530\nthis data around.\n\n52\n00:02:33.530 --> 00:02:38.930\nI'm going to take my router and my router\njust has a real basic configuration on it,\n\n53\n00:02:38.930 --> 00:02:41.400\nwhich I need to enable here.\n\n54\n00:02:41.400 --> 00:02:42.310\nThere we go.\n\n55\n00:02:42.310 --> 00:02:44.990\nAnd I'm just going to\nsave my configuration and\n\n56\n00:02:44.990 --> 00:02:47.440\non the show when I save my configuration.\n\n57\n00:02:47.440 --> 00:02:52.310\nI almost always run WR, which is that\nshorthand, right, for writing memory.\n\n58\n00:02:52.310 --> 00:02:56.000\nBut the actual command that I\nshould use if I was a better person\n\n59\n00:02:56.000 --> 00:03:00.350\nwould be copy running-config\nstartup-config.\n\n60\n00:03:00.350 --> 00:03:03.610\nI'm saving what's running in\nmemory to what's gonna start up\n\n61\n00:03:03.610 --> 00:03:05.450\nthe next time this router reboots.\n\n62\n00:03:05.450 --> 00:03:07.970\nSo if I want to backup my config,\n\n63\n00:03:07.970 --> 00:03:11.150\nit's that startup-config\nthat I want to back up.\n\n64\n00:03:11.150 --> 00:03:13.010\nThat's the one But I want to back up.\n\n65\n00:03:13.010 --> 00:03:16.860\nNow it's being saved in my NV ram.\n\n66\n00:03:16.860 --> 00:03:17.370\nRight?\nAnd so\n\n67\n00:03:17.370 --> 00:03:18.640\nyou can actually spot it right there.\n\n68\n00:03:18.640 --> 00:03:21.530\nThere's that start up config and\nit's just a text file.\n\n69\n00:03:21.530 --> 00:03:23.210\nSo if I want to back up\nthis routers config,\n\n70\n00:03:23.210 --> 00:03:25.540\nI just need to copy that somewhere else.\n\n71\n00:03:25.540 --> 00:03:27.920\nI can copy it to another\nlocation right here.\n\n72\n00:03:27.920 --> 00:03:33.910\nFor example,\nI could say copy startup dash config to\n\n73\n00:03:33.910 --> 00:03:39.300\nflash colon slash, and I might say\nsomething like config dash 09222015.\n\n74\n00:03:39.300 --> 00:03:42.620\nSo this is a config backup from today.\n\n75\n00:03:42.620 --> 00:03:47.270\nAnd I might want to put some hyphens in so\nI can remember my Convention here.\n\n76\n00:03:47.270 --> 00:03:49.970\nAnd so now,\nI'll have a backup of that config.\n\n77\n00:03:49.970 --> 00:03:52.470\nAnd I'm just gonna save\nthat over to flash.\n\n78\n00:03:52.470 --> 00:03:58.370\nIf I take a look at my flash,\nI'll see it right here.\n\n79\n00:03:58.370 --> 00:03:59.710\nI've got a backup of the config.\n\n80\n00:03:59.710 --> 00:04:02.230\nAnd I can copy that to my startup or\nrunning at any time.\n\n81\n00:04:02.230 --> 00:04:04.080\nI've got a backup right\nhere on the router.\n\n82\n00:04:04.080 --> 00:04:06.580\nBut oftentimes you want\nthat backup somewhere else.\n\n83\n00:04:06.580 --> 00:04:10.740\nAnd so when we run that copy command,\nwe probably send it somewhere else.\n\n84\n00:04:10.740 --> 00:04:13.420\nSomewhere like a TFTP server, right?\n\n85\n00:04:13.420 --> 00:04:17.870\nSo I could say,\nTFTP is my destination, and\n\n86\n00:04:17.870 --> 00:04:20.670\nI might even choose to throw\nlike a .txt on the end, so\n\n87\n00:04:20.670 --> 00:04:23.400\nthat I could just open it up as\na text file on the other system.\n\n88\n00:04:23.400 --> 00:04:24.320\nAnd so I can send that out.\n\n89\n00:04:24.320 --> 00:04:30.150\nNow when you specify a TFTP server, you do\nneed to give the IP address of the server.\n\n90\n00:04:30.150 --> 00:04:32.390\nAnd so I'll point to one\nthat I have on my network.\n\n91\n00:04:32.390 --> 00:04:34.550\nWe're actually providing\nmore of a URL here, right,\n\n92\n00:04:34.550 --> 00:04:36.090\nlike when you browse to a web page.\n\n93\n00:04:36.090 --> 00:04:41.260\nSo TFTP colon slash slash the IP of\nthe server, slash, and the file name.\n\n94\n00:04:41.260 --> 00:04:43.780\nNow TFTP does not support subfolders, so\n\n95\n00:04:43.780 --> 00:04:46.590\nI just need to specify a file name and\nthat's it.\n\n96\n00:04:46.590 --> 00:04:48.040\nI could leave it off and\nit would prompt me for it.\n\n97\n00:04:48.040 --> 00:04:51.480\nBut by doing it here,\nit's all gonna go in one thing.\n\n98\n00:04:51.480 --> 00:04:55.690\nAnd it's gonna upload it and\nsend it to that server.\n\n99\n00:04:55.690 --> 00:04:59.800\nNow back to using TFTP and apparently I'm\nhaving some reachability issues getting to\n\n100\n00:04:59.800 --> 00:05:03.010\nthat server so, my data is not making\nit along, it's going to retry for\n\n101\n00:05:03.010 --> 00:05:04.820\na second and then it'll give up.\n\n102\n00:05:04.820 --> 00:05:06.680\nI could've used FTP also.\n\n103\n00:05:06.680 --> 00:05:09.220\nAnd I think that's probably the real\nproblem is I didn't check that server\n\n104\n00:05:09.220 --> 00:05:13.190\nbeforehand to see if it was running\nTFTP because, well we don't use it here.\n\n105\n00:05:13.190 --> 00:05:15.500\nRight?\nWe use other protocols.\n\n106\n00:05:15.500 --> 00:05:20.140\nSo for example if I want to use FTP\ninstead it's not really much different.\n\n107\n00:05:20.140 --> 00:05:21.550\nRight?\nThe command syntax is\n\n108\n00:05:21.550 --> 00:05:23.320\nbasically the same except\nwe get rid of the t.\n\n109\n00:05:25.380 --> 00:05:30.660\nAnd FTP does support subfolders, so I\ncould specify a folder name if I wanted or\n\n110\n00:05:30.660 --> 00:05:32.920\nI could just leave it like this and\nrun it.\n\n111\n00:05:32.920 --> 00:05:34.770\nAnd it's gonna send that\nover to that other host.\n\n112\n00:05:34.770 --> 00:05:36.410\nAnd there it goes.\nThat server is running FTP.\n\n113\n00:05:36.410 --> 00:05:39.460\nI just drop it over there.\n\n114\n00:05:39.460 --> 00:05:41.780\nBut FTP does support username and\npassword.\n\n115\n00:05:41.780 --> 00:05:43.910\nSo what if that server requires\nusername and password?\n\n116\n00:05:43.910 --> 00:05:45.900\nWell here it just tried to do anonymous.\n\n117\n00:05:45.900 --> 00:05:49.370\nSo if it's requiring anonymous,\nwell, that's no big deal.\n\n118\n00:05:49.370 --> 00:05:52.520\nBut if it's requiring an actual username\nand password, I've got a problem.\n\n119\n00:05:52.520 --> 00:05:55.330\nTo fix that, if you jump into config,\n\n120\n00:05:55.330 --> 00:05:59.180\nwe can actually predefine the username and\npassword that it uses.\n\n121\n00:05:59.180 --> 00:06:01.970\nYou just come in here and\nbasically say, ip ftp.\n\n122\n00:06:03.180 --> 00:06:06.300\nAnd then you can specify a username and\na password.\n\n123\n00:06:06.300 --> 00:06:08.470\nYou can also specify a source interface,\n\n124\n00:06:08.470 --> 00:06:11.940\nif you want to tie it to a particular IP,\nand whether it's passive or not.\n\n125\n00:06:11.940 --> 00:06:14.950\nPassive FTP is supported\nby a lot of systems.\n\n126\n00:06:14.950 --> 00:06:18.670\nNow, when I punch in this username and\npassword, i'll just kind of hard set,\n\n127\n00:06:18.670 --> 00:06:23.390\nwell anonymous is the default so\nif I say like dpezet, and\n\n128\n00:06:24.410 --> 00:06:27.100\nI got say username dpezet, there we go.\n\n129\n00:06:27.100 --> 00:06:31.310\nAnd then I can say ip ftp password,\nand what I want that password to be.\n\n130\n00:06:31.310 --> 00:06:32.250\nSo maybe it's cisco123.\n\n131\n00:06:33.250 --> 00:06:36.520\nOkay, be careful here\nbecause the username and\n\n132\n00:06:36.520 --> 00:06:38.380\npassword is being stored in your config.\n\n133\n00:06:38.380 --> 00:06:43.880\nIf I take a look at my running config\nI'll find where there's my username and\n\n134\n00:06:43.880 --> 00:06:44.720\npassword.\n\n135\n00:06:44.720 --> 00:06:45.280\nOkay.\n\n136\n00:06:45.280 --> 00:06:50.830\nAnd if we do something like turn\non service password encryption and\n\n137\n00:06:50.830 --> 00:06:52.770\nthen we take a look at it, alright.\n\n138\n00:06:52.770 --> 00:06:56.100\nI can see that it is now type 70\nencrypted, so I've at least got that.\n\n139\n00:06:56.100 --> 00:06:58.060\nBut if somebody writes this down,\n\n140\n00:06:58.060 --> 00:07:00.790\nthere's type seven password\ndecrypters all over the Internet.\n\n141\n00:07:00.790 --> 00:07:04.300\nSo this just stops the light shoulder\nsurfer, somebody kinda looking over your\n\n142\n00:07:04.300 --> 00:07:07.810\nshoulder, but\nit's not really a great level of security.\n\n143\n00:07:07.810 --> 00:07:08.430\nAll right?\n\n144\n00:07:08.430 --> 00:07:12.680\nBut now that I've got that username and\npassword defined, when I run the FTP\n\n145\n00:07:12.680 --> 00:07:17.960\ncommand that I ran a minute go, so\nif I rerun, where'd it go, this guy.\n\n146\n00:07:17.960 --> 00:07:21.080\nWhoops, I guess I have to get out of\nconfig for this to work, don't I?\n\n147\n00:07:21.080 --> 00:07:26.090\nSo if I rerun this command right here,\nwhen it goes to FTP to that server,\n\n148\n00:07:26.090 --> 00:07:28.610\nit's, how do I keep jumping into config?\n\n149\n00:07:28.610 --> 00:07:32.980\nI keep [LAUGH] all right, well I'm\ndestined to stay in config apparently.\n\n150\n00:07:32.980 --> 00:07:37.110\nBut if I go and copy that over to FTP,\nI'm not providing a username and\n\n151\n00:07:37.110 --> 00:07:38.650\npassword on this line.\n\n152\n00:07:38.650 --> 00:07:41.640\nIt's gonna use what's in the config,\nand it's gonna go and try and\n\n153\n00:07:41.640 --> 00:07:44.410\nlogin to that system with my username and\npassword.\n\n154\n00:07:44.410 --> 00:07:48.048\nNow, that user account doesn't exist, so\nI get incorrect login and password, but\n\n155\n00:07:48.048 --> 00:07:50.624\nthat's how we can send the username and\npassword with FTP.\n\n156\n00:07:51.695 --> 00:07:55.920\nNow, FTP and TFTP,\nboth plain text, both unencrypted.\n\n157\n00:07:55.920 --> 00:08:01.345\nSo, not great ways to move sensitive\nthings like configuration All right,\n\n158\n00:08:01.345 --> 00:08:05.510\nSCP on the other hand does move it,\nencrypted.\n\n159\n00:08:05.510 --> 00:08:08.730\nBut secure copy is not\nsupported by everything.\n\n160\n00:08:08.730 --> 00:08:12.630\nSo really, you need to have a Linux or\na Unix server floating around that you can\n\n161\n00:08:12.630 --> 00:08:15.900\nuse SCP with to copy those\nfiles over to it, all right?\n\n162\n00:08:15.900 --> 00:08:20.030\nSo, with SCP, it's the same basic syntax,\njust a little bit different.\n\n163\n00:08:20.030 --> 00:08:22.190\nWe're gonna basically change FTP to SCP.\n\n164\n00:08:24.390 --> 00:08:31.770\nAnd then you'll specify the username,\n@, and then the IP you're connecting to.\n\n165\n00:08:31.770 --> 00:08:33.810\nAnd then your file name after that, okay?\n\n166\n00:08:33.810 --> 00:08:37.775\nSo with this, the username,\nthat's your user for the SSH connection.\n\n167\n00:08:37.775 --> 00:08:42.010\nIt's gonna build an SSH tunnel first and\nthen copy over it, okay?\n\n168\n00:08:42.010 --> 00:08:46.110\nSo, when it fires that off,\nwhere's it get its password from?\n\n169\n00:08:46.110 --> 00:08:48.400\nWell, the answer is,\nthat it's gonna have to ask you.\n\n170\n00:08:48.400 --> 00:08:52.640\nSo whenever you run SCP,\nit's gonna say, what's your username?\n\n171\n00:08:52.640 --> 00:08:55.120\nAnd I just used generic username,\nso that's what it's got there.\n\n172\n00:08:55.120 --> 00:08:57.860\nFilename, and then it's gonna\nhave to ask for the password.\n\n173\n00:08:57.860 --> 00:08:59.520\nNow here it tried to reach\nout to the server, and\n\n174\n00:08:59.520 --> 00:09:02.510\nI'm not actually running SEP on\nthat server, so it didn't do it.\n\n175\n00:09:02.510 --> 00:09:06.080\nBut if I was, it would touch the server,\nit would show me the certificate\n\n176\n00:09:06.080 --> 00:09:08.790\nfingerprint, and\nthen it would prompt me for my password.\n\n177\n00:09:08.790 --> 00:09:11.550\nAnd so I can provide the password,\nlog in securely, and\n\n178\n00:09:11.550 --> 00:09:13.280\nthen transmit the files securely.\n\n179\n00:09:13.280 --> 00:09:18.290\nSo, SCP is a great way to handle that and\nmove data securely.\n\n180\n00:09:18.290 --> 00:09:21.240\nBut you will need to set up a server\nsomewhere to be able to host that.\n\n181\n00:09:21.240 --> 00:09:23.414\nNow, everything I just\nshowed you right there,\n\n182\n00:09:23.414 --> 00:09:26.275\nthat's basically using your\nrouter as a client, right?\n\n183\n00:09:26.275 --> 00:09:28.415\nOur a router connected to a TFTP server.\n\n184\n00:09:28.415 --> 00:09:31.650\nOur router connected to an FTP server,\nor SCP.\n\n185\n00:09:31.650 --> 00:09:34.460\nBut your router can actually\nact as the server also.\n\n186\n00:09:34.460 --> 00:09:36.730\nAnd so that your laptop can be the client.\n\n187\n00:09:36.730 --> 00:09:40.940\nFor example,\nI might not have a TFTP server ready, but\n\n188\n00:09:40.940 --> 00:09:45.400\nI want to get a file from my router and\nTFTP is the only thing supported.\n\n189\n00:09:45.400 --> 00:09:50.520\nWell, I can set up the router as the TFTP\nserver and I can download files.\n\n190\n00:09:50.520 --> 00:09:53.850\nNow, when you set a router as\na TFTP server, it's read only.\n\n191\n00:09:53.850 --> 00:09:54.990\nIt'll let you download files.\n\n192\n00:09:54.990 --> 00:09:57.500\nBut you can't upload files using TFTP.\n\n193\n00:09:57.500 --> 00:10:00.960\nYou can set up your\nroute as an SCP server.\n\n194\n00:10:00.960 --> 00:10:04.430\nAnd then you can upload files\nto it using SCP if you want.\n\n195\n00:10:04.430 --> 00:10:07.052\nBut you can download also,\nso you kind of do both.\n\n196\n00:10:07.052 --> 00:10:10.150\nSCP is that better protocol, so\nthat's kinda the way that Cisco is pushing\n\n197\n00:10:10.150 --> 00:10:12.870\neverybody to go, is to start\nswitching over the SCP, all right?\n\n198\n00:10:12.870 --> 00:10:17.188\nBut there just hasn't been widespread\nadoption on the desktop and\n\n199\n00:10:17.188 --> 00:10:19.350\non the server side, even.\n\n200\n00:10:19.350 --> 00:10:23.930\nIf you go on the internet and\nlook for a GUI based SCP client.\n\n201\n00:10:23.930 --> 00:10:27.370\nWell, on Windows there's WinSCP,\nwhich comes packed full of spyware.\n\n202\n00:10:27.370 --> 00:10:28.030\nIt's an awesome program.\n\n203\n00:10:28.030 --> 00:10:29.870\nYou'll definitely want to install that.\n\n204\n00:10:29.870 --> 00:10:31.030\nAnd that's it.\n\n205\n00:10:31.030 --> 00:10:32.910\nAnd in Mac,\n\n206\n00:10:32.910 --> 00:10:37.160\nI don't know of a single SCP client\nthat's GUI based that actually works.\n\n207\n00:10:37.160 --> 00:10:39.350\nSo there's a few out there\nthat just don't work.\n\n208\n00:10:39.350 --> 00:10:42.710\nSo, you're really tied to your\ncommand line tools with SCP.\n\n209\n00:10:42.710 --> 00:10:45.000\nIf you've got a Linux box or\nany kind of Unix box,\n\n210\n00:10:45.000 --> 00:10:48.250\na Mac, you can drop to your command\nline and you'll have SCP there.\n\n211\n00:10:48.250 --> 00:10:50.450\nOn Windows, you have to install SigWin.\n\n212\n00:10:50.450 --> 00:10:53.630\nYou have to get the Linux or\nUnix subsystem in place and\n\n213\n00:10:53.630 --> 00:10:55.280\nthen you can use those commands.\n\n214\n00:10:55.280 --> 00:10:58.760\nSo, SCP's not as user friendly\nfrom the client side, but\n\n215\n00:10:58.760 --> 00:11:00.850\nto set up a router as a server,\n\n216\n00:11:00.850 --> 00:11:04.980\nthere's really just a few commands that\nwe need to do to get this in place.\n\n217\n00:11:04.980 --> 00:11:09.020\nSo, for example,\nif I wanna be a TFTP server, all right?\n\n218\n00:11:09.020 --> 00:11:11.890\nI guess first off I should mention,\nyour router can't be an FTP server.\n\n219\n00:11:11.890 --> 00:11:13.150\nThat one's not supported.\n\n220\n00:11:13.150 --> 00:11:16.350\nTFTP and STP are the two modes\nthat it can be a server on.\n\n221\n00:11:16.350 --> 00:11:21.150\nSo, if I want to be, for example, a TFTP\nserver, well it actually already is.\n\n222\n00:11:21.150 --> 00:11:22.920\nIt's already a TFTP server.\n\n223\n00:11:22.920 --> 00:11:24.810\nIt's just not serving up any files.\n\n224\n00:11:24.810 --> 00:11:28.070\nYou have to approve\neach file individually.\n\n225\n00:11:28.070 --> 00:11:33.226\nSo you use the tftp-server command,\nand then you specify the file\n\n226\n00:11:33.226 --> 00:11:38.120\nthat you want to advertise,\nto allow to be accessed with TFTP.\n\n227\n00:11:38.120 --> 00:11:41.467\nSo if I do a dir and\nI look at my flash, and\n\n228\n00:11:41.467 --> 00:11:45.540\nmaybe I want to download this ILS file,\nright?\n\n229\n00:11:45.540 --> 00:11:47.470\nI wanna download that ILS file.\n\n230\n00:11:47.470 --> 00:11:54.160\nSo I can say tftp-server flash:/ and\nthe file name, all right?\n\n231\n00:11:54.160 --> 00:11:56.950\nAnd if you continue with a question\nmark you'll see you can attach an access\n\n232\n00:11:56.950 --> 00:11:58.510\ncontrol list to it.\n\n233\n00:11:58.510 --> 00:12:02.350\nAnd so now I can have an ACL\nattached to limit who can use TFTP.\n\n234\n00:12:02.350 --> 00:12:03.670\nAnd I can even send an alias for\n\n235\n00:12:03.670 --> 00:12:06.190\nthe file name because that's\na really long file name.\n\n236\n00:12:06.190 --> 00:12:08.770\nI might want to attach something\nshorter to use as the name.\n\n237\n00:12:08.770 --> 00:12:09.830\nBut I'm not going to do those.\n\n238\n00:12:09.830 --> 00:12:11.150\nI'm just going to press Enter.\n\n239\n00:12:11.150 --> 00:12:13.640\nAnd now that file is shared out, okay?\n\n240\n00:12:13.640 --> 00:12:15.795\nAnd if I wanna get a copy of that file,\n\n241\n00:12:15.795 --> 00:12:19.080\nI can jump over to like a terminal\nhere on my own machine.\n\n242\n00:12:19.080 --> 00:12:22.460\nNow on a Mac, there's a built in TFTP\nclient and on Linux there is too.\n\n243\n00:12:22.460 --> 00:12:26.830\nAnd so I can just run tftp and\nthe host I want to connect to.\n\n244\n00:12:26.830 --> 00:12:28.149\nSo I'm connect to my router and\n\n245\n00:12:28.149 --> 00:12:30.960\nthen I'll just say get, and\nI'll put in that file name, right?\n\n246\n00:12:30.960 --> 00:12:34.234\nSo this is the file that I wanna reach\nout and get, and when I run that,\n\n247\n00:12:34.234 --> 00:12:35.830\nit's gonna start downloading.\n\n248\n00:12:35.830 --> 00:12:39.027\nAnd I can actually see it\nback there on my desktop, but\n\n249\n00:12:39.027 --> 00:12:41.950\nlet me bring a window here and\njump to my desktop.\n\n250\n00:12:41.950 --> 00:12:45.000\nAnd there is that C2800NMIPvoice.\n\n251\n00:12:45.000 --> 00:12:50.020\nDownloading it right now and starting\nto copy, I'm a massive 275K into it.\n\n252\n00:12:50.020 --> 00:12:51.500\nTFTP's not fast, right?\n\n253\n00:12:51.500 --> 00:12:52.780\nAlways keep that in mind.\n\n254\n00:12:52.780 --> 00:12:54.700\nBut it does, at least work, right?\n\n255\n00:12:54.700 --> 00:12:57.590\nIt will let us transfer the file and\nget that data moved across.\n\n256\n00:12:57.590 --> 00:13:00.110\nThis is really cool,\nif you are working remotely and\n\n257\n00:13:00.110 --> 00:13:03.120\nyou've got one router that has\nthe latest IOS and you got other routers\n\n258\n00:13:03.120 --> 00:13:06.920\nyou want to update, you can turn\nyour main router into a TFTP server.\n\n259\n00:13:06.920 --> 00:13:11.390\nAnd have your other routes download\nthe IOS from the main router, right?\n\n260\n00:13:11.390 --> 00:13:13.790\nAnd it's okay to send them unencrypted,\nit's just an IOS file.\n\n261\n00:13:13.790 --> 00:13:16.760\nIf somebody intercepts that, well,\nit's just the IOS file, right?\n\n262\n00:13:16.760 --> 00:13:18.830\nCisco makes them available for download.\n\n263\n00:13:18.830 --> 00:13:22.660\nSo, that's not a huge risk,\nTFTP works really well for that.\n\n264\n00:13:22.660 --> 00:13:26.500\nSCP, on the other hand, if I wanna\nsecure copy a file up to a router,\n\n265\n00:13:26.500 --> 00:13:29.170\nI can do that from my terminal also.\n\n266\n00:13:29.170 --> 00:13:30.250\nI'm gonna kill this connection here.\n\n267\n00:13:30.250 --> 00:13:32.170\nI don't need to download the whole thing.\n\n268\n00:13:32.170 --> 00:13:36.580\nAnd so let's say I've got a file like oh,\nI don't know.\n\n269\n00:13:36.580 --> 00:13:39.100\nI'll just create a test.txt file.\n\n270\n00:13:39.100 --> 00:13:41.110\nAnd this is some data.\n\n271\n00:13:42.620 --> 00:13:43.990\nSo I'll just put some information in.\n\n272\n00:13:43.990 --> 00:13:45.730\nSo I've got this test.txt file.\n\n273\n00:13:45.730 --> 00:13:50.130\nMaybe it's a config, whatever it is,\nand I want to upload that to my router.\n\n274\n00:13:50.130 --> 00:13:52.310\nWe can use SCP to send\nit up to the router.\n\n275\n00:13:52.310 --> 00:13:53.420\nNow, before we do that,\n\n276\n00:13:53.420 --> 00:13:58.720\nwe have to make sure the router knows that\nit's an SCP server, it's not by default.\n\n277\n00:13:58.720 --> 00:14:03.657\nSo on your router, if you jump into\nyour config, you can run ip scp\n\n278\n00:14:03.657 --> 00:14:08.240\nserver, enable, right?\n\n279\n00:14:08.240 --> 00:14:12.040\nThat's the command right there to\ngo ahead and get SCP turned on.\n\n280\n00:14:12.040 --> 00:14:15.550\nSCP will not work unless you\nalready have SSH configured.\n\n281\n00:14:15.550 --> 00:14:17.930\nSo get SSH configured,\nconnect to the router,\n\n282\n00:14:17.930 --> 00:14:21.100\nmake sure that you can actually\nestablish an SSH connection.\n\n283\n00:14:21.100 --> 00:14:24.480\nOnce you verify that,\nthen you can use SCP.\n\n284\n00:14:24.480 --> 00:14:29.750\nAnd with SCP the,\nthe syntax is basically like this.\n\n285\n00:14:29.750 --> 00:14:33.500\nWe say SCP, assuming you have\nthe command line utility.\n\n286\n00:14:33.500 --> 00:14:38.180\nAnd Rick in our chatroom mentioned\non Windows Putty, p-u-t-t-y, right?\n\n287\n00:14:38.180 --> 00:14:40.970\nThe Putty SSH and Telnet client.\n\n288\n00:14:40.970 --> 00:14:44.282\nIt actually has a SCP command\nline available for it too, so\n\n289\n00:14:44.282 --> 00:14:47.670\nmuch easier than Cygwin which\nis what I mentioned earlier.\n\n290\n00:14:47.670 --> 00:14:52.940\nBut we can say scp, and then I'm gonna\nspecify what it is that I'm trying to do.\n\n291\n00:14:52.940 --> 00:14:57.610\nI'm trying to copy a file, and\nthe file I'm trying to copy is test.txt.\n\n292\n00:14:57.610 --> 00:15:00.960\nSo I wanna secure copy\nthis file to a server.\n\n293\n00:15:00.960 --> 00:15:03.560\nAnd the server,\nI need to specify username@,\n\n294\n00:15:03.560 --> 00:15:07.420\nand then the IP address of that server.\n\n295\n00:15:07.420 --> 00:15:12.190\nAnd then we'll say : and what we want to\nthe file to be called on the other side.\n\n296\n00:15:12.190 --> 00:15:15.897\nSo it might be something like this,\nI want it to be called test.txt or\n\n297\n00:15:15.897 --> 00:15:18.690\nstartup-config or whatever.\n\n298\n00:15:18.690 --> 00:15:21.420\nAnd when we run that,\nit's gonna establish that connection.\n\n299\n00:15:21.420 --> 00:15:24.750\nNow, it doesn't know my password so\nit's gonna have to prompt me for that.\n\n300\n00:15:24.750 --> 00:15:26.020\nThere it is.\n\n301\n00:15:26.020 --> 00:15:27.260\nAnd I can provide it.\n\n302\n00:15:27.260 --> 00:15:29.160\nAnd it's gonna reach up,\nand it's gonna copy it.\n\n303\n00:15:29.160 --> 00:15:32.460\nAnd [LAUGH] when I created my user account\nI didn't give myself the right permission,\n\n304\n00:15:32.460 --> 00:15:33.710\nso it just denied me there.\n\n305\n00:15:33.710 --> 00:15:37.550\nBut if we have have the right permissions,\nwe'll be able to upload that file and\n\n306\n00:15:37.550 --> 00:15:39.250\ndump it onto the system.\n\n307\n00:15:39.250 --> 00:15:40.680\nNow, why did I get privilege denied?\n\n308\n00:15:40.680 --> 00:15:42.240\nWell, remember something I said earlier.\n\n309\n00:15:42.240 --> 00:15:46.085\nI said we really need to test SSH\nbeforehand to make sure it's working\n\n310\n00:15:46.085 --> 00:15:47.680\nbefore we use SCP.\n\n311\n00:15:47.680 --> 00:15:49.630\nAnd I didn't follow my own advice.\n\n312\n00:15:49.630 --> 00:15:51.940\nIf I were to ssh into that router, right?\n\n313\n00:15:51.940 --> 00:15:57.073\nSo if I were to reach over to it with\nssh and log in, it's gonna connect up.\n\n314\n00:15:57.073 --> 00:15:59.650\nThe router has a certificate,\nI already trust it.\n\n315\n00:15:59.650 --> 00:16:02.809\nI'm gonna provide my password And\nI connect, my accounts valid.\n\n316\n00:16:02.809 --> 00:16:04.732\nBut look at that greater then sign, right.\n\n317\n00:16:04.732 --> 00:16:08.095\nI'm logged into the regular,\nunprivileged mode prompt, right,\n\n318\n00:16:08.095 --> 00:16:10.020\nthis is a regular user prompt.\n\n319\n00:16:10.020 --> 00:16:13.100\nA regular user doesn't have\npermission to write the file system.\n\n320\n00:16:13.100 --> 00:16:15.530\nBut, if I go back to my router and\nI look at my config,\n\n321\n00:16:15.530 --> 00:16:17.440\nI'm privilege level 15, aren't I?\n\n322\n00:16:17.440 --> 00:16:19.260\nWell, I think so, let's find out.\n\n323\n00:16:19.260 --> 00:16:22.345\nSo if I do a run,\nit is possible I just forgot the command.\n\n324\n00:16:22.345 --> 00:16:23.840\n[LAUGH] That does happen.\n\n325\n00:16:23.840 --> 00:16:27.950\nBut if I look in here for it, I can see,\nno I do have privilege level 15.\n\n326\n00:16:27.950 --> 00:16:33.230\nSo if I have privilege level 15, why am I\nnot getting privilege mode when I log in?\n\n327\n00:16:33.230 --> 00:16:36.630\nAnd the reason is,\nI forgot to set up authorization.\n\n328\n00:16:36.630 --> 00:16:38.310\nI either forgot, or\njust didn't do it, right?\n\n329\n00:16:38.310 --> 00:16:41.170\nSo when you authenticate,\nthe default is to authenticating,\n\n330\n00:16:41.170 --> 00:16:43.460\nis the local user database, right?\n\n331\n00:16:43.460 --> 00:16:48.700\nWell, it is for the V2I session,\nbut it isn't for the exec prompt.\n\n332\n00:16:48.700 --> 00:16:50.211\nWhen you get the exec prompt,\n\n333\n00:16:50.211 --> 00:16:54.337\nit's authenticating with just the enable\npassword if you've got one, right.\n\n334\n00:16:54.337 --> 00:16:57.670\nSo everybody logs into an unprivileged\nprompt and then you have to enable.\n\n335\n00:16:57.670 --> 00:17:00.480\nWell SCP doesn't know about enable so\nthat doesn't work.\n\n336\n00:17:00.480 --> 00:17:04.400\nSo I've got to make sure that SSH takes\nme right to the privileged mode prompt,\n\n337\n00:17:04.400 --> 00:17:06.140\notherwise this isn't gonna work.\n\n338\n00:17:06.140 --> 00:17:09.950\nSo I need to jump back into my config and\nfix that.\n\n339\n00:17:09.950 --> 00:17:18.056\nAnd so all we need to do is say triple-a\nauthentication default local, all right.\n\n340\n00:17:18.056 --> 00:17:24.140\nWhoops, triple-a, authentication\n[LAUGH] I have to tell it what, right?\n\n341\n00:17:24.140 --> 00:17:28.690\nSo, login is what I'm authenticating,\ndefault local.\n\n342\n00:17:28.690 --> 00:17:31.850\nSo when somebody goes to log in,\n\n343\n00:17:31.850 --> 00:17:34.930\nwe need to authenticate him\nagainst that local user database.\n\n344\n00:17:34.930 --> 00:17:40.720\nAnd then I need to say\ntriple-a authorization exec.\n\n345\n00:17:40.720 --> 00:17:45.610\nWhen somebody gets an execution context,\nwhen they drop to a shell,\n\n346\n00:17:45.610 --> 00:17:50.750\nI need to make sure that they\ndo that default local also.\n\n347\n00:17:50.750 --> 00:17:54.300\nAnd that's where it's gonna see\nthat my user has privilege 15,\n\n348\n00:17:54.300 --> 00:17:57.310\nand that I should go right\nto that enable prompt.\n\n349\n00:17:57.310 --> 00:18:02.472\nAll right, and so now,\nby switching those two over,\n\n350\n00:18:02.472 --> 00:18:05.818\nif I jump over to my computer here.\n\n351\n00:18:05.818 --> 00:18:10.654\nIf I SSH in again, this time when I SSH\nin, it's gonna connect up, ask for\n\n352\n00:18:10.654 --> 00:18:13.470\nmy password, there we go, I'm in.\n\n353\n00:18:13.470 --> 00:18:15.560\nAnd see how I went straight to\nthe privileged mode prompt.\n\n354\n00:18:15.560 --> 00:18:18.310\nI've got the hash or pound symbol so\n\n355\n00:18:18.310 --> 00:18:21.690\nI went right to it and\nnow I'm in the higher privilege mode.\n\n356\n00:18:21.690 --> 00:18:24.970\nSo now if I go and retry that SCP command,\n\n357\n00:18:24.970 --> 00:18:28.600\nI'm just gonna rerun that same command,\nall right?\n\n358\n00:18:28.600 --> 00:18:31.310\nIt's gonna reach out to\nthat server to connect and\n\n359\n00:18:31.310 --> 00:18:33.350\nit's going to prompt my password.\n\n360\n00:18:33.350 --> 00:18:36.810\nAnd this time it's gonna get\na shell that's privilege level 15.\n\n361\n00:18:36.810 --> 00:18:40.720\nAnd now it copies that file over,\nI can see test.txt just copied over.\n\n362\n00:18:40.720 --> 00:18:47.866\nAnd if I jump over to my router and I do\na dir, I can see test.txt right there.\n\n363\n00:18:47.866 --> 00:18:50.602\nThat could have been a config\nfile that I uploaded, and\n\n364\n00:18:50.602 --> 00:18:53.900\nnow I just send it into running or\nwhatever, and off we go.\n\n365\n00:18:53.900 --> 00:18:58.570\nI could update an IOS image this way,\nall using SCP, the secure copy protocol.\n\n366\n00:18:58.570 --> 00:19:01.320\nSo just a couple little steps to get\nthrough to get that one running, and\n\n367\n00:19:01.320 --> 00:19:04.120\nthat's gonna make sure\nthat we're more secure.\n\n368\n00:19:04.120 --> 00:19:06.660\nDefinitely remember that one of\nthe first commands I had to run was\n\n369\n00:19:06.660 --> 00:19:10.660\nip scp server enable.\n\n370\n00:19:10.660 --> 00:19:14.404\nUnlike the other protocols,\nSCP is not enabled by default as a server.\n\n371\n00:19:14.404 --> 00:19:19.360\nWell, I say unlike the other ones, FTP\ncan't be a server, and TFTP is enabled,\n\n372\n00:19:19.360 --> 00:19:22.070\nbut you have to specify\nthe individual files, right, so\n\n373\n00:19:22.070 --> 00:19:23.620\nyou gotta kinda put that in place.\n\n374\n00:19:23.620 --> 00:19:27.090\nBut otherwise, this one's up and\nrunning and now we're good to go.\n\n375\n00:19:27.090 --> 00:19:30.899\nSo, easy ways to securely move files\nback and forth between our systems.\n\n376\n00:19:32.290 --> 00:19:35.919\nAll right, well we still have a lot\nmore to go as far as our infrastructure\n\n377\n00:19:35.919 --> 00:19:39.085\nmanagement and other services\nthat are running on our router.\n\n378\n00:19:39.085 --> 00:19:42.565\nSo stay tuned for more, we're gonna\njump into a Part 3 on this series,\n\n379\n00:19:42.565 --> 00:19:44.136\ndo we move through a few others.\n\n380\n00:19:44.136 --> 00:19:45.395\nI wanna tackle SNMP next,\n\n381\n00:19:45.395 --> 00:19:48.897\nwhich is a pretty cool protocol and\nway to communicate with the routers.\n\n382\n00:19:48.897 --> 00:19:50.363\nSo definitely tune in for that.\n\n383\n00:19:50.363 --> 00:19:54.368\nBut for this episode, signing off for\nITProTV, I'm Don Pezet, and\n\n384\n00:19:54.368 --> 00:19:55.828\nI'll see you next time.\n\n385\n00:19:55.828 --> 00:20:01.930\n[SOUND]\n\n",
          "vimeoId": "140174560"
        },
        {
          "description": "Management protocols run in the background on a router and can be useful for monitoring the routers functionality and provide information about it. Viewers will hear about some of the management protocols available for monitoring routers and see demonstrations of configuring the Simple Network Management Protocol (SNMP) on a Cisco router to allow monitoring health and utilization information in the Cisco IOS and configuring Cisco IOS to transmit log information to a central SysLog server.",
          "length": "1728",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/ccnproute/cisco-ccnproute300101-6-1-device_management_pt3-092215-1.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/ccnproute/cisco-ccnproute300101-6-1-device_management_pt3-092215-1-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/ccnproute/cisco-ccnproute300101-6-1-device_management_pt3-092215-1-sm.jpg",
          "title": "Device Management Part 3",
          "transcript": "WEBVTT\n\n1\n00:00:00.000 --> 00:00:10.529\n[MUSIC]\n\n2\n00:00:10.529 --> 00:00:13.499\nAll right, good morning,\ngood afternoon, and good evening and\n\n3\n00:00:13.499 --> 00:00:15.559\nwelcome back to another\nepisode of ITProTV.\n\n4\n00:00:15.559 --> 00:00:19.991\nI'm your host Don Pezet, back again\nwith another episode of CCNP Routing.\n\n5\n00:00:19.991 --> 00:00:23.239\nAnd this is actually part three to\nour Infrastructure Services and\n\n6\n00:00:23.239 --> 00:00:24.970\nDevice Management series.\n\n7\n00:00:24.970 --> 00:00:27.840\nAs we're taking a looking at a lot of\nthe different features and bells and\n\n8\n00:00:27.840 --> 00:00:32.050\nwhistles in the background on a Cisco\nrouter that sometimes gets over looked.\n\n9\n00:00:32.050 --> 00:00:35.317\nAnd in this episode I really want to\nfocus on some of the management protocols\n\n10\n00:00:35.317 --> 00:00:37.256\nthat are available that\nare really useful for\n\n11\n00:00:37.256 --> 00:00:40.797\nmonitoring our routers to make sure that\nthey're healthy and happy, all right?\n\n12\n00:00:40.797 --> 00:00:44.655\nAnd one of the best protocols for\nthat is a protocol called SNMP,\n\n13\n00:00:44.655 --> 00:00:48.450\nthe simple network management protocol,\nall right?\n\n14\n00:00:48.450 --> 00:00:52.692\nSNMP has been around for a long time,\nand it provides basically a database,\n\n15\n00:00:52.692 --> 00:00:56.868\na virtual database that you can query\nagainst to get information about your\n\n16\n00:00:56.868 --> 00:00:57.411\nrouter.\n\n17\n00:00:57.411 --> 00:00:59.760\nDo you wanna know if an interface is up or\ndown?\n\n18\n00:00:59.760 --> 00:01:00.827\nSNMP can tell you.\n\n19\n00:01:00.827 --> 00:01:02.880\nDo you wanna know what\nversion iOS you're running?\n\n20\n00:01:02.880 --> 00:01:04.027\nSNMP can tell you.\n\n21\n00:01:04.027 --> 00:01:05.820\nDo you wanna know how much\nbandwidth are you using?\n\n22\n00:01:05.820 --> 00:01:06.725\nSNMP can tell you.\n\n23\n00:01:06.725 --> 00:01:08.100\nAll you have to do is ask it.\n\n24\n00:01:08.100 --> 00:01:12.330\nWell, all you have to do is configure\nit first, and then you can ask it.\n\n25\n00:01:12.330 --> 00:01:15.350\nAnd there's tons of software out there,\nlike CiscoWorks,\n\n26\n00:01:15.350 --> 00:01:19.750\nSolarWinds network performance monitor,\nWhatsup Gold.\n\n27\n00:01:19.750 --> 00:01:23.410\nThere's a ton of different products out\nthere that can monitor that data and\n\n28\n00:01:23.410 --> 00:01:26.570\ngive you a nice GUI that tells you\nexactly what you're looking at,\n\n29\n00:01:26.570 --> 00:01:28.820\nit's really good stuff, all right?\n\n30\n00:01:28.820 --> 00:01:32.230\nBut, getting it configured on\nthe router and it's coming online,\n\n31\n00:01:32.230 --> 00:01:35.380\nwe gotta jump in there and configure\na few settings to make it available.\n\n32\n00:01:35.380 --> 00:01:38.090\nNow, there's three versions\nof SNMP that's out there.\n\n33\n00:01:38.090 --> 00:01:40.910\nSNMP version one,\nwhich you really shouldn't use anymore.\n\n34\n00:01:40.910 --> 00:01:44.650\nThere's SNMP version two and\nit's actually the third revision of it,\n\n35\n00:01:44.650 --> 00:01:47.260\nversion 2c that most systems support.\n\n36\n00:01:47.260 --> 00:01:49.480\nAnd then there's SNMP version three.\n\n37\n00:01:49.480 --> 00:01:53.460\nSNMP version two is the most common,\nand it's very easy to get set up.\n\n38\n00:01:53.460 --> 00:01:58.000\nBut SNMP version two is also the least\nsecure between it and version three.\n\n39\n00:01:58.000 --> 00:02:01.880\nSo we probably wanna go SNMP\nversion three when possible, but\n\n40\n00:02:01.880 --> 00:02:04.890\nSNMP version two is\nstill pretty widespread.\n\n41\n00:02:04.890 --> 00:02:09.233\nSo, let me show you how to deploy SNMP\nversion two securely if you do have to\n\n42\n00:02:09.233 --> 00:02:09.736\nuse it.\n\n43\n00:02:09.736 --> 00:02:12.238\nAnd then we'll take a look at\nhow to use SNMP version three,\n\n44\n00:02:12.238 --> 00:02:14.201\nwhich is inherently more secure,\nall right?\n\n45\n00:02:14.201 --> 00:02:19.720\nSo first off, I need to get my system\nset up to act as an SNMP server.\n\n46\n00:02:19.720 --> 00:02:23.300\nTo answer questions when\npeople reach out to it.\n\n47\n00:02:23.300 --> 00:02:27.460\nTo try and learn information,\nto figure our whether or\n\n48\n00:02:27.460 --> 00:02:32.320\nnot the interface is up or\nthe version of the iOS or whatever.\n\n49\n00:02:33.338 --> 00:02:39.440\nSo, with SNMP version 2, there's really\nonly one command you have to issue.\n\n50\n00:02:39.440 --> 00:02:46.248\nIf you jump into your configuration,\nyou can say snmp-server community.\n\n51\n00:02:47.660 --> 00:02:48.750\nAnd then specify a name.\n\n52\n00:02:48.750 --> 00:02:51.840\nNow, the community,\nthink of it as like, your password.\n\n53\n00:02:51.840 --> 00:02:55.970\nWhen somebody connects to ask a question,\nthey have to know the community name.\n\n54\n00:02:55.970 --> 00:02:59.870\nSo the community name is kinda like\na password, except it's a password that's\n\n55\n00:02:59.870 --> 00:03:02.800\nsent in plain text across the network,\nwhich is just great, right?\n\n56\n00:03:02.800 --> 00:03:05.150\nSo, we don't necessarily\nwant that aspect of it.\n\n57\n00:03:05.150 --> 00:03:06.520\nBut that is how it works.\n\n58\n00:03:06.520 --> 00:03:09.870\nSo, your SNMP community\nnames are kind of important.\n\n59\n00:03:09.870 --> 00:03:14.430\nAnd when you create a community,\nyou define whether it's read only or\n\n60\n00:03:14.430 --> 00:03:16.040\nwhether it's read-write.\n\n61\n00:03:16.040 --> 00:03:19.250\nRead only just means we can\nquery data from our router, and\n\n62\n00:03:19.250 --> 00:03:20.660\n99% of the time that's all we want.\n\n63\n00:03:20.660 --> 00:03:22.330\nWe just wanna query data.\n\n64\n00:03:22.330 --> 00:03:27.460\nBut you can do read-write also, where you\ncan push changes to your router via SNMP.\n\n65\n00:03:27.460 --> 00:03:30.660\nNot many people use that, but there\nare some people out there that do, and\n\n66\n00:03:30.660 --> 00:03:32.140\nthe functionality is here.\n\n67\n00:03:32.140 --> 00:03:35.800\nSo, when we create a community,\nwe probably wanna create two communities.\n\n68\n00:03:35.800 --> 00:03:41.630\nFor example, I might create itprotv-ro,\nwhich is gonna be my read only community.\n\n69\n00:03:41.630 --> 00:03:45.560\nAnd then I designate whether I want\nit to be read only or read-write.\n\n70\n00:03:45.560 --> 00:03:47.770\nI want mind to be read only, all right?\n\n71\n00:03:47.770 --> 00:03:53.240\nAnd then we can stop there or\nwe can apply an ACL to it.\n\n72\n00:03:53.240 --> 00:03:54.950\nAnd that's a really handy thing to do.\n\n73\n00:03:54.950 --> 00:03:57.120\nI have an access control list, ACL 1.\n\n74\n00:03:57.120 --> 00:03:59.840\nAnd so I'm just gonna put a 1 there.\n\n75\n00:03:59.840 --> 00:04:01.990\nIf I look at that access control list,\n\n76\n00:04:03.540 --> 00:04:06.730\nit's got the three IP addresses\nthat are attached to my laptop.\n\n77\n00:04:06.730 --> 00:04:09.550\nSo my laptop has these three IPs and\n\n78\n00:04:09.550 --> 00:04:14.970\nnow my laptop will be allowed to use\nthat community name but nobody else can.\n\n79\n00:04:14.970 --> 00:04:19.625\nOr maybe, I want everybody to\nbe able to do read-only, right?\n\n80\n00:04:19.625 --> 00:04:23.291\nSo, I might re-run that command and\nleave the ACL off,\n\n81\n00:04:23.291 --> 00:04:25.510\nso everybody can do read-only.\n\n82\n00:04:25.510 --> 00:04:30.340\nBut then I might add\na read-write community, and\n\n83\n00:04:30.340 --> 00:04:32.530\non this one I might set the access list.\n\n84\n00:04:32.530 --> 00:04:36.020\nSo, only my laptop can connect and\ntry and push changes.\n\n85\n00:04:36.020 --> 00:04:37.500\nEverybody else can\nconnect to the read-only,\n\n86\n00:04:37.500 --> 00:04:40.050\nand they'll be able to query data and\nget it.\n\n87\n00:04:40.050 --> 00:04:43.680\nSo attaching an ACL is a great way\nto kind of improve security, but\n\n88\n00:04:43.680 --> 00:04:47.580\nit's not perfect, because the SNMP\ndata is still sent in clear text.\n\n89\n00:04:47.580 --> 00:04:50.720\nSo, somebody could intercept it and\ngain access to that information.\n\n90\n00:04:50.720 --> 00:04:52.500\nWe need to be careful with that, right?\n\n91\n00:04:52.500 --> 00:04:56.410\nBut, an ACL is kind of\none step along the way.\n\n92\n00:04:56.410 --> 00:04:59.670\nNow, what I've done here\nin those two lines,\n\n93\n00:04:59.670 --> 00:05:02.460\nis enough to get SNMP running, right?\n\n94\n00:05:02.460 --> 00:05:04.110\nSo, I've got those two\nentries right there.\n\n95\n00:05:04.110 --> 00:05:05.180\nThat's it, I'm good to go.\n\n96\n00:05:05.180 --> 00:05:06.150\nI can stop.\n\n97\n00:05:06.150 --> 00:05:08.110\nBut we usually provide a little bit more,\nright?\n\n98\n00:05:08.110 --> 00:05:13.230\nSo I might say snmp-server location and\n\n99\n00:05:13.230 --> 00:05:15.980\nthen I can specify where\nthis router resides.\n\n100\n00:05:15.980 --> 00:05:18.150\nI'll say this one's Gainesville,\nFlorida, right?\n\n101\n00:05:18.150 --> 00:05:25.048\nAnd I can say snmp-server contact and\nwe can specify a contact name, right?\n\n102\n00:05:25.048 --> 00:05:27.377\nSo maybe the network operations center.\n\n103\n00:05:27.377 --> 00:05:29.999\nAnd you might want to\nput a phone number or\n\n104\n00:05:29.999 --> 00:05:33.340\nsomething else like admin@itprotv or\nwhatever.\n\n105\n00:05:33.340 --> 00:05:36.390\nThat's gonna to be my point of contact for\nSNMP.\n\n106\n00:05:36.390 --> 00:05:37.710\nSo when somebody runs queries,\n\n107\n00:05:37.710 --> 00:05:40.380\nthey can find who they're supposed\nto reach out to support that device.\n\n108\n00:05:40.380 --> 00:05:42.700\nThese are optional components,\nyou don't have to provide them.\n\n109\n00:05:42.700 --> 00:05:44.900\nThe community is all you have to provide.\n\n110\n00:05:44.900 --> 00:05:49.580\nAnd, now I'm an active\nSNMP version 2 system.\n\n111\n00:05:49.580 --> 00:05:51.670\nSo, somebody could jump\nover to an SNMP client,\n\n112\n00:05:51.670 --> 00:05:55.530\nI'll just use my lap top here, let's see.\n\n113\n00:05:55.530 --> 00:05:56.450\nHere we go.\n\n114\n00:05:56.450 --> 00:06:00.368\nAnd in a terminal here on my laptop,\nif you're on a Unix or\n\n115\n00:06:00.368 --> 00:06:04.713\nLinux based system,\nyou'll have a utility called snmpwalk.\n\n116\n00:06:04.713 --> 00:06:08.680\nOn a Windows system you can download\nSNMP utilities that are out there.\n\n117\n00:06:08.680 --> 00:06:10.560\nBut there's plenty of\nthem that are available.\n\n118\n00:06:10.560 --> 00:06:12.921\nAnd the one I'm gonna\nuse is called snmpwalk.\n\n119\n00:06:12.921 --> 00:06:15.570\nAnd what it does,\nis from the command line,\n\n120\n00:06:15.570 --> 00:06:18.950\nit lets you send SNMP queries to devices,\nright?\n\n121\n00:06:18.950 --> 00:06:21.138\nSo, I'm just going to do a quick\nquery against the device.\n\n122\n00:06:21.138 --> 00:06:25.418\nAnd I want to find out what\nversion of iOS it's running, okay?\n\n123\n00:06:25.418 --> 00:06:31.045\nWell, the way SNMP works, is that\nevery value is tied to an OID, right?\n\n124\n00:06:31.045 --> 00:06:32.776\nAn identifier, that says all right,\n\n125\n00:06:32.776 --> 00:06:35.890\nthe version of the IOS is\nactually stored in this OID.\n\n126\n00:06:35.890 --> 00:06:37.870\nAnd we have to know the OID.\n\n127\n00:06:37.870 --> 00:06:41.330\nSoftware like Solar Wind's Network\nPerformance Monitor is really expensive,\n\n128\n00:06:41.330 --> 00:06:43.120\nCisco Works, really expensive.\n\n129\n00:06:43.120 --> 00:06:47.160\nBut what they've done, is they've\nalready mapped all the OIDs for us, and\n\n130\n00:06:47.160 --> 00:06:49.760\nit makes life so much easier and\nit's worth the money.\n\n131\n00:06:49.760 --> 00:06:53.000\nBut to do it from the command line, I have\nto know the OID, so before the show I went\n\n132\n00:06:53.000 --> 00:06:56.705\non Cisco's website and looked up the OID\nfor where the iOS version is stored.\n\n133\n00:06:56.705 --> 00:06:58.195\nAnd that's what I'm going\nto look up right here.\n\n134\n00:06:58.195 --> 00:07:01.625\nSo the command I'm gonna\nrun is just snmpwalk.\n\n135\n00:07:01.625 --> 00:07:04.278\nAnd I'm gonna say -v 2c.\n\n136\n00:07:04.278 --> 00:07:07.165\nI'm telling it that I'm gonna\nrun an snmp version two mode.\n\n137\n00:07:07.165 --> 00:07:08.847\nThat's the mode I wanna be in.\n\n138\n00:07:08.847 --> 00:07:13.463\nAnd I'm gonna tell it the community\nI'm gonna use is itprotv-ro.\n\n139\n00:07:13.463 --> 00:07:16.148\nI just wanna do read only,\nI just wanna get some information.\n\n140\n00:07:16.148 --> 00:07:21.050\nAnd I need to tell it who I'm talking to,\nso I'm gonna give it the IP of my router.\n\n141\n00:07:21.050 --> 00:07:24.910\nAnd then I need to give it the OID\nthat I want to get back, okay?\n\n142\n00:07:24.910 --> 00:07:28.865\nNow the OID, it's a long string so\nlet me just type this in.\n\n143\n00:07:28.865 --> 00:07:35.927\n1.3.6.1.4.1.9.9.25\n\n144\n00:07:35.927 --> 00:07:39.459\n.1.1.1.2.\n\n145\n00:07:39.459 --> 00:07:43.923\nOkay, and actually, underneath that, I\nbelieve it's .7, but I'll just stop at .2.\n\n146\n00:07:43.923 --> 00:07:45.835\nWhat the heck are all these numbers?\n\n147\n00:07:45.835 --> 00:07:48.222\nWell, each number identifies something,\nso like,\n\n148\n00:07:48.222 --> 00:07:51.308\nthe very first one identifies\nthe standards body that governs this.\n\n149\n00:07:51.308 --> 00:07:54.716\nAnd then, some of the numbers\nbelow it will identify like,\n\n150\n00:07:54.716 --> 00:07:59.009\nthe company that defined this, and\nthen The hardware this is powered on and\n\n151\n00:07:59.009 --> 00:08:01.687\nthen the subsystem of that hardware and\nso on.\n\n152\n00:08:01.687 --> 00:08:02.870\nIt just goes down to the line.\n\n153\n00:08:02.870 --> 00:08:07.500\nSo each one of these little\ndecimals refers to a particular\n\n154\n00:08:07.500 --> 00:08:09.930\nkind of category of that device.\n\n155\n00:08:09.930 --> 00:08:12.886\nAnd by the time we get to the end of it,\nthis is the CISCO OID.\n\n156\n00:08:12.886 --> 00:08:15.010\nThat's gonna show me what\nversion of iOS I'm running.\n\n157\n00:08:15.010 --> 00:08:17.946\nAnd if I run it it's going to\nreach out to the router, and\n\n158\n00:08:17.946 --> 00:08:21.085\nif it works I should get\nthe data back and, oh it was 0.7.\n\n159\n00:08:21.085 --> 00:08:27.082\nSo here I can see that, if I had done\njust 0.7, that's a little cleaner.\n\n160\n00:08:27.082 --> 00:08:33.210\nAnd there I can see that I am running\nCISCO iOS for the c2800, I'm running 15.1.\n\n161\n00:08:33.210 --> 00:08:34.160\nAnd there it is.\n\n162\n00:08:34.160 --> 00:08:37.010\nSo I can have management software\nthat queries this data off my router.\n\n163\n00:08:37.010 --> 00:08:38.800\nThat's pretty handy, all right?\n\n164\n00:08:38.800 --> 00:08:42.420\nThe problem with version two though really\ncenters around that community name.\n\n165\n00:08:42.420 --> 00:08:46.190\nIt's just too easy for people to intercept\nthe community name into habit and\n\n166\n00:08:46.190 --> 00:08:48.750\nto then be able to query tons\noff data off your router.\n\n167\n00:08:48.750 --> 00:08:51.530\nSo, it's important to have\nan ACL to restrict that.\n\n168\n00:08:51.530 --> 00:08:54.029\nI'm listed in the ACL,\nthat's why I'm allowed to query on it.\n\n169\n00:08:54.029 --> 00:08:59.460\nAnd it's even more important to use\na username and password if you can.\n\n170\n00:08:59.460 --> 00:09:04.940\nSNP version two doesn't support a username\nand password, but SNP version three does.\n\n171\n00:09:04.940 --> 00:09:06.580\nYou can create usernames and passwords.\n\n172\n00:09:06.580 --> 00:09:08.970\nAnd even better,\nwhen you define a username and\n\n173\n00:09:08.970 --> 00:09:13.660\npassword in SNP version three,\nyou can tie it to certain OIDs So\n\n174\n00:09:13.660 --> 00:09:18.520\nyou can say this username and password\ncan only get to this one OID or whatever.\n\n175\n00:09:18.520 --> 00:09:21.240\nYou can be really really specific and\ndial that down.\n\n176\n00:09:21.240 --> 00:09:23.580\nNow I don't want to go crazy for\nthe sake of this show, but\n\n177\n00:09:23.580 --> 00:09:27.750\nI do want to show you guys\nkind of how this works.\n\n178\n00:09:27.750 --> 00:09:29.550\nSo I want to give you a great example.\n\n179\n00:09:29.550 --> 00:09:33.690\nMaybe I want to create a user account for\nmy helpdesk, and I just want my help desk\n\n180\n00:09:33.690 --> 00:09:37.960\nto quarry the iOS versions,\ninterface status something like that.\n\n181\n00:09:37.960 --> 00:09:39.720\nI can go through and create that.\n\n182\n00:09:39.720 --> 00:09:42.340\nLet me show you the basic process for\nthat.\n\n183\n00:09:42.340 --> 00:09:46.010\nFirst off, I need to create\nwhat is called an SMP view.\n\n184\n00:09:46.010 --> 00:09:48.820\nA view is basically that\nlist of OIDs that people\n\n185\n00:09:48.820 --> 00:09:50.590\nare gonna be allowed to access, right.\n\n186\n00:09:50.590 --> 00:09:53.060\nSo I'm gonna get, well,\nI need to get back to my router.\n\n187\n00:09:53.060 --> 00:09:54.250\nI guess that will help.\n\n188\n00:09:54.250 --> 00:09:56.080\nAnd then here,\nI'm gonna start by creating my views.\n\n189\n00:09:56.080 --> 00:09:58.937\nSo I'm gonna say snmp-server view.\n\n190\n00:09:58.937 --> 00:10:02.990\nAnd I'm gonna give it a name, so\nI'm gonna call mine helpdesk.\n\n191\n00:10:02.990 --> 00:10:05.380\nOr actually,\nI'm gonna do this based on OIDs here, so\n\n192\n00:10:05.380 --> 00:10:09.030\nI'm gonna call this one ios-version right?\n\n193\n00:10:09.030 --> 00:10:12.870\nSo this view is only going to include\nthe iOS version and that's it.\n\n194\n00:10:14.240 --> 00:10:18.620\nAnd then I need to specify\nthe OID that it's tied to okay.\n\n195\n00:10:18.620 --> 00:10:22.474\nSo I'm basically limiting it or\nrestricting it down to a particular OID\n\n196\n00:10:22.474 --> 00:10:25.815\nand I'm going to try to save\nmyself a little bit of typing, and\n\n197\n00:10:25.815 --> 00:10:30.010\nI thought it was in my history, but\nI've apparently cleared out my history.\n\n198\n00:10:30.010 --> 00:10:33.255\nSo I'll go ahead and\ntype this one back in so\n\n199\n00:10:33.255 --> 00:10:39.940\nthat I can have it restricted down to just\nwhat I want and nothing else too crazy.\n\n200\n00:10:39.940 --> 00:10:43.580\nAnd there.\n\n201\n00:10:43.580 --> 00:10:46.910\nSo, that's that OID that I specified\nearlier, and I'm gonna put that it,\n\n202\n00:10:46.910 --> 00:10:52.150\nand I left off one kind of important\nthing which is the included key word.\n\n203\n00:10:52.150 --> 00:10:55.250\nWhen you list the OID you're saying\nwhether you exclude it, or you include it.\n\n204\n00:10:55.250 --> 00:10:58.780\nI could just exclude certain\nOIDs to block certain access,\n\n205\n00:10:58.780 --> 00:11:00.400\nI want to include this one.\n\n206\n00:11:00.400 --> 00:11:03.110\nNow, I could continue\nrunning that line over and\n\n207\n00:11:03.110 --> 00:11:05.080\nover again for each OID that I want.\n\n208\n00:11:05.080 --> 00:11:08.620\nAnd that's building that view,\nincreasing it and growing it, right.\n\n209\n00:11:08.620 --> 00:11:10.800\nBut for\nright now that's the only OID I want,\n\n210\n00:11:10.800 --> 00:11:12.870\nthat's all I want them to have access to.\n\n211\n00:11:12.870 --> 00:11:13.850\nOkay.\n\n212\n00:11:13.850 --> 00:11:17.290\nSo from here,\nnow I've got my view created.\n\n213\n00:11:17.290 --> 00:11:19.150\nI need to create a group.\n\n214\n00:11:19.150 --> 00:11:24.410\nAnd so we say snmp-server group, and\nI'll create a group called helpdesk.\n\n215\n00:11:25.740 --> 00:11:30.630\nAnd this is for snmp version three, so\nthis is the snmp version three group.\n\n216\n00:11:30.630 --> 00:11:34.050\nI'm gonna set the authentication to read.\n\n217\n00:11:34.050 --> 00:11:37.400\nI only want them to have read access,\nand that's it.\n\n218\n00:11:37.400 --> 00:11:43.330\nAnd then I'm gonna tie this to\nthe ios-version view that I made.\n\n219\n00:11:43.330 --> 00:11:43.910\nOkay?\n\n220\n00:11:43.910 --> 00:11:47.590\nSo this group has read\naccess to that view.\n\n221\n00:11:47.590 --> 00:11:50.560\nI could have this group have\nwrite access to other views or\n\n222\n00:11:50.560 --> 00:11:51.520\nread access to other views.\n\n223\n00:11:51.520 --> 00:11:52.418\nYou can kinda tie them in.\n\n224\n00:11:52.418 --> 00:11:56.140\nBy keeping my view generic like this,\ncan reuse it for other people.\n\n225\n00:11:56.140 --> 00:11:59.099\nIt gives us that flexibility.\n\n226\n00:11:59.099 --> 00:12:03.170\nNow, I need to create a user account and\nput it in that group.\n\n227\n00:12:03.170 --> 00:12:10.290\nSo I'm gonna come in and I'll say\nsnmp-server user dpezet, so I'm gonna\n\n228\n00:12:10.290 --> 00:12:14.587\ngive myself a user account, and then I'm\ngonna put myself in the helpdesk group.\n\n229\n00:12:15.700 --> 00:12:18.240\nAnd once I'm in the help desk group,\nwell, it's a version three group,\n\n230\n00:12:18.240 --> 00:12:19.580\nI need to specify that.\n\n231\n00:12:19.580 --> 00:12:25.550\nThen I can say auth, and we're gonna do\nmd5 hashes for the authentication, right?\n\n232\n00:12:25.550 --> 00:12:28.840\nNot sending passwords in plain\ntext anymore, now we're using md5.\n\n233\n00:12:28.840 --> 00:12:30.960\nAnd most routers support SHA also, yeah,\n\n234\n00:12:30.960 --> 00:12:34.730\nso I could use SHA if I wanted,\nI'm just gonna use md5.\n\n235\n00:12:34.730 --> 00:12:39.530\nAnd then I'll specify what my password is,\nI'll do cisco123, okay?\n\n236\n00:12:39.530 --> 00:12:42.290\nNow I have a user account\nthat's in the helpdesk group.\n\n237\n00:12:42.290 --> 00:12:46.310\nThe help desk group has read\naccess to the iOS version view.\n\n238\n00:12:46.310 --> 00:12:50.260\nAnd so now, I should be able to use SNMP\nversion three to reach out and get that.\n\n239\n00:12:51.330 --> 00:12:53.230\nSo we should be pretty good here.\n\n240\n00:12:54.770 --> 00:12:55.570\nIt's a lot different.\n\n241\n00:12:55.570 --> 00:12:57.750\nIt's a lot more extra\nsteps to get that done.\n\n242\n00:12:57.750 --> 00:13:01.798\nIf I pull up my config and\nlook at all that we did,\n\n243\n00:13:01.798 --> 00:13:08.189\nI just had to do the community to get\nSNP version two running and that was it.\n\n244\n00:13:08.189 --> 00:13:10.450\nAnd location and contact,\nthose were optional.\n\n245\n00:13:10.450 --> 00:13:13.740\nBut for SNMP version three,\nI had to do a bit more.\n\n246\n00:13:15.050 --> 00:13:17.400\nAnd notice what it did with\nthe OID that I put in.\n\n247\n00:13:17.400 --> 00:13:21.970\nCisco has an alias in there called\nCisco Image Entry, and they use that to\n\n248\n00:13:21.970 --> 00:13:25.490\nshorten that OID down so you didn't\nhave to do the full specific one.\n\n249\n00:13:25.490 --> 00:13:26.210\nAll right?\n\n250\n00:13:26.210 --> 00:13:27.490\nSo, it's kind of created out.\n\n251\n00:13:27.490 --> 00:13:30.870\nI got my group, I got my view,\nmy user account's been created, and\n\n252\n00:13:30.870 --> 00:13:32.680\nso now I'm ready to rock.\n\n253\n00:13:33.710 --> 00:13:35.060\nLet's go see this in action.\n\n254\n00:13:35.060 --> 00:13:38.090\nIf I jump over to my terminal here,\n\n255\n00:13:38.090 --> 00:13:41.110\nI can use that SNMP walk\nutility that we did before.\n\n256\n00:13:41.110 --> 00:13:44.630\nNow, when I used SNMP walk before\nI pointed at the system and\n\n257\n00:13:44.630 --> 00:13:46.230\nI said that I wanted to do version 2c.\n\n258\n00:13:46.230 --> 00:13:47.050\nI'm gonna change that.\n\n259\n00:13:47.050 --> 00:13:50.570\nAnd we actually have to\nchange it a good bit here.\n\n260\n00:13:50.570 --> 00:13:52.680\nA few things that have to go away.\n\n261\n00:13:52.680 --> 00:13:58.740\nFirst off, I don't need a community\nname with SNMP version three.\n\n262\n00:13:58.740 --> 00:14:02.550\nI never said it can be a name for it, we\nuse a username, that's our authentication.\n\n263\n00:14:02.550 --> 00:14:06.860\nAnd so I'm gonna say that my\ninversion is going to be three, and\n\n264\n00:14:06.860 --> 00:14:07.910\nthat I have a login.\n\n265\n00:14:07.910 --> 00:14:14.390\nAnd my login is doing authentication and\nI didn't define privileges.\n\n266\n00:14:14.390 --> 00:14:17.310\nSo I'm saying authenticate,\nbut don't do privileges.\n\n267\n00:14:17.310 --> 00:14:18.640\nYou can configure SNMP so\n\n268\n00:14:18.640 --> 00:14:21.870\nthat when somebody authenticates they\nthen have to provide some kind of\n\n269\n00:14:21.870 --> 00:14:23.740\nprivileged authentication\nthere to be able to connect.\n\n270\n00:14:23.740 --> 00:14:28.100\nLike a second level of authorization,\nreally, is what it is.\n\n271\n00:14:28.100 --> 00:14:30.150\nBut I didn't convey that,\nI just did authentication.\n\n272\n00:14:31.300 --> 00:14:34.810\nThen, I'll say my username,\nwhich is dpezet.\n\n273\n00:14:34.810 --> 00:14:38.280\nAnd for\nmy authentication I chose to use md5.\n\n274\n00:14:38.280 --> 00:14:39.960\nSo, I'll specify that here.\n\n275\n00:14:39.960 --> 00:14:41.280\nI'm not providing my password.\n\n276\n00:14:41.280 --> 00:14:43.369\nIt's gonna prompt me for\nthe password when we run this.\n\n277\n00:14:44.670 --> 00:14:49.440\nAnd once I've got that,\nnow I need to specify, oh, actually,\n\n278\n00:14:49.440 --> 00:14:51.500\nwe can specify the password here.\n\n279\n00:14:51.500 --> 00:14:53.918\nI did dash lowercase asa md5.\n\n280\n00:14:53.918 --> 00:14:56.150\nIf you leave the password\noff it'll prompt you.\n\n281\n00:14:56.150 --> 00:15:00.190\nIf you do a dash capital A you can specify\nyour password right here in the line.\n\n282\n00:15:00.190 --> 00:15:02.950\nSo, I'll go ahead and\ndo that just to get it kind of attached.\n\n283\n00:15:02.950 --> 00:15:05.870\nAnd then I've got my OID after that.\n\n284\n00:15:05.870 --> 00:15:08.440\nNow, I could query that OID specifically.\n\n285\n00:15:08.440 --> 00:15:10.000\nI just want 0.7.\n\n286\n00:15:10.000 --> 00:15:12.252\nBut I'm gonna query against 0.2.\n\n287\n00:15:12.252 --> 00:15:14.380\n0.2 is the parent.\n\n288\n00:15:14.380 --> 00:15:17.400\nAnd remember earlier when\nI queried against 0.2,\n\n289\n00:15:17.400 --> 00:15:21.060\nsee all this stuff that I got back,\n2.1, 2.2.,2.3, and so on.\n\n290\n00:15:21.060 --> 00:15:22.260\nI got all these.\n\n291\n00:15:22.260 --> 00:15:27.880\nSo I reran the query just getting 2.7 so\nthat I just got what I wanted, right?\n\n292\n00:15:27.880 --> 00:15:29.360\nSo it was cleaner for me.\n\n293\n00:15:29.360 --> 00:15:30.940\nThis was just 2.7.\n\n294\n00:15:30.940 --> 00:15:34.280\nWell, I'm going to query 2 again, not 2.7.\n\n295\n00:15:34.280 --> 00:15:38.390\nAnd so, you would think I would\nget all those different OIDs.\n\n296\n00:15:38.390 --> 00:15:41.580\nBut remember, my user account doesn't\nhave access to all those OIDs.\n\n297\n00:15:41.580 --> 00:15:43.121\nIt only has access to 2.7.\n\n298\n00:15:43.121 --> 00:15:48.137\nSo when I run this, it queries\nthe server and I only get 2.7 back.\n\n299\n00:15:48.137 --> 00:15:50.000\nI'm restricted by the view,\n\n300\n00:15:50.000 --> 00:15:55.030\nthe view is only gonna show me what\nI have access to and that's it.\n\n301\n00:15:55.030 --> 00:15:56.987\nSo I have a username and a password.\n\n302\n00:15:56.987 --> 00:16:00.954\nAnd the password is hashed and sent on\nthe network instead of in clear text.\n\n303\n00:16:00.954 --> 00:16:04.180\nAnd so I get a higher degree of security,\nand I'm able to communicate.\n\n304\n00:16:04.180 --> 00:16:08.670\nSo, SNMP version 3, it's harder to set up,\nbut it's more secure.\n\n305\n00:16:08.670 --> 00:16:11.840\nAnd you can still use ACLs and\nother things to kind of restrict it, but\n\n306\n00:16:11.840 --> 00:16:13.950\nthe key thing is,\nit's the better way to go.\n\n307\n00:16:13.950 --> 00:16:17.369\nAnd a lot of people don't use it and\nthey really should.\n\n308\n00:16:17.369 --> 00:16:19.685\nAll right, so, that's SNMP.\n\n309\n00:16:19.685 --> 00:16:22.510\nSNMP is a great way to get\ninformation out of your router.\n\n310\n00:16:22.510 --> 00:16:24.860\nThere's another way to get\ninformation out of your router.\n\n311\n00:16:24.860 --> 00:16:28.110\nYour router is logging data\nin the background, right?\n\n312\n00:16:28.110 --> 00:16:30.450\nAs things occur, it logs that information.\n\n313\n00:16:30.450 --> 00:16:33.410\nSo, when I change the config,\nwhen I SHH in and\n\n314\n00:16:33.410 --> 00:16:37.480\ndisconnect, all that stuff is\ngoing into the logs, all right?\n\n315\n00:16:37.480 --> 00:16:39.500\nThe logs stay right on the router.\n\n316\n00:16:39.500 --> 00:16:41.740\nAnd if you reboot the router,\nthe logs are gone.\n\n317\n00:16:41.740 --> 00:16:43.860\nSo, instead of doing that,\n\n318\n00:16:43.860 --> 00:16:48.070\nwe can actually choose to have these logs\nsent off to a sys log server somewhere.\n\n319\n00:16:48.070 --> 00:16:51.130\nA lot of networks will set up\na centralized syslog server to store their\n\n320\n00:16:51.130 --> 00:16:53.740\nevent information and\nthat way even if a router reboots,\n\n321\n00:16:53.740 --> 00:16:56.000\nyou still have a record of what happened.\n\n322\n00:16:56.000 --> 00:16:59.509\nNow SNMP is great for getting status\nmessages, syslog is great for\n\n323\n00:16:59.509 --> 00:17:01.460\ngetting logging messages, right?\n\n324\n00:17:01.460 --> 00:17:03.990\nAlerts, events,\nkind of information like that.\n\n325\n00:17:03.990 --> 00:17:05.850\nA little different than SNMP.\n\n326\n00:17:05.850 --> 00:17:08.790\nBut SNMP can send what\nare called SNMP traps.\n\n327\n00:17:08.790 --> 00:17:12.440\nAnd SNMP traps function pretty\nmuch the same way as syslogs do.\n\n328\n00:17:12.440 --> 00:17:16.780\nSo it's really two different ways to\naddress the same issue, all right?\n\n329\n00:17:16.780 --> 00:17:18.820\nBut syslog is probably easier for\nconfigure.\n\n330\n00:17:18.820 --> 00:17:21.070\nOf the two, it's probably the most common.\n\n331\n00:17:21.070 --> 00:17:24.400\nConfiguring syslog is\nprobably not a big deal.\n\n332\n00:17:24.400 --> 00:17:27.440\nThere are a few things that we\nneed to do before hand though.\n\n333\n00:17:27.440 --> 00:17:27.970\nLet me show you for\n\n334\n00:17:27.970 --> 00:17:33.305\nexample, this router that I'm using, it's\na pretty stock configuration, all right?\n\n335\n00:17:33.305 --> 00:17:34.495\nI haven't done all that much.\n\n336\n00:17:34.495 --> 00:17:36.365\nActually, you guys have\nbeen watching this series.\n\n337\n00:17:36.365 --> 00:17:39.255\nEvery change you've seen me\nmake over the last two episodes\n\n338\n00:17:39.255 --> 00:17:41.295\nare the changes I've made to this router.\n\n339\n00:17:41.295 --> 00:17:46.222\nThe default logging for a Cisco router,\nis that it's just logging to memory,\n\n340\n00:17:46.222 --> 00:17:49.296\nand even that is aging out very quickly,\nright?\n\n341\n00:17:49.296 --> 00:17:51.490\nSo it's really not\nmaintaining a lot of logs.\n\n342\n00:17:51.490 --> 00:17:53.569\nI'll see log messages on the screen,\nlike this one.\n\n343\n00:17:53.569 --> 00:17:56.257\nConfigured from console by\nadmin on console, right?\n\n344\n00:17:56.257 --> 00:17:57.780\nThat's a syslog message.\n\n345\n00:17:57.780 --> 00:17:58.568\nIt just popped up.\n\n346\n00:17:58.568 --> 00:18:03.120\nSee this %sys, it's a system message,\nit's part of the system log.\n\n347\n00:18:03.120 --> 00:18:05.580\nSo, that popped up on my screen.\n\n348\n00:18:05.580 --> 00:18:11.220\nBut if I run show log, that's gonna\nshow me the log on my system and I can\n\n349\n00:18:11.220 --> 00:18:16.150\nsee there were three messages that popped\nup and that they were all rate limited.\n\n350\n00:18:17.500 --> 00:18:19.990\nThat means my messages, I don't have them.\n\n351\n00:18:19.990 --> 00:18:21.715\nIn fact if I hit spacebar or whatever and\n\n352\n00:18:21.715 --> 00:18:24.605\nkeep going, it doesn't show me\nthose log messages, all right?\n\n353\n00:18:24.605 --> 00:18:26.390\nThat message is now gone.\n\n354\n00:18:26.390 --> 00:18:29.060\nIt came up on the screen,\nand now it's gone.\n\n355\n00:18:29.060 --> 00:18:31.209\nSo if I attached to this router later,\n\n356\n00:18:31.209 --> 00:18:33.836\nI have no record of who configured it,\nright?\n\n357\n00:18:33.836 --> 00:18:37.171\nOn a Cisco router,\nif you wanna log directly to the router,\n\n358\n00:18:37.171 --> 00:18:39.410\nwe need to turn on log buffering.\n\n359\n00:18:39.410 --> 00:18:43.230\nBuffering is where it does save it in\nRAM for a longer period of time, and\n\n360\n00:18:43.230 --> 00:18:45.250\nnow we'll have that\nrecord of these events.\n\n361\n00:18:45.250 --> 00:18:51.000\nSo, if I jump into my configuration,\nI can say logging buffered, like that.\n\n362\n00:18:51.000 --> 00:18:54.720\nAnd now it's gonna start saving those\nlog messages for a little bit longer.\n\n363\n00:18:54.720 --> 00:18:57.260\nIf you do a question mark after it,\nyou'll see you can specify other things,\n\n364\n00:18:57.260 --> 00:19:00.680\nlike limiting the log type\nof message that makes it in.\n\n365\n00:19:00.680 --> 00:19:02.740\nSo I might not want to log debugs, right?\n\n366\n00:19:02.740 --> 00:19:04.469\nDebugs will fill up your logs really fast,\nso\n\n367\n00:19:04.469 --> 00:19:06.670\nyou might choose something\na little bit lower.\n\n368\n00:19:06.670 --> 00:19:12.072\nNotice how debugs are severity level 7,\nbut informational is severity level 6.\n\n369\n00:19:12.072 --> 00:19:16.381\nSo I might choose to say logging\nbuffered informational, and that way\n\n370\n00:19:16.381 --> 00:19:21.900\nI don't get debugs but I get everything\nelse, so it keeps that log buffer clear.\n\n371\n00:19:21.900 --> 00:19:28.600\nAnd I can also say, logging buffered and\nthen specify a certain amount of memory.\n\n372\n00:19:28.600 --> 00:19:31.040\nHow much memory do I wanna\nallocate to the logs?\n\n373\n00:19:31.040 --> 00:19:35.604\nI might choose to come in and put in,\nit's done in bits, so if I want 1 megabit,\n\n374\n00:19:35.604 --> 00:19:39.643\nI would need to say, I guess I'll\nballpark it, something like that.\n\n375\n00:19:39.643 --> 00:19:43.820\nAnd that will give me 1 megabit of\nmemory assigned to the syslogs.\n\n376\n00:19:43.820 --> 00:19:46.950\nBut you never really wanna consume\ntoo much memory on your router for\n\n377\n00:19:46.950 --> 00:19:48.020\nsomething like syslogs.\n\n378\n00:19:48.020 --> 00:19:51.470\nInstead you should send it off to a server\nsomewhere and let that server take it.\n\n379\n00:19:51.470 --> 00:19:55.360\nAnd let that server have all that\nextra utilization on it, right?\n\n380\n00:19:55.360 --> 00:20:00.520\nSo, if we wanna do that, we can specify\nan external logging destination.\n\n381\n00:20:00.520 --> 00:20:01.880\nRight now I'm logging to memory, right?\n\n382\n00:20:01.880 --> 00:20:03.760\nSo if I get out of my config.\n\n383\n00:20:03.760 --> 00:20:06.521\nIn a second here, I'll get the message,\nthere we go, configured by console.\n\n384\n00:20:06.521 --> 00:20:11.340\nAnd if I do a show log, and go in here\nto look, now I've got a record of it.\n\n385\n00:20:11.340 --> 00:20:12.909\nSee how that record shows up right there?\n\n386\n00:20:12.909 --> 00:20:18.650\nAnd as I start making other changes, if I\nget into some of my other interfaces and\n\n387\n00:20:18.650 --> 00:20:22.950\ndo a shutdown, here,\nI'm gonna generate some messages.\n\n388\n00:20:22.950 --> 00:20:25.130\nThere's easier ways to generate messages,\nbut\n\n389\n00:20:25.130 --> 00:20:27.690\nthese will generate some\nstatus messages eventually.\n\n390\n00:20:27.690 --> 00:20:29.120\nThere they go.\n\n391\n00:20:29.120 --> 00:20:30.910\nAnd we can always kinda jump back in and\n\n392\n00:20:30.910 --> 00:20:35.940\nundo that to bring some more\nmessages on the old screen.\n\n393\n00:20:37.060 --> 00:20:39.030\nAnd so, we'll just kinda\nstart seeing those messages.\n\n394\n00:20:39.030 --> 00:20:40.940\nAll that's being logged.\n\n395\n00:20:40.940 --> 00:20:41.600\nAnd, when I do a,\n\n396\n00:20:41.600 --> 00:20:46.090\nshow log, it's all being kind of\naccrued right here at the end, right?\n\n397\n00:20:46.090 --> 00:20:48.880\nLogging buffered,\nreal simple command, gets that going.\n\n398\n00:20:48.880 --> 00:20:51.714\nIf I wanna log to an external server,\nthat's actually not hard either.\n\n399\n00:20:51.714 --> 00:20:54.767\nI can get into my configuration and\nI can just say logging, and\n\n400\n00:20:54.767 --> 00:20:57.270\nthen the IP of a server\nI wanna send it to.\n\n401\n00:20:57.270 --> 00:21:00.850\nSo for example,\nI might wanna send to my laptop, right?\n\n402\n00:21:00.850 --> 00:21:05.640\nSo I might wanna do logging 10.1.230.243.\n\n403\n00:21:05.640 --> 00:21:07.080\nThat's my laptop, all right?\n\n404\n00:21:07.080 --> 00:21:10.550\nSo now when I generate log messages, I'll\nwrite them to my memory cuz I did logging\n\n405\n00:21:10.550 --> 00:21:14.120\nbuffered, but\nI'll also send a copy to that server.\n\n406\n00:21:14.120 --> 00:21:17.650\nAnd that's useful cuz if I reboot my\nrouter, I lose what's buffered, but\n\n407\n00:21:17.650 --> 00:21:18.890\nit's still on the server, right?\n\n408\n00:21:18.890 --> 00:21:20.660\nIt's being sent to that server.\n\n409\n00:21:20.660 --> 00:21:23.200\nNow, technically I could stop right here.\n\n410\n00:21:23.200 --> 00:21:23.730\nThat's all I need.\n\n411\n00:21:23.730 --> 00:21:25.380\nI'm sending messages to the server.\n\n412\n00:21:25.380 --> 00:21:27.570\nBut you can actually tweak\nthe way this is configured.\n\n413\n00:21:27.570 --> 00:21:30.520\nIf you do logging host 10.1.230.233 and\n\n414\n00:21:30.520 --> 00:21:35.170\na question mark, you'll see you\ncan kind of tweak it a little bit,\n\n415\n00:21:35.170 --> 00:21:38.348\nand there's not too much\nyou want to modify here.\n\n416\n00:21:38.348 --> 00:21:44.140\nFirst off, syslog does use UDP by default,\nand so you can change that if you want,\n\n417\n00:21:44.140 --> 00:21:46.490\nyou can use the transport\ncommand to switch it to TCP for\n\n418\n00:21:46.490 --> 00:21:48.500\nreliable connections, you may need that.\n\n419\n00:21:48.500 --> 00:21:50.396\nYou can also change\nthe port numbers it uses.\n\n420\n00:21:50.396 --> 00:21:54.910\nYou can also assign a session-id or\na discriminator.\n\n421\n00:21:54.910 --> 00:21:56.320\nAll right, now what are those?\n\n422\n00:21:56.320 --> 00:21:59.530\nWell, session-ids and\ndiscriminators are a function in syslog\n\n423\n00:21:59.530 --> 00:22:03.560\nthat allows you to filter the logs\nto find things more easily.\n\n424\n00:22:03.560 --> 00:22:05.460\nSo I might choose to attach a system-id.\n\n425\n00:22:05.460 --> 00:22:06.820\nIf I've got 10 routers,\n\n426\n00:22:06.820 --> 00:22:11.500\nall logging to one syslog server, how do I\ntell one router apart from another, right?\n\n427\n00:22:11.500 --> 00:22:13.240\nI can use a session-id.\n\n428\n00:22:13.240 --> 00:22:16.130\nSo we just add that to the end\nof this line, session-id,\n\n429\n00:22:16.130 --> 00:22:19.010\nand then you can pick what you\nwant to use for an identifier.\n\n430\n00:22:19.010 --> 00:22:23.179\nYou can use your host name,\nyou can use IPv4 address, IPv6 address, or\n\n431\n00:22:23.179 --> 00:22:24.532\na string that you pick.\n\n432\n00:22:24.532 --> 00:22:26.250\nYou can put whatever you want in there,\nright?\n\n433\n00:22:26.250 --> 00:22:27.800\nI'll use my host name.\n\n434\n00:22:27.800 --> 00:22:30.520\nSo now whenever I generate\na syslog message,\n\n435\n00:22:30.520 --> 00:22:31.700\nI'm gonna attach my host name to it.\n\n436\n00:22:33.170 --> 00:22:34.463\nNow, I usually don't stop here.\n\n437\n00:22:34.463 --> 00:22:36.900\nThere's usually a few other\nthings that I wanna tweak.\n\n438\n00:22:36.900 --> 00:22:40.150\nOne of the big problems we have,\nis the time.\n\n439\n00:22:40.150 --> 00:22:42.438\nWhen you look at those syslog messages,\nright?\n\n440\n00:22:42.438 --> 00:22:44.739\nIf I do a show log and\nI look at what's in there,\n\n441\n00:22:44.739 --> 00:22:47.300\nthey've got a time attached to them,\nright?\n\n442\n00:22:47.300 --> 00:22:53.196\nIt says September 22nd, which is accurate,\nthat's today, and it's 3:12 PM.\n\n443\n00:22:53.196 --> 00:22:58.180\nOkay, 3:12, well that is not my time zone,\nthat's not right.\n\n444\n00:22:58.180 --> 00:23:00.170\nWhen I look at my clock\nover here it's 11:12.\n\n445\n00:23:00.170 --> 00:23:04.330\nSo, it's more than likely in UTC, or\n\n446\n00:23:04.330 --> 00:23:07.090\nGreenwich Mean Time, Zulu Time,\nwhatever it is you wanna call it.\n\n447\n00:23:07.090 --> 00:23:09.535\nBut it's in that UTC minus zero, right?\n\n448\n00:23:09.535 --> 00:23:12.420\nJust the regular UTC time zone.\n\n449\n00:23:12.420 --> 00:23:14.360\nWe need to make sure that these\ntime stamps are accurate.\n\n450\n00:23:14.360 --> 00:23:17.400\nSo, I need all of my equipment\nto be configured that way so\n\n451\n00:23:17.400 --> 00:23:18.440\nthe syslogs all match up.\n\n452\n00:23:19.690 --> 00:23:21.001\nOr, we can tweak it and\n\n453\n00:23:21.001 --> 00:23:24.802\nadjust the timestamp to let people\nknow what time zone we're in.\n\n454\n00:23:24.802 --> 00:23:28.338\nThis is really important here in the US\nbecause we have this annoying thing called\n\n455\n00:23:28.338 --> 00:23:29.730\ndaylight savings time.\n\n456\n00:23:29.730 --> 00:23:32.540\nAnd daylight savings time can\nreally screw up your local time.\n\n457\n00:23:32.540 --> 00:23:36.040\nSo, let me show you something\nthat I like to do on my system.\n\n458\n00:23:36.040 --> 00:23:40.918\nSo, on my router, to get things\nkinda configured the way I want,\n\n459\n00:23:40.918 --> 00:23:45.730\nyou've got a default command for\ntimestamps already in place.\n\n460\n00:23:45.730 --> 00:23:49.126\nAnd this is how it's determining\nthe log timestamps right there, okay?\n\n461\n00:23:49.126 --> 00:23:52.575\nSo see how mine says log datetime msec?\n\n462\n00:23:52.575 --> 00:23:56.668\nSo it's gonna log the date and time all\nthe way down to milliseconds in whatever\n\n463\n00:23:56.668 --> 00:23:59.220\ntime the router currently\nthinks that it's in.\n\n464\n00:24:00.290 --> 00:24:03.160\nBut I can mess with that if I\nstart to do things, like saying,\n\n465\n00:24:03.160 --> 00:24:07.660\nclock timezone EST -5.\n\n466\n00:24:07.660 --> 00:24:10.580\nSo I'm in the Eastern Time Zone,\nand that's UTC minus five.\n\n467\n00:24:10.580 --> 00:24:11.790\nSo I just set that.\n\n468\n00:24:11.790 --> 00:24:16.360\nBut we also observe Daylight Saving Time,\nso\n\n469\n00:24:16.360 --> 00:24:21.430\nI might say clock\nsummer-time EDT recurring.\n\n470\n00:24:21.430 --> 00:24:24.360\nSo every year, we go into Daylight\nSaving Time, and actually right now,\n\n471\n00:24:24.360 --> 00:24:27.640\nI can never remember if we're in\nDaylight Saving Time or not, but\n\n472\n00:24:27.640 --> 00:24:30.790\nfortunately, I don't have to remember,\nthe router will figure that out for me.\n\n473\n00:24:30.790 --> 00:24:35.212\nBut see how, when I set my time\nzone to Eastern, it went to 10:15,\n\n474\n00:24:35.212 --> 00:24:39.960\nand then when I set it to support\nsummer time, it switched me to 11:16.\n\n475\n00:24:39.960 --> 00:24:42.123\nSo now I am in daylight savings, and\n\n476\n00:24:42.123 --> 00:24:46.610\nit's now proper with the clock that\nI'm looking at across the room.\n\n477\n00:24:46.610 --> 00:24:52.036\nNow, my time zone is accurate for what I'm\nin, but when you look at my log messages,\n\n478\n00:24:52.036 --> 00:24:56.620\nthey're not the same,\nthe log message is still UTC.\n\n479\n00:24:56.620 --> 00:24:58.652\nSo, what I need to do is,\n\n480\n00:24:58.652 --> 00:25:03.240\nI'm gonna rerun that service time stamps\ncommand that we saw a moment ago.\n\n481\n00:25:03.240 --> 00:25:07.290\nSo I'm going to say,\nservice timestamps log.\n\n482\n00:25:07.290 --> 00:25:13.570\nAnd then, it was datetime msec,\nthat's the default command right there.\n\n483\n00:25:13.570 --> 00:25:17.760\nI'm gonna modify this cuz I wanna\nchange it so that it's datetime,\n\n484\n00:25:17.760 --> 00:25:21.710\nand you can leave msec on if you want or\nyou can take it off if you don't want it.\n\n485\n00:25:21.710 --> 00:25:23.900\nSome people don't want\nthat detailed of data.\n\n486\n00:25:23.900 --> 00:25:27.590\nI find msec can actually be kind of\nuseful sometimes, so I'll leave that.\n\n487\n00:25:27.590 --> 00:25:30.140\nBut, I'm gonna say, localtime.\n\n488\n00:25:30.140 --> 00:25:32.720\nI want my log messages to\nshow the local timezone.\n\n489\n00:25:33.970 --> 00:25:39.120\nBut, if we're consolidating all\nof that down to one server,\n\n490\n00:25:39.120 --> 00:25:41.690\nwhat if I have some routers that\nare local and some that aren't?\n\n491\n00:25:41.690 --> 00:25:46.320\nI'm gonna add one more note,\nwhich is show-timezone.\n\n492\n00:25:46.320 --> 00:25:51.160\nAnd that way, the timezone will\nbecome a part of the timestamp.\n\n493\n00:25:51.160 --> 00:25:56.230\nAnd so, now when it logs a message,\nthe date and time will be right here.\n\n494\n00:25:56.230 --> 00:25:59.960\nSo there's that date and time,\nand then see how it says EDT?\n\n495\n00:25:59.960 --> 00:26:03.280\nNow when I'm looking at this on a syslog\nserver, I'll know what time zone it was,\n\n496\n00:26:03.280 --> 00:26:06.540\nand that really helps things out,\nthat really does make a difference.\n\n497\n00:26:06.540 --> 00:26:09.620\nI'll do that show-timezone even\nif I'm not set for local time.\n\n498\n00:26:09.620 --> 00:26:12.300\nEven if I'm just using UTC, and\n\n499\n00:26:12.300 --> 00:26:16.470\nthat way I've got a little flag in there\nthat let's me know that it is UTC.\n\n500\n00:26:16.470 --> 00:26:17.970\nThat can be kind of handy.\n\n501\n00:26:17.970 --> 00:26:21.520\nSo, that's one kind of modification\nwe may want to make to that.\n\n502\n00:26:21.520 --> 00:26:26.266\nAnother modification is, oh, what you\nalready did was the logging buffer to\n\n503\n00:26:26.266 --> 00:26:28.780\nmake sure that it stores locally.\n\n504\n00:26:28.780 --> 00:26:31.260\nSo, right here we should be pretty good,\n\n505\n00:26:31.260 --> 00:26:34.490\nand our messages should be\ngetting sent to a syslog server.\n\n506\n00:26:34.490 --> 00:26:36.670\nNow, how do I know if that's happening?\n\n507\n00:26:36.670 --> 00:26:39.920\nWell, I am actually running\nsyslog on my system, and so\n\n508\n00:26:39.920 --> 00:26:44.980\nif I fire my handy dandy syslog viewer\nback here, I should have some messages.\n\n509\n00:26:44.980 --> 00:26:48.490\nNow, this is a Mac, and so\nit's got its own syslog going on, so\n\n510\n00:26:48.490 --> 00:26:50.360\nI'm getting a lot of other information.\n\n511\n00:26:50.360 --> 00:26:52.910\nBut if I search for something,\nI'm actually gonna search for\n\n512\n00:26:52.910 --> 00:26:55.300\nan interesting string here,\nthe Cisco router.\n\n513\n00:26:55.300 --> 00:27:00.430\nWell, here, I'll just search for\nsomething like this, the SYS-5-CONFIG_I.\n\n514\n00:27:00.430 --> 00:27:04.310\nSo, if I look for\nthat string, there we go.\n\n515\n00:27:04.310 --> 00:27:06.220\nI can see that it happened right there.\n\n516\n00:27:06.220 --> 00:27:09.780\nAnd when I look at it,\nit doesn't have the timestamp and stuff.\n\n517\n00:27:09.780 --> 00:27:12.280\nIt's just got the, I mean,\nit's got the timestamp,\n\n518\n00:27:12.280 --> 00:27:14.850\nit doesn't have the timezone\nattached to it.\n\n519\n00:27:14.850 --> 00:27:18.050\nAnd that's because this\none is from earlier today.\n\n520\n00:27:18.050 --> 00:27:19.190\nBut if I look down at this one,\n\n521\n00:27:19.190 --> 00:27:22.440\nthis is the one that just came across,\n11:15 or 11:14.\n\n522\n00:27:22.440 --> 00:27:27.040\nI can see that EDT right there,\nI know that this is Eastern Daylight Time,\n\n523\n00:27:27.040 --> 00:27:28.130\nand it's in there.\n\n524\n00:27:28.130 --> 00:27:32.030\nNow the Mac syslog server\ndoesn't support session IDs, so\n\n525\n00:27:32.030 --> 00:27:33.430\nthe session ID is getting broken, and\n\n526\n00:27:33.430 --> 00:27:37.300\nthat's what this 514 is right here, where\nit's kinda messing up that session ID.\n\n527\n00:27:37.300 --> 00:27:39.760\nBut if this were\na traditional syslog server,\n\n528\n00:27:39.760 --> 00:27:43.150\nthen we would actually see where it\nhas the host name attached to it.\n\n529\n00:27:43.150 --> 00:27:45.450\nSo, it's just a hair broken.\n\n530\n00:27:45.450 --> 00:27:46.830\nBut we can see that information.\n\n531\n00:27:46.830 --> 00:27:48.390\nAnd now it's being sent to this server.\n\n532\n00:27:48.390 --> 00:27:51.270\nSo I know even if I reboot the router,\nI'll still have those messages.\n\n533\n00:27:52.450 --> 00:27:57.060\nSo, if we wanna get data about our router\nout, get it over to another system,\n\n534\n00:27:57.060 --> 00:28:00.630\nSNMP is a great solution,\nwe saw that one earlier, and syslog.\n\n535\n00:28:00.630 --> 00:28:02.150\nThey're both really easy to implement,\n\n536\n00:28:02.150 --> 00:28:05.090\nthey can communicate that data out,\nand they're not hard to configure.\n\n537\n00:28:05.090 --> 00:28:07.200\nWell, SNMP version 3's\nkind of hard to configure,\n\n538\n00:28:07.200 --> 00:28:08.950\nbut the other stuff really, not so much.\n\n539\n00:28:08.950 --> 00:28:12.470\nSo, definitely something to get\nconfigured and put in use on your router.\n\n540\n00:28:13.680 --> 00:28:17.240\nAll right, now I still have a little bit\nmore that I need to talk about on this, so\n\n541\n00:28:17.240 --> 00:28:21.690\nwe're gonna continue this series on with,\nwe still have network time,\n\n542\n00:28:21.690 --> 00:28:24.840\nlike where do we get our clocks from and\nsome of those other settings.\n\n543\n00:28:24.840 --> 00:28:26.920\nSo we'll tackle those in the next episode.\n\n544\n00:28:26.920 --> 00:28:31.810\nBut this is a pretty good spot to wrap\nthis one up, so we'll take it from here.\n\n545\n00:28:31.810 --> 00:28:34.360\nYou've seen SNMP, you've seen syslog.\n\n546\n00:28:34.360 --> 00:28:37.731\nDefinitely things you'll use,\nmore to come after this, but for\n\n547\n00:28:37.731 --> 00:28:41.730\nnow, signing off for ITProTV,\nI'm Don Poset, and I'll see you next time.\n\n548\n00:28:41.730 --> 00:28:48.210\n[SOUND]\n\n",
          "vimeoId": "140174558"
        },
        {
          "description": "Having routers, firewalls and switches all over ones network opens the possibility to have each of the clocks to become unsynchronized. Having all the clocks synchronized on a system can help with doing things like tracking an attack vector and the best way to do that is through Network Time Protocol (NTP). Viewers will continue to hear about log messages and the importance of having synchronized clocks across all of your network equipment as well as see demonstrations on how to use the Network Time Protocol (NTP) to designate a centralized clock source and how to make an IOS device an NTP server.",
          "length": "1696",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/ccnproute/cisco-ccnproute300101-6-1-device_management_pt4-092215-1.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/ccnproute/cisco-ccnproute300101-6-1-device_management_pt4-092215-1-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/ccnproute/cisco-ccnproute300101-6-1-device_management_pt4-092215-1-sm.jpg",
          "title": "Device Management Part 4",
          "transcript": "WEBVTT\n\n1\n00:00:00.000 --> 00:00:10.931\n[MUSIC]\n\n2\n00:00:10.931 --> 00:00:13.901\nAll right, good morning,\ngood afternoon, and good evening and\n\n3\n00:00:13.901 --> 00:00:15.962\nwelcome back to another\nepisode of ITProTV.\n\n4\n00:00:15.962 --> 00:00:20.950\nI'm your host, Don Pezet, back again\nwith another episode of CCMP Route.\n\n5\n00:00:20.950 --> 00:00:24.500\nNow, we're on part four of\nour Device Management and\n\n6\n00:00:24.500 --> 00:00:26.250\nInfrastructure Services series.\n\n7\n00:00:26.250 --> 00:00:29.732\nWe're covering all the little services\nthat kind of run in the background on\n\n8\n00:00:29.732 --> 00:00:33.610\na Cisco router that we often times\nconfigure and then forget about, right?\n\n9\n00:00:33.610 --> 00:00:35.499\nThey make it on the exams so\nwe need to be aware of them.\n\n10\n00:00:35.499 --> 00:00:37.650\nWe're gonna take a look\nat them right here.\n\n11\n00:00:37.650 --> 00:00:40.890\nNow, in part three we had a chance\nto take a look at log messages and\n\n12\n00:00:40.890 --> 00:00:42.010\nhow they're generated.\n\n13\n00:00:42.010 --> 00:00:45.857\nAnd we talked a little bit about the\ntimestamps that are attached to that and\n\n14\n00:00:45.857 --> 00:00:48.983\nhow we safely reflect what that\ntime is inside our log files.\n\n15\n00:00:48.983 --> 00:00:51.908\nAnd so, that's kind of what\nwe saw in part three, but\n\n16\n00:00:51.908 --> 00:00:56.170\nI want to continue with that\nthought on time here in part four.\n\n17\n00:00:56.170 --> 00:00:58.712\nMainly, where does that time come from?\n\n18\n00:00:58.712 --> 00:01:03.090\nSo on my router over here kinda sitting\nbehind me, it has a clock assigned to it,\n\n19\n00:01:03.090 --> 00:01:05.280\nand I've set the time on it.\n\n20\n00:01:05.280 --> 00:01:07.400\nBut, if I've got routers and firewalls and\n\n21\n00:01:07.400 --> 00:01:12.180\nswitches all over my network,\nI need to keep their time the same.\n\n22\n00:01:12.180 --> 00:01:13.640\nAnd I'm not just talking about close.\n\n23\n00:01:13.640 --> 00:01:15.470\nI mean, I need them to be exact.\n\n24\n00:01:15.470 --> 00:01:19.376\nBecause if I'm aggregating all their\nlogs into one central storage area,\n\n25\n00:01:19.376 --> 00:01:22.787\nI need to be able to see when events\nare happening at the same time.\n\n26\n00:01:22.787 --> 00:01:24.983\nNot a minute apart or\neven 30 seconds apart,\n\n27\n00:01:24.983 --> 00:01:28.620\nespecially if you're doing things\nlike tracking and attack vector.\n\n28\n00:01:28.620 --> 00:01:32.210\nYou need to know that those\nclocks are all in sync, and\n\n29\n00:01:32.210 --> 00:01:36.540\nthe best way to do that is to use NTP,\nthe network time protocol.\n\n30\n00:01:36.540 --> 00:01:38.310\nCisco router's support NTP.\n\n31\n00:01:38.310 --> 00:01:43.270\nThey can reach out and get that\nclock data from an external source.\n\n32\n00:01:43.270 --> 00:01:46.900\nCisco routers can also act\nas an NTP source also.\n\n33\n00:01:46.900 --> 00:01:49.680\nYou could make your router\nan NTP server if you wanted.\n\n34\n00:01:49.680 --> 00:01:51.270\nIt's actually not hard to do.\n\n35\n00:01:51.270 --> 00:01:54.170\nThere's a few different ways to configure\nit, so I want to show those to you guys\n\n36\n00:01:54.170 --> 00:01:56.880\nand kind of give you some examples\nof what's available, all right?\n\n37\n00:01:56.880 --> 00:01:58.510\nSo let's take a look at this.\n\n38\n00:01:58.510 --> 00:02:00.730\nSo I've got my trusty router right here,\n\n39\n00:02:00.730 --> 00:02:05.870\nfired up, and\nit's got a clock inside of it.\n\n40\n00:02:05.870 --> 00:02:10.760\nYou've got the [COUGH] show clock command,\nwhere you can go in and\n\n41\n00:02:10.760 --> 00:02:13.910\ndisplay what that system clock is,\nto be able to see it.\n\n42\n00:02:13.910 --> 00:02:15.480\nAnd so if I do a show clock.\n\n43\n00:02:15.480 --> 00:02:17.540\nThere we go.\nMy router thinks that it is 11:30\n\n44\n00:02:17.540 --> 00:02:22.030\nin the morning on Tuesday,\nSeptember 22nd, 2015, all right?\n\n45\n00:02:22.030 --> 00:02:26.042\nNow, I can set that using the clock\ncommand if we wanted, right?\n\n46\n00:02:26.042 --> 00:02:28.960\nSo go in use clock set and\ndefine what that is.\n\n47\n00:02:28.960 --> 00:02:34.240\nBut in reality, I wanna get that from\na time server, from somewhere else.\n\n48\n00:02:34.240 --> 00:02:37.530\nOne of those atomic clocks that's kinda\nconnected to the Internet that we can use,\n\n49\n00:02:37.530 --> 00:02:38.990\nand those work out really well.\n\n50\n00:02:38.990 --> 00:02:42.646\nOr you can actually buy hardware\nclock servers for your network.\n\n51\n00:02:42.646 --> 00:02:44.290\nThere's several companies that sell them.\n\n52\n00:02:44.290 --> 00:02:48.092\nAnd you can throw it on and use those and\nthey update using the radio,\n\n53\n00:02:48.092 --> 00:02:51.373\nthe private radio station that\nbroadcasts across the US.\n\n54\n00:02:51.373 --> 00:02:52.890\nAnd other countries have it too.\n\n55\n00:02:52.890 --> 00:02:55.600\nWhere you can tune in and\nget your time that way, all right?\n\n56\n00:02:55.600 --> 00:02:58.549\nBut either way, we usually wanna\nget time from a reliable source.\n\n57\n00:02:59.710 --> 00:03:03.490\nAnd the way we do that,\nis by defining an NTP server.\n\n58\n00:03:03.490 --> 00:03:06.200\nSo if I wanna do that,\nI can just jump right into my config, and\n\n59\n00:03:06.200 --> 00:03:07.610\nI can set that up.\n\n60\n00:03:07.610 --> 00:03:10.460\nIt's not really a difficult thing to do.\n\n61\n00:03:10.460 --> 00:03:13.490\nWe just come in and\nwe say it, and NTP server and\n\n62\n00:03:13.490 --> 00:03:16.160\nthe IP address of the server\nthat we want to use, all right?\n\n63\n00:03:16.160 --> 00:03:19.910\nNow, when you specify that IP, it could\nbe an IP, it could be a host name, but\n\n64\n00:03:19.910 --> 00:03:22.410\nthis needs to be a server that you trust.\n\n65\n00:03:22.410 --> 00:03:26.935\nSomebody out there that you trust,\nthat you can rely on that time.\n\n66\n00:03:26.935 --> 00:03:30.335\nBecause if it's somebody that get\ncompromised, an attacker can actually\n\n67\n00:03:30.335 --> 00:03:34.465\nmanipulate the time to allow them\nto do packet replay attacks.\n\n68\n00:03:34.465 --> 00:03:37.015\nAnd it will even break\nthings like IP set tunnels.\n\n69\n00:03:37.015 --> 00:03:38.795\nSo, it's something that's\nreally sensitive, right?\n\n70\n00:03:38.795 --> 00:03:40.835\nTime needs to be accurate.\n\n71\n00:03:40.835 --> 00:03:46.612\nSo, I might choose to use a public\nresource like, us.pool.ntp.org.\n\n72\n00:03:46.612 --> 00:03:47.595\nI can use them.\n\n73\n00:03:47.595 --> 00:03:51.292\nOr I might choose to use something else,\nsome private system,\n\n74\n00:03:51.292 --> 00:03:54.330\nsome server I've already got up or\nwhatever.\n\n75\n00:03:54.330 --> 00:03:56.280\nYou can rely on those too.\n\n76\n00:03:56.280 --> 00:04:00.580\nNow, before I turn that on,\nI'm going to turn on a little debugging so\n\n77\n00:04:00.580 --> 00:04:02.400\nwe can see what's going\non in the background.\n\n78\n00:04:02.400 --> 00:04:04.090\nSo I'm gonna do a little debug.\n\n79\n00:04:04.090 --> 00:04:05.940\nntp all, all right?\n\n80\n00:04:05.940 --> 00:04:11.429\nSo now debugging is turned on for\nNTP and if I come in here and\n\n81\n00:04:11.429 --> 00:04:15.247\nsay, ntp server us.pool.ntp.org.\n\n82\n00:04:15.247 --> 00:04:16.321\nIt's gonna reach out.\n\n83\n00:04:16.321 --> 00:04:18.744\nIt's gonna try and translate that,\nand then here we go now.\n\n84\n00:04:18.744 --> 00:04:21.947\nNow normally I wouldn't see anything but\nsince debugging is on here,\n\n85\n00:04:21.947 --> 00:04:26.110\nI can see it's reaching out and\nI'm getting my first connection, right?\n\n86\n00:04:26.110 --> 00:04:28.650\nIt's tracking what's called drift.\n\n87\n00:04:28.650 --> 00:04:32.100\nWhen you reach out to that server,\nit's gotta reach all the way out to\n\n88\n00:04:32.100 --> 00:04:36.220\nthat server, which is maybe thousands\nof miles away, and come back.\n\n89\n00:04:36.220 --> 00:04:39.101\nAnd there's drift that happens there,\nwhere the time gets off, right?\n\n90\n00:04:39.101 --> 00:04:41.900\nThe amount of time it takes to send\nthe data there and back again.\n\n91\n00:04:41.900 --> 00:04:44.915\nAnd so, in the background, it's gonna\nhave to send that information along and\n\n92\n00:04:44.915 --> 00:04:45.864\ntrack how long it takes.\n\n93\n00:04:45.864 --> 00:04:49.290\nIt's gonna monitor the network latency and\nadjust the time for that.\n\n94\n00:04:49.290 --> 00:04:53.320\nBut I'm now gonna start getting\nmy time from that system, right?\n\n95\n00:04:53.320 --> 00:04:57.100\nPulling it down and making sure that I've\ngot everything kind of set the right way\n\n96\n00:04:57.100 --> 00:04:58.270\nand now I'm synchronized.\n\n97\n00:04:58.270 --> 00:05:01.774\nAnd if I take all of my routers,\nall my switches, all my servers and\n\n98\n00:05:01.774 --> 00:05:05.779\nI point them all at us.pool.ntp.org,\nthen I know that the clock should be\n\n99\n00:05:05.779 --> 00:05:08.550\nsynchronized across all of my devices,\nall right?\n\n100\n00:05:08.550 --> 00:05:10.760\nThat's one way to go about it.\n\n101\n00:05:10.760 --> 00:05:13.800\nBut if you don't want to\nuse an external provider,\n\n102\n00:05:13.800 --> 00:05:15.960\nwell that's where things get\na little different, right?\n\n103\n00:05:15.960 --> 00:05:17.480\nIf you don't want to use\nan external provider,\n\n104\n00:05:17.480 --> 00:05:19.850\nyou could choose to be\nthe server yourself.\n\n105\n00:05:19.850 --> 00:05:22.282\nAnd, oh, actually there's mine going and\ndoing an update right there.\n\n106\n00:05:22.282 --> 00:05:25.520\nSo [LAUGH] here's mine reaching out and\nstarting to do an update.\n\n107\n00:05:25.520 --> 00:05:26.600\nIf I leave the debugs on,\n\n108\n00:05:26.600 --> 00:05:29.450\nthese will keep coming up as\nit reaches out to that system.\n\n109\n00:05:29.450 --> 00:05:34.736\nBut, basically, we don't necessarily\ntrust somebody that's outside.\n\n110\n00:05:34.736 --> 00:05:36.838\nIn fact, us.pool.ntp.org,\n\n111\n00:05:36.838 --> 00:05:41.140\nit's a pool of NTP servers that\nI have no idea who they are.\n\n112\n00:05:41.140 --> 00:05:46.350\nSo I might choose to make my\nrouter an NTP server, okay?\n\n113\n00:05:46.350 --> 00:05:49.990\nI'm gonna turn off my debugging,\nall right?\n\n114\n00:05:49.990 --> 00:05:52.400\nAnd then,\nI'm gonna set myself up as a server.\n\n115\n00:05:52.400 --> 00:05:57.720\nNow, to be a server all you have to do is\nsay, ntp master and presenter, all right?\n\n116\n00:05:57.720 --> 00:06:00.510\nIf you do this,\nyou now become an NTP server.\n\n117\n00:06:00.510 --> 00:06:01.460\nYou're the master.\n\n118\n00:06:01.460 --> 00:06:03.450\nYou're allowed to push that out,\nall right?\n\n119\n00:06:04.530 --> 00:06:08.990\nBut, sometimes we want to be a server and\na client.\n\n120\n00:06:08.990 --> 00:06:10.330\nWe wanna be both.\n\n121\n00:06:10.330 --> 00:06:15.760\nI might wanna be a client\nof the ntp.org pool, but\n\n122\n00:06:15.760 --> 00:06:17.620\nthen I wanna be the server\nto my internal network.\n\n123\n00:06:17.620 --> 00:06:20.670\nI want all the internal hosts to\nsynchronize off of me, and then\n\n124\n00:06:20.670 --> 00:06:24.550\nI'll synchronize against the NTP server\nout there on the Internet, all right?\n\n125\n00:06:24.550 --> 00:06:27.830\nWhen you're gonna be both,\ndon't do ntp master.\n\n126\n00:06:27.830 --> 00:06:29.730\nntp master means you are the source,\n\n127\n00:06:29.730 --> 00:06:32.720\nyou're the person who came\nup with that original time.\n\n128\n00:06:34.150 --> 00:06:38.220\nIf you're not the source, you need\nto specify what's called a stratum.\n\n129\n00:06:38.220 --> 00:06:43.830\nThe stratum is how far removed\nyou are from the source.\n\n130\n00:06:43.830 --> 00:06:47.167\nIf you're talking directly to the source,\n\n131\n00:06:47.167 --> 00:06:51.505\nthen what you would do is,\nyou would say, ntp master 1.\n\n132\n00:06:51.505 --> 00:06:55.800\nAnd that would say that you\nare one away from the source.\n\n133\n00:06:55.800 --> 00:06:58.480\nBut if you were pointing to a time server\nthat was pointing to another one that was\n\n134\n00:06:58.480 --> 00:07:01.860\npointing to another one,\nthen you would say ntp master 4,\n\n135\n00:07:01.860 --> 00:07:04.680\nand that would mean you're\na stratum 4 server.\n\n136\n00:07:04.680 --> 00:07:07.630\nYou're four servers away from the source.\n\n137\n00:07:08.630 --> 00:07:13.178\nThe stratum, it doesn't have\nto be super accurate, right?\n\n138\n00:07:13.178 --> 00:07:15.599\nNobody's gonna double check and\nit's not gonna break things.\n\n139\n00:07:15.599 --> 00:07:19.380\nBut if you configure a router and it's got\nmore than one server it can talk to, and\n\n140\n00:07:19.380 --> 00:07:21.883\none server has a better\nstratum value than the other,\n\n141\n00:07:21.883 --> 00:07:24.402\nwe'll trust the one with\nthe lower stratum, right?\n\n142\n00:07:24.402 --> 00:07:26.010\nSo it's kind of setting a preference.\n\n143\n00:07:26.010 --> 00:07:30.990\nBut if you truly wanna be the source,\nyou can say, ntp master by itself and\n\n144\n00:07:30.990 --> 00:07:33.360\nthat's the equivalent\nof saying stratum zero.\n\n145\n00:07:33.360 --> 00:07:36.110\nStratum zero means you are the source.\n\n146\n00:07:36.110 --> 00:07:38.540\nI'm not getting my time\nfrom anywhere else.\n\n147\n00:07:38.540 --> 00:07:40.110\nI'm the source, all right?\n\n148\n00:07:40.110 --> 00:07:42.350\nAnd I'll dictate what\nthat time is gonna be.\n\n149\n00:07:42.350 --> 00:07:44.590\nAnd this is good if you wanna\nprevent external attacks.\n\n150\n00:07:44.590 --> 00:07:47.630\nYou take an internal system,\nyou make it the source.\n\n151\n00:07:47.630 --> 00:07:51.605\nAnd then have all of your other\nsystems key off of that one system,\n\n152\n00:07:51.605 --> 00:07:53.279\nthat one internal server.\n\n153\n00:07:53.279 --> 00:07:56.611\nAll right, now,\nI've mentioned NTP attacks.\n\n154\n00:07:56.611 --> 00:07:59.641\nNTP, by default,\nworks without authentication.\n\n155\n00:07:59.641 --> 00:08:02.242\nBut we can turn on\nauthentication if we want.\n\n156\n00:08:02.242 --> 00:08:05.600\nOn the server we can say it is a require\nauthentication and on the client we can\n\n157\n00:08:05.600 --> 00:08:08.814\nsay it is to provide authentication and\nthen I'll take care of that too.\n\n158\n00:08:08.814 --> 00:08:10.205\nSo in this system here,\n\n159\n00:08:10.205 --> 00:08:15.150\nI'm already configured as the NTP master\nI want to turn on authentication.\n\n160\n00:08:15.150 --> 00:08:18.440\nSo to do that we just need to come in and\ndefine an authentication key so\n\n161\n00:08:18.440 --> 00:08:19.460\nI'm going to say NTP.\n\n162\n00:08:20.780 --> 00:08:24.330\nAuthentication dash key, and\nyou can have more than one.\n\n163\n00:08:24.330 --> 00:08:25.650\nI'm going to do key 1.\n\n164\n00:08:25.650 --> 00:08:29.410\nI'll do a md5 key and\nI'll just use cisco123.\n\n165\n00:08:30.920 --> 00:08:34.960\nI've now created a key for NTP to use, but\nit's not actually going to use it yet.\n\n166\n00:08:34.960 --> 00:08:39.160\nI need to come in and\nsay ntp authenticate, so\n\n167\n00:08:39.160 --> 00:08:40.775\nnow I'm requiring authentication.\n\n168\n00:08:40.775 --> 00:08:46.030\nAnd ntp trusted-key 1.\n\n169\n00:08:46.030 --> 00:08:48.070\nI can have more than one key.\n\n170\n00:08:48.070 --> 00:08:50.540\nI'm telling it here that I\nwanna activate hey number one.\n\n171\n00:08:50.540 --> 00:08:52.730\nI will trust key number one.\n\n172\n00:08:52.730 --> 00:08:54.380\nThat's the one I'm gonna use.\n\n173\n00:08:54.380 --> 00:08:59.940\nNow, I'm a server, I did NTP master,\nso anybody can connect to me and\n\n174\n00:08:59.940 --> 00:09:03.330\nprovide their authentication, and\nthen they'll be able to get time.\n\n175\n00:09:03.330 --> 00:09:06.490\nBut of they don't provide authentication,\nthen I'm not gonna let them get time.\n\n176\n00:09:06.490 --> 00:09:08.620\nThey're not gonna be\nallowed to talk to me.\n\n177\n00:09:08.620 --> 00:09:10.130\nSo I'm now requiring here on the server.\n\n178\n00:09:11.130 --> 00:09:12.830\nIf I were the client,\n\n179\n00:09:12.830 --> 00:09:15.400\nI'd just have a slightly different\ncommand that I have to punch in.\n\n180\n00:09:15.400 --> 00:09:18.250\nOn the client, you basically,\nhave to define the key.\n\n181\n00:09:18.250 --> 00:09:20.010\nAnd you have to say, NTP authenticate.\n\n182\n00:09:20.010 --> 00:09:21.620\nYou have to say NTP trusted key.\n\n183\n00:09:21.620 --> 00:09:23.950\nSo that's all kind of the same.\n\n184\n00:09:23.950 --> 00:09:26.990\nBut where it gets\ndifferent is on the client\n\n185\n00:09:26.990 --> 00:09:30.650\nWhen you specify who that\nNTP server is going to be.\n\n186\n00:09:30.650 --> 00:09:33.970\nRemember we did ntp server,\nand we specified an IP?\n\n187\n00:09:33.970 --> 00:09:40.700\nSo I could specify\nus.pool.ntp.org like that.\n\n188\n00:09:40.700 --> 00:09:46.890\nAnd then after that,\nyou can specify the key right there.\n\n189\n00:09:47.900 --> 00:09:50.630\nAnd you can tell it which key to use,\nand so\n\n190\n00:09:50.630 --> 00:09:53.420\nI can say when I connect\nto that one use key 1.\n\n191\n00:09:53.420 --> 00:09:56.850\nAnd now I'm gonna reach out to\nthat server and provide that key.\n\n192\n00:09:56.850 --> 00:09:58.570\nSo the configuration on the client and\n\n193\n00:09:58.570 --> 00:10:01.680\nthe configuration on the server\naren't really that different.\n\n194\n00:10:01.680 --> 00:10:04.880\nWe tell it that we have an authentication\nkey, we tell it to authenticate,\n\n195\n00:10:04.880 --> 00:10:06.600\nand we tell it to use the key.\n\n196\n00:10:06.600 --> 00:10:08.130\nAnd if we have more than one server and\n\n197\n00:10:08.130 --> 00:10:11.000\nmore than one key,\nwe can tell it which key on which server.\n\n198\n00:10:11.000 --> 00:10:13.080\nIf I don't tell the server\nwhich key to use,\n\n199\n00:10:13.080 --> 00:10:17.310\nit just uses this default one, and\nthat'll reach out and authenticate for it.\n\n200\n00:10:17.310 --> 00:10:20.490\nSo tacking on authentication\nis a great idea with NTP\n\n201\n00:10:20.490 --> 00:10:23.000\nbecause it is an attack\nfactor that's out there.\n\n202\n00:10:23.000 --> 00:10:26.370\nAnd it's something that\na lot of people don't do.\n\n203\n00:10:26.370 --> 00:10:30.910\nThere is another mode of NTP\nthat can turn up on the exam.\n\n204\n00:10:30.910 --> 00:10:35.580\nIt's not used terribly often,\nbut it's called NTP broadcast.\n\n205\n00:10:35.580 --> 00:10:38.550\nWhen you configure an NTP server\nyou can set it to just broadcast\n\n206\n00:10:38.550 --> 00:10:40.650\nthe time on the network, and\nthat's exactly what it does.\n\n207\n00:10:40.650 --> 00:10:42.740\nIt just broadcasts it out\nonto the network, and\n\n208\n00:10:42.740 --> 00:10:45.830\nanybody who wants to know what time it\nis can just listen to the broadcast.\n\n209\n00:10:45.830 --> 00:10:47.320\nAlright.\n\n210\n00:10:47.320 --> 00:10:48.890\nThere's no security,\nthere's no authentication,\n\n211\n00:10:48.890 --> 00:10:50.680\nit's just straight up broadcast and\nthat's that.\n\n212\n00:10:50.680 --> 00:10:54.930\nSo it's not super secure, but\nit works and it's great for\n\n213\n00:10:54.930 --> 00:10:57.750\ndevices where you want\na super simply configuration.\n\n214\n00:10:57.750 --> 00:11:01.210\nIf you wanna set that up,\nit's done on a per interface basis.\n\n215\n00:11:01.210 --> 00:11:04.820\nAnd so for the server side,\nwe would need to come in and\n\n216\n00:11:04.820 --> 00:11:07.170\ntell it that we want it\nto do this broadcast.\n\n217\n00:11:07.170 --> 00:11:12.360\nAnd so, when you configure ntp,\nyou'll see where you've got.\n\n218\n00:11:12.360 --> 00:11:12.910\nOh, sorry.\n\n219\n00:11:12.910 --> 00:11:15.150\nI need to do it on the interface.\n\n220\n00:11:15.150 --> 00:11:18.420\nSo I need to get into gi0/1, for example.\n\n221\n00:11:18.420 --> 00:11:23.070\nAnd when you look at the ntp commands\nhere, you'll see ntp broadcast.\n\n222\n00:11:23.070 --> 00:11:26.980\nI wanna broadcast ntp out this interface.\n\n223\n00:11:26.980 --> 00:11:28.530\nAnd I'm the master so I've got the time.\n\n224\n00:11:28.530 --> 00:11:31.260\nI can send that out, and\nI'm gonna start transmitting it.\n\n225\n00:11:31.260 --> 00:11:35.190\nOn a client, I would go to their\ninterface and I would do the same thing.\n\n226\n00:11:35.190 --> 00:11:38.100\nI'd get right into their interface,\nI'd say ntp broadcast, and\n\n227\n00:11:38.100 --> 00:11:43.600\ninstead of pressing Enter I would\nsay client, ntp broadcast client.\n\n228\n00:11:43.600 --> 00:11:46.730\nAnd now I'm gonna listen on this\ninterface for that broadcast, and\n\n229\n00:11:46.730 --> 00:11:47.709\nlearn the time that way.\n\n230\n00:11:48.790 --> 00:11:51.730\nThe nice thing about this is you could\nconfigure more than one server to\n\n231\n00:11:51.730 --> 00:11:55.020\nbroadcast and that way if one failed\nthe broadcast are still out there.\n\n232\n00:11:55.020 --> 00:11:57.910\nBut you could also have broadcast\nthat have conflicting times.\n\n233\n00:11:57.910 --> 00:12:01.370\nSo this is not as reliable as\nsome of the other methods.\n\n234\n00:12:01.370 --> 00:12:05.170\nAnd being a broadcast let's you know that\nit's not gonna pass through routers,\n\n235\n00:12:05.170 --> 00:12:08.960\nit's not gonna pass between subnets\nWhereas is we did unicast it could.\n\n236\n00:12:08.960 --> 00:12:12.150\nSo this is not used very often,\nbut just be aware of it.\n\n237\n00:12:12.150 --> 00:12:15.820\nYou can jump to an interface and say ntp\nbroadcast, and you're gonna send it out.\n\n238\n00:12:15.820 --> 00:12:20.560\nAnd go to a client and say ntp broadcast\nclient and then it'll listen and learn it.\n\n239\n00:12:20.560 --> 00:12:24.229\nSo a couple of different ways\nto do NTP on our systems.\n\n240\n00:12:26.770 --> 00:12:30.280\nAs far as troubleshooting NTP,\nthere's not a whole heck of a lot to do.\n\n241\n00:12:30.280 --> 00:12:31.700\nYou can use your debugs.\n\n242\n00:12:31.700 --> 00:12:34.969\nThere is another command that I like, or\n\n243\n00:12:34.969 --> 00:12:40.075\na couple of if we use show commands\nlike show ntp associations.\n\n244\n00:12:40.075 --> 00:12:43.498\nThat will show any NTP servers\nthat you are talking to.\n\n245\n00:12:43.498 --> 00:12:47.759\nThis 127.127.1.1, that's us,\nthat's like the loop back.\n\n246\n00:12:47.759 --> 00:12:49.292\nThat's my connection to myself.\n\n247\n00:12:49.292 --> 00:12:55.350\nAnd then, 23.99, that's the NTP.org\npool that I connected to earlier.\n\n248\n00:12:55.350 --> 00:12:56.900\nSo I can see I'm connected to it.\n\n249\n00:12:56.900 --> 00:12:58.760\nHere's where it's measuring that delay.\n\n250\n00:12:58.760 --> 00:13:01.780\nRemember I said it has to track the delay\nbetween me and the destination?\n\n251\n00:13:01.780 --> 00:13:05.500\nAnd my offset because of delay and\ntime zone.\n\n252\n00:13:05.500 --> 00:13:07.180\nSo we can see all that right there.\n\n253\n00:13:07.180 --> 00:13:08.100\nI'm communicating with it.\n\n254\n00:13:08.100 --> 00:13:10.590\nSo quick way just to verify\nthat we are getting time.\n\n255\n00:13:11.790 --> 00:13:13.832\nAnother one is show ntp status.\n\n256\n00:13:15.830 --> 00:13:17.733\nAnd it will show you some\nother basic information.\n\n257\n00:13:17.733 --> 00:13:18.814\nWe saw this one earlier.\n\n258\n00:13:18.814 --> 00:13:22.871\nBut here it's telling me for\nexample that my clock is synchronized and\n\n259\n00:13:22.871 --> 00:13:25.702\nthat my reference is 127.127.1.1.\n\n260\n00:13:25.702 --> 00:13:28.470\nIt's not the pool, why not?\n\n261\n00:13:28.470 --> 00:13:30.540\nBecause I said NTP master.\n\n262\n00:13:30.540 --> 00:13:32.010\nI said I'm strata zero.\n\n263\n00:13:32.010 --> 00:13:36.800\nSo why would I talk to a stratum any\nhigher than zero if I am stratum zero?\n\n264\n00:13:36.800 --> 00:13:38.110\nSo that's what I expect to see.\n\n265\n00:13:38.110 --> 00:13:39.820\nI'm synchronizing against myself.\n\n266\n00:13:41.960 --> 00:13:44.720\nSo those are some key things\nto remember about NTP.\n\n267\n00:13:44.720 --> 00:13:47.770\nI do wanna mention one other thing here.\n\n268\n00:13:48.950 --> 00:13:51.920\nWhen troubleshooting ntp, I did a debug.\n\n269\n00:13:51.920 --> 00:13:53.200\nI did debug ntp all.\n\n270\n00:13:53.200 --> 00:13:55.860\nAnd that's a great way to\nsee all the debug stuff.\n\n271\n00:13:56.980 --> 00:14:00.880\nBut if you're trying to\ntroubleshoot broadcast ntp.\n\n272\n00:14:00.880 --> 00:14:04.230\nRemember how I said broadcast\nntp was tied to the interface?\n\n273\n00:14:04.230 --> 00:14:10.120\nWell, it's better to debug\nthe interface than it is to debug NTP.\n\n274\n00:14:10.120 --> 00:14:11.700\nAnd a lot of people don't do that.\n\n275\n00:14:11.700 --> 00:14:14.050\nA lot of people never\ndebug an interface itself.\n\n276\n00:14:14.050 --> 00:14:17.398\nAnd there's a little kind of caveat\nwith debugging an interface that I\n\n277\n00:14:17.398 --> 00:14:18.030\nwanna point out.\n\n278\n00:14:18.030 --> 00:14:20.950\nSo if you're ever trying to\ntroubleshoot broadcast NTP,\n\n279\n00:14:22.010 --> 00:14:25.690\ndebugging the interface can help to\nsee some of that information but it,\n\n280\n00:14:25.690 --> 00:14:27.510\nit leaves you open to\na particular weakness.\n\n281\n00:14:27.510 --> 00:14:28.970\nLet me show you what i'm talking about.\n\n282\n00:14:28.970 --> 00:14:31.730\nSo here on my router if\nI do a debug NTP all.\n\n283\n00:14:32.880 --> 00:14:35.790\nI'm now debugging for\nall these different events.\n\n284\n00:14:35.790 --> 00:14:39.240\nAnd if I do a show debug,\nI can see exactly what i'm debugging.\n\n285\n00:14:39.240 --> 00:14:40.580\nRight here, all these NTP events.\n\n286\n00:14:41.710 --> 00:14:46.430\nIf I do an undebug all It's\ngonna turn those off, and\n\n287\n00:14:46.430 --> 00:14:48.780\nif I do a show debug, they're all off.\n\n288\n00:14:48.780 --> 00:14:49.870\nThat's how debugs work.\n\n289\n00:14:49.870 --> 00:14:51.230\nThis is what everybody's been exposed to.\n\n290\n00:14:52.390 --> 00:14:58.370\nBut there's some debugs that are special,\nand they're called conditional debugging.\n\n291\n00:14:58.370 --> 00:15:02.020\nConditional debugging is where we\ntie the debug to some particular\n\n292\n00:15:02.020 --> 00:15:03.170\naspect of the router.\n\n293\n00:15:04.410 --> 00:15:06.050\nWhen we do a debug.\n\n294\n00:15:06.050 --> 00:15:08.970\nThe conditional ones are,\nthey're special, they're different.\n\n295\n00:15:08.970 --> 00:15:11.090\nAnd debugging an interface\nis one of those.\n\n296\n00:15:11.090 --> 00:15:14.370\nSo if you're ever debugging NTP,\nlet me show you what can happen.\n\n297\n00:15:14.370 --> 00:15:17.340\nIf we do a debug, and\n\n298\n00:15:17.340 --> 00:15:22.580\nI say interface, and so\nI'm debugging an interface specifically.\n\n299\n00:15:22.580 --> 00:15:25.790\nSo I might debug interface gi0/1.\n\n300\n00:15:25.790 --> 00:15:27.700\nSee that message that came up?\n\n301\n00:15:27.700 --> 00:15:32.240\nBefore, a message popped up where it\nshowed all sorts of information about what\n\n302\n00:15:32.240 --> 00:15:32.780\nI was debugging.\n\n303\n00:15:32.780 --> 00:15:34.500\nThis time it says Condition 1 set.\n\n304\n00:15:35.530 --> 00:15:38.320\nWhat I just did is turned\non conditional debugging.\n\n305\n00:15:39.490 --> 00:15:43.040\nAnd what's appearing on\nmy screen right now?\n\n306\n00:15:43.040 --> 00:15:43.800\nNothing.\n\n307\n00:15:43.800 --> 00:15:47.030\nThere's stuff happening on that interface,\nbut I'm not seeing it here.\n\n308\n00:15:47.030 --> 00:15:50.743\nAll I did was create a condition,\nI didn't actually turn on debugging.\n\n309\n00:15:50.743 --> 00:15:56.245\nIf I do debug, ntp all,\nnow I'm debugging NTP but\n\n310\n00:15:56.245 --> 00:15:59.264\nI've got a condition set.\n\n311\n00:15:59.264 --> 00:16:03.223\nSo, it's debugging NTP on that interface.\n\n312\n00:16:03.223 --> 00:16:05.800\nAnd that's where it\nbecomes really helpful for\n\n313\n00:16:05.800 --> 00:16:09.100\ntracking things like broadcast NTP, right?\n\n314\n00:16:09.100 --> 00:16:11.251\nBut here's the thing to remember.\n\n315\n00:16:11.251 --> 00:16:15.284\nIf I do, like, a show debug,\nit shows me what I'm debugging, and\n\n316\n00:16:15.284 --> 00:16:16.810\nthere's my condition.\n\n317\n00:16:17.810 --> 00:16:20.810\nOkay, if I do an undebug all.\n\n318\n00:16:21.920 --> 00:16:24.020\nAnd I do a show debug.\n\n319\n00:16:24.020 --> 00:16:26.070\nThe condition's still there.\n\n320\n00:16:26.070 --> 00:16:30.500\nUndebug all gets rid of\nthe debugs not the conditions.\n\n321\n00:16:30.500 --> 00:16:32.270\nThe conditions stay behind.\n\n322\n00:16:32.270 --> 00:16:36.500\nSo if you use conditional debugging\nwhen troubleshooting NTP It's\n\n323\n00:16:36.500 --> 00:16:38.820\nimportant to remember to turn\nit off when you're done.\n\n324\n00:16:39.930 --> 00:16:45.816\nSo, I need to undo that debug, but\nit doesn't get wrapped up in undebug all,\n\n325\n00:16:45.816 --> 00:16:49.091\nI have to say undebug interface GI0/1.\n\n326\n00:16:49.091 --> 00:16:52.680\nI have to turn that off and\nit gives me a warning.\n\n327\n00:16:52.680 --> 00:16:57.220\nIt says wait a minute,\nyou've got this condition in place.\n\n328\n00:16:57.220 --> 00:17:00.880\nAnd the condition is reducing\nthe amount of logs that you see.\n\n329\n00:17:00.880 --> 00:17:04.200\nIf you turn the condition off,\nyou might all of a sudden get\n\n330\n00:17:04.200 --> 00:17:06.650\nflooded with log messages that\nhave been hidden up until now.\n\n331\n00:17:07.710 --> 00:17:08.680\nSo, it's warning me.\n\n332\n00:17:08.680 --> 00:17:11.440\nWell, I already turned off all my\ndebugging so I'm safe on that.\n\n333\n00:17:11.440 --> 00:17:13.730\nI can go ahead and say yes.\n\n334\n00:17:13.730 --> 00:17:14.790\nAnd nothing happens.\n\n335\n00:17:14.790 --> 00:17:17.560\nAll right, but if I still had\ndebugging on I'd need to be ready for\n\n336\n00:17:17.560 --> 00:17:20.460\nthat knowing that I'm about to\nget a ton more data back at me.\n\n337\n00:17:20.460 --> 00:17:22.970\nAll right so\nthat's called conditional debugging.\n\n338\n00:17:22.970 --> 00:17:25.810\nWe just need to be careful with\nit because it's easy to forget it\n\n339\n00:17:25.810 --> 00:17:26.400\nand leave it behind.\n\n340\n00:17:26.400 --> 00:17:28.400\nAnd then you've got conditions in place.\n\n341\n00:17:28.400 --> 00:17:31.620\nLater on a month from now you're trying\nto troubleshoot another problem and\n\n342\n00:17:31.620 --> 00:17:33.280\nyour debugs aren't working and\nyou can't remember why.\n\n343\n00:17:33.280 --> 00:17:35.329\nAnd it's a conditional\ndebug that's left behind.\n\n344\n00:17:36.410 --> 00:17:39.910\nSo just definitely something you\nwanna keep in mind in the background.\n\n345\n00:17:41.290 --> 00:17:43.850\nAll right so, let's see one other thing.\n\n346\n00:17:43.850 --> 00:17:46.770\nNow, we talked about ways to\nget data out of our router.\n\n347\n00:17:46.770 --> 00:17:48.520\nWe talked about SMNP, right?\n\n348\n00:17:48.520 --> 00:17:52.190\nBack in part two,\nwe talked about how to get that data out.\n\n349\n00:17:52.190 --> 00:17:54.370\nWe talked about, what else was there?\n\n350\n00:17:54.370 --> 00:17:56.060\nCopying files back and forth.\n\n351\n00:17:56.060 --> 00:17:58.650\nRight?\nThat was is part two and in part three.\n\n352\n00:17:58.650 --> 00:18:02.850\nSo there is another way to get\ninformation out of our router.\n\n353\n00:18:02.850 --> 00:18:06.050\nIf we wanna transmit data to\nsome kind of monitoring system.\n\n354\n00:18:06.050 --> 00:18:09.140\nCisco routers support\nwhat's called NetFlow.\n\n355\n00:18:09.140 --> 00:18:11.800\nNetFlow is a technology\n\n356\n00:18:11.800 --> 00:18:15.290\nwhere the router will track kind\nof like a packet sniffer does.\n\n357\n00:18:15.290 --> 00:18:17.510\nBut not the packets themselves.\n\n358\n00:18:17.510 --> 00:18:19.700\nIt tracks the communications\nthat are happening.\n\n359\n00:18:19.700 --> 00:18:22.700\nSo if Host A is talking to Host B, your\n\n360\n00:18:22.700 --> 00:18:26.790\nrouter can pay attention to what protocol\nit's using, and how much data is sent.\n\n361\n00:18:26.790 --> 00:18:28.820\nNot the actual data itself, but\n\n362\n00:18:28.820 --> 00:18:32.560\nthe characteristics of that data,\na description of what's happening.\n\n363\n00:18:32.560 --> 00:18:35.500\nAnd it can export that data\nto a monitoring system.\n\n364\n00:18:35.500 --> 00:18:38.040\nAnd that monitoring system can then\nrender it for you in these nice,\n\n365\n00:18:38.040 --> 00:18:41.760\npretty graphical user interfaces, and you\ncan say, boy, I'm low on bandwidth today.\n\n366\n00:18:41.760 --> 00:18:42.420\nWho is using it?\n\n367\n00:18:42.420 --> 00:18:46.110\nAnd you can pull up this list, and you'll\nsee exactly who's using that bandwidth.\n\n368\n00:18:46.110 --> 00:18:47.810\nAnd you'll know who they're talking to.\n\n369\n00:18:47.810 --> 00:18:49.860\nYou can see that somebody's\nrunning BitTorrent.\n\n370\n00:18:49.860 --> 00:18:53.310\nYou can spot that stuff in\nyour NetFlow statistics.\n\n371\n00:18:53.310 --> 00:18:54.100\nAll right.\n\n372\n00:18:54.100 --> 00:18:56.880\nConfiguring NetFlow is\na two piece process.\n\n373\n00:18:56.880 --> 00:18:58.680\nOne part we do right here on the router.\n\n374\n00:18:58.680 --> 00:19:03.470\nThe other part is done on whatever\nNetFlow system you have, all right?\n\n375\n00:19:03.470 --> 00:19:07.400\nCisco has a NetFlow system that's part of\nCiscoWorks, but there's also third-party\n\n376\n00:19:07.400 --> 00:19:10.840\nones that are out there,\nlike SolarWinds has a flow analyzer.\n\n377\n00:19:10.840 --> 00:19:12.170\nAnd you can fire those up, and\n\n378\n00:19:12.170 --> 00:19:15.090\nit'll interpret the NetFlow\ndata that you send at it.\n\n379\n00:19:15.090 --> 00:19:18.160\nFor the exam,\nthey don't cover the monitoring systems.\n\n380\n00:19:18.160 --> 00:19:22.450\nFor this exam, they just want you to\nknow how to get your router to send out\n\n381\n00:19:22.450 --> 00:19:25.830\nNetFlow data and fortunately,\nthat's not very hard.\n\n382\n00:19:25.830 --> 00:19:27.800\nLet me show you that process and\n\n383\n00:19:27.800 --> 00:19:30.730\nhow we can get that set up\non one of our own routers.\n\n384\n00:19:30.730 --> 00:19:32.380\nI've got a router here and\n\n385\n00:19:32.380 --> 00:19:37.550\nlet's say that I have a NetFlow system\nsitting out there that is my laptop.\n\n386\n00:19:37.550 --> 00:19:39.810\nMaybe my laptop is configured\nto receive NetFlow.\n\n387\n00:19:39.810 --> 00:19:41.600\nAll right,\nI'm running some NetFlow software.\n\n388\n00:19:41.600 --> 00:19:42.340\nWhich, I'm not.\n\n389\n00:19:42.340 --> 00:19:43.300\nBut maybe I am.\n\n390\n00:19:43.300 --> 00:19:45.770\nSo, I can configure the router\nto send that NetFlow data and\n\n391\n00:19:45.770 --> 00:19:47.330\nget it put right over there.\n\n392\n00:19:47.330 --> 00:19:52.880\nOkay, the first that we need to do, is we\nneed to, well, tell it who to send it to.\n\n393\n00:19:52.880 --> 00:19:58.250\nSo I'm gonna jump in my config and\nI'm gonna say, IP flow-export Okay.\n\n394\n00:19:58.250 --> 00:20:02.740\nI wanna take my NetFlow data and\nI'm gonna export it somewhere else.\n\n395\n00:20:02.740 --> 00:20:06.570\nOkay now you're router is not actually\ntracking NetFlow data by default.\n\n396\n00:20:06.570 --> 00:20:07.480\nIt's not.\n\n397\n00:20:07.480 --> 00:20:09.680\nBut when I run this command,\nit's gonna start.\n\n398\n00:20:09.680 --> 00:20:13.220\nSo it kinda turns on NetFlow and\nthen sets up the export.\n\n399\n00:20:13.220 --> 00:20:16.470\nThe router can't actually\nuse the NetFlow data itself.\n\n400\n00:20:16.470 --> 00:20:19.640\nSo, there's no way to just turn\non NetFlow without exporting it.\n\n401\n00:20:19.640 --> 00:20:21.790\nThat's why there's this\ncommand to turn it on.\n\n402\n00:20:21.790 --> 00:20:27.470\nSo I'm gonna export it, and I'm gonna\nspecify a destination of my laptop.\n\n403\n00:20:27.470 --> 00:20:28.940\nThat's where i'm gonna send the data.\n\n404\n00:20:28.940 --> 00:20:34.860\nYou'd send this to your monitoring system\nAnd then, you can specify a port number.\n\n405\n00:20:34.860 --> 00:20:36.080\nWhen somebody sets up a server,\n\n406\n00:20:36.080 --> 00:20:39.360\nthey pick the net flow port number\nthey're gonna use, and you provide it.\n\n407\n00:20:39.360 --> 00:20:41.420\nThere's actually not a standard port for\nthis one.\n\n408\n00:20:41.420 --> 00:20:44.800\nI know a lot of documentation always uses\nthe same port, but there really isn't one.\n\n409\n00:20:44.800 --> 00:20:47.620\nWhoever sets up your server can\npick whatever port they want.\n\n410\n00:20:47.620 --> 00:20:52.010\nAnd so you'll punch in whatever port\nthat happens to be, so maybe I do 50001.\n\n411\n00:20:52.010 --> 00:20:54.000\nAnd you can provide that.\n\n412\n00:20:54.000 --> 00:20:57.700\nAnd that's the port that I'm\ngoing to send it out on.\n\n413\n00:20:57.700 --> 00:21:00.110\nSo, now that I've got that going along,\n\n414\n00:21:00.110 --> 00:21:02.440\nI'm exporting my NetFlow data\nthat's going to the server.\n\n415\n00:21:02.440 --> 00:21:03.800\nI'm done, right?\n\n416\n00:21:03.800 --> 00:21:06.270\nWell, actually yeah, for\nthe most part, you are.\n\n417\n00:21:06.270 --> 00:21:09.240\nBut there's a few other things that we\nmight want to do just to keep things on\n\n418\n00:21:09.240 --> 00:21:10.346\nthe up and up.\n\n419\n00:21:10.346 --> 00:21:14.080\nFirst off,\nI might want to define a source IP.\n\n420\n00:21:14.080 --> 00:21:17.926\nMy monitoring server might have an ACL\nthat restricts what IP I can connect\n\n421\n00:21:17.926 --> 00:21:18.429\nto it by.\n\n422\n00:21:18.429 --> 00:21:26.030\nSo I might want to set a source IP\nby saying, IP flow-export source.\n\n423\n00:21:26.030 --> 00:21:31.420\nAnd then designate an interface that I\nwant to use as the source of this data.\n\n424\n00:21:31.420 --> 00:21:35.159\nSo if I have more than one interface,\nI could say like GI0/0.\n\n425\n00:21:35.159 --> 00:21:39.530\nAnd oops actually I don't need\ninterface I can just say GI0/0.\n\n426\n00:21:39.530 --> 00:21:42.510\nAnd now all my flow traffic will\noriginate from that interface.\n\n427\n00:21:42.510 --> 00:21:46.414\nI am not restricting flow traffic to just\nthat interface I'm just saying when I send\n\n428\n00:21:46.414 --> 00:21:50.820\nto the monitoring station the source\nIP of my packets will come from here.\n\n429\n00:21:50.820 --> 00:21:52.085\nSo we can designate that.\n\n430\n00:21:52.085 --> 00:21:54.063\nYou can also set a version.\n\n431\n00:21:54.063 --> 00:21:57.830\nThere is actually more than\none version of NetFlow.\n\n432\n00:21:57.830 --> 00:22:01.850\nVersion 5 was the first one that was\ngenerally available and acceptable.\n\n433\n00:22:01.850 --> 00:22:02.910\nVersion 1 was out there.\n\n434\n00:22:02.910 --> 00:22:04.950\nI don't know any systems\nthat actually used that.\n\n435\n00:22:04.950 --> 00:22:07.090\nVersion 5 is the one\nyou see the most often.\n\n436\n00:22:07.090 --> 00:22:08.760\nVersion 9 is the newest one.\n\n437\n00:22:08.760 --> 00:22:10.780\nAnd version 9 has some really\ncool stuff in there, so\n\n438\n00:22:10.780 --> 00:22:13.130\nhopefully your monitoring\nsystem is updated to that.\n\n439\n00:22:13.130 --> 00:22:15.750\nIf it hasn't,\nyou may need to run in version 5.\n\n440\n00:22:15.750 --> 00:22:21.380\nSo I can say ip flow-export version and\nthen I'll say version 9 here, right?\n\n441\n00:22:21.380 --> 00:22:23.002\nThat's the one that I wanna use.\n\n442\n00:22:23.002 --> 00:22:25.970\nAll right, two more things.\n\n443\n00:22:25.970 --> 00:22:28.529\nWell actually, one more really important\nthing, one less important thing.\n\n444\n00:22:29.690 --> 00:22:31.350\nI've turned on NetFlow.\n\n445\n00:22:31.350 --> 00:22:33.400\nI'm sending out to a server.\n\n446\n00:22:33.400 --> 00:22:37.560\nBut the way NetFlow works is by\nmonitoring communications on my router.\n\n447\n00:22:37.560 --> 00:22:41.780\nAnd it monitors those\ncommunications based on interfaces.\n\n448\n00:22:41.780 --> 00:22:45.580\nSo I need to tell the system\nwhich interfaces to record,\n\n449\n00:22:45.580 --> 00:22:47.890\nwhich interfaces to pay attention to,\nright?\n\n450\n00:22:47.890 --> 00:22:52.390\nAnd you do that by going to each\ninterface and turning on NetFlow.\n\n451\n00:22:52.390 --> 00:22:53.850\nSo let me show you that.\n\n452\n00:22:53.850 --> 00:22:59.380\nI can jump into an interface,\nlike gi0/0 and right here we'll say\n\n453\n00:22:59.380 --> 00:23:05.550\nip flow, and then ingress or egress, okay.\n\n454\n00:23:05.550 --> 00:23:08.800\nIngress or egress, whether we want it\nto be incoming or outgoing traffic.\n\n455\n00:23:08.800 --> 00:23:10.940\nSo how you wanna monitor this one.\n\n456\n00:23:10.940 --> 00:23:12.210\nAnd it can monitor in either direction.\n\n457\n00:23:12.210 --> 00:23:13.080\nYou can specify it.\n\n458\n00:23:13.080 --> 00:23:14.720\nSo I might say ingress.\n\n459\n00:23:14.720 --> 00:23:18.180\nI wanna collect traffic as it\ncomes into this interface.\n\n460\n00:23:18.180 --> 00:23:20.130\nBut on another interface, like gi0/1,\n\n461\n00:23:20.130 --> 00:23:25.300\nI might wanna monitor egress, right,\ntraffic as it goes out of this interface.\n\n462\n00:23:25.300 --> 00:23:27.450\nSo you go an tell it where to monitor.\n\n463\n00:23:27.450 --> 00:23:30.960\nYou might choose to monitor\nall of your interfaces or\n\n464\n00:23:30.960 --> 00:23:32.940\nyou might have one interface\nthat points to the internet.\n\n465\n00:23:32.940 --> 00:23:35.860\nThat's the only one you care about and\nthat's the one you monitor.\n\n466\n00:23:35.860 --> 00:23:38.010\nAnd so you may choose to do that too.\n\n467\n00:23:38.010 --> 00:23:39.979\nSo you got a few different options there.\n\n468\n00:23:39.979 --> 00:23:44.336\nAnd this monitor option, you can actually\ncreate flow monitors which are like access\n\n469\n00:23:44.336 --> 00:23:47.741\ncontrol lists so you can dictate\nwhat traffic you want to collect.\n\n470\n00:23:47.741 --> 00:23:49.341\nThen we will get into that on the exam.\n\n471\n00:23:49.341 --> 00:23:52.403\nThe important part for the exam is\nthat they want you to know how to set\n\n472\n00:23:52.403 --> 00:23:54.194\nup the export to another server right?\n\n473\n00:23:54.194 --> 00:23:58.647\nSo this command right here the IP flow\nexport destination They want you to know\n\n474\n00:23:58.647 --> 00:24:02.070\nthat one, and they want you to\nremember to set the ingress or\n\n475\n00:24:02.070 --> 00:24:03.670\negress on the interfaces.\n\n476\n00:24:03.670 --> 00:24:05.813\nThose are the key ones to remember.\n\n477\n00:24:05.813 --> 00:24:06.451\nRight?\n\n478\n00:24:06.451 --> 00:24:08.790\nNow, that's all we need to know for\nthe exam, but\n\n479\n00:24:08.790 --> 00:24:13.500\nin real life there's a few other commands\nthat would actually be pretty beneficial.\n\n480\n00:24:13.500 --> 00:24:17.410\nI mentioned that the router can't\nactually use NetFlow itself.\n\n481\n00:24:17.410 --> 00:24:19.430\nRight.\nI can't pull up fancy charts and\n\n482\n00:24:19.430 --> 00:24:21.490\nall that stuff here on a router,\nit's a command line.\n\n483\n00:24:21.490 --> 00:24:24.050\nSo I need to go to my third party\nmanagement system, and that's where this\n\n484\n00:24:24.050 --> 00:24:28.120\ndata gets interpreted and rendered in\nnice pie charts and all that good stuff.\n\n485\n00:24:28.120 --> 00:24:29.660\nThat works out great, right.\n\n486\n00:24:29.660 --> 00:24:32.890\nBut in a pinch there are a few ways\nyou can troubleshoot NetFlow and\n\n487\n00:24:32.890 --> 00:24:35.730\nmake sure it's working\nright here from the router.\n\n488\n00:24:35.730 --> 00:24:42.760\nFor example we can say,\nshow IP, cache flow, all right.\n\n489\n00:24:42.760 --> 00:24:46.870\nAnd this will show us whether we're\nactually building a flow cache,\n\n490\n00:24:46.870 --> 00:24:49.450\nshow IP cache flow.\n\n491\n00:24:49.450 --> 00:24:53.000\nIt's paying attention to communications,\nit's gotta record that somewhere.\n\n492\n00:24:53.000 --> 00:24:54.460\nThis is the cache that does it.\n\n493\n00:24:54.460 --> 00:24:57.950\nAnd so you can go in and you can look and\nsee some basic information,\n\n494\n00:24:57.950 --> 00:25:01.690\nthe total amount of flows,\nthe packets and bytes per second.\n\n495\n00:25:01.690 --> 00:25:04.110\nWhich protocols are involved?\n\n496\n00:25:04.110 --> 00:25:06.750\nRight?\nAnd we can start to collect that data and\n\n497\n00:25:06.750 --> 00:25:08.260\nget a chance to see what it is.\n\n498\n00:25:08.260 --> 00:25:09.400\nAnd this is updating.\n\n499\n00:25:09.400 --> 00:25:10.690\nIt's updating all the time.\n\n500\n00:25:10.690 --> 00:25:14.280\nSo for example,\nif I were to ssh into that router,\n\n501\n00:25:15.850 --> 00:25:18.220\nthat's gonna generate some ssh traffic,\nwhich is TCP.\n\n502\n00:25:18.220 --> 00:25:21.470\nRight?\nAnd so when I get connected and login and\n\n503\n00:25:21.470 --> 00:25:24.240\nstart doing things,\nthat's generating traffic.\n\n504\n00:25:24.240 --> 00:25:29.450\nSo if I get logged in and do a nice\nbig command like show tech support,\n\n505\n00:25:29.450 --> 00:25:31.140\nright that command runs for a while.\n\n506\n00:25:31.140 --> 00:25:34.890\nSo i'll let that run for and while it's\nrunning i'll do show ip cache flow.\n\n507\n00:25:34.890 --> 00:25:38.250\nAnd I should see that traffic start\nto increase some of these counters\n\n508\n00:25:38.250 --> 00:25:39.150\nas they go up.\n\n509\n00:25:39.150 --> 00:25:41.670\nAnd then I can see some of these\nindividual interfaces and information.\n\n510\n00:25:41.670 --> 00:25:45.680\nSo, while I don't get nice little\ncharts and graphs and all that.\n\n511\n00:25:45.680 --> 00:25:49.640\nI do at least get a table where I\ncan see some of the data, all right.\n\n512\n00:25:49.640 --> 00:25:53.930\nSome of the other commands I can do,\nshow ip flow export.\n\n513\n00:25:53.930 --> 00:25:56.250\nAnd that will let me see the server\nthat I'm exporting to and\n\n514\n00:25:56.250 --> 00:25:58.280\nhow much data that I've\nbeen sending along to it.\n\n515\n00:25:58.280 --> 00:26:01.620\nI can see that I've sent 77\nflows to my workstation already.\n\n516\n00:26:01.620 --> 00:26:04.770\nMy workstation,\nwhich is just ignoring these right now.\n\n517\n00:26:04.770 --> 00:26:10.400\nYou can do,\nshow ip flow Interface and here\n\n518\n00:26:10.400 --> 00:26:13.590\nyou can see whether you're doing ingress\nor egress monitoring on interfaces, right?\n\n519\n00:26:13.590 --> 00:26:14.880\nSo, it's another one.\n\n520\n00:26:14.880 --> 00:26:19.830\nAnd then there's show IP\nflow export template.\n\n521\n00:26:19.830 --> 00:26:21.180\nAll right.\n\n522\n00:26:21.180 --> 00:26:25.300\nWhen we send flows to a destination, we\ndesignate if we're running in version 9 or\n\n523\n00:26:25.300 --> 00:26:26.720\nversion 5.\n\n524\n00:26:26.720 --> 00:26:29.780\nAnd those versions use a different\ntemplate for how they present data.\n\n525\n00:26:29.780 --> 00:26:31.610\nThat's why the server has to be ready for\nit.\n\n526\n00:26:31.610 --> 00:26:36.320\nWell if you do this show IP flow export\ntemplate, you can see a little bit about\n\n527\n00:26:36.320 --> 00:26:39.400\nhow many templates you've got defined and\nwhether you're sending to them.\n\n528\n00:26:39.400 --> 00:26:42.470\nIf you did it like I did, you configured\none version, you'll have one template.\n\n529\n00:26:42.470 --> 00:26:45.070\nAnd so I see that right here,\nactive templates one.\n\n530\n00:26:45.070 --> 00:26:45.590\nRight?\n\n531\n00:26:45.590 --> 00:26:48.520\nBut you can actually jump in the back end\nand create all sorts of custom templates\n\n532\n00:26:48.520 --> 00:26:52.260\nto change that data if you're developing\nyour own NetFlow applications.\n\n533\n00:26:52.260 --> 00:26:54.270\nI've seen a few companies that do that.\n\n534\n00:26:54.270 --> 00:26:57.010\nSo that's another option that's out there.\n\n535\n00:26:57.010 --> 00:26:57.790\nAll right, but\n\n536\n00:26:57.790 --> 00:27:01.860\nat the end of the day, that's basically\nall we need to know for NetFlow.\n\n537\n00:27:01.860 --> 00:27:04.010\nIt's up, it's running,\nit's gathering up data and\n\n538\n00:27:04.010 --> 00:27:06.670\nsending it to a monitoring system.\n\n539\n00:27:06.670 --> 00:27:09.870\nSo, just another way to get\ndata out of our system.\n\n540\n00:27:11.050 --> 00:27:13.930\nAll right, well, ladies and gentlemen,\nI know this has been a lightning round.\n\n541\n00:27:13.930 --> 00:27:17.430\nThere's been a ton of little tiny topics,\nlittle services kind of spread throughout\n\n542\n00:27:17.430 --> 00:27:21.500\na four-part episode which has kinda set\na record here on ITProTV somewhere.\n\n543\n00:27:21.500 --> 00:27:24.850\nBut be aware that while all\nthese services are small,\n\n544\n00:27:24.850 --> 00:27:28.100\nand they don't expect you know\na ton about them for the exam,\n\n545\n00:27:28.100 --> 00:27:31.790\nyou definitely want to be familiar with\nwhat they are, how they function, and\n\n546\n00:27:31.790 --> 00:27:34.770\nthe basic command syntax that I've been\nshowing you through these segments.\n\n547\n00:27:34.770 --> 00:27:37.740\nAnd then in real life later, it's good\nto know these because they're additional\n\n548\n00:27:37.740 --> 00:27:41.710\nthings you might choose to configure on\nyour network to be able to make use of it.\n\n549\n00:27:41.710 --> 00:27:45.940\nThey're definitely Good technologies,\nand they're kind of unsung heroes.\n\n550\n00:27:45.940 --> 00:27:49.610\nFeatures that we don't always take\nadvantage of but that we should.\n\n551\n00:27:49.610 --> 00:27:54.070\nAll right, but in this episode,\nwe got a chance to see NTP and NetFlow,\n\n552\n00:27:54.070 --> 00:27:59.290\ntwo technologies running on our routers,\none to set time, one to export metadata,\n\n553\n00:27:59.290 --> 00:28:03.000\nkind of diagnostic information about the\ncommunications happening on our router.\n\n554\n00:28:04.030 --> 00:28:05.815\nAll right,\nwell I hope you guys enjoyed the episode.\n\n555\n00:28:05.815 --> 00:28:09.900\nSigning off for ITProTV, I'm Don Pezet,\nand I'll see you next time.\n\n556\n00:28:09.900 --> 00:28:16.380\n[MUSIC]\n\n",
          "vimeoId": "140174562"
        },
        {
          "description": "The Dynamic Host Configuration Protocol (DHCP) in IPv4 allows one to learn the network they are on, run a default gateway and learn the DNS and domain server to use. With IPv6, built into the protocol one can learn what network they are on and automatically have an address assigned to them. Viewers will hear about how to configure a Cisco IOS device as a DHCP server, the steps required to configure an IPv4 DHCP server and also about configuring DHCP for an IPv6 network.",
          "length": "1284",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/ccnproute/cisco-ccnproute300101-6-5-dhcp-090315-1.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/ccnproute/cisco-ccnproute300101-6-5-dhcp-090315-1-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/ccnproute/cisco-ccnproute300101-6-5-dhcp-090315-1-sm.jpg",
          "title": "DHCP",
          "transcript": "WEBVTT\n\n1\n00:00:00.000 --> 00:00:10.366\n[MUSIC]\n\n2\n00:00:10.366 --> 00:00:12.251\nAll right, good morning, and afternoon.\n\n3\n00:00:12.251 --> 00:00:15.000\nAnd good evening, and welcome back\nto another episode of ITProTV.\n\n4\n00:00:15.000 --> 00:00:16.910\nI'm your host, Don Pezet.\n\n5\n00:00:16.910 --> 00:00:19.350\nBack again with another\nepisode of CCNP route.\n\n6\n00:00:19.350 --> 00:00:22.490\nAnd in this episode, we're gonna\nbe taking a look at the dynamic\n\n7\n00:00:22.490 --> 00:00:25.730\nhost configuration protocol or DHCP.\n\n8\n00:00:25.730 --> 00:00:28.800\nNow you learned about DHCP in\nyour studies for the CCNA, so\n\n9\n00:00:28.800 --> 00:00:30.740\nmost of you guys are already\nfamiliar with it.\n\n10\n00:00:30.740 --> 00:00:33.490\nBut, we need to go a little\nbit further in this episode.\n\n11\n00:00:33.490 --> 00:00:36.990\nIn the earlier certifications,\nyou really learned DHCP just for\n\n12\n00:00:36.990 --> 00:00:41.480\nIPv4 On the exam for the CCNP Routing,\nyou need to know it for IPv6.\n\n13\n00:00:41.480 --> 00:00:45.980\nAlso, and it's a weird thing, because\nmost IPv6 networks don't need DHCP, but\n\n14\n00:00:45.980 --> 00:00:47.770\nthere are times where we want to have it.\n\n15\n00:00:47.770 --> 00:00:48.310\nOkay?\n\n16\n00:00:48.310 --> 00:00:50.380\nNow, what are those times?\n\n17\n00:00:50.380 --> 00:00:52.340\nWhen does DHCP matter to me?\n\n18\n00:00:52.340 --> 00:00:54.050\nWell, in IPv4 we know we need it,\n\n19\n00:00:54.050 --> 00:00:58.390\nbecause it lets us learn our network that\nwe're on, we can run our default gateway.\n\n20\n00:00:58.390 --> 00:01:01.030\nBut we can also learn other things,\nlike a DNS server to use and\n\n21\n00:01:01.030 --> 00:01:02.300\na domain name to use.\n\n22\n00:01:02.300 --> 00:01:06.830\nWell, with IPv6, built into the protocol,\nI can learn what network I'm on and\n\n23\n00:01:06.830 --> 00:01:08.900\nI can automatically assign\nan address to myself.\n\n24\n00:01:08.900 --> 00:01:11.710\nI can use things like EUI-64\nto generate an address.\n\n25\n00:01:11.710 --> 00:01:13.770\nI don't need a GHP server.\n\n26\n00:01:13.770 --> 00:01:17.960\nBut one thing that IPv6 can't do on\nit's own is give me a DNS server to use.\n\n27\n00:01:17.960 --> 00:01:19.970\nOr give me a domain name to use.\n\n28\n00:01:19.970 --> 00:01:21.450\nSo I need something else to do that.\n\n29\n00:01:21.450 --> 00:01:22.000\nRight?\n\n30\n00:01:22.000 --> 00:01:25.960\nAnd there's ways you can kind of\nmanipulate stateless auto configuration\n\n31\n00:01:25.960 --> 00:01:29.250\nto try and achieve that, but\nit's far easier with DHCP.\n\n32\n00:01:29.250 --> 00:01:32.580\nSo we can use DHCP V6 to provide that.\n\n33\n00:01:32.580 --> 00:01:35.330\nBefore we dive into that though let's\nstart with IPV4 since that's where most of\n\n34\n00:01:35.330 --> 00:01:37.360\nyou guys should already\nbe comfortable with,\n\n35\n00:01:37.360 --> 00:01:39.540\nand we'll talk through DHCP for IPV4.\n\n36\n00:01:39.540 --> 00:01:41.730\nAnd then we'll see applying it for\nIPv6 also.\n\n37\n00:01:41.730 --> 00:01:43.020\nAll right?\n\n38\n00:01:43.020 --> 00:01:46.850\nNow I've got this little topology whipped\nup, let me bring up my diagram here, and\n\n39\n00:01:46.850 --> 00:01:48.230\nwe've been using this\nall throughout the show.\n\n40\n00:01:48.230 --> 00:01:49.850\nRight?\nA headquarters with a couple of branch\n\n41\n00:01:49.850 --> 00:01:52.360\nrouters, and\nI've got this metro e network.\n\n42\n00:01:52.360 --> 00:01:56.520\nNow up until this point,\nI've had static IPs there but\n\n43\n00:01:56.520 --> 00:01:59.680\nmaybe at some point in my life I just get\ntired of that and i'm like you know what,\n\n44\n00:01:59.680 --> 00:02:02.350\nI keep adding adding new branches and\nI get tired of assigning new IPs.\n\n45\n00:02:02.350 --> 00:02:03.890\nLets just do DHCP.\n\n46\n00:02:03.890 --> 00:02:07.350\nI want to convert this cloud to use DHCP.\n\n47\n00:02:07.350 --> 00:02:11.880\nHeadquarters will be the DHCP server and\neach branch will be a DHCP client\n\n48\n00:02:11.880 --> 00:02:15.090\nto get their address instead\nof manually assigning one.\n\n49\n00:02:15.090 --> 00:02:19.710\nSo I'm going to start on headquarters,\nand set up a DHCP server.\n\n50\n00:02:19.710 --> 00:02:23.340\nNow I'll jump right over to\nmy headquarters machine, and\n\n51\n00:02:23.340 --> 00:02:27.190\non my headquarters machine I'm going\nto basically jump into config, and\n\n52\n00:02:27.190 --> 00:02:28.380\nstart to get DHCP setup.\n\n53\n00:02:28.380 --> 00:02:32.140\nNow, the process for\nsetting up DHCP is pretty straightforward.\n\n54\n00:02:32.140 --> 00:02:33.890\nFirst off, we have to create a pool.\n\n55\n00:02:33.890 --> 00:02:36.600\nA pool is basically\na collection of IP addresses.\n\n56\n00:02:36.600 --> 00:02:40.640\nAnd then its got all the various other\nthings that go along with it DNS\n\n57\n00:02:40.640 --> 00:02:44.020\nservers default gateway and so\non that goes into the pool and\n\n58\n00:02:44.020 --> 00:02:48.010\nthen we attach the pool to an interface\nright so those are kind of the general\n\n59\n00:02:48.010 --> 00:02:50.750\nsteps that we're gonna follow\nas we run through on this so\n\n60\n00:02:50.750 --> 00:02:53.830\nI'm gonna start off actually I'm gonna\nstart off with a really important command\n\n61\n00:02:54.920 --> 00:02:59.190\nOn most Cisco routers DHCP is\nactually disabled by default.\n\n62\n00:02:59.190 --> 00:03:05.030\nSo I need to get in here and\nsay service DHCP so\n\n63\n00:03:05.030 --> 00:03:07.410\nthat it knows that it's allowed\nto run DHCP and BS Server.\n\n64\n00:03:07.410 --> 00:03:09.950\nNow your router might have that by\ndefault but most of them don't so\n\n65\n00:03:09.950 --> 00:03:11.980\njust get in the habit of running that.\n\n66\n00:03:11.980 --> 00:03:13.040\nAnd then I'm gonna create a pool.\n\n67\n00:03:14.140 --> 00:03:18.530\nSo I'm gonna create a pool that\nI'll just call maybe metro E or\n\n68\n00:03:18.530 --> 00:03:21.660\nwhatever it is that I wanna call it so\nI can remember what the pool is.\n\n69\n00:03:21.660 --> 00:03:24.900\nFrom here,\nI just give it the details of the pool.\n\n70\n00:03:24.900 --> 00:03:29.519\nI can tell it the network that I'm using\nso that's the 192.168.0.0 network.\n\n71\n00:03:31.120 --> 00:03:31.810\nAll right.\n\n72\n00:03:31.810 --> 00:03:33.810\nAnd then I can tell it other details.\n\n73\n00:03:33.810 --> 00:03:38.350\nI can say things like default-router and\nI'm going to point them to headquarters.\n\n74\n00:03:38.350 --> 00:03:41.880\nThat's me.\nAnd then I can specify a DNS server.\n\n75\n00:03:41.880 --> 00:03:44.840\nAnd I can give it whatever,\nmaybe I'll give it Google's.\n\n76\n00:03:44.840 --> 00:03:45.580\nAll right.\n\n77\n00:03:45.580 --> 00:03:47.790\nAnd then we can specify domain name,\nright.\n\n78\n00:03:47.790 --> 00:03:49.694\nI might say domain-name.\n\n79\n00:03:49.694 --> 00:03:52.500\nI'll do lab.itpro.tv.\n\n80\n00:03:52.500 --> 00:03:54.020\nRight?\nSo those are the details.\n\n81\n00:03:54.020 --> 00:03:55.770\nWhat I'm handing out with that pool.\n\n82\n00:03:56.810 --> 00:04:01.490\nOnce that's done, well,\nI do have one more step I need to do.\n\n83\n00:04:01.490 --> 00:04:06.560\nWhen I define this network,\nthis network is a whole class c, right?\n\n84\n00:04:06.560 --> 00:04:07.790\nThe 192.168.0.0 class c.\n\n85\n00:04:07.790 --> 00:04:11.140\nThat's gonna include a lot\nof IPs including my own IP.\n\n86\n00:04:11.140 --> 00:04:13.140\nSo we probably want to\nset some exclusions.\n\n87\n00:04:13.140 --> 00:04:14.570\nTake some IPs out of the pool.\n\n88\n00:04:14.570 --> 00:04:17.490\nWell it's kinda odd because when you do\nexclusions you don't do them from within\n\n89\n00:04:17.490 --> 00:04:20.890\nthe pool you actually have to get out and\ndo them outside of the pool.\n\n90\n00:04:20.890 --> 00:04:24.850\nSo I want to exclude my address and\nin reality, branch two, branch three,\n\n91\n00:04:24.850 --> 00:04:26.550\nbranch four,\nthey've already got static IPs.\n\n92\n00:04:26.550 --> 00:04:29.320\nI probably need to exclude those for now\ntoo because I don't want to end up with\n\n93\n00:04:29.320 --> 00:04:32.910\nduplicate IPs on my network,\nso I'm gonna add an exclusion.\n\n94\n00:04:32.910 --> 00:04:37.010\nAnd I'm gonna say ip\ndhcp excluded-address.\n\n95\n00:04:37.010 --> 00:04:40.350\nAnd if I just wanted to exclude mine,\nI could say that and press Enter.\n\n96\n00:04:40.350 --> 00:04:42.570\nAnd now it's just going\nto exclude headquarters.\n\n97\n00:04:43.640 --> 00:04:47.580\nOr I could add to it an endpoint, and\n\n98\n00:04:47.580 --> 00:04:50.340\nnow I'm gonna exclude .1\nall the way through .10.\n\n99\n00:04:50.340 --> 00:04:53.620\nSo that pool is now actually going to\n\n100\n00:04:53.620 --> 00:04:56.650\nbe 192.168.0.11 all the way\nthrough 192.168.0.254.\n\n101\n00:04:56.650 --> 00:04:57.300\nAll right?\n\n102\n00:04:57.300 --> 00:05:00.330\nSo that's my new pool.\n\n103\n00:05:00.330 --> 00:05:03.400\nNow, at this point I'm a DHCP server.\n\n104\n00:05:03.400 --> 00:05:06.140\nNow, I didn't attach it to an interface,\nbut that's okay.\n\n105\n00:05:06.140 --> 00:05:11.390\nIt looks at this pool and it sees that\nit matches one of my interfaces, right?\n\n106\n00:05:11.390 --> 00:05:14.280\nSo if I do a Show IP interface,\n\n107\n00:05:14.280 --> 00:05:17.820\nbrief, it sees that it matches this\ninterface, and so now, it's running and\n\n108\n00:05:17.820 --> 00:05:20.080\nlistening on that interface for\nanybody asking for an address.\n\n109\n00:05:20.080 --> 00:05:22.670\nAnd if somebody asks,\nwe'll give them an address, right?\n\n110\n00:05:22.670 --> 00:05:24.350\nSo t's all right there.\n\n111\n00:05:24.350 --> 00:05:27.300\nWell, now I just need to go and\ntell my clients to connect this way.\n\n112\n00:05:27.300 --> 00:05:29.260\nAnd the clients are pretty easy to set up,\nright.\n\n113\n00:05:29.260 --> 00:05:31.140\nI could jump over to branch one for\nexample.\n\n114\n00:05:32.430 --> 00:05:34.520\nAnd get into its configuration.\n\n115\n00:05:34.520 --> 00:05:37.640\nAnd if I take a look at e0/0,\n\n116\n00:05:37.640 --> 00:05:41.610\nright now it's got that static IP\naddress that's assigned to it.\n\n117\n00:05:41.610 --> 00:05:44.780\nSo I can remove that.\n\n118\n00:05:44.780 --> 00:05:47.350\nSo I'm just gonna try and\nget rid of- it helps if I get into\n\n119\n00:05:47.350 --> 00:05:50.255\nthe interface first- and\nthen I'll get rid of the address.\n\n120\n00:05:50.255 --> 00:05:52.940\n[LAUGH] And\nwe have to spell address right.\n\n121\n00:05:52.940 --> 00:05:56.410\nSo I just dumped that address and\nI lost all my OSPF neighbors so\n\n122\n00:05:56.410 --> 00:05:58.190\nI don't have that static IP anymore.\n\n123\n00:05:58.190 --> 00:06:01.100\nAnd now I can just say IP address DACP.\n\n124\n00:06:01.100 --> 00:06:06.000\nAnd so now I'm gonna reach out and\nask for an IP and so headquarters should\n\n125\n00:06:06.000 --> 00:06:09.670\nissue me an IP address from this interface\nand I'll get it and I'll have it assigned.\n\n126\n00:06:09.670 --> 00:06:14.240\nNow I'm gonna give it just a moment\nhere and we'll know if we get it\n\n127\n00:06:14.240 --> 00:06:18.675\nIf we do a show IP interface brief,\nwe can see it right there.\n\n128\n00:06:18.675 --> 00:06:20.970\n192.168.0.11 got a DHCP address.\n\n129\n00:06:20.970 --> 00:06:24.322\nI was .02, but now I got .11.\n\n130\n00:06:24.322 --> 00:06:28.340\nThe pool started at .10, it gave me .11.\n\n131\n00:06:28.340 --> 00:06:31.840\nSo I see that ADDRESS_ASSIGN right there,\nI got an address.\n\n132\n00:06:31.840 --> 00:06:33.950\nAnd it'll take a moment because\nof the changed address, but\n\n133\n00:06:33.950 --> 00:06:35.630\neventually I'll see OSPF recover.\n\n134\n00:06:35.630 --> 00:06:36.500\nThere it goes.\n\n135\n00:06:36.500 --> 00:06:39.270\nAnd I'm starting to get my OSPF\nadjacencies building back up.\n\n136\n00:06:39.270 --> 00:06:41.600\nRight.\nOSPF doesn't require a static IP.\n\n137\n00:06:41.600 --> 00:06:44.750\nYou can have a dynamic\nIP cuz OSPF is dynamic.\n\n138\n00:06:44.750 --> 00:06:45.830\nRight.\nAlthough you'll\n\n139\n00:06:45.830 --> 00:06:48.230\nprobably want to statically\nassign your router ID\n\n140\n00:06:48.230 --> 00:06:51.450\ncuz you don't want your router ID\nchanging every time your lease changes.\n\n141\n00:06:51.450 --> 00:06:54.290\nBut otherwise,\nit's pretty straight forward.\n\n142\n00:06:54.290 --> 00:06:56.880\nSo now it's gonna come up,\nbe healthy, and run.\n\n143\n00:06:56.880 --> 00:06:59.010\nSo that's IPv4.\n\n144\n00:06:59.010 --> 00:07:00.270\nLet's recap those commands.\n\n145\n00:07:00.270 --> 00:07:05.290\nIf I go back to my headquarters, and\nI take a look at what I've got here,\n\n146\n00:07:05.290 --> 00:07:08.130\nthe commands that I ran were\npretty straight forward.\n\n147\n00:07:08.130 --> 00:07:12.600\nI created a pool and then set\nthe various attributes to that pool.\n\n148\n00:07:12.600 --> 00:07:15.590\nAnd then I created an exclusion,\nand that was done.\n\n149\n00:07:15.590 --> 00:07:16.490\nSo that's IPv4.\n\n150\n00:07:16.490 --> 00:07:18.470\nWhat about IPv6?\n\n151\n00:07:19.620 --> 00:07:21.130\nWell, IPv6 is different.\n\n152\n00:07:21.130 --> 00:07:25.510\nIPv6 is different because we technically\ndon't need DHCP for IPv6, but\n\n153\n00:07:25.510 --> 00:07:28.230\nif we want it,\nwe can enable that function here.\n\n154\n00:07:28.230 --> 00:07:30.320\nA couple of things that\nwe need to be aware of.\n\n155\n00:07:30.320 --> 00:07:34.520\nFirst off, every Cisco router these\ndays has IPv6 enabled by default.\n\n156\n00:07:34.520 --> 00:07:36.170\nBut if you've got an older router,\nit might not.\n\n157\n00:07:36.170 --> 00:07:39.600\nAnd on an older router, we might need\nto go in and tell it to enable IPv6,\n\n158\n00:07:39.600 --> 00:07:41.610\njust in case, right.\n\n159\n00:07:41.610 --> 00:07:45.610\nSo, here in my global prompt, I'm gonna\ncome in and just say IPv6 enable.\n\n160\n00:07:45.610 --> 00:07:46.170\nWhoops.\n\n161\n00:07:46.170 --> 00:07:47.710\nOh actually I don't even have\nthat command on this one,\n\n162\n00:07:47.710 --> 00:07:50.090\nbecause it is already running, so\nI don't have to worry about that.\n\n163\n00:07:50.090 --> 00:07:50.750\nRight?\n\n164\n00:07:50.750 --> 00:07:54.614\nNow, if I'm gonna be a router,\nif I'm going to run OSPF version 3,\n\n165\n00:07:54.614 --> 00:07:57.092\nI'd also need to do IPv6 unicast routing.\n\n166\n00:07:57.092 --> 00:07:59.628\nAnd in my case,\nI don't necessarily have to be a router.\n\n167\n00:07:59.628 --> 00:08:01.295\nJust because you're a DHCP server,\n\n168\n00:08:01.295 --> 00:08:05.130\nit doesn't mean you're necessarily\nrunning a dynamic routing protocol.\n\n169\n00:08:05.130 --> 00:08:07.720\nSo, I should be good to go for\nIPv6 on this system.\n\n170\n00:08:07.720 --> 00:08:09.960\nI just need to go in and\nsetup the address pool.\n\n171\n00:08:11.040 --> 00:08:15.390\nNow to get the pool in place,\nwe're gonna start by creating a pool.\n\n172\n00:08:15.390 --> 00:08:18.770\nAnd now, I already created a pool,\nI created that ipv4 pool.\n\n173\n00:08:18.770 --> 00:08:22.600\nWell, I can create new one, and\nit's created a little bit differently.\n\n174\n00:08:22.600 --> 00:08:27.740\nInstead of IP pool,\nI need to say ipv6 dhcp pool.\n\n175\n00:08:29.030 --> 00:08:31.284\nSo that it knows that I'm working with\na difference protocol, otherwise,\n\n176\n00:08:31.284 --> 00:08:32.280\nthe address commands will fail.\n\n177\n00:08:32.280 --> 00:08:33.630\nAnd then I can give it a name.\n\n178\n00:08:33.630 --> 00:08:37.015\nAnd I'm gonna call mine, metro-e-ipv6.\n\n179\n00:08:38.590 --> 00:08:41.660\nSo I'm creating this new pool,\nand I need to give it some data.\n\n180\n00:08:41.660 --> 00:08:44.917\nAnd now for the data,\nI need to give it some basic information.\n\n181\n00:08:44.917 --> 00:08:48.726\nI need to say, address prefix.\n\n182\n00:08:48.726 --> 00:08:51.402\nSo instead of saying network followed\nby the network that I am on,\n\n183\n00:08:51.402 --> 00:08:52.627\nI'm saying address prefix.\n\n184\n00:08:52.627 --> 00:08:55.576\nSame result, just different syntax for it.\n\n185\n00:08:55.576 --> 00:09:01.743\nAnd for my metro-e network,\nI want to use fd00:192:168 and\n\n186\n00:09:01.743 --> 00:09:07.000\nthen 0s for the rest of the bits,\nand then I'll do a /64.\n\n187\n00:09:07.000 --> 00:09:10.645\nSo that's the network\nthat I'm gonna be using.\n\n188\n00:09:10.645 --> 00:09:15.100\nThen I can say, dns-server, and\nwho I want the dns-server to be.\n\n189\n00:09:15.100 --> 00:09:17.340\nSo maybe I've got a server that's in here,\nsomewhere.\n\n190\n00:09:17.340 --> 00:09:19.610\nI can go in, and put that in here.\n\n191\n00:09:21.690 --> 00:09:26.010\nSo there's gonna be my dns-server, which,\noh, I am inventing a new address space.\n\n192\n00:09:26.010 --> 00:09:27.110\nThere we go.\n\n193\n00:09:27.110 --> 00:09:30.647\nAnd I can advertise something like,\nlet's see, what else, a domain name.\n\n194\n00:09:30.647 --> 00:09:35.059\nSo I can say domain-name lab.itpro.tv.\n\n195\n00:09:35.059 --> 00:09:38.497\nNow I'm not gonna bother with\na default gateway, a default router,\n\n196\n00:09:38.497 --> 00:09:41.250\nbecause in IPv6,\nwe get router advertisements.\n\n197\n00:09:41.250 --> 00:09:43.890\nWe got the neighbor discoveries,\nso we'll find our own gateways.\n\n198\n00:09:43.890 --> 00:09:45.140\nWe don't need to bother with that.\n\n199\n00:09:45.140 --> 00:09:47.490\nBut what we won't find is a dns-server.\n\n200\n00:09:47.490 --> 00:09:51.900\nWe won't find a domain name, so\nthat's where I'm specifying right here,\n\n201\n00:09:51.900 --> 00:09:53.000\nthat we'll be able to hand those out.\n\n202\n00:09:55.730 --> 00:10:00.893\nNow where this gets a little bit different\nis an IPv6 address, you have IP mobility\n\n203\n00:10:00.893 --> 00:10:05.559\nbuilt into IPv6, so it can actually\nbounce from interface to interface.\n\n204\n00:10:05.559 --> 00:10:10.017\nAnd so in IPv6, creating a pool isn't\nenough, I don't just stop there.\n\n205\n00:10:10.017 --> 00:10:13.083\nI also need to attach it to an interface.\n\n206\n00:10:13.083 --> 00:10:16.449\nSo I need to get that kind of put in place\nand running, and you can attach it to more\n\n207\n00:10:16.449 --> 00:10:19.585\nthan one interface if you want, but\nI need to attach it to my metro-e one.\n\n208\n00:10:19.585 --> 00:10:23.556\nI need to get in there in anyway because I\ndon't think I have an IPv6 address myself.\n\n209\n00:10:23.556 --> 00:10:26.329\n[LAUGH] And if I do a show of\nipv6 interface brief, yeah,\n\n210\n00:10:26.329 --> 00:10:30.290\n[LAUGH] I don't have any IPv6 addresses,\nso that's gonna be a slight problem.\n\n211\n00:10:30.290 --> 00:10:35.906\nSo I'm gonna get into my interface,\nand I'm gonna say,\n\n212\n00:10:35.906 --> 00:10:41.528\nipv6 address fd00:192:168::1/64.\n\n213\n00:10:41.528 --> 00:10:44.779\nSo that's gonna be my address\non the metro-e network.\n\n214\n00:10:44.779 --> 00:10:49.523\nFrom here I can then say,\nipv6 dhcp server, and\n\n215\n00:10:49.523 --> 00:10:55.370\ntell it what pool I want\nto serve on this interface.\n\n216\n00:10:55.370 --> 00:10:58.150\nAnd you can attach the same pool to\nmore than one interface if you want, but\n\n217\n00:10:58.150 --> 00:11:03.579\nin my case I just need it right here,\nand I called my pool metro-e-ipv6.\n\n218\n00:11:04.690 --> 00:11:07.680\nSo that's the pool that I wanna attach,\nright here.\n\n219\n00:11:07.680 --> 00:11:12.860\nNow there is a slight,\nlittle manipulation that we have to do.\n\n220\n00:11:12.860 --> 00:11:16.230\nIPv6 is designed to work without DHCP.\n\n221\n00:11:16.230 --> 00:11:18.711\nBut we're about to tell it to use DHCP.\n\n222\n00:11:18.711 --> 00:11:21.951\nSo one of the problems is the client\nboots up, it's gonna try and\n\n223\n00:11:21.951 --> 00:11:24.540\ndo a stateless autoconfig,\nthat's what they do.\n\n224\n00:11:24.540 --> 00:11:28.124\nSo I have to tell my clients, I have to\nadvertise it out to the clients, hey,\n\n225\n00:11:28.124 --> 00:11:31.620\nif you don't use a stateless autoconfig,\nI'm here for you.\n\n226\n00:11:31.620 --> 00:11:34.460\nIt's kind of like advertising the fact\nthat a DHCP server is there, but\n\n227\n00:11:34.460 --> 00:11:35.720\nwe're doing it preemptively.\n\n228\n00:11:35.720 --> 00:11:39.420\nWe're not waiting for them to ask,\nwe're telling them, hey, I'm here, so\n\n229\n00:11:39.420 --> 00:11:42.300\ndon't do a stateless autoconfig,\nyou need to just come to me.\n\n230\n00:11:42.300 --> 00:11:45.502\nAnd the way we do that is by\nsetting a little config-flag.\n\n231\n00:11:45.502 --> 00:11:50.759\nWhat we need to do is say,\nipv6 nd, cuz we're manipulating\n\n232\n00:11:50.759 --> 00:11:56.136\nthe neighbor discovery, and\nthen managed-config-flag.\n\n233\n00:11:56.136 --> 00:11:59.433\nWhoops, which I have mutilated the\nspelling out of here, so let me fix that.\n\n234\n00:11:59.433 --> 00:12:00.176\nThere we go.\n\n235\n00:12:00.176 --> 00:12:03.751\nIpv6 nd managed-config-flag.\n\n236\n00:12:03.751 --> 00:12:06.570\nThat's gonna set an advertisement for\nmy router.\n\n237\n00:12:06.570 --> 00:12:09.344\nI'm now sending out this\nneighbor discovery advertisement.\n\n238\n00:12:09.344 --> 00:12:11.791\nSo when people fire up, and\nthey start looking for neighbors,\n\n239\n00:12:11.791 --> 00:12:13.777\nthey'll see this advertisement that says,\nhey,\n\n240\n00:12:13.777 --> 00:12:16.334\nyou don't have to do a stateless\nautoconfig, you can look to me.\n\n241\n00:12:16.334 --> 00:12:17.941\nI've got a managed\nconfiguration right here, and\n\n242\n00:12:17.941 --> 00:12:20.790\nyou can take it, and\nyou'll have the values that you need.\n\n243\n00:12:20.790 --> 00:12:25.710\nSo this is the flag,\nthat basically advertises our DHCP server.\n\n244\n00:12:25.710 --> 00:12:30.099\nThen we need to define the network\nthat we're advertising, and\n\n245\n00:12:30.099 --> 00:12:32.467\nwhat the lease time is going to be.\n\n246\n00:12:32.467 --> 00:12:34.509\nHow long we want these leases to be valid?\n\n247\n00:12:34.509 --> 00:12:37.740\nI never did do a lease on the previous\npool, the default lease time,\n\n248\n00:12:37.740 --> 00:12:41.910\nI think it is eight days or something\nlike, or actually I think it's 24 hours.\n\n249\n00:12:41.910 --> 00:12:46.190\nSo back in my ipv4 pool,\nI could have just said lease eight and\n\n250\n00:12:46.190 --> 00:12:49.170\nthen it becomes eight days, or\nlease one, and it becomes one day.\n\n251\n00:12:49.170 --> 00:12:51.046\nIn IPv6,\nwe do it right on the interface, and\n\n252\n00:12:51.046 --> 00:12:53.503\nit's kinda neat cuz you could\nhave different lease times and\n\n253\n00:12:53.503 --> 00:12:56.851\ndifferent interfaces if you wanted, or\nyou could just do it the same everywhere.\n\n254\n00:12:56.851 --> 00:12:57.966\nSo I'm gonna go ahead,\nand define that here.\n\n255\n00:12:57.966 --> 00:13:02.108\nI'm gonna say, ipv6 nd, so again,\n\n256\n00:13:02.108 --> 00:13:05.734\ndoing the neighbour discovery,\n\n257\n00:13:05.734 --> 00:13:10.923\nprefix fd00:192:168::/64.\n\n258\n00:13:10.923 --> 00:13:13.946\nNow I'm saying that I wanna do it for\nthis prefix, why do I specify this,\n\n259\n00:13:13.946 --> 00:13:14.850\nthat the pool has it.\n\n260\n00:13:16.330 --> 00:13:17.038\nAnd the reason is,\n\n261\n00:13:17.038 --> 00:13:19.690\nthat you could actually have more than\none pool attached to the same interface.\n\n262\n00:13:19.690 --> 00:13:23.089\nIPv6 is so flexible, that you could have\nseveral different networks right in this\n\n263\n00:13:23.089 --> 00:13:25.039\none interface, so\nwe have to be very specific.\n\n264\n00:13:25.039 --> 00:13:29.515\nSo I'm gonna say that this is\nthe prefix that I'm manipulating, and\n\n265\n00:13:29.515 --> 00:13:33.003\nfrom here, I can then say\nwhat I want that lease to be.\n\n266\n00:13:33.003 --> 00:13:35.259\nNow the IPv6 address space is so big,\n\n267\n00:13:35.259 --> 00:13:38.370\nthat you might choose not\nto limit your space at all.\n\n268\n00:13:38.370 --> 00:13:39.450\nYou might just say, infinite.\n\n269\n00:13:40.550 --> 00:13:42.430\nAnd so that you can specify that,\nif you want.\n\n270\n00:13:42.430 --> 00:13:45.560\nThe damage there is, if your router keeps\nrunning and running, and running for\n\n271\n00:13:45.560 --> 00:13:48.280\nyears on the end, the database\ngets bigger and bigger and bigger.\n\n272\n00:13:48.280 --> 00:13:49.950\nAnd then we start to have some problems,\ndon't we?\n\n273\n00:13:49.950 --> 00:13:51.750\nWe can run out of memory, in theory.\n\n274\n00:13:51.750 --> 00:13:54.852\nSo you may wanna set an actual valid\nLifetime, and it's done in seconds.\n\n275\n00:13:54.852 --> 00:13:56.291\nAnd so, you can dictate it right there.\n\n276\n00:13:56.291 --> 00:13:58.126\nBut for now I'm just gonna say, infinite.\n\n277\n00:13:58.126 --> 00:14:00.100\nNow right after that,\nI'll get another Lifetime.\n\n278\n00:14:00.100 --> 00:14:02.110\nWhy am I getting two?\n\n279\n00:14:02.110 --> 00:14:05.330\nWell, what you're actually\nsetting when you do this,\n\n280\n00:14:05.330 --> 00:14:10.580\nis you've got your valid Lifetime and\nyour preferred Lifetime.\n\n281\n00:14:10.580 --> 00:14:13.150\nThe valid Lifetime is\nthe absolute maximum.\n\n282\n00:14:13.150 --> 00:14:16.990\nThis is the maximum that you can have this\nIP, without checking back in with me.\n\n283\n00:14:16.990 --> 00:14:20.190\nSo if I set it to eight days, at the end\nof the eight days if you haven't checked\n\n284\n00:14:20.190 --> 00:14:22.790\nback, I take your IP back, and\nI give it to somebody else.\n\n285\n00:14:23.960 --> 00:14:26.772\nSo within eight days,\nyou've got to check in.\n\n286\n00:14:26.772 --> 00:14:30.960\nBut the preferred, this is where I\ncan set a time shorter than that,\n\n287\n00:14:30.960 --> 00:14:32.020\nthat I want people to check in.\n\n288\n00:14:32.020 --> 00:14:33.940\nLike your lease is eight days, but\n\n289\n00:14:33.940 --> 00:14:37.560\ncould you please check in with me every\n24 hours, or check in with me every four\n\n290\n00:14:37.560 --> 00:14:39.730\ndays, and that way they're not\nwaiting until the last minute.\n\n291\n00:14:39.730 --> 00:14:41.080\nThat way if I have an outage,\n\n292\n00:14:41.080 --> 00:14:44.360\nI can ensure that all my leases are at\nleast of a certain level of freshness.\n\n293\n00:14:44.360 --> 00:14:46.340\nI'm just gonna set that to infinite also.\n\n294\n00:14:46.340 --> 00:14:49.780\nIn other words, if you've got an infinite\nLifetime, I don't care if you check in or\n\n295\n00:14:49.780 --> 00:14:51.450\nnot, so don't bother checking in again.\n\n296\n00:14:53.400 --> 00:14:56.825\nThen the key point that I'm trying to\nget to, which is this guy right here,\n\n297\n00:14:56.825 --> 00:14:58.260\nno-autoconfig.\n\n298\n00:14:58.260 --> 00:15:01.485\nWhich says, Do not use prefix for\nautoconfiguration.\n\n299\n00:15:01.485 --> 00:15:05.129\nI don't want my clients autoconfiguring.\n\n300\n00:15:05.129 --> 00:15:08.587\nI wanna give them a configuration, and\nso I've gotta turn that off, otherwise,\n\n301\n00:15:08.587 --> 00:15:10.052\nmy router's gonna advertise it.\n\n302\n00:15:10.052 --> 00:15:13.604\nAnd it's gonna defeat the purpose\nof that last command, that I did.\n\n303\n00:15:13.604 --> 00:15:15.138\nSo now that's setup.\n\n304\n00:15:15.138 --> 00:15:19.508\nSo a client that fires up on this link\nwon't autoconfig, and it'll see this\n\n305\n00:15:19.508 --> 00:15:24.099\nadvertisement from me, telling them\nabout my server that can configure them.\n\n306\n00:15:24.099 --> 00:15:26.070\nAnd it'll connect up, and\nit'll get the settings.\n\n307\n00:15:27.130 --> 00:15:29.600\nSo a lot different than\nconfiguring the IPv4,\n\n308\n00:15:29.600 --> 00:15:31.810\nlet's look at what that\nlooks like as a whole.\n\n309\n00:15:32.830 --> 00:15:38.540\nSo first off we had to create a pool, and\nthat pool is right here, ipv6 dhcp pool.\n\n310\n00:15:38.540 --> 00:15:41.782\nAnd we defined the address prefix,\nand I gave it dns-server domain-name,\n\n311\n00:15:41.782 --> 00:15:45.330\nand any other values that we wanted to\nprovide, we could provide right in there.\n\n312\n00:15:45.330 --> 00:15:49.822\nAnd then I went to\nthe interface right here,\n\n313\n00:15:49.822 --> 00:15:53.680\nwhoops, and we assigned the prefix there.\n\n314\n00:15:53.680 --> 00:15:55.990\nWell, I assigned my address,\nwe can leave that part off.\n\n315\n00:15:55.990 --> 00:15:56.680\nThere we go.\n\n316\n00:15:56.680 --> 00:15:57.842\nWe assigned the prefix to it,\n\n317\n00:15:57.842 --> 00:16:00.175\nwhich is what actually attaches\nthe pool to the interface.\n\n318\n00:16:00.175 --> 00:16:04.146\nThis ipv6 dhcp server Metro-e-ipv6.\n\n319\n00:16:04.146 --> 00:16:07.511\nThen we set the manage config flag,\nso people would know that we\n\n320\n00:16:07.511 --> 00:16:10.940\nhave a config for them, and\nwe disabled stateless auto config so\n\n321\n00:16:10.940 --> 00:16:14.140\nthey wouldn't do that and\nthey'd get our config instead.\n\n322\n00:16:15.150 --> 00:16:16.820\nSo, this server is now all set up.\n\n323\n00:16:16.820 --> 00:16:19.480\nI just need to see it in action, right?\n\n324\n00:16:19.480 --> 00:16:22.020\nSo I can take a client, like any client.\n\n325\n00:16:22.020 --> 00:16:22.960\nI'll take Branch One.\n\n326\n00:16:24.480 --> 00:16:27.840\nAnd branch one,\nI configured for ipv4 dhcp.\n\n327\n00:16:27.840 --> 00:16:29.880\nI'll configure 5PV6 here.\n\n328\n00:16:29.880 --> 00:16:34.010\nAnd all I have to do is go into e0/0 and\n\n329\n00:16:34.010 --> 00:16:37.760\nsay ipv6 address dhcp.\n\n330\n00:16:37.760 --> 00:16:38.720\nAll right?\n\n331\n00:16:38.720 --> 00:16:43.850\nAnd when you run that, now it knows don't\nuse a static ipv6 address, use dhcp.\n\n332\n00:16:43.850 --> 00:16:46.000\nReach out and get one from the network.\n\n333\n00:16:46.000 --> 00:16:47.850\nAnd so\nit's gonna reach out on the background.\n\n334\n00:16:47.850 --> 00:16:50.330\nIt's gonna look for that server that's\nout there and it's going to get one.\n\n335\n00:16:50.330 --> 00:16:53.810\nAll right, now if you've already\nbeen through stateless autoconfig,\n\n336\n00:16:53.810 --> 00:16:56.460\nyou might already have an address and this\ncommand might not take effect right away.\n\n337\n00:16:56.460 --> 00:16:59.410\nAnd in that scenario, you might\nneed to shut your interface off and\n\n338\n00:16:59.410 --> 00:17:00.570\nthen turn it back on again.\n\n339\n00:17:00.570 --> 00:17:03.760\nSo just do like a shut down and\na no shut down to quickly reset it.\n\n340\n00:17:03.760 --> 00:17:08.590\nBut I think mine will probably take effect\nright away, so let's just take a look.\n\n341\n00:17:08.590 --> 00:17:14.540\nAnd when I do a show ipv6 interface brief,\nI am getting nothing.\n\n342\n00:17:14.540 --> 00:17:16.520\nSo I'm not getting my address just yet, so\n\n343\n00:17:16.520 --> 00:17:20.260\nI might actually need to do that\nshutdown and no shutdown that I mention.\n\n344\n00:17:20.260 --> 00:17:22.780\nI am actually gonna do\na ipv6 enable real quick,\n\n345\n00:17:22.780 --> 00:17:25.880\njust to make sure it's actually\nenabled on that interface.\n\n346\n00:17:25.880 --> 00:17:28.620\nAnd I'm gonna verify that config took.\n\n347\n00:17:31.050 --> 00:17:34.700\nWhoops, and\njust make sure that that's in there.\n\n348\n00:17:34.700 --> 00:17:35.630\nSo there we go.\n\n349\n00:17:35.630 --> 00:17:37.660\nSo I've got ipv6.address dhcp and\nipv6 enabled.\n\n350\n00:17:37.660 --> 00:17:39.400\nSo I should be pretty good there.\n\n351\n00:17:39.400 --> 00:17:43.710\nAnd if I do a shut down that's\ngonna flush out that interface.\n\n352\n00:17:47.790 --> 00:17:51.720\nAnd then if I do a no shutdown,\nthat will bring it back up.\n\n353\n00:17:51.720 --> 00:17:53.810\nI've got a lot going on there\nbecause of OSPF, right?\n\n354\n00:17:53.810 --> 00:17:56.940\nOSPF is kinda, trying to sync\nup over this link and stuff, so\n\n355\n00:17:56.940 --> 00:17:59.400\nwe'll see a lot of activity there,\nbut it's gonna go through.\n\n356\n00:17:59.400 --> 00:18:02.600\nI'm getting my IP addresses back and\nwe should be in business.\n\n357\n00:18:04.940 --> 00:18:08.920\nI'm gonna do a quick,\nshow IPV6 show interface brief.\n\n358\n00:18:10.860 --> 00:18:12.230\nThere we go.\n\n359\n00:18:12.230 --> 00:18:16.880\nNow, on ethernet 0/0, I can see\nI've got an fd00.192.168.0 address.\n\n360\n00:18:16.880 --> 00:18:19.350\nAnd the whole rest of it.\n\n361\n00:18:19.350 --> 00:18:20.640\nWhere did that come from?\n\n362\n00:18:20.640 --> 00:18:22.530\nThat came from the DHCP server, right?\n\n363\n00:18:22.530 --> 00:18:26.620\nSo I've been assigned an address, and\nI got other values like domain name and\n\n364\n00:18:26.620 --> 00:18:29.700\nDNS servers to use, and\nso those are in place.\n\n365\n00:18:29.700 --> 00:18:33.832\nIf I have name lookup turned on,\nI might type in a Host,\n\n366\n00:18:33.832 --> 00:18:38.255\nlike google.com, and it's gonna try and\ndo a lookup against that name server.\n\n367\n00:18:38.255 --> 00:18:41.195\nWell, actually it tried to do IPv4 there,\nso that didn't work out for me.\n\n368\n00:18:41.195 --> 00:18:43.135\nBut it's gonna get that information and\n\n369\n00:18:43.135 --> 00:18:46.887\nit's gonna use it to find that destination\nand pull the config from the DHCP server.\n\n370\n00:18:46.887 --> 00:18:47.427\nRight?\n\n371\n00:18:47.427 --> 00:18:51.017\nNow, on the DHCP server itself, there's\na few different ways to monitor it, right?\n\n372\n00:18:51.017 --> 00:18:52.157\nYou can do debugs.\n\n373\n00:18:52.157 --> 00:18:55.707\nI can do debug IP DHCP and\nactually watch stuff that's happening.\n\n374\n00:18:55.707 --> 00:18:59.587\nI can do debug IPV6 DHCP and\nwatch what's happening there too.\n\n375\n00:18:59.587 --> 00:19:04.477\nAnd we've got a few other things, usually\na little more handy is show IPV6 DHCP.\n\n376\n00:19:06.310 --> 00:19:10.840\nWhich will show you just that you\nare a DHCP server.I can see my identifier.\n\n377\n00:19:10.840 --> 00:19:13.660\nThe identifier is useful because that's\nwhat I'm advertising to the network.\n\n378\n00:19:13.660 --> 00:19:14.590\nSo if I'm on a client and\n\n379\n00:19:14.590 --> 00:19:18.220\nI see I've got an IPV6 address how\ndo I know what server it came from?\n\n380\n00:19:18.220 --> 00:19:20.800\nI can look at the ID and\nhere's the ID for that system.\n\n381\n00:19:20.800 --> 00:19:26.400\nOr I can say show IPV6 DHCP pool And\nwe'll see information about the pool,\n\n382\n00:19:26.400 --> 00:19:30.100\nand I can see that right now, I have one\naddress in use, I have no duplicates,\n\n383\n00:19:30.100 --> 00:19:32.340\nthat's a good thing, and\nI we're up and running.\n\n384\n00:19:32.340 --> 00:19:35.050\nHere's the information we're handing out\nin the active clients that we've got.\n\n385\n00:19:35.050 --> 00:19:36.860\nSo a quick,\neasy way to kind of monitor that.\n\n386\n00:19:36.860 --> 00:19:38.990\nThere's all sorts of stuff in\nhere that you can monitor.\n\n387\n00:19:38.990 --> 00:19:41.940\nUsually it's the bindings that\npeople care about, and so\n\n388\n00:19:41.940 --> 00:19:44.930\nif we take the bindings,\nI can see my clients.\n\n389\n00:19:44.930 --> 00:19:48.180\nAnd so this is going to be branch one,\nit's the only client I have.\n\n390\n00:19:48.180 --> 00:19:50.790\nAnd I can see the address they've been\nassigned what their lifetime is and\n\n391\n00:19:50.790 --> 00:19:54.260\nhow much more they've got that\nlease available for right.\n\n392\n00:19:54.260 --> 00:19:59.500\nOnce its enabled it really functions\njust like IPv4 but getting it enabled is\n\n393\n00:19:59.500 --> 00:20:02.330\ndifferent right and that's what I wanted\nto show you guys in this episode most of\n\n394\n00:20:02.330 --> 00:20:07.060\nyou should already be familiar with DHCP\nfrom CCNA So here it's different for IPv6.\n\n395\n00:20:07.060 --> 00:20:10.850\nSo that's what you need to be aware of and\ndefinitely be aware of for on the exam.\n\n396\n00:20:10.850 --> 00:20:13.140\nBecause it's an easy one for\nthem to do a simulation question on.\n\n397\n00:20:13.140 --> 00:20:16.330\nTo say, configure this as\na DHCP server for this network.\n\n398\n00:20:16.330 --> 00:20:18.750\nFor IPv6.\nAnd then you're like, oh shoot,\n\n399\n00:20:18.750 --> 00:20:20.520\nI know how to do it for IPv4,\nI don't know how for IPv6.\n\n400\n00:20:20.520 --> 00:20:24.130\nSo definitely a good thing to learn and\nsomething you might use in real life.\n\n401\n00:20:24.130 --> 00:20:25.400\nNow I say might.\n\n402\n00:20:25.400 --> 00:20:28.380\nThe whole point of IPv6 is\nnot need things like DHCP, so\n\n403\n00:20:28.380 --> 00:20:30.450\nwe try to avoid them if we can.\n\n404\n00:20:30.450 --> 00:20:34.760\nBut you may have need for it and\nit's available, it's there for you, so.\n\n405\n00:20:34.760 --> 00:20:37.350\nAll right, well, I think that's\nabout all I've got for DHCP.\n\n406\n00:20:37.350 --> 00:20:39.780\nI guess the only thing I didn't\nshow was like debugging, right?\n\n407\n00:20:39.780 --> 00:20:44.600\nAnd so you can do debug IPv6 DHCP,\nor debug IP DHCP.\n\n408\n00:20:44.600 --> 00:20:45.540\nAnd you'll see the process.\n\n409\n00:20:45.540 --> 00:20:47.330\nYou'll see people requesting addresses or\n\n410\n00:20:47.330 --> 00:20:49.830\ngetting addresses back,\nuseful for troubleshooting.\n\n411\n00:20:49.830 --> 00:20:51.830\nAm I actually receiving\nthose communications?\n\n412\n00:20:51.830 --> 00:20:54.790\nBut you guys have see that in another\nepisode, so it's nothing really new here.\n\n413\n00:20:56.040 --> 00:20:59.310\nAll right, well that's about it for DACP,\nso this is a good spot to wrap it up.\n\n414\n00:20:59.310 --> 00:21:03.840\nIn this episode we got a chance to see\nhow to configure DACP for IPv4, and\n\n415\n00:21:03.840 --> 00:21:05.340\nwe saw DACP for IPv6.\n\n416\n00:21:06.340 --> 00:21:09.730\nA lot different configuration, but\nat the end we get the same results.\n\n417\n00:21:09.730 --> 00:21:12.350\nDefinitely good systems to have in\nplace and something to make use of.\n\n418\n00:21:12.350 --> 00:21:14.650\nAll right well I hope you guys enjoyed it.\n\n419\n00:21:14.650 --> 00:21:18.707\nSigning off for ITProTV,\nI'm Don Pozet and I'll see you next time.\n\n420\n00:21:18.707 --> 00:21:24.370\n[MUSIC]\n\n",
          "vimeoId": "138326558"
        },
        {
          "description": "One will probably use Network Address Translation (NAT) for many different scenarios with IPv4, but not very many with IPv6, but should still know the concepts and differences between NPT and NAT64. Viewers will hear about the different forms of NAT, configuring NAT for IPv4 and how NAT64 and NPTv6 can be used to provide address translation under IPv6.",
          "length": "1546",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/ccnproute/cisco-ccnproute300101-6-6-network_address_translation-092215-1.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/ccnproute/cisco-ccnproute300101-6-6-network_address_translation-092215-1-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/ccnproute/cisco-ccnproute300101-6-6-network_address_translation-092215-1-sm.jpg",
          "title": "Network Address Translation",
          "transcript": "WEBVTT\n\n1\n00:00:00.000 --> 00:00:10.399\n[MUSIC]\n\n2\n00:00:10.399 --> 00:00:13.339\nAll right, good morning,\ngood afternoon, and good evening, and\n\n3\n00:00:13.339 --> 00:00:15.311\nwelcome back to another\nepisode of ITProTV.\n\n4\n00:00:15.311 --> 00:00:20.220\nI'm your host, Don Pezet, back again\nwith another episode of CCMP routing.\n\n5\n00:00:20.220 --> 00:00:23.590\nIn this episode we're going to be taking\na look at network address translation.\n\n6\n00:00:23.590 --> 00:00:25.600\nAnd I know what you're thinking,\nwait a minute Don,\n\n7\n00:00:25.600 --> 00:00:30.220\nwe already covered NAT back in the CCNA\nexam, and you're absolutely right.\n\n8\n00:00:30.220 --> 00:00:33.280\nYou have to know NAT for CCNA but\nalso have to know it for\n\n9\n00:00:33.280 --> 00:00:34.650\nCCNP routing and switching.\n\n10\n00:00:34.650 --> 00:00:39.860\nIt's an important topic, and it's one of\nthose technologies that we configure,\n\n11\n00:00:39.860 --> 00:00:43.080\nput in place and then never have to touch\nagain so it's an easy one to forget.\n\n12\n00:00:43.080 --> 00:00:45.040\nSo in this episode we're going\nto take a look at that, and\n\n13\n00:00:45.040 --> 00:00:48.880\nthen we're gonna go a bit further than we\nwent in the CCNA, cuz we're gonna talk\n\n14\n00:00:48.880 --> 00:00:53.050\na little bit about NAT under IPv6,\nwhich, I know, you shouldn't have to do.\n\n15\n00:00:53.050 --> 00:00:54.600\nBut it is a possibility, and so\n\n16\n00:00:54.600 --> 00:00:56.580\nwe need to know how to handle\nthat should the need arise.\n\n17\n00:00:56.580 --> 00:00:57.800\nAll right?\n\n18\n00:00:57.800 --> 00:01:00.520\nSo, let's start with IPv4 NAT, and\n\n19\n00:01:00.520 --> 00:01:03.380\nif you remember back from the CCNA days,\nthere were\n\n20\n00:01:03.380 --> 00:01:07.860\nthree different forms of NAT under IPv4\nthat we had to be familiar with, right?\n\n21\n00:01:07.860 --> 00:01:11.490\nThere was the dynamic NAT, which is\nreally port address translation, or\n\n22\n00:01:11.490 --> 00:01:15.780\nPAT, where we have many hosts\non our internal network, and\n\n23\n00:01:15.780 --> 00:01:18.530\nwe want them to go out on\nthe internet on a single IP.\n\n24\n00:01:18.530 --> 00:01:22.670\nWe overload a single IP to handle\nthe traffic for many computers.\n\n25\n00:01:22.670 --> 00:01:25.080\nRight?\nThat's the most common form of NAT.\n\n26\n00:01:26.090 --> 00:01:31.490\nThen we have static NAT where we map\none internal IP to one external IP.\n\n27\n00:01:31.490 --> 00:01:34.300\nThat's a little more useful for\nlike servers and DMZ's.\n\n28\n00:01:34.300 --> 00:01:37.300\nAnd that's fairly common too.\n\n29\n00:01:37.300 --> 00:01:39.830\nAnd then the third form is\njust straight up dynamic NAT.\n\n30\n00:01:39.830 --> 00:01:41.580\nWhere, we have some host and\n\n31\n00:01:41.580 --> 00:01:45.410\nthey grab an IP out of of\na pool of IPs on their way out.\n\n32\n00:01:45.410 --> 00:01:47.890\nAnd, it's a first come,\nfirst served basis.\n\n33\n00:01:47.890 --> 00:01:49.290\nAnd you can run out of IPs.\n\n34\n00:01:49.290 --> 00:01:52.760\nIt's probably the least common of\nthe three ways to configure this.\n\n35\n00:01:52.760 --> 00:01:53.490\nAll right?\n\n36\n00:01:53.490 --> 00:01:55.520\nBut, for the exam,\nwe need to be familiar with all three.\n\n37\n00:01:55.520 --> 00:01:57.340\nAnd so\nI want to run through some quick examples.\n\n38\n00:01:57.340 --> 00:02:00.270\nNow, if this is your first brush\nwith network address translation,\n\n39\n00:02:00.270 --> 00:02:01.260\nWell it shouldn't be, but\n\n40\n00:02:01.260 --> 00:02:05.350\nif it is I encourage you to jump back to\nthe CCNA shows and kinda run through that.\n\n41\n00:02:05.350 --> 00:02:08.410\nCuz we spent a lot more time and\ngo into a lot more detail there.\n\n42\n00:02:08.410 --> 00:02:11.320\nBut here, for the CCNP,\nwe just need a little refresher\n\n43\n00:02:11.320 --> 00:02:13.400\non the commands to make sure\nwe remember how to do it.\n\n44\n00:02:13.400 --> 00:02:14.170\nAll right.\n\n45\n00:02:14.170 --> 00:02:16.370\nSo let's take my router for example, here.\n\n46\n00:02:16.370 --> 00:02:18.700\nAnd we'll start with the most\ncommon configuration,\n\n47\n00:02:18.700 --> 00:02:21.890\ncuz that's the one you guys are gonna\nsee out in real life the most.\n\n48\n00:02:21.890 --> 00:02:23.350\nAnd so I'm gonna take my router, and\n\n49\n00:02:23.350 --> 00:02:27.690\nlet's just take a look at the IPs\nthat I have on this thing right now.\n\n50\n00:02:27.690 --> 00:02:32.310\nSo right now, I have GI zero slash zero\nand I've got an internal IP address on it.\n\n51\n00:02:32.310 --> 00:02:38.090\nAnd my GI zero slash one is not\nconfigured but maybe I jump into that and\n\n52\n00:02:38.090 --> 00:02:42.450\nI give it a public IP address because it's\ngonna be connected out to the internet.\n\n53\n00:02:42.450 --> 00:02:46.830\nSo I'm just gonna give it a quick\npublic IP on our network, here.\n\n54\n00:02:46.830 --> 00:02:49.100\nAnd there we go.\n\n55\n00:02:49.100 --> 00:02:52.650\nAnd throw a no shutdown on it,\nso it comes up.\n\n56\n00:02:52.650 --> 00:02:56.600\nSo I've got my internal network,\nand I've got an external network.\n\n57\n00:02:56.600 --> 00:03:00.190\nAnd I wanna make it where when\nhosts pass through my router,\n\n58\n00:03:00.190 --> 00:03:04.020\nif they're coming from the inside network,\nI want to nat them\n\n59\n00:03:04.020 --> 00:03:08.790\nto share this one IP that is on my router.\n\n60\n00:03:08.790 --> 00:03:11.370\nSo, when they go out to the internet,\n\n61\n00:03:11.370 --> 00:03:13.760\nthey are going to end up with\nthe IP address that's right here.\n\n62\n00:03:13.760 --> 00:03:16.130\nJust kind of overloading that one IP.\n\n63\n00:03:17.300 --> 00:03:19.300\nWell, the process of configuring\nthat is pretty straightforward.\n\n64\n00:03:19.300 --> 00:03:22.190\nWe start by creating\nan access control list.\n\n65\n00:03:22.190 --> 00:03:25.280\nAnd the ACL is going to define\nwho we want to NAT, right?\n\n66\n00:03:25.280 --> 00:03:26.970\nWho is allowed to be NATed.\n\n67\n00:03:26.970 --> 00:03:31.720\nWell my internal network\nis 10.1.230.11 is my IP.\n\n68\n00:03:31.720 --> 00:03:33.900\nI need to know the sub net mask for\nthat, so\n\n69\n00:03:33.900 --> 00:03:39.370\nI'm going to do a quick check of my\nconfig to see what that sub net mask is.\n\n70\n00:03:39.370 --> 00:03:41.460\nAnd I can see it's a Class C, al lright?\n\n71\n00:03:41.460 --> 00:03:43.239\nSo I'll just create an access list.\n\n72\n00:03:44.720 --> 00:03:48.050\nI'll create access list 2, and\nI'm gonna permit those IPs.\n\n73\n00:03:48.050 --> 00:03:50.720\nSo I'll do that 10.1.230 network\n\n74\n00:03:50.720 --> 00:03:54.560\nwith a wild card mask that\nallows that whole class c.\n\n75\n00:03:54.560 --> 00:03:56.260\nAnd I'm not gonna allow anybody else.\n\n76\n00:03:56.260 --> 00:03:58.680\nI just wanna map my internal IPs.\n\n77\n00:03:58.680 --> 00:04:01.540\nYou could approve this from bigger ranges,\nor even say any, and\n\n78\n00:04:01.540 --> 00:04:02.810\nit would approve anybody.\n\n79\n00:04:02.810 --> 00:04:05.620\nBut you might allow NAT in certain\nscenarios where you don't want to.\n\n80\n00:04:05.620 --> 00:04:08.490\nWe normally wanna be fairly specific,\nall right?\n\n81\n00:04:08.490 --> 00:04:11.410\nSo now I've got an ACL that defines that.\n\n82\n00:04:11.410 --> 00:04:14.130\nI just need to tell\nthe system what I wanna do.\n\n83\n00:04:14.130 --> 00:04:19.585\nAnd so the way we do that is by\nsaying IP NAT inside source.\n\n84\n00:04:19.585 --> 00:04:22.490\nI'm turning on IP NAT.\n\n85\n00:04:22.490 --> 00:04:25.340\nAnd then I need to tell it\nwho the internal people are.\n\n86\n00:04:25.340 --> 00:04:27.010\nAnd so I'm gonna say the inside source,\n\n87\n00:04:27.010 --> 00:04:30.340\nthese are the internal IPs,\nare coming from a list.\n\n88\n00:04:30.340 --> 00:04:32.540\nAnd my list is access list 2.\n\n89\n00:04:32.540 --> 00:04:36.140\nSo IP NAT inside source list 2.\n\n90\n00:04:36.140 --> 00:04:39.620\nSo those are the people\nthat I'm gonna translate.\n\n91\n00:04:39.620 --> 00:04:41.440\nAnd then what do I translate them to?\n\n92\n00:04:41.440 --> 00:04:43.170\nWhat am I going to turn them into?\n\n93\n00:04:43.170 --> 00:04:46.320\nNow here is where you start\nto have some choices.\n\n94\n00:04:46.320 --> 00:04:49.760\nI want to overload the IP\non that interface.\n\n95\n00:04:49.760 --> 00:04:55.920\nI've got two choices how I want to do\nthis, for the address that I NAT to,\n\n96\n00:04:55.920 --> 00:04:59.880\nIf you do a question mark, you'll see\nwhere you can put an interface or a pool.\n\n97\n00:04:59.880 --> 00:05:04.250\nI could create a pool and\nput that one IP in there and that's it.\n\n98\n00:05:04.250 --> 00:05:06.330\nAnd then overload that.\n\n99\n00:05:06.330 --> 00:05:11.840\nBut since the IP's already associated\nto the interface, it's easier for\n\n100\n00:05:11.840 --> 00:05:14.810\nme to just say I'm going to map to\nwhatever address is on that interface.\n\n101\n00:05:14.810 --> 00:05:15.880\nThere's two benefits to that.\n\n102\n00:05:15.880 --> 00:05:17.890\nOne, it's easy to do in the command line.\n\n103\n00:05:17.890 --> 00:05:22.220\nAnd two,\nif the IP of the interface ever changes,\n\n104\n00:05:22.220 --> 00:05:23.730\nNAT will automatically change with it.\n\n105\n00:05:23.730 --> 00:05:25.400\nSo it kind of gives me\na little safety net there.\n\n106\n00:05:25.400 --> 00:05:28.700\nSo that's what I'm gonna do,\nis I'm gonna tie it to my interface.\n\n107\n00:05:28.700 --> 00:05:31.840\nAnd then,\nI just tell it which interface it is.\n\n108\n00:05:31.840 --> 00:05:36.230\nAnd from back up here my\npublic interface is GI0/1 So\n\n109\n00:05:36.230 --> 00:05:39.420\nI'll specify that that's\nwho I want to NAT to.\n\n110\n00:05:39.420 --> 00:05:43.180\nNow if I stop right here I'm close but\nI'm not done.\n\n111\n00:05:43.180 --> 00:05:45.730\nWhat's gonna happen is the first person\nwho goes out to the internet it's\n\n112\n00:05:45.730 --> 00:05:46.820\ngoing to work for them.\n\n113\n00:05:46.820 --> 00:05:48.950\nThe second person, it's not.\n\n114\n00:05:48.950 --> 00:05:54.350\nAnd that's because I need to add\none more word, which is overload.\n\n115\n00:05:54.350 --> 00:05:58.230\nOverload is what switches\nus from NAT toPATt.\n\n116\n00:05:58.230 --> 00:06:00.160\nNow we're not just doing\naddress translation but\n\n117\n00:06:00.160 --> 00:06:06.370\nwe're also doing port translation, so that\nmore than one IP can share that single IP.\n\n118\n00:06:06.370 --> 00:06:08.920\nMore than one internal host can\nshare the single public IP.\n\n119\n00:06:08.920 --> 00:06:09.420\nAll right.\n\n120\n00:06:10.950 --> 00:06:13.610\nSo I created an access list, and\n\n121\n00:06:13.610 --> 00:06:17.940\nthen I mapped the access list\nas the source of my traffic.\n\n122\n00:06:17.940 --> 00:06:21.210\nAnd the IP of this interface\nas the destination, or\n\n123\n00:06:21.210 --> 00:06:24.370\nthe outgoing source,\nthat's gonna be seen out on the internet.\n\n124\n00:06:25.550 --> 00:06:30.810\nThe last thing I need to do, is I need\nto tell it which interfaces are inside,\n\n125\n00:06:30.810 --> 00:06:33.020\nand which interfaces are outside.\n\n126\n00:06:33.020 --> 00:06:38.180\nSo I need to get into interface GI0/0 and\nsay IP NAT inside\n\n127\n00:06:39.230 --> 00:06:44.720\nand then I can jump over to GI0/1 and\nsay IP NAT outside.\n\n128\n00:06:44.720 --> 00:06:48.730\nAnd then it'll know which one is which and\nI'll be able to set that.\n\n129\n00:06:48.730 --> 00:06:54.160\nSo, once that's there, and\nI'll set this one to IP NAT outside,\n\n130\n00:06:54.160 --> 00:06:56.770\nAnd you could have more\nthan one inside ip.\n\n131\n00:06:56.770 --> 00:06:59.630\nIt's very possible, you know, if you go\nto each of your interfaces you might have\n\n132\n00:06:59.630 --> 00:07:01.533\nthree or\nfour that are all flagged as inside.\n\n133\n00:07:01.533 --> 00:07:03.419\nI'm only dealing with two interfaces.\n\n134\n00:07:03.419 --> 00:07:05.170\nSo it's not that big of a deal, all right?\n\n135\n00:07:05.170 --> 00:07:07.150\nNow, it's configured and we're in place.\n\n136\n00:07:07.150 --> 00:07:10.930\nAnd notice this NAT virtual interface\ncame up when I configured that, right?\n\n137\n00:07:10.930 --> 00:07:13.740\nThat's a virtual interface it\ncreates to handle the routing for\n\n138\n00:07:13.740 --> 00:07:14.954\nnetwork address translation.\n\n139\n00:07:14.954 --> 00:07:20.710\nAnd at this point, I'm now running\nNAT in the most common form, which is\n\n140\n00:07:20.710 --> 00:07:26.710\nall of my internal hosts are going to get\nNATTED to that one ip on their way out.\n\n141\n00:07:26.710 --> 00:07:31.290\nAs hosts start to communicate,\nwe'll see that routing table fill up with,\n\n142\n00:07:31.290 --> 00:07:33.550\nnot the routing table, sorry,\nthe translation table fill up.\n\n143\n00:07:33.550 --> 00:07:38.430\nYou can do show IP NAT translations.\n\n144\n00:07:38.430 --> 00:07:40.540\nAnd you'll see the translations\nthat are happening.\n\n145\n00:07:40.540 --> 00:07:43.490\nThe source address going to\nthe destination address and so on.\n\n146\n00:07:43.490 --> 00:07:49.130\nSo, for example, if I were to take my\nworkstation here, and if I were to go into\n\n147\n00:07:49.130 --> 00:07:53.460\nmy network, and I'm gonna switch over to\nusing that router as my default gateway.\n\n148\n00:07:53.460 --> 00:07:59.663\nSo if I say that I'm\ngonna be 10.1.230.243,\n\n149\n00:07:59.663 --> 00:08:04.862\nand I'll use that router\nas my default gateway.\n\n150\n00:08:04.862 --> 00:08:08.240\nAll right, and\nif I were to open up a terminal.\n\n151\n00:08:10.300 --> 00:08:14.410\nOkay, so here I am, and my default\ngateway is now this router behind me.\n\n152\n00:08:14.410 --> 00:08:19.470\nIf I try and ping some public address or\neven just something else in\n\n153\n00:08:19.470 --> 00:08:26.060\nthat 209.251.159 network, so\nmaybe I try and ping the next IP in order.\n\n154\n00:08:26.060 --> 00:08:29.000\nAnd from here, I can just try and\nping through the router.\n\n155\n00:08:29.000 --> 00:08:32.410\nI'm gonna try and\nping to somebody on the other side.\n\n156\n00:08:32.410 --> 00:08:34.970\nThe router was 179,\nI'm gonna ping to 209.251.159.180,\n\n157\n00:08:34.970 --> 00:08:39.210\njust another IP in that same subnet.\n\n158\n00:08:39.210 --> 00:08:42.240\nAnd I can ping it, so\nI'm getting to it through the router.\n\n159\n00:08:42.240 --> 00:08:44.450\nAnd if I jump back to the router,\n\n160\n00:08:44.450 --> 00:08:50.010\nI should be able to do a show ip\nnat translations, and there it is.\n\n161\n00:08:50.010 --> 00:08:56.050\nI can see my laptop, 10.1.230.243,\nand I'm being natted.\n\n162\n00:08:56.050 --> 00:09:03.394\nMy inside local is 10.1.230.243,\nmy inside global is 209.251.159.179.\n\n163\n00:09:03.394 --> 00:09:06.200\nI'm being translated to\nthe IP address of the router.\n\n164\n00:09:07.200 --> 00:09:11.600\nThe host that I'm reaching out to,\nthis 180, well, its 180 on both parts.\n\n165\n00:09:11.600 --> 00:09:14.110\nI don't nat my destination in this case.\n\n166\n00:09:14.110 --> 00:09:16.330\nI'm going from inside to outside.\n\n167\n00:09:16.330 --> 00:09:19.070\nIf the traffic were reversed,\nif it was outside coming inside,\n\n168\n00:09:19.070 --> 00:09:21.830\nthen that's when the destination starts\nto get natted, that's when that changes.\n\n169\n00:09:21.830 --> 00:09:23.983\nThat's why we see all\nfour of these columns,\n\n170\n00:09:23.983 --> 00:09:26.486\nas opposed to the first two\nwhere the real action is.\n\n171\n00:09:26.486 --> 00:09:30.676\nSo that's our most common form of nat\nright there, just host on the inside,\n\n172\n00:09:30.676 --> 00:09:34.060\ngeting natted to whatever\nIP is on the router.\n\n173\n00:09:34.060 --> 00:09:39.320\nA far less common version of that is where\nwe have a pool of addresses available.\n\n174\n00:09:39.320 --> 00:09:43.970\nAnd they're public IPs, and we hand\nthem out as one-to-one mappings, but\n\n175\n00:09:43.970 --> 00:09:44.970\nthey're dynamic.\n\n176\n00:09:44.970 --> 00:09:48.700\nWhen somebody goes out the network,\nthey just grab the first available IP.\n\n177\n00:09:48.700 --> 00:09:51.690\nAnd it's not a terribly common\nway to configure things,\n\n178\n00:09:51.690 --> 00:09:54.040\nbut you certainly can do it.\n\n179\n00:09:54.040 --> 00:09:57.810\nSo, for example,\nif I jump back into my config, and\n\n180\n00:09:57.810 --> 00:10:01.270\nI'm gonna remove the nat\nstatement that we put in.\n\n181\n00:10:01.270 --> 00:10:05.310\nSo this was the, whoops,\n[LAUGH] I'm gonna try and move it.\n\n182\n00:10:05.310 --> 00:10:07.002\nThere, let me just kill the entries.\n\n183\n00:10:07.002 --> 00:10:10.360\nAll right, so I just removed\nwhere I mapped that access list\n\n184\n00:10:10.360 --> 00:10:12.880\nto the interface of GI 0/1.\n\n185\n00:10:12.880 --> 00:10:15.900\nAnd this time I'm gonna change\nto a pool of addresses.\n\n186\n00:10:15.900 --> 00:10:18.360\nSo step one,\nI gotta create a pool of addresses.\n\n187\n00:10:18.360 --> 00:10:24.620\nSo we start that by coming in and\nbasically saying, ip nat pool,\n\n188\n00:10:24.620 --> 00:10:28.490\nand giving it a name,\nI'll just call mine itprotv-lab.\n\n189\n00:10:29.745 --> 00:10:32.908\nSo I'm creating a pool called itprotv-lab,\nand\n\n190\n00:10:32.908 --> 00:10:37.288\nthen I need to specify the addresses\nI want to use as part of that pool.\n\n191\n00:10:37.288 --> 00:10:40.975\nSo I'm going to say 209.251.159.181,\n\n192\n00:10:40.975 --> 00:10:45.057\nall the way through 182,\nI'll just do a really small pool.\n\n193\n00:10:47.187 --> 00:10:49.777\nSo it's just a beginning and\nend addresses.\n\n194\n00:10:49.777 --> 00:10:53.580\nNow if I stop right here, well actually\nI need to specify a netmask so\n\n195\n00:10:53.580 --> 00:10:55.268\nI don't need to stop anyway.\n\n196\n00:10:55.268 --> 00:10:59.174\nBut if I stop right here, that's got\nsome addresses that are available,\n\n197\n00:10:59.174 --> 00:11:01.970\nthe first two hosts that\ngo out will get it.\n\n198\n00:11:01.970 --> 00:11:06.100\nBut when I attach this pool, I can\nactually choose to overload the pool also.\n\n199\n00:11:06.100 --> 00:11:09.590\nAnd it'll hand out the addresses one at\na time until it gets to the last one, and\n\n200\n00:11:09.590 --> 00:11:11.270\nthen it'll overload that last address.\n\n201\n00:11:11.270 --> 00:11:14.000\nSo we can kinda mix and\nmatch between these two technologies.\n\n202\n00:11:14.000 --> 00:11:17.170\nBut in this scenario I don't\nreally want to do that.\n\n203\n00:11:17.170 --> 00:11:19.963\nI've created the pool right there,\nit's available.\n\n204\n00:11:19.963 --> 00:11:24.263\nAnd now I need to tell nat,\ndon't nat to the interfaces IP,\n\n205\n00:11:24.263 --> 00:11:27.532\ninstead nat to an IP\nfrom inside of this pool.\n\n206\n00:11:27.532 --> 00:11:31.695\nNow the command to apply that is not all\nthat much different than the one we used\n\n207\n00:11:31.695 --> 00:11:32.600\nbefore.\n\n208\n00:11:32.600 --> 00:11:35.265\nSo on this one we said,\nip nat inside source list 2,\n\n209\n00:11:35.265 --> 00:11:38.001\nthe internal hosts that\nare listed in access list 2.\n\n210\n00:11:38.001 --> 00:11:39.640\nThat hasn't changed.\n\n211\n00:11:39.640 --> 00:11:42.610\nWhat has changed is\nthe destination part here.\n\n212\n00:11:42.610 --> 00:11:47.700\nOr what our outside,\nour inside global is going to be, sorry.\n\n213\n00:11:47.700 --> 00:11:49.946\nOur inside global is what\nwe're being translated to.\n\n214\n00:11:49.946 --> 00:11:54.980\nAnd here I don't want to point to\nan interface, I want to point to a pool.\n\n215\n00:11:54.980 --> 00:11:58.640\nAnd so\nI'm gonna attach it to pool itprotv-lab.\n\n216\n00:11:58.640 --> 00:12:02.696\nIf I leave it like this, first come first\nserve, people grab IPs as they go out.\n\n217\n00:12:02.696 --> 00:12:05.228\nAnd if the IPs are empty\nthen they're out of luck,\n\n218\n00:12:05.228 --> 00:12:08.558\nthey don't get translated and\ntheir traffic fails, all right.\n\n219\n00:12:08.558 --> 00:12:11.783\nOr I can go one step further and\nadd overload, and\n\n220\n00:12:11.783 --> 00:12:14.575\nit'll overload the last IP in that pool.\n\n221\n00:12:14.575 --> 00:12:17.530\nSo, a little fail safe for\nme there, all right.\n\n222\n00:12:17.530 --> 00:12:21.960\nBut if I just leave it like this,\nnow I'm natting to the pool.\n\n223\n00:12:21.960 --> 00:12:25.710\nAnd if I take a look at\nmy nat translations,\n\n224\n00:12:25.710 --> 00:12:27.850\nI can see I do still have\na couple floating around.\n\n225\n00:12:27.850 --> 00:12:30.400\nI must still be pinging in the background.\n\n226\n00:12:30.400 --> 00:12:37.398\nBut if we look at the ping that I'm doing,\nI'm coming from 10.1.230.243,\n\n227\n00:12:37.398 --> 00:12:42.737\nand I'm now getting natted\nto 209.251.159.181.\n\n228\n00:12:42.737 --> 00:12:45.652\nI was getting natted to 179,\nthat was the IP of the router.\n\n229\n00:12:45.652 --> 00:12:50.667\nNow I'm getting natted to 181,\nwhich is the first IP in the pool.\n\n230\n00:12:50.667 --> 00:12:54.480\nI was the first one out, I just grabbed\nthe first IP, that's now mapped to me.\n\n231\n00:12:54.480 --> 00:12:58.050\nAnd so, no one else can use that\none while I'm holding it active.\n\n232\n00:12:58.050 --> 00:13:01.350\nThey have to move onto the next\none cuz I'm not overloading.\n\n233\n00:13:01.350 --> 00:13:05.020\nThat's not common because most people\naren't sitting on a pool of addresses.\n\n234\n00:13:05.020 --> 00:13:09.290\nAnd the people who are sitting on\na pool don't usually make them dynamic.\n\n235\n00:13:09.290 --> 00:13:11.920\nThey normally do a static\nmapping where they say,\n\n236\n00:13:11.920 --> 00:13:15.230\nthis internal person always\ngoes out with this public IP.\n\n237\n00:13:15.230 --> 00:13:17.130\nThat makes a lot more sense, right?\n\n238\n00:13:17.130 --> 00:13:20.630\nSo, if we want to set that up,\nthat's the easiest form of nat to set up.\n\n239\n00:13:20.630 --> 00:13:24.140\nLet me clear this one out, so\nI'm gonna wipe out this statement here.\n\n240\n00:13:25.720 --> 00:13:29.900\nSo we're just gonna get rid of that,\nand so now I'm not natting at all.\n\n241\n00:13:29.900 --> 00:13:33.780\nIf I do a show ip nat translations,\nthat's empty.\n\n242\n00:13:33.780 --> 00:13:35.933\nAnd actually,\nif go back to my terminal, oh,\n\n243\n00:13:35.933 --> 00:13:39.161\nI guess I'm still making it through\nbecause of the route detection.\n\n244\n00:13:39.161 --> 00:13:41.134\nBut those will actually stop working soon,\n\n245\n00:13:41.134 --> 00:13:43.590\nI won't be able to get\nthrough to that host.\n\n246\n00:13:43.590 --> 00:13:47.440\nSo, now I don't have any translations,\nI'm not natting.\n\n247\n00:13:47.440 --> 00:13:50.120\nJust my internal person is going out and\nthat's the end of it.\n\n248\n00:13:50.120 --> 00:13:55.230\nSo I can institute one-to-one mappings\nif I want, and it's far easier.\n\n249\n00:13:55.230 --> 00:13:56.880\nA one-to-one mapping\nis just a single line.\n\n250\n00:13:56.880 --> 00:14:02.950\nWe say ip nat inside source static.\n\n251\n00:14:02.950 --> 00:14:06.110\nNot a list this time,\nit's a static mapping.\n\n252\n00:14:06.110 --> 00:14:10.999\nAnd then I say who the internal IP is,\nso I'll do my laptop.\n\n253\n00:14:10.999 --> 00:14:13.460\nAnd then I say what I want\nthe public IP to be, right?\n\n254\n00:14:13.460 --> 00:14:18.166\nSo this is my inside local,\nnow I need to provide my outside local.\n\n255\n00:14:18.166 --> 00:14:25.030\nAnd when I provide that,\nI'm gonna say 209.251.159.182, all right.\n\n256\n00:14:25.030 --> 00:14:27.040\nI wanna map it to 182 this time.\n\n257\n00:14:27.040 --> 00:14:29.980\nAnd so I put that in place,\nand that's a static mapping.\n\n258\n00:14:29.980 --> 00:14:33.210\nSo whether I use it or not,\nit's always mapped to me.\n\n259\n00:14:33.210 --> 00:14:39.066\nAnd so if I do a show ip nat translations,\nat a minimum I'm gonna see that mapping.\n\n260\n00:14:39.066 --> 00:14:41.850\nThis guy right here, the bottom one,\nthis is the mapping.\n\n261\n00:14:41.850 --> 00:14:43.780\nThat will always be there.\n\n262\n00:14:43.780 --> 00:14:45.430\nBut the one above it?\n\n263\n00:14:45.430 --> 00:14:47.410\nThat's my active ping.\n\n264\n00:14:47.410 --> 00:14:49.782\nAnd that's only gonna be there when I'm,\nwell, when I'm pinging,\n\n265\n00:14:49.782 --> 00:14:51.520\nright, that's when that's gonna show up.\n\n266\n00:14:51.520 --> 00:14:55.460\nBut I can see that it is working,\nmy internal IP is being mapped to 182.\n\n267\n00:14:55.460 --> 00:15:01.570\nSo those are three forms of nat that\nwe need to be aware of for the exam.\n\n268\n00:15:01.570 --> 00:15:05.040\nAgain, if you want a real in-depth run\non these, jump back to the CCNA show,\n\n269\n00:15:05.040 --> 00:15:06.670\nwe did a great job back there.\n\n270\n00:15:06.670 --> 00:15:11.220\nBut as a refresher, we needed to know\nhow to do the most common, right, which\n\n271\n00:15:11.220 --> 00:15:16.560\nis the overloading an IP, overloading\none of our public IP interfaces.\n\n272\n00:15:16.560 --> 00:15:19.840\nThe other option was the dynamic pool,\nright, which is far less common.\n\n273\n00:15:19.840 --> 00:15:22.620\nAnd then lastly,\nthe static mapping that we just saw.\n\n274\n00:15:22.620 --> 00:15:26.500\nNow everything that we've seen up to this\npoint has been IPv4 and that's what we\n\n275\n00:15:26.500 --> 00:15:31.098\nreally need now, right, because the IPv4\naddress space is only so large.\n\n276\n00:15:31.098 --> 00:15:34.928\nBut there's nat under IPv6 also.\n\n277\n00:15:34.928 --> 00:15:38.309\nAnd that's something we didn't really\ntake a look at back in the CCNA exam, but\n\n278\n00:15:38.309 --> 00:15:40.500\nhere on the CCNP they want\nyou to be familiar with.\n\n279\n00:15:40.500 --> 00:15:45.374\nNow, Cisco doesn't require that you know\nhow to configure NAT for IPv6 because,\n\n280\n00:15:45.374 --> 00:15:49.913\nwell, Cisco's a firm believer that\nyou shouldn't be using NAT with IPv6.\n\n281\n00:15:49.913 --> 00:15:52.382\nThe address space for IPv6 is so large,\n\n282\n00:15:52.382 --> 00:15:56.800\nthe whole point of it was to avoid\nhaving to use NAT at any point.\n\n283\n00:15:56.800 --> 00:16:01.586\nSo do we ever really need\nto translate from a IPv6\n\n284\n00:16:01.586 --> 00:16:05.100\naddress to another IPv6 address?\n\n285\n00:16:05.100 --> 00:16:06.018\nNot really.\n\n286\n00:16:06.018 --> 00:16:09.823\nIn fact, if you dig through\nall of Cisco's documentation,\n\n287\n00:16:09.823 --> 00:16:14.480\nthere's really only one example they\ngive of when you would do this.\n\n288\n00:16:14.480 --> 00:16:19.510\nAnd that's if you have a network\nwhere you have a IPv6 host that has\n\n289\n00:16:19.510 --> 00:16:26.300\na globally unique IPv6 address and\nis dual-homed with two ISPs.\n\n290\n00:16:26.300 --> 00:16:31.050\nYou might want to do NATing that one\nglobal unique IP to another global\n\n291\n00:16:31.050 --> 00:16:35.370\nunique IP so the host can be\navailable by the two different ISPs.\n\n292\n00:16:35.370 --> 00:16:38.850\nBut on the same page where you\nsee Cisco talking about that,\n\n293\n00:16:38.850 --> 00:16:41.860\nthey have a whole presentation\nfrom one of their engineers,\n\n294\n00:16:41.860 --> 00:16:44.940\nhow you still shouldn't do it and\nthere's other ways to handle that traffic.\n\n295\n00:16:44.940 --> 00:16:49.910\nSo really NAT under IPv6 It's possible,\nbut it's not necessary.\n\n296\n00:16:51.020 --> 00:16:54.870\nIf you do decide you want to cross that\nroad, the technology you're looking for\n\n297\n00:16:54.870 --> 00:16:59.820\nis called NPT,\nwhich is Network Prefix Translation.\n\n298\n00:16:59.820 --> 00:17:03.290\nNPT is the equivalent of IPV's net.\n\n299\n00:17:03.290 --> 00:17:06.980\nIt takes one IPV6 network and\nnats it to another one.\n\n300\n00:17:06.980 --> 00:17:08.500\nNow, notice how I said network there.\n\n301\n00:17:08.500 --> 00:17:13.620\nWhen we talk about nat, network address\ntranslation, it's translating per address.\n\n302\n00:17:13.620 --> 00:17:16.270\nBut with IPv6, we don't have pools.\n\n303\n00:17:16.270 --> 00:17:17.580\nWe don't have things like that.\n\n304\n00:17:17.580 --> 00:17:19.610\nI mean, I'm sorry,\nwe don't have static mappings.\n\n305\n00:17:19.610 --> 00:17:22.050\nWe don't do one to ones\nbecause the pools are so big.\n\n306\n00:17:22.050 --> 00:17:24.330\nWe have so many IPs available.\n\n307\n00:17:24.330 --> 00:17:27.340\nSo instead,\nwe do network prefix translation.\n\n308\n00:17:27.340 --> 00:17:29.130\nWe translate the whole network.\n\n309\n00:17:29.130 --> 00:17:31.760\nAnd change one network into another.\n\n310\n00:17:31.760 --> 00:17:34.800\nThe host portion of the address\ncan stay the same, that's fine.\n\n311\n00:17:34.800 --> 00:17:37.380\nIt's the network portion\nthat we're gonna change.\n\n312\n00:17:37.380 --> 00:17:41.490\nNow, most Cisco routers don't support NPT.\n\n313\n00:17:41.490 --> 00:17:43.070\nYou're gonna see that.\n\n314\n00:17:43.070 --> 00:17:47.240\nCisco is a firm believer that\nyou shouldn't be doing NPT.\n\n315\n00:17:47.240 --> 00:17:49.700\nYou shouldn't be doing\nthat with IPV6 at all.\n\n316\n00:17:49.700 --> 00:17:51.730\nAnd so\nit's not supported on most hardware.\n\n317\n00:17:51.730 --> 00:17:52.830\nBut you will find some like,\n\n318\n00:17:52.830 --> 00:17:57.130\nthe iOS that I'm on right now actually\ndoes have some of the features for NPT.\n\n319\n00:17:57.130 --> 00:18:01.040\nSo, for example,\nif I were to jump into my router and\n\n320\n00:18:01.040 --> 00:18:06.140\ndo a little IPV6 unicast routing,\nand jump into an interface and\n\n321\n00:18:06.140 --> 00:18:11.510\ngive it an IPV6 address I'll just\ngive it an internal address.\n\n322\n00:18:11.510 --> 00:18:16.320\nIf I can think of one real quick,\nthere we go.\n\n323\n00:18:16.320 --> 00:18:19.510\nIf you do ipv6 nat question mark.\n\n324\n00:18:19.510 --> 00:18:21.170\nSee how I can come in and define a prefix?\n\n325\n00:18:21.170 --> 00:18:24.690\nAnd it's got configured nat\npt prefix on the interface.\n\n326\n00:18:24.690 --> 00:18:28.440\nAnd this is where I can start\nto define an alternate prefix.\n\n327\n00:18:28.440 --> 00:18:32.150\nSo that when traffic passes out\nthis interface will get translated\n\n328\n00:18:32.150 --> 00:18:34.840\nto this other prefix and,\nand vice versa, right.\n\n329\n00:18:34.840 --> 00:18:36.570\nSo we can actually get that configured.\n\n330\n00:18:36.570 --> 00:18:39.850\nBut most of the new Cisco\nrouters that you touch,\n\n331\n00:18:39.850 --> 00:18:42.990\nall the ones that I've touched\ndon't have that NPT support.\n\n332\n00:18:42.990 --> 00:18:46.490\nAnd, that's because you really shouldn't\nbe using it, it's not really necessary.\n\n333\n00:18:46.490 --> 00:18:48.340\nBut, that's kinda how it looks and\n\n334\n00:18:48.340 --> 00:18:50.200\nyou just assign it right\nthere on the interface.\n\n335\n00:18:50.200 --> 00:18:51.690\nAll right.\n\n336\n00:18:51.690 --> 00:18:55.180\nThere is another type\nof translation though,\n\n337\n00:18:55.180 --> 00:18:59.070\nthat Cisco does say is okay to use.\n\n338\n00:18:59.070 --> 00:19:00.480\nAnd it's called NAT 64.\n\n339\n00:19:00.480 --> 00:19:01.540\nAll right?\n\n340\n00:19:01.540 --> 00:19:06.410\nNAT 64 is\nNetwork Address Translation 6 to 4.\n\n341\n00:19:06.410 --> 00:19:10.830\nIt's translating an IPv6\naddress to an IPv4 address.\n\n342\n00:19:10.830 --> 00:19:12.790\nNow when would I wanna do that?\n\n343\n00:19:12.790 --> 00:19:16.870\nWell, I might have an IPv6 only host.\n\n344\n00:19:16.870 --> 00:19:18.760\nAnd I wanted to browse\nthat to the internet.\n\n345\n00:19:18.760 --> 00:19:20.740\nAnd the internet is still by and\nlarge IPV4.\n\n346\n00:19:20.740 --> 00:19:26.400\nSo I might want to translate from\nIPV6 to IPV4 and vice versa.\n\n347\n00:19:26.400 --> 00:19:30.010\nI might want the IPV4 host who may come to\nmy network to translate over to IPV6 so\n\n348\n00:19:30.010 --> 00:19:31.960\nthey can contact my host on the inside.\n\n349\n00:19:31.960 --> 00:19:34.300\nEspecially if it's a web server or\nsomething like that.\n\n350\n00:19:34.300 --> 00:19:38.230\nSo NAT64 is pretty handy with\nthat It's really designed for\n\n351\n00:19:38.230 --> 00:19:40.920\nDMZ's and data centers.\n\n352\n00:19:40.920 --> 00:19:43.910\nSo most CISCO routers don't actually\nhave support for it either.\n\n353\n00:19:43.910 --> 00:19:47.820\nSo don't be surprised if you jump into\na router and try and configure it.\n\n354\n00:19:47.820 --> 00:19:50.910\nFor example, I'm on a, 2800 here,\n2800's don't support it.\n\n355\n00:19:50.910 --> 00:19:51.900\n2900's dont support it either.\n\n356\n00:19:51.900 --> 00:19:56.200\nIt's really just the the 1000 series and\nthe 4000 series routers.\n\n357\n00:19:56.200 --> 00:19:58.160\nRight?\nThe ISR and ASR routers.\n\n358\n00:19:58.160 --> 00:20:01.770\nThe more expensive ones,\nthey support NAT 64.\n\n359\n00:20:01.770 --> 00:20:04.260\nBut the routers that are on\nthe exam don't support it, and\n\n360\n00:20:04.260 --> 00:20:06.540\nthe router like what I've\ngot here doesn't support it.\n\n361\n00:20:06.540 --> 00:20:08.740\nOn the exam they just want you\nto be able to describe it.\n\n362\n00:20:08.740 --> 00:20:10.320\nWhat does it do?\n\n363\n00:20:10.320 --> 00:20:15.880\nNAT 64, it translates an IPv6 address to\nan IPv4 address and vice versa, all right?\n\n364\n00:20:15.880 --> 00:20:17.230\nThe configuration for it?\n\n365\n00:20:17.230 --> 00:20:18.640\nIt's really pretty straightforward.\n\n366\n00:20:18.640 --> 00:20:19.850\nLet me show you.\n\n367\n00:20:19.850 --> 00:20:24.030\nBasically, just like with MPT,\nyou kinda jump into an interface.\n\n368\n00:20:24.030 --> 00:20:27.720\nAnd on that interface, you just say,\nit's not even a hard one.\n\n369\n00:20:27.720 --> 00:20:31.000\nYou just say nat64 enable, right, and so\n\n370\n00:20:31.000 --> 00:20:34.420\nI would do that on my inside interface and\nmy outside interface.\n\n371\n00:20:34.420 --> 00:20:35.480\nI don't have to tell it inside and\n\n372\n00:20:35.480 --> 00:20:38.700\noutside, because MAT sixty-four\nis two-way, alright.\n\n373\n00:20:38.700 --> 00:20:43.540\nSo, it's gonna automatically translate\nthat outside traffic coming in and so\n\n374\n00:20:43.540 --> 00:20:46.060\nIPV four traffic will be\nrendered on my private number.\n\n375\n00:20:46.060 --> 00:20:48.810\nNow, how does it do that\nwithout any options?\n\n376\n00:20:48.810 --> 00:20:53.980\nWell the Ina and when that 64 was\nratified they set aside a special\n\n377\n00:20:53.980 --> 00:20:58.640\nprefix a range of addresses to be\nused just for net 64, all right.\n\n378\n00:20:58.640 --> 00:21:03.630\nMine doesn't support it, so if I run it I\njust get an error, but that prefix it is\n\n379\n00:21:03.630 --> 00:21:09.940\neasy to spot it is 64 colon FF9B,\ncolon, colon slash 96.\n\n380\n00:21:09.940 --> 00:21:14.110\nAll right.\nIt's gonna take those IPv4 addresses and\n\n381\n00:21:14.110 --> 00:21:17.340\nit's gonna NAT them one\nto one to addresses\n\n382\n00:21:17.340 --> 00:21:20.000\ninside of this prefix right here.\n\n383\n00:21:20.000 --> 00:21:24.010\nSo if you ever see an IPv6\naddress that starts with 64:FF9B,\n\n384\n00:21:24.010 --> 00:21:29.220\nthat's a great indicator that you're\ndealing with A nat 64 address.\n\n385\n00:21:29.220 --> 00:21:31.510\nAnd easy to remember\ncuz it starts with 64.\n\n386\n00:21:31.510 --> 00:21:33.880\nAnd 64 means nat 64, easy to remember.\n\n387\n00:21:34.980 --> 00:21:38.250\nSo, we can keep an eye out for\nthat, that's what it's gonna do.\n\n388\n00:21:38.250 --> 00:21:43.180\nBut from my inside host going out,\nmy IPv6 host going out,\n\n389\n00:21:43.180 --> 00:21:48.350\nwe usually wanna statically map those to\nIPv4 cuz we have a ton of IPv6 addresses.\n\n390\n00:21:48.350 --> 00:21:53.890\nThis whole pool, this /96 that's\nhundreds of thousands of addresses.\n\n391\n00:21:53.890 --> 00:21:56.400\nIt's a ton of addresses.\n\n392\n00:21:56.400 --> 00:22:00.460\nSo you know, that's a big pool,\nI don't have to worry about it.\n\n393\n00:22:00.460 --> 00:22:04.180\nBut the IPV4 network that I'm\ntranslating to is a very small pool.\n\n394\n00:22:04.180 --> 00:22:08.700\nAnd so I can't just set some\narbitrary network aside for that one.\n\n395\n00:22:08.700 --> 00:22:12.970\nSo for our inside host going out,\nwe do need statically nat those.\n\n396\n00:22:12.970 --> 00:22:15.670\nAnd the way that works\nis not on the interface.\n\n397\n00:22:15.670 --> 00:22:17.650\nIt's actually here in the global mode.\n\n398\n00:22:17.650 --> 00:22:23.030\nAnd what you'll say is nat 64, v6 v4.\n\n399\n00:22:23.030 --> 00:22:25.590\nYou're coming from v6 and going to v4.\n\n400\n00:22:26.900 --> 00:22:30.920\nStatic and\nthen you put what the internal address is.\n\n401\n00:22:30.920 --> 00:22:33.310\nSo my internal address\nmight be fd00:10:1:230::11.\n\n402\n00:22:33.310 --> 00:22:33.850\nRight?\n\n403\n00:22:33.850 --> 00:22:40.979\nSo that's my internal host.\n\n404\n00:22:40.979 --> 00:22:45.000\nAnd then I specify what I\nwant it's IPv4 address to be.\n\n405\n00:22:45.000 --> 00:22:49.710\nSo maybe I NAT that to 10.1.230.11.\n\n406\n00:22:49.710 --> 00:22:54.250\nAnd now when my internal host,\nfd00:10:1:230::11, when it goes out,\n\n407\n00:22:54.250 --> 00:22:58.030\nit gets translated as an IPv4 address and\nsent along.\n\n408\n00:22:58.030 --> 00:23:02.210\nAgain, if your router doesn't support it,\nyou just run it, and you get an error.\n\n409\n00:23:02.210 --> 00:23:03.270\nIt's not very exciting.\n\n410\n00:23:03.270 --> 00:23:06.900\nBut on a 1000 or a 4000 series router,\nit'll take that and\n\n411\n00:23:06.900 --> 00:23:08.780\nnow you've got a static mapping.\n\n412\n00:23:08.780 --> 00:23:13.540\nNow, when you reach out,\nyou'll reach out with this IPv4 address.\n\n413\n00:23:13.540 --> 00:23:18.950\nAnd when anybody responds to that\nIPv4 address, they'll get natted\n\n414\n00:23:18.950 --> 00:23:25.070\ninto one of those 64:F9 addresses\nthat I showed you a moment ago.\n\n415\n00:23:25.070 --> 00:23:28.100\nIt'll get natted into those And\ncome back to us.\n\n416\n00:23:28.100 --> 00:23:32.240\nSo those mappings get created and are now\nand functioning and up and running.\n\n417\n00:23:32.240 --> 00:23:33.080\nThat's basically NAT64.\n\n418\n00:23:33.080 --> 00:23:38.280\nSo just like NPT, if you go to Cisco's\nwebsite and you search for this you\n\n419\n00:23:38.280 --> 00:23:41.345\nwill find some information Information on\nit, and along with that information will\n\n420\n00:23:41.345 --> 00:23:46.275\nbe some video from some engineers telling\nyou, you don't even wanna do this one.\n\n421\n00:23:46.275 --> 00:23:49.215\nNat64, and MPT, there's other\nsolutions that are out there,\n\n422\n00:23:49.215 --> 00:23:52.205\nthat can kind of get you to around this,\nright?\n\n423\n00:23:52.205 --> 00:23:54.935\nSix to four tunnels are usually\na better option, and\n\n424\n00:23:54.935 --> 00:23:58.220\nthere's other things that can kinda\nmove your data across those networks.\n\n425\n00:23:58.220 --> 00:24:00.910\nAnd as more and more networks adopt IPv6,\n\n426\n00:24:00.910 --> 00:24:05.830\nthe need to jump back to IPv4 becomes\nsmaller and smaller and smaller.\n\n427\n00:24:05.830 --> 00:24:07.630\nSo these are definitely fringe topics, and\n\n428\n00:24:07.630 --> 00:24:11.120\nthat's why in the CCNA side\nwe never really cover them.\n\n429\n00:24:11.120 --> 00:24:15.220\nAnd even on this exam they don't harp\non you for knowing how to configure it.\n\n430\n00:24:15.220 --> 00:24:17.310\nThey just want you to\nunderstand what they are.\n\n431\n00:24:17.310 --> 00:24:21.130\nRight?\nSo, NPT, Network Prefix Translation.\n\n432\n00:24:21.130 --> 00:24:26.290\nWe convert one IPv6 network into\nanother IPv6 network, right?\n\n433\n00:24:26.290 --> 00:24:28.990\nNetwork to network, that's what NPT is.\n\n434\n00:24:28.990 --> 00:24:35.300\nAnd then NAT 64 we translate IPv6\nhosts Into IPv4 hosts, right?\n\n435\n00:24:35.300 --> 00:24:37.470\nAnd it's a static, one to one mapping.\n\n436\n00:24:37.470 --> 00:24:38.420\nThat's NAT 64.\n\n437\n00:24:38.420 --> 00:24:39.770\nAll right?\nSo\n\n438\n00:24:39.770 --> 00:24:43.070\nthose are two of the technologies that are\navailable, in addition to all the other\n\n439\n00:24:43.070 --> 00:24:47.180\ncrazy IPv6 tunnel technologies that\nare kinda built into Cisco routers.\n\n440\n00:24:47.180 --> 00:24:51.230\nThere's a lot of options there that\nare designed to help with that transition\n\n441\n00:24:51.230 --> 00:24:52.510\nfrom IPv4 over to IPv6.\n\n442\n00:24:54.110 --> 00:24:57.360\nAll right, well, that's about all we've\ngot for network address translation.\n\n443\n00:24:57.360 --> 00:24:59.870\nWe're keeping it short and\nlet me just remind you.\n\n444\n00:24:59.870 --> 00:25:01.570\nIf you're rusty on some of that,\n\n445\n00:25:01.570 --> 00:25:04.320\nif it didn't quite make sense,\ndefinitely jump back to the CCNA show,\n\n446\n00:25:04.320 --> 00:25:08.100\nbecause we spent a lot of time in there\nand made sure to go into it in depth.\n\n447\n00:25:08.100 --> 00:25:09.980\nFor here, it's more of a refresher.\n\n448\n00:25:09.980 --> 00:25:13.330\nFor IPv4, you definitely want to\nknow the configuration syntax.\n\n449\n00:25:13.330 --> 00:25:19.200\nHow to get that configured Because you\ndo use NAT with IPV4 in many scenarios.\n\n450\n00:25:19.200 --> 00:25:22.770\nBut IPV6,\nyou don't use NAT in very many scenarios.\n\n451\n00:25:22.770 --> 00:25:27.330\nSo you just need to know the concepts,\nthe differences between NPT and NAT64.\n\n452\n00:25:27.330 --> 00:25:31.790\nAll right, but otherwise, it's a pretty\ngood spot to wrap this episode up.\n\n453\n00:25:31.790 --> 00:25:34.260\nSo we'll kinda put this one in the can and\ncall it a day.\n\n454\n00:25:34.260 --> 00:25:36.140\nI hope you guys enjoyed it.\n\n455\n00:25:36.140 --> 00:25:39.765\nSigning off for ITProTV, I'm Don Pezet and\nwe'll see you next time.\n\n456\n00:25:39.765 --> 00:25:45.870\n[MUSIC]\n\n",
          "vimeoId": "140174559"
        },
        {
          "description": "A Service Level Agreement (SLA) is essentially an agreement or guarantee that a level of service is being met. Viewers will hear about what SLAs are, how one can set them up for monitoring and some of the weaknesses in Cisco's self-healing network design as well as see demonstrations on how one can use IP SLAs and Tracking Objects to overcome those limitations and ensure one’s network re-routes properly during a network outage and how to use IP SLAs to report on network performance.",
          "length": "1932",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/ccnproute/cisco-ccnproute300101-6-8-ip_slas-090415-1.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/ccnproute/cisco-ccnproute300101-6-8-ip_slas-090415-1-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/ccnproute/cisco-ccnproute300101-6-8-ip_slas-090415-1-sm.jpg",
          "title": "IP SLAs",
          "transcript": "WEBVTT\n\n1\n00:00:00.030 --> 00:00:10.730\n[MUSIC]\n\n2\n00:00:10.730 --> 00:00:13.420\nAll right, good morning,\ngood afternoon, and good evening.\n\n3\n00:00:13.420 --> 00:00:15.670\nWelcome back to another\nepisode of ITProTV.\n\n4\n00:00:15.670 --> 00:00:20.030\nI'm your host, Don Pezet back again\nwith another episode of CCNP Route.\n\n5\n00:00:20.030 --> 00:00:24.700\nAnd in this episode,\nwe're gonna be taking a look at IP SLAs.\n\n6\n00:00:24.700 --> 00:00:26.280\nNow what is an SLA?\n\n7\n00:00:26.280 --> 00:00:29.490\nWell, it's a Service Level Agreement and\nif you've ever purchased or\n\n8\n00:00:29.490 --> 00:00:33.080\nsigned a contract for\nlike fiber optics service or T1 or\n\n9\n00:00:33.080 --> 00:00:36.190\nsomething like that,\nthey normally come along with an SLA.\n\n10\n00:00:36.190 --> 00:00:38.860\nBasically it's like a guaranteed uptime,\nthat says,\n\n11\n00:00:38.860 --> 00:00:41.640\nhey the line is gonna be\nup 99.999% of the time and\n\n12\n00:00:41.640 --> 00:00:46.870\nif it's not up during that time\nthen we'll pay this penalty.\n\n13\n00:00:46.870 --> 00:00:48.170\nRight?\nSo it's basically an agreement,\n\n14\n00:00:48.170 --> 00:00:49.690\na guarantee of service.\n\n15\n00:00:49.690 --> 00:00:53.140\nWell how do you actually know that\nlevel of service is being met?\n\n16\n00:00:53.140 --> 00:00:55.040\nA lot of times you don't.\n\n17\n00:00:55.040 --> 00:00:56.560\nWell, in Cisco routers,\n\n18\n00:00:56.560 --> 00:00:59.850\nyou can configure what are called SLAs,\nservice level agreements.\n\n19\n00:00:59.850 --> 00:01:02.830\nYou can define your own\nSLAs to either monitor and\n\n20\n00:01:02.830 --> 00:01:07.340\nmake sure that your ISP is being honest,\nor you can even use it to take action.\n\n21\n00:01:07.340 --> 00:01:08.960\nAnd that's where it's really useful.\n\n22\n00:01:08.960 --> 00:01:13.900\nKeeping your ISP honest, that's one thing,\nbut actually taking steps\n\n23\n00:01:13.900 --> 00:01:18.170\nto protect your network because of network\nconditions that's something even better.\n\n24\n00:01:18.170 --> 00:01:18.860\nRight?\n\n25\n00:01:18.860 --> 00:01:20.140\nSo the ISP went down.\n\n26\n00:01:20.140 --> 00:01:21.390\nThe connection failed.\n\n27\n00:01:21.390 --> 00:01:22.410\nWhat do we do about it?\n\n28\n00:01:22.410 --> 00:01:23.350\nWe need to have a back up plan.\n\n29\n00:01:23.350 --> 00:01:24.840\nWe need to have something\nelse that we can do.\n\n30\n00:01:24.840 --> 00:01:29.590\nAnd your router's already doing this to a\ncertain extent but it can only go so far.\n\n31\n00:01:29.590 --> 00:01:30.260\nRight?\n\n32\n00:01:30.260 --> 00:01:31.650\nLet me show you a great example.\n\n33\n00:01:31.650 --> 00:01:33.010\nSo here's my topology,\n\n34\n00:01:33.010 --> 00:01:35.460\nthe topology we've been working\nwith all throughout this show.\n\n35\n00:01:35.460 --> 00:01:40.010\nAnd at my headquarters office,\nI've got a connection ISP1 and\n\n36\n00:01:40.010 --> 00:01:42.310\nat my Branch 1,\nI've got a connection to ISP1 also.\n\n37\n00:01:42.310 --> 00:01:45.070\nSo I've got redundant links in and\nout of my environment.\n\n38\n00:01:45.070 --> 00:01:48.960\nNow, at headquarters,\nI've got a static route defined that says,\n\n39\n00:01:48.960 --> 00:01:50.140\nhere's your default route.\n\n40\n00:01:50.140 --> 00:01:54.730\nIf you get traffic for\na network not internal, send it to ISP1.\n\n41\n00:01:54.730 --> 00:01:55.440\nAll right.\n\n42\n00:01:55.440 --> 00:01:58.300\nAnd if this connection were to fail,\n\n43\n00:01:58.300 --> 00:02:01.430\nthen headquarters could go through\nbranch one to get out to the Internet.\n\n44\n00:02:01.430 --> 00:02:03.130\nThat's like the backup route.\n\n45\n00:02:03.130 --> 00:02:07.780\nAnd the Cisco router is gonna handle\nthat for the most part automatically.\n\n46\n00:02:07.780 --> 00:02:12.190\nIf I jump over to my routers,\nI'll take headquarters here.\n\n47\n00:02:12.190 --> 00:02:15.340\nAnd if I take a look at my running config,\n\n48\n00:02:15.340 --> 00:02:17.060\nI can see where I've got\na static route defined.\n\n49\n00:02:17.060 --> 00:02:17.860\nThis guy right here.\n\n50\n00:02:17.860 --> 00:02:21.440\nIP route 0.0.0.0, and\nI'm pointing that out to the ISP.\n\n51\n00:02:21.440 --> 00:02:23.840\nSo I've got this connection\nalready defined,\n\n52\n00:02:23.840 --> 00:02:25.830\nthat's how I'm gonna get out there, right?\n\n53\n00:02:25.830 --> 00:02:30.440\nAnd if I look at my routing table,\nI can see that that static route,\n\n54\n00:02:30.440 --> 00:02:34.450\nright there, has been installed\nas my gateway of last resort.\n\n55\n00:02:34.450 --> 00:02:37.950\nSo, if I wanna send traffic out to the\ninternet, that's the way that I'm going,\n\n56\n00:02:37.950 --> 00:02:40.650\nright via that host, my ISP, okay?\n\n57\n00:02:40.650 --> 00:02:48.220\nAnd it's functional, if I try and\nping to 204.109.63.1 I get there okay?\n\n58\n00:02:48.220 --> 00:02:50.360\nNow what happens if that link fails?\n\n59\n00:02:50.360 --> 00:02:55.270\nWell if I get into that physical\ninterface and shut it down all right?\n\n60\n00:02:55.270 --> 00:02:57.440\nI just lost my connection to the ISP.\n\n61\n00:02:57.440 --> 00:03:01.060\nSo the ISP failed, I can't get to it.\n\n62\n00:03:01.060 --> 00:03:02.740\nBut I still have that static route right?\n\n63\n00:03:02.740 --> 00:03:07.545\nIf I look at my running config\nthat route is still there, right,\n\n64\n00:03:07.545 --> 00:03:09.210\npointing to that IP address.\n\n65\n00:03:09.210 --> 00:03:13.300\nI didn't shut down the IP, I shut down\nthe interface, right, E zero slash two.\n\n66\n00:03:13.300 --> 00:03:17.700\nBut if I do a show IP route, look what\nhappened to my gateway of last resort.\n\n67\n00:03:17.700 --> 00:03:23.330\nThe static route is gone, and it's being\nreplaced by an OSPF route, I'm learning.\n\n68\n00:03:23.330 --> 00:03:28.060\nI'm learning an OSPF route for this\ndefault coming from branch one, all right?\n\n69\n00:03:28.060 --> 00:03:32.310\nThe router was smart enough to say,\nI can't get to 204.109.63.1 anymore,\n\n70\n00:03:32.310 --> 00:03:38.060\nI can't get there, so\nI'm gonna pull that static route out.\n\n71\n00:03:38.060 --> 00:03:41.170\nThe static route that we defined was\nkind of tied to the physical interface.\n\n72\n00:03:41.170 --> 00:03:43.350\nSo your router was smart about that,\nthe router says hey,\n\n73\n00:03:43.350 --> 00:03:46.630\nif the interface goes down don't leave\nthe routes on the rounding table,\n\n74\n00:03:46.630 --> 00:03:48.260\nit doesn't make sense to leave them there.\n\n75\n00:03:48.260 --> 00:03:50.340\nAnd let's find another way\nto get out on the network,\n\n76\n00:03:50.340 --> 00:03:52.750\nand that's exactly what happened here.\n\n77\n00:03:52.750 --> 00:03:56.070\nSo your router is already capable of\nmaking some pretty smart decisions, but\n\n78\n00:03:56.070 --> 00:03:57.660\nthere's limits to it.\n\n79\n00:03:57.660 --> 00:04:00.590\nThe router only sees itself.\n\n80\n00:04:00.590 --> 00:04:03.430\nHere, the failure happened on this router,\nright?\n\n81\n00:04:03.430 --> 00:04:05.830\nSo this router knew the failure occurred.\n\n82\n00:04:05.830 --> 00:04:08.070\nWhat if that wasn't the case, right?\n\n83\n00:04:08.070 --> 00:04:12.855\nSo, if I come in here and turn that\ninterface back on, so I'm just gonna bring\n\n84\n00:04:12.855 --> 00:04:18.910\ne0/2 back up and if I look at my routing\ntable, I can see my default route,\n\n85\n00:04:18.910 --> 00:04:22.960\nthat static route, is back in the routing\nand the network is healthy, right.\n\n86\n00:04:22.960 --> 00:04:25.110\nI can ping out to that other host.\n\n87\n00:04:25.110 --> 00:04:27.120\nAnd I'm there, okay.\n\n88\n00:04:27.120 --> 00:04:31.340\nBut let's say the failure\nhappened at the ISP, okay.\n\n89\n00:04:31.340 --> 00:04:34.930\nSo if I jump over to the ISP, and\n\n90\n00:04:34.930 --> 00:04:38.490\nI jump into whatever interface it\nis that they have connected to me.\n\n91\n00:04:38.490 --> 00:04:40.870\nLet's figure out which one that is.\n\n92\n00:04:40.870 --> 00:04:42.880\nIt is e0/1.\n\n93\n00:04:42.880 --> 00:04:46.780\nSo if I get into that interface and\nshut it down, there we go.\n\n94\n00:04:46.780 --> 00:04:50.440\nSo now the failure's happening at the ISP,\nokay?\n\n95\n00:04:50.440 --> 00:04:52.320\nWhat does that look like to my router?\n\n96\n00:04:52.320 --> 00:04:56.780\nWell if I jump back to my router and\nI do a show IP interface brief\n\n97\n00:04:56.780 --> 00:05:00.110\nhere's my connection to the ISP\nright here and it shows as up up.\n\n98\n00:05:01.490 --> 00:05:04.430\nIf the ISP just went down,\nwhy am I still up?\n\n99\n00:05:04.430 --> 00:05:06.450\nWell the reason is this is\nan Ethernet link, right?\n\n100\n00:05:06.450 --> 00:05:11.040\nAnd with an Ethernet link, it's very\nunlikely that you have a crossover cable\n\n101\n00:05:11.040 --> 00:05:14.220\nrunning right from your router\nall the way to the ISP's router.\n\n102\n00:05:14.220 --> 00:05:15.940\nThat's very unlikely, right?\n\n103\n00:05:15.940 --> 00:05:20.250\nUsually you're gonna have at a minimum\none switch in-between you and the ISP.\n\n104\n00:05:20.250 --> 00:05:23.420\nMore than likely there's several\nswitches in between you and\n\n105\n00:05:23.420 --> 00:05:25.070\nthe ISP, that they control.\n\n106\n00:05:25.070 --> 00:05:27.300\nRight?\nYou don't see them, but they do exist.\n\n107\n00:05:27.300 --> 00:05:29.320\nSo as a result, when the ISP goes down,\n\n108\n00:05:29.320 --> 00:05:34.440\nand my connection to the switch\nis still up, I still show up-up.\n\n109\n00:05:34.440 --> 00:05:36.390\nAnd if I do a show ip-route.\n\n110\n00:05:36.390 --> 00:05:38.740\nMy static route staying\nin the routing table.\n\n111\n00:05:38.740 --> 00:05:41.180\nI'm still trying to go out to that host.\n\n112\n00:05:41.180 --> 00:05:43.500\nThe only problem is I can't get there.\n\n113\n00:05:43.500 --> 00:05:46.470\nSo really it's a bad route at this point.\n\n114\n00:05:46.470 --> 00:05:50.600\nI can't get to that network,\nbut my router doesn't know why.\n\n115\n00:05:50.600 --> 00:05:53.210\nEverything looks find as far\nas my router's concerned.\n\n116\n00:05:53.210 --> 00:05:57.260\nNow if I was running OSPF between me and\nthe neighbor I would know that.\n\n117\n00:05:57.260 --> 00:06:01.960\nBut you don't run IGPs between you and\nan Internet service provider, okay?\n\n118\n00:06:01.960 --> 00:06:04.890\nAnd sometimes the failure\nmight be even further down\n\n119\n00:06:04.890 --> 00:06:07.220\nthe line than just the neighbor router,\nright?\n\n120\n00:06:07.220 --> 00:06:11.140\nFor example, I've had this happen,\nactually not too terribly long ago, where\n\n121\n00:06:11.140 --> 00:06:15.570\nthe ISP is up, you can connect to the ISP,\nyou can connect to servers and routers and\n\n122\n00:06:15.570 --> 00:06:21.050\nstuff at the ISP, but their connection\nto their Internet backbone goes down.\n\n123\n00:06:21.050 --> 00:06:23.890\nSo, they've been split off\nfrom the rest of the world.\n\n124\n00:06:23.890 --> 00:06:25.850\nYou can see the ISP, the link is up.\n\n125\n00:06:25.850 --> 00:06:29.190\nBut you don't wanna send traffic over it,\nyou wanna send traffic to a different ISP,\n\n126\n00:06:29.190 --> 00:06:31.470\nbut your router's not aware of it.\n\n127\n00:06:31.470 --> 00:06:32.050\nOkay.\n\n128\n00:06:32.050 --> 00:06:35.720\nSo what we can do is, in Cisco routers,\nwe have what are called IP SLAs.\n\n129\n00:06:35.720 --> 00:06:40.470\nAnd we can configure an SLA to monitor\nthat link, to say watch the link and\n\n130\n00:06:40.470 --> 00:06:41.820\nlook for certain conditions.\n\n131\n00:06:41.820 --> 00:06:45.060\nRight?\nThe conditions might be excessive delay.\n\n132\n00:06:45.060 --> 00:06:47.370\nThe condition might be\nthat the line has failed.\n\n133\n00:06:47.370 --> 00:06:49.640\nThe condition might be\ncertain jitter on the line.\n\n134\n00:06:49.640 --> 00:06:51.710\nWe can watch for these things.\n\n135\n00:06:51.710 --> 00:06:56.140\nAnd if they exceed a certain threshold\nthat we set, we can take action.\n\n136\n00:06:56.140 --> 00:06:59.810\nAnd that action might be to pull that\nstatic route out of the routing table and\n\n137\n00:06:59.810 --> 00:07:01.250\ngo to a different route.\n\n138\n00:07:01.250 --> 00:07:03.270\nThe action might be to send us an email.\n\n139\n00:07:03.270 --> 00:07:06.090\nYou can do all sorts of crazy stuff\nwith them if you get in there and\n\n140\n00:07:06.090 --> 00:07:07.260\nyou get them configured.\n\n141\n00:07:07.260 --> 00:07:09.630\nSo, there's a lot of power there.\n\n142\n00:07:09.630 --> 00:07:14.240\nBut it's basically telling your router to\nmonitor stuff beyond its immediate vision.\n\n143\n00:07:14.240 --> 00:07:16.270\nAnd so,\nthat's a pretty important thing, and\n\n144\n00:07:16.270 --> 00:07:18.680\nit's all built right into the router and\nit's pretty easy to configure.\n\n145\n00:07:18.680 --> 00:07:20.580\nLet me show you an example.\n\n146\n00:07:20.580 --> 00:07:22.820\nI could have avoided this\nsituation right here,\n\n147\n00:07:22.820 --> 00:07:24.630\nif I was monitoring pings over that link.\n\n148\n00:07:24.630 --> 00:07:28.570\nIf I was just sending a ping over to that\nISP when the failure happened on their\n\n149\n00:07:28.570 --> 00:07:32.670\nend, I would've seen it, and\nI would've been able to take action, okay?\n\n150\n00:07:32.670 --> 00:07:34.840\nSo I'm going to configure a monitor,\nbut before I do that,\n\n151\n00:07:34.840 --> 00:07:36.660\nlet me, let me restore\nthe network back to healthy.\n\n152\n00:07:36.660 --> 00:07:38.210\nI'm going to bring the ISP back up.\n\n153\n00:07:39.660 --> 00:07:41.180\nAnd on headquarters,\n\n154\n00:07:41.180 --> 00:07:44.680\nI should be able to ping across shortly\nas soon as that comes back online.\n\n155\n00:07:44.680 --> 00:07:45.420\nThere we go.\n\n156\n00:07:45.420 --> 00:07:46.490\nAnd now I'm healthy again.\n\n157\n00:07:46.490 --> 00:07:47.130\nOkay?\n\n158\n00:07:47.130 --> 00:07:48.720\nSo now I'm gonna create a monitor.\n\n159\n00:07:48.720 --> 00:07:50.940\nAnd what I'm gonna do is I'm gonna say\nI have this static route that points\n\n160\n00:07:50.940 --> 00:07:51.480\nto a gateway.\n\n161\n00:07:51.480 --> 00:07:53.220\nI wanna make sure I can ping that gateway.\n\n162\n00:07:53.220 --> 00:07:54.829\nCuz if I can't ping the gateway,\n\n163\n00:07:54.829 --> 00:07:58.002\nthen there's a failure somewhere\nin between me and the gateway.\n\n164\n00:07:58.002 --> 00:07:58.870\nAll right?\n\n165\n00:07:58.870 --> 00:08:02.365\nSo we'll jump into our configuration,\nand we'll go in and get this set up.\n\n166\n00:08:02.365 --> 00:08:04.580\nSo we start off by creating the SLA.\n\n167\n00:08:04.580 --> 00:08:07.720\nWe say ip sla followed by a number.\n\n168\n00:08:07.720 --> 00:08:10.470\nAnd you can create a ton\nof different numbers.\n\n169\n00:08:10.470 --> 00:08:13.600\nIt's got one through like 2 billion or\nsomething like that.\n\n170\n00:08:13.600 --> 00:08:16.190\nBut there's a more realistic limit.\n\n171\n00:08:16.190 --> 00:08:18.650\nWe're gonna see later we\nhave to set a schedule, and\n\n172\n00:08:18.650 --> 00:08:20.180\nthere's only 500 schedules available.\n\n173\n00:08:20.180 --> 00:08:22.370\nSo you really can't run\nmore than 500 SLAs.\n\n174\n00:08:22.370 --> 00:08:24.620\nBut it doesn't matter,\nnobody [LAUGH] runs that many.\n\n175\n00:08:24.620 --> 00:08:27.150\nYou really start to bog your\nrouter down doing all that work.\n\n176\n00:08:27.150 --> 00:08:29.940\nSo we only usually create\na couple of these just for\n\n177\n00:08:29.940 --> 00:08:32.000\nwhat we absolutely need to monitor.\n\n178\n00:08:32.000 --> 00:08:33.295\nSo I'm gonna create SLA number 1.\n\n179\n00:08:34.460 --> 00:08:39.050\nOnce we're into the SLA we have to tell\nthe router what kind of SLA it's going\n\n180\n00:08:39.050 --> 00:08:43.070\nto be and if you do a question mark you'll\nsee the SLA's your routers' supports.\n\n181\n00:08:43.070 --> 00:08:44.960\nMost Cisco routers support the same set,\nbut\n\n182\n00:08:44.960 --> 00:08:49.300\ndepending on your iOS version, they\nadd more with each version of the iOS.\n\n183\n00:08:49.300 --> 00:08:52.630\nSo, looking at it here,\nI can monitor a DHCP server, right?\n\n184\n00:08:52.630 --> 00:08:54.990\nCan I get a DHCP address?\n\n185\n00:08:54.990 --> 00:08:58.250\nDNS, can I perform a lookup for\na particular name?\n\n186\n00:08:58.250 --> 00:09:00.520\nWe got FTP and HTTP.\n\n187\n00:09:00.520 --> 00:09:03.350\nThose guys are actually more of\njust what's called a TCP connect,\n\n188\n00:09:03.350 --> 00:09:04.850\nwhich you'll see way down here.\n\n189\n00:09:04.850 --> 00:09:05.720\nAll right?\n\n190\n00:09:05.720 --> 00:09:10.310\nWith FTP or HTTP, we're just saying\ncan I open up a connection on port 80?\n\n191\n00:09:10.310 --> 00:09:11.250\nTCP port 80.\n\n192\n00:09:11.250 --> 00:09:16.114\nOr can I open up a connection on TCP\nport 21 and TCP and UDP port 20?\n\n193\n00:09:16.114 --> 00:09:18.899\nSo it's going to reach out and\ntry and establish those connections.\n\n194\n00:09:20.000 --> 00:09:22.690\nAnd if it can,\nthat means that server is up.\n\n195\n00:09:22.690 --> 00:09:25.440\nThat means that thing is functioning and\nI've got a good link.\n\n196\n00:09:25.440 --> 00:09:27.800\nBut if I can't, then I've got a problem.\n\n197\n00:09:27.800 --> 00:09:28.380\nRight?\n\n198\n00:09:28.380 --> 00:09:29.150\nThink about it that way, right.\n\n199\n00:09:29.150 --> 00:09:30.450\nYou know, your link might be up.\n\n200\n00:09:30.450 --> 00:09:32.070\nYou might be able to ping across the link.\n\n201\n00:09:32.070 --> 00:09:34.840\nBut a firewall might be blocking\nweb traffic on that link.\n\n202\n00:09:34.840 --> 00:09:37.000\nAnd if that's the case I might\nnot want to use the link.\n\n203\n00:09:37.000 --> 00:09:40.170\nSo I might want to pull it out because\nI couldn't connect on TCP port 80.\n\n204\n00:09:40.170 --> 00:09:44.490\nSo those are some of different things that\nyou can define to monitor with an SLA.\n\n205\n00:09:44.490 --> 00:09:46.100\nNow for me, I just want to do pings.\n\n206\n00:09:46.100 --> 00:09:49.420\nAnd that's one of the easiest ones,\nthis guy right here, icmp-echo.\n\n207\n00:09:49.420 --> 00:09:52.089\nSo I'm gonna create an icmp-echo SLA, and\n\n208\n00:09:52.089 --> 00:09:55.059\nnow we tell it who we're gonna monitor,\nright?\n\n209\n00:09:55.059 --> 00:09:58.507\nAnd I want to monitor 209.104.\n\n210\n00:09:58.507 --> 00:10:03.100\nOh, wait, 204.109, there we go, .63.1.\n\n211\n00:10:03.100 --> 00:10:05.830\nIf I monitor the wrong IP,\nthis is not gonna work out well.\n\n212\n00:10:05.830 --> 00:10:09.630\nSo [LAUGH] I need to monitor\nthat particular IP address.\n\n213\n00:10:09.630 --> 00:10:12.540\nAnd then here's where things\nget a little bit tricky.\n\n214\n00:10:12.540 --> 00:10:14.220\nI don't want to just monitor the IP.\n\n215\n00:10:14.220 --> 00:10:18.280\nRight, I want to monitor\nthe interface that I am going out.\n\n216\n00:10:18.280 --> 00:10:21.590\nI'm saying I should be able to get\n\n217\n00:10:21.590 --> 00:10:24.770\nto 204.109.63.1 by going\nacross this link right here.\n\n218\n00:10:24.770 --> 00:10:28.543\nBut if this link fails, and\nOSPF gives me another route and\n\n219\n00:10:28.543 --> 00:10:31.200\nI go around this way to get to that host.\n\n220\n00:10:31.200 --> 00:10:35.310\nI don't want that to be a good route,\nI don't want to treat it as up\n\n221\n00:10:35.310 --> 00:10:37.630\nbecause that just means I found\nanother way to get there.\n\n222\n00:10:37.630 --> 00:10:40.610\nI want it to be over this\nlink specifically, so\n\n223\n00:10:40.610 --> 00:10:45.780\nI'm gonna add to that line where\nI'm saying icmp-echo 204.109.63.1,\n\n224\n00:10:45.780 --> 00:10:52.600\nI'm just gonna add to it and\nsay source-interface e0/2.\n\n225\n00:10:52.600 --> 00:10:55.420\nI'm gonna tie it to that interface.\n\n226\n00:10:55.420 --> 00:10:57.590\nThat's the one that I'm\ntrying to connect with.\n\n227\n00:10:59.780 --> 00:11:02.150\nThen I can designate a frequency.\n\n228\n00:11:02.150 --> 00:11:04.640\nI wanna test this\nfrequency every 10 seconds.\n\n229\n00:11:04.640 --> 00:11:06.520\nSo every 10 seconds,\nI'm gonna send a ping.\n\n230\n00:11:06.520 --> 00:11:10.330\nYou could do every 1 second, you could do\nevery 120 seconds, whatever you wanted.\n\n231\n00:11:10.330 --> 00:11:14.590\nJust remember, the longer the interval,\nthe longer it takes to detect failure, and\n\n232\n00:11:14.590 --> 00:11:18.780\nthe shorter the interval, the more traffic\nyou generate with your monitor, right?\n\n233\n00:11:18.780 --> 00:11:19.970\nSo we don't want to go too crazy.\n\n234\n00:11:19.970 --> 00:11:22.370\nA ping every 10 seconds is negligible,\nright?\n\n235\n00:11:22.370 --> 00:11:24.160\nNobody will even notice\nthat on the network, and so\n\n236\n00:11:24.160 --> 00:11:25.460\nthat's a pretty reliable one.\n\n237\n00:11:25.460 --> 00:11:30.360\nIf a network fails, worst case scenario,\nit'll take me 10 seconds to find that.\n\n238\n00:11:30.360 --> 00:11:31.060\nAll right?\n\n239\n00:11:31.060 --> 00:11:32.630\nSo, that's my monitor, right?\n\n240\n00:11:32.630 --> 00:11:35.060\nI've just created my first SLA.\n\n241\n00:11:35.060 --> 00:11:36.020\nAnd the SLA works.\n\n242\n00:11:36.020 --> 00:11:36.940\nIt's created.\n\n243\n00:11:36.940 --> 00:11:38.960\nBut it's not actually\ndoing anything right now.\n\n244\n00:11:38.960 --> 00:11:42.090\nThe SLAs don't actually work\nuntil you give them a schedule.\n\n245\n00:11:42.090 --> 00:11:43.530\nYou have to tell them when to run.\n\n246\n00:11:43.530 --> 00:11:47.190\nI can tell it to start tonight at\nmidnight and run for six hours.\n\n247\n00:11:47.190 --> 00:11:49.080\nRight?\nMaybe I'm just trying to gather some data\n\n248\n00:11:49.080 --> 00:11:51.420\nto verify the ISP is telling me the truth.\n\n249\n00:11:51.420 --> 00:11:53.930\nRight?\nSo I want to monitor for a single window.\n\n250\n00:11:53.930 --> 00:11:58.380\nOr if I'm going to take action on this,\nI probably want it to run all the time.\n\n251\n00:11:58.380 --> 00:12:02.850\nSo I'm going to create a schedule that\nsays start this SLA right now and\n\n252\n00:12:02.850 --> 00:12:04.270\njust keep running it forever, right?\n\n253\n00:12:04.270 --> 00:12:06.220\nAnd the way we set that\nschedule's like this.\n\n254\n00:12:06.220 --> 00:12:08.500\nWe say ip SLA\n\n255\n00:12:09.520 --> 00:12:14.080\nschedule followed by the number of\nthe SLA that we're about to schedule.\n\n256\n00:12:14.080 --> 00:12:17.250\nRight, so I created SLA 1 so\nI need to create schedule 1.\n\n257\n00:12:17.250 --> 00:12:17.930\nRight.\nThis is going\n\n258\n00:12:17.930 --> 00:12:21.400\nto be tying those two together,\nties the SLA to the schedule.\n\n259\n00:12:21.400 --> 00:12:22.570\nAnd from here,\n\n260\n00:12:22.570 --> 00:12:27.140\nI can then specify the lifetime that\nthis thing is going to run for.\n\n261\n00:12:27.140 --> 00:12:29.090\nOkay.\nDo I want it to run for six hours,\n\n262\n00:12:29.090 --> 00:12:31.390\ndo I want it to run for\nfive minutes, I can specify.\n\n263\n00:12:31.390 --> 00:12:33.650\nIt's done in seconds, which is kind\nof annoying, but, but you know,\n\n264\n00:12:33.650 --> 00:12:35.060\nthat's how you put it in.\n\n265\n00:12:35.060 --> 00:12:36.520\nFor me I want it to run forever.\n\n266\n00:12:36.520 --> 00:12:38.530\nI'm just gonna say forever.\n\n267\n00:12:38.530 --> 00:12:39.030\nAll right?\n\n268\n00:12:39.030 --> 00:12:42.460\nSo once this thing starts just keep\nrunning it and don't bother stopping it.\n\n269\n00:12:42.460 --> 00:12:45.270\nAnd after that we can set the start time.\n\n270\n00:12:45.270 --> 00:12:47.930\nNow if I'm running it forever,\nI set a start time and that's it.\n\n271\n00:12:47.930 --> 00:12:51.530\nBut if I'm running it for an interval,\nif I give it a lifetime of four hours,\n\n272\n00:12:51.530 --> 00:12:56.870\nI might also want to specify recurring,\nso it can run at some kind of interval.\n\n273\n00:12:56.870 --> 00:13:00.590\nMaybe my network's been getting\nreally busy between 12 o'clock and\n\n274\n00:13:00.590 --> 00:13:02.170\n1 o'clock each day.\n\n275\n00:13:02.170 --> 00:13:04.840\nSo I can set it with a live\ntime of one hour and\n\n276\n00:13:04.840 --> 00:13:08.860\nset it to be recurring with\na start time of 12 o'clock, and\n\n277\n00:13:08.860 --> 00:13:11.330\nthen every day at 12 o'clock\nit'll start and run for one hour.\n\n278\n00:13:11.330 --> 00:13:13.080\nYou got a lot of control over this.\n\n279\n00:13:13.080 --> 00:13:16.520\nBut what I'm gonna do is\nI'm gonna say start-time.\n\n280\n00:13:16.520 --> 00:13:19.930\nAnd instead of a particular\ntime I'm just gonna say now.\n\n281\n00:13:19.930 --> 00:13:22.430\nI want to start it right now, okay?\n\n282\n00:13:22.430 --> 00:13:24.350\nThat's gonna turn on the SLA.\n\n283\n00:13:24.350 --> 00:13:30.010\nAnd now my router is sending\na ping out E0/2 to that server.\n\n284\n00:13:30.010 --> 00:13:31.160\nEvery 10 seconds, all right?\n\n285\n00:13:31.160 --> 00:13:33.550\nSo every 10 seconds it's doing that.\n\n286\n00:13:33.550 --> 00:13:36.370\nNow it's running, it's doing its thing.\n\n287\n00:13:36.370 --> 00:13:41.250\nBut I'm not taking any action,\nI'm not reacting based on what it did.\n\n288\n00:13:41.250 --> 00:13:44.620\nIf I just wanted to gather information\nI could stop right here, right?\n\n289\n00:13:44.620 --> 00:13:47.377\nI have achieved my goal, I can do a show\n\n290\n00:13:49.176 --> 00:13:54.157\nshow ip sla statistics 1.\n\n291\n00:13:54.157 --> 00:13:56.680\nIt's kind of a long command there, right?\n\n292\n00:13:56.680 --> 00:13:59.480\nShow ip sla,\nthat'll show me the SLAs that I have.\n\n293\n00:13:59.480 --> 00:14:03.410\nAnd then the statistics, I wanna see the\nstatistics that are about this, you know,\n\n294\n00:14:03.410 --> 00:14:04.590\nits performance.\n\n295\n00:14:04.590 --> 00:14:08.250\nAnd then the number of the SLA and\nwhen I run that,\n\n296\n00:14:08.250 --> 00:14:12.430\nI can see it's already run five times and\nthey were five successes.\n\n297\n00:14:12.430 --> 00:14:15.310\nI got 0 failures, it's up, and it's going.\n\n298\n00:14:15.310 --> 00:14:17.760\nSo the SLA is working right now.\n\n299\n00:14:17.760 --> 00:14:22.050\nBut if the link fails, I haven't\ntold the SLA to do anything, right?\n\n300\n00:14:22.050 --> 00:14:23.030\nIt just monitors.\n\n301\n00:14:23.030 --> 00:14:24.470\nThat's what SLAs do by default.\n\n302\n00:14:24.470 --> 00:14:26.600\nIs they just monitor.\n\n303\n00:14:26.600 --> 00:14:29.340\nIf I want to actually take action on this,\n\n304\n00:14:29.340 --> 00:14:33.490\nthen what I need to do is I\nneed to set up a track object.\n\n305\n00:14:33.490 --> 00:14:36.040\nTrack objects are how we\nactually take action.\n\n306\n00:14:36.040 --> 00:14:36.570\nOkay.\n\n307\n00:14:36.570 --> 00:14:37.610\nSo, I'm gonna create a track.\n\n308\n00:14:37.610 --> 00:14:41.340\nI'm gonna say track 1,\nright in track 7 number I use\n\n309\n00:14:41.340 --> 00:14:45.035\nthat 500 limitation coming back again so\nI'm gonna say track 1.\n\n310\n00:14:46.090 --> 00:14:53.040\nAnd I'm going to define that it's tied\nto that sla, so track 1 ip sla 1.\n\n311\n00:14:53.040 --> 00:14:54.670\nNow here my track number,\n\n312\n00:14:54.670 --> 00:14:58.240\nmy sla number match,\nthat's just because it's how I created it.\n\n313\n00:14:58.240 --> 00:15:02.255\nThis could be track 5 tied to sla 1, okay.\n\n314\n00:15:02.255 --> 00:15:04.565\nSo the track has its\nown independent number.\n\n315\n00:15:04.565 --> 00:15:06.415\nThe sla, I have to refer back to.\n\n316\n00:15:06.415 --> 00:15:13.925\nSo track 1 ip sla 1, and then I need\nto tell it what kind it is, right.\n\n317\n00:15:13.925 --> 00:15:16.990\nI could just press Enter, and it's gonna\ncreate a standard tracking object.\n\n318\n00:15:16.990 --> 00:15:19.540\nBut mine is a reachability, okay.\n\n319\n00:15:19.540 --> 00:15:22.460\nReachability means,\nI don't need to establish a session,\n\n320\n00:15:22.460 --> 00:15:24.550\nI just need to be able to send a ping and\nget a response back.\n\n321\n00:15:24.550 --> 00:15:27.280\nSo I'm either gonna have a yes value or\na no value.\n\n322\n00:15:27.280 --> 00:15:27.900\nOkay.\n\n323\n00:15:27.900 --> 00:15:30.620\nThere's other ones that\nwill return information.\n\n324\n00:15:30.620 --> 00:15:34.650\nIf I'm tracking latency, I don't\nget a yes or no for latency, right?\n\n325\n00:15:34.650 --> 00:15:40.170\nI get a number, I get 1,000 milliseconds,\nor 2 milliseconds, or whatever, right?\n\n326\n00:15:40.170 --> 00:15:43.520\nAnd that's what a normal track object\nexpects if I just press enter,\n\n327\n00:15:43.520 --> 00:15:45.630\nit's expecting just to get a number back.\n\n328\n00:15:45.630 --> 00:15:48.688\nBut if I'm just getting yes and no,\nthat's basically a reachability check so\n\n329\n00:15:48.688 --> 00:15:50.791\nI'm gonna add that right here and\nsay reachability.\n\n330\n00:15:50.791 --> 00:15:52.000\nEither I can get there or I can't.\n\n331\n00:15:52.000 --> 00:15:53.691\nThere is no in between.\n\n332\n00:15:53.691 --> 00:15:55.342\nThe third one is state.\n\n333\n00:15:55.342 --> 00:15:58.702\nWhen you're testing something like\nconnecting to a web server on port 80,\n\n334\n00:15:58.702 --> 00:16:01.970\nI'm trying to build up a state, so\nI should get a code back from the server.\n\n335\n00:16:01.970 --> 00:16:03.970\nSo those are kinda the three\ndifferent ones that we see.\n\n336\n00:16:05.460 --> 00:16:08.849\nSo I'm gonna define that, and\nnow I've got a track object.\n\n337\n00:16:09.940 --> 00:16:11.510\nThe track object,\n\n338\n00:16:11.510 --> 00:16:16.780\nI can use in several different places in\nmy iOS configuration and take action.\n\n339\n00:16:16.780 --> 00:16:19.560\nAnd the best example is\nwith a static route.\n\n340\n00:16:19.560 --> 00:16:24.930\nIf I go into my config, and I'm gonna\nremove that static route that I've got.\n\n341\n00:16:24.930 --> 00:16:30.611\nSo here's the static route that I had to,\nlet's see, 204.109.63.1.\n\n342\n00:16:30.611 --> 00:16:32.110\nI'm gonna pull that static route out.\n\n343\n00:16:33.670 --> 00:16:38.550\nAnd I'm gonna put it back in but\nthis time at\n\n344\n00:16:38.550 --> 00:16:43.762\nthe end of the route\nI'm gonna add track 1.\n\n345\n00:16:43.762 --> 00:16:47.580\nThat's gonna tie my tracking\nobject to this route.\n\n346\n00:16:47.580 --> 00:16:53.830\nSo now if ip sla 1 fails\nthen track 1 fails.\n\n347\n00:16:53.830 --> 00:16:59.460\nAnd this route is tied to track 1, this\nroute will come out of the routing table.\n\n348\n00:16:59.460 --> 00:17:02.350\nI've tied them together to\nget that unified monitoring.\n\n349\n00:17:03.500 --> 00:17:09.005\nAnd so I can kind of verify that,\nI can do a show track 1.\n\n350\n00:17:10.270 --> 00:17:11.043\nThere.\n\n351\n00:17:11.043 --> 00:17:11.792\nAnd here I can see it.\n\n352\n00:17:11.792 --> 00:17:14.170\nSo reachability,\nreachability is currently up.\n\n353\n00:17:14.170 --> 00:17:17.290\nThere's only been one change,\nwhen I turned it on it came up, and\n\n354\n00:17:17.290 --> 00:17:22.050\nit's been running for a minute and\nfive seconds, and it's up, and it's happy.\n\n355\n00:17:22.050 --> 00:17:25.590\nAnd it's being tracked\nby STATIC-IP-ROUTING.\n\n356\n00:17:25.590 --> 00:17:28.280\nIf I used it other places,\nlike in route maps and\n\n357\n00:17:28.280 --> 00:17:31.440\nthings then they would show up here\ntoo as being used in other places.\n\n358\n00:17:33.120 --> 00:17:37.250\nSo I've got this set up,\nlet's see if it works.\n\n359\n00:17:37.250 --> 00:17:40.520\nRemember that earlier when I shut\ndown the interface on the ISP,\n\n360\n00:17:40.520 --> 00:17:44.250\nmy router didn't know about it, and\nso it left its default route in.\n\n361\n00:17:44.250 --> 00:17:47.420\nSo if I do a show ip route,\nright now my default route,\n\n362\n00:17:47.420 --> 00:17:50.040\nthis gateway of last resort\nis pointing to isp 1.\n\n363\n00:17:50.040 --> 00:17:51.840\nAnd if I shut down isp 1, it stays.\n\n364\n00:17:53.050 --> 00:17:54.250\nBut let's see what happens now.\n\n365\n00:17:54.250 --> 00:17:58.530\nIf I jump over to ISP1 and\nI shut down that interface.\n\n366\n00:17:58.530 --> 00:17:59.660\nIt's a failure at ISP1.\n\n367\n00:17:59.660 --> 00:18:03.600\nOn my headquarters router,\n\n368\n00:18:03.600 --> 00:18:07.930\nif I do a show ip interface brief,\nall my interfaces are happy.\n\n369\n00:18:07.930 --> 00:18:10.410\nMy connection with the ISP\nright here is up, up.\n\n370\n00:18:10.410 --> 00:18:11.120\nThings are looking good.\n\n371\n00:18:12.300 --> 00:18:15.000\nBut that ping is running\nevery ten seconds, and so\n\n372\n00:18:15.000 --> 00:18:18.420\nwithin ten seconds,\nI'll get this guy right here.\n\n373\n00:18:18.420 --> 00:18:23.120\nIp sla just had a reachability\ngo from up to down.\n\n374\n00:18:23.120 --> 00:18:26.890\nAnd it's the tracking state\nthat's being reflected here.\n\n375\n00:18:26.890 --> 00:18:30.250\nSo the sla was just monitoring but\nthe tracking state.\n\n376\n00:18:30.250 --> 00:18:32.977\nSee how it's TRACKING-5-STATE: 1.\n\n377\n00:18:32.977 --> 00:18:36.326\nTrack object 1 is what just\nreported this outage to me.\n\n378\n00:18:36.326 --> 00:18:38.858\nAnd because the track object\nis tied to the route,\n\n379\n00:18:38.858 --> 00:18:41.460\nthe route should have come\nout of my routing table.\n\n380\n00:18:42.600 --> 00:18:43.530\nIf I look,\n\n381\n00:18:43.530 --> 00:18:48.770\nsure enough I've gone back to that OSPF\nroute and now I know to route around it.\n\n382\n00:18:48.770 --> 00:18:53.510\nSo here the sla allowed me to monitor\nan external host and to take action on it.\n\n383\n00:18:53.510 --> 00:18:55.580\nTo be able to route around it.\n\n384\n00:18:55.580 --> 00:18:57.441\nSo that's a really cool way\nthat we can use these slas.\n\n385\n00:18:57.441 --> 00:18:58.730\nThey're very effective.\n\n386\n00:18:58.730 --> 00:19:00.680\nGreat way to monitor your system and\nsee things.\n\n387\n00:19:00.680 --> 00:19:02.500\nNow, I did an ICMP echo.\n\n388\n00:19:02.500 --> 00:19:04.650\nAnd, in reality,\nthat's the one I use the most.\n\n389\n00:19:04.650 --> 00:19:05.960\nI use that one all the time for\n\n390\n00:19:05.960 --> 00:19:09.170\njust making sure I've got\nreachability across links.\n\n391\n00:19:09.170 --> 00:19:11.090\nBut it's not the only\none that's out there.\n\n392\n00:19:11.090 --> 00:19:12.320\nSo there are others.\n\n393\n00:19:12.320 --> 00:19:15.290\nI wanna point out one\nspecifically as a little special.\n\n394\n00:19:15.290 --> 00:19:19.260\nMost of them you just create the sla, and\nthen you set things like your frequency\n\n395\n00:19:19.260 --> 00:19:22.630\nand so on, but some of them have a special\ncriteria that we need to remember and so\n\n396\n00:19:22.630 --> 00:19:23.730\nI wanna show you that.\n\n397\n00:19:23.730 --> 00:19:25.380\nA great example is jitter.\n\n398\n00:19:26.490 --> 00:19:30.690\nJitter is what happens when you've got\ntraffic passing over your network and\n\n399\n00:19:30.690 --> 00:19:32.680\nit crosses links of different bandwidth.\n\n400\n00:19:32.680 --> 00:19:34.669\nSo like, if I go back to my topology,\n\n401\n00:19:34.669 --> 00:19:37.639\nlet's say that branch two\nis trying to contact ISP1.\n\n402\n00:19:37.639 --> 00:19:41.076\nAnd maybe this link\nhere is a gigabit link.\n\n403\n00:19:41.076 --> 00:19:43.041\nAnd then this link here\nis 100 megabit link, and\n\n404\n00:19:43.041 --> 00:19:44.600\nthen this link is another gigabit link.\n\n405\n00:19:45.640 --> 00:19:49.890\nBy having those bandwidths change like\nthat in my path, it creates jitter.\n\n406\n00:19:49.890 --> 00:19:53.212\nIt creates this weird little\naudio flaw in voice over ip.\n\n407\n00:19:53.212 --> 00:19:55.230\nYou can actually hear it,\nand it's kind of annoying.\n\n408\n00:19:55.230 --> 00:19:58.480\nSo that's a problem, and it's\nsomething that we need to be aware of.\n\n409\n00:19:58.480 --> 00:20:02.490\nAnd if jitter exceeds a certain level on\nthe line, we might wanna pull a route and\n\n410\n00:20:02.490 --> 00:20:05.670\nmove to a different route,\nif you have enough routes.\n\n411\n00:20:05.670 --> 00:20:06.852\nOr you might just wanna monitor it.\n\n412\n00:20:06.852 --> 00:20:11.180\nI wanna monitor the jitter on the line so\nthat I can see it, so\n\n413\n00:20:11.180 --> 00:20:12.260\njust a way that I can check out.\n\n414\n00:20:12.260 --> 00:20:14.000\nI don't necessarily\nwanna take action on it.\n\n415\n00:20:14.000 --> 00:20:15.510\nI just wanna monitor it.\n\n416\n00:20:15.510 --> 00:20:16.920\nSo we can create an sla for that.\n\n417\n00:20:16.920 --> 00:20:20.390\nThe problem with jitter is\nthat jitter happens two ways.\n\n418\n00:20:20.390 --> 00:20:24.000\nAnd so I don't just need to check\njitter from me to the other end.\n\n419\n00:20:24.000 --> 00:20:27.740\nI need to check jitter from\nthe other end back to me.\n\n420\n00:20:27.740 --> 00:20:32.270\nAnd when we configure an sla,\nthe sla is typically done on one router.\n\n421\n00:20:32.270 --> 00:20:34.780\nWhen we did that sla here at\nthe beginning of the show,\n\n422\n00:20:34.780 --> 00:20:36.615\nI just configured that on headquarters.\n\n423\n00:20:36.615 --> 00:20:38.160\nISP1 doesn't even know I'm doing that.\n\n424\n00:20:38.160 --> 00:20:39.500\nThey just see a ping every ten seconds.\n\n425\n00:20:39.500 --> 00:20:40.050\nThey don't know why.\n\n426\n00:20:41.350 --> 00:20:46.460\nBut with jitter, I need the other side\nto be running the mirror of the test.\n\n427\n00:20:46.460 --> 00:20:48.350\nThe flip side of the test back to me.\n\n428\n00:20:48.350 --> 00:20:52.210\nSo the other side has to participate,\nand when you have something like that,\n\n429\n00:20:52.210 --> 00:20:56.710\nyou've got to configure what's\ncalled an ip sla responder.\n\n430\n00:20:56.710 --> 00:20:59.480\nThe responder is just basically\nmaking that router what it'll\n\n431\n00:20:59.480 --> 00:21:01.970\nhandle the other side of that connection.\n\n432\n00:21:01.970 --> 00:21:05.900\nSo if we wanna see an example of that,\nit's not terribly difficult to set up.\n\n433\n00:21:05.900 --> 00:21:10.710\nIf I want to like jump over to\nbranch 2 and configure an sla.\n\n434\n00:21:10.710 --> 00:21:14.880\nSo I can say ip sla 1 or 2 or 5,\n100 whatever it is I wanna do.\n\n435\n00:21:14.880 --> 00:21:18.670\nSo I can create the sla, and then I need\nto tell it what I'm gonna be monitoring.\n\n436\n00:21:18.670 --> 00:21:21.404\nWell, I need to get into configuration\nfirst, that's gonna help a little bit.\n\n437\n00:21:21.404 --> 00:21:22.013\nThere we go.\n\n438\n00:21:22.013 --> 00:21:24.690\nAnd then I need to tell it which\nkind of sla I'm gonna create.\n\n439\n00:21:24.690 --> 00:21:26.680\nAnd I'm gonna create a UDP jitter 1.\n\n440\n00:21:26.680 --> 00:21:31.730\nSo I'll just come in here and\nsay udp-jitter,\n\n441\n00:21:31.730 --> 00:21:34.190\nand I'll tell it the host\nthat I'm trying to monitor.\n\n442\n00:21:34.190 --> 00:21:36.100\nSo I'm just gonna point to that ISP.\n\n443\n00:21:36.100 --> 00:21:38.540\nIt might not be your ISP.\n\n444\n00:21:38.540 --> 00:21:40.550\nThis might be a branch office\nthat has a phone system and\n\n445\n00:21:40.550 --> 00:21:42.430\nyou wanna basically reach out to them.\n\n446\n00:21:42.430 --> 00:21:44.050\nIt's whoever you're gonna be monitoring.\n\n447\n00:21:44.050 --> 00:21:46.990\nAnd then from here,\nI need to say a few more things.\n\n448\n00:21:46.990 --> 00:21:49.690\nWith jitter,\nwe need to give it a port number to use.\n\n449\n00:21:49.690 --> 00:21:51.870\nSo I'm just gonna pick one\nof the unassigned port.\n\n450\n00:21:51.870 --> 00:21:56.517\nSo I'll go with 50,000, and then\nthe number of packets that I wanna send.\n\n451\n00:21:56.517 --> 00:21:59.343\nYou can't get a good measure\non jitter with one packet,\n\n452\n00:21:59.343 --> 00:22:02.363\nyou need to send a couple of them and\nso I'm gonna send 20.\n\n453\n00:22:02.363 --> 00:22:05.818\nThis will help me to check and see if\nthings are getting sent out of order and\n\n454\n00:22:05.818 --> 00:22:08.731\nother delays, so we'll get\na chance to kinda see all of that.\n\n455\n00:22:08.731 --> 00:22:11.695\nThen I can tell it the size\nof those packets, so\n\n456\n00:22:11.695 --> 00:22:15.800\nI'm gonna say request-data-size and\nI'll do 160 bytes.\n\n457\n00:22:15.800 --> 00:22:19.196\nSo a little bit of payload inside of\nthere and it creates fake payload.\n\n458\n00:22:19.196 --> 00:22:21.970\nIt just repeats the alphabet over and\nover again to fill that up.\n\n459\n00:22:23.570 --> 00:22:26.830\nAnd then if we're doing\nquality of service.\n\n460\n00:22:26.830 --> 00:22:31.270\nWe might be using type of service, or tos,\nto assign tos values to our packets, so\n\n461\n00:22:31.270 --> 00:22:34.200\nthat we can prioritize voice\ntraffic over other traffic.\n\n462\n00:22:34.200 --> 00:22:39.150\nWell, I want my monitor here, my sla, to\nbe treated the same as that voice traffic.\n\n463\n00:22:39.150 --> 00:22:43.640\nSo I can assign the same tos value so\nthat it's treated the same way.\n\n464\n00:22:43.640 --> 00:22:45.320\nI'm gonna do that right\nhere in the sla also.\n\n465\n00:22:45.320 --> 00:22:50.000\nAnd then I'll set that frequency of 10,\nis what I'm gonna do.\n\n466\n00:22:50.000 --> 00:22:53.190\nAnd it looks like my frequency\nhere is not high enough.\n\n467\n00:22:53.190 --> 00:22:56.000\nSo it's telling me my frequency of\n10,000 is a little bit too low, and\n\n468\n00:22:56.000 --> 00:23:00.580\nit's gonna give me skipped operations\nbecause my control message timeout is\n\n469\n00:23:00.580 --> 00:23:01.310\nhigher than that.\n\n470\n00:23:01.310 --> 00:23:03.780\nSo I need to bump it up to\nsomething a little bit bigger.\n\n471\n00:23:03.780 --> 00:23:05.760\nWe'll jump up to 20.\n\n472\n00:23:05.760 --> 00:23:06.420\nThere we go.\n\n473\n00:23:06.420 --> 00:23:09.410\nSo actually, you know what for something\nlike voice, we can even go every 30.\n\n474\n00:23:09.410 --> 00:23:11.140\nWhat we do every 30 seconds.\n\n475\n00:23:11.140 --> 00:23:12.740\nEvery 30 seconds I'm gonna\ncheck jitter on the line.\n\n476\n00:23:12.740 --> 00:23:16.517\nI don't need to go too aggressive with\nthis one because I am sending 20 packets,\n\n477\n00:23:16.517 --> 00:23:19.270\nso not like a ping where I'm\nsending one every ten seconds.\n\n478\n00:23:19.270 --> 00:23:22.714\nHere I'm sending 20 with some payload,\n160 bytes.\n\n479\n00:23:22.714 --> 00:23:27.850\nSo, it can start to overwhelm the network,\nso I'll just bump that up a little bit.\n\n480\n00:23:27.850 --> 00:23:31.474\nNow over here, I can create the schedule.\n\n481\n00:23:31.474 --> 00:23:35.940\nSo I can say ip, well here,\nlet me get out of the sla itself.\n\n482\n00:23:35.940 --> 00:23:43.353\nI can say ip sla schedule, and\nI can point to that sla number.\n\n483\n00:23:43.353 --> 00:23:46.787\nSo that it was sla 1 here, so\nI'm gonna set a schedule, and\n\n484\n00:23:46.787 --> 00:23:51.048\nI'll just do the same as the other one\nwhere I say the lifetime is forever,\n\n485\n00:23:51.048 --> 00:23:53.139\nand I'll set the start time of now.\n\n486\n00:23:53.139 --> 00:23:54.200\nThere we go.\n\n487\n00:23:54.200 --> 00:23:55.603\nAnd so now it's running.\n\n488\n00:23:55.603 --> 00:23:57.664\nIt's running but\nit's not quite working, right.\n\n489\n00:23:57.664 --> 00:23:59.620\nIt's really just sending one way.\n\n490\n00:23:59.620 --> 00:24:03.990\nSo, I need to jump over to the ISP and\nset up via responder.\n\n491\n00:24:03.990 --> 00:24:06.660\nNow if I control the router I can\njust jump over and do it myself.\n\n492\n00:24:06.660 --> 00:24:10.090\nI have call them up and\nI have to hope on two things, right.\n\n493\n00:24:10.090 --> 00:24:11.990\nFirst off, I have to hope\nthey're running a CISCO router.\n\n494\n00:24:11.990 --> 00:24:15.790\nBecause these SLA's, the SLA responder,\nonly works on a CISCO router.\n\n495\n00:24:15.790 --> 00:24:18.450\nAnd then secondly I have to hope\nthey're willing to turn it on.\n\n496\n00:24:18.450 --> 00:24:20.910\nThe problem here is when you\nturn on the SLA responder,\n\n497\n00:24:20.910 --> 00:24:22.680\nit's kind of a global thing, right?\n\n498\n00:24:22.680 --> 00:24:24.420\nSo it turns it on for everybody.\n\n499\n00:24:24.420 --> 00:24:27.500\nIf they want to protect it they\ngot to go and put access lists in.\n\n500\n00:24:27.500 --> 00:24:30.980\nMy traffic is going to be\ncoming in on UDP port 50,000\n\n501\n00:24:30.980 --> 00:24:34.970\nThey could do an access list that limited\nthat down to just coming from this origin.\n\n502\n00:24:34.970 --> 00:24:38.570\nThey can protect at certain ways but\nthey might not choose to do that.\n\n503\n00:24:38.570 --> 00:24:44.310\nA lot of times these are used on internal\nnetworks and not public networks.\n\n504\n00:24:44.310 --> 00:24:48.960\nOn the ISP side, all they have to\ndo is issue one simple command.\n\n505\n00:24:48.960 --> 00:24:51.900\nIP SLA responder.\n\n506\n00:24:51.900 --> 00:24:53.890\nAll right?\nAnd when they run that,\n\n507\n00:24:53.890 --> 00:24:58.760\nnow when they get the one side of my\njitter check, they'll do the other side.\n\n508\n00:24:58.760 --> 00:25:01.590\nAnd that information will start\npropagating back to my router and\n\n509\n00:25:01.590 --> 00:25:04.210\nnow I get that valid view of the network.\n\n510\n00:25:04.210 --> 00:25:04.790\nOkay?\n\n511\n00:25:04.790 --> 00:25:06.080\nSo a little bit different.\n\n512\n00:25:06.080 --> 00:25:10.140\nICMP, the TCP connect, UDP connect, HTTP,\n\n513\n00:25:10.140 --> 00:25:14.710\nFTTP, all of those can run Just\nbeing configured by one side.\n\n514\n00:25:14.710 --> 00:25:17.470\nBut jitter, all the different jitter ones,\nthe UDP jitter,\n\n515\n00:25:17.470 --> 00:25:20.420\nTCP jitter, all those guys,\nthose need the responder, right?\n\n516\n00:25:20.420 --> 00:25:22.930\nSo think about whether the check\nhas to be two way or not.\n\n517\n00:25:22.930 --> 00:25:24.810\nThat's when you need the responder.\n\n518\n00:25:24.810 --> 00:25:25.510\nAll right.\n\n519\n00:25:25.510 --> 00:25:28.420\nBut at the end of the day,\nthat's basically it.\n\n520\n00:25:28.420 --> 00:25:31.320\nAnd now the SLA is up and\nrunning, and we're in business.\n\n521\n00:25:31.320 --> 00:25:33.720\nNow this one,\nI didn't set up a track object.\n\n522\n00:25:33.720 --> 00:25:36.770\nAnd that means I'm not gonna take any\naction based on what happens here, so\n\n523\n00:25:36.770 --> 00:25:40.320\nif jitter gets really bad,\nbig deal, right?\n\n524\n00:25:40.320 --> 00:25:41.820\nIf jitter's really good, big deal.\n\n525\n00:25:41.820 --> 00:25:43.300\nIt doesn't do anything, just monitors.\n\n526\n00:25:43.300 --> 00:25:46.570\nBut I can go in and I can look and\nI can see what the average jitter is and\n\n527\n00:25:46.570 --> 00:25:49.810\nall that and\nI can use that To make sure the ISP\n\n528\n00:25:49.810 --> 00:25:53.010\nis living up to what they say\nthey're going to live up to.\n\n529\n00:25:53.010 --> 00:25:55.030\nSo that's where I can\nget in to verify that.\n\n530\n00:25:55.030 --> 00:25:56.450\nBut if I wanted to take action I go and\n\n531\n00:25:56.450 --> 00:26:01.050\nadd a track object just like we\ndid at the beginning of the show.\n\n532\n00:26:01.050 --> 00:26:04.600\nDouglas in the chat room asked\nwhen we create an SLA like this,\n\n533\n00:26:04.600 --> 00:26:09.290\ncan we make it where the SLA puts\na route into the routing table as\n\n534\n00:26:09.290 --> 00:26:14.220\nopposed to taking one out, or as well as\ntaking one out, and You can and you can't.\n\n535\n00:26:14.220 --> 00:26:19.450\nSo with the track object,\nI attached it to the individual route.\n\n536\n00:26:19.450 --> 00:26:23.500\nIf I attach it to another route,\nit's gonna pull it out at the same time.\n\n537\n00:26:23.500 --> 00:26:27.160\nSo the solution to do what you're talking\nabout is a little bit more interesting.\n\n538\n00:26:27.160 --> 00:26:29.100\nSo let me show you what you can do.\n\n539\n00:26:29.100 --> 00:26:34.760\nAll right, so on my headquarters\nrouter If I pull up the,\n\n540\n00:26:34.760 --> 00:26:39.610\nthe config,\nI've only got one static route.\n\n541\n00:26:39.610 --> 00:26:40.570\nThat guy right there, right.\n\n542\n00:26:40.570 --> 00:26:43.160\nThat's the one I created and\nI've put that track object on it.\n\n543\n00:26:43.160 --> 00:26:44.050\nOkay.\n\n544\n00:26:44.050 --> 00:26:47.200\nIf you want it where when a failure\nhappens it pulls this route and\n\n545\n00:26:47.200 --> 00:26:52.930\nputs another one in, The way to achieve\nthat is to combine tracks with metrics.\n\n546\n00:26:52.930 --> 00:26:53.600\nAll right.\n\n547\n00:26:53.600 --> 00:26:54.580\nA static route.\n\n548\n00:26:54.580 --> 00:26:57.340\nWhat is a static route's\nmetric by default, right.\n\n549\n00:26:57.340 --> 00:27:02.470\nLet me make sure my connection\nhere is healthy again.\n\n550\n00:27:02.470 --> 00:27:04.920\nI'm gonna make sure that route\nmakes it into my routing table.\n\n551\n00:27:07.550 --> 00:27:09.730\nWhen we look at a static route.\n\n552\n00:27:09.730 --> 00:27:13.140\nWhich might, I gotta wait for\nthe responder to get healthy again, so\n\n553\n00:27:13.140 --> 00:27:14.380\nit'll take a few moments.\n\n554\n00:27:14.380 --> 00:27:17.690\nBut when we put a route in the routing\ntable, if it's a static route\n\n555\n00:27:17.690 --> 00:27:22.890\nthen what's gonna happen is it's\ngonna have a metric of zero, right.\n\n556\n00:27:22.890 --> 00:27:27.430\nA metric of zero, an admin distance\nof one and a metric of zero, right.\n\n557\n00:27:27.430 --> 00:27:30.580\nThat's how it bring that in and\nit prefers it over EIG or\n\n558\n00:27:30.580 --> 00:27:32.270\nOSPF and all those other guys.\n\n559\n00:27:32.270 --> 00:27:32.940\nOkay.\n\n560\n00:27:32.940 --> 00:27:35.810\nBut you can override\nthe metric of a static route.\n\n561\n00:27:35.810 --> 00:27:40.580\nSo what I can do is I can jump into\nmy config and I can take this route.\n\n562\n00:27:40.580 --> 00:27:44.960\nAnd I'm gonna just take the route and\npull it.\n\n563\n00:27:44.960 --> 00:27:45.819\nOops.\nLet me.\n\n564\n00:27:48.280 --> 00:27:49.139\nDid I already pull it?\n\n565\n00:27:49.139 --> 00:27:50.609\nI didn't think I pulled it.\n\n566\n00:27:50.609 --> 00:27:52.571\n[LAUGH] Pulled her out.\n\n567\n00:27:52.571 --> 00:27:53.098\nThere we go.\n\n568\n00:27:53.098 --> 00:27:55.570\nI'm gonna pull her out and\nI'm gonna put it back in.\n\n569\n00:27:55.570 --> 00:27:59.540\nAnd this time, I'm gonna add a little\nbit more to the end of that line.\n\n570\n00:27:59.540 --> 00:28:06.080\nWhen you define a static route, You can\nactually override it's distance metric.\n\n571\n00:28:06.080 --> 00:28:10.520\nSo if I give it something higher,\nlike I might give this one a value of ten.\n\n572\n00:28:11.580 --> 00:28:14.500\nSo I'm gong to define that route,\nand I just gave it a value of ten.\n\n573\n00:28:14.500 --> 00:28:18.250\nI can now define another route, All right?\n\n574\n00:28:18.250 --> 00:28:24.560\nAnd point this one to another ISP,\nwhich I do have another ISP in here.\n\n575\n00:28:24.560 --> 00:28:26.910\nLet's see if I can remember\nwhat its IP address is.\n\n576\n00:28:26.910 --> 00:28:28.282\nWell, I'll just make something up.\n\n577\n00:28:28.282 --> 00:28:31.885\nSo [LAUGH] So I'm gonna point to\nan ISP that doesn't exist, right?\n\n578\n00:28:31.885 --> 00:28:35.365\nBut on this one,\nI'm gonna add 20 to the end, okay?\n\n579\n00:28:35.365 --> 00:28:38.955\nSo the first route is gonna\nhave a distance of 10,\n\n580\n00:28:38.955 --> 00:28:42.415\nand the second route is gonna have a 20,\nokay?\n\n581\n00:28:42.415 --> 00:28:47.415\nNow, 10 is preferred over 20, so 10 is\ngonna make it into the routing table, and\n\n582\n00:28:47.415 --> 00:28:51.400\nso if I do a show ip route I still\nsee that one right there, but\n\n583\n00:28:51.400 --> 00:28:53.250\nnotice its admin distance.\n\n584\n00:28:53.250 --> 00:28:56.840\nI know it said metric in the help, but\nit actually sets the admin distance,.\n\n585\n00:28:56.840 --> 00:29:00.370\nSo the admin distance was one,\nnow it's ten.\n\n586\n00:29:00.370 --> 00:29:02.300\nThe, the metric is still zero.\n\n587\n00:29:02.300 --> 00:29:06.320\nSo it's got a 10,\nthe other route's gonna have a 20.\n\n588\n00:29:06.320 --> 00:29:08.790\nWell, actually, you know, 20 might have\nbeen a bad one for me to put in there,\n\n589\n00:29:08.790 --> 00:29:11.280\nbecause what else has\nan ME distance of 20?\n\n590\n00:29:11.280 --> 00:29:12.350\nBGP, right?\n\n591\n00:29:12.350 --> 00:29:15.530\nSo I kinda conflict it, so I'd probably\nbe better off doing like one and two.\n\n592\n00:29:15.530 --> 00:29:21.040\nSo have the main route have a distance of\none And the other route a distance of 2.\n\n593\n00:29:21.040 --> 00:29:25.590\nBut now, if this route were to fail, this\nroute's going to come out of the routing\n\n594\n00:29:25.590 --> 00:29:27.280\ntable, the other one has a distance of 20,\n\n595\n00:29:27.280 --> 00:29:30.990\nit's going to come into the routing\ntable and it's going to take over.\n\n596\n00:29:30.990 --> 00:29:34.630\nSo, if I jump over to my ISP,\nthen that's going to happen.\n\n597\n00:29:34.630 --> 00:29:35.920\nNow, I am going to have a slight problem,\n\n598\n00:29:35.920 --> 00:29:39.380\nwhich is I created a route\nthat I can't connect to.\n\n599\n00:29:39.380 --> 00:29:40.550\nThat 181 address.\n\n600\n00:29:40.550 --> 00:29:42.820\nSince I made it up,\nI don't actually have a way to get there.\n\n601\n00:29:42.820 --> 00:29:46.290\nSo let's adjust this a little\nbit to be more accurate.\n\n602\n00:29:46.290 --> 00:29:47.700\nWhoops.\n\n603\n00:29:47.700 --> 00:29:48.890\nSo that ISP is 181.7.31.1.\n\n604\n00:29:48.890 --> 00:29:53.520\nSo that's where I really\nneed to point it to.\n\n605\n00:29:53.520 --> 00:29:57.330\nAnd so\nwhat I can do is I can pull that route.\n\n606\n00:29:58.890 --> 00:30:04.890\nI'm gonna change that distance to 20,\nI mean two, so it's a little more clean.\n\n607\n00:30:04.890 --> 00:30:06.830\nI don't wanna conflict with BGP.\n\n608\n00:30:06.830 --> 00:30:11.910\nI would hate for a BGP route to come\nin and beat my static route, right?\n\n609\n00:30:11.910 --> 00:30:13.970\nSo that's why I gotta be careful there.\n\n610\n00:30:13.970 --> 00:30:17.920\nAnd then I'm gonna take my other route,\nthe one with the tracking object.\n\n611\n00:30:17.920 --> 00:30:21.870\nAnd I'm gonna pull it, and\nthen I'm just gonna set it back to one.\n\n612\n00:30:21.870 --> 00:30:22.800\nNow one's the default.\n\n613\n00:30:22.800 --> 00:30:25.230\nSo technically I don't have to set it,\nbut I'll go ahead and\n\n614\n00:30:25.230 --> 00:30:27.720\nset it here just to be on the safe side.\n\n615\n00:30:27.720 --> 00:30:32.610\nSo now when I take a look at my running\nconfig, I've got those two routes.\n\n616\n00:30:32.610 --> 00:30:34.570\nOne of them that has track one, and\n\n617\n00:30:34.570 --> 00:30:36.810\nsee how the metric disappeared\ncuz I picked the default?\n\n618\n00:30:36.810 --> 00:30:40.130\nAnd then the other one here\nthat has that metric of two.\n\n619\n00:30:40.130 --> 00:30:42.540\nAnd so\nif I take a look at my rounding table,\n\n620\n00:30:42.540 --> 00:30:45.130\nI'm still preferring the one\nthrough the main ISP.\n\n621\n00:30:45.130 --> 00:30:48.140\nBut if the main ISP fails,\nif I go and shut them down and\n\n622\n00:30:48.140 --> 00:30:50.020\njump back to headquarters.\n\n623\n00:30:50.020 --> 00:30:54.980\nNow, it's going to pull the one route and\nlet the other route in.\n\n624\n00:30:54.980 --> 00:30:59.040\nOkay, and I can set a track object like\na second track object on the other route.\n\n625\n00:30:59.040 --> 00:31:01.590\nSo if it becomes unreachable\ndon't bother putting it in.\n\n626\n00:31:01.590 --> 00:31:04.700\nBut as it stands that\none's gonna come out.\n\n627\n00:31:04.700 --> 00:31:06.870\nI'm gonna kick myself\nout of the router and\n\n628\n00:31:06.870 --> 00:31:12.210\nthen Now the other route has come and\nsee it's distance of two right?\n\n629\n00:31:12.210 --> 00:31:16.235\nSo it's not the track object that puts\nit in, it's the distance that puts it\n\n630\n00:31:16.235 --> 00:31:19.960\nin.That's how you can make it swap\nroutes on a moments notice like that and\n\n631\n00:31:19.960 --> 00:31:21.690\nthat's a good way to do it\nwithout a routing protocol.\n\n632\n00:31:21.690 --> 00:31:23.190\nI was using OSPF before but\n\n633\n00:31:23.190 --> 00:31:25.250\nif you don't have a routing\nprotocol that'll take care of it.\n\n634\n00:31:25.250 --> 00:31:27.990\nSo excellent question.\n\n635\n00:31:27.990 --> 00:31:31.200\nAll right, ladies and gentlemen I think\nthat's about all I've got on SLA.\n\n636\n00:31:31.200 --> 00:31:34.980\nSo in this episode we got a chance to see\nwhat the service level agreements are,\n\n637\n00:31:34.980 --> 00:31:36.900\nhow we can set them up for monitoring.\n\n638\n00:31:36.900 --> 00:31:41.690\nThen we got to how to use track objects\nto actually get them doing something,\n\n639\n00:31:41.690 --> 00:31:43.230\ntaking action based on it.\n\n640\n00:31:43.230 --> 00:31:44.940\nUsually swapping out a route.\n\n641\n00:31:44.940 --> 00:31:48.120\nAnd then lastly we talked a little\nbit about the SLA responder so\n\n642\n00:31:48.120 --> 00:31:49.770\nCouple of neat little features there.\n\n643\n00:31:49.770 --> 00:31:51.830\nAll part of IPSLAs.\n\n644\n00:31:51.830 --> 00:31:54.050\nThey're built into darn\nnear every Cisco router.\n\n645\n00:31:54.050 --> 00:31:55.140\nSo take advantage of them, right?\n\n646\n00:31:55.140 --> 00:31:58.960\nThey really do help you get that\nvisibility beyond the hardware borders of\n\n647\n00:31:58.960 --> 00:31:59.550\nyour router.\n\n648\n00:31:59.550 --> 00:32:02.090\nAll right well I hope you\nguys enjoyed the show.\n\n649\n00:32:02.090 --> 00:32:08.555\nSigning off for ITProvTV I'm Don Pezet And\nI'll see you next time.\n\n650\n00:32:08.555 --> 00:32:11.900\n[SOUND]\n\n",
          "vimeoId": "138776528"
        }
      ],
      "title": "Infrastructure Services"
    }
  ],
  "url": "ccnp-routing-switching",
  "vLab": false
}
