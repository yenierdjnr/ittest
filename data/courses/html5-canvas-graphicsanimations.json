{
  "description": "HTML5 Canvas elements bring art and animation to the browser. In this series, we explore the capabilities of the HTML5 Canvas element in conjunction with JavaScript. This includes simple \"pen\" drawings, image displaying, image manipulation, and animations. Knowing HTML5 Canvas provides a great way to start with in-browser games as well as expressing those artistic desires. Hope to see you there!",
  "descriptionMD": "HTML5 Canvas elements bring art and animation to the browser. In this series, we explore the capabilities of the HTML5 Canvas element in conjunction with JavaScript. This includes simple \"pen\" drawings, image displaying, image manipulation, and animations. Knowing HTML5 Canvas provides a great way to start with in-browser games as well as expressing those artistic desires. Hope to see you there!",
  "length": "38907",
  "name": "HTML5 Canvas Graphics and Animations",
  "practiceExam": false,
  "subtitle": "Your very own digital canvas!",
  "tagUrl": "developer",
  "topics": [
    {
      "episodes": [
        {
          "description": "HTML5 Canvas elements bring art and animation to the browser. In this series, we explore the capabilities of the HTML5 Canvas element in conjunction with JavaScript. This includes simple \"pen\" drawings, image displaying, image manipulation, and animations. Knowing HTML5 Canvas provides a great way to start with in-browser games as well as expressing those artistic desires. Hope to see you there!",
          "length": "181",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-html5canvasgraphicsandanimation/techskills-html5canvasgraphicsandanimations-0-0-0-overview-092017-PGM.00_00_55_02.Still001.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-html5canvasgraphicsandanimation/techskills-html5canvasgraphicsandanimations-0-0-0-overview-092017-PGM.00_00_55_02.Still001-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-html5canvasgraphicsandanimation/techskills-html5canvasgraphicsandanimations-0-0-0-overview-092017-PGM.00_00_55_02.Still001-sm.jpg",
          "title": "Overview",
          "transcript": "",
          "vimeoId": "242622277"
        },
        {
          "description": "Justin and Zach begin the discussion about HTML5 Canvas Graphics & Animations, what is the Canvas Element, pixels default to 150, using MDN (Mozilla Developer Network), Canvas API, atom.io, using Atom, creating the Canvas element, CSS Grid Display Type, ES 2015, and setting width & height.",
          "length": "1980",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-html5canvasgraphicsandanimation/techskills-html5canvasgraphicsandanimations-1-1-introduction_to_the_canvas_element-083117-PGM.00_32_48_12.Still001.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-html5canvasgraphicsandanimation/techskills-html5canvasgraphicsandanimations-1-1-introduction_to_the_canvas_element-083117-PGM.00_32_48_12.Still001-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-html5canvasgraphicsandanimation/techskills-html5canvasgraphicsandanimations-1-1-introduction_to_the_canvas_element-083117-PGM.00_32_48_12.Still001-sm.jpg",
          "title": "Introduction to the Canvas Element",
          "transcript": "",
          "vimeoId": "232049593"
        },
        {
          "description": "Justin and Zach look at drawing lines & rectangles, coordinate system, 400px X 600px for rectangle inside Canvas, down & across to the right for positive numbers in rectangle, and positioning the rectangle.",
          "length": "1278",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-html5canvasgraphicsandanimation/techskills-html5canvasgraphicsandanimations-2-1-1-drawing_lines_and_rectangles-083117-PGM.00_21_46_18.Still001.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-html5canvasgraphicsandanimation/techskills-html5canvasgraphicsandanimations-2-1-1-drawing_lines_and_rectangles-083117-PGM.00_21_46_18.Still001-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-html5canvasgraphicsandanimation/techskills-html5canvasgraphicsandanimations-2-1-1-drawing_lines_and_rectangles-083117-PGM.00_21_46_18.Still001-sm.jpg",
          "title": "Drawing Lines and Rectangles",
          "transcript": "",
          "vimeoId": "232048036"
        },
        {
          "description": "Justin and zach continue the discussion regarding drawing lines & rectangles, CTX.StrokeRect, ClearRect, FillRect, and getRectCenter, and the the basic build and positioning of our rectangle concluded.",
          "length": "1302",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-html5canvasgraphicsandanimation/techskills-html5canvasgraphicsandanimations-2-1-2-drawing_lines_and_rectangles_pt2-083117-PGM.00_31_48_09.Still001.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-html5canvasgraphicsandanimation/techskills-html5canvasgraphicsandanimations-2-1-2-drawing_lines_and_rectangles_pt2-083117-PGM.00_31_48_09.Still001-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-html5canvasgraphicsandanimation/techskills-html5canvasgraphicsandanimations-2-1-2-drawing_lines_and_rectangles_pt2-083117-PGM.00_31_48_09.Still001-sm.jpg",
          "title": "Drawing Lines and Rectangles Part 2",
          "transcript": "",
          "vimeoId": "232049355"
        },
        {
          "description": "Justin and Zach discuss using curves and arcs in canvas graphics & animations, what a Bezier Curve is, what a Quadratic Curve is, 2D graphics rendering Context, App.JS File, 'BezierCurve'To function, Bezier Curves allow us to stroke & fill, Bezier Curves have 6 Arguments, and the importance of Close Path command.",
          "length": "1342",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-html5canvasgraphicsandanimation/techskills-html5canvasgraphicsandanimations-3-1-1-drawing_curves_and_arcs-090117-PGM.00_22_11_28.Still001.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-html5canvasgraphicsandanimation/techskills-html5canvasgraphicsandanimations-3-1-1-drawing_curves_and_arcs-090117-PGM.00_22_11_28.Still001-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-html5canvasgraphicsandanimation/techskills-html5canvasgraphicsandanimations-3-1-1-drawing_curves_and_arcs-090117-PGM.00_22_11_28.Still001-sm.jpg",
          "title": "Drawing Curves and Arcs",
          "transcript": "",
          "vimeoId": "232476831"
        },
        {
          "description": "Justin and Zach cover Quadratic Curves, how Bezier Curves & Quadratic Curves are paths, the QuadraticCurveTo method, control points, and how the Quadratic Curve has one control point.",
          "length": "1184",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-html5canvasgraphicsandanimation/techskills-html5canvasgraphicsandanimations-3-1-2-drawing_curves_and_arcs_pt2-090117-PGM.00_19_34_00.Still001.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-html5canvasgraphicsandanimation/techskills-html5canvasgraphicsandanimations-3-1-2-drawing_curves_and_arcs_pt2-090117-PGM.00_19_34_00.Still001-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-html5canvasgraphicsandanimation/techskills-html5canvasgraphicsandanimations-3-1-2-drawing_curves_and_arcs_pt2-090117-PGM.00_19_34_00.Still001-sm.jpg",
          "title": "Drawing Curves and Arcs Part 2",
          "transcript": "",
          "vimeoId": "232476260"
        },
        {
          "description": "Justin and Zach go over general info about Arcs, Arc as a method, ArcTo, Arc has 5 arguments, Arcs can be stroked or filled, the degrees to radiants.function, and how Arcs are good for circular shapes.",
          "length": "1786",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-html5canvasgraphicsandanimation/techskills-html5canvasgraphicsandanimations-3-1-3-drawing_curves_and_arcs_pt3-090117-PGM.00_32_20_00.Still001.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-html5canvasgraphicsandanimation/techskills-html5canvasgraphicsandanimations-3-1-3-drawing_curves_and_arcs_pt3-090117-PGM.00_32_20_00.Still001-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-html5canvasgraphicsandanimation/techskills-html5canvasgraphicsandanimations-3-1-3-drawing_curves_and_arcs_pt3-090117-PGM.00_32_20_00.Still001-sm.jpg",
          "title": "Drawing Curves and Arcs Part 3",
          "transcript": "",
          "vimeoId": "232477242"
        },
        {
          "description": "In this episode, Vonne and Justin explore the creation of more advances shapes using drawing primitives (lines!) from the previous episodes. Justin demonstrates the thought process and implementation of triangle drawing function.",
          "length": "1468",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-html5canvasgraphicsandanimation/techskills-html5canvasgraphicsandanimations-4-1-1-creating_other_shapes-090517-PGM.00_24_19_04.Still001.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-html5canvasgraphicsandanimation/techskills-html5canvasgraphicsandanimations-4-1-1-creating_other_shapes-090517-PGM.00_24_19_04.Still001-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-html5canvasgraphicsandanimation/techskills-html5canvasgraphicsandanimations-4-1-1-creating_other_shapes-090517-PGM.00_24_19_04.Still001-sm.jpg",
          "title": "Creating Other Shapes",
          "transcript": "WEBVTT\n\n1\n00:00:00.000 --> 00:00:01.283\n[MUSIC]\n\n2\n00:00:01.283 --> 00:00:06.602\nHello everyone, and welcome to\n\n3\n00:00:06.602 --> 00:00:13.301\nanother exciting edition of DevProTV,\n\n4\n00:00:13.301 --> 00:00:18.029\nI'm your host Vonne Smith.\n\n5\n00:00:18.029 --> 00:00:19.576\nAnd today, we're gonna be talking\nabout creating other shapes in\n\n6\n00:00:19.576 --> 00:00:20.141\nthe HTML5 canvas tag.\n\n7\n00:00:20.141 --> 00:00:26.717\nAnd luckily for us, we have Mr.\nJustin Dennison to help us.\n\n8\n00:00:26.717 --> 00:00:28.068\nHello Justin, how you doing?\n\n9\n00:00:28.068 --> 00:00:31.006\n&gt;&gt; I am doing fantastic, Vonne.\n\n10\n00:00:31.006 --> 00:00:32.992\nI actually got up early this morning and\nI worked out.\n\n11\n00:00:32.992 --> 00:00:34.850\nIt's crazy, I know.\n\n12\n00:00:34.850 --> 00:00:36.141\n&gt;&gt; That sounds horrible.\n[LAUGH]\n\n13\n00:00:36.141 --> 00:00:37.947\n&gt;&gt; I was kind of iffy about it as well.\n\n14\n00:00:37.947 --> 00:00:40.877\nBut it did make me feel better.\n\n15\n00:00:40.877 --> 00:00:42.798\nAnd speaking of feeling better,\nhow are you today?\n\n16\n00:00:42.798 --> 00:00:43.847\n&gt;&gt; I'm doing pretty good.\n\n17\n00:00:43.847 --> 00:00:47.289\nWe're just getting started for\nthis particular week.\n\n18\n00:00:47.289 --> 00:00:51.184\nWell, you guys watching,\nyou don't know what time it is, right?\n\n19\n00:00:51.184 --> 00:00:54.207\n[LAUGH] They don't know what day\nwe're on and everything like that.\n\n20\n00:00:54.207 --> 00:00:57.961\nBut we are getting started back in,\nwith our HTML5 canvas.\n\n21\n00:00:57.961 --> 00:01:02.080\nSo I've played around\nwith HTML canvas before.\n\n22\n00:01:02.080 --> 00:01:04.924\nBut I never really got too much\nfurther than I know what the tag is,\n\n23\n00:01:04.924 --> 00:01:08.468\nI know some attributes, and then\nthe rest is all that JavaScript stuff.\n\n24\n00:01:08.468 --> 00:01:10.340\n&gt;&gt; Well, I do enjoy JavaScript.\n\n25\n00:01:10.340 --> 00:01:13.690\nAnd luckily for you,\nthat's probably what I am doing mostly.\n\n26\n00:01:13.690 --> 00:01:20.862\nVery little CSS after the first episode,\nvery little custom attributes in the HTML.\n\n27\n00:01:20.862 --> 00:01:23.350\nLet's do some JavaScript rendering,\ndrawing, so on and so forth.\n\n28\n00:01:23.350 --> 00:01:27.538\nAnd kind of let me set the scene.\n\n29\n00:01:27.538 --> 00:01:30.347\nWe've learned up to this point\nthat we can draw rectangles, aka,\n\n30\n00:01:30.347 --> 00:01:33.624\nalso square by proxy, right, rectangle\nwith all sides the same as a square.\n\n31\n00:01:33.624 --> 00:01:37.764\nAnd as well as drawing some arcs and\ncurves and, well, some lines, but\n\n32\n00:01:37.764 --> 00:01:40.734\nwhat if I wanted to draw\nsomething like a triangle?\n\n33\n00:01:40.734 --> 00:01:46.676\nMaybe I wanna draw a pentagon,\nor any type of closed polygon.\n\n34\n00:01:46.676 --> 00:01:50.275\nYou're like, Justin, you're saying\nmath terms and I'm getting afraid.\n\n35\n00:01:50.275 --> 00:01:53.720\nWell, hopefully I'm gonna try\nto break this down for you.\n\n36\n00:01:53.720 --> 00:01:55.610\nIt's not always easy.\n\n37\n00:01:55.610 --> 00:01:56.520\nI'm not gonna lie to you.\n\n38\n00:01:56.520 --> 00:01:59.756\nIt's gonna take a little bit, especially\nbecause we do have to talk about angles,\n\n39\n00:01:59.756 --> 00:02:00.835\nand lengths, and things.\n\n40\n00:02:00.835 --> 00:02:03.182\nBut I think using some\nof those primitives,\n\n41\n00:02:03.182 --> 00:02:05.848\nwe can kind of abstract\nto some different shapes,\n\n42\n00:02:05.848 --> 00:02:10.112\nthat will allow us to build more complex\nkidn of representations on the screen.\n\n43\n00:02:10.112 --> 00:02:13.863\n&gt;&gt; So we're creating closed paths.\n\n44\n00:02:13.863 --> 00:02:16.317\nCuz I'm equating this back to Illustrator,\nand my vectors, and paths, and\n\n45\n00:02:16.317 --> 00:02:17.202\npoints ,and everything.\n\n46\n00:02:17.202 --> 00:02:19.729\nSo that's what we are doing, closed paths.\n\n47\n00:02:19.729 --> 00:02:22.757\n&gt;&gt; Absolutely,\nwe will be essentially abstracting,\n\n48\n00:02:22.757 --> 00:02:27.109\nbegin path, close path, and\ndrawing using point-to-point movement.\n\n49\n00:02:27.109 --> 00:02:29.418\nKind of like,\nI think of it as a pen, honestly.\n\n50\n00:02:29.418 --> 00:02:33.498\nBut from a vector graphics standpoint,\nit is very much a path definition.\n\n51\n00:02:33.498 --> 00:02:36.238\n&gt;&gt; Well,\nI do love the pen tool in Illustrator, so.\n\n52\n00:02:36.238 --> 00:02:38.105\nSome people are like,\ngosh, no, not the pen tool.\n\n53\n00:02:38.105 --> 00:02:39.500\nBut I love it.\n\n54\n00:02:39.500 --> 00:02:43.790\nSo I'm actually very excited to\nget this other shapes going.\n\n55\n00:02:43.790 --> 00:02:46.630\n&gt;&gt; Well, hopefully,\nI can live up to your expectations.\n\n56\n00:02:46.630 --> 00:02:49.010\nOtherwise, it might be\na horrible let down for you.\n\n57\n00:02:49.010 --> 00:02:50.790\nBut we'll just have to see.\n\n58\n00:02:50.790 --> 00:02:53.420\nBut for now let's go ahead and\nsee where we are.\n\n59\n00:02:53.420 --> 00:02:58.120\nAnd then we'll start by a very simple\nexample, little bit of explanation,\n\n60\n00:02:58.120 --> 00:03:00.714\nand then come back, and\npull out some of these abstractions.\n\n61\n00:03:00.714 --> 00:03:03.300\nSo let's go ahead and\ntake a look at my screen here, and\n\n62\n00:03:03.300 --> 00:03:07.790\nlet's see where we are and then get\ngoing to where we're going, hopefully.\n\n63\n00:03:07.790 --> 00:03:11.460\nSo this is just our basic canvas element,\nhas the nice little blue border and\n\n64\n00:03:11.460 --> 00:03:13.040\nthe black background.\n\n65\n00:03:13.040 --> 00:03:16.578\nJust to keep things kind of segmented, so\nwe can know what we're drawing on, and\n\n66\n00:03:16.578 --> 00:03:18.308\nwhat is essentially just background.\n\n67\n00:03:18.308 --> 00:03:20.594\nNow I come over here to my code.\n\n68\n00:03:20.594 --> 00:03:25.187\nI have this creating other shapes project.\n\n69\n00:03:25.187 --> 00:03:26.165\nNow, this is just a copy\nof the initial project.\n\n70\n00:03:26.165 --> 00:03:31.526\nAnd I have added few things just to\nmake things a little more expeditious,\n\n71\n00:03:31.526 --> 00:03:34.216\nas far as point definitions, okay.\n\n72\n00:03:34.216 --> 00:03:35.861\nSo we have our app, or\nindex.html, and our main CSS.\n\n73\n00:03:35.861 --> 00:03:38.577\nI have not changed anything there.\n\n74\n00:03:38.577 --> 00:03:40.930\nThe only thing that I\nhave changed is app.js.\n\n75\n00:03:40.930 --> 00:03:45.252\nSo within app.js, I have defined\nthe topLeft, the topRight, the midTop,\n\n76\n00:03:45.252 --> 00:03:50.105\nthe midBottom, and the midLeft, the\nmidRight, the bottomLeft, the bottomRight,\n\n77\n00:03:50.105 --> 00:03:51.783\nand the center of the canvas.\n\n78\n00:03:51.783 --> 00:03:53.709\nNow, this is based on\n600 wide by 400 tall.\n\n79\n00:03:53.709 --> 00:03:57.078\nSo these would change if your\ncanvas kind of got rescaled.\n\n80\n00:03:57.078 --> 00:03:59.397\nBut that's not my ultimate impetus now.\n\n81\n00:03:59.397 --> 00:04:03.270\nSo we're just gonna stay with\nthis fixed width and height.\n\n82\n00:04:03.270 --> 00:04:05.857\nBut if you did have to resize\nthe canvas dynamically,\n\n83\n00:04:05.857 --> 00:04:08.890\nthen this kinda breaks,\njust as a quick aside.\n\n84\n00:04:08.890 --> 00:04:11.730\n&gt;&gt; Well, I'm pretty impressed that you\nactually said that all in one mouthful,\n\n85\n00:04:11.730 --> 00:04:13.360\nand didn't trip over your words.\n\n86\n00:04:13.360 --> 00:04:14.709\nCuz I would've been all over the place.\n\n87\n00:04:14.709 --> 00:04:16.120\n&gt;&gt; [LAUGH]\n&gt;&gt; So that's pretty impressive,\n\n88\n00:04:16.120 --> 00:04:17.618\nI am already intrigued, so.\n\n89\n00:04:17.618 --> 00:04:18.848\n[LAUGH]\n&gt;&gt; [LAUGH] Well,\n\n90\n00:04:18.848 --> 00:04:20.660\nhold on, we are gonna stay with it,\nall right.\n\n91\n00:04:20.660 --> 00:04:24.010\nSo that's where we have our set up, right?\n\n92\n00:04:24.010 --> 00:04:28.755\nSo now, let's get our canvas element, and\nlet's get our 2D context, and let's just\n\n93\n00:04:28.755 --> 00:04:33.270\ndraw an initial triangle, and then try to\nthink about how can I abstract this away?\n\n94\n00:04:33.270 --> 00:04:37.976\nRight, so we're gonna do a little bit of\nplaying around, a little bit of planning,\n\n95\n00:04:37.976 --> 00:04:38.918\nand then build.\n\n96\n00:04:38.918 --> 00:04:40.485\nWell, maybe some interesting abstraction,\nand\n\n97\n00:04:40.485 --> 00:04:41.839\nI'll show you a couple of different ways.\n\n98\n00:04:41.839 --> 00:04:43.640\nSo we come back to my computer here.\n\n99\n00:04:43.640 --> 00:04:48.838\nSo we need to, well,\nlet's just type this out on the side.\n\n100\n00:04:48.838 --> 00:04:53.247\nSo I'm gonna grab my canvas element, and\nwe're just gonna use document.querySelect,\n\n101\n00:04:53.247 --> 00:04:54.528\njust like we always have.\n\n102\n00:04:54.528 --> 00:04:59.182\nNow, I could leave this in between\nepisodes, but I like to really emphasize,\n\n103\n00:04:59.182 --> 00:05:04.540\nI'm always grabbing the canvas element and\ngetting that canvas elements 2D context.\n\n104\n00:05:04.540 --> 00:05:09.600\nI'm using one canvas element,\nkind of a nice little interesting part.\n\n105\n00:05:09.600 --> 00:05:11.550\nYou can have a bunch of canvas elements.\n\n106\n00:05:11.550 --> 00:05:14.020\nYou can have a canvas element\nthat's not even on the screen,\n\n107\n00:05:14.020 --> 00:05:15.550\nthat is kind of just like a preview.\n\n108\n00:05:15.550 --> 00:05:21.080\nIt's crazy what you can do, but this is\njust how do I do these initial things.\n\n109\n00:05:21.080 --> 00:05:28.550\nOkay, so I'm always going to grab a canvas\nand the 2D context, right off the bat.\n\n110\n00:05:28.550 --> 00:05:30.870\nMaybe if I can spell.\n\n111\n00:05:30.870 --> 00:05:34.092\nSo here's our 2D context,\nand there we go, okay?\n\n112\n00:05:34.092 --> 00:05:39.020\nSo now, let's think about it,\nI can draw a line, I can draw a rectangle,\n\n113\n00:05:39.020 --> 00:05:44.260\nI can draw a square,\nhow would I draw a triangle, hmm?\n\n114\n00:05:44.260 --> 00:05:48.380\nWell, there's a few different ways\nthat I could draw a triangle.\n\n115\n00:05:48.380 --> 00:05:53.100\nBut I like to think of it from just boom,\nI wanna start somewhere,\n\n116\n00:05:53.100 --> 00:05:54.600\nand more or less draw a triangle.\n\n117\n00:05:54.600 --> 00:05:57.850\nI think of it as how would I\ndraw a triangle with a pen.\n\n118\n00:05:57.850 --> 00:06:00.110\nBut that's me.\n\n119\n00:06:00.110 --> 00:06:02.490\nVonne may have a different\nperspective on that.\n\n120\n00:06:02.490 --> 00:06:04.149\nLet me know.\nThat's why people are different.\n\n121\n00:06:04.149 --> 00:06:07.402\nSo let's draw a simple triangle, and\n\n122\n00:06:07.402 --> 00:06:11.379\nthis is a little bit of review for\nthe line too.\n\n123\n00:06:11.379 --> 00:06:17.144\nAnd I'm gonna try to use things\nthat are not kinda weird, right?\n\n124\n00:06:17.144 --> 00:06:21.498\nSo I'm going to say const,\nnope, nope, no I'm not.\n\n125\n00:06:21.498 --> 00:06:28.580\nI'm sorry, ctx.beginPath, and then I'm\ngonna go ahead and close the path.\n\n126\n00:06:28.580 --> 00:06:33.259\nSo there's that path, Vonne, that you\nwere already kind of talking about.\n\n127\n00:06:33.259 --> 00:06:38.399\nAnd it's amazing, cuz Vonne wasn't\nhere for the first few episodes.\n\n128\n00:06:38.399 --> 00:06:40.036\nShe was like, yeah, I know this.\n\n129\n00:06:40.036 --> 00:06:44.040\n&gt;&gt; [LAUGH] Yeah, I have a little\nbit of experience in Illustrator.\n\n130\n00:06:44.040 --> 00:06:45.544\nJust a decade or so.\n\n131\n00:06:45.544 --> 00:06:48.220\n[LAUGH]\n&gt;&gt; Well, that's a lot more than me.\n\n132\n00:06:48.220 --> 00:06:50.200\nEvery time I open up\none of those products,\n\n133\n00:06:50.200 --> 00:06:53.510\nI just kinda have a panic attack,\nshut down, and turn off my computer.\n\n134\n00:06:53.510 --> 00:06:56.370\n&gt;&gt; [LAUGH]\n&gt;&gt; But to each their own, I suppose.\n\n135\n00:06:56.370 --> 00:06:57.710\nSo let's think about it.\n\n136\n00:06:57.710 --> 00:07:04.430\nI wanna start at the top left,\nand I wanna draw to the center,\n\n137\n00:07:04.430 --> 00:07:10.120\nand then I wanna draw to the middle left,\nand then I want to close that out, okay?\n\n138\n00:07:10.120 --> 00:07:14.420\n&gt;&gt; Now, are we talking about,\nwhat do we got, isosceles triangle, or\n\n139\n00:07:14.420 --> 00:07:15.290\na right triangle.\n\n140\n00:07:15.290 --> 00:07:18.420\nI mean, what type of triangle\nare we creating right now?\n\n141\n00:07:18.420 --> 00:07:22.290\nOr is it just, we're just gonna put three\npoints, and it will make a triangle,\n\n142\n00:07:22.290 --> 00:07:24.310\ncuz that's in a sense what you need for\na triangle.\n\n143\n00:07:24.310 --> 00:07:28.760\nYou need one, two, three points,\nwith the path that connect in between.\n\n144\n00:07:28.760 --> 00:07:29.630\nSo kind of randomizing?\n\n145\n00:07:29.630 --> 00:07:34.043\n&gt;&gt; Exactly, so based on our canvas\noutlook, this is, it's not isosceles,\n\n146\n00:07:34.043 --> 00:07:35.523\nit's not equilateral.\n\n147\n00:07:35.523 --> 00:07:37.338\nIs that scaling?\n\n148\n00:07:37.338 --> 00:07:38.796\nYeah, all three sides\nare different lengths.\n\n149\n00:07:38.796 --> 00:07:41.139\nHowever, it will be a right triangle,\n\n150\n00:07:41.139 --> 00:07:43.911\nbecause it will go from\nthe center to the edge.\n\n151\n00:07:43.911 --> 00:07:46.982\nSo there's still some things we know\nabout right triangles there, but\n\n152\n00:07:46.982 --> 00:07:49.757\nI think that might be out of scope for\nwhat we're talking about.\n\n153\n00:07:49.757 --> 00:07:52.179\n&gt;&gt; Yeah, I actually started throwing\nout terms, and I'm like, wait,\n\n154\n00:07:52.179 --> 00:07:53.340\nwhich ones are which, I forgot.\n\n155\n00:07:53.340 --> 00:07:57.467\nAll that geometry's coming back,\nwhich I love, but I'm like I don't know\n\n156\n00:07:57.467 --> 00:08:00.964\nif I can actually identify [LAUGH]\nwhich is which right now [LAUGH].\n\n157\n00:08:00.964 --> 00:08:02.928\n&gt;&gt; Well, when in doubt, look it up, right?\n\n158\n00:08:02.928 --> 00:08:03.902\n&gt;&gt; There you go.\n\n159\n00:08:03.902 --> 00:08:07.782\n&gt;&gt; So let's move to, and Vonne,\nthis is something that, since you haven't\n\n160\n00:08:07.782 --> 00:08:11.970\nbeen here, I just wanna reiterate for you\nas well as all of those who are viewing,\n\n161\n00:08:11.970 --> 00:08:15.074\nI'm using some new JavaScript syntax,\nthose three dots.\n\n162\n00:08:15.074 --> 00:08:19.307\nThat essentially splits that apart and\nallows me to use variable names that\n\n163\n00:08:19.307 --> 00:08:23.873\nare xy coordinate, kind of ordered pairs\nand then they just fill in but it's a lot\n\n164\n00:08:23.873 --> 00:08:28.770\nmore readable to me than you know, getting\nthe zero element, the first element.\n\n165\n00:08:28.770 --> 00:08:33.860\nSo, I just dot, dot, dot and\nI want to move to the top left, okay.\n\n166\n00:08:33.860 --> 00:08:39.697\nAnd then I'm going to\nLineTo the center and\n\n167\n00:08:39.697 --> 00:08:44.723\nthen the CTX and LineTo, let's move\n\n168\n00:08:44.723 --> 00:08:49.924\nup a little bit, the midLeft, okay?\n\n169\n00:08:49.924 --> 00:08:55.016\nSo I found it a lot more readable on just\nrandom numbers, so on and so forth and\n\n170\n00:08:55.016 --> 00:08:59.886\nthen if we save this if we come back and\nwe refresh, nothing's working.\n\n171\n00:08:59.886 --> 00:09:05.449\nWell, you gotta make sure that you\nactually stroke or fill the triangle,\n\n172\n00:09:05.449 --> 00:09:09.576\notherwise things are gonna\nget a little out of hand so,\n\n173\n00:09:09.576 --> 00:09:12.463\nif I refresh, there is our triangle.\n\n174\n00:09:12.463 --> 00:09:17.395\nI started up here at the left, to the\nright and then right here it's down and\n\n175\n00:09:17.395 --> 00:09:22.093\nright to the center and then to\nthe mid-left and then I close this path,\n\n176\n00:09:22.093 --> 00:09:27.135\nwhich connects the ending point and\nthe beginning point where you started.\n\n177\n00:09:27.135 --> 00:09:29.842\nSo now I have this now,\nif I wanted to fill this in,\n\n178\n00:09:29.842 --> 00:09:32.045\nI just change the stroke to fill, okay?\n\n179\n00:09:32.045 --> 00:09:36.916\nNow I think in a previous episode I said\nsomething of it doesn't really matter,\n\n180\n00:09:36.916 --> 00:09:41.050\nclosePath, fill stroke,\nkind of which order they came in.\n\n181\n00:09:41.050 --> 00:09:46.795\nAnd just to show you, if I move this\ninside, I can actually do that,\n\n182\n00:09:46.795 --> 00:09:51.184\nand nothing change however, however,\nif you're getting a lot of shapes on\n\n183\n00:09:51.184 --> 00:09:55.730\nthe screen things like that, it actually\ndoesn't matter performance wise.\n\n184\n00:09:55.730 --> 00:09:58.670\nYou should draw all your pass and\nthen stroke them at once or\n\n185\n00:09:58.670 --> 00:10:04.040\nfill them at once if they're all uniformed\njust from a performance concern.\n\n186\n00:10:04.040 --> 00:10:09.240\nThat's not a concern of mine so\nit's kind of I'm okay either way but\n\n187\n00:10:09.240 --> 00:10:12.930\nI think from here on out,\nMolly's gonna draw the path and\n\n188\n00:10:12.930 --> 00:10:15.120\nthen stroke refill if possible.\n\n189\n00:10:15.120 --> 00:10:16.810\n&gt;&gt; That's kind of high\nwork in Illustrator.\n\n190\n00:10:16.810 --> 00:10:19.486\nSo, if you go ahead and\ndraw it and then you go ahead and\n\n191\n00:10:19.486 --> 00:10:23.128\nchange like how it actually looks like\nyou change the fill or the stroke.\n\n192\n00:10:23.128 --> 00:10:24.963\nI mean, this is right up my alley and\n\n193\n00:10:24.963 --> 00:10:28.711\nthis is exactly how it would do this\nin a vector program, so pretty cool.\n\n194\n00:10:28.711 --> 00:10:31.942\n&gt;&gt; We've got an expert,\nwe've got a possibly an expert,\n\n195\n00:10:31.942 --> 00:10:35.463\nyou decided which one is who,\nbut we now have this triangle.\n\n196\n00:10:35.463 --> 00:10:40.356\nAnd Vaughn, you actually alluded to\nsomething that there are three points that\n\n197\n00:10:40.356 --> 00:10:41.825\ndetermine a triangle.\n\n198\n00:10:41.825 --> 00:10:45.807\nNow, that's not the only way\nwe can determine a triangle.\n\n199\n00:10:45.807 --> 00:10:51.121\nWe can actually get Kinda two lines and\nthen some length along those lines.\n\n200\n00:10:51.121 --> 00:10:56.161\nYou can get a lot of ways, however I'm\ntalking from a geometric standpoint.\n\n201\n00:10:56.161 --> 00:10:58.401\n&gt;&gt; Yeah I was like, wait, two lines?\n\n202\n00:10:58.401 --> 00:11:01.609\nBut triangles have three,\nI'm like there are two lines and\n\n203\n00:11:01.609 --> 00:11:05.471\nthen the length between where\nthe endpoints are would make a triangle.\n\n204\n00:11:05.471 --> 00:11:06.319\n&gt;&gt; Yeah.\n\n205\n00:11:06.319 --> 00:11:07.999\n&gt;&gt; So I was like,\n&gt;&gt; Ok, I got it!\n\n206\n00:11:07.999 --> 00:11:12.256\n&gt;&gt; Technically there are two line segments\nbut possible to rice intersection point.\n\n207\n00:11:12.256 --> 00:11:16.645\nThere's a all bunch of ways, however I\nthink the most intuitive is the three\n\n208\n00:11:16.645 --> 00:11:20.828\npoints and just to show you that I'm\ngoing to do a little bit of drawing and\n\n209\n00:11:20.828 --> 00:11:24.603\nthen we're going to build\nthe abstractions for the triangles and\n\n210\n00:11:24.603 --> 00:11:26.680\nI'm going to show you all of these.\n\n211\n00:11:26.680 --> 00:11:30.760\nThis will come handy especially if i\nwant to draw triangles a lot right?\n\n212\n00:11:30.760 --> 00:11:31.950\nAnd I just wanna give\nit one of these points.\n\n213\n00:11:31.950 --> 00:11:34.491\nSo let's go ahead and come to the sky cam,\n\n214\n00:11:34.491 --> 00:11:37.910\nwe may have to center this up\na little bit and there we go.\n\n215\n00:11:37.910 --> 00:11:42.290\nWe're good to go and I have multi\ncoloured pens it's very handy.\n\n216\n00:11:42.290 --> 00:11:43.210\n&gt;&gt; Well I love colors.\n\n217\n00:11:43.210 --> 00:11:47.369\n&gt;&gt; Yeah, yeah, so\nlet's draw out our canvas here and\n\n218\n00:11:47.369 --> 00:11:51.336\njust to really emphasize,\nhow this is working so\n\n219\n00:11:51.336 --> 00:11:56.363\nright now my pen is not on the canvas but\nwhen I did that move two I\n\n220\n00:11:56.363 --> 00:12:01.436\ncame over here and my pen move too and\nkind of made a point here.\n\n221\n00:12:01.436 --> 00:12:06.727\nNow doesn't actually made\na point until I or anything and\n\n222\n00:12:06.727 --> 00:12:11.644\nthen I lined to the center and\nthen I line it to the mid-left.\n\n223\n00:12:11.644 --> 00:12:17.367\nSo effectively those three points define\na triangle because when I called stroke,\n\n224\n00:12:17.367 --> 00:12:21.138\nhe said well,\nthat assuming that I closed the path.\n\n225\n00:12:21.138 --> 00:12:25.748\n&gt;&gt; I just realized that those with the\ncoordinates that you gave up in the top\n\n226\n00:12:25.748 --> 00:12:29.829\nwere like that's the zero,\nthat's the 300, that's the or\n\n227\n00:12:29.829 --> 00:12:32.564\nthe actual like, yes we did 600 right?\n\n228\n00:12:32.564 --> 00:12:37.299\n&gt;&gt; Yap, so this is 600 by 400 this is\nthe centre which is 300, and 200 down.\n\n229\n00:12:37.299 --> 00:12:39.768\nSo then when I call is close path, and\n\n230\n00:12:39.768 --> 00:12:45.037\nthen stroke the close path actually\ncloses this, and then when I call stroke.\n\n231\n00:12:45.037 --> 00:12:50.083\nIt goes okay, I'll disconnect those points\ntogether with this line segments so\n\n232\n00:12:50.083 --> 00:12:54.661\nthe three points dictate\n&gt;&gt; A triangle now even though this is\n\n233\n00:12:54.661 --> 00:13:01.320\nscalene, if I'm not mistaken, I may have\nto correct that, this is a right triangle.\n\n234\n00:13:01.320 --> 00:13:05.801\nAnd really, any three points define\na triangle and just to show you,\n\n235\n00:13:05.801 --> 00:13:09.743\ndon't necessarily have these coordinates,\ndecided, but\n\n236\n00:13:09.743 --> 00:13:13.389\nif I come over here with\nthe appropriately colored pen.\n\n237\n00:13:13.389 --> 00:13:17.778\nAnd let's just say I create a point\nhere and then I line to here and\n\n238\n00:13:17.778 --> 00:13:21.781\nthen I line to here, right,\nthat's still three points.\n\n239\n00:13:21.781 --> 00:13:26.658\nIf I close the path, this is my\nstarting point, and then I call stroke.\n\n240\n00:13:26.658 --> 00:13:29.608\nConnect the lines, connect the lines,\nconnect the lines.\n\n241\n00:13:29.608 --> 00:13:34.072\nSo as long as I have three points, I can\ndraw pretty much any type of triangle, and\n\n242\n00:13:34.072 --> 00:13:36.580\nI think that's an easy\nway to think about it.\n\n243\n00:13:36.580 --> 00:13:40.552\nHowever, it does require a little bit of\nthought, especially if you're drawing\n\n244\n00:13:40.552 --> 00:13:43.214\na bunch of triangles together,\nor you need to do that.\n\n245\n00:13:43.214 --> 00:13:48.175\nNow, there are some programmatic ways\nto segment and change colors and\n\n246\n00:13:48.175 --> 00:13:52.558\nthings like that but\nlet's build an abstraction that will hide\n\n247\n00:13:52.558 --> 00:13:56.630\naway all of that, and\njust see I created a triangle.\n\n248\n00:13:56.630 --> 00:13:58.390\nWe have fill red and we have line two,\n\n249\n00:13:58.390 --> 00:14:02.480\nit would almost be nice if I had\nlike dot triangle and dot art.\n\n250\n00:14:03.650 --> 00:14:04.601\nbasic curves or\n\n251\n00:14:04.601 --> 00:14:09.000\nquadratic curves, dot triangle that\nwould be awesome simply don't.\n\n252\n00:14:09.000 --> 00:14:13.868\nBut we can build our own that is\nkind of an approximation for that.\n\n253\n00:14:13.868 --> 00:14:15.317\n&gt;&gt; And just to let you know,\n\n254\n00:14:15.317 --> 00:14:19.674\na scalene triangle is a triangle that\nhas unequal sides so you are correct.\n\n255\n00:14:19.674 --> 00:14:24.213\n&gt;&gt; All right I feel good this morning\nthat I'm, I'm actually correct,\n\n256\n00:14:24.213 --> 00:14:27.445\nmy math brain hasn't completely gone away.\n\n257\n00:14:27.445 --> 00:14:29.781\nSo let's go ahead an build\none of those abstractions.\n\n258\n00:14:29.781 --> 00:14:35.064\nAnd then we can see that now we can just\ncall it this same function Bunch of times.\n\n259\n00:14:35.064 --> 00:14:39.857\nAnd maybe even pull out a further\nabstraction to really nail this down.\n\n260\n00:14:39.857 --> 00:14:44.220\nSo we come back to my screen and\nwe come over here this is kind of a pain.\n\n261\n00:14:44.220 --> 00:14:47.488\nThis is essentially\nthe definition of a triangle,\n\n262\n00:14:47.488 --> 00:14:52.130\nother than the fact we have filler\nstroke now that could change, right?\n\n263\n00:14:52.130 --> 00:14:56.757\nSo let's build a fill triangle kinda\nlike fillrect and stroke rect,\n\n264\n00:14:56.757 --> 00:15:01.159\nif we do those two,\nwe're gonna see that they're really close.\n\n265\n00:15:01.159 --> 00:15:06.172\nSo I'm gonna leave this,\njust as a reminder but now I'm going to,\n\n266\n00:15:06.172 --> 00:15:11.649\napparently, delete a bunch of stuff,\nnow I'm going to build a function\n\n267\n00:15:14.115 --> 00:15:18.945\nAnd let's just call it, no, let's follow\na similar convention fillTriangle and\n\n268\n00:15:18.945 --> 00:15:21.852\nwhat is necessary in order\nto draw said triangle?\n\n269\n00:15:21.852 --> 00:15:26.925\nWell, I think instead of this being\npart of the context object, all right,\n\n270\n00:15:26.925 --> 00:15:32.078\nthis drawing context, instead of being\nin ctx dot, we're always gonna have\n\n271\n00:15:32.078 --> 00:15:37.259\nto pass in the context and let's just\nsay that's the first argument, okay?\n\n272\n00:15:37.259 --> 00:15:38.985\nNow, after that what do we need?\n\n273\n00:15:38.985 --> 00:15:41.771\nWe need point1, point2,\n\n274\n00:15:41.771 --> 00:15:47.461\npoint3 now I could separate\nthese into x1y1, x2y2,\n\n275\n00:15:47.461 --> 00:15:52.337\nx3y3 however,\nI'm always going to use the da,\n\n276\n00:15:52.337 --> 00:15:56.996\nda, dat kinda separation but\nrestructuring.\n\n277\n00:15:56.996 --> 00:16:00.198\nSo this is an API that I'm deciding for\nmyself, so\n\n278\n00:16:00.198 --> 00:16:04.927\nthat's what we're gonna go with, and\nnow if we have those three points,\n\n279\n00:16:04.927 --> 00:16:08.588\n[SOUND], guess what,\nwe gonna just say ctx, begin path,\n\n280\n00:16:08.588 --> 00:16:12.781\nnow now this ctx inside of here,\nis the ctx that is scoped to this,\n\n281\n00:16:12.781 --> 00:16:17.016\nthis function, so don't,\nthey're not necessarily the same.\n\n282\n00:16:17.016 --> 00:16:20.889\nThey could be different ones or\nI could even fake it.\n\n283\n00:16:20.889 --> 00:16:25.690\nBut I'm gonna say beginPath();\n\n284\n00:16:25.690 --> 00:16:35.294\nctx.moveTo(...point1);\nctx.lineTo(...point2),\n\n285\n00:16:35.294 --> 00:16:40.734\nexcuse me, I gotta destructure there,\n\n286\n00:16:40.734 --> 00:16:48.102\npoint2, and then ctx.lineTo(...point3).\n\n287\n00:16:48.102 --> 00:16:53.262\nctx.closePath; and then ctx.fill.\n\n288\n00:16:53.262 --> 00:16:58.065\nNow there are no options in this function\nfor changing color or anything like that.\n\n289\n00:16:58.065 --> 00:17:03.459\nThis is very low level, however, this\ndoes kind of pull this into a function,\n\n290\n00:17:03.459 --> 00:17:07.544\nso I can just call it multiple times,\nand to prove my point,\n\n291\n00:17:07.544 --> 00:17:10.978\nI'm gonna draw multiple triangles and\nshow you,\n\n292\n00:17:10.978 --> 00:17:15.259\nthere's nothing on the screen,\nnothing in my sleeves here.\n\n293\n00:17:15.259 --> 00:17:17.827\nI'm gonna draw a couple\nof filled triangles.\n\n294\n00:17:17.827 --> 00:17:21.587\nI'm coming below this, because of how\nI defined the function definition,\n\n295\n00:17:21.587 --> 00:17:23.831\nI have to be below the function so\nI can use it.\n\n296\n00:17:23.831 --> 00:17:27.946\nSo fillTriangle, and I'm gonna go\nahead and give it the current ctx,\n\n297\n00:17:27.946 --> 00:17:29.285\nthe current context.\n\n298\n00:17:29.285 --> 00:17:34.309\nNow, I'm passing in this variable,\nwhich actually maps to this variable,\n\n299\n00:17:34.309 --> 00:17:37.092\nand just to relieve some of the confusion,\n\n300\n00:17:37.092 --> 00:17:41.064\nI'm actually gonna say context,\njust remove the same use.\n\n301\n00:17:41.064 --> 00:17:45.037\nMakes sense to me, but it may not make\nsense to you, and then, what point?\n\n302\n00:17:45.037 --> 00:17:50.823\nWell, let's just keep topLeft,\n\n303\n00:17:50.823 --> 00:17:54.219\ncenter, midLeft.\n\n304\n00:17:54.219 --> 00:17:55.235\nThere we go.\n\n305\n00:17:55.235 --> 00:17:59.567\nSo now if I had this in another file,\nor had this defined somewhere,\n\n306\n00:17:59.567 --> 00:18:03.067\nfillTriangle(cx, topLeft,\ncenter, midLeft).\n\n307\n00:18:03.067 --> 00:18:06.248\nI was gonna see if it actually works,\nand then thank, it does.\n\n308\n00:18:06.248 --> 00:18:10.839\nSo I kind of pulled out this abstraction,\nand by doing so,\n\n309\n00:18:10.839 --> 00:18:16.101\nI can now say, fillTriangle(topRight,\ncenter, midRight).\n\n310\n00:18:18.054 --> 00:18:23.603\nMaybe, here we go, and boom,\nnow I have another triangle.\n\n311\n00:18:23.603 --> 00:18:28.790\nNow, what if I say\nfillTriangle(bottomRight, center,\n\n312\n00:18:28.790 --> 00:18:35.429\nmidRight), and now, these two triangles\nbutt up against each other, and\n\n313\n00:18:35.429 --> 00:18:42.505\nactually end up making another triangle,\nbut these are, in fact, two pieces.\n\n314\n00:18:42.505 --> 00:18:47.504\nSo by doing that, I find this\nto be a lot more readable about\n\n315\n00:18:47.504 --> 00:18:51.585\nmy intention than ctx begin path,\nctx move to,\n\n316\n00:18:51.585 --> 00:18:55.582\nctx line to, ctx line to,\nthose type things.\n\n317\n00:18:55.582 --> 00:18:59.509\nNow, [COUGH] you may be wondering, well,\nwhat if I don't want a filled triangle?\n\n318\n00:18:59.509 --> 00:19:04.139\nWell, luckily, and\njust in the sake of time here,\n\n319\n00:19:04.139 --> 00:19:08.987\nI'm just gonna duplicate this and\ncall this stroke,\n\n320\n00:19:08.987 --> 00:19:12.769\nand change this to stroke, just like so.\n\n321\n00:19:12.769 --> 00:19:16.386\nOkay, so if I, well,\nrefreshing there doesn't change anything.\n\n322\n00:19:18.699 --> 00:19:24.121\nLet's try that one more time,\nstrokeTriangle,\n\n323\n00:19:24.121 --> 00:19:29.296\nand refresh, and\nnow I have just the outlines.\n\n324\n00:19:29.296 --> 00:19:32.893\nThat actually follows the same\nAPI as fillrect and strokerect.\n\n325\n00:19:32.893 --> 00:19:35.413\nNow, if we come back,\njust a little added bonus,\n\n326\n00:19:35.413 --> 00:19:38.833\nif you're interested about programming,\nand the languages, and\n\n327\n00:19:38.833 --> 00:19:41.957\nbuilding some of these abstractions,\na little added bonus.\n\n328\n00:19:41.957 --> 00:19:48.938\nWhen you look at built a fillTriangle and\nstrokeTriangle, they're exactly the same,\n\n329\n00:19:48.938 --> 00:19:53.674\nexcept for one line, and\nthat's fill and stroke, right?\n\n330\n00:19:53.674 --> 00:19:56.410\nSo if I see this, when I'm programming,\n\n331\n00:19:56.410 --> 00:20:01.414\nthis makes me think there's probably\nanother way that I could define this,\n\n332\n00:20:01.414 --> 00:20:06.120\nand get this a little easier, and\nthis is gonna be a little heavy Vonne.\n\n333\n00:20:06.120 --> 00:20:11.201\nSo I'm gonna fore warn you, this is some\nprogrammatic kind of magic, but I think\n\n334\n00:20:11.201 --> 00:20:16.150\nit might help reduce the amount of code\nthat you have to upkeep in coming times.\n\n335\n00:20:16.150 --> 00:20:19.189\n&gt;&gt; Yeah, I could feel this coming on, cuz\nI'm like there's a lot of duplicates here.\n\n336\n00:20:19.189 --> 00:20:23.164\nI bet you can kind of just like put it all\ntogether with some you know just poof,\n\n337\n00:20:23.164 --> 00:20:23.788\nhere we go.\n\n338\n00:20:23.788 --> 00:20:24.719\nSo I'm ready.\n\n339\n00:20:24.719 --> 00:20:26.924\n&gt;&gt; Yeah, and we are going to do that.\n\n340\n00:20:26.924 --> 00:20:31.312\nSo I'm gonna create\na general triangle function.\n\n341\n00:20:31.312 --> 00:20:36.903\nExcept this triangle function is going\nto take a, let's call it a method,\n\n342\n00:20:36.903 --> 00:20:41.984\nand this method is going to be stroke or\nfill, and it has to be those.\n\n343\n00:20:41.984 --> 00:20:46.666\nWe're not gonna do any error checking,\njust in the sake of time, but\n\n344\n00:20:46.666 --> 00:20:51.831\nit has to be stroke or fill, because\nthose are the methods that I want to use,\n\n345\n00:20:51.831 --> 00:20:56.841\nand then we're gonna return another\nfunction that takes the (context,\n\n346\n00:20:56.841 --> 00:21:02.090\npoint1, point2, point3), and now,\nif I actually define this right,\n\n347\n00:21:02.090 --> 00:21:07.008\nwe have these two arrows, and\nthis is a function returning a function.\n\n348\n00:21:07.008 --> 00:21:11.248\nSo this is a factory function for\nfunctions.\n\n349\n00:21:11.248 --> 00:21:17.297\nIt's gonna create a bunch of other\nfunctions, and I'm just gonna copy and\n\n350\n00:21:17.297 --> 00:21:21.713\npaste just like so,\nexcept instead of fill or stroke,\n\n351\n00:21:21.713 --> 00:21:28.070\nI'm gonna use the array like syntax,\nto use whatever method it's passed in.\n\n352\n00:21:28.070 --> 00:21:33.547\nNow by doing so,\nI can actually come and remove this,\n\n353\n00:21:33.547 --> 00:21:38.559\nand just say, this is a triangle('fill').\n\n354\n00:21:38.559 --> 00:21:42.629\nAll right, and then likewise,\n\n355\n00:21:42.629 --> 00:21:48.674\nstrokeTriangle = triangle('stroke').\n\n356\n00:21:48.674 --> 00:21:52.384\nSo now I have one function that\ndefines how to draw a triangle and\n\n357\n00:21:52.384 --> 00:21:57.217\nthen I've kind of abstracted that to use\na different method depending on whether I\n\n358\n00:21:57.217 --> 00:21:58.491\nwant fill or stroke.\n\n359\n00:21:58.491 --> 00:22:04.944\nSo now, just to show you,\nI'm gonna console.log(fillTriangle),\n\n360\n00:22:04.944 --> 00:22:09.932\nand refresh, and\nnotice it is actually this function.\n\n361\n00:22:09.932 --> 00:22:13.266\nIt'll show you the actual function output.\n\n362\n00:22:13.266 --> 00:22:19.308\nSo, it's exactly the same for both, except\nthe method is different based on fill or\n\n363\n00:22:19.308 --> 00:22:25.198\nstroke, and if you notice, when I refresh\nit still draws the stroked triangles.\n\n364\n00:22:25.198 --> 00:22:29.018\nEverything's exactly the same,\nbut now if I wanted to come and\n\n365\n00:22:29.018 --> 00:22:33.556\nchange these variable names point one,\npoint two, point three, to ABC,\n\n366\n00:22:33.556 --> 00:22:37.521\nto more accurately reflect some\ndocumentation, or something,\n\n367\n00:22:37.521 --> 00:22:41.845\nI only have to change it in one place for\nthe general triangle function,\n\n368\n00:22:41.845 --> 00:22:46.816\ninstead of all of them, and let's just\nmake sure that fill actually still works,\n\n369\n00:22:46.816 --> 00:22:51.540\ncuz that would be egg on my face, and\nrefresh, and it in fact, it still does.\n\n370\n00:22:51.540 --> 00:22:55.285\nSo I get three functions, and\nI really only had to write one,\n\n371\n00:22:55.285 --> 00:22:57.133\nwith a little bit of thought.\n\n372\n00:22:57.133 --> 00:23:00.190\nBut I wrote the original ones\nfirst to kind of plan and\n\n373\n00:23:00.190 --> 00:23:03.049\nunderstand what patterns\nare kind of coming up.\n\n374\n00:23:03.049 --> 00:23:06.567\n&gt;&gt; Yeah, it's like you globalize it, and\nthe way that I'm using my terminology,\n\n375\n00:23:06.567 --> 00:23:07.408\nyou globalize it.\n\n376\n00:23:07.408 --> 00:23:09.346\nTriangles are always\ngoing to be triangles.\n\n377\n00:23:09.346 --> 00:23:10.583\nThey're always going to be three points.\n\n378\n00:23:10.583 --> 00:23:13.382\nYou can't have four points, or two points.\n\n379\n00:23:13.382 --> 00:23:17.153\nIt's always gonna be this, and then you\njust change the little bits that you need\n\n380\n00:23:17.153 --> 00:23:19.774\nto be able to, so\nI actually followed that pretty well.\n\n381\n00:23:19.774 --> 00:23:20.926\nI'm pretty proud of myself over here.\n\n382\n00:23:20.926 --> 00:23:23.884\n[LAUGH]\n&gt;&gt; Exactly, and this method is,\n\n383\n00:23:23.884 --> 00:23:28.765\nI just picked method, but\nyou really could have options.\n\n384\n00:23:28.765 --> 00:23:32.643\nWhere you pass on an object\nwith maybe a color,\n\n385\n00:23:32.643 --> 00:23:37.429\nmaybe something else,\nmaybe you have your method type.\n\n386\n00:23:37.429 --> 00:23:40.812\nSo you can kind of figure that out, and\nthen by passing in different options,\n\n387\n00:23:40.812 --> 00:23:43.415\nyou get different functions\nthat behave differently, but\n\n388\n00:23:43.415 --> 00:23:45.877\nthey are still all triangles,\nso that's really nice.\n\n389\n00:23:45.877 --> 00:23:49.197\nNow Vonne, I wanted to show you how to\nkind of pull this apart into a few other\n\n390\n00:23:49.197 --> 00:23:52.649\nshapes, but I think we're definitely\nrunning out of time for this episode.\n\n391\n00:23:52.649 --> 00:23:56.592\nMaybe come back for a little bit,\nmight be a shorter episode, too, but\n\n392\n00:23:56.592 --> 00:24:00.274\nthat way we can see maybe some\nother type polygons, closed paths,\n\n393\n00:24:00.274 --> 00:24:04.254\nother than triangles, because they\ndo get a little more complicated.\n\n394\n00:24:04.254 --> 00:24:07.606\n&gt;&gt; Well, Justin,\nI'm excited to go down this path with you,\n\n395\n00:24:07.606 --> 00:24:09.160\nbecause I'm on this path.\n\n396\n00:24:09.160 --> 00:24:12.254\nI'm totally getting it, so I'm excited\nto come back for a part two, but\n\n397\n00:24:12.254 --> 00:24:14.667\nthank you so much for\neverything that you've shown us.\n\n398\n00:24:14.667 --> 00:24:16.340\nBut for now,\nwe're gonna go ahead and sign off.\n\n399\n00:24:16.340 --> 00:24:18.691\nFor DevProTV,\nI've been your host, Vonne Smith.\n\n400\n00:24:18.691 --> 00:24:19.491\n&gt;&gt; And I'm Justin Dennison.\n\n401\n00:24:19.491 --> 00:24:21.223\n&gt;&gt; And we'll see you soon.\n\n402\n00:24:21.223 --> 00:24:26.730\n[MUSIC]\n\n",
          "vimeoId": "232662752"
        },
        {
          "description": "In this episode, Vonne and Justin explore the creation of more advances shapes using drawing primitives (lines!) from the previous episodes. Justin demonstrates the thought process and implementation of hexagon drawing function.",
          "length": "1614",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-html5canvasgraphicsandanimation/techskills-html5canvasgraphicsandanimations-4-1-2-creating_other_shapes_pt2-090517.00_26_45_06.Still001.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-html5canvasgraphicsandanimation/techskills-html5canvasgraphicsandanimations-4-1-2-creating_other_shapes_pt2-090517.00_26_45_06.Still001-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-html5canvasgraphicsandanimation/techskills-html5canvasgraphicsandanimations-4-1-2-creating_other_shapes_pt2-090517.00_26_45_06.Still001-sm.jpg",
          "title": "Creating Other Shapes Part 2",
          "transcript": "",
          "vimeoId": "232662296"
        },
        {
          "description": "In this episode, Vonne and Justin explore changing some of the styles and colors of elements drawn in the HTML5 Canvas. In particular, Justin demonstrates changing the color of lines, altering the cap and joins of lines, as well as how to change the line dashing property.",
          "length": "1911",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-html5canvasgraphicsandanimation/techskills-html5canvasgraphicsandanimations-5-1-1-drawing_styles_and_colors-090617-PGM.00_32_27_04.Still001.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-html5canvasgraphicsandanimation/techskills-html5canvasgraphicsandanimations-5-1-1-drawing_styles_and_colors-090617-PGM.00_32_27_04.Still001-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-html5canvasgraphicsandanimation/techskills-html5canvasgraphicsandanimations-5-1-1-drawing_styles_and_colors-090617-PGM.00_32_27_04.Still001-sm.jpg",
          "title": "Drawing Styles and Colors",
          "transcript": "",
          "vimeoId": "232987899"
        },
        {
          "description": "In this episode, Vonne and Justin explore changing some of the styles and colors of elements drawn in the HTML5 Canvas. In particular, Justin demonstrates changing the fill color including transparencies of filled figures as well as demonstrating some \"gotchas\" when using stroke and fill styles together.",
          "length": "900",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-html5canvasgraphicsandanimation/techskills-html5canvasgraphicsandanimations-5-1-2-drawing_styles_and_colors_pt2-090617-PGM.00_21_51_17.Still001.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-html5canvasgraphicsandanimation/techskills-html5canvasgraphicsandanimations-5-1-2-drawing_styles_and_colors_pt2-090617-PGM.00_21_51_17.Still001-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-html5canvasgraphicsandanimation/techskills-html5canvasgraphicsandanimations-5-1-2-drawing_styles_and_colors_pt2-090617-PGM.00_21_51_17.Still001-sm.jpg",
          "title": "Drawing Styles and Colors Part 2",
          "transcript": "",
          "vimeoId": "232988572"
        },
        {
          "description": "In this episode, Vonne and Justin explore the drawing of text on the canvas element.  Additionally, Justin demonstrates the changing of attributes of the context object to draw text with varying placements and styles.",
          "length": "1914",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-html5canvasgraphicsandanimation/techskills-html5canvasgraphicsandanimations-6-1-drawing_text-090817-PGM.00_31_45_01.Still001.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-html5canvasgraphicsandanimation/techskills-html5canvasgraphicsandanimations-6-1-drawing_text-090817-PGM.00_31_45_01.Still001-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-html5canvasgraphicsandanimation/techskills-html5canvasgraphicsandanimations-6-1-drawing_text-090817-PGM.00_31_45_01.Still001-sm.jpg",
          "title": "Drawing Text",
          "transcript": "",
          "vimeoId": "233500140"
        },
        {
          "description": "In this episode, Vonne and Justin explore the drawing of gradiens on the canvas element. Justin demonstrates the creation and usage of linear gradient objects.",
          "length": "1563",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-html5canvasgraphicsandanimation/techskills-html5canvasgraphicsandanimations-7-1-1-drawing_gradients-090817-PGM.00_25_54_00.Still001.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-html5canvasgraphicsandanimation/techskills-html5canvasgraphicsandanimations-7-1-1-drawing_gradients-090817-PGM.00_25_54_00.Still001-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-html5canvasgraphicsandanimation/techskills-html5canvasgraphicsandanimations-7-1-1-drawing_gradients-090817-PGM.00_25_54_00.Still001-sm.jpg",
          "title": "Drawing Gradients",
          "transcript": "",
          "vimeoId": "233500781"
        },
        {
          "description": "In this episode, Vonne and Justin explore the drawing of text on the canvas element. Justin demonstrates the creation and usage of radial gradient objects.",
          "length": "996",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-html5canvasgraphicsandanimation/techskills-html5canvasgraphicsandanimations-7-1-2-drawing_gradients_pt2-090817-PGM.00_16_26_22.Still001.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-html5canvasgraphicsandanimation/techskills-html5canvasgraphicsandanimations-7-1-2-drawing_gradients_pt2-090817-PGM.00_16_26_22.Still001-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-html5canvasgraphicsandanimation/techskills-html5canvasgraphicsandanimations-7-1-2-drawing_gradients_pt2-090817-PGM.00_16_26_22.Still001-sm.jpg",
          "title": "Drawing Gradients Part 2",
          "transcript": "WEBVTT\n\n1\n00:00:00.008 --> 00:00:05.088\n[SOUND] Hello everyone,\n\n2\n00:00:05.088 --> 00:00:11.946\nand welcome to another exciting\n\n3\n00:00:11.946 --> 00:00:16.775\nedition of DevPro TV.\n\n4\n00:00:16.775 --> 00:00:20.664\nI'm your host, Vonne Smith, and\nwe are coming back at you with more\n\n5\n00:00:20.664 --> 00:00:24.075\nin our HTML5 Canvas Graphics and\nAnimation series.\n\n6\n00:00:24.075 --> 00:00:28.250\nAnd we are, in this episode,\ndoing a part two of drawing gradients.\n\n7\n00:00:28.250 --> 00:00:30.480\nAnd here to help us is Mr.\nJustin Dennison.\n\n8\n00:00:30.480 --> 00:00:32.410\nHello, yet again.\n\n9\n00:00:32.410 --> 00:00:34.410\n&gt;&gt; Hello, Vonne,\nit is wonderful being back.\n\n10\n00:00:34.410 --> 00:00:37.130\nAnd this is a part two,\nprobably a little bit shorter.\n\n11\n00:00:37.130 --> 00:00:40.830\nBut I wanted to make sure that we had an\nappropriate amount of time because well,\n\n12\n00:00:40.830 --> 00:00:44.430\nI know Vonne, you might have a few\nmore questions than I'm prepared for.\n\n13\n00:00:44.430 --> 00:00:47.890\nAnd I may just run away in panic and\nthen we'll have to come back and fix this.\n\n14\n00:00:47.890 --> 00:00:49.655\n&gt;&gt; Just kinda like colors,\ncolors, more stuff.\n\n15\n00:00:49.655 --> 00:00:50.908\n&gt;&gt; [LAUGH]\n&gt;&gt; Let's see more colors, and\n\n16\n00:00:50.908 --> 00:00:51.793\nyou're like stop [LAUGH].\n\n17\n00:00:51.793 --> 00:00:52.803\n&gt;&gt; [LAUGH] Tell me a things.\n\n18\n00:00:52.803 --> 00:00:54.433\nBut yeah, radial gradients,\n\n19\n00:00:54.433 --> 00:00:57.530\nat the beginning they\nactually seem pretty simple.\n\n20\n00:00:57.530 --> 00:00:59.350\nThere are some weird things.\n\n21\n00:00:59.350 --> 00:01:04.964\nLike it doesn't make sense to me easily,\nso I wanted to really drill down on those.\n\n22\n00:01:04.964 --> 00:01:09.528\nBut the reasoning behind the how\nthe gradient is drawn does\n\n23\n00:01:09.528 --> 00:01:11.960\nchange from linear gradient.\n\n24\n00:01:11.960 --> 00:01:15.480\nEven though programatically it looks\nthe same, how you reason about them and\n\n25\n00:01:15.480 --> 00:01:18.610\nhow that actually happens is\na little bit different, okay?\n\n26\n00:01:18.610 --> 00:01:22.530\nSo let's go ahead and come back to my\nscreen here and see where we left off.\n\n27\n00:01:22.530 --> 00:01:25.080\nWe actually, this doesn't look too bad.\n\n28\n00:01:25.080 --> 00:01:29.710\nI'm probably gonna ramp up\nthe opacity on these colors just so\n\n29\n00:01:29.710 --> 00:01:31.720\nwe can see the transitions.\n\n30\n00:01:32.920 --> 00:01:36.080\nThat way, we're not like, well,\nis that the blue or the fuchsia?\n\n31\n00:01:36.080 --> 00:01:39.790\nI don't know, so\nthis is gonna get brighter.\n\n32\n00:01:39.790 --> 00:01:42.624\nBut let's come back over here and\nI have a lot of code here.\n\n33\n00:01:42.624 --> 00:01:47.633\nI'm actually just going to say,\nwhat I'm gonna cut that out,\n\n34\n00:01:47.633 --> 00:01:50.385\njust [SOUND] there we go that's it.\n\n35\n00:01:50.385 --> 00:01:56.239\nI am going to keep colors in rgba,\nI'm still gonna use those eventually.\n\n36\n00:01:56.239 --> 00:02:02.691\nBut let's start back with radial,\nI'm gonna create a radial grading,\n\n37\n00:02:02.691 --> 00:02:07.767\nand that is the exact same\nas createRadialGradient, and\n\n38\n00:02:07.767 --> 00:02:13.265\nwhen I say the exact same,\nit's still in the context object,\n\n39\n00:02:13.265 --> 00:02:17.420\nit still says create blank gradient.\n\n40\n00:02:17.420 --> 00:02:23.300\nHowever, for a radial gradient\nyou need six, yes six, arguments.\n\n41\n00:02:23.300 --> 00:02:25.490\nYou need the starting center,\nor excuse me.\n\n42\n00:02:25.490 --> 00:02:29.870\nYou need X Y,\nI'll show you it's actually easier.\n\n43\n00:02:29.870 --> 00:02:33.120\nThis is one of those where I recommend\nconsulting with the documentation,\n\n44\n00:02:33.120 --> 00:02:37.260\nmainly because it's gonna be\nhard to remember all of these.\n\n45\n00:02:38.800 --> 00:02:43.460\nThe x-axis of the coordinate of\nthe start circle, the y-axis of, so\n\n46\n00:02:43.460 --> 00:02:47.310\nit's actually the center of the first\ncircle, now what does that mean?\n\n47\n00:02:47.310 --> 00:02:48.880\nWe'll talk more about that.\n\n48\n00:02:48.880 --> 00:02:53.420\nAnd then, the r0,\nthe radius of the start circle, and\n\n49\n00:02:53.420 --> 00:02:57.000\nthen what radius out to,\nfrom the other circle.\n\n50\n00:02:57.000 --> 00:03:01.670\nNow we're gonna have to tweak around this\ncuz that just saying that out loud I was\n\n51\n00:03:01.670 --> 00:03:04.320\nlike man, I almost confused\nmyself saying it out loud.\n\n52\n00:03:04.320 --> 00:03:08.040\nI think that's one of those things where\nyou kinda start messing around and\n\n53\n00:03:08.040 --> 00:03:12.560\ntry to create spatial reasoning about\nwhat all six of these arguments do.\n\n54\n00:03:12.560 --> 00:03:14.490\nTypically these are gonna come in pairs,\nright,\n\n55\n00:03:14.490 --> 00:03:20.080\nthe zeroes indicate that these\nthree arguments I said pairs.\n\n56\n00:03:20.080 --> 00:03:22.710\nThese three arguments are a triple.\n\n57\n00:03:22.710 --> 00:03:25.170\nAnd then the other three\narguments kind of come together.\n\n58\n00:03:25.170 --> 00:03:28.000\nSo you can think of it that way and\nI'm actually gonna use some of\n\n59\n00:03:28.000 --> 00:03:31.090\nthe constants that we have\nin order to do it that way.\n\n60\n00:03:31.090 --> 00:03:32.600\nI wanna go back to red and\n\n61\n00:03:32.600 --> 00:03:37.652\ngreen Von, like we did in part one just\nto really see kind of those transitions.\n\n62\n00:03:37.652 --> 00:03:40.860\nWe're gonna add two color stops\nbecause you still need color stops.\n\n63\n00:03:40.860 --> 00:03:42.090\nBut where are we going to start?\n\n64\n00:03:42.090 --> 00:03:46.435\nLet's actually go to center and\nthen what radius do I want?\n\n65\n00:03:46.435 --> 00:03:49.440\nYou know what,\nlet's just start at like 100.\n\n66\n00:03:49.440 --> 00:03:55.140\nAnd then let's start at the center again,\nand go out to 300.\n\n67\n00:03:55.140 --> 00:03:59.650\nSo I like to think of circles\nkind of on top of each other.\n\n68\n00:03:59.650 --> 00:04:03.290\nThe centers are exactly the same,\nthe x and y rather, okay?\n\n69\n00:04:03.290 --> 00:04:08.730\nNow I'm gonna say radial.addColorStop,\n\n70\n00:04:08.730 --> 00:04:14.609\nand that's going to be, let's see here,\nwait a minute, 0, 'red'.\n\n71\n00:04:14.609 --> 00:04:22.864\nAnd radial.addColorStop\none green just like so.\n\n72\n00:04:22.864 --> 00:04:29.780\nAnd then, we have to set our bill style\nand you actually can do this with stroke.\n\n73\n00:04:29.780 --> 00:04:34.360\nIt's not as easy to see and it's kind of\nweird, so we are going to use fillStyle\n\n74\n00:04:34.360 --> 00:04:37.220\nto talk about gradient just because\nthat kind of makes the most sense to me.\n\n75\n00:04:38.240 --> 00:04:41.798\nCtx and then fillRect and\n\n76\n00:04:41.798 --> 00:04:46.034\nthen from the topLeft to the,\n\n77\n00:04:46.034 --> 00:04:51.123\nexcuse me, to the canvas.width,\n\n78\n00:04:53.544 --> 00:04:57.712\nAnd the canvas.height, just like so.\n\n79\n00:04:57.712 --> 00:05:02.260\nAll right, let's see if that actually\nplays in the refresh and there we go.\n\n80\n00:05:02.260 --> 00:05:06.860\nNow first off, we have two x, y's.\n\n81\n00:05:08.160 --> 00:05:11.890\nThat's kinda hard to reason about because\noriginally, for a linear gradient,\n\n82\n00:05:11.890 --> 00:05:13.740\nwe have a begin point and\nkind of an end point.\n\n83\n00:05:13.740 --> 00:05:17.800\nAnd that's how we move along and\nthe color stops are along this.\n\n84\n00:05:19.590 --> 00:05:20.500\nWhat about these circles?\n\n85\n00:05:20.500 --> 00:05:22.420\nWell, first off,\nlet's mess with the color stop,\n\n86\n00:05:22.420 --> 00:05:25.860\nsee if that still behaves\nlike we anticipate it to.\n\n87\n00:05:26.890 --> 00:05:29.140\nAnd it kind of pulls that in.\n\n88\n00:05:29.140 --> 00:05:35.800\nAnd that's because from 100 to 300\nis kinda like the transition zone.\n\n89\n00:05:35.800 --> 00:05:40.406\nAnd then we have a color stop\nthat is 0.2 along that, and\n\n90\n00:05:40.406 --> 00:05:43.790\nit transitions very quickly, all right?\n\n91\n00:05:43.790 --> 00:05:47.191\nOne thing I am going to do is,\nlet me draw a circle,\n\n92\n00:05:49.925 --> 00:05:54.680\nAt those respective places,\nbeginPath, and ctx.arc.\n\n93\n00:05:56.870 --> 00:06:01.875\nAnd I need an x and a y,\nso I need the center,\n\n94\n00:06:01.875 --> 00:06:07.592\nand I need the radius and\n0, Math.PI times 2.\n\n95\n00:06:07.592 --> 00:06:11.819\nI really wish I had some of those helper\nfunctions from previous episodes, but\n\n96\n00:06:11.819 --> 00:06:12.530\nthere we go.\n\n97\n00:06:12.530 --> 00:06:17.380\nAnd then this is going to be 300 and\nthen I'm going to say stroke, ctx stroke.\n\n98\n00:06:18.870 --> 00:06:22.041\nAnd I'm doing this afterwards so\nit will actually draw on top and\n\n99\n00:06:22.041 --> 00:06:26.410\nthen ctx.closePath.\n\n100\n00:06:26.410 --> 00:06:29.050\nAnd I think that'll get it done and\nthere we go.\n\n101\n00:06:29.050 --> 00:06:34.634\nSo I actually get a line and okay,\nthat's interesting, how long is that line?\n\n102\n00:06:34.634 --> 00:06:37.847\nWell, should be from 100 to 300.\n\n103\n00:06:39.097 --> 00:06:44.008\nAnd well, let's actually pull\nthese out into variables, r1, so\n\n104\n00:06:44.008 --> 00:06:48.590\nwe can just kind of tweak them and\nsee how they go, and then r2.\n\n105\n00:06:48.590 --> 00:06:53.990\nAnd that's 300, so this is gonna\n\n106\n00:06:56.100 --> 00:07:00.870\nbe r1, r2, r1, r2, and\n\n107\n00:07:00.870 --> 00:07:04.370\nnow, we still have the same thing,\nthat's fine.\n\n108\n00:07:04.370 --> 00:07:06.608\nBut let's move this down to 200.\n\n109\n00:07:08.618 --> 00:07:10.112\nAnd if we move it down,\n\n110\n00:07:10.112 --> 00:07:15.470\nit kinda the transition is only .2\nalong that 200 scape, 100 to 200.\n\n111\n00:07:15.470 --> 00:07:19.708\nWhat if we move it down pretty close.\n\n112\n00:07:20.922 --> 00:07:26.751\nLet's say 150, and then we're kind of\ngetting that, so this almost, if I cut\n\n113\n00:07:26.751 --> 00:07:32.350\noff those two circles, that almost looks\nlike a circle on top of a background.\n\n114\n00:07:32.350 --> 00:07:38.440\nSo having those spread out, that is the\ncenters over line each other, all right.\n\n115\n00:07:40.000 --> 00:07:42.740\nThat's where it gets weird,\n\n116\n00:07:42.740 --> 00:07:48.620\nis what if these centers aren't on\nthe same link, what if they're not, right?\n\n117\n00:07:48.620 --> 00:07:54.790\nSo what if I put this\nother one as the midRight,\n\n118\n00:07:54.790 --> 00:07:57.804\nand I'm gonna change this back to 300.\n\n119\n00:07:59.140 --> 00:08:05.680\nAnd I refresh and\nnow I got weirdness why is that?\n\n120\n00:08:05.680 --> 00:08:10.000\nSo what's being, let me rephrase that.\n\n121\n00:08:10.000 --> 00:08:11.570\nSo let's go back to the documentation.\n\n122\n00:08:13.080 --> 00:08:15.620\nThe x axis of the coordinate\nof the end circle.\n\n123\n00:08:15.620 --> 00:08:18.020\nWhat do you mean by beginning and end?\n\n124\n00:08:19.590 --> 00:08:24.940\nSo here's our beginning circle and,\nwhat I need to change this to reflect\n\n125\n00:08:28.770 --> 00:08:31.530\nmidRight, so\nwe can actually reason about this.\n\n126\n00:08:31.530 --> 00:08:36.172\nSo, see that kind of weird art that's\ndrawn and you get this little,\n\n127\n00:08:36.172 --> 00:08:38.184\nkind of, cut-out version.\n\n128\n00:08:38.184 --> 00:08:42.790\nSo you can do that, that's fine,\nthis is still kind of a radial gradient.\n\n129\n00:08:42.790 --> 00:08:44.610\nBut it's not how I think\nof radial gradients.\n\n130\n00:08:44.610 --> 00:08:48.440\nI don't know about you, Vonne, but I think\nof radial gradients as center over center,\n\n131\n00:08:48.440 --> 00:08:52.160\nand then they kind of graduate\nfrom in to outer, out to in,\n\n132\n00:08:52.160 --> 00:08:53.290\ndepending on your perspective.\n\n133\n00:08:53.290 --> 00:08:57.670\n&gt;&gt; Yeah, when you first said, like\nthere's two circles, I'm like wait, what?\n\n134\n00:08:57.670 --> 00:09:00.430\nI totally saw it once you drew the circle.\n\n135\n00:09:00.430 --> 00:09:03.504\nThat 100, that first color stop,\nI'm almost thinking like pixels,\n\n136\n00:09:03.504 --> 00:09:06.001\nI know that's not the measurement\nwe're using right now.\n\n137\n00:09:06.001 --> 00:09:09.102\nIt's 100 pixels from the center and\nthat's where the first stop goes and 300,\n\n138\n00:09:09.102 --> 00:09:10.680\nthat's where the next one goes.\n\n139\n00:09:10.680 --> 00:09:16.140\nSo to me, your center should always\noverlap if you want to achieve what we're\n\n140\n00:09:16.140 --> 00:09:21.480\nthinking in our mind as\na true radial gradient, and\n\n141\n00:09:21.480 --> 00:09:24.895\nit fully made sense in my little brain,\nso I'm excited about this.\n\n142\n00:09:24.895 --> 00:09:27.990\n[LAUGH]\n&gt;&gt; And I would say I have not seen, for me\n\n143\n00:09:27.990 --> 00:09:31.970\nin my experience, I have not seen radial\ngradients used in this capacity as much.\n\n144\n00:09:31.970 --> 00:09:36.673\n&gt;&gt; But it's good to demonstrate the point\nof like you kinda need those center points\n\n145\n00:09:36.673 --> 00:09:38.440\nto be the same.\n\n146\n00:09:38.440 --> 00:09:45.250\n&gt;&gt; Like you said, you can, but the result\nis not what you might be expecting.\n\n147\n00:09:45.250 --> 00:09:47.710\n&gt;&gt; Exactly.\n&gt;&gt; In a sense of making a radial gradient.\n\n148\n00:09:47.710 --> 00:09:52.050\n&gt;&gt; Exactly, so we get kind of this weird\ntangent line to these respective circles\n\n149\n00:09:52.050 --> 00:09:56.810\nand you get some kind of\nput-off undrawn portions.\n\n150\n00:09:56.810 --> 00:09:59.620\nSo I show you that because if you\never see that when you're drawing and\n\n151\n00:09:59.620 --> 00:10:03.370\nyou want the kinda what I\nthink of as a radial gradient.\n\n152\n00:10:03.370 --> 00:10:07.046\nI would always check and make sure that\nthose two points are exactly the same.\n\n153\n00:10:07.046 --> 00:10:10.657\nYour radii can change, as we've seen, but\n\n154\n00:10:10.657 --> 00:10:14.169\nyour points they should\nbe I tend to think,\n\n155\n00:10:14.169 --> 00:10:19.260\nyeah actually I have to change\nthe other one so it makes sense.\n\n156\n00:10:20.620 --> 00:10:24.950\nIf we come back here,\nthen now you have that expanse.\n\n157\n00:10:24.950 --> 00:10:28.548\nBut they're center over center, and then\nwe're transitioning from in to out, and\n\n158\n00:10:28.548 --> 00:10:31.753\nI think that's a lot easier to reason\nabout than moving them the other way.\n\n159\n00:10:31.753 --> 00:10:37.030\n&gt;&gt; Yeah, and if you want that red to\nnot be as, to me, I'm thinking wide.\n\n160\n00:10:37.030 --> 00:10:39.650\n&gt;&gt; You would make that 100 be like 20 or\n30,\n\n161\n00:10:39.650 --> 00:10:44.200\nand then that way the red is\nnot as expansive in the center.\n\n162\n00:10:44.200 --> 00:10:46.230\n&gt;&gt; Let's go 10, let's go big or\ngo home kinda thing.\n\n163\n00:10:46.230 --> 00:10:49.820\nAnd then it kinda pulls down and\ntransitions out.\n\n164\n00:10:49.820 --> 00:10:52.660\nAnd if you want that, that's one way, but\n\n165\n00:10:52.660 --> 00:10:55.786\nyou can also set the stop\na little further along.\n\n166\n00:10:55.786 --> 00:11:00.140\nBetween the extent so you can, but\nnotice it's not a hard line now.\n\n167\n00:11:01.460 --> 00:11:04.120\nIt's you kind of, it's almost like\na gaussian blur or something like that.\n\n168\n00:11:04.120 --> 00:11:06.100\n&gt;&gt; Yeah.\n&gt;&gt; It's the amount of blending or\n\n169\n00:11:06.100 --> 00:11:08.960\ngradiation that you want and\nin illustrator or\n\n170\n00:11:08.960 --> 00:11:10.420\nany other programs you have here,\nyour stuff.\n\n171\n00:11:10.420 --> 00:11:14.100\nAnd then there's a little diamond in\nbetween, where you can drag it this way or\n\n172\n00:11:14.100 --> 00:11:17.750\nthat way,\nto where there's a harder gradient, or\n\n173\n00:11:17.750 --> 00:11:21.760\na harder blend,\nversus a more smooth, smoother.\n\n174\n00:11:21.760 --> 00:11:22.300\n&gt;&gt; Yeah.\n\n175\n00:11:22.300 --> 00:11:23.625\n&gt;&gt; Transition of colors [CROSSTALK].\n\n176\n00:11:23.625 --> 00:11:26.886\n&gt;&gt; So the further along the more smoothly\nthose colors are gonna transition\n\n177\n00:11:26.886 --> 00:11:27.933\nto each other.\n\n178\n00:11:27.933 --> 00:11:31.930\nNow, now that I've shown that, does it\nstill apply what we saw with the linear\n\n179\n00:11:31.930 --> 00:11:36.685\ngradient about we can get a bunch of\ncolor stops and get kind of differences.\n\n180\n00:11:36.685 --> 00:11:40.520\nWe can, I'm gonna show you equally spaced\nintervals which does mean that if I\n\n181\n00:11:40.520 --> 00:11:45.600\nhave a bunch of them then I'm gonna get\nharder blending edges Than I am if I have\n\n182\n00:11:45.600 --> 00:11:47.710\nfewer of them that are equally spaced,\n\n183\n00:11:47.710 --> 00:11:51.570\nwhich gives me a larger extent to\ntransition from one color to the next.\n\n184\n00:11:51.570 --> 00:11:59.060\nSo do keep that in mind, there's some\nweird design kinda graphic concerns.\n\n185\n00:11:59.060 --> 00:12:02.030\nThis is about programmatically\ncreating gradients.\n\n186\n00:12:02.030 --> 00:12:07.516\nSo I'm more into,\nyou know what I'm just gonna say, nope.\n\n187\n00:12:07.516 --> 00:12:12.070\nExcept for these two pieces right here.\n\n188\n00:12:12.070 --> 00:12:14.790\nOkay, so I'm gonna keep that,\nI'm gonna keep the gradient.\n\n189\n00:12:14.790 --> 00:12:18.340\nBut, I like these colors.\n\n190\n00:12:18.340 --> 00:12:20.657\nSo I'm still gonna use these colors.\n\n191\n00:12:20.657 --> 00:12:26.370\nI'm gonna say colors.forEach and\nfor each color, index.\n\n192\n00:12:26.370 --> 00:12:29.650\nAnd this is just, more or\nless a review except,\n\n193\n00:12:29.650 --> 00:12:34.330\nthe one thing I'm going to do is\nI'm gonna modify these just to see.\n\n194\n00:12:34.330 --> 00:12:38.802\nI'm gonna change these\nall back to 100% opacity.\n\n195\n00:12:38.802 --> 00:12:43.000\nAnd that way we can see\nvery distinct colors.\n\n196\n00:12:43.000 --> 00:12:48.778\nAnd I'm going to say radial.addColorStop\n\n197\n00:12:48.778 --> 00:12:52.650\nat index divided by\n\n198\n00:12:52.650 --> 00:12:57.910\ncolors.length which is\nagain exactly what we did.\n\n199\n00:12:57.910 --> 00:13:05.280\nAnd what color careful we need\nrgba dash,dash,dash color because\n\n200\n00:13:05.280 --> 00:13:10.630\nthese are it's a list of four numbers\nthat represent their respective color and\n\n201\n00:13:10.630 --> 00:13:14.350\nI think that actually should put\nthat in there if I'm not mistaken.\n\n202\n00:13:14.350 --> 00:13:17.310\nSo I just put this inline whereas\nbefore if we came here and\n\n203\n00:13:17.310 --> 00:13:21.540\nlook I actually brought that up under\ntwo lines either way is acceptable.\n\n204\n00:13:21.540 --> 00:13:24.320\nI tend to like intermediate variables but\n\n205\n00:13:24.320 --> 00:13:29.387\nmaybe you're good with readability\nthere they come and boom.\n\n206\n00:13:29.387 --> 00:13:32.788\nSo that's, actually kind of eye hurting.\n\n207\n00:13:32.788 --> 00:13:34.606\n&gt;&gt; Yeah, my eyes just like whoa hello,\n[LAUGH].\n\n208\n00:13:34.606 --> 00:13:38.280\n&gt;&gt; Yeah, but If you wanted to get\npeople's attention, boom, you have it.\n\n209\n00:13:38.280 --> 00:13:43.520\nSo, we started the smaller circle and\nwe go out to this larger circle.\n\n210\n00:13:43.520 --> 00:13:48.580\nKeep in mind, those radii that we\nset are still in effect, okay?\n\n211\n00:13:48.580 --> 00:13:51.330\nThey still are in effect, and\n\n212\n00:13:51.330 --> 00:13:55.260\nif we start in the center,\nbecause I have a rectangular canvas,\n\n213\n00:13:55.260 --> 00:13:59.280\nwe get a different extend in vertical and\nhorizontal directions.\n\n214\n00:13:59.280 --> 00:14:02.520\nSo you'll probably get some weird edging.\n\n215\n00:14:02.520 --> 00:14:05.580\n&gt;&gt; But I'm starting in the center, 300.\n\n216\n00:14:05.580 --> 00:14:10.800\nI'm gonna go ahead and move this up to\n400 just so we can see that movement.\n\n217\n00:14:10.800 --> 00:14:17.490\nAnd see the red, you get the circles\nmoving outside of the actual canvas area.\n\n218\n00:14:17.490 --> 00:14:21.314\nBecause vertically,\nthe entire extent is 400.\n\n219\n00:14:24.044 --> 00:14:27.670\nBut where are we moving to or\nwe have our centers and centers and\n\n220\n00:14:27.670 --> 00:14:30.030\nthen it's drawing out, okay?\n\n221\n00:14:30.030 --> 00:14:34.990\nBut that is a radius, so it's 400 in\n\n222\n00:14:34.990 --> 00:14:40.190\nthis direction and\nto my reminders, whoopsy daisy.\n\n223\n00:14:40.190 --> 00:14:44.060\nAnd then 400 in this direction so\nit kind of overspans.\n\n224\n00:14:44.060 --> 00:14:48.320\nThat as I said we have\npretty sharp cut points\n\n225\n00:14:48.320 --> 00:14:53.030\nas we have a great actually five\nkind of packed into the space.\n\n226\n00:14:53.030 --> 00:14:56.810\nI can either turn down the opacity\nto help with the softness.\n\n227\n00:14:56.810 --> 00:15:01.200\nOr I can reduce the colors, or\nI can move them with an understanding that\n\n228\n00:15:01.200 --> 00:15:04.610\nI may not actually see that red\ndepending on how large my canvas is.\n\n229\n00:15:04.610 --> 00:15:08.430\n&gt;&gt; But as you can see, radial gradients\nhave some weirdness, but in general,\n\n230\n00:15:08.430 --> 00:15:12.670\nthey have the same API as linear\ngradients with color stops and\n\n231\n00:15:12.670 --> 00:15:16.010\nthings of that nature so\nhopefully that was helpful with gradients.\n\n232\n00:15:16.010 --> 00:15:22.000\nBut we have a great deal more about\nstyling, patterns, animations.\n\n233\n00:15:22.000 --> 00:15:26.850\nAll kinds of fun stuff with\nHTML5 Graphics, HTML5 Canvas Graphics,\n\n234\n00:15:26.850 --> 00:15:29.740\nthat is a long title, I'm gonna\nhave to change that or something.\n\n235\n00:15:29.740 --> 00:15:31.850\nBut that's all that I've got for\nyou today, Vonne.\n\n236\n00:15:31.850 --> 00:15:34.150\n&gt;&gt; Wow, well, when you said it\nwas gonna be a little weird,\n\n237\n00:15:34.150 --> 00:15:37.890\nI was honestly expecting a little bit\nmore, I'm like, that's not that weird.\n\n238\n00:15:37.890 --> 00:15:43.500\n[LAUGH] I mean, it got the whole numbers\nand if I wanted to move them around.\n\n239\n00:15:43.500 --> 00:15:46.580\nI mean it makes complete sense to me,\nso I didn't think it was too bad.\n\n240\n00:15:46.580 --> 00:15:50.690\n&gt;&gt; And again I think that's obviously\na perspective, Von's perspective and\n\n241\n00:15:50.690 --> 00:15:52.710\nmy perspective a little bit different.\n\n242\n00:15:52.710 --> 00:15:54.290\nSo Von's like yeah,\n\n243\n00:15:54.290 --> 00:15:59.330\nI understand what they're doing\nit's not that I don't understand.\n\n244\n00:15:59.330 --> 00:16:01.600\nIt's just it's not what I anticipated.\n\n245\n00:16:01.600 --> 00:16:03.993\n&gt;&gt; Yeah, but\nI saw when you were explaining.\n\n246\n00:16:03.993 --> 00:16:09.900\nYeah, I can see how that can be a little\nweird or of putting in a sense.\n\n247\n00:16:09.900 --> 00:16:13.443\nBut that was pretty straightforward\nif you wanna say that curve.\n\n248\n00:16:13.443 --> 00:16:14.375\n&gt;&gt; [LAUGH]\n&gt;&gt; All right,\n\n249\n00:16:14.375 --> 00:16:15.990\nI'm gonna stop right there [LAUGH].\n\n250\n00:16:15.990 --> 00:16:20.170\nBut thank you so much for going ahead and\nexplaining radial gradients to us.\n\n251\n00:16:20.170 --> 00:16:22.270\nAnd that was a lot of fun,\nI hope you guys had fun as well, but\n\n252\n00:16:22.270 --> 00:16:24.230\nwe're gonna go ahead and\nsign off for DevProTV.\n\n253\n00:16:24.230 --> 00:16:26.030\nI've been your host, Vonne Smith.\n\n254\n00:16:26.030 --> 00:16:27.070\n&gt;&gt; And I'm Justin Dennison.\n\n255\n00:16:27.070 --> 00:16:27.825\n&gt;&gt; And we'll see you soon.\n\n256\n00:16:27.825 --> 00:16:31.105\n[SOUND]\n\n",
          "vimeoId": "233500619"
        },
        {
          "description": "Justin and Zach discuss 'Usingimages,' scalable Vector Graphics, input/output operation, add Event Listener, fire On-Load Event/register On Load Event, rendering Context/Syntax, Aspect ratio, width over height, and small-medium-large image creation.",
          "length": "1576",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-html5canvasgraphicsandanimation/techskills-html5canvasgraphicsandanimations-8-1-1-using_images-091317.Still001.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-html5canvasgraphicsandanimation/techskills-html5canvasgraphicsandanimations-8-1-1-using_images-091317.Still001-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-html5canvasgraphicsandanimation/techskills-html5canvasgraphicsandanimations-8-1-1-using_images-091317.Still001-sm.jpg",
          "title": "Using Images",
          "transcript": "",
          "vimeoId": "234547459"
        },
        {
          "description": "Justin and Zach conclude the discussion about Usingimages, getReactCenter, center-dims, modify the HTML, utility class-'hidden,' asynchronus nature, DOMCenterLoaded, frame rate, and flip book like effect.",
          "length": "1512",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-html5canvasgraphicsandanimation/techskills-html5canvasgraphicsandanimations-8-1-2-using_images_pt2-091317-PGM.00_25_01_01.Still001.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-html5canvasgraphicsandanimation/techskills-html5canvasgraphicsandanimations-8-1-2-using_images_pt2-091317-PGM.00_25_01_01.Still001-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-html5canvasgraphicsandanimation/techskills-html5canvasgraphicsandanimations-8-1-2-using_images_pt2-091317-PGM.00_25_01_01.Still001-sm.jpg",
          "title": "Using Images Part 2",
          "transcript": "",
          "vimeoId": "233884743"
        },
        {
          "description": "Justin and Zach look at PNG image (logo.png), const createCanvasFromImage, Canvas objects, gctx=grayscale.getContext, using Python server, local host:8080, RBGA, and algorithm for gray scaling.",
          "length": "1447",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-html5canvasgraphicsandanimation/techskills-html5canvasgraphicsandanimations-8-2-using_images_grayscale_filter-091317-PGM.00_27_05_06.Still001.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-html5canvasgraphicsandanimation/techskills-html5canvasgraphicsandanimations-8-2-using_images_grayscale_filter-091317-PGM.00_27_05_06.Still001-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-html5canvasgraphicsandanimation/techskills-html5canvasgraphicsandanimations-8-2-using_images_grayscale_filter-091317-PGM.00_27_05_06.Still001-sm.jpg",
          "title": "Using Images: Grayscale Filter",
          "transcript": "",
          "vimeoId": "233686659"
        },
        {
          "description": "Justin and Zach discuss using Transformations, what are Transformations, expose-explore, canvas, getcontext, restore, stroke & fill, center of drawing canvas, Ctx.translate (100,100), translate & reflect, CanvasRenderingContext2D.rotate, Set trans form, rotate, radians, an change the origin.",
          "length": "1831",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-html5canvasgraphicsandanimation/techskills-html5canvasgraphicsandanimations-9-1-1-using_transformations-091417-PGM.00_30_20_26.Still001.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-html5canvasgraphicsandanimation/techskills-html5canvasgraphicsandanimations-9-1-1-using_transformations-091417-PGM.00_30_20_26.Still001-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-html5canvasgraphicsandanimation/techskills-html5canvasgraphicsandanimations-9-1-1-using_transformations-091417-PGM.00_30_20_26.Still001-sm.jpg",
          "title": "Using Transformations",
          "transcript": "",
          "vimeoId": "233884414"
        },
        {
          "description": "Justin and Zach cover scale, scale-x & y perimeter, scaling, dilation & contraction, reflections/vertical reflections, GROK, and CanvasRenderingContext2D.transfer",
          "length": "1527",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-html5canvasgraphicsandanimation/techskills-html5canvasgraphicsandanimations-9-1-2-using_transformations_pt2-091417-PGM.00_25_16_28.Still001.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-html5canvasgraphicsandanimation/techskills-html5canvasgraphicsandanimations-9-1-2-using_transformations_pt2-091417-PGM.00_25_16_28.Still001-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-html5canvasgraphicsandanimation/techskills-html5canvasgraphicsandanimations-9-1-2-using_transformations_pt2-091417-PGM.00_25_16_28.Still001-sm.jpg",
          "title": "Using Transformations Part 2",
          "transcript": "",
          "vimeoId": "233883791"
        },
        {
          "description": "Justin and Zach discuss clipping & composites, what clipping is, what composites are, clipping mask, PNG image, draw image, clipping circle, fill canvas, frame rate, and x + ticks.",
          "length": "1711",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-html5canvasgraphicsandanimation/techskills-html5canvasgraphicsandanimations-10-1-1-clipping_and_composites-091417-PGM.00_30_09_15.Still001.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-html5canvasgraphicsandanimation/techskills-html5canvasgraphicsandanimations-10-1-1-clipping_and_composites-091417-PGM.00_30_09_15.Still001-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-html5canvasgraphicsandanimation/techskills-html5canvasgraphicsandanimations-10-1-1-clipping_and_composites-091417-PGM.00_30_09_15.Still001-sm.jpg",
          "title": "Clipping and Composites",
          "transcript": "",
          "vimeoId": "233884093"
        },
        {
          "description": "Justin and Zach discuss Composites, what are Composites, using graphic image editor, graphics image editor is a blending tool, source & destination, opaque & transparent, const figure, what XOR does, global composite operation, 'drawn in the order called,' composite type, source-over/source-out, and 'difference.'",
          "length": "1364",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-html5canvasgraphicsandanimation/techskills-html5canvasgraphicsandanimations-10-1-2-clipping_and_composites_pt2-091517-PGM.00_23_12_10.Still001.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-html5canvasgraphicsandanimation/techskills-html5canvasgraphicsandanimations-10-1-2-clipping_and_composites_pt2-091517-PGM.00_23_12_10.Still001-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-html5canvasgraphicsandanimation/techskills-html5canvasgraphicsandanimations-10-1-2-clipping_and_composites_pt2-091517-PGM.00_23_12_10.Still001-sm.jpg",
          "title": "Clipping and Composites Part 2",
          "transcript": "",
          "vimeoId": "234507058"
        },
        {
          "description": "Justin and Zach cover more about animations, frame rage 25X per second, 'Request Animation Frame' vs. set interval/set time-out, velocity or speed (DX), positive to right & down/negative to left & up, callback parameter, dx:1 & dy:1, const main, and Request Animation Frame.",
          "length": "1632",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-html5canvasgraphicsandanimation/techskills-html5canvasgraphicsandanimations-11-1-1-more_about_animations-091517-PGM.00_27_02_00.Still001.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-html5canvasgraphicsandanimation/techskills-html5canvasgraphicsandanimations-11-1-1-more_about_animations-091517-PGM.00_27_02_00.Still001-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-html5canvasgraphicsandanimation/techskills-html5canvasgraphicsandanimations-11-1-1-more_about_animations-091517-PGM.00_27_02_00.Still001-sm.jpg",
          "title": "More About Animations",
          "transcript": "",
          "vimeoId": "234506673"
        },
        {
          "description": "Justin and Zach cover more about animations part 2, ctx.fillStyle, render ctx, not painted-hidden, const logo, cancel animation frame, bit map graphic, and increased height & width for zoom.",
          "length": "1636",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-html5canvasgraphicsandanimation/techskills-html5canvasgraphicsandanimations-11-1-2-more_about_animations_pt2-091517-PGM.00_27_29_25.Still001.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-html5canvasgraphicsandanimation/techskills-html5canvasgraphicsandanimations-11-1-2-more_about_animations_pt2-091517-PGM.00_27_29_25.Still001-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-html5canvasgraphicsandanimation/techskills-html5canvasgraphicsandanimations-11-1-2-more_about_animations_pt2-091517-PGM.00_27_29_25.Still001-sm.jpg",
          "title": "More About Animations Part 2",
          "transcript": "",
          "vimeoId": "234506479"
        },
        {
          "description": "Justin and Zach discuss what is a 'Particle,' X-Y options, color:options, options.radius, fat arrow functions, main function, particle.update, particle.render, requestAnimationFrame (main), 'helpers' functions, why we have to call 'fill' to draw to the screen, and (left-right) position.",
          "length": "1804",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-html5canvasgraphicsandanimation/techskills-html5canvasgraphicsandanimations-12-1-1-lets_build_it_particles_everywhere-091917-PGM.00_30_09_21.Still001.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-html5canvasgraphicsandanimation/techskills-html5canvasgraphicsandanimations-12-1-1-lets_build_it_particles_everywhere-091917-PGM.00_30_09_21.Still001-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-html5canvasgraphicsandanimation/techskills-html5canvasgraphicsandanimations-12-1-1-lets_build_it_particles_everywhere-091917-PGM.00_30_09_21.Still001-sm.jpg",
          "title": "Lets Build It: Particles Everwhere",
          "transcript": "",
          "vimeoId": "234673214"
        },
        {
          "description": "Justin and Zach continue the discussion about creating & using particles in the canvas graphic, why every particle has its own update function, prototype chains, const createParticles, random number, grab object, factory function, explicit return, choice of colors, and how adding 1,000 particles on the canvas graphic simulates contained gas.",
          "length": "2005",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-html5canvasgraphicsandanimation/techskills-html5canvasgraphicsandanimations-12-1-2-lets_build_it_particles_everywhere_pt2-091917-PGM.00_35_35_22.Still001.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-html5canvasgraphicsandanimation/techskills-html5canvasgraphicsandanimations-12-1-2-lets_build_it_particles_everywhere_pt2-091917-PGM.00_35_35_22.Still001-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-html5canvasgraphicsandanimation/techskills-html5canvasgraphicsandanimations-12-1-2-lets_build_it_particles_everywhere_pt2-091917-PGM.00_35_35_22.Still001-sm.jpg",
          "title": "Lets Build It: Particles Everywhere Part 2",
          "transcript": "",
          "vimeoId": "234673708"
        },
        {
          "description": "Justin and Zach cover Event Listener, user interactions, using mouse & keys to interact with function, how to utilize Dom events, attaching an Event Listener to the canvas element, a circle as a javascript data function, and the key code for color.",
          "length": "1443",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-html5canvasgraphicsandanimation/techskills-html5canvasgraphicsandanimations-13-1-1-responding_to_events-091917-PGM.00_25_42_25.Still001.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-html5canvasgraphicsandanimation/techskills-html5canvasgraphicsandanimations-13-1-1-responding_to_events-091917-PGM.00_25_42_25.Still001-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-html5canvasgraphicsandanimation/techskills-html5canvasgraphicsandanimations-13-1-1-responding_to_events-091917-PGM.00_25_42_25.Still001-sm.jpg",
          "title": "Responding to Events",
          "transcript": "",
          "vimeoId": "234673505"
        }
      ],
      "title": "HTML5 Canvas Graphics and Animations"
    }
  ],
  "url": "html5-canvas-graphicsanimations",
  "vLab": false
}
