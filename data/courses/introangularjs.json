{
  "description": "In this series, Justin takes a look at AngularJS, a web framework that has been around for a while. He demonstrates the use of the basics of AngularJS as well as discusses preferred practices for creating application code as well as organizing code. Some of the topics that he discusses are: the use of controllers, what is $scope and how to eliminate the use of $scope, using the built-in directives to render lists, handle events, and dynamically style your application. If you are interested in learning more about AngularJS, then join us!",
  "descriptionMD": "In this series, Justin takes a look at AngularJS, a web framework that has been around for a while. He demonstrates the use of the basics of AngularJS as well as discusses preferred practices for creating application code as well as organizing code. Some of the topics that he discusses are: the use of controllers, what is $scope and how to eliminate the use of $scope, using the built-in directives to render lists, handle events, and dynamically style your application. If you are interested in learning more about AngularJS, then join us!",
  "length": "37760",
  "name": "Intro to AngularJS",
  "practiceExam": false,
  "subtitle": "A Widely Used Web Framework",
  "tagUrl": "developer",
  "topics": [
    {
      "episodes": [
        {
          "description": "In this series, Justin takes a look at AngularJS, a web framework that has been around for a while. He demonstrates the use of the basics of AngularJS as well as discusses preferred practices for creating application code as well as organizing code. Some of the topics that he discusses are: the use of controllers, what is $scope and how to eliminate the use of $scope, using the built-in directives to render lists, handle events, and dynamically style your application. If you are interested in learning more about AngularJS, then join us!",
          "length": "147",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-introtoangularjs/techskills-introtoangularjs-0-0-overview-071717-PGM.00_01_05_05.Still002.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-introtoangularjs/techskills-introtoangularjs-0-0-overview-071717-PGM.00_01_05_05.Still002-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-introtoangularjs/techskills-introtoangularjs-0-0-overview-071717-PGM.00_01_05_05.Still002-sm.jpg",
          "title": "Overview",
          "transcript": "",
          "vimeoId": "226303240"
        },
        {
          "description": "In this episode, Ronnie and Justin introduce AngularJS.  Justin describes why we want to learn AngularJS and a little of it’s history and differentiation with the current Angular.  He also describes what it is and discusses it as a development framework.  Lastly, Justin demonstrates a simple application that will take the user’s input and set actions.",
          "length": "1296",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-introtoangularjs/techskills-introtoangularjs-1-1-what_is_angularjs-070517-PGM.00_22_32_11.Still001.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-introtoangularjs/techskills-introtoangularjs-1-1-what_is_angularjs-070517-PGM.00_22_32_11.Still001-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-introtoangularjs/techskills-introtoangularjs-1-1-what_is_angularjs-070517-PGM.00_22_32_11.Still001-sm.jpg",
          "title": "What is AngularJS",
          "transcript": "",
          "vimeoId": "224463480"
        },
        {
          "description": "In this episode, Ronnie and Justin show some of the basic steps to setting up the first app in AngularJS.  Justin shows the basic setup with HTML and how to retrieve the AngularJS.  He displays where some of the common errors  happens when first setting up AngularJS.  He finishes by showing us the working production from his coding.",
          "length": "1559",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-introtoangularjs/techskills-introtoangularjs-1-2-our_first_angular_application-070517.00_25_50_18.Still001.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-introtoangularjs/techskills-introtoangularjs-1-2-our_first_angular_application-070517.00_25_50_18.Still001-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-introtoangularjs/techskills-introtoangularjs-1-2-our_first_angular_application-070517.00_25_50_18.Still001-sm.jpg",
          "title": "Our First Angular Application",
          "transcript": "",
          "vimeoId": "224654718"
        },
        {
          "description": "{Description}In this episode, Ronnie and Justin dive deeper into the AngularJS world using controllers and scope.  Justin shows the development of a counter application showing how the app continues to grow and makes it’s difficult to manage.  He also builds an application and shows how the controllers are configured and the use of scope to connect it to the view we have.  The complexity that develops will also be resolved as we continue through the series, says Justin.",
          "length": "1399",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-introtoangularjs/techskills-introtoangularjs-1-3-controllers_and_scope-070517.00_30_01_14.Still001.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-introtoangularjs/techskills-introtoangularjs-1-3-controllers_and_scope-070517.00_30_01_14.Still001-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-introtoangularjs/techskills-introtoangularjs-1-3-controllers_and_scope-070517.00_30_01_14.Still001-sm.jpg",
          "title": "Controllers and Scope",
          "transcript": "",
          "vimeoId": "224654931"
        },
        {
          "description": "In this episode, Ronnie and Justin continue to work with the AngularJS code.  Justin emphasizes the organization of the code for management and optimization.  He demonstrates how solving an issue for AngularJS doesn’t always lead to a more streamline code even as it solves problems.  Using $inject, he demonstrates how to insure that angular   knows what exact tool to use and how to make things work without using the $scope.",
          "length": "1332",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-introtoangularjs/techskills-introtoangularjs-1-3-2-controllers_and_scope_pt2-070617-PGM.00_02_33_22.Still001.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-introtoangularjs/techskills-introtoangularjs-1-3-2-controllers_and_scope_pt2-070617-PGM.00_02_33_22.Still001-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-introtoangularjs/techskills-introtoangularjs-1-3-2-controllers_and_scope_pt2-070617-PGM.00_02_33_22.Still001-sm.jpg",
          "title": "Controllers and Scope Part 2",
          "transcript": "",
          "vimeoId": "224929885"
        },
        {
          "description": "In this episode, Ronnie and Justin discuss the use of Data Binding in AngularJS.  Justin describe the concept of data binding and it’s importance.  He shows a simple example where interaction from the user can be passed into AngularJS and then it can be returned from it too.  This example sets up a simple idea that can be built upon says, Justin.  He then shows a more complex example where the information that is passed in is not just printed back to the screen but input that can retrieve data.  Lastly, Justin emphasizes the use of documented commands for consistent actions and to avoid using undocumented commands which can cause inconsistent results.",
          "length": "1623",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-introtoangularjs/techskills-introtoangularjs-1-4-data_binding-070617-PGM.01_22_43_16.Still001.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-introtoangularjs/techskills-introtoangularjs-1-4-data_binding-070617-PGM.01_22_43_16.Still001-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-introtoangularjs/techskills-introtoangularjs-1-4-data_binding-070617-PGM.01_22_43_16.Still001-sm.jpg",
          "title": "Data Binding",
          "transcript": "",
          "vimeoId": "224930107"
        },
        {
          "description": "In this episode Ronnie and Cherokee examine the use DISM to add and remove features in an offline image.  Cherokee elaborates on the purpose of using DISM.  She also shows how to mount an image, enable a feature, disable a feature and remove a feature.  Lastly, she emphasize the need to dismount the image and whether to save the changes or discard them.",
          "length": "1643",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-introtoangularjs/techskills-introtoangularjs-1-5-overview_of_built_in_directives-070617.00_27_14_28.Still001.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-introtoangularjs/techskills-introtoangularjs-1-5-overview_of_built_in_directives-070617.00_27_14_28.Still001-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-introtoangularjs/techskills-introtoangularjs-1-5-overview_of_built_in_directives-070617.00_27_14_28.Still001-sm.jpg",
          "title": "Overview of Built-in Directives",
          "transcript": "",
          "vimeoId": "225105855"
        },
        {
          "description": "In this episode, Ronnie and Justin introduce dynamic styles and css and how AngularJS can work with it.  Justin shows some of the common AngularJS directives that we can put in the html.  He also shows some elements to watch out for when implementing them in line with the HTML coding.",
          "length": "1745",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-introtoangularjs/techskills-introtoangularjs-1-6-dynamic_styles_and_css-070717.00_28_57_05.Still001.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-introtoangularjs/techskills-introtoangularjs-1-6-dynamic_styles_and_css-070717.00_28_57_05.Still001-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-introtoangularjs/techskills-introtoangularjs-1-6-dynamic_styles_and_css-070717.00_28_57_05.Still001-sm.jpg",
          "title": "Dynamic Styles and CSS",
          "transcript": "",
          "vimeoId": "225105046"
        },
        {
          "description": "In this episode, Ronnie and Justin show how to render lists using AngularJS.  Justin shows that lists can be created without AngularJS and the shows an example of how AngularJS reduces the amount of coding too.  He demonstrates the skills built here allow us to create more complex list renderings and even the ability o create a drop down too.",
          "length": "1266",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-introtoangularjs/techskills-introtoangularjs-1-7-rendering_lists-070717-PGM.00_20_56_03.Still001.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-introtoangularjs/techskills-introtoangularjs-1-7-rendering_lists-070717-PGM.00_20_56_03.Still001-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-introtoangularjs/techskills-introtoangularjs-1-7-rendering_lists-070717-PGM.00_20_56_03.Still001-sm.jpg",
          "title": "Rendering Lists",
          "transcript": "",
          "vimeoId": "224930506"
        },
        {
          "description": "In this episode, Ronnie and Justin show how AngularJS does event handling.  Justin using the different input from mousing events shows how to change what new see on the screen.  He then shows a better way to handle these events using functions and lastly, demonstrates how this allows us to not just focus on mousing events for inputs but other possible inputs too.",
          "length": "1279",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-introtoangularjs/techskills-introtoangularjs-1-8-handling_events-070717.00_21_11_04.Still001.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-introtoangularjs/techskills-introtoangularjs-1-8-handling_events-070717.00_21_11_04.Still001-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-introtoangularjs/techskills-introtoangularjs-1-8-handling_events-070717.00_21_11_04.Still001-sm.jpg",
          "title": "Handling Events",
          "transcript": "",
          "vimeoId": "225106772"
        },
        {
          "description": "Justin and Zach discuss what are Angular JS Filters, why we would want to use them, how to access the filters, how we can use them, what 'Builtin Filters' are, and using Builtin Filters.",
          "length": "1593",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-introtoangularjs/techskills-introtoangularjs-1-9-1-filters-071017.00_26_24_27.Still001.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-introtoangularjs/techskills-introtoangularjs-1-9-1-filters-071017.00_26_24_27.Still001-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-introtoangularjs/techskills-introtoangularjs-1-9-1-filters-071017.00_26_24_27.Still001-sm.jpg",
          "title": "Filters",
          "transcript": "",
          "vimeoId": "225247975"
        },
        {
          "description": "Justin and Zach conclude the discussion about Angular JS Filters, creating customized filters other than the Builtin, creation of a 'Capitalise' Filter, filters as Data Transformations, and other functions of Angular JS Filters.",
          "length": "1162",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-introtoangularjs/techskills-introtoangularjs-1-9-2-filters-071017.00_19_13_22.Still001.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-introtoangularjs/techskills-introtoangularjs-1-9-2-filters-071017.00_19_13_22.Still001-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-introtoangularjs/techskills-introtoangularjs-1-9-2-filters-071017.00_19_13_22.Still001-sm.jpg",
          "title": "Filters Part 2",
          "transcript": "",
          "vimeoId": "225248173"
        },
        {
          "description": "Justin and Zach cover how Angular JS can be used to create Forms, how to fill out Forms, external modules, how we handle Forms with Angular JS, building a sign-up Form, using an object to bind properties to, and gotchas to watch out for.",
          "length": "1433",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-introtoangularjs/techskills-introtoangularjs-1-10-forms-071017.00_23_45_02.Still001.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-introtoangularjs/techskills-introtoangularjs-1-10-forms-071017.00_23_45_02.Still001-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-introtoangularjs/techskills-introtoangularjs-1-10-forms-071017.00_23_45_02.Still001-sm.jpg",
          "title": "Forms",
          "transcript": "",
          "vimeoId": "225248355"
        },
        {
          "description": "Justin and Zach cover what AJAX is, why we would want to use an AJAX request, how we use AJAX with Angular JS, AJAX request using the $httpmodule, manipulation of code within the controller, and CRUD operations.",
          "length": "1627",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-introtoangularjs/techskills-introtoangularjs-1-11-ajax_with_angularjs-071117.00_26_57_23.Still001.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-introtoangularjs/techskills-introtoangularjs-1-11-ajax_with_angularjs-071117.00_26_57_23.Still001-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-introtoangularjs/techskills-introtoangularjs-1-11-ajax_with_angularjs-071117.00_26_57_23.Still001-sm.jpg",
          "title": "AJAX with AngularJS",
          "transcript": "",
          "vimeoId": "225402953"
        },
        {
          "description": "Justin and Zach discuss HTTP requests, documentation for the Angular Resource third party module, set-up of the third party module, how we would use the module, and 'User.Get & User.Query' functions.",
          "length": "1917",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-introtoangularjs/techskills-introtoangularjs-1-12-ajax_with_angular_resource-071117.00_31_47_23.Still001.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-introtoangularjs/techskills-introtoangularjs-1-12-ajax_with_angular_resource-071117.00_31_47_23.Still001-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-introtoangularjs/techskills-introtoangularjs-1-12-ajax_with_angular_resource-071117.00_31_47_23.Still001-sm.jpg",
          "title": "AJAX with Angular Resource",
          "transcript": "",
          "vimeoId": "225248551"
        },
        {
          "description": "Justin and Zach discuss the concept of a Service and a Factory in Angular JS, how Services and Factories can serve similar/same purposes, how we build Factories, building the same Service using the Factory and Service methods, using the '.factorymethod,' and various commands in creating a Factory.",
          "length": "1187",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-introtoangularjs/techskills-introtoangularjs-1-13-services_and_factories-071117.00_19_39_24.Still001.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-introtoangularjs/techskills-introtoangularjs-1-13-services_and_factories-071117.00_19_39_24.Still001-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-introtoangularjs/techskills-introtoangularjs-1-13-services_and_factories-071117.00_19_39_24.Still001-sm.jpg",
          "title": "Services and Factories",
          "transcript": "",
          "vimeoId": "225403179"
        },
        {
          "description": "Justin and Zach continue discussing Services and Factories in Angular JS, how the Service Method is different than Factory Method, Service Method as a Constructor, User Service, use of 'This.Get = Get,' and how the Service Method is similar to the Factory Method.",
          "length": "1738",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-introtoangularjs/techskills-introtoangularjs-1-13-2-services_and_factories_pt2-071217.00_31_07_01.Still001.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-introtoangularjs/techskills-introtoangularjs-1-13-2-services_and_factories_pt2-071217.00_31_07_01.Still001-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-introtoangularjs/techskills-introtoangularjs-1-13-2-services_and_factories_pt2-071217.00_31_07_01.Still001-sm.jpg",
          "title": "Services and Factories Part 2",
          "transcript": "",
          "vimeoId": "225403377"
        },
        {
          "description": "Justin and Zach cover 'Builtin' Directives & how to create our own Directives, Presentational Directives & Behavior Driven Directives, constructing Directives, multiple functions of Directives, and Directives as a self contained HTML element.",
          "length": "1227",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-introtoangularjs/techskills-introtoangularjs-1-14-1-custom_directives-071217-PGM.00_20_24_25.Still001.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-introtoangularjs/techskills-introtoangularjs-1-14-1-custom_directives-071217-PGM.00_20_24_25.Still001-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-introtoangularjs/techskills-introtoangularjs-1-14-1-custom_directives-071217-PGM.00_20_24_25.Still001-sm.jpg",
          "title": "Custom Directives",
          "transcript": "",
          "vimeoId": "225403652"
        },
        {
          "description": "Justin and Zach conclude the discussion on Custom Directives, creating additional Directives, Directives as Templates, adding a link & Controller to the Directive, definition of EAC, and 'Welcome directives.",
          "length": "1713",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-introtoangularjs/techskills-introtoangularjs-1-14-2-custom_directives_pt2-071217-PGM.00_28_22_11.Still001.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-introtoangularjs/techskills-introtoangularjs-1-14-2-custom_directives_pt2-071217-PGM.00_28_22_11.Still001-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-introtoangularjs/techskills-introtoangularjs-1-14-2-custom_directives_pt2-071217-PGM.00_28_22_11.Still001-sm.jpg",
          "title": "Custom Directives Part 2",
          "transcript": "",
          "vimeoId": "225555241"
        },
        {
          "description": "Justin and Zach discuss how Directives & Components are similar/different, why the Component method was created, what a Component is, how Components work in Angular JS, how we create Angular JS Components, what a User Component is, and some live-action debugging.",
          "length": "1631",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-introtoangularjs/techskills-introtoangularjs-1-15-1-custom_components-071317.00_27_03_12.Still001.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-introtoangularjs/techskills-introtoangularjs-1-15-1-custom_components-071317.00_27_03_12.Still001-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-introtoangularjs/techskills-introtoangularjs-1-15-1-custom_components-071317.00_27_03_12.Still001-sm.jpg",
          "title": "Custom Components",
          "transcript": "",
          "vimeoId": "225856474"
        },
        {
          "description": "Justin and Zach conclude the discussion of Custom Components in Angular JS, how we can add Behavior, building a Counter Component, and we send information from a Parent to the Counter.",
          "length": "1715",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-introtoangularjs/techskills-introtoangularjs-1-15-2-custom_components_pt2-071317.00_32_44_02.Still001.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-introtoangularjs/techskills-introtoangularjs-1-15-2-custom_components_pt2-071317.00_32_44_02.Still001-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-introtoangularjs/techskills-introtoangularjs-1-15-2-custom_components_pt2-071317.00_32_44_02.Still001-sm.jpg",
          "title": "Custom Components Part 2",
          "transcript": "",
          "vimeoId": "225856755"
        },
        {
          "description": "Justin and Zach discuss what Client-Side Routing is, why we would want to use it, is Client-Side Routing built into Angular or an external module, is this the only solution to this problem/application, creating a mock 'Home' 'Login' & 'Signup' page, NG-View, and beginning the build of a basic Route.",
          "length": "1803",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-introtoangularjs/techskills-introtoangularjs-1-16-1-client_routing_with_angular_router-071417-PGM.00_33_03_10.Still001.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-introtoangularjs/techskills-introtoangularjs-1-16-1-client_routing_with_angular_router-071417-PGM.00_33_03_10.Still001-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-introtoangularjs/techskills-introtoangularjs-1-16-1-client_routing_with_angular_router-071417-PGM.00_33_03_10.Still001-sm.jpg",
          "title": "Client Routing with Angular Router",
          "transcript": "WEBVTT\n\n1\n00:00:00.025 --> 00:00:05.155\n[SOUND] Hey Thank you for\nwatching DEVPRO.TV\n\n2\n00:00:05.155 --> 00:00:09.873\nwhere we help you learn wherever you go.\n\n3\n00:00:09.873 --> 00:00:11.620\nMy name is Zach Memos and I'm your host.\n\n4\n00:00:11.620 --> 00:00:14.180\nAs we continue on with intro to AngularJS.\n\n5\n00:00:14.180 --> 00:00:19.000\nAnd today we're gonna be\nrouting with Angular routers.\n\n6\n00:00:19.000 --> 00:00:20.520\nAnd who's gonna show us that?\n\n7\n00:00:20.520 --> 00:00:21.340\nWho?\n\n8\n00:00:21.340 --> 00:00:22.730\nWhy Justin Denison right over here.\n\n9\n00:00:22.730 --> 00:00:23.830\nHey Justin, good to see you, sir.\n\n10\n00:00:23.830 --> 00:00:25.960\n&gt;&gt; It is good to see you as well,\nZach, and how are you today?\n\n11\n00:00:25.960 --> 00:00:27.340\n&gt;&gt; I am wonderful feeling happy.\n\n12\n00:00:28.520 --> 00:00:29.183\n&gt;&gt; Well, that is always cool.\n\n13\n00:00:29.183 --> 00:00:31.062\n&gt;&gt; And\nI'm excited about what we're doing here.\n\n14\n00:00:31.062 --> 00:00:34.430\nI know we're gonna be starting with\nclient side routing, is that right?\n\n15\n00:00:34.430 --> 00:00:35.330\nClient side routing, yeah?\n\n16\n00:00:35.330 --> 00:00:37.490\nWhat is client side routing?\n\n17\n00:00:37.490 --> 00:00:41.500\n&gt;&gt; Client side routing, well, that's maybe\nthe first time you've ever heard of that,\n\n18\n00:00:41.500 --> 00:00:44.670\nbut you've probably navigated\nto a web application or\n\n19\n00:00:44.670 --> 00:00:47.610\nwebsite that has engaged\nin client side routing.\n\n20\n00:00:47.610 --> 00:00:51.160\nSo, let's just talk a little bit\nabout why we would need this, right?\n\n21\n00:00:51.160 --> 00:00:53.310\nSo, AngularJS came along during this,\n\n22\n00:00:53.310 --> 00:00:55.710\nwhat's called the spa,\nkind of push forward, right?\n\n23\n00:00:55.710 --> 00:00:58.730\nSingle page applications,\neverything is on a single page and\n\n24\n00:00:58.730 --> 00:01:01.950\nyou're not re-rendering\nfrom the server every time.\n\n25\n00:01:01.950 --> 00:01:04.770\nNow that doesn't mean that you don't reach\nback to the server to get other things,\n\n26\n00:01:04.770 --> 00:01:05.910\nit's not what I'm saying.\n\n27\n00:01:05.910 --> 00:01:10.870\nI'm just saying your initial page load,\nit's there, and not every link takes you\n\n28\n00:01:10.870 --> 00:01:14.705\nto a different server render page or\na different server served up page.\n\n29\n00:01:14.705 --> 00:01:19.450\nNow static websites like\nthat do still exist, but-\n\n30\n00:01:19.450 --> 00:01:20.715\n&gt;&gt; And they make stew.\n\n31\n00:01:20.715 --> 00:01:21.975\n&gt;&gt; -and they do make stew.\n\n32\n00:01:21.975 --> 00:01:24.210\n&gt;&gt; [LAUGH]\n&gt;&gt; Delicious, carrots, peas and beef.\n\n33\n00:01:24.210 --> 00:01:25.940\nHm, delicious, delicious.\n\n34\n00:01:25.940 --> 00:01:29.880\nBut with AngularJS, well,\nwe don't have to do that and\n\n35\n00:01:29.880 --> 00:01:31.570\nactually becomes a little bit of problem,\n\n36\n00:01:31.570 --> 00:01:36.270\nkind of problematic if we wanna see\nwhat appears to be different pages.\n\n37\n00:01:36.270 --> 00:01:39.730\nI click on a link, I wanna log in,\nI wanna sign up, I wanna go home,\n\n38\n00:01:39.730 --> 00:01:41.690\nI wanna go look at all my blog posts.\n\n39\n00:01:41.690 --> 00:01:43.450\nIf I wanna go in between those pages,\n\n40\n00:01:43.450 --> 00:01:48.070\nwell keeping that in sync,\nkeeping everything kind of working,\n\n41\n00:01:48.070 --> 00:01:52.500\nyou can't resend the entire HTML page and\nhave your apps start up every time.\n\n42\n00:01:52.500 --> 00:01:56.084\nNumber one, that's not necessarily\nthe best idea as far as performance.\n\n43\n00:01:56.084 --> 00:02:00.132\nNumber two, if you have any data that\nyou have to load up or any transitions,\n\n44\n00:02:00.132 --> 00:02:02.982\nanimations, you have to check for\nauthorizations,\n\n45\n00:02:02.982 --> 00:02:07.351\nevery time that comes back from the server\nin Angular is the one handling that it's\n\n46\n00:02:07.351 --> 00:02:11.500\ngoing to restart the app, grab all of\nthat information, do its validation.\n\n47\n00:02:11.500 --> 00:02:17.010\nNow it may not appear as a big\nissue to you or to me, but\n\n48\n00:02:17.010 --> 00:02:23.530\nif you did that a lot on a page, then it\nmay start to slow things down, right?\n\n49\n00:02:23.530 --> 00:02:28.540\nSo our ultimate goal is to have\nwhat appears to be URLs that take\n\n50\n00:02:28.540 --> 00:02:33.850\nus to an entirely new page, but really\nwe're just kind of doing a switcheroo\n\n51\n00:02:33.850 --> 00:02:36.370\nbetween templates that we've created.\n\n52\n00:02:36.370 --> 00:02:41.460\nWell that's kind of built into\nAngular right from the start.\n\n53\n00:02:41.460 --> 00:02:42.230\n&gt;&gt; So is this something?\n\n54\n00:02:42.230 --> 00:02:44.040\nOkay you just said it's built on Angular.\n\n55\n00:02:44.040 --> 00:02:46.040\n&gt;&gt; But-\n&gt;&gt; You said that but, or\n\n56\n00:02:46.040 --> 00:02:48.430\nis it an external module?\n\n57\n00:02:48.430 --> 00:02:50.240\n&gt;&gt; You got me, Zach, you got me.\n\n58\n00:02:50.240 --> 00:02:53.180\nIt is, in fact, an external module, but\n\n59\n00:02:53.180 --> 00:02:57.299\nit's kinda bundled with\nthe Angular ecosystem, right?\n\n60\n00:02:57.299 --> 00:02:59.877\nSo Angular routers,\neven in the AngularJS documentation,\n\n61\n00:02:59.877 --> 00:03:02.900\nit's technically an external module,\nmisspoke.\n\n62\n00:03:02.900 --> 00:03:06.073\nBut its capability is built into Angular,\n\n63\n00:03:06.073 --> 00:03:09.607\nin a ten thousand foot view kind of way,\nright?\n\n64\n00:03:09.607 --> 00:03:12.867\nSo I think the best thing to\ndo is actually take a little\n\n65\n00:03:12.867 --> 00:03:17.360\nlook at the documentation and\nsee what are we getting ourselves into.\n\n66\n00:03:17.360 --> 00:03:23.212\nSo let's take a look at my screen here and\nI'm going to look up angular router.\n\n67\n00:03:23.212 --> 00:03:26.270\nNow, I am gonna show you few things,\n\n68\n00:03:26.270 --> 00:03:28.140\nthere's this guy called\nthe component router.\n\n69\n00:03:28.140 --> 00:03:32.880\nLet's take a quick aside there,\nnotice this has a deprecation notice.\n\n70\n00:03:32.880 --> 00:03:37.515\nThis was something that was tried out and,\nand it kinda worked and\n\n71\n00:03:37.515 --> 00:03:41.050\nthen they decided not to use it anymore.\n\n72\n00:03:41.050 --> 00:03:43.240\nThere are kind of two solutions.\n\n73\n00:03:43.240 --> 00:03:45.790\nThere are not just the two,\nthere's multiple solutions.\n\n74\n00:03:45.790 --> 00:03:47.805\nThey're all external modules.\n\n75\n00:03:47.805 --> 00:03:50.306\nComponent router you should not use.\n\n76\n00:03:50.306 --> 00:03:55.100\nYou should use ngRoute which is\nactually the standard Angular router.\n\n77\n00:03:55.100 --> 00:03:57.100\nWhen I say standard it's kind of the,\n\n78\n00:03:57.100 --> 00:04:01.420\nwhen I think of Angular routing that\nwas one of the first ones that I used.\n\n79\n00:04:01.420 --> 00:04:05.050\nAnd then there's other community\ndeveloped projects like ui-router.\n\n80\n00:04:05.050 --> 00:04:11.400\nNow we're not gonna talk about\nui-router in this episode, excuse me.\n\n81\n00:04:11.400 --> 00:04:13.690\nWe're gonna be talking about this ngRoute.\n\n82\n00:04:13.690 --> 00:04:18.520\nSo it says hey, you should go over to\nthe Angular router guide and then, boom.\n\n83\n00:04:18.520 --> 00:04:22.520\nNow I will tell you this,\nwe're talking about AngularJS and\n\n84\n00:04:22.520 --> 00:04:25.981\nsadly I'm really bad about\nkeeping that straight.\n\n85\n00:04:25.981 --> 00:04:32.733\nThis is 1.*, 1.5 actually for\nthis series or above.\n\n86\n00:04:32.733 --> 00:04:36.870\nThis is about AngularJS 1.5 and\nabove, okay?\n\n87\n00:04:36.870 --> 00:04:42.360\nAnd actually the router has worked for\na while, but\n\n88\n00:04:42.360 --> 00:04:45.870\nthere's another thing called Angular\nrouter that it's for the new\n\n89\n00:04:45.870 --> 00:04:50.315\nversion of Angular that is kinda very\ndistinct from this, so keep that in mind.\n\n90\n00:04:50.315 --> 00:04:53.328\n&gt;&gt; [SOUND]\n&gt;&gt; So if I go to that component router it\n\n91\n00:04:53.328 --> 00:04:56.753\nsends me to ngRoute and you're like\nhow would I supposed to know that and\n\n92\n00:04:56.753 --> 00:04:59.090\nwe'll talk about that a little bit.\n\n93\n00:04:59.090 --> 00:05:04.230\nngRoute here is, it essentially\ntells you how to get things started.\n\n94\n00:05:04.230 --> 00:05:08.200\nNow it's not the easiest\ndocumentation to read at all times,\n\n95\n00:05:08.200 --> 00:05:11.700\nbut pretty much what you need\nto know is on this page.\n\n96\n00:05:11.700 --> 00:05:14.850\nBut let's go see if I can get\nsomething a little more in depth here.\n\n97\n00:05:14.850 --> 00:05:19.730\nSo if I say ngRoute, and okay,\n\n98\n00:05:19.730 --> 00:05:24.348\nngRoute route provider,\nroute provider, okay.\n\n99\n00:05:24.348 --> 00:05:30.070\nExample, see $route for\nexample of configuring and using ngRoute.\n\n100\n00:05:30.070 --> 00:05:33.840\nThis actually takes you to something\nthat you can probably reason about.\n\n101\n00:05:33.840 --> 00:05:37.537\nIt's still not immediately\nclear what we're doing.\n\n102\n00:05:37.537 --> 00:05:44.392\nSo, well, let's actually use it and\nsee how we get this up and going, right?\n\n103\n00:05:44.392 --> 00:05:44.960\n&gt;&gt; Bring it.\n\n104\n00:05:44.960 --> 00:05:48.049\n&gt;&gt; I will forewarn you,\nI will forewarn you\n\n105\n00:05:49.090 --> 00:05:53.555\nthere is a chunk of set up in\norder to get this running.\n\n106\n00:05:53.555 --> 00:05:56.570\nBut we're gonna see why\nwe would want that and\n\n107\n00:05:56.570 --> 00:05:59.960\nkind of think okay,\nwhat are we doing here?\n\n108\n00:05:59.960 --> 00:06:07.210\nBecause if you notice on this page itself,\nthere is this kind of nav bar, right?\n\n109\n00:06:07.210 --> 00:06:10.072\nIt doesn't change regardless\nof where I am on the page.\n\n110\n00:06:10.072 --> 00:06:14.303\nOnly the bottom portion changes, and as a\nmatter of fact, if I click on Angular bind\n\n111\n00:06:14.303 --> 00:06:18.680\nnotice the only part that changes is\nkind of this little sub section here.\n\n112\n00:06:18.680 --> 00:06:23.240\nI don't have to reload the entire page and\nmaybe reload and rerun all the JavaScript,\n\n113\n00:06:23.240 --> 00:06:24.370\nreload all the CSS.\n\n114\n00:06:24.370 --> 00:06:28.209\nI just need to switch out\nthis inside portion, right?\n\n115\n00:06:30.210 --> 00:06:31.470\nOkay.\nWell,\n\n116\n00:06:31.470 --> 00:06:35.020\nthat is one of the powers\nof the Angular router.\n\n117\n00:06:35.020 --> 00:06:38.460\nAnd this is kind of the first\nsolution that you will go to.\n\n118\n00:06:38.460 --> 00:06:43.500\nBut it is not necessarily the most robust\nor the only one that is available for\n\n119\n00:06:43.500 --> 00:06:46.790\nwell, routing on the client\nside applications.\n\n120\n00:06:46.790 --> 00:06:49.767\nSo, now that we have said that,\nnow that we have said that.\n\n121\n00:06:49.767 --> 00:06:52.040\n&gt;&gt; Just do it, just do it\n&gt;&gt; Let's go ahead and\n\n122\n00:06:52.040 --> 00:06:53.500\ntry to get this up and running.\n\n123\n00:06:54.650 --> 00:06:58.784\nSo if I hop over here I have just\na very standard Angular application.\n\n124\n00:06:58.784 --> 00:07:03.484\nAnd, well, you know Zack picked on me for\nnot having it quite correct.\n\n125\n00:07:03.484 --> 00:07:05.896\nIt is an external module, but\nit's in the documentation.\n\n126\n00:07:05.896 --> 00:07:07.767\n&gt;&gt; Right.\n&gt;&gt; So it's kinda assumed that it's part\n\n127\n00:07:07.767 --> 00:07:09.045\nof the Angular ecosystem.\n\n128\n00:07:09.045 --> 00:07:12.800\nBut, what they've done is they removed\nthat into an external module, so\n\n129\n00:07:12.800 --> 00:07:17.101\nif you don't need it, you don't have to\nload it, and it keeps your, essentially,\n\n130\n00:07:17.101 --> 00:07:21.159\nyour load times and your payload as\na result, smaller than it would otherwise,\n\n131\n00:07:21.159 --> 00:07:21.792\nall right?\n\n132\n00:07:21.792 --> 00:07:24.046\n&gt;&gt; Very cool.\n&gt;&gt; So, as it stands, I have Angular,\n\n133\n00:07:24.046 --> 00:07:26.093\nI have App.js, everything's good.\n\n134\n00:07:26.093 --> 00:07:32.060\nAnd let me actually open this up so\nopen index.html, and there we go.\n\n135\n00:07:32.060 --> 00:07:36.210\nNow I will probably end up changing this\nto be served through a server just so\n\n136\n00:07:36.210 --> 00:07:37.050\nit's a little bit clearer.\n\n137\n00:07:37.050 --> 00:07:40.150\nBut for now,\nwe can make sure that it's good.\n\n138\n00:07:40.150 --> 00:07:42.530\nI'm gonna open the dev tools.\n\n139\n00:07:42.530 --> 00:07:45.080\nI have no errors,\n\n140\n00:07:45.080 --> 00:07:48.960\nwhich is not necessarily meaning that\nAngular is running all the time.\n\n141\n00:07:48.960 --> 00:07:52.350\nNow if I come over here,\nI need to make a change,\n\n142\n00:07:52.350 --> 00:07:55.080\nwhich is a small oversight on my part.\n\n143\n00:07:55.080 --> 00:07:56.470\nShame on me.\n\n144\n00:07:56.470 --> 00:08:01.539\nJust to make sure that it's running,\npretty sure I made sure it was.\n\n145\n00:08:01.539 --> 00:08:04.606\nBut I like to double check.\n\n146\n00:08:04.606 --> 00:08:09.519\nSo client side routing, if I refresh ooh,\nit's a good thing that well,\n\n147\n00:08:09.519 --> 00:08:12.190\nwe changed it just to check things out.\n\n148\n00:08:12.190 --> 00:08:14.100\nSo a little on the fly debugging, and\n\n149\n00:08:14.100 --> 00:08:17.400\nthat's because I accidentally hit a dot,\na period right there.\n\n150\n00:08:17.400 --> 00:08:22.620\nSo I had a period right here,\nwhich I do not need in that expression, so\n\n151\n00:08:22.620 --> 00:08:28.680\nI'm gonna refresh and there we go,\nclient side routing is all up and running.\n\n152\n00:08:28.680 --> 00:08:30.700\nNow we don't actually\nhave client side routing,\n\n153\n00:08:30.700 --> 00:08:32.960\nwe need to go get that external module,\nright.\n\n154\n00:08:34.280 --> 00:08:36.570\nSo I'm using CDN to bring in Angular.\n\n155\n00:08:38.510 --> 00:08:42.210\nWell if you look at the ngRoute,\nthey will actually show you a few CDNs.\n\n156\n00:08:42.210 --> 00:08:47.630\nThis CDNJS though, well,\nthat's actually pretty easy.\n\n157\n00:08:48.730 --> 00:08:51.050\nBecause all I need to do\nis duplicate that and\n\n158\n00:08:51.050 --> 00:08:54.340\nI can ensure that I have\nthe exact same version.\n\n159\n00:08:54.340 --> 00:08:58.730\nAnd then I can say angular-router,\nif I'm not mistaken.\n\n160\n00:08:58.730 --> 00:09:01.950\nAnd if we refresh,\nsee how I got a 404 here?\n\n161\n00:09:03.270 --> 00:09:06.120\nI can't remember the name,\nso let's go check it out and\n\n162\n00:09:06.120 --> 00:09:10.260\nsee if we can find that\nactual Angular router module.\n\n163\n00:09:10.260 --> 00:09:15.990\ncdnjs.org and I'm going to look for\n\n164\n00:09:15.990 --> 00:09:20.000\nAngular and make sure that you\nget the correct Angular here.\n\n165\n00:09:20.000 --> 00:09:24.040\nI will tell you,\nthis first one when you search,\n\n166\n00:09:24.040 --> 00:09:29.430\nsee how it says locales, or\nlocales or however you pronounce it.\n\n167\n00:09:29.430 --> 00:09:30.512\n&gt;&gt; Locales.\n\n168\n00:09:30.512 --> 00:09:35.340\n&gt;&gt; For AngularJS these are different\nlanguage packs that you may need for\n\n169\n00:09:35.340 --> 00:09:36.910\nyour particular application.\n\n170\n00:09:36.910 --> 00:09:42.200\nActually you have to scroll down\na little bit and ha, here we go.\n\n171\n00:09:42.200 --> 00:09:44.500\nThe one that actually says just AngularJS.\n\n172\n00:09:44.500 --> 00:09:46.330\nLet's click on that and\n\n173\n00:09:46.330 --> 00:09:51.470\nif we come out, we've seen this page\na few times before in this series.\n\n174\n00:09:51.470 --> 00:09:57.750\nWell all of these are external modules\nthat I can use inside of AngularJS.\n\n175\n00:09:57.750 --> 00:10:02.990\nIt also has the appropriate version\nnumber, right, all of these are 1.6.5.\n\n176\n00:10:02.990 --> 00:10:04.442\nI like to match those version numbers,\n\n177\n00:10:04.442 --> 00:10:07.480\nbecause every once in awhile you have a\nversion mis-match and things go a little.\n\n178\n00:10:07.480 --> 00:10:09.388\nAnd then you're just trying to\ndebug something that you don't\n\n179\n00:10:09.388 --> 00:10:10.840\nactually have control over.\n\n180\n00:10:10.840 --> 00:10:11.515\nThat's a problem.\n\n181\n00:10:11.515 --> 00:10:13.230\n&gt;&gt; Mm-hm.\n\n182\n00:10:13.230 --> 00:10:18.250\n&gt;&gt; So if I scroll down,\nthere it is, angular-route.\n\n183\n00:10:18.250 --> 00:10:24.490\nAnd that's kinda the first thing, right,\nso angular-route, and there's no r.\n\n184\n00:10:24.490 --> 00:10:26.250\nI accidentally put an r.\n\n185\n00:10:26.250 --> 00:10:30.710\nSo let me go remove that r and refresh.\n\n186\n00:10:30.710 --> 00:10:34.730\nAnd now it's back to going,\nit's working, right.\n\n187\n00:10:34.730 --> 00:10:37.430\nWell, it loaded it on the page,\nit's not actually working.\n\n188\n00:10:38.990 --> 00:10:44.020\nNow I already kinda forewarned you, this\nis going to be a little bit of setup And\n\n189\n00:10:44.020 --> 00:10:47.300\nI'm gonna show you a couple\nof gotchas as you go.\n\n190\n00:10:47.300 --> 00:10:51.530\nAnd I've already forwarned you,\nthis series is more or\n\n191\n00:10:51.530 --> 00:10:53.530\nless just me going, hold up-\n&gt;&gt; [LAUGH]\n\n192\n00:10:53.530 --> 00:10:54.720\n&gt;&gt; This is a place where you\n\n193\n00:10:54.720 --> 00:10:55.460\nmight mess up.\n\n194\n00:10:55.460 --> 00:10:58.010\nHold on,\nthis might be a place where you mess up.\n\n195\n00:10:58.010 --> 00:11:01.710\nSo I like to illustrate those because\nthose are a point of frustration.\n\n196\n00:11:01.710 --> 00:11:03.340\nI'll even tell your story Zack.\n\n197\n00:11:03.340 --> 00:11:04.460\n&gt;&gt; Do it.\n\n198\n00:11:04.460 --> 00:11:09.440\n&gt;&gt; So the first time I used the Angular\nrouter I went through the documentation,\n\n199\n00:11:09.440 --> 00:11:10.120\nI was setting it up.\n\n200\n00:11:10.120 --> 00:11:13.758\nAnd I was like I need these couple\nof essentially partial views, right,\n\n201\n00:11:13.758 --> 00:11:15.670\nthe little snipets of HTML.\n\n202\n00:11:15.670 --> 00:11:18.040\nI need these partial views to swap in and\nout.\n\n203\n00:11:19.040 --> 00:11:24.374\nI spent four hours trying to get it\nto work, four hours, and I was like,\n\n204\n00:11:27.005 --> 00:11:30.245\nWhy isn't working, why isn't it working?\n\n205\n00:11:30.245 --> 00:11:35.865\nAnd here's the kicker, it wasn't even\nanything to do with the Angular router.\n\n206\n00:11:35.865 --> 00:11:37.919\nApparently it might've had\nsomething to do with me speaking.\n\n207\n00:11:37.919 --> 00:11:38.961\n&gt;&gt; [LAUGH]\n&gt;&gt; But\n\n208\n00:11:38.961 --> 00:11:42.655\nI had forgotten ng-app that\nstarts our application.\n\n209\n00:11:42.655 --> 00:11:44.045\nSo there were no errors.\n\n210\n00:11:44.045 --> 00:11:49.108\nThat's because Angular wasn't\ninstantiating the application on the page.\n\n211\n00:11:49.108 --> 00:11:51.515\nI will tell you that was\na day of frustration, and\n\n212\n00:11:51.515 --> 00:11:52.835\njust a little bit of sadness.\n\n213\n00:11:52.835 --> 00:11:54.650\nThere was a small tear ran down my face.\n\n214\n00:11:54.650 --> 00:11:55.325\n&gt;&gt; [LAUGH]\n&gt;&gt; And\n\n215\n00:11:55.325 --> 00:11:56.995\nI sucked it up and just kept on going.\n\n216\n00:11:56.995 --> 00:11:58.565\nSo this is why I try to illustrate those.\n\n217\n00:11:58.565 --> 00:12:02.250\nBecause I don't think everybody should\nhave to go through four hours of\n\n218\n00:12:02.250 --> 00:12:05.120\nfrustration going,\nI don't know what's going.\n\n219\n00:12:05.120 --> 00:12:08.600\nEspecially when it's something small and\nyou're just trying to get it to work.\n\n220\n00:12:08.600 --> 00:12:09.850\nYou're like, all right,\nI need you to work.\n\n221\n00:12:09.850 --> 00:12:12.410\nAnd then you read through\nthe documentation again and\n\n222\n00:12:12.410 --> 00:12:14.550\nyou read through the documentation again.\n\n223\n00:12:14.550 --> 00:12:18.090\nAnd you do it over and over and over,\nand you're like it's still not working.\n\n224\n00:12:18.090 --> 00:12:21.100\nAnd I guess,\nI've heard that's the definition of crazy.\n\n225\n00:12:21.100 --> 00:12:24.124\nYou do the same thing and\nexpecting a different results but\n\n226\n00:12:24.124 --> 00:12:25.490\nthat's what I was doing.\n\n227\n00:12:25.490 --> 00:12:26.540\n&gt;&gt; Doesn't everyone?\n\n228\n00:12:26.540 --> 00:12:28.154\n&gt;&gt; Well I'm, do you Zach?\n\n229\n00:12:28.154 --> 00:12:28.806\n&gt;&gt; No.\n\n230\n00:12:28.806 --> 00:12:31.339\n[LAUGH]\n&gt;&gt; Okay, well I did that day and\n\n231\n00:12:31.339 --> 00:12:34.120\nit led to a fair amount of frustration.\n\n232\n00:12:34.120 --> 00:12:36.940\nSo I try to illustrate these things,\nkinda point these things out so\n\n233\n00:12:36.940 --> 00:12:41.250\nyou don't have to feel that amount of\nfrustration and can be more productive.\n\n234\n00:12:41.250 --> 00:12:45.778\nAnd, well, get things going up faster cuz\nwe always like that rewarding feeling of\n\n235\n00:12:45.778 --> 00:12:47.020\nbeing accomplished.\n\n236\n00:12:47.020 --> 00:12:52.141\nBut not necessarily always enjoy\nthat feeling of frustration and\n\n237\n00:12:52.141 --> 00:12:54.500\nkind of being stuck, right.\n\n238\n00:12:54.500 --> 00:12:58.110\nSo that's what we're doing.\n\n239\n00:12:58.110 --> 00:13:01.050\nSo, if we come back into the screen here,\n\n240\n00:13:01.050 --> 00:13:04.960\nand we have Angular route\non the page that's fine.\n\n241\n00:13:04.960 --> 00:13:08.580\nGood deal, if I come and\nlook at app.js I'm actually gonna do,\n\n242\n00:13:08.580 --> 00:13:13.560\nstart moving toward a more kind\nof sustainable application.\n\n243\n00:13:13.560 --> 00:13:18.110\nThis ap.js, I don't particularly\nlike having all of this in ap.js.\n\n244\n00:13:18.110 --> 00:13:21.260\nI'm gonna pull this out real quick and\nput it in its own file.\n\n245\n00:13:22.400 --> 00:13:26.850\nNew file and we're gonna call\nthis router.controller.js.\n\n246\n00:13:26.850 --> 00:13:31.320\nNow, I would typically put\nthese in sub folders, right,\n\n247\n00:13:31.320 --> 00:13:35.210\ncontroller services, directives,\ncomponents, whatnot.\n\n248\n00:13:35.210 --> 00:13:40.000\nBut, let's start keeping\nthis ap.js kind of small, so\n\n249\n00:13:40.000 --> 00:13:44.620\nwe can see how this configuration is\nstarting to come together, all right.\n\n250\n00:13:44.620 --> 00:13:49.710\nSo, all our ap.js is gonna do is actually\ncreate the application, that's it.\n\n251\n00:13:49.710 --> 00:13:51.240\nThat's all we need it to do.\n\n252\n00:13:51.240 --> 00:13:56.050\nEvery once in a while I'll put something\nextra in here, maybe some configuration or\n\n253\n00:13:56.050 --> 00:13:56.760\nsomething like that.\n\n254\n00:13:57.940 --> 00:14:01.120\nOr maybe I need to do something\nbefore Angular kicks off and\n\n255\n00:14:01.120 --> 00:14:02.330\nI'll handle it there.\n\n256\n00:14:02.330 --> 00:14:05.772\nBut in this router controller,\nI'm going to duplicate, and\n\n257\n00:14:05.772 --> 00:14:12.200\njust say router.controller.js\nmake sure it still works.\n\n258\n00:14:12.200 --> 00:14:16.010\nAll right now, I've showed you that,\nbecause we're gonna have to have some\n\n259\n00:14:16.010 --> 00:14:19.540\nadditional files in order for\nthe Angular router to work.\n\n260\n00:14:19.540 --> 00:14:21.690\nWe could put it all in one file but\nit's gonna get really messy,\n\n261\n00:14:21.690 --> 00:14:24.780\nkinda hard to understand what's going on.\n\n262\n00:14:24.780 --> 00:14:27.080\nWe will have a lot of\nscript tags at the bottom.\n\n263\n00:14:27.080 --> 00:14:30.140\nUltimately, I wouldn't do that\nin a production application.\n\n264\n00:14:30.140 --> 00:14:33.890\nI would try to bundle those using\nkind of build system to reduce that.\n\n265\n00:14:33.890 --> 00:14:36.860\nBut for now,\nwe're gonna have those there, all right.\n\n266\n00:14:38.060 --> 00:14:42.570\nSo I have it on the page,\nwhat is step one?\n\n267\n00:14:42.570 --> 00:14:45.140\nAnytime you have an external module,\n\n268\n00:14:45.140 --> 00:14:49.680\nyou should always come to ap.js and\ntell Angular about it.\n\n269\n00:14:49.680 --> 00:14:53.120\nThat's what these,\nthe set of square braces are for.\n\n270\n00:14:53.120 --> 00:14:58.290\nAnd zoom in a little bit,\nhide these, I broke them up but\n\n271\n00:14:58.290 --> 00:15:01.000\nonly so I could list them out, ngRoute.\n\n272\n00:15:01.000 --> 00:15:06.400\nThere we go, how did I know it's ngRoute?\n\n273\n00:15:06.400 --> 00:15:11.417\nWell that's the first gotcha,\nanytime you use an external module,\n\n274\n00:15:11.417 --> 00:15:14.875\nif it doesn't tell you\nthe name of the module and\n\n275\n00:15:14.875 --> 00:15:17.920\nhow to kind of like tell Angular about it.\n\n276\n00:15:17.920 --> 00:15:23.019\nYou're essentially letting Angular know\nthat you're using ngRoute as a module and\n\n277\n00:15:23.019 --> 00:15:24.250\nyou should be wary.\n\n278\n00:15:24.250 --> 00:15:29.530\nIf you come down here, ngRoute,\nthe ngRoute module provides routing and\n\n279\n00:15:29.530 --> 00:15:34.590\ndeeplinking services and directives for\nthe AngularJS applications, all right.\n\n280\n00:15:34.590 --> 00:15:38.460\nLet's just zoom in on that,\nthe ngRoute module.\n\n281\n00:15:38.460 --> 00:15:39.760\nIt should tell you the name of the module.\n\n282\n00:15:40.890 --> 00:15:43.050\nIf it does not tell you\nthe name of the module and\n\n283\n00:15:43.050 --> 00:15:45.750\nyou have to go looking,\nI would be kind of weary.\n\n284\n00:15:45.750 --> 00:15:47.890\nMay be a very powerful external module,\nbut\n\n285\n00:15:47.890 --> 00:15:51.430\nI would be weary because the documentation\nmay cause you frustration.\n\n286\n00:15:51.430 --> 00:15:55.350\nYou may still need to use it, it may\nbe the only solution to your problem.\n\n287\n00:15:55.350 --> 00:15:58.617\nAnd so, keep that in mind, you may\nhave to read through some source code.\n\n288\n00:15:58.617 --> 00:16:02.950\nSo, I add that there, beautiful,\nand notice it actually tells you,\n\n289\n00:16:02.950 --> 00:16:04.352\nyou need to load this.\n\n290\n00:16:04.352 --> 00:16:06.745\nIn the line above it.\n\n291\n00:16:06.745 --> 00:16:11.410\nSo I have it now wired up with Angular,\nall right?\n\n292\n00:16:11.410 --> 00:16:12.350\nThat's part one.\n\n293\n00:16:14.510 --> 00:16:18.437\nOur entire goal is to get like,\nhey it has a route.\n\n294\n00:16:18.437 --> 00:16:21.820\n&gt;&gt; [LAUGH]\n&gt;&gt; Right?\n\n295\n00:16:21.820 --> 00:16:26.180\nUltimately, we are gonna be building a\nlogin, sign up and a home route, like you\n\n296\n00:16:26.180 --> 00:16:29.670\nwould have on a page that you login,\nsign up and go to a particular profile.\n\n297\n00:16:29.670 --> 00:16:33.800\nThey're not going to be anything\namazing but that's our ultimate goal.\n\n298\n00:16:33.800 --> 00:16:37.030\nBut now we're just trying to get\nthe home route that says, hey.\n\n299\n00:16:37.030 --> 00:16:40.770\nAll right, so I got NG route wired up.\n\n300\n00:16:41.780 --> 00:16:46.670\nHere's the second gotcha,\nbecause we're using the angular router,\n\n301\n00:16:46.670 --> 00:16:51.260\nI no longer need to have a great\ndeal of things on this page.\n\n302\n00:16:51.260 --> 00:16:53.320\nNow, if I had a Navbar, right,\n\n303\n00:16:53.320 --> 00:16:58.050\nthat I wanted on every page,\nI may keep it here, right.\n\n304\n00:16:58.050 --> 00:17:02.190\nJust keep it on this page and just let\nit set there after the initial render.\n\n305\n00:17:02.190 --> 00:17:06.480\nBut, I may also need to have that change\nso that will become part of your views as\n\n306\n00:17:06.480 --> 00:17:09.450\nwell, that's optimally based on\nthe context of your application.\n\n307\n00:17:11.170 --> 00:17:18.680\nBut what I do need is this directive,\nng-view there we go,\n\n308\n00:17:18.680 --> 00:17:21.530\nso I can say ng-view, all right?\n\n309\n00:17:22.730 --> 00:17:27.500\nOr I can do this, well somehow.\n\n310\n00:17:27.500 --> 00:17:28.110\nThere we go.\n\n311\n00:17:30.140 --> 00:17:34.960\ndiv and then it can be an attribute\ndirective ng-view, just like that.\n\n312\n00:17:37.050 --> 00:17:39.000\nThose are the two ways\nthat I typically use it,\n\n313\n00:17:39.000 --> 00:17:40.950\nI'm not saying that\nthere's not other ways.\n\n314\n00:17:40.950 --> 00:17:43.966\nYou know using it as a class and\nwhatnot I would have to go look,\n\n315\n00:17:43.966 --> 00:17:45.011\nthis is a directive.\n\n316\n00:17:45.011 --> 00:17:49.139\nIt essentially defines\nthe region of the page that\n\n317\n00:17:49.139 --> 00:17:52.390\nthe angular router is going to manage.\n\n318\n00:17:53.620 --> 00:17:57.975\nIt's a single directive, but\nit may do effectively a copy and\n\n319\n00:17:57.975 --> 00:18:02.098\npaste of a whole bunch of stuff\ninside of that, all right?\n\n320\n00:18:02.098 --> 00:18:07.188\nSo, if I go over here and\nwell this is nifty if you don't put this\n\n321\n00:18:07.188 --> 00:18:12.300\nhere you can do everything else\ncorrectly and it will not work.\n\n322\n00:18:12.300 --> 00:18:15.110\nIt'll show you it's working but\nit won't render anything on the page.\n\n323\n00:18:16.340 --> 00:18:18.655\nAll right that's step two.\n\n324\n00:18:18.655 --> 00:18:21.610\n&gt;&gt; [LAUGH]\n&gt;&gt; Step three is I actually have to\n\n325\n00:18:21.610 --> 00:18:23.380\nconfigure my routes.\n\n326\n00:18:25.180 --> 00:18:28.750\nNow part of that is this route provider.\n\n327\n00:18:28.750 --> 00:18:32.839\nThis route provide is how\nyou configure your routes.\n\n328\n00:18:32.839 --> 00:18:35.892\nThere's a plethora of\nways you could do this,\n\n329\n00:18:35.892 --> 00:18:40.984\nyou could build routes per component,\nyou could build routes all together,\n\n330\n00:18:40.984 --> 00:18:43.740\nyou could build routes as sub-folders.\n\n331\n00:18:43.740 --> 00:18:46.642\nWe're just gonna keep it in one\nfile to keep it simple, but\n\n332\n00:18:46.642 --> 00:18:48.656\nthis is not necessarily the only way, or\n\n333\n00:18:48.656 --> 00:18:51.870\nI'm not even saying the best way\nof defining all of your routes.\n\n334\n00:18:51.870 --> 00:18:55.830\nSo, I'm going come over here to the source\nfolder and I'm going to create a new file,\n\n335\n00:18:55.830 --> 00:19:01.930\nand inside of that file, that file\nis gonna be called routes.config.js.\n\n336\n00:19:01.930 --> 00:19:05.880\nI like to think of it as, well, it's\nthe configuration of the router, right?\n\n337\n00:19:07.400 --> 00:19:09.930\nSo, what am I going to put in this?\n\n338\n00:19:09.930 --> 00:19:14.340\nNow because, this is in a separate file,\nI always have to use that getter syntax.\n\n339\n00:19:14.340 --> 00:19:18.590\nNotice over here on the controller,\nangular.module, that's the getter.\n\n340\n00:19:18.590 --> 00:19:19.940\nAnd, then I attach the controller.\n\n341\n00:19:20.980 --> 00:19:26.820\nI'm gonna say angular.module and\nit is angular-router.\n\n342\n00:19:26.820 --> 00:19:30.290\nNow you don't have to\nname your module that,\n\n343\n00:19:30.290 --> 00:19:33.890\nthat's just a little reminder of\nwhat we're actually doing, right?\n\n344\n00:19:33.890 --> 00:19:36.870\nAnd then this is going\nto be in a config block.\n\n345\n00:19:36.870 --> 00:19:38.600\nSo these are things that\nyou have to set up.\n\n346\n00:19:38.600 --> 00:19:41.595\nMaybe you wanna handle HTTP\nrequests a little bit different.\n\n347\n00:19:41.595 --> 00:19:43.570\nMaybe you want to modify\nthe headers that are on them,\n\n348\n00:19:43.570 --> 00:19:48.590\nmaybe you want to check to see if\nsomeone is logged in before you do this.\n\n349\n00:19:48.590 --> 00:19:51.271\nThese may be all things that\nyou do in configuration.\n\n350\n00:19:51.271 --> 00:19:56.275\nIn addition to we're going\nset up all of our routes,\n\n351\n00:19:56.275 --> 00:20:01.166\nso I'm going to save\nroutesConfig as a function and\n\n352\n00:20:01.166 --> 00:20:03.940\nthen well, routesConfig.\n\n353\n00:20:03.940 --> 00:20:10.556\nAnd I mean to capitalize that r,\nRoutesConfig and\n\n354\n00:20:10.556 --> 00:20:17.250\n$inject and then all of these\nlook very similar in nature.\n\n355\n00:20:17.250 --> 00:20:21.740\nAnd that is part of me,\nI'm not gonna lie to you,\n\n356\n00:20:21.740 --> 00:20:25.550\nthat is me being opinionated about this\nand trying to do something reproducible so\n\n357\n00:20:25.550 --> 00:20:29.140\nI don't have to learn something\nnew on every page, right?\n\n358\n00:20:29.140 --> 00:20:32.130\nI have to learn what\ngoes inside of them but\n\n359\n00:20:32.130 --> 00:20:34.210\nall of these setups are exactly the same.\n\n360\n00:20:34.210 --> 00:20:38.840\nGrab the module, is it a controllers\nservice, factory, directive,\n\n361\n00:20:38.840 --> 00:20:43.450\ncomponent, whatever it may be and then I\nwill just write function and that's it.\n\n362\n00:20:43.450 --> 00:20:47.180\nAgain, not the only way and this is\nkind of there is reproducibility right.\n\n363\n00:20:47.180 --> 00:20:50.720\nYou will see a chunk of Angular\ncode if its' not exactly like this\n\n364\n00:20:50.720 --> 00:20:51.376\nis very similar.\n\n365\n00:20:51.376 --> 00:20:56.112\nSo this $inject $routeProvider and\n\n366\n00:20:56.112 --> 00:21:02.476\nthe only reason you have\na $routeProvider service\n\n367\n00:21:02.476 --> 00:21:07.812\nis because you have ng-route in app.js.\n\n368\n00:21:07.812 --> 00:21:09.350\nIf you don't have this here,\n\n369\n00:21:09.350 --> 00:21:14.592\neven if you've loaded the external module\non the page, it will not work, at all.\n\n370\n00:21:14.592 --> 00:21:16.740\nBroke, right?\n\n371\n00:21:16.740 --> 00:21:18.750\nSo, keep that in mind.\n\n372\n00:21:18.750 --> 00:21:21.305\nThis almost seems a little doom and\ngloom doesn't it Zack.\n\n373\n00:21:21.305 --> 00:21:24.220\n&gt;&gt; [LAUGH] It does give one pause,\ndoesn't it.\n\n374\n00:21:24.220 --> 00:21:26.900\n&gt;&gt; It does, but\nI'll tell you what Zack's like\n\n375\n00:21:26.900 --> 00:21:30.370\nhold on a second let me write that down,\nI will not mess that up.\n\n376\n00:21:30.370 --> 00:21:32.170\n&gt;&gt; No, I've been running these jobs.\n\n377\n00:21:32.170 --> 00:21:34.570\n&gt;&gt; So these route providers.\n\n378\n00:21:34.570 --> 00:21:35.160\nWhat is it gonna do?\nWell,\n\n379\n00:21:35.160 --> 00:21:38.800\nit's gonna allow us to configure\nthe routes as we run this function.\n\n380\n00:21:38.800 --> 00:21:42.110\nSo we're gonna inject the service, this\nservice is actually used to decide how\n\n381\n00:21:42.110 --> 00:21:46.990\nthe router well, routes,\nand these are like URLs.\n\n382\n00:21:46.990 --> 00:21:48.870\nSo, how do we get that going?\n\n383\n00:21:48.870 --> 00:21:54.670\nSo $routeProvider, and provider.\n\n384\n00:21:54.670 --> 00:21:58.040\nAnd typically you would see this chained,\nyou do not have to do it this way.\n\n385\n00:21:58.040 --> 00:22:01.400\nBut you would see this chained with .when.\n\n386\n00:22:01.400 --> 00:22:08.690\nAnd the when has this particular form,\nwhat is the URL, right?\n\n387\n00:22:08.690 --> 00:22:11.370\nSo, not the, not the domain name, so\n\n388\n00:22:11.370 --> 00:22:17.635\nit feels like justinmenace.com, it's /,\nthat's what you want to hold on to.\n\n389\n00:22:17.635 --> 00:22:20.850\n/home, that's what you want to hold on to.\n\n390\n00:22:20.850 --> 00:22:22.760\nWe're not putting the entire domain in.\n\n391\n00:22:22.760 --> 00:22:25.970\nSo I'm actually going to call this home,\njust so we can see that, and\n\n392\n00:22:25.970 --> 00:22:29.460\nthen an object that is how\nyou configure the route.\n\n393\n00:22:29.460 --> 00:22:34.010\nWe can add a great deal of configuration\noptions here, but ultimately,\n\n394\n00:22:34.010 --> 00:22:37.155\nwe're just trying to get\nsomething on the page.\n\n395\n00:22:37.155 --> 00:22:38.430\n&gt;&gt; [LAUGH] Anything.\n\n396\n00:22:38.430 --> 00:22:43.060\n&gt;&gt; Anything, Zach's like can you please\nput something on the page already.\n\n397\n00:22:43.060 --> 00:22:45.950\nThat would be absolutely fantastic.\n\n398\n00:22:45.950 --> 00:22:46.580\n&gt;&gt; Anything.\n[LAUGH]\n\n399\n00:22:46.580 --> 00:22:48.220\n&gt;&gt; We're almost there Zach I promise,\n\n400\n00:22:48.220 --> 00:22:49.005\nI promise.\n\n401\n00:22:49.005 --> 00:22:55.970\nSo this .when at /home okay,\nthat's good but what do we have?\n\n402\n00:22:55.970 --> 00:22:59.080\nWell, most of these configuration objects,\nthink back to component.\n\n403\n00:22:59.080 --> 00:23:02.930\nIf you haven't looked at those set of\nvideos, definitely go check those out.\n\n404\n00:23:02.930 --> 00:23:04.860\nDirectives, go check those out.\n\n405\n00:23:04.860 --> 00:23:08.250\nA lot of these have very similar\nconfiguration properties\n\n406\n00:23:08.250 --> 00:23:09.070\nthat you can wire up.\n\n407\n00:23:10.410 --> 00:23:13.140\nMost of the time, template is one of them.\n\n408\n00:23:13.140 --> 00:23:16.730\nSo we're gonna say, template You are home!\n\n409\n00:23:17.900 --> 00:23:19.700\nAnd let's just put it h1.\n\n410\n00:23:19.700 --> 00:23:24.850\nNow, we're good to go here,\nthis should work.\n\n411\n00:23:24.850 --> 00:23:26.450\nIt's the moment of truth.\n\n412\n00:23:26.450 --> 00:23:29.480\nAnd, and, it didn't work.\n\n413\n00:23:31.410 --> 00:23:33.573\nWhy didn't it work?\n\n414\n00:23:33.573 --> 00:23:38.493\nWell, step four or five,\nI've lost count by now.\n\n415\n00:23:38.493 --> 00:23:39.858\n&gt;&gt; Four, it's four.\n\n416\n00:23:39.858 --> 00:23:44.602\n&gt;&gt; If I come over here to index.html,\nnotice I do not have that Java Script\n\n417\n00:23:44.602 --> 00:23:49.203\nfile on the page, so the router\nconfiguration actually never runs.\n\n418\n00:23:49.203 --> 00:23:54.593\nSo routes.config and now, now we should\n\n419\n00:23:54.593 --> 00:23:59.521\nactually get something on the page and\n\n420\n00:23:59.521 --> 00:24:04.144\nit kinda looks like we do, except.\n\n421\n00:24:04.144 --> 00:24:07.393\nThis is the part where I'm\ngonna hop over here and\n\n422\n00:24:07.393 --> 00:24:12.702\nserve this up in a quick little http\nserver, just for demonstration purposes so\n\n423\n00:24:12.702 --> 00:24:16.600\nwe can shorten the URL instead\nof having a giant file name.\n\n424\n00:24:16.600 --> 00:24:20.690\nNow we could have used that Chrome app\nthat we've seen in previous episodes.\n\n425\n00:24:20.690 --> 00:24:24.080\nThe Chrome app extension\nessentially that we'll serve it on.\n\n426\n00:24:24.080 --> 00:24:26.860\nBut this is just a little bit quicker,\nfor the sake of brevity.\n\n427\n00:24:26.860 --> 00:24:27.800\n&gt;&gt; Brevity.\n\n428\n00:24:27.800 --> 00:24:33.400\n&gt;&gt; So let's go to local host 8080,\nand there we go.\n\n429\n00:24:33.400 --> 00:24:34.960\nExcept it's not running.\n\n430\n00:24:34.960 --> 00:24:36.780\nNotice it's not showing any errors.\n\n431\n00:24:38.680 --> 00:24:42.087\nSo what could possibly be going on?\n\n432\n00:24:42.087 --> 00:24:45.431\nWell, what did I say?\n\n433\n00:24:45.431 --> 00:24:46.872\nI said /home.\n\n434\n00:24:46.872 --> 00:24:52.228\n[LAUGH] Silly me, I am so wrong, /home,\n\n435\n00:24:52.228 --> 00:24:57.434\nError response, cannot find /home.\n\n436\n00:24:57.434 --> 00:25:04.096\nHm, so, Zach, we're in the mood for\na little live action debugging here.\n\n437\n00:25:04.096 --> 00:25:07.347\n&gt;&gt; Live action debugging.\n&gt;&gt; Because all the setup sometimes does go\n\n438\n00:25:07.347 --> 00:25:08.400\nawry, okay.\n\n439\n00:25:09.840 --> 00:25:13.050\nSo index to html, we have all of this.\n\n440\n00:25:13.050 --> 00:25:16.770\nI need to double check that, for\nsome reason that's looking weird to me.\n\n441\n00:25:16.770 --> 00:25:19.800\nWe know that Angular works,cool,\n\n442\n00:25:19.800 --> 00:25:23.590\nI have my router controller on the page,\nthat's good.\n\n443\n00:25:23.590 --> 00:25:27.200\nI have my routes.config.js and\n\n444\n00:25:27.200 --> 00:25:30.710\nlet's make sure that's\nthe exact same name, and it is.\n\n445\n00:25:30.710 --> 00:25:35.920\nAnd if I come to routes.config,\nI run the config block, routeProvider,\n\n446\n00:25:35.920 --> 00:25:38.810\nrouteProvider and\nhere is something that I tend to do.\n\n447\n00:25:38.810 --> 00:25:43.350\nI like to add a little\nbit of console.log there.\n\n448\n00:25:43.350 --> 00:25:46.270\nLet's just see if this config block runs,\nand\n\n449\n00:25:46.270 --> 00:25:50.350\nlet's just go back to local host 8080 and\nnotice it does run.\n\n450\n00:25:51.670 --> 00:25:52.560\nAll right?\n\n451\n00:25:52.560 --> 00:25:55.226\nSo now, why is this not working?\n\n452\n00:25:55.226 --> 00:25:58.678\nWell, this is where the documentation\nstarts to come into play, and\n\n453\n00:25:58.678 --> 00:26:01.192\nif we come over here, and\nwe go to routeProvider.\n\n454\n00:26:03.207 --> 00:26:09.400\nIt will tell you .when adds a new route,\nwe'll use that, a path and a route.\n\n455\n00:26:09.400 --> 00:26:12.764\nAnd here are all the things\nthat it can use, like template,\n\n456\n00:26:12.764 --> 00:26:14.521\ncontroller as, controller.\n\n457\n00:26:14.521 --> 00:26:17.576\nSo that's not what I,\nI don't think that's it.\n\n458\n00:26:17.576 --> 00:26:22.645\nIf we come over here and\nwe look at the script.js,\n\n459\n00:26:22.645 --> 00:26:30.040\nwhich is everything in a row,\nokay, .win/routeprovider.config.\n\n460\n00:26:30.040 --> 00:26:34.645\nIt looks like it should work and\nit's running, but it's not.\n\n461\n00:26:34.645 --> 00:26:40.610\nWell, let's go look at the index.html,\nng-view.\n\n462\n00:26:40.610 --> 00:26:44.957\nSo they put it in a div form,\nand I wonder,\n\n463\n00:26:44.957 --> 00:26:53.431\nmaybe it has sent changed to where I have\nto have it as a div, and an ng-view here.\n\n464\n00:26:53.431 --> 00:26:59.706\nNg-view and now if we come back and\nwe refresh it's still running,\n\n465\n00:26:59.706 --> 00:27:03.350\nbut it's not quite working out for us.\n\n466\n00:27:03.350 --> 00:27:04.370\nSo.\n\n467\n00:27:04.370 --> 00:27:07.340\n&gt;&gt; So, Justin is this another one of those\ngotchas that will get you if you're not\n\n468\n00:27:07.340 --> 00:27:09.240\ncareful, if you're not watching out for\nit?\n\n469\n00:27:09.240 --> 00:27:11.690\n&gt;&gt; Yeah this is another\none of those gotchas.\n\n470\n00:27:11.690 --> 00:27:14.870\nWell we're about to find out\nif it's one of those gotchas.\n\n471\n00:27:14.870 --> 00:27:19.650\nPretty sure it is and I should've\ntalked about this beforehand, and well,\n\n472\n00:27:19.650 --> 00:27:23.940\nit got me, so hopefully it won't get you,\nit's bound to happen from time to time.\n\n473\n00:27:23.940 --> 00:27:27.570\nSo let's go ahead and\ntake a look at my screen,\n\n474\n00:27:27.570 --> 00:27:30.550\nand let's zoom in\na little bit on this URL.\n\n475\n00:27:30.550 --> 00:27:33.550\nNow here's the gotcha on this,\n\n476\n00:27:33.550 --> 00:27:39.200\nwhen the page loads the Angular Router's\ngonna take over and start routing.\n\n477\n00:27:39.200 --> 00:27:42.140\nNow you wouldn't know this\nuntil you got it working.\n\n478\n00:27:42.140 --> 00:27:48.520\nBut if you do hash, and\nin the newer versions, it's #!.\n\n479\n00:27:48.520 --> 00:27:51.660\nOr, I guess in most, it's shebang, right?\n\n480\n00:27:51.660 --> 00:27:57.630\nAnd then /, and then if we go home,\nnow you are home.\n\n481\n00:27:57.630 --> 00:28:01.449\nSo now there's this little prependment\n\n482\n00:28:03.030 --> 00:28:07.040\nof the hash and\nexclamation point or the shebang,\n\n483\n00:28:07.040 --> 00:28:10.890\nin order to let Angular Router know,\nthese are the routes that I'm looking for.\n\n484\n00:28:10.890 --> 00:28:14.730\nSo after this portion,\nthat's actually what it's looking for.\n\n485\n00:28:16.070 --> 00:28:21.980\nAnd in older versions a lot of times\nit was the hash symbol just by itself,\n\n486\n00:28:21.980 --> 00:28:25.890\nbut I think that has since\nchanged at least, well,\n\n487\n00:28:25.890 --> 00:28:27.590\nit has in these more recent versions.\n\n488\n00:28:27.590 --> 00:28:32.560\nBut I'm not entirely sure what version\nthat is, but we got something on the page.\n\n489\n00:28:32.560 --> 00:28:39.980\nWe have spent a lot of time doing\nsetup but we have been successful.\n\n490\n00:28:39.980 --> 00:28:44.760\n&gt;&gt; And now, what would happen if somebody\nnavigated to the route, right, and\n\n491\n00:28:44.760 --> 00:28:47.090\nit isn't in the configuration,\nwhat would happen then?\n\n492\n00:28:47.090 --> 00:28:49.190\n&gt;&gt; All right, so\nonce the Angular Router takes over,\n\n493\n00:28:49.190 --> 00:28:53.330\nwhat happens is I now navigate to a route\nthat is not in the configuration.\n\n494\n00:28:53.330 --> 00:28:56.160\n&gt;&gt; Yeah.\n&gt;&gt; Well, just to clarify what\n\n495\n00:28:56.160 --> 00:29:00.260\nwe had happen previously, is the router\nhadn't taken over yet, right?\n\n496\n00:29:00.260 --> 00:29:03.870\nIt was not part of the Angular Route\nsubsystem because of the shebang.\n\n497\n00:29:03.870 --> 00:29:09.850\nBut what would happen if now\nI have shebang slash cheese?\n\n498\n00:29:09.850 --> 00:29:10.530\nOr crowbar?\n\n499\n00:29:10.530 --> 00:29:11.850\nOr whatever it may be?\n\n500\n00:29:11.850 --> 00:29:15.150\nWell, I think there's no better thing\nto do than, let's see what happens and\n\n501\n00:29:15.150 --> 00:29:16.320\nsee if it breaks.\n\n502\n00:29:16.320 --> 00:29:22.280\nSo let's take a look at my screen and you\nknow what, I'm double thinking this, Zach.\n\n503\n00:29:22.280 --> 00:29:26.627\nI am looking and we are close to out of\ntime, so maybe we should come back and-\n\n504\n00:29:26.627 --> 00:29:27.271\n&gt;&gt; Part two!\n\n505\n00:29:27.271 --> 00:29:29.947\n&gt;&gt; And figure that out in part two.\n\n506\n00:29:29.947 --> 00:29:32.693\n&gt;&gt; I think we should and\nyou did a wonderful job as usual, Justin.\n\n507\n00:29:32.693 --> 00:29:37.344\nSo intro to AngularJS, routing with\nAngular Router, that'll be a part two,\n\n508\n00:29:37.344 --> 00:29:38.409\nthis is part one.\n\n509\n00:29:38.409 --> 00:29:40.350\nWanna make sure you watch both of them.\n\n510\n00:29:40.350 --> 00:29:43.678\nAnd watch all the videos in\nthe intro to Angular JS series.\n\n511\n00:29:43.678 --> 00:29:44.831\nCuz you'll be very glad that you did.\n\n512\n00:29:44.831 --> 00:29:50.230\nAnd thank you for watching DEVPRO.TV,\nremember a good DEVPRO is always learning.\n\n513\n00:29:50.230 --> 00:29:51.157\nI'm Zach Memes.\n\n514\n00:29:51.157 --> 00:29:52.016\n&gt;&gt; And I'm Justin Nennison.\n\n515\n00:29:52.016 --> 00:29:53.590\n&gt;&gt; And we'll see you very soon.\n\n516\n00:29:53.590 --> 00:29:58.216\n[MUSIC]\n\n",
          "vimeoId": "227075316"
        },
        {
          "description": "Justin and Zach continue the discussion about Client Routing With Angular Router, navigating to a Route that isn't in this configuration, what the '.otherwise' function accomplishes, continuing on with the Route Configuration, adding a Controller & ControllerAs, documentation for $routeProvider, and inline template.",
          "length": "1400",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-introtoangularjs/techskills-introtoangularjs-1-16-2-client_routing_with_angular_router_pt2-071417-PGM.00_24_37_17.Still001.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-introtoangularjs/techskills-introtoangularjs-1-16-2-client_routing_with_angular_router_pt2-071417-PGM.00_24_37_17.Still001-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-introtoangularjs/techskills-introtoangularjs-1-16-2-client_routing_with_angular_router_pt2-071417-PGM.00_24_37_17.Still001-sm.jpg",
          "title": "Client Routing with Angular Router Part 2",
          "transcript": "WEBVTT\n\n1\n00:00:00.023 --> 00:00:06.257\n[MUSIC]\n\n2\n00:00:06.257 --> 00:00:10.590\nHey thank you for watching DEVPRO.TV\nhelping you learn wherever you go.\n\n3\n00:00:10.590 --> 00:00:15.110\nMy name is Zack Memos and I'm your host as\nwe continue in with intro to AngularJS and\n\n4\n00:00:15.110 --> 00:00:18.930\nwe are working with\nAngular later part two.\n\n5\n00:00:18.930 --> 00:00:21.640\nWe had part one, hopefully you saw that.\n\n6\n00:00:21.640 --> 00:00:23.140\nMake sure you do if you didn't.\n\n7\n00:00:23.140 --> 00:00:26.830\nAnd bringing us all the information\nthat we need is Justin Dennison,\n\n8\n00:00:26.830 --> 00:00:28.960\nthe man, the myth, the legend.\n\n9\n00:00:28.960 --> 00:00:30.200\n&gt;&gt; Well, I'll go with the man and myth.\n\n10\n00:00:30.200 --> 00:00:31.580\n&gt;&gt; The legend.\n&gt;&gt; I don't know about legend.\n\n11\n00:00:32.620 --> 00:00:33.760\n&gt;&gt; Legend.\n&gt;&gt; But, yeah,\n\n12\n00:00:33.760 --> 00:00:38.530\nin part one we definitely left\noff with a conundrum, right?\n\n13\n00:00:38.530 --> 00:00:39.690\nYou asked me a question Zach.\n\n14\n00:00:39.690 --> 00:00:41.050\n&gt;&gt; Yes.\n&gt;&gt; And what was that question?\n\n15\n00:00:41.050 --> 00:00:45.960\nWell what would happen if someone\nnavigated to the route, right?\n\n16\n00:00:45.960 --> 00:00:49.650\nAnd it isn't in the configuration,\nwhat do you do?\n\n17\n00:00:49.650 --> 00:00:53.530\n&gt;&gt; Well there's no other way other than,\nwell just try it out and see what happens.\n\n18\n00:00:53.530 --> 00:00:56.150\nSo let's do a quick review of where we,\n\n19\n00:00:56.150 --> 00:00:58.700\nwe actually got the router setup,\nwe actually got a route in there.\n\n20\n00:00:58.700 --> 00:00:59.890\nWe had a /home route.\n\n21\n00:00:59.890 --> 00:01:02.507\nWe got some weird shebang slash\nthing that we have to do.\n\n22\n00:01:02.507 --> 00:01:03.254\n&gt;&gt; Shebang.\n\n23\n00:01:03.254 --> 00:01:07.770\n&gt;&gt; But when we got that running, Zach\nwas there to go ahead and sweep it all\n\n24\n00:01:07.770 --> 00:01:12.170\ndown kind of like after you build a house\nof cards and somebody slams the door.\n\n25\n00:01:12.170 --> 00:01:15.130\nHe's like hey, what happens if you\ndo this, and I'm like I don't know,\n\n26\n00:01:15.130 --> 00:01:16.510\nwe just got it working.\n\n27\n00:01:16.510 --> 00:01:19.980\nBut we're here to see what\nproblems can arise and\n\n28\n00:01:19.980 --> 00:01:22.950\nkind of see those nuance details\nthat we should pay attention to.\n\n29\n00:01:22.950 --> 00:01:24.050\n&gt;&gt; So you fixed it.\n\n30\n00:01:24.050 --> 00:01:24.820\n&gt;&gt; Let's go ahead and\n\n31\n00:01:24.820 --> 00:01:27.960\ntake a look at my screen and\n&gt;&gt; And see what happens.\n\n32\n00:01:27.960 --> 00:01:31.580\nSo we're at a shebang /home right?\n\n33\n00:01:31.580 --> 00:01:33.070\nAnd that's part of the configuration.\n\n34\n00:01:34.530 --> 00:01:36.490\nRight here /home.\n\n35\n00:01:36.490 --> 00:01:37.860\nNow notice the shebang's not there,\n\n36\n00:01:37.860 --> 00:01:43.300\nthat's something router pre\npins the prefix in order\n\n37\n00:01:43.300 --> 00:01:48.580\nto divide that from the server side routes\nthat may be part of maybe an API or maybe\n\n38\n00:01:48.580 --> 00:01:53.110\nyou're serving up additional admin page\nthat's a separate Angular application.\n\n39\n00:01:53.110 --> 00:01:56.550\nSo it's to help keep those separate.\n\n40\n00:01:58.110 --> 00:02:03.060\nSo we have this and well,\nit looks like it should work and\n\n41\n00:02:03.060 --> 00:02:08.384\nit does, but now what if I go to \\cheese?\n\n42\n00:02:08.384 --> 00:02:10.740\nNo errors.\n\n43\n00:02:12.120 --> 00:02:13.400\nIt just gives you a blank page.\n\n44\n00:02:14.470 --> 00:02:19.420\nNow, if I had a nav bar on\nthe main page outside of this,\n\n45\n00:02:19.420 --> 00:02:23.090\nthis would say, nav, and\nthis is an unordered list, and\n\n46\n00:02:23.090 --> 00:02:30.110\nthen I have a list item with an anchor\ntag that has shebang, home, like so.\n\n47\n00:02:30.110 --> 00:02:31.840\nRight, go to home.\n\n48\n00:02:31.840 --> 00:02:35.520\nAnd I refresh well that will still\nrender and I can go to home,\n\n49\n00:02:35.520 --> 00:02:41.170\nthere we go now someone tries to go to\nit's kind of a weird experience right.\n\n50\n00:02:41.170 --> 00:02:43.710\nIt would almost be best to say\n\n51\n00:02:43.710 --> 00:02:47.760\nyou know what if you accidentally end up\nsomewhere your not supposed to be then I'm\n\n52\n00:02:47.760 --> 00:02:51.299\ngoing to send you more less\na redirect as a default.\n\n53\n00:02:52.870 --> 00:02:56.180\nWell the route provider service\nactually allows you to wire that up.\n\n54\n00:02:57.740 --> 00:03:02.690\nSo we come over here to route doc config\nwell after this dot win assuming this is\n\n55\n00:03:02.690 --> 00:03:07.980\nthe only route that we wire up\nwe can say that dot otherwise so\n\n56\n00:03:07.980 --> 00:03:09.990\notherwise What do I wanna do?\n\n57\n00:03:09.990 --> 00:03:14.030\nNow, notice that I'm not\nputting a slash in here.\n\n58\n00:03:14.030 --> 00:03:16.340\nAnd let's get a little bit of over scroll.\n\n59\n00:03:16.340 --> 00:03:20.980\nNotice I'm not putting a route, a string\nthat determines what the route is.\n\n60\n00:03:20.980 --> 00:03:23.530\nThis is completely a configuration object.\n\n61\n00:03:23.530 --> 00:03:25.160\nWell, what do I wanna do?\n\n62\n00:03:25.160 --> 00:03:32.140\nI want to redirect to /home I'm\nsending it to one of my other routes.\n\n63\n00:03:32.140 --> 00:03:33.010\nThis is always the case.\n\n64\n00:03:33.010 --> 00:03:35.760\nYou're gonna send it to\none of your other routes.\n\n65\n00:03:35.760 --> 00:03:37.890\nAnd the reason being is, those exist,\n\n66\n00:03:37.890 --> 00:03:40.660\nand that'll help the experience\nbe a little nicer.\n\n67\n00:03:40.660 --> 00:03:44.720\nAlso keeps people from doing crazy\nstuff like getting to admin pages,\n\n68\n00:03:44.720 --> 00:03:49.020\nbecause part of this may allow you\nto verify that they are logged in.\n\n69\n00:03:49.020 --> 00:03:51.665\nAnd they're not accessing pages\nthat they shouldn't, right.\n\n70\n00:03:51.665 --> 00:03:54.938\n&gt;&gt; [SOUND]\n&gt;&gt; So let's go check it out and refresh.\n\n71\n00:03:54.938 --> 00:03:57.527\nAnd notice, I had cheese there.\n\n72\n00:03:59.107 --> 00:04:01.230\nAnd it automatically sends me back home.\n\n73\n00:04:02.300 --> 00:04:04.710\nThat is how we handle\n\n74\n00:04:04.710 --> 00:04:07.640\nkeeping people from going to\nthe routes that they shouldn't be.\n\n75\n00:04:07.640 --> 00:04:09.150\n&gt;&gt; Wow, that's amazing.\n\n76\n00:04:09.150 --> 00:04:11.820\n&gt;&gt; Well so, okay what are some of\nthe things that you can put in the route\n\n77\n00:04:11.820 --> 00:04:13.480\nconfiguration?\n\n78\n00:04:13.480 --> 00:04:16.300\n&gt;&gt; Well, what are some other things that\nwe can put in the configuration, and\n\n79\n00:04:16.300 --> 00:04:21.290\npart of that is actually, let's build\nour log in and our sign up pages.\n\n80\n00:04:21.290 --> 00:04:26.220\nNow, this is kind of a roll back, kind of\na little bit of review in building these\n\n81\n00:04:26.220 --> 00:04:29.350\ncomponents and templates and\nthings like that.\n\n82\n00:04:29.350 --> 00:04:35.370\nBut part of that is to show you the power\nthat comes up with the angular router.\n\n83\n00:04:35.370 --> 00:04:39.130\nNow this may take a little bit of time but\nkeep in mind this is,\n\n84\n00:04:39.130 --> 00:04:43.720\nwe're building towards actually having\nan application that uses AngularJS.\n\n85\n00:04:43.720 --> 00:04:45.670\n&gt;&gt; We've got the time for you Justin.\n\n86\n00:04:45.670 --> 00:04:48.760\n&gt;&gt; So first thing first,\nlet's do a little bit of planning here.\n\n87\n00:04:48.760 --> 00:04:52.720\n&gt;&gt; Let's assume that I have a log in and\n\n88\n00:04:52.720 --> 00:04:58.350\na sign in page not a sign\nup page log in and\n\n89\n00:04:58.350 --> 00:05:03.870\nsign are the same thing and\nthen let's give those appropriate links.\n\n90\n00:05:03.870 --> 00:05:05.900\nSo sign up.\n\n91\n00:05:07.020 --> 00:05:09.060\nAll right, so if I go and\nrefresh, there we go.\n\n92\n00:05:09.060 --> 00:05:12.150\nIf I click log in its always\ngonna send me back home.\n\n93\n00:05:12.150 --> 00:05:16.850\nAnd the reason being is, it is making\n\n94\n00:05:16.850 --> 00:05:21.230\nsure that I'm on the otherwise route\nbecause there is no other routes to find.\n\n95\n00:05:21.230 --> 00:05:24.680\nAll right, now that I have this.\n\n96\n00:05:24.680 --> 00:05:26.575\nLet's think about what we really want.\n\n97\n00:05:26.575 --> 00:05:30.300\nIf I go to the log in page,\nI don't want your home.\n\n98\n00:05:30.300 --> 00:05:32.230\nI want, like a log in form, right?\n\n99\n00:05:33.870 --> 00:05:36.650\nSo let's just build that\nkind of old school.\n\n100\n00:05:36.650 --> 00:05:40.110\nLike this is how your going to\nsee this angular router stuff\n\n101\n00:05:40.110 --> 00:05:42.450\nour sign up is going to\nredirect to home for\n\n102\n00:05:42.450 --> 00:05:45.680\nnow but we'll circle around back\naround it and get that one as well.\n\n103\n00:05:45.680 --> 00:05:50.640\nAll right, so what are we going to do?\n\n104\n00:05:50.640 --> 00:05:53.540\nNow, let's go ahead and\nadd that to the configuration.\n\n105\n00:05:53.540 --> 00:05:59.510\nI like to do this because it helps me\nknow that things are wired up correctly.\n\n106\n00:05:59.510 --> 00:06:04.750\nAll right so boom and then template,\nand I always put a template in\n\n107\n00:06:04.750 --> 00:06:10.200\nhere to make sure then,\nwell this works before I do anything else.\n\n108\n00:06:10.200 --> 00:06:11.710\nBecause if I do a bunch of other stuff,\n\n109\n00:06:11.710 --> 00:06:16.410\nand then it doesn't work, I don't know\nif it's the original configuration, or\n\n110\n00:06:16.410 --> 00:06:19.140\nif I've caused some other\nissue somewhere else.\n\n111\n00:06:19.140 --> 00:06:21.479\nNow, do take a look at this,\nnotice where I put this win.\n\n112\n00:06:23.240 --> 00:06:28.030\nOkay, it comes before the otherwise, and\nactually there should be a semicolon here.\n\n113\n00:06:28.030 --> 00:06:32.030\nNotice also that\nthe semicolon is not here,\n\n114\n00:06:32.030 --> 00:06:33.490\nor here, that's because I'm chaining.\n\n115\n00:06:33.490 --> 00:06:37.270\nI don't have to do it this way,\nbut if I do chain,\n\n116\n00:06:37.270 --> 00:06:41.080\nyou should think of\notherwise as the fall back.\n\n117\n00:06:41.080 --> 00:06:41.610\nRight?\n\n118\n00:06:41.610 --> 00:06:44.470\nSo, when I go home, do this,\nwhen I go to log in, do this, otherwise,\n\n119\n00:06:44.470 --> 00:06:45.120\nsend me back to home.\n\n120\n00:06:46.450 --> 00:06:48.740\nNo semicolons,\nbecause I need that chaining.\n\n121\n00:06:48.740 --> 00:06:51.480\nThis is how you will see\na lot of configuration.\n\n122\n00:06:51.480 --> 00:06:52.260\nThis is not the only way.\n\n123\n00:06:52.260 --> 00:06:56.230\nI could technically pull these out, right?\n\n124\n00:06:56.230 --> 00:07:00.460\nAnd I could say, not there,\nbut inside this configuration,\n\n125\n00:07:00.460 --> 00:07:05.949\nI could say var homeConfig, paste,\n\n126\n00:07:05.949 --> 00:07:10.630\nand say homeConfig.\n\n127\n00:07:10.630 --> 00:07:12.120\nBut that's a lot of\nintermediate variables,\n\n128\n00:07:12.120 --> 00:07:13.920\nthat's a lot of things going on.\n\n129\n00:07:13.920 --> 00:07:18.260\nSo typically you see people just\nin line them as we've been doing.\n\n130\n00:07:18.260 --> 00:07:22.800\nSo that's how I proceed, especially\nif your apps not gonna get crazy.\n\n131\n00:07:22.800 --> 00:07:25.600\nThis is kind of line by line\na configuration now let's\n\n132\n00:07:25.600 --> 00:07:29.470\nmake sure this log in works\nbefore we carry on anywhere else.\n\n133\n00:07:31.000 --> 00:07:35.520\nSo home works sign up redirects\nlog in hey log in works.\n\n134\n00:07:35.520 --> 00:07:39.744\nAlso here's a side effect because I'm\nnot re rendering starting up an app or\n\n135\n00:07:39.744 --> 00:07:41.990\nanything it's going to be fairly fast.\n\n136\n00:07:41.990 --> 00:07:46.733\nBecause I'm just putting a little bit\nof information unless I need to make\n\n137\n00:07:46.733 --> 00:07:51.476\nan [INAUDIBLE] like get new information\nfrom a server somewhere before that\n\n138\n00:07:51.476 --> 00:07:52.488\nview renders.\n\n139\n00:07:52.488 --> 00:07:55.716\nSo could be fairly fast.\n\n140\n00:07:55.716 --> 00:08:00.147\nIt's not guaranteed to be depending\non what you need to do in order to\n\n141\n00:08:00.147 --> 00:08:03.220\ntransition to that particular route.\n\n142\n00:08:03.220 --> 00:08:06.320\nAll right, so there's our login, so\nI know that this template works.\n\n143\n00:08:06.320 --> 00:08:11.920\nOkay, okay, so we have this, but\nnow what else could we put there, right?\n\n144\n00:08:11.920 --> 00:08:14.190\nNow I have a couple things\nI wanna talk about so\n\n145\n00:08:14.190 --> 00:08:17.229\nI'm making sure that I go\nthrough all of these pieces.\n\n146\n00:08:18.430 --> 00:08:23.060\nWell, if I have a template,\nI probably have a controller.\n\n147\n00:08:24.140 --> 00:08:26.120\nAnd let's just call this\nthe LogInController.\n\n148\n00:08:27.395 --> 00:08:28.520\nNow notice it's in quotes.\n\n149\n00:08:28.520 --> 00:08:29.760\nNow I'm putting this in quotes because\n\n150\n00:08:29.760 --> 00:08:31.435\nI'm gonna register this\ncontroller with Angular.\n\n151\n00:08:31.435 --> 00:08:33.380\nIt's gonna be in it's own separate file.\n\n152\n00:08:33.380 --> 00:08:38.030\nI also need a template, but\nI don't wanna put that inline.\n\n153\n00:08:38.030 --> 00:08:42.050\nI would really like to\nkeep that as an HTML file.\n\n154\n00:08:42.050 --> 00:08:48.090\nBut for now I'm going to say,\nctrl.message,\n\n155\n00:08:48.090 --> 00:08:51.420\njust to see if things are working.\n\n156\n00:08:51.420 --> 00:08:54.801\nSo I'm gonna build my controller,\nwire it up, see how things go, all right?\n\n157\n00:08:54.801 --> 00:09:01.644\nSo now inside my source file or source\nfolder, I'm gonna create a new file and\n\n158\n00:09:01.644 --> 00:09:07.345\nI'm gonna call it logincontroller.js,\njust like so, okay?\n\n159\n00:09:07.345 --> 00:09:08.455\nSo there it is.\n\n160\n00:09:08.455 --> 00:09:13.081\nAnd now angular.module, angular-router.\n\n161\n00:09:15.364 --> 00:09:17.106\nAnd then controller.\n\n162\n00:09:17.106 --> 00:09:20.172\nController.\n\n163\n00:09:20.172 --> 00:09:24.774\nLoginController.\n\n164\n00:09:24.774 --> 00:09:27.638\nWow, the typing is not with me today,\nZach.\n\n165\n00:09:27.638 --> 00:09:29.250\n&gt;&gt; [LAUGH]\n&gt;&gt; There we go.\n\n166\n00:09:29.250 --> 00:09:30.775\n&gt;&gt; The typing force is not with you.\n\n167\n00:09:30.775 --> 00:09:35.660\n&gt;&gt; LoginController.$inject.\n\n168\n00:09:35.660 --> 00:09:39.942\nAnd then I really should just\nmake a snippet for this.\n\n169\n00:09:39.942 --> 00:09:42.380\nWhich reminds me,\nI should probably make a snippet for this.\n\n170\n00:09:42.380 --> 00:09:43.934\n&gt;&gt; Yeah.\n&gt;&gt; All right, so\n\n171\n00:09:43.934 --> 00:09:49.675\nlet's just say this.message\n= 'login page', okay?\n\n172\n00:09:49.675 --> 00:09:51.540\nSo there we go, we're good.\n\n173\n00:09:53.340 --> 00:09:54.350\nOne final thing.\n\n174\n00:09:54.350 --> 00:09:57.080\nDon't forget to bring it in on the page,\nright?\n\n175\n00:09:57.080 --> 00:09:58.925\nSo let's go ahead and\nkeep our controllers together.\n\n176\n00:09:58.925 --> 00:10:01.260\nLoginController.\n\n177\n00:10:01.260 --> 00:10:03.961\nThere we go, let's go check it out.\n\n178\n00:10:03.961 --> 00:10:08.810\nRefresh, and it doesn't quite work.\n\n179\n00:10:10.780 --> 00:10:12.908\nNo errors, if I go to network,\n\n180\n00:10:12.908 --> 00:10:16.470\nthe login controller's on\nthe page with the 200, right?\n\n181\n00:10:16.470 --> 00:10:22.010\nIt's right there, and\napparently I just click some stuff.\n\n182\n00:10:22.010 --> 00:10:24.700\nSo that's good, but what happened?\n\n183\n00:10:24.700 --> 00:10:28.357\nWell, this is an additional thing that\nwe can do inside of our RouteConfig.\n\n184\n00:10:28.357 --> 00:10:31.204\nWe can use the controller as syntax.\n\n185\n00:10:31.204 --> 00:10:34.586\nSince there's no error, we know that\nthat registering the controller worked.\n\n186\n00:10:34.586 --> 00:10:37.350\nI can say say controllerAs.\n\n187\n00:10:38.890 --> 00:10:40.770\nAnd I wanna use ctrl.\n\n188\n00:10:42.040 --> 00:10:43.610\nOkay, good deal.\n\n189\n00:10:43.610 --> 00:10:45.260\nAnd you know what?\n\n190\n00:10:45.260 --> 00:10:48.470\nJust to be consistent,\nI'm gonna use $ctrl.\n\n191\n00:10:48.470 --> 00:10:51.680\nBecause if I ever want to use components,\nthen I don't have to use controllerAs.\n\n192\n00:10:51.680 --> 00:10:54.350\nIt just reduces the amount of\nboilerplate that I have to do for\n\n193\n00:10:54.350 --> 00:10:58.640\nthose particular routes or\nthose particular components.\n\n194\n00:10:58.640 --> 00:11:01.985\nSo now, if I come back and I refresh,\nlook, my message has shown.\n\n195\n00:11:01.985 --> 00:11:06.370\nI have made a really good progress here,\nright?\n\n196\n00:11:06.370 --> 00:11:06.940\n&gt;&gt; Yeah.\n\n197\n00:11:06.940 --> 00:11:13.740\n&gt;&gt; So now I have a route that has a\ntemplate, a controller, the controllerAs.\n\n198\n00:11:13.740 --> 00:11:18.310\n&gt;&gt; And well, if I have template,\nI should be able to use the template URL.\n\n199\n00:11:18.310 --> 00:11:21.591\nNow keep in mind, this is only\navailable if it's running on a server.\n\n200\n00:11:21.591 --> 00:11:26.170\nI have this running from the previous\nepisode on a Python server.\n\n201\n00:11:27.720 --> 00:11:33.550\nJust Python 3 dash simple http.server 88,\nall right?\n\n202\n00:11:33.550 --> 00:11:36.700\nYou could use the Chrome server web app.\n\n203\n00:11:36.700 --> 00:11:38.660\nThat'll create a server for you.\n\n204\n00:11:38.660 --> 00:11:41.890\nIt has to be served for\nthis next part to work, all right?\n\n205\n00:11:41.890 --> 00:11:44.182\nSo this template URL,\nwell, what is that URL?\n\n206\n00:11:46.011 --> 00:11:48.750\nWell, that is the tricky part, right?\n\n207\n00:11:48.750 --> 00:11:51.400\nWhere am I going to load this?\n\n208\n00:11:51.400 --> 00:11:55.840\nWell, essentially this is from the context\nof where this routes file is running.\n\n209\n00:11:55.840 --> 00:11:59.070\nSometimes that gets a little iffy,\nso we're gonna make a best guess and\n\n210\n00:11:59.070 --> 00:12:00.720\nsee how things go.\n\n211\n00:12:00.720 --> 00:12:04.350\nSo src, and\nI'm actually gonna put this in a,\n\n212\n00:12:04.350 --> 00:12:09.250\nlet's call this a views folder,\nand this is a login view.\n\n213\n00:12:09.250 --> 00:12:12.910\nNow this one way to organize our\napplication, not necessarily the only or\n\n214\n00:12:12.910 --> 00:12:14.900\nthe best, but it is away.\n\n215\n00:12:16.340 --> 00:12:22.780\nSo, inside on my source folder I'm\ngonna create a new folder called views.\n\n216\n00:12:22.780 --> 00:12:26.840\nAnd inside of that views,\nI'm gonna create a login.html.\n\n217\n00:12:26.840 --> 00:12:30.470\nWell, html file right?\n\n218\n00:12:30.470 --> 00:12:33.660\nSo now, now here comes the trick.\n\n219\n00:12:33.660 --> 00:12:36.150\nLet's just make sure that it works.\n\n220\n00:12:37.250 --> 00:12:37.880\nRefresh.\n\n221\n00:12:39.010 --> 00:12:39.600\nAnd it does.\n\n222\n00:12:39.600 --> 00:12:40.500\nIt will load it up.\n\n223\n00:12:41.770 --> 00:12:42.361\nWe're getting closer, Zach.\n\n224\n00:12:42.361 --> 00:12:43.010\nWe're getting closer-\n&gt;&gt; Good.\n\n225\n00:12:44.190 --> 00:12:46.900\n&gt;&gt; To being finished here, all right?\n\n226\n00:12:46.900 --> 00:12:48.028\nSo, log in.\n\n227\n00:12:48.028 --> 00:12:49.969\nGot it.\n\n228\n00:12:49.969 --> 00:12:52.020\nGood.\n\n229\n00:12:52.020 --> 00:12:52.950\nWorks.\n\n230\n00:12:52.950 --> 00:12:56.360\nExcept, let's make sure that there\ncan be a little bit of functionality,\n\n231\n00:12:56.360 --> 00:12:58.310\nthat that's all up and going, right?\n\n232\n00:12:59.930 --> 00:13:08.097\nSo let's create a form\nwith ng-submit of login.\n\n233\n00:13:08.097 --> 00:13:08.890\nAnd there we go.\n\n234\n00:13:08.890 --> 00:13:10.940\nAnd see how that changes that to a 1?\n\n235\n00:13:10.940 --> 00:13:12.720\nThat is so weird.\n\n236\n00:13:12.720 --> 00:13:17.343\nSo if you're using plugins in your editor,\nyou may get some weirdness there,\n\n237\n00:13:17.343 --> 00:13:18.051\nall right?\n\n238\n00:13:18.051 --> 00:13:22.224\nNow I'm gonna keep this kind of brief,\nhopefully.\n\n239\n00:13:22.224 --> 00:13:30.275\nSo label+input of type text as such.\n\n240\n00:13:30.275 --> 00:13:32.234\nAnd remove that.\n\n241\n00:13:32.234 --> 00:13:34.575\nAnd get that out of the way.\n\n242\n00:13:34.575 --> 00:13:36.796\nAnd there we go.\n\n243\n00:13:36.796 --> 00:13:39.841\nAnd now we have this nice little thing.\n\n244\n00:13:39.841 --> 00:13:42.328\nSo in order to log in, what do I need?\n\n245\n00:13:42.328 --> 00:13:45.304\nWell, I need a username.\n\n246\n00:13:45.304 --> 00:13:52.895\nng-model=$ctrl.user.username.\n\n247\n00:13:52.895 --> 00:13:55.880\nAnd then I also need a password.\n\n248\n00:13:55.880 --> 00:13:57.529\nSo let's label these appropriately.\n\n249\n00:13:59.998 --> 00:14:02.998\nAnd I need a password.\n\n250\n00:14:02.998 --> 00:14:05.150\nSo I should probably make\nthis a password type.\n\n251\n00:14:05.150 --> 00:14:08.336\nAnd that's an ng-model.\n\n252\n00:14:11.480 --> 00:14:13.749\nCtrl.user.password.\n\n253\n00:14:15.858 --> 00:14:22.430\nAnd let's just make finally\na button of type submit.\n\n254\n00:14:22.430 --> 00:14:25.870\nAnd that'll allow this\nng-submit to run the event.\n\n255\n00:14:25.870 --> 00:14:28.900\nNow this is all review, but\nwe wanna make sure that this works and\n\n256\n00:14:28.900 --> 00:14:31.820\nwe don't have to do anything extra\ninside of this configuration, all right?\n\n257\n00:14:31.820 --> 00:14:33.596\nSo let's go ahead and log in.\n\n258\n00:14:33.596 --> 00:14:36.029\nI come back and I refresh.\n\n259\n00:14:36.029 --> 00:14:38.725\nOkay, this renders appropriately, but\n\n260\n00:14:38.725 --> 00:14:43.580\nthis ctrl login method does not exist\nuntil I put it in the controller.\n\n261\n00:14:43.580 --> 00:14:49.123\nSo login login function login.\n\n262\n00:14:52.678 --> 00:14:54.660\nNow logging in.\n\n263\n00:14:55.770 --> 00:15:00.569\nAnd let's just say\nconsole.log(this.user); and\n\n264\n00:15:00.569 --> 00:15:05.360\nlet's reset the user to an empty object.\n\n265\n00:15:05.360 --> 00:15:06.503\nAnd let's default to an empty object.\n\n266\n00:15:10.297 --> 00:15:11.563\nJust like that.\n\n267\n00:15:11.563 --> 00:15:14.090\nAll right, so we refresh, looks good.\n\n268\n00:15:14.090 --> 00:15:15.394\nI'm gonna come to the console.\n\n269\n00:15:15.394 --> 00:15:18.594\nAnd blah blah blah, blah blah blah.\n\n270\n00:15:18.594 --> 00:15:22.630\nAnd then notice that I now\nhave this user object.\n\n271\n00:15:22.630 --> 00:15:24.620\nThat functionality does work.\n\n272\n00:15:24.620 --> 00:15:29.190\nAnd that's incredibly powerful because now\nI can have routes that are essentially\n\n273\n00:15:29.190 --> 00:15:32.069\npartial views that have\ntheir own set of behaviors.\n\n274\n00:15:32.069 --> 00:15:35.461\nThis may be an alternative\nto using directives,\n\n275\n00:15:35.461 --> 00:15:38.520\nto using components at a large scale.\n\n276\n00:15:38.520 --> 00:15:41.790\nIt is not necessarily a full replacement.\n\n277\n00:15:41.790 --> 00:15:46.220\nI could have this view with a lot\nof components in it, right?\n\n278\n00:15:46.220 --> 00:15:49.676\nI could build like a little nav bar\ncomponent, a little side bar component,\n\n279\n00:15:49.676 --> 00:15:51.409\na little log in form, little images.\n\n280\n00:15:51.409 --> 00:15:55.018\nSo I can have this view be\na composition of components and or\n\n281\n00:15:55.018 --> 00:15:58.491\ndirectives, or\njust regular HTML as we've just seen.\n\n282\n00:15:58.491 --> 00:16:02.081\nNow, this is not the only limited portion,\nright?\n\n283\n00:16:02.081 --> 00:16:08.410\nWe actually want to see\nwhat else is available.\n\n284\n00:16:08.410 --> 00:16:11.290\nSo let's take a quick detour\nto the documentation.\n\n285\n00:16:11.290 --> 00:16:12.810\nDoes that sound like a good idea to you,\nZach?\n\n286\n00:16:12.810 --> 00:16:14.630\n&gt;&gt; I think it's a wonderful idea.\n\n287\n00:16:14.630 --> 00:16:17.340\nI was gonna ask you a question,\nis it too early to ask you a question?\n\n288\n00:16:17.340 --> 00:16:18.840\n&gt;&gt; You can always ask me a question.\n\n289\n00:16:18.840 --> 00:16:20.540\n&gt;&gt; Okay, so here's the question.\n\n290\n00:16:20.540 --> 00:16:24.780\nJustin, before we go to documentation,\nI've seen some angular code\n\n291\n00:16:24.780 --> 00:16:28.770\nthat uses in-line functions for\nthe controller, right?\n\n292\n00:16:28.770 --> 00:16:32.300\nSo, is that something we can do?\n\n293\n00:16:32.300 --> 00:16:36.110\n&gt;&gt; Well, Zach, you've been reading\na little bit of angular code and, yeah,\n\n294\n00:16:36.110 --> 00:16:37.670\nthat's something we can do.\n\n295\n00:16:37.670 --> 00:16:41.770\nAnd, actually let's just take a look\nat what Zach's asking about because,\n\n296\n00:16:41.770 --> 00:16:42.530\nI haven't done that.\n\n297\n00:16:42.530 --> 00:16:45.670\nAnd I'm going to tell you the pros and\ncons.\n\n298\n00:16:45.670 --> 00:16:49.360\nLet's take a look back at my screen and\nhere's our login controller.\n\n299\n00:16:49.360 --> 00:16:51.210\nWe know that it works.\n\n300\n00:16:51.210 --> 00:16:55.040\nWhat Zach is asking is this\ninline function right here.\n\n301\n00:16:55.040 --> 00:16:57.197\nSo right now I'm using a label.\n\n302\n00:16:57.197 --> 00:17:01.390\nThis is registered with Angular, so\nAngular can look this up by name.\n\n303\n00:17:01.390 --> 00:17:08.860\nHowever, something like this,\nyou can do this.\n\n304\n00:17:08.860 --> 00:17:09.750\nAnd just to show you,\n\n305\n00:17:09.750 --> 00:17:14.765\nI'm gonna copy paste this part right\nhere to show you that it will work.\n\n306\n00:17:14.765 --> 00:17:18.406\n[NOISE] There we go.\n\n307\n00:17:18.406 --> 00:17:21.270\nSo let's come back over here, refresh.\n\n308\n00:17:21.270 --> 00:17:25.930\nLooks good, I like how my browser's trying\nto save the password that's not real.\n\n309\n00:17:25.930 --> 00:17:29.250\nSo blah, blah blah, blah,\nblah, blah, login, and\n\n310\n00:17:29.250 --> 00:17:31.730\nnotice it still works exactly the same.\n\n311\n00:17:31.730 --> 00:17:32.380\n&gt;&gt; It does.\n\n312\n00:17:32.380 --> 00:17:35.932\n&gt;&gt; Right, so this is something we can do,\nand I haven't done this before,\n\n313\n00:17:35.932 --> 00:17:37.635\nquickly prototyping something.\n\n314\n00:17:37.635 --> 00:17:39.981\nHere is a couple of caveats.\n\n315\n00:17:39.981 --> 00:17:43.986\nA lot of times, I've seen people use\nanonymous functions that don't even have\n\n316\n00:17:43.986 --> 00:17:47.930\na name, so debugging becomes\nan issue if something breaks.\n\n317\n00:17:47.930 --> 00:17:52.710\nMoreover, people will do things where,\ninstead of writing this and\n\n318\n00:17:52.710 --> 00:17:57.110\nmaking sure all their commas and\neverything are in place.\n\n319\n00:17:57.110 --> 00:18:02.740\nAnd this is a bracket curly brace\nparentheses nightmare waiting to happen.\n\n320\n00:18:02.740 --> 00:18:08.210\nAnd lastly, if you did that for,\nlet's say you have ten routes.\n\n321\n00:18:08.210 --> 00:18:12.490\nAnd every route has a controller that\nhelps you manage some aspect of state or\n\n322\n00:18:12.490 --> 00:18:15.210\ninteraction, it becomes a little unruly.\n\n323\n00:18:15.210 --> 00:18:18.730\nThis file gets very large, and\nhard to reason about, hard to debug.\n\n324\n00:18:18.730 --> 00:18:20.630\nI tend to recommend against it.\n\n325\n00:18:20.630 --> 00:18:23.120\nIf you're doing something for\na quick prototype and you're trying to\n\n326\n00:18:23.120 --> 00:18:25.690\nyou know check something out,\nyou know maybe you can get away with it.\n\n327\n00:18:25.690 --> 00:18:29.850\nBut I would always extract that\ninto a separate file, just for\n\n328\n00:18:29.850 --> 00:18:33.220\nkind of ease of thought, ease of use,\nand ease of maintainability.\n\n329\n00:18:33.220 --> 00:18:36.880\nBut this is definitely that you can do but\nwe're not going to.\n\n330\n00:18:36.880 --> 00:18:40.790\nAnd for the most part,\nI would recommend against it.\n\n331\n00:18:40.790 --> 00:18:45.760\nSo thanks for being on your toes Zach\ncuz I was gonna gloss over that and\n\n332\n00:18:45.760 --> 00:18:48.110\npeople were like,\nwell he didn't tell us about this.\n\n333\n00:18:48.110 --> 00:18:50.620\nBut you can in fact do that,\nI just recommend against it.\n\n334\n00:18:50.620 --> 00:18:51.350\n&gt;&gt; Awesome, okay.\n\n335\n00:18:51.350 --> 00:18:53.690\n&gt;&gt; But now that we've seen them, right?\n\n336\n00:18:53.690 --> 00:18:57.530\nHm, we need to go back to the\ndocumentation, because they've only seen\n\n337\n00:18:57.530 --> 00:19:00.930\na few of these attributes that\nwe can use inline here, right?\n\n338\n00:19:00.930 --> 00:19:03.810\n&gt;&gt; Right.\n&gt;&gt; So let's hop over here and\n\n339\n00:19:03.810 --> 00:19:08.640\nwe go to the angular route and\nwhat are these things?\n\n340\n00:19:10.370 --> 00:19:15.345\nActually, what we're using is the .win,\nand we need to see the route provider.\n\n341\n00:19:15.345 --> 00:19:19.810\nSo not $route, and $route,\nI've used it here and there but for\n\n342\n00:19:19.810 --> 00:19:21.885\nthe most part, I just leave it alone.\n\n343\n00:19:21.885 --> 00:19:25.730\nBut this .win, this route,\nwhat can we have?\n\n344\n00:19:25.730 --> 00:19:28.080\nWe can have a controller, and\nit can be a string or a function.\n\n345\n00:19:28.080 --> 00:19:29.880\nAnd that kind of answers our\nquestion that Zach just asked,\n\n346\n00:19:29.880 --> 00:19:33.150\ncan it be a string or a function?\n\n347\n00:19:33.150 --> 00:19:36.440\nIf it's a string,\nit's the name of a registered controller.\n\n348\n00:19:36.440 --> 00:19:37.390\nIf it's a function,\n\n349\n00:19:37.390 --> 00:19:41.480\nit just assumes that function is\nthe controller as we've just seen.\n\n350\n00:19:41.480 --> 00:19:43.870\nTemplate, it's a string or a function.\n\n351\n00:19:45.460 --> 00:19:51.050\nSo html template as a string or a function\nthat returns an html template as a string,\n\n352\n00:19:51.050 --> 00:19:54.440\nwhich should be used by ngView or\nnginclude.\n\n353\n00:19:54.440 --> 00:19:58.040\nThis property takes\nprecedence over templateUrl.\n\n354\n00:19:58.040 --> 00:19:58.880\nThat's important to know.\n\n355\n00:19:58.880 --> 00:20:03.860\nIf you have template and template URL\nthe template one will be used, okay.\n\n356\n00:20:05.320 --> 00:20:08.620\nIf template is a function, it will be\ncalled with the following parameters,\n\n357\n00:20:08.620 --> 00:20:10.570\nan array of objects,\nblah, blah, blah, blah.\n\n358\n00:20:10.570 --> 00:20:15.730\nSo that may be handy if you need access\nto kind of more low level details.\n\n359\n00:20:15.730 --> 00:20:17.760\ntemplateurl, well, that's very similar.\n\n360\n00:20:17.760 --> 00:20:23.200\nThat can actually be a function as well,\nthat returns a URL to the path of your\n\n361\n00:20:23.200 --> 00:20:29.020\nrendered template view of\nthe partial html, all right?\n\n362\n00:20:29.020 --> 00:20:33.220\nAnd then, resolve,\nresolve is actually pretty handy.\n\n363\n00:20:33.220 --> 00:20:37.410\nAnd, this is something that would\nprobably be best to see it in situ,\n\n364\n00:20:37.410 --> 00:20:39.470\nsomething as you needed it.\n\n365\n00:20:39.470 --> 00:20:42.500\nSo resolve is an optional\nmap of dependencies\n\n366\n00:20:42.500 --> 00:20:44.570\nthat should be injected on the controller.\n\n367\n00:20:44.570 --> 00:20:48.800\nYou can actually use resolve to\ninject additional services and, or\n\n368\n00:20:48.800 --> 00:20:50.980\ninformation inside of a controller.\n\n369\n00:20:50.980 --> 00:20:55.255\nIf they are promises, the router\nwill wait for them to be resolved or\n\n370\n00:20:55.255 --> 00:20:57.506\nat least one of them to be rejected.\n\n371\n00:20:57.506 --> 00:21:00.050\nSo if you need to make an http request,\n\n372\n00:21:00.050 --> 00:21:05.150\nas you transition to this route you can\nthis revolve property to go get that.\n\n373\n00:21:05.150 --> 00:21:09.765\nAnd it will not show up until the promise\nhas resolved and send that data and\n\n374\n00:21:09.765 --> 00:21:12.380\ninject it back in, which is hardy daddy.\n\n375\n00:21:13.740 --> 00:21:16.960\nNotice this last line,\nthis can be particularly useful\n\n376\n00:21:16.960 --> 00:21:19.224\nwhen working with components\nas route templates.\n\n377\n00:21:19.224 --> 00:21:21.940\n[LAUGH] Wonderful.\n\n378\n00:21:21.940 --> 00:21:25.005\nAnd then resolveAs,\nyou can do some renaming.\n\n379\n00:21:25.005 --> 00:21:27.620\nRedirectTo, we've already seen that one.\n\n380\n00:21:27.620 --> 00:21:31.296\nAnd then resolve redirectTo,\n[SOUND], that gets crazy.\n\n381\n00:21:31.296 --> 00:21:34.740\nAnd then a couple of other\nsettings that you can do.\n\n382\n00:21:34.740 --> 00:21:39.040\nNow, that is all of the default\nones that it's looking for.\n\n383\n00:21:40.370 --> 00:21:46.350\nThere are ways to add any property\nyou want, as a matter of fact.\n\n384\n00:21:46.350 --> 00:21:51.180\nAnd it will be available\non the route objects.\n\n385\n00:21:51.180 --> 00:21:54.190\nThat is a little beyond the scope\nof what we're doing right now.\n\n386\n00:21:54.190 --> 00:21:56.800\nSo I'm just letting you know for\nauthentication and\n\n387\n00:21:56.800 --> 00:22:00.380\nauthorization and\nmaking that sure if the route's protected,\n\n388\n00:22:00.380 --> 00:22:03.880\nyou may have properties there\nthat trigger events and things.\n\n389\n00:22:03.880 --> 00:22:07.500\nSo we're not limited just to those,\nbut those are a lot and\n\n390\n00:22:07.500 --> 00:22:09.380\nare incredibly powerful.\n\n391\n00:22:09.380 --> 00:22:13.030\nBut we've seen how to\ndo an inline template,\n\n392\n00:22:13.030 --> 00:22:18.290\nwe've seen how to do a template with\na source file, and a controller.\n\n393\n00:22:18.290 --> 00:22:20.869\nAnd well we have one final thing Zach and\n\n394\n00:22:20.869 --> 00:22:24.319\nthat's using the component\nas our template right.\n\n395\n00:22:24.319 --> 00:22:28.503\nIf we build our individual components and\nuse them as composition of components,\n\n396\n00:22:28.503 --> 00:22:31.118\nthat's actually a little\neasier to reason about.\n\n397\n00:22:31.118 --> 00:22:34.953\nBut unfortunately I'm not sure\nwe have time in this episode,\n\n398\n00:22:34.953 --> 00:22:37.472\nmight be best left for [SOUND] part three.\n\n399\n00:22:37.472 --> 00:22:38.924\n&gt;&gt; [LAUGH]\n&gt;&gt; Part three,\n\n400\n00:22:38.924 --> 00:22:42.385\nin order to see how components\ncould be used with angular router.\n\n401\n00:22:42.385 --> 00:22:44.705\n&gt;&gt; Well I think we're all\nexcited about a part three,\n\n402\n00:22:44.705 --> 00:22:46.705\nwe'd all like to see a part three.\n\n403\n00:22:46.705 --> 00:22:49.045\nAnd this is routing with angular router,\n\n404\n00:22:49.045 --> 00:22:53.785\nintro to AngularJS part two there will be\na part three, make sure you see part one.\n\n405\n00:22:53.785 --> 00:22:55.520\nExcellent job as always Justin.\n\n406\n00:22:55.520 --> 00:22:59.598\nAnd make sure you see all the videos\nin the Intro to AngularJS series,\n\n407\n00:22:59.598 --> 00:23:01.368\nyou'll be very glad you did.\n\n408\n00:23:01.368 --> 00:23:04.267\nAnd thank you for watching DevProTV.\n\n409\n00:23:04.267 --> 00:23:07.064\nRemember, a good DevPro\nis always learning.\n\n410\n00:23:07.064 --> 00:23:08.120\nI'm Zach Menos.\n\n411\n00:23:08.120 --> 00:23:09.200\n&gt;&gt; And I'm Justin Dennison.\n\n412\n00:23:09.200 --> 00:23:11.174\n&gt;&gt; And we will see you very soon.\n\n413\n00:23:11.174 --> 00:23:15.946\n[MUSIC]\n\n",
          "vimeoId": "227075819"
        },
        {
          "description": "Justin and Zach conclude the discussion of Client Routing With Angular Router, using Components as our views, special configurations to be concerned about, Components instead of Templates, and Angular Router directing us to other pages as needed.",
          "length": "1173",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-introtoangularjs/techskills-introtoangularjs-1-16-3-client_routing_with_angular_router_pt3-071417-PGM.00_19_38_29.Still001.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-introtoangularjs/techskills-introtoangularjs-1-16-3-client_routing_with_angular_router_pt3-071417-PGM.00_19_38_29.Still001-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-introtoangularjs/techskills-introtoangularjs-1-16-3-client_routing_with_angular_router_pt3-071417-PGM.00_19_38_29.Still001-sm.jpg",
          "title": "Client Routing with Angular Router Part 3",
          "transcript": "WEBVTT\n\n1\n00:00:00.000 --> 00:00:05.856\n[MUSIC]\n\n2\n00:00:05.856 --> 00:00:09.915\nHey, thank you for choosing DevProTV,\nwhere we help you learn everywhere you go.\n\n3\n00:00:09.915 --> 00:00:13.596\nI'm Zach Memos, your host,\nas we continue on with Intro to AngularJS.\n\n4\n00:00:13.596 --> 00:00:18.152\nAnd this is Part 3,\nRouting with Angular Router Part 3.\n\n5\n00:00:18.152 --> 00:00:20.401\nThere's a Part 1 and a Part 2.\n\n6\n00:00:20.401 --> 00:00:22.095\nMake sure you see both of those.\n\n7\n00:00:22.095 --> 00:00:26.130\nBringing us all the information we need\nis the one, the only Justin Dennison.\n\n8\n00:00:26.130 --> 00:00:27.400\nHey, Justin, good to see, sir.\n\n9\n00:00:27.400 --> 00:00:28.336\n&gt;&gt; Good to see you, as well, Zach.\n\n10\n00:00:28.336 --> 00:00:31.179\nI'm excited to be back, well, for Part 3.\n\n11\n00:00:31.179 --> 00:00:31.725\n&gt;&gt; Yeah!\n\n12\n00:00:31.725 --> 00:00:33.540\n&gt;&gt; I don't have many part threes,\nbut this is a good one.\n\n13\n00:00:33.540 --> 00:00:34.070\n&gt;&gt; That's right.\nWell,\n\n14\n00:00:34.070 --> 00:00:36.550\nthere's a lot to learn here, absolutely.\n\n15\n00:00:36.550 --> 00:00:39.745\nAnd question for\nyou right off the bat is in Part 2,\n\n16\n00:00:39.745 --> 00:00:44.560\nwe said we can use components\nas our views, is that right?\n\n17\n00:00:44.560 --> 00:00:47.020\n&gt;&gt; That is-\n&gt;&gt; Let's expand on that.\n\n18\n00:00:47.020 --> 00:00:48.630\n&gt;&gt; All right, that is absolutely correct.\n\n19\n00:00:48.630 --> 00:00:50.310\nWe could use components as our views.\n\n20\n00:00:50.310 --> 00:00:52.590\nNow in Part 1 and Part 2,\nwe got our setup.\n\n21\n00:00:52.590 --> 00:00:56.530\nWe actually saw how we could use kinda\nthis templated view to add additional\n\n22\n00:00:56.530 --> 00:00:58.470\nroutes to the route configuration.\n\n23\n00:00:58.470 --> 00:01:02.140\nAnd then get those views kinda rendering\nit out for us, easy-peasy, lemon-squeezy.\n\n24\n00:01:02.140 --> 00:01:06.191\nBut the ultimate goal is to push toward\nthinking in a component-based design.\n\n25\n00:01:06.191 --> 00:01:09.638\nBecause, well Angular,\nthe new version, not AngularJS,\n\n26\n00:01:09.638 --> 00:01:12.620\neven though I've used that\nterm interchangeably.\n\n27\n00:01:14.700 --> 00:01:17.442\nAngular versus AngularJS,\nthe new one everything is a component.\n\n28\n00:01:17.442 --> 00:01:22.748\nWell, everything, so now we should\nbe thinking in terms of components.\n\n29\n00:01:22.748 --> 00:01:28.460\nAnd those individual pieces, we can then\ncompose into larger scale applications.\n\n30\n00:01:28.460 --> 00:01:31.320\nSo that's ultimately\nwhat we're gonna do is\n\n31\n00:01:31.320 --> 00:01:33.850\nnow build a route that\nis based on a component.\n\n32\n00:01:33.850 --> 00:01:36.868\n&gt;&gt; Is there any special words or\nconfigurations or\n\n33\n00:01:36.868 --> 00:01:42.004\neven [INAUDIBLE] keywords that we need to\nbe concerned about and if so, then what?\n\n34\n00:01:42.004 --> 00:01:46.947\n&gt;&gt; Well, there is a little bit of\nkind of magic that we're gonna pull.\n\n35\n00:01:46.947 --> 00:01:50.976\nBecause the Angular router was originally\nmeant to be used in the way that we've\n\n36\n00:01:50.976 --> 00:01:52.130\nseen it used thus far.\n\n37\n00:01:52.130 --> 00:01:56.658\nAnd then components were a later addition,\nso things are a little odd.\n\n38\n00:01:56.658 --> 00:02:00.007\nBut there are some recommendations\nin the AngularJS documentation.\n\n39\n00:02:00.007 --> 00:02:05.185\nAnd, well, I think it's best to just go\nahead and see how this comes about, right?\n\n40\n00:02:05.185 --> 00:02:06.728\nSo let's go ahead and\ntake a look at my screen here.\n\n41\n00:02:06.728 --> 00:02:12.245\nAnd we were in the documentation,\nwe have our home and our login route.\n\n42\n00:02:12.245 --> 00:02:14.921\nAnd if we look, we have home, login, and\n\n43\n00:02:14.921 --> 00:02:20.220\nthen signup doesn't actually work\nbecause it's not a route yet, right?\n\n44\n00:02:20.220 --> 00:02:23.530\nSo if we come over here,\nlet's go ahead and\n\n45\n00:02:23.530 --> 00:02:27.640\nwire up our route first and\nmake sure it works.\n\n46\n00:02:27.640 --> 00:02:33.440\nAnd then, well, we'll see how to\nbuild this component as a view.\n\n47\n00:02:33.440 --> 00:02:36.860\nSo here we go, and then template.\n\n48\n00:02:36.860 --> 00:02:41.480\nAnd we're just gonna make sure\nthat it works, and hello.\n\n49\n00:02:45.090 --> 00:02:48.500\nWell, if I could type,\nwe might actually see if it works,\n\n50\n00:02:48.500 --> 00:02:50.990\nbut we don't have a component in here or\nanything yet.\n\n51\n00:02:50.990 --> 00:02:54.460\nWe're just making sure that our\nroute is wired up appropriately.\n\n52\n00:02:54.460 --> 00:02:55.720\nThere it is.\n\n53\n00:02:55.720 --> 00:02:56.840\nLet's think about this.\n\n54\n00:02:56.840 --> 00:03:01.420\nUltimately, what we want, even though\nI have this, I missed a brace here.\n\n55\n00:03:01.420 --> 00:03:02.700\nChrome was being nice for me.\n\n56\n00:03:03.900 --> 00:03:11.500\nUltimately, what I want is\nsomething like this, signup.\n\n57\n00:03:11.500 --> 00:03:14.820\nAnd that will be our component as a view.\n\n58\n00:03:14.820 --> 00:03:17.093\n&gt;&gt; Mm.\n&gt;&gt; And that's kinda handy,\n\n59\n00:03:17.093 --> 00:03:20.800\nactually kinda sneaky,\nas far as that goes.\n\n60\n00:03:20.800 --> 00:03:24.279\nAnd so there we go, we're ready to go.\n\n61\n00:03:24.279 --> 00:03:27.050\nWe just now need to build the component.\n\n62\n00:03:27.050 --> 00:03:28.554\n&gt;&gt; So, components instead of templates?\n\n63\n00:03:28.554 --> 00:03:31.895\n&gt;&gt; So, we're gonna use\ncomponent inside as a template.\n\n64\n00:03:31.895 --> 00:03:32.790\n&gt;&gt; Okay.\n\n65\n00:03:32.790 --> 00:03:36.878\n&gt;&gt; So, that was actually a key point\nthat I kinda glossed over there just for\n\n66\n00:03:36.878 --> 00:03:38.390\na moment.\n\n67\n00:03:38.390 --> 00:03:42.260\nWe're using this inline template\nto put some inline HTML.\n\n68\n00:03:42.260 --> 00:03:46.987\nBut this HTML's actually gonna be\na custom component that we build that\n\n69\n00:03:46.987 --> 00:03:51.710\nwill then be rendered using\nthe Angular component method, right?\n\n70\n00:03:51.710 --> 00:03:53.068\nSo we register this component.\n\n71\n00:03:53.068 --> 00:03:54.140\nAnd it's gonna be similar,\n\n72\n00:03:54.140 --> 00:03:56.710\nIf you haven't seen the component series,\ndefinitely go see that.\n\n73\n00:03:56.710 --> 00:03:57.959\n&gt;&gt; Mm-hm.\n&gt;&gt; Or the component videos,\n\n74\n00:03:57.959 --> 00:03:59.351\ndefinitely go take a look there.\n\n75\n00:03:59.351 --> 00:04:00.500\nYou'll like them.\n\n76\n00:04:00.500 --> 00:04:03.740\nSo notice this template here,\nwe just had inline HTML.\n\n77\n00:04:03.740 --> 00:04:07.116\nWell, we've done similar things\nwith this signup, but this signup,\n\n78\n00:04:07.116 --> 00:04:09.210\nthat's not a regular HTML tag, all right?\n\n79\n00:04:09.210 --> 00:04:12.350\nIt's not like h1 and\nwe don't have a lot in there.\n\n80\n00:04:12.350 --> 00:04:14.920\nUltimately, we're gonna\nbuild a signup component\n\n81\n00:04:14.920 --> 00:04:19.020\nthat is going to be a little more robust,\na little more in-depth.\n\n82\n00:04:19.020 --> 00:04:22.792\nBut we just registered it with this\nroute by using the template syntax.\n\n83\n00:04:22.792 --> 00:04:26.180\nNow ultimately, what this means is\nwe don't have a special keyword\n\n84\n00:04:26.180 --> 00:04:29.670\nbecause this was around\nbefore components came along.\n\n85\n00:04:29.670 --> 00:04:31.989\nWe're just using the template\nto kinda register that.\n\n86\n00:04:31.989 --> 00:04:34.403\nSecondly, if you use it this way,\n\n87\n00:04:34.403 --> 00:04:39.497\nyou're not going to have a templateURL,\ncontroller, controllerAs.\n\n88\n00:04:39.497 --> 00:04:41.045\nBecause all of that is more or\n\n89\n00:04:41.045 --> 00:04:45.750\nless gonna be encapsulated inside of this\ncomponent that we're going to build.\n\n90\n00:04:45.750 --> 00:04:48.348\nSo definitely keep that in mind and\nsomething to remember.\n\n91\n00:04:48.348 --> 00:04:52.740\nThis is not always the case for\nother client side routing solutions.\n\n92\n00:04:52.740 --> 00:04:53.529\nThis is for\n\n93\n00:04:53.529 --> 00:04:59.620\nthe Angular router that's part of kind\nof the normal distribution of AngularJS.\n\n94\n00:04:59.620 --> 00:05:03.010\nAnd again,\nI really wish there was an easy way.\n\n95\n00:05:03.010 --> 00:05:06.540\nI'm very in my ways of saying Angular,\nmeaning AngularJS.\n\n96\n00:05:06.540 --> 00:05:08.430\nSo keep in mind, unless I say otherwise,\n\n97\n00:05:08.430 --> 00:05:12.500\nwhen I say Angular or AngularJS,\nI'm talking about what we're working on.\n\n98\n00:05:12.500 --> 00:05:16.990\nExcept when I say AngularJS versus the new\nAngular, and then we'll talk about that.\n\n99\n00:05:16.990 --> 00:05:19.068\nSo for now, back to AngularJS.\n\n100\n00:05:19.068 --> 00:05:21.122\nLet's actually build this component and\n\n101\n00:05:21.122 --> 00:05:24.356\nwe're gonna arrange this a little\nbit differently, all right?\n\n102\n00:05:24.356 --> 00:05:25.902\nBecause if we go in here we refresh,\n\n103\n00:05:25.902 --> 00:05:28.950\nit doesn't render anything because\nthis component doesn't exist.\n\n104\n00:05:28.950 --> 00:05:30.600\nNow it doesn't error out.\n\n105\n00:05:30.600 --> 00:05:32.121\nIt's completely okay.\nIt's going, cool, that's fine.\n\n106\n00:05:32.121 --> 00:05:35.050\nI don't know what you're talking about,\nI'll just leave it there.\n\n107\n00:05:35.050 --> 00:05:36.436\n&gt;&gt; It's chilling out.\n&gt;&gt; Right, it doesn't know what to do,\n\n108\n00:05:36.436 --> 00:05:37.568\nso we have to tell Angular what to do.\n\n109\n00:05:37.568 --> 00:05:42.542\nAnd, well, let's go ahead and build our\ncomponent and make sure that, well,\n\n110\n00:05:42.542 --> 00:05:47.630\nI'm not being a dirty liar about this\nbeing kind of available to use, right?\n\n111\n00:05:47.630 --> 00:05:52.560\nSo, if I come into my source folder,\nwoo, really zoomed in, and\n\n112\n00:05:52.560 --> 00:05:55.860\nI create a new folder, and\nlet's call it components.\n\n113\n00:05:55.860 --> 00:05:58.430\nAnd yeah, that was tricky right there.\n\n114\n00:05:58.430 --> 00:06:01.839\nAnd then I create another\nfolder called signup, and\n\n115\n00:06:01.839 --> 00:06:05.649\ninside of that folder,\nI'm going to create three files.\n\n116\n00:06:05.649 --> 00:06:09.766\nI need the signup controller, so\n\n117\n00:06:09.766 --> 00:06:15.207\nhere's my signup, signup, controller,\n\n118\n00:06:15.207 --> 00:06:22.430\nand let's create a signup.html,\nwhich is my template.\n\n119\n00:06:22.430 --> 00:06:27.290\nAnd notice I'm not putting that in views\nbecause I'm not using that view syntax.\n\n120\n00:06:27.290 --> 00:06:30.460\nI'm actually building a component\nthat's all kinda put together, right?\n\n121\n00:06:32.010 --> 00:06:38.640\nAnd then I'm going to create, well, a new\nfile just called signup.js, all right?\n\n122\n00:06:38.640 --> 00:06:41.861\nActually, let me rename that just\nto be a little more explicit and\n\n123\n00:06:41.861 --> 00:06:46.011\nsay signup.component.js.\n\n124\n00:06:46.011 --> 00:06:49.940\nOkay, just so we got a couple of things\ngoing on here as far as paradigms and\n\n125\n00:06:49.940 --> 00:06:52.950\norganization, just to be clear, all right?\n\n126\n00:06:52.950 --> 00:06:58.470\nNow, before I forget, I need to make sure\n\n127\n00:06:58.470 --> 00:07:03.960\nI have the component.js and\nthe controller.js on this page, okay?\n\n128\n00:07:03.960 --> 00:07:07.070\nSo I'm gonna go ahead and\njust copy this, copy this.\n\n129\n00:07:07.070 --> 00:07:13.768\nI'm gonna remove here and\nI'm gonna say components/signup/.\n\n130\n00:07:13.768 --> 00:07:18.808\nSignup.component.js, and then we're\n\n131\n00:07:18.808 --> 00:07:24.271\ngonna grab this and\npaste like so, all right?\n\n132\n00:07:24.271 --> 00:07:25.989\nAnd then change this to controller.\n\n133\n00:07:25.989 --> 00:07:30.844\nAnd now, the downside of the copy-paste\nlike that is if I have a typo on the one\n\n134\n00:07:30.844 --> 00:07:33.350\nthat I just copied-\n&gt;&gt; We have two typos.\n\n135\n00:07:33.350 --> 00:07:37.420\n&gt;&gt; Then we have multiple typos, so\ncopy can propagate errors real fast.\n\n136\n00:07:37.420 --> 00:07:41.526\nI'm not a big advocate of it, but in the\nsake of time, we're going to do just that.\n\n137\n00:07:41.526 --> 00:07:42.396\n&gt;&gt; Cool.\n&gt;&gt; All right?\n\n138\n00:07:42.396 --> 00:07:47.105\n&gt;&gt; So we have these two pieces, but\nwe don't actually have anything in there.\n\n139\n00:07:47.105 --> 00:07:54.430\nSo let's make sure that, well,\nwe register this module component and\n\n140\n00:07:54.430 --> 00:07:59.941\nits corresponding controller,\nangular-router.\n\n141\n00:07:59.941 --> 00:08:05.133\nAnd this is the controller file,\nso we're gonna say\n\n142\n00:08:05.133 --> 00:08:11.510\ncontroller('signupController',\nSignupController).\n\n143\n00:08:11.510 --> 00:08:21.029\nAnd now we're just gonna say signup,\n=, there we go.\n\n144\n00:08:21.029 --> 00:08:27.650\nAnd then create a function,\nSignupController, just like so.\n\n145\n00:08:27.650 --> 00:08:29.340\nAll right, so now that's good to go.\n\n146\n00:08:29.340 --> 00:08:32.670\nLet's go ahead and\ndefine our component, right?\n\n147\n00:08:32.670 --> 00:08:34.890\nNow our component is, well,\n\n148\n00:08:34.890 --> 00:08:39.600\nit's just an object that takes\na template and what is our template?\n\n149\n00:08:39.600 --> 00:08:46.237\nWell, our template is src and actually\nthis is a template URL, excuse me.\n\n150\n00:08:46.237 --> 00:08:52.166\nTemplateUrl src/components/signup and\n\n151\n00:08:52.166 --> 00:08:58.259\nsignup.html, so there's signup.html.\n\n152\n00:08:58.259 --> 00:09:02.039\nAll right, now, essentially what we've\ndone by using this component feature is\n\n153\n00:09:02.039 --> 00:09:05.873\nwe've taken all of the stuff that we would\nnormally put inside of a route definition\n\n154\n00:09:05.873 --> 00:09:08.255\nand pulled it over into\nthe component definition.\n\n155\n00:09:08.255 --> 00:09:11.545\nAll right, so then the template and\nthen the controller,\n\n156\n00:09:11.545 --> 00:09:16.730\nwe could put those inline inside of your\nroutes.config just like we did with login.\n\n157\n00:09:16.730 --> 00:09:21.008\nBut by using a component, we've pulled\nthat out into the component definition,\n\n158\n00:09:21.008 --> 00:09:24.487\nand that component's reusable\noutside the context of the route.\n\n159\n00:09:24.487 --> 00:09:29.187\nThat gives you a little more flexibility,\nand if you organize this appropriately,\n\n160\n00:09:29.187 --> 00:09:33.176\nit's a little easier to use in other\nprojects, if you need to, right?\n\n161\n00:09:33.176 --> 00:09:35.970\nAnd then all you have to do\nis set up the router again.\n\n162\n00:09:35.970 --> 00:09:37.192\nAnd then what is our controller?\n\n163\n00:09:37.192 --> 00:09:41.357\nWell, that's our SignupController.\n\n164\n00:09:41.357 --> 00:09:47.030\nNow I actually have to\ncall this something.\n\n165\n00:09:47.030 --> 00:09:51.780\nLet's call this the SignupComponent,\nand there we go.\n\n166\n00:09:51.780 --> 00:09:56.787\nAnd this has to be at the bottom of\nthe file because otherwise the variable\n\n167\n00:09:56.787 --> 00:10:00.907\ndoes not exist, right,\nbecause it doesn't get hoisted.\n\n168\n00:10:00.907 --> 00:10:04.016\nAnd so I'm gonna call this signup.\n\n169\n00:10:04.016 --> 00:10:08.113\nAnd this has to match that name that\nwe're using in the template in the route\n\n170\n00:10:08.113 --> 00:10:09.540\nconfiguration.\n\n171\n00:10:09.540 --> 00:10:15.917\nAnd then SignupComponent like so,\nexcept I did that wrong.\n\n172\n00:10:15.917 --> 00:10:21.959\nThis is component and now here we go,\nmodule, angular router.\n\n173\n00:10:21.959 --> 00:10:24.548\nWhew, [NOISE] there we go.\n\n174\n00:10:24.548 --> 00:10:26.700\nSo I've created the component.\n\n175\n00:10:26.700 --> 00:10:27.720\nIt's called signup.\n\n176\n00:10:27.720 --> 00:10:28.908\nIt should be good to go.\nIt should load.\n\n177\n00:10:28.908 --> 00:10:30.939\nIt doesn't actually do anything yet.\n\n178\n00:10:30.939 --> 00:10:38.340\nBut let's put something in there,\nsignup.html, just to see if it works.\n\n179\n00:10:38.340 --> 00:10:41.230\nSo if I refresh, and\nnotice that it renders on the page.\n\n180\n00:10:41.230 --> 00:10:43.640\nNow we have component-based routing.\n\n181\n00:10:43.640 --> 00:10:46.230\nAnd then really I can\nbuild other components\n\n182\n00:10:46.230 --> 00:10:48.050\nthat would build this up, right?\n\n183\n00:10:48.050 --> 00:10:52.548\nSo if I wanted a nav bar, or some kind of\nadditional verification inside of this\n\n184\n00:10:52.548 --> 00:10:56.242\nsignup view, I would create\na component that is inside of that.\n\n185\n00:10:56.242 --> 00:11:00.158\nBut let's just see if it works, right?\n\n186\n00:11:00.158 --> 00:11:03.205\nSo form, let's see if\nthe functionality's still there.\n\n187\n00:11:03.205 --> 00:11:06.325\nLet's make sure\nthe component still renders,\n\n188\n00:11:06.325 --> 00:11:08.925\neverything works like we expect it to.\n\n189\n00:11:08.925 --> 00:11:12.480\nng-submit, and\nwhat do I need in order to sign up?\n\n190\n00:11:12.480 --> 00:11:16.056\nNow, really I should name first name,\nlast name, password, email address.\n\n191\n00:11:16.056 --> 00:11:20.181\nWe're just gonna say email address and\npassword, just again, for brevity.\n\n192\n00:11:20.181 --> 00:11:20.957\n&gt;&gt; Keep it simple.\n\n193\n00:11:20.957 --> 00:11:22.232\n&gt;&gt; To keep it simple, all right?\n\n194\n00:11:22.232 --> 00:11:22.951\n&gt;&gt; The KISS principle.\n\n195\n00:11:22.951 --> 00:11:25.660\n&gt;&gt; The KISS principle,\nit is a very important one.\n\n196\n00:11:25.660 --> 00:11:32.811\nAnd then $ctrl.signup just like so,\nall right?\n\n197\n00:11:32.811 --> 00:11:33.679\nAnd what do I want in this div?\n\n198\n00:11:33.679 --> 00:11:38.720\nI want a label, and that label is for,\nlet's just say Email.\n\n199\n00:11:38.720 --> 00:11:42.860\nBecause if you're signing up,\nyou may get to select a username later on.\n\n200\n00:11:42.860 --> 00:11:44.458\nBut email is necessary for communication.\n\n201\n00:11:44.458 --> 00:11:50.398\nSo we're gonna say email and\nthen input of type well,\n\n202\n00:11:50.398 --> 00:11:55.022\nemail and ng-model as such, all right?\n\n203\n00:11:55.022 --> 00:11:58.429\nSo $ctrl.user.email.\n\n204\n00:11:58.429 --> 00:12:01.020\nAnd we would have to go back\nin a real application and\n\n205\n00:12:01.020 --> 00:12:06.560\nmake sure that our login and\nour signup forms correlate, right?\n\n206\n00:12:06.560 --> 00:12:10.850\nI'm asking for username on one form,\nemail on the other form.\n\n207\n00:12:10.850 --> 00:12:13.676\nThat's not really clear,\nmy intentions, but\n\n208\n00:12:13.676 --> 00:12:17.642\nI'm telling you right now that we\nwouldn't need to address that.\n\n209\n00:12:17.642 --> 00:12:21.314\nAnd this is gonna be Password and\n\n210\n00:12:21.314 --> 00:12:28.663\ninput [type=password] (ng-model\njust like we always do.\n\n211\n00:12:28.663 --> 00:12:33.569\nctrl.user.password and then,\nfinally, we need a button.\n\n212\n00:12:35.915 --> 00:12:39.896\nAnd button, and it is of type submit.\n\n213\n00:12:43.834 --> 00:12:47.071\nAnd we're going to Sign Up,\njust like that and\n\n214\n00:12:47.071 --> 00:12:50.065\nI have to rearrange\nthis cuz it bothers me.\n\n215\n00:12:50.065 --> 00:12:51.179\nAll right, there we go.\n\n216\n00:12:51.179 --> 00:12:51.989\nLet's see if it renders.\n\n217\n00:12:51.989 --> 00:12:55.379\nWell, it does render, as we expect it to.\n\n218\n00:12:55.379 --> 00:12:58.671\n&gt;&gt; [NOISE]\n&gt;&gt; And now because we have that as\n\n219\n00:12:58.671 --> 00:13:03.520\na component, we need to add functionality,\nfeatures, whatever it maybe.\n\n220\n00:13:03.520 --> 00:13:04.760\nSignup, what do we need?\n\n221\n00:13:04.760 --> 00:13:08.350\nWell, our user is an empty object and\n\n222\n00:13:08.350 --> 00:13:13.580\nwe want signup as a function on that.\n\n223\n00:13:13.580 --> 00:13:19.090\nSo, signup and let's see here,\nhm, what do we need to do?\n\n224\n00:13:19.090 --> 00:13:20.820\nLet's just mock it.\n\n225\n00:13:20.820 --> 00:13:24.495\nConsole.log signing up,\n\n226\n00:13:24.495 --> 00:13:28.491\nconsole.log this.user and\n\n227\n00:13:28.491 --> 00:13:32.805\nthis.user = an empty object,\n\n228\n00:13:32.805 --> 00:13:37.840\nwhich will clear the form, right?\n\n229\n00:13:37.840 --> 00:13:41.910\nNow, ideally, you would want to\nverify if the password's wrong,\n\n230\n00:13:41.910 --> 00:13:43.120\nyou just wanna clear the password.\n\n231\n00:13:43.120 --> 00:13:46.030\nIf it's not,\nyou're probably not gonna clear\n\n232\n00:13:46.030 --> 00:13:47.680\nthe form every time\nsomeone clicks the button.\n\n233\n00:13:47.680 --> 00:13:51.730\nBut we're just mocking things up for\nnow, it doesn't need to be perfect.\n\n234\n00:13:51.730 --> 00:13:54.186\nSo email, blah, blah, blah,\nblah, at blah, blah, blah.\n\n235\n00:13:54.186 --> 00:13:57.788\nAnd actually,\nthat is going to fail validation,\n\n236\n00:13:57.788 --> 00:14:02.010\nbecause it's not an actual\nemail type thing, all right?\n\n237\n00:14:02.010 --> 00:14:03.496\nSo sign up, [NOISE] there it is.\n\n238\n00:14:03.496 --> 00:14:04.767\nAnd now I have my object.\n\n239\n00:14:04.767 --> 00:14:09.056\nAnd now if I needed to interact with\nsome kind of API in order to verify and\n\n240\n00:14:09.056 --> 00:14:13.920\nget authorization to go further into\nthe application, or to get access to data,\n\n241\n00:14:13.920 --> 00:14:15.728\nI have the ability to sign up.\n\n242\n00:14:15.728 --> 00:14:20.102\nAnd what's incredibly powerful is I've\nbuilt this as a reusable component that\n\n243\n00:14:20.102 --> 00:14:21.913\nthen I could place other places.\n\n244\n00:14:21.913 --> 00:14:26.153\nThe sign p, even though it's\na portion of this view, right,\n\n245\n00:14:26.153 --> 00:14:30.980\nit's this little portion here,\nall of these are always on the page.\n\n246\n00:14:30.980 --> 00:14:35.820\nIf I go to Login, Signup, there it is,\nwonderful, quick transitions.\n\n247\n00:14:35.820 --> 00:14:38.200\nBut let's say somewhere else in my app,\n\n248\n00:14:38.200 --> 00:14:42.720\nif I needed to have that signup form\nagain, I just use signup as component.\n\n249\n00:14:42.720 --> 00:14:48.000\nSo it offers me a little more flexibility\nand it kinda future-proofs kind of\n\n250\n00:14:48.000 --> 00:14:52.680\nyour thought processes, if you ever want\nto use anything else other than AngularJS.\n\n251\n00:14:52.680 --> 00:14:56.922\nAlso, it simplifies some of the headaches\nthat you would have with managing all\n\n252\n00:14:56.922 --> 00:15:00.611\nof this configuration inside of\nthe Angular router configuration.\n\n253\n00:15:00.611 --> 00:15:03.033\n&gt;&gt; Hm, I know, Justin,\nlooking at this, right,\n\n254\n00:15:03.033 --> 00:15:05.587\nit looks like the form will\ntake us to another page.\n\n255\n00:15:05.587 --> 00:15:09.520\nIs this something Angular router can do?\n\n256\n00:15:09.520 --> 00:15:11.720\n&gt;&gt; So the form should take\nus to another page, right?\n\n257\n00:15:11.720 --> 00:15:12.710\n&gt;&gt; Yeah.\n\n258\n00:15:12.710 --> 00:15:14.850\n&gt;&gt; So\nthat's how our typical interactions go.\n\n259\n00:15:14.850 --> 00:15:18.700\nAnd I haven't shown you that, but\nmaybe that's a nice little hurrah, right?\n\n260\n00:15:18.700 --> 00:15:22.679\nWhen you click the button, you're\ntypically gonna go somewhere else and\n\n261\n00:15:22.679 --> 00:15:26.082\nthat's based on verifying that\nyou've logged in correctly or\n\n262\n00:15:26.082 --> 00:15:27.670\nsigned up correctly.\n\n263\n00:15:27.670 --> 00:15:30.443\nNow we're not gonna implement that\ncuz that's a whole other series in\n\n264\n00:15:30.443 --> 00:15:31.350\nand of itself.\n\n265\n00:15:31.350 --> 00:15:34.200\nBut let's see how we can\nuse the controller and\n\n266\n00:15:34.200 --> 00:15:38.690\nthe button click to essentially\nnavigate back to another place.\n\n267\n00:15:38.690 --> 00:15:43.170\nSo let's take a look here and,\nwell, where's that going to be?\n\n268\n00:15:43.170 --> 00:15:45.390\nThat's going to be inside\nof my SignupController.\n\n269\n00:15:45.390 --> 00:15:47.736\nI want that to happen when I click\nthat button to sign up, right?\n\n270\n00:15:47.736 --> 00:15:51.202\nNot sign in, sign up,\ndid I say sign in or sign up?\n\n271\n00:15:51.202 --> 00:15:51.703\nWho knows?\n\n272\n00:15:51.703 --> 00:15:54.930\n&gt;&gt; [LAUGH]\n&gt;&gt; I meant sign up.\n\n273\n00:15:54.930 --> 00:15:56.530\nJust go with me on that.\n\n274\n00:15:56.530 --> 00:15:59.700\nThere's this other\nservice called $location.\n\n275\n00:15:59.700 --> 00:16:06.800\nNow I tend to use\n$location because I can get\n\n276\n00:16:06.800 --> 00:16:12.130\nit to work periodically with $route,\nwhich is provided by the Angular router.\n\n277\n00:16:12.130 --> 00:16:16.198\nHowever, I find it to be\nsometimes a little problematic.\n\n278\n00:16:16.198 --> 00:16:20.437\nAlso, you'll notice $location.path and\n\n279\n00:16:20.437 --> 00:16:25.130\nthat helps you know where\nyou're supposed to go.\n\n280\n00:16:25.130 --> 00:16:30.257\n$route can get you where you are and\nsome other information.\n\n281\n00:16:30.257 --> 00:16:33.018\nSo $route is more information\nabout your route.\n\n282\n00:16:33.018 --> 00:16:37.306\n$location is where you're going or\nwhere you currently are, okay?\n\n283\n00:16:37.306 --> 00:16:41.023\nSo $location is inside of\nAngularJS without the router.\n\n284\n00:16:41.023 --> 00:16:44.498\nBut you can use the in conjunction\nwith the router and it will respond.\n\n285\n00:16:44.498 --> 00:16:45.569\nSo, how do we do that?\n\n286\n00:16:45.569 --> 00:16:50.237\n$location, $location, and then, well,\nwhen we get to the very end, right,\n\n287\n00:16:50.237 --> 00:16:53.361\nwe clear the form just in\ncase things go horribly awry.\n\n288\n00:16:53.361 --> 00:16:57.790\nAnd then we just say $location,\nand then we tell it where to go.\n\n289\n00:16:57.790 --> 00:17:01.492\nNow, if I give this a path that\nis not defined in my routes,\n\n290\n00:17:01.492 --> 00:17:03.698\nthey otherwise should pick it up.\n\n291\n00:17:03.698 --> 00:17:05.279\nBut I wouldn't recommend doing that and\n\n292\n00:17:05.279 --> 00:17:08.130\njust hoping that it works,\nbecause that's horribly unmaintainable.\n\n293\n00:17:08.130 --> 00:17:11.840\nWe should just say go home, okay?\n\n294\n00:17:13.260 --> 00:17:15.400\nSend whoever just clicked\nthat button to home.\n\n295\n00:17:15.400 --> 00:17:18.620\nAll right, the moment of truth.\n\n296\n00:17:18.620 --> 00:17:21.790\nWe are gonna have the beginnings\nof a wonderful application.\n\n297\n00:17:21.790 --> 00:17:26.670\nSo we're on signup, it's right there and\nhere is my email address.\n\n298\n00:17:26.670 --> 00:17:28.510\nAnd there's my very secret password.\n\n299\n00:17:28.510 --> 00:17:31.420\nAnd then I click Sign Up!,\nand now I'm back home.\n\n300\n00:17:31.420 --> 00:17:35.050\nObviously, you shouldn't console log\nthe object with the username and\n\n301\n00:17:35.050 --> 00:17:37.150\npassword there.\n\n302\n00:17:37.150 --> 00:17:40.750\nThat is how you would reroute and\nthen part of that\n\n303\n00:17:40.750 --> 00:17:46.220\nyou could use configuration like that\nresolve property inside of signup.\n\n304\n00:17:46.220 --> 00:17:51.632\nYou could use the resolve property, as\nwell as, custom attributes to determine,\n\n305\n00:17:51.632 --> 00:17:55.749\nhey, if I'm sending them to home,\nis that a protected route?\n\n306\n00:17:55.749 --> 00:17:57.048\nDo they need to be signed in?\n\n307\n00:17:57.048 --> 00:18:00.746\nCuz if they are,\nit might send them somewhere else, okay?\n\n308\n00:18:00.746 --> 00:18:03.706\nIf it's not necessary in\norder to be signed in,\n\n309\n00:18:03.706 --> 00:18:08.378\nyou're an authenticated user,\nthen you can go ahead and send them there.\n\n310\n00:18:08.378 --> 00:18:10.727\nSo again,\nthat's a little beyond the scope.\n\n311\n00:18:10.727 --> 00:18:15.611\nBut that's to give you an idea of what\nwe're capable of doing using the Angular\n\n312\n00:18:15.611 --> 00:18:20.659\nrouter, which is a client-side front-end\nsolution to these multiple views.\n\n313\n00:18:20.659 --> 00:18:22.640\nCuz now everything's in the browser,\n\n314\n00:18:22.640 --> 00:18:25.228\nwe don't have to keep adding\nthings to the server.\n\n315\n00:18:25.228 --> 00:18:29.830\nAnd it helps with this separation\nbetween server and client and,\n\n316\n00:18:29.830 --> 00:18:33.130\nwell, you can get a lot\nof mileage out of that.\n\n317\n00:18:33.130 --> 00:18:34.370\n&gt;&gt; No, you certainly can.\n\n318\n00:18:34.370 --> 00:18:39.109\nSo Intro to AngularJS Routing with Angular\nRouter Part 3, there was a Part 1 and\n\n319\n00:18:39.109 --> 00:18:42.140\na Part 2,\nmake sure you watch all the parts.\n\n320\n00:18:42.140 --> 00:18:43.680\nYou watch them in order or not?\n\n321\n00:18:43.680 --> 00:18:45.220\nBut it's probably best\nto watch them in order.\n\n322\n00:18:45.220 --> 00:18:49.960\nAnd make sure you watch all the video\ncontent in the Intro to AngularJS series.\n\n323\n00:18:49.960 --> 00:18:51.710\nJustin, do you have anything\nelse you wanna say or no?\n\n324\n00:18:51.710 --> 00:18:57.117\n&gt;&gt; Well, that was definitely a long set\nof episodes about the Angular router.\n\n325\n00:18:57.117 --> 00:18:58.589\nThis is one solution.\n\n326\n00:18:58.589 --> 00:19:02.382\nThis is not the only solution\nthat you're going to kinda see.\n\n327\n00:19:02.382 --> 00:19:06.495\nThere's third-party community driven\nrouter called UI Router that's part of\n\n328\n00:19:06.495 --> 00:19:07.767\na larger scope project.\n\n329\n00:19:07.767 --> 00:19:09.310\n&gt;&gt; [INAUDIBLE] with\nthat later [INAUDIBLE].\n\n330\n00:19:09.310 --> 00:19:14.247\n&gt;&gt; And we're actually going to look at\nthe UI Router in a few coming up episodes.\n\n331\n00:19:14.247 --> 00:19:15.617\n&gt;&gt; Awesome, very good.\nSo once again,\n\n332\n00:19:15.617 --> 00:19:20.511\nthank you for watching Intro to Angular JS\nand thank you for watching devpro.tv.\n\n333\n00:19:20.511 --> 00:19:22.890\nRemember, a good DevPro\nis always learning.\n\n334\n00:19:22.890 --> 00:19:23.910\nI'm Zach Memos.\n\n335\n00:19:23.910 --> 00:19:25.533\n&gt;&gt; And I'm Justin Dennison.\n&gt;&gt; And we will see you soon!\n\n336\n00:19:25.533 --> 00:19:33.419\n[MUSIC]\n\n",
          "vimeoId": "227075568"
        },
        {
          "description": "Justin and Zach discuss the alternative to the Angular Router & why we would consider an alternative, additional power that Angular UI Router provides, doing setup with the External Module, the UI-Router, and a build of a simple route.",
          "length": "1476",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-introtoangularjs/techskills-introtoangularjs-1-17-1-client_routing_with_angular_ui_router-071717-PGM.00_27_41_24.Still001.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-introtoangularjs/techskills-introtoangularjs-1-17-1-client_routing_with_angular_ui_router-071717-PGM.00_27_41_24.Still001-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-introtoangularjs/techskills-introtoangularjs-1-17-1-client_routing_with_angular_ui_router-071717-PGM.00_27_41_24.Still001-sm.jpg",
          "title": "Client Router with Angular UI Router",
          "transcript": "",
          "vimeoId": "225994264"
        },
        {
          "description": "Justin and Zach continues with Client Routing With Angular UI Router, default route using '.Otherwise' in Angular Router, URLRouter, why use the UI Router over the standard one, documentation that needs to be addressed, and the page as a single component.",
          "length": "1676",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-introtoangularjs/techskills-introtoangularjs-1-17-2-client_routing_with_angular_ui_router_pt2-071717-PGM.00_29_29_17.Still001.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-introtoangularjs/techskills-introtoangularjs-1-17-2-client_routing_with_angular_ui_router_pt2-071717-PGM.00_29_29_17.Still001-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-introtoangularjs/techskills-introtoangularjs-1-17-2-client_routing_with_angular_ui_router_pt2-071717-PGM.00_29_29_17.Still001-sm.jpg",
          "title": "Client Router with Angular UI Router Part 2",
          "transcript": "",
          "vimeoId": "226303265"
        }
      ],
      "title": "Intro to AngularJS"
    }
  ],
  "url": "introangularjs",
  "vLab": false
}
