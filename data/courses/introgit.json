{
  "description": "Version control is a cryptic yet essential part of a software development team. Git is a distributed version control system that allows collaboration and management of large scale software products (as well as other types of projects). In this series, you will get started with Git. You will be shown how to create a repository, save changes in the repo, link to a remote server (GitHub), and finally a basic collaboration workflow. If you are just getting started in software development or you need to know more about the tools that your team is using, then join us as we 'git' started.",
  "descriptionMD": "Version control is a cryptic yet essential part of a software development team. Git is a distributed version control system that allows collaboration and management of large scale software products (as well as other types of projects). In this series, you will get started with Git. You will be shown how to create a repository, save changes in the repo, link to a remote server (GitHub), and finally a basic collaboration workflow. If you are just getting started in software development or you need to know more about the tools that your team is using, then join us as we 'git' started.",
  "length": "12672",
  "name": "Intro to Git",
  "practiceExam": false,
  "subtitle": "Distributed version control",
  "tagUrl": "developer",
  "topics": [
    {
      "episodes": [
        {
          "description": "Version control is a cryptic yet essential part of a software development team. Git is a distributed version control system that allows collaboration and management of large scale software products (as well as other types of projects). In this series, you will get started with Git. You will be shown how to create a repository, save changes in the repo, link to a remote server (GitHub), and finally a basic collaboration workflow. If you are just getting started in software development or you need to know more about the tools that your team is using, then join us as we 'git' started.",
          "length": "103",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-introtogit/techskills-introtogit-0-0-overview-041417-PGM.00_00_06_06.Still001.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-introtogit/techskills-introtogit-0-0-overview-041417-PGM.00_00_06_06.Still001-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-introtogit/techskills-introtogit-0-0-overview-041417-PGM.00_00_06_06.Still001-sm.jpg",
          "title": "Overview",
          "transcript": "",
          "vimeoId": "214011035"
        },
        {
          "description": "In this episode, Peter and Justin introduce Git, a distributed version control system. They'll highlight what a VCS entails, as well as what makes Git unique.",
          "length": "917",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-introtogit/techskills-introtogit-1-1-what_is_git_-041117-PGM.00_15_02_11.Still001.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-introtogit/techskills-introtogit-1-1-what_is_git_-041117-PGM.00_15_02_11.Still001-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-introtogit/techskills-introtogit-1-1-what_is_git_-041117-PGM.00_15_02_11.Still001-sm.jpg",
          "title": "What is Git",
          "transcript": "WEBVTT\n\n1\n00:00:00.220 --> 00:00:05.863\nWelcome to ITPROTV,\nI'm your host [CROSSTALK]\n\n2\n00:00:05.863 --> 00:00:08.588\n[MUSIC]\n\n3\n00:00:08.588 --> 00:00:11.068\n&gt;&gt; Your watching ITPROTV.\n\n4\n00:00:11.068 --> 00:00:14.000\n&gt;&gt; Hello and welcome to ITPROTV.\n\n5\n00:00:14.000 --> 00:00:19.030\nI'm your host Peter VanRysdam and in\ntoday's episode we are talking about GIT.\n\n6\n00:00:19.030 --> 00:00:22.610\nSpecifically now we are talking\nabout just what is git and\n\n7\n00:00:22.610 --> 00:00:25.230\ngetting to know git, I'm gonna have so\nmuch fun with that today.\n\n8\n00:00:25.230 --> 00:00:26.813\n&gt;&gt; [LAUGH]\n&gt;&gt; Here to help us have fun with that is\n\n9\n00:00:26.813 --> 00:00:28.110\nMr. Justin Dennison.\n\n10\n00:00:28.110 --> 00:00:28.930\nJustin how you doing?\n\n11\n00:00:28.930 --> 00:00:30.410\n&gt;&gt; I am doing well Peter, and how are you?\n\n12\n00:00:30.410 --> 00:00:31.120\n&gt;&gt; I am great.\n\n13\n00:00:31.120 --> 00:00:34.390\nAnd now I assume that git\nisn't just something you\n\n14\n00:00:34.390 --> 00:00:36.590\nyell at kids that\nare getting on your lawn.\n\n15\n00:00:36.590 --> 00:00:37.690\nWhat is git?\n\n16\n00:00:37.690 --> 00:00:41.690\n&gt;&gt; Yes that is sadly with my southern\ntwang that kind of comes out periodically\n\n17\n00:00:41.690 --> 00:00:44.300\nyou will hear me say get, using git.\n\n18\n00:00:44.300 --> 00:00:46.970\nSo I will try to enunciate\nit in these episodes,\n\n19\n00:00:46.970 --> 00:00:49.150\nso just to make that distinction.\n\n20\n00:00:49.150 --> 00:00:50.780\nSo what is git exactly?\n\n21\n00:00:50.780 --> 00:00:53.670\nWell, it's a distributed\nversion control system.\n\n22\n00:00:53.670 --> 00:00:56.590\nAnd well,\nthat's the best explanation that I have.\n\n23\n00:00:57.830 --> 00:00:59.090\n&gt;&gt; Okay.\nYou're gonna have to help me a little bit.\n\n24\n00:00:59.090 --> 00:01:01.630\nWhat do we mean by version control?\n\n25\n00:01:01.630 --> 00:01:03.170\n&gt;&gt; That's a great question.\n\n26\n00:01:03.170 --> 00:01:06.500\nWell, Peter,\nlet's start with the question back at you.\n\n27\n00:01:06.500 --> 00:01:08.360\nHave you ever built a project or\n\n28\n00:01:08.360 --> 00:01:12.100\nhad to work with someone where you\nhad to share information, right?\n\n29\n00:01:12.100 --> 00:01:14.540\nHow do you actually accomplish that?\n\n30\n00:01:14.540 --> 00:01:19.230\n&gt;&gt; When we're sharing digital information\nI'll use something like OneDrive or\n\n31\n00:01:19.230 --> 00:01:20.630\nDropbox a lot of times.\n\n32\n00:01:20.630 --> 00:01:22.940\n&gt;&gt; Have you ever used a thumb drive?\n\n33\n00:01:22.940 --> 00:01:26.000\n&gt;&gt; Yeah, definitely, to put things on\na thumb drive and share it with you.\n\n34\n00:01:26.000 --> 00:01:27.310\n&gt;&gt; Now, let me ask a followup question.\n\n35\n00:01:27.310 --> 00:01:31.250\nWhat if, this is a horrible\nway to go about this, but\n\n36\n00:01:31.250 --> 00:01:34.320\nwhat if you put your only copy on the\nthumb drive, you hand it to someone else,\n\n37\n00:01:34.320 --> 00:01:36.375\nthey make a change, they save it and\nI hand it back to you.\n\n38\n00:01:36.375 --> 00:01:37.295\nWhat happens then?\n\n39\n00:01:37.295 --> 00:01:38.925\n&gt;&gt; I promise I've never done that but\n\n40\n00:01:38.925 --> 00:01:43.595\nif that happens then that is now the only\ncopy and that's what we're going with.\n\n41\n00:01:43.595 --> 00:01:47.957\n&gt;&gt; So, and it's kind of a pain to\nshift those thumb drives around.\n\n42\n00:01:47.957 --> 00:01:52.025\nNow, OneDrive and Google Drive and\nDropbox, those services have made this\n\n43\n00:01:52.025 --> 00:01:57.820\na great deal easier but\non top of sharing files, folders and such.\n\n44\n00:01:57.820 --> 00:02:02.390\nA virtual control system allows us\nto keep snapshots in time right?\n\n45\n00:02:02.390 --> 00:02:05.670\nSo let's talk about what\na version control system is.\n\n46\n00:02:05.670 --> 00:02:09.260\nI get someway to see a progression\nof whatever we're tracking.\n\n47\n00:02:09.260 --> 00:02:12.290\nThrough time either through snapshots or\ndiffs, and\n\n48\n00:02:12.290 --> 00:02:14.190\nwe'll talk more specifically about that.\n\n49\n00:02:14.190 --> 00:02:18.830\nSo I like to think of a Polaroid camera\nmaking a stop motion animation film.\n\n50\n00:02:18.830 --> 00:02:23.710\nYou had those nice little elementary\nschool science fair projects where\n\n51\n00:02:23.710 --> 00:02:25.950\nyou plant the seed and\nyou take a picture everyday and\n\n52\n00:02:25.950 --> 00:02:27.470\nthen you can make a little flip book.\n\n53\n00:02:27.470 --> 00:02:29.920\nSo that's how I think of version control.\n\n54\n00:02:29.920 --> 00:02:33.430\nNow that allows us to keep\na journal of changes, right?\n\n55\n00:02:33.430 --> 00:02:36.830\nThis is what happen first, this is what\nhappen next, this is what happen next.\n\n56\n00:02:36.830 --> 00:02:41.810\nAnd then, that way of something goes\nhorribly array, I can then rollback.\n\n57\n00:02:41.810 --> 00:02:44.920\nSo, there are a few ways that\nthis was original accomplished.\n\n58\n00:02:44.920 --> 00:02:51.030\nSadly, the way we this discuss was away\nthat people enforced version control.\n\n59\n00:02:51.030 --> 00:02:54.500\nThey would keep multiple folders would\nlike a time stamps or something.\n\n60\n00:02:54.500 --> 00:02:59.240\nWell, this is digital media on this\ntimestamp and then they would make a copy,\n\n61\n00:02:59.240 --> 00:03:00.450\nmake an update, make a copy.\n\n62\n00:03:00.450 --> 00:03:04.830\nWell you can sell number that has\nhorrible space savings, right?\n\n63\n00:03:04.830 --> 00:03:06.930\nYou got copies all over the place.\n\n64\n00:03:06.930 --> 00:03:11.560\nBut in addition to, it's very error prone.\n\n65\n00:03:11.560 --> 00:03:14.930\nWhat if I forget to rename it or\nI accidentally override?\n\n66\n00:03:14.930 --> 00:03:16.050\nWell, you're out of luck.\n\n67\n00:03:16.050 --> 00:03:18.580\nThere's no way to go backwards.\n\n68\n00:03:18.580 --> 00:03:20.810\nAnd then came along so, some newer ones.\n\n69\n00:03:20.810 --> 00:03:21.540\nPeople were like, you know?\n\n70\n00:03:21.540 --> 00:03:26.040\nThis is a horrible way to keep,\nwhether it be creative media,\n\n71\n00:03:26.040 --> 00:03:29.680\nwhether it be programming, source code.\n\n72\n00:03:29.680 --> 00:03:31.560\nI need some way to kind of manage this.\n\n73\n00:03:31.560 --> 00:03:36.590\nAnd then came along centralized version\ncontrol systems, such as subversion, pure\n\n74\n00:03:36.590 --> 00:03:41.800\nforce and CVS and what this did was, it\nput all of the files in a central server.\n\n75\n00:03:41.800 --> 00:03:46.330\nAnd then that server kept those changes,\nthat change log so\n\n76\n00:03:46.330 --> 00:03:49.440\nto speak in a database on the server.\n\n77\n00:03:49.440 --> 00:03:51.620\nI would then check that out and\n\n78\n00:03:51.620 --> 00:03:55.030\nit would give me well,\nnot quite a copy but like a link.\n\n79\n00:03:55.030 --> 00:03:57.510\nAnd when I made to change\nto my local file system.\n\n80\n00:03:57.510 --> 00:04:00.970\nThat would then submit that to\nthe central version control, and\n\n81\n00:04:00.970 --> 00:04:02.820\nthose links would be updated.\n\n82\n00:04:02.820 --> 00:04:05.330\n&gt;&gt; Now how would that be working\nthough if you're making changes, and\n\n83\n00:04:05.330 --> 00:04:06.530\nI'm making changes at the same time.\n\n84\n00:04:06.530 --> 00:04:10.470\nBecause we've both checked out a copy\nat the same time that looks identical,\n\n85\n00:04:10.470 --> 00:04:12.800\nbut now what we're checking\nback in is different?\n\n86\n00:04:12.800 --> 00:04:14.020\n&gt;&gt; No that's a great question.\n\n87\n00:04:14.020 --> 00:04:17.470\nThere's a couple of things that we\nhave to concern ourselves with.\n\n88\n00:04:17.470 --> 00:04:22.220\nLet's say that you're working and folder\nA and I'm working on folder B, then it\n\n89\n00:04:22.220 --> 00:04:27.680\ndoesn't matter who made what changes and\nwhen they made those changes because well,\n\n90\n00:04:27.680 --> 00:04:32.380\nif I update A and then B,\nthat's the same as updating B then A.\n\n91\n00:04:32.380 --> 00:04:36.900\nNow, the problem becomes if we are working\non the same folder, I update A and\n\n92\n00:04:36.900 --> 00:04:38.340\nthen you update A.\n\n93\n00:04:38.340 --> 00:04:42.810\nWell, it actually becomes an issue\nof well, there's conflicts.\n\n94\n00:04:42.810 --> 00:04:46.080\nWe have to tell it how to resolve\nthose and that is a very real issue.\n\n95\n00:04:46.080 --> 00:04:48.850\nNow, there are mechanism in\nthis version control systems.\n\n96\n00:04:48.850 --> 00:04:52.770\nTo manage those but as generally\nsomething that we'll talk about later and\n\n97\n00:04:52.770 --> 00:04:57.160\nthen finally there's a set of\ndistributive version control systems and\n\n98\n00:04:57.160 --> 00:04:58.940\nthat's a little different\nfrom than centralized.\n\n99\n00:04:58.940 --> 00:05:04.090\nThey're still a server but when I check\nout a copy, I'm getting a full copy.\n\n100\n00:05:04.090 --> 00:05:06.880\nSo if you check out a copy,\nI check out a copy, and\n\n101\n00:05:06.880 --> 00:05:11.560\neverybody in the office checks out a copy,\nwe get a full copy, and\n\n102\n00:05:11.560 --> 00:05:17.540\ngit mercurial, and what was it, bazaar and\ndarcs, are all examples of this.\n\n103\n00:05:17.540 --> 00:05:22.780\nAnd, then what happens is, well if you\nmake make a change it's made on your repo,\n\n104\n00:05:22.780 --> 00:05:26.850\nif I make a change it's made on my\nrepo and then we submit those changes\n\n105\n00:05:26.850 --> 00:05:30.900\nto be resolved on the central\nkind of system, right?\n\n106\n00:05:30.900 --> 00:05:33.480\nI'm saying repo like people\nknow what that means.\n\n107\n00:05:33.480 --> 00:05:35.120\nI'm really in stringed in this but\n\n108\n00:05:35.120 --> 00:05:40.020\nthat's our set of files and folders\nthat are, that we're actually tracking.\n\n109\n00:05:40.020 --> 00:05:45.470\nSo, this helps with keeping downtime,\nright?\n\n110\n00:05:45.470 --> 00:05:48.780\nIf our main server goes down, you still\nhave a copy, I still have a copy,\n\n111\n00:05:48.780 --> 00:05:49.960\nwe can still work.\n\n112\n00:05:49.960 --> 00:05:54.060\nWhereas in the central version control,\nthough it helped with\n\n113\n00:05:54.060 --> 00:05:59.060\ntimestamping folders if the main server\nwent down well you're out of luck you\n\n114\n00:05:59.060 --> 00:06:03.380\ncan't actually make any changes and you\njust sit there and twitter your thumbs.\n\n115\n00:06:03.380 --> 00:06:05.000\n&gt;&gt; So\nI can already see some of the benefits,\n\n116\n00:06:05.000 --> 00:06:09.990\nI've got my own local copy, I'm using\na lot less storage space in my computer.\n\n117\n00:06:09.990 --> 00:06:14.020\nWhat are some of the other benefits\nof git over some of the previous\n\n118\n00:06:14.020 --> 00:06:16.430\nversion control systems\nwe've talked about?\n\n119\n00:06:16.430 --> 00:06:18.910\n&gt;&gt; So, the previous version\ncontrol systems, as we discussed,\n\n120\n00:06:18.910 --> 00:06:20.444\nwe've got central versus distributing.\n\n121\n00:06:20.444 --> 00:06:21.975\nGit is one of those distributed.\n\n122\n00:06:21.975 --> 00:06:27.625\nAnd well, Git was brought about to\nmanage the Linux kernel, source code.\n\n123\n00:06:27.625 --> 00:06:31.585\nAnd because it was there,\nit's managing billions of lines of code,\n\n124\n00:06:31.585 --> 00:06:36.805\nall over the world, so it had to have\na few kind of key points as a takeaway.\n\n125\n00:06:36.805 --> 00:06:39.595\nIt had to be fast, had to be simple.\n\n126\n00:06:39.595 --> 00:06:43.510\nNow, I would say that simple\nis a relative term, right,\n\n127\n00:06:43.510 --> 00:06:46.200\nwhen I say simple,\nversus when you say simple,\n\n128\n00:06:46.200 --> 00:06:51.020\ndepending on what we're talking about,\nmaybe simple is an issue.\n\n129\n00:06:51.020 --> 00:06:54.580\nAnd then we had to have some way\nto have non-linear development.\n\n130\n00:06:54.580 --> 00:06:57.680\nLike, you could work on something, and\nI could work on something, that aren't\n\n131\n00:06:57.680 --> 00:07:02.640\nnecessarily progressing at the same pace,\nor have to do with the same feature set.\n\n132\n00:07:02.640 --> 00:07:08.000\nAnd then that's pretty much what\nwe had to boil that down to\n\n133\n00:07:08.000 --> 00:07:11.290\nin order to get a virtual control\nsystem that was distributed,\n\n134\n00:07:11.290 --> 00:07:14.460\nthat can manage all of this code and\nfulfill all of the duties.\n\n135\n00:07:15.610 --> 00:07:18.070\nSo how are those accomplished?\n\n136\n00:07:19.200 --> 00:07:24.310\nWell in older control systems, what would\nhappen was it would take [INAUDIBLE] and\n\n137\n00:07:24.310 --> 00:07:28.620\nwhat that meant was it would say,\nhere's file A I made a change.\n\n138\n00:07:28.620 --> 00:07:33.410\nIt will track only this\ndifferences from here to here.\n\n139\n00:07:33.410 --> 00:07:36.228\nThat's what it checked in,\nthat's what it kept logs of.\n\n140\n00:07:36.228 --> 00:07:41.340\nHowever, with Git you're actually\ngetting a full snapshot, but\n\n141\n00:07:41.340 --> 00:07:43.630\nit's only tracking files or\n\n142\n00:07:43.630 --> 00:07:48.740\nfolders, actually it tracks files within\nfolders as they change throughout time.\n\n143\n00:07:48.740 --> 00:07:51.770\nSo again, I'm gonna go back to\nthat Polaroid picture, right?\n\n144\n00:07:51.770 --> 00:07:55.830\nIf I take up the same picture of the room,\nthe only thing I would be concerned about,\n\n145\n00:07:55.830 --> 00:07:57.540\nkinda like how our eyes work,\n\n146\n00:07:57.540 --> 00:08:01.110\nare the things that have changed\nfrom picture to picture.\n\n147\n00:08:01.110 --> 00:08:06.180\nIf I think about the little plant, right,\nthat's growing in my experiment from\n\n148\n00:08:06.180 --> 00:08:09.160\nfourth grade then the only\nthing that really draws my eye\n\n149\n00:08:09.160 --> 00:08:14.430\nis the plant growing over time and that's\nkinda how Git keeps track of things.\n\n150\n00:08:14.430 --> 00:08:20.380\nI only get a new version, a snapshot,\nwell of the things that have changed.\n\n151\n00:08:20.380 --> 00:08:25.200\nIn addition to everything that\nyou're tracking, well that's local.\n\n152\n00:08:25.200 --> 00:08:28.100\nSo, I'm taking those pictures,\nI'm taking those snapshots,\n\n153\n00:08:28.100 --> 00:08:32.550\nall that's being saved local until I\nsubmit it to the centralized server.\n\n154\n00:08:32.550 --> 00:08:35.020\nI don't have to use a server widget, but\n\n155\n00:08:35.020 --> 00:08:38.210\nif I want to collaborate with\nother people, I need that.\n\n156\n00:08:38.210 --> 00:08:39.590\nAnd then, interestingly enough,\n\n157\n00:08:39.590 --> 00:08:43.840\nsomething that came along,\nkinda indirect consequence.\n\n158\n00:08:43.840 --> 00:08:48.500\nThe way this is accomplished\nis using check sounds.\n\n159\n00:08:48.500 --> 00:08:50.990\nNamely, which is a hashing algorithm.\n\n160\n00:08:50.990 --> 00:08:55.380\nAnd that makes sure that you have foreign\nintegrity, you don't accidentally like\n\n161\n00:08:55.380 --> 00:08:58.200\nhave corruption of files and\nthings of that nature.\n\n162\n00:08:58.200 --> 00:08:59.490\nAnd then lastly,\n\n163\n00:08:59.490 --> 00:09:05.610\nbecause of that we had to save storage\nbecause we are only adding data overtime.\n\n164\n00:09:05.610 --> 00:09:07.700\nBecause if I have files\nthat haven't changed,\n\n165\n00:09:07.700 --> 00:09:11.400\nI don't keep a new snapshot I\njust point to the old ones.\n\n166\n00:09:11.400 --> 00:09:16.120\nSo it gets really complicated but\nyou'll see in time as we work with git,\n\n167\n00:09:16.120 --> 00:09:20.540\nthat well we just put that in the back of\nour minds and not really worry about it.\n\n168\n00:09:20.540 --> 00:09:22.910\n&gt;&gt; Sure I know I've seen that\nin the past on my own computer.\n\n169\n00:09:22.910 --> 00:09:26.240\nAs I maybe save a word doc and\nversion two, version three,\n\n170\n00:09:26.240 --> 00:09:28.040\nversion four much smaller scale obviously.\n\n171\n00:09:28.040 --> 00:09:31.500\nBut we can talking about megabytes and\ngigabytes and\n\n172\n00:09:31.500 --> 00:09:34.410\nterabytes of data when we're\ntalking about big applications.\n\n173\n00:09:34.410 --> 00:09:39.890\nSo can we dig into a little bit more on,\nexactly, how Git works?\n\n174\n00:09:39.890 --> 00:09:41.920\n&gt;&gt; So that's a great question, Peter.\n\n175\n00:09:41.920 --> 00:09:43.470\nHow does Git work exactly?\n\n176\n00:09:43.470 --> 00:09:47.200\nNow, I'm gonna touch on this briefly,\nbecause this is my introductory series.\n\n177\n00:09:47.200 --> 00:09:52.290\nI implore you to go and dig further into\nthis cuz you can really get lost but\n\n178\n00:09:53.320 --> 00:09:55.900\ngit works in very mysterious ways.\n\n179\n00:09:55.900 --> 00:10:00.360\nTypically, you have files that are in\na committed state, a modified state or\n\n180\n00:10:00.360 --> 00:10:02.200\nthey're in the stage state.\n\n181\n00:10:02.200 --> 00:10:03.090\nNow what is committed?\n\n182\n00:10:03.090 --> 00:10:08.210\nThat means I have submitted all of\nthose changes to be saved locally.\n\n183\n00:10:08.210 --> 00:10:10.560\nIn, well,\nwhat we're gonna call a local data base.\n\n184\n00:10:10.560 --> 00:10:13.850\nBehind the scenes there's this\ndata base like object that they're\n\n185\n00:10:13.850 --> 00:10:14.960\nrecording these changes.\n\n186\n00:10:16.340 --> 00:10:19.760\nSo that's how that kind of saves and\nkeeps track.\n\n187\n00:10:19.760 --> 00:10:22.000\nThose are those snap-shots\nthat are being made.\n\n188\n00:10:22.000 --> 00:10:26.429\nNow modified, modified are files\nthat have been previously committed.\n\n189\n00:10:27.440 --> 00:10:30.440\nAnd then we've changed something\nabout them, so they've changed so\n\n190\n00:10:30.440 --> 00:10:33.940\nwe need to then submit\nthe changes to the database.\n\n191\n00:10:33.940 --> 00:10:35.600\nAnd then we have staged,\n\n192\n00:10:35.600 --> 00:10:39.920\nwell staged I like to think of it\nas I'm preparing to save right?\n\n193\n00:10:39.920 --> 00:10:43.800\nSo if you've ever played any video\ngames if you go to the save point,\n\n194\n00:10:43.800 --> 00:10:47.600\nif you go to hit x on the save point or\nwhatever your favorite gaming console is.\n\n195\n00:10:47.600 --> 00:10:52.690\nI'm assuming you play games that have save\npoints that's not always the case but\n\n196\n00:10:52.690 --> 00:10:53.650\nimagine.\n\n197\n00:10:53.650 --> 00:10:56.260\nRight when I go to the save point\nit asks you do you want to save,\n\n198\n00:10:56.260 --> 00:11:00.030\nyou say yes,\nthen it asks you are you sure?\n\n199\n00:11:00.030 --> 00:11:02.680\nWell if you say yes\nagain then it will save.\n\n200\n00:11:02.680 --> 00:11:06.360\nNow part of that has to do with\noverwriting memory on your memory card but\n\n201\n00:11:06.360 --> 00:11:09.350\nthat is staging and committing right?\n\n202\n00:11:09.350 --> 00:11:11.520\nStaging is getting ready to save.\n\n203\n00:11:11.520 --> 00:11:14.520\nCommitting is actually saving\nthose to the local database.\n\n204\n00:11:14.520 --> 00:11:19.560\nAnd the whole purposes of that, is I get\nfine grain control over what I'm saving,\n\n205\n00:11:19.560 --> 00:11:21.700\nwhat I wanna take a snapshot of, right?\n\n206\n00:11:21.700 --> 00:11:24.430\nAnd some of these old version\ncontrol systems actually don't even\n\n207\n00:11:24.430 --> 00:11:25.270\nwork like that.\n\n208\n00:11:25.270 --> 00:11:29.040\nI worked with a couple that,\nthere are ways to do fine grain control.\n\n209\n00:11:29.040 --> 00:11:32.930\nBut what it would do is, everything that\nI made a change to, when I made a commit,\n\n210\n00:11:32.930 --> 00:11:35.962\nand I actually made a save,\nit would go cool I just went ahead and\n\n211\n00:11:35.962 --> 00:11:39.799\nsaved everything for you and you're like\nno that's not what I wanted, I wanted\n\n212\n00:11:39.799 --> 00:11:44.020\njust this 1 file instead of this 30 files\nthat I've been playing around with.\n\n213\n00:11:44.020 --> 00:11:48.690\n&gt;&gt; So to clarify on that Justin going\nback to kinda the Word doc example if I\n\n214\n00:11:48.690 --> 00:11:52.200\nmake a bunch of changes and hit save and\nconfirm yes I do wanna save.\n\n215\n00:11:52.200 --> 00:11:54.970\nIt's gonna go ahead and over write\nthat previous file and that's it now.\n\n216\n00:11:54.970 --> 00:11:58.000\nSo you're saying with the virtual\ncontrol system, even if I say yes\n\n217\n00:11:58.000 --> 00:12:01.860\nI'm sure I want to save but I made\na mistake, we've got all those versions.\n\n218\n00:12:01.860 --> 00:12:06.380\n&gt;&gt; Exactly, so\nI can walk back in time but I'm staging,\n\n219\n00:12:06.380 --> 00:12:08.970\nwhich is I want to save and\nit asks you, do you want to save?\n\n220\n00:12:08.970 --> 00:12:13.480\nAnd then when you finally save that\nis committing and then, even then,\n\n221\n00:12:13.480 --> 00:12:17.550\nif I mess up, if I keep that very fine\ngrain, I like to say commit early and\n\n222\n00:12:17.550 --> 00:12:20.990\noften, then I can move backwards in time.\n\n223\n00:12:20.990 --> 00:12:24.140\nI can control z, so\nto speak, for my files.\n\n224\n00:12:24.140 --> 00:12:28.360\nNow I do wanna emphasize, I'm gonna talk\nabout this in the concept of source code.\n\n225\n00:12:28.360 --> 00:12:33.989\nBut, Git is used for\nvarious creative professionals,\n\n226\n00:12:33.989 --> 00:12:39.511\nsuch as PNGs,\nwhat is the Photoshop document source?\n\n227\n00:12:39.511 --> 00:12:40.760\n&gt;&gt; APS.\n&gt;&gt; EPS.\n\n228\n00:12:40.760 --> 00:12:41.750\n&gt;&gt; EPS.\n\n229\n00:12:41.750 --> 00:12:46.430\nEPS, and various those,\nit will actually version those as well.\n\n230\n00:12:46.430 --> 00:12:50.050\nSo you can use that to roll back changes\nthat maybe you've accidentally made.\n\n231\n00:12:51.440 --> 00:12:55.040\nSo that's how the files\nare kind of in flux.\n\n232\n00:12:55.040 --> 00:12:56.600\nNow in doing so, right?\n\n233\n00:12:56.600 --> 00:13:00.410\nAnd committing, saving, or\ncommitting, modifying, and staging,\n\n234\n00:13:00.410 --> 00:13:05.280\nyou have three places that you kinda work\naround inside of your Git repository or\n\n235\n00:13:05.280 --> 00:13:07.440\nyour folder that is under\nversion control with Git.\n\n236\n00:13:07.440 --> 00:13:09.150\nAnd that is the working directory,\n\n237\n00:13:09.150 --> 00:13:11.730\nand that's actually your set of\nfiles that you're working with.\n\n238\n00:13:11.730 --> 00:13:14.650\nIt is checked out from the database.\n\n239\n00:13:14.650 --> 00:13:19.610\nLike here are all the snapshots that I\nwant that I then want to work onward from.\n\n240\n00:13:19.610 --> 00:13:21.660\nYou have the staging area, which is,\n\n241\n00:13:21.660 --> 00:13:24.840\nwell, that's where your,\nwhat do I wanna save, what's next?\n\n242\n00:13:24.840 --> 00:13:29.360\nI like to think of it as elevating it to\nthe podium in order to present an award or\n\n243\n00:13:29.360 --> 00:13:30.610\nto actually save it.\n\n244\n00:13:30.610 --> 00:13:34.670\nAnd then you have the dot-git directory,\nwhich we will explore in a future episode.\n\n245\n00:13:34.670 --> 00:13:37.140\nAnd that's, well,\nthat's the real meat and potatoes.\n\n246\n00:13:37.140 --> 00:13:41.940\nThat's where all the database changes, all\nof the, all the saves, all the tracking,\n\n247\n00:13:41.940 --> 00:13:45.990\nthat's where all of that information\nis stored, and notice I said .Git.\n\n248\n00:13:45.990 --> 00:13:49.910\nWell, because it's a dot file,\nor it's actually a dot folder.\n\n249\n00:13:49.910 --> 00:13:53.530\nFor the most part it's hidden away\nfrom you, so, the entire purpose is\n\n250\n00:13:53.530 --> 00:13:58.890\nyou should use this tool and\nwhen you get comfortable, start diving in.\n\n251\n00:13:58.890 --> 00:14:01.460\nMost of the time it's going to\nbe hidden away from you though.\n\n252\n00:14:01.460 --> 00:14:03.890\n&gt;&gt; Gotcha, okay, so now you've sold me.\n\n253\n00:14:03.890 --> 00:14:07.960\nI understand what GIT is,\nI understand how it works, and\n\n254\n00:14:07.960 --> 00:14:09.670\nnow I want to start using it.\n\n255\n00:14:09.670 --> 00:14:10.700\nHow do I use it?\n\n256\n00:14:10.700 --> 00:14:11.380\nAm I.\n\n257\n00:14:11.380 --> 00:14:12.670\nSaving my file to a certain place.\n\n258\n00:14:12.670 --> 00:14:15.110\nDo I need to download some\nsoftware where do we start?\n\n259\n00:14:15.110 --> 00:14:17.750\n&gt;&gt; Well Peter we definitely\nhave to get Git installed.\n\n260\n00:14:17.750 --> 00:14:21.300\nSo the question is how do I get\nGit to get started with Git right?\n\n261\n00:14:21.300 --> 00:14:23.855\n&gt;&gt; [CROSSTALK]\n&gt;&gt; You're not the only person that's gonna\n\n262\n00:14:23.855 --> 00:14:24.810\nhave fun with this.\n\n263\n00:14:25.930 --> 00:14:28.860\nWell, I don't know if we quite\nhave time in this episode so\n\n264\n00:14:28.860 --> 00:14:31.780\nwe may want to the whole\nof into another episode\n\n265\n00:14:31.780 --> 00:14:35.750\nbecause well I'm gonna show you on Linux,\nMac OS, and Windows because\n\n266\n00:14:35.750 --> 00:14:38.520\nafter you get it installed it's all\nthe same through out those platforms.\n\n267\n00:14:38.520 --> 00:14:41.700\n&gt;&gt; All right that makes a lot of sense\nI'm sure that's a lot to get into so\n\n268\n00:14:41.700 --> 00:14:44.860\nwe definitely do have some future episodes\nwhere we're gonna talk about this\n\n269\n00:14:44.860 --> 00:14:45.510\na little bit more.\n\n270\n00:14:45.510 --> 00:14:49.450\nAnd looking at the clock it's about time\nto get to one of those new episodes so.\n\n271\n00:14:49.450 --> 00:14:51.950\nLet's go ahead and wrap this one up and\nthen we'll come back and\n\n272\n00:14:51.950 --> 00:14:55.130\ntalk about how to get Git and\ngetting Git on your system and-\n\n273\n00:14:55.130 --> 00:14:56.360\n&gt;&gt; Getting started.\n\n274\n00:14:56.360 --> 00:14:57.560\n&gt;&gt; It's gonna get good.\n\n275\n00:14:57.560 --> 00:14:58.600\n&gt;&gt; Yeah.\n&gt;&gt; All right, so thanks for\n\n276\n00:14:58.600 --> 00:14:59.640\njoining us today.\n\n277\n00:14:59.640 --> 00:15:00.830\nI'm Peter VanRysdam.\n\n278\n00:15:00.830 --> 00:15:01.680\n&gt;&gt; And I'm Justin Dennison.\n\n279\n00:15:01.680 --> 00:15:02.720\n&gt;&gt; And we'll see you next time.\n\n280\n00:15:02.720 --> 00:15:10.325\n[MUSIC]\n\n281\n00:15:10.325 --> 00:15:13.127\n&gt;&gt; Thank you for watching IT PRO TV.\n\n",
          "vimeoId": "213217224"
        },
        {
          "description": "You can't use Git if you don't install it. This episode will show you how to download and install git for Windows, Mac, and Linux as well as the unique install processes for each operating system.",
          "length": "1739",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-introtogit/techskills-introtogit-2-1-installing_git_-041117-PGM.00_28_42_17.Still001.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-introtogit/techskills-introtogit-2-1-installing_git_-041117-PGM.00_28_42_17.Still001-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-introtogit/techskills-introtogit-2-1-installing_git_-041117-PGM.00_28_42_17.Still001-sm.jpg",
          "title": "Installing Git",
          "transcript": "WEBVTT\n\n1\n00:00:00.008 --> 00:00:06.205\nWelcome to ITProTV,\nI'm your host [CROSSTALK]\n\n2\n00:00:06.205 --> 00:00:07.019\n[MUSIC]\n\n3\n00:00:07.019 --> 00:00:12.685\n&gt;&gt; You're watching ITProTV.\n\n4\n00:00:12.685 --> 00:00:14.825\n&gt;&gt; Hello and welcome to ITProTV.\n\n5\n00:00:14.825 --> 00:00:16.535\nI'm your host Peter VanRysdam and\n\n6\n00:00:16.535 --> 00:00:19.595\ntoday we're gonna continue\nour introduction to Git.\n\n7\n00:00:19.595 --> 00:00:23.225\nAnd specifically in this episode we're\ngonna talk about how to install Git, or\n\n8\n00:00:23.225 --> 00:00:25.375\nas I like to say how to get Git.\n\n9\n00:00:25.375 --> 00:00:28.015\nAnd here to help us get Git,\nwe have Mr. Justin Dennison.\n\n10\n00:00:28.015 --> 00:00:28.985\nJustin how you doing?\n\n11\n00:00:28.985 --> 00:00:30.035\n&gt;&gt; I am doing well Peter,\n\n12\n00:00:30.035 --> 00:00:33.190\nI don't know if I'm ever gonna\nget used to all the Git getting.\n\n13\n00:00:33.190 --> 00:00:34.440\nGetting good things.\n\n14\n00:00:34.440 --> 00:00:36.110\n&gt;&gt; I love it, I love saying it.\n\n15\n00:00:36.110 --> 00:00:40.100\nBut, to get Git, you mentioned in the last\nepisode we need to actual install\n\n16\n00:00:40.100 --> 00:00:41.670\nsomething on our machine.\n\n17\n00:00:41.670 --> 00:00:43.270\nSo, where do we start for that?\n\n18\n00:00:43.270 --> 00:00:45.130\n&gt;&gt; Well, that is a great question Peter.\n\n19\n00:00:45.130 --> 00:00:47.552\nActually the installation story\nis a little bit different for\n\n20\n00:00:47.552 --> 00:00:50.400\nkind of the three main OS types, right?\n\n21\n00:00:50.400 --> 00:00:53.910\nI'm gonna cover Mac OS, Windows and Linux.\n\n22\n00:00:53.910 --> 00:00:58.850\nNow, Mac OS and Windows, or excuse me, MAC\nOS and Linux are pretty straightforward.\n\n23\n00:00:58.850 --> 00:01:02.480\nWindows is gonna have some decisions that\nyou have to make as a specific user.\n\n24\n00:01:02.480 --> 00:01:04.902\nI'm gonna tell you about what I pick.\n\n25\n00:01:04.902 --> 00:01:09.440\nAnd then I'm gonna leave it up to you to\nmake the best decisions for yourself.\n\n26\n00:01:09.440 --> 00:01:11.480\nSo go ahead and\ntake a look at my screen here.\n\n27\n00:01:11.480 --> 00:01:13.660\nAnd just to show,\nI have three environments.\n\n28\n00:01:13.660 --> 00:01:16.580\nI have Windows,\nI have my Ubuntu box right?\n\n29\n00:01:16.580 --> 00:01:19.940\nThis is going to be- you might\nhave to translate this over to\n\n30\n00:01:19.940 --> 00:01:22.660\nwhatever your Linux distro of choice is.\n\n31\n00:01:22.660 --> 00:01:24.060\nAnd then I have Mac.\n\n32\n00:01:24.060 --> 00:01:28.320\nWell let's go ahead and\nstart in Mac, right?\n\n33\n00:01:28.320 --> 00:01:29.690\nHow do I get that up and going.\n\n34\n00:01:29.690 --> 00:01:35.750\nWell interestingly enough, I am going to\nopen up iTerm, or my terminal application.\n\n35\n00:01:35.750 --> 00:01:40.120\nIf you don't know where that is,\nthen Command+Space,\n\n36\n00:01:40.120 --> 00:01:43.540\nthat will actually open Spotlight\nin Mac and you just type terminal.\n\n37\n00:01:43.540 --> 00:01:48.010\nNow I'm using a replacement here\nbecause well, I like customization and\n\n38\n00:01:48.010 --> 00:01:49.550\nthat's just me.\n\n39\n00:01:49.550 --> 00:01:54.650\nWhat's interesting about Mac,\nwell Git is, it's already installed and\n\n40\n00:01:54.650 --> 00:01:58.660\njust to check we can say git --version,\nand it's typically installed.\n\n41\n00:01:58.660 --> 00:02:00.170\nNow here's the issue though.\n\n42\n00:02:01.270 --> 00:02:04.836\nYou may have an older version of\nGit on your Mac OS machine, right,\n\n43\n00:02:04.836 --> 00:02:08.670\ndepending on what OS you're using,\nwhat updates you've run.\n\n44\n00:02:08.670 --> 00:02:12.760\nSo how could I install this or\nupdate if I needed to?\n\n45\n00:02:12.760 --> 00:02:17.640\nSo let's go follow that story through and\nsee how that all works out.\n\n46\n00:02:17.640 --> 00:02:18.880\nI'm gonna open up Google Chrome.\n\n47\n00:02:18.880 --> 00:02:24.930\nAnd in Chrome I'm gonna say\ngit-scm.org if I'm not mistaken, yep.\n\n48\n00:02:24.930 --> 00:02:28.090\nSo this is the official Git website.\n\n49\n00:02:28.090 --> 00:02:32.390\nAnd on the website when you navigate\nto here, it will typically,\n\n50\n00:02:32.390 --> 00:02:35.070\nwell it'll say okay you're on Mac,\nyou need a download for Mac.\n\n51\n00:02:35.070 --> 00:02:37.320\nSo I'm gonna go ahead and click download.\n\n52\n00:02:37.320 --> 00:02:39.090\nAnd then the download will start.\n\n53\n00:02:39.090 --> 00:02:43.951\nSo, well that's going to take a little\nbit and sometimes it doesn't start.\n\n54\n00:02:43.951 --> 00:02:47.878\nI've had this issue before, so\nI'm gonna click here to download manually.\n\n55\n00:02:47.878 --> 00:02:51.500\nAnd well, here we go,\nwe're on SourceForge.\n\n56\n00:02:51.500 --> 00:02:53.020\nNow as we download this,\n\n57\n00:02:53.020 --> 00:02:56.180\nthe only reason I'm doing this is\nto make sure I have an update.\n\n58\n00:02:56.180 --> 00:03:00.880\nThere have been times where,\nGit has some security concerns,\n\n59\n00:03:00.880 --> 00:03:05.240\nlike someone can hijack your\nbehind the scenes .git files and\n\n60\n00:03:05.240 --> 00:03:08.340\ndo some kinda malicious things or\ntake over your computer.\n\n61\n00:03:08.340 --> 00:03:11.090\nSo there are definitely times\nwhere you wanna make sure you have\n\n62\n00:03:11.090 --> 00:03:12.790\nan up-to-date version.\n\n63\n00:03:12.790 --> 00:03:15.990\nAlso keep in mind that Git\nmay change how it works.\n\n64\n00:03:15.990 --> 00:03:20.385\nWe are always gonna be working in\nversion 2 dot something or higher.\n\n65\n00:03:20.385 --> 00:03:22.640\nSo, if you have below version 2,\n\n66\n00:03:22.640 --> 00:03:25.790\nwell you should definitely update\nbecause of security concerns.\n\n67\n00:03:25.790 --> 00:03:30.015\nBut you should also notice that\nsome of these default parameters,\n\n68\n00:03:30.015 --> 00:03:34.470\nthe false settings have changed\nat version 2 and onward.\n\n69\n00:03:34.470 --> 00:03:39.220\nSo, this is downloading, it is actually\nfairly, well it's not fairly large,\n\n70\n00:03:39.220 --> 00:03:41.680\nit's kind of large for what it is.\n\n71\n00:03:41.680 --> 00:03:45.390\nIn the series we're gonna be\ndealing with command line Git.\n\n72\n00:03:45.390 --> 00:03:47.930\nThere's a bunch of Git GUI clients, right?\n\n73\n00:03:47.930 --> 00:03:49.550\nGitHub provides one.\n\n74\n00:03:49.550 --> 00:03:50.660\nThere's Git Cracking.\n\n75\n00:03:50.660 --> 00:03:51.330\nGit Cola.\n\n76\n00:03:52.370 --> 00:03:55.610\nThere's- pretty much you can\nname something and it's there.\n\n77\n00:03:55.610 --> 00:03:58.740\nBut I'm gonna show you the basic\ncommands using command line.\n\n78\n00:03:58.740 --> 00:04:00.730\nSo we need to make sure those are up and\ngoing.\n\n79\n00:04:00.730 --> 00:04:04.708\nSo this is, if I open this up,\n\n80\n00:04:04.708 --> 00:04:08.378\nthis is git 2.10.1.\n\n81\n00:04:08.378 --> 00:04:12.332\nWell if I go I have git 2.11.\n\n82\n00:04:12.332 --> 00:04:15.890\nWell that's the Mac one,\nlet's just see what happens.\n\n83\n00:04:15.890 --> 00:04:17.080\nNow I may go back and\n\n84\n00:04:17.080 --> 00:04:21.220\nuninstall this just to take you\nthrough the installation process.\n\n85\n00:04:21.220 --> 00:04:23.960\nA lot of times on Mac it'll say hey,\n\n86\n00:04:23.960 --> 00:04:26.970\nyou've opened this from\nan unidentified developer.\n\n87\n00:04:28.010 --> 00:04:31.920\nWell this is a huge what am I gonna do?\n\n88\n00:04:31.920 --> 00:04:32.950\nI'm in trouble.\n\n89\n00:04:32.950 --> 00:04:37.850\nWell I'm gonna say OK, and\nthen I'm gonna hold Control and click and\n\n90\n00:04:37.850 --> 00:04:39.190\njust click Open.\n\n91\n00:04:39.190 --> 00:04:43.080\nAnd then, I'm going to get a second box\nthat says exactly the same thing, but\n\n92\n00:04:43.080 --> 00:04:46.770\nnow I have the option of going ahead and\nopening it.\n\n93\n00:04:46.770 --> 00:04:53.530\nSo once I have that opened, I get this,\nwell, this installer wizard flow.\n\n94\n00:04:53.530 --> 00:04:58.359\nSo I'm gonna Continue and Install, and\nthen it's gonna ask me for my password.\n\n95\n00:05:00.150 --> 00:05:05.140\nAnd now that I installed that, well it's\ngonna go through, install the packages.\n\n96\n00:05:05.140 --> 00:05:08.150\nAnd well,\nwe have Git installed on our Mac.\n\n97\n00:05:08.150 --> 00:05:09.490\nAnd if you have older versions,\n\n98\n00:05:09.490 --> 00:05:12.680\nyou should definitely go through this and\nmake an update.\n\n99\n00:05:12.680 --> 00:05:17.630\nNow I'm not going to, well, I like how it\nsays do you wanna move to the trash now?\n\n100\n00:05:17.630 --> 00:05:20.110\nI do.\nI have no further use for this.\n\n101\n00:05:21.460 --> 00:05:23.316\nSo, let's go and check this out.\n\n102\n00:05:23.316 --> 00:05:26.110\nSo, git --version, and\n\n103\n00:05:26.110 --> 00:05:30.400\nwell it didn't actually change anything\nbecause I already had a newer version.\n\n104\n00:05:30.400 --> 00:05:34.600\nBut you should go through that and\nmake sure you have the newest version.\n\n105\n00:05:34.600 --> 00:05:40.070\nYou may also need to do a restart, I'm not\ngonna do that here just because of well,\n\n106\n00:05:40.070 --> 00:05:42.670\nthat would be really boring to watch,\nright?\n\n107\n00:05:42.670 --> 00:05:45.590\nWell, we're just gonna sit here and\nwatch my computer restart and\n\n108\n00:05:45.590 --> 00:05:47.020\nthen hopefully it all works.\n\n109\n00:05:47.020 --> 00:05:50.530\nSo that's the installation story for\nMac OS.\n\n110\n00:05:50.530 --> 00:05:51.900\nNow, what about Linux?\n\n111\n00:05:51.900 --> 00:05:56.360\nI'm skipping to Linux because\nit's fairly easy as well,\n\n112\n00:05:56.360 --> 00:05:58.910\nand I'm gonna save,\nwell the best for last.\n\n113\n00:05:58.910 --> 00:05:59.510\nAnd that's Windows.\n\n114\n00:05:59.510 --> 00:06:00.760\nSo I'm gonna hop over, and\n\n115\n00:06:00.760 --> 00:06:05.710\nI'm running virtual machines\nwith these respective OS's here.\n\n116\n00:06:05.710 --> 00:06:07.490\nSo I'm gonna log in to my Linux box.\n\n117\n00:06:07.490 --> 00:06:11.690\nNow this is Ubuntu, I run a customized\nversion, I'm kind of nerdy so\n\n118\n00:06:11.690 --> 00:06:12.870\nplease excuse me.\n\n119\n00:06:12.870 --> 00:06:15.187\nI promise it's a standard Ubuntu version.\n\n120\n00:06:15.187 --> 00:06:19.237\nIt's 16.10 instead of 16.04.\n\n121\n00:06:19.237 --> 00:06:21.450\nAnd I'm gonna open a terminal.\n\n122\n00:06:21.450 --> 00:06:25.695\nNow I use the keyboard shortcut but,\nif you want to know,\n\n123\n00:06:25.695 --> 00:06:29.690\nyou can click the little finder,\nlook for terminal.\n\n124\n00:06:29.690 --> 00:06:34.933\nNow, if you're on a different Linux\ninstall, this might be called console,\n\n125\n00:06:34.933 --> 00:06:38.358\nterminal, terminal emulator,\nxterm emulator.\n\n126\n00:06:38.358 --> 00:06:39.649\nSometimes they have weird names.\n\n127\n00:06:39.649 --> 00:06:43.810\nNow xterm and some of those are a little\nbit different, so you need to make sure\n\n128\n00:06:43.810 --> 00:06:48.180\nyou have a prompt like such and typically\nyou're going to have a bash prompt.\n\n129\n00:06:48.180 --> 00:06:52.117\nI run an alternative shell\nin my Linux distro, so\n\n130\n00:06:52.117 --> 00:06:55.582\nI have this nice little pretty tilde here.\n\n131\n00:06:55.582 --> 00:07:01.210\nBut if you don't, well you should have\nlike your username and where you are.\n\n132\n00:07:01.210 --> 00:07:03.570\nSo you'll have typically your username and\nthe tilde.\n\n133\n00:07:03.570 --> 00:07:04.900\nSo you're good to go.\n\n134\n00:07:04.900 --> 00:07:08.330\nOkay, so how do I install Git?\n\n135\n00:07:09.560 --> 00:07:10.820\nAnd just to zoom here in here.\n\n136\n00:07:10.820 --> 00:07:12.920\nI'm gonna come over here.\n\n137\n00:07:14.610 --> 00:07:19.122\nWell, I need to sudo apt-get,\napt -get not apt-git,\n\n138\n00:07:19.122 --> 00:07:22.270\nwhoa, it's gonna be a bit confusing.\n\n139\n00:07:22.270 --> 00:07:26.950\nNow this is aptitude for\nDebian-based distributions.\n\n140\n00:07:26.950 --> 00:07:31.190\nIf you're on a Redhat based or\nFedora, it maybe yum, or DNF.\n\n141\n00:07:31.190 --> 00:07:35.841\nAnd then install git, apt-get install git.\n\n142\n00:07:35.841 --> 00:07:37.560\nAnd then it's gonna say are you sure?\n\n143\n00:07:38.760 --> 00:07:42.180\nYep, and if I zoom out, well,\n\n144\n00:07:42.180 --> 00:07:46.120\nI'm installing Git now, and\nwe'll be up and running very shortly.\n\n145\n00:07:46.120 --> 00:07:47.360\nWell, there we go.\n\n146\n00:07:47.360 --> 00:07:50.810\nThe Linux install story is again,\nvery simple.\n\n147\n00:07:50.810 --> 00:07:53.583\nAnd let's just test\nthat out git --version.\n\n148\n00:07:53.583 --> 00:07:58.334\nNow notice this version is\nnot as high of a version as\n\n149\n00:07:58.334 --> 00:08:02.767\nwhat I have on Mac OS,\nmy standard Mac install.\n\n150\n00:08:02.767 --> 00:08:08.550\nThat's because of my Git has been,\nthat is gonna get me.\n\n151\n00:08:08.550 --> 00:08:11.830\nThat is going to get me.\n\n152\n00:08:11.830 --> 00:08:14.207\nIt's not been updated in\nthe package management system.\n\n153\n00:08:14.207 --> 00:08:17.658\nSo Git version 2.7.4.\n\n154\n00:08:17.658 --> 00:08:21.879\nNow if I wanted to download\nthis from git-scm.org and\n\n155\n00:08:21.879 --> 00:08:25.470\nrun the installer,\nI definitely can do that.\n\n156\n00:08:27.030 --> 00:08:32.280\nSo if I go and let's just open Firefox\ninside here to show you, well hopefully.\n\n157\n00:08:32.280 --> 00:08:32.810\nThere we go.\n\n158\n00:08:34.610 --> 00:08:36.600\nSo I can git-scm.org.\n\n159\n00:08:36.600 --> 00:08:41.670\nAnd wait for it, wait for it, wait for it.\n\n160\n00:08:41.670 --> 00:08:46.030\nAnd there we go notice downloads for\nLinux and\n\n161\n00:08:46.030 --> 00:08:50.580\nI do have a more up to date version right?\n\n162\n00:08:50.580 --> 00:08:53.710\nSo I can use the package manager or\nI could go ahead and\n\n163\n00:08:53.710 --> 00:08:57.120\ndownload, downloads for Linux.\n\n164\n00:08:57.120 --> 00:09:00.320\nBut it's funny cuz it tells\nme app get install get.\n\n165\n00:09:00.320 --> 00:09:03.030\nSo it's going to keep this up to date.\n\n166\n00:09:03.030 --> 00:09:05.636\nAssuming there's no security issue.\n\n167\n00:09:05.636 --> 00:09:10.544\nSo, 2.7, think 2.7.2 had an issue\nthat they updated to 2.7.4.\n\n168\n00:09:10.544 --> 00:09:18.190\nIf I have to have the absolute most up\nto date one, you can, let's see here.\n\n169\n00:09:18.190 --> 00:09:22.530\nThere we go, you can look at\nadditional install instructions\n\n170\n00:09:22.530 --> 00:09:24.880\neither through the Git documentation or\n\n171\n00:09:24.880 --> 00:09:29.830\nyou can find tarballs on kernel.org to\nwhere you can build it from source.\n\n172\n00:09:29.830 --> 00:09:32.550\nNow, that's maybe an advanced user thing.\n\n173\n00:09:32.550 --> 00:09:33.900\n&gt;&gt; Now, Justin, a question.\n\n174\n00:09:33.900 --> 00:09:35.680\nI noticed on the Mac version,\n\n175\n00:09:35.680 --> 00:09:39.660\nit was a different version number\nobviously, different platforms there.\n\n176\n00:09:39.660 --> 00:09:43.070\nAre there any issues though if I'm\non a Mac and you're on Linux and\n\n177\n00:09:43.070 --> 00:09:46.840\nrunning different versions of Git and\nwe're both working in the same repo?\n\n178\n00:09:46.840 --> 00:09:48.740\n&gt;&gt; So that's actually a great question.\n\n179\n00:09:48.740 --> 00:09:52.770\nNow I'm gonna tell you\nmy kind of experience.\n\n180\n00:09:52.770 --> 00:09:56.310\nAs long as we have\nversion 2 dot something.\n\n181\n00:09:56.310 --> 00:09:59.420\nThe commands will be very similar and\nkind of how it's processed.\n\n182\n00:09:59.420 --> 00:10:04.740\nI have not personally run into any\nissues or have read about any issues\n\n183\n00:10:04.740 --> 00:10:09.830\nabout version mismatch, especially minor\nversions like this and having a clash.\n\n184\n00:10:09.830 --> 00:10:13.320\nThe reason I say that is because it's\nused to manage such a large codebase,\n\n185\n00:10:13.320 --> 00:10:15.960\nit's actually used in\nmanaging the Linux codebase,\n\n186\n00:10:15.960 --> 00:10:18.270\nas I've touched on in a previous episode.\n\n187\n00:10:18.270 --> 00:10:23.220\nWell there's no way to enforce that\neverybody has exactly the same version,\n\n188\n00:10:23.220 --> 00:10:25.600\nsame platform, that's not the goal.\n\n189\n00:10:25.600 --> 00:10:27.700\nIt should be as universal as possible.\n\n190\n00:10:27.700 --> 00:10:31.380\nSo I haven't seen any issues and really\nthe only thing they're doing is making bug\n\n191\n00:10:31.380 --> 00:10:35.550\nfixes, making it faster,\ndoing some improvements here and there.\n\n192\n00:10:35.550 --> 00:10:39.860\nSo I haven't run into any issues, but\nkeep in mind your mileage may vary.\n\n193\n00:10:39.860 --> 00:10:43.800\n&gt;&gt; Sounds good.\nSo Linux and Mac seemed pretty easy there.\n\n194\n00:10:43.800 --> 00:10:45.090\nAre we done with the Linux one?\n\n195\n00:10:45.090 --> 00:10:45.600\n&gt;&gt; We're done.\n\n196\n00:10:45.600 --> 00:10:46.190\n&gt;&gt; Awesome.\n\n197\n00:10:46.190 --> 00:10:50.680\nSo you said the Windows one has a few\nmore hurdles to get over there, so\n\n198\n00:10:50.680 --> 00:10:51.500\ncan you show us that?\n\n199\n00:10:51.500 --> 00:10:54.030\n&gt;&gt; See you're using Git again, git over.\n\n200\n00:10:54.030 --> 00:10:56.750\nSee, you didn't even know it,\ndidn't even know it.\n\n201\n00:10:56.750 --> 00:11:00.480\nSo let's go ahead and take a look\nat the Windows installation story.\n\n202\n00:11:00.480 --> 00:11:03.070\nAnd well, I'm gonna hop into Edge here and\n\n203\n00:11:03.070 --> 00:11:07.090\ncan you guess Peter where we're going\nto find our installation for Git?\n\n204\n00:11:08.680 --> 00:11:10.400\n&gt;&gt; Git something?\n\n205\n00:11:10.400 --> 00:11:15.130\n&gt;&gt; We're going to Git something, he's\nbeen listening that's what's important.\n\n206\n00:11:15.130 --> 00:11:19.134\nSo I'm gonna go to Git, actually I'm\ngonna go to the address bar here,\n\n207\n00:11:19.134 --> 00:11:24.225\ngit-scm.org exactly the same\nplace that we went for\n\n208\n00:11:24.225 --> 00:11:28.840\nboth Mac OS and Linux and\nwell I'm gonna hit enter.\n\n209\n00:11:28.840 --> 00:11:34.470\nI should've figured out a way keep ads\noff of that page, but that's alright.\n\n210\n00:11:34.470 --> 00:11:39.510\nSo if I download for Windows, well it will\nsay your download is beginning to start.\n\n211\n00:11:40.550 --> 00:11:42.710\nAnd it was released six days ago.\n\n212\n00:11:42.710 --> 00:11:45.120\nNow it asked me, do I wanna save or save?\n\n213\n00:11:45.120 --> 00:11:49.050\nI'm gonna go ahead and save, and\njust let it run, do its thing.\n\n214\n00:11:49.050 --> 00:11:53.930\nAnd it's again, not small,\nbut it's not huge either.\n\n215\n00:11:53.930 --> 00:11:57.310\nAnd then I'm just going to actually\nrun the installer package.\n\n216\n00:11:57.310 --> 00:12:01.830\nI'm gonna, well I was gonna minimize that\nbut it went ahead and asked me a question.\n\n217\n00:12:01.830 --> 00:12:03.454\nDo you want this device to allow or\n\n218\n00:12:03.454 --> 00:12:06.354\ndo you want to allow this app\nto make changes to your device?\n\n219\n00:12:06.354 --> 00:12:09.241\nWell you have to hit yes or\nyou have to give it elevated privileges.\n\n220\n00:12:09.241 --> 00:12:14.310\nWhen we type sudo for Linux and well,\nMac ask us to type in our password,\n\n221\n00:12:14.310 --> 00:12:20.160\nwe're doing exactly the same thing but\non Windows it's just a little bit easier.\n\n222\n00:12:20.160 --> 00:12:23.200\nSo I'm gonna try to zoom in here and\nstay on pace.\n\n223\n00:12:23.200 --> 00:12:26.280\nSo we get this open source\nlicensing agreement.\n\n224\n00:12:26.280 --> 00:12:28.640\nWhere do you wanna install it I\njust leave it at the default.\n\n225\n00:12:30.300 --> 00:12:33.050\nAnd then it hits next, and\nthen what do you want to install?\n\n226\n00:12:33.050 --> 00:12:37.350\nNow here's where, man there's\njust too much to keep track of.\n\n227\n00:12:37.350 --> 00:12:39.170\nDo you want additional\nicons on the desktop?\n\n228\n00:12:39.170 --> 00:12:44.700\nIf you're unfamiliar with kind of these\nterminal environments in Windows but\n\n229\n00:12:44.700 --> 00:12:48.800\nyou wanna try out Git,\nI would recommend checking those and\n\n230\n00:12:48.800 --> 00:12:51.780\nwhatever you install will actually\nhave shortcuts on the desktop\n\n231\n00:12:51.780 --> 00:12:53.450\nparticularly if you check this box.\n\n232\n00:12:53.450 --> 00:12:56.770\nAnd then it says\nWindows Explorer integration.\n\n233\n00:12:58.730 --> 00:13:01.120\nI have Git Bash and Git GUI.\n\n234\n00:13:01.120 --> 00:13:03.960\nOkay, well when you install Git for\n\n235\n00:13:03.960 --> 00:13:09.680\nWindows, you get a couple of\ndifferent installation environments.\n\n236\n00:13:09.680 --> 00:13:14.250\nGit GUI is a GUI interface,\nlike a point and click interface for\n\n237\n00:13:14.250 --> 00:13:20.100\nmanaging your Git repos or your Git\nversion controlled projects locally.\n\n238\n00:13:20.100 --> 00:13:24.470\nWell, we're not gonna cover that here,\nI want very basic foundations.\n\n239\n00:13:24.470 --> 00:13:25.980\nAnd then it asks Git Bash.\n\n240\n00:13:25.980 --> 00:13:27.350\nWell, what is Git Bash?\n\n241\n00:13:28.950 --> 00:13:32.510\nWith Git, you get two installation\ntypes for the command line,\n\n242\n00:13:32.510 --> 00:13:37.110\nfor like your terminator console,\nthe Git Bash and the Git CMD.\n\n243\n00:13:37.110 --> 00:13:39.285\nIn Windows you have command prompt.\n\n244\n00:13:39.285 --> 00:13:42.571\nIt does not translate over from Linux,\nright?\n\n245\n00:13:42.571 --> 00:13:46.220\nHaving all those Linux bash type commands.\n\n246\n00:13:46.220 --> 00:13:51.060\nSo they also package Git Bash\nwhich is a bash emulator.\n\n247\n00:13:51.060 --> 00:13:55.230\nSo now you kinda get some of that Linux,\nkind of that Linux,\n\n248\n00:13:55.230 --> 00:13:56.410\nI like to say goodness.\n\n249\n00:13:56.410 --> 00:13:59.080\nIt's definitely opinionated there.\n\n250\n00:13:59.080 --> 00:14:03.390\nOn Windows, so I can ls,\nI can touch, I can make dir, and\n\n251\n00:14:03.390 --> 00:14:04.960\nall of the Git commands are there.\n\n252\n00:14:04.960 --> 00:14:08.980\nWhat that does mean though is you\nhave to open a very specific program\n\n253\n00:14:08.980 --> 00:14:11.390\nin order to interface with your Git repos.\n\n254\n00:14:11.390 --> 00:14:13.030\nBut I would keep that there.\n\n255\n00:14:13.030 --> 00:14:16.750\nAnd then do you want to install\nGit Large File System Support, or\n\n256\n00:14:16.750 --> 00:14:18.110\nLarge File Support?\n\n257\n00:14:18.110 --> 00:14:18.660\n&gt;&gt; Sure.\n\n258\n00:14:18.660 --> 00:14:20.150\n&gt;&gt; Sure, why not, right?\n\n259\n00:14:20.150 --> 00:14:21.120\nWhat's it gonna hurt.\n\n260\n00:14:21.120 --> 00:14:23.000\nAnd what is this going to do?\n\n261\n00:14:23.000 --> 00:14:28.070\nWell, interestingly enough, there are Git\nservices that are used for photos,\n\n262\n00:14:28.070 --> 00:14:32.160\nvideos, very large files that\nexceed a standard limitation.\n\n263\n00:14:32.160 --> 00:14:34.280\nAnd that's the large file support.\n\n264\n00:14:34.280 --> 00:14:38.473\nAnd then do you want to set up these\nassociations, .git configuration files?\n\n265\n00:14:38.473 --> 00:14:42.550\nYes, and\nthen .SH well those are gonna run in bash.\n\n266\n00:14:42.550 --> 00:14:46.330\nIn Windows you don't have\nany other way to run those,\n\n267\n00:14:46.330 --> 00:14:50.955\nyou can look at them, but\nyou have .batch or .bat files for CMD.\n\n268\n00:14:50.955 --> 00:14:53.552\nAnd then I think there's\nPowerShell script, don't.\n\n269\n00:14:53.552 --> 00:14:57.039\nI'm not a Windows expert Peter so\nwe'll just leave it at that.\n\n270\n00:14:57.039 --> 00:15:00.408\nAnd then do you wanna use TrueType font,\nthat's completely up you, why not?\n\n271\n00:15:00.408 --> 00:15:02.600\nI'm just gonna run the game up here.\n\n272\n00:15:02.600 --> 00:15:07.675\nSo if I get outta here, and\nI just wanna say I wanna create.\n\n273\n00:15:07.675 --> 00:15:08.731\n&gt;&gt; Get out of here.\n\n274\n00:15:08.731 --> 00:15:09.584\n&gt;&gt; [LAUGH] Yeah, man.\n\n275\n00:15:09.584 --> 00:15:13.160\nIt's gonna get us,\nit's gonna get us every time.\n\n276\n00:15:13.160 --> 00:15:15.130\n&gt;&gt; [LAUGH]\n&gt;&gt; What do you wanna name it?\n\n277\n00:15:15.130 --> 00:15:18.830\nI'm just gonna leave it, and\nthen I could say don't make a Start Menu.\n\n278\n00:15:18.830 --> 00:15:20.710\nI don't click this.\n\n279\n00:15:20.710 --> 00:15:23.110\nYou should let it be in the Start menu.\n\n280\n00:15:23.110 --> 00:15:26.490\nAnd then Next, and\nhere's our other options.\n\n281\n00:15:26.490 --> 00:15:31.630\nOkay, the question is,\ndo you want to use Git from Git Bash only?\n\n282\n00:15:31.630 --> 00:15:34.030\nDo you want to use Git\nfrom the Command Prompt?\n\n283\n00:15:34.030 --> 00:15:36.070\nRight, that's Windows CMD.\n\n284\n00:15:36.070 --> 00:15:40.620\nIt is considered safe as it adds some\nminimal Git wrappers to your path to avoid\n\n285\n00:15:40.620 --> 00:15:43.910\ncluttering your environment\nwith optional Unix tools.\n\n286\n00:15:43.910 --> 00:15:44.940\nLike ls, touch.\n\n287\n00:15:46.160 --> 00:15:49.660\nAnd then use Git and optional Linux\ntools from Windows Command Prompt.\n\n288\n00:15:49.660 --> 00:15:54.286\nThis will actually override some\nstandard Windows utilities.\n\n289\n00:15:54.286 --> 00:15:55.075\n&gt;&gt; That's pretty frightening.\n\n290\n00:15:55.075 --> 00:15:55.845\n&gt;&gt; Yeah.\n&gt;&gt; When you see\n\n291\n00:15:55.845 --> 00:15:56.608\nsomething in red like that.\n\n292\n00:15:56.608 --> 00:15:58.210\n&gt;&gt; Yeah, I would agree, Peter.\n\n293\n00:15:58.210 --> 00:16:00.195\nWhen I see things, I'm just like.\n\n294\n00:16:00.195 --> 00:16:01.821\nDon't click that one.\n\n295\n00:16:01.821 --> 00:16:06.110\nBecause I'm used to Linux environments,\nwhat I do for\n\n296\n00:16:06.110 --> 00:16:10.600\nWindows is I actually use Git\nfrom Git Bash only, right?\n\n297\n00:16:10.600 --> 00:16:12.835\nI don't install the Git\ntools in Command Prompt,\n\n298\n00:16:12.835 --> 00:16:15.450\nbecause I don't use command\nprompt a great deal.\n\n299\n00:16:15.450 --> 00:16:18.440\nI use Bash Linux type of commands.\n\n300\n00:16:18.440 --> 00:16:20.550\nSo that's what I would do.\n\n301\n00:16:20.550 --> 00:16:23.240\nDefinitely choose something\nthat best fits you.\n\n302\n00:16:23.240 --> 00:16:26.250\nOkay, well, I like to use Command Prompt.\n\n303\n00:16:26.250 --> 00:16:28.279\nThen click Command Prompt, that's great.\n\n304\n00:16:28.279 --> 00:16:32.399\nAnd then I'm gonna click Next,\nand then OpenSSL Library.\n\n305\n00:16:32.399 --> 00:16:35.699\nSure, I'm gonna be completely\nhonest with you, Peter.\n\n306\n00:16:35.699 --> 00:16:37.901\nI kind of just lean on\nthe keyboard from here on out.\n\n307\n00:16:37.901 --> 00:16:39.086\n&gt;&gt; [LAUGH]\n&gt;&gt; And\n\n308\n00:16:39.086 --> 00:16:43.160\nthen check out Windows style\ncommit Unix style line, okay.\n\n309\n00:16:43.160 --> 00:16:44.600\nThis is one that I don't wanna talk about.\n\n310\n00:16:45.660 --> 00:16:50.630\nThe way the end of line and the end of\nfile characters are represented in Unix\n\n311\n00:16:50.630 --> 00:16:53.190\nversus Windows can differ a little bit.\n\n312\n00:16:53.190 --> 00:16:58.960\nAnd well, you may get some\nweird messages about converting\n\n313\n00:16:58.960 --> 00:17:02.720\nLF to CRLF when checking out text files.\n\n314\n00:17:02.720 --> 00:17:07.900\nWell, that's okay, if I haven't really\nhad any issues with it causing problems.\n\n315\n00:17:07.900 --> 00:17:10.250\nYou will get a little printout\nthat just says warning, and\n\n316\n00:17:10.250 --> 00:17:14.710\nthat's because the internal representation\nof text files, well, they're changing.\n\n317\n00:17:14.710 --> 00:17:18.685\nSo you could just do as-is and\ncommit Unix style line endings or\n\n318\n00:17:18.685 --> 00:17:21.010\ncheckout as-is and commit as-is.\n\n319\n00:17:21.010 --> 00:17:23.830\nSo checkout Windows style,\ncommit Unix style.\n\n320\n00:17:23.830 --> 00:17:25.930\nSo make a conversion, right?\n\n321\n00:17:25.930 --> 00:17:29.630\nIf you're looking at a Windows made file,\nconvert them on commit or\n\n322\n00:17:29.630 --> 00:17:34.710\non save in your Git repo\nto Unix style line endings.\n\n323\n00:17:34.710 --> 00:17:36.470\nCheck out as-is, right?\n\n324\n00:17:36.470 --> 00:17:40.120\nWhatever they are,\nwhether they be Unix or Windows.\n\n325\n00:17:40.120 --> 00:17:42.160\nAnd then commit Unix style, right?\n\n326\n00:17:42.160 --> 00:17:45.280\nAgain make a conversion\nregardless of what it was.\n\n327\n00:17:45.280 --> 00:17:50.370\nOr the last one is check out as-is and\ncommit as-is, make no changes.\n\n328\n00:17:50.370 --> 00:17:54.610\nChoosing this option is not recommended\nfor cross-platform projects.\n\n329\n00:17:54.610 --> 00:17:57.530\nI typically stay away from that one.\n\n330\n00:17:57.530 --> 00:18:01.340\nFor cross-platform projects,\nthis is the recommended setting on Unix.\n\n331\n00:18:02.400 --> 00:18:06.740\nFor cross-platform projects, this is\nthe recommended setting on Windows.\n\n332\n00:18:06.740 --> 00:18:09.720\nSo I'm going to go with this\none because it's recommended.\n\n333\n00:18:09.720 --> 00:18:14.730\nI use a variety of operating systems,\nso that's what I'm gonna use.\n\n334\n00:18:14.730 --> 00:18:19.850\nSo hit Next and then TTY,\nwe'll actually see this in just a moment.\n\n335\n00:18:21.910 --> 00:18:26.790\nAnd then enable file system caching,\nenable Git credential manager.\n\n336\n00:18:26.790 --> 00:18:33.450\nYou definitely want this because when we\nstart needing some kind of credentially.\n\n337\n00:18:33.450 --> 00:18:38.220\nI wanna back up, Peter, and try to say\nthat some way to manage credentials.\n\n338\n00:18:38.220 --> 00:18:41.798\nThis makes it a little easier\nthan just typing it in.\n\n339\n00:18:41.798 --> 00:18:43.042\nYou can save these and\n\n340\n00:18:43.042 --> 00:18:46.990\nit makes it a little nicer when\nyou try to do a push or a sync.\n\n341\n00:18:46.990 --> 00:18:48.520\nAnd then enable symbolic links.\n\n342\n00:18:48.520 --> 00:18:50.440\nI typically just leave this unchecked.\n\n343\n00:18:50.440 --> 00:18:52.050\nI leave these on the defaults.\n\n344\n00:18:52.050 --> 00:18:53.540\nAnd then I click Install.\n\n345\n00:18:53.540 --> 00:18:57.060\nNow as this is installing,\nwhat's gonna happen is on the Windows,\n\n346\n00:18:57.060 --> 00:19:00.724\nwe're gonna get new tools that\nweren't necessarily there, right?\n\n347\n00:19:00.724 --> 00:19:03.626\nI had CMD, and if I bring this up, and\n\n348\n00:19:03.626 --> 00:19:09.450\nI type CMD, well,\nthere's my Command Prompt, right there.\n\n349\n00:19:09.450 --> 00:19:11.100\nAnd I'm gonna open that\nup just to show you.\n\n350\n00:19:12.120 --> 00:19:13.050\nThis is what it looks like.\n\n351\n00:19:14.690 --> 00:19:16.540\nI can't do any of the Linux type stuff.\n\n352\n00:19:16.540 --> 00:19:17.670\nYou may have seen this before.\n\n353\n00:19:17.670 --> 00:19:19.960\nSometimes it will flash\nduring installs and things.\n\n354\n00:19:21.040 --> 00:19:23.995\nI don't use this when I'm\nusing Git on Windows.\n\n355\n00:19:23.995 --> 00:19:25.135\nI don't need it.\n\n356\n00:19:25.135 --> 00:19:26.208\nI don't have a use for it.\n\n357\n00:19:26.208 --> 00:19:29.587\nI use Unix style commands.\n\n358\n00:19:29.587 --> 00:19:32.814\nSo I use the Git Bash.\n\n359\n00:19:32.814 --> 00:19:35.330\nNow you may also use PowerShell.\n\n360\n00:19:35.330 --> 00:19:37.857\nAgain, I typically stay away from those,\n\n361\n00:19:37.857 --> 00:19:41.470\nbut definitely pick something\nthat works for you.\n\n362\n00:19:41.470 --> 00:19:43.450\nSo we're waiting for this to install.\n\n363\n00:19:43.450 --> 00:19:48.020\nAnd this is a little bit lengthier of\nan install process, than well, we saw for\n\n364\n00:19:48.020 --> 00:19:51.880\nLinux and Mac, and well, that's\ninstalling a great deal more things.\n\n365\n00:19:51.880 --> 00:19:55.480\n&gt;&gt; And it sounds like we're also doing\nsome of the configuration as well.\n\n366\n00:19:55.480 --> 00:20:00.430\nI imagine, once we open Git in Linux and\n\n367\n00:20:00.430 --> 00:20:03.140\nin Mac, we're gonna need to do\nsome configuration there as well?\n\n368\n00:20:03.140 --> 00:20:06.110\n&gt;&gt; Yes, yes, you are on top of it, Peter.\n\n369\n00:20:06.110 --> 00:20:07.707\nWell, it's almost like you're in my mind.\n\n370\n00:20:07.707 --> 00:20:10.300\nIt's kinda freaking me out a little bit,\nbut that's okay.\n\n371\n00:20:10.300 --> 00:20:13.880\nWe'll roll with the punches,\nand now we're installed.\n\n372\n00:20:13.880 --> 00:20:16.839\nNow there's a couple options for\nthis last Finish screen.\n\n373\n00:20:16.839 --> 00:20:18.500\nYou can launch Git Bash.\n\n374\n00:20:18.500 --> 00:20:20.636\nAnd you're gonna review release notes.\n\n375\n00:20:20.636 --> 00:20:24.538\nWell, you should probably read these, but\nI've looked at these a couple of times, so\n\n376\n00:20:24.538 --> 00:20:26.190\nI'm gonna uncheck it.\n\n377\n00:20:26.190 --> 00:20:29.880\nBut I am going to launch Git Bash, because\nthis will make sure it comes up and\n\n378\n00:20:29.880 --> 00:20:32.770\nstarts up initially the first time.\n\n379\n00:20:32.770 --> 00:20:36.310\nSo initially the first time, that's from\nthe department of redundancy department.\n\n380\n00:20:37.520 --> 00:20:44.049\nSo I'm gonna close out of Edge and\nhere, well, what do we have?\n\n381\n00:20:44.049 --> 00:20:49.381\nDoesn't that look a great deal like\nthe Command Prompt thing that I just had?\n\n382\n00:20:49.381 --> 00:20:55.472\nExcept I have access to all kinds\nof Linux style commands like ls,\n\n383\n00:20:55.472 --> 00:20:58.280\ntouch, make directory.\n\n384\n00:20:58.280 --> 00:21:01.050\nSo if you've been in the Linux\nenvironment, a lot of those work.\n\n385\n00:21:01.050 --> 00:21:10.380\nNow you don't get advanced level things\ninside of MINGW or I call in mingwin.\n\n386\n00:21:10.380 --> 00:21:14.530\nThis is a Linux emulator\nthat sits on top of Windows\n\n387\n00:21:14.530 --> 00:21:16.830\nthat allows us to interface with this.\n\n388\n00:21:16.830 --> 00:21:19.235\nWell, the question is, is Git installed?\n\n389\n00:21:19.235 --> 00:21:26.580\nGit -- version and there it is,\nversion 2.12.2 on Windows.\n\n390\n00:21:26.580 --> 00:21:28.420\nAnd then like this tiny\nlittle 2 out there.\n\n391\n00:21:28.420 --> 00:21:32.530\nI'm not really sure what that's for,\nbecause all the major, minor, and\n\n392\n00:21:32.530 --> 00:21:34.420\npatch versions are right there.\n\n393\n00:21:34.420 --> 00:21:35.870\nNow Peter, you brought up a great point.\n\n394\n00:21:35.870 --> 00:21:38.300\nI need to make some configuration, right?\n\n395\n00:21:38.300 --> 00:21:41.190\nWell, I'm gonna jump out of\nWindows in order to do that and\n\n396\n00:21:41.190 --> 00:21:42.950\njust hang out on the Mac side.\n\n397\n00:21:42.950 --> 00:21:46.250\nBecause I can zoom in a little easier,\nmake sure it's a little clearer.\n\n398\n00:21:46.250 --> 00:21:51.250\nBut those are the installation stories for\nMac OS, Linux, and Windows.\n\n399\n00:21:51.250 --> 00:21:55.410\nOnce you're to this point,\nyou pretty much uniformly\n\n400\n00:21:56.470 --> 00:21:59.610\nhave access to Git and the Git toolchain.\n\n401\n00:21:59.610 --> 00:22:02.080\nNow how do I make that configuration?\n\n402\n00:22:02.080 --> 00:22:04.440\nThere's a couple of places\nthat I can configure.\n\n403\n00:22:04.440 --> 00:22:11.880\nI can configure system wide,\nwhich is stored in etsy/gitconfig.\n\n404\n00:22:11.880 --> 00:22:14.630\nI don't typically mess with that one,\nunless you're an advanced user.\n\n405\n00:22:14.630 --> 00:22:16.630\nWe're just gonna leave that alone.\n\n406\n00:22:16.630 --> 00:22:19.100\nIt will also store it\nin your home directory.\n\n407\n00:22:19.100 --> 00:22:21.850\nAnd well, when you install Git and\n\n408\n00:22:21.850 --> 00:22:27.020\nyou start using Git,\nthen in your home directory which is,\n\n409\n00:22:27.020 --> 00:22:32.120\nwell, in tilde or in Git Bash, it's the\nfirst place that you open up in Git Bash.\n\n410\n00:22:32.120 --> 00:22:36.760\nIf you type ls-la,\nit will list out all of this stuff.\n\n411\n00:22:36.760 --> 00:22:41.546\nAnd typically you don't see this,\nbut if I scroll up here,\n\n412\n00:22:41.546 --> 00:22:45.110\nwell, see this gitconfig file right here?\n\n413\n00:22:46.290 --> 00:22:49.510\nRight there, [SOUND] this is right there.\n\n414\n00:22:49.510 --> 00:22:52.320\nSo .gitconfig, it's hidden away from you.\n\n415\n00:22:52.320 --> 00:22:55.530\nAnd the reason it's hidden away\nis you shouldn't make any changes\n\n416\n00:22:55.530 --> 00:22:56.700\nunless you have to.\n\n417\n00:22:56.700 --> 00:23:00.620\nNow there's actually tools integrated\nin the Git command line tools\n\n418\n00:23:00.620 --> 00:23:03.570\nthat will make those changes for you,\nand we're getting ready to do that.\n\n419\n00:23:03.570 --> 00:23:09.725\nAnd lastly we can configure this on\na per repo or a per project basis.\n\n420\n00:23:09.725 --> 00:23:14.540\nAnd if you're just starting out, I don't\nrecommend that because you'll forget.\n\n421\n00:23:14.540 --> 00:23:19.180\nI forget, and then you start\npushing things to repositories,\n\n422\n00:23:19.180 --> 00:23:22.980\ninto accounts that you didn't mean to,\nand it's all messed up.\n\n423\n00:23:22.980 --> 00:23:25.630\nAll right, so let's take a look\nat what's in this .gitconfig.\n\n424\n00:23:25.630 --> 00:23:29.100\nNow, full disclosure here,\nI've done some configuration before.\n\n425\n00:23:29.100 --> 00:23:31.130\nYou may not see this file, but\n\n426\n00:23:31.130 --> 00:23:36.430\nas we kind of build these configurations,\nthis file will appear.\n\n427\n00:23:36.430 --> 00:23:40.520\nIf you do see it,\nlet's see what you might see in here.\n\n428\n00:23:40.520 --> 00:23:44.910\nSo I'm just using Vim which is\na terminal based text editor.\n\n429\n00:23:44.910 --> 00:23:48.230\nYou can open this in any text\neditor as long as you can find it.\n\n430\n00:23:48.230 --> 00:23:51.700\nIt does take a little work to\nfind hidden files like this.\n\n431\n00:23:51.700 --> 00:23:54.700\nSo this is a Git's per\nuser configuration file.\n\n432\n00:23:54.700 --> 00:23:55.497\nThere's nothing in here.\n\n433\n00:23:55.497 --> 00:23:59.036\nWell, I've cleared it out because,\nwell, we need to configure this and\n\n434\n00:23:59.036 --> 00:24:01.221\nyou wouldn't have this on initial install.\n\n435\n00:24:01.221 --> 00:24:04.124\nOkay, so let's get rid of that.\n\n436\n00:24:04.124 --> 00:24:07.250\nAnd, well, how do we configure?\n\n437\n00:24:07.250 --> 00:24:11.220\nThere are now a few commands\nthat we have run using Git in\n\n438\n00:24:11.220 --> 00:24:12.620\norder to make this configuration.\n\n439\n00:24:12.620 --> 00:24:17.055\nSo the first one is git config\n\n440\n00:24:17.055 --> 00:24:22.490\n--global because this is what's\ncalled the global configuration.\n\n441\n00:24:22.490 --> 00:24:24.700\nWell, this is because it's\nbased on the logged in user.\n\n442\n00:24:24.700 --> 00:24:28.160\nNot necessarily system-wide, but\nbased on the logged in user.\n\n443\n00:24:28.160 --> 00:24:30.530\nSo now when you run this --global,\n\n444\n00:24:30.530 --> 00:24:34.680\nany time you're using Git, you will be\nwhatever you configure your user to be.\n\n445\n00:24:35.830 --> 00:24:40.481\nSo I wanna say user.name, and well,\nI'm just gonna say Justin, okay?\n\n446\n00:24:40.481 --> 00:24:43.925\nThis is how you wanna be\nreferred to as those snapshots\n\n447\n00:24:43.925 --> 00:24:48.910\nare being taken when you make changes,\nwhen you commit changes in your repo.\n\n448\n00:24:48.910 --> 00:24:50.580\nOkay, there we go.\n\n449\n00:24:50.580 --> 00:24:56.670\nAnd then I need to run git config\n--global and then user.email.\n\n450\n00:24:56.670 --> 00:25:01.045\nWell, this is typically gonna be\nyour user name for a repo, and\n\n451\n00:25:01.045 --> 00:25:05.852\nwe'll actually use GitHub, and\nwe're not gonna get into that now.\n\n452\n00:25:05.852 --> 00:25:10.492\nBut you'll see that I tend to match these\nso I don't have weird mismatches between\n\n453\n00:25:10.492 --> 00:25:16.000\nmy GitHub user name and actually how I'm\nmaking commits in this journal change log.\n\n454\n00:25:16.000 --> 00:25:22.610\nSo I would say something like,\nI don't know, justin@justin.justin, right?\n\n455\n00:25:22.610 --> 00:25:27.270\nNow that's not a real email address,\nbut that would be kinda cool if it was.\n\n456\n00:25:27.270 --> 00:25:28.720\nSo I have my email address.\n\n457\n00:25:28.720 --> 00:25:33.490\nNow if you by chance have any weird spaces\nor anything, typically email addresses\n\n458\n00:25:33.490 --> 00:25:36.320\ndo not allow that,\nyou would have to put those in quotes.\n\n459\n00:25:36.320 --> 00:25:40.190\nLikewise in your name, if you have more\nthan, like, you wanna put your first and\n\n460\n00:25:40.190 --> 00:25:44.040\nyour last name, well,\nyou have to enclose them in quotes\n\n461\n00:25:44.040 --> 00:25:47.400\njust because otherwise it'll chop\nthem up and do weird things.\n\n462\n00:25:47.400 --> 00:25:51.505\nSo now we have that configuration,\nlet's take a look at that\n\n463\n00:25:51.505 --> 00:25:57.720\ngitconfig one more time and notice it\nactually makes that configuration for you.\n\n464\n00:25:57.720 --> 00:25:59.483\nYou could go ahead and type this in.\n\n465\n00:25:59.483 --> 00:26:04.275\nBut I like using, well, the Git tools\nin order to make configuration a little\n\n466\n00:26:04.275 --> 00:26:08.550\nmore transparent to me,\na little easier to reason about.\n\n467\n00:26:08.550 --> 00:26:13.128\nThere is one final thing that you should\ndo, I recommend that you should do.\n\n468\n00:26:13.128 --> 00:26:15.430\nI use Vim, I know how to use Vim.\n\n469\n00:26:15.430 --> 00:26:19.227\nBut periodically,\nGit will call open a text editor, right?\n\n470\n00:26:19.227 --> 00:26:25.730\nIt could be Vim, Notepad, Notepad++, Atom,\nSublime, Textmate, whatever you choose.\n\n471\n00:26:25.730 --> 00:26:29.818\nBut it has a default, and for\nthe most part when you install Vim,\n\n472\n00:26:29.818 --> 00:26:33.220\nespecially on windows,\nit would default to Vim.\n\n473\n00:26:33.220 --> 00:26:37.480\nIf you've never used Vim or VI,\nyou may get confused because well,\n\n474\n00:26:37.480 --> 00:26:40.118\nyou can't escape by just saying escape.\n\n475\n00:26:40.118 --> 00:26:42.400\nYou have to know a set\nof keyboard commands.\n\n476\n00:26:42.400 --> 00:26:47.131\nSo I recommend running git config --global\n\n477\n00:26:47.131 --> 00:26:52.010\ncore.editor and then naming the editor.\n\n478\n00:26:52.010 --> 00:26:55.639\nFor me, it's Vim, right,\nI'm comfortable in Vim.\n\n479\n00:26:55.639 --> 00:27:00.554\nBut let's say you're on Windows and\nyou wanna use Notepad or Notepad++.\n\n480\n00:27:00.554 --> 00:27:06.420\nYou have to give the full path like such,\nProgram Files.\n\n481\n00:27:06.420 --> 00:27:09.940\nAnd actually,\nyou'll need an escape character there.\n\n482\n00:27:09.940 --> 00:27:16.450\nAnd then Notepad++, ooh,\nthat is not how you spell pad, .exe.\n\n483\n00:27:16.450 --> 00:27:20.480\nSo you have to give\nthe full path on Windows,\n\n484\n00:27:20.480 --> 00:27:25.358\nand sometimes in Linux, if you have\nthat pointing to a particular editor.\n\n485\n00:27:25.358 --> 00:27:28.190\nDefinitely run this setting,\nI'm gonna leave mine at Vim so\n\n486\n00:27:28.190 --> 00:27:29.690\nI don't need to run this.\n\n487\n00:27:29.690 --> 00:27:34.110\nAnd well, Peter, that's pretty much\nthe extent of our configuration\n\n488\n00:27:34.110 --> 00:27:36.780\nbefore we can actually hit\nthe ground running so to speak.\n\n489\n00:27:36.780 --> 00:27:38.980\n&gt;&gt; Great, so\nthat actually is pretty painless.\n\n490\n00:27:38.980 --> 00:27:42.600\nWhat do I need to do to now just make\nsure I've got everything set up right?\n\n491\n00:27:42.600 --> 00:27:46.820\n&gt;&gt; That is a great, we've already seen one\nand well, let's take a look at the screen,\n\n492\n00:27:46.820 --> 00:27:48.660\njust a quick review here.\n\n493\n00:27:48.660 --> 00:27:53.548\nAnd I wanna run git version,\nor actually, git --version,\n\n494\n00:27:53.548 --> 00:27:57.311\nwell, that will tell me\nthat Git is installed.\n\n495\n00:27:57.311 --> 00:28:01.998\nAnd then finally, I can run git\nconfig --list and that will tell me,\n\n496\n00:28:01.998 --> 00:28:06.360\nwell, have you set up your identity,\nyour credentials.\n\n497\n00:28:06.360 --> 00:28:11.070\nAnd those are kinda the two necessary\nthings before we can get started, and\n\n498\n00:28:11.070 --> 00:28:13.326\nother than that we're ready to go.\n\n499\n00:28:13.326 --> 00:28:17.300\n&gt;&gt; And so at this point, you'd say we're\npretty much ready to start using Git?\n\n500\n00:28:17.300 --> 00:28:20.537\n&gt;&gt; Exactly, Peter,\nwe are ready to hit the ground running,\n\n501\n00:28:20.537 --> 00:28:22.405\nwe're ready to Git started.\n\n502\n00:28:22.405 --> 00:28:25.840\n&gt;&gt; That's fantastic, now that we've\ngotten Git, we can finally get started.\n\n503\n00:28:25.840 --> 00:28:29.000\nBut we're gonna have to Git started\nin Git on the next episode cuz we're\n\n504\n00:28:29.000 --> 00:28:30.490\ngitting low on time.\n\n505\n00:28:30.490 --> 00:28:31.294\nThat's all I could do there for that one.\n\n506\n00:28:31.294 --> 00:28:34.084\n&gt;&gt; [LAUGH]\n&gt;&gt; But definitely stay tuned for\n\n507\n00:28:34.084 --> 00:28:37.880\nthe next episode where we actually start\nusing the product and see how it works.\n\n508\n00:28:37.880 --> 00:28:39.002\nSo stay tuned for that.\n\n509\n00:28:39.002 --> 00:28:40.869\nBut for now, I've been Peter VanRysdam.\n\n510\n00:28:40.869 --> 00:28:42.160\n&gt;&gt; And I'm Justin Dennison.\n\n511\n00:28:42.160 --> 00:28:43.109\n&gt;&gt; And we'll see you next time.\n\n512\n00:28:45.421 --> 00:28:51.353\n[MUSIC]\n\n513\n00:28:51.353 --> 00:28:54.560\n&gt;&gt; Thank you for watching ITProTV.\n\n",
          "vimeoId": "213217882"
        },
        {
          "description": "Git needs a repository to store snapshots of your work, and Justin and Peter show you how to create one in this episode. You'll also learn some of the basic configurations when setting up a new repo.",
          "length": "1333",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-introtogit/techskills-introtogit-3-1-getting_a_git_repository-041117-PGM.00_23_50_17.Still001.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-introtogit/techskills-introtogit-3-1-getting_a_git_repository-041117-PGM.00_23_50_17.Still001-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-introtogit/techskills-introtogit-3-1-getting_a_git_repository-041117-PGM.00_23_50_17.Still001-sm.jpg",
          "title": "Getting a Git Repository",
          "transcript": "WEBVTT\n\n1\n00:00:00.290 --> 00:00:00.801\nWelcome to ITProTV.\n\n2\n00:00:00.801 --> 00:00:02.713\nI'm your host.\n\n3\n00:00:02.713 --> 00:00:06.296\n&gt;&gt; [CROSSTALK]\n\n4\n00:00:06.296 --> 00:00:08.282\n[MUSIC]\n\n5\n00:00:08.282 --> 00:00:10.521\n&gt;&gt; You're watching ITProTV.\n\n6\n00:00:10.521 --> 00:00:14.760\n&gt;&gt; Hello and welcome to ITProTV.\n\n7\n00:00:14.760 --> 00:00:16.113\nI'm your host, Peter VanRysdam.\n\n8\n00:00:16.113 --> 00:00:20.760\nAnd today we're continuing in our\nseries about the introduction to Git.\n\n9\n00:00:20.760 --> 00:00:25.140\nAnd specifically in this episode we're\ngonna dive into getting a Git repository.\n\n10\n00:00:25.140 --> 00:00:28.156\nAnd I wanna thank Justin Dennison for\nnot just for joining us, but for\n\n11\n00:00:28.156 --> 00:00:31.023\nmaking that awesome title,\nGetting a Git Repository, Justin?\n\n12\n00:00:31.023 --> 00:00:35.220\n&gt;&gt; I do pride myself\nin my titling prowess.\n\n13\n00:00:35.220 --> 00:00:36.706\nSo thanks for that recognition, Peter.\n\n14\n00:00:36.706 --> 00:00:38.690\nAnd I am doing well, and how are you?\n\n15\n00:00:38.690 --> 00:00:41.356\n&gt;&gt; I'm fantastic, and your alliteration\nis just on point today, so.\n\n16\n00:00:41.356 --> 00:00:43.090\n&gt;&gt; Yeah, it is wonderful.\n\n17\n00:00:43.090 --> 00:00:47.010\n&gt;&gt; So where do we get started\nwith getting the repository?\n\n18\n00:00:47.010 --> 00:00:48.686\n&gt;&gt; That's a great question.\nAnd we need to back up just for\n\n19\n00:00:48.686 --> 00:00:51.370\na moment and\ntalk about a couple of things, right?\n\n20\n00:00:51.370 --> 00:00:55.070\nWe have Git installed, so\nthat's all water under the bridge.\n\n21\n00:00:55.070 --> 00:00:58.970\nBut there's two ways to\nactually get a Git repository.\n\n22\n00:00:58.970 --> 00:01:02.420\nWe can create one locally,\nwhich is kind of the start, right?\n\n23\n00:01:02.420 --> 00:01:04.900\nHow do we get a repository started?\n\n24\n00:01:04.900 --> 00:01:06.230\nEven if we don't put it on a server for\n\n25\n00:01:06.230 --> 00:01:08.920\nother people to use,\nsomeone has to create it.\n\n26\n00:01:08.920 --> 00:01:10.660\nWell, that's the first way.\n\n27\n00:01:10.660 --> 00:01:14.940\nNow, what happens if we're kind of diving\ninto the middle of the project and we need\n\n28\n00:01:14.940 --> 00:01:19.920\nto get a Git repository from some remote\nlocation, from some server instance?\n\n29\n00:01:19.920 --> 00:01:22.400\nSo we're actually gonna take\na look at both of those cases.\n\n30\n00:01:22.400 --> 00:01:27.890\nAnd, well, Peter, you may actually be\nsurprised at how easy that is, well,\n\n31\n00:01:27.890 --> 00:01:29.660\nto get up and going.\n\n32\n00:01:29.660 --> 00:01:31.990\nSo I can play this game too.\n\n33\n00:01:31.990 --> 00:01:32.745\n&gt;&gt; Yeah, I'm not easily impressed.\n\n34\n00:01:32.745 --> 00:01:34.317\nSo let's see-\n&gt;&gt; [LAUGH]\n\n35\n00:01:34.317 --> 00:01:35.662\n&gt;&gt; How actually easy this to\n\n36\n00:01:35.662 --> 00:01:36.820\nget the repository.\n\n37\n00:01:36.820 --> 00:01:39.443\n&gt;&gt; All right, so\nlet's start with the local case first.\n\n38\n00:01:39.443 --> 00:01:41.597\nWell, if we take a look at my screen here.\n\n39\n00:01:41.597 --> 00:01:42.513\nI'm on my desktop.\n\n40\n00:01:42.513 --> 00:01:46.440\nAnd if I ls,\nI have some random folder there.\n\n41\n00:01:46.440 --> 00:01:51.220\nBut let's make an originally\nnamed folder called test.\n\n42\n00:01:51.220 --> 00:01:53.004\nIt's a very good one.\n\n43\n00:01:53.004 --> 00:01:55.258\n&gt;&gt; Justin, as you get started here,\nI just wanna ask,\n\n44\n00:01:55.258 --> 00:01:57.166\nwe're in the Mac environment now, right?\n\n45\n00:01:57.166 --> 00:01:59.680\nAnd this is kinda where\nwe'll stay from this point?\n\n46\n00:01:59.680 --> 00:02:02.640\n&gt;&gt; Yes, we're just gonna stay\nwith my standard environment.\n\n47\n00:02:02.640 --> 00:02:04.740\nMainly because after\nyou get Git installed,\n\n48\n00:02:04.740 --> 00:02:09.260\nmost of this translates between platforms.\n\n49\n00:02:09.260 --> 00:02:11.180\nDefinitely gotta get that out there.\n\n50\n00:02:11.180 --> 00:02:12.800\nSo it's all in command line.\n\n51\n00:02:12.800 --> 00:02:17.340\nAnd pretty much what you see in Mac will\nwork on Linux, will also work in Git Bash.\n\n52\n00:02:17.340 --> 00:02:19.420\nNow, that's the key point there.\n\n53\n00:02:19.420 --> 00:02:23.930\nIf you're using Git cmd or\ncommand prompt, how I make folders and\n\n54\n00:02:23.930 --> 00:02:26.320\nfiles may be a little bit different.\n\n55\n00:02:26.320 --> 00:02:27.520\nSo do keep that in mind.\n\n56\n00:02:27.520 --> 00:02:29.130\nSo that's why I choose\nthe Bash environment.\n\n57\n00:02:29.130 --> 00:02:32.940\nI don't have to learn things across\nplatforms and my skills translate.\n\n58\n00:02:32.940 --> 00:02:35.410\nSo thanks for keeping me honest, Peter.\n\n59\n00:02:35.410 --> 00:02:37.290\nSo we're in this test folder, right?\n\n60\n00:02:37.290 --> 00:02:40.970\nNow, I want to create\na local Git repository.\n\n61\n00:02:40.970 --> 00:02:43.270\nWell, are you ready, Peter?\n\n62\n00:02:43.270 --> 00:02:46.450\n&gt;&gt; Let's do it.\n&gt;&gt; git init, and I'm done.\n\n63\n00:02:46.450 --> 00:02:47.930\nAnd that's all there is to it.\n\n64\n00:02:47.930 --> 00:02:50.020\nI actually have a Git repository.\n\n65\n00:02:50.020 --> 00:02:52.420\nNow, something I do\nwant to tell you about.\n\n66\n00:02:52.420 --> 00:02:55.925\nIf you are on Windows environment,\nyou actually see something very similar to\n\n67\n00:02:55.925 --> 00:02:58.541\nwhat I see,\nwhere it says this git:(master), right?\n\n68\n00:02:58.541 --> 00:03:01.315\nWell, that's to tell\nyou this is a Git repo.\n\n69\n00:03:01.315 --> 00:03:06.631\nOkay, if you're in a standard Linux or\na standard Mac environment,\n\n70\n00:03:06.631 --> 00:03:12.037\nI use, again, a custom shell where\nI customize and have all these kind\n\n71\n00:03:12.037 --> 00:03:18.440\nof plugins that help me manage these,\nyou will not see this printout.\n\n72\n00:03:18.440 --> 00:03:19.220\nThat's fine.\n\n73\n00:03:19.220 --> 00:03:20.490\nThere's another way to check.\n\n74\n00:03:20.490 --> 00:03:24.680\nAnd actually,\nlet's take a look at what is a Git repo?\n\n75\n00:03:24.680 --> 00:03:27.060\nHow do I know that it's working?\n\n76\n00:03:27.060 --> 00:03:28.660\nWhat does it need to work?\n\n77\n00:03:28.660 --> 00:03:30.550\nSo I'm going to clear out.\n\n78\n00:03:30.550 --> 00:03:32.830\nAnd just as a reminder, it's git init.\n\n79\n00:03:32.830 --> 00:03:33.590\nThat's all it is.\n\n80\n00:03:33.590 --> 00:03:35.510\nInitialize the Git repo.\n\n81\n00:03:35.510 --> 00:03:36.590\nI can do it again.\n\n82\n00:03:36.590 --> 00:03:37.600\nNothing's gonna change.\n\n83\n00:03:37.600 --> 00:03:43.207\nCuz what's happening when I run this\ncommand is, well, I'm gonna ls -la.\n\n84\n00:03:43.207 --> 00:03:46.144\nAnd right here there's this .git folder.\n\n85\n00:03:46.144 --> 00:03:48.200\nThere's that .git directory.\n\n86\n00:03:48.200 --> 00:03:51.656\nAnd that's where all of my saves,\nall of my tracking,\n\n87\n00:03:51.656 --> 00:03:54.400\nall of my information is being stored.\n\n88\n00:03:54.400 --> 00:03:56.610\nAnd for the most part,\nunless I know where to go look for\n\n89\n00:03:56.610 --> 00:03:59.270\nit, well, it's hidden from most people.\n\n90\n00:03:59.270 --> 00:04:01.480\nAnd, well,\nit's just hanging out in this folder.\n\n91\n00:04:01.480 --> 00:04:03.720\nNow, before we take\na look inside of there,\n\n92\n00:04:03.720 --> 00:04:06.640\nI'm gonna hop back out into the desktop.\n\n93\n00:04:06.640 --> 00:04:10.280\nAnd you'll notice, well,\nthere's not one there, right?\n\n94\n00:04:11.490 --> 00:04:16.950\nSo I have some hidden folders,\nhidden files, but .git is not one of them.\n\n95\n00:04:16.950 --> 00:04:20.222\nOne of the biggest issues that I see\npeople when they're first starting to\n\n96\n00:04:20.222 --> 00:04:23.200\nlearn Git is they'll git\ninit in the wrong place.\n\n97\n00:04:23.200 --> 00:04:29.120\nLike they'll type git init here and\nnow my desktop is a Git repo.\n\n98\n00:04:29.120 --> 00:04:33.232\nAnd I have test, which is also a Git repo.\n\n99\n00:04:33.232 --> 00:04:38.550\nAnd I'm not guaranteed to be saving in\nthe correct repo that I think I am.\n\n100\n00:04:38.550 --> 00:04:44.020\nBecause I got repos in repos in repos,\nor projects in projects in projects.\n\n101\n00:04:44.020 --> 00:04:46.930\nWell, it's really hard to\nkeep track in my mind,\n\n102\n00:04:46.930 --> 00:04:49.900\nnot let alone in the computer,\nhow that's working.\n\n103\n00:04:49.900 --> 00:04:52.070\nSo be very, very careful.\n\n104\n00:04:52.070 --> 00:04:56.490\nYou can initialize a Git repo in a place\nthat makes it difficult to reason about.\n\n105\n00:04:56.490 --> 00:04:59.320\nSo how do I clean that\nup if that's the case?\n\n106\n00:04:59.320 --> 00:05:00.462\nWell, ls -la.\n\n107\n00:05:00.462 --> 00:05:05.869\nYou can either go find this folder\ninside of Windows Explorer,\n\n108\n00:05:05.869 --> 00:05:10.562\nor Mac Finder, or\nwhatever your distro of Linux has for\n\n109\n00:05:10.562 --> 00:05:14.645\nthe point-and-click interface for\nfiles and\n\n110\n00:05:14.645 --> 00:05:18.438\nfolders, or you can just say rn -rf .git.\n\n111\n00:05:18.438 --> 00:05:20.750\nYou actually have to say .git,\nnot comma .git.\n\n112\n00:05:20.750 --> 00:05:23.369\n&gt;&gt; [LAUGH]\n&gt;&gt; So once that is removed,\n\n113\n00:05:23.369 --> 00:05:28.199\nwhen that folder's removed,\nI no longer have a Git repo locally.\n\n114\n00:05:28.199 --> 00:05:31.420\nOkay, so let's hop back into test.\n\n115\n00:05:32.720 --> 00:05:36.680\nAnd if Is -la, I'm actually\ngonna go inside of this folder.\n\n116\n00:05:36.680 --> 00:05:39.470\nNow, we're taking a quick look at this\n\n117\n00:05:39.470 --> 00:05:44.370\nonly because I want you to\nknow this is not magic.\n\n118\n00:05:44.370 --> 00:05:47.990\nWe're actually storing and\nsaving things inside of this folder.\n\n119\n00:05:47.990 --> 00:05:49.810\nFor the most part when you're using Git,\n\n120\n00:05:49.810 --> 00:05:53.060\nyou will not mess with this\nfolder whatsoever, okay?\n\n121\n00:05:53.060 --> 00:05:56.990\nDon't go in here and mess around,\ncuz you can break things.\n\n122\n00:05:56.990 --> 00:06:02.550\nAnd if that's an important project,\nwell, that could be an issue.\n\n123\n00:06:02.550 --> 00:06:07.250\nSo okay, so if I go inside of .git,\n\n124\n00:06:07.250 --> 00:06:12.420\nI have this HEAD,\nthis config, descriptions.\n\n125\n00:06:12.420 --> 00:06:15.050\nAnd then I have hooks,\ninfo, objects, refs.\n\n126\n00:06:15.050 --> 00:06:17.660\nAnd sometimes I'll have\na few other things.\n\n127\n00:06:17.660 --> 00:06:18.160\nThese are folders.\n\n128\n00:06:19.671 --> 00:06:22.690\nAnd objects are things that I've saved.\n\n129\n00:06:22.690 --> 00:06:25.592\nReferences are pointers to those\nthings that I've saved, and\n\n130\n00:06:25.592 --> 00:06:27.187\nthen various other information.\n\n131\n00:06:27.187 --> 00:06:28.492\nconfig, well,\n\n132\n00:06:28.492 --> 00:06:34.290\nthis is the first time we've been able\nto configure based on a local repo.\n\n133\n00:06:34.290 --> 00:06:36.360\nSo I'm gonna go inside of config and,\n\n134\n00:06:36.360 --> 00:06:41.420\nwell, there's our basic configuration for\nhow the repo runs.\n\n135\n00:06:41.420 --> 00:06:43.550\nBut I can add a user name and\n\n136\n00:06:43.550 --> 00:06:48.270\na user email inside of this config\nas well as other configuration.\n\n137\n00:06:48.270 --> 00:06:50.530\nBut as I said before,\nI would not recommend that.\n\n138\n00:06:50.530 --> 00:06:52.330\nBecause, well, you can get mixed up.\n\n139\n00:06:52.330 --> 00:06:55.020\nThere is a valid use case,\nbut maybe not right now.\n\n140\n00:06:55.020 --> 00:06:58.970\ndescription is a file that is just, well,\nit's a description of what's in the repo.\n\n141\n00:07:00.410 --> 00:07:02.360\nAnd then the HEAD,\nlet's take a look at the HEAD.\n\n142\n00:07:03.400 --> 00:07:09.420\nThe HEAD is, well, it's kind of\nwhat snapshot are we currently on.\n\n143\n00:07:09.420 --> 00:07:11.270\nIf you think about Polaroid pictures,\n\n144\n00:07:11.270 --> 00:07:16.740\nor I guess a better analogy would\nbe digital camera pictures, right?\n\n145\n00:07:16.740 --> 00:07:18.140\nI'm at the most current one.\n\n146\n00:07:18.140 --> 00:07:23.291\nOr, I'm at the one that's\nlisted in this HEAD file, okay?\n\n147\n00:07:23.291 --> 00:07:25.410\nIt's just a plain text file.\n\n148\n00:07:25.410 --> 00:07:26.920\nAnd there we go.\n\n149\n00:07:26.920 --> 00:07:28.920\nNow, let's take inside of hooks.\n\n150\n00:07:30.020 --> 00:07:34.080\nAnd, well, for the most part these\nare things that I can get to be\n\n151\n00:07:34.080 --> 00:07:36.550\nrun automatically by the Git toolset.\n\n152\n00:07:36.550 --> 00:07:38.700\nThis is definitely an advanced feature.\n\n153\n00:07:38.700 --> 00:07:40.290\nWhen you get there, check it out.\n\n154\n00:07:40.290 --> 00:07:40.813\nIt helps a great deal.\n\n155\n00:07:40.813 --> 00:07:43.460\nBut we're not gonna worry about it.\n\n156\n00:07:43.460 --> 00:07:46.070\nThere are samples and\nkind of instructions.\n\n157\n00:07:46.070 --> 00:07:48.140\nBut for now I would stay away from these.\n\n158\n00:07:49.360 --> 00:07:51.828\nAnd then what about info?\n\n159\n00:07:51.828 --> 00:07:56.883\nWell, info has this by default exclude.\n\n160\n00:07:56.883 --> 00:07:59.160\nOkay, what is exclude?\n\n161\n00:07:59.160 --> 00:08:02.174\nIf we take a look at this exclude file,\n\n162\n00:08:02.174 --> 00:08:06.898\nit's patterns of files that I\nwant to keep out of this repo.\n\n163\n00:08:06.898 --> 00:08:11.920\nThere are times that I don't want to keep\nthings like well, my credit card numbers.\n\n164\n00:08:11.920 --> 00:08:15.291\nMaybe I have to store those for\nsome reason, typically you won't.\n\n165\n00:08:15.291 --> 00:08:18.635\nBut I wanna keep those from\nbeing put in version control and\n\n166\n00:08:18.635 --> 00:08:21.050\nthen submitted to a central server.\n\n167\n00:08:21.050 --> 00:08:25.101\nNow that's an issue because then anybody\nwho has access to that repo would then be\n\n168\n00:08:25.101 --> 00:08:28.449\nable to get that kind of secret\ninformation, those credentials.\n\n169\n00:08:28.449 --> 00:08:32.857\nAnd I said credit card number, typically\nlike usernames, passwords, maybe SSH keys,\n\n170\n00:08:32.857 --> 00:08:34.045\nthings of that nature.\n\n171\n00:08:34.045 --> 00:08:36.285\nWell, I wanna keep those out.\n\n172\n00:08:36.285 --> 00:08:37.517\nSo you can put excludes there.\n\n173\n00:08:37.517 --> 00:08:41.881\nThere are others ways that you'll see in\nfuture episodes that will keep those out\n\n174\n00:08:41.881 --> 00:08:43.043\nof version control.\n\n175\n00:08:43.043 --> 00:08:48.850\nAnd then one we're just gonna\ntake a look here, ls objects.\n\n176\n00:08:49.940 --> 00:08:53.140\nThere's some additional subfolders\nwhere we can take the object,\n\n177\n00:08:53.140 --> 00:08:54.810\nwe can do what's called a pack.\n\n178\n00:08:54.810 --> 00:08:58.928\nSo it'll actually make it as small\nas possible, and keep info about it.\n\n179\n00:08:58.928 --> 00:09:03.702\nAnd then inside of refs,\nwell, there's heads and tags.\n\n180\n00:09:03.702 --> 00:09:08.295\nAnd those are, again, kind of advanced\nfeatures, other than it keeps\n\n181\n00:09:08.295 --> 00:09:13.640\na running tally of where head, this\nhead folder, is in the timeline, right?\n\n182\n00:09:13.640 --> 00:09:17.910\nSo if I started two years ago, and\nI've taken a picture every day since then,\n\n183\n00:09:17.910 --> 00:09:22.830\nthen I may have well checked out\nsome particular instance in time.\n\n184\n00:09:22.830 --> 00:09:25.610\nSo behind the scenes,\nthis is what makes Git work.\n\n185\n00:09:25.610 --> 00:09:29.949\nBut ultimately, that's all we have\nto do in order to have a local repo.\n\n186\n00:09:29.949 --> 00:09:34.263\n&gt;&gt; And so this local repo might be\nuseful if you're, like you said before,\n\n187\n00:09:34.263 --> 00:09:38.095\nkind of storing different Photoshop\nfiles or things like that.\n\n188\n00:09:38.095 --> 00:09:40.705\nAnd don't wanna have duplicates of all\nthese different files along the way.\n\n189\n00:09:40.705 --> 00:09:44.363\n&gt;&gt; So exactly, now let me further clarify.\n\n190\n00:09:44.363 --> 00:09:46.399\nEvery time I make a change,\n\n191\n00:09:46.399 --> 00:09:51.195\nit will actually take a new snapshot\nwhich is a full copy of that.\n\n192\n00:09:52.380 --> 00:09:57.140\nHowever, I will not get duplicates if\nthe file has not changed from snapshot\n\n193\n00:09:57.140 --> 00:09:57.740\nto snapshot.\n\n194\n00:09:57.740 --> 00:10:02.870\nSo let's go back to the analogy of taking\na picture of that growing plant, right?\n\n195\n00:10:02.870 --> 00:10:06.980\nIf I take it at exactly the same angle,\nexact same time of day,\n\n196\n00:10:06.980 --> 00:10:09.930\nthe only thing that would be changing\nis the actual shape of the plant.\n\n197\n00:10:09.930 --> 00:10:12.910\nThe pot and\nthe surroundings would stay the same.\n\n198\n00:10:12.910 --> 00:10:15.170\nSo I would not get new copies of those,\n\n199\n00:10:15.170 --> 00:10:17.720\nI would only get new copies\nof the plant growing out.\n\n200\n00:10:17.720 --> 00:10:20.995\nSo if I made a change to\nthose large Photoshop files,\n\n201\n00:10:20.995 --> 00:10:24.493\nthen I would get a new copy\nwith that change preserved and\n\n202\n00:10:24.493 --> 00:10:27.633\nI would also be able to go\nback to the old versions.\n\n203\n00:10:27.633 --> 00:10:32.533\n&gt;&gt; Gotcha, well, it sounds like\nthe real power in Git is using\n\n204\n00:10:32.533 --> 00:10:36.070\nit with multiple people across a network.\n\n205\n00:10:36.070 --> 00:10:37.630\nSo how do we set that up so\n\n206\n00:10:37.630 --> 00:10:41.660\nit's not just on our local machine, but\nwhere other people can use it as well?\n\n207\n00:10:41.660 --> 00:10:42.910\n&gt;&gt; So that is a great question.\n\n208\n00:10:42.910 --> 00:10:47.010\nAnd typically, you're gonna need a Git\nserver in order to make this happen.\n\n209\n00:10:47.010 --> 00:10:49.350\nAnd in this series of videos and\n\n210\n00:10:49.350 --> 00:10:53.766\nkind of course where we're\ngoing to look at using GitHub.\n\n211\n00:10:53.766 --> 00:10:57.734\nNow there's a great deal of other\nservices that are available for this, and\n\n212\n00:10:57.734 --> 00:10:59.710\nwe'll touch on those later.\n\n213\n00:10:59.710 --> 00:11:02.597\nBut we're gonna use GitHub cuz it's\nkinda come to the forefront and\n\n214\n00:11:02.597 --> 00:11:04.278\nit's really pushing the Git tool set.\n\n215\n00:11:04.278 --> 00:11:08.622\nBut I have seen people use it for\nimages, for music, for\n\n216\n00:11:08.622 --> 00:11:15.270\nactual large file storage, as well as\nwriting books, believe it or not, right?\n\n217\n00:11:15.270 --> 00:11:17.980\nWe haven't talked about that but\njust plain text files.\n\n218\n00:11:17.980 --> 00:11:22.240\nIf I wanted to keep snapshots of\nmaybe some revision of a book or\n\n219\n00:11:22.240 --> 00:11:27.310\nsome writings, then Git is also\na great tool to use for then.\n\n220\n00:11:27.310 --> 00:11:31.310\nBut we're gonna use GitHub, well,\nbecause it's kind of on the forefront.\n\n221\n00:11:31.310 --> 00:11:33.332\nWe have Google, and Microsoft,\nand all kinds of fun stuff.\n\n222\n00:11:33.332 --> 00:11:37.581\nSo let's go ahead and take a look at the\nscreen, and take our first look at GitHub,\n\n223\n00:11:37.581 --> 00:11:39.750\nwhich is going to serve as our Git server.\n\n224\n00:11:40.860 --> 00:11:46.238\nSo I'm gonna go to github.com, and\nwell, their mascot is the octacat.\n\n225\n00:11:46.238 --> 00:11:47.443\nIt's like an octopus cat.\n\n226\n00:11:47.443 --> 00:11:50.340\nIt's kind of interesting, yeah, obviously.\n\n227\n00:11:50.340 --> 00:11:54.789\nAnd then I can search and\nthey have some wonderful kind of resources\n\n228\n00:11:54.789 --> 00:11:59.247\non how do I use Git, how can I check\nthis out, how can I move around?\n\n229\n00:11:59.247 --> 00:12:03.747\nBut what I think the wonderful power\nof GitHub is well, if it's free and\n\n230\n00:12:03.747 --> 00:12:08.550\nopen source and it's made public, I can\ngo look at it, you can go look at it.\n\n231\n00:12:08.550 --> 00:12:12.847\nAnd we can actually use the Git\ntool set to check it out.\n\n232\n00:12:12.847 --> 00:12:16.852\n&gt;&gt; And again, I mentioned earlier,\nJustin, that the Git itself is free and\n\n233\n00:12:16.852 --> 00:12:18.310\nit's open source now.\n\n234\n00:12:18.310 --> 00:12:20.922\nGitHub and services like that,\nare these free as well or\n\n235\n00:12:20.922 --> 00:12:24.044\nthey're different levels for\ndepending on what we're storing?\n\n236\n00:12:24.044 --> 00:12:26.770\n&gt;&gt; So there are different pricing models.\n\n237\n00:12:26.770 --> 00:12:29.070\nSo typically,\nif I wanna keep everything free and\n\n238\n00:12:29.070 --> 00:12:32.560\npublic, then I don't have\nto pay anything on GitHub.\n\n239\n00:12:32.560 --> 00:12:36.964\nIf I want to keep things private, because\nlet's say we're developing some software\n\n240\n00:12:36.964 --> 00:12:41.014\nor we have a set of writings and diagrams\nthat we wanna keep in version control.\n\n241\n00:12:41.014 --> 00:12:45.943\nBut we don't want to expose to the public,\nbecause they're our core business value,\n\n242\n00:12:45.943 --> 00:12:50.360\nthen I can pay them a fee to keep those,\nwell, private and sequestered away.\n\n243\n00:12:50.360 --> 00:12:53.040\nIn addition to GitHub\nwill allow you to pay.\n\n244\n00:12:53.040 --> 00:12:56.370\nWell, you can pay GitHub in order\nto manage like organizations,\n\n245\n00:12:56.370 --> 00:12:59.200\nlike teams and teams within organizations.\n\n246\n00:12:59.200 --> 00:13:02.670\nSo there's some of that\nmanagerial work within that.\n\n247\n00:13:04.460 --> 00:13:08.567\nBut some of the alternative services for\nGit have a different pricing model, so\n\n248\n00:13:08.567 --> 00:13:10.048\ndefinitely check that out.\n\n249\n00:13:10.048 --> 00:13:11.430\nBut great question.\n\n250\n00:13:11.430 --> 00:13:15.615\nSo let's take a look at,\nwell, I wanna search GitHub.\n\n251\n00:13:15.615 --> 00:13:16.788\nWhat do I wanna search?\n\n252\n00:13:16.788 --> 00:13:21.822\nI'm going to do some crazy stuff here, and\nI'm gonna search GitHub inside of GitHub.\n\n253\n00:13:21.822 --> 00:13:27.600\nSo GitHub, it's kind of like\na social network for code.\n\n254\n00:13:27.600 --> 00:13:32.150\nBut as I've said, I've seen people\nstore version control writings and\n\n255\n00:13:32.150 --> 00:13:36.339\nversion control files like images and\naudio and things like that.\n\n256\n00:13:36.339 --> 00:13:41.320\nSo if I come up here, you will notice\nthere are 1 million repositories.\n\n257\n00:13:41.320 --> 00:13:45.381\nI can click on the Code tab and there's\nnothing that matches GitHub, right?\n\n258\n00:13:45.381 --> 00:13:49.220\nThere's no code if I'm programming.\n\n259\n00:13:49.220 --> 00:13:54.477\nThere are 27 million commits that match\nGitHub, and then there's 7 million issues\n\n260\n00:13:54.477 --> 00:13:59.462\nwhich are like track tickets, things that\nare broken, things that I need to fix.\n\n261\n00:13:59.462 --> 00:14:03.191\nThere are 466,000 Wikis.\n\n262\n00:14:03.191 --> 00:14:07.828\nSo these are all services that are on\ntop of GitHub that are actually disjoint\n\n263\n00:14:07.828 --> 00:14:08.490\nfrom Git.\n\n264\n00:14:08.490 --> 00:14:10.270\nAnd that's the reason\nI'm showing you these.\n\n265\n00:14:10.270 --> 00:14:15.020\nWell, Git is a tool set from\nmanaging version files and folders.\n\n266\n00:14:16.120 --> 00:14:20.353\nGitHub provides that service like a server\nto submit and kind of store those, but\n\n267\n00:14:20.353 --> 00:14:24.538\nit also provides these ancillary services\nlike connecting with other people.\n\n268\n00:14:24.538 --> 00:14:29.370\nSeeing other people's code,\nmanaging teams, managing organizations,\n\n269\n00:14:29.370 --> 00:14:34.739\nwriting Wikis, filing buck reports or\nissues, also providing metrics to people.\n\n270\n00:14:34.739 --> 00:14:36.031\nHow is my team doing?\n\n271\n00:14:36.031 --> 00:14:37.549\nHow is my organization doing?\n\n272\n00:14:37.549 --> 00:14:42.367\nAnd then we can link based on users,\nright.\n\n273\n00:14:42.367 --> 00:14:47.580\nSo actually GitHub has its own\norganization called GitHub.\n\n274\n00:14:47.580 --> 00:14:49.905\nSo GitHub is on GitHub.\n\n275\n00:14:49.905 --> 00:14:51.841\nWell, that's kind of interesting.\n\n276\n00:14:51.841 --> 00:14:57.182\nAnd then once you get to a user, I can\nsearch within that user for repositories.\n\n277\n00:14:57.182 --> 00:15:04.460\nNow I'm gonna take a very programming\nsource code oriented approach to this.\n\n278\n00:15:04.460 --> 00:15:07.420\nBut again, just to iterate,\nthat's not the only usecase.\n\n279\n00:15:07.420 --> 00:15:09.051\nI'm gonna look for GitHub's fetch.\n\n280\n00:15:09.051 --> 00:15:14.441\nNow this is what's called a poly field for\na particular usecase on a browser.\n\n281\n00:15:14.441 --> 00:15:16.204\nYou don't have to worry\nabout what that is.\n\n282\n00:15:16.204 --> 00:15:17.918\nAnd we're gonna use this for\n\n283\n00:15:17.918 --> 00:15:21.429\nan example of how can I interact\nwith a remote repository.\n\n284\n00:15:21.429 --> 00:15:23.460\nSo I'm gonna look in fetch.\n\n285\n00:15:23.460 --> 00:15:27.156\nAnd if we look we can actually\njust click around and\n\n286\n00:15:27.156 --> 00:15:31.391\nlook inside the repository\nright inside of our browser.\n\n287\n00:15:31.391 --> 00:15:35.872\nSo here we go, there's all the files,\nthere's the contents of the files.\n\n288\n00:15:35.872 --> 00:15:38.217\nThat's pretty easy.\n\n289\n00:15:38.217 --> 00:15:43.690\nBut let's say that I wanted to pull this\ndown, right, and I wanna play with it.\n\n290\n00:15:43.690 --> 00:15:44.520\nI wanna change it.\n\n291\n00:15:44.520 --> 00:15:46.929\nI wanna mess with it,\nand see how things go.\n\n292\n00:15:46.929 --> 00:15:48.896\nHow would I do that?\n\n293\n00:15:48.896 --> 00:15:52.435\nWell, I need to access\nthat kind of Git server,\n\n294\n00:15:52.435 --> 00:15:55.539\nthat central source where it's stored.\n\n295\n00:15:55.539 --> 00:15:58.916\nAnd that is through this clone or\ndownload.\n\n296\n00:15:58.916 --> 00:16:03.184\nNow I will tell you there are a great\nnumber of people that I've encountered\n\n297\n00:16:03.184 --> 00:16:07.532\nthat have not used Git, have come to\nGitHub, have downloaded the zip file.\n\n298\n00:16:07.532 --> 00:16:09.980\nAnd then they're like, I don't,\nlike there's weird stuff.\n\n299\n00:16:09.980 --> 00:16:12.010\nI gotta unzip it, how do I use this?\n\n300\n00:16:12.010 --> 00:16:13.250\nHow do I make changes?\n\n301\n00:16:13.250 --> 00:16:14.670\nHow do I actually send this back?\n\n302\n00:16:15.972 --> 00:16:20.460\nI rarely, I think I might have\nclicked this button twice, right?\n\n303\n00:16:20.460 --> 00:16:23.240\nMy main use case is this URL.\n\n304\n00:16:23.240 --> 00:16:27.934\nThere are two ways can I\nget things from GitHub.\n\n305\n00:16:27.934 --> 00:16:29.865\nThere's using HTTPS.\n\n306\n00:16:29.865 --> 00:16:35.402\nOr a lot of times they will provide,\nif you're part of an organization, they\n\n307\n00:16:35.402 --> 00:16:41.212\nwill provide an SSH URL, where if I have\na private key, I can link that to GitHub.\n\n308\n00:16:41.212 --> 00:16:44.500\nAnd well, then I don't have to\nworry about username and password.\n\n309\n00:16:44.500 --> 00:16:46.990\nThis is public, so I'm just gonna copy.\n\n310\n00:16:46.990 --> 00:16:50.670\nNow anytime you're in GitHub, if you see\nthis little clipboard icon, click it and\n\n311\n00:16:50.670 --> 00:16:53.700\nit will put it in your clipboard so\nI can just copy and paste.\n\n312\n00:16:53.700 --> 00:16:56.880\nNow GitHub does provide its\nown Git GUI client, right,\n\n313\n00:16:56.880 --> 00:17:00.260\nwhere you can point and click and do all\nthe things that we're doing right now.\n\n314\n00:17:00.260 --> 00:17:04.670\nBut again those are very\nspecific to who makes\n\n315\n00:17:04.670 --> 00:17:07.210\nthe graphical user interface and\nhow that works.\n\n316\n00:17:07.210 --> 00:17:12.740\nNot all of the features of Git are in all\nof those graphical user interface clients.\n\n317\n00:17:12.740 --> 00:17:16.850\nSo now that I have this URL,\nyou will notice this URL is very similar\n\n318\n00:17:17.890 --> 00:17:21.870\nto this URL, and\nthere's a reason for that.\n\n319\n00:17:21.870 --> 00:17:24.770\nWell, that's because more or\nless they're the same place.\n\n320\n00:17:24.770 --> 00:17:28.503\nAnd then if I hop back over to\nthe terminal and I type git clone.\n\n321\n00:17:28.503 --> 00:17:34.170\nNow clone as well, it's gonna get me\nan exact copy, and I'm going to paste.\n\n322\n00:17:34.170 --> 00:17:35.400\nAnd are you ready, Peter?\n\n323\n00:17:35.400 --> 00:17:36.730\n&gt;&gt; Let's do it.\n\n324\n00:17:36.730 --> 00:17:37.230\n&gt;&gt; Enter.\n\n325\n00:17:38.280 --> 00:17:41.804\n&gt;&gt; Okay, all right,\nthat's awesome stuff happened there.\n\n326\n00:17:41.804 --> 00:17:43.000\nSomething just happened in the background.\n\n327\n00:17:43.000 --> 00:17:44.653\nWhat happened?\n&gt;&gt; Yeah, yeah.\n\n328\n00:17:44.653 --> 00:17:46.790\nIf you blinked, you missed it, right?\n\n329\n00:17:46.790 --> 00:17:50.770\nYou have to be careful there because\nit'll say cloning into fetch.\n\n330\n00:17:50.770 --> 00:17:53.460\nAnd remote counting objects,\ncompressing objects.\n\n331\n00:17:53.460 --> 00:17:57.603\nIt'll tell you everything that was\ncompressed, and then receiving objects.\n\n332\n00:17:57.603 --> 00:18:02.015\nIt essentially did a download for\nyou using the Git protocol.\n\n333\n00:18:02.015 --> 00:18:06.930\nWe'll call it a protocol, I'm hesitant\nto say that with strong fervor.\n\n334\n00:18:06.930 --> 00:18:10.600\nBut it's using the Git\ncommand line to download\n\n335\n00:18:10.600 --> 00:18:14.450\nthat entire repo on to your computer,\nright?\n\n336\n00:18:14.450 --> 00:18:16.050\nI could have used the zip file.\n\n337\n00:18:16.050 --> 00:18:19.609\nBut it's downloading it, it's using\na compression algorithm to do that.\n\n338\n00:18:19.609 --> 00:18:24.713\nAnd what's interesting if we go inside\nof here, well, it's still a Git repo.\n\n339\n00:18:24.713 --> 00:18:29.197\nSo I have an exact copy that's on\nthe server, on my computer now and\n\n340\n00:18:29.197 --> 00:18:31.020\nI can just get to work.\n\n341\n00:18:31.020 --> 00:18:33.500\n&gt;&gt; And\nwhere on your computer does that live?\n\n342\n00:18:33.500 --> 00:18:35.380\n&gt;&gt; It lives exactly in this folder.\n\n343\n00:18:35.380 --> 00:18:39.440\nThere's no other place that it resides.\n\n344\n00:18:39.440 --> 00:18:43.180\nSo if I ls, there's all of the files and\nfolders that I need.\n\n345\n00:18:43.180 --> 00:18:47.780\nAnd if I ls -la,\nnotice there's a .git right here.\n\n346\n00:18:47.780 --> 00:18:50.710\nAnd let's just take a quick\nglance inside of that .git and\n\n347\n00:18:50.710 --> 00:18:54.760\nyou'll notice that there's actually\nsome other files and folders here.\n\n348\n00:18:54.760 --> 00:19:00.460\nBecause, well, this has a good set\nof snapshots, a history to it.\n\n349\n00:19:00.460 --> 00:19:04.290\nSo we've seen the hooks, the info,\nthe refs, the objects, but\n\n350\n00:19:04.290 --> 00:19:07.310\nwe have packed refs,\nit's kind of compressed ones.\n\n351\n00:19:07.310 --> 00:19:11.698\nWe have logs, well,\nthat's what's happened over time,\n\n352\n00:19:11.698 --> 00:19:14.349\nthose are those actual snapshots.\n\n353\n00:19:14.349 --> 00:19:17.190\nAnd then the index, well,\nthat's just making sure\n\n354\n00:19:17.190 --> 00:19:20.624\nyou can do a lookup of what's\nhappened over time very quickly.\n\n355\n00:19:20.624 --> 00:19:24.179\n&gt;&gt; All right, so you mentioned that if\nyou use that button on the website,\n\n356\n00:19:24.179 --> 00:19:26.253\nyou've got to maybe unzip some things and\n\n357\n00:19:26.253 --> 00:19:29.050\nfigure out how to set things\nup on your machine locally.\n\n358\n00:19:30.150 --> 00:19:33.320\nWith that process you use with the clone,\nare we ready to go then or\n\n359\n00:19:33.320 --> 00:19:35.020\nis there anything we need to unpack?\n\n360\n00:19:35.020 --> 00:19:35.760\n&gt;&gt; Nope, that it.\n\n361\n00:19:35.760 --> 00:19:36.840\nWe're done.\n\n362\n00:19:36.840 --> 00:19:40.460\nSo even though we took some time\nto explore what is a Git Repo,\n\n363\n00:19:40.460 --> 00:19:42.700\nlet's take a look inside.\n\n364\n00:19:42.700 --> 00:19:45.932\nTo kind of summarize how do I create\none locally that I wanna work on.\n\n365\n00:19:45.932 --> 00:19:49.900\nI could make a folder, go inside\nthe folder, get init, that is your repo.\n\n366\n00:19:49.900 --> 00:19:55.200\nIf I want to use someone else's or\nmaybe I accidentally deleted mine or\n\n367\n00:19:55.200 --> 00:19:57.950\nyou've worked on something and\nI wanna work on yours and\n\n368\n00:19:57.950 --> 00:20:03.000\nit's on a server, I can use get clone,\npull that down and we're good to go.\n\n369\n00:20:03.000 --> 00:20:07.170\nThose are the only two commands\nthat I need to get a Git repo.\n\n370\n00:20:07.170 --> 00:20:11.169\n&gt;&gt; Now as things change and other\npeople that are collaborating with me\n\n371\n00:20:11.169 --> 00:20:15.448\nare uploading things, do I need to\ncontinually do that process to get new\n\n372\n00:20:15.448 --> 00:20:19.680\nclones or is that something we'll\nkinda get into later episodes here?\n\n373\n00:20:19.680 --> 00:20:21.310\n&gt;&gt; So that's a great question.\n\n374\n00:20:21.310 --> 00:20:22.670\nAnd interestingly enough,\n\n375\n00:20:22.670 --> 00:20:27.190\nwe're gonna cover how would I\nuse this in a single source.\n\n376\n00:20:27.190 --> 00:20:29.070\nHow would I use this by myself?\n\n377\n00:20:29.070 --> 00:20:32.740\nAnd then we'll slowly dive into,\nwell, what if you and\n\n378\n00:20:32.740 --> 00:20:33.970\nI were working on a project?\n\n379\n00:20:33.970 --> 00:20:35.850\nYou made a change, I made a change.\n\n380\n00:20:35.850 --> 00:20:37.600\nHow do we keep those in sync?\n\n381\n00:20:37.600 --> 00:20:40.360\nBecause well, as you said,\ndo I need to keep doing this?\n\n382\n00:20:40.360 --> 00:20:44.280\nLike Dropbox and GoogleDrive and OneDrive.\n\n383\n00:20:44.280 --> 00:20:48.470\nThose are kind of just syncing all the\ntime, right, any time it detects a change.\n\n384\n00:20:48.470 --> 00:20:49.422\nGit doesn't do that.\n\n385\n00:20:49.422 --> 00:20:51.564\nAnd one of the reasons it\ndoesn't do that is well,\n\n386\n00:20:51.564 --> 00:20:54.981\nthere's no guarantee that every time you\nsave a change that you're completely\n\n387\n00:20:54.981 --> 00:20:57.208\nfinished with what you're changing, right?\n\n388\n00:20:57.208 --> 00:21:00.670\nI wanna just take a snapshot just in\ncase something goes horribly awry.\n\n389\n00:21:00.670 --> 00:21:02.360\nBut I still need to do other things.\n\n390\n00:21:02.360 --> 00:21:07.050\nSo you have to manually handle that, and\nwell, they're not quite the same workflow.\n\n391\n00:21:07.050 --> 00:21:10.670\nBut we will definitely touch on how do\nI use this in a collaborative sense?\n\n392\n00:21:10.670 --> 00:21:13.815\n&gt;&gt; Sounds good, cuz it definitely\nsounds like there's some really good\n\n393\n00:21:13.815 --> 00:21:17.985\nuse cases for using Git just by yourself\nas well as using it with the team.\n\n394\n00:21:17.985 --> 00:21:20.025\nBut anything else we need\nto cover in this episode?\n\n395\n00:21:20.025 --> 00:21:22.665\n&gt;&gt; So I think this is a good\nstopping point, right?\n\n396\n00:21:22.665 --> 00:21:24.195\nWe've created the repo and\n\n397\n00:21:24.195 --> 00:21:27.195\nin upcoming episodes we're gonna\nsee how to actually make changes,\n\n398\n00:21:27.195 --> 00:21:31.585\nhow to manage these remote links that\nwe've kind of seen a little bit here.\n\n399\n00:21:31.585 --> 00:21:35.590\nAnd then how do we make those syncs and\nI messed up.\n\n400\n00:21:35.590 --> 00:21:36.637\nHow do I roll back?\n\n401\n00:21:36.637 --> 00:21:40.290\nSo we do have a lot more to cover, but\nI think this is a good stopping point.\n\n402\n00:21:40.290 --> 00:21:43.260\n&gt;&gt; Perfect, and now we have a pretty\ngood understanding of how to set it up,\n\n403\n00:21:43.260 --> 00:21:44.510\nhow to use the system.\n\n404\n00:21:44.510 --> 00:21:47.633\nBut moving forward we're gonna\nreally get into kind of the meat and\n\n405\n00:21:47.633 --> 00:21:49.823\npotatoes in the power and\nwhy you wanna use it.\n\n406\n00:21:49.823 --> 00:21:53.473\nBut like Justin said, that's gonna\nhave to wait for another episode.\n\n407\n00:21:53.473 --> 00:21:55.820\nSo for now,\ngoing to go ahead and sign off.\n\n408\n00:21:55.820 --> 00:21:57.083\nI've been Peter VanRysdam.\n\n409\n00:21:57.083 --> 00:21:58.387\n&gt;&gt; And I'm Justin Dennison.\n\n410\n00:21:58.387 --> 00:22:01.020\n&gt;&gt; And we'll see you next time.\n\n411\n00:22:01.020 --> 00:22:06.878\n[MUSIC]\n\n412\n00:22:06.878 --> 00:22:10.040\n&gt;&gt; Thank you for watching ITProTV.\n\n",
          "vimeoId": "213218849"
        },
        {
          "description": "Once you've setup your repository, it's time to get to work. Justin and Peter will show you how to get your project into your repository while highlighting the differences between untracked, unmodified, modified, staged, and committed changes.",
          "length": "1240",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-introtogit/techskills-introtogit-4-1-making_changes_to_a_git_repository-041217-PGM.00_20_26_07.Still001.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-introtogit/techskills-introtogit-4-1-making_changes_to_a_git_repository-041217-PGM.00_20_26_07.Still001-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-introtogit/techskills-introtogit-4-1-making_changes_to_a_git_repository-041217-PGM.00_20_26_07.Still001-sm.jpg",
          "title": "Making Changes to a Git Repository",
          "transcript": "WEBVTT\n\n1\n00:00:00.008 --> 00:00:02.521\nWelcome to ITProTV I'm\nyour host Don Pezet.\n\n2\n00:00:02.521 --> 00:00:06.241\n[CROSSTALK]\n\n3\n00:00:06.241 --> 00:00:08.320\n[MUSIC]\n\n4\n00:00:08.320 --> 00:00:13.980\n&gt;&gt; You are watching ITProTV.\n&gt;&gt; Hello and welcome to ITProTV.\n\n5\n00:00:13.980 --> 00:00:15.706\nI'm your host Peter VanRysdam and\n\n6\n00:00:15.706 --> 00:00:19.040\ntoday we're continuing our series\non an Introduction to Git.\n\n7\n00:00:19.040 --> 00:00:22.340\nAnd specifically in this episode we\nare talking about making changes\n\n8\n00:00:22.340 --> 00:00:23.720\nto Git repository.\n\n9\n00:00:23.720 --> 00:00:27.563\nSomeone who's made lots of changes in his\nlife to many Git repositories, I assume.\n\n10\n00:00:27.563 --> 00:00:28.760\nThat's Mr. Justin Dennison.\n\n11\n00:00:28.760 --> 00:00:30.420\nJustin, how are you doing?\n&gt;&gt; I'm doing well, Peter.\n\n12\n00:00:30.420 --> 00:00:31.690\nHow are you today?\n&gt;&gt; I'm great.\n\n13\n00:00:31.690 --> 00:00:33.450\nAnd am I right, have you done this before?\n\n14\n00:00:33.450 --> 00:00:34.901\n&gt;&gt; Well, yes, yes, I have.\n\n15\n00:00:34.901 --> 00:00:37.716\nNow, maybe you're\noverselling a little bit but\n\n16\n00:00:37.716 --> 00:00:40.950\nI have made a few changes in\nmy life to Git repositories.\n\n17\n00:00:40.950 --> 00:00:43.520\nAnd that's kind of the main idea, right?\n\n18\n00:00:43.520 --> 00:00:45.170\nI wanna track these changes and\n\n19\n00:00:45.170 --> 00:00:48.320\nthe only way I can track them is well\nknowing how to make the changes and\n\n20\n00:00:48.320 --> 00:00:53.340\nkeep those in the local history in order\nto sync those with some remote history.\n\n21\n00:00:53.340 --> 00:00:55.264\nNow before we start into this,\n\n22\n00:00:55.264 --> 00:00:58.753\njust as in a previous episode\nwe looked at GitHub right?\n\n23\n00:00:58.753 --> 00:01:02.570\nWe're only gonna focus on the local\nchanges for now and then later on a future\n\n24\n00:01:02.570 --> 00:01:05.928\nepisodes, you'll actually see how\nthat get sent to a Git server.\n\n25\n00:01:05.928 --> 00:01:09.020\nSo right now,\nwe're just gonna focus locally.\n\n26\n00:01:09.020 --> 00:01:10.910\nNow, how do I track changes?\n\n27\n00:01:10.910 --> 00:01:12.412\nHow do I make changes?\n\n28\n00:01:12.412 --> 00:01:16.135\nBefore we can actually take a look at\nthat, let's talk about what's going on.\n\n29\n00:01:16.135 --> 00:01:19.370\nWhen I created a git repo, right?\n\n30\n00:01:19.370 --> 00:01:21.700\nI go on my folder, I type git init.\n\n31\n00:01:21.700 --> 00:01:26.170\nI set up that .git directory and it's\ntracking all of this, what's going on.\n\n32\n00:01:26.170 --> 00:01:32.529\nAnd then I make a file like a README or\na .PY file or some Java file or C file.\n\n33\n00:01:32.529 --> 00:01:34.842\nThat file comes in to the Git\nrepo as an untracked file.\n\n34\n00:01:34.842 --> 00:01:39.310\nGit will not track anything that\nyou haven't told it to, right?\n\n35\n00:01:39.310 --> 00:01:41.690\nBrand new files are untracked by nature.\n\n36\n00:01:41.690 --> 00:01:46.570\nThey will never be tracked for\nfuture snapshotting until you tell Git,\n\n37\n00:01:46.570 --> 00:01:48.890\nhey, I need you to track this file.\n\n38\n00:01:50.280 --> 00:01:53.920\nSo, when I have an untracked file,\nwhat do I need to do in order for\n\n39\n00:01:53.920 --> 00:01:54.950\nit to be tracked?\n\n40\n00:01:54.950 --> 00:01:59.246\nI have to add it to the stage, and\nthen commit it to the local history.\n\n41\n00:01:59.246 --> 00:02:04.206\nAt that point, it will never become\nan untract file unless well you dive\n\n42\n00:02:04.206 --> 00:02:08.092\ndeep into the realm and\nget removed it from the history,\n\n43\n00:02:08.092 --> 00:02:13.730\ncompletely remove it from all of previous\nchanges and well, it's still there.\n\n44\n00:02:13.730 --> 00:02:19.132\nYou've already removed it from history,\nnot necessarily from the file system.\n\n45\n00:02:19.132 --> 00:02:23.171\nAfter you've staged and committed an\nuntracked file, it'll go to an unmodified\n\n46\n00:02:23.171 --> 00:02:27.035\nstate and what that means is you've\nmade previous changes, you've added and\n\n47\n00:02:27.035 --> 00:02:30.161\ncommitted, all right that file and\nnow it's just hanging up.\n\n48\n00:02:30.161 --> 00:02:31.420\nThere's nothing been touched about it.\n\n49\n00:02:31.420 --> 00:02:35.060\nAnd it will stay that way until\nyou make modifications to it.\n\n50\n00:02:35.060 --> 00:02:37.139\nWhether it'd be a JPEG file or\n\n51\n00:02:37.139 --> 00:02:40.805\nPNG some PDF file that you're\nkeeping in a Git repo.\n\n52\n00:02:40.805 --> 00:02:45.626\nOr, in my case, a lot of times,\nit's source code, right?\n\n53\n00:02:45.626 --> 00:02:46.895\nI'm changing code.\nAt that point,\n\n54\n00:02:46.895 --> 00:02:49.874\nthat unmodified file transitions\nto a modified state.\n\n55\n00:02:49.874 --> 00:02:52.116\nGit is only telling you well,\n\n56\n00:02:52.116 --> 00:02:56.426\nsome changes have been made\nto the file inside this repo.\n\n57\n00:02:56.426 --> 00:02:58.860\nAnd it does nothing else at that point.\n\n58\n00:02:58.860 --> 00:03:02.290\nIt is up to you to take\nit from a modified state,\n\n59\n00:03:02.290 --> 00:03:06.590\nafter you've made those changes, and\nthen commit those changes once again.\n\n60\n00:03:06.590 --> 00:03:09.870\nAnd the only way you can do that\nis to transition through what\n\n61\n00:03:09.870 --> 00:03:13.650\nthe fourth state it,\nthe staged state, okay?\n\n62\n00:03:13.650 --> 00:03:17.690\nSo when I've made changes or when I create\na new file, if I add it to the stage,\n\n63\n00:03:17.690 --> 00:03:23.180\nwell then I'm in that staged state that's\nkinda hard to say Peter, staged state so.\n\n64\n00:03:23.180 --> 00:03:24.330\n&gt;&gt; You did that well.\n\n65\n00:03:24.330 --> 00:03:26.659\n&gt;&gt; Well thank you that makes\nme feel good about myself.\n\n66\n00:03:26.659 --> 00:03:29.414\nSo once I stage it I'm telling Git hay,\n\n67\n00:03:29.414 --> 00:03:33.838\nthis is the file that I want to\ncommit to this actual snapshot and\n\n68\n00:03:33.838 --> 00:03:39.570\nGit will track that, commit those,\nonly after I make that commit right.\n\n69\n00:03:39.570 --> 00:03:42.615\nSo those are the four stages\nthat we go through, and well,\n\n70\n00:03:42.615 --> 00:03:46.049\nthat's pretty much how we're\ngonna iterate through using Git.\n\n71\n00:03:46.049 --> 00:03:50.854\n&gt;&gt; So I'm a visual learner, I'd love\nit if you could walk us through those\n\n72\n00:03:50.854 --> 00:03:53.991\nsteps in the Git you got\non your local machine.\n\n73\n00:03:53.991 --> 00:03:56.214\n&gt;&gt; Ooh,\nthe Git I got on my local machine, well,\n\n74\n00:03:56.214 --> 00:03:58.830\nwe're about to get started getting Git.\n\n75\n00:03:58.830 --> 00:04:00.081\nI'll get up and start it, I don't know.\n\n76\n00:04:00.081 --> 00:04:03.200\nThis is gonna be a running joke, I'm sure.\n\n77\n00:04:03.200 --> 00:04:05.890\nSo well, actually,\nlet's take a look at my screen.\n\n78\n00:04:05.890 --> 00:04:07.920\nAnd then, we're gonna do\na little bit of a review, right?\n\n79\n00:04:07.920 --> 00:04:10.870\nIn a previous episode,\nwe saw how to make a local git repo.\n\n80\n00:04:10.870 --> 00:04:12.450\nIt's actually very, very simple.\n\n81\n00:04:12.450 --> 00:04:15.533\nAnd then,\nwe're going to make a few commits and\n\n82\n00:04:15.533 --> 00:04:18.800\ntalk about what's going\non with these files.\n\n83\n00:04:18.800 --> 00:04:22.250\nAll right, so I'm on my desktop and\nI'm just gonna make a directory and\n\n84\n00:04:22.250 --> 00:04:23.220\nlet's call it changes.\n\n85\n00:04:23.220 --> 00:04:24.616\nAnd then I wanna hop into changes.\n\n86\n00:04:24.616 --> 00:04:26.839\nNow I need this to be a Git Repo.\n\n87\n00:04:26.839 --> 00:04:29.799\nRight now if I try to do\nanything git right and\n\n88\n00:04:29.799 --> 00:04:33.168\nwe'll talk about what\nstatus is in just a moment.\n\n89\n00:04:33.168 --> 00:04:36.890\nI will see fatal not a git repository.\n\n90\n00:04:36.890 --> 00:04:39.924\nIf you ever see that well\nit's not a Git repository and\n\n91\n00:04:39.924 --> 00:04:41.955\nyou can use Git inside this folder.\n\n92\n00:04:41.955 --> 00:04:46.720\nOkay, well that gives me a hint\nthat I should type git init.\n\n93\n00:04:46.720 --> 00:04:50.590\nAt that point I have that\nhidden.git directory and\n\n94\n00:04:50.590 --> 00:04:55.780\nnow I can start tracking, seeing those\nchanges, and it's all good to go.\n\n95\n00:04:55.780 --> 00:04:59.150\nNow, this is as far as we\ngot in the previous episode.\n\n96\n00:04:59.150 --> 00:05:01.170\nWe took a look at what's\ngoing on behind the scenes.\n\n97\n00:05:02.440 --> 00:05:03.324\nBut now, what do I do?\n\n98\n00:05:03.324 --> 00:05:05.180\nHow do I know what changes?\n\n99\n00:05:05.180 --> 00:05:06.110\nWhat is untracked?\n\n100\n00:05:06.110 --> 00:05:07.060\nWhat is unmodified?\n\n101\n00:05:07.060 --> 00:05:09.725\nWhat's been modified?\nThere's a few set of commands,\n\n102\n00:05:09.725 --> 00:05:12.230\nthat I tend to, I almost spam them.\n\n103\n00:05:12.230 --> 00:05:13.800\nThey are almost like second nature.\n\n104\n00:05:13.800 --> 00:05:18.065\nI'm cognitive kind of just reflexes,\nand git status is one of those.\n\n105\n00:05:18.065 --> 00:05:21.086\nSo if I'm in a git repo,\nI would type git status, and\n\n106\n00:05:21.086 --> 00:05:22.958\nyou'll see kind of a print out.\n\n107\n00:05:22.958 --> 00:05:23.607\nIt'll say,\n\n108\n00:05:23.607 --> 00:05:27.570\non branch master, and we'll talk about\nwhat branches are in a future episode.\n\n109\n00:05:27.570 --> 00:05:30.260\nAnd initial commit.\n\n110\n00:05:30.260 --> 00:05:30.989\nWell, that's kinda weird.\n\n111\n00:05:30.989 --> 00:05:32.730\nI haven't committed anything.\n\n112\n00:05:32.730 --> 00:05:36.344\nAnd this is kinda it's not\nquite what I would like to see,\n\n113\n00:05:36.344 --> 00:05:41.484\nbecause really we don't have anything\ncommitted yet, we will in just a moment.\n\n114\n00:05:41.484 --> 00:05:45.419\nAnd then, it says nothing to commit,\ncreate copy files, and\n\n115\n00:05:45.419 --> 00:05:47.310\nuse git add to track.\n\n116\n00:05:47.310 --> 00:05:51.970\nOkay, so when you're first starting out,\ngit is actually helping you along\n\n117\n00:05:51.970 --> 00:05:55.270\nas long as you read these little\nprompts when you type git status.\n\n118\n00:05:55.270 --> 00:05:58.870\nOr if something goes wrong,\nit'll tell you kind of what's wrong.\n\n119\n00:05:58.870 --> 00:06:01.370\nSo let's go ahead and make a file right?\n\n120\n00:06:01.370 --> 00:06:06.100\nWe're gonna move this file into what's\ncreated new, so it would be untracked.\n\n121\n00:06:06.100 --> 00:06:07.470\nSo I'm just gonna touch.\n\n122\n00:06:07.470 --> 00:06:10.870\nNow if you're on Windows if you're\nin git bash this will work.\n\n123\n00:06:10.870 --> 00:06:15.090\nIf you're in the Windows command prompt or\nPowerShell your mileage may vary but\n\n124\n00:06:15.090 --> 00:06:18.160\nif you're on Mac OS or\nLinux you're all good to go.\n\n125\n00:06:18.160 --> 00:06:20.150\nSo that's the important thing to remember.\n\n126\n00:06:20.150 --> 00:06:21.571\nSo let's create a READ.me.\n\n127\n00:06:21.571 --> 00:06:23.929\nSo a READ.me is a good thing to have and\n\n128\n00:06:23.929 --> 00:06:28.521\nactually using GitHub as we'll see\na READ.me is almost kind of assumed.\n\n129\n00:06:28.521 --> 00:06:32.611\nAnd READ.mes are written in two formats,\neither mark down or restructured text.\n\n130\n00:06:32.611 --> 00:06:38.080\nAnd that's a little outside the scope here\nbut keep in mind if you have a Git Repo.\n\n131\n00:06:38.080 --> 00:06:42.030\nYou should have a READ.me,\nwhich is well, what is this get repo?\n\n132\n00:06:42.030 --> 00:06:42.790\nHow do I use it?\n\n133\n00:06:42.790 --> 00:06:43.830\nWhat is it good for?\n\n134\n00:06:43.830 --> 00:06:44.756\nLike why is it important?\n\n135\n00:06:44.756 --> 00:06:48.979\nAnd well, this is a good way to get\npeople to look at your code, or\n\n136\n00:06:48.979 --> 00:06:51.820\nto look at your project\nwhatever it may be.\n\n137\n00:06:52.840 --> 00:06:54.038\nSo I'm gonna touch.\n\n138\n00:06:54.038 --> 00:06:58.110\nNow on my,\nbecause I'm using on a modified shell and\n\n139\n00:06:58.110 --> 00:07:01.820\non Windows you will see this\nlittle x appear, right?\n\n140\n00:07:01.820 --> 00:07:05.260\nIf you're using git bash or Windows\nyou'll see this little x appear and\n\n141\n00:07:05.260 --> 00:07:09.130\nthat means something has changed\ninside the git repo, okay?\n\n142\n00:07:09.130 --> 00:07:10.284\nJust to make sure we know.\n\n143\n00:07:10.284 --> 00:07:13.310\nRight there, that little x.\n\n144\n00:07:13.310 --> 00:07:17.900\nIf you are in a different environment,\nit will not tell you.\n\n145\n00:07:17.900 --> 00:07:22.170\nHow would you know that something is\nuntracked, or have been modified?\n\n146\n00:07:22.170 --> 00:07:24.695\nWell you know that command that I\ntalked about spamming all the time?\n\n147\n00:07:24.695 --> 00:07:28.430\nI'm now gonna type git status okay?\n\n148\n00:07:28.430 --> 00:07:29.910\nIt still says I'm on branch master.\n\n149\n00:07:29.910 --> 00:07:36.677\nI'm on the initial commit but then it\ngives me a list of untracked files right?\n\n150\n00:07:36.677 --> 00:07:39.793\nSo my Git repo is not tracking\nthese files as of right now.\n\n151\n00:07:39.793 --> 00:07:45.290\nI only have untracked files which means\nwell I can change this all I want and\n\n152\n00:07:45.290 --> 00:07:49.480\nthere's no way that I have\nsome kinda version control.\n\n153\n00:07:49.480 --> 00:07:51.726\nIt would not be pushed to Git Hub,\nit would not be,\n\n154\n00:07:51.726 --> 00:07:53.449\nit would have we roll back if I mess up.\n\n155\n00:07:53.449 --> 00:07:58.336\nSo how do I actually put this,\nwell on track so to speak?\n\n156\n00:07:58.336 --> 00:08:02.772\nWell It tells you right here,\nalways read these prompts.\n\n157\n00:08:02.772 --> 00:08:05.890\nIt amazes me when people start\nusing this command line.\n\n158\n00:08:05.890 --> 00:08:07.960\nIf you're in the command line,\nthey'll give you these prompts.\n\n159\n00:08:07.960 --> 00:08:10.230\nIf you're using some of\nthe graphical user interfaces,\n\n160\n00:08:10.230 --> 00:08:11.960\nthey don't always tell you this.\n\n161\n00:08:11.960 --> 00:08:14.981\nIf you just read some of\nthese little snippets,\n\n162\n00:08:14.981 --> 00:08:17.936\nit'll get you a great\ndeal as far as using Git.\n\n163\n00:08:17.936 --> 00:08:22.044\nSo, let's actually say git add,\n\n164\n00:08:22.044 --> 00:08:25.592\nand then README.md, okay?\n\n165\n00:08:25.592 --> 00:08:31.040\nSo, I didn't get a printout,\ndoesn't say anything went wrong, okay?\n\n166\n00:08:31.040 --> 00:08:32.330\nI still have this yellow x.\n\n167\n00:08:32.330 --> 00:08:36.920\nWell, there are still changes that\nhave been made, what's going on?\n\n168\n00:08:36.920 --> 00:08:38.410\nThat's kinda weird.\n\n169\n00:08:38.410 --> 00:08:41.761\nSo, if I type that command again,\n\n170\n00:08:41.761 --> 00:08:48.032\ngit status that I tend to spam,\nI'm on master branch.\n\n171\n00:08:48.032 --> 00:08:49.740\nStill listing this is the initial commit,\n\n172\n00:08:49.740 --> 00:08:52.230\nand we'll talk about what\nthat is in just a moment.\n\n173\n00:08:52.230 --> 00:08:54.339\nBut here are the changes to be committed.\n\n174\n00:08:55.460 --> 00:08:57.170\nNotice this is printed out in green.\n\n175\n00:08:57.170 --> 00:09:03.850\nI have moved this untracked file\nto the staged state, right?\n\n176\n00:09:03.850 --> 00:09:07.670\nI'm getting ready to commit\nthis to my git-repo.\n\n177\n00:09:07.670 --> 00:09:09.510\nIt's still not saved, right?\n\n178\n00:09:09.510 --> 00:09:14.020\nI've just went to the save point and\nsaid, clicked, are you ready to save?\n\n179\n00:09:14.020 --> 00:09:14.850\nAre you sure?\n\n180\n00:09:15.890 --> 00:09:17.480\nNow, I have to say yes.\n\n181\n00:09:17.480 --> 00:09:23.740\nOkay, so how do I actually save this and\nmake a snapshot in my git-repo?\n\n182\n00:09:23.740 --> 00:09:27.110\nWell, I have to commit these\nchanges to the database.\n\n183\n00:09:27.110 --> 00:09:30.640\nNow if you've been in a database\nenvironment for a while,\n\n184\n00:09:30.640 --> 00:09:35.790\nyou'll hear about commits and transactions\nin specifically, the relational world.\n\n185\n00:09:35.790 --> 00:09:37.066\nSo this is very similar to that.\n\n186\n00:09:37.066 --> 00:09:43.468\nSo git commit, and typically,\nI will type -m and\n\n187\n00:09:43.468 --> 00:09:47.910\nalways write a quoted message.\n\n188\n00:09:47.910 --> 00:09:50.280\nNow why is this message important?\n\n189\n00:09:50.280 --> 00:09:53.030\nWell, I'm gonna show you a bad message.\n\n190\n00:09:54.510 --> 00:09:56.085\nStuff and things.\n\n191\n00:09:56.085 --> 00:09:57.618\nThat's the message.\n\n192\n00:09:57.618 --> 00:10:02.167\nSo I'm gonna hit Enter and\nit actually made a labelled\n\n193\n00:10:02.167 --> 00:10:06.324\nchange called stuff and\nthings to my git-repo.\n\n194\n00:10:06.324 --> 00:10:10.310\nBut now, if Peter comes behind me and\nwants to know what changes have I made,\n\n195\n00:10:10.310 --> 00:10:14.545\nI pushed this to git hub and he pulled it\ndown, he's gonna see that listed as stuff\n\n196\n00:10:14.545 --> 00:10:18.230\nand things and\nthat's not gonna be helpful to him.\n\n197\n00:10:18.230 --> 00:10:22.210\nYou should make your commit\nmessages very explicit.\n\n198\n00:10:22.210 --> 00:10:24.640\nNow they don't have to be novellas, but\n\n199\n00:10:24.640 --> 00:10:28.780\nthey should give me some idea of,\nhey, how's this working?\n\n200\n00:10:28.780 --> 00:10:30.770\nHow is this coming along.\n\n201\n00:10:30.770 --> 00:10:33.450\n&gt;&gt; So are there standards for\ncreating a message like that or\n\n202\n00:10:33.450 --> 00:10:37.730\nis that just standards we come up with\nas a programming team in this case?\n\n203\n00:10:37.730 --> 00:10:39.590\n&gt;&gt; So that's a very good question.\n\n204\n00:10:39.590 --> 00:10:43.730\nTypically, I recommend being\nfairly concise yet descriptive.\n\n205\n00:10:43.730 --> 00:10:46.650\nI know that's still kinda abstract and\nbroad.\n\n206\n00:10:46.650 --> 00:10:49.260\nYou should be able to come back and\nread your commit message and\n\n207\n00:10:49.260 --> 00:10:52.190\nknow exactly what you have accomplished,\nright?\n\n208\n00:10:52.190 --> 00:10:55.200\nWhat would be a better message for\nwhat we just did?\n\n209\n00:10:55.200 --> 00:10:58.110\nAdded read me to git repo, right?\n\n210\n00:10:58.110 --> 00:11:01.380\nOr added read me,\nthat tells me exactly what happened.\n\n211\n00:11:01.380 --> 00:11:03.820\nNow, they're not always that short.\n\n212\n00:11:03.820 --> 00:11:06.940\nWith that in mind, and\nwhen you're part of a programming team or\n\n213\n00:11:06.940 --> 00:11:10.790\npart of a creative team,\nif you're using Git for version control,\n\n214\n00:11:10.790 --> 00:11:14.980\nyou may have a set of standards that\neverybody's expected to abide by, right?\n\n215\n00:11:14.980 --> 00:11:18.887\nLike maybe including a date,\nmaybe including some kind of list and\n\n216\n00:11:18.887 --> 00:11:20.502\nyou should abide by those.\n\n217\n00:11:20.502 --> 00:11:23.676\nBut for me, I like it to be descriptive\nenough that if I come back and\n\n218\n00:11:23.676 --> 00:11:26.966\nread it later and we'll actually take\na look at that in just a moment,\n\n219\n00:11:26.966 --> 00:11:28.808\nI know exactly what that commit does.\n\n220\n00:11:28.808 --> 00:11:33.626\nBecause I'm not gonna be able to leverage\nthe power of being able to roll back or\n\n221\n00:11:33.626 --> 00:11:37.130\nmove back in time and\nlook at that snapshot if I have to go,\n\n222\n00:11:37.130 --> 00:11:41.100\nwell did I make that breaking\nchange while stuff and things one?\n\n223\n00:11:41.100 --> 00:11:43.180\nStuff and things two,\nstuff and things three,\n\n224\n00:11:43.180 --> 00:11:47.970\nthat would be better if like you know\nit was when I added the read me file.\n\n225\n00:11:47.970 --> 00:11:51.040\nAnd I look at the git commit and\nit says add readme.\n\n226\n00:11:51.040 --> 00:11:54.170\nSo, always have good commit messages.\n\n227\n00:11:54.170 --> 00:11:57.790\nI can't emphasize that enough, especially\nif you're just getting started programming\n\n228\n00:11:57.790 --> 00:12:02.640\nor maybe you're having some trouble,\nif you ask for help, well, someone can\n\n229\n00:12:02.640 --> 00:12:06.870\ncome back and go, I know exactly what\nyou did, and here's probably your error.\n\n230\n00:12:06.870 --> 00:12:08.740\nAnd it's gonna help them help you.\n\n231\n00:12:08.740 --> 00:12:10.750\nSo it's kind of a huge payoff for\neveryone.\n\n232\n00:12:10.750 --> 00:12:12.480\n&gt;&gt; So that seems pretty easy.\n\n233\n00:12:12.480 --> 00:12:16.630\nIs that really all there is to\nusing git for version management?\n\n234\n00:12:16.630 --> 00:12:19.870\n&gt;&gt; So that's the first two states,\nuntracked and, well,\n\n235\n00:12:19.870 --> 00:12:22.360\nI went to step, excuse me, first three.\n\n236\n00:12:22.360 --> 00:12:26.960\nI went to untracked, and then I staged\nthat untracked file and committed it.\n\n237\n00:12:26.960 --> 00:12:31.040\nAnd at this point,\nit has transitioned to unmodified.\n\n238\n00:12:31.040 --> 00:12:35.070\nSo, if we take a look at my screen here,\nI made this commit and\n\n239\n00:12:35.070 --> 00:12:39.560\nnow if I type git status it says,\non branch master, nothing to commit.\n\n240\n00:12:39.560 --> 00:12:41.930\nIt changed that commit message,\nor excuse me,\n\n241\n00:12:41.930 --> 00:12:44.550\nthat print out a little bit right here.\n\n242\n00:12:44.550 --> 00:12:47.800\nSo I'm on the master branch, we'll talk\nabout those later, nothing to commit.\n\n243\n00:12:47.800 --> 00:12:50.570\nThat means I have no modified.\n\n244\n00:12:50.570 --> 00:12:51.980\nAll of my files are unmodified.\n\n245\n00:12:51.980 --> 00:12:56.570\nAnd all of the files that are current\nin the repo are being tracked.\n\n246\n00:12:56.570 --> 00:13:00.800\nOkay well hm,\nwhat happens if I change that file.\n\n247\n00:13:00.800 --> 00:13:04.120\nLike I actually wanna make a read me,\nright?\n\n248\n00:13:04.120 --> 00:13:06.280\nSo, let's actually change that file.\n\n249\n00:13:07.650 --> 00:13:11.069\nSo I am going through some changes.\n\n250\n00:13:13.638 --> 00:13:15.510\nSo there we go.\n\n251\n00:13:15.510 --> 00:13:18.170\nNow I've made a change to the readme file.\n\n252\n00:13:19.410 --> 00:13:21.800\nNotice that the little x showed up again.\n\n253\n00:13:22.970 --> 00:13:26.720\nThere's no guarantee on your system\nthat the x is gonna show up.\n\n254\n00:13:26.720 --> 00:13:28.490\nSo, well how do I know?\n\n255\n00:13:29.800 --> 00:13:33.520\nI come back to that spam command,\ngit status.\n\n256\n00:13:33.520 --> 00:13:36.920\nAnd now I have a little bit different\nprint out on branch master,\n\n257\n00:13:36.920 --> 00:13:38.680\nchanges not staged for commit.\n\n258\n00:13:38.680 --> 00:13:43.360\nI have modified an existing tracked file.\n\n259\n00:13:43.360 --> 00:13:45.810\nSo now this file's in the modified state,\n\n260\n00:13:45.810 --> 00:13:48.690\nthere's nothing that says I\nhave to commit these changes.\n\n261\n00:13:48.690 --> 00:13:52.330\nBut I updated the README, I fixed some\ntypos, I actually wrote the README.\n\n262\n00:13:52.330 --> 00:13:54.700\nI probably want to, well,\n\n263\n00:13:54.700 --> 00:14:00.320\ncommit those changes to be snapshotted so\nI can have that work through.\n\n264\n00:14:00.320 --> 00:14:05.310\nSo, I git add, and notice this is\nvery similar to what I did and\n\n265\n00:14:05.310 --> 00:14:06.460\nthere are shortcuts to this.\n\n266\n00:14:06.460 --> 00:14:09.630\nI keep this very atomic and discrete.\n\n267\n00:14:09.630 --> 00:14:14.610\nInitially, it'll tell you git commit -a,\nthat will actually add all\n\n268\n00:14:14.610 --> 00:14:19.730\nmodified but\nit does not add all untracked files.\n\n269\n00:14:19.730 --> 00:14:21.660\nSo that's a little odd there.\n\n270\n00:14:21.660 --> 00:14:23.150\nSo, git add.\n\n271\n00:14:23.150 --> 00:14:27.240\nAnd now, if I type this status,\nI've taken that modified file\n\n272\n00:14:27.240 --> 00:14:31.420\nback to the staged state, stage state.\n\n273\n00:14:31.420 --> 00:14:32.670\nThat's gonna get me Peter.\n\n274\n00:14:32.670 --> 00:14:33.266\nThat's gonna get me.\n\n275\n00:14:33.266 --> 00:14:37.310\nAnd now, I can add another commit.\n\n276\n00:14:37.310 --> 00:14:39.180\nI made a change, I'm gonna commit.\n\n277\n00:14:39.180 --> 00:14:41.480\nI made a change, I'm gonna commit.\n\n278\n00:14:41.480 --> 00:14:43.520\nAnd I recommend committing early and\noften.\n\n279\n00:14:43.520 --> 00:14:47.010\nNow your team may have different\nthings that they wanna do, but\n\n280\n00:14:47.010 --> 00:14:49.880\nI find it very helpful if I can\nalmost keep it like a journal.\n\n281\n00:14:49.880 --> 00:14:52.400\nHere's what I did, here's what I did,\nhere's what I did.\n\n282\n00:14:52.400 --> 00:14:54.620\nSo git commit -m, and what did I do?\n\n283\n00:14:54.620 --> 00:14:58.450\nWell, added the title to the read me.\n\n284\n00:14:59.710 --> 00:15:01.990\nNotice that commit message\nis more descriptive and\n\n285\n00:15:01.990 --> 00:15:06.670\nis going to help me, well, it's gonna help\nme move back in time and fix anything\n\n286\n00:15:06.670 --> 00:15:10.600\nthat was caused by this commit because\nI don't have to go looking around.\n\n287\n00:15:10.600 --> 00:15:15.435\nNow I've been talking a great deal about\nhow it's moving back in time reading these\n\n288\n00:15:15.435 --> 00:15:18.940\ncommit messages, how does that actually,\nwell how does that work?\n\n289\n00:15:20.290 --> 00:15:24.240\nSo, this is not actually\nabout making changes but\n\n290\n00:15:24.240 --> 00:15:28.010\ngit comes with a set of tools to help\nyou see, hey what have you done?\n\n291\n00:15:28.010 --> 00:15:29.650\nWhat changes have you made?\n\n292\n00:15:29.650 --> 00:15:32.230\nSo I can say git log and\n\n293\n00:15:32.230 --> 00:15:36.570\nI will get a lot of all the things that\nI have done thus far in this repo.\n\n294\n00:15:37.660 --> 00:15:40.220\n&gt;&gt; Now if this was a repo that\nyou had shared on a server,\n\n295\n00:15:40.220 --> 00:15:42.240\nwould you be seeing everyone's changes or\njust your own?\n\n296\n00:15:42.240 --> 00:15:44.880\n&gt;&gt; Absolutely,\nyou will see everyone's changes.\n\n297\n00:15:44.880 --> 00:15:49.750\nSo, if you had made the sec commit,\nPeter, your username, and\n\n298\n00:15:49.750 --> 00:15:54.310\nthe time that you made that change, and\nyour commit message would be there.\n\n299\n00:15:54.310 --> 00:15:55.650\nAnd then I could check out your work.\n\n300\n00:15:55.650 --> 00:15:56.580\nYou could look at my work.\n\n301\n00:15:56.580 --> 00:15:58.860\nAnd we could see how everybody's working.\n\n302\n00:15:58.860 --> 00:16:02.726\nAnd interestingly enough, git has this\ncommand, I don't recommend using it but\n\n303\n00:16:02.726 --> 00:16:04.698\nit is kind of novel, it's called blame.\n\n304\n00:16:04.698 --> 00:16:07.272\nAnd if someone goes, no,\nI didn't make that change.\n\n305\n00:16:07.272 --> 00:16:09.264\nYou say, git blame, go to a file name.\n\n306\n00:16:09.264 --> 00:16:13.560\nAnd it will go line by line and it'll\ntell you which author made that change.\n\n307\n00:16:14.690 --> 00:16:15.990\nIt's not a great management tool.\n\n308\n00:16:15.990 --> 00:16:18.802\n&gt;&gt; That really encourages great\nteamwork within your team.\n\n309\n00:16:18.802 --> 00:16:19.312\n&gt;&gt; It does, it does.\n\n310\n00:16:19.312 --> 00:16:21.470\nWell, yeah, don't lie to me.\n\n311\n00:16:21.470 --> 00:16:22.280\nI'm gonna blame you.\n\n312\n00:16:22.280 --> 00:16:23.695\nSo yeah, I don't recommend this.\n\n313\n00:16:23.695 --> 00:16:26.685\nIt's kind of fun just to see\nsomeone left the company, or\n\n314\n00:16:26.685 --> 00:16:31.190\nsomeone like that if you wanna see, hey,\nhow much of this file is still around?\n\n315\n00:16:31.190 --> 00:16:34.870\nThat's actually what I use it if there's\nbeen a lot of collaborative work.\n\n316\n00:16:34.870 --> 00:16:38.630\nHow much of the original code is there\nthat I wrote or such and such wrote.\n\n317\n00:16:38.630 --> 00:16:40.030\nAnd then I can see that.\n\n318\n00:16:40.030 --> 00:16:41.670\nBut you would see\neverybody's commit history,\n\n319\n00:16:41.670 --> 00:16:45.660\nassuming that well, they've all\nkind of squished it back together.\n\n320\n00:16:45.660 --> 00:16:48.540\nEither on the server, or locally here.\n\n321\n00:16:48.540 --> 00:16:51.010\nSo once I do git log,\nhow do I get out of there?\n\n322\n00:16:51.010 --> 00:16:57.030\nIf I hit ESC, it actually tells me,\nhey, you're hitting the escape button.\n\n323\n00:16:57.030 --> 00:16:58.550\nYou go, no.\n\n324\n00:16:58.550 --> 00:17:01.910\nWell, hit Q, and if you're in\nthe escape mode, it won't work.\n\n325\n00:17:01.910 --> 00:17:04.054\nIf you hit Q again,\nit will actually just escape.\n\n326\n00:17:04.054 --> 00:17:06.030\nSo Q for quit, right?\n\n327\n00:17:06.030 --> 00:17:06.990\nSo Q for quit.\n\n328\n00:17:06.990 --> 00:17:08.430\nNow that's the git log.\n\n329\n00:17:08.430 --> 00:17:12.460\nNow there's one final thing about,\nwell, sometimes I work a great deal.\n\n330\n00:17:13.560 --> 00:17:15.724\nI made a bunch of changes.\n\n331\n00:17:15.724 --> 00:17:16.550\nNo, I forgot.\n\n332\n00:17:16.550 --> 00:17:20.100\nWhat are all the files that I've,\nwhat have I actually changed?\n\n333\n00:17:20.100 --> 00:17:22.390\nAnd just to see that,\nI'm gonna make a change the README again.\n\n334\n00:17:24.070 --> 00:17:27.192\nSome more changes are coming.\n\n335\n00:17:29.421 --> 00:17:33.940\nSo now I have the,\nI've been working for two days.\n\n336\n00:17:33.940 --> 00:17:37.380\nYou should actually commit before\ntwo days, just to be clear.\n\n337\n00:17:37.380 --> 00:17:42.280\nBut if I type git diff,\nit will actually show me line by line,\n\n338\n00:17:42.280 --> 00:17:45.630\nall the changes that I have made\nin every file that is tracked.\n\n339\n00:17:46.680 --> 00:17:48.890\nThat means it is modified.\n\n340\n00:17:48.890 --> 00:17:51.850\nIt has already been added and\ncommitted once before, not brand new.\n\n341\n00:17:53.290 --> 00:17:57.768\nSo some of them still work, they'll\nactually say,hey, this entire file's new.\n\n342\n00:17:57.768 --> 00:18:02.130\nSo git diff will show me every\nchange that I've seen in git, and\n\n343\n00:18:02.130 --> 00:18:05.890\nit says right here,\n+ Some more changes are coming.\n\n344\n00:18:05.890 --> 00:18:08.410\nAnd it happened in the README file.\n\n345\n00:18:08.410 --> 00:18:10.970\nSo that can be helpful for\nkeeping track of what's going on.\n\n346\n00:18:10.970 --> 00:18:15.178\n&gt;&gt; So this is almost like when\nyou're a using word processor.\n\n347\n00:18:15.178 --> 00:18:18.190\nIt'll often autosave for you and\n\n348\n00:18:18.190 --> 00:18:23.310\nthat way you're kind of helping you\nback up in case you forgot to do that.\n\n349\n00:18:23.310 --> 00:18:24.680\nIs that kind of what's happening here?\n\n350\n00:18:24.680 --> 00:18:28.400\nBecause you're not yet staging it, and\nyou haven't yet put it in the repo.\n\n351\n00:18:28.400 --> 00:18:32.230\nBut you're able to kinda track\nthose changes as you go.\n\n352\n00:18:32.230 --> 00:18:33.900\n&gt;&gt; So, it is very similar to that.\n\n353\n00:18:33.900 --> 00:18:37.020\nAnd actually,\nin a lot of modern word processors,\n\n354\n00:18:37.020 --> 00:18:41.250\nthere's a way that you can check a box,\nthat'll say track changes.\n\n355\n00:18:41.250 --> 00:18:44.260\nAnd it'll highlight and show you all\nthe characters that you've changed,\n\n356\n00:18:44.260 --> 00:18:45.666\nall the highlighting, the spaces.\n\n357\n00:18:45.666 --> 00:18:47.540\nIt's doing very similar.\n\n358\n00:18:47.540 --> 00:18:51.330\nBut what's happening is the old\nversion of the README in this case,\n\n359\n00:18:51.330 --> 00:18:55.030\nhas been committed to the database and\nit creates a SHA-1 hash.\n\n360\n00:18:55.030 --> 00:18:59.110\nNow that hash will not change\nunless the file has changed, right?\n\n361\n00:18:59.110 --> 00:19:03.690\nSo when you make those changes\nit does a SHA-1 hash of that\n\n362\n00:19:03.690 --> 00:19:05.630\nnew file of the same name.\n\n363\n00:19:05.630 --> 00:19:09.750\nIf they don't match, it knows that\nchanges have been made to that file.\n\n364\n00:19:09.750 --> 00:19:10.937\nNow how does it do a diff?\n\n365\n00:19:10.937 --> 00:19:13.190\nWell this is kind of entrenched in Linux.\n\n366\n00:19:13.190 --> 00:19:15.260\nAnd it does a line by line diffing.\n\n367\n00:19:15.260 --> 00:19:16.630\nIt'll say, does this line match this line?\n\n368\n00:19:16.630 --> 00:19:18.050\nDoes this line match this line?\n\n369\n00:19:18.050 --> 00:19:19.890\nThe algorithms are really good but\nat a high level,\n\n370\n00:19:19.890 --> 00:19:21.810\nthat's effectively what it does.\n\n371\n00:19:21.810 --> 00:19:25.210\nIt's incredibly powerful because well,\nI can't forget.\n\n372\n00:19:25.210 --> 00:19:29.600\nI keep a journal of what I've been doing\nand now I can push it to a server and\n\n373\n00:19:29.600 --> 00:19:30.960\nshare it with other people.\n\n374\n00:19:30.960 --> 00:19:33.720\n&gt;&gt; That's great for people with\nmemories about as long as mine.\n\n375\n00:19:33.720 --> 00:19:35.140\nSo, Justin,\n\n376\n00:19:35.140 --> 00:19:39.120\nthat's great stuff learning about how\nto actually make changes in the repo.\n\n377\n00:19:39.120 --> 00:19:40.364\nAnything else we need to\ncover in this episode?\n\n378\n00:19:40.364 --> 00:19:44.924\n&gt;&gt; So, I've tried to think about how can I\nsegment this up into a set of skills that\n\n379\n00:19:44.924 --> 00:19:47.650\nI might need to know right now, right?\n\n380\n00:19:47.650 --> 00:19:49.850\nSo we've made a change to a Git repo, but\n\n381\n00:19:49.850 --> 00:19:53.580\nalong the way we've created a Git\nrepo in order to make those changes.\n\n382\n00:19:53.580 --> 00:19:57.190\nSo it'll start to build on itself and\nwe'll see this more and more.\n\n383\n00:19:57.190 --> 00:20:00.120\nBut I think right now, this is probably\ngood, you need to go practice.\n\n384\n00:20:00.120 --> 00:20:04.494\nGo make sure you can git add, git commit,\nand use git log and git diff effectively.\n\n385\n00:20:04.494 --> 00:20:06.846\n&gt;&gt; All right, Justin,\nthat makes a lot of sense and I know,\n\n386\n00:20:06.846 --> 00:20:09.730\nnot to get ahead of ourselves but\nwe're gonna move on to now.\n\n387\n00:20:09.730 --> 00:20:12.640\nMaking some changes and rolling back and\nseeing how all that works.\n\n388\n00:20:12.640 --> 00:20:15.450\nBut now,\nwe understand at least how to go ahead and\n\n389\n00:20:15.450 --> 00:20:18.050\nmake changes in your Git repository.\n\n390\n00:20:18.050 --> 00:20:20.500\nSo, like Justin said,\nthat's gonna do it for this episode.\n\n391\n00:20:20.500 --> 00:20:22.287\nSo we're gonna go ahead and\nsign off for ITProTV.\n\n392\n00:20:22.287 --> 00:20:24.097\nI've been you host, Peter VanRysdam.\n\n393\n00:20:24.097 --> 00:20:25.352\n&gt;&gt; And I'm Justin Dennison.\n\n394\n00:20:25.352 --> 00:20:27.917\n&gt;&gt; And we'll see you next time.\n\n395\n00:20:27.917 --> 00:20:33.966\n[MUSIC]\n\n396\n00:20:33.966 --> 00:20:36.846\n&gt;&gt; Thank you for watching ITProTV.\n\n",
          "vimeoId": "213219576"
        },
        {
          "description": "Mistakes happen, but luckily Git makes it easy to resolve them. Whether you uploaded the wrong file or put it in the wrong place, Justin and Peter will show you how to get things back on track.",
          "length": "1588",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-introtogit/techskills-introtogit-5-1-oh_no_fixing_mistake_with_git-041217-PGM.00_26_35_22.Still001.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-introtogit/techskills-introtogit-5-1-oh_no_fixing_mistake_with_git-041217-PGM.00_26_35_22.Still001-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-introtogit/techskills-introtogit-5-1-oh_no_fixing_mistake_with_git-041217-PGM.00_26_35_22.Still001-sm.jpg",
          "title": "Oh No Fixing Mistake with Git",
          "transcript": "WEBVTT\n\n1\n00:00:00.270 --> 00:00:01.168\nWelcome to ITProTV.\n\n2\n00:00:01.168 --> 00:00:02.329\nI'm your host, Don Pezet.\n\n3\n00:00:02.329 --> 00:00:07.463\n[CROSSTALK]\n[SOUND]\n\n4\n00:00:07.463 --> 00:00:11.648\n&gt;&gt; You're watching ITPro.TV.\n\n5\n00:00:11.648 --> 00:00:13.726\n&gt;&gt; Hello, and welcome to ITProTV.\n\n6\n00:00:13.726 --> 00:00:18.350\nI'm your host, Peter VanRysdam, and today\nwe're continuing our introduction to Git.\n\n7\n00:00:18.350 --> 00:00:22.140\nSpecifically, in this episode\nwe're talking about, no,\n\n8\n00:00:22.140 --> 00:00:24.160\nI've made a mistake in Git.\n\n9\n00:00:24.160 --> 00:00:26.310\nSomething like that,\ncan Git help me fix my mistakes?\n\n10\n00:00:26.310 --> 00:00:27.556\n&gt;&gt; I can't remember I tried to\nsay it cuz that's gone now.\n\n11\n00:00:27.556 --> 00:00:30.538\nBut here to help us and explain what\nwe're talking about is Justin Dennison.\n\n12\n00:00:30.538 --> 00:00:31.579\n&gt;&gt; [LAUGH]\n&gt;&gt; Justin, how you doing?\n\n13\n00:00:31.579 --> 00:00:34.124\n&gt;&gt; You've made me cackle.\nI'm doing well especially after that\n\n14\n00:00:34.124 --> 00:00:35.380\nlittle nice laugh.\n\n15\n00:00:35.380 --> 00:00:36.240\nAnd how are you, Peter?\n\n16\n00:00:36.240 --> 00:00:38.070\n&gt;&gt; I'm great.\nBut as a person that makes multiple\n\n17\n00:00:38.070 --> 00:00:41.440\nmistakes, I'm really excited\nto see how this helps us.\n\n18\n00:00:41.440 --> 00:00:43.610\n&gt;&gt; All right, so Peter,\nhere's kinda how I envision this,\n\n19\n00:00:43.610 --> 00:00:45.080\na little bit different format.\n\n20\n00:00:45.080 --> 00:00:47.100\nI'm gonna look to you for advice.\n\n21\n00:00:47.100 --> 00:00:49.130\nI know you've been\nlearning Git a little bit.\n\n22\n00:00:49.130 --> 00:00:53.700\nAnd well, there are mistakes that you've\nrun into that maybe I can help eliminate.\n\n23\n00:00:53.700 --> 00:00:57.650\nAnd I think most people beginning kind\nof encounter a similar set of mistakes.\n\n24\n00:00:57.650 --> 00:01:01.300\nSo do you have anything that\nyou've actually run into?\n\n25\n00:01:01.300 --> 00:01:06.910\n&gt;&gt; Sure, so let's say I make a commit,\nbut I committed the wrong thing.\n\n26\n00:01:06.910 --> 00:01:10.410\nI either didn't put the right message or\n\n27\n00:01:10.410 --> 00:01:12.740\nI picked the wrong file or\nsomething like that.\n\n28\n00:01:12.740 --> 00:01:14.050\nHow do I roll that back?\n\n29\n00:01:14.050 --> 00:01:17.170\n&gt;&gt; All right, well, that's a great\nfirst place to start because\n\n30\n00:01:17.170 --> 00:01:19.200\nI can't tell you how many times I went,\nno.\n\n31\n00:01:20.650 --> 00:01:25.260\n&gt;&gt; I forgot to do this, and sadly and\nperiodically, I'll still do this.\n\n32\n00:01:25.260 --> 00:01:29.730\nI'll just make a followup command that\nsays, that file I forgot mainly as\n\n33\n00:01:29.730 --> 00:01:33.530\na reminder to me in my personal projects\nlike, hey, you should get better at this.\n\n34\n00:01:33.530 --> 00:01:34.856\nSo let's go ahead and\ntake a look at my screen.\n\n35\n00:01:34.856 --> 00:01:37.260\nI have a git-repo kind of set up,\nall right?\n\n36\n00:01:37.260 --> 00:01:39.720\nI did the git init, that's all I've done.\n\n37\n00:01:39.720 --> 00:01:43.120\nLet's simulate that situation and\nwhat I need to do is,\n\n38\n00:01:43.120 --> 00:01:46.910\nwell, I need to have maybe\ntwo sets of files, right?\n\n39\n00:01:46.910 --> 00:01:48.790\nSo there's a couple different\nthings that can happen.\n\n40\n00:01:48.790 --> 00:01:50.231\nI can either have the wrong message.\n\n41\n00:01:50.231 --> 00:01:53.920\nWell, I forgot to talk about\nthat thing and I'm on a team.\n\n42\n00:01:53.920 --> 00:01:57.930\nI need to change that, or\nI forgot to stage a file for that commit.\n\n43\n00:01:57.930 --> 00:02:00.430\nSo let's take a look here.\n\n44\n00:02:00.430 --> 00:02:04.112\nSo I'm gonna say one.txt, and two.txt.\n\n45\n00:02:04.112 --> 00:02:07.969\nRight, these are files, this is a very\ncontrived example, but hopefully this will\n\n46\n00:02:07.969 --> 00:02:11.250\nilluminate it for Peter and\nthose of you who've had a similar problem.\n\n47\n00:02:11.250 --> 00:02:13.220\nSo I have that touch, right?\n\n48\n00:02:13.220 --> 00:02:15.820\nAnd let's just add some things in here.\n\n49\n00:02:15.820 --> 00:02:18.400\nThis is file one.\n\n50\n00:02:20.330 --> 00:02:24.397\nAnd then two, This is file two.\n\n51\n00:02:26.678 --> 00:02:30.690\nAll right, now if I get status, right, I'm\nalways spamming it, these are untracked.\n\n52\n00:02:30.690 --> 00:02:34.600\nSo I want to commit both of these\nas maybe an initial commit or\n\n53\n00:02:34.600 --> 00:02:36.030\nsomething of that nature.\n\n54\n00:02:36.030 --> 00:02:39.810\nI'm going to use a horrible commit\nmessage, probably a couple of times,\n\n55\n00:02:39.810 --> 00:02:41.060\nmaybe we can go back and change it.\n\n56\n00:02:42.330 --> 00:02:45.871\nSo if I git add one.txt, right?\n\n57\n00:02:45.871 --> 00:02:48.220\nOkay, I'm going through the work flow.\n\n58\n00:02:48.220 --> 00:02:53.218\nI've made all the changes that I want,\nbut the feature or the change that I made\n\n59\n00:02:53.218 --> 00:02:59.180\nactually encompasses both a one.txt and\ntwo.txt, but I've just added one.txt.\n\n60\n00:02:59.180 --> 00:03:03.570\nSo I'm gonna go ahead and\nmake a commit, added\n\n61\n00:03:03.570 --> 00:03:08.390\nthat change you asked for, and boom.\n\n62\n00:03:08.390 --> 00:03:16.575\nNow if I type git status two.txt,\nI forgot it.\n\n63\n00:03:16.575 --> 00:03:17.830\nNo, how do I fix that?\n\n64\n00:03:19.320 --> 00:03:21.110\nWell, here's a little tidbit about Git.\n\n65\n00:03:21.110 --> 00:03:23.370\nBefore I actually show you how to fix it,\n\n66\n00:03:23.370 --> 00:03:26.900\nif you type Git commit --,\nI think it's help, there we go.\n\n67\n00:03:26.900 --> 00:03:31.180\nIt will actually bring up\nthe documentation page for Git.\n\n68\n00:03:31.180 --> 00:03:35.300\nAnd I can use arrows and well, sadly,\nwhen you first start looking at this,\n\n69\n00:03:35.300 --> 00:03:40.400\nlook at all of these things\nthat I can do with commit.\n\n70\n00:03:40.400 --> 00:03:44.370\nI don't know but this --amend,\nthat might be helpful to me.\n\n71\n00:03:44.370 --> 00:03:46.630\nSo let's actually go read about that.\n\n72\n00:03:46.630 --> 00:03:50.085\nIt's important to know\nhow to find answers,\n\n73\n00:03:50.085 --> 00:03:52.710\nright, if you don't have\nanybody to help you.\n\n74\n00:03:52.710 --> 00:03:58.590\nSo if I go down, keep going,\nkeep going, -- nope.\n\n75\n00:03:58.590 --> 00:04:01.910\nI need to look for commit,\ncommit, commit, amend.\n\n76\n00:04:03.250 --> 00:04:04.080\nWhere's that amend?\n\n77\n00:04:04.080 --> 00:04:05.906\nWow, these are long documentations.\n\n78\n00:04:05.906 --> 00:04:08.679\n&gt;&gt; I take it there's no\nCtrl+F in this tool?\n\n79\n00:04:08.679 --> 00:04:10.252\n&gt;&gt; We're gonna pretend there's not.\n\n80\n00:04:10.252 --> 00:04:14.980\nIf I'm not mistaken there is\na way to search, but there we go.\n\n81\n00:04:14.980 --> 00:04:18.029\nReplace the tip of the current\nbranch by creating a new commit.\n\n82\n00:04:19.970 --> 00:04:23.108\nThe recorded tree is prepared as usual,\nblah, blah, blah, blah, blah,\n\n83\n00:04:23.108 --> 00:04:25.980\nit is roughly equivalent\nof doing these things.\n\n84\n00:04:25.980 --> 00:04:27.820\nWe're gonna worry about that later.\n\n85\n00:04:27.820 --> 00:04:31.060\nSo I can make changes, right?\n\n86\n00:04:31.060 --> 00:04:33.456\nThat's effectively what it's telling me.\n\n87\n00:04:33.456 --> 00:04:36.790\nI can amend the last commit,\nand that's important.\n\n88\n00:04:36.790 --> 00:04:39.369\nIf you catch this early,\nyou can do what we're getting ready to do.\n\n89\n00:04:40.520 --> 00:04:41.930\nI forgot to commit that.\n\n90\n00:04:41.930 --> 00:04:42.770\nYou can make that change.\n\n91\n00:04:42.770 --> 00:04:44.720\nSo if I hit q, I'm back out.\n\n92\n00:04:44.720 --> 00:04:46.910\nAnd I just made a commit, right?\n\n93\n00:04:46.910 --> 00:04:49.980\nSo if I do git log, there's my commit.\n\n94\n00:04:49.980 --> 00:04:54.550\nBut what I really meant to\ndo was add two.txt to it.\n\n95\n00:04:54.550 --> 00:04:55.580\nSo I'm gonna get out of there.\n\n96\n00:04:55.580 --> 00:04:59.940\nAnd then I'm gonna git add two.txt\nbecause I meant to add that.\n\n97\n00:04:59.940 --> 00:05:03.402\nAnd then I'm gonna git commit --amend.\n\n98\n00:05:03.402 --> 00:05:09.193\nNow in a previous episode, I said that\nyou should change that core.editor,\n\n99\n00:05:09.193 --> 00:05:12.100\nright, that configuration.\n\n100\n00:05:12.100 --> 00:05:14.280\nI leave it for VI or VIM.\n\n101\n00:05:14.280 --> 00:05:16.565\nSo I'm in this text-based editor.\n\n102\n00:05:16.565 --> 00:05:18.874\nIf you don't know how to use this,\nthis is really off-putting.\n\n103\n00:05:18.874 --> 00:05:23.379\nBut notice this is actually\nwhat is being submitted as\n\n104\n00:05:23.379 --> 00:05:25.990\na change to the local git repo.\n\n105\n00:05:27.110 --> 00:05:31.200\nThere's my commit message and\ndown here changes to be committed.\n\n106\n00:05:31.200 --> 00:05:34.020\nNew file one, new file two.txt.\n\n107\n00:05:34.020 --> 00:05:37.890\nWell, it wasn't there before,\nI added it to the stage and it said hey,\n\n108\n00:05:37.890 --> 00:05:40.480\nI just want you to amend\nthe previous commit.\n\n109\n00:05:40.480 --> 00:05:44.610\nAnd it made that change, and at this\npoint if you've set this up for Adam,\n\n110\n00:05:44.610 --> 00:05:49.720\nSublime or just Notepad,\nI can change this commit message, and\n\n111\n00:05:49.720 --> 00:05:53.230\nprobably a better thing to do is not that.\n\n112\n00:05:54.340 --> 00:05:58.460\nThere we go, is change this message to\n\n113\n00:05:59.720 --> 00:06:03.410\nadded files one and\ntwo to the repo, right?\n\n114\n00:06:03.410 --> 00:06:04.700\nStill not a great commit message but\n\n115\n00:06:04.700 --> 00:06:08.580\nif I wanted to make a change to\nthe message I could do that here as well.\n\n116\n00:06:08.580 --> 00:06:12.470\nSo even if I didn't wanna add a file\nI could do git commit --amend and\n\n117\n00:06:12.470 --> 00:06:15.550\ngo back and change the message\nbefore I continue moving on.\n\n118\n00:06:15.550 --> 00:06:19.220\nThe real catch there, you have to\ncatch it when that commit's made\n\n119\n00:06:19.220 --> 00:06:23.290\nin order to make the change at that time\ncuz if you don't, well, you have to go\n\n120\n00:06:23.290 --> 00:06:27.260\nthrough some other machinations and\nit's not quite as straightforward.\n\n121\n00:06:27.260 --> 00:06:28.230\nSo as you can see,\n\n122\n00:06:28.230 --> 00:06:33.670\nit's not actually as much of an issue\nas you would have thought, Peter.\n\n123\n00:06:33.670 --> 00:06:36.120\n&gt;&gt; Now just to clarify\non what you did there.\n\n124\n00:06:36.120 --> 00:06:39.680\nThat was just to show an example or\nis there a reason that you want to\n\n125\n00:06:39.680 --> 00:06:43.240\nhave those in the same commit as opposed\nto just committing the second file,\n\n126\n00:06:43.240 --> 00:06:45.190\nthen after that, and in its own commit?\n\n127\n00:06:45.190 --> 00:06:46.580\n&gt;&gt; So that's a great question.\n\n128\n00:06:46.580 --> 00:06:48.620\nAnd there's not the hard and fast answer.\n\n129\n00:06:48.620 --> 00:06:51.621\nAnd the reason being is maybe one.txt and\n\n130\n00:06:51.621 --> 00:06:55.880\ntwo.txt are actually like\nbuilding some kind of feature or\n\n131\n00:06:55.880 --> 00:06:59.630\nfulfilling some kind of requirement\nin conjunction with each other.\n\n132\n00:06:59.630 --> 00:07:02.220\nThey need to go in the same\ncommit because, well,\n\n133\n00:07:02.220 --> 00:07:05.790\nthey're part of this broader,\nmore abstract feature.\n\n134\n00:07:05.790 --> 00:07:10.100\nInstead of, well, I added one.txt,\nI added two.txt, right?\n\n135\n00:07:10.100 --> 00:07:13.430\nMaybe there's some kind of informational\nfile where they both have to be there for\n\n136\n00:07:13.430 --> 00:07:16.930\nthe feature to work, so I want them\nto be snapshotted at the same time.\n\n137\n00:07:16.930 --> 00:07:20.200\nSo that's kind of a very\nmuch context-based question.\n\n138\n00:07:20.200 --> 00:07:24.990\n&gt;&gt; Great, now one, I'm a little\nembarrassed to admit is I have\n\n139\n00:07:24.990 --> 00:07:27.290\ncommitted files to the wrong place before.\n\n140\n00:07:27.290 --> 00:07:29.990\nNow I know, so\nfar we've just really talked about kinda\n\n141\n00:07:29.990 --> 00:07:33.470\nsetting up that one repo, but\nyou can commit to the wrong place.\n\n142\n00:07:33.470 --> 00:07:34.690\nSo how do I fix that?\n\n143\n00:07:34.690 --> 00:07:37.870\n&gt;&gt; So let's just set the stage here,\nright?\n\n144\n00:07:37.870 --> 00:07:41.250\nIn typical projects,\nI don't have a single flat file or\n\n145\n00:07:41.250 --> 00:07:43.360\na single flat folder like I do here.\n\n146\n00:07:43.360 --> 00:07:47.122\nRight, I'll have folders, and subfolders,\nand subfolders of subfolders, and\n\n147\n00:07:47.122 --> 00:07:48.100\nfiles within those.\n\n148\n00:07:48.100 --> 00:07:51.850\nSo I think the best way is, well,\nif I put that in the wrong place,\n\n149\n00:07:51.850 --> 00:07:54.938\nI could just move it, but\nactually that's a change.\n\n150\n00:07:54.938 --> 00:07:57.249\nAnd Git has to know about that.\n\n151\n00:07:57.249 --> 00:08:01.231\nSo I have to tell, hey, for\nfuture reference, it's over here now.\n\n152\n00:08:01.231 --> 00:08:05.075\nAnd there's some shorthand\nthere's longer ways to do this.\n\n153\n00:08:05.075 --> 00:08:08.233\nBut Git provides a tool to say,\nhey git, I've moved this file and\n\n154\n00:08:08.233 --> 00:08:11.287\nneeds to go on this other place and\nI want you to keep track of it.\n\n155\n00:08:11.287 --> 00:08:14.080\n&gt;&gt; Is this that fancy amend command again?\n\n156\n00:08:14.080 --> 00:08:19.368\n&gt;&gt; Well, it's almost an amend right, so it\ncould be used in connection with amend and\n\n157\n00:08:19.368 --> 00:08:24.520\nmaybe we'll see a different kind of a I\ndon't know, combo here in just a moment.\n\n158\n00:08:24.520 --> 00:08:26.960\nSo let's go ahead and\ntake a look at the screen and set that up.\n\n159\n00:08:26.960 --> 00:08:29.770\nSo let's say that I have a directory,\nright?\n\n160\n00:08:29.770 --> 00:08:36.114\nSome subdir and if I look I have one.txt,\nsubdir, and two.txt.\n\n161\n00:08:36.114 --> 00:08:41.380\nOkay well I create another file\nthat is I don't know let's\n\n162\n00:08:41.380 --> 00:08:47.117\nsay something important, .py\n\n163\n00:08:47.117 --> 00:08:52.378\nlet's get a py it's a Python file, we're\nbuilding a Python project and I build it.\n\n164\n00:08:52.378 --> 00:08:57.380\nI want you to notice something though,\nthat x didn't appear until I made\n\n165\n00:08:57.380 --> 00:09:02.147\nthe file, not the folder, if a folder\nis empty Git will not track it.\n\n166\n00:09:02.147 --> 00:09:06.696\nAnd I actually spent about three\nhours one going I set up my folder\n\n167\n00:09:06.696 --> 00:09:11.830\nstructure exactly like I wanted it and\nyou're not tracking it.\n\n168\n00:09:11.830 --> 00:09:16.950\nSo until you put a file inside of a folder\nGit's like that folder doesn't exist.\n\n169\n00:09:16.950 --> 00:09:17.880\nSo keep that in mind, so\n\n170\n00:09:17.880 --> 00:09:21.890\nI made this and notice I'm still\nin the top level directory.\n\n171\n00:09:21.890 --> 00:09:24.660\nSo something important's here,\nbut it should be in that subdir.\n\n172\n00:09:24.660 --> 00:09:26.411\nSo let's simulate I put\nthis in the wrong place.\n\n173\n00:09:26.411 --> 00:09:30.118\nI'm gonna git add something_important and\n\n174\n00:09:30.118 --> 00:09:34.794\ngit commit,\n'finally finished that feature'.\n\n175\n00:09:38.949 --> 00:09:39.685\nAnd there we go.\n\n176\n00:09:39.685 --> 00:09:42.030\nAnd then I'm like, you know what?\n\n177\n00:09:43.290 --> 00:09:46.370\nI totally put that in the wrong\nplace is this way you've been?\n\n178\n00:09:46.370 --> 00:09:48.140\n&gt;&gt; That's actually what's that?\n\n179\n00:09:48.140 --> 00:09:51.503\n&gt;&gt; Yeah so so I've put this in the wrong\nplace now I could just move this and\n\n180\n00:09:51.503 --> 00:09:53.842\nif I move that what will\nhappen is it'll say hay,\n\n181\n00:09:53.842 --> 00:09:55.861\nthere's been a change that files moved.\n\n182\n00:09:55.861 --> 00:09:59.514\nWell Git provides\nan actual move sub command.\n\n183\n00:09:59.514 --> 00:10:05.208\nSo it'll take care of making sure that you\ncommit that change for future reference.\n\n184\n00:10:05.208 --> 00:10:07.712\nCuz even if you move it but\nyou don't commit it or\n\n185\n00:10:07.712 --> 00:10:10.270\nmaking amend to a previous commit.\n\n186\n00:10:10.270 --> 00:10:13.190\nThen well in all future pulls or\nif you pull it down and\n\n187\n00:10:13.190 --> 00:10:15.160\nI've been working on it and\nit's a wrong place.\n\n188\n00:10:15.160 --> 00:10:18.069\nIt's gonna mean a wrong place for you as\nwell until I've submit those changes.\n\n189\n00:10:18.069 --> 00:10:20.720\nSo how do I fix it?\n\n190\n00:10:20.720 --> 00:10:23.540\nWell you gotta spell clear appropriately.\n\n191\n00:10:23.540 --> 00:10:26.270\nAnd then I say get mv for move.\n\n192\n00:10:26.270 --> 00:10:28.580\nAnd then point to the file\nyou want to move.\n\n193\n00:10:28.580 --> 00:10:32.101\nNow if you're a Linux guru or\na Mac OS guru fiddle on the command line,\n\n194\n00:10:32.101 --> 00:10:36.009\nyou're like that's kind of like\nthe move command from terminal or bash.\n\n195\n00:10:36.009 --> 00:10:37.880\nAnd it very much is.\n\n196\n00:10:37.880 --> 00:10:38.570\nAnd what is that?\n\n197\n00:10:38.570 --> 00:10:41.147\nThat's something_important, but\nI wanna put it in subdir right?\n\n198\n00:10:41.147 --> 00:10:46.235\nNow I could rename this file here,\nI can actually rename doing this.\n\n199\n00:10:46.235 --> 00:10:50.394\nBut I'm just gonna give it the directory\nso it should take it from where it is and\n\n200\n00:10:50.394 --> 00:10:52.570\nput it in that sub directory.\n\n201\n00:10:52.570 --> 00:10:58.110\nNotice that yellow x\nright there it came up.\n\n202\n00:10:58.110 --> 00:10:58.950\nIt won't come up on yours,\n\n203\n00:10:58.950 --> 00:11:02.479\nso what should we always spam to\nsee if changes have been made?\n\n204\n00:11:03.970 --> 00:11:08.130\ngit status, and notice, it says renamed.\n\n205\n00:11:08.130 --> 00:11:10.040\nBut I thought it was a move.\n\n206\n00:11:10.040 --> 00:11:14.079\nWell, in a file system, a move and\na rename are effectively the same,\n\n207\n00:11:14.079 --> 00:11:16.559\nbecause the rename includes the path now.\n\n208\n00:11:16.559 --> 00:11:18.900\nNotice this is green.\n\n209\n00:11:20.510 --> 00:11:25.180\nThis moved it and\nimmediately staged it for commit.\n\n210\n00:11:25.180 --> 00:11:27.498\nIt's telling you you should commit this\nchange if you want it to be saved.\n\n211\n00:11:27.498 --> 00:11:29.776\n&gt;&gt; And\nyou can tell that by looking above and\n\n212\n00:11:29.776 --> 00:11:32.840\nseeing where it says use\nthis command to unstage.\n\n213\n00:11:32.840 --> 00:11:33.660\n&gt;&gt; Yeah, exactly.\n\n214\n00:11:33.660 --> 00:11:35.440\nSo I could unstage.\n\n215\n00:11:35.440 --> 00:11:37.019\nBut you should commit\nif you want it to stay.\n\n216\n00:11:37.019 --> 00:11:41.625\nNow I could amend to\nthe previous commit right.\n\n217\n00:11:41.625 --> 00:11:45.719\nI could do git commit--amend,\nand it would go back and\n\n218\n00:11:45.719 --> 00:11:49.310\nchange that previous commit for this file.\n\n219\n00:11:49.310 --> 00:11:53.171\nBut I'm just gonna make a commit here and\nsay,\n\n220\n00:11:53.171 --> 00:11:57.250\ngit commit -m 'movedsomething_important.\n\n221\n00:11:57.250 --> 00:12:01.740\nNow again,\nthese are all very contrived examples.\n\n222\n00:12:01.740 --> 00:12:07.960\nJust to illustrate how to use this,\nthese would be more applicable commit\n\n223\n00:12:07.960 --> 00:12:11.700\nmessages and more applicable file names\nif I was actually working on a project.\n\n224\n00:12:11.700 --> 00:12:16.572\nSo I commit and now if I git log, I\n\n225\n00:12:16.572 --> 00:12:21.200\nhave finally finished that feature which\nis where I made something_important.\n\n226\n00:12:21.200 --> 00:12:26.248\nAnd then I move something_important and\nin that way the reason I won't go back and\n\n227\n00:12:26.248 --> 00:12:30.948\namend that, is if let's say you put it\nin the wrong place but then I moved it.\n\n228\n00:12:30.948 --> 00:12:34.430\nIf it's in the commit log you'll\nknow that it's been moved.\n\n229\n00:12:34.430 --> 00:12:38.720\nIf it's not,\nwell you're like where'd that file go?\n\n230\n00:12:38.720 --> 00:12:41.036\nAnd you might make it again, and\nthere's just a miscommunication.\n\n231\n00:12:41.036 --> 00:12:43.714\nSo I like to be very\ntransparent about that.\n\n232\n00:12:43.714 --> 00:12:46.182\nAgain that's based on\na team by team basis.\n\n233\n00:12:46.182 --> 00:12:50.980\nSo if I put it in the wrong place,\ngit move will get you started.\n\n234\n00:12:50.980 --> 00:12:53.440\n&gt;&gt; Now let's say not\njust the wrong place but\n\n235\n00:12:53.440 --> 00:12:55.300\nI just put the completely\nwrong file up there.\n\n236\n00:12:55.300 --> 00:12:59.200\nI put the file with all my vacation\nphotos into the work repo or\n\n237\n00:12:59.200 --> 00:13:04.191\nsomething like that and I just wanna\nremove that file from the history there.\n\n238\n00:13:04.191 --> 00:13:06.783\nHow do I do that?\n&gt;&gt; So that's very important.\n\n239\n00:13:06.783 --> 00:13:09.100\nHow can I remove it from the history?\n\n240\n00:13:09.100 --> 00:13:12.440\nThat's a little more involved, but\nhow can I remove it from the repo and\n\n241\n00:13:12.440 --> 00:13:15.743\nactually commit that to the history,\nwell that's pretty easy to do.\n\n242\n00:13:15.743 --> 00:13:20.846\nNow, that's a common, misunder, I removed\nit from the repo, so it's gone forever.\n\n243\n00:13:20.846 --> 00:13:23.900\nWell actually, it's in a previous\nsnapshot if you deleted.\n\n244\n00:13:23.900 --> 00:13:28.380\nSo, if you committed your vacation photos\nthey're still there behind the scene.\n\n245\n00:13:28.380 --> 00:13:29.615\n&gt;&gt; Not that this has happened.\n\n246\n00:13:29.615 --> 00:13:33.350\nThis hasn't happened.\n&gt;&gt; Yeah, this would never happen.\n\n247\n00:13:33.350 --> 00:13:38.120\nSo let's say that I actually only put\na passwords file in there, right.\n\n248\n00:13:38.120 --> 00:13:44.210\nNow, just to be clear, I'm showing you\nhow to remove and remove it from then on.\n\n249\n00:13:44.210 --> 00:13:49.680\nI'm not showing you how to go back in time\nand remove it from all previous histories.\n\n250\n00:13:49.680 --> 00:13:54.780\nThere's some wonderful articles that\nactually make use of some giant commands.\n\n251\n00:13:54.780 --> 00:13:58.316\nAnd typically I've used this once or\ntwice, I found out that someone put her\n\n252\n00:13:58.316 --> 00:14:01.479\ncredentials file, like a AWS\ncredentials or something like that.\n\n253\n00:14:01.479 --> 00:14:03.430\nI'm like, why is that in version control?\n\n254\n00:14:03.430 --> 00:14:05.910\nPeople are going to be looking for that.\n\n255\n00:14:05.910 --> 00:14:10.530\nSo I have to go loop those commands up,\nrun them for that particular file and\n\n256\n00:14:10.530 --> 00:14:11.540\nthen I'm all good to go.\n\n257\n00:14:11.540 --> 00:14:15.088\nIt's a little out of scope for\nwhat we're doing, so let's go ahead and\n\n258\n00:14:15.088 --> 00:14:19.009\ntake a look at how we can remove a file\nif we accidentally committed it, right?\n\n259\n00:14:19.009 --> 00:14:21.885\nSo let's say that I have\na passwords file and\n\n260\n00:14:21.885 --> 00:14:26.340\nI'm not putting a file extension,\nit's just a very raw text file.\n\n261\n00:14:26.340 --> 00:14:30.099\nAnd I'm going to say, vim passwords, and\n\n262\n00:14:30.099 --> 00:14:36.120\na very super secret password,\n12345, don't tell anybody.\n\n263\n00:14:36.120 --> 00:14:37.762\n&gt;&gt; Okay.\n\n264\n00:14:37.762 --> 00:14:41.489\n&gt;&gt; So\nnow that I have that password I'm like,\n\n265\n00:14:41.489 --> 00:14:45.735\nyeah, I'm working on this feature and\ngit add,\n\n266\n00:14:45.735 --> 00:14:51.250\nwow got us passwords and\ngit commit finished another feature.\n\n267\n00:14:51.250 --> 00:14:55.450\nNow if you see a commit like this\nwhat's probably happened is well\n\n268\n00:14:55.450 --> 00:14:57.320\nI didn't mean to commit\nthe passwords file.\n\n269\n00:14:57.320 --> 00:14:59.470\nI had other files that I was working on.\n\n270\n00:14:59.470 --> 00:15:04.440\nSo I committed it and then I'm like,\nyou know what I actually I wanna\n\n271\n00:15:04.440 --> 00:15:08.667\ntake that out, I wanna remove that for\nall future commits.\n\n272\n00:15:08.667 --> 00:15:11.120\nThis does not take it out\nof the previous commit.\n\n273\n00:15:11.120 --> 00:15:12.728\nOkay, there's other things you have to do.\n\n274\n00:15:12.728 --> 00:15:16.200\nThere are ways to do that but\nagain a little outside of scope.\n\n275\n00:15:16.200 --> 00:15:17.930\nSo what if I wanna remove that file?\n\n276\n00:15:17.930 --> 00:15:24.361\nSo git remove, well git rm stands for\nremove and passwords.\n\n277\n00:15:24.361 --> 00:15:29.084\nAnd now if I type get status\nnotice again it's in green,\n\n278\n00:15:29.084 --> 00:15:33.521\nit says this file has been\ndeleted from the Git repo.\n\n279\n00:15:33.521 --> 00:15:40.792\nIf I ls notice the file has actually\nbeen deleted locally as well.\n\n280\n00:15:40.792 --> 00:15:45.708\nThat's an important point to remember,\ngit remove when use just get remove with\n\n281\n00:15:45.708 --> 00:15:50.044\nno other flags it will delete it from\nyour repo and stage it for a commit,\n\n282\n00:15:50.044 --> 00:15:53.392\nit will actually delete it locally so\nboom it's gone.\n\n283\n00:15:53.392 --> 00:15:57.885\nIt's gone forever unless you back\nup to that previous commit so,\n\n284\n00:15:57.885 --> 00:16:02.870\nGotta be careful with some of these\ncommands they can make changes to your\n\n285\n00:16:02.870 --> 00:16:05.485\nfile system that are unintended, but\n\n286\n00:16:05.485 --> 00:16:10.340\nat this point I just wanna make a commit,\nremoved the passwords file.\n\n287\n00:16:10.340 --> 00:16:14.649\nSo, as we can see we can remove files,\nthere are some unintended consequences and\n\n288\n00:16:14.649 --> 00:16:16.222\nwe do have to be careful that.\n\n289\n00:16:16.222 --> 00:16:22.480\nWell, if I have previous snapshots from,\nlet's say this passwords file.\n\n290\n00:16:22.480 --> 00:16:25.630\nIn my Git history those\nare still gonna be there.\n\n291\n00:16:25.630 --> 00:16:28.830\nPeople could go on and inspect those,\nthere's additional steps that\n\n292\n00:16:28.830 --> 00:16:31.550\nyou need to take,\nwhich are again out of scope for this.\n\n293\n00:16:31.550 --> 00:16:33.270\nBut, that's how you remove a file.\n\n294\n00:16:33.270 --> 00:16:36.970\n&gt;&gt; So maybe that's something we can\nput a link to in the show notes, so.\n\n295\n00:16:36.970 --> 00:16:40.160\n&gt;&gt; So, people can find that if\nthat's what they're looking for.\n\n296\n00:16:40.160 --> 00:16:41.360\nSo, next error,\n\n297\n00:16:41.360 --> 00:16:44.770\nI feel like we're just going through\nall of my mistakes in my life here.\n\n298\n00:16:44.770 --> 00:16:51.960\nSo, let's say, I've staged something but,\nI'm not done with it.\n\n299\n00:16:51.960 --> 00:16:53.550\nSo, I wanna go back and\nkeep working on it.\n\n300\n00:16:53.550 --> 00:16:54.810\nSo, I wanna remove that from stage but\n\n301\n00:16:54.810 --> 00:16:58.280\nI don't wanna do what just happened\nthere and delete it from my Repo.\n\n302\n00:16:58.280 --> 00:16:59.666\nHow do I make sure I'm doing that right?\n\n303\n00:16:59.666 --> 00:17:02.471\n&gt;&gt; So, this is actually a comment,\nthis still haven't, so Peter,\n\n304\n00:17:02.471 --> 00:17:04.940\ndon't worry, this still happens\nto me from time to time.\n\n305\n00:17:04.940 --> 00:17:08.900\nLike if you're a programmer and you use\nsome kind of package management system.\n\n306\n00:17:08.900 --> 00:17:11.360\nBut, let's say Node, for instance.\n\n307\n00:17:11.360 --> 00:17:14.960\nYou keep a file that it'll say all\nthe things that you need or in Python,\n\n308\n00:17:14.960 --> 00:17:17.290\nthem like a requirements.txt.\n\n309\n00:17:17.290 --> 00:17:20.500\nBut, you don't actually want to\ncommit those from your Repo and\n\n310\n00:17:20.500 --> 00:17:23.840\nkeep building you Repo, cuz,\nI can always go back and get those again.\n\n311\n00:17:23.840 --> 00:17:29.360\nWell, sometimes you'll accidentally stage\nthose for commit and you have thousands or\n\n312\n00:17:29.360 --> 00:17:32.950\nhundreds of thousands of files\non accident you're like,\n\n313\n00:17:32.950 --> 00:17:34.100\nno that's not what I meant to do.\n\n314\n00:17:34.100 --> 00:17:37.310\nI actually wanna remove those\nfrom the staged area because,\n\n315\n00:17:37.310 --> 00:17:38.580\nI don't want those to be in the commit.\n\n316\n00:17:38.580 --> 00:17:40.630\nI don't want this to muddied up.\n\n317\n00:17:40.630 --> 00:17:44.750\nAnd just to show you, I'm actually going\nto use Node in this case to simulate\n\n318\n00:17:44.750 --> 00:17:46.700\njust a ridiculous amount of files.\n\n319\n00:17:46.700 --> 00:17:49.910\nSo, you'll know it does happen and\nyou don't have to panic.\n\n320\n00:17:49.910 --> 00:17:51.560\nSo, let's go and\ntake a look at my screen here,\n\n321\n00:17:51.560 --> 00:17:54.890\nand well, we've decided that\nwe're gonna build a Node project.\n\n322\n00:17:54.890 --> 00:17:58.170\nNow, if you don't know what Node is,\nthat's completely okay, this will\n\n323\n00:17:58.170 --> 00:18:01.730\nnot necessarily work on your computer,\nif you don't have Node installed.\n\n324\n00:18:01.730 --> 00:18:03.813\nI'm just using this for\ndemonstration purposes.\n\n325\n00:18:03.813 --> 00:18:09.917\nSo Boom and npm install express and\n\n326\n00:18:09.917 --> 00:18:14.340\nthere we go now\n&gt;&gt; That's a lot of files..\n\n327\n00:18:14.340 --> 00:18:15.345\n&gt;&gt; That was a lot of files.\n\n328\n00:18:15.345 --> 00:18:19.320\nIt's actually, I think right at 100 files\ngive or take somewhere around in there.\n\n329\n00:18:19.320 --> 00:18:22.470\nWell, those are folders and each one\nof those folders have files in them.\n\n330\n00:18:22.470 --> 00:18:23.560\n&gt;&gt; So, it's a lot.\n\n331\n00:18:23.560 --> 00:18:26.785\nSo, if I LS here,\nyou actually see two new things,\n\n332\n00:18:26.785 --> 00:18:31.151\nl you'll see a package.json and\nyou'll see these node_modules.\n\n333\n00:18:31.151 --> 00:18:33.140\nNow, if you're gonna development workflow,\n\n334\n00:18:33.140 --> 00:18:37.080\na lot of times when you're building\nthese dependencies, right.\n\n335\n00:18:37.080 --> 00:18:40.920\nOr maybe, maybe this is\nthe folder where those miniature\n\n336\n00:18:40.920 --> 00:18:43.119\nphotographs that you\nare building the collage.\n\n337\n00:18:43.119 --> 00:18:44.525\nThe collage Is what you wanna keep.\n\n338\n00:18:44.525 --> 00:18:47.450\nBut you don't wanna keep all\nthe individual photographs, right.\n\n339\n00:18:47.450 --> 00:18:49.280\nWell, that's kind of a similar vein.\n\n340\n00:18:49.280 --> 00:18:51.740\nI don't want node_modules in my repo.\n\n341\n00:18:53.420 --> 00:19:00.340\nIf I type git status, I just want to save\nthis git package.json not node_modules.\n\n342\n00:19:00.340 --> 00:19:06.910\nBut, I'm working along and I type git\nadd node_modules/ package.json and\n\n343\n00:19:06.910 --> 00:19:12.120\nI'm good to go and\nthen when I type git status again, no.\n\n344\n00:19:12.120 --> 00:19:13.850\nIs this what happened to you before?\n\n345\n00:19:13.850 --> 00:19:14.920\n&gt;&gt; That look familiar.\n\n346\n00:19:14.920 --> 00:19:20.630\n&gt;&gt; Yeah, I just,\nI staged all kinds of stuff for commit.\n\n347\n00:19:20.630 --> 00:19:21.830\nHow do I get rid of this?\n\n348\n00:19:21.830 --> 00:19:23.870\nI just want this package.json.\n\n349\n00:19:23.870 --> 00:19:29.020\nI don't want, if we start scrolling,\nthat's man, that's a lot.\n\n350\n00:19:30.090 --> 00:19:32.830\nI could go ahead and commit and\njust abandon ship, right.\n\n351\n00:19:32.830 --> 00:19:34.330\nAnd then when I put this on Git Hub or\n\n352\n00:19:34.330 --> 00:19:37.990\nmy local Git server,\nthose are always gonna be tracking around.\n\n353\n00:19:37.990 --> 00:19:42.770\nAnd that kind of eliminates the use of\nsome of these programmatic tools for\n\n354\n00:19:42.770 --> 00:19:45.700\nthese sets of folders and files.\n\n355\n00:19:45.700 --> 00:19:48.610\nI want to remove those,\nso how do I do that?\n\n356\n00:19:48.610 --> 00:19:53.210\nI git rm,\nyou're like no I don't wanna delete them.\n\n357\n00:19:53.210 --> 00:19:56.510\nIt's actually a flag here,\n\n358\n00:19:56.510 --> 00:20:01.230\ncalled --cached, what that means is\nyou're in the staging environment.\n\n359\n00:20:01.230 --> 00:20:03.400\nI wanna remove this, and\n\n360\n00:20:03.400 --> 00:20:06.530\nnow instead of a single file,\nI'm gonna give the folder name.\n\n361\n00:20:06.530 --> 00:20:12.470\nAnd what it'll do well you'll see, it'll\nsay nope you need to do it recursively.\n\n362\n00:20:12.470 --> 00:20:19.940\nIf this was a single file, right if I\ndid node modules utils merge read me.\n\n363\n00:20:22.215 --> 00:20:26.905\nGit status it removed that one file,\nbut if I wanna remove a folder.\n\n364\n00:20:26.905 --> 00:20:33.926\nAfter plac, parse the -r flag to say\nthat folder and everything in it.\n\n365\n00:20:33.926 --> 00:20:39.238\nSo if I hit up and\nwell if I head up to cycle back through,\n\n366\n00:20:39.238 --> 00:20:46.414\nright before these node modules I'm\ngonna say -r, right and then boom.\n\n367\n00:20:46.414 --> 00:20:50.446\nAnd now, it says rm you're like\nno I didn't mean to delete those.\n\n368\n00:20:50.446 --> 00:20:55.019\nBut because, of that--cache flag all\nit did was remove them from the staging\n\n369\n00:20:55.019 --> 00:20:57.319\nenvironment, they're still local.\n\n370\n00:20:57.319 --> 00:21:03.030\nAnd now I can make my commit\nof setup a Node project.\n\n371\n00:21:05.140 --> 00:21:08.270\nAnd now if I git status, these are still\nin red because I removed them from\n\n372\n00:21:08.270 --> 00:21:14.870\nthe staging environment and well,\nI avoided one could consider a disaster.\n\n373\n00:21:14.870 --> 00:21:16.290\n&gt;&gt; Right that makes sense.\n\n374\n00:21:16.290 --> 00:21:19.320\nSo, just one last scenario for you here.\n\n375\n00:21:19.320 --> 00:21:23.380\nWhat if I'm making changes to something\nthen I realize midway through\n\n376\n00:21:23.380 --> 00:21:25.310\nI didn't mean to do that.\n\n377\n00:21:25.310 --> 00:21:27.620\nI shouldn't have done that yet,\nI gotta do this other thing first.\n\n378\n00:21:27.620 --> 00:21:31.660\nHow do I go ahead and\njust forget about those changes and\n\n379\n00:21:31.660 --> 00:21:33.880\nkind of go back to how the file was?\n\n380\n00:21:33.880 --> 00:21:38.170\n&gt;&gt; Okay, so I'm gonna cover two\ndifferent ways that I can do this,\n\n381\n00:21:38.170 --> 00:21:41.740\nso let's simulate what Peter\nis talking about here.\n\n382\n00:21:41.740 --> 00:21:47.115\nSo I have this one dot txt,\nwe're going back to one of those\n\n383\n00:21:47.115 --> 00:21:52.189\nold files and I said,\nthis is also file three, right.\n\n384\n00:21:52.189 --> 00:21:53.775\nRight, so I'm typing away and\n\n385\n00:21:53.775 --> 00:21:56.890\nI realize I actually don't wanna\nput that text in that file.\n\n386\n00:21:56.890 --> 00:22:02.074\nRight and so, like git status,\nyou'll notice I've modified man,\n\n387\n00:22:02.074 --> 00:22:04.510\nI didn't want that to be in there.\n\n388\n00:22:06.310 --> 00:22:11.750\nWell Git checkout -- file to discard\nany changes in the working directory.\n\n389\n00:22:11.750 --> 00:22:16.100\nWe are currently in the working directory,\nso that's the first one okay?\n\n390\n00:22:16.100 --> 00:22:22.930\nSo, if I want to remove those changes\nfrom one.txt, I can git checkout -- file.\n\n391\n00:22:22.930 --> 00:22:24.380\nAnd what that's saying well not file,\n\n392\n00:22:24.380 --> 00:22:27.310\nI actually have to give\nthe file name that's important.\n\n393\n00:22:27.310 --> 00:22:31.250\nWhat that's saying is, I want to go\nback to the last committed version,\n\n394\n00:22:31.250 --> 00:22:32.550\nthe last snapshot.\n\n395\n00:22:33.640 --> 00:22:38.690\nWhen you do this though,\nany changes you have made will be gone.\n\n396\n00:22:38.690 --> 00:22:40.559\nThey're, [SOUND], no more.\n\n397\n00:22:40.559 --> 00:22:44.808\nSo, boom, and if I type git status,\nnotice node modules are still there,\n\n398\n00:22:44.808 --> 00:22:47.180\nbecause we don't want to To track those.\n\n399\n00:22:47.180 --> 00:22:49.300\nWe wanna keep those out of there.\n\n400\n00:22:49.300 --> 00:22:51.490\nBut 1.txt is no longer listed as modified,\n\n401\n00:22:51.490 --> 00:22:56.430\nand if I go in 1.txt,\nthat set of information has been removed.\n\n402\n00:22:56.430 --> 00:22:57.490\nThere's no way to retrieve that.\n\n403\n00:22:57.490 --> 00:22:58.780\nI can't go forward in time.\n\n404\n00:22:58.780 --> 00:23:00.430\nI can only go backwards.\n\n405\n00:23:00.430 --> 00:23:03.060\n&gt;&gt; All right, so Justin,\nyou mentioned that there were two ways.\n\n406\n00:23:03.060 --> 00:23:04.070\nThat way helps.\n\n407\n00:23:04.070 --> 00:23:04.650\nWhat's the other way?\n\n408\n00:23:04.650 --> 00:23:07.410\nIt's that the git reset tool,\nwe've talked about.\n\n409\n00:23:07.410 --> 00:23:08.700\n&gt;&gt; I'm glad you brought it up, Peter,\n\n410\n00:23:08.700 --> 00:23:13.420\ncuz that's actually a very tricky one\nthere and I think it's best to see.\n\n411\n00:23:13.420 --> 00:23:18.290\nI'm gonna tell you, I don't typically we\nused this one, it has a valid use case\n\n412\n00:23:18.290 --> 00:23:21.930\nbut, not just for like getting\nrid of current working changes.\n\n413\n00:23:21.930 --> 00:23:23.300\nSo, let's go ahead and\ntake a look at my screen.\n\n414\n00:23:23.300 --> 00:23:27.150\nI've cleared it out a little bit cuz, just\nto keep everything kind of nice and neat.\n\n415\n00:23:27.150 --> 00:23:29.300\nKind of a reset in itself.\n\n416\n00:23:29.300 --> 00:23:30.850\nI'll see what I did there.\n\n417\n00:23:30.850 --> 00:23:33.680\n&gt;&gt; Nice.\n&gt;&gt; So, if I LS, everything is still there.\n\n418\n00:23:33.680 --> 00:23:37.910\nIf I git status well, Node modules\nare there but now, let's say that we make\n\n419\n00:23:37.910 --> 00:23:42.190\na change very similar that we did, just\na little a while ago with your check out.\n\n420\n00:23:42.190 --> 00:23:46.190\nSo, I'm in one and\nI come here, this is file.\n\n421\n00:23:46.190 --> 00:23:48.570\nI don't know, seven, right.\n\n422\n00:23:48.570 --> 00:23:52.020\nAnd I'm like, you know what, I didn't\nactually mean to make that change.\n\n423\n00:23:52.020 --> 00:23:57.400\nYou actually see,\nthis command recommended to\n\n424\n00:23:57.400 --> 00:24:00.700\nmove back to the previous command, okay.\n\n425\n00:24:00.700 --> 00:24:06.450\nSo, git reset and then pass the hard flag,\nthis is why it's dangerous,\n\n426\n00:24:07.740 --> 00:24:12.170\nit says HEAD is now, at d3dd843.\n\n427\n00:24:12.170 --> 00:24:16.808\nIf I type git status notice\nthat one.txt has been removed,\n\n428\n00:24:16.808 --> 00:24:19.869\nit's gotten rid of all those changes,\n\n429\n00:24:19.869 --> 00:24:24.700\nnow what's incredibly\ndangerous about this reset.\n\n430\n00:24:24.700 --> 00:24:28.430\nIf I accidentally give it,\nwell, let's take a look here,\n\n431\n00:24:28.430 --> 00:24:33.240\nGit log If I give it this giant number,\nyou know that sha\n\n432\n00:24:33.240 --> 00:24:38.030\none thing I've been talking about, this is\nthe sha one hash, or at least part of it.\n\n433\n00:24:38.030 --> 00:24:40.560\nI forget how long sha one is.\n\n434\n00:24:40.560 --> 00:24:46.980\nIf I give it this number and I'm playing\naround and I git reset --hard and\n\n435\n00:24:46.980 --> 00:24:51.010\nI somehow get that in there,\nremove password file.\n\n436\n00:24:51.010 --> 00:24:52.360\nSetup node project.\n\n437\n00:24:52.360 --> 00:24:55.660\nAll of these commits are forever\nerased I moved back in time.\n\n438\n00:24:57.030 --> 00:25:00.060\nBut, what I've done is said,\nthose Polaroids that I took for\n\n439\n00:25:00.060 --> 00:25:02.150\nremoving the password files and\nsetting up the project.\n\n440\n00:25:02.150 --> 00:25:04.670\nI'm just gonna throw\nthose in the trash and\n\n441\n00:25:04.670 --> 00:25:08.210\nI'm gonna hang out right here\nuntil I finish another feature.\n\n442\n00:25:08.210 --> 00:25:09.470\nIt does have a valid use case.\n\n443\n00:25:09.470 --> 00:25:13.280\nSo, let's say that you did some horrible\nthings in these last two commits,\n\n444\n00:25:13.280 --> 00:25:15.720\nand you want to just act\nlike they never happened.\n\n445\n00:25:15.720 --> 00:25:17.779\nYou can, but in the beginning,\n\n446\n00:25:17.779 --> 00:25:21.982\nI would recommend against using\nthis git reset --hard, okay.\n\n447\n00:25:21.982 --> 00:25:26.131\nI would check out the file, just to\nget rid of the most current changes,\n\n448\n00:25:26.131 --> 00:25:30.490\nbecause it doesn't have the the\npossibility of causing a lot of problems,\n\n449\n00:25:30.490 --> 00:25:33.550\na lot of heartache,\na little bit of weeping.\n\n450\n00:25:33.550 --> 00:25:38.250\nSo, those are the two ways to get rid\nof current changes that you just wanna\n\n451\n00:25:38.250 --> 00:25:42.530\nthrow away, stay with Git check out,\nstay away from Git reset for now.\n\n452\n00:25:42.530 --> 00:25:44.730\n&gt;&gt; Yeah, and the last thing we wanna\ndo when we're trying to fix the problem\n\n453\n00:25:44.730 --> 00:25:48.360\nthat's cause a lot more problems and that\nlooks like that would be a huge headache.\n\n454\n00:25:48.360 --> 00:25:50.540\nBut, Justin, I wanna say thank you.\n\n455\n00:25:50.540 --> 00:25:54.390\nThe things I was embarrassed about,\nit sounds like from what you're telling me\n\n456\n00:25:54.390 --> 00:25:57.890\nthat not only that they are common\nproblems that everyone faces.\n\n457\n00:25:57.890 --> 00:26:00.730\nBut, even you face that with\nall of your expertise, so\n\n458\n00:26:00.730 --> 00:26:01.710\nthat makes me feel a lot better.\n\n459\n00:26:01.710 --> 00:26:03.310\nThank you very much, Justin.\n\n460\n00:26:03.310 --> 00:26:06.220\nBut, I think that's about it for\nthis episode.\n\n461\n00:26:06.220 --> 00:26:08.370\nSo, we're gonna go ahead and\nwrap things up, so\n\n462\n00:26:08.370 --> 00:26:11.410\nsigning off for ITPro.TV,\nI've been your host Peter van Rysdam.\n\n463\n00:26:11.410 --> 00:26:12.310\n&gt;&gt; And I'm Justin Dennison.\n\n464\n00:26:12.310 --> 00:26:15.288\n&gt;&gt; And we'll, see you next time.\n\n465\n00:26:15.288 --> 00:26:21.181\n[MUSIC]\n\n466\n00:26:21.181 --> 00:26:24.277\n&gt;&gt; Thank you for watching ITPro.TV.\n\n",
          "vimeoId": "213219781"
        },
        {
          "description": "You're not really utilizing the full potential of Git until you've connected to a remote repository. In this episode, Peter and Justin explain how to make that connection and highlight some of the more popular repositories available online including GitHub.",
          "length": "1502",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-introtogit/techskills-introtogit-6-1-connecting_to_a_remote_repository-041217-PGM.00_28_52_11.Still001.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-introtogit/techskills-introtogit-6-1-connecting_to_a_remote_repository-041217-PGM.00_28_52_11.Still001-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-introtogit/techskills-introtogit-6-1-connecting_to_a_remote_repository-041217-PGM.00_28_52_11.Still001-sm.jpg",
          "title": "Connecting to a Remote Repository",
          "transcript": "WEBVTT\n\n1\n00:00:00.008 --> 00:00:05.491\nWelcome to ITPRO.TV, I'm your host,\n\n2\n00:00:05.491 --> 00:00:09.931\n[SOUND] You are watching\n\n3\n00:00:09.931 --> 00:00:14.660\nITPRO.TV Hello, and welcome to ITPRO.TV.\n\n4\n00:00:14.660 --> 00:00:18.330\nI'm your host Peter VanRysdem and today\nwe're continuing with our introduction to\n\n5\n00:00:18.330 --> 00:00:23.970\nGIT and specifically we are going to talk\nabout connecting to a remote repository.\n\n6\n00:00:23.970 --> 00:00:26.080\nHere to help us,\nlet's see how to set that up and\n\n7\n00:00:26.080 --> 00:00:27.730\ntake all the steps to make it right.\n\n8\n00:00:27.730 --> 00:00:28.720\nWe have Justin Denison.\n\n9\n00:00:28.720 --> 00:00:29.870\nJustin, how are you doing?\n\n10\n00:00:29.870 --> 00:00:30.640\nI am doing well, Peter.\n\n11\n00:00:30.640 --> 00:00:31.290\nHow are you today?\n\n12\n00:00:31.290 --> 00:00:32.370\nI am fantastic.\n\n13\n00:00:32.370 --> 00:00:34.470\nThank you and I know up to this point,\n\n14\n00:00:34.470 --> 00:00:39.300\nwe've talked a lot about just how we set\nup the repo and most of it has been local.\n\n15\n00:00:39.300 --> 00:00:44.020\nSo, it sound like with a service like\nthis, it makes most sense when we're\n\n16\n00:00:44.020 --> 00:00:49.700\nsharing it across a server to a lot of\ndifferent people, so how do we do that?\n\n17\n00:00:49.700 --> 00:00:50.850\nYou're definitely onto it,\n\n18\n00:00:50.850 --> 00:00:53.520\nand we've actually seen this\na little bit already, right?\n\n19\n00:00:53.520 --> 00:00:55.540\nWe've touched on GitHub, right?\n\n20\n00:00:55.540 --> 00:00:58.830\nSo, GitHub is one of the services that\nwe're gonna use, just to demonstrate this.\n\n21\n00:00:58.830 --> 00:01:02.050\nThis is not the only service, you can\nactually set up your own Git server.\n\n22\n00:01:02.050 --> 00:01:05.570\nLocally, because Git again is distributed.\n\n23\n00:01:05.570 --> 00:01:09.510\nThat means that if you and I are both\nworking on a repo, we have full copies.\n\n24\n00:01:09.510 --> 00:01:14.520\nBut, if we want to submit those changes\nto a central copy, kinda resolve those so\n\n25\n00:01:14.520 --> 00:01:16.165\nwe can each update our copies.\n\n26\n00:01:16.165 --> 00:01:19.450\nKinda like a Dropbox or\nGoogleDrive or whatever.\n\n27\n00:01:19.450 --> 00:01:23.750\nThen we need a server as\nkind of our one truth,\n\n28\n00:01:23.750 --> 00:01:29.530\nour one intersection of all of our Git\nrepo highways, so to speak, so- But\n\n29\n00:01:29.530 --> 00:01:33.470\nthe benefit to using a GitHub or something\nlike that is that they're backing it up.\n\n30\n00:01:33.470 --> 00:01:36.860\nThen it's kinda out there in the cloud,\nand you're not worrying about\n\n31\n00:01:36.860 --> 00:01:40.610\nthe hurricane that comes through, the\ntornado that ruined your server, right?\n\n32\n00:01:40.610 --> 00:01:44.024\nExactly, so\ntypically what I do in using a Git server,\n\n33\n00:01:44.024 --> 00:01:46.336\nI don't host one locally, you can.\n\n34\n00:01:46.336 --> 00:01:49.550\nBut when you haven't a services like\nGitHub which is you're gonna use.\n\n35\n00:01:49.550 --> 00:01:54.260\nBut you also have like Bitbucket,\nGitLab on the cloud,\n\n36\n00:01:54.260 --> 00:01:56.910\nas well as a couple other ones\nthat will host this for you.\n\n37\n00:01:56.910 --> 00:02:01.118\nAs you said back it up, ensure that\nit's there, ensure that it's available.\n\n38\n00:02:01.118 --> 00:02:05.630\nI've seen GitHub website be down\none time in like the four and\n\n39\n00:02:05.630 --> 00:02:09.590\nhalf years that I've been using GitHub and\nit kinda freaked me out.\n\n40\n00:02:09.590 --> 00:02:12.360\nWhat was really cool though\nthey had like a nice little.\n\n41\n00:02:12.360 --> 00:02:15.310\nUnicorn that said, sorry we're not here.\n\n42\n00:02:15.310 --> 00:02:20.010\nSo it was fine, but\nyeah GitHub is incredibly powerful so\n\n43\n00:02:20.010 --> 00:02:20.770\nthat's why we're gonna use it.\n\n44\n00:02:20.770 --> 00:02:22.050\nIt's very ubiquitous.\n\n45\n00:02:22.050 --> 00:02:24.810\nAll right, yeah if you could show\nus how to, then go ahead and\n\n46\n00:02:24.810 --> 00:02:29.410\nconnect our local repository that we've\nset up with GitHub that would be great.\n\n47\n00:02:29.410 --> 00:02:31.040\nAll right, so let's kind of set the stage.\n\n48\n00:02:31.040 --> 00:02:34.160\nLet's say that I've started\nworking on a repo, right?\n\n49\n00:02:34.160 --> 00:02:39.530\nI had this idea, I'm building\na project and now I'm at a stage where\n\n50\n00:02:39.530 --> 00:02:42.890\nif I keep this local,\nif my computer fails I'm in trouble.\n\n51\n00:02:42.890 --> 00:02:43.800\nThat's one.\n\n52\n00:02:43.800 --> 00:02:46.520\nBut also,\nif Peter wants to work on it, right?\n\n53\n00:02:46.520 --> 00:02:48.760\nI have this idea for\na feature, it will help.\n\n54\n00:02:48.760 --> 00:02:51.780\nOr I can help do some of the graphics and\nwhat not.\n\n55\n00:02:51.780 --> 00:02:55.420\nThen I could hand that to a thumb drive,\nor put it on a network file share.\n\n56\n00:02:55.420 --> 00:03:00.390\nPut it in Google Drive, but\nas we know, if he makes changes\n\n57\n00:03:00.390 --> 00:03:04.860\nto that original project, those changes\nare forever, like if he deletes a file.\n\n58\n00:03:04.860 --> 00:03:09.790\nUsing Git, I can back those up, and manage\nthose submission of changes appropriately.\n\n59\n00:03:09.790 --> 00:03:10.980\nSo, we're gonna use GitHub.\n\n60\n00:03:10.980 --> 00:03:12.860\nSo, let's go ahead and\ntake a look at our screen.\n\n61\n00:03:12.860 --> 00:03:15.820\nWe're gonna set up a local\nrepo with a few commits here,\n\n62\n00:03:15.820 --> 00:03:19.248\nagain, just as a little bit of a review.\n\n63\n00:03:19.248 --> 00:03:23.970\nSo, our_first_remote, all right.\n\n64\n00:03:23.970 --> 00:03:27.366\nSo there's our directory,\nwe go in our_first_remote,\n\n65\n00:03:27.366 --> 00:03:32.060\ngit init, and\nlet's say we want three files, right?\n\n66\n00:03:32.060 --> 00:03:36.860\nSo one.py, two.py, three.py.\n\n67\n00:03:36.860 --> 00:03:40.690\nVery originally,\nnot actually meaningful in this case.\n\n68\n00:03:40.690 --> 00:03:43.660\nThis is again just to show\nhow things are going.\n\n69\n00:03:43.660 --> 00:03:46.420\nAnd we should always have a README,\nall right?\n\n70\n00:03:47.750 --> 00:03:51.220\nSo README, and if I look here.\n\n71\n00:03:51.220 --> 00:03:55.710\nThis is to demonstrate remote usage\n\n72\n00:03:58.490 --> 00:04:04.650\nof a git server, Namely GitHub.\n\n73\n00:04:04.650 --> 00:04:08.180\nNow, Peter I don't need you judging me on\nmy punctuations and things of that nature.\n\n74\n00:04:08.180 --> 00:04:09.721\nIt's not actually what I was gonna ask.\n\n75\n00:04:09.721 --> 00:04:13.354\n[LAUGH] I know you said in a previous\nepisode that if you had a folder that\n\n76\n00:04:13.354 --> 00:04:16.090\ndidn't have anything in it,\nit doesn't show up.\n\n77\n00:04:16.090 --> 00:04:18.075\nThat's not the same view of\na file like the one, two and\n\n78\n00:04:18.075 --> 00:04:21.360\nthree.py that don't actually\nhave any date on it I'm, right?\n\n79\n00:04:21.360 --> 00:04:26.283\nExactly, well there's no any text or\nanything in them but\n\n80\n00:04:26.283 --> 00:04:31.005\nthe creation of file itself if\nwe take a look says here but\n\n81\n00:04:31.005 --> 00:04:34.350\nthey are not,\nthey are not- Quite fully 0.001.\n\n82\n00:04:34.350 --> 00:04:37.850\nYeah it's there, and Git is doing\nthat because hey maybe there's not\n\n83\n00:04:37.850 --> 00:04:41.550\nanything in there now but maybe there's\ngonna be something in there Later,\n\n84\n00:04:41.550 --> 00:04:44.020\nand that's just a convention that it uses.\n\n85\n00:04:44.020 --> 00:04:47.950\nCuz folders I can't tell you how many\ntimes I've got on somebody's computer.\n\n86\n00:04:47.950 --> 00:04:49.210\nThey're like it's in that folder, and\n\n87\n00:04:49.210 --> 00:04:53.130\nyou click and there's nothing in that\nfolder, and nothing in the next folder.\n\n88\n00:04:53.130 --> 00:04:55.490\nI'm like if you just get rid of\nthese folders, this'll help.\n\n89\n00:04:55.490 --> 00:04:57.390\nIt's just to keep things clean and neat.\n\n90\n00:04:57.390 --> 00:04:59.520\nAnd you only need folders for\norganizations.\n\n91\n00:04:59.520 --> 00:05:02.730\nWell, when they actually have files in\nthem cuz otherwise they're meaningless.\n\n92\n00:05:02.730 --> 00:05:05.210\nRight, the files are the meaningful part.\n\n93\n00:05:05.210 --> 00:05:08.990\nSo, even though they're empty so\nto speak it will still track them,\n\n94\n00:05:08.990 --> 00:05:11.310\nso that's a good question\nkeeping me honest.\n\n95\n00:05:11.310 --> 00:05:13.790\nSo, I'm just gonna do a git add and\n\n96\n00:05:13.790 --> 00:05:19.310\nI'm gonna put dot which stands in a Unix\nstyle environment this directory.\n\n97\n00:05:19.310 --> 00:05:21.170\nOkay, so if I say git add.\n\n98\n00:05:21.170 --> 00:05:24.160\nThat's a little new for\nus, and I type git status.\n\n99\n00:05:24.160 --> 00:05:28.830\nIt will actually take everything in\nthis repo at this top from this file or\n\n100\n00:05:28.830 --> 00:05:32.140\nexcuse me, in this folder under and\nit will add it, okay.\n\n101\n00:05:32.140 --> 00:05:37.690\nSo, this are now staged to be committed\nand I'm gonna say initial commit.\n\n102\n00:05:39.030 --> 00:05:42.850\nSo, those have all been committed and\nnow if I clear and look at the log,\n\n103\n00:05:42.850 --> 00:05:44.380\nthat's the only commit.\n\n104\n00:05:44.380 --> 00:05:48.960\nNow, I said the commit messages should be\nmeaningful, but if you're just doing some\n\n105\n00:05:48.960 --> 00:05:53.610\nproject setup, right, there's actually\nnothing really in any of these files.\n\n106\n00:05:53.610 --> 00:05:55.300\nA lot of times you will\nsee initial commit or\n\n107\n00:05:55.300 --> 00:05:59.980\nfirst commit as kind of just\na project setup, so get used to that.\n\n108\n00:05:59.980 --> 00:06:04.250\nThat's one of the few times I have kind of\nmeaningless commitment to do this, treat,\n\n109\n00:06:04.250 --> 00:06:06.380\ntry keep all of my other ones meaningful.\n\n110\n00:06:06.380 --> 00:06:08.560\nSo, we've started this repo, right?\n\n111\n00:06:08.560 --> 00:06:10.150\nPeter wants to work on it.\n\n112\n00:06:10.150 --> 00:06:15.550\nWe need some way to share this using\nan appropriate Git tool, all right.\n\n113\n00:06:15.550 --> 00:06:18.310\nSo, now we're gonna switch\nover into our browser here.\n\n114\n00:06:18.310 --> 00:06:19.810\nAnd I have GitHub open.\n\n115\n00:06:19.810 --> 00:06:21.970\nAnd I'm actually logged in to my user.\n\n116\n00:06:21.970 --> 00:06:23.770\nYou have to sign up to be a user.\n\n117\n00:06:23.770 --> 00:06:27.000\nIt is free as long as you allow\nother people to look at it.\n\n118\n00:06:27.000 --> 00:06:27.690\nAll right,\n\n119\n00:06:27.690 --> 00:06:31.220\nas long as its open to the public,\neverything you do on GitHub is free.\n\n120\n00:06:32.500 --> 00:06:37.050\nNow, if you want to manage\nprivate repost right,\n\n121\n00:06:37.050 --> 00:06:39.940\nthen well you'll have to pay money for\nthat.\n\n122\n00:06:39.940 --> 00:06:41.900\nBut, if your part of an organization and\n\n123\n00:06:41.900 --> 00:06:46.500\nyour business values keep things private\nthen maybe a good thing for you.\n\n124\n00:06:46.500 --> 00:06:48.640\nSo, in the upper right hand corner here.\n\n125\n00:06:49.700 --> 00:06:52.390\nI have this plus sign and\nhere's my little emoticon.\n\n126\n00:06:52.390 --> 00:06:55.270\nYou can change this if you\nuse a service like Gravatar.\n\n127\n00:06:55.270 --> 00:06:57.800\nI think you're Gravatar\nwill actually show up here.\n\n128\n00:06:57.800 --> 00:07:01.470\nAnd I can get a new repo, import a repo.\n\n129\n00:07:01.470 --> 00:07:02.420\nGet a new gist.\n\n130\n00:07:02.420 --> 00:07:06.190\nA gist is just little snippets\nthat you may reuse a great deal.\n\n131\n00:07:06.190 --> 00:07:10.764\nAnd instead of building a whole project\nto house those in, I can just Create\n\n132\n00:07:10.764 --> 00:07:14.846\nlike a paste bin or snip it or\nsomething like that just to hold on to.\n\n133\n00:07:14.846 --> 00:07:19.071\nI don't use gist a great deal,\nthere's a few here and there but\n\n134\n00:07:19.071 --> 00:07:21.165\nI wanna click new repo, okay?\n\n135\n00:07:21.165 --> 00:07:26.984\nNow, all we're doing is we're creating\na space on GitHub servers for\n\n136\n00:07:26.984 --> 00:07:28.880\nthis Git repository.\n\n137\n00:07:28.880 --> 00:07:33.840\nI have to give it a name, I have seen\npeople choose a different name here\n\n138\n00:07:33.840 --> 00:07:36.700\nthat is different than\nthe name they use locally.\n\n139\n00:07:36.700 --> 00:07:38.840\nThat doesn't seem like\nit's the smartest idea.\n\n140\n00:07:38.840 --> 00:07:42.770\nSo, I'm a bit proponent of reducing\ncognitive load and I'm with you.\n\n141\n00:07:43.830 --> 00:07:48.445\nIf I have a folder, I'm gonna try my best\nto use that folder name as my repo name\n\n142\n00:07:48.445 --> 00:07:50.796\nbecause now, no have to think, okay.\n\n143\n00:07:50.796 --> 00:07:55.653\nIn the our first remote\nfolder is the orange cheese\n\n144\n00:07:55.653 --> 00:07:58.894\ncake project so hold on a second.\n\n145\n00:07:58.894 --> 00:08:01.864\nYou don't have to think, remove the amount\nof thinking that you have to do cuz you'll\n\n146\n00:08:01.864 --> 00:08:03.490\nhave a lot to think about anyway.\n\n147\n00:08:03.490 --> 00:08:04.890\nSo if I go over here and\n\n148\n00:08:04.890 --> 00:08:09.110\nhere's our first remote I wanna\nuse that same name right here.\n\n149\n00:08:09.110 --> 00:08:14.144\nSo our first remote and a lot of\ntimes we don't have to worry about\n\n150\n00:08:14.144 --> 00:08:20.684\nname collisions with repositories, so like\nif Peter made our first remote on his.\n\n151\n00:08:20.684 --> 00:08:26.440\nIt would be different because it's\nprepended by my username, justindevpro.\n\n152\n00:08:26.440 --> 00:08:31.480\nSo we'll see that in the URL here, and\nthen do you want a public or private?\n\n153\n00:08:31.480 --> 00:08:34.980\nWell I could click private and\nit says, where is my money.\n\n154\n00:08:34.980 --> 00:08:38.690\nSo we're gonna click public and\nI should put a description.\n\n155\n00:08:38.690 --> 00:08:42.277\nAnd well, we already have a readme,\nso I'm not gonna initialize a readme.\n\n156\n00:08:42.277 --> 00:08:44.550\nAnd a Git ignore, what is that?\n\n157\n00:08:44.550 --> 00:08:46.430\nWell, we'll get to those.\n\n158\n00:08:46.430 --> 00:08:48.480\nAnd then I'm gonna create a repository.\n\n159\n00:08:49.590 --> 00:08:53.650\nWe now have a space on GitHub servers for\nour project.\n\n160\n00:08:54.740 --> 00:08:58.935\nAt current time, this is empty,\nthere's nothing here.\n\n161\n00:08:58.935 --> 00:09:02.390\nGitHub actually does a very good\njob of telling us, if you wanna\n\n162\n00:09:02.390 --> 00:09:08.100\na brand new repository to put here, right,\nyou need to do these things locally.\n\n163\n00:09:08.100 --> 00:09:12.390\nIf you already have one,\nyou need to do these next steps.\n\n164\n00:09:12.390 --> 00:09:13.548\nSo we're actually gonna do that next step.\n\n165\n00:09:13.548 --> 00:09:16.993\nBut before I do, I wanna zoom in here, and\n\n166\n00:09:16.993 --> 00:09:21.630\nwe looked at cloning from\nsomeone else's repository.\n\n167\n00:09:21.630 --> 00:09:26.310\nBut when you make yours, they will\nactually give you two different URLs.\n\n168\n00:09:26.310 --> 00:09:30.242\nI got an HTTPS, right, it gives you TLS,\nsecure socket layer for\n\n169\n00:09:30.242 --> 00:09:31.682\ntransmission of HTTP.\n\n170\n00:09:31.682 --> 00:09:36.273\nNotice it's my username and\nactual repo name, all right, so\n\n171\n00:09:36.273 --> 00:09:40.778\nif Peter had our_first_remote\nas a Git repo on Git Hub there\n\n172\n00:09:40.778 --> 00:09:45.310\nwouldn't be name clashes I\ndon't have to worry about that.\n\n173\n00:09:45.310 --> 00:09:49.309\nIf I though wanted to create another repo\ncalled our_first_remote and I have two,\n\n174\n00:09:49.309 --> 00:09:52.190\nthat's not allowed because\nI've already used that name.\n\n175\n00:09:52.190 --> 00:09:54.531\nSo it's kinda like my own space.\n\n176\n00:09:54.531 --> 00:09:59.559\nSo we're going to use HTTPS\nwell because this is,\n\n177\n00:09:59.559 --> 00:10:02.980\nit's a little easier to set up.\n\n178\n00:10:02.980 --> 00:10:07.293\nIf you're advanced and you wanna\nworry about this, you can use SSH.\n\n179\n00:10:07.293 --> 00:10:12.521\nAnd notice, this is a little different\nbecause this is transmitting over\n\n180\n00:10:12.521 --> 00:10:18.400\nthe SSH protocol kinda like SCP sending\nfiles to another server using SSH.\n\n181\n00:10:18.400 --> 00:10:20.070\nSo we're gonna use HTTPS.\n\n182\n00:10:20.070 --> 00:10:24.067\nNow I've used a password manager so\nwe'll have to manage that a little bit to\n\n183\n00:10:24.067 --> 00:10:27.820\nsave my password here cuz I don't\nparticularly remember my password.\n\n184\n00:10:27.820 --> 00:10:30.761\nSo you'll see that that can cause some\ntrouble but that'll be all right,\n\n185\n00:10:30.761 --> 00:10:31.840\nwe'll handle that.\n\n186\n00:10:31.840 --> 00:10:34.058\nSo I'm gonna grab this URL and\n\n187\n00:10:34.058 --> 00:10:39.042\nnow we're gonna come back to our\nlocal repo and we're gonna look.\n\n188\n00:10:39.042 --> 00:10:42.154\nIf I want to look at what am I linked to?\n\n189\n00:10:42.154 --> 00:10:45.423\nI have a local, and I have a remote, and\n\n190\n00:10:45.423 --> 00:10:50.760\nif I type git remote and -v,\nwhich stands for verbose.\n\n191\n00:10:50.760 --> 00:10:55.200\nPrint everything out, and if I hit it,\nnotice it comes back with nothing.\n\n192\n00:10:55.200 --> 00:10:59.330\nIf you type that, that means that\neven if you create it on GitHub,\n\n193\n00:10:59.330 --> 00:11:02.080\nyou're local repo knows nothing\nabout your GitHub repo.\n\n194\n00:11:03.290 --> 00:11:05.382\nThey're not technically linked yet.\n\n195\n00:11:05.382 --> 00:11:07.750\nSo how do we get that done?\n\n196\n00:11:07.750 --> 00:11:10.106\nWell there are a set of conventions.\n\n197\n00:11:10.106 --> 00:11:12.720\nYou don't have to use these\nnaming conventions, but\n\n198\n00:11:12.720 --> 00:11:16.437\nI recommend it because a lot of the\nliterature, a lot of the documentation,\n\n199\n00:11:16.437 --> 00:11:18.020\nwill use similar conventions.\n\n200\n00:11:18.020 --> 00:11:21.788\nSo git remote add, so\nI'm gonna add a remote.\n\n201\n00:11:21.788 --> 00:11:28.950\nAnd then here's the setup,\nname url, so there's the pattern.\n\n202\n00:11:28.950 --> 00:11:31.990\nNow, don't type name and\nurl because that's not gonna work.\n\n203\n00:11:31.990 --> 00:11:35.996\nBut I have to give the remote a name\nbecause I can have multiple places that\n\n204\n00:11:35.996 --> 00:11:37.583\nI'm sending this Git repo.\n\n205\n00:11:37.583 --> 00:11:40.760\nSo origin is the convention.\n\n206\n00:11:41.960 --> 00:11:48.060\nIf I'm on GitHub and it's my project, and\nI have a local copy I call that origin.\n\n207\n00:11:48.060 --> 00:11:49.770\nNow why is that the case?\n\n208\n00:11:49.770 --> 00:11:51.720\nIt's just a convention.\n\n209\n00:11:51.720 --> 00:11:55.060\nI could easily call this peanutButter.\n\n210\n00:11:57.150 --> 00:11:59.110\nAnd that's completely okay, right?\n\n211\n00:12:00.230 --> 00:12:03.293\nBut we're gonna use origin,\nand we're going to paste.\n\n212\n00:12:03.293 --> 00:12:07.686\nNow, I will forewarn you, Windows users,\nif you're using git bash,\n\n213\n00:12:07.686 --> 00:12:11.970\nthe control-v does not work,\nit's shift insert in git bash.\n\n214\n00:12:11.970 --> 00:12:16.920\nSo, quick little tip there,\nor right click and paste.\n\n215\n00:12:16.920 --> 00:12:19.700\nThis needs to be exactly correct.\n\n216\n00:12:19.700 --> 00:12:22.810\nI'm gonna hit Enter I see no errors.\n\n217\n00:12:22.810 --> 00:12:24.420\nOkay, well that's good.\n\n218\n00:12:24.420 --> 00:12:28.917\nAnd if I git remote -v, I now have\n\n219\n00:12:28.917 --> 00:12:34.550\nan origin remote with the following URL.\n\n220\n00:12:34.550 --> 00:12:42.190\nThis URL needs to match this URL\nexactly and now they are linked.\n\n221\n00:12:42.190 --> 00:12:46.043\nNow what if I make a mistake there,\nJustin, and I didn't use Ctrl + V or\n\n222\n00:12:46.043 --> 00:12:47.270\nanything like that?\n\n223\n00:12:47.270 --> 00:12:49.380\nI just typed it in and I typed it wrong.\n\n224\n00:12:49.380 --> 00:12:51.840\nCan I fix that?\nSo, we can fix that.\n\n225\n00:12:51.840 --> 00:12:55.000\nSo, if,\nthere's a couple of different ways.\n\n226\n00:12:55.000 --> 00:12:57.950\nThere's actually several\nways to accomplish this.\n\n227\n00:12:57.950 --> 00:13:02.350\nBut let's say that the first thing\nthat I typed in wrong was the URL.\n\n228\n00:13:02.350 --> 00:13:08.163\nRight I've typed Justin, and\ninstead of devpro I put evpro E-V.\n\n229\n00:13:08.163 --> 00:13:10.750\nSo I just wanna remove it and start over.\n\n230\n00:13:11.840 --> 00:13:17.790\nSo if I did that I can say git\nremote remove, and here's the trick.\n\n231\n00:13:17.790 --> 00:13:21.350\nA lot of people want to repaste in or\nretype the URL.\n\n232\n00:13:21.350 --> 00:13:28.901\nYou actually are going to reference it\nby name, so I want to remove origin, And\n\n233\n00:13:28.901 --> 00:13:34.894\nnow that I do that if I type git remove -v\nwell I no longer have a remote link and\n\n234\n00:13:34.894 --> 00:13:40.530\nthen I can go back and re-add as I\ndid before with the correct spelling.\n\n235\n00:13:40.530 --> 00:13:43.090\nSo that's the one mistake that you made.\n\n236\n00:13:43.090 --> 00:13:46.727\nNow if you have a system\nof naming your remotes and\n\n237\n00:13:46.727 --> 00:13:52.051\nyou accidentally mistyped the name so\ninstead of calling this origin,\n\n238\n00:13:52.051 --> 00:13:55.084\nI wanna call it mine, this is my remote.\n\n239\n00:13:55.084 --> 00:14:00.641\nSo I can git remote rename and\nthen what is the current name,\n\n240\n00:14:00.641 --> 00:14:04.760\nand then what is the new name, mine.\n\n241\n00:14:04.760 --> 00:14:10.429\nSo I'm going to git remote, rename\norigin mine, and now if I print out,\n\n242\n00:14:14.362 --> 00:14:18.794\nThis is no longer called origin,\nbut instead it's called mine okay.\n\n243\n00:14:18.794 --> 00:14:24.076\nNow we're gonna use the convention so\nI'm gonna actually gonna rename\n\n244\n00:14:24.076 --> 00:14:29.550\nthis one more time back to origin so\ngit remote rename mine back to origin.\n\n245\n00:14:30.880 --> 00:14:34.210\nAnd just to show you, boom there we go.\n\n246\n00:14:34.210 --> 00:14:39.180\nSo, now we actually have those links,\nbut if we come back here and\n\n247\n00:14:39.180 --> 00:14:41.770\nI refresh, Peter, what do you notice?\n\n248\n00:14:43.450 --> 00:14:45.790\nI notice nothing has changed.\n\n249\n00:14:45.790 --> 00:14:49.365\nExactly right, that if you're used\nto Google Drive or Dropbox or\n\n250\n00:14:49.365 --> 00:14:53.722\nOneDrive, you're like I made a change\nlocally it's automatically there.\n\n251\n00:14:53.722 --> 00:14:58.923\nThat is not true for Git, it will only\nsync these two when you tell it to,\n\n252\n00:14:58.923 --> 00:15:02.655\nright, and\nwe're talking about local changes and\n\n253\n00:15:02.655 --> 00:15:06.770\nsending them out to our server Okay,\nso how do I do that?\n\n254\n00:15:07.870 --> 00:15:10.720\nWell, you have to be careful.\n\n255\n00:15:10.720 --> 00:15:11.850\nWhen should I do that?\n\n256\n00:15:11.850 --> 00:15:13.330\nIs the best question to ask.\n\n257\n00:15:13.330 --> 00:15:18.384\nI typically do this at the end of the day\ncuz if things go horribly array, right?\n\n258\n00:15:18.384 --> 00:15:21.120\nYour computer dies, things break.\n\n259\n00:15:22.840 --> 00:15:24.860\nYou're at least only a day behind.\n\n260\n00:15:24.860 --> 00:15:27.167\nI've actually talked to\npeople who are like, yeah,\n\n261\n00:15:27.167 --> 00:15:29.190\nI haven't pushed those\nchanges in three weeks.\n\n262\n00:15:30.210 --> 00:15:32.050\nI'm like, wow why would you not do that?\n\n263\n00:15:32.050 --> 00:15:33.305\nWell it's just a lot of work.\n\n264\n00:15:33.305 --> 00:15:34.821\nNot really.\n\n265\n00:15:34.821 --> 00:15:36.882\n[LAUGH] Not really.\n\n266\n00:15:36.882 --> 00:15:40.814\nSo how do we actually get\nthose on our GitHub project?\n\n267\n00:15:40.814 --> 00:15:43.760\nSo, cool.\n\n268\n00:15:43.760 --> 00:15:45.554\nLet's clear out here.\n\n269\n00:15:45.554 --> 00:15:51.769\nThe convention is git push, the remote\nname so origin, and then the branch name.\n\n270\n00:15:51.769 --> 00:15:55.236\nNow we haven't talked about branches,\nwe'll talk about branches soon.\n\n271\n00:15:55.236 --> 00:15:59.824\nBut typically the convention for\nthe main working branch is master.\n\n272\n00:15:59.824 --> 00:16:03.262\nThis is almost always the same for\neverybody.\n\n273\n00:16:03.262 --> 00:16:08.170\nBut if I'd named this different than\norigin, this would be that name, okay?\n\n274\n00:16:08.170 --> 00:16:10.330\nSo git push origin master.\n\n275\n00:16:10.330 --> 00:16:13.289\nAnd then if you're using HTTPS and\nyou have not saved your credentials.\n\n276\n00:16:13.289 --> 00:16:19.737\nIf you're on Windows or if you're using\nthe git client in Mac like GitHub GUI,\n\n277\n00:16:19.737 --> 00:16:24.426\nor on Windows you have to type\nthese in the first time, but\n\n278\n00:16:24.426 --> 00:16:29.921\nit may ask you to verify only that\none time and then it saves, okay?\n\n279\n00:16:29.921 --> 00:16:31.134\nNow, I typically don't do that.\n\n280\n00:16:31.134 --> 00:16:33.324\nI have it ask me every time, but\n\n281\n00:16:33.324 --> 00:16:37.390\nin this case that becomes\na little bit of a problem.\n\n282\n00:16:37.390 --> 00:16:40.710\nBecause it's gonna ask me for\nmy password, and I don't remember it.\n\n283\n00:16:40.710 --> 00:16:43.400\nSo I gotta go grab it from last pass here.\n\n284\n00:16:43.400 --> 00:16:48.860\nAnd here we go, show matching sites,\ncopy password, and paste.\n\n285\n00:16:48.860 --> 00:16:50.540\nNow, I just pasted.\n\n286\n00:16:50.540 --> 00:16:52.580\nIf you're on Linux or OS environment, or\n\n287\n00:16:52.580 --> 00:16:56.670\neven using gitdash to keep people\nfrom shoulder surfing and being like,\n\n288\n00:16:56.670 --> 00:17:00.160\nyour password is six characters long,\nit actually doesn't show it.\n\n289\n00:17:00.160 --> 00:17:03.230\nSo it'll look like nothing's\nthere even if you're typing.\n\n290\n00:17:03.230 --> 00:17:07.330\nBut if you get it right,\nit'll actually push those out.\n\n291\n00:17:07.330 --> 00:17:09.240\nNow that's sending it to GitHub.\n\n292\n00:17:10.440 --> 00:17:13.110\nAnd let's see here,\ncounting objects, compression,\n\n293\n00:17:13.110 --> 00:17:18.310\ncompressing objects to\ngithub.com/justindevpro/our_first_remote.\n\n294\n00:17:18.310 --> 00:17:20.970\nNew branch, master gets pushed to master.\n\n295\n00:17:20.970 --> 00:17:23.050\nIf I come back, are you ready Peter?\n\n296\n00:17:23.050 --> 00:17:24.626\nI am and I hope there's stuff in here now.\n\n297\n00:17:24.626 --> 00:17:27.760\nYeah me too,cuz if not man\nthere's gonna be egg on my face.\n\n298\n00:17:27.760 --> 00:17:31.820\nSo if I refresh, boom, there we go.\n\n299\n00:17:31.820 --> 00:17:33.400\nThis is a quick point.\n\n300\n00:17:34.590 --> 00:17:39.070\nThis actually takes a snapshot\nof when you made this command\n\n301\n00:17:40.330 --> 00:17:45.540\nGitHub will actually give you a list\nof those commit and your messages.\n\n302\n00:17:45.540 --> 00:17:49.420\nSo, commit messages are very important and\nright here if we look.\n\n303\n00:17:49.420 --> 00:17:54.160\nIt will show you the files and the changes\nthat were made for that commit.\n\n304\n00:17:54.160 --> 00:17:55.690\nGitHub is incredibly powerful.\n\n305\n00:17:55.690 --> 00:17:59.080\nThere's a lot more to GitHub,\nbut there you go.\n\n306\n00:17:59.080 --> 00:18:03.660\nNow, I set up a crazy\nemail account online.\n\n307\n00:18:03.660 --> 00:18:07.620\nIf this commit is yours make\nsure that justin@justin.justin\n\n308\n00:18:07.620 --> 00:18:09.200\nis associated with your account.\n\n309\n00:18:09.200 --> 00:18:10.490\nClaim this email address.\n\n310\n00:18:10.490 --> 00:18:15.190\nNow when I did a config in a previous\nshow, I used justin@justin.justin.\n\n311\n00:18:15.190 --> 00:18:18.850\nThis is to show you I can actually\nput anything in for email address.\n\n312\n00:18:20.380 --> 00:18:21.960\nAs long as I have the credentials for\n\n313\n00:18:21.960 --> 00:18:25.060\nthe GitHub account regardless of the email\naddress, I can still push to it.\n\n314\n00:18:26.060 --> 00:18:29.730\nIt'll just tell me, hey,\nthat's kinda weird like these don't match.\n\n315\n00:18:29.730 --> 00:18:30.550\nShould they match?\n\n316\n00:18:30.550 --> 00:18:32.620\nAnd are there ways to fix that.\n\n317\n00:18:32.620 --> 00:18:37.550\nWe're not gonna worry about that now,\nbut no,\n\n318\n00:18:37.550 --> 00:18:41.210\nyou should keep them the same as\nI said in the previous episode.\n\n319\n00:18:41.210 --> 00:18:46.310\nYeah, I don't think the .justin\nweb address is out there yet.\n\n320\n00:18:46.310 --> 00:18:48.520\nYeah, the organisation.\n\n321\n00:18:48.520 --> 00:18:55.020\nSo, now that I have this pushed out there,\nI have this linked, I know they work.\n\n322\n00:18:55.020 --> 00:18:58.310\nIf Peter want to come along and\ngrab this, he could.\n\n323\n00:18:58.310 --> 00:19:01.533\nHe could clone this and we'll see some\nworkflows in the later episode, but\n\n324\n00:19:01.533 --> 00:19:03.080\nnow we could start collaborating.\n\n325\n00:19:03.080 --> 00:19:06.430\nI can actually save, push out.\n\n326\n00:19:06.430 --> 00:19:10.800\nAnd so we've seen how to pull, pull,\nit's not actually a pull, it's a clone.\n\n327\n00:19:10.800 --> 00:19:15.690\nWe've seen how it cloned and we've seen\nhow to push new changes to a Git repo.\n\n328\n00:19:15.690 --> 00:19:17.500\nAnd actually let's just\nsee it one more time.\n\n329\n00:19:17.500 --> 00:19:20.978\nLet's make a change to one of\nthese files to see this interface.\n\n330\n00:19:20.978 --> 00:19:26.300\nSo, vim one.py and that is not right.\n\n331\n00:19:28.660 --> 00:19:31.058\nPattern not found, I know, there we go.\n\n332\n00:19:31.058 --> 00:19:38.190\n[LAUGH So print, Hello, so\nit's a very top notch project.\n\n333\n00:19:38.190 --> 00:19:40.570\nI mean,\nthis is gonna make me a lot of money.\n\n334\n00:19:40.570 --> 00:19:41.990\nWe should have made this private.\n\n335\n00:19:41.990 --> 00:19:43.520\nWe should have made it private.\n\n336\n00:19:43.520 --> 00:19:45.440\nYou're right.\nI didn't even think of that.\n\n337\n00:19:45.440 --> 00:19:48.570\nSo now if git status,\nI have a modified file.\n\n338\n00:19:48.570 --> 00:19:53.660\nGit add one and git commit -m.\n\n339\n00:19:53.660 --> 00:19:59.930\nMade a change to one.py and forgot\na quote, just add the quote at the end.\n\n340\n00:19:59.930 --> 00:20:06.120\nNow I can git log, okay there\nare the two commits that I made.\n\n341\n00:20:06.120 --> 00:20:12.860\nAnd if I get git push origin master,\nwell it's, I need to go fix that.\n\n342\n00:20:12.860 --> 00:20:14.370\nI don't like it saving my credentials.\n\n343\n00:20:14.370 --> 00:20:16.749\nBut it's using my OS X toolchain or\n\n344\n00:20:16.749 --> 00:20:20.200\nkeychain to remember the username and\npassword.\n\n345\n00:20:21.270 --> 00:20:22.470\nI'll actually go and delete that.\n\n346\n00:20:22.470 --> 00:20:23.980\nThat's just a personal preference.\n\n347\n00:20:23.980 --> 00:20:27.030\nIf you don't mind you only\nneed to time that in once.\n\n348\n00:20:27.030 --> 00:20:29.386\nGit Bash on Windows typically saves them.\n\n349\n00:20:29.386 --> 00:20:31.960\nLinux saves them unless\nyou tell it not to.\n\n350\n00:20:31.960 --> 00:20:35.590\nAnd then OS X will as well if you\ngive it access to the keychain.\n\n351\n00:20:35.590 --> 00:20:37.670\nSo now we've done another push.\n\n352\n00:20:37.670 --> 00:20:40.930\nI made all these commits, this is the end\nof the next day, I made another push.\n\n353\n00:20:40.930 --> 00:20:43.940\nAnd boom, initial commit.\n\n354\n00:20:43.940 --> 00:20:46.440\nBut then may change to one.py.\n\n355\n00:20:46.440 --> 00:20:50.750\nIf I look at the commits,\nhere's my commit message.\n\n356\n00:20:50.750 --> 00:20:55.300\nAnd then there's the file that has\nchanged with the commit message intel.\n\n357\n00:20:55.300 --> 00:20:59.770\nSo having a remote server\nmanaging our repo, so\n\n358\n00:20:59.770 --> 00:21:02.060\neverybody can see it,\nis incredibly powerful.\n\n359\n00:21:02.060 --> 00:21:02.990\nThat's very cool, Justin.\n\n360\n00:21:02.990 --> 00:21:03.870\nI have one question.\n\n361\n00:21:03.870 --> 00:21:08.260\nWhen you, originally,\nset up this repo and you had it locally,\n\n362\n00:21:08.260 --> 00:21:13.220\nthen you created the GitHub repository,\ndo you still have\n\n363\n00:21:13.220 --> 00:21:17.110\nthat local one as well are you able\nto push changes to that and do you\n\n364\n00:21:17.110 --> 00:21:21.440\nhave to push changes to the GitHub one or\ndoes it kinda override at that point?\n\n365\n00:21:21.440 --> 00:21:25.430\nSo that's a great question,\njust let's back up a little bit.\n\n366\n00:21:25.430 --> 00:21:29.400\nGit is distributed by nature,\nthe copy I have locally is a full copy.\n\n367\n00:21:31.130 --> 00:21:35.650\nI use that as the template to\ncreate the new one in GitHub.\n\n368\n00:21:35.650 --> 00:21:37.910\nSo it was then a copy.\n\n369\n00:21:37.910 --> 00:21:41.280\nAt this point though,\nI will assume the one I put on GitHub\n\n370\n00:21:41.280 --> 00:21:45.840\nis the source of all truth,\nthat it is the one I model after.\n\n371\n00:21:45.840 --> 00:21:48.510\nThen when I clone, I get a full copy.\n\n372\n00:21:48.510 --> 00:21:53.770\nSo any changes I make locally will not\nbe updated to GitHub until I do a push.\n\n373\n00:21:53.770 --> 00:21:57.920\nLikewise, I will not get any changes\nthat maybe you send to GitHub\n\n374\n00:21:57.920 --> 00:22:00.480\nuntil I pull those down locally.\n\n375\n00:22:00.480 --> 00:22:03.610\nSo those copies do not\nnecessarily automatically sync.\n\n376\n00:22:03.610 --> 00:22:05.440\nI have to manage that manually.\n\n377\n00:22:05.440 --> 00:22:08.670\nAnd part of that is,\nwell what if I'm working on features and\n\n378\n00:22:08.670 --> 00:22:14.020\nI'm making commits, but I wanna finish all\nof this series of commits before I push?\n\n379\n00:22:14.020 --> 00:22:20.170\nOr I just wanna do it once a day,\nthen it affords me that flexibility.\n\n380\n00:22:20.170 --> 00:22:24.000\nIn old CVS, or central version controls,\nthat wasn't the case.\n\n381\n00:22:24.000 --> 00:22:27.930\nYou always submitted those changes to the\nserver, cuz that's what manages the repo.\n\n382\n00:22:27.930 --> 00:22:29.810\nGreat.\nNow I noticed, like you said,\n\n383\n00:22:29.810 --> 00:22:34.720\nyou can do those pushes every hour,\nevery minute, every day,\n\n384\n00:22:34.720 --> 00:22:36.130\nevery three weeks if you want to.\n\n385\n00:22:36.130 --> 00:22:37.490\nBut they're not automatic.\n\n386\n00:22:37.490 --> 00:22:39.341\nIs there Is there a way\nto make them automatic or\n\n387\n00:22:39.341 --> 00:22:42.202\nis there a reason you specifically\ndon't want to make them automatic?\n\n388\n00:22:42.202 --> 00:22:46.727\nSo that's a matter of preference for you,\nyour team if you're working on a tem.\n\n389\n00:22:46.727 --> 00:22:51.000\nTypically I manage those manually because\nwell, I'm a little bit of a control freak.\n\n390\n00:22:51.000 --> 00:22:54.310\nBut there are ways,\nremember when we looked inside,\n\n391\n00:22:54.310 --> 00:22:57.240\nactually if you take a look at the screen,\nthis is a little beyond scope but\n\n392\n00:22:57.240 --> 00:22:59.420\njust to give you a heads up here.\n\n393\n00:22:59.420 --> 00:23:02.850\nSo if I go into that .git and I ls.\n\n394\n00:23:02.850 --> 00:23:04.100\nSee this hooks folder?\n\n395\n00:23:05.430 --> 00:23:11.658\nSo hooks are,\nwell let's take a look at post,\n\n396\n00:23:11.658 --> 00:23:18.710\nyeah post update,\nthere we go, what was that?\n\n397\n00:23:18.710 --> 00:23:23.808\nSo, an example hook to prepare a packed\nrepository for use over dumb transports.\n\n398\n00:23:23.808 --> 00:23:28.550\nSo what will happen is when you do\nsome kind of update to this repo,\n\n399\n00:23:28.550 --> 00:23:32.550\nthen you can tell it a series\nof commands to then run\n\n400\n00:23:32.550 --> 00:23:36.230\nwhen that update has been commit or\nsome kind of update like that.\n\n401\n00:23:36.230 --> 00:23:40.820\nSo you could actually automate this\nto push every time you made a commit.\n\n402\n00:23:40.820 --> 00:23:44.630\nI don't do that just because well,\nthat's not in my workflow.\n\n403\n00:23:44.630 --> 00:23:46.680\nBut you could automate features like that.\n\n404\n00:23:46.680 --> 00:23:49.830\nIs it safe to assume there's something\non the flip side as well that\n\n405\n00:23:49.830 --> 00:23:53.440\nwill automatically pull periodically\nto grab the other changes\n\n406\n00:23:53.440 --> 00:23:54.800\nthat I've made or you've made?\n\n407\n00:23:54.800 --> 00:23:57.150\nPeter, that is a good question.\n\n408\n00:23:57.150 --> 00:23:59.180\nI don't think you could automate with git,\nI could be wrong.\n\n409\n00:23:59.180 --> 00:24:00.880\nIt's not something that I've done.\n\n410\n00:24:00.880 --> 00:24:05.080\nBut you can use like cron or\nautomater or some kind of timing script.\n\n411\n00:24:05.080 --> 00:24:09.080\nOr maybe just a startup script\nthat updates all your repos on\n\n412\n00:24:09.080 --> 00:24:10.550\nrestart or boot up.\n\n413\n00:24:10.550 --> 00:24:12.640\nBut typically not something\nyou wanna do inside of Git.\n\n414\n00:24:12.640 --> 00:24:16.660\nBecause when you do pulls, when you,\nas we'll see in a future episode,\n\n415\n00:24:16.660 --> 00:24:19.800\nyou may have to manage how these\nthings kind of mesh together.\n\n416\n00:24:19.800 --> 00:24:23.900\nSo, it's something you wanna be around for\nthe most part.\n\n417\n00:24:23.900 --> 00:24:25.350\nIn my experience anyway.\n\n418\n00:24:25.350 --> 00:24:25.930\nThat makes sense.\n\n419\n00:24:25.930 --> 00:24:31.210\nI know you said it's like voting,\nyou wanna push early and often.\n\n420\n00:24:31.210 --> 00:24:36.420\nBut, we'll figure out kinda that etiquette\nfor when you pull in later episodes.\n\n421\n00:24:36.420 --> 00:24:40.200\nSo, I think at that point, that's\na good spot for us to sign off anyways.\n\n422\n00:24:40.200 --> 00:24:42.390\nSo, we're going to go ahead and\nwrap things up.\n\n423\n00:24:42.390 --> 00:24:44.480\nFor ITPRO.TV, I'm Peter VanRysdam.\n\n424\n00:24:44.480 --> 00:24:47.218\nAnd I'm Justin Dennison And\nwe'll see you next time.\n\n425\n00:24:47.218 --> 00:24:49.517\n[MUSIC]\n\n426\n00:24:49.517 --> 00:24:52.668\nThank you for\n\n427\n00:24:52.668 --> 00:24:58.115\nwatching ITPRO.TV.\n\n",
          "vimeoId": "213220301"
        },
        {
          "description": "Branches are one of the more useful features when working collaboratively in Git. Justin and Peter show not only how to create branches, but how to they fit into the overall repository structure.",
          "length": "1262",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-introtogit/techskills-introtogit-7-1-branching_out_with_git-041317-high.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-introtogit/techskills-introtogit-7-1-branching_out_with_git-041317-high-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-introtogit/techskills-introtogit-7-1-branching_out_with_git-041317-high-sm.jpg",
          "title": "Branching out with Git",
          "transcript": "",
          "vimeoId": "215188606"
        },
        {
          "description": "Git can keep an entire development team working in harmony. To make that happen, Justin and Peter show you how to merge your work with your teammates using Git as well as how to handle conflicts as they arise.",
          "length": "1016",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-introtogit/techskills-introtogit-8-1-merging_with_git-041317-PGM.00_16_41_22.Still001.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-introtogit/techskills-introtogit-8-1-merging_with_git-041317-PGM.00_16_41_22.Still001-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-introtogit/techskills-introtogit-8-1-merging_with_git-041317-PGM.00_16_41_22.Still001-sm.jpg",
          "title": "Merging with Git",
          "transcript": "",
          "vimeoId": "214011373"
        },
        {
          "description": "You know you should commit early and often to keep your work in sync with the remote repository. But if you've gotten your branches out of sync, Peter and Justin show you how to get your local project back in line with remote repo.",
          "length": "946",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-introtogit/techskills-introtogit-9-1-remote_and_branches-041317-PGM.00_15_30_17.Still001.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-introtogit/techskills-introtogit-9-1-remote_and_branches-041317-PGM.00_15_30_17.Still001-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-introtogit/techskills-introtogit-9-1-remote_and_branches-041317-PGM.00_15_30_17.Still001-sm.jpg",
          "title": "Remote and Branches",
          "transcript": "",
          "vimeoId": "215008775"
        },
        {
          "description": "Git is all about enabling collaboration. In this episode, Justin and Peter will show how multiple people can work together on a project in a remote repository using branches and pull requests.",
          "length": "1026",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-introtogit/techskills-introtogit-10-1-simple_github_collaboration-041417-PGM.00_16_51_15.Still001.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-introtogit/techskills-introtogit-10-1-simple_github_collaboration-041417-PGM.00_16_51_15.Still001-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-introtogit/techskills-introtogit-10-1-simple_github_collaboration-041417-PGM.00_16_51_15.Still001-sm.jpg",
          "title": "Simple GitHub Collaboration",
          "transcript": "WEBVTT\n\n1\n00:00:00.220 --> 00:00:03.910\nWelcome to IT Pro Tv,\n\n2\n00:00:03.910 --> 00:00:08.220\nI'm your host [CROSSTALK]\n\n3\n00:00:08.220 --> 00:00:12.443\n&gt;&gt; You're watching IT Pro TV.\n\n4\n00:00:12.443 --> 00:00:14.552\n&gt;&gt; Hey, everybody, welcome to IT Pro TV.\n\n5\n00:00:14.552 --> 00:00:18.726\nI'm your host, Peter van Rysdam, and\ntoday we're continuing in our series,\n\n6\n00:00:18.726 --> 00:00:21.780\nAn Introduction to Git, and\nspecifically in this episode\n\n7\n00:00:21.780 --> 00:00:24.610\nwe are talking about a simple\nGitHub collaboration.\n\n8\n00:00:24.610 --> 00:00:25.430\nAnd here to us,\n\n9\n00:00:25.430 --> 00:00:29.110\nwe have someone who is an expert on\nthings that are simple, Justin Dennison.\n\n10\n00:00:29.110 --> 00:00:29.895\nJustin, how are you doing?\n\n11\n00:00:29.895 --> 00:00:31.040\n&gt;&gt; [LAUGH] I'm doing well, Peter.\n\n12\n00:00:31.040 --> 00:00:32.010\n&gt;&gt; How are you today?\n\n13\n00:00:32.010 --> 00:00:33.810\n&gt;&gt; I'm fantastic, gonna a ittle digging.\n\n14\n00:00:33.810 --> 00:00:34.320\n&gt;&gt; Yeah.\n\n15\n00:00:34.320 --> 00:00:38.690\n&gt;&gt; So Justin, I have ventured onto GitHub.\n\n16\n00:00:38.690 --> 00:00:41.140\nI have created a project here.\n\n17\n00:00:41.140 --> 00:00:44.370\nBut I need help from a guy that\nknows development, and that's you.\n\n18\n00:00:45.380 --> 00:00:48.940\nHow do we start collaborating\nhere on this project?\n\n19\n00:00:48.940 --> 00:00:53.140\n&gt;&gt; So that's a great question, and this\nis one of the more difficult things for\n\n20\n00:00:53.140 --> 00:00:57.390\npeople who are first into Git,\nwell, to get started with, right?\n\n21\n00:00:57.390 --> 00:01:00.770\nAnd that's how do I interact\nwith other developers?\n\n22\n00:01:01.830 --> 00:01:05.590\nWell Using GitHub,\nthere's a simple way to do this in GitHub\n\n23\n00:01:05.590 --> 00:01:10.280\nthat everybody can follow and\nmakes it fairly painless.\n\n24\n00:01:10.280 --> 00:01:11.000\nSo let's go ahead and\n\n25\n00:01:11.000 --> 00:01:14.490\ntake a look at my screen, and you said\nthat you already made this project, right?\n\n26\n00:01:14.490 --> 00:01:17.760\n&gt;&gt; I did.\n&gt;&gt; So what is your GitHub user name?\n\n27\n00:01:17.760 --> 00:01:19.920\n&gt;&gt; It's PeteritPro, all one word.\n\n28\n00:01:19.920 --> 00:01:22.460\n&gt;&gt; All right, like so?\n\n29\n00:01:23.910 --> 00:01:25.160\nSimilar to that.\n\n30\n00:01:25.160 --> 00:01:25.730\nIs that you?\n\n31\n00:01:25.730 --> 00:01:26.310\n&gt;&gt; That's me.\n\n32\n00:01:26.310 --> 00:01:27.420\n&gt;&gt; My god look at me.\n\n33\n00:01:27.420 --> 00:01:29.760\n&gt;&gt; Yeah, and is this the project\nthat we need to collaborate on?\n\n34\n00:01:29.760 --> 00:01:30.740\n&gt;&gt; That's the one.\n\n35\n00:01:30.740 --> 00:01:32.370\n&gt;&gt; All right so here we go.\n\n36\n00:01:32.370 --> 00:01:34.040\nSo here is your project.\n\n37\n00:01:34.040 --> 00:01:35.800\nI'm logged into my GitHub.\n\n38\n00:01:35.800 --> 00:01:39.720\nNow I want to collaborate so\nI either need to mark this or something.\n\n39\n00:01:39.720 --> 00:01:42.270\nWell I'm going to go ahead and\nmake a fork of it.\n\n40\n00:01:42.270 --> 00:01:44.680\nOkay, and\nthat's going to go to my personal account.\n\n41\n00:01:44.680 --> 00:01:46.160\nI'm sorry.\n&gt;&gt; Yeah, I just wanna clarify.\n\n42\n00:01:46.160 --> 00:01:48.230\nI know we've talked about branches before.\n\n43\n00:01:48.230 --> 00:01:51.030\nAnd I thought that's where you were\ngoing to go, but what's a fork?\n\n44\n00:01:51.030 --> 00:01:52.750\n&gt;&gt; So that's a great question.\n\n45\n00:01:52.750 --> 00:01:58.632\nAnd a lot of these Gitservers,\nafford is a copy from me of your project.\n\n46\n00:01:58.632 --> 00:02:02.328\nSo I can work on this, so our actual\ncollaboration will be through other\n\n47\n00:02:02.328 --> 00:02:06.474\nchannes other than the standard GitRanch,\nGitMergge.branching and merge.\n\n48\n00:02:06.474 --> 00:02:10.230\nSo all that we've done in other\nepisode are going to be like,\n\n49\n00:02:10.230 --> 00:02:14.356\nme working independently and then,\nwhen we want to collaborate,\n\n50\n00:02:14.356 --> 00:02:16.727\nwe're going to use the GitHub tools.\n\n51\n00:02:16.727 --> 00:02:21.465\nSo, the great question that's always\ntricky but here's what's very interesting.\n\n52\n00:02:21.465 --> 00:02:24.260\nGetHub won't let me forget\nwhere this came from.\n\n53\n00:02:24.260 --> 00:02:29.970\nThere's collab_project justindevpro but\nthen here's the link back to yours.\n\n54\n00:02:29.970 --> 00:02:31.000\nSo if I ever forget,\n\n55\n00:02:31.000 --> 00:02:34.650\nhey, where the, who was the originator\nof this, it's back here.\n\n56\n00:02:34.650 --> 00:02:38.180\nAnd then this will help me later on\nwhen we actually want to collaborate.\n\n57\n00:02:38.180 --> 00:02:39.750\nSo, what do I wanna do now?\n\n58\n00:02:39.750 --> 00:02:43.170\nYou said you needed some development,\nlike a very basic web application or\n\n59\n00:02:43.170 --> 00:02:44.200\nsomething like that.\n\n60\n00:02:44.200 --> 00:02:50.420\nSo we're gonna simulate that, well, I need\nto get these locally so I can do that.\n\n61\n00:02:50.420 --> 00:02:55.560\nSo I'm gonna clone as such and\nI'm gonna hop over here and\n\n62\n00:02:55.560 --> 00:02:58.584\nwell that is actually an old one,\nshame on me.\n\n63\n00:02:58.584 --> 00:03:06.158\n[SOUND] So Gittclone and paste, and\nthen this is going to bring this down.\n\n64\n00:03:06.158 --> 00:03:08.850\nSo I'm going to hop into that folder.\n\n65\n00:03:10.630 --> 00:03:15.220\nAnd if I type git status, well that shows\nme that I have nothing to commit and\n\n66\n00:03:15.220 --> 00:03:16.590\nthat makes sense, I just made a clone.\n\n67\n00:03:16.590 --> 00:03:21.410\nThere's no way I can have changes\nthat need to be committed.\n\n68\n00:03:21.410 --> 00:03:26.560\nBut also, if I type git remote dash v,\nnotice that this is my username.\n\n69\n00:03:26.560 --> 00:03:29.860\nIt's not yours, it's actually mine.\n\n70\n00:03:29.860 --> 00:03:34.000\nAnd that's because of this\nfork which now has a copy.\n\n71\n00:03:34.000 --> 00:03:36.650\nNow be very, very careful when we fork.\n\n72\n00:03:36.650 --> 00:03:39.550\nAt no other point,\nunless I take intervention\n\n73\n00:03:39.550 --> 00:03:43.360\nwill the changes that you\nmake propagate into my repo?\n\n74\n00:03:43.360 --> 00:03:44.580\nSo we have to be careful there.\n\n75\n00:03:44.580 --> 00:03:49.070\nThey are now separate copies just like\nif I made a copy onto two flash drives.\n\n76\n00:03:49.070 --> 00:03:51.340\nUnless we somehow bring\nthem back together and\n\n77\n00:03:51.340 --> 00:03:55.100\nreconcile all those differences\nthey will never be the same again.\n\n78\n00:03:55.100 --> 00:03:56.850\nSo we have to be careful there.\n\n79\n00:03:56.850 --> 00:04:01.430\nSo at this point, I want to take a look\nand see if I have any remote branches.\n\n80\n00:04:02.640 --> 00:04:06.970\nAnd I have master and that's actually\nwhat's being tracked locally.\n\n81\n00:04:06.970 --> 00:04:09.240\nSo I'm gonna go ahead and make a branch.\n\n82\n00:04:09.240 --> 00:04:10.400\nSo git branch.\n\n83\n00:04:12.240 --> 00:04:16.460\nAnd you said you wanted a simple web\nkind of application like a skeleton.\n\n84\n00:04:16.460 --> 00:04:17.900\n&gt;&gt; I do but I have a question here.\n\n85\n00:04:17.900 --> 00:04:22.190\nWhy are we creating a branch if\nyou're already in your own repo?\n\n86\n00:04:22.190 --> 00:04:23.790\nI thought the fort kinda covered that?\n\n87\n00:04:23.790 --> 00:04:25.520\n&gt;&gt; That is actually a great question and\n\n88\n00:04:25.520 --> 00:04:30.760\nin this collaboration,\nHere's the kind of the golden rule for me.\n\n89\n00:04:30.760 --> 00:04:31.940\nIt makes my life easier.\n\n90\n00:04:31.940 --> 00:04:32.940\nIt makes your life easier.\n\n91\n00:04:32.940 --> 00:04:34.910\nIt makes everybody on\nthe team's life easier.\n\n92\n00:04:34.910 --> 00:04:39.210\nNow this is not the only rule but this is\nsomething that has helped me a great deal.\n\n93\n00:04:39.210 --> 00:04:41.900\nThe only thing that should\nchange the master branch\n\n94\n00:04:43.490 --> 00:04:45.930\nis the person who owns the original repo.\n\n95\n00:04:45.930 --> 00:04:48.520\nSo you are the owner of the project.\n\n96\n00:04:48.520 --> 00:04:53.940\nIf you make changes to master,\nthen I'll just get a copy of that.\n\n97\n00:04:53.940 --> 00:04:57.780\nI'm not going to change the master\ndirectly because master is like\n\n98\n00:04:57.780 --> 00:05:01.430\nthe release candidate or what's gonna be\ndeployed or what's gonna be saved and\n\n99\n00:05:01.430 --> 00:05:02.900\nset away to a client.\n\n100\n00:05:02.900 --> 00:05:05.870\nSo now I don't have to worry about,\noops I made changes to master.\n\n101\n00:05:05.870 --> 00:05:07.480\nYou made changes to master.\n\n102\n00:05:07.480 --> 00:05:08.970\nAnd then we broke everything.\n\n103\n00:05:08.970 --> 00:05:14.330\nSo typically, even if I'm working locally\nnothing touches the master branch\n\n104\n00:05:14.330 --> 00:05:19.150\nexcept me copying things from\nyour master branch into my repo.\n\n105\n00:05:19.150 --> 00:05:23.030\nSo that way I don't have\nthings getting out of sync but\n\n106\n00:05:23.030 --> 00:05:26.420\nthat is kind of a weird flow.\n\n107\n00:05:26.420 --> 00:05:29.810\nBut it saves a great deal\nof problems in the future.\n\n108\n00:05:29.810 --> 00:05:32.060\n&gt;&gt; Yeah, so to answer your\nquestion from before though,\n\n109\n00:05:32.060 --> 00:05:37.720\njust some simple programming file,\nsomething like, I don't know.\n\n110\n00:05:37.720 --> 00:05:39.710\n&gt;&gt; Some stuff and things, all right.\n\n111\n00:05:39.710 --> 00:05:45.150\nSo I'm gonna go ahead and\nmake a let's call the branch webapp and\n\n112\n00:05:45.150 --> 00:05:49.020\nI'm going to git checkout, webapp.\n\n113\n00:05:49.020 --> 00:05:52.050\nAnd now, my list,\nthis still is just a README.\n\n114\n00:05:52.050 --> 00:05:54.480\nI know you're working on\nsome things to put in there.\n\n115\n00:05:54.480 --> 00:05:58.520\nSo I'm just gonna go ahead and\nmake a very simple application.\n\n116\n00:05:58.520 --> 00:06:04.253\nAnd let's say, touch app.js and\n\n117\n00:06:04.253 --> 00:06:07.320\nvin app.js.\n\n118\n00:06:07.320 --> 00:06:08.480\nAnd just to simulate-.\n\n119\n00:06:11.543 --> 00:06:16.173\nNow running on port 8080.\n\n120\n00:06:16.173 --> 00:06:16.982\nAll right.\n\n121\n00:06:16.982 --> 00:06:21.570\nSo, this would, magic,\nthis would actually be the web app.\n\n122\n00:06:21.570 --> 00:06:24.350\nI would actually program this,\nbut just in the sake of time.\n\n123\n00:06:24.350 --> 00:06:26.170\nI'll come back and fix this later,\nPeter, don't worry.\n\n124\n00:06:26.170 --> 00:06:26.730\n&gt;&gt; Okay.\n\n125\n00:06:26.730 --> 00:06:27.570\nThank you.\n\n126\n00:06:27.570 --> 00:06:29.380\n&gt;&gt; Just in the sake of time,\nwe're just going to simulate that.\n\n127\n00:06:29.380 --> 00:06:30.480\nSo I've added that file.\n\n128\n00:06:30.480 --> 00:06:32.320\nI'm on a branch for web app, right?\n\n129\n00:06:32.320 --> 00:06:34.410\nSo, this is going to\nbe a node application.\n\n130\n00:06:35.460 --> 00:06:39.220\nIf I type, git status,\nwell I have app.js, it's untracked, so\n\n131\n00:06:39.220 --> 00:06:42.930\nwe have to stage it and commit it, for\nit to be tracked, for future changes.\n\n132\n00:06:42.930 --> 00:06:47.900\n&gt;&gt; But then that staging and\ncommitting to the justin devpro fork?\n\n133\n00:06:47.900 --> 00:06:49.120\n&gt;&gt; Correct.\nSo it's staging and\n\n134\n00:06:49.120 --> 00:06:54.880\ncommitting to this branch which will be\nonly pushed to the justin devpro fork.\n\n135\n00:06:54.880 --> 00:06:58.740\nAnd then here just a little bit we'll\nsee how those changes get propagated\n\n136\n00:06:58.740 --> 00:06:59.730\nback to you.\n\n137\n00:06:59.730 --> 00:07:03.390\nSo if I get add app.js and get commit.\n\n138\n00:07:05.870 --> 00:07:13.970\nAdded the entry point application for\nthe web application.\n\n139\n00:07:13.970 --> 00:07:14.726\nLet's just call it webapp.\n\n140\n00:07:14.726 --> 00:07:18.620\nAnd then git status,\nwe're on a clean working tree,\n\n141\n00:07:18.620 --> 00:07:20.650\nwe're showing a webapp branch.\n\n142\n00:07:20.650 --> 00:07:21.710\nI'm gonna go ahead and clear and\n\n143\n00:07:21.710 --> 00:07:27.860\nI'm gonna git push origin webapp cuz I\nwant to push just this branch, okay.\n\n144\n00:07:27.860 --> 00:07:32.640\nNow even if I push master, if I abide by\nmy own rule of not touching master except\n\n145\n00:07:32.640 --> 00:07:37.430\ntaking, like copying down from yours,\nthen I should never have an issue\n\n146\n00:07:37.430 --> 00:07:41.010\nwith like master failing because\nthen we get out our sync,\n\n147\n00:07:41.010 --> 00:07:44.820\nwell git won't actually pushed over\nunless you go through some [INAUDIBLE].\n\n148\n00:07:44.820 --> 00:07:47.700\nSo it says that I've created a new branch,\nokay?\n\n149\n00:07:47.700 --> 00:07:52.620\nNow if I come back to mine you'll\nnotice that Git is updated and\n\n150\n00:07:52.620 --> 00:07:57.950\nsaid, hey webapp has has been pushed,\nright?\n\n151\n00:07:57.950 --> 00:07:59.620\nHow do I get those back to you?\n\n152\n00:07:59.620 --> 00:08:00.980\nI finished my part.\n\n153\n00:08:00.980 --> 00:08:02.650\nI've helped you collaborate.\n\n154\n00:08:02.650 --> 00:08:05.030\nI'm going to now issue a pull request.\n\n155\n00:08:05.030 --> 00:08:08.390\nSo this is compare and pull request.\n\n156\n00:08:08.390 --> 00:08:12.200\nAnd, typically,\nthis is through GitHub interface,\n\n157\n00:08:12.200 --> 00:08:18.280\nyou'll notice here that it says what\nis the base fork and that's your repo.\n\n158\n00:08:18.280 --> 00:08:22.150\nAnd what is the base branch,\nwhat am I issuing the pull request to?\n\n159\n00:08:22.150 --> 00:08:25.620\nNow these are I think poorly named because\n\n160\n00:08:25.620 --> 00:08:29.760\nessentially what I'm asking of Peter is\nhey these are the changes that I made.\n\n161\n00:08:29.760 --> 00:08:32.180\nWill you pull these in to your repo?\n\n162\n00:08:33.430 --> 00:08:36.870\nIt's almost like an intern node merge,\nright?\n\n163\n00:08:36.870 --> 00:08:38.220\nAn inter ripple merge.\n\n164\n00:08:39.930 --> 00:08:41.320\nWho, where is it coming from?\n\n165\n00:08:41.320 --> 00:08:46.700\nIt is coming from me and if I go over here\nit's coming from the webapp, all right?\n\n166\n00:08:46.700 --> 00:08:50.720\nSo I'm issuing a pool request\nto Peter from the webapp branch\n\n167\n00:08:50.720 --> 00:08:51.800\nto his master branch.\n\n168\n00:08:53.030 --> 00:08:55.960\nNow I could issue to this to\nany branch that Peter has, but\n\n169\n00:08:55.960 --> 00:09:00.390\nI know this is the master branch's\nkinda what's being built up, and\n\n170\n00:09:00.390 --> 00:09:05.480\nhe will only accept this,\nwell if it's accurate.\n\n171\n00:09:05.480 --> 00:09:08.650\nSo this, it has to have a title and\nI can leave a comment.\n\n172\n00:09:09.680 --> 00:09:10.880\nAnd then I can allow edits.\n\n173\n00:09:10.880 --> 00:09:15.250\nAnd then down below here GitHub says,\nhey these are the changes that were made.\n\n174\n00:09:15.250 --> 00:09:19.910\nBut I'm gonna go ahead and\ncreate a pull request and\n\n175\n00:09:19.910 --> 00:09:21.820\nGitHub will make a quick check.\n\n176\n00:09:23.370 --> 00:09:25.940\nAnd it says,\nokay you've issued a pull request but\n\n177\n00:09:25.940 --> 00:09:27.720\nnow if we can take a look\nat your screen Peter.\n\n178\n00:09:27.720 --> 00:09:31.140\n&gt;&gt; All right, Justin yeah I've got my\nscreen up now and I just refreshed it and\n\n179\n00:09:31.140 --> 00:09:34.270\nI do see up here\n&gt;&gt; It says Pull requests one, so\n\n180\n00:09:34.270 --> 00:09:35.500\ngo ahead and click on that.\n\n181\n00:09:35.500 --> 00:09:36.810\n&gt;&gt; Yeah, go ahead and click on that.\n\n182\n00:09:36.810 --> 00:09:41.480\nAnd we'll see that we have\na list of pull requests here.\n\n183\n00:09:41.480 --> 00:09:46.000\nWell, those are all the changes\nthat have been asked of you, okay?\n\n184\n00:09:46.000 --> 00:09:49.060\nSo if you go ahead and clicked on\nthe first one, that should be from me.\n\n185\n00:09:50.720 --> 00:09:55.700\nAnd we're waiting and we're waiting and\nnotice that you have all the things that\n\n186\n00:09:55.700 --> 00:09:59.220\nhave been changed and there's a box\nthere that says merge pool request.\n\n187\n00:09:59.220 --> 00:10:01.260\nBut right above that before you click it,\n\n188\n00:10:01.260 --> 00:10:05.330\nsee how it says this branch has no\nconflicts with the base branch?\n\n189\n00:10:05.330 --> 00:10:09.130\nWell, that tells you that I've not done\nanything that causes merge conflicts.\n\n190\n00:10:10.190 --> 00:10:13.450\nSo you would be okay,\njust given that an okay?\n\n191\n00:10:13.450 --> 00:10:18.530\nBut, you can and should, if you're\nactually collaborating on a valid project,\n\n192\n00:10:18.530 --> 00:10:21.010\nyou should go in and\nlook at the changes that had been made.\n\n193\n00:10:21.010 --> 00:10:25.070\nSo we can zoom out here real quick and\nI think if you can scroll up for\n\n194\n00:10:25.070 --> 00:10:28.870\nme a little bit, there we go, so go ahead\nand click on that commit message there.\n\n195\n00:10:31.100 --> 00:10:34.870\nAnd this will show you all the things\nthat have changed in this port request.\n\n196\n00:10:34.870 --> 00:10:40.610\nSo as the maintainer, as the owner of\nthe repo, it would be up to you to kind\n\n197\n00:10:40.610 --> 00:10:46.340\nof review and get that okay and you can\nactually make comments and review changes.\n\n198\n00:10:46.340 --> 00:10:48.930\nAgain, this is something that you and\nyour team will decide or you and\n\n199\n00:10:48.930 --> 00:10:51.260\nwhoever you're working with will decide.\n\n200\n00:10:51.260 --> 00:10:52.200\nSo let's go back.\n\n201\n00:10:53.850 --> 00:10:57.550\nAnd then go ahead and\njust merge that pull request.\n\n202\n00:10:57.550 --> 00:11:00.810\nSo we clicked Merge, and\nit'll ask you to confirm that you're good.\n\n203\n00:11:00.810 --> 00:11:06.300\nSo if you confirm merge, it says that\nthere we go, everything's merged together.\n\n204\n00:11:06.300 --> 00:11:10.260\nGo back to your main repo, so\ngo to Code up at the top here.\n\n205\n00:11:10.260 --> 00:11:14.440\nAnd you'll notice that the app dot js\nfile is now on your master branch, right?\n\n206\n00:11:15.470 --> 00:11:19.880\nSo, all the changes that I have made\nhave been pulled into your branch.\n\n207\n00:11:19.880 --> 00:11:21.940\nNow there's one last thing that,\n\n208\n00:11:21.940 --> 00:11:25.790\nif I know that Peter has\nmerged into his master, right.\n\n209\n00:11:25.790 --> 00:11:30.430\nI need to do something on my end to make\nsure my repose master is in sync with\n\n210\n00:11:30.430 --> 00:11:34.020\nyours, so\ni can continue to build features, okay?\n\n211\n00:11:34.020 --> 00:11:35.590\nSo if we take a look at my screen.\n\n212\n00:11:37.410 --> 00:11:42.260\nWe'll notice, that well it says that the\npool request has been merged by you, and\n\n213\n00:11:42.260 --> 00:11:43.230\nwe're all good to go.\n\n214\n00:11:44.440 --> 00:11:49.390\nBut there's no way for me to get\nthe changes that you merged into your\n\n215\n00:11:49.390 --> 00:11:54.620\nmaster into my master because, well we\nmake a fork and they're kinda disjoined.\n\n216\n00:11:54.620 --> 00:11:57.400\nSo there's one last thing we\nneed to do and it's, be careful,\n\n217\n00:11:57.400 --> 00:11:58.285\nit's gonna blow your mind.\n\n218\n00:11:58.285 --> 00:11:59.290\n&gt;&gt; Mm-hm.\n&gt;&gt; It's\n\n219\n00:11:59.290 --> 00:12:01.160\n&gt;&gt; You hear like, I'm already scared.\n\n220\n00:12:01.160 --> 00:12:02.480\n&gt;&gt; That does not take much.\n\n221\n00:12:02.480 --> 00:12:05.420\n&gt;&gt; So I'm gonna grab your URL, okay?\n\n222\n00:12:05.420 --> 00:12:10.510\nAnd I'm gonna make a copy and I'm gonna\ncome over here and I'm going to, well\n\n223\n00:12:10.510 --> 00:12:15.450\nfirst thing I'm gonna do is git checkout\nmaster And I'm gonna leave that branch.\n\n224\n00:12:15.450 --> 00:12:19.610\nYou should prune this and\nclean this up as they become unnecessary.\n\n225\n00:12:19.610 --> 00:12:23.460\nBut if I type git remote -v,\nnotice I have origin which is mine but\n\n226\n00:12:23.460 --> 00:12:28.590\nI need a reference to Peter's that's\nbecause I wanna pull in those new\n\n227\n00:12:28.590 --> 00:12:32.780\nchanges from his master branch into mine\nso then I can branch off of master and\n\n228\n00:12:32.780 --> 00:12:35.750\ncontinue working with all\nthe new stuff that's there.\n\n229\n00:12:35.750 --> 00:12:40.420\nThis is very important if you have or\nmore than one or two people working,\n\n230\n00:12:40.420 --> 00:12:44.490\nlike if there was a third party, I need\nto do that periodically because I need to\n\n231\n00:12:44.490 --> 00:12:47.450\nbe working off all of the changes\nthat are kind of coming together.\n\n232\n00:12:48.680 --> 00:12:52.730\nSo I'm not breaking things or\nhaving issues later down the road, okay.\n\n233\n00:12:52.730 --> 00:12:56.140\nSo it's kinds of this zipper weave in and\nout thing.\n\n234\n00:12:56.140 --> 00:12:59.330\nSo in order to do that,\nI'm gonna say git remote add and\n\n235\n00:12:59.330 --> 00:13:02.400\ntypically what I'd do is I'll\njust name it, so I can remember.\n\n236\n00:13:02.400 --> 00:13:04.820\nThis is the Peter remote.\n\n237\n00:13:04.820 --> 00:13:07.380\nIt's going to link to his and\nI wanna paste.\n\n238\n00:13:07.380 --> 00:13:10.790\nAnd now, if I type git remote -v,\n\n239\n00:13:10.790 --> 00:13:16.720\nyou'll notice I have an origin and\nI have a link to Peter's repo, okay?\n\n240\n00:13:17.980 --> 00:13:21.110\nOne last thing, at this point,\n\n241\n00:13:21.110 --> 00:13:23.860\nI should be able to bring in\nthe changes that he just merged.\n\n242\n00:13:23.860 --> 00:13:26.930\nNow, technically, I was the one who\ndid this but I don't know that.\n\n243\n00:13:26.930 --> 00:13:32.520\nI can say git pull peter master.\n\n244\n00:13:32.520 --> 00:13:37.370\nI'm on my master branch so I'm gonna pull\nfrom Peter's and merge it into my master\n\n245\n00:13:37.370 --> 00:13:41.610\nbranch and because I'm never working\ndirectly on a master, I should have no\n\n246\n00:13:41.610 --> 00:13:45.660\nmerge conflicts and all it's gonna do is\nupdate to the point that yours is, okay.\n\n247\n00:13:45.660 --> 00:13:47.450\nSo if I'm gonna hit that, boom.\n\n248\n00:13:47.450 --> 00:13:48.760\nThere we go.\n\n249\n00:13:48.760 --> 00:13:52.360\nAnd now I have all the changes that\nPeter has merged into his master branch\n\n250\n00:13:52.360 --> 00:13:56.960\non my master branch and now he's like,\nhey, I need you to add, well,\n\n251\n00:13:56.960 --> 00:13:59.480\nI need to you add a front\nend to this web app.\n\n252\n00:13:59.480 --> 00:14:02.080\nYou started working on the back end,\nI need you to work on the front end.\n\n253\n00:14:02.080 --> 00:14:06.130\nNow I can branch off from this master and\ncontinue working and\n\n254\n00:14:06.130 --> 00:14:08.150\ngo back through the same cycle.\n\n255\n00:14:08.150 --> 00:14:11.830\nSo that kinda gives us a I call it simple.\n\n256\n00:14:11.830 --> 00:14:15.860\nThis is probably the simplest way that\nI've had to interact and collaborate.\n\n257\n00:14:15.860 --> 00:14:20.260\n&gt;&gt; So when you're going to your next step\nhere and working on the next piece of\n\n258\n00:14:20.260 --> 00:14:23.590\nthe project, you're not creating another\nfork now since we've gone ahead and\n\n259\n00:14:23.590 --> 00:14:26.535\ncollaborated, now it's just\nbranches as normal from here.\n\n260\n00:14:26.535 --> 00:14:27.900\n&gt;&gt; Mm-hm.\n&gt;&gt; So fork's just the really\n\n261\n00:14:27.900 --> 00:14:28.410\nthe first time?\n\n262\n00:14:28.410 --> 00:14:29.350\n&gt;&gt; Yup.\nFork's the first time and\n\n263\n00:14:29.350 --> 00:14:32.080\nthen it's up to you to\nkeep your fork in line or\n\n264\n00:14:32.080 --> 00:14:34.840\nkind of up to date with\nwhere your fork's from.\n\n265\n00:14:34.840 --> 00:14:36.250\nSo that's important.\n\n266\n00:14:36.250 --> 00:14:36.790\n&gt;&gt; Okay.\n\n267\n00:14:36.790 --> 00:14:40.600\nNow, I know it's the title that shows\nsimple GitHub collaboration and\n\n268\n00:14:40.600 --> 00:14:43.380\nwe've been in GitHub this all time,\nbut are there another ways to do this?\n\n269\n00:14:43.380 --> 00:14:45.950\nWhether it's in services or command line?\n\n270\n00:14:45.950 --> 00:14:47.240\n&gt;&gt; So there are other ways.\n\n271\n00:14:47.240 --> 00:14:51.487\nIf we are acting locally, if we were\n\n272\n00:14:51.487 --> 00:14:56.584\nconnected through some kind of internet,\n\n273\n00:14:56.584 --> 00:15:00.691\nexcuse me, network connection,\n\n274\n00:15:00.691 --> 00:15:07.504\nwe could technically dispatch and\npull from each other.\n\n275\n00:15:07.504 --> 00:15:12.503\nThat one's a little more difficult cuz I\n\n276\n00:15:12.503 --> 00:15:17.942\nknow some people who\nare like yeah I have 30\n\n277\n00:15:17.942 --> 00:15:24.150\nbranches that I'm working\non at any one time.\n\n278\n00:15:24.150 --> 00:15:26.830\nThat's something that I would keep for\nlater on down the line.\n\n279\n00:15:26.830 --> 00:15:30.350\nAnd your team if your team decides\nto use that work flow then\n\n280\n00:15:30.350 --> 00:15:33.200\nyou have to decide how we name branches,\nhow do we manage?\n\n281\n00:15:33.200 --> 00:15:35.830\nWhat are our pull\nrequests being issued to?\n\n282\n00:15:35.830 --> 00:15:39.520\nAre we protecting branches\nbecause something I haven't shown\n\n283\n00:15:39.520 --> 00:15:43.980\nis in GitHub like most Git servers,\nhave a way of protecting certain branches.\n\n284\n00:15:43.980 --> 00:15:46.140\nSo if you said,\nhey the master's protected.\n\n285\n00:15:46.140 --> 00:15:48.880\nThere's no way I could ever\naccidentally push to the master branch.\n\n286\n00:15:48.880 --> 00:15:52.090\nIt would just say,\nno you don't have access to that.\n\n287\n00:15:52.090 --> 00:15:55.000\nSo there's Git flow and\nthen there's just basic interactions.\n\n288\n00:15:55.000 --> 00:15:59.750\nAnd well, you can make the GitHub\na little more complicated.\n\n289\n00:15:59.750 --> 00:16:04.460\nYou can say okay, now that you\nhave this in the webinar branch,\n\n290\n00:16:04.460 --> 00:16:08.100\nyou need to make a pull for master,\nresolve match conflict push.\n\n291\n00:16:08.100 --> 00:16:10.680\nIssue another pull request for\nthose updates.\n\n292\n00:16:10.680 --> 00:16:13.200\nSo it's totally time dependent.\n\n293\n00:16:13.200 --> 00:16:18.460\nI would start here, just to kinda get\nyour feet wet and not get overwhelmed.\n\n294\n00:16:18.460 --> 00:16:22.200\n&gt;&gt; Well, I've gotta say I doubted\nyou when you said this was simple.\n\n295\n00:16:22.200 --> 00:16:25.110\nBut, really this is just taking all\nthe pieces that we've learned in\n\n296\n00:16:25.110 --> 00:16:28.000\na lot of the other episodes and\ngetting it together.\n\n297\n00:16:28.000 --> 00:16:30.880\nSo we're finally at the point now\nwhere we understand what git is,\n\n298\n00:16:30.880 --> 00:16:33.640\nhow to use git and\nnow how to actually collaborate it.\n\n299\n00:16:33.640 --> 00:16:34.920\nSo thanks for that, Justin.\n\n300\n00:16:34.920 --> 00:16:36.480\nAny other final thoughts?\n\n301\n00:16:36.480 --> 00:16:42.330\nNo, I just, other than get in there,\nget started, and try some Git.\n\n302\n00:16:42.330 --> 00:16:45.140\n&gt;&gt; Well, I think, on that note,\nthat'll do it for this episode, so\n\n303\n00:16:45.140 --> 00:16:46.990\nwe're going to go ahead and sign off.\n\n304\n00:16:46.990 --> 00:16:50.060\nFor IT Pro TV, I've been your host,\nPeter van Rysdam.\n\n305\n00:16:50.060 --> 00:16:51.373\n&gt;&gt; And I'm Justin Denison.\n\n306\n00:16:51.373 --> 00:16:56.429\n&gt;&gt; And we'll see you next time.\n\n307\n00:16:56.429 --> 00:16:58.831\n&gt;&gt; [MUSIC]\n\n308\n00:16:58.831 --> 00:17:02.447\nThank you for watching, ITProTV.\n\n",
          "vimeoId": "214011058"
        }
      ],
      "title": "Intro to Git"
    }
  ],
  "url": "introgit",
  "vLab": false
}
