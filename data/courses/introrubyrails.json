{
  "description": "Ruby on Rails is a web development framework built upon the Ruby programming language. This series covers the basics of Ruby on Rails including but not limited to: what is Ruby on Rails, getting the environment set up, creating a simple web application the Ruby on Rails way, and diving a little deeper into the methodology used in a Rails application. If you are looking to get started with Ruby on Rails, then we will see you there!",
  "descriptionMD": "Ruby on Rails is a web development framework built upon the Ruby programming language. This series covers the basics of Ruby on Rails including but not limited to: what is Ruby on Rails, getting the environment set up, creating a simple web application the Ruby on Rails way, and diving a little deeper into the methodology used in a Rails application. If you are looking to get started with Ruby on Rails, then we will see you there!",
  "length": "29217",
  "name": "Intro to Ruby on Rails",
  "practiceExam": false,
  "subtitle": "Quick Web with Ruby",
  "tagUrl": "developer",
  "topics": [
    {
      "episodes": [
        {
          "description": "Ruby on Rails is a web development framework built upon the Ruby programming language. This series covers the basics of Ruby on Rails including but not limited to: what is Ruby on Rails, getting the environment set up, creating a simple web application the Ruby on Rails way, and diving a little deeper into the methodology used in a Rails application. If you are looking to get started with Ruby on Rails, then we will see you there!",
          "length": "172",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-introtorubyonrails/techskills-introtorubyonrails-0-0-0-overview-122017-PGM.00_00_06_24.Still001.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-introtorubyonrails/techskills-introtorubyonrails-0-0-0-overview-122017-PGM.00_00_06_24.Still001-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-introtorubyonrails/techskills-introtorubyonrails-0-0-0-overview-122017-PGM.00_00_06_24.Still001-sm.jpg",
          "title": "Overview",
          "transcript": "",
          "vimeoId": "248389031"
        },
        {
          "description": "In this episode, Justin and Manny explore the landscape of web development. Additionally, Manny describes the reason for using Ruby on Rails to create a dynamic website including the use of the Ruby programming language and use of the conventions that Rails uses.",
          "length": "1281",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-introtorubyonrails/techskills-introtorubyonrails-1-1-1-what_is_ruby_on_rails-101417-PGM.00_21_10_28.Still001.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-introtorubyonrails/techskills-introtorubyonrails-1-1-1-what_is_ruby_on_rails-101417-PGM.00_21_10_28.Still001-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-introtorubyonrails/techskills-introtorubyonrails-1-1-1-what_is_ruby_on_rails-101417-PGM.00_21_10_28.Still001-sm.jpg",
          "title": "What is Ruby on Rails?",
          "transcript": "WEBVTT\n\n1\n00:00:00.000 --> 00:00:10.000\n[MUSIC]\n\n2\n00:00:12.557 --> 00:00:16.175\nGreetings everyone and welcome to\nanother exciting episode of DevPro TV.\n\n3\n00:00:16.175 --> 00:00:20.031\nI'm your host Justin Dennison and\nwe have a treat in store for you today.\n\n4\n00:00:20.031 --> 00:00:23.274\nWe are starting Ruby on Rails\nin particular, in this episode,\n\n5\n00:00:23.274 --> 00:00:26.370\nwe're gonna be talking about,\nwhat is Ruby on Rails?\n\n6\n00:00:26.370 --> 00:00:29.873\nNow I'm no expert, but luckily we\nhave one in the studio with us today.\n\n7\n00:00:29.873 --> 00:00:32.030\nMr. Manny Rodriguez,\nhow you doing today, Manny?\n\n8\n00:00:32.030 --> 00:00:33.090\n&gt;&gt; I'm doing great, Justin.\n\n9\n00:00:33.090 --> 00:00:34.580\nIt's great to be here.\n\n10\n00:00:34.580 --> 00:00:35.670\nHow are you doing?\n\n11\n00:00:35.670 --> 00:00:36.870\n&gt;&gt; I'm doing fantastic, man.\n\n12\n00:00:36.870 --> 00:00:39.850\nAnd actually I'm really excited because,\n\n13\n00:00:39.850 --> 00:00:44.180\nI know kind of about the Ruby on Rails,\nkind of aura.\n\n14\n00:00:44.180 --> 00:00:47.610\nBut, I don't really know\nwhat is Ruby on Rails.\n\n15\n00:00:47.610 --> 00:00:53.760\nSo can you help reveal\nthe rails wonderfulness?\n\n16\n00:00:53.760 --> 00:00:59.270\n&gt;&gt; Absolutely, so Ruby on Rails\nis a web development framework.\n\n17\n00:00:59.270 --> 00:01:00.670\nNow that's a lot of syllables.\n\n18\n00:01:00.670 --> 00:01:02.920\nWhat does that actually mean,\na web development framework?\n\n19\n00:01:04.970 --> 00:01:12.060\nA framework is a set of, it's a program\nused to create other programs.\n\n20\n00:01:12.060 --> 00:01:17.066\nNow, thinking about that on\nthe web we have apps on our phone,\n\n21\n00:01:17.066 --> 00:01:22.651\nwe have got websites we go to, and\nsometimes maybe it's not entirely\n\n22\n00:01:22.651 --> 00:01:28.162\nclear what is powering the programs\nthat we use on a day to day basis.\n\n23\n00:01:28.162 --> 00:01:33.096\nBy powering, I just mean\nthe technology that's running the show\n\n24\n00:01:33.096 --> 00:01:38.030\nbehind the scenes, that the programmer\nis using to write logic or\n\n25\n00:01:38.030 --> 00:01:43.200\nto draw pictures or\nto make whatever's happening happen.\n\n26\n00:01:43.200 --> 00:01:46.510\nSo, on the web, we know,\n\n27\n00:01:46.510 --> 00:01:51.504\nI've been online since 94, 95 and\n\n28\n00:01:51.504 --> 00:01:56.600\nback then, websites were static,\nthey didn't move.\n\n29\n00:01:57.660 --> 00:02:04.270\nAnd actually, not that they didn't move,\nbecause you can scroll them,\n\n30\n00:02:04.270 --> 00:02:08.840\non your screen, but\nthe content didn't change at all.\n\n31\n00:02:08.840 --> 00:02:13.610\nAnd I kind of have a website I'd\nlike to show you that shows this.\n\n32\n00:02:13.610 --> 00:02:21.140\nBecause it was pretty hard to find,\nnow in 2017, a website that static.\n\n33\n00:02:22.210 --> 00:02:25.910\n&gt;&gt; Now is this your GeoCities\npage from way back in the day, or\n\n34\n00:02:25.910 --> 00:02:28.270\nam I getting a little too personal here?\n\n35\n00:02:28.270 --> 00:02:29.932\n&gt;&gt; It sure looks like it, doesn't it?\n\n36\n00:02:29.932 --> 00:02:33.630\n&gt;&gt; [LAUGH]\n&gt;&gt; [LAUGH] Actually, Justin, I love dogs.\n\n37\n00:02:33.630 --> 00:02:38.685\nAnd dachshunds are super,\nsuper cute and I was looking for\n\n38\n00:02:38.685 --> 00:02:45.303\na static page, I happened to find one\nrelated to dachshunds, so here we go.\n\n39\n00:02:45.303 --> 00:02:50.135\nThe reason why I'm bringing this\nup is because on this site this\n\n40\n00:02:50.135 --> 00:02:52.058\npage will never change.\n\n41\n00:02:52.058 --> 00:02:56.793\nThis is gonna stay the way it is for\nall time, until you go in\n\n42\n00:02:56.793 --> 00:03:02.580\nwith an HTML editor and\nactually change the text on your page.\n\n43\n00:03:02.580 --> 00:03:06.546\nSo that's why we call\nthis a static website.\n\n44\n00:03:06.546 --> 00:03:09.223\nTwo weeks from now,\nif the webmaster hasn't updated it,\n\n45\n00:03:09.223 --> 00:03:13.630\nI'm gonna come back here, it's gonna\nlook exactly the same as it does now.\n\n46\n00:03:13.630 --> 00:03:16.490\nNow, if I hop on over to Google.\n\n47\n00:03:16.490 --> 00:03:20.990\nAnd just do a Google search,\nmaybe if I search for dachshunds.\n\n48\n00:03:22.280 --> 00:03:24.901\nAnd already you'll notice\nthat things are happening.\n\n49\n00:03:24.901 --> 00:03:28.570\nI started typing in the letters D-A-C-H,\nand\n\n50\n00:03:28.570 --> 00:03:32.000\nthis whole search window popped up here.\n\n51\n00:03:32.000 --> 00:03:34.770\nAnd it's giving me results about\nthings I might wanna look for\n\n52\n00:03:34.770 --> 00:03:36.620\nrelated to dachshunds.\n\n53\n00:03:36.620 --> 00:03:42.820\nSo this is a dynamic website and,\nof course, if I execute this search.\n\n54\n00:03:42.820 --> 00:03:47.009\nThen, I see a webpage, but\ndepending on what I type up here, so\n\n55\n00:03:47.009 --> 00:03:50.094\nif I change my search\nto dachshund miniature,\n\n56\n00:03:50.094 --> 00:03:55.256\nnow I've got a different set of search\nresults and the page looks different.\n\n57\n00:03:55.256 --> 00:03:59.460\nSo this is a dynamic website and\nthat's what Ruby on Rails is for, it's for\n\n58\n00:03:59.460 --> 00:04:01.264\ncreating dynamic websites, so\n\n59\n00:04:01.264 --> 00:04:04.850\nthat as programmers we can\nmake awesome things happen.\n\n60\n00:04:04.850 --> 00:04:09.115\n&gt;&gt; Now Manny, does Ruby on Rails\nlive within the browser or\n\n61\n00:04:09.115 --> 00:04:11.399\ndoes it live somewhere else?\n\n62\n00:04:11.399 --> 00:04:16.611\n&gt;&gt; Glad you asked that,\nRuby on Rails is a server side technology,\n\n63\n00:04:16.611 --> 00:04:22.501\nwhich means that there is a computer\nthat your computer sends a request,\n\n64\n00:04:22.501 --> 00:04:27.900\nkind of like, hey would you like\nto have some dinner tonight?\n\n65\n00:04:27.900 --> 00:04:30.900\nKind of like that, and you think about\nit and then a response comes back.\n\n66\n00:04:30.900 --> 00:04:34.170\nIt works very much the same\nway with Ruby on Rails and\n\n67\n00:04:34.170 --> 00:04:37.200\nother backend web technologies.\n\n68\n00:04:37.200 --> 00:04:42.940\nSo the code is actually not\nrunning on the person's computer,\n\n69\n00:04:42.940 --> 00:04:44.330\non the client's computer.\n\n70\n00:04:44.330 --> 00:04:47.400\nIt's running on a server which\nthen sends a response back.\n\n71\n00:04:47.400 --> 00:04:49.250\n&gt;&gt; Okay, I think I've got you now.\n\n72\n00:04:49.250 --> 00:04:52.300\nNow, one quick thing about\nstatic versus dynamic.\n\n73\n00:04:52.300 --> 00:04:53.930\nI've also heard speaking to you and\n\n74\n00:04:53.930 --> 00:04:56.800\nto some other individuals\nabout web application.\n\n75\n00:04:56.800 --> 00:05:02.144\nAre dynamic websites and web\napplications essentially the same thing?\n\n76\n00:05:02.144 --> 00:05:03.960\n&gt;&gt; That's an interesting question.\n\n77\n00:05:05.560 --> 00:05:11.000\nThe way I think of it is that a dynamic\nwebsite can vary in complexity.\n\n78\n00:05:11.000 --> 00:05:15.960\nSo that you can have a website that simply\nhas a box in it and you type in a number\n\n79\n00:05:15.960 --> 00:05:19.520\ntwo and hit submit and it adds another\nnumber to it and gives you a result.\n\n80\n00:05:19.520 --> 00:05:25.587\nReally, really simple, might be hard for\nus to call that an application.\n\n81\n00:05:25.587 --> 00:05:28.633\nBut in terms of what it\nactually is under the hood,\n\n82\n00:05:28.633 --> 00:05:33.140\nit works pretty much under the same\nprinciples that Facebook runs under.\n\n83\n00:05:34.410 --> 00:05:39.070\n&gt;&gt; All right, so we're kind of\nsplitting hairs on semantics.\n\n84\n00:05:39.070 --> 00:05:40.930\nNow, I do wanna back up a little bit.\n\n85\n00:05:40.930 --> 00:05:45.746\nYou talked about Ruby on Rail,\nthe static versus dynamic and you've shown\n\n86\n00:05:45.746 --> 00:05:50.497\nus some wonderful examples, but\nI've said a word a couple of times Ruby.\n\n87\n00:05:50.497 --> 00:05:55.077\nRuby and Rails is a frame work which we\nare gonna get back to but what is Ruby,\n\n88\n00:05:55.077 --> 00:05:56.989\nwhat's the Ruby part of that.\n\n89\n00:05:56.989 --> 00:06:01.033\n&gt;&gt; Yeah, it's right there in\nthe name right, Ruby on Rails and\n\n90\n00:06:01.033 --> 00:06:06.050\nin this community, they're used\nsynonymously, Ruby and Ruby on Rails.\n\n91\n00:06:06.050 --> 00:06:09.712\nMany people think that if\nyou're referring to Rails,\n\n92\n00:06:09.712 --> 00:06:12.428\nthen Ruby on Rails like it's one thing.\n\n93\n00:06:12.428 --> 00:06:14.970\nBut actually, they're different.\n\n94\n00:06:14.970 --> 00:06:18.830\nRuby is a programming language,\na scripting language,\n\n95\n00:06:18.830 --> 00:06:23.180\nthat is used as a basis for Ruby on Rails.\n\n96\n00:06:23.180 --> 00:06:29.271\nSo Ruby on rails is one framework\nthat's written with the Ruby language,\n\n97\n00:06:29.271 --> 00:06:31.148\nbut there are others.\n\n98\n00:06:31.148 --> 00:06:33.013\nSome of my favorites are Sinatra,\n\n99\n00:06:33.013 --> 00:06:37.735\nwhich is basically a greatly reduced\nsimplified version of Ruby on Rails.\n\n100\n00:06:37.735 --> 00:06:41.350\nAnd, I really enjoy using Ruby for\nshell script editing as well.\n\n101\n00:06:42.400 --> 00:06:45.440\n&gt;&gt; So Ruby is akin to Python or\n\n102\n00:06:45.440 --> 00:06:50.640\nI guess to some extent JavaScript as\nfar as a scripting language it has some\n\n103\n00:06:50.640 --> 00:06:56.240\nhigher level principles built in,\nit's not quite like bash scripting.\n\n104\n00:06:56.240 --> 00:06:59.760\nBut it's not a compiled language,\nit's kind of a dynamic runtime, correct?\n\n105\n00:06:59.760 --> 00:07:02.400\n&gt;&gt; Yes, that's right, that's right.\n\n106\n00:07:02.400 --> 00:07:05.450\nIt's cool that you've mentioned\nPython because I feel like ruby and\n\n107\n00:07:05.450 --> 00:07:07.070\nPython are very similar.\n\n108\n00:07:07.070 --> 00:07:14.431\nAs we get into the syntax of Ruby we'll\nsee that things like a white space,\n\n109\n00:07:14.431 --> 00:07:20.728\nbeing well technically in Ruby\nwhite space isn't important or\n\n110\n00:07:20.728 --> 00:07:28.251\nit won't break the compiler like it\nwould in python, but it's very keen.\n\n111\n00:07:33.239 --> 00:07:37.343\nAnd Ruby is object oriented,\njust like Python is and\n\n112\n00:07:37.343 --> 00:07:40.500\nSmalltalk and JavaScript as well.\n\n113\n00:07:40.500 --> 00:07:42.540\nSo yeah it shares a lot in\ncommon with those languages.\n\n114\n00:07:42.540 --> 00:07:47.160\nEspecially the fact that\nit's dynamically compiled.\n\n115\n00:07:47.160 --> 00:07:51.570\nWell not compiled but it's dynamically\ninterpreted and it's object oriented.\n\n116\n00:07:51.570 --> 00:07:53.800\nIt's strongly object orientated.\n\n117\n00:07:53.800 --> 00:07:57.955\n&gt;&gt; Well, I like that you threw Smalltalk\nin there, that's a throwback for me.\n\n118\n00:07:57.955 --> 00:08:01.540\nAnd so that I've done anything\nother than I'm just playing around.\n\n119\n00:08:01.540 --> 00:08:04.888\nNow, if you wanna move forward\non this framework thing,\n\n120\n00:08:04.888 --> 00:08:08.458\nI do some frameworks\n&gt;&gt; But can't we dive a little bit deeper\n\n121\n00:08:08.458 --> 00:08:14.470\ninto, I use a framework to build other\nthings, but why would I use a framework?\n\n122\n00:08:14.470 --> 00:08:15.870\n&gt;&gt; Great question.\n\n123\n00:08:15.870 --> 00:08:20.800\nSo I'd like to draw a distinction\nbetween a framework and the library.\n\n124\n00:08:20.800 --> 00:08:24.000\nIf you've done any kind of coding before,\nyou'll know that it's really,\n\n125\n00:08:24.000 --> 00:08:27.170\nreally great to be able to stand\non the shoulders of giants and\n\n126\n00:08:27.170 --> 00:08:28.840\nuse code that other people have written.\n\n127\n00:08:30.150 --> 00:08:35.208\nSo, if you want to write a game where\nthere's a ball bouncing around,\n\n128\n00:08:35.208 --> 00:08:39.924\nit's so much more work to have to\nwrite the physics of what happens\n\n129\n00:08:39.924 --> 00:08:43.560\nwhen a ball hits a wall or\na ball hits another wall.\n\n130\n00:08:44.790 --> 00:08:46.398\nSo it's awesome when you find say,\n\n131\n00:08:46.398 --> 00:08:48.710\na physics library that\nsomeone already wrote.\n\n132\n00:08:48.710 --> 00:08:54.170\nYou can just pull that into your code and\nwrite your code against there's, and\n\n133\n00:08:54.170 --> 00:08:59.090\nby leveraging existing resources, you get\nto create something in the same amount of\n\n134\n00:08:59.090 --> 00:09:03.960\ntime that whatever amount of time that\nyou have, that's just way more effective.\n\n135\n00:09:05.560 --> 00:09:10.330\nSo a library is code that someone else\nwrote that can be imported into your code.\n\n136\n00:09:10.330 --> 00:09:14.840\nA framework operates under a similar\nprinciple where we've got code\n\n137\n00:09:14.840 --> 00:09:19.415\nthat's written, that is intended\nto be used by other programmers,\n\n138\n00:09:19.415 --> 00:09:23.830\nbut it kinda flips\nthe control a little bit.\n\n139\n00:09:23.830 --> 00:09:29.060\nWhat I mean by control, is that when\nyou're using a library, you pretty much\n\n140\n00:09:29.060 --> 00:09:34.230\nget to pick and choose where you use\nthe library and what the library does.\n\n141\n00:09:34.230 --> 00:09:36.750\nWhen you're using a framework, however,\n\n142\n00:09:36.750 --> 00:09:41.070\nthe framework has little gaps in\nit where you put your code and\n\n143\n00:09:41.070 --> 00:09:45.440\nthe framework establishes how\nthings are going to run, basically.\n\n144\n00:09:45.440 --> 00:09:50.360\nSo, I like to think of it as\na version of software Mad Libs,\n\n145\n00:09:50.360 --> 00:09:55.660\nlike those Mad Libs stories\nwhere you have a story.\n\n146\n00:09:55.660 --> 00:10:01.768\nI was going to the blank and I found\na blank, that kind of structure and\n\n147\n00:10:01.768 --> 00:10:05.682\nframeworks allow you\nto fill in those gaps.\n\n148\n00:10:05.682 --> 00:10:09.350\n&gt;&gt; Okay, so it's kind of like we're\ngonna provide you a template and\n\n149\n00:10:09.350 --> 00:10:11.904\nthen you just fill in\nthe pieces that explore or\n\n150\n00:10:11.904 --> 00:10:16.370\ndefine the requirements that you have,\nor your respective application.\n\n151\n00:10:16.370 --> 00:10:18.250\nNow, I've used other frameworks, as well.\n\n152\n00:10:18.250 --> 00:10:22.410\nI'm by no means a Ruby programmer, but\nI've used flask and I've tinkered with\n\n153\n00:10:22.410 --> 00:10:26.910\nDjango which are both Python frameworks,\nExpress, things of that nature.\n\n154\n00:10:26.910 --> 00:10:32.050\nI have tried Sinatra a little bit,\nI tends to speak to my heart, but\n\n155\n00:10:32.050 --> 00:10:35.200\nhow does Ruby on Rails\ncompare to those others?\n\n156\n00:10:35.200 --> 00:10:36.710\n&gt;&gt; Great question.\n\n157\n00:10:36.710 --> 00:10:43.510\nRuby on Rails, Sinatra, Express, those are\nall back-end web development frameworks.\n\n158\n00:10:43.510 --> 00:10:46.724\nAnd a little further into the series,\nwe'll talk about what that means.\n\n159\n00:10:46.724 --> 00:10:51.720\nBack-end versus front-end and\nwhere the pieces fall, but\n\n160\n00:10:51.720 --> 00:10:54.139\nthey basically accomplish the same tasks.\n\n161\n00:10:55.610 --> 00:11:00.480\nThe difference really is,\nmaybe one of aesthetics, maybe one of\n\n162\n00:11:02.030 --> 00:11:08.700\nopinions, by opinions just software,\nwe wanna have the right tool for\n\n163\n00:11:08.700 --> 00:11:12.431\nthe job and different frameworks have\ndifferent strengths and weaknesses.\n\n164\n00:11:12.431 --> 00:11:17.480\nIn particular, Rails is cool, because\nit allows you to prototype quickly and\n\n165\n00:11:17.480 --> 00:11:23.630\nit makes really strong opinions, and\nsuggestions about how you should\n\n166\n00:11:23.630 --> 00:11:28.438\ndo things which can save you a lot of time\nif you're trying to say you're a startup,\n\n167\n00:11:28.438 --> 00:11:33.050\nand you wanna get your web app going\nquickly and not spend a lot of time\n\n168\n00:11:33.050 --> 00:11:39.255\nwriting boilerplate, so that you can get\nyour demo up and show it to your partners.\n\n169\n00:11:39.255 --> 00:11:42.828\nSo in that sense, Rails, Express,\n\n170\n00:11:42.828 --> 00:11:47.789\nthere's a PHP framework\nthat's really similar to\n\n171\n00:11:47.789 --> 00:11:52.070\nRails called CakePHP and there's so many.\n\n172\n00:11:52.070 --> 00:11:55.740\nThere's so many frameworks\nthat do the same tasks, but\n\n173\n00:11:55.740 --> 00:11:57.580\nkind of like what kind\nof car do you drive?\n\n174\n00:11:59.730 --> 00:12:04.040\nYou can choose from several different\nmodels, and they all have their pluses,\n\n175\n00:12:04.040 --> 00:12:07.280\nand minuses even though they all\nget you down the road as well.\n\n176\n00:12:07.280 --> 00:12:10.470\n&gt;&gt; Well, hopefully,\nthis is not like my car.\n\n177\n00:12:10.470 --> 00:12:16.010\nI gotta get that window fixed, but if you\nhad to sell me on Rails, if I was like\n\n178\n00:12:16.010 --> 00:12:21.900\nI really like Flask, or I really like\nDjango, or I really like Express,\n\n179\n00:12:21.900 --> 00:12:25.220\nor CakePHP, any of those and\nthere's a plethora of other ones.\n\n180\n00:12:25.220 --> 00:12:29.970\nPretty much every runtime or environment\nhas there on a web development frame.\n\n181\n00:12:29.970 --> 00:12:32.500\nActually, saw one for\nFortran, believe it or not.\n\n182\n00:12:32.500 --> 00:12:34.760\nThose of you who have ever\nexperienced Fortran are like,\n\n183\n00:12:34.760 --> 00:12:36.110\nI don't know how that would work.\n\n184\n00:12:36.110 --> 00:12:37.948\nI don't either, but it exists.\n\n185\n00:12:37.948 --> 00:12:41.500\nIf you really had to sell me on Rails,\nwhat would be my big takeaway?\n\n186\n00:12:41.500 --> 00:12:45.140\nHow would you get me to\njump on board with Rails?\n\n187\n00:12:45.140 --> 00:12:50.470\n&gt;&gt; Well, Justin, let me get my salesmen\nsuit on and I gotta tell you that\n\n188\n00:12:50.470 --> 00:12:55.850\nthe great thing about Rails is, for me\npersonally, the Ruby programming language.\n\n189\n00:12:55.850 --> 00:13:00.590\nIt's such a sweat language to work with,\nand it's expressive, and\n\n190\n00:13:00.590 --> 00:13:03.200\nit's just fun to write code in Ruby.\n\n191\n00:13:03.200 --> 00:13:08.520\nSo be given that,\nRails has built on top of that really,\n\n192\n00:13:08.520 --> 00:13:11.160\nreally sweet foundation of Ruby and\n\n193\n00:13:11.160 --> 00:13:16.950\ncreated an ecosystem where there's lots\nof developers, there's lots of projects,\n\n194\n00:13:16.950 --> 00:13:23.230\nthere's a lot of packages and we're gonna\ntalk about packages later in the series.\n\n195\n00:13:23.230 --> 00:13:28.053\nBut basically, there's a huge community\nof other growth developers using\n\n196\n00:13:28.053 --> 00:13:31.895\nrails which makes you feel as\na developer supported in that,\n\n197\n00:13:31.895 --> 00:13:36.791\nyou're taking on this big project and\nyou've got a lot of features to write,\n\n198\n00:13:36.791 --> 00:13:40.178\nand it's so nice to know that\nothers have your back and\n\n199\n00:13:40.178 --> 00:13:43.838\nhave written things that make\nyour job that much easier.\n\n200\n00:13:43.838 --> 00:13:48.676\n&gt;&gt; So I'm gonna further pressure on that,\nthose do sound nice,\n\n201\n00:13:48.676 --> 00:13:53.141\nbut if you had to show me one\nthing that exemplified that,\n\n202\n00:13:53.141 --> 00:13:56.506\nthat really sold me, what could you show?\n\n203\n00:13:56.506 --> 00:13:59.976\n&gt;&gt; All right Justin,\nwell, great question and\n\n204\n00:13:59.976 --> 00:14:06.095\nI gotta tell you that the community again,\nit's key for me as a selling point for\n\n205\n00:14:06.095 --> 00:14:12.030\nwhy Ruby on Rails is worth knowing,\nworth learning, worth using.\n\n206\n00:14:12.030 --> 00:14:13.034\nLet me show you what I mean.\n\n207\n00:14:13.034 --> 00:14:20.320\nI'm gonna hop on over to rubygems.org,\nwhich is a site that\n\n208\n00:14:20.320 --> 00:14:27.472\nshows the gems available that have been\nwritten by the community at large.\n\n209\n00:14:27.472 --> 00:14:34.390\nAnd we can see here,\nwe've got 8,860 total gems,\n\n210\n00:14:34.390 --> 00:14:40.190\ncode that people have written that\nreally encompasses anything that\n\n211\n00:14:40.190 --> 00:14:45.270\nbasically, what I'm getting at is if you\nhave a problem while you're developing\n\n212\n00:14:45.270 --> 00:14:49.860\na web application, chances are someone\nelse is running through that as well.\n\n213\n00:14:49.860 --> 00:14:52.204\nFor example, you've got a website, right?\n\n214\n00:14:52.204 --> 00:14:58.547\nAnd these people log into it to do\nsomething, and right there, log into.\n\n215\n00:14:58.547 --> 00:15:02.440\nNow you're getting into who is using\nthe website, what's their passwords,\n\n216\n00:15:02.440 --> 00:15:03.293\nwhat's their user names.\n\n217\n00:15:03.293 --> 00:15:06.426\nThis whole thing of HTTP authentication,\n\n218\n00:15:06.426 --> 00:15:11.393\nit's a complicated topic,\nit's a complicated problem to solve.\n\n219\n00:15:11.393 --> 00:15:19.035\nAnd what's great is that, there's a gem\nthat someone has written called Devise and\n\n220\n00:15:19.035 --> 00:15:25.190\nyou can see the number of downloads,\n2.28 million downloads.\n\n221\n00:15:25.190 --> 00:15:28.140\nAnd I've gotta tell you\nlike having used this and\n\n222\n00:15:28.140 --> 00:15:33.230\nwriting websites that use authentication,\nit's so sweet to know, that not only\n\n223\n00:15:33.230 --> 00:15:38.080\ndo I not have to write this code, but\nthat it's been tested by thousands and\n\n224\n00:15:38.080 --> 00:15:40.190\nthousands and thousands,\nmillions of people.\n\n225\n00:15:41.820 --> 00:15:46.950\nAnd not just that, if I hop on over to\nGitHub and take a look at the page for\n\n226\n00:15:46.950 --> 00:15:51.910\nDevise, because it's open source software,\nwe can see what it is what it's doing and\n\n227\n00:15:51.910 --> 00:15:54.960\nsee who's involved in it.\n\n228\n00:15:54.960 --> 00:15:58.712\nAnd it looks like I might have\na jumped onto the wrong URL here,\n\n229\n00:15:58.712 --> 00:16:01.899\nso I'm just gonna search for\nDevise and bring it up.\n\n230\n00:16:01.899 --> 00:16:04.800\nThere it is, and check this out.\n\n231\n00:16:05.930 --> 00:16:07.224\n&gt;&gt; Isn't that beautiful documentation?\n\n232\n00:16:07.224 --> 00:16:08.413\nI love documentation.\n\n233\n00:16:08.413 --> 00:16:12.805\nI love it when someone just breaks down\nsomething for me as a programmer, so\n\n234\n00:16:12.805 --> 00:16:15.836\nI can look at it and see how it works.\n\n235\n00:16:15.836 --> 00:16:20.326\nAnd that kind of gets in to something else\nabout Rails is one of its core principles\n\n236\n00:16:20.326 --> 00:16:22.382\nis the principle of least surprise.\n\n237\n00:16:22.382 --> 00:16:25.504\nThat's actually something that's built\ninto the Ruby language as a core\n\n238\n00:16:25.504 --> 00:16:27.330\nprinciple, as well.\n\n239\n00:16:27.330 --> 00:16:29.955\nWhat does that mean,\nprinciple of least surprise?\n\n240\n00:16:29.955 --> 00:16:32.644\nBasically, what it means\nis in the language\n\n241\n00:16:32.644 --> 00:16:36.200\nas your working through it wondering,\nhow do I do this?\n\n242\n00:16:36.200 --> 00:16:40.862\nHow do I iterate over this list\nthat I've gotten from my database?\n\n243\n00:16:40.862 --> 00:16:46.109\nThe syntax is written in a way that\nit's designed to surprise you the least.\n\n244\n00:16:47.700 --> 00:16:49.368\nAnd to kind of show you\nwhat I mean by that,\n\n245\n00:16:49.368 --> 00:16:52.672\nI'm gonna hop on over into my terminal and\nwe're gonna get into this stuff later.\n\n246\n00:16:52.672 --> 00:16:58.431\nI just kinda wanna show you an example\nof the expressiveness of Ruby and\n\n247\n00:16:58.431 --> 00:16:59.709\nwhat it can do.\n\n248\n00:16:59.709 --> 00:17:04.510\nSo I'm just gonna open up a quick file.\n\n249\n00:17:04.510 --> 00:17:05.730\nLet's say,\nwe wanna count numbers from one to ten.\n\n250\n00:17:05.730 --> 00:17:07.902\nIt's a pretty simple task, but\n\n251\n00:17:07.902 --> 00:17:12.500\none of the things I love about Ruby\nis just the language that it uses.\n\n252\n00:17:12.500 --> 00:17:19.570\nI wanna make a file, call it numbers.rb.\n\n253\n00:17:19.570 --> 00:17:23.460\nAnd at its core,\nRuby is a scripting language.\n\n254\n00:17:23.460 --> 00:17:28.222\nSo you might have seen\nsomething like this in Perl or\n\n255\n00:17:28.222 --> 00:17:34.780\nPHP where you got a major strength is\ntell us what is needed to run this.\n\n256\n00:17:34.780 --> 00:17:39.260\nBut it count to ten, we just type in the\nnumber one and there's a method on one.\n\n257\n00:17:39.260 --> 00:17:43.340\nBecause in Ruby, all numbers,\neverything is an object.\n\n258\n00:17:43.340 --> 00:17:45.020\nSo I haven't declared anything.\n\n259\n00:17:45.020 --> 00:17:49.705\nBut already,\nI can use objects here to reference\n\n260\n00:17:49.705 --> 00:17:54.400\nthe concept of a number\ngoing to another number.\n\n261\n00:17:56.974 --> 00:18:01.898\nSo here, I'm gonna just output and\nthis is kind of a funny thing in Ruby\n\n262\n00:18:01.898 --> 00:18:06.415\nthat s words puts, other languages\nhave print or standard out.\n\n263\n00:18:06.415 --> 00:18:08.508\nOr I think in JavaScript,\n\n264\n00:18:08.508 --> 00:18:14.560\nit was like 17 characters like\nsystem.printline.out or something.\n\n265\n00:18:14.560 --> 00:18:15.668\nRuby we just have puts.\n\n266\n00:18:15.668 --> 00:18:19.480\nSo puts I and we'll save that.\n\n267\n00:18:21.230 --> 00:18:24.031\nAnd just like that, actually,\nI used the magic numbers.\n\n268\n00:18:24.031 --> 00:18:29.180\nSo I'm just gonna make this executable and\n\n269\n00:18:29.180 --> 00:18:34.900\nwe can run that, and\nit looks like I've changed\n\n270\n00:18:34.900 --> 00:18:39.630\nmy magic numbers string isn't right.\n\n271\n00:18:39.630 --> 00:18:42.949\nSo I'm gonna take this out,\ncuz really we don't need it.\n\n272\n00:18:42.949 --> 00:18:45.282\nThat's one way to run a Ruby program, but\n\n273\n00:18:45.282 --> 00:18:49.030\nwe can also just run the Ruby\ninterpreter and then run it like that.\n\n274\n00:18:49.030 --> 00:18:50.434\nSo what do you think?\n\n275\n00:18:50.434 --> 00:18:56.000\n&gt;&gt; Well, I know that Ruby's been\non my list of things to attack.\n\n276\n00:18:56.000 --> 00:19:00.191\nBecause there's some other tools that\nuses Ruby, kind of as its core language.\n\n277\n00:19:00.191 --> 00:19:03.922\nI think Vagrant and some other like\nconfiguration management tools,\n\n278\n00:19:03.922 --> 00:19:06.270\nif you're into DevOps\nis also used by Ruby.\n\n279\n00:19:06.270 --> 00:19:11.450\nSo this will be a nice way of learning the\nRuby language, learning how to use Rails.\n\n280\n00:19:11.450 --> 00:19:16.101\nBut also you're gathering skills\nthat are well-supported in\n\n281\n00:19:16.101 --> 00:19:19.010\norder to be used in the future.\n\n282\n00:19:19.010 --> 00:19:20.091\nSo I don't know.\n\n283\n00:19:20.091 --> 00:19:22.330\nYou might have me sold, Manny.\n\n284\n00:19:22.330 --> 00:19:25.188\nNow, I know we've touched on this.\n\n285\n00:19:25.188 --> 00:19:30.314\nBut if you had to summarize,\nthere is few core principle that we've hit\n\n286\n00:19:30.314 --> 00:19:36.330\non over the course of these episode\nthat Rails are kind of exemplified.\n\n287\n00:19:36.330 --> 00:19:38.271\nWhat will those be?\n\n288\n00:19:38.271 --> 00:19:42.760\n&gt;&gt; So Justin, Rails, again,\nit's a web development framework.\n\n289\n00:19:42.760 --> 00:19:43.976\nSo we're working on the internet.\n\n290\n00:19:43.976 --> 00:19:46.130\nWe're working on the web,\n\n291\n00:19:46.130 --> 00:19:51.950\nwhich means that software that we write\nin Rails with Ruby is accessible.\n\n292\n00:19:51.950 --> 00:19:52.733\nYou can access it on your phone.\n\n293\n00:19:52.733 --> 00:19:57.374\nYou can access it on your computer and\nwe'll do so in a way with Rails where we\n\n294\n00:19:57.374 --> 00:20:02.625\ndon't have to spend a lot of time thinking\nabout things that already have been done.\n\n295\n00:20:02.625 --> 00:20:06.610\nWe can just focus on our logic,\nour business logic.\n\n296\n00:20:06.610 --> 00:20:10.751\nWe can focus on the things that we\nwanna create instead of trying to\n\n297\n00:20:10.751 --> 00:20:12.121\nreinvent the wheel.\n\n298\n00:20:12.121 --> 00:20:13.364\nSo the tradeoff for\n\n299\n00:20:13.364 --> 00:20:19.230\nthat is that Rails has some pretty strong\nopinions about the way that we do things.\n\n300\n00:20:19.230 --> 00:20:21.300\nSo that's what this\nseries is really about.\n\n301\n00:20:21.300 --> 00:20:24.250\nIt's about introducing those concepts and\nthose topics,\n\n302\n00:20:24.250 --> 00:20:26.315\nshowing the way that Rails does things and\n\n303\n00:20:26.315 --> 00:20:30.830\nthen using that as a platform to jump off\nand to create some really cool stuff.\n\n304\n00:20:30.830 --> 00:20:33.574\n&gt;&gt; Now I have heard people say\nthat those opinions of those,\n\n305\n00:20:33.574 --> 00:20:37.192\nI think I've heard it called convention\nover configuration type things.\n\n306\n00:20:37.192 --> 00:20:40.240\nEven if I'm not a Rails user,\nI still appreciate those.\n\n307\n00:20:40.240 --> 00:20:44.685\nBecause then I don't have to figure out\nthe 13,000 ways that I can accomplish\n\n308\n00:20:44.685 --> 00:20:45.523\nthe same task.\n\n309\n00:20:45.523 --> 00:20:48.412\nSo to me, that speaks to me as well.\n\n310\n00:20:48.412 --> 00:20:49.199\nWell, Manny,\n\n311\n00:20:49.199 --> 00:20:53.230\nyou have definitely given us a nice\nlittle preview of the things to come.\n\n312\n00:20:53.230 --> 00:20:56.496\nHelped us understand what is Ruby\non Rails and I'm pretty excited for\n\n313\n00:20:56.496 --> 00:20:57.406\nthe next episode.\n\n314\n00:20:57.406 --> 00:20:59.580\nAnd hopefully, you are as well.\n\n315\n00:20:59.580 --> 00:21:00.265\nDefinitely stay tuned.\n\n316\n00:21:00.265 --> 00:21:02.926\nWe got more intro to Ruby\non Rails coming at you.\n\n317\n00:21:02.926 --> 00:21:05.440\nBut this episode, well,\nwe're gonna go ahead and finish it out.\n\n318\n00:21:05.440 --> 00:21:09.480\nSo signing off for DevProTV,\nI've been your host Justin Dennison.\n\n319\n00:21:09.480 --> 00:21:10.181\n&gt;&gt; I'm Manny Rodriguez.\n\n320\n00:21:10.181 --> 00:21:11.270\nSee you next time.\n\n321\n00:21:11.270 --> 00:21:12.781\n&gt;&gt; And we'll see you next time.\n\n322\n00:21:12.781 --> 00:21:15.824\n[MUSIC]\n\n",
          "vimeoId": "238584708"
        },
        {
          "description": "In this episode, Justin and Manny get started in setting up the development environment required for Ruby on Rails. Manny demonstrates how to set up MacOS as well as Linux based machines including installing the Ruby programming language, installing Rails, covering the installation of Ruby Gems, as well as basic SQLite.",
          "length": "2090",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-introtorubyonrails/techskills-introtorubyonrails-2-1-1-installing_ruby_on_rails-101417-PGM.00_36_49_27.Still001.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-introtorubyonrails/techskills-introtorubyonrails-2-1-1-installing_ruby_on_rails-101417-PGM.00_36_49_27.Still001-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-introtorubyonrails/techskills-introtorubyonrails-2-1-1-installing_ruby_on_rails-101417-PGM.00_36_49_27.Still001-sm.jpg",
          "title": "Installing Ruby on Rails",
          "transcript": "WEBVTT\n\n1\n00:00:00.260 --> 00:00:10.260\n[MUSIC]\n\n2\n00:00:12.893 --> 00:00:16.938\nGreeting everyone and welcome to\nanother exciting episode of DevProTV.\n\n3\n00:00:16.938 --> 00:00:20.491\nI'm your host Justin Dennison, and well we\nare continuing on with our Ruby on Rails\n\n4\n00:00:20.491 --> 00:00:23.716\nseries, and particularly we're gonna\nget our environment up and going.\n\n5\n00:00:23.716 --> 00:00:27.922\nSo we can actually use Rails,\nand hopefully, hopefully,\n\n6\n00:00:27.922 --> 00:00:30.240\neverything goes just so.\n\n7\n00:00:30.240 --> 00:00:33.180\nBut luckily, we have someone\nthat knows all about this topic.\n\n8\n00:00:33.180 --> 00:00:34.950\nIn the studio with us today, Mr.\nManny Rodriguez.\n\n9\n00:00:34.950 --> 00:00:36.190\nHow are you doing today, Manny?\n\n10\n00:00:36.190 --> 00:00:37.440\n&gt;&gt; Hey Justin, how's it going?\n\n11\n00:00:37.440 --> 00:00:39.170\nYou ready to ride this train?\n\n12\n00:00:39.170 --> 00:00:44.060\n&gt;&gt; I am ready, and well, what\nare the things that we need to consider?\n\n13\n00:00:44.060 --> 00:00:46.680\nAre we just gonna jump right in and\nstart installing?\n\n14\n00:00:46.680 --> 00:00:49.320\n&gt;&gt; All right, so this is my favorite part.\n\n15\n00:00:49.320 --> 00:00:52.930\nGet some software, I don't know if you\nremember, going to the software store,\n\n16\n00:00:52.930 --> 00:00:53.830\nyou get a box.\n\n17\n00:00:53.830 --> 00:01:00.081\nYou put in floppy disks and get to\nsee those progress bars going across.\n\n18\n00:01:00.081 --> 00:01:02.393\nThat's what we're gonna\nbe getting into today.\n\n19\n00:01:02.393 --> 00:01:05.839\nWe're gonna be installing Ruby\nthe programming languages,\n\n20\n00:01:05.839 --> 00:01:07.436\nthe programming language.\n\n21\n00:01:07.436 --> 00:01:10.146\nAnd RubyGems it's package manager and\n\n22\n00:01:10.146 --> 00:01:15.550\njust to kind of give you a little\nbackground on what that actually is.\n\n23\n00:01:15.550 --> 00:01:20.247\nWe touched on this a little bit in\nthe last episode of how a package manager\n\n24\n00:01:20.247 --> 00:01:24.805\nlet's you share code and benefit\nfrom code that others have written.\n\n25\n00:01:24.805 --> 00:01:30.230\nA package manager is actually the tool\nthat you get to use to do that.\n\n26\n00:01:30.230 --> 00:01:34.020\nAnd that's a big deal because\nyou can go out to the Internet,\n\n27\n00:01:34.020 --> 00:01:38.700\ndownload a hunk of code, it comes down\nto your computer and it just works.\n\n28\n00:01:40.580 --> 00:01:43.930\nRubyGems is the package manager for\nthe Ruby language.\n\n29\n00:01:43.930 --> 00:01:47.210\nAnd by no means is it the only\npackage manager out there.\n\n30\n00:01:47.210 --> 00:01:49.900\nActually, as we kinda go through today,\nwe're gonna get to see several\n\n31\n00:01:49.900 --> 00:01:52.580\ndifferent package managers written for\ndifferent environments.\n\n32\n00:01:53.820 --> 00:01:56.968\nSo besides RubyGems and the Ruby language,\n\n33\n00:01:56.968 --> 00:02:00.890\nwe're also going to install\ndevelopment libraries.\n\n34\n00:02:00.890 --> 00:02:02.300\nWhat are those?\n\n35\n00:02:02.300 --> 00:02:04.380\nWe talked a little bit about\nlibraries in the past,\n\n36\n00:02:04.380 --> 00:02:08.380\nagain it kind of flows with the nature of\na framework, and what a framework is or\n\n37\n00:02:08.380 --> 00:02:10.100\na library, what a library is?\n\n38\n00:02:11.110 --> 00:02:16.301\nThese are software packages\nthat others have written\n\n39\n00:02:16.301 --> 00:02:20.692\nthat will support tools\nthat support Rails.\n\n40\n00:02:20.692 --> 00:02:23.256\nSo it's kind of like were\nlaying down the track, and\n\n41\n00:02:23.256 --> 00:02:26.360\nbefore we can lay down the track,\nwe've got to get our planks.\n\n42\n00:02:26.360 --> 00:02:28.344\nWe've got to get our bolts and\nour nails, and then,\n\n43\n00:02:28.344 --> 00:02:29.805\nwe're gonna put track on top of that.\n\n44\n00:02:29.805 --> 00:02:31.940\nAnd then on top of that\nour train's gonna run.\n\n45\n00:02:31.940 --> 00:02:36.710\nSo we're gonna really get to get down\ninto it today, to the nitty-gritty.\n\n46\n00:02:36.710 --> 00:02:40.230\n&gt;&gt; All right, so we've got to get\nthese first few things set up.\n\n47\n00:02:40.230 --> 00:02:42.340\nSo well, I'm ready.\n\n48\n00:02:42.340 --> 00:02:45.440\nYou said,\nwe're gonna install the Ruby language.\n\n49\n00:02:45.440 --> 00:02:46.890\n&gt;&gt; Yeah.\n&gt;&gt; How are we gonna get that installed?\n\n50\n00:02:46.890 --> 00:02:50.914\n&gt;&gt; Great, so we'll start with OSX.\n\n51\n00:02:50.914 --> 00:02:54.730\nI'm on a Mac, and today we're\ngonna cover Mac and Linux install.\n\n52\n00:02:56.060 --> 00:03:00.360\nGood thing is, if you're on a Mac and\nyou're looking for Ruby, it comes with it.\n\n53\n00:03:00.360 --> 00:03:02.780\nIt's already installed,\nyou don't have to do anything.\n\n54\n00:03:02.780 --> 00:03:07.597\nIf you can go to the Apple store, and\nwalk up to one of their computers and\n\n55\n00:03:07.597 --> 00:03:09.944\ndo what I'm about to do right now.\n\n56\n00:03:09.944 --> 00:03:14.276\nWhich is you I forgot\na terminal opened out and\n\n57\n00:03:14.276 --> 00:03:19.880\nyou can access that by just\nrunning terminal.app on OSX.\n\n58\n00:03:19.880 --> 00:03:22.880\nI've got it running here, and\nI'm just gonna type in ruby.\n\n59\n00:03:25.160 --> 00:03:27.410\nI'm gonna type a ruby --version.\n\n60\n00:03:27.410 --> 00:03:31.546\nThis is will run the command\nline interpreter for Ruby, and\n\n61\n00:03:31.546 --> 00:03:36.589\nbasically it won't [INAUDIBLE] if I\njust this, it will expect us to give it\n\n62\n00:03:36.589 --> 00:03:41.655\nsome ruby code like 1+1 or\nsomething like that, and it will just run.\n\n63\n00:03:41.655 --> 00:03:44.265\nAlthough I was expecting\nto say two back to me, so\n\n64\n00:03:44.265 --> 00:03:46.443\nI'm curious what's happening there?\n\n65\n00:03:46.443 --> 00:03:50.098\nBut in any case,\nwe can just run ruby--version and\n\n66\n00:03:50.098 --> 00:03:52.600\nwe can see that Ruby's installed.\n\n67\n00:03:54.340 --> 00:03:58.320\nCool thing about the Ruby ecosystem,\nis that Gems, it wasn't always this way,\n\n68\n00:03:58.320 --> 00:04:00.910\nit used to be that Ruby and\n\n69\n00:04:00.910 --> 00:04:05.270\nRuby Gems were two separate programs that\nhad to be installed and run separately.\n\n70\n00:04:05.270 --> 00:04:07.600\nBut these days,\nit's all combined together.\n\n71\n00:04:07.600 --> 00:04:10.250\nSo if you've got ruby,\nyou've also got gem.\n\n72\n00:04:10.250 --> 00:04:13.090\nAnd on OS10, that's the case.\n\n73\n00:04:13.090 --> 00:04:21.120\nSo the command for\ngem is just g-e-m, we can run that.\n\n74\n00:04:21.120 --> 00:04:23.927\nAnd like most command line programs,\n\n75\n00:04:23.927 --> 00:04:28.846\nif I run a command line program like\ngem that'll tell it what to do.\n\n76\n00:04:28.846 --> 00:04:32.443\nIt helps me out and it gives me all kinds\nof information about how to use this\n\n77\n00:04:32.443 --> 00:04:34.790\ncommand, what kind of things can it do?\n\n78\n00:04:34.790 --> 00:04:38.632\nAnd we'll be using this quite\na bit in just a little while.\n\n79\n00:04:38.632 --> 00:04:42.508\nBut as you can see here,\nwe're on the map, we've got Ruby,\n\n80\n00:04:42.508 --> 00:04:46.590\nwe've got RubyGems, so\nwe're good to go there.\n\n81\n00:04:46.590 --> 00:04:54.890\nNow, unfortunately, this isn't sufficient\nto run Rails out of the box, as it is.\n\n82\n00:04:54.890 --> 00:04:58.480\nThere's gonna be some other\nsoftware that we need.\n\n83\n00:04:58.480 --> 00:05:03.180\nRuby, let me just take a step back.\n\n84\n00:05:03.180 --> 00:05:06.718\nRails is actually\na collection of RubyGems.\n\n85\n00:05:06.718 --> 00:05:12.600\nIt's a RubyGems, but it's a RubyGems\nthat depends on about 15 other gems and\n\n86\n00:05:12.600 --> 00:05:15.360\nsome of those gems have\ndependencies of their own.\n\n87\n00:05:15.360 --> 00:05:18.500\nAnd by dependencies, I just mean,\nthat before you can have this package,\n\n88\n00:05:18.500 --> 00:05:20.730\nyou gotta have this package to go with it.\n\n89\n00:05:20.730 --> 00:05:25.850\nSo kinda like, going to go back to the\ntrain analogy, it makes no sense to put\n\n90\n00:05:25.850 --> 00:05:31.540\na Rail right on ground, it's when it rains\nit gonna get all bent up and twisted.\n\n91\n00:05:32.950 --> 00:05:37.440\nSo in order for\nthose gems to install properly,\n\n92\n00:05:37.440 --> 00:05:42.680\nsome of them for speed reasons have\nsome code that's written in C++ that\n\n93\n00:05:42.680 --> 00:05:46.570\nare compiled automatically\nas you install this gems.\n\n94\n00:05:46.570 --> 00:05:51.000\nAnd we don't have to worry about compiling\nthem or getting to any of that, but\n\n95\n00:05:51.000 --> 00:05:55.290\nit does mean that on our computers\nwe have to have software installed.\n\n96\n00:05:55.290 --> 00:05:59.220\nSo that references in that\nC code will work correctly.\n\n97\n00:05:59.220 --> 00:06:02.390\nSo that's what we're gonna do next.\n\n98\n00:06:02.390 --> 00:06:08.030\nAnd this being a Mac and\nbeing In the Apple ecosystem, everything\n\n99\n00:06:08.030 --> 00:06:11.830\ndeveloped in related in the Apple\necosystem could've based off of Xcode.\n\n100\n00:06:12.990 --> 00:06:17.960\nSo you can download Xcode\nfrom the Mac App Store, and\n\n101\n00:06:17.960 --> 00:06:20.310\nhere's a link to what that looks like.\n\n102\n00:06:20.310 --> 00:06:26.040\nGot this cool hammer and blueprint\nicon denoting we're building stuff.\n\n103\n00:06:26.040 --> 00:06:31.040\nAnd downloading and installing this is\ngoing to give us all the tools that we\n\n104\n00:06:31.040 --> 00:06:37.110\nneed to compile the C extensions that\nwe need for Rails to get that going.\n\n105\n00:06:39.190 --> 00:06:41.380\nSo on this particular\nMac I've already done that.\n\n106\n00:06:41.380 --> 00:06:45.660\nIt's about,\nlet's see how big this is, 5.39 gigs.\n\n107\n00:06:45.660 --> 00:06:47.750\nYeah, that will take awhile to download.\n\n108\n00:06:47.750 --> 00:06:49.052\nSo, we've already got that going.\n\n109\n00:06:49.052 --> 00:06:53.360\nIt'll probably, so if you haven't\ndownloaded it yet, you can go ahead and\n\n110\n00:06:53.360 --> 00:06:53.930\ngrab that.\n\n111\n00:06:53.930 --> 00:06:58.080\nGet that going on your machine,\nand once you've installed that\n\n112\n00:06:58.080 --> 00:07:02.510\nthere's another set of command\nline tools that we'll install.\n\n113\n00:07:02.510 --> 00:07:08.170\nThat's part of this set of software\nthat we'll need to get Rails running.\n\n114\n00:07:08.170 --> 00:07:14.710\nOn the Mac it's called developer command\nline tools, and we can install that.\n\n115\n00:07:14.710 --> 00:07:16.433\nWe're here in the terminal.\n\n116\n00:07:16.433 --> 00:07:18.660\nYour terminal may look a little\nbit different from mine.\n\n117\n00:07:18.660 --> 00:07:24.940\nI've got a theme on it, and\nI'm using a different shell software.\n\n118\n00:07:24.940 --> 00:07:29.710\nSo this here, which basically is just\nmy name, the name of my computer, and\n\n119\n00:07:29.710 --> 00:07:33.330\nthe director where I'm at may look\na little bit different from yours.\n\n120\n00:07:33.330 --> 00:07:36.440\nBut you can type in the commands and\nthey'll all work the same.\n\n121\n00:07:37.500 --> 00:07:41.210\nSo to install those developer tools,\n\n122\n00:07:41.210 --> 00:07:45.860\nwe'll wanna run the command, Xcode-select.\n\n123\n00:07:45.860 --> 00:07:50.692\nAnd what this is, this is just kind of\na meta program to do all kinds of things\n\n124\n00:07:50.692 --> 00:07:53.404\nwith Xcode, and then tell it to install.\n\n125\n00:07:55.867 --> 00:07:57.922\nAnd on my computer I'm getting an error.\n\n126\n00:07:57.922 --> 00:08:00.197\nIt's saying error,\ncommand line tools are already installed.\n\n127\n00:08:00.197 --> 00:08:02.751\nSo just like a computer, it's saying,\nhey, you already got it.\n\n128\n00:08:02.751 --> 00:08:04.260\nWhat are you doing?\n\n129\n00:08:04.260 --> 00:08:05.015\nWhat are you telling me to do?\n\n130\n00:08:05.015 --> 00:08:06.675\nI've got this already.\n\n131\n00:08:06.675 --> 00:08:11.541\nBut on your end, if you haven't installed\nit, you'll see a pop up from Mac\n\n132\n00:08:11.541 --> 00:08:16.580\nsoftware update, confirming that\nyou wanna install the Xcode tools.\n\n133\n00:08:16.580 --> 00:08:20.760\nSo go ahead and go through that,\ninstall the Xcode tools, and then,\n\n134\n00:08:20.760 --> 00:08:21.780\nyou have that ready to go.\n\n135\n00:08:23.560 --> 00:08:27.060\nSo one other thing about Mac setup, and\n\n136\n00:08:27.060 --> 00:08:30.970\nthis kind of goes along with\npackage managing in general.\n\n137\n00:08:30.970 --> 00:08:35.350\nThere is another package manager that's\nnot for ruby like RubyGems is, but\n\n138\n00:08:35.350 --> 00:08:38.850\nit's for the Mac, called Homebrew.\n\n139\n00:08:38.850 --> 00:08:45.270\nAnd, this is a really powerful tool that\nwill allow you to download development\n\n140\n00:08:45.270 --> 00:08:50.290\nlibraries onto your mac for things that\nApple didn't include in their set up.\n\n141\n00:08:50.290 --> 00:08:52.142\nSo what we've just installed here,\n\n142\n00:08:52.142 --> 00:08:55.560\nits kind of the basic set of things\nwe need just to get rails running.\n\n143\n00:08:56.590 --> 00:08:59.930\nBut, we're gonna want to\ninstall other things.\n\n144\n00:08:59.930 --> 00:09:03.930\nMaybe we're going to want to write\nan app to do some graphics work.\n\n145\n00:09:03.930 --> 00:09:08.359\nI will need to install a graphics library,\nand the graphics then that we wanna use,\n\n146\n00:09:08.359 --> 00:09:11.222\nuses some other package\nthat Apple didn't include.\n\n147\n00:09:11.222 --> 00:09:15.988\nSo for that, we can build those\nfiles from source ourselves,\n\n148\n00:09:15.988 --> 00:09:18.380\nbut we don't need to do that.\n\n149\n00:09:18.380 --> 00:09:24.119\nWe can install Homebrew, so I'm just gonna\nhop on over to the Homebrew's website.\n\n150\n00:09:24.119 --> 00:09:30.820\nWhich is brew.sh, and\nit's loading up here.\n\n151\n00:09:30.820 --> 00:09:34.840\nYou can see Homebrew, the missing\npackage manager for OS or OS X.\n\n152\n00:09:34.840 --> 00:09:40.548\nAnd installing it is as simple as\nsimply copy, pasting this link here.\n\n153\n00:09:40.548 --> 00:09:42.282\nAnd just to break this down a little bit,\n\n154\n00:09:42.282 --> 00:09:46.240\nwhat it's really doing it it's downloading\na RubyScript from the internet.\n\n155\n00:09:46.240 --> 00:09:49.440\nWhich I know might sound a little scary,\nbut this is totally legit.\n\n156\n00:09:49.440 --> 00:09:52.710\nIt's great software with\ngreat people behind it, and\n\n157\n00:09:52.710 --> 00:09:58.630\nit's just passing it into the Ruby that's\ninstalled on your computer already.\n\n158\n00:09:58.630 --> 00:10:02.510\nSo, I'm always a big fan of\nwhenever typing in command line\n\n159\n00:10:03.570 --> 00:10:08.170\ncommands from some source just look at it\ntrying to get a feel for what it's doing.\n\n160\n00:10:08.170 --> 00:10:13.420\nYou can learn some really cool things\nthat way, like the fact that you can\n\n161\n00:10:13.420 --> 00:10:16.570\nrun the ruby program by downloading\nit from the internet, and\n\n162\n00:10:16.570 --> 00:10:17.890\nthen having it run on your computer.\n\n163\n00:10:18.890 --> 00:10:24.001\nSo you can actually see that\nthis raw.githubusercontent.com,\n\n164\n00:10:24.001 --> 00:10:26.800\nthis is a script that's up on GitHub.\n\n165\n00:10:26.800 --> 00:10:30.710\nWe can actually just copy this,\nand paste it in our browser, and\n\n166\n00:10:30.710 --> 00:10:32.920\nsee what this source code is and\nsee what it's doing.\n\n167\n00:10:34.160 --> 00:10:36.800\nAnd it's all Ruby code.\n\n168\n00:10:36.800 --> 00:10:37.900\nHomebrew is written in Ruby.\n\n169\n00:10:39.490 --> 00:10:44.330\nAnd, I've already installed this on\nmy machine, so I'm not gonna copy and\n\n170\n00:10:44.330 --> 00:10:45.720\npaste this.\n\n171\n00:10:45.720 --> 00:10:51.330\nBut, you go and do that, it's gonna\nshow you some progress bar things,\n\n172\n00:10:51.330 --> 00:10:53.630\nand once your done you'll be\nable to run the brew command.\n\n173\n00:10:54.930 --> 00:10:59.700\nAnd just like Gem and Ruby before,\nI didn't tell it what to do so\n\n174\n00:10:59.700 --> 00:11:02.520\nit's just going to give\nme a list of things.\n\n175\n00:11:02.520 --> 00:11:07.810\nSo, this is something that is optional but\nhighly recommended,\n\n176\n00:11:07.810 --> 00:11:10.760\nbecause for OS X down the line,\n\n177\n00:11:10.760 --> 00:11:15.810\nyou're almost certainly gonna want to\nhave access to packages in Homebrew.\n\n178\n00:11:17.040 --> 00:11:19.677\nSo, that about does it for OSX.\n\n179\n00:11:19.677 --> 00:11:22.190\nWhat do you think about Linux, Justin?\n\n180\n00:11:22.190 --> 00:11:26.370\n&gt;&gt; Well, personally, I enjoy a Linux\nenvironment, I'm a big Ubuntu user.\n\n181\n00:11:26.370 --> 00:11:28.190\nI've played around with some other ones.\n\n182\n00:11:28.190 --> 00:11:31.960\nAnd I'm actually move,\nbecause I have a Mac.\n\n183\n00:11:31.960 --> 00:11:34.833\nI've use brew, but I missed aptitude.\n\n184\n00:11:34.833 --> 00:11:36.640\nLike aptitude or maybe even yum for\n\n185\n00:11:36.640 --> 00:11:40.020\nsome of those who are on\nalternative Linux systems.\n\n186\n00:11:40.020 --> 00:11:42.410\nI find it to be a more\nenjoyable environment, for\n\n187\n00:11:42.410 --> 00:11:47.200\nme personally,\nthan even the Mac OS ecosystem.\n\n188\n00:11:47.200 --> 00:11:49.460\nSo I don't have to see\na Linux box gets set up.\n\n189\n00:11:50.760 --> 00:11:51.740\n&gt;&gt; Justin, I got you.\n\n190\n00:11:51.740 --> 00:11:54.120\nI can totally understand.\n\n191\n00:11:54.120 --> 00:11:56.320\nLinux, I really appreciate Linux as well.\n\n192\n00:11:56.320 --> 00:12:00.680\nThere's such beauty in being able to\nbuild things the way that you want it.\n\n193\n00:12:00.680 --> 00:12:02.470\nExactly the way that you want it.\n\n194\n00:12:02.470 --> 00:12:07.030\nAnd, one thing about the Apple ecosystem\nis that it's kind of like rails in a way.\n\n195\n00:12:07.030 --> 00:12:10.030\nIt's pretty opinionated about\nthe way it does things, and\n\n196\n00:12:10.030 --> 00:12:11.170\nit makes decisions for you.\n\n197\n00:12:12.240 --> 00:12:14.740\nSo as we'll see,\nI'm also glad you mentioned apt-get.\n\n198\n00:12:14.740 --> 00:12:18.526\nWe're gonna get to give\nit a workout today.\n\n199\n00:12:18.526 --> 00:12:27.930\nBecause unlike OSX, which I've got\nan Ubuntu virtual machine running here.\n\n200\n00:12:27.930 --> 00:12:30.860\nAnd this is a fresh install.\n\n201\n00:12:30.860 --> 00:12:32.660\nActually, let me correct that.\n\n202\n00:12:32.660 --> 00:12:37.972\nI've installed, the packages that\nwe're talking about on here now,\n\n203\n00:12:37.972 --> 00:12:41.966\nbut we're going to go through\nthat process in Linux.\n\n204\n00:12:41.966 --> 00:12:48.480\nBut unlike OS X, most Linux distributions\ndon't come with Ruby pre-installed.\n\n205\n00:12:48.480 --> 00:12:53.100\nAnd some of them you can choose\nthem as an install option,\n\n206\n00:12:53.100 --> 00:12:55.892\nthey're just app get packages and\n\n207\n00:12:55.892 --> 00:13:00.043\nwe're gonna be running\nthrough a few of those now.\n\n208\n00:13:00.043 --> 00:13:04.548\nSo, to start this off,\nwe're gonna want to,\n\n209\n00:13:04.548 --> 00:13:08.600\nwe're gonna need route to install Ruby.\n\n210\n00:13:10.640 --> 00:13:15.777\nSo we'll do a App-get install,\n\n211\n00:13:15.777 --> 00:13:21.820\nand I'm gonna break this down into several\ndifferent app get package installation,\n\n212\n00:13:21.820 --> 00:13:25.615\nbecause I think it's useful to kind of\ngroup what we're installing together.\n\n213\n00:13:25.615 --> 00:13:31.210\nPseudo/, we're basically saying,\nrun this command with elevated privileges.\n\n214\n00:13:31.210 --> 00:13:34.420\nSo it can do what it needs to do,\napt-get is our command line program to\n\n215\n00:13:34.420 --> 00:13:36.600\ninstall packages, and\nwe're telling to install.\n\n216\n00:13:36.600 --> 00:13:39.980\nAnd now, we can give it a list of\nthe things that we want it to install.\n\n217\n00:13:39.980 --> 00:13:44.150\nI'm gonna start off with,\nwe're just gonna do ruby and ruby-dev.\n\n218\n00:13:44.150 --> 00:13:48.400\nSo Ruby, this includes\nThe ruby programming language,\n\n219\n00:13:48.400 --> 00:13:52.170\nRuby Gems and all that associated stuff.\n\n220\n00:13:53.170 --> 00:13:57.150\nRuby dev,\nis a set of development libraries that\n\n221\n00:13:59.200 --> 00:14:03.780\nwe'll need down the road to support\nthe building of other gems.\n\n222\n00:14:03.780 --> 00:14:08.015\nSo we're kinda doing the similar\ntheme as the OSX install,\n\n223\n00:14:08.015 --> 00:14:11.073\nwe're just starting a couple steps back.\n\n224\n00:14:11.073 --> 00:14:13.740\nSo, it wants my password,\nI'll give it to it.\n\n225\n00:14:13.740 --> 00:14:17.800\nAnd as I said, I've already installed\nthese packages, so it's just confirming\n\n226\n00:14:17.800 --> 00:14:21.440\nthat to me, that I've already\ninstalled it, it's the latest version.\n\n227\n00:14:21.440 --> 00:14:24.960\nOn your machine, you'll probably see\nsomething like a confirmation screen.\n\n228\n00:14:24.960 --> 00:14:29.610\nThat'll show you, that'll ask\nyou what it is that you've got.\n\n229\n00:14:29.610 --> 00:14:33.280\nSo for example, I just did a install PHP.\n\n230\n00:14:33.280 --> 00:14:37.930\nSay I'm just really hitting the web\ndev hard and I want everything.\n\n231\n00:14:37.930 --> 00:14:41.390\nAnd this is what you'll see if you\nhaven't installed Ruby and RubyDev.\n\n232\n00:14:42.810 --> 00:14:47.270\nIt'll basically show you what\npackages are gonna be installed\n\n233\n00:14:48.270 --> 00:14:52.650\nas a dependency for\nthis package that you want.\n\n234\n00:14:52.650 --> 00:14:55.550\nSo it knows based on\nwhat you've asked it for,\n\n235\n00:14:55.550 --> 00:14:59.010\nit knows what it needs\nto grab to support you.\n\n236\n00:14:59.010 --> 00:15:02.860\nAnd then it just kinda gives you a nice\nsummary of what it's gonna download and\n\n237\n00:15:02.860 --> 00:15:03.380\nwhat it's gonna do.\n\n238\n00:15:06.069 --> 00:15:10.704\nSo after we've done that for\nRuby and Ruby Dev, now,\n\n239\n00:15:10.704 --> 00:15:13.800\nwe've got Ruby, just like on Mac.\n\n240\n00:15:15.290 --> 00:15:17.050\nAnd now, it's waiting for\nme to type in a program.\n\n241\n00:15:18.080 --> 00:15:24.290\nAnd I can do ruby --version, just like\nthe Mac version It works the same.\n\n242\n00:15:24.290 --> 00:15:29.070\nAnd for this series I'll be working\nmostly in OS X, but these command line\n\n243\n00:15:30.850 --> 00:15:34.660\ncommands are going to be\nthe same between Linux and OS X.\n\n244\n00:15:37.180 --> 00:15:40.100\nAnd of course we've got gem as well, and\n\n245\n00:15:40.100 --> 00:15:42.090\nit works just the same\nas the OS X version.\n\n246\n00:15:43.752 --> 00:15:47.770\nAll right, so we're here in Linux,\nwe've got Ruby, we've got Ruby Gems.\n\n247\n00:15:47.770 --> 00:15:50.469\nWe need our development libraries.\n\n248\n00:15:50.469 --> 00:15:55.095\nSo just like OS X, Apple hides some of\nthis from us because a lot of the packages\n\n249\n00:15:55.095 --> 00:16:00.007\nthat I'm about to type in to get in Linux,\nApple's already included with Xcode,\n\n250\n00:16:00.007 --> 00:16:03.492\nSo, this is kind of cool cuz\nwe'll get to learn a little bit\n\n251\n00:16:03.492 --> 00:16:06.160\nmore about what's behind the scenes here.\n\n252\n00:16:07.450 --> 00:16:13.606\nAnd the packages that we need are llbxml2,\n\n253\n00:16:13.606 --> 00:16:19.360\nllbxml2 devel.\n\n254\n00:16:19.360 --> 00:16:23.040\nAnd this is similar to Ruby, we've got,\nyou'll see this pattern often,\n\n255\n00:16:23.040 --> 00:16:27.020\nwhere we've got a package that includes\nprogram or a library and then another\n\n256\n00:16:27.020 --> 00:16:32.690\npackage that includes development code, so\nthat we can compile against that library.\n\n257\n00:16:32.690 --> 00:16:34.590\nAnd that's about as much as\nyou need to know about it.\n\n258\n00:16:34.590 --> 00:16:39.080\nIt's just that usually going through this\nprocess you may run into issues where,\n\n259\n00:16:40.330 --> 00:16:44.580\neither installing a gem or another\npackage you'll get a compilation error.\n\n260\n00:16:44.580 --> 00:16:48.230\nUsually it means that you're missing some\nlibrary or some development library.\n\n261\n00:16:50.300 --> 00:16:51.660\nSo, we've got those two.\n\n262\n00:16:51.660 --> 00:16:56.766\nWe need zlib1g-devel and\n\n263\n00:16:56.766 --> 00:17:02.210\nnode.js, because Ruby requires a,\nI'm sorry,\n\n264\n00:17:02.210 --> 00:17:05.940\nexcuse me,\nRails requires a javascript runtime.\n\n265\n00:17:08.100 --> 00:17:09.550\nAnd it looks like I\ntyped that one in wrong,\n\n266\n00:17:09.550 --> 00:17:12.440\nbecause-\n&gt;&gt; I think you accidentally put a one\n\n267\n00:17:12.440 --> 00:17:13.170\ninstead of big.\n\n268\n00:17:14.400 --> 00:17:15.240\n&gt;&gt; Yeah.\n&gt;&gt; Is it one g?\n\n269\n00:17:15.240 --> 00:17:20.063\n&gt;&gt; Yeah it's zlib, these names they're,\nyou look at them and\n\n270\n00:17:20.063 --> 00:17:23.030\nit's just like-\n&gt;&gt; It's not devel.\n\n271\n00:17:23.030 --> 00:17:24.385\nIt's dev.\n\n272\n00:17:24.385 --> 00:17:25.750\n&gt;&gt; It's dev.\n\n273\n00:17:25.750 --> 00:17:26.450\nIt's interesting.\n\n274\n00:17:26.450 --> 00:17:29.270\nSometimes they follow a pattern.\n\n275\n00:17:29.270 --> 00:17:30.952\nWe got dev here but the devel here.\n\n276\n00:17:33.699 --> 00:17:34.920\nSo there we go.\n\n277\n00:17:34.920 --> 00:17:36.370\nWe install that.\n\n278\n00:17:36.370 --> 00:17:40.770\nAll right, so\nwe're pretty much good on packages for\n\n279\n00:17:40.770 --> 00:17:42.250\ndevelopment libraries and we've got Ruby.\n\n280\n00:17:43.320 --> 00:17:44.950\nWhat do you think?\n\n281\n00:17:44.950 --> 00:17:47.160\n&gt;&gt; Now Manny,\nI do have a quick question for ya.\n\n282\n00:17:47.160 --> 00:17:51.160\nIt is my understanding that\nRails needs a database.\n\n283\n00:17:51.160 --> 00:17:55.210\nI haven't heard you say anything\nabout that is that because\n\n284\n00:17:55.210 --> 00:17:58.540\nit's just gonna magically appear or\nare there any steps we need to take for\n\n285\n00:17:58.540 --> 00:18:01.660\nthat respective back end service?\n\n286\n00:18:01.660 --> 00:18:03.880\n&gt;&gt; Well, so glad you mentioned that.\n\n287\n00:18:03.880 --> 00:18:06.790\nStrictly speaking you don't\nneed a database for Rails, but\n\n288\n00:18:06.790 --> 00:18:09.980\nwe certainly do because\nthe apps we're writing or\n\n289\n00:18:09.980 --> 00:18:13.510\nthe app that we're gonna write in this\nseries, we're gonna want to save our work.\n\n290\n00:18:13.510 --> 00:18:18.000\nWe want to be able to have users\nstore data in a permanent way.\n\n291\n00:18:19.060 --> 00:18:21.060\nImagine if you had a blog where,\n\n292\n00:18:21.060 --> 00:18:24.070\nif the server went offline,\nyour blog disappeared.\n\n293\n00:18:24.070 --> 00:18:25.750\nThat'd be pretty awkward.\n\n294\n00:18:25.750 --> 00:18:29.718\nSo, a database,\nI'm glad you brought that up, Justin.\n\n295\n00:18:29.718 --> 00:18:33.123\nJust to kinda recap what a database is and\nwhy we need one.\n\n296\n00:18:33.123 --> 00:18:38.080\nIs that it's basically a program that\nit's only job is to take data and\n\n297\n00:18:38.080 --> 00:18:42.940\nstore it for us in a permanent way so\nthat if a server reboots or\n\n298\n00:18:45.040 --> 00:18:49.820\nfiles that we create or\ncontent that we create become files on\n\n299\n00:18:49.820 --> 00:18:52.642\na hard drive that can be backed up,\nit can be copied and shared.\n\n300\n00:18:52.642 --> 00:18:59.060\nSo, i'm kind of going with this standing\non the shoulders of giants theme,\n\n301\n00:18:59.060 --> 00:19:01.570\nit would be a lot of work to write\nour own database from scratch.\n\n302\n00:19:01.570 --> 00:19:05.360\nAnd, thankfully there's many\ndatabases that we can choose from.\n\n303\n00:19:05.360 --> 00:19:08.310\nAnd, many that will work with Rails.\n\n304\n00:19:08.310 --> 00:19:12.860\nSo, specifically with Rails,\nRails works with relational databases.\n\n305\n00:19:12.860 --> 00:19:17.070\nSo, we're gonna be using Sequel Lite for\nthis series.\n\n306\n00:19:17.070 --> 00:19:22.130\nThere also is My SQL, Post some\nother databases that you can choose.\n\n307\n00:19:22.130 --> 00:19:22.830\nThe process for\n\n308\n00:19:22.830 --> 00:19:26.620\ninstalling these is very similar to\nwhat I'm about to show you with SQLite.\n\n309\n00:19:28.750 --> 00:19:30.050\nIt's just a different name.\n\n310\n00:19:30.050 --> 00:19:33.490\nAnd we'll get into this in a later series,\nbut\n\n311\n00:19:33.490 --> 00:19:37.470\nthe nice thing about using Rails is\nthat no matter what database you use\n\n312\n00:19:37.470 --> 00:19:41.490\non the back end, in your application code\nwe're going to be using the same code\n\n313\n00:19:41.490 --> 00:19:43.770\nto interface with any\ndatabase that we choose.\n\n314\n00:19:45.310 --> 00:19:50.210\nSo, let's hop back over\nto our OS X terminal.\n\n315\n00:19:50.210 --> 00:19:52.900\nWe'll come back to Linux in just a minute.\n\n316\n00:19:52.900 --> 00:19:54.740\nAnd, we're gonna use SQLite 3.\n\n317\n00:19:54.740 --> 00:19:59.760\nAnd, the cool thing about SQLite 3\non OS X, is that just like Ruby and\n\n318\n00:19:59.760 --> 00:20:03.510\nRuby Gems,\nit comes already installed on the system.\n\n319\n00:20:03.510 --> 00:20:06.990\nSo we don't need to install\nanything to get sqlite3.\n\n320\n00:20:06.990 --> 00:20:11.970\nWe can test it out the same way that\nwe've done with Rails, excuse me,\n\n321\n00:20:11.970 --> 00:20:15.580\nwith Ruby, and Ruby Gem.\n\n322\n00:20:15.580 --> 00:20:20.020\nWe can just type in the command to run\nit and then see what version we have.\n\n323\n00:20:21.290 --> 00:20:27.090\nAnd we can also Run\nsqlite3 the program and\n\n324\n00:20:27.090 --> 00:20:31.840\nwe get this client which allows us\nto kind of mess around with it.\n\n325\n00:20:31.840 --> 00:20:35.280\nTo see what sqlite all about and\nwe don't need to do this for\n\n326\n00:20:35.280 --> 00:20:41.280\nanything in this series because Rails\nhandles all this kind of thing for us.\n\n327\n00:20:41.280 --> 00:20:43.040\nBut we just want to know that\nit's here and it's working.\n\n328\n00:20:44.490 --> 00:20:50.140\nSo, we're all set as far as OS X goes.\n\n329\n00:20:51.500 --> 00:20:53.700\nNow, hopping back over to Linux,\n\n330\n00:20:53.700 --> 00:20:56.070\nwe do need to get some\npackages to get this to work.\n\n331\n00:20:57.440 --> 00:21:00.290\nAnd we'll use apt get install.\n\n332\n00:21:00.290 --> 00:21:02.200\nWe're going to grab some more packages.\n\n333\n00:21:02.200 --> 00:21:07.656\nAnd we need a sqllite3 And\n\n334\n00:21:07.656 --> 00:21:10.412\nsqllite3-devel.\n\n335\n00:21:10.412 --> 00:21:14.710\nAnd, I was kind of guessing on there.\n\n336\n00:21:16.440 --> 00:21:17.100\nI do this a lot.\n\n337\n00:21:17.100 --> 00:21:21.140\nSometimes you type in a package,\nthat if you think you know,\n\n338\n00:21:21.140 --> 00:21:22.540\nthe name should be this.\n\n339\n00:21:22.540 --> 00:21:24.020\nBut, it's actually not that.\n\n340\n00:21:24.020 --> 00:21:25.840\nSo, I'm just gonna just double\ncheck my notes really quick\n\n341\n00:21:25.840 --> 00:21:29.600\nto see what the actual, there we go.\n\n342\n00:21:29.600 --> 00:21:30.580\nThey put a lib in front of it.\n\n343\n00:21:31.940 --> 00:21:34.040\nSo, it's libsqlite3.\n\n344\n00:21:34.040 --> 00:21:37.330\nSometimes I feel like the package\nmaintainers are messing with\n\n345\n00:21:37.330 --> 00:21:37.910\nus a little bit.\n\n346\n00:21:41.788 --> 00:21:42.330\nThere we go.\n\n347\n00:21:42.330 --> 00:21:44.320\nAnd I actually didn't have that\ninstalled on my computer so\n\n348\n00:21:44.320 --> 00:21:50.170\nyou can see that it went out and\nit downloaded them, and it grabbed them.\n\n349\n00:21:50.170 --> 00:21:51.410\nSo let's test this out on my machine.\n\n350\n00:21:54.767 --> 00:21:55.430\nThere we go.\n\n351\n00:21:55.430 --> 00:21:59.290\nSo we've got a good terminal,\nand I can check the version.\n\n352\n00:22:07.128 --> 00:22:08.610\nI forgot the three on the end of that.\n\n353\n00:22:11.090 --> 00:22:13.720\nThere we go, so we got a database.\n\n354\n00:22:13.720 --> 00:22:16.390\n&gt;&gt; So,\nManny now that we have this database.\n\n355\n00:22:16.390 --> 00:22:20.939\nI feel like we might have all\nthe preparations necessary,\n\n356\n00:22:21.950 --> 00:22:26.290\nbut correct me if I'm wrong, we haven't\nactually installed Rails yet, correct?\n\n357\n00:22:26.290 --> 00:22:27.600\n&gt;&gt; Yes, that's right.\n\n358\n00:22:27.600 --> 00:22:33.650\nWe've got all the prerequisites\nthat we need to install Rails and\n\n359\n00:22:33.650 --> 00:22:35.355\nthat's what we're gonna do here.\n\n360\n00:22:35.355 --> 00:22:38.005\nWe're actually gonna go and\ndownload that Rails Gem.\n\n361\n00:22:39.355 --> 00:22:44.209\nSo, like all packages,\nlike all Ruby Gems packages,\n\n362\n00:22:44.209 --> 00:22:48.545\nwe can see it here on\nrubygems.org's website.\n\n363\n00:22:50.775 --> 00:22:52.365\nWhich is kind of a neat thing to do.\n\n364\n00:22:52.365 --> 00:22:54.835\nIt kind of reminds you that\nthere's a community behind this,\n\n365\n00:22:54.835 --> 00:23:01.939\nothers have written this,\nand we're supported.\n\n366\n00:23:01.939 --> 00:23:05.960\nSo a neat thing about this Ruby Gems\nwebsite is that that right there,\n\n367\n00:23:05.960 --> 00:23:09.280\nthis name Rails, that's the name\nof the Gem that we need to get.\n\n368\n00:23:09.280 --> 00:23:10.725\nThat's how we get Rails.\n\n369\n00:23:11.960 --> 00:23:14.380\nSo usually you'll find out\nabout some cool Gem or\n\n370\n00:23:14.380 --> 00:23:18.340\nsome cool Framework that you'd\nwanna use or try out, what is it?\n\n371\n00:23:18.340 --> 00:23:20.580\nHow do I find it?\n\n372\n00:23:20.580 --> 00:23:27.180\nUsually you'll get a package name that\nyou'll see on a page like this, either on\n\n373\n00:23:27.180 --> 00:23:33.200\nthe page of the community that wrote it or\na GitHub profile or something like that.\n\n374\n00:23:34.980 --> 00:23:40.150\nSo thankfully with Rails it's just,\nit's really a pretty straightforward name.\n\n375\n00:23:40.150 --> 00:23:42.250\nSo let's go ahead and grab that.\n\n376\n00:23:42.250 --> 00:23:47.435\nSo with Gem we haven't really talked\nabout the command you can give to it and\n\n377\n00:23:47.435 --> 00:23:52.374\nsimilar to apt get, we've got an install,\nwe've got an uninstall And\n\n378\n00:23:52.374 --> 00:23:54.785\nwe've got a list, list command.\n\n379\n00:23:54.785 --> 00:23:58.082\nThose are the main ones\nthat you'll typically use.\n\n380\n00:23:58.082 --> 00:24:00.190\nSo here, just running a gem list,\n\n381\n00:24:00.190 --> 00:24:04.350\nI get a list of all the gems that I\nhave installed on my computer here.\n\n382\n00:24:05.410 --> 00:24:06.950\nYou can see I already\nhave Rails installed.\n\n383\n00:24:08.150 --> 00:24:10.300\nBut I can also just look at this and\n\n384\n00:24:10.300 --> 00:24:12.730\nsee what I've got,\ncuz it keeps track of that for me.\n\n385\n00:24:15.050 --> 00:24:19.030\nSo if I wanted to install Rails,\nall I need to type is gem install rails.\n\n386\n00:24:20.630 --> 00:24:21.700\nAnd it's going to think for a bit.\n\n387\n00:24:21.700 --> 00:24:23.280\nIt's kind of going out to the Internet.\n\n388\n00:24:23.280 --> 00:24:27.360\nIt's doing some number crunching,\nfiguring out what it needs.\n\n389\n00:24:27.360 --> 00:24:30.710\nAnd you see that this says,\nsuccessfully installed Rails.\n\n390\n00:24:30.710 --> 00:24:33.240\nNow, I'm cheating because\nit's already installed.\n\n391\n00:24:34.310 --> 00:24:39.100\nDoing this on your end, you're going\nto see about 15 or 16 different gems.\n\n392\n00:24:39.100 --> 00:24:40.720\nBeing installed here.\n\n393\n00:24:40.720 --> 00:24:47.430\nAnd gem will actually tell\nus what Rails is made up of.\n\n394\n00:24:48.440 --> 00:24:51.800\nWe can do that by using this dep command.\n\n395\n00:24:51.800 --> 00:24:54.280\nSo, gem dep rails.\n\n396\n00:24:54.280 --> 00:25:00.050\nBasically, we're asking what\nmakes up Ruby on Rails.\n\n397\n00:25:01.350 --> 00:25:03.430\nAnd look at all those packages we've got.\n\n398\n00:25:03.430 --> 00:25:09.057\nAll of these are gems\n\n399\n00:25:09.057 --> 00:25:14.870\nand some gems that we're gonna be\ndownloading to get this working.\n\n400\n00:25:14.870 --> 00:25:18.530\n&gt;&gt; So Manny, is this gonna be\nexactly the same procedure that\n\n401\n00:25:18.530 --> 00:25:20.980\nwe would use in the Linux environment?\n\n402\n00:25:20.980 --> 00:25:22.410\n&gt;&gt; Yeah, yeah, isn't that great?\n\n403\n00:25:23.520 --> 00:25:25.740\nRuby and Gems.\n\n404\n00:25:25.740 --> 00:25:32.610\nThe command line interface is the same,\nwhether you're on OS X or Linux.\n\n405\n00:25:32.610 --> 00:25:36.810\nAnd I've even seen a Windows ports with\nthis that have a command line interface\n\n406\n00:25:36.810 --> 00:25:41.960\nwhere the commands to actually install\ngems and run Ruby programs is the same.\n\n407\n00:25:43.210 --> 00:25:45.130\nSo here in Linux, we'll do the same.\n\n408\n00:25:45.130 --> 00:25:48.850\nWe'll do gen install rails.\n\n409\n00:25:48.850 --> 00:25:50.230\nAnd pull that down here.\n\n410\n00:25:51.670 --> 00:25:55.080\nAnd it's yelling at me because it's saying\nI don't have permission to do this,\n\n411\n00:25:55.080 --> 00:26:00.230\nbecause I forgot to run this\nas sudo with admin privileges.\n\n412\n00:26:01.620 --> 00:26:05.160\nSo I'm gonna go and do that, and\nagain it's already installed.\n\n413\n00:26:05.160 --> 00:26:09.610\nSo it's showing me that but\nwe can do the same gem dep command,\n\n414\n00:26:09.610 --> 00:26:13.960\neverything works the same here\nin Linux as it does in OSX.\n\n415\n00:26:13.960 --> 00:26:16.740\nSo we've done it, we've installed Rails.\n\n416\n00:26:16.740 --> 00:26:19.300\n&gt;&gt; Now Manny,\nI noticed this is Rails version 5.1.4,\n\n417\n00:26:19.300 --> 00:26:24.120\nnow that's at the time of this\nrecording for this series.\n\n418\n00:26:24.120 --> 00:26:28.080\nShould anything five and above work as\nlong as it's not a next major version like\n\n419\n00:26:28.080 --> 00:26:32.260\nsix, if someones watching this,\nI don't think that's in the pipeline but\n\n420\n00:26:32.260 --> 00:26:34.200\nI'm just making sure\nwe're on the same page.\n\n421\n00:26:34.200 --> 00:26:36.120\n&gt;&gt; Yeah ,Justin, that's a fair assumption.\n\n422\n00:26:36.120 --> 00:26:39.750\nFor this series,\nanything five x will work and\n\n423\n00:26:39.750 --> 00:26:42.530\nyou'll find that earlier\nversions will work as well.\n\n424\n00:26:43.530 --> 00:26:44.610\nWho knows what's gonna come down,\n\n425\n00:26:44.610 --> 00:26:47.340\nwhat kind of awesome stuff the Rails\nteam is gonna create for Rail 6?\n\n426\n00:26:47.340 --> 00:26:50.648\nBut Ruby on Rails is fairly\nmature at this point.\n\n427\n00:26:50.648 --> 00:26:57.450\nAnd the basics have been pretty\nmuch the same since Rails 3.\n\n428\n00:26:57.450 --> 00:27:02.500\nSo they've added features and\na better way of doing things but\n\n429\n00:27:02.500 --> 00:27:07.850\nyou'll be able to follow along with Rails\n5, or even older versions if you need to.\n\n430\n00:27:07.850 --> 00:27:11.160\nI definitely would recommend\nusing Rails 5 for this.\n\n431\n00:27:11.160 --> 00:27:14.860\n&gt;&gt; Now I'm pretty excited about\nseeing how this all comes together.\n\n432\n00:27:14.860 --> 00:27:16.540\nI do have one quick question.\n\n433\n00:27:16.540 --> 00:27:18.050\nYou made a mention about Windows.\n\n434\n00:27:18.050 --> 00:27:20.760\nNow we've talked about Mac OS and\n\n435\n00:27:20.760 --> 00:27:25.370\nLinux, I'm guessing the story is a little\nbit different when we're [INAUDIBLE] for\n\n436\n00:27:25.370 --> 00:27:30.180\nWindows and maybe a little more\ncomplicated to get things set up.\n\n437\n00:27:30.180 --> 00:27:32.540\nIs that an accurate assumption as well?\n\n438\n00:27:32.540 --> 00:27:34.520\n&gt;&gt; Yeah Justin, that's accurate.\n\n439\n00:27:34.520 --> 00:27:40.670\nTo be totally honest I don't have a lot of\nexperience with Ruby on Rails in Windows.\n\n440\n00:27:40.670 --> 00:27:44.730\nBut if you think about the operating\nsystems and their different histories.\n\n441\n00:27:44.730 --> 00:27:52.040\nUnix, OS X, Linux, they all come from\nthe same family tree and Windows does not.\n\n442\n00:27:52.040 --> 00:27:57.490\nSo from what I know about Ruby on\nRails on Windows is that some have\n\n443\n00:27:57.490 --> 00:28:02.870\ncreated packages for programs that emulate\nthe command line structure in Windows.\n\n444\n00:28:04.280 --> 00:28:08.420\n&gt;&gt; So people may just need to,\nnot necessarily need, they may want to.\n\n445\n00:28:08.420 --> 00:28:11.250\nWell for this series, that Virtual Box.\n\n446\n00:28:11.250 --> 00:28:11.910\n&gt;&gt; Yeah.\nOr copy a box.\n\n447\n00:28:11.910 --> 00:28:13.710\n&gt;&gt; Grab a copy of Ubuntu.\n\n448\n00:28:13.710 --> 00:28:18.830\nSet up a basic, you'll notice that\nManny's running Ubuntu in a Windowed box.\n\n449\n00:28:18.830 --> 00:28:21.170\nAnd that's because it's a virtual machine.\n\n450\n00:28:21.170 --> 00:28:25.735\nYou could probably go through this series\nand do a fair amount just in that way,\n\n451\n00:28:25.735 --> 00:28:30.734\nwithout having to do this weird kinda work\naround, that doesn't work in Windows.\n\n452\n00:28:30.734 --> 00:28:34.078\nBecause some of this much\nis command line driven and\n\n453\n00:28:34.078 --> 00:28:38.275\nthat's gonna be in the nix style,\nthe Starnix, Unix, Linux,\n\n454\n00:28:38.275 --> 00:28:42.810\nMac OS In that style, so you would\nhave to do a constant translation.\n\n455\n00:28:42.810 --> 00:28:46.410\nSo for this series, I would recommend\nactually using a virtual machine,\n\n456\n00:28:46.410 --> 00:28:50.430\ngetting things up and going and\nkind of proceeding that way.\n\n457\n00:28:50.430 --> 00:28:54.959\nNow, Manny, it seems like we got rails\nof stuff, we got all the requirements,\n\n458\n00:28:54.959 --> 00:28:59.163\nwe haven't really actually tested to\nsee if rails works though, right?\n\n459\n00:28:59.163 --> 00:29:00.580\n&gt;&gt; You're right.\n&gt;&gt; Are we gonna see that?\n\n460\n00:29:00.580 --> 00:29:01.910\n&gt;&gt; Yeah, let's do it.\n\n461\n00:29:01.910 --> 00:29:03.610\nSo we've done all this work,\nwe've got all this down.\n\n462\n00:29:03.610 --> 00:29:05.270\nLet's see this run.\n\n463\n00:29:05.270 --> 00:29:08.770\nSo when we installed the Rails gem,\nand this is a common pattern.\n\n464\n00:29:08.770 --> 00:29:12.360\nYou install a package and now you get\naccess to this new command that you can\n\n465\n00:29:12.360 --> 00:29:15.820\nuse to do things, and\nwe'll see a lot of things work that way.\n\n466\n00:29:15.820 --> 00:29:19.560\nInstalling the Rails gem gives this\nrails command which when we run,\n\n467\n00:29:19.560 --> 00:29:24.600\nit will kind of in the same formula\nformat that we've seen before,\n\n468\n00:29:24.600 --> 00:29:27.970\nit will tell us okay, well, you've run me,\nbut you haven't told me what to do.\n\n469\n00:29:27.970 --> 00:29:29.810\nHere we go, what do you want me to do?\n\n470\n00:29:29.810 --> 00:29:33.880\nAnd you'll see that there is a lot\nof options, lot of things to do.\n\n471\n00:29:33.880 --> 00:29:36.630\nBut for right now, let's just make a new\nproject, that's what we're here for.\n\n472\n00:29:37.890 --> 00:29:46.680\nSo I'm gonna do rails new, and\nnew_project, actually let's do hello.\n\n473\n00:29:46.680 --> 00:29:52.388\nWe wanna get Rails to say hello so, and\nyou'll notice I totally typoed that and\n\n474\n00:29:52.388 --> 00:29:56.330\nI've got help instead but\nRails is cool with it.\n\n475\n00:29:56.330 --> 00:30:01.280\nBasically what it's done,\nI've got a lot of output here but\n\n476\n00:30:01.280 --> 00:30:07.110\nit's created a whole new rails project,\nan empty project.\n\n477\n00:30:07.110 --> 00:30:11.270\nAnd we can see all of this framework\ncode that ruby on rails gives us.\n\n478\n00:30:11.270 --> 00:30:16.300\nSo all of this is files that it's\ncreated in the directory and then\n\n479\n00:30:18.940 --> 00:30:23.890\nthese are all the gems that came with\nRails, that it depends on to run.\n\n480\n00:30:23.890 --> 00:30:27.050\nIt's using all of those and\nintegrating that into my project.\n\n481\n00:30:27.050 --> 00:30:28.470\nAnd now it's good to go.\n\n482\n00:30:30.370 --> 00:30:34.052\nSo, it's got my typo in there,\nbut that's okay.\n\n483\n00:30:34.052 --> 00:30:38.740\nActually in this case I would actually\nrecommend that if you make a typo like\n\n484\n00:30:38.740 --> 00:30:43.760\nthis while creating a Rails project that\nyou just erase it at this point and create\n\n485\n00:30:43.760 --> 00:30:47.950\nit again with the right name because\nthe application name is fairly important.\n\n486\n00:30:47.950 --> 00:30:53.050\nAnd it gets used everywhere\nin all kinds of source files.\n\n487\n00:30:53.050 --> 00:30:57.040\nAnd you'll drive yourself\nmad trying to find them all.\n\n488\n00:30:57.040 --> 00:31:00.200\nSo I'm just gonna re-create that again,\nIt's super quick and\n\n489\n00:31:00.200 --> 00:31:02.880\neasy to make any project anyway.\n\n490\n00:31:04.190 --> 00:31:06.610\nSo here we go, here's our app.\n\n491\n00:31:08.320 --> 00:31:12.190\n&gt;&gt; And that is pretty simple, so it looks\nlike we've, we're not gonna get too deep\n\n492\n00:31:12.190 --> 00:31:15.330\ninto there, I'm pretty sure this is what\nyou were talking about in a previous\n\n493\n00:31:15.330 --> 00:31:19.890\nepisode about Rails being very\nopinionated about certain things.\n\n494\n00:31:19.890 --> 00:31:23.090\n&gt;&gt; But it's built all these files and\nthings but is the app running?\n\n495\n00:31:24.360 --> 00:31:25.340\n&gt;&gt; Yep, it's a no.\n\n496\n00:31:25.340 --> 00:31:26.880\nNo, I'm glad you point that out.\n\n497\n00:31:26.880 --> 00:31:29.010\nWe've got this created here.\n\n498\n00:31:29.010 --> 00:31:32.990\nWe've got all the files we need but\nwe haven't actually run any code yet.\n\n499\n00:31:32.990 --> 00:31:38.690\nSo to do that,\nwe'll do user command called server.\n\n500\n00:31:40.663 --> 00:31:43.302\nSo we'll just run a rail server and\n\n501\n00:31:43.302 --> 00:31:47.490\nnow you can see there's a web\nserver listening here and\n\n502\n00:31:47.490 --> 00:31:52.513\nit will send us back content that\nwe create as we develop this app.\n\n503\n00:31:52.513 --> 00:31:57.164\nBut for right now we can\nhop on into our browser and\n\n504\n00:31:57.164 --> 00:32:01.147\nlet's give it a try and see what happens.\n\n505\n00:32:01.147 --> 00:32:06.770\nSo firing up Firefox,\nI'm gonna navigate over to localhost.\n\n506\n00:32:06.770 --> 00:32:11.000\nIf you're familiar with networking,\nyou'll know that this means\n\n507\n00:32:11.000 --> 00:32:15.600\nthat I'm basically using\nmy own computer as the URL.\n\n508\n00:32:15.600 --> 00:32:17.980\nOften times, you'll put a name there.\n\n509\n00:32:17.980 --> 00:32:20.290\nThe name of a website, Facebook.\n\n510\n00:32:20.290 --> 00:32:22.170\nAnd that becomes an IP address.\n\n511\n00:32:22.170 --> 00:32:24.370\nBut you're on your own computer and\n\n512\n00:32:24.370 --> 00:32:26.890\nthe server's also running\non your own computer.\n\n513\n00:32:26.890 --> 00:32:29.400\nThere's really no need to\ngo out to the Internet, and\n\n514\n00:32:29.400 --> 00:32:32.705\nthis is the way that that's\nexpressed in a browser.\n\n515\n00:32:32.705 --> 00:32:35.960\nLocalhost is basically a shortcut for\nthis computer right here.\n\n516\n00:32:35.960 --> 00:32:40.450\nLook at this colon 3000,\nwhat does that mean?\n\n517\n00:32:40.450 --> 00:32:43.290\nComputers, they're talking to\neach other all the time and\n\n518\n00:32:43.290 --> 00:32:45.550\ndifferent application\nare talking to each other.\n\n519\n00:32:45.550 --> 00:32:48.870\nSo, imagine that you're having a walkie\ntalkie with only one channel and\n\n520\n00:32:48.870 --> 00:32:54.270\nyou try to channel all that communication,\nsay the communication of an airport,\n\n521\n00:32:54.270 --> 00:32:57.260\nthrough one single walkie\ntalkie it'd be pretty\n\n522\n00:32:57.260 --> 00:33:00.600\ncrazy because everybody would be\ntrying to talk at the same time.\n\n523\n00:33:00.600 --> 00:33:06.360\nSo this number here, these are our ports\nand it basically allows us to breakup this\n\n524\n00:33:06.360 --> 00:33:10.850\none mega walkie talkie of our computers\nInternet connection into thousands of\n\n525\n00:33:10.850 --> 00:33:16.140\nsmaller ones so that a program can listen\nto another program at a specific place.\n\n526\n00:33:16.140 --> 00:33:18.810\nAnd not conflict with anything else.\n\n527\n00:33:18.810 --> 00:33:22.770\nSo Rails is really opinionated and\nby default it picks the number 3000 so\n\n528\n00:33:22.770 --> 00:33:29.020\nthat's where it's running and\nwe're running that here on our browser.\n\n529\n00:33:29.020 --> 00:33:32.720\nWe can see this cool\nrail splash page come up.\n\n530\n00:33:32.720 --> 00:33:37.360\nAnd if we hop back on over to our server\nterminal, we'll see some output here.\n\n531\n00:33:38.630 --> 00:33:43.390\nThere's work being done basically the\nRails server is saying hey I got a request\n\n532\n00:33:43.390 --> 00:33:48.640\nfrom someone at this IP address,\nwhich is shortcut IP address for\n\n533\n00:33:48.640 --> 00:33:52.800\nthis computer right here and\nI'm going to give them some stuff.\n\n534\n00:33:52.800 --> 00:33:54.320\nSo we'll talk a little bit more about\n\n535\n00:33:55.400 --> 00:33:58.880\nhow web apps work under\nthe hood in a future episode.\n\n536\n00:33:58.880 --> 00:34:03.950\nBut it's really satisfying to\nbe able to refresh this page and\n\n537\n00:34:03.950 --> 00:34:07.480\nsee things happen.\n\n538\n00:34:08.480 --> 00:34:10.380\n&gt;&gt; Well Manny you've definitely\ngot us up and running.\n\n539\n00:34:10.380 --> 00:34:13.030\nAnd it's pretty exciting because\ntechnically we've made our\n\n540\n00:34:13.030 --> 00:34:13.800\nfirst Rails app.\n\n541\n00:34:13.800 --> 00:34:15.570\nIt works.\n\n542\n00:34:15.570 --> 00:34:18.620\nIt's done, but we're not done.\n\n543\n00:34:18.620 --> 00:34:21.620\nDefinitely got more coming at you\nin this intro to Ruby on Rails, but\n\n544\n00:34:21.620 --> 00:34:24.520\nwe are out of time for this episode so\nwe're gonna have to come back for\n\n545\n00:34:24.520 --> 00:34:29.170\nsome more episodes to get things rolling\nforward as we build out this project.\n\n546\n00:34:29.170 --> 00:34:32.320\nSeems pretty easy to me,\nhopefully it seems easy to you, so\n\n547\n00:34:32.320 --> 00:34:33.480\ndefinitely stay tuned.\n\n548\n00:34:33.480 --> 00:34:35.510\nSo we're gonna go ahead and\nwrap this one up, so\n\n549\n00:34:35.510 --> 00:34:38.480\nsigning off for DevPro.TV,\nI've been your host Justin Dennison.\n\n550\n00:34:38.480 --> 00:34:39.740\n&gt;&gt; I'm Manny Rodriguez.\n\n551\n00:34:39.740 --> 00:34:40.590\n&gt;&gt; And we'll see you next time.\n\n552\n00:34:40.590 --> 00:34:46.057\n[MUSIC]\n\n",
          "vimeoId": "238585308"
        },
        {
          "description": "In this episode, Justin and Manny explore some of the prerequisite knowledge before diving into web development using Rails. Manny discusses the manner of operation of HTTP-based applications as well as making sure that we understand the Model View Controller(MVC) application design pattern.",
          "length": "1540",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-introtorubyonrails/techskills-introtorubyonrails-3-1-1-intro_to_web_apps-101417.00_27_47_04.Still001.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-introtorubyonrails/techskills-introtorubyonrails-3-1-1-intro_to_web_apps-101417.00_27_47_04.Still001-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-introtorubyonrails/techskills-introtorubyonrails-3-1-1-intro_to_web_apps-101417.00_27_47_04.Still001-sm.jpg",
          "title": "Intro to Web Apps",
          "transcript": "WEBVTT\n\n1\n00:00:00.000 --> 00:00:10.000\n[MUSIC]\n\n2\n00:00:12.845 --> 00:00:16.290\n&gt;&gt; Greetings, everyone and welcome to\nanother exciting episode of DevProTV.\n\n3\n00:00:16.290 --> 00:00:17.770\nI'm your host Justin Dennison.\n\n4\n00:00:17.770 --> 00:00:21.842\nAnd while we're continuing our\njourney on Ruby on Rails, well,\n\n5\n00:00:21.842 --> 00:00:24.000\nin Ruby on Rails not on.\n\n6\n00:00:24.000 --> 00:00:24.877\nAre we on the Rails?\n\n7\n00:00:24.877 --> 00:00:29.687\nWho cares, but we're specifically gonna\nbe talking about the structure and\n\n8\n00:00:29.687 --> 00:00:31.260\nwhat is a web app?\n\n9\n00:00:31.260 --> 00:00:33.160\nHow do web apps work?\n\n10\n00:00:33.160 --> 00:00:34.714\nAnd ultimately, why do we care?\n\n11\n00:00:34.714 --> 00:00:35.362\nAnd luckily,\n\n12\n00:00:35.362 --> 00:00:38.982\nwe have someone in the studio that's gonna\nhelp us along in that very endeavor.\n\n13\n00:00:38.982 --> 00:00:40.400\nMr. Manny Rodriguez.\n\n14\n00:00:40.400 --> 00:00:41.062\nHow you doing today, Manny?\n\n15\n00:00:41.062 --> 00:00:41.830\n&gt;&gt; Hey, Justin.\n\n16\n00:00:41.830 --> 00:00:43.280\nDoing great.\nHow are you doing?\n\n17\n00:00:43.280 --> 00:00:44.618\n&gt;&gt; I am doing fantastic.\n\n18\n00:00:44.618 --> 00:00:47.379\nSo we're gonna be talking\nabout web apps and\n\n19\n00:00:47.379 --> 00:00:52.150\ndo we really need to know a whole lot or\nis this going to be enough to make sure we\n\n20\n00:00:52.150 --> 00:00:55.081\nhave an understanding\nof what Rails is doing?\n\n21\n00:00:55.081 --> 00:00:58.324\n&gt;&gt; Well, Justin,\nwe've talked about Rails and\n\n22\n00:00:58.324 --> 00:01:02.600\nhow it's opinionated and\nit makes decisions for us.\n\n23\n00:01:02.600 --> 00:01:07.331\nSo where we're going with this episode\nis that it's really useful to know\n\n24\n00:01:07.331 --> 00:01:12.388\nthe underlying reasons why Rails makes\nthe decisions that it does make for us.\n\n25\n00:01:12.388 --> 00:01:16.765\nWhen we understand those decisions, then\nit's easier for us to grasp the Rails way\n\n26\n00:01:16.765 --> 00:01:20.658\nof doing things and just understand\nhow everything is working together.\n\n27\n00:01:20.658 --> 00:01:25.094\nCuz in the end, a web app is just\na whole bunch of interrelated parts,\n\n28\n00:01:25.094 --> 00:01:26.330\nkind of like a car.\n\n29\n00:01:27.338 --> 00:01:32.727\nSo we're gonna talk about how the web\napps are built their major components and\n\n30\n00:01:32.727 --> 00:01:37.137\nkind of see a little bit of behind\nthe scenes look at what browsers\n\n31\n00:01:37.137 --> 00:01:40.177\nare doing when we go to\nconnect to a website.\n\n32\n00:01:40.177 --> 00:01:41.830\n&gt;&gt; So that's starting to make sense.\n\n33\n00:01:41.830 --> 00:01:47.675\nNow I know usually when we say web for\nthe most part, we're talking HTTP.\n\n34\n00:01:47.675 --> 00:01:51.504\nIs that where we're gonna start at or\nis that gonna come in later?\n\n35\n00:01:51.504 --> 00:01:52.661\n&gt;&gt; We'll start right there.\n\n36\n00:01:52.661 --> 00:01:57.445\nYeah, HTTP or that funny little thing\nthat you type into your browser before\n\n37\n00:01:57.445 --> 00:01:59.397\nyou go to a site, what is that?\n\n38\n00:01:59.397 --> 00:02:02.429\nWhy do we have to type that in and\nwhat does it represent?\n\n39\n00:02:02.429 --> 00:02:04.940\nSo let's talk about that for a bit.\n\n40\n00:02:06.040 --> 00:02:10.660\nWhen your computer goes out to\nthe internet to get a website,\n\n41\n00:02:10.660 --> 00:02:12.370\nit's talking to another computer.\n\n42\n00:02:12.370 --> 00:02:15.124\nSo we've got a computer\ntalking to another computer.\n\n43\n00:02:15.124 --> 00:02:18.050\nAnd like humans talking to each other,\nthey need a language,\n\n44\n00:02:18.050 --> 00:02:19.580\na way to understand each other.\n\n45\n00:02:19.580 --> 00:02:22.177\nA way to have structured requests.\n\n46\n00:02:22.177 --> 00:02:26.244\nAnd basically,\na way to understand what's coming back.\n\n47\n00:02:26.244 --> 00:02:28.827\nSo that's what HTTP is.\n\n48\n00:02:28.827 --> 00:02:34.036\nIt stands for hypertext transfer protocol\nand we're not gonna get too deep\n\n49\n00:02:34.036 --> 00:02:40.270\ninto the meaning of what HTTP is, but\nrather just an overview of how it works.\n\n50\n00:02:40.270 --> 00:02:44.677\nSo looking at this diagram here.\n\n51\n00:02:44.677 --> 00:02:50.166\nWe kinda saw this a little bit in\nthe last episode where we basically\n\n52\n00:02:50.166 --> 00:02:55.458\ncreated a sample or a blank Rails app,\nbut it still had all of this\n\n53\n00:02:55.458 --> 00:03:00.860\nserver processing built-in and\nwe could ask it for a website.\n\n54\n00:03:00.860 --> 00:03:06.017\nAnd we just went to it's group page and\nit sent us some data back,\n\n55\n00:03:06.017 --> 00:03:09.370\nand this is kind of like what's going on.\n\n56\n00:03:09.370 --> 00:03:11.210\nWe're the user on the browser.\n\n57\n00:03:11.210 --> 00:03:12.861\nWe're asking it hey, I want some data.\n\n58\n00:03:12.861 --> 00:03:16.460\nCan I have some data or\nmaybe we wanna create some data.\n\n59\n00:03:16.460 --> 00:03:20.072\nLike for instance, if we're uploading\na post to Facebook, we're saying, hey,\n\n60\n00:03:20.072 --> 00:03:20.959\nhere's some data.\n\n61\n00:03:20.959 --> 00:03:22.696\nI want you to store this for me.\n\n62\n00:03:22.696 --> 00:03:26.150\nBut in other case,\nwe're making a request to the server.\n\n63\n00:03:26.150 --> 00:03:30.380\nAnd once a server receives a request,\nit's gonna sit and think about it and\n\n64\n00:03:30.380 --> 00:03:34.356\nmaybe there's some processing or\nsome logic that has to happen here.\n\n65\n00:03:34.356 --> 00:03:37.238\nSo say that you upload\nsomething on Facebook and\n\n66\n00:03:37.238 --> 00:03:40.983\nit's gonna do all of this stuff\nto actually make that happen,\n\n67\n00:03:40.983 --> 00:03:44.980\nit's gonna get your pictures and\nsave it to the database.\n\n68\n00:03:44.980 --> 00:03:49.437\nSo maybe it's gonna send an email or\ntalk to some other program, but\n\n69\n00:03:49.437 --> 00:03:51.640\nit's gonna do some processing.\n\n70\n00:03:51.640 --> 00:03:56.168\nAnd then when it's done with that,\nit's gonna take all of that together and\n\n71\n00:03:56.168 --> 00:03:57.674\nsend us back a response.\n\n72\n00:03:57.674 --> 00:04:01.645\nSo in your day to day use of the web,\nyou probably notice this.\n\n73\n00:04:01.645 --> 00:04:05.853\nWhen you go to a website and\nit's your browser is basically idle for\n\n74\n00:04:05.853 --> 00:04:09.385\na split second, if you're lucky or\nmaybe even longer,\n\n75\n00:04:09.385 --> 00:04:14.160\nif something is a little wonky\nwith the site you're talking to.\n\n76\n00:04:14.160 --> 00:04:18.269\nBut what's happening there is that your\ncomputer is waiting for that response.\n\n77\n00:04:18.269 --> 00:04:20.174\nAnd then once that response comes through,\n\n78\n00:04:20.174 --> 00:04:23.920\nthen it kinda come through over\nthe internet and it gets downloaded.\n\n79\n00:04:23.920 --> 00:04:28.800\n&gt;&gt; Now Manny, I've heard this described\nas like you go into a restaurant.\n\n80\n00:04:28.800 --> 00:04:31.503\nYou're the client,\ncuz we talk about our computer and\n\n81\n00:04:31.503 --> 00:04:34.390\nthe browser a lot of times\nas the client of a server.\n\n82\n00:04:34.390 --> 00:04:37.993\nWell, if you sit down on the restaurant,\nsomeone comes over and say,\n\n83\n00:04:37.993 --> 00:04:39.164\ncan I take your order?\n\n84\n00:04:39.164 --> 00:04:40.060\nWhat are they called?\n\n85\n00:04:40.060 --> 00:04:41.761\nThey're called your server.\n\n86\n00:04:41.761 --> 00:04:44.245\nThey're your serving staff.\n\n87\n00:04:44.245 --> 00:04:46.118\nAnd you say, well, you know what?\n\n88\n00:04:46.118 --> 00:04:48.076\nI really just want\nmozzarella cheese sticks.\n\n89\n00:04:48.076 --> 00:04:49.657\n&gt;&gt; Yeah.\n&gt;&gt; Well, they go back and\n\n90\n00:04:49.657 --> 00:04:51.343\ndo some processing, cooking and\n\n91\n00:04:51.343 --> 00:04:54.185\nthen eventually bring your\nmozzarella cheese sticks.\n\n92\n00:04:54.185 --> 00:04:59.115\nBut if you ask for something very complex,\nI want a rib eye with blue cheese crumbles\n\n93\n00:04:59.115 --> 00:05:03.281\nof loaded baked potato and\nthen I would like the seasoned vegetables.\n\n94\n00:05:03.281 --> 00:05:06.430\nAlso, can I have a cup\nof french onion soup?\n\n95\n00:05:06.430 --> 00:05:11.759\nThat request in using this metaphor\nmay take a little bit longer.\n\n96\n00:05:11.759 --> 00:05:13.600\nIf you're like, well,\nwhy would it take longer?\n\n97\n00:05:13.600 --> 00:05:15.448\nIt's just the nature of complexity.\n\n98\n00:05:15.448 --> 00:05:20.386\nIf you ask for more or if there's more\nnecessary to give what you ask for\n\n99\n00:05:20.386 --> 00:05:22.570\nbac, this is gonna take time.\n\n100\n00:05:22.570 --> 00:05:24.459\nYou may have to wait longer at\nthe restaurant for your order.\n\n101\n00:05:24.459 --> 00:05:28.018\nSo if you think of it in those terms at\nleast initially, I think that's a good\n\n102\n00:05:28.018 --> 00:05:32.380\nkind of starting point if you've never\nbeen in the web application space before.\n\n103\n00:05:32.380 --> 00:05:33.000\n&gt;&gt; Yeah, you got it.\n\n104\n00:05:33.000 --> 00:05:37.552\nThat's a great metaphor just thinking\nabout simple requests can come back\n\n105\n00:05:37.552 --> 00:05:42.176\nsimply or quickly, more complicated\nrequests take time to put together and\n\n106\n00:05:42.176 --> 00:05:44.720\nto process and also this is the internet.\n\n107\n00:05:45.840 --> 00:05:49.972\nSometimes, it's easy to lose sight\nof the distances involved and\n\n108\n00:05:49.972 --> 00:05:51.977\nthe complexity of the network.\n\n109\n00:05:51.977 --> 00:05:52.968\nAnd right now,\n\n110\n00:05:52.968 --> 00:05:57.627\nI've got a single arrow here just\ngoing from the computer to the server.\n\n111\n00:05:57.627 --> 00:06:02.226\nBut in a reality, this is a whole just\nintertwined mix of cables and routers and\n\n112\n00:06:02.226 --> 00:06:04.400\nit's really amazing that it works.\n\n113\n00:06:04.400 --> 00:06:08.267\nBut sometimes it can take a while\nto go through all those channels or\n\n114\n00:06:08.267 --> 00:06:11.940\nsometimes it's just really fast,\nbecause it's a great day.\n\n115\n00:06:13.160 --> 00:06:17.860\n&gt;&gt; So Manny, you say here's some data and\nI'm getting some data back.\n\n116\n00:06:17.860 --> 00:06:22.141\nWhat can we kind of expect when\nwe're making these requests and\n\n117\n00:06:22.141 --> 00:06:23.930\ngetting a response back?\n\n118\n00:06:23.930 --> 00:06:25.559\nIs that something that\nyou can show us now or\n\n119\n00:06:25.559 --> 00:06:27.426\nis that something we should\nleave off til later?\n\n120\n00:06:27.426 --> 00:06:28.929\n&gt;&gt; I can definitely show,\n\n121\n00:06:28.929 --> 00:06:33.446\ngive you a kind of behind the scenes\nlook as to what that might look like.\n\n122\n00:06:33.446 --> 00:06:37.105\nSo say,\nwe go to microsoft.com in our browser.\n\n123\n00:06:37.105 --> 00:06:40.691\nIf I can spell it, Microsoft.\n\n124\n00:06:40.691 --> 00:06:41.226\nThere we go.\n\n125\n00:06:41.226 --> 00:06:41.726\nAnd.\n\n126\n00:06:44.287 --> 00:06:50.479\nRight here, I did a Google search and\nrequests went out.\n\n127\n00:06:50.479 --> 00:06:51.970\nNow, the requests come in.\n\n128\n00:06:51.970 --> 00:06:57.463\nI'm clicking on my result and then I\nbasically went out to the internet and\n\n129\n00:06:57.463 --> 00:07:01.804\nasked Microsoft's server,\nhey, give me some data about\n\n130\n00:07:01.804 --> 00:07:06.253\nthis versioning in Office documents and\nit knows all that.\n\n131\n00:07:06.253 --> 00:07:10.136\nBecause of this URL which we'll\ntalk about momentarily, but\n\n132\n00:07:10.136 --> 00:07:13.850\nthe browser is actually\ndoing a lot of work for us.\n\n133\n00:07:13.850 --> 00:07:18.432\nIt's taking the computer's response,\nthe server's response and\n\n134\n00:07:18.432 --> 00:07:22.225\ntranslating it into a document\nthat we can read via HTML.\n\n135\n00:07:22.225 --> 00:07:29.450\nSo HTML says, make this text big, bold and\nmake this text small and italicized.\n\n136\n00:07:29.450 --> 00:07:34.440\nAnd the browser does that for us and we\ndon't really need to think about it, but\n\n137\n00:07:34.440 --> 00:07:39.690\nthere are tools that enable us to take\na closer look as to what's going on\n\n138\n00:07:39.690 --> 00:07:43.112\nbehind the scenes and\nkind of pretend that we're computer.\n\n139\n00:07:43.112 --> 00:07:48.683\nAnd kinda get the response from\nthe server from a layer down.\n\n140\n00:07:48.683 --> 00:07:52.199\nSo up here,\nwe got a tool called postman and\n\n141\n00:07:52.199 --> 00:07:56.120\nit's a cool way of It looks\na lot like a browser.\n\n142\n00:07:56.120 --> 00:08:00.470\nYou can see I've got an address bar here,\nand this is extra.\n\n143\n00:08:00.470 --> 00:08:04.880\nYou don't usually see this in a browser,\nbut I can choose options here.\n\n144\n00:08:04.880 --> 00:08:06.260\nGet, post, put, patch.\n\n145\n00:08:06.260 --> 00:08:08.130\nWhat does all this stuff mean?\n\n146\n00:08:08.130 --> 00:08:15.150\nWhat we're seeing here is we're basically\nin a HTTP request recipe maker.\n\n147\n00:08:15.150 --> 00:08:20.950\nSo we can craft a request\nlike a browser would.\n\n148\n00:08:20.950 --> 00:08:25.250\nGoing back over to the browser,\nwhen I just type in\n\n149\n00:08:25.250 --> 00:08:29.590\nsomething like CNN.com or Microsoft.com.\n\n150\n00:08:29.590 --> 00:08:31.510\nOr Facebook or any other website.\n\n151\n00:08:33.110 --> 00:08:35.410\nThis is doing a lot of work for me.\n\n152\n00:08:35.410 --> 00:08:40.340\nIt's actually taking this name and\n\n153\n00:08:40.340 --> 00:08:46.290\nfiguring out what IP address it\ngoes to and it adds HTTP for\n\n154\n00:08:46.290 --> 00:08:50.340\nme by default and\nthen it does things like establish SSL.\n\n155\n00:08:50.340 --> 00:08:54.200\nSo, there's all this stuff happening that\nI kind of get for free with the browser.\n\n156\n00:08:55.490 --> 00:08:57.800\nSo, I'm going to hop back onto Postman.\n\n157\n00:08:57.800 --> 00:08:59.990\nOops, I opened the elephant\nprogram by mistake.\n\n158\n00:09:01.230 --> 00:09:05.274\nBut let's find Postman.\n\n159\n00:09:05.274 --> 00:09:07.810\nAnd-\n&gt;&gt; Now,\n\n160\n00:09:07.810 --> 00:09:12.490\nwhile this is loading, where could\none acquire Postman if one wanted to.\n\n161\n00:09:12.490 --> 00:09:15.760\nBut that looks kind of interesting,\nlet me play around with that.\n\n162\n00:09:15.760 --> 00:09:17.620\nLet's give it some illumination.\n\n163\n00:09:17.620 --> 00:09:23.000\nNow, full disclosure here,\nI used Postman as well, so I know.\n\n164\n00:09:23.000 --> 00:09:25.190\nBut just to make sure\nwe're on the same page.\n\n165\n00:09:25.190 --> 00:09:27.270\n&gt;&gt; Yeah, thanks for\nbringing that up, Justin.\n\n166\n00:09:27.270 --> 00:09:29.370\nPostman is a Chrome extension.\n\n167\n00:09:30.500 --> 00:09:35.060\nWhich basically is an app that\nyou can get and install in\n\n168\n00:09:35.060 --> 00:09:40.050\nGoogle Chrome that has all\nthis functionality built in.\n\n169\n00:09:40.050 --> 00:09:43.790\nAnd it's funny cuz it's actually\nconfusing me right now.\n\n170\n00:09:43.790 --> 00:09:47.750\nI'm trying to go over to Chrome, and\nit keeps wanting me to be in Postman.\n\n171\n00:09:47.750 --> 00:09:50.670\nSo you can see how tightly coupled\nthese two things are together.\n\n172\n00:09:50.670 --> 00:09:53.100\nAt least the way I've got it\nset up on my machine now.\n\n173\n00:09:53.100 --> 00:09:58.630\nBut you can go over to the Web Dev Store,\nChrome's Web Dev Store and\n\n174\n00:09:58.630 --> 00:10:01.420\nget this and play with this on your own.\n\n175\n00:10:01.420 --> 00:10:06.510\nIt's free, and it's great software for\na web developer, because this really helps\n\n176\n00:10:06.510 --> 00:10:11.370\nus debug things and\nsee things that the browser hides from us.\n\n177\n00:10:13.290 --> 00:10:19.230\nSo here in Postman I've got requests\nto microsoft.com and send it.\n\n178\n00:10:19.230 --> 00:10:24.300\nAnd you see that loading pause, that\nwas a server formulating it's response.\n\n179\n00:10:24.300 --> 00:10:30.450\nAnd then here I get back the request\na response to my request.\n\n180\n00:10:30.450 --> 00:10:36.020\nI wanted basically\nmicrsoft.com's home page and\n\n181\n00:10:36.020 --> 00:10:40.350\ninstead of seeing a nice picture\nof Microsoft's home page as\n\n182\n00:10:40.350 --> 00:10:43.130\nMicrosoft's web developers\nintended it to look.\n\n183\n00:10:43.130 --> 00:10:46.000\nI get a bunch of computer code.\n\n184\n00:10:46.000 --> 00:10:48.580\nSo what is all of this?\n\n185\n00:10:48.580 --> 00:10:52.630\nThis is the CSS, the JavaScript, the HTML.\n\n186\n00:10:52.630 --> 00:10:56.470\nEverything that the browser needs\nto be able to render that page\n\n187\n00:10:56.470 --> 00:10:58.650\nis included in this response.\n\n188\n00:10:58.650 --> 00:11:04.060\nAnd that's a good thing to keep in\nmind because HTTP is stateless,\n\n189\n00:11:04.060 --> 00:11:09.850\nmeaning that if I ask Microsoft.com\nsomething, it's gonna send me a response.\n\n190\n00:11:09.850 --> 00:11:13.000\nIt's gonna send me everything I\nneed to know in one response.\n\n191\n00:11:13.000 --> 00:11:14.760\nAnd, that's why I'm getting all this code.\n\n192\n00:11:15.760 --> 00:11:19.440\nBut, if we look at it closely\nwe can kinda start to see\n\n193\n00:11:19.440 --> 00:11:23.030\nsome of these things kinda\nstart to make sense.\n\n194\n00:11:23.030 --> 00:11:27.770\nNow Microsoft Edge, right here in this\nthere's a link here to an image and\n\n195\n00:11:27.770 --> 00:11:31.580\nit's got some words that I can kind\nof try to begin to understand if\n\n196\n00:11:31.580 --> 00:11:35.460\nI read this like HTML,\nwhich is what the browser is doing for us.\n\n197\n00:11:36.490 --> 00:11:41.100\nSo rails is,\nas we discussed in the previous episode.\n\n198\n00:11:41.100 --> 00:11:44.880\nRails is a backend that does\nthis kind of processing for us.\n\n199\n00:11:44.880 --> 00:11:50.360\nSo we'll see how this\nparadigm of request and\n\n200\n00:11:50.360 --> 00:11:52.910\nresponse plays out with\nthe rails architecture.\n\n201\n00:11:54.370 --> 00:11:56.460\n&gt;&gt; Okay.\nThat's starting to make sense to\n\n202\n00:11:56.460 --> 00:11:58.610\nme a little more now.\n\n203\n00:11:58.610 --> 00:12:00.420\nWe've seen this,\nwe get this response back.\n\n204\n00:12:00.420 --> 00:12:03.010\nThis is the data, and that's ultimately\nwhat's being rendered, that we see.\n\n205\n00:12:03.010 --> 00:12:08.580\nOur browser does some crazy magic in\nthat In that capacity, but are there\n\n206\n00:12:08.580 --> 00:12:12.866\nother things that we need to know about\nweb applications in the context of Rails?\n\n207\n00:12:12.866 --> 00:12:16.264\n&gt;&gt; Definitely, definitely.\n\n208\n00:12:16.264 --> 00:12:23.180\nRails follows a MVC architecture,\nwhich stands for model view controller.\n\n209\n00:12:23.180 --> 00:12:25.720\nAnd kind of like you've got a car.\n\n210\n00:12:25.720 --> 00:12:27.310\nYou know,\nsome cars have their engines in the front.\n\n211\n00:12:27.310 --> 00:12:28.780\nSome cars have their engines in the back.\n\n212\n00:12:28.780 --> 00:12:31.480\nThey're all cars, but\nthey're structured in different ways.\n\n213\n00:12:31.480 --> 00:12:34.960\nAnd the different web development\nframeworks that are out there,\n\n214\n00:12:34.960 --> 00:12:37.580\nthey kind of have\na similar thing going on.\n\n215\n00:12:37.580 --> 00:12:42.930\nWhere the business of getting\nthat processing done And\n\n216\n00:12:42.930 --> 00:12:47.530\nthere is a methodology and\na philosophy behind it.\n\n217\n00:12:47.530 --> 00:12:53.530\nSo what MVC is, it stands for\nModel View Controller,\n\n218\n00:12:53.530 --> 00:12:57.270\nand we've got three major\ncomponents that make up the app.\n\n219\n00:12:58.480 --> 00:13:01.850\nSo starting with model, what's a model?\n\n220\n00:13:01.850 --> 00:13:07.790\nIt may be you're thinking of building\nsomething out of legos, right?\n\n221\n00:13:07.790 --> 00:13:12.693\nit's a form, it has a form to it, and\nthat's kind of the way I think of models\n\n222\n00:13:12.693 --> 00:13:18.003\nis that it encapsulates something with\na form, and I mean that in physical sense.\n\n223\n00:13:18.003 --> 00:13:20.750\nNow we're talking about\ncomputers in the internet.\n\n224\n00:13:20.750 --> 00:13:23.700\nThere really aren't forums per se\nbecause it's just a stay-on screen.\n\n225\n00:13:23.700 --> 00:13:28.760\nBut if you think about like Facebook\nposts, or an Instagram picture or\n\n226\n00:13:28.760 --> 00:13:33.030\nyour eBay item, that represents\nsomething tangible in a sense.\n\n227\n00:13:33.030 --> 00:13:33.650\nIt's data.\n\n228\n00:13:33.650 --> 00:13:37.280\nIt has properties that can be saved.\n\n229\n00:13:37.280 --> 00:13:41.870\nAnd that's kind of as opposed to logic,\nright?\n\n230\n00:13:41.870 --> 00:13:45.720\nLogic has a form of its own, but it's\nnot formful in the way that an image is.\n\n231\n00:13:45.720 --> 00:13:49.980\nWhere an image just has stuff,\nit has almost like a map to it.\n\n232\n00:13:49.980 --> 00:13:55.580\nSo, models as a component of a web app,\nthat represents the data that web is for.\n\n233\n00:13:55.580 --> 00:13:59.440\nSo, for this series we're\ngonna be building a blog app.\n\n234\n00:13:59.440 --> 00:14:03.950\nAnd the models I will be working\nwith will handle our posts and\n\n235\n00:14:03.950 --> 00:14:07.490\nour comments because that's\nthe substance of our app.\n\n236\n00:14:09.020 --> 00:14:11.530\nSo, what's the V in NVC?\n\n237\n00:14:11.530 --> 00:14:14.850\nV stands for view and\nthat's what the user sees.\n\n238\n00:14:14.850 --> 00:14:22.200\nThat's the HTML and the CSS that make up\nthe website itself that you can rock with.\n\n239\n00:14:22.200 --> 00:14:23.600\nThe buttons you can click on.\n\n240\n00:14:23.600 --> 00:14:28.520\nThe four elements you can submit and\nthe things that you scroll.\n\n241\n00:14:28.520 --> 00:14:32.260\nNow, you might be wondering well\nwhat's the difference between\n\n242\n00:14:32.260 --> 00:14:37.190\nan image on Instagram is a model wouldn't\nit be the same as the view because\n\n243\n00:14:37.190 --> 00:14:39.540\nyou see a picture that\nsounds very visual to me.\n\n244\n00:14:41.030 --> 00:14:45.490\nAnd, the truth is that you could\nrender a picture many different ways.\n\n245\n00:14:45.490 --> 00:14:48.400\nSo, you could render a picture\nat its original resolution or\n\n246\n00:14:48.400 --> 00:14:49.890\nyou could render a picture as a thumbnail.\n\n247\n00:14:49.890 --> 00:14:52.920\nYou could put a filter on it so\nthat it's black and white.\n\n248\n00:14:52.920 --> 00:14:54.840\nAnd, all of these things\napply to the same data.\n\n249\n00:14:54.840 --> 00:14:58.580\nThe same picture is there but it can be\n\n250\n00:14:58.580 --> 00:15:03.950\nmanipulated into different forms and\nthat's the job of the view.\n\n251\n00:15:03.950 --> 00:15:07.870\nSo, you can kind of think\nof a view as sunglasses.\n\n252\n00:15:08.930 --> 00:15:12.780\nYou put on sunglasses and\nnow your view of the world has changed.\n\n253\n00:15:12.780 --> 00:15:13.930\nOr I wear eye glasses.\n\n254\n00:15:13.930 --> 00:15:16.450\nSo if I take off my eye glasses,\neverything's super blurry.\n\n255\n00:15:16.450 --> 00:15:17.720\nPut them on.\n\n256\n00:15:17.720 --> 00:15:22.210\nIt's a way of changing the way\nsomething is presented in code.\n\n257\n00:15:23.550 --> 00:15:25.420\nLastly, controllers.\n\n258\n00:15:25.420 --> 00:15:28.590\nSo that's the C and\nbasically in a nutshell,\n\n259\n00:15:28.590 --> 00:15:33.710\ncontrollers take data and views and it's\nthe logic that binds the two together.\n\n260\n00:15:36.040 --> 00:15:39.494\n&gt;&gt; And so Manny, I want to make sure,\nand again, just to reiterate,\n\n261\n00:15:39.494 --> 00:15:41.052\nI'm a big metaphors person.\n\n262\n00:15:41.052 --> 00:15:44.320\nSo here's what I'm thinking\nabout that model view conundrum.\n\n263\n00:15:44.320 --> 00:15:46.850\nBecause this is actually\na very difficult concept.\n\n264\n00:15:46.850 --> 00:15:49.000\nTo grok, so to speak.\n\n265\n00:15:49.000 --> 00:15:50.085\nRight?\n\n266\n00:15:50.085 --> 00:15:51.233\nAren't those the same thing?\n\n267\n00:15:51.233 --> 00:15:55.490\nCuz we tend to associate\nthe thing is what we see it is.\n\n268\n00:15:55.490 --> 00:16:00.180\nBut I almost think of the model as a more\nscientific measurement type thing.\n\n269\n00:16:00.180 --> 00:16:04.050\nAnd then the view is not\nnecessarily the measurements but\n\n270\n00:16:04.050 --> 00:16:09.760\njust an initial glance coming back to it,\nmore of a baking.\n\n271\n00:16:09.760 --> 00:16:10.920\nMaybe I'm a little hungry here.\n\n272\n00:16:10.920 --> 00:16:12.970\nI think of the model as,\n\n273\n00:16:12.970 --> 00:16:18.430\nis it two cups of sugar and we had\nthis dough It's what it's made up of.\n\n274\n00:16:18.430 --> 00:16:19.550\nNow this breaks down.\n\n275\n00:16:19.550 --> 00:16:21.420\nThis is just a way to think about it.\n\n276\n00:16:21.420 --> 00:16:23.980\nAnd a view would be whatever\nshape cookie cutter.\n\n277\n00:16:23.980 --> 00:16:26.530\nI could have multiple\nviews to the same dough.\n\n278\n00:16:26.530 --> 00:16:29.040\nSo, what is the controller\nin this context?\n\n279\n00:16:29.040 --> 00:16:30.850\nWell, the person making the cookies,\nright?\n\n280\n00:16:30.850 --> 00:16:33.890\nThey get to pick how things come together.\n\n281\n00:16:33.890 --> 00:16:36.110\nNow, that is not strictly correct.\n\n282\n00:16:36.110 --> 00:16:41.078\nManny's discussion, and representation\nthat is more strictly correct.\n\n283\n00:16:41.078 --> 00:16:45.968\nBut if you like, let me try to put\nthis in something that I can use\n\n284\n00:16:45.968 --> 00:16:50.972\nto reason about, I think maybe\nthat isn't a good alternative.\n\n285\n00:16:50.972 --> 00:16:53.775\nMake a lot of cookie dough, but\nI could have different shaped cookies, but\n\n286\n00:16:53.775 --> 00:16:55.122\nit's still the same cookie dough.\n\n287\n00:16:55.122 --> 00:16:57.902\nNow ultimately we'll see you later on,\n\n288\n00:16:57.902 --> 00:17:03.800\nI'm pretty sure things are gonna be\na little more complicated than that.\n\n289\n00:17:03.800 --> 00:17:05.230\n&gt;&gt; Justin I love that analogy,\n\n290\n00:17:05.230 --> 00:17:08.298\nI love cookies [LAUGH] now\nI've got them in my head.\n\n291\n00:17:08.298 --> 00:17:09.347\n&gt;&gt; [LAUGH]\n&gt;&gt; But,\n\n292\n00:17:09.347 --> 00:17:13.502\nyeah the fact that you think about cookie\ndough, cookie dough's gonna have flour,\n\n293\n00:17:13.502 --> 00:17:16.720\nit's gonna have sugar,\nit's gonna have butter.\n\n294\n00:17:16.720 --> 00:17:19.310\nMaybe you're eating a vegan cookie and\n\n295\n00:17:19.310 --> 00:17:24.410\nthere's different substitutions but, it's\ngonna have the basic form of a cookie.\n\n296\n00:17:26.630 --> 00:17:31.500\nAnd with that basic cookie batter, you can\nmake it look like anything you want, and\n\n297\n00:17:31.500 --> 00:17:36.390\nI thin that's a beautiful way of\ndescribing how forms and models differ.\n\n298\n00:17:41.520 --> 00:17:46.422\nI think I'll bring up an image here\nof just kinda how this looks like\n\n299\n00:17:46.422 --> 00:17:48.410\nin the real sense.\n\n300\n00:17:48.410 --> 00:17:51.630\nAnd you'll notice there's another box\nhere that we haven't talked about.\n\n301\n00:17:52.770 --> 00:17:55.760\nLet's go to a full screen with this,\nand zoom in a little bit,\n\n302\n00:17:55.760 --> 00:17:58.990\nand that's this router.\n\n303\n00:17:58.990 --> 00:18:02.610\nSo just kind of going over this diagram\n\n304\n00:18:04.600 --> 00:18:08.850\nfrom top level view,\nwe got our computer making a request and\n\n305\n00:18:08.850 --> 00:18:13.460\nit goes down to the router and\nthe way that you describe, Justin.\n\n306\n00:18:13.460 --> 00:18:15.415\nThe controller is the person\nmaking the cookies.\n\n307\n00:18:15.415 --> 00:18:19.565\nI think that's so great because,\nyou think about what does a person do?\n\n308\n00:18:19.565 --> 00:18:21.085\nThey make the batter, right?\n\n309\n00:18:21.085 --> 00:18:23.765\nThey build the model and\nthen they put the model in the oven and\n\n310\n00:18:23.765 --> 00:18:25.925\nthen they take it out and\nthen they take the cookie cutter and\n\n311\n00:18:25.925 --> 00:18:28.555\nactually apply it to the batter\nthat's been made and\n\n312\n00:18:28.555 --> 00:18:34.485\nthen take the finished cookies out\nof the oven, put sprinkles on them.\n\n313\n00:18:34.485 --> 00:18:39.280\nSo there's all these little tasks that\nflow logically as you are baking cookies.\n\n314\n00:18:39.280 --> 00:18:40.688\nAnd the controller does all of that.\n\n315\n00:18:40.688 --> 00:18:45.940\nSo there is no surprise here and\nthis diagram that you kind\n\n316\n00:18:45.940 --> 00:18:51.290\nof go into here into the router and we'll\ntalk more about routers in a minute but\n\n317\n00:18:51.290 --> 00:18:52.830\nwe kind of think of routers as dispatch.\n\n318\n00:18:53.880 --> 00:18:58.840\nA big website like Microsoft or\nReddit they've so much content.\n\n319\n00:18:58.840 --> 00:19:02.490\nThere's so\nmuch that it does under that one name.\n\n320\n00:19:02.490 --> 00:19:04.860\nSo you call a big company,\nwhat do you get?\n\n321\n00:19:04.860 --> 00:19:09.510\nYou get a, you know, someone asking you, a\ndirectory tree, who do you want to reach?\n\n322\n00:19:09.510 --> 00:19:10.200\nDo you want sales?\n\n323\n00:19:10.200 --> 00:19:11.026\nDo you want service?\n\n324\n00:19:11.026 --> 00:19:14.020\nDo you want to apply for a job?\n\n325\n00:19:14.020 --> 00:19:15.300\nAll kinds of stuff, and\n\n326\n00:19:15.300 --> 00:19:18.860\ndepending on which you pick then you\nget redirected to the right place.\n\n327\n00:19:18.860 --> 00:19:21.510\nSo that's what the router does.\n\n328\n00:19:21.510 --> 00:19:25.490\nAnd the router will go\ndown to the controller.\n\n329\n00:19:25.490 --> 00:19:29.910\nAnd this is written singularly here,\njust controller.\n\n330\n00:19:29.910 --> 00:19:33.110\nBut in Rails we'll see that\nwe'll write several controllers,\n\n331\n00:19:33.110 --> 00:19:36.400\neach doing different things and\nhaving different responsibilities.\n\n332\n00:19:36.400 --> 00:19:41.000\nBut, from the controller,\nwe can get things from the model and\n\n333\n00:19:41.000 --> 00:19:42.760\nmove data back and forth.\n\n334\n00:19:42.760 --> 00:19:47.270\nThe model can, if it wants to,\nget things in a database back and forth.\n\n335\n00:19:47.270 --> 00:19:51.580\nAnd then that gets send off to\nthe view where it gets rendered for\n\n336\n00:19:51.580 --> 00:19:52.350\nthe user to see.\n\n337\n00:19:54.950 --> 00:20:00.210\nSo we'll take a closer look at in\nRails how this all comes together.\n\n338\n00:20:00.210 --> 00:20:02.800\nBut, one thing I want to point out, and\n\n339\n00:20:02.800 --> 00:20:08.330\nthat's critical to understand is that\nthese all have very specific jobs.\n\n340\n00:20:08.330 --> 00:20:09.880\nSo the router only does routing.\n\n341\n00:20:09.880 --> 00:20:11.770\nThe controller is our logic.\n\n342\n00:20:11.770 --> 00:20:13.240\nIt only does a control.\n\n343\n00:20:13.240 --> 00:20:15.670\nModel is about the data.\n\n344\n00:20:15.670 --> 00:20:22.740\nAnd you don't see the model getting to\ndecide how the user sees something.\n\n345\n00:20:22.740 --> 00:20:26.820\nThis comes down to a principle\ncalled separation of concerns and\n\n346\n00:20:26.820 --> 00:20:31.960\nit's a big part of why Rails is what it is\nbecause it enforces up pretty strictly.\n\n347\n00:20:31.960 --> 00:20:35.890\nAnd the rational behind it is that\nyou can imagine you in your house,\n\n348\n00:20:35.890 --> 00:20:39.130\nimagine if you stored your\ncleaning products and\n\n349\n00:20:39.130 --> 00:20:43.560\nyour medicine and\nyour clothes all in your fridge.\n\n350\n00:20:43.560 --> 00:20:46.900\nIt would make some pretty\nconfusing meal time.\n\n351\n00:20:46.900 --> 00:20:48.922\nBecause you open your fridge and\nthere is all this stuff there and\n\n352\n00:20:48.922 --> 00:20:50.282\nit is kind of all kind\nof mixed up together.\n\n353\n00:20:50.282 --> 00:20:52.650\n&gt;&gt; This sock lasagna tastes horrible.\n\n354\n00:20:52.650 --> 00:20:54.778\nI don't even know why we put\nthose socks in that fridge.\n\n355\n00:20:54.778 --> 00:20:58.160\n&gt;&gt; Just wait til you try\nthe motor oil frosting.\n\n356\n00:20:58.160 --> 00:20:59.500\n&gt;&gt; That sounds delicious.\n\n357\n00:20:59.500 --> 00:21:00.360\nI can't wait.\n\n358\n00:21:00.360 --> 00:21:02.044\nI'm getting hungry just thinking about it.\n\n359\n00:21:02.044 --> 00:21:03.390\n&gt;&gt; Yum.\n\n360\n00:21:03.390 --> 00:21:08.400\nSo everything's got a job to do and it's\ngot to do only that job and only that job.\n\n361\n00:21:08.400 --> 00:21:12.970\nAnd we kind of see this principle in other\nengineered things like a car for example.\n\n362\n00:21:12.970 --> 00:21:14.970\nCars have braking systems.\n\n363\n00:21:14.970 --> 00:21:18.260\nThe braking systems, its job is to\nstop the car and that's all it does.\n\n364\n00:21:18.260 --> 00:21:21.470\nIt doesn't get to tell\nthe car how fast it goes.\n\n365\n00:21:21.470 --> 00:21:24.510\nThat's the job of the throttle and\n\n366\n00:21:24.510 --> 00:21:28.370\nall these other parts that control\nhow much, what the engine is doing.\n\n367\n00:21:28.370 --> 00:21:31.260\nAnd they're independent of\neach other in a certain sense.\n\n368\n00:21:31.260 --> 00:21:36.840\nAnd that's kind of the idea here, is that\nthese components they're separate but\n\n369\n00:21:36.840 --> 00:21:39.170\nthey work together to\nmake the app function.\n\n370\n00:21:41.750 --> 00:21:45.990\nWe can kind of put these two images,\nthese two graphics together.\n\n371\n00:21:47.610 --> 00:21:50.560\nSeeing this where the client\nis asking the server for\n\n372\n00:21:50.560 --> 00:21:55.730\nsome data and then what's really happening\nin this one area here, all of this stuff.\n\n373\n00:21:55.730 --> 00:21:59.790\nSo our process is getting routed,\n\n374\n00:21:59.790 --> 00:22:03.710\nit's going to the right controller,\ndata's coming up and it's being displayed.\n\n375\n00:22:05.200 --> 00:22:07.250\nSo I kind of want to show you\nthis on an actual website so\n\n376\n00:22:07.250 --> 00:22:11.750\nyou can kind of get a feel for what\nthis might look, given these concepts.\n\n377\n00:22:13.000 --> 00:22:18.890\nI love Reddit, I think it's really cool\nthat one web platform can target so\n\n378\n00:22:18.890 --> 00:22:20.620\nmany different things, and\n\n379\n00:22:20.620 --> 00:22:26.680\nAww is one of my favorite subReddit,\nand what do we see here?\n\n380\n00:22:26.680 --> 00:22:31.030\nWe see a page,\nthen its got a bunch of posts on it, and\n\n381\n00:22:31.030 --> 00:22:34.110\nthe what did I type in to get to this?\n\n382\n00:22:34.110 --> 00:22:36.780\nI typed in reddit.com to\ngo to Reddit servers.\n\n383\n00:22:36.780 --> 00:22:40.914\nAnd then we can see in the URL we've got\nslash r, which is a Reddit thing, and\n\n384\n00:22:40.914 --> 00:22:41.700\nthen slash r.\n\n385\n00:22:41.700 --> 00:22:44.640\nSo this URL is linked to this.\n\n386\n00:22:44.640 --> 00:22:50.380\nSo what's happening here is that\nthe router on Reddit's website\n\n387\n00:22:50.380 --> 00:22:51.520\nread my request.\n\n388\n00:22:51.520 --> 00:22:55.140\nBecause this is the only data that I\nreally sent to the server was just typing\n\n389\n00:22:55.140 --> 00:22:56.550\nthis URL in.\n\n390\n00:22:56.550 --> 00:22:59.132\nAnd it knows he wants to Aww subreddit.\n\n391\n00:22:59.132 --> 00:23:01.070\nAnd itsend me to the right place.\n\n392\n00:23:02.240 --> 00:23:07.080\nNow if I've got a specific\npost that I want to click on,\n\n393\n00:23:07.080 --> 00:23:12.040\nnow I'm not just wanting to have\nsomeone to click on one particular.\n\n394\n00:23:12.040 --> 00:23:16.050\nLet's see the comments for this here.\n\n395\n00:23:16.050 --> 00:23:17.469\nMy roommate owns the cat who lived.\n\n396\n00:23:19.160 --> 00:23:20.360\nIf I click on the comments,\n\n397\n00:23:20.360 --> 00:23:23.620\nI've made another request totally\nseparate from the first one.\n\n398\n00:23:23.620 --> 00:23:28.220\nAnd what I've received is basically\nthe comments for this post.\n\n399\n00:23:28.220 --> 00:23:32.560\nIf we look up here in the URL, thankfully,\nI didn't have to type this in myself.\n\n400\n00:23:32.560 --> 00:23:34.620\nBut we can kinda see what this is.\n\n401\n00:23:34.620 --> 00:23:39.041\nI've got the same basic starting\npoint that I began at but\n\n402\n00:23:39.041 --> 00:23:45.040\nthen there's more stuff comments slash\nthis number slash some other stuff.\n\n403\n00:23:45.040 --> 00:23:50.710\nBut we can kind of see how this is a more\nspecific request than the one before.\n\n404\n00:23:50.710 --> 00:23:53.620\nAnd a server gave it me based on\nthe information that I gave to it.\n\n405\n00:23:55.700 --> 00:23:57.750\nSo what do you think, Justin?\n\n406\n00:23:57.750 --> 00:24:00.680\n&gt;&gt; So Manny, I'm glad you hit home\nthat point, you showed us this, and\n\n407\n00:24:00.680 --> 00:24:01.710\nthis is something similar,\n\n408\n00:24:01.710 --> 00:24:03.890\nI think that we're going to build\nover the course of this series.\n\n409\n00:24:03.890 --> 00:24:04.920\nMaybe not exactly this.\n\n410\n00:24:04.920 --> 00:24:06.770\nWe'll have our own little flavor on it.\n\n411\n00:24:06.770 --> 00:24:09.110\nBut this is something that is amiss.\n\n412\n00:24:09.110 --> 00:24:12.450\nIn our previous diagrams we're\nsending data, during the request.\n\n413\n00:24:12.450 --> 00:24:14.272\nAnd people are like, what is data?\n\n414\n00:24:14.272 --> 00:24:18.130\nI can actually get you to zoom in on\nthat URL a little bit so we can and\n\n415\n00:24:18.130 --> 00:24:19.260\nmove those apart.\n\n416\n00:24:20.310 --> 00:24:23.650\nSo that aww /r/ that's a subreddit.\n\n417\n00:24:23.650 --> 00:24:26.150\nAww that is the subreddit title.\n\n418\n00:24:26.150 --> 00:24:27.470\nComments what are you looking for.\n\n419\n00:24:27.470 --> 00:24:29.160\nIt's comments on the what?\n\n420\n00:24:29.160 --> 00:24:31.380\nOn this particular subreddit.\n\n421\n00:24:31.380 --> 00:24:34.060\nI guess it's called an article or a post.\n\n422\n00:24:34.060 --> 00:24:36.300\nNot entirely sure what\nthe terminology is there.\n\n423\n00:24:36.300 --> 00:24:40.790\nAnd not necessarily, I end up on\nReddit by accident a lot of the times.\n\n424\n00:24:40.790 --> 00:24:44.540\nBut that is the data that is\nbeing sent over for, number one,\n\n425\n00:24:44.540 --> 00:24:45.810\nthe router to figure out.\n\n426\n00:24:45.810 --> 00:24:50.500\nBut also the controller mechanisms to go,\nokay, I have this information, and\n\n427\n00:24:50.500 --> 00:24:51.520\nit came through this route.\n\n428\n00:24:51.520 --> 00:24:56.900\nAnd now I know what I need to go find\nin order to represent the view and\n\n429\n00:24:56.900 --> 00:24:58.130\nsend it back to you.\n\n430\n00:24:58.130 --> 00:25:01.360\nSo you've definitely hit home that\npoint that it isn't always kinda behind\n\n431\n00:25:01.360 --> 00:25:02.580\nthe scenes magic.\n\n432\n00:25:02.580 --> 00:25:03.580\nSo thank you so much.\n\n433\n00:25:03.580 --> 00:25:09.270\nNow this makes me pretty excited because\nI can see some of the things that I know,\n\n434\n00:25:09.270 --> 00:25:11.910\nmaybe Rails has a different flavor,\na different perspective.\n\n435\n00:25:11.910 --> 00:25:15.390\nWhich will make me kind of\nadvance as a developer.\n\n436\n00:25:15.390 --> 00:25:16.890\nAnd I'm ready for it.\n\n437\n00:25:16.890 --> 00:25:19.570\nBut it does look like we're running\nlow on time for this episode, so\n\n438\n00:25:19.570 --> 00:25:23.970\nwe're gonna have to wait and come back for\nmore Intro to Ruby on Rails.\n\n439\n00:25:23.970 --> 00:25:25.960\nBut for now, we're gonna go ahead and\nwrap this one up.\n\n440\n00:25:25.960 --> 00:25:29.263\nSo, signing off for DevPro TV,\nI've been your host Justin Neeson.\n\n441\n00:25:29.263 --> 00:25:30.440\n&gt;&gt; I'm Manny Rodriguez.\n\n442\n00:25:30.440 --> 00:25:31.217\n&gt;&gt; And we'll see you next time.\n\n443\n00:25:31.217 --> 00:25:39.830\n[MUSIC]\n\n",
          "vimeoId": "238586253"
        },
        {
          "description": "In this episode, Justin and Manny start exploring the View layer of a Rails application. Manny demonstrates the creation of a Rails application and explains how all of the components fit together in order to present information on the page.",
          "length": "1999",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-introtorubyonrails/techskills-introtorubyonrails-4-1-1-intro_to_rails_views-101417-PGM.00_33_08_07.Still001.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-introtorubyonrails/techskills-introtorubyonrails-4-1-1-intro_to_rails_views-101417-PGM.00_33_08_07.Still001-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-introtorubyonrails/techskills-introtorubyonrails-4-1-1-intro_to_rails_views-101417-PGM.00_33_08_07.Still001-sm.jpg",
          "title": "Intro to Rails Views",
          "transcript": "WEBVTT\n\n1\n00:00:00.005 --> 00:00:03.050\n[SOUND]\n\n2\n00:00:03.050 --> 00:00:12.656\n[MUSIC]\n\n3\n00:00:12.656 --> 00:00:16.261\nGreetings everyone and welcome to\nanother exciting episode of DEVPRO.TV.\n\n4\n00:00:16.261 --> 00:00:19.988\nI'm your host Justin Dennison and we're\nback on our Ruby on Rails adventure In\n\n5\n00:00:19.988 --> 00:00:22.590\nparticular, we're gonna be\nlooking at rails views.\n\n6\n00:00:22.590 --> 00:00:26.140\nNow if you haven't seen previous\nepisodes definitely go check those out.\n\n7\n00:00:26.140 --> 00:00:29.200\nCuz we've talked about some of\nthe rails architecture, and\n\n8\n00:00:29.200 --> 00:00:31.280\nwell we're gonna start\ndiving in in this episode.\n\n9\n00:00:31.280 --> 00:00:35.040\nWell, when I say we, I'm actually\ngonna stand on the side lines and\n\n10\n00:00:35.040 --> 00:00:38.750\nlet our special guest Manny Rodriguez\nhandle all that fun times.\n\n11\n00:00:38.750 --> 00:00:39.560\nHow are you doing today Manny?\n\n12\n00:00:39.560 --> 00:00:41.460\n&gt;&gt; I'm doing great,\nJustin, how are you doing?\n\n13\n00:00:41.460 --> 00:00:42.540\n&gt;&gt; I am doing fantastic.\n\n14\n00:00:42.540 --> 00:00:45.310\nSo, what are we ultimately going to like,\n\n15\n00:00:45.310 --> 00:00:48.990\nwhat are we going to explore\nwithin Rell's views?\n\n16\n00:00:48.990 --> 00:00:55.540\n&gt;&gt; So, last episode, we talked about\nwebsites, web apps, their structure.\n\n17\n00:00:55.540 --> 00:00:58.940\nAnd we did that in kind\nof a theory kind of way.\n\n18\n00:00:58.940 --> 00:01:01.020\nYou know, just seeing some examples.\n\n19\n00:01:01.020 --> 00:01:05.802\nSo this time, we're gonna see it\nhow those concepts apply in rails.\n\n20\n00:01:05.802 --> 00:01:09.004\nGet a feel for where they are,\nwhat they look like,\n\n21\n00:01:09.004 --> 00:01:13.848\nhow they are implemented in rails,\nnot into super intense degree today, but\n\n22\n00:01:13.848 --> 00:01:16.182\njust kind of seeing where they live.\n\n23\n00:01:16.182 --> 00:01:20.908\nAnd then we're gonna kind of make\nchanges to some rails views because we\n\n24\n00:01:20.908 --> 00:01:23.522\nwanna see something improve, right?\n\n25\n00:01:23.522 --> 00:01:28.323\nWe wanna feel like we can make changes and\nmake things happen and\n\n26\n00:01:28.323 --> 00:01:32.230\nthings are a really great\nway of getting into that.\n\n27\n00:01:33.470 --> 00:01:34.560\n&gt;&gt; Alright Manny, so\n\n28\n00:01:34.560 --> 00:01:38.820\nwhat are our first steps to really\nget our hands dirty with this?\n\n29\n00:01:38.820 --> 00:01:43.290\n&gt;&gt; All right, so here on my screen,\nI'm in a terminal And\n\n30\n00:01:43.290 --> 00:01:46.890\nI've got a new rails project.\n\n31\n00:01:46.890 --> 00:01:51.980\nAnd, I meant to type blog but\nI missed a g and we've got below.\n\n32\n00:01:51.980 --> 00:01:54.030\nSo, that's the name of our project.\n\n33\n00:01:54.030 --> 00:01:57.850\nBut it's a basic empty rails project.\n\n34\n00:01:57.850 --> 00:02:02.400\nSo, we can run a rails server and\n\n35\n00:02:03.530 --> 00:02:07.985\nopen this up in the browser, we kind\nof see what we've got going in here.\n\n36\n00:02:10.690 --> 00:02:15.387\nSo, just like we saw in previous episodes,\nwe got a server running, and\n\n37\n00:02:15.387 --> 00:02:17.320\nwe can make requests to this.\n\n38\n00:02:18.360 --> 00:02:20.910\nSo, what's actually going on here?\n\n39\n00:02:20.910 --> 00:02:23.270\nWhat does this actually look like?\n\n40\n00:02:23.270 --> 00:02:26.350\nLet's take a quick tour of this and\nsee what we've got.\n\n41\n00:02:26.350 --> 00:02:30.980\nSo, if you're familiar with the Unix\ncommand line, you'll know that by typing\n\n42\n00:02:30.980 --> 00:02:34.768\nin the Ls command, it's just listing out\nthe files that are here in this folder.\n\n43\n00:02:34.768 --> 00:02:38.410\nAnd I'm gonna use that to navigate,\nbut you don't have to use that,\n\n44\n00:02:38.410 --> 00:02:40.720\nyou don't have to do it that way.\n\n45\n00:02:40.720 --> 00:02:46.330\nWe can also just navigate\nwith regular OSX Finder\n\n46\n00:02:46.330 --> 00:02:49.290\nbecause in the end, these are just\nfiles that are on our computer.\n\n47\n00:02:50.550 --> 00:02:54.530\nAnd in fact, that might be a nice way\nof looking at it, since we've got this\n\n48\n00:02:54.530 --> 00:02:58.130\ngraphical view of everything, and\nit's even alphabetized things for us.\n\n49\n00:02:58.130 --> 00:03:00.250\n&gt;&gt; Now Manny,\nbefore we get too far deep into that,\n\n50\n00:03:00.250 --> 00:03:02.450\nI just wanna make sure\nwe're all on the same page.\n\n51\n00:03:02.450 --> 00:03:05.490\nIn order to get this,\nyou just, Rail's new, and\n\n52\n00:03:05.490 --> 00:03:09.700\nthen they built that project structure and\nwe're all up to the same point, correct?\n\n53\n00:03:09.700 --> 00:03:10.558\n&gt;&gt; Yeah, that's right.\n\n54\n00:03:10.558 --> 00:03:14.590\nThat's right, just, we've installed rails,\nwe've got everything we need for it.\n\n55\n00:03:14.590 --> 00:03:18.420\nAnd then, in our rails command,\nrails.new will create a new project.\n\n56\n00:03:18.420 --> 00:03:20.550\nDon't wanna run that here,\nbecause I'm inside of a project.\n\n57\n00:03:20.550 --> 00:03:24.190\nAnd really, all rails does is it It just\nkind of just spits out this template for\n\n58\n00:03:24.190 --> 00:03:25.690\nus, all these files.\n\n59\n00:03:25.690 --> 00:03:28.170\nAnd as we'll see, that's a kind\nof a common theme with Rails,\n\n60\n00:03:28.170 --> 00:03:32.490\nis you'll execute a command,\nhave it create a template for you,\n\n61\n00:03:32.490 --> 00:03:34.570\nand then we'll go in and\nmodify that template.\n\n62\n00:03:36.118 --> 00:03:38.620\nSo let's see what we've got in here.\n\n63\n00:03:38.620 --> 00:03:43.170\nWe've got an app directory, and\nwe talked about models, views, and\n\n64\n00:03:43.170 --> 00:03:45.790\ncontrollers before in\nthe previous episode.\n\n65\n00:03:45.790 --> 00:03:50.460\nAnd right away, we can see we've\ngot those things right here.\n\n66\n00:03:50.460 --> 00:03:55.850\nWe've got a models, a views directory,\nmodels and controllers.\n\n67\n00:03:55.850 --> 00:04:00.040\nSo, this is where our source files for\neach of those things live.\n\n68\n00:04:00.040 --> 00:04:02.590\nRails does a really nice way of\njust splitting everything up for\n\n69\n00:04:02.590 --> 00:04:06.490\nus and having a nice cozy home for\nall our components.\n\n70\n00:04:06.490 --> 00:04:09.420\nSo there's some extra stuff in here too.\n\n71\n00:04:09.420 --> 00:04:10.370\nSo assets.\n\n72\n00:04:12.210 --> 00:04:18.170\nThis is simply our client side JavaScript\nand CSS files and things like that.\n\n73\n00:04:18.170 --> 00:04:21.680\nAnd what I mean by client\nside is that stuff in here,\n\n74\n00:04:21.680 --> 00:04:25.730\nthese are static files meaning that\nthere's no logic attached to them.\n\n75\n00:04:25.730 --> 00:04:29.990\nBut they are part of our app, so\nwe build a really sweet blog and\n\n76\n00:04:29.990 --> 00:04:32.840\nwe've got some beautiful styling on it,\n\n77\n00:04:32.840 --> 00:04:36.530\nthat CSS that we create along\nwith any images that we upload.\n\n78\n00:04:36.530 --> 00:04:37.360\nMaybe we've got a logo.\n\n79\n00:04:37.360 --> 00:04:41.772\nAll that stuff will live\nhere in this assets folder.\n\n80\n00:04:41.772 --> 00:04:44.990\nSo, channels are something that\nwas added recently in Rails.\n\n81\n00:04:44.990 --> 00:04:47.678\nThis is for web sockets features.\n\n82\n00:04:47.678 --> 00:04:52.429\nSo, it's not strictly an MVC component but\nwe'll see this paradigm in Rails as well,\n\n83\n00:04:52.429 --> 00:04:56.334\nwhere whenever there's a big set of\nfeatures that has a lot of stuff to go\n\n84\n00:04:56.334 --> 00:04:59.410\nwith it,\nRails will create a place for that.\n\n85\n00:04:59.410 --> 00:05:02.120\nSo, if you don't know what web\nsockets are, don't worry about it.\n\n86\n00:05:02.120 --> 00:05:06.560\nIf you do know, it's good to know\nthat it's built right in, and\n\n87\n00:05:06.560 --> 00:05:07.950\nthat's where that lives.\n\n88\n00:05:09.470 --> 00:05:12.870\nWith our controllers,\nwe already saw this, and there's one\n\n89\n00:05:12.870 --> 00:05:16.180\ncontroller here that's kinda created by\ndefault called application controller.\n\n90\n00:05:16.180 --> 00:05:20.340\nYou can kinda think of that as\nthe master overarching controller that\n\n91\n00:05:20.340 --> 00:05:23.940\nruns the others, so\nwe'll get to that in a little bit later.\n\n92\n00:05:25.370 --> 00:05:28.640\nAnd just kinda going down this list,\nwe've got jobs for background tasks and\n\n93\n00:05:28.640 --> 00:05:31.280\nmailers for emails that we wanna send.\n\n94\n00:05:31.280 --> 00:05:34.680\nSo already we can see that Rails is kind\nof thought through some of these things\n\n95\n00:05:34.680 --> 00:05:40.440\nthat we'll probably use if we're building\na web app and has created a place for us.\n\n96\n00:05:41.850 --> 00:05:44.700\nAnd the rest of\nthe Rails Project directory,\n\n97\n00:05:44.700 --> 00:05:47.540\nmost of our work as Rails Developers\nis gonna be in the app folder.\n\n98\n00:05:47.540 --> 00:05:51.590\nBut there are a couple of interesting\nthings in these other folders.\n\n99\n00:05:51.590 --> 00:05:55.450\nSo config for example,\nthis is where our router lives.\n\n100\n00:05:55.450 --> 00:05:59.070\nThis Routes.RV file which we'll\nplay with in just a moment.\n\n101\n00:05:59.070 --> 00:06:03.590\nIt's got all the code to tell it,\nbased on the URL coming in,\n\n102\n00:06:03.590 --> 00:06:05.170\nwhich controller to run.\n\n103\n00:06:05.170 --> 00:06:09.450\nAnd some other things like what database\nit connects to things like that.\n\n104\n00:06:09.450 --> 00:06:11.810\nAlso, if you install Gems,\n\n105\n00:06:11.810 --> 00:06:16.276\none of the Rails conventions is that all\nthe configuration files for any Gem that\n\n106\n00:06:16.276 --> 00:06:21.728\nyou download is going to be somewhere\ninside of config, which makes sense.\n\n107\n00:06:21.728 --> 00:06:24.790\nWe don;t wanna look for\nconfiguration files in with our models or\n\n108\n00:06:24.790 --> 00:06:26.190\nsome other place like that.\n\n109\n00:06:26.190 --> 00:06:27.460\nIt's all in one place.\n\n110\n00:06:27.460 --> 00:06:29.450\nAnd everyone follows that convention.\n\n111\n00:06:31.480 --> 00:06:32.870\nSo there's some other stuff here,\n\n112\n00:06:32.870 --> 00:06:37.010\nbut that's pretty much an overview\nof what this looks like.\n\n113\n00:06:37.010 --> 00:06:39.040\nSo where we're gonna go next is,\n\n114\n00:06:39.040 --> 00:06:43.770\nwe've got this page here,\nlet's go to something different.\n\n115\n00:06:43.770 --> 00:06:44.960\nYeah, we know we're on Rails.\n\n116\n00:06:44.960 --> 00:06:46.310\nLet's build some cars.\n\n117\n00:06:49.280 --> 00:06:54.123\nSo to start off with that, Rails\n\n118\n00:06:54.123 --> 00:06:58.830\nhas several subcommands and\none of the major ones is generate.\n\n119\n00:06:59.880 --> 00:07:05.010\nAs I mentioned before, the paradigm in\nRails of having it make templates for us.\n\n120\n00:07:05.010 --> 00:07:10.640\nNow that we have an app,\nwe can generate subparts of that app.\n\n121\n00:07:10.640 --> 00:07:12.510\nSo, we don't wanna generate\na whole other app, but\n\n122\n00:07:12.510 --> 00:07:16.170\nwe do wanna generate a controller,\na basic controller.\n\n123\n00:07:16.170 --> 00:07:21.110\nSo, again, controllers,\nthey move logic around, back and\n\n124\n00:07:21.110 --> 00:07:24.390\nforth or they are the logic of the app.\n\n125\n00:07:24.390 --> 00:07:27.680\nSo, we'll need one to play with views.\n\n126\n00:07:29.570 --> 00:07:31.000\nSo we'll run rails generate.\n\n127\n00:07:33.110 --> 00:07:36.210\nAnd if we just type in rails generate,\njust by itself,\n\n128\n00:07:36.210 --> 00:07:40.650\nIt will give us help context\nas to what can be generated.\n\n129\n00:07:40.650 --> 00:07:44.770\nAnd in this series,\nwe'll see what some of this things are.\n\n130\n00:07:44.770 --> 00:07:47.570\nSo as you can see, we've got generators\nfor controllers which we're gonna use.\n\n131\n00:07:47.570 --> 00:07:49.250\nWe've got generators for generators.\n\n132\n00:07:49.250 --> 00:07:49.990\nThat's pretty better.\n\n133\n00:07:51.010 --> 00:07:53.610\nMailers, models, and other things.\n\n134\n00:07:53.610 --> 00:07:57.769\n&gt;&gt; Hey Manny, let me jump in here real\nquick before you get too much further.\n\n135\n00:07:57.769 --> 00:08:01.233\nNumber one, can we scoot that terminal\nwindow over to the left just a little bit\n\n136\n00:08:01.233 --> 00:08:03.771\nso we could see those commands\nin all of their full glory.\n\n137\n00:08:03.771 --> 00:08:08.026\nAlso And number two, I thought we were\ntalking about views in this episode, but\n\n138\n00:08:08.026 --> 00:08:10.710\nyou're talking about\ngenerating controllers.\n\n139\n00:08:10.710 --> 00:08:13.900\nIs that because controllers and\nviews kinda go hand-in-hand?\n\n140\n00:08:13.900 --> 00:08:15.820\n&gt;&gt; Yeah, that's a great catch Justin.\n\n141\n00:08:15.820 --> 00:08:21.800\nWe are focusing on views, but we need\na controller in order to display a view.\n\n142\n00:08:21.800 --> 00:08:23.480\nSo they are kind of coupled in that sense.\n\n143\n00:08:23.480 --> 00:08:28.310\nKind of like, you've got a car and\nyour wheel has to attach to your axle.\n\n144\n00:08:28.310 --> 00:08:30.530\nSo we're not gonna do anything\nwith that axle at this point,\n\n145\n00:08:30.530 --> 00:08:33.070\nit's just gonna be there just\nto hold our view up, but\n\n146\n00:08:33.070 --> 00:08:36.500\nwe do need to create a controller\nto display our view.\n\n147\n00:08:38.340 --> 00:08:42.310\nSo going back down here to our command,\nrails generate,\n\n148\n00:08:42.310 --> 00:08:48.520\nwe're gonna generate our controller,\nand we're gonna give it a name.\n\n149\n00:08:48.520 --> 00:08:51.950\nGenerally there's a common pattern in\nRails, and we'll see this shortly,\n\n150\n00:08:51.950 --> 00:08:56.560\nwhere the controller, the model, and\nthe view are all about the same thing.\n\n151\n00:08:56.560 --> 00:08:59.820\nSo we saw Reddit comments before.\n\n152\n00:08:59.820 --> 00:09:02.020\nWe'll add comments to\nour blog down the road.\n\n153\n00:09:02.020 --> 00:09:06.500\nSo a controller name comments goes\nreally well with a model named comment,\n\n154\n00:09:06.500 --> 00:09:09.510\nand a set of views that\nare under a comments folder.\n\n155\n00:09:09.510 --> 00:09:12.610\nBut in this case,\nwe can really call it anything we want,\n\n156\n00:09:12.610 --> 00:09:16.180\nand I'm gonna choose to call it hello,\nbecause we're just kinda getting Rails,\n\n157\n00:09:16.180 --> 00:09:21.310\ngetting our feet wet, and getting it\nto do things for us and talk to it.\n\n158\n00:09:21.310 --> 00:09:24.190\nSo our controller is called hello, and\n\n159\n00:09:24.190 --> 00:09:26.656\nI've added this index\nhere to the end of that.\n\n160\n00:09:26.656 --> 00:09:31.731\nSo controllers have actions,\nand action is really\n\n161\n00:09:31.731 --> 00:09:37.620\na funny kind of Railsy way of\nsaying a method on a class.\n\n162\n00:09:37.620 --> 00:09:43.213\nSo this is a particular task that this\nhello controller knows how to do,\n\n163\n00:09:43.213 --> 00:09:45.820\nit knows how to do index.\n\n164\n00:09:45.820 --> 00:09:49.516\nYou might be wondering,\nwhy not just have it say hello?\n\n165\n00:09:49.516 --> 00:09:55.960\nYou might have a hello controller that has\na hello action, and that's totally valid.\n\n166\n00:09:55.960 --> 00:09:59.300\nI chose the name index,\nbecause in web development\n\n167\n00:09:59.300 --> 00:10:03.720\nindex is a really just common trope for\na page that displays content.\n\n168\n00:10:03.720 --> 00:10:08.470\nEspecially lots of content, and since\nthis isn't really specifically defined\n\n169\n00:10:08.470 --> 00:10:12.770\nto do a specific task, this is naturally\nwhat I'm choosing to call this.\n\n170\n00:10:14.120 --> 00:10:16.620\nSo I'm gonna go ahead and\nrun this command and\n\n171\n00:10:16.620 --> 00:10:18.280\nwe'll see we get a whole lot\nof stuff that's happened.\n\n172\n00:10:19.680 --> 00:10:24.160\nJust like the Rails new command,\nthis is creating files for us and\n\n173\n00:10:24.160 --> 00:10:29.300\nfilling out our output stuff, so we can\nsee here that we got this create and\n\n174\n00:10:29.300 --> 00:10:31.330\nit's creating this file\nin our controllers.\n\n175\n00:10:31.330 --> 00:10:36.440\nIt's called hello controllers,\nwhich is what we initially\n\n176\n00:10:36.440 --> 00:10:41.980\ncalled it to do and it's giving us\nall this extra stuff too like route.\n\n177\n00:10:41.980 --> 00:10:45.790\nIt's creating a route for us so\nthat we can access this controller.\n\n178\n00:10:45.790 --> 00:10:50.420\nAnd then it's creating view templates for\nus, as well, and then further down here,\n\n179\n00:10:50.420 --> 00:10:55.560\nit's creating a test file, so\nif we wanted to test the logic of our\n\n180\n00:10:55.560 --> 00:10:59.560\ncontroller using test driven development,\nthat's already set up for us, as well.\n\n181\n00:10:59.560 --> 00:11:04.820\nAnd then here, we've got some helpers to\nput in code that isn't directly related to\n\n182\n00:11:04.820 --> 00:11:09.370\nour logic but is useful, and then any Java\nScripts and style sheets that we want.\n\n183\n00:11:09.370 --> 00:11:12.900\nSo these are lot of files,\nwe're just a simple thing and\n\n184\n00:11:12.900 --> 00:11:15.260\nthe good news is,\nis that we don't need all of these, and\n\n185\n00:11:15.260 --> 00:11:20.160\nif we choose to, we can simply delete some\nof the stuff like we can delete this.\n\n186\n00:11:20.160 --> 00:11:23.300\nWe can delete the helper if we choose,\nwe can delete the test.\n\n187\n00:11:23.300 --> 00:11:26.889\nThis is all just here because\nyou're writing a production code,\n\n188\n00:11:26.889 --> 00:11:31.140\nyou're generally going to use all of\nthese things, but it's not required.\n\n189\n00:11:31.140 --> 00:11:35.251\nAnd I'd like to point out one other\nthing about Rails generate, is that,\n\n190\n00:11:35.251 --> 00:11:39.680\nthat was kind of a big action that it did,\nit kind of created quite a few files.\n\n191\n00:11:39.680 --> 00:11:41.810\nAnd sometimes,\nwhile we're playing with this,\n\n192\n00:11:41.810 --> 00:11:47.070\nwe may not want to commit to changing\nour project in such a dramatic way,\n\n193\n00:11:47.070 --> 00:11:51.610\nmaybe we're not sure what name we want to\ngive it and we want to see what result.\n\n194\n00:11:51.610 --> 00:11:55.800\nLucky rails generate has a pretend flag,\nso if I have\n\n195\n00:11:55.800 --> 00:12:01.400\nthe same command as before but to the end\nof it I've added dash dash pretend.\n\n196\n00:12:01.400 --> 00:12:02.580\nWhat it does?\n\n197\n00:12:02.580 --> 00:12:06.892\nAnd I'm gonna give this a different name\nbecause we've already generated hello, but\n\n198\n00:12:06.892 --> 00:12:10.748\nlet's say we're playing with,\nmaybe putting in a goodbye controller too.\n\n199\n00:12:10.748 --> 00:12:11.955\nWhen I type that in,\n\n200\n00:12:11.955 --> 00:12:16.075\nit gives me the same exact output as\nit would if it actually did it, but\n\n201\n00:12:16.075 --> 00:12:21.620\nit didn't actually make any changes, which\nis great to kind of get our bearings.\n\n202\n00:12:21.620 --> 00:12:23.160\n&gt;&gt; Now, Manny, let me interject here.\n\n203\n00:12:23.160 --> 00:12:25.690\nI notice that both of the times\nyou use capital letters there,\n\n204\n00:12:25.690 --> 00:12:30.340\nbut then files that were created\nhad all lower case letters.\n\n205\n00:12:30.340 --> 00:12:33.310\nWould it break if I used a lower\ncase letter like goodbye or\n\n206\n00:12:33.310 --> 00:12:36.250\nhello in the generation of the controller?\n\n207\n00:12:36.250 --> 00:12:39.340\nOr are you just enforcing some of\nthe conventions that are recommended by\n\n208\n00:12:39.340 --> 00:12:40.550\nthe rails community?\n\n209\n00:12:40.550 --> 00:12:41.230\n&gt;&gt; Great question.\n\n210\n00:12:42.600 --> 00:12:47.180\nHonestly, for me, I'm just so used to\ntyping in controller names with a capital\n\n211\n00:12:47.180 --> 00:12:51.450\nletter, it's kind of engrained in my\nfingertips, but you don't need to do that.\n\n212\n00:12:51.450 --> 00:12:55.060\nIf we actually run this again,\nusing pretend, and\n\n213\n00:12:55.060 --> 00:13:00.460\nreplace capital G with a lowercase g, you\ncan see we've got the same exact files.\n\n214\n00:13:00.460 --> 00:13:03.760\nThey have exactly the same names,\nand Rails is,\n\n215\n00:13:03.760 --> 00:13:09.600\none of the places where it's not\ncase-sensitive is here in the controller,\n\n216\n00:13:09.600 --> 00:13:14.280\nin that Rails generate\ninterface on the command line.\n\n217\n00:13:14.280 --> 00:13:17.790\n&gt;&gt; But maybe that's a good way to\ndelineate like, because you said this was\n\n218\n00:13:17.790 --> 00:13:23.340\na class, a class has class\nnaming conventions, right?\n\n219\n00:13:23.340 --> 00:13:24.530\n&gt;&gt; Right.\n&gt;&gt; And it shows there,\n\n220\n00:13:24.530 --> 00:13:27.890\nmaybe that's a good way,\non the command line, to say, all right, so\n\n221\n00:13:27.890 --> 00:13:31.390\nin the controller generator,\nthe first argument is the class.\n\n222\n00:13:31.390 --> 00:13:35.290\nUppercase helps me know that the remaining\narguments are methods on that class.\n\n223\n00:13:35.290 --> 00:13:35.950\nDo I have that right?\n\n224\n00:13:35.950 --> 00:13:37.530\n&gt;&gt; Yeah, that's absolutely right.\n\n225\n00:13:37.530 --> 00:13:40.780\nAnd that's kind of a great way of\nreinforcing that convention for\n\n226\n00:13:40.780 --> 00:13:45.150\nyourself as you're typing it, kind of\nchecking yourself, as you're typing in\n\n227\n00:13:45.150 --> 00:13:50.770\nthese commands, because these rails\ngenerate commands can get really long and\n\n228\n00:13:50.770 --> 00:13:54.510\nsometimes its hard to\njust see it visually.\n\n229\n00:13:54.510 --> 00:13:58.590\nSo structuring it that way so\nthat your class names are capital,\n\n230\n00:13:58.590 --> 00:14:02.970\nthen your index,\nyour action names are lowercase.\n\n231\n00:14:02.970 --> 00:14:07.840\nIt just kind of helps build those things\nin your mind, reinforce that in your mind.\n\n232\n00:14:07.840 --> 00:14:08.680\n&gt;&gt; Well I'm kind of interested,\n\n233\n00:14:08.680 --> 00:14:11.710\nafter all these things are generated,\nwhat are in some of these files?\n\n234\n00:14:11.710 --> 00:14:16.060\nWe've seen what they kind of output, but\nmaybe right now the only one we really\n\n235\n00:14:16.060 --> 00:14:20.370\ncare about is the actual controller file,\nlike hellocontroller.rb.\n\n236\n00:14:20.370 --> 00:14:21.620\nWhat's exactly inside there?\n\n237\n00:14:21.620 --> 00:14:23.170\n&gt;&gt; Yeah, lets go take a look.\n\n238\n00:14:23.170 --> 00:14:26.880\nSo I'm gonna open up my text editor, and\nI'm choosing to do this from the command\n\n239\n00:14:26.880 --> 00:14:30.850\nline using sublime text which is my\npersonal favorite, but if you got VI or\n\n240\n00:14:30.850 --> 00:14:34.000\nif you're using any other text editor,\n\n241\n00:14:34.000 --> 00:14:37.410\nyou can also just simply\nbrowse to it with finder.\n\n242\n00:14:37.410 --> 00:14:38.120\nJust like we're doing.\n\n243\n00:14:39.280 --> 00:14:41.590\nJust like we show the project\ndirectory before.\n\n244\n00:14:42.860 --> 00:14:43.500\nSo I've run that,\n\n245\n00:14:43.500 --> 00:14:48.020\nthis is coming up, I'm just gonna size\nthis down a little bit to fair screen.\n\n246\n00:14:49.620 --> 00:14:53.120\nAnd it's like the bottom that's cut off,\nso\n\n247\n00:14:53.120 --> 00:14:58.830\nI'm gonna bring this a little bit here,\nhere we go, that looks good.\n\n248\n00:14:58.830 --> 00:15:01.000\nSo let's open up a little controller.\n\n249\n00:15:02.940 --> 00:15:06.510\nSo you just saw some\ntext appear on my screen.\n\n250\n00:15:06.510 --> 00:15:09.960\nAnd really all I'm doing is, I'm\nsearching the whole project directory for\n\n251\n00:15:09.960 --> 00:15:14.890\nparticular files, because working in\nroils it can get tedious sometimes\n\n252\n00:15:14.890 --> 00:15:19.360\nto use this file open, and\nthen go to app and then controllers,\n\n253\n00:15:19.360 --> 00:15:22.860\nand then hello controller, although it's\ncertainly a valid way of doing things.\n\n254\n00:15:23.886 --> 00:15:27.490\nSublime text has this nice search feature\nbuilt in that will help me search all\n\n255\n00:15:27.490 --> 00:15:29.650\nthe files that are in this project.\n\n256\n00:15:29.650 --> 00:15:32.590\nSo opening it up, what do we see?\n\n257\n00:15:32.590 --> 00:15:35.430\nWe see a class definition,\nhello controller, and in Ruby,\n\n258\n00:15:35.430 --> 00:15:38.710\nthis is the way Ruby\ndoes class inheritance.\n\n259\n00:15:38.710 --> 00:15:41.754\nSo hello controller is a type\nof application controller, and\n\n260\n00:15:41.754 --> 00:15:45.558\nthis is where all the framework code\nlives that we don't have to think about,\n\n261\n00:15:45.558 --> 00:15:47.032\ncuz Rails just gives it to us.\n\n262\n00:15:47.032 --> 00:15:51.380\nAnd here's our method that we defined,\nthe generator took that and\n\n263\n00:15:51.380 --> 00:15:56.795\nautomatically defined a method for it in\nour controller, and because this inherits\n\n264\n00:15:56.795 --> 00:16:02.150\nfrom application controller, we don't\nreally need to add anything else to this.\n\n265\n00:16:02.150 --> 00:16:06.784\nThere's Some call it magic,\nrails magic is a pretty common term for\n\n266\n00:16:06.784 --> 00:16:09.910\nthis rails just doing things for you.\n\n267\n00:16:09.910 --> 00:16:15.740\nAnd one of the things here that's\nbeing done for us is that the view\n\n268\n00:16:15.740 --> 00:16:20.010\nindex is automatically being called\neven though there's no code in here.\n\n269\n00:16:20.010 --> 00:16:23.180\nSo we don't need to add anything to this.\n\n270\n00:16:23.180 --> 00:16:27.140\nIt's defined, we have an index action.\n\n271\n00:16:27.140 --> 00:16:29.770\nAnd because of that,\nwe can just go straight to the view and\n\n272\n00:16:29.770 --> 00:16:31.630\nstart changing things out.\n\n273\n00:16:31.630 --> 00:16:32.580\nSo let's actually do that.\n\n274\n00:16:32.580 --> 00:16:36.414\nWe created this controller and we created\na view, but what does it look like?\n\n275\n00:16:36.414 --> 00:16:37.232\nAll right?\n\n276\n00:16:37.232 --> 00:16:39.361\nNow, if I.\n\n277\n00:16:39.361 --> 00:16:42.430\nMy server isn't running, so\nI'm gonna hop on over and do that.\n\n278\n00:16:42.430 --> 00:16:47.530\nAnd one thing I like to do is have\nmultiple tabs, maybe in my terminal,\n\n279\n00:16:47.530 --> 00:16:54.000\none with the server, and one with open so\nI that I can type another commands and\n\n280\n00:16:54.000 --> 00:16:58.360\nfew things on the command line, cuz it's\nuseful to have this open and running.\n\n281\n00:17:00.930 --> 00:17:04.230\nSo now that my server's running,\nI can go over here and load it.\n\n282\n00:17:04.230 --> 00:17:09.740\nLook at the same thing as before but,\nif we jump back over here and\n\n283\n00:17:09.740 --> 00:17:12.578\nlook at this command,\nwe can see this route was created.\n\n284\n00:17:12.578 --> 00:17:15.930\nWell, not that one cuz\nwe didn't make it but\n\n285\n00:17:15.930 --> 00:17:19.644\nup here,\nthis hello index route was created, so\n\n286\n00:17:19.644 --> 00:17:26.060\nwe can actually type in /hello/index,\nand we get something different.\n\n287\n00:17:26.060 --> 00:17:29.900\nThis is a template that Rails created for\nus for this view.\n\n288\n00:17:31.460 --> 00:17:36.311\nAnd if we actually go and\nopen up that file here in at views,\n\n289\n00:17:36.311 --> 00:17:41.361\nhello/Index@html.erb and\na little bit about this name,\n\n290\n00:17:41.361 --> 00:17:47.718\ncuz we've seen index@html files if\nyou've done web development before.\n\n291\n00:17:47.718 --> 00:17:50.830\nWhat's this .erb after the end of it?\n\n292\n00:17:50.830 --> 00:17:56.440\nIt's basically a language called embedded\nRuby where we can embed HTML and\n\n293\n00:17:56.440 --> 00:17:58.580\nRuby code in the same file.\n\n294\n00:17:58.580 --> 00:18:01.870\nAnd the Ruby gets executed and\n\n295\n00:18:01.870 --> 00:18:06.879\nthen put it in line with\nHTML that we've got.\n\n296\n00:18:06.879 --> 00:18:09.855\nSo here, we can see we've got\nan H1 tag in a paragraph and\n\n297\n00:18:09.855 --> 00:18:12.550\nit matches exactly what\nwe see on the browser.\n\n298\n00:18:12.550 --> 00:18:16.360\nAnd we can just type in HTML here,\nif we'd like.\n\n299\n00:18:20.630 --> 00:18:24.688\nJust like that I've added h2 tag,\nsave this file up,\n\n300\n00:18:24.688 --> 00:18:27.970\nrefreshed, and I've got a connection.\n\n301\n00:18:27.970 --> 00:18:31.434\nI can see how I can start customizing\nthis view to do what I want.\n\n302\n00:18:33.825 --> 00:18:39.915\nNow, of course, we don't need Rails to\ntype HTML, and have it to be shown to us.\n\n303\n00:18:39.915 --> 00:18:43.105\nThere's way simpler tools if all\nwe wanted to do was display static\n\n304\n00:18:43.105 --> 00:18:44.845\ncontent like this.\n\n305\n00:18:44.845 --> 00:18:47.445\nSo let's play with ERB a little bit,\nand see what that looks like.\n\n306\n00:18:49.757 --> 00:18:56.940\nSo in ERB, there's two tags that are\ninterwoven with the HTML that we can use.\n\n307\n00:18:58.370 --> 00:19:01.490\nThis first tag, this ampersand, I'm sorry.\n\n308\n00:19:01.490 --> 00:19:04.420\nWhat do you call that thing?\n\n309\n00:19:04.420 --> 00:19:05.100\n&gt;&gt; Less than.\n\n310\n00:19:05.100 --> 00:19:05.620\n&gt;&gt; Less than sign.\n\n311\n00:19:05.620 --> 00:19:07.640\nCool, it kinda looks like a Pacman to me.\n\n312\n00:19:07.640 --> 00:19:10.010\nIt's just chomping down this line.\n\n313\n00:19:10.010 --> 00:19:13.380\nBut you notice that this one has\nan equals sign, this one doesn't.\n\n314\n00:19:13.380 --> 00:19:15.620\nAnd the difference between these two.\n\n315\n00:19:15.620 --> 00:19:19.310\nIt will become clear once I\nwrite a little bit of code.\n\n316\n00:19:19.310 --> 00:19:22.790\nSo I am just going to declare a variable,\nyou know put a valuable in it and\n\n317\n00:19:22.790 --> 00:19:25.748\nthen use that and\nthen print out the result.\n\n318\n00:19:25.748 --> 00:19:30.310\nSo, I'm gonna change the order because\nI want to declare my variable first.\n\n319\n00:19:30.310 --> 00:19:31.990\nAnd that's done.\n\n320\n00:19:31.990 --> 00:19:35.810\nAny kind of code where\nyou have control flow or\n\n321\n00:19:35.810 --> 00:19:41.240\nyou have variable assignment or basically\ncode that is controlling things but\n\n322\n00:19:41.240 --> 00:19:45.830\nisn't outputting anything, you do with\nthe tag that doesn't have the equal sign.\n\n323\n00:19:47.240 --> 00:19:51.592\nSo in Ruby I can just set a variable a,\nset it equal to 1, and\n\n324\n00:19:51.592 --> 00:19:55.700\nthen let's say here I wanna\nadd this number to a 100.\n\n325\n00:19:55.700 --> 00:20:00.098\nSo I actually want to display that value.\n\n326\n00:20:00.098 --> 00:20:07.110\nSo, in Ruby, the way I would do that is\nlike this where I've got my variable name.\n\n327\n00:20:07.110 --> 00:20:08.720\nI'm adding 100 to it.\n\n328\n00:20:08.720 --> 00:20:14.260\nAnd it's just, this will get executed,\nand then whatever's inside of this\n\n329\n00:20:14.260 --> 00:20:19.820\ncode block is gonna get replaced, and\nthen injected into my HTML behind it.\n\n330\n00:20:21.550 --> 00:20:24.900\nSo I'm gonna save that and\nrun it, and see what we get.\n\n331\n00:20:24.900 --> 00:20:29.190\nAnd you can see here we've got 101 and\nnone of that other stuff showed up.\n\n332\n00:20:30.440 --> 00:20:35.330\nAnd what's more, if I look at\nthe source of this page, down here,\n\n333\n00:20:35.330 --> 00:20:36.110\nthis doesn't show up.\n\n334\n00:20:36.110 --> 00:20:37.970\nAll of that code that I wrote in Ruby,\n\n335\n00:20:37.970 --> 00:20:42.910\nnone of that showed up in the source\nof this document here, so\n\n336\n00:20:42.910 --> 00:20:47.380\nthis is again executed and\nthen the client never sees this.\n\n337\n00:20:47.380 --> 00:20:49.670\nThis is server side processing.\n\n338\n00:20:52.770 --> 00:20:58.630\nSo besides just simply doing variables\nlike this We can also write loops.\n\n339\n00:21:00.350 --> 00:21:03.280\nSo say that we wanted\nto count to a hundred,\n\n340\n00:21:03.280 --> 00:21:05.270\ninstead of just adding that number.\n\n341\n00:21:07.220 --> 00:21:09.840\nAnd this is the ruby way of doing it.\n\n342\n00:21:09.840 --> 00:21:12.210\nI forgot up to is\nthe method I want to use.\n\n343\n00:21:12.210 --> 00:21:15.040\nSo one up to a hundred, and then end ruby.\n\n344\n00:21:15.040 --> 00:21:20.080\nAnd by the way I know some of you\nmay not be familiar with Ruby but\n\n345\n00:21:20.080 --> 00:21:21.940\nare familiar with other languages.\n\n346\n00:21:21.940 --> 00:21:26.620\nThis is simply just going through\na way of looping through every item.\n\n347\n00:21:26.620 --> 00:21:30.790\nAnd this variable is gonna be available\nto me in the loop that I'm writing.\n\n348\n00:21:30.790 --> 00:21:32.950\nSo there's similar constructs\nin other languages.\n\n349\n00:21:34.700 --> 00:21:37.710\nAnd you'll pick it up as you\nsee more Ruby being written.\n\n350\n00:21:39.820 --> 00:21:44.580\nSo, right here, say I want to\noutput the value of that variable.\n\n351\n00:21:44.580 --> 00:21:47.920\nSo, I can simple use it.\n\n352\n00:21:47.920 --> 00:21:48.480\nJust like that.\n\n353\n00:21:51.370 --> 00:21:53.720\nIt need tpo exists within this block, and\n\n354\n00:21:53.720 --> 00:21:56.390\nI'm gonna have to close\nout that loop there.\n\n355\n00:21:56.390 --> 00:22:01.470\nSo, we still need to put all of our\nRuby control flow in the right places,\n\n356\n00:22:01.470 --> 00:22:04.610\nbut we can just add in things.\n\n357\n00:22:06.920 --> 00:22:09.880\nAnd what I mean by add in things\nis we can put HTML in here.\n\n358\n00:22:11.680 --> 00:22:17.370\nSo, let's say that I want the number to\nbe printed inside of an h2 tag like this.\n\n359\n00:22:20.810 --> 00:22:24.830\nSo there's only one h2 tag here\nin my code that I've written, but\n\n360\n00:22:24.830 --> 00:22:28.390\nbecause it's inside of a loop and\nit's gonna be executed 100 times,\n\n361\n00:22:28.390 --> 00:22:31.900\nit's gonna generate 100 h2 tags\nwith a number inside of it.\n\n362\n00:22:33.100 --> 00:22:35.080\nAnd let's run this and\nsee if it actually works.\n\n363\n00:22:41.160 --> 00:22:42.270\nAnd I forgot to save my file.\n\n364\n00:22:43.800 --> 00:22:46.330\nAlways have a heart-stopping moment when\nyou come in to do what you expect, and\n\n365\n00:22:46.330 --> 00:22:46.920\nthen you look at it.\n\n366\n00:22:46.920 --> 00:22:48.250\nYou're like I just didn't save my file.\n\n367\n00:22:48.250 --> 00:22:51.050\n&gt;&gt; I can't tell you how many\ntimes I've been searching for\n\n368\n00:22:51.050 --> 00:22:53.113\nI'm pretty sure this is right.\n\n369\n00:22:53.113 --> 00:22:54.840\nCommand.\n\n370\n00:22:54.840 --> 00:22:58.830\nsorry or whatever your save command\nwhatever depending on your editor and\n\n371\n00:22:58.830 --> 00:23:00.180\nkeyboard shortcuts.\n\n372\n00:23:00.180 --> 00:23:03.130\nAnd then you like, run it and just spend\n20 minutes try to find a bug that didn't\n\n373\n00:23:03.130 --> 00:23:05.570\nactually exist because you forgot to save.\n\n374\n00:23:05.570 --> 00:23:07.230\nSo, that's a key point.\n\n375\n00:23:07.230 --> 00:23:10.060\nRemember to save any changes that\nyou've made before you get to to\n\n376\n00:23:10.060 --> 00:23:10.720\ntry to test them.\n\n377\n00:23:10.720 --> 00:23:13.230\n&gt;&gt; Totally, and also save for\nthe moment, it's like okay,\n\n378\n00:23:13.230 --> 00:23:15.160\nmy code is actually working,\nI just forgot to save it.\n\n379\n00:23:17.450 --> 00:23:19.820\nSo, here we go,\nit's exactly what we expected.\n\n380\n00:23:19.820 --> 00:23:25.020\nAnd there's a hundred eight h2s in here,\nnone of this code appears but we can also\n\n381\n00:23:25.020 --> 00:23:30.750\nadd text that's static in here, and\nit will get repeated that many times.\n\n382\n00:23:30.750 --> 00:23:35.120\nSo we saw a Reddit page before, and\n\n383\n00:23:35.120 --> 00:23:40.240\nsaw how we clicked on a comment link, and\nit showed up a bunch of comments, right?\n\n384\n00:23:40.240 --> 00:23:43.170\nSo that's kind of the logic that\nsomething like that would work with.\n\n385\n00:23:43.170 --> 00:23:47.569\nWe would have a loop going through\nall the comments, and then, here,\n\n386\n00:23:47.569 --> 00:23:52.806\ninside of that block It's simply showing\nthe output of that comment as it appears.\n\n387\n00:23:52.806 --> 00:23:54.837\n&gt;&gt; So Manny it seems like so\n\n388\n00:23:54.837 --> 00:24:00.333\nwe have this do end we have this\nblock of code one up to hundred do.\n\n389\n00:24:00.333 --> 00:24:03.360\nHere's your local variable for\nthis code block.\n\n390\n00:24:03.360 --> 00:24:04.456\nAnd then an end.\n\n391\n00:24:04.456 --> 00:24:07.480\nBut those are almost like open and\nclose tags for\n\n392\n00:24:07.480 --> 00:24:10.920\nthat code block in this\nembedded Ruby language.\n\n393\n00:24:10.920 --> 00:24:15.200\nAnd then anything inside of that, if it's\na loot, we will execute that many times\n\n394\n00:24:15.200 --> 00:24:21.670\nwhether it be HTML tags or other\nembedded Ruby expressions and whatnot.\n\n395\n00:24:21.670 --> 00:24:23.155\n&gt;&gt; Yeah.\n&gt;&gt; I got that right?\n\n396\n00:24:23.155 --> 00:24:24.165\n&gt;&gt; Yeah, absolutely.\n\n397\n00:24:24.165 --> 00:24:24.815\n&gt;&gt; Okay.\n\n398\n00:24:24.815 --> 00:24:28.905\n&gt;&gt; Yeah, and what's more is that we\ncan also put control flow in here.\n\n399\n00:24:28.905 --> 00:24:34.335\nSo we use these ERB tags without\nthe equal sign to do a loop.\n\n400\n00:24:34.335 --> 00:24:36.720\nBut we can also have an if statement here.\n\n401\n00:24:36.720 --> 00:24:40.740\nSo we can check to see if our number is,\nsay, even or odd.\n\n402\n00:24:40.740 --> 00:24:45.150\nMaybe we'll put in this if I modulo two.\n\n403\n00:24:45.150 --> 00:24:47.430\nAnd you know the modulo operator,\n\n404\n00:24:47.430 --> 00:24:52.590\nit simply returns the remainder of\ndividing whatever this number is and this.\n\n405\n00:24:52.590 --> 00:24:57.450\nSo if this is two, 2 divided into 2 is 1,\nthere's no remainder.\n\n406\n00:24:57.450 --> 00:24:59.050\nBut if it's three,\nthe remainder's gonna be one.\n\n407\n00:24:59.050 --> 00:25:04.400\nThat's a good way we can test to see\nif a number is even or odd that way.\n\n408\n00:25:04.400 --> 00:25:11.290\nSo I'm just gonna write out the,\nThe basic block of my if statement.\n\n409\n00:25:13.270 --> 00:25:16.450\nAnd that's always helpful to do when\nyou're writing ERB because honestly,\n\n410\n00:25:16.450 --> 00:25:21.380\nit can get a little confusing when\nyou've got HTML and logic mixed up here.\n\n411\n00:25:21.380 --> 00:25:26.760\nAnd this is a good place to point out,\nseparations of concerns is important.\n\n412\n00:25:26.760 --> 00:25:30.180\nYou can write anything\nyou want in this view.\n\n413\n00:25:30.180 --> 00:25:31.590\nIt's code.\n\n414\n00:25:31.590 --> 00:25:33.920\nBut you wouldn't want to write\n\n415\n00:25:33.920 --> 00:25:38.610\ncode that changes your models because this\nis only about presenting information.\n\n416\n00:25:38.610 --> 00:25:39.890\nSo it's always good to keep that in mind.\n\n417\n00:25:41.870 --> 00:25:47.630\nSo let's say if it's even, actually that\nwill be odd, we want to print out odd.\n\n418\n00:25:47.630 --> 00:25:50.820\nOtherwise, even.\n\n419\n00:25:56.103 --> 00:25:58.480\nSo I've saved that out.\n\n420\n00:25:58.480 --> 00:26:03.820\nAnd we're gonna have either odd or\neven first, because this code is still\n\n421\n00:26:03.820 --> 00:26:08.040\nprocedural code, and it's gonna run this\nfirst, and put that result into the HTML.\n\n422\n00:26:08.040 --> 00:26:11.570\nAnd then it's gonna output the h2\ntag with our number in it.\n\n423\n00:26:14.370 --> 00:26:16.000\nAnd there we go, odd even, odd even.\n\n424\n00:26:16.000 --> 00:26:18.700\nAnd that goes all the way down to 100.\n\n425\n00:26:18.700 --> 00:26:24.440\nSo, looking at this,\nyou kinda get a feel for views and\n\n426\n00:26:24.440 --> 00:26:29.240\nhow we can write code in them to\nchange the way that things look.\n\n427\n00:26:29.240 --> 00:26:31.350\nLet's say that,\nsince we're talking about a view,\n\n428\n00:26:31.350 --> 00:26:32.930\nwe're talking about presentation, right?\n\n429\n00:26:32.930 --> 00:26:35.750\nLet's say that what we\nreally wanted to do is\n\n430\n00:26:35.750 --> 00:26:38.710\nchange the way the number\nlooks if it's odd or even.\n\n431\n00:26:38.710 --> 00:26:39.590\nHow would we do that?\n\n432\n00:26:39.590 --> 00:26:44.350\nWe're working with HTML, and\nwe're working with Ruby at the same time.\n\n433\n00:26:44.350 --> 00:26:46.870\nAnd let's see kinda how\nthose might come together.\n\n434\n00:26:48.030 --> 00:26:51.090\nSo I'm actually going to bring back\nsome of the stuff I removed here.\n\n435\n00:26:51.090 --> 00:26:56.530\nAnd let's say that I want to\nnumber to be printed with\n\n436\n00:26:56.530 --> 00:27:00.900\nan h2 tag if it's even,\nbut an h6 tag if it's odd.\n\n437\n00:27:00.900 --> 00:27:02.760\nWe want it to be really small.\n\n438\n00:27:02.760 --> 00:27:06.640\nSo we want the even number to stand out.\n\n439\n00:27:07.790 --> 00:27:12.170\nSo to do that, instead of\nactually outputting odd and even,\n\n440\n00:27:12.170 --> 00:27:13.280\nwe're gonna output the number.\n\n441\n00:27:14.430 --> 00:27:22.410\nBut if it's an odd number, we're going\nto change the tag that it's printed in.\n\n442\n00:27:22.410 --> 00:27:23.180\nThat's an h6 there.\n\n443\n00:27:24.600 --> 00:27:28.210\nAnd then, otherwise, if it's even,\nwe'll leave it as an h2.\n\n444\n00:27:28.210 --> 00:27:32.880\nSo this may look a little strange, because\nwe've got this code almost duplicated, but\n\n445\n00:27:32.880 --> 00:27:35.480\nit actually follows our logic exactly.\n\n446\n00:27:35.480 --> 00:27:37.280\nAnd because this is an if else statement,\n\n447\n00:27:37.280 --> 00:27:40.360\nevery time this loop runs,\nonly one of these will be executed.\n\n448\n00:27:40.360 --> 00:27:42.330\nAnd that's the result that\nwould get put in our code.\n\n449\n00:27:45.119 --> 00:27:49.480\nSo when I run this, we can see the result,\nnow we've got a page from one to 100.\n\n450\n00:27:49.480 --> 00:27:53.990\nAnd our even numbers are bolded and\nlarger than our odd numbers,\n\n451\n00:27:53.990 --> 00:27:55.800\nwhich is exactly what we wanted.\n\n452\n00:27:55.800 --> 00:27:56.920\nWe can do this with CSS and\n\n453\n00:27:56.920 --> 00:28:01.770\nother things as we move along but,\nthat's the basic idea of Rails views.\n\n454\n00:28:01.770 --> 00:28:03.099\n&gt;&gt; All right, that makes a lot of sense.\n\n455\n00:28:03.099 --> 00:28:04.610\nI do have one quick question.\n\n456\n00:28:04.610 --> 00:28:09.930\nSince we generated the controller that\nprovides the index method that effectively\n\n457\n00:28:09.930 --> 00:28:11.490\npresents this view, right?\n\n458\n00:28:11.490 --> 00:28:15.360\nLike a hello hashtag index, and maybe\nI'm getting a little ahead of myself, so\n\n459\n00:28:15.360 --> 00:28:16.710\ndefinitely let me know.\n\n460\n00:28:16.710 --> 00:28:21.920\nIf I wanted to go back and\nadd an additional kind of route to that,\n\n461\n00:28:22.950 --> 00:28:26.290\ncould I run the generator again,\nor could I do that manually, or\n\n462\n00:28:26.290 --> 00:28:29.290\ndoes it not ultimately matter as long\nas I'm following this conventions?\n\n463\n00:28:29.290 --> 00:28:30.220\n&gt;&gt; That's a great question.\n\n464\n00:28:31.220 --> 00:28:32.980\nIf we run the generator again,\n\n465\n00:28:32.980 --> 00:28:36.190\nit's actually gonna tell us\nthat that file already exists.\n\n466\n00:28:36.190 --> 00:28:38.710\nSo let's go ahead and\ntry that out and see what happens.\n\n467\n00:28:40.120 --> 00:28:44.930\nAnd you can see here, I've ran it and\nI get this different color show up.\n\n468\n00:28:44.930 --> 00:28:45.790\nIt's not all green anymore.\n\n469\n00:28:45.790 --> 00:28:47.410\nNow I've got blue here, identical.\n\n470\n00:28:49.240 --> 00:28:50.540\nExist.\n\n471\n00:28:50.540 --> 00:28:52.020\nConflict.\n\n472\n00:28:52.020 --> 00:28:56.820\nSo basically, real generator,\nit's intended to be run for\n\n473\n00:28:56.820 --> 00:29:00.890\nthe first time to create\na set of resources that we're\n\n474\n00:29:00.890 --> 00:29:04.200\ngoing to use whether it's a controller or\na model and it gives us a template.\n\n475\n00:29:04.200 --> 00:29:06.820\nFrom that point on, we want to\nmodify that template ourselves, and\n\n476\n00:29:06.820 --> 00:29:09.690\nwe're going to be working in the files\nthat have already been created.\n\n477\n00:29:09.690 --> 00:29:14.730\nAnd thankfully, rails generate is helpful\nhere because it lets us know that whoa,\n\n478\n00:29:14.730 --> 00:29:19.650\nthis is not, are you sure you want me\nto create this file again from scratch?\n\n479\n00:29:19.650 --> 00:29:22.650\nThat could potentially be bad if,\nfor example,\n\n480\n00:29:22.650 --> 00:29:25.415\nit just overrode our changes and\nwe just wrote a bunch of code in here.\n\n481\n00:29:25.415 --> 00:29:30.400\nSo if we wanted to say,\n\n482\n00:29:30.400 --> 00:29:34.070\nadd another method to our HelloController,\nand\n\n483\n00:29:34.070 --> 00:29:38.862\nmaybe have a goodbye action, we could\nsimply write that in here into the class.\n\n484\n00:29:38.862 --> 00:29:43.210\nJust like we've done,\njust like the rail generator has done for\n\n485\n00:29:43.210 --> 00:29:45.260\nus, we can kinda follow that pattern.\n\n486\n00:29:45.260 --> 00:29:48.500\nAnd then we didn't show the routes file,\n\n487\n00:29:48.500 --> 00:29:52.600\nbut it added this get\nhello/index route for us.\n\n488\n00:29:52.600 --> 00:29:58.457\nSo what this means is that if a request\ncomes into a URL that matches this pattern\n\n489\n00:29:58.457 --> 00:30:05.730\nhello/index, it's gonna redirect it to\nthe HelloController and the index route.\n\n490\n00:30:05.730 --> 00:30:07.810\nNow, sorry, the index action.\n\n491\n00:30:09.080 --> 00:30:11.130\nNow that may seem like pretty magical.\n\n492\n00:30:11.130 --> 00:30:14.590\nThis is a very short line of code and\nthere's all that meaning built into it.\n\n493\n00:30:14.590 --> 00:30:18.710\nAnd this kind of where the power\nof rails conventions comes in.\n\n494\n00:30:18.710 --> 00:30:23.240\nBecause it assumes that a route is\ngonna match the controller name.\n\n495\n00:30:24.630 --> 00:30:29.700\nSorry, this part of the route is\ngonna match an actual controller.\n\n496\n00:30:29.700 --> 00:30:33.820\nAnd then this part of the URL is gonna\nmatch an action on that controller.\n\n497\n00:30:33.820 --> 00:30:37.830\nSo what happens if we just try\nsomething that doesn't exist?\n\n498\n00:30:37.830 --> 00:30:40.980\nLike an index with two x's,\nor something like that?\n\n499\n00:30:42.230 --> 00:30:47.500\nSo we get an error saying,\nwell I couldn't find that route.\n\n500\n00:30:47.500 --> 00:30:48.600\nOf course, I didn't define it.\n\n501\n00:30:48.600 --> 00:30:50.520\nSo I can define it here.\n\n502\n00:30:52.560 --> 00:30:55.190\nSo, now it exists.\n\n503\n00:30:55.190 --> 00:31:00.848\nAnd now if I try to access it You can see\nthat I get a different error saying that,\n\n504\n00:31:00.848 --> 00:31:03.230\nokay, I found HelloController.\n\n505\n00:31:03.230 --> 00:31:05.510\nBut this action doesn't exist.\n\n506\n00:31:05.510 --> 00:31:11.310\nAnd as you can expect,\nif we try changing the name of\n\n507\n00:31:11.310 --> 00:31:16.290\nthe controller from hello, which exists,\nto ello, which definitely does not exist\n\n508\n00:31:17.770 --> 00:31:22.350\nand we refresh this page.\n\n509\n00:31:22.350 --> 00:31:26.040\nAnd actually we tried that\non one already didn't we?\n\n510\n00:31:26.040 --> 00:31:30.050\n&gt;&gt; I think we would have to change\nthe route in that case, right?\n\n511\n00:31:30.050 --> 00:31:30.960\nIn our browser.\n\n512\n00:31:30.960 --> 00:31:33.860\n&gt;&gt; Yeah exactly, yeah, good catch.\n\n513\n00:31:33.860 --> 00:31:38.310\nSo, if we simply change this, now if\ntaking that other route, it doesn't exist.\n\n514\n00:31:39.690 --> 00:31:41.620\nActually so, we want the route to exist.\n\n515\n00:31:41.620 --> 00:31:44.390\nWe want it in both places, and\nthe controller doesn't exist.\n\n516\n00:31:44.390 --> 00:31:46.420\nSo all these parts\nare intermingling with each other.\n\n517\n00:31:46.420 --> 00:31:49.070\nBut now we can see here,\nit doesn't know what ElloController is.\n\n518\n00:31:49.070 --> 00:31:51.060\nIt automatically added\nthat to the end of it.\n\n519\n00:31:51.060 --> 00:31:52.870\n&gt;&gt; Okay, so I think I have it now.\n\n520\n00:31:52.870 --> 00:31:56.140\nBut the generator is to help us scaffold\nwhat we know at the current time, but\n\n521\n00:31:56.140 --> 00:32:00.870\nif we need to come back and add things,\nwe might have to do that manually.\n\n522\n00:32:00.870 --> 00:32:03.960\nBut it does look like we have nice\nerror messages that'll kinda give us\n\n523\n00:32:03.960 --> 00:32:06.120\nbreadcrumbs of going, hey,\nthis route doesn't work.\n\n524\n00:32:06.120 --> 00:32:07.650\nYeah, I forgot to put it\nin the routes folder.\n\n525\n00:32:07.650 --> 00:32:09.390\nHey, this controller doesn't exist.\n\n526\n00:32:09.390 --> 00:32:11.320\nI forgot to create that controller.\n\n527\n00:32:11.320 --> 00:32:13.440\nHey, this method on the controller,\nor the action,\n\n528\n00:32:13.440 --> 00:32:15.820\ndoesn't exist in the controller class.\n\n529\n00:32:15.820 --> 00:32:17.190\nYeah, I need to go write that.\n\n530\n00:32:17.190 --> 00:32:19.350\nHey, the template doesn't exist.\n\n531\n00:32:19.350 --> 00:32:20.610\nYeah, I forgot to write that.\n\n532\n00:32:20.610 --> 00:32:24.320\nI mean, even though that seems\nlike it can be confusing and\n\n533\n00:32:24.320 --> 00:32:26.940\nfrustrating, at least those\nerror messages exist.\n\n534\n00:32:26.940 --> 00:32:30.490\nBecause I have been in some environments\nwhere it just goes, hey, stuff's broke.\n\n535\n00:32:30.490 --> 00:32:32.120\nYou're like, that's real nice.\n\n536\n00:32:32.120 --> 00:32:34.030\nWhat am I supposed to do?\n\n537\n00:32:34.030 --> 00:32:35.120\nYou just to need to figure it out.\n\n538\n00:32:35.120 --> 00:32:37.580\nSo I like that it's helpful like this.\n\n539\n00:32:37.580 --> 00:32:40.350\n&gt;&gt; Yeah, it's definitely useful\njust to be able to look and\n\n540\n00:32:40.350 --> 00:32:43.940\nsee at your error message and just get\nsome context as to what you're doing,\n\n541\n00:32:43.940 --> 00:32:45.590\nwhat's going on and what's happening.\n\n542\n00:32:45.590 --> 00:32:49.730\n&gt;&gt; Well Manny, thank you so much for\ngiving us a preview of not only just\n\n543\n00:32:49.730 --> 00:32:53.670\nrails views, but how they're kind of\nco-mingled with the controllers, right?\n\n544\n00:32:53.670 --> 00:32:56.690\nWe're starting to see how\nthe controller comes to fruition.\n\n545\n00:32:56.690 --> 00:33:00.140\nBut we're gonna go ahead and wrap this\none up, because we are way out of time.\n\n546\n00:33:00.140 --> 00:33:04.410\nBut we've got more intro to Ruby on Rails\ncoming your way, so definitely stay tuned.\n\n547\n00:33:04.410 --> 00:33:07.810\nBut for now, signing off for Dev Pro TV,\nI've been your host Justin Dennison.\n\n548\n00:33:07.810 --> 00:33:09.130\n&gt;&gt; And I'm Manny Rodriguez.\n\n549\n00:33:09.130 --> 00:33:15.849\n&gt;&gt; And we'll see you next time.\n\n",
          "vimeoId": "238586903"
        },
        {
          "description": "In this episode, Justin and Manny take a look at the data models that are necessary to persist data in the database. Manny explores the ActiveRecord ORM that is part of Ruby on Rails that provides some of the \"magic\" that is sometimes attributed to Rails as well as the migrations that are necessary to keep the data model and database in sync. Manny discusses the link between the controller and the model.",
          "length": "1320",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-introtorubyonrails/techskills-introtorubyonrails-5-1-1-intro_to_rails_models-101417-PGM.00_30_18_16.Still001.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-introtorubyonrails/techskills-introtorubyonrails-5-1-1-intro_to_rails_models-101417-PGM.00_30_18_16.Still001-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-introtorubyonrails/techskills-introtorubyonrails-5-1-1-intro_to_rails_models-101417-PGM.00_30_18_16.Still001-sm.jpg",
          "title": "Intro to Rails Models",
          "transcript": "WEBVTT\n\n1\n00:00:00.000 --> 00:00:10.000\n[MUSIC]\n\n2\n00:00:12.531 --> 00:00:16.127\nGreetings everyone and welcome to\nanother exciting episode of DevPro.TV.\n\n3\n00:00:16.127 --> 00:00:17.920\nI'm your host Justin Dennison.\n\n4\n00:00:17.920 --> 00:00:21.620\nAnd while we're continuing our\ntrek through Ruby on Rails,\n\n5\n00:00:21.620 --> 00:00:24.980\nin particular we're gonna be\nlooking at Rails models today,\n\n6\n00:00:24.980 --> 00:00:27.430\nwhich can be a little\nbit of a touchy subject.\n\n7\n00:00:27.430 --> 00:00:31.640\nModels and modeling can kinda\nhurt your brain a little bit.\n\n8\n00:00:31.640 --> 00:00:35.980\nBut luckily we have an expert in that\nvery topic in the studio today, Mr.\n\n9\n00:00:35.980 --> 00:00:36.790\nManny Rodriguez.\n\n10\n00:00:36.790 --> 00:00:37.570\nHow you doing today Manny?\n\n11\n00:00:37.570 --> 00:00:38.822\n&gt;&gt; I'm great, Justin, how are you doing?\n\n12\n00:00:38.822 --> 00:00:42.692\n&gt;&gt; I am doing fantastic and\nI'm kind of excited because I like data.\n\n13\n00:00:42.692 --> 00:00:46.850\nI actually worked as a semi pseudo\ndata scientist for a little while.\n\n14\n00:00:46.850 --> 00:00:48.530\nAnd I don't know,\n\n15\n00:00:48.530 --> 00:00:52.280\njust manipulating data, thinking about\nstructure of data makes me excited.\n\n16\n00:00:52.280 --> 00:00:56.360\nSo well where do we\nstart with Rails models?\n\n17\n00:00:56.360 --> 00:00:58.010\n&gt;&gt; Man, I love data too.\n\n18\n00:00:58.010 --> 00:00:59.010\nIt's the reason we're here, right?\n\n19\n00:00:59.010 --> 00:01:00.440\nIt's what computers are good at.\n\n20\n00:01:00.440 --> 00:01:05.340\nThey, we give them stuff to store, stuff\nto do, numbers to add, photos to show, and\n\n21\n00:01:05.340 --> 00:01:07.014\nthey do it for us.\n\n22\n00:01:07.014 --> 00:01:11.080\nSo far, we have seen little bit of views,\n\n23\n00:01:11.080 --> 00:01:14.190\na little bit of Rails routing,\na little bit of controller work,\n\n24\n00:01:14.190 --> 00:01:17.650\njust on the surface, but\nwe haven't talked about models at all.\n\n25\n00:01:17.650 --> 00:01:20.710\nAnd that's critical because\n\n26\n00:01:20.710 --> 00:01:25.420\nwe want our apps to serve a function,\nwe want them to do something.\n\n27\n00:01:25.420 --> 00:01:28.180\nThere are some Rails apps\nthat don't need models,\n\n28\n00:01:28.180 --> 00:01:30.250\nbut those are very rare, very rare.\n\n29\n00:01:30.250 --> 00:01:32.530\nAnd generally, as far as a tool,\n\n30\n00:01:32.530 --> 00:01:37.099\nRails are really designed with\nmodels in mind, with data in mind.\n\n31\n00:01:37.099 --> 00:01:41.861\nSo, what we're gonna do today,\nis we're going to introduce Active Record,\n\n32\n00:01:41.861 --> 00:01:46.624\ntalk a little bit about how Rails handles\nmodels, and how Rails handles data,\n\n33\n00:01:46.624 --> 00:01:49.880\nand then we'll get into building a model.\n\n34\n00:01:49.880 --> 00:01:54.436\n&gt;&gt; So Manny, I just wanna make sure, most\nRails applications have models, because\n\n35\n00:01:54.436 --> 00:01:59.009\nmodels are effectively the gateway towards\nsome kind of data persistence layer.\n\n36\n00:01:59.009 --> 00:02:03.761\nNow, I mean data persistence as if things\ngo horribly awry, you didn't lose all your\n\n37\n00:02:03.761 --> 00:02:07.930\ncustomer records, and you've lost\nthe ability to build people, right?\n\n38\n00:02:07.930 --> 00:02:10.920\nAm I right in the role of models?\n\n39\n00:02:10.920 --> 00:02:17.660\n&gt;&gt; Yeah, exactly in Rails,\nmodels are there, and we can use\n\n40\n00:02:17.660 --> 00:02:22.660\nActive Record because that is a component\nof Rails that deals solely with models.\n\n41\n00:02:22.660 --> 00:02:25.770\nSometimes you'll hear those\nterms used interchangeably.\n\n42\n00:02:25.770 --> 00:02:28.660\nI've got a model, I've got an Active\nRecord model, I'm using Active Record.\n\n43\n00:02:28.660 --> 00:02:31.090\nThey point to the same thing.\n\n44\n00:02:31.090 --> 00:02:36.050\nThis is the part of Rails where we\ncan tell it what a database is,\n\n45\n00:02:36.050 --> 00:02:37.915\ntell it how to connect to that database.\n\n46\n00:02:37.915 --> 00:02:40.175\nTell it what we're storing and\nthen do things like,\n\n47\n00:02:40.175 --> 00:02:44.755\nhey, I want blog post number 5,394.\n\n48\n00:02:44.755 --> 00:02:49.135\nOr I want to query all of my users and\n\n49\n00:02:49.135 --> 00:02:53.555\nspecifically the ones with an email\naddress that has the letter four in it.\n\n50\n00:02:53.555 --> 00:02:55.994\nSomething like that, so\nwe got queries, we got gets.\n\n51\n00:02:55.994 --> 00:02:58.470\nWe can create models,\nwe can delete models.\n\n52\n00:02:58.470 --> 00:03:01.916\nSo we're gonna get to\nplay with all of that.\n\n53\n00:03:01.916 --> 00:03:06.370\nSo to start off here, we've got a new app.\n\n54\n00:03:06.370 --> 00:03:09.540\nWe're gonna start our blog project today.\n\n55\n00:03:09.540 --> 00:03:16.440\nSo I've done a Rails new, and this is\na totally fresh Rails installation.\n\n56\n00:03:17.890 --> 00:03:21.760\nAnd it's got that structure that we\ntalked about in the last episode.\n\n57\n00:03:21.760 --> 00:03:23.270\nI've also got my server running here.\n\n58\n00:03:23.270 --> 00:03:31.020\nSo I'm at a state now where I can just go\nto my URL, and I get my splash screen.\n\n59\n00:03:31.020 --> 00:03:33.890\nI know Rails is up and running,\nI know Rails is working.\n\n60\n00:03:33.890 --> 00:03:36.340\nSo this is kinda where you'd\nwanna start for today.\n\n61\n00:03:37.820 --> 00:03:41.360\nAnd I'm going to do a little\nbit of recap about databases.\n\n62\n00:03:43.610 --> 00:03:46.280\nThey store data and persist them so\n\n63\n00:03:46.280 --> 00:03:49.400\nthat they're files written\non a disk that's permanent.\n\n64\n00:03:49.400 --> 00:03:54.510\nSo if power goes out, server gets\nunplugged, we haven't lost anything.\n\n65\n00:03:54.510 --> 00:03:59.100\nNow that being said, there's several\ndifferent types of databases, and\n\n66\n00:03:59.100 --> 00:04:01.430\nRails uses the relational kind.\n\n67\n00:04:01.430 --> 00:04:05.663\nYou may have heard of Mongo or\nNoSQL, which are databases just like\n\n68\n00:04:05.663 --> 00:04:10.367\nthe relational ones but they don't\nhave a relational model behind them.\n\n69\n00:04:10.367 --> 00:04:13.400\nIn a couple of shows we'll see\nwhat that means, relational, and\n\n70\n00:04:13.400 --> 00:04:14.845\nwhy it's called relational.\n\n71\n00:04:14.845 --> 00:04:17.789\nBut I simply wanted to point out that\nRails uses a relational model and\n\n72\n00:04:17.789 --> 00:04:21.230\nit uses a relational database and\nthat's what we'll be working with.\n\n73\n00:04:21.230 --> 00:04:24.770\n&gt;&gt; Now, Manny I've seen that, Post Crest,\n\n74\n00:04:24.770 --> 00:04:28.410\nMy Sequel, a lot of these\nsequel relational databases.\n\n75\n00:04:28.410 --> 00:04:31.230\nIt's typically what we see\nwith a standard Rail setup.\n\n76\n00:04:31.230 --> 00:04:34.430\nBut, does Rails have the ability to\nintegrate some of these non relational\n\n77\n00:04:34.430 --> 00:04:38.890\ndatabases, such as Mongo or\nmaybe even like Dynamo to some extent?\n\n78\n00:04:38.890 --> 00:04:43.070\nNow, maybe you can speak on one and\nnot the other, but if we really wanted to,\n\n79\n00:04:43.070 --> 00:04:46.290\ncould we force Rails to\ninteract using those databases?\n\n80\n00:04:46.290 --> 00:04:46.989\n&gt;&gt; Glad you asked.\n\n81\n00:04:46.989 --> 00:04:50.780\nAnd I misspoke earlier when I said\nthat Rails uses a relational model,\n\n82\n00:04:50.780 --> 00:04:53.610\nas if it was the only\nthing that it could use.\n\n83\n00:04:53.610 --> 00:04:57.555\nIt's more accurate to say that Active\nRecord uses a relational database model.\n\n84\n00:04:57.555 --> 00:05:02.684\nAnd Active Record is what comes\nbundled with Rails by default, but\n\n85\n00:05:02.684 --> 00:05:08.090\nthere are Active Record replacements\nthat you could use in your app and\n\n86\n00:05:08.090 --> 00:05:11.491\nthen connect to a NoSQL\ndatabase like that.\n\n87\n00:05:11.491 --> 00:05:17.180\nSo, we could just try Google search,\nlike NoSQL database Rails,\n\n88\n00:05:17.180 --> 00:05:21.660\nand I'm sure something will\ncome up that we can use.\n\n89\n00:05:23.340 --> 00:05:25.000\nSo right here we've got a Reddit post.\n\n90\n00:05:25.000 --> 00:05:26.296\nYou can see there's interest in it.\n\n91\n00:05:26.296 --> 00:05:31.006\nAnd I'm sure if we drill down,\nwe'll be able to find a tool that we'll be\n\n92\n00:05:31.006 --> 00:05:35.733\nable to download a gem for and\nget support for non relational databases.\n\n93\n00:05:35.733 --> 00:05:39.372\n&gt;&gt; Okay, so there're abilities there,\nbut by default out of the box,\n\n94\n00:05:39.372 --> 00:05:43.160\nwe're using a relational database model,\nkind of a thought process.\n\n95\n00:05:43.160 --> 00:05:46.850\nAnd for those of you who may not be aware,\nthat means we have tables,\n\n96\n00:05:46.850 --> 00:05:50.080\ncolumns, records, those types things.\n\n97\n00:05:50.080 --> 00:05:53.910\nSo, I almost like to think of it as,\nit's a spreadsheet but\n\n98\n00:05:53.910 --> 00:05:58.010\nnot really, so be careful there and\nyou can think of it that way but\n\n99\n00:05:58.010 --> 00:06:00.410\nit is a great deal more\npowerful than that.\n\n100\n00:06:00.410 --> 00:06:01.880\n&gt;&gt; Yeah, exactly.\n\n101\n00:06:01.880 --> 00:06:05.850\nI like to think of it as many, maybe\nseveral spreadsheets that know about each\n\n102\n00:06:05.850 --> 00:06:12.410\nother and can connect to each other so\nthat if we have a list of people,\n\n103\n00:06:12.410 --> 00:06:16.980\nand we have a list of cars in the parking\nlot we can assign one to the other.\n\n104\n00:06:16.980 --> 00:06:21.750\nSo one row, if they're another person,\nand one other car we're talking about,\n\n105\n00:06:21.750 --> 00:06:26.660\nwe can query for\nthe data that they're related to.\n\n106\n00:06:28.692 --> 00:06:31.910\nSo a little bit more about\nActive Record in particular,\n\n107\n00:06:31.910 --> 00:06:34.520\ncuz we're gonna be using that here.\n\n108\n00:06:34.520 --> 00:06:37.413\nLet's just bring up Active Records page.\n\n109\n00:06:37.413 --> 00:06:40.283\nI'm just gonna Google search for\n\n110\n00:06:40.283 --> 00:06:44.904\nActive Record cuz I'm honestly\nnot sure where it is.\n\n111\n00:06:44.904 --> 00:06:50.640\nAnd Ruby on Rails guides, excellent\nresource and this kind of show us what\n\n112\n00:06:50.640 --> 00:06:56.299\nActive Record is and how to use it and\nwhat kind of things we can do with it.\n\n113\n00:06:56.299 --> 00:07:03.100\nSo Active Record it's called an ORM or\nObject Relational Mapping.\n\n114\n00:07:03.100 --> 00:07:07.090\nAnd basically what that is\nis it's a layer of software\n\n115\n00:07:07.090 --> 00:07:12.120\nthat we get to use that keeps us\nfrom having to write database code.\n\n116\n00:07:12.120 --> 00:07:18.340\nDatabase code like this so\nthis is SQL that's creating a table\n\n117\n00:07:18.340 --> 00:07:23.700\ncalled products and it's written in this\nlanguage specific to relational databases.\n\n118\n00:07:23.700 --> 00:07:29.360\nSo using Active Record, we don't have to\nwrite code like this because Active Record\n\n119\n00:07:29.360 --> 00:07:33.210\nknows about relational databases and\nit can generate this kind of thing for us.\n\n120\n00:07:34.270 --> 00:07:41.696\nWe'll see later in this episode how to\ndo exactly this in a Ruby/Rail syntax.\n\n121\n00:07:41.696 --> 00:07:46.184\nAlso we can do things\nlike p = Product.new and\n\n122\n00:07:46.184 --> 00:07:52.051\nyou can see how here we're\nassigning the value, Some Book,\n\n123\n00:07:52.051 --> 00:07:56.899\nto this name method on this p,\nwhich is a product.\n\n124\n00:07:56.899 --> 00:08:01.336\nSo if you did this in SQL you would have\nto write a layer of code that would take\n\n125\n00:08:01.336 --> 00:08:02.121\nthis input.\n\n126\n00:08:02.121 --> 00:08:07.551\nAnd then either write an insert or\nan update statement in SQL and\n\n127\n00:08:07.551 --> 00:08:11.520\nuse that to accomplish this task.\n\n128\n00:08:11.520 --> 00:08:14.750\nBut with active record it has\nmethods built in like this.\n\n129\n00:08:14.750 --> 00:08:17.270\nSo you can see this behaves\njust like an object and\n\n130\n00:08:17.270 --> 00:08:19.210\nthat's precisely why we're using it.\n\n131\n00:08:19.210 --> 00:08:21.450\nAnd that's why it gets it's\nname object relational mapping.\n\n132\n00:08:21.450 --> 00:08:25.114\nIt's mapping,\na relational database to a Ruby object, so\n\n133\n00:08:25.114 --> 00:08:28.851\nthat we can pass those around\nin our application, get them,\n\n134\n00:08:28.851 --> 00:08:33.565\nuse them, manipulate them, and\nsave them without having to write any SQL.\n\n135\n00:08:38.686 --> 00:08:45.950\nSo to get started with creating a model\nfor our app, we're creating a blog app.\n\n136\n00:08:45.950 --> 00:08:47.970\nSo we're gonna want to have posts,\n\n137\n00:08:47.970 --> 00:08:50.910\nmaybe down the road we're gonna add\nsome comments and some other things.\n\n138\n00:08:50.910 --> 00:08:57.860\nBut post is definitely a key data item\nthat we need to have and we need to store.\n\n139\n00:08:57.860 --> 00:09:00.070\nAnd we don't want our\nblog post to go away, so\n\n140\n00:09:00.070 --> 00:09:02.457\nthis is a natural fit for a model.\n\n141\n00:09:04.700 --> 00:09:10.980\nSo to create a model, you can imagine\nas you've seen in previous episodes,\n\n142\n00:09:10.980 --> 00:09:13.030\nwe've got generators in Rails.\n\n143\n00:09:13.030 --> 00:09:16.570\nAnd we're gonna use one to\ngenerate a model for us.\n\n144\n00:09:16.570 --> 00:09:18.360\nAnd it's gonna do the same\nthing it has before.\n\n145\n00:09:18.360 --> 00:09:23.990\nIt's going to create some files and\nit's gonna create a template for\n\n146\n00:09:23.990 --> 00:09:27.710\nus to go in and fill in details for\nthe model that we wanna use.\n\n147\n00:09:29.450 --> 00:09:32.860\nSo to do that,\nwe'll run rails generate model.\n\n148\n00:09:32.860 --> 00:09:36.670\nAnd pluralization is\nan interesting thing in rails.\n\n149\n00:09:37.730 --> 00:09:42.747\nYou'll notice that, well, the controller\ngeneration commands that I've typed in,\n\n150\n00:09:42.747 --> 00:09:45.884\nit really didn't matter if\nit was singular or plural.\n\n151\n00:09:45.884 --> 00:09:48.973\nIn this case, I could use Post singular or\n\n152\n00:09:48.973 --> 00:09:54.330\nPosts plural and it has an effect\non the files that are created.\n\n153\n00:09:54.330 --> 00:09:59.765\nSo I'm going to use --pretend here because\nI don't actually want to save this,\n\n154\n00:09:59.765 --> 00:10:04.275\nbut I just kinda wanna show you what\nhappens when I run this as Posts.\n\n155\n00:10:04.275 --> 00:10:07.589\nAnd you can see here that\nrails actually warns me and\n\n156\n00:10:07.589 --> 00:10:12.765\ntells me, hey, you've typed in what\nlooks like a plural are you sure.\n\n157\n00:10:12.765 --> 00:10:14.660\nThe rails convention is a singular and\n\n158\n00:10:14.660 --> 00:10:18.160\nthis is one of these places where\nrails has made decisions for us and\n\n159\n00:10:18.160 --> 00:10:23.570\nif we force it to do plural, we can do so.\n\n160\n00:10:23.570 --> 00:10:25.305\nBut then we're breaking the convention.\n\n161\n00:10:25.305 --> 00:10:26.386\n&gt;&gt; Just to reiterate,\n\n162\n00:10:26.386 --> 00:10:30.210\nrails is very opinionated about\nthe convention of the configuration.\n\n163\n00:10:31.210 --> 00:10:35.905\nWell, this makes sense to me even though\nI may not be deep in rails all the time,\n\n164\n00:10:35.905 --> 00:10:36.412\nright?\n\n165\n00:10:36.412 --> 00:10:39.626\nHonestly, I've only touched on it.\n\n166\n00:10:39.626 --> 00:10:45.470\nBut I could see a post\nis a singular object.\n\n167\n00:10:45.470 --> 00:10:49.629\nBut what's stored in our database\nis a collection of posts.\n\n168\n00:10:49.629 --> 00:10:54.394\nSo right, I have a singular post and\nultimately this Active Record based\n\n169\n00:10:54.394 --> 00:10:58.540\nobject is going to be for\na one particular thing, correct?\n\n170\n00:10:58.540 --> 00:10:59.370\n&gt;&gt; Yeah, that's right.\n\n171\n00:10:59.370 --> 00:11:02.640\nAnd that's a good way of thinking about\nit cuz that's the way we're modeling it.\n\n172\n00:11:02.640 --> 00:11:06.640\nWe're basically modeling a post,\nthe concept of a post.\n\n173\n00:11:06.640 --> 00:11:12.410\nAnd if you think about pluralizing that,\nwe're not talking about multiple posts.\n\n174\n00:11:12.410 --> 00:11:14.650\nWe're talking about what is a post?\n\n175\n00:11:14.650 --> 00:11:17.580\nAnd that's kind of the mindset\nwe want to approach models with,\n\n176\n00:11:17.580 --> 00:11:21.510\nis that we're defining a data structure or\n\n177\n00:11:21.510 --> 00:11:26.690\na signature for what our post means or\nwhat our post is.\n\n178\n00:11:28.690 --> 00:11:32.310\nSo going up back here\nwe'll take pretend off and\n\n179\n00:11:32.310 --> 00:11:36.849\nwe'll run this with a singular\nspelling of Post hit Enter.\n\n180\n00:11:39.090 --> 00:11:41.240\nAnd we'll see it generated some files for\n\n181\n00:11:41.240 --> 00:11:44.570\nus just like it did when\nwe generated a controller.\n\n182\n00:11:44.570 --> 00:11:48.010\nSo let's take a look down here and\nsee what it made for us.\n\n183\n00:11:48.010 --> 00:11:53.430\nIn this db migrate folder, there's this\nfile with what looks like date string and\n\n184\n00:11:53.430 --> 00:11:56.470\nthen the name create_posts.\n\n185\n00:11:56.470 --> 00:11:59.960\nSo, this is a database migration.\n\n186\n00:11:59.960 --> 00:12:05.300\nAnd I know that's a long technical\nterm but basically what it means is\n\n187\n00:12:05.300 --> 00:12:09.270\nour database is constantly changing\nover time, as we develop our app.\n\n188\n00:12:09.270 --> 00:12:10.780\nWe're adding posts now.\n\n189\n00:12:10.780 --> 00:12:15.220\nDown the road we're going to add comments,\nmaybe we'll add users, or pictures,\n\n190\n00:12:15.220 --> 00:12:19.760\nor other things and our database is\ngrowing, and growing, and growing.\n\n191\n00:12:19.760 --> 00:12:23.047\nSo when it comes time to\nput this into production or\n\n192\n00:12:23.047 --> 00:12:26.425\nto maybe we want to install\nit onto another server.\n\n193\n00:12:26.425 --> 00:12:31.407\nWe need to recreate that database\nas we have defined it so far and\n\n194\n00:12:31.407 --> 00:12:35.760\ndatabase migrations\nare a way of doing this.\n\n195\n00:12:35.760 --> 00:12:39.930\nIt's basically a single step in our recipe\nsaying, okay, this is our recipe for\n\n196\n00:12:39.930 --> 00:12:43.070\nour blog app,\ningredient one is create posts and\n\n197\n00:12:43.070 --> 00:12:49.030\nit's time stamped place where\ncan define how to create a post.\n\n198\n00:12:49.030 --> 00:12:51.960\nDown the road, we may another\nmigration that changes this or\n\n199\n00:12:51.960 --> 00:12:57.680\nmaybe even removes this but it's a nice\nway to mitigate some of the errors of\n\n200\n00:12:59.280 --> 00:13:02.919\nmanaging changes to a data base.\n\n201\n00:13:05.605 --> 00:13:08.130\nSo let's look inside that and\nsee what it looks like.\n\n202\n00:13:11.035 --> 00:13:12.520\nSo I'm gonna open up my editor here.\n\n203\n00:13:17.427 --> 00:13:18.770\nAnd there's my migration.\n\n204\n00:13:20.600 --> 00:13:23.945\nAnd we can see here that it's a class\ncalled CreatePosts which inherits from\n\n205\n00:13:23.945 --> 00:13:27.500\nActiveRecordMigration.\n\n206\n00:13:27.500 --> 00:13:29.980\nAnd this syntax ActiveRecord is a module\n\n207\n00:13:29.980 --> 00:13:33.540\nin Ruby which is kind of\na collection of classes.\n\n208\n00:13:33.540 --> 00:13:40.510\nAnd there's this Migration class\nthat gets all of its logic from.\n\n209\n00:13:40.510 --> 00:13:46.730\nAnd there's method defined called change,\nwhere it's always name change and\n\n210\n00:13:46.730 --> 00:13:52.550\nit's part of the Rails configuration\nover convention paradigm.\n\n211\n00:13:52.550 --> 00:13:54.530\nSo if I change those to just chang,\n\n212\n00:13:55.890 --> 00:13:59.300\nthis migration is not gonna run because it\nexpects this method to be named change.\n\n213\n00:14:00.710 --> 00:14:03.450\nAnd we can see here that we\nhave this create_table method.\n\n214\n00:14:04.570 --> 00:14:07.420\nAnd actually just a backup a little bit.\n\n215\n00:14:07.420 --> 00:14:12.260\nRuby has this tendency of\ncreating what we are called\n\n216\n00:14:12.260 --> 00:14:17.050\ndomain specific languages,\nwhere it's still Ruby code but the author\n\n217\n00:14:17.050 --> 00:14:22.180\nhas used syntactic tricks to make it\nmore English like and more readable.\n\n218\n00:14:22.180 --> 00:14:26.650\nAnd to make the configuration\nof a certain thing more easy.\n\n219\n00:14:26.650 --> 00:14:28.940\nSo, this is one place\nwhere that's the case.\n\n220\n00:14:31.390 --> 00:14:37.010\nThis here, this t.timestamps, what this\nrepresents is, we wanna create a table.\n\n221\n00:14:37.010 --> 00:14:40.080\nAnd it's blank because we haven't\nadded anything to it yet.\n\n222\n00:14:40.080 --> 00:14:43.810\nBut by default,\nwe get some timestamp records and\n\n223\n00:14:43.810 --> 00:14:49.370\nthat's built in to the template\nthat the generator gave us.\n\n224\n00:14:49.370 --> 00:14:50.500\nWhat are timestamps?\n\n225\n00:14:50.500 --> 00:14:53.320\nIt's basically a date time field for\ncreated app and\n\n226\n00:14:53.320 --> 00:14:55.420\nanother date time field for updated app.\n\n227\n00:14:57.100 --> 00:14:59.240\nSo we wanna add some.\n\n228\n00:14:59.240 --> 00:15:05.124\nNow you'll notice this t here in\nthis block, this stands for table,\n\n229\n00:15:05.124 --> 00:15:12.235\nso that timestamps is a method on that\nobject that's doing this creation process.\n\n230\n00:15:12.235 --> 00:15:17.030\nAnd it knows that the timestamps\nmethod its adding those timestamps.\n\n231\n00:15:17.030 --> 00:15:21.200\nBut what we can also add string and\nthen we'll give it a name.\n\n232\n00:15:23.790 --> 00:15:28.311\nAnd I've typed in sting like a singer,\nso we'll change that to string.\n\n233\n00:15:28.311 --> 00:15:32.054\nAnd so we wanna post and actually,\nit's not just a post but what we're really\n\n234\n00:15:32.054 --> 00:15:36.390\nworking with here are the fields and\nour post is gonna have a title and a body.\n\n235\n00:15:36.390 --> 00:15:38.310\nSo we'll call this one body and\n\n236\n00:15:38.310 --> 00:15:42.280\nthen we'll duplicate this line and\nadd another one for title.\n\n237\n00:15:45.535 --> 00:15:48.200\nSave that file out and\nnow we got our migration.\n\n238\n00:15:50.280 --> 00:15:54.668\nSo this brings up an issue\nsometimes that comes up\n\n239\n00:15:54.668 --> 00:15:58.743\nin the Rails community\nis what is this doing?\n\n240\n00:15:58.743 --> 00:16:02.910\nHow this is actually working\nbehind the scenes and.\n\n241\n00:16:02.910 --> 00:16:05.889\nFor many people,\nit's simply the Rails way of doing things.\n\n242\n00:16:05.889 --> 00:16:08.620\nYou learn the pattern and you use it.\n\n243\n00:16:08.620 --> 00:16:11.890\nThis is still open source code,\nso we're welcome to open up,\n\n244\n00:16:11.890 --> 00:16:16.730\ngo into the framework, and\nsee how this create table method works.\n\n245\n00:16:16.730 --> 00:16:21.530\nWhat's it's doing behind the scenes, what\nis this string method on this tee, and\n\n246\n00:16:21.530 --> 00:16:24.500\njust kinda seeing how all\nthis actually functions.\n\n247\n00:16:24.500 --> 00:16:26.580\nBut we don't have to do\nthat if we don't want to.\n\n248\n00:16:26.580 --> 00:16:29.377\nIf we just wanna focus on\nour business logic and\n\n249\n00:16:29.377 --> 00:16:34.337\ncreate our post, then we can simply follow\nthis pattern and write our migration.\n\n250\n00:16:36.906 --> 00:16:38.123\nSo let's run this and see what happens.\n\n251\n00:16:41.555 --> 00:16:46.569\nRails has a built in system for\nrunning automated tasks, called Rake.\n\n252\n00:16:46.569 --> 00:16:52.220\nAnd that's kind of a play on words because\nback in, well actually still currently.\n\n253\n00:16:52.220 --> 00:16:58.907\nIt's still a thing now, Make which is\na tool used to automate C++ compiling.\n\n254\n00:16:58.907 --> 00:17:02.500\nRake is kind of a play on that Make for\nRuby, and\n\n255\n00:17:02.500 --> 00:17:06.890\nthey took that in Rails and\njust really ran with it.\n\n256\n00:17:06.890 --> 00:17:10.219\nIf we run this command Rake-T,\n\n257\n00:17:10.219 --> 00:17:15.110\nthis will kinda give us an overview of\nthe kind of things that Rake can do.\n\n258\n00:17:16.300 --> 00:17:20.729\nWhich is helpful as a kind of\na dictionary into this really big\n\n259\n00:17:20.729 --> 00:17:23.660\nstructured task managing system.\n\n260\n00:17:25.000 --> 00:17:28.950\nSo we can kinda see that there's\ntasks here related to assets.\n\n261\n00:17:28.950 --> 00:17:33.580\nTasks related to databases and\nsome stuff related for tests.\n\n262\n00:17:33.580 --> 00:17:38.360\nBasically the way this is organized is we\nuse Rake to run scripts to do things that\n\n263\n00:17:38.360 --> 00:17:41.640\nwe need to do to do like run migrations or\nto build our assets pipeline.\n\n264\n00:17:41.640 --> 00:17:43.150\nWhich we'll talk about later.\n\n265\n00:17:43.150 --> 00:17:46.330\nAnd it's kind of clustered into\ngeneral families of things.\n\n266\n00:17:46.330 --> 00:17:51.890\nSo all these Rake and\nDB: things are based on database stuff.\n\n267\n00:17:53.000 --> 00:17:55.670\nSo we can run Rake db migrate.\n\n268\n00:17:57.880 --> 00:18:01.400\nAnd it'll take a second, it's basically\ngonna go and create a SQL file,\n\n269\n00:18:02.570 --> 00:18:06.090\nsorry excuse me, a SQLite file.\n\n270\n00:18:06.090 --> 00:18:10.300\nAnd open it up and\ncreate the table that I just asked it to.\n\n271\n00:18:11.730 --> 00:18:14.840\nAnd we get this feedback here,\nCreate table post.\n\n272\n00:18:14.840 --> 00:18:18.460\nIt took a really short amount of time,\nand now we have our migration done.\n\n273\n00:18:20.160 --> 00:18:22.540\nNow you might be wondering,\nwhere did the database come from?\n\n274\n00:18:22.540 --> 00:18:23.740\nI didn't see you create a database.\n\n275\n00:18:23.740 --> 00:18:25.800\nI didn't see you make a database.\n\n276\n00:18:25.800 --> 00:18:29.240\nAnd what is actually connecting to and\nwhat is it actually doing?\n\n277\n00:18:30.610 --> 00:18:35.700\nAnd there's another configuration file for\nthat, that we can bring up and look at.\n\n278\n00:18:37.620 --> 00:18:42.899\nIt's in the config directory.\n\n279\n00:18:42.899 --> 00:18:44.324\nSo, let me show here,\n\n280\n00:18:44.324 --> 00:18:49.057\nin my file list we've got app which we\ntalked about a couple episodes back.\n\n281\n00:18:49.057 --> 00:18:53.350\nAnd then in config we have our routers,\nour route information, but\n\n282\n00:18:53.350 --> 00:18:56.670\nwe also have this database.xml file.\n\n283\n00:18:56.670 --> 00:19:01.679\nAnd this is part of the Rails default,\nit automatically knows that.\n\n284\n00:19:01.679 --> 00:19:08.050\nwell it defaults to using SQLite3 and\nit creates databases with these names.\n\n285\n00:19:08.050 --> 00:19:11.000\nJust by default,\nwe can change them but again,\n\n286\n00:19:11.000 --> 00:19:14.240\nconfiguration, convention\nover configuration.\n\n287\n00:19:14.240 --> 00:19:21.050\nSo, it kind of picks some sensible\ndefaults for us and it rolls with it.\n\n288\n00:19:21.050 --> 00:19:25.905\nSo we should have a development.sqlite3\nfile in this db folder, and\n\n289\n00:19:25.905 --> 00:19:32.530\nif we go here and take a look in there,\nWe do, it's right there.\n\n290\n00:19:32.530 --> 00:19:37.100\nAnd we can kind of see that it's\nnot empty, there's stuff in there.\n\n291\n00:19:37.100 --> 00:19:40.910\nAnd that's basically our table\ndefinition that we just created.\n\n292\n00:19:42.120 --> 00:19:45.990\n&gt;&gt; So it seems like Rails is taking\ncare of a lot of the headaches that can\n\n293\n00:19:45.990 --> 00:19:46.490\nencounter.\n\n294\n00:19:46.490 --> 00:19:50.440\nI don't know if any of you have ever\nmessed with, man, I need to add a new\n\n295\n00:19:50.440 --> 00:19:53.760\nfield to a database table, but\nI don't have any of this tooling.\n\n296\n00:19:53.760 --> 00:19:58.440\nAll right so, gonna add that column,\ngotta make a copy, and\n\n297\n00:19:58.440 --> 00:20:00.400\nthen I gotta update the existing ones.\n\n298\n00:20:02.040 --> 00:20:06.380\nIt can be a pain so\nI like that that is provided as a task for\n\n299\n00:20:06.380 --> 00:20:09.500\nyou just to kind of expedite\nthe development process.\n\n300\n00:20:09.500 --> 00:20:14.480\n&gt;&gt; Yeah, definitely, it's so nice just to\nbe able to jump in and create a table that\n\n301\n00:20:14.480 --> 00:20:19.600\nyou want without necessarily\nhaving to dig through SQL manuals.\n\n302\n00:20:19.600 --> 00:20:23.280\nOr look at documentation, which of\ncourse we do all the time as developers.\n\n303\n00:20:23.280 --> 00:20:28.040\nBut this is basically allowing\nto focus on our business logic,\n\n304\n00:20:28.040 --> 00:20:34.190\nour model, and leaving the nuts and bolts\nunderneath up to Rail to handle for us.\n\n305\n00:20:34.190 --> 00:20:38.250\n&gt;&gt; So at this point, do we technically\nhave a full-blown model already?\n\n306\n00:20:38.250 --> 00:20:41.990\nIt has a data persistence layer,\nwe're good to go.\n\n307\n00:20:41.990 --> 00:20:45.530\nAnd now, I guess,\nwhat's ultimately the next step.\n\n308\n00:20:45.530 --> 00:20:49.090\n&gt;&gt; Yeah, you're right,\nwe've got a model, we've got a database.\n\n309\n00:20:49.090 --> 00:20:53.020\nAnd the next step is to start using\nit by creating and looking up,\n\n310\n00:20:53.020 --> 00:20:56.480\nquerying these post objects\nthat we've defined.\n\n311\n00:20:56.480 --> 00:20:59.950\n&gt;&gt; All right, now, do you think that's\ngonna take a great deal of time?\n\n312\n00:20:59.950 --> 00:21:03.290\nLike, should we come back and\nmaybe cut this one a little bit short?\n\n313\n00:21:03.290 --> 00:21:04.500\nCome back for a part two so\n\n314\n00:21:04.500 --> 00:21:07.530\nwe can fully explore because\nwe've got about five minutes.\n\n315\n00:21:07.530 --> 00:21:10.580\nBut it seems like that amount would\nbe a little more complicated or\n\n316\n00:21:10.580 --> 00:21:12.440\na little more work.\n\n317\n00:21:12.440 --> 00:21:14.940\nOr at an least explanation than\nwe probably have time for.\n\n318\n00:21:14.940 --> 00:21:16.510\n&gt;&gt; Yeah, definitely I agree.\n\n319\n00:21:16.510 --> 00:21:22.010\nWe'll catch up next time with creating and\nmanipulating models from this point.\n\n320\n00:21:22.010 --> 00:21:24.610\n&gt;&gt; All right, there you've heard it,\nwe're gonna have to come back for\n\n321\n00:21:24.610 --> 00:21:28.830\na part two to see how we can utilize the\nmodels that we've created in this episode.\n\n322\n00:21:28.830 --> 00:21:31.810\nAnd we'll also use that\ndata persistent layer and\n\n323\n00:21:31.810 --> 00:21:33.550\nmaybe we'll get something to the screen.\n\n324\n00:21:33.550 --> 00:21:34.430\nYou never know.\n\n325\n00:21:34.430 --> 00:21:37.660\nI'm not sure how much work this is going\nto take, but definitely stay tuned for\n\n326\n00:21:37.660 --> 00:21:38.580\npart two.\n\n327\n00:21:38.580 --> 00:21:40.100\nIt's going to be a whole lot of fun.\n\n328\n00:21:40.100 --> 00:21:42.670\nBut for now we're going to go ahead and\nwrap this one up, but stay tuned for\n\n329\n00:21:42.670 --> 00:21:44.380\nmore Intro to Ruby on Rails.\n\n330\n00:21:44.380 --> 00:21:47.750\nSo, signing off for DevPro TV I've\nbeen your host Justin Dennison.\n\n331\n00:21:47.750 --> 00:21:49.351\n&gt;&gt; I'm Manny.\n&gt;&gt; And we'll see you next time.\n\n332\n00:21:49.351 --> 00:21:55.240\n[MUSIC]\n\n",
          "vimeoId": "238587728"
        },
        {
          "description": "In this episode, Justin and Manny take a look at the data models that are necessary to persist data in the database. Manny discusses the link between the controller and the model as well as demonstrated creating a model from scratch and managing the migrations accordingly.",
          "length": "1754",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-introtorubyonrails/techskills-introtorubyonrails-5-1-2-intro_to_rails_models_pt_2-101417-PGM.00_00_12_20.Still001.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-introtorubyonrails/techskills-introtorubyonrails-5-1-2-intro_to_rails_models_pt_2-101417-PGM.00_00_12_20.Still001-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-introtorubyonrails/techskills-introtorubyonrails-5-1-2-intro_to_rails_models_pt_2-101417-PGM.00_00_12_20.Still001-sm.jpg",
          "title": "Intro to Rails Models  Part 2",
          "transcript": "WEBVTT\n\n1\n00:00:00.000 --> 00:00:10.000\n[MUSIC]\n\n2\n00:00:12.660 --> 00:00:16.530\nGreetings everyone, and welcome to\nanother exciting episode of DevProTV.\n\n3\n00:00:16.530 --> 00:00:18.553\nI'm your host Justin Dennison, and\n\n4\n00:00:18.553 --> 00:00:21.701\nwe're coming back at you with\na part two on Rails models.\n\n5\n00:00:21.701 --> 00:00:24.860\nAnd this is part of our Intro\nto Ruby on Rails series.\n\n6\n00:00:24.860 --> 00:00:28.941\nWell, in part one,\nwe saw how to make a model.\n\n7\n00:00:28.941 --> 00:00:31.363\nWell and we have to come back\nto see how to actually use it.\n\n8\n00:00:31.363 --> 00:00:35.179\nIf we have a tool, we need to know how\nto use a tool, well at least safely.\n\n9\n00:00:35.179 --> 00:00:38.579\nAnd luckily, we have someone in\nthe studio that's here to guide us,\n\n10\n00:00:38.579 --> 00:00:40.700\nto show us the way, Mr. Manny Rodriguez.\n\n11\n00:00:40.700 --> 00:00:41.515\nHow are you doing today, Manny?\n\n12\n00:00:41.515 --> 00:00:43.940\n&gt;&gt; I'm great Justin, great to see you.\n\n13\n00:00:43.940 --> 00:00:47.330\nSo yeah,\nlast time we left off with Rails models.\n\n14\n00:00:47.330 --> 00:00:53.400\nWe created a migration to create\nour post object for our blog app.\n\n15\n00:00:53.400 --> 00:00:58.590\nSo, we've got a model for it,\nwe've got a title, a body,\n\n16\n00:00:58.590 --> 00:01:02.820\nbut how does this integrate into the rest\nof the app that we've created so far?\n\n17\n00:01:02.820 --> 00:01:08.820\nHow does this connect with controllers and\nviews, like we've seen before?\n\n18\n00:01:08.820 --> 00:01:10.480\nSo today, we're gonna get into that.\n\n19\n00:01:10.480 --> 00:01:13.350\nWe're going to use the model\nthat we've already created.\n\n20\n00:01:13.350 --> 00:01:17.180\nSo with a starting point here,\non our computer,\n\n21\n00:01:17.180 --> 00:01:20.890\nI've got the migration that we created,\njust to recap this.\n\n22\n00:01:20.890 --> 00:01:23.180\nAnd, we've got our server running.\n\n23\n00:01:24.650 --> 00:01:30.600\nAnd from here,\nwe're going to write a controller script.\n\n24\n00:01:30.600 --> 00:01:34.260\nExcuse me a controller action, to make\nsome of these because we've got Posts.\n\n25\n00:01:34.260 --> 00:01:36.670\nLet's make some Posts and\nthen once we've got a Post made,\n\n26\n00:01:36.670 --> 00:01:38.390\nwe're gonna want to view that Post.\n\n27\n00:01:38.390 --> 00:01:41.412\nSo, we'll have an action\nto do that as well.\n\n28\n00:01:41.412 --> 00:01:44.019\nThis is a common pattern\nthat we'll see in Rails.\n\n29\n00:01:44.019 --> 00:01:48.710\nSo to introduce this,\nwe need to make a controller.\n\n30\n00:01:48.710 --> 00:01:52.270\nSo, we're gonna make a controller,\nand that's going to create views for\n\n31\n00:01:52.270 --> 00:01:56.800\nus with the actions that\nwe decide to create.\n\n32\n00:01:56.800 --> 00:02:03.224\nAnd for this case, we're gonna\ncall the actions Make and Print.\n\n33\n00:02:03.224 --> 00:02:06.099\nSo, to recap Rails generate,\n\n34\n00:02:06.099 --> 00:02:11.860\nwe want to type in our Rails command and\ngenerate controller.\n\n35\n00:02:12.950 --> 00:02:15.200\nAnd this is gonna be a Posts controller,\n\n36\n00:02:15.200 --> 00:02:20.090\nbecause it's going to be focused\non manipulating Post objects.\n\n37\n00:02:20.090 --> 00:02:24.760\nAnd we can add to the end of\nthis as many actions as we want.\n\n38\n00:02:24.760 --> 00:02:29.430\nWe're gonna add our make and\nour print here.\n\n39\n00:02:29.430 --> 00:02:30.510\nAnd just as a sanity check,\n\n40\n00:02:30.510 --> 00:02:34.760\nit's always good to make sure this is\ngonna do what we think it's gonna do.\n\n41\n00:02:34.760 --> 00:02:37.480\nSo we're gonna add that\n--pretend at the end.\n\n42\n00:02:37.480 --> 00:02:38.645\n&gt;&gt; Now, Manny let me interject here.\n\n43\n00:02:38.645 --> 00:02:43.026\nIn the previous episode, we talked\nabout the singular convention for\n\n44\n00:02:43.026 --> 00:02:44.221\ncreating a model.\n\n45\n00:02:44.221 --> 00:02:46.142\nBut here we said Posts controller,\n\n46\n00:02:46.142 --> 00:02:49.088\nis that another convention\nthat we should be aware of,\n\n47\n00:02:49.088 --> 00:02:53.980\nbecause the controller's possibly managing\na bunch of Posts but it could be one Post?\n\n48\n00:02:53.980 --> 00:02:55.225\nThat always gets a little iffy.\n\n49\n00:02:55.225 --> 00:02:56.778\nIs this the convention\nthat we should follow?\n\n50\n00:02:56.778 --> 00:03:00.097\n&gt;&gt; Yeah, that's exactly right and\nit's a bit confusing,\n\n51\n00:03:00.097 --> 00:03:05.074\nbecause we've got singular for model Posts\nfor the controller, but the way I think of\n\n52\n00:03:05.074 --> 00:03:10.420\nit is when we're writing a model, we're\ndescribing a single Post, how it works.\n\n53\n00:03:10.420 --> 00:03:13.930\nWe're talking about the controller,\nwe've got the possibilities of\n\n54\n00:03:13.930 --> 00:03:18.030\nmaking many of them, viewing many of them,\nso for this we use plural.\n\n55\n00:03:19.790 --> 00:03:23.920\nSo yeah, it is a Rails convention, and I'm\ncurious to see what'll happen if I give\n\n56\n00:03:23.920 --> 00:03:28.430\nit the singular, cuz when we tried this\nwith model, it actually warned us, but\n\n57\n00:03:28.430 --> 00:03:29.360\nin this case, it didn't.\n\n58\n00:03:29.360 --> 00:03:33.340\nIt took it, and\nit looks like the file name is different.\n\n59\n00:03:35.150 --> 00:03:41.255\nSo, we see we've got this file was\ncreated Posts_controller here,\n\n60\n00:03:41.255 --> 00:03:45.089\nwhereas there's Post_controller here.\n\n61\n00:03:45.089 --> 00:03:50.691\nIt will do different things, but\nwe definitely wanna keep it plural.\n\n62\n00:03:50.691 --> 00:03:54.120\n&gt;&gt; And I guess, this is one of those\nthings where it's really hard to enforce\n\n63\n00:03:54.120 --> 00:03:57.454\na convention, because it could be\nthat I'm only doing this one thing.\n\n64\n00:03:57.454 --> 00:04:01.523\nLike I'm always dealing with a single\npost and maybe that's a post controller.\n\n65\n00:04:01.523 --> 00:04:04.521\nBut if I'm dealing with possibly\na huge number of Posts,\n\n66\n00:04:04.521 --> 00:04:08.721\nI wanna grab a bunch of Posts and render\nthem to a view, and I have multiple ones.\n\n67\n00:04:08.721 --> 00:04:12.209\nSo, even though I've been\noutside the Rails community,\n\n68\n00:04:12.209 --> 00:04:16.978\nI tend to follow this convention, and even\nthough we say Rails is a convention or\n\n69\n00:04:16.978 --> 00:04:20.537\na configuration,\nthere are some decisions to be made, and\n\n70\n00:04:20.537 --> 00:04:24.500\nkind of force your own configuration\nwithin Rails, correct?\n\n71\n00:04:24.500 --> 00:04:27.440\n&gt;&gt; Absolutely, absolutely.\n\n72\n00:04:27.440 --> 00:04:30.080\nIn Rails, the conventions that\nare there are suggestions.\n\n73\n00:04:30.080 --> 00:04:32.200\nSome of them are really\nstrong suggestions, but\n\n74\n00:04:32.200 --> 00:04:35.670\nin this case you make a good\npoint that a Post, a controller,\n\n75\n00:04:35.670 --> 00:04:39.460\nexcuse me,\nis a more abstract object than a model is.\n\n76\n00:04:39.460 --> 00:04:44.320\nA model's always gonna point back\nto a thing, that we're building.\n\n77\n00:04:44.320 --> 00:04:46.270\nBut a controller can do\nmany things like you said,\n\n78\n00:04:46.270 --> 00:04:49.480\nlike pull lots of data and\nsend it out in a different way,\n\n79\n00:04:49.480 --> 00:04:52.490\nthat's not necessarily tied to creating or\nmaking things.\n\n80\n00:04:52.490 --> 00:04:55.955\nSo, Rails give us more leeway\nin the naming of controllers.\n\n81\n00:04:57.909 --> 00:05:00.487\nSo we're gonna take\nthe pretend off of this, so\n\n82\n00:05:00.487 --> 00:05:04.940\nwe can actually make these files and then\ntake a look at the files that are created.\n\n83\n00:05:06.400 --> 00:05:07.550\nSo we've got our Post controller,\n\n84\n00:05:07.550 --> 00:05:10.850\nand you'll notice that we\nhad a model created before.\n\n85\n00:05:10.850 --> 00:05:13.390\nNow we're adding\na controller to it as well.\n\n86\n00:05:13.390 --> 00:05:18.212\nLater on in this series, we'll see how\nwe can create a model, a views and\n\n87\n00:05:18.212 --> 00:05:22.876\ncontrollers all at the same time for\na object that we wanna represent,\n\n88\n00:05:22.876 --> 00:05:23.761\nlike a Post.\n\n89\n00:05:23.761 --> 00:05:27.416\nBut in this case, it's okay to go\npiece-wise and build a model first, and\n\n90\n00:05:27.416 --> 00:05:30.102\nthen add controllers with\na separate Rails generate.\n\n91\n00:05:31.623 --> 00:05:34.530\nSo here we've got our\ncontroller file that's there.\n\n92\n00:05:34.530 --> 00:05:37.505\nAnd we can see that it added routes for\nus.\n\n93\n00:05:37.505 --> 00:05:43.495\nWe have a couple of views that have been\ncreated, two because we had two actions.\n\n94\n00:05:43.495 --> 00:05:47.675\nAnd, if we did something like making a,\n\n95\n00:05:47.675 --> 00:05:50.840\nI'm gonna choose a different name,\njust so we don't conflict with this one.\n\n96\n00:05:50.840 --> 00:05:56.080\nBut let's say we left the actions\noff the generate command,\n\n97\n00:05:56.080 --> 00:05:58.630\nthen we get less stuff generated for us.\n\n98\n00:05:58.630 --> 00:06:00.290\nWe don't get the views, and\n\n99\n00:06:00.290 --> 00:06:04.490\nas we'll look at the source code,\nit will make those methods for us.\n\n100\n00:06:04.490 --> 00:06:08.370\nBut in this case, I've chosen to allow\nthe generator to make these files,\n\n101\n00:06:08.370 --> 00:06:12.350\nbecause it's just really handy to be\nable to have these files created for\n\n102\n00:06:12.350 --> 00:06:14.990\nus, cuz now we don't need to make\na empty file in the text editor, and\n\n103\n00:06:14.990 --> 00:06:18.140\nmake sure we get naming right,\nand all that kinda stuff.\n\n104\n00:06:20.040 --> 00:06:22.423\nSo, let's take a look inside a Post\ncontroller and see what that looks like.\n\n105\n00:06:25.169 --> 00:06:32.024\nSo, just like we did with our views\nepisode, we've got these blank views here.\n\n106\n00:06:32.024 --> 00:06:37.052\nAnd this time, we're actually gonna\nwrite code to do things in here,\n\n107\n00:06:37.052 --> 00:06:40.815\nbecause here from make,\nwe want to generate a Post.\n\n108\n00:06:40.815 --> 00:06:43.170\nWe actually wanna generate a Post and\nsee what happens.\n\n109\n00:06:43.170 --> 00:06:52.060\nAnd then for print, we wanna show a Post\nand this action is gonna render a view.\n\n110\n00:06:52.060 --> 00:06:56.448\nSo, what would this render\nafter a Post is made?\n\n111\n00:06:56.448 --> 00:07:01.200\nOften times, in situations like this,\nwe might use like a http reader app\n\n112\n00:07:01.200 --> 00:07:05.880\nwhere instead of showing something\nlike I've made this many Posts,\n\n113\n00:07:05.880 --> 00:07:10.040\nwe just get redirected to another page,\nwhere we see a list of all the Posts that\n\n114\n00:07:10.040 --> 00:07:14.170\nhave been madeaAnd that's\nthe common thing to do.\n\n115\n00:07:14.170 --> 00:07:18.860\nBut in this case,\nwe're gonna choose to simply, in our view,\n\n116\n00:07:18.860 --> 00:07:21.570\nshow how many Posts were created.\n\n117\n00:07:21.570 --> 00:07:25.570\nSo we can kinda see how models,\ncontrollers and views interconnect.\n\n118\n00:07:27.180 --> 00:07:30.190\nSo, my personal style,\nI like to write comments for\n\n119\n00:07:30.190 --> 00:07:34.980\nwhat my code is gonna do, just to kinda\nhelp me get to where I need to go.\n\n120\n00:07:34.980 --> 00:07:36.074\nSo I'm just gonna type that out.\n\n121\n00:07:40.730 --> 00:07:46.370\nSo, we're gonna show count of Posts\ncreated, and we've got our code here.\n\n122\n00:07:47.430 --> 00:07:50.179\nAnd let's open up our views, as well.\n\n123\n00:07:50.179 --> 00:07:55.162\nSo we've got a make.html.erb, and\n\n124\n00:07:55.162 --> 00:07:58.127\na print.html.erb.\n\n125\n00:07:58.127 --> 00:08:00.279\nAnd we can see that these look like.\n\n126\n00:08:00.279 --> 00:08:04.644\nThe same view templates that we saw\nbefore, it's a simple HTML file and\n\n127\n00:08:04.644 --> 00:08:07.210\nwe can type in erb in\nhere to fill this out.\n\n128\n00:08:09.380 --> 00:08:11.100\nSo let's make a post.\n\n129\n00:08:11.100 --> 00:08:12.071\nHow do we do that?\nRight now,\n\n130\n00:08:12.071 --> 00:08:14.088\nwe know that we have a database,\n\n131\n00:08:14.088 --> 00:08:17.394\nthat we got some structure\nin it to fit a post object.\n\n132\n00:08:17.394 --> 00:08:21.710\nBut in our code,\nwe actually need to create that object.\n\n133\n00:08:22.890 --> 00:08:27.940\nSo we can start writing out\npost cuz actually, we can call\n\n134\n00:08:27.940 --> 00:08:33.220\nit post1 since we'll create a couple\nof these, just to get a good count up.\n\n135\n00:08:34.520 --> 00:08:38.430\nAnd we're gonna call the class\nthat we created in our model,\n\n136\n00:08:39.710 --> 00:08:41.710\nso let me open that up.\n\n137\n00:08:44.015 --> 00:08:46.252\nPost.rb is just,\nright now there's not much there.\n\n138\n00:08:46.252 --> 00:08:51.112\nIt's a simple class that\ninherits from ApplicationRecord,\n\n139\n00:08:51.112 --> 00:08:54.050\nwhich is part of active record.\n\n140\n00:08:54.050 --> 00:08:55.260\nAnd there's nothing in here yet.\n\n141\n00:08:55.260 --> 00:09:00.258\nAnd we're really at this point,\nwe don't need to add anything else because\n\n142\n00:09:00.258 --> 00:09:03.850\nall of the default behavior\nof saving data to a field and\n\n143\n00:09:03.850 --> 00:09:08.090\nretrieving stuff is already\nbuilt into active record.\n\n144\n00:09:08.090 --> 00:09:11.120\nAnd we don't need any custom\ncode to accomplish that.\n\n145\n00:09:11.120 --> 00:09:12.920\nSo it's okay that this\nclass is empty right now.\n\n146\n00:09:14.200 --> 00:09:22.950\nBut we're gonna use it here to create,\nA post.\n\n147\n00:09:25.240 --> 00:09:29.720\nSo create is a method on Post.\n\n148\n00:09:29.720 --> 00:09:33.640\nAnd it takes a string of arguments that\nmatch the parameters that we've set.\n\n149\n00:09:35.130 --> 00:09:38.670\nAnd if you recall, last episode\nwe gave it a body and a title.\n\n150\n00:09:40.380 --> 00:09:42.096\nSo here's what the syntax for\nthat looks like.\n\n151\n00:09:48.922 --> 00:09:50.370\nThis is a hash.\n\n152\n00:09:51.520 --> 00:09:54.930\nAnd the hash keys\nare written in this syntax,\n\n153\n00:09:54.930 --> 00:09:59.280\nwhere it kind of looks like a variable\nname, but there's a colon after it.\n\n154\n00:09:59.280 --> 00:10:03.040\nThis is actually something that most\nrecent version of Ruby introduced.\n\n155\n00:10:03.040 --> 00:10:05.442\nThey used to have to type\nin something like this,\n\n156\n00:10:10.217 --> 00:10:16.090\nWhere you actually declare\nbody as a key in this hash.\n\n157\n00:10:17.260 --> 00:10:23.540\nAnd also something that's not visible\nhere, which is this is a feature\n\n158\n00:10:23.540 --> 00:10:27.900\nof Ruby where you can leave\nstuff off if it's not necessary.\n\n159\n00:10:27.900 --> 00:10:34.060\nAnd in this case, these curly braces\nthat determine that this is a hash.\n\n160\n00:10:34.060 --> 00:10:36.334\nAnd just to cover what\na hash is really quickly.\n\n161\n00:10:36.334 --> 00:10:39.929\nAn array,\nsay you wanna store a list of data or\n\n162\n00:10:39.929 --> 00:10:45.150\nhave data associated with an object,\nlike in this case our post.\n\n163\n00:10:46.350 --> 00:10:50.400\nWe can give the data certain\nnames called keys, so\n\n164\n00:10:50.400 --> 00:10:54.140\nthat we can reference it later when\nwe're using it somewhere else.\n\n165\n00:10:54.140 --> 00:10:59.044\nSo it's a way of taking several bits\nof information, putting it together\n\n166\n00:10:59.044 --> 00:11:03.485\ninto a single structure, and\nthen passing that structure along.\n\n167\n00:11:06.666 --> 00:11:08.900\nSo going back to our code here.\n\n168\n00:11:08.900 --> 00:11:11.171\nWe've got our body, let's add our title.\n\n169\n00:11:15.760 --> 00:11:20.995\nAnd just for spacing, I've chosen to\nhit return here because if I don't,\n\n170\n00:11:20.995 --> 00:11:22.916\nmy line is gonna wrap over.\n\n171\n00:11:22.916 --> 00:11:28.128\nAnd I like things to line up, so I can\neasily see what the values of the data for\n\n172\n00:11:28.128 --> 00:11:31.060\nthe post that I'm creating is.\n\n173\n00:11:31.060 --> 00:11:34.797\nSo that makes it nice and easy to\nline up and see what's going on, but\n\n174\n00:11:34.797 --> 00:11:37.630\nyou don't have to do that,\nthis is just fine also.\n\n175\n00:11:41.769 --> 00:11:45.060\nSo I'm creating my post and\nlet's create another post.\n\n176\n00:11:47.470 --> 00:11:48.674\nSo I've just duplicated this line of code.\n\n177\n00:11:48.674 --> 00:11:52.183\nI'm gonna change this 1 to a 2\ncuz this is post number 2, and\n\n178\n00:11:52.183 --> 00:11:54.083\nlet's give it a different body.\n\n179\n00:11:58.368 --> 00:11:58.972\nJust saying hello.\n\n180\n00:12:02.413 --> 00:12:06.480\nAnd then for a title, I'll pick YYZ.\n\n181\n00:12:06.480 --> 00:12:10.080\nI'm a really big fan of Rush, and\nit's one of their sweetest songs.\n\n182\n00:12:10.080 --> 00:12:12.190\nSo we've got a title, we've got a body.\n\n183\n00:12:12.190 --> 00:12:15.860\nWe've got two posts,\nand this create method,\n\n184\n00:12:15.860 --> 00:12:20.645\nthis actually will take this data and\nsave it to the database.\n\n185\n00:12:20.645 --> 00:12:22.330\nIt will persist it in one call.\n\n186\n00:12:23.630 --> 00:12:29.060\nAnother approach we can use is to\ncall new on Post instead of create.\n\n187\n00:12:30.260 --> 00:12:34.570\nAnd this creates a post object that\ncan be manipulated by a program.\n\n188\n00:12:34.570 --> 00:12:37.450\nBut it's not gonna save it\nunless we call save on it.\n\n189\n00:12:39.790 --> 00:12:42.405\nSo we'll leave these two like this\njust to show the two different ways of\n\n190\n00:12:42.405 --> 00:12:43.242\ncreating something.\n\n191\n00:12:43.242 --> 00:12:48.680\nAnd it's worth just kinda jumping\nover to Active Record docs.\n\n192\n00:12:49.680 --> 00:12:53.250\nThere's a ton of stuff here with\nActive Record, a ton of methods.\n\n193\n00:12:53.250 --> 00:12:58.610\nAnd generally speaking, as a Rails\ndeveloper or as a developer generally,\n\n194\n00:12:58.610 --> 00:13:01.210\nit's pretty hard to memorize all\nof this stuff all at once and\n\n195\n00:13:01.210 --> 00:13:02.770\njust spout it out from memory.\n\n196\n00:13:02.770 --> 00:13:05.269\nUsually, you have your docs with you so\nyou can kinda see, okay,\n\n197\n00:13:05.269 --> 00:13:06.550\nI know I wanna create something.\n\n198\n00:13:06.550 --> 00:13:08.089\nHow do I do that with Active Record?\n\n199\n00:13:08.089 --> 00:13:14.097\nSo I love searching documentation pages,\ncreate, there we go.\n\n200\n00:13:14.097 --> 00:13:19.550\nHere we can see the examples that I'm\ncovering with creating post objects.\n\n201\n00:13:21.875 --> 00:13:24.582\nAll right, so we've created our posts.\n\n202\n00:13:24.582 --> 00:13:26.892\nWe've saved them.\n\n203\n00:13:26.892 --> 00:13:30.509\nThey're being created in different ways.\n\n204\n00:13:30.509 --> 00:13:32.428\nAnd just gonna clean up the code\na little bit, look at it.\n\n205\n00:13:32.428 --> 00:13:38.597\nAnd the next step is to do\nsomething in the view so\n\n206\n00:13:38.597 --> 00:13:47.115\nthat I'll get some feedback with\nwhat happened after this runs.\n\n207\n00:13:47.115 --> 00:13:50.040\nCuz if I just run this now, it will work.\n\n208\n00:13:50.040 --> 00:13:54.420\nBut what I'm gonna see is this,\nwhich isn't very helpful\n\n209\n00:13:54.420 --> 00:13:58.830\nbecause it doesn't really give me any kind\nof indication that I've taken an action.\n\n210\n00:13:58.830 --> 00:13:59.999\n&gt;&gt; Now Manny, real quick about that.\n\n211\n00:13:59.999 --> 00:14:06.587\nYou said after this has happened, so this\nmake is going to present the make view.\n\n212\n00:14:06.587 --> 00:14:11.768\nNot necessarily after all the code is run,\ndid I understand that correctly?\n\n213\n00:14:11.768 --> 00:14:16.219\n&gt;&gt; Yeah, what's gonna happen\nis that this make action,\n\n214\n00:14:16.219 --> 00:14:19.750\nthis is gonna be called by the router.\n\n215\n00:14:19.750 --> 00:14:23.910\nSo what we're gonna do is we're gonna\ngo to our browser and browse to\n\n216\n00:14:23.910 --> 00:14:29.840\nposts/make which is gonna get.\n\n217\n00:14:29.840 --> 00:14:33.060\nLet me open up that router file so\nwe can see what that looks like.\n\n218\n00:14:33.060 --> 00:14:35.350\nSo this here is gonna get posts/make.\n\n219\n00:14:35.350 --> 00:14:38.633\nIt's gonna match this and\nbecause of Rails magic,\n\n220\n00:14:38.633 --> 00:14:42.170\nit's gonna execute in\nthe controller a make action.\n\n221\n00:14:42.170 --> 00:14:48.400\nSo this code is gonna run and then just by\ndefault, basic Rails behavior, it's gonna\n\n222\n00:14:48.400 --> 00:14:54.950\nexecute and run the view for that with\nthe matching name, which is here.\n\n223\n00:14:54.950 --> 00:14:59.892\nAnd as I said before, this isn't\nvery helpful, so we'll update this.\n\n224\n00:14:59.892 --> 00:15:03.201\nMaybe we'll display how many posts we\ncurrently have, something like that.\n\n225\n00:15:03.201 --> 00:15:08.385\nSo we can open a paragraph tag and\nwrite something like You have,\n\n226\n00:15:08.385 --> 00:15:11.368\nand here's where we want our count.\n\n227\n00:15:12.900 --> 00:15:14.506\nSo I'm just gonna write that\nin as a placeholder here.\n\n228\n00:15:14.506 --> 00:15:16.130\nI'm gonna come back to it in a second.\n\n229\n00:15:17.910 --> 00:15:18.980\nWe have that many posts.\n\n230\n00:15:20.290 --> 00:15:26.579\nAnd to kind of review our view syntax,\nwe wanna use our erb tags here.\n\n231\n00:15:28.370 --> 00:15:33.695\nAnd we wanna just print out\nthe number of posts that we have so\n\n232\n00:15:33.695 --> 00:15:38.076\nfar, which we can do by\nrunning Posts.length.\n\n233\n00:15:42.285 --> 00:15:46.020\nAnd honestly, now I'm a little\nconcerned that this is not gonna work.\n\n234\n00:15:46.020 --> 00:15:48.172\nWe'll roll with it and see what happens,\n\n235\n00:15:48.172 --> 00:15:50.639\nI might be missing another\nmethod call in here.\n\n236\n00:15:50.639 --> 00:15:54.608\nBut programming is kind of an experimental\nthing, so we'll try it and\n\n237\n00:15:54.608 --> 00:15:55.695\nsee what happens.\n\n238\n00:15:58.165 --> 00:16:04.519\nSo let's go over to our browser,\nlocalhost-3000/ Post/make.\n\n239\n00:16:07.301 --> 00:16:10.161\nAnd I got an error.\n\n240\n00:16:10.161 --> 00:16:15.540\nAnd the error is that I've used a plural\nposts here instead of a singular.\n\n241\n00:16:15.540 --> 00:16:16.636\nSo let's fix that and try again.\n\n242\n00:16:20.224 --> 00:16:22.806\nAnd now it's saying that I don't\nhave a length on post, but\n\n243\n00:16:22.806 --> 00:16:24.780\nif you think about it,\nit kinda makes sense.\n\n244\n00:16:24.780 --> 00:16:30.590\nBecause post is a representation\nof a post thing,\n\n245\n00:16:30.590 --> 00:16:35.680\nand it doesn't really reference\nthe collection of posts that I have.\n\n246\n00:16:35.680 --> 00:16:39.600\nSo, I actually need to\ndo something like this,\n\n247\n00:16:39.600 --> 00:16:45.050\nwhere I'm calling this all method,\nand what this does is.\n\n248\n00:16:45.050 --> 00:16:47.845\nIt queries posts for\nall the posts that exists, and\n\n249\n00:16:47.845 --> 00:16:49.543\nthen I can call length on that.\n\n250\n00:16:54.556 --> 00:16:56.390\nAll right, so now our code works.\n\n251\n00:16:56.390 --> 00:16:59.260\nAnd you've noticed I've refreshed\nthis a couple of times.\n\n252\n00:16:59.260 --> 00:17:03.960\nMy errors were in the view, which meant\nthat my controller code was running all\n\n253\n00:17:03.960 --> 00:17:08.926\nthat time and it created those posts three\ntimes and that's why I have six here.\n\n254\n00:17:08.926 --> 00:17:12.895\n&gt;&gt; So this dot all method that is\nessentially querying the database getting\n\n255\n00:17:12.895 --> 00:17:17.123\nall the records for that given model and\nthen I'm guessing that's an array or\n\n256\n00:17:17.123 --> 00:17:19.807\na list or\nwhatever the data structure is in Ruby.\n\n257\n00:17:19.807 --> 00:17:23.022\nAnd then calling dot length on that which\nessentially gives us the count of how many\n\n258\n00:17:23.022 --> 00:17:23.917\nare in there, right?\n\n259\n00:17:23.917 --> 00:17:25.820\n&gt;&gt; Yeah, exactly.\n\n260\n00:17:25.820 --> 00:17:30.070\nExactly, and this is one of the things\nthat we get for free with Active Record.\n\n261\n00:17:30.070 --> 00:17:31.840\nBut we can extend this.\n\n262\n00:17:31.840 --> 00:17:32.740\nWe can actually write,\n\n263\n00:17:32.740 --> 00:17:37.720\nand we'll get into this later on,\nbut we can write our own scope.\n\n264\n00:17:37.720 --> 00:17:44.020\nSay, we want last year's,\nLast year's posts, something like that.\n\n265\n00:17:44.020 --> 00:17:45.780\nWe can write code like this.\n\n266\n00:17:45.780 --> 00:17:50.970\nAnd then in our view,\nthat's only wanted account from last year,\n\n267\n00:17:50.970 --> 00:17:55.780\nthen we can use something like this\nsyntax which is nice because it lets\n\n268\n00:17:55.780 --> 00:18:00.930\nus create meaningful names for our scopes.\n\n269\n00:18:00.930 --> 00:18:02.890\nAnd when we actually write it on the code,\n\n270\n00:18:02.890 --> 00:18:06.000\nit almost reads like\nEnglish Post.last_year.length.\n\n271\n00:18:06.000 --> 00:18:09.390\n&gt;&gt; Now Manny,\nyou used a word there that I've heard and\n\n272\n00:18:09.390 --> 00:18:12.080\nI've probably said it a bunch\nof times in different contexts.\n\n273\n00:18:12.080 --> 00:18:15.359\nI just wanna make sure,\ncould you explain what you mean by scope?\n\n274\n00:18:15.359 --> 00:18:17.080\n&gt;&gt; Scope?\n&gt;&gt; In this context.\n\n275\n00:18:17.080 --> 00:18:18.930\n&gt;&gt; Thanks for pointing that out.\n\n276\n00:18:18.930 --> 00:18:23.520\nA scope is basically a query,\nthat's what's happening under the scenes.\n\n277\n00:18:23.520 --> 00:18:26.640\nSo when I do like Post.all.\n\n278\n00:18:26.640 --> 00:18:28.801\nThe query is get me back everything.\n\n279\n00:18:28.801 --> 00:18:33.336\nSo scope is a Rails word,\nmeaning specifically that it's\n\n280\n00:18:33.336 --> 00:18:37.407\na query that can be chained\nwith another query to keep\n\n281\n00:18:37.407 --> 00:18:42.290\nzooming in on objects that you\nwanna get out from a resource.\n\n282\n00:18:42.290 --> 00:18:46.240\nSo having something like all.last_year.\n\n283\n00:18:46.240 --> 00:18:48.970\nThat doesn't really make\na whole lot of sense because\n\n284\n00:18:48.970 --> 00:18:50.140\nwe don't really need the all.\n\n285\n00:18:51.270 --> 00:18:56.630\nBut say, we had a post about cars.\n\n286\n00:18:56.630 --> 00:18:59.619\nSo we could write another scope that say,\nwe had tagging on our model, so\n\n287\n00:18:59.619 --> 00:19:01.142\nwe could know what our post is about.\n\n288\n00:19:01.142 --> 00:19:03.140\nAnd then we could write a query on that.\n\n289\n00:19:04.270 --> 00:19:06.220\nAnd then call that.\n\n290\n00:19:06.220 --> 00:19:08.530\nAnd now we've got the syntax here.\n\n291\n00:19:09.610 --> 00:19:14.640\nSo in real specifically to recap,\nscopes are up queries that\n\n292\n00:19:14.640 --> 00:19:18.670\ncome in, they get all for free, we can\nwrite our own and we can chain them.\n\n293\n00:19:21.250 --> 00:19:24.310\nSo I'm gonna bring this back\nto the code I had before.\n\n294\n00:19:24.310 --> 00:19:26.500\nNot that far back,\nbecause that didn't work.\n\n295\n00:19:26.500 --> 00:19:29.470\nWe need post.all and then our dot length.\n\n296\n00:19:30.620 --> 00:19:34.972\nAnd we'll work on our other\naction which is to actually\n\n297\n00:19:34.972 --> 00:19:37.721\ndisplay the content of that post.\n\n298\n00:19:37.721 --> 00:19:40.569\nSo here we're simply doing a count but\n\n299\n00:19:40.569 --> 00:19:45.298\nlet's say we wanted to get a specific\npost and say what it says.\n\n300\n00:19:45.298 --> 00:19:48.100\nSo we've got our second\ncontroller action here.\n\n301\n00:19:48.100 --> 00:19:52.640\nAnd in this, we're not just gonna\nshow a post but to break this down,\n\n302\n00:19:52.640 --> 00:19:57.070\nwe're gonna query for a post and\nthen send it to the view for display.\n\n303\n00:19:59.360 --> 00:20:00.870\nSo really what the controller\nis doing here,\n\n304\n00:20:00.870 --> 00:20:03.690\nis the controller is gonna\nlook up that record for us and\n\n305\n00:20:03.690 --> 00:20:07.960\nthen pass it on to the view can\nwrite HTML there to display it.\n\n306\n00:20:09.880 --> 00:20:16.658\nAnd the way that looks is a we\nmake a variable called host.\n\n307\n00:20:16.658 --> 00:20:22.595\nAnd we're gonna set that equal\nto the post model dot find 1.\n\n308\n00:20:22.595 --> 00:20:24.220\nNow why the number 1?\n\n309\n00:20:24.220 --> 00:20:30.510\nThis is the primary key or\nthe find method searches by primary key.\n\n310\n00:20:30.510 --> 00:20:35.373\nSo if we know exactly the post that we're\nthinking of and this should work because\n\n311\n00:20:35.373 --> 00:20:39.969\nwe have six in database, so primary key\nof 1 is going to point to something.\n\n312\n00:20:39.969 --> 00:20:45.790\nBut generally speaking, this is a little\nunclear as to what exactly we're doing.\n\n313\n00:20:45.790 --> 00:20:48.521\nWe could also do something\nlike post.first or\n\n314\n00:20:48.521 --> 00:20:52.510\npost.last if we just want\nto get the very first one,\n\n315\n00:20:52.510 --> 00:20:56.360\nbe guaranteed to get the very first one or\nget the very last one.\n\n316\n00:20:56.360 --> 00:21:01.760\nAnd by first and last, I mean that the\ndatabase has started to accumulate these\n\n317\n00:21:01.760 --> 00:21:04.400\nand we want to be able to pick them out.\n\n318\n00:21:06.461 --> 00:21:11.098\nSo first,\nwe'll do them two different ways.\n\n319\n00:21:11.098 --> 00:21:16.980\nSay we got the first one that way and\nyou'll notice that I just added and\n\n320\n00:21:16.980 --> 00:21:22.220\nat sign to this variable name that\nto changed it's variable scope\n\n321\n00:21:22.220 --> 00:21:28.450\nfrom local to this action\nto accessible in the view.\n\n322\n00:21:28.450 --> 00:21:34.080\nSo what that means is that right now here\nthe way these variables are written in my\n\n323\n00:21:34.080 --> 00:21:41.690\nmake view, I can't access these variables\nbecause they're not instance variables.\n\n324\n00:21:43.672 --> 00:21:50.510\nSo since I actually want to use access\ndata associated with this Post.first,\n\n325\n00:21:50.510 --> 00:21:56.640\nand I'm assigning it to that variable,\nI need to scope it correctly.\n\n326\n00:21:59.060 --> 00:22:04.590\nSo, Post.last and so\nall this is doing is querying.\n\n327\n00:22:05.680 --> 00:22:06.630\n&gt;&gt; So, Manny, real quick.\n\n328\n00:22:06.630 --> 00:22:12.250\nDo we need that one in parentheses with\nfirst or do we only need it with find?\n\n329\n00:22:12.250 --> 00:22:17.590\nMaybe I misunderstood, but .first,\ndoes that need an argument passed to it?\n\n330\n00:22:17.590 --> 00:22:20.280\nOr is it just gonna guarantee\nit is the first one?\n\n331\n00:22:20.280 --> 00:22:22.600\nOr is that defined that\nit needs the argument?\n\n332\n00:22:22.600 --> 00:22:26.170\n&gt;&gt; No, this is totally a typo because\nfirst doesn't need an argument at all.\n\n333\n00:22:26.170 --> 00:22:30.020\nIn fact, I think it'll break because\nit doesn't take any arguments.\n\n334\n00:22:30.020 --> 00:22:33.390\nWe really want find because\nthe first is just the first,\n\n335\n00:22:33.390 --> 00:22:34.560\nit doesn't need an argument there.\n\n336\n00:22:34.560 --> 00:22:35.910\nSo thanks for catching that.\n\n337\n00:22:38.359 --> 00:22:40.926\nSo here, we wanna take this code out, so\n\n338\n00:22:40.926 --> 00:22:45.920\nit doesn't interfere with this later on\nand let's go over to our print route.\n\n339\n00:22:47.370 --> 00:22:52.082\nNow here, one thing that I like to\ndo is just check the data coming\n\n340\n00:22:52.082 --> 00:22:54.192\nin before I write more code.\n\n341\n00:22:54.192 --> 00:22:56.576\nI don't wanna write\na bunch of new code and\n\n342\n00:22:56.576 --> 00:23:00.780\nthen get bogged down with an error\nthat happened a few steps back.\n\n343\n00:23:00.780 --> 00:23:03.370\nSo I'm just gonna simply\nright code that's gonna\n\n344\n00:23:03.370 --> 00:23:05.920\ndisplay what's inside those variables for\nme here.\n\n345\n00:23:08.330 --> 00:23:12.770\nSo I'm gonna do post1.inspect.\n\n346\n00:23:12.770 --> 00:23:17.490\nInspect is a method that\nall Ruby objects get.\n\n347\n00:23:17.490 --> 00:23:20.930\nSo I could do 1.inspect and\nit'll tell me that it's a number and\n\n348\n00:23:20.930 --> 00:23:23.330\nit'll tell me it's object ID and\nthings like that.\n\n349\n00:23:23.330 --> 00:23:26.710\nBut in this case, since I'm talking\nabout an operative record object,\n\n350\n00:23:26.710 --> 00:23:28.990\nit's gonna show me all the data about it.\n\n351\n00:23:30.090 --> 00:23:33.650\nAnd that'll let me know that okay,\nI've got the right objects and\n\n352\n00:23:33.650 --> 00:23:36.910\nthen that's working so\nI can focus on writing my view code.\n\n353\n00:23:39.392 --> 00:23:44.660\nSo I've got that saved, and\nI'm gonna change my URL here.\n\n354\n00:23:46.652 --> 00:23:54.940\nAnd you see what I get is this text that\nshows that I've got a post of some kind.\n\n355\n00:23:54.940 --> 00:23:57.012\nIt's got an ID of one, it's got a body.\n\n356\n00:23:57.012 --> 00:23:58.347\nSo this is good, this is my code.\n\n357\n00:23:58.347 --> 00:23:59.874\nThese are my posts.\n\n358\n00:23:59.874 --> 00:24:03.667\nMy code's working correctly.\n\n359\n00:24:03.667 --> 00:24:08.347\n&gt;&gt; So now I'm knowing that,\nI can go ahead and structure this out, so\n\n360\n00:24:08.347 --> 00:24:11.867\nthat I'm actually displaying\nthis in a neat way.\n\n361\n00:24:11.867 --> 00:24:17.202\nAnd what makes sense to me is to maybe\nmove through all of these posts and\n\n362\n00:24:17.202 --> 00:24:19.741\ndisplay them as a blog post mail.\n\n363\n00:24:19.741 --> 00:24:23.642\nSo we're gonna put our title inside\nof a heading of some kind and\n\n364\n00:24:23.642 --> 00:24:25.860\nwe'll put our body in a paragraph.\n\n365\n00:24:28.709 --> 00:24:30.646\nSo to loop through this,\n\n366\n00:24:30.646 --> 00:24:37.250\nwe're gonna use a similar syntax to\nwhat we used to count from one to ten.\n\n367\n00:24:37.250 --> 00:24:41.968\nBut instead, we're going to run\nthis Post.all which is gonna\n\n368\n00:24:41.968 --> 00:24:46.953\ngive us all the posts that we've got and\nthen call.each on that and\n\n369\n00:24:46.953 --> 00:24:50.441\n.each is,\nthis is part of the ruby language.\n\n370\n00:24:50.441 --> 00:24:53.250\nIt's how we iterate over a data structure.\n\n371\n00:24:56.042 --> 00:24:59.832\nSo for all our posts and\nwe're gonna reference them as p.\n\n372\n00:24:59.832 --> 00:25:05.390\nWe'll put out end block in there and\nthen we'll have our title.\n\n373\n00:25:13.126 --> 00:25:19.995\nAnd I've got this app running on my\ncomputer that will complete snippets for\n\n374\n00:25:19.995 --> 00:25:25.380\nme and I just got it, and\nit's been correcting my grammar.\n\n375\n00:25:25.380 --> 00:25:30.966\nSo I'm gonna go ahead and\njust turn that off right now,\n\n376\n00:25:30.966 --> 00:25:34.618\ncuz I can't write p.t without it.\n\n377\n00:25:34.618 --> 00:25:35.863\nSo got that done.\n\n378\n00:25:35.863 --> 00:25:39.160\nAnd now I can do this,\nwhich is what I wanted.\n\n379\n00:25:44.018 --> 00:25:45.325\nSo we've got our title.\n\n380\n00:25:45.325 --> 00:25:47.182\nNext is our body inside\nof a paragraph tag.\n\n381\n00:25:51.987 --> 00:25:53.069\nThat's good.\n\n382\n00:25:53.069 --> 00:25:57.933\nAnd this is gonna display our title twice,\nso we can change this to .body and\n\n383\n00:25:57.933 --> 00:26:02.645\nyou'll notice I'm just using these as\nmethod names as if they already had\n\n384\n00:26:02.645 --> 00:26:04.100\nthem or defined them.\n\n385\n00:26:04.100 --> 00:26:04.723\nI didn't define them.\n\n386\n00:26:04.723 --> 00:26:09.829\nThis is more stuff that\nRails in Active Record give\n\n387\n00:26:09.829 --> 00:26:14.691\nus is that we know that\nwe've defined a title and\n\n388\n00:26:14.691 --> 00:26:17.750\na body here in our migration.\n\n389\n00:26:17.750 --> 00:26:21.261\nSo what's happening is that\nwhen this method, sorry,\n\n390\n00:26:21.261 --> 00:26:24.175\nwhen this class inherits\nfrom Active Record,\n\n391\n00:26:24.175 --> 00:26:29.572\nit automatically gets methods created for\nit and match the names that I've given it.\n\n392\n00:26:29.572 --> 00:26:31.332\nSo jumping over here to my view,\n\n393\n00:26:31.332 --> 00:26:35.390\nI can write code like this just reference\ntitle as it is or the body as it is.\n\n394\n00:26:40.031 --> 00:26:41.392\nSo lets run that and see what happens.\n\n395\n00:26:45.927 --> 00:26:46.958\nGreat, so that worked.\n\n396\n00:26:46.958 --> 00:26:47.749\nWe've got our title.\n\n397\n00:26:47.749 --> 00:26:48.946\nWe've got our body and\n\n398\n00:26:48.946 --> 00:26:52.477\nthat's iterating over all the posts\nthat we have in our database.\n\n399\n00:26:52.477 --> 00:26:55.751\n&gt;&gt; Now Manny, even though we're\nseeing duplications of title and\n\n400\n00:26:55.751 --> 00:26:59.810\nbody in our migrations, we never said\nthings had to be unique or anything.\n\n401\n00:26:59.810 --> 00:27:02.361\nBut those are actually different posts.\n\n402\n00:27:02.361 --> 00:27:06.000\nThey're probably gonna have\na different created at time and\n\n403\n00:27:06.000 --> 00:27:08.880\nat least a different primary key, correct?\n\n404\n00:27:08.880 --> 00:27:10.238\n&gt;&gt; Exactly, exactly.\n\n405\n00:27:10.238 --> 00:27:15.259\nWhen we had that error before and\nwe ran the make action three times,\n\n406\n00:27:15.259 --> 00:27:18.180\nwe duplicated that code over and over.\n\n407\n00:27:18.180 --> 00:27:23.646\nWe ran that code again and then we\nhad these values hard coded in there,\n\n408\n00:27:23.646 --> 00:27:30.053\nbut we can add ID to this just to convince\nourselves that our loop is working right.\n\n409\n00:27:30.053 --> 00:27:32.120\nJust to make sure,\ncuz you never know with data.\n\n410\n00:27:32.120 --> 00:27:33.125\nIt can surprise you and there we go.\n\n411\n00:27:33.125 --> 00:27:36.138\nWe can see that the IDs are different for\nall these posts.\n\n412\n00:27:36.138 --> 00:27:39.148\n&gt;&gt; Now, Manny and\nyou're showing us how to use these.\n\n413\n00:27:39.148 --> 00:27:42.862\nBut ultimately, I've got a feeling that\nwe're probably gonna make some additional\n\n414\n00:27:42.862 --> 00:27:45.190\nmodifications as we build out our app too.\n\n415\n00:27:45.190 --> 00:27:48.650\nBecause we're always gonna create\nthe exact same posts every time.\n\n416\n00:27:48.650 --> 00:27:53.560\nWe're not always going to like\nget all of them, particularly.\n\n417\n00:27:53.560 --> 00:27:55.113\nAm I right in that assumption?\n\n418\n00:27:55.113 --> 00:27:57.031\n&gt;&gt; Yeah, absolutely, absolutely.\n\n419\n00:27:57.031 --> 00:28:01.199\nWe're gonna want to customize\nour posts to more closely match,\n\n420\n00:28:01.199 --> 00:28:04.680\nthe actual logic that we\nwant our post to have.\n\n421\n00:28:04.680 --> 00:28:05.470\nSo for example,\n\n422\n00:28:05.470 --> 00:28:10.220\nif we don't want to have our posts have\nthe same title as a different post,\n\n423\n00:28:10.220 --> 00:28:15.050\nyou mentioned uniqueness just making\nsure we don't have duplicate content.\n\n424\n00:28:15.050 --> 00:28:19.629\nSo that's one thing we can have\nis code that will check to see if\n\n425\n00:28:20.750 --> 00:28:23.930\nfield has already been used and\ngot value, and then do things with it.\n\n426\n00:28:25.060 --> 00:28:26.724\nSo that's where we're going with this.\n\n427\n00:28:26.724 --> 00:28:30.760\nAnd just to recap, we can create a model.\n\n428\n00:28:32.050 --> 00:28:35.550\nWe can integrate that model with\nour views and our controllers, and\n\n429\n00:28:35.550 --> 00:28:39.930\ncall model code in our controllers,\nand display them in our views.\n\n430\n00:28:39.930 --> 00:28:40.431\n&gt;&gt; All right, Manny.\n\n431\n00:28:40.431 --> 00:28:44.492\nWell, you've definitely shown us how\nthat's made fairly easy with Rails and\n\n432\n00:28:44.492 --> 00:28:47.560\nthe associated tooling that\ncomes along with Rails.\n\n433\n00:28:47.560 --> 00:28:49.218\nSo thank you so much for that, but\n\n434\n00:28:49.218 --> 00:28:52.489\nwe definitely have a lot more before\nwe have a blog up and running.\n\n435\n00:28:52.489 --> 00:28:55.440\nSo stay tuned for\nmore Intro to Ruby on Rails.\n\n436\n00:28:55.440 --> 00:28:57.612\nBut for this episode,\nwe are definitely out of time.\n\n437\n00:28:57.612 --> 00:28:59.198\nSo signing off for DevProTV.\n\n438\n00:28:59.198 --> 00:29:00.570\nI've been your host Justin Dennison.\n\n439\n00:29:00.570 --> 00:29:01.877\n&gt;&gt; I'm Manny Rodriguez.\n\n440\n00:29:01.877 --> 00:29:03.328\n&gt;&gt; And we'll see you next time.\n\n441\n00:29:03.328 --> 00:29:09.351\n[MUSIC]\n\n",
          "vimeoId": "238588125"
        },
        {
          "description": "In this episode, Justin and Manny explore the REST architectural pattern that is aconvention in the Rails communities for mapping controller actions, views, and HTTP methods in a meaningful way. Manny also discusses the use of Create, Read, Update, and Delete (CRUD) when creating RESTful routes.",
          "length": "1452",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-introtorubyonrails/techskills-introtorubyonrails-6-1-1-intro_to_rest-101417-PGM.00_24_31_01.Still001.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-introtorubyonrails/techskills-introtorubyonrails-6-1-1-intro_to_rest-101417-PGM.00_24_31_01.Still001-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-introtorubyonrails/techskills-introtorubyonrails-6-1-1-intro_to_rest-101417-PGM.00_24_31_01.Still001-sm.jpg",
          "title": "Intro to REST",
          "transcript": "WEBVTT\n\n1\n00:00:00.000 --> 00:00:10.000\n[MUSIC]\n\n2\n00:00:12.449 --> 00:00:15.980\nGreetings everyone and welcome to\nanother exciting episode of DevPro TV.\n\n3\n00:00:15.980 --> 00:00:17.820\nI'm your host Justin Dennison and\n\n4\n00:00:17.820 --> 00:00:21.080\nwe're continuing on on our intro\nto root beyond rail series.\n\n5\n00:00:21.080 --> 00:00:26.050\nIn particular we're gonna be talking about\nREST and no, not talking about nap time.\n\n6\n00:00:26.050 --> 00:00:30.710\nBut instead how we're going to organize\ncertain portions of our application.\n\n7\n00:00:30.710 --> 00:00:35.196\nAnd here to guide us through these restful\nexperiences is Mr Manny Rodriguez.\n\n8\n00:00:35.196 --> 00:00:35.943\nHow you doing today, Manny?\n\n9\n00:00:35.943 --> 00:00:36.967\n&gt;&gt; I'm doing great, Justin.\n\n10\n00:00:36.967 --> 00:00:37.748\nHow are you doing?\n\n11\n00:00:37.748 --> 00:00:39.990\n&gt;&gt; I am doing fantastic.\n\n12\n00:00:39.990 --> 00:00:43.310\nAnd REST is kind of that weird thing.\n\n13\n00:00:43.310 --> 00:00:44.960\nI've done some web dev.\n\n14\n00:00:44.960 --> 00:00:48.975\nBut when you first introduce it to someone\nthey're like, rest yeah, I do like a good\n\n15\n00:00:48.975 --> 00:00:52.614\npillow and a blankie and no, no,\nno that's not what we're talking about.\n\n16\n00:00:52.614 --> 00:00:56.200\nSo ultimately, what is REST?\n\n17\n00:00:56.200 --> 00:00:58.512\n&gt;&gt; Right?\nIt seems like there are so\n\n18\n00:00:58.512 --> 00:01:04.200\nmany acronyms in web dev and\nso many disparate meanings.\n\n19\n00:01:04.200 --> 00:01:09.640\nBut REST stands for represent,\nrepresentational, that one's a doozy.\n\n20\n00:01:09.640 --> 00:01:13.400\nRepresentational state transfer,\nand what does that mean?\n\n21\n00:01:16.020 --> 00:01:19.660\nTruth is it was a paper written\nby a guy named Rory Fielding for\n\n22\n00:01:19.660 --> 00:01:23.040\nhis PhD dissertation some time ago.\n\n23\n00:01:23.040 --> 00:01:26.870\nAnd it was really influential in\nterms of computer architecture.\n\n24\n00:01:26.870 --> 00:01:29.870\nAll that sounds great, but\nwhat does that have to do with Rails?\n\n25\n00:01:29.870 --> 00:01:33.390\nAnd the reason why we're talking about\nREST, and taking a look into this,\n\n26\n00:01:33.390 --> 00:01:37.940\nis because the paradigm of REST,\nas it relates to Web Apps,\n\n27\n00:01:37.940 --> 00:01:43.000\nit's a really strong\nconvention over configuration\n\n28\n00:01:44.230 --> 00:01:51.490\nparadigm that Rails uses with the way\nthat we've been building out our routes.\n\n29\n00:01:51.490 --> 00:01:56.050\nAnd our controller actions and our models,\n\n30\n00:01:56.050 --> 00:02:01.010\nall of those those things,\nthink of it this way.\n\n31\n00:02:01.010 --> 00:02:02.750\nIt's really nice when there's\na set way of doing things.\n\n32\n00:02:02.750 --> 00:02:04.360\nThat's kinda the Rails way.\n\n33\n00:02:04.360 --> 00:02:08.810\nSo like everything else, Rails has made\na decision on, this is how we're gonna\n\n34\n00:02:08.810 --> 00:02:13.110\ndo routing, and do resource definition and\nbuild controllers out.\n\n35\n00:02:13.110 --> 00:02:17.440\nWe're gonna use the rest\nparadigm to do that, so\n\n36\n00:02:17.440 --> 00:02:23.790\nthat everything works the same way, and\nwe've got a pattern that we can follow.\n\n37\n00:02:23.790 --> 00:02:26.640\nBut still, there's still the question\nwhat is exactly is REST.\n\n38\n00:02:26.640 --> 00:02:28.502\nAt least as it relates to web development.\n\n39\n00:02:28.502 --> 00:02:32.416\nTo answer that, I want to talk about CRUD.\n\n40\n00:02:32.416 --> 00:02:34.709\nYep, another four letter acronym.\n\n41\n00:02:34.709 --> 00:02:37.293\nWe've got REST, we've got CRUD.\n\n42\n00:02:37.293 --> 00:02:38.339\nWhat are these things.\n\n43\n00:02:38.339 --> 00:02:43.354\nSo, CRUD refers to the life\ncycle of a data object.\n\n44\n00:02:43.354 --> 00:02:46.150\nWe are talking about blog posts.\n\n45\n00:02:46.150 --> 00:02:51.690\nAnd you know, last episode we wrote\nsome code that created some blog posts,\n\n46\n00:02:51.690 --> 00:02:53.220\nand some code that displayed them.\n\n47\n00:02:53.220 --> 00:02:57.900\nAnd we kind of gave them non-standard\nnames, like make and print.\n\n48\n00:02:57.900 --> 00:03:02.550\nAnd if one thing that programmers are good\nat is coming up with names for things, and\n\n49\n00:03:02.550 --> 00:03:07.190\nwe could probably come up with 15 or 20 or\nwho knows how many different names for\n\n50\n00:03:07.190 --> 00:03:09.310\nthe same actions.\n\n51\n00:03:09.310 --> 00:03:14.670\nAnd, again Rails is about\nconfiguration over convention.\n\n52\n00:03:14.670 --> 00:03:15.419\nExcuse me, I had that backwards.\n\n53\n00:03:15.419 --> 00:03:17.620\nConvention over configuration.\n\n54\n00:03:17.620 --> 00:03:20.760\nSo we've got names for\nthese things that are already built in.\n\n55\n00:03:22.070 --> 00:03:27.190\nSo what CRUD refers to is simply,\nCreate, Read, Update, and Delete.\n\n56\n00:03:27.190 --> 00:03:29.975\nThese are things that you do with\ndatabase items or with data objects.\n\n57\n00:03:29.975 --> 00:03:33.787\nYou know, you bring them into\nexistence like writing any blog post,\n\n58\n00:03:33.787 --> 00:03:38.384\nreading them so we've got a history of,\nsay a Reddit comments or Craigslist post,\n\n59\n00:03:38.384 --> 00:03:41.688\nand we're gonna read them from a database,\ndisplay them.\n\n60\n00:03:41.688 --> 00:03:44.340\nWe can update them.\n\n61\n00:03:44.340 --> 00:03:47.830\nYou're betting on eBay and\nyou won the item, and\n\n62\n00:03:47.830 --> 00:03:50.750\nnow the state of that object has changed.\n\n63\n00:03:50.750 --> 00:03:52.610\nIt's no longer an active option.\n\n64\n00:03:52.610 --> 00:03:54.490\nNow, with a finish option and\n\n65\n00:03:54.490 --> 00:03:58.300\nthere's a whole bunch more logic that\napplies to it so that's update and delete.\n\n66\n00:03:58.300 --> 00:04:00.760\nSometimes data just needs to go away.\n\n67\n00:04:00.760 --> 00:04:05.650\nThat Instagram post,\nthis needs to go away, so you delete it.\n\n68\n00:04:05.650 --> 00:04:10.230\nSo these items, create, read, update,\nand delete, we see them over and\n\n69\n00:04:10.230 --> 00:04:12.360\nover again in webdev.\n\n70\n00:04:12.360 --> 00:04:17.160\nAnd part of webdev, at least the kind of\napps that you would build with something\n\n71\n00:04:17.160 --> 00:04:22.270\nlike rails, revolve around creating,\nreading, updating, and deleting items.\n\n72\n00:04:23.660 --> 00:04:27.490\nSo I'm glad you've cleared that up,\nbecause rest and\n\n73\n00:04:27.490 --> 00:04:31.580\ncrud, when I go to sleep,\nsometimes I get a little crud right here.\n\n74\n00:04:31.580 --> 00:04:35.830\nBut it is more about these actions that\nwe can take own our specific data.\n\n75\n00:04:35.830 --> 00:04:39.710\nNow with these four actions, we pretty\nmuch have everything that we could\n\n76\n00:04:39.710 --> 00:04:42.230\npossible think of for\nthe most part, right?\n\n77\n00:04:42.230 --> 00:04:43.170\n&gt;&gt; Right, exactly.\n\n78\n00:04:43.170 --> 00:04:45.050\nFor the most part this covers everything,\n\n79\n00:04:45.050 --> 00:04:48.280\nanything that we want to\ndo with a piece of data.\n\n80\n00:04:48.280 --> 00:04:49.440\nThat still leaves a question.\n\n81\n00:04:49.440 --> 00:04:52.300\nWhat does crud have to do with REST,\n\n82\n00:04:52.300 --> 00:04:54.990\nbesides the fact that they're\nboth four letter acronyms.\n\n83\n00:04:54.990 --> 00:05:00.330\nAnd to do that,\nlet's bring up a diagram here\n\n84\n00:05:00.330 --> 00:05:04.890\nof what rest means in\nterms of a web dev app.\n\n85\n00:05:04.890 --> 00:05:10.190\nAnd, again, now REST as a whole is\nbeyond the scope of this video.\n\n86\n00:05:10.190 --> 00:05:14.450\nIt's fascinating paper but\nit's also hundreds of pages long.\n\n87\n00:05:14.450 --> 00:05:17.720\nSo feel free to check that out and look\nat it because there's all kinds of other\n\n88\n00:05:17.720 --> 00:05:22.370\nstuff besides just these seven things\nthat I'm gonna talk about now.\n\n89\n00:05:22.370 --> 00:05:28.900\nBut, from that architecture came\na standardized way of naming routes,\n\n90\n00:05:28.900 --> 00:05:32.970\nof naming actions that we're gonna\nsee over and over again in Rails.\n\n91\n00:05:32.970 --> 00:05:35.640\nAnd that's why we're gonna dive into this.\n\n92\n00:05:37.460 --> 00:05:41.920\nSo from the top,\nwe've got our blog post and\n\n93\n00:05:41.920 --> 00:05:45.320\nwe want to do things like make it,\nedit it, delete it.\n\n94\n00:05:47.310 --> 00:05:53.770\nUpdate it, and these seven\nroutes cover all of those cases.\n\n95\n00:05:53.770 --> 00:05:58.140\nSo you've got this title here,\ncalled Verb, and\n\n96\n00:05:58.140 --> 00:06:02.910\nyou're probably wondering, is this\ngrammar that we're talking about now?\n\n97\n00:06:02.910 --> 00:06:07.460\nAnd specifically by verb,\nwe mean an HTTP verb.\n\n98\n00:06:07.460 --> 00:06:12.540\nWe introduced HTTP before as a protocol\nthat computers use to talk to each other.\n\n99\n00:06:12.540 --> 00:06:15.828\nAnd like any language,\nHTTP has nouns, and it has verbs.\n\n100\n00:06:15.828 --> 00:06:16.909\nHere is something.\n\n101\n00:06:16.909 --> 00:06:19.830\nHere is an action that I want\nyou to take on that something.\n\n102\n00:06:19.830 --> 00:06:26.800\nSo we'll call a GET request,\nor a GET call.\n\n103\n00:06:26.800 --> 00:06:29.940\nBasically it's HTTP for give me something.\n\n104\n00:06:31.040 --> 00:06:33.350\nAnd down here we've got post.\n\n105\n00:06:33.350 --> 00:06:37.110\nPost is http for here's something,\nI'd like you to take it.\n\n106\n00:06:38.200 --> 00:06:39.680\nHere's something new\nthat I'd like to take.\n\n107\n00:06:39.680 --> 00:06:43.720\nAnd that becomes a key distinction between\npost and put because as you can imagine,\n\n108\n00:06:43.720 --> 00:06:46.500\nput is similar to post in\nthat we're taking data and\n\n109\n00:06:46.500 --> 00:06:48.440\nwe're sending it off to the server.\n\n110\n00:06:48.440 --> 00:06:51.330\nBut the main difference between these two,\nis this is new data.\n\n111\n00:06:51.330 --> 00:06:54.529\nThis is new stuff that we're making,\na new Facebook post.\n\n112\n00:06:54.529 --> 00:06:56.413\nWe're not just editing an existing one.\n\n113\n00:06:56.413 --> 00:07:02.680\nSo that's why you see POST associated with\nCREATE, and PUT associated with UPDATE.\n\n114\n00:07:04.320 --> 00:07:06.560\nThen here at the bottom, we have DELETE.\n\n115\n00:07:06.560 --> 00:07:11.320\nSo, as programmers, we don't really see\nthese, we don't manipulate these directly.\n\n116\n00:07:11.320 --> 00:07:14.270\nWe know that we wanna make a post request\nin this case because we're uploading\n\n117\n00:07:14.270 --> 00:07:15.440\ndata from a form.\n\n118\n00:07:15.440 --> 00:07:18.560\nOr we want to get something,\nlike follow a link.\n\n119\n00:07:18.560 --> 00:07:19.960\nSo that's a get request.\n\n120\n00:07:19.960 --> 00:07:22.770\nBut for the most part,\nwe're just basically using this\n\n121\n00:07:22.770 --> 00:07:27.430\nvocabulary in the http language to\nmanipulate our resources as we need to.\n\n122\n00:07:29.510 --> 00:07:33.408\n&gt;&gt; So, I do have a quick question\nabout this, this RESTful thing,\n\n123\n00:07:33.408 --> 00:07:38.316\nthere's another one that is HTTP verbs,\nand I just wanna get your opinion on it,\n\n124\n00:07:38.316 --> 00:07:42.646\npatch and it seems like the patch\ndoesn't fall into the rails idea, but\n\n125\n00:07:42.646 --> 00:07:45.820\nit's like put is for\na complete update, patch is for\n\n126\n00:07:45.820 --> 00:07:48.897\na partial update,\n&gt;&gt; But I'm guessing Rails doesn't use\n\n127\n00:07:48.897 --> 00:07:52.565\npatch in any capacity for like\nmonitoring it's verbs as a convention?\n\n128\n00:07:52.565 --> 00:07:54.463\n&gt;&gt; I, that's a good question.\n\n129\n00:07:54.463 --> 00:07:55.704\nAnd honestly I'm not sure.\n\n130\n00:07:55.704 --> 00:07:57.966\nI haven't used patch.\n\n131\n00:07:57.966 --> 00:08:01.708\nAny of the apps that I've written,\nbut I have seen it documented.\n\n132\n00:08:01.708 --> 00:08:05.659\nAnd it's interesting how,\nwith these verbs,\n\n133\n00:08:05.659 --> 00:08:11.600\nyou can use a post where you would use\na put, and it would probably work.\n\n134\n00:08:13.110 --> 00:08:19.210\nSo in terms of Rails, I bet it would\nwork if you used a patch in some places,\n\n135\n00:08:19.210 --> 00:08:21.856\nversus a put or even a post.\n\n136\n00:08:21.856 --> 00:08:25.210\nBut this kinda gets into a big\ndifference that does matter, and\n\n137\n00:08:25.210 --> 00:08:28.370\nthat's the concept of idempotence.\n\n138\n00:08:28.370 --> 00:08:33.164\nWhich basically means that,\nif you repeat the action,\n\n139\n00:08:33.164 --> 00:08:35.817\nis it gonna have a side effect?\n\n140\n00:08:35.817 --> 00:08:39.672\nAnd with a post, because it's a new\nresource, if you were to refresh your\n\n141\n00:08:39.672 --> 00:08:43.109\nbrowser, have you ever been on a site,\nmaybe buying something?\n\n142\n00:08:43.109 --> 00:08:46.064\nAnd there's a big warning there saying,\ndon't hit the Submit button twice,\n\n143\n00:08:46.064 --> 00:08:47.386\nyou're gonna get charged twice.\n\n144\n00:08:47.386 --> 00:08:50.830\nThat's idempotence, and\n\n145\n00:08:50.830 --> 00:08:55.022\nthat's not a side effect, but that's a\nreason why it's important, as programmers.\n\n146\n00:08:55.022 --> 00:09:00.860\nTo distinguish between posts\nthat are potentially dangerous,\n\n147\n00:09:00.860 --> 00:09:06.057\nor they're do something that\nwe gotta be careful about.\n\n148\n00:09:06.057 --> 00:09:09.055\nFirst is things that you can just do over,\nand over, and over again forever.\n\n149\n00:09:09.055 --> 00:09:13.630\nSo you can do a million Google searches,\nand nothing really is gonna change.\n\n150\n00:09:13.630 --> 00:09:16.800\nBut if you repeat that\nAmazon order ten times,\n\n151\n00:09:16.800 --> 00:09:18.480\nyour bank account is gonna\nnotice a difference.\n\n152\n00:09:18.480 --> 00:09:22.256\n&gt;&gt; So I guess we've seen a little bit of\na display of this in a previous episode,\n\n153\n00:09:22.256 --> 00:09:26.153\nwhere we were actually creating posts\nfrom the post model, not post the verb.\n\n154\n00:09:26.153 --> 00:09:30.049\nAnd this is where building a blog always\ngets, [SOUND], I'm using the post method\n\n155\n00:09:30.049 --> 00:09:33.619\non HTTP, but I actually have a post\nmodel which is a data representation.\n\n156\n00:09:33.619 --> 00:09:37.224\nWhen we had a couple errors,\nbut the code still ran, and\n\n157\n00:09:37.224 --> 00:09:41.040\nwe ended up with six\nrecords in our database.\n\n158\n00:09:41.040 --> 00:09:45.350\nWe only had two, but we actually ran\nit three times, so it persisted again.\n\n159\n00:09:45.350 --> 00:09:50.292\nBut every time we call get, it still\njust gave us the ones that were there,\n\n160\n00:09:50.292 --> 00:09:52.619\nregardless, we got the same bag.\n\n161\n00:09:52.619 --> 00:09:56.429\nSo we do have to be careful of those and\nto some extent, we're getting into some\n\n162\n00:09:56.429 --> 00:09:59.980\nsemantic arguments here, with put and\npatch and some of those.\n\n163\n00:09:59.980 --> 00:10:05.100\nI have seen what is represented by many,\nas probably the most common pattern,\n\n164\n00:10:05.100 --> 00:10:10.800\nas far as the verb and\nnoun agreement, some like /new.\n\n165\n00:10:10.800 --> 00:10:15.280\nI feel like that might be a little more\nRails specific, cuz I haven't seen that so\n\n166\n00:10:15.280 --> 00:10:17.360\nmuch in other frameworks\nthat I've been in.\n\n167\n00:10:17.360 --> 00:10:22.650\nBut I think this is a good takeaway, a\ngreat place to start, and with that said,\n\n168\n00:10:22.650 --> 00:10:27.290\nhow are we ultimately gonna make use\nof CRUD and REST in our Rails app?\n\n169\n00:10:27.290 --> 00:10:30.812\n&gt;&gt; Great question, and I really\nappreciate what you're brought up.\n\n170\n00:10:30.812 --> 00:10:32.861\nThe previous version of our blog app,\n\n171\n00:10:32.861 --> 00:10:36.263\nbecause it was kind of like\na non-standard behavior in there.\n\n172\n00:10:36.263 --> 00:10:40.790\nWhere you use a get request,\nbecause that was what was in our route.\n\n173\n00:10:40.790 --> 00:10:43.768\nAnd the result is that data got changed,\nand things were happening.\n\n174\n00:10:43.768 --> 00:10:49.517\nBut that's a reason why we have the\nstructure to have a controlled vocabulary,\n\n175\n00:10:49.517 --> 00:10:51.190\nand a set way of doing things.\n\n176\n00:10:51.190 --> 00:10:53.050\nSo that other programmers,\n\n177\n00:10:53.050 --> 00:10:57.239\nother users can know what to\nexpect when they're using our app.\n\n178\n00:10:57.239 --> 00:11:01.890\nAnd that's what really this is getting at,\nso let's talk about routing a little bit.\n\n179\n00:11:01.890 --> 00:11:05.500\nRight now,\nwe can call our routes anything we want,\n\n180\n00:11:05.500 --> 00:11:07.380\nwe can call our actions anything we want.\n\n181\n00:11:07.380 --> 00:11:12.007\nBut in a restful web app,\nthere's specific names that fit\n\n182\n00:11:12.007 --> 00:11:16.740\nwith specific actions, and\nsome of this is real specific.\n\n183\n00:11:16.740 --> 00:11:23.816\nI've seen some apps that are restful\nin that they have a specific name for\n\n184\n00:11:23.816 --> 00:11:29.272\nnew, for example, but\nit still follows a set pattern.\n\n185\n00:11:29.272 --> 00:11:34.212\nSo just to run through this list real\nquick, we've got posts, /getting posts,\n\n186\n00:11:34.212 --> 00:11:36.933\nor getting on slash\nthe name of the resource,\n\n187\n00:11:36.933 --> 00:11:40.510\nthis just gives us a list\nof what we've got.\n\n188\n00:11:40.510 --> 00:11:44.400\nSo I think of it as like get everything,\nbecause this is very general,\n\n189\n00:11:44.400 --> 00:11:48.090\nit doesn't really point\nto a specific thing.\n\n190\n00:11:49.670 --> 00:11:53.860\nHere, we're doing get on\na URL called posts/new.\n\n191\n00:11:53.860 --> 00:11:56.970\nAnd I'd just like to\ntake a moment here and\n\n192\n00:11:56.970 --> 00:12:00.960\njust mention that it may seem strange\nthat we're talking about URLs.\n\n193\n00:12:02.800 --> 00:12:05.530\nMaybe as a web user,\nyou just click on links,\n\n194\n00:12:05.530 --> 00:12:07.574\nand you don't really notice the URLs.\n\n195\n00:12:07.574 --> 00:12:10.790\nBut since we're developing\nthe backend of a web app,\n\n196\n00:12:10.790 --> 00:12:12.660\nthe URLs become really important for us.\n\n197\n00:12:12.660 --> 00:12:18.318\nTo understand how our app is put\ntogether and how we navigate through it.\n\n198\n00:12:18.318 --> 00:12:23.134\nOn top of that, many APIs are HTTP-based,\nso when you're on a website and\n\n199\n00:12:23.134 --> 00:12:27.874\nit wants to connect through Facebook,\nit's actually making a request to\n\n200\n00:12:27.874 --> 00:12:32.320\nFacebook's website, and\nit's hitting a resource much like this.\n\n201\n00:12:32.320 --> 00:12:37.086\nIt's probably not called posts,\nmaybe it's called user or person or\n\n202\n00:12:37.086 --> 00:12:38.629\nsomething like that.\n\n203\n00:12:38.629 --> 00:12:42.831\nBut there's a URL structure that,\nbecause it's standardized,\n\n204\n00:12:42.831 --> 00:12:45.990\nyou as a programmer can\nintegrate with Facebook.\n\n205\n00:12:45.990 --> 00:12:49.170\nAnd this makes that easier and\nsimpler, more maintainable.\n\n206\n00:12:50.888 --> 00:12:57.190\nSo we've got, get a post, get/posts/new is\ngonna show us a form to create a new post.\n\n207\n00:12:57.190 --> 00:12:59.890\nSo it's a key distinction\nbetween actually creating it,\n\n208\n00:12:59.890 --> 00:13:03.710\nbecause in this step, we're simply\ngetting the form to create it.\n\n209\n00:13:03.710 --> 00:13:07.970\nAnd when we submit the form,\nthen we use a different verb.\n\n210\n00:13:07.970 --> 00:13:11.470\nHere's the data that's in this form,\nwe're gonna send it to the server and\n\n211\n00:13:11.470 --> 00:13:12.589\ncreate a new post.\n\n212\n00:13:14.930 --> 00:13:18.590\nDown here we see a similar\npattern where we see GET, but\n\n213\n00:13:18.590 --> 00:13:21.970\ninstead of getting all posts,\nwe've got this colon idea.\n\n214\n00:13:21.970 --> 00:13:28.089\nWhich is a stand-in for a single post,\nwe want to zoom in on detail on one thing.\n\n215\n00:13:28.089 --> 00:13:30.783\nSo here, we're seeing all\nthe things of that class, and\n\n216\n00:13:30.783 --> 00:13:33.440\nhere we're zooming in on one thing.\n\n217\n00:13:33.440 --> 00:13:39.610\nSo on Reddit, we'll see this in a moment,\nyou see a list of Reddit posts.\n\n218\n00:13:39.610 --> 00:13:43.410\nYou click on one, and it shows you that\npost, and all the associated data with it.\n\n219\n00:13:45.310 --> 00:13:49.075\nAlong with that, we can edit a single\nthing, and that's what this is.\n\n220\n00:13:49.075 --> 00:13:53.120\npost/id/edit, it's going\nto show us an HTML form,\n\n221\n00:13:53.120 --> 00:13:57.620\nso we can change one single item,\nand save that one single item.\n\n222\n00:13:59.450 --> 00:14:03.980\nAnd then to update it, when we submit this\nform, we're gonna put it to this URL.\n\n223\n00:14:05.790 --> 00:14:10.760\nAnd lastly, delete works the same way,\nwhere the URL stays the same,\n\n224\n00:14:10.760 --> 00:14:15.400\nbut instead of calling the verb put,\nwe're calling the HTTP verb delete.\n\n225\n00:14:15.400 --> 00:14:19.760\nSo you'll see this where\nthe URL looks the same, but\n\n226\n00:14:19.760 --> 00:14:21.710\ndifferent things are happening\nbehind the scenes.\n\n227\n00:14:24.122 --> 00:14:27.722\nSo let's kind of see this in\naction on a real website,\n\n228\n00:14:27.722 --> 00:14:31.760\nand I love Reddit,\nI love discovering cool sub-Reddits.\n\n229\n00:14:31.760 --> 00:14:36.000\nAnd this is one of my favorites, I'm not\nsure I'm gonna pronounce this correctly,\n\n230\n00:14:36.000 --> 00:14:41.270\nbut pareidolia is a list of pictures\nthat look like something they're not.\n\n231\n00:14:41.270 --> 00:14:42.562\nSo like right here,\n\n232\n00:14:42.562 --> 00:14:47.818\nwe've got a picture of a chicken nugget\nthat looks like someone that's walking.\n\n233\n00:14:47.818 --> 00:14:51.785\nAnd as we see this here,\nwe've got an index page,\n\n234\n00:14:51.785 --> 00:14:56.896\nall these posts are being displayed\nthat all follow this topic.\n\n235\n00:14:56.896 --> 00:15:02.744\nAnd you can see that although Reddit has\nadded some things to the URL structure,\n\n236\n00:15:02.744 --> 00:15:08.190\nlike the /r, this is the name of\na resource right here, r/pareidolia.\n\n237\n00:15:08.190 --> 00:15:13.908\nIf I click on this, it may go, so\nthis goes directly to the comments page,\n\n238\n00:15:13.908 --> 00:15:17.617\nso there's some kind of\nnesting of resources.\n\n239\n00:15:17.617 --> 00:15:24.368\nWhere we've got comments that\nare associated with a subreddit or\n\n240\n00:15:24.368 --> 00:15:29.290\nwith a post, but\nwe can see the pattern is here.\n\n241\n00:15:29.290 --> 00:15:32.890\nHere we've got an ID, and\nwe've got comments here.\n\n242\n00:15:34.790 --> 00:15:39.720\nAnd if we take a look at this form here,\nwe can expect that it's action, and\n\n243\n00:15:39.720 --> 00:15:42.108\nby the way, all this craziness that\nyou just saw erupt on my screen,\n\n244\n00:15:42.108 --> 00:15:44.040\nI just opened up the web developer.\n\n245\n00:15:44.040 --> 00:15:46.250\nWhich is fun to do on websites,\njust to kind of see how they're built,\n\n246\n00:15:46.250 --> 00:15:47.157\nhow they're put together.\n\n247\n00:15:47.157 --> 00:15:50.234\nSo I'm going to look for\nthe form tag here and,\n\n248\n00:15:57.553 --> 00:15:59.678\nThe resolution is kind\nof wonky on this screen.\n\n249\n00:15:59.678 --> 00:16:05.150\nIt's amazing how much space it takes\nup to display all this information.\n\n250\n00:16:05.150 --> 00:16:08.090\nSo maybe I'll just do View Source instead.\n\n251\n00:16:09.320 --> 00:16:10.600\nDidn't mean to start that.\n\n252\n00:16:10.600 --> 00:16:14.936\nSo we just go back here,\nand we'll close this out.\n\n253\n00:16:14.936 --> 00:16:16.299\nView Source.\n\n254\n00:16:20.859 --> 00:16:24.529\nAnd I'm just gonna search the source for\n/new.\n\n255\n00:16:29.400 --> 00:16:33.880\nAnd honestly, looking at this, probably\ngonna take us a long time to find it.\n\n256\n00:16:33.880 --> 00:16:37.290\nSo that was a detour.\n\n257\n00:16:37.290 --> 00:16:40.370\nBut in any case,\nI just wanted to show that here,\n\n258\n00:16:40.370 --> 00:16:45.790\nthis pattern that we see\nwith RESTful Resources and\n\n259\n00:16:45.790 --> 00:16:51.240\nthe naming of URLs, is a pattern\nthat's everywhere on the Internet.\n\n260\n00:16:51.240 --> 00:16:55.880\nStack Overflow is an awesome site for\nasking questions.\n\n261\n00:16:55.880 --> 00:16:56.933\nWe can see the same pattern here.\n\n262\n00:16:58.925 --> 00:17:01.810\nProbably more clearly than\nwe do on Reddit, actually.\n\n263\n00:17:01.810 --> 00:17:04.910\nThat was an index page\nthat I just clicked from.\n\n264\n00:17:04.910 --> 00:17:07.270\nAnd if I click on a question,\n\n265\n00:17:07.270 --> 00:17:11.840\nwe can see the URL structure here changed\nto /questions, which is a resource.\n\n266\n00:17:11.840 --> 00:17:17.280\nAn ID, and\nthen I can add comments to this and\n\n267\n00:17:17.280 --> 00:17:22.426\nin this form here, the verb to put it it's\n\n268\n00:17:22.426 --> 00:17:28.768\ngonna be a post to a comments\nresource of some sort.\n\n269\n00:17:31.517 --> 00:17:37.559\nSo what does that have to do with Rails or\nhow does Rails implement this?\n\n270\n00:17:39.110 --> 00:17:45.995\nWhat benefit do we have of adopting\nthis URL structure to our app?\n\n271\n00:17:45.995 --> 00:17:48.428\nSo a typical Rails' way.\n\n272\n00:17:48.428 --> 00:17:54.134\nIn past couples of episode, we've seen how\nwe can generate code based on patterns.\n\n273\n00:17:54.134 --> 00:18:00.326\nAnd because of Rust and the way that it\nstrictly defines the names of routes,\n\n274\n00:18:00.326 --> 00:18:06.229\nand methods, we can use a Scaffold\ngenerator to quickly generate a whole\n\n275\n00:18:06.229 --> 00:18:13.240\nworking system that will automatically\ncreate, read, update, and delete for us.\n\n276\n00:18:14.410 --> 00:18:15.810\nSo let's run that.\n\n277\n00:18:18.990 --> 00:18:21.150\nWe'll do a Rails generate\njust like before.\n\n278\n00:18:23.430 --> 00:18:27.940\nAnd we're generating a Scaffold,\nand a Scaffold is intended to be\n\n279\n00:18:27.940 --> 00:18:32.230\na model controller and\nassociated views all together.\n\n280\n00:18:32.230 --> 00:18:35.440\nSo in previous examples,\nwe generated a model first, and\n\n281\n00:18:35.440 --> 00:18:38.150\nthen we generated a controller\non top of that model.\n\n282\n00:18:38.150 --> 00:18:42.850\nScaffold will do all of that for us, and\nbecause it has all that information,\n\n283\n00:18:42.850 --> 00:18:46.090\nall the information it needs to, or could\npotentially have all the information it\n\n284\n00:18:46.090 --> 00:18:48.420\nneeds to actually make working code for\nus.\n\n285\n00:18:48.420 --> 00:18:49.420\nIt will do it, if it can.\n\n286\n00:18:50.800 --> 00:18:55.590\nSo, in this case,\nwe'll call our model Host.\n\n287\n00:18:55.590 --> 00:18:59.980\nAnd just for context, I've created yet\nanother brand new Rails project.\n\n288\n00:18:59.980 --> 00:19:02.930\nIt's great that they're quick and\neasy to bring up.\n\n289\n00:19:04.040 --> 00:19:09.090\nSo this has nothing on it right now,\nso I'm gonna Scaffold\n\n290\n00:19:09.090 --> 00:19:14.100\npost and I'm honestly not sure\nif I need to do upper case or\n\n291\n00:19:14.100 --> 00:19:18.600\nlower case, sorry, singular or\nplural on this name here, so\n\n292\n00:19:18.600 --> 00:19:21.452\nI'm gonna run it and see if it\ncomplains at me if I use singular.\n\n293\n00:19:21.452 --> 00:19:26.125\nCuz my gut's telling me it's singular,\nthat's kinda one of the advantages of\n\n294\n00:19:26.125 --> 00:19:30.655\nRails, is you kinda get a feel for the\nnature of the language and you get a knack\n\n295\n00:19:30.655 --> 00:19:34.798\nfor choosing the right decision even\nthough you may not know for sure.\n\n296\n00:19:37.425 --> 00:19:42.015\nIn addition to my actions,\nI'm actually going to, excuse me,\n\n297\n00:19:42.015 --> 00:19:47.540\nin place of my actions, I'm actually\ngonna define what a post is, because,\n\n298\n00:19:47.540 --> 00:19:52.980\nsince we're creating a RESTful Resource,\nwe don't need to specify custom\n\n299\n00:19:52.980 --> 00:19:59.000\naction names like we've done in\nthe past while generating controllers.\n\n300\n00:19:59.000 --> 00:20:03.470\nIn this case, we're actually going to,\njust going to add data\n\n301\n00:20:05.020 --> 00:20:08.550\nattributes for our post model,\nwhich we did separately before.\n\n302\n00:20:10.150 --> 00:20:14.540\nOur title, which is a string, and\nour body, which is also a string.\n\n303\n00:20:15.920 --> 00:20:18.630\nSo the syntax for\nthis becomes generate scaffold,\n\n304\n00:20:18.630 --> 00:20:22.540\nthe name of the thing we're making, all\nof this stuff for, and then what it is.\n\n305\n00:20:22.540 --> 00:20:26.320\nIn this case, it's got a title and a body.\n\n306\n00:20:26.320 --> 00:20:27.290\nI'll pretend.\n\n307\n00:20:27.290 --> 00:20:30.660\nJust double check everything,\njust to make sure it works.\n\n308\n00:20:31.990 --> 00:20:34.590\nOr make sure it does\nwhat we expect it to do.\n\n309\n00:20:36.600 --> 00:20:39.800\nSo you can see in this case,\nit generated a whole bunch of files.\n\n310\n00:20:39.800 --> 00:20:41.230\nMost of which we've already seen.\n\n311\n00:20:41.230 --> 00:20:43.060\nThere's a migration\nwhich we've seen before.\n\n312\n00:20:44.200 --> 00:20:45.610\nHere's our model.\n\n313\n00:20:45.610 --> 00:20:50.300\nAnd I'm feeling better about my\ndecision to go with a singular post\n\n314\n00:20:50.300 --> 00:20:54.870\nbecause I can see that this is\nsingular and that's what I expect.\n\n315\n00:20:54.870 --> 00:20:56.550\nAnd then I've got a plural controller,\n\n316\n00:20:56.550 --> 00:21:00.810\nwhich is in line with\nwhat we've done before.\n\n317\n00:21:00.810 --> 00:21:04.210\nAnd it's generated all of these\nextra views for me in a RESTful way.\n\n318\n00:21:04.210 --> 00:21:06.370\nSo Index, Edit, Show New.\n\n319\n00:21:06.370 --> 00:21:08.179\nSo this looks great,\nlet's go ahead and run this.\n\n320\n00:21:12.714 --> 00:21:16.954\nAll right, and so just one more thing\nbefore we close out for this episode,\n\n321\n00:21:16.954 --> 00:21:20.320\nbecause where we're going is\nkind of go into these files and\n\n322\n00:21:20.320 --> 00:21:23.990\nsee how they're created,\nsee what's being made.\n\n323\n00:21:23.990 --> 00:21:27.959\nBut for now, I just want to show you\nwhat this Scaffolding has given us.\n\n324\n00:21:29.630 --> 00:21:30.215\nSo I'm gonna run a server.\n\n325\n00:21:35.138 --> 00:21:36.488\nAnd go over here in my browser.\n\n326\n00:21:39.154 --> 00:21:43.370\nAnd it's giving me an error because\nI haven't run my migration.\n\n327\n00:21:43.370 --> 00:21:47.190\nIt created for me, but Rails automatically\nknows, because they're numbered,\n\n328\n00:21:47.190 --> 00:21:49.938\nwhich migrations were applied and\nwhich were not.\n\n329\n00:21:49.938 --> 00:21:54.670\nAnd if there's a migration that\nyou're missing, it will stop you and\n\n330\n00:21:54.670 --> 00:21:56.220\nprevent anything from happening.\n\n331\n00:21:56.220 --> 00:21:56.729\nSo we need to do that.\n\n332\n00:22:01.371 --> 00:22:02.282\nSo you got that?\n\n333\n00:22:02.282 --> 00:22:03.612\nLet's start up our server again.\n\n334\n00:22:05.810 --> 00:22:07.222\nGo here.\n\n335\n00:22:07.222 --> 00:22:12.685\nAnd so here's the splash page,\nbut now if we go to /posts,\n\n336\n00:22:12.685 --> 00:22:17.824\nwe've got all this view and\ncontroller code written for\n\n337\n00:22:17.824 --> 00:22:23.837\nus, because we've given rails\nenough information to do this and\n\n338\n00:22:23.837 --> 00:22:26.160\nto follow that pattern.\n\n339\n00:22:31.160 --> 00:22:34.920\nAnd this is functional,\nit actually implements CRUD completely.\n\n340\n00:22:34.920 --> 00:22:39.405\nSo here's our show, and\nhere we've got links to edit, and\n\n341\n00:22:39.405 --> 00:22:44.020\nupdating this.\n\n342\n00:22:44.020 --> 00:22:46.820\nNow, of course,\nyou're gonna want to customize this code,\n\n343\n00:22:46.820 --> 00:22:50.838\nbecause this doesn't look very good,\nand it's pretty limited.\n\n344\n00:22:50.838 --> 00:22:55.180\nIt implements CRUD but we're gonna\nwanna add other things to this,\n\n345\n00:22:55.180 --> 00:22:56.560\nlike validations and stuff like that.\n\n346\n00:22:56.560 --> 00:22:59.010\nFor that we need to dig into the code and\ncustomize this,\n\n347\n00:22:59.010 --> 00:23:02.580\nbut we've got a great starting point\nhere that we can use to jump off.\n\n348\n00:23:02.580 --> 00:23:06.400\n&gt;&gt; So Manny, what you're telling me is\nthat actual digging in part is gonna take\n\n349\n00:23:06.400 --> 00:23:08.010\na little longer than we have.\n\n350\n00:23:08.010 --> 00:23:09.170\nIn this episode.\n\n351\n00:23:09.170 --> 00:23:11.380\nSo it looks like we're gonna have\nto come back with a part two.\n\n352\n00:23:11.380 --> 00:23:12.470\nAnd I think It's pretty amazing.\n\n353\n00:23:12.470 --> 00:23:15.620\nIt's almost a little dangerous.\n\n354\n00:23:15.620 --> 00:23:17.200\nIt kind of scares me a little.\n\n355\n00:23:17.200 --> 00:23:19.100\nWell, I am finished with my application.\n\n356\n00:23:19.100 --> 00:23:20.960\nI didn't actually have to learn anything.\n\n357\n00:23:20.960 --> 00:23:24.590\nBut I think, really where that\ncomes in is the customization part.\n\n358\n00:23:24.590 --> 00:23:29.040\nThen as you said, it's gonna take a little\nbit, I'm gonna have to sneak around and\n\n359\n00:23:29.040 --> 00:23:33.960\nlook and do some tweaking, but\nthis was very, very interesting.\n\n360\n00:23:33.960 --> 00:23:36.269\nI didn't realize that Rails\ndid all of this for you,\n\n361\n00:23:36.269 --> 00:23:39.490\nand maybe you didn't either so\nhopefully you'll learn something.\n\n362\n00:23:39.490 --> 00:23:44.040\nBut definitely stay tuned as we continue\non to a part two of, well getting\n\n363\n00:23:44.040 --> 00:23:49.248\neverything up and running to have a fully\nfunctional app with customizations.\n\n364\n00:23:49.248 --> 00:23:52.300\nBut we're gonna go ahead and\nknock this one out for this episode.\n\n365\n00:23:52.300 --> 00:23:54.980\nBut continue back for\nmore Intro to Ruby on Rails.\n\n366\n00:23:54.980 --> 00:23:58.810\nFor now, signing off for DevPro.TV,\nI've been your host, Justin Dennison.\n\n367\n00:23:58.810 --> 00:24:00.576\n&gt;&gt; I'm Manny Rodriguez\n&gt;&gt; And we'll see you next time.\n\n368\n00:24:00.576 --> 00:24:06.721\n[MUSIC]\n\n",
          "vimeoId": "238629704"
        },
        {
          "description": "In this episode, Manny and Justin use the Rails tooling to develop RESTful endpoints for a given resource using a scaffold. Manny takes us through the scaffolded resource code showing how Railsimplements RESTful pattern.",
          "length": "1954",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-introtorubyonrails/techskills-introtorubyonrails-6-1-2-intro_to_rest_pt_2-110117-PGM.00_32_25_02.Still001.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-introtorubyonrails/techskills-introtorubyonrails-6-1-2-intro_to_rest_pt_2-110117-PGM.00_32_25_02.Still001-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-introtorubyonrails/techskills-introtorubyonrails-6-1-2-intro_to_rest_pt_2-110117-PGM.00_32_25_02.Still001-sm.jpg",
          "title": "Intro to REST Part 2",
          "transcript": "WEBVTT\n\n1\n00:00:00.000 --> 00:00:10.000\n[MUSIC]\n\n2\n00:00:12.703 --> 00:00:17.065\nGreetings everyone and welcome back to\nanother exciting episode of DevProTV.\n\n3\n00:00:17.065 --> 00:00:20.505\nI'm your host Justin Dennison, and we're\ncontinuing on in our Ruby on Rails series.\n\n4\n00:00:20.505 --> 00:00:24.585\nAnd well, we're back with a part two,\nto look at RESTful services.\n\n5\n00:00:24.585 --> 00:00:28.827\nAnd here to help us along in that\nvery endeavor as Mr. Manny Rodriguez.\n\n6\n00:00:28.827 --> 00:00:29.697\nHow are you doing today Manny?\n\n7\n00:00:29.697 --> 00:00:31.417\n&gt;&gt; I'm doing great glad to be back.\n\n8\n00:00:31.417 --> 00:00:32.857\n&gt;&gt; I am glad that you're back here,\n\n9\n00:00:32.857 --> 00:00:36.707\nsorry about that little bumble of your\nname there whoops daisy on my part.\n\n10\n00:00:36.707 --> 00:00:40.463\nBut you know, we left off on part\none looking at how RESTful services,\n\n11\n00:00:40.463 --> 00:00:43.433\nthe design, the patterns,\nand the thought processes.\n\n12\n00:00:43.433 --> 00:00:49.023\nBut I'm kind of interested, how does Rails\nplay into kind of either enforcing or\n\n13\n00:00:49.023 --> 00:00:52.303\nproviding tooling to develop\nthese RESTful services.\n\n14\n00:00:52.303 --> 00:00:53.853\n&gt;&gt; Great question Justin.\n\n15\n00:00:53.853 --> 00:00:58.833\nSo yeah last time we saw all the RESTful,\nwell, not all of it.\n\n16\n00:00:58.833 --> 00:01:04.340\nIt's a big thing, but\nwe saw create, update, index all\n\n17\n00:01:04.340 --> 00:01:09.400\nof these RESTful concepts, but how do they\nplay out actually in a web application?\n\n18\n00:01:11.160 --> 00:01:14.430\nSo let's see what Ruby on Rails has for\nus here.\n\n19\n00:01:14.430 --> 00:01:19.340\nMy starting point is a blank Rails\nproject and from this point on\n\n20\n00:01:19.340 --> 00:01:24.450\nwe're gonna take this project and\nuse it for the rest of the series.\n\n21\n00:01:24.450 --> 00:01:29.980\nSo, we've seen how Rails generate\ncan generate code for us.\n\n22\n00:01:29.980 --> 00:01:34.060\nSo we've seen it with generating models,\ngenerating migrations,\n\n23\n00:01:34.060 --> 00:01:40.400\ngenerating controllers, and basically\nsub-parts of what we're about to see now.\n\n24\n00:01:40.400 --> 00:01:46.350\nWhat we're gonna do is use Rails\ngenerate to create a scaffold.\n\n25\n00:01:46.350 --> 00:01:51.190\nWhich is basically an entire RESTful\nresource all built together and\n\n26\n00:01:51.190 --> 00:01:52.850\nworking as one cohesive unit.\n\n27\n00:01:52.850 --> 00:01:56.080\nSo I've already started typing\npart of that command in here.\n\n28\n00:01:56.080 --> 00:02:00.010\nWe got rails generate scaffold,\nand our scaffold is gonna be for\n\n29\n00:02:00.010 --> 00:02:01.560\na resource called a post.\n\n30\n00:02:01.560 --> 00:02:07.310\nAnd we're gonna be keeping with our\nblog theme and let's give it some data.\n\n31\n00:02:07.310 --> 00:02:11.370\nBecause a post, it's got properties.\n\n32\n00:02:11.370 --> 00:02:17.120\nSo one of those properties is a title,\nand that title is a string.\n\n33\n00:02:17.120 --> 00:02:20.440\nAnd we also have a body, and\nthat's a string as well.\n\n34\n00:02:21.510 --> 00:02:25.360\nAnd as always, whenever we're using Rails\ngenerate, I like to tell it that we're\n\n35\n00:02:25.360 --> 00:02:28.490\ngonna pretend for the first run,\njust to make sure we catch things.\n\n36\n00:02:28.490 --> 00:02:31.940\nBecause if a mistake\nis made at this stage,\n\n37\n00:02:31.940 --> 00:02:36.410\nit can be annoying to have to go back and\nclean up after it's mess, so\n\n38\n00:02:36.410 --> 00:02:38.930\nlet's give that a shot and\nsee what happens.\n\n39\n00:02:40.720 --> 00:02:45.930\nSo it's cranking away here,\nthinking and there's a lot of\n\n40\n00:02:45.930 --> 00:02:50.200\nactual code that is behind this generators\nand it's possible to write your own.\n\n41\n00:02:51.800 --> 00:02:53.621\nSo this looks good.\n\n42\n00:02:53.621 --> 00:02:54.700\nThat looks like it's worked.\n\n43\n00:02:54.700 --> 00:02:59.040\nWe can see that we've a migration,\na model, views.\n\n44\n00:02:59.040 --> 00:03:00.060\nSo this is pretty exciting.\n\n45\n00:03:00.060 --> 00:03:01.970\nLet's actually do this and\nsee what this looks like.\n\n46\n00:03:03.220 --> 00:03:05.890\nSo we'll take off pretend,\nand run it for real.\n\n47\n00:03:07.140 --> 00:03:09.090\nAnd wow, that was much faster this time.\n\n48\n00:03:10.680 --> 00:03:16.408\nSo since we started with a blank Rails\nproject and we created a blank resource,\n\n49\n00:03:16.408 --> 00:03:19.260\nor we had a blank resource but\na resource from scratch.\n\n50\n00:03:19.260 --> 00:03:22.240\nOne thing we'll need to do here\nis run our database migration\n\n51\n00:03:24.290 --> 00:03:26.940\nbecause we have an empty\ndatabase right now.\n\n52\n00:03:28.060 --> 00:03:30.330\nSo it doesn't have the table definitions,\n\n53\n00:03:30.330 --> 00:03:32.130\nthat we need to actually\nmake this app work.\n\n54\n00:03:33.380 --> 00:03:37.180\nSo we've run the rake\ndb migrate command and\n\n55\n00:03:37.180 --> 00:03:40.590\nwe'll see some more\ncommands with rake here.\n\n56\n00:03:42.300 --> 00:03:44.010\nSo lastly, let's launch our server.\n\n57\n00:03:44.010 --> 00:03:50.330\nSo we'll run rail server tick that off and\nonce we see this listening on\n\n58\n00:03:50.330 --> 00:03:55.383\nport 3000, we'll hop on over to\nour browser and take a look.\n\n59\n00:03:57.871 --> 00:04:00.213\nSo I just typed in localhost 3000, and\n\n60\n00:04:00.213 --> 00:04:02.920\nthis is the same splash\npage we got before.\n\n61\n00:04:02.920 --> 00:04:07.350\nWe're seeing this because we haven't set a\nroot route yet, and that's basically just\n\n62\n00:04:07.350 --> 00:04:15.500\na route that the site will go to by\ndefault when on the root of the website.\n\n63\n00:04:15.500 --> 00:04:17.470\nWe called our resource posts though.\n\n64\n00:04:17.470 --> 00:04:18.940\nSo, that's where the good stuff is.\n\n65\n00:04:20.290 --> 00:04:26.083\nSo, we'll go to /posts and already we\ncan see that there's some stuff here.\n\n66\n00:04:26.083 --> 00:04:31.230\nWe've got an h1 heading,\ntitle body, and this new post link.\n\n67\n00:04:32.300 --> 00:04:34.310\nLet's click on this and\nsee what we've got.\n\n68\n00:04:34.310 --> 00:04:37.170\nAnd wow, we can see we've got a form.\n\n69\n00:04:38.910 --> 00:04:43.510\nSo this is all fully functional,\nwe can actually create data this way.\n\n70\n00:04:43.510 --> 00:04:50.720\nSo looking over here at the URL,\nwe've post/new so this is our new route.\n\n71\n00:04:53.363 --> 00:04:55.070\nSo I'm just going to put\nin some test data in here.\n\n72\n00:04:58.349 --> 00:04:59.820\nAnd hit Create.\n\n73\n00:05:01.170 --> 00:05:06.840\nNow we're not seeing what happened\nwhen I pushed that submit button.\n\n74\n00:05:06.840 --> 00:05:11.440\nIt submitted a post request\nto the create route.\n\n75\n00:05:11.440 --> 00:05:16.070\nThat did some things and now what I'm\nlooking at is I see a message saying\n\n76\n00:05:16.070 --> 00:05:18.970\nthat the post was successfully\ncreated which is great news.\n\n77\n00:05:18.970 --> 00:05:23.220\nI see the content that I put in\nthe form and I can navigate back.\n\n78\n00:05:23.220 --> 00:05:28.310\nNow I see my data, and we can see\nhere that this is the index page.\n\n79\n00:05:30.690 --> 00:05:34.560\nSo from here I can click on this link,\ngo back to where I came from.\n\n80\n00:05:34.560 --> 00:05:38.340\nWe can kind of see that this is\na fully navigable system, of course,\n\n81\n00:05:38.340 --> 00:05:39.400\nit looks really bare bones.\n\n82\n00:05:39.400 --> 00:05:44.240\nThere's not much to see here in\nterms of CSS and design that is, but\n\n83\n00:05:44.240 --> 00:05:48.860\nfunctionally, we have\na fully working CRUD for\n\n84\n00:05:48.860 --> 00:05:53.420\nour post which is create,\nread, update and destroy.\n\n85\n00:05:53.420 --> 00:06:01.864\nSo, let's try update, And\nI've changed the text there,\n\n86\n00:06:01.864 --> 00:06:07.517\ngoing back to my index page I can see\nthat it's been successfully updated and\n\n87\n00:06:07.517 --> 00:06:12.570\nI can destroy this to make it\ndisappear and now I'm back to nothing.\n\n88\n00:06:14.800 --> 00:06:18.670\n&gt;&gt; Now Manny, I've got a couple\nof quick little comments but\n\n89\n00:06:18.670 --> 00:06:19.850\nI also have a question.\n\n90\n00:06:19.850 --> 00:06:23.230\nSo I do like that this is provided,\nwe've seen a couple of things like this.\n\n91\n00:06:23.230 --> 00:06:28.010\nRails is taking care of a great deal of,\nwell the nuance behaviors,\n\n92\n00:06:28.010 --> 00:06:31.690\nactually some of the boilerplate that you\nmay have to write in other places, right?\n\n93\n00:06:31.690 --> 00:06:35.620\nWhether you're using a framework or\na library or whatever it may be.\n\n94\n00:06:35.620 --> 00:06:40.930\nNow I'm interested though, using\nthe scaffold command, I wanna see how\n\n95\n00:06:40.930 --> 00:06:46.120\nthe RESTful architecture is actually\nimplemented using the scaffolding process.\n\n96\n00:06:46.120 --> 00:06:49.310\nSo, could you take us through\nthe code that was given to us,\n\n97\n00:06:49.310 --> 00:06:50.820\nthat provides all this functionality?\n\n98\n00:06:50.820 --> 00:06:54.230\n&gt;&gt; Absolutely, absolutely,\nyeah, let's dive into it, and\n\n99\n00:06:54.230 --> 00:06:57.030\nsee what Rails actually did for us.\n\n100\n00:06:57.030 --> 00:07:01.120\nAnd, I will say that scaffolding is a\nreally useful tool for getting going, for\n\n101\n00:07:01.120 --> 00:07:04.240\ngetting your business logic and\n\n102\n00:07:04.240 --> 00:07:07.770\nyour resources in a state\nwhere you can play with them.\n\n103\n00:07:07.770 --> 00:07:09.862\nBut, by no means, are we done.\n\n104\n00:07:09.862 --> 00:07:13.270\nWe don't,\nthere's a lot of code to still add.\n\n105\n00:07:13.270 --> 00:07:15.820\nBut, let's see what\nscaffolding has given us here.\n\n106\n00:07:17.280 --> 00:07:20.280\nSo, I'm gonna open up my browser and\n\n107\n00:07:20.280 --> 00:07:26.010\nlet's look at the routes.rb first,\nwhich is a routing file.\n\n108\n00:07:26.010 --> 00:07:31.200\nJust to kinda see how the URLs\nare being handled and what we see here.\n\n109\n00:07:33.530 --> 00:07:39.090\nThere's only one line that's been added\nto this file, this resources :posts line.\n\n110\n00:07:39.090 --> 00:07:42.580\nSo there's a couple of things going\non here, first is that this resource,\n\n111\n00:07:42.580 --> 00:07:46.890\nthis is a method call to\nthe Rails routing system and\n\n112\n00:07:46.890 --> 00:07:48.710\nit's doing a lot of stuff\nhere behind the scenes.\n\n113\n00:07:49.900 --> 00:07:54.877\nThis post, you maybe wondering why there's\na colon after this like is this a string\n\n114\n00:07:54.877 --> 00:07:56.952\nor a variable name, what is this?\n\n115\n00:07:56.952 --> 00:08:02.694\nAnd this is a Ruby symbol What's a symbol?\n\n116\n00:08:02.694 --> 00:08:06.536\nBasically it's an construct in Ruby\nthat's a lot like a string but\n\n117\n00:08:06.536 --> 00:08:10.640\nwith the critical difference\nthat strings can be changed.\n\n118\n00:08:10.640 --> 00:08:14.760\nSo if I have a string named hello,\nI can change that variable that the string\n\n119\n00:08:14.760 --> 00:08:18.260\nis assigned to I can\nchange characters in it.\n\n120\n00:08:18.260 --> 00:08:21.680\nBut by default symbols\ndon't change in Ruby.\n\n121\n00:08:21.680 --> 00:08:24.020\nThey're immutable when they're created.\n\n122\n00:08:24.020 --> 00:08:27.800\nSo small difference, but you'll see\nthis syntax all throughout Ruby and\n\n123\n00:08:27.800 --> 00:08:29.110\nall throughout Rails, and\n\n124\n00:08:29.110 --> 00:08:33.370\nit's really is just a way of saying\nthis is kind of a constant in our code.\n\n125\n00:08:33.370 --> 00:08:34.130\nIt's not gonna change.\n\n126\n00:08:34.130 --> 00:08:35.940\nWe're not gonna change the value of it,\nand\n\n127\n00:08:35.940 --> 00:08:37.850\nit's convenient to refer to it this way.\n\n128\n00:08:39.510 --> 00:08:42.160\nSo what's going on with\nthis resources method call?\n\n129\n00:08:42.160 --> 00:08:43.650\nWhat is this doing?\n\n130\n00:08:43.650 --> 00:08:47.310\nAnd a short answer is that,\nit's a shortcut for\n\n131\n00:08:47.310 --> 00:08:53.380\nall of the RESTful routes defined\nin our routing system here.\n\n132\n00:08:53.380 --> 00:08:57.138\nSo I got a document here to kinda\nshow you what it's doing for us.\n\n133\n00:09:02.391 --> 00:09:03.490\nSo this is Ruby code.\n\n134\n00:09:03.490 --> 00:09:06.700\nYou may recognize the syntax\nfrom past episodes where we\n\n135\n00:09:06.700 --> 00:09:08.420\nhave a method code called Get.\n\n136\n00:09:08.420 --> 00:09:12.120\nAnd it's listening for\nrequest coming in on /posts and\n\n137\n00:09:12.120 --> 00:09:16.590\nthen it redirects those request to the\npost controller calling the index action.\n\n138\n00:09:17.590 --> 00:09:25.854\nSo basically, these seven routes\nare built into this resources code here.\n\n139\n00:09:25.854 --> 00:09:29.500\nSo, what resources is doing is basically\na shortcut for getting all of this.\n\n140\n00:09:29.500 --> 00:09:32.920\nIn other words, you can just copy this\ncode and paste it in place of this and\n\n141\n00:09:32.920 --> 00:09:34.710\nthis will work exactly the same.\n\n142\n00:09:34.710 --> 00:09:39.010\nSo, it's nice Rail shorthand for\nthis kind of routing.\n\n143\n00:09:41.304 --> 00:09:44.704\nSo, now that kind of see what's\ngoing on with the routing,\n\n144\n00:09:44.704 --> 00:09:48.520\nlet's take a look out at\nthe migration that we created.\n\n145\n00:09:48.520 --> 00:09:51.970\n&gt;&gt; Now maybe before we get too far ahead\nthere, I do have a quick question for\n\n146\n00:09:51.970 --> 00:09:56.090\nyou about that, that it's kinda\nlike instance this resources:post\n\n147\n00:09:56.090 --> 00:10:00.990\nalmost think of those like keywords, like\nI need this to be a very particular label.\n\n148\n00:10:00.990 --> 00:10:03.188\nBut you said I could copy and paste that.\n\n149\n00:10:03.188 --> 00:10:08.360\nIs the resources:posts,\nis just saying that is now your\n\n150\n00:10:08.360 --> 00:10:12.560\nplural noun and I'm gonna go ahead and\nstub out all of these with the expectation\n\n151\n00:10:12.560 --> 00:10:16.240\nthat there is a post control\nwith an index to create.\n\n152\n00:10:16.240 --> 00:10:19.600\nThose have to be there, or\nis there something behind the scenes,\n\n153\n00:10:19.600 --> 00:10:23.340\nlike another file that is\ncalling to like post routes,\n\n154\n00:10:23.340 --> 00:10:26.720\nthat's actually wiring all this up,\nis what I'm asking making sense?\n\n155\n00:10:26.720 --> 00:10:30.350\n&gt;&gt; Yeah, yeah I think what you're asking\nlike is this referring to code somewhere\n\n156\n00:10:30.350 --> 00:10:35.210\nelse or is this kind of self,\nis this code self sufficient,\n\n157\n00:10:35.210 --> 00:10:38.300\nlike is this all doing\none line right here.\n\n158\n00:10:38.300 --> 00:10:42.610\nAnd the answer to that is that, this\none line of code there's no other code\n\n159\n00:10:42.610 --> 00:10:49.600\nanywhere else in the system that is\nreferencing post or anything like that.\n\n160\n00:10:49.600 --> 00:10:51.490\nThis is basically it, really.\n\n161\n00:10:51.490 --> 00:10:54.359\n&gt;&gt; So having this alone,\nas long as I had a post controller and\n\n162\n00:10:54.359 --> 00:10:56.645\nthe corresponding routes\nof the controller,\n\n163\n00:10:56.645 --> 00:11:00.643\nor excuse me, the corresponding views\nof the controller, needed those views.\n\n164\n00:11:00.643 --> 00:11:05.351\nAs long as I had a post controller that\nhad an index method, a create method,\n\n165\n00:11:05.351 --> 00:11:10.468\nan edit method, and the other plethora\nof methods that are provided to us.\n\n166\n00:11:10.468 --> 00:11:15.950\nThen resources:posts just says,\nI expect a post controller to be there,\n\n167\n00:11:15.950 --> 00:11:18.180\nand have these things defined upon it,\nright?\n\n168\n00:11:18.180 --> 00:11:20.370\n&gt;&gt; Exactly, yeah, and\nthat's a great way of putting it.\n\n169\n00:11:20.370 --> 00:11:25.440\nWe could open up a blank Rails project,\nopen up routes.rb, type this in ourselves\n\n170\n00:11:25.440 --> 00:11:28.390\nand the error we would get if we\ntried to browse at that point,\n\n171\n00:11:28.390 --> 00:11:30.550\nwould be something like\ncontroller not found.\n\n172\n00:11:30.550 --> 00:11:36.210\nBecause it expects, based on this symbol,\nthat post controllers there and it exists.\n\n173\n00:11:36.210 --> 00:11:38.500\nAnd that's kind of why this\nis a symbol and not a string,\n\n174\n00:11:38.500 --> 00:11:43.070\nit kind of we think about it in terms of\nthis being an immutable piece of data that\n\n175\n00:11:43.070 --> 00:11:45.400\nthen gets carried throughout the system?\n\n176\n00:11:45.400 --> 00:11:46.980\nThis has a lot of meaning,\n\n177\n00:11:46.980 --> 00:11:49.970\nthis is being pushed forward\nthroughout the whole application.\n\n178\n00:11:49.970 --> 00:11:51.410\nAnd all kinds of assumptions,\n\n179\n00:11:51.410 --> 00:11:55.120\nRails is making all kinds of\nassumptions based on this little bit.\n\n180\n00:11:55.120 --> 00:11:58.110\n&gt;&gt; All right, so I definitely got\nyou hijacked just a moment ago.\n\n181\n00:11:58.110 --> 00:12:01.790\nI think you were gonna take us take us\nthrough the data base migration that was\n\n182\n00:12:01.790 --> 00:12:06.050\ngenerated when we scaffolded\nthis part of the project.\n\n183\n00:12:06.050 --> 00:12:07.460\n&gt;&gt; Yeah, I just wanted to open that up,\n\n184\n00:12:07.460 --> 00:12:09.373\ntake a quick peek in there\nto see what it's doing.\n\n185\n00:12:09.373 --> 00:12:13.380\nSo let's call that CreatePost because, and\n\n186\n00:12:13.380 --> 00:12:18.590\nthis is a default name since we created\na scaffold on a resource called post.\n\n187\n00:12:18.590 --> 00:12:23.540\nBasically what that's gonna is\nit's gonna add the routes for\n\n188\n00:12:23.540 --> 00:12:28.972\nthe CRUD routes on that resource,\ncreate a model with its migration,\n\n189\n00:12:28.972 --> 00:12:31.450\nadd the controller with all\nthe controller code in there.\n\n190\n00:12:32.840 --> 00:12:36.850\nSo in here, we can see that this code is\npretty much identical to the code that\n\n191\n00:12:36.850 --> 00:12:38.690\nwe went over a few episodes back.\n\n192\n00:12:38.690 --> 00:12:43.450\nWhere we've got a create table happening\nand we're defining a title and\n\n193\n00:12:43.450 --> 00:12:48.340\na body on that along with some time\nstamps and then you saw how we created,\n\n194\n00:12:48.340 --> 00:12:53.280\nexcuse me, we rerun rake db migrate to\nactually send this over to SQL server.\n\n195\n00:12:54.640 --> 00:12:57.590\nSo that code is here for us.\n\n196\n00:12:59.070 --> 00:13:00.490\nSo let's look at the model itself.\n\n197\n00:13:00.490 --> 00:13:01.280\nWhat does that look like?\n\n198\n00:13:03.310 --> 00:13:04.690\nAnd we can see, it's totally blank.\n\n199\n00:13:04.690 --> 00:13:05.970\nThere's nothing there.\n\n200\n00:13:05.970 --> 00:13:10.630\nAnd part of the reason is that everything\nthat the scaffolding needs to operate\n\n201\n00:13:10.630 --> 00:13:15.510\nis built into this application record\nclass, which post is inheriting from.\n\n202\n00:13:15.510 --> 00:13:18.670\nAnd we really haven't added\nour own logic to this yet.\n\n203\n00:13:18.670 --> 00:13:22.250\nThis is just simple boilerplate,\nand that's why this class is empty.\n\n204\n00:13:24.220 --> 00:13:26.870\nNow if we go look in the controller,\nthat's a different story.\n\n205\n00:13:26.870 --> 00:13:32.650\nAnd that's really where the meat of\nwhere the scaffolding does things.\n\n206\n00:13:32.650 --> 00:13:36.320\nThe code that it adds for us,\nthis is kind of where it all lives.\n\n207\n00:13:36.320 --> 00:13:40.286\nSo we can see already,\nthere's quite a bit of code here.\n\n208\n00:13:40.286 --> 00:13:45.374\nLooks like about 75 lines of code,\nit's private methods and\n\n209\n00:13:45.374 --> 00:13:48.740\nthere's a decent amount of stuff here.\n\n210\n00:13:48.740 --> 00:13:52.551\nSo let's go through this step, by step.\n\n211\n00:13:52.551 --> 00:13:57.170\nFirst thing we see is this before_action\nmethod, what's this doing?\n\n212\n00:13:57.170 --> 00:13:59.580\nAnd this is how Rails does callbacks.\n\n213\n00:13:59.580 --> 00:14:04.400\nWhich is basically, callback is simply\ncode that can be called before or\n\n214\n00:14:04.400 --> 00:14:06.630\nafter other code is run.\n\n215\n00:14:06.630 --> 00:14:08.300\nSo what does that mean?\n\n216\n00:14:08.300 --> 00:14:12.520\nBasically, these actions which\nkind of get executed every time\n\n217\n00:14:12.520 --> 00:14:16.670\na route comes in or\na request comes in that triggers a route.\n\n218\n00:14:16.670 --> 00:14:18.874\nAgain it gets called by\none of these actions.\n\n219\n00:14:18.874 --> 00:14:24.290\nBefore that route, excuse me, before\nthat action executes, this before action\n\n220\n00:14:25.470 --> 00:14:31.680\nmethod will set triggers on certain\nroutes, to run code before that happens.\n\n221\n00:14:31.680 --> 00:14:35.900\nSo, reading this,\nI've got before_action:set_post,\n\n222\n00:14:35.900 --> 00:14:39.726\nonly: [:show, :edit, :update, :destroy].\n\n223\n00:14:39.726 --> 00:14:42.910\nSo, what's this set_post here?\n\n224\n00:14:42.910 --> 00:14:47.346\nWell, we can see it's a symbol and\nwhat it refers to,\n\n225\n00:14:47.346 --> 00:14:52.176\nis it refers to a method further\ndown in this controller and\n\n226\n00:14:52.176 --> 00:14:55.246\nwe can see it down here, set_post.\n\n227\n00:14:55.246 --> 00:14:58.731\nWe can see that the name of the method and\nname of the symbol match except\n\n228\n00:14:58.731 --> 00:15:03.180\nthere's not colon here because this is\na method definition and not a symbol.\n\n229\n00:15:03.180 --> 00:15:07.030\nBut what this is doing is\nit's basically looking up\n\n230\n00:15:07.030 --> 00:15:09.330\nbased on the parameter passed in.\n\n231\n00:15:09.330 --> 00:15:11.680\nAnd, what do we mean by parameter?\n\n232\n00:15:11.680 --> 00:15:16.340\nSo let's just hop back over to our actual\n\n233\n00:15:16.340 --> 00:15:21.150\nwebsite here and we'll put some text in.\n\n234\n00:15:23.617 --> 00:15:27.379\nAnd you see how this number 2,\nthis is the reference for\n\n235\n00:15:27.379 --> 00:15:29.630\nthe post that we're looking at.\n\n236\n00:15:30.740 --> 00:15:35.790\nSo when we click on this link, and\nit's really small on my screen.\n\n237\n00:15:35.790 --> 00:15:38.730\nBut kinda like down here\non the bottom part,\n\n238\n00:15:38.730 --> 00:15:43.260\nthis area of the browser,\nyou can kind of see the URL pop up.\n\n239\n00:15:43.260 --> 00:15:49.354\nAnd this is being sent over to the server\nand being picked up by this method,\n\n240\n00:15:49.354 --> 00:15:54.397\nset_post, because right here,\nclicking on edit, right?\n\n241\n00:15:54.397 --> 00:15:59.542\nSo that's gonna get picked up by\nthat route, which is gonna fire this\n\n242\n00:15:59.542 --> 00:16:05.750\nThis edit action, which has no code on its\nown but again Rails has a lot of magic.\n\n243\n00:16:05.750 --> 00:16:08.878\nIt's doing things behind the scenes,\nlike rendering the view for us.\n\n244\n00:16:08.878 --> 00:16:15.739\nBut the set_post is being triggered based\non this before action that's being set.\n\n245\n00:16:15.739 --> 00:16:20.889\nSo this is being called, and\ndown here it's doing .find\n\n246\n00:16:20.889 --> 00:16:26.790\nwhich if you recall from past episodes,\nthis is Active Record's\n\n247\n00:16:26.790 --> 00:16:32.710\nway of looking up a particular\ndata item from a model collection.\n\n248\n00:16:32.710 --> 00:16:35.406\nSo we're looking up the post,\nwe're setting it to a variable.\n\n249\n00:16:35.406 --> 00:16:40.250\nAnd this at sign in front of the variable,\nit's not a hash tag.\n\n250\n00:16:40.250 --> 00:16:43.550\nIt's really just an instance variable.\n\n251\n00:16:43.550 --> 00:16:47.320\nSo it increases the scope of this variable\nto everywhere on this controller, so\n\n252\n00:16:47.320 --> 00:16:49.080\nwe can refer to it everywhere.\n\n253\n00:16:49.080 --> 00:16:52.810\nAnd that's kind of how this\nis able to be readable\n\n254\n00:16:52.810 --> 00:16:57.780\nin all of these methods that\nare all over this class.\n\n255\n00:16:57.780 --> 00:17:00.610\n&gt;&gt; Now Manny, let me just make\nsure I have all this straight.\n\n256\n00:17:00.610 --> 00:17:05.021\nSo this before action, if I'm not\nmistaken, it says run set post but\n\n257\n00:17:05.021 --> 00:17:09.073\nonly when you're showing editing,\nupdating, or destroying\n\n258\n00:17:09.073 --> 00:17:09.820\n&gt;&gt; That's exactly right.\n\n259\n00:17:09.820 --> 00:17:16.560\n&gt;&gt; Because those may have an associated\nID where I need to set the posts by ID.\n\n260\n00:17:16.560 --> 00:17:22.231\nNow the set is creating\nan instance variable, @post.\n\n261\n00:17:22.231 --> 00:17:26.647\nYou're essentially you have this\nobject based on this controller.\n\n262\n00:17:26.647 --> 00:17:30.561\nAnd then that object is storing internally\nto that data, but then it's available\n\n263\n00:17:30.561 --> 00:17:34.701\nthroughout all of the methods, so that set\nposts, grabbing that from the database and\n\n264\n00:17:34.701 --> 00:17:38.340\nmaking that available everywhere\ninside of that controller, correct?\n\n265\n00:17:38.340 --> 00:17:39.660\n&gt;&gt; Yup, exactly.\n\n266\n00:17:39.660 --> 00:17:44.276\n&gt;&gt; And then that may change if I go edit\nand then destroy but they have different\n\n267\n00:17:44.276 --> 00:17:49.199\nID, so that @post may kind of mutate\novertime as things are needed, correct?\n\n268\n00:17:49.199 --> 00:17:50.476\n&gt;&gt; Yes, exactly.\n\n269\n00:17:50.476 --> 00:17:51.265\n&gt;&gt; Okay.\n&gt;&gt; Yeah,\n\n270\n00:17:51.265 --> 00:17:54.286\nevery time that controller fires\nbecause of a route coming in,\n\n271\n00:17:54.286 --> 00:17:56.450\nthat value is gonna be different.\n\n272\n00:17:56.450 --> 00:18:00.210\n&gt;&gt; All right, now one final thing if\nyou can scroll up to the top for me.\n\n273\n00:18:00.210 --> 00:18:01.206\n&gt;&gt; Sure.\n\n274\n00:18:01.206 --> 00:18:04.997\n&gt;&gt; [COUGH] I'm just making sure\nI got all this in my head,\n\n275\n00:18:04.997 --> 00:18:08.197\n@post is different than @posts, right?\n\n276\n00:18:08.197 --> 00:18:08.845\n&gt;&gt; Yes.\n\n277\n00:18:08.845 --> 00:18:12.030\n&gt;&gt; So there's an intrinsic\ndifference like get post.\n\n278\n00:18:12.030 --> 00:18:14.090\nThat's all the posts from the database.\n\n279\n00:18:14.090 --> 00:18:16.150\nWhatever is stored in our database,\nI'm getting all of it.\n\n280\n00:18:16.150 --> 00:18:18.798\n&gt;&gt; Right.\n&gt;&gt; As a more or less a list or collection.\n\n281\n00:18:18.798 --> 00:18:22.880\nBut then @post is a singular one,\nI made a creating, showing,\n\n282\n00:18:22.880 --> 00:18:25.170\nediting, updating or\nsomething like that, correct?\n\n283\n00:18:25.170 --> 00:18:26.252\n&gt;&gt; Yeah, exactly.\n\n284\n00:18:26.252 --> 00:18:28.084\n&gt;&gt; All right, I got it all in my head.\n\n285\n00:18:28.084 --> 00:18:29.958\nI kind of derailed you\nthere a little bit Manny.\n\n286\n00:18:29.958 --> 00:18:32.691\n&gt;&gt; Yeah, you got posts here, posts there.\n\n287\n00:18:32.691 --> 00:18:36.762\n&gt;&gt; That post, we got to post route\nthat has a post that has postries,\n\n288\n00:18:36.762 --> 00:18:38.180\nit was a little crazy.\n\n289\n00:18:38.180 --> 00:18:41.000\nI just wanted to make sure I had it\nall in my head, but we're good to go.\n\n290\n00:18:41.000 --> 00:18:44.530\nI see what's going on here and to be\nhonest with you, I'm kind of impressed\n\n291\n00:18:44.530 --> 00:18:48.790\nthat there still is a little bit of magic\nthere's hidden behind the scenes from us.\n\n292\n00:18:48.790 --> 00:18:51.704\nBut you don't even have to\ndo a lot of work to get all,\n\n293\n00:18:51.704 --> 00:18:56.040\nI've written [INAUDIBLE] services\nthat are not nearly this easy.\n\n294\n00:18:56.040 --> 00:18:57.188\n&gt;&gt; Yeah, it's pretty awesome.\n\n295\n00:18:57.188 --> 00:19:00.463\nJust go, you push a button and go.\n\n296\n00:19:00.463 --> 00:19:05.205\nWe're definitely seeing a lot of\nRails's conventions at play here.\n\n297\n00:19:05.205 --> 00:19:10.320\nLike when you mentioned singular post\nversus the plural, that's definitely\n\n298\n00:19:10.320 --> 00:19:15.060\na convention in Rails which you'll\nsee in Rails apps that follow it.\n\n299\n00:19:16.260 --> 00:19:22.800\nAlong with this idea of this method\nset post, and why is it done this way?\n\n300\n00:19:22.800 --> 00:19:27.602\nAnd it really comes down to just having\ndry code, a don't repeat yourself code.\n\n301\n00:19:27.602 --> 00:19:32.970\nAnd Rail has created this action,\nso that we can take\n\n302\n00:19:32.970 --> 00:19:38.949\ncode that we're going to use over and\nover and over again.\n\n303\n00:19:38.949 --> 00:19:40.540\nLike getting an idea,\n\n304\n00:19:40.540 --> 00:19:45.326\nbecause that's what always have\nin common and calling that there.\n\n305\n00:19:45.326 --> 00:19:47.890\nI'm kind of scrolling down these actions.\n\n306\n00:19:47.890 --> 00:19:52.500\nWe can see that index, we saw a pattern\nlike this in a previous episode where\n\n307\n00:19:52.500 --> 00:19:55.200\nwe're getting all of our posts and\nputting into a variable,\n\n308\n00:19:55.200 --> 00:20:00.210\nwhich then we're gonna access\nin our view and show, and edit.\n\n309\n00:20:00.210 --> 00:20:02.370\nSo these don't have many code at all.\n\n310\n00:20:02.370 --> 00:20:05.510\nAnd that's because they're\nsimply showing us a form.\n\n311\n00:20:05.510 --> 00:20:10.410\nSo show is gonna show us a form to create,\nexcuse me, I misspoke.\n\n312\n00:20:10.410 --> 00:20:14.320\nShow is actually showing us data for\na single post, but\n\n313\n00:20:14.320 --> 00:20:17.290\nall the logic that we need is really\ntaken care of in the set post.\n\n314\n00:20:17.290 --> 00:20:20.900\nOnce we have a post, we don't need to do\nanything and we can just render the view.\n\n315\n00:20:21.990 --> 00:20:26.760\nWith new, we're creating a new object and\nyou'll see why this is important later.\n\n316\n00:20:26.760 --> 00:20:32.200\nWhy do we need a blank object to past\nthat in to our view for our form?\n\n317\n00:20:34.080 --> 00:20:36.739\nJust hold that thought,\nwe'll get to that in just a moment.\n\n318\n00:20:36.739 --> 00:20:42.029\nEdit is again, taking care of by set post.\n\n319\n00:20:42.029 --> 00:20:43.902\nIt's gonna render a form for us.\n\n320\n00:20:43.902 --> 00:20:46.780\nAnd here on create,\nwe'll talk about this a little bit.\n\n321\n00:20:46.780 --> 00:20:48.240\nSo what's going on here?\n\n322\n00:20:48.240 --> 00:20:49.240\nIt seems like a pretty big method.\n\n323\n00:20:49.240 --> 00:20:52.420\nThere's a lot of stuff here.\n\n324\n00:20:52.420 --> 00:20:54.620\nSo what's happening is that,\n\n325\n00:20:54.620 --> 00:20:59.571\nwe are creating a new post from\nthis post_params, what's that?\n\n326\n00:21:01.550 --> 00:21:06.340\nAnd that's coming from down here,\nit's actually a method call.\n\n327\n00:21:06.340 --> 00:21:12.280\nSo it looks like attributes or\njust data being passed in.\n\n328\n00:21:12.280 --> 00:21:15.860\nBut we're actually calling a method here,\nkind of like you might do in JavaScript.\n\n329\n00:21:15.860 --> 00:21:20.430\nAnd this runs, there's some\nmore Rails magic going on here.\n\n330\n00:21:20.430 --> 00:21:24.130\nBut basically what this is doing is that,\nit's only allowing\n\n331\n00:21:24.130 --> 00:21:29.090\nthe parameters that we define through\nto the controller for security.\n\n332\n00:21:29.090 --> 00:21:31.110\nAnd that's kind of just built into Rails.\n\n333\n00:21:31.110 --> 00:21:32.820\nAnd it's nice that it's here for us,\n\n334\n00:21:32.820 --> 00:21:36.770\nbecause now that this pattern is here it's\neasy to follow this and add stuff onto it.\n\n335\n00:21:38.200 --> 00:21:44.440\nSo basically this is simply getting\nthe attribute from the request,\n\n336\n00:21:44.440 --> 00:21:47.750\nand then sending back what's allowed.\n\n337\n00:21:47.750 --> 00:21:50.185\nAnd we defined what's allowed\nusing this two symbols.\n\n338\n00:21:50.185 --> 00:21:53.529\nWe've got title and\nbody, because that what\n\n339\n00:21:53.529 --> 00:21:58.281\nwe pass in to our generate command\nwhen we created the scaffold.\n\n340\n00:21:58.281 --> 00:22:03.059\nSo going back up here to new, so\nwe're creating a new post and\n\n341\n00:22:03.059 --> 00:22:08.603\nthen this respond to do format,\nthis in Ruby is called the form block.\n\n342\n00:22:08.603 --> 00:22:12.881\nAnd basically, this is basically\n\n343\n00:22:12.881 --> 00:22:17.601\nallowing us to respond to the client in\n\n344\n00:22:17.601 --> 00:22:22.477\nthe same way that the request was made.\n\n345\n00:22:22.477 --> 00:22:27.422\nAnd by default, we can respond in JSON.\n\n346\n00:22:27.422 --> 00:22:31.740\nSo if we had like a data centric system\nwhere it's a computer talking or\n\n347\n00:22:31.740 --> 00:22:35.191\nan API call or\nsomething like that instead of a browser.\n\n348\n00:22:35.191 --> 00:22:39.928\nIf its got by default this response codes\n\n349\n00:22:39.928 --> 00:22:44.420\nin here, So they're not necessary, though.\n\n350\n00:22:44.420 --> 00:22:50.930\nIf we take this out, simply because we're\nbuilding a web app and that's our focus,\n\n351\n00:22:52.110 --> 00:22:55.720\nwe can remove that and the app will\nwork just the same as it does now.\n\n352\n00:22:57.648 --> 00:23:03.080\nSo this if else N block here\nwe've got going on is that\n\n353\n00:23:03.080 --> 00:23:05.810\nif the post saves successfully,\nbecause this\n\n354\n00:23:05.810 --> 00:23:09.980\nis a potentially dangerous thing that\ncan happen or an unexpected thing.\n\n355\n00:23:09.980 --> 00:23:14.040\nWe might run out of disk space or\nthe data might be bad for some reason.\n\n356\n00:23:14.040 --> 00:23:20.413\nSo If it saved successfully,\nthen we'll redirect to it.\n\n357\n00:23:20.413 --> 00:23:23.936\nNow we don't have to do this here,\nthis is just a default behavior.\n\n358\n00:23:23.936 --> 00:23:29.294\nBut on create,\nwe could redirect with different page,\n\n359\n00:23:29.294 --> 00:23:33.977\nwe could redirect back to the index for\nexample.\n\n360\n00:23:33.977 --> 00:23:39.330\nAnd you'll notice that in this syntax\nwe're redirecting to an object,\n\n361\n00:23:39.330 --> 00:23:41.970\nwhich it's kind of weird, right?\n\n362\n00:23:41.970 --> 00:23:44.520\nUsually you'll redirect to a URL.\n\n363\n00:23:44.520 --> 00:23:50.070\nSo there's another Rail shortcut going\non here, where this is a stand in or\n\n364\n00:23:50.070 --> 00:23:55.812\ncan be a stand in in a Rails app for the\nshow route to whatever this represents.\n\n365\n00:23:55.812 --> 00:23:58.368\nAssuming that this is a resource.\n\n366\n00:23:58.368 --> 00:24:00.500\nYou can see we've got\nthis nice message for us.\n\n367\n00:24:00.500 --> 00:24:02.340\nAnd that's where this comes from.\n\n368\n00:24:02.340 --> 00:24:03.820\nAnd we've created it.\n\n369\n00:24:03.820 --> 00:24:06.870\nWe can see that message come through.\n\n370\n00:24:08.040 --> 00:24:11.437\nAnd it's so quick.\n\n371\n00:24:11.437 --> 00:24:15.060\nWe don't really see that\nredirect happening.\n\n372\n00:24:15.060 --> 00:24:18.355\nBut we can see as part of the response\nthere's things in the view.\n\n373\n00:24:18.355 --> 00:24:22.310\nThere's code in the view that take\nthat message and display it for us.\n\n374\n00:24:22.310 --> 00:24:24.300\nSo we can branch that out.\n\n375\n00:24:24.300 --> 00:24:26.500\nCreate a flash message or\nsomething like that.\n\n376\n00:24:26.500 --> 00:24:29.648\n&gt;&gt; Now we've seen,\nwe're passing this information.\n\n377\n00:24:29.648 --> 00:24:34.380\nWe're redirecting, and\nwe're seeing some responses in the views.\n\n378\n00:24:34.380 --> 00:24:36.982\nMaybe you could just touch\non maybe where we start and\n\n379\n00:24:36.982 --> 00:24:39.712\nsome of those other pages\ncuz I'm kind of interested.\n\n380\n00:24:39.712 --> 00:24:42.004\nLike this one, for instance, I redirect.\n\n381\n00:24:42.004 --> 00:24:44.429\nI'm redirecting to an object and\nthere's a notice there.\n\n382\n00:24:44.429 --> 00:24:48.349\nAnd we can see the notice,\nlike you said, like a flash message.\n\n383\n00:24:48.349 --> 00:24:53.680\nHow does that actually work from a Rails\nperspective in conjunction with the views?\n\n384\n00:24:53.680 --> 00:24:57.410\n&gt;&gt; Yeah, so in the view, let's open\nup the view and take a look at it.\n\n385\n00:24:57.410 --> 00:25:03.210\n&gt;&gt; So,\nthis is redirecting to the show view.\n\n386\n00:25:03.210 --> 00:25:04.170\nSo let's open up that one.\n\n387\n00:25:06.820 --> 00:25:08.800\nSo, right here, we immediately,\n\n388\n00:25:08.800 --> 00:25:11.410\nthe first thing we see is\na paragraph tag with an ID on it.\n\n389\n00:25:11.410 --> 00:25:14.880\nSo, if we have CSS that we want to\nadd styling to this, we can do that.\n\n390\n00:25:14.880 --> 00:25:17.950\nAnd the value of this is\ngonna get set to notice.\n\n391\n00:25:17.950 --> 00:25:21.910\nGoing back over to the controller\nwe can see our symbol for notice.\n\n392\n00:25:21.910 --> 00:25:23.914\nSo, again,\nthere's some Rails magic going on.\n\n393\n00:25:23.914 --> 00:25:25.517\nBut that's how these are linked.\n\n394\n00:25:25.517 --> 00:25:31.485\nAnd that this notice here gets sent over\nto the view as this notice variable.\n\n395\n00:25:31.485 --> 00:25:35.120\nAnd then it shows up in\nour view when it renders.\n\n396\n00:25:36.330 --> 00:25:40.130\nAnd going through the rest of this,\nthis show view,\n\n397\n00:25:40.130 --> 00:25:43.730\nwe can see paragraph tag with our title,\nanother paragraph tag with our body.\n\n398\n00:25:43.730 --> 00:25:46.389\nAnd of course this is just template for\nus.\n\n399\n00:25:46.389 --> 00:25:52.080\nWe're free and encouraged to take this and\ncreate whatever HTML we want.\n\n400\n00:25:52.080 --> 00:25:54.020\nAnd then down here we've got these links.\n\n401\n00:25:55.450 --> 00:25:58.597\nIt may not be immediately obvious\nthat they're links besides this just\n\n402\n00:25:58.597 --> 00:25:59.337\nlink_to call.\n\n403\n00:25:59.337 --> 00:26:01.420\nBut, they certainly don't\nlook like an A tag.\n\n404\n00:26:01.420 --> 00:26:03.880\nAnd, there's no href or anything in here.\n\n405\n00:26:03.880 --> 00:26:05.800\nSo, what's going on with this?\n\n406\n00:26:07.420 --> 00:26:10.600\nWell, what we see is another Rails helper.\n\n407\n00:26:10.600 --> 00:26:15.480\nThis method, link_to,\nis basically taking in parameters.\n\n408\n00:26:15.480 --> 00:26:18.200\nAnd, it takes many parameters,\nbut these two are required.\n\n409\n00:26:18.200 --> 00:26:21.150\nAnd, that's a name for\nthe link and then a URL.\n\n410\n00:26:21.150 --> 00:26:25.760\nAnd this can be a URL\nas a string like this.\n\n411\n00:26:25.760 --> 00:26:31.310\nWe can actually hard\ncode a URL into there or\n\n412\n00:26:31.310 --> 00:26:39.860\nwe can use path helpers in Rails,\nso this edit_post_path.\n\n413\n00:26:39.860 --> 00:26:44.658\nPost, this is another Rails helper\nwhich is taking in an object, a model,\n\n414\n00:26:44.658 --> 00:26:46.119\nrepresenting a post.\n\n415\n00:26:46.119 --> 00:26:53.710\nAnd then it returns back the relative\nURL to that within our system.\n\n416\n00:26:55.170 --> 00:26:59.860\nAnd by relative URL,\nI just mean something like slash /posts/3.\n\n417\n00:27:02.650 --> 00:27:08.642\nSo there's another way of,\nI'm gonna talk a little more about these.\n\n418\n00:27:08.642 --> 00:27:13.439\nCuz there's a pattern that kind\nof follows a RESTful pattern in\n\n419\n00:27:13.439 --> 00:27:15.347\nRails with these links.\n\n420\n00:27:15.347 --> 00:27:20.165\nI'm just gonna hop on over to my Terminal.\n\n421\n00:27:20.165 --> 00:27:24.190\nAnd I'm going to use another rake command,\nthis rake routes.\n\n422\n00:27:25.460 --> 00:27:30.080\nAnd this will show us all of the routes\nthat we've defined in our system so far.\n\n423\n00:27:31.440 --> 00:27:34.740\nSo we can see our HTTP verbs,\nour URL pattern,\n\n424\n00:27:36.510 --> 00:27:41.140\nthis placeholder for our ID and\nthe controller actions that it represents.\n\n425\n00:27:41.140 --> 00:27:46.280\nBut over here, this prefix, we've got\nposts#new, posts#edit, post, post.\n\n426\n00:27:46.280 --> 00:27:47.360\nWhat does this prefix mean?\n\n427\n00:27:47.360 --> 00:27:52.009\nIt's basically a shortcut for\nbeing able to execute or\n\n428\n00:27:52.009 --> 00:27:56.265\naccess the URL values of\nthese routes right here.\n\n429\n00:28:01.966 --> 00:28:08.760\nSo just want to jump on over to another\nview and show what our form looks like.\n\n430\n00:28:10.120 --> 00:28:14.410\nAnd this came up before when we were\nlooking at our index, excuse me,\n\n431\n00:28:14.410 --> 00:28:15.360\nat our new.\n\n432\n00:28:16.430 --> 00:28:24.700\nAnd we were passing in this empty post,\nthis blank object, setting it as @post.\n\n433\n00:28:24.700 --> 00:28:28.870\nAnd then the new route is rendering this.\n\n434\n00:28:30.060 --> 00:28:31.620\nSo what's that look like?\n\n435\n00:28:31.620 --> 00:28:35.240\nWell, the new route is,\nthe new view is really short.\n\n436\n00:28:35.240 --> 00:28:40.050\nIt basically calls a sub-view,\nwhich is called a partial.\n\n437\n00:28:40.050 --> 00:28:43.700\nWhich is a way of taking a partial,\nsplitting it up into smaller chunks, and\n\n438\n00:28:43.700 --> 00:28:45.980\nthen reusing those chunks\nall throughout the system.\n\n439\n00:28:45.980 --> 00:28:47.800\nAnd that's what we've got going on here.\n\n440\n00:28:49.150 --> 00:28:52.794\nAnd you can see that we're passing here,\n\n441\n00:28:52.794 --> 00:28:58.325\ninto this partial view,\nwe're passing in our @post as post.\n\n442\n00:28:58.325 --> 00:29:02.246\nSo really we're just passing that variable\non, kind of like a bucket brigade.\n\n443\n00:29:03.652 --> 00:29:08.161\nAnd here in form,\nwe've got this form_with method,\n\n444\n00:29:08.161 --> 00:29:15.730\nwhich is we're telling it that it's of\ntype post, which links back to the model.\n\n445\n00:29:15.730 --> 00:29:18.780\nAnd we see this Ruby block format.\n\n446\n00:29:18.780 --> 00:29:23.920\nSo inside of all of this, All the way down\n\n447\n00:29:23.920 --> 00:29:28.802\nhere we've got access to\nthis variable called form,\n\n448\n00:29:28.802 --> 00:29:34.444\nwhich based on the methods that\nare we get with the framework,\n\n449\n00:29:34.444 --> 00:29:38.150\nkinda going back, this is a framework.\n\n450\n00:29:38.150 --> 00:29:40.000\nAnd it's like software madlibs.\n\n451\n00:29:40.000 --> 00:29:40.721\nWe fill in the gaps.\n\n452\n00:29:40.721 --> 00:29:42.010\nThere's sentence all around us.\n\n453\n00:29:42.010 --> 00:29:43.774\nAnd this is kind of what we're seeing.\n\n454\n00:29:43.774 --> 00:29:49.620\nSo here, form, here we go.\n\n455\n00:29:49.620 --> 00:29:54.940\nSo, we're seeing this\nmethod called text_field,\n\n456\n00:29:54.940 --> 00:29:57.920\non this form object,\nwhich is referenced up here.\n\n457\n00:29:59.120 --> 00:30:02.070\nSo, this seems pretty complicated.\n\n458\n00:30:02.070 --> 00:30:03.240\nWhy is all this happening?\n\n459\n00:30:03.240 --> 00:30:04.563\nWhat's the purpose of all of this?\n\n460\n00:30:04.563 --> 00:30:09.917\nAnd it definitely seems like it's\nmore than just a simple form tag.\n\n461\n00:30:09.917 --> 00:30:14.018\nBut the reason this is here is because\nRails has built in ways of filling in\n\n462\n00:30:14.018 --> 00:30:15.560\nvalues for us.\n\n463\n00:30:15.560 --> 00:30:19.270\nAnd you will see with validations\n\n464\n00:30:19.270 --> 00:30:22.470\nin future episodes how we can\nget free error messaging.\n\n465\n00:30:22.470 --> 00:30:25.930\nAnd basically the logic of our\nmodel will be able to access that\n\n466\n00:30:25.930 --> 00:30:27.670\nthrough the forms here.\n\n467\n00:30:28.760 --> 00:30:32.450\nSo in short that's why we're\nable to if we go to edit.\n\n468\n00:30:32.450 --> 00:30:34.784\nAnd I killed my server so\nwe're not seeing that.\n\n469\n00:30:34.784 --> 00:30:41.402\nBut that's how it knows the field\nwas pre-populated with data.\n\n470\n00:30:41.402 --> 00:30:43.167\nAnd that's how all that works.\n\n471\n00:30:43.167 --> 00:30:46.185\n&gt;&gt; So, Manny,\nthis is happening because this form,\n\n472\n00:30:46.185 --> 00:30:51.790\nif you scroll up to the top of this form\npartial, we have form_with model of post.\n\n473\n00:30:51.790 --> 00:30:56.647\nAnd the post is being rendered from\nthe new as an empty object that we\n\n474\n00:30:56.647 --> 00:31:01.174\nnew-ed up in the controller,\nand then kind of passed along.\n\n475\n00:31:01.174 --> 00:31:05.374\nAnd then if this form was now\ngiven a post that is not new, but\n\n476\n00:31:05.374 --> 00:31:12.035\nhas some pre-populated value, it will go,\nhere's something, like in the edit view.\n\n477\n00:31:12.035 --> 00:31:14.410\n&gt;&gt; Exactly.\n&gt;&gt; So we're reusing this form\n\n478\n00:31:14.410 --> 00:31:19.040\nin both the edit, or\nat least some capacity we're reusing this.\n\n479\n00:31:19.040 --> 00:31:21.740\nI'm not entirely sure how\nthat all works together.\n\n480\n00:31:21.740 --> 00:31:27.890\nI'm pretty sure, correct me if I'm wrong,\nthat if it has particular properties,\n\n481\n00:31:27.890 --> 00:31:29.950\nthose either pre-populate,\nor they're empty.\n\n482\n00:31:29.950 --> 00:31:33.000\nAnd then we just keep using the same\nthing keeping it dry, right?\n\n483\n00:31:33.000 --> 00:31:35.600\n&gt;&gt; Yeah, exactly, exactly.\n\n484\n00:31:35.600 --> 00:31:38.960\nYeah, and I know there's\na lot of code to cover here.\n\n485\n00:31:38.960 --> 00:31:41.350\nI mean, this scaffolding\ncreated a lot of stuff for us.\n\n486\n00:31:41.350 --> 00:31:42.690\nAnd as the series goes on,\n\n487\n00:31:42.690 --> 00:31:47.420\nwe'll get to have a deeper look\ninto how each of these parts work.\n\n488\n00:31:47.420 --> 00:31:49.070\nIt's kind of giving an overview right now.\n\n489\n00:31:49.070 --> 00:31:50.013\nWe've just kind of peeked under the hood.\n\n490\n00:31:50.013 --> 00:31:55.389\nSo soon we'll be able to actually\nget in there with our own tools and\n\n491\n00:31:55.389 --> 00:31:57.710\nmake this work for us.\n\n492\n00:31:57.710 --> 00:31:59.740\n&gt;&gt; Well Manny,\nI'm definitely digging some Rails,\n\n493\n00:31:59.740 --> 00:32:04.110\nbecause that scaffolding, well, I spent\na lot of time enforcing a RESTful pattern.\n\n494\n00:32:04.110 --> 00:32:07.460\nAnd that just kinda does it for\nme, at least from the beginnings.\n\n495\n00:32:07.460 --> 00:32:10.630\nI know there's some customizations\nthat may need to be done.\n\n496\n00:32:10.630 --> 00:32:12.848\nAnd well,\nwe're gonna see that in future episodes.\n\n497\n00:32:12.848 --> 00:32:16.780\nSo definitely stay tuned cuz we got more\nintro to Ruby on Rails coming at you.\n\n498\n00:32:16.780 --> 00:32:19.690\nBut for this episode, I think we're\ngonna go ahead and wrap it up.\n\n499\n00:32:19.690 --> 00:32:22.860\nSo, signing off for DevProTV,\nI've been your host Justin Dennison.\n\n500\n00:32:22.860 --> 00:32:23.940\n&gt;&gt; I'm Manny Rodriguez.\n\n501\n00:32:23.940 --> 00:32:24.947\n&gt;&gt; And we'll see you next time.\n\n502\n00:32:24.947 --> 00:32:29.588\n[MUSIC]\n\n",
          "vimeoId": "241173978"
        },
        {
          "description": "In this episode, Manny and Justin take a look at how our Rails project can have failures based on input data and user interactions. Manny demonstrates how the use of validations to help alleviate some of those data based failures.",
          "length": "1220",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-introtorubyonrails/techskills-introtorubyonrails-7-1-1-intro_to_validations-110117-PGM.00_20_11_23.Still001.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-introtorubyonrails/techskills-introtorubyonrails-7-1-1-intro_to_validations-110117-PGM.00_20_11_23.Still001-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-introtorubyonrails/techskills-introtorubyonrails-7-1-1-intro_to_validations-110117-PGM.00_20_11_23.Still001-sm.jpg",
          "title": "Intro to Validations",
          "transcript": "WEBVTT\n\n1\n00:00:00.000 --> 00:00:10.000\n[MUSIC]\n\n2\n00:00:12.782 --> 00:00:17.121\nGreetings, everyone, and welcome back to\nanother exciting episode of DevPro.TV.\n\n3\n00:00:17.121 --> 00:00:19.274\nI'm your host, Justin Dennison,\n\n4\n00:00:19.274 --> 00:00:23.050\nas we continue our journey\ninto the Ruby on Rails land.\n\n5\n00:00:23.050 --> 00:00:24.222\nI am so excited.\n\n6\n00:00:24.222 --> 00:00:26.810\nWell, we're gonna be talking\nabout validations today.\n\n7\n00:00:26.810 --> 00:00:29.530\nAnd here to help us along in our\njourney is Mr. Manny Rodriguez.\n\n8\n00:00:29.530 --> 00:00:30.490\nHow you doing today, Manny?\n\n9\n00:00:30.490 --> 00:00:31.955\n&gt;&gt; I'm great, glad to be back.\n\n10\n00:00:31.955 --> 00:00:33.000\n&gt;&gt; I'm glad to have you back,\n\n11\n00:00:33.000 --> 00:00:35.970\nbecause I was thinking about\na couple of the previous episodes.\n\n12\n00:00:35.970 --> 00:00:38.165\nWe've seen some of this amazing tooling.\n\n13\n00:00:38.165 --> 00:00:41.005\nQuite frankly I was envious of some\nof the things that I've had to\n\n14\n00:00:41.005 --> 00:00:44.015\nkind of toil over to get\nworking here like, I'm done.\n\n15\n00:00:45.015 --> 00:00:46.645\nSo such a scaffold, right?\n\n16\n00:00:46.645 --> 00:00:48.965\nScaffold will give us this rest\nfree resource to make sure we have\n\n17\n00:00:48.965 --> 00:00:53.835\nthe controller stubbed out,\nall the routes wired up, all the views.\n\n18\n00:00:53.835 --> 00:00:59.290\nBut I feel like it's not going to\naccount for certain Edge cases,\n\n19\n00:00:59.290 --> 00:01:03.550\nor maybe even not Edge cases where\nsomeone just puts in garbage data.\n\n20\n00:01:03.550 --> 00:01:04.760\nAm I right in that?\n\n21\n00:01:04.760 --> 00:01:06.230\n&gt;&gt; You're totally, totally right.\n\n22\n00:01:08.080 --> 00:01:10.293\nAnd scaffolding is great\nas a starting point, but\n\n23\n00:01:10.293 --> 00:01:12.940\nthere's a lot of things it doesn't do for\nyou.\n\n24\n00:01:12.940 --> 00:01:15.080\nAnd I'll show you one right now.\n\n25\n00:01:15.080 --> 00:01:18.480\nWe've got this scaffold for\nour post resource.\n\n26\n00:01:18.480 --> 00:01:22.370\nThis is kind of picking up at\nthe end of the last episode,\n\n27\n00:01:22.370 --> 00:01:25.170\nwe ran the Rails generated\nscaffold command.\n\n28\n00:01:25.170 --> 00:01:27.610\nWe saw the code that it generated for us.\n\n29\n00:01:27.610 --> 00:01:35.280\nGoing over here and creating a new post,\nand we can just create posts with nothing.\n\n30\n00:01:35.280 --> 00:01:38.020\nThere's no validation.\n\n31\n00:01:38.020 --> 00:01:43.530\nAnd that's kind of what this episode\nis about, is controlling our data.\n\n32\n00:01:43.530 --> 00:01:47.510\nWhat is a valid post to look like, right?\n\n33\n00:01:47.510 --> 00:01:51.710\nSurely, if we've got no title and\nno body, and\n\n34\n00:01:51.710 --> 00:01:54.740\nwe push that onto our blog,\nwe're not gonna have a lot of visitors.\n\n35\n00:01:54.740 --> 00:01:56.772\n&gt;&gt; You know what?\nThat might explain why no one reads my\n\n36\n00:01:56.772 --> 00:01:58.453\nblog, cuz that's how I post on blog.\n\n37\n00:01:58.453 --> 00:02:00.928\nI thought it was just\nlike a timestamp thing.\n\n38\n00:02:00.928 --> 00:02:03.748\nBut you're telling me I should\nhave a title and a body and\n\n39\n00:02:03.748 --> 00:02:07.172\nI shouldn't be allowed to make\na post if I don't have those things.\n\n40\n00:02:07.172 --> 00:02:11.271\n&gt;&gt; Yeah, just big red box showing,\nput data here, put stuff here.\n\n41\n00:02:11.271 --> 00:02:13.570\n&gt;&gt; Okay, okay,\nI do need instruction sometimes.\n\n42\n00:02:13.570 --> 00:02:17.490\n&gt;&gt; Me, too, and that's what this is about,\nvalidations, is that we can put\n\n43\n00:02:17.490 --> 00:02:22.160\nrestrictions on our data to let the user\nknow, hm, yeah, that's not quite right.\n\n44\n00:02:22.160 --> 00:02:24.320\nYou might wanna look at this right here.\n\n45\n00:02:24.320 --> 00:02:26.090\nSo thinking about a post,\n\n46\n00:02:26.090 --> 00:02:30.990\nwhat are some validations that\nwe might wanna add to our posts?\n\n47\n00:02:30.990 --> 00:02:34.470\nWell, for one,\nwe wanna make sure that there's a body and\n\n48\n00:02:34.470 --> 00:02:39.780\nthere's a title, because without either of\nthose, there's not much of a post there.\n\n49\n00:02:39.780 --> 00:02:42.200\nSo how do we do that in the Rails way?\n\n50\n00:02:42.200 --> 00:02:46.686\nAnd as you can imagine,\nRails being a framework that has all this\n\n51\n00:02:46.686 --> 00:02:51.341\nbuilt-in stuff for us,\nthere's a construct called validations\n\n52\n00:02:51.341 --> 00:02:55.264\nwhich we can add into our\nmodel which will enforce that.\n\n53\n00:02:55.264 --> 00:03:00.878\nSo let's hop on over to our project, and\nI'm going to open up my text editor here.\n\n54\n00:03:00.878 --> 00:03:05.462\nAnd I'm gonna cd into my project.\n\n55\n00:03:05.462 --> 00:03:09.260\nAnd from here, run our text editor.\n\n56\n00:03:11.210 --> 00:03:12.520\nI'm gonna open up our model file.\n\n57\n00:03:13.550 --> 00:03:16.990\nNow last time we saw how this\nmodel file was totally empty,\n\n58\n00:03:16.990 --> 00:03:20.160\ncuz everything it needed,\nit got from application record.\n\n59\n00:03:20.160 --> 00:03:21.320\nIt was built-in.\n\n60\n00:03:21.320 --> 00:03:23.600\nNow we're getting into code, or\n\n61\n00:03:23.600 --> 00:03:26.500\nlogic really,\nthat is only applicable to our app.\n\n62\n00:03:26.500 --> 00:03:29.360\nThis is our business logic that\nwe're focusing on right now.\n\n63\n00:03:29.360 --> 00:03:31.710\nSo now we're gonna start\nto fill this class out,\n\n64\n00:03:31.710 --> 00:03:35.260\nthis model out,\nwith some of our own stuff.\n\n65\n00:03:35.260 --> 00:03:38.010\nAnd the first thing we want to\nadd is make sure there's a title.\n\n66\n00:03:39.090 --> 00:03:43.200\nSo in Rails,\nwe do that with a validates method.\n\n67\n00:03:43.200 --> 00:03:48.320\nSo validates and\nthen we tell it which field\n\n68\n00:03:48.320 --> 00:03:51.770\nwe want the validation to apply to and\nthen we can add some other stuff\n\n69\n00:03:53.170 --> 00:03:58.120\nlike what validation we want to add.\n\n70\n00:03:58.120 --> 00:04:03.320\nSo I've typed in a presence: equals\ntrue and this is straight syntax.\n\n71\n00:04:03.320 --> 00:04:06.680\nWhy does this have a colon here and\nnot there?\n\n72\n00:04:06.680 --> 00:04:13.280\nThe reason is is that this method\ntakes a hash, and this is a hash.\n\n73\n00:04:13.280 --> 00:04:17.700\nSo another way of writing this,\nRuby has a lot of syntactic sugar for us,\n\n74\n00:04:17.700 --> 00:04:21.500\nand this is the original\nway of writing it.\n\n75\n00:04:21.500 --> 00:04:23.580\nIf you boot up Rails 1 or Rails 2,\n\n76\n00:04:23.580 --> 00:04:27.750\nyou'll see a lot of stuff like this where\nwe have a symbol which is a hash key and\n\n77\n00:04:27.750 --> 00:04:31.350\nthen this means that this\nsymbol gets the value, true.\n\n78\n00:04:32.420 --> 00:04:33.960\nSo in our shorthand,\n\n79\n00:04:35.070 --> 00:04:40.150\nwhich is becoming de facto standard\nnow in Rails, we'll see this.\n\n80\n00:04:40.150 --> 00:04:44.960\nSo and actually kinda going back\na couple steps through this old method,\n\n81\n00:04:44.960 --> 00:04:46.030\nthis old syntax.\n\n82\n00:04:47.510 --> 00:04:52.970\nThis is actually full syntax of what this\nwould look like, these curly braces.\n\n83\n00:04:52.970 --> 00:04:54.620\nSo that's kind of what's going on.\n\n84\n00:04:54.620 --> 00:04:57.071\nAnd what happens when we run this code?\n\n85\n00:04:57.071 --> 00:05:00.787\nLet me add our syntactic sugar back and\n\n86\n00:05:00.787 --> 00:05:05.210\nsave this out, and let's see what happens.\n\n87\n00:05:06.710 --> 00:05:07.870\nSo I'm gonna create a new post and\n\n88\n00:05:07.870 --> 00:05:10.530\nI'm just gonna mash the button\nlike I have been doing.\n\n89\n00:05:10.530 --> 00:05:12.050\nBut what do we see?\n\n90\n00:05:12.050 --> 00:05:16.340\nWe've got these error messages now, and\nactually this has done a lot for us.\n\n91\n00:05:16.340 --> 00:05:19.580\nWe've get this text saying,\nthat title can't be blank.\n\n92\n00:05:19.580 --> 00:05:22.578\nWe've got a count for\na number of errors and\n\n93\n00:05:22.578 --> 00:05:25.582\nit even highlighted the text field in red.\n\n94\n00:05:25.582 --> 00:05:28.690\nAnd this kind of goes\nback to our last episode.\n\n95\n00:05:28.690 --> 00:05:32.520\nWe saw all that code with the form.\n\n96\n00:05:32.520 --> 00:05:36.210\nAnd we saw how we were\npassing an object in.\n\n97\n00:05:36.210 --> 00:05:38.053\nThis is how all this is being facilitated.\n\n98\n00:05:38.053 --> 00:05:41.750\nOr, I should say, that code is\nfacilitating all of this happening.\n\n99\n00:05:41.750 --> 00:05:46.180\nThis logic that we're writing in\nour model, the view knows about it,\n\n100\n00:05:46.180 --> 00:05:49.770\nbecause it has that blank\nobject passed into it.\n\n101\n00:05:49.770 --> 00:05:53.914\nAnd it knows that based on this\nline of code that we've just added,\n\n102\n00:05:53.914 --> 00:05:55.477\nthis is not a good model.\n\n103\n00:05:55.477 --> 00:05:57.940\nThis is not a valid\ninstance of this model.\n\n104\n00:05:57.940 --> 00:05:59.190\nSo it kicked that back for us.\n\n105\n00:06:00.810 --> 00:06:03.470\nAnd just kind of going back\nover here to our controller.\n\n106\n00:06:05.010 --> 00:06:08.020\nSo just find it right here,\n\n107\n00:06:08.020 --> 00:06:10.610\npost controller and\nthis called the create route.\n\n108\n00:06:10.610 --> 00:06:13.650\nAs soon as we hit Save, it ran that.\n\n109\n00:06:13.650 --> 00:06:15.030\nSo what is this doing?\n\n110\n00:06:15.030 --> 00:06:16.010\nThis is,\n\n111\n00:06:16.010 --> 00:06:20.368\nif the post is saving, show a notice\nthat the post was successfully created.\n\n112\n00:06:20.368 --> 00:06:23.610\nOtherwise render new.\n\n113\n00:06:23.610 --> 00:06:30.922\nRender new meaning, let's go back\nup here and re-render this view.\n\n114\n00:06:30.922 --> 00:06:35.280\nNow you'll notice that this is render and\nnot redirect to.\n\n115\n00:06:35.280 --> 00:06:37.900\nSo why the difference there?\n\n116\n00:06:37.900 --> 00:06:42.130\nAnd render basically keeps\nthe state that we have so far.\n\n117\n00:06:42.130 --> 00:06:46.692\nWhich is important, because we don't want,\nif someone typed in a magnum opus of\n\n118\n00:06:46.692 --> 00:06:52.100\na post here in the body and forgot to\nput a title, we don't wanna just x-out\n\n119\n00:06:52.100 --> 00:06:56.870\nall their work by displaying this error\nmessage and not save it for them.\n\n120\n00:06:56.870 --> 00:06:59.040\nSo that's the state I'm talking about it\nand that's why we're rendering it and\n\n121\n00:06:59.040 --> 00:06:59.600\nnot redirecting.\n\n122\n00:06:59.600 --> 00:07:01.910\nBecause redirecting will\njust blow all that away.\n\n123\n00:07:03.990 --> 00:07:08.791\nSo while we're adding a validation on\ntitle, let's go ahead and add one for\n\n124\n00:07:08.791 --> 00:07:11.356\nour body, too, and complete the deal.\n\n125\n00:07:14.334 --> 00:07:21.060\nSo let's see here, body, and\nwe'll need that presence.\n\n126\n00:07:21.060 --> 00:07:22.090\nI'll just back up a little bit.\n\n127\n00:07:23.140 --> 00:07:23.640\nThere we go.\n\n128\n00:07:24.680 --> 00:07:28.030\nSo you see that these are same exact code.\n\n129\n00:07:28.030 --> 00:07:32.241\nThe only difference is that the symbol\nchanges from title to body.\n\n130\n00:07:32.241 --> 00:07:35.710\nWe're saving that, going over to\nour browser, and hit this again.\n\n131\n00:07:37.210 --> 00:07:38.790\nAnd now you can see I've\ngot errors on both.\n\n132\n00:07:40.150 --> 00:07:41.682\nAnd I've got two error messages.\n\n133\n00:07:41.682 --> 00:07:44.695\nAnd I've got this nice little bulleted\nlist of exactly what was wrong with my\n\n134\n00:07:44.695 --> 00:07:45.270\nsubmission.\n\n135\n00:07:48.170 --> 00:07:49.723\nSo what do you think, pretty cool?\n\n136\n00:07:49.723 --> 00:07:53.903\n&gt;&gt; Now, Manny, I'm not sure whether I\nshould get upset that Rails does all this\n\n137\n00:07:53.903 --> 00:07:56.430\nfor me, or\njust go ahead switch over to Rails.\n\n138\n00:07:56.430 --> 00:08:01.416\nAs someone who's had to validate on\nthe back end and send flash messages and\n\n139\n00:08:01.416 --> 00:08:03.880\nNow the styling, this is so simple.\n\n140\n00:08:03.880 --> 00:08:07.100\nIt's a couple of lines, so it's wonderful.\n\n141\n00:08:07.100 --> 00:08:09.165\nIt kinda agitates me that it's so easy.\n\n142\n00:08:09.165 --> 00:08:11.100\nBut there is kind of\na quick followup question.\n\n143\n00:08:12.170 --> 00:08:14.000\nBeing blank is an issue.\n\n144\n00:08:14.000 --> 00:08:19.050\nJust about previous comments about\nmy blog as being empty blog host.\n\n145\n00:08:19.050 --> 00:08:23.500\nThere is some other validations\nthat I can think of like,\n\n146\n00:08:23.500 --> 00:08:25.650\nI shouldn't have a title more than once.\n\n147\n00:08:25.650 --> 00:08:27.680\nCan I enforce that within Rails?\n\n148\n00:08:27.680 --> 00:08:29.430\n&gt;&gt; Definitely, definitely.\n\n149\n00:08:29.430 --> 00:08:33.550\nI'm glad you brought that up cuz\nRails has quite a few validations.\n\n150\n00:08:33.550 --> 00:08:36.820\nI'm gonna hop on over here to\nour Rails documentation and\n\n151\n00:08:38.000 --> 00:08:40.870\nright here we can see validation helpers.\n\n152\n00:08:40.870 --> 00:08:44.828\nThere's a pretty good list here,\nacceptance, confirmation, exclusion.\n\n153\n00:08:44.828 --> 00:08:48.193\nPresence, absence,\nuniqueness, so right there,\n\n154\n00:08:48.193 --> 00:08:53.970\nthat's the one we want to use if we only\nwant a particular title to be used once.\n\n155\n00:08:53.970 --> 00:08:56.310\nSo let's go ahead and\ntry that out, actually.\n\n156\n00:08:57.880 --> 00:09:01.570\nAnd I love documentation,\nit's so helpful as a developer.\n\n157\n00:09:01.570 --> 00:09:05.030\nAnd one of my favorite things to do is,\nwhen I see exactly what I need,\n\n158\n00:09:05.030 --> 00:09:10.530\njust grab that and then,\nwell let's put that in there.\n\n159\n00:09:10.530 --> 00:09:14.640\nAnd as a matter of style,\none thing I like to do with my Rails apps,\n\n160\n00:09:14.640 --> 00:09:18.320\nis all of the validations that\nare unique to the same attribute,\n\n161\n00:09:18.320 --> 00:09:19.690\nI like to group them together.\n\n162\n00:09:19.690 --> 00:09:22.100\nAnd then that way my code\nremains clean and clear.\n\n163\n00:09:22.100 --> 00:09:25.440\nAnd I can just kinda see,\nokay, while reading this code,\n\n164\n00:09:25.440 --> 00:09:28.610\nI know that my title, I gotta have one and\nit's gotta be unique.\n\n165\n00:09:30.955 --> 00:09:35.500\nSo let's pop back over here and\nlet's make an actual post.\n\n166\n00:09:35.500 --> 00:09:36.570\nAnd actually now we're forced to.\n\n167\n00:09:36.570 --> 00:09:37.760\nNow we have to put data in here.\n\n168\n00:09:38.960 --> 00:09:40.250\nI hit that back button by accident.\n\n169\n00:09:40.250 --> 00:09:40.880\nLet's try that again.\n\n170\n00:09:42.180 --> 00:09:46.900\nSo, my title is a number one and\nmy body is just one.\n\n171\n00:09:46.900 --> 00:09:50.247\nI go back and I reuse that same title.\n\n172\n00:09:50.247 --> 00:09:53.740\nSo one and one, again.\n\n173\n00:09:53.740 --> 00:09:56.540\nSo same exact post, duplicate post.\n\n174\n00:09:56.540 --> 00:09:59.370\nYou can see here, already been taken,\nwon't let me do it.\n\n175\n00:09:59.370 --> 00:10:04.390\n&gt;&gt; All right, so, again, this is one of\nthose where I'm like, that's amazing.\n\n176\n00:10:04.390 --> 00:10:07.200\nI don't know if I should be\nupset that that's so easy.\n\n177\n00:10:07.200 --> 00:10:09.500\nThe one quick question I do\nhave about the validates,\n\n178\n00:10:09.500 --> 00:10:11.360\nyou have those kinda grouped together.\n\n179\n00:10:11.360 --> 00:10:14.712\nIf this is a hash, do I need these\non separate lines for title?\n\n180\n00:10:14.712 --> 00:10:19.729\nOr could I build a hash that says\npresence, true, uniqueness, true, all for\n\n181\n00:10:19.729 --> 00:10:24.822\none title or is it best practice just\nto say, validates title, presence true,\n\n182\n00:10:24.822 --> 00:10:30.038\nvalidates title, uniqueness true or\nam I just going off the rails, here?\n\n183\n00:10:30.038 --> 00:10:32.215\nThere was a pun there and\nnon-intentionally.\n\n184\n00:10:32.215 --> 00:10:36.320\n&gt;&gt; Uh-huh, that's a great question and\nit's just a personal preference and style,\n\n185\n00:10:36.320 --> 00:10:40.640\nnow, of course, rails being opinionated\nas it is, there are some things that\n\n186\n00:10:40.640 --> 00:10:43.780\nit enforces pretty strictly,\nbut this isn't one of them.\n\n187\n00:10:43.780 --> 00:10:46.710\nYou're more than welcome to change this so\n\n188\n00:10:46.710 --> 00:10:52.160\nthat instead of having two lines of code,\nwe just have the one.\n\n189\n00:10:56.181 --> 00:11:01.520\nGo in over here, creating our post,\nwe can see that it works just the same.\n\n190\n00:11:02.620 --> 00:11:05.210\nWhich is nice.\nIt's nice when you can take two lines of\n\n191\n00:11:05.210 --> 00:11:06.960\ncode and fold them into one, isn't it?.\n\n192\n00:11:06.960 --> 00:11:10.570\n&gt;&gt; And I agree, I would probably go back\nbecause it's a little more readable.\n\n193\n00:11:10.570 --> 00:11:12.536\nYour intention that it\nwas a little more clear.\n\n194\n00:11:12.536 --> 00:11:14.740\nI was just wondering,\nare there limitations?\n\n195\n00:11:14.740 --> 00:11:15.690\nIs this the best practice?\n\n196\n00:11:15.690 --> 00:11:17.820\nIs this one of those opinionated pieces?\n\n197\n00:11:17.820 --> 00:11:21.040\nNow these validators,\nthere seems to be several built in, but\n\n198\n00:11:21.040 --> 00:11:23.970\nwhat if I tended to be a little\nbit of a control freak or\n\n199\n00:11:23.970 --> 00:11:28.140\nI had a very particular use case, and\nI needed to write my own validations?\n\n200\n00:11:28.140 --> 00:11:31.010\nCan I do that in Rails?\n\n201\n00:11:31.010 --> 00:11:33.910\n&gt;&gt; Absolutely, I can be a bit\nof a control freak myself, and\n\n202\n00:11:33.910 --> 00:11:37.960\nI like being able to have my\ndata do exactly what I want.\n\n203\n00:11:37.960 --> 00:11:39.229\nSo for example,\n\n204\n00:11:39.229 --> 00:11:44.410\nwhat if I wanna prohibit in my blog\nthe use of the word, balderdash.\n\n205\n00:11:44.410 --> 00:11:48.890\nIf that word is in the post, no,\ndon't use it, can't say that word.\n\n206\n00:11:48.890 --> 00:11:50.710\nHow would we go about doing that?\n\n207\n00:11:50.710 --> 00:11:54.530\nSo Rails allows to write\nyour own validations and\n\n208\n00:11:54.530 --> 00:11:55.790\nhere's what that looks like.\n\n209\n00:11:56.990 --> 00:12:03.060\nSo instead of validates,\nwe have another method called validate.\n\n210\n00:12:04.350 --> 00:12:08.015\nAnd on validate it takes one argument,\na symbol, and\n\n211\n00:12:08.015 --> 00:12:12.984\nthis symbol is the name of a method\nthat we're going to use down the road as\n\n212\n00:12:12.984 --> 00:12:17.568\ndefined later in our model,\nthat is going to run some logic for us.\n\n213\n00:12:17.568 --> 00:12:22.145\nLet's say we call our validation, our\nvalidation method, can't_say_balderdash.\n\n214\n00:12:24.910 --> 00:12:29.168\nAnd it's really good to, or\nat least for me personally,\n\n215\n00:12:29.168 --> 00:12:33.976\nI like to make my Rails method\nnames as descriptive as possible.\n\n216\n00:12:33.976 --> 00:12:35.480\nIt just reads nice.\n\n217\n00:12:35.480 --> 00:12:36.610\nYou know, you can just read it here and\n\n218\n00:12:36.610 --> 00:12:41.160\nyou'd know exactly what this validation\nis doing or what it means, at least.\n\n219\n00:12:43.506 --> 00:12:46.120\nSo now we'll define our method.\n\n220\n00:12:50.310 --> 00:12:54.700\nAnd the keyword for that is def, for\ndefine a new method or function.\n\n221\n00:12:54.700 --> 00:12:59.146\nAnd of course in Ruby, everything's an\nobject, so it's a method, but sometimes I\n\n222\n00:12:59.146 --> 00:13:03.310\nthink of them as functions also just cuz\nkind of those the mind space we're in.\n\n223\n00:13:03.310 --> 00:13:08.291\nWe're just gonna write a little\nbit of code in here that's gonna\n\n224\n00:13:08.291 --> 00:13:12.267\nencapsulate this logic\nof can't say balderdash.\n\n225\n00:13:12.267 --> 00:13:16.750\nSo the structure of validation\ngenerally is you have an if, else, why.\n\n226\n00:13:16.750 --> 00:13:19.000\nIf there's some condition that happens,\n\n227\n00:13:19.000 --> 00:13:24.080\nthen this is a bad instance of this\nmodel and we're gonna trigger an error.\n\n228\n00:13:24.080 --> 00:13:25.930\nOtherwise, things are okay, right?\n\n229\n00:13:25.930 --> 00:13:27.490\nThat's the basic structure.\n\n230\n00:13:27.490 --> 00:13:32.080\nSo in this case what we're gonna do is,\nwe're gonna say if our Body.\n\n231\n00:13:34.325 --> 00:13:36.690\nAnd you may be wondering,\nwhoa, you can just say that?\n\n232\n00:13:36.690 --> 00:13:38.090\nYou didn't declare that anywhere.\n\n233\n00:13:38.090 --> 00:13:41.700\nIt's not declared anywhere up here,\nwhere did this come from?\n\n234\n00:13:41.700 --> 00:13:46.275\nAnd it's a,\nshort answer is that active record takes\n\n235\n00:13:46.275 --> 00:13:51.300\nits data parameters from the migrations\nfrom the database itself.\n\n236\n00:13:51.300 --> 00:13:55.780\nSo when we put in that data into\nthat first scaffolding command,\n\n237\n00:13:55.780 --> 00:13:58.460\nit starts the database, and\nit trickles its way here.\n\n238\n00:13:58.460 --> 00:13:59.950\nAnd it knows about that.\n\n239\n00:13:59.950 --> 00:14:01.300\nIt knows about its own attributes.\n\n240\n00:14:03.130 --> 00:14:11.529\nSo if our body, and I'm gonna use regular\nexpressions here just to check that out.\n\n241\n00:14:11.529 --> 00:14:13.749\nAnd just a little short thing\non regular expressions.\n\n242\n00:14:13.749 --> 00:14:15.476\nIt's basically a really nice and\n\n243\n00:14:15.476 --> 00:14:18.860\neasy way to see if something\nmatches something else.\n\n244\n00:14:18.860 --> 00:14:21.020\nAnd it could be something\nas simply as text or\n\n245\n00:14:21.020 --> 00:14:25.690\nsomething as complex as, well I wanna\nhave an infinite number of numbers and\n\n246\n00:14:25.690 --> 00:14:29.920\nthen the letter A and then a period, and\nall that has to be at the beginning.\n\n247\n00:14:29.920 --> 00:14:32.260\nSo regular expressions make it\neasy to things like that and\n\n248\n00:14:32.260 --> 00:14:35.420\nyou'll see regular expressions\nused pretty often in rails.\n\n249\n00:14:35.420 --> 00:14:37.859\nAnd if that sounds like\nsomething you're interested in,\n\n250\n00:14:37.859 --> 00:14:41.445\nsomething you wanna try out for yourself,\ncheck out regular-expressions.info,\n\n251\n00:14:41.445 --> 00:14:42.405\nreally cool doc site.\n\n252\n00:14:42.405 --> 00:14:46.995\nAnd this isn't something specific to Ruby,\nregular expressions are in Perl,\n\n253\n00:14:46.995 --> 00:14:47.680\nin Python,\n\n254\n00:14:47.680 --> 00:14:52.490\npretty much any scripting language will\nsupport regular expressions in some way.\n\n255\n00:14:54.040 --> 00:14:59.840\nSo that's basically what\nthis slash syntax means.\n\n256\n00:14:59.840 --> 00:15:02.640\nAnd you notice that my text editor\nknows that it's a regular expression\n\n257\n00:15:02.640 --> 00:15:04.750\nhighlighted in a different color for me.\n\n258\n00:15:04.750 --> 00:15:07.630\nAnd this operator I'm using, this =~.\n\n259\n00:15:07.630 --> 00:15:10.920\nThis is Ruby shortcut for, if this.\n\n260\n00:15:10.920 --> 00:15:12.100\nWhich assumes it's string.\n\n261\n00:15:12.100 --> 00:15:14.030\nCuz this is defined on string.\n\n262\n00:15:14.030 --> 00:15:17.300\nSo if I had a number in here, right.\n\n263\n00:15:17.300 --> 00:15:21.216\nLet's say I tried this on my date,\nlike created at.\n\n264\n00:15:21.216 --> 00:15:24.090\nI'd get a runtime error when\nI try to run this because\n\n265\n00:15:24.090 --> 00:15:27.100\na date doesn't have a regular\nexpression match method.\n\n266\n00:15:29.520 --> 00:15:31.220\nSo we'll go back to just our body.\n\n267\n00:15:33.330 --> 00:15:38.280\nSo, if our body matches the word balerdash\nanywhere in it, and we can change\n\n268\n00:15:38.280 --> 00:15:42.100\nthis again so it's at the beginning or\nthe end or anything like that.\n\n269\n00:15:42.100 --> 00:15:44.470\nBut let's just say we\nwant to do that anywhere.\n\n270\n00:15:44.470 --> 00:15:50.159\nThen, we'll add an error.\n\n271\n00:15:50.159 --> 00:15:54.685\nSo, errors is a method that is built in to\napplication record, which we can access.\n\n272\n00:15:54.685 --> 00:15:59.393\nAnd we can use this to,\non the fly, add validation errors.\n\n273\n00:15:59.393 --> 00:16:01.129\nSo that takes two arguments.\n\n274\n00:16:01.129 --> 00:16:05.960\nThe first is A place or an attribute.\n\n275\n00:16:05.960 --> 00:16:08.640\nIf you don't want to put\nthe error on the attribute.\n\n276\n00:16:08.640 --> 00:16:11.020\nAnd what does that mean,\nan error on an attribute?\n\n277\n00:16:11.020 --> 00:16:13.460\nSo in this case it's pretty clear, right?\n\n278\n00:16:13.460 --> 00:16:19.440\nIf the word balderdash is in the body,\nthen body is where the code needs to be,\n\n279\n00:16:19.440 --> 00:16:22.900\nour form needs to be fixed.\n\n280\n00:16:22.900 --> 00:16:26.160\nAnd that's kind of how this\nis being highlighted in red.\n\n281\n00:16:26.160 --> 00:16:31.760\nWhen we create a validation\nerror that only is relevant\n\n282\n00:16:31.760 --> 00:16:36.610\nto one data object, then based on that\n\n283\n00:16:36.610 --> 00:16:41.430\nparameter it will make\nthe right field red.\n\n284\n00:16:42.940 --> 00:16:44.540\nNow that doesn't have to be the case.\n\n285\n00:16:44.540 --> 00:16:47.929\nWe could also use base as a simple.\n\n286\n00:16:47.929 --> 00:16:50.520\nAnd this attaches the error\nto the object itself.\n\n287\n00:16:50.520 --> 00:16:54.696\nSo if there's just some kind of\ncomplicated logic with your model and\n\n288\n00:16:54.696 --> 00:16:59.811\nthe error that it creates doesn't match,\nor doesn't apply to a particular field.\n\n289\n00:16:59.811 --> 00:17:03.100\nYou can use base and it won't apply to\nanything but the object in general.\n\n290\n00:17:03.100 --> 00:17:06.010\nIn this case,\nit definitely applies to the body.\n\n291\n00:17:06.010 --> 00:17:08.477\nSo we’ll add that there and\nthen we get to write a message.\n\n292\n00:17:11.898 --> 00:17:16.083\nHow about something like,\ncan’t say that word.\n\n293\n00:17:16.083 --> 00:17:19.815\nAnd that’s all we need.\n\n294\n00:17:19.815 --> 00:17:28.330\nThe way that validations work is that\nthey add object to errors, right?\n\n295\n00:17:28.330 --> 00:17:30.550\nOr they add data to this errors object.\n\n296\n00:17:30.550 --> 00:17:34.480\nAnd actually to be specific,\nwhat I just did is I added an error object\n\n297\n00:17:34.480 --> 00:17:38.340\nto a data structure that contains\nall of the errors on my model.\n\n298\n00:17:38.340 --> 00:17:40.470\nThat's why they're enumerated and\n\n299\n00:17:40.470 --> 00:17:43.410\nwe can count them up here\nwhen we have a bunch of them.\n\n300\n00:17:44.930 --> 00:17:47.780\nBut if they, none are added,\n\n301\n00:17:47.780 --> 00:17:51.045\nif the whole object is created and\nthis data structure's empty,\n\n302\n00:17:51.045 --> 00:17:56.660\nthen that's a good record and\nwe can save it and move on with life.\n\n303\n00:17:56.660 --> 00:18:00.400\nSo basically we don't really need to\ndo anything in the case of not having\n\n304\n00:18:00.400 --> 00:18:06.310\na error, we can just drop out\nof that I want another end here.\n\n305\n00:18:06.310 --> 00:18:07.200\nSo let's try this out.\n\n306\n00:18:09.809 --> 00:18:14.375\nSo what happens if I just add some text\nand it doesn't have the word balder dash?\n\n307\n00:18:14.375 --> 00:18:15.375\nThat worked.\n\n308\n00:18:17.196 --> 00:18:20.870\nBut if I have,\nwhat if have balder dash in the title?\n\n309\n00:18:23.687 --> 00:18:24.540\nThat worked as well.\n\n310\n00:18:28.030 --> 00:18:29.170\nAnd now comes the real test.\n\n311\n00:18:34.930 --> 00:18:37.600\nWe'll write out baldurdash.\n\n312\n00:18:37.600 --> 00:18:38.100\nIt's fine.\n\n313\n00:18:40.490 --> 00:18:45.770\nWe can see here that my validation\ntriggered and it's on the body.\n\n314\n00:18:45.770 --> 00:18:46.810\nAnd my message is here.\n\n315\n00:18:48.380 --> 00:18:51.670\nNow, this is kind of a funny quirk or\nrails, and some, see,\n\n316\n00:18:51.670 --> 00:18:54.970\nsometimes all of this patterning and,\n\n317\n00:18:56.630 --> 00:18:59.550\nthe kind of way rails does things first,\nat least the funny side effects.\n\n318\n00:18:59.550 --> 00:19:04.930\nSo, right now the aired message says Body\nand then space, Can't say that word.\n\n319\n00:19:04.930 --> 00:19:09.400\nAnd the reason why it's doing\nthat is because by default,\n\n320\n00:19:09.400 --> 00:19:12.220\nthe message appends the name of the field\n\n321\n00:19:12.220 --> 00:19:15.690\nthat the error is triggered on as\nthe first word in this message.\n\n322\n00:19:15.690 --> 00:19:20.450\nSo it kind of forces us to use\ndifferent language here for\n\n323\n00:19:20.450 --> 00:19:23.870\nthis error message to make sense, knowing\nthat the first word of it is going to be\n\n324\n00:19:23.870 --> 00:19:31.190\nbody because rail just enforces that So\nthat's about it for validations.\n\n325\n00:19:31.190 --> 00:19:31.840\nWhat do you think?\n\n326\n00:19:31.840 --> 00:19:36.030\n&gt;&gt; Well, Manny, I will definitely say\nthat validations are way easier in rails.\n\n327\n00:19:36.030 --> 00:19:38.650\nAgain, I'm kind of torn\nbetween those two emotions.\n\n328\n00:19:38.650 --> 00:19:42.450\nIt's so easy that I wish I could do\nit in every other time that I've\n\n329\n00:19:42.450 --> 00:19:43.960\nhad to write a validation.\n\n330\n00:19:43.960 --> 00:19:47.000\nNow an immediate application\nof this balderdash one.\n\n331\n00:19:47.000 --> 00:19:51.910\nIs like a profanity, or\nmaybe an ill-meaning language filter.\n\n332\n00:19:51.910 --> 00:19:54.540\nMaybe not necessarily in your own post,\nbut comments,\n\n333\n00:19:54.540 --> 00:19:56.570\nwhich we're definitely\ngonna get to hopefully.\n\n334\n00:19:56.570 --> 00:19:59.080\nWe're building a blog so\nI assume it's in there.\n\n335\n00:19:59.080 --> 00:20:02.670\nSo definitely stay tuned as we continue\nlooking into Ruby on Rails and\n\n336\n00:20:02.670 --> 00:20:03.570\nsee what's to come.\n\n337\n00:20:03.570 --> 00:20:06.090\nBut for this episode we're\ngonna go hit and wrap it up.\n\n338\n00:20:06.090 --> 00:20:09.510\nSo signing off for DevProTV,\nI've been your Justin Dennison.\n\n339\n00:20:09.510 --> 00:20:10.530\n&gt;&gt; I'm Manny Rodriguez.\n\n340\n00:20:10.530 --> 00:20:11.880\n&gt;&gt; And we'll see you next time.\n\n341\n00:20:11.880 --> 00:20:17.386\n[MUSIC]\n\n",
          "vimeoId": "241173789"
        },
        {
          "description": "In this episode, Manny and Justin start exploring the types of relationships that can exist between models such as one-to-one, one-to-many, and many-to-many. Many discusses the ramifications of having those relationships exist between modles when developing a Rails application.",
          "length": "899",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-introtorubyonrails/techskills-introtorubyonrails-8-1-1-intro_to_model_relationships-110117-PGM.00_14_50_13.Still001.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-introtorubyonrails/techskills-introtorubyonrails-8-1-1-intro_to_model_relationships-110117-PGM.00_14_50_13.Still001-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-introtorubyonrails/techskills-introtorubyonrails-8-1-1-intro_to_model_relationships-110117-PGM.00_14_50_13.Still001-sm.jpg",
          "title": "Intro to Model Relationships",
          "transcript": "WEBVTT\n\n1\n00:00:00.310 --> 00:00:10.310\n[MUSIC]\n\n2\n00:00:12.907 --> 00:00:17.128\nGreetings everyone and welcome back to\nanother exciting episode of DEVPRO TV.\n\n3\n00:00:17.128 --> 00:00:20.932\nI'm your host Justin Dennison and\nwe're continuing into Ruby on Rails, and\n\n4\n00:00:20.932 --> 00:00:23.522\nwe're gonna be talking\nabout mono relationships.\n\n5\n00:00:23.522 --> 00:00:28.375\nNo, we'll have to further dive into that\nbecause I feel like that's a loaded term.\n\n6\n00:00:28.375 --> 00:00:31.381\nBut here to help us along in that\nendeavor is Mr. Manny Rodriguez.\n\n7\n00:00:31.381 --> 00:00:32.294\nHow you doing today Manny?\n\n8\n00:00:32.294 --> 00:00:33.919\n&gt;&gt; I'm doing great, glad to be back.\n\n9\n00:00:33.919 --> 00:00:37.232\n&gt;&gt; I'm glad to have you back because\nwhen I think of model relationships,\n\n10\n00:00:37.232 --> 00:00:40.724\nI'm thinking of nuclear family,\neverybody's good, you sit at dinner.\n\n11\n00:00:40.724 --> 00:00:44.201\nBut I've a feeling that's not what\nwe're talking about as far as Ruby on\n\n12\n00:00:44.201 --> 00:00:45.006\nRails, right?\n\n13\n00:00:45.006 --> 00:00:46.009\n&gt;&gt; Nope, not really.\n\n14\n00:00:46.009 --> 00:00:46.555\n&gt;&gt; Okay.\n\n15\n00:00:46.555 --> 00:00:48.625\n&gt;&gt; But there is,\nsome of that stuff is in there.\n\n16\n00:00:48.625 --> 00:00:52.265\nData's always related to each other,\nthere are connections, right.\n\n17\n00:00:52.265 --> 00:00:56.910\nJust like family connections, or\nyou've got a blog, blogs have comments,\n\n18\n00:00:56.910 --> 00:00:59.632\nreddit posts, those have comments as well.\n\n19\n00:00:59.632 --> 00:01:04.581\nBut data is related to other data,\nand in different ways.\n\n20\n00:01:04.581 --> 00:01:09.961\nSo moving forward,\nwhat we're gonna do is add comments\n\n21\n00:01:09.961 --> 00:01:14.772\nto our post resource,\nand again relationships.\n\n22\n00:01:14.772 --> 00:01:19.500\nSo what we're gonna wanna have for\neach post a certain set of comments.\n\n23\n00:01:19.500 --> 00:01:21.101\nSo how does all that work in code?\n\n24\n00:01:21.101 --> 00:01:26.446\nWell, as you might have guessed Ruby on\nRails has a set way of doing that for us.\n\n25\n00:01:26.446 --> 00:01:31.462\nSo we're gonna kinda dive into a little\nbit of the theory behind that.\n\n26\n00:01:31.462 --> 00:01:36.084\nSo we can see and understand how\nmodels can be related to each other or\n\n27\n00:01:36.084 --> 00:01:38.691\nhow data can be related to each other.\n\n28\n00:01:38.691 --> 00:01:43.842\nSo just off the bat, in general there's\nthree different types of relational\n\n29\n00:01:43.842 --> 00:01:48.450\nrelationships, and that's a whole\nlot of relationships in there.\n\n30\n00:01:48.450 --> 00:01:53.336\nWell, what I mean by that is that active\nrecord is based on a relational of data\n\n31\n00:01:53.336 --> 00:01:53.871\nmodel.\n\n32\n00:01:53.871 --> 00:01:54.487\nAnd in that,\n\n33\n00:01:54.487 --> 00:01:58.187\nthere's three basic ways that something\ncan be connected to something else.\n\n34\n00:01:58.187 --> 00:02:00.433\nSo, we'll talk about that.\n\n35\n00:02:00.433 --> 00:02:03.685\nFirst, is one to one.\n\n36\n00:02:03.685 --> 00:02:08.207\nSo what that means is that\nyou've got a relationship\n\n37\n00:02:08.207 --> 00:02:12.639\nwhere one of A has exactly one of B,\nand vice versa.\n\n38\n00:02:12.639 --> 00:02:16.619\nSo maybe an example of that might be,\nhusband has one wife,\n\n39\n00:02:16.619 --> 00:02:18.939\na wife has one husband, you know?\n\n40\n00:02:18.939 --> 00:02:22.208\nNow if you're into Robert Heinlein\nit might be a little bit different,\n\n41\n00:02:22.208 --> 00:02:24.343\nbut this example we'll\nkinda roll with that.\n\n42\n00:02:24.343 --> 00:02:28.177\nSo what's going on here with\nthis one-to-one relationship?\n\n43\n00:02:28.177 --> 00:02:32.439\nLet's say that we've got a database table,\nour model.\n\n44\n00:02:32.439 --> 00:02:36.629\nAnd we've got some attributes here,\nlike we'll kinda talk about with id and\n\n45\n00:02:36.629 --> 00:02:38.115\nwhat it is in just a moment.\n\n46\n00:02:38.115 --> 00:02:40.295\nBut we've got first name,\nwe've got last name.\n\n47\n00:02:40.295 --> 00:02:42.956\nWe've got a gender, date of birth,\na favorite color, and\n\n48\n00:02:42.956 --> 00:02:44.776\nthen we've got this spouse_id thing.\n\n49\n00:02:44.776 --> 00:02:47.342\nSo again we're seeing this word id.\n\n50\n00:02:47.342 --> 00:02:48.928\nSo what's an id?\n\n51\n00:02:48.928 --> 00:02:54.799\nWe kinda saw a little bit of this\nwith the work we did last episode.\n\n52\n00:02:54.799 --> 00:02:55.747\nWe were looking at URLs.\n\n53\n00:02:55.747 --> 00:03:01.117\nWe were looking at the parameters pasting,\nthere was an id in there too.\n\n54\n00:03:01.117 --> 00:03:05.848\nBasically an id is a number or\nit can be a string like ISBN numbers for\n\n55\n00:03:05.848 --> 00:03:09.414\nbooks, for example,\nnot just numbers in there.\n\n56\n00:03:09.414 --> 00:03:12.631\nOr maybe SKU numbers if you're\nthinking about inventory.\n\n57\n00:03:12.631 --> 00:03:18.867\nBut it's data that uniquely\nidentifies another piece of data.\n\n58\n00:03:18.867 --> 00:03:23.372\nSo maybe social security number\ncould stand in here for id.\n\n59\n00:03:23.372 --> 00:03:26.332\nOr if you work at a place\nyou've to an employee ID.\n\n60\n00:03:26.332 --> 00:03:30.015\nOr you've got a school ID,\nor something like that,\n\n61\n00:03:30.015 --> 00:03:34.469\nit's basically a number that\ndefinitely points towards you.\n\n62\n00:03:34.469 --> 00:03:41.138\nSo here, we've got this spouse id\nthing going on here, what's that mean?\n\n63\n00:03:41.138 --> 00:03:47.638\nAnd what this is, is this is a piece\nof data that's part of this model,\n\n64\n00:03:47.638 --> 00:03:54.247\nthis people model, which holds the ID\nof a spouse that this person has or\n\n65\n00:03:54.247 --> 00:03:59.007\nmaybe it could be blank if you're single,\nright.\n\n66\n00:03:59.007 --> 00:04:03.976\nSo if this was implemented as a one to one\nrelationship, and it doesn't have to be\n\n67\n00:04:03.976 --> 00:04:07.937\nit's just is an example that could\nbe a one to one relationship.\n\n68\n00:04:07.937 --> 00:04:13.634\nThen we've got the ID, the primary key\nwhich is a bit of jargon for you, but\n\n69\n00:04:13.634 --> 00:04:20.258\nit basically means this ID represents this\nparticular model, an instance of a model.\n\n70\n00:04:20.258 --> 00:04:25.239\nWhereas this spouse_id, both of these\nnames have the word id in them Bbut this\n\n71\n00:04:25.239 --> 00:04:30.456\nis a foreign key, or it's data that points\nto something else that's not itself.\n\n72\n00:04:30.456 --> 00:04:32.636\n&gt;&gt; Now, Manny,\nI do have a quick question about these.\n\n73\n00:04:32.636 --> 00:04:37.077\nIs it best to think of this particular\nrelationship, this one to one,\n\n74\n00:04:37.077 --> 00:04:38.749\nis it, or does it matter?\n\n75\n00:04:38.749 --> 00:04:43.128\nThis top person belongs\nto this bottom person, or\n\n76\n00:04:43.128 --> 00:04:46.986\nis it this bottom person\nhas the top person,\n\n77\n00:04:46.986 --> 00:04:51.271\nlike a husband has a wife and\na wife has a husband.\n\n78\n00:04:51.271 --> 00:04:55.496\nOr I'm trying to think\nabout how do I internalize?\n\n79\n00:04:55.496 --> 00:04:58.888\nWhen do I know when to\nuse this relationship?\n\n80\n00:04:58.888 --> 00:05:02.534\n&gt;&gt; Yeah, that's a good question,\nthinking about it myself.\n\n81\n00:05:02.534 --> 00:05:07.290\nThe first thing that popped into my mind\nis that in one to one you both has and\n\n82\n00:05:07.290 --> 00:05:08.766\nbelong to each other.\n\n83\n00:05:08.766 --> 00:05:13.372\nAnd there's one on each side,\nand there isn't any multiplicity.\n\n84\n00:05:13.372 --> 00:05:16.581\nThat's really key for me,\nit's whenever it's one to one, and\n\n85\n00:05:16.581 --> 00:05:18.909\nthere's one on this side and\none on this side.\n\n86\n00:05:18.909 --> 00:05:23.722\nSo maybe if I think of\nanother example of this.\n\n87\n00:05:23.722 --> 00:05:29.825\nWell, thinking of an engine, and\nthen you've got piston connected to a rod.\n\n88\n00:05:29.825 --> 00:05:34.163\nAnd there's one of this and one of this,\nthey're just connect to each other.\n\n89\n00:05:34.163 --> 00:05:38.397\nSo I think any time you're thinking about,\nokay, this has one of these.\n\n90\n00:05:38.397 --> 00:05:43.277\nMaybe you may go a person connected\nto their life insurance policy,\n\n91\n00:05:43.277 --> 00:05:45.767\nright, where one person has one.\n\n92\n00:05:45.767 --> 00:05:46.867\nThat might not be a good example,\n\n93\n00:05:46.867 --> 00:05:48.646\ncuz you can have more than\none life insurance policy.\n\n94\n00:05:48.646 --> 00:05:52.694\nBut if you were in a world where you were\nonly allowed to have one life insurance\n\n95\n00:05:52.694 --> 00:05:54.513\npolicy, that might be one to one.\n\n96\n00:05:54.513 --> 00:05:58.193\n&gt;&gt; And was kind of what I was\ndriving home, cuz a lot of times,\n\n97\n00:05:58.193 --> 00:06:02.793\ndetermining these relationships is more or\nless the hard part, right.\n\n98\n00:06:02.793 --> 00:06:07.240\nI have a hand, my hand belongs to me,\nbut I really have two hands, but\n\n99\n00:06:07.240 --> 00:06:09.027\nI only have one right hand.\n\n100\n00:06:09.027 --> 00:06:11.154\nSo it seems to be a matter\nof perspective and\n\n101\n00:06:11.154 --> 00:06:14.176\nI'm sure this will kind of pop\nout as we talk more about data.\n\n102\n00:06:14.176 --> 00:06:17.482\nBut I didn't know if you had any insight\nabout how do I think about this?\n\n103\n00:06:17.482 --> 00:06:22.099\nBut the arrow does show you belong\nthis way and you have this way.\n\n104\n00:06:22.099 --> 00:06:24.872\nSo maybe both answers are right,\nwho knows?\n\n105\n00:06:24.872 --> 00:06:27.063\n&gt;&gt; Yeah.\n&gt;&gt; So that's just one of those things\n\n106\n00:06:27.063 --> 00:06:28.252\nwhere I don't know,\n\n107\n00:06:28.252 --> 00:06:32.493\nsometimes it's hard to think about\nhow to determine those relationships.\n\n108\n00:06:32.493 --> 00:06:34.175\n&gt;&gt; Yeah, I completely agree.\n\n109\n00:06:34.175 --> 00:06:37.920\nAnd I really appreciate the perspective\nof coming up with these models.\n\n110\n00:06:37.920 --> 00:06:39.914\nThere's a fair amount of\nwork that comes into that.\n\n111\n00:06:39.914 --> 00:06:42.864\nJust coming up with the relationships\nthat a model might fit in.\n\n112\n00:06:42.864 --> 00:06:46.242\nBecause although this is shown right now,\nhusband and\n\n113\n00:06:46.242 --> 00:06:50.662\nwife as a one-to-one relationship,\nthis is a very simplified case.\n\n114\n00:06:50.662 --> 00:06:54.497\nIt doesn't cover all\nthe possibilities of human life.\n\n115\n00:06:54.497 --> 00:06:59.260\nSo this doesn't really,\nthis is very, quite simplified.\n\n116\n00:06:59.260 --> 00:07:01.034\nAnd there's many ways\nof implementing this.\n\n117\n00:07:01.034 --> 00:07:03.575\nIt may be a one-to-one relationship, but\n\n118\n00:07:03.575 --> 00:07:07.635\nit actually might be the kind of\nthing where it could be one-to-one.\n\n119\n00:07:07.635 --> 00:07:11.138\nOr it could be one-to-many,\nor it could be zero-to-one.\n\n120\n00:07:11.138 --> 00:07:15.722\nAnd you could have all three\npossibilities in the same basic\n\n121\n00:07:15.722 --> 00:07:18.298\ndomain that you're working in.\n\n122\n00:07:18.298 --> 00:07:20.206\nSo I just want to point out here,\n\n123\n00:07:20.206 --> 00:07:23.403\nright now we've got this\narrow id going to spouse id.\n\n124\n00:07:23.403 --> 00:07:27.213\nAnd then id kinda going down here or\nmaybe husbands here, wives here, and\n\n125\n00:07:27.213 --> 00:07:29.065\nthey've connected to each other.\n\n126\n00:07:29.065 --> 00:07:33.706\nAnd if we were implementing this in\nrails this might be a good place for\n\n127\n00:07:33.706 --> 00:07:36.753\na validation if we wanted\nto enforce things.\n\n128\n00:07:36.753 --> 00:07:39.740\nWe're not and for certain things,\nwe have free control over that logic.\n\n129\n00:07:39.740 --> 00:07:44.725\nSo we can determine whether or\nnot this one to one\n\n130\n00:07:44.725 --> 00:07:50.466\nrelationship was as valid as\nwe defined it in our code.\n\n131\n00:07:50.466 --> 00:07:53.298\nLet's talk a little bit about one to many,\nwhat does that look like?\n\n132\n00:07:55.830 --> 00:08:00.298\nSo here's we've got an example of a mother\nor a father parent and then children.\n\n133\n00:08:00.298 --> 00:08:04.448\nSo we still have, what we've got\nhere is one entity on one side and\n\n134\n00:08:04.448 --> 00:08:06.572\nmany entities on the other side.\n\n135\n00:08:06.572 --> 00:08:10.924\nSo a mother could have many children,\nfather could have many children, but\n\n136\n00:08:10.924 --> 00:08:12.557\na child only has one mother.\n\n137\n00:08:12.557 --> 00:08:15.618\nSo this multiplicity only goes one way,\nand\n\n138\n00:08:15.618 --> 00:08:20.676\nall of these children have the same\nmother, they all come back that way.\n\n139\n00:08:20.676 --> 00:08:25.689\nSo kinda looking here at this example,\nwe've got the same\n\n140\n00:08:25.689 --> 00:08:30.203\npeople model with the same\nattributes from before.\n\n141\n00:08:30.203 --> 00:08:35.155\nBut now we've added another attribute,\nanother foreign key called mother_id and\n\n142\n00:08:35.155 --> 00:08:38.096\nwe're showing here three generations,\nright.\n\n143\n00:08:38.096 --> 00:08:45.316\nFor this particular person, there\nmother is this one, the same as this.\n\n144\n00:08:45.316 --> 00:08:49.821\nBut this model here doesn't\nhave any children, right.\n\n145\n00:08:49.821 --> 00:08:55.689\nSo this is really you can think of\nit as also as one or zero to many,\n\n146\n00:08:55.689 --> 00:09:01.468\njust like it could be one or\nzero to one in the previous example.\n\n147\n00:09:01.468 --> 00:09:03.671\nBut in each case what do we see?\n\n148\n00:09:03.671 --> 00:09:09.509\nWe see that each person has\nexactly one mother and only one.\n\n149\n00:09:09.509 --> 00:09:13.514\nEven though as a person you\ncould have more than one child,\n\n150\n00:09:13.514 --> 00:09:15.648\nyou could have many children.\n\n151\n00:09:19.390 --> 00:09:22.733\nSo, where does that bring\nus with many to many?\n\n152\n00:09:25.240 --> 00:09:29.304\nAnd here, looking at what a many to\nmany relationship might look like,\n\n153\n00:09:29.304 --> 00:09:31.892\nlet's think about books and their authors.\n\n154\n00:09:31.892 --> 00:09:36.038\nSo an author writes a book and\na book has an author, so\n\n155\n00:09:36.038 --> 00:09:39.448\nthey could have a one to one relationship.\n\n156\n00:09:39.448 --> 00:09:41.463\nAbut also a book could have many authors.\n\n157\n00:09:41.463 --> 00:09:43.462\nSo here, this book has two authors.\n\n158\n00:09:43.462 --> 00:09:46.233\nWe can see this arrow going\ndown to this author, and\n\n159\n00:09:46.233 --> 00:09:48.303\nthis arrow also going to this author.\n\n160\n00:09:48.303 --> 00:09:52.093\nBut an author can also write many books,\nso\n\n161\n00:09:52.093 --> 00:09:57.375\nthis author wrote this book,\nthis author wrote this book.\n\n162\n00:09:57.375 --> 00:10:00.348\nAnd this author, he only wrote this book.\n\n163\n00:10:00.348 --> 00:10:04.901\nSo we've got multiplicity on both sides,\nwhere we have many people,\n\n164\n00:10:04.901 --> 00:10:06.763\nmany authors, many books.\n\n165\n00:10:06.763 --> 00:10:11.189\nAnd they can be relate to each\nother in any combination thereof.\n\n166\n00:10:13.559 --> 00:10:17.108\nSo how does this look in code,\nor we're thinking about models,\n\n167\n00:10:17.108 --> 00:10:18.563\nhow do we represent that?\n\n168\n00:10:18.563 --> 00:10:23.390\nAnd the answer is we use something\ncalled a join table where we\n\n169\n00:10:23.390 --> 00:10:28.041\nhave another model that\nrepresents their relationship.\n\n170\n00:10:28.041 --> 00:10:33.398\nSo here we've got the same\npeople model as before.\n\n171\n00:10:33.398 --> 00:10:37.120\nYou notice we haven't added\nany more foreign keys to this.\n\n172\n00:10:37.120 --> 00:10:39.860\nAnd we've got this books\nmodel over here with id,\n\n173\n00:10:39.860 --> 00:10:44.379\ntitle, description, publisher,\nrelease date, data that represents a book.\n\n174\n00:10:44.379 --> 00:10:48.557\nBut we've got this third\nAuthorships model,\n\n175\n00:10:48.557 --> 00:10:52.314\nand it links together a person and a book.\n\n176\n00:10:52.314 --> 00:10:55.531\nAnd you can see that we can have many,\nmany rows of this.\n\n177\n00:10:55.531 --> 00:10:58.061\nAnd this is how we get our\nmany to many relationship.\n\n178\n00:10:58.061 --> 00:11:03.198\nSo with this structure we can represent\nsomething like a book having many authors.\n\n179\n00:11:03.198 --> 00:11:08.449\nOr an author having a single book,\nor an author writing many books.\n\n180\n00:11:08.449 --> 00:11:15.556\nIn this example here, this Book which show\nup in this Authorship table twice, right.\n\n181\n00:11:15.556 --> 00:11:20.141\nBecause it's got, there's two Authorships,\none going this way, and\n\n182\n00:11:20.141 --> 00:11:22.635\none there, and it'll be there twice.\n\n183\n00:11:22.635 --> 00:11:25.262\n&gt;&gt; Okay, so I wanna back up.\n\n184\n00:11:25.262 --> 00:11:28.001\nI was mulling this all around off camera.\n\n185\n00:11:28.001 --> 00:11:30.775\nFirst off,\nif we come back to the one to many,\n\n186\n00:11:30.775 --> 00:11:35.460\ncould I think of that relationship as\nbeing hierarchical in some capacity.\n\n187\n00:11:35.460 --> 00:11:37.822\nI have this parent-child relationship,\n\n188\n00:11:37.822 --> 00:11:42.491\nwhere the children always belong to the\nparent and there's some kind of hierarchy.\n\n189\n00:11:42.491 --> 00:11:46.006\nIt helps with my mental model,\nmaybe it's not strictly that the data is\n\n190\n00:11:46.006 --> 00:11:48.950\nhierarchical in nature, but\ncould we think of it that way?\n\n191\n00:11:48.950 --> 00:11:50.646\n&gt;&gt; Yeah, I think so,\n\n192\n00:11:50.646 --> 00:11:56.593\nbecause you can always kinda go back\nup to that thing you belong to.\n\n193\n00:11:56.593 --> 00:12:02.129\n&gt;&gt; Okay, followup question about\nmany to many this joint table.\n\n194\n00:12:02.129 --> 00:12:06.890\nSo it could be at the worst case\nscenario for as how many authorship?\n\n195\n00:12:06.890 --> 00:12:08.955\nSo we have three books and three authors.\n\n196\n00:12:08.955 --> 00:12:11.403\nAll three of those authors actually work,\n\n197\n00:12:11.403 --> 00:12:15.959\ncoauthors on all three of the books then\nI will have nine authorship records that\n\n198\n00:12:15.959 --> 00:12:20.040\ndefine every possible paring between\nbook and author, is that right?\n\n199\n00:12:20.040 --> 00:12:20.939\n&gt;&gt; Yeah, you got it.\n\n200\n00:12:20.939 --> 00:12:23.339\n&gt;&gt; Okay, that's starting to\nmake a little more sense.\n\n201\n00:12:23.339 --> 00:12:29.057\nSo it's almost like a bridge where\nthis table that joins these two,\n\n202\n00:12:29.057 --> 00:12:33.584\nmini to mini models,\nit's gonna get fairly a large.\n\n203\n00:12:33.584 --> 00:12:36.262\nAre there any concerns there,\nperformance, or\n\n204\n00:12:36.262 --> 00:12:40.062\nany concerns about indexing like\nreliability, or thing like that?\n\n205\n00:12:40.062 --> 00:12:41.503\n&gt;&gt; Yeah, absolutely.\n\n206\n00:12:41.503 --> 00:12:44.714\nAbsolutely, as this gets bigger and\nbigger you can imagine what\n\n207\n00:12:44.714 --> 00:12:47.508\na real wife representation of\nall the subs in the world,\n\n208\n00:12:47.508 --> 00:12:50.554\nthat table's probably got\na billions of rows in it, right.\n\n209\n00:12:50.554 --> 00:12:55.333\nSo there's all kinds of things that\nyou'd want to do to be able to break\n\n210\n00:12:55.333 --> 00:12:57.035\nthat huge data set down.\n\n211\n00:12:57.035 --> 00:13:00.275\nSo that once you know which\nauthor you're looking for\n\n212\n00:13:00.275 --> 00:13:02.941\nthen all that author's books are close by.\n\n213\n00:13:02.941 --> 00:13:07.498\nYou don't have to go searching through\nevery part of that billion record table.\n\n214\n00:13:07.498 --> 00:13:10.349\nYou want J.R. Tolkien, you've got The\nHobbit, you've got The Lord of the Rings,\n\n215\n00:13:10.349 --> 00:13:11.546\nthey're right next to each other.\n\n216\n00:13:11.546 --> 00:13:14.278\nThey're right next to each\nother at the library, and\n\n217\n00:13:14.278 --> 00:13:17.385\nin our database we'd get the same\nkind of effect with index.\n\n218\n00:13:17.385 --> 00:13:20.960\n&gt;&gt; All right, well, Manny,\nwe have seen some of these relationships.\n\n219\n00:13:20.960 --> 00:13:24.980\nWe haven't quite dove into code but I know\nwe needed to establish these before we\n\n220\n00:13:24.980 --> 00:13:28.103\nstarted building some of these other well,\nrelated models.\n\n221\n00:13:28.103 --> 00:13:31.564\nBut before we wrap this episode up,\nis there any final parting words, or\n\n222\n00:13:31.564 --> 00:13:34.019\nam I jumping the gun,\nyou have some more to show us?\n\n223\n00:13:34.019 --> 00:13:37.704\n&gt;&gt; Well, I just wanted to point out,\nwhere we're going with this,\n\n224\n00:13:37.704 --> 00:13:41.123\nwith this join mode is that this\nis a model of it's own right.\n\n225\n00:13:41.123 --> 00:13:44.555\nSo we can have validations on this,\nwe can have code on this.\n\n226\n00:13:44.555 --> 00:13:48.997\nOne validation that makes sense\nis that we obviously can't have\n\n227\n00:13:48.997 --> 00:13:52.790\nan authorship without having\nthe author and the book.\n\n228\n00:13:52.790 --> 00:13:57.420\nBut say we wanted to have more logic\nabout when something is published or not.\n\n229\n00:13:57.420 --> 00:14:01.097\nMaybe we want an authorship to be\nsecret until a certain date has passed.\n\n230\n00:14:01.097 --> 00:14:04.554\nThat kind of logic would\nprobably live in the authorship.\n\n231\n00:14:04.554 --> 00:14:06.173\nAnd then that could be a validation or\n\n232\n00:14:06.173 --> 00:14:08.745\nthat can be logic that I would\nwanna build in to this model.\n\n233\n00:14:08.745 --> 00:14:10.587\nSo I just wanna get you\nthinking about models,\n\n234\n00:14:10.587 --> 00:14:12.153\nhow they're connected to each other.\n\n235\n00:14:12.153 --> 00:14:17.081\nAnd how logic on model,\non data where it work might fit?\n\n236\n00:14:17.081 --> 00:14:20.074\n&gt;&gt; Well, Manny you've given us\na wonderful overview of these three main\n\n237\n00:14:20.074 --> 00:14:20.844\nrelationships.\n\n238\n00:14:20.844 --> 00:14:25.351\nAnd this is paramount as we've discussed\nearlier in this episode about how to\n\n239\n00:14:25.351 --> 00:14:26.890\narrange my application?\n\n240\n00:14:26.890 --> 00:14:28.122\nWhat does my data look like?\n\n241\n00:14:28.122 --> 00:14:29.138\nHow do I present that?\n\n242\n00:14:29.138 --> 00:14:31.036\nAnd how are things related together?\n\n243\n00:14:31.036 --> 00:14:35.439\nBecause effectively that decide some\nof well your architecture and or\n\n244\n00:14:35.439 --> 00:14:36.940\nsome other little bit.\n\n245\n00:14:36.940 --> 00:14:38.176\nSo thank you so much for that,\n\n246\n00:14:38.176 --> 00:14:41.349\ndefinitely stay tuned because we're\ngonna see how this comes to fruition.\n\n247\n00:14:41.349 --> 00:14:44.647\nBut for this episode we're\ngonna go ahead and cut it out.\n\n248\n00:14:44.647 --> 00:14:48.231\nSo signing off for DEVPRO.TV,\nI've been your host Justin Dennison.\n\n249\n00:14:48.231 --> 00:14:49.390\n&gt;&gt; I'm Andy Rodriguez.\n\n250\n00:14:49.390 --> 00:14:50.798\n&gt;&gt; And we'll see you next time.\n\n251\n00:14:50.798 --> 00:14:55.212\n[MUSIC]\n\n",
          "vimeoId": "241174285"
        },
        {
          "description": "In this episode, Manny and Justin add the ability to leave comments on a blog post. Manny further describes the relationship between comments and posts as well as the implications of comments belonging to a post.",
          "length": "1673",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-introtorubyonrails/techskills-introtorubyonrails-9-1-1-adding_a_comments_resource-111517-PGM.00_29_00_07.Still001.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-introtorubyonrails/techskills-introtorubyonrails-9-1-1-adding_a_comments_resource-111517-PGM.00_29_00_07.Still001-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-introtorubyonrails/techskills-introtorubyonrails-9-1-1-adding_a_comments_resource-111517-PGM.00_29_00_07.Still001-sm.jpg",
          "title": "Adding a Comments Resource",
          "transcript": "",
          "vimeoId": "243914322"
        },
        {
          "description": "In this episode, Manny and Justin decide to add a little style to the blog. Manny discusses the Rails Asset Pipeline in order to add stylesheets to the blog.",
          "length": "1609",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-introtorubyonrails/techskills-introtorubyonrails-10-1-1-adding_static_assets-111517-PGM.00_26_40_09.Still001.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-introtorubyonrails/techskills-introtorubyonrails-10-1-1-adding_static_assets-111517-PGM.00_26_40_09.Still001-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-introtorubyonrails/techskills-introtorubyonrails-10-1-1-adding_static_assets-111517-PGM.00_26_40_09.Still001-sm.jpg",
          "title": "Adding Static Assets",
          "transcript": "",
          "vimeoId": "243913094"
        },
        {
          "description": "In this episode, Manny and Justin decide to add a little style to the blog. Manny discusses the Rails Asset Pipeline in order to add stylesheets to the blog.",
          "length": "1833",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-introtorubyonrails/techskills-introtorubyonrails-11-1-1-adding_pictures-111517-PGM.00_31_42_08.Still001.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-introtorubyonrails/techskills-introtorubyonrails-11-1-1-adding_pictures-111517-PGM.00_31_42_08.Still001-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-introtorubyonrails/techskills-introtorubyonrails-11-1-1-adding_pictures-111517-PGM.00_31_42_08.Still001-sm.jpg",
          "title": "Adding Pictures",
          "transcript": "",
          "vimeoId": "243912053"
        },
        {
          "description": "In this episode, Manny and Justin explore the addition of authentication to the blog application. Manny further explores the gem Devise that makes adding authentication to a Rails app, specifically with installing and setting up Devise within the Rails project.",
          "length": "1902",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-introtorubyonrails/techskills-introtorubyonrails-12-1-1-authentication_using_devise-122017-PGM.00_34_23_05.Still001.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-introtorubyonrails/techskills-introtorubyonrails-12-1-1-authentication_using_devise-122017-PGM.00_34_23_05.Still001-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-introtorubyonrails/techskills-introtorubyonrails-12-1-1-authentication_using_devise-122017-PGM.00_34_23_05.Still001-sm.jpg",
          "title": "Authentication Using Devise",
          "transcript": "",
          "vimeoId": "248389724"
        },
        {
          "description": "In this episode, Manny and Justin integrate the Devise gem with a Rails application. Manny discusses the decisions that need to be made when tying authentication to the application as well as demonstrates the necessary logic to implement those decisions.",
          "length": "1394",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-introtorubyonrails/techskills-introtorubyonrails-12-1-2-authentication_using_devise_pt2-122017-PGM.00_25_52_06.Still001.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-introtorubyonrails/techskills-introtorubyonrails-12-1-2-authentication_using_devise_pt2-122017-PGM.00_25_52_06.Still001-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-introtorubyonrails/techskills-introtorubyonrails-12-1-2-authentication_using_devise_pt2-122017-PGM.00_25_52_06.Still001-sm.jpg",
          "title": "Authentication Using Devise Part 2",
          "transcript": "",
          "vimeoId": "248389060"
        },
        {
          "description": "In this episode, Manny and Justin explore types of automated testing and the reason behind those tests. Manny further explores the testing that are available in the Rails application.",
          "length": "1879",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-introtorubyonrails/techskills-introtorubyonrails-13-1-1-intro_to_rails_testing-122017-PGM.00_36_23_06.Still001.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-introtorubyonrails/techskills-introtorubyonrails-13-1-1-intro_to_rails_testing-122017-PGM.00_36_23_06.Still001-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-introtorubyonrails/techskills-introtorubyonrails-13-1-1-intro_to_rails_testing-122017-PGM.00_36_23_06.Still001-sm.jpg",
          "title": "Intro to Rails Testing",
          "transcript": "",
          "vimeoId": "248389242"
        },
        {
          "description": "In this episode, Manny and Justin explore writing tests using MiniTest. Manny further dives into the documentation to demonstrate the use of built in assertions.",
          "length": "1525",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-introtorubyonrails/techskills-introtorubyonrails-13-1-2-intro_to_rails_testing_pt2-122017-PGM.00_25_16_19.Still001.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-introtorubyonrails/techskills-introtorubyonrails-13-1-2-intro_to_rails_testing_pt2-122017-PGM.00_25_16_19.Still001-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-introtorubyonrails/techskills-introtorubyonrails-13-1-2-intro_to_rails_testing_pt2-122017-PGM.00_25_16_19.Still001-sm.jpg",
          "title": "Intro to Rails Testing Part 2",
          "transcript": "",
          "vimeoId": "248389489"
        }
      ],
      "title": "Intro to Ruby on Rails"
    }
  ],
  "url": "introrubyrails",
  "vLab": false
}
